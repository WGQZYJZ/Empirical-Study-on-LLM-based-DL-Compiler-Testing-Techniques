import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_275 = relay.var("var_275", dtype = "int16", shape = (11, 7, 3))#candidate|275|(11, 7, 3)|var|int16
var_276 = relay.var("var_276", dtype = "int16", shape = (11, 7, 3))#candidate|276|(11, 7, 3)|var|int16
bop_277 = relay.right_shift(var_275.astype('int16'), relay.reshape(var_276.astype('int16'), relay.shape_of(var_275))) # shape=(11, 7, 3)
output = relay.Tuple([bop_277,])
output2 = relay.Tuple([bop_277,])
func_295 = relay.Function([var_275,var_276,], output)
mod['func_295'] = func_295
mod = relay.transform.InferType()(mod)
var_296 = relay.var("var_296", dtype = "int16", shape = (11, 7, 3))#candidate|296|(11, 7, 3)|var|int16
var_297 = relay.var("var_297", dtype = "int16", shape = (11, 7, 3))#candidate|297|(11, 7, 3)|var|int16
output = func_295(var_296,var_297,)
func_298 = relay.Function([var_296,var_297,], output)
mutated_mod['func_298'] = func_298
mutated_mod = relay.transform.InferType()(mutated_mod)
var_319 = relay.var("var_319", dtype = "uint8", shape = (15, 2, 14))#candidate|319|(15, 2, 14)|var|uint8
var_320 = relay.var("var_320", dtype = "uint8", shape = (15, 2, 14))#candidate|320|(15, 2, 14)|var|uint8
bop_321 = relay.not_equal(var_319.astype('bool'), relay.reshape(var_320.astype('bool'), relay.shape_of(var_319))) # shape=(15, 2, 14)
output = relay.Tuple([bop_321,])
output2 = relay.Tuple([bop_321,])
func_326 = relay.Function([var_319,var_320,], output)
mod['func_326'] = func_326
mod = relay.transform.InferType()(mod)
var_327 = relay.var("var_327", dtype = "uint8", shape = (15, 2, 14))#candidate|327|(15, 2, 14)|var|uint8
var_328 = relay.var("var_328", dtype = "uint8", shape = (15, 2, 14))#candidate|328|(15, 2, 14)|var|uint8
output = func_326(var_327,var_328,)
func_329 = relay.Function([var_327,var_328,], output)
mutated_mod['func_329'] = func_329
mutated_mod = relay.transform.InferType()(mutated_mod)
var_422 = relay.var("var_422", dtype = "uint64", shape = ())#candidate|422|()|var|uint64
var_423 = relay.var("var_423", dtype = "uint64", shape = (16, 5, 2))#candidate|423|(16, 5, 2)|var|uint64
bop_424 = relay.bitwise_and(var_422.astype('uint64'), var_423.astype('uint64')) # shape=(16, 5, 2)
output = relay.Tuple([bop_424,])
output2 = relay.Tuple([bop_424,])
func_427 = relay.Function([var_422,var_423,], output)
mod['func_427'] = func_427
mod = relay.transform.InferType()(mod)
var_428 = relay.var("var_428", dtype = "uint64", shape = ())#candidate|428|()|var|uint64
var_429 = relay.var("var_429", dtype = "uint64", shape = (16, 5, 2))#candidate|429|(16, 5, 2)|var|uint64
output = func_427(var_428,var_429,)
func_430 = relay.Function([var_428,var_429,], output)
mutated_mod['func_430'] = func_430
mutated_mod = relay.transform.InferType()(mutated_mod)
var_565 = relay.var("var_565", dtype = "float32", shape = (1, 13, 8))#candidate|565|(1, 13, 8)|var|float32
uop_566 = relay.rsqrt(var_565.astype('float32')) # shape=(1, 13, 8)
output = relay.Tuple([uop_566,])
output2 = relay.Tuple([uop_566,])
func_594 = relay.Function([var_565,], output)
mod['func_594'] = func_594
mod = relay.transform.InferType()(mod)
var_595 = relay.var("var_595", dtype = "float32", shape = (1, 13, 8))#candidate|595|(1, 13, 8)|var|float32
output = func_594(var_595)
func_596 = relay.Function([var_595], output)
mutated_mod['func_596'] = func_596
mutated_mod = relay.transform.InferType()(mutated_mod)
var_616 = relay.var("var_616", dtype = "float64", shape = (12, 14, 12))#candidate|616|(12, 14, 12)|var|float64
var_617 = relay.var("var_617", dtype = "float64", shape = (12, 14, 12))#candidate|617|(12, 14, 12)|var|float64
bop_618 = relay.divide(var_616.astype('float64'), relay.reshape(var_617.astype('float64'), relay.shape_of(var_616))) # shape=(12, 14, 12)
func_594_call = mod.get_global_var('func_594')
func_596_call = mutated_mod.get_global_var('func_596')
var_622 = relay.var("var_622", dtype = "float32", shape = (104,))#candidate|622|(104,)|var|float32
call_621 = relay.TupleGetItem(func_594_call(relay.reshape(var_622.astype('float32'), [1, 13, 8])), 0)
call_623 = relay.TupleGetItem(func_596_call(relay.reshape(var_622.astype('float32'), [1, 13, 8])), 0)
func_594_call = mod.get_global_var('func_594')
func_596_call = mutated_mod.get_global_var('func_596')
call_626 = relay.TupleGetItem(func_594_call(relay.reshape(var_622.astype('float32'), [1, 13, 8])), 0)
call_627 = relay.TupleGetItem(func_596_call(relay.reshape(var_622.astype('float32'), [1, 13, 8])), 0)
output = relay.Tuple([bop_618,call_621,var_622,call_626,])
output2 = relay.Tuple([bop_618,call_623,var_622,call_627,])
func_628 = relay.Function([var_616,var_617,var_622,], output)
mod['func_628'] = func_628
mod = relay.transform.InferType()(mod)
mutated_mod['func_628'] = func_628
mutated_mod = relay.transform.InferType()(mutated_mod)
func_628_call = mutated_mod.get_global_var('func_628')
var_630 = relay.var("var_630", dtype = "float64", shape = (12, 14, 12))#candidate|630|(12, 14, 12)|var|float64
var_631 = relay.var("var_631", dtype = "float64", shape = (12, 14, 12))#candidate|631|(12, 14, 12)|var|float64
var_632 = relay.var("var_632", dtype = "float32", shape = (104,))#candidate|632|(104,)|var|float32
call_629 = func_628_call(var_630,var_631,var_632,)
output = call_629
func_633 = relay.Function([var_630,var_631,var_632,], output)
mutated_mod['func_633'] = func_633
mutated_mod = relay.transform.InferType()(mutated_mod)
var_766 = relay.var("var_766", dtype = "float64", shape = (12, 5, 15))#candidate|766|(12, 5, 15)|var|float64
uop_767 = relay.sigmoid(var_766.astype('float64')) # shape=(12, 5, 15)
func_628_call = mod.get_global_var('func_628')
func_633_call = mutated_mod.get_global_var('func_633')
var_797 = relay.var("var_797", dtype = "float64", shape = (14, 144))#candidate|797|(14, 144)|var|float64
var_798 = relay.var("var_798", dtype = "float32", shape = (104,))#candidate|798|(104,)|var|float32
call_796 = relay.TupleGetItem(func_628_call(relay.reshape(var_797.astype('float64'), [12, 14, 12]), relay.reshape(var_797.astype('float64'), [12, 14, 12]), relay.reshape(var_798.astype('float32'), [104,]), ), 3)
call_799 = relay.TupleGetItem(func_633_call(relay.reshape(var_797.astype('float64'), [12, 14, 12]), relay.reshape(var_797.astype('float64'), [12, 14, 12]), relay.reshape(var_798.astype('float32'), [104,]), ), 3)
func_594_call = mod.get_global_var('func_594')
func_596_call = mutated_mod.get_global_var('func_596')
call_801 = relay.TupleGetItem(func_594_call(relay.reshape(var_798.astype('float32'), [1, 13, 8])), 0)
call_802 = relay.TupleGetItem(func_596_call(relay.reshape(var_798.astype('float32'), [1, 13, 8])), 0)
func_427_call = mod.get_global_var('func_427')
func_430_call = mutated_mod.get_global_var('func_430')
var_808 = relay.var("var_808", dtype = "uint64", shape = ())#candidate|808|()|var|uint64
var_809 = relay.var("var_809", dtype = "uint64", shape = (160,))#candidate|809|(160,)|var|uint64
call_807 = relay.TupleGetItem(func_427_call(relay.reshape(var_808.astype('uint64'), []), relay.reshape(var_809.astype('uint64'), [16, 5, 2]), ), 0)
call_810 = relay.TupleGetItem(func_430_call(relay.reshape(var_808.astype('uint64'), []), relay.reshape(var_809.astype('uint64'), [16, 5, 2]), ), 0)
func_295_call = mod.get_global_var('func_295')
func_298_call = mutated_mod.get_global_var('func_298')
const_816 = relay.const([-9,4,-5,-10,-7,6,2,10,8,10,4,-9,2,5,6,-10,5,4,6,-8,2,8,7,-5,-3,-5,7,-5,3,-9,-6,-5,-2,10,4,2,9,1,7,5,9,6,-5,6,-2,8,-5,-6,3,-6,3,4,-9,2,-10,-5,-8,-6,-3,10,1,-1,2,-5,5,-3,-1,-4,1,-6,2,2,2,2,4,1,1,-2,-3,-7,10,9,-6,-4,9,-10,1,3,-1,1,9,1,-3,-5,1,7,2,7,-8,-9,-10,10,-2,-7,7,8,-9,8,-3,-10,-4,10,-2,-8,-7,-9,-5,-10,-3,-9,6,-8,8,9,-8,-8,6,10,4,-8,2,-9,6,3,-8,-2,10,9,4,9,-7,-4,-4,8,-2,-10,4,3,-1,-1,-7,-5,-3,-4,2,-8,-10,-1,9,-4,-8,5,-6,-5,-5,5,-9,10,5,-8,-9,8,-1,4,10,10,4,9,-8,-4,1,6,2,-6,3,-5,-2,-10,2,4,-3,8,-4,7,3,4,3,-8,7,3,7,2,9,-4,-7,-10,5,-10,-7,10,8,-6,3,5,5,1,6,-1,5,-5,-4,-5,-5,5,-9,3,-8,-8,2,-2,-1], dtype = "int16")#candidate|816|(231,)|const|int16
call_815 = relay.TupleGetItem(func_295_call(relay.reshape(const_816.astype('int16'), [11, 7, 3]), relay.reshape(const_816.astype('int16'), [11, 7, 3]), ), 0)
call_817 = relay.TupleGetItem(func_298_call(relay.reshape(const_816.astype('int16'), [11, 7, 3]), relay.reshape(const_816.astype('int16'), [11, 7, 3]), ), 0)
func_628_call = mod.get_global_var('func_628')
func_633_call = mutated_mod.get_global_var('func_633')
call_822 = relay.TupleGetItem(func_628_call(relay.reshape(var_797.astype('float64'), [12, 14, 12]), relay.reshape(var_797.astype('float64'), [12, 14, 12]), relay.reshape(var_798.astype('float32'), [104,]), ), 2)
call_823 = relay.TupleGetItem(func_633_call(relay.reshape(var_797.astype('float64'), [12, 14, 12]), relay.reshape(var_797.astype('float64'), [12, 14, 12]), relay.reshape(var_798.astype('float32'), [104,]), ), 2)
func_594_call = mod.get_global_var('func_594')
func_596_call = mutated_mod.get_global_var('func_596')
call_833 = relay.TupleGetItem(func_594_call(relay.reshape(var_798.astype('float32'), [1, 13, 8])), 0)
call_834 = relay.TupleGetItem(func_596_call(relay.reshape(var_798.astype('float32'), [1, 13, 8])), 0)
output = relay.Tuple([uop_767,call_796,var_797,var_798,call_801,call_807,var_808,var_809,call_815,const_816,call_822,call_833,])
output2 = relay.Tuple([uop_767,call_799,var_797,var_798,call_802,call_810,var_808,var_809,call_817,const_816,call_823,call_834,])
func_838 = relay.Function([var_766,var_797,var_798,var_808,var_809,], output)
mod['func_838'] = func_838
mod = relay.transform.InferType()(mod)
mutated_mod['func_838'] = func_838
mutated_mod = relay.transform.InferType()(mutated_mod)
func_838_call = mutated_mod.get_global_var('func_838')
var_840 = relay.var("var_840", dtype = "float64", shape = (12, 5, 15))#candidate|840|(12, 5, 15)|var|float64
var_841 = relay.var("var_841", dtype = "float64", shape = (14, 144))#candidate|841|(14, 144)|var|float64
var_842 = relay.var("var_842", dtype = "float32", shape = (104,))#candidate|842|(104,)|var|float32
var_843 = relay.var("var_843", dtype = "uint64", shape = ())#candidate|843|()|var|uint64
var_844 = relay.var("var_844", dtype = "uint64", shape = (160,))#candidate|844|(160,)|var|uint64
call_839 = func_838_call(var_840,var_841,var_842,var_843,var_844,)
output = call_839
func_845 = relay.Function([var_840,var_841,var_842,var_843,var_844,], output)
mutated_mod['func_845'] = func_845
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1132 = relay.const([[[-7.531201,-8.271749],[6.062212,0.372157],[-8.491360,3.213639],[3.298634,-6.129968],[-1.028881,0.602521],[3.269042,9.964803],[8.583916,-9.069487],[2.855596,-8.859595]],[[-4.158525,2.059220],[-1.150372,-9.273707],[5.190506,-2.535655],[6.757414,-8.762984],[-6.847487,-5.314041],[4.533736,4.203023],[6.094292,-2.737321],[-8.938797,-4.162996]],[[3.069719,-9.417028],[-0.709202,-4.705303],[-7.492372,5.466962],[8.311760,-9.081600],[6.543287,7.525133],[-8.542281,0.388655],[-6.827023,-1.856394],[-0.201908,0.796708]],[[4.729792,0.630878],[-3.065538,3.218828],[-2.855499,5.235149],[-4.846773,0.607450],[-5.461477,-3.075983],[-2.246331,-2.483052],[0.307295,3.830496],[-2.911447,9.162196]],[[-7.327258,0.303451],[-9.715893,8.465021],[1.705908,-6.165125],[-7.979701,7.325799],[-6.886587,0.425882],[-2.816025,5.498623],[8.634628,9.206770],[-3.203458,3.879063]],[[-3.112058,2.080131],[3.387458,2.019188],[9.076230,-2.775834],[-2.114816,-9.411384],[6.876706,0.465181],[-9.909059,7.525024],[8.806848,5.631059],[4.333161,-8.420755]]], dtype = "float64")#candidate|1132|(6, 8, 2)|const|float64
var_1133 = relay.var("var_1133", dtype = "float64", shape = (6, 8, 2))#candidate|1133|(6, 8, 2)|var|float64
bop_1134 = relay.power(const_1132.astype('float64'), relay.reshape(var_1133.astype('float64'), relay.shape_of(const_1132))) # shape=(6, 8, 2)
uop_1157 = relay.sigmoid(const_1132.astype('float32')) # shape=(6, 8, 2)
func_628_call = mod.get_global_var('func_628')
func_633_call = mutated_mod.get_global_var('func_633')
const_1160 = relay.const([-7.816975,-1.062244,-1.803993,-6.775749,-4.742600,-7.394019,-7.491892,-1.358218,-0.679737,3.461307,-4.045996,-3.576048,-5.992519,-2.471187,-1.822743,-4.522427,9.972801,-3.365612,3.375214,0.249731,5.886903,-2.106703,-9.000536,9.181742,0.355182,-5.304234,-6.162144,1.250094,-7.137533,-2.031333,5.472842,4.811372,-0.287094,-1.348762,8.564530,3.508633,8.556825,-0.421351,-9.291901,4.778957,-0.411201,-8.301566,-6.135499,7.638673,3.208675,5.037574,-4.034935,6.989886,-7.538287,5.267299,8.051456,-8.801668,-5.137114,5.300908,2.092965,6.330900,-5.060262,-2.373961,1.474637,-6.358392,-5.686779,8.491292,-5.258777,4.106801,-1.829886,-4.484693,1.755329,6.226564,7.073432,-2.401031,3.180292,-8.446404,8.698694,-4.809972,2.951946,6.935575,3.431156,-8.252913,6.930682,-2.016028,-9.516685,-1.198588,-3.142166,-6.244183,-5.474020,-3.254901,-4.958963,9.246786,1.410428,-6.110015,-5.722101,-3.687398,7.219141,-1.828634,-1.453719,-8.378945,5.082436,-5.668644,-6.779033,-6.484899,-0.038375,-0.483459,8.032675,-9.510192,-6.060440,8.409960,8.555885,-2.193103,1.620837,4.031509,1.057329,-3.544242,-3.718041,-0.737525,9.038260,6.707547,3.460250,-3.327146,-1.086593,-2.460526,-1.150223,4.594954,3.995936,-8.083716,-8.504992,2.131836,7.314208,2.073501,-8.406721,0.581539,-9.707108,5.783289,-1.826375,-5.980193,0.946959,5.956803,0.549453,5.268546,-4.996343,9.692774,0.717452,2.751285,-5.740559,4.506117,-6.866377,4.548299,4.656576,0.448200,-5.720095,-9.152212,-5.017509,7.449989,3.479155,-5.875823,-0.520987,-4.392237,-1.842266,0.739662,-9.919658,-8.799288,9.933606,8.629390,-6.246054,-9.099378,3.697480,-4.976717,8.732134,5.623075,-6.027381,-0.779438,9.140239,1.599539,-4.972171,-4.075319,9.977468,-3.553000,-7.515921,1.596596,-5.177127,-1.743073,8.300239,2.168468,-8.760546,7.731801,-9.818186,-1.697821,-9.484356,-2.957186,-0.357790,-0.698767,9.200924,-2.663134,-3.350085,-0.563565,1.035800,-8.226545,-6.927215,3.567922,-7.394226,1.596907,3.681531,-5.938434,2.685667,-4.552840,-9.494828,7.900087,7.751990,0.987209,-3.745429,-4.571340,-2.754644,-8.149284,-4.364225,-9.900107,-6.098553,-7.393653,1.158605,1.631746,9.027786,-1.885622,-7.455798,7.438673,0.531961,-3.780381,-7.182733,4.326468,8.096632,4.218217,-4.548512,1.309250,-4.125019,-2.521035,-4.409367,-6.389671,0.679215,4.710863,9.280578,-6.114964,-5.907282,-1.053575,5.535810,7.742812,7.929081,7.150990,-3.384674,-9.183475,-9.469334,-7.835223,-0.153033,-3.491684,9.659912,-5.167353,-2.707837,7.409460,5.232771,4.273989,-5.067161,9.482538,-5.647473,3.398247,5.278237,8.793158,-0.895563,2.636429,-8.031877,-8.659268,7.698670,-6.986188,2.362510,-3.846355,9.834302,-0.018668,6.713567,2.584555,-2.294524,-3.369483,-8.541465,5.008039,-0.282897,-8.272628,-7.531037,-7.598566,6.470337,7.479097,3.241247,3.264118,6.105250,-9.093792,7.251912,-8.470746,-9.419764,-5.043237,-7.818786,4.887413,-7.137900,-9.671401,-6.822242,-8.959923,1.185279,9.875254,-3.431108,-0.595621,-9.195391,-3.765175,-7.101497,8.871478,8.968071,-8.768062,5.487072,-0.425244,8.808126,-5.823455,-8.390124,7.042913,-7.626613,-7.894002,4.210446,-2.194179,4.465925,4.853452,-0.807886,-4.458725,-4.337361,9.993127,-1.667259,4.546146,-4.104069,8.347601,5.313671,0.080263,8.004347,-3.838263,-7.116762,-7.560573,4.059030,9.683185,-2.496105,9.059834,-6.286155,-3.365699,7.901014,-7.875012,6.061618,-0.960528,-7.444675,-9.486445,8.405072,-6.575194,-0.498890,7.281785,5.204308,4.359263,-9.582583,-9.710207,7.280897,6.833402,7.795339,7.419296,6.257766,0.001348,1.399293,-4.426355,-7.532429,-4.691079,0.975499,-1.907570,-7.061062,7.361020,-7.895036,-0.337128,-5.349268,-9.631075,3.063893,5.736585,5.598970,2.215675,-0.061228,8.084304,-2.801883,1.404064,2.122949,-1.425369,8.131535,-3.526625,-5.146495,-2.205861,-3.858421,-6.429447,-6.111551,1.448338,-6.818012,-9.736295,-0.104076,6.070804,5.162072,-0.262357,-7.213193,-7.664424,-8.020543,4.874166,2.025815,-8.413723,7.972165,-0.124733,-7.719422,6.545701,-4.059143,6.621360,-4.045539,5.684020,-1.793445,-2.674074,6.292360,-4.280522,-2.037371,-5.186649,1.798658,2.923706,1.374784,-6.560619,0.180651,-6.649534,7.453397,-6.202085,-5.120347,1.600014,-1.209055,3.999342,2.891468,1.368552,7.782760,2.630626,-7.700902,5.530153,-1.074910,4.766960,-5.024596,8.568914,-2.759620,1.076428,-1.838705,5.300446,-3.759612,-9.545593,-3.365540,9.176792,2.656869,2.692244,-0.540107,1.273031,-9.860325,-9.609252,-7.802450,4.231669,-5.218705,6.845264,4.130459,4.107624,5.480410,6.052603,6.863317,9.203306,-3.471977,9.384530,-6.620961,8.110336,1.638327,4.774197,-3.575915,-2.590950,3.282245,5.099205,-6.599508,-6.826300,-6.335536,-1.791306,8.846354,-4.336231,-9.935308,-7.006694,-3.689605,9.999246,2.904494,0.497721,1.383433,-5.667439,2.280411,-9.677908,-9.375065,2.505337,-8.891654,6.122990,8.242932,9.225055,4.318083,-6.666310,-1.262753,8.249704,-8.746927,9.782499,3.713569,-3.169156,6.459264,-9.487668,-8.770370,-7.192289,1.413733,-8.415234,4.255095,-9.097405,9.620143,-5.666815,7.155008,4.461549,-2.985017,3.128289,4.130962,-7.678880,-1.965504,-0.268674,-3.101838,-3.907574,-8.322229,-9.999296,-6.455569,-6.058816,-2.900803,1.519811,9.686128,3.895580,8.032935,1.096909,4.000837,7.975233,-0.215731,-4.357669,-4.862429,4.769236,3.148550,-3.392859,-1.193631,9.504542,7.765711,-9.996337,4.076908,-2.391376,4.448680,8.852022,3.589183,-7.006633,2.245207,-9.820245,0.669182,-8.296048,-5.518968,1.507139,-3.214670,0.894299,5.676800,-9.823849,7.108102,-4.462579,-0.606251,5.255795,-7.164349,0.366470,-1.338560,-2.988955,8.330163,-9.531722,1.619576,5.395629,-4.986466,-8.995020,-1.895522,6.308027,6.144706,-7.747292,7.145084,-9.281220,-8.771266,9.109359,0.571319,-0.640293,4.191978,-2.660539,-6.918967,-2.670574,-8.636089,4.098438,2.087233,2.022736,-7.824374,-2.149554,8.383990,2.700962,-9.868368,4.034102,-6.544010,5.318858,-3.882591,5.664578,6.025921,-7.989369,-1.646505,-0.513122,-3.138622,-8.900165,-9.809623,-9.256019,1.967399,5.496003,1.591734,-6.700317,-9.834191,1.107728,0.306374,-7.006214,-0.197407,4.438505,-5.963065,-0.478590,2.967764,9.530088,7.685234,2.051680,7.783835,-7.536163,9.745684,4.500894,-8.659358,7.745195,1.694712,-1.000761,-3.992223,-0.823868,-4.698807,1.183999,7.280819,9.997250,-8.730467,-5.163459,5.245846,-6.313160,0.687615,-2.721483,-6.712152,7.781713,2.201720,7.467474,9.472886,-4.109586,-2.795774,8.061053,-5.265625,-6.387516,-3.307361,5.126733,-2.482146,-9.782872,9.949016,5.148504,-8.466243,6.308808,2.603927,3.510029,-1.450171,-8.970965,5.034893,-1.597996,-5.604091,6.785604,5.619379,-8.315663,-4.629400,1.567368,8.946502,-4.812532,-0.950091,-2.891818,-6.233123,-7.796025,3.350634,-3.003034,1.501462,8.233044,7.430930,-2.979243,3.397329,-9.782026,9.417680,4.688158,3.699513,9.514957,7.023455,6.085312,8.113708,-4.528966,-0.469914,-6.384551,1.319714,0.332065,-3.845249,-9.740297,-7.418463,8.056186,-3.020418,-6.937861,-8.572189,6.530086,4.291132,-5.180503,3.602413,-2.394374,8.547701,7.077249,-4.171420,6.862615,-1.512615,-9.666843,7.202342,-6.111699,-9.765886,5.689684,-1.134641,-0.045349,5.731406,2.504073,3.689728,-5.860951,-8.559188,4.123467,-2.870211,0.412007,-3.441558,4.758016,2.497398,-1.006889,-0.102571,7.202280,-6.027835,5.272709,-1.310546,-7.633202,-4.470205,-7.422755,-9.295982,0.602270,-9.984634,9.208163,-1.782908,-3.927377,0.026249,9.172113,-8.291943,-1.040346,-6.488595,-1.740563,-1.370836,-8.453998,1.503021,4.052339,-9.022024,-2.787762,9.856698,-3.029676,-3.355575,-3.754892,3.151897,-0.874146,-7.039075,-1.363859,-6.929437,5.181141,-1.700539,7.426195,-6.059737,9.892105,1.604154,7.811632,-1.176223,-9.963394,3.631206,-6.671995,-3.084006,-3.884007,0.566089,4.488723,-0.056969,2.445155,-9.264416,-5.621649,9.503245,2.768177,-9.326319,-9.649643,-0.622531,5.332924,0.243555,-6.194994,-2.006072,-1.545591,-0.145097,2.908601,-9.419039,6.097944,8.477693,9.179392,1.709527,5.577748,7.414421,-7.403781,-4.983694,3.342122,6.730577,4.835903,9.823734,-0.643667,7.279515,-9.772462,-2.294387,-9.368349,8.831002,-4.735628,5.028844,-4.342887,8.607203,-1.260495,0.395244,1.666854,-5.319926,-9.382269,-6.064067,5.327337,6.179983,3.415933,5.649899,3.480520,3.073554,3.298288,-3.127873,-2.241401,5.531988,1.440346,-1.729513,3.766051,-6.547087,-6.468344,-8.991993,-1.551520,4.358421,8.108016,-1.312361,-4.553832,0.170827,-1.357880,5.980069,2.831328,5.903326,3.444449,-4.743191,-3.181405,7.884566,7.465528,-9.962930,3.739055,-1.479891,-6.788107,3.705975,-9.609710,6.039544,-5.968833,6.356094,4.608416,5.185436,7.126850,0.955645,-3.396686,-8.173857,1.678904,1.064243,9.677759,5.878227,-8.392123,-7.454768,9.420125,7.181386,-2.379813,-7.255757,-5.375850,7.868380,6.044708,6.749626,1.565651,3.556097,8.104950,2.590427,-2.181597,-1.602817,0.560745,-2.469338,-3.492695,9.387142,-5.002132,-4.952325,6.988800,-7.678097,7.418479,-1.517686,-2.002053,6.611465,-3.772854,-6.113641,6.076167,-1.054300,1.053789,-8.634265,-5.935369,-6.701404,7.150557,2.198305,-1.600319,6.042730,-9.864764,-2.976318,2.085500,-5.581779,-6.985593,0.964012,4.521825,2.326082,-4.690761,7.250442,5.404169,1.414500,-0.404658,7.935455,4.039204,-7.365900,-8.303839,-7.418464,-6.164897,4.641268,0.201454,1.953645,-3.171272,0.522583,-7.990809,-2.435735,-5.997469,-0.008635,-0.543055,-5.925245,-6.156154,5.381609,5.016395,-2.607271,-5.606741,5.773816,-2.547947,7.369317,8.143509,7.140322,9.466211,8.599524,-1.967392,-9.426587,1.786843,-7.301063,-3.795882,-9.771244,0.641015,0.005214,-6.890252,3.283185,4.874690,-2.004470,2.234687,-2.570152,6.002389,-2.055699,8.232983,-1.969690,6.149600,-7.799495,9.946605,-3.871948,-8.420322,-4.646823,-3.919718,6.417859,-1.910852,-8.726427,-9.875485,-8.313535,-1.092887,6.106082,-3.038183,-5.034227,-8.189780,8.583515,9.741256,-1.388052,0.596558,-8.087599,-0.189700,-0.595307,1.679252,-7.580646,2.017196,5.140375,3.259928,-0.193175,6.957101,-9.765600,9.906711,8.547205,2.360428,-1.994075,-8.593529,-4.753758,7.649705,-4.731277,7.291184,-2.690527,0.638569,-0.958374,-1.862488,-6.003232,3.986697,3.618992,-0.629671,7.011903,-5.589373,4.536764,-8.131048,5.893876,-3.723677,0.749973,-1.020388,-3.371902,7.987008,-7.376794,7.238389,0.789457,5.346971,-6.245086,3.257766,7.571261,0.069450,9.245955,-3.906616,8.422974,-1.981458,-1.068002,-4.015042,-5.634021,4.756845,7.344843,-7.850916,5.994223,3.462407,0.760140,2.194925,-5.840721,1.436883,9.718986,-5.820570,-7.497743,4.353112,8.083639,-2.736453,9.667376,5.047892,-6.873207,-3.156327,0.935331,7.225494,-2.219028,-5.568468,-0.405053,-7.307976,3.005921,-1.793602,9.299270,9.903597,-0.338911,2.651701,6.542367,-2.996424,-8.105255,-9.460366,4.638272,-5.780254,-3.225110,-4.368105,0.514686,-1.239128,-4.151293,-7.316462,-9.168319,-4.050125,8.675131,3.666352,-2.828269,9.626140,-4.616094,0.487938,1.532856,0.823351,-0.752028,-9.878933,3.731808,-0.719453,-6.023596,1.749146,-1.288370,7.430382,7.553528,9.021754,-9.512410,-2.934364,-7.847975,-5.113461,-0.232599,4.598202,-3.675809,-6.125021,8.366911,3.605808,9.057780,-1.189540,-3.686336,-4.343592,-4.179616,-3.049020,-5.779276,6.904764,-7.706431,-0.726421,-7.299919,7.388858,-8.214168,-7.575188,-8.690695,4.926458,-3.856822,-1.667914,3.837329,6.932589,-4.730283,-1.587803,-1.311696,4.970257,-1.696798,7.327268,3.486980,3.982524,-7.681011,1.588867,7.777127,8.983556,5.107116,-4.689889,-3.347925,-0.666930,0.913232,9.802176,7.835880,-0.701828,-0.961429,-5.097871,-8.797400,4.277081,1.727159,-5.915961,5.729528,-3.160810,7.448668,5.418708,-7.608634,-8.716990,8.312845,-7.688062,-1.125091,-9.231398,-0.786863,-1.955923,-7.649424,-9.725307,2.304538,-1.828594,-5.066992,5.661497,3.048117,7.557471,-3.130382,-0.660799,6.390433,-6.073541,9.273038,-6.078563,7.453309,8.558331,5.527607,0.054571,-1.053619,5.820490,6.828599,-8.807950,-8.881787,-8.859450,9.872790,-9.600653,5.899088,-1.391533,5.904455,4.899988,6.740644,-1.724021,-7.660889,3.669381,3.144807,5.639145,9.567129,0.467624,2.221622,2.317417,-9.012329,2.720571,-0.068280,2.687249,-3.501281,1.517887,1.348898,-1.451957,6.097167,-0.585624,0.806232,6.881969,9.436935,-3.564646,0.208709,2.692018,0.491302,0.907912,-0.268873,8.841430,9.818650,-6.288714,-7.944595,-2.017546,5.465912,-7.931402,-8.222341,0.432996,-7.466766,-2.137263,6.751900,-1.172067,-3.640715,7.381669,-2.406852,-4.001625,6.339745,-6.457432,3.036158,6.109424,8.654596,0.678834,-7.288590,5.492721,-6.145151,-8.006222,4.180971,-2.963768,-7.584879,-3.575247,-6.155511,7.169945,2.442382,0.287873,-1.255395,5.648117,-7.321454,-5.979715,-8.536057,-8.571217,3.243700,-7.765927,1.303736,3.774604,-4.380405,-0.679014,-3.262827,-3.972858,0.360838,-1.672145,0.390602,3.050966,8.231202,-4.711716,8.299411,-6.972196,0.420374,3.039913,-6.796117,-9.448273,-2.044482,3.959510,-4.020693,-4.923342,-1.819586,-5.602983,5.772013,1.910838,9.309011,-8.421766,-5.706052,4.796897,7.455849,-1.929892,2.999365,6.215278,6.399606,-4.592547,-8.457088,5.150889,-3.772274,-2.434682,2.786099,-1.628738,2.430968,2.569016,7.552597,5.040444,3.683520,-9.244427,6.097320,-5.423017,7.101272,-8.500400,-2.744316,-8.305582,6.118189,-2.839614,-8.311444,2.901325,3.548323,-2.039376,-7.502880,7.040417,2.152786,-1.075330,9.999269,-0.458745,-5.639341,0.196127,-4.831510,5.136068,-1.100970,1.956920,-3.130001,2.379569,8.277584,-6.913501,5.973223,-2.381382,-5.610437,7.189778,7.633005,-7.284805,4.407970,-0.210332,6.861736,8.896275,6.629663,-2.672148,-4.339575,0.986227,6.558141,2.857497,-9.163086,-2.385897,-0.631328,-2.044726,6.732196,3.499331,-3.136280,-7.353736,3.421931,-0.738860,-1.000565,-3.790554,-8.580601,2.068087,-0.825278,-4.269788,-7.579811,5.070971,2.809828,-5.267775,-2.699445,5.644180,-6.168367,-6.302496,2.057806,-3.377298,6.521203,-3.029739,8.204470,-8.790205,-6.351014,-9.087974,2.730932,-5.651065,4.365764,4.564305,-1.685981,7.726719,-1.413322,2.707000,-3.588663,-5.122068,-0.902294,9.270350,-4.648449,5.286824,-7.081678,0.998451,0.959780,-1.083540,-0.749178,-5.080670,-4.268459,0.130263,1.687680,9.872309,2.582832,-2.206701,-3.188307,2.620919,1.384943,-8.243977,-4.902505,8.924597,0.866412,-8.774086,2.468311,-1.060707,-6.250802,-7.282690,-5.716121,9.655252,4.664147,-6.354142,1.990987,-2.169901,-1.085606,5.903250,-6.304841,5.788864,-3.793298,-8.496821,-7.680403,-2.528418,-1.986328,6.684238,-1.644900,-9.192477,-2.523974,1.793889,-0.846661,-3.206461,-7.507743,3.871676,-5.041435,-1.688814,5.457186,-2.512101,-5.042111,-9.441114,6.536019,7.527184,6.032468,-4.326928,-6.926968,8.062145,8.628188,-6.039515,4.291424,8.990038,-7.026936,3.005380,-5.554360,8.654639,-0.149415,5.749847,7.060586,5.955350,3.036369,-3.868054,5.237464,-5.956613,1.839539,4.784034,3.622994,-7.728161,-8.501055,8.980360,8.132775,2.229361,-5.467711,-2.677600,-6.879411,-0.660842,2.221472,9.196282,9.883154,9.271993,-7.320151,9.344063,1.856376,0.743686,8.574696,-4.203387,-6.941131,-5.532992,4.102899,-4.063524,-8.324187,8.162893,-6.800884,0.441336,-6.134041,-2.423218,8.487168,-4.181553,-2.156402,-7.682763,-3.985985,-2.403829,7.007453,-2.108978,7.624954,-8.065595,0.768091,0.814434,-4.904961,3.541928,-2.092245,-8.618642,-2.056267,-2.363770,-7.389140,-1.248735,-6.083721,3.943580,-8.209158,-0.058460,6.918949,6.720874,-6.774880,-8.867206,3.026957,9.931970,9.004462,7.038377,6.288100,-6.566293,2.732290,-4.926643,-8.660240,6.297895,1.005234,-3.524013,-8.479606,-6.893677,0.659027,1.810374,-2.164075,-2.169544,-4.570207,6.760338,0.234658,-4.247469,5.986785,-5.139957,-9.592846,-2.559852,4.580265,-7.760966,-3.839811,-5.551494,1.033224,9.335489,7.990834,-4.391508,8.469568,3.866661,8.089855,5.418398,-2.295101,-3.828168,1.531180,3.890300,-5.140394,-3.385729,-7.000638,-9.878393,1.612485,7.422951,5.374808,-9.754596,-0.598606,3.043873,1.725152,-0.764676,4.273608,5.074046,5.621160,0.818213,-1.037648,-5.017679,0.681043,2.784977,-5.380548,9.671666,-3.429033,0.545811,8.614761,-8.355443,9.222671,-3.199800,-9.664111,-1.274313,-0.285819,6.176931,3.490313,0.210071,-9.325775,6.448159,-7.688707,-9.673587,9.031835,6.145677,-5.640020,4.482101,-0.710503,-1.042866,6.548199,-1.787906,6.577603,1.006528,3.644377,5.215589,2.455550,5.177550,5.247310,-4.190314,0.642287,1.853913,9.562287,1.478211,-1.276611,-3.942640,-6.823118,-3.514441,-1.995959,7.570194,-1.265060,5.412584,6.635364,6.171438,-1.936970,2.396371,8.218562,-7.205146,-1.925209,-5.856998,0.926526,-3.812523,5.232464,2.975306,-9.960075,-6.603998,7.973752,-1.454705,-4.338016,8.705142,9.456255,-4.006911,5.306448,-6.701930,-9.971133,9.302431,8.746742,-8.817967,-9.217155,3.601925,-4.088850,9.717713,0.264254,-8.615622,-2.346027,4.525481,5.226129,-0.120644,-4.842113,-5.220796,-2.686700,-3.242424,5.294289,-7.970284,7.942026,4.603894,2.381559,1.415017,-9.130602,-7.135877,-0.300612,3.136741,3.376945,-5.906510,-4.000625,0.477185,-4.109591,-5.760685,-8.883282,3.855738,-2.820911,1.314795,-4.848786,1.338777,-8.687091,0.476390,8.230721,-8.756838,-7.016704,-0.925751,6.764723,5.341338,2.036107,-4.732086,3.011868,0.983802,-7.602112,3.891832,-8.148532,5.002609,4.119427,1.044940,6.780294,8.350253,-5.959472,-2.459076,8.711420,-4.254644,-4.956190,-8.224306,-4.460564,5.699337,-5.957350,9.085296,2.886746,-8.526373,3.133882,5.299242,4.387700,8.451375,-5.078307,-1.255956,0.130759,3.116635,3.436878,2.355708,9.873111,-3.160985,-8.589208,-4.823006,-8.451994,-3.557409,-9.085693,4.178384,-3.587557,-3.327077,-6.845892,3.659845,2.197240,5.227947,-4.131955,-6.822549,-2.992015,-2.348838,5.367306,-9.376948,4.557045,9.405445,4.824830,0.279673,6.586743,-5.949164,-4.081597,-7.022014,-9.975427,-4.171360,-3.296335,4.607492,6.434987,3.541056,-9.437023,4.605035,-1.305555,-4.390548,2.863527,-6.149591,3.729379,-5.394548,-3.960336,1.973788,9.292243,2.355059,-7.127036,-8.068221,-4.012306,-6.718167,4.982103,-3.725674,6.897333,3.299369,0.556617,5.030851,2.698600,-7.057667,-6.035861,-6.699144,-6.612101,-9.562423,-9.726078,-0.732845,-7.527350,-2.729701,-3.067808,-4.851324,8.900474,-4.859939,3.529678,8.483146,-9.230431,-1.218976,4.093936,-5.667860,-5.836515,-2.389237,3.173662,-6.591587,-4.983147,0.814478,4.250090,-3.394072,-3.313650,6.719041,-9.484754,-5.271130,5.609585,-9.300370,6.119591,-9.957744,7.948727,5.425501,1.070147,-3.603829,-7.023051,5.329873,6.216159,-4.852320,-9.514641,8.161516,-3.957577,7.342210,-2.051243,-2.035293,-8.524293,-2.260081,5.993351,-7.399528,9.854751,-5.283955,4.474018,5.307598,4.043927,-2.774754,-7.378746,2.303339,3.675789,-5.606676,-6.282483,6.209575,0.973243,-1.835019,5.586555,4.226008,4.507144,-1.701406,8.787272,-2.947116,6.200661,2.617979,-4.343537,-4.214688,8.124680,-5.450148,5.543989,1.521482,1.880344,-7.183476,-2.274972,1.680385,5.766646,-8.300203,3.457918,-7.214532,1.438320,-0.552688,-8.711266,8.400324,9.027824,0.299455,-0.496705,9.912124,-1.375986,-9.354967,-9.927570,-0.259766,-3.479980,-7.592079,5.466253,-8.998013,-4.154321,8.213984,-6.895050,8.180503,-3.202135,-3.473734,3.442222,-7.792707,4.596208,-1.397730,-1.337798,-6.791769,-8.435166,-8.363753,2.368252,-3.130213,-4.944652,-4.826046,4.234455,-0.767031,-5.560553,-9.882782,1.058798,6.689477,1.180252,-1.128980,-0.889537,-2.797761,4.414050,3.536003,-0.265051,8.283495,1.167817,2.987264,6.277058,-8.887506,-3.250126,7.425283,5.049290,3.596946,-7.484037,-0.783582,-0.994649,6.040084,9.941996,-9.061282,4.428966,-1.496426,9.888972,1.285689,-9.905396,-5.721820,-8.564370,-8.093408,-5.771189,-0.913610,1.976838,2.593455,-2.366411,1.657426,6.058368,1.363201,1.432107,0.669053,7.437067,2.015140,-7.511005,-2.002042,3.847624,-3.489329,-1.637788,2.381716,3.692378,3.235016,6.400372,-1.957146,-7.849329,3.871818], dtype = "float64")#candidate|1160|(2016,)|const|float64
var_1161 = relay.var("var_1161", dtype = "float32", shape = (104,))#candidate|1161|(104,)|var|float32
call_1159 = relay.TupleGetItem(func_628_call(relay.reshape(const_1160.astype('float64'), [12, 14, 12]), relay.reshape(const_1160.astype('float64'), [12, 14, 12]), relay.reshape(var_1161.astype('float32'), [104,]), ), 0)
call_1162 = relay.TupleGetItem(func_633_call(relay.reshape(const_1160.astype('float64'), [12, 14, 12]), relay.reshape(const_1160.astype('float64'), [12, 14, 12]), relay.reshape(var_1161.astype('float32'), [104,]), ), 0)
uop_1163 = relay.log(uop_1157.astype('float64')) # shape=(6, 8, 2)
uop_1165 = relay.atan(uop_1163.astype('float64')) # shape=(6, 8, 2)
output = relay.Tuple([bop_1134,call_1159,const_1160,var_1161,uop_1165,])
output2 = relay.Tuple([bop_1134,call_1162,const_1160,var_1161,uop_1165,])
func_1187 = relay.Function([var_1133,var_1161,], output)
mod['func_1187'] = func_1187
mod = relay.transform.InferType()(mod)
mutated_mod['func_1187'] = func_1187
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1187_call = mutated_mod.get_global_var('func_1187')
var_1189 = relay.var("var_1189", dtype = "float64", shape = (6, 8, 2))#candidate|1189|(6, 8, 2)|var|float64
var_1190 = relay.var("var_1190", dtype = "float32", shape = (104,))#candidate|1190|(104,)|var|float32
call_1188 = func_1187_call(var_1189,var_1190,)
output = call_1188
func_1191 = relay.Function([var_1189,var_1190,], output)
mutated_mod['func_1191'] = func_1191
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1328 = relay.var("var_1328", dtype = "float64", shape = (9, 12, 15))#candidate|1328|(9, 12, 15)|var|float64
uop_1329 = relay.asinh(var_1328.astype('float64')) # shape=(9, 12, 15)
uop_1343 = relay.exp(uop_1329.astype('float32')) # shape=(9, 12, 15)
func_594_call = mod.get_global_var('func_594')
func_596_call = mutated_mod.get_global_var('func_596')
var_1346 = relay.var("var_1346", dtype = "float32", shape = (104,))#candidate|1346|(104,)|var|float32
call_1345 = relay.TupleGetItem(func_594_call(relay.reshape(var_1346.astype('float32'), [1, 13, 8])), 0)
call_1347 = relay.TupleGetItem(func_596_call(relay.reshape(var_1346.astype('float32'), [1, 13, 8])), 0)
func_427_call = mod.get_global_var('func_427')
func_430_call = mutated_mod.get_global_var('func_430')
var_1349 = relay.var("var_1349", dtype = "uint64", shape = ())#candidate|1349|()|var|uint64
const_1350 = relay.const([-3,-2,-7,-10,6,-8,-6,-8,-8,9,-10,3,8,2,-5,9,-9,7,-3,7,-1,-4,6,7,-6,9,7,-6,6,-3,10,-8,-6,6,-2,-9,-6,9,-2,-5,5,6,5,-9,9,-1,7,-9,6,4,-8,10,3,5,6,-6,5,-4,-4,-1,-6,-4,-4,8,10,-8,3,2,7,-3,-7,-7,1,-3,6,-7,-6,7,-8,10,5,4,-5,-5,-4,-9,-7,5,8,2,4,8,2,10,8,-8,7,2,10,6,8,-7,2,5,-2,3,8,-5,-7,-2,6,-2,2,5,-3,-6,-6,8,-6,7,-1,3,-4,-2,5,9,-2,4,-5,7,-4,9,-9,8,-9,3,-9,-9,-9,3,-3,-5,3,2,-2,6,-6,-8,3,8,2,1,-2,-4,9,4,2,-10,3,-3], dtype = "uint64")#candidate|1350|(160,)|const|uint64
call_1348 = relay.TupleGetItem(func_427_call(relay.reshape(var_1349.astype('uint64'), []), relay.reshape(const_1350.astype('uint64'), [16, 5, 2]), ), 0)
call_1351 = relay.TupleGetItem(func_430_call(relay.reshape(var_1349.astype('uint64'), []), relay.reshape(const_1350.astype('uint64'), [16, 5, 2]), ), 0)
output = relay.Tuple([uop_1343,call_1345,var_1346,call_1348,var_1349,const_1350,])
output2 = relay.Tuple([uop_1343,call_1347,var_1346,call_1351,var_1349,const_1350,])
func_1353 = relay.Function([var_1328,var_1346,var_1349,], output)
mod['func_1353'] = func_1353
mod = relay.transform.InferType()(mod)
mutated_mod['func_1353'] = func_1353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1353_call = mutated_mod.get_global_var('func_1353')
var_1355 = relay.var("var_1355", dtype = "float64", shape = (9, 12, 15))#candidate|1355|(9, 12, 15)|var|float64
var_1356 = relay.var("var_1356", dtype = "float32", shape = (104,))#candidate|1356|(104,)|var|float32
var_1357 = relay.var("var_1357", dtype = "uint64", shape = ())#candidate|1357|()|var|uint64
call_1354 = func_1353_call(var_1355,var_1356,var_1357,)
output = call_1354
func_1358 = relay.Function([var_1355,var_1356,var_1357,], output)
mutated_mod['func_1358'] = func_1358
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1381 = relay.const([[[-4.855085,8.141028,7.890319,0.987644,-3.156932,7.629830],[-3.170363,-0.411578,-2.465016,7.561682,-6.858580,9.931146],[-9.858416,-5.328134,5.157299,2.335696,9.105608,3.033309],[9.992330,-4.317919,2.364089,-6.194331,-7.159287,1.819483],[-4.554373,-9.346548,-4.796848,2.275101,9.470290,9.088232],[8.173953,-5.225481,9.263519,-8.257810,2.786282,-2.372492],[-0.307400,-2.326798,-2.244527,3.093822,-8.427944,8.237867],[2.085379,7.805068,-6.094171,8.196843,-1.424606,-6.651154],[-5.302491,-1.584330,-5.658437,-6.536589,-6.270916,9.817969],[-5.206734,2.072125,8.043875,0.156505,7.586097,7.629754],[0.414347,-2.810201,9.829338,9.935157,9.419966,4.888168],[1.722574,-9.587907,-7.254142,-0.590507,-1.816493,-7.618248]],[[-8.002276,-2.112983,-6.145603,2.091658,-2.288108,2.503524],[4.992192,1.795331,2.723698,-5.066613,9.544298,-3.308601],[-2.971511,-9.537511,-4.260712,-9.078499,4.906164,-6.670008],[9.582531,3.028263,8.047674,1.444903,-8.245863,9.856415],[8.747716,-9.623656,-7.359037,-6.638321,6.491708,5.196658],[5.433207,-2.730659,-9.264436,5.273221,-1.057193,-2.065760],[9.850599,-4.594480,-3.712217,7.850899,7.225553,-5.214357],[-8.847730,2.798533,-7.016614,4.425710,-7.498233,-3.173864],[6.962579,-0.688540,-2.044257,9.047575,-1.625956,5.758211],[-8.130822,-8.356633,-0.458092,7.745081,-4.171224,-2.642420],[-5.477141,-1.079796,3.108775,6.641443,-7.817877,3.213618],[-2.441867,1.055672,-1.581860,-0.654660,6.412655,1.756166]],[[3.520567,5.196427,4.734446,-7.169082,9.303286,-5.871139],[2.059768,1.846697,-9.537060,7.886056,-1.610636,5.925268],[9.427248,8.524401,4.426064,7.468371,0.161287,-6.744719],[-6.936075,-7.922433,1.603626,6.269672,9.786675,4.011820],[5.823694,-1.095062,6.507372,-8.410598,6.166535,5.106777],[-4.192166,-5.125203,2.491212,-7.565204,3.336519,-9.381225],[-7.473549,-2.592674,-2.356411,9.961526,-8.233978,8.675038],[2.384886,-7.998368,9.594540,4.547362,-7.078069,-7.551265],[-3.007977,-5.883876,9.186504,2.907112,-5.972929,7.079028],[9.680381,-1.312441,5.569903,1.786168,2.213556,5.629110],[1.722666,1.386585,-2.360228,-4.658165,-8.906565,0.385264],[5.660815,3.283650,-9.071339,-4.778070,4.030882,4.199607]],[[6.805565,-8.269158,-8.061126,6.960668,-6.305965,-2.299727],[-2.093615,-1.686779,4.362264,0.010503,-3.719886,-4.442447],[5.598284,-5.347405,2.974933,9.858152,-3.086371,2.723522],[-9.534062,-1.237163,5.518901,2.074546,9.564729,9.835048],[3.041768,8.293904,7.228659,-4.764284,0.161749,-1.083954],[-6.253464,1.115841,5.238473,-0.159985,3.557646,-7.316462],[6.613692,4.255804,9.481937,5.695276,5.005466,-3.777206],[-2.076651,8.063612,5.426181,-1.966801,-7.555222,-7.172645],[-0.711404,3.728406,-7.145172,9.540968,7.445500,-2.308513],[5.067998,-9.410574,9.136520,6.745302,8.154042,0.879910],[-7.729866,9.754612,9.370415,-6.210654,-9.435637,0.975223],[-9.240154,-9.215148,3.775484,-2.975135,-0.215898,1.130254]],[[-6.882411,5.423623,-6.805263,-8.433195,-1.961481,3.757189],[-7.777665,8.513466,0.034980,2.399684,4.407776,4.958579],[-7.301569,4.626444,-3.551143,-8.065864,-8.839947,9.466260],[-5.263146,4.479669,3.728252,-8.217412,8.465154,-7.950696],[7.772373,-6.619252,2.167237,8.576225,6.044407,-0.796184],[-3.129525,-9.045367,-6.977368,4.602903,-2.352727,7.841034],[1.131923,5.187344,3.663560,4.077328,2.767127,-5.985199],[4.188236,-6.892148,-4.727206,8.905183,-4.880627,8.564051],[8.681900,4.830908,-0.426527,4.237575,7.829383,-9.312460],[-6.430473,5.666605,5.842907,-8.781510,5.097060,4.428858],[9.258764,-9.653485,3.548334,-8.087343,-9.996576,-5.977162],[-3.626910,-2.194250,-6.726983,-5.732748,-8.206286,-5.804850]],[[2.999577,7.739030,5.816790,1.908566,8.856887,-2.397175],[5.922343,1.955589,8.473112,-2.313597,7.237971,0.915794],[9.712798,-8.678347,3.129240,7.850465,0.263320,7.599490],[-0.921844,0.812544,3.462783,-3.307934,-1.341378,-0.781999],[6.886622,6.864706,-3.463485,-6.763345,-5.452970,3.536768],[4.684413,1.754780,6.073247,5.595819,4.364137,5.160359],[5.586250,7.798887,2.116474,1.041807,2.489193,9.665533],[3.248175,3.792248,-0.255616,9.377880,-4.794955,-1.907788],[7.921665,1.237388,-3.612346,0.322426,-4.385406,3.965863],[7.849980,-7.370284,9.998826,-9.542237,3.658633,4.279797],[-4.717284,5.251898,9.677859,9.387502,3.139608,4.087003],[1.375453,8.856799,0.368329,-7.232910,9.872328,2.998813]],[[-1.438437,7.246161,-4.893290,-0.201613,6.018971,9.198649],[1.441730,-0.316171,8.525261,9.346991,-3.883411,-9.400469],[2.944910,-4.191081,5.955983,-6.082908,5.576939,9.715500],[-6.007750,4.837848,9.181036,-7.211000,4.353961,9.517546],[-3.269369,9.860681,-2.499179,-7.386803,-3.114709,-5.749021],[7.899592,-4.632159,4.993589,-5.826607,6.626231,3.410062],[-6.737083,1.162352,-1.582661,-0.022578,3.019947,-5.901375],[4.012208,-5.265247,2.428410,6.315552,6.459720,-6.439242],[3.307471,-6.161882,-6.242089,0.140111,2.140909,-4.967786],[5.329211,-7.021201,-5.211824,-1.192809,8.403274,-3.389938],[-5.894944,5.472619,8.670622,-4.091805,-2.646649,4.197637],[-4.509271,2.545776,3.417079,-8.592850,-9.022245,-8.737446]],[[7.277309,-2.141793,3.594104,1.923052,-2.929377,6.316641],[-4.181829,-3.427929,-8.206923,5.069094,-0.742365,-7.410054],[-3.839843,2.008304,0.131509,-6.857856,-9.064461,5.637435],[3.976460,1.531575,-4.706579,0.912657,-7.235571,5.082026],[3.102042,-3.411634,-5.252163,5.494837,5.164090,5.108058],[-4.870436,7.343238,3.185017,-6.560436,3.073905,-2.559284],[-3.559428,5.874029,-1.021536,1.453479,3.007120,2.444194],[-6.579053,7.024476,0.432916,-8.757632,-7.018384,4.161427],[5.764571,-2.278643,1.972254,-0.439287,-7.439785,1.973193],[-7.665708,-4.709209,-2.702012,3.518065,-2.580445,-7.243769],[-3.078624,-7.073340,-6.445018,-0.437154,0.456611,-2.199425],[6.115982,3.961909,-5.489464,-1.412320,3.263978,7.088078]]], dtype = "float64")#candidate|1381|(8, 12, 6)|const|float64
uop_1382 = relay.asinh(const_1381.astype('float64')) # shape=(8, 12, 6)
output = uop_1382
output2 = uop_1382
func_1386 = relay.Function([], output)
mod['func_1386'] = func_1386
mod = relay.transform.InferType()(mod)
mutated_mod['func_1386'] = func_1386
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1386_call = mutated_mod.get_global_var('func_1386')
call_1387 = func_1386_call()
output = call_1387
func_1388 = relay.Function([], output)
mutated_mod['func_1388'] = func_1388
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1386_call = mod.get_global_var('func_1386')
func_1388_call = mutated_mod.get_global_var('func_1388')
call_1432 = func_1386_call()
call_1433 = func_1386_call()
func_1386_call = mod.get_global_var('func_1386')
func_1388_call = mutated_mod.get_global_var('func_1388')
call_1439 = func_1386_call()
call_1440 = func_1386_call()
uop_1465 = relay.sigmoid(call_1439.astype('float32')) # shape=(8, 12, 6)
uop_1467 = relay.sigmoid(call_1440.astype('float32')) # shape=(8, 12, 6)
output = relay.Tuple([call_1432,uop_1465,])
output2 = relay.Tuple([call_1433,uop_1467,])
func_1482 = relay.Function([], output)
mod['func_1482'] = func_1482
mod = relay.transform.InferType()(mod)
mutated_mod['func_1482'] = func_1482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1482_call = mutated_mod.get_global_var('func_1482')
call_1483 = func_1482_call()
output = call_1483
func_1484 = relay.Function([], output)
mutated_mod['func_1484'] = func_1484
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1515 = relay.var("var_1515", dtype = "float32", shape = (2, 16, 16))#candidate|1515|(2, 16, 16)|var|float32
var_1516 = relay.var("var_1516", dtype = "float32", shape = (2, 16, 16))#candidate|1516|(2, 16, 16)|var|float32
bop_1517 = relay.mod(var_1515.astype('float32'), relay.reshape(var_1516.astype('float32'), relay.shape_of(var_1515))) # shape=(2, 16, 16)
var_1522 = relay.var("var_1522", dtype = "float32", shape = (2, 16, 16))#candidate|1522|(2, 16, 16)|var|float32
bop_1523 = relay.subtract(var_1515.astype('int16'), relay.reshape(var_1522.astype('int16'), relay.shape_of(var_1515))) # shape=(2, 16, 16)
var_1526 = relay.var("var_1526", dtype = "float32", shape = (2, 16, 16))#candidate|1526|(2, 16, 16)|var|float32
bop_1527 = relay.bitwise_and(var_1522.astype('int64'), relay.reshape(var_1526.astype('int64'), relay.shape_of(var_1522))) # shape=(2, 16, 16)
func_1482_call = mod.get_global_var('func_1482')
func_1484_call = mutated_mod.get_global_var('func_1484')
call_1536 = relay.TupleGetItem(func_1482_call(), 1)
call_1537 = relay.TupleGetItem(func_1484_call(), 1)
output = relay.Tuple([bop_1517,bop_1523,bop_1527,call_1536,])
output2 = relay.Tuple([bop_1517,bop_1523,bop_1527,call_1537,])
func_1540 = relay.Function([var_1515,var_1516,var_1522,var_1526,], output)
mod['func_1540'] = func_1540
mod = relay.transform.InferType()(mod)
var_1541 = relay.var("var_1541", dtype = "float32", shape = (2, 16, 16))#candidate|1541|(2, 16, 16)|var|float32
var_1542 = relay.var("var_1542", dtype = "float32", shape = (2, 16, 16))#candidate|1542|(2, 16, 16)|var|float32
var_1543 = relay.var("var_1543", dtype = "float32", shape = (2, 16, 16))#candidate|1543|(2, 16, 16)|var|float32
var_1544 = relay.var("var_1544", dtype = "float32", shape = (2, 16, 16))#candidate|1544|(2, 16, 16)|var|float32
output = func_1540(var_1541,var_1542,var_1543,var_1544,)
func_1545 = relay.Function([var_1541,var_1542,var_1543,var_1544,], output)
mutated_mod['func_1545'] = func_1545
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1482_call = mod.get_global_var('func_1482')
func_1484_call = mutated_mod.get_global_var('func_1484')
call_1622 = relay.TupleGetItem(func_1482_call(), 0)
call_1623 = relay.TupleGetItem(func_1484_call(), 0)
func_1540_call = mod.get_global_var('func_1540')
func_1545_call = mutated_mod.get_global_var('func_1545')
const_1633 = relay.const([[-5.955455,-6.394401,1.461285,8.590106,0.769052,-1.857705,1.410920,0.838774,9.193519,-8.430334,7.531995,0.005009,6.265507,-4.598013,-6.309170,4.414721,4.626071,-5.642776,-1.868641,0.272194,-1.381882,9.154176,-8.627921,7.485830,8.165217,-6.854249,2.488325,-3.777264,-7.141537,5.370998,0.055972,5.208418,-2.180133,8.969499,8.665183,-6.509967,-9.882600,1.877574,-0.452668,-4.990642,-6.112906,4.373263,9.566925,-9.293830,-3.225739,-6.947577,-2.804843,-2.999816,-5.198195,-7.005579,7.804393,2.422185,-9.940194,-1.852360,-2.148051,-5.385721,1.026953,-1.671131,2.415813,-9.428524,-4.061994,8.044217,-6.392643,0.941479,7.789252,-1.064806,-5.879711,4.975357,-6.879674,-8.597827,-3.833989,-8.439855,-6.808104,-2.174530,7.981139,1.490420,-7.728354,4.644063,6.465960,5.701719,-2.319674,9.490606,0.133758,7.725170,-8.506544,-9.099831,-7.278856,4.601134,-3.352074,-9.332290,-5.548091,4.396362,-9.763764,-8.494166,-0.718344,-1.935993,1.797287,5.783786,-5.474890,6.737897,-6.811802,-6.969794,-4.977494,9.794256,5.704177,-6.987012,-2.048015,-9.902131,-8.225691,-9.442801,-2.215343,8.583283,-2.579436,0.546546,1.359294,8.915931,-5.447149,-3.839463,7.344053,8.910544,7.945893,6.880867,-1.098314,-1.268399,-8.356776,1.458930,-6.449055,-9.804772,7.505261,4.215293,-6.935753,1.589277,-4.693013,5.183801,2.616178,9.591490,2.825607,-1.243002,-2.851530,-5.650015,7.067101,-7.661592,8.011203,-5.628641,-3.656298,3.631806,1.753529,7.860397,4.283239,6.493446,-2.287270,6.748875,4.405430,7.358335,4.726740,-4.461125,6.575654,-7.785621,-2.887876,5.388094,-2.727591,6.677685,9.880481,-2.644788,-4.913106,-4.826982,-2.536889,-2.305952,4.986402,8.776402,0.548616,-0.953589,-5.438694,2.248220,4.431327,0.440193,-0.446896,3.408610,-0.099011,-6.599412,-8.528254,5.049071,-5.247253,-5.669788,2.026797,-9.236829,-4.451050,7.308973,0.225207,6.673401,0.362671,2.340412,7.535293,-9.424885,-1.127191,-4.307591,7.295081,9.462751,8.756242,1.622237,3.012359,-4.826641,-1.206285,5.729284,-4.499780,3.196767,0.607890,0.140969,1.958657,-2.274194,-4.708407,-9.219217,-4.907430,-6.676263,-1.038171,-3.494512,1.249690,5.155288,-3.707074,-8.656996,2.732156,5.762879,-2.596726,2.684671,-9.648904,4.178273,6.079448,-9.807057,0.242937,6.764131,-5.780801,0.946650,-3.727323,-1.193005,9.235065,-5.403612,-3.995169,-0.693374,-5.374197,-2.055458,8.348745,-9.886258,-8.419605,7.821168,0.607167,4.710491,-9.172741,1.413224,9.982073,-6.048632,-2.005650,8.033927,-4.861884,2.734653,5.631495,3.603935],[9.691494,5.071016,-2.273172,4.338092,-1.821689,1.084631,-4.661600,0.869631,-3.905655,-6.132806,-1.120549,3.807202,5.346916,-0.034340,5.819068,-2.038061,6.506077,-8.879952,-0.207865,3.389429,-9.416840,9.421860,9.561497,-7.551330,-8.072079,1.879020,-9.975019,7.318652,0.140482,-2.243577,4.556120,-8.869720,9.899867,-9.953881,-7.111732,-2.409736,7.526751,0.457883,-1.477796,-2.259548,7.940664,-2.441758,2.002486,7.402791,2.355195,6.652001,-8.834231,2.354253,-3.988542,5.473822,2.191874,2.898142,-9.702839,3.119061,-5.800025,6.376829,4.889221,3.768132,-6.520232,-1.050214,-3.279855,-7.516310,4.906553,-3.365479,-5.197979,-1.806129,4.179610,-5.148969,0.724650,0.728351,7.063304,6.348888,-4.899666,1.584181,0.284250,-4.939208,8.403656,8.234915,-1.988412,-1.593702,4.719090,-8.385536,-8.769724,-3.680065,-1.907662,2.953735,4.143518,9.307293,5.692574,-4.406049,-3.672707,6.627418,5.097454,-7.417858,-5.052471,-8.285049,5.603429,2.285898,6.846987,6.433510,3.616303,-2.401252,6.291609,-6.397136,-0.272944,-9.739480,0.977673,4.122190,-3.038602,-5.895261,-4.317300,-8.608283,8.980666,-7.451608,-2.196456,-6.629530,-6.542211,-0.046438,-3.391917,3.487858,2.371057,4.354918,2.671600,5.505750,-4.961472,-1.420933,0.334789,1.186521,-0.682579,5.238727,5.648609,-4.726671,-2.087119,-9.407227,0.539670,-1.330933,7.528204,1.953341,-4.259603,-3.334411,-7.714557,7.604707,2.225121,-0.691032,-5.270265,-5.282962,-0.677532,-5.871164,4.202822,6.155484,-9.443045,9.136932,-5.550186,-7.691912,-9.823858,7.980467,9.063859,-1.682890,1.222054,4.617202,-4.572046,-8.409841,-1.264249,-3.189177,5.273226,6.896161,9.645402,2.128048,1.615848,-1.031423,-6.859089,6.327739,-3.963792,-4.305982,-8.815027,-2.576817,-8.238450,2.011813,7.966940,-1.106167,-3.322614,-1.607741,0.834140,2.543924,0.709323,-8.439498,9.408033,5.182508,0.311169,-2.982337,6.834616,-7.374973,4.510901,4.800520,3.434278,0.360890,5.984786,3.375341,6.061531,3.551148,-0.413391,-8.179078,0.483826,-0.132288,1.280213,6.473029,5.706939,-3.102155,8.873089,8.801064,-0.529032,-9.361559,-7.775625,-0.407413,-8.643352,-1.967407,2.924884,0.320546,-3.687779,1.443687,-8.429037,9.692938,-5.488044,-9.756995,5.501796,8.604087,-7.762860,2.728043,7.587539,-7.963649,1.454052,3.986400,9.318242,-0.268540,-0.650638,0.361689,-4.358883,-9.198903,4.703981,-0.386388,-3.350764,-4.788665,-3.080164,7.512644,5.153662,4.803101,-4.861198,0.517315,5.050283,5.234699,6.662620,-4.920618,3.399708,-4.200733,7.871658,9.136623]], dtype = "float32")#candidate|1633|(2, 256)|const|float32
call_1632 = relay.TupleGetItem(func_1540_call(relay.reshape(const_1633.astype('float32'), [2, 16, 16]), relay.reshape(const_1633.astype('float32'), [2, 16, 16]), relay.reshape(const_1633.astype('float32'), [2, 16, 16]), relay.reshape(const_1633.astype('float32'), [2, 16, 16]), ), 1)
call_1634 = relay.TupleGetItem(func_1545_call(relay.reshape(const_1633.astype('float32'), [2, 16, 16]), relay.reshape(const_1633.astype('float32'), [2, 16, 16]), relay.reshape(const_1633.astype('float32'), [2, 16, 16]), relay.reshape(const_1633.astype('float32'), [2, 16, 16]), ), 1)
func_1353_call = mod.get_global_var('func_1353')
func_1358_call = mutated_mod.get_global_var('func_1358')
var_1637 = relay.var("var_1637", dtype = "float64", shape = (1620,))#candidate|1637|(1620,)|var|float64
const_1638 = relay.const([[-7.755948,6.173130,-1.351002,-3.936944],[6.819621,9.764736,5.095908,5.961926],[5.806563,7.842233,7.622011,5.442365],[-5.447020,-4.018684,0.146422,-0.807187],[-8.885410,8.371940,3.541072,-4.159983],[8.141826,-9.976652,-4.323664,-9.964135],[-8.144071,0.169167,1.303225,1.263299],[8.334481,-8.377272,7.758663,-5.715052],[-9.152660,2.526534,4.875184,-3.466801],[9.645908,6.078281,-9.325674,6.542556],[2.191939,-0.445102,0.528987,-1.889421],[2.599638,-2.900528,-2.556461,-9.267927],[-0.878625,-0.165594,6.788702,-8.470830],[0.598035,-4.403561,9.105939,-1.132730],[-1.452057,7.305637,-5.187431,-1.895485],[-8.278381,-1.791077,0.499744,5.427587],[-4.529213,0.467565,-5.843772,-7.233700],[6.317670,7.019371,3.814465,-7.044399],[-8.393547,4.490226,9.920188,0.844829],[-0.165476,-1.824061,-9.484634,2.502901],[2.949898,2.832731,3.619144,8.397281],[-7.421029,1.539461,-1.169051,-5.793314],[-3.774236,3.195857,9.255474,7.332480],[3.913390,-5.730818,-8.263899,-6.974952],[-9.663824,2.660795,-6.374122,7.738253],[-0.864522,-4.178964,-8.299289,1.044754]], dtype = "float32")#candidate|1638|(26, 4)|const|float32
var_1639 = relay.var("var_1639", dtype = "uint64", shape = ())#candidate|1639|()|var|uint64
call_1636 = relay.TupleGetItem(func_1353_call(relay.reshape(var_1637.astype('float64'), [9, 12, 15]), relay.reshape(const_1638.astype('float32'), [104,]), relay.reshape(var_1639.astype('uint64'), []), ), 5)
call_1640 = relay.TupleGetItem(func_1358_call(relay.reshape(var_1637.astype('float64'), [9, 12, 15]), relay.reshape(const_1638.astype('float32'), [104,]), relay.reshape(var_1639.astype('uint64'), []), ), 5)
uop_1647 = relay.rsqrt(var_1637.astype('float32')) # shape=(1620,)
uop_1654 = relay.erf(uop_1647.astype('float64')) # shape=(1620,)
bop_1665 = relay.less_equal(uop_1654.astype('bool'), relay.reshape(var_1637.astype('bool'), relay.shape_of(uop_1654))) # shape=(1620,)
func_326_call = mod.get_global_var('func_326')
func_329_call = mutated_mod.get_global_var('func_329')
const_1671 = relay.const([-2,2,-9,8,-8,-6,-5,9,1,5,-6,7,6,-2,-3,-8,1,1,-9,-4,9,5,2,-10,-9,-7,3,5,-9,-10,-3,1,10,-6,10,8,-1,-5,-7,5,10,-3,5,-4,-6,-7,5,-4,2,6,1,3,-8,-2,3,-1,1,-8,1,-9,8,-5,-5,-10,9,1,1,-10,2,4,-1,-10,6,-7,10,3,5,5,-6,-9,2,-5,-1,3,-8,1,-9,-4,-7,-3,8,-6,-5,2,-7,-8,-10,1,-9,7,1,-9,-8,-7,-3,-5,10,3,-4,7,-8,8,8,-9,6,-6,-5,7,-9,10,7,-4,-9,-2,-4,2,-6,1,-2,2,-8,6,5,-1,-10,-6,-8,-3,7,-8,6,4,2,5,8,3,8,-3,3,-5,5,-9,2,-10,9,2,7,9,-3,-5,-4,9,10,-2,4,-5,1,-3,-5,-1,-8,4,-9,9,7,-1,4,2,-1,-4,-6,-5,-2,9,9,6,3,7,10,1,1,10,-5,-7,1,-1,-2,-3,7,4,1,7,9,-3,-9,-8,-10,6,-3,2,-6,-10,-1,5,-4,-6,-10,-9,7,5,10,-8,2,-6,9,-8,2,5,2,3,-10,10,-10,-6,3,-4,-7,-3,-6,-3,-8,-10,-10,4,-7,-7,-6,7,-8,-4,6,-3,-10,-1,7,1,-6,4,8,-7,4,1,3,-7,-3,-1,9,-2,-10,5,-1,-3,-7,-5,4,9,-8,-8,-10,-1,6,-4,5,3,-10,-5,3,10,-4,5,6,5,-6,-4,-10,1,-6,10,-10,-1,9,3,-3,-4,-7,4,-4,-5,6,9,4,-1,-5,-6,-5,-9,-2,-8,7,-3,-10,-6,-7,-7,2,-8,-5,9,-1,-9,1,-1,-2,9,9,-2,10,-3,8,-8,5,-7,7,4,-2,-4,-1,-7,2,-2,9,-1,-1,5,-6,10,-1,4,6,5,1,2,-4,6,-6,-6,2,5,4,3,-5,1,-3,-3,5,6,7,9,-6,7,5,8,-3,-1,4,-6,8,-4,-4,-9,-7,4,-2,7,-10,-1,-10,-4,-3,-9,-8,8,4,-8,-1,9,3,-5,-8,2,-7,-5,-3,9,4,5,-4,-10,4,-1], dtype = "uint8")#candidate|1671|(420,)|const|uint8
call_1670 = relay.TupleGetItem(func_326_call(relay.reshape(const_1671.astype('uint8'), [15, 2, 14]), relay.reshape(const_1671.astype('uint8'), [15, 2, 14]), ), 0)
call_1672 = relay.TupleGetItem(func_329_call(relay.reshape(const_1671.astype('uint8'), [15, 2, 14]), relay.reshape(const_1671.astype('uint8'), [15, 2, 14]), ), 0)
bop_1674 = relay.greater(bop_1665.astype('bool'), relay.reshape(var_1637.astype('bool'), relay.shape_of(bop_1665))) # shape=(1620,)
bop_1677 = relay.add(bop_1665.astype('uint32'), relay.reshape(bop_1674.astype('uint32'), relay.shape_of(bop_1665))) # shape=(1620,)
output = relay.Tuple([call_1622,call_1632,const_1633,call_1636,const_1638,var_1639,call_1670,const_1671,bop_1677,])
output2 = relay.Tuple([call_1623,call_1634,const_1633,call_1640,const_1638,var_1639,call_1672,const_1671,bop_1677,])
func_1680 = relay.Function([var_1637,var_1639,], output)
mod['func_1680'] = func_1680
mod = relay.transform.InferType()(mod)
mutated_mod['func_1680'] = func_1680
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1680_call = mutated_mod.get_global_var('func_1680')
var_1682 = relay.var("var_1682", dtype = "float64", shape = (1620,))#candidate|1682|(1620,)|var|float64
var_1683 = relay.var("var_1683", dtype = "uint64", shape = ())#candidate|1683|()|var|uint64
call_1681 = func_1680_call(var_1682,var_1683,)
output = call_1681
func_1684 = relay.Function([var_1682,var_1683,], output)
mutated_mod['func_1684'] = func_1684
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1482_call = mod.get_global_var('func_1482')
func_1484_call = mutated_mod.get_global_var('func_1484')
call_1776 = relay.TupleGetItem(func_1482_call(), 0)
call_1777 = relay.TupleGetItem(func_1484_call(), 0)
var_1791 = relay.var("var_1791", dtype = "float64", shape = (8, 12, 6))#candidate|1791|(8, 12, 6)|var|float64
bop_1792 = relay.bitwise_and(call_1776.astype('int8'), relay.reshape(var_1791.astype('int8'), relay.shape_of(call_1776))) # shape=(8, 12, 6)
bop_1795 = relay.bitwise_and(call_1777.astype('int8'), relay.reshape(var_1791.astype('int8'), relay.shape_of(call_1777))) # shape=(8, 12, 6)
uop_1796 = relay.acos(bop_1792.astype('float64')) # shape=(8, 12, 6)
uop_1798 = relay.acos(bop_1795.astype('float64')) # shape=(8, 12, 6)
bop_1799 = relay.divide(uop_1796.astype('float32'), relay.reshape(bop_1792.astype('float32'), relay.shape_of(uop_1796))) # shape=(8, 12, 6)
bop_1802 = relay.divide(uop_1798.astype('float32'), relay.reshape(bop_1795.astype('float32'), relay.shape_of(uop_1798))) # shape=(8, 12, 6)
output = relay.Tuple([bop_1799,])
output2 = relay.Tuple([bop_1802,])
func_1803 = relay.Function([var_1791,], output)
mod['func_1803'] = func_1803
mod = relay.transform.InferType()(mod)
var_1804 = relay.var("var_1804", dtype = "float64", shape = (8, 12, 6))#candidate|1804|(8, 12, 6)|var|float64
output = func_1803(var_1804)
func_1805 = relay.Function([var_1804], output)
mutated_mod['func_1805'] = func_1805
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1482_call = mod.get_global_var('func_1482')
func_1484_call = mutated_mod.get_global_var('func_1484')
call_1837 = relay.TupleGetItem(func_1482_call(), 1)
call_1838 = relay.TupleGetItem(func_1484_call(), 1)
func_1540_call = mod.get_global_var('func_1540')
func_1545_call = mutated_mod.get_global_var('func_1545')
var_1840 = relay.var("var_1840", dtype = "float32", shape = (8, 64))#candidate|1840|(8, 64)|var|float32
call_1839 = relay.TupleGetItem(func_1540_call(relay.reshape(var_1840.astype('float32'), [2, 16, 16]), relay.reshape(var_1840.astype('float32'), [2, 16, 16]), relay.reshape(var_1840.astype('float32'), [2, 16, 16]), relay.reshape(var_1840.astype('float32'), [2, 16, 16]), ), 0)
call_1841 = relay.TupleGetItem(func_1545_call(relay.reshape(var_1840.astype('float32'), [2, 16, 16]), relay.reshape(var_1840.astype('float32'), [2, 16, 16]), relay.reshape(var_1840.astype('float32'), [2, 16, 16]), relay.reshape(var_1840.astype('float32'), [2, 16, 16]), ), 0)
bop_1848 = relay.bitwise_or(call_1839.astype('int64'), relay.reshape(var_1840.astype('int64'), relay.shape_of(call_1839))) # shape=(2, 16, 16)
bop_1851 = relay.bitwise_or(call_1841.astype('int64'), relay.reshape(var_1840.astype('int64'), relay.shape_of(call_1841))) # shape=(2, 16, 16)
func_1386_call = mod.get_global_var('func_1386')
func_1388_call = mutated_mod.get_global_var('func_1388')
call_1857 = func_1386_call()
call_1858 = func_1386_call()
uop_1859 = relay.atanh(bop_1848.astype('float64')) # shape=(2, 16, 16)
uop_1861 = relay.atanh(bop_1851.astype('float64')) # shape=(2, 16, 16)
func_1680_call = mod.get_global_var('func_1680')
func_1684_call = mutated_mod.get_global_var('func_1684')
const_1883 = relay.const([[-0.925286,-3.304186,8.414088,-7.445627,5.557141,2.315043],[6.804189,-0.244402,8.667797,2.042205,6.704807,-8.892423],[9.135508,-1.597832,-8.370528,8.556802,2.915371,0.534358],[0.083220,5.811858,8.389825,7.079381,6.427060,3.458928],[-6.988493,-4.542757,-5.721382,-5.898579,3.968578,0.343849],[1.761140,-9.640854,-4.602963,3.054204,6.531436,-5.352888],[1.933659,9.501044,-3.533306,6.181317,6.750562,-1.990536],[0.769953,7.464971,-5.090044,-7.228871,5.891113,-1.467224],[-4.861779,9.087357,2.876422,7.710643,4.095974,1.202860],[8.351148,-9.625059,-8.259727,-5.921791,0.028836,-4.956792],[-2.984020,0.681166,0.259683,-0.232072,9.300725,9.505269],[2.204662,-1.572841,-0.470576,-3.698439,-6.211762,-2.830913],[-4.414293,-4.213015,2.371364,8.179071,5.337517,3.069399],[-1.390957,1.717364,-0.351675,-3.981264,7.079073,-1.000532],[-5.436945,0.835676,-3.315937,-9.236693,-8.902258,-1.775368],[1.164433,4.743861,0.055662,-6.702280,-9.355753,6.621636],[-1.324839,7.731116,-5.005189,3.885311,-3.121828,-0.444285],[0.026702,8.841829,7.218095,4.015638,1.789584,-7.939759],[2.756257,1.399910,-4.445866,-4.687485,-8.781465,-7.653560],[-0.891986,-7.420181,-0.726142,2.218873,9.711228,5.151601],[-2.346900,8.743257,2.286854,-4.919556,-0.261375,9.911625],[2.858868,-3.461372,2.379938,-2.905819,-6.994239,-6.206887],[1.860350,-0.144459,8.111527,-6.973399,-2.702748,8.083616],[3.395932,5.730392,9.341861,-9.958814,-5.997575,7.548222],[4.468620,6.957769,-0.257847,-7.201835,8.657024,-0.777276],[-1.322221,8.166141,-6.290012,-8.601205,-4.845750,-4.226674],[-5.556635,-3.752874,9.977219,-8.938915,-9.247842,-1.745799],[-6.402610,-0.615406,-9.204070,-9.901274,0.835001,0.079967],[-1.341264,9.933674,1.536362,7.064696,-2.449865,8.386590],[0.845311,-1.517018,8.932693,-7.789371,4.819711,-3.278528],[7.739375,-8.367386,-5.473139,-7.305774,-3.885690,5.525919],[9.924408,4.234113,0.822293,2.394180,9.983496,-6.281692],[9.409108,-8.210013,9.925959,-4.519890,6.633371,-8.873920],[-8.328618,-4.392820,-8.984812,0.985313,-8.815922,-9.318427],[0.034095,-2.117603,9.724769,0.375218,6.180360,-0.142055],[-5.289050,9.425621,0.762226,7.092124,5.732293,-8.561534],[-8.517375,3.675264,3.337685,-8.840370,-9.551560,4.628104],[6.351789,-9.259600,-1.788855,1.954276,8.664483,-0.259317],[-2.946247,-2.613919,0.522883,-0.259255,-0.639538,0.414830],[1.979583,-7.271937,-7.613088,7.359264,6.906739,0.236420],[-6.131957,-3.834078,6.088555,8.809355,0.904711,9.597250],[-2.498679,-6.798824,-0.010460,-2.843309,4.558138,8.908457],[-5.318187,4.767790,-8.385168,7.386511,3.441520,-9.334757],[-0.735533,5.584737,4.572421,7.798459,-0.293239,7.148342],[6.100343,-2.827638,-9.746651,-8.238019,-3.754388,-7.334165],[-6.738580,-6.849287,-4.665827,7.962999,-1.714128,-6.828861],[5.100955,9.585911,9.009446,-6.554606,5.698389,0.516490],[-7.097354,-2.960773,5.774176,6.299128,4.594345,3.057086],[-3.643260,-3.290793,2.755737,1.504157,-5.216623,-8.040008],[5.496805,-1.692942,8.109207,-9.766817,-9.277320,9.795596],[-7.633067,4.781796,-5.821266,9.456834,0.886161,4.947288],[-5.746599,-0.025412,5.820324,-6.449535,8.040039,1.539588],[-4.835988,3.924267,4.669553,-1.473681,1.267271,1.020187],[-6.199176,9.825722,-6.167806,5.886974,3.814031,-6.099621],[-4.660682,6.948560,3.655004,0.545449,-7.618329,-3.040323],[0.232170,0.285291,4.250554,-8.056567,2.289423,8.002740],[-5.796559,-2.144547,-5.167588,-9.438266,4.998507,6.793513],[6.495124,-9.669246,7.157009,8.716192,5.078515,7.929260],[8.498085,6.230814,1.877712,-8.126771,4.176981,7.542102],[6.951011,-3.830355,9.352731,-1.034913,-0.026868,2.471157],[2.248785,-1.540539,3.904184,7.886550,9.024429,-4.859892],[-9.680879,-0.573923,2.480590,6.810356,-5.217500,-3.792387],[0.546657,-8.693349,4.603196,9.138270,-1.190681,-9.640221],[-3.406439,-6.896532,-8.713183,-4.956195,4.238455,-7.789787],[1.718736,-7.799820,8.674166,2.755093,5.462281,0.293434],[5.355085,5.387339,-1.072376,-5.895126,-1.436276,6.038665],[6.332153,0.799059,-6.168711,1.323053,9.993469,2.980481],[-7.330098,-5.735293,-0.352429,6.187395,-2.195096,8.928891],[-2.498993,4.890100,-9.864898,3.691788,5.868761,5.403904],[-1.176052,6.074479,-5.366695,-9.164083,7.080033,-9.891939],[-8.564645,-3.821045,-0.161873,-5.538026,7.642571,5.773230],[-9.744389,3.031825,0.743987,0.468618,8.442538,-0.208687],[-8.094947,7.484481,2.537518,4.374416,9.112818,-4.245932],[-1.017932,-0.126662,2.775169,7.376780,-2.868651,7.287554],[3.408908,9.796700,0.023427,-0.534845,-3.546585,7.061582],[0.215483,-9.317785,-9.686071,6.485189,0.067694,-5.927436],[6.857782,-1.791206,-3.285736,-0.680069,-3.609694,0.667113],[3.243807,4.515504,6.750599,8.096090,-0.313205,4.534308],[-6.975120,4.942570,-7.214241,-2.487938,9.161712,6.026135],[-4.931123,-0.201462,4.535643,-6.125128,7.742893,-3.355291],[4.171944,-8.953650,4.612657,-3.377020,-4.253558,3.636634],[-8.863099,-1.532962,-5.773929,1.164061,2.241842,-0.177856],[2.841790,6.694143,-3.325393,6.551211,9.254458,6.958151],[1.478158,2.375883,3.426188,-4.114699,-0.707353,-0.727302],[-7.276992,-8.786832,0.565918,-8.519954,8.471558,5.267655],[-3.894788,4.400760,-6.532298,-4.207344,3.277443,0.349880],[4.290211,-1.541143,8.545894,-8.113839,-3.550501,8.519919],[4.138274,5.504477,-6.829970,4.044170,1.897635,-4.750005],[6.167911,-5.284586,-9.280466,-0.309934,7.668662,-0.752270],[0.173505,7.424655,4.297717,3.307294,-5.721615,3.689387],[4.969453,5.380613,-4.567195,4.949152,6.639368,-3.850408],[0.473427,2.963538,6.806228,9.198879,-3.628043,-0.219798],[-7.689767,9.294021,-5.366231,6.404963,5.633792,7.277730],[-5.720578,8.394774,-9.698490,-3.228044,-2.378741,-2.010455],[8.011904,-9.320435,-7.546059,5.890026,-5.354396,-0.318320],[0.147635,5.087680,-1.061655,-1.813356,4.539693,-7.816763],[8.824716,6.573917,-5.341406,4.930965,-5.037745,-9.093705],[2.160291,7.605522,-6.932008,-2.965109,9.239252,-2.246854],[-2.641598,-5.023440,-6.183003,0.523904,5.800333,-1.862643],[5.079815,2.067042,6.306352,-1.512371,2.172623,7.117808],[8.157090,-3.669135,3.385579,5.526799,3.068348,4.365252],[-8.399781,-8.840081,5.158536,-6.224929,-2.995311,-4.204360],[6.392265,-3.046985,-6.823874,-4.020334,-3.022457,-1.661634],[8.342756,9.821599,-3.150820,-1.252274,-1.674731,-6.652291],[8.365418,-1.107222,2.188701,-6.039772,6.665330,8.403523],[-7.316935,-5.861634,-9.665297,-0.705220,-6.117065,9.564508],[-9.513689,0.877578,-9.526468,-4.945741,-9.120091,1.719109],[-3.246282,-2.872171,9.852437,5.927352,1.683129,-7.934436],[5.987814,9.162827,-1.140693,-6.672473,0.727258,0.974993],[8.719217,7.156305,-9.656651,0.820780,-9.018177,1.757760],[-7.627564,9.452911,-1.590954,8.219921,-9.358560,1.929072],[9.221641,2.499192,9.890118,-6.111458,2.087023,4.219994],[4.301088,-4.660577,-7.253420,7.180290,-5.309369,1.825072],[-1.557504,-0.813616,6.638208,1.385701,6.715036,8.930270],[-7.380935,-8.068448,-3.264163,8.847198,-0.521871,9.898658],[7.465462,3.862412,-6.562844,-6.088780,-2.372064,3.487876],[-1.617261,-6.979937,-7.703224,9.328498,-4.616116,-6.167157],[5.299657,-8.778083,6.418980,-4.331694,-0.404701,-9.397538],[-2.646768,3.428182,-0.183855,1.979032,3.336561,-1.171853],[5.629053,-8.771201,6.223842,-1.323623,6.302050,5.904139],[6.018576,7.464128,6.924819,-0.375172,4.146385,-6.957857],[-4.931659,-8.299271,-4.069145,6.969112,-6.855190,7.642812],[-7.619247,-4.319966,-6.262311,-5.348207,-0.582432,4.892819],[-9.845855,8.599994,9.080432,2.788799,1.110053,0.672520],[-7.916084,-9.016444,3.291626,5.092186,1.025704,8.074925],[1.506537,4.761381,8.143874,3.404240,-9.079565,0.965052],[4.452502,-8.653098,0.236032,-0.467239,-8.755365,-2.461192],[-9.323173,-4.597604,-8.895569,0.896685,1.199710,2.904357],[3.913245,-9.005502,2.942459,5.362246,-0.765383,-8.825856],[6.797213,-0.797089,9.097792,1.407183,-9.114719,1.944500],[8.236264,-5.758429,-5.829628,-1.795755,-1.380262,4.187776],[-1.140955,-7.535826,-0.232246,-3.605635,6.298850,-5.133094],[-9.475759,-1.159733,2.759596,1.667935,-9.934378,4.012316],[2.696932,-4.052924,9.940059,4.186080,-8.596602,-6.046550],[-5.441074,1.940086,7.994659,-3.578682,7.058098,-8.328097],[4.414983,-5.462044,1.269743,-1.869089,4.554307,0.565687],[-3.967167,-3.583399,-0.425944,-6.392270,-6.129513,4.394901],[3.199923,2.979910,-8.600909,4.283928,2.774161,-3.503072],[4.727853,1.347029,2.883763,3.029660,3.631817,4.255508],[8.650098,9.871809,2.121244,5.792416,-0.397483,0.453503],[3.775380,-1.764160,-5.282572,6.110575,0.105293,-1.962552],[2.889996,4.744848,-6.221799,0.381201,-4.296569,7.950258],[6.905406,-1.501630,2.740784,-5.794862,-9.234615,3.812572],[2.281749,-4.692337,1.352575,-7.113269,2.373665,7.489174],[-1.097776,4.259091,8.208242,-9.111762,3.344084,3.834159],[-3.107795,4.870683,-8.443231,-5.605005,-4.339652,7.555397],[6.288136,-3.343460,8.584237,-6.140238,-7.061656,-4.602265],[-9.979961,-1.751699,4.725204,-7.976497,-3.457114,-0.726304],[-8.132276,-8.937626,5.472251,-6.419862,7.253048,8.862796],[9.028674,-1.644647,7.200823,0.342565,2.490220,-1.332358],[3.584020,1.478649,-5.720017,4.741131,-7.486310,3.454784],[8.338074,-9.967464,0.666179,9.934667,-8.371258,-2.363814],[-4.480906,2.567800,-5.202074,-4.059421,0.030917,8.937002],[1.768019,-2.236724,-6.809083,9.768335,-0.485791,1.898537],[-8.191269,-6.946686,-4.050704,-2.839367,-1.936550,8.918534],[6.397958,7.291991,2.285269,4.989860,5.083717,-5.063026],[5.710482,1.449246,7.793912,5.547353,3.471072,-8.786475],[8.295000,-2.678060,2.537281,-4.752673,5.136582,6.396041],[-1.200666,0.255245,-3.488303,8.667288,2.095461,2.745090],[4.191372,-9.297466,-9.103894,7.053167,-6.402142,-7.709189],[7.311982,-7.406862,-9.330160,2.040301,-1.650424,-7.459700],[-2.261670,2.099974,-5.828054,-1.823070,0.807972,-7.179443],[-3.388308,5.753112,8.185235,-3.162096,-6.552475,1.934814],[-9.905389,1.309846,3.175213,4.701997,-8.597466,6.072280],[-4.769924,-4.644116,5.586396,0.756430,-8.272903,-2.875790],[-6.244742,-5.355342,2.632288,8.306496,-6.321168,0.624001],[-0.687856,0.878809,1.529071,6.446217,8.880219,8.879395],[-4.734960,-7.381839,-9.426671,-7.528829,8.754345,3.456083],[-8.517979,-8.350957,-2.253340,-3.882464,-2.724805,0.593856],[8.578172,8.284518,-9.670320,9.060741,-6.646114,-2.621940],[-4.762401,2.987430,5.009695,-0.936974,-9.926316,8.890597],[-9.894712,4.606008,5.778024,-1.636239,-3.671082,9.584893],[9.536005,1.776594,-5.773204,-8.234398,1.525938,-5.293096],[-8.396295,-2.168690,5.766899,8.949906,-9.070532,1.069139],[1.295458,-3.136456,0.170522,3.758276,-3.614624,-4.320776],[-4.682119,8.329017,8.166397,-3.605800,-2.204385,-7.947126],[-8.607646,-8.846286,-6.357104,6.194895,0.664398,9.486911],[0.725495,3.711444,-1.674182,0.530203,-0.568805,-5.149909],[-8.950777,-4.809032,2.727149,6.302003,-3.709262,-4.243148],[5.739890,8.377746,0.659040,1.789786,8.905672,-5.424261],[4.015912,-2.040897,-8.603490,4.574858,7.414044,-7.013272],[-7.230147,0.436356,9.776899,2.747346,5.963054,5.288323],[-4.091989,6.059891,-7.974700,0.380129,3.461198,3.813389],[-5.642288,5.683015,-9.083668,-1.722550,2.966107,-6.269889],[-0.072135,9.070904,-9.933015,-6.234968,0.311576,-7.344763],[-7.750161,1.419959,7.215825,8.308991,7.806965,5.844822],[-6.504615,-2.997971,2.786141,-5.106223,5.418697,2.829339],[9.344411,-5.422942,-7.466228,-4.051724,-1.613494,-9.770843],[-9.461943,0.625130,-7.780198,-2.629195,-0.451802,-0.961417],[9.124346,6.744056,-2.553294,-0.359624,0.213807,4.104510],[8.999575,-9.646817,1.424029,6.276032,-4.843494,-7.950635],[2.110869,-7.612734,4.748387,-2.188891,3.055456,9.006673],[-9.818471,9.954673,-8.210994,8.945045,-4.652708,6.872224],[7.376017,-2.732181,0.197481,-9.398347,5.751815,0.568967],[-5.613323,2.273980,6.201082,1.734391,-0.405599,2.975378],[9.702687,-5.190817,-9.702791,-8.312838,-2.192209,-8.085377],[0.461051,-0.431124,5.098030,7.474219,1.717916,0.846847],[-4.038991,0.918834,-4.014015,9.759878,2.599275,0.753178],[-0.775316,6.288878,-5.396666,-8.942152,0.361198,-8.663437],[-3.406669,-3.115345,-9.588055,0.204289,-2.572869,4.219066],[0.225391,2.145718,-4.555746,7.276217,-2.067986,7.365174],[-8.736705,-5.568118,1.651529,-0.413148,-0.096977,5.726233],[-0.649002,3.740591,1.618759,0.023018,-1.034801,-9.842090],[-1.285278,7.853413,-4.661308,3.778708,-3.040911,-8.077378],[9.433745,-2.406586,7.698051,-6.503870,-3.041361,4.876151],[8.244338,-5.417744,6.533990,-2.740070,-7.587979,-2.431339],[7.490048,6.534694,4.550221,8.803611,-0.622515,-8.523819],[9.215870,-6.934012,3.868590,-1.425441,-6.864591,-8.180972],[8.220062,3.913029,-3.523643,-1.958260,-6.850486,7.085402],[-9.197810,-1.462348,-4.330428,-1.993949,9.103451,8.888512],[-4.174753,3.482119,6.720062,-9.384382,8.384220,-1.097847],[8.645454,2.228793,4.458856,5.561948,1.477216,-5.266248],[7.212357,9.073377,5.336225,3.748139,-2.206625,8.059924],[-5.263938,-8.267864,9.430227,3.198682,-6.769175,-9.121373],[9.882023,1.565331,2.526229,9.275963,-9.079248,-8.692899],[4.282750,-7.069876,-6.489470,1.675060,5.033594,-2.833863],[5.108448,-1.298023,-6.845100,3.917390,-9.652811,-5.786255],[-3.303091,-7.177174,0.426797,1.001919,-9.958229,-8.259716],[7.183622,4.975301,-9.852917,8.326711,3.957571,2.859542],[0.799145,-9.492335,0.959875,1.503475,-5.865273,-9.373301],[-8.148594,-2.050598,4.524249,-8.948214,3.354442,-7.929850],[1.733951,8.210036,1.921553,5.988081,3.045804,-7.620901],[-4.098772,-6.933826,-1.299823,-9.778623,-2.955338,1.306760],[-9.308740,-5.932027,-4.560519,4.488586,0.106475,-1.593238],[1.794908,5.547105,7.979171,9.301753,3.919083,-2.810171],[-2.920341,3.001359,-1.943276,3.599124,-7.076055,-5.556030],[-9.775609,-0.145759,-8.075797,-3.440723,-6.830386,-2.580525],[6.229914,-4.378350,9.673017,-3.412021,8.800981,3.142838],[0.007787,-5.122697,-8.733605,-8.180259,-2.579182,-5.200018],[2.558329,-3.901871,-0.703340,-3.884124,-7.980678,4.305605],[8.801052,-2.022919,9.340293,-7.757500,-3.696826,-1.382130],[5.555827,5.420192,4.319351,-6.284717,-0.416807,5.273083],[6.794560,-6.535260,-0.376025,-2.295161,-4.511863,-1.499729],[-4.842393,-2.515655,-9.268443,7.611006,0.317478,5.098293],[9.195127,5.123472,6.051482,-0.767636,-9.312274,-8.961675],[-6.903725,9.044137,6.550887,-1.259242,-0.494135,-4.060329],[2.009351,6.232125,-3.739020,-3.737828,-9.277504,8.589637],[-3.777385,3.862836,9.364087,1.822204,-4.904374,-9.321037],[-5.031903,0.947845,4.284671,8.418047,7.457831,8.044280],[-1.124050,9.933740,4.411972,-7.406032,0.092605,7.765753],[3.169220,-4.211199,5.893460,-4.575224,-4.726622,-7.862395],[9.445105,-0.538804,-0.583080,7.430684,6.341177,-6.834059],[5.388280,-0.226376,-6.481681,5.776259,-9.463787,4.062861],[-5.233228,-9.582947,7.636400,-4.166131,-5.628523,5.833517],[-5.040735,5.609941,-6.527414,1.737449,-3.141946,-5.229037],[1.041620,0.865366,1.377622,6.147535,-3.478053,-8.576656],[-4.823209,-3.402198,-2.544477,-2.385812,-5.531765,-0.975115],[9.750620,1.168126,-7.238074,-8.441292,0.211276,7.485424],[-4.915154,6.607798,-9.829563,-8.520746,-2.392136,-2.613478],[-5.886496,-4.169838,-9.022107,5.476184,-8.212058,-9.854840],[-9.743564,-5.421059,-5.268692,5.102390,-1.627447,9.667521],[-1.525282,5.486852,-8.459709,8.167558,-3.974731,-9.495017],[3.572214,-5.081156,-6.797333,-9.592519,0.459254,-0.205935],[-7.574878,-6.443884,-1.581009,-1.972492,9.838731,-3.668720],[6.602504,4.919313,1.326238,-8.817809,3.172339,-8.025827],[3.552987,6.589161,3.784638,-2.655981,9.635146,-3.491241],[-9.643865,-5.379471,-4.069503,-7.002521,2.848234,-9.529561],[3.550123,1.575535,0.117091,-4.836812,-9.942804,-0.437584],[9.975762,2.056696,5.721961,9.824725,-7.644785,-8.664230],[-2.534379,-7.417471,-1.792558,-0.750493,-4.372443,-3.513862],[2.215915,-1.708241,-5.290029,9.313673,-3.210466,-1.125113],[-8.422173,9.114197,-9.937257,6.833667,-4.262666,-6.823279],[-8.840915,-5.048991,-4.651320,3.548363,0.505854,7.860767],[-2.878649,-1.942431,6.528007,-5.714897,-6.850637,6.111700],[0.592753,4.724667,-8.574519,-4.303402,-9.849630,4.261801],[-1.743619,-8.814481,9.537334,6.341478,-6.319906,-5.245148],[9.245780,0.419735,-2.572428,-7.198737,4.448105,-5.251327],[0.100830,7.957326,1.429223,-4.033055,5.948835,-2.500584],[-9.453443,-2.967394,5.903586,-2.419116,9.706933,-6.056957],[-0.393860,-1.876699,-0.247363,-0.369336,3.422651,2.887928]], dtype = "float64")#candidate|1883|(270, 6)|const|float64
var_1884 = relay.var("var_1884", dtype = "uint64", shape = ())#candidate|1884|()|var|uint64
call_1882 = relay.TupleGetItem(func_1680_call(relay.reshape(const_1883.astype('float64'), [1620,]), relay.reshape(var_1884.astype('uint64'), []), ), 3)
call_1885 = relay.TupleGetItem(func_1684_call(relay.reshape(const_1883.astype('float64'), [1620,]), relay.reshape(var_1884.astype('uint64'), []), ), 3)
func_1680_call = mod.get_global_var('func_1680')
func_1684_call = mutated_mod.get_global_var('func_1684')
call_1894 = relay.TupleGetItem(func_1680_call(relay.reshape(const_1883.astype('float64'), [1620,]), relay.reshape(var_1884.astype('uint64'), []), ), 3)
call_1895 = relay.TupleGetItem(func_1684_call(relay.reshape(const_1883.astype('float64'), [1620,]), relay.reshape(var_1884.astype('uint64'), []), ), 3)
func_594_call = mod.get_global_var('func_594')
func_596_call = mutated_mod.get_global_var('func_596')
var_1901 = relay.var("var_1901", dtype = "float32", shape = (104,))#candidate|1901|(104,)|var|float32
call_1900 = relay.TupleGetItem(func_594_call(relay.reshape(var_1901.astype('float32'), [1, 13, 8])), 0)
call_1902 = relay.TupleGetItem(func_596_call(relay.reshape(var_1901.astype('float32'), [1, 13, 8])), 0)
uop_1904 = relay.erf(bop_1848.astype('float64')) # shape=(2, 16, 16)
uop_1906 = relay.erf(bop_1851.astype('float64')) # shape=(2, 16, 16)
bop_1912 = relay.left_shift(uop_1859.astype('int64'), var_1884.astype('int64')) # shape=(2, 16, 16)
bop_1915 = relay.left_shift(uop_1861.astype('int64'), var_1884.astype('int64')) # shape=(2, 16, 16)
func_838_call = mod.get_global_var('func_838')
func_845_call = mutated_mod.get_global_var('func_845')
var_1920 = relay.var("var_1920", dtype = "float64", shape = (9, 100))#candidate|1920|(9, 100)|var|float64
var_1921 = relay.var("var_1921", dtype = "float64", shape = (2016,))#candidate|1921|(2016,)|var|float64
call_1919 = relay.TupleGetItem(func_838_call(relay.reshape(var_1920.astype('float64'), [12, 5, 15]), relay.reshape(var_1921.astype('float64'), [14, 144]), relay.reshape(var_1901.astype('float32'), [104,]), relay.reshape(var_1884.astype('uint64'), []), relay.reshape(call_1882.astype('uint64'), [160,]), ), 10)
call_1922 = relay.TupleGetItem(func_845_call(relay.reshape(var_1920.astype('float64'), [12, 5, 15]), relay.reshape(var_1921.astype('float64'), [14, 144]), relay.reshape(var_1901.astype('float32'), [104,]), relay.reshape(var_1884.astype('uint64'), []), relay.reshape(call_1882.astype('uint64'), [160,]), ), 10)
output = relay.Tuple([call_1837,call_1857,call_1882,const_1883,call_1894,call_1900,var_1901,uop_1904,bop_1912,call_1919,var_1920,var_1921,])
output2 = relay.Tuple([call_1838,call_1858,call_1885,const_1883,call_1895,call_1902,var_1901,uop_1906,bop_1915,call_1922,var_1920,var_1921,])
func_1924 = relay.Function([var_1840,var_1884,var_1901,var_1920,var_1921,], output)
mod['func_1924'] = func_1924
mod = relay.transform.InferType()(mod)
mutated_mod['func_1924'] = func_1924
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1924_call = mutated_mod.get_global_var('func_1924')
var_1926 = relay.var("var_1926", dtype = "float32", shape = (8, 64))#candidate|1926|(8, 64)|var|float32
var_1927 = relay.var("var_1927", dtype = "uint64", shape = ())#candidate|1927|()|var|uint64
var_1928 = relay.var("var_1928", dtype = "float32", shape = (104,))#candidate|1928|(104,)|var|float32
var_1929 = relay.var("var_1929", dtype = "float64", shape = (9, 100))#candidate|1929|(9, 100)|var|float64
var_1930 = relay.var("var_1930", dtype = "float64", shape = (2016,))#candidate|1930|(2016,)|var|float64
call_1925 = func_1924_call(var_1926,var_1927,var_1928,var_1929,var_1930,)
output = call_1925
func_1931 = relay.Function([var_1926,var_1927,var_1928,var_1929,var_1930,], output)
mutated_mod['func_1931'] = func_1931
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1482_call = mod.get_global_var('func_1482')
func_1484_call = mutated_mod.get_global_var('func_1484')
call_1982 = relay.TupleGetItem(func_1482_call(), 1)
call_1983 = relay.TupleGetItem(func_1484_call(), 1)
output = relay.Tuple([call_1982,])
output2 = relay.Tuple([call_1983,])
func_1996 = relay.Function([], output)
mod['func_1996'] = func_1996
mod = relay.transform.InferType()(mod)
output = func_1996()
func_1997 = relay.Function([], output)
mutated_mod['func_1997'] = func_1997
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1996_call = mod.get_global_var('func_1996')
func_1997_call = mutated_mod.get_global_var('func_1997')
call_2009 = relay.TupleGetItem(func_1996_call(), 0)
call_2010 = relay.TupleGetItem(func_1997_call(), 0)
uop_2020 = relay.log2(call_2009.astype('float32')) # shape=(8, 12, 6)
uop_2022 = relay.log2(call_2010.astype('float32')) # shape=(8, 12, 6)
var_2042 = relay.var("var_2042", dtype = "float32", shape = (8, 12, 6))#candidate|2042|(8, 12, 6)|var|float32
bop_2043 = relay.add(uop_2020.astype('float32'), relay.reshape(var_2042.astype('float32'), relay.shape_of(uop_2020))) # shape=(8, 12, 6)
bop_2046 = relay.add(uop_2022.astype('float32'), relay.reshape(var_2042.astype('float32'), relay.shape_of(uop_2022))) # shape=(8, 12, 6)
func_1353_call = mod.get_global_var('func_1353')
func_1358_call = mutated_mod.get_global_var('func_1358')
const_2048 = relay.const([[9.305458,0.446863,6.116174,-8.299616,0.195873,3.470875,-3.459114,-9.574757,-3.993938,7.567400,2.495713,-4.155735,-8.040449,6.155674,-8.117843,3.274737,-3.050311,4.114502,2.343770,1.502893,5.183114,-5.338176,-5.694421,-7.860198,-6.334548,2.451711,-5.097759,-1.109994,0.714375,1.039465,0.006318,8.976569,0.566247,1.864762,-7.068282,0.004342,8.921316,-3.385105,-8.948161,-7.243805,-5.792457,-7.317802,9.235310,8.546149,-4.495413,-9.997980,-1.812071,1.317199,-4.017534,-1.834663,-3.053436,8.257347,1.321206,6.215079,-1.994781,2.471283,9.961628,0.004103,-7.151030,9.235964,-3.986134,-5.227979,8.157899,-4.446632,-8.355637,-7.995225,8.560382,-5.538566,3.589776,-4.477340,3.564909,2.138508,-4.436314,8.472988,0.199652,1.239527,-5.928042,-3.889727,-4.069065,-3.786326,1.412512,6.890738,-3.277638,-5.920732,8.384031,7.527895,-3.779092,5.519503,-4.708265,1.927960,8.227170,5.026342,0.159156,9.218590,-7.987198,-9.259501,-0.904928,-0.005691,-0.655234,5.534483,-6.497752,-9.904760,7.355586,7.663190,3.840637,4.314313,4.872612,-2.091431,9.714495,-0.848333,4.153270,3.100313,-1.660553,-1.453068,-7.468274,-9.306755,0.464871,7.170803,-2.740135,-3.783704,-7.656234,-5.089833,-7.828619,-2.502915,-2.957633,6.639560,7.892360,-1.781759,2.713053,-3.989580,-9.612883,-3.194993,-9.402640,-4.968019,-3.829120,-3.916428,-5.363537,-8.254775,7.848298,-7.952833,-5.160616,-9.466633,6.739735,7.471429,9.868756,-8.514779,7.052296,3.163213,3.091120,-2.026078,-4.376948,-7.320084,-2.033110,1.510914,1.272207,5.599134,-7.409086,2.582295,-0.681418,-0.613943,7.714960,8.919921,0.145363,-0.177095,-3.122260,-1.230406,7.777527,-8.689312,3.849593,6.337694,5.758275,-8.384611,-6.567967,3.867402,6.208689,2.644153,6.454605,1.898595,8.199829,7.422096,-6.024340,6.791541,-4.004019,3.252508,4.634055,-2.849581,-5.185307,-8.315783,-9.408155,5.299117,8.613276,-4.295095,-7.620547,0.433895,6.295899,0.295657,-3.928455,7.709251,-0.387749,5.544515,-0.612546,9.664700,-2.336139,0.067868,2.743947,-0.127453,7.453744,6.642553,-8.428654,-3.138304,7.546365,-7.777543,-6.600250,-2.200696,-2.291951,-1.048707,1.602350,9.727386,-7.010187,3.927184,-0.316493,-4.150988,-0.587989,9.003925,5.252463,6.907943,9.006772,-8.050537,2.350767,1.452574,-6.076443,-5.073991,5.447506,-1.226541,2.271081,4.340097,0.941669,9.791194,-2.167496,0.259199,-2.693410,-6.805749,-6.817731,8.151656,-4.738784,9.613384,9.727907,-2.373552,-9.250966,-1.975579,-4.798235,1.656926,4.508055,-4.810638,4.319296,9.799817,-6.314952,3.659327,9.023626,-0.058765,5.800902,-7.479182,-7.474103,5.301716,8.170695,-7.927631,-4.880757,-6.199207,-9.922974,9.840479],[-4.286846,-9.693754,-5.992679,7.001285,-2.173923,4.067253,1.528112,-9.403981,1.773285,-9.285894,9.067887,-3.754520,-5.458783,-3.691684,9.183979,-2.908090,-9.739225,-9.028005,3.819049,-7.750163,-3.697912,3.320455,-9.808367,0.958021,-4.845293,-1.967967,-5.244882,2.112639,5.883966,4.298994,9.173703,-1.558647,-7.923198,-8.952546,-7.591269,-6.872777,4.857056,2.141287,5.145228,9.555883,-3.122170,-1.736685,-0.128698,-5.269334,5.180838,6.201289,9.207486,-8.290257,-5.269636,2.998746,-9.733308,3.784067,-1.615706,4.371994,9.649434,8.962489,-2.769172,-4.259495,5.041152,7.915767,7.532349,7.253041,-6.693561,-8.608082,-1.381527,-9.592613,2.593253,-2.027657,-4.630033,-2.751555,-3.816871,3.618974,1.930540,-5.492679,-7.368026,9.975599,-5.555863,7.863362,-6.106138,1.838706,9.395906,5.363317,-1.315640,-0.749183,5.209930,-9.077314,-4.479195,1.197267,-7.388705,-8.448206,8.855353,-8.808758,-4.898822,-9.242399,1.652828,-2.453446,9.654405,-0.021139,0.378702,-8.096474,3.031912,7.646751,8.169190,9.069465,-3.239456,-6.404559,8.211052,8.471565,-4.375029,-9.589258,3.785216,4.960949,8.666962,-6.462851,-3.211207,2.742339,-1.128479,-4.968486,4.954438,2.621124,0.124763,9.664115,-6.348823,6.054134,9.189594,-5.990381,-2.193633,1.657839,0.737229,-8.816322,5.621836,5.855752,-2.458948,2.403096,5.684630,5.234018,-6.417234,2.525887,6.181247,-5.536884,8.004589,-9.101437,-2.710741,1.938101,5.973477,1.334498,8.996947,-1.085697,-8.092024,-7.897812,-6.521788,3.110649,-0.629520,0.298567,9.577906,-1.743513,7.358760,-4.609748,9.442297,0.912936,3.239562,7.333835,-7.154693,8.565005,4.028129,-6.458396,9.789878,-7.008042,1.409700,-8.789990,2.427294,9.314640,5.177142,-2.930322,1.675761,6.016861,9.517507,9.428076,2.543859,-0.812698,-6.945749,-7.086226,-8.606761,-6.989891,2.528613,-6.212634,0.762363,4.368465,7.233882,2.965346,8.749988,-1.061827,3.676120,-5.132285,-5.077795,6.409735,-3.412816,-1.269678,0.824489,-1.753050,3.075363,5.573195,-8.583599,2.969675,4.265243,-1.332905,-8.998871,7.329685,-3.900687,-8.725965,-3.730407,-2.833095,7.697537,-3.478827,2.035840,6.228695,0.291611,8.914108,0.682932,-4.713649,-6.372356,-1.483193,7.533232,-3.226167,6.025446,-9.029607,8.019859,-5.333261,9.482743,4.200753,9.336415,-1.388106,8.517831,-1.319793,-4.986436,2.660262,5.265162,5.648502,3.069615,6.531817,-6.182877,9.477787,-1.302087,3.351988,-6.766680,-5.137511,8.897801,-3.463523,-5.174683,-2.367893,7.103833,6.037307,3.055428,9.749477,3.006070,5.614799,-8.110216,7.360780,5.276959,0.259717,9.773772,9.269964,-5.926274,0.077102,1.024989,1.240288,-5.877182,2.157695,-7.149776,-4.643606],[0.951521,0.691642,-6.284964,-4.768320,1.196663,4.585559,2.318027,-9.654338,6.982656,0.086747,4.642600,4.146371,4.876443,7.159521,-5.336810,0.382099,5.494557,2.310100,0.706601,4.821210,2.585694,1.708760,-5.370589,-3.367898,-7.745780,-1.192277,1.414036,0.990656,-1.961333,-9.745008,-0.132282,2.757720,-8.601877,-6.445794,-4.546309,0.040885,-6.464570,2.665188,-5.010937,-4.430758,5.422554,-1.853339,5.892012,3.648207,-9.723694,-4.923193,-7.251499,-3.151927,-0.525494,-0.700534,5.181724,9.796752,2.838543,-4.341485,-6.938513,-3.857906,2.895332,-9.313590,-1.452816,-7.707758,1.194308,6.338395,-6.274120,8.057442,-3.362684,-4.495320,3.279859,-6.618532,-0.857987,-8.085191,8.999000,-1.798652,8.066768,5.633012,-6.466024,-3.071077,-3.728987,8.460270,0.285366,-3.229976,6.151648,0.096754,-3.260878,5.843540,-5.675831,6.119438,-3.853179,-2.775216,6.342685,9.208965,-1.944788,6.165391,2.507567,3.993458,3.923064,3.369501,-2.899251,5.404723,-6.281481,6.282122,-7.333503,-4.233097,-8.468348,-2.808814,7.535962,-8.132496,4.801433,-9.719287,-5.765656,-0.190730,4.989542,-1.996609,-4.871395,-9.835731,-2.462802,-4.529548,5.581374,1.128333,8.893663,7.562166,2.789389,-3.515269,2.081723,-3.871034,3.918891,-8.539682,-9.565959,-4.908966,-9.614479,4.216313,1.454141,-2.315062,-0.924169,-6.955772,4.602551,-2.715328,1.440657,-1.531075,-1.256897,8.584090,7.496763,-5.806149,-4.519010,-1.457102,-3.280903,-0.208189,0.838287,-4.690708,-6.197965,-0.742533,-8.769858,3.539990,0.616772,-5.942987,-0.093531,4.033115,9.368026,8.533682,8.383603,1.665519,7.826911,3.749859,-4.589798,-6.050589,-4.637269,-6.057533,-7.921557,0.792887,5.139684,8.054186,7.519794,2.977023,-3.249507,-3.044117,6.481349,0.410961,6.565018,1.592189,-3.896012,8.331217,-2.686203,2.296580,3.110596,1.296747,1.634267,-4.890812,7.112567,0.834019,-1.614322,7.551834,7.407904,-1.701219,3.700456,-1.583228,9.327928,8.104574,-4.032638,-2.011685,6.911508,-8.713840,-5.882975,6.206694,0.297245,-0.070886,-3.843950,6.702445,-3.660960,2.059704,2.037629,-4.321706,2.515985,7.680078,-9.576280,3.376340,6.890224,-7.924425,-1.754070,6.313330,6.072169,9.547789,-7.241759,3.433366,-1.908432,-7.611795,7.449059,-3.581667,-9.161280,-8.481280,-6.210350,-1.330779,3.413322,2.632174,-8.859477,0.761644,-7.514158,-2.267295,5.406926,-6.371434,-0.936409,-2.078983,4.585273,-5.254830,-1.017287,-7.788997,-1.047727,-4.943264,-9.773301,3.333762,-5.683019,-8.398684,3.381061,6.037678,-7.291438,-4.668476,6.596860,-9.505400,1.548515,-8.896599,1.531873,-0.684466,-7.467660,-4.540698,0.621246,0.904672,-4.113067,-8.460878,-0.560159,3.885533,2.293177,1.039720],[-9.575456,3.714292,-1.062461,6.490363,9.844432,3.038129,-0.633332,-1.174633,4.993208,4.472898,3.770352,5.275532,-7.856045,-7.637763,-4.937351,-6.701155,-4.000184,0.726114,0.894413,-1.571116,-6.436652,-3.309948,0.464612,-7.225179,2.891589,7.959516,-8.116562,-3.444606,3.326140,-4.557936,2.437284,-8.480518,7.288357,-0.254052,-1.935349,6.293412,0.477912,4.400875,-5.851669,3.118985,7.832461,-3.693652,-4.867982,-3.327190,1.683717,0.860092,0.361411,-2.290229,2.321385,-1.858735,-0.771631,1.005288,8.543279,-8.078055,-5.643458,9.880207,-8.322384,0.826381,2.701277,-0.881801,1.308397,0.465247,2.994195,1.726279,-2.213230,-4.612750,0.556600,-6.356967,-3.666139,-7.810668,4.030619,2.473699,8.768919,-0.076163,-0.970709,3.921924,-8.063145,3.823043,6.607968,6.587512,-8.568358,-2.599200,8.447270,-6.920455,6.015784,-3.545078,1.518475,0.750273,2.220195,1.097120,-3.439191,4.532433,9.425799,3.028744,1.216224,-3.922953,-7.085851,6.495662,-3.952611,-7.002260,-3.143281,-8.794997,-1.809505,-3.942033,7.667333,4.623299,-0.713902,-6.673583,2.437672,-3.328208,-3.658935,-4.057562,8.715169,-9.940722,-0.786699,-7.765597,-4.579512,-8.985765,-5.453107,-9.190695,-4.631144,3.704158,-6.931277,-0.758743,4.775728,-2.747205,0.537681,8.333299,-6.584821,-8.114475,-3.076585,7.935593,4.188597,4.457107,-5.824441,7.474781,8.324297,5.535805,7.860397,-5.092374,9.146411,-3.649843,2.022461,0.211288,-9.133920,-5.609893,-4.686031,7.282506,0.561994,6.221125,-1.427522,-6.510953,-9.638730,5.081163,1.310214,-2.085066,-8.529624,-3.251272,-3.908394,0.716592,0.936991,6.093362,9.512703,-2.483400,5.095477,-7.852774,-1.344132,-8.441181,-8.211887,-0.457442,8.018675,-4.650003,-1.047717,2.268189,4.920119,5.373638,3.465951,-9.255580,2.688020,2.548440,6.598182,-6.335889,3.557855,-4.748076,-3.476442,8.746015,7.909761,7.585890,-8.824275,3.423313,6.978291,5.076301,3.834668,3.663718,-5.339881,-4.904514,-9.931641,3.273372,0.529395,1.203787,7.839294,3.797084,6.569626,-5.904018,3.919529,0.686273,-1.737822,9.849192,-8.989833,-4.233069,-3.597302,-2.200519,9.927808,-9.594331,6.483018,-2.643041,-1.832955,-4.368587,-0.717459,-6.885244,-5.972055,-3.975639,-1.734414,-8.980008,-8.501992,5.834902,0.328068,1.745643,7.600488,0.153800,4.019964,1.047929,8.901278,1.448787,-7.329252,-5.375428,3.861238,0.039621,-0.339010,7.041971,-4.355475,3.574928,-3.321598,-6.671541,-7.049039,3.725185,7.177074,-0.276431,-2.131128,-9.991891,8.792468,4.536399,2.760581,-4.798720,-4.438698,-3.109721,-3.148191,9.541450,-0.245531,-2.066227,8.954092,7.089635,4.171186,-0.155480,2.074098,-9.663953,1.080175,-2.278930,1.024252,-3.987489],[-8.625889,-8.688422,0.502342,0.425166,-4.175569,-3.842883,1.608708,-1.037172,9.109397,-6.732927,-8.532409,9.973189,-5.828567,-1.427595,-5.500643,-8.500521,-2.532158,7.771784,-0.750849,2.676282,2.708481,-1.376869,3.845591,4.308567,3.235719,-0.706386,-4.147722,2.973280,7.673747,-2.394903,3.685144,-0.526154,-1.492538,0.563534,-8.837056,6.181588,-6.996602,9.446956,-3.548215,1.826728,-3.078042,7.103984,5.992330,-0.197685,3.997375,9.840493,8.853579,-5.566331,4.194465,-7.464850,-0.584429,3.980989,7.532462,7.361765,4.710982,-8.612110,-9.837465,2.783467,-7.216121,-2.825941,-0.612237,-9.332274,1.309762,4.208105,-7.333079,-0.361655,4.041434,-1.060171,-4.079044,5.127974,-4.759746,-4.397645,8.024527,-0.978162,2.005581,3.104753,-6.249380,6.621085,-4.477334,0.510563,-5.161983,-7.623941,0.792283,-0.398555,-2.161520,-3.502399,8.787279,9.458679,-9.346706,9.892581,-4.476938,3.608944,-9.803009,-3.897070,-7.529079,-0.926205,9.668354,-8.882788,9.685752,2.538625,-7.564751,-4.067607,-7.935592,4.825448,2.136873,-7.498508,4.185071,3.849944,-0.469903,2.430236,4.600353,2.402195,-3.706999,7.116937,-4.459380,5.632090,-1.147211,0.277575,6.743101,8.320298,1.844680,-2.148928,-6.192306,-0.253209,7.966441,4.102903,6.633227,2.843178,-7.613560,7.665145,8.486489,-4.147234,-9.322570,-6.457766,-4.001580,9.297489,6.862129,-6.210022,8.830507,-3.171959,-9.167385,7.415309,-8.778184,1.379528,4.670713,-8.928843,3.185299,4.103468,-2.154112,5.970100,8.458712,-9.489408,-9.679852,-0.360300,3.207240,-9.744531,-1.975937,-0.895220,1.300667,-9.348277,-6.430117,8.773390,6.902218,-1.770113,7.474304,-8.475596,-6.431707,4.632521,9.014371,-8.495532,3.156740,9.749025,-6.497408,-8.931188,1.980660,-3.884449,3.412022,-1.094308,-1.699218,-4.936781,-7.626194,5.202757,5.112922,-1.660158,-0.563507,-0.489749,8.843591,-7.897659,9.847521,8.992427,9.321193,-3.728478,-4.660754,9.943994,2.626634,-7.880003,-2.294884,-2.280121,-2.036758,-3.339787,9.441200,-9.245376,-5.605728,-1.051819,-5.384725,9.986487,-4.957977,-0.791288,-3.685616,9.181180,-6.732776,9.605173,0.627448,-8.153825,-9.407264,2.856576,9.941971,6.550514,-0.248888,3.276366,2.431885,-9.485557,9.531157,-5.476009,-8.493617,7.170934,3.311881,8.997289,0.519789,1.120988,-8.801772,2.212633,-6.150072,-1.154353,7.682029,5.186269,-5.321400,-9.018302,6.202926,0.805879,-2.074476,-4.534746,9.113093,7.312581,5.338219,0.142849,6.674719,-8.613469,3.729568,-9.613833,-3.412907,5.968662,8.190822,-9.458335,5.159917,-9.702069,4.764247,3.825839,-5.888669,8.646704,1.180987,9.963995,8.279432,6.645714,-1.846088,8.265330,2.490962,5.887904,-3.592410,9.877042],[4.888333,-3.408723,-2.345621,-1.454345,-7.467515,8.864338,-0.025677,-6.894846,-3.351236,-6.087242,7.674370,9.131313,-0.036128,0.477325,2.922764,-4.550608,-4.773122,6.271325,1.401046,2.013281,2.268728,4.310034,7.269395,8.998205,4.364668,1.964013,-4.909492,-3.638137,8.149263,1.515563,-8.552519,-9.611263,-4.922504,-1.868017,3.358848,5.079579,-6.445269,-0.315949,-6.973494,6.051125,0.272167,-2.216114,4.719614,-6.631620,-6.511434,8.905634,-9.579611,0.825475,3.940218,-8.615525,5.756016,9.977094,-8.197225,-9.045852,-9.542516,7.261453,-9.846091,4.895131,-6.467442,-6.603527,1.410804,9.313069,2.927450,7.074315,-0.246266,7.862994,9.508598,2.900647,-0.187986,8.951794,0.959181,-1.944616,-6.431968,-6.220650,-7.315240,-8.540772,-3.927694,0.007187,-1.260504,3.160204,-2.193541,5.767603,9.646852,9.963992,-6.475226,-5.151194,2.369980,4.010221,-5.665557,-6.065970,-4.573982,1.619520,8.172045,6.796501,4.942144,-7.622548,9.101211,5.122979,3.599870,9.068268,5.645344,4.368650,-3.949038,8.808871,-1.476749,1.309915,-6.448797,-7.693242,2.031328,0.638811,-0.944380,-3.049414,7.596073,-1.822074,6.965088,-2.711295,-6.042127,2.900872,-4.958760,1.282476,7.693918,-3.963071,8.998698,6.701913,-6.976799,3.806128,-9.501945,-8.812231,-2.408262,-8.563907,-7.657922,-3.651153,9.819979,-7.661338,-2.723690,-7.497779,-9.126525,7.914605,6.869514,9.823729,-5.387401,-0.270953,-5.948153,-9.818772,-3.635348,-3.096353,-2.397142,1.141940,8.046703,3.182698,8.363437,2.774573,-5.263742,-0.971200,4.172704,5.814159,-9.384394,-6.127501,7.570123,6.986425,-1.230818,-7.755755,8.387982,-9.443216,5.803842,-9.646600,6.711803,9.022772,0.515608,-6.133449,5.824919,-6.827941,0.525629,-9.861958,6.706961,-6.185857,-3.078718,-1.932392,-2.937875,-4.238298,8.540199,6.330849,-6.189988,-5.190172,-4.788818,-9.968295,9.258644,2.786864,4.431064,8.078279,-0.790577,-8.455551,-9.331832,-3.702819,4.010036,3.452265,0.993415,-6.490231,3.351538,8.534267,0.256714,8.724792,-1.383996,8.505270,-4.887966,7.667455,7.732883,2.594251,-3.607123,-9.708640,-9.117366,-5.193933,-1.345909,3.900577,-2.036502,9.819610,-0.173598,-2.562436,-1.652125,2.306725,-8.912659,5.694301,-7.992439,6.639190,-6.321172,1.946909,5.768103,-2.572619,-7.650747,4.998374,0.121407,-7.996278,0.265854,-1.318545,-1.527882,1.938000,-9.260470,-5.606536,6.387477,-1.289505,-9.121574,4.461268,0.888350,1.350159,5.089740,-6.427800,-6.212531,5.848420,6.674821,8.493762,7.810333,-6.131094,0.942061,-4.011216,4.989828,-4.006728,-6.109268,2.589368,1.783394,5.336849,-9.987424,1.593176,-6.525561,-5.537301,6.737826,-8.362523,-7.705052,-9.364318,4.831554,8.024871]], dtype = "float64")#candidate|2048|(6, 270)|const|float64
const_2049 = relay.const([[-2.596929,4.545516],[1.497155,3.393078],[-5.882373,1.787219],[-3.024169,-8.425390],[0.404087,3.521525],[-1.640910,2.878340],[4.585442,5.759471],[-5.694303,-8.834212],[0.494095,1.160358],[3.030997,-1.921020],[-9.852697,-7.004282],[-5.466580,3.168387],[-1.656791,0.798233],[-4.332600,-8.248694],[-2.112094,2.070315],[-4.518211,5.931178],[7.499794,-5.672090],[5.172980,-1.264709],[1.028099,-8.470842],[0.506537,5.135285],[5.159657,-1.972000],[9.870080,8.228975],[-5.586322,2.384636],[-5.326241,0.211903],[1.260642,-6.311257],[-0.506391,-0.995728],[-5.304126,3.916898],[6.404489,1.392717],[9.546920,-2.520851],[-6.746113,-8.560107],[-0.453697,0.275682],[-8.837442,5.170661],[-2.900926,7.627887],[-8.563294,-4.662367],[-1.575941,6.192448],[0.779971,-1.688415],[-0.503539,3.178605],[9.029277,-7.214765],[6.558138,-0.680186],[-5.080177,4.876025],[-5.409603,5.303544],[9.000879,0.641902],[4.706440,7.106411],[7.752751,3.763028],[-4.942232,-1.665368],[0.001944,5.321276],[-2.351901,-9.441415],[3.490020,9.665305],[-7.881882,7.251843],[7.500413,-5.493209],[3.423870,4.696474],[1.860259,-8.995686]], dtype = "float32")#candidate|2049|(52, 2)|const|float32
const_2050 = relay.const(1, dtype = "uint64")#candidate|2050|()|const|uint64
call_2047 = relay.TupleGetItem(func_1353_call(relay.reshape(const_2048.astype('float64'), [9, 12, 15]), relay.reshape(const_2049.astype('float32'), [104,]), relay.reshape(const_2050.astype('uint64'), []), ), 4)
call_2051 = relay.TupleGetItem(func_1358_call(relay.reshape(const_2048.astype('float64'), [9, 12, 15]), relay.reshape(const_2049.astype('float32'), [104,]), relay.reshape(const_2050.astype('uint64'), []), ), 4)
bop_2052 = relay.less(const_2049.astype('bool'), call_2047.astype('bool')) # shape=(52, 2)
bop_2055 = relay.less(const_2049.astype('bool'), call_2051.astype('bool')) # shape=(52, 2)
output = relay.Tuple([bop_2043,const_2048,const_2050,bop_2052,])
output2 = relay.Tuple([bop_2046,const_2048,const_2050,bop_2055,])
func_2062 = relay.Function([var_2042,], output)
mod['func_2062'] = func_2062
mod = relay.transform.InferType()(mod)
mutated_mod['func_2062'] = func_2062
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2063 = relay.var("var_2063", dtype = "float32", shape = (8, 12, 6))#candidate|2063|(8, 12, 6)|var|float32
func_2062_call = mutated_mod.get_global_var('func_2062')
call_2064 = func_2062_call(var_2063)
output = call_2064
func_2065 = relay.Function([var_2063], output)
mutated_mod['func_2065'] = func_2065
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1996_call = mod.get_global_var('func_1996')
func_1997_call = mutated_mod.get_global_var('func_1997')
call_2075 = relay.TupleGetItem(func_1996_call(), 0)
call_2076 = relay.TupleGetItem(func_1997_call(), 0)
output = relay.Tuple([call_2075,])
output2 = relay.Tuple([call_2076,])
func_2080 = relay.Function([], output)
mod['func_2080'] = func_2080
mod = relay.transform.InferType()(mod)
mutated_mod['func_2080'] = func_2080
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2080_call = mutated_mod.get_global_var('func_2080')
call_2081 = func_2080_call()
output = call_2081
func_2082 = relay.Function([], output)
mutated_mod['func_2082'] = func_2082
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2080_call = mod.get_global_var('func_2080')
func_2082_call = mutated_mod.get_global_var('func_2082')
call_2083 = relay.TupleGetItem(func_2080_call(), 0)
call_2084 = relay.TupleGetItem(func_2082_call(), 0)
func_1680_call = mod.get_global_var('func_1680')
func_1684_call = mutated_mod.get_global_var('func_1684')
var_2086 = relay.var("var_2086", dtype = "float64", shape = (270, 6))#candidate|2086|(270, 6)|var|float64
const_2087 = relay.const(9, dtype = "uint64")#candidate|2087|()|const|uint64
call_2085 = relay.TupleGetItem(func_1680_call(relay.reshape(var_2086.astype('float64'), [1620,]), relay.reshape(const_2087.astype('uint64'), []), ), 2)
call_2088 = relay.TupleGetItem(func_1684_call(relay.reshape(var_2086.astype('float64'), [1620,]), relay.reshape(const_2087.astype('uint64'), []), ), 2)
bop_2089 = relay.equal(call_2083.astype('bool'), const_2087.astype('bool')) # shape=(8, 12, 6)
bop_2092 = relay.equal(call_2084.astype('bool'), const_2087.astype('bool')) # shape=(8, 12, 6)
output = relay.Tuple([call_2085,var_2086,bop_2089,])
output2 = relay.Tuple([call_2088,var_2086,bop_2092,])
func_2098 = relay.Function([var_2086,], output)
mod['func_2098'] = func_2098
mod = relay.transform.InferType()(mod)
var_2099 = relay.var("var_2099", dtype = "float64", shape = (270, 6))#candidate|2099|(270, 6)|var|float64
output = func_2098(var_2099)
func_2100 = relay.Function([var_2099], output)
mutated_mod['func_2100'] = func_2100
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1386_call = mod.get_global_var('func_1386')
func_1388_call = mutated_mod.get_global_var('func_1388')
call_2105 = func_1386_call()
call_2106 = func_1386_call()
uop_2119 = relay.erf(call_2105.astype('float64')) # shape=(8, 12, 6)
uop_2121 = relay.erf(call_2106.astype('float64')) # shape=(8, 12, 6)
output = relay.Tuple([uop_2119,])
output2 = relay.Tuple([uop_2121,])
func_2123 = relay.Function([], output)
mod['func_2123'] = func_2123
mod = relay.transform.InferType()(mod)
mutated_mod['func_2123'] = func_2123
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2123_call = mutated_mod.get_global_var('func_2123')
call_2124 = func_2123_call()
output = call_2124
func_2125 = relay.Function([], output)
mutated_mod['func_2125'] = func_2125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1996_call = mod.get_global_var('func_1996')
func_1997_call = mutated_mod.get_global_var('func_1997')
call_2219 = relay.TupleGetItem(func_1996_call(), 0)
call_2220 = relay.TupleGetItem(func_1997_call(), 0)
func_2062_call = mod.get_global_var('func_2062')
func_2065_call = mutated_mod.get_global_var('func_2065')
call_2238 = relay.TupleGetItem(func_2062_call(relay.reshape(call_2219.astype('float32'), [8, 12, 6])), 3)
call_2239 = relay.TupleGetItem(func_2065_call(relay.reshape(call_2219.astype('float32'), [8, 12, 6])), 3)
output = relay.Tuple([call_2219,call_2238,])
output2 = relay.Tuple([call_2220,call_2239,])
func_2240 = relay.Function([], output)
mod['func_2240'] = func_2240
mod = relay.transform.InferType()(mod)
output = func_2240()
func_2241 = relay.Function([], output)
mutated_mod['func_2241'] = func_2241
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2250 = relay.var("var_2250", dtype = "int16", shape = (1, 6, 14))#candidate|2250|(1, 6, 14)|var|int16
const_2251 = relay.const([[[-1,6,5,-6,-6,5,9,-8,-8,-4,-10,-7,-8,9],[8,-10,4,-10,1,-9,6,-2,-7,9,-5,-10,8,4],[-4,7,-10,-2,2,-3,-1,-9,6,1,-4,-1,-3,-5],[-10,8,2,7,-2,-6,2,-7,-4,7,-8,5,9,2],[-7,-3,-8,3,6,-3,1,-1,1,-6,-4,4,3,5],[-5,4,-6,9,5,5,1,10,-7,5,-10,-2,-7,-8]],[[6,-4,4,3,4,5,3,3,-6,-6,-3,-3,-5,9],[1,-4,-3,-8,-6,-7,4,-2,-2,10,7,2,-8,-2],[10,-5,-1,8,9,2,-8,8,1,-6,4,-10,2,10],[7,-5,5,7,-10,1,2,7,-10,-1,-4,3,-5,-8],[7,8,-9,-2,-2,-10,6,4,-3,-10,-5,-6,-10,-6],[4,-5,-9,4,6,2,-6,4,2,-2,8,-9,-2,1]],[[-4,8,-2,-6,6,1,-7,-3,5,-5,-3,3,-8,4],[5,-4,6,-6,5,-1,3,4,-7,5,4,1,6,1],[-4,3,-4,-10,-9,9,10,6,6,-5,8,-6,-9,-2],[-1,-10,9,6,-2,-4,-3,-6,4,6,3,2,-3,-6],[5,7,2,-1,-3,-6,1,6,4,-7,-4,-10,-6,8],[1,2,-1,-2,-8,-6,9,-4,4,4,-1,-8,-6,10]],[[1,3,-2,-9,-6,8,3,-5,-9,-3,-8,-1,-10,4],[7,9,-3,-1,-7,-8,3,-7,3,1,10,5,2,8],[6,9,-7,-3,-9,5,-7,9,10,-6,-7,-5,2,-8],[5,-8,10,-4,6,-7,-4,-2,-7,10,-8,-2,-5,3],[-4,-4,7,-10,1,-5,-3,-3,5,9,10,-1,8,-3],[-10,-2,7,5,-10,-2,1,8,-10,-3,8,-8,1,-7]],[[3,-6,6,7,-4,1,7,4,1,-2,-5,-9,-6,1],[8,-10,8,4,-2,9,-3,-1,-4,-8,9,9,4,-6],[6,-10,5,-7,-4,9,6,-5,10,1,2,-2,-9,4],[-10,-6,8,-5,5,-8,-5,-6,-6,-9,-8,-4,-10,-3],[7,4,10,6,-7,-2,2,-3,8,-7,-2,-5,-9,-5],[3,-9,7,-8,5,-4,-4,5,8,-3,1,3,8,-6]],[[-4,5,-8,10,8,-10,-1,-5,3,-10,-10,-7,3,-4],[7,8,-2,-1,-7,-6,8,-8,-2,-5,-5,-6,-10,-5],[3,5,-3,3,6,-6,4,10,7,10,-10,-6,2,9],[-7,6,-6,-1,-6,4,8,-6,1,-2,-3,2,1,-8],[10,-6,2,8,-3,-8,-3,2,4,2,4,-6,8,10],[-7,-2,-6,5,-10,-9,-10,-3,-9,2,3,-9,-10,3]],[[6,-7,2,10,-10,9,6,7,2,10,-7,5,8,6],[-2,6,-2,8,6,3,3,-8,-9,6,6,-5,8,-4],[5,-4,1,-4,5,-9,10,-7,-6,-1,-9,-6,-10,-10],[10,-5,-4,-1,-9,9,7,-6,-4,9,7,4,-6,3],[-9,6,-6,4,2,-6,10,-6,5,-3,5,8,-3,-8],[-3,9,-3,-1,8,9,-3,-2,2,2,-1,8,-9,8]],[[9,3,6,-3,-8,9,2,-7,-5,-7,-8,6,-4,-5],[-1,6,-10,3,10,-6,2,6,3,8,2,-5,-6,2],[-7,4,-2,9,1,10,8,2,3,-6,1,4,-1,6],[4,-9,6,9,8,-2,10,10,9,-9,-10,-9,-1,4],[4,3,-9,8,-8,5,-3,-4,-8,10,-6,10,-6,-7],[-1,-10,1,4,-6,7,-7,1,-9,2,1,7,-3,-5]],[[5,7,-3,1,-2,5,-7,-5,3,4,-3,3,10,-3],[-6,-5,2,-7,3,-8,4,5,6,-6,6,-2,8,-4],[5,5,-8,4,-4,-5,-10,-10,-8,8,4,4,-3,10],[-2,-2,-4,10,-9,3,7,8,5,-4,4,-9,-5,10],[-9,-9,-5,-10,10,-4,-6,2,-7,3,-10,-6,-10,-5],[-8,-2,5,10,4,8,1,5,-9,5,7,9,-6,6]],[[-10,8,5,-6,1,10,-5,-1,2,-8,-5,8,-10,3],[-4,9,-9,-3,-8,7,-3,7,7,8,6,-2,-8,4],[9,-1,6,6,-10,-2,-6,-8,-7,-8,-4,4,2,-2],[-6,6,4,8,-1,5,-3,-10,7,-9,4,9,-6,2],[10,-8,-2,4,6,-6,-8,8,10,-2,7,-1,3,-1],[-2,-8,-6,-9,-3,-4,6,-7,3,-6,5,-7,-1,5]],[[8,-2,-8,-3,7,5,-6,2,-9,6,6,2,-10,-6],[-9,5,-7,-8,-7,1,4,7,-5,3,8,7,-9,-7],[-9,-10,-4,-6,3,-7,-4,6,6,-9,2,8,-9,-8],[-3,-7,-8,1,-3,-6,-10,7,-3,1,8,-4,-9,-2],[5,-7,7,-1,3,8,10,2,-6,3,4,3,-3,2],[-9,-10,-6,-3,3,7,-7,-1,8,-6,-6,8,-2,-10]],[[9,-6,-8,-3,5,7,-3,3,-1,6,10,6,10,6],[6,-8,9,3,10,4,-5,3,-5,-7,-1,-8,6,8],[9,-9,-1,-1,-9,-10,4,6,4,5,-6,-8,5,1],[-1,7,-5,8,-3,6,5,5,-9,9,10,7,-8,4],[-10,-7,6,-2,2,6,-10,9,10,5,5,-5,9,3],[-6,1,4,8,1,10,1,-9,8,-8,-2,-8,-6,3]],[[4,3,5,-7,-9,10,8,-5,5,1,2,2,2,-2],[-6,4,-1,1,10,-6,2,10,5,10,-9,-3,-8,-6],[8,1,-5,3,3,-3,-1,-3,-4,-4,10,8,3,-2],[-10,-5,8,-4,10,-8,-3,-5,1,-7,3,-5,5,2],[-7,-3,5,-7,4,6,1,7,7,6,4,-5,7,1],[1,4,-10,-7,4,7,-7,2,-9,2,4,5,5,6]],[[8,-6,1,-9,6,5,3,-10,7,10,4,1,10,-6],[6,9,-9,4,-4,10,-2,3,-9,6,6,1,8,8],[9,-2,-7,-10,-5,-8,-9,2,5,9,-10,-1,10,6],[5,-7,9,-1,2,5,-6,-8,-3,-10,-8,4,3,4],[-7,-3,-4,7,2,2,-7,-1,1,-2,10,3,-1,3],[2,9,-8,2,-5,-7,-4,10,5,-6,1,-1,10,-8]]], dtype = "int16")#candidate|2251|(14, 6, 14)|const|int16
bop_2252 = relay.less_equal(var_2250.astype('bool'), const_2251.astype('bool')) # shape=(14, 6, 14)
func_2240_call = mod.get_global_var('func_2240')
func_2241_call = mutated_mod.get_global_var('func_2241')
call_2268 = relay.TupleGetItem(func_2240_call(), 0)
call_2269 = relay.TupleGetItem(func_2241_call(), 0)
func_1996_call = mod.get_global_var('func_1996')
func_1997_call = mutated_mod.get_global_var('func_1997')
call_2278 = relay.TupleGetItem(func_1996_call(), 0)
call_2279 = relay.TupleGetItem(func_1997_call(), 0)
func_1924_call = mod.get_global_var('func_1924')
func_1931_call = mutated_mod.get_global_var('func_1931')
var_2291 = relay.var("var_2291", dtype = "float32", shape = (2, 256))#candidate|2291|(2, 256)|var|float32
var_2292 = relay.var("var_2292", dtype = "uint64", shape = ())#candidate|2292|()|var|uint64
var_2293 = relay.var("var_2293", dtype = "float32", shape = (104,))#candidate|2293|(104,)|var|float32
var_2294 = relay.var("var_2294", dtype = "float64", shape = (1, 900))#candidate|2294|(1, 900)|var|float64
var_2295 = relay.var("var_2295", dtype = "float64", shape = (2016,))#candidate|2295|(2016,)|var|float64
call_2290 = relay.TupleGetItem(func_1924_call(relay.reshape(var_2291.astype('float32'), [8, 64]), relay.reshape(var_2292.astype('uint64'), []), relay.reshape(var_2293.astype('float32'), [104,]), relay.reshape(var_2294.astype('float64'), [9, 100]), relay.reshape(var_2295.astype('float64'), [2016,]), ), 10)
call_2296 = relay.TupleGetItem(func_1931_call(relay.reshape(var_2291.astype('float32'), [8, 64]), relay.reshape(var_2292.astype('uint64'), []), relay.reshape(var_2293.astype('float32'), [104,]), relay.reshape(var_2294.astype('float64'), [9, 100]), relay.reshape(var_2295.astype('float64'), [2016,]), ), 10)
bop_2302 = relay.greater(var_2292.astype('bool'), var_2294.astype('bool')) # shape=(1, 900)
bop_2316 = relay.not_equal(var_2250.astype('bool'), const_2251.astype('bool')) # shape=(14, 6, 14)
bop_2319 = relay.subtract(var_2291.astype('float64'), var_2292.astype('float64')) # shape=(2, 256)
func_1924_call = mod.get_global_var('func_1924')
func_1931_call = mutated_mod.get_global_var('func_1931')
call_2336 = relay.TupleGetItem(func_1924_call(relay.reshape(bop_2319.astype('float32'), [8, 64]), relay.reshape(var_2292.astype('uint64'), []), relay.reshape(var_2293.astype('float32'), [104,]), relay.reshape(bop_2302.astype('float64'), [9, 100]), relay.reshape(var_2295.astype('float64'), [2016,]), ), 5)
call_2337 = relay.TupleGetItem(func_1931_call(relay.reshape(bop_2319.astype('float32'), [8, 64]), relay.reshape(var_2292.astype('uint64'), []), relay.reshape(var_2293.astype('float32'), [104,]), relay.reshape(bop_2302.astype('float64'), [9, 100]), relay.reshape(var_2295.astype('float64'), [2016,]), ), 5)
output = relay.Tuple([bop_2252,call_2268,call_2278,call_2290,var_2293,var_2295,bop_2302,bop_2316,bop_2319,call_2336,])
output2 = relay.Tuple([bop_2252,call_2269,call_2279,call_2296,var_2293,var_2295,bop_2302,bop_2316,bop_2319,call_2337,])
func_2348 = relay.Function([var_2250,var_2291,var_2292,var_2293,var_2294,var_2295,], output)
mod['func_2348'] = func_2348
mod = relay.transform.InferType()(mod)
mutated_mod['func_2348'] = func_2348
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2348_call = mutated_mod.get_global_var('func_2348')
var_2350 = relay.var("var_2350", dtype = "int16", shape = (1, 6, 14))#candidate|2350|(1, 6, 14)|var|int16
var_2351 = relay.var("var_2351", dtype = "float32", shape = (2, 256))#candidate|2351|(2, 256)|var|float32
var_2352 = relay.var("var_2352", dtype = "uint64", shape = ())#candidate|2352|()|var|uint64
var_2353 = relay.var("var_2353", dtype = "float32", shape = (104,))#candidate|2353|(104,)|var|float32
var_2354 = relay.var("var_2354", dtype = "float64", shape = (1, 900))#candidate|2354|(1, 900)|var|float64
var_2355 = relay.var("var_2355", dtype = "float64", shape = (2016,))#candidate|2355|(2016,)|var|float64
call_2349 = func_2348_call(var_2350,var_2351,var_2352,var_2353,var_2354,var_2355,)
output = call_2349
func_2356 = relay.Function([var_2350,var_2351,var_2352,var_2353,var_2354,var_2355,], output)
mutated_mod['func_2356'] = func_2356
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1482_call = mod.get_global_var('func_1482')
func_1484_call = mutated_mod.get_global_var('func_1484')
call_2399 = relay.TupleGetItem(func_1482_call(), 0)
call_2400 = relay.TupleGetItem(func_1484_call(), 0)
var_2409 = relay.var("var_2409", dtype = "float64", shape = (8, 12, 6))#candidate|2409|(8, 12, 6)|var|float64
bop_2410 = relay.logical_and(call_2399.astype('bool'), relay.reshape(var_2409.astype('bool'), relay.shape_of(call_2399))) # shape=(8, 12, 6)
bop_2413 = relay.logical_and(call_2400.astype('bool'), relay.reshape(var_2409.astype('bool'), relay.shape_of(call_2400))) # shape=(8, 12, 6)
func_1996_call = mod.get_global_var('func_1996')
func_1997_call = mutated_mod.get_global_var('func_1997')
call_2417 = relay.TupleGetItem(func_1996_call(), 0)
call_2418 = relay.TupleGetItem(func_1997_call(), 0)
uop_2437 = relay.cos(var_2409.astype('float64')) # shape=(8, 12, 6)
output = relay.Tuple([bop_2410,call_2417,uop_2437,])
output2 = relay.Tuple([bop_2413,call_2418,uop_2437,])
func_2439 = relay.Function([var_2409,], output)
mod['func_2439'] = func_2439
mod = relay.transform.InferType()(mod)
var_2440 = relay.var("var_2440", dtype = "float64", shape = (8, 12, 6))#candidate|2440|(8, 12, 6)|var|float64
output = func_2439(var_2440)
func_2441 = relay.Function([var_2440], output)
mutated_mod['func_2441'] = func_2441
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1482_call = mod.get_global_var('func_1482')
func_1484_call = mutated_mod.get_global_var('func_1484')
call_2471 = relay.TupleGetItem(func_1482_call(), 0)
call_2472 = relay.TupleGetItem(func_1484_call(), 0)
uop_2475 = relay.sinh(call_2471.astype('float64')) # shape=(8, 12, 6)
uop_2477 = relay.sinh(call_2472.astype('float64')) # shape=(8, 12, 6)
func_1353_call = mod.get_global_var('func_1353')
func_1358_call = mutated_mod.get_global_var('func_1358')
var_2479 = relay.var("var_2479", dtype = "float64", shape = (1620,))#candidate|2479|(1620,)|var|float64
var_2480 = relay.var("var_2480", dtype = "float32", shape = (104,))#candidate|2480|(104,)|var|float32
var_2481 = relay.var("var_2481", dtype = "uint64", shape = ())#candidate|2481|()|var|uint64
call_2478 = relay.TupleGetItem(func_1353_call(relay.reshape(var_2479.astype('float64'), [9, 12, 15]), relay.reshape(var_2480.astype('float32'), [104,]), relay.reshape(var_2481.astype('uint64'), []), ), 1)
call_2482 = relay.TupleGetItem(func_1358_call(relay.reshape(var_2479.astype('float64'), [9, 12, 15]), relay.reshape(var_2480.astype('float32'), [104,]), relay.reshape(var_2481.astype('uint64'), []), ), 1)
output = relay.Tuple([uop_2475,call_2478,var_2479,var_2480,var_2481,])
output2 = relay.Tuple([uop_2477,call_2482,var_2479,var_2480,var_2481,])
func_2497 = relay.Function([var_2479,var_2480,var_2481,], output)
mod['func_2497'] = func_2497
mod = relay.transform.InferType()(mod)
var_2498 = relay.var("var_2498", dtype = "float64", shape = (1620,))#candidate|2498|(1620,)|var|float64
var_2499 = relay.var("var_2499", dtype = "float32", shape = (104,))#candidate|2499|(104,)|var|float32
var_2500 = relay.var("var_2500", dtype = "uint64", shape = ())#candidate|2500|()|var|uint64
output = func_2497(var_2498,var_2499,var_2500,)
func_2501 = relay.Function([var_2498,var_2499,var_2500,], output)
mutated_mod['func_2501'] = func_2501
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2080_call = mod.get_global_var('func_2080')
func_2082_call = mutated_mod.get_global_var('func_2082')
call_2514 = relay.TupleGetItem(func_2080_call(), 0)
call_2515 = relay.TupleGetItem(func_2082_call(), 0)
output = call_2514
output2 = call_2515
func_2519 = relay.Function([], output)
mod['func_2519'] = func_2519
mod = relay.transform.InferType()(mod)
output = func_2519()
func_2520 = relay.Function([], output)
mutated_mod['func_2520'] = func_2520
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2123_call = mod.get_global_var('func_2123')
func_2125_call = mutated_mod.get_global_var('func_2125')
call_2567 = relay.TupleGetItem(func_2123_call(), 0)
call_2568 = relay.TupleGetItem(func_2125_call(), 0)
func_326_call = mod.get_global_var('func_326')
func_329_call = mutated_mod.get_global_var('func_329')
const_2590 = relay.const([3,-8,8,-10,3,10,-4,-10,-1,4,-6,-7,-8,8,3,5,9,-1,-3,5,6,5,-6,-2,4,6,10,4,-2,2,-6,-3,2,-1,-4,-10,4,10,-2,6,10,-8,7,8,8,5,9,-6,2,6,8,6,-5,1,-9,-3,-10,9,5,-9,7,5,-1,-9,-2,1,-4,9,3,7,10,-9,1,10,-5,-10,-2,-2,-8,8,-7,10,-5,-1,3,-10,-5,3,-7,5,3,-6,-10,10,9,-10,8,-6,-8,-3,2,-4,-2,-7,2,-3,-7,2,9,-7,-9,-3,-6,-1,-7,-7,-8,7,10,1,8,-8,6,4,1,2,-8,-8,5,9,4,10,-9,-3,5,-10,1,7,8,-1,-3,-9,-7,5,6,3,-2,-5,-3,7,-4,10,4,1,9,1,4,-2,8,-4,-1,-8,3,3,2,2,6,-9,9,4,-3,-9,8,-9,-9,3,-3,5,4,10,8,10,-3,-6,-3,2,9,3,5,4,-7,5,7,4,8,5,-7,9,8,-4,-8,-4,-10,-4,9,8,-2,5,-3,-1,2,-6,-5,-1,-2,1,-3,-7,-4,-7,-9,-10,-10,-2,-6,3,-1,9,5,8,-4,7,7,-10,7,5,-2,8,-2,4,-3,7,7,-1,-3,10,-9,-5,-5,7,-2,-7,-1,-8,-5,-2,1,-4,3,-3,-4,6,-1,2,-7,7,3,-6,9,9,8,2,-9,10,-10,10,5,9,-6,10,-2,-3,-1,9,-2,-5,10,-10,4,2,-2,-9,-8,-2,1,-8,-1,8,-1,-3,7,-3,-5,-7,2,2,4,10,-4,-8,6,-8,8,-8,-2,2,-9,6,10,5,-3,-8,10,8,-2,-9,-4,-5,10,1,-4,-1,10,9,1,1,-10,-8,7,-6,-4,-7,-1,-1,6,5,7,-5,3,4,-9,-7,-4,-1,3,-1,-2,5,1,-6,-10,-6,-7,1,-6,-6,-1,-6,-8,-7,-4,-9,-7,10,10,4,5,6,-3,-5,-1,-6,4,9,-6,-4,-5,7,-9,9,-2,-9,2,-2,2,6,6,8,-1,-3,-5,7,2,-3,2,-10,6,-3,5,-5,-3,-2,10,-9,9,10,-1,-4,-5,-3], dtype = "uint8")#candidate|2590|(420,)|const|uint8
call_2589 = relay.TupleGetItem(func_326_call(relay.reshape(const_2590.astype('uint8'), [15, 2, 14]), relay.reshape(const_2590.astype('uint8'), [15, 2, 14]), ), 0)
call_2591 = relay.TupleGetItem(func_329_call(relay.reshape(const_2590.astype('uint8'), [15, 2, 14]), relay.reshape(const_2590.astype('uint8'), [15, 2, 14]), ), 0)
output = relay.Tuple([call_2567,call_2589,const_2590,])
output2 = relay.Tuple([call_2568,call_2591,const_2590,])
func_2595 = relay.Function([], output)
mod['func_2595'] = func_2595
mod = relay.transform.InferType()(mod)
mutated_mod['func_2595'] = func_2595
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2595_call = mutated_mod.get_global_var('func_2595')
call_2596 = func_2595_call()
output = call_2596
func_2597 = relay.Function([], output)
mutated_mod['func_2597'] = func_2597
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2703 = relay.var("var_2703", dtype = "float64", shape = (2, 16, 5))#candidate|2703|(2, 16, 5)|var|float64
var_2704 = relay.var("var_2704", dtype = "float64", shape = (2, 16, 5))#candidate|2704|(2, 16, 5)|var|float64
bop_2705 = relay.mod(var_2703.astype('float64'), relay.reshape(var_2704.astype('float64'), relay.shape_of(var_2703))) # shape=(2, 16, 5)
uop_2720 = relay.sigmoid(var_2703.astype('float64')) # shape=(2, 16, 5)
output = relay.Tuple([bop_2705,uop_2720,])
output2 = relay.Tuple([bop_2705,uop_2720,])
func_2722 = relay.Function([var_2703,var_2704,], output)
mod['func_2722'] = func_2722
mod = relay.transform.InferType()(mod)
var_2723 = relay.var("var_2723", dtype = "float64", shape = (2, 16, 5))#candidate|2723|(2, 16, 5)|var|float64
var_2724 = relay.var("var_2724", dtype = "float64", shape = (2, 16, 5))#candidate|2724|(2, 16, 5)|var|float64
output = func_2722(var_2723,var_2724,)
func_2725 = relay.Function([var_2723,var_2724,], output)
mutated_mod['func_2725'] = func_2725
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1386_call = mod.get_global_var('func_1386')
func_1388_call = mutated_mod.get_global_var('func_1388')
call_2734 = func_1386_call()
call_2735 = func_1386_call()
func_2080_call = mod.get_global_var('func_2080')
func_2082_call = mutated_mod.get_global_var('func_2082')
call_2746 = relay.TupleGetItem(func_2080_call(), 0)
call_2747 = relay.TupleGetItem(func_2082_call(), 0)
output = relay.Tuple([call_2734,call_2746,])
output2 = relay.Tuple([call_2735,call_2747,])
func_2754 = relay.Function([], output)
mod['func_2754'] = func_2754
mod = relay.transform.InferType()(mod)
output = func_2754()
func_2755 = relay.Function([], output)
mutated_mod['func_2755'] = func_2755
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1996_call = mod.get_global_var('func_1996')
func_1997_call = mutated_mod.get_global_var('func_1997')
call_2769 = relay.TupleGetItem(func_1996_call(), 0)
call_2770 = relay.TupleGetItem(func_1997_call(), 0)
uop_2773 = relay.cosh(call_2769.astype('float64')) # shape=(8, 12, 6)
uop_2775 = relay.cosh(call_2770.astype('float64')) # shape=(8, 12, 6)
func_427_call = mod.get_global_var('func_427')
func_430_call = mutated_mod.get_global_var('func_430')
var_2778 = relay.var("var_2778", dtype = "uint64", shape = ())#candidate|2778|()|var|uint64
var_2779 = relay.var("var_2779", dtype = "uint64", shape = (160,))#candidate|2779|(160,)|var|uint64
call_2777 = relay.TupleGetItem(func_427_call(relay.reshape(var_2778.astype('uint64'), []), relay.reshape(var_2779.astype('uint64'), [16, 5, 2]), ), 0)
call_2780 = relay.TupleGetItem(func_430_call(relay.reshape(var_2778.astype('uint64'), []), relay.reshape(var_2779.astype('uint64'), [16, 5, 2]), ), 0)
output = relay.Tuple([uop_2773,call_2777,var_2778,var_2779,])
output2 = relay.Tuple([uop_2775,call_2780,var_2778,var_2779,])
func_2784 = relay.Function([var_2778,var_2779,], output)
mod['func_2784'] = func_2784
mod = relay.transform.InferType()(mod)
mutated_mod['func_2784'] = func_2784
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2784_call = mutated_mod.get_global_var('func_2784')
var_2786 = relay.var("var_2786", dtype = "uint64", shape = ())#candidate|2786|()|var|uint64
var_2787 = relay.var("var_2787", dtype = "uint64", shape = (160,))#candidate|2787|(160,)|var|uint64
call_2785 = func_2784_call(var_2786,var_2787,)
output = call_2785
func_2788 = relay.Function([var_2786,var_2787,], output)
mutated_mod['func_2788'] = func_2788
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2846 = relay.const([[[2.373744,6.441761,-0.441540,-3.321561,5.108222,7.921440,5.473001,-8.220631,-6.646920,-5.853531,5.515478,8.366484,3.632265,-6.452285],[3.756304,-4.818581,6.285202,4.139182,-0.343160,-7.615532,-9.075086,7.964757,-7.013436,-1.097308,-2.917336,-9.124629,-9.314081,-7.031919],[8.690006,2.087059,-3.196009,3.760788,3.898576,3.167904,5.631465,2.247008,7.314567,3.866831,-4.099911,2.962115,7.417991,-4.816995],[4.809501,5.186067,7.581292,-8.139853,6.942548,-8.586449,-4.553174,-8.335667,9.259241,3.994070,-4.792493,-7.360172,0.248724,-9.302450],[9.257932,-4.417025,9.671996,-4.578101,-5.836627,-2.898482,-6.586794,-5.650455,-5.976117,-0.618271,-6.730654,9.749404,1.077521,0.341084],[7.935483,1.806740,2.639081,0.689831,9.620102,7.055189,-2.677032,4.820932,-0.414009,-5.733395,-6.532098,-6.482357,-7.084369,-6.867722],[-6.294114,-4.123261,1.373821,-5.880466,5.111163,2.713552,9.585579,-7.012632,-6.251178,8.172831,0.919022,2.778598,-5.835573,-7.199716],[7.806492,-8.643462,8.755240,6.004425,-6.453823,3.780535,-0.669875,8.304491,1.362371,7.208791,5.703925,6.089377,-0.725439,8.534610],[-3.995758,-5.414645,-6.866445,7.247330,4.270278,-3.250370,4.458197,-0.829078,-2.876339,9.278496,0.751667,1.338433,7.275906,-9.126489],[1.720526,1.946777,1.789594,-9.215285,-1.101872,5.011276,-6.869886,-8.843716,3.328615,0.517315,-6.598815,-5.069370,-9.904732,-7.599913],[-5.641458,6.251388,-3.089179,3.965646,-3.289123,2.094780,-7.581950,3.396574,-1.128943,-2.817176,-4.558848,8.841132,-4.939311,-4.461688],[1.027378,1.871194,5.667098,-4.486226,6.655788,-1.060181,8.767017,-5.344576,-2.081049,-8.328070,3.242145,3.434277,6.532346,-6.635494],[-9.764563,-6.534171,-7.567887,6.183580,-9.407380,7.607340,2.502723,-4.314836,-5.554902,-6.584338,-5.526018,6.377652,9.460987,5.489732],[-5.966127,7.774703,-7.914163,-0.794172,8.921506,4.487629,5.300522,6.082517,-7.761307,1.549423,-8.148309,7.427610,8.252753,5.358779],[6.294068,3.705719,-0.489723,-1.927416,-1.177860,8.938037,-7.149071,5.677793,-5.992551,6.147891,-1.255662,6.024166,-2.229027,2.112040],[5.817847,4.035505,8.109169,-7.967148,1.778458,9.667588,-2.356307,9.820933,7.391898,-0.809034,9.674197,-9.810071,9.729504,-4.317371]],[[-6.654316,9.904894,-8.168731,6.989574,6.292949,-0.190641,-8.063787,-1.908612,-9.038431,-1.382399,-6.801841,8.804613,-7.549890,-6.434031],[6.878323,4.694912,-2.494055,-7.104192,2.628150,6.932527,7.891328,5.213359,3.779681,-5.253684,1.920942,9.230521,-3.893455,9.879531],[-5.344931,-0.485687,9.350632,1.020331,-8.077337,-4.181096,5.646500,-8.023940,7.535233,4.096564,5.410953,3.425088,-8.880429,-0.230389],[5.578888,5.488595,2.687460,-1.588695,1.795715,7.923004,3.128851,-8.551028,1.125479,6.313179,-2.615629,2.730431,9.455160,3.941726],[2.059198,-4.685638,7.658198,-2.657418,2.898045,5.251688,-6.059040,-7.889392,9.103264,4.309338,1.924179,9.664345,9.254656,9.738802],[4.726934,-3.876654,-5.000502,-3.216978,-2.443615,3.748344,4.079517,-6.791024,1.861812,8.192845,0.126252,9.351430,0.658535,0.426110],[0.213788,2.993846,2.158182,3.740138,-0.073964,1.858506,-2.367258,-5.243092,-3.967550,1.995823,4.053664,-4.701062,4.314197,5.607162],[-7.132482,0.463645,6.489241,0.506420,-6.994143,5.706898,-5.357643,0.899624,5.362495,-9.536258,8.768771,5.493870,-1.828208,9.912502],[4.179134,-1.078865,4.905060,7.187880,8.483205,2.752017,6.512709,-0.150309,-9.469677,-0.811338,-0.156067,2.297427,-2.869287,-9.984343],[-7.226473,3.212626,5.430713,6.809202,7.285413,2.674253,2.706425,0.507648,1.162742,-2.320928,3.959169,8.418864,7.257376,9.862065],[9.625615,-7.888894,-7.488174,0.838339,-6.682650,-9.025583,8.512258,-1.284316,8.407029,9.350235,0.445657,-9.570933,-0.255319,-5.039500],[-5.826012,-8.979131,-6.889775,5.631535,-4.220656,-8.422487,8.795691,-2.773570,-0.414398,-0.205518,-5.918323,0.255292,8.015175,5.570122],[6.444961,-4.593177,5.345709,-4.711724,4.158639,-5.400344,-1.778673,-8.936548,-3.918598,9.091079,4.324516,-7.221439,5.689683,-3.636238],[8.140010,3.640506,0.154586,-8.315349,-1.082375,-3.371020,-9.816245,3.197502,2.987889,-9.719395,-1.201322,9.303445,7.433369,-4.536480],[3.475516,-8.613467,-8.491683,9.349855,7.385060,-7.511120,-8.085340,8.290125,-7.784883,-2.635710,0.728440,9.794213,-3.908585,1.545414],[-4.363206,-9.853752,-0.684792,-2.469891,-0.410806,0.396350,9.352098,4.977264,-2.431606,-2.347733,1.364420,9.066535,1.224817,4.688347]]], dtype = "float32")#candidate|2846|(2, 16, 14)|const|float32
const_2847 = relay.const([[[-0.452514,-1.283900,8.308514,6.170646,1.450503,3.826599,9.128335,-2.493386,7.097907,1.626144,9.892479,-9.810080,0.341440,5.293342],[1.399573,-8.767675,-4.152971,-5.363545,5.760461,2.565217,-7.644883,5.905390,8.450724,-5.152326,5.226434,-5.483787,1.256898,9.278577],[3.656443,2.722646,5.054656,-3.413814,-7.493687,9.977591,-1.610293,-5.006016,9.276286,-4.930250,9.981749,0.670266,-4.937368,-1.681098],[-1.391843,5.786809,-2.213066,-7.859560,-8.335197,-4.848840,-8.566060,-2.673400,-7.924099,0.411286,6.570279,2.440129,-4.276379,6.689768],[-4.670573,-5.408315,4.272278,-2.869472,-6.664197,2.942844,7.666190,5.808675,2.505782,-7.725800,-6.806460,6.686066,6.149727,9.618096],[-9.244460,3.912645,-7.818174,6.941548,9.545176,2.184630,1.544588,-1.880056,-0.761837,-1.901366,2.536139,-4.991759,-0.019600,4.923790],[-3.237923,2.342646,0.439583,6.004172,0.671988,9.642563,0.677523,-9.942005,6.381086,4.942202,8.072984,8.416954,9.996822,-2.246747],[-3.412412,3.779030,-5.095674,5.768517,4.634387,7.780133,2.052643,2.185853,-6.661982,2.717212,-1.039458,1.678261,-8.973750,9.632505],[-5.904353,6.117472,1.942686,2.308703,-3.666970,-3.596128,-0.191250,-8.659988,-2.397298,-0.177616,4.969423,6.733263,-2.069100,6.247372],[1.644334,-3.443489,2.556218,-2.196793,2.459112,-8.145290,-1.803179,5.911697,1.499691,8.779814,-3.872551,-8.971582,7.062186,1.653056],[-6.386814,7.915470,6.043647,-7.070380,5.003505,-2.531288,-1.182714,-0.649433,2.802214,2.102967,9.894242,-3.253885,-2.200536,-2.662571],[-8.020161,-0.235690,-8.106125,5.041269,3.151195,-7.478702,-2.792325,7.150676,-0.394586,-2.687598,-0.653961,-7.907752,-4.484220,5.998063],[6.868634,-4.389160,4.077226,-3.125522,-2.522337,-7.712101,8.360069,8.114813,5.982170,0.272651,-2.997836,8.042898,0.307059,3.312209],[-8.813466,5.497679,-9.552480,-7.035810,-9.123764,8.126251,-8.630274,-1.304686,5.810778,4.684790,1.243070,-4.901327,-0.136150,-9.401186],[1.192466,3.402772,-9.000033,1.977556,8.392076,-3.125276,-7.160885,-5.786206,6.495666,4.942656,-2.702513,7.031078,6.057914,-0.958008],[5.399133,6.395269,-6.276131,5.200866,2.419570,9.745565,-4.558205,-5.315052,6.117447,8.451342,-3.749954,0.369084,6.209020,-8.041600]],[[-8.328331,7.051553,2.017545,-4.896875,2.193632,-9.911776,-9.389379,0.069196,1.739029,-7.338062,0.132509,-7.873591,-0.967436,-9.092070],[-3.752485,-3.432442,7.910099,9.606822,-8.904283,-9.788937,3.632600,0.002567,-6.552078,-8.799061,-3.663178,9.523784,-3.549196,1.644610],[2.034723,-0.210230,-2.059302,0.519818,-9.133250,-5.016235,-0.265065,9.746471,6.091822,-2.560942,4.814133,-2.195947,9.800956,2.918798],[2.572391,-1.170462,8.774856,-2.208030,7.878229,0.389135,-8.408392,-0.980154,6.664626,-3.002146,-7.748423,-9.354622,4.613540,-5.172129],[-3.736003,-7.388253,-8.057360,3.856830,-2.329692,-4.389652,1.138103,8.721420,0.526549,-7.634798,1.829371,-2.195100,7.983199,-8.042757],[1.870891,8.705452,-8.697259,0.456977,-2.518002,-3.625822,-3.523802,-8.881228,9.825478,-5.717315,-2.376003,2.806211,7.014625,9.023534],[-3.112802,-4.763706,-9.347313,-5.121412,8.546438,-2.958298,-9.593839,-0.612788,4.880229,-2.987378,2.667072,1.336317,8.036299,0.731554],[-3.681297,-8.849701,-8.582763,-3.751632,-4.720976,-9.560686,-5.723005,-5.779200,0.528659,-2.441102,7.546587,7.565018,8.109765,-7.609144],[5.360181,8.679911,3.358693,3.693912,-2.114061,-1.740686,-8.459948,7.317738,8.784948,2.485475,-3.506409,1.766138,-4.614155,-9.269063],[-1.991402,-9.602263,3.071553,5.224167,1.468073,-5.022529,2.035548,5.131247,9.516542,-3.327574,-3.279318,-9.058568,2.339469,-9.752955],[-9.971020,9.378269,-6.510966,2.252745,-5.800506,-0.554894,4.260142,1.630851,4.217739,-9.136501,4.504710,-5.584669,-1.094435,3.111616],[-3.459527,7.512833,-6.747385,3.295832,-4.745493,-0.887200,-5.590288,6.337339,-1.093990,-7.947392,5.387586,-2.769258,3.312609,-6.969777],[4.428876,-1.892723,5.168300,4.817723,-3.944592,-7.333211,0.184072,7.029786,2.807217,3.435973,-6.095512,-0.012697,-4.633494,-5.576634],[7.326559,5.382183,-6.207184,-4.628712,4.799143,-3.086189,0.020776,-7.511255,9.758354,-8.550125,-6.464474,-2.160325,4.764595,-3.983084],[-6.183722,6.213928,9.584976,-1.195076,-5.389684,-3.326048,-6.096374,-8.009661,6.648979,-9.123459,-8.436376,-6.474551,-3.780430,7.114302],[9.655571,9.254604,7.701944,1.983304,9.490806,-0.207125,-6.456883,2.469743,9.877712,-1.965347,8.168316,-0.623136,0.346769,-1.745153]]], dtype = "float32")#candidate|2847|(2, 16, 14)|const|float32
bop_2848 = relay.floor_divide(const_2846.astype('float32'), relay.reshape(const_2847.astype('float32'), relay.shape_of(const_2846))) # shape=(2, 16, 14)
output = relay.Tuple([bop_2848,])
output2 = relay.Tuple([bop_2848,])
func_2856 = relay.Function([], output)
mod['func_2856'] = func_2856
mod = relay.transform.InferType()(mod)
output = func_2856()
func_2857 = relay.Function([], output)
mutated_mod['func_2857'] = func_2857
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1386_call = mod.get_global_var('func_1386')
func_1388_call = mutated_mod.get_global_var('func_1388')
call_2909 = func_1386_call()
call_2910 = func_1386_call()
func_2784_call = mod.get_global_var('func_2784')
func_2788_call = mutated_mod.get_global_var('func_2788')
var_2916 = relay.var("var_2916", dtype = "uint64", shape = ())#candidate|2916|()|var|uint64
var_2917 = relay.var("var_2917", dtype = "uint64", shape = (160,))#candidate|2917|(160,)|var|uint64
call_2915 = relay.TupleGetItem(func_2784_call(relay.reshape(var_2916.astype('uint64'), []), relay.reshape(var_2917.astype('uint64'), [160,]), ), 0)
call_2918 = relay.TupleGetItem(func_2788_call(relay.reshape(var_2916.astype('uint64'), []), relay.reshape(var_2917.astype('uint64'), [160,]), ), 0)
func_427_call = mod.get_global_var('func_427')
func_430_call = mutated_mod.get_global_var('func_430')
call_2924 = relay.TupleGetItem(func_427_call(relay.reshape(var_2916.astype('uint64'), []), relay.reshape(var_2917.astype('uint64'), [16, 5, 2]), ), 0)
call_2925 = relay.TupleGetItem(func_430_call(relay.reshape(var_2916.astype('uint64'), []), relay.reshape(var_2917.astype('uint64'), [16, 5, 2]), ), 0)
bop_2932 = relay.greater(call_2924.astype('bool'), var_2916.astype('bool')) # shape=(16, 5, 2)
bop_2935 = relay.greater(call_2925.astype('bool'), var_2916.astype('bool')) # shape=(16, 5, 2)
output = relay.Tuple([call_2909,call_2915,var_2917,bop_2932,])
output2 = relay.Tuple([call_2910,call_2918,var_2917,bop_2935,])
func_2954 = relay.Function([var_2916,var_2917,], output)
mod['func_2954'] = func_2954
mod = relay.transform.InferType()(mod)
mutated_mod['func_2954'] = func_2954
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2954_call = mutated_mod.get_global_var('func_2954')
var_2956 = relay.var("var_2956", dtype = "uint64", shape = ())#candidate|2956|()|var|uint64
var_2957 = relay.var("var_2957", dtype = "uint64", shape = (160,))#candidate|2957|(160,)|var|uint64
call_2955 = func_2954_call(var_2956,var_2957,)
output = call_2955
func_2958 = relay.Function([var_2956,var_2957,], output)
mutated_mod['func_2958'] = func_2958
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2080_call = mod.get_global_var('func_2080')
func_2082_call = mutated_mod.get_global_var('func_2082')
call_2992 = relay.TupleGetItem(func_2080_call(), 0)
call_2993 = relay.TupleGetItem(func_2082_call(), 0)
output = call_2992
output2 = call_2993
func_2994 = relay.Function([], output)
mod['func_2994'] = func_2994
mod = relay.transform.InferType()(mod)
mutated_mod['func_2994'] = func_2994
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2994_call = mutated_mod.get_global_var('func_2994')
call_2995 = func_2994_call()
output = call_2995
func_2996 = relay.Function([], output)
mutated_mod['func_2996'] = func_2996
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3011 = relay.const([[[-7,-2,5,9,9],[6,-10,-7,-6,-4]],[[-10,-7,10,-3,-2],[-4,3,-2,-10,-4]],[[10,-2,-6,5,-8],[8,-5,-8,-10,-7]],[[1,-5,-1,-5,-10],[9,-1,-10,-10,9]],[[-6,-7,-2,6,-5],[-8,6,1,2,8]]], dtype = "int8")#candidate|3011|(5, 2, 5)|const|int8
var_3012 = relay.var("var_3012", dtype = "int8", shape = (5, 2, 5))#candidate|3012|(5, 2, 5)|var|int8
bop_3013 = relay.greater_equal(const_3011.astype('bool'), relay.reshape(var_3012.astype('bool'), relay.shape_of(const_3011))) # shape=(5, 2, 5)
func_1996_call = mod.get_global_var('func_1996')
func_1997_call = mutated_mod.get_global_var('func_1997')
call_3035 = relay.TupleGetItem(func_1996_call(), 0)
call_3036 = relay.TupleGetItem(func_1997_call(), 0)
output = relay.Tuple([bop_3013,call_3035,])
output2 = relay.Tuple([bop_3013,call_3036,])
func_3050 = relay.Function([var_3012,], output)
mod['func_3050'] = func_3050
mod = relay.transform.InferType()(mod)
var_3051 = relay.var("var_3051", dtype = "int8", shape = (5, 2, 5))#candidate|3051|(5, 2, 5)|var|int8
output = func_3050(var_3051)
func_3052 = relay.Function([var_3051], output)
mutated_mod['func_3052'] = func_3052
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2856_call = mod.get_global_var('func_2856')
func_2857_call = mutated_mod.get_global_var('func_2857')
call_3109 = relay.TupleGetItem(func_2856_call(), 0)
call_3110 = relay.TupleGetItem(func_2857_call(), 0)
output = call_3109
output2 = call_3110
func_3133 = relay.Function([], output)
mod['func_3133'] = func_3133
mod = relay.transform.InferType()(mod)
mutated_mod['func_3133'] = func_3133
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3133_call = mutated_mod.get_global_var('func_3133')
call_3134 = func_3133_call()
output = call_3134
func_3135 = relay.Function([], output)
mutated_mod['func_3135'] = func_3135
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2080_call = mod.get_global_var('func_2080')
func_2082_call = mutated_mod.get_global_var('func_2082')
call_3207 = relay.TupleGetItem(func_2080_call(), 0)
call_3208 = relay.TupleGetItem(func_2082_call(), 0)
uop_3216 = relay.exp(call_3207.astype('float32')) # shape=(8, 12, 6)
uop_3218 = relay.exp(call_3208.astype('float32')) # shape=(8, 12, 6)
var_3224 = relay.var("var_3224", dtype = "float32", shape = (8, 12, 6))#candidate|3224|(8, 12, 6)|var|float32
bop_3225 = relay.not_equal(uop_3216.astype('bool'), relay.reshape(var_3224.astype('bool'), relay.shape_of(uop_3216))) # shape=(8, 12, 6)
bop_3228 = relay.not_equal(uop_3218.astype('bool'), relay.reshape(var_3224.astype('bool'), relay.shape_of(uop_3218))) # shape=(8, 12, 6)
output = bop_3225
output2 = bop_3228
func_3229 = relay.Function([var_3224,], output)
mod['func_3229'] = func_3229
mod = relay.transform.InferType()(mod)
var_3230 = relay.var("var_3230", dtype = "float32", shape = (8, 12, 6))#candidate|3230|(8, 12, 6)|var|float32
output = func_3229(var_3230)
func_3231 = relay.Function([var_3230], output)
mutated_mod['func_3231'] = func_3231
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2519_call = mod.get_global_var('func_2519')
func_2520_call = mutated_mod.get_global_var('func_2520')
call_3276 = func_2519_call()
call_3277 = func_2519_call()
output = relay.Tuple([call_3276,])
output2 = relay.Tuple([call_3277,])
func_3286 = relay.Function([], output)
mod['func_3286'] = func_3286
mod = relay.transform.InferType()(mod)
output = func_3286()
func_3287 = relay.Function([], output)
mutated_mod['func_3287'] = func_3287
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2595_call = mod.get_global_var('func_2595')
func_2597_call = mutated_mod.get_global_var('func_2597')
call_3293 = relay.TupleGetItem(func_2595_call(), 1)
call_3294 = relay.TupleGetItem(func_2597_call(), 1)
output = relay.Tuple([call_3293,])
output2 = relay.Tuple([call_3294,])
func_3295 = relay.Function([], output)
mod['func_3295'] = func_3295
mod = relay.transform.InferType()(mod)
mutated_mod['func_3295'] = func_3295
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3295_call = mutated_mod.get_global_var('func_3295')
call_3296 = func_3295_call()
output = call_3296
func_3297 = relay.Function([], output)
mutated_mod['func_3297'] = func_3297
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2754_call = mod.get_global_var('func_2754')
func_2755_call = mutated_mod.get_global_var('func_2755')
call_3309 = relay.TupleGetItem(func_2754_call(), 0)
call_3310 = relay.TupleGetItem(func_2755_call(), 0)
output = relay.Tuple([call_3309,])
output2 = relay.Tuple([call_3310,])
func_3318 = relay.Function([], output)
mod['func_3318'] = func_3318
mod = relay.transform.InferType()(mod)
mutated_mod['func_3318'] = func_3318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3318_call = mutated_mod.get_global_var('func_3318')
call_3319 = func_3318_call()
output = call_3319
func_3320 = relay.Function([], output)
mutated_mod['func_3320'] = func_3320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2123_call = mod.get_global_var('func_2123')
func_2125_call = mutated_mod.get_global_var('func_2125')
call_3334 = relay.TupleGetItem(func_2123_call(), 0)
call_3335 = relay.TupleGetItem(func_2125_call(), 0)
uop_3339 = relay.sin(call_3334.astype('float64')) # shape=(8, 12, 6)
uop_3341 = relay.sin(call_3335.astype('float64')) # shape=(8, 12, 6)
bop_3354 = relay.floor_mod(call_3334.astype('float32'), relay.reshape(uop_3339.astype('float32'), relay.shape_of(call_3334))) # shape=(8, 12, 6)
bop_3357 = relay.floor_mod(call_3335.astype('float32'), relay.reshape(uop_3341.astype('float32'), relay.shape_of(call_3335))) # shape=(8, 12, 6)
uop_3360 = relay.atan(call_3334.astype('float64')) # shape=(8, 12, 6)
uop_3362 = relay.atan(call_3335.astype('float64')) # shape=(8, 12, 6)
uop_3371 = relay.log10(call_3334.astype('float32')) # shape=(8, 12, 6)
uop_3373 = relay.log10(call_3335.astype('float32')) # shape=(8, 12, 6)
func_3050_call = mod.get_global_var('func_3050')
func_3052_call = mutated_mod.get_global_var('func_3052')
const_3387 = relay.const([10,9,2,-10,3,-1,5,-7,-8,5,-7,10,9,-1,1,-3,7,3,-4,-2,-10,-6,-4,5,-5,-5,-9,6,1,1,9,-10,-7,-8,7,-10,2,2,-8,-9,7,-5,7,6,-9,7,-2,6,2,-10], dtype = "int8")#candidate|3387|(50,)|const|int8
call_3386 = relay.TupleGetItem(func_3050_call(relay.reshape(const_3387.astype('int8'), [5, 2, 5])), 1)
call_3388 = relay.TupleGetItem(func_3052_call(relay.reshape(const_3387.astype('int8'), [5, 2, 5])), 1)
func_2754_call = mod.get_global_var('func_2754')
func_2755_call = mutated_mod.get_global_var('func_2755')
call_3390 = relay.TupleGetItem(func_2754_call(), 1)
call_3391 = relay.TupleGetItem(func_2755_call(), 1)
bop_3393 = relay.logical_xor(uop_3371.astype('int64'), relay.reshape(call_3334.astype('int64'), relay.shape_of(uop_3371))) # shape=(8, 12, 6)
bop_3396 = relay.logical_xor(uop_3373.astype('int64'), relay.reshape(call_3335.astype('int64'), relay.shape_of(uop_3373))) # shape=(8, 12, 6)
func_3050_call = mod.get_global_var('func_3050')
func_3052_call = mutated_mod.get_global_var('func_3052')
call_3400 = relay.TupleGetItem(func_3050_call(relay.reshape(const_3387.astype('int8'), [5, 2, 5])), 0)
call_3401 = relay.TupleGetItem(func_3052_call(relay.reshape(const_3387.astype('int8'), [5, 2, 5])), 0)
output = relay.Tuple([bop_3354,uop_3360,call_3386,const_3387,call_3390,bop_3393,call_3400,])
output2 = relay.Tuple([bop_3357,uop_3362,call_3388,const_3387,call_3391,bop_3396,call_3401,])
func_3404 = relay.Function([], output)
mod['func_3404'] = func_3404
mod = relay.transform.InferType()(mod)
output = func_3404()
func_3405 = relay.Function([], output)
mutated_mod['func_3405'] = func_3405
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2240_call = mod.get_global_var('func_2240')
func_2241_call = mutated_mod.get_global_var('func_2241')
call_3432 = relay.TupleGetItem(func_2240_call(), 0)
call_3433 = relay.TupleGetItem(func_2241_call(), 0)
var_3438 = relay.var("var_3438", dtype = "float32", shape = (8, 12, 6))#candidate|3438|(8, 12, 6)|var|float32
bop_3439 = relay.greater_equal(call_3432.astype('bool'), relay.reshape(var_3438.astype('bool'), relay.shape_of(call_3432))) # shape=(8, 12, 6)
bop_3442 = relay.greater_equal(call_3433.astype('bool'), relay.reshape(var_3438.astype('bool'), relay.shape_of(call_3433))) # shape=(8, 12, 6)
output = relay.Tuple([bop_3439,])
output2 = relay.Tuple([bop_3442,])
func_3455 = relay.Function([var_3438,], output)
mod['func_3455'] = func_3455
mod = relay.transform.InferType()(mod)
mutated_mod['func_3455'] = func_3455
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3456 = relay.var("var_3456", dtype = "float32", shape = (8, 12, 6))#candidate|3456|(8, 12, 6)|var|float32
func_3455_call = mutated_mod.get_global_var('func_3455')
call_3457 = func_3455_call(var_3456)
output = call_3457
func_3458 = relay.Function([var_3456], output)
mutated_mod['func_3458'] = func_3458
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3404_call = mod.get_global_var('func_3404')
func_3405_call = mutated_mod.get_global_var('func_3405')
call_3468 = relay.TupleGetItem(func_3404_call(), 1)
call_3469 = relay.TupleGetItem(func_3405_call(), 1)
uop_3472 = relay.rsqrt(call_3468.astype('float32')) # shape=(8, 12, 6)
uop_3474 = relay.rsqrt(call_3469.astype('float32')) # shape=(8, 12, 6)
bop_3487 = relay.mod(call_3468.astype('float64'), relay.reshape(uop_3472.astype('float64'), relay.shape_of(call_3468))) # shape=(8, 12, 6)
bop_3490 = relay.mod(call_3469.astype('float64'), relay.reshape(uop_3474.astype('float64'), relay.shape_of(call_3469))) # shape=(8, 12, 6)
func_2595_call = mod.get_global_var('func_2595')
func_2597_call = mutated_mod.get_global_var('func_2597')
call_3500 = relay.TupleGetItem(func_2595_call(), 0)
call_3501 = relay.TupleGetItem(func_2597_call(), 0)
func_2123_call = mod.get_global_var('func_2123')
func_2125_call = mutated_mod.get_global_var('func_2125')
call_3502 = relay.TupleGetItem(func_2123_call(), 0)
call_3503 = relay.TupleGetItem(func_2125_call(), 0)
output = relay.Tuple([bop_3487,call_3500,call_3502,])
output2 = relay.Tuple([bop_3490,call_3501,call_3503,])
func_3505 = relay.Function([], output)
mod['func_3505'] = func_3505
mod = relay.transform.InferType()(mod)
output = func_3505()
func_3506 = relay.Function([], output)
mutated_mod['func_3506'] = func_3506
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1386_call = mod.get_global_var('func_1386')
func_1388_call = mutated_mod.get_global_var('func_1388')
call_3524 = func_1386_call()
call_3525 = func_1386_call()
output = call_3524
output2 = call_3525
func_3563 = relay.Function([], output)
mod['func_3563'] = func_3563
mod = relay.transform.InferType()(mod)
mutated_mod['func_3563'] = func_3563
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3563_call = mutated_mod.get_global_var('func_3563')
call_3564 = func_3563_call()
output = call_3564
func_3565 = relay.Function([], output)
mutated_mod['func_3565'] = func_3565
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1996_call = mod.get_global_var('func_1996')
func_1997_call = mutated_mod.get_global_var('func_1997')
call_3569 = relay.TupleGetItem(func_1996_call(), 0)
call_3570 = relay.TupleGetItem(func_1997_call(), 0)
var_3571 = relay.var("var_3571", dtype = "float32", shape = (8, 12, 6))#candidate|3571|(8, 12, 6)|var|float32
bop_3572 = relay.floor_divide(call_3569.astype('float64'), relay.reshape(var_3571.astype('float64'), relay.shape_of(call_3569))) # shape=(8, 12, 6)
bop_3575 = relay.floor_divide(call_3570.astype('float64'), relay.reshape(var_3571.astype('float64'), relay.shape_of(call_3570))) # shape=(8, 12, 6)
uop_3593 = relay.atanh(call_3569.astype('float32')) # shape=(8, 12, 6)
uop_3595 = relay.atanh(call_3570.astype('float32')) # shape=(8, 12, 6)
func_2080_call = mod.get_global_var('func_2080')
func_2082_call = mutated_mod.get_global_var('func_2082')
call_3596 = relay.TupleGetItem(func_2080_call(), 0)
call_3597 = relay.TupleGetItem(func_2082_call(), 0)
var_3610 = relay.var("var_3610", dtype = "float32", shape = (8, 12, 6))#candidate|3610|(8, 12, 6)|var|float32
bop_3611 = relay.subtract(uop_3593.astype('float32'), relay.reshape(var_3610.astype('float32'), relay.shape_of(uop_3593))) # shape=(8, 12, 6)
bop_3614 = relay.subtract(uop_3595.astype('float32'), relay.reshape(var_3610.astype('float32'), relay.shape_of(uop_3595))) # shape=(8, 12, 6)
output = relay.Tuple([bop_3572,call_3596,bop_3611,])
output2 = relay.Tuple([bop_3575,call_3597,bop_3614,])
func_3630 = relay.Function([var_3571,var_3610,], output)
mod['func_3630'] = func_3630
mod = relay.transform.InferType()(mod)
mutated_mod['func_3630'] = func_3630
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3630_call = mutated_mod.get_global_var('func_3630')
var_3632 = relay.var("var_3632", dtype = "float32", shape = (8, 12, 6))#candidate|3632|(8, 12, 6)|var|float32
var_3633 = relay.var("var_3633", dtype = "float32", shape = (8, 12, 6))#candidate|3633|(8, 12, 6)|var|float32
call_3631 = func_3630_call(var_3632,var_3633,)
output = call_3631
func_3634 = relay.Function([var_3632,var_3633,], output)
mutated_mod['func_3634'] = func_3634
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3295_call = mod.get_global_var('func_3295')
func_3297_call = mutated_mod.get_global_var('func_3297')
call_3653 = relay.TupleGetItem(func_3295_call(), 0)
call_3654 = relay.TupleGetItem(func_3297_call(), 0)
uop_3655 = relay.erf(call_3653.astype('float64')) # shape=(15, 2, 14)
uop_3657 = relay.erf(call_3654.astype('float64')) # shape=(15, 2, 14)
func_3404_call = mod.get_global_var('func_3404')
func_3405_call = mutated_mod.get_global_var('func_3405')
call_3658 = relay.TupleGetItem(func_3404_call(), 2)
call_3659 = relay.TupleGetItem(func_3405_call(), 2)
func_2123_call = mod.get_global_var('func_2123')
func_2125_call = mutated_mod.get_global_var('func_2125')
call_3660 = relay.TupleGetItem(func_2123_call(), 0)
call_3661 = relay.TupleGetItem(func_2125_call(), 0)
func_427_call = mod.get_global_var('func_427')
func_430_call = mutated_mod.get_global_var('func_430')
var_3670 = relay.var("var_3670", dtype = "uint64", shape = ())#candidate|3670|()|var|uint64
var_3671 = relay.var("var_3671", dtype = "uint64", shape = (1, 160))#candidate|3671|(1, 160)|var|uint64
call_3669 = relay.TupleGetItem(func_427_call(relay.reshape(var_3670.astype('uint64'), []), relay.reshape(var_3671.astype('uint64'), [16, 5, 2]), ), 0)
call_3672 = relay.TupleGetItem(func_430_call(relay.reshape(var_3670.astype('uint64'), []), relay.reshape(var_3671.astype('uint64'), [16, 5, 2]), ), 0)
func_3295_call = mod.get_global_var('func_3295')
func_3297_call = mutated_mod.get_global_var('func_3297')
call_3677 = relay.TupleGetItem(func_3295_call(), 0)
call_3678 = relay.TupleGetItem(func_3297_call(), 0)
output = relay.Tuple([uop_3655,call_3658,call_3660,call_3669,var_3670,var_3671,call_3677,])
output2 = relay.Tuple([uop_3657,call_3659,call_3661,call_3672,var_3670,var_3671,call_3678,])
func_3679 = relay.Function([var_3670,var_3671,], output)
mod['func_3679'] = func_3679
mod = relay.transform.InferType()(mod)
var_3680 = relay.var("var_3680", dtype = "uint64", shape = ())#candidate|3680|()|var|uint64
var_3681 = relay.var("var_3681", dtype = "uint64", shape = (1, 160))#candidate|3681|(1, 160)|var|uint64
output = func_3679(var_3680,var_3681,)
func_3682 = relay.Function([var_3680,var_3681,], output)
mutated_mod['func_3682'] = func_3682
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3505_call = mod.get_global_var('func_3505')
func_3506_call = mutated_mod.get_global_var('func_3506')
call_3710 = relay.TupleGetItem(func_3505_call(), 0)
call_3711 = relay.TupleGetItem(func_3506_call(), 0)
func_594_call = mod.get_global_var('func_594')
func_596_call = mutated_mod.get_global_var('func_596')
const_3733 = relay.const([-9.850921,-8.000670,8.622371,9.274882,8.549087,3.091731,-9.556393,-9.690906,4.994042,-9.152584,-7.037265,-5.451633,-1.908123,-4.511007,5.723133,-8.245806,5.612316,-1.984157,-0.756399,4.750970,1.374497,1.033777,-7.008013,-6.864670,3.490578,0.432890,0.230550,3.522934,-0.251462,0.742677,1.232111,8.122979,4.842522,5.085270,2.916371,4.772402,1.955512,-1.963925,-5.286816,-3.879852,1.295389,4.508086,4.550734,-3.355317,6.149040,-4.268607,5.071038,8.490439,0.084771,-6.144313,3.113245,6.964113,1.528782,9.986347,-6.829146,7.996966,2.434742,-4.326579,4.221514,-8.389087,-4.218073,0.669493,-2.117126,-5.260143,7.732068,-6.985070,5.755439,-1.346486,-6.374180,-4.416696,4.683864,-5.994673,8.950321,0.810948,-5.605126,0.128258,-2.410131,-3.812645,5.836402,-3.298288,-8.995798,2.946157,-6.182925,-3.345870,2.683046,8.906718,-9.404296,-2.949870,-3.380425,-5.675706,4.412456,-7.410022,-6.575856,7.648098,8.965660,-2.092526,-9.523592,7.441586,1.954508,4.891054,2.206793,2.832765,3.875181,8.692558], dtype = "float32")#candidate|3733|(104,)|const|float32
call_3732 = relay.TupleGetItem(func_594_call(relay.reshape(const_3733.astype('float32'), [1, 13, 8])), 0)
call_3734 = relay.TupleGetItem(func_596_call(relay.reshape(const_3733.astype('float32'), [1, 13, 8])), 0)
func_2722_call = mod.get_global_var('func_2722')
func_2725_call = mutated_mod.get_global_var('func_2725')
var_3747 = relay.var("var_3747", dtype = "float64", shape = (160,))#candidate|3747|(160,)|var|float64
call_3746 = relay.TupleGetItem(func_2722_call(relay.reshape(var_3747.astype('float64'), [2, 16, 5]), relay.reshape(var_3747.astype('float64'), [2, 16, 5]), ), 0)
call_3748 = relay.TupleGetItem(func_2725_call(relay.reshape(var_3747.astype('float64'), [2, 16, 5]), relay.reshape(var_3747.astype('float64'), [2, 16, 5]), ), 0)
uop_3770 = relay.cos(call_3746.astype('float32')) # shape=(2, 16, 5)
uop_3772 = relay.cos(call_3748.astype('float32')) # shape=(2, 16, 5)
var_3773 = relay.var("var_3773", dtype = "float64", shape = (160,))#candidate|3773|(160,)|var|float64
bop_3774 = relay.bitwise_and(var_3747.astype('int16'), relay.reshape(var_3773.astype('int16'), relay.shape_of(var_3747))) # shape=(160,)
func_3133_call = mod.get_global_var('func_3133')
func_3135_call = mutated_mod.get_global_var('func_3135')
call_3783 = func_3133_call()
call_3784 = func_3133_call()
uop_3793 = relay.sigmoid(bop_3774.astype('float32')) # shape=(160,)
func_3286_call = mod.get_global_var('func_3286')
func_3287_call = mutated_mod.get_global_var('func_3287')
call_3813 = relay.TupleGetItem(func_3286_call(), 0)
call_3814 = relay.TupleGetItem(func_3287_call(), 0)
output = relay.Tuple([call_3710,call_3732,const_3733,uop_3770,call_3783,uop_3793,call_3813,])
output2 = relay.Tuple([call_3711,call_3734,const_3733,uop_3772,call_3784,uop_3793,call_3814,])
func_3829 = relay.Function([var_3747,var_3773,], output)
mod['func_3829'] = func_3829
mod = relay.transform.InferType()(mod)
var_3830 = relay.var("var_3830", dtype = "float64", shape = (160,))#candidate|3830|(160,)|var|float64
var_3831 = relay.var("var_3831", dtype = "float64", shape = (160,))#candidate|3831|(160,)|var|float64
output = func_3829(var_3830,var_3831,)
func_3832 = relay.Function([var_3830,var_3831,], output)
mutated_mod['func_3832'] = func_3832
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2595_call = mod.get_global_var('func_2595')
func_2597_call = mutated_mod.get_global_var('func_2597')
call_3850 = relay.TupleGetItem(func_2595_call(), 1)
call_3851 = relay.TupleGetItem(func_2597_call(), 1)
output = call_3850
output2 = call_3851
func_3856 = relay.Function([], output)
mod['func_3856'] = func_3856
mod = relay.transform.InferType()(mod)
mutated_mod['func_3856'] = func_3856
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3856_call = mutated_mod.get_global_var('func_3856')
call_3857 = func_3856_call()
output = call_3857
func_3858 = relay.Function([], output)
mutated_mod['func_3858'] = func_3858
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3286_call = mod.get_global_var('func_3286')
func_3287_call = mutated_mod.get_global_var('func_3287')
call_3862 = relay.TupleGetItem(func_3286_call(), 0)
call_3863 = relay.TupleGetItem(func_3287_call(), 0)
func_2497_call = mod.get_global_var('func_2497')
func_2501_call = mutated_mod.get_global_var('func_2501')
var_3865 = relay.var("var_3865", dtype = "float64", shape = (1620,))#candidate|3865|(1620,)|var|float64
var_3866 = relay.var("var_3866", dtype = "float32", shape = (104,))#candidate|3866|(104,)|var|float32
var_3867 = relay.var("var_3867", dtype = "uint64", shape = ())#candidate|3867|()|var|uint64
call_3864 = relay.TupleGetItem(func_2497_call(relay.reshape(var_3865.astype('float64'), [1620,]), relay.reshape(var_3866.astype('float32'), [104,]), relay.reshape(var_3867.astype('uint64'), []), ), 3)
call_3868 = relay.TupleGetItem(func_2501_call(relay.reshape(var_3865.astype('float64'), [1620,]), relay.reshape(var_3866.astype('float32'), [104,]), relay.reshape(var_3867.astype('uint64'), []), ), 3)
func_2784_call = mod.get_global_var('func_2784')
func_2788_call = mutated_mod.get_global_var('func_2788')
const_3871 = relay.const([10,-9,8,-8,-5,3,9,-4,8,5,-5,3,7,-8,8,-4,-3,5,2,2,4,-5,9,9,5,-1,6,10,-6,4,6,-2,8,-10,-9,-8,-2,-7,-4,10,-4,-10,5,-8,2,4,-9,-9,-4,-7,-5,-7,10,10,4,-3,-3,1,-7,-10,10,-7,10,5,-6,8,-9,-8,1,-5,2,-5,5,2,4,8,-5,10,2,-1,8,-10,4,-10,-8,2,-4,-4,3,-8,-9,1,-3,1,-6,4,2,5,-1,-3,-9,-8,1,10,9,1,6,2,-2,-5,-3,-6,-2,-1,3,2,10,-5,-4,-5,4,-1,-9,-10,-3,-1,7,-3,8,1,-9,-5,5,-10,-4,-1,2,-9,-2,1,-7,4,-2,2,-3,1,-6,-3,-8,-7,9,-3,10,3,2,-9,-8,4,2,-8], dtype = "uint64")#candidate|3871|(160,)|const|uint64
call_3870 = relay.TupleGetItem(func_2784_call(relay.reshape(var_3867.astype('uint64'), []), relay.reshape(const_3871.astype('uint64'), [160,]), ), 2)
call_3872 = relay.TupleGetItem(func_2788_call(relay.reshape(var_3867.astype('uint64'), []), relay.reshape(const_3871.astype('uint64'), [160,]), ), 2)
func_2240_call = mod.get_global_var('func_2240')
func_2241_call = mutated_mod.get_global_var('func_2241')
call_3880 = relay.TupleGetItem(func_2240_call(), 1)
call_3881 = relay.TupleGetItem(func_2241_call(), 1)
func_3133_call = mod.get_global_var('func_3133')
func_3135_call = mutated_mod.get_global_var('func_3135')
call_3886 = func_3133_call()
call_3887 = func_3133_call()
var_3892 = relay.var("var_3892", dtype = "float32", shape = (104,))#candidate|3892|(104,)|var|float32
bop_3893 = relay.mod(var_3866.astype('float64'), relay.reshape(var_3892.astype('float64'), relay.shape_of(var_3866))) # shape=(104,)
func_3630_call = mod.get_global_var('func_3630')
func_3634_call = mutated_mod.get_global_var('func_3634')
call_3907 = relay.TupleGetItem(func_3630_call(relay.reshape(call_3862.astype('float32'), [8, 12, 6]), relay.reshape(call_3862.astype('float32'), [8, 12, 6]), ), 1)
call_3908 = relay.TupleGetItem(func_3634_call(relay.reshape(call_3862.astype('float32'), [8, 12, 6]), relay.reshape(call_3862.astype('float32'), [8, 12, 6]), ), 1)
bop_3911 = relay.add(call_3880.astype('uint8'), relay.reshape(call_3864.astype('uint8'), relay.shape_of(call_3880))) # shape=(52, 2)
bop_3914 = relay.add(call_3881.astype('uint8'), relay.reshape(call_3868.astype('uint8'), relay.shape_of(call_3881))) # shape=(52, 2)
func_2439_call = mod.get_global_var('func_2439')
func_2441_call = mutated_mod.get_global_var('func_2441')
call_3929 = relay.TupleGetItem(func_2439_call(relay.reshape(call_3862.astype('float64'), [8, 12, 6])), 2)
call_3930 = relay.TupleGetItem(func_2441_call(relay.reshape(call_3862.astype('float64'), [8, 12, 6])), 2)
output = relay.Tuple([call_3862,var_3865,var_3867,call_3870,const_3871,call_3886,bop_3893,call_3907,bop_3911,call_3929,])
output2 = relay.Tuple([call_3863,var_3865,var_3867,call_3872,const_3871,call_3887,bop_3893,call_3908,bop_3914,call_3930,])
func_3934 = relay.Function([var_3865,var_3866,var_3867,var_3892,], output)
mod['func_3934'] = func_3934
mod = relay.transform.InferType()(mod)
var_3935 = relay.var("var_3935", dtype = "float64", shape = (1620,))#candidate|3935|(1620,)|var|float64
var_3936 = relay.var("var_3936", dtype = "float32", shape = (104,))#candidate|3936|(104,)|var|float32
var_3937 = relay.var("var_3937", dtype = "uint64", shape = ())#candidate|3937|()|var|uint64
var_3938 = relay.var("var_3938", dtype = "float32", shape = (104,))#candidate|3938|(104,)|var|float32
output = func_3934(var_3935,var_3936,var_3937,var_3938,)
func_3939 = relay.Function([var_3935,var_3936,var_3937,var_3938,], output)
mutated_mod['func_3939'] = func_3939
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2519_call = mod.get_global_var('func_2519')
func_2520_call = mutated_mod.get_global_var('func_2520')
call_3970 = func_2519_call()
call_3971 = func_2519_call()
output = relay.Tuple([call_3970,])
output2 = relay.Tuple([call_3971,])
func_3989 = relay.Function([], output)
mod['func_3989'] = func_3989
mod = relay.transform.InferType()(mod)
output = func_3989()
func_3990 = relay.Function([], output)
mutated_mod['func_3990'] = func_3990
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2754_call = mod.get_global_var('func_2754')
func_2755_call = mutated_mod.get_global_var('func_2755')
call_4008 = relay.TupleGetItem(func_2754_call(), 0)
call_4009 = relay.TupleGetItem(func_2755_call(), 0)
output = relay.Tuple([call_4008,])
output2 = relay.Tuple([call_4009,])
func_4018 = relay.Function([], output)
mod['func_4018'] = func_4018
mod = relay.transform.InferType()(mod)
output = func_4018()
func_4019 = relay.Function([], output)
mutated_mod['func_4019'] = func_4019
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3989_call = mod.get_global_var('func_3989')
func_3990_call = mutated_mod.get_global_var('func_3990')
call_4041 = relay.TupleGetItem(func_3989_call(), 0)
call_4042 = relay.TupleGetItem(func_3990_call(), 0)
output = call_4041
output2 = call_4042
func_4071 = relay.Function([], output)
mod['func_4071'] = func_4071
mod = relay.transform.InferType()(mod)
output = func_4071()
func_4072 = relay.Function([], output)
mutated_mod['func_4072'] = func_4072
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3318_call = mod.get_global_var('func_3318')
func_3320_call = mutated_mod.get_global_var('func_3320')
call_4103 = relay.TupleGetItem(func_3318_call(), 0)
call_4104 = relay.TupleGetItem(func_3320_call(), 0)
func_295_call = mod.get_global_var('func_295')
func_298_call = mutated_mod.get_global_var('func_298')
const_4120 = relay.const([-4,1,5,-8,6,6,5,-9,4,-2,-2,-10,8,10,4,6,-10,1,-2,2,6,-4,-7,-7,-2,5,-10,9,-2,7,-8,-5,-7,-4,7,9,-3,4,7,-3,4,2,-3,-3,-2,3,3,-8,6,1,7,7,-4,-2,-6,-1,4,-4,8,4,-10,-10,8,-3,-10,-8,-6,-9,-7,3,-9,-4,10,10,9,-8,2,2,-5,-4,9,6,-8,6,-7,1,-5,-6,4,5,-3,-4,10,-5,-3,4,3,-9,-4,-8,-6,-6,5,8,-10,-5,-5,-8,-5,1,-3,1,-6,9,-5,-2,4,-2,10,10,-10,-4,4,-9,6,8,-9,-7,7,-7,-1,-1,-5,-5,10,4,10,6,-10,2,9,7,-7,2,-10,-6,8,-7,-10,-7,-8,4,-10,4,5,8,-6,-1,9,10,-4,2,4,4,-2,8,-1,9,-3,1,-9,-4,-6,-1,-10,-6,-7,-6,-6,7,-1,-9,9,4,-3,2,6,8,-10,-6,-1,-7,-1,-9,5,-6,-3,9,-4,-4,7,-8,9,-4,-6,1,3,4,-1,10,9,2,-10,5,-3,-9,-4,-5,3,-2,-10,-6,1,8,3,7,3,-5,10,8,-9], dtype = "int16")#candidate|4120|(231,)|const|int16
call_4119 = relay.TupleGetItem(func_295_call(relay.reshape(const_4120.astype('int16'), [11, 7, 3]), relay.reshape(const_4120.astype('int16'), [11, 7, 3]), ), 0)
call_4121 = relay.TupleGetItem(func_298_call(relay.reshape(const_4120.astype('int16'), [11, 7, 3]), relay.reshape(const_4120.astype('int16'), [11, 7, 3]), ), 0)
output = relay.Tuple([call_4103,call_4119,const_4120,])
output2 = relay.Tuple([call_4104,call_4121,const_4120,])
func_4128 = relay.Function([], output)
mod['func_4128'] = func_4128
mod = relay.transform.InferType()(mod)
mutated_mod['func_4128'] = func_4128
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4128_call = mutated_mod.get_global_var('func_4128')
call_4129 = func_4128_call()
output = call_4129
func_4130 = relay.Function([], output)
mutated_mod['func_4130'] = func_4130
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4018_call = mod.get_global_var('func_4018')
func_4019_call = mutated_mod.get_global_var('func_4019')
call_4148 = relay.TupleGetItem(func_4018_call(), 0)
call_4149 = relay.TupleGetItem(func_4019_call(), 0)
output = call_4148
output2 = call_4149
func_4166 = relay.Function([], output)
mod['func_4166'] = func_4166
mod = relay.transform.InferType()(mod)
output = func_4166()
func_4167 = relay.Function([], output)
mutated_mod['func_4167'] = func_4167
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3989_call = mod.get_global_var('func_3989')
func_3990_call = mutated_mod.get_global_var('func_3990')
call_4210 = relay.TupleGetItem(func_3989_call(), 0)
call_4211 = relay.TupleGetItem(func_3990_call(), 0)
func_326_call = mod.get_global_var('func_326')
func_329_call = mutated_mod.get_global_var('func_329')
const_4213 = relay.const([-10,-1,-5,-9,-8,9,4,1,4,9,1,-2,-6,10,-8,7,7,-7,10,1,-10,-2,-2,4,3,1,-5,-5,-3,-4,-8,-8,-10,9,-10,-10,1,-5,-4,-2,-2,-1,3,9,2,6,6,-5,9,-8,4,-9,1,1,-1,-2,-3,2,-10,-3,-6,-2,-5,1,-3,-2,1,4,-5,5,8,-1,-10,-9,5,3,-3,6,-2,-1,-9,1,-6,2,-10,9,4,-8,-2,7,3,1,-4,3,7,2,10,-6,10,10,-4,-9,9,-5,6,-10,-1,-6,-9,5,-4,-2,4,-5,-5,-4,1,7,3,-3,-3,10,4,-3,5,-1,-6,-7,10,-5,-4,5,-4,-9,4,6,3,-3,1,1,5,7,4,2,-6,10,7,7,-8,6,6,-1,-7,-9,-10,4,-2,-9,-5,-2,-9,10,10,7,6,9,-7,-5,5,-3,-4,-4,-10,-5,-3,5,-1,-8,-4,8,10,4,-10,-2,-10,-3,5,-3,8,1,6,5,-3,-10,-10,9,-8,9,-1,-2,-7,-7,10,-9,-9,4,-6,-5,-4,8,-5,-5,-1,8,5,-4,7,-7,9,-9,-6,-4,-2,3,-5,-1,9,3,2,3,5,4,-7,1,6,-6,1,-7,2,8,-1,10,-6,-2,-6,8,2,-3,2,7,-2,-2,-5,-7,-9,6,3,-3,-9,-9,-2,8,8,5,7,-8,6,-3,1,10,4,-1,10,-8,-9,-5,4,4,-5,2,2,-1,1,1,-4,1,5,-7,-6,-5,9,-5,-1,5,-10,10,-6,-10,6,9,2,-10,-2,1,1,2,-6,-5,7,-5,-6,1,-7,-8,-4,-7,-9,-3,-3,10,10,3,10,-3,7,-6,-4,-4,-9,5,1,10,-8,-4,9,4,7,-5,5,-4,9,-3,8,-7,-2,-4,6,-5,-7,5,3,5,-9,7,-2,4,2,6,5,-10,-6,1,8,-6,7,3,3,9,2,-3,8,6,5,3,5,-8,-8,3,-7,3,10,-3,7,2,10,4,3,10,-1,-1,-6,7,9,2,-9,-7,2,-2,4,8,9,1,-9,-1,2,9,10,4,10,-5,-10,7,-4,10,-3,3,-8,4,-5,-2], dtype = "uint8")#candidate|4213|(420,)|const|uint8
call_4212 = relay.TupleGetItem(func_326_call(relay.reshape(const_4213.astype('uint8'), [15, 2, 14]), relay.reshape(const_4213.astype('uint8'), [15, 2, 14]), ), 0)
call_4214 = relay.TupleGetItem(func_329_call(relay.reshape(const_4213.astype('uint8'), [15, 2, 14]), relay.reshape(const_4213.astype('uint8'), [15, 2, 14]), ), 0)
bop_4216 = relay.bitwise_and(call_4212.astype('uint8'), relay.reshape(const_4213.astype('uint8'), relay.shape_of(call_4212))) # shape=(15, 2, 14)
bop_4219 = relay.bitwise_and(call_4214.astype('uint8'), relay.reshape(const_4213.astype('uint8'), relay.shape_of(call_4214))) # shape=(15, 2, 14)
const_4233 = relay.const([[[-5.417340,-8.874897,1.897541,7.411560,1.457803,-4.267352],[1.345962,-5.980595,-9.509859,2.010090,2.307129,9.400886],[-0.777865,-3.572762,1.035809,-7.280040,4.137662,9.734961],[-3.586615,-6.598958,-7.384182,-1.788058,-0.397873,2.694218],[3.144821,4.168375,-0.994270,-5.578300,1.358800,7.616760],[-3.109850,-8.128851,-4.254043,-1.578900,-1.061000,-1.872248],[-6.273667,-5.362488,-5.282652,2.371432,-6.114084,-7.305822],[9.334858,-4.281519,0.298209,-2.871478,1.259504,0.173820],[-4.592073,-3.856160,-3.331692,9.153005,5.768358,1.285585],[3.702856,3.775745,8.247240,-5.384996,2.468555,3.678462],[-3.564759,-5.351992,-3.052789,2.801879,-3.183559,1.491429],[5.896365,8.115444,-8.748665,-3.992415,8.317606,-5.930192]],[[1.287260,5.335582,8.640627,1.550189,-8.546036,2.709387],[6.004374,-7.125849,6.872215,-1.611154,-7.308084,3.364799],[0.295702,5.117796,-1.223123,8.525938,-9.454143,-4.832378],[-2.676521,-2.518877,5.310330,1.584575,-1.998865,-7.263972],[-2.228534,-4.429953,-5.391658,6.459213,1.424131,-5.955043],[-0.621940,2.593079,4.388067,-3.648513,0.030414,-2.077054],[7.481224,0.672337,1.419082,9.700549,9.432470,8.840896],[2.280226,9.305334,0.269773,-6.299101,0.512676,-4.995710],[3.113588,-9.601819,4.799068,-4.111439,6.904469,1.437107],[6.375170,-2.145539,-5.578513,8.733781,-8.047713,5.951045],[-4.671615,-9.208427,6.916834,-6.524585,8.301951,-6.731559],[-3.594712,7.669920,-3.049800,-6.284779,6.366840,-0.883027]],[[-9.691094,-8.082232,-9.249053,-3.558818,4.448002,8.878122],[-5.443253,-5.828210,-5.178629,-2.284853,4.476290,-7.665405],[-0.638650,7.045799,7.020379,-5.482653,5.809159,4.908376],[-5.493414,4.549089,-4.903569,-3.060429,-4.651358,-4.227315],[4.283659,7.357254,7.518419,0.767209,1.516627,5.923948],[-7.687864,-6.635975,-2.542811,-9.979846,-6.686607,2.377049],[-4.079815,6.629796,-3.916878,5.609277,-4.323179,-9.028073],[0.092374,-8.228712,-4.104083,2.857078,4.962278,7.377549],[5.752779,-6.190068,8.058373,-0.833340,1.538141,-4.472933],[-8.670077,-5.320581,3.822169,-4.918756,-1.215167,0.093082],[-5.031103,6.653464,-7.153932,-1.500984,-3.408450,4.328695],[-8.973692,0.437110,3.351646,5.828853,-3.651530,7.733484]],[[-3.823825,-9.424227,-4.351687,8.485193,-1.826828,-6.074913],[8.548409,7.590815,9.641273,9.503477,-8.250764,0.697821],[9.374502,2.111931,-7.461467,1.237992,-0.669303,8.210208],[8.826944,-4.143635,-5.612838,-4.489731,1.105620,5.459226],[7.944389,-5.400252,-0.379238,3.949668,-0.067939,3.174873],[2.561565,1.515144,-8.139059,-1.162173,5.395185,2.852706],[0.896798,-8.206538,4.208638,2.605387,-2.237807,2.254336],[-3.491760,-7.142914,7.399362,1.139947,-3.303035,1.399953],[-0.833165,-3.671627,-6.355863,9.682349,-1.853305,-4.679282],[4.258030,-2.777057,5.904504,-1.184267,-4.762077,-2.411487],[-0.231781,9.409230,-6.715274,5.673047,-6.318593,-9.435830],[-7.417996,8.995796,1.341049,-0.594170,1.387012,2.160531]],[[-4.371357,-7.711190,-6.607239,8.398986,3.878644,-4.438996],[0.951583,-6.479814,8.996340,-4.812610,-8.942382,-9.387248],[5.867238,-8.658997,9.283007,6.449225,-3.514368,7.803475],[-6.630562,2.374138,4.387528,4.149855,-2.877246,-4.293341],[-3.484448,2.572194,-2.278369,8.527618,-9.295485,7.218701],[4.756232,-1.367650,-8.244368,-3.707345,-6.328546,-9.536764],[5.543724,-5.819512,9.710410,-8.268734,6.780965,-6.984085],[0.988331,3.965060,-4.813397,-5.144841,8.981364,4.595560],[-4.810156,-1.485476,7.596362,-8.610379,-8.108240,-3.936937],[2.164609,6.057047,-1.724015,9.794451,8.418929,-0.763209],[6.097116,1.640239,3.342734,-9.229647,9.530046,-6.106627],[-9.505120,2.986518,9.816994,-7.757574,-3.845747,5.519232]],[[-0.798588,5.889983,8.064607,3.336401,-1.040043,9.396676],[0.981024,0.418659,-8.387860,8.591117,-6.902380,5.012717],[9.832188,-9.016453,6.798119,-3.140469,-7.998459,-3.206939],[3.181277,-7.935957,-9.504176,5.058780,-5.669012,-0.412186],[-9.911599,6.440029,3.612285,-7.310499,-9.834102,-0.828605],[-5.327799,9.555467,-0.875109,-1.194628,8.379693,8.294472],[-7.022322,5.389549,3.563427,3.865598,-2.541886,-1.281881],[1.480086,-6.712801,-9.090440,-2.366355,7.309482,5.272433],[8.194567,-5.506381,4.671415,-4.225527,-2.285911,-7.480628],[-1.308546,-9.149049,-5.018789,-1.067150,8.171575,9.509617],[0.250226,9.022883,-0.433853,4.383938,-0.682531,-1.330496],[6.913422,-0.285269,6.868254,-3.617817,-4.013956,-2.055167]],[[0.304034,9.302210,7.938372,-7.238410,-2.560315,8.842735],[0.916057,-7.543538,-8.655414,1.393040,4.780846,-5.019694],[-9.721123,-3.655168,2.668272,4.586070,8.117951,6.606807],[7.112633,-7.775917,6.522160,-0.632520,-5.853663,5.073463],[-5.641463,-8.027387,-7.373468,-6.736332,9.566121,6.052209],[4.439840,-0.230290,3.361627,8.560212,6.367754,-4.379671],[3.136646,1.276767,1.609305,7.806320,3.847607,-0.454100],[-7.289245,-5.087557,3.389471,-9.412252,-0.052173,-5.203979],[-2.292051,5.092653,0.421994,8.628242,-8.820888,-3.915069],[2.370619,8.157545,3.640968,-4.261135,-8.130697,-8.099890],[-1.660816,-8.266908,8.860682,5.884921,-4.943596,6.681254],[-2.110954,3.236353,-9.582609,3.818807,3.728394,-7.717333]],[[-7.959797,-8.708552,-5.343680,-4.767186,8.975282,1.085890],[2.847742,-7.278260,6.711916,7.481113,-5.693333,0.137348],[-7.126854,-9.742975,5.492035,7.789486,6.261610,7.953377],[-6.259906,2.080993,-8.361064,-4.312326,0.345303,-5.468053],[-6.857732,-5.525418,-5.743049,0.712093,-6.081894,-9.996502],[8.545427,2.763040,3.759674,-4.858409,4.853396,5.160625],[-0.360365,6.047551,-2.015796,5.737903,-4.203347,-1.935236],[8.720306,5.369242,7.887242,1.815630,7.326989,-2.038635],[8.183678,-1.627704,-9.935725,9.233364,7.645683,-3.734117],[-1.249718,3.691165,1.401445,1.117693,4.755702,5.025415],[-1.939260,0.265753,5.395314,-6.550496,-4.703701,6.968511],[-8.086428,-1.242962,-6.157916,8.881639,-2.765225,7.489691]]], dtype = "float32")#candidate|4233|(8, 12, 6)|const|float32
bop_4234 = relay.right_shift(call_4210.astype('uint8'), relay.reshape(const_4233.astype('uint8'), relay.shape_of(call_4210))) # shape=(8, 12, 6)
bop_4237 = relay.right_shift(call_4211.astype('uint8'), relay.reshape(const_4233.astype('uint8'), relay.shape_of(call_4211))) # shape=(8, 12, 6)
output = relay.Tuple([bop_4216,bop_4234,])
output2 = relay.Tuple([bop_4219,bop_4237,])
func_4245 = relay.Function([], output)
mod['func_4245'] = func_4245
mod = relay.transform.InferType()(mod)
mutated_mod['func_4245'] = func_4245
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4245_call = mutated_mod.get_global_var('func_4245')
call_4246 = func_4245_call()
output = call_4246
func_4247 = relay.Function([], output)
mutated_mod['func_4247'] = func_4247
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3286_call = mod.get_global_var('func_3286')
func_3287_call = mutated_mod.get_global_var('func_3287')
call_4261 = relay.TupleGetItem(func_3286_call(), 0)
call_4262 = relay.TupleGetItem(func_3287_call(), 0)
output = relay.Tuple([call_4261,])
output2 = relay.Tuple([call_4262,])
func_4265 = relay.Function([], output)
mod['func_4265'] = func_4265
mod = relay.transform.InferType()(mod)
mutated_mod['func_4265'] = func_4265
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4265_call = mutated_mod.get_global_var('func_4265')
call_4266 = func_4265_call()
output = call_4266
func_4267 = relay.Function([], output)
mutated_mod['func_4267'] = func_4267
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4282 = relay.var("var_4282", dtype = "float64", shape = (2, 9, 9))#candidate|4282|(2, 9, 9)|var|float64
var_4283 = relay.var("var_4283", dtype = "float64", shape = (2, 9, 9))#candidate|4283|(2, 9, 9)|var|float64
bop_4284 = relay.floor_mod(var_4282.astype('float64'), relay.reshape(var_4283.astype('float64'), relay.shape_of(var_4282))) # shape=(2, 9, 9)
output = relay.Tuple([bop_4284,])
output2 = relay.Tuple([bop_4284,])
func_4288 = relay.Function([var_4282,var_4283,], output)
mod['func_4288'] = func_4288
mod = relay.transform.InferType()(mod)
var_4289 = relay.var("var_4289", dtype = "float64", shape = (2, 9, 9))#candidate|4289|(2, 9, 9)|var|float64
var_4290 = relay.var("var_4290", dtype = "float64", shape = (2, 9, 9))#candidate|4290|(2, 9, 9)|var|float64
output = func_4288(var_4289,var_4290,)
func_4291 = relay.Function([var_4289,var_4290,], output)
mutated_mod['func_4291'] = func_4291
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4359 = relay.var("var_4359", dtype = "float64", shape = (6, 9, 2))#candidate|4359|(6, 9, 2)|var|float64
uop_4360 = relay.acosh(var_4359.astype('float64')) # shape=(6, 9, 2)
bop_4373 = relay.bitwise_and(uop_4360.astype('uint8'), relay.reshape(var_4359.astype('uint8'), relay.shape_of(uop_4360))) # shape=(6, 9, 2)
output = relay.Tuple([bop_4373,])
output2 = relay.Tuple([bop_4373,])
func_4377 = relay.Function([var_4359,], output)
mod['func_4377'] = func_4377
mod = relay.transform.InferType()(mod)
mutated_mod['func_4377'] = func_4377
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4378 = relay.var("var_4378", dtype = "float64", shape = (6, 9, 2))#candidate|4378|(6, 9, 2)|var|float64
func_4377_call = mutated_mod.get_global_var('func_4377')
call_4379 = func_4377_call(var_4378)
output = call_4379
func_4380 = relay.Function([var_4378], output)
mutated_mod['func_4380'] = func_4380
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4387 = relay.const([[[8.529353,5.390649,-9.579239],[-5.180158,9.389949,-9.741638],[4.181264,6.426935,-8.561770],[2.567422,-3.811425,-8.545294],[8.919706,3.983941,3.861191],[-8.207696,-9.831632,7.382723],[6.145250,-4.852101,2.860847],[1.506253,-4.796285,9.561616],[0.780177,-5.564356,3.129101],[-4.952736,-0.951279,4.939279]],[[1.059119,-2.476628,9.567889],[-3.585113,-7.162211,0.863948],[1.595091,-7.829991,-7.538376],[1.972568,-8.331244,1.486333],[-5.320406,5.754534,2.631442],[-2.002560,-6.610163,-7.328556],[0.095782,6.389192,3.948556],[0.631192,0.378557,-5.603485],[4.862477,2.626041,-7.832400],[5.629720,9.524881,8.063198]],[[9.884963,3.295909,-4.375213],[6.200082,-4.333205,2.151204],[-1.418214,-5.829397,7.363704],[2.749856,-5.625715,-3.780855],[2.914968,-3.142436,-7.529558],[0.145376,0.367983,-2.873501],[-8.442273,7.749994,-5.717820],[-9.868841,6.361963,-7.957933],[0.855246,-7.189598,-5.715584],[-7.476339,-5.440705,-7.724823]],[[-8.335581,0.615140,-4.833074],[-0.251395,0.470177,2.536115],[-2.185716,-5.217624,5.491064],[-7.244951,-5.478276,-7.912160],[-5.593756,-3.044601,3.222776],[1.355972,-2.845650,-2.458572],[-1.623409,4.461024,-3.683372],[0.460360,-6.373998,9.026602],[-1.571626,4.883839,-4.311001],[-2.725109,-1.792603,8.504370]],[[0.963474,-1.281398,5.048456],[3.873620,1.319057,-2.693362],[0.391701,-3.275291,2.849293],[0.455206,-1.265736,4.337161],[0.098630,8.577763,-1.735622],[7.242848,7.854775,-6.809550],[-8.042813,4.587305,-0.547258],[-7.203062,9.674824,-8.405001],[-5.881733,0.850371,-0.503842],[0.791542,-5.826567,8.407124]],[[6.774125,-7.024913,-5.232842],[-1.313723,-7.442626,-8.022813],[2.611358,4.138683,-6.146732],[5.476303,0.093422,7.081794],[2.510466,3.167584,8.579029],[3.873349,-8.711429,7.603317],[-2.714905,8.925018,8.043212],[5.041937,-1.038119,-0.901029],[-4.996076,9.787411,-6.261085],[7.756692,6.450813,1.525058]],[[-1.568950,-4.054060,-0.476765],[0.170574,5.385943,-6.121413],[2.310346,3.577997,-9.213076],[-9.819215,6.464484,-4.433658],[-1.274685,-1.102865,5.455943],[-7.116085,-5.054658,-8.136560],[-8.370888,4.396949,-3.896457],[4.190658,2.943890,-7.301279],[-4.758339,5.172986,-2.989147],[9.044092,5.898845,3.698993]],[[9.045159,-8.365125,-1.065086],[-9.158507,8.931674,-2.373312],[0.838544,7.720544,-5.093071],[-4.983202,-5.030263,-4.249789],[-8.989007,7.184644,4.455692],[-6.130897,-6.555160,-2.927497],[3.906044,0.358036,-5.597121],[-2.277893,1.430672,9.054099],[2.940507,-1.769594,6.406610],[3.920548,-3.978771,3.611579]],[[3.097919,-0.797259,6.655190],[-0.520550,-7.934844,4.355876],[0.594534,-8.348411,4.749150],[-8.365007,-8.731429,-8.828529],[0.453312,5.082332,-7.037694],[-0.064508,-9.353439,4.359093],[6.553025,-2.199810,5.405179],[5.455600,3.745807,-6.401599],[2.176279,-0.815446,7.449286],[2.958240,-7.314495,1.842206]],[[8.285821,-5.054949,-8.533153],[0.385471,1.128062,3.421485],[1.332293,3.797217,2.911052],[1.952299,-2.135894,-6.220575],[-6.124001,-1.613963,-3.998190],[5.920735,5.256280,0.341454],[9.573607,-2.714985,-7.631854],[-5.856759,-4.263396,-6.487406],[6.639162,-5.861576,0.118124],[5.518859,-8.464965,-6.961113]],[[5.672864,-7.844469,4.327940],[4.042386,1.807092,8.993956],[9.480004,4.455922,5.655534],[1.284960,-3.641369,-6.556798],[-8.640169,2.892587,-4.132837],[5.005403,-3.502888,-8.996350],[7.087393,-9.452996,1.477529],[-3.080125,1.216777,-7.199530],[-1.903917,3.315691,8.460558],[-8.002837,-6.735093,-6.364804]],[[-7.270885,-7.892900,-0.575196],[-5.451475,-5.006816,-4.746484],[0.712115,5.638637,-6.338441],[8.218124,2.019951,7.762667],[3.348492,3.877131,-5.913414],[-6.740952,4.235014,5.426324],[2.376467,-1.097572,-6.756808],[-7.435719,1.743563,0.139263],[5.949804,-1.875932,1.465706],[-5.002600,-4.127863,-7.337658]],[[8.306298,7.486985,-1.022631],[-9.246736,-8.194916,2.023191],[6.075317,-2.862927,1.990224],[9.431819,8.468240,-2.404611],[5.200941,8.790185,-8.578391],[-3.257129,-5.797800,-9.886134],[-8.701936,-2.723519,7.903166],[-8.100112,1.236926,-1.701672],[-0.788196,-2.260366,9.851020],[-9.329568,3.931433,-2.993559]],[[-6.876518,7.936967,-3.565975],[0.925346,5.875953,-9.815106],[6.725943,4.834436,5.317303],[-1.811379,5.599442,8.572793],[8.088396,-1.470395,8.592420],[-7.693816,5.730835,-6.217057],[1.989572,9.167185,-3.013883],[-5.373300,-3.653717,-0.612354],[9.833153,7.949033,8.080782],[2.019537,-8.611306,6.196939]]], dtype = "float64")#candidate|4387|(14, 10, 3)|const|float64
uop_4388 = relay.asinh(const_4387.astype('float64')) # shape=(14, 10, 3)
output = uop_4388
output2 = uop_4388
func_4401 = relay.Function([], output)
mod['func_4401'] = func_4401
mod = relay.transform.InferType()(mod)
mutated_mod['func_4401'] = func_4401
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4401_call = mutated_mod.get_global_var('func_4401')
call_4402 = func_4401_call()
output = call_4402
func_4403 = relay.Function([], output)
mutated_mod['func_4403'] = func_4403
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4265_call = mod.get_global_var('func_4265')
func_4267_call = mutated_mod.get_global_var('func_4267')
call_4411 = relay.TupleGetItem(func_4265_call(), 0)
call_4412 = relay.TupleGetItem(func_4267_call(), 0)
output = relay.Tuple([call_4411,])
output2 = relay.Tuple([call_4412,])
func_4413 = relay.Function([], output)
mod['func_4413'] = func_4413
mod = relay.transform.InferType()(mod)
mutated_mod['func_4413'] = func_4413
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4413_call = mutated_mod.get_global_var('func_4413')
call_4414 = func_4413_call()
output = call_4414
func_4415 = relay.Function([], output)
mutated_mod['func_4415'] = func_4415
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4166_call = mod.get_global_var('func_4166')
func_4167_call = mutated_mod.get_global_var('func_4167')
call_4427 = func_4166_call()
call_4428 = func_4166_call()
func_3050_call = mod.get_global_var('func_3050')
func_3052_call = mutated_mod.get_global_var('func_3052')
var_4430 = relay.var("var_4430", dtype = "int8", shape = (10, 5))#candidate|4430|(10, 5)|var|int8
call_4429 = relay.TupleGetItem(func_3050_call(relay.reshape(var_4430.astype('int8'), [5, 2, 5])), 0)
call_4431 = relay.TupleGetItem(func_3052_call(relay.reshape(var_4430.astype('int8'), [5, 2, 5])), 0)
var_4434 = relay.var("var_4434", dtype = "bool", shape = (5, 2, 5))#candidate|4434|(5, 2, 5)|var|bool
bop_4435 = relay.right_shift(call_4429.astype('uint8'), relay.reshape(var_4434.astype('uint8'), relay.shape_of(call_4429))) # shape=(5, 2, 5)
bop_4438 = relay.right_shift(call_4431.astype('uint8'), relay.reshape(var_4434.astype('uint8'), relay.shape_of(call_4431))) # shape=(5, 2, 5)
output = relay.Tuple([call_4427,var_4430,bop_4435,])
output2 = relay.Tuple([call_4428,var_4430,bop_4438,])
func_4439 = relay.Function([var_4430,var_4434,], output)
mod['func_4439'] = func_4439
mod = relay.transform.InferType()(mod)
var_4440 = relay.var("var_4440", dtype = "int8", shape = (10, 5))#candidate|4440|(10, 5)|var|int8
var_4441 = relay.var("var_4441", dtype = "bool", shape = (5, 2, 5))#candidate|4441|(5, 2, 5)|var|bool
output = func_4439(var_4440,var_4441,)
func_4442 = relay.Function([var_4440,var_4441,], output)
mutated_mod['func_4442'] = func_4442
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3404_call = mod.get_global_var('func_3404')
func_3405_call = mutated_mod.get_global_var('func_3405')
call_4482 = relay.TupleGetItem(func_3404_call(), 5)
call_4483 = relay.TupleGetItem(func_3405_call(), 5)
uop_4511 = relay.log(call_4482.astype('float64')) # shape=(8, 12, 6)
uop_4513 = relay.log(call_4483.astype('float64')) # shape=(8, 12, 6)
func_3856_call = mod.get_global_var('func_3856')
func_3858_call = mutated_mod.get_global_var('func_3858')
call_4518 = func_3856_call()
call_4519 = func_3856_call()
func_1996_call = mod.get_global_var('func_1996')
func_1997_call = mutated_mod.get_global_var('func_1997')
call_4522 = relay.TupleGetItem(func_1996_call(), 0)
call_4523 = relay.TupleGetItem(func_1997_call(), 0)
output = relay.Tuple([uop_4511,call_4518,call_4522,])
output2 = relay.Tuple([uop_4513,call_4519,call_4523,])
func_4525 = relay.Function([], output)
mod['func_4525'] = func_4525
mod = relay.transform.InferType()(mod)
output = func_4525()
func_4526 = relay.Function([], output)
mutated_mod['func_4526'] = func_4526
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1386_call = mod.get_global_var('func_1386')
func_1388_call = mutated_mod.get_global_var('func_1388')
call_4537 = func_1386_call()
call_4538 = func_1386_call()
output = relay.Tuple([call_4537,])
output2 = relay.Tuple([call_4538,])
func_4553 = relay.Function([], output)
mod['func_4553'] = func_4553
mod = relay.transform.InferType()(mod)
mutated_mod['func_4553'] = func_4553
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4553_call = mutated_mod.get_global_var('func_4553')
call_4554 = func_4553_call()
output = call_4554
func_4555 = relay.Function([], output)
mutated_mod['func_4555'] = func_4555
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4567 = relay.const([[[-2.176595,-1.737222,2.759451,-2.321656,-3.221975,-4.768131,6.134674,-6.195742,-5.243460,-4.729948,-6.724212,6.980247,9.460469],[-5.909125,9.724698,2.496588,-6.532604,-3.848135,-2.966102,7.569659,-7.266307,-5.430750,9.318358,4.263539,6.269959,9.672749],[8.410078,-2.155339,-9.145076,8.175429,7.993515,-5.404830,-7.829094,7.325276,2.281524,2.637477,-3.218960,-1.173803,4.005183],[-7.652572,7.199904,-8.527771,-2.853989,-6.340858,5.441172,-5.574457,-0.276220,-0.553090,-8.148669,8.910725,0.748266,4.479974]],[[-0.968394,2.101676,6.825391,1.917212,8.707974,4.097426,-2.726156,-6.078127,-2.045071,-5.658448,2.055091,5.943374,-7.132479],[-3.490462,-1.065739,-9.119643,4.244224,-1.721713,4.229018,5.908686,3.647245,-7.246087,-1.149694,0.461474,6.496215,3.499265],[-2.418949,-2.124621,0.021909,-6.113358,-6.623638,6.075022,-8.306645,0.388582,8.603659,-0.097507,6.872133,-6.489849,-4.621539],[-0.669222,-3.104005,-2.052948,5.288230,7.292926,5.261600,-7.720599,-5.893893,4.117818,6.172036,-9.001708,-2.647384,1.231669]],[[2.555116,0.397652,7.442399,-7.353524,-0.517034,-8.592463,6.446791,-7.148229,-1.314945,5.247908,-1.817041,5.352802,3.297350],[-3.482835,9.562508,2.047837,-2.650527,-2.915543,2.378208,8.377092,6.789659,6.324945,2.323652,-5.952679,-2.434249,3.862586],[-9.068768,-2.050065,-8.701117,1.364637,-4.300804,4.294696,-0.739265,-2.370597,-4.826356,5.349816,3.939023,-5.612869,-1.639450],[-5.931242,-7.321087,-2.828298,8.888455,-7.691087,4.292002,6.191155,5.379317,-3.520506,-1.642763,7.283751,-9.290830,-5.701770]],[[7.330913,0.293660,5.838200,-7.200728,2.282899,5.083414,5.283536,-3.304310,2.120742,-2.760766,-6.670315,-4.588384,2.826348],[3.631180,-2.223614,7.329518,9.765929,-8.437547,8.624596,-8.835485,0.788141,6.545870,-0.051613,9.508260,2.871525,-0.049054],[5.750510,-9.698554,-2.895590,-7.149880,3.030526,-5.474315,-2.705871,-3.221004,8.919841,-9.543067,-1.863279,2.963973,-6.912484],[-0.915971,-8.950811,5.148816,-4.526633,-6.170362,-4.725729,7.680440,-0.181281,-0.422605,-8.475812,-4.254984,8.983409,-9.683521]],[[-8.932774,-9.606401,8.148527,-5.117847,4.932566,4.548771,5.584310,-0.225433,-9.683735,-4.023468,9.713872,-3.833573,6.129250],[2.809653,8.382669,-9.746420,5.573314,-5.667113,0.170304,-5.864858,4.444662,-8.359719,7.058385,-2.880598,8.080944,5.430534],[9.606642,-4.236224,-7.880010,8.112071,-6.473385,-2.840369,6.962856,-6.986770,9.450603,1.507948,-7.952580,-1.108995,1.571475],[4.201866,3.617238,8.408988,-5.121750,1.999691,-6.066740,3.739914,-1.566861,-7.869809,-6.311832,-2.341304,-6.774629,-3.951619]],[[-1.206933,-4.888472,3.008135,-5.675594,-4.643413,0.897999,2.575335,-2.761495,-9.028077,-0.182253,9.096242,-9.093799,0.398154],[7.300572,-7.331817,-7.441419,-1.342590,-5.085018,1.403435,-2.089830,1.019578,-2.680362,-2.911574,-2.235710,-5.030232,5.457660],[1.827768,-1.799490,1.095195,-9.754254,0.874543,-7.050007,-8.883020,-4.935167,5.074124,8.639973,-6.563789,4.840350,-1.595845],[3.603113,7.392979,-9.807310,-1.537366,2.245180,9.549563,-7.496670,6.872210,-2.741712,6.251522,9.999773,-5.304046,1.337971]],[[-8.093120,0.981614,-4.976651,-9.849878,-4.700068,8.751593,2.121652,-5.908806,-9.623686,7.836588,0.180086,9.163118,-1.773593],[4.839397,-6.755328,-0.339707,3.634306,7.738841,-4.919920,1.211893,4.243556,-6.147557,-1.112313,1.162230,0.915931,-1.244267],[-6.097824,8.631682,-4.425781,6.274494,-1.110408,1.567607,-8.772329,4.212181,-6.964233,8.518532,8.410263,-5.871204,-6.734721],[0.608622,1.793625,-5.474748,7.624011,-6.381824,-2.763615,-8.519163,9.015604,-7.037077,5.941952,0.344939,7.631201,5.048408]],[[-0.372721,-3.676543,7.919975,-2.677182,5.451911,-6.534805,-6.489336,-5.943578,1.074842,9.845856,-0.525341,-3.612076,-5.755842],[-4.819612,-1.979214,-8.679618,3.079663,4.375066,-4.308131,4.377721,-9.759099,6.120122,2.774167,4.224050,-5.607506,0.663821],[-5.311349,-0.135521,9.681878,-2.670246,-7.342988,-1.943794,4.767869,-8.901182,1.642797,6.030468,-9.282496,9.096026,-1.841812],[-7.100554,8.572983,-2.847907,3.033155,-6.720342,7.179770,-6.758586,-6.623329,5.744717,-8.181712,5.525402,-4.909159,8.771622]],[[5.153385,-1.686337,7.409635,1.709772,-1.883432,-2.645997,-7.176122,5.630271,-3.172979,-9.582654,-0.689280,-4.482182,9.578699],[6.225195,9.219559,-8.017450,7.063572,-7.171258,6.190442,4.011145,2.671069,6.765411,5.842517,8.695824,-8.395066,-6.969000],[-9.006551,7.451334,-4.732775,5.228817,1.949287,2.234890,-4.883883,2.746467,7.553930,5.952488,8.448539,-1.901672,3.240826],[-6.293498,9.958802,8.025758,4.710460,-1.637027,1.117343,3.981232,4.961734,7.329213,9.584583,-8.599063,0.445508,6.169027]],[[-2.184997,0.663348,-8.124542,-2.020497,-5.801861,1.916912,-0.428155,-5.385404,7.654027,7.516095,-9.506693,-3.248258,7.593297],[-1.937607,-4.215367,1.797299,3.060210,1.638596,-7.628954,-2.754498,1.029486,6.582573,4.131665,4.050981,3.129316,2.966024],[7.407552,9.349421,-7.570631,2.513904,-7.535804,-5.859889,-5.363656,9.175673,2.583903,8.809659,8.518507,-7.778483,-6.947039],[0.117396,-8.799552,4.802021,-8.597931,4.970757,-7.823460,9.938336,3.151313,5.870687,7.642028,7.157114,-9.998838,8.786230]],[[7.974828,-9.806087,7.135429,6.435778,-9.477877,1.357491,-5.770146,-3.555711,-9.908555,1.427399,1.261747,4.099906,6.983725],[4.727664,7.918241,7.324301,-7.707919,6.929894,2.892210,-8.006605,3.907446,-7.100902,-1.773082,5.190747,-2.791035,-3.227311],[7.576748,2.780840,-3.288720,-7.748125,8.468921,-3.353504,2.118030,-1.916364,1.963422,-3.570342,-4.362135,-6.973062,6.355301],[9.611135,-4.373312,5.289069,4.109040,-3.509470,9.927193,-3.971274,-9.204144,2.847897,-2.466964,-2.880861,-0.024598,-5.649593]],[[4.006141,9.764383,-5.929274,-1.303259,-5.568861,-1.470267,-8.989861,-0.994833,0.373250,0.861943,8.998212,1.164600,-2.679167],[1.327955,9.994448,1.940751,-3.091358,6.383377,-3.185663,6.117779,-1.148791,-6.795593,-9.210625,-1.246682,5.216634,9.263220],[-6.848654,-7.078506,-1.880189,4.350401,-7.771862,-4.589988,4.413598,7.535286,-4.004655,2.912594,3.867161,8.147344,-2.922099],[5.865018,8.663997,-6.365111,-8.009683,-2.754611,5.815482,-4.386365,3.533648,-5.090524,-3.216545,-7.398726,1.904300,0.481085]],[[2.151730,-8.720861,1.535875,-8.679527,2.031876,-3.217696,7.881349,-0.701948,6.942256,-6.373192,-5.515570,3.048122,6.349487],[5.281944,0.103069,7.812862,2.912861,-1.050358,0.494741,-1.630482,-4.081831,-7.308032,9.930623,-6.762742,0.213216,4.387929],[2.275215,9.549445,-1.166264,2.581114,2.303833,7.196787,5.309880,2.328677,-4.343416,1.444415,9.392594,-0.502675,-1.880174],[2.693605,-9.534068,2.701154,4.931380,-2.414073,0.881105,-4.690548,-7.683101,-1.787154,0.494687,-2.473037,9.873007,-3.213683]],[[-4.980777,5.509488,5.701804,-1.506907,-8.466907,-7.395366,-3.625361,4.464216,-5.473014,6.031784,0.251097,-1.640399,3.968980],[-7.711357,-8.247200,1.183916,-2.896308,-1.912925,3.323320,6.461692,-1.950514,-8.557622,-7.827206,6.109564,9.865394,3.169842],[-0.511962,4.825193,-3.139264,-0.396699,9.781856,6.794962,-9.685721,5.882962,7.797158,3.938461,-1.448918,-8.083910,-0.964842],[-8.739666,-2.937032,-2.345393,3.249316,5.578192,-4.201519,0.991139,9.585588,9.132923,-4.475082,-5.833715,0.157929,9.791016]],[[7.501844,-3.245356,7.046990,6.908527,-1.210323,-1.160624,7.706428,5.647603,5.869598,6.503500,-7.734311,1.868004,-0.246306],[-1.435557,6.951462,1.529282,2.076439,-5.295977,-9.770132,6.107690,-0.709726,6.407930,7.968378,1.267489,8.841455,7.825224],[0.058715,-6.248433,-0.679804,9.528508,-3.398386,-5.316868,-3.638280,8.482777,-1.779505,8.053680,-1.453756,8.204236,5.406637],[8.257897,0.443754,-8.731357,5.566480,-8.885516,4.533390,7.728256,8.535947,-9.479612,6.806312,-3.010997,-2.009261,-8.388212]],[[-5.487777,-8.643254,-3.793674,-5.530488,-9.330327,-1.942043,6.983250,-6.226861,-6.213725,3.255595,0.420461,4.446084,1.494555],[2.118403,0.750724,-7.922762,6.015726,1.558798,-4.556527,5.044756,9.772396,-8.055748,8.227471,6.142149,7.446455,5.846918],[-9.592428,3.380931,-0.739621,5.402339,-1.510354,-7.034288,-6.960758,0.896128,1.557724,-2.715128,-2.702292,-5.514711,9.857023],[2.589023,-3.086734,7.127789,1.850335,-1.729111,6.670537,5.615915,2.846336,0.116089,9.122062,8.075709,-7.295743,4.628565]]], dtype = "float64")#candidate|4567|(16, 4, 13)|const|float64
uop_4568 = relay.sin(const_4567.astype('float64')) # shape=(16, 4, 13)
func_2595_call = mod.get_global_var('func_2595')
func_2597_call = mutated_mod.get_global_var('func_2597')
call_4571 = relay.TupleGetItem(func_2595_call(), 1)
call_4572 = relay.TupleGetItem(func_2597_call(), 1)
func_3404_call = mod.get_global_var('func_3404')
func_3405_call = mutated_mod.get_global_var('func_3405')
call_4585 = relay.TupleGetItem(func_3404_call(), 2)
call_4586 = relay.TupleGetItem(func_3405_call(), 2)
output = relay.Tuple([uop_4568,call_4571,call_4585,])
output2 = relay.Tuple([uop_4568,call_4572,call_4586,])
func_4606 = relay.Function([], output)
mod['func_4606'] = func_4606
mod = relay.transform.InferType()(mod)
output = func_4606()
func_4607 = relay.Function([], output)
mutated_mod['func_4607'] = func_4607
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4265_call = mod.get_global_var('func_4265')
func_4267_call = mutated_mod.get_global_var('func_4267')
call_4646 = relay.TupleGetItem(func_4265_call(), 0)
call_4647 = relay.TupleGetItem(func_4267_call(), 0)
func_628_call = mod.get_global_var('func_628')
func_633_call = mutated_mod.get_global_var('func_633')
var_4667 = relay.var("var_4667", dtype = "float64", shape = (2016,))#candidate|4667|(2016,)|var|float64
const_4668 = relay.const([[7.862751,6.256046,-8.213076,-9.013008,7.031595,1.230399,-5.257068,-1.531380,5.369942,-6.953036,-6.889899,5.859675,-2.799013,-7.330354,5.678091,-7.508391,9.462793,9.922165,4.769525,-1.031506,7.736357,4.236269,0.754776,6.010282,-3.406168,-5.531855,3.984954,9.831550,-1.884342,-6.657479,-9.201147,-8.129923,6.122517,7.986363,-2.359503,5.280735,6.786570,2.916269,-9.588317,-4.841554,-8.706788,-1.467741,-5.083265,5.310549,9.577636,-2.655295,2.201969,5.769933,6.410867,7.309100,-9.799312,2.084263,2.074873,-0.265140,6.706921,3.379082,7.014202,6.152767,3.333972,2.083790,8.534086,-3.393496,-8.857926,0.871697,-9.982278,7.336162,0.998743,1.572938,3.934459,-6.962571,-6.948836,-2.030463,6.963436,5.267685,1.382805,2.406310,6.942155,9.438750,4.483770,5.557648,2.986071,6.383758,0.976435,-1.406577,-6.258759,9.573302,-2.282765,8.322378,8.622437,-0.188739,1.248957,1.133926,0.114232,-2.811799,2.041971,-6.240396,6.353534,2.080143,-9.397602,3.238877,8.037351,5.214105,6.605413,4.307359]], dtype = "float32")#candidate|4668|(1, 104)|const|float32
call_4666 = relay.TupleGetItem(func_628_call(relay.reshape(var_4667.astype('float64'), [12, 14, 12]), relay.reshape(var_4667.astype('float64'), [12, 14, 12]), relay.reshape(const_4668.astype('float32'), [104,]), ), 3)
call_4669 = relay.TupleGetItem(func_633_call(relay.reshape(var_4667.astype('float64'), [12, 14, 12]), relay.reshape(var_4667.astype('float64'), [12, 14, 12]), relay.reshape(const_4668.astype('float32'), [104,]), ), 3)
func_3856_call = mod.get_global_var('func_3856')
func_3858_call = mutated_mod.get_global_var('func_3858')
call_4670 = func_3856_call()
call_4671 = func_3856_call()
bop_4686 = relay.not_equal(call_4666.astype('bool'), relay.reshape(const_4668.astype('bool'), relay.shape_of(call_4666))) # shape=(1, 13, 8)
bop_4689 = relay.not_equal(call_4669.astype('bool'), relay.reshape(const_4668.astype('bool'), relay.shape_of(call_4669))) # shape=(1, 13, 8)
output = relay.Tuple([call_4646,var_4667,call_4670,bop_4686,])
output2 = relay.Tuple([call_4647,var_4667,call_4671,bop_4689,])
func_4699 = relay.Function([var_4667,], output)
mod['func_4699'] = func_4699
mod = relay.transform.InferType()(mod)
mutated_mod['func_4699'] = func_4699
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4700 = relay.var("var_4700", dtype = "float64", shape = (2016,))#candidate|4700|(2016,)|var|float64
func_4699_call = mutated_mod.get_global_var('func_4699')
call_4701 = func_4699_call(var_4700)
output = call_4701
func_4702 = relay.Function([var_4700], output)
mutated_mod['func_4702'] = func_4702
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3286_call = mod.get_global_var('func_3286')
func_3287_call = mutated_mod.get_global_var('func_3287')
call_4742 = relay.TupleGetItem(func_3286_call(), 0)
call_4743 = relay.TupleGetItem(func_3287_call(), 0)
output = call_4742
output2 = call_4743
func_4744 = relay.Function([], output)
mod['func_4744'] = func_4744
mod = relay.transform.InferType()(mod)
output = func_4744()
func_4745 = relay.Function([], output)
mutated_mod['func_4745'] = func_4745
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3563_call = mod.get_global_var('func_3563')
func_3565_call = mutated_mod.get_global_var('func_3565')
call_4805 = func_3563_call()
call_4806 = func_3563_call()
func_3455_call = mod.get_global_var('func_3455')
func_3458_call = mutated_mod.get_global_var('func_3458')
call_4810 = relay.TupleGetItem(func_3455_call(relay.reshape(call_4805.astype('float32'), [8, 12, 6])), 0)
call_4811 = relay.TupleGetItem(func_3458_call(relay.reshape(call_4805.astype('float32'), [8, 12, 6])), 0)
func_2595_call = mod.get_global_var('func_2595')
func_2597_call = mutated_mod.get_global_var('func_2597')
call_4821 = relay.TupleGetItem(func_2595_call(), 0)
call_4822 = relay.TupleGetItem(func_2597_call(), 0)
func_2595_call = mod.get_global_var('func_2595')
func_2597_call = mutated_mod.get_global_var('func_2597')
call_4824 = relay.TupleGetItem(func_2595_call(), 1)
call_4825 = relay.TupleGetItem(func_2597_call(), 1)
func_4606_call = mod.get_global_var('func_4606')
func_4607_call = mutated_mod.get_global_var('func_4607')
call_4832 = relay.TupleGetItem(func_4606_call(), 1)
call_4833 = relay.TupleGetItem(func_4607_call(), 1)
output = relay.Tuple([call_4805,call_4810,call_4821,call_4824,call_4832,])
output2 = relay.Tuple([call_4806,call_4811,call_4822,call_4825,call_4833,])
func_4834 = relay.Function([], output)
mod['func_4834'] = func_4834
mod = relay.transform.InferType()(mod)
mutated_mod['func_4834'] = func_4834
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4834_call = mutated_mod.get_global_var('func_4834')
call_4835 = func_4834_call()
output = call_4835
func_4836 = relay.Function([], output)
mutated_mod['func_4836'] = func_4836
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1996_call = mod.get_global_var('func_1996')
func_1997_call = mutated_mod.get_global_var('func_1997')
call_4844 = relay.TupleGetItem(func_1996_call(), 0)
call_4845 = relay.TupleGetItem(func_1997_call(), 0)
func_4401_call = mod.get_global_var('func_4401')
func_4403_call = mutated_mod.get_global_var('func_4403')
call_4846 = func_4401_call()
call_4847 = func_4401_call()
var_4860 = relay.var("var_4860", dtype = "float64", shape = (14, 10, 3))#candidate|4860|(14, 10, 3)|var|float64
bop_4861 = relay.logical_and(call_4846.astype('bool'), relay.reshape(var_4860.astype('bool'), relay.shape_of(call_4846))) # shape=(14, 10, 3)
bop_4864 = relay.logical_and(call_4847.astype('bool'), relay.reshape(var_4860.astype('bool'), relay.shape_of(call_4847))) # shape=(14, 10, 3)
var_4868 = relay.var("var_4868", dtype = "float64", shape = (14, 10, 3))#candidate|4868|(14, 10, 3)|var|float64
bop_4869 = relay.greater_equal(var_4860.astype('bool'), relay.reshape(var_4868.astype('bool'), relay.shape_of(var_4860))) # shape=(14, 10, 3)
func_2123_call = mod.get_global_var('func_2123')
func_2125_call = mutated_mod.get_global_var('func_2125')
call_4874 = relay.TupleGetItem(func_2123_call(), 0)
call_4875 = relay.TupleGetItem(func_2125_call(), 0)
func_2123_call = mod.get_global_var('func_2123')
func_2125_call = mutated_mod.get_global_var('func_2125')
call_4891 = relay.TupleGetItem(func_2123_call(), 0)
call_4892 = relay.TupleGetItem(func_2125_call(), 0)
output = relay.Tuple([call_4844,bop_4861,bop_4869,call_4874,call_4891,])
output2 = relay.Tuple([call_4845,bop_4864,bop_4869,call_4875,call_4892,])
func_4893 = relay.Function([var_4860,var_4868,], output)
mod['func_4893'] = func_4893
mod = relay.transform.InferType()(mod)
mutated_mod['func_4893'] = func_4893
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4893_call = mutated_mod.get_global_var('func_4893')
var_4895 = relay.var("var_4895", dtype = "float64", shape = (14, 10, 3))#candidate|4895|(14, 10, 3)|var|float64
var_4896 = relay.var("var_4896", dtype = "float64", shape = (14, 10, 3))#candidate|4896|(14, 10, 3)|var|float64
call_4894 = func_4893_call(var_4895,var_4896,)
output = call_4894
func_4897 = relay.Function([var_4895,var_4896,], output)
mutated_mod['func_4897'] = func_4897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4018_call = mod.get_global_var('func_4018')
func_4019_call = mutated_mod.get_global_var('func_4019')
call_4926 = relay.TupleGetItem(func_4018_call(), 0)
call_4927 = relay.TupleGetItem(func_4019_call(), 0)
func_4166_call = mod.get_global_var('func_4166')
func_4167_call = mutated_mod.get_global_var('func_4167')
call_4938 = func_4166_call()
call_4939 = func_4166_call()
output = relay.Tuple([call_4926,call_4938,])
output2 = relay.Tuple([call_4927,call_4939,])
func_4940 = relay.Function([], output)
mod['func_4940'] = func_4940
mod = relay.transform.InferType()(mod)
output = func_4940()
func_4941 = relay.Function([], output)
mutated_mod['func_4941'] = func_4941
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3989_call = mod.get_global_var('func_3989')
func_3990_call = mutated_mod.get_global_var('func_3990')
call_4945 = relay.TupleGetItem(func_3989_call(), 0)
call_4946 = relay.TupleGetItem(func_3990_call(), 0)
func_4413_call = mod.get_global_var('func_4413')
func_4415_call = mutated_mod.get_global_var('func_4415')
call_4947 = relay.TupleGetItem(func_4413_call(), 0)
call_4948 = relay.TupleGetItem(func_4415_call(), 0)
func_4265_call = mod.get_global_var('func_4265')
func_4267_call = mutated_mod.get_global_var('func_4267')
call_4954 = relay.TupleGetItem(func_4265_call(), 0)
call_4955 = relay.TupleGetItem(func_4267_call(), 0)
output = relay.Tuple([call_4945,call_4947,call_4954,])
output2 = relay.Tuple([call_4946,call_4948,call_4955,])
func_4956 = relay.Function([], output)
mod['func_4956'] = func_4956
mod = relay.transform.InferType()(mod)
output = func_4956()
func_4957 = relay.Function([], output)
mutated_mod['func_4957'] = func_4957
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3286_call = mod.get_global_var('func_3286')
func_3287_call = mutated_mod.get_global_var('func_3287')
call_5009 = relay.TupleGetItem(func_3286_call(), 0)
call_5010 = relay.TupleGetItem(func_3287_call(), 0)
output = relay.Tuple([call_5009,])
output2 = relay.Tuple([call_5010,])
func_5011 = relay.Function([], output)
mod['func_5011'] = func_5011
mod = relay.transform.InferType()(mod)
mutated_mod['func_5011'] = func_5011
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5011_call = mutated_mod.get_global_var('func_5011')
call_5012 = func_5011_call()
output = call_5012
func_5013 = relay.Function([], output)
mutated_mod['func_5013'] = func_5013
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4401_call = mod.get_global_var('func_4401')
func_4403_call = mutated_mod.get_global_var('func_4403')
call_5089 = func_4401_call()
call_5090 = func_4401_call()
var_5101 = relay.var("var_5101", dtype = "float64", shape = (14, 10, 3))#candidate|5101|(14, 10, 3)|var|float64
bop_5102 = relay.minimum(call_5089.astype('uint64'), relay.reshape(var_5101.astype('uint64'), relay.shape_of(call_5089))) # shape=(14, 10, 3)
bop_5105 = relay.minimum(call_5090.astype('uint64'), relay.reshape(var_5101.astype('uint64'), relay.shape_of(call_5090))) # shape=(14, 10, 3)
output = bop_5102
output2 = bop_5105
func_5107 = relay.Function([var_5101,], output)
mod['func_5107'] = func_5107
mod = relay.transform.InferType()(mod)
mutated_mod['func_5107'] = func_5107
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5108 = relay.var("var_5108", dtype = "float64", shape = (14, 10, 3))#candidate|5108|(14, 10, 3)|var|float64
func_5107_call = mutated_mod.get_global_var('func_5107')
call_5109 = func_5107_call(var_5108)
output = call_5109
func_5110 = relay.Function([var_5108], output)
mutated_mod['func_5110'] = func_5110
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3133_call = mod.get_global_var('func_3133')
func_3135_call = mutated_mod.get_global_var('func_3135')
call_5183 = func_3133_call()
call_5184 = func_3133_call()
uop_5185 = relay.asin(call_5183.astype('float32')) # shape=(2, 16, 14)
uop_5187 = relay.asin(call_5184.astype('float32')) # shape=(2, 16, 14)
func_3286_call = mod.get_global_var('func_3286')
func_3287_call = mutated_mod.get_global_var('func_3287')
call_5197 = relay.TupleGetItem(func_3286_call(), 0)
call_5198 = relay.TupleGetItem(func_3287_call(), 0)
output = relay.Tuple([uop_5185,call_5197,])
output2 = relay.Tuple([uop_5187,call_5198,])
func_5205 = relay.Function([], output)
mod['func_5205'] = func_5205
mod = relay.transform.InferType()(mod)
mutated_mod['func_5205'] = func_5205
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5205_call = mutated_mod.get_global_var('func_5205')
call_5206 = func_5205_call()
output = call_5206
func_5207 = relay.Function([], output)
mutated_mod['func_5207'] = func_5207
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4018_call = mod.get_global_var('func_4018')
func_4019_call = mutated_mod.get_global_var('func_4019')
call_5304 = relay.TupleGetItem(func_4018_call(), 0)
call_5305 = relay.TupleGetItem(func_4019_call(), 0)
func_1353_call = mod.get_global_var('func_1353')
func_1358_call = mutated_mod.get_global_var('func_1358')
var_5318 = relay.var("var_5318", dtype = "float64", shape = (1620, 1))#candidate|5318|(1620, 1)|var|float64
const_5319 = relay.const([8.557160,-5.175004,-5.197990,-3.215677,0.302426,-2.256501,6.633354,0.208778,2.484498,-0.194710,9.886060,-2.989341,-2.156768,3.864337,2.402831,-8.600448,5.621604,-2.972786,5.413220,-3.627063,2.175097,3.963451,7.531757,-5.503375,-8.971562,-7.412670,1.997338,3.948444,2.125646,0.478484,0.356435,4.115213,4.518960,5.298570,-9.316670,1.571086,-5.629826,3.818917,0.552132,-7.341304,-8.181193,3.457126,1.035538,-5.949700,5.587254,8.791688,5.881714,2.571053,-3.664793,-4.889942,-2.327772,7.458027,-6.207614,-2.572284,-4.057593,0.494228,4.284018,-8.137130,-9.748622,-8.665590,-3.391392,-5.931532,-3.574699,-3.099867,-0.985255,-9.595464,-2.321416,9.907494,-8.508315,-9.616090,-4.290905,8.615857,-6.465531,9.862050,-6.560724,-5.431780,6.680236,2.218528,6.903264,7.806114,-7.981618,-0.304585,4.444475,9.172302,-3.112009,-1.660119,0.014642,-8.999898,8.420182,-2.843650,4.230436,-7.817892,-9.398520,2.448036,-9.414693,4.967897,-7.974270,0.202405,-3.067447,5.702489,7.742727,4.673087,9.847239,-7.786653], dtype = "float32")#candidate|5319|(104,)|const|float32
const_5320 = relay.const(-7, dtype = "uint64")#candidate|5320|()|const|uint64
call_5317 = relay.TupleGetItem(func_1353_call(relay.reshape(var_5318.astype('float64'), [9, 12, 15]), relay.reshape(const_5319.astype('float32'), [104,]), relay.reshape(const_5320.astype('uint64'), []), ), 5)
call_5321 = relay.TupleGetItem(func_1358_call(relay.reshape(var_5318.astype('float64'), [9, 12, 15]), relay.reshape(const_5319.astype('float32'), [104,]), relay.reshape(const_5320.astype('uint64'), []), ), 5)
func_295_call = mod.get_global_var('func_295')
func_298_call = mutated_mod.get_global_var('func_298')
var_5324 = relay.var("var_5324", dtype = "int16", shape = (231,))#candidate|5324|(231,)|var|int16
call_5323 = relay.TupleGetItem(func_295_call(relay.reshape(var_5324.astype('int16'), [11, 7, 3]), relay.reshape(var_5324.astype('int16'), [11, 7, 3]), ), 0)
call_5325 = relay.TupleGetItem(func_298_call(relay.reshape(var_5324.astype('int16'), [11, 7, 3]), relay.reshape(var_5324.astype('int16'), [11, 7, 3]), ), 0)
uop_5329 = relay.tan(var_5324.astype('float64')) # shape=(231,)
func_4288_call = mod.get_global_var('func_4288')
func_4291_call = mutated_mod.get_global_var('func_4291')
const_5337 = relay.const([1.994480,-7.927645,-7.347450,-3.575450,2.435908,9.001671,8.482937,7.919714,-7.520925,-2.876285,-8.771289,-2.204177,-3.013132,6.490623,-0.617325,1.746578,-1.553543,3.389847,-7.404959,-8.864526,9.488664,-0.091433,-8.817107,-3.340370,-7.318403,7.311771,-3.916472,-4.967903,8.804859,-9.704985,-2.821777,5.189737,-7.881732,4.414363,-2.084868,-6.006996,1.747262,-8.127484,0.052675,-5.212417,-7.032246,-7.474806,-8.107320,5.307152,-6.431641,5.524876,2.763349,-2.399618,7.038247,1.776306,8.729852,6.697181,-7.839950,-0.376371,5.848219,8.573047,-5.879376,-4.019839,-2.185279,-7.250549,5.805730,9.152485,-6.917545,-2.219178,-3.551109,-5.834546,-1.916233,-4.994164,1.319932,-9.325088,-8.154390,-9.532052,5.451930,2.948121,-5.573010,3.543975,4.413783,4.209039,-6.049510,5.020772,1.322181,-7.025412,1.698250,-9.746369,6.937908,2.579888,-5.793000,-9.235920,-6.717611,-1.902578,-2.474273,0.541081,-1.601243,9.169854,-3.111345,9.300031,-7.717758,8.915111,7.331015,0.835977,-4.273264,-8.927864,-3.092550,2.128859,-8.569283,-3.451495,4.349520,-6.546571,-3.480582,-3.510695,-9.241616,-1.628561,9.863766,-8.639626,3.012652,2.855879,6.857460,-8.825386,-8.223014,-2.563380,0.603107,0.101980,-3.016613,8.592399,-2.515556,-3.449024,0.536328,8.402207,-1.689671,8.342994,2.213816,-0.206207,-4.399909,7.797137,-2.566124,7.999071,-9.335553,-8.334865,-3.998785,4.713679,6.531113,2.799554,-7.225870,4.275197,0.929451,-9.556524,7.172698,7.295661,9.093473,-2.910850,-6.179809,-5.510283,9.207412,-3.825144,-8.006530,-2.546451,9.455567,-2.074396,-3.795487,-0.424705,6.390318,7.155339], dtype = "float64")#candidate|5337|(162,)|const|float64
call_5336 = relay.TupleGetItem(func_4288_call(relay.reshape(const_5337.astype('float64'), [2, 9, 9]), relay.reshape(const_5337.astype('float64'), [2, 9, 9]), ), 0)
call_5338 = relay.TupleGetItem(func_4291_call(relay.reshape(const_5337.astype('float64'), [2, 9, 9]), relay.reshape(const_5337.astype('float64'), [2, 9, 9]), ), 0)
func_3133_call = mod.get_global_var('func_3133')
func_3135_call = mutated_mod.get_global_var('func_3135')
call_5346 = func_3133_call()
call_5347 = func_3133_call()
func_4288_call = mod.get_global_var('func_4288')
func_4291_call = mutated_mod.get_global_var('func_4291')
call_5376 = relay.TupleGetItem(func_4288_call(relay.reshape(call_5336.astype('float64'), [2, 9, 9]), relay.reshape(const_5337.astype('float64'), [2, 9, 9]), ), 0)
call_5377 = relay.TupleGetItem(func_4291_call(relay.reshape(call_5336.astype('float64'), [2, 9, 9]), relay.reshape(const_5337.astype('float64'), [2, 9, 9]), ), 0)
uop_5393 = relay.sqrt(var_5318.astype('float32')) # shape=(1620, 1)
uop_5400 = relay.log2(uop_5329.astype('float32')) # shape=(231,)
func_3679_call = mod.get_global_var('func_3679')
func_3682_call = mutated_mod.get_global_var('func_3682')
call_5405 = relay.TupleGetItem(func_3679_call(relay.reshape(const_5320.astype('uint64'), []), relay.reshape(call_5317.astype('uint64'), [1, 160]), ), 1)
call_5406 = relay.TupleGetItem(func_3682_call(relay.reshape(const_5320.astype('uint64'), []), relay.reshape(call_5317.astype('uint64'), [1, 160]), ), 1)
func_4956_call = mod.get_global_var('func_4956')
func_4957_call = mutated_mod.get_global_var('func_4957')
call_5409 = relay.TupleGetItem(func_4956_call(), 0)
call_5410 = relay.TupleGetItem(func_4957_call(), 0)
bop_5413 = relay.logical_xor(var_5324.astype('uint8'), var_5318.astype('uint8')) # shape=(1620, 231)
uop_5437 = relay.cos(uop_5400.astype('float32')) # shape=(231,)
func_4377_call = mod.get_global_var('func_4377')
func_4380_call = mutated_mod.get_global_var('func_4380')
var_5440 = relay.var("var_5440", dtype = "float64", shape = (6, 18))#candidate|5440|(6, 18)|var|float64
call_5439 = relay.TupleGetItem(func_4377_call(relay.reshape(var_5440.astype('float64'), [6, 9, 2])), 0)
call_5441 = relay.TupleGetItem(func_4380_call(relay.reshape(var_5440.astype('float64'), [6, 9, 2])), 0)
func_3989_call = mod.get_global_var('func_3989')
func_3990_call = mutated_mod.get_global_var('func_3990')
call_5447 = relay.TupleGetItem(func_3989_call(), 0)
call_5448 = relay.TupleGetItem(func_3990_call(), 0)
bop_5452 = relay.mod(uop_5437.astype('float32'), bop_5413.astype('float32')) # shape=(1620, 231)
bop_5466 = relay.right_shift(uop_5437.astype('int16'), relay.reshape(call_5323.astype('int16'), relay.shape_of(uop_5437))) # shape=(231,)
bop_5469 = relay.right_shift(uop_5437.astype('int16'), relay.reshape(call_5325.astype('int16'), relay.shape_of(uop_5437))) # shape=(231,)
bop_5472 = relay.subtract(uop_5329.astype('uint8'), relay.reshape(var_5324.astype('uint8'), relay.shape_of(uop_5329))) # shape=(231,)
bop_5488 = relay.bitwise_and(uop_5329.astype('int32'), relay.reshape(bop_5466.astype('int32'), relay.shape_of(uop_5329))) # shape=(231,)
bop_5491 = relay.bitwise_and(uop_5329.astype('int32'), relay.reshape(bop_5469.astype('int32'), relay.shape_of(uop_5329))) # shape=(231,)
output = relay.Tuple([call_5304,call_5317,const_5319,const_5320,call_5336,const_5337,call_5346,call_5376,uop_5393,call_5405,call_5409,call_5439,var_5440,call_5447,bop_5452,bop_5472,bop_5488,])
output2 = relay.Tuple([call_5305,call_5321,const_5319,const_5320,call_5338,const_5337,call_5347,call_5377,uop_5393,call_5406,call_5410,call_5441,var_5440,call_5448,bop_5452,bop_5472,bop_5491,])
func_5492 = relay.Function([var_5318,var_5324,var_5440,], output)
mod['func_5492'] = func_5492
mod = relay.transform.InferType()(mod)
var_5493 = relay.var("var_5493", dtype = "float64", shape = (1620, 1))#candidate|5493|(1620, 1)|var|float64
var_5494 = relay.var("var_5494", dtype = "int16", shape = (231,))#candidate|5494|(231,)|var|int16
var_5495 = relay.var("var_5495", dtype = "float64", shape = (6, 18))#candidate|5495|(6, 18)|var|float64
output = func_5492(var_5493,var_5494,var_5495,)
func_5496 = relay.Function([var_5493,var_5494,var_5495,], output)
mutated_mod['func_5496'] = func_5496
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5646 = relay.var("var_5646", dtype = "uint64", shape = (4, 10, 12))#candidate|5646|(4, 10, 12)|var|uint64
var_5647 = relay.var("var_5647", dtype = "uint64", shape = (4, 10, 12))#candidate|5647|(4, 10, 12)|var|uint64
bop_5648 = relay.bitwise_or(var_5646.astype('uint64'), relay.reshape(var_5647.astype('uint64'), relay.shape_of(var_5646))) # shape=(4, 10, 12)
uop_5657 = relay.erf(bop_5648.astype('float32')) # shape=(4, 10, 12)
const_5663 = relay.const([[[-6.611067,5.341093,7.698844,-3.758828,8.450958,-1.539421,3.787734,-2.118442,-4.111948,-8.888656,-9.622725,-6.199103],[7.609465,8.347836,-1.717453,2.674430,1.490161,2.152957,8.311167,0.444949,-7.990995,8.516568,6.697212,1.091033],[-9.068376,3.333220,2.253283,3.942297,-6.402092,-4.731909,2.392246,-0.170519,-2.375100,-0.841439,3.028081,-0.346217],[9.425768,3.267315,-6.653606,-9.712281,-8.560336,6.925642,2.759337,-2.876627,3.020152,1.830014,4.932930,6.666609],[1.963548,3.021605,-9.621555,-4.319167,0.252991,-5.210716,5.215467,-9.867422,6.777387,2.203080,-6.803947,-2.579588],[-4.151873,9.865862,0.577824,-3.328103,-8.796456,4.496901,9.109264,-0.754308,0.807829,-7.648218,9.812947,-2.931077],[5.655221,-2.428369,-2.162220,5.668529,-0.763181,-9.408526,-5.695117,-2.993872,-5.070505,1.896079,8.613047,5.017550],[-3.418806,2.881296,-5.030724,-6.139591,-8.185432,-4.970961,-3.879118,9.311863,-7.204599,-0.993812,-5.970673,7.932652],[8.060133,8.110318,-1.170532,8.112533,-5.458315,-7.621862,6.260777,-8.812022,8.139351,-9.859236,0.335690,-0.029493],[3.343974,-7.385346,8.179192,-3.941906,-3.722011,-3.303641,-2.155035,8.106190,-1.894231,-8.982945,8.853757,2.375951]],[[1.368593,-8.444728,-5.113337,-5.681710,6.350967,7.221523,-0.306530,7.252181,4.597814,0.848380,-3.892443,7.772629],[-7.301429,-0.755050,-4.312551,9.717885,9.282210,-1.164846,-5.960531,5.303107,7.953397,7.789783,-6.008314,-7.966323],[-4.181664,-5.586519,9.349571,0.801187,8.957859,9.531269,-0.497951,9.434148,-7.059482,7.272904,-3.797621,-2.400432],[2.223284,0.588041,7.092589,-0.529169,6.827967,-8.843325,-4.738983,-4.242789,3.647006,3.975648,-1.288977,5.528495],[4.015579,-9.712593,6.789694,6.405443,-4.012119,-5.509768,0.465063,8.437076,2.705115,7.174903,0.795821,2.370698],[6.111171,-8.285612,6.810563,-6.477730,-0.468767,-8.898923,6.505788,2.967994,-3.893939,3.307280,-1.596171,-5.709896],[-3.787104,2.816740,-5.784584,-9.228188,9.555051,9.774276,-8.679892,1.755353,-6.883446,-4.789702,-5.782418,2.101635],[-8.921659,-6.295351,7.291747,-1.254541,-4.845422,-5.575275,5.578079,-7.495469,1.081436,6.633633,0.776609,0.697663],[4.953984,0.324692,6.745763,-9.701309,-7.607719,-4.807857,-0.524841,7.251893,-9.911560,6.796219,5.869225,-1.693539],[3.290534,-8.086311,4.110539,4.239437,-6.092335,-0.841109,7.119544,5.756362,9.425502,-6.502751,-0.316812,-6.000360]],[[0.899842,-4.778268,3.150511,3.372359,3.146491,0.124131,1.400411,5.320993,3.436999,6.361154,-5.025787,-7.041971],[-1.354974,3.158058,5.374479,3.643786,4.841023,6.709593,4.068618,-9.349083,-7.305431,5.974986,-6.539308,7.098309],[-3.703945,-8.031687,3.242452,-4.999155,2.936090,2.529981,9.211704,3.345648,-2.117733,8.110172,-9.507272,-0.469958],[8.749257,-5.425706,-7.080244,7.879810,8.231675,-4.679245,6.748153,-8.052434,-9.853446,4.179501,4.320781,6.022513],[7.779591,7.290329,-2.428208,-7.912422,3.876668,4.750279,7.904200,-5.625178,-3.359182,4.251005,5.855883,1.987869],[5.635533,3.559687,8.305408,1.517915,5.160000,-9.031412,-7.272967,9.439883,-3.983206,-7.821756,0.791728,-0.997300],[4.840751,6.916555,4.903928,-4.319889,1.661312,5.543715,-3.814792,6.706049,8.506746,0.980292,3.433275,6.932852],[1.495249,5.442789,-5.839513,9.846925,8.240031,-9.504894,2.901821,-3.185804,-8.478196,1.056340,-9.786691,-6.737237],[2.768970,8.843183,-5.056361,-0.124983,-2.808541,1.175925,9.804999,-8.736365,3.794874,6.419006,-0.852126,-7.756420],[-9.768369,4.706966,-6.888753,-2.087324,-0.631571,-6.142171,1.280960,-2.335413,-3.678264,-3.838800,-4.046531,5.972862]],[[-7.975055,-2.397641,-6.018736,5.938630,1.161744,9.619393,0.024168,2.039629,5.979812,-7.206584,-3.065382,7.938609],[-8.762510,-1.557129,-6.867644,8.677570,-5.940190,1.962672,-8.664683,7.171116,-8.463578,2.040179,9.655063,1.993721],[8.142567,6.825690,-8.108506,-6.410679,-7.295272,-0.404882,-3.270047,1.719969,1.503884,4.918573,-3.440791,4.449875],[8.448421,-9.139654,8.163099,-4.406037,4.513597,-0.498208,-8.839143,0.294795,9.228917,3.544602,7.925024,6.361128],[-4.930994,-0.693905,3.435925,7.066531,-8.104704,0.205266,3.775152,-6.128372,4.054410,-7.925115,-5.863044,9.357272],[1.660492,5.682146,0.103493,-4.039962,-8.412087,-1.302078,-2.174961,-8.686381,9.161513,5.078786,6.711641,-3.600631],[-1.159262,-1.723360,-9.283917,9.876670,9.331604,-1.501845,2.646503,-6.467848,3.899677,2.689598,-1.401279,-0.615666],[-8.169679,-5.566725,-8.080203,-0.277247,1.677370,8.811147,-8.039027,-4.556319,7.261348,8.814779,2.519742,-0.911523],[-7.347059,-0.837897,-3.037630,2.619164,-7.839245,-5.865027,-7.387343,-9.887015,-7.643475,5.365994,-0.515512,-6.889864],[-9.311010,-0.203264,1.023180,-7.264383,-6.759013,-1.261655,6.962308,3.158071,4.334156,-0.483209,7.042925,4.912536]]], dtype = "float32")#candidate|5663|(4, 10, 12)|const|float32
bop_5664 = relay.less(uop_5657.astype('bool'), relay.reshape(const_5663.astype('bool'), relay.shape_of(uop_5657))) # shape=(4, 10, 12)
bop_5675 = relay.less_equal(uop_5657.astype('bool'), relay.reshape(bop_5664.astype('bool'), relay.shape_of(uop_5657))) # shape=(4, 10, 12)
func_1353_call = mod.get_global_var('func_1353')
func_1358_call = mutated_mod.get_global_var('func_1358')
const_5681 = relay.const([1.917250,-7.009467,9.696862,-2.222410,9.943972,-3.766578,-2.788586,-7.463249,6.968134,7.574515,3.855629,8.120023,-2.530516,-3.334672,1.613165,5.114003,-8.532153,-2.250286,-5.935413,6.832475,1.015711,-9.137446,1.767102,1.662036,2.802872,-7.434701,5.385428,-7.858981,-7.646770,9.673193,-4.811817,-9.279150,6.006553,-2.278832,6.377947,0.642752,6.040250,8.839718,-6.441442,1.361853,2.615767,-6.873737,1.959166,-0.380757,2.118605,-7.829894,-6.055503,-0.265360,5.907444,-6.355072,-1.847630,6.726911,2.713809,-6.227433,2.829416,5.083838,-4.793134,4.934327,-2.450848,2.569411,-3.731427,4.955130,8.238929,-4.481426,6.742151,4.005455,-3.384453,4.515878,6.284129,1.887040,-6.633940,0.237565,0.736283,-7.906497,-9.156648,1.296371,8.154468,-0.570686,1.308903,5.046640,0.229012,-4.036580,-2.625189,3.459981,-3.409435,-6.469239,5.877115,9.290300,5.949512,-9.221041,4.292065,-4.107362,6.062818,0.183279,7.786077,0.371779,-5.467659,-7.415829,2.601339,-2.641085,-0.821459,-7.205199,6.572230,-0.795051,-0.256525,-4.210823,4.681931,-6.403852,7.699033,5.783563,3.178565,0.997644,-0.836070,-2.686518,7.964685,2.122246,3.583442,5.791548,6.029751,6.701074,9.141786,-6.101394,-7.527859,9.217152,-8.371726,-1.072083,1.542111,8.590928,4.782749,0.077247,3.572746,9.749190,0.788334,9.510807,-4.116472,-4.596599,-9.927274,-8.787682,8.914523,7.902638,-7.034487,1.430155,3.369638,-0.093152,-3.070231,-9.357710,-2.682209,2.444413,-1.549535,5.648131,7.376486,-4.533994,-6.190385,7.734164,-7.676668,3.675018,-5.315735,-8.902799,-2.574617,3.786442,2.246828,-8.792905,5.998843,6.167639,-8.074189,-6.953181,-0.565732,0.018186,-6.891614,-0.791876,0.980283,9.317984,7.081910,-5.162457,-8.401427,-4.609886,2.803122,-1.571044,-3.755353,-8.213094,-5.301658,7.697170,-2.770022,1.818738,0.432740,4.605852,2.590030,-9.390412,8.034617,-1.553362,-2.623948,8.384418,5.613741,-1.951349,5.300519,-6.789623,-5.072742,-8.429406,6.042650,8.025435,5.525583,5.880750,7.539032,0.498776,-2.207516,9.143198,9.255489,-7.348166,-7.438303,-1.002899,-5.129117,6.978816,-9.820024,2.014989,3.339709,-5.577417,0.680348,3.066916,-4.778403,3.085496,1.683602,2.038643,0.044096,7.907661,9.531907,0.935463,4.231847,-0.153221,-6.089955,9.154798,-9.502364,8.200776,7.163562,-6.442980,2.996983,6.078311,-1.872370,8.333030,-2.564454,4.299769,7.113816,3.444544,8.523873,-2.416395,2.408445,6.092944,-2.490585,-3.846690,-9.225005,4.989266,-6.458128,-5.830203,9.784685,3.396998,-7.141255,5.856789,9.407911,-4.745225,-1.796519,9.412575,-3.442698,6.705832,0.655401,5.736733,7.705583,0.822423,6.071187,-3.840271,-5.208708,-3.204605,0.894482,-4.457792,5.645877,0.440791,0.829264,2.844033,-9.891522,-9.152840,-0.033176,0.888223,-6.034776,-9.972889,-6.497744,9.100441,-9.735152,4.772813,6.583037,-1.812793,5.476270,3.111408,-0.326616,-7.715221,6.396049,-3.371191,-7.390350,5.128378,6.848606,-0.919485,7.019162,-1.509321,-8.282498,0.383641,6.067140,-2.298106,4.781674,7.643580,-0.257242,-1.120393,7.625566,-5.964144,-8.370495,-9.719716,0.100377,8.633160,-4.696744,-5.390119,-4.707847,3.451542,5.791153,-9.091197,9.005466,3.360084,1.453960,8.898950,-0.614928,1.504352,-7.659108,-3.995765,-1.784391,-0.367622,5.723281,3.622197,-3.851245,4.532620,-1.905874,-3.588190,-0.943555,-6.154709,-8.945592,-7.561924,6.316147,4.397822,7.734567,5.670027,-9.944434,0.406075,-9.574298,5.327437,5.094271,-8.845553,-1.227532,5.316185,-8.224385,-8.109230,7.387543,-1.071227,-6.259206,-4.248196,5.869467,-6.515932,7.546174,-7.564699,-5.657661,-5.315559,-5.179127,-8.435161,-6.529494,3.248942,9.688699,6.403134,-5.924493,7.344054,3.921460,8.189940,7.801862,-5.819352,2.314105,-3.973821,-5.436757,5.931558,8.488355,9.206301,0.013602,3.863891,3.047245,2.129185,-5.205201,-5.639109,2.827571,-8.390958,3.700865,4.338967,1.852995,3.284484,6.563658,2.328905,-1.611529,-1.152155,1.600894,-5.418811,-9.353308,5.329869,-0.677458,-6.741378,5.291373,-0.018601,-8.325255,7.946850,0.712005,1.630941,0.204706,8.683850,-2.807327,1.711272,0.056025,-7.399594,9.022140,-5.595397,6.826175,4.380180,-4.064946,-7.486375,-8.492305,-9.964961,-8.786345,-4.737426,-2.117353,2.618818,8.601986,4.998153,-2.410088,-0.567099,7.319295,3.917544,6.403275,5.812363,-5.950649,-9.591931,3.872210,-2.914319,4.404529,6.120345,-4.112681,-7.286360,1.174325,7.636918,3.376448,8.621975,-0.313748,4.677976,-5.085366,4.959024,-3.718003,1.925633,1.916959,9.963858,-2.093092,-5.682204,4.052023,-9.460533,-9.292417,-6.869206,7.937396,-6.194343,-8.010744,0.818412,-3.168165,0.406020,6.613189,-5.286310,-1.380335,7.220239,-7.336333,-4.868898,-6.117374,-8.128061,-3.318991,-3.948847,7.384763,2.518788,-9.245882,-0.121608,-0.978074,-7.085311,-5.225586,-6.251316,-2.800245,4.717572,6.059091,4.590875,-4.731644,1.630504,-9.930713,-9.231329,-1.951343,-5.237908,-8.529159,-5.104223,-0.405561,-1.769270,5.578488,-2.362660,-1.584734,2.260304,2.569763,7.430614,-7.987528,-2.126331,-2.902969,-2.578739,-1.224987,-3.040905,4.963994,7.316288,7.056829,-0.042798,-2.210258,-4.516375,-6.920725,6.207661,-6.326947,8.128194,0.403637,-2.048894,-1.323876,-4.472103,8.998222,-3.530396,6.269917,-7.216136,4.921681,-9.313395,3.855064,5.487465,-6.845575,9.061237,9.681709,0.092320,-2.870691,0.646829,9.345398,-2.662318,-3.668538,9.123399,-5.015436,-0.694012,1.024453,-8.869944,0.760025,-5.734049,-7.070652,9.850706,4.744782,-7.435135,-5.903890,-1.261658,0.574239,-7.608581,7.176759,-4.804299,5.841713,-5.594456,1.577744,-7.740079,-5.509526,-9.158471,-0.923051,-9.021451,-5.616520,-5.750968,-8.203882,-5.416145,8.907919,4.516639,7.731977,-2.056867,-8.223814,0.216531,8.391456,6.526038,-2.711724,-9.204644,3.801145,-9.258770,1.708773,-1.624219,-8.033269,-3.546697,1.158784,-4.027806,0.917856,6.228289,9.010794,3.269939,-2.709616,-9.317625,-7.597665,-3.438043,-0.649619,4.323996,4.003396,6.140255,4.769698,2.630880,-4.520618,7.278362,-9.419880,8.024629,0.224396,4.553530,1.049107,-4.511109,-8.148844,8.221668,-9.869487,8.144069,-7.413994,3.714906,-5.397176,-7.842691,-5.674111,-1.622313,9.452908,1.429334,-8.794408,-8.963453,-0.324439,3.077084,0.990311,3.870190,8.081716,6.979021,-3.572556,0.279814,3.608692,6.950021,4.674915,3.480124,8.367990,2.297559,2.824243,-9.904473,4.462656,-7.687176,-4.512706,-8.947505,-4.439053,-3.353385,-8.276472,6.415331,5.434807,9.527575,-7.430674,1.905875,9.418223,0.642830,3.988037,1.292826,5.681091,9.637883,4.425804,-7.959179,-2.970509,-4.401378,-5.679342,-7.985416,-1.232106,5.820905,-0.210595,7.057952,7.261732,-3.241233,-4.620983,4.685263,-5.323558,1.469460,-5.649830,2.207186,-3.839243,9.501309,-2.420562,3.715807,-4.899944,6.355549,3.227434,-3.162416,-1.746140,5.803766,-0.902557,-2.741623,-9.770278,0.434024,6.346660,3.651920,-4.963568,3.657890,-5.769303,-4.834154,0.535885,-8.946980,-9.607748,9.412168,6.994410,3.973657,-9.231028,-5.664020,4.256456,9.362527,7.354867,5.308349,-1.307642,-9.684801,0.634648,3.634895,-5.753723,7.072557,-0.553156,1.342837,-8.908688,-2.772415,7.275842,6.514566,-4.761955,9.718208,1.334801,8.797782,0.149166,-1.943778,-0.471702,1.124065,3.765048,5.159515,-0.969785,-6.761028,3.940888,1.694116,3.598332,-1.352052,8.858562,1.518275,-1.241419,-2.657124,-5.377525,-7.022957,-5.537764,-6.075665,-9.916690,-6.925579,-2.133523,1.884792,0.161489,-7.562981,9.698775,-2.509578,1.532836,9.007992,-8.247252,8.608972,1.489826,-5.696170,-8.941131,0.438789,-8.559189,0.981731,-5.791890,3.471667,2.405634,7.465767,-8.338522,0.320678,5.041863,5.010739,8.646630,7.242192,-2.711193,-1.656193,-4.724283,7.577591,8.824073,5.520155,-5.219503,2.233490,5.330027,-3.208149,-5.025203,1.540102,7.752672,-6.826794,6.216369,0.228101,0.037052,-2.985440,2.941002,-1.370362,-0.998203,3.333368,-8.276963,-7.310308,8.206646,5.940051,6.585742,1.956940,9.687152,6.453072,9.098907,-6.578815,-3.051500,-0.816656,4.050502,4.200634,9.656222,-6.347342,5.444110,1.757375,8.812715,7.693666,8.347550,8.649074,-6.095806,1.275776,1.064037,-9.825927,5.221192,-4.298543,8.720907,-2.948372,-3.085289,4.745129,-4.628154,-4.542300,5.963497,-4.169578,-6.567247,-2.455514,-9.365647,8.465057,0.280067,5.331237,-7.559936,7.731015,7.928963,-6.575925,-5.564336,-8.973851,-4.103686,2.088322,-1.288783,-6.608536,0.030687,9.438209,2.027268,-2.022203,-0.891401,8.171031,0.795894,-2.125392,-7.550193,-3.160147,-9.718668,5.273234,5.550343,6.788548,-1.024948,-0.035788,-4.664585,8.929149,-5.446497,-7.502249,-5.622453,-4.705003,9.754013,-3.378889,0.035256,-8.718273,5.538802,1.589806,-7.459205,-8.577436,-6.888274,1.656118,-1.533756,-4.554499,-8.326986,7.634973,-4.120085,-4.838946,0.307194,-0.258746,7.499320,-1.213479,-1.137850,6.869863,-0.489425,-4.311166,-6.969613,2.983335,-6.716066,-6.153556,6.760637,6.894576,2.699966,4.773397,2.840705,6.247476,-5.533940,8.420662,8.624057,-9.188422,1.792027,4.439267,-0.841938,-8.750132,-5.508263,2.551931,3.317621,-5.644706,-4.603443,7.440929,1.798726,-8.641941,-1.184184,-5.418067,-0.499776,-2.817012,4.957880,9.903030,-7.942198,0.257644,-3.446562,-1.789337,1.690058,-5.944858,-3.909503,4.262198,0.853169,-2.684562,-7.706190,7.993889,6.888127,-9.858203,8.322272,-7.642828,8.064049,4.859424,-3.404947,3.867510,-2.838844,4.545641,0.336232,-2.389048,-2.084394,8.633626,0.787436,6.778686,-1.778496,-6.068711,6.257685,7.816071,-9.573337,3.959837,4.058163,-6.975310,-0.668159,-3.282783,1.643428,-4.760017,9.487593,-8.278659,2.505921,4.187482,4.290040,0.736725,-9.089231,4.184316,0.544286,0.802370,-9.100281,-6.059942,0.824159,-2.942234,7.113458,-3.165986,-9.464398,-8.935349,-8.057640,8.296475,8.326831,9.737642,-8.596901,-9.140508,6.535236,-0.122934,9.942062,-2.143921,1.006881,0.992399,-1.278664,-2.240477,-4.760900,-9.081963,-6.177972,-9.409841,-6.251229,-3.191169,7.873156,9.274896,-8.036371,-8.182631,-2.344643,4.390207,6.054631,4.484472,-8.842914,9.019738,-6.065110,-8.664001,6.180242,-1.145269,-5.322695,-8.252460,0.120675,-3.248247,0.363887,4.518064,1.378204,-0.856419,-1.387448,-8.259082,5.093586,9.064865,6.431867,-6.063832,9.805533,9.235860,6.759165,7.034353,8.091506,6.880639,-1.272522,-1.882792,2.846192,-4.249606,-4.356366,-2.590935,-3.372565,1.398553,3.653962,0.787519,-2.057014,-5.493557,-9.160504,-5.175720,9.645826,5.864563,8.344598,-5.878125,-2.738214,-0.514954,6.748957,-8.844331,-9.470053,-2.343939,4.396312,-0.952921,-1.690354,-7.705594,-7.497420,-4.336383,-2.414192,6.222322,6.443435,-9.539858,0.968876,1.121055,1.243119,-8.592391,7.635318,-5.901404,-5.242003,5.795291,3.721045,-5.800564,-1.395033,-6.571391,-4.955424,-7.221321,7.703036,3.339874,1.008000,1.242727,-8.767734,2.495508,-1.809298,-6.485973,-5.023972,9.548995,7.133892,-0.960637,-9.281510,-3.122845,-7.247978,6.454559,9.685879,-4.132484,1.240075,-0.417300,-8.813924,9.832351,9.982497,5.104557,1.704390,6.136644,-4.831106,2.051153,-3.794584,9.508119,-7.084634,-7.263597,5.156330,5.532811,5.732475,-3.976591,1.218573,-4.366846,-9.084767,-8.136983,1.620519,-2.909205,1.500953,-4.737761,-3.908822,0.625831,-1.729817,-9.709082,-7.472381,-9.069885,3.283013,2.403883,5.066557,8.018054,-2.805726,3.816796,-2.192691,6.021763,4.228760,1.950806,-2.190167,0.450434,0.022038,-9.643738,6.771075,9.290443,-4.922513,4.091413,-7.383720,4.743413,-8.652148,-9.010999,-4.439659,8.399524,-4.441106,7.229084,1.596234,4.447206,5.194276,-4.733779,4.784653,6.731699,3.178041,8.115110,-9.306020,-4.512058,8.985560,3.683236,-8.110810,-0.831502,7.573595,2.391408,-4.877372,3.396231,0.949871,-4.348169,0.527847,-9.818200,-9.606348,5.317299,-4.155407,0.408334,-2.414384,0.747144,9.106323,1.983579,-0.619426,4.436106,-3.989311,-5.171183,4.245663,-3.372013,-2.740318,2.353018,-9.086894,0.275835,-3.012372,-2.637472,4.580233,9.947334,8.864287,-1.145996,-8.992638,-8.107751,-4.267982,-8.635339,1.916928,3.569166,6.046902,-2.510621,6.856335,-2.961777,2.794856,-9.487154,-7.306413,3.803716,2.561835,8.088055,-3.772197,-9.481557,-8.747975,-2.248182,7.686821,-2.595144,-6.374854,-0.350158,-2.722251,0.763936,1.625116,5.330615,0.278681,-4.081683,-8.219923,-2.393642,2.410105,7.675308,7.307908,-0.562200,3.659277,0.687123,3.253312,8.401295,-0.469268,2.483731,4.837310,-1.747469,-2.564251,8.379436,-7.743950,7.397883,-7.243584,-3.995973,-1.821453,-3.187848,7.652695,0.915323,7.087584,-5.530017,2.575441,3.842967,-6.454963,9.987495,-5.839003,5.324521,1.055752,3.178522,-6.740146,3.836715,-4.623620,-2.150822,-1.193147,-6.085528,5.562092,1.808274,3.579010,2.778121,-2.699157,-5.375837,9.055733,-8.493863,-4.423503,-1.663314,8.471519,5.839307,0.332138,9.337636,3.648610,5.088771,-9.792880,6.083165,7.875256,-8.696872,7.455351,2.244508,-6.142431,4.750268,5.754281,9.499366,-6.218451,-0.883529,3.836897,7.180708,5.317773,2.462467,5.415806,4.591967,1.968297,3.332443,-3.772847,2.184444,-3.018489,9.668715,-8.186966,-5.690431,2.818599,-5.188716,-1.247499,3.681435,-7.763694,5.184559,0.170652,-4.457344,-9.606682,-1.927814,-7.929163,-9.990278,-2.073827,-4.704072,-1.182152,7.718074,8.478328,-8.787678,9.043257,-6.164372,-8.345861,-4.135141,-6.630736,-1.761732,-3.044410,-2.157707,-0.501679,9.398970,-6.239349,9.899910,-3.227000,4.847755,-9.259644,6.837910,3.258266,3.537818,0.368177,-4.434453,9.933145,8.203242,3.130446,-6.261790,-8.588485,-0.144341,-6.387634,7.733195,5.222676,-7.378140,8.336619,3.849805,3.101783,-8.697722,-7.522823,9.962606,-0.749508,7.093374,-2.832419,1.450472,6.010347,5.444311,-6.064548,-7.083710,9.596457,9.455370,-7.834075,-2.033875,-2.497396,6.057354,1.565255,-3.931209,4.761297,2.458468,6.673828,-9.460420,-5.905831,-4.916661,-2.163618,-5.469854,-2.369771,-9.589664,1.776360,-7.085736,-0.009113,-9.015858,-7.886843,1.990141,2.473456,8.521247,6.586345,7.027225,-4.289028,-9.386260,7.938179,-2.300977,6.757672,-4.105357,9.287153,-7.279317,-1.151860,9.333023,3.564083,-5.215848,1.628056,3.866360,1.594043,4.803823,4.595851,1.340708,-0.616862,-7.060621,-8.481656,-1.179051,8.591184,1.426212,-9.756178,1.812126,2.632619,-6.701500,7.864566,-1.596994,-8.514856,-4.821613,2.295207,-3.040334,-1.362545,2.970178,-7.661778,-0.745244,-3.431323,7.252130,2.568583,-2.110655,1.772725,4.222757,4.348608,5.366389,4.816837,8.243229,8.013133,4.117292,-9.143794,2.178067,-2.098361,-7.639506,0.113892,7.859383,-3.159212,-8.768827,-5.961352,3.962994,5.083423,-9.739154,-4.091675,0.421099,8.215529,3.515896,-7.995439,-2.160755,2.636584,6.357109,9.850712,0.606561,0.731502,2.358753,7.984069,3.479839,1.472231,-2.897428,8.271297,-4.190852,-1.943930,-1.215575,-3.721143,5.620619,0.427775,-8.696523,-0.353242,9.818554,6.854078,3.442421,3.312231,6.823057,-3.884098,-1.917132,-2.527472,7.900918,7.290056,1.284619,-7.085674,5.640678,5.005850,-8.438376,1.103352,0.029712,-1.439768,6.595352,2.003558,7.583244,-0.006951,0.974382,-9.082691,6.441214,-0.929483,5.157909,-6.409867,0.065897,-0.144999,8.398745,0.422019,9.217107,9.181118,2.055650,0.305694,3.943091,-6.936946,-6.590663,6.724009,-0.231544,-1.215016,-5.295217,-0.822349,1.339455,-7.677644,-0.905037,5.002345,3.682215,8.609912,-3.442465,1.544481,-9.391342,-6.125296,-7.518230,0.643619,-3.866818,-1.600974,-7.750957,-8.664967,-4.315051,-6.737204,-5.239763,-5.761335,-1.430439,-6.014523,-2.885234,-4.549221,6.086640,-3.397179,-2.665430,4.479370,3.647163,-9.292049,-2.196073,1.843241,4.995976,-0.969396,-6.177245,2.241834,-6.990177,3.854137,-9.662285,6.672976,-8.092534,2.012991,9.248901,4.657064,1.603062,-7.401613,-1.142869,-1.836489,0.397795,4.969947,5.298276,5.986349,-8.784257,-6.201837,-9.070615,7.700712,8.267226,-1.188570,8.112535,-8.375845,9.300202,-2.018856,-4.813400,0.749025,5.685824,8.202509,6.595927,-3.266003,3.122637,-3.200683,0.981127,3.383189,4.785734,5.509339,8.868471,3.316419,8.192782,4.390108,-9.049276], dtype = "float64")#candidate|5681|(1620,)|const|float64
const_5682 = relay.const([-0.702348,1.594493,0.994907,2.024782,7.750743,0.616422,-7.366412,-1.450554,7.350516,4.856889,-7.170237,-4.124314,-1.417373,-2.339327,1.569964,4.701091,-6.835773,-2.489717,1.717064,-0.008277,-0.118355,7.382194,-9.219022,8.058103,-6.390691,-9.277123,3.894307,-8.968388,5.636713,0.290925,-7.948646,-6.506233,-7.754374,-1.153381,-9.008940,-6.166171,-1.102269,5.114259,2.511318,-8.769090,4.427743,-7.317926,-1.721442,5.653573,9.089526,-8.325463,2.783880,-4.731092,5.146117,4.847275,7.630888,4.717426,-0.039358,-1.564407,2.599773,1.966600,8.483385,7.008756,-7.147243,7.007100,8.196657,4.784629,-6.160539,-7.383963,2.150953,-9.796614,9.118592,-9.986073,-4.864958,8.012289,-1.827697,4.783849,-8.741996,0.964846,0.797779,-3.369602,-9.538023,0.174329,-1.259477,-6.269106,4.606803,-7.673080,-3.808101,-0.459426,-9.782653,-8.774788,-8.600081,-5.440504,-8.472037,3.565149,8.327678,1.434680,-2.312777,-9.727438,-5.578591,-8.470362,5.011489,9.085733,8.955120,7.229340,1.714541,-6.153417,8.667432,5.337210], dtype = "float32")#candidate|5682|(104,)|const|float32
var_5683 = relay.var("var_5683", dtype = "uint64", shape = ())#candidate|5683|()|var|uint64
call_5680 = relay.TupleGetItem(func_1353_call(relay.reshape(const_5681.astype('float64'), [9, 12, 15]), relay.reshape(const_5682.astype('float32'), [104,]), relay.reshape(var_5683.astype('uint64'), []), ), 2)
call_5684 = relay.TupleGetItem(func_1358_call(relay.reshape(const_5681.astype('float64'), [9, 12, 15]), relay.reshape(const_5682.astype('float32'), [104,]), relay.reshape(var_5683.astype('uint64'), []), ), 2)
func_2439_call = mod.get_global_var('func_2439')
func_2441_call = mutated_mod.get_global_var('func_2441')
const_5689 = relay.const([4.013075,8.133673,7.166206,6.004861,8.502697,0.864787,5.025901,3.397864,1.680429,-3.276854,3.359260,0.284843,4.054760,3.007346,2.407966,2.297794,-0.196478,6.794895,-5.831709,-8.985216,-0.496947,8.492513,5.359206,7.275114,-3.993338,7.561149,7.343495,-8.682596,-0.623076,8.050289,-9.813757,-2.212952,-0.811227,-4.065045,4.317306,-4.688192,0.164399,0.520072,2.451281,9.574281,-1.363243,7.740526,8.097231,-9.484121,-8.225692,-5.652147,-9.839001,2.360563,-2.742311,-8.081544,-2.666778,-8.985407,-2.287456,-4.974609,-7.755986,9.558016,8.309152,-6.782565,8.250957,-7.344632,9.926650,-2.220290,-3.597646,-7.591249,-2.106098,-7.544157,7.799241,-3.529298,-6.354091,2.261388,-5.055133,7.168686,-1.223068,3.074250,1.209306,1.918703,-7.660604,-9.871938,5.911899,1.396696,1.892319,-5.960655,-9.036370,0.077487,2.097131,1.256080,9.142682,7.545281,5.088826,8.136526,0.912649,3.006028,1.371409,-9.409874,-2.159819,-3.648964,5.474709,-3.006852,2.403807,-0.043798,0.976186,-3.261061,-1.501142,-4.109846,-3.939481,-3.862860,-3.041806,9.292337,-5.953869,-2.643024,-7.034681,-8.395027,7.870048,8.541990,-8.321152,9.869028,-0.918624,3.083773,-1.291935,-0.931418,8.115061,-9.412418,-1.459936,4.404662,4.771719,0.698311,-0.799801,6.817080,-6.720790,-1.373774,-9.546365,-6.732375,-9.675999,4.831154,4.343543,5.172746,1.918976,-2.261541,-2.075927,-6.727653,8.283902,7.127978,3.318588,1.234257,1.439309,1.634395,-6.305991,-8.560871,9.999371,4.383830,1.638633,0.666579,-8.701187,-4.883284,-4.127738,-4.994822,-2.252869,3.968724,-5.289565,-6.251728,3.050190,5.253169,9.220181,-5.873790,4.206207,-3.988674,-7.870316,6.242052,3.816614,1.186596,-1.736697,-3.706772,3.510288,1.028343,-8.819171,-3.102672,2.524072,8.784946,2.368275,2.075980,3.668370,-6.365661,2.821826,-4.437694,0.980441,-9.020028,4.341888,8.578772,5.350310,-9.342575,-8.828134,0.898638,-5.071161,-7.338308,-7.850779,4.895108,9.277867,4.484916,4.124538,-7.319372,-0.495282,6.118899,3.971752,-4.586766,6.237682,-9.175558,2.758614,3.381839,1.492776,-7.040101,0.197302,4.582405,2.481429,2.156203,6.892978,9.390048,6.508926,3.939803,8.940600,5.430183,1.270991,-3.102313,4.545065,-9.349367,-2.212295,-6.401225,-6.069673,-5.648349,-4.799851,2.792399,5.320229,7.322211,5.672289,5.049619,5.414662,0.120572,1.658112,3.535502,6.269938,4.976886,-2.866116,7.350429,9.970166,-3.495671,7.312674,0.604354,1.341837,4.455158,-0.110010,2.701731,3.924916,-8.243378,0.076725,6.986502,2.176738,-2.566570,-7.134384,0.271902,3.112753,-0.656019,4.913939,-8.454586,-6.341522,8.994108,-7.639462,-9.553961,8.520272,-9.970207,9.886262,7.202798,-5.610236,-2.274667,7.805373,6.322424,-2.329343,9.736947,1.220445,-8.025257,-6.886488,-6.781148,-5.969480,-5.126679,1.694669,-4.355779,7.054243,-6.089766,4.122090,-7.327499,-5.307643,-8.219257,0.826594,-2.434125,1.965271,9.097341,-8.002965,-4.396421,-8.406441,-4.398665,-4.041112,-9.744943,-8.925268,0.389681,-1.540967,-2.991906,6.003889,2.283292,-8.918026,-2.381495,-6.933322,1.656121,2.264129,6.859110,3.055631,-3.995840,9.873622,9.494768,9.205584,5.370242,-2.384032,-1.530215,-5.078400,6.082537,9.574515,-8.616422,6.671025,-5.513774,-6.591439,-4.139885,1.356789,4.499669,-6.010124,-6.980429,5.581114,5.551113,1.471476,-8.672789,2.509294,-6.575657,4.547037,-2.333558,3.610101,0.439825,-8.950688,6.092989,-2.432215,-6.663184,5.797016,-1.010783,2.589780,-2.686514,3.221356,-3.042443,-6.466900,5.655738,-9.237408,-7.671659,-7.782419,4.074499,-2.488734,-9.433065,6.295469,8.430297,6.856825,0.102367,3.797113,3.230155,-7.973038,4.473223,6.775561,-3.518994,-2.985342,6.109925,9.266702,5.225893,4.092638,-7.798256,3.566807,1.836814,-1.362158,7.244881,-3.540100,-3.048245,-4.355996,-4.120510,7.444643,4.965263,4.234543,-3.798900,0.221338,-1.014287,-6.462467,3.742748,-7.292912,-4.950670,-3.702227,-5.266477,8.017270,1.429691,-7.130732,0.045978,5.143826,1.159101,9.639168,1.638387,-3.445612,4.382092,-9.934406,-8.174018,2.816613,9.712108,-2.744235,-3.284285,7.519914,3.836473,4.563141,1.056488,-0.557760,-7.750395,-7.630190,-8.554322,4.782334,4.750414,2.721083,3.795307,5.587488,-7.380999,-2.746301,4.160309,-3.899202,-0.285677,6.432653,-2.957836,-3.733887,4.431169,-1.858733,0.631488,8.053414,-7.231995,-5.071872,8.464191,-5.658671,2.340218,-3.544071,-9.001270,-5.971425,8.670931,-3.414249,8.185267,-3.351867,-1.910807,-2.058537,-9.602009,-2.031692,-3.364972,-4.183234,-6.969739,1.523756,-9.935301,-2.763213,7.938834,3.240871,-6.550268,-2.019815,-5.677260,-6.888573,-1.790918,3.994538,-4.804061,4.343981,-0.496757,-4.978690,-6.647654,7.156619,-6.452888,-7.359167,-8.773747,-1.111904,2.283633,-3.781582,3.289108,-5.546743,8.042313,-3.760283,-6.745679,9.527991,-4.231825,9.913999,3.187912,5.646313,0.678158,3.831194,8.248825,-7.510785,3.252797,-3.494865,-0.739240,-7.048996,-6.133954,4.442948,-5.489958,-3.105292,8.313698,3.267734,-5.622719,-4.756393,-0.018292,2.608569,4.743391,3.563151,-0.784898,6.195423,-8.124766,-8.223814,-1.501055,6.752541,-3.131828,0.806571,-8.487206,2.452466,9.538222,-8.227890,6.041673,8.442813,8.641662,7.052481,7.345308,-8.502913,-5.586056,-5.739330,1.849825,6.977426,7.086496,9.165907,-0.247018,-4.184448,-9.882232,6.686354,-3.976967,-8.341336,4.269652,2.626041,-9.680283,5.015573,0.887397,2.719838,2.842434,-1.621525,-9.321216,-2.743362,-9.003562,-1.529234,3.341898,0.090721,2.559789,-5.102758,7.639979,3.214907,6.080885,4.428360,-9.489298,4.906371,6.070352,3.218689,6.013908,-4.860949,-4.184993,-1.873835,7.658010,-9.584395,4.886568,8.350515,-9.139930,-6.266997,2.163512,-7.455491,8.762960], dtype = "float64")#candidate|5689|(576,)|const|float64
call_5688 = relay.TupleGetItem(func_2439_call(relay.reshape(const_5689.astype('float64'), [8, 12, 6])), 2)
call_5690 = relay.TupleGetItem(func_2441_call(relay.reshape(const_5689.astype('float64'), [8, 12, 6])), 2)
bop_5695 = relay.greater_equal(uop_5657.astype('bool'), relay.reshape(const_5663.astype('bool'), relay.shape_of(uop_5657))) # shape=(4, 10, 12)
output = relay.Tuple([bop_5675,call_5680,const_5681,const_5682,var_5683,call_5688,const_5689,bop_5695,])
output2 = relay.Tuple([bop_5675,call_5684,const_5681,const_5682,var_5683,call_5690,const_5689,bop_5695,])
func_5698 = relay.Function([var_5646,var_5647,var_5683,], output)
mod['func_5698'] = func_5698
mod = relay.transform.InferType()(mod)
mutated_mod['func_5698'] = func_5698
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5698_call = mutated_mod.get_global_var('func_5698')
var_5700 = relay.var("var_5700", dtype = "uint64", shape = (4, 10, 12))#candidate|5700|(4, 10, 12)|var|uint64
var_5701 = relay.var("var_5701", dtype = "uint64", shape = (4, 10, 12))#candidate|5701|(4, 10, 12)|var|uint64
var_5702 = relay.var("var_5702", dtype = "uint64", shape = ())#candidate|5702|()|var|uint64
call_5699 = func_5698_call(var_5700,var_5701,var_5702,)
output = call_5699
func_5703 = relay.Function([var_5700,var_5701,var_5702,], output)
mutated_mod['func_5703'] = func_5703
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4834_call = mod.get_global_var('func_4834')
func_4836_call = mutated_mod.get_global_var('func_4836')
call_5750 = relay.TupleGetItem(func_4834_call(), 2)
call_5751 = relay.TupleGetItem(func_4836_call(), 2)
output = call_5750
output2 = call_5751
func_5756 = relay.Function([], output)
mod['func_5756'] = func_5756
mod = relay.transform.InferType()(mod)
mutated_mod['func_5756'] = func_5756
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5756_call = mutated_mod.get_global_var('func_5756')
call_5757 = func_5756_call()
output = call_5757
func_5758 = relay.Function([], output)
mutated_mod['func_5758'] = func_5758
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3989_call = mod.get_global_var('func_3989')
func_3990_call = mutated_mod.get_global_var('func_3990')
call_5829 = relay.TupleGetItem(func_3989_call(), 0)
call_5830 = relay.TupleGetItem(func_3990_call(), 0)
output = relay.Tuple([call_5829,])
output2 = relay.Tuple([call_5830,])
func_5840 = relay.Function([], output)
mod['func_5840'] = func_5840
mod = relay.transform.InferType()(mod)
mutated_mod['func_5840'] = func_5840
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5840_call = mutated_mod.get_global_var('func_5840')
call_5841 = func_5840_call()
output = call_5841
func_5842 = relay.Function([], output)
mutated_mod['func_5842'] = func_5842
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5879 = relay.var("var_5879", dtype = "uint64", shape = (12, 6, 6))#candidate|5879|(12, 6, 6)|var|uint64
var_5880 = relay.var("var_5880", dtype = "uint64", shape = (12, 6, 6))#candidate|5880|(12, 6, 6)|var|uint64
bop_5881 = relay.right_shift(var_5879.astype('uint64'), relay.reshape(var_5880.astype('uint64'), relay.shape_of(var_5879))) # shape=(12, 6, 6)
bop_5884 = relay.maximum(bop_5881.astype('uint16'), relay.reshape(var_5879.astype('uint16'), relay.shape_of(bop_5881))) # shape=(12, 6, 6)
bop_5890 = relay.subtract(var_5880.astype('uint16'), relay.reshape(var_5879.astype('uint16'), relay.shape_of(var_5880))) # shape=(12, 6, 6)
uop_5903 = relay.acosh(var_5879.astype('float32')) # shape=(12, 6, 6)
output = relay.Tuple([bop_5884,bop_5890,uop_5903,])
output2 = relay.Tuple([bop_5884,bop_5890,uop_5903,])
func_5908 = relay.Function([var_5879,var_5880,], output)
mod['func_5908'] = func_5908
mod = relay.transform.InferType()(mod)
mutated_mod['func_5908'] = func_5908
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5908_call = mutated_mod.get_global_var('func_5908')
var_5910 = relay.var("var_5910", dtype = "uint64", shape = (12, 6, 6))#candidate|5910|(12, 6, 6)|var|uint64
var_5911 = relay.var("var_5911", dtype = "uint64", shape = (12, 6, 6))#candidate|5911|(12, 6, 6)|var|uint64
call_5909 = func_5908_call(var_5910,var_5911,)
output = call_5909
func_5912 = relay.Function([var_5910,var_5911,], output)
mutated_mod['func_5912'] = func_5912
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2240_call = mod.get_global_var('func_2240')
func_2241_call = mutated_mod.get_global_var('func_2241')
call_5941 = relay.TupleGetItem(func_2240_call(), 1)
call_5942 = relay.TupleGetItem(func_2241_call(), 1)
uop_5956 = relay.acos(call_5941.astype('float64')) # shape=(52, 2)
uop_5958 = relay.acos(call_5942.astype('float64')) # shape=(52, 2)
uop_5964 = relay.rsqrt(uop_5956.astype('float32')) # shape=(52, 2)
uop_5966 = relay.rsqrt(uop_5958.astype('float32')) # shape=(52, 2)
output = relay.Tuple([uop_5964,])
output2 = relay.Tuple([uop_5966,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_35 = relay.var("var_35", dtype = "uint16", shape = (6, 5, 13))#candidate|35|(6, 5, 13)|var|uint16
var_36 = relay.var("var_36", dtype = "uint16", shape = (6, 5, 13))#candidate|36|(6, 5, 13)|var|uint16
bop_37 = relay.less(var_35.astype('bool'), relay.reshape(var_36.astype('bool'), relay.shape_of(var_35))) # shape=(6, 5, 13)
output = bop_37
output2 = bop_37
func_47 = relay.Function([var_35,var_36,], output)
mod['func_47'] = func_47
mod = relay.transform.InferType()(mod)
var_48 = relay.var("var_48", dtype = "uint16", shape = (6, 5, 13))#candidate|48|(6, 5, 13)|var|uint16
var_49 = relay.var("var_49", dtype = "uint16", shape = (6, 5, 13))#candidate|49|(6, 5, 13)|var|uint16
output = func_47(var_48,var_49,)
func_50 = relay.Function([var_48,var_49,], output)
mutated_mod['func_50'] = func_50
mutated_mod = relay.transform.InferType()(mutated_mod)
var_311 = relay.var("var_311", dtype = "float64", shape = (16, 3, 8))#candidate|311|(16, 3, 8)|var|float64
var_312 = relay.var("var_312", dtype = "float64", shape = (16, 3, 8))#candidate|312|(16, 3, 8)|var|float64
bop_313 = relay.floor_divide(var_311.astype('float64'), relay.reshape(var_312.astype('float64'), relay.shape_of(var_311))) # shape=(16, 3, 8)
func_47_call = mod.get_global_var('func_47')
func_50_call = mutated_mod.get_global_var('func_50')
const_321 = relay.const([8,-3,4,2,2,9,-2,3,-1,-5,1,8,-3,-2,-5,-2,-8,3,6,10,-1,-4,-1,7,5,-8,-3,-4,7,9,2,6,4,-4,5,8,6,-10,-3,8,9,4,-2,-8,4,-2,-9,-6,8,-3,5,-10,7,7,-7,8,1,-9,2,-4,7,1,-4,8,9,8,7,5,10,-4,7,4,-5,10,2,-2,-10,6,-3,10,8,-6,-6,8,10,-2,3,-4,-8,-6,10,3,4,-8,4,7,-3,-6,1,-2,6,-10,9,9,-10,-2,-4,2,2,3,5,-7,-2,-7,7,-7,-5,-5,-1,-4,1,1,8,-3,1,-6,7,-7,6,-5,-3,-7,-9,3,-7,1,2,3,-3,-2,-2,3,4,10,3,-3,10,-5,2,-9,6,7,9,-9,6,-9,4,10,3,7,7,-2,-2,6,-8,3,4,-1,-9,9,6,4,1,5,5,-10,4,9,-1,-9,1,-3,3,-2,-8,8,1,1,5,6,10,4,9,1,10,9,4,-10,9,9,-3,1,-8,-5,-10,3,-8,5,2,-7,6,4,9,-6,6,-8,-10,-2,-5,1,10,5,-3,-5,-6,5,-8,1,5,-10,3,-1,-10,1,-3,-1,8,-3,8,-6,-8,-6,4,-8,5,1,5,-10,6,-8,-6,4,-5,-5,-2,-7,3,-1,-1,5,4,-1,-7,-5,2,4,4,-10,-4,4,-7,10,-4,-5,7,-10,-6,-3,-10,8,4,8,1,-9,-6,-4,-3,2,-3,-4,-7,-3,-3,-7,-7,-5,-8,-8,-4,7,9,-2,4,-2,3,7,-2,4,-1,10,-4,6,1,-5,1,4,1,-4,2,-2,-4,4,3,3,6,9,-10,4,-1,6,-10,1,6,6,1,-2,9,3,1,4,-9,9,-10,-1,-3,2,-7,5,-8,3,9,6,-9,-9,-5,10,-8,5,4,-8,3,8,-2,-5,-4,-2,2,-2,-9,3,-6,1,-2,3,-2,-2,-2,5,5,-6,8,3,-10,-3,8,6,-1,-1,3,10], dtype = "uint16")#candidate|321|(390,)|const|uint16
call_320 = func_47_call(relay.reshape(const_321.astype('uint16'), [6, 5, 13]), relay.reshape(const_321.astype('uint16'), [6, 5, 13]), )
call_322 = func_47_call(relay.reshape(const_321.astype('uint16'), [6, 5, 13]), relay.reshape(const_321.astype('uint16'), [6, 5, 13]), )
func_47_call = mod.get_global_var('func_47')
func_50_call = mutated_mod.get_global_var('func_50')
call_328 = func_47_call(relay.reshape(call_320.astype('uint16'), [6, 5, 13]), relay.reshape(call_320.astype('uint16'), [6, 5, 13]), )
call_329 = func_47_call(relay.reshape(call_320.astype('uint16'), [6, 5, 13]), relay.reshape(call_320.astype('uint16'), [6, 5, 13]), )
output = relay.Tuple([bop_313,call_320,const_321,call_328,])
output2 = relay.Tuple([bop_313,call_322,const_321,call_329,])
func_335 = relay.Function([var_311,var_312,], output)
mod['func_335'] = func_335
mod = relay.transform.InferType()(mod)
mutated_mod['func_335'] = func_335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_335_call = mutated_mod.get_global_var('func_335')
var_337 = relay.var("var_337", dtype = "float64", shape = (16, 3, 8))#candidate|337|(16, 3, 8)|var|float64
var_338 = relay.var("var_338", dtype = "float64", shape = (16, 3, 8))#candidate|338|(16, 3, 8)|var|float64
call_336 = func_335_call(var_337,var_338,)
output = call_336
func_339 = relay.Function([var_337,var_338,], output)
mutated_mod['func_339'] = func_339
mutated_mod = relay.transform.InferType()(mutated_mod)
var_416 = relay.var("var_416", dtype = "int32", shape = (10, 15, 5))#candidate|416|(10, 15, 5)|var|int32
var_417 = relay.var("var_417", dtype = "int32", shape = (10, 15, 5))#candidate|417|(10, 15, 5)|var|int32
bop_418 = relay.greater(var_416.astype('bool'), relay.reshape(var_417.astype('bool'), relay.shape_of(var_416))) # shape=(10, 15, 5)
output = bop_418
output2 = bop_418
func_425 = relay.Function([var_416,var_417,], output)
mod['func_425'] = func_425
mod = relay.transform.InferType()(mod)
mutated_mod['func_425'] = func_425
mutated_mod = relay.transform.InferType()(mutated_mod)
func_425_call = mutated_mod.get_global_var('func_425')
var_427 = relay.var("var_427", dtype = "int32", shape = (10, 15, 5))#candidate|427|(10, 15, 5)|var|int32
var_428 = relay.var("var_428", dtype = "int32", shape = (10, 15, 5))#candidate|428|(10, 15, 5)|var|int32
call_426 = func_425_call(var_427,var_428,)
output = call_426
func_429 = relay.Function([var_427,var_428,], output)
mutated_mod['func_429'] = func_429
mutated_mod = relay.transform.InferType()(mutated_mod)
var_649 = relay.var("var_649", dtype = "float64", shape = (4, 14, 11))#candidate|649|(4, 14, 11)|var|float64
uop_650 = relay.cosh(var_649.astype('float64')) # shape=(4, 14, 11)
uop_652 = relay.atan(var_649.astype('float32')) # shape=(4, 14, 11)
bop_654 = relay.logical_and(uop_650.astype('bool'), relay.reshape(uop_652.astype('bool'), relay.shape_of(uop_650))) # shape=(4, 14, 11)
output = relay.Tuple([bop_654,])
output2 = relay.Tuple([bop_654,])
func_659 = relay.Function([var_649,], output)
mod['func_659'] = func_659
mod = relay.transform.InferType()(mod)
var_660 = relay.var("var_660", dtype = "float64", shape = (4, 14, 11))#candidate|660|(4, 14, 11)|var|float64
output = func_659(var_660)
func_661 = relay.Function([var_660], output)
mutated_mod['func_661'] = func_661
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1197 = relay.var("var_1197", dtype = "uint16", shape = (10, 5, 13))#candidate|1197|(10, 5, 13)|var|uint16
const_1198 = relay.const([[[9,-4,-8,4,-5,7,4,-5,1,-4,6,-3,-2],[-3,5,2,9,-6,7,3,3,-1,5,9,10,1],[9,-10,5,5,-7,-5,-5,3,5,3,5,-6,1],[-6,-9,7,-1,8,-10,7,9,6,-6,-3,5,8],[-1,-10,-10,-5,3,6,9,-1,6,-8,1,9,5]],[[8,-10,-9,1,-5,-6,-1,-10,-3,2,10,4,-2],[-4,-4,-5,-8,-9,7,-6,4,-1,-3,3,-10,1],[-2,9,-10,7,3,-6,-8,-8,8,5,8,-6,-7],[-6,-3,-10,-2,1,4,-5,1,-8,8,-3,-1,-8],[-4,-9,-5,-9,-4,5,8,9,5,8,7,6,5]],[[-4,8,7,-8,3,3,-2,-3,-4,-3,2,7,6],[8,-9,-9,-1,-7,-9,5,8,5,5,-7,8,2],[-9,-10,4,5,2,8,-1,2,-10,3,4,-2,-6],[10,10,-4,4,2,-5,-3,2,-2,8,4,-8,-8],[5,-3,-8,4,6,6,3,8,-6,-5,-2,-3,9]],[[-10,4,-1,-9,-9,9,6,-3,-5,-2,-2,-4,9],[4,-8,-9,1,-8,2,9,4,-7,3,-5,-6,-9],[-9,5,-1,-10,-3,-7,4,-9,1,-8,-5,-7,4],[-5,1,9,9,10,7,8,10,-4,-1,1,-10,10],[5,-4,-1,9,4,-4,6,-4,-3,-10,-10,-9,9]],[[4,8,-5,-3,-2,-9,-6,1,-10,5,7,-8,3],[3,-10,2,2,-10,-5,-7,7,9,10,5,-6,-4],[10,-2,-4,5,-7,-2,8,-5,4,9,-9,7,8],[-9,-4,-7,-9,-9,4,-6,2,-10,-9,3,-9,9],[1,-7,-9,3,-3,2,-1,-2,-3,-8,8,5,-6]],[[-5,1,3,9,2,10,5,-8,-3,6,-8,8,5],[-5,-5,9,6,-1,5,-2,-10,-2,6,-2,1,-6],[8,-6,-10,-5,1,-5,5,9,6,7,-4,2,1],[10,-3,-2,2,6,-8,-9,7,10,-7,-2,-10,10],[-7,7,6,1,-4,2,8,8,-9,5,-8,-7,-3]],[[10,9,-1,-4,-6,4,2,8,-1,-2,-2,-5,-8],[-3,-8,8,-2,-9,5,1,-6,7,-2,3,-3,4],[7,-4,2,4,2,1,-6,6,6,3,4,-1,6],[2,9,5,-5,5,-6,1,-8,3,5,-7,9,-4],[-1,9,-10,-7,7,7,2,-3,-10,6,9,3,-1]],[[6,10,4,6,9,2,-5,9,-3,5,-9,10,-10],[-7,10,3,1,-5,-7,6,-7,3,9,5,4,6],[2,3,5,-8,9,1,7,4,-9,1,9,9,9],[-10,5,-8,-1,10,2,-1,1,2,-1,3,7,7],[9,3,-1,1,-8,4,2,7,4,-5,-1,-3,3]],[[4,10,-5,-9,-7,1,8,-8,1,6,4,-6,-3],[7,-9,1,-10,7,10,-4,-8,-8,6,-1,-8,5],[-7,10,-9,-7,7,4,-9,-3,-8,-9,-1,5,2],[6,-2,-9,-3,-2,-8,-3,-9,4,-7,-8,-3,-1],[3,-4,3,3,5,6,-5,-10,-7,9,9,3,-2]],[[1,9,2,10,-5,7,8,-1,10,5,10,5,8],[-5,-10,-6,-10,4,7,7,-9,-1,6,3,10,8],[-10,9,6,10,9,-8,-1,1,8,-1,4,-4,-5],[-10,7,-5,10,-6,8,-4,-2,-7,5,-2,-8,8],[6,-6,-2,-6,-4,-5,-6,3,-7,-2,7,3,-9]]], dtype = "uint16")#candidate|1198|(10, 5, 13)|const|uint16
bop_1199 = relay.less_equal(var_1197.astype('bool'), relay.reshape(const_1198.astype('bool'), relay.shape_of(var_1197))) # shape=(10, 5, 13)
output = relay.Tuple([bop_1199,])
output2 = relay.Tuple([bop_1199,])
func_1210 = relay.Function([var_1197,], output)
mod['func_1210'] = func_1210
mod = relay.transform.InferType()(mod)
mutated_mod['func_1210'] = func_1210
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1211 = relay.var("var_1211", dtype = "uint16", shape = (10, 5, 13))#candidate|1211|(10, 5, 13)|var|uint16
func_1210_call = mutated_mod.get_global_var('func_1210')
call_1212 = func_1210_call(var_1211)
output = call_1212
func_1213 = relay.Function([var_1211], output)
mutated_mod['func_1213'] = func_1213
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1467 = relay.var("var_1467", dtype = "uint16", shape = ())#candidate|1467|()|var|uint16
var_1468 = relay.var("var_1468", dtype = "uint16", shape = (11, 13, 11))#candidate|1468|(11, 13, 11)|var|uint16
bop_1469 = relay.equal(var_1467.astype('bool'), var_1468.astype('bool')) # shape=(11, 13, 11)
output = bop_1469
output2 = bop_1469
func_1476 = relay.Function([var_1467,var_1468,], output)
mod['func_1476'] = func_1476
mod = relay.transform.InferType()(mod)
mutated_mod['func_1476'] = func_1476
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1476_call = mutated_mod.get_global_var('func_1476')
var_1478 = relay.var("var_1478", dtype = "uint16", shape = ())#candidate|1478|()|var|uint16
var_1479 = relay.var("var_1479", dtype = "uint16", shape = (11, 13, 11))#candidate|1479|(11, 13, 11)|var|uint16
call_1477 = func_1476_call(var_1478,var_1479,)
output = call_1477
func_1480 = relay.Function([var_1478,var_1479,], output)
mutated_mod['func_1480'] = func_1480
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1586 = relay.var("var_1586", dtype = "float32", shape = (4, 2, 9))#candidate|1586|(4, 2, 9)|var|float32
uop_1587 = relay.tan(var_1586.astype('float32')) # shape=(4, 2, 9)
var_1598 = relay.var("var_1598", dtype = "float32", shape = (4, 2, 9))#candidate|1598|(4, 2, 9)|var|float32
bop_1599 = relay.logical_or(uop_1587.astype('bool'), relay.reshape(var_1598.astype('bool'), relay.shape_of(uop_1587))) # shape=(4, 2, 9)
func_1476_call = mod.get_global_var('func_1476')
func_1480_call = mutated_mod.get_global_var('func_1480')
var_1610 = relay.var("var_1610", dtype = "uint16", shape = ())#candidate|1610|()|var|uint16
const_1611 = relay.const([4,-6,-3,4,-7,3,7,5,5,-5,-6,-3,1,-4,-5,-9,-10,7,-1,-5,9,-6,-9,-8,10,9,4,-2,8,-3,4,-5,7,10,-5,6,2,-10,-4,9,-4,1,-2,4,-10,-4,-9,9,-3,1,3,-3,1,7,-4,3,-5,-5,-7,7,-3,2,-2,-7,-1,4,-10,-10,-10,8,5,9,6,-9,10,2,10,9,-4,-8,7,-10,7,-7,1,9,9,-8,-2,1,6,9,-7,8,5,8,-8,-8,-10,-1,4,-9,-10,1,-5,-7,-6,-6,5,4,-2,1,-1,-4,-7,4,-7,-6,9,2,-2,6,5,8,-8,9,5,9,-10,8,9,3,-4,-4,8,8,3,5,8,8,-8,-7,9,-10,8,-8,-2,3,-10,1,-3,8,-5,-5,-8,10,-2,-10,10,9,2,6,-10,9,8,-10,1,6,-2,-8,6,10,-4,8,-2,3,-8,-7,-10,10,8,-6,9,6,6,4,3,-1,-4,-10,-8,2,4,4,-8,1,-4,7,-2,7,-9,10,-6,-9,-10,9,-4,3,10,3,2,4,-2,1,3,1,-10,-4,-4,5,1,-3,6,-2,-5,-4,10,5,8,5,-6,3,-7,-10,-9,-4,-10,-3,5,1,-2,-9,3,-4,1,-6,6,-1,-8,4,6,6,-7,2,-6,-3,10,-3,-5,-5,8,3,3,-7,-3,-6,2,-6,-1,-2,3,-7,7,-5,-9,-9,4,-1,6,-5,2,9,-5,3,-3,-5,2,9,-6,-2,-7,-1,4,9,3,-10,-7,-9,6,-8,-8,-7,-7,-10,1,7,2,2,-4,-8,6,2,-7,-8,2,1,-1,10,3,2,-1,-5,-8,1,-7,-9,-4,-8,9,-3,-2,-2,-1,2,2,1,2,6,-2,-4,-5,5,3,2,9,-4,8,-5,-8,-6,-2,4,2,6,7,6,-4,-3,4,10,1,-4,1,1,-8,-10,3,-4,3,2,3,-4,-10,-3,-4,-6,6,5,1,7,-4,-8,10,-3,-6,-5,-4,-4,-7,9,-10,8,6,5,3,5,-10,2,6,5,2,-1,-10,-1,3,-10,-4,1,6,-7,2,4,-6,-4,-6,6,-10,4,-3,-8,-4,9,1,-10,-10,5,9,-3,-8,9,5,-1,4,6,-10,-2,-5,2,1,-2,-9,2,-8,2,2,-1,-9,-4,8,10,4,-2,-3,6,8,-6,5,-4,-4,1,10,-3,-4,1,8,-8,5,3,6,-3,-7,9,8,-7,10,8,-9,8,-9,3,-4,10,-3,-7,-4,3,-3,5,8,4,9,-7,-5,2,-7,1,-6,-9,6,9,-8,1,-7,-3,-8,10,-10,-6,3,9,2,1,3,-8,8,8,2,-7,4,1,-10,-9,-9,7,2,-3,-8,-4,-4,9,-10,8,-6,10,-7,-2,-1,9,-6,5,2,4,-10,-2,-1,-6,8,2,9,6,2,-4,10,6,-10,6,8,-4,6,-5,-7,-7,-3,10,2,9,-3,10,6,9,-6,-8,5,-3,7,8,-8,-8,-8,4,-4,8,6,9,6,8,3,6,-9,10,6,-10,7,-5,6,-6,2,8,-2,2,6,-9,9,8,-4,-3,-6,-7,9,-7,1,5,-7,-5,-9,8,8,-4,-1,-4,1,-7,8,-2,-6,-4,-4,4,4,-2,-6,-10,-6,-3,9,3,-7,-8,6,4,1,-1,-10,8,-4,-9,-9,-7,5,5,1,7,10,-3,-7,8,-6,5,-4,10,-3,8,-9,-8,-9,10,3,-8,-5,1,7,-2,-10,8,9,-4,6,6,-9,10,9,7,-9,5,5,6,5,4,-4,-1,-8,-7,7,8,8,-3,9,-9,7,10,9,-4,3,-2,-10,-2,-8,-3,-2,10,-10,-9,4,-7,3,3,-5,-8,6,-7,-5,-5,10,7,-2,4,-9,-2,2,-4,-9,6,-5,-4,6,-5,2,3,1,-6,4,-4,-2,8,8,-8,10,-10,-8,-3,-6,5,-2,10,8,-4,-3,-7,-7,-10,8,1,-1,10,3,-4,-6,7,-9,1,10,-2,-8,-1,-6,9,8,-2,10,8,7,-4,-3,3,7,-9,-1,-1,10,3,4,9,-3,1,-3,9,-3,7,6,-5,-5,-2,-5,-5,-9,-2,10,3,4,-7,4,-9,10,2,7,1,-2,-8,9,4,10,9,7,5,7,-10,-9,8,6,-7,7,-5,-4,8,6,1,7,-8,-3,8,5,1,-7,-3,-10,8,-2,-8,5,10,-9,-7,-1,3,-8,-4,-8,-6,5,-10,2,2,-10,-10,10,4,1,8,-6,7,-3,-6,-7,8,2,9,-5,-9,5,9,9,5,-7,-3,-5,7,-1,-10,5,-4,-7,2,6,-8,1,4,-1,10,-3,2,-1,-7,4,-5,-7,-8,2,8,-1,8,-4,-2,3,-4,4,4,5,-2,-9,7,-3,-10,-5,2,-5,-8,5,5,-3,-4,-2,-6,10,-5,-2,2,-5,2,-3,6,7,6,-7,9,9,-8,-2,8,-10,-8,3,-2,4,-10,10,-4,1,8,2,-7,3,-2,10,6,10,4,5,4,10,8,-2,-7,-6,-1,4,-9,-3,-1,-10,-5,-10,6,7,-9,-5,-8,-1,10,-2,6,-8,5,6,6,-3,-6,10,-2,-3,-3,-8,-3,-6,6,3,5,9,-5,-8,-10,-2,5,10,10,-8,10,-3,-5,-8,-8,5,4,-5,-10,10,3,-6,-5,-8,10,7,10,-4,1,-7,5,-4,9,-10,2,9,-3,6,3,-4,-7,-2,-2,-5,-2,-4,6,6,9,4,-5,9,-8,-7,-8,-2,1,-6,-4,-8,3,3,-1,-7,-4,-4,-4,8,-7,-10,7,1,-8,3,-10,-6,4,-6,-8,-7,-4,5,1,7,-10,4,1,-5,4,10,-10,9,-8,9,6,2,7,9,1,-8,4,-8,7,3,3,7,4,7,9,-9,4,-8,-7,8,2,10,-8,-3,4,-8,3,-10,1,8,5,-6,9,9,2,5,-3,-2,-5,-6,2,8,9,-10,-7,-10,-6,-1,-2,-2,-8,-8,3,-2,4,-1,-3,-2,9,3,-2,2,1,4,4,8,4,4,8,8,-5,-2,10,-9,6,6,-4,6,2,1,-8,9,-8,1,-9,10,10,2,-6,8,4,-9,-4,8,-7,-3,7,-6,5,1,-6,9,4,5,-6,-1,-7,-1,-5,7,7,8,-2,-10,-4,2,-3,6,-6,-7,-4,-5,9,1,4,-8,8,6,2,6,7,6,2,-7,-2,1,5,6,1,-9,-3,-7,-5,-10,8,-3,-5,7,10,6,-10,-10,4,-8,1,-1,8,-7,2,10,-3,-7,1,-8,9,4,2,4,-8,-10,-2,5,-10,3,-2,-3,7,5,-5,-10,6,4,6,3,-2,4,3,-6,-4,6,3,2,1,-9,-10,-3,-2,4,4,-1,10,10,7,-8,-4,-8,4,-8,-5,3,7,2,2,-7,-3,1,-6,-9,-7,-5,-3,-10,10,2,-7,3,-3,-3,-10,9,1,-9,3,1,6,2,8,4,2,-5,5,2,4,-10,6,-10,-1,5,6,5,1,-9,1,-8,3,1,3,5,9,-4,7,1,4,4,-3,1,-8,2,8,-2,3,-9,7,6,9,8,-5,-4,8,-8,-8,-4,1,-8,5,-10,-3,7,-2,5,-2,-7,-5,-5,-8,-3,-1,-5,-10,3,-2,4,-3,7,-3,-7,5,-1,7,-3,-8,-1,1,3,-8,-9,-9,-6,-5,8,-3,-2,-10,-1,10,10,-10,8,9,-5,6,-5,-6,-7,-2,-8,9,5,4,4,10,1,-9,9,10,4,7,-3,2,5,-5,1,2,3,2,9,5,1,-1,-3,4,7,9,-6,1,7,6,-10,-7,-6,4,10,7,3,-2,9,6,-1,7,7,1,-4,5,-5,8,-1,7,10,-3,-2,-1,-4,8,-3,-3,2,6,10,9,4,-7,8,6,-7,-2,7,1,-2,7,3,6,3,-1,-3,-8,-6,2,8,3,-9,6,2,-7,8,8,3,7,5,-9,-6,5,-2,7,5,5,7,-9,-1,-3,-10,10,-4,1,3,-10,-9,-3,2,-10,2,-10,-9,9,-7,8,-3,1,5,9,-6,-9,3,-5,-1,-1,-10,-1,-4,-10,-3,6,-7,5,3], dtype = "uint16")#candidate|1611|(1573,)|const|uint16
call_1609 = func_1476_call(relay.reshape(var_1610.astype('uint16'), []), relay.reshape(const_1611.astype('uint16'), [11, 13, 11]), )
call_1612 = func_1476_call(relay.reshape(var_1610.astype('uint16'), []), relay.reshape(const_1611.astype('uint16'), [11, 13, 11]), )
func_47_call = mod.get_global_var('func_47')
func_50_call = mutated_mod.get_global_var('func_50')
var_1623 = relay.var("var_1623", dtype = "uint16", shape = (390,))#candidate|1623|(390,)|var|uint16
call_1622 = func_47_call(relay.reshape(var_1623.astype('uint16'), [6, 5, 13]), relay.reshape(var_1623.astype('uint16'), [6, 5, 13]), )
call_1624 = func_47_call(relay.reshape(var_1623.astype('uint16'), [6, 5, 13]), relay.reshape(var_1623.astype('uint16'), [6, 5, 13]), )
bop_1640 = relay.less_equal(uop_1587.astype('bool'), relay.reshape(bop_1599.astype('bool'), relay.shape_of(uop_1587))) # shape=(4, 2, 9)
func_47_call = mod.get_global_var('func_47')
func_50_call = mutated_mod.get_global_var('func_50')
call_1643 = func_47_call(relay.reshape(call_1622.astype('uint16'), [6, 5, 13]), relay.reshape(var_1623.astype('uint16'), [6, 5, 13]), )
call_1644 = func_47_call(relay.reshape(call_1622.astype('uint16'), [6, 5, 13]), relay.reshape(var_1623.astype('uint16'), [6, 5, 13]), )
func_1476_call = mod.get_global_var('func_1476')
func_1480_call = mutated_mod.get_global_var('func_1480')
call_1656 = func_1476_call(relay.reshape(var_1610.astype('uint16'), []), relay.reshape(call_1609.astype('uint16'), [11, 13, 11]), )
call_1657 = func_1476_call(relay.reshape(var_1610.astype('uint16'), []), relay.reshape(call_1609.astype('uint16'), [11, 13, 11]), )
bop_1658 = relay.not_equal(bop_1640.astype('bool'), relay.reshape(uop_1587.astype('bool'), relay.shape_of(bop_1640))) # shape=(4, 2, 9)
output = relay.Tuple([call_1609,var_1610,const_1611,call_1622,var_1623,call_1643,call_1656,bop_1658,])
output2 = relay.Tuple([call_1612,var_1610,const_1611,call_1624,var_1623,call_1644,call_1657,bop_1658,])
func_1665 = relay.Function([var_1586,var_1598,var_1610,var_1623,], output)
mod['func_1665'] = func_1665
mod = relay.transform.InferType()(mod)
var_1666 = relay.var("var_1666", dtype = "float32", shape = (4, 2, 9))#candidate|1666|(4, 2, 9)|var|float32
var_1667 = relay.var("var_1667", dtype = "float32", shape = (4, 2, 9))#candidate|1667|(4, 2, 9)|var|float32
var_1668 = relay.var("var_1668", dtype = "uint16", shape = ())#candidate|1668|()|var|uint16
var_1669 = relay.var("var_1669", dtype = "uint16", shape = (390,))#candidate|1669|(390,)|var|uint16
output = func_1665(var_1666,var_1667,var_1668,var_1669,)
func_1670 = relay.Function([var_1666,var_1667,var_1668,var_1669,], output)
mutated_mod['func_1670'] = func_1670
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1777 = relay.var("var_1777", dtype = "float32", shape = (7, 14, 10))#candidate|1777|(7, 14, 10)|var|float32
uop_1778 = relay.erf(var_1777.astype('float32')) # shape=(7, 14, 10)
const_1780 = relay.const([[[-3.418777,-8.721909,-2.307447,-7.565712,4.377710,6.477793,9.686812,-1.590561,-6.552606,6.397643],[9.485208,0.456787,-1.766257,-3.273378,1.254572,7.854740,-4.063396,-4.220261,-5.618381,9.216142],[-6.375355,-6.595913,8.872942,-2.596526,0.488239,6.095488,-3.525424,5.962659,0.019513,4.682116],[4.698414,3.707730,-5.357055,-1.286570,-2.491226,0.418527,-1.978987,-7.831322,-9.737991,9.531187],[7.152273,0.840470,2.875155,-2.036751,-0.968302,9.216110,-3.816268,2.664051,7.830193,-8.425799],[-3.171770,-1.120816,1.637857,-9.113385,4.495008,6.745630,-5.015980,5.891422,5.824845,-2.527425],[6.852392,5.692572,-5.125568,-0.629666,-1.173026,7.492136,-2.674265,6.188295,4.824554,-3.764349],[3.771072,5.272225,-5.856659,-1.742953,-2.079014,9.160591,-9.604042,7.705477,0.971671,-9.358709],[-2.405314,-6.130013,-1.423924,-1.925134,1.854565,-2.804775,-3.047436,-8.885499,-8.320599,-8.121155],[-7.473341,-2.636921,-1.837477,3.417409,-5.332792,0.833009,-2.246947,6.584631,1.182098,-1.152881],[-2.097137,-7.495342,-1.193794,0.869650,1.667683,0.566409,4.805615,-5.468027,0.203111,-1.700428],[-3.391011,7.820283,4.794437,9.062792,-6.622964,-4.962053,-9.029636,-9.998904,7.353094,-9.296502],[9.729915,-8.338598,1.780857,9.924619,8.563328,-6.600983,0.012876,-9.223079,9.452690,-6.183825],[5.642390,-8.855992,3.330323,-3.838257,8.869268,5.737901,-1.414103,8.238994,-0.967709,-6.298227]],[[-6.452821,2.048730,-3.476223,8.870198,3.540591,-9.695600,-9.680251,9.909717,5.977754,-6.667613],[-6.786629,8.254624,-1.621426,-7.628425,2.863634,-7.567643,-0.902262,-7.222298,0.076585,-4.625134],[2.642339,2.361062,8.619128,1.417770,-0.522879,2.797074,8.400511,8.540415,-1.819327,-9.271515],[-9.843011,3.282427,2.755599,-9.314247,9.839869,4.927392,8.512705,-5.364238,6.594581,4.933504],[-7.122777,-2.476090,9.014365,6.929197,-2.558167,-8.559612,-9.041306,3.469676,6.098841,-6.846257],[-6.738168,8.931681,-1.120427,-3.542366,0.602321,4.120846,2.586843,8.625413,0.205932,-9.946036],[-8.210158,-3.261656,-5.236668,-8.819576,6.512766,8.557638,5.595921,8.380563,-3.774005,1.003236],[2.020788,8.075199,8.831609,-0.992254,1.396876,-6.236532,9.098483,-9.690748,-5.858878,3.752858],[0.006500,4.222313,7.539927,-1.924664,-9.906088,4.053450,-8.138765,-9.276748,5.857400,-7.588879],[0.996209,-1.859859,-8.385858,2.531238,-7.551864,-3.513541,7.737664,-6.702487,9.371116,-1.420508],[-9.754967,9.199727,2.646524,-7.598987,-1.578969,8.615157,6.379248,-1.183283,4.626458,-0.242695],[-2.186968,5.628387,-0.845999,-1.813316,3.052280,-3.005198,-4.576255,-9.845612,7.186782,-5.730716],[-7.241522,-1.730016,-0.549432,6.040922,-3.918065,1.162892,-2.822843,-6.392481,-4.940648,-5.812261],[4.622664,6.643575,5.208040,7.887602,1.246703,-1.936002,-8.356622,1.477464,-7.294657,-6.427195]],[[2.584974,8.552781,-0.744941,-0.400385,7.828219,-0.234125,7.065666,-1.894751,-0.288337,-9.267966],[-7.474901,8.024641,9.947154,4.738474,3.094935,-2.267439,8.747183,-1.050128,4.413594,-6.050218],[-7.625702,2.316557,-4.122892,-0.428291,-4.766449,-4.146598,4.157565,0.419757,4.191822,-2.017989],[-9.391712,4.556589,2.172892,1.381650,-0.880779,9.542882,0.466516,9.029889,-5.197440,-1.731201],[-7.157259,5.941760,-8.089863,-9.109653,0.582201,-3.361657,8.121126,0.384855,1.720776,5.135956],[-0.768025,-2.202699,4.224618,-8.086652,7.019039,-9.566143,2.110948,-4.134753,-6.949058,3.845266],[6.925511,2.202536,8.846025,2.543388,-6.478855,2.815905,7.051638,-9.390581,6.158214,4.536427],[7.394772,-7.950509,2.863366,-1.910590,2.078247,-3.227737,5.386646,5.610499,-1.882168,6.988110],[5.313034,-8.445723,0.732342,1.179097,2.191800,6.131950,8.191012,6.502836,-8.493863,-3.365774],[-6.166061,5.191641,3.967329,-9.203803,6.428475,-3.032129,-3.327138,-0.749571,0.409836,-9.103079],[-5.942135,7.997710,8.090610,-3.229089,-2.160484,9.084645,1.878510,-5.734225,7.037608,4.524653],[-4.337537,8.044026,-0.879575,-7.945432,-0.613047,-9.622570,2.651246,-5.170817,-6.848360,-3.322151],[1.653401,1.796814,-5.649543,1.896735,1.856997,5.309649,-8.887150,-5.085409,-1.280125,-0.391599],[-9.530573,3.454415,-2.688657,-5.310429,-4.051142,5.547327,8.011707,6.739575,-4.593508,4.385301]],[[9.095214,-7.383920,-3.187471,-8.348161,8.370794,7.911918,1.759471,1.944588,-0.388150,-6.160999],[2.664046,-4.752910,9.744392,-4.554509,6.246603,9.747935,-0.193189,-9.680865,-7.557996,3.590715],[-5.950869,5.833853,8.919235,8.304727,3.466562,3.739081,-2.571866,3.786405,9.282469,9.095709],[8.611488,8.629034,-2.581387,-6.059359,-6.365878,8.065708,-5.523288,-9.475816,7.634304,1.071975],[5.892413,7.214223,5.795970,4.918307,1.242011,8.661406,0.747715,-0.221634,-5.410607,9.842455],[1.023605,3.303429,5.784516,2.027364,-2.421042,1.453191,5.511059,2.084888,8.461095,6.003127],[0.550191,-1.209271,9.258457,0.640177,4.174798,-8.556502,6.564631,4.137845,7.178803,7.604950],[6.599308,-5.342081,-7.552681,6.503084,-1.585676,-8.248327,2.199847,3.006100,0.738641,1.961711],[2.973768,9.180459,6.855494,5.671646,-6.196791,-3.406565,-5.826003,-4.914963,-2.830713,-1.429855],[2.789403,1.442796,3.808973,0.449691,0.572136,-8.131076,4.982944,1.165472,-3.419721,4.911170],[8.311296,-6.649642,-1.604606,-7.963845,1.816129,-7.794151,5.501048,0.810880,-9.077069,-8.813812],[0.034714,-3.669833,-0.324642,-3.924679,-1.002023,5.096174,3.855133,0.764253,8.533002,6.463222],[6.005419,6.249874,5.754038,6.958812,5.221205,8.619610,-6.122252,4.902744,2.005334,5.244555],[-4.794912,0.612473,7.442242,2.021187,9.449354,0.799584,-8.186266,3.687496,6.822195,7.037727]],[[-3.796425,-0.697219,-0.390059,-7.072796,8.640240,-1.232036,-9.098005,7.116307,-5.587601,-6.607733],[3.631064,-3.462002,-8.151308,4.511016,8.785528,9.518676,0.023048,-1.257998,9.584358,5.340342],[3.312675,-8.101665,-2.197513,2.532617,5.064695,-2.609011,5.702638,-7.283721,-4.473490,6.557431],[3.285131,-4.995203,-2.229262,-6.837752,1.408958,-9.271455,1.457204,-7.575995,7.114480,4.101063],[-6.863257,4.245232,-9.495120,6.519091,-0.274764,-0.134577,6.733810,-6.500131,-4.161166,-6.793333],[5.665688,-8.575444,7.795783,-6.196872,-6.350188,6.991369,0.625903,-2.994221,5.666153,-0.561197],[-5.722578,1.392144,6.607426,-6.127795,-7.701861,6.251002,2.816388,9.684259,3.095469,0.789748],[5.292519,-8.046650,-8.888992,-0.131310,-7.411218,3.217125,-1.800639,6.111186,-0.044164,7.364895],[-9.238273,-1.167811,-8.212719,-8.453354,3.327064,0.671981,0.948522,5.177003,-8.233242,0.418220],[5.580316,7.390263,7.670580,6.683781,-8.131358,-9.712389,-7.433519,2.379077,-1.034286,-4.960501],[0.772484,-4.956897,8.628931,-6.964056,-3.235458,-7.836430,-4.347827,8.224544,-7.405800,-1.157292],[3.207964,4.885630,8.768353,-0.111869,7.639652,-3.859543,-2.509836,2.453024,-8.080593,9.473662],[6.971566,-0.559034,8.324169,0.800855,1.190347,4.841378,-9.646758,-7.372381,9.105241,-1.109474],[5.633268,5.936112,9.775926,5.399425,0.126199,-4.243115,-6.572441,-7.559000,-9.821555,-9.629355]],[[9.628219,-3.860504,-3.441028,-1.642583,5.261963,-0.783527,1.720526,-2.559839,-8.690863,-8.260096],[-3.652667,-4.998827,-8.846163,1.997747,-2.729634,-8.608695,6.669885,-0.149996,3.132636,8.008667],[7.646427,9.171250,7.669083,3.928386,3.507347,4.114091,9.752527,-4.775405,7.408652,-3.220996],[4.442159,7.432824,-2.710710,9.938604,-1.961453,-3.479060,-5.691047,-2.768782,-7.910807,-0.218842],[-5.697286,9.544137,4.878556,5.640810,3.372211,2.218287,-7.825583,6.609245,-7.467895,-8.504700],[7.337088,-8.234051,-8.709924,-1.609962,-9.098939,-2.240866,-9.495732,-6.418351,1.541123,-7.938113],[-0.320055,-1.338093,6.953326,6.250718,-2.817193,-3.176123,-7.267544,1.771956,-1.097370,4.914805],[-5.953858,2.925469,-7.533157,2.538111,0.417119,-4.527310,7.780691,-5.609586,6.038050,-9.093860],[7.840335,9.231897,8.224276,-1.462559,-0.158477,-5.376016,2.419613,-3.139966,-5.230182,8.893708],[9.920012,1.159623,-7.784762,8.099130,6.327244,1.308637,7.917107,-9.353550,-1.045498,-2.023795],[4.302903,1.734107,-4.028781,-0.459355,0.853701,-9.095659,3.336091,0.746519,3.192992,2.757954],[-8.701476,6.080253,-8.890868,-7.687108,-0.328236,5.557661,-9.450729,-7.564042,-4.296196,7.397872],[-3.462417,1.247767,5.233522,-7.681519,0.212178,5.050947,-0.495005,7.478193,-8.295558,4.204125],[-2.780272,-6.008820,-2.872628,3.949432,4.982875,-9.024991,-2.975479,-4.527342,4.466576,-7.544235]],[[-7.265880,-2.393363,-8.369572,0.269149,-4.698741,0.637419,-2.384621,9.673561,-8.371848,6.629792],[5.119335,-8.425547,0.290851,1.299746,1.354071,-7.038794,6.543372,-1.794043,-3.459538,-0.777736],[2.526880,-8.919726,-8.521689,-5.198781,-5.566087,-9.426816,3.790034,-9.343371,9.842923,5.933944],[7.359291,5.256798,9.308402,3.731494,6.955473,-1.703086,2.500119,-1.127188,-2.800063,0.236942],[7.688253,-9.018751,-6.940661,9.881727,-2.454906,-4.155093,-2.909232,-1.967308,5.296340,-2.760033],[6.547533,8.305140,4.642182,-8.703139,-7.245862,-2.704674,-8.085379,7.990690,5.654379,-4.892062],[1.228478,-3.908514,-6.306037,2.887346,-7.977322,3.225571,-7.005241,-5.126603,-7.331768,1.738844],[-6.721198,-7.851355,-7.208574,4.202275,5.005204,2.586736,-0.428436,-9.202883,-7.811680,2.518201],[1.212044,7.637510,5.336650,4.492957,-4.565231,6.933604,9.528958,6.640346,6.222736,3.557351],[4.408985,9.070554,-0.180813,-8.488319,-6.434615,4.986470,-2.390111,7.598859,3.165139,-8.930595],[-5.119166,-1.895597,8.114114,3.649433,1.975620,2.740738,-3.314517,-7.375326,3.915052,7.904522],[-9.907361,0.720460,9.488720,2.365916,-1.910377,4.067337,7.334975,-6.974361,1.706112,0.385427],[-9.096235,9.534086,5.628914,-7.306245,3.880310,-4.184484,-9.343361,-9.492191,6.807223,-3.141566],[9.598751,-9.915762,-0.689907,-5.369538,-9.593890,-8.882272,-5.267790,0.442415,1.661687,-0.039787]]], dtype = "float32")#candidate|1780|(7, 14, 10)|const|float32
bop_1781 = relay.floor_mod(uop_1778.astype('float64'), relay.reshape(const_1780.astype('float64'), relay.shape_of(uop_1778))) # shape=(7, 14, 10)
func_47_call = mod.get_global_var('func_47')
func_50_call = mutated_mod.get_global_var('func_50')
var_1792 = relay.var("var_1792", dtype = "uint16", shape = (390,))#candidate|1792|(390,)|var|uint16
call_1791 = func_47_call(relay.reshape(var_1792.astype('uint16'), [6, 5, 13]), relay.reshape(var_1792.astype('uint16'), [6, 5, 13]), )
call_1793 = func_47_call(relay.reshape(var_1792.astype('uint16'), [6, 5, 13]), relay.reshape(var_1792.astype('uint16'), [6, 5, 13]), )
output = relay.Tuple([bop_1781,call_1791,var_1792,])
output2 = relay.Tuple([bop_1781,call_1793,var_1792,])
func_1798 = relay.Function([var_1777,var_1792,], output)
mod['func_1798'] = func_1798
mod = relay.transform.InferType()(mod)
var_1799 = relay.var("var_1799", dtype = "float32", shape = (7, 14, 10))#candidate|1799|(7, 14, 10)|var|float32
var_1800 = relay.var("var_1800", dtype = "uint16", shape = (390,))#candidate|1800|(390,)|var|uint16
output = func_1798(var_1799,var_1800,)
func_1801 = relay.Function([var_1799,var_1800,], output)
mutated_mod['func_1801'] = func_1801
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1816 = relay.var("var_1816", dtype = "float64", shape = (9, 14, 6))#candidate|1816|(9, 14, 6)|var|float64
var_1817 = relay.var("var_1817", dtype = "float64", shape = (9, 14, 6))#candidate|1817|(9, 14, 6)|var|float64
bop_1818 = relay.mod(var_1816.astype('float64'), relay.reshape(var_1817.astype('float64'), relay.shape_of(var_1816))) # shape=(9, 14, 6)
output = bop_1818
output2 = bop_1818
func_1823 = relay.Function([var_1816,var_1817,], output)
mod['func_1823'] = func_1823
mod = relay.transform.InferType()(mod)
var_1824 = relay.var("var_1824", dtype = "float64", shape = (9, 14, 6))#candidate|1824|(9, 14, 6)|var|float64
var_1825 = relay.var("var_1825", dtype = "float64", shape = (9, 14, 6))#candidate|1825|(9, 14, 6)|var|float64
output = func_1823(var_1824,var_1825,)
func_1826 = relay.Function([var_1824,var_1825,], output)
mutated_mod['func_1826'] = func_1826
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1978 = relay.const([[[6.483514,-9.011509,-6.958205,9.163094,9.363249],[4.220741,-1.499259,8.756796,-8.025524,-1.884873],[3.030515,8.404422,-7.146283,-2.897927,8.194675],[8.803383,-8.099837,-5.558620,-3.854190,1.263690],[7.633215,4.380396,-6.547702,-7.624101,-1.632521],[5.521874,2.901862,-0.240205,3.058599,3.801316],[-6.550268,2.901291,-8.418778,-9.256245,1.960913]],[[4.401723,-6.544018,-3.878318,5.517609,5.916833],[6.588427,-6.810074,8.566611,3.265626,6.271266],[5.309587,9.622900,-6.616516,6.919068,-2.320570],[-7.199809,2.876566,-3.582881,6.051751,-8.289497],[-8.730167,1.495057,-1.239755,7.054152,3.897106],[8.274026,1.752744,8.906457,-0.474859,-1.076267],[5.025995,-7.947349,6.362579,-9.195659,9.440920]],[[5.661411,9.620644,-8.735539,1.565995,8.528977],[-6.783606,-6.466330,6.772218,-6.513900,-0.445208],[-8.410998,5.026953,-7.694804,6.250756,-7.509928],[-2.546584,-4.505323,-4.215101,3.565977,6.014120],[0.723229,8.440682,6.897063,3.892455,2.819397],[-9.009308,-2.600509,-7.082547,-3.850701,2.314944],[-7.015512,-7.236467,6.375522,1.961461,-7.185949]]], dtype = "float32")#candidate|1978|(3, 7, 5)|const|float32
var_1979 = relay.var("var_1979", dtype = "float32", shape = (3, 7, 5))#candidate|1979|(3, 7, 5)|var|float32
bop_1980 = relay.power(const_1978.astype('float32'), relay.reshape(var_1979.astype('float32'), relay.shape_of(const_1978))) # shape=(3, 7, 5)
func_1476_call = mod.get_global_var('func_1476')
func_1480_call = mutated_mod.get_global_var('func_1480')
var_1987 = relay.var("var_1987", dtype = "uint16", shape = ())#candidate|1987|()|var|uint16
const_1988 = relay.const([7,9,7,10,-7,4,-10,-4,-6,-5,4,6,4,8,4,-6,5,5,-1,2,7,-3,-8,-3,-7,7,6,9,5,-3,3,10,-5,7,-9,5,-9,-5,5,-5,-10,6,-4,-6,-4,-9,-8,-4,3,10,4,-10,-6,-2,-6,-5,-7,-10,6,1,-5,-7,-1,-8,4,-8,5,-9,-4,-4,-8,-7,-10,8,-5,7,1,-2,5,-9,-8,-7,-7,-6,7,-3,8,2,9,5,-8,1,-6,-6,-5,-2,-1,9,-5,-1,2,-9,-6,-8,10,-6,-6,10,3,3,-10,-2,3,-1,6,-3,7,-9,-3,-5,-2,1,-9,-10,-8,10,-9,9,6,10,-3,10,-5,3,8,8,1,8,10,-2,-10,-6,-9,-10,-6,-6,-3,7,7,-5,9,7,-3,-10,2,1,8,-2,2,-1,4,5,6,-7,-3,-8,-6,-2,9,-1,-6,4,10,3,9,10,3,-3,9,-10,4,7,-2,-8,1,-1,-2,2,-10,-3,9,2,-9,9,-9,-2,-8,3,-8,-10,-2,9,-7,-7,-8,-7,4,-8,-8,-2,-9,-10,-5,-6,5,3,8,-3,-5,-5,-1,-9,-6,1,-6,-1,-9,-2,1,7,-4,5,-2,-1,7,9,8,6,-5,-8,-9,-7,-7,1,5,-7,-8,-2,-9,9,-7,-7,-6,-3,-9,3,-9,6,-9,7,7,-4,-4,-5,-7,2,-3,-3,1,10,-6,-8,5,-2,-3,10,-2,-2,9,1,4,-4,-2,5,-4,1,-10,-6,3,1,6,3,-4,-6,4,2,1,-4,4,4,4,9,-6,-3,2,4,-3,-8,4,3,3,8,3,7,-1,9,-10,-3,1,5,10,-3,-8,2,-7,4,4,4,-5,-7,5,4,-4,2,-3,-1,8,-7,-5,2,6,1,-7,-7,7,-9,-2,8,3,9,8,-10,4,-7,-6,2,-5,2,-10,-6,-5,-1,-9,-10,10,-8,-1,-9,4,7,-4,-2,4,3,-4,-10,6,-5,2,-7,7,3,6,7,7,-1,-5,-2,-6,-10,5,-9,-3,6,-2,-8,-2,10,-10,-9,-1,7,-3,4,3,-2,-5,-9,-7,-4,2,7,2,2,-4,-10,-1,-2,6,-6,9,-9,-10,5,-5,-4,2,3,-1,-7,-7,-2,3,-5,-8,-10,-10,1,7,-7,4,3,5,9,2,10,2,10,-4,6,7,-8,3,8,5,4,9,7,-3,9,-4,-5,-3,-4,1,10,6,-6,9,-10,-1,6,-2,-3,9,10,-5,10,9,6,5,-7,-3,-9,9,9,-6,10,-5,-4,-7,6,1,-9,-1,10,10,-9,4,-7,9,-5,-8,2,-7,8,1,7,1,2,-2,1,4,7,8,-3,10,10,2,-1,-10,-5,4,-5,-10,10,1,-4,-9,-5,4,2,5,-2,-5,7,4,6,-6,5,-8,-9,-4,8,-3,8,2,-9,-3,-3,4,4,2,5,1,-5,5,-9,-5,2,-1,-5,-2,7,5,-4,10,8,5,9,5,4,7,9,-2,2,-3,4,1,-1,-3,-5,10,-4,-7,3,-8,4,-2,-7,-5,-8,6,-4,-5,-3,-9,-1,4,-5,8,-4,5,-2,-10,3,-10,2,3,4,2,-6,8,9,1,-4,2,-7,-4,7,-10,7,-1,9,-8,4,4,8,-7,5,-3,-1,5,-3,9,-2,10,10,-10,-7,-3,6,-1,9,-5,8,-3,2,-6,-6,-7,-3,-6,10,3,-4,-10,-6,-9,1,-1,-10,7,-10,-1,8,-3,-4,-6,-8,-4,7,-5,7,8,-7,-6,-3,3,7,-10,-9,-8,3,-9,-2,5,7,2,3,-1,-1,1,3,7,-5,7,-1,9,10,7,3,3,2,-5,9,7,-4,-4,-2,8,-10,-3,3,-5,2,-7,3,-6,-7,-2,-8,8,7,10,5,-7,7,5,4,3,3,-2,1,-3,-10,7,-2,-9,-7,10,-10,-4,-9,-7,9,10,3,10,9,-2,-6,6,-4,-1,-5,-10,10,-2,-4,-3,-10,-5,-4,-6,-8,-3,-7,-4,-3,1,-6,10,6,-6,-2,3,3,-4,-3,-1,9,5,10,-7,4,10,9,-5,-4,5,-9,8,8,-10,-4,-4,-4,1,10,-8,7,4,10,3,2,9,-8,-5,1,-7,-4,-10,-10,4,-10,-6,-10,5,10,3,-7,3,-1,10,-4,9,-10,6,-3,-1,3,-9,6,1,1,-9,-8,2,3,-1,2,4,-2,-1,-3,5,-8,6,-10,3,5,-8,6,-10,5,-5,3,7,2,-8,10,10,2,5,5,3,-2,2,-2,-9,6,-2,-5,-4,-8,-1,-10,10,7,3,-3,-5,-7,5,9,-6,7,-4,10,-1,-2,9,-5,3,-2,7,3,10,-7,9,8,3,-5,10,-4,-4,-7,-10,9,6,10,-9,-3,2,6,10,-9,1,-9,-9,-4,-3,3,-3,5,-6,-3,7,-5,-8,2,-7,10,-5,9,-5,-7,5,-10,-4,10,-9,8,8,6,-4,-7,-9,9,7,-8,-2,-1,-6,-5,-5,2,-7,1,-4,5,-3,-1,9,-8,7,-1,2,-5,-2,-1,-5,-10,-5,-10,-5,-9,7,-5,-1,5,1,-6,-7,-1,1,-5,-7,1,-5,1,7,-2,-9,3,10,-9,-3,3,-5,-10,-6,-5,1,3,10,-7,3,3,8,3,3,8,6,-9,-6,7,3,5,1,-1,-1,8,-10,7,7,8,9,-8,-7,-5,-6,-3,8,5,5,10,6,1,9,6,5,7,-9,-10,-2,9,9,8,-1,7,-1,-3,7,5,-9,3,6,-9,-3,-3,-6,-4,4,2,-9,1,-8,-8,-8,10,-5,-1,-10,-8,-1,-1,-3,2,1,5,7,-9,-2,-9,-10,-8,-1,-6,1,-8,-6,1,-6,-9,1,4,-1,2,-9,-4,9,2,10,2,3,-8,-9,-8,-6,-9,-10,4,5,5,-6,-3,-10,4,4,-3,-6,-5,2,9,10,-4,10,-2,-5,-10,-7,-5,-7,-6,4,7,-2,2,-6,3,-8,6,6,-4,-6,-1,7,-9,4,-5,-7,-6,-5,-5,1,6,-5,-7,10,-2,-8,-1,-1,-1,-6,-1,9,3,8,-6,6,-6,4,-1,-9,-3,8,-3,-4,3,-3,4,2,7,-7,-8,-4,-3,-10,-3,9,-7,1,7,-6,-7,3,-10,-1,6,1,1,10,4,-8,8,-2,-6,7,-8,2,-10,7,3,-1,5,4,-7,-8,4,-7,-5,9,4,5,-7,-7,5,8,-3,-8,1,4,4,-1,10,-1,9,-8,-6,-4,9,1,-7,-1,-10,-9,-9,-10,-9,-3,1,5,6,2,4,4,-9,-9,-5,-7,9,7,10,-5,10,-7,-2,2,6,7,-10,-5,-7,5,5,9,7,4,-5,6,6,6,-6,3,2,1,-2,-3,1,3,10,-9,-7,-6,-3,8,6,7,-4,-3,10,-10,-2,-3,1,-6,7,-7,2,9,-6,7,10,-3,6,-1,-3,1,4,-6,-10,-5,2,5,7,-3,10,-4,-6,7,6,8,-8,3,-5,-8,-3,-3,-7,1,2,-5,-4,5,8,1,9,-3,10,-1,-7,9,-2,-5,3,-10,-9,-9,6,4,5,9,-7,-3,8,-2,-10,5,5,8,-9,5,7,-3,-10,-8,4,-1,10,8,5,-5,2,9,-3,7,7,-9,10,7,1,-4,-5,-4,8,-6,-3,-10,-2,-2,5,-6,5,-9,9,4,-3,3,-5,4,-10,-6,1,5,4,10,-1,4,-4,-3,-10,1,7,-3,2,6,10,-2,-8,6,-6,-3,-5,-5,1,9,4,7,5,-4,9,-8,1,-10,7,-3,6,-4,-7,7,-6,1,10,1,-8,-2,-4,6,8,-6,-5,2,7,10,4,1,-8,9,-10,1,7,7,-4,9,-10,-1,-4,-6,-6,6,-6,9,9,9,-10,9,6,1,10,5,2,7,-8,8,9,-3,1,10,2,3,-2,1,10,-9,1,10,-2,1,10,-4,-5,6,9,-8,-5,-4,3,6,-7,-4,1,-2,-1,-10,4,9,-3,7,-1,2,6,-3,-1,-4,4,-5,-2,-7,-1,3,3,5,7,7,-7,-3,6,5,5,-4,-9,-1,9,3,4,-5,10,-2,-4,-4,-7,7,3,1,-3,-4,-5,3,-4,3], dtype = "uint16")#candidate|1988|(1573,)|const|uint16
call_1986 = func_1476_call(relay.reshape(var_1987.astype('uint16'), []), relay.reshape(const_1988.astype('uint16'), [11, 13, 11]), )
call_1989 = func_1476_call(relay.reshape(var_1987.astype('uint16'), []), relay.reshape(const_1988.astype('uint16'), [11, 13, 11]), )
func_335_call = mod.get_global_var('func_335')
func_339_call = mutated_mod.get_global_var('func_339')
var_1994 = relay.var("var_1994", dtype = "float64", shape = (12, 32))#candidate|1994|(12, 32)|var|float64
call_1993 = relay.TupleGetItem(func_335_call(relay.reshape(var_1994.astype('float64'), [16, 3, 8]), relay.reshape(var_1994.astype('float64'), [16, 3, 8]), ), 2)
call_1995 = relay.TupleGetItem(func_339_call(relay.reshape(var_1994.astype('float64'), [16, 3, 8]), relay.reshape(var_1994.astype('float64'), [16, 3, 8]), ), 2)
bop_2013 = relay.bitwise_and(bop_1980.astype('int32'), relay.reshape(var_1979.astype('int32'), relay.shape_of(bop_1980))) # shape=(3, 7, 5)
bop_2023 = relay.divide(var_1987.astype('float64'), var_1979.astype('float64')) # shape=(3, 7, 5)
func_1476_call = mod.get_global_var('func_1476')
func_1480_call = mutated_mod.get_global_var('func_1480')
call_2030 = func_1476_call(relay.reshape(var_1987.astype('uint16'), []), relay.reshape(call_1986.astype('uint16'), [11, 13, 11]), )
call_2031 = func_1476_call(relay.reshape(var_1987.astype('uint16'), []), relay.reshape(call_1986.astype('uint16'), [11, 13, 11]), )
uop_2032 = relay.log(const_1988.astype('float64')) # shape=(1573,)
output = relay.Tuple([call_1986,call_1993,var_1994,bop_2013,bop_2023,call_2030,uop_2032,])
output2 = relay.Tuple([call_1989,call_1995,var_1994,bop_2013,bop_2023,call_2031,uop_2032,])
func_2040 = relay.Function([var_1979,var_1987,var_1994,], output)
mod['func_2040'] = func_2040
mod = relay.transform.InferType()(mod)
var_2041 = relay.var("var_2041", dtype = "float32", shape = (3, 7, 5))#candidate|2041|(3, 7, 5)|var|float32
var_2042 = relay.var("var_2042", dtype = "uint16", shape = ())#candidate|2042|()|var|uint16
var_2043 = relay.var("var_2043", dtype = "float64", shape = (12, 32))#candidate|2043|(12, 32)|var|float64
output = func_2040(var_2041,var_2042,var_2043,)
func_2044 = relay.Function([var_2041,var_2042,var_2043,], output)
mutated_mod['func_2044'] = func_2044
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2128 = relay.var("var_2128", dtype = "int16", shape = (3, 7, 16))#candidate|2128|(3, 7, 16)|var|int16
var_2129 = relay.var("var_2129", dtype = "int16", shape = (3, 7, 16))#candidate|2129|(3, 7, 16)|var|int16
bop_2130 = relay.bitwise_and(var_2128.astype('int16'), relay.reshape(var_2129.astype('int16'), relay.shape_of(var_2128))) # shape=(3, 7, 16)
func_47_call = mod.get_global_var('func_47')
func_50_call = mutated_mod.get_global_var('func_50')
const_2134 = relay.const([[7,-1,-10,9,-10,-5],[9,8,4,9,-9,8],[2,-4,9,8,10,7],[2,-1,-2,-1,-6,-8],[6,6,-4,1,-8,1],[-1,-3,10,-2,-7,-7],[1,8,6,-2,3,-2],[-2,-5,7,10,-6,-8],[3,9,5,9,-3,-5],[-4,5,-5,-4,-7,-1],[-4,-4,-4,-7,4,-8],[-1,7,3,4,1,5],[-4,4,6,8,6,2],[-4,-8,-4,-9,3,-10],[-8,-6,-2,4,9,-9],[-3,7,-9,-1,8,5],[-8,-9,-10,1,-3,-6],[9,-1,8,-5,7,4],[1,-2,7,-4,-2,9],[-4,-10,9,-2,-6,5],[2,-6,-4,-8,-8,-5],[-10,1,4,3,-2,4],[9,-8,-8,-8,4,3],[6,2,-6,10,-8,9],[3,-9,-7,6,9,-10],[10,-9,-3,4,-4,5],[5,-5,6,-6,-5,4],[8,-7,-4,3,-4,8],[-3,-9,9,8,-7,9],[-8,-2,2,7,4,6],[-1,-3,9,4,-4,-2],[7,10,-6,9,6,9],[5,-7,-9,6,1,-5],[-1,-6,-4,-1,-8,-8],[2,8,-7,7,2,1],[-8,-9,8,-1,7,-7],[6,5,-1,-10,-8,-2],[-7,9,4,9,8,-2],[4,-7,-3,-3,2,-2],[-10,-5,-3,5,5,-7],[3,10,-6,10,-8,-10],[-1,7,-2,8,3,10],[2,6,-9,-6,-1,-6],[1,-6,4,7,10,1],[-6,3,4,-7,-7,4],[10,-8,6,-7,-9,5],[8,1,7,1,2,-5],[5,5,-7,-8,10,-7],[10,-3,-6,4,-10,3],[8,-3,7,-9,1,4],[4,6,-10,10,8,10],[-4,7,1,3,3,-10],[-5,-3,-4,6,-1,-1],[7,10,7,-7,-4,4],[6,5,-5,-10,-3,-9],[-1,6,-9,-10,10,-2],[-10,5,5,9,9,1],[-8,-6,-5,9,-4,-6],[2,9,-6,7,2,-9],[-3,8,-4,-6,1,5],[-1,-2,9,-7,-5,-3],[9,-6,3,-8,6,10],[7,2,2,-6,4,-5],[7,4,-10,3,-8,-10],[4,9,8,-8,7,-4]], dtype = "uint16")#candidate|2134|(65, 6)|const|uint16
call_2133 = func_47_call(relay.reshape(const_2134.astype('uint16'), [6, 5, 13]), relay.reshape(const_2134.astype('uint16'), [6, 5, 13]), )
call_2135 = func_47_call(relay.reshape(const_2134.astype('uint16'), [6, 5, 13]), relay.reshape(const_2134.astype('uint16'), [6, 5, 13]), )
func_1210_call = mod.get_global_var('func_1210')
func_1213_call = mutated_mod.get_global_var('func_1213')
const_2138 = relay.const([2,9,-7,5,1,4,2,7,5,5,7,-6,-10,-9,3,-7,4,-5,6,-8,-3,8,2,-9,5,3,-5,-2,-3,-1,9,-1,1,3,-7,-6,-3,4,-2,-2,-8,8,-3,-10,1,3,7,-4,-4,-8,10,-1,-10,8,-9,10,-5,-1,-9,7,10,2,5,-6,3,-8,-9,5,6,-3,6,-2,-2,-1,4,10,9,-1,-8,-1,-2,5,10,1,5,-2,-7,-4,-9,-9,7,7,3,-8,7,-3,2,2,-8,-9,7,6,8,-5,8,-10,-3,-9,-6,-7,-8,-4,8,2,9,1,-3,-3,6,7,-10,-9,3,9,-2,-4,9,-1,-6,-5,2,-2,-2,5,-1,-3,9,-5,-9,4,3,2,-8,8,-5,10,10,2,6,-1,-4,-1,-8,7,-3,9,-1,-9,-5,4,2,5,5,-4,-9,-10,-1,7,-7,5,5,7,6,-6,5,-8,5,8,5,1,-9,6,-1,-9,7,-10,9,-10,-5,3,10,6,-7,3,8,-5,-4,7,5,-6,2,-5,-5,-8,-5,10,-4,-9,3,-2,-8,8,-9,-9,-10,7,1,7,-10,6,-7,1,5,4,-3,-8,7,-5,10,-3,1,4,-3,-9,7,-10,-4,-8,2,6,10,8,-10,4,-1,10,-6,-5,9,-5,1,-3,-8,-5,-2,-6,7,-2,1,8,-4,3,7,2,-3,-2,-4,-1,-3,1,-7,2,4,-2,-3,-4,-1,8,8,3,8,-8,-8,3,5,-1,-4,8,-8,-1,-5,9,-6,3,6,5,-1,4,-2,-1,2,9,4,4,-2,-4,-3,-2,-7,-3,2,8,-9,-1,1,7,-5,-1,-8,2,1,-6,8,-3,6,1,-2,-1,3,-3,5,10,-8,2,8,-7,-1,-3,-2,5,10,6,-3,6,-1,2,1,-10,5,-5,6,-3,-5,-6,-3,-7,-7,7,-3,7,2,-10,1,1,1,-10,10,-6,8,-3,4,-3,6,2,3,-3,-9,7,4,8,4,4,1,-8,-3,1,-5,-8,-6,-2,10,-3,10,-10,8,4,6,-5,-8,-6,-5,8,-1,5,-7,-6,4,-7,-9,-3,-3,-8,-2,3,-5,-3,-6,-4,-7,2,-6,2,-10,-6,-4,-6,3,7,7,7,1,-2,-3,3,5,-6,6,1,-9,-4,6,-1,4,-4,7,2,-3,4,3,6,3,-1,1,4,8,2,-8,3,-10,4,10,5,10,-7,-5,3,4,6,5,-5,7,-9,10,-8,10,-8,-8,2,-2,-3,4,6,9,5,-3,-8,-6,7,8,-6,7,-9,-7,-3,1,-8,1,5,8,-5,-8,3,-10,2,6,-6,-2,-8,-5,-7,-8,-1,9,-10,-4,7,-7,-8,1,-5,-7,-1,-4,-7,-1,-7,-9,7,-4,4,3,-2,2,-7,7,1,3,-3,1,7,-4,1,3,-1,7,7,-7,-2,6,-1,1,8,-3,2,1,-8,-4,-8,8,-5,3,9,-8,8,-10,10,-2,-7,9,1,-9,-7,-9,-1,4,-4,-8,8,3,2,6,7,10,5,3,3,8,-6,-5,-3,-5,-6,1,-10,10,10,-6,6,-8,7,-10,3,8,-4,-10,-2,6,-9,1,-5,-3,-9,-9,5,9,-1,2,-6,5,3,-6,2,2,3,1,6,-1,1,3,9,7,10,4,-10,-5,6,-8,5,8,-5,4,-2,-10,6,10,5,5,-7,-1,-8], dtype = "uint16")#candidate|2138|(650,)|const|uint16
call_2137 = relay.TupleGetItem(func_1210_call(relay.reshape(const_2138.astype('uint16'), [10, 5, 13])), 0)
call_2139 = relay.TupleGetItem(func_1213_call(relay.reshape(const_2138.astype('uint16'), [10, 5, 13])), 0)
func_1210_call = mod.get_global_var('func_1210')
func_1213_call = mutated_mod.get_global_var('func_1213')
call_2152 = relay.TupleGetItem(func_1210_call(relay.reshape(call_2137.astype('uint16'), [10, 5, 13])), 0)
call_2153 = relay.TupleGetItem(func_1213_call(relay.reshape(call_2137.astype('uint16'), [10, 5, 13])), 0)
func_1665_call = mod.get_global_var('func_1665')
func_1670_call = mutated_mod.get_global_var('func_1670')
const_2170 = relay.const([-0.791732,7.132216,-4.373976,6.247796,-0.989288,8.476065,4.391459,4.601255,2.234982,-6.455843,-3.307708,0.637946,7.515673,1.118005,-1.777678,-5.539942,-9.836091,2.913631,7.775273,5.116660,1.374462,6.912196,-7.709079,3.533934,-7.597655,-3.467804,-5.779552,-3.833288,9.961841,7.162438,-3.878309,-8.106084,9.757119,-5.134909,3.904510,-1.581818,-1.532783,0.251348,1.424405,-0.185043,-5.516171,-8.322495,-5.173357,9.826847,-2.319182,-3.546147,-2.974609,-4.469243,-0.220891,-2.170709,-6.061652,3.650608,9.911965,5.893147,6.623047,-7.180102,-1.418908,-6.205452,4.243423,-4.705151,-8.066532,9.415380,-5.241110,-2.981287,-6.589318,-4.839414,-5.300769,2.111695,-4.575981,-7.597261,-8.053250,4.399080], dtype = "float32")#candidate|2170|(72,)|const|float32
var_2171 = relay.var("var_2171", dtype = "uint16", shape = ())#candidate|2171|()|var|uint16
call_2169 = relay.TupleGetItem(func_1665_call(relay.reshape(const_2170.astype('float32'), [4, 2, 9]), relay.reshape(const_2170.astype('float32'), [4, 2, 9]), relay.reshape(var_2171.astype('uint16'), []), relay.reshape(const_2134.astype('uint16'), [390,]), ), 1)
call_2172 = relay.TupleGetItem(func_1670_call(relay.reshape(const_2170.astype('float32'), [4, 2, 9]), relay.reshape(const_2170.astype('float32'), [4, 2, 9]), relay.reshape(var_2171.astype('uint16'), []), relay.reshape(const_2134.astype('uint16'), [390,]), ), 1)
output = relay.Tuple([bop_2130,call_2133,const_2134,call_2137,const_2138,call_2152,call_2169,const_2170,var_2171,])
output2 = relay.Tuple([bop_2130,call_2135,const_2134,call_2139,const_2138,call_2153,call_2172,const_2170,var_2171,])
func_2186 = relay.Function([var_2128,var_2129,var_2171,], output)
mod['func_2186'] = func_2186
mod = relay.transform.InferType()(mod)
var_2187 = relay.var("var_2187", dtype = "int16", shape = (3, 7, 16))#candidate|2187|(3, 7, 16)|var|int16
var_2188 = relay.var("var_2188", dtype = "int16", shape = (3, 7, 16))#candidate|2188|(3, 7, 16)|var|int16
var_2189 = relay.var("var_2189", dtype = "uint16", shape = ())#candidate|2189|()|var|uint16
output = func_2186(var_2187,var_2188,var_2189,)
func_2190 = relay.Function([var_2187,var_2188,var_2189,], output)
mutated_mod['func_2190'] = func_2190
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2243 = relay.var("var_2243", dtype = "uint16", shape = (14, 12, 8))#candidate|2243|(14, 12, 8)|var|uint16
var_2244 = relay.var("var_2244", dtype = "uint16", shape = (14, 12, 8))#candidate|2244|(14, 12, 8)|var|uint16
bop_2245 = relay.maximum(var_2243.astype('uint16'), relay.reshape(var_2244.astype('uint16'), relay.shape_of(var_2243))) # shape=(14, 12, 8)
func_1665_call = mod.get_global_var('func_1665')
func_1670_call = mutated_mod.get_global_var('func_1670')
const_2251 = relay.const([[-8.695921,-0.067799,-6.469978,9.200018,7.996693,-0.051976,2.292702,5.529452,6.995769,1.746052,7.683098,-7.570700],[-9.780491,-6.023033,3.646065,4.467080,0.655167,6.696022,2.631930,-7.524587,-9.234960,-7.838547,6.637086,-7.224708],[0.812893,9.646516,5.001411,2.521962,4.397629,-4.369925,7.516167,-2.541699,2.814417,-5.181974,-1.269570,-6.625364],[5.991500,-2.896498,-3.907856,1.558029,-2.868860,-8.385159,6.753372,-9.522379,5.637353,8.692450,-9.281389,7.120437],[-1.306531,0.982232,-5.581477,4.836968,-4.646318,-5.035912,-4.240005,-9.823488,-5.306044,6.697703,4.033239,-8.077354],[-0.899297,3.206108,3.536932,3.074690,7.021336,-6.106796,-0.280525,1.239242,-5.292205,4.874665,-8.542301,0.067302]], dtype = "float32")#candidate|2251|(6, 12)|const|float32
var_2252 = relay.var("var_2252", dtype = "uint16", shape = ())#candidate|2252|()|var|uint16
var_2253 = relay.var("var_2253", dtype = "uint16", shape = (390,))#candidate|2253|(390,)|var|uint16
call_2250 = relay.TupleGetItem(func_1665_call(relay.reshape(const_2251.astype('float32'), [4, 2, 9]), relay.reshape(const_2251.astype('float32'), [4, 2, 9]), relay.reshape(var_2252.astype('uint16'), []), relay.reshape(var_2253.astype('uint16'), [390,]), ), 0)
call_2254 = relay.TupleGetItem(func_1670_call(relay.reshape(const_2251.astype('float32'), [4, 2, 9]), relay.reshape(const_2251.astype('float32'), [4, 2, 9]), relay.reshape(var_2252.astype('uint16'), []), relay.reshape(var_2253.astype('uint16'), [390,]), ), 0)
func_1665_call = mod.get_global_var('func_1665')
func_1670_call = mutated_mod.get_global_var('func_1670')
call_2270 = relay.TupleGetItem(func_1665_call(relay.reshape(const_2251.astype('float32'), [4, 2, 9]), relay.reshape(const_2251.astype('float32'), [4, 2, 9]), relay.reshape(var_2252.astype('uint16'), []), relay.reshape(var_2253.astype('uint16'), [390,]), ), 7)
call_2271 = relay.TupleGetItem(func_1670_call(relay.reshape(const_2251.astype('float32'), [4, 2, 9]), relay.reshape(const_2251.astype('float32'), [4, 2, 9]), relay.reshape(var_2252.astype('uint16'), []), relay.reshape(var_2253.astype('uint16'), [390,]), ), 7)
output = relay.Tuple([bop_2245,call_2250,const_2251,var_2252,var_2253,call_2270,])
output2 = relay.Tuple([bop_2245,call_2254,const_2251,var_2252,var_2253,call_2271,])
func_2281 = relay.Function([var_2243,var_2244,var_2252,var_2253,], output)
mod['func_2281'] = func_2281
mod = relay.transform.InferType()(mod)
var_2282 = relay.var("var_2282", dtype = "uint16", shape = (14, 12, 8))#candidate|2282|(14, 12, 8)|var|uint16
var_2283 = relay.var("var_2283", dtype = "uint16", shape = (14, 12, 8))#candidate|2283|(14, 12, 8)|var|uint16
var_2284 = relay.var("var_2284", dtype = "uint16", shape = ())#candidate|2284|()|var|uint16
var_2285 = relay.var("var_2285", dtype = "uint16", shape = (390,))#candidate|2285|(390,)|var|uint16
output = func_2281(var_2282,var_2283,var_2284,var_2285,)
func_2286 = relay.Function([var_2282,var_2283,var_2284,var_2285,], output)
mutated_mod['func_2286'] = func_2286
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2567 = relay.var("var_2567", dtype = "int16", shape = ())#candidate|2567|()|var|int16
var_2568 = relay.var("var_2568", dtype = "int16", shape = (3, 8, 2))#candidate|2568|(3, 8, 2)|var|int16
bop_2569 = relay.greater(var_2567.astype('bool'), var_2568.astype('bool')) # shape=(3, 8, 2)
func_425_call = mod.get_global_var('func_425')
func_429_call = mutated_mod.get_global_var('func_429')
var_2573 = relay.var("var_2573", dtype = "int32", shape = (750,))#candidate|2573|(750,)|var|int32
call_2572 = func_425_call(relay.reshape(var_2573.astype('int32'), [10, 15, 5]), relay.reshape(var_2573.astype('int32'), [10, 15, 5]), )
call_2574 = func_425_call(relay.reshape(var_2573.astype('int32'), [10, 15, 5]), relay.reshape(var_2573.astype('int32'), [10, 15, 5]), )
func_1210_call = mod.get_global_var('func_1210')
func_1213_call = mutated_mod.get_global_var('func_1213')
var_2578 = relay.var("var_2578", dtype = "uint16", shape = (650,))#candidate|2578|(650,)|var|uint16
call_2577 = relay.TupleGetItem(func_1210_call(relay.reshape(var_2578.astype('uint16'), [10, 5, 13])), 0)
call_2579 = relay.TupleGetItem(func_1213_call(relay.reshape(var_2578.astype('uint16'), [10, 5, 13])), 0)
output = relay.Tuple([bop_2569,call_2572,var_2573,call_2577,var_2578,])
output2 = relay.Tuple([bop_2569,call_2574,var_2573,call_2579,var_2578,])
func_2581 = relay.Function([var_2567,var_2568,var_2573,var_2578,], output)
mod['func_2581'] = func_2581
mod = relay.transform.InferType()(mod)
var_2582 = relay.var("var_2582", dtype = "int16", shape = ())#candidate|2582|()|var|int16
var_2583 = relay.var("var_2583", dtype = "int16", shape = (3, 8, 2))#candidate|2583|(3, 8, 2)|var|int16
var_2584 = relay.var("var_2584", dtype = "int32", shape = (750,))#candidate|2584|(750,)|var|int32
var_2585 = relay.var("var_2585", dtype = "uint16", shape = (650,))#candidate|2585|(650,)|var|uint16
output = func_2581(var_2582,var_2583,var_2584,var_2585,)
func_2586 = relay.Function([var_2582,var_2583,var_2584,var_2585,], output)
mutated_mod['func_2586'] = func_2586
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2709 = relay.var("var_2709", dtype = "float32", shape = (6, 1, 15))#candidate|2709|(6, 1, 15)|var|float32
var_2710 = relay.var("var_2710", dtype = "float32", shape = (6, 11, 15))#candidate|2710|(6, 11, 15)|var|float32
bop_2711 = relay.subtract(var_2709.astype('float32'), var_2710.astype('float32')) # shape=(6, 11, 15)
uop_2716 = relay.sigmoid(var_2710.astype('float64')) # shape=(6, 11, 15)
output = relay.Tuple([bop_2711,uop_2716,])
output2 = relay.Tuple([bop_2711,uop_2716,])
func_2725 = relay.Function([var_2709,var_2710,], output)
mod['func_2725'] = func_2725
mod = relay.transform.InferType()(mod)
var_2726 = relay.var("var_2726", dtype = "float32", shape = (6, 1, 15))#candidate|2726|(6, 1, 15)|var|float32
var_2727 = relay.var("var_2727", dtype = "float32", shape = (6, 11, 15))#candidate|2727|(6, 11, 15)|var|float32
output = func_2725(var_2726,var_2727,)
func_2728 = relay.Function([var_2726,var_2727,], output)
mutated_mod['func_2728'] = func_2728
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3060 = relay.var("var_3060", dtype = "float64", shape = (14, 7, 2))#candidate|3060|(14, 7, 2)|var|float64
var_3061 = relay.var("var_3061", dtype = "float64", shape = (14, 7, 2))#candidate|3061|(14, 7, 2)|var|float64
bop_3062 = relay.less_equal(var_3060.astype('bool'), relay.reshape(var_3061.astype('bool'), relay.shape_of(var_3060))) # shape=(14, 7, 2)
func_1823_call = mod.get_global_var('func_1823')
func_1826_call = mutated_mod.get_global_var('func_1826')
var_3072 = relay.var("var_3072", dtype = "float64", shape = (756,))#candidate|3072|(756,)|var|float64
call_3071 = func_1823_call(relay.reshape(var_3072.astype('float64'), [9, 14, 6]), relay.reshape(var_3072.astype('float64'), [9, 14, 6]), )
call_3073 = func_1823_call(relay.reshape(var_3072.astype('float64'), [9, 14, 6]), relay.reshape(var_3072.astype('float64'), [9, 14, 6]), )
uop_3096 = relay.cosh(bop_3062.astype('float64')) # shape=(14, 7, 2)
output = relay.Tuple([call_3071,var_3072,uop_3096,])
output2 = relay.Tuple([call_3073,var_3072,uop_3096,])
func_3104 = relay.Function([var_3060,var_3061,var_3072,], output)
mod['func_3104'] = func_3104
mod = relay.transform.InferType()(mod)
var_3105 = relay.var("var_3105", dtype = "float64", shape = (14, 7, 2))#candidate|3105|(14, 7, 2)|var|float64
var_3106 = relay.var("var_3106", dtype = "float64", shape = (14, 7, 2))#candidate|3106|(14, 7, 2)|var|float64
var_3107 = relay.var("var_3107", dtype = "float64", shape = (756,))#candidate|3107|(756,)|var|float64
output = func_3104(var_3105,var_3106,var_3107,)
func_3108 = relay.Function([var_3105,var_3106,var_3107,], output)
mutated_mod['func_3108'] = func_3108
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3223 = relay.var("var_3223", dtype = "int8", shape = (1, 4, 14))#candidate|3223|(1, 4, 14)|var|int8
var_3224 = relay.var("var_3224", dtype = "int8", shape = (13, 4, 14))#candidate|3224|(13, 4, 14)|var|int8
bop_3225 = relay.bitwise_and(var_3223.astype('int8'), var_3224.astype('int8')) # shape=(13, 4, 14)
uop_3238 = relay.rsqrt(var_3224.astype('float64')) # shape=(13, 4, 14)
output = relay.Tuple([bop_3225,uop_3238,])
output2 = relay.Tuple([bop_3225,uop_3238,])
func_3240 = relay.Function([var_3223,var_3224,], output)
mod['func_3240'] = func_3240
mod = relay.transform.InferType()(mod)
var_3241 = relay.var("var_3241", dtype = "int8", shape = (1, 4, 14))#candidate|3241|(1, 4, 14)|var|int8
var_3242 = relay.var("var_3242", dtype = "int8", shape = (13, 4, 14))#candidate|3242|(13, 4, 14)|var|int8
output = func_3240(var_3241,var_3242,)
func_3243 = relay.Function([var_3241,var_3242,], output)
mutated_mod['func_3243'] = func_3243
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3391 = relay.var("var_3391", dtype = "uint32", shape = (9, 6, 15))#candidate|3391|(9, 6, 15)|var|uint32
const_3392 = relay.const([[[1,8,-5,8,-5,-5,8,9,-6,-6,8,-2,6,3,7],[7,8,-5,-10,-6,8,9,-7,-9,5,-3,-5,-9,7,4],[6,2,-7,-10,2,4,-7,-7,3,7,-3,-2,9,9,3],[-2,5,4,2,10,10,-5,9,9,-10,-10,1,1,-3,-6],[4,-5,3,-2,3,-1,8,-10,-8,8,9,10,10,-8,2],[9,-3,4,4,-2,-9,-2,9,-3,2,4,9,-9,-5,-4]],[[-4,-10,5,-2,-1,-8,7,7,-1,-2,4,-4,2,-4,4],[-2,10,5,10,-6,4,-3,-1,9,-3,-5,-9,-1,-4,-7],[-4,-7,5,-2,9,-5,-2,-6,-1,9,5,10,-4,-4,10],[7,10,-10,3,-9,-2,7,-5,10,-7,-7,-2,-6,-1,-5],[2,5,-5,7,9,-2,2,-4,4,2,-1,-2,7,-9,8],[9,5,2,-9,10,6,-8,3,7,5,7,-8,9,8,-6]],[[-2,-6,1,5,-8,-9,-8,5,8,-7,1,1,4,9,-9],[-8,-1,6,-2,-3,7,-5,8,6,-3,-1,10,6,-3,8],[1,3,-10,-4,-1,3,9,-4,-7,5,5,4,9,9,-6],[-3,1,-9,-4,-5,1,4,-5,9,9,2,1,9,-8,9],[3,3,8,9,8,-7,-2,-1,1,9,-3,4,-8,1,1],[-2,-3,-10,-10,3,1,-6,-2,9,4,-3,-10,-10,-10,-6]],[[2,5,4,4,-4,-1,8,-9,-2,-4,-8,-3,6,7,-6],[-6,1,-2,9,-1,7,-10,-7,5,-7,6,-6,6,-2,-7],[-7,7,-8,-5,8,-10,7,-8,-8,4,2,3,-6,-1,1],[1,2,-8,-8,7,-8,-1,-6,-9,-1,-10,-10,-2,-1,9],[10,-1,-7,-3,1,-8,-9,-4,-7,-9,-6,5,1,4,-10],[-3,-2,-5,3,-3,9,3,-2,1,10,10,-9,3,2,-2]],[[-4,-5,3,-5,-9,9,2,6,-9,-1,-8,-8,-6,9,-2],[-2,-9,-3,8,-7,6,5,-9,2,-9,-8,6,4,-9,-1],[5,5,10,-6,-6,5,2,2,10,-9,6,6,5,5,-4],[-3,10,4,-6,8,5,5,-3,9,8,-2,7,-6,9,-4],[-8,3,7,-7,8,-6,-1,2,-8,1,1,10,-3,-10,-10],[5,-3,5,6,4,9,8,-1,-8,-3,4,-2,4,5,-8]],[[-10,10,-1,-5,6,2,-1,7,-3,10,-4,4,3,1,-1],[10,4,-5,6,4,1,-1,-8,-6,-3,-1,-3,5,10,-3],[-7,-2,-6,9,-9,5,-9,-4,-5,10,-7,7,3,-7,9],[7,4,8,8,-1,10,-9,-2,-8,3,7,8,-1,5,7],[7,-10,5,8,-7,2,-7,-8,6,-6,-5,-1,6,-7,10],[-4,8,-8,4,-6,-7,8,-1,-10,4,6,-10,4,8,6]],[[-5,-5,-6,8,8,-1,-4,8,-7,2,6,-1,-6,-2,-6],[2,-9,-6,1,7,10,6,-8,1,5,-7,5,9,2,-6],[10,-10,7,5,2,7,1,7,-8,-5,6,-5,-1,-2,6],[1,-8,-4,-9,-2,1,4,-5,-1,3,-7,1,10,8,5],[2,9,-1,8,6,-10,1,8,6,10,-9,-8,9,-2,-2],[3,5,7,-7,-5,-4,9,-8,1,10,3,8,-10,9,-6]],[[-9,6,-10,-9,5,1,10,3,1,-1,-5,10,4,-2,2],[-4,6,-6,-1,7,-10,5,10,-7,4,-10,2,4,-10,1],[-4,-2,6,-9,2,5,4,-1,10,3,-3,2,-5,-3,3],[-6,2,-7,5,-5,2,8,-10,10,4,-3,-8,-6,1,9],[-5,1,2,-6,-6,3,-1,-5,9,-2,-1,-2,1,-4,-9],[-8,-8,2,1,-5,8,-6,-9,1,-8,-1,-9,-2,2,7]],[[-10,8,6,-8,-7,-3,-10,-6,-1,9,2,-10,6,5,7],[1,-5,-5,-8,-7,5,10,10,-8,-2,10,-6,7,2,10],[-2,-7,8,1,5,1,-9,-7,6,9,10,-4,-10,8,4],[1,9,-4,-10,-4,-4,-4,5,-3,-7,-3,-2,5,9,-3],[-3,9,-2,10,-10,8,-9,-9,4,-9,2,9,-10,-7,-10],[-2,-7,-5,-7,-3,-1,-3,3,-7,1,9,-10,1,-3,-9]]], dtype = "uint32")#candidate|3392|(9, 6, 15)|const|uint32
bop_3393 = relay.maximum(var_3391.astype('uint32'), relay.reshape(const_3392.astype('uint32'), relay.shape_of(var_3391))) # shape=(9, 6, 15)
func_335_call = mod.get_global_var('func_335')
func_339_call = mutated_mod.get_global_var('func_339')
var_3412 = relay.var("var_3412", dtype = "float64", shape = (384,))#candidate|3412|(384,)|var|float64
call_3411 = relay.TupleGetItem(func_335_call(relay.reshape(var_3412.astype('float64'), [16, 3, 8]), relay.reshape(var_3412.astype('float64'), [16, 3, 8]), ), 0)
call_3413 = relay.TupleGetItem(func_339_call(relay.reshape(var_3412.astype('float64'), [16, 3, 8]), relay.reshape(var_3412.astype('float64'), [16, 3, 8]), ), 0)
output = relay.Tuple([bop_3393,call_3411,var_3412,])
output2 = relay.Tuple([bop_3393,call_3413,var_3412,])
func_3415 = relay.Function([var_3391,var_3412,], output)
mod['func_3415'] = func_3415
mod = relay.transform.InferType()(mod)
var_3416 = relay.var("var_3416", dtype = "uint32", shape = (9, 6, 15))#candidate|3416|(9, 6, 15)|var|uint32
var_3417 = relay.var("var_3417", dtype = "float64", shape = (384,))#candidate|3417|(384,)|var|float64
output = func_3415(var_3416,var_3417,)
func_3418 = relay.Function([var_3416,var_3417,], output)
mutated_mod['func_3418'] = func_3418
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3429 = relay.var("var_3429", dtype = "int64", shape = ())#candidate|3429|()|var|int64
var_3430 = relay.var("var_3430", dtype = "int64", shape = (12, 5, 7))#candidate|3430|(12, 5, 7)|var|int64
bop_3431 = relay.bitwise_xor(var_3429.astype('int64'), var_3430.astype('int64')) # shape=(12, 5, 7)
bop_3434 = relay.bitwise_or(bop_3431.astype('int32'), var_3429.astype('int32')) # shape=(12, 5, 7)
uop_3446 = relay.sin(bop_3431.astype('float32')) # shape=(12, 5, 7)
func_2281_call = mod.get_global_var('func_2281')
func_2286_call = mutated_mod.get_global_var('func_2286')
const_3475 = relay.const([2,-1,-3,7,-6,9,7,-10,-5,-1,-6,7,10,-9,4,1,9,-7,4,2,-4,-5,7,5,10,10,-10,9,4,-5,6,-2,-8,7,6,2,-2,-4,-6,3,-6,-1,-8,4,-8,10,-5,-1,5,6,9,3,7,-2,-6,-9,6,7,-10,-7,2,-4,-2,-1,-3,8,7,5,9,-6,-10,7,5,-1,-9,-5,8,9,2,-8,-8,-7,8,-8,-9,3,-9,5,-4,-1,9,-5,3,8,5,2,-2,8,-3,8,1,9,-2,4,-5,1,8,8,2,-1,-1,10,-2,-7,5,4,9,-5,-10,-8,-1,8,5,-5,3,3,6,9,-2,-2,-2,-2,-2,1,-6,-8,8,-10,-3,9,8,-9,-7,-4,-5,-5,-5,-7,6,2,4,10,-7,6,-5,5,9,10,2,-5,2,-3,7,-7,-5,6,10,-5,6,8,-6,-7,-7,-1,2,-6,-3,3,-7,4,9,5,-8,8,-2,7,9,3,10,-5,-7,7,9,4,8,2,-10,9,-7,-1,-3,-7,2,-8,-3,5,3,-3,-9,10,5,-7,9,4,-4,7,5,10,5,10,-9,9,6,-6,-7,6,-8,-10,10,-5,8,2,7,1,-7,1,5,-10,1,7,4,-1,-6,-9,4,-1,-7,6,-4,-7,7,9,-7,-4,-6,-6,4,-1,10,-9,6,-9,-4,9,1,6,-4,-1,-3,9,5,10,-7,-2,-2,1,10,1,6,-1,-7,-6,-4,-4,-1,-8,10,-8,8,-4,-10,10,-7,-5,2,10,4,8,3,5,-7,-2,1,-4,9,-3,6,-2,-4,-8,2,-4,5,4,-8,-4,2,-1,-8,-5,-4,-8,2,5,-5,-2,2,5,2,7,-8,2,-9,-6,10,3,-10,6,1,7,6,-6,7,-8,-1,-8,8,-1,-3,-5,8,6,-3,9,-6,9,-8,-2,6,-6,5,-6,-4,-3,3,1,-7,9,-3,-3,7,-1,-9,-9,-1,2,7,-10,-4,-1,10,-8,10,9,6,-2,-6,-7,6,-9,-9,4,8,10,-6,9,-2,4,-4,7,5,-4,-2,5,7,6,3,-5,-3,-3,5,-6,-8,-10,3,4,-9,-8,-1,1,-5,5,7,8,-2,-1,-2,-5,5,-3,-5,6,-9,-6,-5,8,4,-9,3,2,-10,-6,8,-3,7,1,4,7,-2,-4,10,1,7,-4,9,10,9,-2,-7,1,-2,5,2,1,-5,-2,-9,10,3,8,1,1,-6,-6,9,-5,10,1,4,-5,-5,7,-2,-1,10,-6,9,-1,-2,6,-2,4,-2,5,7,8,-9,-7,9,-5,-7,-2,-8,-9,-7,4,5,5,-5,5,2,-3,8,3,7,-8,1,-9,2,1,-3,3,3,5,-8,-9,4,1,-5,9,2,-6,-9,2,-3,3,8,-3,-1,10,-1,-10,-4,-6,3,8,-7,8,9,7,3,-7,-3,-1,-1,6,1,-6,4,1,-9,5,-3,-2,-5,4,9,8,-6,-8,9,6,9,2,-3,-3,1,-10,2,-9,-3,4,8,5,10,-8,7,-8,5,-2,-4,5,-2,2,-7,1,-5,3,7,-5,1,-6,9,-5,-6,5,1,-9,-4,-8,-3,-2,-4,-2,-3,5,-2,2,-7,-8,-5,4,4,10,-4,9,-9,-6,8,-3,-8,-4,-1,4,5,-2,-4,8,-10,5,9,1,-9,-3,6,-9,-6,5,-1,-7,10,7,-4,3,5,7,-4,-4,-7,1,4,-8,-2,10,-3,-10,-6,10,-5,-5,-2,6,1,2,-8,-1,-2,-5,-3,8,3,2,8,-9,-4,-3,7,6,-1,5,-9,4,-7,-6,5,8,-5,-7,-10,-7,-3,5,-10,-9,9,-2,10,2,6,-8,3,9,6,-4,-4,-3,1,-8,-8,4,1,-8,2,8,7,9,2,9,-5,4,-1,-8,-6,-5,-3,4,3,-5,-1,2,-9,-7,10,8,-8,-7,-3,5,-3,-6,7,10,-5,6,-8,-3,3,5,-5,-1,7,-5,-4,10,1,8,9,10,3,-7,6,7,9,3,6,10,-3,-4,7,8,1,4,2,-3,9,7,9,5,7,-3,-3,6,9,-2,-5,2,4,5,9,-4,-7,6,-6,-5,8,-6,4,6,4,-10,8,-7,8,-2,-10,-9,-9,5,3,-8,2,1,-10,7,-5,-4,-9,-9,3,-7,-8,-9,9,-2,-8,5,-8,3,-5,1,9,5,6,-6,5,-1,-10,-10,6,3,-4,-3,-5,10,9,10,-7,-6,10,2,-7,-10,3,6,-4,5,-7,2,-5,2,4,-9,-6,3,-9,1,6,-1,-3,-10,7,-5,-4,-8,9,-10,-1,-1,-6,-5,9,-10,-9,-8,9,-7,3,-3,-1,5,-1,3,6,9,10,6,9,-8,7,1,2,-6,-2,-4,-10,-4,-4,2,-1,-1,-4,2,-4,-4,-4,1,-4,3,-6,10,-5,-8,1,8,-9,-5,-9,8,7,8,-8,-9,4,10,-2,7,-5,6,-2,-10,-7,-8,1,-2,8,2,-7,-10,-7,-4,-1,6,-5,-3,-9,2,7,-4,5,-9,-6,-1,-5,5,-1,3,-9,7,-3,4,1,-10,5,-9,10,5,10,-10,-7,9,3,8,-10,9,-3,-9,-9,5,5,-4,1,-2,5,5,4,-10,5,2,-2,3,3,4,-1,6,2,-10,9,-1,1,-8,2,-5,-7,4,-9,9,-9,4,1,-5,-1,-3,6,-7,-1,-3,5,10,6,-1,1,6,2,-9,1,-3,8,5,9,-10,-8,-3,-4,5,7,6,6,9,4,-1,3,-1,10,-4,9,9,-10,10,-7,5,-1,-5,4,6,-3,5,1,-4,2,-9,-3,-8,-3,6,-3,4,-1,10,-3,3,3,2,6,4,6,-8,-10,-2,3,2,9,10,5,7,-8,3,-10,7,9,-3,3,-3,-8,-5,-3,8,3,3,-10,5,1,-9,-1,7,8,-6,-1,-3,4,-9,4,-10,-5,-6,-5,1,7,9,8,9,-5,-6,-3,-7,-6,-5,-4,-9,2,-4,-6,-5,8,-10,-9,4,-3,-2,7,3,-6,4,-5,-10,10,-6,-10,-9,2,-5,-8,6,-7,-8,-8,8,1,-5,-6,-5,-1,-3,1,-7,1,3,1,3,-8,4,3,-3,7,3,4,-10,-9,4,-2,5,7,3,9,-7,8,-4,-7,-3,4,-8,6,-3,-8,6,-2,-3,9,6,-3,-5,-8,2,-6,10,3,-10,3,-3,-2,10,8,-10,1,-2,-1,-7,-8,2,4,-3,9,3,7,-2,-4,1,-6,-8,-9,3,-7,-8,-9,-8,4,7,7,5,7,2,-8,3,8,-2,2,-6,6,-6,6,-8,-5,4,-7,7,4,7,-4,7,2,8,7,-2,10,9,-2,-6,2,-1,7,-6,7,5,4,5,3,9,-7,-4,1,-5,-10,1,1,2,-10,-10,-2,10,9,3,9,4,4,-5,3,9,-10,-5,2,8,-4,1,-3,1,8,-4,7,-5,7,-8,-9,-4,-5,8,6,1,2,7,5,-7,-3,10,-8,1], dtype = "uint16")#candidate|3475|(1344,)|const|uint16
var_3476 = relay.var("var_3476", dtype = "uint16", shape = (390,))#candidate|3476|(390,)|var|uint16
call_3474 = relay.TupleGetItem(func_2281_call(relay.reshape(const_3475.astype('uint16'), [14, 12, 8]), relay.reshape(const_3475.astype('uint16'), [14, 12, 8]), relay.reshape(var_3429.astype('uint16'), []), relay.reshape(var_3476.astype('uint16'), [390,]), ), 3)
call_3477 = relay.TupleGetItem(func_2286_call(relay.reshape(const_3475.astype('uint16'), [14, 12, 8]), relay.reshape(const_3475.astype('uint16'), [14, 12, 8]), relay.reshape(var_3429.astype('uint16'), []), relay.reshape(var_3476.astype('uint16'), [390,]), ), 3)
func_2186_call = mod.get_global_var('func_2186')
func_2190_call = mutated_mod.get_global_var('func_2190')
var_3479 = relay.var("var_3479", dtype = "int16", shape = (336,))#candidate|3479|(336,)|var|int16
call_3478 = relay.TupleGetItem(func_2186_call(relay.reshape(var_3479.astype('int16'), [3, 7, 16]), relay.reshape(var_3479.astype('int16'), [3, 7, 16]), relay.reshape(call_3474.astype('uint16'), []), ), 1)
call_3480 = relay.TupleGetItem(func_2190_call(relay.reshape(var_3479.astype('int16'), [3, 7, 16]), relay.reshape(var_3479.astype('int16'), [3, 7, 16]), relay.reshape(call_3474.astype('uint16'), []), ), 1)
uop_3481 = relay.exp(uop_3446.astype('float64')) # shape=(12, 5, 7)
func_659_call = mod.get_global_var('func_659')
func_661_call = mutated_mod.get_global_var('func_661')
const_3485 = relay.const([[-1.912811,-2.677550,-1.429186,7.173937,9.799135,6.367291,-3.415422,-9.020363,5.753353,8.128834,4.775682,-3.073109,-2.668658,-8.227803,0.147327,-8.608403,0.107049,8.780959,-7.253104,7.935296,2.748236,8.042666,3.554999,6.543119,6.810317,1.293475,-2.335167,1.743340,1.241141,-1.425861,-9.519006,8.271613,2.457247,7.627364,5.395288,-7.124547,1.079095,7.043647,4.918337,9.104171,6.034937,6.163823,-1.022086,-2.616197,-5.182435,8.283183,-8.079604,-7.205817,9.395968,5.603991,4.482312,1.815112,5.714821,3.321611,1.070380,-5.220242,6.574085,1.121843,-6.782340,-5.451645,-6.295255,2.995157,-7.925693,-9.489881,2.468412,-9.000503,6.249130,2.070246,-7.308243,9.016165,7.887897,-2.470101,4.866597,-1.421699,-8.163123,-2.113480,-5.255273,4.565225,-5.197083,-3.913222,7.394418,-2.093103,-4.054190,0.003473,-6.362094,7.893155,-7.289704,6.684424],[5.131471,9.226402,-6.853762,-5.429847,0.799216,4.362524,5.830727,8.654572,-3.197911,-9.682027,4.453330,-8.402754,-9.866525,0.504024,8.482790,8.743252,8.096567,-2.376213,-2.288736,-1.351888,-9.928190,7.425186,-9.504916,-1.529356,-3.384241,8.762247,4.718926,-1.347601,4.298741,-8.069043,-8.693572,6.810271,8.096631,2.516889,-4.617603,2.790521,5.627414,4.066629,-6.770596,-4.682982,-0.069820,-9.687253,9.500436,1.462955,0.719206,-5.866996,0.300807,7.501216,1.343890,3.140133,-7.903806,1.259534,1.495413,7.458997,-5.220701,5.683367,-4.345122,-3.504208,-1.098286,-8.477642,-7.552998,7.388354,8.738244,-6.282387,8.401622,-4.626916,-3.958951,9.696566,-8.840037,2.178966,-8.711209,1.867288,5.268901,0.517258,-9.662589,6.203564,-1.003589,-7.561941,5.795138,-4.613128,-2.990595,-5.463806,-7.025455,8.230892,5.926425,-7.264928,7.295833,-6.667324],[2.951671,-7.213595,6.508824,-5.996272,-2.639932,8.741841,9.033233,-2.334009,4.226286,5.547575,-4.988376,-4.257506,7.523838,5.076669,4.694839,1.599129,3.295757,-0.199252,0.935578,-4.695503,2.627866,5.618138,-0.806891,9.851764,5.437703,0.788801,1.049345,2.557570,-0.476024,1.923515,-9.474369,6.173900,-0.255019,-4.890062,-2.776938,1.197721,4.333487,6.435337,-8.807649,1.733907,2.170663,8.942555,-6.095636,0.819458,5.684902,-3.526733,-2.157926,-9.806160,1.500068,-5.256131,6.262615,-1.101189,1.729662,-5.210846,-5.316066,5.444159,4.145508,-4.387454,5.281630,-1.360221,-5.774678,-1.937220,-7.463898,6.836982,9.476954,-7.495347,8.563626,1.588919,-2.021976,-3.704334,5.005005,-0.801385,-2.685806,2.538445,-2.830757,-1.434752,-5.114260,6.466397,9.587391,2.522713,8.441988,-3.084668,-9.339792,6.356978,4.321759,0.404412,8.819987,3.914283],[-4.897625,0.122355,6.321096,8.114733,-7.658809,-5.923591,3.370387,-2.521371,2.980252,5.377573,8.969165,-2.797040,-6.414216,2.858642,9.291379,5.195126,3.067284,5.637611,-6.937429,4.917507,3.431178,6.616807,7.854335,4.370542,-6.430384,-0.902342,4.638374,-5.602854,-1.913913,4.513727,6.741000,3.009714,6.310999,7.778028,6.820214,-1.847869,-7.411260,1.560919,-3.239990,7.127131,1.751257,-9.309143,-3.351818,-9.074105,-3.000343,9.016151,-2.290496,7.337084,8.419536,4.403097,7.888850,2.651124,7.279542,0.916206,-0.173620,-2.785675,-9.503317,-4.274814,-8.064084,1.515668,6.232325,-1.152195,5.312261,0.302374,-6.454656,4.387400,7.025719,4.769291,7.193897,-4.726077,9.614894,2.236599,1.375453,5.452736,-5.570388,-2.192046,8.261993,3.962973,-5.150688,8.296132,5.121409,-8.388547,2.317934,-9.977591,-2.057441,-8.376461,8.411599,0.507432],[-7.045968,-9.243988,0.671574,-6.554845,6.831012,9.304250,-0.266809,-8.284752,5.616785,-3.001981,1.902831,1.646238,9.446177,2.157780,5.041717,3.309601,2.451313,-9.047794,9.571035,5.529465,-6.413368,-7.126839,1.110894,9.045293,-1.080224,-2.224958,-8.308171,3.921721,3.080537,-8.063145,-7.571200,-6.362331,-4.231019,-3.646766,7.851614,-4.815947,7.548814,6.950168,-8.504162,8.546082,-6.371735,-9.389606,-7.911315,3.477532,-1.705089,-1.722875,1.222991,6.269413,-4.887342,8.413257,6.435764,9.959043,0.279801,-5.501600,2.568837,-2.942039,0.615132,-8.566653,-6.479494,7.244682,-6.260493,3.306049,2.221310,9.907024,7.298261,4.248042,-2.010413,2.850362,8.242125,0.711318,5.756680,2.983227,-3.731129,-4.241468,8.195965,-3.912383,-5.752822,7.041050,-1.292209,7.751896,-0.421321,-7.490817,3.643695,-7.276144,5.462726,-8.123852,1.250662,3.842889],[9.614888,-1.811841,-5.494911,-2.944074,5.632609,-5.859872,-7.553005,8.099602,-3.007459,-3.660933,8.732822,1.307370,-3.714410,3.194572,7.620366,-0.256100,4.548280,0.211545,0.132716,-3.294123,4.234375,-0.561107,-9.100380,-7.190690,8.273995,-1.923674,5.970932,-1.384108,3.916611,3.490939,-4.557931,-4.727671,2.772729,6.981198,2.385187,3.273956,-1.407724,4.327949,2.249593,-5.407947,-4.858024,9.208786,-2.505114,6.397260,2.353273,-7.180033,-4.888790,7.615932,-1.680634,-6.895713,-6.250563,-0.938781,0.779192,8.961238,-0.244003,-1.790184,6.708205,-0.538514,9.858722,7.162592,6.631556,-2.626192,-3.071711,8.754368,7.113785,7.886078,5.884485,-6.440927,8.125833,9.940950,0.354065,-2.060392,2.827697,-7.230136,-5.362281,4.961695,7.897916,-9.562863,-8.701656,-8.036628,5.797272,5.016061,-7.840543,-7.579527,-2.377650,1.572649,2.736505,-5.542037],[-2.887929,7.966764,-5.620904,-3.115706,-0.531166,-5.477685,-8.484830,-7.257855,-2.769792,-5.488890,-7.268609,-8.867775,-8.075279,-7.357169,6.674894,-8.601347,-0.809835,-7.506219,5.233569,-6.709803,1.599130,-8.160021,-8.625538,-3.849522,-4.281663,6.250584,9.757428,4.492945,7.377895,2.540325,-2.765748,-5.027427,3.577328,-9.524762,-4.327150,-7.336093,6.150543,4.565272,-9.905323,-8.454500,8.398578,2.054855,0.404048,-1.467717,-3.677683,8.206031,-2.890300,8.663080,-3.144102,-5.484757,8.379922,4.882332,4.165174,-8.831785,-2.363312,-6.698741,-7.221305,-8.742912,4.831867,-4.178833,-0.575214,-2.991360,6.263348,-5.001885,0.833608,-6.366393,6.246026,7.566219,1.281578,-4.906309,-2.553611,8.499256,-8.750390,-3.048587,-9.412683,-0.389343,-1.561157,9.910999,-8.654345,-1.582690,-1.425367,-3.483041,-1.853324,-1.927967,0.272775,9.054245,-8.104299,-8.228061]], dtype = "float64")#candidate|3485|(7, 88)|const|float64
call_3484 = relay.TupleGetItem(func_659_call(relay.reshape(const_3485.astype('float64'), [4, 14, 11])), 0)
call_3486 = relay.TupleGetItem(func_661_call(relay.reshape(const_3485.astype('float64'), [4, 14, 11])), 0)
output = relay.Tuple([bop_3434,call_3474,const_3475,var_3476,call_3478,var_3479,uop_3481,call_3484,const_3485,])
output2 = relay.Tuple([bop_3434,call_3477,const_3475,var_3476,call_3480,var_3479,uop_3481,call_3486,const_3485,])
func_3491 = relay.Function([var_3429,var_3430,var_3476,var_3479,], output)
mod['func_3491'] = func_3491
mod = relay.transform.InferType()(mod)
mutated_mod['func_3491'] = func_3491
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3491_call = mutated_mod.get_global_var('func_3491')
var_3493 = relay.var("var_3493", dtype = "int64", shape = ())#candidate|3493|()|var|int64
var_3494 = relay.var("var_3494", dtype = "int64", shape = (12, 5, 7))#candidate|3494|(12, 5, 7)|var|int64
var_3495 = relay.var("var_3495", dtype = "uint16", shape = (390,))#candidate|3495|(390,)|var|uint16
var_3496 = relay.var("var_3496", dtype = "int16", shape = (336,))#candidate|3496|(336,)|var|int16
call_3492 = func_3491_call(var_3493,var_3494,var_3495,var_3496,)
output = call_3492
func_3497 = relay.Function([var_3493,var_3494,var_3495,var_3496,], output)
mutated_mod['func_3497'] = func_3497
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3561 = relay.var("var_3561", dtype = "float32", shape = (10, 16, 12))#candidate|3561|(10, 16, 12)|var|float32
uop_3562 = relay.atan(var_3561.astype('float32')) # shape=(10, 16, 12)
func_1798_call = mod.get_global_var('func_1798')
func_1801_call = mutated_mod.get_global_var('func_1801')
const_3565 = relay.const([7.264357,1.874742,6.181213,2.117235,6.923357,-8.370200,-0.588335,-7.874430,-2.572679,-8.099728,3.933363,0.628607,7.235822,-1.562411,2.571865,1.394544,-6.409062,-1.385399,-9.630593,1.881748,5.290402,6.126966,-4.738259,0.772447,8.098838,-3.327765,3.231280,-4.464029,3.171159,6.035163,-7.453005,3.063290,9.517512,-8.795815,-0.448089,-8.528675,-0.797876,1.116715,9.113977,1.099798,7.793060,3.773878,5.241204,7.868928,1.795670,1.778668,8.794682,-5.843387,-4.174261,-4.791273,3.215267,5.256416,6.352359,-4.958973,6.913200,3.700881,-6.157438,3.651450,-6.891570,-7.932650,4.371054,8.529720,3.303923,2.886468,4.134071,-7.777319,-5.843351,-3.571858,-9.098839,-5.276580,-4.834462,-6.433263,8.097521,-3.226031,-6.046510,0.274602,-4.385097,-1.115448,-7.554848,-9.389740,-3.657720,-5.594593,-9.441156,-7.852700,-6.501991,-4.996005,-8.737492,5.426710,-4.920426,5.478199,-7.127241,-1.935995,-0.476627,-6.142010,-8.709387,-5.264625,3.072218,-8.019147,9.632319,2.266695,9.061889,-9.046850,-0.196836,4.587851,2.251685,-8.298540,8.717404,-4.038915,5.107247,6.730604,8.576968,-2.588779,-4.329171,-2.839231,7.800894,0.113552,0.504160,-8.616956,8.158010,-1.116228,5.798808,3.793943,3.309513,-5.611101,-2.992255,5.635736,8.069810,7.165103,-9.946181,0.363975,9.468538,-6.121108,-7.231389,-2.464765,2.376707,-7.178556,9.044792,1.391203,8.449549,-0.095215,4.263518,-7.264061,2.744778,4.945046,9.970044,-9.614482,3.447150,-9.772692,6.335226,-0.888027,3.176119,6.674681,-4.814349,-1.585465,-2.076161,7.597092,-3.480725,-8.800497,4.195952,5.678172,-2.361918,8.321051,-0.822434,7.037738,0.896175,-7.022071,-8.345230,9.769515,6.025055,3.173186,-4.265041,8.547393,-4.477575,9.484527,4.603168,-8.490707,-9.033157,-5.730804,8.185842,-5.486902,7.963335,-8.688870,2.960625,-5.397725,1.983482,-2.811763,-4.496668,-7.972622,-7.619566,1.784691,-2.924205,5.300781,0.434217,4.050011,-6.092128,1.089810,6.910836,9.090534,-1.730587,3.087330,4.479245,5.715537,4.406912,-4.468665,9.576922,-4.652323,-9.999269,-2.257107,6.490934,-8.854827,-0.580488,8.419757,1.469422,-8.336800,-1.007664,3.206261,8.554023,4.825220,-6.534794,-2.363402,9.857215,0.541469,6.089646,-2.255063,-8.500086,-1.121254,-4.445837,-4.751768,-5.413680,8.682436,-8.716023,3.694300,-4.332712,-0.677459,-8.537559,-4.675635,9.315691,2.317348,-1.012744,1.612614,1.407204,6.966541,6.550162,1.471531,-8.915233,-1.708371,-2.370770,-5.756449,5.134918,9.530147,-1.474058,0.009342,-6.710433,-8.160997,-8.346894,0.617813,6.727210,-0.841494,-0.006547,-7.371377,-2.314878,7.596148,-5.083400,7.307512,-2.200520,-2.524200,1.612242,2.882308,-0.448098,-6.714207,7.734616,-4.515561,-7.847207,-5.014684,8.404382,1.084522,1.017234,-0.262059,-6.433479,8.927049,-2.263755,8.822709,-7.460730,1.828464,-1.629132,4.292443,1.387552,-9.465551,-3.772680,-5.730007,-4.426746,-4.671342,-7.471170,8.393516,-8.831767,-2.201926,-9.210122,-6.110651,-0.567984,-9.080819,9.516685,-4.600330,6.396145,-0.744002,7.025450,0.793450,-6.698706,-2.055290,-6.165990,-6.577210,-0.473165,-4.858708,-3.113031,1.981300,-3.398369,-6.344502,-3.051252,4.850802,8.055403,7.947172,-6.084731,-0.187516,-4.753788,-9.303000,1.581000,-9.641260,6.676372,-1.889936,2.527988,-4.360756,8.466071,-0.506655,2.088232,-2.492444,9.153188,-5.400681,-4.667128,0.697660,9.858658,-4.640570,-3.924692,-7.909113,5.309290,9.775262,1.912831,-6.188536,-3.849139,-6.446211,-7.740660,6.247495,-2.795780,-6.643226,-2.855964,-0.682224,8.841345,-6.414463,4.593800,4.374467,-2.034666,5.010192,-8.585585,-0.565135,-7.322198,-3.180162,9.022499,3.719952,8.340167,3.859490,0.469604,9.872702,-0.351437,-6.071332,7.917566,-4.039224,-3.091849,3.240597,5.067580,-1.800690,-1.742277,4.499787,-5.157760,8.976453,-3.485363,8.175833,-4.369086,-0.052412,7.853475,-0.010799,-4.995333,-9.613167,1.861522,9.994820,3.172765,-0.609679,-9.883886,-9.582994,-6.519472,4.687355,-1.016152,-4.459844,2.277872,2.628177,3.308704,9.745620,-0.995207,3.850632,7.689001,-6.426282,-1.993048,-8.210065,-0.699953,1.549807,3.011422,3.488416,2.791609,-9.413566,-9.880060,9.203944,-9.371862,2.580571,-2.840450,-8.838592,3.449527,6.958753,6.859557,1.055280,-7.847411,8.839256,3.577011,2.429019,-6.401332,7.380225,8.783689,9.488835,-1.942650,-7.058465,9.532312,-3.485863,7.302146,-1.248419,-3.911506,8.645685,-4.687722,-2.279373,3.676263,-0.524458,6.559351,6.654139,7.052538,-1.129279,2.816239,-2.176183,3.739226,-9.492666,-8.362552,-6.625755,-3.663464,7.366503,-1.983423,-1.724601,7.851152,3.395964,-6.407330,1.042797,8.066440,7.775527,-6.975754,7.284707,4.257121,0.136793,-8.464050,-6.359020,8.610878,1.336428,0.532205,7.961123,9.386710,3.724061,0.305090,8.411516,4.233359,-9.135282,-9.330893,5.260051,5.181762,-2.260483,-4.359566,-2.790728,-1.393796,5.325460,6.581472,4.662774,-9.234028,-9.396451,0.344124,-7.271440,5.176814,7.352173,3.423463,9.407923,5.310313,-1.511684,-4.766789,1.346464,4.616123,-3.568754,7.472113,8.190029,-5.602927,-4.038916,3.074525,-0.990619,0.945614,-8.550291,5.332560,6.199634,5.513830,-0.620223,-6.031081,7.430759,9.358124,-6.395627,0.066464,-0.549146,1.363614,9.620609,5.913239,0.487852,4.067031,6.985057,7.661818,8.252662,2.367794,-8.152753,0.530734,6.116300,4.824893,-0.784575,0.791308,0.606018,7.080862,6.918279,-6.148142,5.995077,-9.139822,-2.304551,3.816211,7.847591,-4.702614,-2.848594,1.976783,-5.487113,5.832319,6.913433,8.703952,5.362684,8.527741,4.376806,-9.082964,-3.328443,-3.069420,-1.598655,-8.317441,-4.489363,-6.887204,2.604550,-4.544868,-4.129632,-9.036608,-1.066692,-6.163393,-6.706540,-6.866811,-9.428353,-9.072463,8.123641,1.886154,-8.441789,5.436146,-6.843437,0.447291,8.280733,6.289486,9.617176,3.389172,1.722069,4.645119,-9.356450,-6.781124,-1.532482,6.290167,3.284449,-6.875046,-8.343836,-0.842509,3.634475,-3.422027,6.036144,-6.759945,9.725887,-3.895874,-1.655574,-3.453512,7.261963,8.257190,4.122762,5.243425,9.529603,-1.255759,-9.391835,8.939766,-4.844284,-5.707044,7.080794,-0.270831,8.446617,-4.834118,6.148853,-1.934616,1.349833,-3.164008,-6.686805,2.383635,8.701364,0.555160,-4.398666,4.914704,9.045813,-4.914971,1.661184,5.302701,4.161502,-7.053733,4.587955,9.107064,-6.190513,2.678235,4.419260,-2.723492,8.679733,-0.012623,-9.599440,-4.286619,-0.859663,3.278025,-3.863307,-5.420051,-8.677143,-5.551059,3.248364,-7.866336,2.816885,-3.849087,-8.552891,-5.947648,-9.608062,9.807245,-2.901056,-5.227238,-8.382396,-0.350930,8.648728,-6.870826,8.770986,5.001048,-6.227512,-3.450181,4.427839,-1.293945,-8.060225,3.075260,-7.374811,2.784359,2.850436,4.118538,3.135009,-6.606848,-2.095280,-1.317474,1.002451,-2.882143,9.707494,1.971252,6.749991,-4.477481,-1.500872,-8.732557,-3.230893,-8.005062,-2.124517,6.472937,0.329846,-4.499170,-7.041245,-6.815491,-5.037196,4.090036,9.715902,-8.001766,3.551519,-8.955789,1.362595,-2.649841,8.852447,8.204487,-3.412683,2.943158,-1.944118,7.927159,0.513937,-0.958588,-9.546365,9.652663,-6.730840,-0.422963,9.985070,-8.888923,9.430280,-5.084975,3.703039,-0.501575,9.536965,4.729576,9.597712,-5.595992,-2.284925,-8.407176,1.183578,9.633956,-3.322749,6.998844,-4.006075,-8.374326,-2.653921,-7.054497,-0.904281,2.138792,5.436241,2.078937,7.386721,7.332254,-4.220363,-5.858449,4.180721,8.054998,8.876177,0.169151,-3.929864,7.627801,5.817528,-1.799130,2.571212,6.550766,7.706461,5.126219,-7.946214,-8.647269,0.598017,-9.802255,-8.740374,-6.753150,-3.639060,-7.619172,7.725076,4.332541,9.983657,-1.050000,6.708421,6.710568,-6.414355,2.901143,7.234793,0.368289,-8.952038,-2.905432,0.759131,-5.325007,-4.703636,9.488332,9.885619,-5.889070,-7.451367,7.520470,-6.255301,-5.078249,3.186415,-9.069924,-3.994486,5.367959,9.052261,4.728519,-6.324754,1.791780,-0.751908,-9.078722,0.552696,4.330759,0.323693,-5.976145,1.388755,-9.932257,-9.615309,-4.453180,-0.237865,-0.425031,8.360825,1.314682,5.504238,-2.141248,7.662199,3.639437,-7.109145,-8.784096,6.956049,8.939778,-2.641673,-6.841296,-9.541447,2.348312,-8.714010,0.630230,3.247601,-2.308452,5.334223,9.657974,9.143271,5.451159,6.895341,-5.717769,-2.294508,2.947155,1.101340,-6.193798,-2.395475,1.261687,8.161872,-9.775508,2.926305,9.861926,-2.875518,0.978078,-4.903229,7.179114,-6.197968,-2.468624,8.720199,7.838007,5.264973,5.407942,8.456478,5.842927,7.070419,-9.773968,-2.055691,9.666307,-8.948486,-3.144047,6.081994,-0.484701,3.065679,5.139146,-0.474396,-1.887841,-2.936977,-3.177091,-8.033779,-8.101666,5.545854,-1.026006,-1.842374,-8.195573,-3.399554,9.039775,-4.906011,0.269647,7.949409,9.188169,-3.467221,8.177084,3.632424,-3.240503,0.882201,9.674355,6.202710,-1.775408,0.278753,-2.230260,-6.480579,7.512471,5.077473,-1.029947,6.284032,4.373796,7.224283,-8.132767,-2.874404,-9.654260,8.681562,-1.924655,1.503149,8.089417,-3.578228,-4.551122,2.755410,6.870141,0.963719,3.892554,4.717753,-0.323306,-3.812267,7.857093,3.159272,-1.292763,2.391323,-4.816145,-6.576273,5.329322,6.530586,4.516813,-3.251023,-3.179806,-0.750576,-0.094725,-0.849900,5.631519,-8.224832,0.475506,-5.653976,-3.212872,-7.136720,5.293196,-2.564009,9.764475,-6.679914,1.358364,-4.421086,-4.928241,9.005313,-9.457586,5.313404,-1.365015,9.147654,-4.888857,-3.310217,4.374166,4.009597,4.155017,-6.399165,2.647454,2.784026,6.715865,-7.123773,-5.771638,-1.041645,0.496997,-1.266052,3.523544,2.887362,-7.856718,6.324242,4.090361,-5.217603,-3.170259,5.828732,0.959507,-2.607811,-4.648049,4.276062,0.360155,-0.203698,5.307885,-4.846226,-2.671625,-1.713002,7.227320,-8.855663,-0.071189,6.737911,6.751339,3.527281], dtype = "float32")#candidate|3565|(980,)|const|float32
const_3566 = relay.const([8,1,10,9,5,6,10,4,-1,6,6,-5,-1,9,10,-8,-5,4,-6,5,5,-3,-1,8,-10,9,8,-2,-7,-1,-9,5,-7,-1,-4,-4,-2,-3,-4,6,-5,1,-1,4,-6,-4,3,8,10,5,-8,2,-6,2,6,-5,4,-8,-2,10,-7,-10,-6,4,-8,10,8,5,-9,-5,4,9,7,-1,-10,-7,-7,-9,5,-9,-2,8,-2,-3,9,-7,-7,1,4,5,2,10,8,2,-5,-8,-9,9,1,-2,10,-5,6,3,5,5,-1,-9,-6,-4,-10,-10,-1,10,-2,4,4,9,5,-1,1,10,-10,-10,-7,-9,-9,8,9,3,10,3,9,3,7,4,9,1,10,6,-8,-6,6,-6,-2,6,8,-6,-3,-9,-5,8,7,-3,-1,-8,-6,3,-8,6,-7,2,4,-2,-8,-7,6,-7,5,1,9,-2,-4,4,5,4,4,7,7,-3,10,8,-5,10,2,-3,-3,-5,-3,10,9,-2,-3,9,10,-3,-1,-8,-5,-6,10,-8,-6,9,-2,-7,-7,3,8,8,-5,-10,-3,5,-5,-2,10,-9,3,-6,-8,-5,2,3,-2,-9,3,7,8,-1,-1,-9,5,7,-7,-4,-8,10,-8,3,5,1,3,-3,8,-5,8,-1,-3,4,3,-5,-6,-2,-9,8,-7,3,7,-1,9,-5,2,-2,6,3,4,10,-2,-8,-5,4,-5,2,-2,-8,-10,9,-1,-7,7,-6,-7,-2,-9,1,-7,8,1,-6,4,5,7,8,-5,2,-4,-6,5,1,8,-7,-6,-7,-4,1,6,-6,9,8,-8,7,-9,4,-1,-7,8,4,-1,-2,-7,-5,-8,-4,4,3,4,-3,-5,8,-3,-6,1,6,2,-6,-2,2,1,-8,-9,6,-1,6,-5,1,-1,10,7,-3,3,-10,2,2,-9,8,-1,1,3,-7,4,-8,-5,9,2,4,3,10,-7,1,-5,4,-5,-8,-4,9,-3,5,7,3,-7,-7,-3,10,-9,6,1,-8,6,-7], dtype = "uint16")#candidate|3566|(390,)|const|uint16
call_3564 = relay.TupleGetItem(func_1798_call(relay.reshape(const_3565.astype('float32'), [7, 14, 10]), relay.reshape(const_3566.astype('uint16'), [390,]), ), 1)
call_3567 = relay.TupleGetItem(func_1801_call(relay.reshape(const_3565.astype('float32'), [7, 14, 10]), relay.reshape(const_3566.astype('uint16'), [390,]), ), 1)
var_3573 = relay.var("var_3573", dtype = "float32", shape = (10, 16, 12))#candidate|3573|(10, 16, 12)|var|float32
bop_3574 = relay.less(uop_3562.astype('bool'), relay.reshape(var_3573.astype('bool'), relay.shape_of(uop_3562))) # shape=(10, 16, 12)
uop_3578 = relay.asin(var_3573.astype('float64')) # shape=(10, 16, 12)
func_1665_call = mod.get_global_var('func_1665')
func_1670_call = mutated_mod.get_global_var('func_1670')
const_3582 = relay.const([-6.823587,7.458994,-5.015195,-0.879243,-8.546578,-4.474020,0.072180,-0.672348,9.795758,-7.638881,-1.816685,2.346951,-0.426594,9.329755,-7.520054,6.325362,2.047529,-4.810298,9.170996,9.056282,-9.093722,3.550641,6.730264,-7.275643,3.677192,2.187875,8.959846,7.812418,7.192749,-6.858434,8.958125,3.488081,-2.155971,-6.971973,-2.033199,-9.418325,6.501926,-7.866990,3.523091,0.512507,-3.920574,-4.860227,4.877304,9.146167,-6.301251,-2.791545,6.776194,3.155733,-7.998458,1.791325,3.448352,5.271182,-8.636293,-5.127311,-3.957607,-0.678844,-5.725799,0.444650,-7.586790,5.665508,-8.984554,-4.705880,5.039359,4.607520,7.766100,-7.002648,-1.901200,-6.737866,-8.425564,-5.249207,-9.115841,4.252102], dtype = "float32")#candidate|3582|(72,)|const|float32
const_3583 = relay.const(1, dtype = "uint16")#candidate|3583|()|const|uint16
call_3581 = relay.TupleGetItem(func_1665_call(relay.reshape(const_3582.astype('float32'), [4, 2, 9]), relay.reshape(const_3582.astype('float32'), [4, 2, 9]), relay.reshape(const_3583.astype('uint16'), []), relay.reshape(call_3564.astype('uint16'), [390,]), ), 4)
call_3584 = relay.TupleGetItem(func_1670_call(relay.reshape(const_3582.astype('float32'), [4, 2, 9]), relay.reshape(const_3582.astype('float32'), [4, 2, 9]), relay.reshape(const_3583.astype('uint16'), []), relay.reshape(call_3564.astype('uint16'), [390,]), ), 4)
bop_3597 = relay.minimum(bop_3574.astype('int64'), relay.reshape(uop_3562.astype('int64'), relay.shape_of(bop_3574))) # shape=(10, 16, 12)
output = relay.Tuple([call_3564,const_3565,const_3566,uop_3578,call_3581,const_3582,const_3583,bop_3597,])
output2 = relay.Tuple([call_3567,const_3565,const_3566,uop_3578,call_3584,const_3582,const_3583,bop_3597,])
func_3606 = relay.Function([var_3561,var_3573,], output)
mod['func_3606'] = func_3606
mod = relay.transform.InferType()(mod)
var_3607 = relay.var("var_3607", dtype = "float32", shape = (10, 16, 12))#candidate|3607|(10, 16, 12)|var|float32
var_3608 = relay.var("var_3608", dtype = "float32", shape = (10, 16, 12))#candidate|3608|(10, 16, 12)|var|float32
output = func_3606(var_3607,var_3608,)
func_3609 = relay.Function([var_3607,var_3608,], output)
mutated_mod['func_3609'] = func_3609
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3619 = relay.var("var_3619", dtype = "float32", shape = (5, 4, 9))#candidate|3619|(5, 4, 9)|var|float32
var_3620 = relay.var("var_3620", dtype = "float32", shape = (5, 4, 9))#candidate|3620|(5, 4, 9)|var|float32
bop_3621 = relay.mod(var_3619.astype('float32'), relay.reshape(var_3620.astype('float32'), relay.shape_of(var_3619))) # shape=(5, 4, 9)
output = bop_3621
output2 = bop_3621
func_3634 = relay.Function([var_3619,var_3620,], output)
mod['func_3634'] = func_3634
mod = relay.transform.InferType()(mod)
var_3635 = relay.var("var_3635", dtype = "float32", shape = (5, 4, 9))#candidate|3635|(5, 4, 9)|var|float32
var_3636 = relay.var("var_3636", dtype = "float32", shape = (5, 4, 9))#candidate|3636|(5, 4, 9)|var|float32
output = func_3634(var_3635,var_3636,)
func_3637 = relay.Function([var_3635,var_3636,], output)
mutated_mod['func_3637'] = func_3637
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3814 = relay.const([[[3.098177,4.359829,9.542195,9.107228,2.225253,-9.290357,6.022274,-5.437010],[-9.664797,-2.726132,-0.179576,-2.887886,0.726800,-6.244640,8.082813,4.938698],[9.024207,4.036708,-0.334573,2.915135,5.748645,0.707945,8.508655,-3.263025],[-3.314356,6.854086,2.827194,-3.210692,-1.453559,-9.320964,-6.015893,-0.398600],[-0.105703,-8.426468,-3.470550,-1.328138,4.804655,-2.713523,-0.679022,2.515541],[8.817532,2.748908,-9.176784,-4.602195,-9.021351,-5.556998,-7.489299,4.973643]],[[-9.437203,5.448272,7.275265,-0.967903,5.428705,9.362986,9.143604,-3.659093],[5.908030,5.890361,9.316412,-9.720795,-4.283843,-1.223976,3.594086,1.734296],[-1.703489,4.824615,9.228625,-6.083516,-2.889371,-7.773061,-9.072948,0.967171],[-6.404527,3.426381,-2.238074,-8.963013,-8.153827,2.936139,-9.856061,4.029062],[0.801979,-8.960187,-0.788122,6.722130,4.623644,-2.199149,-5.248955,5.300812],[-4.644410,-2.018198,2.709781,8.752904,2.870107,8.784693,-4.647938,-9.241651]],[[7.228143,-3.151702,-9.458278,4.607738,9.866840,3.483789,9.763046,-0.146309],[-5.625581,-0.038211,9.707890,4.304580,-2.592764,-4.679986,-7.090253,-6.457730],[-3.937472,1.061794,-6.591769,-1.644684,0.473217,8.180867,-4.326767,-8.328080],[-4.897345,-2.714710,8.499602,-0.513910,4.558852,-9.675056,-1.444027,3.369568],[8.163058,4.051685,4.679284,2.084971,1.595526,5.450738,-6.255719,-2.959666],[-2.094615,0.557145,7.070954,0.134786,-7.785926,-7.346954,-7.885402,0.470316]],[[-0.439133,5.771883,-5.182189,-6.000560,8.065922,-4.669487,-5.666402,-1.530503],[0.222875,-9.520885,-6.011771,2.115772,2.478042,4.628180,-3.055420,9.229828],[3.743071,-5.479175,3.442157,9.767185,4.229978,-7.633053,1.046905,-9.889539],[-1.890872,6.708257,9.116862,-7.585623,-1.381358,-7.704020,-4.694093,4.800287],[5.157430,-2.737628,9.610752,3.171275,8.087114,-1.711620,7.474551,2.764613],[0.362589,-2.065732,-3.623238,5.155243,-3.987451,1.203231,8.192936,-8.137662]],[[-2.300823,1.191084,-2.822648,-0.767482,-4.009871,-0.851915,-9.271284,-5.690574],[-8.003664,-5.903386,2.441520,9.698493,2.733030,-4.815577,-5.375610,3.999187],[0.667056,-1.640767,-1.925336,0.346926,9.190075,-9.229041,-5.396088,4.588649],[8.560985,3.462470,7.240288,-7.530330,7.116428,6.376705,8.862619,-4.891704],[2.062342,-5.178457,-2.141039,-2.447249,-0.469048,1.023117,1.098068,2.852286],[-1.598866,5.007093,-7.670938,-5.410399,0.858916,3.710587,3.991755,0.372129]],[[-8.279607,-0.115701,-6.592487,-6.171183,0.773133,9.932630,-0.136424,5.513371],[1.403357,-7.876930,-9.260240,6.340779,-1.741042,-7.599037,-8.419068,-6.614759],[9.796437,9.140540,2.434697,-3.649583,3.002836,-6.377076,4.624216,-0.946271],[-1.487020,-8.064365,-1.773120,-0.804604,-0.975065,-5.244950,8.494846,8.922301],[6.759497,-4.430161,-0.636850,5.029253,-0.655449,9.820840,5.810415,-8.249360],[-0.848205,-1.471054,-9.969260,2.356802,2.553388,6.298901,-2.731924,7.834225]],[[-7.009229,-6.206091,3.926782,-4.270848,4.775553,0.694444,-1.154975,3.922033],[-6.500038,7.007618,-8.243415,8.637291,-4.092830,-2.520102,0.174211,-9.204536],[8.088573,-1.980822,-6.169108,-5.765393,-0.924842,-0.009178,8.540013,3.416419],[9.175952,-2.773546,5.838743,7.359141,3.582932,-2.711961,4.709810,-5.798320],[1.480214,4.575635,0.387350,-7.862314,1.283088,-4.237632,-2.676556,-6.235858],[-4.635065,6.641349,-0.784875,2.917786,2.000504,-1.563551,-2.203752,8.109748]],[[3.975123,6.767509,6.928057,-9.836865,-2.449240,1.076620,-4.634747,-7.725831],[1.208163,-5.998747,-9.179209,5.556259,4.724591,4.279372,-7.786072,-5.130840],[4.411210,-6.725905,9.955105,-0.646242,-6.900883,-9.798069,4.553717,4.350561],[-7.544408,6.300579,-2.704367,-2.912545,-8.660549,2.777264,3.250915,6.956083],[-5.268684,2.179551,-1.612481,9.066582,1.766709,-9.247845,4.322910,6.087698],[6.869308,-0.275916,3.295403,-6.680532,-2.202547,-7.794768,5.800722,4.267697]],[[-6.910339,2.470106,-6.403348,6.174430,-9.351897,-3.397544,2.869894,8.202807],[-0.979320,-6.569961,2.708878,-5.313260,4.610068,4.575409,-6.503137,-6.048065],[4.317138,3.634039,-9.331201,0.756178,-4.628433,-1.460636,-8.330137,7.729259],[-3.001711,-2.717037,-1.268057,3.313343,-0.790048,-1.781141,1.716406,6.522362],[-4.324748,-2.591578,5.575803,9.995867,-1.821516,6.555864,4.426005,1.908930],[6.866847,2.082934,-8.497472,2.240146,4.604738,8.100170,-6.352339,2.848353]],[[-9.686756,7.685169,-9.619751,3.160928,0.271926,8.657626,8.462320,-0.628899],[-3.387393,-8.589538,-1.994976,5.587200,9.981999,9.578898,4.314032,-2.816514],[-2.033513,3.795804,-0.400308,2.579425,-2.793073,3.318888,-8.966725,-9.826000],[7.033232,2.202380,-0.380057,-0.096123,-6.923989,2.805242,-8.263857,9.782007],[3.519123,9.950275,5.309448,4.630269,9.897895,-8.996534,-9.018996,0.559863],[4.109806,-4.392589,8.097220,-3.122293,-8.741824,-5.951237,1.549307,6.754232]],[[-5.882635,8.647213,-9.493306,6.869058,2.924171,0.756670,-2.295901,9.092162],[6.842771,9.900830,-1.373405,-0.816130,6.844617,-7.926867,-9.685561,-7.332180],[-1.266209,2.376847,-4.603414,0.807629,-8.665443,-8.808509,7.009983,-2.621077],[9.376425,7.344640,9.858883,-2.607641,-3.380120,-5.042568,-0.768519,-7.857887],[-6.876599,7.824000,-3.317481,-5.149580,7.955348,-3.298516,-9.258540,-3.114316],[-9.478317,-9.650521,8.867627,9.951953,7.616956,9.798504,-2.602509,-0.965898]],[[3.714537,3.118579,-9.604771,-0.190769,-4.279093,-3.940694,3.066569,-6.711236],[3.235424,-0.818570,6.587189,-9.601364,9.681306,2.740808,7.515825,-5.290016],[7.387439,4.397909,2.344158,-3.738228,-8.449324,-1.209489,8.820085,9.082550],[1.189381,6.769139,8.637682,8.422419,4.292569,-9.628651,7.873710,3.620559],[9.779106,-5.104021,-4.069005,-8.747227,-4.473718,2.599332,-4.540297,-6.866286],[-7.426946,-9.361751,0.708445,-3.951696,-2.065077,-1.902340,9.603580,7.760323]],[[-5.876950,0.754149,-5.110986,6.693722,-5.190504,-7.246293,1.558802,3.226109],[-7.868056,-0.420255,5.531885,1.046042,9.787082,4.829314,2.211798,5.128027],[6.307731,8.988766,5.926506,-6.937304,8.993124,-5.359037,0.415157,-1.127874],[6.175682,6.524492,1.406739,8.222690,-9.625635,3.411160,8.023712,3.272225],[1.869669,-6.565210,4.877796,-2.608669,0.322293,-7.432075,-9.757879,-8.668251],[5.800338,1.082479,-8.730361,0.249490,0.289652,0.440717,-2.377229,5.025022]]], dtype = "float64")#candidate|3814|(13, 6, 8)|const|float64
uop_3815 = relay.acos(const_3814.astype('float64')) # shape=(13, 6, 8)
func_2040_call = mod.get_global_var('func_2040')
func_2044_call = mutated_mod.get_global_var('func_2044')
const_3822 = relay.const([6.498825,4.029982,8.232121,-7.449575,-3.480106,4.828017,8.703299,7.934166,7.280059,8.371501,2.237312,-6.900796,4.670942,4.356293,0.151579,-5.492260,-0.447106,-0.661839,-9.351673,-6.229510,5.446356,-0.162742,7.923469,-4.217010,9.752391,-6.907038,-6.143502,-1.565367,-0.986651,-8.580894,7.589934,-0.067490,-8.343931,9.500147,9.901984,8.405165,-8.890573,2.499192,-9.692539,-7.667840,1.737237,-5.180573,-6.172109,8.960711,-3.504957,-4.357020,-7.036992,1.029725,-6.961575,-3.247319,7.116947,-1.182385,8.682426,1.831669,8.259380,8.808780,-2.273813,-6.472227,8.090899,3.695283,5.257231,5.874727,-3.070789,7.572729,3.406036,-4.432041,2.046533,-0.309131,-3.828026,-3.238719,-0.865300,-6.283983,8.101771,9.171731,6.914466,-2.606071,-0.535893,-1.322998,1.947258,5.023718,0.241334,9.846513,7.234834,7.894268,9.389787,2.551936,-3.721825,-6.252805,9.467282,-4.081427,8.947595,4.884784,-0.930151,-1.836440,0.220690,-2.499623,-6.598302,-5.876365,-1.369150,9.125416,3.266623,8.344083,0.836865,-5.870212,1.270937], dtype = "float32")#candidate|3822|(105,)|const|float32
const_3823 = relay.const(-1, dtype = "uint16")#candidate|3823|()|const|uint16
var_3824 = relay.var("var_3824", dtype = "float64", shape = (384,))#candidate|3824|(384,)|var|float64
call_3821 = relay.TupleGetItem(func_2040_call(relay.reshape(const_3822.astype('float32'), [3, 7, 5]), relay.reshape(const_3823.astype('uint16'), []), relay.reshape(var_3824.astype('float64'), [12, 32]), ), 0)
call_3825 = relay.TupleGetItem(func_2044_call(relay.reshape(const_3822.astype('float32'), [3, 7, 5]), relay.reshape(const_3823.astype('uint16'), []), relay.reshape(var_3824.astype('float64'), [12, 32]), ), 0)
bop_3831 = relay.less(uop_3815.astype('bool'), const_3823.astype('bool')) # shape=(13, 6, 8)
output = relay.Tuple([call_3821,const_3822,var_3824,bop_3831,])
output2 = relay.Tuple([call_3825,const_3822,var_3824,bop_3831,])
func_3840 = relay.Function([var_3824,], output)
mod['func_3840'] = func_3840
mod = relay.transform.InferType()(mod)
var_3841 = relay.var("var_3841", dtype = "float64", shape = (384,))#candidate|3841|(384,)|var|float64
output = func_3840(var_3841)
func_3842 = relay.Function([var_3841], output)
mutated_mod['func_3842'] = func_3842
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3930 = relay.var("var_3930", dtype = "bool", shape = (11, 4, 9))#candidate|3930|(11, 4, 9)|var|bool
var_3931 = relay.var("var_3931", dtype = "bool", shape = (11, 4, 9))#candidate|3931|(11, 4, 9)|var|bool
bop_3932 = relay.logical_or(var_3930.astype('bool'), relay.reshape(var_3931.astype('bool'), relay.shape_of(var_3930))) # shape=(11, 4, 9)
func_2186_call = mod.get_global_var('func_2186')
func_2190_call = mutated_mod.get_global_var('func_2190')
const_3943 = relay.const([[5,-8,8,3,-8,7,8,-9,-1,-10,3,-10,-8,4],[6,-8,-6,3,-2,1,5,-5,7,-7,-2,3,5,-10],[10,6,-3,-7,3,-4,-6,-7,10,3,-6,6,-9,5],[-4,10,-8,8,-1,4,-6,-10,-3,3,-9,-1,-9,2],[7,4,2,-5,-10,-6,9,6,-8,8,-3,3,1,6],[-4,-10,6,4,7,10,2,6,-6,7,-1,5,7,-8],[5,-10,2,10,3,-8,3,6,6,7,6,-7,-10,-3],[-2,7,4,-6,7,-4,2,-1,-2,10,-10,-1,2,5],[2,-1,6,-2,7,-7,-6,5,7,-2,-2,6,-9,8],[4,-5,1,1,-6,-10,-4,7,9,7,9,-4,2,-5],[-6,-2,6,9,3,-5,-4,2,-1,8,-5,6,6,7],[10,1,-2,-8,-10,8,-8,2,9,10,7,9,-6,-5],[7,-10,-1,4,-4,6,1,7,6,-1,-5,4,-2,-3],[-2,-1,-10,7,-2,7,-3,-9,-6,4,-8,-8,10,5],[8,10,-6,-8,-2,8,-6,-1,7,-3,-10,6,4,1],[7,-7,3,5,-8,6,8,5,6,-2,10,7,-4,8],[-8,-1,-4,-1,6,8,9,-6,-5,-4,1,-5,1,10],[6,3,-6,8,5,-9,-5,6,1,4,7,7,2,-8],[6,10,8,4,10,-8,-1,-5,-5,2,-5,10,-2,9],[-10,1,-6,6,4,10,3,-6,-4,-3,-4,-3,-1,2],[-1,-9,7,-7,-1,-9,-4,-7,-6,1,6,10,-9,10],[7,3,-4,-1,4,-5,10,8,-2,8,9,-1,5,6],[4,4,-9,-1,1,5,-9,-10,4,-2,-4,6,2,-10],[-9,-3,-2,6,7,-4,9,-6,10,7,6,10,-10,5]], dtype = "int16")#candidate|3943|(24, 14)|const|int16
const_3944 = relay.const(-2, dtype = "uint16")#candidate|3944|()|const|uint16
call_3942 = relay.TupleGetItem(func_2186_call(relay.reshape(const_3943.astype('int16'), [3, 7, 16]), relay.reshape(const_3943.astype('int16'), [3, 7, 16]), relay.reshape(const_3944.astype('uint16'), []), ), 1)
call_3945 = relay.TupleGetItem(func_2190_call(relay.reshape(const_3943.astype('int16'), [3, 7, 16]), relay.reshape(const_3943.astype('int16'), [3, 7, 16]), relay.reshape(const_3944.astype('uint16'), []), ), 1)
var_3951 = relay.var("var_3951", dtype = "bool", shape = (6, 5, 13))#candidate|3951|(6, 5, 13)|var|bool
bop_3952 = relay.logical_or(call_3942.astype('bool'), relay.reshape(var_3951.astype('bool'), relay.shape_of(call_3942))) # shape=(6, 5, 13)
bop_3955 = relay.logical_or(call_3945.astype('bool'), relay.reshape(var_3951.astype('bool'), relay.shape_of(call_3945))) # shape=(6, 5, 13)
func_3840_call = mod.get_global_var('func_3840')
func_3842_call = mutated_mod.get_global_var('func_3842')
var_3960 = relay.var("var_3960", dtype = "float64", shape = (384,))#candidate|3960|(384,)|var|float64
call_3959 = relay.TupleGetItem(func_3840_call(relay.reshape(var_3960.astype('float64'), [384,])), 0)
call_3961 = relay.TupleGetItem(func_3842_call(relay.reshape(var_3960.astype('float64'), [384,])), 0)
output = relay.Tuple([bop_3932,const_3943,const_3944,bop_3952,call_3959,var_3960,])
output2 = relay.Tuple([bop_3932,const_3943,const_3944,bop_3955,call_3961,var_3960,])
func_3973 = relay.Function([var_3930,var_3931,var_3951,var_3960,], output)
mod['func_3973'] = func_3973
mod = relay.transform.InferType()(mod)
mutated_mod['func_3973'] = func_3973
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3973_call = mutated_mod.get_global_var('func_3973')
var_3975 = relay.var("var_3975", dtype = "bool", shape = (11, 4, 9))#candidate|3975|(11, 4, 9)|var|bool
var_3976 = relay.var("var_3976", dtype = "bool", shape = (11, 4, 9))#candidate|3976|(11, 4, 9)|var|bool
var_3977 = relay.var("var_3977", dtype = "bool", shape = (6, 5, 13))#candidate|3977|(6, 5, 13)|var|bool
var_3978 = relay.var("var_3978", dtype = "float64", shape = (384,))#candidate|3978|(384,)|var|float64
call_3974 = func_3973_call(var_3975,var_3976,var_3977,var_3978,)
output = call_3974
func_3979 = relay.Function([var_3975,var_3976,var_3977,var_3978,], output)
mutated_mod['func_3979'] = func_3979
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4408 = relay.var("var_4408", dtype = "float64", shape = (16, 9, 9))#candidate|4408|(16, 9, 9)|var|float64
var_4409 = relay.var("var_4409", dtype = "float64", shape = (16, 9, 9))#candidate|4409|(16, 9, 9)|var|float64
bop_4410 = relay.mod(var_4408.astype('float64'), relay.reshape(var_4409.astype('float64'), relay.shape_of(var_4408))) # shape=(16, 9, 9)
output = relay.Tuple([bop_4410,])
output2 = relay.Tuple([bop_4410,])
func_4418 = relay.Function([var_4408,var_4409,], output)
mod['func_4418'] = func_4418
mod = relay.transform.InferType()(mod)
var_4419 = relay.var("var_4419", dtype = "float64", shape = (16, 9, 9))#candidate|4419|(16, 9, 9)|var|float64
var_4420 = relay.var("var_4420", dtype = "float64", shape = (16, 9, 9))#candidate|4420|(16, 9, 9)|var|float64
output = func_4418(var_4419,var_4420,)
func_4421 = relay.Function([var_4419,var_4420,], output)
mutated_mod['func_4421'] = func_4421
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4890 = relay.var("var_4890", dtype = "float64", shape = (10, 8, 15))#candidate|4890|(10, 8, 15)|var|float64
var_4891 = relay.var("var_4891", dtype = "float64", shape = (10, 8, 15))#candidate|4891|(10, 8, 15)|var|float64
bop_4892 = relay.mod(var_4890.astype('float64'), relay.reshape(var_4891.astype('float64'), relay.shape_of(var_4890))) # shape=(10, 8, 15)
output = relay.Tuple([bop_4892,])
output2 = relay.Tuple([bop_4892,])
func_4906 = relay.Function([var_4890,var_4891,], output)
mod['func_4906'] = func_4906
mod = relay.transform.InferType()(mod)
var_4907 = relay.var("var_4907", dtype = "float64", shape = (10, 8, 15))#candidate|4907|(10, 8, 15)|var|float64
var_4908 = relay.var("var_4908", dtype = "float64", shape = (10, 8, 15))#candidate|4908|(10, 8, 15)|var|float64
output = func_4906(var_4907,var_4908,)
func_4909 = relay.Function([var_4907,var_4908,], output)
mutated_mod['func_4909'] = func_4909
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4936 = relay.var("var_4936", dtype = "float32", shape = (2, 1, 7))#candidate|4936|(2, 1, 7)|var|float32
uop_4937 = relay.sigmoid(var_4936.astype('float32')) # shape=(2, 1, 7)
output = relay.Tuple([uop_4937,])
output2 = relay.Tuple([uop_4937,])
func_4939 = relay.Function([var_4936,], output)
mod['func_4939'] = func_4939
mod = relay.transform.InferType()(mod)
mutated_mod['func_4939'] = func_4939
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4940 = relay.var("var_4940", dtype = "float32", shape = (2, 1, 7))#candidate|4940|(2, 1, 7)|var|float32
func_4939_call = mutated_mod.get_global_var('func_4939')
call_4941 = func_4939_call(var_4940)
output = call_4941
func_4942 = relay.Function([var_4940], output)
mutated_mod['func_4942'] = func_4942
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4987 = relay.var("var_4987", dtype = "float32", shape = (1, 5))#candidate|4987|(1, 5)|var|float32
uop_4988 = relay.log10(var_4987.astype('float32')) # shape=(1, 5)
output = uop_4988
output2 = uop_4988
func_4990 = relay.Function([var_4987,], output)
mod['func_4990'] = func_4990
mod = relay.transform.InferType()(mod)
mutated_mod['func_4990'] = func_4990
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4991 = relay.var("var_4991", dtype = "float32", shape = (1, 5))#candidate|4991|(1, 5)|var|float32
func_4990_call = mutated_mod.get_global_var('func_4990')
call_4992 = func_4990_call(var_4991)
output = call_4992
func_4993 = relay.Function([var_4991], output)
mutated_mod['func_4993'] = func_4993
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5191 = relay.var("var_5191", dtype = "float32", shape = (16, 1, 8))#candidate|5191|(16, 1, 8)|var|float32
uop_5192 = relay.asin(var_5191.astype('float32')) # shape=(16, 1, 8)
uop_5200 = relay.atanh(uop_5192.astype('float64')) # shape=(16, 1, 8)
uop_5211 = relay.sinh(uop_5200.astype('float32')) # shape=(16, 1, 8)
output = relay.Tuple([uop_5211,])
output2 = relay.Tuple([uop_5211,])
func_5213 = relay.Function([var_5191,], output)
mod['func_5213'] = func_5213
mod = relay.transform.InferType()(mod)
mutated_mod['func_5213'] = func_5213
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5214 = relay.var("var_5214", dtype = "float32", shape = (16, 1, 8))#candidate|5214|(16, 1, 8)|var|float32
func_5213_call = mutated_mod.get_global_var('func_5213')
call_5215 = func_5213_call(var_5214)
output = call_5215
func_5216 = relay.Function([var_5214], output)
mutated_mod['func_5216'] = func_5216
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5240 = relay.const([[[-10,4,10,-3,-7,2,-2,7,-8,9,-9,-4,7,2,-2],[-5,-3,-10,-10,-7,-9,3,8,7,8,-7,-8,1,-3,-7],[5,9,-10,3,4,-9,1,-6,-3,-2,-2,-9,2,-8,-5],[1,-6,8,-3,-7,10,-2,9,9,-3,-4,-2,5,-5,10],[-7,-9,-3,-8,7,3,-1,-10,3,4,-10,10,3,5,-8],[9,-6,-8,-7,-5,-2,-4,5,5,1,5,10,-3,-3,-5],[3,-6,-4,10,-3,-6,3,-9,-3,-8,6,8,-9,10,-1],[-2,-1,-5,-5,6,8,-2,-3,-1,5,-5,-3,8,-5,-5],[-3,3,7,9,-1,-1,-9,3,-6,-10,-6,-2,7,-2,-8],[1,3,-7,1,4,3,4,8,3,4,5,-8,2,8,-10],[-10,-10,-6,-3,5,3,-3,-9,6,7,5,1,-10,9,-6],[6,1,-9,5,5,9,9,5,-5,9,-1,3,-8,-7,-2]],[[-7,9,6,-6,-9,-4,-3,2,-10,10,-10,-4,5,7,10],[-6,-10,8,4,1,-8,-4,8,8,-5,-9,-9,8,-6,7],[8,6,8,-6,-7,6,3,-6,-5,1,1,5,-5,-6,-1],[9,-6,-7,-9,9,-1,-3,6,-5,2,-3,6,-6,4,-1],[5,-4,7,7,6,3,-4,4,-6,1,7,-2,5,-5,10],[-3,8,-7,-1,-2,-4,-6,1,-6,-1,6,4,-10,-8,5],[-2,4,-8,-4,7,7,3,8,5,3,-3,-3,-7,-6,-7],[2,1,-9,6,9,-3,3,-2,-10,-4,-3,1,6,9,2],[2,7,-1,4,4,-1,2,1,-6,10,-5,9,-9,6,6],[7,-4,-3,1,-2,-1,-1,8,6,4,-4,-1,7,-7,-9],[10,10,10,-9,-1,7,-6,6,10,-6,9,7,4,-9,6],[-3,-6,4,-6,-9,6,10,4,-3,-7,-1,2,6,2,6]],[[-7,-8,-4,1,5,-9,-5,10,7,6,-6,-10,-4,4,-6],[-6,1,-6,-4,9,6,-10,-8,-10,6,9,-2,-10,-7,-4],[7,6,4,7,8,9,3,-4,-10,4,-10,-7,3,-1,-4],[-3,-5,-10,-2,8,10,-3,7,-4,4,2,-2,-8,-8,5],[-4,-2,-1,9,-9,3,-6,-2,6,9,-5,-3,2,2,-10],[10,7,-4,-4,2,-2,3,-5,-1,1,10,3,-3,-7,-2],[1,-3,-6,7,-2,1,5,-3,9,1,8,-5,9,5,-2],[4,-1,-2,-6,6,9,5,3,4,4,3,-9,2,-6,-1],[-5,2,2,2,-6,-7,8,-8,-9,-5,10,-2,6,-4,-10],[3,-1,-3,2,2,-6,2,10,6,-4,2,-9,-10,10,-1],[2,8,-10,8,-8,9,-9,9,1,-9,-8,-7,-7,4,-3],[-8,9,-8,-6,-1,7,8,1,9,5,-6,-1,10,2,-3]],[[-8,-9,8,-6,-4,-9,-8,-8,8,-2,-5,6,1,-4,-1],[-7,-8,6,4,10,-10,8,10,9,-5,-3,-9,-8,6,-3],[-9,-5,-5,-4,-6,6,7,-6,-3,-7,5,-1,-8,7,1],[10,-8,-10,10,3,-10,10,6,6,-2,-8,-2,3,9,5],[-10,1,-2,3,5,-5,-7,-2,-2,2,1,3,10,5,-6],[9,-7,-3,3,10,2,-3,-2,-1,3,-8,-3,10,-7,-1],[7,-10,-4,3,9,-7,9,-9,5,5,1,-4,6,-6,-9],[7,-10,-8,10,-4,-5,9,1,2,5,-5,3,-1,-1,4],[-5,-6,10,1,-7,8,-6,-5,2,-2,-5,5,4,6,4],[-7,-1,-6,-1,10,2,10,-2,2,2,-2,10,-4,-3,4],[-10,-6,6,-1,-9,-4,6,8,9,-3,3,-8,1,9,-4],[-9,6,5,-7,8,7,4,8,-3,-1,7,-10,-1,9,-4]],[[5,-7,-9,2,9,2,1,-9,-10,-5,-7,-9,9,7,-9],[1,6,-4,10,-3,-5,-5,10,7,-6,-3,7,9,9,6],[-1,-4,6,-4,-2,-5,1,-5,-4,3,5,3,7,9,-2],[-5,-3,9,-7,-8,-9,7,-3,-3,5,8,-3,3,7,-7],[7,1,3,1,-3,10,-2,-4,-1,3,-4,-7,4,-6,-10],[-9,4,-6,9,8,6,4,7,2,-6,6,-8,6,1,-2],[-4,9,-10,-7,-4,-1,-5,8,-4,1,-5,-7,-10,-4,4],[5,6,9,10,-5,3,5,-10,9,3,-3,7,-1,2,1],[3,5,7,-7,10,-1,9,-10,-9,4,-10,-10,6,5,9],[5,1,1,-6,5,10,10,4,-10,-10,6,-9,9,10,-3],[-2,-10,10,9,10,1,-1,-1,10,7,4,-10,-2,10,2],[10,4,5,1,-2,-1,1,4,5,3,-6,7,-2,4,10]],[[5,-2,-10,-5,-4,-2,-9,-4,-4,9,-3,4,2,9,-8],[-3,-7,-2,-1,-7,-3,7,3,7,2,-7,-2,7,7,-7],[2,-9,-5,7,-9,3,5,-6,-3,6,-8,2,-3,1,2],[-8,9,3,-10,2,-7,3,-4,2,9,-3,-2,4,-4,7],[4,10,3,-7,-8,-2,1,8,-2,5,8,-8,-4,6,-9],[4,10,-7,1,-6,5,3,3,3,2,9,-5,10,1,-7],[-1,-6,-7,4,8,-7,7,-9,1,-8,-8,-5,-5,-4,3],[9,-2,-4,9,-1,7,-8,-9,-7,-8,5,3,1,-5,6],[-6,-1,-1,1,5,7,-9,-6,-1,-9,7,7,2,-10,2],[-4,-3,9,1,4,-10,-8,5,7,9,6,-10,8,10,-10],[3,3,8,-2,1,-7,-8,-10,-10,-10,5,-5,-1,-8,2],[-5,1,-3,-9,-9,4,1,-10,-6,10,-7,5,1,-6,7]],[[6,-5,10,-5,4,9,-2,9,-3,-10,4,-9,3,3,6],[9,1,-8,-1,-2,-1,-2,-3,-4,-7,-9,-4,-10,-6,-8],[2,-8,-9,-6,1,5,8,4,-8,8,-3,-8,5,5,2],[8,1,9,-2,10,10,7,1,-9,-2,-8,-4,-3,6,-10],[3,2,-4,4,3,-9,-7,3,10,9,-7,-8,-5,9,10],[10,7,-7,-5,7,5,3,2,10,-5,5,-7,-4,3,6],[5,9,1,5,9,4,-7,5,-2,-3,-5,-1,-1,-9,-8],[-10,-2,-5,6,-7,-9,10,7,-7,-10,5,9,10,-1,-6],[5,-4,-6,-7,8,-9,6,-4,5,-3,-2,-2,6,-10,-2],[-8,2,-1,-10,1,6,-6,9,9,-1,-9,-3,-1,5,-8],[10,2,-9,-8,-5,6,1,6,-1,-4,-9,5,-5,3,-10],[7,-8,-1,5,-5,-10,-2,2,-1,-4,9,-1,5,3,-8]],[[-8,4,-5,2,-6,-8,7,-7,1,4,-6,-9,7,5,-4],[4,7,10,3,-1,9,7,-3,-5,-4,-8,-3,-7,4,4],[-6,-4,6,-6,7,10,-9,2,-1,4,7,8,-2,-4,-9],[-4,5,-10,1,-4,5,4,2,6,4,-1,-6,3,-3,2],[-3,9,-6,3,-6,8,2,5,-2,9,3,-7,8,6,-6],[5,7,-1,4,-4,2,2,-8,10,-10,-3,9,-3,-1,10],[9,1,1,3,-8,8,9,-6,6,6,-6,-2,-1,2,6],[-3,9,-1,8,8,10,-7,-5,-7,-10,-1,-4,-1,-10,10],[9,10,-7,-10,6,-2,5,7,-4,-3,9,-3,6,9,9],[9,3,5,10,-7,-3,-3,8,-8,-4,9,4,-8,3,4],[9,9,-5,-3,10,-3,9,-3,8,9,4,-7,7,-9,-3],[4,8,-3,10,8,-6,-4,9,-1,-1,-8,8,3,1,8]]], dtype = "uint32")#candidate|5240|(8, 12, 15)|const|uint32
var_5241 = relay.var("var_5241", dtype = "uint32", shape = (8, 12, 15))#candidate|5241|(8, 12, 15)|var|uint32
bop_5242 = relay.bitwise_xor(const_5240.astype('uint32'), relay.reshape(var_5241.astype('uint32'), relay.shape_of(const_5240))) # shape=(8, 12, 15)
uop_5253 = relay.cos(bop_5242.astype('float32')) # shape=(8, 12, 15)
output = uop_5253
output2 = uop_5253
func_5255 = relay.Function([var_5241,], output)
mod['func_5255'] = func_5255
mod = relay.transform.InferType()(mod)
var_5256 = relay.var("var_5256", dtype = "uint32", shape = (8, 12, 15))#candidate|5256|(8, 12, 15)|var|uint32
output = func_5255(var_5256)
func_5257 = relay.Function([var_5256], output)
mutated_mod['func_5257'] = func_5257
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5299 = relay.const([[7,5,8,2,-2,3,-5,10,-5,-1,-8,-4,-1,7,7],[2,-9,-5,8,-5,4,-6,-8,2,1,-4,4,-2,-10,-3],[-8,-10,3,3,3,-2,5,7,2,-5,-5,-6,10,-3,8],[7,10,2,-3,3,-1,4,-2,-9,2,-1,-4,-7,-6,7],[6,-9,-1,10,-6,-9,-9,-2,4,5,-5,5,3,6,-2],[-3,-6,7,-3,-1,-3,5,3,-2,1,5,6,-7,-3,10],[5,6,-6,-9,3,8,-10,7,-2,-2,-10,9,8,7,-9],[9,-2,5,1,9,-2,9,1,5,6,-8,-6,-2,-3,8],[-8,5,-3,8,-2,7,3,8,-9,-9,10,-1,4,-1,-2],[10,7,10,6,5,4,-6,7,2,4,-2,9,-3,7,-2],[4,-1,-9,-2,-8,5,-8,-8,2,2,1,4,-5,5,-10],[3,8,8,6,2,-8,5,-7,-2,4,9,-6,-5,10,5]], dtype = "int64")#candidate|5299|(12, 15)|const|int64
var_5300 = relay.var("var_5300", dtype = "int64", shape = (12, 15))#candidate|5300|(12, 15)|var|int64
bop_5301 = relay.left_shift(const_5299.astype('int64'), relay.reshape(var_5300.astype('int64'), relay.shape_of(const_5299))) # shape=(12, 15)
output = relay.Tuple([bop_5301,])
output2 = relay.Tuple([bop_5301,])
func_5304 = relay.Function([var_5300,], output)
mod['func_5304'] = func_5304
mod = relay.transform.InferType()(mod)
mutated_mod['func_5304'] = func_5304
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5305 = relay.var("var_5305", dtype = "int64", shape = (12, 15))#candidate|5305|(12, 15)|var|int64
func_5304_call = mutated_mod.get_global_var('func_5304')
call_5306 = func_5304_call(var_5305)
output = call_5306
func_5307 = relay.Function([var_5305], output)
mutated_mod['func_5307'] = func_5307
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5707 = relay.var("var_5707", dtype = "float32", shape = (6, 7, 16))#candidate|5707|(6, 7, 16)|var|float32
uop_5708 = relay.log2(var_5707.astype('float32')) # shape=(6, 7, 16)
uop_5716 = relay.asinh(uop_5708.astype('float64')) # shape=(6, 7, 16)
uop_5718 = relay.tan(uop_5708.astype('float64')) # shape=(6, 7, 16)
uop_5724 = relay.asin(uop_5708.astype('float32')) # shape=(6, 7, 16)
output = relay.Tuple([uop_5716,uop_5718,uop_5724,])
output2 = relay.Tuple([uop_5716,uop_5718,uop_5724,])
func_5733 = relay.Function([var_5707,], output)
mod['func_5733'] = func_5733
mod = relay.transform.InferType()(mod)
mutated_mod['func_5733'] = func_5733
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5734 = relay.var("var_5734", dtype = "float32", shape = (6, 7, 16))#candidate|5734|(6, 7, 16)|var|float32
func_5733_call = mutated_mod.get_global_var('func_5733')
call_5735 = func_5733_call(var_5734)
output = call_5735
func_5736 = relay.Function([var_5734], output)
mutated_mod['func_5736'] = func_5736
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5957 = relay.const([[[3.738978,-5.130083,4.943233],[5.964318,9.742151,-1.283552],[2.564336,-2.034736,-2.352892]],[[-6.449301,1.328076,-0.421529],[-0.672953,-8.318078,-2.400813],[5.193175,-2.670127,-3.617874]],[[-4.676541,0.289405,-0.865877],[-1.567888,6.740827,2.937420],[-9.288757,4.426897,-0.881505]],[[-0.844595,1.616480,-3.807123],[-7.776803,3.907613,-3.103001],[0.050907,-8.228917,-9.149506]],[[-4.921669,-6.636293,4.499594],[0.732854,-4.653339,-9.385550],[-0.637117,4.847142,1.842686]],[[-0.631663,7.840562,-6.365372],[0.471643,1.725046,-9.988445],[-3.295419,-8.109667,4.249466]],[[-0.620590,8.165101,9.476971],[8.471109,-6.631511,4.993305],[-7.329014,9.900094,-5.360409]]], dtype = "float32")#candidate|5957|(7, 3, 3)|const|float32
uop_5958 = relay.exp(const_5957.astype('float32')) # shape=(7, 3, 3)
uop_5960 = relay.cosh(const_5957.astype('float64')) # shape=(7, 3, 3)
uop_5966 = relay.rsqrt(uop_5958.astype('float64')) # shape=(7, 3, 3)
func_3415_call = mod.get_global_var('func_3415')
func_3418_call = mutated_mod.get_global_var('func_3418')
var_5972 = relay.var("var_5972", dtype = "uint32", shape = (810,))#candidate|5972|(810,)|var|uint32
var_5973 = relay.var("var_5973", dtype = "float64", shape = (384, 1))#candidate|5973|(384, 1)|var|float64
call_5971 = relay.TupleGetItem(func_3415_call(relay.reshape(var_5972.astype('uint32'), [9, 6, 15]), relay.reshape(var_5973.astype('float64'), [384,]), ), 0)
call_5974 = relay.TupleGetItem(func_3418_call(relay.reshape(var_5972.astype('uint32'), [9, 6, 15]), relay.reshape(var_5973.astype('float64'), [384,]), ), 0)
func_1665_call = mod.get_global_var('func_1665')
func_1670_call = mutated_mod.get_global_var('func_1670')
var_5976 = relay.var("var_5976", dtype = "float32", shape = (72,))#candidate|5976|(72,)|var|float32
const_5977 = relay.const(10, dtype = "uint16")#candidate|5977|()|const|uint16
var_5978 = relay.var("var_5978", dtype = "uint16", shape = (390,))#candidate|5978|(390,)|var|uint16
call_5975 = relay.TupleGetItem(func_1665_call(relay.reshape(var_5976.astype('float32'), [4, 2, 9]), relay.reshape(var_5976.astype('float32'), [4, 2, 9]), relay.reshape(const_5977.astype('uint16'), []), relay.reshape(var_5978.astype('uint16'), [390,]), ), 2)
call_5979 = relay.TupleGetItem(func_1670_call(relay.reshape(var_5976.astype('float32'), [4, 2, 9]), relay.reshape(var_5976.astype('float32'), [4, 2, 9]), relay.reshape(const_5977.astype('uint16'), []), relay.reshape(var_5978.astype('uint16'), [390,]), ), 2)
func_4906_call = mod.get_global_var('func_4906')
func_4909_call = mutated_mod.get_global_var('func_4909')
var_6002 = relay.var("var_6002", dtype = "float64", shape = (1200,))#candidate|6002|(1200,)|var|float64
call_6001 = relay.TupleGetItem(func_4906_call(relay.reshape(var_6002.astype('float64'), [10, 8, 15]), relay.reshape(var_6002.astype('float64'), [10, 8, 15]), ), 0)
call_6003 = relay.TupleGetItem(func_4909_call(relay.reshape(var_6002.astype('float64'), [10, 8, 15]), relay.reshape(var_6002.astype('float64'), [10, 8, 15]), ), 0)
func_2281_call = mod.get_global_var('func_2281')
func_2286_call = mutated_mod.get_global_var('func_2286')
var_6006 = relay.var("var_6006", dtype = "uint16", shape = (1344,))#candidate|6006|(1344,)|var|uint16
call_6005 = relay.TupleGetItem(func_2281_call(relay.reshape(var_6006.astype('uint16'), [14, 12, 8]), relay.reshape(var_6006.astype('uint16'), [14, 12, 8]), relay.reshape(const_5977.astype('uint16'), []), relay.reshape(var_5978.astype('uint16'), [390,]), ), 5)
call_6007 = relay.TupleGetItem(func_2286_call(relay.reshape(var_6006.astype('uint16'), [14, 12, 8]), relay.reshape(var_6006.astype('uint16'), [14, 12, 8]), relay.reshape(const_5977.astype('uint16'), []), relay.reshape(var_5978.astype('uint16'), [390,]), ), 5)
func_3606_call = mod.get_global_var('func_3606')
func_3609_call = mutated_mod.get_global_var('func_3609')
var_6010 = relay.var("var_6010", dtype = "float32", shape = (1920,))#candidate|6010|(1920,)|var|float32
call_6009 = relay.TupleGetItem(func_3606_call(relay.reshape(var_6010.astype('float32'), [10, 16, 12]), relay.reshape(var_6010.astype('float32'), [10, 16, 12]), ), 5)
call_6011 = relay.TupleGetItem(func_3609_call(relay.reshape(var_6010.astype('float32'), [10, 16, 12]), relay.reshape(var_6010.astype('float32'), [10, 16, 12]), ), 5)
output = relay.Tuple([uop_5960,uop_5966,call_5971,var_5972,var_5973,call_5975,var_5976,const_5977,var_5978,call_6001,var_6002,call_6005,var_6006,call_6009,var_6010,])
output2 = relay.Tuple([uop_5960,uop_5966,call_5974,var_5972,var_5973,call_5979,var_5976,const_5977,var_5978,call_6003,var_6002,call_6007,var_6006,call_6011,var_6010,])
func_6032 = relay.Function([var_5972,var_5973,var_5976,var_5978,var_6002,var_6006,var_6010,], output)
mod['func_6032'] = func_6032
mod = relay.transform.InferType()(mod)
mutated_mod['func_6032'] = func_6032
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6032_call = mutated_mod.get_global_var('func_6032')
var_6034 = relay.var("var_6034", dtype = "uint32", shape = (810,))#candidate|6034|(810,)|var|uint32
var_6035 = relay.var("var_6035", dtype = "float64", shape = (384, 1))#candidate|6035|(384, 1)|var|float64
var_6036 = relay.var("var_6036", dtype = "float32", shape = (72,))#candidate|6036|(72,)|var|float32
var_6037 = relay.var("var_6037", dtype = "uint16", shape = (390,))#candidate|6037|(390,)|var|uint16
var_6038 = relay.var("var_6038", dtype = "float64", shape = (1200,))#candidate|6038|(1200,)|var|float64
var_6039 = relay.var("var_6039", dtype = "uint16", shape = (1344,))#candidate|6039|(1344,)|var|uint16
var_6040 = relay.var("var_6040", dtype = "float32", shape = (1920,))#candidate|6040|(1920,)|var|float32
call_6033 = func_6032_call(var_6034,var_6035,var_6036,var_6037,var_6038,var_6039,var_6040,)
output = call_6033
func_6041 = relay.Function([var_6034,var_6035,var_6036,var_6037,var_6038,var_6039,var_6040,], output)
mutated_mod['func_6041'] = func_6041
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6414 = relay.var("var_6414", dtype = "bool", shape = (2, 2, 10))#candidate|6414|(2, 2, 10)|var|bool
var_6415 = relay.var("var_6415", dtype = "bool", shape = (2, 2, 10))#candidate|6415|(2, 2, 10)|var|bool
bop_6416 = relay.logical_and(var_6414.astype('bool'), relay.reshape(var_6415.astype('bool'), relay.shape_of(var_6414))) # shape=(2, 2, 10)
var_6424 = relay.var("var_6424", dtype = "bool", shape = (2, 2, 10))#candidate|6424|(2, 2, 10)|var|bool
bop_6425 = relay.floor_mod(var_6414.astype('float64'), relay.reshape(var_6424.astype('float64'), relay.shape_of(var_6414))) # shape=(2, 2, 10)
func_2581_call = mod.get_global_var('func_2581')
func_2586_call = mutated_mod.get_global_var('func_2586')
var_6431 = relay.var("var_6431", dtype = "int16", shape = ())#candidate|6431|()|var|int16
const_6432 = relay.const([10,-8,3,-4,-8,-10,-7,2,-10,-4,3,9,8,5,8,3,-8,-6,8,-5,-7,3,-8,10,5,4,-3,-2,-2,6,-6,9,-3,6,5,6,-10,7,-5,3,8,-10,2,-1,-8,4,7,-10], dtype = "int16")#candidate|6432|(48,)|const|int16
var_6433 = relay.var("var_6433", dtype = "int32", shape = (750,))#candidate|6433|(750,)|var|int32
var_6434 = relay.var("var_6434", dtype = "uint16", shape = (325, 2))#candidate|6434|(325, 2)|var|uint16
call_6430 = relay.TupleGetItem(func_2581_call(relay.reshape(var_6431.astype('int16'), []), relay.reshape(const_6432.astype('int16'), [3, 8, 2]), relay.reshape(var_6433.astype('int32'), [750,]), relay.reshape(var_6434.astype('uint16'), [650,]), ), 2)
call_6435 = relay.TupleGetItem(func_2586_call(relay.reshape(var_6431.astype('int16'), []), relay.reshape(const_6432.astype('int16'), [3, 8, 2]), relay.reshape(var_6433.astype('int32'), [750,]), relay.reshape(var_6434.astype('uint16'), [650,]), ), 2)
uop_6450 = relay.sinh(bop_6425.astype('float32')) # shape=(2, 2, 10)
output = relay.Tuple([bop_6416,call_6430,var_6431,const_6432,var_6433,var_6434,uop_6450,])
output2 = relay.Tuple([bop_6416,call_6435,var_6431,const_6432,var_6433,var_6434,uop_6450,])
func_6472 = relay.Function([var_6414,var_6415,var_6424,var_6431,var_6433,var_6434,], output)
mod['func_6472'] = func_6472
mod = relay.transform.InferType()(mod)
var_6473 = relay.var("var_6473", dtype = "bool", shape = (2, 2, 10))#candidate|6473|(2, 2, 10)|var|bool
var_6474 = relay.var("var_6474", dtype = "bool", shape = (2, 2, 10))#candidate|6474|(2, 2, 10)|var|bool
var_6475 = relay.var("var_6475", dtype = "bool", shape = (2, 2, 10))#candidate|6475|(2, 2, 10)|var|bool
var_6476 = relay.var("var_6476", dtype = "int16", shape = ())#candidate|6476|()|var|int16
var_6477 = relay.var("var_6477", dtype = "int32", shape = (750,))#candidate|6477|(750,)|var|int32
var_6478 = relay.var("var_6478", dtype = "uint16", shape = (325, 2))#candidate|6478|(325, 2)|var|uint16
output = func_6472(var_6473,var_6474,var_6475,var_6476,var_6477,var_6478,)
func_6479 = relay.Function([var_6473,var_6474,var_6475,var_6476,var_6477,var_6478,], output)
mutated_mod['func_6479'] = func_6479
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6614 = relay.var("var_6614", dtype = "uint64", shape = (15, 8, 16))#candidate|6614|(15, 8, 16)|var|uint64
var_6615 = relay.var("var_6615", dtype = "uint64", shape = (15, 8, 16))#candidate|6615|(15, 8, 16)|var|uint64
bop_6616 = relay.not_equal(var_6614.astype('bool'), relay.reshape(var_6615.astype('bool'), relay.shape_of(var_6614))) # shape=(15, 8, 16)
uop_6619 = relay.log2(bop_6616.astype('float64')) # shape=(15, 8, 16)
func_3973_call = mod.get_global_var('func_3973')
func_3979_call = mutated_mod.get_global_var('func_3979')
const_6623 = relay.const([False,True,False,False,False,False,True,True,False,True,True,True,False,False,True,False,True,True,False,False,True,True,False,True,True,True,True,False,False,True,False,False,False,False,False,False,False,False,True,True,True,False,False,True,False,True,True,False,False,False,False,True,True,False,False,False,False,True,False,False,False,True,True,False,True,True,False,False,True,False,True,False,False,True,True,True,False,True,True,False,True,True,True,False,True,False,True,True,True,True,False,False,False,True,False,False,False,True,False,False,True,True,False,True,False,False,False,False,True,True,False,False,False,True,False,False,True,True,True,True,True,True,True,True,False,True,True,True,False,True,True,True,False,True,True,False,True,True,False,False,True,False,False,True,False,True,True,True,False,True,False,True,False,True,True,True,True,False,False,True,False,True,True,False,False,False,True,False,True,True,False,False,False,True,False,False,False,True,True,False,False,False,False,True,True,True,False,False,True,False,False,True,True,True,False,True,True,True,True,False,False,False,True,False,True,True,False,True,False,False,True,True,False,True,False,True,False,False,False,False,False,False,True,True,True,True,False,False,False,False,False,True,False,True,True,True,False,False,False,True,False,True,False,False,True,False,True,True,False,True,True,False,True,True,True,False,False,True,False,True,True,True,False,True,False,True,False,True,True,False,False,True,False,False,True,True,False,True,False,False,False,False,False,False,True,True,False,True,False,True,False,False,False,False,True,False,False,False,True,True,False,True,True,False,True,False,True,True,True,False,True,False,False,True,False,True,False,False,False,True,True,True,True,True,True,False,False,True,False,True,True,True,True,False,True,False,False,True,False,False,True,True,False,True,True,False,False,True,False,False,False,False,True,True,True,True,False,True,False,False,True,True,True,False,True,True,False,False,False,False,False,True,False,False,False,True,False,False,False,False,False,True,False,False,False,False,True,False,True,True,True,False,True,False,False,False], dtype = "bool")#candidate|6623|(396,)|const|bool
var_6624 = relay.var("var_6624", dtype = "bool", shape = (390,))#candidate|6624|(390,)|var|bool
var_6625 = relay.var("var_6625", dtype = "float64", shape = (48, 8))#candidate|6625|(48, 8)|var|float64
call_6622 = relay.TupleGetItem(func_3973_call(relay.reshape(const_6623.astype('bool'), [11, 4, 9]), relay.reshape(const_6623.astype('bool'), [11, 4, 9]), relay.reshape(var_6624.astype('bool'), [6, 5, 13]), relay.reshape(var_6625.astype('float64'), [384,]), ), 5)
call_6626 = relay.TupleGetItem(func_3979_call(relay.reshape(const_6623.astype('bool'), [11, 4, 9]), relay.reshape(const_6623.astype('bool'), [11, 4, 9]), relay.reshape(var_6624.astype('bool'), [6, 5, 13]), relay.reshape(var_6625.astype('float64'), [384,]), ), 5)
output = relay.Tuple([uop_6619,call_6622,const_6623,var_6624,var_6625,])
output2 = relay.Tuple([uop_6619,call_6626,const_6623,var_6624,var_6625,])
func_6627 = relay.Function([var_6614,var_6615,var_6624,var_6625,], output)
mod['func_6627'] = func_6627
mod = relay.transform.InferType()(mod)
var_6628 = relay.var("var_6628", dtype = "uint64", shape = (15, 8, 16))#candidate|6628|(15, 8, 16)|var|uint64
var_6629 = relay.var("var_6629", dtype = "uint64", shape = (15, 8, 16))#candidate|6629|(15, 8, 16)|var|uint64
var_6630 = relay.var("var_6630", dtype = "bool", shape = (390,))#candidate|6630|(390,)|var|bool
var_6631 = relay.var("var_6631", dtype = "float64", shape = (48, 8))#candidate|6631|(48, 8)|var|float64
output = func_6627(var_6628,var_6629,var_6630,var_6631,)
func_6632 = relay.Function([var_6628,var_6629,var_6630,var_6631,], output)
mutated_mod['func_6632'] = func_6632
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6636 = relay.var("var_6636", dtype = "bool", shape = (4, 12, 7))#candidate|6636|(4, 12, 7)|var|bool
var_6637 = relay.var("var_6637", dtype = "bool", shape = (4, 12, 7))#candidate|6637|(4, 12, 7)|var|bool
bop_6638 = relay.logical_and(var_6636.astype('bool'), relay.reshape(var_6637.astype('bool'), relay.shape_of(var_6636))) # shape=(4, 12, 7)
func_425_call = mod.get_global_var('func_425')
func_429_call = mutated_mod.get_global_var('func_429')
var_6642 = relay.var("var_6642", dtype = "int32", shape = (750, 1))#candidate|6642|(750, 1)|var|int32
call_6641 = func_425_call(relay.reshape(var_6642.astype('int32'), [10, 15, 5]), relay.reshape(var_6642.astype('int32'), [10, 15, 5]), )
call_6643 = func_425_call(relay.reshape(var_6642.astype('int32'), [10, 15, 5]), relay.reshape(var_6642.astype('int32'), [10, 15, 5]), )
output = relay.Tuple([bop_6638,call_6641,var_6642,])
output2 = relay.Tuple([bop_6638,call_6643,var_6642,])
func_6645 = relay.Function([var_6636,var_6637,var_6642,], output)
mod['func_6645'] = func_6645
mod = relay.transform.InferType()(mod)
var_6646 = relay.var("var_6646", dtype = "bool", shape = (4, 12, 7))#candidate|6646|(4, 12, 7)|var|bool
var_6647 = relay.var("var_6647", dtype = "bool", shape = (4, 12, 7))#candidate|6647|(4, 12, 7)|var|bool
var_6648 = relay.var("var_6648", dtype = "int32", shape = (750, 1))#candidate|6648|(750, 1)|var|int32
output = func_6645(var_6646,var_6647,var_6648,)
func_6649 = relay.Function([var_6646,var_6647,var_6648,], output)
mutated_mod['func_6649'] = func_6649
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6928 = relay.var("var_6928", dtype = "float64", shape = (9, 11, 9))#candidate|6928|(9, 11, 9)|var|float64
uop_6929 = relay.log10(var_6928.astype('float64')) # shape=(9, 11, 9)
func_4939_call = mod.get_global_var('func_4939')
func_4942_call = mutated_mod.get_global_var('func_4942')
var_6938 = relay.var("var_6938", dtype = "float32", shape = (1, 14))#candidate|6938|(1, 14)|var|float32
call_6937 = relay.TupleGetItem(func_4939_call(relay.reshape(var_6938.astype('float32'), [2, 1, 7])), 0)
call_6939 = relay.TupleGetItem(func_4942_call(relay.reshape(var_6938.astype('float32'), [2, 1, 7])), 0)
output = relay.Tuple([uop_6929,call_6937,var_6938,])
output2 = relay.Tuple([uop_6929,call_6939,var_6938,])
func_6940 = relay.Function([var_6928,var_6938,], output)
mod['func_6940'] = func_6940
mod = relay.transform.InferType()(mod)
mutated_mod['func_6940'] = func_6940
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6940_call = mutated_mod.get_global_var('func_6940')
var_6942 = relay.var("var_6942", dtype = "float64", shape = (9, 11, 9))#candidate|6942|(9, 11, 9)|var|float64
var_6943 = relay.var("var_6943", dtype = "float32", shape = (1, 14))#candidate|6943|(1, 14)|var|float32
call_6941 = func_6940_call(var_6942,var_6943,)
output = call_6941
func_6944 = relay.Function([var_6942,var_6943,], output)
mutated_mod['func_6944'] = func_6944
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7007 = relay.var("var_7007", dtype = "float64", shape = (1, 11, 6))#candidate|7007|(1, 11, 6)|var|float64
uop_7008 = relay.cosh(var_7007.astype('float64')) # shape=(1, 11, 6)
func_1665_call = mod.get_global_var('func_1665')
func_1670_call = mutated_mod.get_global_var('func_1670')
const_7018 = relay.const([-4.668860,5.709439,-9.794448,-9.426057,6.329269,-7.753625,-6.741603,0.918920,-1.353745,-2.161873,5.740071,-8.952369,6.156427,-4.009027,-7.725078,-3.957911,3.431770,-6.879079,0.936250,8.480756,-1.165457,5.665376,0.196943,4.261085,8.883538,2.197821,6.581161,-2.677548,-1.210563,4.934050,-6.641696,1.274390,6.620493,1.793962,5.128128,-2.874999,-6.575414,-2.659182,-1.545362,-3.693525,-5.546674,-8.783314,4.925222,-0.672130,6.815715,-7.713386,6.504782,4.434184,6.657350,5.806326,4.008072,-1.083344,7.962347,-8.090397,-5.029589,5.860879,-6.943081,-5.802891,-8.625007,4.539554,4.548704,4.779908,-1.210966,7.714276,-2.825534,-2.855596,-6.755758,4.861426,0.695558,8.030109,-0.070590,-9.224043], dtype = "float32")#candidate|7018|(72,)|const|float32
var_7019 = relay.var("var_7019", dtype = "uint16", shape = ())#candidate|7019|()|var|uint16
const_7020 = relay.const([8,-9,-5,8,5,-4,1,3,-6,7,5,1,9,5,2,5,2,-9,-6,-5,-10,-6,-4,8,7,1,-5,5,8,9,4,10,-10,2,-5,-7,-5,8,1,1,-1,9,5,-10,-4,4,5,-5,-2,-2,-4,-4,1,8,7,-1,4,-6,4,3,-7,9,1,-8,8,8,9,1,-5,4,-10,2,-7,-2,-6,-10,-2,-4,2,3,-4,-4,-6,-4,5,3,-5,9,7,4,8,6,-4,2,4,7,-10,-2,-7,-5,6,-10,-7,2,2,-7,9,-2,-4,10,2,8,10,8,8,-2,5,3,2,-6,-3,-5,-4,7,1,-10,5,-7,-9,6,10,10,-1,7,-2,8,-4,10,-1,-8,4,-7,7,6,1,-1,-10,-8,6,4,10,3,-8,4,10,2,-1,5,-7,3,-4,10,-7,-7,-6,1,5,-2,9,-2,9,2,-5,9,9,9,-6,9,1,-8,-7,3,-5,4,-10,-2,10,-10,-5,8,-10,-9,-10,-2,2,-6,-9,2,-5,-9,-5,-5,-6,-4,5,-5,9,-3,-2,-9,-5,5,5,9,8,-6,-8,9,-7,7,5,7,5,4,-5,4,-8,-3,10,5,-9,-10,4,-2,-2,-5,10,2,1,7,-7,-3,1,9,7,1,7,-4,-1,-3,7,2,9,-7,8,-4,4,-1,5,-8,6,-8,-1,3,3,6,4,-9,10,1,7,-4,-5,8,6,2,-5,2,-7,9,3,-1,-3,-9,-8,2,10,-8,2,-4,-10,-10,-1,1,9,7,5,-10,10,-3,2,4,5,6,8,6,8,-2,-10,6,-5,3,5,-10,3,-3,-3,6,1,-5,-3,6,9,-2,-3,8,3,9,5,3,5,2,5,5,-9,4,3,3,7,3,-4,-1,-2,-7,2,-2,5,6,-3,5,-1,-4,-10,10,-4,9,-4,7,1,-3,-1,9,-1,8,-5,-6,4,5,-8,-1,-8,10,-1,7,10,-4,-7,9,-7,1,-9,-2,-8,-7,2,9,-6,-1,8,8], dtype = "uint16")#candidate|7020|(390,)|const|uint16
call_7017 = relay.TupleGetItem(func_1665_call(relay.reshape(const_7018.astype('float32'), [4, 2, 9]), relay.reshape(const_7018.astype('float32'), [4, 2, 9]), relay.reshape(var_7019.astype('uint16'), []), relay.reshape(const_7020.astype('uint16'), [390,]), ), 2)
call_7021 = relay.TupleGetItem(func_1670_call(relay.reshape(const_7018.astype('float32'), [4, 2, 9]), relay.reshape(const_7018.astype('float32'), [4, 2, 9]), relay.reshape(var_7019.astype('uint16'), []), relay.reshape(const_7020.astype('uint16'), [390,]), ), 2)
func_3491_call = mod.get_global_var('func_3491')
func_3497_call = mutated_mod.get_global_var('func_3497')
var_7026 = relay.var("var_7026", dtype = "int64", shape = (420,))#candidate|7026|(420,)|var|int64
var_7027 = relay.var("var_7027", dtype = "int16", shape = (336,))#candidate|7027|(336,)|var|int16
call_7025 = relay.TupleGetItem(func_3491_call(relay.reshape(var_7019.astype('int64'), []), relay.reshape(var_7026.astype('int64'), [12, 5, 7]), relay.reshape(const_7020.astype('uint16'), [390,]), relay.reshape(var_7027.astype('int16'), [336,]), ), 3)
call_7028 = relay.TupleGetItem(func_3497_call(relay.reshape(var_7019.astype('int64'), []), relay.reshape(var_7026.astype('int64'), [12, 5, 7]), relay.reshape(const_7020.astype('uint16'), [390,]), relay.reshape(var_7027.astype('int16'), [336,]), ), 3)
output = relay.Tuple([uop_7008,call_7017,const_7018,var_7019,const_7020,call_7025,var_7026,var_7027,])
output2 = relay.Tuple([uop_7008,call_7021,const_7018,var_7019,const_7020,call_7028,var_7026,var_7027,])
func_7029 = relay.Function([var_7007,var_7019,var_7026,var_7027,], output)
mod['func_7029'] = func_7029
mod = relay.transform.InferType()(mod)
var_7030 = relay.var("var_7030", dtype = "float64", shape = (1, 11, 6))#candidate|7030|(1, 11, 6)|var|float64
var_7031 = relay.var("var_7031", dtype = "uint16", shape = ())#candidate|7031|()|var|uint16
var_7032 = relay.var("var_7032", dtype = "int64", shape = (420,))#candidate|7032|(420,)|var|int64
var_7033 = relay.var("var_7033", dtype = "int16", shape = (336,))#candidate|7033|(336,)|var|int16
output = func_7029(var_7030,var_7031,var_7032,var_7033,)
func_7034 = relay.Function([var_7030,var_7031,var_7032,var_7033,], output)
mutated_mod['func_7034'] = func_7034
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7148 = relay.var("var_7148", dtype = "bool", shape = (1, 7, 1))#candidate|7148|(1, 7, 1)|var|bool
var_7149 = relay.var("var_7149", dtype = "bool", shape = (9, 7, 1))#candidate|7149|(9, 7, 1)|var|bool
bop_7150 = relay.logical_and(var_7148.astype('bool'), var_7149.astype('bool')) # shape=(9, 7, 1)
bop_7157 = relay.divide(var_7148.astype('float32'), bop_7150.astype('float32')) # shape=(9, 7, 1)
uop_7162 = relay.exp(var_7148.astype('float32')) # shape=(1, 7, 1)
func_3415_call = mod.get_global_var('func_3415')
func_3418_call = mutated_mod.get_global_var('func_3418')
const_7167 = relay.const([4,-8,-7,7,8,8,-6,-7,-8,-5,-2,-8,-1,4,2,5,-3,8,9,-3,-3,6,4,6,-2,6,-8,-8,5,-4,-7,2,-3,2,-6,-8,-8,8,-10,3,3,-7,-6,-9,-6,6,1,5,-8,7,4,3,-10,3,3,-3,7,-7,-4,4,9,-5,-9,6,1,-1,7,-8,-5,8,-9,6,2,1,-4,-7,-6,-5,7,10,5,5,-7,10,6,-2,2,2,-5,-9,9,-2,-10,-8,6,-5,9,-2,4,8,3,-4,-10,-8,-3,-4,5,-5,-2,-2,-1,9,10,8,-7,-2,10,3,6,7,-8,-10,-8,8,8,-6,10,10,-1,1,-9,-8,3,-9,3,-6,6,6,3,-1,5,-1,-7,2,-1,5,8,-7,5,9,1,-10,3,10,-9,6,-10,-8,10,-4,5,-1,3,3,3,7,-9,-10,5,10,-10,-10,3,-7,8,-4,-3,5,4,-5,1,-2,2,-3,-1,-3,-9,-3,-10,7,-4,-10,-7,-2,-2,7,-2,4,-10,-1,1,-4,-6,5,7,-4,7,9,-7,-5,9,-2,3,-5,4,6,9,-6,-6,10,6,-6,8,-7,6,5,7,8,-5,3,-6,-5,-8,9,5,-9,3,-4,-1,-7,-6,-4,-10,-1,3,4,-2,4,1,3,-5,7,-8,-1,3,-7,2,9,4,-9,-5,-6,-4,-8,8,-3,6,2,-10,-2,-3,-9,10,7,10,-1,-10,4,1,-1,7,-1,5,-6,6,-7,9,-6,-5,-5,10,2,4,4,-1,-2,10,-1,7,-7,7,4,1,7,2,3,-7,-1,-2,-6,-1,-9,-2,-3,8,-3,-5,1,6,2,-9,1,-9,-6,-7,-1,-1,-7,-3,-3,2,5,1,-3,-3,7,1,7,8,10,8,-4,-4,-1,3,9,9,3,2,-9,5,9,1,6,1,-7,-7,-7,1,-9,3,-10,-4,4,-2,-10,-6,3,-5,9,4,5,4,-4,2,-1,-1,-7,7,8,-4,-6,-9,10,-7,2,-4,3,-10,4,10,7,10,6,-5,5,-5,10,10,-8,8,8,-6,1,-10,8,-2,-1,10,8,-4,-5,-5,-2,6,4,1,-7,5,-5,-2,-4,9,-5,-3,-6,-7,5,-7,-9,-1,8,-6,-9,10,-7,6,-7,7,5,6,-6,-4,6,-1,6,-1,4,-1,10,4,4,-7,4,-2,5,-2,-2,3,8,7,8,10,5,2,3,-3,5,-7,-5,1,10,10,-8,1,10,9,8,-9,-1,8,-6,-2,-2,-3,-9,-8,6,10,-2,-9,1,-2,1,1,10,-7,-2,-9,-9,3,7,-6,1,8,-9,8,8,10,-9,3,-2,-8,-1,-3,1,8,-9,-2,2,-6,10,-2,3,-8,-3,-4,3,-3,8,5,-2,-9,5,1,-3,10,-10,4,4,-6,4,4,-1,-2,-3,-10,9,-5,-1,4,5,9,-4,-1,-6,-5,-6,-8,6,-7,8,-3,7,1,-8,3,-7,-1,7,1,-8,4,7,-2,-5,-1,6,-1,-4,10,9,5,8,-9,5,-10,6,6,7,6,7,-6,3,-6,2,-9,1,-7,10,-6,5,10,2,-7,-6,-3,-2,7,-8,2,-9,1,5,-9,-3,1,-2,3,7,-5,1,-5,6,-8,-5,6,-1,3,4,-2,8,-9,2,-6,-10,-1,6,-5,8,-1,-4,-6,-4,3,-3,-9,6,-5,9,-9,-10,-3,-8,3,2,10,2,2,-7,6,-8,4,4,-6,1,-6,-6,9,7,-2,7,8,-8,-5,-5,-8,7,-1,-1,6,10,3,10,2,6,-8,-3,-4,7,7,-2,7,7,2,2,-8,-1,10,4,1,-3,-7,-5,1,-10,-4,-5,4,6,10,8,-2,-10,2,-2,8,-2,-4,-5,9,-5,-8,5,-2,9,-10,-9,-6,5,-5,-1,-2,5,1,5,5,-4,-8,-6,9,2,10,2,-10,-4,-3,7,9,5,4,-10,8,4,3,8,-3,1,-2,3,-1,-7,3,10,-8,2,5,-10,7,10,-2,-2,-9,-2,10,-2,-2,3,-3,-7,-10,-2,10,7,-4,7,-3,2,-4,2,-8,2,3,3,-2,8,9,6,-2,7,8,-1,-3,-5,-5,-10,3,-3,1,6], dtype = "uint32")#candidate|7167|(810,)|const|uint32
var_7168 = relay.var("var_7168", dtype = "float64", shape = (1, 384))#candidate|7168|(1, 384)|var|float64
call_7166 = relay.TupleGetItem(func_3415_call(relay.reshape(const_7167.astype('uint32'), [9, 6, 15]), relay.reshape(var_7168.astype('float64'), [384,]), ), 1)
call_7169 = relay.TupleGetItem(func_3418_call(relay.reshape(const_7167.astype('uint32'), [9, 6, 15]), relay.reshape(var_7168.astype('float64'), [384,]), ), 1)
uop_7170 = relay.log10(call_7166.astype('float32')) # shape=(16, 3, 8)
uop_7172 = relay.log10(call_7169.astype('float32')) # shape=(16, 3, 8)
bop_7173 = relay.maximum(uop_7162.astype('uint32'), bop_7150.astype('uint32')) # shape=(9, 7, 1)
func_5213_call = mod.get_global_var('func_5213')
func_5216_call = mutated_mod.get_global_var('func_5216')
var_7177 = relay.var("var_7177", dtype = "float32", shape = (128,))#candidate|7177|(128,)|var|float32
call_7176 = relay.TupleGetItem(func_5213_call(relay.reshape(var_7177.astype('float32'), [16, 1, 8])), 0)
call_7178 = relay.TupleGetItem(func_5216_call(relay.reshape(var_7177.astype('float32'), [16, 1, 8])), 0)
uop_7180 = relay.acosh(const_7167.astype('float64')) # shape=(810,)
output = relay.Tuple([bop_7157,var_7168,uop_7170,bop_7173,call_7176,var_7177,uop_7180,])
output2 = relay.Tuple([bop_7157,var_7168,uop_7172,bop_7173,call_7178,var_7177,uop_7180,])
func_7182 = relay.Function([var_7148,var_7149,var_7168,var_7177,], output)
mod['func_7182'] = func_7182
mod = relay.transform.InferType()(mod)
mutated_mod['func_7182'] = func_7182
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7182_call = mutated_mod.get_global_var('func_7182')
var_7184 = relay.var("var_7184", dtype = "bool", shape = (1, 7, 1))#candidate|7184|(1, 7, 1)|var|bool
var_7185 = relay.var("var_7185", dtype = "bool", shape = (9, 7, 1))#candidate|7185|(9, 7, 1)|var|bool
var_7186 = relay.var("var_7186", dtype = "float64", shape = (1, 384))#candidate|7186|(1, 384)|var|float64
var_7187 = relay.var("var_7187", dtype = "float32", shape = (128,))#candidate|7187|(128,)|var|float32
call_7183 = func_7182_call(var_7184,var_7185,var_7186,var_7187,)
output = call_7183
func_7188 = relay.Function([var_7184,var_7185,var_7186,var_7187,], output)
mutated_mod['func_7188'] = func_7188
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7349 = relay.var("var_7349", dtype = "uint32", shape = (8, 2, 16))#candidate|7349|(8, 2, 16)|var|uint32
var_7350 = relay.var("var_7350", dtype = "uint32", shape = (8, 2, 16))#candidate|7350|(8, 2, 16)|var|uint32
bop_7351 = relay.minimum(var_7349.astype('uint32'), relay.reshape(var_7350.astype('uint32'), relay.shape_of(var_7349))) # shape=(8, 2, 16)
output = bop_7351
output2 = bop_7351
func_7354 = relay.Function([var_7349,var_7350,], output)
mod['func_7354'] = func_7354
mod = relay.transform.InferType()(mod)
mutated_mod['func_7354'] = func_7354
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7354_call = mutated_mod.get_global_var('func_7354')
var_7356 = relay.var("var_7356", dtype = "uint32", shape = (8, 2, 16))#candidate|7356|(8, 2, 16)|var|uint32
var_7357 = relay.var("var_7357", dtype = "uint32", shape = (8, 2, 16))#candidate|7357|(8, 2, 16)|var|uint32
call_7355 = func_7354_call(var_7356,var_7357,)
output = call_7355
func_7358 = relay.Function([var_7356,var_7357,], output)
mutated_mod['func_7358'] = func_7358
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7663 = relay.const([[[-5,-2,10,9,9,-3,-3,9,-5,-2,-4,3,-4,1,-6,-7],[7,2,-1,5,6,6,-4,-7,-6,5,-6,3,1,-3,-3,7],[-10,-9,9,10,-3,-5,9,-6,-10,8,9,5,-5,6,7,-8],[-2,7,-1,9,1,-1,-7,-9,9,-3,9,10,-6,-10,10,9],[4,-7,3,9,1,6,10,-5,3,9,7,5,-6,6,2,-9],[-3,1,2,10,3,-1,3,2,-5,-9,-2,6,9,5,-9,-6],[-1,-8,9,8,6,-3,-5,-7,7,1,-8,9,-10,9,-9,4],[3,4,-2,4,-2,-8,-3,5,1,-1,-4,-8,-5,8,3,-1],[-5,-6,9,-6,-8,-6,-1,3,9,-3,-6,-9,-8,-2,-8,7]],[[2,-2,-5,10,5,4,-6,-8,-5,-10,-3,-2,8,2,-1,-1],[2,3,-4,-1,-8,-6,4,-1,-6,9,-2,10,9,7,-3,-2],[-4,4,-8,8,2,2,10,4,-8,5,6,-1,-9,4,9,-9],[-2,2,8,8,7,-5,-7,5,3,-5,-7,-5,-5,8,-6,-8],[10,2,1,7,4,-5,2,-6,9,-4,-10,-5,-10,10,2,6],[-7,9,8,5,9,-3,-1,-5,-4,7,10,8,6,5,5,7],[10,9,-5,2,-6,6,7,8,-2,5,8,1,-3,-10,-8,10],[7,9,-4,6,9,-7,-3,8,-1,-7,-10,1,-5,-2,9,4],[-1,-8,6,-5,5,-1,-7,2,-4,7,7,7,-10,-6,1,7]],[[-5,-5,8,-5,-1,9,-5,-8,-2,-5,10,3,-1,10,-1,1],[1,-6,-5,-2,-7,-8,4,5,8,4,-10,-9,8,-2,-6,4],[9,6,2,2,-7,-4,-6,-6,7,-2,7,-9,-3,-5,-1,6],[-10,4,8,-1,-8,-7,-4,-7,-3,9,4,-8,-8,-4,1,-1],[-2,-2,2,-5,-8,3,5,2,-10,-1,-8,1,-9,9,7,-10],[-4,7,-8,6,-5,8,10,-2,-1,-7,10,-9,3,1,-7,-6],[7,-8,-8,-1,-5,4,8,-8,-9,-10,-10,-1,6,-10,-5,3],[-2,7,7,-2,8,8,4,-7,-8,3,7,-1,-6,-5,9,-4],[-10,2,10,8,2,4,-1,-10,-9,6,-6,8,-8,-4,-10,10]],[[3,7,-6,1,-10,-5,-7,7,7,-1,-8,5,-1,-5,-1,-3],[6,8,-3,-1,6,-4,-10,-1,4,-10,-1,2,-5,-3,1,1],[-5,1,-7,-3,-8,-10,-7,5,-4,-8,1,-7,7,3,7,7],[-2,-2,-3,-6,9,9,-6,1,-1,-5,1,9,3,7,-7,-1],[-5,9,-7,8,10,4,-4,-6,-6,-7,2,-4,-9,4,-7,8],[10,-9,2,-3,-5,-8,3,-3,-2,5,-8,8,2,-7,9,-3],[3,-7,9,7,8,2,9,10,8,7,8,7,-9,1,10,-10],[3,-9,-5,6,-4,-5,-6,6,4,-3,-1,10,-7,-2,4,1],[7,-2,6,6,-6,3,-7,7,-2,-4,3,5,-5,-8,-6,8]]], dtype = "int64")#candidate|7663|(4, 9, 16)|const|int64
var_7664 = relay.var("var_7664", dtype = "int64", shape = (4, 9, 16))#candidate|7664|(4, 9, 16)|var|int64
bop_7665 = relay.bitwise_xor(const_7663.astype('int64'), relay.reshape(var_7664.astype('int64'), relay.shape_of(const_7663))) # shape=(4, 9, 16)
var_7687 = relay.var("var_7687", dtype = "int64", shape = (4, 9, 16))#candidate|7687|(4, 9, 16)|var|int64
bop_7688 = relay.subtract(const_7663.astype('uint64'), relay.reshape(var_7687.astype('uint64'), relay.shape_of(const_7663))) # shape=(4, 9, 16)
uop_7695 = relay.log2(var_7664.astype('float32')) # shape=(4, 9, 16)
bop_7698 = relay.greater_equal(uop_7695.astype('bool'), relay.reshape(bop_7688.astype('bool'), relay.shape_of(uop_7695))) # shape=(4, 9, 16)
func_5255_call = mod.get_global_var('func_5255')
func_5257_call = mutated_mod.get_global_var('func_5257')
const_7702 = relay.const([-3,3,4,3,-3,-7,7,5,2,2,-2,1,8,-1,3,8,-10,5,7,3,-6,-2,-10,8,8,5,-3,-9,-6,-5,-10,-4,-6,-4,9,-2,8,8,2,1,-4,-1,-5,-9,-3,-10,1,-3,5,9,-5,-10,6,2,-2,7,-9,4,-1,7,-1,-6,2,-9,-7,2,-9,4,10,3,-8,9,-1,3,10,-5,-8,-3,-10,-9,1,8,6,5,-9,10,-9,7,2,1,2,2,6,-2,10,-1,3,-10,3,-4,4,-2,-3,-4,-2,6,10,6,5,-2,7,5,5,6,-1,-10,4,-9,-2,-3,-7,-8,9,2,-10,-1,8,-7,-1,10,-5,8,-4,-8,9,1,-10,-2,-3,-5,9,-9,1,-9,-9,6,-1,5,1,-2,-5,-8,-1,4,-5,6,6,-10,-3,1,1,-8,-4,-6,6,-7,10,-6,6,-7,-10,4,10,2,4,-7,-3,-7,-8,5,-2,7,-10,7,4,6,8,-7,-3,-4,-4,-3,-6,7,-5,9,5,-3,10,10,3,5,5,2,3,-6,-6,8,-9,-7,-7,4,-4,-8,7,6,3,3,-5,5,-10,-7,-8,-10,1,-3,-6,2,-6,-6,-8,4,6,-9,-2,-1,5,-1,-4,-4,-10,3,6,8,6,8,6,7,-9,3,3,4,-3,-5,-5,1,-5,-1,-2,6,3,-3,-4,-3,9,6,1,1,4,10,-2,7,9,-10,-9,8,10,4,-4,-9,-4,-6,-5,-8,3,-2,-3,4,-9,3,-3,-3,-4,9,6,10,2,-5,-3,8,3,2,-9,7,3,7,1,-10,-8,3,-6,-4,-1,5,-1,9,-1,1,-5,9,8,-5,9,-6,-4,-1,-3,9,1,7,7,10,-5,9,9,10,-7,6,2,-10,-10,7,5,7,-1,2,10,-5,10,5,-5,7,-1,5,5,-10,-10,8,4,-3,-10,3,4,-5,6,-4,-6,-3,3,8,5,3,-6,1,8,5,7,-10,-7,-5,-4,4,-1,-6,-4,4,-4,-5,8,10,-9,4,4,9,6,4,5,9,-4,-10,-9,8,-1,-4,10,-3,-1,-7,10,6,-9,7,8,-8,10,1,-4,5,-1,-2,-2,-9,3,-6,1,-8,-4,-2,10,-7,2,2,-6,-9,3,-7,8,10,2,-2,-9,3,5,6,-9,-6,10,5,2,-4,-9,3,-6,9,-8,5,3,-9,-5,-4,9,-3,7,-6,6,-5,10,4,-9,-8,-6,-2,-10,9,-7,10,-4,-6,5,-9,1,-5,2,-9,-4,7,9,-3,2,2,7,-7,7,2,-7,-2,-5,-9,8,-9,6,-2,-5,2,9,9,8,-6,1,-4,1,7,4,-4,-6,5,-8,5,-4,-3,2,8,9,-4,4,-9,5,2,3,-10,-10,1,3,-1,4,9,-7,-6,1,-9,8,-3,-5,10,2,9,6,9,-7,-4,4,6,10,-10,-10,7,8,-8,-4,2,-10,-9,-10,-4,9,-7,1,8,5,-2,6,2,-1,6,-1,-3,-9,5,-3,8,7,6,-1,1,2,-3,-5,2,-7,3,-9,7,9,9,1,3,-5,9,-5,3,6,-8,1,8,10,-6,-6,-9,8,-8,-9,8,1,-1,-8,6,10,-4,3,1,-1,-4,-3,-5,-5,10,3,-8,-5,-3,-3,4,2,-4,-10,-8,-3,2,-9,5,-10,-8,10,7,4,8,-8,1,-2,3,-10,-5,-7,-7,3,-10,4,6,-5,1,3,-9,2,1,4,8,-6,7,1,10,7,-9,-10,-6,9,6,-7,-5,6,-4,9,-6,-6,-10,8,-3,4,5,6,-10,-3,9,5,10,9,2,8,4,-9,-1,8,2,-5,-7,2,-5,6,-4,7,2,2,3,10,-5,4,7,-1,4,-10,6,10,7,-7,-9,-9,-10,5,-10,-3,-5,1,10,5,-8,9,-6,-7,-5,8,-9,-4,-7,-4,-5,1,5,6,-6,3,5,-9,-9,8,1,9,-2,-10,-6,-3,3,-3,-8,6,-9,7,3,6,2,-7,9,-6,-2,7,1,9,6,4,10,-9,1,2,3,7,10,-10,-1,-10,-5,9,7,-1,9,-8,-7,5,-4,-3,2,4,-3,3,-3,5,7,3,1,10,9,-6,-6,4,7,-7,-5,-3,7,2,-6,-5,10,-1,-4,-10,9,-9,6,-5,1,4,-4,6,-2,1,-5,2,-6,6,-4,-1,4,-7,3,5,-3,2,5,-9,6,4,-6,-5,-9,-2,-9,5,-5,6,-4,4,10,-7,5,2,5,1,2,8,10,6,5,3,-4,9,-9,-7,10,6,9,-7,1,8,5,-9,-5,4,-8,1,-7,-2,-5,9,-1,1,10,6,7,9,1,-6,-2,-8,9,-2,10,-7,1,10,-9,-3,10,-2,-5,-8,-6,-3,-7,9,-10,6,-5,7,-7,9,2,4,-3,-1,-7,7,5,4,-10,-2,1,2,-1,3,8,5,-6,-1,7,-9,3,10,5,4,6,-8,3,5,1,-3,10,8,-9,4,1,10,1,-3,-3,-4,2,8,-3,1,-10,2,4,-3,1,7,-5,7,9,2,7,-3,-7,-4,5,-4,-2,5,8,-7,7,10,-10,-8,5,3,6,-10,-6,-3,10,5,4,7,8,-9,-9,9,-6,-10,-6,4,6,5,8,4,5,-3,-9,-1,4,4,-10,5,-9,-8,6,9,6,8,1,-6,-1,-5,9,7,-7,9,1,3,6,9,3,-8,3,5,-5,-2,9,-7,5,-4,-3,10,-4,8,-4,4,4,-8,-5,2,-7,-8,-4,-5,-7,1,-1,-5,-6,4,9,-9,1,3,4,8,2,8,-1,4,1,1,8,6,1,4,-10,-5,4,-7,-3,-10,2,-10,-10,-4,-4,2,1,6,9,-1,4,-10,-4,-7,-5,-4,4,4,10,4,1,6,5,3,1,-3,-2,5,3,4,8,6,4,3,-6,-8,4,-10,-7,5,8,4,2,-7,1,2,1,-9,-6,1,-3,10,4,-6,-4,8,10,6,-1,-6,6,2,-6,4,-5,-5,-5,-6,6,9,-5,-5,-9,7,-4,2,3,-1,5,2,-10,10,3,-4,10,-10,-10,-9,6,1,-9,1,-7,10,8,5,8,-3,1,-1,-1,-5,-5,-2,-2,-10,7,2,4,9,-5,-9,-8,-5,2,-2,-6,7,-1,2,-3,-4,-4,6,10,7,10,10,10,8,1,8,7,1,-4,1,5,-10,4,4,-3,-1,9,-10,-9,3,-8,-9,6,-3,3,2,1,-7,-9,-1,4,-5,7,3,4,8,-9,-9,9,7,-7,-9,2,5,9,-4,-2,-7,4,5,-8,-2,-1,1,-4,-1,-9,1,-6,-3,-4,9,5,7,6,7,-6,-10,-1,-5,1,-6,-6,-2,-5,9,-1,9,6,3,-7,-5,-1,-10,-8,-7,-10,-9,-4,-1,5,10,8,-10,-3,-6,7,-3,-8,3,7,5,5,-4,-5,7,4,-6,5,9,-10,10,10,-6,-8,6,-8,-3,-7,1,-3,-1,-6,-3,2,-2,-9,-10,8,7,4,1,4,-7,2,-2,6,4,-2,-4,-9,7,-9,-4,4,2,5,-1,9,10,6,6,7,8,7,4,-8,-1,-9,-3,8,-2,-1,2,1,-1,5,-2,7,10,2,1,6,-9,9,-9,-9,2,5,10,-7,6,-6,4,8,1,-9,-10,-4,-1,10,2,2,9,-1,5,10,1,10,3,-9,-10,5,-3,-8,4,6,-1,-1,6,-1,-9,4,7,3,-2,2,-3,1,-8,2,-10,9], dtype = "uint32")#candidate|7702|(1440,)|const|uint32
call_7701 = func_5255_call(relay.reshape(const_7702.astype('uint32'), [8, 12, 15]))
call_7703 = func_5255_call(relay.reshape(const_7702.astype('uint32'), [8, 12, 15]))
output = relay.Tuple([bop_7665,bop_7698,call_7701,const_7702,])
output2 = relay.Tuple([bop_7665,bop_7698,call_7703,const_7702,])
func_7704 = relay.Function([var_7664,var_7687,], output)
mod['func_7704'] = func_7704
mod = relay.transform.InferType()(mod)
mutated_mod['func_7704'] = func_7704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7704_call = mutated_mod.get_global_var('func_7704')
var_7706 = relay.var("var_7706", dtype = "int64", shape = (4, 9, 16))#candidate|7706|(4, 9, 16)|var|int64
var_7707 = relay.var("var_7707", dtype = "int64", shape = (4, 9, 16))#candidate|7707|(4, 9, 16)|var|int64
call_7705 = func_7704_call(var_7706,var_7707,)
output = call_7705
func_7708 = relay.Function([var_7706,var_7707,], output)
mutated_mod['func_7708'] = func_7708
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7829 = relay.var("var_7829", dtype = "bool", shape = (14, 16, 10))#candidate|7829|(14, 16, 10)|var|bool
var_7830 = relay.var("var_7830", dtype = "bool", shape = (14, 16, 10))#candidate|7830|(14, 16, 10)|var|bool
bop_7831 = relay.logical_or(var_7829.astype('bool'), relay.reshape(var_7830.astype('bool'), relay.shape_of(var_7829))) # shape=(14, 16, 10)
output = relay.Tuple([bop_7831,])
output2 = relay.Tuple([bop_7831,])
func_7837 = relay.Function([var_7829,var_7830,], output)
mod['func_7837'] = func_7837
mod = relay.transform.InferType()(mod)
var_7838 = relay.var("var_7838", dtype = "bool", shape = (14, 16, 10))#candidate|7838|(14, 16, 10)|var|bool
var_7839 = relay.var("var_7839", dtype = "bool", shape = (14, 16, 10))#candidate|7839|(14, 16, 10)|var|bool
output = func_7837(var_7838,var_7839,)
func_7840 = relay.Function([var_7838,var_7839,], output)
mutated_mod['func_7840'] = func_7840
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7859 = relay.const([[[4.451734,-5.502219,-5.053054,4.009046,2.941894,-6.526223,-2.892589],[4.174453,-3.867626,-9.129639,1.329852,7.166286,-6.403712,6.641717],[0.459058,-2.068230,-1.014811,4.323255,5.701812,-4.803058,-0.846342],[-3.470001,1.948657,-5.759419,-7.493561,-6.281704,7.748990,0.682437],[-2.751123,1.799268,-7.220309,-1.683652,-6.767372,8.814196,-9.304186],[-2.385845,-8.327266,6.790649,-2.511355,9.468711,4.307918,-5.657590],[8.632130,-9.690686,4.411703,-3.689866,2.400865,-6.740231,-4.283337],[-4.527411,0.151670,-2.214625,3.534698,-7.737647,4.822722,0.354908],[6.375219,9.273715,4.004143,-8.335153,8.495423,-8.771113,-9.894502],[4.053280,-7.556653,4.086033,-3.668965,-4.293254,-7.794439,-0.496843],[-2.023597,-1.627431,0.469344,9.754168,4.593017,7.054235,-5.915967],[4.003140,2.700882,4.935792,-3.134342,1.381722,-3.471016,0.613369],[-0.550738,-9.300641,6.339098,0.252984,-6.562077,3.729421,-9.033719],[3.893651,1.018490,0.216908,6.734458,-3.573445,-1.792413,-9.781996],[0.749105,2.588908,1.732079,5.012840,-5.745912,-6.750809,1.787507],[-6.802023,-2.822200,-8.463787,-2.411368,-6.729775,-3.853924,-3.096073]],[[6.491363,-9.305927,-4.858792,-9.235203,8.476977,-1.054327,-0.081960],[6.688331,-5.556527,-7.111795,1.158182,-3.579918,-3.022692,6.596633],[-9.564050,1.055674,-7.355182,-0.113866,2.734341,0.573382,-0.005854],[-6.468271,-5.570493,-9.998480,6.626117,3.428232,1.633574,7.719841],[9.223219,3.254212,-3.969335,7.893902,-5.819256,5.153427,-6.562836],[-3.067380,-8.364682,-4.430605,-7.324677,2.411937,2.580546,-5.956178],[3.556891,-7.024604,-9.544528,-3.990581,0.702048,-6.896352,0.233940],[8.158524,-4.605857,6.817553,0.859807,5.565467,-7.641961,3.437722],[0.137816,5.134311,8.929169,6.613440,5.109295,-0.574602,5.627637],[-7.635609,-5.555200,7.783194,7.643099,5.670125,-0.296490,9.419547],[-6.344236,-0.978122,-7.294618,-0.520533,9.851484,-1.454652,8.816166],[7.348481,1.767527,1.896567,-3.855401,-0.073895,8.356915,-6.892096],[-9.166516,5.663909,-9.847134,-4.917928,4.185665,2.863983,2.471217],[3.939312,-7.079297,9.406763,-4.395281,-5.561623,9.526246,-2.278804],[-8.687876,-0.879055,-6.990039,8.737477,4.536201,-9.018726,-8.456421],[-4.487504,1.434676,-9.419926,-9.702133,7.825151,0.801835,9.744259]],[[-3.065307,4.535895,-2.387688,2.299253,9.567861,-0.749828,-6.413311],[6.031679,-2.183198,-3.153396,8.642762,3.479858,7.991434,-3.536481],[-5.189874,4.157094,-6.540088,-2.438541,7.411564,4.156877,-3.546146],[5.319519,-3.533609,-8.547463,-9.843060,-7.214810,5.375563,-4.271614],[-5.990602,9.863464,-0.908780,0.307795,-8.559555,-6.614327,0.198854],[-3.088729,0.859523,0.766734,0.871089,-5.683573,-5.475691,6.306671],[-1.300576,-7.826999,8.599776,-6.347664,8.363906,-2.243283,7.813465],[7.920369,-8.411062,-5.141608,7.314940,-2.702315,0.594794,4.705524],[1.515641,-0.714476,-4.616484,4.712623,-7.111142,4.973309,7.352652],[6.266360,-1.779166,-4.233111,8.197907,-4.778946,-4.606345,5.799160],[1.774681,2.787003,4.649081,9.664728,3.384631,2.106183,-4.572565],[4.642935,-7.049941,-6.743383,4.591278,-6.671017,4.480627,5.325413],[5.043053,-5.067626,1.192914,0.802791,6.024994,-7.513073,9.873690],[-2.353144,9.746233,-0.915333,5.671605,-8.298025,6.520456,8.232999],[-1.986058,-4.591980,1.867616,-2.030426,-2.717765,4.754071,-8.704418],[-9.532352,-1.269237,7.728093,-5.837289,8.567599,-0.422846,-5.078479]],[[-0.785174,9.853122,2.708401,-9.291786,-4.166516,4.044277,8.689055],[-0.128883,3.520259,6.741048,3.731003,1.371005,-6.887916,5.969461],[-0.314153,-0.604002,8.687292,6.166320,0.353106,4.101632,6.211745],[1.755737,-0.737161,-6.870216,-3.068697,8.930922,6.061289,-3.919134],[5.218697,-4.938639,5.200184,3.773804,-9.596839,5.292132,-5.989663],[3.102059,-5.884224,-7.712125,-4.098129,-3.609336,7.059201,6.549564],[-7.446747,-2.087504,9.190088,2.654647,-2.306638,-4.496142,-7.902574],[-4.286742,-5.795378,-9.997870,-2.726666,3.429098,1.012308,-5.132207],[1.504533,1.791420,3.959316,-7.687505,0.141031,4.500963,-3.254053],[-2.550562,-7.918826,7.140407,1.302571,7.523288,8.804329,-6.001040],[-5.762252,4.093515,-7.205280,9.756376,-0.070898,1.882344,3.865050],[8.073344,-6.857567,-9.480865,9.657400,2.388174,9.351869,-3.217205],[-2.977332,-7.479906,1.707407,-9.923746,-7.961045,6.836182,7.141973],[-5.216295,-9.146671,-1.043607,-3.975077,7.665258,6.100719,-5.100900],[3.994346,1.458926,9.057340,-8.194365,4.122661,2.024463,-6.214041],[-1.752012,2.533275,-5.663241,0.636369,-4.608218,-9.692306,7.697826]],[[-7.839282,-3.687198,-4.027796,1.517652,9.827169,1.658689,8.050277],[2.021283,1.238228,7.205841,-5.934339,-3.294238,8.562499,7.066027],[-2.566288,9.798052,-5.343074,-6.222062,2.450773,7.995621,8.376425],[5.320590,6.322257,-5.785169,-2.353867,8.477702,-4.017051,-9.219192],[-5.168911,4.941589,-5.865333,4.431481,-4.831858,-4.848315,-2.891359],[6.316645,-8.636075,-2.724114,2.773101,-4.148919,-7.117086,-6.335085],[-5.199432,-4.365211,7.938250,6.371540,-5.924696,-7.176147,6.772776],[-5.358220,-0.215832,2.204988,-2.493943,-3.574477,6.057370,-7.455805],[-9.946305,-6.785567,6.824187,2.159898,-4.339540,5.016480,-2.555448],[2.117398,-9.578020,3.905693,6.747624,1.709505,-4.961955,5.881553],[-4.624788,7.665578,7.047446,0.784322,8.952894,2.687122,-1.000058],[-3.957415,-3.303091,-2.474462,-0.746976,-8.162023,-0.073041,3.162671],[7.460136,-0.323615,-5.873014,5.500101,3.711049,3.053594,9.239064],[-5.607100,4.381212,-8.813521,2.623321,-2.221823,-2.518372,7.422730],[-7.262847,1.108452,-5.934606,4.197293,-9.970027,-5.637884,-8.125308],[-9.498575,-1.295038,6.133205,7.592592,8.656351,-3.148660,-4.822667]],[[-6.101176,9.317042,9.531408,1.157950,6.337363,-5.155865,5.578394],[1.944598,-2.994367,5.595610,1.809113,-6.598468,1.712446,7.123979],[4.500742,-6.870814,4.234218,-3.578762,0.348100,-8.738931,4.728819],[-1.859085,1.028634,-3.413265,0.705195,-7.971920,-9.966453,9.035894],[4.743174,7.226440,6.751322,-2.385575,8.125137,3.681459,-2.592463],[9.267546,-5.899451,-8.967093,-7.519392,-6.953457,7.326157,-2.315413],[2.018376,5.350511,-1.273509,-0.435616,-8.348940,-6.471459,9.201753],[-6.824314,-2.642343,4.635513,3.897981,-2.526642,-3.800582,3.223642],[-2.454123,4.567290,-2.653064,-1.487519,9.002323,-1.253359,6.894077],[-4.253724,-6.925627,0.268190,-1.505587,3.121354,-0.452785,4.949117],[-7.493022,-3.789300,-7.060312,0.502531,-2.672031,8.037909,-5.386823],[-9.243184,7.097475,-5.989791,4.483298,-7.461064,1.761158,-3.075321],[5.720888,-8.486461,-7.489427,-7.204623,6.250118,2.096620,7.778143],[5.321011,-6.489026,-0.497690,-9.148768,3.963074,-1.857670,-1.348162],[-6.886482,9.699843,-4.186295,1.074787,6.316103,-7.735045,2.118112],[-4.716728,-0.203535,-8.843043,3.721097,-4.052065,-9.802919,-9.670025]]], dtype = "float32")#candidate|7859|(6, 16, 7)|const|float32
uop_7860 = relay.tan(const_7859.astype('float32')) # shape=(6, 16, 7)
func_7704_call = mod.get_global_var('func_7704')
func_7708_call = mutated_mod.get_global_var('func_7708')
const_7863 = relay.const([[1,-6],[8,7],[-2,-6],[-8,2],[-1,-4],[-8,3],[-2,1],[1,4],[3,-10],[7,-6],[10,5],[9,7],[10,4],[8,10],[-10,-10],[2,-3],[-5,6],[8,-8],[-8,-8],[4,8],[7,-2],[3,6],[4,-4],[-1,1],[-10,7],[-1,-8],[-10,7],[-4,-10],[10,5],[-5,-7],[-9,5],[-10,4],[-3,9],[6,4],[-6,3],[-7,10],[-6,-9],[7,10],[-8,4],[3,-9],[-10,2],[-8,5],[-9,-5],[-1,2],[-3,8],[10,6],[7,8],[-9,-4],[-7,-7],[5,2],[-10,8],[3,1],[-4,6],[1,2],[1,5],[8,10],[-8,-2],[-1,-6],[-1,-4],[-8,-10],[6,-6],[5,4],[-9,7],[2,5],[-6,-4],[-1,-8],[5,-7],[-7,-5],[3,1],[-1,-6],[-7,8],[-10,-9],[1,-1],[-4,-5],[1,3],[-10,-2],[-10,-1],[-1,1],[-9,7],[-3,-6],[-2,7],[8,-8],[-5,-8],[9,-8],[-4,-2],[-7,4],[4,-5],[-10,3],[10,9],[-3,6],[5,-3],[-3,-5],[-3,3],[-10,7],[-6,2],[5,-9],[5,-2],[4,8],[-9,6],[-3,8],[-8,7],[-6,1],[-9,10],[-8,1],[-7,-4],[9,2],[3,10],[9,-4],[-9,-4],[-5,10],[7,10],[-1,1],[-1,10],[-6,-8],[10,-5],[-7,5],[-9,-2],[-3,-10],[4,-6],[-10,4],[-1,-3],[-7,-6],[-10,6],[-1,3],[10,-6],[-10,1],[-8,-9],[-3,2],[-7,1],[-8,3],[-1,5],[-9,-3],[6,10],[-8,7],[8,-6],[1,5],[3,-4],[-4,-10],[3,6],[-6,9],[-8,7],[9,-4],[4,-8],[-8,-2],[10,3],[-10,-8],[10,7],[2,-9],[4,-10],[4,2],[2,10],[4,10],[-8,9],[-7,3],[10,3],[-5,-6],[-2,3],[-10,1],[-6,3],[-5,-5],[7,-10],[-10,2],[-2,-6],[9,5],[-8,-7],[-3,10],[1,1],[-6,8],[-10,-8],[3,4],[4,4],[2,7],[10,-6],[-4,4],[10,3],[10,9],[-2,-2],[-6,-4],[-6,6],[-10,6],[8,-2],[-10,10],[-2,6],[-6,3],[2,7],[-4,10],[9,-6],[10,-8],[-7,5],[-1,-7],[-9,4],[-8,5],[4,9],[5,8],[5,5],[-9,6],[-7,3],[-5,8],[5,-1],[-1,-4],[10,-5],[-3,1],[8,-3],[-8,2],[9,3],[10,-8],[-5,8],[7,3],[7,4],[-2,8],[-10,-8],[10,-4],[-9,-3],[-8,2],[1,-1],[5,-8],[3,-2],[7,-6],[1,-5],[-6,-9],[8,2],[2,1],[-7,4],[4,6],[-5,4],[-8,-9],[4,9],[-3,-3],[-10,-8],[2,-8],[10,10],[-5,3],[5,-2],[-8,2],[-2,-2],[-1,9],[1,-4],[5,-1],[-5,10],[7,9],[-1,-5],[-9,10],[9,-10],[8,-10],[5,3],[7,6],[7,9],[1,6],[-7,10],[-9,9],[4,-8],[9,5],[-3,7],[-4,-9],[10,3],[-6,-3],[1,2],[8,5],[3,6],[3,-7],[2,6],[6,5],[3,-7],[-8,-5],[6,8],[-9,7],[8,3],[7,-8],[1,-4],[-9,-4],[8,5],[-4,6],[6,-7],[7,-6],[-7,6],[8,-2],[-10,-7],[-5,3],[-4,1],[7,-1],[1,9],[-2,-5],[-5,-3],[-7,-3],[9,-3],[-2,-10],[-5,8],[10,6]], dtype = "int64")#candidate|7863|(288, 2)|const|int64
call_7862 = relay.TupleGetItem(func_7704_call(relay.reshape(const_7863.astype('int64'), [4, 9, 16]), relay.reshape(const_7863.astype('int64'), [4, 9, 16]), ), 3)
call_7864 = relay.TupleGetItem(func_7708_call(relay.reshape(const_7863.astype('int64'), [4, 9, 16]), relay.reshape(const_7863.astype('int64'), [4, 9, 16]), ), 3)
func_1798_call = mod.get_global_var('func_1798')
func_1801_call = mutated_mod.get_global_var('func_1801')
const_7874 = relay.const([4.909509,-2.956214,-8.225634,0.951065,7.900922,2.377753,-8.340233,-5.383328,2.858646,8.844735,6.811775,-2.326373,7.947455,-3.742975,1.288310,4.621458,-5.461990,-4.112297,3.775144,6.127209,-4.628307,-2.694693,3.576296,3.047350,3.263600,-4.595025,-2.204328,-8.096081,7.049225,1.737271,-6.516738,-7.143854,-3.304715,-9.599087,-2.215126,-2.957094,-1.082345,-6.292910,-1.979208,-4.910407,-8.381960,-3.622545,6.198343,-2.092633,-6.761811,-5.929646,-0.094890,5.220849,6.385121,-9.006157,0.411824,-7.663711,-2.674775,4.463098,-8.486161,-8.408362,-9.822416,-7.042708,-7.055891,-7.488345,-1.787790,1.334384,2.147950,2.315720,-2.506528,1.836367,4.535247,7.525626,-9.539110,-4.635638,3.507619,8.265825,5.924444,1.098912,-5.577996,-2.187275,-6.738349,4.221721,-9.231890,-2.569721,-0.510094,-8.309706,-2.477432,1.662501,-9.468664,9.566942,1.083609,0.436418,-7.428920,-0.895112,5.528580,8.728406,-8.842058,0.828251,-3.413371,-3.651030,7.133252,-9.508404,-8.541419,-8.304070,2.792719,-8.685005,-3.749287,8.787912,6.284036,7.061224,3.309168,-1.928744,2.833443,-3.034889,-2.971691,4.007369,-0.669410,4.516340,2.924256,3.857431,8.619863,5.102631,-3.979871,8.014812,-3.855161,-5.824112,7.518319,-1.741552,-7.432069,-8.773192,2.398142,5.836104,6.420659,-3.853940,-6.574521,5.291104,-0.872729,-9.842329,-0.437216,-7.787863,-6.534885,-0.140744,2.689385,7.439721,4.257730,-2.757957,4.110809,-6.332244,-9.819715,1.947572,5.303131,6.020341,-9.854757,-3.111524,4.590454,7.670470,9.217559,0.733566,-2.238696,-6.767079,3.753499,-4.782150,-5.660281,7.612979,-1.578308,-1.079722,-8.335431,1.580020,4.274002,7.162051,-2.513915,-3.427472,-5.984291,-3.165573,-6.801524,-7.279059,-9.241534,-1.325880,-4.885096,3.408410,8.451019,-0.073694,6.255456,-2.746343,1.441999,9.347339,-0.407045,5.036927,-3.305329,-8.663837,-9.486314,-4.642966,3.481077,-0.689741,-5.940114,-6.624279,1.758195,1.091195,-8.080048,1.526278,9.731588,6.325233,-1.490426,-9.166096,5.379921,-1.436642,-0.103593,-4.095852,0.673247,1.555209,-0.876335,3.691872,-7.318525,0.138665,-3.568992,-8.327239,1.214751,-1.540367,-2.576027,-5.403309,5.848402,5.351573,6.643435,5.875716,-5.691873,5.115203,9.669411,-9.030416,2.683779,-4.531090,-2.966578,-4.175079,7.575244,-8.178633,3.888307,0.810115,5.499371,-1.768131,-9.238244,0.373046,-4.700330,8.640042,-7.056847,4.387429,5.069333,2.202192,-0.119967,-1.002458,-1.496475,4.321912,3.192649,-5.563827,-3.066991,-2.908358,2.744314,9.041755,-0.727303,4.032758,1.008736,-6.186564,-3.323363,-1.030363,6.215838,-8.411348,1.653312,-1.761609,-4.613910,8.346882,5.474074,9.468042,-8.146467,7.712844,-7.597063,5.144022,7.964190,-1.683510,5.434961,9.122345,0.543089,8.840052,4.897777,-4.529070,-5.919363,-4.275111,7.571186,-9.630957,3.221535,-9.709714,-1.210081,6.802038,8.009054,-2.877313,-2.062931,-8.679746,1.842492,7.237510,9.201519,0.529809,4.576721,5.162664,0.537089,-9.142581,3.362884,-5.759381,-5.739213,-9.921302,-9.800426,3.152509,-1.184261,-1.375382,3.835395,-5.194835,7.500204,-9.274611,-1.765513,1.796295,-6.088146,-6.618397,-3.970020,7.617877,-9.016565,4.566946,-2.615848,5.731330,-9.262385,5.882186,0.242062,-0.310650,9.546653,-5.883303,-9.586493,5.366150,4.245083,3.736487,1.570592,8.126142,-3.414001,-2.481503,3.185794,2.420201,6.386141,2.175606,-3.312823,-3.760516,-9.963472,4.055218,-4.482202,2.993063,-4.308032,-5.038320,-9.838612,3.870313,-7.824860,5.554579,-7.172107,3.853579,1.034512,-3.519194,-9.979041,0.089028,5.123435,3.075735,-1.948619,-7.846533,7.992294,-0.536686,-0.346950,-1.073007,0.846484,-4.418830,-2.917793,8.131298,-7.788566,-1.034732,-6.023156,8.694192,-9.273059,-1.294736,-5.889254,-7.899064,7.115473,7.201049,-4.082578,-5.741145,0.427789,5.479620,-1.457693,-0.870956,9.522875,7.224406,-2.339188,2.210503,4.948478,8.389078,-9.237816,-9.645626,-0.918960,0.153386,9.757835,-7.150420,-4.728133,2.291132,2.269858,6.750848,-5.116512,-1.750853,-0.073370,7.715684,3.423384,3.905493,-5.221428,2.662930,5.936373,-1.757635,-5.839306,9.410515,-7.067474,4.179935,-5.439998,-1.485619,6.169312,-5.072743,2.238518,-3.274989,-5.577158,-5.886024,9.739246,-0.604571,7.423095,6.963064,7.564092,-7.920315,6.333614,2.275104,4.223564,-1.083572,8.178025,-5.876487,7.521124,8.643640,-6.500868,-3.315459,-1.909344,-8.161209,9.666325,9.117472,-6.458723,1.290653,-8.936107,-6.259725,-4.674034,-6.354780,4.236978,-3.466046,4.653766,-6.089919,-8.841784,3.256963,3.957622,-2.264827,-6.643431,-7.271300,1.259380,-4.004857,-6.140006,4.531040,-2.751294,-6.037683,-9.544358,-4.572320,7.564893,0.749172,3.689817,-3.174783,-4.118740,-6.935889,-2.314542,-8.006580,-0.570092,7.419563,1.114825,1.696397,7.606493,6.828925,9.754090,8.190020,-5.850505,-1.240227,-4.515916,0.220475,5.688030,1.002548,-2.798392,5.739247,-2.814416,8.068583,-9.461298,1.204689,9.238809,4.585644,-3.441520,9.741415,-4.836671,2.698226,-0.194730,6.303253,-1.975496,2.081945,-6.512657,0.942223,-1.505644,-3.785596,2.478037,-3.808932,-9.195186,5.116792,-2.323029,-0.488759,-5.844818,1.965540,-0.141282,-2.109643,4.792184,2.036925,7.219693,6.428248,8.595910,-6.736579,4.194897,3.466330,-9.674468,6.627065,7.689085,1.228882,1.656616,-9.063405,-1.613079,-2.347562,2.552504,7.013992,-8.226442,-1.746015,3.315477,-7.669672,8.544724,-8.008977,9.731375,-5.619520,1.438633,-0.920914,0.917264,-7.725181,-6.607796,6.614976,-4.533278,-0.295025,9.047450,5.448104,7.421986,-0.986705,2.899384,-5.402215,-7.304765,-1.026827,8.061404,-3.628279,7.668873,-8.000325,4.088889,0.679767,-9.277589,-4.496564,-8.630930,-0.840946,8.772999,-5.543389,-8.272215,0.697267,-4.750532,-7.227315,7.717964,-8.667957,-8.736014,-3.895361,-8.091308,0.397507,7.829968,9.216684,3.339819,0.610983,-3.008540,-9.600984,-8.346569,8.914814,8.902337,-1.142761,-5.617507,1.616115,0.191975,-3.502578,-3.194162,1.565196,2.355768,7.040730,-4.060231,8.791122,0.269863,3.995667,-0.321236,-3.373488,4.432148,-0.540933,2.114197,-2.687100,1.792035,-3.123695,-7.193010,1.023632,-6.472113,1.869990,4.456757,5.175778,-7.915337,-8.837576,5.119556,-4.296581,-1.664515,-7.141303,-5.626819,-1.200910,6.155607,9.380917,-4.407114,6.060685,-9.578127,-3.806478,-2.868221,-1.279335,-9.233809,4.657195,4.400788,-0.773150,-2.031311,0.575692,8.752631,-4.336330,-9.394053,7.356517,-7.896120,-0.431227,0.531988,-9.170803,-0.884669,-0.266733,0.239886,2.244073,5.408909,-2.930022,-4.069044,-6.321859,-0.557034,2.495432,5.231903,5.078692,9.906576,-3.305157,-0.803504,-6.268837,0.006885,-9.604954,-8.638866,8.412420,9.417039,5.282994,0.948876,-7.153217,-7.178983,-5.364955,-5.987641,3.924421,6.217962,-1.195796,-3.461073,2.617545,5.893972,7.011160,2.997328,7.660496,-8.471868,-7.419884,-9.803076,4.740464,-4.509377,-6.732949,-5.484733,4.393108,2.914139,6.517575,-7.720392,8.442167,-5.003024,-5.703513,7.961991,7.652367,-9.826045,8.920846,-0.050561,-1.445721,2.971716,3.581809,-3.617423,4.791208,-3.716378,-3.636970,8.258090,-0.923132,-6.255429,7.414528,-1.643392,3.411243,3.637084,2.281276,-4.833295,-1.279049,6.837495,2.837739,-8.515610,7.193992,5.083548,-1.068219,-5.333289,2.843302,6.932106,-6.646503,1.798977,-4.094269,4.693105,-1.620570,6.243588,7.510351,-6.449744,6.342504,5.893212,1.928592,-2.218281,-1.943356,-4.877149,4.955814,-5.095646,4.133861,8.907979,-7.737135,1.808185,-1.228731,-0.301614,9.257316,-3.670781,5.173745,-4.654743,3.486756,-0.025635,8.458670,5.129418,-7.251320,-7.755797,7.895142,-0.654951,-5.838422,-0.256684,-2.498231,-9.502879,2.173840,-6.134145,5.074428,6.676019,4.339752,-3.501802,-6.660718,1.383174,2.989429,-6.914163,-9.208079,0.434758,-2.625120,7.650159,-0.812836,9.313431,9.126098,-0.679735,-9.183609,5.410693,-6.962575,-7.439576,5.065890,4.468326,9.379647,4.825748,-9.494766,8.765351,-9.306615,-1.797393,-0.505335,-5.921975,8.434650,-7.802047,-2.747749,-5.920416,2.201254,5.085834,-8.298929,-2.748548,-7.528190,4.631820,-3.119512,7.422884,-3.212172,8.035770,9.801417,-6.038513,-6.795929,-1.613630,-0.333554,7.487359,3.555498,-8.340074,-9.603675,-0.566217,-1.951711,4.117910,-8.495607,6.981078,-0.930323,3.842942,-0.440162,7.374714,3.354008,8.406596,-7.945991,1.199908,1.780300,6.581572,-1.272523,-4.333130,-7.889220,5.955229,-4.211856,8.576771,5.285769,9.861790,-8.801668,4.614930,-3.216509,8.954090,7.286094,8.394703,-8.323334,-6.466645,-7.205581,3.063713,3.548814,8.920921,2.362522,-6.531440,7.976610,-8.297602,-2.974381,3.031818,-8.566378,9.473513,-2.244910,-3.153048,-1.906519,2.331917,3.240126,4.734632,-7.823228,-7.212898,9.109076,-0.055338,-6.481694,-0.028023,-5.571800,-6.088584,-6.593285,3.527948,-6.629581,8.663622,-8.059919,5.194902,7.052418,-0.438057,1.773931,3.870510,-4.702051,7.341103,-9.359971,4.439259,-8.686500,3.800561,-1.974906,7.250798,-4.132849,9.737427,6.901298,-2.424901,1.178209,-9.449582,4.052876,8.901155,-4.253409,7.465649,-4.641099,3.405363,-2.163847,7.528169,9.788966,3.974689,6.076065,9.581428,3.726478,5.697525,-0.461442,7.274706,3.787246,2.607787,6.748042,-7.355918,-2.079139,-4.273401,-7.283305,3.513532,-4.376531,2.567472,2.889719,5.348265,-0.372194,8.979700,-5.985564,-7.216636,4.812631,6.876676,-7.149098,-1.855675,-3.320056,5.333282,-9.197134,-5.386547,8.363122,-3.416322,-5.869649,8.703036,-9.978430,-7.215948,9.809549,-9.918670,-4.093600,-5.760900,9.878635,2.997461,3.882671,-8.795616,4.612792,7.300355,-8.662011,0.583588,6.046692,0.957449,0.695155,-6.033775,-6.042776,0.380203,8.949609,-4.008806,-7.626257,-6.482343,-4.760684,3.361794,0.875935,7.543520,-9.727254,8.010112,5.324600,8.861609,-4.408592], dtype = "float32")#candidate|7874|(980,)|const|float32
var_7875 = relay.var("var_7875", dtype = "uint16", shape = (1, 390))#candidate|7875|(1, 390)|var|uint16
call_7873 = relay.TupleGetItem(func_1798_call(relay.reshape(const_7874.astype('float32'), [7, 14, 10]), relay.reshape(var_7875.astype('uint16'), [390,]), ), 2)
call_7876 = relay.TupleGetItem(func_1801_call(relay.reshape(const_7874.astype('float32'), [7, 14, 10]), relay.reshape(var_7875.astype('uint16'), [390,]), ), 2)
output = relay.Tuple([uop_7860,call_7862,const_7863,call_7873,const_7874,var_7875,])
output2 = relay.Tuple([uop_7860,call_7864,const_7863,call_7876,const_7874,var_7875,])
func_7877 = relay.Function([var_7875,], output)
mod['func_7877'] = func_7877
mod = relay.transform.InferType()(mod)
var_7878 = relay.var("var_7878", dtype = "uint16", shape = (1, 390))#candidate|7878|(1, 390)|var|uint16
output = func_7877(var_7878)
func_7879 = relay.Function([var_7878], output)
mutated_mod['func_7879'] = func_7879
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8140 = relay.var("var_8140", dtype = "float32", shape = (9, 1, 10))#candidate|8140|(9, 1, 10)|var|float32
var_8141 = relay.var("var_8141", dtype = "float32", shape = (9, 14, 10))#candidate|8141|(9, 14, 10)|var|float32
bop_8142 = relay.not_equal(var_8140.astype('bool'), var_8141.astype('bool')) # shape=(9, 14, 10)
output = relay.Tuple([bop_8142,])
output2 = relay.Tuple([bop_8142,])
func_8154 = relay.Function([var_8140,var_8141,], output)
mod['func_8154'] = func_8154
mod = relay.transform.InferType()(mod)
mutated_mod['func_8154'] = func_8154
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8154_call = mutated_mod.get_global_var('func_8154')
var_8156 = relay.var("var_8156", dtype = "float32", shape = (9, 1, 10))#candidate|8156|(9, 1, 10)|var|float32
var_8157 = relay.var("var_8157", dtype = "float32", shape = (9, 14, 10))#candidate|8157|(9, 14, 10)|var|float32
call_8155 = func_8154_call(var_8156,var_8157,)
output = call_8155
func_8158 = relay.Function([var_8156,var_8157,], output)
mutated_mod['func_8158'] = func_8158
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8191 = relay.var("var_8191", dtype = "float32", shape = (11, 8, 4))#candidate|8191|(11, 8, 4)|var|float32
uop_8192 = relay.cosh(var_8191.astype('float32')) # shape=(11, 8, 4)
output = relay.Tuple([uop_8192,])
output2 = relay.Tuple([uop_8192,])
func_8200 = relay.Function([var_8191,], output)
mod['func_8200'] = func_8200
mod = relay.transform.InferType()(mod)
mutated_mod['func_8200'] = func_8200
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8201 = relay.var("var_8201", dtype = "float32", shape = (11, 8, 4))#candidate|8201|(11, 8, 4)|var|float32
func_8200_call = mutated_mod.get_global_var('func_8200')
call_8202 = func_8200_call(var_8201)
output = call_8202
func_8203 = relay.Function([var_8201], output)
mutated_mod['func_8203'] = func_8203
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8249 = relay.var("var_8249", dtype = "uint16", shape = (1, 7, 7))#candidate|8249|(1, 7, 7)|var|uint16
var_8250 = relay.var("var_8250", dtype = "uint16", shape = (11, 7, 7))#candidate|8250|(11, 7, 7)|var|uint16
bop_8251 = relay.logical_xor(var_8249.astype('uint16'), var_8250.astype('uint16')) # shape=(11, 7, 7)
uop_8277 = relay.erf(bop_8251.astype('float64')) # shape=(11, 7, 7)
func_3491_call = mod.get_global_var('func_3491')
func_3497_call = mutated_mod.get_global_var('func_3497')
const_8288 = relay.const(7, dtype = "int64")#candidate|8288|()|const|int64
var_8289 = relay.var("var_8289", dtype = "int64", shape = (420,))#candidate|8289|(420,)|var|int64
const_8290 = relay.const([-8,-5,1,9,-3,5,-8,4,-9,-9,-10,-8,-6,-4,-3,-8,-7,7,4,-3,2,2,1,5,2,-1,-6,-1,-8,-1,-3,9,1,-9,3,-5,-9,8,2,2,-7,4,-5,-10,-1,1,9,5,9,6,-5,-10,-7,-6,2,-10,-4,6,1,-10,4,-6,5,-2,5,-10,-8,-7,-1,-1,5,-3,8,-8,-3,1,2,-10,-3,5,8,-10,-8,-1,-2,-1,6,5,3,-4,2,6,7,2,8,-7,5,-3,4,9,8,6,5,-9,5,-7,-1,4,10,-5,5,5,9,10,-3,3,10,7,-1,6,-10,-6,7,-8,-5,-5,6,10,-9,-3,1,6,-5,7,-9,-5,-9,9,-10,4,1,8,9,-5,8,3,-3,-1,1,-6,4,-9,-2,-8,7,-10,9,-10,-5,9,2,-5,2,-5,3,-5,-3,-9,-3,9,-6,10,8,6,-4,9,10,5,7,6,3,8,-6,-3,1,-10,-3,-4,2,-4,-8,4,-4,-9,1,2,5,-10,-6,-9,-6,-6,9,8,2,10,5,-8,-5,2,10,-9,-6,5,5,1,-5,8,8,5,-10,-2,9,3,-6,-1,9,-3,-3,6,-4,-7,3,3,5,-1,-5,9,-2,-9,7,5,1,8,-10,-10,-1,-5,6,4,-8,-6,8,8,-8,-6,-6,-9,-3,-1,-3,-9,-9,1,-2,7,-9,-2,8,7,-8,9,8,-3,8,5,-6,-8,-7,-2,-3,9,-4,1,3,-8,-4,5,6,4,3,-5,-2,-3,1,9,6,8,-1,2,8,6,-6,4,8,-7,-7,-9,-7,-9,-10,2,8,-6,10,4,-7,-8,1,6,-1,-2,5,-7,-6,1,-5,-1,-3,-2,6,-1,-6,5,-2,-7,-2,-9,-10,9,3,9,-3,2,9,10,-2,8,9,-5,4,6,-1,-5,1,7,4,-3,8,4,1,-5,-5,1,10,-9,-8,-2,-9,-9,3,-6,2,5,-7,1,4,-1,1,-5,7,-5,8,-3,-6,-1,8,9,9,2], dtype = "uint16")#candidate|8290|(390,)|const|uint16
var_8291 = relay.var("var_8291", dtype = "int16", shape = (8, 42))#candidate|8291|(8, 42)|var|int16
call_8287 = relay.TupleGetItem(func_3491_call(relay.reshape(const_8288.astype('int64'), []), relay.reshape(var_8289.astype('int64'), [12, 5, 7]), relay.reshape(const_8290.astype('uint16'), [390,]), relay.reshape(var_8291.astype('int16'), [336,]), ), 2)
call_8292 = relay.TupleGetItem(func_3497_call(relay.reshape(const_8288.astype('int64'), []), relay.reshape(var_8289.astype('int64'), [12, 5, 7]), relay.reshape(const_8290.astype('uint16'), [390,]), relay.reshape(var_8291.astype('int16'), [336,]), ), 2)
func_4990_call = mod.get_global_var('func_4990')
func_4993_call = mutated_mod.get_global_var('func_4993')
var_8304 = relay.var("var_8304", dtype = "float32", shape = (5, 1))#candidate|8304|(5, 1)|var|float32
call_8303 = func_4990_call(relay.reshape(var_8304.astype('float32'), [1, 5]))
call_8305 = func_4990_call(relay.reshape(var_8304.astype('float32'), [1, 5]))
func_4418_call = mod.get_global_var('func_4418')
func_4421_call = mutated_mod.get_global_var('func_4421')
var_8307 = relay.var("var_8307", dtype = "float64", shape = (648, 2))#candidate|8307|(648, 2)|var|float64
call_8306 = relay.TupleGetItem(func_4418_call(relay.reshape(var_8307.astype('float64'), [16, 9, 9]), relay.reshape(var_8307.astype('float64'), [16, 9, 9]), ), 0)
call_8308 = relay.TupleGetItem(func_4421_call(relay.reshape(var_8307.astype('float64'), [16, 9, 9]), relay.reshape(var_8307.astype('float64'), [16, 9, 9]), ), 0)
output = relay.Tuple([uop_8277,call_8287,const_8288,var_8289,const_8290,var_8291,call_8303,var_8304,call_8306,var_8307,])
output2 = relay.Tuple([uop_8277,call_8292,const_8288,var_8289,const_8290,var_8291,call_8305,var_8304,call_8308,var_8307,])
func_8312 = relay.Function([var_8249,var_8250,var_8289,var_8291,var_8304,var_8307,], output)
mod['func_8312'] = func_8312
mod = relay.transform.InferType()(mod)
mutated_mod['func_8312'] = func_8312
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8312_call = mutated_mod.get_global_var('func_8312')
var_8314 = relay.var("var_8314", dtype = "uint16", shape = (1, 7, 7))#candidate|8314|(1, 7, 7)|var|uint16
var_8315 = relay.var("var_8315", dtype = "uint16", shape = (11, 7, 7))#candidate|8315|(11, 7, 7)|var|uint16
var_8316 = relay.var("var_8316", dtype = "int64", shape = (420,))#candidate|8316|(420,)|var|int64
var_8317 = relay.var("var_8317", dtype = "int16", shape = (8, 42))#candidate|8317|(8, 42)|var|int16
var_8318 = relay.var("var_8318", dtype = "float32", shape = (5, 1))#candidate|8318|(5, 1)|var|float32
var_8319 = relay.var("var_8319", dtype = "float64", shape = (648, 2))#candidate|8319|(648, 2)|var|float64
call_8313 = func_8312_call(var_8314,var_8315,var_8316,var_8317,var_8318,var_8319,)
output = call_8313
func_8320 = relay.Function([var_8314,var_8315,var_8316,var_8317,var_8318,var_8319,], output)
mutated_mod['func_8320'] = func_8320
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8647 = relay.var("var_8647", dtype = "uint64", shape = (16, 8, 16))#candidate|8647|(16, 8, 16)|var|uint64
var_8648 = relay.var("var_8648", dtype = "uint64", shape = (16, 8, 16))#candidate|8648|(16, 8, 16)|var|uint64
bop_8649 = relay.bitwise_xor(var_8647.astype('uint64'), relay.reshape(var_8648.astype('uint64'), relay.shape_of(var_8647))) # shape=(16, 8, 16)
func_5255_call = mod.get_global_var('func_5255')
func_5257_call = mutated_mod.get_global_var('func_5257')
var_8660 = relay.var("var_8660", dtype = "uint32", shape = (1440,))#candidate|8660|(1440,)|var|uint32
call_8659 = func_5255_call(relay.reshape(var_8660.astype('uint32'), [8, 12, 15]))
call_8661 = func_5255_call(relay.reshape(var_8660.astype('uint32'), [8, 12, 15]))
func_3840_call = mod.get_global_var('func_3840')
func_3842_call = mutated_mod.get_global_var('func_3842')
var_8663 = relay.var("var_8663", dtype = "float64", shape = (384,))#candidate|8663|(384,)|var|float64
call_8662 = relay.TupleGetItem(func_3840_call(relay.reshape(var_8663.astype('float64'), [384,])), 2)
call_8664 = relay.TupleGetItem(func_3842_call(relay.reshape(var_8663.astype('float64'), [384,])), 2)
bop_8673 = relay.less(bop_8649.astype('bool'), relay.reshape(var_8648.astype('bool'), relay.shape_of(bop_8649))) # shape=(16, 8, 16)
output = relay.Tuple([call_8659,var_8660,call_8662,var_8663,bop_8673,])
output2 = relay.Tuple([call_8661,var_8660,call_8664,var_8663,bop_8673,])
func_8701 = relay.Function([var_8647,var_8648,var_8660,var_8663,], output)
mod['func_8701'] = func_8701
mod = relay.transform.InferType()(mod)
mutated_mod['func_8701'] = func_8701
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8701_call = mutated_mod.get_global_var('func_8701')
var_8703 = relay.var("var_8703", dtype = "uint64", shape = (16, 8, 16))#candidate|8703|(16, 8, 16)|var|uint64
var_8704 = relay.var("var_8704", dtype = "uint64", shape = (16, 8, 16))#candidate|8704|(16, 8, 16)|var|uint64
var_8705 = relay.var("var_8705", dtype = "uint32", shape = (1440,))#candidate|8705|(1440,)|var|uint32
var_8706 = relay.var("var_8706", dtype = "float64", shape = (384,))#candidate|8706|(384,)|var|float64
call_8702 = func_8701_call(var_8703,var_8704,var_8705,var_8706,)
output = call_8702
func_8707 = relay.Function([var_8703,var_8704,var_8705,var_8706,], output)
mutated_mod['func_8707'] = func_8707
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8811 = relay.var("var_8811", dtype = "float32", shape = (2, 6, 6))#candidate|8811|(2, 6, 6)|var|float32
uop_8812 = relay.exp(var_8811.astype('float32')) # shape=(2, 6, 6)
bop_8827 = relay.bitwise_and(var_8811.astype('uint64'), relay.reshape(uop_8812.astype('uint64'), relay.shape_of(var_8811))) # shape=(2, 6, 6)
output = relay.Tuple([bop_8827,])
output2 = relay.Tuple([bop_8827,])
func_8843 = relay.Function([var_8811,], output)
mod['func_8843'] = func_8843
mod = relay.transform.InferType()(mod)
var_8844 = relay.var("var_8844", dtype = "float32", shape = (2, 6, 6))#candidate|8844|(2, 6, 6)|var|float32
output = func_8843(var_8844)
func_8845 = relay.Function([var_8844], output)
mutated_mod['func_8845'] = func_8845
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8960 = relay.const([[-2.224103,7.063817,-5.866613,-2.139972,-7.416977,1.172302,-8.368781,-5.694769,8.144597,-0.874406,4.607723,1.721902,-5.885991,-2.241361,7.233880]], dtype = "float64")#candidate|8960|(1, 15)|const|float64
const_8961 = relay.const([[8.536686,-2.996419,-9.347186,0.048449,-4.202580,9.967371,9.252554,2.375916,-6.893023,8.652261,2.301890,-2.804110,1.043072,6.240061,-1.777562],[-3.268031,-6.504076,4.596298,7.623187,1.485852,-2.078349,-6.121193,7.200441,-6.395667,9.685007,5.097197,5.779937,-3.862904,7.295223,6.508196],[3.617382,7.993150,-6.667811,-7.445659,-0.929807,-0.055508,9.100574,-8.306195,-5.883824,-5.132856,6.749906,-0.034536,-1.307394,3.757330,8.497291],[5.859535,-1.029034,-5.247248,7.750087,-9.252879,-1.684279,-5.111746,-5.406734,8.389069,1.505098,-5.734455,8.981923,-8.074625,7.954105,-0.864049],[-2.648538,3.499224,-9.264265,2.175865,2.869019,9.641645,-9.591291,5.887738,3.505817,0.064500,-7.770957,6.624136,1.813020,0.325839,6.890223],[8.869255,7.152968,8.798660,-0.082186,8.786403,-4.072297,-5.920431,4.744489,4.666420,-7.324911,1.080825,-4.799737,-4.234370,-6.084339,5.953126],[8.341710,1.345816,8.394494,0.782201,-6.498343,8.048215,4.905091,0.942352,5.482782,6.210698,-8.158772,4.565864,0.402704,-6.558743,9.769767],[-6.227361,-2.832252,-0.693427,-8.389446,7.083422,-4.943503,2.540372,-7.484394,-8.008083,-4.873887,2.323548,3.957625,2.530284,0.504553,-5.167725],[8.205450,8.285267,1.281428,-1.742731,5.494116,-9.859907,-8.354213,-4.221530,-4.052214,6.908736,-2.160034,0.928004,9.245190,3.190937,-2.030911],[5.084499,-6.417809,0.519073,-5.303741,1.122545,-2.838164,-1.295850,9.209874,5.772301,4.655417,-4.804228,-6.019822,2.638587,1.774379,-8.809581],[5.023014,0.710191,-4.515234,7.392521,-1.015609,8.625265,-5.422307,-6.154759,-6.514067,4.498033,-8.155037,8.594759,-6.884298,-9.621009,7.284589],[6.386509,-6.435910,-6.222157,-8.255001,-3.736078,-3.966287,2.751450,8.753813,8.551710,9.549397,1.521501,-5.847558,-4.308141,-6.102738,-7.088707]], dtype = "float64")#candidate|8961|(12, 15)|const|float64
bop_8962 = relay.power(const_8960.astype('float64'), const_8961.astype('float64')) # shape=(12, 15)
func_7354_call = mod.get_global_var('func_7354')
func_7358_call = mutated_mod.get_global_var('func_7358')
const_8975 = relay.const([9,3,-10,10,9,2,6,4,5,6,7,-6,-1,-5,6,-5,5,-6,3,3,-1,-9,-10,-4,-3,10,-10,-8,-1,-6,-8,-9,-10,-10,-10,-7,7,10,1,2,-6,5,-1,7,-8,9,7,-1,-5,-2,-5,10,6,-1,5,2,-8,-9,10,2,-10,-3,3,6,8,-4,8,5,3,-5,-9,-2,-6,7,9,-3,4,-6,2,4,-9,-3,2,2,-3,-6,6,3,-10,-5,2,8,5,-1,-5,7,5,2,7,3,-1,-4,8,6,-10,5,-10,-7,6,-4,-5,4,10,-7,1,6,-10,8,2,4,-8,3,1,-5,-10,-7,-9,-4,8,-5,-3,1,-5,-1,-5,-6,-3,1,9,-10,-6,-3,-7,-1,8,4,-6,5,3,8,-1,3,1,8,1,-8,-5,9,6,7,-7,-9,7,6,-10,-10,-9,6,6,-10,4,-3,7,-10,-5,10,1,6,-3,-8,7,5,8,5,-7,-2,-5,9,8,-8,8,4,7,-7,-2,-5,-10,4,4,-3,-8,-2,-7,-4,10,-7,-10,-10,-9,-7,-10,2,5,-8,-7,9,-4,-8,-2,8,-4,2,4,-1,7,-5,-2,-6,5,7,-5,-9,7,-3,-10,3,-6,8,-5,4,-10,-8,8,-3,-10,-4,7,5,1,-5,1,-4,2,-8,4,-10], dtype = "uint32")#candidate|8975|(256,)|const|uint32
call_8974 = func_7354_call(relay.reshape(const_8975.astype('uint32'), [8, 2, 16]), relay.reshape(const_8975.astype('uint32'), [8, 2, 16]), )
call_8976 = func_7354_call(relay.reshape(const_8975.astype('uint32'), [8, 2, 16]), relay.reshape(const_8975.astype('uint32'), [8, 2, 16]), )
func_6472_call = mod.get_global_var('func_6472')
func_6479_call = mutated_mod.get_global_var('func_6479')
var_8980 = relay.var("var_8980", dtype = "bool", shape = (40,))#candidate|8980|(40,)|var|bool
const_8981 = relay.const(-1, dtype = "int16")#candidate|8981|()|const|int16
const_8982 = relay.const([-1,-9,-10,2,-7,8,4,-8,3,-3,-7,3,-5,9,10,-2,-8,2,4,-6,8,-7,-7,9,2,-10,-6,-8,-9,-8,4,-2,1,-10,5,5,1,6,-6,-7,-6,9,9,-4,6,-9,-1,3,-2,8,9,1,-9,8,-1,-6,-2,-8,2,-9,-3,9,1,10,6,-3,5,-7,-2,-10,9,-9,-10,-2,-10,-1,1,-8,3,-8,-6,-6,-6,5,-9,10,-2,-9,-7,-7,3,-1,-9,9,-7,-2,7,-5,-2,-8,5,1,10,-10,-2,-3,4,-1,2,-8,6,-3,-10,5,-1,5,2,5,-5,-8,-1,-3,-6,-1,-6,-1,-9,-7,-5,10,-5,3,-2,-1,3,-5,-2,-3,-5,-1,3,3,-6,-2,-3,8,9,7,-2,-8,10,3,-2,-2,-3,5,-7,-10,1,6,4,1,-9,-5,-9,-8,-6,2,-9,4,9,10,10,-9,-1,6,-2,9,7,2,6,-4,-3,2,-1,4,6,6,-3,10,3,-7,2,4,-1,5,8,-2,6,-3,-10,6,10,-5,-10,-4,8,-6,1,-10,-8,-2,4,9,7,6,-8,5,-8,-10,-5,9,-8,-6,7,-1,-10,-3,-4,4,-4,-1,5,-10,-6,1,-3,-5,-7,9,-6,1,1,10,-6,-1,5,3,-7,2,1,5,6,-6,2,7,6,-3,3,6,-10,-2,-8,6,9,-9,1,-6,-5,-10,-10,6,-6,-6,-4,10,9,8,8,3,2,-8,7,2,10,10,8,7,4,-2,-6,-4,-4,-2,-6,10,8,-3,-5,8,6,5,-5,9,-8,10,3,10,-6,-2,9,4,-3,4,-1,-3,-2,2,-5,-9,-2,-8,10,-4,10,3,-1,9,-2,-2,-7,4,5,7,5,-2,4,1,8,2,-3,-9,10,8,1,8,5,7,6,-8,1,-9,10,1,-9,-5,-10,9,-4,-5,-7,5,5,-3,-8,-5,3,-6,-5,-10,-9,-7,1,8,-2,-2,-6,-2,9,-3,8,-5,-9,1,-7,-10,-8,-5,2,-6,-8,5,5,6,-5,-10,4,-4,-8,9,-8,2,-6,4,-2,-6,9,4,-1,8,9,10,5,8,-1,-9,-6,6,5,3,2,-8,1,7,-4,9,-4,7,-5,5,2,6,2,-3,1,6,7,4,-8,1,5,7,1,1,1,-3,-9,-4,-8,-7,4,2,-7,-1,-5,-9,4,-2,-2,-2,-8,-7,-3,-7,7,-10,9,-4,8,3,8,6,8,7,-2,2,-6,-6,-9,10,8,10,-3,4,-10,5,-7,-7,8,6,5,-9,-6,-7,-9,-4,8,4,8,3,5,3,-6,8,6,-3,9,-1,-8,-3,-7,3,10,-9,5,4,7,-1,-10,8,-2,-7,4,7,8,6,-6,-3,8,5,-1,5,-6,4,5,2,-4,10,8,-9,-9,4,-5,4,-6,-9,5,6,10,7,-1,-5,-9,4,-2,6,9,7,-4,9,9,8,2,7,-3,7,5,-2,5,-4,10,-8,-9,-4,7,4,3,-2,-5,7,3,-3,-6,-3,-10,9,8,-10,6,3,-7,-1,-10,-5,4,-4,-6,5,1,-4,-6,2,2,-2,-5,-4,-1,-3,10,5,-8,10,7,5,-7,10,3,9,3,-6,6,1,6,8,1,-9,4,4,-7,9,9,-9,-3,-2,8,7,7,-1,3,9,5,-5,-9,10,8,-2,-1,1,-7,-10,-10,-9,4,-2,-1,1,8,5,-2,5,-4,-9,6,-7,-3,-8,-4,2,8,5,6,5,9,-3,-5,-1,3,-4,-1,2,9,-9,-8,1,6,7,-1,5,-4,-8,-5,10,10,9,-6,-5,10,10,-6,5,-8,-1,-7,-6,5,2,7,-1,7,-10,10,1,-1,7,-3,-7,-5,9,-7,2,3,3,7,8,-4,8,4,-2,-10,2,1,4,10,-7,10,-10,-5,-2,-8,6,-1,-6,2,1,8,5,5,-7,-5,-3], dtype = "int32")#candidate|8982|(750,)|const|int32
var_8983 = relay.var("var_8983", dtype = "uint16", shape = (650,))#candidate|8983|(650,)|var|uint16
call_8979 = relay.TupleGetItem(func_6472_call(relay.reshape(var_8980.astype('bool'), [2, 2, 10]), relay.reshape(var_8980.astype('bool'), [2, 2, 10]), relay.reshape(var_8980.astype('bool'), [2, 2, 10]), relay.reshape(const_8981.astype('int16'), []), relay.reshape(const_8982.astype('int32'), [750,]), relay.reshape(var_8983.astype('uint16'), [325, 2]), ), 3)
call_8984 = relay.TupleGetItem(func_6479_call(relay.reshape(var_8980.astype('bool'), [2, 2, 10]), relay.reshape(var_8980.astype('bool'), [2, 2, 10]), relay.reshape(var_8980.astype('bool'), [2, 2, 10]), relay.reshape(const_8981.astype('int16'), []), relay.reshape(const_8982.astype('int32'), [750,]), relay.reshape(var_8983.astype('uint16'), [325, 2]), ), 3)
func_4418_call = mod.get_global_var('func_4418')
func_4421_call = mutated_mod.get_global_var('func_4421')
const_8991 = relay.const([4.759593,-5.088687,-8.652842,-2.095543,0.026249,-3.670219,2.831291,-2.257318,1.382763,-9.679869,-7.854252,1.125457,-7.011176,1.619878,-4.222579,-5.443989,7.650044,4.928675,1.443438,4.080481,-1.643511,-1.016072,-3.924604,-0.609293,6.971038,4.407729,8.619628,1.301371,-8.238821,3.189027,6.688221,5.220363,-8.784459,-6.091971,-7.442574,0.915810,8.420172,-5.163820,-0.370500,-5.340478,-0.037573,9.799057,-6.733493,3.098343,3.625396,-1.922828,-3.541572,8.342182,-4.349166,2.602161,1.420606,8.318827,-2.273580,4.427001,7.222120,0.014816,9.300876,2.471482,5.386108,8.419516,-6.660022,-5.713234,1.862914,6.980137,1.119751,-6.645462,4.961338,-4.906062,-7.712987,-8.961613,1.167944,2.342083,-8.574713,-8.184114,9.360020,-4.463406,6.418168,-8.398405,-5.576994,1.904143,-2.009346,7.668080,4.183277,-5.963992,8.619203,8.032622,-7.051803,4.151220,-8.683270,-4.005388,9.807135,9.284274,4.755441,4.453484,8.773712,-1.939078,3.070511,-4.729833,8.425787,-9.769489,5.987696,8.060005,-2.097262,2.241148,-2.111104,-3.320553,-5.037960,2.946300,2.456480,-3.959353,1.546010,9.649943,-9.538479,6.871260,-9.303367,-1.242776,-9.303421,6.248957,-9.461882,7.365150,-8.399977,3.712960,7.844581,5.183663,0.223632,6.667151,-2.343743,5.878726,-1.811077,-8.926589,-5.059399,5.946652,-0.767659,1.860233,9.913204,3.533511,-5.633258,-3.839888,6.849109,1.649545,8.368345,9.387722,6.819388,-4.613572,-7.600968,-2.726454,7.979533,1.499509,-2.901560,0.264759,6.869997,2.642348,3.910769,5.249712,3.801994,7.204442,4.342412,-1.559846,-6.436220,2.636129,9.836237,4.998624,4.619854,-1.407790,-9.656222,3.469191,1.554205,2.746498,-8.233089,6.592540,7.451868,7.235019,-4.361128,5.138931,-9.577277,7.248999,-8.063728,3.968031,0.312087,3.668190,5.325452,7.929526,-4.697073,5.858054,3.917340,-8.609881,1.910047,6.717235,-7.202909,-8.683458,6.466780,-6.721560,4.777270,6.146699,-7.812244,-7.671736,1.320775,-0.752192,-7.252477,3.820785,-9.433845,6.384208,1.916013,0.598216,3.475226,-0.624090,6.039139,4.508856,-6.100132,9.908117,9.834069,-2.550677,7.615516,-1.427966,-1.125443,9.901324,-4.210122,0.906042,-3.487534,2.137295,-5.265927,-3.169109,-4.994961,-7.138434,7.624347,4.333698,6.165045,5.239277,-7.551596,1.276292,7.423198,-0.727910,1.406504,4.174325,-2.786935,7.299763,9.138739,3.440882,0.103500,-5.784354,8.217723,-7.619344,-4.250948,-0.534365,4.098141,3.934166,-1.508387,-6.732523,3.538347,9.130977,-6.452831,3.450356,4.249965,-4.225512,-0.392745,0.979103,-3.127661,0.932876,0.329941,-1.350126,7.481752,-3.705028,2.950973,9.650416,-0.449377,-0.910617,1.087098,-4.818273,-4.322503,-2.921188,-3.311569,6.920145,2.109750,3.331596,-2.482916,1.788991,4.242054,0.457327,5.484361,-6.800537,-1.563338,-3.254552,-4.506959,-2.284065,3.415929,8.969451,-2.236248,5.427781,3.130543,-6.695087,-3.641044,1.190625,7.437933,-6.734991,1.933434,6.398336,4.367114,-5.509555,-8.587933,3.713682,4.186233,8.524426,8.399527,5.532470,2.769901,-9.437157,7.723539,-6.022607,-5.596773,6.722775,6.584663,7.567206,6.631937,-3.958986,-8.816601,4.924043,-4.245753,7.152322,0.293596,6.784387,3.333450,-0.531742,8.658249,6.588427,2.620270,-7.263287,2.456261,-5.094031,2.179986,7.483317,-3.387595,3.549076,5.598905,-5.559993,0.633591,-3.700363,4.680429,0.887745,4.890099,-6.575101,-6.257999,0.352145,0.727299,-9.121692,-0.893598,-3.161301,-8.030032,2.114456,9.178556,6.651770,7.733860,5.965868,-3.594220,-1.960206,0.564936,4.946218,0.950053,-1.038034,-3.449501,8.358757,-6.735707,1.432306,5.800901,-6.197005,-9.113975,0.055039,4.218108,-1.144177,2.889851,8.074276,0.553772,-6.690891,0.165847,9.838361,6.599674,-2.612726,3.908952,1.100193,8.145161,0.557167,8.938490,1.436901,2.734870,-0.048898,-5.192847,9.161031,-5.881560,-5.279823,-0.338148,8.063896,-0.889943,6.303442,5.645897,-1.595096,2.898784,-6.925531,-3.477222,2.857029,2.249687,6.589249,-6.354536,-2.657598,-5.697712,-8.415858,-2.364787,0.301460,-4.754821,-4.304758,8.214288,-4.470247,-3.459031,7.930271,-6.181902,-7.879872,-2.859932,-6.985430,3.887961,-2.536097,4.094545,-4.979138,-5.465521,6.752683,5.205511,8.317099,-5.398826,9.185466,-3.789240,-0.121440,9.640939,3.752317,-9.466232,-8.506513,-1.618334,4.001642,-1.671298,5.143126,5.038492,6.602839,1.502264,3.935670,-9.391715,-7.084376,0.606377,1.950027,-9.093362,5.483542,-3.599025,-7.977089,-0.929730,8.158516,8.190750,6.543713,7.740430,9.716597,4.579040,-9.125323,3.757100,0.605647,4.220361,-0.143195,2.908277,-5.500249,0.926267,-0.291614,1.402200,-9.095501,-2.557473,9.703110,-8.940556,-5.224380,-1.830936,9.327669,-4.947323,-5.002850,-6.854139,5.738317,-1.888662,8.779519,-3.742707,1.921573,5.940426,-4.422050,-1.586074,6.498132,9.418173,-3.794464,5.729659,4.138503,-1.291242,4.187366,-9.722884,-8.668729,9.818411,5.320868,2.621683,3.833287,-4.454219,2.519422,7.219493,-2.550216,-9.710872,-2.872878,-5.700633,4.640473,-2.909835,3.765395,8.499407,4.242659,-5.974691,-2.718545,-9.728224,-2.266187,-8.865426,3.512692,0.638560,-7.969747,-0.870865,7.011336,-0.020651,-5.190664,3.537472,-9.621407,7.381571,6.061610,-3.420310,-7.762236,5.827222,0.316401,-1.451575,-3.682351,-4.489726,7.247814,1.250144,-5.506936,-6.553208,-3.578026,-2.765345,-9.758004,5.771389,9.881349,-4.973584,-6.980452,0.131985,2.716621,-2.620891,1.759656,-8.600521,9.570029,6.663865,2.749312,-5.972505,0.374654,-5.881284,3.656270,-2.207769,9.014796,-0.178506,-8.314817,-3.121924,7.170278,6.432579,4.716654,6.868124,-4.025099,-2.778706,-9.770003,8.506350,-8.264660,-7.009496,7.100487,-1.488227,6.428053,-0.832875,-5.064762,4.344090,8.171768,-2.989589,-9.969080,-7.900289,-1.688707,-8.623567,3.980557,8.094239,-6.510835,5.909757,-9.932435,-2.240818,-3.875408,2.744463,0.407358,-1.948642,-3.019897,-3.955794,0.441710,3.490328,7.180120,-0.015220,3.094913,-9.108911,3.735645,-3.948167,-0.939775,3.418798,2.597709,9.652654,1.209166,-4.710294,0.399779,-6.817733,8.912887,-1.593572,-6.739991,2.337837,-9.240273,2.831797,-8.007887,1.661979,-3.296792,1.885099,-2.728336,6.928450,6.059926,5.404019,-4.839929,9.013289,4.137836,-2.808514,-2.333539,8.295024,-6.610071,4.563752,-7.027303,4.084913,4.868161,6.273876,7.383295,-1.039402,-0.867291,7.215839,1.994817,-0.469029,8.176254,-9.721159,-0.060729,-9.403348,-4.118922,5.434350,2.539682,-2.652108,-0.451996,-6.982866,-4.838742,-7.554657,-8.136871,5.265699,-6.533824,-9.370561,-8.971449,0.666012,-5.661430,7.075709,7.450891,-8.707801,1.939485,-1.835416,-7.152717,-1.013930,4.849512,0.928436,-8.465632,1.950226,-5.419445,-9.820429,3.220377,9.086366,-9.909058,-3.657905,-7.182542,-6.633851,0.727337,5.568929,7.429054,-2.996447,-8.869338,-9.518708,-6.089329,9.189317,7.939096,-1.149660,5.345214,-9.388025,-8.119478,-9.319293,8.260352,9.881062,4.221095,-0.038071,-9.074194,3.887030,-9.773306,4.643933,6.075619,2.645783,6.050549,0.537039,-6.629656,-0.231686,3.262601,0.888260,0.450041,4.721866,1.199428,9.400718,1.954923,-9.087305,-5.199661,-0.417475,-3.975750,-8.006069,5.983698,-3.254525,5.400016,3.419159,0.713824,-8.444547,6.013444,5.489012,3.820586,-3.081504,2.375064,5.083357,-7.418900,-5.223407,6.086815,-8.323767,-4.617811,-7.039660,7.506961,-8.539183,-9.636014,4.373885,8.585987,-1.615244,4.468201,8.680179,5.597441,-6.949552,-8.492709,-1.661964,2.005503,3.889417,-2.299927,-8.887220,5.015039,-4.756764,3.366810,9.976528,8.834573,0.083759,-2.647192,7.428675,0.083368,8.952221,-3.913861,-1.894011,7.227270,-3.314863,2.936336,9.483599,0.072490,4.398033,-1.233543,3.388450,-0.060537,-7.969150,0.123713,9.237114,-4.219604,6.241049,-7.370702,-6.249922,6.531477,2.601831,8.163984,5.760285,0.261365,2.068119,8.473630,2.086668,-0.915183,-3.765958,1.795760,-3.345659,-7.154970,6.883446,9.153785,-3.879300,-4.118294,-0.184473,8.807648,-1.472990,-7.726670,-2.528232,4.433559,3.640978,1.462705,2.510019,1.629701,-2.624209,0.726010,3.234536,-1.201569,2.491176,4.587557,-4.670636,2.575060,1.189680,9.115502,2.397780,2.145527,-9.159649,-5.281074,-0.407760,5.538394,-1.421743,-8.234501,-3.657736,9.121934,3.955356,5.324523,4.751852,-7.606749,-8.262203,-9.720744,-9.110070,-3.769679,0.978160,1.504546,3.243877,-5.799795,2.317437,2.878995,5.144088,-4.648793,0.720885,3.765574,-1.467939,-7.289916,0.680056,8.820906,-3.275572,-1.881652,-3.001776,3.118366,-6.964249,3.851712,-5.792591,0.218387,-6.835026,-8.285828,6.894896,-6.675302,-1.837272,-6.431926,-7.420005,2.210301,-7.833758,-0.071310,0.714895,-4.251425,8.948718,-3.936284,-9.402231,-7.318413,3.740676,-8.349622,-8.763268,-2.643457,3.817594,-0.213163,-2.397369,9.568208,5.336049,-2.306250,7.875740,-4.542970,-8.226989,3.438923,1.971155,1.763502,-8.837810,1.582945,9.546747,8.338437,3.575443,-7.616366,-4.899296,-0.056872,5.924513,-3.791957,8.646831,9.299041,4.045378,-6.771470,-2.446395,0.844953,0.802378,9.511852,4.601642,-2.589683,-1.460093,-8.471018,-0.155359,-4.104590,9.816560,-6.943887,-1.989171,7.082241,-5.247301,-0.402313,5.069295,-5.857786,-8.586023,1.560913,-4.800589,-2.965359,-8.845389,5.672539,9.068726,-3.611021,2.096028,3.551865,8.637292,0.022837,-8.021202,-1.090931,-2.684736,3.603732,9.845916,-3.577952,-5.580642,-4.734746,4.986566,6.027626,-7.377401,-5.541000,-8.176704,1.677342,-5.979212,-7.963666,-3.559083,-8.058841,0.051724,3.968690,3.954414,-2.897298,9.617138,-9.299457,8.351082,2.603493,-5.108328,6.418542,-1.799350,-1.756128,5.011681,9.408600,1.285779,-1.235629,8.850150,7.467957,9.369359,-9.370968,0.799595,-0.771654,-3.901387,-6.633940,9.927568,-7.200000,-5.754496,-0.448653,2.935694,7.768107,5.327971,2.639502,9.687848,3.424526,-4.967323,3.324088,3.318245,-3.238137,-0.292089,-3.631071,-6.760079,3.209552,9.573915,1.671335,6.944642,4.187248,-3.899543,-2.874478,-2.831424,4.427380,6.485811,-7.970630,-0.478888,9.702196,5.048681,-1.539015,-1.153208,-1.343557,7.571031,-7.652852,-6.693843,8.522683,-8.869523,-2.156950,-0.509001,3.715774,7.519805,-9.573315,5.954144,-9.343671,4.257937,-5.565681,-4.150633,6.835052,-4.489655,-6.832677,0.562643,-6.578448,2.140821,-8.162753,-2.218099,-4.232118,8.095081,0.032772,-3.235296,2.323718,-3.112644,0.345805,-4.883809,-1.377571,-2.943382,3.540130,-8.576637,2.306378,2.943112,2.992111,7.042273,7.909347,-4.476244,7.562371,-2.308784,-1.145331,6.823328,6.865628,-7.845287,-0.967461,-0.318993,4.101376,7.165281,3.203345,-0.681405,-4.855985,-8.394522,8.482433,-4.076458,4.951206,9.548366,7.310637,6.582020,6.322653,-7.337566,-9.919544,9.427454,-4.488754,-9.422982,7.837066,-1.322263,-2.283279,6.595441,-2.331612,0.484163,-3.780144,5.556133,7.582461,-0.245704,0.771699,-7.880756,-8.133484,0.900676,5.703803,-1.022789,-8.854916,-4.060629,6.720799,-6.098660,-8.218348,0.166127,4.246084,-0.680521,1.818289,8.262602,-5.589783,-2.310498,6.504806,9.512952,6.622369,-0.188365,-9.122824,-5.202276,-5.581985,8.244045,-6.205770,-3.104286,-7.066589,-0.997415,1.819478,-3.565866,-1.583663,-3.490670,-4.111057,-1.376727,5.005970,6.290581,2.803923,4.113821,7.443133,-2.130404,6.086255,0.977180,-6.534315,7.523287,7.702705,6.611092,-4.398401,0.947841,0.038759,-4.869763,-5.525755,-9.924641,-3.471204,-0.323378,8.588778,2.492287,6.437357,-2.417967,1.684323,7.608203,8.462670,-5.105268,3.531526,-5.624484,7.733313,2.931554,-6.466913,6.580241,-8.786388,-5.727363,4.114042,-7.423533,-3.197390,-3.800298,7.713843,-0.090187,-7.756508,-9.816798,3.484189,-1.672851,-8.634081,-7.426664,9.571997,6.199403,7.767730,6.828163,5.845666,3.432937,-6.100626,0.032399,-2.512473,-3.396432,-5.179722,-4.531584,7.524430,-2.850472,-6.916795,3.485620,4.451536,3.564056,-7.833010,6.946330,8.318401,-5.709748,-3.428147,8.628178,0.456214,7.710131,-4.450322,4.623373,-9.049083,3.790663,5.679709,-8.489821,1.584258,0.295342,6.987394,-6.196031,-2.489487,-7.165100,-2.328715,0.408554,-7.892694,-1.987633,-1.183203,-5.787919,6.026433,5.624862,-9.589171,8.973389,-9.253058,-7.098450,8.349313,-7.376529,9.542315,-1.467215,-5.285664,3.156224,-6.666964,0.977866,-0.254075,3.871498,-4.160041,-8.207505,2.333913,-7.391765,-4.577169,0.696551,4.454015,8.429018,-2.650689,6.959511,6.307280,0.768517,-5.597660,-9.224499,4.770269,-5.769069,2.684351,-9.543225,5.412912,-1.102751,3.599435,5.875178,4.778987,2.431898,4.398227,-8.576571,-6.911257,-3.393398,-4.151731,2.188736,7.053753,1.384068,-4.042586,1.936833,6.279714,6.297718,2.074201,4.615269,-3.563703,-5.073452,3.969002,-7.522794,4.185743,-6.020522,-9.086386,7.687517,-9.612711,-2.270353,-4.839993,-7.297695,9.817719,1.567151,-5.313549,8.325261,9.313747,-6.104582,-6.993563,-7.461087,-3.136805,3.541071,-2.308714,-8.810687,-8.227507,7.010791,-9.213139], dtype = "float64")#candidate|8991|(1296,)|const|float64
call_8990 = relay.TupleGetItem(func_4418_call(relay.reshape(const_8991.astype('float64'), [16, 9, 9]), relay.reshape(const_8991.astype('float64'), [16, 9, 9]), ), 0)
call_8992 = relay.TupleGetItem(func_4421_call(relay.reshape(const_8991.astype('float64'), [16, 9, 9]), relay.reshape(const_8991.astype('float64'), [16, 9, 9]), ), 0)
func_3415_call = mod.get_global_var('func_3415')
func_3418_call = mutated_mod.get_global_var('func_3418')
const_8999 = relay.const([-2,7,-2,3,4,2,7,1,9,-4,-3,1,-6,-9,2,8,-8,5,-1,9,-10,-1,5,2,1,8,-3,-4,-7,-9,-10,2,2,-7,8,10,-5,6,-2,-3,-4,-9,-2,-3,-5,-8,1,-4,-7,-6,8,-4,-7,-4,-7,-6,-8,8,-9,8,5,-10,6,-9,-6,10,1,7,-4,-8,8,4,8,-5,-4,10,1,-6,-3,-1,-10,-1,7,-8,8,2,2,1,9,-9,-1,10,1,10,-1,-3,6,-1,-1,-3,-6,5,2,-10,-4,-4,9,6,2,-4,-8,3,10,-6,4,1,6,-10,4,1,-10,-2,9,-1,-5,-3,9,-7,-9,-9,4,-4,8,1,5,-7,-7,8,-6,-4,-1,5,2,-10,-7,-5,-8,3,3,5,6,-5,-2,6,9,10,8,1,-9,2,-9,-9,5,5,6,8,-4,2,3,6,9,-3,1,-8,6,-8,-8,-3,9,-3,-10,4,3,1,-1,9,3,6,7,-6,-5,-9,1,5,2,2,8,-7,9,6,-5,1,-8,-3,2,-9,4,-7,-2,5,-2,-5,1,3,9,4,-6,-5,-4,1,-10,3,10,10,-4,-5,10,-1,3,-2,5,10,3,-8,-4,10,-1,7,-3,-3,-2,7,2,4,4,-10,4,-2,5,-1,-3,2,-6,-5,-8,9,-9,-1,-4,6,2,7,-6,-2,-3,10,8,9,-1,-4,-3,8,-9,2,-5,-1,6,5,-1,5,-4,9,6,-5,-2,-9,-1,-8,-7,6,-1,-1,7,1,4,1,2,9,7,9,2,6,-5,6,5,6,-8,-4,-2,4,-4,4,-4,6,-7,-3,-4,-6,3,1,-3,5,3,-8,-8,-2,7,10,1,7,2,-8,-8,5,6,1,-2,-3,-10,9,3,-2,-7,4,-8,-5,10,7,6,1,-6,1,1,-3,7,10,-3,-10,5,-10,4,3,9,-2,-2,8,7,7,5,2,-4,-10,5,9,6,10,5,4,5,-8,10,4,7,-9,1,-4,4,-2,-6,6,10,-1,-1,-8,2,-1,4,-4,-9,3,4,5,-1,-6,9,10,10,-6,-8,-9,-2,3,-8,-7,9,6,-7,-3,9,-7,3,-2,9,-6,-2,-7,7,-10,-8,1,7,3,10,2,7,-10,9,5,-9,4,8,-8,3,2,-5,1,10,-5,1,-10,9,9,1,5,-9,-3,-4,3,-9,9,8,5,3,8,9,2,-7,7,9,10,-3,-4,-6,-4,-2,8,-4,-7,4,3,-3,-1,-8,-10,2,-4,7,-2,4,7,-3,-3,-1,-8,-6,-8,7,-1,10,1,-3,7,-2,-2,-6,-10,7,10,6,1,-8,-10,10,2,-3,10,-10,8,7,-8,-1,4,6,6,-1,-3,-7,5,-4,-5,-2,3,-3,5,10,-3,-4,9,-2,-1,1,5,6,-3,-9,-5,7,-2,-10,-10,-10,1,1,-5,2,-7,1,9,2,-8,-2,1,-3,-10,1,3,-3,7,-4,-7,2,7,6,1,-10,8,-3,3,-1,1,1,3,-10,-9,5,-1,10,10,-6,3,-1,-9,-7,10,-5,1,-7,-1,-5,1,6,8,-2,1,1,-3,4,-7,-6,2,10,-7,-6,-5,-9,-4,8,1,2,7,8,4,-4,5,-7,-1,-10,5,-1,10,7,-6,-6,5,1,-1,-4,2,-5,-9,-6,1,-3,4,5,3,-8,6,-8,-1,-5,-9,-9,-8,-2,9,1,3,-8,-5,9,-6,-9,-2,-5,5,7,-2,6,1,9,5,-3,4,-5,6,-9,2,5,4,-7,2,6,10,-6,-2,-4,6,5,-1,-9,8,-7,7,-6,-2,3,-7,-9,-2,2,9,1,3,5,8,-9,5,9,-8,4,-8,-5,7,5,-7,1,1,3,-8,10,-4,6,-6,1,10,5,4,6,-2,-9,6,-6,2,2,8,9,2,-9,-10,4,8,1,-7,-3,6,7,4,10,3,-9,6,2,5,8,-4,9,-2,-5,-5,-10,-4,4,2,-7,6,5,6,-9,1,-8,10,10,-6,-10,7,6,9,-1,-4,6,-4,1,10,-3,-5,-9,-8,6,-6,-9,-8,-4,4,8,4,7,4,-2,-6,-9,-7,8,9,-1,2,-10,4,-7,-9], dtype = "uint32")#candidate|8999|(810,)|const|uint32
var_9000 = relay.var("var_9000", dtype = "float64", shape = (384,))#candidate|9000|(384,)|var|float64
call_8998 = relay.TupleGetItem(func_3415_call(relay.reshape(const_8999.astype('uint32'), [9, 6, 15]), relay.reshape(var_9000.astype('float64'), [384,]), ), 0)
call_9001 = relay.TupleGetItem(func_3418_call(relay.reshape(const_8999.astype('uint32'), [9, 6, 15]), relay.reshape(var_9000.astype('float64'), [384,]), ), 0)
output = relay.Tuple([bop_8962,call_8974,const_8975,call_8979,var_8980,const_8981,const_8982,var_8983,call_8990,const_8991,call_8998,const_8999,var_9000,])
output2 = relay.Tuple([bop_8962,call_8976,const_8975,call_8984,var_8980,const_8981,const_8982,var_8983,call_8992,const_8991,call_9001,const_8999,var_9000,])
func_9005 = relay.Function([var_8980,var_8983,var_9000,], output)
mod['func_9005'] = func_9005
mod = relay.transform.InferType()(mod)
mutated_mod['func_9005'] = func_9005
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9005_call = mutated_mod.get_global_var('func_9005')
var_9007 = relay.var("var_9007", dtype = "bool", shape = (40,))#candidate|9007|(40,)|var|bool
var_9008 = relay.var("var_9008", dtype = "uint16", shape = (650,))#candidate|9008|(650,)|var|uint16
var_9009 = relay.var("var_9009", dtype = "float64", shape = (384,))#candidate|9009|(384,)|var|float64
call_9006 = func_9005_call(var_9007,var_9008,var_9009,)
output = call_9006
func_9010 = relay.Function([var_9007,var_9008,var_9009,], output)
mutated_mod['func_9010'] = func_9010
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9209 = relay.var("var_9209", dtype = "float64", shape = (16, 6, 11))#candidate|9209|(16, 6, 11)|var|float64
uop_9210 = relay.acosh(var_9209.astype('float64')) # shape=(16, 6, 11)
output = uop_9210
output2 = uop_9210
func_9212 = relay.Function([var_9209,], output)
mod['func_9212'] = func_9212
mod = relay.transform.InferType()(mod)
var_9213 = relay.var("var_9213", dtype = "float64", shape = (16, 6, 11))#candidate|9213|(16, 6, 11)|var|float64
output = func_9212(var_9213)
func_9214 = relay.Function([var_9213], output)
mutated_mod['func_9214'] = func_9214
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9246 = relay.var("var_9246", dtype = "float32", shape = (10, 16, 10))#candidate|9246|(10, 16, 10)|var|float32
uop_9247 = relay.sigmoid(var_9246.astype('float32')) # shape=(10, 16, 10)
uop_9250 = relay.sinh(var_9246.astype('float32')) # shape=(10, 16, 10)
bop_9257 = relay.logical_xor(uop_9247.astype('int32'), relay.reshape(uop_9250.astype('int32'), relay.shape_of(uop_9247))) # shape=(10, 16, 10)
output = relay.Tuple([bop_9257,])
output2 = relay.Tuple([bop_9257,])
func_9263 = relay.Function([var_9246,], output)
mod['func_9263'] = func_9263
mod = relay.transform.InferType()(mod)
mutated_mod['func_9263'] = func_9263
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9264 = relay.var("var_9264", dtype = "float32", shape = (10, 16, 10))#candidate|9264|(10, 16, 10)|var|float32
func_9263_call = mutated_mod.get_global_var('func_9263')
call_9265 = func_9263_call(var_9264)
output = call_9265
func_9266 = relay.Function([var_9264], output)
mutated_mod['func_9266'] = func_9266
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9360 = relay.var("var_9360", dtype = "uint32", shape = (12, 13, 5))#candidate|9360|(12, 13, 5)|var|uint32
const_9361 = relay.const([[[7,-8,8,6,9],[-8,2,-9,7,1],[2,-7,7,5,3],[-1,-7,-7,-2,6],[6,6,-9,-3,10],[10,7,-4,-9,10],[8,-2,-10,-10,1],[6,10,-7,6,5],[3,-9,5,9,-2],[-5,10,-5,-8,7],[-1,-9,4,1,-6],[-5,2,-1,7,2],[-1,-10,-6,-5,10]],[[-4,-2,5,6,5],[2,3,4,-2,6],[-10,1,-9,-5,-1],[-6,-9,5,4,9],[5,1,-5,4,6],[1,8,-8,-1,1],[1,7,8,3,5],[-3,-3,-8,1,-6],[-3,-5,-1,8,-5],[3,8,5,10,-10],[-3,-5,9,-7,-9],[-9,9,3,-6,-1],[-2,8,-2,8,4]],[[9,10,4,-1,-10],[-3,3,3,-4,-5],[-2,9,8,5,-5],[1,6,2,-1,-10],[-3,1,7,-10,-7],[-5,-3,-10,-8,-7],[6,9,-9,4,3],[-2,9,10,1,6],[-4,-6,-5,-10,-3],[-6,-2,3,-5,3],[2,-2,-1,8,2],[-8,5,5,-2,1],[-1,6,-1,7,9]],[[1,5,4,-8,8],[8,-6,3,1,8],[3,-8,-3,2,-4],[-9,-2,-2,10,3],[-8,7,-2,-7,6],[-4,5,9,-2,9],[2,4,-2,-2,-4],[4,4,8,-2,10],[2,-6,-7,-8,-6],[8,5,-1,8,-3],[10,4,9,-1,-9],[-8,4,-10,8,3],[-3,1,-3,-6,8]],[[3,9,2,-1,8],[4,1,-9,-1,6],[-3,5,8,-6,8],[6,-4,1,2,8],[2,-7,2,-1,-6],[-4,-6,3,-6,-10],[5,-8,-2,4,10],[5,6,2,-1,10],[2,4,-5,-3,6],[-7,-9,1,-3,7],[-8,5,6,3,-2],[5,-9,1,-6,8],[8,-6,-2,10,1]],[[-1,2,7,3,5],[3,9,-1,-9,-7],[-2,2,-3,4,-10],[-3,-5,6,2,2],[-7,9,10,-8,-8],[3,1,-7,-10,10],[-5,-2,7,-4,7],[8,2,10,1,10],[5,9,-9,-8,5],[-10,2,-5,-9,-10],[7,-10,7,-3,-10],[-8,-6,-8,-3,-5],[-6,-1,6,7,-6]],[[-2,7,4,-2,2],[9,4,7,10,10],[-8,-10,-5,8,-10],[9,9,-3,-9,9],[-6,5,4,6,4],[9,2,-3,-6,9],[5,-9,5,7,-9],[-9,-7,-9,-6,6],[10,-2,-7,-7,7],[-10,-5,5,2,-6],[-10,-8,-7,7,3],[-5,-9,3,-3,-6],[6,1,6,3,-9]],[[1,-4,-6,7,6],[5,10,8,7,-4],[10,-2,5,-10,-5],[7,-10,-4,-2,8],[-8,-9,6,-4,9],[-7,-1,-3,-4,-5],[1,5,-1,-6,8],[2,6,8,9,4],[-1,-10,-1,-9,3],[5,5,5,-7,-10],[-4,4,-4,-3,-4],[2,9,8,-2,-4],[10,-8,9,1,-4]],[[-2,-1,-10,9,-7],[-2,10,10,9,4],[6,-3,9,10,8],[8,2,-8,-4,8],[4,2,-9,-2,4],[-6,-10,-9,-10,8],[10,-2,5,7,-9],[-3,-4,6,7,6],[4,4,-10,4,9],[-2,5,-3,5,10],[-6,-6,-7,-8,10],[4,5,-7,-2,-8],[10,9,-3,-8,4]],[[-2,-10,-3,-3,-1],[-6,-5,4,7,-5],[-6,5,2,10,6],[-7,-6,-9,6,-1],[-2,-2,7,1,2],[9,10,-5,-1,10],[9,-6,-4,6,-6],[5,-6,-7,4,9],[3,-6,-3,3,6],[-1,-1,-1,-3,-5],[6,9,10,4,-1],[10,2,-6,8,9],[5,8,9,2,-8]],[[3,8,5,7,2],[2,-3,-9,-9,10],[-1,-8,-10,-8,-10],[-9,10,6,-5,-3],[-2,-10,-1,-4,6],[-6,9,-5,2,-9],[-10,7,8,-3,6],[-2,3,5,-1,-4],[-3,5,4,-10,5],[-1,2,5,1,2],[8,-8,-4,-6,-2],[-5,1,-10,9,-3],[1,-1,10,-2,-6]],[[10,6,6,1,-6],[-2,-1,-10,8,-2],[6,-3,-6,-5,-3],[3,-6,1,1,-5],[8,-10,8,1,1],[-5,7,-6,-10,-3],[1,-6,5,2,-1],[4,2,-10,4,-6],[-3,4,8,4,10],[-3,-3,9,-8,5],[7,1,-5,-10,2],[-6,9,-6,-7,-7],[8,-9,10,-9,10]]], dtype = "uint32")#candidate|9361|(12, 13, 5)|const|uint32
bop_9362 = relay.greater_equal(var_9360.astype('bool'), relay.reshape(const_9361.astype('bool'), relay.shape_of(var_9360))) # shape=(12, 13, 5)
var_9367 = relay.var("var_9367", dtype = "uint32", shape = (12, 13, 5))#candidate|9367|(12, 13, 5)|var|uint32
bop_9368 = relay.floor_mod(var_9360.astype('float32'), relay.reshape(var_9367.astype('float32'), relay.shape_of(var_9360))) # shape=(12, 13, 5)
uop_9371 = relay.sinh(var_9367.astype('float32')) # shape=(12, 13, 5)
output = relay.Tuple([bop_9362,bop_9368,uop_9371,])
output2 = relay.Tuple([bop_9362,bop_9368,uop_9371,])
func_9373 = relay.Function([var_9360,var_9367,], output)
mod['func_9373'] = func_9373
mod = relay.transform.InferType()(mod)
mutated_mod['func_9373'] = func_9373
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9373_call = mutated_mod.get_global_var('func_9373')
var_9375 = relay.var("var_9375", dtype = "uint32", shape = (12, 13, 5))#candidate|9375|(12, 13, 5)|var|uint32
var_9376 = relay.var("var_9376", dtype = "uint32", shape = (12, 13, 5))#candidate|9376|(12, 13, 5)|var|uint32
call_9374 = func_9373_call(var_9375,var_9376,)
output = call_9374
func_9377 = relay.Function([var_9375,var_9376,], output)
mutated_mod['func_9377'] = func_9377
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9538 = relay.var("var_9538", dtype = "float64", shape = (5, 10, 15))#candidate|9538|(5, 10, 15)|var|float64
uop_9539 = relay.atan(var_9538.astype('float64')) # shape=(5, 10, 15)
uop_9543 = relay.atanh(uop_9539.astype('float32')) # shape=(5, 10, 15)
func_4418_call = mod.get_global_var('func_4418')
func_4421_call = mutated_mod.get_global_var('func_4421')
const_9556 = relay.const([[8.845335,-2.548214,3.953334,-1.398477,-4.763139,-2.901368,1.012859,9.117562,5.662105,3.031307,2.934778,-6.750270,0.860236,3.812373,7.447835,1.632320,8.235381,-3.310594,7.153257,-9.824233,-7.859544,-8.975993,-5.508242,-3.546904,-1.155872,-4.316279,-8.635392,5.626689,-4.906648,6.861049,2.086826,-0.683258,5.147365,4.476878,8.260654,-9.316066,-0.500678,-9.987162,-7.835621,4.759321,-6.597940,-0.317450,-0.878075,-4.294002,-5.414962,-9.992749,3.839236,4.802072,4.978692,8.377328,-3.259359,-1.110835,-6.384579,9.996315,0.006518,6.053529,-6.483807,-6.552480,0.326396,1.135233,4.926640,9.851996,1.652929,5.128276,1.706764,1.018540,-3.327147,-6.359042,-6.078928,1.752583,-4.730887,7.313409,-8.444916,0.270771,7.689159,7.149920,-4.159129,0.530226,7.711212,-4.493393,6.554625,6.868360,1.333754,-0.237087,7.658187,7.988738,-4.308617,7.124960,5.199946,-0.992923,8.175610,3.762985,-6.657298,0.442462,7.886430,-7.368040,-6.736231,-2.387105,1.785119,5.563984,-6.891765,3.983624,-9.927072,7.047714,9.019362,-8.876824,0.504541,3.275126,-8.245326,-6.698802,-6.650056,-1.386295,-8.238569,4.917999,5.581212,-3.014115,2.486751,-8.594460,-4.613358,1.583554,8.847870,8.793175,3.306448,-9.059644,5.202390,9.156220,0.153382,-1.281903,-6.182149,4.530538,3.895948,4.029851,2.994061,-0.876699,2.726240,-5.194332,5.213367,-7.547304,-1.568257,-9.410666,2.419653,3.003693,9.767668,-8.327948,1.079334,3.057940,1.283551,-0.597648,-4.574460,9.245301,-4.805938,-5.259323,4.858634,9.380954,1.515026,5.386831,2.734695,9.617706,2.845346,0.151403,4.345612,6.924942,4.121805,-6.164143,-9.360621,-4.186735,9.458926,-2.309836,3.045161,-9.900516,9.442638,8.837887,-6.578605,3.795207,-8.734223,7.612337,1.961841,-2.895720,-0.408949,-7.810712,-5.131778,1.573575,9.302282,-4.977372,0.594381,3.194275,8.970225,-4.671493,6.173189,8.513900,-1.620437,7.471490,1.888190,-7.490537,-8.315324,-8.618539,8.700698,-4.955560,6.873750,3.189212,6.614483,7.727771,9.084185,1.825722,3.051759,-4.697486,2.796108,2.947916,-3.313942,-7.542999,-1.527795,8.124172,-5.848450,-9.579831,2.845802,1.503188,-9.443444,6.485897,-7.142301,-5.804203,7.962724,0.603353,-1.216433,7.123410,-8.154922,-5.022035,-3.086040,4.781788,3.773262,-8.281969,4.020972,-5.687482,-8.331192,-8.563822,-6.635497,-9.612164,5.013272,-6.557595,-6.354365,-4.395619,3.891074,2.863955,8.168201,-8.277728,-9.839191,4.370848,-7.708085,7.207212,0.895230,6.501685,-4.896157,2.533222,3.875061,4.713524,0.180365,3.691238,-4.874770,-4.386058,2.080849,9.859063,0.581220,5.527761,-9.307436,-6.147146,-8.848183,7.383688,2.341168,3.981145,-0.797381,-5.373400,-3.895065,-9.232690,-2.125413,-3.941734,8.195622,8.528256,-9.310939,5.752187,2.008669,-7.773515,4.821949,-2.873750,-9.615612,-5.120544,-1.603186,-6.647954,-6.795266,-5.810803,1.955472,-3.502082,-5.950106,2.419850,-6.716285,5.480720,-3.825384,-1.648477,0.830261,-9.272940,-3.234161,-8.702038,7.352674,4.842027,9.942363,-8.251514,7.862340,5.714007,-6.458215,-2.469750,1.846632,-2.593994,-4.337908,-8.257129,1.227334,6.171523,4.357743,0.811848,5.359462,-7.850518,-2.711688,9.507588,4.851122,8.562486,-3.508669,-1.657071,5.358274,5.245190,0.495607,9.672232,6.887408,-9.788759,-3.595173,2.232663,7.757528,-1.201072,7.217138,8.452728,-0.731018,-2.609459,-7.856770,7.964992,-9.654805,3.605636,-4.250800,-0.802438,-6.440498,-5.687607,-9.634340,-8.408969,9.359798,8.740918,-6.897145,6.853591,4.638074,7.537370,-1.656614,8.202002,-6.605164,0.537933,1.146761,-8.575492,-4.058357,-5.231652,-9.349043,-1.778367,3.512824,-4.817615,-9.924309,7.803920,-8.466136,-4.145340,0.499176,7.783825,-8.096320,-1.990852,-1.367396,7.044058,1.574411,-5.870525,-9.765505,5.214641,-5.299742,-6.681835,0.432289,4.266367,-0.240293,-6.327248,5.729883,5.609485,-5.397508,-5.148748,-5.635047,-1.256335,1.899649,-0.067581,2.546429,-4.744685,3.315046,4.228217,-7.996690,-1.035993,-4.967599,-8.527023,-2.211807,0.550115,8.807133,-1.140650,-5.326053,2.667496,8.570603,7.614082,3.785317,-1.631299,-3.789887,4.044756,-6.086117,-2.332598,-0.833362,4.385316,-2.657226,-4.416560,-8.575909,-4.666977,7.914008,-5.984877,4.112236,2.906176,4.906671,5.859815,7.350067,-2.701141,4.524721,-8.837653,7.793293,-4.384485,6.593662,5.818334,1.592943,-8.307632,6.479385,6.319437,-7.504381,2.082284,2.643186,-3.880704,0.495000,-9.542793,0.693739,9.125464,-4.827805,-9.379702,-5.595868,4.348526,2.997897,-2.610698,9.518285,0.625047,-7.460393,7.586933,-6.364271,7.965151,8.036659,-2.199001,-6.057062,4.374170,3.257344,-2.333589,-7.908237,-3.162153,5.055978,-1.566326,-0.909875,4.887355,0.249410,-6.291438,-9.336101,8.916776,-6.740240,-6.005415,4.153122,6.407340,0.445566,-9.259487,-0.077229,-5.909298,6.200194,-2.942841,-2.340222,9.451949,-8.594622,0.995147,2.847207,-2.549005,-1.465153,-6.228193,6.909223,4.902373,-2.714841,-6.021302,-2.232896,-0.394036,3.614811,6.063477,-7.694690,5.859605,9.598405,2.550550,-3.317833,-0.999447,-7.493121,-0.396185,-0.811781,0.810369,-2.532985,9.181107,-2.762609,-7.373075,-4.396386,7.642315,-0.014536,-2.381771,-0.476340,-5.206684,4.847618,2.309448,-9.483663,6.096562,5.554807,1.742914,-2.498340,-3.941493,-8.999064,2.658972,1.215038,-1.208456,4.979057,7.545621,-5.069620,-1.344587,-5.777410,-3.595208,-4.486255,6.001224,-4.814621,1.334922,-9.228899,3.084040,-0.348801,0.039613,1.929355,-7.098493,-1.674653,-2.933210,4.098949,9.497556,5.454955,-0.765827,0.566650,0.248236,-7.396028,2.346609,8.796299,-6.625796,8.419446,7.292923,6.036752,5.375245,2.131268,-6.690351,5.170782,-3.822012,5.385610,-0.043657,-1.031152,-7.899054,-2.896556,1.385128,-2.343506,9.580080,-8.493869,3.916536,-1.862658,5.164432,-5.979097,7.064137,0.919799,-7.322871,-0.236758,-1.516244,1.661124,-1.675635,-0.448114,3.236399,2.879729,-1.965655,9.166431,9.892772,-7.969798,7.064229,-3.868317,-9.996767,-3.122425,5.854849,2.948399,0.610004,-1.621962,-9.658518,-1.110561,-8.781090,1.202311,7.918773,-2.815557,-2.549979,5.450555,6.087435,-6.326439,-2.811123,8.609720,-6.802437,3.172390,7.826315,7.568216,-1.703080,9.682296,9.413196,3.602976,0.834274,1.782029,-4.252867,0.972717,-0.811135,-1.668921,-8.442305,-9.899889,-8.768535,-8.803800,-2.092061,-3.369187,5.148059,8.767238,-4.788392,5.237428,-0.748560,0.279169,-4.881153,-6.649781,7.879309,6.683211,-5.202248,-5.916336,6.352626,-9.307564,-7.147930,-2.402238,-3.360729,-7.006436,-1.470511,-2.471538,-5.922313,7.185785,-6.939092,9.774522,-3.176093,1.748718,4.184103,-5.509628,1.963200,-9.491609,0.671084,5.232959,-2.377571,-4.137211,-8.747752,3.482418,-3.665273,7.291425,-3.295518,-1.217564,1.088986,-3.887731,1.731713,6.293961,4.467706,-4.853953,-4.707721,1.341395,5.311916,4.332679,-6.674148,-6.493227,8.963328,-4.006865,0.873643,9.988441,-8.060847,1.563677,-2.863838,-6.270587,-6.890541,-4.682719,2.976943,4.693374,2.803137,-9.437124,8.874727,-0.936767,-1.283797,-5.943727,-0.344158,-0.544902,6.497958,-8.178985,-0.563099,-7.409306,-2.370501,8.067328,-6.441797,-0.099025,2.451924,0.547926,-3.126273,8.525458,-5.702250,-8.685018,2.281638,-3.120613,-5.980695,-3.763571,9.345751,4.113773,2.364346,3.980451,7.292922,6.240032,-9.358700,1.189541,7.551073,7.266200,-5.646830,-0.035587,-6.286658,8.291255,6.521623,6.821899,-8.614097,-1.100257,7.089258,2.384674,-1.178557,7.560440,3.153100,2.607117,-1.654506,7.633358,-1.534353,-7.695211,-2.230232,0.318635,-0.919381,-3.452397,7.145145,-5.533712,1.143950,7.261756,4.877841,-2.847589,0.323120,5.989902,0.856976,-5.146990,-5.822689,-0.737219,-1.561067,-2.552946,4.064787,7.450364,-3.545651,7.288145,1.960755,6.876808,-3.262134,-9.155742,8.167373,4.878529,-9.809375,-8.158255,-2.029076,4.811787,-0.674859,0.876236,-5.718240,-6.112404,4.023714,-2.309068,-4.140628,5.427502,-8.834322,-8.762331,5.696555,-6.471091,9.641201,-8.645434,3.304712,0.746211,7.738439,2.819402,3.544958,-9.700633,-5.301594,-7.083433,-3.476379,8.747221,0.984514,-0.392339,9.084226,-7.665689,1.776589,-5.770320,-0.881989,-5.640757,0.376530,2.952690,0.147752,7.081749,6.860441,-9.366827,0.046275,-5.323293,7.341824,2.637019,9.817660,-7.466896,-6.028758,6.586761,-7.791712,-9.919718,-6.245146,-7.880794,-9.785615,1.129809,8.260270,6.984238,4.497411,7.041193,9.230402,6.358517,-4.614411,4.836448,-0.691533,3.856900,5.504986,-5.612690,-3.527431,7.356981,-5.365802,-9.868228,1.259167,-3.887057,1.866761,6.767142,-2.308217,8.289780,-9.457545,5.823993,6.517177,5.487221,2.424196,-1.086834,3.000012,-6.552146,-2.541966,4.714729,-8.696203,-2.565154,-4.835630,-7.392992,-9.178019,3.403244,9.851315,-0.740455,-2.519141,0.803184,0.057661,9.962929,7.345319,0.873429,-6.275744,4.600415,-7.072665,-1.130037,-9.304567,-8.783715,-4.486859,8.318338,-8.564740,-7.263863,-8.173457,-3.683372,-9.291445,-2.499024,5.211546,8.861985,-2.692464,8.771589,3.562384,2.574930,-3.348381,-4.199568,-0.111213,-5.366904,7.223580,8.897107,-4.090435,-3.813496,5.352251,4.149746,-9.565110,-8.399171,5.802261,0.700742,0.849307,-4.591382,-0.808657,-0.548573,5.554209,-0.511693,7.359112,-2.661406,3.305297,-7.861040,4.639531,-2.045099,2.912438,-4.511834,-3.381144,0.243205,7.579279,5.836795,-0.691751,-9.552725,8.895695,2.551454,-6.291518,-7.396777,-9.641159,-5.336154,-9.031221,8.822442,2.945506,0.078986,7.422941,3.879659,-0.571503,3.632409,-4.336529,-1.342713,-2.785303,-3.809856,5.127167,-5.044201,-7.492081,1.824653,5.689947,-1.324565,0.400699,-0.900720,-9.059545,1.607483,9.904071,8.495018,-1.166157,0.415555,5.960650,7.302296,-0.435716,-7.106977,-5.526923,-1.032833,-6.638073,-9.803063,-7.467505,9.265392,-5.557234,8.358104,7.929733,2.901890,6.325176,-4.132278,-8.086753,1.186850,1.607219,9.839564,-6.506318,-8.797805,-2.394575,-0.281874,0.065227,6.505446,-4.585354,3.352550,-7.983150,2.861679,9.818013,-5.387610,6.176319,7.465713,-9.024506,-4.874382,-3.255092,6.251533,1.950251,2.102145,3.945564,-4.238882,7.248009,6.037482,-0.916670,9.621954,-2.267693,0.484454,-9.926462,2.814376,-8.164692,3.942764,-4.419184,2.621047,-0.330256,-9.078121,-0.085373,1.828108,0.452420,5.569844,7.478841,5.207956,-1.830444,8.316101,2.327081,9.073196,-4.062521,-2.514858,-3.535155,-6.191714,-6.517317,-6.868343,4.736745,4.907978,6.820068,-4.475720,9.467687,-5.032791,-2.305820,-5.916554,-7.413978,9.774647,-0.649236,2.446024,-1.847742,4.199554,4.789422,7.666256,6.626010,8.853344,4.801528,7.802833,6.254563,-7.900249,8.405732,-8.111847,6.335291,-2.770506,9.091257,-6.369824,8.280286,0.854276,4.686794,1.181498,3.518958,1.969805,-0.067722,8.186178,2.501393,-7.422464,7.360898,-4.719998,-6.692303,-3.709441,5.303771,5.362173,3.541136,4.805363,8.073077,3.874761,6.463001,2.983294,-7.024671,7.207835,6.487196,-1.740290,-1.962534,0.917439,-2.495947,0.184483,-0.349385,-2.755928,7.613628,-1.747848,8.276101,9.342434,4.068191,-4.005160,1.873503,2.559519,4.309164,7.003173,-9.950440,8.504627,2.385956,-9.635415,3.064039,4.064002,-1.220007,-0.499498,0.904763,-4.853561,-9.873165,-2.687796,0.001939,-9.642750,-4.905314,-5.359026,-6.708477,9.250363,-4.118551,0.813168,-0.115818,-1.215993,7.777440,-5.243522,-8.362724,6.319538,-2.400227,4.007613,1.519264,-8.721765,2.478299,-0.366681,-5.033332,7.272664,-1.372908,5.774532,2.816879,3.340076,-8.943290,-6.772693,7.281597,9.032145,3.008772,7.117815,8.611312,-4.128162,-8.074343,-3.482876,-1.247092,-4.404439,4.304560,-7.594528,6.564840,1.699781,2.938325,4.745944,4.570943,-2.614250,0.554761,8.988920,-5.201565,3.144783,-2.616084,4.401321,-2.201603,9.759731,9.410732,-5.226440,-9.029305,-2.616972,0.182260,-7.463346,3.645102,-4.712851,-6.404580,0.386189,4.037949,2.592380,-2.497181,3.378977,-0.220887,-1.955984,-6.665146,2.916071,-0.082874,-4.718937,0.654802,-6.946245,-9.688646,7.998147,-7.282790,2.088926,3.054879,-8.489027,9.086097,-0.670150,-8.681709,-6.889711,-2.971913,9.927194,3.790672,-6.183573,-1.054648,8.882081,3.043834,6.351686,5.948046,-4.411158,-0.451768,8.880165,-3.266336,9.772663,-4.002561,2.838849,4.946547,-8.326455,-6.400450,5.156511,8.366496,4.485423,8.848176,5.980138,1.797185,-4.735727,-2.232769,-9.551284,3.288052,9.509769,5.328154,-4.097096,-8.353023,2.697160,-9.632245,7.693278,-6.172169,-0.524818,-0.841020,-3.316701,7.238329,1.237327,-5.078492,-9.826745,5.010641,-9.175313,-6.910985,-0.362859,0.261026,-0.004205,-1.254600,2.385402,-4.155871,1.388663,9.833095,6.006223,-2.805696,-8.440720,-3.021121,-2.679970,1.984537,-6.507269,-9.273742,-3.505021,-7.021750,9.543454,-1.611284,0.943655,-3.807875,6.550322,9.629767,0.244231,3.922084,-0.702726,-0.330197,-1.699579,8.390596,-2.757984,4.948305,5.695558,1.463188,-9.954326,-4.119691,-2.786735,-1.609063]], dtype = "float64")#candidate|9556|(1, 1296)|const|float64
call_9555 = relay.TupleGetItem(func_4418_call(relay.reshape(const_9556.astype('float64'), [16, 9, 9]), relay.reshape(const_9556.astype('float64'), [16, 9, 9]), ), 0)
call_9557 = relay.TupleGetItem(func_4421_call(relay.reshape(const_9556.astype('float64'), [16, 9, 9]), relay.reshape(const_9556.astype('float64'), [16, 9, 9]), ), 0)
output = relay.Tuple([uop_9543,call_9555,const_9556,])
output2 = relay.Tuple([uop_9543,call_9557,const_9556,])
func_9558 = relay.Function([var_9538,], output)
mod['func_9558'] = func_9558
mod = relay.transform.InferType()(mod)
mutated_mod['func_9558'] = func_9558
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9559 = relay.var("var_9559", dtype = "float64", shape = (5, 10, 15))#candidate|9559|(5, 10, 15)|var|float64
func_9558_call = mutated_mod.get_global_var('func_9558')
call_9560 = func_9558_call(var_9559)
output = call_9560
func_9561 = relay.Function([var_9559], output)
mutated_mod['func_9561'] = func_9561
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9763 = relay.const([[-3.756533,7.132225],[5.463618,2.281497],[-8.261819,-4.562740],[4.511070,-0.950844],[-8.928946,-6.599841],[-5.522441,9.234625],[-2.976520,9.160162],[-3.917184,-4.565334],[2.423144,8.911076],[-5.892384,6.164235],[-9.475538,5.541936],[8.178928,6.048123],[-5.129892,-1.063018],[3.105351,-2.376178],[-0.968776,-2.324811],[-2.570333,9.980574]], dtype = "float64")#candidate|9763|(16, 2)|const|float64
uop_9764 = relay.log10(const_9763.astype('float64')) # shape=(16, 2)
func_1823_call = mod.get_global_var('func_1823')
func_1826_call = mutated_mod.get_global_var('func_1826')
var_9789 = relay.var("var_9789", dtype = "float64", shape = (756,))#candidate|9789|(756,)|var|float64
call_9788 = func_1823_call(relay.reshape(var_9789.astype('float64'), [9, 14, 6]), relay.reshape(var_9789.astype('float64'), [9, 14, 6]), )
call_9790 = func_1823_call(relay.reshape(var_9789.astype('float64'), [9, 14, 6]), relay.reshape(var_9789.astype('float64'), [9, 14, 6]), )
output = relay.Tuple([uop_9764,call_9788,var_9789,])
output2 = relay.Tuple([uop_9764,call_9790,var_9789,])
func_9792 = relay.Function([var_9789,], output)
mod['func_9792'] = func_9792
mod = relay.transform.InferType()(mod)
var_9793 = relay.var("var_9793", dtype = "float64", shape = (756,))#candidate|9793|(756,)|var|float64
output = func_9792(var_9793)
func_9794 = relay.Function([var_9793], output)
mutated_mod['func_9794'] = func_9794
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9855 = relay.var("var_9855", dtype = "bool", shape = (7, 4, 13))#candidate|9855|(7, 4, 13)|var|bool
var_9856 = relay.var("var_9856", dtype = "bool", shape = (7, 4, 13))#candidate|9856|(7, 4, 13)|var|bool
bop_9857 = relay.logical_or(var_9855.astype('bool'), relay.reshape(var_9856.astype('bool'), relay.shape_of(var_9855))) # shape=(7, 4, 13)
output = bop_9857
output2 = bop_9857
F = relay.Function([var_9855,var_9856,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_9855,var_9856,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

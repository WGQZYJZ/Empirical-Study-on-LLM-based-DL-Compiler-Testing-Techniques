==========mod==========
#[version = "0.0.5"]
def @func_11110(%var_11039: Tensor[(420), float64]) -> (Tensor[(6), float64], Tensor[(?, 9, 10), bool], Tensor[(420), float64], Tensor[(630), float32], Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(420), float64]) {
  %0 = cast(%var_11039, dtype="float64") /* ty=Tensor[(420), float64] */;
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %2 = reshape(%0, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %3 = reshape(%1, newshape=[630, 1]) /* ty=Tensor[(630, 1), float32] */;
  %4 = @func_1715(%2, %3) /* ty=(Tensor[(12, 5, 9), float64], Tensor[(15, 4), int64], Tensor[(420), float64], Tensor[(1408), float32], Tensor[(?, 9, 10), bool], Tensor[(630, 1), float32]) */;
  %5 = @func_3312() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(420), float64], Tensor[(12, 5, 9), float64]) */;
  %6 = cast(meta[relay.Constant][0] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %7 = reshape(%6, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %8 = @func_3876(%7) /* ty=(Tensor[(60), int64], Tensor[(420), float64], Tensor[(630), float32]) */;
  %9 = @func_10712() /* ty=Tensor[(6), float64] */;
  %10 = %4.4;
  %11 = @func_3269() /* ty=Tensor[(60), int64] */;
  %12 = %5.0;
  %13 = %8.1;
  (%9, %10, %var_11039, meta[relay.Constant][0] /* ty=Tensor[(630), float32] */, %11, %12, %13)
}

def @func_10872(%var_10859: Tensor[(540), float64]) -> (Tensor[(60), int64], Tensor[(11, 7, 1), float64], Tensor[(77), float64], Tensor[(60), int64], Tensor[(540), float64]) {
  %14 = @func_1428() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
  %15 = cast(meta[relay.Constant][1] /* ty=Tensor[(77), float64] */, dtype="float64") /* ty=Tensor[(77), float64] */;
  %16 = reshape(%15, newshape=[11, 7, 1]) /* ty=Tensor[(11, 7, 1), float64] */;
  %17 = cast(%var_10859, dtype="float64") /* ty=Tensor[(540), float64] */;
  %18 = reshape(%17, newshape=[12, 5, 9]) /* ty=Tensor[(12, 5, 9), float64] */;
  %19 = @func_3086(%18) /* ty=(Tensor[(12, 5, 9), uint8], Tensor[(60), int64]) */;
  %20 = %14.0;
  %21 = @func_1455(%16) /* ty=Tensor[(11, 7, 1), float64] */;
  %22 = %19.1;
  (%20, %21, meta[relay.Constant][1] /* ty=Tensor[(77), float64] */, %22, %var_10859)
}

def @func_9996() -> (Tensor[(1408), float32], Tensor[(60), int64]) {
  %23 = @func_5695() /* ty=(Tensor[(70, 9), float64], Tensor[(12, 5, 9), uint64], Tensor[(1408), float32], Tensor[(1408), float32]) */;
  %24 = @func_9772() /* ty=(Tensor[(60), int64],) */;
  %25 = %23.3;
  %26 = %24.0;
  (%25, %26)
}

def @func_5355() -> (Tensor[(12, 5, 9), float64], Tensor[(5, 84), float64], Tensor[(176, 8), float32], Tensor[(420), float64], Tensor[(630), float32]) {
  %27 = cast(meta[relay.Constant][2] /* ty=Tensor[(176, 8), float32] */, dtype="float32") /* ty=Tensor[(176, 8), float32] */;
  %28 = reshape(%27, newshape=[1408]) /* ty=Tensor[(1408), float32] */;
  %29 = @func_3000(%28) /* ty=(Tensor[(60), int64], Tensor[(15, 4), int64], Tensor[(5, 84), float64], Tensor[(1408), float32]) */;
  %30 = %29.2;
  %31 = cast(%30, dtype="float64") /* ty=Tensor[(5, 84), float64] */;
  %32 = cast(meta[relay.Constant][3] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %33 = reshape(%31, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %34 = reshape(%32, newshape=[630, 1]) /* ty=Tensor[(630, 1), float32] */;
  %35 = @func_1715(%33, %34) /* ty=(Tensor[(12, 5, 9), float64], Tensor[(15, 4), int64], Tensor[(420), float64], Tensor[(1408), float32], Tensor[(?, 9, 10), bool], Tensor[(630, 1), float32]) */;
  %36 = @func_2433() /* ty=Tensor[(12, 5, 9), float64] */;
  %37 = %35.2;
  (%36, %30, meta[relay.Constant][2] /* ty=Tensor[(176, 8), float32] */, %37, meta[relay.Constant][3] /* ty=Tensor[(630), float32] */)
}

def @func_9954() -> Tensor[(12, 5, 9), float64] {
  %38 = @func_6279() /* ty=(Tensor[(12, 5, 9), float64],) */;
  %38.0
}

def @func_2220() -> Tensor[(12, 5, 9), float64] {
  @func_874() /* ty=Tensor[(12, 5, 9), float64] */
}

def @func_3647() -> (Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(60), int64]) {
  %39 = @func_1792() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64]) */;
  %40 = @func_874() /* ty=Tensor[(12, 5, 9), float64] */;
  %41 = %39.0;
  %42 = @func_2860() /* ty=Tensor[(60), int64] */;
  (%40, %41, %42)
}

def @func_11247(%var_11234: Tensor[(70, 9), float64]) -> Tensor[(70, 9), int32] {
  %43 = @func_5695() /* ty=(Tensor[(70, 9), float64], Tensor[(12, 5, 9), uint64], Tensor[(1408), float32], Tensor[(1408), float32]) */;
  %44 = %43.0;
  %45 = cast(%var_11234, dtype="int32") /* ty=Tensor[(70, 9), int32] */;
  %46 = shape_of(%44, dtype="int32") /* ty=Tensor[(2), int32] */;
  %47 = cast(%44, dtype="int32") /* ty=Tensor[(70, 9), int32] */;
  %48 = dyn.reshape(%45, %46, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  left_shift(%47, %48) /* ty=Tensor[(70, 9), int32] */
}

def @func_8085(%var_8074: Tensor[(6, 15, 15), uint8]) -> (Tensor[(6, 15, 15), uint8], Tensor[(6, 15, 15), int64], Tensor[(70, 9), float32]) {
  %49 = cast(%var_8074, dtype="uint8") /* ty=Tensor[(6, 15, 15), uint8] */;
  %50 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(6, 15, 15), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %51 = cast(meta[relay.Constant][4] /* ty=Tensor[(6, 15, 15), uint8] */, dtype="uint8") /* ty=Tensor[(6, 15, 15), uint8] */;
  %52 = dyn.reshape(%49, %50, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %53 = cast(meta[relay.Constant][4] /* ty=Tensor[(6, 15, 15), uint8] */, dtype="int64") /* ty=Tensor[(6, 15, 15), int64] */;
  %54 = shape_of(%var_8074, dtype="int32") /* ty=Tensor[(3), int32] */;
  %55 = cast(%var_8074, dtype="int64") /* ty=Tensor[(6, 15, 15), int64] */;
  %56 = dyn.reshape(%53, %54, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %57 = @func_7417() /* ty=(Tensor[(10, 14, 3), float32], Tensor[(70, 9), float32]) */;
  %58 = add(%51, %52) /* ty=Tensor[(6, 15, 15), uint8] */;
  %59 = logical_xor(%55, %56) /* ty=Tensor[(6, 15, 15), int64] */;
  %60 = %57.1;
  (%58, %59, %60)
}

def @func_3497() -> (Tensor[(60), float32], Tensor[(8, 16, 11), float32], Tensor[(432), int64], Tensor[(420, 1), float64]) {
  %61 = @func_3154() /* ty=(Tensor[(60), float32],) */;
  %62 = cast(meta[relay.Constant][5] /* ty=Tensor[(432), int64] */, dtype="int64") /* ty=Tensor[(432), int64] */;
  %63 = cast(meta[relay.Constant][5] /* ty=Tensor[(432), int64] */, dtype="int64") /* ty=Tensor[(432), int64] */;
  %64 = cast(meta[relay.Constant][6] /* ty=Tensor[(420, 1), float64] */, dtype="float64") /* ty=Tensor[(420, 1), float64] */;
  %65 = reshape(%62, newshape=[9, 12, 4]) /* ty=Tensor[(9, 12, 4), int64] */;
  %66 = reshape(%63, newshape=[9, 12, 4]) /* ty=Tensor[(9, 12, 4), int64] */;
  %67 = reshape(%64, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %68 = @func_970(%65, %66, %67) /* ty=(Tensor[(9, 12, 4), int64], Tensor[(1408), float32], Tensor[(2, 6, 5), int64], Tensor[(420), float64], Tensor[(8, 16, 11), float32]) */;
  %69 = cast(meta[relay.Constant][6] /* ty=Tensor[(420, 1), float64] */, dtype="float64") /* ty=Tensor[(420, 1), float64] */;
  %70 = %61.0;
  %71 = %68.4;
  %72 = asin(%69) /* ty=Tensor[(420, 1), float64] */;
  (%70, %71, meta[relay.Constant][5] /* ty=Tensor[(432), int64] */, %72)
}

def @func_10533() -> (Tensor[(60), int64], Tensor[(14, 14, 3), float32], Tensor[(12, 5, 9), bool], Tensor[(18, 30), float64], Tensor[(7, 84), uint16]) {
  %73 = @func_10198() /* ty=(Tensor[(60), int64], Tensor[(11, 16, 6), float64], Tensor[(1056), float32]) */;
  %74 = cast(meta[relay.Constant][7] /* ty=Tensor[(7, 84), uint16] */, dtype="uint16") /* ty=Tensor[(7, 84), uint16] */;
  %75 = cast(meta[relay.Constant][7] /* ty=Tensor[(7, 84), uint16] */, dtype="uint16") /* ty=Tensor[(7, 84), uint16] */;
  %76 = reshape(%74, newshape=[14, 14, 3]) /* ty=Tensor[(14, 14, 3), uint16] */;
  %77 = reshape(%75, newshape=[14, 14, 3]) /* ty=Tensor[(14, 14, 3), uint16] */;
  %78 = @func_9071(%76, %77) /* ty=(Tensor[(14, 14, 3), bool], Tensor[(14, 14, 3), float32], Tensor[(12, 5, 9), float64]) */;
  %79 = cast(meta[relay.Constant][8] /* ty=Tensor[(18, 30), float64] */, dtype="float64") /* ty=Tensor[(18, 30), float64] */;
  %80 = reshape(%79, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %81 = @func_7340(%80) /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), bool], Tensor[(540), float64]) */;
  %82 = cast(meta[relay.Constant][7] /* ty=Tensor[(7, 84), uint16] */, dtype="float32") /* ty=Tensor[(7, 84), float32] */;
  %83 = atanh(%82) /* ty=Tensor[(7, 84), float32] */;
  %84 = cast(meta[relay.Constant][7] /* ty=Tensor[(7, 84), uint16] */, dtype="uint16") /* ty=Tensor[(7, 84), uint16] */;
  %85 = shape_of(%83, dtype="int32") /* ty=Tensor[(2), int32] */;
  %86 = cast(%83, dtype="uint16") /* ty=Tensor[(7, 84), uint16] */;
  %87 = dyn.reshape(%84, %85, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %88 = %73.0;
  %89 = %78.1;
  %90 = %81.1;
  %91 = right_shift(%86, %87) /* ty=Tensor[(7, 84), uint16] */;
  (%88, %89, %90, meta[relay.Constant][8] /* ty=Tensor[(18, 30), float64] */, %91)
}

def @func_9554() -> (Tensor[(60), int64],) {
  %92 = @func_3325() /* ty=(Tensor[(60), int64],) */;
  %93 = %92.0;
  (%93,)
}

def @func_10298() -> (Tensor[(6), float64], Tensor[(60), int64]) {
  %94 = @func_5893() /* ty=(Tensor[(5, 7, 9), uint16], Tensor[(60), int64]) */;
  %95 = @func_7932() /* ty=Tensor[(6), float64] */;
  %96 = %94.1;
  (%95, %96)
}

def @func_4457() -> (Tensor[(60), int64],) {
  %97 = @func_3687() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
  %98 = %97.0;
  (%98,)
}

def @func_4318() -> (Tensor[(12, 5, 9), bool],) {
  %99 = @func_4018() /* ty=(Tensor[(12, 5, 9), bool], Tensor[(12, 5, 9), float64]) */;
  %100 = %99.0;
  (%100,)
}

def @func_7988(%var_7952: Tensor[(6), float64]) -> (Tensor[(60), int64], Tensor[(3, 2), float64], Tensor[(6), float64], Tensor[(60), int64], Tensor[(8, 16, 11), bool], Tensor[(420), float64]) {
  %101 = cast(%var_7952, dtype="float64") /* ty=Tensor[(6), float64] */;
  %102 = reshape(%101, newshape=[3, 2]) /* ty=Tensor[(3, 2), float64] */;
  %103 = @func_1386(%102) /* ty=(Tensor[(3, 2), float64],) */;
  %104 = cast(meta[relay.Constant][9] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %105 = reshape(%104, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %106 = @func_2357(%105) /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(8, 16, 11), bool], Tensor[(420), float64], Tensor[(352, 4), float32]) */;
  %107 = @func_6865() /* ty=Tensor[(60), int64] */;
  %108 = %103.0;
  %109 = @func_2545() /* ty=Tensor[(60), int64] */;
  %110 = %106.2;
  (%107, %108, %var_7952, %109, %110, meta[relay.Constant][9] /* ty=Tensor[(420), float64] */)
}

def @func_4354(%var_4337: Tensor[(8, 6, 5), float32], %var_4338: Tensor[(8, 6, 5), float32]) -> (Tensor[(8, 6, 5), bool],) {
  %111 = cast(%var_4338, dtype="float32") /* ty=Tensor[(8, 6, 5), float32] */;
  %112 = shape_of(%var_4337, dtype="int32") /* ty=Tensor[(3), int32] */;
  %113 = cast(%var_4337, dtype="float32") /* ty=Tensor[(8, 6, 5), float32] */;
  %114 = dyn.reshape(%111, %112, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %115 = divide(%113, %114) /* ty=Tensor[(8, 6, 5), float32] */;
  %116 = cast(%var_4338, dtype="bool") /* ty=Tensor[(8, 6, 5), bool] */;
  %117 = shape_of(%115, dtype="int32") /* ty=Tensor[(3), int32] */;
  %118 = cast(%115, dtype="bool") /* ty=Tensor[(8, 6, 5), bool] */;
  %119 = dyn.reshape(%116, %117, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %120 = logical_and(%118, %119) /* ty=Tensor[(8, 6, 5), bool] */;
  (%120,)
}

def @func_11134() -> (Tensor[(420), float64],) {
  %121 = @func_4190() /* ty=(Tensor[(420), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
  %122 = %121.0;
  (%122,)
}

def @func_10632() -> (Tensor[(60), int64],) {
  %123 = @func_5661() /* ty=(Tensor[(60), int64],) */;
  %124 = %123.0;
  (%124,)
}

def @func_9772() -> (Tensor[(60), int64],) {
  %125 = @func_5475() /* ty=Tensor[(60), int64] */;
  (%125,)
}

def @func_9750() -> (Tensor[(60), int64],) {
  %126 = @func_8624() /* ty=(Tensor[(60), int64], Tensor[(70, 9), float64]) */;
  %127 = %126.0;
  (%127,)
}

def @func_2187(%var_2171: Tensor[(630), float32]) -> (Tensor[(12, 5, 9), float32], Tensor[(420), float64], Tensor[(90), float32], Tensor[(630), float32], Tensor[(420), float64], Tensor[(12, 5, 9), float32]) {
  %128 = cast(meta[relay.Constant][10] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %129 = cast(%var_2171, dtype="float32") /* ty=Tensor[(630), float32] */;
  %130 = cast(meta[relay.Constant][11] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %131 = reshape(%128, newshape=[1, 9, 10]) /* ty=Tensor[(1, 9, 10), float32] */;
  %132 = reshape(%129, newshape=[7, 9, 10]) /* ty=Tensor[(7, 9, 10), float32] */;
  %133 = reshape(%130, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %134 = @func_1349(%131, %132, %133) /* ty=(Tensor[(7, 9, 10), float64], Tensor[(1, 9, 10), float32], Tensor[(420), float64], Tensor[(420), float64]) */;
  %135 = @func_1942() /* ty=Tensor[(12, 5, 9), float32] */;
  %136 = %134.2;
  %137 = @func_1942() /* ty=Tensor[(12, 5, 9), float32] */;
  (%135, %136, meta[relay.Constant][10] /* ty=Tensor[(90), float32] */, %var_2171, meta[relay.Constant][11] /* ty=Tensor[(420), float64] */, %137)
}

def @func_1037() -> (Tensor[(12, 5, 9), float64], Tensor[(2, 6, 5), int64], Tensor[(60), int64]) {
  %138 = cast(meta[relay.Constant][12] /* ty=Tensor[(60), int64] */, dtype="int64") /* ty=Tensor[(60), int64] */;
  %139 = cast(meta[relay.Constant][12] /* ty=Tensor[(60), int64] */, dtype="int64") /* ty=Tensor[(60), int64] */;
  %140 = reshape(%138, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
  %141 = reshape(%139, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
  %142 = @func_125(%140, %141) /* ty=(Tensor[(2, 6, 5), int64],) */;
  %143 = @func_874() /* ty=Tensor[(12, 5, 9), float64] */;
  %144 = %142.0;
  (%143, %144, meta[relay.Constant][12] /* ty=Tensor[(60), int64] */)
}

def @func_3429(%var_3421: Tensor[(540), float64]) -> (Tensor[(60), int64], Tensor[(60), int64], Tensor[(540), float64]) {
  %145 = cast(%var_3421, dtype="float64") /* ty=Tensor[(540), float64] */;
  %146 = reshape(%145, newshape=[12, 5, 9]) /* ty=Tensor[(12, 5, 9), float64] */;
  %147 = @func_3086(%146) /* ty=(Tensor[(12, 5, 9), uint8], Tensor[(60), int64]) */;
  %148 = @func_3269() /* ty=Tensor[(60), int64] */;
  %149 = %147.1;
  (%148, %149, %var_3421)
}

def @func_92(%var_72: Tensor[(8, 16, 11), float32], %var_73: Tensor[(8, 16, 11), float32]) -> Tensor[(8, 16, 11), bool] {
  %150 = cast(%var_73, dtype="bool") /* ty=Tensor[(8, 16, 11), bool] */;
  %151 = shape_of(%var_72, dtype="int32") /* ty=Tensor[(3), int32] */;
  %152 = cast(%var_72, dtype="bool") /* ty=Tensor[(8, 16, 11), bool] */;
  %153 = dyn.reshape(%150, %151, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %154 = less_equal(%152, %153) /* ty=Tensor[(8, 16, 11), bool] */;
  %155 = cast(%var_73, dtype="bool") /* ty=Tensor[(8, 16, 11), bool] */;
  %156 = shape_of(%154, dtype="int32") /* ty=Tensor[(3), int32] */;
  %157 = cast(%154, dtype="bool") /* ty=Tensor[(8, 16, 11), bool] */;
  %158 = dyn.reshape(%155, %156, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%157, %158) /* ty=Tensor[(8, 16, 11), bool] */
}

def @func_1248(%var_1235: Tensor[(420), float64]) -> (Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(420), float64], Tensor[(420), float64]) {
  %159 = @func_874() /* ty=Tensor[(12, 5, 9), float64] */;
  %160 = cast(%159, dtype="float64") /* ty=Tensor[(12, 5, 9), float64] */;
  %161 = cast(%var_1235, dtype="float64") /* ty=Tensor[(420), float64] */;
  %162 = reshape(%160, newshape=[12, 5, 9]) /* ty=Tensor[(12, 5, 9), float64] */;
  %163 = reshape(%161, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %164 = @func_1088(%162, %163) /* ty=(Tensor[(12, 5, 9), uint16], Tensor[(2, 6, 5), int64], Tensor[(420), float64], Tensor[(1408), float32], Tensor[(12, 5, 9), float64]) */;
  %165 = @func_874() /* ty=Tensor[(12, 5, 9), float64] */;
  %166 = cast(%165, dtype="float64") /* ty=Tensor[(12, 5, 9), float64] */;
  %167 = cast(%var_1235, dtype="float64") /* ty=Tensor[(420), float64] */;
  %168 = reshape(%166, newshape=[12, 5, 9]) /* ty=Tensor[(12, 5, 9), float64] */;
  %169 = reshape(%167, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %170 = @func_1088(%168, %169) /* ty=(Tensor[(12, 5, 9), uint16], Tensor[(2, 6, 5), int64], Tensor[(420), float64], Tensor[(1408), float32], Tensor[(12, 5, 9), float64]) */;
  %171 = %164.4;
  %172 = %170.2;
  (%159, %165, %171, %var_1235, %172)
}

def @func_5448() -> (Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), uint64]) {
  %173 = @func_4096() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64]) */;
  %174 = @func_2220() /* ty=Tensor[(12, 5, 9), float64] */;
  %175 = cast(%174, dtype="float64") /* ty=Tensor[(12, 5, 9), float64] */;
  %176 = atanh(%175) /* ty=Tensor[(12, 5, 9), float64] */;
  %177 = cast(%174, dtype="uint64") /* ty=Tensor[(12, 5, 9), uint64] */;
  %178 = shape_of(%176, dtype="int32") /* ty=Tensor[(3), int32] */;
  %179 = cast(%176, dtype="uint64") /* ty=Tensor[(12, 5, 9), uint64] */;
  %180 = dyn.reshape(%177, %178, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %181 = @func_1511() /* ty=Tensor[(60), int64] */;
  %182 = %173.1;
  %183 = left_shift(%179, %180) /* ty=Tensor[(12, 5, 9), uint64] */;
  (%181, %182, %183)
}

def @func_11223(%var_11217: int64, %var_11218: Tensor[(11, 13, 9), int64]) -> (Tensor[(11, 13, 9), int64],) {
  %184 = cast(%var_11217, dtype="int64") /* ty=int64 */;
  %185 = cast(%var_11218, dtype="int64") /* ty=Tensor[(11, 13, 9), int64] */;
  %186 = bitwise_and(%184, %185) /* ty=Tensor[(11, 13, 9), int64] */;
  (%186,)
}

def @func_6602() -> (Tensor[(60), int64], Tensor[(12, 5, 9), float64]) {
  %187 = @func_4941() /* ty=(Tensor[(60), int64],) */;
  %188 = %187.0;
  %189 = @func_4639() /* ty=Tensor[(12, 5, 9), float64] */;
  (%188, %189)
}

def @func_3945() -> (Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float32], Tensor[(70, 9), float32]) {
  %190 = @func_1792() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64]) */;
  %191 = cast(meta[relay.Constant][13] /* ty=Tensor[(70, 9), float32] */, dtype="float32") /* ty=Tensor[(70, 9), float32] */;
  %192 = reshape(%191, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %193 = @func_2187(%192) /* ty=(Tensor[(12, 5, 9), float32], Tensor[(420), float64], Tensor[(90), float32], Tensor[(630), float32], Tensor[(420), float64], Tensor[(12, 5, 9), float32]) */;
  %194 = %190.0;
  %195 = %193.5;
  (%194, %195, meta[relay.Constant][13] /* ty=Tensor[(70, 9), float32] */)
}

def @func_2357(%var_2346: Tensor[(420), float64]) -> (Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(8, 16, 11), bool], Tensor[(420), float64], Tensor[(352, 4), float32]) {
  %196 = @func_1206() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(60), int64]) */;
  %197 = @func_2250() /* ty=(Tensor[(12, 5, 9), float64],) */;
  %198 = cast(%var_2346, dtype="float64") /* ty=Tensor[(420), float64] */;
  %199 = cast(meta[relay.Constant][14] /* ty=Tensor[(352, 4), float32] */, dtype="float32") /* ty=Tensor[(352, 4), float32] */;
  %200 = reshape(%198, newshape=[12, 5, 7]) /* ty=Tensor[(12, 5, 7), float64] */;
  %201 = reshape(%199, newshape=[1408]) /* ty=Tensor[(1408), float32] */;
  %202 = @func_775(%200, %201) /* ty=(Tensor[(12, 5, 7), float64], Tensor[(2, 6, 5), int64], Tensor[(15, 4), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(8, 16, 11), bool], Tensor[(1408), float32]) */;
  %203 = %196.0;
  %204 = %197.0;
  %205 = %202.8;
  (%203, %204, %205, %var_2346, meta[relay.Constant][14] /* ty=Tensor[(352, 4), float32] */)
}

def @func_3325() -> (Tensor[(60), int64],) {
  %206 = @func_1206() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(60), int64]) */;
  %207 = %206.2;
  (%207,)
}

def @func_8838() -> Tensor[(60), int64] {
  %208 = @func_8218() /* ty=(Tensor[(60), int64],) */;
  %208.0
}

def @func_5665() -> Tensor[(8, 12, 11), int32] {
  %209 = @func_4225() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(8, 12, 11), float64], Tensor[(8, 12, 11), int32]) */;
  %209.2
}

def @func_6025() -> (Tensor[(1408), float32],) {
  %210 = @func_5695() /* ty=(Tensor[(70, 9), float64], Tensor[(12, 5, 9), uint64], Tensor[(1408), float32], Tensor[(1408), float32]) */;
  %211 = %210.2;
  (%211,)
}

def @func_6814() -> (Tensor[(60), uint64],) {
  %212 = @func_4096() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64]) */;
  %213 = %212.0;
  %214 = cast(meta[relay.Constant][15] /* ty=Tensor[(60), int64] */, dtype="uint64") /* ty=Tensor[(60), uint64] */;
  %215 = shape_of(%213, dtype="int32") /* ty=Tensor[(1), int32] */;
  %216 = cast(%213, dtype="uint64") /* ty=Tensor[(60), uint64] */;
  %217 = dyn.reshape(%214, %215, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %218 = bitwise_and(%216, %217) /* ty=Tensor[(60), uint64] */;
  (%218,)
}

def @func_4604() -> Tensor[(60), int64] {
  @func_2545() /* ty=Tensor[(60), int64] */
}

def @func_7532() -> (Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(3, 2), float64], Tensor[(6), float64]) {
  %219 = @func_5448() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), uint64]) */;
  %220 = @func_1792() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64]) */;
  %221 = %220.1;
  %222 = cast(%221, dtype="float64") /* ty=Tensor[(12, 5, 9), float64] */;
  %223 = cast(meta[relay.Constant][16] /* ty=Tensor[(6), float64] */, dtype="float64") /* ty=Tensor[(6), float64] */;
  %224 = reshape(%223, newshape=[3, 2]) /* ty=Tensor[(3, 2), float64] */;
  %225 = @func_1386(%224) /* ty=(Tensor[(3, 2), float64],) */;
  %226 = %219.0;
  %227 = asinh(%222) /* ty=Tensor[(12, 5, 9), float64] */;
  %228 = %225.0;
  (%226, %227, %228, meta[relay.Constant][16] /* ty=Tensor[(6), float64] */)
}

def @func_9865() -> Tensor[(60), int64] {
  %229 = @func_3888() /* ty=(Tensor[(60), int64],) */;
  %229.0
}

def @func_4554() -> (Tensor[(60), int64], Tensor[(420), float64]) {
  %230 = @func_3325() /* ty=(Tensor[(60), int64],) */;
  %231 = @func_3736() /* ty=(Tensor[(12, 5, 9), float32], Tensor[(420), float64], Tensor[(60), int64], Tensor[(2, 6, 5), int64], Tensor[(420), float64]) */;
  %232 = %230.0;
  %233 = %231.1;
  (%232, %233)
}

def @func_10612(%var_10591: bool, %var_10592: Tensor[(6, 1), bool]) -> (Tensor[(6, 1), bool],) {
  %234 = cast(%var_10591, dtype="bool") /* ty=bool */;
  %235 = cast(%var_10592, dtype="bool") /* ty=Tensor[(6, 1), bool] */;
  %236 = logical_or(%234, %235) /* ty=Tensor[(6, 1), bool] */;
  (%236,)
}

def @func_3533() -> (Tensor[(8, 16, 11), float32], Tensor[(60), int64], Tensor[(12, 5, 9), float64]) {
  %237 = @func_3497() /* ty=(Tensor[(60), float32], Tensor[(8, 16, 11), float32], Tensor[(432), int64], Tensor[(420, 1), float64]) */;
  %238 = %237.1;
  %239 = cast(%238, dtype="float32") /* ty=Tensor[(8, 16, 11), float32] */;
  %240 = acos(%239) /* ty=Tensor[(8, 16, 11), float32] */;
  %241 = @func_2128() /* ty=Tensor[(60), int64] */;
  %242 = @func_2433() /* ty=Tensor[(12, 5, 9), float64] */;
  (%240, %241, %242)
}

def @func_3154() -> (Tensor[(60), float32],) {
  %243 = @func_2798() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(70, 6), float64], Tensor[(8, 16, 11), bool], Tensor[(1408), float32], Tensor[(12, 5, 9), float64]) */;
  %244 = %243.1;
  %245 = cast(%244, dtype="float32") /* ty=Tensor[(60), float32] */;
  %246 = rsqrt(%245) /* ty=Tensor[(60), float32] */;
  (%246,)
}

def @func_6279() -> (Tensor[(12, 5, 9), float64],) {
  %247 = @func_3244() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(420), float64], Tensor[(420), float64], Tensor[(1, 60), int64], Tensor[(12, 5, 9), uint8], Tensor[(60), int64], Tensor[(2, 6, 5), bool]) */;
  %248 = %247.0;
  (%248,)
}

def @func_1942() -> Tensor[(12, 5, 9), float32] {
  %249 = @func_1206() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(60), int64]) */;
  %250 = %249.1;
  %251 = cast(%250, dtype="float32") /* ty=Tensor[(12, 5, 9), float32] */;
  cosh(%251) /* ty=Tensor[(12, 5, 9), float32] */
}

def @func_6675() -> (Tensor[(60), int64],) {
  %252 = @func_5905() /* ty=(Tensor[(60), int64],) */;
  %253 = %252.0;
  (%253,)
}

def @func_11121() -> Tensor[(2, 6, 5), int64] {
  %254 = @func_10247() /* ty=(Tensor[(8, 12, 11), int32], Tensor[(60), int64], Tensor[(2, 6, 5), int64]) */;
  %254.2
}

def @func_2545() -> Tensor[(60), int64] {
  @func_2128() /* ty=Tensor[(60), int64] */
}

def @func_7417() -> (Tensor[(10, 14, 3), float32], Tensor[(70, 9), float32]) {
  %255 = cast(meta[relay.Constant][17] /* ty=Tensor[(10, 14, 3), float32] */, dtype="float32") /* ty=Tensor[(10, 14, 3), float32] */;
  %256 = @func_5242() /* ty=(Tensor[(3, 2), float64], Tensor[(6), float64], Tensor[(60), int64], Tensor[(70, 9), float32], Tensor[(12, 5, 9), float64]) */;
  %257 = log2(%255) /* ty=Tensor[(10, 14, 3), float32] */;
  %258 = %256.3;
  (%257, %258)
}

def @func_11423() -> (Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(420), float64], Tensor[(60), int64], Tensor[(60), int64], Tensor[(60), int64]) {
  %259 = @func_8624() /* ty=(Tensor[(60), int64], Tensor[(70, 9), float64]) */;
  %260 = @func_6753() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
  %261 = @func_4096() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64]) */;
  %262 = @func_4554() /* ty=(Tensor[(60), int64], Tensor[(420), float64]) */;
  %263 = %259.0;
  %264 = %260.2;
  %265 = %261.1;
  %266 = %262.1;
  %267 = @func_5168() /* ty=Tensor[(60), int64] */;
  %268 = @func_5168() /* ty=Tensor[(60), int64] */;
  %269 = @func_2128() /* ty=Tensor[(60), int64] */;
  (%263, %264, %265, %266, %267, %268, %269)
}

def @func_3060(%var_3057: Tensor[(77), float64]) -> (Tensor[(60), int64], Tensor[(60), int64], Tensor[(11, 7, 1), float64], Tensor[(77), float64]) {
  %270 = cast(%var_3057, dtype="float64") /* ty=Tensor[(77), float64] */;
  %271 = reshape(%270, newshape=[11, 7, 1]) /* ty=Tensor[(11, 7, 1), float64] */;
  %272 = @func_1511() /* ty=Tensor[(60), int64] */;
  %273 = @func_2128() /* ty=Tensor[(60), int64] */;
  %274 = @func_1455(%271) /* ty=Tensor[(11, 7, 1), float64] */;
  (%272, %273, %274, %var_3057)
}

def @func_775(%var_726: Tensor[(12, 5, 7), float64], %var_767: Tensor[(1408), float32]) -> (Tensor[(12, 5, 7), float64], Tensor[(2, 6, 5), int64], Tensor[(15, 4), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(8, 16, 11), bool], Tensor[(1408), float32]) {
  %275 = cast(%var_726, dtype="float64") /* ty=Tensor[(12, 5, 7), float64] */;
  %276 = cast(meta[relay.Constant][18] /* ty=Tensor[(15, 4), int64] */, dtype="int64") /* ty=Tensor[(15, 4), int64] */;
  %277 = cast(meta[relay.Constant][18] /* ty=Tensor[(15, 4), int64] */, dtype="int64") /* ty=Tensor[(15, 4), int64] */;
  %278 = reshape(%276, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
  %279 = reshape(%277, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
  %280 = @func_125(%278, %279) /* ty=(Tensor[(2, 6, 5), int64],) */;
  %281 = cast(meta[relay.Constant][18] /* ty=Tensor[(15, 4), int64] */, dtype="int64") /* ty=Tensor[(15, 4), int64] */;
  %282 = %280.0;
  %283 = cast(%282, dtype="int64") /* ty=Tensor[(2, 6, 5), int64] */;
  %284 = reshape(%281, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
  %285 = reshape(%283, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
  %286 = @func_125(%284, %285) /* ty=(Tensor[(2, 6, 5), int64],) */;
  %287 = cast(meta[relay.Constant][18] /* ty=Tensor[(15, 4), int64] */, dtype="int64") /* ty=Tensor[(15, 4), int64] */;
  %288 = %286.0;
  %289 = cast(%288, dtype="int64") /* ty=Tensor[(2, 6, 5), int64] */;
  %290 = reshape(%287, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
  %291 = reshape(%289, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
  %292 = @func_125(%290, %291) /* ty=(Tensor[(2, 6, 5), int64],) */;
  %293 = cast(%288, dtype="int64") /* ty=Tensor[(2, 6, 5), int64] */;
  %294 = %292.0;
  %295 = cast(%294, dtype="int64") /* ty=Tensor[(2, 6, 5), int64] */;
  %296 = reshape(%293, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
  %297 = reshape(%295, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
  %298 = @func_125(%296, %297) /* ty=(Tensor[(2, 6, 5), int64],) */;
  %299 = cast(%282, dtype="int64") /* ty=Tensor[(2, 6, 5), int64] */;
  %300 = %298.0;
  %301 = cast(%300, dtype="int64") /* ty=Tensor[(2, 6, 5), int64] */;
  %302 = reshape(%299, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
  %303 = reshape(%301, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
  %304 = @func_125(%302, %303) /* ty=(Tensor[(2, 6, 5), int64],) */;
  %305 = cast(%294, dtype="int64") /* ty=Tensor[(2, 6, 5), int64] */;
  %306 = cast(%300, dtype="int64") /* ty=Tensor[(2, 6, 5), int64] */;
  %307 = reshape(%305, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
  %308 = reshape(%306, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
  %309 = @func_125(%307, %308) /* ty=(Tensor[(2, 6, 5), int64],) */;
  %310 = cast(%var_767, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %311 = cast(%var_767, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %312 = reshape(%310, newshape=[8, 16, 11]) /* ty=Tensor[(8, 16, 11), float32] */;
  %313 = reshape(%311, newshape=[8, 16, 11]) /* ty=Tensor[(8, 16, 11), float32] */;
  %314 = erf(%275) /* ty=Tensor[(12, 5, 7), float64] */;
  %315 = %304.0;
  %316 = %309.0;
  %317 = @func_92(%312, %313) /* ty=Tensor[(8, 16, 11), bool] */;
  (%314, %282, meta[relay.Constant][18] /* ty=Tensor[(15, 4), int64] */, %288, %294, %300, %315, %316, %317, %var_767)
}

def @func_8703() -> (Tensor[(60), int64],) {
  %318 = @func_3325() /* ty=(Tensor[(60), int64],) */;
  %319 = %318.0;
  (%319,)
}

def @func_1088(%var_1041: Tensor[(12, 5, 9), float64], %var_1048: Tensor[(420), float64]) -> (Tensor[(12, 5, 9), uint16], Tensor[(2, 6, 5), int64], Tensor[(420), float64], Tensor[(1408), float32], Tensor[(12, 5, 9), float64]) {
  %320 = @func_874() /* ty=Tensor[(12, 5, 9), float64] */;
  %321 = cast(%var_1041, dtype="uint16") /* ty=Tensor[(12, 5, 9), uint16] */;
  %322 = shape_of(%320, dtype="int32") /* ty=Tensor[(3), int32] */;
  %323 = cast(%320, dtype="uint16") /* ty=Tensor[(12, 5, 9), uint16] */;
  %324 = dyn.reshape(%321, %322, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %325 = cast(%var_1048, dtype="float64") /* ty=Tensor[(420), float64] */;
  %326 = cast(meta[relay.Constant][19] /* ty=Tensor[(1408), float32] */, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %327 = reshape(%325, newshape=[12, 5, 7]) /* ty=Tensor[(12, 5, 7), float64] */;
  %328 = reshape(%326, newshape=[1408]) /* ty=Tensor[(1408), float32] */;
  %329 = @func_775(%327, %328) /* ty=(Tensor[(12, 5, 7), float64], Tensor[(2, 6, 5), int64], Tensor[(15, 4), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(8, 16, 11), bool], Tensor[(1408), float32]) */;
  %330 = @func_874() /* ty=Tensor[(12, 5, 9), float64] */;
  %331 = cast(%320, dtype="float64") /* ty=Tensor[(12, 5, 9), float64] */;
  %332 = shape_of(%330, dtype="int32") /* ty=Tensor[(3), int32] */;
  %333 = cast(%330, dtype="float64") /* ty=Tensor[(12, 5, 9), float64] */;
  %334 = dyn.reshape(%331, %332, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %335 = maximum(%323, %324) /* ty=Tensor[(12, 5, 9), uint16] */;
  %336 = %329.4;
  %337 = multiply(%333, %334) /* ty=Tensor[(12, 5, 9), float64] */;
  (%335, %336, %var_1048, meta[relay.Constant][19] /* ty=Tensor[(1408), float32] */, %337)
}

def @func_2128() -> Tensor[(60), int64] {
  @func_1511() /* ty=Tensor[(60), int64] */
}

def @func_5475() -> Tensor[(60), int64] {
  %338 = @func_4457() /* ty=(Tensor[(60), int64],) */;
  %338.0
}

def @func_5893() -> (Tensor[(5, 7, 9), uint16], Tensor[(60), int64]) {
  %339 = @func_3888() /* ty=(Tensor[(60), int64],) */;
  %340 = @func_4805() /* ty=Tensor[(5, 7, 9), uint16] */;
  %341 = %339.0;
  (%340, %341)
}

def @func_10712() -> Tensor[(6), float64] {
  %342 = @func_5535() /* ty=(Tensor[(6), float64], Tensor[(420), float64], Tensor[(630), float32]) */;
  %342.0
}

def @func_2501(%var_2465: Tensor[(420), float64]) -> (Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(420), float64]) {
  %343 = @func_2250() /* ty=(Tensor[(12, 5, 9), float64],) */;
  %344 = cast(%var_2465, dtype="float64") /* ty=Tensor[(420), float64] */;
  %345 = reshape(%344, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %346 = @func_1248(%345) /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(420), float64], Tensor[(420), float64]) */;
  %347 = @func_1511() /* ty=Tensor[(60), int64] */;
  %348 = %343.0;
  %349 = %346.1;
  (%347, %348, %349, %var_2465)
}

def @func_1715(%var_1640: Tensor[(420), float64], %var_1693: Tensor[(630, 1), float32]) -> (Tensor[(12, 5, 9), float64], Tensor[(15, 4), int64], Tensor[(420), float64], Tensor[(1408), float32], Tensor[(?, 9, 10), bool], Tensor[(630, 1), float32]) {
  %350 = @func_1206() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(60), int64]) */;
  %351 = cast(%var_1640, dtype="float64") /* ty=Tensor[(420), float64] */;
  %352 = cast(meta[relay.Constant][20] /* ty=Tensor[(1408), float32] */, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %353 = reshape(%351, newshape=[12, 5, 7]) /* ty=Tensor[(12, 5, 7), float64] */;
  %354 = reshape(%352, newshape=[1408]) /* ty=Tensor[(1408), float32] */;
  %355 = @func_775(%353, %354) /* ty=(Tensor[(12, 5, 7), float64], Tensor[(2, 6, 5), int64], Tensor[(15, 4), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(8, 16, 11), bool], Tensor[(1408), float32]) */;
  %356 = cast(%var_1693, dtype="float32") /* ty=Tensor[(630, 1), float32] */;
  %357 = cast(%var_1640, dtype="float64") /* ty=Tensor[(420), float64] */;
  %358 = cast(meta[relay.Constant][20] /* ty=Tensor[(1408), float32] */, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %359 = reshape(%356, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %360 = reshape(%357, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %361 = reshape(%358, newshape=[1408, 1]) /* ty=Tensor[(1408, 1), float32] */;
  %362 = @func_1590(%359, %360, %361) /* ty=(Tensor[(60), int64], Tensor[(630), float32], Tensor[(420), float64], Tensor[(?, 9, 10), bool], Tensor[(8, 16, 11), bool], Tensor[(1408, 1), float32], Tensor[(8, 16, 11), bool]) */;
  %363 = %350.1;
  %364 = %355.2;
  %365 = %362.3;
  (%363, %364, %var_1640, meta[relay.Constant][20] /* ty=Tensor[(1408), float32] */, %365, %var_1693)
}

def @func_2798() -> (Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(70, 6), float64], Tensor[(8, 16, 11), bool], Tensor[(1408), float32], Tensor[(12, 5, 9), float64]) {
  %366 = cast(meta[relay.Constant][21] /* ty=Tensor[(70, 6), float64] */, dtype="float64") /* ty=Tensor[(70, 6), float64] */;
  %367 = reshape(%366, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %368 = @func_1248(%367) /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(420), float64], Tensor[(420), float64]) */;
  %369 = cast(meta[relay.Constant][22] /* ty=Tensor[(1408), float32] */, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %370 = cast(meta[relay.Constant][22] /* ty=Tensor[(1408), float32] */, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %371 = reshape(%369, newshape=[8, 16, 11]) /* ty=Tensor[(8, 16, 11), float32] */;
  %372 = reshape(%370, newshape=[8, 16, 11]) /* ty=Tensor[(8, 16, 11), float32] */;
  %373 = @func_1792() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64]) */;
  %374 = @func_2220() /* ty=Tensor[(12, 5, 9), float64] */;
  %375 = @func_1915() /* ty=Tensor[(60), int64] */;
  %376 = %368.2;
  %377 = @func_92(%371, %372) /* ty=Tensor[(8, 16, 11), bool] */;
  %378 = %373.0;
  (%374, %375, %376, meta[relay.Constant][21] /* ty=Tensor[(70, 6), float64] */, %377, meta[relay.Constant][22] /* ty=Tensor[(1408), float32] */, %378)
}

def @func_8218() -> (Tensor[(60), int64],) {
  %379 = @func_1206() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(60), int64]) */;
  %380 = %379.2;
  (%380,)
}

def @func_1349(%var_1297: Tensor[(1, 9, 10), float32], %var_1298: Tensor[(7, 9, 10), float32], %var_1310: Tensor[(420), float64]) -> (Tensor[(7, 9, 10), float64], Tensor[(1, 9, 10), float32], Tensor[(420), float64], Tensor[(420), float64]) {
  %381 = cast(%var_1297, dtype="float32") /* ty=Tensor[(1, 9, 10), float32] */;
  %382 = cast(%var_1298, dtype="float32") /* ty=Tensor[(7, 9, 10), float32] */;
  %383 = divide(%381, %382) /* ty=Tensor[(7, 9, 10), float32] */;
  %384 = cast(%var_1298, dtype="float64") /* ty=Tensor[(7, 9, 10), float64] */;
  %385 = shape_of(%383, dtype="int32") /* ty=Tensor[(3), int32] */;
  %386 = cast(%383, dtype="float64") /* ty=Tensor[(7, 9, 10), float64] */;
  %387 = dyn.reshape(%384, %385, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %388 = cast(%var_1297, dtype="float32") /* ty=Tensor[(1, 9, 10), float32] */;
  %389 = cast(%var_1310, dtype="float64") /* ty=Tensor[(420), float64] */;
  %390 = reshape(%389, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %391 = @func_1248(%390) /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(420), float64], Tensor[(420), float64]) */;
  %392 = multiply(%386, %387) /* ty=Tensor[(7, 9, 10), float64] */;
  %393 = exp(%388) /* ty=Tensor[(1, 9, 10), float32] */;
  %394 = %391.4;
  (%392, %393, %394, %var_1310)
}

def @func_4941() -> (Tensor[(60), int64],) {
  %395 = @func_1428() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
  %396 = %395.0;
  (%396,)
}

def @func_6038() -> (Tensor[(60), int64],) {
  %397 = @func_3325() /* ty=(Tensor[(60), int64],) */;
  %398 = %397.0;
  (%398,)
}

def @func_8556(%var_8545: Tensor[(1408), float32]) -> (Tensor[(12, 5, 9), bool], Tensor[(8, 6, 5), bool], Tensor[(2, 120), float32], Tensor[(60), int64], Tensor[(1408), float32]) {
  %399 = @func_4318() /* ty=(Tensor[(12, 5, 9), bool],) */;
  %400 = cast(meta[relay.Constant][23] /* ty=Tensor[(2, 120), float32] */, dtype="float32") /* ty=Tensor[(2, 120), float32] */;
  %401 = cast(meta[relay.Constant][23] /* ty=Tensor[(2, 120), float32] */, dtype="float32") /* ty=Tensor[(2, 120), float32] */;
  %402 = reshape(%400, newshape=[8, 6, 5]) /* ty=Tensor[(8, 6, 5), float32] */;
  %403 = reshape(%401, newshape=[8, 6, 5]) /* ty=Tensor[(8, 6, 5), float32] */;
  %404 = @func_4354(%402, %403) /* ty=(Tensor[(8, 6, 5), bool],) */;
  %405 = cast(%var_8545, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %406 = reshape(%405, newshape=[1408]) /* ty=Tensor[(1408), float32] */;
  %407 = @func_3000(%406) /* ty=(Tensor[(60), int64], Tensor[(15, 4), int64], Tensor[(5, 84), float64], Tensor[(1408), float32]) */;
  %408 = %399.0;
  %409 = %404.0;
  %410 = %407.0;
  (%408, %409, meta[relay.Constant][23] /* ty=Tensor[(2, 120), float32] */, %410, %var_8545)
}

def @func_10247() -> (Tensor[(8, 12, 11), int32], Tensor[(60), int64], Tensor[(2, 6, 5), int64]) {
  %411 = @func_6753() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
  %412 = %411.1;
  %413 = cast(%412, dtype="int64") /* ty=Tensor[(60), int64] */;
  %414 = cast(%412, dtype="int64") /* ty=Tensor[(60), int64] */;
  %415 = reshape(%413, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
  %416 = reshape(%414, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
  %417 = @func_125(%415, %416) /* ty=(Tensor[(2, 6, 5), int64],) */;
  %418 = @func_5665() /* ty=Tensor[(8, 12, 11), int32] */;
  %419 = %417.0;
  (%418, %412, %419)
}

def @func_8361() -> (Tensor[(60), int64],) {
  %420 = @func_3736() /* ty=(Tensor[(12, 5, 9), float32], Tensor[(420), float64], Tensor[(60), int64], Tensor[(2, 6, 5), int64], Tensor[(420), float64]) */;
  %421 = %420.2;
  (%421,)
}

def @func_4805() -> Tensor[(5, 7, 9), uint16] {
  %422 = cast(meta[relay.Constant][25] /* ty=Tensor[(5, 7, 9), uint16] */, dtype="uint16") /* ty=Tensor[(5, 7, 9), uint16] */;
  %423 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(5, 7, 9), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %424 = cast(meta[relay.Constant][24] /* ty=Tensor[(5, 7, 9), uint16] */, dtype="uint16") /* ty=Tensor[(5, 7, 9), uint16] */;
  %425 = dyn.reshape(%422, %423, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  minimum(%424, %425) /* ty=Tensor[(5, 7, 9), uint16] */
}

def @func_11205() -> (Tensor[(60), int64], Tensor[(60), int64]) {
  %426 = @func_9003() /* ty=Tensor[(60), int64] */;
  %427 = @func_1915() /* ty=Tensor[(60), int64] */;
  (%426, %427)
}

def @func_1428() -> (Tensor[(60), int64], Tensor[(12, 5, 9), float64]) {
  %428 = @func_1037() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(2, 6, 5), int64], Tensor[(60), int64]) */;
  %429 = @func_1206() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(60), int64]) */;
  %430 = %428.2;
  %431 = %429.0;
  (%430, %431)
}

def @func_2023(%var_2012: Tensor[(630), float32]) -> (Tensor[(60), int64], Tensor[(11, 7, 1), float64], Tensor[(77), float64], Tensor[(60), int64], Tensor[(420), float64], Tensor[(10, 42), float64], Tensor[(630), float32]) {
  %432 = @func_1428() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
  %433 = cast(meta[relay.Constant][26] /* ty=Tensor[(77), float64] */, dtype="float64") /* ty=Tensor[(77), float64] */;
  %434 = reshape(%433, newshape=[11, 7, 1]) /* ty=Tensor[(11, 7, 1), float64] */;
  %435 = cast(meta[relay.Constant][27] /* ty=Tensor[(10, 42), float64] */, dtype="float64") /* ty=Tensor[(10, 42), float64] */;
  %436 = cast(%var_2012, dtype="float32") /* ty=Tensor[(630), float32] */;
  %437 = reshape(%435, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %438 = reshape(%436, newshape=[630, 1]) /* ty=Tensor[(630, 1), float32] */;
  %439 = @func_1715(%437, %438) /* ty=(Tensor[(12, 5, 9), float64], Tensor[(15, 4), int64], Tensor[(420), float64], Tensor[(1408), float32], Tensor[(?, 9, 10), bool], Tensor[(630, 1), float32]) */;
  %440 = %432.0;
  %441 = @func_1455(%434) /* ty=Tensor[(11, 7, 1), float64] */;
  %442 = @func_1915() /* ty=Tensor[(60), int64] */;
  %443 = %439.2;
  (%440, %441, meta[relay.Constant][26] /* ty=Tensor[(77), float64] */, %442, %443, meta[relay.Constant][27] /* ty=Tensor[(10, 42), float64] */, %var_2012)
}

def @func_4700(%var_4682: Tensor[(1408), float32]) -> (Tensor[(60), int64], Tensor[(15, 4), int64], Tensor[(1408), float32], Tensor[(60), int64]) {
  %444 = cast(%var_4682, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %445 = reshape(%444, newshape=[1408]) /* ty=Tensor[(1408), float32] */;
  %446 = @func_3000(%445) /* ty=(Tensor[(60), int64], Tensor[(15, 4), int64], Tensor[(5, 84), float64], Tensor[(1408), float32]) */;
  %447 = @func_1511() /* ty=Tensor[(60), int64] */;
  %448 = %446.1;
  %449 = @func_2907() /* ty=Tensor[(60), int64] */;
  (%447, %448, %var_4682, %449)
}

def @func_9891(%var_9875: Tensor[(8, 3, 1), uint32], %var_9876: Tensor[(8, 3, 6), uint32]) -> (Tensor[(8, 3, 6), bool], Tensor[(8, 3, 6), float32], Tensor[(60), int64]) {
  %450 = cast(%var_9875, dtype="bool") /* ty=Tensor[(8, 3, 1), bool] */;
  %451 = cast(%var_9876, dtype="bool") /* ty=Tensor[(8, 3, 6), bool] */;
  %452 = cast(%var_9876, dtype="float32") /* ty=Tensor[(8, 3, 6), float32] */;
  %453 = @func_4457() /* ty=(Tensor[(60), int64],) */;
  %454 = less(%450, %451) /* ty=Tensor[(8, 3, 6), bool] */;
  %455 = acosh(%452) /* ty=Tensor[(8, 3, 6), float32] */;
  %456 = %453.0;
  (%454, %455, %456)
}

def @func_2860() -> Tensor[(60), int64] {
  %457 = @func_1037() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(2, 6, 5), int64], Tensor[(60), int64]) */;
  %457.2
}

def @func_6865() -> Tensor[(60), int64] {
  %458 = @func_3888() /* ty=(Tensor[(60), int64],) */;
  %458.0
}

def @func_4837(%var_4835: Tensor[(420), float64]) -> (Tensor[(16, 13, 5), float64], Tensor[(1408), float32], Tensor[(432), int64], Tensor[(420), float64]) {
  %459 = cast(meta[relay.Constant][28] /* ty=Tensor[(16, 13, 5), float64] */, dtype="float64") /* ty=Tensor[(16, 13, 5), float64] */;
  %460 = cast(meta[relay.Constant][29] /* ty=Tensor[(432), int64] */, dtype="int64") /* ty=Tensor[(432), int64] */;
  %461 = cast(meta[relay.Constant][29] /* ty=Tensor[(432), int64] */, dtype="int64") /* ty=Tensor[(432), int64] */;
  %462 = cast(%var_4835, dtype="float64") /* ty=Tensor[(420), float64] */;
  %463 = reshape(%460, newshape=[9, 12, 4]) /* ty=Tensor[(9, 12, 4), int64] */;
  %464 = reshape(%461, newshape=[9, 12, 4]) /* ty=Tensor[(9, 12, 4), int64] */;
  %465 = reshape(%462, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %466 = @func_970(%463, %464, %465) /* ty=(Tensor[(9, 12, 4), int64], Tensor[(1408), float32], Tensor[(2, 6, 5), int64], Tensor[(420), float64], Tensor[(8, 16, 11), float32]) */;
  %467 = cosh(%459) /* ty=Tensor[(16, 13, 5), float64] */;
  %468 = %466.1;
  (%467, %468, meta[relay.Constant][29] /* ty=Tensor[(432), int64] */, %var_4835)
}

def @func_5695() -> (Tensor[(70, 9), float64], Tensor[(12, 5, 9), uint64], Tensor[(1408), float32], Tensor[(1408), float32]) {
  %469 = @func_3945() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float32], Tensor[(70, 9), float32]) */;
  %470 = %469.2;
  %471 = cast(%470, dtype="float64") /* ty=Tensor[(70, 9), float64] */;
  %472 = @func_5448() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), uint64]) */;
  %473 = cast(meta[relay.Constant][30] /* ty=Tensor[(1408), float32] */, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %474 = reshape(%473, newshape=[1408]) /* ty=Tensor[(1408), float32] */;
  %475 = @func_4374(%474) /* ty=(Tensor[(60), float32], Tensor[(1408), float32], Tensor[(1408), float32]) */;
  %476 = erf(%471) /* ty=Tensor[(70, 9), float64] */;
  %477 = %472.2;
  %478 = %475.2;
  (%476, %477, %478, meta[relay.Constant][30] /* ty=Tensor[(1408), float32] */)
}

def @func_4225() -> (Tensor[(12, 5, 9), float64], Tensor[(8, 12, 11), float64], Tensor[(8, 12, 11), int32]) {
  %479 = @func_3647() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(60), int64]) */;
  %480 = cast(meta[relay.Constant][31] /* ty=Tensor[(8, 12, 11), float64] */, dtype="float64") /* ty=Tensor[(8, 12, 11), float64] */;
  %481 = cosh(%480) /* ty=Tensor[(8, 12, 11), float64] */;
  %482 = cast(%481, dtype="float64") /* ty=Tensor[(8, 12, 11), float64] */;
  %483 = cast(meta[relay.Constant][31] /* ty=Tensor[(8, 12, 11), float64] */, dtype="int32") /* ty=Tensor[(8, 12, 11), int32] */;
  %484 = shape_of(%481, dtype="int32") /* ty=Tensor[(3), int32] */;
  %485 = cast(%481, dtype="int32") /* ty=Tensor[(8, 12, 11), int32] */;
  %486 = dyn.reshape(%483, %484, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %487 = %479.0;
  %488 = sqrt(%482) /* ty=Tensor[(8, 12, 11), float64] */;
  %489 = bitwise_xor(%485, %486) /* ty=Tensor[(8, 12, 11), int32] */;
  (%487, %488, %489)
}

def @func_1874() -> (Tensor[(12, 5, 9), float64], Tensor[(420), float64], Tensor[(420), float64], Tensor[(1, 630), float32]) {
  %490 = @func_1206() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(60), int64]) */;
  %491 = cast(meta[relay.Constant][32] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %492 = cast(meta[relay.Constant][33] /* ty=Tensor[(1, 630), float32] */, dtype="float32") /* ty=Tensor[(1, 630), float32] */;
  %493 = reshape(%491, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %494 = reshape(%492, newshape=[630, 1]) /* ty=Tensor[(630, 1), float32] */;
  %495 = @func_1715(%493, %494) /* ty=(Tensor[(12, 5, 9), float64], Tensor[(15, 4), int64], Tensor[(420), float64], Tensor[(1408), float32], Tensor[(?, 9, 10), bool], Tensor[(630, 1), float32]) */;
  %496 = %490.1;
  %497 = %495.2;
  (%496, %497, meta[relay.Constant][32] /* ty=Tensor[(420), float64] */, meta[relay.Constant][33] /* ty=Tensor[(1, 630), float32] */)
}

def @func_6180(%var_6173: Tensor[(70, 9), float32]) -> (Tensor[(60), int64], Tensor[(630), float32], Tensor[(70, 9), float32]) {
  %498 = @func_3325() /* ty=(Tensor[(60), int64],) */;
  %499 = cast(%var_6173, dtype="float32") /* ty=Tensor[(70, 9), float32] */;
  %500 = reshape(%499, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %501 = @func_2023(%500) /* ty=(Tensor[(60), int64], Tensor[(11, 7, 1), float64], Tensor[(77), float64], Tensor[(60), int64], Tensor[(420), float64], Tensor[(10, 42), float64], Tensor[(630), float32]) */;
  %502 = %498.0;
  %503 = %501.6;
  (%502, %503, %var_6173)
}

def @func_7838(%var_7820: Tensor[(10, 63), float32], %var_7832: Tensor[(1408), float32]) -> (Tensor[(60), int64], Tensor[(12, 5, 9), float32], Tensor[(420), float64], Tensor[(10, 63), float32], Tensor[(8, 16, 11), bool], Tensor[(1408), float32]) {
  %504 = @func_7532() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(3, 2), float64], Tensor[(6), float64]) */;
  %505 = @func_3945() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float32], Tensor[(70, 9), float32]) */;
  %506 = cast(%var_7820, dtype="float32") /* ty=Tensor[(10, 63), float32] */;
  %507 = reshape(%506, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %508 = @func_3876(%507) /* ty=(Tensor[(60), int64], Tensor[(420), float64], Tensor[(630), float32]) */;
  %509 = cast(%var_7832, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %510 = cast(%var_7832, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %511 = reshape(%509, newshape=[8, 16, 11]) /* ty=Tensor[(8, 16, 11), float32] */;
  %512 = reshape(%510, newshape=[8, 16, 11]) /* ty=Tensor[(8, 16, 11), float32] */;
  %513 = %504.0;
  %514 = %505.1;
  %515 = %508.1;
  %516 = @func_92(%511, %512) /* ty=Tensor[(8, 16, 11), bool] */;
  (%513, %514, %515, %var_7820, %516, %var_7832)
}

def @func_8624() -> (Tensor[(60), int64], Tensor[(70, 9), float64]) {
  %517 = @func_3945() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float32], Tensor[(70, 9), float32]) */;
  %518 = %517.2;
  %519 = cast(%518, dtype="float32") /* ty=Tensor[(70, 9), float32] */;
  %520 = reshape(%519, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %521 = @func_3876(%520) /* ty=(Tensor[(60), int64], Tensor[(420), float64], Tensor[(630), float32]) */;
  %522 = cast(%518, dtype="float64") /* ty=Tensor[(70, 9), float64] */;
  %523 = exp(%522) /* ty=Tensor[(70, 9), float64] */;
  %524 = cast(%518, dtype="float64") /* ty=Tensor[(70, 9), float64] */;
  %525 = shape_of(%523, dtype="int32") /* ty=Tensor[(2), int32] */;
  %526 = cast(%523, dtype="float64") /* ty=Tensor[(70, 9), float64] */;
  %527 = dyn.reshape(%524, %525, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %528 = maximum(%526, %527) /* ty=Tensor[(70, 9), float64] */;
  %529 = cast(%528, dtype="float64") /* ty=Tensor[(70, 9), float64] */;
  %530 = %521.0;
  %531 = asinh(%529) /* ty=Tensor[(70, 9), float64] */;
  (%530, %531)
}

def @func_1792() -> (Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64]) {
  %532 = @func_1206() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(60), int64]) */;
  %533 = %532.0;
  %534 = @func_874() /* ty=Tensor[(12, 5, 9), float64] */;
  (%533, %534)
}

def @func_9379() -> (Tensor[(12, 5, 9), float64],) {
  %535 = @func_4639() /* ty=Tensor[(12, 5, 9), float64] */;
  (%535,)
}

def @func_4294(%var_4280: Tensor[(4, 6, 7), int8], %var_4281: Tensor[(4, 6, 7), int8]) -> (Tensor[(4, 6, 7), int8], Tensor[(12, 5, 9), float32], Tensor[(630), float32]) {
  %536 = cast(%var_4281, dtype="int8") /* ty=Tensor[(4, 6, 7), int8] */;
  %537 = shape_of(%var_4280, dtype="int32") /* ty=Tensor[(3), int32] */;
  %538 = cast(%var_4280, dtype="int8") /* ty=Tensor[(4, 6, 7), int8] */;
  %539 = dyn.reshape(%536, %537, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %540 = cast(meta[relay.Constant][34] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %541 = reshape(%540, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %542 = @func_2187(%541) /* ty=(Tensor[(12, 5, 9), float32], Tensor[(420), float64], Tensor[(90), float32], Tensor[(630), float32], Tensor[(420), float64], Tensor[(12, 5, 9), float32]) */;
  %543 = logical_xor(%538, %539) /* ty=Tensor[(4, 6, 7), int8] */;
  %544 = %542.0;
  (%543, %544, meta[relay.Constant][34] /* ty=Tensor[(630), float32] */)
}

def @func_9071(%var_9035: Tensor[(14, 14, 3), uint16], %var_9036: Tensor[(14, 14, 3), uint16]) -> (Tensor[(14, 14, 3), bool], Tensor[(14, 14, 3), float32], Tensor[(12, 5, 9), float64]) {
  %545 = cast(%var_9036, dtype="bool") /* ty=Tensor[(14, 14, 3), bool] */;
  %546 = shape_of(%var_9035, dtype="int32") /* ty=Tensor[(3), int32] */;
  %547 = cast(%var_9035, dtype="bool") /* ty=Tensor[(14, 14, 3), bool] */;
  %548 = dyn.reshape(%545, %546, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %549 = cast(%var_9036, dtype="float32") /* ty=Tensor[(14, 14, 3), float32] */;
  %550 = greater_equal(%547, %548) /* ty=Tensor[(14, 14, 3), bool] */;
  %551 = asinh(%549) /* ty=Tensor[(14, 14, 3), float32] */;
  %552 = @func_4639() /* ty=Tensor[(12, 5, 9), float64] */;
  (%550, %551, %552)
}

def @func_3269() -> Tensor[(60), int64] {
  @func_1511() /* ty=Tensor[(60), int64] */
}

def @func_4787() -> (Tensor[(420), float64], Tensor[(2, 6, 5), int64], Tensor[(1408), float32], Tensor[(60), int64]) {
  %553 = @func_4190() /* ty=(Tensor[(420), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
  %554 = %553.0;
  %555 = cast(%554, dtype="float64") /* ty=Tensor[(420), float64] */;
  %556 = cast(meta[relay.Constant][35] /* ty=Tensor[(1408), float32] */, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %557 = reshape(%555, newshape=[12, 5, 7]) /* ty=Tensor[(12, 5, 7), float64] */;
  %558 = reshape(%556, newshape=[1408]) /* ty=Tensor[(1408), float32] */;
  %559 = @func_775(%557, %558) /* ty=(Tensor[(12, 5, 7), float64], Tensor[(2, 6, 5), int64], Tensor[(15, 4), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(8, 16, 11), bool], Tensor[(1408), float32]) */;
  %560 = %559.4;
  %561 = @func_3364() /* ty=Tensor[(60), int64] */;
  (%554, %560, meta[relay.Constant][35] /* ty=Tensor[(1408), float32] */, %561)
}

def @func_9935(%var_9923: Tensor[(8, 9), float32]) -> (Tensor[(8, 9), float32], Tensor[(12, 5, 9), float64]) {
  %562 = cast(%var_9923, dtype="float32") /* ty=Tensor[(8, 9), float32] */;
  %563 = @func_2250() /* ty=(Tensor[(12, 5, 9), float64],) */;
  %564 = log2(%562) /* ty=Tensor[(8, 9), float32] */;
  %565 = %563.0;
  (%564, %565)
}

def @func_9003() -> Tensor[(60), int64] {
  @func_6865() /* ty=Tensor[(60), int64] */
}

def @func_10198() -> (Tensor[(60), int64], Tensor[(11, 16, 6), float64], Tensor[(1056), float32]) {
  %566 = cast(meta[relay.Constant][36] /* ty=Tensor[(1056), float32] */, dtype="float32") /* ty=Tensor[(1056), float32] */;
  %567 = reshape(%566, newshape=[11, 16, 6]) /* ty=Tensor[(11, 16, 6), float32] */;
  %568 = @func_9358() /* ty=Tensor[(60), int64] */;
  %569 = @func_5993(%567) /* ty=Tensor[(11, 16, 6), float64] */;
  (%568, %569, meta[relay.Constant][36] /* ty=Tensor[(1056), float32] */)
}

def @func_970(%var_952: Tensor[(9, 12, 4), int64], %var_953: Tensor[(9, 12, 4), int64], %var_965: Tensor[(420), float64]) -> (Tensor[(9, 12, 4), int64], Tensor[(1408), float32], Tensor[(2, 6, 5), int64], Tensor[(420), float64], Tensor[(8, 16, 11), float32]) {
  %570 = cast(%var_953, dtype="int64") /* ty=Tensor[(9, 12, 4), int64] */;
  %571 = shape_of(%var_952, dtype="int32") /* ty=Tensor[(3), int32] */;
  %572 = cast(%var_952, dtype="int64") /* ty=Tensor[(9, 12, 4), int64] */;
  %573 = dyn.reshape(%570, %571, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %574 = cast(%var_965, dtype="float64") /* ty=Tensor[(420), float64] */;
  %575 = cast(meta[relay.Constant][37] /* ty=Tensor[(1408), float32] */, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %576 = reshape(%574, newshape=[12, 5, 7]) /* ty=Tensor[(12, 5, 7), float64] */;
  %577 = reshape(%575, newshape=[1408]) /* ty=Tensor[(1408), float32] */;
  %578 = @func_775(%576, %577) /* ty=(Tensor[(12, 5, 7), float64], Tensor[(2, 6, 5), int64], Tensor[(15, 4), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(8, 16, 11), bool], Tensor[(1408), float32]) */;
  %579 = cast(meta[relay.Constant][37] /* ty=Tensor[(1408), float32] */, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %580 = cast(meta[relay.Constant][37] /* ty=Tensor[(1408), float32] */, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %581 = reshape(%579, newshape=[8, 16, 11]) /* ty=Tensor[(8, 16, 11), float32] */;
  %582 = reshape(%580, newshape=[8, 16, 11]) /* ty=Tensor[(8, 16, 11), float32] */;
  %583 = @func_92(%581, %582) /* ty=Tensor[(8, 16, 11), bool] */;
  %584 = cast(%583, dtype="float32") /* ty=Tensor[(8, 16, 11), float32] */;
  %585 = maximum(%572, %573) /* ty=Tensor[(9, 12, 4), int64] */;
  %586 = %578.6;
  %587 = sqrt(%584) /* ty=Tensor[(8, 16, 11), float32] */;
  (%585, meta[relay.Constant][37] /* ty=Tensor[(1408), float32] */, %586, %var_965, %587)
}

def @func_8469() -> (Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(60), int64], Tensor[(12, 5, 9), float32]) {
  %588 = @func_4190() /* ty=(Tensor[(420), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
  %589 = @func_2798() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(70, 6), float64], Tensor[(8, 16, 11), bool], Tensor[(1408), float32], Tensor[(12, 5, 9), float64]) */;
  %590 = @func_3888() /* ty=(Tensor[(60), int64],) */;
  %591 = @func_3945() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float32], Tensor[(70, 9), float32]) */;
  %592 = %588.2;
  %593 = %589.1;
  %594 = %590.0;
  %595 = %591.1;
  (%592, %593, %594, %595)
}

def @func_3364() -> Tensor[(60), int64] {
  @func_1511() /* ty=Tensor[(60), int64] */
}

def @func_6943() -> (Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(6), float64]) {
  %596 = @func_6753() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
  %597 = @func_5242() /* ty=(Tensor[(3, 2), float64], Tensor[(6), float64], Tensor[(60), int64], Tensor[(70, 9), float32], Tensor[(12, 5, 9), float64]) */;
  %598 = @func_5168() /* ty=Tensor[(60), int64] */;
  %599 = %596.0;
  %600 = %597.1;
  (%598, %599, %600)
}

def @func_8994() -> (Tensor[(60), int64], Tensor[(12, 5, 9), float32], Tensor[(12, 5, 9), float64]) {
  %601 = @func_5661() /* ty=(Tensor[(60), int64],) */;
  %602 = @func_3945() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float32], Tensor[(70, 9), float32]) */;
  %603 = %602.0;
  %604 = cast(%603, dtype="float32") /* ty=Tensor[(12, 5, 9), float32] */;
  %605 = @func_4018() /* ty=(Tensor[(12, 5, 9), bool], Tensor[(12, 5, 9), float64]) */;
  %606 = %601.0;
  %607 = sin(%604) /* ty=Tensor[(12, 5, 9), float32] */;
  %608 = %605.1;
  (%606, %607, %608)
}

def @func_6549(%var_6507: Tensor[(1408), float32], %var_6520: Tensor[(1408), float32]) -> (Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(60), float32], Tensor[(1408), uint8], Tensor[(60), int64], Tensor[(60), int64], Tensor[(12, 5, 9), float64]) {
  %609 = @func_6411() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
  %610 = cast(%var_6507, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %611 = reshape(%610, newshape=[1408]) /* ty=Tensor[(1408), float32] */;
  %612 = @func_4374(%611) /* ty=(Tensor[(60), float32], Tensor[(1408), float32], Tensor[(1408), float32]) */;
  %613 = cast(%var_6520, dtype="uint8") /* ty=Tensor[(1408), uint8] */;
  %614 = shape_of(%var_6507, dtype="int32") /* ty=Tensor[(1), int32] */;
  %615 = cast(%var_6507, dtype="uint8") /* ty=Tensor[(1408), uint8] */;
  %616 = dyn.reshape(%613, %614, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %617 = %609.1;
  %618 = cast(%617, dtype="float64") /* ty=Tensor[(12, 5, 9), float64] */;
  %619 = reshape(%618, newshape=[12, 5, 9]) /* ty=Tensor[(12, 5, 9), float64] */;
  %620 = @func_3086(%619) /* ty=(Tensor[(12, 5, 9), uint8], Tensor[(60), int64]) */;
  %621 = @func_1428() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
  %622 = @func_2545() /* ty=Tensor[(60), int64] */;
  %623 = @func_5475() /* ty=Tensor[(60), int64] */;
  %624 = @func_5061() /* ty=Tensor[(12, 5, 9), float64] */;
  %625 = @func_4604() /* ty=Tensor[(60), int64] */;
  %626 = %612.0;
  %627 = add(%615, %616) /* ty=Tensor[(1408), uint8] */;
  %628 = %620.1;
  %629 = @func_1511() /* ty=Tensor[(60), int64] */;
  %630 = %621.1;
  (%622, %617, %623, %624, %625, %626, %627, %628, %629, %630)
}

def @func_8710() -> (Tensor[(60), int64],) {
  %631 = @func_5893() /* ty=(Tensor[(5, 7, 9), uint16], Tensor[(60), int64]) */;
  %632 = %631.1;
  (%632,)
}

def @func_3876(%var_3872: Tensor[(630), float32]) -> (Tensor[(60), int64], Tensor[(420), float64], Tensor[(630), float32]) {
  %633 = cast(%var_3872, dtype="float32") /* ty=Tensor[(630), float32] */;
  %634 = reshape(%633, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %635 = @func_2023(%634) /* ty=(Tensor[(60), int64], Tensor[(11, 7, 1), float64], Tensor[(77), float64], Tensor[(60), int64], Tensor[(420), float64], Tensor[(10, 42), float64], Tensor[(630), float32]) */;
  %636 = @func_1915() /* ty=Tensor[(60), int64] */;
  %637 = %635.4;
  (%636, %637, %var_3872)
}

def @func_11180() -> (Tensor[(60), int64], Tensor[(8, 12, 11), int32], Tensor[(12, 5, 9), float64]) {
  %638 = @func_6602() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
  %639 = @func_4225() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(8, 12, 11), float64], Tensor[(8, 12, 11), int32]) */;
  %640 = @func_4018() /* ty=(Tensor[(12, 5, 9), bool], Tensor[(12, 5, 9), float64]) */;
  %641 = %638.0;
  %642 = %639.2;
  %643 = %640.1;
  (%641, %642, %643)
}

def @func_3312() -> (Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(420), float64], Tensor[(12, 5, 9), float64]) {
  %644 = @func_1792() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64]) */;
  %645 = cast(meta[relay.Constant][38] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %646 = reshape(%645, newshape=[210, 2]) /* ty=Tensor[(210, 2), float64] */;
  %647 = @func_2411(%646) /* ty=(Tensor[(60), int64], Tensor[(420), float64], Tensor[(210, 2), float64]) */;
  %648 = %644.0;
  %649 = %647.0;
  %650 = @func_2220() /* ty=Tensor[(12, 5, 9), float64] */;
  (%648, %649, meta[relay.Constant][38] /* ty=Tensor[(420), float64] */, %650)
}

def @func_7261(%var_7228: Tensor[(156), float64], %var_7252: Tensor[(420), float64], %var_7256: Tensor[(528, 2), float32]) -> (Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(9, 60), float64], Tensor[(156), float64], Tensor[(60), int64], Tensor[(60), int64], Tensor[(12, 5, 7), float64], Tensor[(420), float64], Tensor[(352, 4), float32], Tensor[(11, 16, 6), float64], Tensor[(528, 2), float32]) {
  %651 = @func_1774() /* ty=(Tensor[(12, 5, 9), float64],) */;
  %652 = cast(%var_7228, dtype="float64") /* ty=Tensor[(156), float64] */;
  %653 = %651.0;
  %654 = cast(%653, dtype="float64") /* ty=Tensor[(12, 5, 9), float64] */;
  %655 = reshape(%652, newshape=[6, 2, 13]) /* ty=Tensor[(6, 2, 13), float64] */;
  %656 = reshape(%654, newshape=[9, 60]) /* ty=Tensor[(9, 60), float64] */;
  %657 = @func_6986(%655, %656) /* ty=(Tensor[(6, 2, 13), float64], Tensor[(12, 5, 9), bool], Tensor[(9, 60), float64]) */;
  %658 = @func_5772() /* ty=(Tensor[(6), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
  %659 = cast(%653, dtype="float64") /* ty=Tensor[(12, 5, 9), float64] */;
  %660 = reshape(%659, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %661 = @func_3429(%660) /* ty=(Tensor[(60), int64], Tensor[(60), int64], Tensor[(540), float64]) */;
  %662 = cast(%var_7252, dtype="float64") /* ty=Tensor[(420), float64] */;
  %663 = cast(meta[relay.Constant][39] /* ty=Tensor[(352, 4), float32] */, dtype="float32") /* ty=Tensor[(352, 4), float32] */;
  %664 = reshape(%662, newshape=[12, 5, 7]) /* ty=Tensor[(12, 5, 7), float64] */;
  %665 = reshape(%663, newshape=[1408]) /* ty=Tensor[(1408), float32] */;
  %666 = @func_775(%664, %665) /* ty=(Tensor[(12, 5, 7), float64], Tensor[(2, 6, 5), int64], Tensor[(15, 4), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(8, 16, 11), bool], Tensor[(1408), float32]) */;
  %667 = cast(%var_7256, dtype="float32") /* ty=Tensor[(528, 2), float32] */;
  %668 = reshape(%667, newshape=[11, 16, 6]) /* ty=Tensor[(11, 16, 6), float32] */;
  %669 = @func_3269() /* ty=Tensor[(60), int64] */;
  %670 = %657.2;
  %671 = %658.1;
  %672 = %661.0;
  %673 = %666.0;
  %674 = @func_5993(%668) /* ty=Tensor[(11, 16, 6), float64] */;
  (%653, %669, %670, %var_7228, %671, %672, %673, %var_7252, meta[relay.Constant][39] /* ty=Tensor[(352, 4), float32] */, %674, %var_7256)
}

def @func_7704(%var_7698: Tensor[(1, 10, 11), float32]) -> (Tensor[(1, 10, 11), float32],) {
  %675 = cast(%var_7698, dtype="float32") /* ty=Tensor[(1, 10, 11), float32] */;
  %676 = exp(%675) /* ty=Tensor[(1, 10, 11), float32] */;
  (%676,)
}

def @func_4018() -> (Tensor[(12, 5, 9), bool], Tensor[(12, 5, 9), float64]) {
  %677 = @func_2798() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(70, 6), float64], Tensor[(8, 16, 11), bool], Tensor[(1408), float32], Tensor[(12, 5, 9), float64]) */;
  %678 = %677.6;
  %679 = cast(meta[relay.Constant][40] /* ty=Tensor[(12, 5, 9), float64] */, dtype="bool") /* ty=Tensor[(12, 5, 9), bool] */;
  %680 = shape_of(%678, dtype="int32") /* ty=Tensor[(3), int32] */;
  %681 = cast(%678, dtype="bool") /* ty=Tensor[(12, 5, 9), bool] */;
  %682 = dyn.reshape(%679, %680, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %683 = @func_3471() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), bool]) */;
  %684 = equal(%681, %682) /* ty=Tensor[(12, 5, 9), bool] */;
  %685 = %683.0;
  (%684, %685)
}

def @func_7771() -> (Tensor[(12, 5, 9), float64],) {
  %686 = @func_6411() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
  %687 = %686.1;
  (%687,)
}

def @func_2632(%var_2595: Tensor[(3, 16, 2), uint8]) -> (Tensor[(11, 7, 1), float64], Tensor[(630), float32], Tensor[(3, 16, 2), bool], Tensor[(420), float64], Tensor[(420), float64], Tensor[(1408, 1), float32]) {
  %688 = cast(meta[relay.Constant][41] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %689 = reshape(%688, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %690 = @func_2023(%689) /* ty=(Tensor[(60), int64], Tensor[(11, 7, 1), float64], Tensor[(77), float64], Tensor[(60), int64], Tensor[(420), float64], Tensor[(10, 42), float64], Tensor[(630), float32]) */;
  %691 = cast(%var_2595, dtype="float32") /* ty=Tensor[(3, 16, 2), float32] */;
  %692 = exp(%691) /* ty=Tensor[(3, 16, 2), float32] */;
  %693 = cast(meta[relay.Constant][42] /* ty=Tensor[(3, 16, 1), uint8] */, dtype="uint8") /* ty=Tensor[(3, 16, 1), uint8] */;
  %694 = cast(%var_2595, dtype="uint8") /* ty=Tensor[(3, 16, 2), uint8] */;
  %695 = bitwise_or(%693, %694) /* ty=Tensor[(3, 16, 2), uint8] */;
  %696 = cast(%695, dtype="bool") /* ty=Tensor[(3, 16, 2), bool] */;
  %697 = shape_of(%692, dtype="int32") /* ty=Tensor[(3), int32] */;
  %698 = cast(%692, dtype="bool") /* ty=Tensor[(3, 16, 2), bool] */;
  %699 = dyn.reshape(%696, %697, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %700 = cast(meta[relay.Constant][41] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %701 = cast(meta[relay.Constant][43] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %702 = cast(meta[relay.Constant][44] /* ty=Tensor[(1408, 1), float32] */, dtype="float32") /* ty=Tensor[(1408, 1), float32] */;
  %703 = reshape(%700, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %704 = reshape(%701, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %705 = reshape(%702, newshape=[1408, 1]) /* ty=Tensor[(1408, 1), float32] */;
  %706 = @func_1590(%703, %704, %705) /* ty=(Tensor[(60), int64], Tensor[(630), float32], Tensor[(420), float64], Tensor[(?, 9, 10), bool], Tensor[(8, 16, 11), bool], Tensor[(1408, 1), float32], Tensor[(8, 16, 11), bool]) */;
  %707 = %690.1;
  %708 = less(%698, %699) /* ty=Tensor[(3, 16, 2), bool] */;
  %709 = %706.2;
  (%707, meta[relay.Constant][41] /* ty=Tensor[(630), float32] */, %708, %709, meta[relay.Constant][43] /* ty=Tensor[(420), float64] */, meta[relay.Constant][44] /* ty=Tensor[(1408, 1), float32] */)
}

def @func_6109() -> (Tensor[(6), float64], Tensor[(8, 16, 11), bool], Tensor[(1408), float64]) {
  %710 = @func_5772() /* ty=(Tensor[(6), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
  %711 = cast(meta[relay.Constant][45] /* ty=Tensor[(1408), float32] */, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %712 = cast(meta[relay.Constant][45] /* ty=Tensor[(1408), float32] */, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %713 = reshape(%711, newshape=[8, 16, 11]) /* ty=Tensor[(8, 16, 11), float32] */;
  %714 = reshape(%712, newshape=[8, 16, 11]) /* ty=Tensor[(8, 16, 11), float32] */;
  %715 = cast(meta[relay.Constant][45] /* ty=Tensor[(1408), float32] */, dtype="float64") /* ty=Tensor[(1408), float64] */;
  %716 = log(%715) /* ty=Tensor[(1408), float64] */;
  %717 = cast(%716, dtype="float64") /* ty=Tensor[(1408), float64] */;
  %718 = %710.0;
  %719 = @func_92(%713, %714) /* ty=Tensor[(8, 16, 11), bool] */;
  %720 = asinh(%717) /* ty=Tensor[(1408), float64] */;
  (%718, %719, %720)
}

def @func_9390() -> Tensor[(12, 5, 9), float32] {
  %721 = @func_3945() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float32], Tensor[(70, 9), float32]) */;
  %721.1
}

def @func_9523() -> (Tensor[(12, 5, 9), bool],) {
  %722 = @func_4318() /* ty=(Tensor[(12, 5, 9), bool],) */;
  %723 = %722.0;
  (%723,)
}

def @func_4190() -> (Tensor[(420), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64]) {
  %724 = @func_1874() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(420), float64], Tensor[(420), float64], Tensor[(1, 630), float32]) */;
  %725 = @func_1428() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
  %726 = @func_1774() /* ty=(Tensor[(12, 5, 9), float64],) */;
  %727 = %726.0;
  %728 = cast(%727, dtype="float64") /* ty=Tensor[(12, 5, 9), float64] */;
  %729 = rsqrt(%728) /* ty=Tensor[(12, 5, 9), float64] */;
  %730 = cast(%729, dtype="float64") /* ty=Tensor[(12, 5, 9), float64] */;
  %731 = %724.1;
  %732 = %725.0;
  %733 = log10(%730) /* ty=Tensor[(12, 5, 9), float64] */;
  (%731, %732, %733)
}

def @func_10078() -> (Tensor[(12, 5, 9), float64],) {
  %734 = @func_7162() /* ty=(Tensor[(12, 5, 9), float64],) */;
  %735 = %734.0;
  (%735,)
}

def @func_4639() -> Tensor[(12, 5, 9), float64] {
  %736 = @func_2718() /* ty=(Tensor[(12, 5, 9), float64],) */;
  %736.0
}

def @func_7573(%var_7565: Tensor[(12, 4, 8), float64]) -> (Tensor[(12, 4, 8), float64],) {
  %737 = cast(%var_7565, dtype="float64") /* ty=Tensor[(12, 4, 8), float64] */;
  %738 = log10(%737) /* ty=Tensor[(12, 4, 8), float64] */;
  (%738,)
}

def @func_5661() -> (Tensor[(60), int64],) {
  %739 = @func_1915() /* ty=Tensor[(60), int64] */;
  (%739,)
}

def @func_2274(%var_2265: Tensor[(12, 5, 9), float64]) -> (Tensor[(12, 5, 9), bool], Tensor[(12, 5, 9), float64]) {
  %740 = @func_1774() /* ty=(Tensor[(12, 5, 9), float64],) */;
  %741 = %740.0;
  %742 = cast(%var_2265, dtype="bool") /* ty=Tensor[(12, 5, 9), bool] */;
  %743 = shape_of(%741, dtype="int32") /* ty=Tensor[(3), int32] */;
  %744 = cast(%741, dtype="bool") /* ty=Tensor[(12, 5, 9), bool] */;
  %745 = dyn.reshape(%742, %743, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %746 = @func_2250() /* ty=(Tensor[(12, 5, 9), float64],) */;
  %747 = logical_and(%744, %745) /* ty=Tensor[(12, 5, 9), bool] */;
  %748 = %746.0;
  (%747, %748)
}

def @func_11326() -> (Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(60), int64]) {
  %749 = @func_8218() /* ty=(Tensor[(60), int64],) */;
  %750 = @func_3736() /* ty=(Tensor[(12, 5, 9), float32], Tensor[(420), float64], Tensor[(60), int64], Tensor[(2, 6, 5), int64], Tensor[(420), float64]) */;
  %751 = @func_874() /* ty=Tensor[(12, 5, 9), float64] */;
  %752 = %749.0;
  %753 = %750.2;
  (%751, %752, %753)
}

def @func_5905() -> (Tensor[(60), int64],) {
  %754 = @func_3269() /* ty=Tensor[(60), int64] */;
  (%754,)
}

def @func_1590(%var_1563: Tensor[(630), float32], %var_1564: Tensor[(420), float64], %var_1574: Tensor[(1408, 1), float32]) -> (Tensor[(60), int64], Tensor[(630), float32], Tensor[(420), float64], Tensor[(?, 9, 10), bool], Tensor[(8, 16, 11), bool], Tensor[(1408, 1), float32], Tensor[(8, 16, 11), bool]) {
  %755 = @func_1037() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(2, 6, 5), int64], Tensor[(60), int64]) */;
  %756 = cast(meta[relay.Constant][46] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %757 = cast(%var_1563, dtype="float32") /* ty=Tensor[(630), float32] */;
  %758 = cast(%var_1564, dtype="float64") /* ty=Tensor[(420), float64] */;
  %759 = reshape(%756, newshape=[1, 9, 10]) /* ty=Tensor[(1, 9, 10), float32] */;
  %760 = reshape(%757, newshape=[7, 9, 10]) /* ty=Tensor[(7, 9, 10), float32] */;
  %761 = reshape(%758, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %762 = @func_1349(%759, %760, %761) /* ty=(Tensor[(7, 9, 10), float64], Tensor[(1, 9, 10), float32], Tensor[(420), float64], Tensor[(420), float64]) */;
  %763 = %762.1;
  %764 = cast(meta[relay.Constant][46] /* ty=Tensor[(90), float32] */, dtype="bool") /* ty=Tensor[(90), bool] */;
  %765 = shape_of(%763, dtype="int32") /* ty=Tensor[(3), int32] */;
  %766 = cast(%763, dtype="bool") /* ty=Tensor[(1, 9, 10), bool] */;
  %767 = dyn.reshape(%764, %765, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %768 = cast(%var_1574, dtype="float32") /* ty=Tensor[(1408, 1), float32] */;
  %769 = cast(%var_1574, dtype="float32") /* ty=Tensor[(1408, 1), float32] */;
  %770 = reshape(%768, newshape=[8, 16, 11]) /* ty=Tensor[(8, 16, 11), float32] */;
  %771 = reshape(%769, newshape=[8, 16, 11]) /* ty=Tensor[(8, 16, 11), float32] */;
  %772 = @func_92(%770, %771) /* ty=Tensor[(8, 16, 11), bool] */;
  %773 = cast(%772, dtype="float32") /* ty=Tensor[(8, 16, 11), float32] */;
  %774 = cast(%var_1574, dtype="float32") /* ty=Tensor[(1408, 1), float32] */;
  %775 = reshape(%773, newshape=[8, 16, 11]) /* ty=Tensor[(8, 16, 11), float32] */;
  %776 = reshape(%774, newshape=[8, 16, 11]) /* ty=Tensor[(8, 16, 11), float32] */;
  %777 = %755.2;
  %778 = greater(%766, %767) /* ty=Tensor[(?, 9, 10), bool] */;
  %779 = @func_92(%775, %776) /* ty=Tensor[(8, 16, 11), bool] */;
  (%777, %var_1563, %var_1564, %778, %772, %var_1574, %779)
}

def @func_4096() -> (Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64]) {
  %780 = @func_1206() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(60), int64]) */;
  %781 = @func_2718() /* ty=(Tensor[(12, 5, 9), float64],) */;
  %782 = %780.2;
  %783 = @func_874() /* ty=Tensor[(12, 5, 9), float64] */;
  %784 = @func_874() /* ty=Tensor[(12, 5, 9), float64] */;
  %785 = %781.0;
  (%782, %783, %784, %785)
}

def @func_10792() -> (Tensor[(420), float64],) {
  %786 = @func_4190() /* ty=(Tensor[(420), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
  %787 = %786.0;
  (%787,)
}

def @func_8067() -> (Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float32], Tensor[(12, 5, 9), float64]) {
  %788 = @func_2718() /* ty=(Tensor[(12, 5, 9), float64],) */;
  %789 = @func_6279() /* ty=(Tensor[(12, 5, 9), float64],) */;
  %790 = %788.0;
  %791 = @func_1942() /* ty=Tensor[(12, 5, 9), float32] */;
  %792 = %789.0;
  (%790, %791, %792)
}

def @func_10680(%var_10664: Tensor[(12, 3, 5), float64]) -> (Tensor[(12, 3, 5), float64], Tensor[(8, 16, 11), bool], Tensor[(630), float32], Tensor[(1408), float32]) {
  %793 = cast(%var_10664, dtype="float64") /* ty=Tensor[(12, 3, 5), float64] */;
  %794 = cast(meta[relay.Constant][47] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %795 = cast(meta[relay.Constant][48] /* ty=Tensor[(1408), float32] */, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %796 = reshape(%794, newshape=[10, 63]) /* ty=Tensor[(10, 63), float32] */;
  %797 = reshape(%795, newshape=[1408]) /* ty=Tensor[(1408), float32] */;
  %798 = @func_7838(%796, %797) /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float32], Tensor[(420), float64], Tensor[(10, 63), float32], Tensor[(8, 16, 11), bool], Tensor[(1408), float32]) */;
  %799 = sinh(%793) /* ty=Tensor[(12, 3, 5), float64] */;
  %800 = %798.4;
  (%799, %800, meta[relay.Constant][47] /* ty=Tensor[(630), float32] */, meta[relay.Constant][48] /* ty=Tensor[(1408), float32] */)
}

def @func_5993(%var_5975: Tensor[(11, 16, 6), float32]) -> Tensor[(11, 16, 6), float64] {
  %801 = cast(%var_5975, dtype="float32") /* ty=Tensor[(11, 16, 6), float32] */;
  %802 = sin(%801) /* ty=Tensor[(11, 16, 6), float32] */;
  %803 = cast(%802, dtype="uint16") /* ty=Tensor[(11, 16, 6), uint16] */;
  %804 = shape_of(%var_5975, dtype="int32") /* ty=Tensor[(3), int32] */;
  %805 = cast(%var_5975, dtype="uint16") /* ty=Tensor[(11, 16, 6), uint16] */;
  %806 = dyn.reshape(%803, %804, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %807 = multiply(%805, %806) /* ty=Tensor[(11, 16, 6), uint16] */;
  %808 = cast(%807, dtype="float64") /* ty=Tensor[(11, 16, 6), float64] */;
  %809 = shape_of(%var_5975, dtype="int32") /* ty=Tensor[(3), int32] */;
  %810 = cast(%var_5975, dtype="float64") /* ty=Tensor[(11, 16, 6), float64] */;
  %811 = dyn.reshape(%808, %809, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%810, %811) /* ty=Tensor[(11, 16, 6), float64] */
}

def @func_3888() -> (Tensor[(60), int64],) {
  %812 = @func_2798() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(70, 6), float64], Tensor[(8, 16, 11), bool], Tensor[(1408), float32], Tensor[(12, 5, 9), float64]) */;
  %813 = %812.1;
  (%813,)
}

def @func_9716(%var_9659: Tensor[(60), int64]) -> (Tensor[(12, 5, 9), uint64], Tensor[(2, 6, 5), int64], Tensor[(60), int64]) {
  %814 = @func_5695() /* ty=(Tensor[(70, 9), float64], Tensor[(12, 5, 9), uint64], Tensor[(1408), float32], Tensor[(1408), float32]) */;
  %815 = cast(%var_9659, dtype="int64") /* ty=Tensor[(60), int64] */;
  %816 = cast(%var_9659, dtype="int64") /* ty=Tensor[(60), int64] */;
  %817 = reshape(%815, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
  %818 = reshape(%816, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
  %819 = @func_125(%817, %818) /* ty=(Tensor[(2, 6, 5), int64],) */;
  %820 = %814.1;
  %821 = %819.0;
  (%820, %821, %var_9659)
}

def @func_2411(%var_2404: Tensor[(210, 2), float64]) -> (Tensor[(60), int64], Tensor[(420), float64], Tensor[(210, 2), float64]) {
  %822 = cast(%var_2404, dtype="float64") /* ty=Tensor[(210, 2), float64] */;
  %823 = reshape(%822, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %824 = @func_2357(%823) /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(8, 16, 11), bool], Tensor[(420), float64], Tensor[(352, 4), float32]) */;
  %825 = @func_1511() /* ty=Tensor[(60), int64] */;
  %826 = %824.3;
  (%825, %826, %var_2404)
}

def @func_7932() -> Tensor[(6), float64] {
  %827 = @func_5242() /* ty=(Tensor[(3, 2), float64], Tensor[(6), float64], Tensor[(60), int64], Tensor[(70, 9), float32], Tensor[(12, 5, 9), float64]) */;
  %827.1
}

def @func_1455(%var_1433: Tensor[(11, 7, 1), float64]) -> Tensor[(11, 7, 1), float64] {
  %828 = cast(%var_1433, dtype="float64") /* ty=Tensor[(11, 7, 1), float64] */;
  cosh(%828) /* ty=Tensor[(11, 7, 1), float64] */
}

def @func_8794() -> (Tensor[(420), float64], Tensor[(12, 5, 9), float32], Tensor[(84, 2), int8]) {
  %829 = @func_1874() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(420), float64], Tensor[(420), float64], Tensor[(1, 630), float32]) */;
  %830 = cast(meta[relay.Constant][49] /* ty=Tensor[(84, 2), int8] */, dtype="int8") /* ty=Tensor[(84, 2), int8] */;
  %831 = cast(meta[relay.Constant][49] /* ty=Tensor[(84, 2), int8] */, dtype="int8") /* ty=Tensor[(84, 2), int8] */;
  %832 = reshape(%830, newshape=[4, 6, 7]) /* ty=Tensor[(4, 6, 7), int8] */;
  %833 = reshape(%831, newshape=[4, 6, 7]) /* ty=Tensor[(4, 6, 7), int8] */;
  %834 = @func_4294(%832, %833) /* ty=(Tensor[(4, 6, 7), int8], Tensor[(12, 5, 9), float32], Tensor[(630), float32]) */;
  %835 = %829.2;
  %836 = %834.1;
  (%835, %836, meta[relay.Constant][49] /* ty=Tensor[(84, 2), int8] */)
}

def @func_5386(%var_5366: Tensor[(12, 8, 1), float32]) -> (Tensor[(12, 8, ?), float32],) {
  %837 = cast(%var_5366, dtype="float32") /* ty=Tensor[(12, 8, 1), float32] */;
  %838 = tan(%837) /* ty=Tensor[(12, 8, 1), float32] */;
  %839 = cast(%838, dtype="int32") /* ty=Tensor[(12, 8, 1), int32] */;
  %840 = shape_of(%var_5366, dtype="int32") /* ty=Tensor[(3), int32] */;
  %841 = cast(%var_5366, dtype="int32") /* ty=Tensor[(12, 8, 1), int32] */;
  %842 = dyn.reshape(%839, %840, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %843 = left_shift(%841, %842) /* ty=Tensor[(12, 8, ?), int32] */;
  %844 = cast(%843, dtype="float32") /* ty=Tensor[(12, 8, ?), float32] */;
  %845 = sigmoid(%844) /* ty=Tensor[(12, 8, ?), float32] */;
  (%845,)
}

def @func_2718() -> (Tensor[(12, 5, 9), float64],) {
  %846 = @func_2220() /* ty=Tensor[(12, 5, 9), float64] */;
  (%846,)
}

def @func_3736() -> (Tensor[(12, 5, 9), float32], Tensor[(420), float64], Tensor[(60), int64], Tensor[(2, 6, 5), int64], Tensor[(420), float64]) {
  %847 = @func_2433() /* ty=Tensor[(12, 5, 9), float64] */;
  %848 = cast(%847, dtype="float32") /* ty=Tensor[(12, 5, 9), float32] */;
  %849 = @func_1874() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(420), float64], Tensor[(420), float64], Tensor[(1, 630), float32]) */;
  %850 = sqrt(%848) /* ty=Tensor[(12, 5, 9), float32] */;
  %851 = cast(%850, dtype="float64") /* ty=Tensor[(12, 5, 9), float64] */;
  %852 = reshape(%851, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %853 = @func_3429(%852) /* ty=(Tensor[(60), int64], Tensor[(60), int64], Tensor[(540), float64]) */;
  %854 = %853.0;
  %855 = cast(%854, dtype="int64") /* ty=Tensor[(60), int64] */;
  %856 = cast(%854, dtype="int64") /* ty=Tensor[(60), int64] */;
  %857 = reshape(%855, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
  %858 = reshape(%856, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
  %859 = @func_125(%857, %858) /* ty=(Tensor[(2, 6, 5), int64],) */;
  %860 = %849.2;
  %861 = cast(%860, dtype="float64") /* ty=Tensor[(420), float64] */;
  %862 = reshape(%861, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %863 = @func_2501(%862) /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(420), float64]) */;
  %864 = %859.0;
  %865 = %863.3;
  (%850, %860, %854, %864, %865)
}

def @func_5242() -> (Tensor[(3, 2), float64], Tensor[(6), float64], Tensor[(60), int64], Tensor[(70, 9), float32], Tensor[(12, 5, 9), float64]) {
  %866 = cast(meta[relay.Constant][50] /* ty=Tensor[(6), float64] */, dtype="float64") /* ty=Tensor[(6), float64] */;
  %867 = reshape(%866, newshape=[3, 2]) /* ty=Tensor[(3, 2), float64] */;
  %868 = @func_1386(%867) /* ty=(Tensor[(3, 2), float64],) */;
  %869 = @func_3687() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
  %870 = @func_3945() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float32], Tensor[(70, 9), float32]) */;
  %871 = @func_1774() /* ty=(Tensor[(12, 5, 9), float64],) */;
  %872 = %871.0;
  %873 = cast(%872, dtype="float64") /* ty=Tensor[(12, 5, 9), float64] */;
  %874 = %868.0;
  %875 = %869.0;
  %876 = %870.2;
  %877 = acos(%873) /* ty=Tensor[(12, 5, 9), float64] */;
  (%874, meta[relay.Constant][50] /* ty=Tensor[(6), float64] */, %875, %876, %877)
}

def @func_2433() -> Tensor[(12, 5, 9), float64] {
  %878 = @func_1774() /* ty=(Tensor[(12, 5, 9), float64],) */;
  %878.0
}

def @func_1511() -> Tensor[(60), int64] {
  %879 = @func_1428() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
  %879.0
}

def @func_9196(%var_9138: Tensor[(2, 8, 10), float32]) -> (Tensor[(15, 4), int64], Tensor[(1408), float32], Tensor[(6), float64], Tensor[(2, 8, 10), int32], Tensor[(2, 8, 10), float32]) {
  %880 = cast(meta[relay.Constant][51] /* ty=Tensor[(1408), float32] */, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %881 = reshape(%880, newshape=[1408]) /* ty=Tensor[(1408), float32] */;
  %882 = @func_4700(%881) /* ty=(Tensor[(60), int64], Tensor[(15, 4), int64], Tensor[(1408), float32], Tensor[(60), int64]) */;
  %883 = @func_6109() /* ty=(Tensor[(6), float64], Tensor[(8, 16, 11), bool], Tensor[(1408), float64]) */;
  %884 = cast(4.46763f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %885 = cast(%var_9138, dtype="float32") /* ty=Tensor[(2, 8, 10), float32] */;
  %886 = power(%884, %885) /* ty=Tensor[(2, 8, 10), float32] */;
  %887 = cast(%886, dtype="int32") /* ty=Tensor[(2, 8, 10), int32] */;
  %888 = cast(4.46763f /* ty=float32 */, dtype="int32") /* ty=int32 */;
  %889 = cast(%886, dtype="float32") /* ty=Tensor[(2, 8, 10), float32] */;
  %890 = %882.1;
  %891 = %883.0;
  %892 = right_shift(%887, %888) /* ty=Tensor[(2, 8, 10), int32] */;
  %893 = cosh(%889) /* ty=Tensor[(2, 8, 10), float32] */;
  (%890, meta[relay.Constant][51] /* ty=Tensor[(1408), float32] */, %891, %892, %893)
}

def @func_7110(%var_7072: Tensor[(14, 9, 9), int16], %var_7073: Tensor[(14, 9, 9), int16], %var_7101: Tensor[(630), float32], %var_7102: Tensor[(420), float64], %var_7103: Tensor[(1408), float32]) -> (Tensor[(14, 9, 9), bool], Tensor[(5, 7, 9), uint16], Tensor[(?, 9, 10), bool], Tensor[(630), float32], Tensor[(420), float64], Tensor[(1408), float32]) {
  %894 = cast(%var_7073, dtype="bool") /* ty=Tensor[(14, 9, 9), bool] */;
  %895 = shape_of(%var_7072, dtype="int32") /* ty=Tensor[(3), int32] */;
  %896 = cast(%var_7072, dtype="bool") /* ty=Tensor[(14, 9, 9), bool] */;
  %897 = dyn.reshape(%894, %895, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %898 = greater_equal(%896, %897) /* ty=Tensor[(14, 9, 9), bool] */;
  %899 = cast(%var_7073, dtype="float32") /* ty=Tensor[(14, 9, 9), float32] */;
  %900 = shape_of(%898, dtype="int32") /* ty=Tensor[(3), int32] */;
  %901 = cast(%898, dtype="float32") /* ty=Tensor[(14, 9, 9), float32] */;
  %902 = dyn.reshape(%899, %900, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %903 = divide(%901, %902) /* ty=Tensor[(14, 9, 9), float32] */;
  %904 = cast(%898, dtype="bool") /* ty=Tensor[(14, 9, 9), bool] */;
  %905 = shape_of(%903, dtype="int32") /* ty=Tensor[(3), int32] */;
  %906 = cast(%903, dtype="bool") /* ty=Tensor[(14, 9, 9), bool] */;
  %907 = dyn.reshape(%904, %905, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %908 = @func_5893() /* ty=(Tensor[(5, 7, 9), uint16], Tensor[(60), int64]) */;
  %909 = cast(%var_7101, dtype="float32") /* ty=Tensor[(630), float32] */;
  %910 = cast(%var_7102, dtype="float64") /* ty=Tensor[(420), float64] */;
  %911 = cast(%var_7103, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %912 = reshape(%909, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %913 = reshape(%910, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %914 = reshape(%911, newshape=[1408, 1]) /* ty=Tensor[(1408, 1), float32] */;
  %915 = @func_1590(%912, %913, %914) /* ty=(Tensor[(60), int64], Tensor[(630), float32], Tensor[(420), float64], Tensor[(?, 9, 10), bool], Tensor[(8, 16, 11), bool], Tensor[(1408, 1), float32], Tensor[(8, 16, 11), bool]) */;
  %916 = equal(%906, %907) /* ty=Tensor[(14, 9, 9), bool] */;
  %917 = %908.0;
  %918 = %915.3;
  (%916, %917, %918, %var_7101, %var_7102, %var_7103)
}

def @func_9796() -> Tensor[(60), int64] {
  %919 = @func_6675() /* ty=(Tensor[(60), int64],) */;
  %919.0
}

def @func_4904(%var_4893: Tensor[(168), int8]) -> (Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(630), float32], Tensor[(168), int8]) {
  %920 = @func_4096() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64]) */;
  %921 = %920.2;
  %922 = cast(%921, dtype="float64") /* ty=Tensor[(12, 5, 9), float64] */;
  %923 = cast(%var_4893, dtype="int8") /* ty=Tensor[(168), int8] */;
  %924 = cast(%var_4893, dtype="int8") /* ty=Tensor[(168), int8] */;
  %925 = reshape(%923, newshape=[4, 6, 7]) /* ty=Tensor[(4, 6, 7), int8] */;
  %926 = reshape(%924, newshape=[4, 6, 7]) /* ty=Tensor[(4, 6, 7), int8] */;
  %927 = @func_4294(%925, %926) /* ty=(Tensor[(4, 6, 7), int8], Tensor[(12, 5, 9), float32], Tensor[(630), float32]) */;
  %928 = log2(%922) /* ty=Tensor[(12, 5, 9), float64] */;
  %929 = @func_4604() /* ty=Tensor[(60), int64] */;
  %930 = %927.2;
  (%928, %929, %930, %var_4893)
}

def @func_9358() -> Tensor[(60), int64] {
  %931 = @func_8703() /* ty=(Tensor[(60), int64],) */;
  %931.0
}

def @func_1915() -> Tensor[(60), int64] {
  %932 = @func_1037() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(2, 6, 5), int64], Tensor[(60), int64]) */;
  %932.2
}

def @func_3244() -> (Tensor[(12, 5, 9), float64], Tensor[(420), float64], Tensor[(420), float64], Tensor[(1, 60), int64], Tensor[(12, 5, 9), uint8], Tensor[(60), int64], Tensor[(2, 6, 5), bool]) {
  %933 = @func_1774() /* ty=(Tensor[(12, 5, 9), float64],) */;
  %934 = cast(meta[relay.Constant][52] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %935 = reshape(%934, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %936 = @func_1248(%935) /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(420), float64], Tensor[(420), float64]) */;
  %937 = %933.0;
  %938 = cast(%937, dtype="float64") /* ty=Tensor[(12, 5, 9), float64] */;
  %939 = reshape(%938, newshape=[12, 5, 9]) /* ty=Tensor[(12, 5, 9), float64] */;
  %940 = @func_3086(%939) /* ty=(Tensor[(12, 5, 9), uint8], Tensor[(60), int64]) */;
  %941 = @func_1428() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
  %942 = cast(meta[relay.Constant][53] /* ty=Tensor[(1, 60), int64] */, dtype="int64") /* ty=Tensor[(1, 60), int64] */;
  %943 = cast(meta[relay.Constant][53] /* ty=Tensor[(1, 60), int64] */, dtype="int64") /* ty=Tensor[(1, 60), int64] */;
  %944 = reshape(%942, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
  %945 = reshape(%943, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
  %946 = @func_125(%944, %945) /* ty=(Tensor[(2, 6, 5), int64],) */;
  %947 = %946.0;
  %948 = cast(meta[relay.Constant][54] /* ty=Tensor[(2, 6, 5), int64] */, dtype="bool") /* ty=Tensor[(2, 6, 5), bool] */;
  %949 = shape_of(%947, dtype="int32") /* ty=Tensor[(3), int32] */;
  %950 = cast(%947, dtype="bool") /* ty=Tensor[(2, 6, 5), bool] */;
  %951 = dyn.reshape(%948, %949, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %952 = %936.3;
  %953 = %940.0;
  %954 = %941.0;
  %955 = not_equal(%950, %951) /* ty=Tensor[(2, 6, 5), bool] */;
  (%937, %952, meta[relay.Constant][52] /* ty=Tensor[(420), float64] */, meta[relay.Constant][53] /* ty=Tensor[(1, 60), int64] */, %953, %954, %955)
}

def @func_10365() -> Tensor[(6), float64] {
  %956 = @func_5619() /* ty=(Tensor[(6), float64],) */;
  %956.0
}

def @func_10780(%var_10761: Tensor[(8, 16, 11), float64]) -> (Tensor[(8, 16, 11), float64], Tensor[(12, 5, 9), float64], Tensor[(8, 16, 11), float64]) {
  %957 = @func_3497() /* ty=(Tensor[(60), float32], Tensor[(8, 16, 11), float32], Tensor[(432), int64], Tensor[(420, 1), float64]) */;
  %958 = %957.1;
  %959 = cast(%958, dtype="float64") /* ty=Tensor[(8, 16, 11), float64] */;
  %960 = @func_3687() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
  %961 = cast(%958, dtype="float64") /* ty=Tensor[(8, 16, 11), float64] */;
  %962 = log(%961) /* ty=Tensor[(8, 16, 11), float64] */;
  %963 = cast(%var_10761, dtype="uint64") /* ty=Tensor[(8, 16, 11), uint64] */;
  %964 = shape_of(%962, dtype="int32") /* ty=Tensor[(3), int32] */;
  %965 = cast(%962, dtype="uint64") /* ty=Tensor[(8, 16, 11), uint64] */;
  %966 = dyn.reshape(%963, %964, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %967 = minimum(%965, %966) /* ty=Tensor[(8, 16, 11), uint64] */;
  %968 = cast(%967, dtype="float64") /* ty=Tensor[(8, 16, 11), float64] */;
  %969 = asinh(%959) /* ty=Tensor[(8, 16, 11), float64] */;
  %970 = %960.1;
  %971 = atan(%968) /* ty=Tensor[(8, 16, 11), float64] */;
  (%969, %970, %971)
}

def @func_11514() -> Tensor[(12, 5, 9), float64] {
  %972 = @func_10946() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(60), int64]) */;
  %972.1
}

def @func_5168() -> Tensor[(60), int64] {
  @func_2545() /* ty=Tensor[(60), int64] */
}

def @func_1386(%var_1379: Tensor[(3, 2), float64]) -> (Tensor[(3, 2), float64],) {
  %973 = cast(%var_1379, dtype="float64") /* ty=Tensor[(3, 2), float64] */;
  %974 = log10(%973) /* ty=Tensor[(3, 2), float64] */;
  (%974,)
}

def @func_6986(%var_6963: Tensor[(6, 2, 13), float64], %var_6975: Tensor[(9, 60), float64]) -> (Tensor[(6, 2, 13), float64], Tensor[(12, 5, 9), bool], Tensor[(9, 60), float64]) {
  %975 = cast(%var_6963, dtype="float64") /* ty=Tensor[(6, 2, 13), float64] */;
  %976 = cast(%var_6975, dtype="float64") /* ty=Tensor[(9, 60), float64] */;
  %977 = reshape(%976, newshape=[12, 5, 9]) /* ty=Tensor[(12, 5, 9), float64] */;
  %978 = @func_2274(%977) /* ty=(Tensor[(12, 5, 9), bool], Tensor[(12, 5, 9), float64]) */;
  %979 = acos(%975) /* ty=Tensor[(6, 2, 13), float64] */;
  %980 = %978.0;
  (%979, %980, %var_6975)
}

def @func_8327(%var_8281: int16, %var_8282: Tensor[(13, 7, 10), int16], %var_8297: Tensor[(5, 126), float32], %var_8302: Tensor[(156), float64], %var_8303: Tensor[(1056), float32], %var_8314: Tensor[(77), float64]) -> (Tensor[(13, 7, 10), int16], Tensor[(13, 7, 10), float32], Tensor[(2, 6, 5), int64], Tensor[(420), float64], Tensor[(1408), float32], Tensor[(60), int64], Tensor[(5, 126), float32], Tensor[(528, 2), float32], Tensor[(156), float64], Tensor[(1056), float32], Tensor[(11, 7, 1), float64], Tensor[(77), float64]) {
  %981 = cast(%var_8281, dtype="int16") /* ty=int16 */;
  %982 = cast(%var_8282, dtype="int16") /* ty=Tensor[(13, 7, 10), int16] */;
  %983 = cast(%var_8282, dtype="float32") /* ty=Tensor[(13, 7, 10), float32] */;
  %984 = cast(meta[relay.Constant][55] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %985 = cast(meta[relay.Constant][56] /* ty=Tensor[(1408), float32] */, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %986 = reshape(%984, newshape=[12, 5, 7]) /* ty=Tensor[(12, 5, 7), float64] */;
  %987 = reshape(%985, newshape=[1408]) /* ty=Tensor[(1408), float32] */;
  %988 = @func_775(%986, %987) /* ty=(Tensor[(12, 5, 7), float64], Tensor[(2, 6, 5), int64], Tensor[(15, 4), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(8, 16, 11), bool], Tensor[(1408), float32]) */;
  %989 = cast(%var_8297, dtype="float32") /* ty=Tensor[(5, 126), float32] */;
  %990 = cast(meta[relay.Constant][55] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %991 = cast(meta[relay.Constant][56] /* ty=Tensor[(1408), float32] */, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %992 = reshape(%989, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %993 = reshape(%990, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %994 = reshape(%991, newshape=[1408, 1]) /* ty=Tensor[(1408, 1), float32] */;
  %995 = @func_1590(%992, %993, %994) /* ty=(Tensor[(60), int64], Tensor[(630), float32], Tensor[(420), float64], Tensor[(?, 9, 10), bool], Tensor[(8, 16, 11), bool], Tensor[(1408, 1), float32], Tensor[(8, 16, 11), bool]) */;
  %996 = cast(%var_8302, dtype="float64") /* ty=Tensor[(156), float64] */;
  %997 = cast(meta[relay.Constant][55] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %998 = cast(%var_8303, dtype="float32") /* ty=Tensor[(1056), float32] */;
  %999 = reshape(%996, newshape=[156]) /* ty=Tensor[(156), float64] */;
  %1000 = reshape(%997, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %1001 = reshape(%998, newshape=[528, 2]) /* ty=Tensor[(528, 2), float32] */;
  %1002 = @func_7261(%999, %1000, %1001) /* ty=(Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(9, 60), float64], Tensor[(156), float64], Tensor[(60), int64], Tensor[(60), int64], Tensor[(12, 5, 7), float64], Tensor[(420), float64], Tensor[(352, 4), float32], Tensor[(11, 16, 6), float64], Tensor[(528, 2), float32]) */;
  %1003 = cast(%var_8314, dtype="float64") /* ty=Tensor[(77), float64] */;
  %1004 = reshape(%1003, newshape=[11, 7, 1]) /* ty=Tensor[(11, 7, 1), float64] */;
  %1005 = bitwise_xor(%981, %982) /* ty=Tensor[(13, 7, 10), int16] */;
  %1006 = cosh(%983) /* ty=Tensor[(13, 7, 10), float32] */;
  %1007 = %988.4;
  %1008 = %995.0;
  %1009 = %1002.10;
  %1010 = @func_1455(%1004) /* ty=Tensor[(11, 7, 1), float64] */;
  (%1005, %1006, %1007, meta[relay.Constant][55] /* ty=Tensor[(420), float64] */, meta[relay.Constant][56] /* ty=Tensor[(1408), float32] */, %1008, %var_8297, %1009, %var_8302, %var_8303, %1010, %var_8314)
}

def @func_1206() -> (Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(60), int64]) {
  %1011 = @func_1037() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(2, 6, 5), int64], Tensor[(60), int64]) */;
  %1012 = @func_1037() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(2, 6, 5), int64], Tensor[(60), int64]) */;
  %1013 = %1011.0;
  %1014 = @func_874() /* ty=Tensor[(12, 5, 9), float64] */;
  %1015 = %1012.2;
  (%1013, %1014, %1015)
}

def @func_3471() -> (Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), bool]) {
  %1016 = @func_2250() /* ty=(Tensor[(12, 5, 9), float64],) */;
  %1017 = %1016.0;
  %1018 = cast(%1017, dtype="float64") /* ty=Tensor[(12, 5, 9), float64] */;
  %1019 = reshape(%1018, newshape=[12, 5, 9]) /* ty=Tensor[(12, 5, 9), float64] */;
  %1020 = @func_2274(%1019) /* ty=(Tensor[(12, 5, 9), bool], Tensor[(12, 5, 9), float64]) */;
  %1021 = %1020.0;
  (%1017, %1021)
}

def @func_10379(%var_10368: Tensor[(10, 3, 7), uint32], %var_10369: Tensor[(10, 3, 7), uint32]) -> (Tensor[(10, 3, 7), uint32],) {
  %1022 = cast(%var_10369, dtype="uint32") /* ty=Tensor[(10, 3, 7), uint32] */;
  %1023 = shape_of(%var_10368, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1024 = cast(%var_10368, dtype="uint32") /* ty=Tensor[(10, 3, 7), uint32] */;
  %1025 = dyn.reshape(%1022, %1023, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1026 = right_shift(%1024, %1025) /* ty=Tensor[(10, 3, 7), uint32] */;
  (%1026,)
}

def @func_11480() -> (Tensor[(60), int64],) {
  %1027 = @func_3687() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
  %1028 = %1027.0;
  (%1028,)
}

def @func_7340(%var_7337: Tensor[(540), float64]) -> (Tensor[(60), int64], Tensor[(12, 5, 9), bool], Tensor[(540), float64]) {
  %1029 = @func_4941() /* ty=(Tensor[(60), int64],) */;
  %1030 = cast(%var_7337, dtype="float64") /* ty=Tensor[(540), float64] */;
  %1031 = reshape(%1030, newshape=[12, 5, 9]) /* ty=Tensor[(12, 5, 9), float64] */;
  %1032 = @func_2274(%1031) /* ty=(Tensor[(12, 5, 9), bool], Tensor[(12, 5, 9), float64]) */;
  %1033 = %1029.0;
  %1034 = %1032.0;
  (%1033, %1034, %var_7337)
}

def @func_7902(%var_7859: Tensor[(8, 7, 12), uint32], %var_7860: Tensor[(8, 7, 12), uint32], %var_7887: Tensor[(1408, 1), float32], %var_7891: Tensor[(96), uint8]) -> (Tensor[(8, 7, 12), uint32], Tensor[(8, 7, 12), float64], Tensor[(8, 7, 12), float32], Tensor[(15, 4), int64], Tensor[(1408, 1), float32], Tensor[(11, 7, 1), float64], Tensor[(96), uint8]) {
  %1035 = cast(%var_7860, dtype="uint32") /* ty=Tensor[(8, 7, 12), uint32] */;
  %1036 = shape_of(%var_7859, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1037 = cast(%var_7859, dtype="uint32") /* ty=Tensor[(8, 7, 12), uint32] */;
  %1038 = dyn.reshape(%1035, %1036, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1039 = cast(%var_7860, dtype="float64") /* ty=Tensor[(8, 7, 12), float64] */;
  %1040 = cast(%var_7860, dtype="float32") /* ty=Tensor[(8, 7, 12), float32] */;
  %1041 = cast(%var_7887, dtype="float32") /* ty=Tensor[(1408, 1), float32] */;
  %1042 = reshape(%1041, newshape=[1408]) /* ty=Tensor[(1408), float32] */;
  %1043 = @func_4700(%1042) /* ty=(Tensor[(60), int64], Tensor[(15, 4), int64], Tensor[(1408), float32], Tensor[(60), int64]) */;
  %1044 = cast(%var_7891, dtype="uint8") /* ty=Tensor[(96), uint8] */;
  %1045 = reshape(%1044, newshape=[3, 16, 2]) /* ty=Tensor[(3, 16, 2), uint8] */;
  %1046 = @func_2632(%1045) /* ty=(Tensor[(11, 7, 1), float64], Tensor[(630), float32], Tensor[(3, 16, 2), bool], Tensor[(420), float64], Tensor[(420), float64], Tensor[(1408, 1), float32]) */;
  %1047 = bitwise_or(%1037, %1038) /* ty=Tensor[(8, 7, 12), uint32] */;
  %1048 = log(%1039) /* ty=Tensor[(8, 7, 12), float64] */;
  %1049 = acos(%1040) /* ty=Tensor[(8, 7, 12), float32] */;
  %1050 = %1043.1;
  %1051 = %1046.0;
  (%1047, %1048, %1049, %1050, %var_7887, %1051, %var_7891)
}

def @func_5535() -> (Tensor[(6), float64], Tensor[(420), float64], Tensor[(630), float32]) {
  %1052 = @func_5242() /* ty=(Tensor[(3, 2), float64], Tensor[(6), float64], Tensor[(60), int64], Tensor[(70, 9), float32], Tensor[(12, 5, 9), float64]) */;
  %1053 = cast(meta[relay.Constant][57] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %1054 = reshape(%1053, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %1055 = @func_2023(%1054) /* ty=(Tensor[(60), int64], Tensor[(11, 7, 1), float64], Tensor[(77), float64], Tensor[(60), int64], Tensor[(420), float64], Tensor[(10, 42), float64], Tensor[(630), float32]) */;
  %1056 = %1052.1;
  %1057 = %1055.4;
  (%1056, %1057, meta[relay.Constant][57] /* ty=Tensor[(630), float32] */)
}

def @func_8685(%var_8679: Tensor[(1408), float32]) -> (Tensor[(60), int64], Tensor[(8, 16, 11), bool], Tensor[(1408), float32]) {
  %1058 = cast(%var_8679, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %1059 = cast(%var_8679, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %1060 = reshape(%1058, newshape=[8, 16, 11]) /* ty=Tensor[(8, 16, 11), float32] */;
  %1061 = reshape(%1059, newshape=[8, 16, 11]) /* ty=Tensor[(8, 16, 11), float32] */;
  %1062 = @func_3269() /* ty=Tensor[(60), int64] */;
  %1063 = @func_92(%1060, %1061) /* ty=Tensor[(8, 16, 11), bool] */;
  (%1062, %1063, %var_8679)
}

def @func_7162() -> (Tensor[(12, 5, 9), float64],) {
  %1064 = @func_1942() /* ty=Tensor[(12, 5, 9), float32] */;
  %1065 = cast(%1064, dtype="float64") /* ty=Tensor[(12, 5, 9), float64] */;
  %1066 = cos(%1065) /* ty=Tensor[(12, 5, 9), float64] */;
  (%1066,)
}

def @func_6019() -> Tensor[(60), int64] {
  %1067 = @func_3888() /* ty=(Tensor[(60), int64],) */;
  %1067.0
}

def @func_6753() -> (Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64]) {
  %1068 = @func_1774() /* ty=(Tensor[(12, 5, 9), float64],) */;
  %1069 = @func_1428() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
  %1070 = @func_1206() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(60), int64]) */;
  %1071 = %1068.0;
  %1072 = %1069.0;
  %1073 = %1070.1;
  (%1071, %1072, %1073)
}

def @func_7460() -> (Tensor[(1408), float32], Tensor[(60), int64]) {
  %1074 = @func_4787() /* ty=(Tensor[(420), float64], Tensor[(2, 6, 5), int64], Tensor[(1408), float32], Tensor[(60), int64]) */;
  %1075 = @func_6675() /* ty=(Tensor[(60), int64],) */;
  %1076 = %1074.2;
  %1077 = %1075.0;
  (%1076, %1077)
}

def @func_6411() -> (Tensor[(60), int64], Tensor[(12, 5, 9), float64]) {
  %1078 = @func_2128() /* ty=Tensor[(60), int64] */;
  %1079 = @func_874() /* ty=Tensor[(12, 5, 9), float64] */;
  (%1078, %1079)
}

def @func_10478() -> (Tensor[(12, 5, 9), uint64], Tensor[(1, 10, 11), float32], Tensor[(110), float32], Tensor[(60), int64]) {
  %1080 = @func_5448() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), uint64]) */;
  %1081 = cast(meta[relay.Constant][58] /* ty=Tensor[(110), float32] */, dtype="float32") /* ty=Tensor[(110), float32] */;
  %1082 = reshape(%1081, newshape=[1, 10, 11]) /* ty=Tensor[(1, 10, 11), float32] */;
  %1083 = @func_7704(%1082) /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1084 = %1080.2;
  %1085 = %1083.0;
  %1086 = @func_6019() /* ty=Tensor[(60), int64] */;
  (%1084, %1085, meta[relay.Constant][58] /* ty=Tensor[(110), float32] */, %1086)
}

def @func_2250() -> (Tensor[(12, 5, 9), float64],) {
  %1087 = @func_1792() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64]) */;
  %1088 = %1087.1;
  (%1088,)
}

def @func_3086(%var_3077: Tensor[(12, 5, 9), float64]) -> (Tensor[(12, 5, 9), uint8], Tensor[(60), int64]) {
  %1089 = @func_1792() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64]) */;
  %1090 = %1089.1;
  %1091 = cast(%var_3077, dtype="uint8") /* ty=Tensor[(12, 5, 9), uint8] */;
  %1092 = shape_of(%1090, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1093 = cast(%1090, dtype="uint8") /* ty=Tensor[(12, 5, 9), uint8] */;
  %1094 = dyn.reshape(%1091, %1092, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1095 = bitwise_xor(%1093, %1094) /* ty=Tensor[(12, 5, 9), uint8] */;
  %1096 = @func_1915() /* ty=Tensor[(60), int64] */;
  (%1095, %1096)
}

def @func_6760() -> Tensor[(12, 5, 9), float64] {
  %1097 = @func_6753() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
  %1097.0
}

def @func_10946() -> (Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(60), int64]) {
  %1098 = @func_4554() /* ty=(Tensor[(60), int64], Tensor[(420), float64]) */;
  %1099 = %1098.0;
  %1100 = @func_9954() /* ty=Tensor[(12, 5, 9), float64] */;
  %1101 = @func_9003() /* ty=Tensor[(60), int64] */;
  (%1099, %1100, %1101)
}

def @func_5061() -> Tensor[(12, 5, 9), float64] {
  %1102 = @func_4318() /* ty=(Tensor[(12, 5, 9), bool],) */;
  %1103 = %1102.0;
  %1104 = cast(%1103, dtype="float64") /* ty=Tensor[(12, 5, 9), float64] */;
  tan(%1104) /* ty=Tensor[(12, 5, 9), float64] */
}

def @func_3000(%var_2993: Tensor[(1408), float32]) -> (Tensor[(60), int64], Tensor[(15, 4), int64], Tensor[(5, 84), float64], Tensor[(1408), float32]) {
  %1105 = cast(meta[relay.Constant][59] /* ty=Tensor[(5, 84), float64] */, dtype="float64") /* ty=Tensor[(5, 84), float64] */;
  %1106 = cast(meta[relay.Constant][60] /* ty=Tensor[(1408), float32] */, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %1107 = reshape(%1105, newshape=[12, 5, 7]) /* ty=Tensor[(12, 5, 7), float64] */;
  %1108 = reshape(%1106, newshape=[1408]) /* ty=Tensor[(1408), float32] */;
  %1109 = @func_775(%1107, %1108) /* ty=(Tensor[(12, 5, 7), float64], Tensor[(2, 6, 5), int64], Tensor[(15, 4), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(8, 16, 11), bool], Tensor[(1408), float32]) */;
  %1110 = cast(%var_2993, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %1111 = shape_of(meta[relay.Constant][60] /* ty=Tensor[(1408), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1112 = cast(meta[relay.Constant][60] /* ty=Tensor[(1408), float32] */, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %1113 = dyn.reshape(%1110, %1111, newshape=[]) /* ty=Tensor[(?), float32] */;
  %1114 = @func_1511() /* ty=Tensor[(60), int64] */;
  %1115 = %1109.2;
  %1116 = divide(%1112, %1113) /* ty=Tensor[(1408), float32] */;
  (%1114, %1115, meta[relay.Constant][59] /* ty=Tensor[(5, 84), float64] */, %1116)
}

def @func_125(%var_118: Tensor[(2, 6, 5), int64], %var_119: Tensor[(2, 6, 5), int64]) -> (Tensor[(2, 6, 5), int64],) {
  %1117 = cast(%var_119, dtype="int64") /* ty=Tensor[(2, 6, 5), int64] */;
  %1118 = shape_of(%var_118, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1119 = cast(%var_118, dtype="int64") /* ty=Tensor[(2, 6, 5), int64] */;
  %1120 = dyn.reshape(%1117, %1118, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1121 = right_shift(%1119, %1120) /* ty=Tensor[(2, 6, 5), int64] */;
  (%1121,)
}

def @func_5619() -> (Tensor[(6), float64],) {
  %1122 = @func_5535() /* ty=(Tensor[(6), float64], Tensor[(420), float64], Tensor[(630), float32]) */;
  %1123 = %1122.0;
  (%1123,)
}

def @func_9107() -> Tensor[(12, 5, 9), float64] {
  %1124 = @func_2798() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(70, 6), float64], Tensor[(8, 16, 11), bool], Tensor[(1408), float32], Tensor[(12, 5, 9), float64]) */;
  %1124.6
}

def @func_5772() -> (Tensor[(6), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64]) {
  %1125 = @func_5242() /* ty=(Tensor[(3, 2), float64], Tensor[(6), float64], Tensor[(60), int64], Tensor[(70, 9), float32], Tensor[(12, 5, 9), float64]) */;
  %1126 = @func_5661() /* ty=(Tensor[(60), int64],) */;
  %1127 = @func_2250() /* ty=(Tensor[(12, 5, 9), float64],) */;
  %1128 = %1125.1;
  %1129 = %1126.0;
  %1130 = %1127.0;
  (%1128, %1129, %1130)
}

def @func_9326() -> (Tensor[(60), int64],) {
  %1131 = @func_1206() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(60), int64]) */;
  %1132 = %1131.2;
  (%1132,)
}

def @func_4374(%var_4363: Tensor[(1408), float32]) -> (Tensor[(60), float32], Tensor[(1408), float32], Tensor[(1408), float32]) {
  %1133 = @func_3154() /* ty=(Tensor[(60), float32],) */;
  %1134 = cast(%var_4363, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %1135 = reshape(%1134, newshape=[1408]) /* ty=Tensor[(1408), float32] */;
  %1136 = @func_3000(%1135) /* ty=(Tensor[(60), int64], Tensor[(15, 4), int64], Tensor[(5, 84), float64], Tensor[(1408), float32]) */;
  %1137 = %1133.0;
  %1138 = %1136.3;
  (%1137, %1138, %var_4363)
}

def @func_9819() -> Tensor[(12, 5, 9), float64] {
  %1139 = @func_6279() /* ty=(Tensor[(12, 5, 9), float64],) */;
  %1139.0
}

def @func_7281() -> Tensor[(60), int64] {
  %1140 = @func_3244() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(420), float64], Tensor[(420), float64], Tensor[(1, 60), int64], Tensor[(12, 5, 9), uint8], Tensor[(60), int64], Tensor[(2, 6, 5), bool]) */;
  %1140.5
}

def @func_3687() -> (Tensor[(60), int64], Tensor[(12, 5, 9), float64]) {
  %1141 = @func_2250() /* ty=(Tensor[(12, 5, 9), float64],) */;
  %1142 = @func_3269() /* ty=Tensor[(60), int64] */;
  %1143 = %1141.0;
  (%1142, %1143)
}

def @func_8743() -> (Tensor[(60), int64], Tensor[(?, 9, 10), bool], Tensor[(420), float64], Tensor[(630), float32]) {
  %1144 = cast(meta[relay.Constant][61] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %1145 = cast(meta[relay.Constant][62] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %1146 = reshape(%1144, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %1147 = reshape(%1145, newshape=[630, 1]) /* ty=Tensor[(630, 1), float32] */;
  %1148 = @func_1715(%1146, %1147) /* ty=(Tensor[(12, 5, 9), float64], Tensor[(15, 4), int64], Tensor[(420), float64], Tensor[(1408), float32], Tensor[(?, 9, 10), bool], Tensor[(630, 1), float32]) */;
  %1149 = @func_2545() /* ty=Tensor[(60), int64] */;
  %1150 = %1148.4;
  (%1149, %1150, meta[relay.Constant][61] /* ty=Tensor[(420), float64] */, meta[relay.Constant][62] /* ty=Tensor[(630), float32] */)
}

def @func_2907() -> Tensor[(60), int64] {
  %1151 = @func_2798() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(70, 6), float64], Tensor[(8, 16, 11), bool], Tensor[(1408), float32], Tensor[(12, 5, 9), float64]) */;
  %1151.1
}

def @func_874() -> Tensor[(12, 5, 9), float64] {
  %1152 = cast(meta[relay.Constant][63] /* ty=Tensor[(12, 5, 9), float64] */, dtype="float64") /* ty=Tensor[(12, 5, 9), float64] */;
  %1153 = atan(%1152) /* ty=Tensor[(12, 5, 9), float64] */;
  %1154 = cast(%1153, dtype="float32") /* ty=Tensor[(12, 5, 9), float32] */;
  %1155 = erf(%1154) /* ty=Tensor[(12, 5, 9), float32] */;
  %1156 = cast(%1155, dtype="float64") /* ty=Tensor[(12, 5, 9), float64] */;
  exp(%1156) /* ty=Tensor[(12, 5, 9), float64] */
}

def @func_1774() -> (Tensor[(12, 5, 9), float64],) {
  %1157 = @func_874() /* ty=Tensor[(12, 5, 9), float64] */;
  (%1157,)
}

def @func_9217() -> (Tensor[(60), int64],) {
  %1158 = @func_3325() /* ty=(Tensor[(60), int64],) */;
  %1159 = %1158.0;
  (%1159,)
}

def @func_9236() -> (Tensor[(60), int64], Tensor[(12, 5, 9), float64]) {
  %1160 = @func_5772() /* ty=(Tensor[(6), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
  %1161 = @func_2128() /* ty=Tensor[(60), int64] */;
  %1162 = %1160.2;
  (%1161, %1162)
}

def @func_4917() -> (Tensor[(12, 5, 9), float64],) {
  %1163 = @func_3945() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float32], Tensor[(70, 9), float32]) */;
  %1164 = %1163.0;
  (%1164,)
}

def @func_8402(%var_8377: Tensor[(3, 16, 7), float64]) -> (Tensor[(3, 16, 7), float64], Tensor[(12, 5, 9), float64]) {
  %1165 = cast(%var_8377, dtype="float64") /* ty=Tensor[(3, 16, 7), float64] */;
  %1166 = @func_7771() /* ty=(Tensor[(12, 5, 9), float64],) */;
  %1167 = atanh(%1165) /* ty=Tensor[(3, 16, 7), float64] */;
  %1168 = %1166.0;
  (%1167, %1168)
}

def @main(%var_11527: bool, %var_11528: Tensor[(9, 1, 1), bool], %var_11549: Tensor[(9, 11, 4), float64]) -> (Tensor[(9, 1, 1), float32], Tensor[(9, 11, 4), bool]) {
  %1169 = cast(%var_11527, dtype="bool") /* ty=bool */;
  %1170 = cast(%var_11528, dtype="bool") /* ty=Tensor[(9, 1, 1), bool] */;
  %1171 = logical_and(%1169, %1170) /* ty=Tensor[(9, 1, 1), bool] */;
  %1172 = cast(%var_11527, dtype="float32") /* ty=float32 */;
  %1173 = cast(%1171, dtype="float32") /* ty=Tensor[(9, 1, 1), float32] */;
  %1174 = cast(%var_11528, dtype="float64") /* ty=Tensor[(9, 1, 1), float64] */;
  %1175 = erf(%1174) /* ty=Tensor[(9, 1, 1), float64] */;
  %1176 = cast(%1175, dtype="bool") /* ty=Tensor[(9, 1, 1), bool] */;
  %1177 = cast(%var_11549, dtype="bool") /* ty=Tensor[(9, 11, 4), bool] */;
  %1178 = power(%1172, %1173) /* ty=Tensor[(9, 1, 1), float32] */;
  %1179 = logical_or(%1176, %1177) /* ty=Tensor[(9, 11, 4), bool] */;
  (%1178, %1179)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_8069() -> (Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float32], Tensor[(12, 5, 9), float64]) {
  @func_8067() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float32], Tensor[(12, 5, 9), float64]) */
}

def @func_10633() -> (Tensor[(60), int64],) {
  %2 = fn () -> (Tensor[(60), int64],) {
    %0 = @func_5661() /* ty=(Tensor[(60), int64],) */;
    %1 = %0.0;
    (%1,)
  };
  %2() /* ty=(Tensor[(60), int64],) */
}

def @func_7110(%var_7072: Tensor[(14, 9, 9), int16], %var_7073: Tensor[(14, 9, 9), int16], %var_7101: Tensor[(630), float32], %var_7102: Tensor[(420), float64], %var_7103: Tensor[(1408), float32]) -> (Tensor[(14, 9, 9), bool], Tensor[(5, 7, 9), uint16], Tensor[(?, 9, 10), bool], Tensor[(630), float32], Tensor[(420), float64], Tensor[(1408), float32]) {
  %3 = cast(%var_7073, dtype="bool") /* ty=Tensor[(14, 9, 9), bool] */;
  %4 = shape_of(%var_7072, dtype="int32") /* ty=Tensor[(3), int32] */;
  %5 = cast(%var_7072, dtype="bool") /* ty=Tensor[(14, 9, 9), bool] */;
  %6 = dyn.reshape(%3, %4, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %7 = greater_equal(%5, %6) /* ty=Tensor[(14, 9, 9), bool] */;
  %8 = cast(%var_7073, dtype="float32") /* ty=Tensor[(14, 9, 9), float32] */;
  %9 = shape_of(%7, dtype="int32") /* ty=Tensor[(3), int32] */;
  %10 = cast(%7, dtype="float32") /* ty=Tensor[(14, 9, 9), float32] */;
  %11 = dyn.reshape(%8, %9, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %12 = divide(%10, %11) /* ty=Tensor[(14, 9, 9), float32] */;
  %13 = cast(%7, dtype="bool") /* ty=Tensor[(14, 9, 9), bool] */;
  %14 = shape_of(%12, dtype="int32") /* ty=Tensor[(3), int32] */;
  %15 = cast(%12, dtype="bool") /* ty=Tensor[(14, 9, 9), bool] */;
  %16 = dyn.reshape(%13, %14, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %17 = @func_5893() /* ty=(Tensor[(5, 7, 9), uint16], Tensor[(60), int64]) */;
  %18 = cast(%var_7101, dtype="float32") /* ty=Tensor[(630), float32] */;
  %19 = cast(%var_7102, dtype="float64") /* ty=Tensor[(420), float64] */;
  %20 = cast(%var_7103, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %21 = reshape(%18, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %22 = reshape(%19, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %23 = reshape(%20, newshape=[1408, 1]) /* ty=Tensor[(1408, 1), float32] */;
  %24 = @func_1590(%21, %22, %23) /* ty=(Tensor[(60), int64], Tensor[(630), float32], Tensor[(420), float64], Tensor[(?, 9, 10), bool], Tensor[(8, 16, 11), bool], Tensor[(1408, 1), float32], Tensor[(8, 16, 11), bool]) */;
  %25 = equal(%15, %16) /* ty=Tensor[(14, 9, 9), bool] */;
  %26 = %17.0;
  %27 = %24.3;
  (%25, %26, %27, %var_7101, %var_7102, %var_7103)
}

def @func_7933() -> Tensor[(6), float64] {
  %29 = fn () -> Tensor[(6), float64] {
    %28 = @func_5242() /* ty=(Tensor[(3, 2), float64], Tensor[(6), float64], Tensor[(60), int64], Tensor[(70, 9), float32], Tensor[(12, 5, 9), float64]) */;
    %28.1
  };
  %29() /* ty=Tensor[(6), float64] */
}

def @func_3270() -> Tensor[(60), int64] {
  %30 = fn () -> Tensor[(60), int64] {
    @func_1511() /* ty=Tensor[(60), int64] */
  };
  %30() /* ty=Tensor[(60), int64] */
}

def @func_7419() -> (Tensor[(10, 14, 3), float32], Tensor[(70, 9), float32]) {
  @func_7417() /* ty=(Tensor[(10, 14, 3), float32], Tensor[(70, 9), float32]) */
}

def @func_8795() -> (Tensor[(420), float64], Tensor[(12, 5, 9), float32], Tensor[(84, 2), int8]) {
  %39 = fn () -> (Tensor[(420), float64], Tensor[(12, 5, 9), float32], Tensor[(84, 2), int8]) {
    %31 = @func_1874() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(420), float64], Tensor[(420), float64], Tensor[(1, 630), float32]) */;
    %32 = cast(meta[relay.Constant][0] /* ty=Tensor[(84, 2), int8] */, dtype="int8") /* ty=Tensor[(84, 2), int8] */;
    %33 = cast(meta[relay.Constant][0] /* ty=Tensor[(84, 2), int8] */, dtype="int8") /* ty=Tensor[(84, 2), int8] */;
    %34 = reshape(%32, newshape=[4, 6, 7]) /* ty=Tensor[(4, 6, 7), int8] */;
    %35 = reshape(%33, newshape=[4, 6, 7]) /* ty=Tensor[(4, 6, 7), int8] */;
    %36 = @func_4294(%34, %35) /* ty=(Tensor[(4, 6, 7), int8], Tensor[(12, 5, 9), float32], Tensor[(630), float32]) */;
    %37 = %31.2;
    %38 = %36.1;
    (%37, %38, meta[relay.Constant][0] /* ty=Tensor[(84, 2), int8] */)
  };
  %39() /* ty=(Tensor[(420), float64], Tensor[(12, 5, 9), float32], Tensor[(84, 2), int8]) */
}

def @func_10249() -> (Tensor[(8, 12, 11), int32], Tensor[(60), int64], Tensor[(2, 6, 5), int64]) {
  @func_10247() /* ty=(Tensor[(8, 12, 11), int32], Tensor[(60), int64], Tensor[(2, 6, 5), int64]) */
}

def @func_8710() -> (Tensor[(60), int64],) {
  %40 = @func_5893() /* ty=(Tensor[(5, 7, 9), uint16], Tensor[(60), int64]) */;
  %41 = %40.1;
  (%41,)
}

def @func_10365() -> Tensor[(6), float64] {
  %42 = @func_5619() /* ty=(Tensor[(6), float64],) */;
  %42.0
}

def @func_3497() -> (Tensor[(60), float32], Tensor[(8, 16, 11), float32], Tensor[(432), int64], Tensor[(420, 1), float64]) {
  %43 = @func_3154() /* ty=(Tensor[(60), float32],) */;
  %44 = cast(meta[relay.Constant][1] /* ty=Tensor[(432), int64] */, dtype="int64") /* ty=Tensor[(432), int64] */;
  %45 = cast(meta[relay.Constant][1] /* ty=Tensor[(432), int64] */, dtype="int64") /* ty=Tensor[(432), int64] */;
  %46 = cast(meta[relay.Constant][2] /* ty=Tensor[(420, 1), float64] */, dtype="float64") /* ty=Tensor[(420, 1), float64] */;
  %47 = reshape(%44, newshape=[9, 12, 4]) /* ty=Tensor[(9, 12, 4), int64] */;
  %48 = reshape(%45, newshape=[9, 12, 4]) /* ty=Tensor[(9, 12, 4), int64] */;
  %49 = reshape(%46, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %50 = @func_970(%47, %48, %49) /* ty=(Tensor[(9, 12, 4), int64], Tensor[(1408), float32], Tensor[(2, 6, 5), int64], Tensor[(420), float64], Tensor[(8, 16, 11), float32]) */;
  %51 = cast(meta[relay.Constant][2] /* ty=Tensor[(420, 1), float64] */, dtype="float64") /* ty=Tensor[(420, 1), float64] */;
  %52 = %43.0;
  %53 = %50.4;
  %54 = asin(%51) /* ty=Tensor[(420, 1), float64] */;
  (%52, %53, meta[relay.Constant][1] /* ty=Tensor[(432), int64] */, %54)
}

def @func_6866() -> Tensor[(60), int64] {
  %56 = fn () -> Tensor[(60), int64] {
    %55 = @func_3888() /* ty=(Tensor[(60), int64],) */;
    %55.0
  };
  %56() /* ty=Tensor[(60), int64] */
}

def @func_7117(%var_7112: Tensor[(14, 9, 9), int16], %var_7113: Tensor[(14, 9, 9), int16], %var_7114: Tensor[(630), float32], %var_7115: Tensor[(420), float64], %var_7116: Tensor[(1408), float32]) -> (Tensor[(14, 9, 9), bool], Tensor[(5, 7, 9), uint16], Tensor[(?, 9, 10), bool], Tensor[(630), float32], Tensor[(420), float64], Tensor[(1408), float32]) {
  @func_7110(%var_7112, %var_7113, %var_7114, %var_7115, %var_7116) /* ty=(Tensor[(14, 9, 9), bool], Tensor[(5, 7, 9), uint16], Tensor[(?, 9, 10), bool], Tensor[(630), float32], Tensor[(420), float64], Tensor[(1408), float32]) */
}

def @func_7343(%var_7341: Tensor[(540), float64]) -> (Tensor[(60), int64], Tensor[(12, 5, 9), bool], Tensor[(540), float64]) {
  @func_7340(%var_7341) /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), bool], Tensor[(540), float64]) */
}

def @func_10299() -> (Tensor[(6), float64], Tensor[(60), int64]) {
  %60 = fn () -> (Tensor[(6), float64], Tensor[(60), int64]) {
    %57 = @func_5893() /* ty=(Tensor[(5, 7, 9), uint16], Tensor[(60), int64]) */;
    %58 = @func_7932() /* ty=Tensor[(6), float64] */;
    %59 = %57.1;
    (%58, %59)
  };
  %60() /* ty=(Tensor[(6), float64], Tensor[(60), int64]) */
}

def @func_2128() -> Tensor[(60), int64] {
  @func_1511() /* ty=Tensor[(60), int64] */
}

def @func_2908() -> Tensor[(60), int64] {
  %62 = fn () -> Tensor[(60), int64] {
    %61 = @func_2798() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(70, 6), float64], Tensor[(8, 16, 11), bool], Tensor[(1408), float32], Tensor[(12, 5, 9), float64]) */;
    %61.1
  };
  %62() /* ty=Tensor[(60), int64] */
}

def @func_2799() -> (Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(70, 6), float64], Tensor[(8, 16, 11), bool], Tensor[(1408), float32], Tensor[(12, 5, 9), float64]) {
  %76 = fn () -> (Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(70, 6), float64], Tensor[(8, 16, 11), bool], Tensor[(1408), float32], Tensor[(12, 5, 9), float64]) {
    %63 = cast(meta[relay.Constant][3] /* ty=Tensor[(70, 6), float64] */, dtype="float64") /* ty=Tensor[(70, 6), float64] */;
    %64 = reshape(%63, newshape=[420]) /* ty=Tensor[(420), float64] */;
    %65 = @func_1248(%64) /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(420), float64], Tensor[(420), float64]) */;
    %66 = cast(meta[relay.Constant][4] /* ty=Tensor[(1408), float32] */, dtype="float32") /* ty=Tensor[(1408), float32] */;
    %67 = cast(meta[relay.Constant][4] /* ty=Tensor[(1408), float32] */, dtype="float32") /* ty=Tensor[(1408), float32] */;
    %68 = reshape(%66, newshape=[8, 16, 11]) /* ty=Tensor[(8, 16, 11), float32] */;
    %69 = reshape(%67, newshape=[8, 16, 11]) /* ty=Tensor[(8, 16, 11), float32] */;
    %70 = @func_1792() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64]) */;
    %71 = @func_2220() /* ty=Tensor[(12, 5, 9), float64] */;
    %72 = @func_1915() /* ty=Tensor[(60), int64] */;
    %73 = %65.2;
    %74 = @func_92(%68, %69) /* ty=Tensor[(8, 16, 11), bool] */;
    %75 = %70.0;
    (%71, %72, %73, meta[relay.Constant][3] /* ty=Tensor[(70, 6), float64] */, %74, meta[relay.Constant][4] /* ty=Tensor[(1408), float32] */, %75)
  };
  %76() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(70, 6), float64], Tensor[(8, 16, 11), bool], Tensor[(1408), float32], Tensor[(12, 5, 9), float64]) */
}

def @func_3312() -> (Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(420), float64], Tensor[(12, 5, 9), float64]) {
  %77 = @func_1792() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64]) */;
  %78 = cast(meta[relay.Constant][5] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %79 = reshape(%78, newshape=[210, 2]) /* ty=Tensor[(210, 2), float64] */;
  %80 = @func_2411(%79) /* ty=(Tensor[(60), int64], Tensor[(420), float64], Tensor[(210, 2), float64]) */;
  %81 = %77.0;
  %82 = %80.0;
  %83 = @func_2220() /* ty=Tensor[(12, 5, 9), float64] */;
  (%81, %82, meta[relay.Constant][5] /* ty=Tensor[(420), float64] */, %83)
}

def @func_6038() -> (Tensor[(60), int64],) {
  %84 = @func_3325() /* ty=(Tensor[(60), int64],) */;
  %85 = %84.0;
  (%85,)
}

def @func_5905() -> (Tensor[(60), int64],) {
  %86 = @func_3269() /* ty=Tensor[(60), int64] */;
  (%86,)
}

def @func_2023(%var_2012: Tensor[(630), float32]) -> (Tensor[(60), int64], Tensor[(11, 7, 1), float64], Tensor[(77), float64], Tensor[(60), int64], Tensor[(420), float64], Tensor[(10, 42), float64], Tensor[(630), float32]) {
  %87 = @func_1428() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
  %88 = cast(meta[relay.Constant][6] /* ty=Tensor[(77), float64] */, dtype="float64") /* ty=Tensor[(77), float64] */;
  %89 = reshape(%88, newshape=[11, 7, 1]) /* ty=Tensor[(11, 7, 1), float64] */;
  %90 = cast(meta[relay.Constant][7] /* ty=Tensor[(10, 42), float64] */, dtype="float64") /* ty=Tensor[(10, 42), float64] */;
  %91 = cast(%var_2012, dtype="float32") /* ty=Tensor[(630), float32] */;
  %92 = reshape(%90, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %93 = reshape(%91, newshape=[630, 1]) /* ty=Tensor[(630, 1), float32] */;
  %94 = @func_1715(%92, %93) /* ty=(Tensor[(12, 5, 9), float64], Tensor[(15, 4), int64], Tensor[(420), float64], Tensor[(1408), float32], Tensor[(?, 9, 10), bool], Tensor[(630, 1), float32]) */;
  %95 = %87.0;
  %96 = @func_1455(%89) /* ty=Tensor[(11, 7, 1), float64] */;
  %97 = @func_1915() /* ty=Tensor[(60), int64] */;
  %98 = %94.2;
  (%95, %96, meta[relay.Constant][6] /* ty=Tensor[(77), float64] */, %97, %98, meta[relay.Constant][7] /* ty=Tensor[(10, 42), float64] */, %var_2012)
}

def @func_1875() -> (Tensor[(12, 5, 9), float64], Tensor[(420), float64], Tensor[(420), float64], Tensor[(1, 630), float32]) {
  %107 = fn () -> (Tensor[(12, 5, 9), float64], Tensor[(420), float64], Tensor[(420), float64], Tensor[(1, 630), float32]) {
    %99 = @func_1206() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(60), int64]) */;
    %100 = cast(meta[relay.Constant][8] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
    %101 = cast(meta[relay.Constant][9] /* ty=Tensor[(1, 630), float32] */, dtype="float32") /* ty=Tensor[(1, 630), float32] */;
    %102 = reshape(%100, newshape=[420]) /* ty=Tensor[(420), float64] */;
    %103 = reshape(%101, newshape=[630, 1]) /* ty=Tensor[(630, 1), float32] */;
    %104 = @func_1715(%102, %103) /* ty=(Tensor[(12, 5, 9), float64], Tensor[(15, 4), int64], Tensor[(420), float64], Tensor[(1408), float32], Tensor[(?, 9, 10), bool], Tensor[(630, 1), float32]) */;
    %105 = %99.1;
    %106 = %104.2;
    (%105, %106, meta[relay.Constant][8] /* ty=Tensor[(420), float64] */, meta[relay.Constant][9] /* ty=Tensor[(1, 630), float32] */)
  };
  %107() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(420), float64], Tensor[(420), float64], Tensor[(1, 630), float32]) */
}

def @func_1207() -> (Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(60), int64]) {
  %113 = fn () -> (Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(60), int64]) {
    %108 = @func_1037() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(2, 6, 5), int64], Tensor[(60), int64]) */;
    %109 = @func_1037() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(2, 6, 5), int64], Tensor[(60), int64]) */;
    %110 = %108.0;
    %111 = @func_874() /* ty=Tensor[(12, 5, 9), float64] */;
    %112 = %109.2;
    (%110, %111, %112)
  };
  %113() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(60), int64]) */
}

def @func_4840(%var_4838: Tensor[(420), float64]) -> (Tensor[(16, 13, 5), float64], Tensor[(1408), float32], Tensor[(432), int64], Tensor[(420), float64]) {
  @func_4837(%var_4838) /* ty=(Tensor[(16, 13, 5), float64], Tensor[(1408), float32], Tensor[(432), int64], Tensor[(420), float64]) */
}

def @func_10479() -> (Tensor[(12, 5, 9), uint64], Tensor[(1, 10, 11), float32], Tensor[(110), float32], Tensor[(60), int64]) {
  %121 = fn () -> (Tensor[(12, 5, 9), uint64], Tensor[(1, 10, 11), float32], Tensor[(110), float32], Tensor[(60), int64]) {
    %114 = @func_5448() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), uint64]) */;
    %115 = cast(meta[relay.Constant][10] /* ty=Tensor[(110), float32] */, dtype="float32") /* ty=Tensor[(110), float32] */;
    %116 = reshape(%115, newshape=[1, 10, 11]) /* ty=Tensor[(1, 10, 11), float32] */;
    %117 = @func_7704(%116) /* ty=(Tensor[(1, 10, 11), float32],) */;
    %118 = %114.2;
    %119 = %117.0;
    %120 = @func_6019() /* ty=Tensor[(60), int64] */;
    (%118, %119, meta[relay.Constant][10] /* ty=Tensor[(110), float32] */, %120)
  };
  %121() /* ty=(Tensor[(12, 5, 9), uint64], Tensor[(1, 10, 11), float32], Tensor[(110), float32], Tensor[(60), int64]) */
}

def @func_6549(%var_6507: Tensor[(1408), float32], %var_6520: Tensor[(1408), float32]) -> (Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(60), float32], Tensor[(1408), uint8], Tensor[(60), int64], Tensor[(60), int64], Tensor[(12, 5, 9), float64]) {
  %122 = @func_6411() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
  %123 = cast(%var_6507, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %124 = reshape(%123, newshape=[1408]) /* ty=Tensor[(1408), float32] */;
  %125 = @func_4374(%124) /* ty=(Tensor[(60), float32], Tensor[(1408), float32], Tensor[(1408), float32]) */;
  %126 = cast(%var_6520, dtype="uint8") /* ty=Tensor[(1408), uint8] */;
  %127 = shape_of(%var_6507, dtype="int32") /* ty=Tensor[(1), int32] */;
  %128 = cast(%var_6507, dtype="uint8") /* ty=Tensor[(1408), uint8] */;
  %129 = dyn.reshape(%126, %127, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %130 = %122.1;
  %131 = cast(%130, dtype="float64") /* ty=Tensor[(12, 5, 9), float64] */;
  %132 = reshape(%131, newshape=[12, 5, 9]) /* ty=Tensor[(12, 5, 9), float64] */;
  %133 = @func_3086(%132) /* ty=(Tensor[(12, 5, 9), uint8], Tensor[(60), int64]) */;
  %134 = @func_1428() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
  %135 = @func_2545() /* ty=Tensor[(60), int64] */;
  %136 = @func_5475() /* ty=Tensor[(60), int64] */;
  %137 = @func_5061() /* ty=Tensor[(12, 5, 9), float64] */;
  %138 = @func_4604() /* ty=Tensor[(60), int64] */;
  %139 = %125.0;
  %140 = add(%128, %129) /* ty=Tensor[(1408), uint8] */;
  %141 = %133.1;
  %142 = @func_1511() /* ty=Tensor[(60), int64] */;
  %143 = %134.1;
  (%135, %130, %136, %137, %138, %139, %140, %141, %142, %143)
}

def @func_9554() -> (Tensor[(60), int64],) {
  %144 = @func_3325() /* ty=(Tensor[(60), int64],) */;
  %145 = %144.0;
  (%145,)
}

def @func_5450() -> (Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), uint64]) {
  @func_5448() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), uint64]) */
}

def @func_8839() -> Tensor[(60), int64] {
  %147 = fn () -> Tensor[(60), int64] {
    %146 = @func_8218() /* ty=(Tensor[(60), int64],) */;
    %146.0
  };
  %147() /* ty=Tensor[(60), int64] */
}

def @func_9003() -> Tensor[(60), int64] {
  @func_6865() /* ty=Tensor[(60), int64] */
}

def @func_1594(%var_1591: Tensor[(630), float32], %var_1592: Tensor[(420), float64], %var_1593: Tensor[(1408, 1), float32]) -> (Tensor[(60), int64], Tensor[(630), float32], Tensor[(420), float64], Tensor[(?, 9, 10), bool], Tensor[(8, 16, 11), bool], Tensor[(1408, 1), float32], Tensor[(8, 16, 11), bool]) {
  %173 = fn (%var_1563: Tensor[(630), float32], %var_1564: Tensor[(420), float64], %var_1574: Tensor[(1408, 1), float32]) -> (Tensor[(60), int64], Tensor[(630), float32], Tensor[(420), float64], Tensor[(?, 9, 10), bool], Tensor[(8, 16, 11), bool], Tensor[(1408, 1), float32], Tensor[(8, 16, 11), bool]) {
    %148 = @func_1037() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(2, 6, 5), int64], Tensor[(60), int64]) */;
    %149 = cast(meta[relay.Constant][11] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
    %150 = cast(%var_1563, dtype="float32") /* ty=Tensor[(630), float32] */;
    %151 = cast(%var_1564, dtype="float64") /* ty=Tensor[(420), float64] */;
    %152 = reshape(%149, newshape=[1, 9, 10]) /* ty=Tensor[(1, 9, 10), float32] */;
    %153 = reshape(%150, newshape=[7, 9, 10]) /* ty=Tensor[(7, 9, 10), float32] */;
    %154 = reshape(%151, newshape=[420]) /* ty=Tensor[(420), float64] */;
    %155 = @func_1349(%152, %153, %154) /* ty=(Tensor[(7, 9, 10), float64], Tensor[(1, 9, 10), float32], Tensor[(420), float64], Tensor[(420), float64]) */;
    %156 = %155.1;
    %157 = cast(meta[relay.Constant][11] /* ty=Tensor[(90), float32] */, dtype="bool") /* ty=Tensor[(90), bool] */;
    %158 = shape_of(%156, dtype="int32") /* ty=Tensor[(3), int32] */;
    %159 = cast(%156, dtype="bool") /* ty=Tensor[(1, 9, 10), bool] */;
    %160 = dyn.reshape(%157, %158, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %161 = cast(%var_1574, dtype="float32") /* ty=Tensor[(1408, 1), float32] */;
    %162 = cast(%var_1574, dtype="float32") /* ty=Tensor[(1408, 1), float32] */;
    %163 = reshape(%161, newshape=[8, 16, 11]) /* ty=Tensor[(8, 16, 11), float32] */;
    %164 = reshape(%162, newshape=[8, 16, 11]) /* ty=Tensor[(8, 16, 11), float32] */;
    %165 = @func_92(%163, %164) /* ty=Tensor[(8, 16, 11), bool] */;
    %166 = cast(%165, dtype="float32") /* ty=Tensor[(8, 16, 11), float32] */;
    %167 = cast(%var_1574, dtype="float32") /* ty=Tensor[(1408, 1), float32] */;
    %168 = reshape(%166, newshape=[8, 16, 11]) /* ty=Tensor[(8, 16, 11), float32] */;
    %169 = reshape(%167, newshape=[8, 16, 11]) /* ty=Tensor[(8, 16, 11), float32] */;
    %170 = %148.2;
    %171 = greater(%159, %160) /* ty=Tensor[(?, 9, 10), bool] */;
    %172 = @func_92(%168, %169) /* ty=Tensor[(8, 16, 11), bool] */;
    (%170, %var_1563, %var_1564, %171, %165, %var_1574, %172)
  };
  %173(%var_1591, %var_1592, %var_1593) /* ty=(Tensor[(60), int64], Tensor[(630), float32], Tensor[(420), float64], Tensor[(?, 9, 10), bool], Tensor[(8, 16, 11), bool], Tensor[(1408, 1), float32], Tensor[(8, 16, 11), bool]) */
}

def @func_11122() -> Tensor[(2, 6, 5), int64] {
  %175 = fn () -> Tensor[(2, 6, 5), int64] {
    %174 = @func_10247() /* ty=(Tensor[(8, 12, 11), int32], Tensor[(60), int64], Tensor[(2, 6, 5), int64]) */;
    %174.2
  };
  %175() /* ty=Tensor[(2, 6, 5), int64] */
}

def @func_7283() -> Tensor[(60), int64] {
  @func_7281() /* ty=Tensor[(60), int64] */
}

def @func_1038() -> (Tensor[(12, 5, 9), float64], Tensor[(2, 6, 5), int64], Tensor[(60), int64]) {
  %183 = fn () -> (Tensor[(12, 5, 9), float64], Tensor[(2, 6, 5), int64], Tensor[(60), int64]) {
    %176 = cast(meta[relay.Constant][12] /* ty=Tensor[(60), int64] */, dtype="int64") /* ty=Tensor[(60), int64] */;
    %177 = cast(meta[relay.Constant][12] /* ty=Tensor[(60), int64] */, dtype="int64") /* ty=Tensor[(60), int64] */;
    %178 = reshape(%176, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
    %179 = reshape(%177, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
    %180 = @func_125(%178, %179) /* ty=(Tensor[(2, 6, 5), int64],) */;
    %181 = @func_874() /* ty=Tensor[(12, 5, 9), float64] */;
    %182 = %180.0;
    (%181, %182, meta[relay.Constant][12] /* ty=Tensor[(60), int64] */)
  };
  %183() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(2, 6, 5), int64], Tensor[(60), int64]) */
}

def @func_9237() -> (Tensor[(60), int64], Tensor[(12, 5, 9), float64]) {
  %187 = fn () -> (Tensor[(60), int64], Tensor[(12, 5, 9), float64]) {
    %184 = @func_5772() /* ty=(Tensor[(6), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
    %185 = @func_2128() /* ty=Tensor[(60), int64] */;
    %186 = %184.2;
    (%185, %186)
  };
  %187() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */
}

def @func_4917() -> (Tensor[(12, 5, 9), float64],) {
  %188 = @func_3945() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float32], Tensor[(70, 9), float32]) */;
  %189 = %188.0;
  (%189,)
}

def @func_5170() -> Tensor[(60), int64] {
  @func_5168() /* ty=Tensor[(60), int64] */
}

def @func_2220() -> Tensor[(12, 5, 9), float64] {
  @func_874() /* ty=Tensor[(12, 5, 9), float64] */
}

def @func_92(%var_72: Tensor[(8, 16, 11), float32], %var_73: Tensor[(8, 16, 11), float32]) -> Tensor[(8, 16, 11), bool] {
  %190 = cast(%var_73, dtype="bool") /* ty=Tensor[(8, 16, 11), bool] */;
  %191 = shape_of(%var_72, dtype="int32") /* ty=Tensor[(3), int32] */;
  %192 = cast(%var_72, dtype="bool") /* ty=Tensor[(8, 16, 11), bool] */;
  %193 = dyn.reshape(%190, %191, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %194 = less_equal(%192, %193) /* ty=Tensor[(8, 16, 11), bool] */;
  %195 = cast(%var_73, dtype="bool") /* ty=Tensor[(8, 16, 11), bool] */;
  %196 = shape_of(%194, dtype="int32") /* ty=Tensor[(3), int32] */;
  %197 = cast(%194, dtype="bool") /* ty=Tensor[(8, 16, 11), bool] */;
  %198 = dyn.reshape(%195, %196, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%197, %198) /* ty=Tensor[(8, 16, 11), bool] */
}

def @func_11249(%var_11248: Tensor[(70, 9), float64]) -> Tensor[(70, 9), int32] {
  %205 = fn (%var_11234: Tensor[(70, 9), float64]) -> Tensor[(70, 9), int32] {
    %199 = @func_5695() /* ty=(Tensor[(70, 9), float64], Tensor[(12, 5, 9), uint64], Tensor[(1408), float32], Tensor[(1408), float32]) */;
    %200 = %199.0;
    %201 = cast(%var_11234, dtype="int32") /* ty=Tensor[(70, 9), int32] */;
    %202 = shape_of(%200, dtype="int32") /* ty=Tensor[(2), int32] */;
    %203 = cast(%200, dtype="int32") /* ty=Tensor[(70, 9), int32] */;
    %204 = dyn.reshape(%201, %202, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    left_shift(%203, %204) /* ty=Tensor[(70, 9), int32] */
  };
  %205(%var_11248) /* ty=Tensor[(70, 9), int32] */
}

def @func_11424() -> (Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(420), float64], Tensor[(60), int64], Tensor[(60), int64], Tensor[(60), int64]) {
  %217 = fn () -> (Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(420), float64], Tensor[(60), int64], Tensor[(60), int64], Tensor[(60), int64]) {
    %206 = @func_8624() /* ty=(Tensor[(60), int64], Tensor[(70, 9), float64]) */;
    %207 = @func_6753() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
    %208 = @func_4096() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64]) */;
    %209 = @func_4554() /* ty=(Tensor[(60), int64], Tensor[(420), float64]) */;
    %210 = %206.0;
    %211 = %207.2;
    %212 = %208.1;
    %213 = %209.1;
    %214 = @func_5168() /* ty=Tensor[(60), int64] */;
    %215 = @func_5168() /* ty=Tensor[(60), int64] */;
    %216 = @func_2128() /* ty=Tensor[(60), int64] */;
    (%210, %211, %212, %213, %214, %215, %216)
  };
  %217() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(420), float64], Tensor[(60), int64], Tensor[(60), int64], Tensor[(60), int64]) */
}

def @func_9198(%var_9197: Tensor[(2, 8, 10), float32]) -> (Tensor[(15, 4), int64], Tensor[(1408), float32], Tensor[(6), float64], Tensor[(2, 8, 10), int32], Tensor[(2, 8, 10), float32]) {
  %232 = fn (%var_9138: Tensor[(2, 8, 10), float32]) -> (Tensor[(15, 4), int64], Tensor[(1408), float32], Tensor[(6), float64], Tensor[(2, 8, 10), int32], Tensor[(2, 8, 10), float32]) {
    %218 = cast(meta[relay.Constant][13] /* ty=Tensor[(1408), float32] */, dtype="float32") /* ty=Tensor[(1408), float32] */;
    %219 = reshape(%218, newshape=[1408]) /* ty=Tensor[(1408), float32] */;
    %220 = @func_4700(%219) /* ty=(Tensor[(60), int64], Tensor[(15, 4), int64], Tensor[(1408), float32], Tensor[(60), int64]) */;
    %221 = @func_6109() /* ty=(Tensor[(6), float64], Tensor[(8, 16, 11), bool], Tensor[(1408), float64]) */;
    %222 = cast(4.46763f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %223 = cast(%var_9138, dtype="float32") /* ty=Tensor[(2, 8, 10), float32] */;
    %224 = power(%222, %223) /* ty=Tensor[(2, 8, 10), float32] */;
    %225 = cast(%224, dtype="int32") /* ty=Tensor[(2, 8, 10), int32] */;
    %226 = cast(4.46763f /* ty=float32 */, dtype="int32") /* ty=int32 */;
    %227 = cast(%224, dtype="float32") /* ty=Tensor[(2, 8, 10), float32] */;
    %228 = %220.1;
    %229 = %221.0;
    %230 = right_shift(%225, %226) /* ty=Tensor[(2, 8, 10), int32] */;
    %231 = cosh(%227) /* ty=Tensor[(2, 8, 10), float32] */;
    (%228, meta[relay.Constant][13] /* ty=Tensor[(1408), float32] */, %229, %230, %231)
  };
  %232(%var_9197) /* ty=(Tensor[(15, 4), int64], Tensor[(1408), float32], Tensor[(6), float64], Tensor[(2, 8, 10), int32], Tensor[(2, 8, 10), float32]) */
}

def @func_2189(%var_2188: Tensor[(630), float32]) -> (Tensor[(12, 5, 9), float32], Tensor[(420), float64], Tensor[(90), float32], Tensor[(630), float32], Tensor[(420), float64], Tensor[(12, 5, 9), float32]) {
  %243 = fn (%var_2171: Tensor[(630), float32]) -> (Tensor[(12, 5, 9), float32], Tensor[(420), float64], Tensor[(90), float32], Tensor[(630), float32], Tensor[(420), float64], Tensor[(12, 5, 9), float32]) {
    %233 = cast(meta[relay.Constant][14] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
    %234 = cast(%var_2171, dtype="float32") /* ty=Tensor[(630), float32] */;
    %235 = cast(meta[relay.Constant][15] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
    %236 = reshape(%233, newshape=[1, 9, 10]) /* ty=Tensor[(1, 9, 10), float32] */;
    %237 = reshape(%234, newshape=[7, 9, 10]) /* ty=Tensor[(7, 9, 10), float32] */;
    %238 = reshape(%235, newshape=[420]) /* ty=Tensor[(420), float64] */;
    %239 = @func_1349(%236, %237, %238) /* ty=(Tensor[(7, 9, 10), float64], Tensor[(1, 9, 10), float32], Tensor[(420), float64], Tensor[(420), float64]) */;
    %240 = @func_1942() /* ty=Tensor[(12, 5, 9), float32] */;
    %241 = %239.2;
    %242 = @func_1942() /* ty=Tensor[(12, 5, 9), float32] */;
    (%240, %241, meta[relay.Constant][14] /* ty=Tensor[(90), float32] */, %var_2171, meta[relay.Constant][15] /* ty=Tensor[(420), float64] */, %242)
  };
  %243(%var_2188) /* ty=(Tensor[(12, 5, 9), float32], Tensor[(420), float64], Tensor[(90), float32], Tensor[(630), float32], Tensor[(420), float64], Tensor[(12, 5, 9), float32]) */
}

def @func_1388(%var_1387: Tensor[(3, 2), float64]) -> (Tensor[(3, 2), float64],) {
  %246 = fn (%var_1379: Tensor[(3, 2), float64]) -> (Tensor[(3, 2), float64],) {
    %244 = cast(%var_1379, dtype="float64") /* ty=Tensor[(3, 2), float64] */;
    %245 = log10(%244) /* ty=Tensor[(3, 2), float64] */;
    (%245,)
  };
  %246(%var_1387) /* ty=(Tensor[(3, 2), float64],) */
}

def @func_6412() -> (Tensor[(60), int64], Tensor[(12, 5, 9), float64]) {
  %249 = fn () -> (Tensor[(60), int64], Tensor[(12, 5, 9), float64]) {
    %247 = @func_2128() /* ty=Tensor[(60), int64] */;
    %248 = @func_874() /* ty=Tensor[(12, 5, 9), float64] */;
    (%247, %248)
  };
  %249() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */
}

def @func_7265(%var_7262: Tensor[(156), float64], %var_7263: Tensor[(420), float64], %var_7264: Tensor[(528, 2), float32]) -> (Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(9, 60), float64], Tensor[(156), float64], Tensor[(60), int64], Tensor[(60), int64], Tensor[(12, 5, 7), float64], Tensor[(420), float64], Tensor[(352, 4), float32], Tensor[(11, 16, 6), float64], Tensor[(528, 2), float32]) {
  %274 = fn (%var_7228: Tensor[(156), float64], %var_7252: Tensor[(420), float64], %var_7256: Tensor[(528, 2), float32]) -> (Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(9, 60), float64], Tensor[(156), float64], Tensor[(60), int64], Tensor[(60), int64], Tensor[(12, 5, 7), float64], Tensor[(420), float64], Tensor[(352, 4), float32], Tensor[(11, 16, 6), float64], Tensor[(528, 2), float32]) {
    %250 = @func_1774() /* ty=(Tensor[(12, 5, 9), float64],) */;
    %251 = cast(%var_7228, dtype="float64") /* ty=Tensor[(156), float64] */;
    %252 = %250.0;
    %253 = cast(%252, dtype="float64") /* ty=Tensor[(12, 5, 9), float64] */;
    %254 = reshape(%251, newshape=[6, 2, 13]) /* ty=Tensor[(6, 2, 13), float64] */;
    %255 = reshape(%253, newshape=[9, 60]) /* ty=Tensor[(9, 60), float64] */;
    %256 = @func_6986(%254, %255) /* ty=(Tensor[(6, 2, 13), float64], Tensor[(12, 5, 9), bool], Tensor[(9, 60), float64]) */;
    %257 = @func_5772() /* ty=(Tensor[(6), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
    %258 = cast(%252, dtype="float64") /* ty=Tensor[(12, 5, 9), float64] */;
    %259 = reshape(%258, newshape=[540]) /* ty=Tensor[(540), float64] */;
    %260 = @func_3429(%259) /* ty=(Tensor[(60), int64], Tensor[(60), int64], Tensor[(540), float64]) */;
    %261 = cast(%var_7252, dtype="float64") /* ty=Tensor[(420), float64] */;
    %262 = cast(meta[relay.Constant][16] /* ty=Tensor[(352, 4), float32] */, dtype="float32") /* ty=Tensor[(352, 4), float32] */;
    %263 = reshape(%261, newshape=[12, 5, 7]) /* ty=Tensor[(12, 5, 7), float64] */;
    %264 = reshape(%262, newshape=[1408]) /* ty=Tensor[(1408), float32] */;
    %265 = @func_775(%263, %264) /* ty=(Tensor[(12, 5, 7), float64], Tensor[(2, 6, 5), int64], Tensor[(15, 4), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(8, 16, 11), bool], Tensor[(1408), float32]) */;
    %266 = cast(%var_7256, dtype="float32") /* ty=Tensor[(528, 2), float32] */;
    %267 = reshape(%266, newshape=[11, 16, 6]) /* ty=Tensor[(11, 16, 6), float32] */;
    %268 = @func_3269() /* ty=Tensor[(60), int64] */;
    %269 = %256.2;
    %270 = %257.1;
    %271 = %260.0;
    %272 = %265.0;
    %273 = @func_5993(%267) /* ty=Tensor[(11, 16, 6), float64] */;
    (%252, %268, %269, %var_7228, %270, %271, %272, %var_7252, meta[relay.Constant][16] /* ty=Tensor[(352, 4), float32] */, %273, %var_7256)
  };
  %274(%var_7262, %var_7263, %var_7264) /* ty=(Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(9, 60), float64], Tensor[(156), float64], Tensor[(60), int64], Tensor[(60), int64], Tensor[(12, 5, 7), float64], Tensor[(420), float64], Tensor[(352, 4), float32], Tensor[(11, 16, 6), float64], Tensor[(528, 2), float32]) */
}

def @func_3648() -> (Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(60), int64]) {
  %279 = fn () -> (Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(60), int64]) {
    %275 = @func_1792() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64]) */;
    %276 = @func_874() /* ty=Tensor[(12, 5, 9), float64] */;
    %277 = %275.0;
    %278 = @func_2860() /* ty=Tensor[(60), int64] */;
    (%276, %277, %278)
  };
  %279() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(60), int64]) */
}

def @func_1457(%var_1456: Tensor[(11, 7, 1), float64]) -> Tensor[(11, 7, 1), float64] {
  %281 = fn (%var_1433: Tensor[(11, 7, 1), float64]) -> Tensor[(11, 7, 1), float64] {
    %280 = cast(%var_1433, dtype="float64") /* ty=Tensor[(11, 7, 1), float64] */;
    cosh(%280) /* ty=Tensor[(11, 7, 1), float64] */
  };
  %281(%var_1456) /* ty=Tensor[(11, 7, 1), float64] */
}

def @func_3533() -> (Tensor[(8, 16, 11), float32], Tensor[(60), int64], Tensor[(12, 5, 9), float64]) {
  %282 = @func_3497() /* ty=(Tensor[(60), float32], Tensor[(8, 16, 11), float32], Tensor[(432), int64], Tensor[(420, 1), float64]) */;
  %283 = %282.1;
  %284 = cast(%283, dtype="float32") /* ty=Tensor[(8, 16, 11), float32] */;
  %285 = acos(%284) /* ty=Tensor[(8, 16, 11), float32] */;
  %286 = @func_2128() /* ty=Tensor[(60), int64] */;
  %287 = @func_2433() /* ty=Tensor[(12, 5, 9), float64] */;
  (%285, %286, %287)
}

def @func_10533() -> (Tensor[(60), int64], Tensor[(14, 14, 3), float32], Tensor[(12, 5, 9), bool], Tensor[(18, 30), float64], Tensor[(7, 84), uint16]) {
  %288 = @func_10198() /* ty=(Tensor[(60), int64], Tensor[(11, 16, 6), float64], Tensor[(1056), float32]) */;
  %289 = cast(meta[relay.Constant][17] /* ty=Tensor[(7, 84), uint16] */, dtype="uint16") /* ty=Tensor[(7, 84), uint16] */;
  %290 = cast(meta[relay.Constant][17] /* ty=Tensor[(7, 84), uint16] */, dtype="uint16") /* ty=Tensor[(7, 84), uint16] */;
  %291 = reshape(%289, newshape=[14, 14, 3]) /* ty=Tensor[(14, 14, 3), uint16] */;
  %292 = reshape(%290, newshape=[14, 14, 3]) /* ty=Tensor[(14, 14, 3), uint16] */;
  %293 = @func_9071(%291, %292) /* ty=(Tensor[(14, 14, 3), bool], Tensor[(14, 14, 3), float32], Tensor[(12, 5, 9), float64]) */;
  %294 = cast(meta[relay.Constant][18] /* ty=Tensor[(18, 30), float64] */, dtype="float64") /* ty=Tensor[(18, 30), float64] */;
  %295 = reshape(%294, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %296 = @func_7340(%295) /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), bool], Tensor[(540), float64]) */;
  %297 = cast(meta[relay.Constant][17] /* ty=Tensor[(7, 84), uint16] */, dtype="float32") /* ty=Tensor[(7, 84), float32] */;
  %298 = atanh(%297) /* ty=Tensor[(7, 84), float32] */;
  %299 = cast(meta[relay.Constant][17] /* ty=Tensor[(7, 84), uint16] */, dtype="uint16") /* ty=Tensor[(7, 84), uint16] */;
  %300 = shape_of(%298, dtype="int32") /* ty=Tensor[(2), int32] */;
  %301 = cast(%298, dtype="uint16") /* ty=Tensor[(7, 84), uint16] */;
  %302 = dyn.reshape(%299, %300, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %303 = %288.0;
  %304 = %293.1;
  %305 = %296.1;
  %306 = right_shift(%301, %302) /* ty=Tensor[(7, 84), uint16] */;
  (%303, %304, %305, meta[relay.Constant][18] /* ty=Tensor[(18, 30), float64] */, %306)
}

def @func_3889() -> (Tensor[(60), int64],) {
  %309 = fn () -> (Tensor[(60), int64],) {
    %307 = @func_2798() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(70, 6), float64], Tensor[(8, 16, 11), bool], Tensor[(1408), float32], Tensor[(12, 5, 9), float64]) */;
    %308 = %307.1;
    (%308,)
  };
  %309() /* ty=(Tensor[(60), int64],) */
}

def @func_8685(%var_8679: Tensor[(1408), float32]) -> (Tensor[(60), int64], Tensor[(8, 16, 11), bool], Tensor[(1408), float32]) {
  %310 = cast(%var_8679, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %311 = cast(%var_8679, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %312 = reshape(%310, newshape=[8, 16, 11]) /* ty=Tensor[(8, 16, 11), float32] */;
  %313 = reshape(%311, newshape=[8, 16, 11]) /* ty=Tensor[(8, 16, 11), float32] */;
  %314 = @func_3269() /* ty=Tensor[(60), int64] */;
  %315 = @func_92(%312, %313) /* ty=Tensor[(8, 16, 11), bool] */;
  (%314, %315, %var_8679)
}

def @func_9867() -> Tensor[(60), int64] {
  @func_9865() /* ty=Tensor[(60), int64] */
}

def @func_5907() -> (Tensor[(60), int64],) {
  @func_5905() /* ty=(Tensor[(60), int64],) */
}

def @func_7462() -> (Tensor[(1408), float32], Tensor[(60), int64]) {
  @func_7460() /* ty=(Tensor[(1408), float32], Tensor[(60), int64]) */
}

def @func_9719(%var_9717: Tensor[(60), int64]) -> (Tensor[(12, 5, 9), uint64], Tensor[(2, 6, 5), int64], Tensor[(60), int64]) {
  @func_9716(%var_9717) /* ty=(Tensor[(12, 5, 9), uint64], Tensor[(2, 6, 5), int64], Tensor[(60), int64]) */
}

def @func_8219() -> (Tensor[(60), int64],) {
  %318 = fn () -> (Tensor[(60), int64],) {
    %316 = @func_1206() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(60), int64]) */;
    %317 = %316.2;
    (%317,)
  };
  %318() /* ty=(Tensor[(60), int64],) */
}

def @func_9108() -> Tensor[(12, 5, 9), float64] {
  %320 = fn () -> Tensor[(12, 5, 9), float64] {
    %319 = @func_2798() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(70, 6), float64], Tensor[(8, 16, 11), bool], Tensor[(1408), float32], Tensor[(12, 5, 9), float64]) */;
    %319.6
  };
  %320() /* ty=Tensor[(12, 5, 9), float64] */
}

def @func_2274(%var_2265: Tensor[(12, 5, 9), float64]) -> (Tensor[(12, 5, 9), bool], Tensor[(12, 5, 9), float64]) {
  %321 = @func_1774() /* ty=(Tensor[(12, 5, 9), float64],) */;
  %322 = %321.0;
  %323 = cast(%var_2265, dtype="bool") /* ty=Tensor[(12, 5, 9), bool] */;
  %324 = shape_of(%322, dtype="int32") /* ty=Tensor[(3), int32] */;
  %325 = cast(%322, dtype="bool") /* ty=Tensor[(12, 5, 9), bool] */;
  %326 = dyn.reshape(%323, %324, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %327 = @func_2250() /* ty=(Tensor[(12, 5, 9), float64],) */;
  %328 = logical_and(%325, %326) /* ty=Tensor[(12, 5, 9), bool] */;
  %329 = %327.0;
  (%328, %329)
}

def @func_9796() -> Tensor[(60), int64] {
  %330 = @func_6675() /* ty=(Tensor[(60), int64],) */;
  %330.0
}

def @func_8405(%var_8403: Tensor[(3, 16, 7), float64]) -> (Tensor[(3, 16, 7), float64], Tensor[(12, 5, 9), float64]) {
  @func_8402(%var_8403) /* ty=(Tensor[(3, 16, 7), float64], Tensor[(12, 5, 9), float64]) */
}

def @func_2026(%var_2024: Tensor[(630), float32]) -> (Tensor[(60), int64], Tensor[(11, 7, 1), float64], Tensor[(77), float64], Tensor[(60), int64], Tensor[(420), float64], Tensor[(10, 42), float64], Tensor[(630), float32]) {
  @func_2023(%var_2024) /* ty=(Tensor[(60), int64], Tensor[(11, 7, 1), float64], Tensor[(77), float64], Tensor[(60), int64], Tensor[(420), float64], Tensor[(10, 42), float64], Tensor[(630), float32]) */
}

def @func_9523() -> (Tensor[(12, 5, 9), bool],) {
  %331 = @func_4318() /* ty=(Tensor[(12, 5, 9), bool],) */;
  %332 = %331.0;
  (%332,)
}

def @func_10712() -> Tensor[(6), float64] {
  %333 = @func_5535() /* ty=(Tensor[(6), float64], Tensor[(420), float64], Tensor[(630), float32]) */;
  %333.0
}

def @func_2360(%var_2358: Tensor[(420), float64]) -> (Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(8, 16, 11), bool], Tensor[(420), float64], Tensor[(352, 4), float32]) {
  @func_2357(%var_2358) /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(8, 16, 11), bool], Tensor[(420), float64], Tensor[(352, 4), float32]) */
}

def @func_3002(%var_3001: Tensor[(1408), float32]) -> (Tensor[(60), int64], Tensor[(15, 4), int64], Tensor[(5, 84), float64], Tensor[(1408), float32]) {
  %346 = fn (%var_2993: Tensor[(1408), float32]) -> (Tensor[(60), int64], Tensor[(15, 4), int64], Tensor[(5, 84), float64], Tensor[(1408), float32]) {
    %334 = cast(meta[relay.Constant][19] /* ty=Tensor[(5, 84), float64] */, dtype="float64") /* ty=Tensor[(5, 84), float64] */;
    %335 = cast(meta[relay.Constant][20] /* ty=Tensor[(1408), float32] */, dtype="float32") /* ty=Tensor[(1408), float32] */;
    %336 = reshape(%334, newshape=[12, 5, 7]) /* ty=Tensor[(12, 5, 7), float64] */;
    %337 = reshape(%335, newshape=[1408]) /* ty=Tensor[(1408), float32] */;
    %338 = @func_775(%336, %337) /* ty=(Tensor[(12, 5, 7), float64], Tensor[(2, 6, 5), int64], Tensor[(15, 4), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(8, 16, 11), bool], Tensor[(1408), float32]) */;
    %339 = cast(%var_2993, dtype="float32") /* ty=Tensor[(1408), float32] */;
    %340 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(1408), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %341 = cast(meta[relay.Constant][20] /* ty=Tensor[(1408), float32] */, dtype="float32") /* ty=Tensor[(1408), float32] */;
    %342 = dyn.reshape(%339, %340, newshape=[]) /* ty=Tensor[(?), float32] */;
    %343 = @func_1511() /* ty=Tensor[(60), int64] */;
    %344 = %338.2;
    %345 = divide(%341, %342) /* ty=Tensor[(1408), float32] */;
    (%343, %344, meta[relay.Constant][19] /* ty=Tensor[(5, 84), float64] */, %345)
  };
  %346(%var_3001) /* ty=(Tensor[(60), int64], Tensor[(15, 4), int64], Tensor[(5, 84), float64], Tensor[(1408), float32]) */
}

def @func_974(%var_971: Tensor[(9, 12, 4), int64], %var_972: Tensor[(9, 12, 4), int64], %var_973: Tensor[(420), float64]) -> (Tensor[(9, 12, 4), int64], Tensor[(1408), float32], Tensor[(2, 6, 5), int64], Tensor[(420), float64], Tensor[(8, 16, 11), float32]) {
  %365 = fn (%var_952: Tensor[(9, 12, 4), int64], %var_953: Tensor[(9, 12, 4), int64], %var_965: Tensor[(420), float64]) -> (Tensor[(9, 12, 4), int64], Tensor[(1408), float32], Tensor[(2, 6, 5), int64], Tensor[(420), float64], Tensor[(8, 16, 11), float32]) {
    %347 = cast(%var_953, dtype="int64") /* ty=Tensor[(9, 12, 4), int64] */;
    %348 = shape_of(%var_952, dtype="int32") /* ty=Tensor[(3), int32] */;
    %349 = cast(%var_952, dtype="int64") /* ty=Tensor[(9, 12, 4), int64] */;
    %350 = dyn.reshape(%347, %348, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %351 = cast(%var_965, dtype="float64") /* ty=Tensor[(420), float64] */;
    %352 = cast(meta[relay.Constant][21] /* ty=Tensor[(1408), float32] */, dtype="float32") /* ty=Tensor[(1408), float32] */;
    %353 = reshape(%351, newshape=[12, 5, 7]) /* ty=Tensor[(12, 5, 7), float64] */;
    %354 = reshape(%352, newshape=[1408]) /* ty=Tensor[(1408), float32] */;
    %355 = @func_775(%353, %354) /* ty=(Tensor[(12, 5, 7), float64], Tensor[(2, 6, 5), int64], Tensor[(15, 4), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(8, 16, 11), bool], Tensor[(1408), float32]) */;
    %356 = cast(meta[relay.Constant][21] /* ty=Tensor[(1408), float32] */, dtype="float32") /* ty=Tensor[(1408), float32] */;
    %357 = cast(meta[relay.Constant][21] /* ty=Tensor[(1408), float32] */, dtype="float32") /* ty=Tensor[(1408), float32] */;
    %358 = reshape(%356, newshape=[8, 16, 11]) /* ty=Tensor[(8, 16, 11), float32] */;
    %359 = reshape(%357, newshape=[8, 16, 11]) /* ty=Tensor[(8, 16, 11), float32] */;
    %360 = @func_92(%358, %359) /* ty=Tensor[(8, 16, 11), bool] */;
    %361 = cast(%360, dtype="float32") /* ty=Tensor[(8, 16, 11), float32] */;
    %362 = maximum(%349, %350) /* ty=Tensor[(9, 12, 4), int64] */;
    %363 = %355.6;
    %364 = sqrt(%361) /* ty=Tensor[(8, 16, 11), float32] */;
    (%362, meta[relay.Constant][21] /* ty=Tensor[(1408), float32] */, %363, %var_965, %364)
  };
  %365(%var_971, %var_972, %var_973) /* ty=(Tensor[(9, 12, 4), int64], Tensor[(1408), float32], Tensor[(2, 6, 5), int64], Tensor[(420), float64], Tensor[(8, 16, 11), float32]) */
}

def @func_8362() -> (Tensor[(60), int64],) {
  %368 = fn () -> (Tensor[(60), int64],) {
    %366 = @func_3736() /* ty=(Tensor[(12, 5, 9), float32], Tensor[(420), float64], Tensor[(60), int64], Tensor[(2, 6, 5), int64], Tensor[(420), float64]) */;
    %367 = %366.2;
    (%367,)
  };
  %368() /* ty=(Tensor[(60), int64],) */
}

def @func_6553(%var_6551: Tensor[(1408), float32], %var_6552: Tensor[(1408), float32]) -> (Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(60), float32], Tensor[(1408), uint8], Tensor[(60), int64], Tensor[(60), int64], Tensor[(12, 5, 9), float64]) {
  @func_6549(%var_6551, %var_6552) /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(60), float32], Tensor[(1408), uint8], Tensor[(60), int64], Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */
}

def @func_9772() -> (Tensor[(60), int64],) {
  %369 = @func_5475() /* ty=Tensor[(60), int64] */;
  (%369,)
}

def @func_9358() -> Tensor[(60), int64] {
  %370 = @func_8703() /* ty=(Tensor[(60), int64],) */;
  %370.0
}

def @func_7576(%var_7574: Tensor[(12, 4, 8), float64]) -> (Tensor[(12, 4, 8), float64],) {
  @func_7573(%var_7574) /* ty=(Tensor[(12, 4, 8), float64],) */
}

def @func_2252() -> (Tensor[(12, 5, 9), float64],) {
  @func_2250() /* ty=(Tensor[(12, 5, 9), float64],) */
}

def @func_5448() -> (Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), uint64]) {
  %371 = @func_4096() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64]) */;
  %372 = @func_2220() /* ty=Tensor[(12, 5, 9), float64] */;
  %373 = cast(%372, dtype="float64") /* ty=Tensor[(12, 5, 9), float64] */;
  %374 = atanh(%373) /* ty=Tensor[(12, 5, 9), float64] */;
  %375 = cast(%372, dtype="uint64") /* ty=Tensor[(12, 5, 9), uint64] */;
  %376 = shape_of(%374, dtype="int32") /* ty=Tensor[(3), int32] */;
  %377 = cast(%374, dtype="uint64") /* ty=Tensor[(12, 5, 9), uint64] */;
  %378 = dyn.reshape(%375, %376, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %379 = @func_1511() /* ty=Tensor[(60), int64] */;
  %380 = %371.1;
  %381 = left_shift(%377, %378) /* ty=Tensor[(12, 5, 9), uint64] */;
  (%379, %380, %381)
}

def @func_7902(%var_7859: Tensor[(8, 7, 12), uint32], %var_7860: Tensor[(8, 7, 12), uint32], %var_7887: Tensor[(1408, 1), float32], %var_7891: Tensor[(96), uint8]) -> (Tensor[(8, 7, 12), uint32], Tensor[(8, 7, 12), float64], Tensor[(8, 7, 12), float32], Tensor[(15, 4), int64], Tensor[(1408, 1), float32], Tensor[(11, 7, 1), float64], Tensor[(96), uint8]) {
  %382 = cast(%var_7860, dtype="uint32") /* ty=Tensor[(8, 7, 12), uint32] */;
  %383 = shape_of(%var_7859, dtype="int32") /* ty=Tensor[(3), int32] */;
  %384 = cast(%var_7859, dtype="uint32") /* ty=Tensor[(8, 7, 12), uint32] */;
  %385 = dyn.reshape(%382, %383, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %386 = cast(%var_7860, dtype="float64") /* ty=Tensor[(8, 7, 12), float64] */;
  %387 = cast(%var_7860, dtype="float32") /* ty=Tensor[(8, 7, 12), float32] */;
  %388 = cast(%var_7887, dtype="float32") /* ty=Tensor[(1408, 1), float32] */;
  %389 = reshape(%388, newshape=[1408]) /* ty=Tensor[(1408), float32] */;
  %390 = @func_4700(%389) /* ty=(Tensor[(60), int64], Tensor[(15, 4), int64], Tensor[(1408), float32], Tensor[(60), int64]) */;
  %391 = cast(%var_7891, dtype="uint8") /* ty=Tensor[(96), uint8] */;
  %392 = reshape(%391, newshape=[3, 16, 2]) /* ty=Tensor[(3, 16, 2), uint8] */;
  %393 = @func_2632(%392) /* ty=(Tensor[(11, 7, 1), float64], Tensor[(630), float32], Tensor[(3, 16, 2), bool], Tensor[(420), float64], Tensor[(420), float64], Tensor[(1408, 1), float32]) */;
  %394 = bitwise_or(%384, %385) /* ty=Tensor[(8, 7, 12), uint32] */;
  %395 = log(%386) /* ty=Tensor[(8, 7, 12), float64] */;
  %396 = acos(%387) /* ty=Tensor[(8, 7, 12), float32] */;
  %397 = %390.1;
  %398 = %393.0;
  (%394, %395, %396, %397, %var_7887, %398, %var_7891)
}

def @func_6110() -> (Tensor[(6), float64], Tensor[(8, 16, 11), bool], Tensor[(1408), float64]) {
  %410 = fn () -> (Tensor[(6), float64], Tensor[(8, 16, 11), bool], Tensor[(1408), float64]) {
    %399 = @func_5772() /* ty=(Tensor[(6), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
    %400 = cast(meta[relay.Constant][22] /* ty=Tensor[(1408), float32] */, dtype="float32") /* ty=Tensor[(1408), float32] */;
    %401 = cast(meta[relay.Constant][22] /* ty=Tensor[(1408), float32] */, dtype="float32") /* ty=Tensor[(1408), float32] */;
    %402 = reshape(%400, newshape=[8, 16, 11]) /* ty=Tensor[(8, 16, 11), float32] */;
    %403 = reshape(%401, newshape=[8, 16, 11]) /* ty=Tensor[(8, 16, 11), float32] */;
    %404 = cast(meta[relay.Constant][22] /* ty=Tensor[(1408), float32] */, dtype="float64") /* ty=Tensor[(1408), float64] */;
    %405 = log(%404) /* ty=Tensor[(1408), float64] */;
    %406 = cast(%405, dtype="float64") /* ty=Tensor[(1408), float64] */;
    %407 = %399.0;
    %408 = @func_92(%402, %403) /* ty=Tensor[(8, 16, 11), bool] */;
    %409 = asinh(%406) /* ty=Tensor[(1408), float64] */;
    (%407, %408, %409)
  };
  %410() /* ty=(Tensor[(6), float64], Tensor[(8, 16, 11), bool], Tensor[(1408), float64]) */
}

def @func_1916() -> Tensor[(60), int64] {
  %412 = fn () -> Tensor[(60), int64] {
    %411 = @func_1037() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(2, 6, 5), int64], Tensor[(60), int64]) */;
    %411.2
  };
  %412() /* ty=Tensor[(60), int64] */
}

def @func_9005() -> Tensor[(60), int64] {
  @func_9003() /* ty=Tensor[(60), int64] */
}

def @func_10382(%var_10380: Tensor[(10, 3, 7), uint32], %var_10381: Tensor[(10, 3, 7), uint32]) -> (Tensor[(10, 3, 7), uint32],) {
  %418 = fn (%var_10368: Tensor[(10, 3, 7), uint32], %var_10369: Tensor[(10, 3, 7), uint32]) -> (Tensor[(10, 3, 7), uint32],) {
    %413 = cast(%var_10369, dtype="uint32") /* ty=Tensor[(10, 3, 7), uint32] */;
    %414 = shape_of(%var_10368, dtype="int32") /* ty=Tensor[(3), int32] */;
    %415 = cast(%var_10368, dtype="uint32") /* ty=Tensor[(10, 3, 7), uint32] */;
    %416 = dyn.reshape(%413, %414, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %417 = right_shift(%415, %416) /* ty=Tensor[(10, 3, 7), uint32] */;
    (%417,)
  };
  %418(%var_10380, %var_10381) /* ty=(Tensor[(10, 3, 7), uint32],) */
}

def @func_3687() -> (Tensor[(60), int64], Tensor[(12, 5, 9), float64]) {
  %419 = @func_2250() /* ty=(Tensor[(12, 5, 9), float64],) */;
  %420 = @func_3269() /* ty=Tensor[(60), int64] */;
  %421 = %419.0;
  (%420, %421)
}

def @func_6602() -> (Tensor[(60), int64], Tensor[(12, 5, 9), float64]) {
  %422 = @func_4941() /* ty=(Tensor[(60), int64],) */;
  %423 = %422.0;
  %424 = @func_4639() /* ty=Tensor[(12, 5, 9), float64] */;
  (%423, %424)
}

def @func_4374(%var_4363: Tensor[(1408), float32]) -> (Tensor[(60), float32], Tensor[(1408), float32], Tensor[(1408), float32]) {
  %425 = @func_3154() /* ty=(Tensor[(60), float32],) */;
  %426 = cast(%var_4363, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %427 = reshape(%426, newshape=[1408]) /* ty=Tensor[(1408), float32] */;
  %428 = @func_3000(%427) /* ty=(Tensor[(60), int64], Tensor[(15, 4), int64], Tensor[(5, 84), float64], Tensor[(1408), float32]) */;
  %429 = %425.0;
  %430 = %428.3;
  (%429, %430, %var_4363)
}

def @func_8995() -> (Tensor[(60), int64], Tensor[(12, 5, 9), float32], Tensor[(12, 5, 9), float64]) {
  %439 = fn () -> (Tensor[(60), int64], Tensor[(12, 5, 9), float32], Tensor[(12, 5, 9), float64]) {
    %431 = @func_5661() /* ty=(Tensor[(60), int64],) */;
    %432 = @func_3945() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float32], Tensor[(70, 9), float32]) */;
    %433 = %432.0;
    %434 = cast(%433, dtype="float32") /* ty=Tensor[(12, 5, 9), float32] */;
    %435 = @func_4018() /* ty=(Tensor[(12, 5, 9), bool], Tensor[(12, 5, 9), float64]) */;
    %436 = %431.0;
    %437 = sin(%434) /* ty=Tensor[(12, 5, 9), float32] */;
    %438 = %435.1;
    (%436, %437, %438)
  };
  %439() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float32], Tensor[(12, 5, 9), float64]) */
}

def @func_10947() -> (Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(60), int64]) {
  %444 = fn () -> (Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(60), int64]) {
    %440 = @func_4554() /* ty=(Tensor[(60), int64], Tensor[(420), float64]) */;
    %441 = %440.0;
    %442 = @func_9954() /* ty=Tensor[(12, 5, 9), float64] */;
    %443 = @func_9003() /* ty=Tensor[(60), int64] */;
    (%441, %442, %443)
  };
  %444() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(60), int64]) */
}

def @func_5620() -> (Tensor[(6), float64],) {
  %447 = fn () -> (Tensor[(6), float64],) {
    %445 = @func_5535() /* ty=(Tensor[(6), float64], Tensor[(420), float64], Tensor[(630), float32]) */;
    %446 = %445.0;
    (%446,)
  };
  %447() /* ty=(Tensor[(6), float64],) */
}

def @func_3155() -> (Tensor[(60), float32],) {
  %452 = fn () -> (Tensor[(60), float32],) {
    %448 = @func_2798() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(70, 6), float64], Tensor[(8, 16, 11), bool], Tensor[(1408), float32], Tensor[(12, 5, 9), float64]) */;
    %449 = %448.1;
    %450 = cast(%449, dtype="float32") /* ty=Tensor[(60), float32] */;
    %451 = rsqrt(%450) /* ty=Tensor[(60), float32] */;
    (%451,)
  };
  %452() /* ty=(Tensor[(60), float32],) */
}

def @func_4606() -> Tensor[(60), int64] {
  @func_4604() /* ty=Tensor[(60), int64] */
}

def @func_11113(%var_11111: Tensor[(420), float64]) -> (Tensor[(6), float64], Tensor[(?, 9, 10), bool], Tensor[(420), float64], Tensor[(630), float32], Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(420), float64]) {
  @func_11110(%var_11111) /* ty=(Tensor[(6), float64], Tensor[(?, 9, 10), bool], Tensor[(420), float64], Tensor[(630), float32], Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(420), float64]) */
}

def @func_5894() -> (Tensor[(5, 7, 9), uint16], Tensor[(60), int64]) {
  %456 = fn () -> (Tensor[(5, 7, 9), uint16], Tensor[(60), int64]) {
    %453 = @func_3888() /* ty=(Tensor[(60), int64],) */;
    %454 = @func_4805() /* ty=Tensor[(5, 7, 9), uint16] */;
    %455 = %453.0;
    (%454, %455)
  };
  %456() /* ty=(Tensor[(5, 7, 9), uint16], Tensor[(60), int64]) */
}

def @func_10616(%var_10614: bool, %var_10615: Tensor[(6, 1), bool]) -> (Tensor[(6, 1), bool],) {
  @func_10612(%var_10614, %var_10615) /* ty=(Tensor[(6, 1), bool],) */
}

def @func_4837(%var_4835: Tensor[(420), float64]) -> (Tensor[(16, 13, 5), float64], Tensor[(1408), float32], Tensor[(432), int64], Tensor[(420), float64]) {
  %457 = cast(meta[relay.Constant][23] /* ty=Tensor[(16, 13, 5), float64] */, dtype="float64") /* ty=Tensor[(16, 13, 5), float64] */;
  %458 = cast(meta[relay.Constant][24] /* ty=Tensor[(432), int64] */, dtype="int64") /* ty=Tensor[(432), int64] */;
  %459 = cast(meta[relay.Constant][24] /* ty=Tensor[(432), int64] */, dtype="int64") /* ty=Tensor[(432), int64] */;
  %460 = cast(%var_4835, dtype="float64") /* ty=Tensor[(420), float64] */;
  %461 = reshape(%458, newshape=[9, 12, 4]) /* ty=Tensor[(9, 12, 4), int64] */;
  %462 = reshape(%459, newshape=[9, 12, 4]) /* ty=Tensor[(9, 12, 4), int64] */;
  %463 = reshape(%460, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %464 = @func_970(%461, %462, %463) /* ty=(Tensor[(9, 12, 4), int64], Tensor[(1408), float32], Tensor[(2, 6, 5), int64], Tensor[(420), float64], Tensor[(8, 16, 11), float32]) */;
  %465 = cosh(%457) /* ty=Tensor[(16, 13, 5), float64] */;
  %466 = %464.1;
  (%465, %466, meta[relay.Constant][24] /* ty=Tensor[(432), int64] */, %var_4835)
}

def @func_10247() -> (Tensor[(8, 12, 11), int32], Tensor[(60), int64], Tensor[(2, 6, 5), int64]) {
  %467 = @func_6753() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
  %468 = %467.1;
  %469 = cast(%468, dtype="int64") /* ty=Tensor[(60), int64] */;
  %470 = cast(%468, dtype="int64") /* ty=Tensor[(60), int64] */;
  %471 = reshape(%469, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
  %472 = reshape(%470, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
  %473 = @func_125(%471, %472) /* ty=(Tensor[(2, 6, 5), int64],) */;
  %474 = @func_5665() /* ty=Tensor[(8, 12, 11), int32] */;
  %475 = %473.0;
  (%474, %468, %475)
}

def @func_7532() -> (Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(3, 2), float64], Tensor[(6), float64]) {
  %476 = @func_5448() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), uint64]) */;
  %477 = @func_1792() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64]) */;
  %478 = %477.1;
  %479 = cast(%478, dtype="float64") /* ty=Tensor[(12, 5, 9), float64] */;
  %480 = cast(meta[relay.Constant][25] /* ty=Tensor[(6), float64] */, dtype="float64") /* ty=Tensor[(6), float64] */;
  %481 = reshape(%480, newshape=[3, 2]) /* ty=Tensor[(3, 2), float64] */;
  %482 = @func_1386(%481) /* ty=(Tensor[(3, 2), float64],) */;
  %483 = %476.0;
  %484 = asinh(%479) /* ty=Tensor[(12, 5, 9), float64] */;
  %485 = %482.0;
  (%483, %484, %485, meta[relay.Constant][25] /* ty=Tensor[(6), float64] */)
}

def @func_5168() -> Tensor[(60), int64] {
  @func_2545() /* ty=Tensor[(60), int64] */
}

def @func_8688(%var_8686: Tensor[(1408), float32]) -> (Tensor[(60), int64], Tensor[(8, 16, 11), bool], Tensor[(1408), float32]) {
  @func_8685(%var_8686) /* ty=(Tensor[(60), int64], Tensor[(8, 16, 11), bool], Tensor[(1408), float32]) */
}

def @func_8334(%var_8328: int16, %var_8329: Tensor[(13, 7, 10), int16], %var_8330: Tensor[(5, 126), float32], %var_8331: Tensor[(156), float64], %var_8332: Tensor[(1056), float32], %var_8333: Tensor[(77), float64]) -> (Tensor[(13, 7, 10), int16], Tensor[(13, 7, 10), float32], Tensor[(2, 6, 5), int64], Tensor[(420), float64], Tensor[(1408), float32], Tensor[(60), int64], Tensor[(5, 126), float32], Tensor[(528, 2), float32], Tensor[(156), float64], Tensor[(1056), float32], Tensor[(11, 7, 1), float64], Tensor[(77), float64]) {
  %516 = fn (%var_8281: int16, %var_8282: Tensor[(13, 7, 10), int16], %var_8297: Tensor[(5, 126), float32], %var_8302: Tensor[(156), float64], %var_8303: Tensor[(1056), float32], %var_8314: Tensor[(77), float64]) -> (Tensor[(13, 7, 10), int16], Tensor[(13, 7, 10), float32], Tensor[(2, 6, 5), int64], Tensor[(420), float64], Tensor[(1408), float32], Tensor[(60), int64], Tensor[(5, 126), float32], Tensor[(528, 2), float32], Tensor[(156), float64], Tensor[(1056), float32], Tensor[(11, 7, 1), float64], Tensor[(77), float64]) {
    %486 = cast(%var_8281, dtype="int16") /* ty=int16 */;
    %487 = cast(%var_8282, dtype="int16") /* ty=Tensor[(13, 7, 10), int16] */;
    %488 = cast(%var_8282, dtype="float32") /* ty=Tensor[(13, 7, 10), float32] */;
    %489 = cast(meta[relay.Constant][26] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
    %490 = cast(meta[relay.Constant][27] /* ty=Tensor[(1408), float32] */, dtype="float32") /* ty=Tensor[(1408), float32] */;
    %491 = reshape(%489, newshape=[12, 5, 7]) /* ty=Tensor[(12, 5, 7), float64] */;
    %492 = reshape(%490, newshape=[1408]) /* ty=Tensor[(1408), float32] */;
    %493 = @func_775(%491, %492) /* ty=(Tensor[(12, 5, 7), float64], Tensor[(2, 6, 5), int64], Tensor[(15, 4), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(8, 16, 11), bool], Tensor[(1408), float32]) */;
    %494 = cast(%var_8297, dtype="float32") /* ty=Tensor[(5, 126), float32] */;
    %495 = cast(meta[relay.Constant][26] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
    %496 = cast(meta[relay.Constant][27] /* ty=Tensor[(1408), float32] */, dtype="float32") /* ty=Tensor[(1408), float32] */;
    %497 = reshape(%494, newshape=[630]) /* ty=Tensor[(630), float32] */;
    %498 = reshape(%495, newshape=[420]) /* ty=Tensor[(420), float64] */;
    %499 = reshape(%496, newshape=[1408, 1]) /* ty=Tensor[(1408, 1), float32] */;
    %500 = @func_1590(%497, %498, %499) /* ty=(Tensor[(60), int64], Tensor[(630), float32], Tensor[(420), float64], Tensor[(?, 9, 10), bool], Tensor[(8, 16, 11), bool], Tensor[(1408, 1), float32], Tensor[(8, 16, 11), bool]) */;
    %501 = cast(%var_8302, dtype="float64") /* ty=Tensor[(156), float64] */;
    %502 = cast(meta[relay.Constant][26] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
    %503 = cast(%var_8303, dtype="float32") /* ty=Tensor[(1056), float32] */;
    %504 = reshape(%501, newshape=[156]) /* ty=Tensor[(156), float64] */;
    %505 = reshape(%502, newshape=[420]) /* ty=Tensor[(420), float64] */;
    %506 = reshape(%503, newshape=[528, 2]) /* ty=Tensor[(528, 2), float32] */;
    %507 = @func_7261(%504, %505, %506) /* ty=(Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(9, 60), float64], Tensor[(156), float64], Tensor[(60), int64], Tensor[(60), int64], Tensor[(12, 5, 7), float64], Tensor[(420), float64], Tensor[(352, 4), float32], Tensor[(11, 16, 6), float64], Tensor[(528, 2), float32]) */;
    %508 = cast(%var_8314, dtype="float64") /* ty=Tensor[(77), float64] */;
    %509 = reshape(%508, newshape=[11, 7, 1]) /* ty=Tensor[(11, 7, 1), float64] */;
    %510 = bitwise_xor(%486, %487) /* ty=Tensor[(13, 7, 10), int16] */;
    %511 = cosh(%488) /* ty=Tensor[(13, 7, 10), float32] */;
    %512 = %493.4;
    %513 = %500.0;
    %514 = %507.10;
    %515 = @func_1455(%509) /* ty=Tensor[(11, 7, 1), float64] */;
    (%510, %511, %512, meta[relay.Constant][26] /* ty=Tensor[(420), float64] */, meta[relay.Constant][27] /* ty=Tensor[(1408), float32] */, %513, %var_8297, %514, %var_8302, %var_8303, %515, %var_8314)
  };
  %516(%var_8328, %var_8329, %var_8330, %var_8331, %var_8332, %var_8333) /* ty=(Tensor[(13, 7, 10), int16], Tensor[(13, 7, 10), float32], Tensor[(2, 6, 5), int64], Tensor[(420), float64], Tensor[(1408), float32], Tensor[(60), int64], Tensor[(5, 126), float32], Tensor[(528, 2), float32], Tensor[(156), float64], Tensor[(1056), float32], Tensor[(11, 7, 1), float64], Tensor[(77), float64]) */
}

def @func_5774() -> (Tensor[(6), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64]) {
  @func_5772() /* ty=(Tensor[(6), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */
}

def @func_2277(%var_2275: Tensor[(12, 5, 9), float64]) -> (Tensor[(12, 5, 9), bool], Tensor[(12, 5, 9), float64]) {
  @func_2274(%var_2275) /* ty=(Tensor[(12, 5, 9), bool], Tensor[(12, 5, 9), float64]) */
}

def @func_3738() -> (Tensor[(12, 5, 9), float32], Tensor[(420), float64], Tensor[(60), int64], Tensor[(2, 6, 5), int64], Tensor[(420), float64]) {
  @func_3736() /* ty=(Tensor[(12, 5, 9), float32], Tensor[(420), float64], Tensor[(60), int64], Tensor[(2, 6, 5), int64], Tensor[(420), float64]) */
}

def @func_8625() -> (Tensor[(60), int64], Tensor[(70, 9), float64]) {
  %532 = fn () -> (Tensor[(60), int64], Tensor[(70, 9), float64]) {
    %517 = @func_3945() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float32], Tensor[(70, 9), float32]) */;
    %518 = %517.2;
    %519 = cast(%518, dtype="float32") /* ty=Tensor[(70, 9), float32] */;
    %520 = reshape(%519, newshape=[630]) /* ty=Tensor[(630), float32] */;
    %521 = @func_3876(%520) /* ty=(Tensor[(60), int64], Tensor[(420), float64], Tensor[(630), float32]) */;
    %522 = cast(%518, dtype="float64") /* ty=Tensor[(70, 9), float64] */;
    %523 = exp(%522) /* ty=Tensor[(70, 9), float64] */;
    %524 = cast(%518, dtype="float64") /* ty=Tensor[(70, 9), float64] */;
    %525 = shape_of(%523, dtype="int32") /* ty=Tensor[(2), int32] */;
    %526 = cast(%523, dtype="float64") /* ty=Tensor[(70, 9), float64] */;
    %527 = dyn.reshape(%524, %525, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %528 = maximum(%526, %527) /* ty=Tensor[(70, 9), float64] */;
    %529 = cast(%528, dtype="float64") /* ty=Tensor[(70, 9), float64] */;
    %530 = %521.0;
    %531 = asinh(%529) /* ty=Tensor[(70, 9), float64] */;
    (%530, %531)
  };
  %532() /* ty=(Tensor[(60), int64], Tensor[(70, 9), float64]) */
}

def @func_8469() -> (Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(60), int64], Tensor[(12, 5, 9), float32]) {
  %533 = @func_4190() /* ty=(Tensor[(420), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
  %534 = @func_2798() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(70, 6), float64], Tensor[(8, 16, 11), bool], Tensor[(1408), float32], Tensor[(12, 5, 9), float64]) */;
  %535 = @func_3888() /* ty=(Tensor[(60), int64],) */;
  %536 = @func_3945() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float32], Tensor[(70, 9), float32]) */;
  %537 = %533.2;
  %538 = %534.1;
  %539 = %535.0;
  %540 = %536.1;
  (%537, %538, %539, %540)
}

def @func_7460() -> (Tensor[(1408), float32], Tensor[(60), int64]) {
  %541 = @func_4787() /* ty=(Tensor[(420), float64], Tensor[(2, 6, 5), int64], Tensor[(1408), float32], Tensor[(60), int64]) */;
  %542 = @func_6675() /* ty=(Tensor[(60), int64],) */;
  %543 = %541.2;
  %544 = %542.0;
  (%543, %544)
}

def @func_6676() -> (Tensor[(60), int64],) {
  %547 = fn () -> (Tensor[(60), int64],) {
    %545 = @func_5905() /* ty=(Tensor[(60), int64],) */;
    %546 = %545.0;
    (%546,)
  };
  %547() /* ty=(Tensor[(60), int64],) */
}

def @func_11515() -> Tensor[(12, 5, 9), float64] {
  %549 = fn () -> Tensor[(12, 5, 9), float64] {
    %548 = @func_10946() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(60), int64]) */;
    %548.1
  };
  %549() /* ty=Tensor[(12, 5, 9), float64] */
}

def @func_2862() -> Tensor[(60), int64] {
  @func_2860() /* ty=Tensor[(60), int64] */
}

def @func_3063(%var_3061: Tensor[(77), float64]) -> (Tensor[(60), int64], Tensor[(60), int64], Tensor[(11, 7, 1), float64], Tensor[(77), float64]) {
  @func_3060(%var_3061) /* ty=(Tensor[(60), int64], Tensor[(60), int64], Tensor[(11, 7, 1), float64], Tensor[(77), float64]) */
}

def @func_3736() -> (Tensor[(12, 5, 9), float32], Tensor[(420), float64], Tensor[(60), int64], Tensor[(2, 6, 5), int64], Tensor[(420), float64]) {
  %550 = @func_2433() /* ty=Tensor[(12, 5, 9), float64] */;
  %551 = cast(%550, dtype="float32") /* ty=Tensor[(12, 5, 9), float32] */;
  %552 = @func_1874() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(420), float64], Tensor[(420), float64], Tensor[(1, 630), float32]) */;
  %553 = sqrt(%551) /* ty=Tensor[(12, 5, 9), float32] */;
  %554 = cast(%553, dtype="float64") /* ty=Tensor[(12, 5, 9), float64] */;
  %555 = reshape(%554, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %556 = @func_3429(%555) /* ty=(Tensor[(60), int64], Tensor[(60), int64], Tensor[(540), float64]) */;
  %557 = %556.0;
  %558 = cast(%557, dtype="int64") /* ty=Tensor[(60), int64] */;
  %559 = cast(%557, dtype="int64") /* ty=Tensor[(60), int64] */;
  %560 = reshape(%558, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
  %561 = reshape(%559, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
  %562 = @func_125(%560, %561) /* ty=(Tensor[(2, 6, 5), int64],) */;
  %563 = %552.2;
  %564 = cast(%563, dtype="float64") /* ty=Tensor[(420), float64] */;
  %565 = reshape(%564, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %566 = @func_2501(%565) /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(420), float64]) */;
  %567 = %562.0;
  %568 = %566.3;
  (%553, %563, %557, %567, %568)
}

def @func_1794() -> (Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64]) {
  @func_1792() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64]) */
}

def @func_6944() -> (Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(6), float64]) {
  %574 = fn () -> (Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(6), float64]) {
    %569 = @func_6753() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
    %570 = @func_5242() /* ty=(Tensor[(3, 2), float64], Tensor[(6), float64], Tensor[(60), int64], Tensor[(70, 9), float32], Tensor[(12, 5, 9), float64]) */;
    %571 = @func_5168() /* ty=Tensor[(60), int64] */;
    %572 = %569.0;
    %573 = %570.1;
    (%571, %572, %573)
  };
  %574() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(6), float64]) */
}

def @func_3326() -> (Tensor[(60), int64],) {
  %577 = fn () -> (Tensor[(60), int64],) {
    %575 = @func_1206() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(60), int64]) */;
    %576 = %575.2;
    (%576,)
  };
  %577() /* ty=(Tensor[(60), int64],) */
}

def @func_6755() -> (Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64]) {
  @func_6753() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */
}

def @func_2634(%var_2633: Tensor[(3, 16, 2), uint8]) -> (Tensor[(11, 7, 1), float64], Tensor[(630), float32], Tensor[(3, 16, 2), bool], Tensor[(420), float64], Tensor[(420), float64], Tensor[(1408, 1), float32]) {
  %600 = fn (%var_2595: Tensor[(3, 16, 2), uint8]) -> (Tensor[(11, 7, 1), float64], Tensor[(630), float32], Tensor[(3, 16, 2), bool], Tensor[(420), float64], Tensor[(420), float64], Tensor[(1408, 1), float32]) {
    %578 = cast(meta[relay.Constant][28] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
    %579 = reshape(%578, newshape=[630]) /* ty=Tensor[(630), float32] */;
    %580 = @func_2023(%579) /* ty=(Tensor[(60), int64], Tensor[(11, 7, 1), float64], Tensor[(77), float64], Tensor[(60), int64], Tensor[(420), float64], Tensor[(10, 42), float64], Tensor[(630), float32]) */;
    %581 = cast(%var_2595, dtype="float32") /* ty=Tensor[(3, 16, 2), float32] */;
    %582 = exp(%581) /* ty=Tensor[(3, 16, 2), float32] */;
    %583 = cast(meta[relay.Constant][29] /* ty=Tensor[(3, 16, 1), uint8] */, dtype="uint8") /* ty=Tensor[(3, 16, 1), uint8] */;
    %584 = cast(%var_2595, dtype="uint8") /* ty=Tensor[(3, 16, 2), uint8] */;
    %585 = bitwise_or(%583, %584) /* ty=Tensor[(3, 16, 2), uint8] */;
    %586 = cast(%585, dtype="bool") /* ty=Tensor[(3, 16, 2), bool] */;
    %587 = shape_of(%582, dtype="int32") /* ty=Tensor[(3), int32] */;
    %588 = cast(%582, dtype="bool") /* ty=Tensor[(3, 16, 2), bool] */;
    %589 = dyn.reshape(%586, %587, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %590 = cast(meta[relay.Constant][28] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
    %591 = cast(meta[relay.Constant][30] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
    %592 = cast(meta[relay.Constant][31] /* ty=Tensor[(1408, 1), float32] */, dtype="float32") /* ty=Tensor[(1408, 1), float32] */;
    %593 = reshape(%590, newshape=[630]) /* ty=Tensor[(630), float32] */;
    %594 = reshape(%591, newshape=[420]) /* ty=Tensor[(420), float64] */;
    %595 = reshape(%592, newshape=[1408, 1]) /* ty=Tensor[(1408, 1), float32] */;
    %596 = @func_1590(%593, %594, %595) /* ty=(Tensor[(60), int64], Tensor[(630), float32], Tensor[(420), float64], Tensor[(?, 9, 10), bool], Tensor[(8, 16, 11), bool], Tensor[(1408, 1), float32], Tensor[(8, 16, 11), bool]) */;
    %597 = %580.1;
    %598 = less(%588, %589) /* ty=Tensor[(3, 16, 2), bool] */;
    %599 = %596.2;
    (%597, meta[relay.Constant][28] /* ty=Tensor[(630), float32] */, %598, %599, meta[relay.Constant][30] /* ty=Tensor[(420), float64] */, meta[relay.Constant][31] /* ty=Tensor[(1408, 1), float32] */)
  };
  %600(%var_2633) /* ty=(Tensor[(11, 7, 1), float64], Tensor[(630), float32], Tensor[(3, 16, 2), bool], Tensor[(420), float64], Tensor[(420), float64], Tensor[(1408, 1), float32]) */
}

def @func_128(%var_126: Tensor[(2, 6, 5), int64], %var_127: Tensor[(2, 6, 5), int64]) -> (Tensor[(2, 6, 5), int64],) {
  %606 = fn (%var_118: Tensor[(2, 6, 5), int64], %var_119: Tensor[(2, 6, 5), int64]) -> (Tensor[(2, 6, 5), int64],) {
    %601 = cast(%var_119, dtype="int64") /* ty=Tensor[(2, 6, 5), int64] */;
    %602 = shape_of(%var_118, dtype="int32") /* ty=Tensor[(3), int32] */;
    %603 = cast(%var_118, dtype="int64") /* ty=Tensor[(2, 6, 5), int64] */;
    %604 = dyn.reshape(%601, %602, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %605 = right_shift(%603, %604) /* ty=Tensor[(2, 6, 5), int64] */;
    (%605,)
  };
  %606(%var_126, %var_127) /* ty=(Tensor[(2, 6, 5), int64],) */
}

def @func_2413(%var_2412: Tensor[(210, 2), float64]) -> (Tensor[(60), int64], Tensor[(420), float64], Tensor[(210, 2), float64]) {
  %612 = fn (%var_2404: Tensor[(210, 2), float64]) -> (Tensor[(60), int64], Tensor[(420), float64], Tensor[(210, 2), float64]) {
    %607 = cast(%var_2404, dtype="float64") /* ty=Tensor[(210, 2), float64] */;
    %608 = reshape(%607, newshape=[420]) /* ty=Tensor[(420), float64] */;
    %609 = @func_2357(%608) /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(8, 16, 11), bool], Tensor[(420), float64], Tensor[(352, 4), float32]) */;
    %610 = @func_1511() /* ty=Tensor[(60), int64] */;
    %611 = %609.3;
    (%610, %611, %var_2404)
  };
  %612(%var_2412) /* ty=(Tensor[(60), int64], Tensor[(420), float64], Tensor[(210, 2), float64]) */
}

def @func_3088(%var_3087: Tensor[(12, 5, 9), float64]) -> (Tensor[(12, 5, 9), uint8], Tensor[(60), int64]) {
  %621 = fn (%var_3077: Tensor[(12, 5, 9), float64]) -> (Tensor[(12, 5, 9), uint8], Tensor[(60), int64]) {
    %613 = @func_1792() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64]) */;
    %614 = %613.1;
    %615 = cast(%var_3077, dtype="uint8") /* ty=Tensor[(12, 5, 9), uint8] */;
    %616 = shape_of(%614, dtype="int32") /* ty=Tensor[(3), int32] */;
    %617 = cast(%614, dtype="uint8") /* ty=Tensor[(12, 5, 9), uint8] */;
    %618 = dyn.reshape(%615, %616, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %619 = bitwise_xor(%617, %618) /* ty=Tensor[(12, 5, 9), uint8] */;
    %620 = @func_1915() /* ty=Tensor[(60), int64] */;
    (%619, %620)
  };
  %621(%var_3087) /* ty=(Tensor[(12, 5, 9), uint8], Tensor[(60), int64]) */
}

def @func_6761() -> Tensor[(12, 5, 9), float64] {
  %623 = fn () -> Tensor[(12, 5, 9), float64] {
    %622 = @func_6753() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
    %622.0
  };
  %623() /* ty=Tensor[(12, 5, 9), float64] */
}

def @func_9935(%var_9923: Tensor[(8, 9), float32]) -> (Tensor[(8, 9), float32], Tensor[(12, 5, 9), float64]) {
  %624 = cast(%var_9923, dtype="float32") /* ty=Tensor[(8, 9), float32] */;
  %625 = @func_2250() /* ty=(Tensor[(12, 5, 9), float64],) */;
  %626 = log2(%624) /* ty=Tensor[(8, 9), float32] */;
  %627 = %625.0;
  (%626, %627)
}

def @func_4787() -> (Tensor[(420), float64], Tensor[(2, 6, 5), int64], Tensor[(1408), float32], Tensor[(60), int64]) {
  %628 = @func_4190() /* ty=(Tensor[(420), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
  %629 = %628.0;
  %630 = cast(%629, dtype="float64") /* ty=Tensor[(420), float64] */;
  %631 = cast(meta[relay.Constant][32] /* ty=Tensor[(1408), float32] */, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %632 = reshape(%630, newshape=[12, 5, 7]) /* ty=Tensor[(12, 5, 7), float64] */;
  %633 = reshape(%631, newshape=[1408]) /* ty=Tensor[(1408), float32] */;
  %634 = @func_775(%632, %633) /* ty=(Tensor[(12, 5, 7), float64], Tensor[(2, 6, 5), int64], Tensor[(15, 4), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(8, 16, 11), bool], Tensor[(1408), float32]) */;
  %635 = %634.4;
  %636 = @func_3364() /* ty=Tensor[(60), int64] */;
  (%629, %635, meta[relay.Constant][32] /* ty=Tensor[(1408), float32] */, %636)
}

def @func_5695() -> (Tensor[(70, 9), float64], Tensor[(12, 5, 9), uint64], Tensor[(1408), float32], Tensor[(1408), float32]) {
  %637 = @func_3945() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float32], Tensor[(70, 9), float32]) */;
  %638 = %637.2;
  %639 = cast(%638, dtype="float64") /* ty=Tensor[(70, 9), float64] */;
  %640 = @func_5448() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), uint64]) */;
  %641 = cast(meta[relay.Constant][33] /* ty=Tensor[(1408), float32] */, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %642 = reshape(%641, newshape=[1408]) /* ty=Tensor[(1408), float32] */;
  %643 = @func_4374(%642) /* ty=(Tensor[(60), float32], Tensor[(1408), float32], Tensor[(1408), float32]) */;
  %644 = erf(%639) /* ty=Tensor[(70, 9), float64] */;
  %645 = %640.2;
  %646 = %643.2;
  (%644, %645, %646, meta[relay.Constant][33] /* ty=Tensor[(1408), float32] */)
}

def @func_11206() -> (Tensor[(60), int64], Tensor[(60), int64]) {
  %649 = fn () -> (Tensor[(60), int64], Tensor[(60), int64]) {
    %647 = @func_9003() /* ty=Tensor[(60), int64] */;
    %648 = @func_1915() /* ty=Tensor[(60), int64] */;
    (%647, %648)
  };
  %649() /* ty=(Tensor[(60), int64], Tensor[(60), int64]) */
}

def @func_11328() -> (Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(60), int64]) {
  @func_11326() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(60), int64]) */
}

def @func_4019() -> (Tensor[(12, 5, 9), bool], Tensor[(12, 5, 9), float64]) {
  %659 = fn () -> (Tensor[(12, 5, 9), bool], Tensor[(12, 5, 9), float64]) {
    %650 = @func_2798() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(70, 6), float64], Tensor[(8, 16, 11), bool], Tensor[(1408), float32], Tensor[(12, 5, 9), float64]) */;
    %651 = %650.6;
    %652 = cast(meta[relay.Constant][34] /* ty=Tensor[(12, 5, 9), float64] */, dtype="bool") /* ty=Tensor[(12, 5, 9), bool] */;
    %653 = shape_of(%651, dtype="int32") /* ty=Tensor[(3), int32] */;
    %654 = cast(%651, dtype="bool") /* ty=Tensor[(12, 5, 9), bool] */;
    %655 = dyn.reshape(%652, %653, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %656 = @func_3471() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), bool]) */;
    %657 = equal(%654, %655) /* ty=Tensor[(12, 5, 9), bool] */;
    %658 = %656.0;
    (%657, %658)
  };
  %659() /* ty=(Tensor[(12, 5, 9), bool], Tensor[(12, 5, 9), float64]) */
}

def @func_8712() -> (Tensor[(60), int64],) {
  @func_8710() /* ty=(Tensor[(60), int64],) */
}

def @func_4919() -> (Tensor[(12, 5, 9), float64],) {
  @func_4917() /* ty=(Tensor[(12, 5, 9), float64],) */
}

def @func_7842(%var_7840: Tensor[(10, 63), float32], %var_7841: Tensor[(1408), float32]) -> (Tensor[(60), int64], Tensor[(12, 5, 9), float32], Tensor[(420), float64], Tensor[(10, 63), float32], Tensor[(8, 16, 11), bool], Tensor[(1408), float32]) {
  @func_7838(%var_7840, %var_7841) /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float32], Tensor[(420), float64], Tensor[(10, 63), float32], Tensor[(8, 16, 11), bool], Tensor[(1408), float32]) */
}

def @func_3246() -> (Tensor[(12, 5, 9), float64], Tensor[(420), float64], Tensor[(420), float64], Tensor[(1, 60), int64], Tensor[(12, 5, 9), uint8], Tensor[(60), int64], Tensor[(2, 6, 5), bool]) {
  @func_3244() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(420), float64], Tensor[(420), float64], Tensor[(1, 60), int64], Tensor[(12, 5, 9), uint8], Tensor[(60), int64], Tensor[(2, 6, 5), bool]) */
}

def @func_7838(%var_7820: Tensor[(10, 63), float32], %var_7832: Tensor[(1408), float32]) -> (Tensor[(60), int64], Tensor[(12, 5, 9), float32], Tensor[(420), float64], Tensor[(10, 63), float32], Tensor[(8, 16, 11), bool], Tensor[(1408), float32]) {
  %660 = @func_7532() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(3, 2), float64], Tensor[(6), float64]) */;
  %661 = @func_3945() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float32], Tensor[(70, 9), float32]) */;
  %662 = cast(%var_7820, dtype="float32") /* ty=Tensor[(10, 63), float32] */;
  %663 = reshape(%662, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %664 = @func_3876(%663) /* ty=(Tensor[(60), int64], Tensor[(420), float64], Tensor[(630), float32]) */;
  %665 = cast(%var_7832, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %666 = cast(%var_7832, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %667 = reshape(%665, newshape=[8, 16, 11]) /* ty=Tensor[(8, 16, 11), float32] */;
  %668 = reshape(%666, newshape=[8, 16, 11]) /* ty=Tensor[(8, 16, 11), float32] */;
  %669 = %660.0;
  %670 = %661.1;
  %671 = %664.1;
  %672 = @func_92(%667, %668) /* ty=Tensor[(8, 16, 11), bool] */;
  (%669, %670, %671, %var_7820, %672, %var_7832)
}

def @func_5536() -> (Tensor[(6), float64], Tensor[(420), float64], Tensor[(630), float32]) {
  %679 = fn () -> (Tensor[(6), float64], Tensor[(420), float64], Tensor[(630), float32]) {
    %673 = @func_5242() /* ty=(Tensor[(3, 2), float64], Tensor[(6), float64], Tensor[(60), int64], Tensor[(70, 9), float32], Tensor[(12, 5, 9), float64]) */;
    %674 = cast(meta[relay.Constant][35] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
    %675 = reshape(%674, newshape=[630]) /* ty=Tensor[(630), float32] */;
    %676 = @func_2023(%675) /* ty=(Tensor[(60), int64], Tensor[(11, 7, 1), float64], Tensor[(77), float64], Tensor[(60), int64], Tensor[(420), float64], Tensor[(10, 42), float64], Tensor[(630), float32]) */;
    %677 = %673.1;
    %678 = %676.4;
    (%677, %678, meta[relay.Constant][35] /* ty=Tensor[(630), float32] */)
  };
  %679() /* ty=(Tensor[(6), float64], Tensor[(420), float64], Tensor[(630), float32]) */
}

def @func_1512() -> Tensor[(60), int64] {
  %681 = fn () -> Tensor[(60), int64] {
    %680 = @func_1428() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
    %680.0
  };
  %681() /* ty=Tensor[(60), int64] */
}

def @func_4459() -> (Tensor[(60), int64],) {
  @func_4457() /* ty=(Tensor[(60), int64],) */
}

def @func_2222() -> Tensor[(12, 5, 9), float64] {
  @func_2220() /* ty=Tensor[(12, 5, 9), float64] */
}

def @func_9716(%var_9659: Tensor[(60), int64]) -> (Tensor[(12, 5, 9), uint64], Tensor[(2, 6, 5), int64], Tensor[(60), int64]) {
  %682 = @func_5695() /* ty=(Tensor[(70, 9), float64], Tensor[(12, 5, 9), uint64], Tensor[(1408), float32], Tensor[(1408), float32]) */;
  %683 = cast(%var_9659, dtype="int64") /* ty=Tensor[(60), int64] */;
  %684 = cast(%var_9659, dtype="int64") /* ty=Tensor[(60), int64] */;
  %685 = reshape(%683, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
  %686 = reshape(%684, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
  %687 = @func_125(%685, %686) /* ty=(Tensor[(2, 6, 5), int64],) */;
  %688 = %682.1;
  %689 = %687.0;
  (%688, %689, %var_9659)
}

def @func_1715(%var_1640: Tensor[(420), float64], %var_1693: Tensor[(630, 1), float32]) -> (Tensor[(12, 5, 9), float64], Tensor[(15, 4), int64], Tensor[(420), float64], Tensor[(1408), float32], Tensor[(?, 9, 10), bool], Tensor[(630, 1), float32]) {
  %690 = @func_1206() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(60), int64]) */;
  %691 = cast(%var_1640, dtype="float64") /* ty=Tensor[(420), float64] */;
  %692 = cast(meta[relay.Constant][36] /* ty=Tensor[(1408), float32] */, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %693 = reshape(%691, newshape=[12, 5, 7]) /* ty=Tensor[(12, 5, 7), float64] */;
  %694 = reshape(%692, newshape=[1408]) /* ty=Tensor[(1408), float32] */;
  %695 = @func_775(%693, %694) /* ty=(Tensor[(12, 5, 7), float64], Tensor[(2, 6, 5), int64], Tensor[(15, 4), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(8, 16, 11), bool], Tensor[(1408), float32]) */;
  %696 = cast(%var_1693, dtype="float32") /* ty=Tensor[(630, 1), float32] */;
  %697 = cast(%var_1640, dtype="float64") /* ty=Tensor[(420), float64] */;
  %698 = cast(meta[relay.Constant][36] /* ty=Tensor[(1408), float32] */, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %699 = reshape(%696, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %700 = reshape(%697, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %701 = reshape(%698, newshape=[1408, 1]) /* ty=Tensor[(1408, 1), float32] */;
  %702 = @func_1590(%699, %700, %701) /* ty=(Tensor[(60), int64], Tensor[(630), float32], Tensor[(420), float64], Tensor[(?, 9, 10), bool], Tensor[(8, 16, 11), bool], Tensor[(1408, 1), float32], Tensor[(8, 16, 11), bool]) */;
  %703 = %690.1;
  %704 = %695.2;
  %705 = %702.3;
  (%703, %704, %var_1640, meta[relay.Constant][36] /* ty=Tensor[(1408), float32] */, %705, %var_1693)
}

def @func_3060(%var_3057: Tensor[(77), float64]) -> (Tensor[(60), int64], Tensor[(60), int64], Tensor[(11, 7, 1), float64], Tensor[(77), float64]) {
  %706 = cast(%var_3057, dtype="float64") /* ty=Tensor[(77), float64] */;
  %707 = reshape(%706, newshape=[11, 7, 1]) /* ty=Tensor[(11, 7, 1), float64] */;
  %708 = @func_1511() /* ty=Tensor[(60), int64] */;
  %709 = @func_2128() /* ty=Tensor[(60), int64] */;
  %710 = @func_1455(%707) /* ty=Tensor[(11, 7, 1), float64] */;
  (%708, %709, %710, %var_3057)
}

def @func_7573(%var_7565: Tensor[(12, 4, 8), float64]) -> (Tensor[(12, 4, 8), float64],) {
  %711 = cast(%var_7565, dtype="float64") /* ty=Tensor[(12, 4, 8), float64] */;
  %712 = log10(%711) /* ty=Tensor[(12, 4, 8), float64] */;
  (%712,)
}

def @func_4377(%var_4375: Tensor[(1408), float32]) -> (Tensor[(60), float32], Tensor[(1408), float32], Tensor[(1408), float32]) {
  @func_4374(%var_4375) /* ty=(Tensor[(60), float32], Tensor[(1408), float32], Tensor[(1408), float32]) */
}

def @func_2718() -> (Tensor[(12, 5, 9), float64],) {
  %713 = @func_2220() /* ty=Tensor[(12, 5, 9), float64] */;
  (%713,)
}

def @func_7164() -> (Tensor[(12, 5, 9), float64],) {
  @func_7162() /* ty=(Tensor[(12, 5, 9), float64],) */
}

def @func_7534() -> (Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(3, 2), float64], Tensor[(6), float64]) {
  @func_7532() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(3, 2), float64], Tensor[(6), float64]) */
}

def @func_9556() -> (Tensor[(60), int64],) {
  @func_9554() /* ty=(Tensor[(60), int64],) */
}

def @func_1354(%var_1351: Tensor[(1, 9, 10), float32], %var_1352: Tensor[(7, 9, 10), float32], %var_1353: Tensor[(420), float64]) -> (Tensor[(7, 9, 10), float64], Tensor[(1, 9, 10), float32], Tensor[(420), float64], Tensor[(420), float64]) {
  @func_1349(%var_1351, %var_1352, %var_1353) /* ty=(Tensor[(7, 9, 10), float64], Tensor[(1, 9, 10), float32], Tensor[(420), float64], Tensor[(420), float64]) */
}

def @func_7281() -> Tensor[(60), int64] {
  %714 = @func_3244() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(420), float64], Tensor[(420), float64], Tensor[(1, 60), int64], Tensor[(12, 5, 9), uint8], Tensor[(60), int64], Tensor[(2, 6, 5), bool]) */;
  %714.5
}

def @func_9865() -> Tensor[(60), int64] {
  %715 = @func_3888() /* ty=(Tensor[(60), int64],) */;
  %715.0
}

def @func_3947() -> (Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float32], Tensor[(70, 9), float32]) {
  @func_3945() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float32], Tensor[(70, 9), float32]) */
}

def @func_1250(%var_1249: Tensor[(420), float64]) -> (Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(420), float64], Tensor[(420), float64]) {
  %730 = fn (%var_1235: Tensor[(420), float64]) -> (Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(420), float64], Tensor[(420), float64]) {
    %716 = @func_874() /* ty=Tensor[(12, 5, 9), float64] */;
    %717 = cast(%716, dtype="float64") /* ty=Tensor[(12, 5, 9), float64] */;
    %718 = cast(%var_1235, dtype="float64") /* ty=Tensor[(420), float64] */;
    %719 = reshape(%717, newshape=[12, 5, 9]) /* ty=Tensor[(12, 5, 9), float64] */;
    %720 = reshape(%718, newshape=[420]) /* ty=Tensor[(420), float64] */;
    %721 = @func_1088(%719, %720) /* ty=(Tensor[(12, 5, 9), uint16], Tensor[(2, 6, 5), int64], Tensor[(420), float64], Tensor[(1408), float32], Tensor[(12, 5, 9), float64]) */;
    %722 = @func_874() /* ty=Tensor[(12, 5, 9), float64] */;
    %723 = cast(%722, dtype="float64") /* ty=Tensor[(12, 5, 9), float64] */;
    %724 = cast(%var_1235, dtype="float64") /* ty=Tensor[(420), float64] */;
    %725 = reshape(%723, newshape=[12, 5, 9]) /* ty=Tensor[(12, 5, 9), float64] */;
    %726 = reshape(%724, newshape=[420]) /* ty=Tensor[(420), float64] */;
    %727 = @func_1088(%725, %726) /* ty=(Tensor[(12, 5, 9), uint16], Tensor[(2, 6, 5), int64], Tensor[(420), float64], Tensor[(1408), float32], Tensor[(12, 5, 9), float64]) */;
    %728 = %721.4;
    %729 = %727.2;
    (%716, %722, %728, %var_1235, %729)
  };
  %730(%var_1249) /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(420), float64], Tensor[(420), float64]) */
}

def @func_2504(%var_2502: Tensor[(420), float64]) -> (Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(420), float64]) {
  @func_2501(%var_2502) /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(420), float64]) */
}

def @func_7417() -> (Tensor[(10, 14, 3), float32], Tensor[(70, 9), float32]) {
  %731 = cast(meta[relay.Constant][37] /* ty=Tensor[(10, 14, 3), float32] */, dtype="float32") /* ty=Tensor[(10, 14, 3), float32] */;
  %732 = @func_5242() /* ty=(Tensor[(3, 2), float64], Tensor[(6), float64], Tensor[(60), int64], Tensor[(70, 9), float32], Tensor[(12, 5, 9), float64]) */;
  %733 = log2(%731) /* ty=Tensor[(10, 14, 3), float32] */;
  %734 = %732.3;
  (%733, %734)
}

def @func_5476() -> Tensor[(60), int64] {
  %736 = fn () -> Tensor[(60), int64] {
    %735 = @func_4457() /* ty=(Tensor[(60), int64],) */;
    %735.0
  };
  %736() /* ty=Tensor[(60), int64] */
}

def @func_4555() -> (Tensor[(60), int64], Tensor[(420), float64]) {
  %741 = fn () -> (Tensor[(60), int64], Tensor[(420), float64]) {
    %737 = @func_3325() /* ty=(Tensor[(60), int64],) */;
    %738 = @func_3736() /* ty=(Tensor[(12, 5, 9), float32], Tensor[(420), float64], Tensor[(60), int64], Tensor[(2, 6, 5), int64], Tensor[(420), float64]) */;
    %739 = %737.0;
    %740 = %738.1;
    (%739, %740)
  };
  %741() /* ty=(Tensor[(60), int64], Tensor[(420), float64]) */
}

def @func_10367() -> Tensor[(6), float64] {
  @func_10365() /* ty=Tensor[(6), float64] */
}

def @func_9360() -> Tensor[(60), int64] {
  @func_9358() /* ty=Tensor[(60), int64] */
}

def @func_2130() -> Tensor[(60), int64] {
  @func_2128() /* ty=Tensor[(60), int64] */
}

def @func_1792() -> (Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64]) {
  %742 = @func_1206() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(60), int64]) */;
  %743 = %742.0;
  %744 = @func_874() /* ty=Tensor[(12, 5, 9), float64] */;
  (%743, %744)
}

def @func_5356() -> (Tensor[(12, 5, 9), float64], Tensor[(5, 84), float64], Tensor[(176, 8), float32], Tensor[(420), float64], Tensor[(630), float32]) {
  %756 = fn () -> (Tensor[(12, 5, 9), float64], Tensor[(5, 84), float64], Tensor[(176, 8), float32], Tensor[(420), float64], Tensor[(630), float32]) {
    %745 = cast(meta[relay.Constant][38] /* ty=Tensor[(176, 8), float32] */, dtype="float32") /* ty=Tensor[(176, 8), float32] */;
    %746 = reshape(%745, newshape=[1408]) /* ty=Tensor[(1408), float32] */;
    %747 = @func_3000(%746) /* ty=(Tensor[(60), int64], Tensor[(15, 4), int64], Tensor[(5, 84), float64], Tensor[(1408), float32]) */;
    %748 = %747.2;
    %749 = cast(%748, dtype="float64") /* ty=Tensor[(5, 84), float64] */;
    %750 = cast(meta[relay.Constant][39] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
    %751 = reshape(%749, newshape=[420]) /* ty=Tensor[(420), float64] */;
    %752 = reshape(%750, newshape=[630, 1]) /* ty=Tensor[(630, 1), float32] */;
    %753 = @func_1715(%751, %752) /* ty=(Tensor[(12, 5, 9), float64], Tensor[(15, 4), int64], Tensor[(420), float64], Tensor[(1408), float32], Tensor[(?, 9, 10), bool], Tensor[(630, 1), float32]) */;
    %754 = @func_2433() /* ty=Tensor[(12, 5, 9), float64] */;
    %755 = %753.2;
    (%754, %748, meta[relay.Constant][38] /* ty=Tensor[(176, 8), float32] */, %755, meta[relay.Constant][39] /* ty=Tensor[(630), float32] */)
  };
  %756() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(5, 84), float64], Tensor[(176, 8), float32], Tensor[(420), float64], Tensor[(630), float32]) */
}

def @func_8704() -> (Tensor[(60), int64],) {
  %759 = fn () -> (Tensor[(60), int64],) {
    %757 = @func_3325() /* ty=(Tensor[(60), int64],) */;
    %758 = %757.0;
    (%758,)
  };
  %759() /* ty=(Tensor[(60), int64],) */
}

def @func_1349(%var_1297: Tensor[(1, 9, 10), float32], %var_1298: Tensor[(7, 9, 10), float32], %var_1310: Tensor[(420), float64]) -> (Tensor[(7, 9, 10), float64], Tensor[(1, 9, 10), float32], Tensor[(420), float64], Tensor[(420), float64]) {
  %760 = cast(%var_1297, dtype="float32") /* ty=Tensor[(1, 9, 10), float32] */;
  %761 = cast(%var_1298, dtype="float32") /* ty=Tensor[(7, 9, 10), float32] */;
  %762 = divide(%760, %761) /* ty=Tensor[(7, 9, 10), float32] */;
  %763 = cast(%var_1298, dtype="float64") /* ty=Tensor[(7, 9, 10), float64] */;
  %764 = shape_of(%762, dtype="int32") /* ty=Tensor[(3), int32] */;
  %765 = cast(%762, dtype="float64") /* ty=Tensor[(7, 9, 10), float64] */;
  %766 = dyn.reshape(%763, %764, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %767 = cast(%var_1297, dtype="float32") /* ty=Tensor[(1, 9, 10), float32] */;
  %768 = cast(%var_1310, dtype="float64") /* ty=Tensor[(420), float64] */;
  %769 = reshape(%768, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %770 = @func_1248(%769) /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(420), float64], Tensor[(420), float64]) */;
  %771 = multiply(%765, %766) /* ty=Tensor[(7, 9, 10), float64] */;
  %772 = exp(%767) /* ty=Tensor[(1, 9, 10), float32] */;
  %773 = %770.4;
  (%771, %772, %773, %var_1310)
}

def @func_6280() -> (Tensor[(12, 5, 9), float64],) {
  %776 = fn () -> (Tensor[(12, 5, 9), float64],) {
    %774 = @func_3244() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(420), float64], Tensor[(420), float64], Tensor[(1, 60), int64], Tensor[(12, 5, 9), uint8], Tensor[(60), int64], Tensor[(2, 6, 5), bool]) */;
    %775 = %774.0;
    (%775,)
  };
  %776() /* ty=(Tensor[(12, 5, 9), float64],) */
}

def @func_2501(%var_2465: Tensor[(420), float64]) -> (Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(420), float64]) {
  %777 = @func_2250() /* ty=(Tensor[(12, 5, 9), float64],) */;
  %778 = cast(%var_2465, dtype="float64") /* ty=Tensor[(420), float64] */;
  %779 = reshape(%778, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %780 = @func_1248(%779) /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(420), float64], Tensor[(420), float64]) */;
  %781 = @func_1511() /* ty=Tensor[(60), int64] */;
  %782 = %777.0;
  %783 = %780.1;
  (%781, %782, %783, %var_2465)
}

def @func_6815() -> (Tensor[(60), uint64],) {
  %791 = fn () -> (Tensor[(60), uint64],) {
    %784 = @func_4096() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64]) */;
    %785 = %784.0;
    %786 = cast(meta[relay.Constant][40] /* ty=Tensor[(60), int64] */, dtype="uint64") /* ty=Tensor[(60), uint64] */;
    %787 = shape_of(%785, dtype="int32") /* ty=Tensor[(1), int32] */;
    %788 = cast(%785, dtype="uint64") /* ty=Tensor[(60), uint64] */;
    %789 = dyn.reshape(%786, %787, newshape=[]) /* ty=Tensor[(?), uint64] */;
    %790 = bitwise_and(%788, %789) /* ty=Tensor[(60), uint64] */;
    (%790,)
  };
  %791() /* ty=(Tensor[(60), uint64],) */
}

def @func_2434() -> Tensor[(12, 5, 9), float64] {
  %793 = fn () -> Tensor[(12, 5, 9), float64] {
    %792 = @func_1774() /* ty=(Tensor[(12, 5, 9), float64],) */;
    %792.0
  };
  %793() /* ty=Tensor[(12, 5, 9), float64] */
}

def @func_4604() -> Tensor[(60), int64] {
  @func_2545() /* ty=Tensor[(60), int64] */
}

def @func_11180() -> (Tensor[(60), int64], Tensor[(8, 12, 11), int32], Tensor[(12, 5, 9), float64]) {
  %794 = @func_6602() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
  %795 = @func_4225() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(8, 12, 11), float64], Tensor[(8, 12, 11), int32]) */;
  %796 = @func_4018() /* ty=(Tensor[(12, 5, 9), bool], Tensor[(12, 5, 9), float64]) */;
  %797 = %794.0;
  %798 = %795.2;
  %799 = %796.1;
  (%797, %798, %799)
}

def @func_875() -> Tensor[(12, 5, 9), float64] {
  %805 = fn () -> Tensor[(12, 5, 9), float64] {
    %800 = cast(meta[relay.Constant][41] /* ty=Tensor[(12, 5, 9), float64] */, dtype="float64") /* ty=Tensor[(12, 5, 9), float64] */;
    %801 = atan(%800) /* ty=Tensor[(12, 5, 9), float64] */;
    %802 = cast(%801, dtype="float32") /* ty=Tensor[(12, 5, 9), float32] */;
    %803 = erf(%802) /* ty=Tensor[(12, 5, 9), float32] */;
    %804 = cast(%803, dtype="float64") /* ty=Tensor[(12, 5, 9), float64] */;
    exp(%804) /* ty=Tensor[(12, 5, 9), float64] */
  };
  %805() /* ty=Tensor[(12, 5, 9), float64] */
}

def @func_8556(%var_8545: Tensor[(1408), float32]) -> (Tensor[(12, 5, 9), bool], Tensor[(8, 6, 5), bool], Tensor[(2, 120), float32], Tensor[(60), int64], Tensor[(1408), float32]) {
  %806 = @func_4318() /* ty=(Tensor[(12, 5, 9), bool],) */;
  %807 = cast(meta[relay.Constant][42] /* ty=Tensor[(2, 120), float32] */, dtype="float32") /* ty=Tensor[(2, 120), float32] */;
  %808 = cast(meta[relay.Constant][42] /* ty=Tensor[(2, 120), float32] */, dtype="float32") /* ty=Tensor[(2, 120), float32] */;
  %809 = reshape(%807, newshape=[8, 6, 5]) /* ty=Tensor[(8, 6, 5), float32] */;
  %810 = reshape(%808, newshape=[8, 6, 5]) /* ty=Tensor[(8, 6, 5), float32] */;
  %811 = @func_4354(%809, %810) /* ty=(Tensor[(8, 6, 5), bool],) */;
  %812 = cast(%var_8545, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %813 = reshape(%812, newshape=[1408]) /* ty=Tensor[(1408), float32] */;
  %814 = @func_3000(%813) /* ty=(Tensor[(60), int64], Tensor[(15, 4), int64], Tensor[(5, 84), float64], Tensor[(1408), float32]) */;
  %815 = %806.0;
  %816 = %811.0;
  %817 = %814.0;
  (%815, %816, meta[relay.Constant][42] /* ty=Tensor[(2, 120), float32] */, %817, %var_8545)
}

def @func_4702(%var_4701: Tensor[(1408), float32]) -> (Tensor[(60), int64], Tensor[(15, 4), int64], Tensor[(1408), float32], Tensor[(60), int64]) {
  %824 = fn (%var_4682: Tensor[(1408), float32]) -> (Tensor[(60), int64], Tensor[(15, 4), int64], Tensor[(1408), float32], Tensor[(60), int64]) {
    %818 = cast(%var_4682, dtype="float32") /* ty=Tensor[(1408), float32] */;
    %819 = reshape(%818, newshape=[1408]) /* ty=Tensor[(1408), float32] */;
    %820 = @func_3000(%819) /* ty=(Tensor[(60), int64], Tensor[(15, 4), int64], Tensor[(5, 84), float64], Tensor[(1408), float32]) */;
    %821 = @func_1511() /* ty=Tensor[(60), int64] */;
    %822 = %820.1;
    %823 = @func_2907() /* ty=Tensor[(60), int64] */;
    (%821, %822, %var_4682, %823)
  };
  %824(%var_4701) /* ty=(Tensor[(60), int64], Tensor[(15, 4), int64], Tensor[(1408), float32], Tensor[(60), int64]) */
}

def @func_6180(%var_6173: Tensor[(70, 9), float32]) -> (Tensor[(60), int64], Tensor[(630), float32], Tensor[(70, 9), float32]) {
  %825 = @func_3325() /* ty=(Tensor[(60), int64],) */;
  %826 = cast(%var_6173, dtype="float32") /* ty=Tensor[(70, 9), float32] */;
  %827 = reshape(%826, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %828 = @func_2023(%827) /* ty=(Tensor[(60), int64], Tensor[(11, 7, 1), float64], Tensor[(77), float64], Tensor[(60), int64], Tensor[(420), float64], Tensor[(10, 42), float64], Tensor[(630), float32]) */;
  %829 = %825.0;
  %830 = %828.6;
  (%829, %830, %var_6173)
}

def @func_5666() -> Tensor[(8, 12, 11), int32] {
  %832 = fn () -> Tensor[(8, 12, 11), int32] {
    %831 = @func_4225() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(8, 12, 11), float64], Tensor[(8, 12, 11), int32]) */;
    %831.2
  };
  %832() /* ty=Tensor[(8, 12, 11), int32] */
}

def @func_96(%var_94: Tensor[(8, 16, 11), float32], %var_95: Tensor[(8, 16, 11), float32]) -> Tensor[(8, 16, 11), bool] {
  @func_92(%var_94, %var_95) /* ty=Tensor[(8, 16, 11), bool] */
}

def @func_9955() -> Tensor[(12, 5, 9), float64] {
  %834 = fn () -> Tensor[(12, 5, 9), float64] {
    %833 = @func_6279() /* ty=(Tensor[(12, 5, 9), float64],) */;
    %833.0
  };
  %834() /* ty=Tensor[(12, 5, 9), float64] */
}

def @func_9075(%var_9073: Tensor[(14, 14, 3), uint16], %var_9074: Tensor[(14, 14, 3), uint16]) -> (Tensor[(14, 14, 3), bool], Tensor[(14, 14, 3), float32], Tensor[(12, 5, 9), float64]) {
  @func_9071(%var_9073, %var_9074) /* ty=(Tensor[(14, 14, 3), bool], Tensor[(14, 14, 3), float32], Tensor[(12, 5, 9), float64]) */
}

def @func_8559(%var_8557: Tensor[(1408), float32]) -> (Tensor[(12, 5, 9), bool], Tensor[(8, 6, 5), bool], Tensor[(2, 120), float32], Tensor[(60), int64], Tensor[(1408), float32]) {
  @func_8556(%var_8557) /* ty=(Tensor[(12, 5, 9), bool], Tensor[(8, 6, 5), bool], Tensor[(2, 120), float32], Tensor[(60), int64], Tensor[(1408), float32]) */
}

def @func_10079() -> (Tensor[(12, 5, 9), float64],) {
  %837 = fn () -> (Tensor[(12, 5, 9), float64],) {
    %835 = @func_7162() /* ty=(Tensor[(12, 5, 9), float64],) */;
    %836 = %835.0;
    (%836,)
  };
  %837() /* ty=(Tensor[(12, 5, 9), float64],) */
}

def @func_4191() -> (Tensor[(420), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64]) {
  %848 = fn () -> (Tensor[(420), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64]) {
    %838 = @func_1874() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(420), float64], Tensor[(420), float64], Tensor[(1, 630), float32]) */;
    %839 = @func_1428() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
    %840 = @func_1774() /* ty=(Tensor[(12, 5, 9), float64],) */;
    %841 = %840.0;
    %842 = cast(%841, dtype="float64") /* ty=Tensor[(12, 5, 9), float64] */;
    %843 = rsqrt(%842) /* ty=Tensor[(12, 5, 9), float64] */;
    %844 = cast(%843, dtype="float64") /* ty=Tensor[(12, 5, 9), float64] */;
    %845 = %838.1;
    %846 = %839.0;
    %847 = log10(%844) /* ty=Tensor[(12, 5, 9), float64] */;
    (%845, %846, %847)
  };
  %848() /* ty=(Tensor[(420), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */
}

def @func_6020() -> Tensor[(60), int64] {
  %850 = fn () -> Tensor[(60), int64] {
    %849 = @func_3888() /* ty=(Tensor[(60), int64],) */;
    %849.0
  };
  %850() /* ty=Tensor[(60), int64] */
}

def @func_9895(%var_9893: Tensor[(8, 3, 1), uint32], %var_9894: Tensor[(8, 3, 6), uint32]) -> (Tensor[(8, 3, 6), bool], Tensor[(8, 3, 6), float32], Tensor[(60), int64]) {
  @func_9891(%var_9893, %var_9894) /* ty=(Tensor[(8, 3, 6), bool], Tensor[(8, 3, 6), float32], Tensor[(60), int64]) */
}

def @func_5062() -> Tensor[(12, 5, 9), float64] {
  %854 = fn () -> Tensor[(12, 5, 9), float64] {
    %851 = @func_4318() /* ty=(Tensor[(12, 5, 9), bool],) */;
    %852 = %851.0;
    %853 = cast(%852, dtype="float64") /* ty=Tensor[(12, 5, 9), float64] */;
    tan(%853) /* ty=Tensor[(12, 5, 9), float64] */
  };
  %854() /* ty=Tensor[(12, 5, 9), float64] */
}

def @func_9391() -> Tensor[(12, 5, 9), float32] {
  %856 = fn () -> Tensor[(12, 5, 9), float32] {
    %855 = @func_3945() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float32], Tensor[(70, 9), float32]) */;
    %855.1
  };
  %856() /* ty=Tensor[(12, 5, 9), float32] */
}

def @func_10782(%var_10781: Tensor[(8, 16, 11), float64]) -> (Tensor[(8, 16, 11), float64], Tensor[(12, 5, 9), float64], Tensor[(8, 16, 11), float64]) {
  %872 = fn (%var_10761: Tensor[(8, 16, 11), float64]) -> (Tensor[(8, 16, 11), float64], Tensor[(12, 5, 9), float64], Tensor[(8, 16, 11), float64]) {
    %857 = @func_3497() /* ty=(Tensor[(60), float32], Tensor[(8, 16, 11), float32], Tensor[(432), int64], Tensor[(420, 1), float64]) */;
    %858 = %857.1;
    %859 = cast(%858, dtype="float64") /* ty=Tensor[(8, 16, 11), float64] */;
    %860 = @func_3687() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
    %861 = cast(%858, dtype="float64") /* ty=Tensor[(8, 16, 11), float64] */;
    %862 = log(%861) /* ty=Tensor[(8, 16, 11), float64] */;
    %863 = cast(%var_10761, dtype="uint64") /* ty=Tensor[(8, 16, 11), uint64] */;
    %864 = shape_of(%862, dtype="int32") /* ty=Tensor[(3), int32] */;
    %865 = cast(%862, dtype="uint64") /* ty=Tensor[(8, 16, 11), uint64] */;
    %866 = dyn.reshape(%863, %864, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %867 = minimum(%865, %866) /* ty=Tensor[(8, 16, 11), uint64] */;
    %868 = cast(%867, dtype="float64") /* ty=Tensor[(8, 16, 11), float64] */;
    %869 = asinh(%859) /* ty=Tensor[(8, 16, 11), float64] */;
    %870 = %860.1;
    %871 = atan(%868) /* ty=Tensor[(8, 16, 11), float64] */;
    (%869, %870, %871)
  };
  %872(%var_10781) /* ty=(Tensor[(8, 16, 11), float64], Tensor[(12, 5, 9), float64], Tensor[(8, 16, 11), float64]) */
}

def @func_10612(%var_10591: bool, %var_10592: Tensor[(6, 1), bool]) -> (Tensor[(6, 1), bool],) {
  %873 = cast(%var_10591, dtype="bool") /* ty=bool */;
  %874 = cast(%var_10592, dtype="bool") /* ty=Tensor[(6, 1), bool] */;
  %875 = logical_or(%873, %874) /* ty=Tensor[(6, 1), bool] */;
  (%875,)
}

def @func_3314() -> (Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(420), float64], Tensor[(12, 5, 9), float64]) {
  @func_3312() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(420), float64], Tensor[(12, 5, 9), float64]) */
}

def @func_7162() -> (Tensor[(12, 5, 9), float64],) {
  %876 = @func_1942() /* ty=Tensor[(12, 5, 9), float32] */;
  %877 = cast(%876, dtype="float64") /* ty=Tensor[(12, 5, 9), float64] */;
  %878 = cos(%877) /* ty=Tensor[(12, 5, 9), float64] */;
  (%878,)
}

def @func_1091(%var_1089: Tensor[(12, 5, 9), float64], %var_1090: Tensor[(420), float64]) -> (Tensor[(12, 5, 9), uint16], Tensor[(2, 6, 5), int64], Tensor[(420), float64], Tensor[(1408), float32], Tensor[(12, 5, 9), float64]) {
  %897 = fn (%var_1041: Tensor[(12, 5, 9), float64], %var_1048: Tensor[(420), float64]) -> (Tensor[(12, 5, 9), uint16], Tensor[(2, 6, 5), int64], Tensor[(420), float64], Tensor[(1408), float32], Tensor[(12, 5, 9), float64]) {
    %879 = @func_874() /* ty=Tensor[(12, 5, 9), float64] */;
    %880 = cast(%var_1041, dtype="uint16") /* ty=Tensor[(12, 5, 9), uint16] */;
    %881 = shape_of(%879, dtype="int32") /* ty=Tensor[(3), int32] */;
    %882 = cast(%879, dtype="uint16") /* ty=Tensor[(12, 5, 9), uint16] */;
    %883 = dyn.reshape(%880, %881, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %884 = cast(%var_1048, dtype="float64") /* ty=Tensor[(420), float64] */;
    %885 = cast(meta[relay.Constant][43] /* ty=Tensor[(1408), float32] */, dtype="float32") /* ty=Tensor[(1408), float32] */;
    %886 = reshape(%884, newshape=[12, 5, 7]) /* ty=Tensor[(12, 5, 7), float64] */;
    %887 = reshape(%885, newshape=[1408]) /* ty=Tensor[(1408), float32] */;
    %888 = @func_775(%886, %887) /* ty=(Tensor[(12, 5, 7), float64], Tensor[(2, 6, 5), int64], Tensor[(15, 4), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(8, 16, 11), bool], Tensor[(1408), float32]) */;
    %889 = @func_874() /* ty=Tensor[(12, 5, 9), float64] */;
    %890 = cast(%879, dtype="float64") /* ty=Tensor[(12, 5, 9), float64] */;
    %891 = shape_of(%889, dtype="int32") /* ty=Tensor[(3), int32] */;
    %892 = cast(%889, dtype="float64") /* ty=Tensor[(12, 5, 9), float64] */;
    %893 = dyn.reshape(%890, %891, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %894 = maximum(%882, %883) /* ty=Tensor[(12, 5, 9), uint16] */;
    %895 = %888.4;
    %896 = multiply(%892, %893) /* ty=Tensor[(12, 5, 9), float64] */;
    (%894, %895, %var_1048, meta[relay.Constant][43] /* ty=Tensor[(1408), float32] */, %896)
  };
  %897(%var_1089, %var_1090) /* ty=(Tensor[(12, 5, 9), uint16], Tensor[(2, 6, 5), int64], Tensor[(420), float64], Tensor[(1408), float32], Tensor[(12, 5, 9), float64]) */
}

def @func_3945() -> (Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float32], Tensor[(70, 9), float32]) {
  %898 = @func_1792() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64]) */;
  %899 = cast(meta[relay.Constant][44] /* ty=Tensor[(70, 9), float32] */, dtype="float32") /* ty=Tensor[(70, 9), float32] */;
  %900 = reshape(%899, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %901 = @func_2187(%900) /* ty=(Tensor[(12, 5, 9), float32], Tensor[(420), float64], Tensor[(90), float32], Tensor[(630), float32], Tensor[(420), float64], Tensor[(12, 5, 9), float32]) */;
  %902 = %898.0;
  %903 = %901.5;
  (%902, %903, meta[relay.Constant][44] /* ty=Tensor[(70, 9), float32] */)
}

def @func_6040() -> (Tensor[(60), int64],) {
  @func_6038() /* ty=(Tensor[(60), int64],) */
}

def @func_4943() -> (Tensor[(60), int64],) {
  @func_4941() /* ty=(Tensor[(60), int64],) */
}

def @func_2720() -> (Tensor[(12, 5, 9), float64],) {
  @func_2718() /* ty=(Tensor[(12, 5, 9), float64],) */
}

def @func_9938(%var_9936: Tensor[(8, 9), float32]) -> (Tensor[(8, 9), float32], Tensor[(12, 5, 9), float64]) {
  @func_9935(%var_9936) /* ty=(Tensor[(8, 9), float32], Tensor[(12, 5, 9), float64]) */
}

def @func_5772() -> (Tensor[(6), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64]) {
  %904 = @func_5242() /* ty=(Tensor[(3, 2), float64], Tensor[(6), float64], Tensor[(60), int64], Tensor[(70, 9), float32], Tensor[(12, 5, 9), float64]) */;
  %905 = @func_5661() /* ty=(Tensor[(60), int64],) */;
  %906 = @func_2250() /* ty=(Tensor[(12, 5, 9), float64],) */;
  %907 = %904.1;
  %908 = %905.0;
  %909 = %906.0;
  (%907, %908, %909)
}

def @func_7990(%var_7989: Tensor[(6), float64]) -> (Tensor[(60), int64], Tensor[(3, 2), float64], Tensor[(6), float64], Tensor[(60), int64], Tensor[(8, 16, 11), bool], Tensor[(420), float64]) {
  %920 = fn (%var_7952: Tensor[(6), float64]) -> (Tensor[(60), int64], Tensor[(3, 2), float64], Tensor[(6), float64], Tensor[(60), int64], Tensor[(8, 16, 11), bool], Tensor[(420), float64]) {
    %910 = cast(%var_7952, dtype="float64") /* ty=Tensor[(6), float64] */;
    %911 = reshape(%910, newshape=[3, 2]) /* ty=Tensor[(3, 2), float64] */;
    %912 = @func_1386(%911) /* ty=(Tensor[(3, 2), float64],) */;
    %913 = cast(meta[relay.Constant][45] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
    %914 = reshape(%913, newshape=[420]) /* ty=Tensor[(420), float64] */;
    %915 = @func_2357(%914) /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(8, 16, 11), bool], Tensor[(420), float64], Tensor[(352, 4), float32]) */;
    %916 = @func_6865() /* ty=Tensor[(60), int64] */;
    %917 = %912.0;
    %918 = @func_2545() /* ty=Tensor[(60), int64] */;
    %919 = %915.2;
    (%916, %917, %var_7952, %918, %919, meta[relay.Constant][45] /* ty=Tensor[(420), float64] */)
  };
  %920(%var_7989) /* ty=(Tensor[(60), int64], Tensor[(3, 2), float64], Tensor[(6), float64], Tensor[(60), int64], Tensor[(8, 16, 11), bool], Tensor[(420), float64]) */
}

def @func_9774() -> (Tensor[(60), int64],) {
  @func_9772() /* ty=(Tensor[(60), int64],) */
}

def @func_8471() -> (Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(60), int64], Tensor[(12, 5, 9), float32]) {
  @func_8469() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(60), int64], Tensor[(12, 5, 9), float32]) */
}

def @func_5662() -> (Tensor[(60), int64],) {
  %922 = fn () -> (Tensor[(60), int64],) {
    %921 = @func_1915() /* ty=Tensor[(60), int64] */;
    (%921,)
  };
  %922() /* ty=(Tensor[(60), int64],) */
}

def @func_9998() -> (Tensor[(1408), float32], Tensor[(60), int64]) {
  @func_9996() /* ty=(Tensor[(1408), float32], Tensor[(60), int64]) */
}

def @func_1775() -> (Tensor[(12, 5, 9), float64],) {
  %924 = fn () -> (Tensor[(12, 5, 9), float64],) {
    %923 = @func_874() /* ty=Tensor[(12, 5, 9), float64] */;
    (%923,)
  };
  %924() /* ty=(Tensor[(12, 5, 9), float64],) */
}

def @func_9798() -> Tensor[(60), int64] {
  @func_9796() /* ty=Tensor[(60), int64] */
}

def @func_4297(%var_4295: Tensor[(4, 6, 7), int8], %var_4296: Tensor[(4, 6, 7), int8]) -> (Tensor[(4, 6, 7), int8], Tensor[(12, 5, 9), float32], Tensor[(630), float32]) {
  %934 = fn (%var_4280: Tensor[(4, 6, 7), int8], %var_4281: Tensor[(4, 6, 7), int8]) -> (Tensor[(4, 6, 7), int8], Tensor[(12, 5, 9), float32], Tensor[(630), float32]) {
    %925 = cast(%var_4281, dtype="int8") /* ty=Tensor[(4, 6, 7), int8] */;
    %926 = shape_of(%var_4280, dtype="int32") /* ty=Tensor[(3), int32] */;
    %927 = cast(%var_4280, dtype="int8") /* ty=Tensor[(4, 6, 7), int8] */;
    %928 = dyn.reshape(%925, %926, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %929 = cast(meta[relay.Constant][46] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
    %930 = reshape(%929, newshape=[630]) /* ty=Tensor[(630), float32] */;
    %931 = @func_2187(%930) /* ty=(Tensor[(12, 5, 9), float32], Tensor[(420), float64], Tensor[(90), float32], Tensor[(630), float32], Tensor[(420), float64], Tensor[(12, 5, 9), float32]) */;
    %932 = logical_xor(%927, %928) /* ty=Tensor[(4, 6, 7), int8] */;
    %933 = %931.0;
    (%932, %933, meta[relay.Constant][46] /* ty=Tensor[(630), float32] */)
  };
  %934(%var_4295, %var_4296) /* ty=(Tensor[(4, 6, 7), int8], Tensor[(12, 5, 9), float32], Tensor[(630), float32]) */
}

def @func_4319() -> (Tensor[(12, 5, 9), bool],) {
  %937 = fn () -> (Tensor[(12, 5, 9), bool],) {
    %935 = @func_4018() /* ty=(Tensor[(12, 5, 9), bool], Tensor[(12, 5, 9), float64]) */;
    %936 = %935.0;
    (%936,)
  };
  %937() /* ty=(Tensor[(12, 5, 9), bool],) */
}

def @func_4227() -> (Tensor[(12, 5, 9), float64], Tensor[(8, 12, 11), float64], Tensor[(8, 12, 11), int32]) {
  @func_4225() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(8, 12, 11), float64], Tensor[(8, 12, 11), int32]) */
}

def @func_3472() -> (Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), bool]) {
  %944 = fn () -> (Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), bool]) {
    %938 = @func_2250() /* ty=(Tensor[(12, 5, 9), float64],) */;
    %939 = %938.0;
    %940 = cast(%939, dtype="float64") /* ty=Tensor[(12, 5, 9), float64] */;
    %941 = reshape(%940, newshape=[12, 5, 9]) /* ty=Tensor[(12, 5, 9), float64] */;
    %942 = @func_2274(%941) /* ty=(Tensor[(12, 5, 9), bool], Tensor[(12, 5, 9), float64]) */;
    %943 = %942.0;
    (%939, %943)
  };
  %944() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), bool]) */
}

def @func_11182() -> (Tensor[(60), int64], Tensor[(8, 12, 11), int32], Tensor[(12, 5, 9), float64]) {
  @func_11180() /* ty=(Tensor[(60), int64], Tensor[(8, 12, 11), int32], Tensor[(12, 5, 9), float64]) */
}

def @main(%var_11527: bool, %var_11528: Tensor[(9, 1, 1), bool], %var_11549: Tensor[(9, 11, 4), float64]) -> (Tensor[(9, 1, 1), float32], Tensor[(9, 11, 4), bool]) {
  %945 = cast(%var_11527, dtype="bool") /* ty=bool */;
  %946 = cast(%var_11528, dtype="bool") /* ty=Tensor[(9, 1, 1), bool] */;
  %947 = logical_and(%945, %946) /* ty=Tensor[(9, 1, 1), bool] */;
  %948 = cast(%var_11527, dtype="float32") /* ty=float32 */;
  %949 = cast(%947, dtype="float32") /* ty=Tensor[(9, 1, 1), float32] */;
  %950 = cast(%var_11528, dtype="float64") /* ty=Tensor[(9, 1, 1), float64] */;
  %951 = erf(%950) /* ty=Tensor[(9, 1, 1), float64] */;
  %952 = cast(%951, dtype="bool") /* ty=Tensor[(9, 1, 1), bool] */;
  %953 = cast(%var_11549, dtype="bool") /* ty=Tensor[(9, 11, 4), bool] */;
  %954 = power(%948, %949) /* ty=Tensor[(9, 1, 1), float32] */;
  %955 = logical_or(%952, %953) /* ty=Tensor[(9, 11, 4), bool] */;
  (%954, %955)
}

def @func_9327() -> (Tensor[(60), int64],) {
  %958 = fn () -> (Tensor[(60), int64],) {
    %956 = @func_1206() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(60), int64]) */;
    %957 = %956.2;
    (%957,)
  };
  %958() /* ty=(Tensor[(60), int64],) */
}

def @func_4357(%var_4355: Tensor[(8, 6, 5), float32], %var_4356: Tensor[(8, 6, 5), float32]) -> (Tensor[(8, 6, 5), bool],) {
  %969 = fn (%var_4337: Tensor[(8, 6, 5), float32], %var_4338: Tensor[(8, 6, 5), float32]) -> (Tensor[(8, 6, 5), bool],) {
    %959 = cast(%var_4338, dtype="float32") /* ty=Tensor[(8, 6, 5), float32] */;
    %960 = shape_of(%var_4337, dtype="int32") /* ty=Tensor[(3), int32] */;
    %961 = cast(%var_4337, dtype="float32") /* ty=Tensor[(8, 6, 5), float32] */;
    %962 = dyn.reshape(%959, %960, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %963 = divide(%961, %962) /* ty=Tensor[(8, 6, 5), float32] */;
    %964 = cast(%var_4338, dtype="bool") /* ty=Tensor[(8, 6, 5), bool] */;
    %965 = shape_of(%963, dtype="int32") /* ty=Tensor[(3), int32] */;
    %966 = cast(%963, dtype="bool") /* ty=Tensor[(8, 6, 5), bool] */;
    %967 = dyn.reshape(%964, %965, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %968 = logical_and(%966, %967) /* ty=Tensor[(8, 6, 5), bool] */;
    (%968,)
  };
  %969(%var_4355, %var_4356) /* ty=(Tensor[(8, 6, 5), bool],) */
}

def @func_9996() -> (Tensor[(1408), float32], Tensor[(60), int64]) {
  %970 = @func_5695() /* ty=(Tensor[(70, 9), float64], Tensor[(12, 5, 9), uint64], Tensor[(1408), float32], Tensor[(1408), float32]) */;
  %971 = @func_9772() /* ty=(Tensor[(60), int64],) */;
  %972 = %970.3;
  %973 = %971.0;
  (%972, %973)
}

def @func_778(%var_776: Tensor[(12, 5, 7), float64], %var_777: Tensor[(1408), float32]) -> (Tensor[(12, 5, 7), float64], Tensor[(2, 6, 5), int64], Tensor[(15, 4), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(8, 16, 11), bool], Tensor[(1408), float32]) {
  %1017 = fn (%var_726: Tensor[(12, 5, 7), float64], %var_767: Tensor[(1408), float32]) -> (Tensor[(12, 5, 7), float64], Tensor[(2, 6, 5), int64], Tensor[(15, 4), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(8, 16, 11), bool], Tensor[(1408), float32]) {
    %974 = cast(%var_726, dtype="float64") /* ty=Tensor[(12, 5, 7), float64] */;
    %975 = cast(meta[relay.Constant][47] /* ty=Tensor[(15, 4), int64] */, dtype="int64") /* ty=Tensor[(15, 4), int64] */;
    %976 = cast(meta[relay.Constant][47] /* ty=Tensor[(15, 4), int64] */, dtype="int64") /* ty=Tensor[(15, 4), int64] */;
    %977 = reshape(%975, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
    %978 = reshape(%976, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
    %979 = @func_125(%977, %978) /* ty=(Tensor[(2, 6, 5), int64],) */;
    %980 = cast(meta[relay.Constant][47] /* ty=Tensor[(15, 4), int64] */, dtype="int64") /* ty=Tensor[(15, 4), int64] */;
    %981 = %979.0;
    %982 = cast(%981, dtype="int64") /* ty=Tensor[(2, 6, 5), int64] */;
    %983 = reshape(%980, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
    %984 = reshape(%982, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
    %985 = @func_125(%983, %984) /* ty=(Tensor[(2, 6, 5), int64],) */;
    %986 = cast(meta[relay.Constant][47] /* ty=Tensor[(15, 4), int64] */, dtype="int64") /* ty=Tensor[(15, 4), int64] */;
    %987 = %985.0;
    %988 = cast(%987, dtype="int64") /* ty=Tensor[(2, 6, 5), int64] */;
    %989 = reshape(%986, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
    %990 = reshape(%988, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
    %991 = @func_125(%989, %990) /* ty=(Tensor[(2, 6, 5), int64],) */;
    %992 = cast(%987, dtype="int64") /* ty=Tensor[(2, 6, 5), int64] */;
    %993 = %991.0;
    %994 = cast(%993, dtype="int64") /* ty=Tensor[(2, 6, 5), int64] */;
    %995 = reshape(%992, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
    %996 = reshape(%994, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
    %997 = @func_125(%995, %996) /* ty=(Tensor[(2, 6, 5), int64],) */;
    %998 = cast(%981, dtype="int64") /* ty=Tensor[(2, 6, 5), int64] */;
    %999 = %997.0;
    %1000 = cast(%999, dtype="int64") /* ty=Tensor[(2, 6, 5), int64] */;
    %1001 = reshape(%998, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
    %1002 = reshape(%1000, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
    %1003 = @func_125(%1001, %1002) /* ty=(Tensor[(2, 6, 5), int64],) */;
    %1004 = cast(%993, dtype="int64") /* ty=Tensor[(2, 6, 5), int64] */;
    %1005 = cast(%999, dtype="int64") /* ty=Tensor[(2, 6, 5), int64] */;
    %1006 = reshape(%1004, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
    %1007 = reshape(%1005, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
    %1008 = @func_125(%1006, %1007) /* ty=(Tensor[(2, 6, 5), int64],) */;
    %1009 = cast(%var_767, dtype="float32") /* ty=Tensor[(1408), float32] */;
    %1010 = cast(%var_767, dtype="float32") /* ty=Tensor[(1408), float32] */;
    %1011 = reshape(%1009, newshape=[8, 16, 11]) /* ty=Tensor[(8, 16, 11), float32] */;
    %1012 = reshape(%1010, newshape=[8, 16, 11]) /* ty=Tensor[(8, 16, 11), float32] */;
    %1013 = erf(%974) /* ty=Tensor[(12, 5, 7), float64] */;
    %1014 = %1003.0;
    %1015 = %1008.0;
    %1016 = @func_92(%1011, %1012) /* ty=Tensor[(8, 16, 11), bool] */;
    (%1013, %981, meta[relay.Constant][47] /* ty=Tensor[(15, 4), int64] */, %987, %993, %999, %1014, %1015, %1016, %var_767)
  };
  %1017(%var_776, %var_777) /* ty=(Tensor[(12, 5, 7), float64], Tensor[(2, 6, 5), int64], Tensor[(15, 4), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(8, 16, 11), bool], Tensor[(1408), float32]) */
}

def @func_10682(%var_10681: Tensor[(12, 3, 5), float64]) -> (Tensor[(12, 3, 5), float64], Tensor[(8, 16, 11), bool], Tensor[(630), float32], Tensor[(1408), float32]) {
  %1026 = fn (%var_10664: Tensor[(12, 3, 5), float64]) -> (Tensor[(12, 3, 5), float64], Tensor[(8, 16, 11), bool], Tensor[(630), float32], Tensor[(1408), float32]) {
    %1018 = cast(%var_10664, dtype="float64") /* ty=Tensor[(12, 3, 5), float64] */;
    %1019 = cast(meta[relay.Constant][48] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
    %1020 = cast(meta[relay.Constant][49] /* ty=Tensor[(1408), float32] */, dtype="float32") /* ty=Tensor[(1408), float32] */;
    %1021 = reshape(%1019, newshape=[10, 63]) /* ty=Tensor[(10, 63), float32] */;
    %1022 = reshape(%1020, newshape=[1408]) /* ty=Tensor[(1408), float32] */;
    %1023 = @func_7838(%1021, %1022) /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float32], Tensor[(420), float64], Tensor[(10, 63), float32], Tensor[(8, 16, 11), bool], Tensor[(1408), float32]) */;
    %1024 = sinh(%1018) /* ty=Tensor[(12, 3, 5), float64] */;
    %1025 = %1023.4;
    (%1024, %1025, meta[relay.Constant][48] /* ty=Tensor[(630), float32] */, meta[relay.Constant][49] /* ty=Tensor[(1408), float32] */)
  };
  %1026(%var_10681) /* ty=(Tensor[(12, 3, 5), float64], Tensor[(8, 16, 11), bool], Tensor[(630), float32], Tensor[(1408), float32]) */
}

def @func_11226(%var_11224: int64, %var_11225: Tensor[(11, 13, 9), int64]) -> (Tensor[(11, 13, 9), int64],) {
  %1030 = fn (%var_11217: int64, %var_11218: Tensor[(11, 13, 9), int64]) -> (Tensor[(11, 13, 9), int64],) {
    %1027 = cast(%var_11217, dtype="int64") /* ty=int64 */;
    %1028 = cast(%var_11218, dtype="int64") /* ty=Tensor[(11, 13, 9), int64] */;
    %1029 = bitwise_and(%1027, %1028) /* ty=Tensor[(11, 13, 9), int64] */;
    (%1029,)
  };
  %1030(%var_11224, %var_11225) /* ty=(Tensor[(11, 13, 9), int64],) */
}

def @func_9380() -> (Tensor[(12, 5, 9), float64],) {
  %1032 = fn () -> (Tensor[(12, 5, 9), float64],) {
    %1031 = @func_4639() /* ty=Tensor[(12, 5, 9), float64] */;
    (%1031,)
  };
  %1032() /* ty=(Tensor[(12, 5, 9), float64],) */
}

def @func_4941() -> (Tensor[(60), int64],) {
  %1033 = @func_1428() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
  %1034 = %1033.0;
  (%1034,)
}

def @func_2546() -> Tensor[(60), int64] {
  %1035 = fn () -> Tensor[(60), int64] {
    @func_2128() /* ty=Tensor[(60), int64] */
  };
  %1035() /* ty=Tensor[(60), int64] */
}

def @func_1719(%var_1717: Tensor[(420), float64], %var_1718: Tensor[(630, 1), float32]) -> (Tensor[(12, 5, 9), float64], Tensor[(15, 4), int64], Tensor[(420), float64], Tensor[(1408), float32], Tensor[(?, 9, 10), bool], Tensor[(630, 1), float32]) {
  @func_1715(%var_1717, %var_1718) /* ty=(Tensor[(12, 5, 9), float64], Tensor[(15, 4), int64], Tensor[(420), float64], Tensor[(1408), float32], Tensor[(?, 9, 10), bool], Tensor[(630, 1), float32]) */
}

def @func_11326() -> (Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(60), int64]) {
  %1036 = @func_8218() /* ty=(Tensor[(60), int64],) */;
  %1037 = @func_3736() /* ty=(Tensor[(12, 5, 9), float32], Tensor[(420), float64], Tensor[(60), int64], Tensor[(2, 6, 5), int64], Tensor[(420), float64]) */;
  %1038 = @func_874() /* ty=Tensor[(12, 5, 9), float64] */;
  %1039 = %1036.0;
  %1040 = %1037.2;
  (%1038, %1039, %1040)
}

def @func_3244() -> (Tensor[(12, 5, 9), float64], Tensor[(420), float64], Tensor[(420), float64], Tensor[(1, 60), int64], Tensor[(12, 5, 9), uint8], Tensor[(60), int64], Tensor[(2, 6, 5), bool]) {
  %1041 = @func_1774() /* ty=(Tensor[(12, 5, 9), float64],) */;
  %1042 = cast(meta[relay.Constant][50] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %1043 = reshape(%1042, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %1044 = @func_1248(%1043) /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(420), float64], Tensor[(420), float64]) */;
  %1045 = %1041.0;
  %1046 = cast(%1045, dtype="float64") /* ty=Tensor[(12, 5, 9), float64] */;
  %1047 = reshape(%1046, newshape=[12, 5, 9]) /* ty=Tensor[(12, 5, 9), float64] */;
  %1048 = @func_3086(%1047) /* ty=(Tensor[(12, 5, 9), uint8], Tensor[(60), int64]) */;
  %1049 = @func_1428() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
  %1050 = cast(meta[relay.Constant][51] /* ty=Tensor[(1, 60), int64] */, dtype="int64") /* ty=Tensor[(1, 60), int64] */;
  %1051 = cast(meta[relay.Constant][51] /* ty=Tensor[(1, 60), int64] */, dtype="int64") /* ty=Tensor[(1, 60), int64] */;
  %1052 = reshape(%1050, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
  %1053 = reshape(%1051, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), int64] */;
  %1054 = @func_125(%1052, %1053) /* ty=(Tensor[(2, 6, 5), int64],) */;
  %1055 = %1054.0;
  %1056 = cast(meta[relay.Constant][52] /* ty=Tensor[(2, 6, 5), int64] */, dtype="bool") /* ty=Tensor[(2, 6, 5), bool] */;
  %1057 = shape_of(%1055, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1058 = cast(%1055, dtype="bool") /* ty=Tensor[(2, 6, 5), bool] */;
  %1059 = dyn.reshape(%1056, %1057, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1060 = %1044.3;
  %1061 = %1048.0;
  %1062 = %1049.0;
  %1063 = not_equal(%1058, %1059) /* ty=Tensor[(2, 6, 5), bool] */;
  (%1045, %1060, meta[relay.Constant][50] /* ty=Tensor[(420), float64] */, meta[relay.Constant][51] /* ty=Tensor[(1, 60), int64] */, %1061, %1062, %1063)
}

def @func_11481() -> (Tensor[(60), int64],) {
  %1066 = fn () -> (Tensor[(60), int64],) {
    %1064 = @func_3687() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
    %1065 = %1064.0;
    (%1065,)
  };
  %1066() /* ty=(Tensor[(60), int64],) */
}

def @func_5243() -> (Tensor[(3, 2), float64], Tensor[(6), float64], Tensor[(60), int64], Tensor[(70, 9), float32], Tensor[(12, 5, 9), float64]) {
  %1079 = fn () -> (Tensor[(3, 2), float64], Tensor[(6), float64], Tensor[(60), int64], Tensor[(70, 9), float32], Tensor[(12, 5, 9), float64]) {
    %1067 = cast(meta[relay.Constant][53] /* ty=Tensor[(6), float64] */, dtype="float64") /* ty=Tensor[(6), float64] */;
    %1068 = reshape(%1067, newshape=[3, 2]) /* ty=Tensor[(3, 2), float64] */;
    %1069 = @func_1386(%1068) /* ty=(Tensor[(3, 2), float64],) */;
    %1070 = @func_3687() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
    %1071 = @func_3945() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float32], Tensor[(70, 9), float32]) */;
    %1072 = @func_1774() /* ty=(Tensor[(12, 5, 9), float64],) */;
    %1073 = %1072.0;
    %1074 = cast(%1073, dtype="float64") /* ty=Tensor[(12, 5, 9), float64] */;
    %1075 = %1069.0;
    %1076 = %1070.0;
    %1077 = %1071.2;
    %1078 = acos(%1074) /* ty=Tensor[(12, 5, 9), float64] */;
    (%1075, meta[relay.Constant][53] /* ty=Tensor[(6), float64] */, %1076, %1077, %1078)
  };
  %1079() /* ty=(Tensor[(3, 2), float64], Tensor[(6), float64], Tensor[(60), int64], Tensor[(70, 9), float32], Tensor[(12, 5, 9), float64]) */
}

def @func_7908(%var_7904: Tensor[(8, 7, 12), uint32], %var_7905: Tensor[(8, 7, 12), uint32], %var_7906: Tensor[(1408, 1), float32], %var_7907: Tensor[(96), uint8]) -> (Tensor[(8, 7, 12), uint32], Tensor[(8, 7, 12), float64], Tensor[(8, 7, 12), float32], Tensor[(15, 4), int64], Tensor[(1408, 1), float32], Tensor[(11, 7, 1), float64], Tensor[(96), uint8]) {
  @func_7902(%var_7904, %var_7905, %var_7906, %var_7907) /* ty=(Tensor[(8, 7, 12), uint32], Tensor[(8, 7, 12), float64], Tensor[(8, 7, 12), float32], Tensor[(15, 4), int64], Tensor[(1408, 1), float32], Tensor[(11, 7, 1), float64], Tensor[(96), uint8]) */
}

def @func_5389(%var_5387: Tensor[(12, 8, 1), float32]) -> (Tensor[(12, 8, ?), float32],) {
  @func_5386(%var_5387) /* ty=(Tensor[(12, 8, ?), float32],) */
}

def @func_8743() -> (Tensor[(60), int64], Tensor[(?, 9, 10), bool], Tensor[(420), float64], Tensor[(630), float32]) {
  %1080 = cast(meta[relay.Constant][54] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %1081 = cast(meta[relay.Constant][55] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %1082 = reshape(%1080, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %1083 = reshape(%1081, newshape=[630, 1]) /* ty=Tensor[(630, 1), float32] */;
  %1084 = @func_1715(%1082, %1083) /* ty=(Tensor[(12, 5, 9), float64], Tensor[(15, 4), int64], Tensor[(420), float64], Tensor[(1408), float32], Tensor[(?, 9, 10), bool], Tensor[(630, 1), float32]) */;
  %1085 = @func_2545() /* ty=Tensor[(60), int64] */;
  %1086 = %1084.4;
  (%1085, %1086, meta[relay.Constant][54] /* ty=Tensor[(420), float64] */, meta[relay.Constant][55] /* ty=Tensor[(630), float32] */)
}

def @func_7706(%var_7705: Tensor[(1, 10, 11), float32]) -> (Tensor[(1, 10, 11), float32],) {
  %1089 = fn (%var_7698: Tensor[(1, 10, 11), float32]) -> (Tensor[(1, 10, 11), float32],) {
    %1087 = cast(%var_7698, dtype="float32") /* ty=Tensor[(1, 10, 11), float32] */;
    %1088 = exp(%1087) /* ty=Tensor[(1, 10, 11), float32] */;
    (%1088,)
  };
  %1089(%var_7705) /* ty=(Tensor[(1, 10, 11), float32],) */
}

def @func_10874(%var_10873: Tensor[(540), float64]) -> (Tensor[(60), int64], Tensor[(11, 7, 1), float64], Tensor[(77), float64], Tensor[(60), int64], Tensor[(540), float64]) {
  %1099 = fn (%var_10859: Tensor[(540), float64]) -> (Tensor[(60), int64], Tensor[(11, 7, 1), float64], Tensor[(77), float64], Tensor[(60), int64], Tensor[(540), float64]) {
    %1090 = @func_1428() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
    %1091 = cast(meta[relay.Constant][56] /* ty=Tensor[(77), float64] */, dtype="float64") /* ty=Tensor[(77), float64] */;
    %1092 = reshape(%1091, newshape=[11, 7, 1]) /* ty=Tensor[(11, 7, 1), float64] */;
    %1093 = cast(%var_10859, dtype="float64") /* ty=Tensor[(540), float64] */;
    %1094 = reshape(%1093, newshape=[12, 5, 9]) /* ty=Tensor[(12, 5, 9), float64] */;
    %1095 = @func_3086(%1094) /* ty=(Tensor[(12, 5, 9), uint8], Tensor[(60), int64]) */;
    %1096 = %1090.0;
    %1097 = @func_1455(%1092) /* ty=Tensor[(11, 7, 1), float64] */;
    %1098 = %1095.1;
    (%1096, %1097, meta[relay.Constant][56] /* ty=Tensor[(77), float64] */, %1098, %var_10859)
  };
  %1099(%var_10873) /* ty=(Tensor[(60), int64], Tensor[(11, 7, 1), float64], Tensor[(77), float64], Tensor[(60), int64], Tensor[(540), float64]) */
}

def @func_3365() -> Tensor[(60), int64] {
  %1100 = fn () -> Tensor[(60), int64] {
    @func_1511() /* ty=Tensor[(60), int64] */
  };
  %1100() /* ty=Tensor[(60), int64] */
}

def @func_8087(%var_8086: Tensor[(6, 15, 15), uint8]) -> (Tensor[(6, 15, 15), uint8], Tensor[(6, 15, 15), int64], Tensor[(70, 9), float32]) {
  %1113 = fn (%var_8074: Tensor[(6, 15, 15), uint8]) -> (Tensor[(6, 15, 15), uint8], Tensor[(6, 15, 15), int64], Tensor[(70, 9), float32]) {
    %1101 = cast(%var_8074, dtype="uint8") /* ty=Tensor[(6, 15, 15), uint8] */;
    %1102 = shape_of(meta[relay.Constant][57] /* ty=Tensor[(6, 15, 15), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1103 = cast(meta[relay.Constant][57] /* ty=Tensor[(6, 15, 15), uint8] */, dtype="uint8") /* ty=Tensor[(6, 15, 15), uint8] */;
    %1104 = dyn.reshape(%1101, %1102, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1105 = cast(meta[relay.Constant][57] /* ty=Tensor[(6, 15, 15), uint8] */, dtype="int64") /* ty=Tensor[(6, 15, 15), int64] */;
    %1106 = shape_of(%var_8074, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1107 = cast(%var_8074, dtype="int64") /* ty=Tensor[(6, 15, 15), int64] */;
    %1108 = dyn.reshape(%1105, %1106, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1109 = @func_7417() /* ty=(Tensor[(10, 14, 3), float32], Tensor[(70, 9), float32]) */;
    %1110 = add(%1103, %1104) /* ty=Tensor[(6, 15, 15), uint8] */;
    %1111 = logical_xor(%1107, %1108) /* ty=Tensor[(6, 15, 15), int64] */;
    %1112 = %1109.1;
    (%1110, %1111, %1112)
  };
  %1113(%var_8086) /* ty=(Tensor[(6, 15, 15), uint8], Tensor[(6, 15, 15), int64], Tensor[(70, 9), float32]) */
}

def @func_1943() -> Tensor[(12, 5, 9), float32] {
  %1117 = fn () -> Tensor[(12, 5, 9), float32] {
    %1114 = @func_1206() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(60), int64]) */;
    %1115 = %1114.1;
    %1116 = cast(%1115, dtype="float32") /* ty=Tensor[(12, 5, 9), float32] */;
    cosh(%1116) /* ty=Tensor[(12, 5, 9), float32] */
  };
  %1117() /* ty=Tensor[(12, 5, 9), float32] */
}

def @func_3499() -> (Tensor[(60), float32], Tensor[(8, 16, 11), float32], Tensor[(432), int64], Tensor[(420, 1), float64]) {
  @func_3497() /* ty=(Tensor[(60), float32], Tensor[(8, 16, 11), float32], Tensor[(432), int64], Tensor[(420, 1), float64]) */
}

def @func_5697() -> (Tensor[(70, 9), float64], Tensor[(12, 5, 9), uint64], Tensor[(1408), float32], Tensor[(1408), float32]) {
  @func_5695() /* ty=(Tensor[(70, 9), float64], Tensor[(12, 5, 9), uint64], Tensor[(1408), float32], Tensor[(1408), float32]) */
}

def @func_9751() -> (Tensor[(60), int64],) {
  %1120 = fn () -> (Tensor[(60), int64],) {
    %1118 = @func_8624() /* ty=(Tensor[(60), int64], Tensor[(70, 9), float64]) */;
    %1119 = %1118.0;
    (%1119,)
  };
  %1120() /* ty=(Tensor[(60), int64],) */
}

def @func_10714() -> Tensor[(6), float64] {
  @func_10712() /* ty=Tensor[(6), float64] */
}

def @func_3878(%var_3877: Tensor[(630), float32]) -> (Tensor[(60), int64], Tensor[(420), float64], Tensor[(630), float32]) {
  %1126 = fn (%var_3872: Tensor[(630), float32]) -> (Tensor[(60), int64], Tensor[(420), float64], Tensor[(630), float32]) {
    %1121 = cast(%var_3872, dtype="float32") /* ty=Tensor[(630), float32] */;
    %1122 = reshape(%1121, newshape=[630]) /* ty=Tensor[(630), float32] */;
    %1123 = @func_2023(%1122) /* ty=(Tensor[(60), int64], Tensor[(11, 7, 1), float64], Tensor[(77), float64], Tensor[(60), int64], Tensor[(420), float64], Tensor[(10, 42), float64], Tensor[(630), float32]) */;
    %1124 = @func_1915() /* ty=Tensor[(60), int64] */;
    %1125 = %1123.4;
    (%1124, %1125, %var_3872)
  };
  %1126(%var_3877) /* ty=(Tensor[(60), int64], Tensor[(420), float64], Tensor[(630), float32]) */
}

def @func_6604() -> (Tensor[(60), int64], Tensor[(12, 5, 9), float64]) {
  @func_6602() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */
}

def @func_6025() -> (Tensor[(1408), float32],) {
  %1127 = @func_5695() /* ty=(Tensor[(70, 9), float64], Tensor[(12, 5, 9), uint64], Tensor[(1408), float32], Tensor[(1408), float32]) */;
  %1128 = %1127.2;
  (%1128,)
}

def @func_7340(%var_7337: Tensor[(540), float64]) -> (Tensor[(60), int64], Tensor[(12, 5, 9), bool], Tensor[(540), float64]) {
  %1129 = @func_4941() /* ty=(Tensor[(60), int64],) */;
  %1130 = cast(%var_7337, dtype="float64") /* ty=Tensor[(540), float64] */;
  %1131 = reshape(%1130, newshape=[12, 5, 9]) /* ty=Tensor[(12, 5, 9), float64] */;
  %1132 = @func_2274(%1131) /* ty=(Tensor[(12, 5, 9), bool], Tensor[(12, 5, 9), float64]) */;
  %1133 = %1129.0;
  %1134 = %1132.0;
  (%1133, %1134, %var_7337)
}

def @func_4907(%var_4905: Tensor[(168), int8]) -> (Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(630), float32], Tensor[(168), int8]) {
  @func_4904(%var_4905) /* ty=(Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(630), float32], Tensor[(168), int8]) */
}

def @func_6753() -> (Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64]) {
  %1135 = @func_1774() /* ty=(Tensor[(12, 5, 9), float64],) */;
  %1136 = @func_1428() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
  %1137 = @func_1206() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(60), int64]) */;
  %1138 = %1135.0;
  %1139 = %1136.0;
  %1140 = %1137.1;
  (%1138, %1139, %1140)
}

def @func_5386(%var_5366: Tensor[(12, 8, 1), float32]) -> (Tensor[(12, 8, ?), float32],) {
  %1141 = cast(%var_5366, dtype="float32") /* ty=Tensor[(12, 8, 1), float32] */;
  %1142 = tan(%1141) /* ty=Tensor[(12, 8, 1), float32] */;
  %1143 = cast(%1142, dtype="int32") /* ty=Tensor[(12, 8, 1), int32] */;
  %1144 = shape_of(%var_5366, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1145 = cast(%var_5366, dtype="int32") /* ty=Tensor[(12, 8, 1), int32] */;
  %1146 = dyn.reshape(%1143, %1144, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1147 = left_shift(%1145, %1146) /* ty=Tensor[(12, 8, ?), int32] */;
  %1148 = cast(%1147, dtype="float32") /* ty=Tensor[(12, 8, ?), float32] */;
  %1149 = sigmoid(%1148) /* ty=Tensor[(12, 8, ?), float32] */;
  (%1149,)
}

def @func_10535() -> (Tensor[(60), int64], Tensor[(14, 14, 3), float32], Tensor[(12, 5, 9), bool], Tensor[(18, 30), float64], Tensor[(7, 84), uint16]) {
  @func_10533() /* ty=(Tensor[(60), int64], Tensor[(14, 14, 3), float32], Tensor[(12, 5, 9), bool], Tensor[(18, 30), float64], Tensor[(7, 84), uint16]) */
}

def @func_7772() -> (Tensor[(12, 5, 9), float64],) {
  %1152 = fn () -> (Tensor[(12, 5, 9), float64],) {
    %1150 = @func_6411() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
    %1151 = %1150.1;
    (%1151,)
  };
  %1152() /* ty=(Tensor[(12, 5, 9), float64],) */
}

def @func_4789() -> (Tensor[(420), float64], Tensor[(2, 6, 5), int64], Tensor[(1408), float32], Tensor[(60), int64]) {
  @func_4787() /* ty=(Tensor[(420), float64], Tensor[(2, 6, 5), int64], Tensor[(1408), float32], Tensor[(60), int64]) */
}

def @func_1429() -> (Tensor[(60), int64], Tensor[(12, 5, 9), float64]) {
  %1157 = fn () -> (Tensor[(60), int64], Tensor[(12, 5, 9), float64]) {
    %1153 = @func_1037() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(2, 6, 5), int64], Tensor[(60), int64]) */;
    %1154 = @func_1206() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(60), int64]) */;
    %1155 = %1153.2;
    %1156 = %1154.0;
    (%1155, %1156)
  };
  %1157() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */
}

def @func_6183(%var_6181: Tensor[(70, 9), float32]) -> (Tensor[(60), int64], Tensor[(630), float32], Tensor[(70, 9), float32]) {
  @func_6180(%var_6181) /* ty=(Tensor[(60), int64], Tensor[(630), float32], Tensor[(70, 9), float32]) */
}

def @func_3689() -> (Tensor[(60), int64], Tensor[(12, 5, 9), float64]) {
  @func_3687() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */
}

def @func_2860() -> Tensor[(60), int64] {
  %1158 = @func_1037() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(2, 6, 5), int64], Tensor[(60), int64]) */;
  %1158.2
}

def @func_4098() -> (Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64]) {
  @func_4096() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64]) */
}

def @func_10200() -> (Tensor[(60), int64], Tensor[(11, 16, 6), float64], Tensor[(1056), float32]) {
  @func_10198() /* ty=(Tensor[(60), int64], Tensor[(11, 16, 6), float64], Tensor[(1056), float32]) */
}

def @func_9218() -> (Tensor[(60), int64],) {
  %1161 = fn () -> (Tensor[(60), int64],) {
    %1159 = @func_3325() /* ty=(Tensor[(60), int64],) */;
    %1160 = %1159.0;
    (%1160,)
  };
  %1161() /* ty=(Tensor[(60), int64],) */
}

def @func_6027() -> (Tensor[(1408), float32],) {
  @func_6025() /* ty=(Tensor[(1408), float32],) */
}

def @func_3432(%var_3430: Tensor[(540), float64]) -> (Tensor[(60), int64], Tensor[(60), int64], Tensor[(540), float64]) {
  @func_3429(%var_3430) /* ty=(Tensor[(60), int64], Tensor[(60), int64], Tensor[(540), float64]) */
}

def @func_9071(%var_9035: Tensor[(14, 14, 3), uint16], %var_9036: Tensor[(14, 14, 3), uint16]) -> (Tensor[(14, 14, 3), bool], Tensor[(14, 14, 3), float32], Tensor[(12, 5, 9), float64]) {
  %1162 = cast(%var_9036, dtype="bool") /* ty=Tensor[(14, 14, 3), bool] */;
  %1163 = shape_of(%var_9035, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1164 = cast(%var_9035, dtype="bool") /* ty=Tensor[(14, 14, 3), bool] */;
  %1165 = dyn.reshape(%1162, %1163, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1166 = cast(%var_9036, dtype="float32") /* ty=Tensor[(14, 14, 3), float32] */;
  %1167 = greater_equal(%1164, %1165) /* ty=Tensor[(14, 14, 3), bool] */;
  %1168 = asinh(%1166) /* ty=Tensor[(14, 14, 3), float32] */;
  %1169 = @func_4639() /* ty=Tensor[(12, 5, 9), float64] */;
  (%1167, %1168, %1169)
}

def @func_4904(%var_4893: Tensor[(168), int8]) -> (Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(630), float32], Tensor[(168), int8]) {
  %1170 = @func_4096() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64]) */;
  %1171 = %1170.2;
  %1172 = cast(%1171, dtype="float64") /* ty=Tensor[(12, 5, 9), float64] */;
  %1173 = cast(%var_4893, dtype="int8") /* ty=Tensor[(168), int8] */;
  %1174 = cast(%var_4893, dtype="int8") /* ty=Tensor[(168), int8] */;
  %1175 = reshape(%1173, newshape=[4, 6, 7]) /* ty=Tensor[(4, 6, 7), int8] */;
  %1176 = reshape(%1174, newshape=[4, 6, 7]) /* ty=Tensor[(4, 6, 7), int8] */;
  %1177 = @func_4294(%1175, %1176) /* ty=(Tensor[(4, 6, 7), int8], Tensor[(12, 5, 9), float32], Tensor[(630), float32]) */;
  %1178 = log2(%1172) /* ty=Tensor[(12, 5, 9), float64] */;
  %1179 = @func_4604() /* ty=Tensor[(60), int64] */;
  %1180 = %1177.2;
  (%1178, %1179, %1180, %var_4893)
}

def @func_2250() -> (Tensor[(12, 5, 9), float64],) {
  %1181 = @func_1792() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64]) */;
  %1182 = %1181.1;
  (%1182,)
}

def @func_4225() -> (Tensor[(12, 5, 9), float64], Tensor[(8, 12, 11), float64], Tensor[(8, 12, 11), int32]) {
  %1183 = @func_3647() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(60), int64]) */;
  %1184 = cast(meta[relay.Constant][58] /* ty=Tensor[(8, 12, 11), float64] */, dtype="float64") /* ty=Tensor[(8, 12, 11), float64] */;
  %1185 = cosh(%1184) /* ty=Tensor[(8, 12, 11), float64] */;
  %1186 = cast(%1185, dtype="float64") /* ty=Tensor[(8, 12, 11), float64] */;
  %1187 = cast(meta[relay.Constant][58] /* ty=Tensor[(8, 12, 11), float64] */, dtype="int32") /* ty=Tensor[(8, 12, 11), int32] */;
  %1188 = shape_of(%1185, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1189 = cast(%1185, dtype="int32") /* ty=Tensor[(8, 12, 11), int32] */;
  %1190 = dyn.reshape(%1187, %1188, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1191 = %1183.0;
  %1192 = sqrt(%1186) /* ty=Tensor[(8, 12, 11), float64] */;
  %1193 = bitwise_xor(%1189, %1190) /* ty=Tensor[(8, 12, 11), int32] */;
  (%1191, %1192, %1193)
}

def @func_5995(%var_5994: Tensor[(11, 16, 6), float32]) -> Tensor[(11, 16, 6), float64] {
  %1205 = fn (%var_5975: Tensor[(11, 16, 6), float32]) -> Tensor[(11, 16, 6), float64] {
    %1194 = cast(%var_5975, dtype="float32") /* ty=Tensor[(11, 16, 6), float32] */;
    %1195 = sin(%1194) /* ty=Tensor[(11, 16, 6), float32] */;
    %1196 = cast(%1195, dtype="uint16") /* ty=Tensor[(11, 16, 6), uint16] */;
    %1197 = shape_of(%var_5975, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1198 = cast(%var_5975, dtype="uint16") /* ty=Tensor[(11, 16, 6), uint16] */;
    %1199 = dyn.reshape(%1196, %1197, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1200 = multiply(%1198, %1199) /* ty=Tensor[(11, 16, 6), uint16] */;
    %1201 = cast(%1200, dtype="float64") /* ty=Tensor[(11, 16, 6), float64] */;
    %1202 = shape_of(%var_5975, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1203 = cast(%var_5975, dtype="float64") /* ty=Tensor[(11, 16, 6), float64] */;
    %1204 = dyn.reshape(%1201, %1202, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    power(%1203, %1204) /* ty=Tensor[(11, 16, 6), float64] */
  };
  %1205(%var_5994) /* ty=Tensor[(11, 16, 6), float64] */
}

def @func_4457() -> (Tensor[(60), int64],) {
  %1206 = @func_3687() /* ty=(Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
  %1207 = %1206.0;
  (%1207,)
}

def @func_11135() -> (Tensor[(420), float64],) {
  %1210 = fn () -> (Tensor[(420), float64],) {
    %1208 = @func_4190() /* ty=(Tensor[(420), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
    %1209 = %1208.0;
    (%1209,)
  };
  %1210() /* ty=(Tensor[(420), float64],) */
}

def @func_8067() -> (Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float32], Tensor[(12, 5, 9), float64]) {
  %1211 = @func_2718() /* ty=(Tensor[(12, 5, 9), float64],) */;
  %1212 = @func_6279() /* ty=(Tensor[(12, 5, 9), float64],) */;
  %1213 = %1211.0;
  %1214 = @func_1942() /* ty=Tensor[(12, 5, 9), float32] */;
  %1215 = %1212.0;
  (%1213, %1214, %1215)
}

def @func_9820() -> Tensor[(12, 5, 9), float64] {
  %1217 = fn () -> Tensor[(12, 5, 9), float64] {
    %1216 = @func_6279() /* ty=(Tensor[(12, 5, 9), float64],) */;
    %1216.0
  };
  %1217() /* ty=Tensor[(12, 5, 9), float64] */
}

def @func_4640() -> Tensor[(12, 5, 9), float64] {
  %1219 = fn () -> Tensor[(12, 5, 9), float64] {
    %1218 = @func_2718() /* ty=(Tensor[(12, 5, 9), float64],) */;
    %1218.0
  };
  %1219() /* ty=Tensor[(12, 5, 9), float64] */
}

def @func_10198() -> (Tensor[(60), int64], Tensor[(11, 16, 6), float64], Tensor[(1056), float32]) {
  %1220 = cast(meta[relay.Constant][59] /* ty=Tensor[(1056), float32] */, dtype="float32") /* ty=Tensor[(1056), float32] */;
  %1221 = reshape(%1220, newshape=[11, 16, 6]) /* ty=Tensor[(11, 16, 6), float32] */;
  %1222 = @func_9358() /* ty=Tensor[(60), int64] */;
  %1223 = @func_5993(%1221) /* ty=Tensor[(11, 16, 6), float64] */;
  (%1222, %1223, meta[relay.Constant][59] /* ty=Tensor[(1056), float32] */)
}

def @func_10793() -> (Tensor[(420), float64],) {
  %1226 = fn () -> (Tensor[(420), float64],) {
    %1224 = @func_4190() /* ty=(Tensor[(420), float64], Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */;
    %1225 = %1224.0;
    (%1225,)
  };
  %1226() /* ty=(Tensor[(420), float64],) */
}

def @func_4096() -> (Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64]) {
  %1227 = @func_1206() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(60), int64]) */;
  %1228 = @func_2718() /* ty=(Tensor[(12, 5, 9), float64],) */;
  %1229 = %1227.2;
  %1230 = @func_874() /* ty=Tensor[(12, 5, 9), float64] */;
  %1231 = @func_874() /* ty=Tensor[(12, 5, 9), float64] */;
  %1232 = %1228.0;
  (%1229, %1230, %1231, %1232)
}

def @func_9891(%var_9875: Tensor[(8, 3, 1), uint32], %var_9876: Tensor[(8, 3, 6), uint32]) -> (Tensor[(8, 3, 6), bool], Tensor[(8, 3, 6), float32], Tensor[(60), int64]) {
  %1233 = cast(%var_9875, dtype="bool") /* ty=Tensor[(8, 3, 1), bool] */;
  %1234 = cast(%var_9876, dtype="bool") /* ty=Tensor[(8, 3, 6), bool] */;
  %1235 = cast(%var_9876, dtype="float32") /* ty=Tensor[(8, 3, 6), float32] */;
  %1236 = @func_4457() /* ty=(Tensor[(60), int64],) */;
  %1237 = less(%1233, %1234) /* ty=Tensor[(8, 3, 6), bool] */;
  %1238 = acosh(%1235) /* ty=Tensor[(8, 3, 6), float32] */;
  %1239 = %1236.0;
  (%1237, %1238, %1239)
}

def @func_3535() -> (Tensor[(8, 16, 11), float32], Tensor[(60), int64], Tensor[(12, 5, 9), float64]) {
  @func_3533() /* ty=(Tensor[(8, 16, 11), float32], Tensor[(60), int64], Tensor[(12, 5, 9), float64]) */
}

def @func_8745() -> (Tensor[(60), int64], Tensor[(?, 9, 10), bool], Tensor[(420), float64], Tensor[(630), float32]) {
  @func_8743() /* ty=(Tensor[(60), int64], Tensor[(?, 9, 10), bool], Tensor[(420), float64], Tensor[(630), float32]) */
}

def @func_9525() -> (Tensor[(12, 5, 9), bool],) {
  @func_9523() /* ty=(Tensor[(12, 5, 9), bool],) */
}

def @func_2357(%var_2346: Tensor[(420), float64]) -> (Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(8, 16, 11), bool], Tensor[(420), float64], Tensor[(352, 4), float32]) {
  %1240 = @func_1206() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(12, 5, 9), float64], Tensor[(60), int64]) */;
  %1241 = @func_2250() /* ty=(Tensor[(12, 5, 9), float64],) */;
  %1242 = cast(%var_2346, dtype="float64") /* ty=Tensor[(420), float64] */;
  %1243 = cast(meta[relay.Constant][60] /* ty=Tensor[(352, 4), float32] */, dtype="float32") /* ty=Tensor[(352, 4), float32] */;
  %1244 = reshape(%1242, newshape=[12, 5, 7]) /* ty=Tensor[(12, 5, 7), float64] */;
  %1245 = reshape(%1243, newshape=[1408]) /* ty=Tensor[(1408), float32] */;
  %1246 = @func_775(%1244, %1245) /* ty=(Tensor[(12, 5, 7), float64], Tensor[(2, 6, 5), int64], Tensor[(15, 4), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(2, 6, 5), int64], Tensor[(8, 16, 11), bool], Tensor[(1408), float32]) */;
  %1247 = %1240.0;
  %1248 = %1241.0;
  %1249 = %1246.8;
  (%1247, %1248, %1249, %var_2346, meta[relay.Constant][60] /* ty=Tensor[(352, 4), float32] */)
}

def @func_11110(%var_11039: Tensor[(420), float64]) -> (Tensor[(6), float64], Tensor[(?, 9, 10), bool], Tensor[(420), float64], Tensor[(630), float32], Tensor[(60), int64], Tensor[(12, 5, 9), float64], Tensor[(420), float64]) {
  %1250 = cast(%var_11039, dtype="float64") /* ty=Tensor[(420), float64] */;
  %1251 = cast(meta[relay.Constant][61] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %1252 = reshape(%1250, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %1253 = reshape(%1251, newshape=[630, 1]) /* ty=Tensor[(630, 1), float32] */;
  %1254 = @func_1715(%1252, %1253) /* ty=(Tensor[(12, 5, 9), float64], Tensor[(15, 4), int64], Tensor[(420), float64], Tensor[(1408), float32], Tensor[(?, 9, 10), bool], Tensor[(630, 1), float32]) */;
  %1255 = @func_3312() /* ty=(Tensor[(12, 5, 9), float64], Tensor[(60), int64], Tensor[(420), float64], Tensor[(12, 5, 9), float64]) */;
  %1256 = cast(meta[relay.Constant][61] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %1257 = reshape(%1256, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %1258 = @func_3876(%1257) /* ty=(Tensor[(60), int64], Tensor[(420), float64], Tensor[(630), float32]) */;
  %1259 = @func_10712() /* ty=Tensor[(6), float64] */;
  %1260 = %1254.4;
  %1261 = @func_3269() /* ty=Tensor[(60), int64] */;
  %1262 = %1255.0;
  %1263 = %1258.1;
  (%1259, %1260, %var_11039, meta[relay.Constant][61] /* ty=Tensor[(630), float32] */, %1261, %1262, %1263)
}

def @func_8402(%var_8377: Tensor[(3, 16, 7), float64]) -> (Tensor[(3, 16, 7), float64], Tensor[(12, 5, 9), float64]) {
  %1264 = cast(%var_8377, dtype="float64") /* ty=Tensor[(3, 16, 7), float64] */;
  %1265 = @func_7771() /* ty=(Tensor[(12, 5, 9), float64],) */;
  %1266 = atanh(%1264) /* ty=Tensor[(3, 16, 7), float64] */;
  %1267 = %1265.0;
  (%1266, %1267)
}

def @func_3429(%var_3421: Tensor[(540), float64]) -> (Tensor[(60), int64], Tensor[(60), int64], Tensor[(540), float64]) {
  %1268 = cast(%var_3421, dtype="float64") /* ty=Tensor[(540), float64] */;
  %1269 = reshape(%1268, newshape=[12, 5, 9]) /* ty=Tensor[(12, 5, 9), float64] */;
  %1270 = @func_3086(%1269) /* ty=(Tensor[(12, 5, 9), uint8], Tensor[(60), int64]) */;
  %1271 = @func_3269() /* ty=Tensor[(60), int64] */;
  %1272 = %1270.1;
  (%1271, %1272, %var_3421)
}

def @func_4806() -> Tensor[(5, 7, 9), uint16] {
  %1277 = fn () -> Tensor[(5, 7, 9), uint16] {
    %1273 = cast(meta[relay.Constant][63] /* ty=Tensor[(5, 7, 9), uint16] */, dtype="uint16") /* ty=Tensor[(5, 7, 9), uint16] */;
    %1274 = shape_of(meta[relay.Constant][62] /* ty=Tensor[(5, 7, 9), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1275 = cast(meta[relay.Constant][62] /* ty=Tensor[(5, 7, 9), uint16] */, dtype="uint16") /* ty=Tensor[(5, 7, 9), uint16] */;
    %1276 = dyn.reshape(%1273, %1274, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    minimum(%1275, %1276) /* ty=Tensor[(5, 7, 9), uint16] */
  };
  %1277() /* ty=Tensor[(5, 7, 9), uint16] */
}

def @func_6989(%var_6987: Tensor[(6, 2, 13), float64], %var_6988: Tensor[(9, 60), float64]) -> (Tensor[(6, 2, 13), float64], Tensor[(12, 5, 9), bool], Tensor[(9, 60), float64]) {
  %1284 = fn (%var_6963: Tensor[(6, 2, 13), float64], %var_6975: Tensor[(9, 60), float64]) -> (Tensor[(6, 2, 13), float64], Tensor[(12, 5, 9), bool], Tensor[(9, 60), float64]) {
    %1278 = cast(%var_6963, dtype="float64") /* ty=Tensor[(6, 2, 13), float64] */;
    %1279 = cast(%var_6975, dtype="float64") /* ty=Tensor[(9, 60), float64] */;
    %1280 = reshape(%1279, newshape=[12, 5, 9]) /* ty=Tensor[(12, 5, 9), float64] */;
    %1281 = @func_2274(%1280) /* ty=(Tensor[(12, 5, 9), bool], Tensor[(12, 5, 9), float64]) */;
    %1282 = acos(%1278) /* ty=Tensor[(6, 2, 13), float64] */;
    %1283 = %1281.0;
    (%1282, %1283, %var_6975)
  };
  %1284(%var_6987, %var_6988) /* ty=(Tensor[(6, 2, 13), float64], Tensor[(12, 5, 9), bool], Tensor[(9, 60), float64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen327/build/output.py:3803: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen327/build/output.py", line 3808, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(9) tvmgen_default_fused_cast_logical_and_cast_power_kernel0(float* __restrict__ T_power, signed char* __restrict__ placeholder, signed char* __restrict__ placeholder1) {
  T_power[(((int)threadIdx.x))] = powf(((float)((bool)placeholder[(0)])), ((float)(((bool)placeholder[(0)]) && ((bool)placeholder1[(((int)threadIdx.x))]))));
}

extern "C" __global__ void __launch_bounds__(396) tvmgen_default_fused_cast_erf_cast_cast_logical_or_kernel0(signed char* __restrict__ T_logical_or, signed char* __restrict__ placeholder, double* __restrict__ placeholder1) {
  T_logical_or[(((int)threadIdx.x))] = ((signed char)(((bool)erf(((double)((bool)placeholder[((((int)threadIdx.x) / 44))])))) || ((bool)placeholder1[(((int)threadIdx.x))])));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


==========mod==========
#[version = "0.0.5"]
def @func_20650() -> Tensor[(432), float32] {
  %0 = @func_12722() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32]) */;
  %0.1
}

def @func_17319() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1 = @func_6014() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %2 = @func_13061() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32]) */;
  %3 = %1.0;
  %4 = %2.0;
  (%3, %4)
}

def @func_19656() -> (Tensor[(10, 2, 16), float32],) {
  %5 = @func_3474() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %6 = %5.0;
  (%6,)
}

def @func_4531(%var_4494: Tensor[(10, 7, 1), float32]) -> (Tensor[(10, 7, 1), float32], Tensor[(10, 2, 16), float32]) {
  %7 = cast(%var_4494, dtype="float32") /* ty=Tensor[(10, 7, 1), float32] */;
  %8 = log2(%7) /* ty=Tensor[(10, 7, 1), float32] */;
  %9 = @func_3845() /* ty=Tensor[(10, 2, 16), float32] */;
  (%8, %9)
}

def @func_1288(%var_1271: Tensor[(10, 2, 16), uint8]) -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %10 = @func_1041() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %11 = @func_807() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %12 = @func_880() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %13 = %12.0;
  %14 = cast(%var_1271, dtype="float32") /* ty=Tensor[(10, 2, 16), float32] */;
  %15 = shape_of(%13, dtype="int32") /* ty=Tensor[(3), int32] */;
  %16 = cast(%13, dtype="float32") /* ty=Tensor[(10, 2, 16), float32] */;
  %17 = dyn.reshape(%14, %15, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %18 = @func_407() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %19 = %10.0;
  %20 = @func_900() /* ty=Tensor[(10, 2, 16), uint8] */;
  %21 = %11.1;
  %22 = mod(%16, %17) /* ty=Tensor[(10, 2, 16), float32] */;
  %23 = %18.1;
  (%19, %20, %21, %22, %23)
}

def @func_7106() -> (Tensor[(10, 2, 16), uint8],) {
  %24 = @func_900() /* ty=Tensor[(10, 2, 16), uint8] */;
  (%24,)
}

def @func_12556() -> (Tensor[(15, 11, 2), bool],) {
  %25 = cast(meta[relay.Constant][0] /* ty=Tensor[(15, 11, 2), float64] */, dtype="float64") /* ty=Tensor[(15, 11, 2), float64] */;
  %26 = asinh(%25) /* ty=Tensor[(15, 11, 2), float64] */;
  %27 = cast(meta[relay.Constant][0] /* ty=Tensor[(15, 11, 2), float64] */, dtype="bool") /* ty=Tensor[(15, 11, 2), bool] */;
  %28 = shape_of(%26, dtype="int32") /* ty=Tensor[(3), int32] */;
  %29 = cast(%26, dtype="bool") /* ty=Tensor[(15, 11, 2), bool] */;
  %30 = dyn.reshape(%27, %28, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %31 = greater(%29, %30) /* ty=Tensor[(15, 11, 2), bool] */;
  (%31,)
}

def @func_20900() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %32 = @func_6472() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %33 = @func_4049() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48, 1), float32]) */;
  %34 = %32.0;
  %35 = %33.0;
  (%34, %35)
}

def @func_2371(%var_2355: Tensor[(10, 16, 15), int16], %var_2356: Tensor[(10, 16, 15), int16]) -> Tensor[(10, 16, 15), int16] {
  %36 = cast(%var_2356, dtype="int16") /* ty=Tensor[(10, 16, 15), int16] */;
  %37 = shape_of(%var_2355, dtype="int32") /* ty=Tensor[(3), int32] */;
  %38 = cast(%var_2355, dtype="int16") /* ty=Tensor[(10, 16, 15), int16] */;
  %39 = dyn.reshape(%36, %37, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_xor(%38, %39) /* ty=Tensor[(10, 16, 15), int16] */
}

def @func_11991() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) {
  %40 = @func_327() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %41 = @func_7629() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
  %42 = @func_4109() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %43 = %40.0;
  %44 = %41.2;
  %45 = %42.0;
  (%43, %44, %45)
}

def @func_23439() -> (Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %46 = @func_22602() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %47 = @func_4609() /* ty=Tensor[(10, 2, 16), bool] */;
  %48 = %46.0;
  %49 = @func_10552() /* ty=Tensor[(10, 2, 16), float32] */;
  %50 = @func_14023() /* ty=Tensor[(10, 2, 16), float32] */;
  (%47, %48, %49, %50)
}

def @func_27280() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %51 = @func_14954() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %52 = @func_11991() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %53 = %51.1;
  %54 = %52.0;
  (%53, %54)
}

def @func_26844() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %55 = @func_11851() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8]) */;
  %56 = @func_14763() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %57 = %55.2;
  %58 = %56.1;
  (%57, %58)
}

def @func_28525() -> (Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float64], Tensor[(10, 2, 16), float32]) {
  %59 = @func_23544() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), bool], Tensor[(432), float32]) */;
  %60 = @func_22490() /* ty=(Tensor[(2, 8, 9), float64],) */;
  %61 = @func_20900() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %62 = %59.1;
  %63 = %60.0;
  %64 = %61.0;
  (%62, %63, %64)
}

def @func_407() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %65 = @func_305() /* ty=Tensor[(10, 2, 16), float32] */;
  %66 = @func_257() /* ty=Tensor[(10, 2, 16), float32] */;
  (%65, %66)
}

def @func_4003() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) {
  %67 = @func_1958() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %68 = @func_3531() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(2, 8, 9), float32]) */;
  %69 = %67.1;
  %70 = @func_257() /* ty=Tensor[(10, 2, 16), float32] */;
  %71 = @func_1377() /* ty=Tensor[(10, 2, 16), float32] */;
  %72 = %68.0;
  (%69, %70, %71, %72)
}

def @func_2008() -> Tensor[(10, 2, 16), float32] {
  %73 = @func_1657() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %73.0
}

def @func_6772() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) {
  %74 = @func_1041() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %75 = @func_2256() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
  %76 = %74.0;
  %77 = %75.0;
  (%76, %77)
}

def @func_16305() -> Tensor[(10, 2, 16), bool] {
  @func_4609() /* ty=Tensor[(10, 2, 16), bool] */
}

def @func_9042() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) {
  %78 = @func_3030() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32]) */;
  %79 = @func_7273() /* ty=(Tensor[(2, 8, 9), float32],) */;
  %80 = %78.0;
  %81 = @func_8863() /* ty=Tensor[(10, 2, 16), bool] */;
  %82 = @func_445() /* ty=Tensor[(10, 2, 16), float32] */;
  %83 = %79.0;
  (%80, %81, %82, %83)
}

def @func_16763() -> (Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) {
  %84 = @func_16059() /* ty=(Tensor[(2, 8, 9), float32], Tensor[(2, 8, 9), float32], Tensor[(432), float32]) */;
  %85 = @func_10552() /* ty=Tensor[(10, 2, 16), float32] */;
  %86 = %84.0;
  (%85, %86)
}

def @func_26094() -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) {
  %87 = @func_19264() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
  %88 = @func_6046() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %89 = %87.0;
  %90 = %88.0;
  (%89, %90)
}

def @func_16884() -> Tensor[(10, 2, 16), float32] {
  %91 = @func_16748() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %91.2
}

def @func_4875() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %92 = @func_2008() /* ty=Tensor[(10, 2, 16), float32] */;
  %93 = @func_2008() /* ty=Tensor[(10, 2, 16), float32] */;
  (%92, %93)
}

def @func_25194() -> Tensor[(10, 2, 16), float32] {
  %94 = @func_19427() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %94.2
}

def @func_2341() -> (Tensor[(10, 2, 16), float64],) {
  %95 = @func_431() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %96 = %95.1;
  (%96,)
}

def @func_18271() -> (Tensor[(7, 2, 14), float64], Tensor[(7, 2, 14), float32], Tensor[(10, 2, 16), float64]) {
  %97 = cast(meta[relay.Constant][1] /* ty=Tensor[(7, 2, 14), float64] */, dtype="float64") /* ty=Tensor[(7, 2, 14), float64] */;
  %98 = cast(meta[relay.Constant][1] /* ty=Tensor[(7, 2, 14), float64] */, dtype="float32") /* ty=Tensor[(7, 2, 14), float32] */;
  %99 = @func_18209() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float64]) */;
  %100 = cos(%97) /* ty=Tensor[(7, 2, 14), float64] */;
  %101 = tan(%98) /* ty=Tensor[(7, 2, 14), float32] */;
  %102 = %99.3;
  (%100, %101, %102)
}

def @func_26270(%var_26256: Tensor[(240), bool]) -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(240), bool], Tensor[(10, 2, 16), float32]) {
  %103 = @func_17277() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(70), float32]) */;
  %104 = @func_7146() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %105 = cast(%var_26256, dtype="bool") /* ty=Tensor[(240), bool] */;
  %106 = reshape(%105, newshape=[240]) /* ty=Tensor[(240), bool] */;
  %107 = @func_19052(%106) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(48), float32], Tensor[(240), bool], Tensor[(48, 1), float32], Tensor[(10, 2, 16), uint8], Tensor[(2400), int16], Tensor[(10, 7, 48), float64]) */;
  %108 = %103.0;
  %109 = %104.0;
  %110 = %107.1;
  %111 = @func_23931() /* ty=Tensor[(10, 2, 16), float32] */;
  (%108, %109, %110, %var_26256, %111)
}

def @func_7522() -> (Tensor[(10, 2, 16), float32],) {
  %112 = @func_3845() /* ty=Tensor[(10, 2, 16), float32] */;
  (%112,)
}

def @func_1989() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %113 = @func_362() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %114 = @func_1041() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %115 = @func_900() /* ty=Tensor[(10, 2, 16), uint8] */;
  %116 = %113.0;
  %117 = %114.1;
  %118 = @func_445() /* ty=Tensor[(10, 2, 16), float32] */;
  (%115, %116, %117, %118)
}

def @func_6876(%var_6853: Tensor[(3, 5, 9), float64]) -> (Tensor[(3, 5, 9), float64], Tensor[(3, 5, 9), float32]) {
  %119 = cast(%var_6853, dtype="float64") /* ty=Tensor[(3, 5, 9), float64] */;
  %120 = cast(%var_6853, dtype="float32") /* ty=Tensor[(3, 5, 9), float32] */;
  %121 = asinh(%119) /* ty=Tensor[(3, 5, 9), float64] */;
  %122 = sqrt(%120) /* ty=Tensor[(3, 5, 9), float32] */;
  (%121, %122)
}

def @func_11649() -> (Tensor[(10, 2, 16), uint8],) {
  %123 = @func_5146() /* ty=(Tensor[(10, 2, 16), uint8],) */;
  %124 = %123.0;
  (%124,)
}

def @func_14364() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %125 = @func_9140() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %126 = @func_5402() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(432), float32]) */;
  %127 = %125.0;
  %128 = %126.1;
  (%127, %128)
}

def @func_1496() -> (Tensor[(432), float32], Tensor[(10, 2, 16), float32]) {
  %129 = @func_1437() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(6, 9, 8), float32], Tensor[(432), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %130 = %129.2;
  %131 = @func_257() /* ty=Tensor[(10, 2, 16), float32] */;
  (%130, %131)
}

def @func_22433() -> Tensor[(10, 2, 16), float32] {
  %132 = @func_13585() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %132.0
}

def @func_15063() -> (Tensor[(10, 2, 16), float64], Tensor[(2, 8, 9), float32]) {
  %133 = @func_7914() /* ty=(Tensor[(2, 8, 9), float32],) */;
  %134 = @func_10674() /* ty=Tensor[(10, 2, 16), float64] */;
  %135 = %133.0;
  (%134, %135)
}

def @func_9686() -> (Tensor[(10, 2, 16), float32],) {
  %136 = @func_431() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %137 = %136.0;
  (%137,)
}

def @func_12866() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %138 = @func_3030() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32]) */;
  %139 = @func_305() /* ty=Tensor[(10, 2, 16), float32] */;
  %140 = %138.0;
  (%139, %140)
}

def @func_20606() -> Tensor[(10, 2, 16), float32] {
  %141 = @func_16186() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %141.0
}

def @func_16620() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), int64]) {
  %142 = @func_13294() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %143 = @func_12866() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %144 = @func_9821() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), uint8]) */;
  %145 = %142.0;
  %146 = cast(%145, dtype="float32") /* ty=Tensor[(10, 2, 16), float32] */;
  %147 = reshape(%146, newshape=[10, 2, 16]) /* ty=Tensor[(10, 2, 16), float32] */;
  %148 = @func_7734(%147) /* ty=(Tensor[(10, 2, 16), int64], Tensor[(10, 2, 16), float32]) */;
  %149 = %143.1;
  %150 = %144.1;
  %151 = %148.0;
  (%145, %149, %150, %151)
}

def @func_22344() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %152 = @func_13294() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %153 = @func_19761() /* ty=Tensor[(10, 2, 16), float32] */;
  %154 = %152.0;
  (%153, %154)
}

def @func_21516() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(70), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %155 = @func_10769() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %156 = @func_2711() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %157 = cast(meta[relay.Constant][2] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
  %158 = reshape(%157, newshape=[1, 70]) /* ty=Tensor[(1, 70), float32] */;
  %159 = @func_7015(%158) /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(1, 70), float32], Tensor[(10, 7, 48), float32]) */;
  %160 = @func_14364() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %161 = %155.0;
  %162 = %156.0;
  %163 = %159.0;
  %164 = @func_15729() /* ty=Tensor[(10, 2, 16), float32] */;
  %165 = @func_17189() /* ty=Tensor[(10, 2, 16), float32] */;
  %166 = %160.0;
  (%161, %162, %163, meta[relay.Constant][2] /* ty=Tensor[(70), float32] */, %164, %165, %166)
}

def @func_26297() -> (Tensor[(10, 2, 16), float32],) {
  %167 = @func_15678() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %168 = %167.0;
  (%168,)
}

def @func_11130() -> Tensor[(10, 2, 16), float32] {
  %169 = @func_8655() /* ty=(Tensor[(6, 9, 8), float32], Tensor[(10, 2, 16), float32]) */;
  %169.1
}

def @func_15432() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %170 = @func_10505() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %171 = @func_1630() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
  %172 = @func_5941() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %173 = @func_9686() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %174 = %170.1;
  %175 = %171.2;
  %176 = %172.1;
  %177 = %173.0;
  (%174, %175, %176, %177)
}

def @func_21709() -> Tensor[(2400), float32] {
  %178 = @func_4799() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(2400), int16]) */;
  %179 = %178.1;
  %180 = cast(%179, dtype="float32") /* ty=Tensor[(2400), float32] */;
  log(%180) /* ty=Tensor[(2400), float32] */
}

def @func_711() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) {
  %181 = cast(meta[relay.Constant][3] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %182 = reshape(%181, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %183 = @func_621(%182) /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(4, 3, 4), float32], Tensor[(48), float32]) */;
  %184 = @func_445() /* ty=Tensor[(10, 2, 16), float32] */;
  %185 = %183.1;
  (%184, %185, meta[relay.Constant][3] /* ty=Tensor[(48), float32] */)
}

def @func_13327() -> (Tensor[(48), float32], Tensor[(4, 14, 12), float32], float32) {
  %186 = @func_9573() /* ty=(Tensor[(48), float32],) */;
  %187 = cast(-7.30058f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %188 = reshape(%187, newshape=[]) /* ty=float32 */;
  %189 = @func_1070(%188) /* ty=(Tensor[(4, 14, 12), float32], Tensor[(10, 2, 16), float32]) */;
  %190 = %186.0;
  %191 = %189.0;
  (%190, %191, -7.30058f /* ty=float32 */)
}

def @func_25988() -> (Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float64]) {
  %192 = @func_17490() /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), uint8], Tensor[(320), uint8], Tensor[(432), float32]) */;
  %193 = @func_3294() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
  %194 = @func_21141() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(432), float32], Tensor[(10, 2, 16), float64], float32, float32, Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %195 = @func_7152() /* ty=Tensor[(10, 2, 16), float32] */;
  %196 = %192.3;
  %197 = %193.1;
  %198 = %194.0;
  (%195, %196, %197, %198)
}

def @func_2960() -> (Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), float32]) {
  %199 = @func_362() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %200 = @func_1156() /* ty=Tensor[(10, 2, 16), float32] */;
  %201 = @func_2078() /* ty=Tensor[(432), float32] */;
  %202 = %199.1;
  (%200, %201, %202)
}

def @func_18113() -> (Tensor[(10, 2, 16), float32],) {
  %203 = @func_14161() /* ty=Tensor[(10, 2, 16), float32] */;
  (%203,)
}

def @func_8265(%var_8256: float32) -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], float32) {
  %204 = @func_1630() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
  %205 = cast(%var_8256, dtype="float32") /* ty=float32 */;
  %206 = reshape(%205, newshape=[]) /* ty=float32 */;
  %207 = @func_1070(%206) /* ty=(Tensor[(4, 14, 12), float32], Tensor[(10, 2, 16), float32]) */;
  %208 = %204.1;
  %209 = %207.1;
  (%208, %209, %var_8256)
}

def @func_10487() -> Tensor[(8, ?, 2), bool] {
  @func_10278() /* ty=Tensor[(8, ?, 2), bool] */
}

def @func_8538() -> (Tensor[(2400), int16], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float64], Tensor[(432), float32], Tensor[(10, 2, 16), float32]) {
  %210 = @func_1766() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool]) */;
  %211 = @func_2515() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %212 = @func_6728() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(432), float32]) */;
  %213 = @func_1989() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %214 = @func_3788() /* ty=Tensor[(2400), int16] */;
  %215 = %210.2;
  %216 = %211.1;
  %217 = %212.2;
  %218 = %213.3;
  (%214, %215, %216, %217, %218)
}

def @func_6728() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(432), float32]) {
  %219 = @func_3030() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32]) */;
  %220 = @func_2711() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %221 = %219.0;
  %222 = %220.1;
  %223 = @func_2078() /* ty=Tensor[(432), float32] */;
  (%221, %222, %223)
}

def @func_22363() -> Tensor[(432), float32] {
  @func_2078() /* ty=Tensor[(432), float32] */
}

def @func_4372() -> Tensor[(10, 2, 16), float32] {
  %224 = @func_3030() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32]) */;
  %224.0
}

def @func_3531() -> (Tensor[(10, 2, 16), uint8], Tensor[(2, 8, 9), float32]) {
  %225 = @func_1989() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %226 = @func_3439() /* ty=(Tensor[(2, 8, 9), float32], Tensor[(10, 2, 16), float32], Tensor[(8, ?, 2), bool]) */;
  %227 = %225.0;
  %228 = %226.0;
  (%227, %228)
}

def @func_12464() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) {
  %229 = @func_9821() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), uint8]) */;
  %230 = @func_327() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %231 = %229.1;
  %232 = %230.0;
  (%231, %232)
}

def @func_6472() -> (Tensor[(10, 2, 16), float32],) {
  %233 = @func_1476() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %234 = %233.1;
  (%234,)
}

def @func_4109() -> (Tensor[(10, 2, 16), float32],) {
  %235 = @func_3030() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32]) */;
  %236 = %235.0;
  (%236,)
}

def @func_27891() -> Tensor[(10, 2, 16), uint8] {
  %237 = @func_21930() /* ty=(Tensor[(10, 2, 16), uint8],) */;
  %237.0
}

def @func_10505() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) {
  %238 = @func_2678() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %239 = @func_7432() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %240 = @func_3845() /* ty=Tensor[(10, 2, 16), float32] */;
  %241 = %238.1;
  %242 = %239.0;
  (%240, %241, %242)
}

def @func_10245() -> Tensor[(10, 2, 16), float32] {
  %243 = @func_8227() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %243.0
}

def @func_17671() -> (Tensor[(2, 8, 9), float32],) {
  %244 = @func_9042() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) */;
  %245 = %244.3;
  %246 = cast(%245, dtype="float32") /* ty=Tensor[(2, 8, 9), float32] */;
  %247 = atan(%246) /* ty=Tensor[(2, 8, 9), float32] */;
  (%247,)
}

def @func_23912() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %248 = @func_17277() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(70), float32]) */;
  %249 = @func_880() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %250 = @func_7432() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %251 = %248.0;
  %252 = %249.1;
  %253 = %250.1;
  (%251, %252, %253)
}

def @func_10716() -> Tensor[(432), float32] {
  %254 = @func_5503() /* ty=(Tensor[(432), float32],) */;
  %254.0
}

def @func_10428() -> (Tensor[(10, 2, 16), float64],) {
  %255 = @func_4799() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(2400), int16]) */;
  %256 = %255.0;
  (%256,)
}

def @func_17490() -> (Tensor[(432), float32], Tensor[(10, 2, 16), uint8], Tensor[(320), uint8], Tensor[(432), float32]) {
  %257 = @func_15945() /* ty=(Tensor[(432), float32],) */;
  %258 = cast(meta[relay.Constant][4] /* ty=Tensor[(320), uint8] */, dtype="uint8") /* ty=Tensor[(320), uint8] */;
  %259 = reshape(%258, newshape=[10, 2, 16]) /* ty=Tensor[(10, 2, 16), uint8] */;
  %260 = @func_1288(%259) /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %261 = @func_15945() /* ty=(Tensor[(432), float32],) */;
  %262 = %257.0;
  %263 = %260.0;
  %264 = %261.0;
  (%262, %263, meta[relay.Constant][4] /* ty=Tensor[(320), uint8] */, %264)
}

def @func_19761() -> Tensor[(10, 2, 16), float32] {
  %265 = @func_10794() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %265.0
}

def @func_28008() -> (Tensor[(10, 2, 16), float32],) {
  %266 = @func_11305() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %267 = %266.0;
  (%267,)
}

def @func_22708() -> Tensor[(2, 8, 9), float64] {
  %268 = @func_5718() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) */;
  %269 = %268.1;
  %270 = cast(%269, dtype="float64") /* ty=Tensor[(2, 8, 9), float64] */;
  cosh(%270) /* ty=Tensor[(2, 8, 9), float64] */
}

def @func_10651() -> Tensor[(8, 9, 6), float64] {
  %271 = @func_5767() /* ty=(Tensor[(8, 9, 6), float64], Tensor[(10, 2, 16), float32]) */;
  %271.0
}

def @func_12219() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
  %272 = @func_8103() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(10, 2, 16), float32]) */;
  %273 = @func_6014() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %274 = @func_431() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %275 = %272.3;
  %276 = %273.0;
  %277 = @func_11130() /* ty=Tensor[(10, 2, 16), float32] */;
  %278 = %274.1;
  (%275, %276, %277, %278)
}

def @func_15779() -> Tensor[(10, 2, 16), float32] {
  %279 = @func_14651() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %279.0
}

def @func_22004() -> Tensor[(10, 2, 16), float64] {
  %280 = @func_6498() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float64]) */;
  %280.0
}

def @func_7015(%var_6984: Tensor[(1, 70), float32]) -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(1, 70), float32], Tensor[(10, 7, 48), float32]) {
  %281 = @func_5466() /* ty=(Tensor[(10, 2, 16), float64],) */;
  %282 = @func_5402() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(432), float32]) */;
  %283 = cast(meta[relay.Constant][5] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %284 = reshape(%283, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %285 = @func_621(%284) /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(4, 3, 4), float32], Tensor[(48), float32]) */;
  %286 = cast(%var_6984, dtype="float32") /* ty=Tensor[(1, 70), float32] */;
  %287 = reshape(%286, newshape=[10, 7, 1]) /* ty=Tensor[(10, 7, 1), float32] */;
  %288 = @func_4531(%287) /* ty=(Tensor[(10, 7, 1), float32], Tensor[(10, 2, 16), float32]) */;
  %289 = %288.0;
  %290 = cast(meta[relay.Constant][5] /* ty=Tensor[(48), float32] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %291 = cast(%289, dtype="float64") /* ty=Tensor[(10, 7, 1), float64] */;
  %292 = mod(%290, %291) /* ty=Tensor[(10, 7, 48), float64] */;
  %293 = cast(%292, dtype="float32") /* ty=Tensor[(10, 7, 48), float32] */;
  %294 = %281.0;
  %295 = %282.1;
  %296 = %285.1;
  %297 = exp(%293) /* ty=Tensor[(10, 7, 48), float32] */;
  (%294, %295, %296, %var_6984, %297)
}

def @func_18471() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %298 = @func_1437() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(6, 9, 8), float32], Tensor[(432), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %299 = @func_6349() /* ty=(Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %300 = %298.3;
  %301 = %299.2;
  (%300, %301)
}

def @func_23625() -> (Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) {
  %302 = @func_21516() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(70), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %303 = @func_7914() /* ty=(Tensor[(2, 8, 9), float32],) */;
  %304 = %302.1;
  %305 = %303.0;
  (%304, %305)
}

def @func_5466() -> (Tensor[(10, 2, 16), float64],) {
  %306 = @func_2341() /* ty=(Tensor[(10, 2, 16), float64],) */;
  %307 = %306.0;
  (%307,)
}

def @func_12734() -> (Tensor[(10, 2, 16), float64],) {
  %308 = @func_9423() /* ty=Tensor[(10, 2, 16), float64] */;
  (%308,)
}

def @func_15178() -> (Tensor[(10, 2, 16), float32], Tensor[(432), float32]) {
  %309 = @func_7629() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
  %310 = %309.1;
  %311 = @func_5829() /* ty=Tensor[(432), float32] */;
  (%310, %311)
}

def @func_14979() -> Tensor[(10, 2, 16), float32] {
  %312 = @func_1332() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
  %312.0
}

def @func_17277() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(70), float32]) {
  %313 = @func_11305() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %314 = @func_2960() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), float32]) */;
  %315 = cast(meta[relay.Constant][6] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
  %316 = reshape(%315, newshape=[1, 70]) /* ty=Tensor[(1, 70), float32] */;
  %317 = @func_7015(%316) /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(1, 70), float32], Tensor[(10, 7, 48), float32]) */;
  %318 = %313.0;
  %319 = %314.2;
  %320 = %317.1;
  (%318, %319, %320, meta[relay.Constant][6] /* ty=Tensor[(70), float32] */)
}

def @func_21930() -> (Tensor[(10, 2, 16), uint8],) {
  %321 = @func_880() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %322 = %321.0;
  (%322,)
}

def @func_12831() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %323 = @func_362() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %324 = @func_362() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %325 = %323.0;
  %326 = %324.0;
  (%325, %326)
}

def @func_4087() -> (Tensor[(432), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float64]) {
  %327 = @func_1496() /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), float32]) */;
  %328 = @func_431() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %329 = %327.0;
  %330 = @func_900() /* ty=Tensor[(10, 2, 16), uint8] */;
  %331 = %328.1;
  (%329, %330, %331)
}

def @func_15729() -> Tensor[(10, 2, 16), float32] {
  %332 = @func_13294() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %332.0
}

def @func_10278() -> Tensor[(8, ?, 2), bool] {
  %333 = @func_3439() /* ty=(Tensor[(2, 8, 9), float32], Tensor[(10, 2, 16), float32], Tensor[(8, ?, 2), bool]) */;
  %333.2
}

def @func_8863() -> Tensor[(10, 2, 16), bool] {
  %334 = @func_1766() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool]) */;
  %334.2
}

def @func_305() -> Tensor[(10, 2, 16), float32] {
  @func_257() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_21898(%var_21877: int8) -> (Tensor[(10, 2, 16), float32], Tensor[(3, 5, 9), uint64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], int8) {
  %335 = @func_15129() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %336 = cast(meta[relay.Constant][7] /* ty=Tensor[(135), float64] */, dtype="float64") /* ty=Tensor[(135), float64] */;
  %337 = reshape(%336, newshape=[3, 5, 9]) /* ty=Tensor[(3, 5, 9), float64] */;
  %338 = @func_6876(%337) /* ty=(Tensor[(3, 5, 9), float64], Tensor[(3, 5, 9), float32]) */;
  %339 = %338.0;
  %340 = cast(meta[relay.Constant][7] /* ty=Tensor[(135), float64] */, dtype="uint64") /* ty=Tensor[(135), uint64] */;
  %341 = shape_of(%339, dtype="int32") /* ty=Tensor[(3), int32] */;
  %342 = cast(%339, dtype="uint64") /* ty=Tensor[(3, 5, 9), uint64] */;
  %343 = dyn.reshape(%340, %341, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %344 = @func_8608() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 7, 48), float32], Tensor[(70), float32]) */;
  %345 = cast(%var_21877, dtype="int8") /* ty=int8 */;
  %346 = reshape(%345, newshape=[]) /* ty=int8 */;
  %347 = @func_4740(%346) /* ty=(Tensor[(2, 16, 6), int8], Tensor[(10, 2, 16), float32]) */;
  %348 = %335.1;
  %349 = subtract(%342, %343) /* ty=Tensor[(3, 5, 9), uint64] */;
  %350 = %344.2;
  %351 = %347.1;
  (%348, %349, %350, %351, %var_21877)
}

def @func_7152() -> Tensor[(10, 2, 16), float32] {
  %352 = @func_1496() /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), float32]) */;
  %352.1
}

def @func_327() -> (Tensor[(10, 2, 16), float32],) {
  %353 = @func_305() /* ty=Tensor[(10, 2, 16), float32] */;
  (%353,)
}

def @func_26462() -> (Tensor[(432), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), uint8]) {
  %354 = @func_21623() /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %355 = @func_12734() /* ty=(Tensor[(10, 2, 16), float64],) */;
  %356 = @func_2256() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
  %357 = %354.0;
  %358 = %355.0;
  %359 = %356.1;
  (%357, %358, %359)
}

def @func_2134() -> (Tensor[(10, 2, 16), float32],) {
  %360 = @func_305() /* ty=Tensor[(10, 2, 16), float32] */;
  (%360,)
}

def @func_21820() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %361 = @func_10794() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %362 = @func_10794() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %363 = %361.0;
  %364 = %362.0;
  (%363, %364)
}

def @func_14066() -> Tensor[(10, 2, 16), float32] {
  @func_1518() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_3845() -> Tensor[(10, 2, 16), float32] {
  %365 = @func_407() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %365.1
}

def @func_8728() -> (Tensor[(2, 3, 3), float32], Tensor[(10, 2, 16), float32]) {
  %366 = cast(meta[relay.Constant][8] /* ty=Tensor[(2, 3, 3), float32] */, dtype="float32") /* ty=Tensor[(2, 3, 3), float32] */;
  %367 = cos(%366) /* ty=Tensor[(2, 3, 3), float32] */;
  %368 = @func_1518() /* ty=Tensor[(10, 2, 16), float32] */;
  (%367, %368)
}

def @func_7629() -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) {
  %369 = @func_1766() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool]) */;
  %370 = @func_6823() /* ty=(Tensor[(10, 2, 16), uint8],) */;
  %371 = @func_6795() /* ty=Tensor[(10, 2, 16), float64] */;
  %372 = %369.0;
  %373 = %370.0;
  (%371, %372, %373)
}

def @func_11195() -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) {
  %374 = @func_6498() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float64]) */;
  %375 = @func_5402() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(432), float32]) */;
  %376 = %374.1;
  %377 = %375.1;
  (%376, %377)
}

def @func_26319() -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %378 = @func_18271() /* ty=(Tensor[(7, 2, 14), float64], Tensor[(7, 2, 14), float32], Tensor[(10, 2, 16), float64]) */;
  %379 = @func_9008() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %380 = @func_12034() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %381 = %378.2;
  %382 = %379.0;
  %383 = %380.0;
  (%381, %382, %383)
}

def @func_11036() -> (Tensor[(10, 2, 16), float32],) {
  %384 = @func_8227() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %385 = %384.1;
  (%385,)
}

def @func_20586() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(16, 4, 14), int64]) {
  %386 = @func_17860() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %387 = @func_2711() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %388 = @func_11879() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(16, 4, 14), int64], Tensor[(896), int64]) */;
  %389 = %386.0;
  %390 = @func_19761() /* ty=Tensor[(10, 2, 16), float32] */;
  %391 = %387.0;
  %392 = %388.1;
  (%389, %390, %391, %392)
}

def @func_14046() -> (Tensor[(432), float32], Tensor[(10, 2, 16), float64]) {
  %393 = @func_10428() /* ty=(Tensor[(10, 2, 16), float64],) */;
  %394 = @func_10716() /* ty=Tensor[(432), float32] */;
  %395 = %393.0;
  (%394, %395)
}

def @func_4351() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
  %396 = @func_3881() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %397 = @func_2741() /* ty=(Tensor[(10, 2, 16), float64],) */;
  %398 = %396.0;
  %399 = %397.0;
  (%398, %399)
}

def @func_25130() -> Tensor[(2, 8, 9), float32] {
  %400 = @func_5718() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) */;
  %400.1
}

def @func_445() -> Tensor[(10, 2, 16), float32] {
  %401 = @func_327() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %401.0
}

def @func_11548(%var_11533: Tensor[(240), bool], %var_11534: Tensor[(48), float32]) -> (Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(240), bool], Tensor[(48), float32], Tensor[(10, 2, 16), float32]) {
  %402 = @func_407() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %403 = cast(%var_11533, dtype="bool") /* ty=Tensor[(240), bool] */;
  %404 = cast(%var_11534, dtype="float32") /* ty=Tensor[(48), float32] */;
  %405 = reshape(%403, newshape=[8, 15, 2]) /* ty=Tensor[(8, 15, 2), bool] */;
  %406 = reshape(%404, newshape=[24, 2]) /* ty=Tensor[(24, 2), float32] */;
  %407 = @func_5056(%405, %406) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(8, 15, 2), float64], Tensor[(8, 15, 2), float32], Tensor[(48), float32], Tensor[(24, 2), float32]) */;
  %408 = @func_8728() /* ty=(Tensor[(2, 3, 3), float32], Tensor[(10, 2, 16), float32]) */;
  %409 = %402.1;
  %410 = %407.3;
  %411 = %408.1;
  (%409, %410, %var_11533, %var_11534, %411)
}

def @func_25256() -> (Tensor[(10, 2, 16), float32],) {
  %412 = @func_9686() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %413 = %412.0;
  (%413,)
}

def @func_25360() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
  %414 = @func_12034() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %415 = @func_12734() /* ty=(Tensor[(10, 2, 16), float64],) */;
  %416 = %414.0;
  %417 = %415.0;
  (%416, %417)
}

def @func_5941() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %418 = @func_1657() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %419 = @func_2977() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %420 = %418.0;
  %421 = @func_1156() /* ty=Tensor[(10, 2, 16), float32] */;
  %422 = @func_1377() /* ty=Tensor[(10, 2, 16), float32] */;
  %423 = %419.0;
  (%420, %421, %422, %423)
}

def @func_25911() -> Tensor[(2, 8, 9), float32] {
  %424 = @func_7914() /* ty=(Tensor[(2, 8, 9), float32],) */;
  %424.0
}

def @func_25559() -> (Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), float32]) {
  %425 = @func_15633() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %426 = %425.0;
  %427 = @func_2078() /* ty=Tensor[(432), float32] */;
  %428 = @func_6325() /* ty=Tensor[(10, 2, 16), float32] */;
  (%426, %427, %428)
}

def @func_9601() -> Tensor[(10, 2, 16), float64] {
  %429 = @func_3368() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
  %429.3
}

def @func_13079() -> Tensor[(48), float32] {
  %430 = @func_9573() /* ty=(Tensor[(48), float32],) */;
  %430.0
}

def @func_5503() -> (Tensor[(432), float32],) {
  %431 = @func_4087() /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float64]) */;
  %432 = %431.0;
  (%432,)
}

def @func_13061() -> (Tensor[(10, 2, 16), float32], Tensor[(432), float32]) {
  %433 = @func_10769() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %434 = @func_12722() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32]) */;
  %435 = %433.1;
  %436 = %434.1;
  (%435, %436)
}

def @func_19264() -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) {
  %437 = @func_2341() /* ty=(Tensor[(10, 2, 16), float64],) */;
  %438 = %437.0;
  %439 = @func_4372() /* ty=Tensor[(10, 2, 16), float32] */;
  (%438, %439)
}

def @func_2711() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %440 = @func_1437() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(6, 9, 8), float32], Tensor[(432), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %441 = @func_1476() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %442 = %441.1;
  %443 = cast(%442, dtype="float32") /* ty=Tensor[(10, 2, 16), float32] */;
  %444 = %440.3;
  %445 = acos(%443) /* ty=Tensor[(10, 2, 16), float32] */;
  (%444, %445)
}

def @func_15709() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %446 = @func_7106() /* ty=(Tensor[(10, 2, 16), uint8],) */;
  %447 = @func_11851() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8]) */;
  %448 = @func_5941() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %449 = %446.0;
  %450 = %447.2;
  %451 = %448.1;
  (%449, %450, %451)
}

def @func_19982(%var_19973: Tensor[(1, 18), float32]) -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(1, 18), float32]) {
  %452 = @func_13196() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %453 = cast(%var_19973, dtype="float32") /* ty=Tensor[(1, 18), float32] */;
  %454 = reshape(%453, newshape=[18]) /* ty=Tensor[(18), float32] */;
  %455 = @func_17601(%454) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), uint8], Tensor[(18), float32], Tensor[(10, 7, 48), float64]) */;
  %456 = %452.0;
  %457 = %455.0;
  (%456, %457, %var_19973)
}

def @func_11581(%var_11570: uint16) -> (Tensor[(11, 10, 11), uint16],) {
  %458 = cast(%var_11570, dtype="uint16") /* ty=uint16 */;
  %459 = cast(meta[relay.Constant][9] /* ty=Tensor[(11, 10, 11), uint16] */, dtype="uint16") /* ty=Tensor[(11, 10, 11), uint16] */;
  %460 = left_shift(%458, %459) /* ty=Tensor[(11, 10, 11), uint16] */;
  (%460,)
}

def @func_11260() -> (Tensor[(10, 16, 15), int16], Tensor[(10, 2, 16), float32], Tensor[(4, 3, 4), float32], Tensor[(48), float32], Tensor[(10, 2, 16), float32]) {
  %461 = @func_3051() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 16, 15), int16], Tensor[(2400), int16]) */;
  %462 = cast(meta[relay.Constant][10] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %463 = reshape(%462, newshape=[4, 3, 4]) /* ty=Tensor[(4, 3, 4), float32] */;
  %464 = @func_2515() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %465 = %461.2;
  %466 = @func_3845() /* ty=Tensor[(10, 2, 16), float32] */;
  %467 = @func_294(%463) /* ty=Tensor[(4, 3, 4), float32] */;
  %468 = %464.0;
  (%465, %466, %467, meta[relay.Constant][10] /* ty=Tensor[(48), float32] */, %468)
}

def @func_27237(%var_27233: Tensor[(2560), int32]) -> (Tensor[(10, 7, 1), float32], Tensor[(16, 16, 10), int32], Tensor[(2560), int32]) {
  %469 = @func_6288() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 7, 1), float32], Tensor[(70), float32], Tensor[(10, 2, 16), float64]) */;
  %470 = cast(%var_27233, dtype="int32") /* ty=Tensor[(2560), int32] */;
  %471 = cast(%var_27233, dtype="int32") /* ty=Tensor[(2560), int32] */;
  %472 = reshape(%470, newshape=[16, 16, 10]) /* ty=Tensor[(16, 16, 10), int32] */;
  %473 = reshape(%471, newshape=[16, 16, 10]) /* ty=Tensor[(16, 16, 10), int32] */;
  %474 = @func_9334(%472, %473) /* ty=(Tensor[(16, 16, 10), int32], Tensor[(10, 2, 16), float32]) */;
  %475 = %469.1;
  %476 = %474.0;
  (%475, %476, %var_27233)
}

def @func_19248() -> Tensor[(2, 3, 3), float32] {
  %477 = @func_8728() /* ty=(Tensor[(2, 3, 3), float32], Tensor[(10, 2, 16), float32]) */;
  %477.0
}

def @func_19673() -> (Tensor[(10, 2, 16), float32],) {
  %478 = @func_4049() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48, 1), float32]) */;
  %479 = %478.1;
  (%479,)
}

def @func_17577() -> (Tensor[(10, 2, 16), float32],) {
  %480 = @func_14309() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %481 = %480.0;
  (%481,)
}

def @func_4568() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) {
  %482 = @func_1332() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
  %483 = @func_4087() /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float64]) */;
  %484 = %482.0;
  %485 = %483.1;
  %486 = @func_1377() /* ty=Tensor[(10, 2, 16), float32] */;
  (%484, %485, %486)
}

def @func_5213(%var_5206: Tensor[(640), uint16]) -> (Tensor[(14, 2, 5), float64], Tensor[(16, 8, 5), bool], Tensor[(640), uint16]) {
  %487 = cast(meta[relay.Constant][11] /* ty=Tensor[(14, 2, 5), float64] */, dtype="float64") /* ty=Tensor[(14, 2, 5), float64] */;
  %488 = cast(%var_5206, dtype="uint16") /* ty=Tensor[(640), uint16] */;
  %489 = cast(%var_5206, dtype="uint16") /* ty=Tensor[(640), uint16] */;
  %490 = cast(%var_5206, dtype="uint16") /* ty=Tensor[(640), uint16] */;
  %491 = reshape(%488, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), uint16] */;
  %492 = reshape(%489, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), uint16] */;
  %493 = reshape(%490, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), uint16] */;
  %494 = @func_5188(%491, %492, %493) /* ty=(Tensor[(16, 8, 5), bool], Tensor[(16, 8, 5), int8]) */;
  %495 = sin(%487) /* ty=Tensor[(14, 2, 5), float64] */;
  %496 = %494.0;
  (%495, %496, %var_5206)
}

def @func_27935() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float64]) {
  %497 = @func_26552() /* ty=(Tensor[(10, 2, 16), uint8],) */;
  %498 = %497.0;
  %499 = @func_7551() /* ty=Tensor[(10, 2, 16), float64] */;
  (%498, %499)
}

def @func_14309() -> (Tensor[(10, 2, 16), float32],) {
  %500 = @func_2444() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %501 = %500.4;
  (%501,)
}

def @func_15664() -> Tensor[(10, 2, 16), float32] {
  @func_1377() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_25085() -> Tensor[(10, 2, 16), float32] {
  %502 = @func_4568() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %502.2
}

def @func_19641() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %503 = @func_362() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %504 = @func_18113() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %505 = %503.0;
  %506 = %504.0;
  (%505, %506)
}

def @func_1332() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) {
  %507 = @func_711() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) */;
  %508 = @func_1041() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %509 = @func_305() /* ty=Tensor[(10, 2, 16), float32] */;
  %510 = %507.0;
  %511 = %508.0;
  (%509, %510, %511)
}

def @func_3788() -> Tensor[(2400), int16] {
  %512 = @func_3051() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 16, 15), int16], Tensor[(2400), int16]) */;
  %512.3
}

def @func_4187(%var_4179: Tensor[(16, 4, 14), int64], %var_4180: Tensor[(16, 4, 14), int64]) -> (Tensor[(16, 4, 14), int64],) {
  %513 = cast(%var_4180, dtype="int64") /* ty=Tensor[(16, 4, 14), int64] */;
  %514 = shape_of(%var_4179, dtype="int32") /* ty=Tensor[(3), int32] */;
  %515 = cast(%var_4179, dtype="int64") /* ty=Tensor[(16, 4, 14), int64] */;
  %516 = dyn.reshape(%513, %514, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %517 = bitwise_or(%515, %516) /* ty=Tensor[(16, 4, 14), int64] */;
  (%517,)
}

def @func_19526(%var_19478: Tensor[(2, 8, 9), float32]) -> (Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), bool], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %518 = @func_4049() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48, 1), float32]) */;
  %519 = @func_3531() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(2, 8, 9), float32]) */;
  %520 = %519.1;
  %521 = cast(%var_19478, dtype="bool") /* ty=Tensor[(2, 8, 9), bool] */;
  %522 = shape_of(%520, dtype="int32") /* ty=Tensor[(3), int32] */;
  %523 = cast(%520, dtype="bool") /* ty=Tensor[(2, 8, 9), bool] */;
  %524 = dyn.reshape(%521, %522, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %525 = %518.1;
  %526 = greater_equal(%523, %524) /* ty=Tensor[(2, 8, 9), bool] */;
  %527 = @func_18399() /* ty=Tensor[(10, 2, 16), float32] */;
  %528 = @func_6325() /* ty=Tensor[(10, 2, 16), float32] */;
  (%525, %526, %527, %528)
}

def @func_26891() -> (Tensor[(2, 8, 9), float32], Tensor[(48), float32]) {
  %529 = @func_18209() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float64]) */;
  %530 = @func_25112() /* ty=Tensor[(2, 8, 9), float32] */;
  %531 = %529.1;
  (%530, %531)
}

def @func_900() -> Tensor[(10, 2, 16), uint8] {
  %532 = @func_880() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %532.0
}

def @func_7535(%var_7531: Tensor[(2, 24), float32]) -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(2, 24), float32]) {
  %533 = cast(%var_7531, dtype="float32") /* ty=Tensor[(2, 24), float32] */;
  %534 = reshape(%533, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %535 = @func_2613(%534) /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(6, 9, 8), float32], Tensor[(6, 9, 8), bool], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) */;
  %536 = @func_6325() /* ty=Tensor[(10, 2, 16), float32] */;
  %537 = %535.3;
  (%536, %537, %var_7531)
}

def @func_12659(%var_12620: int8, %var_12621: Tensor[(11, 13, 6), int8]) -> (Tensor[(11, 13, 6), int8], Tensor[(6, 9, 8), float32], Tensor[(432), float32], Tensor[(2, 8, 9), float32]) {
  %538 = cast(%var_12620, dtype="int8") /* ty=int8 */;
  %539 = cast(%var_12621, dtype="int8") /* ty=Tensor[(11, 13, 6), int8] */;
  %540 = cast(meta[relay.Constant][12] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %541 = reshape(%540, newshape=[6, 9, 8]) /* ty=Tensor[(6, 9, 8), float32] */;
  %542 = maximum(%538, %539) /* ty=Tensor[(11, 13, 6), int8] */;
  %543 = @func_735(%541) /* ty=Tensor[(6, 9, 8), float32] */;
  %544 = @func_11348() /* ty=Tensor[(2, 8, 9), float32] */;
  (%542, %543, meta[relay.Constant][12] /* ty=Tensor[(432), float32] */, %544)
}

def @func_1518() -> Tensor[(10, 2, 16), float32] {
  @func_445() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_18399() -> Tensor[(10, 2, 16), float32] {
  %545 = @func_15178() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32]) */;
  %545.0
}

def @func_18827() -> (Tensor[(10, 2, 16), bool], Tensor[(12, 10, 12), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %546 = @func_6349() /* ty=(Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %547 = cast(meta[relay.Constant][13] /* ty=Tensor[(12, 10, 12), float64] */, dtype="float64") /* ty=Tensor[(12, 10, 12), float64] */;
  %548 = exp(%547) /* ty=Tensor[(12, 10, 12), float64] */;
  %549 = cast(meta[relay.Constant][13] /* ty=Tensor[(12, 10, 12), float64] */, dtype="float64") /* ty=Tensor[(12, 10, 12), float64] */;
  %550 = atanh(%549) /* ty=Tensor[(12, 10, 12), float64] */;
  %551 = cast(%550, dtype="float32") /* ty=Tensor[(12, 10, 12), float32] */;
  %552 = shape_of(%548, dtype="int32") /* ty=Tensor[(3), int32] */;
  %553 = cast(%548, dtype="float32") /* ty=Tensor[(12, 10, 12), float32] */;
  %554 = dyn.reshape(%551, %552, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %555 = @func_12113() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %556 = @func_4875() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %557 = @func_2134() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %558 = %546.0;
  %559 = multiply(%553, %554) /* ty=Tensor[(12, 10, 12), float32] */;
  %560 = %555.1;
  %561 = %556.1;
  %562 = %557.0;
  (%558, %559, %560, %561, %562)
}

def @func_3051() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 16, 15), int16], Tensor[(2400), int16]) {
  %563 = @func_1041() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %564 = cast(meta[relay.Constant][14] /* ty=Tensor[(2400), int16] */, dtype="int16") /* ty=Tensor[(2400), int16] */;
  %565 = cast(meta[relay.Constant][14] /* ty=Tensor[(2400), int16] */, dtype="int16") /* ty=Tensor[(2400), int16] */;
  %566 = reshape(%564, newshape=[10, 16, 15]) /* ty=Tensor[(10, 16, 15), int16] */;
  %567 = reshape(%565, newshape=[10, 16, 15]) /* ty=Tensor[(10, 16, 15), int16] */;
  %568 = %563.0;
  %569 = @func_2008() /* ty=Tensor[(10, 2, 16), float32] */;
  %570 = @func_2371(%566, %567) /* ty=Tensor[(10, 16, 15), int16] */;
  (%568, %569, %570, meta[relay.Constant][14] /* ty=Tensor[(2400), int16] */)
}

def @func_19427() -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
  %571 = @func_11851() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8]) */;
  %572 = @func_11721() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), uint8]) */;
  %573 = @func_1437() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(6, 9, 8), float32], Tensor[(432), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %574 = @func_13489() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %575 = @func_2741() /* ty=(Tensor[(10, 2, 16), float64],) */;
  %576 = %571.1;
  %577 = %572.2;
  %578 = %573.4;
  %579 = %574.0;
  %580 = %575.0;
  (%576, %577, %578, %579, %580)
}

def @func_14763() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %581 = @func_12034() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %582 = @func_6014() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %583 = @func_6158() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %584 = @func_6014() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %585 = %581.0;
  %586 = @func_1518() /* ty=Tensor[(10, 2, 16), float32] */;
  %587 = %582.0;
  %588 = %583.1;
  %589 = %584.0;
  (%585, %586, %587, %588, %589)
}

def @func_9201() -> Tensor[(10, 2, 16), float32] {
  %590 = @func_1332() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
  %590.0
}

def @func_25636() -> Tensor[(10, 2, 16), float32] {
  %591 = @func_3368() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
  %591.2
}

def @func_20037() -> (Tensor[(10, 2, 16), float32],) {
  %592 = @func_17189() /* ty=Tensor[(10, 2, 16), float32] */;
  (%592,)
}

def @func_7914() -> (Tensor[(2, 8, 9), float32],) {
  %593 = @func_7776() /* ty=Tensor[(2, 8, 9), float32] */;
  (%593,)
}

def @func_20437() -> Tensor[(432), float32] {
  %594 = @func_16059() /* ty=(Tensor[(2, 8, 9), float32], Tensor[(2, 8, 9), float32], Tensor[(432), float32]) */;
  %594.2
}

def @func_12034() -> (Tensor[(10, 2, 16), float32],) {
  %595 = @func_6349() /* ty=(Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %596 = %595.1;
  (%596,)
}

def @func_10698(%var_10677: Tensor[(16, 1, 10), float32], %var_10683: Tensor[(16, 2, 10), float32]) -> (Tensor[(16, 1, 10), float32], Tensor[(16, 2, 10), float64]) {
  %597 = cast(%var_10677, dtype="float32") /* ty=Tensor[(16, 1, 10), float32] */;
  %598 = cast(%var_10677, dtype="float64") /* ty=Tensor[(16, 1, 10), float64] */;
  %599 = cast(%var_10683, dtype="float64") /* ty=Tensor[(16, 2, 10), float64] */;
  %600 = acosh(%597) /* ty=Tensor[(16, 1, 10), float32] */;
  %601 = floor_mod(%598, %599) /* ty=Tensor[(16, 2, 10), float64] */;
  (%600, %601)
}

def @func_22602() -> (Tensor[(10, 2, 16), float32],) {
  %602 = @func_14763() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %603 = %602.4;
  (%603,)
}

def @func_7734(%var_7695: Tensor[(10, 2, 16), float32]) -> (Tensor[(10, 2, 16), int64], Tensor[(10, 2, 16), float32]) {
  %604 = @func_1496() /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), float32]) */;
  %605 = %604.1;
  %606 = cast(%var_7695, dtype="int64") /* ty=Tensor[(10, 2, 16), int64] */;
  %607 = shape_of(%605, dtype="int32") /* ty=Tensor[(3), int32] */;
  %608 = cast(%605, dtype="int64") /* ty=Tensor[(10, 2, 16), int64] */;
  %609 = dyn.reshape(%606, %607, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %610 = @func_5718() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) */;
  %611 = subtract(%608, %609) /* ty=Tensor[(10, 2, 16), int64] */;
  %612 = %610.0;
  (%611, %612)
}

def @func_14161() -> Tensor[(10, 2, 16), float32] {
  %613 = @func_2977() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %613.0
}

def @func_4239() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %614 = @func_2444() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %615 = @func_1989() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %616 = %614.4;
  %617 = %615.2;
  %618 = @func_257() /* ty=Tensor[(10, 2, 16), float32] */;
  (%616, %617, %618)
}

def @func_6158() -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %619 = @func_5466() /* ty=(Tensor[(10, 2, 16), float64],) */;
  %620 = @func_2134() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %621 = @func_4239() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %622 = %619.0;
  %623 = %620.0;
  %624 = %621.0;
  (%622, %623, %624)
}

def @func_8839() -> Tensor[(10, 2, 16), float32] {
  %625 = @func_2256() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
  %625.0
}

def @func_3474() -> (Tensor[(10, 2, 16), float32],) {
  %626 = @func_3051() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 16, 15), int16], Tensor[(2400), int16]) */;
  %627 = %626.1;
  (%627,)
}

def @func_25175(%var_25148: Tensor[(9, 14, 1), float32]) -> Tensor[(9, 14, ?), int32] {
  %628 = cast(%var_25148, dtype="float32") /* ty=Tensor[(9, 14, 1), float32] */;
  %629 = sin(%628) /* ty=Tensor[(9, 14, 1), float32] */;
  %630 = cast(%var_25148, dtype="int32") /* ty=Tensor[(9, 14, 1), int32] */;
  %631 = shape_of(%629, dtype="int32") /* ty=Tensor[(3), int32] */;
  %632 = cast(%629, dtype="int32") /* ty=Tensor[(9, 14, 1), int32] */;
  %633 = dyn.reshape(%630, %631, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  right_shift(%632, %633) /* ty=Tensor[(9, 14, ?), int32] */
}

def @func_14516(%var_14506: Tensor[(13, 1, 13), int32]) -> Tensor[(13, 1, 13), bool] {
  %634 = cast(10 /* ty=int32 */, dtype="bool") /* ty=bool */;
  %635 = cast(%var_14506, dtype="bool") /* ty=Tensor[(13, 1, 13), bool] */;
  equal(%634, %635) /* ty=Tensor[(13, 1, 13), bool] */
}

def @func_22769() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %636 = @func_21623() /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %637 = @func_13294() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %638 = @func_11260() /* ty=(Tensor[(10, 16, 15), int16], Tensor[(10, 2, 16), float32], Tensor[(4, 3, 4), float32], Tensor[(48), float32], Tensor[(10, 2, 16), float32]) */;
  %639 = %636.2;
  %640 = %637.0;
  %641 = %638.3;
  %642 = @func_1156() /* ty=Tensor[(10, 2, 16), float32] */;
  %643 = @func_11130() /* ty=Tensor[(10, 2, 16), float32] */;
  (%639, %640, %641, %642, %643)
}

def @func_2515() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
  %644 = @func_1958() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %645 = @func_431() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %646 = %644.0;
  %647 = %645.1;
  (%646, %647)
}

def @func_19294() -> (Tensor[(10, 2, 16), float32], Tensor[(432), float32]) {
  %648 = @func_4239() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %649 = @func_16059() /* ty=(Tensor[(2, 8, 9), float32], Tensor[(2, 8, 9), float32], Tensor[(432), float32]) */;
  %650 = %648.2;
  %651 = %649.2;
  (%650, %651)
}

def @func_14259(%var_14202: int8) -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], int8, Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %652 = @func_2783() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %653 = cast(%var_14202, dtype="int8") /* ty=int8 */;
  %654 = reshape(%653, newshape=[]) /* ty=int8 */;
  %655 = @func_4740(%654) /* ty=(Tensor[(2, 16, 6), int8], Tensor[(10, 2, 16), float32]) */;
  %656 = @func_9042() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) */;
  %657 = @func_4351() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %658 = %652.0;
  %659 = %655.1;
  %660 = %656.2;
  %661 = %657.0;
  (%658, %659, %var_14202, %660, %661)
}

def @func_26960() -> (Tensor[(10, 2, 16), float32],) {
  %662 = @func_10769() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %663 = %662.0;
  (%663,)
}

def @func_24899() -> (Tensor[(2, 8, 9), float32],) {
  %664 = @func_22421() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(2, 8, 9), float32], Tensor[(10, 2, 16), float32]) */;
  %665 = %664.1;
  (%665,)
}

def @func_27638() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
  %666 = @func_11796() /* ty=(Tensor[(10, 2, 16), float64],) */;
  %667 = @func_6671() /* ty=Tensor[(10, 2, 16), float32] */;
  %668 = %666.0;
  (%667, %668)
}

def @func_5718() -> (Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) {
  %669 = @func_4239() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %670 = @func_3531() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(2, 8, 9), float32]) */;
  %671 = %669.1;
  %672 = %670.1;
  (%671, %672)
}

def @func_16463() -> Tensor[(10, 2, 16), float32] {
  %673 = @func_9091() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %673.1
}

def @func_25519() -> (Tensor[(10, 2, 16), uint8],) {
  %674 = @func_900() /* ty=Tensor[(10, 2, 16), uint8] */;
  (%674,)
}

def @func_12290() -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float64], Tensor[(2400), int16], Tensor[(48), float32]) {
  %675 = @func_2341() /* ty=(Tensor[(10, 2, 16), float64],) */;
  %676 = @func_8806() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 1, 2), int16], int16, Tensor[(20), int16], Tensor[(6, 9, 8), float32], Tensor[(48), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float64], Tensor[(432), float32]) */;
  %677 = @func_4799() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(2400), int16]) */;
  %678 = @func_711() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) */;
  %679 = %675.0;
  %680 = @func_5084() /* ty=Tensor[(10, 2, 16), float64] */;
  %681 = %676.8;
  %682 = %677.1;
  %683 = %678.2;
  (%679, %680, %681, %682, %683)
}

def @func_15299(%var_15278: Tensor[(169), int32], %var_15285: Tensor[(13, 2, 13), bool]) -> (Tensor[(10, 2, 16), uint8], Tensor[(169), int32], Tensor[(13, 2, 13), uint16], Tensor[(10, 2, 16), uint8]) {
  %684 = @func_5146() /* ty=(Tensor[(10, 2, 16), uint8],) */;
  %685 = cast(%var_15278, dtype="int32") /* ty=Tensor[(169), int32] */;
  %686 = reshape(%685, newshape=[13, 1, 13]) /* ty=Tensor[(13, 1, 13), int32] */;
  %687 = @func_14516(%686) /* ty=Tensor[(13, 1, 13), bool] */;
  %688 = cast(%687, dtype="uint16") /* ty=Tensor[(13, 1, 13), uint16] */;
  %689 = cast(%var_15285, dtype="uint16") /* ty=Tensor[(13, 2, 13), uint16] */;
  %690 = @func_7106() /* ty=(Tensor[(10, 2, 16), uint8],) */;
  %691 = %684.0;
  %692 = bitwise_and(%688, %689) /* ty=Tensor[(13, 2, 13), uint16] */;
  %693 = %690.0;
  (%691, %var_15278, %692, %693)
}

def @func_4674() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) {
  %694 = @func_807() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %695 = @func_2256() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
  %696 = @func_3474() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %697 = %694.2;
  %698 = %695.1;
  %699 = %696.0;
  (%697, %698, %699)
}

def @func_7851(%var_7779: Tensor[(15, 6, 11), float32], %var_7828: Tensor[(48), float32], %var_7835: Tensor[(15, 6, 11), float64]) -> (Tensor[(48), float32], Tensor[(48), float32], Tensor[(15, 6, 11), bool]) {
  %700 = cast(%var_7828, dtype="float32") /* ty=Tensor[(48), float32] */;
  %701 = reshape(%700, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %702 = @func_1912(%701) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) */;
  %703 = cast(%var_7779, dtype="float32") /* ty=Tensor[(15, 6, 11), float32] */;
  %704 = log(%703) /* ty=Tensor[(15, 6, 11), float32] */;
  %705 = cast(%704, dtype="float64") /* ty=Tensor[(15, 6, 11), float64] */;
  %706 = sigmoid(%705) /* ty=Tensor[(15, 6, 11), float64] */;
  %707 = cast(%var_7835, dtype="bool") /* ty=Tensor[(15, 6, 11), bool] */;
  %708 = shape_of(%706, dtype="int32") /* ty=Tensor[(3), int32] */;
  %709 = cast(%706, dtype="bool") /* ty=Tensor[(15, 6, 11), bool] */;
  %710 = dyn.reshape(%707, %708, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %711 = %702.4;
  %712 = logical_or(%709, %710) /* ty=Tensor[(15, 6, 11), bool] */;
  (%711, %var_7828, %712)
}

def @func_584() -> (Tensor[(10, 2, 16), float32],) {
  %713 = @func_362() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %714 = %713.0;
  (%714,)
}

def @func_6085() -> Tensor[(10, 2, 16), float64] {
  %715 = @func_431() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %715.1
}

def @func_9315() -> (Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(4, 3, 4), float32], Tensor[(4, 12), float32]) {
  %716 = @func_2977() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %717 = @func_5503() /* ty=(Tensor[(432), float32],) */;
  %718 = cast(meta[relay.Constant][15] /* ty=Tensor[(4, 12), float32] */, dtype="float32") /* ty=Tensor[(4, 12), float32] */;
  %719 = reshape(%718, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %720 = @func_672(%719) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(4, 3, 4), float32], Tensor[(48), float32], Tensor[(4, 3, 4), float32]) */;
  %721 = %716.0;
  %722 = %717.0;
  %723 = %720.5;
  (%721, %722, %723, meta[relay.Constant][15] /* ty=Tensor[(4, 12), float32] */)
}

def @func_13656() -> (Tensor[(10, 7, 48), float64], Tensor[(10, 2, 16), float32]) {
  %724 = @func_8608() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 7, 48), float32], Tensor[(70), float32]) */;
  %725 = %724.3;
  %726 = cast(%725, dtype="float64") /* ty=Tensor[(10, 7, 48), float64] */;
  %727 = sigmoid(%726) /* ty=Tensor[(10, 7, 48), float64] */;
  %728 = cast(%725, dtype="float32") /* ty=Tensor[(10, 7, 48), float32] */;
  %729 = shape_of(%727, dtype="int32") /* ty=Tensor[(3), int32] */;
  %730 = cast(%727, dtype="float32") /* ty=Tensor[(10, 7, 48), float32] */;
  %731 = dyn.reshape(%728, %729, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %732 = minimum(%730, %731) /* ty=Tensor[(10, 7, 48), float32] */;
  %733 = cast(%725, dtype="float64") /* ty=Tensor[(10, 7, 48), float64] */;
  %734 = shape_of(%732, dtype="int32") /* ty=Tensor[(3), int32] */;
  %735 = cast(%732, dtype="float64") /* ty=Tensor[(10, 7, 48), float64] */;
  %736 = dyn.reshape(%733, %734, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %737 = @func_13294() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %738 = floor_divide(%735, %736) /* ty=Tensor[(10, 7, 48), float64] */;
  %739 = %737.0;
  (%738, %739)
}

def @func_19733() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %740 = @func_4875() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %741 = @func_14023() /* ty=Tensor[(10, 2, 16), float32] */;
  %742 = %740.0;
  (%741, %742)
}

def @func_5158() -> Tensor[(10, 2, 16), uint8] {
  %743 = @func_1545() /* ty=(Tensor[(10, 2, 16), uint8],) */;
  %743.0
}

def @func_9423() -> Tensor[(10, 2, 16), float64] {
  @func_5084() /* ty=Tensor[(10, 2, 16), float64] */
}

def @func_9383() -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(10, 2, 16), float32]) {
  %744 = @func_431() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %745 = @func_6823() /* ty=(Tensor[(10, 2, 16), uint8],) */;
  %746 = cast(meta[relay.Constant][16] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %747 = reshape(%746, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %748 = @func_7497(%747) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(48), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
  %749 = @func_407() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %750 = %744.1;
  %751 = %745.0;
  %752 = %748.4;
  %753 = %749.1;
  (%750, %751, %752, meta[relay.Constant][16] /* ty=Tensor[(48), float32] */, %753)
}

def @func_14450() -> (Tensor[(10, 2, 16), uint8],) {
  %754 = @func_9966() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
  %755 = %754.1;
  (%755,)
}

def @func_7273() -> (Tensor[(2, 8, 9), float32],) {
  %756 = @func_5718() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) */;
  %757 = %756.1;
  (%757,)
}

def @func_26048() -> Tensor[(10, 2, 16), float64] {
  @func_6795() /* ty=Tensor[(10, 2, 16), float64] */
}

def @func_16748() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %758 = @func_1476() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %759 = @func_6728() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(432), float32]) */;
  %760 = @func_2008() /* ty=Tensor[(10, 2, 16), float32] */;
  %761 = %758.0;
  %762 = @func_16463() /* ty=Tensor[(10, 2, 16), float32] */;
  %763 = @func_305() /* ty=Tensor[(10, 2, 16), float32] */;
  %764 = %759.0;
  (%760, %761, %762, %763, %764)
}

def @func_22667() -> (Tensor[(10, 2, 16), float32],) {
  %765 = @func_10324() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %766 = %765.0;
  (%766,)
}

def @func_3620(%var_3577: int16) -> (Tensor[(10, 2, 16), float32], Tensor[(20), int16], Tensor[(10, 1, 2), bool], Tensor[(10, 2, 16), float32]) {
  %767 = cast(%var_3577, dtype="int16") /* ty=int16 */;
  %768 = cast(meta[relay.Constant][17] /* ty=Tensor[(20), int16] */, dtype="int16") /* ty=Tensor[(20), int16] */;
  %769 = reshape(%767, newshape=[]) /* ty=int16 */;
  %770 = reshape(%768, newshape=[10, 1, 2]) /* ty=Tensor[(10, 1, 2), int16] */;
  %771 = @func_3097(%769, %770) /* ty=(Tensor[(10, 1, 2), int16], Tensor[(10, 2, 16), float32]) */;
  %772 = %771.0;
  %773 = cast(%772, dtype="bool") /* ty=Tensor[(10, 1, 2), bool] */;
  %774 = cast(%var_3577, dtype="bool") /* ty=bool */;
  %775 = @func_1156() /* ty=Tensor[(10, 2, 16), float32] */;
  %776 = logical_or(%773, %774) /* ty=Tensor[(10, 1, 2), bool] */;
  %777 = @func_305() /* ty=Tensor[(10, 2, 16), float32] */;
  (%775, meta[relay.Constant][17] /* ty=Tensor[(20), int16] */, %776, %777)
}

def @func_20815() -> (Tensor[(10, 2, 16), float32],) {
  %778 = @func_4568() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %779 = %778.2;
  (%779,)
}

def @func_23817() -> Tensor[(10, 2, 16), float32] {
  %780 = @func_6772() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %780.1
}

def @func_16870(%var_16853: Tensor[(2, 3, 12), float64]) -> (Tensor[(2, 3, 12), float64], Tensor[(10, 2, 16), float32]) {
  %781 = cast(%var_16853, dtype="float64") /* ty=Tensor[(2, 3, 12), float64] */;
  %782 = @func_14763() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %783 = acosh(%781) /* ty=Tensor[(2, 3, 12), float64] */;
  %784 = %782.1;
  (%783, %784)
}

def @func_735(%var_719: Tensor[(6, 9, 8), float32]) -> Tensor[(6, 9, 8), float32] {
  %785 = cast(%var_719, dtype="float32") /* ty=Tensor[(6, 9, 8), float32] */;
  cos(%785) /* ty=Tensor[(6, 9, 8), float32] */
}

def @func_27846() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(432), float32]) {
  %786 = @func_10769() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %787 = @func_5503() /* ty=(Tensor[(432), float32],) */;
  %788 = @func_10995() /* ty=Tensor[(10, 2, 16), uint8] */;
  %789 = %786.1;
  %790 = %787.0;
  (%788, %789, %790)
}

def @func_9821() -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), uint8]) {
  %791 = @func_8538() /* ty=(Tensor[(2400), int16], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float64], Tensor[(432), float32], Tensor[(10, 2, 16), float32]) */;
  %792 = @func_4087() /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float64]) */;
  %793 = %791.2;
  %794 = %792.1;
  (%793, %794)
}

def @func_5402() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(432), float32]) {
  %795 = @func_2515() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %796 = %795.0;
  %797 = @func_257() /* ty=Tensor[(10, 2, 16), float32] */;
  %798 = @func_2078() /* ty=Tensor[(432), float32] */;
  (%796, %797, %798)
}

def @func_18601() -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(3360), float64]) {
  %799 = @func_11851() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8]) */;
  %800 = cast(meta[relay.Constant][18] /* ty=Tensor[(3360), float64] */, dtype="float64") /* ty=Tensor[(3360), float64] */;
  %801 = reshape(%800, newshape=[10, 7, 48]) /* ty=Tensor[(10, 7, 48), float64] */;
  %802 = @func_17009(%801) /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 7, 48), uint16], Tensor[(10, 2, 16), float32], Tensor[(10, 7, 48), bool]) */;
  %803 = %799.1;
  %804 = %802.3;
  (%803, %804, meta[relay.Constant][18] /* ty=Tensor[(3360), float64] */)
}

def @func_8227() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %805 = @func_362() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %806 = @func_362() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %807 = @func_6325() /* ty=Tensor[(10, 2, 16), float32] */;
  %808 = %805.1;
  %809 = %806.0;
  (%807, %808, %809)
}

def @func_4609() -> Tensor[(10, 2, 16), bool] {
  %810 = @func_1766() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool]) */;
  %810.2
}

def @func_12430() -> (Tensor[(10, 2, 16), float32], Tensor[(2400), int16]) {
  %811 = @func_4875() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %812 = @func_3051() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 16, 15), int16], Tensor[(2400), int16]) */;
  %813 = %811.0;
  %814 = %812.3;
  (%813, %814)
}

def @func_11796() -> (Tensor[(10, 2, 16), float64],) {
  %815 = @func_9821() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), uint8]) */;
  %816 = %815.0;
  (%816,)
}

def @func_5084() -> Tensor[(10, 2, 16), float64] {
  %817 = @func_2341() /* ty=(Tensor[(10, 2, 16), float64],) */;
  %817.0
}

def @func_12810() -> (Tensor[(2, 8, 9), float32], Tensor[(10, 2, 16), float32]) {
  %818 = @func_5718() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) */;
  %819 = @func_4003() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
  %820 = %818.1;
  %821 = %819.2;
  (%820, %821)
}

def @func_16077() -> (Tensor[(10, 2, 16), float32],) {
  %822 = @func_12219() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %823 = %822.0;
  (%823,)
}

def @func_9770(%var_9745: Tensor[(1, 16, 15), float64], %var_9746: Tensor[(11, 16, 15), float64]) -> (Tensor[(11, 16, 15), float64],) {
  %824 = cast(%var_9745, dtype="float64") /* ty=Tensor[(1, 16, 15), float64] */;
  %825 = cast(%var_9746, dtype="float64") /* ty=Tensor[(11, 16, 15), float64] */;
  %826 = power(%824, %825) /* ty=Tensor[(11, 16, 15), float64] */;
  (%826,)
}

def @func_13932() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %827 = @func_11740() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %828 = %827.1;
  %829 = @func_257() /* ty=Tensor[(10, 2, 16), float32] */;
  (%828, %829)
}

def @func_10769() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %830 = @func_2134() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %831 = @func_7152() /* ty=Tensor[(10, 2, 16), float32] */;
  %832 = %830.0;
  (%831, %832)
}

def @func_19879() -> (Tensor[(8, 1, 2), float32], Tensor[(10, 2, 16), float32]) {
  %833 = @func_1688() /* ty=(Tensor[(4, 3, 4), float32], Tensor[(48), float32], Tensor[(8, ?, 2), bool], Tensor[(8, 1, 2), float32]) */;
  %834 = @func_16620() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), int64]) */;
  %835 = %833.3;
  %836 = %834.0;
  (%835, %836)
}

def @func_6801() -> (Tensor[(10, 2, 16), float32],) {
  %837 = @func_2134() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %838 = %837.0;
  (%838,)
}

def @func_13704() -> Tensor[(10, 2, 16), uint8] {
  %839 = @func_10505() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %839.1
}

def @func_15970() -> (Tensor[(10, 2, 16), float32],) {
  %840 = @func_4109() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %841 = %840.0;
  (%841,)
}

def @func_26686() -> Tensor[(10, 2, 16), float32] {
  %842 = @func_8671() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %842.0
}

def @func_1688() -> (Tensor[(4, 3, 4), float32], Tensor[(48), float32], Tensor[(8, ?, 2), bool], Tensor[(8, 1, 2), float32]) {
  %843 = cast(meta[relay.Constant][19] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %844 = reshape(%843, newshape=[4, 3, 4]) /* ty=Tensor[(4, 3, 4), float32] */;
  %845 = cast(meta[relay.Constant][20] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %846 = cast(meta[relay.Constant][21] /* ty=Tensor[(8, 1, 2), int16] */, dtype="int16") /* ty=Tensor[(8, 1, 2), int16] */;
  %847 = bitwise_and(%845, %846) /* ty=Tensor[(8, 1, 2), int16] */;
  %848 = cast(meta[relay.Constant][21] /* ty=Tensor[(8, 1, 2), int16] */, dtype="bool") /* ty=Tensor[(8, 1, 2), bool] */;
  %849 = shape_of(%847, dtype="int32") /* ty=Tensor[(3), int32] */;
  %850 = cast(%847, dtype="bool") /* ty=Tensor[(8, 1, 2), bool] */;
  %851 = dyn.reshape(%848, %849, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %852 = cast(meta[relay.Constant][21] /* ty=Tensor[(8, 1, 2), int16] */, dtype="float32") /* ty=Tensor[(8, 1, 2), float32] */;
  %853 = sin(%852) /* ty=Tensor[(8, 1, 2), float32] */;
  %854 = cast(%853, dtype="float32") /* ty=Tensor[(8, 1, 2), float32] */;
  %855 = @func_294(%844) /* ty=Tensor[(4, 3, 4), float32] */;
  %856 = logical_or(%850, %851) /* ty=Tensor[(8, ?, 2), bool] */;
  %857 = atanh(%854) /* ty=Tensor[(8, 1, 2), float32] */;
  (%855, meta[relay.Constant][19] /* ty=Tensor[(48), float32] */, %856, %857)
}

def @func_12261() -> Tensor[(2, 3, 3), float32] {
  %858 = @func_8728() /* ty=(Tensor[(2, 3, 3), float32], Tensor[(10, 2, 16), float32]) */;
  %858.0
}

def @func_5188(%var_5169: Tensor[(16, 8, 5), uint16], %var_5170: Tensor[(16, 8, 5), uint16], %var_5181: Tensor[(16, 8, 5), uint16]) -> (Tensor[(16, 8, 5), bool], Tensor[(16, 8, 5), int8]) {
  %859 = cast(%var_5170, dtype="bool") /* ty=Tensor[(16, 8, 5), bool] */;
  %860 = shape_of(%var_5169, dtype="int32") /* ty=Tensor[(3), int32] */;
  %861 = cast(%var_5169, dtype="bool") /* ty=Tensor[(16, 8, 5), bool] */;
  %862 = dyn.reshape(%859, %860, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %863 = cast(%var_5181, dtype="int8") /* ty=Tensor[(16, 8, 5), int8] */;
  %864 = shape_of(%var_5169, dtype="int32") /* ty=Tensor[(3), int32] */;
  %865 = cast(%var_5169, dtype="int8") /* ty=Tensor[(16, 8, 5), int8] */;
  %866 = dyn.reshape(%863, %864, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %867 = greater_equal(%861, %862) /* ty=Tensor[(16, 8, 5), bool] */;
  %868 = logical_xor(%865, %866) /* ty=Tensor[(16, 8, 5), int8] */;
  (%867, %868)
}

def @func_5829() -> Tensor[(432), float32] {
  @func_5322() /* ty=Tensor[(432), float32] */
}

def @func_1766() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool]) {
  %869 = @func_1332() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
  %870 = @func_1332() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
  %871 = %870.0;
  %872 = @func_257() /* ty=Tensor[(10, 2, 16), float32] */;
  %873 = cast(%872, dtype="bool") /* ty=Tensor[(10, 2, 16), bool] */;
  %874 = shape_of(%871, dtype="int32") /* ty=Tensor[(3), int32] */;
  %875 = cast(%871, dtype="bool") /* ty=Tensor[(10, 2, 16), bool] */;
  %876 = dyn.reshape(%873, %874, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %877 = @func_1377() /* ty=Tensor[(10, 2, 16), float32] */;
  %878 = %869.0;
  %879 = equal(%875, %876) /* ty=Tensor[(10, 2, 16), bool] */;
  (%877, %878, %879)
}

def @func_7388() -> (Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 16, 15), int16]) {
  %880 = @func_1476() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %881 = @func_2444() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %882 = @func_3051() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 16, 15), int16], Tensor[(2400), int16]) */;
  %883 = %880.1;
  %884 = @func_5322() /* ty=Tensor[(432), float32] */;
  %885 = %881.1;
  %886 = @func_3845() /* ty=Tensor[(10, 2, 16), float32] */;
  %887 = @func_2008() /* ty=Tensor[(10, 2, 16), float32] */;
  %888 = %882.2;
  (%883, %884, %885, %886, %887, %888)
}

def @func_17860() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %889 = @func_4925() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %890 = @func_2783() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %891 = %889.0;
  %892 = %890.0;
  (%891, %892)
}

def @func_13585() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %893 = @func_4266() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %894 = @func_11305() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %895 = %893.1;
  %896 = %894.0;
  (%895, %896)
}

def @func_22550() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %897 = @func_11851() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8]) */;
  %898 = @func_6325() /* ty=Tensor[(10, 2, 16), float32] */;
  %899 = %897.0;
  (%898, %899)
}

def @func_11771() -> (Tensor[(10, 2, 16), uint8],) {
  %900 = @func_4568() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %901 = %900.1;
  (%901,)
}

def @func_5307(%var_5295: int16, %var_5296: Tensor[(10, 2), int16], %var_5303: Tensor[(1200, 2), int16]) -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], int16, Tensor[(10, 2), int16], Tensor[(10, 16, 15), int16], Tensor[(1200, 2), int16]) {
  %902 = @func_4266() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %903 = cast(%var_5295, dtype="int16") /* ty=int16 */;
  %904 = cast(%var_5296, dtype="int16") /* ty=Tensor[(10, 2), int16] */;
  %905 = reshape(%903, newshape=[]) /* ty=int16 */;
  %906 = reshape(%904, newshape=[10, 1, 2]) /* ty=Tensor[(10, 1, 2), int16] */;
  %907 = @func_3097(%905, %906) /* ty=(Tensor[(10, 1, 2), int16], Tensor[(10, 2, 16), float32]) */;
  %908 = cast(%var_5303, dtype="int16") /* ty=Tensor[(1200, 2), int16] */;
  %909 = cast(%var_5303, dtype="int16") /* ty=Tensor[(1200, 2), int16] */;
  %910 = reshape(%908, newshape=[10, 16, 15]) /* ty=Tensor[(10, 16, 15), int16] */;
  %911 = reshape(%909, newshape=[10, 16, 15]) /* ty=Tensor[(10, 16, 15), int16] */;
  %912 = %902.0;
  %913 = %907.1;
  %914 = @func_2371(%910, %911) /* ty=Tensor[(10, 16, 15), int16] */;
  (%912, %913, %var_5295, %var_5296, %914, %var_5303)
}

def @func_19373() -> (Tensor[(10, 2, 16), float32],) {
  %915 = @func_445() /* ty=Tensor[(10, 2, 16), float32] */;
  (%915,)
}

def @func_18728() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %916 = @func_3294() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
  %917 = @func_1630() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
  %918 = %916.1;
  %919 = %917.2;
  %920 = @func_8839() /* ty=Tensor[(10, 2, 16), float32] */;
  (%918, %919, %920)
}

def @func_12909() -> (Tensor[(10, 2, 16), float32],) {
  %921 = @func_1377() /* ty=Tensor[(10, 2, 16), float32] */;
  (%921,)
}

def @func_8806() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 1, 2), int16], int16, Tensor[(20), int16], Tensor[(6, 9, 8), float32], Tensor[(48), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float64], Tensor[(432), float32]) {
  %922 = @func_4925() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %923 = @func_3294() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
  %924 = cast(meta[relay.Constant][22] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %925 = cast(meta[relay.Constant][23] /* ty=Tensor[(20), int16] */, dtype="int16") /* ty=Tensor[(20), int16] */;
  %926 = reshape(%924, newshape=[]) /* ty=int16 */;
  %927 = reshape(%925, newshape=[10, 1, 2]) /* ty=Tensor[(10, 1, 2), int16] */;
  %928 = @func_3097(%926, %927) /* ty=(Tensor[(10, 1, 2), int16], Tensor[(10, 2, 16), float32]) */;
  %929 = cast(meta[relay.Constant][24] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %930 = reshape(%929, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %931 = @func_2613(%930) /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(6, 9, 8), float32], Tensor[(6, 9, 8), bool], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) */;
  %932 = @func_8395() /* ty=(Tensor[(10, 2, 16), uint8],) */;
  %933 = @func_3368() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
  %934 = %922.0;
  %935 = %923.3;
  %936 = %928.0;
  %937 = %931.1;
  %938 = %932.0;
  %939 = %933.3;
  %940 = @func_5322() /* ty=Tensor[(432), float32] */;
  (%934, %935, %936, meta[relay.Constant][22] /* ty=int16 */, meta[relay.Constant][23] /* ty=Tensor[(20), int16] */, %937, meta[relay.Constant][24] /* ty=Tensor[(48), float32] */, %938, %939, %940)
}

def @func_362() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %941 = @func_327() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %942 = @func_305() /* ty=Tensor[(10, 2, 16), float32] */;
  %943 = %941.0;
  (%942, %943)
}

def @func_5056(%var_5040: Tensor[(8, 15, 2), bool], %var_5051: Tensor[(24, 2), float32]) -> (Tensor[(10, 2, 16), float32], Tensor[(8, 15, 2), float64], Tensor[(8, 15, 2), float32], Tensor[(48), float32], Tensor[(24, 2), float32]) {
  %944 = @func_3439() /* ty=(Tensor[(2, 8, 9), float32], Tensor[(10, 2, 16), float32], Tensor[(8, ?, 2), bool]) */;
  %945 = %944.2;
  %946 = cast(%945, dtype="float64") /* ty=Tensor[(8, ?, 2), float64] */;
  %947 = cast(%var_5040, dtype="float64") /* ty=Tensor[(8, 15, 2), float64] */;
  %948 = cast(%var_5040, dtype="float32") /* ty=Tensor[(8, 15, 2), float32] */;
  %949 = cast(%var_5051, dtype="float32") /* ty=Tensor[(24, 2), float32] */;
  %950 = reshape(%949, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %951 = @func_2224(%950) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %952 = @func_1156() /* ty=Tensor[(10, 2, 16), float32] */;
  %953 = maximum(%946, %947) /* ty=Tensor[(8, 15, 2), float64] */;
  %954 = erf(%948) /* ty=Tensor[(8, 15, 2), float32] */;
  %955 = %951.2;
  (%952, %953, %954, %955, %var_5051)
}

def @func_5767() -> (Tensor[(8, 9, 6), float64], Tensor[(10, 2, 16), float32]) {
  %956 = cast(meta[relay.Constant][25] /* ty=Tensor[(8, 9, 6), float64] */, dtype="float64") /* ty=Tensor[(8, 9, 6), float64] */;
  %957 = @func_1958() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %958 = cosh(%956) /* ty=Tensor[(8, 9, 6), float64] */;
  %959 = %957.0;
  (%958, %959)
}

def @func_17009(%var_16969: Tensor[(10, 7, 48), float64]) -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 7, 48), uint16], Tensor[(10, 2, 16), float32], Tensor[(10, 7, 48), bool]) {
  %960 = @func_16224() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %961 = @func_13656() /* ty=(Tensor[(10, 7, 48), float64], Tensor[(10, 2, 16), float32]) */;
  %962 = %961.0;
  %963 = cast(%var_16969, dtype="uint16") /* ty=Tensor[(10, 7, 48), uint16] */;
  %964 = shape_of(%962, dtype="int32") /* ty=Tensor[(3), int32] */;
  %965 = cast(%962, dtype="uint16") /* ty=Tensor[(10, 7, 48), uint16] */;
  %966 = dyn.reshape(%963, %964, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %967 = @func_6772() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %968 = cast(%962, dtype="float32") /* ty=Tensor[(10, 7, 48), float32] */;
  %969 = acosh(%968) /* ty=Tensor[(10, 7, 48), float32] */;
  %970 = cast(%var_16969, dtype="bool") /* ty=Tensor[(10, 7, 48), bool] */;
  %971 = shape_of(%969, dtype="int32") /* ty=Tensor[(3), int32] */;
  %972 = cast(%969, dtype="bool") /* ty=Tensor[(10, 7, 48), bool] */;
  %973 = dyn.reshape(%970, %971, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %974 = %960.0;
  %975 = @func_10245() /* ty=Tensor[(10, 2, 16), float32] */;
  %976 = subtract(%965, %966) /* ty=Tensor[(10, 7, 48), uint16] */;
  %977 = %967.1;
  %978 = greater_equal(%972, %973) /* ty=Tensor[(10, 7, 48), bool] */;
  (%974, %975, %976, %977, %978)
}

def @func_13688() -> (Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32], Tensor[(10, 2, 16), bool]) {
  %979 = @func_1630() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
  %980 = @func_3531() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(2, 8, 9), float32]) */;
  %981 = %979.0;
  %982 = %980.1;
  %983 = @func_8863() /* ty=Tensor[(10, 2, 16), bool] */;
  (%981, %982, %983)
}

def @func_18934() -> Tensor[(10, 2, 16), float32] {
  %984 = @func_13585() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %984.1
}

def @func_22421() -> (Tensor[(10, 2, 16), uint8], Tensor[(2, 8, 9), float32], Tensor[(10, 2, 16), float32]) {
  %985 = @func_14450() /* ty=(Tensor[(10, 2, 16), uint8],) */;
  %986 = @func_15063() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(2, 8, 9), float32]) */;
  %987 = @func_20900() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %988 = %985.0;
  %989 = %986.1;
  %990 = %987.1;
  (%988, %989, %990)
}

def @func_23594() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) {
  %991 = @func_22769() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %992 = @func_16748() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %993 = @func_11649() /* ty=(Tensor[(10, 2, 16), uint8],) */;
  %994 = %991.3;
  %995 = %992.4;
  %996 = %993.0;
  (%994, %995, %996)
}

def @func_25852() -> (Tensor[(10, 2, 16), float32],) {
  %997 = @func_14954() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %998 = %997.2;
  (%998,)
}

def @func_12399() -> Tensor[(10, 2, 16), float32] {
  %999 = @func_1657() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %999.0
}

def @func_23786() -> (Tensor[(10, 2, 16), float64], Tensor[(48), float32]) {
  %1000 = @func_4351() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %1001 = %1000.1;
  %1002 = @func_13079() /* ty=Tensor[(48), float32] */;
  (%1001, %1002)
}

def @func_13489() -> (Tensor[(10, 2, 16), float32],) {
  %1003 = @func_8538() /* ty=(Tensor[(2400), int16], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float64], Tensor[(432), float32], Tensor[(10, 2, 16), float32]) */;
  %1004 = %1003.4;
  (%1004,)
}

def @func_18872() -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) {
  %1005 = @func_8344() /* ty=(Tensor[(10, 2, 16), float64],) */;
  %1006 = %1005.0;
  %1007 = @func_4372() /* ty=Tensor[(10, 2, 16), float32] */;
  (%1006, %1007)
}

def @func_10552() -> Tensor[(10, 2, 16), float32] {
  %1008 = @func_10505() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %1008.0
}

def @func_28477() -> Tensor[(8, ?, 2), bool] {
  %1009 = @func_1688() /* ty=(Tensor[(4, 3, 4), float32], Tensor[(48), float32], Tensor[(8, ?, 2), bool], Tensor[(8, 1, 2), float32]) */;
  %1009.2
}

def @func_11305() -> (Tensor[(10, 2, 16), float32],) {
  %1010 = @func_4674() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %1011 = %1010.0;
  (%1011,)
}

def @func_19212(%var_19204: Tensor[(7, 2, 14), float64]) -> (Tensor[(432), float32], Tensor[(10, 2, 16), float32], Tensor[(7, 2, 14), uint16]) {
  %1012 = @func_12960() /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), float32]) */;
  %1013 = @func_18271() /* ty=(Tensor[(7, 2, 14), float64], Tensor[(7, 2, 14), float32], Tensor[(10, 2, 16), float64]) */;
  %1014 = %1013.0;
  %1015 = cast(%var_19204, dtype="uint16") /* ty=Tensor[(7, 2, 14), uint16] */;
  %1016 = shape_of(%1014, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1017 = cast(%1014, dtype="uint16") /* ty=Tensor[(7, 2, 14), uint16] */;
  %1018 = dyn.reshape(%1015, %1016, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1019 = %1012.0;
  %1020 = @func_16463() /* ty=Tensor[(10, 2, 16), float32] */;
  %1021 = logical_xor(%1017, %1018) /* ty=Tensor[(7, 2, 14), uint16] */;
  (%1019, %1020, %1021)
}

def @func_1630() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) {
  %1022 = @func_584() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1023 = @func_431() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %1024 = @func_584() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1025 = %1022.0;
  %1026 = %1023.1;
  %1027 = %1024.0;
  (%1025, %1026, %1027)
}

def @func_7959() -> Tensor[(10, 2, 16), float32] {
  %1028 = @func_7388() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 16, 15), int16]) */;
  %1028.3
}

def @func_6046() -> (Tensor[(10, 2, 16), float32],) {
  %1029 = @func_4372() /* ty=Tensor[(10, 2, 16), float32] */;
  (%1029,)
}

def @func_24419() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1030 = @func_16763() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) */;
  %1031 = @func_12831() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1032 = %1030.0;
  %1033 = %1031.0;
  (%1032, %1033)
}

def @func_26131() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1034 = @func_10794() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1035 = @func_12742() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1036 = %1034.0;
  %1037 = %1035.0;
  (%1036, %1037)
}

def @func_27200() -> (Tensor[(48), float32], Tensor[(48), float32]) {
  %1038 = @func_711() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) */;
  %1039 = @func_22769() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1040 = %1038.2;
  %1041 = %1039.2;
  (%1040, %1041)
}

def @func_14651() -> (Tensor[(10, 2, 16), float32],) {
  %1042 = @func_3368() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
  %1043 = %1042.0;
  (%1043,)
}

def @func_22076() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) {
  %1044 = @func_17558() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
  %1045 = @func_11721() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), uint8]) */;
  %1046 = %1044.1;
  %1047 = %1045.0;
  (%1046, %1047)
}

def @func_10641() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1048 = @func_2783() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1049 = @func_4875() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1050 = @func_1989() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1051 = %1048.0;
  %1052 = %1049.0;
  %1053 = %1050.2;
  (%1051, %1052, %1053)
}

def @func_2224(%var_2156: Tensor[(48), float32]) -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1054 = @func_1476() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1055 = cast(%var_2156, dtype="float32") /* ty=Tensor[(48), float32] */;
  %1056 = reshape(%1055, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %1057 = @func_672(%1056) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(4, 3, 4), float32], Tensor[(48), float32], Tensor[(4, 3, 4), float32]) */;
  %1058 = @func_584() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1059 = @func_584() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1060 = %1054.1;
  %1061 = %1057.1;
  %1062 = %1058.0;
  %1063 = %1059.0;
  (%1060, %1061, %var_2156, %1062, %1063)
}

def @func_621(%var_614: Tensor[(48), float32]) -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(4, 3, 4), float32], Tensor[(48), float32]) {
  %1064 = @func_431() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %1065 = cast(%var_614, dtype="float32") /* ty=Tensor[(48), float32] */;
  %1066 = reshape(%1065, newshape=[4, 3, 4]) /* ty=Tensor[(4, 3, 4), float32] */;
  %1067 = %1064.1;
  %1068 = @func_257() /* ty=Tensor[(10, 2, 16), float32] */;
  %1069 = @func_294(%1066) /* ty=Tensor[(4, 3, 4), float32] */;
  (%1067, %1068, %1069, %var_614)
}

def @func_20773() -> (Tensor[(10, 2, 16), float32],) {
  %1070 = @func_10641() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1071 = %1070.2;
  (%1071,)
}

def @func_9091() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1072 = @func_327() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1073 = %1072.0;
  %1074 = @func_6325() /* ty=Tensor[(10, 2, 16), float32] */;
  %1075 = @func_7959() /* ty=Tensor[(10, 2, 16), float32] */;
  (%1073, %1074, %1075)
}

def @func_22460() -> Tensor[(2, 8, 9), float32] {
  %1076 = @func_15868() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) */;
  %1076.4
}

def @func_19317() -> (Tensor[(10, 6, 8), float32],) {
  %1077 = cast(meta[relay.Constant][27] /* ty=Tensor[(10, 6, 8), float32] */, dtype="float32") /* ty=Tensor[(10, 6, 8), float32] */;
  %1078 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(10, 6, 8), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1079 = cast(meta[relay.Constant][26] /* ty=Tensor[(10, 6, 8), float32] */, dtype="float32") /* ty=Tensor[(10, 6, 8), float32] */;
  %1080 = dyn.reshape(%1077, %1078, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1081 = divide(%1079, %1080) /* ty=Tensor[(10, 6, 8), float32] */;
  (%1081,)
}

def @func_17780() -> (Tensor[(10, 2, 16), uint8],) {
  %1082 = @func_8608() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 7, 48), float32], Tensor[(70), float32]) */;
  %1083 = %1082.1;
  (%1083,)
}

def @func_15381() -> (Tensor[(48), float32],) {
  %1084 = @func_9573() /* ty=(Tensor[(48), float32],) */;
  %1085 = %1084.0;
  (%1085,)
}

def @func_26797() -> Tensor[(10, 2, 16), uint8] {
  %1086 = @func_25387() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8]) */;
  %1086.0
}

def @func_8395() -> (Tensor[(10, 2, 16), uint8],) {
  %1087 = @func_6823() /* ty=(Tensor[(10, 2, 16), uint8],) */;
  %1088 = %1087.0;
  (%1088,)
}

def @func_13230() -> Tensor[(10, 2, 16), float32] {
  @func_1518() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_12113() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) {
  %1089 = @func_5158() /* ty=Tensor[(10, 2, 16), uint8] */;
  %1090 = cast(%1089, dtype="uint8") /* ty=Tensor[(10, 2, 16), uint8] */;
  %1091 = reshape(%1090, newshape=[10, 2, 16]) /* ty=Tensor[(10, 2, 16), uint8] */;
  %1092 = @func_1288(%1091) /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1093 = %1092.4;
  (%1089, %1093)
}

def @func_1156() -> Tensor[(10, 2, 16), float32] {
  %1094 = @func_807() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1094.1
}

def @func_12086() -> (Tensor[(10, 2, 16), float32],) {
  %1095 = @func_11740() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %1096 = %1095.1;
  (%1096,)
}

def @func_17601(%var_17593: Tensor[(18), float32]) -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), uint8], Tensor[(18), float32], Tensor[(10, 7, 48), float64]) {
  %1097 = @func_12086() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1098 = cast(%var_17593, dtype="float32") /* ty=Tensor[(18), float32] */;
  %1099 = reshape(%1098, newshape=[1, 2, 9]) /* ty=Tensor[(1, 2, 9), float32] */;
  %1100 = @func_14837(%1099) /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(?, 2, 9), float32], Tensor[(?, 2, 9), bool]) */;
  %1101 = @func_13656() /* ty=(Tensor[(10, 7, 48), float64], Tensor[(10, 2, 16), float32]) */;
  %1102 = %1097.0;
  %1103 = @func_8863() /* ty=Tensor[(10, 2, 16), bool] */;
  %1104 = %1100.0;
  %1105 = %1101.0;
  (%1102, %1103, %1104, %var_17593, %1105)
}

def @func_24744() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1106 = @func_2960() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), float32]) */;
  %1107 = @func_7959() /* ty=Tensor[(10, 2, 16), float32] */;
  %1108 = %1106.2;
  (%1107, %1108)
}

def @func_27747() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1109 = @func_16224() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %1110 = @func_17319() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1111 = @func_24982() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1112 = @func_8655() /* ty=(Tensor[(6, 9, 8), float32], Tensor[(10, 2, 16), float32]) */;
  %1113 = @func_11851() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8]) */;
  %1114 = %1109.1;
  %1115 = %1110.0;
  %1116 = %1111.0;
  %1117 = %1112.1;
  %1118 = %1113.2;
  (%1114, %1115, %1116, %1117, %1118)
}

def @func_3294() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) {
  %1119 = @func_2444() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %1120 = @func_1518() /* ty=Tensor[(10, 2, 16), float32] */;
  %1121 = @func_1766() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool]) */;
  %1122 = %1121.2;
  %1123 = cast(%1122, dtype="uint8") /* ty=Tensor[(10, 2, 16), uint8] */;
  %1124 = shape_of(%1120, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1125 = cast(%1120, dtype="uint8") /* ty=Tensor[(10, 2, 16), uint8] */;
  %1126 = dyn.reshape(%1123, %1124, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1127 = @func_2134() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1128 = @func_1545() /* ty=(Tensor[(10, 2, 16), uint8],) */;
  %1129 = %1119.1;
  %1130 = logical_xor(%1125, %1126) /* ty=Tensor[(10, 2, 16), uint8] */;
  %1131 = %1127.0;
  %1132 = %1128.0;
  (%1129, %1130, %1131, %1132)
}

def @func_10324() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1133 = @func_3368() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
  %1134 = %1133.0;
  %1135 = @func_445() /* ty=Tensor[(10, 2, 16), float32] */;
  (%1134, %1135)
}

def @func_25810(%var_25763: Tensor[(8, 11, 2), float32]) -> (Tensor[(10, 2, 16), float32], Tensor[(8, 11, 2), int32], Tensor[(10, 2, 16), float32]) {
  %1136 = @func_20586() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(16, 4, 14), int64]) */;
  %1137 = cast(%var_25763, dtype="float32") /* ty=Tensor[(8, 11, 2), float32] */;
  %1138 = exp(%1137) /* ty=Tensor[(8, 11, 2), float32] */;
  %1139 = cast(%var_25763, dtype="bool") /* ty=Tensor[(8, 11, 2), bool] */;
  %1140 = shape_of(%1138, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1141 = cast(%1138, dtype="bool") /* ty=Tensor[(8, 11, 2), bool] */;
  %1142 = dyn.reshape(%1139, %1140, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1143 = greater(%1141, %1142) /* ty=Tensor[(8, 11, 2), bool] */;
  %1144 = cast(%1143, dtype="int32") /* ty=Tensor[(8, 11, 2), int32] */;
  %1145 = shape_of(%1138, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1146 = cast(%1138, dtype="int32") /* ty=Tensor[(8, 11, 2), int32] */;
  %1147 = dyn.reshape(%1144, %1145, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1148 = @func_14954() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1149 = %1136.0;
  %1150 = right_shift(%1146, %1147) /* ty=Tensor[(8, 11, 2), int32] */;
  %1151 = %1148.1;
  (%1149, %1150, %1151)
}

def @func_3368() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) {
  %1152 = @func_1766() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool]) */;
  %1153 = @func_2711() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1154 = @func_2341() /* ty=(Tensor[(10, 2, 16), float64],) */;
  %1155 = @func_1657() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1156 = @func_305() /* ty=Tensor[(10, 2, 16), float32] */;
  %1157 = %1152.2;
  %1158 = %1153.0;
  %1159 = %1154.0;
  %1160 = %1155.0;
  (%1156, %1157, %1158, %1159, %1160)
}

def @func_22130(%var_22124: Tensor[(12, 3, 9), float64], %var_22125: Tensor[(12, 3, 9), float64]) -> (Tensor[(12, 3, 9), float64],) {
  %1161 = cast(%var_22125, dtype="float64") /* ty=Tensor[(12, 3, 9), float64] */;
  %1162 = shape_of(%var_22124, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1163 = cast(%var_22124, dtype="float64") /* ty=Tensor[(12, 3, 9), float64] */;
  %1164 = dyn.reshape(%1161, %1162, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1165 = mod(%1163, %1164) /* ty=Tensor[(12, 3, 9), float64] */;
  (%1165,)
}

def @func_1958() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1166 = @func_1041() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %1167 = @func_1657() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1168 = %1166.1;
  %1169 = %1167.0;
  (%1168, %1169)
}

def @func_8448(%var_8431: Tensor[(24, 2), float32]) -> (Tensor[(10, 2, 16), float32], Tensor[(70), float32], Tensor[(10, 2, 16), float32], Tensor[(24, 2), float32]) {
  %1170 = @func_6288() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 7, 1), float32], Tensor[(70), float32], Tensor[(10, 2, 16), float64]) */;
  %1171 = cast(%var_8431, dtype="float32") /* ty=Tensor[(24, 2), float32] */;
  %1172 = reshape(%1171, newshape=[2, 24]) /* ty=Tensor[(2, 24), float32] */;
  %1173 = @func_7535(%1172) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(2, 24), float32]) */;
  %1174 = @func_1377() /* ty=Tensor[(10, 2, 16), float32] */;
  %1175 = %1170.2;
  %1176 = %1173.0;
  (%1174, %1175, %1176, %var_8431)
}

def @func_18066() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) {
  %1177 = cast(meta[relay.Constant][28] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %1178 = reshape(%1177, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %1179 = @func_7497(%1178) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(48), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
  %1180 = @func_5158() /* ty=Tensor[(10, 2, 16), uint8] */;
  %1181 = %1179.4;
  (%1180, %1181, meta[relay.Constant][28] /* ty=Tensor[(48), float32] */)
}

def @func_23014() -> (Tensor[(10, 2, 16), bool], Tensor[(2, 8, 9), float32], Tensor[(10, 2, 16), uint8]) {
  %1182 = @func_14450() /* ty=(Tensor[(10, 2, 16), uint8],) */;
  %1183 = @func_8863() /* ty=Tensor[(10, 2, 16), bool] */;
  %1184 = @func_11348() /* ty=Tensor[(2, 8, 9), float32] */;
  %1185 = %1182.0;
  (%1183, %1184, %1185)
}

def @func_15945() -> (Tensor[(432), float32],) {
  %1186 = @func_13061() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32]) */;
  %1187 = %1186.1;
  (%1187,)
}

def @func_10794() -> (Tensor[(10, 2, 16), float32],) {
  %1188 = @func_4925() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1189 = %1188.0;
  (%1189,)
}

def @func_24603(%var_24560: Tensor[(15, 15, 13), float64]) -> (Tensor[(15, 15, 13), float64], Tensor[(10, 2, 16), float32], Tensor[(4, 12), float32], Tensor[(10, 2, 16), float32]) {
  %1190 = cast(%var_24560, dtype="float64") /* ty=Tensor[(15, 15, 13), float64] */;
  %1191 = @func_9397() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1192 = @func_9315() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(4, 3, 4), float32], Tensor[(4, 12), float32]) */;
  %1193 = @func_18471() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1194 = acosh(%1190) /* ty=Tensor[(15, 15, 13), float64] */;
  %1195 = %1191.0;
  %1196 = %1192.3;
  %1197 = %1193.0;
  (%1194, %1195, %1196, %1197)
}

def @func_13020() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1198 = @func_6801() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1199 = @func_1476() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1200 = %1198.0;
  %1201 = %1199.2;
  (%1200, %1201)
}

def @func_4740(%var_4676: int8) -> (Tensor[(2, 16, 6), int8], Tensor[(10, 2, 16), float32]) {
  %1202 = cast(%var_4676, dtype="int8") /* ty=int8 */;
  %1203 = cast(meta[relay.Constant][29] /* ty=Tensor[(2, 16, 6), int8] */, dtype="int8") /* ty=Tensor[(2, 16, 6), int8] */;
  %1204 = @func_2977() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1205 = bitwise_or(%1202, %1203) /* ty=Tensor[(2, 16, 6), int8] */;
  %1206 = %1204.0;
  (%1205, %1206)
}

def @func_2783() -> (Tensor[(10, 2, 16), float32],) {
  %1207 = @func_257() /* ty=Tensor[(10, 2, 16), float32] */;
  (%1207,)
}

def @func_20691() -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) {
  %1208 = @func_16077() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1209 = @func_5084() /* ty=Tensor[(10, 2, 16), float64] */;
  %1210 = %1208.0;
  (%1209, %1210)
}

def @func_11721() -> (Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), uint8]) {
  %1211 = @func_6158() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1212 = @func_4087() /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float64]) */;
  %1213 = @func_880() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %1214 = %1211.2;
  %1215 = %1212.0;
  %1216 = %1213.0;
  (%1214, %1215, %1216)
}

def @func_14023() -> Tensor[(10, 2, 16), float32] {
  %1217 = @func_13294() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1217.0
}

def @func_25754() -> Tensor[(10, 2, 16), float64] {
  %1218 = @func_11796() /* ty=(Tensor[(10, 2, 16), float64],) */;
  %1218.0
}

def @func_16475() -> (Tensor[(10, 2, 16), float32],) {
  %1219 = @func_6671() /* ty=Tensor[(10, 2, 16), float32] */;
  (%1219,)
}

def @func_22013() -> (Tensor[(10, 2, 16), float32],) {
  %1220 = @func_4875() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1221 = %1220.1;
  (%1221,)
}

def @func_14954() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1222 = @func_9091() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1223 = @func_9201() /* ty=Tensor[(10, 2, 16), float32] */;
  %1224 = @func_4372() /* ty=Tensor[(10, 2, 16), float32] */;
  %1225 = %1222.0;
  (%1223, %1224, %1225)
}

def @func_23209(%var_23168: int16) -> (Tensor[(10, 2, 16), float32], Tensor[(20), int16], int16, Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1226 = @func_18872() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
  %1227 = cast(%var_23168, dtype="int16") /* ty=int16 */;
  %1228 = reshape(%1227, newshape=[]) /* ty=int16 */;
  %1229 = @func_3620(%1228) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(20), int16], Tensor[(10, 1, 2), bool], Tensor[(10, 2, 16), float32]) */;
  %1230 = @func_14364() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1231 = @func_3474() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1232 = %1226.1;
  %1233 = %1229.1;
  %1234 = %1230.0;
  %1235 = %1231.0;
  (%1232, %1233, %var_23168, %1234, %1235)
}

def @func_294(%var_288: Tensor[(4, 3, 4), float32]) -> Tensor[(4, 3, 4), float32] {
  %1236 = cast(-7.37178f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1237 = cast(%var_288, dtype="float32") /* ty=Tensor[(4, 3, 4), float32] */;
  mod(%1236, %1237) /* ty=Tensor[(4, 3, 4), float32] */
}

def @func_27443() -> Tensor[(10, 2, 16), float32] {
  @func_8839() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_21623() -> (Tensor[(432), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1238 = @func_19294() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32]) */;
  %1239 = @func_4109() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1240 = @func_6823() /* ty=(Tensor[(10, 2, 16), uint8],) */;
  %1241 = @func_20827() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1242 = @func_1766() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool]) */;
  %1243 = %1238.1;
  %1244 = %1239.0;
  %1245 = %1240.0;
  %1246 = @func_1377() /* ty=Tensor[(10, 2, 16), float32] */;
  %1247 = %1241.0;
  %1248 = %1242.1;
  (%1243, %1244, %1245, %1246, %1247, %1248)
}

def @func_13196() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1249 = @func_13061() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32]) */;
  %1250 = @func_7152() /* ty=Tensor[(10, 2, 16), float32] */;
  %1251 = %1249.0;
  (%1250, %1251)
}

def @func_1912(%var_1874: Tensor[(48), float32]) -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) {
  %1252 = @func_1332() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
  %1253 = cast(%var_1874, dtype="float32") /* ty=Tensor[(48), float32] */;
  %1254 = reshape(%1253, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %1255 = @func_672(%1254) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(4, 3, 4), float32], Tensor[(48), float32], Tensor[(4, 3, 4), float32]) */;
  %1256 = %1252.0;
  %1257 = @func_445() /* ty=Tensor[(10, 2, 16), float32] */;
  %1258 = @func_257() /* ty=Tensor[(10, 2, 16), float32] */;
  %1259 = %1255.2;
  (%1256, %1257, %1258, %1259, %var_1874)
}

def @func_11879() -> (Tensor[(10, 2, 16), float32], Tensor[(16, 4, 14), int64], Tensor[(896), int64]) {
  %1260 = @func_8671() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1261 = cast(meta[relay.Constant][30] /* ty=Tensor[(896), int64] */, dtype="int64") /* ty=Tensor[(896), int64] */;
  %1262 = cast(meta[relay.Constant][30] /* ty=Tensor[(896), int64] */, dtype="int64") /* ty=Tensor[(896), int64] */;
  %1263 = reshape(%1261, newshape=[16, 4, 14]) /* ty=Tensor[(16, 4, 14), int64] */;
  %1264 = reshape(%1262, newshape=[16, 4, 14]) /* ty=Tensor[(16, 4, 14), int64] */;
  %1265 = @func_4187(%1263, %1264) /* ty=(Tensor[(16, 4, 14), int64],) */;
  %1266 = %1260.0;
  %1267 = %1265.0;
  (%1266, %1267, meta[relay.Constant][30] /* ty=Tensor[(896), int64] */)
}

def @func_10674() -> Tensor[(10, 2, 16), float64] {
  %1268 = @func_6158() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1268.0
}

def @func_26357() -> (Tensor[(10, 2, 16), float32],) {
  %1269 = @func_15566() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %1270 = %1269.0;
  (%1270,)
}

def @func_16507() -> (Tensor[(2, 8, 9), float32],) {
  %1271 = @func_13688() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32], Tensor[(10, 2, 16), bool]) */;
  %1272 = %1271.1;
  (%1272,)
}

def @func_15868() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) {
  %1273 = @func_5718() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) */;
  %1274 = @func_13196() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1275 = @func_14309() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1276 = %1273.0;
  %1277 = %1274.0;
  %1278 = %1275.0;
  %1279 = @func_15779() /* ty=Tensor[(10, 2, 16), float32] */;
  %1280 = @func_11348() /* ty=Tensor[(2, 8, 9), float32] */;
  (%1276, %1277, %1278, %1279, %1280)
}

def @func_9966() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) {
  %1281 = @func_8608() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 7, 48), float32], Tensor[(70), float32]) */;
  %1282 = @func_1989() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1283 = %1281.2;
  %1284 = %1282.0;
  (%1283, %1284)
}

def @func_3881() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1285 = @func_2134() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1286 = @func_2977() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1287 = %1285.0;
  %1288 = @func_1156() /* ty=Tensor[(10, 2, 16), float32] */;
  %1289 = @func_1156() /* ty=Tensor[(10, 2, 16), float32] */;
  %1290 = %1286.0;
  (%1287, %1288, %1289, %1290)
}

def @func_13736(%var_13720: Tensor[(10, 13, 10), uint64], %var_13721: Tensor[(10, 13, 10), uint64]) -> (Tensor[(10, 13, 10), bool], Tensor[(2, 8, 9), float32]) {
  %1291 = cast(%var_13721, dtype="bool") /* ty=Tensor[(10, 13, 10), bool] */;
  %1292 = shape_of(%var_13720, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1293 = cast(%var_13720, dtype="bool") /* ty=Tensor[(10, 13, 10), bool] */;
  %1294 = dyn.reshape(%1291, %1292, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1295 = @func_3531() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(2, 8, 9), float32]) */;
  %1296 = not_equal(%1293, %1294) /* ty=Tensor[(10, 13, 10), bool] */;
  %1297 = %1295.1;
  (%1296, %1297)
}

def @func_25492() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
  %1298 = @func_12034() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1299 = %1298.0;
  %1300 = @func_6085() /* ty=Tensor[(10, 2, 16), float64] */;
  (%1299, %1300)
}

def @func_16151() -> Tensor[(10, 2, 16), float32] {
  %1301 = @func_5767() /* ty=(Tensor[(8, 9, 6), float64], Tensor[(10, 2, 16), float32]) */;
  %1301.1
}

def @func_15633() -> (Tensor[(10, 2, 16), float32],) {
  %1302 = @func_13230() /* ty=Tensor[(10, 2, 16), float32] */;
  (%1302,)
}

def @func_27557() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
  %1303 = @func_23786() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(48), float32]) */;
  %1304 = @func_17348() /* ty=Tensor[(10, 2, 16), float32] */;
  %1305 = %1303.0;
  (%1304, %1305)
}

def @func_9334(%var_9319: Tensor[(16, 16, 10), int32], %var_9320: Tensor[(16, 16, 10), int32]) -> (Tensor[(16, 16, 10), int32], Tensor[(10, 2, 16), float32]) {
  %1306 = cast(%var_9320, dtype="int32") /* ty=Tensor[(16, 16, 10), int32] */;
  %1307 = shape_of(%var_9319, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1308 = cast(%var_9319, dtype="int32") /* ty=Tensor[(16, 16, 10), int32] */;
  %1309 = dyn.reshape(%1306, %1307, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1310 = bitwise_and(%1308, %1309) /* ty=Tensor[(16, 16, 10), int32] */;
  %1311 = @func_4372() /* ty=Tensor[(10, 2, 16), float32] */;
  (%1310, %1311)
}

def @func_17627() -> Tensor[(10, 2, 16), float64] {
  @func_5084() /* ty=Tensor[(10, 2, 16), float64] */
}

def @func_24130() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1312 = @func_12430() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(2400), int16]) */;
  %1313 = @func_257() /* ty=Tensor[(10, 2, 16), float32] */;
  %1314 = %1312.0;
  (%1313, %1314)
}

def @func_4049() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48, 1), float32]) {
  %1315 = @func_431() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %1316 = cast(meta[relay.Constant][31] /* ty=Tensor[(48, 1), float32] */, dtype="float32") /* ty=Tensor[(48, 1), float32] */;
  %1317 = reshape(%1316, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %1318 = @func_621(%1317) /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(4, 3, 4), float32], Tensor[(48), float32]) */;
  %1319 = cast(meta[relay.Constant][31] /* ty=Tensor[(48, 1), float32] */, dtype="float32") /* ty=Tensor[(48, 1), float32] */;
  %1320 = %1315.0;
  %1321 = %1318.1;
  %1322 = sinh(%1319) /* ty=Tensor[(48, 1), float32] */;
  (%1320, %1321, %1322)
}

def @func_6498() -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float64]) {
  %1323 = @func_4799() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(2400), int16]) */;
  %1324 = @func_2341() /* ty=(Tensor[(10, 2, 16), float64],) */;
  %1325 = %1323.0;
  %1326 = %1324.0;
  (%1325, %1326)
}

def @func_5322() -> Tensor[(432), float32] {
  @func_2078() /* ty=Tensor[(432), float32] */
}

def @func_17348() -> Tensor[(10, 2, 16), float32] {
  %1327 = @func_13439() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1327.0
}

def @func_20748(%var_20698: float32) -> (Tensor[(432), float32], Tensor[(10, 2, 16), float32], float32, Tensor[(10, 2, 16), float32]) {
  %1328 = @func_17490() /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), uint8], Tensor[(320), uint8], Tensor[(432), float32]) */;
  %1329 = cast(%var_20698, dtype="float32") /* ty=float32 */;
  %1330 = reshape(%1329, newshape=[]) /* ty=float32 */;
  %1331 = @func_1070(%1330) /* ty=(Tensor[(4, 14, 12), float32], Tensor[(10, 2, 16), float32]) */;
  %1332 = @func_10505() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %1333 = %1328.0;
  %1334 = %1331.1;
  %1335 = %1332.0;
  (%1333, %1334, %var_20698, %1335)
}

def @func_14576(%var_14550: Tensor[(640), uint16]) -> (Tensor[(10, 2, 16), float32], Tensor[(10, 7, 1), float32], Tensor[(16, 8, 5), bool], Tensor[(640), uint16], Tensor[(10, 2, 16), float32]) {
  %1336 = @func_3165() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1337 = @func_6288() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 7, 1), float32], Tensor[(70), float32], Tensor[(10, 2, 16), float64]) */;
  %1338 = cast(%var_14550, dtype="uint16") /* ty=Tensor[(640), uint16] */;
  %1339 = cast(%var_14550, dtype="uint16") /* ty=Tensor[(640), uint16] */;
  %1340 = cast(%var_14550, dtype="uint16") /* ty=Tensor[(640), uint16] */;
  %1341 = reshape(%1338, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), uint16] */;
  %1342 = reshape(%1339, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), uint16] */;
  %1343 = reshape(%1340, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), uint16] */;
  %1344 = @func_5188(%1341, %1342, %1343) /* ty=(Tensor[(16, 8, 5), bool], Tensor[(16, 8, 5), int8]) */;
  %1345 = @func_14309() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1346 = %1336.0;
  %1347 = %1337.1;
  %1348 = %1344.0;
  %1349 = %1345.0;
  (%1346, %1347, %1348, %var_14550, %1349)
}

def @func_1657() -> (Tensor[(10, 2, 16), float32],) {
  %1350 = @func_445() /* ty=Tensor[(10, 2, 16), float32] */;
  (%1350,)
}

def @func_18209() -> (Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float64]) {
  %1351 = @func_2008() /* ty=Tensor[(10, 2, 16), float32] */;
  %1352 = @func_13079() /* ty=Tensor[(48), float32] */;
  %1353 = @func_8863() /* ty=Tensor[(10, 2, 16), bool] */;
  %1354 = @func_7551() /* ty=Tensor[(10, 2, 16), float64] */;
  (%1351, %1352, %1353, %1354)
}

def @func_27513() -> Tensor[(2, 8, 9), float32] {
  %1355 = @func_17671() /* ty=(Tensor[(2, 8, 9), float32],) */;
  %1355.0
}

def @func_21805() -> (Tensor[(432), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1356 = @func_6728() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(432), float32]) */;
  %1357 = @func_9140() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1358 = %1356.2;
  %1359 = %1357.0;
  %1360 = @func_3845() /* ty=Tensor[(10, 2, 16), float32] */;
  (%1358, %1359, %1360)
}

def @func_9140() -> (Tensor[(10, 2, 16), float32],) {
  %1361 = @func_8227() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1362 = %1361.0;
  (%1362,)
}

def @func_12742() -> (Tensor[(10, 2, 16), float32],) {
  %1363 = @func_807() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1364 = %1363.2;
  (%1364,)
}

def @func_9397() -> (Tensor[(10, 2, 16), float32],) {
  %1365 = @func_3881() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1366 = %1365.0;
  (%1366,)
}

def @func_7146() -> (Tensor[(10, 2, 16), float32],) {
  %1367 = @func_6472() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1368 = %1367.0;
  (%1368,)
}

def @func_21191(%var_21185: Tensor[(420, 8), float64]) -> (Tensor[(10, 2, 16), float32], Tensor[(10, 7, 48), bool], Tensor[(420, 8), float64]) {
  %1369 = @func_12960() /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), float32]) */;
  %1370 = cast(%var_21185, dtype="float64") /* ty=Tensor[(420, 8), float64] */;
  %1371 = reshape(%1370, newshape=[10, 7, 48]) /* ty=Tensor[(10, 7, 48), float64] */;
  %1372 = @func_17009(%1371) /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 7, 48), uint16], Tensor[(10, 2, 16), float32], Tensor[(10, 7, 48), bool]) */;
  %1373 = %1369.1;
  %1374 = %1372.4;
  (%1373, %1374, %var_21185)
}

def @func_15129() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1375 = @func_13688() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32], Tensor[(10, 2, 16), bool]) */;
  %1376 = @func_10641() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1377 = %1375.0;
  %1378 = %1376.1;
  (%1377, %1378)
}

def @func_3165() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1379 = @func_2977() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1380 = @func_1156() /* ty=Tensor[(10, 2, 16), float32] */;
  %1381 = %1379.0;
  (%1380, %1381)
}

def @func_6459() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(48), float32], Tensor[(4, 3, 4), float32]) {
  %1382 = @func_1989() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1383 = @func_4568() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %1384 = @func_1545() /* ty=(Tensor[(10, 2, 16), uint8],) */;
  %1385 = @func_1688() /* ty=(Tensor[(4, 3, 4), float32], Tensor[(48), float32], Tensor[(8, ?, 2), bool], Tensor[(8, 1, 2), float32]) */;
  %1386 = %1385.1;
  %1387 = cast(%1386, dtype="float32") /* ty=Tensor[(48), float32] */;
  %1388 = reshape(%1387, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %1389 = @func_621(%1388) /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(4, 3, 4), float32], Tensor[(48), float32]) */;
  %1390 = %1382.0;
  %1391 = %1383.0;
  %1392 = %1384.0;
  %1393 = %1389.2;
  (%1390, %1391, %1392, %1386, %1393)
}

def @func_11851() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8]) {
  %1394 = @func_9966() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
  %1395 = @func_5146() /* ty=(Tensor[(10, 2, 16), uint8],) */;
  %1396 = @func_1156() /* ty=Tensor[(10, 2, 16), float32] */;
  %1397 = @func_6795() /* ty=Tensor[(10, 2, 16), float64] */;
  %1398 = %1394.0;
  %1399 = @func_10995() /* ty=Tensor[(10, 2, 16), uint8] */;
  %1400 = %1395.0;
  (%1396, %1397, %1398, %1399, %1400)
}

def @func_16224() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) {
  %1401 = @func_12113() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %1402 = @func_3474() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1403 = %1401.0;
  %1404 = %1402.0;
  (%1403, %1404)
}

def @func_18295() -> Tensor[(10, 2, 16), float32] {
  %1405 = @func_10641() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1405.0
}

def @func_27598() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1406 = @func_19656() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1407 = @func_1630() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
  %1408 = %1406.0;
  %1409 = %1407.2;
  (%1408, %1409)
}

def @func_1545() -> (Tensor[(10, 2, 16), uint8],) {
  %1410 = @func_1041() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %1411 = %1410.0;
  (%1411,)
}

def @func_23107() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(12, 4), float32], Tensor[(2, 8, 9), float32]) {
  %1412 = cast(meta[relay.Constant][32] /* ty=Tensor[(12, 4), float32] */, dtype="float32") /* ty=Tensor[(12, 4), float32] */;
  %1413 = reshape(%1412, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %1414 = @func_7497(%1413) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(48), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
  %1415 = @func_7914() /* ty=(Tensor[(2, 8, 9), float32],) */;
  %1416 = @func_15664() /* ty=Tensor[(10, 2, 16), float32] */;
  %1417 = %1414.3;
  %1418 = %1415.0;
  (%1416, %1417, meta[relay.Constant][32] /* ty=Tensor[(12, 4), float32] */, %1418)
}

def @func_23931() -> Tensor[(10, 2, 16), float32] {
  @func_14979() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_6823() -> (Tensor[(10, 2, 16), uint8],) {
  %1419 = @func_1989() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1420 = %1419.0;
  (%1420,)
}

def @func_24483(%var_24466: Tensor[(18), float32], %var_24469: int16) -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(18), float32], Tensor[(20), int16], int16, Tensor[(10, 2, 16), uint8]) {
  %1421 = cast(%var_24466, dtype="float32") /* ty=Tensor[(18), float32] */;
  %1422 = reshape(%1421, newshape=[18]) /* ty=Tensor[(18), float32] */;
  %1423 = @func_17601(%1422) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), uint8], Tensor[(18), float32], Tensor[(10, 7, 48), float64]) */;
  %1424 = cast(%var_24469, dtype="int16") /* ty=int16 */;
  %1425 = reshape(%1424, newshape=[]) /* ty=int16 */;
  %1426 = @func_3620(%1425) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(20), int16], Tensor[(10, 1, 2), bool], Tensor[(10, 2, 16), float32]) */;
  %1427 = @func_21930() /* ty=(Tensor[(10, 2, 16), uint8],) */;
  %1428 = @func_8839() /* ty=Tensor[(10, 2, 16), float32] */;
  %1429 = %1423.2;
  %1430 = %1426.1;
  %1431 = %1427.0;
  (%1428, %1429, %var_24466, %1430, %var_24469, %1431)
}

def @func_2678() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) {
  %1432 = @func_2444() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %1433 = @func_1989() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1434 = %1432.3;
  %1435 = @func_900() /* ty=Tensor[(10, 2, 16), uint8] */;
  %1436 = %1433.1;
  (%1434, %1435, %1436)
}

def @func_3097(%var_3086: int16, %var_3087: Tensor[(10, 1, 2), int16]) -> (Tensor[(10, 1, 2), int16], Tensor[(10, 2, 16), float32]) {
  %1437 = cast(%var_3086, dtype="int16") /* ty=int16 */;
  %1438 = cast(%var_3087, dtype="int16") /* ty=Tensor[(10, 1, 2), int16] */;
  %1439 = @func_1630() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
  %1440 = add(%1437, %1438) /* ty=Tensor[(10, 1, 2), int16] */;
  %1441 = %1439.2;
  (%1440, %1441)
}

def @func_24982() -> (Tensor[(10, 2, 16), float32],) {
  %1442 = @func_7432() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1443 = %1442.2;
  (%1443,)
}

def @func_1070(%var_1047: float32) -> (Tensor[(4, 14, 12), float32], Tensor[(10, 2, 16), float32]) {
  %1444 = cast(%var_1047, dtype="float32") /* ty=float32 */;
  %1445 = cast(meta[relay.Constant][33] /* ty=Tensor[(4, 14, 12), float32] */, dtype="float32") /* ty=Tensor[(4, 14, 12), float32] */;
  %1446 = floor_divide(%1444, %1445) /* ty=Tensor[(4, 14, 12), float32] */;
  %1447 = @func_257() /* ty=Tensor[(10, 2, 16), float32] */;
  (%1446, %1447)
}

def @func_23718() -> (Tensor[(432), float32],) {
  %1448 = @func_14046() /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), float64]) */;
  %1449 = %1448.0;
  (%1449,)
}

def @func_16010() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
  %1450 = @func_13489() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1451 = @func_1630() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
  %1452 = %1450.0;
  %1453 = %1451.1;
  (%1452, %1453)
}

def @func_13824() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
  %1454 = @func_8655() /* ty=(Tensor[(6, 9, 8), float32], Tensor[(10, 2, 16), float32]) */;
  %1455 = @func_8344() /* ty=(Tensor[(10, 2, 16), float64],) */;
  %1456 = %1454.1;
  %1457 = %1455.0;
  (%1456, %1457)
}

def @func_25387() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8]) {
  %1458 = @func_15432() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1459 = @func_4087() /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float64]) */;
  %1460 = %1458.0;
  %1461 = %1459.1;
  (%1460, %1461)
}

def @func_26217() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool]) {
  %1462 = @func_23544() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), bool], Tensor[(432), float32]) */;
  %1463 = @func_14066() /* ty=Tensor[(10, 2, 16), float32] */;
  %1464 = %1462.3;
  (%1463, %1464)
}

def @func_10995() -> Tensor[(10, 2, 16), uint8] {
  %1465 = @func_7106() /* ty=(Tensor[(10, 2, 16), uint8],) */;
  %1465.0
}

def @func_257() -> Tensor[(10, 2, 16), float32] {
  %1466 = cast(meta[relay.Constant][34] /* ty=Tensor[(10, 2, 16), float32] */, dtype="float32") /* ty=Tensor[(10, 2, 16), float32] */;
  log10(%1466) /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_15678() -> (Tensor[(10, 2, 16), float32],) {
  %1467 = @func_12909() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1468 = %1467.0;
  (%1468,)
}

def @func_25112() -> Tensor[(2, 8, 9), float32] {
  %1469 = @func_24899() /* ty=(Tensor[(2, 8, 9), float32],) */;
  %1470 = %1469.0;
  %1471 = cast(%1470, dtype="float32") /* ty=Tensor[(2, 8, 9), float32] */;
  tan(%1471) /* ty=Tensor[(2, 8, 9), float32] */
}

def @func_8608() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 7, 48), float32], Tensor[(70), float32]) {
  %1472 = @func_362() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1473 = cast(meta[relay.Constant][35] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
  %1474 = reshape(%1473, newshape=[1, 70]) /* ty=Tensor[(1, 70), float32] */;
  %1475 = @func_7015(%1474) /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(1, 70), float32], Tensor[(10, 7, 48), float32]) */;
  %1476 = %1472.0;
  %1477 = @func_5158() /* ty=Tensor[(10, 2, 16), uint8] */;
  %1478 = @func_4372() /* ty=Tensor[(10, 2, 16), float32] */;
  %1479 = %1475.4;
  (%1476, %1477, %1478, %1479, meta[relay.Constant][35] /* ty=Tensor[(70), float32] */)
}

def @func_15566() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
  %1480 = @func_12742() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1481 = %1480.0;
  %1482 = @func_6085() /* ty=Tensor[(10, 2, 16), float64] */;
  (%1481, %1482)
}

def @func_8344() -> (Tensor[(10, 2, 16), float64],) {
  %1483 = @func_6158() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1484 = %1483.0;
  (%1484,)
}

def @func_1476() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1485 = @func_1041() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %1486 = @func_880() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %1487 = %1485.1;
  %1488 = @func_1377() /* ty=Tensor[(10, 2, 16), float32] */;
  %1489 = %1486.1;
  (%1487, %1488, %1489)
}

def @func_20790() -> (Tensor[(10, 2, 16), float32],) {
  %1490 = @func_4351() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %1491 = %1490.0;
  (%1491,)
}

def @func_8103() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(10, 2, 16), float32]) {
  %1492 = @func_1545() /* ty=(Tensor[(10, 2, 16), uint8],) */;
  %1493 = @func_6472() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1494 = @func_584() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1495 = cast(meta[relay.Constant][36] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %1496 = reshape(%1495, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %1497 = @func_3697(%1496) /* ty=(Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) */;
  %1498 = @func_6728() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(432), float32]) */;
  %1499 = %1492.0;
  %1500 = %1493.0;
  %1501 = %1494.0;
  %1502 = %1497.1;
  %1503 = %1498.0;
  (%1499, %1500, %1501, %1502, meta[relay.Constant][36] /* ty=Tensor[(48), float32] */, %1503)
}

def @func_25309() -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) {
  %1504 = @func_19264() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
  %1505 = %1504.0;
  %1506 = @func_20606() /* ty=Tensor[(10, 2, 16), float32] */;
  %1507 = @func_13079() /* ty=Tensor[(48), float32] */;
  (%1505, %1506, %1507)
}

def @func_27043() -> (Tensor[(8, ?, 2), bool],) {
  %1508 = @func_1688() /* ty=(Tensor[(4, 3, 4), float32], Tensor[(48), float32], Tensor[(8, ?, 2), bool], Tensor[(8, 1, 2), float32]) */;
  %1509 = %1508.2;
  (%1509,)
}

def @func_20186(%var_20160: Tensor[(70), float32]) -> (Tensor[(10, 2, 16), bool], Tensor[(8, ?, 2), bool], Tensor[(11, 10, 11), uint16], uint16, Tensor[(10, 7, 1), float32], Tensor[(70), float32], Tensor[(10, 2, 16), uint8]) {
  %1510 = cast(meta[relay.Constant][37] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %1511 = reshape(%1510, newshape=[]) /* ty=uint16 */;
  %1512 = @func_11581(%1511) /* ty=(Tensor[(11, 10, 11), uint16],) */;
  %1513 = cast(%var_20160, dtype="float32") /* ty=Tensor[(70), float32] */;
  %1514 = reshape(%1513, newshape=[10, 7, 1]) /* ty=Tensor[(10, 7, 1), float32] */;
  %1515 = @func_4531(%1514) /* ty=(Tensor[(10, 7, 1), float32], Tensor[(10, 2, 16), float32]) */;
  %1516 = @func_8806() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 1, 2), int16], int16, Tensor[(20), int16], Tensor[(6, 9, 8), float32], Tensor[(48), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float64], Tensor[(432), float32]) */;
  %1517 = @func_4609() /* ty=Tensor[(10, 2, 16), bool] */;
  %1518 = @func_10487() /* ty=Tensor[(8, ?, 2), bool] */;
  %1519 = %1512.0;
  %1520 = %1515.0;
  %1521 = %1516.7;
  (%1517, %1518, %1519, meta[relay.Constant][37] /* ty=uint16 */, %1520, %var_20160, %1521)
}

def @func_2977() -> (Tensor[(10, 2, 16), float32],) {
  %1522 = @func_1518() /* ty=Tensor[(10, 2, 16), float32] */;
  (%1522,)
}

def @func_3697(%var_3677: Tensor[(48), float32]) -> (Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) {
  %1523 = @func_3030() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32]) */;
  %1524 = cast(%var_3677, dtype="float32") /* ty=Tensor[(48), float32] */;
  %1525 = reshape(%1524, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %1526 = @func_2224(%1525) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1527 = %1523.1;
  %1528 = %1526.4;
  (%1527, %1528, %var_3677)
}

def @func_21235() -> Tensor[(10, 2, 16), float32] {
  %1529 = @func_11195() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
  %1529.1
}

def @func_22490() -> (Tensor[(2, 8, 9), float64],) {
  %1530 = @func_16059() /* ty=(Tensor[(2, 8, 9), float32], Tensor[(2, 8, 9), float32], Tensor[(432), float32]) */;
  %1531 = %1530.0;
  %1532 = cast(%1531, dtype="float64") /* ty=Tensor[(2, 8, 9), float64] */;
  %1533 = sin(%1532) /* ty=Tensor[(2, 8, 9), float64] */;
  (%1533,)
}

def @func_6014() -> (Tensor[(10, 2, 16), float32],) {
  %1534 = @func_3368() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
  %1535 = %1534.0;
  (%1535,)
}

def @func_7432() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1536 = @func_4674() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %1537 = @func_4925() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1538 = %1536.2;
  %1539 = @func_3845() /* ty=Tensor[(10, 2, 16), float32] */;
  %1540 = %1537.0;
  (%1538, %1539, %1540)
}

def @func_11740() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) {
  %1541 = @func_9821() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), uint8]) */;
  %1542 = %1541.1;
  %1543 = @func_1518() /* ty=Tensor[(10, 2, 16), float32] */;
  (%1542, %1543)
}

def @func_4266() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1544 = @func_711() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) */;
  %1545 = %1544.1;
  %1546 = @func_2008() /* ty=Tensor[(10, 2, 16), float32] */;
  (%1545, %1546)
}

def @func_24531(%var_24518: Tensor[(9, 7, 14), float64]) -> (Tensor[(9, 7, 14), float64], Tensor[(9, 7, 14), float32]) {
  %1547 = cast(%var_24518, dtype="float64") /* ty=Tensor[(9, 7, 14), float64] */;
  %1548 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(9, 7, 14), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1549 = cast(meta[relay.Constant][38] /* ty=Tensor[(9, 7, 14), float64] */, dtype="float64") /* ty=Tensor[(9, 7, 14), float64] */;
  %1550 = dyn.reshape(%1547, %1548, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1551 = cast(meta[relay.Constant][38] /* ty=Tensor[(9, 7, 14), float64] */, dtype="float32") /* ty=Tensor[(9, 7, 14), float32] */;
  %1552 = floor_mod(%1549, %1550) /* ty=Tensor[(9, 7, 14), float64] */;
  %1553 = tan(%1551) /* ty=Tensor[(9, 7, 14), float32] */;
  (%1552, %1553)
}

def @func_2078() -> Tensor[(432), float32] {
  %1554 = @func_1496() /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), float32]) */;
  %1554.0
}

def @func_672(%var_660: Tensor[(48), float32]) -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(4, 3, 4), float32], Tensor[(48), float32], Tensor[(4, 3, 4), float32]) {
  %1555 = @func_584() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1556 = cast(%var_660, dtype="float32") /* ty=Tensor[(48), float32] */;
  %1557 = reshape(%1556, newshape=[4, 3, 4]) /* ty=Tensor[(4, 3, 4), float32] */;
  %1558 = cast(%var_660, dtype="float32") /* ty=Tensor[(48), float32] */;
  %1559 = reshape(%1558, newshape=[4, 3, 4]) /* ty=Tensor[(4, 3, 4), float32] */;
  %1560 = @func_445() /* ty=Tensor[(10, 2, 16), float32] */;
  %1561 = @func_445() /* ty=Tensor[(10, 2, 16), float32] */;
  %1562 = %1555.0;
  %1563 = @func_294(%1557) /* ty=Tensor[(4, 3, 4), float32] */;
  %1564 = @func_294(%1559) /* ty=Tensor[(4, 3, 4), float32] */;
  (%1560, %1561, %1562, %1563, %var_660, %1564)
}

def @func_14637() -> Tensor[(10, 2, 16), float32] {
  %1565 = @func_4266() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1565.0
}

def @func_8655() -> (Tensor[(6, 9, 8), float32], Tensor[(10, 2, 16), float32]) {
  %1566 = @func_1437() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(6, 9, 8), float32], Tensor[(432), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1567 = @func_4266() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1568 = %1566.1;
  %1569 = %1567.0;
  (%1568, %1569)
}

def @func_13439() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1570 = @func_12113() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %1571 = @func_9966() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
  %1572 = @func_7388() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 16, 15), int16]) */;
  %1573 = @func_2256() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
  %1574 = @func_1545() /* ty=(Tensor[(10, 2, 16), uint8],) */;
  %1575 = @func_3881() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1576 = @func_9397() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1577 = @func_10505() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %1578 = %1570.1;
  %1579 = %1571.0;
  %1580 = %1572.1;
  %1581 = %1573.0;
  %1582 = %1574.0;
  %1583 = %1575.1;
  %1584 = %1576.0;
  %1585 = %1577.2;
  (%1578, %1579, %1580, %1581, %1582, %1583, %1584, %1585)
}

def @func_880() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) {
  %1586 = @func_362() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1587 = %1586.1;
  %1588 = cast(%1587, dtype="float64") /* ty=Tensor[(10, 2, 16), float64] */;
  %1589 = log(%1588) /* ty=Tensor[(10, 2, 16), float64] */;
  %1590 = cast(meta[relay.Constant][39] /* ty=Tensor[(10, 2, 16), float64] */, dtype="uint8") /* ty=Tensor[(10, 2, 16), uint8] */;
  %1591 = shape_of(%1589, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1592 = cast(%1589, dtype="uint8") /* ty=Tensor[(10, 2, 16), uint8] */;
  %1593 = dyn.reshape(%1590, %1591, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1594 = @func_362() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1595 = maximum(%1592, %1593) /* ty=Tensor[(10, 2, 16), uint8] */;
  %1596 = %1594.1;
  (%1595, %1596)
}

def @func_2613(%var_2607: Tensor[(48), float32]) -> (Tensor[(10, 2, 16), uint8], Tensor[(6, 9, 8), float32], Tensor[(6, 9, 8), bool], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) {
  %1597 = @func_880() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %1598 = @func_1437() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(6, 9, 8), float32], Tensor[(432), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1599 = %1598.1;
  %1600 = cast(%1599, dtype="float32") /* ty=Tensor[(6, 9, 8), float32] */;
  %1601 = cast(meta[relay.Constant][40] /* ty=Tensor[(6, 9, 8), float32] */, dtype="bool") /* ty=Tensor[(6, 9, 8), bool] */;
  %1602 = shape_of(%1599, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1603 = cast(%1599, dtype="bool") /* ty=Tensor[(6, 9, 8), bool] */;
  %1604 = dyn.reshape(%1601, %1602, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1605 = @func_1545() /* ty=(Tensor[(10, 2, 16), uint8],) */;
  %1606 = cast(%var_2607, dtype="float32") /* ty=Tensor[(48), float32] */;
  %1607 = reshape(%1606, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %1608 = @func_672(%1607) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(4, 3, 4), float32], Tensor[(48), float32], Tensor[(4, 3, 4), float32]) */;
  %1609 = %1597.0;
  %1610 = atanh(%1600) /* ty=Tensor[(6, 9, 8), float32] */;
  %1611 = not_equal(%1603, %1604) /* ty=Tensor[(6, 9, 8), bool] */;
  %1612 = %1605.0;
  %1613 = %1608.0;
  (%1609, %1610, %1611, %1612, %1613, %var_2607)
}

def @func_6795() -> Tensor[(10, 2, 16), float64] {
  %1614 = @func_2444() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %1614.5
}

def @func_7551() -> Tensor[(10, 2, 16), float64] {
  @func_6085() /* ty=Tensor[(10, 2, 16), float64] */
}

def @func_19113() -> Tensor[(10, 2, 16), uint8] {
  %1615 = @func_16620() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), int64]) */;
  %1615.2
}

def @func_6288() -> (Tensor[(10, 2, 16), float64], Tensor[(10, 7, 1), float32], Tensor[(70), float32], Tensor[(10, 2, 16), float64]) {
  %1616 = @func_2444() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %1617 = cast(meta[relay.Constant][41] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
  %1618 = reshape(%1617, newshape=[10, 7, 1]) /* ty=Tensor[(10, 7, 1), float32] */;
  %1619 = @func_4531(%1618) /* ty=(Tensor[(10, 7, 1), float32], Tensor[(10, 2, 16), float32]) */;
  %1620 = %1616.5;
  %1621 = %1619.0;
  %1622 = @func_6085() /* ty=Tensor[(10, 2, 16), float64] */;
  (%1620, %1621, meta[relay.Constant][41] /* ty=Tensor[(70), float32] */, %1622)
}

def @func_13606(%var_13588: float32, %var_13589: Tensor[(9, 14, 16), float32]) -> Tensor[(9, 14, 16), float32] {
  %1623 = cast(%var_13588, dtype="float32") /* ty=float32 */;
  %1624 = cast(%var_13589, dtype="float32") /* ty=Tensor[(9, 14, 16), float32] */;
  maximum(%1623, %1624) /* ty=Tensor[(9, 14, 16), float32] */
}

def @func_1377() -> Tensor[(10, 2, 16), float32] {
  @func_1156() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_23637() -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) {
  %1625 = @func_11851() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8]) */;
  %1626 = %1625.1;
  %1627 = @func_15729() /* ty=Tensor[(10, 2, 16), float32] */;
  (%1626, %1627)
}

def @func_24210() -> Tensor[(10, 2, 16), float32] {
  %1628 = @func_19656() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1628.0
}

def @func_14492(%var_14471: Tensor[(10, 7, 48), float64]) -> (Tensor[(10, 7, 48), uint32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float64]) {
  %1629 = @func_13656() /* ty=(Tensor[(10, 7, 48), float64], Tensor[(10, 2, 16), float32]) */;
  %1630 = %1629.0;
  %1631 = cast(%var_14471, dtype="uint32") /* ty=Tensor[(10, 7, 48), uint32] */;
  %1632 = shape_of(%1630, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1633 = cast(%1630, dtype="uint32") /* ty=Tensor[(10, 7, 48), uint32] */;
  %1634 = dyn.reshape(%1631, %1632, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1635 = @func_12734() /* ty=(Tensor[(10, 2, 16), float64],) */;
  %1636 = logical_xor(%1633, %1634) /* ty=Tensor[(10, 7, 48), uint32] */;
  %1637 = %1635.0;
  %1638 = @func_6795() /* ty=Tensor[(10, 2, 16), float64] */;
  (%1636, %1637, %1638)
}

def @func_2741() -> (Tensor[(10, 2, 16), float64],) {
  %1639 = @func_1630() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
  %1640 = %1639.1;
  (%1640,)
}

def @func_27477() -> (Tensor[(10, 2, 16), uint8],) {
  %1641 = @func_21930() /* ty=(Tensor[(10, 2, 16), uint8],) */;
  %1642 = %1641.0;
  (%1642,)
}

def @func_12960() -> (Tensor[(432), float32], Tensor[(10, 2, 16), float32]) {
  %1643 = @func_10641() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1644 = @func_5829() /* ty=Tensor[(432), float32] */;
  %1645 = %1643.0;
  (%1644, %1645)
}

def @func_3030() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32]) {
  %1646 = @func_2515() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %1647 = @func_1766() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool]) */;
  %1648 = @func_584() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1649 = %1646.0;
  %1650 = %1647.2;
  %1651 = %1648.0;
  (%1649, %1650, %1651)
}

def @func_807() -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1652 = @func_431() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %1653 = @func_584() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1654 = @func_305() /* ty=Tensor[(10, 2, 16), float32] */;
  %1655 = cast(%1654, dtype="float32") /* ty=Tensor[(10, 2, 16), float32] */;
  %1656 = %1652.1;
  %1657 = %1653.0;
  %1658 = cos(%1655) /* ty=Tensor[(10, 2, 16), float32] */;
  (%1656, %1657, %1658)
}

def @func_4799() -> (Tensor[(10, 2, 16), float64], Tensor[(2400), int16]) {
  %1659 = @func_807() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1660 = %1659.0;
  %1661 = @func_3788() /* ty=Tensor[(2400), int16] */;
  (%1660, %1661)
}

def @func_22318() -> (Tensor[(10, 2, 16), float32],) {
  %1662 = @func_13932() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1663 = %1662.0;
  (%1663,)
}

def @func_20827() -> (Tensor[(10, 2, 16), float32],) {
  %1664 = @func_15678() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1665 = %1664.0;
  (%1665,)
}

def @func_25587() -> (Tensor[(10, 2, 16), float32],) {
  %1666 = @func_23912() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1667 = %1666.0;
  (%1667,)
}

def @func_13904() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1668 = @func_257() /* ty=Tensor[(10, 2, 16), float32] */;
  %1669 = @func_305() /* ty=Tensor[(10, 2, 16), float32] */;
  (%1668, %1669)
}

def @func_27392() -> (Tensor[(10, 2, 16), uint8], Tensor[(48, 1), float32]) {
  %1670 = @func_4003() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
  %1671 = @func_4049() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48, 1), float32]) */;
  %1672 = %1670.3;
  %1673 = %1671.2;
  (%1672, %1673)
}

def @func_12722() -> (Tensor[(10, 2, 16), float32], Tensor[(432), float32]) {
  %1674 = @func_257() /* ty=Tensor[(10, 2, 16), float32] */;
  %1675 = @func_5322() /* ty=Tensor[(432), float32] */;
  (%1674, %1675)
}

def @func_28449(%var_28380: Tensor[(2, 3, 3), float32]) -> (Tensor[(10, 2, 16), float32], Tensor[(2, 3, 3), float32], Tensor[(10, 2, 16), float32], Tensor[(8, 6, 2), int64], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) {
  %1676 = @func_25256() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1677 = @func_19248() /* ty=Tensor[(2, 3, 3), float32] */;
  %1678 = cast(%var_28380, dtype="float32") /* ty=Tensor[(2, 3, 3), float32] */;
  %1679 = shape_of(%1677, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1680 = cast(%1677, dtype="float32") /* ty=Tensor[(2, 3, 3), float32] */;
  %1681 = dyn.reshape(%1678, %1679, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1682 = @func_14954() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1683 = @func_10278() /* ty=Tensor[(8, ?, 2), bool] */;
  %1684 = cast(%1683, dtype="int64") /* ty=Tensor[(8, ?, 2), int64] */;
  %1685 = cast(meta[relay.Constant][42] /* ty=Tensor[(8, 6, 2), bool] */, dtype="int64") /* ty=Tensor[(8, 6, 2), int64] */;
  %1686 = @func_19427() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %1687 = @func_7146() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1688 = %1676.0;
  %1689 = minimum(%1680, %1681) /* ty=Tensor[(2, 3, 3), float32] */;
  %1690 = %1682.0;
  %1691 = minimum(%1684, %1685) /* ty=Tensor[(8, 6, 2), int64] */;
  %1692 = %1686.4;
  %1693 = %1687.0;
  (%1688, %1689, %1690, %1691, %1692, %1693)
}

def @func_6325() -> Tensor[(10, 2, 16), float32] {
  %1694 = @func_1630() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
  %1694.2
}

def @func_21141() -> (Tensor[(10, 2, 16), float64], Tensor[(432), float32], Tensor[(10, 2, 16), float64], float32, float32, Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1695 = @func_9821() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), uint8]) */;
  %1696 = @func_13439() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1697 = @func_431() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %1698 = cast(-2.35959f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1699 = reshape(%1698, newshape=[]) /* ty=float32 */;
  %1700 = @func_20748(%1699) /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), float32], float32, Tensor[(10, 2, 16), float32]) */;
  %1701 = @func_4109() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1702 = @func_13585() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1703 = %1695.0;
  %1704 = %1696.2;
  %1705 = %1697.1;
  %1706 = %1700.2;
  %1707 = %1701.0;
  %1708 = %1702.1;
  (%1703, %1704, %1705, %1706, -2.35959f /* ty=float32 */, %1707, %1708)
}

def @func_5146() -> (Tensor[(10, 2, 16), uint8],) {
  %1709 = @func_1545() /* ty=(Tensor[(10, 2, 16), uint8],) */;
  %1710 = %1709.0;
  (%1710,)
}

def @func_15344() -> (Tensor[(10, 2, 16), float32], float32) {
  %1711 = @func_2783() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1712 = @func_13327() /* ty=(Tensor[(48), float32], Tensor[(4, 14, 12), float32], float32) */;
  %1713 = %1711.0;
  %1714 = %1712.2;
  (%1713, %1714)
}

def @func_21758() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float64]) {
  %1715 = @func_14046() /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), float64]) */;
  %1716 = @func_18480() /* ty=Tensor[(10, 2, 16), float32] */;
  %1717 = @func_15729() /* ty=Tensor[(10, 2, 16), float32] */;
  %1718 = @func_9423() /* ty=Tensor[(10, 2, 16), float64] */;
  %1719 = %1715.1;
  (%1716, %1717, %1718, %1719)
}

def @func_21669() -> Tensor[(10, 2, 16), uint8] {
  %1720 = @func_15709() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1720.0
}

def @func_21010() -> (Tensor[(10, 2, 16), float32],) {
  %1721 = @func_12399() /* ty=Tensor[(10, 2, 16), float32] */;
  (%1721,)
}

def @func_23303() -> Tensor[(10, 2, 16), float32] {
  %1722 = @func_6772() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %1722.1
}

def @func_21958() -> Tensor[(10, 2, 16), float32] {
  %1723 = @func_1989() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1723.2
}

def @func_16813(%var_16796: Tensor[(5, 198), float32], %var_16799: Tensor[(5, 198), float32]) -> (Tensor[(2, 8, 9), float32], Tensor[(48), float32], Tensor[(48), float32], Tensor[(5, 198), float64]) {
  %1724 = cast(%var_16796, dtype="float32") /* ty=Tensor[(5, 198), float32] */;
  %1725 = cast(meta[relay.Constant][43] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %1726 = cast(%var_16796, dtype="float64") /* ty=Tensor[(5, 198), float64] */;
  %1727 = reshape(%1724, newshape=[15, 6, 11]) /* ty=Tensor[(15, 6, 11), float32] */;
  %1728 = reshape(%1725, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %1729 = reshape(%1726, newshape=[15, 6, 11]) /* ty=Tensor[(15, 6, 11), float64] */;
  %1730 = @func_7851(%1727, %1728, %1729) /* ty=(Tensor[(48), float32], Tensor[(48), float32], Tensor[(15, 6, 11), bool]) */;
  %1731 = cast(%var_16799, dtype="int64") /* ty=Tensor[(5, 198), int64] */;
  %1732 = shape_of(%var_16796, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1733 = cast(%var_16796, dtype="int64") /* ty=Tensor[(5, 198), int64] */;
  %1734 = dyn.reshape(%1731, %1732, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %1735 = multiply(%1733, %1734) /* ty=Tensor[(5, 198), int64] */;
  %1736 = cast(%1735, dtype="float64") /* ty=Tensor[(5, 198), float64] */;
  %1737 = log(%1736) /* ty=Tensor[(5, 198), float64] */;
  %1738 = cast(%1737, dtype="float64") /* ty=Tensor[(5, 198), float64] */;
  %1739 = @func_11348() /* ty=Tensor[(2, 8, 9), float32] */;
  %1740 = %1730.1;
  %1741 = cosh(%1738) /* ty=Tensor[(5, 198), float64] */;
  (%1739, %1740, meta[relay.Constant][43] /* ty=Tensor[(48), float32] */, %1741)
}

def @func_24010(%var_23995: Tensor[(2, 8, 9), float32]) -> (Tensor[(2, 8, 9), int32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1742 = @func_7914() /* ty=(Tensor[(2, 8, 9), float32],) */;
  %1743 = %1742.0;
  %1744 = cast(%var_23995, dtype="int32") /* ty=Tensor[(2, 8, 9), int32] */;
  %1745 = shape_of(%1743, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1746 = cast(%1743, dtype="int32") /* ty=Tensor[(2, 8, 9), int32] */;
  %1747 = dyn.reshape(%1744, %1745, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1748 = @func_22550() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1749 = @func_15178() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32]) */;
  %1750 = bitwise_xor(%1746, %1747) /* ty=Tensor[(2, 8, 9), int32] */;
  %1751 = %1748.0;
  %1752 = %1749.0;
  (%1750, %1751, %1752)
}

def @func_16059() -> (Tensor[(2, 8, 9), float32], Tensor[(2, 8, 9), float32], Tensor[(432), float32]) {
  %1753 = @func_7273() /* ty=(Tensor[(2, 8, 9), float32],) */;
  %1754 = @func_6728() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(432), float32]) */;
  %1755 = %1753.0;
  %1756 = @func_11348() /* ty=Tensor[(2, 8, 9), float32] */;
  %1757 = %1754.2;
  (%1755, %1756, %1757)
}

def @func_4925() -> (Tensor[(10, 2, 16), float32],) {
  %1758 = @func_431() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %1759 = %1758.0;
  (%1759,)
}

def @func_17558() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) {
  %1760 = @func_12909() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1761 = %1760.0;
  %1762 = @func_13704() /* ty=Tensor[(10, 2, 16), uint8] */;
  (%1761, %1762)
}

def @func_9573() -> (Tensor[(48), float32],) {
  %1763 = @func_1688() /* ty=(Tensor[(4, 3, 4), float32], Tensor[(48), float32], Tensor[(8, ?, 2), bool], Tensor[(8, 1, 2), float32]) */;
  %1764 = %1763.1;
  (%1764,)
}

def @main(%var_28554: Tensor[(6, 2, 3), float64], %var_28555: Tensor[(6, 2, 3), float64]) -> (Tensor[(6, 2, 3), float64], Tensor[(6, 2, 3), float64]) {
  %1765 = cast(%var_28555, dtype="float64") /* ty=Tensor[(6, 2, 3), float64] */;
  %1766 = shape_of(%var_28554, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1767 = cast(%var_28554, dtype="float64") /* ty=Tensor[(6, 2, 3), float64] */;
  %1768 = dyn.reshape(%1765, %1766, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1769 = cast(%var_28555, dtype="float64") /* ty=Tensor[(6, 2, 3), float64] */;
  %1770 = floor_mod(%1767, %1768) /* ty=Tensor[(6, 2, 3), float64] */;
  %1771 = acos(%1769) /* ty=Tensor[(6, 2, 3), float64] */;
  (%1770, %1771)
}

def @func_28543() -> (Tensor[(432), float32],) {
  %1772 = @func_20650() /* ty=Tensor[(432), float32] */;
  (%1772,)
}

def @func_22976() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float64]) {
  %1773 = @func_1657() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1774 = @func_11721() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), uint8]) */;
  %1775 = %1773.0;
  %1776 = %1774.2;
  %1777 = @func_9423() /* ty=Tensor[(10, 2, 16), float64] */;
  (%1775, %1776, %1777)
}

def @func_7497(%var_7455: Tensor[(48), float32]) -> (Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(48), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) {
  %1778 = @func_6014() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1779 = cast(%var_7455, dtype="float32") /* ty=Tensor[(48), float32] */;
  %1780 = reshape(%1779, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %1781 = @func_3697(%1780) /* ty=(Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) */;
  %1782 = @func_2515() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %1783 = @func_3165() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1784 = %1778.0;
  %1785 = %1781.2;
  %1786 = %1782.1;
  %1787 = %1783.0;
  (%1784, %1785, %var_7455, %1786, %1787)
}

def @func_1437() -> (Tensor[(10, 2, 16), float32], Tensor[(6, 9, 8), float32], Tensor[(432), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1788 = cast(meta[relay.Constant][44] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1789 = reshape(%1788, newshape=[6, 9, 8]) /* ty=Tensor[(6, 9, 8), float32] */;
  %1790 = @func_584() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1791 = @func_1332() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
  %1792 = @func_1377() /* ty=Tensor[(10, 2, 16), float32] */;
  %1793 = @func_735(%1789) /* ty=Tensor[(6, 9, 8), float32] */;
  %1794 = %1790.0;
  %1795 = %1791.1;
  (%1792, %1793, meta[relay.Constant][44] /* ty=Tensor[(432), float32] */, %1794, %1795)
}

def @func_22931() -> (Tensor[(2, 8, 9), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
  %1796 = @func_16507() /* ty=(Tensor[(2, 8, 9), float32],) */;
  %1797 = @func_22550() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1798 = @func_19264() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
  %1799 = %1796.0;
  %1800 = %1797.0;
  %1801 = %1798.0;
  (%1799, %1800, %1801)
}

def @func_26552() -> (Tensor[(10, 2, 16), uint8],) {
  %1802 = @func_1332() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
  %1803 = %1802.2;
  (%1803,)
}

def @func_13294() -> (Tensor[(10, 2, 16), float32],) {
  %1804 = @func_2977() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1805 = %1804.0;
  (%1805,)
}

def @func_17189() -> Tensor[(10, 2, 16), float32] {
  %1806 = @func_807() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1806.1
}

def @func_7776() -> Tensor[(2, 8, 9), float32] {
  %1807 = @func_7273() /* ty=(Tensor[(2, 8, 9), float32],) */;
  %1807.0
}

def @func_19052(%var_19015: Tensor[(240), bool]) -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(48), float32], Tensor[(240), bool], Tensor[(48, 1), float32], Tensor[(10, 2, 16), uint8], Tensor[(2400), int16], Tensor[(10, 7, 48), float64]) {
  %1808 = @func_18113() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1809 = cast(%var_19015, dtype="bool") /* ty=Tensor[(240), bool] */;
  %1810 = cast(meta[relay.Constant][45] /* ty=Tensor[(48, 1), float32] */, dtype="float32") /* ty=Tensor[(48, 1), float32] */;
  %1811 = reshape(%1809, newshape=[240]) /* ty=Tensor[(240), bool] */;
  %1812 = reshape(%1810, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %1813 = @func_11548(%1811, %1812) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(240), bool], Tensor[(48), float32], Tensor[(10, 2, 16), float32]) */;
  %1814 = @func_9821() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), uint8]) */;
  %1815 = @func_12290() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float64], Tensor[(2400), int16], Tensor[(48), float32]) */;
  %1816 = @func_13656() /* ty=(Tensor[(10, 7, 48), float64], Tensor[(10, 2, 16), float32]) */;
  %1817 = %1816.0;
  %1818 = cast(%1817, dtype="float64") /* ty=Tensor[(10, 7, 48), float64] */;
  %1819 = %1808.0;
  %1820 = @func_6795() /* ty=Tensor[(10, 2, 16), float64] */;
  %1821 = %1813.3;
  %1822 = %1814.1;
  %1823 = %1815.3;
  %1824 = tan(%1818) /* ty=Tensor[(10, 7, 48), float64] */;
  (%1819, %1820, %1821, %var_19015, meta[relay.Constant][45] /* ty=Tensor[(48, 1), float32] */, %1822, %1823, %1824)
}

def @func_431() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
  %1825 = @func_407() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1826 = @func_362() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1827 = %1826.0;
  %1828 = cast(%1827, dtype="float64") /* ty=Tensor[(10, 2, 16), float64] */;
  %1829 = %1825.1;
  %1830 = asinh(%1828) /* ty=Tensor[(10, 2, 16), float64] */;
  (%1829, %1830)
}

def @func_2444() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
  %1831 = @func_1156() /* ty=Tensor[(10, 2, 16), float32] */;
  %1832 = cast(%1831, dtype="uint8") /* ty=Tensor[(10, 2, 16), uint8] */;
  %1833 = reshape(%1832, newshape=[10, 2, 16]) /* ty=Tensor[(10, 2, 16), uint8] */;
  %1834 = @func_1288(%1833) /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1835 = @func_2134() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1836 = @func_327() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1837 = @func_431() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %1838 = %1834.1;
  %1839 = %1835.0;
  %1840 = %1836.0;
  %1841 = @func_1518() /* ty=Tensor[(10, 2, 16), float32] */;
  %1842 = %1837.1;
  (%1831, %1838, %1839, %1840, %1841, %1842)
}

def @func_6671() -> Tensor[(10, 2, 16), float32] {
  %1843 = @func_327() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1843.0
}

def @func_14885() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1844 = @func_4003() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
  %1845 = %1844.0;
  %1846 = @func_9201() /* ty=Tensor[(10, 2, 16), float32] */;
  (%1845, %1846)
}

def @func_28234(%var_28229: Tensor[(18), float32]) -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), uint8], Tensor[(18), float32], int16) {
  %1847 = @func_12722() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32]) */;
  %1848 = @func_16077() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1849 = @func_1657() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1850 = cast(%var_28229, dtype="float32") /* ty=Tensor[(18), float32] */;
  %1851 = cast(meta[relay.Constant][46] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %1852 = reshape(%1850, newshape=[18]) /* ty=Tensor[(18), float32] */;
  %1853 = reshape(%1851, newshape=[]) /* ty=int16 */;
  %1854 = @func_24483(%1852, %1853) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(18), float32], Tensor[(20), int16], int16, Tensor[(10, 2, 16), uint8]) */;
  %1855 = %1847.0;
  %1856 = %1848.0;
  %1857 = %1849.0;
  %1858 = @func_5829() /* ty=Tensor[(432), float32] */;
  %1859 = %1854.5;
  (%1855, %1856, %1857, %1858, %1859, %var_28229, meta[relay.Constant][46] /* ty=int16 */)
}

def @func_9008() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
  %1860 = @func_6801() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1861 = @func_8344() /* ty=(Tensor[(10, 2, 16), float64],) */;
  %1862 = %1860.0;
  %1863 = %1861.0;
  (%1862, %1863)
}

def @func_12373() -> (Tensor[(432), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) {
  %1864 = @func_8344() /* ty=(Tensor[(10, 2, 16), float64],) */;
  %1865 = @func_9397() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1866 = @func_10716() /* ty=Tensor[(432), float32] */;
  %1867 = %1864.0;
  %1868 = %1865.0;
  (%1866, %1867, %1868)
}

def @func_22847() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(70), float32], Tensor[(10, 2, 16), float32]) {
  %1869 = @func_17577() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1870 = @func_6288() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 7, 1), float32], Tensor[(70), float32], Tensor[(10, 2, 16), float64]) */;
  %1871 = @func_711() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) */;
  %1872 = @func_2008() /* ty=Tensor[(10, 2, 16), float32] */;
  %1873 = %1869.0;
  %1874 = %1870.2;
  %1875 = %1871.0;
  (%1872, %1873, %1874, %1875)
}

def @func_16829(%var_16826: Tensor[(3, 12, 15), float32]) -> (Tensor[(3, 12, 15), float32],) {
  %1876 = cast(%var_16826, dtype="float32") /* ty=Tensor[(3, 12, 15), float32] */;
  %1877 = exp(%1876) /* ty=Tensor[(3, 12, 15), float32] */;
  (%1877,)
}

def @func_1041() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) {
  %1878 = @func_880() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %1879 = @func_880() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %1880 = %1878.0;
  %1881 = %1879.1;
  (%1880, %1881)
}

def @func_6349() -> (Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1882 = @func_3030() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32]) */;
  %1883 = @func_3881() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1884 = @func_2960() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), float32]) */;
  %1885 = @func_2960() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), float32]) */;
  %1886 = %1882.1;
  %1887 = %1883.2;
  %1888 = %1884.0;
  %1889 = %1885.0;
  (%1886, %1887, %1888, %1889)
}

def @func_21329() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
  %1890 = @func_16475() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1891 = @func_3368() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
  %1892 = %1890.0;
  %1893 = %1891.3;
  (%1892, %1893)
}

def @func_20425() -> (Tensor[(14, 5, 6), bool], Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) {
  %1894 = cast(meta[relay.Constant][48] /* ty=Tensor[(14, 5, 6), bool] */, dtype="bool") /* ty=Tensor[(14, 5, 6), bool] */;
  %1895 = shape_of(meta[relay.Constant][47] /* ty=Tensor[(14, 5, 6), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1896 = cast(meta[relay.Constant][47] /* ty=Tensor[(14, 5, 6), bool] */, dtype="bool") /* ty=Tensor[(14, 5, 6), bool] */;
  %1897 = dyn.reshape(%1894, %1895, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1898 = @func_9686() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1899 = @func_7914() /* ty=(Tensor[(2, 8, 9), float32],) */;
  %1900 = logical_and(%1896, %1897) /* ty=Tensor[(14, 5, 6), bool] */;
  %1901 = %1898.0;
  %1902 = %1899.0;
  (%1900, %1901, %1902)
}

def @func_3439() -> (Tensor[(2, 8, 9), float32], Tensor[(10, 2, 16), float32], Tensor[(8, ?, 2), bool]) {
  %1903 = cast(meta[relay.Constant][49] /* ty=Tensor[(2, 8, 9), float32] */, dtype="float32") /* ty=Tensor[(2, 8, 9), float32] */;
  %1904 = @func_2783() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1905 = @func_1688() /* ty=(Tensor[(4, 3, 4), float32], Tensor[(48), float32], Tensor[(8, ?, 2), bool], Tensor[(8, 1, 2), float32]) */;
  %1906 = exp(%1903) /* ty=Tensor[(2, 8, 9), float32] */;
  %1907 = %1904.0;
  %1908 = %1905.2;
  (%1906, %1907, %1908)
}

def @func_22263() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1909 = @func_2711() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1910 = @func_6472() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1911 = %1909.0;
  %1912 = %1910.0;
  (%1911, %1912)
}

def @func_18480() -> Tensor[(10, 2, 16), float32] {
  %1913 = @func_15868() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) */;
  %1913.3
}

def @func_8671() -> (Tensor[(10, 2, 16), float32],) {
  %1914 = @func_880() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %1915 = %1914.1;
  (%1915,)
}

def @func_16186() -> (Tensor[(10, 2, 16), float32],) {
  %1916 = @func_11195() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
  %1917 = %1916.1;
  (%1917,)
}

def @func_27179() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1918 = @func_2711() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1919 = @func_15729() /* ty=Tensor[(10, 2, 16), float32] */;
  %1920 = %1918.0;
  (%1919, %1920)
}

def @func_23544() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), bool], Tensor[(432), float32]) {
  %1921 = @func_13020() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1922 = @func_19373() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1923 = @func_9966() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
  %1924 = @func_8538() /* ty=(Tensor[(2400), int16], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float64], Tensor[(432), float32], Tensor[(10, 2, 16), float32]) */;
  %1925 = %1921.1;
  %1926 = %1922.0;
  %1927 = %1923.1;
  %1928 = %1924.1;
  %1929 = @func_20437() /* ty=Tensor[(432), float32] */;
  (%1925, %1926, %1927, %1928, %1929)
}

def @func_2256() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) {
  %1930 = @func_1958() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1931 = %1930.1;
  %1932 = @func_900() /* ty=Tensor[(10, 2, 16), uint8] */;
  (%1931, %1932)
}

def @func_11348() -> Tensor[(2, 8, 9), float32] {
  %1933 = @func_7273() /* ty=(Tensor[(2, 8, 9), float32],) */;
  %1933.0
}

def @func_14837(%var_14793: Tensor[(1, 2, 9), float32]) -> (Tensor[(10, 2, 16), uint8], Tensor[(?, 2, 9), float32], Tensor[(?, 2, 9), bool]) {
  %1934 = @func_10505() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %1935 = cast(%var_14793, dtype="float32") /* ty=Tensor[(1, 2, 9), float32] */;
  %1936 = sqrt(%1935) /* ty=Tensor[(1, 2, 9), float32] */;
  %1937 = cast(%var_14793, dtype="float64") /* ty=Tensor[(1, 2, 9), float64] */;
  %1938 = log10(%1937) /* ty=Tensor[(1, 2, 9), float64] */;
  %1939 = cast(%1938, dtype="float32") /* ty=Tensor[(1, 2, 9), float32] */;
  %1940 = shape_of(%1936, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1941 = cast(%1936, dtype="float32") /* ty=Tensor[(1, 2, 9), float32] */;
  %1942 = dyn.reshape(%1939, %1940, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1943 = cast(%var_14793, dtype="bool") /* ty=Tensor[(1, 2, 9), bool] */;
  %1944 = shape_of(%1936, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1945 = cast(%1936, dtype="bool") /* ty=Tensor[(1, 2, 9), bool] */;
  %1946 = dyn.reshape(%1943, %1944, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1947 = less(%1945, %1946) /* ty=Tensor[(?, 2, 9), bool] */;
  %1948 = cast(%1947, dtype="bool") /* ty=Tensor[(?, 2, 9), bool] */;
  %1949 = shape_of(%1936, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1950 = cast(%1936, dtype="bool") /* ty=Tensor[(1, 2, 9), bool] */;
  %1951 = dyn.reshape(%1948, %1949, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1952 = %1934.1;
  %1953 = floor_mod(%1941, %1942) /* ty=Tensor[(?, 2, 9), float32] */;
  %1954 = equal(%1950, %1951) /* ty=Tensor[(?, 2, 9), bool] */;
  (%1952, %1953, %1954)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_14519(%var_14517: Tensor[(13, 1, 13), int32]) -> Tensor[(13, 1, 13), bool] {
  @func_14516(%var_14517) /* ty=Tensor[(13, 1, 13), bool] */
}

def @func_15344() -> (Tensor[(10, 2, 16), float32], float32) {
  %0 = @func_2783() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1 = @func_13327() /* ty=(Tensor[(48), float32], Tensor[(4, 14, 12), float32], float32) */;
  %2 = %0.0;
  %3 = %1.2;
  (%2, %3)
}

def @func_19984(%var_19983: Tensor[(1, 18), float32]) -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(1, 18), float32]) {
  %10 = fn (%var_19973: Tensor[(1, 18), float32]) -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(1, 18), float32]) {
    %4 = @func_13196() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %5 = cast(%var_19973, dtype="float32") /* ty=Tensor[(1, 18), float32] */;
    %6 = reshape(%5, newshape=[18]) /* ty=Tensor[(18), float32] */;
    %7 = @func_17601(%6) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), uint8], Tensor[(18), float32], Tensor[(10, 7, 48), float64]) */;
    %8 = %4.0;
    %9 = %7.0;
    (%8, %9, %var_19973)
  };
  %10(%var_19983) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(1, 18), float32]) */
}

def @func_1379() -> Tensor[(10, 2, 16), float32] {
  @func_1377() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_6459() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(48), float32], Tensor[(4, 3, 4), float32]) {
  %11 = @func_1989() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %12 = @func_4568() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %13 = @func_1545() /* ty=(Tensor[(10, 2, 16), uint8],) */;
  %14 = @func_1688() /* ty=(Tensor[(4, 3, 4), float32], Tensor[(48), float32], Tensor[(8, ?, 2), bool], Tensor[(8, 1, 2), float32]) */;
  %15 = %14.1;
  %16 = cast(%15, dtype="float32") /* ty=Tensor[(48), float32] */;
  %17 = reshape(%16, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %18 = @func_621(%17) /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(4, 3, 4), float32], Tensor[(48), float32]) */;
  %19 = %11.0;
  %20 = %12.0;
  %21 = %13.0;
  %22 = %18.2;
  (%19, %20, %21, %15, %22)
}

def @func_19675() -> (Tensor[(10, 2, 16), float32],) {
  @func_19673() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_22978() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float64]) {
  @func_22976() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float64]) */
}

def @func_26463() -> (Tensor[(432), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), uint8]) {
  %29 = fn () -> (Tensor[(432), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), uint8]) {
    %23 = @func_21623() /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %24 = @func_12734() /* ty=(Tensor[(10, 2, 16), float64],) */;
    %25 = @func_2256() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
    %26 = %23.0;
    %27 = %24.0;
    %28 = %25.1;
    (%26, %27, %28)
  };
  %29() /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), uint8]) */
}

def @func_21900(%var_21899: int8) -> (Tensor[(10, 2, 16), float32], Tensor[(3, 5, 9), uint64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], int8) {
  %47 = fn (%var_21877: int8) -> (Tensor[(10, 2, 16), float32], Tensor[(3, 5, 9), uint64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], int8) {
    %30 = @func_15129() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %31 = cast(meta[relay.Constant][0] /* ty=Tensor[(135), float64] */, dtype="float64") /* ty=Tensor[(135), float64] */;
    %32 = reshape(%31, newshape=[3, 5, 9]) /* ty=Tensor[(3, 5, 9), float64] */;
    %33 = @func_6876(%32) /* ty=(Tensor[(3, 5, 9), float64], Tensor[(3, 5, 9), float32]) */;
    %34 = %33.0;
    %35 = cast(meta[relay.Constant][0] /* ty=Tensor[(135), float64] */, dtype="uint64") /* ty=Tensor[(135), uint64] */;
    %36 = shape_of(%34, dtype="int32") /* ty=Tensor[(3), int32] */;
    %37 = cast(%34, dtype="uint64") /* ty=Tensor[(3, 5, 9), uint64] */;
    %38 = dyn.reshape(%35, %36, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %39 = @func_8608() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 7, 48), float32], Tensor[(70), float32]) */;
    %40 = cast(%var_21877, dtype="int8") /* ty=int8 */;
    %41 = reshape(%40, newshape=[]) /* ty=int8 */;
    %42 = @func_4740(%41) /* ty=(Tensor[(2, 16, 6), int8], Tensor[(10, 2, 16), float32]) */;
    %43 = %30.1;
    %44 = subtract(%37, %38) /* ty=Tensor[(3, 5, 9), uint64] */;
    %45 = %39.2;
    %46 = %42.1;
    (%43, %44, %45, %46, %var_21877)
  };
  %47(%var_21899) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(3, 5, 9), uint64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], int8) */
}

def @func_25178(%var_25176: Tensor[(9, 14, 1), float32]) -> Tensor[(9, 14, ?), int32] {
  @func_25175(%var_25176) /* ty=Tensor[(9, 14, ?), int32] */
}

def @func_4241() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  @func_4239() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_13232() -> Tensor[(10, 2, 16), float32] {
  @func_13230() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_19265() -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) {
  %51 = fn () -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) {
    %48 = @func_2341() /* ty=(Tensor[(10, 2, 16), float64],) */;
    %49 = %48.0;
    %50 = @func_4372() /* ty=Tensor[(10, 2, 16), float32] */;
    (%49, %50)
  };
  %51() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */
}

def @func_14161() -> Tensor[(10, 2, 16), float32] {
  %52 = @func_2977() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %52.0
}

def @func_22551() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %56 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
    %53 = @func_11851() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8]) */;
    %54 = @func_6325() /* ty=Tensor[(10, 2, 16), float32] */;
    %55 = %53.0;
    (%54, %55)
  };
  %56() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_26320() -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %63 = fn () -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
    %57 = @func_18271() /* ty=(Tensor[(7, 2, 14), float64], Tensor[(7, 2, 14), float32], Tensor[(10, 2, 16), float64]) */;
    %58 = @func_9008() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
    %59 = @func_12034() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %60 = %57.2;
    %61 = %58.0;
    %62 = %59.0;
    (%60, %61, %62)
  };
  %63() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_4927() -> (Tensor[(10, 2, 16), float32],) {
  @func_4925() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_5188(%var_5169: Tensor[(16, 8, 5), uint16], %var_5170: Tensor[(16, 8, 5), uint16], %var_5181: Tensor[(16, 8, 5), uint16]) -> (Tensor[(16, 8, 5), bool], Tensor[(16, 8, 5), int8]) {
  %64 = cast(%var_5170, dtype="bool") /* ty=Tensor[(16, 8, 5), bool] */;
  %65 = shape_of(%var_5169, dtype="int32") /* ty=Tensor[(3), int32] */;
  %66 = cast(%var_5169, dtype="bool") /* ty=Tensor[(16, 8, 5), bool] */;
  %67 = dyn.reshape(%64, %65, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %68 = cast(%var_5181, dtype="int8") /* ty=Tensor[(16, 8, 5), int8] */;
  %69 = shape_of(%var_5169, dtype="int32") /* ty=Tensor[(3), int32] */;
  %70 = cast(%var_5169, dtype="int8") /* ty=Tensor[(16, 8, 5), int8] */;
  %71 = dyn.reshape(%68, %69, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %72 = greater_equal(%66, %67) /* ty=Tensor[(16, 8, 5), bool] */;
  %73 = logical_xor(%70, %71) /* ty=Tensor[(16, 8, 5), int8] */;
  (%72, %73)
}

def @func_4372() -> Tensor[(10, 2, 16), float32] {
  %74 = @func_3030() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32]) */;
  %74.0
}

def @func_17012(%var_17010: Tensor[(10, 7, 48), float64]) -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 7, 48), uint16], Tensor[(10, 2, 16), float32], Tensor[(10, 7, 48), bool]) {
  @func_17009(%var_17010) /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 7, 48), uint16], Tensor[(10, 2, 16), float32], Tensor[(10, 7, 48), bool]) */
}

def @func_18602() -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(3360), float64]) {
  %81 = fn () -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(3360), float64]) {
    %75 = @func_11851() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8]) */;
    %76 = cast(meta[relay.Constant][1] /* ty=Tensor[(3360), float64] */, dtype="float64") /* ty=Tensor[(3360), float64] */;
    %77 = reshape(%76, newshape=[10, 7, 48]) /* ty=Tensor[(10, 7, 48), float64] */;
    %78 = @func_17009(%77) /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 7, 48), uint16], Tensor[(10, 2, 16), float32], Tensor[(10, 7, 48), bool]) */;
    %79 = %75.1;
    %80 = %78.3;
    (%79, %80, meta[relay.Constant][1] /* ty=Tensor[(3360), float64] */)
  };
  %81() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(3360), float64]) */
}

def @func_18829() -> (Tensor[(10, 2, 16), bool], Tensor[(12, 10, 12), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  @func_18827() /* ty=(Tensor[(10, 2, 16), bool], Tensor[(12, 10, 12), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_13062() -> (Tensor[(10, 2, 16), float32], Tensor[(432), float32]) {
  %86 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(432), float32]) {
    %82 = @func_10769() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %83 = @func_12722() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32]) */;
    %84 = %82.1;
    %85 = %83.1;
    (%84, %85)
  };
  %86() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32]) */
}

def @func_20790() -> (Tensor[(10, 2, 16), float32],) {
  %87 = @func_4351() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %88 = %87.0;
  (%88,)
}

def @func_6290() -> (Tensor[(10, 2, 16), float64], Tensor[(10, 7, 1), float32], Tensor[(70), float32], Tensor[(10, 2, 16), float64]) {
  @func_6288() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 7, 1), float32], Tensor[(70), float32], Tensor[(10, 2, 16), float64]) */
}

def @func_2080() -> Tensor[(432), float32] {
  @func_2078() /* ty=Tensor[(432), float32] */
}

def @func_621(%var_614: Tensor[(48), float32]) -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(4, 3, 4), float32], Tensor[(48), float32]) {
  %89 = @func_431() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %90 = cast(%var_614, dtype="float32") /* ty=Tensor[(48), float32] */;
  %91 = reshape(%90, newshape=[4, 3, 4]) /* ty=Tensor[(4, 3, 4), float32] */;
  %92 = %89.1;
  %93 = @func_257() /* ty=Tensor[(10, 2, 16), float32] */;
  %94 = @func_294(%91) /* ty=Tensor[(4, 3, 4), float32] */;
  (%92, %93, %94, %var_614)
}

def @func_6774() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) {
  @func_6772() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */
}

def @func_23015() -> (Tensor[(10, 2, 16), bool], Tensor[(2, 8, 9), float32], Tensor[(10, 2, 16), uint8]) {
  %99 = fn () -> (Tensor[(10, 2, 16), bool], Tensor[(2, 8, 9), float32], Tensor[(10, 2, 16), uint8]) {
    %95 = @func_14450() /* ty=(Tensor[(10, 2, 16), uint8],) */;
    %96 = @func_8863() /* ty=Tensor[(10, 2, 16), bool] */;
    %97 = @func_11348() /* ty=Tensor[(2, 8, 9), float32] */;
    %98 = %95.0;
    (%96, %97, %98)
  };
  %99() /* ty=(Tensor[(10, 2, 16), bool], Tensor[(2, 8, 9), float32], Tensor[(10, 2, 16), uint8]) */
}

def @func_12088() -> (Tensor[(10, 2, 16), float32],) {
  @func_12086() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_25087() -> Tensor[(10, 2, 16), float32] {
  @func_25085() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_3846() -> Tensor[(10, 2, 16), float32] {
  %101 = fn () -> Tensor[(10, 2, 16), float32] {
    %100 = @func_407() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %100.1
  };
  %101() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_9822() -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), uint8]) {
  %106 = fn () -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), uint8]) {
    %102 = @func_8538() /* ty=(Tensor[(2400), int16], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float64], Tensor[(432), float32], Tensor[(10, 2, 16), float32]) */;
    %103 = @func_4087() /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float64]) */;
    %104 = %102.2;
    %105 = %103.1;
    (%104, %105)
  };
  %106() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), uint8]) */
}

def @func_27893() -> Tensor[(10, 2, 16), uint8] {
  @func_27891() /* ty=Tensor[(10, 2, 16), uint8] */
}

def @func_22422() -> (Tensor[(10, 2, 16), uint8], Tensor[(2, 8, 9), float32], Tensor[(10, 2, 16), float32]) {
  %113 = fn () -> (Tensor[(10, 2, 16), uint8], Tensor[(2, 8, 9), float32], Tensor[(10, 2, 16), float32]) {
    %107 = @func_14450() /* ty=(Tensor[(10, 2, 16), uint8],) */;
    %108 = @func_15063() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(2, 8, 9), float32]) */;
    %109 = @func_20900() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %110 = %107.0;
    %111 = %108.1;
    %112 = %109.1;
    (%110, %111, %112)
  };
  %113() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(2, 8, 9), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_11305() -> (Tensor[(10, 2, 16), float32],) {
  %114 = @func_4674() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %115 = %114.0;
  (%115,)
}

def @func_20652() -> Tensor[(432), float32] {
  @func_20650() /* ty=Tensor[(432), float32] */
}

def @func_1332() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) {
  %116 = @func_711() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) */;
  %117 = @func_1041() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %118 = @func_305() /* ty=Tensor[(10, 2, 16), float32] */;
  %119 = %116.0;
  %120 = %117.0;
  (%118, %119, %120)
}

def @func_24900() -> (Tensor[(2, 8, 9), float32],) {
  %123 = fn () -> (Tensor[(2, 8, 9), float32],) {
    %121 = @func_22421() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(2, 8, 9), float32], Tensor[(10, 2, 16), float32]) */;
    %122 = %121.1;
    (%122,)
  };
  %123() /* ty=(Tensor[(2, 8, 9), float32],) */
}

def @func_14516(%var_14506: Tensor[(13, 1, 13), int32]) -> Tensor[(13, 1, 13), bool] {
  %124 = cast(10 /* ty=int32 */, dtype="bool") /* ty=bool */;
  %125 = cast(%var_14506, dtype="bool") /* ty=Tensor[(13, 1, 13), bool] */;
  equal(%124, %125) /* ty=Tensor[(13, 1, 13), bool] */
}

def @func_21012() -> (Tensor[(10, 2, 16), float32],) {
  @func_21010() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_19295() -> (Tensor[(10, 2, 16), float32], Tensor[(432), float32]) {
  %130 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(432), float32]) {
    %126 = @func_4239() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %127 = @func_16059() /* ty=(Tensor[(2, 8, 9), float32], Tensor[(2, 8, 9), float32], Tensor[(432), float32]) */;
    %128 = %126.2;
    %129 = %127.2;
    (%128, %129)
  };
  %130() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32]) */
}

def @func_15433() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %139 = fn () -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
    %131 = @func_10505() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
    %132 = @func_1630() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
    %133 = @func_5941() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %134 = @func_9686() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %135 = %131.1;
    %136 = %132.2;
    %137 = %133.1;
    %138 = %134.0;
    (%135, %136, %137, %138)
  };
  %139() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_22602() -> (Tensor[(10, 2, 16), float32],) {
  %140 = @func_14763() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %141 = %140.4;
  (%141,)
}

def @func_11772() -> (Tensor[(10, 2, 16), uint8],) {
  %144 = fn () -> (Tensor[(10, 2, 16), uint8],) {
    %142 = @func_4568() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
    %143 = %142.1;
    (%143,)
  };
  %144() /* ty=(Tensor[(10, 2, 16), uint8],) */
}

def @func_6878(%var_6877: Tensor[(3, 5, 9), float64]) -> (Tensor[(3, 5, 9), float64], Tensor[(3, 5, 9), float32]) {
  %149 = fn (%var_6853: Tensor[(3, 5, 9), float64]) -> (Tensor[(3, 5, 9), float64], Tensor[(3, 5, 9), float32]) {
    %145 = cast(%var_6853, dtype="float64") /* ty=Tensor[(3, 5, 9), float64] */;
    %146 = cast(%var_6853, dtype="float32") /* ty=Tensor[(3, 5, 9), float32] */;
    %147 = asinh(%145) /* ty=Tensor[(3, 5, 9), float64] */;
    %148 = sqrt(%146) /* ty=Tensor[(3, 5, 9), float32] */;
    (%147, %148)
  };
  %149(%var_6877) /* ty=(Tensor[(3, 5, 9), float64], Tensor[(3, 5, 9), float32]) */
}

def @func_10247() -> Tensor[(10, 2, 16), float32] {
  @func_10245() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_11350() -> Tensor[(2, 8, 9), float32] {
  @func_11348() /* ty=Tensor[(2, 8, 9), float32] */
}

def @func_19114() -> Tensor[(10, 2, 16), uint8] {
  %151 = fn () -> Tensor[(10, 2, 16), uint8] {
    %150 = @func_16620() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), int64]) */;
    %150.2
  };
  %151() /* ty=Tensor[(10, 2, 16), uint8] */
}

def @func_15711() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  @func_15709() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_15781() -> Tensor[(10, 2, 16), float32] {
  @func_15779() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_15065() -> (Tensor[(10, 2, 16), float64], Tensor[(2, 8, 9), float32]) {
  @func_15063() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(2, 8, 9), float32]) */
}

def @func_4109() -> (Tensor[(10, 2, 16), float32],) {
  %152 = @func_3030() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32]) */;
  %153 = %152.0;
  (%153,)
}

def @func_21142() -> (Tensor[(10, 2, 16), float64], Tensor[(432), float32], Tensor[(10, 2, 16), float64], float32, float32, Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %168 = fn () -> (Tensor[(10, 2, 16), float64], Tensor[(432), float32], Tensor[(10, 2, 16), float64], float32, float32, Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
    %154 = @func_9821() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), uint8]) */;
    %155 = @func_13439() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %156 = @func_431() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
    %157 = cast(-2.35959f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %158 = reshape(%157, newshape=[]) /* ty=float32 */;
    %159 = @func_20748(%158) /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), float32], float32, Tensor[(10, 2, 16), float32]) */;
    %160 = @func_4109() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %161 = @func_13585() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %162 = %154.0;
    %163 = %155.2;
    %164 = %156.1;
    %165 = %159.2;
    %166 = %160.0;
    %167 = %161.1;
    (%162, %163, %164, %165, -2.35959f /* ty=float32 */, %166, %167)
  };
  %168() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(432), float32], Tensor[(10, 2, 16), float64], float32, float32, Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_2960() -> (Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), float32]) {
  %169 = @func_362() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %170 = @func_1156() /* ty=Tensor[(10, 2, 16), float32] */;
  %171 = @func_2078() /* ty=Tensor[(432), float32] */;
  %172 = %169.1;
  (%170, %171, %172)
}

def @func_9203() -> Tensor[(10, 2, 16), float32] {
  @func_9201() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_2680() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) {
  @func_2678() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */
}

def @func_14309() -> (Tensor[(10, 2, 16), float32],) {
  %173 = @func_2444() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %174 = %173.4;
  (%174,)
}

def @func_9423() -> Tensor[(10, 2, 16), float64] {
  @func_5084() /* ty=Tensor[(10, 2, 16), float64] */
}

def @func_12743() -> (Tensor[(10, 2, 16), float32],) {
  %177 = fn () -> (Tensor[(10, 2, 16), float32],) {
    %175 = @func_807() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %176 = %175.2;
    (%176,)
  };
  %177() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_10995() -> Tensor[(10, 2, 16), uint8] {
  %178 = @func_7106() /* ty=(Tensor[(10, 2, 16), uint8],) */;
  %178.0
}

def @func_8657() -> (Tensor[(6, 9, 8), float32], Tensor[(10, 2, 16), float32]) {
  @func_8655() /* ty=(Tensor[(6, 9, 8), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_20188(%var_20187: Tensor[(70), float32]) -> (Tensor[(10, 2, 16), bool], Tensor[(8, ?, 2), bool], Tensor[(11, 10, 11), uint16], uint16, Tensor[(10, 7, 1), float32], Tensor[(70), float32], Tensor[(10, 2, 16), uint8]) {
  %191 = fn (%var_20160: Tensor[(70), float32]) -> (Tensor[(10, 2, 16), bool], Tensor[(8, ?, 2), bool], Tensor[(11, 10, 11), uint16], uint16, Tensor[(10, 7, 1), float32], Tensor[(70), float32], Tensor[(10, 2, 16), uint8]) {
    %179 = cast(meta[relay.Constant][2] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %180 = reshape(%179, newshape=[]) /* ty=uint16 */;
    %181 = @func_11581(%180) /* ty=(Tensor[(11, 10, 11), uint16],) */;
    %182 = cast(%var_20160, dtype="float32") /* ty=Tensor[(70), float32] */;
    %183 = reshape(%182, newshape=[10, 7, 1]) /* ty=Tensor[(10, 7, 1), float32] */;
    %184 = @func_4531(%183) /* ty=(Tensor[(10, 7, 1), float32], Tensor[(10, 2, 16), float32]) */;
    %185 = @func_8806() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 1, 2), int16], int16, Tensor[(20), int16], Tensor[(6, 9, 8), float32], Tensor[(48), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float64], Tensor[(432), float32]) */;
    %186 = @func_4609() /* ty=Tensor[(10, 2, 16), bool] */;
    %187 = @func_10487() /* ty=Tensor[(8, ?, 2), bool] */;
    %188 = %181.0;
    %189 = %184.0;
    %190 = %185.7;
    (%186, %187, %188, meta[relay.Constant][2] /* ty=uint16 */, %189, %var_20160, %190)
  };
  %191(%var_20187) /* ty=(Tensor[(10, 2, 16), bool], Tensor[(8, ?, 2), bool], Tensor[(11, 10, 11), uint16], uint16, Tensor[(10, 7, 1), float32], Tensor[(70), float32], Tensor[(10, 2, 16), uint8]) */
}

def @func_28479() -> Tensor[(8, ?, 2), bool] {
  @func_28477() /* ty=Tensor[(8, ?, 2), bool] */
}

def @func_3369() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) {
  %201 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) {
    %192 = @func_1766() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool]) */;
    %193 = @func_2711() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %194 = @func_2341() /* ty=(Tensor[(10, 2, 16), float64],) */;
    %195 = @func_1657() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %196 = @func_305() /* ty=Tensor[(10, 2, 16), float32] */;
    %197 = %192.2;
    %198 = %193.0;
    %199 = %194.0;
    %200 = %195.0;
    (%196, %197, %198, %199, %200)
  };
  %201() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */
}

def @func_22345() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %205 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
    %202 = @func_13294() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %203 = @func_19761() /* ty=Tensor[(10, 2, 16), float32] */;
    %204 = %202.0;
    (%203, %204)
  };
  %205() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_8728() -> (Tensor[(2, 3, 3), float32], Tensor[(10, 2, 16), float32]) {
  %206 = cast(meta[relay.Constant][3] /* ty=Tensor[(2, 3, 3), float32] */, dtype="float32") /* ty=Tensor[(2, 3, 3), float32] */;
  %207 = cos(%206) /* ty=Tensor[(2, 3, 3), float32] */;
  %208 = @func_1518() /* ty=Tensor[(10, 2, 16), float32] */;
  (%207, %208)
}

def @func_17559() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) {
  %212 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) {
    %209 = @func_12909() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %210 = %209.0;
    %211 = @func_13704() /* ty=Tensor[(10, 2, 16), uint8] */;
    (%210, %211)
  };
  %212() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */
}

def @func_6499() -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float64]) {
  %217 = fn () -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float64]) {
    %213 = @func_4799() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(2400), int16]) */;
    %214 = @func_2341() /* ty=(Tensor[(10, 2, 16), float64],) */;
    %215 = %213.0;
    %216 = %214.0;
    (%215, %216)
  };
  %217() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float64]) */
}

def @func_23107() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(12, 4), float32], Tensor[(2, 8, 9), float32]) {
  %218 = cast(meta[relay.Constant][4] /* ty=Tensor[(12, 4), float32] */, dtype="float32") /* ty=Tensor[(12, 4), float32] */;
  %219 = reshape(%218, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %220 = @func_7497(%219) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(48), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
  %221 = @func_7914() /* ty=(Tensor[(2, 8, 9), float32],) */;
  %222 = @func_15664() /* ty=Tensor[(10, 2, 16), float32] */;
  %223 = %220.3;
  %224 = %221.0;
  (%222, %223, meta[relay.Constant][4] /* ty=Tensor[(12, 4), float32] */, %224)
}

def @func_26686() -> Tensor[(10, 2, 16), float32] {
  %225 = @func_8671() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %225.0
}

def @func_27937() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float64]) {
  @func_27935() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float64]) */
}

def @func_11548(%var_11533: Tensor[(240), bool], %var_11534: Tensor[(48), float32]) -> (Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(240), bool], Tensor[(48), float32], Tensor[(10, 2, 16), float32]) {
  %226 = @func_407() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %227 = cast(%var_11533, dtype="bool") /* ty=Tensor[(240), bool] */;
  %228 = cast(%var_11534, dtype="float32") /* ty=Tensor[(48), float32] */;
  %229 = reshape(%227, newshape=[8, 15, 2]) /* ty=Tensor[(8, 15, 2), bool] */;
  %230 = reshape(%228, newshape=[24, 2]) /* ty=Tensor[(24, 2), float32] */;
  %231 = @func_5056(%229, %230) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(8, 15, 2), float64], Tensor[(8, 15, 2), float32], Tensor[(48), float32], Tensor[(24, 2), float32]) */;
  %232 = @func_8728() /* ty=(Tensor[(2, 3, 3), float32], Tensor[(10, 2, 16), float32]) */;
  %233 = %226.1;
  %234 = %231.3;
  %235 = %232.1;
  (%233, %234, %var_11533, %var_11534, %235)
}

def @func_6474() -> (Tensor[(10, 2, 16), float32],) {
  @func_6472() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_22490() -> (Tensor[(2, 8, 9), float64],) {
  %236 = @func_16059() /* ty=(Tensor[(2, 8, 9), float32], Tensor[(2, 8, 9), float32], Tensor[(432), float32]) */;
  %237 = %236.0;
  %238 = cast(%237, dtype="float64") /* ty=Tensor[(2, 8, 9), float64] */;
  %239 = sin(%238) /* ty=Tensor[(2, 8, 9), float64] */;
  (%239,)
}

def @func_6803() -> (Tensor[(10, 2, 16), float32],) {
  @func_6801() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_9091() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %240 = @func_327() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %241 = %240.0;
  %242 = @func_6325() /* ty=Tensor[(10, 2, 16), float32] */;
  %243 = @func_7959() /* ty=Tensor[(10, 2, 16), float32] */;
  (%241, %242, %243)
}

def @func_5158() -> Tensor[(10, 2, 16), uint8] {
  %244 = @func_1545() /* ty=(Tensor[(10, 2, 16), uint8],) */;
  %244.0
}

def @func_22265() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  @func_22263() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_26298() -> (Tensor[(10, 2, 16), float32],) {
  %247 = fn () -> (Tensor[(10, 2, 16), float32],) {
    %245 = @func_15678() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %246 = %245.0;
    (%246,)
  };
  %247() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_11348() -> Tensor[(2, 8, 9), float32] {
  %248 = @func_7273() /* ty=(Tensor[(2, 8, 9), float32],) */;
  %248.0
}

def @func_881() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) {
  %260 = fn () -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) {
    %249 = @func_362() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %250 = %249.1;
    %251 = cast(%250, dtype="float64") /* ty=Tensor[(10, 2, 16), float64] */;
    %252 = log(%251) /* ty=Tensor[(10, 2, 16), float64] */;
    %253 = cast(meta[relay.Constant][5] /* ty=Tensor[(10, 2, 16), float64] */, dtype="uint8") /* ty=Tensor[(10, 2, 16), uint8] */;
    %254 = shape_of(%252, dtype="int32") /* ty=Tensor[(3), int32] */;
    %255 = cast(%252, dtype="uint8") /* ty=Tensor[(10, 2, 16), uint8] */;
    %256 = dyn.reshape(%253, %254, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %257 = @func_362() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %258 = maximum(%255, %256) /* ty=Tensor[(10, 2, 16), uint8] */;
    %259 = %257.1;
    (%258, %259)
  };
  %260() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */
}

def @func_19214(%var_19213: Tensor[(7, 2, 14), float64]) -> (Tensor[(432), float32], Tensor[(10, 2, 16), float32], Tensor[(7, 2, 14), uint16]) {
  %271 = fn (%var_19204: Tensor[(7, 2, 14), float64]) -> (Tensor[(432), float32], Tensor[(10, 2, 16), float32], Tensor[(7, 2, 14), uint16]) {
    %261 = @func_12960() /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), float32]) */;
    %262 = @func_18271() /* ty=(Tensor[(7, 2, 14), float64], Tensor[(7, 2, 14), float32], Tensor[(10, 2, 16), float64]) */;
    %263 = %262.0;
    %264 = cast(%var_19204, dtype="uint16") /* ty=Tensor[(7, 2, 14), uint16] */;
    %265 = shape_of(%263, dtype="int32") /* ty=Tensor[(3), int32] */;
    %266 = cast(%263, dtype="uint16") /* ty=Tensor[(7, 2, 14), uint16] */;
    %267 = dyn.reshape(%264, %265, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %268 = %261.0;
    %269 = @func_16463() /* ty=Tensor[(10, 2, 16), float32] */;
    %270 = logical_xor(%266, %267) /* ty=Tensor[(7, 2, 14), uint16] */;
    (%268, %269, %270)
  };
  %271(%var_19213) /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), float32], Tensor[(7, 2, 14), uint16]) */
}

def @func_26844() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %272 = @func_11851() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8]) */;
  %273 = @func_14763() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %274 = %272.2;
  %275 = %273.1;
  (%274, %275)
}

def @func_13606(%var_13588: float32, %var_13589: Tensor[(9, 14, 16), float32]) -> Tensor[(9, 14, 16), float32] {
  %276 = cast(%var_13588, dtype="float32") /* ty=float32 */;
  %277 = cast(%var_13589, dtype="float32") /* ty=Tensor[(9, 14, 16), float32] */;
  maximum(%276, %277) /* ty=Tensor[(9, 14, 16), float32] */
}

def @func_16829(%var_16826: Tensor[(3, 12, 15), float32]) -> (Tensor[(3, 12, 15), float32],) {
  %278 = cast(%var_16826, dtype="float32") /* ty=Tensor[(3, 12, 15), float32] */;
  %279 = exp(%278) /* ty=Tensor[(3, 12, 15), float32] */;
  (%279,)
}

def @func_25989() -> (Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float64]) {
  %287 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float64]) {
    %280 = @func_17490() /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), uint8], Tensor[(320), uint8], Tensor[(432), float32]) */;
    %281 = @func_3294() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
    %282 = @func_21141() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(432), float32], Tensor[(10, 2, 16), float64], float32, float32, Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %283 = @func_7152() /* ty=Tensor[(10, 2, 16), float32] */;
    %284 = %280.3;
    %285 = %281.1;
    %286 = %282.0;
    (%283, %284, %285, %286)
  };
  %287() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float64]) */
}

def @func_18067() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) {
  %293 = fn () -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) {
    %288 = cast(meta[relay.Constant][6] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
    %289 = reshape(%288, newshape=[48]) /* ty=Tensor[(48), float32] */;
    %290 = @func_7497(%289) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(48), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
    %291 = @func_5158() /* ty=Tensor[(10, 2, 16), uint8] */;
    %292 = %290.4;
    (%291, %292, meta[relay.Constant][6] /* ty=Tensor[(48), float32] */)
  };
  %293() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) */
}

def @func_27392() -> (Tensor[(10, 2, 16), uint8], Tensor[(48, 1), float32]) {
  %294 = @func_4003() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
  %295 = @func_4049() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48, 1), float32]) */;
  %296 = %294.3;
  %297 = %295.2;
  (%296, %297)
}

def @func_5323() -> Tensor[(432), float32] {
  %298 = fn () -> Tensor[(432), float32] {
    @func_2078() /* ty=Tensor[(432), float32] */
  };
  %298() /* ty=Tensor[(432), float32] */
}

def @func_18115() -> (Tensor[(10, 2, 16), float32],) {
  @func_18113() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_18934() -> Tensor[(10, 2, 16), float32] {
  %299 = @func_13585() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %299.1
}

def @func_23304() -> Tensor[(10, 2, 16), float32] {
  %301 = fn () -> Tensor[(10, 2, 16), float32] {
    %300 = @func_6772() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
    %300.1
  };
  %301() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_20427() -> (Tensor[(14, 5, 6), bool], Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) {
  @func_20425() /* ty=(Tensor[(14, 5, 6), bool], Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) */
}

def @func_6472() -> (Tensor[(10, 2, 16), float32],) {
  %302 = @func_1476() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %303 = %302.1;
  (%303,)
}

def @func_8841() -> Tensor[(10, 2, 16), float32] {
  @func_8839() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_9093() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  @func_9091() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_675(%var_673: Tensor[(48), float32]) -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(4, 3, 4), float32], Tensor[(48), float32], Tensor[(4, 3, 4), float32]) {
  @func_672(%var_673) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(4, 3, 4), float32], Tensor[(48), float32], Tensor[(4, 3, 4), float32]) */
}

def @func_22932() -> (Tensor[(2, 8, 9), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
  %310 = fn () -> (Tensor[(2, 8, 9), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
    %304 = @func_16507() /* ty=(Tensor[(2, 8, 9), float32],) */;
    %305 = @func_22550() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %306 = @func_19264() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
    %307 = %304.0;
    %308 = %305.0;
    %309 = %306.0;
    (%307, %308, %309)
  };
  %310() /* ty=(Tensor[(2, 8, 9), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */
}

def @func_10279() -> Tensor[(8, ?, 2), bool] {
  %312 = fn () -> Tensor[(8, ?, 2), bool] {
    %311 = @func_3439() /* ty=(Tensor[(2, 8, 9), float32], Tensor[(10, 2, 16), float32], Tensor[(8, ?, 2), bool]) */;
    %311.2
  };
  %312() /* ty=Tensor[(8, ?, 2), bool] */
}

def @func_17348() -> Tensor[(10, 2, 16), float32] {
  %313 = @func_13439() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %313.0
}

def @func_6288() -> (Tensor[(10, 2, 16), float64], Tensor[(10, 7, 1), float32], Tensor[(70), float32], Tensor[(10, 2, 16), float64]) {
  %314 = @func_2444() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %315 = cast(meta[relay.Constant][7] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
  %316 = reshape(%315, newshape=[10, 7, 1]) /* ty=Tensor[(10, 7, 1), float32] */;
  %317 = @func_4531(%316) /* ty=(Tensor[(10, 7, 1), float32], Tensor[(10, 2, 16), float32]) */;
  %318 = %314.5;
  %319 = %317.0;
  %320 = @func_6085() /* ty=Tensor[(10, 2, 16), float64] */;
  (%318, %319, meta[relay.Constant][7] /* ty=Tensor[(70), float32] */, %320)
}

def @func_21930() -> (Tensor[(10, 2, 16), uint8],) {
  %321 = @func_880() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %322 = %321.0;
  (%322,)
}

def @func_1438() -> (Tensor[(10, 2, 16), float32], Tensor[(6, 9, 8), float32], Tensor[(432), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %331 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(6, 9, 8), float32], Tensor[(432), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
    %323 = cast(meta[relay.Constant][8] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
    %324 = reshape(%323, newshape=[6, 9, 8]) /* ty=Tensor[(6, 9, 8), float32] */;
    %325 = @func_584() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %326 = @func_1332() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
    %327 = @func_1377() /* ty=Tensor[(10, 2, 16), float32] */;
    %328 = @func_735(%324) /* ty=Tensor[(6, 9, 8), float32] */;
    %329 = %325.0;
    %330 = %326.1;
    (%327, %328, meta[relay.Constant][8] /* ty=Tensor[(432), float32] */, %329, %330)
  };
  %331() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(6, 9, 8), float32], Tensor[(432), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_25361() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
  %336 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
    %332 = @func_12034() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %333 = @func_12734() /* ty=(Tensor[(10, 2, 16), float64],) */;
    %334 = %332.0;
    %335 = %333.0;
    (%334, %335)
  };
  %336() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */
}

def @func_1158() -> Tensor[(10, 2, 16), float32] {
  @func_1156() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_20748(%var_20698: float32) -> (Tensor[(432), float32], Tensor[(10, 2, 16), float32], float32, Tensor[(10, 2, 16), float32]) {
  %337 = @func_17490() /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), uint8], Tensor[(320), uint8], Tensor[(432), float32]) */;
  %338 = cast(%var_20698, dtype="float32") /* ty=float32 */;
  %339 = reshape(%338, newshape=[]) /* ty=float32 */;
  %340 = @func_1070(%339) /* ty=(Tensor[(4, 14, 12), float32], Tensor[(10, 2, 16), float32]) */;
  %341 = @func_10505() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %342 = %337.0;
  %343 = %340.1;
  %344 = %341.0;
  (%342, %343, %var_20698, %344)
}

def @func_25852() -> (Tensor[(10, 2, 16), float32],) {
  %345 = @func_14954() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %346 = %345.2;
  (%346,)
}

def @func_16307() -> Tensor[(10, 2, 16), bool] {
  @func_16305() /* ty=Tensor[(10, 2, 16), bool] */
}

def @func_19428() -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
  %357 = fn () -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
    %347 = @func_11851() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8]) */;
    %348 = @func_11721() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), uint8]) */;
    %349 = @func_1437() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(6, 9, 8), float32], Tensor[(432), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %350 = @func_13489() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %351 = @func_2741() /* ty=(Tensor[(10, 2, 16), float64],) */;
    %352 = %347.1;
    %353 = %348.2;
    %354 = %349.4;
    %355 = %350.0;
    %356 = %351.0;
    (%352, %353, %354, %355, %356)
  };
  %357() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */
}

def @func_362() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %358 = @func_327() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %359 = @func_305() /* ty=Tensor[(10, 2, 16), float32] */;
  %360 = %358.0;
  (%359, %360)
}

def @func_1072(%var_1071: float32) -> (Tensor[(4, 14, 12), float32], Tensor[(10, 2, 16), float32]) {
  %365 = fn (%var_1047: float32) -> (Tensor[(4, 14, 12), float32], Tensor[(10, 2, 16), float32]) {
    %361 = cast(%var_1047, dtype="float32") /* ty=float32 */;
    %362 = cast(meta[relay.Constant][9] /* ty=Tensor[(4, 14, 12), float32] */, dtype="float32") /* ty=Tensor[(4, 14, 12), float32] */;
    %363 = floor_divide(%361, %362) /* ty=Tensor[(4, 14, 12), float32] */;
    %364 = @func_257() /* ty=Tensor[(10, 2, 16), float32] */;
    (%363, %364)
  };
  %365(%var_1071) /* ty=(Tensor[(4, 14, 12), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_9316() -> (Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(4, 3, 4), float32], Tensor[(4, 12), float32]) {
  %374 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(4, 3, 4), float32], Tensor[(4, 12), float32]) {
    %366 = @func_2977() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %367 = @func_5503() /* ty=(Tensor[(432), float32],) */;
    %368 = cast(meta[relay.Constant][10] /* ty=Tensor[(4, 12), float32] */, dtype="float32") /* ty=Tensor[(4, 12), float32] */;
    %369 = reshape(%368, newshape=[48]) /* ty=Tensor[(48), float32] */;
    %370 = @func_672(%369) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(4, 3, 4), float32], Tensor[(48), float32], Tensor[(4, 3, 4), float32]) */;
    %371 = %366.0;
    %372 = %367.0;
    %373 = %370.5;
    (%371, %372, %373, meta[relay.Constant][10] /* ty=Tensor[(4, 12), float32] */)
  };
  %374() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(4, 3, 4), float32], Tensor[(4, 12), float32]) */
}

def @func_9010() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
  @func_9008() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */
}

def @func_5311(%var_5308: int16, %var_5309: Tensor[(10, 2), int16], %var_5310: Tensor[(1200, 2), int16]) -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], int16, Tensor[(10, 2), int16], Tensor[(10, 16, 15), int16], Tensor[(1200, 2), int16]) {
  %388 = fn (%var_5295: int16, %var_5296: Tensor[(10, 2), int16], %var_5303: Tensor[(1200, 2), int16]) -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], int16, Tensor[(10, 2), int16], Tensor[(10, 16, 15), int16], Tensor[(1200, 2), int16]) {
    %375 = @func_4266() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %376 = cast(%var_5295, dtype="int16") /* ty=int16 */;
    %377 = cast(%var_5296, dtype="int16") /* ty=Tensor[(10, 2), int16] */;
    %378 = reshape(%376, newshape=[]) /* ty=int16 */;
    %379 = reshape(%377, newshape=[10, 1, 2]) /* ty=Tensor[(10, 1, 2), int16] */;
    %380 = @func_3097(%378, %379) /* ty=(Tensor[(10, 1, 2), int16], Tensor[(10, 2, 16), float32]) */;
    %381 = cast(%var_5303, dtype="int16") /* ty=Tensor[(1200, 2), int16] */;
    %382 = cast(%var_5303, dtype="int16") /* ty=Tensor[(1200, 2), int16] */;
    %383 = reshape(%381, newshape=[10, 16, 15]) /* ty=Tensor[(10, 16, 15), int16] */;
    %384 = reshape(%382, newshape=[10, 16, 15]) /* ty=Tensor[(10, 16, 15), int16] */;
    %385 = %375.0;
    %386 = %380.1;
    %387 = @func_2371(%383, %384) /* ty=Tensor[(10, 16, 15), int16] */;
    (%385, %386, %var_5295, %var_5296, %387, %var_5303)
  };
  %388(%var_5308, %var_5309, %var_5310) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], int16, Tensor[(10, 2), int16], Tensor[(10, 16, 15), int16], Tensor[(1200, 2), int16]) */
}

def @func_10430() -> (Tensor[(10, 2, 16), float64],) {
  @func_10428() /* ty=(Tensor[(10, 2, 16), float64],) */
}

def @func_15131() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  @func_15129() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_20902() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  @func_20900() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_17673() -> (Tensor[(2, 8, 9), float32],) {
  @func_17671() /* ty=(Tensor[(2, 8, 9), float32],) */
}

def @func_8609() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 7, 48), float32], Tensor[(70), float32]) {
  %397 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 7, 48), float32], Tensor[(70), float32]) {
    %389 = @func_362() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %390 = cast(meta[relay.Constant][11] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
    %391 = reshape(%390, newshape=[1, 70]) /* ty=Tensor[(1, 70), float32] */;
    %392 = @func_7015(%391) /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(1, 70), float32], Tensor[(10, 7, 48), float32]) */;
    %393 = %389.0;
    %394 = @func_5158() /* ty=Tensor[(10, 2, 16), uint8] */;
    %395 = @func_4372() /* ty=Tensor[(10, 2, 16), float32] */;
    %396 = %392.4;
    (%393, %394, %395, %396, meta[relay.Constant][11] /* ty=Tensor[(70), float32] */)
  };
  %397() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 7, 48), float32], Tensor[(70), float32]) */
}

def @func_7631() -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) {
  @func_7629() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */
}

def @func_9686() -> (Tensor[(10, 2, 16), float32],) {
  %398 = @func_431() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %399 = %398.0;
  (%399,)
}

def @func_447() -> Tensor[(10, 2, 16), float32] {
  @func_445() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_9008() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
  %400 = @func_6801() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %401 = @func_8344() /* ty=(Tensor[(10, 2, 16), float64],) */;
  %402 = %400.0;
  %403 = %401.0;
  (%402, %403)
}

def @func_6772() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) {
  %404 = @func_1041() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %405 = @func_2256() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
  %406 = %404.0;
  %407 = %405.0;
  (%406, %407)
}

def @func_9774(%var_9772: Tensor[(1, 16, 15), float64], %var_9773: Tensor[(11, 16, 15), float64]) -> (Tensor[(11, 16, 15), float64],) {
  @func_9770(%var_9772, %var_9773) /* ty=(Tensor[(11, 16, 15), float64],) */
}

def @func_13329() -> (Tensor[(48), float32], Tensor[(4, 14, 12), float32], float32) {
  @func_13327() /* ty=(Tensor[(48), float32], Tensor[(4, 14, 12), float32], float32) */
}

def @func_6086() -> Tensor[(10, 2, 16), float64] {
  %409 = fn () -> Tensor[(10, 2, 16), float64] {
    %408 = @func_431() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
    %408.1
  };
  %409() /* ty=Tensor[(10, 2, 16), float64] */
}

def @func_1546() -> (Tensor[(10, 2, 16), uint8],) {
  %412 = fn () -> (Tensor[(10, 2, 16), uint8],) {
    %410 = @func_1041() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
    %411 = %410.0;
    (%411,)
  };
  %412() /* ty=(Tensor[(10, 2, 16), uint8],) */
}

def @func_2517() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
  @func_2515() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */
}

def @func_15971() -> (Tensor[(10, 2, 16), float32],) {
  %415 = fn () -> (Tensor[(10, 2, 16), float32],) {
    %413 = @func_4109() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %414 = %413.0;
    (%414,)
  };
  %415() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_21330() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
  %420 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
    %416 = @func_16475() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %417 = @func_3368() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
    %418 = %416.0;
    %419 = %417.3;
    (%418, %419)
  };
  %420() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */
}

def @func_5942() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %427 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
    %421 = @func_1657() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %422 = @func_2977() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %423 = %421.0;
    %424 = @func_1156() /* ty=Tensor[(10, 2, 16), float32] */;
    %425 = @func_1377() /* ty=Tensor[(10, 2, 16), float32] */;
    %426 = %422.0;
    (%423, %424, %425, %426)
  };
  %427() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_14365() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %432 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
    %428 = @func_9140() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %429 = @func_5402() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(432), float32]) */;
    %430 = %428.0;
    %431 = %429.1;
    (%430, %431)
  };
  %432() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_20827() -> (Tensor[(10, 2, 16), float32],) {
  %433 = @func_15678() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %434 = %433.0;
  (%434,)
}

def @func_19733() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %435 = @func_4875() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %436 = @func_14023() /* ty=Tensor[(10, 2, 16), float32] */;
  %437 = %435.0;
  (%436, %437)
}

def @func_4925() -> (Tensor[(10, 2, 16), float32],) {
  %438 = @func_431() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %439 = %438.0;
  (%439,)
}

def @func_18481() -> Tensor[(10, 2, 16), float32] {
  %441 = fn () -> Tensor[(10, 2, 16), float32] {
    %440 = @func_15868() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) */;
    %440.3
  };
  %441() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_15567() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
  %445 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
    %442 = @func_12742() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %443 = %442.0;
    %444 = @func_6085() /* ty=Tensor[(10, 2, 16), float64] */;
    (%443, %444)
  };
  %445() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */
}

def @func_10717() -> Tensor[(432), float32] {
  %447 = fn () -> Tensor[(432), float32] {
    %446 = @func_5503() /* ty=(Tensor[(432), float32],) */;
    %446.0
  };
  %447() /* ty=Tensor[(432), float32] */
}

def @func_19761() -> Tensor[(10, 2, 16), float32] {
  %448 = @func_10794() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %448.0
}

def @func_14492(%var_14471: Tensor[(10, 7, 48), float64]) -> (Tensor[(10, 7, 48), uint32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float64]) {
  %449 = @func_13656() /* ty=(Tensor[(10, 7, 48), float64], Tensor[(10, 2, 16), float32]) */;
  %450 = %449.0;
  %451 = cast(%var_14471, dtype="uint32") /* ty=Tensor[(10, 7, 48), uint32] */;
  %452 = shape_of(%450, dtype="int32") /* ty=Tensor[(3), int32] */;
  %453 = cast(%450, dtype="uint32") /* ty=Tensor[(10, 7, 48), uint32] */;
  %454 = dyn.reshape(%451, %452, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %455 = @func_12734() /* ty=(Tensor[(10, 2, 16), float64],) */;
  %456 = logical_xor(%453, %454) /* ty=Tensor[(10, 7, 48), uint32] */;
  %457 = %455.0;
  %458 = @func_6795() /* ty=Tensor[(10, 2, 16), float64] */;
  (%456, %457, %458)
}

def @func_27045() -> (Tensor[(8, ?, 2), bool],) {
  @func_27043() /* ty=(Tensor[(8, ?, 2), bool],) */
}

def @func_14023() -> Tensor[(10, 2, 16), float32] {
  %459 = @func_13294() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %459.0
}

def @func_19526(%var_19478: Tensor[(2, 8, 9), float32]) -> (Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), bool], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %460 = @func_4049() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48, 1), float32]) */;
  %461 = @func_3531() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(2, 8, 9), float32]) */;
  %462 = %461.1;
  %463 = cast(%var_19478, dtype="bool") /* ty=Tensor[(2, 8, 9), bool] */;
  %464 = shape_of(%462, dtype="int32") /* ty=Tensor[(3), int32] */;
  %465 = cast(%462, dtype="bool") /* ty=Tensor[(2, 8, 9), bool] */;
  %466 = dyn.reshape(%463, %464, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %467 = %460.1;
  %468 = greater_equal(%465, %466) /* ty=Tensor[(2, 8, 9), bool] */;
  %469 = @func_18399() /* ty=Tensor[(10, 2, 16), float32] */;
  %470 = @func_6325() /* ty=Tensor[(10, 2, 16), float32] */;
  (%467, %468, %469, %470)
}

def @func_5829() -> Tensor[(432), float32] {
  @func_5322() /* ty=Tensor[(432), float32] */
}

def @func_22849() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(70), float32], Tensor[(10, 2, 16), float32]) {
  @func_22847() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(70), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_2962() -> (Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), float32]) {
  @func_2960() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_24603(%var_24560: Tensor[(15, 15, 13), float64]) -> (Tensor[(15, 15, 13), float64], Tensor[(10, 2, 16), float32], Tensor[(4, 12), float32], Tensor[(10, 2, 16), float32]) {
  %471 = cast(%var_24560, dtype="float64") /* ty=Tensor[(15, 15, 13), float64] */;
  %472 = @func_9397() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %473 = @func_9315() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(4, 3, 4), float32], Tensor[(4, 12), float32]) */;
  %474 = @func_18471() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %475 = acosh(%471) /* ty=Tensor[(15, 15, 13), float64] */;
  %476 = %472.0;
  %477 = %473.3;
  %478 = %474.0;
  (%475, %476, %477, %478)
}

def @func_23626() -> (Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) {
  %483 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) {
    %479 = @func_21516() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(70), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %480 = @func_7914() /* ty=(Tensor[(2, 8, 9), float32],) */;
    %481 = %479.1;
    %482 = %480.0;
    (%481, %482)
  };
  %483() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) */
}

def @func_1290(%var_1289: Tensor[(10, 2, 16), uint8]) -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %498 = fn (%var_1271: Tensor[(10, 2, 16), uint8]) -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
    %484 = @func_1041() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
    %485 = @func_807() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %486 = @func_880() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
    %487 = %486.0;
    %488 = cast(%var_1271, dtype="float32") /* ty=Tensor[(10, 2, 16), float32] */;
    %489 = shape_of(%487, dtype="int32") /* ty=Tensor[(3), int32] */;
    %490 = cast(%487, dtype="float32") /* ty=Tensor[(10, 2, 16), float32] */;
    %491 = dyn.reshape(%488, %489, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %492 = @func_407() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %493 = %484.0;
    %494 = @func_900() /* ty=Tensor[(10, 2, 16), uint8] */;
    %495 = %485.1;
    %496 = mod(%490, %491) /* ty=Tensor[(10, 2, 16), float32] */;
    %497 = %492.1;
    (%493, %494, %495, %496, %497)
  };
  %498(%var_1289) /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_4534(%var_4532: Tensor[(10, 7, 1), float32]) -> (Tensor[(10, 7, 1), float32], Tensor[(10, 2, 16), float32]) {
  @func_4531(%var_4532) /* ty=(Tensor[(10, 7, 1), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_2371(%var_2355: Tensor[(10, 16, 15), int16], %var_2356: Tensor[(10, 16, 15), int16]) -> Tensor[(10, 16, 15), int16] {
  %499 = cast(%var_2356, dtype="int16") /* ty=Tensor[(10, 16, 15), int16] */;
  %500 = shape_of(%var_2355, dtype="int32") /* ty=Tensor[(3), int32] */;
  %501 = cast(%var_2355, dtype="int16") /* ty=Tensor[(10, 16, 15), int16] */;
  %502 = dyn.reshape(%499, %500, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_xor(%501, %502) /* ty=Tensor[(10, 16, 15), int16] */
}

def @func_6015() -> (Tensor[(10, 2, 16), float32],) {
  %505 = fn () -> (Tensor[(10, 2, 16), float32],) {
    %503 = @func_3368() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
    %504 = %503.0;
    (%504,)
  };
  %505() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_11261() -> (Tensor[(10, 16, 15), int16], Tensor[(10, 2, 16), float32], Tensor[(4, 3, 4), float32], Tensor[(48), float32], Tensor[(10, 2, 16), float32]) {
  %514 = fn () -> (Tensor[(10, 16, 15), int16], Tensor[(10, 2, 16), float32], Tensor[(4, 3, 4), float32], Tensor[(48), float32], Tensor[(10, 2, 16), float32]) {
    %506 = @func_3051() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 16, 15), int16], Tensor[(2400), int16]) */;
    %507 = cast(meta[relay.Constant][12] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
    %508 = reshape(%507, newshape=[4, 3, 4]) /* ty=Tensor[(4, 3, 4), float32] */;
    %509 = @func_2515() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
    %510 = %506.2;
    %511 = @func_3845() /* ty=Tensor[(10, 2, 16), float32] */;
    %512 = @func_294(%508) /* ty=Tensor[(4, 3, 4), float32] */;
    %513 = %509.0;
    (%510, %511, %512, meta[relay.Constant][12] /* ty=Tensor[(48), float32] */, %513)
  };
  %514() /* ty=(Tensor[(10, 16, 15), int16], Tensor[(10, 2, 16), float32], Tensor[(4, 3, 4), float32], Tensor[(48), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_27179() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %515 = @func_2711() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %516 = @func_15729() /* ty=Tensor[(10, 2, 16), float32] */;
  %517 = %515.0;
  (%516, %517)
}

def @func_16010() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
  %518 = @func_13489() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %519 = @func_1630() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
  %520 = %518.0;
  %521 = %519.1;
  (%520, %521)
}

def @func_22709() -> Tensor[(2, 8, 9), float64] {
  %525 = fn () -> Tensor[(2, 8, 9), float64] {
    %522 = @func_5718() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) */;
    %523 = %522.1;
    %524 = cast(%523, dtype="float64") /* ty=Tensor[(2, 8, 9), float64] */;
    cosh(%524) /* ty=Tensor[(2, 8, 9), float64] */
  };
  %525() /* ty=Tensor[(2, 8, 9), float64] */
}

def @func_808() -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %533 = fn () -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
    %526 = @func_431() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
    %527 = @func_584() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %528 = @func_305() /* ty=Tensor[(10, 2, 16), float32] */;
    %529 = cast(%528, dtype="float32") /* ty=Tensor[(10, 2, 16), float32] */;
    %530 = %526.1;
    %531 = %527.0;
    %532 = cos(%529) /* ty=Tensor[(10, 2, 16), float32] */;
    (%530, %531, %532)
  };
  %533() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_6797() -> Tensor[(10, 2, 16), float64] {
  @func_6795() /* ty=Tensor[(10, 2, 16), float64] */
}

def @func_1768() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool]) {
  @func_1766() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool]) */
}

def @func_27891() -> Tensor[(10, 2, 16), uint8] {
  %534 = @func_21930() /* ty=(Tensor[(10, 2, 16), uint8],) */;
  %534.0
}

def @func_11853() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8]) {
  @func_11851() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8]) */
}

def @func_17191() -> Tensor[(10, 2, 16), float32] {
  @func_17189() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_28008() -> (Tensor[(10, 2, 16), float32],) {
  %535 = @func_11305() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %536 = %535.0;
  (%536,)
}

def @func_3295() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) {
  %551 = fn () -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) {
    %537 = @func_2444() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
    %538 = @func_1518() /* ty=Tensor[(10, 2, 16), float32] */;
    %539 = @func_1766() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool]) */;
    %540 = %539.2;
    %541 = cast(%540, dtype="uint8") /* ty=Tensor[(10, 2, 16), uint8] */;
    %542 = shape_of(%538, dtype="int32") /* ty=Tensor[(3), int32] */;
    %543 = cast(%538, dtype="uint8") /* ty=Tensor[(10, 2, 16), uint8] */;
    %544 = dyn.reshape(%541, %542, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %545 = @func_2134() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %546 = @func_1545() /* ty=(Tensor[(10, 2, 16), uint8],) */;
    %547 = %537.1;
    %548 = logical_xor(%543, %544) /* ty=Tensor[(10, 2, 16), uint8] */;
    %549 = %545.0;
    %550 = %546.0;
    (%547, %548, %549, %550)
  };
  %551() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */
}

def @func_11797() -> (Tensor[(10, 2, 16), float64],) {
  %554 = fn () -> (Tensor[(10, 2, 16), float64],) {
    %552 = @func_9821() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), uint8]) */;
    %553 = %552.0;
    (%553,)
  };
  %554() /* ty=(Tensor[(10, 2, 16), float64],) */
}

def @func_4876() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %557 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
    %555 = @func_2008() /* ty=Tensor[(10, 2, 16), float32] */;
    %556 = @func_2008() /* ty=Tensor[(10, 2, 16), float32] */;
    (%555, %556)
  };
  %557() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_18209() -> (Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float64]) {
  %558 = @func_2008() /* ty=Tensor[(10, 2, 16), float32] */;
  %559 = @func_13079() /* ty=Tensor[(48), float32] */;
  %560 = @func_8863() /* ty=Tensor[(10, 2, 16), bool] */;
  %561 = @func_7551() /* ty=Tensor[(10, 2, 16), float64] */;
  (%558, %559, %560, %561)
}

def @func_13688() -> (Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32], Tensor[(10, 2, 16), bool]) {
  %562 = @func_1630() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
  %563 = @func_3531() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(2, 8, 9), float32]) */;
  %564 = %562.0;
  %565 = %563.1;
  %566 = @func_8863() /* ty=Tensor[(10, 2, 16), bool] */;
  (%564, %565, %566)
}

def @func_12833() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  @func_12831() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_19763() -> Tensor[(10, 2, 16), float32] {
  @func_19761() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_20816() -> (Tensor[(10, 2, 16), float32],) {
  %569 = fn () -> (Tensor[(10, 2, 16), float32],) {
    %567 = @func_4568() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
    %568 = %567.2;
    (%568,)
  };
  %569() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_25493() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
  %573 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
    %570 = @func_12034() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %571 = %570.0;
    %572 = @func_6085() /* ty=Tensor[(10, 2, 16), float64] */;
    (%571, %572)
  };
  %573() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */
}

def @func_13327() -> (Tensor[(48), float32], Tensor[(4, 14, 12), float32], float32) {
  %574 = @func_9573() /* ty=(Tensor[(48), float32],) */;
  %575 = cast(-7.30058f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %576 = reshape(%575, newshape=[]) /* ty=float32 */;
  %577 = @func_1070(%576) /* ty=(Tensor[(4, 14, 12), float32], Tensor[(10, 2, 16), float32]) */;
  %578 = %574.0;
  %579 = %577.0;
  (%578, %579, -7.30058f /* ty=float32 */)
}

def @func_13736(%var_13720: Tensor[(10, 13, 10), uint64], %var_13721: Tensor[(10, 13, 10), uint64]) -> (Tensor[(10, 13, 10), bool], Tensor[(2, 8, 9), float32]) {
  %580 = cast(%var_13721, dtype="bool") /* ty=Tensor[(10, 13, 10), bool] */;
  %581 = shape_of(%var_13720, dtype="int32") /* ty=Tensor[(3), int32] */;
  %582 = cast(%var_13720, dtype="bool") /* ty=Tensor[(10, 13, 10), bool] */;
  %583 = dyn.reshape(%580, %581, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %584 = @func_3531() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(2, 8, 9), float32]) */;
  %585 = not_equal(%582, %583) /* ty=Tensor[(10, 13, 10), bool] */;
  %586 = %584.1;
  (%585, %586)
}

def @func_2258() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) {
  @func_2256() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */
}

def @func_14579(%var_14577: Tensor[(640), uint16]) -> (Tensor[(10, 2, 16), float32], Tensor[(10, 7, 1), float32], Tensor[(16, 8, 5), bool], Tensor[(640), uint16], Tensor[(10, 2, 16), float32]) {
  @func_14576(%var_14577) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 7, 1), float32], Tensor[(16, 8, 5), bool], Tensor[(640), uint16], Tensor[(10, 2, 16), float32]) */
}

def @func_4111() -> (Tensor[(10, 2, 16), float32],) {
  @func_4109() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_22004() -> Tensor[(10, 2, 16), float64] {
  %587 = @func_6498() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float64]) */;
  %587.0
}

def @func_13932() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %588 = @func_11740() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %589 = %588.1;
  %590 = @func_257() /* ty=Tensor[(10, 2, 16), float32] */;
  (%589, %590)
}

def @func_1689() -> (Tensor[(4, 3, 4), float32], Tensor[(48), float32], Tensor[(8, ?, 2), bool], Tensor[(8, 1, 2), float32]) {
  %606 = fn () -> (Tensor[(4, 3, 4), float32], Tensor[(48), float32], Tensor[(8, ?, 2), bool], Tensor[(8, 1, 2), float32]) {
    %591 = cast(meta[relay.Constant][13] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
    %592 = reshape(%591, newshape=[4, 3, 4]) /* ty=Tensor[(4, 3, 4), float32] */;
    %593 = cast(meta[relay.Constant][14] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %594 = cast(meta[relay.Constant][15] /* ty=Tensor[(8, 1, 2), int16] */, dtype="int16") /* ty=Tensor[(8, 1, 2), int16] */;
    %595 = bitwise_and(%593, %594) /* ty=Tensor[(8, 1, 2), int16] */;
    %596 = cast(meta[relay.Constant][15] /* ty=Tensor[(8, 1, 2), int16] */, dtype="bool") /* ty=Tensor[(8, 1, 2), bool] */;
    %597 = shape_of(%595, dtype="int32") /* ty=Tensor[(3), int32] */;
    %598 = cast(%595, dtype="bool") /* ty=Tensor[(8, 1, 2), bool] */;
    %599 = dyn.reshape(%596, %597, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %600 = cast(meta[relay.Constant][15] /* ty=Tensor[(8, 1, 2), int16] */, dtype="float32") /* ty=Tensor[(8, 1, 2), float32] */;
    %601 = sin(%600) /* ty=Tensor[(8, 1, 2), float32] */;
    %602 = cast(%601, dtype="float32") /* ty=Tensor[(8, 1, 2), float32] */;
    %603 = @func_294(%592) /* ty=Tensor[(4, 3, 4), float32] */;
    %604 = logical_or(%598, %599) /* ty=Tensor[(8, ?, 2), bool] */;
    %605 = atanh(%602) /* ty=Tensor[(8, 1, 2), float32] */;
    (%603, meta[relay.Constant][13] /* ty=Tensor[(48), float32] */, %604, %605)
  };
  %606() /* ty=(Tensor[(4, 3, 4), float32], Tensor[(48), float32], Tensor[(8, ?, 2), bool], Tensor[(8, 1, 2), float32]) */
}

def @func_25912() -> Tensor[(2, 8, 9), float32] {
  %608 = fn () -> Tensor[(2, 8, 9), float32] {
    %607 = @func_7914() /* ty=(Tensor[(2, 8, 9), float32],) */;
    %607.0
  };
  %608() /* ty=Tensor[(2, 8, 9), float32] */
}

def @func_5467() -> (Tensor[(10, 2, 16), float64],) {
  %611 = fn () -> (Tensor[(10, 2, 16), float64],) {
    %609 = @func_2341() /* ty=(Tensor[(10, 2, 16), float64],) */;
    %610 = %609.0;
    (%610,)
  };
  %611() /* ty=(Tensor[(10, 2, 16), float64],) */
}

def @func_27515() -> Tensor[(2, 8, 9), float32] {
  @func_27513() /* ty=Tensor[(2, 8, 9), float32] */
}

def @func_16507() -> (Tensor[(2, 8, 9), float32],) {
  %612 = @func_13688() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32], Tensor[(10, 2, 16), bool]) */;
  %613 = %612.1;
  (%613,)
}

def @func_1658() -> (Tensor[(10, 2, 16), float32],) {
  %615 = fn () -> (Tensor[(10, 2, 16), float32],) {
    %614 = @func_445() /* ty=Tensor[(10, 2, 16), float32] */;
    (%614,)
  };
  %615() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_11552(%var_11550: Tensor[(240), bool], %var_11551: Tensor[(48), float32]) -> (Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(240), bool], Tensor[(48), float32], Tensor[(10, 2, 16), float32]) {
  @func_11548(%var_11550, %var_11551) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(240), bool], Tensor[(48), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_27181() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  @func_27179() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_11036() -> (Tensor[(10, 2, 16), float32],) {
  %616 = @func_8227() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %617 = %616.1;
  (%617,)
}

def @func_15063() -> (Tensor[(10, 2, 16), float64], Tensor[(2, 8, 9), float32]) {
  %618 = @func_7914() /* ty=(Tensor[(2, 8, 9), float32],) */;
  %619 = @func_10674() /* ty=Tensor[(10, 2, 16), float64] */;
  %620 = %618.0;
  (%619, %620)
}

def @func_4609() -> Tensor[(10, 2, 16), bool] {
  %621 = @func_1766() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool]) */;
  %621.2
}

def @func_5504() -> (Tensor[(432), float32],) {
  %624 = fn () -> (Tensor[(432), float32],) {
    %622 = @func_4087() /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float64]) */;
    %623 = %622.0;
    (%623,)
  };
  %624() /* ty=(Tensor[(432), float32],) */
}

def @func_4191(%var_4189: Tensor[(16, 4, 14), int64], %var_4190: Tensor[(16, 4, 14), int64]) -> (Tensor[(16, 4, 14), int64],) {
  @func_4187(%var_4189, %var_4190) /* ty=(Tensor[(16, 4, 14), int64],) */
}

def @func_4743(%var_4741: int8) -> (Tensor[(2, 16, 6), int8], Tensor[(10, 2, 16), float32]) {
  @func_4740(%var_4741) /* ty=(Tensor[(2, 16, 6), int8], Tensor[(10, 2, 16), float32]) */
}

def @func_19880() -> (Tensor[(8, 1, 2), float32], Tensor[(10, 2, 16), float32]) {
  %629 = fn () -> (Tensor[(8, 1, 2), float32], Tensor[(10, 2, 16), float32]) {
    %625 = @func_1688() /* ty=(Tensor[(4, 3, 4), float32], Tensor[(48), float32], Tensor[(8, ?, 2), bool], Tensor[(8, 1, 2), float32]) */;
    %626 = @func_16620() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), int64]) */;
    %627 = %625.3;
    %628 = %626.0;
    (%627, %628)
  };
  %629() /* ty=(Tensor[(8, 1, 2), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_14495(%var_14493: Tensor[(10, 7, 48), float64]) -> (Tensor[(10, 7, 48), uint32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float64]) {
  @func_14492(%var_14493) /* ty=(Tensor[(10, 7, 48), uint32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float64]) */
}

def @func_12910() -> (Tensor[(10, 2, 16), float32],) {
  %631 = fn () -> (Tensor[(10, 2, 16), float32],) {
    %630 = @func_1377() /* ty=Tensor[(10, 2, 16), float32] */;
    (%630,)
  };
  %631() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_24013(%var_24011: Tensor[(2, 8, 9), float32]) -> (Tensor[(2, 8, 9), int32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  @func_24010(%var_24011) /* ty=(Tensor[(2, 8, 9), int32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_4352() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
  %636 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
    %632 = @func_3881() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %633 = @func_2741() /* ty=(Tensor[(10, 2, 16), float64],) */;
    %634 = %632.0;
    %635 = %633.0;
    (%634, %635)
  };
  %636() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */
}

def @func_26798() -> Tensor[(10, 2, 16), uint8] {
  %638 = fn () -> Tensor[(10, 2, 16), uint8] {
    %637 = @func_25387() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8]) */;
    %637.0
  };
  %638() /* ty=Tensor[(10, 2, 16), uint8] */
}

def @func_14652() -> (Tensor[(10, 2, 16), float32],) {
  %641 = fn () -> (Tensor[(10, 2, 16), float32],) {
    %639 = @func_3368() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
    %640 = %639.0;
    (%640,)
  };
  %641() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_2712() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %648 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
    %642 = @func_1437() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(6, 9, 8), float32], Tensor[(432), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %643 = @func_1476() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %644 = %643.1;
    %645 = cast(%644, dtype="float32") /* ty=Tensor[(10, 2, 16), float32] */;
    %646 = %642.3;
    %647 = acos(%645) /* ty=Tensor[(10, 2, 16), float32] */;
    (%646, %647)
  };
  %648() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_3475() -> (Tensor[(10, 2, 16), float32],) {
  %651 = fn () -> (Tensor[(10, 2, 16), float32],) {
    %649 = @func_3051() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 16, 15), int16], Tensor[(2400), int16]) */;
    %650 = %649.1;
    (%650,)
  };
  %651() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_3166() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %655 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
    %652 = @func_2977() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %653 = @func_1156() /* ty=Tensor[(10, 2, 16), float32] */;
    %654 = %652.0;
    (%653, %654)
  };
  %655() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_23817() -> Tensor[(10, 2, 16), float32] {
  %656 = @func_6772() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %656.1
}

def @func_14025() -> Tensor[(10, 2, 16), float32] {
  @func_14023() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_3790() -> Tensor[(2400), int16] {
  @func_3788() /* ty=Tensor[(2400), int16] */
}

def @func_5769() -> (Tensor[(8, 9, 6), float64], Tensor[(10, 2, 16), float32]) {
  @func_5767() /* ty=(Tensor[(8, 9, 6), float64], Tensor[(10, 2, 16), float32]) */
}

def @func_12735() -> (Tensor[(10, 2, 16), float64],) {
  %658 = fn () -> (Tensor[(10, 2, 16), float64],) {
    %657 = @func_9423() /* ty=Tensor[(10, 2, 16), float64] */;
    (%657,)
  };
  %658() /* ty=(Tensor[(10, 2, 16), float64],) */
}

def @func_16832(%var_16830: Tensor[(3, 12, 15), float32]) -> (Tensor[(3, 12, 15), float32],) {
  @func_16829(%var_16830) /* ty=(Tensor[(3, 12, 15), float32],) */
}

def @func_16621() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), int64]) {
  %669 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), int64]) {
    %659 = @func_13294() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %660 = @func_12866() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %661 = @func_9821() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), uint8]) */;
    %662 = %659.0;
    %663 = cast(%662, dtype="float32") /* ty=Tensor[(10, 2, 16), float32] */;
    %664 = reshape(%663, newshape=[10, 2, 16]) /* ty=Tensor[(10, 2, 16), float32] */;
    %665 = @func_7734(%664) /* ty=(Tensor[(10, 2, 16), int64], Tensor[(10, 2, 16), float32]) */;
    %666 = %660.1;
    %667 = %661.1;
    %668 = %665.0;
    (%662, %666, %667, %668)
  };
  %669() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), int64]) */
}

def @func_27477() -> (Tensor[(10, 2, 16), uint8],) {
  %670 = @func_21930() /* ty=(Tensor[(10, 2, 16), uint8],) */;
  %671 = %670.0;
  (%671,)
}

def @func_24420() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %676 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
    %672 = @func_16763() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) */;
    %673 = @func_12831() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %674 = %672.0;
    %675 = %673.0;
    (%674, %675)
  };
  %676() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_2375(%var_2373: Tensor[(10, 16, 15), int16], %var_2374: Tensor[(10, 16, 15), int16]) -> Tensor[(10, 16, 15), int16] {
  @func_2371(%var_2373, %var_2374) /* ty=Tensor[(10, 16, 15), int16] */
}

def @func_12558() -> (Tensor[(15, 11, 2), bool],) {
  @func_12556() /* ty=(Tensor[(15, 11, 2), bool],) */
}

def @func_23637() -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) {
  %677 = @func_11851() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8]) */;
  %678 = %677.1;
  %679 = @func_15729() /* ty=Tensor[(10, 2, 16), float32] */;
  (%678, %679)
}

def @func_17009(%var_16969: Tensor[(10, 7, 48), float64]) -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 7, 48), uint16], Tensor[(10, 2, 16), float32], Tensor[(10, 7, 48), bool]) {
  %680 = @func_16224() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %681 = @func_13656() /* ty=(Tensor[(10, 7, 48), float64], Tensor[(10, 2, 16), float32]) */;
  %682 = %681.0;
  %683 = cast(%var_16969, dtype="uint16") /* ty=Tensor[(10, 7, 48), uint16] */;
  %684 = shape_of(%682, dtype="int32") /* ty=Tensor[(3), int32] */;
  %685 = cast(%682, dtype="uint16") /* ty=Tensor[(10, 7, 48), uint16] */;
  %686 = dyn.reshape(%683, %684, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %687 = @func_6772() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %688 = cast(%682, dtype="float32") /* ty=Tensor[(10, 7, 48), float32] */;
  %689 = acosh(%688) /* ty=Tensor[(10, 7, 48), float32] */;
  %690 = cast(%var_16969, dtype="bool") /* ty=Tensor[(10, 7, 48), bool] */;
  %691 = shape_of(%689, dtype="int32") /* ty=Tensor[(3), int32] */;
  %692 = cast(%689, dtype="bool") /* ty=Tensor[(10, 7, 48), bool] */;
  %693 = dyn.reshape(%690, %691, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %694 = %680.0;
  %695 = @func_10245() /* ty=Tensor[(10, 2, 16), float32] */;
  %696 = subtract(%685, %686) /* ty=Tensor[(10, 7, 48), uint16] */;
  %697 = %687.1;
  %698 = greater_equal(%692, %693) /* ty=Tensor[(10, 7, 48), bool] */;
  (%694, %695, %696, %697, %698)
}

def @func_18873() -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) {
  %702 = fn () -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) {
    %699 = @func_8344() /* ty=(Tensor[(10, 2, 16), float64],) */;
    %700 = %699.0;
    %701 = @func_4372() /* ty=Tensor[(10, 2, 16), float32] */;
    (%700, %701)
  };
  %702() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */
}

def @func_6801() -> (Tensor[(10, 2, 16), float32],) {
  %703 = @func_2134() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %704 = %703.0;
  (%704,)
}

def @func_17860() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %705 = @func_4925() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %706 = @func_2783() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %707 = %705.0;
  %708 = %706.0;
  (%707, %708)
}

def @func_2977() -> (Tensor[(10, 2, 16), float32],) {
  %709 = @func_1518() /* ty=Tensor[(10, 2, 16), float32] */;
  (%709,)
}

def @func_6349() -> (Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %710 = @func_3030() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32]) */;
  %711 = @func_3881() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %712 = @func_2960() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), float32]) */;
  %713 = @func_2960() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), float32]) */;
  %714 = %710.1;
  %715 = %711.2;
  %716 = %712.0;
  %717 = %713.0;
  (%714, %715, %716, %717)
}

def @func_7018(%var_7016: Tensor[(1, 70), float32]) -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(1, 70), float32], Tensor[(10, 7, 48), float32]) {
  @func_7015(%var_7016) /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(1, 70), float32], Tensor[(10, 7, 48), float32]) */
}

def @func_17577() -> (Tensor[(10, 2, 16), float32],) {
  %718 = @func_14309() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %719 = %718.0;
  (%719,)
}

def @func_28010() -> (Tensor[(10, 2, 16), float32],) {
  @func_28008() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_21193(%var_21192: Tensor[(420, 8), float64]) -> (Tensor[(10, 2, 16), float32], Tensor[(10, 7, 48), bool], Tensor[(420, 8), float64]) {
  %726 = fn (%var_21185: Tensor[(420, 8), float64]) -> (Tensor[(10, 2, 16), float32], Tensor[(10, 7, 48), bool], Tensor[(420, 8), float64]) {
    %720 = @func_12960() /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), float32]) */;
    %721 = cast(%var_21185, dtype="float64") /* ty=Tensor[(420, 8), float64] */;
    %722 = reshape(%721, newshape=[10, 7, 48]) /* ty=Tensor[(10, 7, 48), float64] */;
    %723 = @func_17009(%722) /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 7, 48), uint16], Tensor[(10, 2, 16), float32], Tensor[(10, 7, 48), bool]) */;
    %724 = %720.1;
    %725 = %723.4;
    (%724, %725, %var_21185)
  };
  %726(%var_21192) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 7, 48), bool], Tensor[(420, 8), float64]) */
}

def @func_2226(%var_2225: Tensor[(48), float32]) -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %737 = fn (%var_2156: Tensor[(48), float32]) -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
    %727 = @func_1476() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %728 = cast(%var_2156, dtype="float32") /* ty=Tensor[(48), float32] */;
    %729 = reshape(%728, newshape=[48]) /* ty=Tensor[(48), float32] */;
    %730 = @func_672(%729) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(4, 3, 4), float32], Tensor[(48), float32], Tensor[(4, 3, 4), float32]) */;
    %731 = @func_584() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %732 = @func_584() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %733 = %727.1;
    %734 = %730.1;
    %735 = %731.0;
    %736 = %732.0;
    (%733, %734, %var_2156, %735, %736)
  };
  %737(%var_2225) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_2078() -> Tensor[(432), float32] {
  %738 = @func_1496() /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), float32]) */;
  %738.0
}

def @func_24982() -> (Tensor[(10, 2, 16), float32],) {
  %739 = @func_7432() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %740 = %739.2;
  (%740,)
}

def @func_10652() -> Tensor[(8, 9, 6), float64] {
  %742 = fn () -> Tensor[(8, 9, 6), float64] {
    %741 = @func_5767() /* ty=(Tensor[(8, 9, 6), float64], Tensor[(10, 2, 16), float32]) */;
    %741.0
  };
  %742() /* ty=Tensor[(8, 9, 6), float64] */
}

def @func_2515() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
  %743 = @func_1958() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %744 = @func_431() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %745 = %743.0;
  %746 = %744.1;
  (%745, %746)
}

def @func_16475() -> (Tensor[(10, 2, 16), float32],) {
  %747 = @func_6671() /* ty=Tensor[(10, 2, 16), float32] */;
  (%747,)
}

def @func_17604(%var_17602: Tensor[(18), float32]) -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), uint8], Tensor[(18), float32], Tensor[(10, 7, 48), float64]) {
  @func_17601(%var_17602) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), uint8], Tensor[(18), float32], Tensor[(10, 7, 48), float64]) */
}

def @func_27846() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(432), float32]) {
  %748 = @func_10769() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %749 = @func_5503() /* ty=(Tensor[(432), float32],) */;
  %750 = @func_10995() /* ty=Tensor[(10, 2, 16), uint8] */;
  %751 = %748.1;
  %752 = %749.0;
  (%750, %751, %752)
}

def @func_5216(%var_5214: Tensor[(640), uint16]) -> (Tensor[(14, 2, 5), float64], Tensor[(16, 8, 5), bool], Tensor[(640), uint16]) {
  @func_5213(%var_5214) /* ty=(Tensor[(14, 2, 5), float64], Tensor[(16, 8, 5), bool], Tensor[(640), uint16]) */
}

def @func_23786() -> (Tensor[(10, 2, 16), float64], Tensor[(48), float32]) {
  %753 = @func_4351() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %754 = %753.1;
  %755 = @func_13079() /* ty=Tensor[(48), float32] */;
  (%754, %755)
}

def @func_13658() -> (Tensor[(10, 7, 48), float64], Tensor[(10, 2, 16), float32]) {
  @func_13656() /* ty=(Tensor[(10, 7, 48), float64], Tensor[(10, 2, 16), float32]) */
}

def @func_25309() -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) {
  %756 = @func_19264() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
  %757 = %756.0;
  %758 = @func_20606() /* ty=Tensor[(10, 2, 16), float32] */;
  %759 = @func_13079() /* ty=Tensor[(48), float32] */;
  (%757, %758, %759)
}

def @func_4675() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) {
  %766 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) {
    %760 = @func_807() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %761 = @func_2256() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
    %762 = @func_3474() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %763 = %760.2;
    %764 = %761.1;
    %765 = %762.0;
    (%763, %764, %765)
  };
  %766() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */
}

def @func_23639() -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) {
  @func_23637() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */
}

def @func_12431() -> (Tensor[(10, 2, 16), float32], Tensor[(2400), int16]) {
  %771 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(2400), int16]) {
    %767 = @func_4875() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %768 = @func_3051() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 16, 15), int16], Tensor[(2400), int16]) */;
    %769 = %767.0;
    %770 = %768.3;
    (%769, %770)
  };
  %771() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(2400), int16]) */
}

def @func_19673() -> (Tensor[(10, 2, 16), float32],) {
  %772 = @func_4049() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48, 1), float32]) */;
  %773 = %772.1;
  (%773,)
}

def @func_6047() -> (Tensor[(10, 2, 16), float32],) {
  %775 = fn () -> (Tensor[(10, 2, 16), float32],) {
    %774 = @func_4372() /* ty=Tensor[(10, 2, 16), float32] */;
    (%774,)
  };
  %775() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_21960() -> Tensor[(10, 2, 16), float32] {
  @func_21958() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_11038() -> (Tensor[(10, 2, 16), float32],) {
  @func_11036() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_2342() -> (Tensor[(10, 2, 16), float64],) {
  %778 = fn () -> (Tensor[(10, 2, 16), float64],) {
    %776 = @func_431() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
    %777 = %776.1;
    (%777,)
  };
  %778() /* ty=(Tensor[(10, 2, 16), float64],) */
}

def @func_7776() -> Tensor[(2, 8, 9), float32] {
  %779 = @func_7273() /* ty=(Tensor[(2, 8, 9), float32],) */;
  %779.0
}

def @func_23718() -> (Tensor[(432), float32],) {
  %780 = @func_14046() /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), float64]) */;
  %781 = %780.0;
  (%781,)
}

def @func_10769() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %782 = @func_2134() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %783 = @func_7152() /* ty=Tensor[(10, 2, 16), float32] */;
  %784 = %782.0;
  (%783, %784)
}

def @func_13585() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %785 = @func_4266() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %786 = @func_11305() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %787 = %785.1;
  %788 = %786.0;
  (%787, %788)
}

def @func_16305() -> Tensor[(10, 2, 16), bool] {
  @func_4609() /* ty=Tensor[(10, 2, 16), bool] */
}

def @func_23211(%var_23210: int16) -> (Tensor[(10, 2, 16), float32], Tensor[(20), int16], int16, Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %799 = fn (%var_23168: int16) -> (Tensor[(10, 2, 16), float32], Tensor[(20), int16], int16, Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
    %789 = @func_18872() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
    %790 = cast(%var_23168, dtype="int16") /* ty=int16 */;
    %791 = reshape(%790, newshape=[]) /* ty=int16 */;
    %792 = @func_3620(%791) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(20), int16], Tensor[(10, 1, 2), bool], Tensor[(10, 2, 16), float32]) */;
    %793 = @func_14364() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %794 = @func_3474() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %795 = %789.1;
    %796 = %792.1;
    %797 = %793.0;
    %798 = %794.0;
    (%795, %796, %var_23168, %797, %798)
  };
  %799(%var_23210) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(20), int16], int16, Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_22492() -> (Tensor[(2, 8, 9), float64],) {
  @func_22490() /* ty=(Tensor[(2, 8, 9), float64],) */
}

def @func_2678() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) {
  %800 = @func_2444() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %801 = @func_1989() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %802 = %800.3;
  %803 = @func_900() /* ty=Tensor[(10, 2, 16), uint8] */;
  %804 = %801.1;
  (%802, %803, %804)
}

def @func_4611() -> Tensor[(10, 2, 16), bool] {
  @func_4609() /* ty=Tensor[(10, 2, 16), bool] */
}

def @func_1631() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) {
  %811 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) {
    %805 = @func_584() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %806 = @func_431() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
    %807 = @func_584() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %808 = %805.0;
    %809 = %806.1;
    %810 = %807.0;
    (%808, %809, %810)
  };
  %811() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */
}

def @func_7389() -> (Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 16, 15), int16]) {
  %821 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 16, 15), int16]) {
    %812 = @func_1476() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %813 = @func_2444() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
    %814 = @func_3051() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 16, 15), int16], Tensor[(2400), int16]) */;
    %815 = %812.1;
    %816 = @func_5322() /* ty=Tensor[(432), float32] */;
    %817 = %813.1;
    %818 = @func_3845() /* ty=Tensor[(10, 2, 16), float32] */;
    %819 = @func_2008() /* ty=Tensor[(10, 2, 16), float32] */;
    %820 = %814.2;
    (%815, %816, %817, %818, %819, %820)
  };
  %821() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 16, 15), int16]) */
}

def @func_3053() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 16, 15), int16], Tensor[(2400), int16]) {
  @func_3051() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 16, 15), int16], Tensor[(2400), int16]) */
}

def @func_24606(%var_24604: Tensor[(15, 15, 13), float64]) -> (Tensor[(15, 15, 13), float64], Tensor[(10, 2, 16), float32], Tensor[(4, 12), float32], Tensor[(10, 2, 16), float32]) {
  @func_24603(%var_24604) /* ty=(Tensor[(15, 15, 13), float64], Tensor[(10, 2, 16), float32], Tensor[(4, 12), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_25175(%var_25148: Tensor[(9, 14, 1), float32]) -> Tensor[(9, 14, ?), int32] {
  %822 = cast(%var_25148, dtype="float32") /* ty=Tensor[(9, 14, 1), float32] */;
  %823 = sin(%822) /* ty=Tensor[(9, 14, 1), float32] */;
  %824 = cast(%var_25148, dtype="int32") /* ty=Tensor[(9, 14, 1), int32] */;
  %825 = shape_of(%823, dtype="int32") /* ty=Tensor[(3), int32] */;
  %826 = cast(%823, dtype="int32") /* ty=Tensor[(9, 14, 1), int32] */;
  %827 = dyn.reshape(%824, %825, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  right_shift(%826, %827) /* ty=Tensor[(9, 14, ?), int32] */
}

def @func_26357() -> (Tensor[(10, 2, 16), float32],) {
  %828 = @func_15566() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %829 = %828.0;
  (%829,)
}

def @func_20692() -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) {
  %833 = fn () -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) {
    %830 = @func_16077() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %831 = @func_5084() /* ty=Tensor[(10, 2, 16), float64] */;
    %832 = %830.0;
    (%831, %832)
  };
  %833() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */
}

def @func_8864() -> Tensor[(10, 2, 16), bool] {
  %835 = fn () -> Tensor[(10, 2, 16), bool] {
    %834 = @func_1766() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool]) */;
    %834.2
  };
  %835() /* ty=Tensor[(10, 2, 16), bool] */
}

def @func_16817(%var_16815: Tensor[(5, 198), float32], %var_16816: Tensor[(5, 198), float32]) -> (Tensor[(2, 8, 9), float32], Tensor[(48), float32], Tensor[(48), float32], Tensor[(5, 198), float64]) {
  @func_16813(%var_16815, %var_16816) /* ty=(Tensor[(2, 8, 9), float32], Tensor[(48), float32], Tensor[(48), float32], Tensor[(5, 198), float64]) */
}

def @func_7914() -> (Tensor[(2, 8, 9), float32],) {
  %836 = @func_7776() /* ty=Tensor[(2, 8, 9), float32] */;
  (%836,)
}

def @func_20437() -> Tensor[(432), float32] {
  %837 = @func_16059() /* ty=(Tensor[(2, 8, 9), float32], Tensor[(2, 8, 9), float32], Tensor[(432), float32]) */;
  %837.2
}

def @func_2009() -> Tensor[(10, 2, 16), float32] {
  %839 = fn () -> Tensor[(10, 2, 16), float32] {
    %838 = @func_1657() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %838.0
  };
  %839() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_12114() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) {
  %845 = fn () -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) {
    %840 = @func_5158() /* ty=Tensor[(10, 2, 16), uint8] */;
    %841 = cast(%840, dtype="uint8") /* ty=Tensor[(10, 2, 16), uint8] */;
    %842 = reshape(%841, newshape=[10, 2, 16]) /* ty=Tensor[(10, 2, 16), uint8] */;
    %843 = @func_1288(%842) /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %844 = %843.4;
    (%840, %844)
  };
  %845() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */
}

def @func_14885() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %846 = @func_4003() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
  %847 = %846.0;
  %848 = @func_9201() /* ty=Tensor[(10, 2, 16), float32] */;
  (%847, %848)
}

def @func_26893() -> (Tensor[(2, 8, 9), float32], Tensor[(48), float32]) {
  @func_26891() /* ty=(Tensor[(2, 8, 9), float32], Tensor[(48), float32]) */
}

def @func_23546() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), bool], Tensor[(432), float32]) {
  @func_23544() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), bool], Tensor[(432), float32]) */
}

def @func_25520() -> (Tensor[(10, 2, 16), uint8],) {
  %850 = fn () -> (Tensor[(10, 2, 16), uint8],) {
    %849 = @func_900() /* ty=Tensor[(10, 2, 16), uint8] */;
    (%849,)
  };
  %850() /* ty=(Tensor[(10, 2, 16), uint8],) */
}

def @func_9770(%var_9745: Tensor[(1, 16, 15), float64], %var_9746: Tensor[(11, 16, 15), float64]) -> (Tensor[(11, 16, 15), float64],) {
  %851 = cast(%var_9745, dtype="float64") /* ty=Tensor[(1, 16, 15), float64] */;
  %852 = cast(%var_9746, dtype="float64") /* ty=Tensor[(11, 16, 15), float64] */;
  %853 = power(%851, %852) /* ty=Tensor[(11, 16, 15), float64] */;
  (%853,)
}

def @func_16151() -> Tensor[(10, 2, 16), float32] {
  %854 = @func_5767() /* ty=(Tensor[(8, 9, 6), float64], Tensor[(10, 2, 16), float32]) */;
  %854.1
}

def @func_24486(%var_24484: Tensor[(18), float32], %var_24485: int16) -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(18), float32], Tensor[(20), int16], int16, Tensor[(10, 2, 16), uint8]) {
  %866 = fn (%var_24466: Tensor[(18), float32], %var_24469: int16) -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(18), float32], Tensor[(20), int16], int16, Tensor[(10, 2, 16), uint8]) {
    %855 = cast(%var_24466, dtype="float32") /* ty=Tensor[(18), float32] */;
    %856 = reshape(%855, newshape=[18]) /* ty=Tensor[(18), float32] */;
    %857 = @func_17601(%856) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), uint8], Tensor[(18), float32], Tensor[(10, 7, 48), float64]) */;
    %858 = cast(%var_24469, dtype="int16") /* ty=int16 */;
    %859 = reshape(%858, newshape=[]) /* ty=int16 */;
    %860 = @func_3620(%859) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(20), int16], Tensor[(10, 1, 2), bool], Tensor[(10, 2, 16), float32]) */;
    %861 = @func_21930() /* ty=(Tensor[(10, 2, 16), uint8],) */;
    %862 = @func_8839() /* ty=Tensor[(10, 2, 16), float32] */;
    %863 = %857.2;
    %864 = %860.1;
    %865 = %861.0;
    (%862, %863, %var_24466, %864, %var_24469, %865)
  };
  %866(%var_24484, %var_24485) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(18), float32], Tensor[(20), int16], int16, Tensor[(10, 2, 16), uint8]) */
}

def @func_15299(%var_15278: Tensor[(169), int32], %var_15285: Tensor[(13, 2, 13), bool]) -> (Tensor[(10, 2, 16), uint8], Tensor[(169), int32], Tensor[(13, 2, 13), uint16], Tensor[(10, 2, 16), uint8]) {
  %867 = @func_5146() /* ty=(Tensor[(10, 2, 16), uint8],) */;
  %868 = cast(%var_15278, dtype="int32") /* ty=Tensor[(169), int32] */;
  %869 = reshape(%868, newshape=[13, 1, 13]) /* ty=Tensor[(13, 1, 13), int32] */;
  %870 = @func_14516(%869) /* ty=Tensor[(13, 1, 13), bool] */;
  %871 = cast(%870, dtype="uint16") /* ty=Tensor[(13, 1, 13), uint16] */;
  %872 = cast(%var_15285, dtype="uint16") /* ty=Tensor[(13, 2, 13), uint16] */;
  %873 = @func_7106() /* ty=(Tensor[(10, 2, 16), uint8],) */;
  %874 = %867.0;
  %875 = bitwise_and(%871, %872) /* ty=Tensor[(13, 2, 13), uint16] */;
  %876 = %873.0;
  (%874, %var_15278, %875, %876)
}

def @func_14576(%var_14550: Tensor[(640), uint16]) -> (Tensor[(10, 2, 16), float32], Tensor[(10, 7, 1), float32], Tensor[(16, 8, 5), bool], Tensor[(640), uint16], Tensor[(10, 2, 16), float32]) {
  %877 = @func_3165() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %878 = @func_6288() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 7, 1), float32], Tensor[(70), float32], Tensor[(10, 2, 16), float64]) */;
  %879 = cast(%var_14550, dtype="uint16") /* ty=Tensor[(640), uint16] */;
  %880 = cast(%var_14550, dtype="uint16") /* ty=Tensor[(640), uint16] */;
  %881 = cast(%var_14550, dtype="uint16") /* ty=Tensor[(640), uint16] */;
  %882 = reshape(%879, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), uint16] */;
  %883 = reshape(%880, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), uint16] */;
  %884 = reshape(%881, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), uint16] */;
  %885 = @func_5188(%882, %883, %884) /* ty=(Tensor[(16, 8, 5), bool], Tensor[(16, 8, 5), int8]) */;
  %886 = @func_14309() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %887 = %877.0;
  %888 = %878.1;
  %889 = %885.0;
  %890 = %886.0;
  (%887, %888, %889, %var_14550, %890)
}

def @func_22363() -> Tensor[(432), float32] {
  @func_2078() /* ty=Tensor[(432), float32] */
}

def @func_364() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  @func_362() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_1519() -> Tensor[(10, 2, 16), float32] {
  %891 = fn () -> Tensor[(10, 2, 16), float32] {
    @func_445() /* ty=Tensor[(10, 2, 16), float32] */
  };
  %891() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_4266() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %892 = @func_711() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) */;
  %893 = %892.1;
  %894 = @func_2008() /* ty=Tensor[(10, 2, 16), float32] */;
  (%893, %894)
}

def @func_22847() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(70), float32], Tensor[(10, 2, 16), float32]) {
  %895 = @func_17577() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %896 = @func_6288() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 7, 1), float32], Tensor[(70), float32], Tensor[(10, 2, 16), float64]) */;
  %897 = @func_711() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) */;
  %898 = @func_2008() /* ty=Tensor[(10, 2, 16), float32] */;
  %899 = %895.0;
  %900 = %896.2;
  %901 = %897.0;
  (%898, %899, %900, %901)
}

def @func_21671() -> Tensor[(10, 2, 16), uint8] {
  @func_21669() /* ty=Tensor[(10, 2, 16), uint8] */
}

def @func_9968() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) {
  @func_9966() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */
}

def @func_10325() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %905 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
    %902 = @func_3368() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
    %903 = %902.0;
    %904 = @func_445() /* ty=Tensor[(10, 2, 16), float32] */;
    (%903, %904)
  };
  %905() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_21625() -> (Tensor[(432), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  @func_21623() /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_4089() -> (Tensor[(432), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float64]) {
  @func_4087() /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float64]) */
}

def @func_24984() -> (Tensor[(10, 2, 16), float32],) {
  @func_24982() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_7535(%var_7531: Tensor[(2, 24), float32]) -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(2, 24), float32]) {
  %906 = cast(%var_7531, dtype="float32") /* ty=Tensor[(2, 24), float32] */;
  %907 = reshape(%906, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %908 = @func_2613(%907) /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(6, 9, 8), float32], Tensor[(6, 9, 8), bool], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) */;
  %909 = @func_6325() /* ty=Tensor[(10, 2, 16), float32] */;
  %910 = %908.3;
  (%909, %910, %var_7531)
}

def @func_15664() -> Tensor[(10, 2, 16), float32] {
  @func_1377() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_24534(%var_24532: Tensor[(9, 7, 14), float64]) -> (Tensor[(9, 7, 14), float64], Tensor[(9, 7, 14), float32]) {
  @func_24531(%var_24532) /* ty=(Tensor[(9, 7, 14), float64], Tensor[(9, 7, 14), float32]) */
}

def @func_22435() -> Tensor[(10, 2, 16), float32] {
  @func_22433() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_21821() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %915 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
    %911 = @func_10794() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %912 = @func_10794() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %913 = %911.0;
    %914 = %912.0;
    (%913, %914)
  };
  %915() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_3100(%var_3098: int16, %var_3099: Tensor[(10, 1, 2), int16]) -> (Tensor[(10, 1, 2), int16], Tensor[(10, 2, 16), float32]) {
  %921 = fn (%var_3086: int16, %var_3087: Tensor[(10, 1, 2), int16]) -> (Tensor[(10, 1, 2), int16], Tensor[(10, 2, 16), float32]) {
    %916 = cast(%var_3086, dtype="int16") /* ty=int16 */;
    %917 = cast(%var_3087, dtype="int16") /* ty=Tensor[(10, 1, 2), int16] */;
    %918 = @func_1630() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
    %919 = add(%916, %917) /* ty=Tensor[(10, 1, 2), int16] */;
    %920 = %918.2;
    (%919, %920)
  };
  %921(%var_3098, %var_3099) /* ty=(Tensor[(10, 1, 2), int16], Tensor[(10, 2, 16), float32]) */
}

def @func_11195() -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) {
  %922 = @func_6498() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float64]) */;
  %923 = @func_5402() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(432), float32]) */;
  %924 = %922.1;
  %925 = %923.1;
  (%924, %925)
}

def @func_26273(%var_26271: Tensor[(240), bool]) -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(240), bool], Tensor[(10, 2, 16), float32]) {
  @func_26270(%var_26271) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(240), bool], Tensor[(10, 2, 16), float32]) */
}

def @func_27513() -> Tensor[(2, 8, 9), float32] {
  %926 = @func_17671() /* ty=(Tensor[(2, 8, 9), float32],) */;
  %926.0
}

def @func_21010() -> (Tensor[(10, 2, 16), float32],) {
  %927 = @func_12399() /* ty=Tensor[(10, 2, 16), float32] */;
  (%927,)
}

def @func_5086() -> Tensor[(10, 2, 16), float64] {
  @func_5084() /* ty=Tensor[(10, 2, 16), float64] */
}

def @func_307() -> Tensor[(10, 2, 16), float32] {
  @func_305() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_25257() -> (Tensor[(10, 2, 16), float32],) {
  %930 = fn () -> (Tensor[(10, 2, 16), float32],) {
    %928 = @func_9686() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %929 = %928.0;
    (%929,)
  };
  %930() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_26891() -> (Tensor[(2, 8, 9), float32], Tensor[(48), float32]) {
  %931 = @func_18209() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float64]) */;
  %932 = @func_25112() /* ty=Tensor[(2, 8, 9), float32] */;
  %933 = %931.1;
  (%932, %933)
}

def @func_27599() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %938 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
    %934 = @func_19656() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %935 = @func_1630() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
    %936 = %934.0;
    %937 = %935.2;
    (%936, %937)
  };
  %938() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_23819() -> Tensor[(10, 2, 16), float32] {
  @func_23817() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_9425() -> Tensor[(10, 2, 16), float64] {
  @func_9423() /* ty=Tensor[(10, 2, 16), float64] */
}

def @func_14955() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %943 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
    %939 = @func_9091() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %940 = @func_9201() /* ty=Tensor[(10, 2, 16), float32] */;
    %941 = @func_4372() /* ty=Tensor[(10, 2, 16), float32] */;
    %942 = %939.0;
    (%940, %941, %942)
  };
  %943() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_13705() -> Tensor[(10, 2, 16), uint8] {
  %945 = fn () -> Tensor[(10, 2, 16), uint8] {
    %944 = @func_10505() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
    %944.1
  };
  %945() /* ty=Tensor[(10, 2, 16), uint8] */
}

def @func_5719() -> (Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) {
  %950 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) {
    %946 = @func_4239() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %947 = @func_3531() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(2, 8, 9), float32]) */;
    %948 = %946.1;
    %949 = %947.1;
    (%948, %949)
  };
  %950() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) */
}

def @func_27394() -> (Tensor[(10, 2, 16), uint8], Tensor[(48, 1), float32]) {
  @func_27392() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(48, 1), float32]) */
}

def @func_15635() -> (Tensor[(10, 2, 16), float32],) {
  @func_15633() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_11992() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) {
  %957 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) {
    %951 = @func_327() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %952 = @func_7629() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
    %953 = @func_4109() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %954 = %951.0;
    %955 = %952.2;
    %956 = %953.0;
    (%954, %955, %956)
  };
  %957() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */
}

def @func_7961() -> Tensor[(10, 2, 16), float32] {
  @func_7959() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_294(%var_288: Tensor[(4, 3, 4), float32]) -> Tensor[(4, 3, 4), float32] {
  %958 = cast(-7.37178f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %959 = cast(%var_288, dtype="float32") /* ty=Tensor[(4, 3, 4), float32] */;
  mod(%958, %959) /* ty=Tensor[(4, 3, 4), float32] */
}

def @func_13490() -> (Tensor[(10, 2, 16), float32],) {
  %962 = fn () -> (Tensor[(10, 2, 16), float32],) {
    %960 = @func_8538() /* ty=(Tensor[(2400), int16], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float64], Tensor[(432), float32], Tensor[(10, 2, 16), float32]) */;
    %961 = %960.4;
    (%961,)
  };
  %962() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_17629() -> Tensor[(10, 2, 16), float64] {
  @func_17627() /* ty=Tensor[(10, 2, 16), float64] */
}

def @func_5147() -> (Tensor[(10, 2, 16), uint8],) {
  %965 = fn () -> (Tensor[(10, 2, 16), uint8],) {
    %963 = @func_1545() /* ty=(Tensor[(10, 2, 16), uint8],) */;
    %964 = %963.0;
    (%964,)
  };
  %965() /* ty=(Tensor[(10, 2, 16), uint8],) */
}

def @func_8730() -> (Tensor[(2, 3, 3), float32], Tensor[(10, 2, 16), float32]) {
  @func_8728() /* ty=(Tensor[(2, 3, 3), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_584() -> (Tensor[(10, 2, 16), float32],) {
  %966 = @func_362() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %967 = %966.0;
  (%967,)
}

def @func_27043() -> (Tensor[(8, ?, 2), bool],) {
  %968 = @func_1688() /* ty=(Tensor[(4, 3, 4), float32], Tensor[(48), float32], Tensor[(8, ?, 2), bool], Tensor[(8, 1, 2), float32]) */;
  %969 = %968.2;
  (%969,)
}

def @func_2785() -> (Tensor[(10, 2, 16), float32],) {
  @func_2783() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_11881() -> (Tensor[(10, 2, 16), float32], Tensor[(16, 4, 14), int64], Tensor[(896), int64]) {
  @func_11879() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(16, 4, 14), int64], Tensor[(896), int64]) */
}

def @func_26094() -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) {
  %970 = @func_19264() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
  %971 = @func_6046() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %972 = %970.0;
  %973 = %971.0;
  (%972, %973)
}

def @func_16873(%var_16871: Tensor[(2, 3, 12), float64]) -> (Tensor[(2, 3, 12), float64], Tensor[(10, 2, 16), float32]) {
  @func_16870(%var_16871) /* ty=(Tensor[(2, 3, 12), float64], Tensor[(10, 2, 16), float32]) */
}

def @func_16188() -> (Tensor[(10, 2, 16), float32],) {
  @func_16186() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_16465() -> Tensor[(10, 2, 16), float32] {
  @func_16463() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_11581(%var_11570: uint16) -> (Tensor[(11, 10, 11), uint16],) {
  %974 = cast(%var_11570, dtype="uint16") /* ty=uint16 */;
  %975 = cast(meta[relay.Constant][16] /* ty=Tensor[(11, 10, 11), uint16] */, dtype="uint16") /* ty=Tensor[(11, 10, 11), uint16] */;
  %976 = left_shift(%974, %975) /* ty=Tensor[(11, 10, 11), uint16] */;
  (%976,)
}

def @func_19374() -> (Tensor[(10, 2, 16), float32],) {
  %978 = fn () -> (Tensor[(10, 2, 16), float32],) {
    %977 = @func_445() /* ty=Tensor[(10, 2, 16), float32] */;
    (%977,)
  };
  %978() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_6461() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(48), float32], Tensor[(4, 3, 4), float32]) {
  @func_6459() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(48), float32], Tensor[(4, 3, 4), float32]) */
}

def @func_11722() -> (Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), uint8]) {
  %985 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), uint8]) {
    %979 = @func_6158() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %980 = @func_4087() /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float64]) */;
    %981 = @func_880() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
    %982 = %979.2;
    %983 = %980.0;
    %984 = %981.0;
    (%982, %983, %984)
  };
  %985() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), uint8]) */
}

def @func_18211() -> (Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float64]) {
  @func_18209() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float64]) */
}

def @func_12465() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) {
  %990 = fn () -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) {
    %986 = @func_9821() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), uint8]) */;
    %987 = @func_327() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %988 = %986.1;
    %989 = %987.0;
    (%988, %989)
  };
  %990() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */
}

def @func_16153() -> Tensor[(10, 2, 16), float32] {
  @func_16151() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_13587() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  @func_13585() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_25813(%var_25811: Tensor[(8, 11, 2), float32]) -> (Tensor[(10, 2, 16), float32], Tensor[(8, 11, 2), int32], Tensor[(10, 2, 16), float32]) {
  @func_25810(%var_25811) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(8, 11, 2), int32], Tensor[(10, 2, 16), float32]) */
}

def @func_27239(%var_27238: Tensor[(2560), int32]) -> (Tensor[(10, 7, 1), float32], Tensor[(16, 16, 10), int32], Tensor[(2560), int32]) {
  %999 = fn (%var_27233: Tensor[(2560), int32]) -> (Tensor[(10, 7, 1), float32], Tensor[(16, 16, 10), int32], Tensor[(2560), int32]) {
    %991 = @func_6288() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 7, 1), float32], Tensor[(70), float32], Tensor[(10, 2, 16), float64]) */;
    %992 = cast(%var_27233, dtype="int32") /* ty=Tensor[(2560), int32] */;
    %993 = cast(%var_27233, dtype="int32") /* ty=Tensor[(2560), int32] */;
    %994 = reshape(%992, newshape=[16, 16, 10]) /* ty=Tensor[(16, 16, 10), int32] */;
    %995 = reshape(%993, newshape=[16, 16, 10]) /* ty=Tensor[(16, 16, 10), int32] */;
    %996 = @func_9334(%994, %995) /* ty=(Tensor[(16, 16, 10), int32], Tensor[(10, 2, 16), float32]) */;
    %997 = %991.1;
    %998 = %996.0;
    (%997, %998, %var_27233)
  };
  %999(%var_27238) /* ty=(Tensor[(10, 7, 1), float32], Tensor[(16, 16, 10), int32], Tensor[(2560), int32]) */
}

def @func_16764() -> (Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) {
  %1003 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) {
    %1000 = @func_16059() /* ty=(Tensor[(2, 8, 9), float32], Tensor[(2, 8, 9), float32], Tensor[(432), float32]) */;
    %1001 = @func_10552() /* ty=Tensor[(10, 2, 16), float32] */;
    %1002 = %1000.0;
    (%1001, %1002)
  };
  %1003() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) */
}

def @func_4800() -> (Tensor[(10, 2, 16), float64], Tensor[(2400), int16]) {
  %1007 = fn () -> (Tensor[(10, 2, 16), float64], Tensor[(2400), int16]) {
    %1004 = @func_807() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %1005 = %1004.0;
    %1006 = @func_3788() /* ty=Tensor[(2400), int16] */;
    (%1005, %1006)
  };
  %1007() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(2400), int16]) */
}

def @func_12961() -> (Tensor[(432), float32], Tensor[(10, 2, 16), float32]) {
  %1011 = fn () -> (Tensor[(432), float32], Tensor[(10, 2, 16), float32]) {
    %1008 = @func_10641() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %1009 = @func_5829() /* ty=Tensor[(432), float32] */;
    %1010 = %1008.0;
    (%1009, %1010)
  };
  %1011() /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_15709() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1012 = @func_7106() /* ty=(Tensor[(10, 2, 16), uint8],) */;
  %1013 = @func_11851() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8]) */;
  %1014 = @func_5941() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1015 = %1012.0;
  %1016 = %1013.2;
  %1017 = %1014.1;
  (%1015, %1016, %1017)
}

def @func_12219() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
  %1018 = @func_8103() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(10, 2, 16), float32]) */;
  %1019 = @func_6014() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1020 = @func_431() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %1021 = %1018.3;
  %1022 = %1019.0;
  %1023 = @func_11130() /* ty=Tensor[(10, 2, 16), float32] */;
  %1024 = %1020.1;
  (%1021, %1022, %1023, %1024)
}

def @func_1477() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1030 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
    %1025 = @func_1041() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
    %1026 = @func_880() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
    %1027 = %1025.1;
    %1028 = @func_1377() /* ty=Tensor[(10, 2, 16), float32] */;
    %1029 = %1026.1;
    (%1027, %1028, %1029)
  };
  %1030() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_14163() -> Tensor[(10, 2, 16), float32] {
  @func_14161() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_28544() -> (Tensor[(432), float32],) {
  %1032 = fn () -> (Tensor[(432), float32],) {
    %1031 = @func_20650() /* ty=Tensor[(432), float32] */;
    (%1031,)
  };
  %1032() /* ty=(Tensor[(432), float32],) */
}

def @func_9384() -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(10, 2, 16), float32]) {
  %1043 = fn () -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(10, 2, 16), float32]) {
    %1033 = @func_431() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
    %1034 = @func_6823() /* ty=(Tensor[(10, 2, 16), uint8],) */;
    %1035 = cast(meta[relay.Constant][17] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
    %1036 = reshape(%1035, newshape=[48]) /* ty=Tensor[(48), float32] */;
    %1037 = @func_7497(%1036) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(48), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
    %1038 = @func_407() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %1039 = %1033.1;
    %1040 = %1034.0;
    %1041 = %1037.4;
    %1042 = %1038.1;
    (%1039, %1040, %1041, meta[relay.Constant][17] /* ty=Tensor[(48), float32] */, %1042)
  };
  %1043() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_22076() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) {
  %1044 = @func_17558() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
  %1045 = @func_11721() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), uint8]) */;
  %1046 = %1044.1;
  %1047 = %1045.0;
  (%1046, %1047)
}

def @func_27201() -> (Tensor[(48), float32], Tensor[(48), float32]) {
  %1052 = fn () -> (Tensor[(48), float32], Tensor[(48), float32]) {
    %1048 = @func_711() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) */;
    %1049 = @func_22769() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %1050 = %1048.2;
    %1051 = %1049.2;
    (%1050, %1051)
  };
  %1052() /* ty=(Tensor[(48), float32], Tensor[(48), float32]) */
}

def @func_18936() -> Tensor[(10, 2, 16), float32] {
  @func_18934() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_3699(%var_3698: Tensor[(48), float32]) -> (Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) {
  %1059 = fn (%var_3677: Tensor[(48), float32]) -> (Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) {
    %1053 = @func_3030() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32]) */;
    %1054 = cast(%var_3677, dtype="float32") /* ty=Tensor[(48), float32] */;
    %1055 = reshape(%1054, newshape=[48]) /* ty=Tensor[(48), float32] */;
    %1056 = @func_2224(%1055) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %1057 = %1053.1;
    %1058 = %1056.4;
    (%1057, %1058, %var_3677)
  };
  %1059(%var_3698) /* ty=(Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) */
}

def @func_8450(%var_8449: Tensor[(24, 2), float32]) -> (Tensor[(10, 2, 16), float32], Tensor[(70), float32], Tensor[(10, 2, 16), float32], Tensor[(24, 2), float32]) {
  %1067 = fn (%var_8431: Tensor[(24, 2), float32]) -> (Tensor[(10, 2, 16), float32], Tensor[(70), float32], Tensor[(10, 2, 16), float32], Tensor[(24, 2), float32]) {
    %1060 = @func_6288() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 7, 1), float32], Tensor[(70), float32], Tensor[(10, 2, 16), float64]) */;
    %1061 = cast(%var_8431, dtype="float32") /* ty=Tensor[(24, 2), float32] */;
    %1062 = reshape(%1061, newshape=[2, 24]) /* ty=Tensor[(2, 24), float32] */;
    %1063 = @func_7535(%1062) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(2, 24), float32]) */;
    %1064 = @func_1377() /* ty=Tensor[(10, 2, 16), float32] */;
    %1065 = %1060.2;
    %1066 = %1063.0;
    (%1064, %1065, %1066, %var_8431)
  };
  %1067(%var_8449) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(70), float32], Tensor[(10, 2, 16), float32], Tensor[(24, 2), float32]) */
}

def @func_1156() -> Tensor[(10, 2, 16), float32] {
  %1068 = @func_807() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1068.1
}

def @func_15129() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1069 = @func_13688() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32], Tensor[(10, 2, 16), bool]) */;
  %1070 = @func_10641() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1071 = %1069.0;
  %1072 = %1070.1;
  (%1071, %1072)
}

def @func_22263() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1073 = @func_2711() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1074 = @func_6472() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1075 = %1073.0;
  %1076 = %1074.0;
  (%1075, %1076)
}

def @func_12724() -> (Tensor[(10, 2, 16), float32], Tensor[(432), float32]) {
  @func_12722() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32]) */
}

def @func_28526() -> (Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float64], Tensor[(10, 2, 16), float32]) {
  %1083 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float64], Tensor[(10, 2, 16), float32]) {
    %1077 = @func_23544() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), bool], Tensor[(432), float32]) */;
    %1078 = @func_22490() /* ty=(Tensor[(2, 8, 9), float64],) */;
    %1079 = @func_20900() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %1080 = %1077.1;
    %1081 = %1078.0;
    %1082 = %1079.0;
    (%1080, %1081, %1082)
  };
  %1083() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float64], Tensor[(10, 2, 16), float32]) */
}

def @func_12663(%var_12661: int8, %var_12662: Tensor[(11, 13, 6), int8]) -> (Tensor[(11, 13, 6), int8], Tensor[(6, 9, 8), float32], Tensor[(432), float32], Tensor[(2, 8, 9), float32]) {
  @func_12659(%var_12661, %var_12662) /* ty=(Tensor[(11, 13, 6), int8], Tensor[(6, 9, 8), float32], Tensor[(432), float32], Tensor[(2, 8, 9), float32]) */
}

def @func_8396() -> (Tensor[(10, 2, 16), uint8],) {
  %1086 = fn () -> (Tensor[(10, 2, 16), uint8],) {
    %1084 = @func_6823() /* ty=(Tensor[(10, 2, 16), uint8],) */;
    %1085 = %1084.0;
    (%1085,)
  };
  %1086() /* ty=(Tensor[(10, 2, 16), uint8],) */
}

def @func_7778() -> Tensor[(2, 8, 9), float32] {
  @func_7776() /* ty=Tensor[(2, 8, 9), float32] */
}

def @func_5213(%var_5206: Tensor[(640), uint16]) -> (Tensor[(14, 2, 5), float64], Tensor[(16, 8, 5), bool], Tensor[(640), uint16]) {
  %1087 = cast(meta[relay.Constant][18] /* ty=Tensor[(14, 2, 5), float64] */, dtype="float64") /* ty=Tensor[(14, 2, 5), float64] */;
  %1088 = cast(%var_5206, dtype="uint16") /* ty=Tensor[(640), uint16] */;
  %1089 = cast(%var_5206, dtype="uint16") /* ty=Tensor[(640), uint16] */;
  %1090 = cast(%var_5206, dtype="uint16") /* ty=Tensor[(640), uint16] */;
  %1091 = reshape(%1088, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), uint16] */;
  %1092 = reshape(%1089, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), uint16] */;
  %1093 = reshape(%1090, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), uint16] */;
  %1094 = @func_5188(%1091, %1092, %1093) /* ty=(Tensor[(16, 8, 5), bool], Tensor[(16, 8, 5), int8]) */;
  %1095 = sin(%1087) /* ty=Tensor[(14, 2, 5), float64] */;
  %1096 = %1094.0;
  (%1095, %1096, %var_5206)
}

def @func_2616(%var_2614: Tensor[(48), float32]) -> (Tensor[(10, 2, 16), uint8], Tensor[(6, 9, 8), float32], Tensor[(6, 9, 8), bool], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) {
  @func_2613(%var_2614) /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(6, 9, 8), float32], Tensor[(6, 9, 8), bool], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) */
}

def @func_9574() -> (Tensor[(48), float32],) {
  %1099 = fn () -> (Tensor[(48), float32],) {
    %1097 = @func_1688() /* ty=(Tensor[(4, 3, 4), float32], Tensor[(48), float32], Tensor[(8, ?, 2), bool], Tensor[(8, 1, 2), float32]) */;
    %1098 = %1097.1;
    (%1098,)
  };
  %1099() /* ty=(Tensor[(48), float32],) */
}

def @func_1043() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) {
  @func_1041() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */
}

def @func_2979() -> (Tensor[(10, 2, 16), float32],) {
  @func_2977() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_9688() -> (Tensor[(10, 2, 16), float32],) {
  @func_9686() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_26960() -> (Tensor[(10, 2, 16), float32],) {
  %1100 = @func_10769() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1101 = %1100.0;
  (%1101,)
}

def @func_305() -> Tensor[(10, 2, 16), float32] {
  @func_257() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_7275() -> (Tensor[(2, 8, 9), float32],) {
  @func_7273() /* ty=(Tensor[(2, 8, 9), float32],) */
}

def @func_12812() -> (Tensor[(2, 8, 9), float32], Tensor[(10, 2, 16), float32]) {
  @func_12810() /* ty=(Tensor[(2, 8, 9), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_18400() -> Tensor[(10, 2, 16), float32] {
  %1103 = fn () -> Tensor[(10, 2, 16), float32] {
    %1102 = @func_15178() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32]) */;
    %1102.0
  };
  %1103() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_16813(%var_16796: Tensor[(5, 198), float32], %var_16799: Tensor[(5, 198), float32]) -> (Tensor[(2, 8, 9), float32], Tensor[(48), float32], Tensor[(48), float32], Tensor[(5, 198), float64]) {
  %1104 = cast(%var_16796, dtype="float32") /* ty=Tensor[(5, 198), float32] */;
  %1105 = cast(meta[relay.Constant][19] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %1106 = cast(%var_16796, dtype="float64") /* ty=Tensor[(5, 198), float64] */;
  %1107 = reshape(%1104, newshape=[15, 6, 11]) /* ty=Tensor[(15, 6, 11), float32] */;
  %1108 = reshape(%1105, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %1109 = reshape(%1106, newshape=[15, 6, 11]) /* ty=Tensor[(15, 6, 11), float64] */;
  %1110 = @func_7851(%1107, %1108, %1109) /* ty=(Tensor[(48), float32], Tensor[(48), float32], Tensor[(15, 6, 11), bool]) */;
  %1111 = cast(%var_16799, dtype="int64") /* ty=Tensor[(5, 198), int64] */;
  %1112 = shape_of(%var_16796, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1113 = cast(%var_16796, dtype="int64") /* ty=Tensor[(5, 198), int64] */;
  %1114 = dyn.reshape(%1111, %1112, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %1115 = multiply(%1113, %1114) /* ty=Tensor[(5, 198), int64] */;
  %1116 = cast(%1115, dtype="float64") /* ty=Tensor[(5, 198), float64] */;
  %1117 = log(%1116) /* ty=Tensor[(5, 198), float64] */;
  %1118 = cast(%1117, dtype="float64") /* ty=Tensor[(5, 198), float64] */;
  %1119 = @func_11348() /* ty=Tensor[(2, 8, 9), float32] */;
  %1120 = %1110.1;
  %1121 = cosh(%1118) /* ty=Tensor[(5, 198), float64] */;
  (%1119, %1120, meta[relay.Constant][19] /* ty=Tensor[(48), float32] */, %1121)
}

def @func_18272() -> (Tensor[(7, 2, 14), float64], Tensor[(7, 2, 14), float32], Tensor[(10, 2, 16), float64]) {
  %1128 = fn () -> (Tensor[(7, 2, 14), float64], Tensor[(7, 2, 14), float32], Tensor[(10, 2, 16), float64]) {
    %1122 = cast(meta[relay.Constant][20] /* ty=Tensor[(7, 2, 14), float64] */, dtype="float64") /* ty=Tensor[(7, 2, 14), float64] */;
    %1123 = cast(meta[relay.Constant][20] /* ty=Tensor[(7, 2, 14), float64] */, dtype="float32") /* ty=Tensor[(7, 2, 14), float32] */;
    %1124 = @func_18209() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float64]) */;
    %1125 = cos(%1122) /* ty=Tensor[(7, 2, 14), float64] */;
    %1126 = tan(%1123) /* ty=Tensor[(7, 2, 14), float32] */;
    %1127 = %1124.3;
    (%1125, %1126, %1127)
  };
  %1128() /* ty=(Tensor[(7, 2, 14), float64], Tensor[(7, 2, 14), float32], Tensor[(10, 2, 16), float64]) */
}

def @func_5767() -> (Tensor[(8, 9, 6), float64], Tensor[(10, 2, 16), float32]) {
  %1129 = cast(meta[relay.Constant][21] /* ty=Tensor[(8, 9, 6), float64] */, dtype="float64") /* ty=Tensor[(8, 9, 6), float64] */;
  %1130 = @func_1958() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1131 = cosh(%1129) /* ty=Tensor[(8, 9, 6), float64] */;
  %1132 = %1130.0;
  (%1131, %1132)
}

def @func_10701(%var_10699: Tensor[(16, 1, 10), float32], %var_10700: Tensor[(16, 2, 10), float32]) -> (Tensor[(16, 1, 10), float32], Tensor[(16, 2, 10), float64]) {
  %1138 = fn (%var_10677: Tensor[(16, 1, 10), float32], %var_10683: Tensor[(16, 2, 10), float32]) -> (Tensor[(16, 1, 10), float32], Tensor[(16, 2, 10), float64]) {
    %1133 = cast(%var_10677, dtype="float32") /* ty=Tensor[(16, 1, 10), float32] */;
    %1134 = cast(%var_10677, dtype="float64") /* ty=Tensor[(16, 1, 10), float64] */;
    %1135 = cast(%var_10683, dtype="float64") /* ty=Tensor[(16, 2, 10), float64] */;
    %1136 = acosh(%1133) /* ty=Tensor[(16, 1, 10), float32] */;
    %1137 = floor_mod(%1134, %1135) /* ty=Tensor[(16, 2, 10), float64] */;
    (%1136, %1137)
  };
  %1138(%var_10699, %var_10700) /* ty=(Tensor[(16, 1, 10), float32], Tensor[(16, 2, 10), float64]) */
}

def @func_25085() -> Tensor[(10, 2, 16), float32] {
  %1139 = @func_4568() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %1139.2
}

def @func_25195() -> Tensor[(10, 2, 16), float32] {
  %1141 = fn () -> Tensor[(10, 2, 16), float32] {
    %1140 = @func_19427() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
    %1140.2
  };
  %1141() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_8346() -> (Tensor[(10, 2, 16), float64],) {
  @func_8344() /* ty=(Tensor[(10, 2, 16), float64],) */
}

def @func_22976() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float64]) {
  %1142 = @func_1657() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1143 = @func_11721() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), uint8]) */;
  %1144 = %1142.0;
  %1145 = %1143.2;
  %1146 = @func_9423() /* ty=Tensor[(10, 2, 16), float64] */;
  (%1144, %1145, %1146)
}

def @func_22604() -> (Tensor[(10, 2, 16), float32],) {
  @func_22602() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_10676() -> Tensor[(10, 2, 16), float64] {
  @func_10674() /* ty=Tensor[(10, 2, 16), float64] */
}

def @func_7629() -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) {
  %1147 = @func_1766() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool]) */;
  %1148 = @func_6823() /* ty=(Tensor[(10, 2, 16), uint8],) */;
  %1149 = @func_6795() /* ty=Tensor[(10, 2, 16), float64] */;
  %1150 = %1147.0;
  %1151 = %1148.0;
  (%1149, %1150, %1151)
}

def @func_14764() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1161 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
    %1152 = @func_12034() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %1153 = @func_6014() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %1154 = @func_6158() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %1155 = @func_6014() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %1156 = %1152.0;
    %1157 = @func_1518() /* ty=Tensor[(10, 2, 16), float32] */;
    %1158 = %1153.0;
    %1159 = %1154.1;
    %1160 = %1155.0;
    (%1156, %1157, %1158, %1159, %1160)
  };
  %1161() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_25756() -> Tensor[(10, 2, 16), float64] {
  @func_25754() /* ty=Tensor[(10, 2, 16), float64] */
}

def @func_27638() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
  %1162 = @func_11796() /* ty=(Tensor[(10, 2, 16), float64],) */;
  %1163 = @func_6671() /* ty=Tensor[(10, 2, 16), float32] */;
  %1164 = %1162.0;
  (%1163, %1164)
}

def @func_21932() -> (Tensor[(10, 2, 16), uint8],) {
  @func_21930() /* ty=(Tensor[(10, 2, 16), uint8],) */
}

def @func_17671() -> (Tensor[(2, 8, 9), float32],) {
  %1165 = @func_9042() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) */;
  %1166 = %1165.3;
  %1167 = cast(%1166, dtype="float32") /* ty=Tensor[(2, 8, 9), float32] */;
  %1168 = atan(%1167) /* ty=Tensor[(2, 8, 9), float32] */;
  (%1168,)
}

def @func_22014() -> (Tensor[(10, 2, 16), float32],) {
  %1171 = fn () -> (Tensor[(10, 2, 16), float32],) {
    %1169 = @func_4875() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %1170 = %1169.1;
    (%1170,)
  };
  %1171() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_1041() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) {
  %1172 = @func_880() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %1173 = @func_880() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %1174 = %1172.0;
  %1175 = %1173.1;
  (%1174, %1175)
}

def @func_7273() -> (Tensor[(2, 8, 9), float32],) {
  %1176 = @func_5718() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) */;
  %1177 = %1176.1;
  (%1177,)
}

def @func_8839() -> Tensor[(10, 2, 16), float32] {
  %1178 = @func_2256() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
  %1178.0
}

def @func_10642() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1185 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
    %1179 = @func_2783() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %1180 = @func_4875() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %1181 = @func_1989() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %1182 = %1179.0;
    %1183 = %1180.0;
    %1184 = %1181.2;
    (%1182, %1183, %1184)
  };
  %1185() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_10771() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  @func_10769() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_4050() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48, 1), float32]) {
  %1194 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48, 1), float32]) {
    %1186 = @func_431() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
    %1187 = cast(meta[relay.Constant][22] /* ty=Tensor[(48, 1), float32] */, dtype="float32") /* ty=Tensor[(48, 1), float32] */;
    %1188 = reshape(%1187, newshape=[48]) /* ty=Tensor[(48), float32] */;
    %1189 = @func_621(%1188) /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(4, 3, 4), float32], Tensor[(48), float32]) */;
    %1190 = cast(meta[relay.Constant][22] /* ty=Tensor[(48, 1), float32] */, dtype="float32") /* ty=Tensor[(48, 1), float32] */;
    %1191 = %1186.0;
    %1192 = %1189.1;
    %1193 = sinh(%1190) /* ty=Tensor[(48, 1), float32] */;
    (%1191, %1192, %1193)
  };
  %1194() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48, 1), float32]) */
}

def @func_10489() -> Tensor[(8, ?, 2), bool] {
  @func_10487() /* ty=Tensor[(8, ?, 2), bool] */
}

def @func_16748() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1195 = @func_1476() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1196 = @func_6728() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(432), float32]) */;
  %1197 = @func_2008() /* ty=Tensor[(10, 2, 16), float32] */;
  %1198 = %1195.0;
  %1199 = @func_16463() /* ty=Tensor[(10, 2, 16), float32] */;
  %1200 = @func_305() /* ty=Tensor[(10, 2, 16), float32] */;
  %1201 = %1196.0;
  (%1197, %1198, %1199, %1200, %1201)
}

def @func_23544() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), bool], Tensor[(432), float32]) {
  %1202 = @func_13020() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1203 = @func_19373() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1204 = @func_9966() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
  %1205 = @func_8538() /* ty=(Tensor[(2400), int16], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float64], Tensor[(432), float32], Tensor[(10, 2, 16), float32]) */;
  %1206 = %1202.1;
  %1207 = %1203.0;
  %1208 = %1204.1;
  %1209 = %1205.1;
  %1210 = @func_20437() /* ty=Tensor[(432), float32] */;
  (%1206, %1207, %1208, %1209, %1210)
}

def @func_25589() -> (Tensor[(10, 2, 16), float32],) {
  @func_25587() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_8105() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(10, 2, 16), float32]) {
  @func_8103() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_18472() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1215 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
    %1211 = @func_1437() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(6, 9, 8), float32], Tensor[(432), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %1212 = @func_6349() /* ty=(Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %1213 = %1211.3;
    %1214 = %1212.2;
    (%1213, %1214)
  };
  %1215() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_12556() -> (Tensor[(15, 11, 2), bool],) {
  %1216 = cast(meta[relay.Constant][23] /* ty=Tensor[(15, 11, 2), float64] */, dtype="float64") /* ty=Tensor[(15, 11, 2), float64] */;
  %1217 = asinh(%1216) /* ty=Tensor[(15, 11, 2), float64] */;
  %1218 = cast(meta[relay.Constant][23] /* ty=Tensor[(15, 11, 2), float64] */, dtype="bool") /* ty=Tensor[(15, 11, 2), bool] */;
  %1219 = shape_of(%1217, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1220 = cast(%1217, dtype="bool") /* ty=Tensor[(15, 11, 2), bool] */;
  %1221 = dyn.reshape(%1218, %1219, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1222 = greater(%1220, %1221) /* ty=Tensor[(15, 11, 2), bool] */;
  (%1222,)
}

def @func_624(%var_622: Tensor[(48), float32]) -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(4, 3, 4), float32], Tensor[(48), float32]) {
  @func_621(%var_622) /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(4, 3, 4), float32], Tensor[(48), float32]) */
}

def @func_14046() -> (Tensor[(432), float32], Tensor[(10, 2, 16), float64]) {
  %1223 = @func_10428() /* ty=(Tensor[(10, 2, 16), float64],) */;
  %1224 = @func_10716() /* ty=Tensor[(432), float32] */;
  %1225 = %1223.0;
  (%1224, %1225)
}

def @func_13080() -> Tensor[(48), float32] {
  %1227 = fn () -> Tensor[(48), float32] {
    %1226 = @func_9573() /* ty=(Tensor[(48), float32],) */;
    %1226.0
  };
  %1227() /* ty=Tensor[(48), float32] */
}

def @func_19249() -> Tensor[(2, 3, 3), float32] {
  %1229 = fn () -> Tensor[(2, 3, 3), float32] {
    %1228 = @func_8728() /* ty=(Tensor[(2, 3, 3), float32], Tensor[(10, 2, 16), float32]) */;
    %1228.0
  };
  %1229() /* ty=Tensor[(2, 3, 3), float32] */
}

def @func_23720() -> (Tensor[(432), float32],) {
  @func_23718() /* ty=(Tensor[(432), float32],) */
}

def @func_24531(%var_24518: Tensor[(9, 7, 14), float64]) -> (Tensor[(9, 7, 14), float64], Tensor[(9, 7, 14), float32]) {
  %1230 = cast(%var_24518, dtype="float64") /* ty=Tensor[(9, 7, 14), float64] */;
  %1231 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(9, 7, 14), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1232 = cast(meta[relay.Constant][24] /* ty=Tensor[(9, 7, 14), float64] */, dtype="float64") /* ty=Tensor[(9, 7, 14), float64] */;
  %1233 = dyn.reshape(%1230, %1231, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1234 = cast(meta[relay.Constant][24] /* ty=Tensor[(9, 7, 14), float64] */, dtype="float32") /* ty=Tensor[(9, 7, 14), float32] */;
  %1235 = floor_mod(%1232, %1233) /* ty=Tensor[(9, 7, 14), float64] */;
  %1236 = tan(%1234) /* ty=Tensor[(9, 7, 14), float32] */;
  (%1235, %1236)
}

def @func_12867() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1240 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
    %1237 = @func_3030() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32]) */;
    %1238 = @func_305() /* ty=Tensor[(10, 2, 16), float32] */;
    %1239 = %1237.0;
    (%1238, %1239)
  };
  %1240() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_16509() -> (Tensor[(2, 8, 9), float32],) {
  @func_16507() /* ty=(Tensor[(2, 8, 9), float32],) */
}

def @func_21758() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float64]) {
  %1241 = @func_14046() /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), float64]) */;
  %1242 = @func_18480() /* ty=Tensor[(10, 2, 16), float32] */;
  %1243 = @func_15729() /* ty=Tensor[(10, 2, 16), float32] */;
  %1244 = @func_9423() /* ty=Tensor[(10, 2, 16), float64] */;
  %1245 = %1241.1;
  (%1242, %1243, %1244, %1245)
}

def @func_2135() -> (Tensor[(10, 2, 16), float32],) {
  %1247 = fn () -> (Tensor[(10, 2, 16), float32],) {
    %1246 = @func_305() /* ty=Tensor[(10, 2, 16), float32] */;
    (%1246,)
  };
  %1247() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_22461() -> Tensor[(2, 8, 9), float32] {
  %1249 = fn () -> Tensor[(2, 8, 9), float32] {
    %1248 = @func_15868() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) */;
    %1248.4
  };
  %1249() /* ty=Tensor[(2, 8, 9), float32] */
}

def @func_20792() -> (Tensor[(10, 2, 16), float32],) {
  @func_20790() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_13198() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  @func_13196() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_15666() -> Tensor[(10, 2, 16), float32] {
  @func_15664() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_13905() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1252 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
    %1250 = @func_257() /* ty=Tensor[(10, 2, 16), float32] */;
    %1251 = @func_305() /* ty=Tensor[(10, 2, 16), float32] */;
    (%1250, %1251)
  };
  %1252() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_737(%var_736: Tensor[(6, 9, 8), float32]) -> Tensor[(6, 9, 8), float32] {
  %1254 = fn (%var_719: Tensor[(6, 9, 8), float32]) -> Tensor[(6, 9, 8), float32] {
    %1253 = cast(%var_719, dtype="float32") /* ty=Tensor[(6, 9, 8), float32] */;
    cos(%1253) /* ty=Tensor[(6, 9, 8), float32] */
  };
  %1254(%var_736) /* ty=Tensor[(6, 9, 8), float32] */
}

def @func_17320() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1259 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
    %1255 = @func_6014() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %1256 = @func_13061() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32]) */;
    %1257 = %1255.0;
    %1258 = %1256.0;
    (%1257, %1258)
  };
  %1259() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_6326() -> Tensor[(10, 2, 16), float32] {
  %1261 = fn () -> Tensor[(10, 2, 16), float32] {
    %1260 = @func_1630() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
    %1260.2
  };
  %1261() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_12261() -> Tensor[(2, 3, 3), float32] {
  %1262 = @func_8728() /* ty=(Tensor[(2, 3, 3), float32], Tensor[(10, 2, 16), float32]) */;
  %1262.0
}

def @func_14887() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  @func_14885() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_26219() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool]) {
  @func_26217() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool]) */
}

def @func_26552() -> (Tensor[(10, 2, 16), uint8],) {
  %1263 = @func_1332() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
  %1264 = %1263.2;
  (%1264,)
}

def @func_11131() -> Tensor[(10, 2, 16), float32] {
  %1266 = fn () -> Tensor[(10, 2, 16), float32] {
    %1265 = @func_8655() /* ty=(Tensor[(6, 9, 8), float32], Tensor[(10, 2, 16), float32]) */;
    %1265.1
  };
  %1266() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_3883() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  @func_3881() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_16463() -> Tensor[(10, 2, 16), float32] {
  %1267 = @func_9091() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1267.1
}

def @func_7959() -> Tensor[(10, 2, 16), float32] {
  %1268 = @func_7388() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 16, 15), int16]) */;
  %1268.3
}

def @func_21806() -> (Tensor[(432), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1274 = fn () -> (Tensor[(432), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
    %1269 = @func_6728() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(432), float32]) */;
    %1270 = @func_9140() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %1271 = %1269.2;
    %1272 = %1270.0;
    %1273 = @func_3845() /* ty=Tensor[(10, 2, 16), float32] */;
    (%1271, %1272, %1273)
  };
  %1274() /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_22771() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  @func_22769() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_7015(%var_6984: Tensor[(1, 70), float32]) -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(1, 70), float32], Tensor[(10, 7, 48), float32]) {
  %1275 = @func_5466() /* ty=(Tensor[(10, 2, 16), float64],) */;
  %1276 = @func_5402() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(432), float32]) */;
  %1277 = cast(meta[relay.Constant][25] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %1278 = reshape(%1277, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %1279 = @func_621(%1278) /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(4, 3, 4), float32], Tensor[(48), float32]) */;
  %1280 = cast(%var_6984, dtype="float32") /* ty=Tensor[(1, 70), float32] */;
  %1281 = reshape(%1280, newshape=[10, 7, 1]) /* ty=Tensor[(10, 7, 1), float32] */;
  %1282 = @func_4531(%1281) /* ty=(Tensor[(10, 7, 1), float32], Tensor[(10, 2, 16), float32]) */;
  %1283 = %1282.0;
  %1284 = cast(meta[relay.Constant][25] /* ty=Tensor[(48), float32] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %1285 = cast(%1283, dtype="float64") /* ty=Tensor[(10, 7, 1), float64] */;
  %1286 = mod(%1284, %1285) /* ty=Tensor[(10, 7, 48), float64] */;
  %1287 = cast(%1286, dtype="float32") /* ty=Tensor[(10, 7, 48), float32] */;
  %1288 = %1275.0;
  %1289 = %1276.1;
  %1290 = %1279.1;
  %1291 = exp(%1287) /* ty=Tensor[(10, 7, 48), float32] */;
  (%1288, %1289, %1290, %var_6984, %1291)
}

def @func_3620(%var_3577: int16) -> (Tensor[(10, 2, 16), float32], Tensor[(20), int16], Tensor[(10, 1, 2), bool], Tensor[(10, 2, 16), float32]) {
  %1292 = cast(%var_3577, dtype="int16") /* ty=int16 */;
  %1293 = cast(meta[relay.Constant][26] /* ty=Tensor[(20), int16] */, dtype="int16") /* ty=Tensor[(20), int16] */;
  %1294 = reshape(%1292, newshape=[]) /* ty=int16 */;
  %1295 = reshape(%1293, newshape=[10, 1, 2]) /* ty=Tensor[(10, 1, 2), int16] */;
  %1296 = @func_3097(%1294, %1295) /* ty=(Tensor[(10, 1, 2), int16], Tensor[(10, 2, 16), float32]) */;
  %1297 = %1296.0;
  %1298 = cast(%1297, dtype="bool") /* ty=Tensor[(10, 1, 2), bool] */;
  %1299 = cast(%var_3577, dtype="bool") /* ty=bool */;
  %1300 = @func_1156() /* ty=Tensor[(10, 2, 16), float32] */;
  %1301 = logical_or(%1298, %1299) /* ty=Tensor[(10, 1, 2), bool] */;
  %1302 = @func_305() /* ty=Tensor[(10, 2, 16), float32] */;
  (%1300, meta[relay.Constant][26] /* ty=Tensor[(20), int16] */, %1301, %1302)
}

def @func_6672() -> Tensor[(10, 2, 16), float32] {
  %1304 = fn () -> Tensor[(10, 2, 16), float32] {
    %1303 = @func_327() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %1303.0
  };
  %1304() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_18827() -> (Tensor[(10, 2, 16), bool], Tensor[(12, 10, 12), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1305 = @func_6349() /* ty=(Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1306 = cast(meta[relay.Constant][27] /* ty=Tensor[(12, 10, 12), float64] */, dtype="float64") /* ty=Tensor[(12, 10, 12), float64] */;
  %1307 = exp(%1306) /* ty=Tensor[(12, 10, 12), float64] */;
  %1308 = cast(meta[relay.Constant][27] /* ty=Tensor[(12, 10, 12), float64] */, dtype="float64") /* ty=Tensor[(12, 10, 12), float64] */;
  %1309 = atanh(%1308) /* ty=Tensor[(12, 10, 12), float64] */;
  %1310 = cast(%1309, dtype="float32") /* ty=Tensor[(12, 10, 12), float32] */;
  %1311 = shape_of(%1307, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1312 = cast(%1307, dtype="float32") /* ty=Tensor[(12, 10, 12), float32] */;
  %1313 = dyn.reshape(%1310, %1311, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1314 = @func_12113() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %1315 = @func_4875() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1316 = @func_2134() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1317 = %1305.0;
  %1318 = multiply(%1312, %1313) /* ty=Tensor[(12, 10, 12), float32] */;
  %1319 = %1314.1;
  %1320 = %1315.1;
  %1321 = %1316.0;
  (%1317, %1318, %1319, %1320, %1321)
}

def @func_26554() -> (Tensor[(10, 2, 16), uint8],) {
  @func_26552() /* ty=(Tensor[(10, 2, 16), uint8],) */
}

def @func_12722() -> (Tensor[(10, 2, 16), float32], Tensor[(432), float32]) {
  %1322 = @func_257() /* ty=Tensor[(10, 2, 16), float32] */;
  %1323 = @func_5322() /* ty=Tensor[(432), float32] */;
  (%1322, %1323)
}

def @func_9399() -> (Tensor[(10, 2, 16), float32],) {
  @func_9397() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_20650() -> Tensor[(432), float32] {
  %1324 = @func_12722() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32]) */;
  %1324.1
}

def @func_20606() -> Tensor[(10, 2, 16), float32] {
  %1325 = @func_16186() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1325.0
}

def @func_1958() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1326 = @func_1041() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %1327 = @func_1657() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1328 = %1326.1;
  %1329 = %1327.0;
  (%1328, %1329)
}

def @func_12659(%var_12620: int8, %var_12621: Tensor[(11, 13, 6), int8]) -> (Tensor[(11, 13, 6), int8], Tensor[(6, 9, 8), float32], Tensor[(432), float32], Tensor[(2, 8, 9), float32]) {
  %1330 = cast(%var_12620, dtype="int8") /* ty=int8 */;
  %1331 = cast(%var_12621, dtype="int8") /* ty=Tensor[(11, 13, 6), int8] */;
  %1332 = cast(meta[relay.Constant][28] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1333 = reshape(%1332, newshape=[6, 9, 8]) /* ty=Tensor[(6, 9, 8), float32] */;
  %1334 = maximum(%1330, %1331) /* ty=Tensor[(11, 13, 6), int8] */;
  %1335 = @func_735(%1333) /* ty=Tensor[(6, 9, 8), float32] */;
  %1336 = @func_11348() /* ty=Tensor[(2, 8, 9), float32] */;
  (%1334, %1335, meta[relay.Constant][28] /* ty=Tensor[(432), float32] */, %1336)
}

def @func_16477() -> (Tensor[(10, 2, 16), float32],) {
  @func_16475() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_13021() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1341 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
    %1337 = @func_6801() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %1338 = @func_1476() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %1339 = %1337.0;
    %1340 = %1338.2;
    (%1339, %1340)
  };
  %1341() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_18113() -> (Tensor[(10, 2, 16), float32],) {
  %1342 = @func_14161() /* ty=Tensor[(10, 2, 16), float32] */;
  (%1342,)
}

def @func_20439() -> Tensor[(432), float32] {
  @func_20437() /* ty=Tensor[(432), float32] */
}

def @func_24745() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1346 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
    %1343 = @func_2960() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), float32]) */;
    %1344 = @func_7959() /* ty=Tensor[(10, 2, 16), float32] */;
    %1345 = %1343.2;
    (%1344, %1345)
  };
  %1346() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_6730() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(432), float32]) {
  @func_6728() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(432), float32]) */
}

def @func_28477() -> Tensor[(8, ?, 2), bool] {
  %1347 = @func_1688() /* ty=(Tensor[(4, 3, 4), float32], Tensor[(48), float32], Tensor[(8, ?, 2), bool], Tensor[(8, 1, 2), float32]) */;
  %1347.2
}

def @func_9337(%var_9335: Tensor[(16, 16, 10), int32], %var_9336: Tensor[(16, 16, 10), int32]) -> (Tensor[(16, 16, 10), int32], Tensor[(10, 2, 16), float32]) {
  %1354 = fn (%var_9319: Tensor[(16, 16, 10), int32], %var_9320: Tensor[(16, 16, 10), int32]) -> (Tensor[(16, 16, 10), int32], Tensor[(10, 2, 16), float32]) {
    %1348 = cast(%var_9320, dtype="int32") /* ty=Tensor[(16, 16, 10), int32] */;
    %1349 = shape_of(%var_9319, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1350 = cast(%var_9319, dtype="int32") /* ty=Tensor[(16, 16, 10), int32] */;
    %1351 = dyn.reshape(%1348, %1349, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %1352 = bitwise_and(%1350, %1351) /* ty=Tensor[(16, 16, 10), int32] */;
    %1353 = @func_4372() /* ty=Tensor[(10, 2, 16), float32] */;
    (%1352, %1353)
  };
  %1354(%var_9335, %var_9336) /* ty=(Tensor[(16, 16, 10), int32], Tensor[(10, 2, 16), float32]) */
}

def @func_27479() -> (Tensor[(10, 2, 16), uint8],) {
  @func_27477() /* ty=(Tensor[(10, 2, 16), uint8],) */
}

def @func_27848() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(432), float32]) {
  @func_27846() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(432), float32]) */
}

def @func_20751(%var_20749: float32) -> (Tensor[(432), float32], Tensor[(10, 2, 16), float32], float32, Tensor[(10, 2, 16), float32]) {
  @func_20748(%var_20749) /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), float32], float32, Tensor[(10, 2, 16), float32]) */
}

def @func_3623(%var_3621: int16) -> (Tensor[(10, 2, 16), float32], Tensor[(20), int16], Tensor[(10, 1, 2), bool], Tensor[(10, 2, 16), float32]) {
  @func_3620(%var_3621) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(20), int16], Tensor[(10, 1, 2), bool], Tensor[(10, 2, 16), float32]) */
}

def @func_26962() -> (Tensor[(10, 2, 16), float32],) {
  @func_26960() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_11307() -> (Tensor[(10, 2, 16), float32],) {
  @func_11305() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_22078() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) {
  @func_22076() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */
}

def @func_13656() -> (Tensor[(10, 7, 48), float64], Tensor[(10, 2, 16), float32]) {
  %1355 = @func_8608() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 7, 48), float32], Tensor[(70), float32]) */;
  %1356 = %1355.3;
  %1357 = cast(%1356, dtype="float64") /* ty=Tensor[(10, 7, 48), float64] */;
  %1358 = sigmoid(%1357) /* ty=Tensor[(10, 7, 48), float64] */;
  %1359 = cast(%1356, dtype="float32") /* ty=Tensor[(10, 7, 48), float32] */;
  %1360 = shape_of(%1358, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1361 = cast(%1358, dtype="float32") /* ty=Tensor[(10, 7, 48), float32] */;
  %1362 = dyn.reshape(%1359, %1360, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1363 = minimum(%1361, %1362) /* ty=Tensor[(10, 7, 48), float32] */;
  %1364 = cast(%1356, dtype="float64") /* ty=Tensor[(10, 7, 48), float64] */;
  %1365 = shape_of(%1363, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1366 = cast(%1363, dtype="float64") /* ty=Tensor[(10, 7, 48), float64] */;
  %1367 = dyn.reshape(%1364, %1365, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1368 = @func_13294() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1369 = floor_divide(%1366, %1367) /* ty=Tensor[(10, 7, 48), float64] */;
  %1370 = %1368.0;
  (%1369, %1370)
}

def @func_13826() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
  @func_13824() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */
}

def @func_10245() -> Tensor[(10, 2, 16), float32] {
  %1371 = @func_8227() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1371.0
}

def @func_27748() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1382 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
    %1372 = @func_16224() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
    %1373 = @func_17319() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %1374 = @func_24982() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %1375 = @func_8655() /* ty=(Tensor[(6, 9, 8), float32], Tensor[(10, 2, 16), float32]) */;
    %1376 = @func_11851() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8]) */;
    %1377 = %1372.1;
    %1378 = %1373.0;
    %1379 = %1374.0;
    %1380 = %1375.1;
    %1381 = %1376.2;
    (%1377, %1378, %1379, %1380, %1381)
  };
  %1382() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_19319() -> (Tensor[(10, 6, 8), float32],) {
  @func_19317() /* ty=(Tensor[(10, 6, 8), float32],) */
}

def @func_5831() -> Tensor[(432), float32] {
  @func_5829() /* ty=Tensor[(432), float32] */
}

def @func_13690() -> (Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32], Tensor[(10, 2, 16), bool]) {
  @func_13688() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32], Tensor[(10, 2, 16), bool]) */
}

def @func_15382() -> (Tensor[(48), float32],) {
  %1385 = fn () -> (Tensor[(48), float32],) {
    %1383 = @func_9573() /* ty=(Tensor[(48), float32],) */;
    %1384 = %1383.0;
    (%1384,)
  };
  %1385() /* ty=(Tensor[(48), float32],) */
}

def @func_10554() -> Tensor[(10, 2, 16), float32] {
  @func_10552() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_12373() -> (Tensor[(432), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) {
  %1386 = @func_8344() /* ty=(Tensor[(10, 2, 16), float64],) */;
  %1387 = @func_9397() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1388 = @func_10716() /* ty=Tensor[(432), float32] */;
  %1389 = %1386.0;
  %1390 = %1387.0;
  (%1388, %1389, %1390)
}

def @func_16750() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  @func_16748() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_19656() -> (Tensor[(10, 2, 16), float32],) {
  %1391 = @func_3474() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1392 = %1391.0;
  (%1392,)
}

def @func_22318() -> (Tensor[(10, 2, 16), float32],) {
  %1393 = @func_13932() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1394 = %1393.0;
  (%1394,)
}

def @func_1334() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) {
  @func_1332() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */
}

def @func_10552() -> Tensor[(10, 2, 16), float32] {
  %1395 = @func_10505() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %1395.0
}

def @func_24211() -> Tensor[(10, 2, 16), float32] {
  %1397 = fn () -> Tensor[(10, 2, 16), float32] {
    %1396 = @func_19656() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %1396.0
  };
  %1397() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_13230() -> Tensor[(10, 2, 16), float32] {
  @func_1518() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_258() -> Tensor[(10, 2, 16), float32] {
  %1399 = fn () -> Tensor[(10, 2, 16), float32] {
    %1398 = cast(meta[relay.Constant][29] /* ty=Tensor[(10, 2, 16), float32] */, dtype="float32") /* ty=Tensor[(10, 2, 16), float32] */;
    log10(%1398) /* ty=Tensor[(10, 2, 16), float32] */
  };
  %1399() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_1377() -> Tensor[(10, 2, 16), float32] {
  @func_1156() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_9602() -> Tensor[(10, 2, 16), float64] {
  %1401 = fn () -> Tensor[(10, 2, 16), float64] {
    %1400 = @func_3368() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
    %1400.3
  };
  %1401() /* ty=Tensor[(10, 2, 16), float64] */
}

def @func_26359() -> (Tensor[(10, 2, 16), float32],) {
  @func_26357() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_14262(%var_14260: int8) -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], int8, Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  @func_14259(%var_14260) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], int8, Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_28451(%var_28450: Tensor[(2, 3, 3), float32]) -> (Tensor[(10, 2, 16), float32], Tensor[(2, 3, 3), float32], Tensor[(10, 2, 16), float32], Tensor[(8, 6, 2), int64], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) {
  %1420 = fn (%var_28380: Tensor[(2, 3, 3), float32]) -> (Tensor[(10, 2, 16), float32], Tensor[(2, 3, 3), float32], Tensor[(10, 2, 16), float32], Tensor[(8, 6, 2), int64], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) {
    %1402 = @func_25256() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %1403 = @func_19248() /* ty=Tensor[(2, 3, 3), float32] */;
    %1404 = cast(%var_28380, dtype="float32") /* ty=Tensor[(2, 3, 3), float32] */;
    %1405 = shape_of(%1403, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1406 = cast(%1403, dtype="float32") /* ty=Tensor[(2, 3, 3), float32] */;
    %1407 = dyn.reshape(%1404, %1405, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1408 = @func_14954() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %1409 = @func_10278() /* ty=Tensor[(8, ?, 2), bool] */;
    %1410 = cast(%1409, dtype="int64") /* ty=Tensor[(8, ?, 2), int64] */;
    %1411 = cast(meta[relay.Constant][30] /* ty=Tensor[(8, 6, 2), bool] */, dtype="int64") /* ty=Tensor[(8, 6, 2), int64] */;
    %1412 = @func_19427() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
    %1413 = @func_7146() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %1414 = %1402.0;
    %1415 = minimum(%1406, %1407) /* ty=Tensor[(2, 3, 3), float32] */;
    %1416 = %1408.0;
    %1417 = minimum(%1410, %1411) /* ty=Tensor[(8, 6, 2), int64] */;
    %1418 = %1412.4;
    %1419 = %1413.0;
    (%1414, %1415, %1416, %1417, %1418, %1419)
  };
  %1420(%var_28450) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(2, 3, 3), float32], Tensor[(10, 2, 16), float32], Tensor[(8, 6, 2), int64], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */
}

def @func_8671() -> (Tensor[(10, 2, 16), float32],) {
  %1421 = @func_880() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %1422 = %1421.1;
  (%1422,)
}

def @func_16186() -> (Tensor[(10, 2, 16), float32],) {
  %1423 = @func_11195() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
  %1424 = %1423.1;
  (%1424,)
}

def @func_26132() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1429 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
    %1425 = @func_10794() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %1426 = @func_12742() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %1427 = %1425.0;
    %1428 = %1426.0;
    (%1427, %1428)
  };
  %1429() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_3440() -> (Tensor[(2, 8, 9), float32], Tensor[(10, 2, 16), float32], Tensor[(8, ?, 2), bool]) {
  %1436 = fn () -> (Tensor[(2, 8, 9), float32], Tensor[(10, 2, 16), float32], Tensor[(8, ?, 2), bool]) {
    %1430 = cast(meta[relay.Constant][31] /* ty=Tensor[(2, 8, 9), float32] */, dtype="float32") /* ty=Tensor[(2, 8, 9), float32] */;
    %1431 = @func_2783() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %1432 = @func_1688() /* ty=(Tensor[(4, 3, 4), float32], Tensor[(48), float32], Tensor[(8, ?, 2), bool], Tensor[(8, 1, 2), float32]) */;
    %1433 = exp(%1430) /* ty=Tensor[(2, 8, 9), float32] */;
    %1434 = %1431.0;
    %1435 = %1432.2;
    (%1433, %1434, %1435)
  };
  %1436() /* ty=(Tensor[(2, 8, 9), float32], Tensor[(10, 2, 16), float32], Tensor[(8, ?, 2), bool]) */
}

def @func_16061() -> (Tensor[(2, 8, 9), float32], Tensor[(2, 8, 9), float32], Tensor[(432), float32]) {
  @func_16059() /* ty=(Tensor[(2, 8, 9), float32], Tensor[(2, 8, 9), float32], Tensor[(432), float32]) */
}

def @func_11197() -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) {
  @func_11195() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */
}

def @func_3031() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32]) {
  %1443 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32]) {
    %1437 = @func_2515() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
    %1438 = @func_1766() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool]) */;
    %1439 = @func_584() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %1440 = %1437.0;
    %1441 = %1438.2;
    %1442 = %1439.0;
    (%1440, %1441, %1442)
  };
  %1443() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32]) */
}

def @func_26846() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  @func_26844() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_2783() -> (Tensor[(10, 2, 16), float32],) {
  %1444 = @func_257() /* ty=Tensor[(10, 2, 16), float32] */;
  (%1444,)
}

def @func_15779() -> Tensor[(10, 2, 16), float32] {
  %1445 = @func_14651() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1445.0
}

def @func_16870(%var_16853: Tensor[(2, 3, 12), float64]) -> (Tensor[(2, 3, 12), float64], Tensor[(10, 2, 16), float32]) {
  %1446 = cast(%var_16853, dtype="float64") /* ty=Tensor[(2, 3, 12), float64] */;
  %1447 = @func_14763() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1448 = acosh(%1446) /* ty=Tensor[(2, 3, 12), float64] */;
  %1449 = %1447.1;
  (%1448, %1449)
}

def @func_15730() -> Tensor[(10, 2, 16), float32] {
  %1451 = fn () -> Tensor[(10, 2, 16), float32] {
    %1450 = @func_13294() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %1450.0
  };
  %1451() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_21958() -> Tensor[(10, 2, 16), float32] {
  %1452 = @func_1989() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1452.2
}

def @func_25560() -> (Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), float32]) {
  %1457 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), float32]) {
    %1453 = @func_15633() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %1454 = %1453.0;
    %1455 = @func_2078() /* ty=Tensor[(432), float32] */;
    %1456 = @func_6325() /* ty=Tensor[(10, 2, 16), float32] */;
    (%1454, %1455, %1456)
  };
  %1457() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_10997() -> Tensor[(10, 2, 16), uint8] {
  @func_10995() /* ty=Tensor[(10, 2, 16), uint8] */
}

def @func_13610(%var_13608: float32, %var_13609: Tensor[(9, 14, 16), float32]) -> Tensor[(9, 14, 16), float32] {
  @func_13606(%var_13608, %var_13609) /* ty=Tensor[(9, 14, 16), float32] */
}

def @func_5193(%var_5190: Tensor[(16, 8, 5), uint16], %var_5191: Tensor[(16, 8, 5), uint16], %var_5192: Tensor[(16, 8, 5), uint16]) -> (Tensor[(16, 8, 5), bool], Tensor[(16, 8, 5), int8]) {
  @func_5188(%var_5190, %var_5191, %var_5192) /* ty=(Tensor[(16, 8, 5), bool], Tensor[(16, 8, 5), int8]) */
}

def @func_20587() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(16, 4, 14), int64]) {
  %1465 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(16, 4, 14), int64]) {
    %1458 = @func_17860() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %1459 = @func_2711() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %1460 = @func_11879() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(16, 4, 14), int64], Tensor[(896), int64]) */;
    %1461 = %1458.0;
    %1462 = @func_19761() /* ty=Tensor[(10, 2, 16), float32] */;
    %1463 = %1459.0;
    %1464 = %1460.1;
    (%1461, %1462, %1463, %1464)
  };
  %1465() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(16, 4, 14), int64]) */
}

def @func_7432() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1466 = @func_4674() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %1467 = @func_4925() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1468 = %1466.2;
  %1469 = @func_3845() /* ty=Tensor[(10, 2, 16), float32] */;
  %1470 = %1467.0;
  (%1468, %1469, %1470)
}

def @func_6824() -> (Tensor[(10, 2, 16), uint8],) {
  %1473 = fn () -> (Tensor[(10, 2, 16), uint8],) {
    %1471 = @func_1989() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %1472 = %1471.0;
    (%1472,)
  };
  %1473() /* ty=(Tensor[(10, 2, 16), uint8],) */
}

def @func_5160() -> Tensor[(10, 2, 16), uint8] {
  @func_5158() /* ty=Tensor[(10, 2, 16), uint8] */
}

def @func_7153() -> Tensor[(10, 2, 16), float32] {
  %1475 = fn () -> Tensor[(10, 2, 16), float32] {
    %1474 = @func_1496() /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), float32]) */;
    %1474.1
  };
  %1475() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_12831() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1476 = @func_362() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1477 = @func_362() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1478 = %1476.0;
  %1479 = %1477.0;
  (%1478, %1479)
}

def @func_16059() -> (Tensor[(2, 8, 9), float32], Tensor[(2, 8, 9), float32], Tensor[(432), float32]) {
  %1480 = @func_7273() /* ty=(Tensor[(2, 8, 9), float32],) */;
  %1481 = @func_6728() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(432), float32]) */;
  %1482 = %1480.0;
  %1483 = @func_11348() /* ty=Tensor[(2, 8, 9), float32] */;
  %1484 = %1481.2;
  (%1482, %1483, %1484)
}

def @func_23595() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) {
  %1491 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) {
    %1485 = @func_22769() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %1486 = @func_16748() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %1487 = @func_11649() /* ty=(Tensor[(10, 2, 16), uint8],) */;
    %1488 = %1485.3;
    %1489 = %1486.4;
    %1490 = %1487.0;
    (%1488, %1489, %1490)
  };
  %1491() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */
}

def @func_8540() -> (Tensor[(2400), int16], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float64], Tensor[(432), float32], Tensor[(10, 2, 16), float32]) {
  @func_8538() /* ty=(Tensor[(2400), int16], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float64], Tensor[(432), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_21709() -> Tensor[(2400), float32] {
  %1492 = @func_4799() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(2400), int16]) */;
  %1493 = %1492.1;
  %1494 = cast(%1493, dtype="float32") /* ty=Tensor[(2400), float32] */;
  log(%1494) /* ty=Tensor[(2400), float32] */
}

def @func_23788() -> (Tensor[(10, 2, 16), float64], Tensor[(48), float32]) {
  @func_23786() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(48), float32]) */
}

def @func_24132() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  @func_24130() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_26096() -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) {
  @func_26094() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */
}

def @func_9044() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) {
  @func_9042() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) */
}

def @func_712() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) {
  %1500 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) {
    %1495 = cast(meta[relay.Constant][32] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
    %1496 = reshape(%1495, newshape=[48]) /* ty=Tensor[(48), float32] */;
    %1497 = @func_621(%1496) /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(4, 3, 4), float32], Tensor[(48), float32]) */;
    %1498 = @func_445() /* ty=Tensor[(10, 2, 16), float32] */;
    %1499 = %1497.1;
    (%1498, %1499, meta[relay.Constant][32] /* ty=Tensor[(48), float32] */)
  };
  %1500() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) */
}

def @func_432() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
  %1507 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
    %1501 = @func_407() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %1502 = @func_362() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %1503 = %1502.0;
    %1504 = cast(%1503, dtype="float64") /* ty=Tensor[(10, 2, 16), float64] */;
    %1505 = %1501.1;
    %1506 = asinh(%1504) /* ty=Tensor[(10, 2, 16), float64] */;
    (%1505, %1506)
  };
  %1507() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */
}

def @func_20425() -> (Tensor[(14, 5, 6), bool], Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) {
  %1508 = cast(meta[relay.Constant][34] /* ty=Tensor[(14, 5, 6), bool] */, dtype="bool") /* ty=Tensor[(14, 5, 6), bool] */;
  %1509 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(14, 5, 6), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1510 = cast(meta[relay.Constant][33] /* ty=Tensor[(14, 5, 6), bool] */, dtype="bool") /* ty=Tensor[(14, 5, 6), bool] */;
  %1511 = dyn.reshape(%1508, %1509, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1512 = @func_9686() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1513 = @func_7914() /* ty=(Tensor[(2, 8, 9), float32],) */;
  %1514 = logical_and(%1510, %1511) /* ty=Tensor[(14, 5, 6), bool] */;
  %1515 = %1512.0;
  %1516 = %1513.0;
  (%1514, %1515, %1516)
}

def @func_2613(%var_2607: Tensor[(48), float32]) -> (Tensor[(10, 2, 16), uint8], Tensor[(6, 9, 8), float32], Tensor[(6, 9, 8), bool], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) {
  %1517 = @func_880() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %1518 = @func_1437() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(6, 9, 8), float32], Tensor[(432), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1519 = %1518.1;
  %1520 = cast(%1519, dtype="float32") /* ty=Tensor[(6, 9, 8), float32] */;
  %1521 = cast(meta[relay.Constant][35] /* ty=Tensor[(6, 9, 8), float32] */, dtype="bool") /* ty=Tensor[(6, 9, 8), bool] */;
  %1522 = shape_of(%1519, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1523 = cast(%1519, dtype="bool") /* ty=Tensor[(6, 9, 8), bool] */;
  %1524 = dyn.reshape(%1521, %1522, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1525 = @func_1545() /* ty=(Tensor[(10, 2, 16), uint8],) */;
  %1526 = cast(%var_2607, dtype="float32") /* ty=Tensor[(48), float32] */;
  %1527 = reshape(%1526, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %1528 = @func_672(%1527) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(4, 3, 4), float32], Tensor[(48), float32], Tensor[(4, 3, 4), float32]) */;
  %1529 = %1517.0;
  %1530 = atanh(%1520) /* ty=Tensor[(6, 9, 8), float32] */;
  %1531 = not_equal(%1523, %1524) /* ty=Tensor[(6, 9, 8), bool] */;
  %1532 = %1525.0;
  %1533 = %1528.0;
  (%1529, %1530, %1531, %1532, %1533, %var_2607)
}

def @func_19054(%var_19053: Tensor[(240), bool]) -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(48), float32], Tensor[(240), bool], Tensor[(48, 1), float32], Tensor[(10, 2, 16), uint8], Tensor[(2400), int16], Tensor[(10, 7, 48), float64]) {
  %1551 = fn (%var_19015: Tensor[(240), bool]) -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(48), float32], Tensor[(240), bool], Tensor[(48, 1), float32], Tensor[(10, 2, 16), uint8], Tensor[(2400), int16], Tensor[(10, 7, 48), float64]) {
    %1534 = @func_18113() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %1535 = cast(%var_19015, dtype="bool") /* ty=Tensor[(240), bool] */;
    %1536 = cast(meta[relay.Constant][36] /* ty=Tensor[(48, 1), float32] */, dtype="float32") /* ty=Tensor[(48, 1), float32] */;
    %1537 = reshape(%1535, newshape=[240]) /* ty=Tensor[(240), bool] */;
    %1538 = reshape(%1536, newshape=[48]) /* ty=Tensor[(48), float32] */;
    %1539 = @func_11548(%1537, %1538) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(240), bool], Tensor[(48), float32], Tensor[(10, 2, 16), float32]) */;
    %1540 = @func_9821() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), uint8]) */;
    %1541 = @func_12290() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float64], Tensor[(2400), int16], Tensor[(48), float32]) */;
    %1542 = @func_13656() /* ty=(Tensor[(10, 7, 48), float64], Tensor[(10, 2, 16), float32]) */;
    %1543 = %1542.0;
    %1544 = cast(%1543, dtype="float64") /* ty=Tensor[(10, 7, 48), float64] */;
    %1545 = %1534.0;
    %1546 = @func_6795() /* ty=Tensor[(10, 2, 16), float64] */;
    %1547 = %1539.3;
    %1548 = %1540.1;
    %1549 = %1541.3;
    %1550 = tan(%1544) /* ty=Tensor[(10, 7, 48), float64] */;
    (%1545, %1546, %1547, %var_19015, meta[relay.Constant][36] /* ty=Tensor[(48, 1), float32] */, %1548, %1549, %1550)
  };
  %1551(%var_19053) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(48), float32], Tensor[(240), bool], Tensor[(48, 1), float32], Tensor[(10, 2, 16), uint8], Tensor[(2400), int16], Tensor[(10, 7, 48), float64]) */
}

def @func_672(%var_660: Tensor[(48), float32]) -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(4, 3, 4), float32], Tensor[(48), float32], Tensor[(4, 3, 4), float32]) {
  %1552 = @func_584() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1553 = cast(%var_660, dtype="float32") /* ty=Tensor[(48), float32] */;
  %1554 = reshape(%1553, newshape=[4, 3, 4]) /* ty=Tensor[(4, 3, 4), float32] */;
  %1555 = cast(%var_660, dtype="float32") /* ty=Tensor[(48), float32] */;
  %1556 = reshape(%1555, newshape=[4, 3, 4]) /* ty=Tensor[(4, 3, 4), float32] */;
  %1557 = @func_445() /* ty=Tensor[(10, 2, 16), float32] */;
  %1558 = @func_445() /* ty=Tensor[(10, 2, 16), float32] */;
  %1559 = %1552.0;
  %1560 = @func_294(%1554) /* ty=Tensor[(4, 3, 4), float32] */;
  %1561 = @func_294(%1556) /* ty=Tensor[(4, 3, 4), float32] */;
  (%1557, %1558, %1559, %1560, %var_660, %1561)
}

def @func_7147() -> (Tensor[(10, 2, 16), float32],) {
  %1564 = fn () -> (Tensor[(10, 2, 16), float32],) {
    %1562 = @func_6472() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %1563 = %1562.0;
    (%1563,)
  };
  %1564() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_3881() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1565 = @func_2134() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1566 = @func_2977() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1567 = %1565.0;
  %1568 = @func_1156() /* ty=Tensor[(10, 2, 16), float32] */;
  %1569 = @func_1156() /* ty=Tensor[(10, 2, 16), float32] */;
  %1570 = %1566.0;
  (%1567, %1568, %1569, %1570)
}

def @func_13740(%var_13738: Tensor[(10, 13, 10), uint64], %var_13739: Tensor[(10, 13, 10), uint64]) -> (Tensor[(10, 13, 10), bool], Tensor[(2, 8, 9), float32]) {
  @func_13736(%var_13738, %var_13739) /* ty=(Tensor[(10, 13, 10), bool], Tensor[(2, 8, 9), float32]) */
}

def @func_2742() -> (Tensor[(10, 2, 16), float64],) {
  %1573 = fn () -> (Tensor[(10, 2, 16), float64],) {
    %1571 = @func_1630() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
    %1572 = %1571.1;
    (%1572,)
  };
  %1573() /* ty=(Tensor[(10, 2, 16), float64],) */
}

def @func_13934() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  @func_13932() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_26270(%var_26256: Tensor[(240), bool]) -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(240), bool], Tensor[(10, 2, 16), float32]) {
  %1574 = @func_17277() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(70), float32]) */;
  %1575 = @func_7146() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1576 = cast(%var_26256, dtype="bool") /* ty=Tensor[(240), bool] */;
  %1577 = reshape(%1576, newshape=[240]) /* ty=Tensor[(240), bool] */;
  %1578 = @func_19052(%1577) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(48), float32], Tensor[(240), bool], Tensor[(48, 1), float32], Tensor[(10, 2, 16), uint8], Tensor[(2400), int16], Tensor[(10, 7, 48), float64]) */;
  %1579 = %1574.0;
  %1580 = %1575.0;
  %1581 = %1578.1;
  %1582 = @func_23931() /* ty=Tensor[(10, 2, 16), float32] */;
  (%1579, %1580, %1581, %var_26256, %1582)
}

def @func_20829() -> (Tensor[(10, 2, 16), float32],) {
  @func_20827() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_23933() -> Tensor[(10, 2, 16), float32] {
  @func_23931() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_11584(%var_11582: uint16) -> (Tensor[(11, 10, 11), uint16],) {
  @func_11581(%var_11582) /* ty=(Tensor[(11, 10, 11), uint16],) */
}

def @func_12400() -> Tensor[(10, 2, 16), float32] {
  %1584 = fn () -> Tensor[(10, 2, 16), float32] {
    %1583 = @func_1657() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %1583.0
  };
  %1584() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_21517() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(70), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1597 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(70), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
    %1585 = @func_10769() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %1586 = @func_2711() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %1587 = cast(meta[relay.Constant][37] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
    %1588 = reshape(%1587, newshape=[1, 70]) /* ty=Tensor[(1, 70), float32] */;
    %1589 = @func_7015(%1588) /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(1, 70), float32], Tensor[(10, 7, 48), float32]) */;
    %1590 = @func_14364() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %1591 = %1585.0;
    %1592 = %1586.0;
    %1593 = %1589.0;
    %1594 = @func_15729() /* ty=Tensor[(10, 2, 16), float32] */;
    %1595 = @func_17189() /* ty=Tensor[(10, 2, 16), float32] */;
    %1596 = %1590.0;
    (%1591, %1592, %1593, meta[relay.Constant][37] /* ty=Tensor[(70), float32] */, %1594, %1595, %1596)
  };
  %1597() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(70), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_13295() -> (Tensor[(10, 2, 16), float32],) {
  %1600 = fn () -> (Tensor[(10, 2, 16), float32],) {
    %1598 = @func_2977() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %1599 = %1598.0;
    (%1599,)
  };
  %1600() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_11851() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8]) {
  %1601 = @func_9966() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
  %1602 = @func_5146() /* ty=(Tensor[(10, 2, 16), uint8],) */;
  %1603 = @func_1156() /* ty=Tensor[(10, 2, 16), float32] */;
  %1604 = @func_6795() /* ty=Tensor[(10, 2, 16), float64] */;
  %1605 = %1601.0;
  %1606 = @func_10995() /* ty=Tensor[(10, 2, 16), uint8] */;
  %1607 = %1602.0;
  (%1603, %1604, %1605, %1606, %1607)
}

def @func_17781() -> (Tensor[(10, 2, 16), uint8],) {
  %1610 = fn () -> (Tensor[(10, 2, 16), uint8],) {
    %1608 = @func_8608() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 7, 48), float32], Tensor[(70), float32]) */;
    %1609 = %1608.1;
    (%1609,)
  };
  %1610() /* ty=(Tensor[(10, 2, 16), uint8],) */
}

def @func_12036() -> (Tensor[(10, 2, 16), float32],) {
  @func_12034() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_16012() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
  @func_16010() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */
}

def @func_24130() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1611 = @func_12430() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(2400), int16]) */;
  %1612 = @func_257() /* ty=Tensor[(10, 2, 16), float32] */;
  %1613 = %1611.0;
  (%1612, %1613)
}

def @func_11879() -> (Tensor[(10, 2, 16), float32], Tensor[(16, 4, 14), int64], Tensor[(896), int64]) {
  %1614 = @func_8671() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1615 = cast(meta[relay.Constant][38] /* ty=Tensor[(896), int64] */, dtype="int64") /* ty=Tensor[(896), int64] */;
  %1616 = cast(meta[relay.Constant][38] /* ty=Tensor[(896), int64] */, dtype="int64") /* ty=Tensor[(896), int64] */;
  %1617 = reshape(%1615, newshape=[16, 4, 14]) /* ty=Tensor[(16, 4, 14), int64] */;
  %1618 = reshape(%1616, newshape=[16, 4, 14]) /* ty=Tensor[(16, 4, 14), int64] */;
  %1619 = @func_4187(%1617, %1618) /* ty=(Tensor[(16, 4, 14), int64],) */;
  %1620 = %1614.0;
  %1621 = %1619.0;
  (%1620, %1621, meta[relay.Constant][38] /* ty=Tensor[(896), int64] */)
}

def @func_7523() -> (Tensor[(10, 2, 16), float32],) {
  %1623 = fn () -> (Tensor[(10, 2, 16), float32],) {
    %1622 = @func_3845() /* ty=Tensor[(10, 2, 16), float32] */;
    (%1622,)
  };
  %1623() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_8267(%var_8266: float32) -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], float32) {
  %1630 = fn (%var_8256: float32) -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], float32) {
    %1624 = @func_1630() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
    %1625 = cast(%var_8256, dtype="float32") /* ty=float32 */;
    %1626 = reshape(%1625, newshape=[]) /* ty=float32 */;
    %1627 = @func_1070(%1626) /* ty=(Tensor[(4, 14, 12), float32], Tensor[(10, 2, 16), float32]) */;
    %1628 = %1624.1;
    %1629 = %1627.1;
    (%1628, %1629, %var_8256)
  };
  %1630(%var_8266) /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], float32) */
}

def @func_20037() -> (Tensor[(10, 2, 16), float32],) {
  %1631 = @func_17189() /* ty=Tensor[(10, 2, 16), float32] */;
  (%1631,)
}

def @func_14048() -> (Tensor[(432), float32], Tensor[(10, 2, 16), float64]) {
  @func_14046() /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), float64]) */
}

def @func_15680() -> (Tensor[(10, 2, 16), float32],) {
  @func_15678() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_4187(%var_4179: Tensor[(16, 4, 14), int64], %var_4180: Tensor[(16, 4, 14), int64]) -> (Tensor[(16, 4, 14), int64],) {
  %1632 = cast(%var_4180, dtype="int64") /* ty=Tensor[(16, 4, 14), int64] */;
  %1633 = shape_of(%var_4179, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1634 = cast(%var_4179, dtype="int64") /* ty=Tensor[(16, 4, 14), int64] */;
  %1635 = dyn.reshape(%1632, %1633, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1636 = bitwise_or(%1634, %1635) /* ty=Tensor[(16, 4, 14), int64] */;
  (%1636,)
}

def @func_13441() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  @func_13439() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_27558() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
  %1640 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
    %1637 = @func_23786() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(48), float32]) */;
    %1638 = @func_17348() /* ty=Tensor[(10, 2, 16), float32] */;
    %1639 = %1637.0;
    (%1638, %1639)
  };
  %1640() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */
}

def @func_15179() -> (Tensor[(10, 2, 16), float32], Tensor[(432), float32]) {
  %1644 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(432), float32]) {
    %1641 = @func_7629() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
    %1642 = %1641.1;
    %1643 = @func_5829() /* ty=Tensor[(432), float32] */;
    (%1642, %1643)
  };
  %1644() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32]) */
}

def @func_297(%var_295: Tensor[(4, 3, 4), float32]) -> Tensor[(4, 3, 4), float32] {
  @func_294(%var_295) /* ty=Tensor[(4, 3, 4), float32] */
}

def @func_14638() -> Tensor[(10, 2, 16), float32] {
  %1646 = fn () -> Tensor[(10, 2, 16), float32] {
    %1645 = @func_4266() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %1645.0
  };
  %1646() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_27935() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float64]) {
  %1647 = @func_26552() /* ty=(Tensor[(10, 2, 16), uint8],) */;
  %1648 = %1647.0;
  %1649 = @func_7551() /* ty=Tensor[(10, 2, 16), float64] */;
  (%1648, %1649)
}

def @func_4239() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1650 = @func_2444() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %1651 = @func_1989() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1652 = %1650.4;
  %1653 = %1651.2;
  %1654 = @func_257() /* ty=Tensor[(10, 2, 16), float32] */;
  (%1652, %1653, %1654)
}

def @func_408() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1657 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
    %1655 = @func_305() /* ty=Tensor[(10, 2, 16), float32] */;
    %1656 = @func_257() /* ty=Tensor[(10, 2, 16), float32] */;
    (%1655, %1656)
  };
  %1657() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_22769() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1658 = @func_21623() /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1659 = @func_13294() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1660 = @func_11260() /* ty=(Tensor[(10, 16, 15), int16], Tensor[(10, 2, 16), float32], Tensor[(4, 3, 4), float32], Tensor[(48), float32], Tensor[(10, 2, 16), float32]) */;
  %1661 = %1658.2;
  %1662 = %1659.0;
  %1663 = %1660.3;
  %1664 = @func_1156() /* ty=Tensor[(10, 2, 16), float32] */;
  %1665 = @func_11130() /* ty=Tensor[(10, 2, 16), float32] */;
  (%1661, %1662, %1663, %1664, %1665)
}

def @func_586() -> (Tensor[(10, 2, 16), float32],) {
  @func_584() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_6159() -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1672 = fn () -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
    %1666 = @func_5466() /* ty=(Tensor[(10, 2, 16), float64],) */;
    %1667 = @func_2134() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %1668 = @func_4239() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %1669 = %1666.0;
    %1670 = %1667.0;
    %1671 = %1668.0;
    (%1669, %1670, %1671)
  };
  %1672() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_12291() -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float64], Tensor[(2400), int16], Tensor[(48), float32]) {
  %1682 = fn () -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float64], Tensor[(2400), int16], Tensor[(48), float32]) {
    %1673 = @func_2341() /* ty=(Tensor[(10, 2, 16), float64],) */;
    %1674 = @func_8806() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 1, 2), int16], int16, Tensor[(20), int16], Tensor[(6, 9, 8), float32], Tensor[(48), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float64], Tensor[(432), float32]) */;
    %1675 = @func_4799() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(2400), int16]) */;
    %1676 = @func_711() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) */;
    %1677 = %1673.0;
    %1678 = @func_5084() /* ty=Tensor[(10, 2, 16), float64] */;
    %1679 = %1674.8;
    %1680 = %1675.1;
    %1681 = %1676.2;
    (%1677, %1678, %1679, %1680, %1681)
  };
  %1682() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float64], Tensor[(2400), int16], Tensor[(48), float32]) */
}

def @func_17862() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  @func_17860() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_26217() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool]) {
  %1683 = @func_23544() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), bool], Tensor[(432), float32]) */;
  %1684 = @func_14066() /* ty=Tensor[(10, 2, 16), float32] */;
  %1685 = %1683.3;
  (%1684, %1685)
}

def @func_20039() -> (Tensor[(10, 2, 16), float32],) {
  @func_20037() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_23440() -> (Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1691 = fn () -> (Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
    %1686 = @func_22602() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %1687 = @func_4609() /* ty=Tensor[(10, 2, 16), bool] */;
    %1688 = %1686.0;
    %1689 = @func_10552() /* ty=Tensor[(10, 2, 16), float32] */;
    %1690 = @func_14023() /* ty=Tensor[(10, 2, 16), float32] */;
    (%1687, %1688, %1689, %1690)
  };
  %1691() /* ty=(Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_22320() -> (Tensor[(10, 2, 16), float32],) {
  @func_22318() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_21760() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float64]) {
  @func_21758() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float64]) */
}

def @func_8673() -> (Tensor[(10, 2, 16), float32],) {
  @func_8671() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_8655() -> (Tensor[(6, 9, 8), float32], Tensor[(10, 2, 16), float32]) {
  %1692 = @func_1437() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(6, 9, 8), float32], Tensor[(432), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1693 = @func_4266() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1694 = %1692.1;
  %1695 = %1693.0;
  (%1694, %1695)
}

def @func_14259(%var_14202: int8) -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], int8, Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1696 = @func_2783() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1697 = cast(%var_14202, dtype="int8") /* ty=int8 */;
  %1698 = reshape(%1697, newshape=[]) /* ty=int8 */;
  %1699 = @func_4740(%1698) /* ty=(Tensor[(2, 16, 6), int8], Tensor[(10, 2, 16), float32]) */;
  %1700 = @func_9042() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) */;
  %1701 = @func_4351() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %1702 = %1696.0;
  %1703 = %1699.1;
  %1704 = %1700.2;
  %1705 = %1701.0;
  (%1702, %1703, %var_14202, %1704, %1705)
}

def @func_14311() -> (Tensor[(10, 2, 16), float32],) {
  @func_14309() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_8344() -> (Tensor[(10, 2, 16), float64],) {
  %1706 = @func_6158() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1707 = %1706.0;
  (%1707,)
}

def @func_9397() -> (Tensor[(10, 2, 16), float32],) {
  %1708 = @func_3881() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1709 = %1708.0;
  (%1709,)
}

def @func_18729() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1715 = fn () -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
    %1710 = @func_3294() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
    %1711 = @func_1630() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
    %1712 = %1710.1;
    %1713 = %1711.2;
    %1714 = @func_8839() /* ty=Tensor[(10, 2, 16), float32] */;
    (%1712, %1713, %1714)
  };
  %1715() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_1914(%var_1913: Tensor[(48), float32]) -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) {
  %1724 = fn (%var_1874: Tensor[(48), float32]) -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) {
    %1716 = @func_1332() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
    %1717 = cast(%var_1874, dtype="float32") /* ty=Tensor[(48), float32] */;
    %1718 = reshape(%1717, newshape=[48]) /* ty=Tensor[(48), float32] */;
    %1719 = @func_672(%1718) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(4, 3, 4), float32], Tensor[(48), float32], Tensor[(4, 3, 4), float32]) */;
    %1720 = %1716.0;
    %1721 = @func_445() /* ty=Tensor[(10, 2, 16), float32] */;
    %1722 = @func_257() /* ty=Tensor[(10, 2, 16), float32] */;
    %1723 = %1719.2;
    (%1720, %1721, %1722, %1723, %var_1874)
  };
  %1724(%var_1913) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) */
}

def @func_1991() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  @func_1989() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_23109() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(12, 4), float32], Tensor[(2, 8, 9), float32]) {
  @func_23107() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(12, 4), float32], Tensor[(2, 8, 9), float32]) */
}

def @func_2256() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) {
  %1725 = @func_1958() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1726 = %1725.1;
  %1727 = @func_900() /* ty=Tensor[(10, 2, 16), uint8] */;
  (%1726, %1727)
}

def @func_3051() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 16, 15), int16], Tensor[(2400), int16]) {
  %1728 = @func_1041() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %1729 = cast(meta[relay.Constant][39] /* ty=Tensor[(2400), int16] */, dtype="int16") /* ty=Tensor[(2400), int16] */;
  %1730 = cast(meta[relay.Constant][39] /* ty=Tensor[(2400), int16] */, dtype="int16") /* ty=Tensor[(2400), int16] */;
  %1731 = reshape(%1729, newshape=[10, 16, 15]) /* ty=Tensor[(10, 16, 15), int16] */;
  %1732 = reshape(%1730, newshape=[10, 16, 15]) /* ty=Tensor[(10, 16, 15), int16] */;
  %1733 = %1728.0;
  %1734 = @func_2008() /* ty=Tensor[(10, 2, 16), float32] */;
  %1735 = @func_2371(%1731, %1732) /* ty=Tensor[(10, 16, 15), int16] */;
  (%1733, %1734, %1735, meta[relay.Constant][39] /* ty=Tensor[(2400), int16] */)
}

def @func_25810(%var_25763: Tensor[(8, 11, 2), float32]) -> (Tensor[(10, 2, 16), float32], Tensor[(8, 11, 2), int32], Tensor[(10, 2, 16), float32]) {
  %1736 = @func_20586() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(16, 4, 14), int64]) */;
  %1737 = cast(%var_25763, dtype="float32") /* ty=Tensor[(8, 11, 2), float32] */;
  %1738 = exp(%1737) /* ty=Tensor[(8, 11, 2), float32] */;
  %1739 = cast(%var_25763, dtype="bool") /* ty=Tensor[(8, 11, 2), bool] */;
  %1740 = shape_of(%1738, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1741 = cast(%1738, dtype="bool") /* ty=Tensor[(8, 11, 2), bool] */;
  %1742 = dyn.reshape(%1739, %1740, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1743 = greater(%1741, %1742) /* ty=Tensor[(8, 11, 2), bool] */;
  %1744 = cast(%1743, dtype="int32") /* ty=Tensor[(8, 11, 2), int32] */;
  %1745 = shape_of(%1738, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1746 = cast(%1738, dtype="int32") /* ty=Tensor[(8, 11, 2), int32] */;
  %1747 = dyn.reshape(%1744, %1745, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1748 = @func_14954() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1749 = %1736.0;
  %1750 = right_shift(%1746, %1747) /* ty=Tensor[(8, 11, 2), int32] */;
  %1751 = %1748.1;
  (%1749, %1750, %1751)
}

def @func_328() -> (Tensor[(10, 2, 16), float32],) {
  %1753 = fn () -> (Tensor[(10, 2, 16), float32],) {
    %1752 = @func_305() /* ty=Tensor[(10, 2, 16), float32] */;
    (%1752,)
  };
  %1753() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_6728() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(432), float32]) {
  %1754 = @func_3030() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32]) */;
  %1755 = @func_2711() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1756 = %1754.0;
  %1757 = %1755.1;
  %1758 = @func_2078() /* ty=Tensor[(432), float32] */;
  (%1756, %1757, %1758)
}

def @func_25754() -> Tensor[(10, 2, 16), float64] {
  %1759 = @func_11796() /* ty=(Tensor[(10, 2, 16), float64],) */;
  %1759.0
}

def @main(%var_28554: Tensor[(6, 2, 3), float64], %var_28555: Tensor[(6, 2, 3), float64]) -> (Tensor[(6, 2, 3), float64], Tensor[(6, 2, 3), float64]) {
  %1760 = cast(%var_28555, dtype="float64") /* ty=Tensor[(6, 2, 3), float64] */;
  %1761 = shape_of(%var_28554, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1762 = cast(%var_28554, dtype="float64") /* ty=Tensor[(6, 2, 3), float64] */;
  %1763 = dyn.reshape(%1760, %1761, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1764 = cast(%var_28555, dtype="float64") /* ty=Tensor[(6, 2, 3), float64] */;
  %1765 = floor_mod(%1762, %1763) /* ty=Tensor[(6, 2, 3), float64] */;
  %1766 = acos(%1764) /* ty=Tensor[(6, 2, 3), float64] */;
  (%1765, %1766)
}

def @func_8228() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1772 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
    %1767 = @func_362() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %1768 = @func_362() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %1769 = @func_6325() /* ty=Tensor[(10, 2, 16), float32] */;
    %1770 = %1767.1;
    %1771 = %1768.0;
    (%1769, %1770, %1771)
  };
  %1772() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_20774() -> (Tensor[(10, 2, 16), float32],) {
  %1775 = fn () -> (Tensor[(10, 2, 16), float32],) {
    %1773 = @func_10641() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %1774 = %1773.2;
    (%1774,)
  };
  %1775() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_5403() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(432), float32]) {
  %1780 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(432), float32]) {
    %1776 = @func_2515() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
    %1777 = %1776.0;
    %1778 = @func_257() /* ty=Tensor[(10, 2, 16), float32] */;
    %1779 = @func_2078() /* ty=Tensor[(432), float32] */;
    (%1777, %1778, %1779)
  };
  %1780() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(432), float32]) */
}

def @func_19642() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1785 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
    %1781 = @func_362() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %1782 = @func_18113() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %1783 = %1781.0;
    %1784 = %1782.0;
    (%1783, %1784)
  };
  %1785() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_15946() -> (Tensor[(432), float32],) {
  %1788 = fn () -> (Tensor[(432), float32],) {
    %1786 = @func_13061() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32]) */;
    %1787 = %1786.1;
    (%1787,)
  };
  %1788() /* ty=(Tensor[(432), float32],) */
}

def @func_900() -> Tensor[(10, 2, 16), uint8] {
  %1789 = @func_880() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %1789.0
}

def @func_19317() -> (Tensor[(10, 6, 8), float32],) {
  %1790 = cast(meta[relay.Constant][41] /* ty=Tensor[(10, 6, 8), float32] */, dtype="float32") /* ty=Tensor[(10, 6, 8), float32] */;
  %1791 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(10, 6, 8), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1792 = cast(meta[relay.Constant][40] /* ty=Tensor[(10, 6, 8), float32] */, dtype="float32") /* ty=Tensor[(10, 6, 8), float32] */;
  %1793 = dyn.reshape(%1790, %1791, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1794 = divide(%1792, %1793) /* ty=Tensor[(10, 6, 8), float32] */;
  (%1794,)
}

def @func_7499(%var_7498: Tensor[(48), float32]) -> (Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(48), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) {
  %1805 = fn (%var_7455: Tensor[(48), float32]) -> (Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(48), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) {
    %1795 = @func_6014() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %1796 = cast(%var_7455, dtype="float32") /* ty=Tensor[(48), float32] */;
    %1797 = reshape(%1796, newshape=[48]) /* ty=Tensor[(48), float32] */;
    %1798 = @func_3697(%1797) /* ty=(Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) */;
    %1799 = @func_2515() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
    %1800 = @func_3165() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %1801 = %1795.0;
    %1802 = %1798.2;
    %1803 = %1799.1;
    %1804 = %1800.0;
    (%1801, %1802, %var_7455, %1803, %1804)
  };
  %1805(%var_7498) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(48), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */
}

def @func_12810() -> (Tensor[(2, 8, 9), float32], Tensor[(10, 2, 16), float32]) {
  %1806 = @func_5718() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) */;
  %1807 = @func_4003() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
  %1808 = %1806.1;
  %1809 = %1807.2;
  (%1808, %1809)
}

def @func_1497() -> (Tensor[(432), float32], Tensor[(10, 2, 16), float32]) {
  %1813 = fn () -> (Tensor[(432), float32], Tensor[(10, 2, 16), float32]) {
    %1810 = @func_1437() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(6, 9, 8), float32], Tensor[(432), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %1811 = %1810.2;
    %1812 = @func_257() /* ty=Tensor[(10, 2, 16), float32] */;
    (%1811, %1812)
  };
  %1813() /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_17601(%var_17593: Tensor[(18), float32]) -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), uint8], Tensor[(18), float32], Tensor[(10, 7, 48), float64]) {
  %1814 = @func_12086() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1815 = cast(%var_17593, dtype="float32") /* ty=Tensor[(18), float32] */;
  %1816 = reshape(%1815, newshape=[1, 2, 9]) /* ty=Tensor[(1, 2, 9), float32] */;
  %1817 = @func_14837(%1816) /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(?, 2, 9), float32], Tensor[(?, 2, 9), bool]) */;
  %1818 = @func_13656() /* ty=(Tensor[(10, 7, 48), float64], Tensor[(10, 2, 16), float32]) */;
  %1819 = %1814.0;
  %1820 = @func_8863() /* ty=Tensor[(10, 2, 16), bool] */;
  %1821 = %1817.0;
  %1822 = %1818.0;
  (%1819, %1820, %1821, %var_17593, %1822)
}

def @func_22365() -> Tensor[(432), float32] {
  @func_22363() /* ty=Tensor[(432), float32] */
}

def @func_19658() -> (Tensor[(10, 2, 16), float32],) {
  @func_19656() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_27640() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
  @func_27638() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */
}

def @func_25311() -> (Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) {
  @func_25309() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) */
}

def @func_6795() -> Tensor[(10, 2, 16), float64] {
  %1823 = @func_2444() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %1823.5
}

def @func_2445() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
  %1836 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
    %1824 = @func_1156() /* ty=Tensor[(10, 2, 16), float32] */;
    %1825 = cast(%1824, dtype="uint8") /* ty=Tensor[(10, 2, 16), uint8] */;
    %1826 = reshape(%1825, newshape=[10, 2, 16]) /* ty=Tensor[(10, 2, 16), uint8] */;
    %1827 = @func_1288(%1826) /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %1828 = @func_2134() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %1829 = @func_327() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %1830 = @func_431() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
    %1831 = %1827.1;
    %1832 = %1828.0;
    %1833 = %1829.0;
    %1834 = @func_1518() /* ty=Tensor[(10, 2, 16), float32] */;
    %1835 = %1830.1;
    (%1824, %1831, %1832, %1833, %1834, %1835)
  };
  %1836() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */
}

def @func_17350() -> Tensor[(10, 2, 16), float32] {
  @func_17348() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_10795() -> (Tensor[(10, 2, 16), float32],) {
  %1839 = fn () -> (Tensor[(10, 2, 16), float32],) {
    %1837 = @func_4925() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %1838 = %1837.0;
    (%1838,)
  };
  %1839() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_21711() -> Tensor[(2400), float32] {
  @func_21709() /* ty=Tensor[(2400), float32] */
}

def @func_22133(%var_22131: Tensor[(12, 3, 9), float64], %var_22132: Tensor[(12, 3, 9), float64]) -> (Tensor[(12, 3, 9), float64],) {
  %1845 = fn (%var_22124: Tensor[(12, 3, 9), float64], %var_22125: Tensor[(12, 3, 9), float64]) -> (Tensor[(12, 3, 9), float64],) {
    %1840 = cast(%var_22125, dtype="float64") /* ty=Tensor[(12, 3, 9), float64] */;
    %1841 = shape_of(%var_22124, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1842 = cast(%var_22124, dtype="float64") /* ty=Tensor[(12, 3, 9), float64] */;
    %1843 = dyn.reshape(%1840, %1841, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1844 = mod(%1842, %1843) /* ty=Tensor[(12, 3, 9), float64] */;
    (%1844,)
  };
  %1845(%var_22131, %var_22132) /* ty=(Tensor[(12, 3, 9), float64],) */
}

def @func_21623() -> (Tensor[(432), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1846 = @func_19294() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32]) */;
  %1847 = @func_4109() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1848 = @func_6823() /* ty=(Tensor[(10, 2, 16), uint8],) */;
  %1849 = @func_20827() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1850 = @func_1766() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool]) */;
  %1851 = %1846.1;
  %1852 = %1847.0;
  %1853 = %1848.0;
  %1854 = @func_1377() /* ty=Tensor[(10, 2, 16), float32] */;
  %1855 = %1849.0;
  %1856 = %1850.1;
  (%1851, %1852, %1853, %1854, %1855, %1856)
}

def @func_9042() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) {
  %1857 = @func_3030() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32]) */;
  %1858 = @func_7273() /* ty=(Tensor[(2, 8, 9), float32],) */;
  %1859 = %1857.0;
  %1860 = @func_8863() /* ty=Tensor[(10, 2, 16), bool] */;
  %1861 = @func_445() /* ty=Tensor[(10, 2, 16), float32] */;
  %1862 = %1858.0;
  (%1859, %1860, %1861, %1862)
}

def @func_11649() -> (Tensor[(10, 2, 16), uint8],) {
  %1863 = @func_5146() /* ty=(Tensor[(10, 2, 16), uint8],) */;
  %1864 = %1863.0;
  (%1864,)
}

def @func_18297() -> Tensor[(10, 2, 16), float32] {
  @func_18295() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_26049() -> Tensor[(10, 2, 16), float64] {
  %1865 = fn () -> Tensor[(10, 2, 16), float64] {
    @func_6795() /* ty=Tensor[(10, 2, 16), float64] */
  };
  %1865() /* ty=Tensor[(10, 2, 16), float64] */
}

def @func_4004() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) {
  %1872 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) {
    %1866 = @func_1958() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %1867 = @func_3531() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(2, 8, 9), float32]) */;
    %1868 = %1866.1;
    %1869 = @func_257() /* ty=Tensor[(10, 2, 16), float32] */;
    %1870 = @func_1377() /* ty=Tensor[(10, 2, 16), float32] */;
    %1871 = %1867.0;
    (%1868, %1869, %1870, %1871)
  };
  %1872() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */
}

def @func_25113() -> Tensor[(2, 8, 9), float32] {
  %1876 = fn () -> Tensor[(2, 8, 9), float32] {
    %1873 = @func_24899() /* ty=(Tensor[(2, 8, 9), float32],) */;
    %1874 = %1873.0;
    %1875 = cast(%1874, dtype="float32") /* ty=Tensor[(2, 8, 9), float32] */;
    tan(%1875) /* ty=Tensor[(2, 8, 9), float32] */
  };
  %1876() /* ty=Tensor[(2, 8, 9), float32] */
}

def @func_7916() -> (Tensor[(2, 8, 9), float32],) {
  @func_7914() /* ty=(Tensor[(2, 8, 9), float32],) */
}

def @func_7434() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  @func_7432() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_25388() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8]) {
  %1881 = fn () -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8]) {
    %1877 = @func_15432() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %1878 = @func_4087() /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float64]) */;
    %1879 = %1877.0;
    %1880 = %1878.1;
    (%1879, %1880)
  };
  %1881() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8]) */
}

def @func_21669() -> Tensor[(10, 2, 16), uint8] {
  %1882 = @func_15709() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1882.0
}

def @func_12034() -> (Tensor[(10, 2, 16), float32],) {
  %1883 = @func_6349() /* ty=(Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1884 = %1883.1;
  (%1884,)
}

def @func_10506() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) {
  %1890 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) {
    %1885 = @func_2678() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
    %1886 = @func_7432() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %1887 = @func_3845() /* ty=Tensor[(10, 2, 16), float32] */;
    %1888 = %1885.1;
    %1889 = %1886.0;
    (%1887, %1888, %1889)
  };
  %1890() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */
}

def @func_8103() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(10, 2, 16), float32]) {
  %1891 = @func_1545() /* ty=(Tensor[(10, 2, 16), uint8],) */;
  %1892 = @func_6472() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1893 = @func_584() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1894 = cast(meta[relay.Constant][42] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %1895 = reshape(%1894, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %1896 = @func_3697(%1895) /* ty=(Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) */;
  %1897 = @func_6728() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(432), float32]) */;
  %1898 = %1891.0;
  %1899 = %1892.0;
  %1900 = %1893.0;
  %1901 = %1896.1;
  %1902 = %1897.0;
  (%1898, %1899, %1900, %1901, meta[relay.Constant][42] /* ty=Tensor[(48), float32] */, %1902)
}

def @func_7552() -> Tensor[(10, 2, 16), float64] {
  %1903 = fn () -> Tensor[(10, 2, 16), float64] {
    @func_6085() /* ty=Tensor[(10, 2, 16), float64] */
  };
  %1903() /* ty=Tensor[(10, 2, 16), float64] */
}

def @func_22006() -> Tensor[(10, 2, 16), float64] {
  @func_22004() /* ty=Tensor[(10, 2, 16), float64] */
}

def @func_12221() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
  @func_12219() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */
}

def @func_19529(%var_19527: Tensor[(2, 8, 9), float32]) -> (Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), bool], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  @func_19526(%var_19527) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), bool], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_24010(%var_23995: Tensor[(2, 8, 9), float32]) -> (Tensor[(2, 8, 9), int32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1904 = @func_7914() /* ty=(Tensor[(2, 8, 9), float32],) */;
  %1905 = %1904.0;
  %1906 = cast(%var_23995, dtype="int32") /* ty=Tensor[(2, 8, 9), int32] */;
  %1907 = shape_of(%1905, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1908 = cast(%1905, dtype="int32") /* ty=Tensor[(2, 8, 9), int32] */;
  %1909 = dyn.reshape(%1906, %1907, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1910 = @func_22550() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %1911 = @func_15178() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32]) */;
  %1912 = bitwise_xor(%1908, %1909) /* ty=Tensor[(2, 8, 9), int32] */;
  %1913 = %1910.0;
  %1914 = %1911.0;
  (%1912, %1913, %1914)
}

def @func_12263() -> Tensor[(2, 3, 3), float32] {
  @func_12261() /* ty=Tensor[(2, 3, 3), float32] */
}

def @func_17492() -> (Tensor[(432), float32], Tensor[(10, 2, 16), uint8], Tensor[(320), uint8], Tensor[(432), float32]) {
  @func_17490() /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), uint8], Tensor[(320), uint8], Tensor[(432), float32]) */
}

def @func_25637() -> Tensor[(10, 2, 16), float32] {
  %1916 = fn () -> Tensor[(10, 2, 16), float32] {
    %1915 = @func_3368() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
    %1915.2
  };
  %1916() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_12086() -> (Tensor[(10, 2, 16), float32],) {
  %1917 = @func_11740() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %1918 = %1917.1;
  (%1918,)
}

def @func_22668() -> (Tensor[(10, 2, 16), float32],) {
  %1921 = fn () -> (Tensor[(10, 2, 16), float32],) {
    %1919 = @func_10324() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %1920 = %1919.0;
    (%1920,)
  };
  %1921() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_7538(%var_7536: Tensor[(2, 24), float32]) -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(2, 24), float32]) {
  @func_7535(%var_7536) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(2, 24), float32]) */
}

def @func_13196() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1922 = @func_13061() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32]) */;
  %1923 = @func_7152() /* ty=Tensor[(10, 2, 16), float32] */;
  %1924 = %1922.0;
  (%1923, %1924)
}

def @func_23913() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %1931 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
    %1925 = @func_17277() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(70), float32]) */;
    %1926 = @func_880() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
    %1927 = @func_7432() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %1928 = %1925.0;
    %1929 = %1926.1;
    %1930 = %1927.1;
    (%1928, %1929, %1930)
  };
  %1931() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_5084() -> Tensor[(10, 2, 16), float64] {
  %1932 = @func_2341() /* ty=(Tensor[(10, 2, 16), float64],) */;
  %1932.0
}

def @func_5059(%var_5057: Tensor[(8, 15, 2), bool], %var_5058: Tensor[(24, 2), float32]) -> (Tensor[(10, 2, 16), float32], Tensor[(8, 15, 2), float64], Tensor[(8, 15, 2), float32], Tensor[(48), float32], Tensor[(24, 2), float32]) {
  %1945 = fn (%var_5040: Tensor[(8, 15, 2), bool], %var_5051: Tensor[(24, 2), float32]) -> (Tensor[(10, 2, 16), float32], Tensor[(8, 15, 2), float64], Tensor[(8, 15, 2), float32], Tensor[(48), float32], Tensor[(24, 2), float32]) {
    %1933 = @func_3439() /* ty=(Tensor[(2, 8, 9), float32], Tensor[(10, 2, 16), float32], Tensor[(8, ?, 2), bool]) */;
    %1934 = %1933.2;
    %1935 = cast(%1934, dtype="float64") /* ty=Tensor[(8, ?, 2), float64] */;
    %1936 = cast(%var_5040, dtype="float64") /* ty=Tensor[(8, 15, 2), float64] */;
    %1937 = cast(%var_5040, dtype="float32") /* ty=Tensor[(8, 15, 2), float32] */;
    %1938 = cast(%var_5051, dtype="float32") /* ty=Tensor[(24, 2), float32] */;
    %1939 = reshape(%1938, newshape=[48]) /* ty=Tensor[(48), float32] */;
    %1940 = @func_2224(%1939) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %1941 = @func_1156() /* ty=Tensor[(10, 2, 16), float32] */;
    %1942 = maximum(%1935, %1936) /* ty=Tensor[(8, 15, 2), float64] */;
    %1943 = erf(%1937) /* ty=Tensor[(8, 15, 2), float32] */;
    %1944 = %1940.2;
    (%1941, %1942, %1943, %1944, %var_5051)
  };
  %1945(%var_5057, %var_5058) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(8, 15, 2), float64], Tensor[(8, 15, 2), float32], Tensor[(48), float32], Tensor[(24, 2), float32]) */
}

def @func_14980() -> Tensor[(10, 2, 16), float32] {
  %1947 = fn () -> Tensor[(10, 2, 16), float32] {
    %1946 = @func_1332() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
    %1946.0
  };
  %1947() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_25131() -> Tensor[(2, 8, 9), float32] {
  %1949 = fn () -> Tensor[(2, 8, 9), float32] {
    %1948 = @func_5718() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) */;
    %1948.1
  };
  %1949() /* ty=Tensor[(2, 8, 9), float32] */
}

def @func_14839(%var_14838: Tensor[(1, 2, 9), float32]) -> (Tensor[(10, 2, 16), uint8], Tensor[(?, 2, 9), float32], Tensor[(?, 2, 9), bool]) {
  %1971 = fn (%var_14793: Tensor[(1, 2, 9), float32]) -> (Tensor[(10, 2, 16), uint8], Tensor[(?, 2, 9), float32], Tensor[(?, 2, 9), bool]) {
    %1950 = @func_10505() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
    %1951 = cast(%var_14793, dtype="float32") /* ty=Tensor[(1, 2, 9), float32] */;
    %1952 = sqrt(%1951) /* ty=Tensor[(1, 2, 9), float32] */;
    %1953 = cast(%var_14793, dtype="float64") /* ty=Tensor[(1, 2, 9), float64] */;
    %1954 = log10(%1953) /* ty=Tensor[(1, 2, 9), float64] */;
    %1955 = cast(%1954, dtype="float32") /* ty=Tensor[(1, 2, 9), float32] */;
    %1956 = shape_of(%1952, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1957 = cast(%1952, dtype="float32") /* ty=Tensor[(1, 2, 9), float32] */;
    %1958 = dyn.reshape(%1955, %1956, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1959 = cast(%var_14793, dtype="bool") /* ty=Tensor[(1, 2, 9), bool] */;
    %1960 = shape_of(%1952, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1961 = cast(%1952, dtype="bool") /* ty=Tensor[(1, 2, 9), bool] */;
    %1962 = dyn.reshape(%1959, %1960, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1963 = less(%1961, %1962) /* ty=Tensor[(?, 2, 9), bool] */;
    %1964 = cast(%1963, dtype="bool") /* ty=Tensor[(?, 2, 9), bool] */;
    %1965 = shape_of(%1952, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1966 = cast(%1952, dtype="bool") /* ty=Tensor[(1, 2, 9), bool] */;
    %1967 = dyn.reshape(%1964, %1965, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1968 = %1950.1;
    %1969 = floor_mod(%1957, %1958) /* ty=Tensor[(?, 2, 9), float32] */;
    %1970 = equal(%1966, %1967) /* ty=Tensor[(?, 2, 9), bool] */;
    (%1968, %1969, %1970)
  };
  %1971(%var_14838) /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(?, 2, 9), float32], Tensor[(?, 2, 9), bool]) */
}

def @func_16224() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) {
  %1972 = @func_12113() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %1973 = @func_3474() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %1974 = %1972.0;
  %1975 = %1973.0;
  (%1974, %1975)
}

def @func_7736(%var_7735: Tensor[(10, 2, 16), float32]) -> (Tensor[(10, 2, 16), int64], Tensor[(10, 2, 16), float32]) {
  %1985 = fn (%var_7695: Tensor[(10, 2, 16), float32]) -> (Tensor[(10, 2, 16), int64], Tensor[(10, 2, 16), float32]) {
    %1976 = @func_1496() /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), float32]) */;
    %1977 = %1976.1;
    %1978 = cast(%var_7695, dtype="int64") /* ty=Tensor[(10, 2, 16), int64] */;
    %1979 = shape_of(%1977, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1980 = cast(%1977, dtype="int64") /* ty=Tensor[(10, 2, 16), int64] */;
    %1981 = dyn.reshape(%1978, %1979, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1982 = @func_5718() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) */;
    %1983 = subtract(%1980, %1981) /* ty=Tensor[(10, 2, 16), int64] */;
    %1984 = %1982.0;
    (%1983, %1984)
  };
  %1985(%var_7735) /* ty=(Tensor[(10, 2, 16), int64], Tensor[(10, 2, 16), float32]) */
}

def @func_902() -> Tensor[(10, 2, 16), uint8] {
  @func_900() /* ty=Tensor[(10, 2, 16), uint8] */
}

def @func_1766() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool]) {
  %1986 = @func_1332() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
  %1987 = @func_1332() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
  %1988 = %1987.0;
  %1989 = @func_257() /* ty=Tensor[(10, 2, 16), float32] */;
  %1990 = cast(%1989, dtype="bool") /* ty=Tensor[(10, 2, 16), bool] */;
  %1991 = shape_of(%1988, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1992 = cast(%1988, dtype="bool") /* ty=Tensor[(10, 2, 16), bool] */;
  %1993 = dyn.reshape(%1990, %1991, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1994 = @func_1377() /* ty=Tensor[(10, 2, 16), float32] */;
  %1995 = %1986.0;
  %1996 = equal(%1992, %1993) /* ty=Tensor[(10, 2, 16), bool] */;
  (%1994, %1995, %1996)
}

def @func_11741() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) {
  %2000 = fn () -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) {
    %1997 = @func_9821() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), uint8]) */;
    %1998 = %1997.1;
    %1999 = @func_1518() /* ty=Tensor[(10, 2, 16), float32] */;
    (%1998, %1999)
  };
  %2000() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */
}

def @func_22433() -> Tensor[(10, 2, 16), float32] {
  %2001 = @func_13585() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %2001.0
}

def @func_9966() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) {
  %2002 = @func_8608() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 7, 48), float32], Tensor[(70), float32]) */;
  %2003 = @func_1989() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %2004 = %2002.2;
  %2005 = %2003.0;
  (%2004, %2005)
}

def @func_19735() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  @func_19733() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_17189() -> Tensor[(10, 2, 16), float32] {
  %2006 = @func_807() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %2006.1
}

def @func_14067() -> Tensor[(10, 2, 16), float32] {
  %2007 = fn () -> Tensor[(10, 2, 16), float32] {
    @func_1518() /* ty=Tensor[(10, 2, 16), float32] */
  };
  %2007() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_15678() -> (Tensor[(10, 2, 16), float32],) {
  %2008 = @func_12909() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %2009 = %2008.0;
  (%2009,)
}

def @func_4374() -> Tensor[(10, 2, 16), float32] {
  @func_4372() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_9201() -> Tensor[(10, 2, 16), float32] {
  %2010 = @func_1332() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
  %2010.0
}

def @func_17627() -> Tensor[(10, 2, 16), float64] {
  @func_5084() /* ty=Tensor[(10, 2, 16), float64] */
}

def @func_28236(%var_28235: Tensor[(18), float32]) -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), uint8], Tensor[(18), float32], int16) {
  %2024 = fn (%var_28229: Tensor[(18), float32]) -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), uint8], Tensor[(18), float32], int16) {
    %2011 = @func_12722() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32]) */;
    %2012 = @func_16077() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %2013 = @func_1657() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %2014 = cast(%var_28229, dtype="float32") /* ty=Tensor[(18), float32] */;
    %2015 = cast(meta[relay.Constant][43] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %2016 = reshape(%2014, newshape=[18]) /* ty=Tensor[(18), float32] */;
    %2017 = reshape(%2015, newshape=[]) /* ty=int16 */;
    %2018 = @func_24483(%2016, %2017) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(18), float32], Tensor[(20), int16], int16, Tensor[(10, 2, 16), uint8]) */;
    %2019 = %2011.0;
    %2020 = %2012.0;
    %2021 = %2013.0;
    %2022 = @func_5829() /* ty=Tensor[(432), float32] */;
    %2023 = %2018.5;
    (%2019, %2020, %2021, %2022, %2023, %var_28229, meta[relay.Constant][43] /* ty=int16 */)
  };
  %2024(%var_28235) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), uint8], Tensor[(18), float32], int16) */
}

def @func_7851(%var_7779: Tensor[(15, 6, 11), float32], %var_7828: Tensor[(48), float32], %var_7835: Tensor[(15, 6, 11), float64]) -> (Tensor[(48), float32], Tensor[(48), float32], Tensor[(15, 6, 11), bool]) {
  %2025 = cast(%var_7828, dtype="float32") /* ty=Tensor[(48), float32] */;
  %2026 = reshape(%2025, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %2027 = @func_1912(%2026) /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) */;
  %2028 = cast(%var_7779, dtype="float32") /* ty=Tensor[(15, 6, 11), float32] */;
  %2029 = log(%2028) /* ty=Tensor[(15, 6, 11), float32] */;
  %2030 = cast(%2029, dtype="float64") /* ty=Tensor[(15, 6, 11), float64] */;
  %2031 = sigmoid(%2030) /* ty=Tensor[(15, 6, 11), float64] */;
  %2032 = cast(%var_7835, dtype="bool") /* ty=Tensor[(15, 6, 11), bool] */;
  %2033 = shape_of(%2031, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2034 = cast(%2031, dtype="bool") /* ty=Tensor[(15, 6, 11), bool] */;
  %2035 = dyn.reshape(%2032, %2033, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %2036 = %2027.4;
  %2037 = logical_or(%2034, %2035) /* ty=Tensor[(15, 6, 11), bool] */;
  (%2036, %var_7828, %2037)
}

def @func_13439() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %2038 = @func_12113() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %2039 = @func_9966() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
  %2040 = @func_7388() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 16, 15), int16]) */;
  %2041 = @func_2256() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
  %2042 = @func_1545() /* ty=(Tensor[(10, 2, 16), uint8],) */;
  %2043 = @func_3881() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %2044 = @func_9397() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %2045 = @func_10505() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %2046 = %2038.1;
  %2047 = %2039.0;
  %2048 = %2040.1;
  %2049 = %2041.0;
  %2050 = %2042.0;
  %2051 = %2043.1;
  %2052 = %2044.0;
  %2053 = %2045.2;
  (%2046, %2047, %2048, %2049, %2050, %2051, %2052, %2053)
}

def @func_445() -> Tensor[(10, 2, 16), float32] {
  %2054 = @func_327() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %2054.0
}

def @func_14451() -> (Tensor[(10, 2, 16), uint8],) {
  %2057 = fn () -> (Tensor[(10, 2, 16), uint8],) {
    %2055 = @func_9966() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
    %2056 = %2055.1;
    (%2056,)
  };
  %2057() /* ty=(Tensor[(10, 2, 16), uint8],) */
}

def @func_4569() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) {
  %2063 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) {
    %2058 = @func_1332() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
    %2059 = @func_4087() /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float64]) */;
    %2060 = %2058.0;
    %2061 = %2059.1;
    %2062 = @func_1377() /* ty=Tensor[(10, 2, 16), float32] */;
    (%2060, %2061, %2062)
  };
  %2063() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */
}

def @func_13824() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) {
  %2064 = @func_8655() /* ty=(Tensor[(6, 9, 8), float32], Tensor[(10, 2, 16), float32]) */;
  %2065 = @func_8344() /* ty=(Tensor[(10, 2, 16), float64],) */;
  %2066 = %2064.1;
  %2067 = %2065.0;
  (%2066, %2067)
}

def @func_10674() -> Tensor[(10, 2, 16), float64] {
  %2068 = @func_6158() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %2068.0
}

def @func_26688() -> Tensor[(10, 2, 16), float32] {
  @func_26686() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_4531(%var_4494: Tensor[(10, 7, 1), float32]) -> (Tensor[(10, 7, 1), float32], Tensor[(10, 2, 16), float32]) {
  %2069 = cast(%var_4494, dtype="float32") /* ty=Tensor[(10, 7, 1), float32] */;
  %2070 = log2(%2069) /* ty=Tensor[(10, 7, 1), float32] */;
  %2071 = @func_3845() /* ty=Tensor[(10, 2, 16), float32] */;
  (%2070, %2071)
}

def @func_11651() -> (Tensor[(10, 2, 16), uint8],) {
  @func_11649() /* ty=(Tensor[(10, 2, 16), uint8],) */
}

def @func_15303(%var_15301: Tensor[(169), int32], %var_15302: Tensor[(13, 2, 13), bool]) -> (Tensor[(10, 2, 16), uint8], Tensor[(169), int32], Tensor[(13, 2, 13), uint16], Tensor[(10, 2, 16), uint8]) {
  @func_15299(%var_15301, %var_15302) /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(169), int32], Tensor[(13, 2, 13), uint16], Tensor[(10, 2, 16), uint8]) */
}

def @func_8807() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 1, 2), int16], int16, Tensor[(20), int16], Tensor[(6, 9, 8), float32], Tensor[(48), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float64], Tensor[(432), float32]) {
  %2091 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 1, 2), int16], int16, Tensor[(20), int16], Tensor[(6, 9, 8), float32], Tensor[(48), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float64], Tensor[(432), float32]) {
    %2072 = @func_4925() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %2073 = @func_3294() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8]) */;
    %2074 = cast(meta[relay.Constant][44] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %2075 = cast(meta[relay.Constant][45] /* ty=Tensor[(20), int16] */, dtype="int16") /* ty=Tensor[(20), int16] */;
    %2076 = reshape(%2074, newshape=[]) /* ty=int16 */;
    %2077 = reshape(%2075, newshape=[10, 1, 2]) /* ty=Tensor[(10, 1, 2), int16] */;
    %2078 = @func_3097(%2076, %2077) /* ty=(Tensor[(10, 1, 2), int16], Tensor[(10, 2, 16), float32]) */;
    %2079 = cast(meta[relay.Constant][46] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
    %2080 = reshape(%2079, newshape=[48]) /* ty=Tensor[(48), float32] */;
    %2081 = @func_2613(%2080) /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(6, 9, 8), float32], Tensor[(6, 9, 8), bool], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(48), float32]) */;
    %2082 = @func_8395() /* ty=(Tensor[(10, 2, 16), uint8],) */;
    %2083 = @func_3368() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
    %2084 = %2072.0;
    %2085 = %2073.3;
    %2086 = %2078.0;
    %2087 = %2081.1;
    %2088 = %2082.0;
    %2089 = %2083.3;
    %2090 = @func_5322() /* ty=Tensor[(432), float32] */;
    (%2084, %2085, %2086, meta[relay.Constant][44] /* ty=int16 */, meta[relay.Constant][45] /* ty=Tensor[(20), int16] */, %2087, meta[relay.Constant][46] /* ty=Tensor[(48), float32] */, %2088, %2089, %2090)
  };
  %2091() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 1, 2), int16], int16, Tensor[(20), int16], Tensor[(6, 9, 8), float32], Tensor[(48), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float64], Tensor[(432), float32]) */
}

def @func_9141() -> (Tensor[(10, 2, 16), float32],) {
  %2094 = fn () -> (Tensor[(10, 2, 16), float32],) {
    %2092 = @func_8227() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %2093 = %2092.0;
    (%2093,)
  };
  %2094() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_18295() -> Tensor[(10, 2, 16), float32] {
  %2095 = @func_10641() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %2095.0
}

def @func_16884() -> Tensor[(10, 2, 16), float32] {
  %2096 = @func_16748() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %2096.2
}

def @func_21235() -> Tensor[(10, 2, 16), float32] {
  %2097 = @func_11195() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */;
  %2097.1
}

def @func_12375() -> (Tensor[(432), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) {
  @func_12373() /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32]) */
}

def @func_1960() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  @func_1958() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_4087() -> (Tensor[(432), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float64]) {
  %2098 = @func_1496() /* ty=(Tensor[(432), float32], Tensor[(10, 2, 16), float32]) */;
  %2099 = @func_431() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %2100 = %2098.0;
  %2101 = @func_900() /* ty=Tensor[(10, 2, 16), uint8] */;
  %2102 = %2099.1;
  (%2100, %2101, %2102)
}

def @func_21237() -> Tensor[(10, 2, 16), float32] {
  @func_21235() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_15346() -> (Tensor[(10, 2, 16), float32], float32) {
  @func_15344() /* ty=(Tensor[(10, 2, 16), float32], float32) */
}

def @func_4740(%var_4676: int8) -> (Tensor[(2, 16, 6), int8], Tensor[(10, 2, 16), float32]) {
  %2103 = cast(%var_4676, dtype="int8") /* ty=int8 */;
  %2104 = cast(meta[relay.Constant][47] /* ty=Tensor[(2, 16, 6), int8] */, dtype="int8") /* ty=Tensor[(2, 16, 6), int8] */;
  %2105 = @func_2977() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %2106 = bitwise_or(%2103, %2104) /* ty=Tensor[(2, 16, 6), int8] */;
  %2107 = %2105.0;
  (%2106, %2107)
}

def @func_25587() -> (Tensor[(10, 2, 16), float32],) {
  %2108 = @func_23912() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %2109 = %2108.0;
  (%2109,)
}

def @func_17579() -> (Tensor[(10, 2, 16), float32],) {
  @func_17577() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_23931() -> Tensor[(10, 2, 16), float32] {
  @func_14979() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_4268() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  @func_4266() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_7107() -> (Tensor[(10, 2, 16), uint8],) {
  %2111 = fn () -> (Tensor[(10, 2, 16), uint8],) {
    %2110 = @func_900() /* ty=Tensor[(10, 2, 16), uint8] */;
    (%2110,)
  };
  %2111() /* ty=(Tensor[(10, 2, 16), uint8],) */
}

def @func_10428() -> (Tensor[(10, 2, 16), float64],) {
  %2112 = @func_4799() /* ty=(Tensor[(10, 2, 16), float64], Tensor[(2400), int16]) */;
  %2113 = %2112.0;
  (%2113,)
}

def @func_3788() -> Tensor[(2400), int16] {
  %2114 = @func_3051() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 16, 15), int16], Tensor[(2400), int16]) */;
  %2114.3
}

def @func_16077() -> (Tensor[(10, 2, 16), float32],) {
  %2115 = @func_12219() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %2116 = %2115.0;
  (%2116,)
}

def @func_27444() -> Tensor[(10, 2, 16), float32] {
  %2117 = fn () -> Tensor[(10, 2, 16), float32] {
    @func_8839() /* ty=Tensor[(10, 2, 16), float32] */
  };
  %2117() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_17490() -> (Tensor[(432), float32], Tensor[(10, 2, 16), uint8], Tensor[(320), uint8], Tensor[(432), float32]) {
  %2118 = @func_15945() /* ty=(Tensor[(432), float32],) */;
  %2119 = cast(meta[relay.Constant][48] /* ty=Tensor[(320), uint8] */, dtype="uint8") /* ty=Tensor[(320), uint8] */;
  %2120 = reshape(%2119, newshape=[10, 2, 16]) /* ty=Tensor[(10, 2, 16), uint8] */;
  %2121 = @func_1288(%2120) /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %2122 = @func_15945() /* ty=(Tensor[(432), float32],) */;
  %2123 = %2118.0;
  %2124 = %2121.0;
  %2125 = %2122.0;
  (%2123, %2124, meta[relay.Constant][48] /* ty=Tensor[(320), uint8] */, %2125)
}

def @func_16886() -> Tensor[(10, 2, 16), float32] {
  @func_16884() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_20900() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %2126 = @func_6472() /* ty=(Tensor[(10, 2, 16), float32],) */;
  %2127 = @func_4049() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(48, 1), float32]) */;
  %2128 = %2126.0;
  %2129 = %2127.0;
  (%2128, %2129)
}

def @func_3532() -> (Tensor[(10, 2, 16), uint8], Tensor[(2, 8, 9), float32]) {
  %2134 = fn () -> (Tensor[(10, 2, 16), uint8], Tensor[(2, 8, 9), float32]) {
    %2130 = @func_1989() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %2131 = @func_3439() /* ty=(Tensor[(2, 8, 9), float32], Tensor[(10, 2, 16), float32], Tensor[(8, ?, 2), bool]) */;
    %2132 = %2130.0;
    %2133 = %2131.0;
    (%2132, %2133)
  };
  %2134() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(2, 8, 9), float32]) */
}

def @func_10487() -> Tensor[(8, ?, 2), bool] {
  @func_10278() /* ty=Tensor[(8, ?, 2), bool] */
}

def @func_8538() -> (Tensor[(2400), int16], Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float64], Tensor[(432), float32], Tensor[(10, 2, 16), float32]) {
  %2135 = @func_1766() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), bool]) */;
  %2136 = @func_2515() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float64]) */;
  %2137 = @func_6728() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(432), float32]) */;
  %2138 = @func_1989() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %2139 = @func_3788() /* ty=Tensor[(2400), int16] */;
  %2140 = %2135.2;
  %2141 = %2136.1;
  %2142 = %2137.2;
  %2143 = %2138.3;
  (%2139, %2140, %2141, %2142, %2143)
}

def @func_20608() -> Tensor[(10, 2, 16), float32] {
  @func_20606() /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_16079() -> (Tensor[(10, 2, 16), float32],) {
  @func_16077() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_16226() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) {
  @func_16224() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */
}

def @func_7856(%var_7853: Tensor[(15, 6, 11), float32], %var_7854: Tensor[(48), float32], %var_7855: Tensor[(15, 6, 11), float64]) -> (Tensor[(48), float32], Tensor[(48), float32], Tensor[(15, 6, 11), bool]) {
  @func_7851(%var_7853, %var_7854, %var_7855) /* ty=(Tensor[(48), float32], Tensor[(48), float32], Tensor[(15, 6, 11), bool]) */
}

def @func_15869() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) {
  %2152 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) {
    %2144 = @func_5718() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) */;
    %2145 = @func_13196() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %2146 = @func_14309() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %2147 = %2144.0;
    %2148 = %2145.0;
    %2149 = %2146.0;
    %2150 = @func_15779() /* ty=Tensor[(10, 2, 16), float32] */;
    %2151 = @func_11348() /* ty=Tensor[(2, 8, 9), float32] */;
    (%2147, %2148, %2149, %2150, %2151)
  };
  %2152() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(2, 8, 9), float32]) */
}

def @func_27281() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %2157 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
    %2153 = @func_14954() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
    %2154 = @func_11991() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
    %2155 = %2153.1;
    %2156 = %2154.0;
    (%2155, %2156)
  };
  %2157() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_15633() -> (Tensor[(10, 2, 16), float32],) {
  %2158 = @func_13230() /* ty=Tensor[(10, 2, 16), float32] */;
  (%2158,)
}

def @func_17278() -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(70), float32]) {
  %2167 = fn () -> (Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(70), float32]) {
    %2159 = @func_11305() /* ty=(Tensor[(10, 2, 16), float32],) */;
    %2160 = @func_2960() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(432), float32], Tensor[(10, 2, 16), float32]) */;
    %2161 = cast(meta[relay.Constant][49] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
    %2162 = reshape(%2161, newshape=[1, 70]) /* ty=Tensor[(1, 70), float32] */;
    %2163 = @func_7015(%2162) /* ty=(Tensor[(10, 2, 16), float64], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(1, 70), float32], Tensor[(10, 7, 48), float32]) */;
    %2164 = %2159.0;
    %2165 = %2160.2;
    %2166 = %2163.1;
    (%2164, %2165, %2166, meta[relay.Constant][49] /* ty=Tensor[(70), float32] */)
  };
  %2167() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(70), float32]) */
}

def @func_6351() -> (Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  @func_6349() /* ty=(Tensor[(10, 2, 16), bool], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */
}

def @func_25854() -> (Tensor[(10, 2, 16), float32],) {
  @func_25852() /* ty=(Tensor[(10, 2, 16), float32],) */
}

def @func_1989() -> (Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) {
  %2168 = @func_362() /* ty=(Tensor[(10, 2, 16), float32], Tensor[(10, 2, 16), float32]) */;
  %2169 = @func_1041() /* ty=(Tensor[(10, 2, 16), uint8], Tensor[(10, 2, 16), float32]) */;
  %2170 = @func_900() /* ty=Tensor[(10, 2, 16), uint8] */;
  %2171 = %2168.0;
  %2172 = %2169.1;
  %2173 = @func_445() /* ty=Tensor[(10, 2, 16), float32] */;
  (%2170, %2171, %2172, %2173)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen755/build/output.py:8962: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen755/build/output.py", line 8967, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(36) tvmgen_default_fused_reshape_floor_mod_kernel0(double* __restrict__ T_floor_mod, double* __restrict__ placeholder, double* __restrict__ placeholder1) {
  T_floor_mod[(((int)threadIdx.x))] = (placeholder[(((int)threadIdx.x))] - (floor((placeholder[(((int)threadIdx.x))] / placeholder1[(((int)threadIdx.x))])) * placeholder1[(((int)threadIdx.x))]));
}

extern "C" __global__ void __launch_bounds__(36) tvmgen_default_fused_acos_kernel0(double* __restrict__ T_acos, double* __restrict__ placeholder) {
  T_acos[(((int)threadIdx.x))] = acos(placeholder[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


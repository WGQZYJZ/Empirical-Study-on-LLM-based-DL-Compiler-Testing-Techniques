==========mod==========
#[version = "0.0.5"]
def @func_4149() -> Tensor[(15, 10, 3), float64] {
  %0 = @func_2036() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %0.0
}

def @func_11175() -> (Tensor[(60), float32],) {
  %1 = @func_2284() /* ty=Tensor[(60), float32] */;
  (%1,)
}

def @func_3486() -> Tensor[(8, 13, 10), float32] {
  @func_2726() /* ty=Tensor[(8, 13, 10), float32] */
}

def @func_19455() -> Tensor[(15, 10, 3), float64] {
  %2 = @func_13001() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %2.0
}

def @func_11692() -> Tensor[(15, 10, 3), uint64] {
  %3 = @func_8510() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), uint64]) */;
  %3.1
}

def @func_8510() -> (Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), uint64]) {
  %4 = @func_8331() /* ty=(Tensor[(8, 13, 10), float32],) */;
  %5 = %4.0;
  %6 = @func_2659() /* ty=Tensor[(15, 10, 3), uint64] */;
  (%5, %6)
}

def @func_12353() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %7 = @func_258() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %8 = @func_359() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %9 = %7.0;
  %10 = %8.2;
  (%9, %10)
}

def @func_16523() -> (Tensor[(15, 10, 3), float64],) {
  %11 = @func_9801() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %12 = %11.2;
  (%12,)
}

def @func_17573(%var_17553: Tensor[(8, 12, 10), int16]) -> (Tensor[(8, 12, 10), bool], Tensor[(15, 10, 3), float64]) {
  %13 = cast(%var_17553, dtype="bool") /* ty=Tensor[(8, 12, 10), bool] */;
  %14 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(8, 12, 10), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %15 = cast(meta[relay.Constant][0] /* ty=Tensor[(8, 12, 10), int16] */, dtype="bool") /* ty=Tensor[(8, 12, 10), bool] */;
  %16 = dyn.reshape(%13, %14, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %17 = @func_9276() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %18 = greater(%15, %16) /* ty=Tensor[(8, 12, 10), bool] */;
  %19 = %17.0;
  (%18, %19)
}

def @func_16904() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %20 = @func_14362() /* ty=Tensor[(15, 10, 3), float64] */;
  %21 = @func_588() /* ty=Tensor[(15, 10, 3), float64] */;
  (%20, %21)
}

def @func_7091() -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) {
  %22 = @func_4133() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(450), float64], Tensor[(15, 10, 3), float64]) */;
  %23 = @func_5662() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %24 = @func_1947() /* ty=(Tensor[(9, 10, 6), bool],) */;
  %25 = %22.3;
  %26 = %23.2;
  %27 = @func_314() /* ty=Tensor[(15, 10, 3), float64] */;
  %28 = %24.0;
  (%25, %26, %27, %28)
}

def @func_15646() -> Tensor[(15, 10, 3), float64] {
  %29 = @func_4162() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %29.0
}

def @func_10734() -> Tensor[(15, 10, 3), float64] {
  @func_376() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_6197() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32]) {
  %30 = @func_3809() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) */;
  %31 = @func_3329() /* ty=(Tensor[(60), float32],) */;
  %32 = @func_376() /* ty=Tensor[(15, 10, 3), float64] */;
  %33 = @func_666() /* ty=Tensor[(15, 10, 3), float64] */;
  %34 = @func_1661() /* ty=Tensor[(15, 10, 3), float64] */;
  %35 = %30.0;
  %36 = %31.0;
  (%32, %33, %34, %35, %36)
}

def @func_20578() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %37 = @func_9801() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %38 = %37.1;
  %39 = @func_11728() /* ty=Tensor[(15, 10, 3), float64] */;
  (%38, %39)
}

def @func_17865() -> (Tensor[(60), float32],) {
  %40 = @func_8613() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32]) */;
  %41 = %40.1;
  (%41,)
}

def @func_19962() -> (Tensor[(60), float32], Tensor[(15, 10, 3), float64]) {
  %42 = @func_13530() /* ty=(Tensor[(60), float32],) */;
  %43 = %42.0;
  %44 = @func_14510() /* ty=Tensor[(15, 10, 3), float64] */;
  (%43, %44)
}

def @func_20659() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32]) {
  %45 = @func_17937() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(10, 14, 15), float64]) */;
  %46 = @func_7272() /* ty=(Tensor[(15, 10, 3), float32],) */;
  %47 = @func_937() /* ty=Tensor[(15, 10, 3), float64] */;
  %48 = %45.0;
  %49 = %46.0;
  (%47, %48, %49)
}

def @func_17318(%var_17302: Tensor[(8, 13, 10), float32]) -> (Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32], Tensor[(8, 13, 10), bool]) {
  %50 = @func_9436() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %51 = @func_8331() /* ty=(Tensor[(8, 13, 10), float32],) */;
  %52 = @func_8403() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(4, 9, 5), float32]) */;
  %53 = %52.0;
  %54 = cast(%var_17302, dtype="bool") /* ty=Tensor[(8, 13, 10), bool] */;
  %55 = shape_of(%53, dtype="int32") /* ty=Tensor[(3), int32] */;
  %56 = cast(%53, dtype="bool") /* ty=Tensor[(8, 13, 10), bool] */;
  %57 = dyn.reshape(%54, %55, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %58 = @func_14195() /* ty=Tensor[(60), float32] */;
  %59 = %50.0;
  %60 = @func_14102() /* ty=Tensor[(15, 10, 3), float64] */;
  %61 = %51.0;
  %62 = equal(%56, %57) /* ty=Tensor[(8, 13, 10), bool] */;
  (%58, %59, %60, %61, %62)
}

def @func_314() -> Tensor[(15, 10, 3), float64] {
  %63 = @func_300() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %63.0
}

def @func_588() -> Tensor[(15, 10, 3), float64] {
  %64 = @func_167() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %65 = %64.0;
  %66 = cast(%65, dtype="float64") /* ty=Tensor[(15, 10, 3), float64] */;
  acos(%66) /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_1251(%var_1239: Tensor[(6, 14, 3), float32], %var_1240: Tensor[(6, 14, 3), float32]) -> (Tensor[(6, 14, 3), bool],) {
  %67 = cast(%var_1240, dtype="bool") /* ty=Tensor[(6, 14, 3), bool] */;
  %68 = shape_of(%var_1239, dtype="int32") /* ty=Tensor[(3), int32] */;
  %69 = cast(%var_1239, dtype="bool") /* ty=Tensor[(6, 14, 3), bool] */;
  %70 = dyn.reshape(%67, %68, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %71 = greater(%69, %70) /* ty=Tensor[(6, 14, 3), bool] */;
  (%71,)
}

def @func_20796(%var_20763: Tensor[(280), int16]) -> (Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64], Tensor[(280), float64]) {
  %72 = @func_7272() /* ty=(Tensor[(15, 10, 3), float32],) */;
  %73 = @func_13626() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %74 = cast(%var_20763, dtype="int16") /* ty=Tensor[(280), int16] */;
  %75 = reshape(%74, newshape=[280]) /* ty=Tensor[(280), int16] */;
  %76 = @func_10465(%75) /* ty=(Tensor[(15, 10, 3), float32], Tensor[(280), int16], Tensor[(280), int16]) */;
  %77 = %76.2;
  %78 = cast(%77, dtype="int64") /* ty=Tensor[(280), int64] */;
  %79 = shape_of(%var_20763, dtype="int32") /* ty=Tensor[(1), int32] */;
  %80 = cast(%var_20763, dtype="int64") /* ty=Tensor[(280), int64] */;
  %81 = dyn.reshape(%78, %79, newshape=[]) /* ty=Tensor[(?), int64] */;
  %82 = left_shift(%80, %81) /* ty=Tensor[(280), int64] */;
  %83 = cast(%82, dtype="float64") /* ty=Tensor[(280), float64] */;
  %84 = shape_of(%77, dtype="int32") /* ty=Tensor[(1), int32] */;
  %85 = cast(%77, dtype="float64") /* ty=Tensor[(280), float64] */;
  %86 = dyn.reshape(%83, %84, newshape=[]) /* ty=Tensor[(?), float64] */;
  %87 = %72.0;
  %88 = %73.1;
  %89 = maximum(%85, %86) /* ty=Tensor[(280), float64] */;
  (%87, %88, %89)
}

def @func_12827() -> (Tensor[(15, 10, 3), float64], Tensor[(4, 10, 13), bool], Tensor[(520), uint16]) {
  %90 = @func_12259() /* ty=(Tensor[(4, 9, 5), float32], Tensor[(15, 10, 3), float64]) */;
  %91 = cast(meta[relay.Constant][1] /* ty=Tensor[(520), uint16] */, dtype="uint16") /* ty=Tensor[(520), uint16] */;
  %92 = reshape(%91, newshape=[520]) /* ty=Tensor[(520), uint16] */;
  %93 = @func_12461(%92) /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(4, 10, 13), bool], Tensor[(520), uint16]) */;
  %94 = %90.1;
  %95 = %93.2;
  (%94, %95, meta[relay.Constant][1] /* ty=Tensor[(520), uint16] */)
}

def @func_10673() -> Tensor[(10, 14, 15), float64] {
  %96 = @func_10496() /* ty=(Tensor[(10, 14, 15), float64],) */;
  %96.0
}

def @func_14278() -> (Tensor[(10, 14, 15), float64],) {
  %97 = @func_9085() /* ty=Tensor[(10, 14, 15), float64] */;
  (%97,)
}

def @func_2330(%var_2312: Tensor[(4, 10, 13), uint16]) -> (Tensor[(4, 10, 13), bool], Tensor[(15, 10, 3), float64], Tensor[(4, 10, 13), float64]) {
  %98 = cast(meta[relay.Constant][2] /* ty=Tensor[(4, 10, 1), uint16] */, dtype="bool") /* ty=Tensor[(4, 10, 1), bool] */;
  %99 = cast(%var_2312, dtype="bool") /* ty=Tensor[(4, 10, 13), bool] */;
  %100 = cast(%var_2312, dtype="float32") /* ty=Tensor[(4, 10, 13), float32] */;
  %101 = tan(%100) /* ty=Tensor[(4, 10, 13), float32] */;
  %102 = cast(%101, dtype="float64") /* ty=Tensor[(4, 10, 13), float64] */;
  %103 = less_equal(%98, %99) /* ty=Tensor[(4, 10, 13), bool] */;
  %104 = @func_376() /* ty=Tensor[(15, 10, 3), float64] */;
  %105 = exp(%102) /* ty=Tensor[(4, 10, 13), float64] */;
  (%103, %104, %105)
}

def @func_2479() -> Tensor[(15, 10, 3), float64] {
  @func_588() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_14472() -> Tensor[(15, 10, 3), float64] {
  %106 = @func_2844() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %106.0
}

def @func_718(%var_692: Tensor[(3, 20), float32]) -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(3, 20), float32]) {
  %107 = @func_359() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %108 = @func_198() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %109 = @func_258() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %110 = cast(%var_692, dtype="float32") /* ty=Tensor[(3, 20), float32] */;
  %111 = reshape(%110, newshape=[5, 12, 1]) /* ty=Tensor[(5, 12, 1), float32] */;
  %112 = @func_484(%111) /* ty=(Tensor[(5, 12, 1), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %113 = %107.1;
  %114 = %108.0;
  %115 = %109.1;
  %116 = %112.2;
  (%113, %114, %115, %116, %var_692)
}

def @func_11728() -> Tensor[(15, 10, 3), float64] {
  @func_6480() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_15969() -> (Tensor[(15, 10, 3), float64],) {
  %117 = @func_2589() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) */;
  %118 = %117.0;
  (%118,)
}

def @func_10648() -> (Tensor[(8, 13, 10), bool], Tensor[(8, 13, 10), float32], Tensor[(9, 8, 14), float64], Tensor[(84, 12), float64]) {
  %119 = @func_8510() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), uint64]) */;
  %120 = %119.0;
  %121 = cast(meta[relay.Constant][3] /* ty=Tensor[(8, 13, 10), float32] */, dtype="bool") /* ty=Tensor[(8, 13, 10), bool] */;
  %122 = shape_of(%120, dtype="int32") /* ty=Tensor[(3), int32] */;
  %123 = cast(%120, dtype="bool") /* ty=Tensor[(8, 13, 10), bool] */;
  %124 = dyn.reshape(%121, %122, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %125 = @func_8331() /* ty=(Tensor[(8, 13, 10), float32],) */;
  %126 = cast(meta[relay.Constant][4] /* ty=Tensor[(84, 12), float64] */, dtype="float64") /* ty=Tensor[(84, 12), float64] */;
  %127 = reshape(%126, newshape=[9, 8, 14]) /* ty=Tensor[(9, 8, 14), float64] */;
  %128 = @func_8992(%127) /* ty=(Tensor[(9, 8, 14), float64], Tensor[(15, 10, 3), float64]) */;
  %129 = greater(%123, %124) /* ty=Tensor[(8, 13, 10), bool] */;
  %130 = %125.0;
  %131 = %128.0;
  (%129, %130, %131, meta[relay.Constant][4] /* ty=Tensor[(84, 12), float64] */)
}

def @func_13287() -> Tensor[(15, 10, 3), float64] {
  %132 = @func_1495() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %132.0
}

def @func_6711() -> (Tensor[(15, 10, 3), float64],) {
  %133 = @func_2479() /* ty=Tensor[(15, 10, 3), float64] */;
  (%133,)
}

def @func_19726() -> (Tensor[(8, 7, 11), bool],) {
  %134 = @func_10165() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(8, 7, 11), bool]) */;
  %135 = %134.2;
  (%135,)
}

def @func_3415() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64]) {
  %136 = @func_887() /* ty=(Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
  %137 = @func_2479() /* ty=Tensor[(15, 10, 3), float64] */;
  %138 = cast(%137, dtype="float32") /* ty=Tensor[(15, 10, 3), float32] */;
  %139 = @func_300() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %140 = %136.1;
  %141 = @func_2198() /* ty=Tensor[(15, 10, 3), float64] */;
  %142 = log10(%138) /* ty=Tensor[(15, 10, 3), float32] */;
  %143 = %139.1;
  (%140, %141, %142, %143)
}

def @func_16769(%var_16746: Tensor[(252), float32], %var_16753: Tensor[(6, 14, 3), bool]) -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(252), float32], Tensor[(15, 10, 3), float64], Tensor[(6, 14, 3), bool], Tensor[(60), float32]) {
  %144 = @func_4267() /* ty=(Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %145 = @func_16333() /* ty=(Tensor[(60), float32],) */;
  %146 = cast(%var_16746, dtype="float32") /* ty=Tensor[(252), float32] */;
  %147 = cast(%var_16746, dtype="float32") /* ty=Tensor[(252), float32] */;
  %148 = reshape(%146, newshape=[6, 14, 3]) /* ty=Tensor[(6, 14, 3), float32] */;
  %149 = reshape(%147, newshape=[6, 14, 3]) /* ty=Tensor[(6, 14, 3), float32] */;
  %150 = @func_1251(%148, %149) /* ty=(Tensor[(6, 14, 3), bool],) */;
  %151 = %150.0;
  %152 = cast(%var_16753, dtype="bool") /* ty=Tensor[(6, 14, 3), bool] */;
  %153 = shape_of(%151, dtype="int32") /* ty=Tensor[(3), int32] */;
  %154 = cast(%151, dtype="bool") /* ty=Tensor[(6, 14, 3), bool] */;
  %155 = dyn.reshape(%152, %153, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %156 = @func_1541() /* ty=(Tensor[(60), float32],) */;
  %157 = %144.3;
  %158 = %145.0;
  %159 = @func_2198() /* ty=Tensor[(15, 10, 3), float64] */;
  %160 = not_equal(%154, %155) /* ty=Tensor[(6, 14, 3), bool] */;
  %161 = %156.0;
  (%157, %158, %var_16746, %159, %160, %161)
}

def @func_18269() -> Tensor[(8, 13, 10), float32] {
  %162 = @func_8510() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), uint64]) */;
  %162.0
}

def @func_13530() -> (Tensor[(60), float32],) {
  %163 = @func_1579() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %164 = %163.1;
  (%164,)
}

def @func_2473() -> Tensor[(9, 10, 6), bool] {
  %165 = @func_1947() /* ty=(Tensor[(9, 10, 6), bool],) */;
  %165.0
}

def @func_10037(%var_10019: Tensor[(60), float32]) -> (Tensor[(8, 13, 10), float32], Tensor[(9, 10, 6), bool], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) {
  %166 = @func_8403() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(4, 9, 5), float32]) */;
  %167 = @func_1947() /* ty=(Tensor[(9, 10, 6), bool],) */;
  %168 = cast(%var_10019, dtype="float32") /* ty=Tensor[(60), float32] */;
  %169 = reshape(%168, newshape=[3, 20]) /* ty=Tensor[(3, 20), float32] */;
  %170 = @func_718(%169) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(3, 20), float32]) */;
  %171 = @func_6868() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %172 = %166.0;
  %173 = %167.0;
  %174 = %170.0;
  %175 = %171.4;
  (%172, %173, %174, %var_10019, %175)
}

def @func_20036() -> (Tensor[(15, 10, 3), float64], Tensor[(7, 3, 11), float64]) {
  %176 = @func_6233() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %177 = @func_18331() /* ty=(Tensor[(7, 3, 11), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %178 = %176.0;
  %179 = %177.0;
  (%178, %179)
}

def @func_3329() -> (Tensor[(60), float32],) {
  %180 = @func_3090() /* ty=(Tensor[(60), float32],) */;
  %181 = %180.0;
  (%181,)
}

def @func_3809() -> (Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) {
  %182 = @func_2589() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) */;
  %183 = @func_666() /* ty=Tensor[(15, 10, 3), float64] */;
  %184 = %182.1;
  (%183, %184)
}

def @func_9436() -> (Tensor[(15, 10, 3), float64],) {
  %185 = @func_6959() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %186 = %185.0;
  (%186,)
}

def @func_359() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %187 = @func_300() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %188 = @func_167() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %189 = @func_300() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %190 = %187.1;
  %191 = %188.0;
  %192 = %189.0;
  (%190, %191, %192)
}

def @func_14510() -> Tensor[(15, 10, 3), float64] {
  @func_12057() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_14318() -> Tensor[(15, 10, 3), float64] {
  %193 = @func_8690() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %193.0
}

def @func_19216(%var_19150: Tensor[(8, 13, 10), float32]) -> (Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), bool], Tensor[(15, 10, 3), float64]) {
  %194 = @func_13001() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %195 = @func_1879() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %196 = @func_9376() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */;
  %197 = %196.1;
  %198 = cast(%var_19150, dtype="bool") /* ty=Tensor[(8, 13, 10), bool] */;
  %199 = shape_of(%197, dtype="int32") /* ty=Tensor[(3), int32] */;
  %200 = cast(%197, dtype="bool") /* ty=Tensor[(8, 13, 10), bool] */;
  %201 = dyn.reshape(%198, %199, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %202 = %194.1;
  %203 = %195.0;
  %204 = less(%200, %201) /* ty=Tensor[(8, 13, 10), bool] */;
  %205 = @func_10335() /* ty=Tensor[(15, 10, 3), float64] */;
  (%202, %203, %204, %205)
}

def @func_198() -> (Tensor[(15, 10, 3), float64],) {
  %206 = @func_184() /* ty=Tensor[(15, 10, 3), float64] */;
  (%206,)
}

def @func_484(%var_464: Tensor[(5, 12, 1), float32]) -> (Tensor[(5, 12, 1), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %207 = cast(%var_464, dtype="float32") /* ty=Tensor[(5, 12, 1), float32] */;
  %208 = @func_300() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %209 = erf(%207) /* ty=Tensor[(5, 12, 1), float32] */;
  %210 = %208.1;
  %211 = @func_184() /* ty=Tensor[(15, 10, 3), float64] */;
  (%209, %210, %211)
}

def @func_12461(%var_12448: Tensor[(520), uint16]) -> (Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(4, 10, 13), bool], Tensor[(520), uint16]) {
  %212 = @func_3329() /* ty=(Tensor[(60), float32],) */;
  %213 = %212.0;
  %214 = cast(%213, dtype="float32") /* ty=Tensor[(60), float32] */;
  %215 = reshape(%214, newshape=[60, 1]) /* ty=Tensor[(60, 1), float32] */;
  %216 = @func_655(%215) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60, 1), float32]) */;
  %217 = cast(%var_12448, dtype="uint16") /* ty=Tensor[(520), uint16] */;
  %218 = reshape(%217, newshape=[4, 10, 13]) /* ty=Tensor[(4, 10, 13), uint16] */;
  %219 = @func_2330(%218) /* ty=(Tensor[(4, 10, 13), bool], Tensor[(15, 10, 3), float64], Tensor[(4, 10, 13), float64]) */;
  %220 = %216.2;
  %221 = %219.0;
  (%213, %220, %221, %var_12448)
}

def @func_15176() -> (Tensor[(15, 10, 3), float64],) {
  %222 = @func_1495() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %223 = %222.0;
  (%223,)
}

def @func_811(%var_801: Tensor[(9, 10, 6), uint8], %var_802: Tensor[(9, 10, 6), uint8]) -> (Tensor[(9, 10, 6), bool],) {
  %224 = cast(%var_802, dtype="bool") /* ty=Tensor[(9, 10, 6), bool] */;
  %225 = shape_of(%var_801, dtype="int32") /* ty=Tensor[(3), int32] */;
  %226 = cast(%var_801, dtype="bool") /* ty=Tensor[(9, 10, 6), bool] */;
  %227 = dyn.reshape(%224, %225, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %228 = less_equal(%226, %227) /* ty=Tensor[(9, 10, 6), bool] */;
  (%228,)
}

def @func_20145() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %229 = @func_15176() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %230 = @func_12353() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %231 = @func_12117() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %232 = %229.0;
  %233 = %230.0;
  %234 = %231.0;
  (%232, %233, %234)
}

def @func_10165() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(8, 7, 11), bool]) {
  %235 = @func_2866() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %236 = cast(meta[relay.Constant][5] /* ty=Tensor[(616), bool] */, dtype="bool") /* ty=Tensor[(616), bool] */;
  %237 = cast(meta[relay.Constant][5] /* ty=Tensor[(616), bool] */, dtype="bool") /* ty=Tensor[(616), bool] */;
  %238 = reshape(%236, newshape=[8, 7, 11]) /* ty=Tensor[(8, 7, 11), bool] */;
  %239 = reshape(%237, newshape=[8, 7, 11]) /* ty=Tensor[(8, 7, 11), bool] */;
  %240 = @func_6991(%238, %239) /* ty=(Tensor[(8, 7, 11), bool], Tensor[(8, 7, 11), uint64], Tensor[(15, 10, 3), float64], Tensor[(8, 7, 11), float64]) */;
  %241 = %240.1;
  %242 = cast(meta[relay.Constant][5] /* ty=Tensor[(616), bool] */, dtype="bool") /* ty=Tensor[(616), bool] */;
  %243 = shape_of(%241, dtype="int32") /* ty=Tensor[(3), int32] */;
  %244 = cast(%241, dtype="bool") /* ty=Tensor[(8, 7, 11), bool] */;
  %245 = dyn.reshape(%242, %243, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %246 = @func_937() /* ty=Tensor[(15, 10, 3), float64] */;
  %247 = %235.0;
  %248 = less(%244, %245) /* ty=Tensor[(8, 7, 11), bool] */;
  (%246, %247, %248)
}

def @func_20834() -> (Tensor[(15, 10, 3), float64],) {
  %249 = @func_9163() /* ty=(Tensor[(15, 10, 3), uint64], Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) */;
  %250 = %249.1;
  (%250,)
}

def @func_10465(%var_10454: Tensor[(280), int16]) -> (Tensor[(15, 10, 3), float32], Tensor[(280), int16], Tensor[(280), int16]) {
  %251 = @func_2479() /* ty=Tensor[(15, 10, 3), float64] */;
  %252 = cast(%251, dtype="float32") /* ty=Tensor[(15, 10, 3), float32] */;
  %253 = cast(%var_10454, dtype="int16") /* ty=Tensor[(280), int16] */;
  %254 = reshape(%253, newshape=[280]) /* ty=Tensor[(280), int16] */;
  %255 = @func_2629(%254) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(5, 4, 14), int16], Tensor[(280), int16]) */;
  %256 = sin(%252) /* ty=Tensor[(15, 10, 3), float32] */;
  %257 = %255.2;
  (%256, %257, %var_10454)
}

def @func_2785() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %258 = @func_1791() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %259 = %258.0;
  %260 = @func_314() /* ty=Tensor[(15, 10, 3), float64] */;
  (%259, %260)
}

def @func_21461() -> Tensor[(15, 10, 3), float64] {
  @func_2130() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_21229() -> (Tensor[(8, 7, 11), bool], Tensor[(60, 1), float32], Tensor[(60), float32], Tensor[(9, 10, 6), bool], Tensor[(15, 10, 3), float64]) {
  %261 = @func_19726() /* ty=(Tensor[(8, 7, 11), bool],) */;
  %262 = cast(meta[relay.Constant][6] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %263 = reshape(%262, newshape=[60, 1]) /* ty=Tensor[(60, 1), float32] */;
  %264 = @func_655(%263) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60, 1), float32]) */;
  %265 = @func_13734() /* ty=(Tensor[(9, 10, 6), bool],) */;
  %266 = @func_4889() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(60), float32], Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64]) */;
  %267 = %261.0;
  %268 = %264.4;
  %269 = %265.0;
  %270 = %266.1;
  (%267, %268, meta[relay.Constant][6] /* ty=Tensor[(60), float32] */, %269, %270)
}

def @func_1879() -> (Tensor[(15, 10, 3), float64],) {
  %271 = @func_1501() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %272 = %271.0;
  (%272,)
}

def @func_9914() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(60), float32], Tensor[(10, 14, 15), float64]) {
  %273 = @func_6904() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %274 = @func_8083() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %275 = @func_6673() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %276 = @func_1579() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %277 = @func_3090() /* ty=(Tensor[(60), float32],) */;
  %278 = @func_8001() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(10, 14, 15), float64], Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64]) */;
  %279 = %273.0;
  %280 = %274.2;
  %281 = %275.1;
  %282 = %276.1;
  %283 = %277.0;
  %284 = %278.1;
  (%279, %280, %281, %282, %283, %284)
}

def @func_5110() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %285 = @func_2785() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %286 = @func_314() /* ty=Tensor[(15, 10, 3), float64] */;
  %287 = %285.1;
  (%286, %287)
}

def @func_11374(%var_11365: Tensor[(462), float64]) -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(462), float64], Tensor[(15, 10, 3), float64]) {
  %288 = @func_3155() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool], Tensor[(15, 10, 3), float64]) */;
  %289 = @func_3415() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64]) */;
  %290 = @func_4547() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %291 = @func_8613() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32]) */;
  %292 = cast(%var_11365, dtype="float64") /* ty=Tensor[(462), float64] */;
  %293 = reshape(%292, newshape=[3, 11, 14]) /* ty=Tensor[(3, 11, 14), float64] */;
  %294 = @func_7691(%293) /* ty=(Tensor[(3, 11, 14), float64], Tensor[(60), float32]) */;
  %295 = %288.2;
  %296 = %289.3;
  %297 = %290.0;
  %298 = %291.2;
  %299 = %294.1;
  %300 = @func_11102() /* ty=Tensor[(15, 10, 3), float64] */;
  (%295, %296, %297, %298, %299, %var_11365, %300)
}

def @func_1818() -> (Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool], Tensor[(540), uint8]) {
  %301 = cast(meta[relay.Constant][7] /* ty=Tensor[(540), uint8] */, dtype="uint8") /* ty=Tensor[(540), uint8] */;
  %302 = cast(meta[relay.Constant][7] /* ty=Tensor[(540), uint8] */, dtype="uint8") /* ty=Tensor[(540), uint8] */;
  %303 = reshape(%301, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), uint8] */;
  %304 = reshape(%302, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), uint8] */;
  %305 = @func_811(%303, %304) /* ty=(Tensor[(9, 10, 6), bool],) */;
  %306 = @func_666() /* ty=Tensor[(15, 10, 3), float64] */;
  %307 = %305.0;
  (%306, %307, meta[relay.Constant][7] /* ty=Tensor[(540), uint8] */)
}

def @func_13385() -> (Tensor[(15, 10, 3), float64], Tensor[(8, 7, 11), uint64], Tensor[(616), bool], Tensor[(15, 10, 3), float64]) {
  %308 = @func_6868() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %309 = cast(meta[relay.Constant][8] /* ty=Tensor[(616), bool] */, dtype="bool") /* ty=Tensor[(616), bool] */;
  %310 = cast(meta[relay.Constant][8] /* ty=Tensor[(616), bool] */, dtype="bool") /* ty=Tensor[(616), bool] */;
  %311 = reshape(%309, newshape=[8, 7, 11]) /* ty=Tensor[(8, 7, 11), bool] */;
  %312 = reshape(%310, newshape=[8, 7, 11]) /* ty=Tensor[(8, 7, 11), bool] */;
  %313 = @func_6991(%311, %312) /* ty=(Tensor[(8, 7, 11), bool], Tensor[(8, 7, 11), uint64], Tensor[(15, 10, 3), float64], Tensor[(8, 7, 11), float64]) */;
  %314 = @func_13275() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %315 = %308.2;
  %316 = %313.1;
  %317 = %314.0;
  (%315, %316, meta[relay.Constant][8] /* ty=Tensor[(616), bool] */, %317)
}

def @func_13626() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %318 = @func_300() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %319 = @func_3540() /* ty=Tensor[(15, 10, 3), float64] */;
  %320 = %318.1;
  (%319, %320)
}

def @func_4436(%var_4409: Tensor[(10, 16, 8), int64], %var_4410: Tensor[(10, 16, 8), int64]) -> (Tensor[(10, 16, 8), int16],) {
  %321 = cast(%var_4410, dtype="int64") /* ty=Tensor[(10, 16, 8), int64] */;
  %322 = shape_of(%var_4409, dtype="int32") /* ty=Tensor[(3), int32] */;
  %323 = cast(%var_4409, dtype="int64") /* ty=Tensor[(10, 16, 8), int64] */;
  %324 = dyn.reshape(%321, %322, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %325 = right_shift(%323, %324) /* ty=Tensor[(10, 16, 8), int64] */;
  %326 = cast(%var_4410, dtype="int16") /* ty=Tensor[(10, 16, 8), int16] */;
  %327 = shape_of(%325, dtype="int32") /* ty=Tensor[(3), int32] */;
  %328 = cast(%325, dtype="int16") /* ty=Tensor[(10, 16, 8), int16] */;
  %329 = dyn.reshape(%326, %327, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %330 = logical_xor(%328, %329) /* ty=Tensor[(10, 16, 8), int16] */;
  (%330,)
}

def @func_11244() -> (Tensor[(60), float32], Tensor[(8, 13, 10), float32], Tensor[(8, 13, 10), float32]) {
  %331 = @func_8923() /* ty=(Tensor[(8, 13, 10), float32],) */;
  %332 = @func_2565() /* ty=Tensor[(60), float32] */;
  %333 = %331.0;
  %334 = @func_2726() /* ty=Tensor[(8, 13, 10), float32] */;
  (%332, %333, %334)
}

def @func_6031() -> (Tensor[(8, 13, 10), float32],) {
  %335 = @func_2726() /* ty=Tensor[(8, 13, 10), float32] */;
  (%335,)
}

def @func_2401() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %336 = @func_167() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %337 = @func_2036() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %338 = %336.0;
  %339 = %337.0;
  (%338, %339)
}

def @func_20207() -> (Tensor[(15, 10, 3), uint64],) {
  %340 = @func_8510() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), uint64]) */;
  %341 = %340.1;
  (%341,)
}

def @func_14102() -> Tensor[(15, 10, 3), float64] {
  %342 = @func_11746() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %342.0
}

def @func_15293() -> (Tensor[(9, 10, 6), bool],) {
  %343 = @func_3155() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool], Tensor[(15, 10, 3), float64]) */;
  %344 = %343.3;
  (%344,)
}

def @func_5911() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32], Tensor[(60), float32]) {
  %345 = @func_2401() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %346 = @func_887() /* ty=(Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
  %347 = @func_5715() /* ty=Tensor[(15, 10, 3), float64] */;
  %348 = %345.0;
  %349 = %346.0;
  %350 = @func_2284() /* ty=Tensor[(60), float32] */;
  (%347, %348, %349, %350)
}

def @func_12640() -> (Tensor[(15, 10, 3), float64], Tensor[(1280, 11), uint8], Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64]) {
  %351 = @func_1579() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %352 = @func_6323() /* ty=(Tensor[(4, 9, 5), float32], Tensor[(60), float32], Tensor[(10, 16, 8), int16], Tensor[(1280, 1), int64], Tensor[(60), float32]) */;
  %353 = %352.3;
  %354 = cast(%353, dtype="uint8") /* ty=Tensor[(1280, 1), uint8] */;
  %355 = cast(meta[relay.Constant][9] /* ty=Tensor[(1280, 11), int64] */, dtype="uint8") /* ty=Tensor[(1280, 11), uint8] */;
  %356 = @func_6832() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */;
  %357 = @func_7881() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %358 = %351.0;
  %359 = logical_xor(%354, %355) /* ty=Tensor[(1280, 11), uint8] */;
  %360 = %356.2;
  %361 = %357.0;
  (%358, %359, %360, %361)
}

def @func_5757() -> Tensor[(10, 14, 15), float64] {
  %362 = cast(meta[relay.Constant][10] /* ty=Tensor[(10, 14, 15), float64] */, dtype="float64") /* ty=Tensor[(10, 14, 15), float64] */;
  tan(%362) /* ty=Tensor[(10, 14, 15), float64] */
}

def @func_6991(%var_6970: Tensor[(8, 7, 11), bool], %var_6977: Tensor[(8, 7, 11), bool]) -> (Tensor[(8, 7, 11), bool], Tensor[(8, 7, 11), uint64], Tensor[(15, 10, 3), float64], Tensor[(8, 7, 11), float64]) {
  %363 = cast(meta[relay.Constant][11] /* ty=Tensor[(8, 7, 11), bool] */, dtype="bool") /* ty=Tensor[(8, 7, 11), bool] */;
  %364 = shape_of(%var_6970, dtype="int32") /* ty=Tensor[(3), int32] */;
  %365 = cast(%var_6970, dtype="bool") /* ty=Tensor[(8, 7, 11), bool] */;
  %366 = dyn.reshape(%363, %364, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %367 = cast(%var_6977, dtype="uint64") /* ty=Tensor[(8, 7, 11), uint64] */;
  %368 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(8, 7, 11), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %369 = cast(meta[relay.Constant][11] /* ty=Tensor[(8, 7, 11), bool] */, dtype="uint64") /* ty=Tensor[(8, 7, 11), uint64] */;
  %370 = dyn.reshape(%367, %368, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %371 = cast(meta[relay.Constant][11] /* ty=Tensor[(8, 7, 11), bool] */, dtype="float64") /* ty=Tensor[(8, 7, 11), float64] */;
  %372 = logical_and(%365, %366) /* ty=Tensor[(8, 7, 11), bool] */;
  %373 = right_shift(%369, %370) /* ty=Tensor[(8, 7, 11), uint64] */;
  %374 = @func_2540() /* ty=Tensor[(15, 10, 3), float64] */;
  %375 = sigmoid(%371) /* ty=Tensor[(8, 7, 11), float64] */;
  (%372, %373, %374, %375)
}

def @func_5068() -> (Tensor[(60), float32], Tensor[(15, 10, 3), float64]) {
  %376 = @func_1383() /* ty=(Tensor[(60), float32],) */;
  %377 = %376.0;
  %378 = @func_314() /* ty=Tensor[(15, 10, 3), float64] */;
  (%377, %378)
}

def @func_20106() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %379 = @func_17620() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64]) */;
  %380 = @func_14362() /* ty=Tensor[(15, 10, 3), float64] */;
  %381 = %379.1;
  (%380, %381)
}

def @func_10335() -> Tensor[(15, 10, 3), float64] {
  %382 = @func_2401() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %382.0
}

def @func_14071() -> (Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %383 = @func_13659() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64]) */;
  %384 = @func_4889() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(60), float32], Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64]) */;
  %385 = %383.0;
  %386 = @func_2540() /* ty=Tensor[(15, 10, 3), float64] */;
  %387 = %384.3;
  (%385, %386, %387)
}

def @func_17937() -> (Tensor[(15, 10, 3), float64], Tensor[(10, 14, 15), float64]) {
  %388 = @func_1661() /* ty=Tensor[(15, 10, 3), float64] */;
  %389 = @func_10673() /* ty=Tensor[(10, 14, 15), float64] */;
  (%388, %389)
}

def @func_17482() -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32]) {
  %390 = @func_11754() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %391 = @func_1383() /* ty=(Tensor[(60), float32],) */;
  %392 = %390.0;
  %393 = %391.0;
  (%392, %393)
}

def @func_2827() -> (Tensor[(15, 10, 3), float64], Tensor[(60, 1), float32], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) {
  %394 = @func_300() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %395 = cast(meta[relay.Constant][12] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %396 = reshape(%395, newshape=[60, 1]) /* ty=Tensor[(60, 1), float32] */;
  %397 = @func_655(%396) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60, 1), float32]) */;
  %398 = %394.1;
  %399 = %397.4;
  %400 = @func_1661() /* ty=Tensor[(15, 10, 3), float64] */;
  (%398, %399, meta[relay.Constant][12] /* ty=Tensor[(60), float32] */, %400)
}

def @func_4399() -> Tensor[(15, 10, 3), float64] {
  %401 = @func_300() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %401.1
}

def @func_12155() -> (Tensor[(15, 10, 3), float64],) {
  %402 = @func_4315() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */;
  %403 = %402.0;
  (%403,)
}

def @func_5698() -> (Tensor[(60), float32], Tensor[(15, 10, 3), float64]) {
  %404 = @func_2284() /* ty=Tensor[(60), float32] */;
  %405 = @func_937() /* ty=Tensor[(15, 10, 3), float64] */;
  (%404, %405)
}

def @func_21072(%var_21037: Tensor[(1320), float64]) -> (Tensor[(9, 10, 6), bool], Tensor[(12, 11, 10), float64], Tensor[(1320), float64], Tensor[(15, 10, 3), float64]) {
  %406 = @func_5358() /* ty=(Tensor[(60), float32], Tensor[(9, 10, 6), bool]) */;
  %407 = cast(%var_21037, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %408 = reshape(%407, newshape=[12, 11, 10]) /* ty=Tensor[(12, 11, 10), float64] */;
  %409 = @func_13127(%408) /* ty=(Tensor[(12, 11, 10), float64],) */;
  %410 = @func_6832() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */;
  %411 = %406.1;
  %412 = %409.0;
  %413 = %410.1;
  (%411, %412, %var_21037, %413)
}

def @func_16246() -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32]) {
  %414 = @func_6959() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %415 = @func_2130() /* ty=Tensor[(15, 10, 3), float64] */;
  %416 = %414.1;
  (%415, %416)
}

def @func_3090() -> (Tensor[(60), float32],) {
  %417 = @func_2827() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60, 1), float32], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
  %418 = %417.2;
  (%418,)
}

def @func_2464() -> (Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool], Tensor[(1, 540), uint8], Tensor[(15, 10, 3), float64]) {
  %419 = @func_1181() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %420 = cast(meta[relay.Constant][13] /* ty=Tensor[(1, 540), uint8] */, dtype="uint8") /* ty=Tensor[(1, 540), uint8] */;
  %421 = cast(meta[relay.Constant][13] /* ty=Tensor[(1, 540), uint8] */, dtype="uint8") /* ty=Tensor[(1, 540), uint8] */;
  %422 = reshape(%420, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), uint8] */;
  %423 = reshape(%421, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), uint8] */;
  %424 = @func_811(%422, %423) /* ty=(Tensor[(9, 10, 6), bool],) */;
  %425 = @func_1791() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %426 = %419.0;
  %427 = %424.0;
  %428 = %425.0;
  (%426, %427, meta[relay.Constant][13] /* ty=Tensor[(1, 540), uint8] */, %428)
}

def @func_12953() -> Tensor[(15, 10, 3), float64] {
  %429 = @func_9436() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %429.0
}

def @func_12478() -> (Tensor[(8, 13, 10), float32],) {
  %430 = @func_6031() /* ty=(Tensor[(8, 13, 10), float32],) */;
  %431 = %430.0;
  (%431,)
}

def @func_17038(%var_17036: Tensor[(10, 78), int64]) -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(13, 5, 12), bool], Tensor[(10, 78), int64]) {
  %432 = @func_16200() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %433 = @func_6111() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %434 = cast(%var_17036, dtype="int64") /* ty=Tensor[(10, 78), int64] */;
  %435 = cast(%var_17036, dtype="int64") /* ty=Tensor[(10, 78), int64] */;
  %436 = reshape(%434, newshape=[13, 5, 12]) /* ty=Tensor[(13, 5, 12), int64] */;
  %437 = reshape(%435, newshape=[13, 5, 12]) /* ty=Tensor[(13, 5, 12), int64] */;
  %438 = %432.0;
  %439 = %433.1;
  %440 = @func_2876(%436, %437) /* ty=Tensor[(13, 5, 12), bool] */;
  (%438, %439, %440, %var_17036)
}

def @func_1305() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %441 = @func_1181() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %442 = @func_167() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %443 = @func_588() /* ty=Tensor[(15, 10, 3), float64] */;
  %444 = %441.0;
  %445 = %442.0;
  %446 = @func_376() /* ty=Tensor[(15, 10, 3), float64] */;
  (%443, %444, %445, %446)
}

def @func_14609() -> (Tensor[(60), float32],) {
  %447 = @func_2827() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60, 1), float32], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
  %448 = %447.2;
  (%448,)
}

def @func_2540() -> Tensor[(15, 10, 3), float64] {
  @func_2479() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_6693(%var_6687: Tensor[(520), uint16]) -> (Tensor[(4, 9, 5), float32], Tensor[(4, 10, 13), bool], Tensor[(520), uint16], Tensor[(60), float32]) {
  %449 = cast(%var_6687, dtype="uint16") /* ty=Tensor[(520), uint16] */;
  %450 = reshape(%449, newshape=[4, 10, 13]) /* ty=Tensor[(4, 10, 13), uint16] */;
  %451 = @func_2330(%450) /* ty=(Tensor[(4, 10, 13), bool], Tensor[(15, 10, 3), float64], Tensor[(4, 10, 13), float64]) */;
  %452 = @func_5698() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
  %453 = @func_4787() /* ty=Tensor[(4, 9, 5), float32] */;
  %454 = %451.0;
  %455 = %452.0;
  (%453, %454, %var_6687, %455)
}

def @func_8240() -> Tensor[(4, 9, 5), float32] {
  %456 = @func_7783() /* ty=(Tensor[(4, 9, 5), float32], Tensor[(4, 9, 5), float32]) */;
  %456.1
}

def @func_12065() -> Tensor[(15, 10, 3), float64] {
  @func_2198() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_12720(%var_12708: Tensor[(10, 14, 15), float64]) -> (Tensor[(10, 14, 15), float32],) {
  %457 = @func_10673() /* ty=Tensor[(10, 14, 15), float64] */;
  %458 = cast(%var_12708, dtype="float32") /* ty=Tensor[(10, 14, 15), float32] */;
  %459 = shape_of(%457, dtype="int32") /* ty=Tensor[(3), int32] */;
  %460 = cast(%457, dtype="float32") /* ty=Tensor[(10, 14, 15), float32] */;
  %461 = dyn.reshape(%458, %459, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %462 = floor_divide(%460, %461) /* ty=Tensor[(10, 14, 15), float32] */;
  (%462,)
}

def @func_2160(%var_2147: Tensor[(5, 4, 14), int16], %var_2148: Tensor[(5, 4, 14), int16]) -> Tensor[(5, 4, 14), int16] {
  %463 = cast(%var_2148, dtype="int16") /* ty=Tensor[(5, 4, 14), int16] */;
  %464 = shape_of(%var_2147, dtype="int32") /* ty=Tensor[(3), int32] */;
  %465 = cast(%var_2147, dtype="int16") /* ty=Tensor[(5, 4, 14), int16] */;
  %466 = dyn.reshape(%463, %464, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_xor(%465, %466) /* ty=Tensor[(5, 4, 14), int16] */
}

def @func_2565() -> Tensor[(60), float32] {
  %467 = @func_1579() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %467.1
}

def @func_17462() -> Tensor[(4, 9, 5), float32] {
  %468 = @func_7783() /* ty=(Tensor[(4, 9, 5), float32], Tensor[(4, 9, 5), float32]) */;
  %468.0
}

def @func_19873(%var_19797: Tensor[(9, 4, 16), float64], %var_19798: Tensor[(9, 4, 16), float64]) -> (Tensor[(9, 4, 16), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(60), float32]) {
  %469 = cast(%var_19798, dtype="float64") /* ty=Tensor[(9, 4, 16), float64] */;
  %470 = shape_of(%var_19797, dtype="int32") /* ty=Tensor[(3), int32] */;
  %471 = cast(%var_19797, dtype="float64") /* ty=Tensor[(9, 4, 16), float64] */;
  %472 = dyn.reshape(%469, %470, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %473 = @func_12155() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %474 = @func_300() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %475 = @func_1579() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %476 = @func_4031() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), uint64]) */;
  %477 = minimum(%471, %472) /* ty=Tensor[(9, 4, 16), float64] */;
  %478 = %473.0;
  %479 = @func_3540() /* ty=Tensor[(15, 10, 3), float64] */;
  %480 = %474.1;
  %481 = %475.1;
  %482 = %476.0;
  (%477, %478, %479, %480, %481, %482)
}

def @func_167() -> (Tensor[(15, 10, 3), float64],) {
  %483 = cast(meta[relay.Constant][14] /* ty=Tensor[(15, 10, 3), float64] */, dtype="float64") /* ty=Tensor[(15, 10, 3), float64] */;
  %484 = asin(%483) /* ty=Tensor[(15, 10, 3), float64] */;
  %485 = cast(%484, dtype="float64") /* ty=Tensor[(15, 10, 3), float64] */;
  %486 = log2(%485) /* ty=Tensor[(15, 10, 3), float64] */;
  (%486,)
}

def @func_3105() -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) {
  %487 = @func_1541() /* ty=(Tensor[(60), float32],) */;
  %488 = @func_2844() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %489 = @func_937() /* ty=Tensor[(15, 10, 3), float64] */;
  %490 = %487.0;
  %491 = %488.0;
  (%489, %490, %491)
}

def @func_7272() -> (Tensor[(15, 10, 3), float32],) {
  %492 = @func_1181() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %493 = %492.0;
  %494 = @func_4547() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %495 = %494.0;
  %496 = cast(%495, dtype="float32") /* ty=Tensor[(15, 10, 3), float32] */;
  %497 = shape_of(%493, dtype="int32") /* ty=Tensor[(3), int32] */;
  %498 = cast(%493, dtype="float32") /* ty=Tensor[(15, 10, 3), float32] */;
  %499 = dyn.reshape(%496, %497, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %500 = floor_divide(%498, %499) /* ty=Tensor[(15, 10, 3), float32] */;
  (%500,)
}

def @func_5492() -> (Tensor[(15, 10, 3), float64],) {
  %501 = @func_184() /* ty=Tensor[(15, 10, 3), float64] */;
  (%501,)
}

def @func_9993() -> Tensor[(15, 10, 3), float64] {
  %502 = @func_6711() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %502.0
}

def @func_20968() -> (Tensor[(15, 10, 3), uint64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) {
  %503 = @func_15635() /* ty=(Tensor[(15, 10, 3), uint64], Tensor[(15, 10, 3), float64]) */;
  %504 = @func_10165() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(8, 7, 11), bool]) */;
  %505 = @func_19106() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %506 = @func_3090() /* ty=(Tensor[(60), float32],) */;
  %507 = @func_1396() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %508 = %503.0;
  %509 = %504.0;
  %510 = @func_2130() /* ty=Tensor[(15, 10, 3), float64] */;
  %511 = %505.1;
  %512 = %506.0;
  %513 = %507.0;
  (%508, %509, %510, %511, %512, %513)
}

def @func_20173() -> Tensor[(3, 11, 12), uint32] {
  %514 = cast(meta[relay.Constant][16] /* ty=Tensor[(3, 11, 12), uint32] */, dtype="uint32") /* ty=Tensor[(3, 11, 12), uint32] */;
  %515 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(3, 11, 12), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %516 = cast(meta[relay.Constant][15] /* ty=Tensor[(3, 11, 12), uint32] */, dtype="uint32") /* ty=Tensor[(3, 11, 12), uint32] */;
  %517 = dyn.reshape(%514, %515, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  add(%516, %517) /* ty=Tensor[(3, 11, 12), uint32] */
}

def @func_20273() -> (Tensor[(9, 13, 5), bool], Tensor[(5, 4, 14), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %518 = cast(meta[relay.Constant][18] /* ty=Tensor[(9, 13, 5), int16] */, dtype="bool") /* ty=Tensor[(9, 13, 5), bool] */;
  %519 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(9, 13, 5), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %520 = cast(meta[relay.Constant][17] /* ty=Tensor[(9, 13, 5), int16] */, dtype="bool") /* ty=Tensor[(9, 13, 5), bool] */;
  %521 = dyn.reshape(%518, %519, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %522 = @func_8194() /* ty=(Tensor[(60), float32], Tensor[(280), int16], Tensor[(15, 10, 3), float64], Tensor[(5, 4, 14), float64], Tensor[(5, 4, 14), float64], Tensor[(280), int16]) */;
  %523 = @func_7881() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %524 = greater(%520, %521) /* ty=Tensor[(9, 13, 5), bool] */;
  %525 = %522.3;
  %526 = @func_13287() /* ty=Tensor[(15, 10, 3), float64] */;
  %527 = %523.0;
  (%524, %525, %526, %527)
}

def @func_2977() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(280), int16]) {
  %528 = @func_2844() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %529 = cast(meta[relay.Constant][19] /* ty=Tensor[(280), int16] */, dtype="int16") /* ty=Tensor[(280), int16] */;
  %530 = reshape(%529, newshape=[280]) /* ty=Tensor[(280), int16] */;
  %531 = @func_2629(%530) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(5, 4, 14), int16], Tensor[(280), int16]) */;
  %532 = %528.0;
  %533 = %531.0;
  (%532, %533, meta[relay.Constant][19] /* ty=Tensor[(280), int16] */)
}

def @func_8737(%var_8711: Tensor[(2, 4, 12), float64]) -> Tensor[(2, 4, 12), float64] {
  %534 = cast(%var_8711, dtype="float64") /* ty=Tensor[(2, 4, 12), float64] */;
  tan(%534) /* ty=Tensor[(2, 4, 12), float64] */
}

def @func_14362() -> Tensor[(15, 10, 3), float64] {
  %535 = @func_3105() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
  %535.0
}

def @func_20705(%var_20672: Tensor[(2, 16, 6), uint8]) -> (Tensor[(2, 16, 6), uint8],) {
  %536 = cast(%var_20672, dtype="uint8") /* ty=Tensor[(2, 16, 6), uint8] */;
  %537 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(2, 16, 6), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %538 = cast(meta[relay.Constant][20] /* ty=Tensor[(2, 16, 6), uint8] */, dtype="uint8") /* ty=Tensor[(2, 16, 6), uint8] */;
  %539 = dyn.reshape(%536, %537, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %540 = bitwise_xor(%538, %539) /* ty=Tensor[(2, 16, 6), uint8] */;
  (%540,)
}

def @func_12304() -> Tensor[(15, 10, 3), float64] {
  @func_4927() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_2854() -> Tensor[(4, 9, 5), float32] {
  %541 = cast(meta[relay.Constant][21] /* ty=Tensor[(4, 9, 5), float32] */, dtype="float32") /* ty=Tensor[(4, 9, 5), float32] */;
  tan(%541) /* ty=Tensor[(4, 9, 5), float32] */
}

def @func_16569() -> (Tensor[(9, 10, 6), bool], Tensor[(15, 10, 3), float64]) {
  %542 = @func_2589() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) */;
  %543 = %542.1;
  %544 = @func_4149() /* ty=Tensor[(15, 10, 3), float64] */;
  (%543, %544)
}

def @func_17121() -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %545 = @func_5110() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %546 = @func_796() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %547 = @func_12304() /* ty=Tensor[(15, 10, 3), float64] */;
  %548 = @func_2284() /* ty=Tensor[(60), float32] */;
  %549 = %545.0;
  %550 = %546.1;
  (%547, %548, %549, %550)
}

def @func_18001(%var_17996: Tensor[(12, 9, 1), uint16]) -> (Tensor[(12, 9, 1), bool],) {
  %551 = cast(meta[relay.Constant][22] /* ty=uint16 */, dtype="bool") /* ty=bool */;
  %552 = cast(%var_17996, dtype="bool") /* ty=Tensor[(12, 9, 1), bool] */;
  %553 = equal(%551, %552) /* ty=Tensor[(12, 9, 1), bool] */;
  (%553,)
}

def @func_4739() -> (Tensor[(15, 10, 3), float64],) {
  %554 = @func_3415() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64]) */;
  %555 = %554.1;
  (%555,)
}

def @func_17870() -> (Tensor[(15, 10, 3), float64],) {
  %556 = @func_11338() /* ty=(Tensor[(60), float32], Tensor[(12, 14, 4), float32], Tensor[(672), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %557 = %556.3;
  (%557,)
}

def @func_9505() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60, ?), uint16]) {
  %558 = @func_8194() /* ty=(Tensor[(60), float32], Tensor[(280), int16], Tensor[(15, 10, 3), float64], Tensor[(5, 4, 14), float64], Tensor[(5, 4, 14), float64], Tensor[(280), int16]) */;
  %559 = @func_5958() /* ty=(Tensor[(60), float32], Tensor[(60, ?), uint16]) */;
  %560 = %558.2;
  %561 = @func_6480() /* ty=Tensor[(15, 10, 3), float64] */;
  %562 = %559.1;
  (%560, %561, %562)
}

def @func_9376() -> (Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) {
  %563 = @func_7305() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %564 = %563.0;
  %565 = @func_2726() /* ty=Tensor[(8, 13, 10), float32] */;
  (%564, %565)
}

def @func_9223(%var_9165: Tensor[(9, 10, 11), int8], %var_9166: Tensor[(9, 10, 11), int8], %var_9213: Tensor[(144), float32]) -> (Tensor[(9, 10, 11), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(2, 12, 6), float32], float32, Tensor[(144), float32]) {
  %566 = cast(%var_9166, dtype="int8") /* ty=Tensor[(9, 10, 11), int8] */;
  %567 = shape_of(%var_9165, dtype="int32") /* ty=Tensor[(3), int32] */;
  %568 = cast(%var_9165, dtype="int8") /* ty=Tensor[(9, 10, 11), int8] */;
  %569 = dyn.reshape(%566, %567, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %570 = right_shift(%568, %569) /* ty=Tensor[(9, 10, 11), int8] */;
  %571 = cast(%570, dtype="float64") /* ty=Tensor[(9, 10, 11), float64] */;
  %572 = @func_5698() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
  %573 = @func_5110() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %574 = cast(-5.55754f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %575 = cast(%var_9213, dtype="float32") /* ty=Tensor[(144), float32] */;
  %576 = reshape(%574, newshape=[]) /* ty=float32 */;
  %577 = reshape(%575, newshape=[2, 12, 6]) /* ty=Tensor[(2, 12, 6), float32] */;
  %578 = atanh(%571) /* ty=Tensor[(9, 10, 11), float64] */;
  %579 = %572.0;
  %580 = %573.1;
  %581 = @func_6449(%576, %577) /* ty=Tensor[(2, 12, 6), float32] */;
  (%578, %579, %580, %581, -5.55754f /* ty=float32 */, %var_9213)
}

def @func_13734() -> (Tensor[(9, 10, 6), bool],) {
  %582 = @func_2473() /* ty=Tensor[(9, 10, 6), bool] */;
  (%582,)
}

def @func_13275() -> (Tensor[(15, 10, 3), float64],) {
  %583 = @func_3415() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64]) */;
  %584 = %583.0;
  (%584,)
}

def @func_18852() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %585 = @func_17870() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %586 = %585.0;
  %587 = @func_3540() /* ty=Tensor[(15, 10, 3), float64] */;
  (%586, %587)
}

def @func_1791() -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32]) {
  %588 = @func_167() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %589 = @func_1579() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %590 = %588.0;
  %591 = %589.1;
  (%590, %591)
}

def @func_5467(%var_5407: Tensor[(16, 5, 13), float32]) -> (Tensor[(16, 5, 13), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %592 = cast(%var_5407, dtype="float32") /* ty=Tensor[(16, 5, 13), float32] */;
  %593 = @func_1383() /* ty=(Tensor[(60), float32],) */;
  %594 = @func_5110() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %595 = cosh(%592) /* ty=Tensor[(16, 5, 13), float32] */;
  %596 = @func_2479() /* ty=Tensor[(15, 10, 3), float64] */;
  %597 = @func_2198() /* ty=Tensor[(15, 10, 3), float64] */;
  %598 = %593.0;
  %599 = @func_3540() /* ty=Tensor[(15, 10, 3), float64] */;
  %600 = %594.1;
  %601 = @func_2479() /* ty=Tensor[(15, 10, 3), float64] */;
  (%595, %596, %597, %598, %599, %600, %601)
}

def @func_7485() -> Tensor[(15, 10, 3), float64] {
  %602 = @func_2036() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %602.0
}

def @func_7881() -> (Tensor[(15, 10, 3), float64],) {
  %603 = @func_6197() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %604 = %603.1;
  (%604,)
}

def @func_14802(%var_14789: Tensor[(4, 8, 12), float64]) -> (Tensor[(4, 8, 12), float64],) {
  %605 = cast(meta[relay.Constant][23] /* ty=Tensor[(4, 8, 12), float64] */, dtype="float64") /* ty=Tensor[(4, 8, 12), float64] */;
  %606 = shape_of(%var_14789, dtype="int32") /* ty=Tensor[(3), int32] */;
  %607 = cast(%var_14789, dtype="float64") /* ty=Tensor[(4, 8, 12), float64] */;
  %608 = dyn.reshape(%605, %606, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %609 = add(%607, %608) /* ty=Tensor[(4, 8, 12), float64] */;
  (%609,)
}

def @func_15065() -> (Tensor[(15, 10, 3), float64], Tensor[(10, 14, 15), float64]) {
  %610 = @func_7738() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %611 = @func_12769() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(1040), float32], Tensor[(10, 14, 15), float64]) */;
  %612 = %610.1;
  %613 = %611.3;
  (%612, %613)
}

def @func_12841() -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32]) {
  %614 = @func_3090() /* ty=(Tensor[(60), float32],) */;
  %615 = @func_10410() /* ty=Tensor[(15, 10, 3), float64] */;
  %616 = %614.0;
  (%615, %616)
}

def @func_18813() -> (Tensor[(10, 16, 8), int16], Tensor[(60), float32]) {
  %617 = @func_15478() /* ty=(Tensor[(10, 16, 8), int16], Tensor[(60), float32]) */;
  %618 = @func_5358() /* ty=(Tensor[(60), float32], Tensor[(9, 10, 6), bool]) */;
  %619 = %617.0;
  %620 = %618.0;
  (%619, %620)
}

def @func_8613() -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32]) {
  %621 = @func_1305() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %622 = @func_3769() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */;
  %623 = @func_7600() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %624 = @func_7272() /* ty=(Tensor[(15, 10, 3), float32],) */;
  %625 = %621.2;
  %626 = @func_2284() /* ty=Tensor[(60), float32] */;
  %627 = %622.0;
  %628 = %623.0;
  %629 = %624.0;
  (%625, %626, %627, %628, %629)
}

def @func_10878() -> (Tensor[(15, 10, 3), float64], Tensor[(4, 9, 5), float32], Tensor[(15, 10, 3), float64]) {
  %630 = @func_7091() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) */;
  %631 = @func_7783() /* ty=(Tensor[(4, 9, 5), float32], Tensor[(4, 9, 5), float32]) */;
  %632 = @func_6197() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %633 = %630.0;
  %634 = %631.1;
  %635 = %632.2;
  (%633, %634, %635)
}

def @func_6449(%var_6441: float32, %var_6442: Tensor[(2, 12, 6), float32]) -> Tensor[(2, 12, 6), float32] {
  %636 = cast(%var_6441, dtype="float32") /* ty=float32 */;
  %637 = cast(%var_6442, dtype="float32") /* ty=Tensor[(2, 12, 6), float32] */;
  divide(%636, %637) /* ty=Tensor[(2, 12, 6), float32] */
}

def @func_2130() -> Tensor[(15, 10, 3), float64] {
  %638 = @func_1933() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %638.0
}

def @func_17970(%var_17943: int8, %var_17944: Tensor[(1, 4, 16), int8], %var_17960: Tensor[(462), float64]) -> (Tensor[(1, 4, 16), int8], Tensor[(15, 10, 3), float64], Tensor[(462), float64]) {
  %639 = cast(%var_17943, dtype="int8") /* ty=int8 */;
  %640 = cast(%var_17944, dtype="int8") /* ty=Tensor[(1, 4, 16), int8] */;
  %641 = cast(%var_17960, dtype="float64") /* ty=Tensor[(462), float64] */;
  %642 = reshape(%641, newshape=[462]) /* ty=Tensor[(462), float64] */;
  %643 = @func_11374(%642) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(462), float64], Tensor[(15, 10, 3), float64]) */;
  %644 = subtract(%639, %640) /* ty=Tensor[(1, 4, 16), int8] */;
  %645 = %643.6;
  (%644, %645, %var_17960)
}

def @func_17431(%var_17407: Tensor[(1008), float64]) -> (Tensor[(15, 10, 3), uint64], Tensor[(9, 10, 6), bool], Tensor[(9, 8, 14), float64], Tensor[(1008), float64], Tensor[(15, 10, 3), float64]) {
  %646 = @func_1818() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool], Tensor[(540), uint8]) */;
  %647 = cast(%var_17407, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %648 = reshape(%647, newshape=[9, 8, 14]) /* ty=Tensor[(9, 8, 14), float64] */;
  %649 = @func_8992(%648) /* ty=(Tensor[(9, 8, 14), float64], Tensor[(15, 10, 3), float64]) */;
  %650 = @func_11692() /* ty=Tensor[(15, 10, 3), uint64] */;
  %651 = %646.1;
  %652 = %649.0;
  %653 = @func_14362() /* ty=Tensor[(15, 10, 3), float64] */;
  (%650, %651, %652, %var_17407, %653)
}

def @func_4133() -> (Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(450), float64], Tensor[(15, 10, 3), float64]) {
  %654 = cast(meta[relay.Constant][24] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %655 = cast(meta[relay.Constant][24] /* ty=Tensor[(450), float64] */, dtype="bool") /* ty=Tensor[(450), bool] */;
  %656 = reshape(%654, newshape=[15, 10, 3]) /* ty=Tensor[(15, 10, 3), float64] */;
  %657 = reshape(%655, newshape=[15, 10, 3]) /* ty=Tensor[(15, 10, 3), bool] */;
  %658 = @func_1135(%656, %657) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), int32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %659 = @func_2565() /* ty=Tensor[(60), float32] */;
  %660 = cast(%659, dtype="float32") /* ty=Tensor[(60), float32] */;
  %661 = reshape(%660, newshape=[3, 20]) /* ty=Tensor[(3, 20), float32] */;
  %662 = @func_718(%661) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(3, 20), float32]) */;
  %663 = %658.4;
  %664 = %662.2;
  (%659, %663, meta[relay.Constant][24] /* ty=Tensor[(450), float64] */, %664)
}

def @func_8865(%var_8851: Tensor[(11, 3, 9), bool], %var_8852: Tensor[(11, 3, 9), bool], %var_8858: Tensor[(96), float64]) -> (Tensor[(11, 3, 9), bool], Tensor[(2, 4, 12), float64], Tensor[(96), float64]) {
  %665 = cast(%var_8852, dtype="bool") /* ty=Tensor[(11, 3, 9), bool] */;
  %666 = shape_of(%var_8851, dtype="int32") /* ty=Tensor[(3), int32] */;
  %667 = cast(%var_8851, dtype="bool") /* ty=Tensor[(11, 3, 9), bool] */;
  %668 = dyn.reshape(%665, %666, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %669 = cast(%var_8858, dtype="float64") /* ty=Tensor[(96), float64] */;
  %670 = reshape(%669, newshape=[2, 4, 12]) /* ty=Tensor[(2, 4, 12), float64] */;
  %671 = logical_or(%667, %668) /* ty=Tensor[(11, 3, 9), bool] */;
  %672 = @func_8737(%670) /* ty=Tensor[(2, 4, 12), float64] */;
  (%671, %672, %var_8858)
}

def @func_19683(%var_19675: Tensor[(9, 5, 16), float64]) -> (Tensor[(9, 5, 16), float64],) {
  %673 = cast(%var_19675, dtype="float64") /* ty=Tensor[(9, 5, 16), float64] */;
  %674 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(9, 5, 16), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %675 = cast(meta[relay.Constant][25] /* ty=Tensor[(9, 5, 16), float64] */, dtype="float64") /* ty=Tensor[(9, 5, 16), float64] */;
  %676 = dyn.reshape(%673, %674, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %677 = mod(%675, %676) /* ty=Tensor[(9, 5, 16), float64] */;
  %678 = cast(%677, dtype="float64") /* ty=Tensor[(9, 5, 16), float64] */;
  %679 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(9, 5, 16), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %680 = cast(meta[relay.Constant][25] /* ty=Tensor[(9, 5, 16), float64] */, dtype="float64") /* ty=Tensor[(9, 5, 16), float64] */;
  %681 = dyn.reshape(%678, %679, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %682 = floor_divide(%680, %681) /* ty=Tensor[(9, 5, 16), float64] */;
  (%682,)
}

def @func_666() -> Tensor[(15, 10, 3), float64] {
  @func_376() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_1470(%var_1448: Tensor[(60), float32], %var_1464: Tensor[(15, 10, 3), float64]) -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), bool], Tensor[(15, 10, 3), int8]) {
  %683 = @func_258() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %684 = @func_796() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %685 = @func_937() /* ty=Tensor[(15, 10, 3), float64] */;
  %686 = cast(%685, dtype="float64") /* ty=Tensor[(15, 10, 3), float64] */;
  %687 = tan(%686) /* ty=Tensor[(15, 10, 3), float64] */;
  %688 = cast(%var_1448, dtype="float32") /* ty=Tensor[(60), float32] */;
  %689 = reshape(%688, newshape=[3, 20]) /* ty=Tensor[(3, 20), float32] */;
  %690 = @func_718(%689) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(3, 20), float32]) */;
  %691 = %690.1;
  %692 = cast(%691, dtype="bool") /* ty=Tensor[(15, 10, 3), bool] */;
  %693 = shape_of(%687, dtype="int32") /* ty=Tensor[(3), int32] */;
  %694 = cast(%687, dtype="bool") /* ty=Tensor[(15, 10, 3), bool] */;
  %695 = dyn.reshape(%692, %693, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %696 = cast(%var_1464, dtype="int8") /* ty=Tensor[(15, 10, 3), int8] */;
  %697 = shape_of(%687, dtype="int32") /* ty=Tensor[(3), int32] */;
  %698 = cast(%687, dtype="int8") /* ty=Tensor[(15, 10, 3), int8] */;
  %699 = dyn.reshape(%696, %697, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %700 = %683.3;
  %701 = %684.0;
  %702 = logical_and(%694, %695) /* ty=Tensor[(15, 10, 3), bool] */;
  %703 = subtract(%698, %699) /* ty=Tensor[(15, 10, 3), int8] */;
  (%700, %701, %var_1448, %702, %703)
}

def @func_1947() -> (Tensor[(9, 10, 6), bool],) {
  %704 = @func_1818() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool], Tensor[(540), uint8]) */;
  %705 = %704.1;
  (%705,)
}

def @func_14434() -> (Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32], Tensor[(60), float32]) {
  %706 = @func_8083() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %707 = @func_9376() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */;
  %708 = %706.1;
  %709 = %707.1;
  %710 = @func_10707() /* ty=Tensor[(60), float32] */;
  (%708, %709, %710)
}

def @func_3540() -> Tensor[(15, 10, 3), float64] {
  @func_184() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_6832() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) {
  %711 = @func_2036() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %712 = @func_5967() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %713 = @func_5662() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %714 = %711.0;
  %715 = %712.0;
  %716 = %713.0;
  (%714, %715, %716)
}

def @func_16838() -> (Tensor[(15, 10, 3), uint64], Tensor[(15, 10, 3), float64]) {
  %717 = @func_1305() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %718 = @func_2659() /* ty=Tensor[(15, 10, 3), uint64] */;
  %719 = %717.2;
  (%718, %719)
}

def @func_12572() -> (Tensor[(15, 10, 3), float64],) {
  %720 = @func_4315() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */;
  %721 = %720.0;
  (%721,)
}

def @func_14546() -> Tensor[(15, 10, 3), float64] {
  %722 = @func_2844() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %722.0
}

def @func_2269(%var_2233: Tensor[(3, 20), float32]) -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(3, 20), float32], Tensor[(60), float32]) {
  %723 = @func_731() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %724 = cast(%var_2233, dtype="float32") /* ty=Tensor[(3, 20), float32] */;
  %725 = reshape(%724, newshape=[60, 1]) /* ty=Tensor[(60, 1), float32] */;
  %726 = @func_655(%725) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60, 1), float32]) */;
  %727 = cast(%var_2233, dtype="float32") /* ty=Tensor[(3, 20), float32] */;
  %728 = @func_1383() /* ty=(Tensor[(60), float32],) */;
  %729 = %723.0;
  %730 = %726.0;
  %731 = tan(%727) /* ty=Tensor[(3, 20), float32] */;
  %732 = %728.0;
  (%729, %730, %731, %732)
}

def @func_1501() -> (Tensor[(15, 10, 3), float64],) {
  %733 = @func_1495() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %734 = %733.0;
  (%734,)
}

def @func_15600(%var_15531: Tensor[(3, 14, 16), int64], %var_15567: Tensor[(70, 4), int16]) -> (Tensor[(3, 14, 16), bool], Tensor[(15, 10, 3), uint64], Tensor[(3, 14, 16), float32], Tensor[(280), int16], Tensor[(70, 4), int16], Tensor[(15, 10, 3), float64]) {
  %735 = cast(meta[relay.Constant][26] /* ty=Tensor[(3, 14, 16), int64] */, dtype="bool") /* ty=Tensor[(3, 14, 16), bool] */;
  %736 = shape_of(%var_15531, dtype="int32") /* ty=Tensor[(3), int32] */;
  %737 = cast(%var_15531, dtype="bool") /* ty=Tensor[(3, 14, 16), bool] */;
  %738 = dyn.reshape(%735, %736, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %739 = @func_9163() /* ty=(Tensor[(15, 10, 3), uint64], Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) */;
  %740 = cast(%var_15531, dtype="float32") /* ty=Tensor[(3, 14, 16), float32] */;
  %741 = cast(%var_15567, dtype="int16") /* ty=Tensor[(70, 4), int16] */;
  %742 = reshape(%741, newshape=[280]) /* ty=Tensor[(280), int16] */;
  %743 = @func_6931(%742) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(280), int16], Tensor[(280), int16], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
  %744 = @func_6959() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %745 = not_equal(%737, %738) /* ty=Tensor[(3, 14, 16), bool] */;
  %746 = %739.0;
  %747 = acos(%740) /* ty=Tensor[(3, 14, 16), float32] */;
  %748 = %743.2;
  %749 = %744.0;
  (%745, %746, %747, %748, %var_15567, %749)
}

def @func_17620() -> (Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64]) {
  %750 = @func_731() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %751 = @func_2726() /* ty=Tensor[(8, 13, 10), float32] */;
  %752 = %750.0;
  (%751, %752)
}

def @func_11025(%var_11019: Tensor[(10, 10, 9), int16], %var_11020: Tensor[(10, 10, 9), int16]) -> (Tensor[(10, 10, 9), int16],) {
  %753 = cast(%var_11020, dtype="int16") /* ty=Tensor[(10, 10, 9), int16] */;
  %754 = shape_of(%var_11019, dtype="int32") /* ty=Tensor[(3), int32] */;
  %755 = cast(%var_11019, dtype="int16") /* ty=Tensor[(10, 10, 9), int16] */;
  %756 = dyn.reshape(%753, %754, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %757 = right_shift(%755, %756) /* ty=Tensor[(10, 10, 9), int16] */;
  (%757,)
}

def @func_11754() -> (Tensor[(15, 10, 3), float64],) {
  %758 = @func_4547() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %759 = %758.0;
  (%759,)
}

def @func_15394() -> (Tensor[(60), float32],) {
  %760 = @func_4133() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(450), float64], Tensor[(15, 10, 3), float64]) */;
  %761 = %760.0;
  (%761,)
}

def @func_2866() -> (Tensor[(15, 10, 3), float64],) {
  %762 = @func_314() /* ty=Tensor[(15, 10, 3), float64] */;
  (%762,)
}

def @func_7783() -> (Tensor[(4, 9, 5), float32], Tensor[(4, 9, 5), float32]) {
  %763 = @func_2854() /* ty=Tensor[(4, 9, 5), float32] */;
  %764 = @func_2854() /* ty=Tensor[(4, 9, 5), float32] */;
  (%763, %764)
}

def @func_4267() -> (Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %765 = @func_887() /* ty=(Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
  %766 = @func_2464() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool], Tensor[(1, 540), uint8], Tensor[(15, 10, 3), float64]) */;
  %767 = @func_1305() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %768 = %767.1;
  %769 = cast(%768, dtype="float32") /* ty=Tensor[(15, 10, 3), float32] */;
  %770 = @func_2540() /* ty=Tensor[(15, 10, 3), float64] */;
  %771 = cast(%770, dtype="float64") /* ty=Tensor[(15, 10, 3), float64] */;
  %772 = cast(%770, dtype="bool") /* ty=Tensor[(15, 10, 3), bool] */;
  %773 = reshape(%771, newshape=[15, 10, 3]) /* ty=Tensor[(15, 10, 3), float64] */;
  %774 = reshape(%772, newshape=[15, 10, 3]) /* ty=Tensor[(15, 10, 3), bool] */;
  %775 = @func_1135(%773, %774) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), int32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %776 = %765.0;
  %777 = %766.0;
  %778 = atanh(%769) /* ty=Tensor[(15, 10, 3), float32] */;
  %779 = %775.4;
  (%776, %777, %778, %770, %779)
}

def @func_15795(%var_15765: Tensor[(280), int16]) -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(5, 4, 14), int16], Tensor[(280), int16], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) {
  %780 = @func_2401() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %781 = @func_6832() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */;
  %782 = cast(%var_15765, dtype="int16") /* ty=Tensor[(280), int16] */;
  %783 = cast(%var_15765, dtype="int16") /* ty=Tensor[(280), int16] */;
  %784 = reshape(%782, newshape=[5, 4, 14]) /* ty=Tensor[(5, 4, 14), int16] */;
  %785 = reshape(%783, newshape=[5, 4, 14]) /* ty=Tensor[(5, 4, 14), int16] */;
  %786 = @func_1579() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %787 = @func_5967() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %788 = %780.1;
  %789 = @func_666() /* ty=Tensor[(15, 10, 3), float64] */;
  %790 = %781.0;
  %791 = @func_2160(%784, %785) /* ty=Tensor[(5, 4, 14), int16] */;
  %792 = %786.1;
  %793 = %787.0;
  (%788, %789, %790, %791, %var_15765, %792, %793)
}

def @func_258() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %794 = @func_167() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %795 = @func_198() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %796 = @func_198() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %797 = @func_167() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %798 = @func_167() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %799 = %794.0;
  %800 = %795.0;
  %801 = %796.0;
  %802 = %797.0;
  %803 = %798.0;
  (%799, %800, %801, %802, %803)
}

def @func_15166() -> (Tensor[(8, 7, 11), uint64], Tensor[(4, 9, 5), float32]) {
  %804 = @func_13385() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(8, 7, 11), uint64], Tensor[(616), bool], Tensor[(15, 10, 3), float64]) */;
  %805 = @func_11403() /* ty=(Tensor[(4, 9, 5), float32],) */;
  %806 = %805.0;
  %807 = cast(%806, dtype="float32") /* ty=Tensor[(4, 9, 5), float32] */;
  %808 = %804.1;
  %809 = log2(%807) /* ty=Tensor[(4, 9, 5), float32] */;
  (%808, %809)
}

def @func_20499(%var_20484: Tensor[(8, 13, 10), float32]) -> (Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), uint16]) {
  %810 = @func_18099() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
  %811 = %810.0;
  %812 = cast(%var_20484, dtype="uint16") /* ty=Tensor[(8, 13, 10), uint16] */;
  %813 = shape_of(%811, dtype="int32") /* ty=Tensor[(3), int32] */;
  %814 = cast(%811, dtype="uint16") /* ty=Tensor[(8, 13, 10), uint16] */;
  %815 = dyn.reshape(%812, %813, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %816 = @func_2130() /* ty=Tensor[(15, 10, 3), float64] */;
  %817 = logical_xor(%814, %815) /* ty=Tensor[(8, 13, 10), uint16] */;
  (%816, %817)
}

def @func_21118() -> (Tensor[(9, 10, 6), bool], Tensor[(15, 10, 3), float64]) {
  %818 = @func_16432() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) */;
  %819 = %818.2;
  %820 = @func_12057() /* ty=Tensor[(15, 10, 3), float64] */;
  (%819, %820)
}

def @func_16724() -> (Tensor[(15, 10, 3), float64], Tensor[(1280, 12), int8], Tensor[(4, 9, 5), float32]) {
  %821 = @func_2401() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %822 = @func_6323() /* ty=(Tensor[(4, 9, 5), float32], Tensor[(60), float32], Tensor[(10, 16, 8), int16], Tensor[(1280, 1), int64], Tensor[(60), float32]) */;
  %823 = %822.3;
  %824 = cast(%823, dtype="float64") /* ty=Tensor[(1280, 1), float64] */;
  %825 = cast(meta[relay.Constant][27] /* ty=Tensor[(1280, 12), int64] */, dtype="float64") /* ty=Tensor[(1280, 12), float64] */;
  %826 = subtract(%824, %825) /* ty=Tensor[(1280, 12), float64] */;
  %827 = cast(%823, dtype="float64") /* ty=Tensor[(1280, 1), float64] */;
  %828 = acosh(%827) /* ty=Tensor[(1280, 1), float64] */;
  %829 = cast(%828, dtype="float64") /* ty=Tensor[(1280, 1), float64] */;
  %830 = sin(%829) /* ty=Tensor[(1280, 1), float64] */;
  %831 = cast(%826, dtype="int8") /* ty=Tensor[(1280, 12), int8] */;
  %832 = cast(%830, dtype="int8") /* ty=Tensor[(1280, 1), int8] */;
  %833 = @func_12259() /* ty=(Tensor[(4, 9, 5), float32], Tensor[(15, 10, 3), float64]) */;
  %834 = %821.0;
  %835 = logical_xor(%831, %832) /* ty=Tensor[(1280, 12), int8] */;
  %836 = %833.0;
  (%834, %835, %836)
}

def @func_14195() -> Tensor[(60), float32] {
  %837 = @func_8432() /* ty=(Tensor[(9, 10, 6), bool], Tensor[(60), float32]) */;
  %837.1
}

def @func_2938() -> (Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) {
  %838 = @func_359() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %839 = @func_1947() /* ty=(Tensor[(9, 10, 6), bool],) */;
  %840 = %838.0;
  %841 = %839.0;
  (%840, %841)
}

def @func_5577(%var_5550: Tensor[(3, 20), float32]) -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool], Tensor[(15, 10, 3), float64], Tensor[(3, 20), float32], Tensor[(60), float32], Tensor[(60), float32], Tensor[(4, 9, 5), float32], Tensor[(60), float32]) {
  %842 = @func_2977() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(280), int16]) */;
  %843 = @func_1726() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %844 = @func_4739() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %845 = @func_2938() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) */;
  %846 = cast(%var_5550, dtype="float32") /* ty=Tensor[(3, 20), float32] */;
  %847 = reshape(%846, newshape=[3, 20]) /* ty=Tensor[(3, 20), float32] */;
  %848 = @func_2269(%847) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(3, 20), float32], Tensor[(60), float32]) */;
  %849 = @func_3105() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
  %850 = @func_5399() /* ty=(Tensor[(60), float32],) */;
  %851 = @func_1541() /* ty=(Tensor[(60), float32],) */;
  %852 = %842.1;
  %853 = %843.0;
  %854 = %844.0;
  %855 = %845.1;
  %856 = %848.0;
  %857 = %849.1;
  %858 = %850.0;
  %859 = @func_4340() /* ty=Tensor[(4, 9, 5), float32] */;
  %860 = %851.0;
  (%852, %853, %854, %855, %856, %var_5550, %857, %858, %859, %860)
}

def @func_376() -> Tensor[(15, 10, 3), float64] {
  %861 = @func_359() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %861.0
}

def @func_8432() -> (Tensor[(9, 10, 6), bool], Tensor[(60), float32]) {
  %862 = @func_5358() /* ty=(Tensor[(60), float32], Tensor[(9, 10, 6), bool]) */;
  %863 = @func_3090() /* ty=(Tensor[(60), float32],) */;
  %864 = %862.1;
  %865 = %863.0;
  (%864, %865)
}

def @func_11338() -> (Tensor[(60), float32], Tensor[(12, 14, 4), float32], Tensor[(672), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %866 = @func_1541() /* ty=(Tensor[(60), float32],) */;
  %867 = cast(meta[relay.Constant][28] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %868 = cast(meta[relay.Constant][28] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %869 = reshape(%867, newshape=[12, 14, 4]) /* ty=Tensor[(12, 14, 4), float32] */;
  %870 = reshape(%868, newshape=[12, 14, 4]) /* ty=Tensor[(12, 14, 4), float32] */;
  %871 = @func_6111() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %872 = %866.0;
  %873 = @func_10361(%869, %870) /* ty=Tensor[(12, 14, 4), float32] */;
  %874 = %871.1;
  %875 = @func_8956() /* ty=Tensor[(15, 10, 3), float64] */;
  (%872, %873, meta[relay.Constant][28] /* ty=Tensor[(672), float32] */, %874, %875)
}

def @func_6480() -> Tensor[(15, 10, 3), float64] {
  @func_4149() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_6233() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %876 = @func_359() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %877 = @func_5492() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %878 = %876.1;
  %879 = %877.0;
  (%878, %879)
}

def @func_15819() -> (Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) {
  %880 = @func_12890() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
  %881 = @func_8023() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %882 = %880.0;
  %883 = %881.1;
  %884 = @func_2726() /* ty=Tensor[(8, 13, 10), float32] */;
  (%882, %883, %884)
}

def @func_13486() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %885 = @func_198() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %886 = @func_5911() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32], Tensor[(60), float32]) */;
  %887 = %885.0;
  %888 = %886.1;
  (%887, %888)
}

def @func_17449() -> (Tensor[(4, 9, 5), float32], Tensor[(8, 13, 10), float32]) {
  %889 = @func_8240() /* ty=Tensor[(4, 9, 5), float32] */;
  %890 = @func_2726() /* ty=Tensor[(8, 13, 10), float32] */;
  (%889, %890)
}

def @func_7600() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %891 = @func_1791() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %892 = @func_1879() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %893 = %891.0;
  %894 = %892.0;
  (%893, %894)
}

def @func_19620() -> (Tensor[(15, 10, 3), float64],) {
  %895 = @func_14510() /* ty=Tensor[(15, 10, 3), float64] */;
  (%895,)
}

def @func_18288() -> (Tensor[(9, 10, 6), bool],) {
  %896 = @func_7141() /* ty=(Tensor[(9, 10, 6), bool], Tensor[(60), float32]) */;
  %897 = %896.0;
  (%897,)
}

def @main(%var_21534: Tensor[(520), uint16], %var_21538: Tensor[(4, 320), int64]) -> (Tensor[(7, 13, 10), float64], Tensor[(60), float32], Tensor[(520), uint16], Tensor[(4, 320), int64], Tensor[(15, 10, 3), float64], Tensor[(10, 16, 8), float64]) {
  %898 = cast(meta[relay.Constant][29] /* ty=Tensor[(7, 13, 10), float64] */, dtype="float64") /* ty=Tensor[(7, 13, 10), float64] */;
  %899 = cast(%var_21534, dtype="uint16") /* ty=Tensor[(520), uint16] */;
  %900 = reshape(%899, newshape=[520]) /* ty=Tensor[(520), uint16] */;
  %901 = @func_12461(%900) /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(4, 10, 13), bool], Tensor[(520), uint16]) */;
  %902 = cast(%var_21538, dtype="int64") /* ty=Tensor[(4, 320), int64] */;
  %903 = cast(%var_21538, dtype="int64") /* ty=Tensor[(4, 320), int64] */;
  %904 = reshape(%902, newshape=[10, 16, 8]) /* ty=Tensor[(10, 16, 8), int64] */;
  %905 = reshape(%903, newshape=[10, 16, 8]) /* ty=Tensor[(10, 16, 8), int64] */;
  %906 = @func_4436(%904, %905) /* ty=(Tensor[(10, 16, 8), int16],) */;
  %907 = %906.0;
  %908 = cast(%907, dtype="float64") /* ty=Tensor[(10, 16, 8), float64] */;
  %909 = log10(%898) /* ty=Tensor[(7, 13, 10), float64] */;
  %910 = %901.0;
  %911 = @func_588() /* ty=Tensor[(15, 10, 3), float64] */;
  %912 = acosh(%908) /* ty=Tensor[(10, 16, 8), float64] */;
  (%909, %910, %var_21534, %var_21538, %911, %912)
}

def @func_18178() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), int32]) {
  %913 = @func_13626() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %914 = @func_4607() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), int32]) */;
  %915 = %913.0;
  %916 = %914.2;
  (%915, %916)
}

def @func_6381() -> (Tensor[(9, 10, 6), bool], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %917 = @func_1947() /* ty=(Tensor[(9, 10, 6), bool],) */;
  %918 = @func_4162() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %919 = %917.0;
  %920 = @func_314() /* ty=Tensor[(15, 10, 3), float64] */;
  %921 = %918.0;
  (%919, %920, %921)
}

def @func_4889() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(60), float32], Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64]) {
  %922 = @func_3105() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
  %923 = @func_1791() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %924 = @func_1396() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %925 = @func_1383() /* ty=(Tensor[(60), float32],) */;
  %926 = @func_4267() /* ty=(Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %927 = %922.0;
  %928 = %923.0;
  %929 = %924.0;
  %930 = @func_2130() /* ty=Tensor[(15, 10, 3), float64] */;
  %931 = @func_2565() /* ty=Tensor[(60), float32] */;
  %932 = %925.0;
  %933 = %926.0;
  %934 = @func_2130() /* ty=Tensor[(15, 10, 3), float64] */;
  (%927, %928, %929, %930, %931, %932, %933, %934)
}

def @func_11899() -> (Tensor[(15, 10, 3), float64], Tensor[(4, 9, 5), float32]) {
  %935 = @func_4162() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %936 = %935.0;
  %937 = @func_4340() /* ty=Tensor[(4, 9, 5), float32] */;
  (%936, %937)
}

def @func_12517() -> (Tensor[(15, 10, 3), float64], Tensor[(10, 14, 15), float64]) {
  %938 = @func_2401() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %939 = %938.1;
  %940 = @func_5757() /* ty=Tensor[(10, 14, 15), float64] */;
  (%939, %940)
}

def @func_13436() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %941 = @func_1305() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %942 = @func_12572() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %943 = %941.3;
  %944 = %942.0;
  (%943, %944)
}

def @func_15034(%var_15010: Tensor[(8, 13, 10), float32]) -> (Tensor[(8, 13, 10), bool], Tensor[(8, 13, 10), float64], Tensor[(15, 10, 3), float64]) {
  %945 = @func_12478() /* ty=(Tensor[(8, 13, 10), float32],) */;
  %946 = %945.0;
  %947 = cast(%var_15010, dtype="bool") /* ty=Tensor[(8, 13, 10), bool] */;
  %948 = shape_of(%946, dtype="int32") /* ty=Tensor[(3), int32] */;
  %949 = cast(%946, dtype="bool") /* ty=Tensor[(8, 13, 10), bool] */;
  %950 = dyn.reshape(%947, %948, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %951 = cast(%var_15010, dtype="float64") /* ty=Tensor[(8, 13, 10), float64] */;
  %952 = logical_and(%949, %950) /* ty=Tensor[(8, 13, 10), bool] */;
  %953 = atan(%951) /* ty=Tensor[(8, 13, 10), float64] */;
  %954 = @func_4927() /* ty=Tensor[(15, 10, 3), float64] */;
  (%952, %953, %954)
}

def @func_1579() -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32]) {
  %955 = @func_258() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %956 = @func_1541() /* ty=(Tensor[(60), float32],) */;
  %957 = %955.3;
  %958 = %956.0;
  (%957, %958)
}

def @func_9163() -> (Tensor[(15, 10, 3), uint64], Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) {
  %959 = @func_8510() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), uint64]) */;
  %960 = @func_2589() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) */;
  %961 = %959.1;
  %962 = @func_937() /* ty=Tensor[(15, 10, 3), float64] */;
  %963 = %960.1;
  (%961, %962, %963)
}

def @func_8023() -> (Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %964 = @func_6031() /* ty=(Tensor[(8, 13, 10), float32],) */;
  %965 = @func_7881() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %966 = @func_3769() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */;
  %967 = %964.0;
  %968 = %965.0;
  %969 = %966.0;
  (%967, %968, %969)
}

def @func_11527() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %970 = @func_6868() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %971 = @func_6904() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %972 = %970.2;
  %973 = %971.0;
  (%972, %973)
}

def @func_13588() -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32]) {
  %974 = @func_5662() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %975 = @func_11315() /* ty=Tensor[(15, 10, 3), float64] */;
  %976 = %974.2;
  (%975, %976)
}

def @func_16200() -> (Tensor[(15, 10, 3), float64],) {
  %977 = @func_3769() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */;
  %978 = %977.0;
  (%978,)
}

def @func_12117() -> (Tensor[(15, 10, 3), float64],) {
  %979 = @func_2036() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %980 = %979.0;
  (%980,)
}

def @func_20439() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %981 = @func_3155() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool], Tensor[(15, 10, 3), float64]) */;
  %982 = @func_11315() /* ty=Tensor[(15, 10, 3), float64] */;
  %983 = %981.1;
  (%982, %983)
}

def @func_18613() -> (Tensor[(15, 10, 3), uint64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(10, 14, 15), float64]) {
  %984 = @func_1641() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), uint64]) */;
  %985 = @func_16432() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) */;
  %986 = @func_14278() /* ty=(Tensor[(10, 14, 15), float64],) */;
  %987 = %984.1;
  %988 = %985.1;
  %989 = @func_14510() /* ty=Tensor[(15, 10, 3), float64] */;
  %990 = %986.0;
  (%987, %988, %989, %990)
}

def @func_16379(%var_16359: Tensor[(11, 15, 5), float64]) -> (Tensor[(11, 15, 5), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %991 = cast(%var_16359, dtype="float64") /* ty=Tensor[(11, 15, 5), float64] */;
  %992 = atan(%991) /* ty=Tensor[(11, 15, 5), float64] */;
  %993 = cast(meta[relay.Constant][30] /* ty=Tensor[(11, 15, 5), float64] */, dtype="float32") /* ty=Tensor[(11, 15, 5), float32] */;
  %994 = shape_of(%992, dtype="int32") /* ty=Tensor[(3), int32] */;
  %995 = cast(%992, dtype="float32") /* ty=Tensor[(11, 15, 5), float32] */;
  %996 = dyn.reshape(%993, %994, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %997 = @func_8956() /* ty=Tensor[(15, 10, 3), float64] */;
  %998 = cast(%997, dtype="float64") /* ty=Tensor[(15, 10, 3), float64] */;
  %999 = cast(%997, dtype="bool") /* ty=Tensor[(15, 10, 3), bool] */;
  %1000 = reshape(%998, newshape=[15, 10, 3]) /* ty=Tensor[(15, 10, 3), float64] */;
  %1001 = reshape(%999, newshape=[15, 10, 3]) /* ty=Tensor[(15, 10, 3), bool] */;
  %1002 = @func_1135(%1000, %1001) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), int32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1003 = divide(%995, %996) /* ty=Tensor[(11, 15, 5), float32] */;
  %1004 = %1002.1;
  (%1003, %997, %1004)
}

def @func_18331() -> (Tensor[(7, 3, 11), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1005 = cast(meta[relay.Constant][31] /* ty=Tensor[(7, 3, 11), float64] */, dtype="float64") /* ty=Tensor[(7, 3, 11), float64] */;
  %1006 = @func_3809() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) */;
  %1007 = asinh(%1005) /* ty=Tensor[(7, 3, 11), float64] */;
  %1008 = @func_12057() /* ty=Tensor[(15, 10, 3), float64] */;
  %1009 = %1006.0;
  (%1007, %1008, %1009)
}

def @func_2629(%var_2627: Tensor[(280), int16]) -> (Tensor[(15, 10, 3), float64], Tensor[(5, 4, 14), int16], Tensor[(280), int16]) {
  %1010 = @func_359() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1011 = cast(%var_2627, dtype="int16") /* ty=Tensor[(280), int16] */;
  %1012 = cast(%var_2627, dtype="int16") /* ty=Tensor[(280), int16] */;
  %1013 = reshape(%1011, newshape=[5, 4, 14]) /* ty=Tensor[(5, 4, 14), int16] */;
  %1014 = reshape(%1012, newshape=[5, 4, 14]) /* ty=Tensor[(5, 4, 14), int16] */;
  %1015 = %1010.2;
  %1016 = @func_2160(%1013, %1014) /* ty=Tensor[(5, 4, 14), int16] */;
  (%1015, %1016, %var_2627)
}

def @func_13001() -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32]) {
  %1017 = @func_1501() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1018 = @func_5068() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
  %1019 = %1017.0;
  %1020 = %1018.0;
  (%1019, %1020)
}

def @func_6904() -> (Tensor[(15, 10, 3), float64],) {
  %1021 = @func_2827() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60, 1), float32], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
  %1022 = %1021.0;
  (%1022,)
}

def @func_11102() -> Tensor[(15, 10, 3), float64] {
  @func_10607() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_1661() -> Tensor[(15, 10, 3), float64] {
  %1023 = @func_1641() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), uint64]) */;
  %1023.0
}

def @func_1383() -> (Tensor[(60), float32],) {
  %1024 = @func_887() /* ty=(Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
  %1025 = %1024.2;
  (%1025,)
}

def @func_16432() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) {
  %1026 = @func_7305() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1027 = @func_2464() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool], Tensor[(1, 540), uint8], Tensor[(15, 10, 3), float64]) */;
  %1028 = %1026.1;
  %1029 = %1027.3;
  %1030 = @func_2473() /* ty=Tensor[(9, 10, 6), bool] */;
  (%1028, %1029, %1030)
}

def @func_20664() -> (Tensor[(15, 10, 3), float64],) {
  %1031 = @func_2785() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1032 = %1031.0;
  (%1032,)
}

def @func_184() -> Tensor[(15, 10, 3), float64] {
  %1033 = @func_167() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1033.0
}

def @func_18648() -> (Tensor[(60), float32], Tensor[(8, 13, 10), float32]) {
  %1034 = @func_13530() /* ty=(Tensor[(60), float32],) */;
  %1035 = @func_14301() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */;
  %1036 = %1034.0;
  %1037 = %1035.1;
  (%1036, %1037)
}

def @func_20383(%var_20374: Tensor[(324), float32]) -> (Tensor[(60), float32], Tensor[(324), float32], Tensor[(3, 12, 9), float64]) {
  %1038 = @func_5698() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
  %1039 = cast(%var_20374, dtype="float32") /* ty=Tensor[(324), float32] */;
  %1040 = reshape(%1039, newshape=[3, 12, 9]) /* ty=Tensor[(3, 12, 9), float32] */;
  %1041 = @func_12405(%1040) /* ty=(Tensor[(3, 12, 9), float32], Tensor[(15, 10, 3), float64]) */;
  %1042 = %1041.0;
  %1043 = cast(%1042, dtype="float64") /* ty=Tensor[(3, 12, 9), float64] */;
  %1044 = %1038.0;
  %1045 = cosh(%1043) /* ty=Tensor[(3, 12, 9), float64] */;
  (%1044, %var_20374, %1045)
}

def @func_2844() -> (Tensor[(15, 10, 3), float64],) {
  %1046 = @func_731() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1047 = %1046.0;
  (%1047,)
}

def @func_4787() -> Tensor[(4, 9, 5), float32] {
  @func_2854() /* ty=Tensor[(4, 9, 5), float32] */
}

def @func_5715() -> Tensor[(15, 10, 3), float64] {
  %1048 = @func_167() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1048.0
}

def @func_12259() -> (Tensor[(4, 9, 5), float32], Tensor[(15, 10, 3), float64]) {
  %1049 = @func_4045() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1050 = @func_4340() /* ty=Tensor[(4, 9, 5), float32] */;
  %1051 = %1049.0;
  (%1050, %1051)
}

def @func_300() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1052 = @func_167() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1053 = %1052.0;
  %1054 = @func_184() /* ty=Tensor[(15, 10, 3), float64] */;
  (%1053, %1054)
}

def @func_12680() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32]) {
  %1055 = @func_6197() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %1056 = @func_8613() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32]) */;
  %1057 = %1055.1;
  %1058 = %1056.4;
  (%1057, %1058)
}

def @func_5958() -> (Tensor[(60), float32], Tensor[(60, ?), uint16]) {
  %1059 = @func_1726() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1060 = @func_1383() /* ty=(Tensor[(60), float32],) */;
  %1061 = %1060.0;
  %1062 = cast(%1061, dtype="float32") /* ty=Tensor[(60), float32] */;
  %1063 = reshape(%1062, newshape=[60, 1]) /* ty=Tensor[(60, 1), float32] */;
  %1064 = @func_655(%1063) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60, 1), float32]) */;
  %1065 = %1064.4;
  %1066 = cast(%1061, dtype="uint16") /* ty=Tensor[(60), uint16] */;
  %1067 = shape_of(%1065, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1068 = cast(%1065, dtype="uint16") /* ty=Tensor[(60, 1), uint16] */;
  %1069 = dyn.reshape(%1066, %1067, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %1070 = %1059.1;
  %1071 = left_shift(%1068, %1069) /* ty=Tensor[(60, ?), uint16] */;
  (%1070, %1071)
}

def @func_17375(%var_17369: Tensor[(8, 9, 11), uint8]) -> (Tensor[(8, 9, 11), uint8],) {
  %1072 = cast(%var_17369, dtype="uint8") /* ty=Tensor[(8, 9, 11), uint8] */;
  %1073 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(8, 9, 11), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1074 = cast(meta[relay.Constant][32] /* ty=Tensor[(8, 9, 11), uint8] */, dtype="uint8") /* ty=Tensor[(8, 9, 11), uint8] */;
  %1075 = dyn.reshape(%1072, %1073, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1076 = bitwise_xor(%1074, %1075) /* ty=Tensor[(8, 9, 11), uint8] */;
  (%1076,)
}

def @func_15383() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1077 = @func_2977() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(280), int16]) */;
  %1078 = %1077.1;
  %1079 = @func_9993() /* ty=Tensor[(15, 10, 3), float64] */;
  (%1078, %1079)
}

def @func_7393() -> (Tensor[(15, 10, 3), float64], Tensor[(4, 10, 13), bool], Tensor[(260, 2), uint16], Tensor[(15, 10, 3), float64], Tensor[(4, 9, 5), float64], Tensor[(8, 7, 11), uint64], Tensor[(7, 88), bool], Tensor[(15, 10, 3), float64]) {
  %1080 = cast(meta[relay.Constant][33] /* ty=Tensor[(260, 2), uint16] */, dtype="uint16") /* ty=Tensor[(260, 2), uint16] */;
  %1081 = reshape(%1080, newshape=[520]) /* ty=Tensor[(520), uint16] */;
  %1082 = @func_6693(%1081) /* ty=(Tensor[(4, 9, 5), float32], Tensor[(4, 10, 13), bool], Tensor[(520), uint16], Tensor[(60), float32]) */;
  %1083 = @func_359() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1084 = @func_4340() /* ty=Tensor[(4, 9, 5), float32] */;
  %1085 = cast(%1084, dtype="float64") /* ty=Tensor[(4, 9, 5), float64] */;
  %1086 = cast(meta[relay.Constant][34] /* ty=Tensor[(7, 88), bool] */, dtype="bool") /* ty=Tensor[(7, 88), bool] */;
  %1087 = cast(meta[relay.Constant][34] /* ty=Tensor[(7, 88), bool] */, dtype="bool") /* ty=Tensor[(7, 88), bool] */;
  %1088 = reshape(%1086, newshape=[8, 7, 11]) /* ty=Tensor[(8, 7, 11), bool] */;
  %1089 = reshape(%1087, newshape=[8, 7, 11]) /* ty=Tensor[(8, 7, 11), bool] */;
  %1090 = @func_6991(%1088, %1089) /* ty=(Tensor[(8, 7, 11), bool], Tensor[(8, 7, 11), uint64], Tensor[(15, 10, 3), float64], Tensor[(8, 7, 11), float64]) */;
  %1091 = @func_2866() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1092 = @func_2479() /* ty=Tensor[(15, 10, 3), float64] */;
  %1093 = %1082.1;
  %1094 = %1083.0;
  %1095 = asinh(%1085) /* ty=Tensor[(4, 9, 5), float64] */;
  %1096 = %1090.1;
  %1097 = %1091.0;
  (%1092, %1093, meta[relay.Constant][33] /* ty=Tensor[(260, 2), uint16] */, %1094, %1095, %1096, meta[relay.Constant][34] /* ty=Tensor[(7, 88), bool] */, %1097)
}

def @func_3565(%var_3549: Tensor[(8, 14, 9), float64]) -> (Tensor[(8, 14, 9), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32]) {
  %1098 = cast(%var_3549, dtype="float64") /* ty=Tensor[(8, 14, 9), float64] */;
  %1099 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(8, 14, 9), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1100 = cast(meta[relay.Constant][35] /* ty=Tensor[(8, 14, 9), float64] */, dtype="float64") /* ty=Tensor[(8, 14, 9), float64] */;
  %1101 = dyn.reshape(%1098, %1099, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1102 = @func_1726() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1103 = mod(%1100, %1101) /* ty=Tensor[(8, 14, 9), float64] */;
  %1104 = %1102.3;
  %1105 = @func_2565() /* ty=Tensor[(60), float32] */;
  (%1103, %1104, %1105)
}

def @func_10239() -> (Tensor[(15, 10, 3), float64], Tensor[(10, 8, 3), bool], uint64, Tensor[(15, 10, 3), uint64], Tensor[(15, 10, 3), float64], Tensor[(4, 9, 5), float32]) {
  %1106 = @func_731() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1107 = cast(meta[relay.Constant][36] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %1108 = reshape(%1107, newshape=[]) /* ty=uint64 */;
  %1109 = @func_10062(%1108) /* ty=(Tensor[(10, 8, 3), bool], Tensor[(4, 9, 5), float32]) */;
  %1110 = @func_8510() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), uint64]) */;
  %1111 = %1106.0;
  %1112 = %1109.0;
  %1113 = %1110.1;
  %1114 = @func_588() /* ty=Tensor[(15, 10, 3), float64] */;
  %1115 = @func_4787() /* ty=Tensor[(4, 9, 5), float32] */;
  (%1111, %1112, meta[relay.Constant][36] /* ty=uint64 */, %1113, %1114, %1115)
}

def @func_5804(%var_5794: Tensor[(60), float32]) -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32]) {
  %1116 = @func_1501() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1117 = cast(%var_5794, dtype="float32") /* ty=Tensor[(60), float32] */;
  %1118 = reshape(%1117, newshape=[3, 20]) /* ty=Tensor[(3, 20), float32] */;
  %1119 = @func_718(%1118) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(3, 20), float32]) */;
  %1120 = %1116.0;
  %1121 = %1119.1;
  (%1120, %1121, %var_5794)
}

def @func_19792() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1122 = @func_4162() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1123 = @func_12517() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(10, 14, 15), float64]) */;
  %1124 = @func_10239() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(10, 8, 3), bool], uint64, Tensor[(15, 10, 3), uint64], Tensor[(15, 10, 3), float64], Tensor[(4, 9, 5), float32]) */;
  %1125 = @func_1579() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %1126 = %1122.0;
  %1127 = @func_7485() /* ty=Tensor[(15, 10, 3), float64] */;
  %1128 = %1123.0;
  %1129 = %1124.4;
  %1130 = %1125.0;
  (%1126, %1127, %1128, %1129, %1130)
}

def @func_12907() -> Tensor[(15, 10, 3), float64] {
  %1131 = @func_1975() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1131.0
}

def @func_4340() -> Tensor[(4, 9, 5), float32] {
  @func_2854() /* ty=Tensor[(4, 9, 5), float32] */
}

def @func_8690() -> (Tensor[(15, 10, 3), float64],) {
  %1132 = @func_2036() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1133 = %1132.0;
  (%1133,)
}

def @func_12209() -> (Tensor[(15, 10, 3), float64],) {
  %1134 = @func_4149() /* ty=Tensor[(15, 10, 3), float64] */;
  (%1134,)
}

def @func_3155() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool], Tensor[(15, 10, 3), float64]) {
  %1135 = @func_2785() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1136 = @func_1495() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1137 = @func_2589() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) */;
  %1138 = @func_1975() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1139 = %1135.0;
  %1140 = @func_2130() /* ty=Tensor[(15, 10, 3), float64] */;
  %1141 = %1136.0;
  %1142 = %1137.1;
  %1143 = %1138.0;
  (%1139, %1140, %1141, %1142, %1143)
}

def @func_8285(%var_8272: Tensor[(13, 3, 15), float64]) -> (Tensor[(13, 3, 15), float64], Tensor[(8, 13, 10), float32]) {
  %1144 = cast(%var_8272, dtype="float64") /* ty=Tensor[(13, 3, 15), float64] */;
  %1145 = tan(%1144) /* ty=Tensor[(13, 3, 15), float64] */;
  %1146 = @func_3486() /* ty=Tensor[(8, 13, 10), float32] */;
  (%1145, %1146)
}

def @func_4031() -> (Tensor[(60), float32], Tensor[(15, 10, 3), uint64]) {
  %1147 = @func_2565() /* ty=Tensor[(60), float32] */;
  %1148 = @func_2659() /* ty=Tensor[(15, 10, 3), uint64] */;
  (%1147, %1148)
}

def @func_8488() -> Tensor[(15, 10, 3), float64] {
  @func_937() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_3769() -> (Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) {
  %1149 = @func_731() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1150 = %1149.0;
  %1151 = @func_2726() /* ty=Tensor[(8, 13, 10), float32] */;
  (%1150, %1151)
}

def @func_15525() -> (Tensor[(84, 12), float32], Tensor[(84, 12), float32]) {
  %1152 = @func_10648() /* ty=(Tensor[(8, 13, 10), bool], Tensor[(8, 13, 10), float32], Tensor[(9, 8, 14), float64], Tensor[(84, 12), float64]) */;
  %1153 = %1152.3;
  %1154 = cast(%1153, dtype="float32") /* ty=Tensor[(84, 12), float32] */;
  %1155 = cast(%1153, dtype="float32") /* ty=Tensor[(84, 12), float32] */;
  %1156 = asin(%1154) /* ty=Tensor[(84, 12), float32] */;
  %1157 = exp(%1155) /* ty=Tensor[(84, 12), float32] */;
  (%1156, %1157)
}

def @func_17536(%var_17528: int8, %var_17529: Tensor[(2, 4, 14), int8]) -> (Tensor[(2, 4, 14), int8],) {
  %1158 = cast(%var_17528, dtype="int8") /* ty=int8 */;
  %1159 = cast(%var_17529, dtype="int8") /* ty=Tensor[(2, 4, 14), int8] */;
  %1160 = bitwise_xor(%1158, %1159) /* ty=Tensor[(2, 4, 14), int8] */;
  (%1160,)
}

def @func_21413(%var_21357: Tensor[(540), uint8]) -> (Tensor[(15, 10, 3), float64], Tensor[(4, 9, 5), float32], Tensor[(540), uint8], Tensor[(15, 10, 3), float64], Tensor[(520), uint16], Tensor[(9, 10, 6), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(280), int16]) {
  %1161 = @func_11899() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(4, 9, 5), float32]) */;
  %1162 = cast(meta[relay.Constant][37] /* ty=Tensor[(520), uint16] */, dtype="uint16") /* ty=Tensor[(520), uint16] */;
  %1163 = reshape(%1162, newshape=[520]) /* ty=Tensor[(520), uint16] */;
  %1164 = @func_12461(%1163) /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(4, 10, 13), bool], Tensor[(520), uint16]) */;
  %1165 = cast(%var_21357, dtype="uint8") /* ty=Tensor[(540), uint8] */;
  %1166 = cast(%var_21357, dtype="uint8") /* ty=Tensor[(540), uint8] */;
  %1167 = reshape(%1165, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), uint8] */;
  %1168 = reshape(%1166, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), uint8] */;
  %1169 = @func_811(%1167, %1168) /* ty=(Tensor[(9, 10, 6), bool],) */;
  %1170 = %1169.0;
  %1171 = cast(%1170, dtype="float64") /* ty=Tensor[(9, 10, 6), float64] */;
  %1172 = cast(meta[relay.Constant][38] /* ty=Tensor[(280), int16] */, dtype="int16") /* ty=Tensor[(280), int16] */;
  %1173 = reshape(%1172, newshape=[280]) /* ty=Tensor[(280), int16] */;
  %1174 = @func_6931(%1173) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(280), int16], Tensor[(280), int16], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
  %1175 = @func_14546() /* ty=Tensor[(15, 10, 3), float64] */;
  %1176 = %1161.1;
  %1177 = %1164.1;
  %1178 = acos(%1171) /* ty=Tensor[(9, 10, 6), float64] */;
  %1179 = @func_10410() /* ty=Tensor[(15, 10, 3), float64] */;
  %1180 = %1174.0;
  (%1175, %1176, %var_21357, %1177, meta[relay.Constant][37] /* ty=Tensor[(520), uint16] */, %1178, %1179, %1180, meta[relay.Constant][38] /* ty=Tensor[(280), int16] */)
}

def @func_731() -> (Tensor[(15, 10, 3), float64],) {
  %1181 = @func_300() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1182 = %1181.1;
  (%1182,)
}

def @func_19019() -> (Tensor[(4, 9, 5), float32], Tensor[(15, 10, 3), float64]) {
  %1183 = @func_7783() /* ty=(Tensor[(4, 9, 5), float32], Tensor[(4, 9, 5), float32]) */;
  %1184 = @func_13626() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1185 = %1183.0;
  %1186 = %1184.1;
  (%1185, %1186)
}

def @func_8956() -> Tensor[(15, 10, 3), float64] {
  %1187 = @func_7305() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1187.1
}

def @func_3455(%var_3438: Tensor[(60, 1), float32]) -> (Tensor[(15, 10, 3), float64], Tensor[(60, ?), bool]) {
  %1188 = cast(%var_3438, dtype="float32") /* ty=Tensor[(60, 1), float32] */;
  %1189 = reshape(%1188, newshape=[3, 20]) /* ty=Tensor[(3, 20), float32] */;
  %1190 = @func_2269(%1189) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(3, 20), float32], Tensor[(60), float32]) */;
  %1191 = %1190.3;
  %1192 = cast(%1191, dtype="bool") /* ty=Tensor[(60), bool] */;
  %1193 = shape_of(%var_3438, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1194 = cast(%var_3438, dtype="bool") /* ty=Tensor[(60, 1), bool] */;
  %1195 = dyn.reshape(%1192, %1193, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1196 = @func_588() /* ty=Tensor[(15, 10, 3), float64] */;
  %1197 = logical_and(%1194, %1195) /* ty=Tensor[(60, ?), bool] */;
  (%1196, %1197)
}

def @func_9276() -> (Tensor[(15, 10, 3), float64],) {
  %1198 = @func_1396() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1199 = %1198.0;
  (%1199,)
}

def @func_16066() -> (Tensor[(4, 10, 13), bool], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1200 = @func_7393() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(4, 10, 13), bool], Tensor[(260, 2), uint16], Tensor[(15, 10, 3), float64], Tensor[(4, 9, 5), float64], Tensor[(8, 7, 11), uint64], Tensor[(7, 88), bool], Tensor[(15, 10, 3), float64]) */;
  %1201 = @func_14301() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */;
  %1202 = @func_3415() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64]) */;
  %1203 = %1200.1;
  %1204 = %1201.0;
  %1205 = %1202.0;
  (%1203, %1204, %1205)
}

def @func_796() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1206 = @func_359() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1207 = @func_731() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1208 = %1206.1;
  %1209 = %1207.0;
  (%1208, %1209)
}

def @func_10062(%var_10049: uint64) -> (Tensor[(10, 8, 3), bool], Tensor[(4, 9, 5), float32]) {
  %1210 = cast(%var_10049, dtype="bool") /* ty=bool */;
  %1211 = cast(meta[relay.Constant][39] /* ty=Tensor[(10, 8, 3), uint64] */, dtype="bool") /* ty=Tensor[(10, 8, 3), bool] */;
  %1212 = greater(%1210, %1211) /* ty=Tensor[(10, 8, 3), bool] */;
  %1213 = @func_8240() /* ty=Tensor[(4, 9, 5), float32] */;
  (%1212, %1213)
}

def @func_17493() -> Tensor[(10, 14, 15), float64] {
  @func_9085() /* ty=Tensor[(10, 14, 15), float64] */
}

def @func_1641() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), uint64]) {
  %1214 = @func_359() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1215 = @func_1495() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1216 = %1215.0;
  %1217 = @func_167() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1218 = %1217.0;
  %1219 = cast(%1218, dtype="uint64") /* ty=Tensor[(15, 10, 3), uint64] */;
  %1220 = shape_of(%1216, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1221 = cast(%1216, dtype="uint64") /* ty=Tensor[(15, 10, 3), uint64] */;
  %1222 = dyn.reshape(%1219, %1220, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1223 = %1214.0;
  %1224 = bitwise_or(%1221, %1222) /* ty=Tensor[(15, 10, 3), uint64] */;
  (%1223, %1224)
}

def @func_1933() -> (Tensor[(15, 10, 3), float64],) {
  %1225 = @func_1579() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %1226 = %1225.0;
  (%1226,)
}

def @func_5399() -> (Tensor[(60), float32],) {
  %1227 = @func_2284() /* ty=Tensor[(60), float32] */;
  (%1227,)
}

def @func_4162() -> (Tensor[(15, 10, 3), float64],) {
  %1228 = @func_1791() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %1229 = %1228.0;
  (%1229,)
}

def @func_887() -> (Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) {
  %1230 = @func_376() /* ty=Tensor[(15, 10, 3), float64] */;
  %1231 = cast(%1230, dtype="float32") /* ty=Tensor[(15, 10, 3), float32] */;
  %1232 = cast(meta[relay.Constant][40] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %1233 = reshape(%1232, newshape=[60, 1]) /* ty=Tensor[(60, 1), float32] */;
  %1234 = @func_655(%1233) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60, 1), float32]) */;
  %1235 = @func_198() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1236 = erf(%1231) /* ty=Tensor[(15, 10, 3), float32] */;
  %1237 = %1234.2;
  %1238 = %1235.0;
  (%1236, %1237, meta[relay.Constant][40] /* ty=Tensor[(60), float32] */, %1238)
}

def @func_6931(%var_6911: Tensor[(280), int16]) -> (Tensor[(15, 10, 3), float64], Tensor[(280), int16], Tensor[(280), int16], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) {
  %1239 = @func_887() /* ty=(Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
  %1240 = cast(%var_6911, dtype="int16") /* ty=Tensor[(280), int16] */;
  %1241 = reshape(%1240, newshape=[280]) /* ty=Tensor[(280), int16] */;
  %1242 = @func_2629(%1241) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(5, 4, 14), int16], Tensor[(280), int16]) */;
  %1243 = @func_1383() /* ty=(Tensor[(60), float32],) */;
  %1244 = @func_2589() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) */;
  %1245 = %1239.3;
  %1246 = %1242.2;
  %1247 = %1243.0;
  %1248 = %1244.0;
  (%1245, %1246, %var_6911, %1247, %1248)
}

def @func_937() -> Tensor[(15, 10, 3), float64] {
  %1249 = @func_796() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1249.0
}

def @func_9801() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1250 = @func_796() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1251 = @func_2866() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1252 = @func_198() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1253 = @func_7881() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1254 = %1250.0;
  %1255 = %1251.0;
  %1256 = %1252.0;
  %1257 = %1253.0;
  (%1254, %1255, %1256, %1257)
}

def @func_8083() -> (Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1258 = @func_1726() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1259 = @func_6555() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1260 = %1258.1;
  %1261 = @func_314() /* ty=Tensor[(15, 10, 3), float64] */;
  %1262 = %1259.0;
  (%1260, %1261, %1262)
}

def @func_4315() -> (Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) {
  %1263 = @func_2844() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1264 = %1263.0;
  %1265 = @func_2726() /* ty=Tensor[(8, 13, 10), float32] */;
  (%1264, %1265)
}

def @func_6323() -> (Tensor[(4, 9, 5), float32], Tensor[(60), float32], Tensor[(10, 16, 8), int16], Tensor[(1280, 1), int64], Tensor[(60), float32]) {
  %1266 = @func_4340() /* ty=Tensor[(4, 9, 5), float32] */;
  %1267 = cast(%1266, dtype="float32") /* ty=Tensor[(4, 9, 5), float32] */;
  %1268 = @func_2827() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60, 1), float32], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
  %1269 = cast(meta[relay.Constant][41] /* ty=Tensor[(1280, 1), int64] */, dtype="int64") /* ty=Tensor[(1280, 1), int64] */;
  %1270 = cast(meta[relay.Constant][41] /* ty=Tensor[(1280, 1), int64] */, dtype="int64") /* ty=Tensor[(1280, 1), int64] */;
  %1271 = reshape(%1269, newshape=[10, 16, 8]) /* ty=Tensor[(10, 16, 8), int64] */;
  %1272 = reshape(%1270, newshape=[10, 16, 8]) /* ty=Tensor[(10, 16, 8), int64] */;
  %1273 = @func_4436(%1271, %1272) /* ty=(Tensor[(10, 16, 8), int16],) */;
  %1274 = @func_5399() /* ty=(Tensor[(60), float32],) */;
  %1275 = cos(%1267) /* ty=Tensor[(4, 9, 5), float32] */;
  %1276 = %1268.2;
  %1277 = %1273.0;
  %1278 = %1274.0;
  (%1275, %1276, %1277, meta[relay.Constant][41] /* ty=Tensor[(1280, 1), int64] */, %1278)
}

def @func_12405(%var_12366: Tensor[(3, 12, 9), float32]) -> (Tensor[(3, 12, 9), float32], Tensor[(15, 10, 3), float64]) {
  %1279 = cast(%var_12366, dtype="float32") /* ty=Tensor[(3, 12, 9), float32] */;
  %1280 = @func_5492() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1281 = log2(%1279) /* ty=Tensor[(3, 12, 9), float32] */;
  %1282 = %1280.0;
  (%1281, %1282)
}

def @func_9696() -> Tensor[(15, 10, 3), float64] {
  @func_5715() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_6555() -> (Tensor[(15, 10, 3), float64],) {
  %1283 = @func_5911() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32], Tensor[(60), float32]) */;
  %1284 = %1283.1;
  (%1284,)
}

def @func_7526() -> Tensor[(15, 10, 3), float64] {
  @func_1661() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_10607() -> Tensor[(15, 10, 3), float64] {
  @func_1661() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_8667() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1285 = @func_2540() /* ty=Tensor[(15, 10, 3), float64] */;
  %1286 = @func_4149() /* ty=Tensor[(15, 10, 3), float64] */;
  (%1285, %1286)
}

def @func_11315() -> Tensor[(15, 10, 3), float64] {
  @func_314() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_7738() -> (Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1287 = @func_6031() /* ty=(Tensor[(8, 13, 10), float32],) */;
  %1288 = @func_1879() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1289 = %1287.0;
  %1290 = @func_376() /* ty=Tensor[(15, 10, 3), float64] */;
  %1291 = %1288.0;
  (%1289, %1290, %1291)
}

def @func_13127(%var_13115: Tensor[(12, 11, 10), float64]) -> (Tensor[(12, 11, 10), float64],) {
  %1292 = cast(%var_13115, dtype="float64") /* ty=Tensor[(12, 11, 10), float64] */;
  %1293 = cosh(%1292) /* ty=Tensor[(12, 11, 10), float64] */;
  (%1293,)
}

def @func_19501(%var_19478: Tensor[(2, 13, 13), float64]) -> (Tensor[(15, 10, 3), float64], Tensor[(2, 13, 13), float64]) {
  %1294 = cast(%var_19478, dtype="float64") /* ty=Tensor[(2, 13, 13), float64] */;
  %1295 = atanh(%1294) /* ty=Tensor[(2, 13, 13), float64] */;
  %1296 = cast(%1295, dtype="float64") /* ty=Tensor[(2, 13, 13), float64] */;
  %1297 = @func_11315() /* ty=Tensor[(15, 10, 3), float64] */;
  %1298 = asin(%1296) /* ty=Tensor[(2, 13, 13), float64] */;
  (%1297, %1298)
}

def @func_12057() -> Tensor[(15, 10, 3), float64] {
  %1299 = @func_796() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1299.1
}

def @func_18099() -> (Tensor[(8, 13, 10), float32], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) {
  %1300 = @func_5662() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %1301 = @func_6673() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %1302 = @func_17620() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64]) */;
  %1303 = %1300.0;
  %1304 = %1301.4;
  %1305 = %1302.1;
  (%1303, %1304, %1305)
}

def @func_7462(%var_7433: Tensor[(8, 14, 6), uint16], %var_7434: Tensor[(8, 14, 6), uint16]) -> (Tensor[(8, 14, 6), bool], Tensor[(15, 10, 3), float64], Tensor[(8, 7, 11), uint64], Tensor[(616), bool], Tensor[(15, 10, 3), float64]) {
  %1306 = cast(%var_7434, dtype="bool") /* ty=Tensor[(8, 14, 6), bool] */;
  %1307 = shape_of(%var_7433, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1308 = cast(%var_7433, dtype="bool") /* ty=Tensor[(8, 14, 6), bool] */;
  %1309 = dyn.reshape(%1306, %1307, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1310 = @func_2785() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1311 = cast(meta[relay.Constant][42] /* ty=Tensor[(616), bool] */, dtype="bool") /* ty=Tensor[(616), bool] */;
  %1312 = cast(meta[relay.Constant][42] /* ty=Tensor[(616), bool] */, dtype="bool") /* ty=Tensor[(616), bool] */;
  %1313 = reshape(%1311, newshape=[8, 7, 11]) /* ty=Tensor[(8, 7, 11), bool] */;
  %1314 = reshape(%1312, newshape=[8, 7, 11]) /* ty=Tensor[(8, 7, 11), bool] */;
  %1315 = @func_6991(%1313, %1314) /* ty=(Tensor[(8, 7, 11), bool], Tensor[(8, 7, 11), uint64], Tensor[(15, 10, 3), float64], Tensor[(8, 7, 11), float64]) */;
  %1316 = @func_7305() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1317 = less_equal(%1308, %1309) /* ty=Tensor[(8, 14, 6), bool] */;
  %1318 = %1310.0;
  %1319 = %1315.1;
  %1320 = %1316.1;
  (%1317, %1318, %1319, meta[relay.Constant][42] /* ty=Tensor[(616), bool] */, %1320)
}

def @func_8923() -> (Tensor[(8, 13, 10), float32],) {
  %1321 = @func_8403() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(4, 9, 5), float32]) */;
  %1322 = %1321.0;
  (%1322,)
}

def @func_15635() -> (Tensor[(15, 10, 3), uint64], Tensor[(15, 10, 3), float64]) {
  %1323 = @func_4031() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), uint64]) */;
  %1324 = %1323.1;
  %1325 = @func_14710() /* ty=Tensor[(15, 10, 3), float64] */;
  (%1324, %1325)
}

def @func_14695() -> (Tensor[(15, 10, 3), float64], Tensor[(4, 9, 5), float32]) {
  %1326 = @func_2130() /* ty=Tensor[(15, 10, 3), float64] */;
  %1327 = @func_2854() /* ty=Tensor[(4, 9, 5), float32] */;
  (%1326, %1327)
}

def @func_14710() -> Tensor[(15, 10, 3), float64] {
  %1328 = @func_5068() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
  %1328.1
}

def @func_8779() -> Tensor[(60), float32] {
  %1329 = @func_5662() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %1329.2
}

def @func_19001() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), uint64]) {
  %1330 = @func_16724() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(1280, 12), int8], Tensor[(4, 9, 5), float32]) */;
  %1331 = @func_4031() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), uint64]) */;
  %1332 = %1330.0;
  %1333 = %1331.1;
  (%1332, %1333)
}

def @func_20845() -> Tensor[(15, 10, 3), uint64] {
  %1334 = @func_20207() /* ty=(Tensor[(15, 10, 3), uint64],) */;
  %1334.0
}

def @func_1495() -> (Tensor[(15, 10, 3), float64],) {
  %1335 = @func_588() /* ty=Tensor[(15, 10, 3), float64] */;
  (%1335,)
}

def @func_3869() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) {
  %1336 = @func_198() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1337 = @func_2198() /* ty=Tensor[(15, 10, 3), float64] */;
  %1338 = %1336.0;
  %1339 = @func_2726() /* ty=Tensor[(8, 13, 10), float32] */;
  (%1337, %1338, %1339)
}

def @func_1181() -> (Tensor[(15, 10, 3), float64],) {
  %1340 = @func_314() /* ty=Tensor[(15, 10, 3), float64] */;
  (%1340,)
}

def @func_18139() -> (Tensor[(10, 14, 15), float64], Tensor[(2, 4, 12), float64], Tensor[(1, 297), bool], Tensor[(96), float64], Tensor[(60), float32], Tensor[(520), uint16], Tensor[(15, 10, 3), float64]) {
  %1341 = @func_12517() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(10, 14, 15), float64]) */;
  %1342 = cast(meta[relay.Constant][43] /* ty=Tensor[(1, 297), bool] */, dtype="bool") /* ty=Tensor[(1, 297), bool] */;
  %1343 = cast(meta[relay.Constant][43] /* ty=Tensor[(1, 297), bool] */, dtype="bool") /* ty=Tensor[(1, 297), bool] */;
  %1344 = cast(meta[relay.Constant][44] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %1345 = reshape(%1342, newshape=[11, 3, 9]) /* ty=Tensor[(11, 3, 9), bool] */;
  %1346 = reshape(%1343, newshape=[11, 3, 9]) /* ty=Tensor[(11, 3, 9), bool] */;
  %1347 = reshape(%1344, newshape=[96]) /* ty=Tensor[(96), float64] */;
  %1348 = @func_8865(%1345, %1346, %1347) /* ty=(Tensor[(11, 3, 9), bool], Tensor[(2, 4, 12), float64], Tensor[(96), float64]) */;
  %1349 = cast(meta[relay.Constant][45] /* ty=Tensor[(520), uint16] */, dtype="uint16") /* ty=Tensor[(520), uint16] */;
  %1350 = reshape(%1349, newshape=[520]) /* ty=Tensor[(520), uint16] */;
  %1351 = @func_12461(%1350) /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(4, 10, 13), bool], Tensor[(520), uint16]) */;
  %1352 = @func_14434() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32], Tensor[(60), float32]) */;
  %1353 = %1341.1;
  %1354 = %1348.1;
  %1355 = %1351.0;
  %1356 = %1352.0;
  (%1353, %1354, meta[relay.Constant][43] /* ty=Tensor[(1, 297), bool] */, meta[relay.Constant][44] /* ty=Tensor[(96), float64] */, %1355, meta[relay.Constant][45] /* ty=Tensor[(520), uint16] */, %1356)
}

def @func_10496() -> (Tensor[(10, 14, 15), float64],) {
  %1357 = @func_9085() /* ty=Tensor[(10, 14, 15), float64] */;
  (%1357,)
}

def @func_11403() -> (Tensor[(4, 9, 5), float32],) {
  %1358 = @func_7783() /* ty=(Tensor[(4, 9, 5), float32], Tensor[(4, 9, 5), float32]) */;
  %1359 = %1358.1;
  (%1359,)
}

def @func_9613(%var_9579: Tensor[(672), uint16]) -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(4, 9, 5), float32], Tensor[(4, 9, 5), float32], Tensor[(15, 10, 3), float64], Tensor[(672), uint16], Tensor[(10, 14, 15), float64]) {
  %1360 = @func_1975() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1361 = @func_8083() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1362 = cast(%var_9579, dtype="uint16") /* ty=Tensor[(672), uint16] */;
  %1363 = cast(%var_9579, dtype="uint16") /* ty=Tensor[(672), uint16] */;
  %1364 = reshape(%1362, newshape=[8, 14, 6]) /* ty=Tensor[(8, 14, 6), uint16] */;
  %1365 = reshape(%1363, newshape=[8, 14, 6]) /* ty=Tensor[(8, 14, 6), uint16] */;
  %1366 = @func_7462(%1364, %1365) /* ty=(Tensor[(8, 14, 6), bool], Tensor[(15, 10, 3), float64], Tensor[(8, 7, 11), uint64], Tensor[(616), bool], Tensor[(15, 10, 3), float64]) */;
  %1367 = %1360.0;
  %1368 = @func_7485() /* ty=Tensor[(15, 10, 3), float64] */;
  %1369 = %1361.0;
  %1370 = @func_4340() /* ty=Tensor[(4, 9, 5), float32] */;
  %1371 = @func_2854() /* ty=Tensor[(4, 9, 5), float32] */;
  %1372 = %1366.1;
  %1373 = @func_5757() /* ty=Tensor[(10, 14, 15), float64] */;
  (%1367, %1368, %1369, %1370, %1371, %1372, %var_9579, %1373)
}

def @func_8331() -> (Tensor[(8, 13, 10), float32],) {
  %1374 = @func_3486() /* ty=Tensor[(8, 13, 10), float32] */;
  (%1374,)
}

def @func_1975() -> (Tensor[(15, 10, 3), float64],) {
  %1375 = @func_1726() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1376 = %1375.4;
  (%1376,)
}

def @func_19106() -> (Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1377 = @func_18648() /* ty=(Tensor[(60), float32], Tensor[(8, 13, 10), float32]) */;
  %1378 = @func_2977() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(280), int16]) */;
  %1379 = @func_796() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1380 = %1377.0;
  %1381 = %1378.1;
  %1382 = %1379.0;
  (%1380, %1381, %1382)
}

def @func_16333() -> (Tensor[(60), float32],) {
  %1383 = @func_13530() /* ty=(Tensor[(60), float32],) */;
  %1384 = %1383.0;
  (%1384,)
}

def @func_14005(%var_13979: Tensor[(540), uint8]) -> (Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool], Tensor[(540), uint8]) {
  %1385 = @func_8083() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1386 = @func_12640() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(1280, 11), uint8], Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64]) */;
  %1387 = cast(%var_13979, dtype="uint8") /* ty=Tensor[(540), uint8] */;
  %1388 = cast(%var_13979, dtype="uint8") /* ty=Tensor[(540), uint8] */;
  %1389 = reshape(%1387, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), uint8] */;
  %1390 = reshape(%1388, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), uint8] */;
  %1391 = @func_811(%1389, %1390) /* ty=(Tensor[(9, 10, 6), bool],) */;
  %1392 = %1385.0;
  %1393 = %1386.3;
  %1394 = %1391.0;
  (%1392, %1393, %1394, %var_13979)
}

def @func_16991() -> (Tensor[(4, 6, 7), float64], Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) {
  %1395 = @func_16629() /* ty=Tensor[(4, 6, 7), float32] */;
  %1396 = cast(%1395, dtype="float64") /* ty=Tensor[(4, 6, 7), float64] */;
  %1397 = @func_1726() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1398 = erf(%1396) /* ty=Tensor[(4, 6, 7), float64] */;
  %1399 = %1397.4;
  %1400 = @func_2726() /* ty=Tensor[(8, 13, 10), float32] */;
  (%1398, %1399, %1400)
}

def @func_1135(%var_1112: Tensor[(15, 10, 3), float64], %var_1118: Tensor[(15, 10, 3), bool]) -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), int32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1401 = @func_258() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1402 = @func_666() /* ty=Tensor[(15, 10, 3), float64] */;
  %1403 = cast(%var_1112, dtype="bool") /* ty=Tensor[(15, 10, 3), bool] */;
  %1404 = shape_of(%1402, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1405 = cast(%1402, dtype="bool") /* ty=Tensor[(15, 10, 3), bool] */;
  %1406 = dyn.reshape(%1403, %1404, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1407 = logical_or(%1405, %1406) /* ty=Tensor[(15, 10, 3), bool] */;
  %1408 = cast(%var_1118, dtype="int32") /* ty=Tensor[(15, 10, 3), int32] */;
  %1409 = shape_of(%1407, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1410 = cast(%1407, dtype="int32") /* ty=Tensor[(15, 10, 3), int32] */;
  %1411 = dyn.reshape(%1408, %1409, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1412 = @func_314() /* ty=Tensor[(15, 10, 3), float64] */;
  %1413 = %1401.1;
  %1414 = left_shift(%1410, %1411) /* ty=Tensor[(15, 10, 3), int32] */;
  %1415 = @func_666() /* ty=Tensor[(15, 10, 3), float64] */;
  %1416 = @func_666() /* ty=Tensor[(15, 10, 3), float64] */;
  (%1412, %1413, %1414, %1415, %1416)
}

def @func_13797(%var_13752: uint32) -> (Tensor[(3, 10, 1), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1417 = cast(%var_13752, dtype="bool") /* ty=bool */;
  %1418 = cast(meta[relay.Constant][46] /* ty=Tensor[(3, 10, 1), uint32] */, dtype="bool") /* ty=Tensor[(3, 10, 1), bool] */;
  %1419 = greater(%1417, %1418) /* ty=Tensor[(3, 10, 1), bool] */;
  %1420 = cast(%1419, dtype="float64") /* ty=Tensor[(3, 10, 1), float64] */;
  %1421 = tan(%1420) /* ty=Tensor[(3, 10, 1), float64] */;
  %1422 = @func_10607() /* ty=Tensor[(15, 10, 3), float64] */;
  %1423 = @func_9696() /* ty=Tensor[(15, 10, 3), float64] */;
  (%1421, %1422, %1423)
}

def @func_14620() -> Tensor[(15, 10, 3), float64] {
  %1424 = @func_9376() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */;
  %1424.0
}

def @func_2589() -> (Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) {
  %1425 = @func_314() /* ty=Tensor[(15, 10, 3), float64] */;
  %1426 = @func_2473() /* ty=Tensor[(9, 10, 6), bool] */;
  (%1425, %1426)
}

def @func_1726() -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1427 = @func_1579() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %1428 = @func_1501() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1429 = @func_796() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1430 = @func_666() /* ty=Tensor[(15, 10, 3), float64] */;
  %1431 = %1427.1;
  %1432 = @func_314() /* ty=Tensor[(15, 10, 3), float64] */;
  %1433 = %1428.0;
  %1434 = %1429.1;
  (%1430, %1431, %1432, %1433, %1434)
}

def @func_8194() -> (Tensor[(60), float32], Tensor[(280), int16], Tensor[(15, 10, 3), float64], Tensor[(5, 4, 14), float64], Tensor[(5, 4, 14), float64], Tensor[(280), int16]) {
  %1435 = @func_1383() /* ty=(Tensor[(60), float32],) */;
  %1436 = cast(meta[relay.Constant][47] /* ty=Tensor[(280), int16] */, dtype="int16") /* ty=Tensor[(280), int16] */;
  %1437 = cast(meta[relay.Constant][47] /* ty=Tensor[(280), int16] */, dtype="int16") /* ty=Tensor[(280), int16] */;
  %1438 = reshape(%1436, newshape=[5, 4, 14]) /* ty=Tensor[(5, 4, 14), int16] */;
  %1439 = reshape(%1437, newshape=[5, 4, 14]) /* ty=Tensor[(5, 4, 14), int16] */;
  %1440 = @func_2160(%1438, %1439) /* ty=Tensor[(5, 4, 14), int16] */;
  %1441 = cast(%1440, dtype="float64") /* ty=Tensor[(5, 4, 14), float64] */;
  %1442 = cast(%1440, dtype="float64") /* ty=Tensor[(5, 4, 14), float64] */;
  %1443 = cast(%1440, dtype="int16") /* ty=Tensor[(5, 4, 14), int16] */;
  %1444 = reshape(%1443, newshape=[280]) /* ty=Tensor[(280), int16] */;
  %1445 = @func_6931(%1444) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(280), int16], Tensor[(280), int16], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
  %1446 = %1435.0;
  %1447 = @func_1661() /* ty=Tensor[(15, 10, 3), float64] */;
  %1448 = atan(%1441) /* ty=Tensor[(5, 4, 14), float64] */;
  %1449 = sqrt(%1442) /* ty=Tensor[(5, 4, 14), float64] */;
  %1450 = %1445.1;
  (%1446, meta[relay.Constant][47] /* ty=Tensor[(280), int16] */, %1447, %1448, %1449, %1450)
}

def @func_8403() -> (Tensor[(8, 13, 10), float32], Tensor[(4, 9, 5), float32]) {
  %1451 = @func_6031() /* ty=(Tensor[(8, 13, 10), float32],) */;
  %1452 = %1451.0;
  %1453 = @func_4787() /* ty=Tensor[(4, 9, 5), float32] */;
  (%1452, %1453)
}

def @func_4607() -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), int32]) {
  %1454 = @func_3090() /* ty=(Tensor[(60), float32],) */;
  %1455 = @func_376() /* ty=Tensor[(15, 10, 3), float64] */;
  %1456 = cast(%1455, dtype="float64") /* ty=Tensor[(15, 10, 3), float64] */;
  %1457 = cast(%1455, dtype="bool") /* ty=Tensor[(15, 10, 3), bool] */;
  %1458 = reshape(%1456, newshape=[15, 10, 3]) /* ty=Tensor[(15, 10, 3), float64] */;
  %1459 = reshape(%1457, newshape=[15, 10, 3]) /* ty=Tensor[(15, 10, 3), bool] */;
  %1460 = @func_1135(%1458, %1459) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), int32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1461 = %1454.0;
  %1462 = %1460.2;
  (%1455, %1461, %1462)
}

def @func_11599() -> (Tensor[(15, 10, 3), float64], Tensor[(4, 9, 5), float32]) {
  %1463 = @func_5911() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32], Tensor[(60), float32]) */;
  %1464 = %1463.0;
  %1465 = @func_4787() /* ty=Tensor[(4, 9, 5), float32] */;
  (%1464, %1465)
}

def @func_19909() -> (Tensor[(15, 10, 3), float64],) {
  %1466 = @func_1726() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1467 = %1466.2;
  (%1467,)
}

def @func_11746() -> (Tensor[(15, 10, 3), float64],) {
  %1468 = @func_6555() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1469 = %1468.0;
  (%1469,)
}

def @func_21180() -> Tensor[(60), float32] {
  @func_2565() /* ty=Tensor[(60), float32] */
}

def @func_12769() -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(1040), float32], Tensor[(10, 14, 15), float64]) {
  %1470 = @func_1579() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %1471 = cast(meta[relay.Constant][48] /* ty=Tensor[(1040), float32] */, dtype="float32") /* ty=Tensor[(1040), float32] */;
  %1472 = reshape(%1471, newshape=[16, 5, 13]) /* ty=Tensor[(16, 5, 13), float32] */;
  %1473 = @func_5467(%1472) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1474 = %1470.0;
  %1475 = %1473.3;
  %1476 = @func_9085() /* ty=Tensor[(10, 14, 15), float64] */;
  (%1474, %1475, meta[relay.Constant][48] /* ty=Tensor[(1040), float32] */, %1476)
}

def @func_4927() -> Tensor[(15, 10, 3), float64] {
  %1477 = @func_796() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1477.1
}

def @func_14301() -> (Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) {
  %1478 = @func_9276() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1479 = @func_12640() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(1280, 11), uint8], Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64]) */;
  %1480 = %1478.0;
  %1481 = %1479.2;
  (%1480, %1481)
}

def @func_18753() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1482 = @func_13275() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1483 = @func_6959() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %1484 = %1482.0;
  %1485 = %1483.0;
  %1486 = @func_588() /* ty=Tensor[(15, 10, 3), float64] */;
  (%1484, %1485, %1486)
}

def @func_2726() -> Tensor[(8, 13, 10), float32] {
  %1487 = cast(meta[relay.Constant][49] /* ty=Tensor[(8, 13, 10), float32] */, dtype="float32") /* ty=Tensor[(8, 13, 10), float32] */;
  erf(%1487) /* ty=Tensor[(8, 13, 10), float32] */
}

def @func_2876(%var_2871: Tensor[(13, 5, 12), int64], %var_2872: Tensor[(13, 5, 12), int64]) -> Tensor[(13, 5, 12), bool] {
  %1488 = cast(%var_2872, dtype="bool") /* ty=Tensor[(13, 5, 12), bool] */;
  %1489 = shape_of(%var_2871, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1490 = cast(%var_2871, dtype="bool") /* ty=Tensor[(13, 5, 12), bool] */;
  %1491 = dyn.reshape(%1488, %1489, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%1490, %1491) /* ty=Tensor[(13, 5, 12), bool] */
}

def @func_7305() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1492 = @func_7091() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) */;
  %1493 = @func_6711() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1494 = %1492.0;
  %1495 = %1493.0;
  (%1494, %1495)
}

def @func_10997(%var_10991: Tensor[(990), int8], %var_10992: Tensor[(144), float32]) -> (Tensor[(15, 10, 3), float64], Tensor[(10, 14, 15), float64], Tensor[(144), float32], Tensor[(990), int8], Tensor[(144), float32]) {
  %1496 = @func_5911() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32], Tensor[(60), float32]) */;
  %1497 = @func_8001() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(10, 14, 15), float64], Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64]) */;
  %1498 = cast(%var_10991, dtype="int8") /* ty=Tensor[(990), int8] */;
  %1499 = cast(%var_10991, dtype="int8") /* ty=Tensor[(990), int8] */;
  %1500 = cast(%var_10992, dtype="float32") /* ty=Tensor[(144), float32] */;
  %1501 = reshape(%1498, newshape=[9, 10, 11]) /* ty=Tensor[(9, 10, 11), int8] */;
  %1502 = reshape(%1499, newshape=[9, 10, 11]) /* ty=Tensor[(9, 10, 11), int8] */;
  %1503 = reshape(%1500, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %1504 = @func_9223(%1501, %1502, %1503) /* ty=(Tensor[(9, 10, 11), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(2, 12, 6), float32], float32, Tensor[(144), float32]) */;
  %1505 = %1496.1;
  %1506 = %1497.1;
  %1507 = %1504.5;
  (%1505, %1506, %1507, %var_10991, %var_10992)
}

def @func_6673() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32]) {
  %1508 = @func_4739() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1509 = @func_2036() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1510 = @func_1181() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1511 = cast(meta[relay.Constant][50] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %1512 = reshape(%1511, newshape=[60, 1]) /* ty=Tensor[(60, 1), float32] */;
  %1513 = @func_3455(%1512) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60, ?), bool]) */;
  %1514 = %1508.0;
  %1515 = %1509.0;
  %1516 = %1510.0;
  %1517 = %1513.0;
  (%1514, %1515, %1516, %1517, meta[relay.Constant][50] /* ty=Tensor[(60), float32] */)
}

def @func_14910() -> (Tensor[(10, 14, 15), float64], Tensor[(8, 13, 10), float32], Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64]) {
  %1518 = @func_6031() /* ty=(Tensor[(8, 13, 10), float32],) */;
  %1519 = @func_3769() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */;
  %1520 = @func_12353() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1521 = @func_9085() /* ty=Tensor[(10, 14, 15), float64] */;
  %1522 = %1518.0;
  %1523 = %1519.1;
  %1524 = %1520.0;
  (%1521, %1522, %1523, %1524)
}

def @func_17727() -> Tensor[(15, 10, 3), float64] {
  %1525 = @func_8667() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1525.0
}

def @func_4045() -> (Tensor[(15, 10, 3), float64],) {
  %1526 = @func_300() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1527 = %1526.0;
  (%1527,)
}

def @func_1396() -> (Tensor[(15, 10, 3), float64],) {
  %1528 = @func_376() /* ty=Tensor[(15, 10, 3), float64] */;
  (%1528,)
}

def @func_11942() -> (Tensor[(15, 10, 3), float64], Tensor[(60, ?), bool], Tensor[(60), float32]) {
  %1529 = cast(meta[relay.Constant][51] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %1530 = reshape(%1529, newshape=[60, 1]) /* ty=Tensor[(60, 1), float32] */;
  %1531 = @func_3455(%1530) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60, ?), bool]) */;
  %1532 = @func_7485() /* ty=Tensor[(15, 10, 3), float64] */;
  %1533 = %1531.1;
  (%1532, %1533, meta[relay.Constant][51] /* ty=Tensor[(60), float32] */)
}

def @func_6111() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1534 = @func_796() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1535 = @func_1879() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1536 = @func_2198() /* ty=Tensor[(15, 10, 3), float64] */;
  %1537 = %1534.1;
  %1538 = %1535.0;
  (%1536, %1537, %1538)
}

def @func_10707() -> Tensor[(60), float32] {
  %1539 = @func_3105() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
  %1539.1
}

def @func_11016() -> (Tensor[(15, 10, 3), float64],) {
  %1540 = @func_376() /* ty=Tensor[(15, 10, 3), float64] */;
  (%1540,)
}

def @func_6868() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1541 = @func_2464() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool], Tensor[(1, 540), uint8], Tensor[(15, 10, 3), float64]) */;
  %1542 = @func_1791() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %1543 = %1542.0;
  %1544 = cast(%1543, dtype="float64") /* ty=Tensor[(15, 10, 3), float64] */;
  %1545 = cast(%1543, dtype="bool") /* ty=Tensor[(15, 10, 3), bool] */;
  %1546 = reshape(%1544, newshape=[15, 10, 3]) /* ty=Tensor[(15, 10, 3), float64] */;
  %1547 = reshape(%1545, newshape=[15, 10, 3]) /* ty=Tensor[(15, 10, 3), bool] */;
  %1548 = @func_1135(%1546, %1547) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), int32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1549 = %1541.3;
  %1550 = %1548.0;
  %1551 = @func_376() /* ty=Tensor[(15, 10, 3), float64] */;
  %1552 = @func_2198() /* ty=Tensor[(15, 10, 3), float64] */;
  (%1549, %1543, %1550, %1551, %1552)
}

def @func_19890() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1553 = @func_2844() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1554 = %1553.0;
  %1555 = @func_7526() /* ty=Tensor[(15, 10, 3), float64] */;
  (%1554, %1555)
}

def @func_10361(%var_10346: Tensor[(12, 14, 4), float32], %var_10347: Tensor[(12, 14, 4), float32]) -> Tensor[(12, 14, 4), float32] {
  %1556 = cast(%var_10347, dtype="float32") /* ty=Tensor[(12, 14, 4), float32] */;
  %1557 = shape_of(%var_10346, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1558 = cast(%var_10346, dtype="float32") /* ty=Tensor[(12, 14, 4), float32] */;
  %1559 = dyn.reshape(%1556, %1557, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  divide(%1558, %1559) /* ty=Tensor[(12, 14, 4), float32] */
}

def @func_20599() -> (Tensor[(15, 10, 3), float64],) {
  %1560 = @func_666() /* ty=Tensor[(15, 10, 3), float64] */;
  (%1560,)
}

def @func_2659() -> Tensor[(15, 10, 3), uint64] {
  %1561 = @func_1641() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), uint64]) */;
  %1561.1
}

def @func_9085() -> Tensor[(10, 14, 15), float64] {
  @func_5757() /* ty=Tensor[(10, 14, 15), float64] */
}

def @func_10298() -> (Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) {
  %1562 = @func_3869() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */;
  %1563 = @func_3540() /* ty=Tensor[(15, 10, 3), float64] */;
  %1564 = %1562.2;
  (%1563, %1564)
}

def @func_17338() -> Tensor[(15, 10, 3), uint64] {
  %1565 = @func_4031() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), uint64]) */;
  %1565.1
}

def @func_12890() -> (Tensor[(60), float32], Tensor[(15, 10, 3), float64]) {
  %1566 = @func_3329() /* ty=(Tensor[(60), float32],) */;
  %1567 = @func_6832() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */;
  %1568 = %1566.0;
  %1569 = %1567.1;
  (%1568, %1569)
}

def @func_15478() -> (Tensor[(10, 16, 8), int16], Tensor[(60), float32]) {
  %1570 = @func_6323() /* ty=(Tensor[(4, 9, 5), float32], Tensor[(60), float32], Tensor[(10, 16, 8), int16], Tensor[(1280, 1), int64], Tensor[(60), float32]) */;
  %1571 = %1570.2;
  %1572 = @func_10707() /* ty=Tensor[(60), float32] */;
  (%1571, %1572)
}

def @func_13659() -> (Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64]) {
  %1573 = @func_9376() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */;
  %1574 = @func_4133() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(450), float64], Tensor[(15, 10, 3), float64]) */;
  %1575 = %1573.1;
  %1576 = %1574.3;
  (%1575, %1576)
}

def @func_18204() -> (Tensor[(15, 10, 3), float64],) {
  %1577 = @func_10878() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(4, 9, 5), float32], Tensor[(15, 10, 3), float64]) */;
  %1578 = %1577.2;
  (%1578,)
}

def @func_16629() -> Tensor[(4, 6, 7), float32] {
  %1579 = cast(meta[relay.Constant][52] /* ty=Tensor[(4, 6, 7), float32] */, dtype="float32") /* ty=Tensor[(4, 6, 7), float32] */;
  asin(%1579) /* ty=Tensor[(4, 6, 7), float32] */
}

def @func_7141() -> (Tensor[(9, 10, 6), bool], Tensor[(60), float32]) {
  %1580 = @func_887() /* ty=(Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
  %1581 = @func_2473() /* ty=Tensor[(9, 10, 6), bool] */;
  %1582 = %1580.2;
  (%1581, %1582)
}

def @func_8001() -> (Tensor[(15, 10, 3), float64], Tensor[(10, 14, 15), float64], Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64]) {
  %1583 = @func_1305() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1584 = @func_3869() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */;
  %1585 = @func_5967() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1586 = %1583.0;
  %1587 = @func_5757() /* ty=Tensor[(10, 14, 15), float64] */;
  %1588 = %1584.2;
  %1589 = %1585.0;
  (%1586, %1587, %1588, %1589)
}

def @func_5662() -> (Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64], Tensor[(60), float32]) {
  %1590 = @func_4315() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */;
  %1591 = @func_1879() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1592 = @func_1383() /* ty=(Tensor[(60), float32],) */;
  %1593 = %1590.1;
  %1594 = %1591.0;
  %1595 = %1592.0;
  (%1593, %1594, %1595)
}

def @func_18402() -> Tensor[(15, 10, 3), float64] {
  %1596 = @func_8023() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1596.1
}

def @func_2198() -> Tensor[(15, 10, 3), float64] {
  %1597 = @func_1396() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1597.0
}

def @func_1541() -> (Tensor[(60), float32],) {
  %1598 = @func_1383() /* ty=(Tensor[(60), float32],) */;
  %1599 = %1598.0;
  (%1599,)
}

def @func_6959() -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32]) {
  %1600 = @func_5399() /* ty=(Tensor[(60), float32],) */;
  %1601 = @func_2130() /* ty=Tensor[(15, 10, 3), float64] */;
  %1602 = %1600.0;
  (%1601, %1602)
}

def @func_12963() -> (Tensor[(15, 10, 3), float64],) {
  %1603 = @func_376() /* ty=Tensor[(15, 10, 3), float64] */;
  (%1603,)
}

def @func_655(%var_634: Tensor[(60, 1), float32]) -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60, 1), float32]) {
  %1604 = @func_167() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1605 = @func_359() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1606 = @func_167() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1607 = cast(%var_634, dtype="float32") /* ty=Tensor[(60, 1), float32] */;
  %1608 = reshape(%1607, newshape=[5, 12, 1]) /* ty=Tensor[(5, 12, 1), float32] */;
  %1609 = @func_484(%1608) /* ty=(Tensor[(5, 12, 1), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1610 = %1604.0;
  %1611 = %1605.2;
  %1612 = %1606.0;
  %1613 = %1609.2;
  (%1610, %1611, %1612, %1613, %var_634)
}

def @func_2036() -> (Tensor[(15, 10, 3), float64],) {
  %1614 = @func_198() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1615 = %1614.0;
  %1616 = cast(%1615, dtype="float64") /* ty=Tensor[(15, 10, 3), float64] */;
  %1617 = cos(%1616) /* ty=Tensor[(15, 10, 3), float64] */;
  (%1617,)
}

def @func_5358() -> (Tensor[(60), float32], Tensor[(9, 10, 6), bool]) {
  %1618 = @func_4031() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), uint64]) */;
  %1619 = %1618.0;
  %1620 = @func_2473() /* ty=Tensor[(9, 10, 6), bool] */;
  (%1619, %1620)
}

def @func_5967() -> (Tensor[(15, 10, 3), float64],) {
  %1621 = @func_1305() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1622 = %1621.2;
  (%1622,)
}

def @func_10410() -> Tensor[(15, 10, 3), float64] {
  %1623 = @func_5110() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1623.0
}

def @func_7691(%var_7669: Tensor[(3, 11, 14), float64]) -> (Tensor[(3, 11, 14), float64], Tensor[(60), float32]) {
  %1624 = cast(%var_7669, dtype="float64") /* ty=Tensor[(3, 11, 14), float64] */;
  %1625 = @func_3090() /* ty=(Tensor[(60), float32],) */;
  %1626 = acos(%1624) /* ty=Tensor[(3, 11, 14), float64] */;
  %1627 = %1625.0;
  (%1626, %1627)
}

def @func_8992(%var_8985: Tensor[(9, 8, 14), float64]) -> (Tensor[(9, 8, 14), float64], Tensor[(15, 10, 3), float64]) {
  %1628 = cast(%var_8985, dtype="float64") /* ty=Tensor[(9, 8, 14), float64] */;
  %1629 = @func_1579() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %1630 = acos(%1628) /* ty=Tensor[(9, 8, 14), float64] */;
  %1631 = %1629.0;
  (%1630, %1631)
}

def @func_2284() -> Tensor[(60), float32] {
  %1632 = @func_1791() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %1632.1
}

def @func_20307() -> Tensor[(60), float32] {
  %1633 = @func_14609() /* ty=(Tensor[(60), float32],) */;
  %1633.0
}

def @func_4547() -> (Tensor[(15, 10, 3), float64],) {
  %1634 = @func_588() /* ty=Tensor[(15, 10, 3), float64] */;
  (%1634,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_4549() -> (Tensor[(15, 10, 3), float64],) {
  @func_4547() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_16726() -> (Tensor[(15, 10, 3), float64], Tensor[(1280, 12), int8], Tensor[(4, 9, 5), float32]) {
  @func_16724() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(1280, 12), int8], Tensor[(4, 9, 5), float32]) */
}

def @func_10496() -> (Tensor[(10, 14, 15), float64],) {
  %0 = @func_9085() /* ty=Tensor[(10, 14, 15), float64] */;
  (%0,)
}

def @func_8083() -> (Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1 = @func_1726() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %2 = @func_6555() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %3 = %1.1;
  %4 = @func_314() /* ty=Tensor[(15, 10, 3), float64] */;
  %5 = %2.0;
  (%3, %4, %5)
}

def @func_20386(%var_20384: Tensor[(324), float32]) -> (Tensor[(60), float32], Tensor[(324), float32], Tensor[(3, 12, 9), float64]) {
  @func_20383(%var_20384) /* ty=(Tensor[(60), float32], Tensor[(324), float32], Tensor[(3, 12, 9), float64]) */
}

def @func_14280() -> (Tensor[(10, 14, 15), float64],) {
  @func_14278() /* ty=(Tensor[(10, 14, 15), float64],) */
}

def @func_11404() -> (Tensor[(4, 9, 5), float32],) {
  %8 = fn () -> (Tensor[(4, 9, 5), float32],) {
    %6 = @func_7783() /* ty=(Tensor[(4, 9, 5), float32], Tensor[(4, 9, 5), float32]) */;
    %7 = %6.1;
    (%7,)
  };
  %8() /* ty=(Tensor[(4, 9, 5), float32],) */
}

def @func_7306() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %13 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
    %9 = @func_7091() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) */;
    %10 = @func_6711() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %11 = %9.0;
    %12 = %10.0;
    (%11, %12)
  };
  %13() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_13626() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %14 = @func_300() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %15 = @func_3540() /* ty=Tensor[(15, 10, 3), float64] */;
  %16 = %14.1;
  (%15, %16)
}

def @func_7883() -> (Tensor[(15, 10, 3), float64],) {
  @func_7881() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_14611() -> (Tensor[(60), float32],) {
  @func_14609() /* ty=(Tensor[(60), float32],) */
}

def @func_12464(%var_12462: Tensor[(520), uint16]) -> (Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(4, 10, 13), bool], Tensor[(520), uint16]) {
  @func_12461(%var_12462) /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(4, 10, 13), bool], Tensor[(520), uint16]) */
}

def @func_13001() -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32]) {
  %17 = @func_1501() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %18 = @func_5068() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
  %19 = %17.0;
  %20 = %18.0;
  (%19, %20)
}

def @func_16839() -> (Tensor[(15, 10, 3), uint64], Tensor[(15, 10, 3), float64]) {
  %24 = fn () -> (Tensor[(15, 10, 3), uint64], Tensor[(15, 10, 3), float64]) {
    %21 = @func_1305() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %22 = @func_2659() /* ty=Tensor[(15, 10, 3), uint64] */;
    %23 = %21.2;
    (%22, %23)
  };
  %24() /* ty=(Tensor[(15, 10, 3), uint64], Tensor[(15, 10, 3), float64]) */
}

def @func_19890() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %25 = @func_2844() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %26 = %25.0;
  %27 = @func_7526() /* ty=Tensor[(15, 10, 3), float64] */;
  (%26, %27)
}

def @func_10674() -> Tensor[(10, 14, 15), float64] {
  %29 = fn () -> Tensor[(10, 14, 15), float64] {
    %28 = @func_10496() /* ty=(Tensor[(10, 14, 15), float64],) */;
    %28.0
  };
  %29() /* ty=Tensor[(10, 14, 15), float64] */
}

def @func_15396() -> (Tensor[(60), float32],) {
  @func_15394() /* ty=(Tensor[(60), float32],) */
}

def @func_6555() -> (Tensor[(15, 10, 3), float64],) {
  %30 = @func_5911() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32], Tensor[(60), float32]) */;
  %31 = %30.1;
  (%31,)
}

def @func_6905() -> (Tensor[(15, 10, 3), float64],) {
  %34 = fn () -> (Tensor[(15, 10, 3), float64],) {
    %32 = @func_2827() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60, 1), float32], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
    %33 = %32.0;
    (%33,)
  };
  %34() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_19683(%var_19675: Tensor[(9, 5, 16), float64]) -> (Tensor[(9, 5, 16), float64],) {
  %35 = cast(%var_19675, dtype="float64") /* ty=Tensor[(9, 5, 16), float64] */;
  %36 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(9, 5, 16), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %37 = cast(meta[relay.Constant][0] /* ty=Tensor[(9, 5, 16), float64] */, dtype="float64") /* ty=Tensor[(9, 5, 16), float64] */;
  %38 = dyn.reshape(%35, %36, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %39 = mod(%37, %38) /* ty=Tensor[(9, 5, 16), float64] */;
  %40 = cast(%39, dtype="float64") /* ty=Tensor[(9, 5, 16), float64] */;
  %41 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(9, 5, 16), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %42 = cast(meta[relay.Constant][0] /* ty=Tensor[(9, 5, 16), float64] */, dtype="float64") /* ty=Tensor[(9, 5, 16), float64] */;
  %43 = dyn.reshape(%40, %41, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %44 = floor_divide(%42, %43) /* ty=Tensor[(9, 5, 16), float64] */;
  (%44,)
}

def @func_2880(%var_2878: Tensor[(13, 5, 12), int64], %var_2879: Tensor[(13, 5, 12), int64]) -> Tensor[(13, 5, 12), bool] {
  @func_2876(%var_2878, %var_2879) /* ty=Tensor[(13, 5, 12), bool] */
}

def @func_11900() -> (Tensor[(15, 10, 3), float64], Tensor[(4, 9, 5), float32]) {
  %48 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(4, 9, 5), float32]) {
    %45 = @func_4162() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %46 = %45.0;
    %47 = @func_4340() /* ty=Tensor[(4, 9, 5), float32] */;
    (%46, %47)
  };
  %48() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(4, 9, 5), float32]) */
}

def @func_4401() -> Tensor[(15, 10, 3), float64] {
  @func_4399() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_21075(%var_21073: Tensor[(1320), float64]) -> (Tensor[(9, 10, 6), bool], Tensor[(12, 11, 10), float64], Tensor[(1320), float64], Tensor[(15, 10, 3), float64]) {
  @func_21072(%var_21073) /* ty=(Tensor[(9, 10, 6), bool], Tensor[(12, 11, 10), float64], Tensor[(1320), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_2876(%var_2871: Tensor[(13, 5, 12), int64], %var_2872: Tensor[(13, 5, 12), int64]) -> Tensor[(13, 5, 12), bool] {
  %49 = cast(%var_2872, dtype="bool") /* ty=Tensor[(13, 5, 12), bool] */;
  %50 = shape_of(%var_2871, dtype="int32") /* ty=Tensor[(3), int32] */;
  %51 = cast(%var_2871, dtype="bool") /* ty=Tensor[(13, 5, 12), bool] */;
  %52 = dyn.reshape(%49, %50, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%51, %52) /* ty=Tensor[(13, 5, 12), bool] */
}

def @func_8242() -> Tensor[(4, 9, 5), float32] {
  @func_8240() /* ty=Tensor[(4, 9, 5), float32] */
}

def @func_13130(%var_13128: Tensor[(12, 11, 10), float64]) -> (Tensor[(12, 11, 10), float64],) {
  @func_13127(%var_13128) /* ty=(Tensor[(12, 11, 10), float64],) */
}

def @func_17451() -> (Tensor[(4, 9, 5), float32], Tensor[(8, 13, 10), float32]) {
  @func_17449() /* ty=(Tensor[(4, 9, 5), float32], Tensor[(8, 13, 10), float32]) */
}

def @func_2164(%var_2162: Tensor[(5, 4, 14), int16], %var_2163: Tensor[(5, 4, 14), int16]) -> Tensor[(5, 4, 14), int16] {
  @func_2160(%var_2162, %var_2163) /* ty=Tensor[(5, 4, 14), int16] */
}

def @func_1793() -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32]) {
  @func_1791() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */
}

def @func_15067() -> (Tensor[(15, 10, 3), float64], Tensor[(10, 14, 15), float64]) {
  @func_15065() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(10, 14, 15), float64]) */
}

def @func_4740() -> (Tensor[(15, 10, 3), float64],) {
  %55 = fn () -> (Tensor[(15, 10, 3), float64],) {
    %53 = @func_3415() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64]) */;
    %54 = %53.1;
    (%54,)
  };
  %55() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_6834() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) {
  @func_6832() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */
}

def @func_11177() -> (Tensor[(60), float32],) {
  @func_11175() /* ty=(Tensor[(60), float32],) */
}

def @func_11756() -> (Tensor[(15, 10, 3), float64],) {
  @func_11754() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_939() -> Tensor[(15, 10, 3), float64] {
  @func_937() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_1138(%var_1136: Tensor[(15, 10, 3), float64], %var_1137: Tensor[(15, 10, 3), bool]) -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), int32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %72 = fn (%var_1112: Tensor[(15, 10, 3), float64], %var_1118: Tensor[(15, 10, 3), bool]) -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), int32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
    %56 = @func_258() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %57 = @func_666() /* ty=Tensor[(15, 10, 3), float64] */;
    %58 = cast(%var_1112, dtype="bool") /* ty=Tensor[(15, 10, 3), bool] */;
    %59 = shape_of(%57, dtype="int32") /* ty=Tensor[(3), int32] */;
    %60 = cast(%57, dtype="bool") /* ty=Tensor[(15, 10, 3), bool] */;
    %61 = dyn.reshape(%58, %59, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %62 = logical_or(%60, %61) /* ty=Tensor[(15, 10, 3), bool] */;
    %63 = cast(%var_1118, dtype="int32") /* ty=Tensor[(15, 10, 3), int32] */;
    %64 = shape_of(%62, dtype="int32") /* ty=Tensor[(3), int32] */;
    %65 = cast(%62, dtype="int32") /* ty=Tensor[(15, 10, 3), int32] */;
    %66 = dyn.reshape(%63, %64, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %67 = @func_314() /* ty=Tensor[(15, 10, 3), float64] */;
    %68 = %56.1;
    %69 = left_shift(%65, %66) /* ty=Tensor[(15, 10, 3), int32] */;
    %70 = @func_666() /* ty=Tensor[(15, 10, 3), float64] */;
    %71 = @func_666() /* ty=Tensor[(15, 10, 3), float64] */;
    (%67, %68, %69, %70, %71)
  };
  %72(%var_1136, %var_1137) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), int32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_1661() -> Tensor[(15, 10, 3), float64] {
  %73 = @func_1641() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), uint64]) */;
  %73.0
}

def @func_3770() -> (Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) {
  %77 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) {
    %74 = @func_731() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %75 = %74.0;
    %76 = @func_2726() /* ty=Tensor[(8, 13, 10), float32] */;
    (%75, %76)
  };
  %77() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */
}

def @func_1502() -> (Tensor[(15, 10, 3), float64],) {
  %80 = fn () -> (Tensor[(15, 10, 3), float64],) {
    %78 = @func_1495() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %79 = %78.0;
    (%79,)
  };
  %80() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_1541() -> (Tensor[(60), float32],) {
  %81 = @func_1383() /* ty=(Tensor[(60), float32],) */;
  %82 = %81.0;
  (%82,)
}

def @func_667() -> Tensor[(15, 10, 3), float64] {
  %83 = fn () -> Tensor[(15, 10, 3), float64] {
    @func_376() /* ty=Tensor[(15, 10, 3), float64] */
  };
  %83() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_15176() -> (Tensor[(15, 10, 3), float64],) {
  %84 = @func_1495() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %85 = %84.0;
  (%85,)
}

def @func_5699() -> (Tensor[(60), float32], Tensor[(15, 10, 3), float64]) {
  %88 = fn () -> (Tensor[(60), float32], Tensor[(15, 10, 3), float64]) {
    %86 = @func_2284() /* ty=Tensor[(60), float32] */;
    %87 = @func_937() /* ty=Tensor[(15, 10, 3), float64] */;
    (%86, %87)
  };
  %88() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */
}

def @func_12156() -> (Tensor[(15, 10, 3), float64],) {
  %91 = fn () -> (Tensor[(15, 10, 3), float64],) {
    %89 = @func_4315() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */;
    %90 = %89.0;
    (%90,)
  };
  %91() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_1949() -> (Tensor[(9, 10, 6), bool],) {
  @func_1947() /* ty=(Tensor[(9, 10, 6), bool],) */
}

def @func_1543() -> (Tensor[(60), float32],) {
  @func_1541() /* ty=(Tensor[(60), float32],) */
}

def @func_1579() -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32]) {
  %92 = @func_258() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %93 = @func_1541() /* ty=(Tensor[(60), float32],) */;
  %94 = %92.3;
  %95 = %93.0;
  (%94, %95)
}

def @func_5804(%var_5794: Tensor[(60), float32]) -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32]) {
  %96 = @func_1501() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %97 = cast(%var_5794, dtype="float32") /* ty=Tensor[(60), float32] */;
  %98 = reshape(%97, newshape=[3, 20]) /* ty=Tensor[(3, 20), float32] */;
  %99 = @func_718(%98) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(3, 20), float32]) */;
  %100 = %96.0;
  %101 = %99.1;
  (%100, %101, %var_5794)
}

def @func_19892() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  @func_19890() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_12954() -> Tensor[(15, 10, 3), float64] {
  %103 = fn () -> Tensor[(15, 10, 3), float64] {
    %102 = @func_9436() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %102.0
  };
  %103() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_13487() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %108 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
    %104 = @func_198() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %105 = @func_5911() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32], Tensor[(60), float32]) */;
    %106 = %104.0;
    %107 = %105.1;
    (%106, %107)
  };
  %108() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_2828() -> (Tensor[(15, 10, 3), float64], Tensor[(60, 1), float32], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) {
  %116 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(60, 1), float32], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) {
    %109 = @func_300() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %110 = cast(meta[relay.Constant][1] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
    %111 = reshape(%110, newshape=[60, 1]) /* ty=Tensor[(60, 1), float32] */;
    %112 = @func_655(%111) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60, 1), float32]) */;
    %113 = %109.1;
    %114 = %112.4;
    %115 = @func_1661() /* ty=Tensor[(15, 10, 3), float64] */;
    (%113, %114, meta[relay.Constant][1] /* ty=Tensor[(60), float32] */, %115)
  };
  %116() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60, 1), float32], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */
}

def @func_797() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %121 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
    %117 = @func_359() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %118 = @func_731() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %119 = %117.1;
    %120 = %118.0;
    (%119, %120)
  };
  %121() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_3455(%var_3438: Tensor[(60, 1), float32]) -> (Tensor[(15, 10, 3), float64], Tensor[(60, ?), bool]) {
  %122 = cast(%var_3438, dtype="float32") /* ty=Tensor[(60, 1), float32] */;
  %123 = reshape(%122, newshape=[3, 20]) /* ty=Tensor[(3, 20), float32] */;
  %124 = @func_2269(%123) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(3, 20), float32], Tensor[(60), float32]) */;
  %125 = %124.3;
  %126 = cast(%125, dtype="bool") /* ty=Tensor[(60), bool] */;
  %127 = shape_of(%var_3438, dtype="int32") /* ty=Tensor[(2), int32] */;
  %128 = cast(%var_3438, dtype="bool") /* ty=Tensor[(60, 1), bool] */;
  %129 = dyn.reshape(%126, %127, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %130 = @func_588() /* ty=Tensor[(15, 10, 3), float64] */;
  %131 = logical_and(%128, %129) /* ty=Tensor[(60, ?), bool] */;
  (%130, %131)
}

def @func_3416() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64]) {
  %140 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64]) {
    %132 = @func_887() /* ty=(Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
    %133 = @func_2479() /* ty=Tensor[(15, 10, 3), float64] */;
    %134 = cast(%133, dtype="float32") /* ty=Tensor[(15, 10, 3), float32] */;
    %135 = @func_300() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %136 = %132.1;
    %137 = @func_2198() /* ty=Tensor[(15, 10, 3), float64] */;
    %138 = log10(%134) /* ty=Tensor[(15, 10, 3), float32] */;
    %139 = %135.1;
    (%136, %137, %138, %139)
  };
  %140() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64]) */
}

def @func_14697() -> (Tensor[(15, 10, 3), float64], Tensor[(4, 9, 5), float32]) {
  @func_14695() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(4, 9, 5), float32]) */
}

def @func_11529() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  @func_11527() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_16570() -> (Tensor[(9, 10, 6), bool], Tensor[(15, 10, 3), float64]) {
  %144 = fn () -> (Tensor[(9, 10, 6), bool], Tensor[(15, 10, 3), float64]) {
    %141 = @func_2589() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) */;
    %142 = %141.1;
    %143 = @func_4149() /* ty=Tensor[(15, 10, 3), float64] */;
    (%142, %143)
  };
  %144() /* ty=(Tensor[(9, 10, 6), bool], Tensor[(15, 10, 3), float64]) */
}

def @func_18139() -> (Tensor[(10, 14, 15), float64], Tensor[(2, 4, 12), float64], Tensor[(1, 297), bool], Tensor[(96), float64], Tensor[(60), float32], Tensor[(520), uint16], Tensor[(15, 10, 3), float64]) {
  %145 = @func_12517() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(10, 14, 15), float64]) */;
  %146 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 297), bool] */, dtype="bool") /* ty=Tensor[(1, 297), bool] */;
  %147 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 297), bool] */, dtype="bool") /* ty=Tensor[(1, 297), bool] */;
  %148 = cast(meta[relay.Constant][3] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %149 = reshape(%146, newshape=[11, 3, 9]) /* ty=Tensor[(11, 3, 9), bool] */;
  %150 = reshape(%147, newshape=[11, 3, 9]) /* ty=Tensor[(11, 3, 9), bool] */;
  %151 = reshape(%148, newshape=[96]) /* ty=Tensor[(96), float64] */;
  %152 = @func_8865(%149, %150, %151) /* ty=(Tensor[(11, 3, 9), bool], Tensor[(2, 4, 12), float64], Tensor[(96), float64]) */;
  %153 = cast(meta[relay.Constant][4] /* ty=Tensor[(520), uint16] */, dtype="uint16") /* ty=Tensor[(520), uint16] */;
  %154 = reshape(%153, newshape=[520]) /* ty=Tensor[(520), uint16] */;
  %155 = @func_12461(%154) /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(4, 10, 13), bool], Tensor[(520), uint16]) */;
  %156 = @func_14434() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32], Tensor[(60), float32]) */;
  %157 = %145.1;
  %158 = %152.1;
  %159 = %155.0;
  %160 = %156.0;
  (%157, %158, meta[relay.Constant][2] /* ty=Tensor[(1, 297), bool] */, meta[relay.Constant][3] /* ty=Tensor[(96), float64] */, %159, meta[relay.Constant][4] /* ty=Tensor[(520), uint16] */, %160)
}

def @func_6959() -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32]) {
  %161 = @func_5399() /* ty=(Tensor[(60), float32],) */;
  %162 = @func_2130() /* ty=Tensor[(15, 10, 3), float64] */;
  %163 = %161.0;
  (%162, %163)
}

def @func_11317() -> Tensor[(15, 10, 3), float64] {
  @func_11315() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_11374(%var_11365: Tensor[(462), float64]) -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(462), float64], Tensor[(15, 10, 3), float64]) {
  %164 = @func_3155() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool], Tensor[(15, 10, 3), float64]) */;
  %165 = @func_3415() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64]) */;
  %166 = @func_4547() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %167 = @func_8613() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32]) */;
  %168 = cast(%var_11365, dtype="float64") /* ty=Tensor[(462), float64] */;
  %169 = reshape(%168, newshape=[3, 11, 14]) /* ty=Tensor[(3, 11, 14), float64] */;
  %170 = @func_7691(%169) /* ty=(Tensor[(3, 11, 14), float64], Tensor[(60), float32]) */;
  %171 = %164.2;
  %172 = %165.3;
  %173 = %166.0;
  %174 = %167.2;
  %175 = %170.1;
  %176 = @func_11102() /* ty=Tensor[(15, 10, 3), float64] */;
  (%171, %172, %173, %174, %175, %var_11365, %176)
}

def @func_2728() -> Tensor[(8, 13, 10), float32] {
  @func_2726() /* ty=Tensor[(8, 13, 10), float32] */
}

def @func_10708() -> Tensor[(60), float32] {
  %178 = fn () -> Tensor[(60), float32] {
    %177 = @func_3105() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
    %177.1
  };
  %178() /* ty=Tensor[(60), float32] */
}

def @func_20037() -> (Tensor[(15, 10, 3), float64], Tensor[(7, 3, 11), float64]) {
  %183 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(7, 3, 11), float64]) {
    %179 = @func_6233() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %180 = @func_18331() /* ty=(Tensor[(7, 3, 11), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %181 = %179.0;
    %182 = %180.0;
    (%181, %182)
  };
  %183() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(7, 3, 11), float64]) */
}

def @func_17970(%var_17943: int8, %var_17944: Tensor[(1, 4, 16), int8], %var_17960: Tensor[(462), float64]) -> (Tensor[(1, 4, 16), int8], Tensor[(15, 10, 3), float64], Tensor[(462), float64]) {
  %184 = cast(%var_17943, dtype="int8") /* ty=int8 */;
  %185 = cast(%var_17944, dtype="int8") /* ty=Tensor[(1, 4, 16), int8] */;
  %186 = cast(%var_17960, dtype="float64") /* ty=Tensor[(462), float64] */;
  %187 = reshape(%186, newshape=[462]) /* ty=Tensor[(462), float64] */;
  %188 = @func_11374(%187) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(462), float64], Tensor[(15, 10, 3), float64]) */;
  %189 = subtract(%184, %185) /* ty=Tensor[(1, 4, 16), int8] */;
  %190 = %188.6;
  (%189, %190, %var_17960)
}

def @func_10736() -> Tensor[(15, 10, 3), float64] {
  @func_10734() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_14362() -> Tensor[(15, 10, 3), float64] {
  %191 = @func_3105() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
  %191.0
}

def @func_10498() -> (Tensor[(10, 14, 15), float64],) {
  @func_10496() /* ty=(Tensor[(10, 14, 15), float64],) */
}

def @func_1818() -> (Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool], Tensor[(540), uint8]) {
  %192 = cast(meta[relay.Constant][5] /* ty=Tensor[(540), uint8] */, dtype="uint8") /* ty=Tensor[(540), uint8] */;
  %193 = cast(meta[relay.Constant][5] /* ty=Tensor[(540), uint8] */, dtype="uint8") /* ty=Tensor[(540), uint8] */;
  %194 = reshape(%192, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), uint8] */;
  %195 = reshape(%193, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), uint8] */;
  %196 = @func_811(%194, %195) /* ty=(Tensor[(9, 10, 6), bool],) */;
  %197 = @func_666() /* ty=Tensor[(15, 10, 3), float64] */;
  %198 = %196.0;
  (%197, %198, meta[relay.Constant][5] /* ty=Tensor[(540), uint8] */)
}

def @func_5968() -> (Tensor[(15, 10, 3), float64],) {
  %201 = fn () -> (Tensor[(15, 10, 3), float64],) {
    %199 = @func_1305() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %200 = %199.2;
    (%200,)
  };
  %201() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_9505() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60, ?), uint16]) {
  %202 = @func_8194() /* ty=(Tensor[(60), float32], Tensor[(280), int16], Tensor[(15, 10, 3), float64], Tensor[(5, 4, 14), float64], Tensor[(5, 4, 14), float64], Tensor[(280), int16]) */;
  %203 = @func_5958() /* ty=(Tensor[(60), float32], Tensor[(60, ?), uint16]) */;
  %204 = %202.2;
  %205 = @func_6480() /* ty=Tensor[(15, 10, 3), float64] */;
  %206 = %203.1;
  (%204, %205, %206)
}

def @func_8085() -> (Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  @func_8083() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_9376() -> (Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) {
  %207 = @func_7305() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %208 = %207.0;
  %209 = @func_2726() /* ty=Tensor[(8, 13, 10), float32] */;
  (%208, %209)
}

def @func_2726() -> Tensor[(8, 13, 10), float32] {
  %210 = cast(meta[relay.Constant][6] /* ty=Tensor[(8, 13, 10), float32] */, dtype="float32") /* ty=Tensor[(8, 13, 10), float32] */;
  erf(%210) /* ty=Tensor[(8, 13, 10), float32] */
}

def @func_9916() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(60), float32], Tensor[(10, 14, 15), float64]) {
  @func_9914() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(60), float32], Tensor[(10, 14, 15), float64]) */
}

def @func_15637() -> (Tensor[(15, 10, 3), uint64], Tensor[(15, 10, 3), float64]) {
  @func_15635() /* ty=(Tensor[(15, 10, 3), uint64], Tensor[(15, 10, 3), float64]) */
}

def @func_1254(%var_1252: Tensor[(6, 14, 3), float32], %var_1253: Tensor[(6, 14, 3), float32]) -> (Tensor[(6, 14, 3), bool],) {
  %216 = fn (%var_1239: Tensor[(6, 14, 3), float32], %var_1240: Tensor[(6, 14, 3), float32]) -> (Tensor[(6, 14, 3), bool],) {
    %211 = cast(%var_1240, dtype="bool") /* ty=Tensor[(6, 14, 3), bool] */;
    %212 = shape_of(%var_1239, dtype="int32") /* ty=Tensor[(3), int32] */;
    %213 = cast(%var_1239, dtype="bool") /* ty=Tensor[(6, 14, 3), bool] */;
    %214 = dyn.reshape(%211, %212, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %215 = greater(%213, %214) /* ty=Tensor[(6, 14, 3), bool] */;
    (%215,)
  };
  %216(%var_1252, %var_1253) /* ty=(Tensor[(6, 14, 3), bool],) */
}

def @func_3487() -> Tensor[(8, 13, 10), float32] {
  %217 = fn () -> Tensor[(8, 13, 10), float32] {
    @func_2726() /* ty=Tensor[(8, 13, 10), float32] */
  };
  %217() /* ty=Tensor[(8, 13, 10), float32] */
}

def @func_11730() -> Tensor[(15, 10, 3), float64] {
  @func_11728() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_13735() -> (Tensor[(9, 10, 6), bool],) {
  %219 = fn () -> (Tensor[(9, 10, 6), bool],) {
    %218 = @func_2473() /* ty=Tensor[(9, 10, 6), bool] */;
    (%218,)
  };
  %219() /* ty=(Tensor[(9, 10, 6), bool],) */
}

def @func_17462() -> Tensor[(4, 9, 5), float32] {
  %220 = @func_7783() /* ty=(Tensor[(4, 9, 5), float32], Tensor[(4, 9, 5), float32]) */;
  %220.0
}

def @func_7487() -> Tensor[(15, 10, 3), float64] {
  @func_7485() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_21463() -> Tensor[(15, 10, 3), float64] {
  @func_21461() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_1934() -> (Tensor[(15, 10, 3), float64],) {
  %223 = fn () -> (Tensor[(15, 10, 3), float64],) {
    %221 = @func_1579() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
    %222 = %221.0;
    (%222,)
  };
  %223() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_4340() -> Tensor[(4, 9, 5), float32] {
  @func_2854() /* ty=Tensor[(4, 9, 5), float32] */
}

def @func_11016() -> (Tensor[(15, 10, 3), float64],) {
  %224 = @func_376() /* ty=Tensor[(15, 10, 3), float64] */;
  (%224,)
}

def @func_18852() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %225 = @func_17870() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %226 = %225.0;
  %227 = @func_3540() /* ty=Tensor[(15, 10, 3), float64] */;
  (%226, %227)
}

def @func_18179() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), int32]) {
  %232 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), int32]) {
    %228 = @func_13626() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %229 = @func_4607() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), int32]) */;
    %230 = %228.0;
    %231 = %229.2;
    (%230, %231)
  };
  %232() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), int32]) */
}

def @func_10734() -> Tensor[(15, 10, 3), float64] {
  @func_376() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_1642() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), uint64]) {
  %244 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), uint64]) {
    %233 = @func_359() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %234 = @func_1495() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %235 = %234.0;
    %236 = @func_167() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %237 = %236.0;
    %238 = cast(%237, dtype="uint64") /* ty=Tensor[(15, 10, 3), uint64] */;
    %239 = shape_of(%235, dtype="int32") /* ty=Tensor[(3), int32] */;
    %240 = cast(%235, dtype="uint64") /* ty=Tensor[(15, 10, 3), uint64] */;
    %241 = dyn.reshape(%238, %239, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %242 = %233.0;
    %243 = bitwise_or(%240, %241) /* ty=Tensor[(15, 10, 3), uint64] */;
    (%242, %243)
  };
  %244() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), uint64]) */
}

def @func_14621() -> Tensor[(15, 10, 3), float64] {
  %246 = fn () -> Tensor[(15, 10, 3), float64] {
    %245 = @func_9376() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */;
    %245.0
  };
  %246() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_2473() -> Tensor[(9, 10, 6), bool] {
  %247 = @func_1947() /* ty=(Tensor[(9, 10, 6), bool],) */;
  %247.0
}

def @func_10240() -> (Tensor[(15, 10, 3), float64], Tensor[(10, 8, 3), bool], uint64, Tensor[(15, 10, 3), uint64], Tensor[(15, 10, 3), float64], Tensor[(4, 9, 5), float32]) {
  %258 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(10, 8, 3), bool], uint64, Tensor[(15, 10, 3), uint64], Tensor[(15, 10, 3), float64], Tensor[(4, 9, 5), float32]) {
    %248 = @func_731() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %249 = cast(meta[relay.Constant][7] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %250 = reshape(%249, newshape=[]) /* ty=uint64 */;
    %251 = @func_10062(%250) /* ty=(Tensor[(10, 8, 3), bool], Tensor[(4, 9, 5), float32]) */;
    %252 = @func_8510() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), uint64]) */;
    %253 = %248.0;
    %254 = %251.0;
    %255 = %252.1;
    %256 = @func_588() /* ty=Tensor[(15, 10, 3), float64] */;
    %257 = @func_4787() /* ty=Tensor[(4, 9, 5), float32] */;
    (%253, %254, meta[relay.Constant][7] /* ty=uint64 */, %255, %256, %257)
  };
  %258() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(10, 8, 3), bool], uint64, Tensor[(15, 10, 3), uint64], Tensor[(15, 10, 3), float64], Tensor[(4, 9, 5), float32]) */
}

def @func_14710() -> Tensor[(15, 10, 3), float64] {
  %259 = @func_5068() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
  %259.1
}

def @func_8195() -> (Tensor[(60), float32], Tensor[(280), int16], Tensor[(15, 10, 3), float64], Tensor[(5, 4, 14), float64], Tensor[(5, 4, 14), float64], Tensor[(280), int16]) {
  %276 = fn () -> (Tensor[(60), float32], Tensor[(280), int16], Tensor[(15, 10, 3), float64], Tensor[(5, 4, 14), float64], Tensor[(5, 4, 14), float64], Tensor[(280), int16]) {
    %260 = @func_1383() /* ty=(Tensor[(60), float32],) */;
    %261 = cast(meta[relay.Constant][8] /* ty=Tensor[(280), int16] */, dtype="int16") /* ty=Tensor[(280), int16] */;
    %262 = cast(meta[relay.Constant][8] /* ty=Tensor[(280), int16] */, dtype="int16") /* ty=Tensor[(280), int16] */;
    %263 = reshape(%261, newshape=[5, 4, 14]) /* ty=Tensor[(5, 4, 14), int16] */;
    %264 = reshape(%262, newshape=[5, 4, 14]) /* ty=Tensor[(5, 4, 14), int16] */;
    %265 = @func_2160(%263, %264) /* ty=Tensor[(5, 4, 14), int16] */;
    %266 = cast(%265, dtype="float64") /* ty=Tensor[(5, 4, 14), float64] */;
    %267 = cast(%265, dtype="float64") /* ty=Tensor[(5, 4, 14), float64] */;
    %268 = cast(%265, dtype="int16") /* ty=Tensor[(5, 4, 14), int16] */;
    %269 = reshape(%268, newshape=[280]) /* ty=Tensor[(280), int16] */;
    %270 = @func_6931(%269) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(280), int16], Tensor[(280), int16], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
    %271 = %260.0;
    %272 = @func_1661() /* ty=Tensor[(15, 10, 3), float64] */;
    %273 = atan(%266) /* ty=Tensor[(5, 4, 14), float64] */;
    %274 = sqrt(%267) /* ty=Tensor[(5, 4, 14), float64] */;
    %275 = %270.1;
    (%271, meta[relay.Constant][8] /* ty=Tensor[(280), int16] */, %272, %273, %274, %275)
  };
  %276() /* ty=(Tensor[(60), float32], Tensor[(280), int16], Tensor[(15, 10, 3), float64], Tensor[(5, 4, 14), float64], Tensor[(5, 4, 14), float64], Tensor[(280), int16]) */
}

def @func_10166() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(8, 7, 11), bool]) {
  %291 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(8, 7, 11), bool]) {
    %277 = @func_2866() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %278 = cast(meta[relay.Constant][9] /* ty=Tensor[(616), bool] */, dtype="bool") /* ty=Tensor[(616), bool] */;
    %279 = cast(meta[relay.Constant][9] /* ty=Tensor[(616), bool] */, dtype="bool") /* ty=Tensor[(616), bool] */;
    %280 = reshape(%278, newshape=[8, 7, 11]) /* ty=Tensor[(8, 7, 11), bool] */;
    %281 = reshape(%279, newshape=[8, 7, 11]) /* ty=Tensor[(8, 7, 11), bool] */;
    %282 = @func_6991(%280, %281) /* ty=(Tensor[(8, 7, 11), bool], Tensor[(8, 7, 11), uint64], Tensor[(15, 10, 3), float64], Tensor[(8, 7, 11), float64]) */;
    %283 = %282.1;
    %284 = cast(meta[relay.Constant][9] /* ty=Tensor[(616), bool] */, dtype="bool") /* ty=Tensor[(616), bool] */;
    %285 = shape_of(%283, dtype="int32") /* ty=Tensor[(3), int32] */;
    %286 = cast(%283, dtype="bool") /* ty=Tensor[(8, 7, 11), bool] */;
    %287 = dyn.reshape(%284, %285, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %288 = @func_937() /* ty=Tensor[(15, 10, 3), float64] */;
    %289 = %277.0;
    %290 = less(%286, %287) /* ty=Tensor[(8, 7, 11), bool] */;
    (%288, %289, %290)
  };
  %291() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(8, 7, 11), bool]) */
}

def @func_20660() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32]) {
  %297 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32]) {
    %292 = @func_17937() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(10, 14, 15), float64]) */;
    %293 = @func_7272() /* ty=(Tensor[(15, 10, 3), float32],) */;
    %294 = @func_937() /* ty=Tensor[(15, 10, 3), float64] */;
    %295 = %292.0;
    %296 = %293.0;
    (%294, %295, %296)
  };
  %297() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32]) */
}

def @func_12479() -> (Tensor[(8, 13, 10), float32],) {
  %300 = fn () -> (Tensor[(8, 13, 10), float32],) {
    %298 = @func_6031() /* ty=(Tensor[(8, 13, 10), float32],) */;
    %299 = %298.0;
    (%299,)
  };
  %300() /* ty=(Tensor[(8, 13, 10), float32],) */
}

def @func_6234() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %305 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
    %301 = @func_359() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %302 = @func_5492() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %303 = %301.1;
    %304 = %302.0;
    (%303, %304)
  };
  %305() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_12209() -> (Tensor[(15, 10, 3), float64],) {
  %306 = @func_4149() /* ty=Tensor[(15, 10, 3), float64] */;
  (%306,)
}

def @func_5958() -> (Tensor[(60), float32], Tensor[(60, ?), uint16]) {
  %307 = @func_1726() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %308 = @func_1383() /* ty=(Tensor[(60), float32],) */;
  %309 = %308.0;
  %310 = cast(%309, dtype="float32") /* ty=Tensor[(60), float32] */;
  %311 = reshape(%310, newshape=[60, 1]) /* ty=Tensor[(60, 1), float32] */;
  %312 = @func_655(%311) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60, 1), float32]) */;
  %313 = %312.4;
  %314 = cast(%309, dtype="uint16") /* ty=Tensor[(60), uint16] */;
  %315 = shape_of(%313, dtype="int32") /* ty=Tensor[(2), int32] */;
  %316 = cast(%313, dtype="uint16") /* ty=Tensor[(60, 1), uint16] */;
  %317 = dyn.reshape(%314, %315, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %318 = %307.1;
  %319 = left_shift(%316, %317) /* ty=Tensor[(60, ?), uint16] */;
  (%318, %319)
}

def @func_11599() -> (Tensor[(15, 10, 3), float64], Tensor[(4, 9, 5), float32]) {
  %320 = @func_5911() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32], Tensor[(60), float32]) */;
  %321 = %320.0;
  %322 = @func_4787() /* ty=Tensor[(4, 9, 5), float32] */;
  (%321, %322)
}

def @func_6325() -> (Tensor[(4, 9, 5), float32], Tensor[(60), float32], Tensor[(10, 16, 8), int16], Tensor[(1280, 1), int64], Tensor[(60), float32]) {
  @func_6323() /* ty=(Tensor[(4, 9, 5), float32], Tensor[(60), float32], Tensor[(10, 16, 8), int16], Tensor[(1280, 1), int64], Tensor[(60), float32]) */
}

def @func_20208() -> (Tensor[(15, 10, 3), uint64],) {
  %325 = fn () -> (Tensor[(15, 10, 3), uint64],) {
    %323 = @func_8510() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), uint64]) */;
    %324 = %323.1;
    (%324,)
  };
  %325() /* ty=(Tensor[(15, 10, 3), uint64],) */
}

def @func_16333() -> (Tensor[(60), float32],) {
  %326 = @func_13530() /* ty=(Tensor[(60), float32],) */;
  %327 = %326.0;
  (%327,)
}

def @func_6482() -> Tensor[(15, 10, 3), float64] {
  @func_6480() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_17433(%var_17432: Tensor[(1008), float64]) -> (Tensor[(15, 10, 3), uint64], Tensor[(9, 10, 6), bool], Tensor[(9, 8, 14), float64], Tensor[(1008), float64], Tensor[(15, 10, 3), float64]) {
  %336 = fn (%var_17407: Tensor[(1008), float64]) -> (Tensor[(15, 10, 3), uint64], Tensor[(9, 10, 6), bool], Tensor[(9, 8, 14), float64], Tensor[(1008), float64], Tensor[(15, 10, 3), float64]) {
    %328 = @func_1818() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool], Tensor[(540), uint8]) */;
    %329 = cast(%var_17407, dtype="float64") /* ty=Tensor[(1008), float64] */;
    %330 = reshape(%329, newshape=[9, 8, 14]) /* ty=Tensor[(9, 8, 14), float64] */;
    %331 = @func_8992(%330) /* ty=(Tensor[(9, 8, 14), float64], Tensor[(15, 10, 3), float64]) */;
    %332 = @func_11692() /* ty=Tensor[(15, 10, 3), uint64] */;
    %333 = %328.1;
    %334 = %331.0;
    %335 = @func_14362() /* ty=Tensor[(15, 10, 3), float64] */;
    (%332, %333, %334, %var_17407, %335)
  };
  %336(%var_17432) /* ty=(Tensor[(15, 10, 3), uint64], Tensor[(9, 10, 6), bool], Tensor[(9, 8, 14), float64], Tensor[(1008), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_12405(%var_12366: Tensor[(3, 12, 9), float32]) -> (Tensor[(3, 12, 9), float32], Tensor[(15, 10, 3), float64]) {
  %337 = cast(%var_12366, dtype="float32") /* ty=Tensor[(3, 12, 9), float32] */;
  %338 = @func_5492() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %339 = log2(%337) /* ty=Tensor[(3, 12, 9), float32] */;
  %340 = %338.0;
  (%339, %340)
}

def @func_7783() -> (Tensor[(4, 9, 5), float32], Tensor[(4, 9, 5), float32]) {
  %341 = @func_2854() /* ty=Tensor[(4, 9, 5), float32] */;
  %342 = @func_2854() /* ty=Tensor[(4, 9, 5), float32] */;
  (%341, %342)
}

def @func_6693(%var_6687: Tensor[(520), uint16]) -> (Tensor[(4, 9, 5), float32], Tensor[(4, 10, 13), bool], Tensor[(520), uint16], Tensor[(60), float32]) {
  %343 = cast(%var_6687, dtype="uint16") /* ty=Tensor[(520), uint16] */;
  %344 = reshape(%343, newshape=[4, 10, 13]) /* ty=Tensor[(4, 10, 13), uint16] */;
  %345 = @func_2330(%344) /* ty=(Tensor[(4, 10, 13), bool], Tensor[(15, 10, 3), float64], Tensor[(4, 10, 13), float64]) */;
  %346 = @func_5698() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
  %347 = @func_4787() /* ty=Tensor[(4, 9, 5), float32] */;
  %348 = %345.0;
  %349 = %346.0;
  (%347, %348, %var_6687, %349)
}

def @func_11018() -> (Tensor[(15, 10, 3), float64],) {
  @func_11016() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_17938() -> (Tensor[(15, 10, 3), float64], Tensor[(10, 14, 15), float64]) {
  %352 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(10, 14, 15), float64]) {
    %350 = @func_1661() /* ty=Tensor[(15, 10, 3), float64] */;
    %351 = @func_10673() /* ty=Tensor[(10, 14, 15), float64] */;
    (%350, %351)
  };
  %352() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(10, 14, 15), float64]) */
}

def @func_13288() -> Tensor[(15, 10, 3), float64] {
  %354 = fn () -> Tensor[(15, 10, 3), float64] {
    %353 = @func_1495() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %353.0
  };
  %354() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_13589() -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32]) {
  %358 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32]) {
    %355 = @func_5662() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
    %356 = @func_11315() /* ty=Tensor[(15, 10, 3), float64] */;
    %357 = %355.2;
    (%356, %357)
  };
  %358() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */
}

def @func_9698() -> Tensor[(15, 10, 3), float64] {
  @func_9696() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_19794() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  @func_19792() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_3107() -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) {
  @func_3105() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */
}

def @func_20969() -> (Tensor[(15, 10, 3), uint64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) {
  %370 = fn () -> (Tensor[(15, 10, 3), uint64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) {
    %359 = @func_15635() /* ty=(Tensor[(15, 10, 3), uint64], Tensor[(15, 10, 3), float64]) */;
    %360 = @func_10165() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(8, 7, 11), bool]) */;
    %361 = @func_19106() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %362 = @func_3090() /* ty=(Tensor[(60), float32],) */;
    %363 = @func_1396() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %364 = %359.0;
    %365 = %360.0;
    %366 = @func_2130() /* ty=Tensor[(15, 10, 3), float64] */;
    %367 = %361.1;
    %368 = %362.0;
    %369 = %363.0;
    (%364, %365, %366, %367, %368, %369)
  };
  %370() /* ty=(Tensor[(15, 10, 3), uint64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */
}

def @func_17871() -> (Tensor[(15, 10, 3), float64],) {
  %373 = fn () -> (Tensor[(15, 10, 3), float64],) {
    %371 = @func_11338() /* ty=(Tensor[(60), float32], Tensor[(12, 14, 4), float32], Tensor[(672), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %372 = %371.3;
    (%372,)
  };
  %373() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_2589() -> (Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) {
  %374 = @func_314() /* ty=Tensor[(15, 10, 3), float64] */;
  %375 = @func_2473() /* ty=Tensor[(9, 10, 6), bool] */;
  (%374, %375)
}

def @func_18270() -> Tensor[(8, 13, 10), float32] {
  %377 = fn () -> Tensor[(8, 13, 10), float32] {
    %376 = @func_8510() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), uint64]) */;
    %376.0
  };
  %377() /* ty=Tensor[(8, 13, 10), float32] */
}

def @func_4342() -> Tensor[(4, 9, 5), float32] {
  @func_4340() /* ty=Tensor[(4, 9, 5), float32] */
}

def @func_16066() -> (Tensor[(4, 10, 13), bool], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %378 = @func_7393() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(4, 10, 13), bool], Tensor[(260, 2), uint16], Tensor[(15, 10, 3), float64], Tensor[(4, 9, 5), float64], Tensor[(8, 7, 11), uint64], Tensor[(7, 88), bool], Tensor[(15, 10, 3), float64]) */;
  %379 = @func_14301() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */;
  %380 = @func_3415() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64]) */;
  %381 = %378.1;
  %382 = %379.0;
  %383 = %380.0;
  (%381, %382, %383)
}

def @func_19792() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %384 = @func_4162() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %385 = @func_12517() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(10, 14, 15), float64]) */;
  %386 = @func_10239() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(10, 8, 3), bool], uint64, Tensor[(15, 10, 3), uint64], Tensor[(15, 10, 3), float64], Tensor[(4, 9, 5), float32]) */;
  %387 = @func_1579() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %388 = %384.0;
  %389 = @func_7485() /* ty=Tensor[(15, 10, 3), float64] */;
  %390 = %385.0;
  %391 = %386.4;
  %392 = %387.0;
  (%388, %389, %390, %391, %392)
}

def @func_9613(%var_9579: Tensor[(672), uint16]) -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(4, 9, 5), float32], Tensor[(4, 9, 5), float32], Tensor[(15, 10, 3), float64], Tensor[(672), uint16], Tensor[(10, 14, 15), float64]) {
  %393 = @func_1975() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %394 = @func_8083() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %395 = cast(%var_9579, dtype="uint16") /* ty=Tensor[(672), uint16] */;
  %396 = cast(%var_9579, dtype="uint16") /* ty=Tensor[(672), uint16] */;
  %397 = reshape(%395, newshape=[8, 14, 6]) /* ty=Tensor[(8, 14, 6), uint16] */;
  %398 = reshape(%396, newshape=[8, 14, 6]) /* ty=Tensor[(8, 14, 6), uint16] */;
  %399 = @func_7462(%397, %398) /* ty=(Tensor[(8, 14, 6), bool], Tensor[(15, 10, 3), float64], Tensor[(8, 7, 11), uint64], Tensor[(616), bool], Tensor[(15, 10, 3), float64]) */;
  %400 = %393.0;
  %401 = @func_7485() /* ty=Tensor[(15, 10, 3), float64] */;
  %402 = %394.0;
  %403 = @func_4340() /* ty=Tensor[(4, 9, 5), float32] */;
  %404 = @func_2854() /* ty=Tensor[(4, 9, 5), float32] */;
  %405 = %399.1;
  %406 = @func_5757() /* ty=Tensor[(10, 14, 15), float64] */;
  (%400, %401, %402, %403, %404, %405, %var_9579, %406)
}

def @func_17449() -> (Tensor[(4, 9, 5), float32], Tensor[(8, 13, 10), float32]) {
  %407 = @func_8240() /* ty=Tensor[(4, 9, 5), float32] */;
  %408 = @func_2726() /* ty=Tensor[(8, 13, 10), float32] */;
  (%407, %408)
}

def @func_19019() -> (Tensor[(4, 9, 5), float32], Tensor[(15, 10, 3), float64]) {
  %409 = @func_7783() /* ty=(Tensor[(4, 9, 5), float32], Tensor[(4, 9, 5), float32]) */;
  %410 = @func_13626() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %411 = %409.0;
  %412 = %410.1;
  (%411, %412)
}

def @func_11175() -> (Tensor[(60), float32],) {
  %413 = @func_2284() /* ty=Tensor[(60), float32] */;
  (%413,)
}

def @func_5577(%var_5550: Tensor[(3, 20), float32]) -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool], Tensor[(15, 10, 3), float64], Tensor[(3, 20), float32], Tensor[(60), float32], Tensor[(60), float32], Tensor[(4, 9, 5), float32], Tensor[(60), float32]) {
  %414 = @func_2977() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(280), int16]) */;
  %415 = @func_1726() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %416 = @func_4739() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %417 = @func_2938() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) */;
  %418 = cast(%var_5550, dtype="float32") /* ty=Tensor[(3, 20), float32] */;
  %419 = reshape(%418, newshape=[3, 20]) /* ty=Tensor[(3, 20), float32] */;
  %420 = @func_2269(%419) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(3, 20), float32], Tensor[(60), float32]) */;
  %421 = @func_3105() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
  %422 = @func_5399() /* ty=(Tensor[(60), float32],) */;
  %423 = @func_1541() /* ty=(Tensor[(60), float32],) */;
  %424 = %414.1;
  %425 = %415.0;
  %426 = %416.0;
  %427 = %417.1;
  %428 = %420.0;
  %429 = %421.1;
  %430 = %422.0;
  %431 = @func_4340() /* ty=Tensor[(4, 9, 5), float32] */;
  %432 = %423.0;
  (%424, %425, %426, %427, %428, %var_5550, %429, %430, %431, %432)
}

def @func_8924() -> (Tensor[(8, 13, 10), float32],) {
  %435 = fn () -> (Tensor[(8, 13, 10), float32],) {
    %433 = @func_8403() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(4, 9, 5), float32]) */;
    %434 = %433.0;
    (%434,)
  };
  %435() /* ty=(Tensor[(8, 13, 10), float32],) */
}

def @func_18205() -> (Tensor[(15, 10, 3), float64],) {
  %438 = fn () -> (Tensor[(15, 10, 3), float64],) {
    %436 = @func_10878() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(4, 9, 5), float32], Tensor[(15, 10, 3), float64]) */;
    %437 = %436.2;
    (%437,)
  };
  %438() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_6931(%var_6911: Tensor[(280), int16]) -> (Tensor[(15, 10, 3), float64], Tensor[(280), int16], Tensor[(280), int16], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) {
  %439 = @func_887() /* ty=(Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
  %440 = cast(%var_6911, dtype="int16") /* ty=Tensor[(280), int16] */;
  %441 = reshape(%440, newshape=[280]) /* ty=Tensor[(280), int16] */;
  %442 = @func_2629(%441) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(5, 4, 14), int16], Tensor[(280), int16]) */;
  %443 = @func_1383() /* ty=(Tensor[(60), float32],) */;
  %444 = @func_2589() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) */;
  %445 = %439.3;
  %446 = %442.2;
  %447 = %443.0;
  %448 = %444.0;
  (%445, %446, %var_6911, %447, %448)
}

def @func_7881() -> (Tensor[(15, 10, 3), float64],) {
  %449 = @func_6197() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %450 = %449.1;
  (%450,)
}

def @func_20502(%var_20500: Tensor[(8, 13, 10), float32]) -> (Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), uint16]) {
  @func_20499(%var_20500) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), uint16]) */
}

def @func_13661() -> (Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64]) {
  @func_13659() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64]) */
}

def @func_20665() -> (Tensor[(15, 10, 3), float64],) {
  %453 = fn () -> (Tensor[(15, 10, 3), float64],) {
    %451 = @func_2785() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %452 = %451.0;
    (%452,)
  };
  %453() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_4788() -> Tensor[(4, 9, 5), float32] {
  %454 = fn () -> Tensor[(4, 9, 5), float32] {
    @func_2854() /* ty=Tensor[(4, 9, 5), float32] */
  };
  %454() /* ty=Tensor[(4, 9, 5), float32] */
}

def @func_12770() -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(1040), float32], Tensor[(10, 14, 15), float64]) {
  %462 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(1040), float32], Tensor[(10, 14, 15), float64]) {
    %455 = @func_1579() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
    %456 = cast(meta[relay.Constant][10] /* ty=Tensor[(1040), float32] */, dtype="float32") /* ty=Tensor[(1040), float32] */;
    %457 = reshape(%456, newshape=[16, 5, 13]) /* ty=Tensor[(16, 5, 13), float32] */;
    %458 = @func_5467(%457) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %459 = %455.0;
    %460 = %458.3;
    %461 = @func_9085() /* ty=Tensor[(10, 14, 15), float64] */;
    (%459, %460, meta[relay.Constant][10] /* ty=Tensor[(1040), float32] */, %461)
  };
  %462() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(1040), float32], Tensor[(10, 14, 15), float64]) */
}

def @func_5359() -> (Tensor[(60), float32], Tensor[(9, 10, 6), bool]) {
  %466 = fn () -> (Tensor[(60), float32], Tensor[(9, 10, 6), bool]) {
    %463 = @func_4031() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), uint64]) */;
    %464 = %463.0;
    %465 = @func_2473() /* ty=Tensor[(9, 10, 6), bool] */;
    (%464, %465)
  };
  %466() /* ty=(Tensor[(60), float32], Tensor[(9, 10, 6), bool]) */
}

def @func_937() -> Tensor[(15, 10, 3), float64] {
  %467 = @func_796() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %467.0
}

def @func_2131() -> Tensor[(15, 10, 3), float64] {
  %469 = fn () -> Tensor[(15, 10, 3), float64] {
    %468 = @func_1933() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %468.0
  };
  %469() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_9086() -> Tensor[(10, 14, 15), float64] {
  %470 = fn () -> Tensor[(10, 14, 15), float64] {
    @func_5757() /* ty=Tensor[(10, 14, 15), float64] */
  };
  %470() /* ty=Tensor[(10, 14, 15), float64] */
}

def @func_8333() -> (Tensor[(8, 13, 10), float32],) {
  @func_8331() /* ty=(Tensor[(8, 13, 10), float32],) */
}

def @func_11315() -> Tensor[(15, 10, 3), float64] {
  @func_314() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_19002() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), uint64]) {
  %475 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), uint64]) {
    %471 = @func_16724() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(1280, 12), int8], Tensor[(4, 9, 5), float32]) */;
    %472 = @func_4031() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), uint64]) */;
    %473 = %471.0;
    %474 = %472.1;
    (%473, %474)
  };
  %475() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), uint64]) */
}

def @func_20499(%var_20484: Tensor[(8, 13, 10), float32]) -> (Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), uint16]) {
  %476 = @func_18099() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
  %477 = %476.0;
  %478 = cast(%var_20484, dtype="uint16") /* ty=Tensor[(8, 13, 10), uint16] */;
  %479 = shape_of(%477, dtype="int32") /* ty=Tensor[(3), int32] */;
  %480 = cast(%477, dtype="uint16") /* ty=Tensor[(8, 13, 10), uint16] */;
  %481 = dyn.reshape(%478, %479, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %482 = @func_2130() /* ty=Tensor[(15, 10, 3), float64] */;
  %483 = logical_xor(%480, %481) /* ty=Tensor[(8, 13, 10), uint16] */;
  (%482, %483)
}

def @func_20580() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  @func_20578() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_377() -> Tensor[(15, 10, 3), float64] {
  %485 = fn () -> Tensor[(15, 10, 3), float64] {
    %484 = @func_359() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %484.0
  };
  %485() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_7395() -> (Tensor[(15, 10, 3), float64], Tensor[(4, 10, 13), bool], Tensor[(260, 2), uint16], Tensor[(15, 10, 3), float64], Tensor[(4, 9, 5), float64], Tensor[(8, 7, 11), uint64], Tensor[(7, 88), bool], Tensor[(15, 10, 3), float64]) {
  @func_7393() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(4, 10, 13), bool], Tensor[(260, 2), uint16], Tensor[(15, 10, 3), float64], Tensor[(4, 9, 5), float64], Tensor[(8, 7, 11), uint64], Tensor[(7, 88), bool], Tensor[(15, 10, 3), float64]) */
}

def @func_15646() -> Tensor[(15, 10, 3), float64] {
  %486 = @func_4162() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %486.0
}

def @func_20834() -> (Tensor[(15, 10, 3), float64],) {
  %487 = @func_9163() /* ty=(Tensor[(15, 10, 3), uint64], Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) */;
  %488 = %487.1;
  (%488,)
}

def @func_19620() -> (Tensor[(15, 10, 3), float64],) {
  %489 = @func_14510() /* ty=Tensor[(15, 10, 3), float64] */;
  (%489,)
}

def @main(%var_21534: Tensor[(520), uint16], %var_21538: Tensor[(4, 320), int64]) -> (Tensor[(7, 13, 10), float64], Tensor[(60), float32], Tensor[(520), uint16], Tensor[(4, 320), int64], Tensor[(15, 10, 3), float64], Tensor[(10, 16, 8), float64]) {
  %490 = cast(meta[relay.Constant][11] /* ty=Tensor[(7, 13, 10), float64] */, dtype="float64") /* ty=Tensor[(7, 13, 10), float64] */;
  %491 = cast(%var_21534, dtype="uint16") /* ty=Tensor[(520), uint16] */;
  %492 = reshape(%491, newshape=[520]) /* ty=Tensor[(520), uint16] */;
  %493 = @func_12464(%492) /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(4, 10, 13), bool], Tensor[(520), uint16]) */;
  %494 = cast(%var_21538, dtype="int64") /* ty=Tensor[(4, 320), int64] */;
  %495 = cast(%var_21538, dtype="int64") /* ty=Tensor[(4, 320), int64] */;
  %496 = reshape(%494, newshape=[10, 16, 8]) /* ty=Tensor[(10, 16, 8), int64] */;
  %497 = reshape(%495, newshape=[10, 16, 8]) /* ty=Tensor[(10, 16, 8), int64] */;
  %498 = @func_4440(%496, %497) /* ty=(Tensor[(10, 16, 8), int16],) */;
  %499 = %498.0;
  %500 = cast(%499, dtype="float64") /* ty=Tensor[(10, 16, 8), float64] */;
  %501 = log10(%490) /* ty=Tensor[(7, 13, 10), float64] */;
  %502 = %493.0;
  %503 = @func_588() /* ty=Tensor[(15, 10, 3), float64] */;
  %504 = acosh(%500) /* ty=Tensor[(10, 16, 8), float64] */;
  (%501, %502, %var_21534, %var_21538, %503, %504)
}

def @func_4150() -> Tensor[(15, 10, 3), float64] {
  %506 = fn () -> Tensor[(15, 10, 3), float64] {
    %505 = @func_2036() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %505.0
  };
  %506() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_11601() -> (Tensor[(15, 10, 3), float64], Tensor[(4, 9, 5), float32]) {
  @func_11599() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(4, 9, 5), float32]) */
}

def @func_15178() -> (Tensor[(15, 10, 3), float64],) {
  @func_15176() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_15167() -> (Tensor[(8, 7, 11), uint64], Tensor[(4, 9, 5), float32]) {
  %513 = fn () -> (Tensor[(8, 7, 11), uint64], Tensor[(4, 9, 5), float32]) {
    %507 = @func_13385() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(8, 7, 11), uint64], Tensor[(616), bool], Tensor[(15, 10, 3), float64]) */;
    %508 = @func_11403() /* ty=(Tensor[(4, 9, 5), float32],) */;
    %509 = %508.0;
    %510 = cast(%509, dtype="float32") /* ty=Tensor[(4, 9, 5), float32] */;
    %511 = %507.1;
    %512 = log2(%510) /* ty=Tensor[(4, 9, 5), float32] */;
    (%511, %512)
  };
  %513() /* ty=(Tensor[(8, 7, 11), uint64], Tensor[(4, 9, 5), float32]) */
}

def @func_20599() -> (Tensor[(15, 10, 3), float64],) {
  %514 = @func_666() /* ty=Tensor[(15, 10, 3), float64] */;
  (%514,)
}

def @func_14008(%var_14006: Tensor[(540), uint8]) -> (Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool], Tensor[(540), uint8]) {
  @func_14005(%var_14006) /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool], Tensor[(540), uint8]) */
}

def @func_13386() -> (Tensor[(15, 10, 3), float64], Tensor[(8, 7, 11), uint64], Tensor[(616), bool], Tensor[(15, 10, 3), float64]) {
  %525 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(8, 7, 11), uint64], Tensor[(616), bool], Tensor[(15, 10, 3), float64]) {
    %515 = @func_6868() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %516 = cast(meta[relay.Constant][12] /* ty=Tensor[(616), bool] */, dtype="bool") /* ty=Tensor[(616), bool] */;
    %517 = cast(meta[relay.Constant][12] /* ty=Tensor[(616), bool] */, dtype="bool") /* ty=Tensor[(616), bool] */;
    %518 = reshape(%516, newshape=[8, 7, 11]) /* ty=Tensor[(8, 7, 11), bool] */;
    %519 = reshape(%517, newshape=[8, 7, 11]) /* ty=Tensor[(8, 7, 11), bool] */;
    %520 = @func_6991(%518, %519) /* ty=(Tensor[(8, 7, 11), bool], Tensor[(8, 7, 11), uint64], Tensor[(15, 10, 3), float64], Tensor[(8, 7, 11), float64]) */;
    %521 = @func_13275() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %522 = %515.2;
    %523 = %520.1;
    %524 = %521.0;
    (%522, %523, meta[relay.Constant][12] /* ty=Tensor[(616), bool] */, %524)
  };
  %525() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(8, 7, 11), uint64], Tensor[(616), bool], Tensor[(15, 10, 3), float64]) */
}

def @func_7485() -> Tensor[(15, 10, 3), float64] {
  %526 = @func_2036() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %526.0
}

def @func_18650() -> (Tensor[(60), float32], Tensor[(8, 13, 10), float32]) {
  @func_18648() /* ty=(Tensor[(60), float32], Tensor[(8, 13, 10), float32]) */
}

def @func_6869() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %539 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
    %527 = @func_2464() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool], Tensor[(1, 540), uint8], Tensor[(15, 10, 3), float64]) */;
    %528 = @func_1791() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
    %529 = %528.0;
    %530 = cast(%529, dtype="float64") /* ty=Tensor[(15, 10, 3), float64] */;
    %531 = cast(%529, dtype="bool") /* ty=Tensor[(15, 10, 3), bool] */;
    %532 = reshape(%530, newshape=[15, 10, 3]) /* ty=Tensor[(15, 10, 3), float64] */;
    %533 = reshape(%531, newshape=[15, 10, 3]) /* ty=Tensor[(15, 10, 3), bool] */;
    %534 = @func_1135(%532, %533) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), int32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %535 = %527.3;
    %536 = %534.0;
    %537 = @func_376() /* ty=Tensor[(15, 10, 3), float64] */;
    %538 = @func_2198() /* ty=Tensor[(15, 10, 3), float64] */;
    (%535, %529, %536, %537, %538)
  };
  %539() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_12059() -> Tensor[(15, 10, 3), float64] {
  @func_12057() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_20440() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %543 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
    %540 = @func_3155() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool], Tensor[(15, 10, 3), float64]) */;
    %541 = @func_11315() /* ty=Tensor[(15, 10, 3), float64] */;
    %542 = %540.1;
    (%541, %542)
  };
  %543() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_18854() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  @func_18852() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_21181() -> Tensor[(60), float32] {
  %544 = fn () -> Tensor[(60), float32] {
    @func_2565() /* ty=Tensor[(60), float32] */
  };
  %544() /* ty=Tensor[(60), float32] */
}

def @func_2465() -> (Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool], Tensor[(1, 540), uint8], Tensor[(15, 10, 3), float64]) {
  %555 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool], Tensor[(1, 540), uint8], Tensor[(15, 10, 3), float64]) {
    %545 = @func_1181() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %546 = cast(meta[relay.Constant][13] /* ty=Tensor[(1, 540), uint8] */, dtype="uint8") /* ty=Tensor[(1, 540), uint8] */;
    %547 = cast(meta[relay.Constant][13] /* ty=Tensor[(1, 540), uint8] */, dtype="uint8") /* ty=Tensor[(1, 540), uint8] */;
    %548 = reshape(%546, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), uint8] */;
    %549 = reshape(%547, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), uint8] */;
    %550 = @func_811(%548, %549) /* ty=(Tensor[(9, 10, 6), bool],) */;
    %551 = @func_1791() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
    %552 = %545.0;
    %553 = %550.0;
    %554 = %551.0;
    (%552, %553, meta[relay.Constant][13] /* ty=Tensor[(1, 540), uint8] */, %554)
  };
  %555() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool], Tensor[(1, 540), uint8], Tensor[(15, 10, 3), float64]) */
}

def @func_16524() -> (Tensor[(15, 10, 3), float64],) {
  %558 = fn () -> (Tensor[(15, 10, 3), float64],) {
    %556 = @func_9801() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %557 = %556.2;
    (%557,)
  };
  %558() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_2540() -> Tensor[(15, 10, 3), float64] {
  @func_2479() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_8669() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  @func_8667() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_3568(%var_3566: Tensor[(8, 14, 9), float64]) -> (Tensor[(8, 14, 9), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32]) {
  @func_3565(%var_3566) /* ty=(Tensor[(8, 14, 9), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */
}

def @func_889() -> (Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) {
  @func_887() /* ty=(Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */
}

def @func_4133() -> (Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(450), float64], Tensor[(15, 10, 3), float64]) {
  %559 = cast(meta[relay.Constant][14] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %560 = cast(meta[relay.Constant][14] /* ty=Tensor[(450), float64] */, dtype="bool") /* ty=Tensor[(450), bool] */;
  %561 = reshape(%559, newshape=[15, 10, 3]) /* ty=Tensor[(15, 10, 3), float64] */;
  %562 = reshape(%560, newshape=[15, 10, 3]) /* ty=Tensor[(15, 10, 3), bool] */;
  %563 = @func_1135(%561, %562) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), int32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %564 = @func_2565() /* ty=Tensor[(60), float32] */;
  %565 = cast(%564, dtype="float32") /* ty=Tensor[(60), float32] */;
  %566 = reshape(%565, newshape=[3, 20]) /* ty=Tensor[(3, 20), float32] */;
  %567 = @func_718(%566) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(3, 20), float32]) */;
  %568 = %563.4;
  %569 = %567.2;
  (%564, %568, meta[relay.Constant][14] /* ty=Tensor[(450), float64] */, %569)
}

def @func_15603(%var_15601: Tensor[(3, 14, 16), int64], %var_15602: Tensor[(70, 4), int16]) -> (Tensor[(3, 14, 16), bool], Tensor[(15, 10, 3), uint64], Tensor[(3, 14, 16), float32], Tensor[(280), int16], Tensor[(70, 4), int16], Tensor[(15, 10, 3), float64]) {
  %585 = fn (%var_15531: Tensor[(3, 14, 16), int64], %var_15567: Tensor[(70, 4), int16]) -> (Tensor[(3, 14, 16), bool], Tensor[(15, 10, 3), uint64], Tensor[(3, 14, 16), float32], Tensor[(280), int16], Tensor[(70, 4), int16], Tensor[(15, 10, 3), float64]) {
    %570 = cast(meta[relay.Constant][15] /* ty=Tensor[(3, 14, 16), int64] */, dtype="bool") /* ty=Tensor[(3, 14, 16), bool] */;
    %571 = shape_of(%var_15531, dtype="int32") /* ty=Tensor[(3), int32] */;
    %572 = cast(%var_15531, dtype="bool") /* ty=Tensor[(3, 14, 16), bool] */;
    %573 = dyn.reshape(%570, %571, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %574 = @func_9163() /* ty=(Tensor[(15, 10, 3), uint64], Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) */;
    %575 = cast(%var_15531, dtype="float32") /* ty=Tensor[(3, 14, 16), float32] */;
    %576 = cast(%var_15567, dtype="int16") /* ty=Tensor[(70, 4), int16] */;
    %577 = reshape(%576, newshape=[280]) /* ty=Tensor[(280), int16] */;
    %578 = @func_6931(%577) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(280), int16], Tensor[(280), int16], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
    %579 = @func_6959() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
    %580 = not_equal(%572, %573) /* ty=Tensor[(3, 14, 16), bool] */;
    %581 = %574.0;
    %582 = acos(%575) /* ty=Tensor[(3, 14, 16), float32] */;
    %583 = %578.2;
    %584 = %579.0;
    (%580, %581, %582, %583, %var_15567, %584)
  };
  %585(%var_15601, %var_15602) /* ty=(Tensor[(3, 14, 16), bool], Tensor[(15, 10, 3), uint64], Tensor[(3, 14, 16), float32], Tensor[(280), int16], Tensor[(70, 4), int16], Tensor[(15, 10, 3), float64]) */
}

def @func_7143() -> (Tensor[(9, 10, 6), bool], Tensor[(60), float32]) {
  @func_7141() /* ty=(Tensor[(9, 10, 6), bool], Tensor[(60), float32]) */
}

def @func_9696() -> Tensor[(15, 10, 3), float64] {
  @func_5715() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_8691() -> (Tensor[(15, 10, 3), float64],) {
  %588 = fn () -> (Tensor[(15, 10, 3), float64],) {
    %586 = @func_2036() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %587 = %586.0;
    (%587,)
  };
  %588() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_17576(%var_17574: Tensor[(8, 12, 10), int16]) -> (Tensor[(8, 12, 10), bool], Tensor[(15, 10, 3), float64]) {
  @func_17573(%var_17574) /* ty=(Tensor[(8, 12, 10), bool], Tensor[(15, 10, 3), float64]) */
}

def @func_17621() -> (Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64]) {
  %592 = fn () -> (Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64]) {
    %589 = @func_731() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %590 = @func_2726() /* ty=Tensor[(8, 13, 10), float32] */;
    %591 = %589.0;
    (%590, %591)
  };
  %592() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64]) */
}

def @func_184() -> Tensor[(15, 10, 3), float64] {
  %593 = @func_167() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %593.0
}

def @func_12828() -> (Tensor[(15, 10, 3), float64], Tensor[(4, 10, 13), bool], Tensor[(520), uint16]) {
  %600 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(4, 10, 13), bool], Tensor[(520), uint16]) {
    %594 = @func_12259() /* ty=(Tensor[(4, 9, 5), float32], Tensor[(15, 10, 3), float64]) */;
    %595 = cast(meta[relay.Constant][16] /* ty=Tensor[(520), uint16] */, dtype="uint16") /* ty=Tensor[(520), uint16] */;
    %596 = reshape(%595, newshape=[520]) /* ty=Tensor[(520), uint16] */;
    %597 = @func_12461(%596) /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(4, 10, 13), bool], Tensor[(520), uint16]) */;
    %598 = %594.1;
    %599 = %597.2;
    (%598, %599, meta[relay.Constant][16] /* ty=Tensor[(520), uint16] */)
  };
  %600() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(4, 10, 13), bool], Tensor[(520), uint16]) */
}

def @func_7393() -> (Tensor[(15, 10, 3), float64], Tensor[(4, 10, 13), bool], Tensor[(260, 2), uint16], Tensor[(15, 10, 3), float64], Tensor[(4, 9, 5), float64], Tensor[(8, 7, 11), uint64], Tensor[(7, 88), bool], Tensor[(15, 10, 3), float64]) {
  %601 = cast(meta[relay.Constant][17] /* ty=Tensor[(260, 2), uint16] */, dtype="uint16") /* ty=Tensor[(260, 2), uint16] */;
  %602 = reshape(%601, newshape=[520]) /* ty=Tensor[(520), uint16] */;
  %603 = @func_6693(%602) /* ty=(Tensor[(4, 9, 5), float32], Tensor[(4, 10, 13), bool], Tensor[(520), uint16], Tensor[(60), float32]) */;
  %604 = @func_359() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %605 = @func_4340() /* ty=Tensor[(4, 9, 5), float32] */;
  %606 = cast(%605, dtype="float64") /* ty=Tensor[(4, 9, 5), float64] */;
  %607 = cast(meta[relay.Constant][18] /* ty=Tensor[(7, 88), bool] */, dtype="bool") /* ty=Tensor[(7, 88), bool] */;
  %608 = cast(meta[relay.Constant][18] /* ty=Tensor[(7, 88), bool] */, dtype="bool") /* ty=Tensor[(7, 88), bool] */;
  %609 = reshape(%607, newshape=[8, 7, 11]) /* ty=Tensor[(8, 7, 11), bool] */;
  %610 = reshape(%608, newshape=[8, 7, 11]) /* ty=Tensor[(8, 7, 11), bool] */;
  %611 = @func_6991(%609, %610) /* ty=(Tensor[(8, 7, 11), bool], Tensor[(8, 7, 11), uint64], Tensor[(15, 10, 3), float64], Tensor[(8, 7, 11), float64]) */;
  %612 = @func_2866() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %613 = @func_2479() /* ty=Tensor[(15, 10, 3), float64] */;
  %614 = %603.1;
  %615 = %604.0;
  %616 = asinh(%606) /* ty=Tensor[(4, 9, 5), float64] */;
  %617 = %611.1;
  %618 = %612.0;
  (%613, %614, meta[relay.Constant][17] /* ty=Tensor[(260, 2), uint16] */, %615, %616, %617, meta[relay.Constant][18] /* ty=Tensor[(7, 88), bool] */, %618)
}

def @func_17483() -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32]) {
  %623 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32]) {
    %619 = @func_11754() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %620 = @func_1383() /* ty=(Tensor[(60), float32],) */;
    %621 = %619.0;
    %622 = %620.0;
    (%621, %622)
  };
  %623() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */
}

def @func_11000(%var_10998: Tensor[(990), int8], %var_10999: Tensor[(144), float32]) -> (Tensor[(15, 10, 3), float64], Tensor[(10, 14, 15), float64], Tensor[(144), float32], Tensor[(990), int8], Tensor[(144), float32]) {
  %636 = fn (%var_10991: Tensor[(990), int8], %var_10992: Tensor[(144), float32]) -> (Tensor[(15, 10, 3), float64], Tensor[(10, 14, 15), float64], Tensor[(144), float32], Tensor[(990), int8], Tensor[(144), float32]) {
    %624 = @func_5911() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32], Tensor[(60), float32]) */;
    %625 = @func_8001() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(10, 14, 15), float64], Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64]) */;
    %626 = cast(%var_10991, dtype="int8") /* ty=Tensor[(990), int8] */;
    %627 = cast(%var_10991, dtype="int8") /* ty=Tensor[(990), int8] */;
    %628 = cast(%var_10992, dtype="float32") /* ty=Tensor[(144), float32] */;
    %629 = reshape(%626, newshape=[9, 10, 11]) /* ty=Tensor[(9, 10, 11), int8] */;
    %630 = reshape(%627, newshape=[9, 10, 11]) /* ty=Tensor[(9, 10, 11), int8] */;
    %631 = reshape(%628, newshape=[144]) /* ty=Tensor[(144), float32] */;
    %632 = @func_9223(%629, %630, %631) /* ty=(Tensor[(9, 10, 11), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(2, 12, 6), float32], float32, Tensor[(144), float32]) */;
    %633 = %624.1;
    %634 = %625.1;
    %635 = %632.5;
    (%633, %634, %635, %var_10991, %var_10992)
  };
  %636(%var_10998, %var_10999) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(10, 14, 15), float64], Tensor[(144), float32], Tensor[(990), int8], Tensor[(144), float32]) */
}

def @func_3869() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) {
  %637 = @func_198() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %638 = @func_2198() /* ty=Tensor[(15, 10, 3), float64] */;
  %639 = %637.0;
  %640 = @func_2726() /* ty=Tensor[(8, 13, 10), float32] */;
  (%638, %639, %640)
}

def @func_20383(%var_20374: Tensor[(324), float32]) -> (Tensor[(60), float32], Tensor[(324), float32], Tensor[(3, 12, 9), float64]) {
  %641 = @func_5698() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
  %642 = cast(%var_20374, dtype="float32") /* ty=Tensor[(324), float32] */;
  %643 = reshape(%642, newshape=[3, 12, 9]) /* ty=Tensor[(3, 12, 9), float32] */;
  %644 = @func_12405(%643) /* ty=(Tensor[(3, 12, 9), float32], Tensor[(15, 10, 3), float64]) */;
  %645 = %644.0;
  %646 = cast(%645, dtype="float64") /* ty=Tensor[(3, 12, 9), float64] */;
  %647 = %641.0;
  %648 = cosh(%646) /* ty=Tensor[(3, 12, 9), float64] */;
  (%647, %var_20374, %648)
}

def @func_20707(%var_20706: Tensor[(2, 16, 6), uint8]) -> (Tensor[(2, 16, 6), uint8],) {
  %654 = fn (%var_20672: Tensor[(2, 16, 6), uint8]) -> (Tensor[(2, 16, 6), uint8],) {
    %649 = cast(%var_20672, dtype="uint8") /* ty=Tensor[(2, 16, 6), uint8] */;
    %650 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(2, 16, 6), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %651 = cast(meta[relay.Constant][19] /* ty=Tensor[(2, 16, 6), uint8] */, dtype="uint8") /* ty=Tensor[(2, 16, 6), uint8] */;
    %652 = dyn.reshape(%649, %650, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %653 = bitwise_xor(%651, %652) /* ty=Tensor[(2, 16, 6), uint8] */;
    (%653,)
  };
  %654(%var_20706) /* ty=(Tensor[(2, 16, 6), uint8],) */
}

def @func_4399() -> Tensor[(15, 10, 3), float64] {
  %655 = @func_300() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %655.1
}

def @func_17464() -> Tensor[(4, 9, 5), float32] {
  @func_17462() /* ty=Tensor[(4, 9, 5), float32] */
}

def @func_12641() -> (Tensor[(15, 10, 3), float64], Tensor[(1280, 11), uint8], Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64]) {
  %667 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(1280, 11), uint8], Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64]) {
    %656 = @func_1579() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
    %657 = @func_6323() /* ty=(Tensor[(4, 9, 5), float32], Tensor[(60), float32], Tensor[(10, 16, 8), int16], Tensor[(1280, 1), int64], Tensor[(60), float32]) */;
    %658 = %657.3;
    %659 = cast(%658, dtype="uint8") /* ty=Tensor[(1280, 1), uint8] */;
    %660 = cast(meta[relay.Constant][20] /* ty=Tensor[(1280, 11), int64] */, dtype="uint8") /* ty=Tensor[(1280, 11), uint8] */;
    %661 = @func_6832() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */;
    %662 = @func_7881() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %663 = %656.0;
    %664 = logical_xor(%659, %660) /* ty=Tensor[(1280, 11), uint8] */;
    %665 = %661.2;
    %666 = %662.0;
    (%663, %664, %665, %666)
  };
  %667() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(1280, 11), uint8], Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64]) */
}

def @func_6383() -> (Tensor[(9, 10, 6), bool], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  @func_6381() /* ty=(Tensor[(9, 10, 6), bool], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_10062(%var_10049: uint64) -> (Tensor[(10, 8, 3), bool], Tensor[(4, 9, 5), float32]) {
  %668 = cast(%var_10049, dtype="bool") /* ty=bool */;
  %669 = cast(meta[relay.Constant][21] /* ty=Tensor[(10, 8, 3), uint64] */, dtype="bool") /* ty=Tensor[(10, 8, 3), bool] */;
  %670 = greater(%668, %669) /* ty=Tensor[(10, 8, 3), bool] */;
  %671 = @func_8240() /* ty=Tensor[(4, 9, 5), float32] */;
  (%670, %671)
}

def @func_15383() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %672 = @func_2977() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(280), int16]) */;
  %673 = %672.1;
  %674 = @func_9993() /* ty=Tensor[(15, 10, 3), float64] */;
  (%673, %674)
}

def @func_14364() -> Tensor[(15, 10, 3), float64] {
  @func_14362() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_17867() -> (Tensor[(60), float32],) {
  @func_17865() /* ty=(Tensor[(60), float32],) */
}

def @func_19873(%var_19797: Tensor[(9, 4, 16), float64], %var_19798: Tensor[(9, 4, 16), float64]) -> (Tensor[(9, 4, 16), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(60), float32]) {
  %675 = cast(%var_19798, dtype="float64") /* ty=Tensor[(9, 4, 16), float64] */;
  %676 = shape_of(%var_19797, dtype="int32") /* ty=Tensor[(3), int32] */;
  %677 = cast(%var_19797, dtype="float64") /* ty=Tensor[(9, 4, 16), float64] */;
  %678 = dyn.reshape(%675, %676, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %679 = @func_12155() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %680 = @func_300() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %681 = @func_1579() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %682 = @func_4031() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), uint64]) */;
  %683 = minimum(%677, %678) /* ty=Tensor[(9, 4, 16), float64] */;
  %684 = %679.0;
  %685 = @func_3540() /* ty=Tensor[(15, 10, 3), float64] */;
  %686 = %680.1;
  %687 = %681.1;
  %688 = %682.0;
  (%683, %684, %685, %686, %687, %688)
}

def @func_19909() -> (Tensor[(15, 10, 3), float64],) {
  %689 = @func_1726() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %690 = %689.2;
  (%690,)
}

def @func_15394() -> (Tensor[(60), float32],) {
  %691 = @func_4133() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(450), float64], Tensor[(15, 10, 3), float64]) */;
  %692 = %691.0;
  (%692,)
}

def @func_18099() -> (Tensor[(8, 13, 10), float32], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) {
  %693 = @func_5662() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %694 = @func_6673() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %695 = @func_17620() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64]) */;
  %696 = %693.0;
  %697 = %694.4;
  %698 = %695.1;
  (%696, %697, %698)
}

def @func_1182() -> (Tensor[(15, 10, 3), float64],) {
  %700 = fn () -> (Tensor[(15, 10, 3), float64],) {
    %699 = @func_314() /* ty=Tensor[(15, 10, 3), float64] */;
    (%699,)
  };
  %700() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_9437() -> (Tensor[(15, 10, 3), float64],) {
  %703 = fn () -> (Tensor[(15, 10, 3), float64],) {
    %701 = @func_6959() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
    %702 = %701.0;
    (%702,)
  };
  %703() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_8667() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %704 = @func_2540() /* ty=Tensor[(15, 10, 3), float64] */;
  %705 = @func_4149() /* ty=Tensor[(15, 10, 3), float64] */;
  (%704, %705)
}

def @func_1880() -> (Tensor[(15, 10, 3), float64],) {
  %708 = fn () -> (Tensor[(15, 10, 3), float64],) {
    %706 = @func_1501() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %707 = %706.0;
    (%707,)
  };
  %708() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_18813() -> (Tensor[(10, 16, 8), int16], Tensor[(60), float32]) {
  %709 = @func_15478() /* ty=(Tensor[(10, 16, 8), int16], Tensor[(60), float32]) */;
  %710 = @func_5358() /* ty=(Tensor[(60), float32], Tensor[(9, 10, 6), bool]) */;
  %711 = %709.0;
  %712 = %710.0;
  (%711, %712)
}

def @func_19963() -> (Tensor[(60), float32], Tensor[(15, 10, 3), float64]) {
  %716 = fn () -> (Tensor[(60), float32], Tensor[(15, 10, 3), float64]) {
    %713 = @func_13530() /* ty=(Tensor[(60), float32],) */;
    %714 = %713.0;
    %715 = @func_14510() /* ty=Tensor[(15, 10, 3), float64] */;
    (%714, %715)
  };
  %716() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */
}

def @func_14320() -> Tensor[(15, 10, 3), float64] {
  @func_14318() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_4267() -> (Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %717 = @func_887() /* ty=(Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
  %718 = @func_2464() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool], Tensor[(1, 540), uint8], Tensor[(15, 10, 3), float64]) */;
  %719 = @func_1305() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %720 = %719.1;
  %721 = cast(%720, dtype="float32") /* ty=Tensor[(15, 10, 3), float32] */;
  %722 = @func_2540() /* ty=Tensor[(15, 10, 3), float64] */;
  %723 = cast(%722, dtype="float64") /* ty=Tensor[(15, 10, 3), float64] */;
  %724 = cast(%722, dtype="bool") /* ty=Tensor[(15, 10, 3), bool] */;
  %725 = reshape(%723, newshape=[15, 10, 3]) /* ty=Tensor[(15, 10, 3), float64] */;
  %726 = reshape(%724, newshape=[15, 10, 3]) /* ty=Tensor[(15, 10, 3), bool] */;
  %727 = @func_1135(%725, %726) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), int32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %728 = %717.0;
  %729 = %718.0;
  %730 = atanh(%721) /* ty=Tensor[(15, 10, 3), float32] */;
  %731 = %727.4;
  (%728, %729, %730, %722, %731)
}

def @func_12908() -> Tensor[(15, 10, 3), float64] {
  %733 = fn () -> Tensor[(15, 10, 3), float64] {
    %732 = @func_1975() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %732.0
  };
  %733() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_21461() -> Tensor[(15, 10, 3), float64] {
  @func_2130() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_11692() -> Tensor[(15, 10, 3), uint64] {
  %734 = @func_8510() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), uint64]) */;
  %734.1
}

def @func_486(%var_485: Tensor[(5, 12, 1), float32]) -> (Tensor[(5, 12, 1), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %740 = fn (%var_464: Tensor[(5, 12, 1), float32]) -> (Tensor[(5, 12, 1), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
    %735 = cast(%var_464, dtype="float32") /* ty=Tensor[(5, 12, 1), float32] */;
    %736 = @func_300() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %737 = erf(%735) /* ty=Tensor[(5, 12, 1), float32] */;
    %738 = %736.1;
    %739 = @func_184() /* ty=Tensor[(15, 10, 3), float64] */;
    (%737, %738, %739)
  };
  %740(%var_485) /* ty=(Tensor[(5, 12, 1), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_4135() -> (Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(450), float64], Tensor[(15, 10, 3), float64]) {
  @func_4133() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(450), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_8869(%var_8866: Tensor[(11, 3, 9), bool], %var_8867: Tensor[(11, 3, 9), bool], %var_8868: Tensor[(96), float64]) -> (Tensor[(11, 3, 9), bool], Tensor[(2, 4, 12), float64], Tensor[(96), float64]) {
  %749 = fn (%var_8851: Tensor[(11, 3, 9), bool], %var_8852: Tensor[(11, 3, 9), bool], %var_8858: Tensor[(96), float64]) -> (Tensor[(11, 3, 9), bool], Tensor[(2, 4, 12), float64], Tensor[(96), float64]) {
    %741 = cast(%var_8852, dtype="bool") /* ty=Tensor[(11, 3, 9), bool] */;
    %742 = shape_of(%var_8851, dtype="int32") /* ty=Tensor[(3), int32] */;
    %743 = cast(%var_8851, dtype="bool") /* ty=Tensor[(11, 3, 9), bool] */;
    %744 = dyn.reshape(%741, %742, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %745 = cast(%var_8858, dtype="float64") /* ty=Tensor[(96), float64] */;
    %746 = reshape(%745, newshape=[2, 4, 12]) /* ty=Tensor[(2, 4, 12), float64] */;
    %747 = logical_or(%743, %744) /* ty=Tensor[(11, 3, 9), bool] */;
    %748 = @func_8737(%746) /* ty=Tensor[(2, 4, 12), float64] */;
    (%747, %748, %var_8858)
  };
  %749(%var_8866, %var_8867, %var_8868) /* ty=(Tensor[(11, 3, 9), bool], Tensor[(2, 4, 12), float64], Tensor[(96), float64]) */
}

def @func_15065() -> (Tensor[(15, 10, 3), float64], Tensor[(10, 14, 15), float64]) {
  %750 = @func_7738() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %751 = @func_12769() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(1040), float32], Tensor[(10, 14, 15), float64]) */;
  %752 = %750.1;
  %753 = %751.3;
  (%752, %753)
}

def @func_12067() -> Tensor[(15, 10, 3), float64] {
  @func_12065() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_2038() -> (Tensor[(15, 10, 3), float64],) {
  @func_2036() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_14474() -> Tensor[(15, 10, 3), float64] {
  @func_14472() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_12057() -> Tensor[(15, 10, 3), float64] {
  %754 = @func_796() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %754.1
}

def @func_18333() -> (Tensor[(7, 3, 11), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  @func_18331() /* ty=(Tensor[(7, 3, 11), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_12306() -> Tensor[(15, 10, 3), float64] {
  @func_12304() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_8024() -> (Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %761 = fn () -> (Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
    %755 = @func_6031() /* ty=(Tensor[(8, 13, 10), float32],) */;
    %756 = @func_7881() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %757 = @func_3769() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */;
    %758 = %755.0;
    %759 = %756.0;
    %760 = %757.0;
    (%758, %759, %760)
  };
  %761() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_12117() -> (Tensor[(15, 10, 3), float64],) {
  %762 = @func_2036() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %763 = %762.0;
  (%763,)
}

def @func_15525() -> (Tensor[(84, 12), float32], Tensor[(84, 12), float32]) {
  %764 = @func_10648() /* ty=(Tensor[(8, 13, 10), bool], Tensor[(8, 13, 10), float32], Tensor[(9, 8, 14), float64], Tensor[(84, 12), float64]) */;
  %765 = %764.3;
  %766 = cast(%765, dtype="float32") /* ty=Tensor[(84, 12), float32] */;
  %767 = cast(%765, dtype="float32") /* ty=Tensor[(84, 12), float32] */;
  %768 = asin(%766) /* ty=Tensor[(84, 12), float32] */;
  %769 = exp(%767) /* ty=Tensor[(84, 12), float32] */;
  (%768, %769)
}

def @func_16905() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %772 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
    %770 = @func_14362() /* ty=Tensor[(15, 10, 3), float64] */;
    %771 = @func_588() /* ty=Tensor[(15, 10, 3), float64] */;
    (%770, %771)
  };
  %772() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_6961() -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32]) {
  @func_6959() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */
}

def @func_18331() -> (Tensor[(7, 3, 11), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %773 = cast(meta[relay.Constant][22] /* ty=Tensor[(7, 3, 11), float64] */, dtype="float64") /* ty=Tensor[(7, 3, 11), float64] */;
  %774 = @func_3809() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) */;
  %775 = asinh(%773) /* ty=Tensor[(7, 3, 11), float64] */;
  %776 = @func_12057() /* ty=Tensor[(15, 10, 3), float64] */;
  %777 = %774.0;
  (%775, %776, %777)
}

def @func_17378(%var_17376: Tensor[(8, 9, 11), uint8]) -> (Tensor[(8, 9, 11), uint8],) {
  @func_17375(%var_17376) /* ty=(Tensor[(8, 9, 11), uint8],) */
}

def @func_10039(%var_10038: Tensor[(60), float32]) -> (Tensor[(8, 13, 10), float32], Tensor[(9, 10, 6), bool], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) {
  %788 = fn (%var_10019: Tensor[(60), float32]) -> (Tensor[(8, 13, 10), float32], Tensor[(9, 10, 6), bool], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) {
    %778 = @func_8403() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(4, 9, 5), float32]) */;
    %779 = @func_1947() /* ty=(Tensor[(9, 10, 6), bool],) */;
    %780 = cast(%var_10019, dtype="float32") /* ty=Tensor[(60), float32] */;
    %781 = reshape(%780, newshape=[3, 20]) /* ty=Tensor[(3, 20), float32] */;
    %782 = @func_718(%781) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(3, 20), float32]) */;
    %783 = @func_6868() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %784 = %778.0;
    %785 = %779.0;
    %786 = %782.0;
    %787 = %783.4;
    (%784, %785, %786, %var_10019, %787)
  };
  %788(%var_10038) /* ty=(Tensor[(8, 13, 10), float32], Tensor[(9, 10, 6), bool], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */
}

def @func_13531() -> (Tensor[(60), float32],) {
  %791 = fn () -> (Tensor[(60), float32],) {
    %789 = @func_1579() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
    %790 = %789.1;
    (%790,)
  };
  %791() /* ty=(Tensor[(60), float32],) */
}

def @func_1947() -> (Tensor[(9, 10, 6), bool],) {
  %792 = @func_1818() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool], Tensor[(540), uint8]) */;
  %793 = %792.1;
  (%793,)
}

def @func_2479() -> Tensor[(15, 10, 3), float64] {
  @func_588() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_10468(%var_10466: Tensor[(280), int16]) -> (Tensor[(15, 10, 3), float32], Tensor[(280), int16], Tensor[(280), int16]) {
  @func_10465(%var_10466) /* ty=(Tensor[(15, 10, 3), float32], Tensor[(280), int16], Tensor[(280), int16]) */
}

def @func_14073() -> (Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  @func_14071() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_6934(%var_6932: Tensor[(280), int16]) -> (Tensor[(15, 10, 3), float64], Tensor[(280), int16], Tensor[(280), int16], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) {
  @func_6931(%var_6932) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(280), int16], Tensor[(280), int16], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */
}

def @func_14197() -> Tensor[(60), float32] {
  @func_14195() /* ty=Tensor[(60), float32] */
}

def @func_16068() -> (Tensor[(4, 10, 13), bool], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  @func_16066() /* ty=(Tensor[(4, 10, 13), bool], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_10465(%var_10454: Tensor[(280), int16]) -> (Tensor[(15, 10, 3), float32], Tensor[(280), int16], Tensor[(280), int16]) {
  %794 = @func_2479() /* ty=Tensor[(15, 10, 3), float64] */;
  %795 = cast(%794, dtype="float32") /* ty=Tensor[(15, 10, 3), float32] */;
  %796 = cast(%var_10454, dtype="int16") /* ty=Tensor[(280), int16] */;
  %797 = reshape(%796, newshape=[280]) /* ty=Tensor[(280), int16] */;
  %798 = @func_2629(%797) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(5, 4, 14), int16], Tensor[(280), int16]) */;
  %799 = sin(%795) /* ty=Tensor[(15, 10, 3), float32] */;
  %800 = %798.2;
  (%799, %800, %var_10454)
}

def @func_11377(%var_11375: Tensor[(462), float64]) -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(462), float64], Tensor[(15, 10, 3), float64]) {
  @func_11374(%var_11375) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(462), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_12259() -> (Tensor[(4, 9, 5), float32], Tensor[(15, 10, 3), float64]) {
  %801 = @func_4045() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %802 = @func_4340() /* ty=Tensor[(4, 9, 5), float32] */;
  %803 = %801.0;
  (%802, %803)
}

def @func_2979() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(280), int16]) {
  @func_2977() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(280), int16]) */
}

def @func_10410() -> Tensor[(15, 10, 3), float64] {
  %804 = @func_5110() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %804.0
}

def @func_2867() -> (Tensor[(15, 10, 3), float64],) {
  %806 = fn () -> (Tensor[(15, 10, 3), float64],) {
    %805 = @func_314() /* ty=Tensor[(15, 10, 3), float64] */;
    (%805,)
  };
  %806() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_4315() -> (Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) {
  %807 = @func_2844() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %808 = %807.0;
  %809 = @func_2726() /* ty=Tensor[(8, 13, 10), float32] */;
  (%808, %809)
}

def @func_12355() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  @func_12353() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_8488() -> Tensor[(15, 10, 3), float64] {
  @func_937() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_6480() -> Tensor[(15, 10, 3), float64] {
  @func_4149() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_17573(%var_17553: Tensor[(8, 12, 10), int16]) -> (Tensor[(8, 12, 10), bool], Tensor[(15, 10, 3), float64]) {
  %810 = cast(%var_17553, dtype="bool") /* ty=Tensor[(8, 12, 10), bool] */;
  %811 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(8, 12, 10), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %812 = cast(meta[relay.Constant][23] /* ty=Tensor[(8, 12, 10), int16] */, dtype="bool") /* ty=Tensor[(8, 12, 10), bool] */;
  %813 = dyn.reshape(%810, %811, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %814 = @func_9276() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %815 = greater(%812, %813) /* ty=Tensor[(8, 12, 10), bool] */;
  %816 = %814.0;
  (%815, %816)
}

def @func_1820() -> (Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool], Tensor[(540), uint8]) {
  @func_1818() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool], Tensor[(540), uint8]) */
}

def @func_5717() -> Tensor[(15, 10, 3), float64] {
  @func_5715() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_14547() -> Tensor[(15, 10, 3), float64] {
  %818 = fn () -> Tensor[(15, 10, 3), float64] {
    %817 = @func_2844() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %817.0
  };
  %818() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_5470(%var_5468: Tensor[(16, 5, 13), float32]) -> (Tensor[(16, 5, 13), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  @func_5467(%var_5468) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_21119() -> (Tensor[(9, 10, 6), bool], Tensor[(15, 10, 3), float64]) {
  %822 = fn () -> (Tensor[(9, 10, 6), bool], Tensor[(15, 10, 3), float64]) {
    %819 = @func_16432() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) */;
    %820 = %819.2;
    %821 = @func_12057() /* ty=Tensor[(15, 10, 3), float64] */;
    (%820, %821)
  };
  %822() /* ty=(Tensor[(9, 10, 6), bool], Tensor[(15, 10, 3), float64]) */
}

def @func_18614() -> (Tensor[(15, 10, 3), uint64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(10, 14, 15), float64]) {
  %830 = fn () -> (Tensor[(15, 10, 3), uint64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(10, 14, 15), float64]) {
    %823 = @func_1641() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), uint64]) */;
    %824 = @func_16432() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) */;
    %825 = @func_14278() /* ty=(Tensor[(10, 14, 15), float64],) */;
    %826 = %823.1;
    %827 = %824.1;
    %828 = @func_14510() /* ty=Tensor[(15, 10, 3), float64] */;
    %829 = %825.0;
    (%826, %827, %828, %829)
  };
  %830() /* ty=(Tensor[(15, 10, 3), uint64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(10, 14, 15), float64]) */
}

def @func_9378() -> (Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) {
  @func_9376() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */
}

def @func_12841() -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32]) {
  %831 = @func_3090() /* ty=(Tensor[(60), float32],) */;
  %832 = @func_10410() /* ty=Tensor[(15, 10, 3), float64] */;
  %833 = %831.0;
  (%832, %833)
}

def @func_8956() -> Tensor[(15, 10, 3), float64] {
  %834 = @func_7305() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %834.1
}

def @func_10365(%var_10363: Tensor[(12, 14, 4), float32], %var_10364: Tensor[(12, 14, 4), float32]) -> Tensor[(12, 14, 4), float32] {
  @func_10361(%var_10363, %var_10364) /* ty=Tensor[(12, 14, 4), float32] */
}

def @func_1663() -> Tensor[(15, 10, 3), float64] {
  @func_1661() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_17728() -> Tensor[(15, 10, 3), float64] {
  %836 = fn () -> Tensor[(15, 10, 3), float64] {
    %835 = @func_8667() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %835.0
  };
  %836() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_12261() -> (Tensor[(4, 9, 5), float32], Tensor[(15, 10, 3), float64]) {
  @func_12259() /* ty=(Tensor[(4, 9, 5), float32], Tensor[(15, 10, 3), float64]) */
}

def @func_6696(%var_6694: Tensor[(520), uint16]) -> (Tensor[(4, 9, 5), float32], Tensor[(4, 10, 13), bool], Tensor[(520), uint16], Tensor[(60), float32]) {
  @func_6693(%var_6694) /* ty=(Tensor[(4, 9, 5), float32], Tensor[(4, 10, 13), bool], Tensor[(520), uint16], Tensor[(60), float32]) */
}

def @func_21072(%var_21037: Tensor[(1320), float64]) -> (Tensor[(9, 10, 6), bool], Tensor[(12, 11, 10), float64], Tensor[(1320), float64], Tensor[(15, 10, 3), float64]) {
  %837 = @func_5358() /* ty=(Tensor[(60), float32], Tensor[(9, 10, 6), bool]) */;
  %838 = cast(%var_21037, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %839 = reshape(%838, newshape=[12, 11, 10]) /* ty=Tensor[(12, 11, 10), float64] */;
  %840 = @func_13127(%839) /* ty=(Tensor[(12, 11, 10), float64],) */;
  %841 = @func_6832() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */;
  %842 = %837.1;
  %843 = %840.0;
  %844 = %841.1;
  (%842, %843, %var_21037, %844)
}

def @func_17038(%var_17036: Tensor[(10, 78), int64]) -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(13, 5, 12), bool], Tensor[(10, 78), int64]) {
  %845 = @func_16200() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %846 = @func_6111() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %847 = cast(%var_17036, dtype="int64") /* ty=Tensor[(10, 78), int64] */;
  %848 = cast(%var_17036, dtype="int64") /* ty=Tensor[(10, 78), int64] */;
  %849 = reshape(%847, newshape=[13, 5, 12]) /* ty=Tensor[(13, 5, 12), int64] */;
  %850 = reshape(%848, newshape=[13, 5, 12]) /* ty=Tensor[(13, 5, 12), int64] */;
  %851 = %845.0;
  %852 = %846.1;
  %853 = @func_2876(%849, %850) /* ty=Tensor[(13, 5, 12), bool] */;
  (%851, %852, %853, %var_17036)
}

def @func_12574() -> (Tensor[(15, 10, 3), float64],) {
  @func_12572() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_13437() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %858 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
    %854 = @func_1305() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %855 = @func_12572() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %856 = %854.3;
    %857 = %855.0;
    (%856, %857)
  };
  %858() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_2036() -> (Tensor[(15, 10, 3), float64],) {
  %859 = @func_198() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %860 = %859.0;
  %861 = cast(%860, dtype="float64") /* ty=Tensor[(15, 10, 3), float64] */;
  %862 = cos(%861) /* ty=Tensor[(15, 10, 3), float64] */;
  (%862,)
}

def @func_14435() -> (Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32], Tensor[(60), float32]) {
  %868 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32], Tensor[(60), float32]) {
    %863 = @func_8083() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %864 = @func_9376() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */;
    %865 = %863.1;
    %866 = %864.1;
    %867 = @func_10707() /* ty=Tensor[(60), float32] */;
    (%865, %866, %867)
  };
  %868() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32], Tensor[(60), float32]) */
}

def @func_17321(%var_17319: Tensor[(8, 13, 10), float32]) -> (Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32], Tensor[(8, 13, 10), bool]) {
  @func_17318(%var_17319) /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32], Tensor[(8, 13, 10), bool]) */
}

def @func_14318() -> Tensor[(15, 10, 3), float64] {
  %869 = @func_8690() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %869.0
}

def @func_16246() -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32]) {
  %870 = @func_6959() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %871 = @func_2130() /* ty=Tensor[(15, 10, 3), float64] */;
  %872 = %870.1;
  (%871, %872)
}

def @func_2591() -> (Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) {
  @func_2589() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) */
}

def @func_2332(%var_2331: Tensor[(4, 10, 13), uint16]) -> (Tensor[(4, 10, 13), bool], Tensor[(15, 10, 3), float64], Tensor[(4, 10, 13), float64]) {
  %881 = fn (%var_2312: Tensor[(4, 10, 13), uint16]) -> (Tensor[(4, 10, 13), bool], Tensor[(15, 10, 3), float64], Tensor[(4, 10, 13), float64]) {
    %873 = cast(meta[relay.Constant][24] /* ty=Tensor[(4, 10, 1), uint16] */, dtype="bool") /* ty=Tensor[(4, 10, 1), bool] */;
    %874 = cast(%var_2312, dtype="bool") /* ty=Tensor[(4, 10, 13), bool] */;
    %875 = cast(%var_2312, dtype="float32") /* ty=Tensor[(4, 10, 13), float32] */;
    %876 = tan(%875) /* ty=Tensor[(4, 10, 13), float32] */;
    %877 = cast(%876, dtype="float64") /* ty=Tensor[(4, 10, 13), float64] */;
    %878 = less_equal(%873, %874) /* ty=Tensor[(4, 10, 13), bool] */;
    %879 = @func_376() /* ty=Tensor[(15, 10, 3), float64] */;
    %880 = exp(%877) /* ty=Tensor[(4, 10, 13), float64] */;
    (%878, %879, %880)
  };
  %881(%var_2331) /* ty=(Tensor[(4, 10, 13), bool], Tensor[(15, 10, 3), float64], Tensor[(4, 10, 13), float64]) */
}

def @func_9164() -> (Tensor[(15, 10, 3), uint64], Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) {
  %887 = fn () -> (Tensor[(15, 10, 3), uint64], Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) {
    %882 = @func_8510() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), uint64]) */;
    %883 = @func_2589() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) */;
    %884 = %882.1;
    %885 = @func_937() /* ty=Tensor[(15, 10, 3), float64] */;
    %886 = %883.1;
    (%884, %885, %886)
  };
  %887() /* ty=(Tensor[(15, 10, 3), uint64], Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) */
}

def @func_15795(%var_15765: Tensor[(280), int16]) -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(5, 4, 14), int16], Tensor[(280), int16], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) {
  %888 = @func_2401() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %889 = @func_6832() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */;
  %890 = cast(%var_15765, dtype="int16") /* ty=Tensor[(280), int16] */;
  %891 = cast(%var_15765, dtype="int16") /* ty=Tensor[(280), int16] */;
  %892 = reshape(%890, newshape=[5, 4, 14]) /* ty=Tensor[(5, 4, 14), int16] */;
  %893 = reshape(%891, newshape=[5, 4, 14]) /* ty=Tensor[(5, 4, 14), int16] */;
  %894 = @func_1579() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %895 = @func_5967() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %896 = %888.1;
  %897 = @func_666() /* ty=Tensor[(15, 10, 3), float64] */;
  %898 = %889.0;
  %899 = @func_2160(%892, %893) /* ty=Tensor[(5, 4, 14), int16] */;
  %900 = %894.1;
  %901 = %895.0;
  (%896, %897, %898, %899, %var_15765, %900, %901)
}

def @func_13277() -> (Tensor[(15, 10, 3), float64],) {
  @func_13275() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_14278() -> (Tensor[(10, 14, 15), float64],) {
  %902 = @func_9085() /* ty=Tensor[(10, 14, 15), float64] */;
  (%902,)
}

def @func_6452(%var_6450: float32, %var_6451: Tensor[(2, 12, 6), float32]) -> Tensor[(2, 12, 6), float32] {
  %905 = fn (%var_6441: float32, %var_6442: Tensor[(2, 12, 6), float32]) -> Tensor[(2, 12, 6), float32] {
    %903 = cast(%var_6441, dtype="float32") /* ty=float32 */;
    %904 = cast(%var_6442, dtype="float32") /* ty=Tensor[(2, 12, 6), float32] */;
    divide(%903, %904) /* ty=Tensor[(2, 12, 6), float32] */
  };
  %905(%var_6450, %var_6451) /* ty=Tensor[(2, 12, 6), float32] */
}

def @func_657(%var_656: Tensor[(60, 1), float32]) -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60, 1), float32]) {
  %916 = fn (%var_634: Tensor[(60, 1), float32]) -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60, 1), float32]) {
    %906 = @func_167() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %907 = @func_359() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %908 = @func_167() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %909 = cast(%var_634, dtype="float32") /* ty=Tensor[(60, 1), float32] */;
    %910 = reshape(%909, newshape=[5, 12, 1]) /* ty=Tensor[(5, 12, 1), float32] */;
    %911 = @func_484(%910) /* ty=(Tensor[(5, 12, 1), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %912 = %906.0;
    %913 = %907.2;
    %914 = %908.0;
    %915 = %911.2;
    (%912, %913, %914, %915, %var_634)
  };
  %916(%var_656) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60, 1), float32]) */
}

def @func_16629() -> Tensor[(4, 6, 7), float32] {
  %917 = cast(meta[relay.Constant][25] /* ty=Tensor[(4, 6, 7), float32] */, dtype="float32") /* ty=Tensor[(4, 6, 7), float32] */;
  asin(%917) /* ty=Tensor[(4, 6, 7), float32] */
}

def @func_4440(%var_4438: Tensor[(10, 16, 8), int64], %var_4439: Tensor[(10, 16, 8), int64]) -> (Tensor[(10, 16, 8), int16],) {
  @func_4436(%var_4438, %var_4439) /* ty=(Tensor[(10, 16, 8), int16],) */
}

def @func_17493() -> Tensor[(10, 14, 15), float64] {
  @func_9085() /* ty=Tensor[(10, 14, 15), float64] */
}

def @func_8780() -> Tensor[(60), float32] {
  %919 = fn () -> Tensor[(60), float32] {
    %918 = @func_5662() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
    %918.2
  };
  %919() /* ty=Tensor[(60), float32] */
}

def @func_8434() -> (Tensor[(9, 10, 6), bool], Tensor[(60), float32]) {
  @func_8432() /* ty=(Tensor[(9, 10, 6), bool], Tensor[(60), float32]) */
}

def @func_19877(%var_19875: Tensor[(9, 4, 16), float64], %var_19876: Tensor[(9, 4, 16), float64]) -> (Tensor[(9, 4, 16), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(60), float32]) {
  @func_19873(%var_19875, %var_19876) /* ty=(Tensor[(9, 4, 16), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(60), float32]) */
}

def @func_1791() -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32]) {
  %920 = @func_167() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %921 = @func_1579() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %922 = %920.0;
  %923 = %921.1;
  (%922, %923)
}

def @func_7092() -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) {
  %931 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) {
    %924 = @func_4133() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(450), float64], Tensor[(15, 10, 3), float64]) */;
    %925 = @func_5662() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
    %926 = @func_1947() /* ty=(Tensor[(9, 10, 6), bool],) */;
    %927 = %924.3;
    %928 = %925.2;
    %929 = @func_314() /* ty=Tensor[(15, 10, 3), float64] */;
    %930 = %926.0;
    (%927, %928, %929, %930)
  };
  %931() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) */
}

def @func_20308() -> Tensor[(60), float32] {
  %933 = fn () -> Tensor[(60), float32] {
    %932 = @func_14609() /* ty=(Tensor[(60), float32],) */;
    %932.0
  };
  %933() /* ty=Tensor[(60), float32] */
}

def @func_198() -> (Tensor[(15, 10, 3), float64],) {
  %934 = @func_184() /* ty=Tensor[(15, 10, 3), float64] */;
  (%934,)
}

def @func_19911() -> (Tensor[(15, 10, 3), float64],) {
  @func_19909() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_16991() -> (Tensor[(4, 6, 7), float64], Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) {
  %935 = @func_16629() /* ty=Tensor[(4, 6, 7), float32] */;
  %936 = cast(%935, dtype="float64") /* ty=Tensor[(4, 6, 7), float64] */;
  %937 = @func_1726() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %938 = erf(%936) /* ty=Tensor[(4, 6, 7), float64] */;
  %939 = %937.4;
  %940 = @func_2726() /* ty=Tensor[(8, 13, 10), float32] */;
  (%938, %939, %940)
}

def @func_5960() -> (Tensor[(60), float32], Tensor[(60, ?), uint16]) {
  @func_5958() /* ty=(Tensor[(60), float32], Tensor[(60, ?), uint16]) */
}

def @func_21230() -> (Tensor[(8, 7, 11), bool], Tensor[(60, 1), float32], Tensor[(60), float32], Tensor[(9, 10, 6), bool], Tensor[(15, 10, 3), float64]) {
  %951 = fn () -> (Tensor[(8, 7, 11), bool], Tensor[(60, 1), float32], Tensor[(60), float32], Tensor[(9, 10, 6), bool], Tensor[(15, 10, 3), float64]) {
    %941 = @func_19726() /* ty=(Tensor[(8, 7, 11), bool],) */;
    %942 = cast(meta[relay.Constant][26] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
    %943 = reshape(%942, newshape=[60, 1]) /* ty=Tensor[(60, 1), float32] */;
    %944 = @func_655(%943) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60, 1), float32]) */;
    %945 = @func_13734() /* ty=(Tensor[(9, 10, 6), bool],) */;
    %946 = @func_4889() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(60), float32], Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64]) */;
    %947 = %941.0;
    %948 = %944.4;
    %949 = %945.0;
    %950 = %946.1;
    (%947, %948, meta[relay.Constant][26] /* ty=Tensor[(60), float32] */, %949, %950)
  };
  %951() /* ty=(Tensor[(8, 7, 11), bool], Tensor[(60, 1), float32], Tensor[(60), float32], Tensor[(9, 10, 6), bool], Tensor[(15, 10, 3), float64]) */
}

def @func_12353() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %952 = @func_258() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %953 = @func_359() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %954 = %952.0;
  %955 = %953.2;
  (%954, %955)
}

def @func_19021() -> (Tensor[(4, 9, 5), float32], Tensor[(15, 10, 3), float64]) {
  @func_19019() /* ty=(Tensor[(4, 9, 5), float32], Tensor[(15, 10, 3), float64]) */
}

def @func_16381(%var_16380: Tensor[(11, 15, 5), float64]) -> (Tensor[(11, 15, 5), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %970 = fn (%var_16359: Tensor[(11, 15, 5), float64]) -> (Tensor[(11, 15, 5), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
    %956 = cast(%var_16359, dtype="float64") /* ty=Tensor[(11, 15, 5), float64] */;
    %957 = atan(%956) /* ty=Tensor[(11, 15, 5), float64] */;
    %958 = cast(meta[relay.Constant][27] /* ty=Tensor[(11, 15, 5), float64] */, dtype="float32") /* ty=Tensor[(11, 15, 5), float32] */;
    %959 = shape_of(%957, dtype="int32") /* ty=Tensor[(3), int32] */;
    %960 = cast(%957, dtype="float32") /* ty=Tensor[(11, 15, 5), float32] */;
    %961 = dyn.reshape(%958, %959, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %962 = @func_8956() /* ty=Tensor[(15, 10, 3), float64] */;
    %963 = cast(%962, dtype="float64") /* ty=Tensor[(15, 10, 3), float64] */;
    %964 = cast(%962, dtype="bool") /* ty=Tensor[(15, 10, 3), bool] */;
    %965 = reshape(%963, newshape=[15, 10, 3]) /* ty=Tensor[(15, 10, 3), float64] */;
    %966 = reshape(%964, newshape=[15, 10, 3]) /* ty=Tensor[(15, 10, 3), bool] */;
    %967 = @func_1135(%965, %966) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), int32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %968 = divide(%960, %961) /* ty=Tensor[(11, 15, 5), float32] */;
    %969 = %967.1;
    (%968, %962, %969)
  };
  %970(%var_16380) /* ty=(Tensor[(11, 15, 5), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_14195() -> Tensor[(60), float32] {
  %971 = @func_8432() /* ty=(Tensor[(9, 10, 6), bool], Tensor[(60), float32]) */;
  %971.1
}

def @func_9616(%var_9614: Tensor[(672), uint16]) -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(4, 9, 5), float32], Tensor[(4, 9, 5), float32], Tensor[(15, 10, 3), float64], Tensor[(672), uint16], Tensor[(10, 14, 15), float64]) {
  @func_9613(%var_9614) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(4, 9, 5), float32], Tensor[(4, 9, 5), float32], Tensor[(15, 10, 3), float64], Tensor[(672), uint16], Tensor[(10, 14, 15), float64]) */
}

def @func_361() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  @func_359() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_13659() -> (Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64]) {
  %972 = @func_9376() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */;
  %973 = @func_4133() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(450), float64], Tensor[(15, 10, 3), float64]) */;
  %974 = %972.1;
  %975 = %973.3;
  (%974, %975)
}

def @func_5112() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  @func_5110() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_18648() -> (Tensor[(60), float32], Tensor[(8, 13, 10), float32]) {
  %976 = @func_13530() /* ty=(Tensor[(60), float32],) */;
  %977 = @func_14301() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */;
  %978 = %976.0;
  %979 = %977.1;
  (%978, %979)
}

def @func_7462(%var_7433: Tensor[(8, 14, 6), uint16], %var_7434: Tensor[(8, 14, 6), uint16]) -> (Tensor[(8, 14, 6), bool], Tensor[(15, 10, 3), float64], Tensor[(8, 7, 11), uint64], Tensor[(616), bool], Tensor[(15, 10, 3), float64]) {
  %980 = cast(%var_7434, dtype="bool") /* ty=Tensor[(8, 14, 6), bool] */;
  %981 = shape_of(%var_7433, dtype="int32") /* ty=Tensor[(3), int32] */;
  %982 = cast(%var_7433, dtype="bool") /* ty=Tensor[(8, 14, 6), bool] */;
  %983 = dyn.reshape(%980, %981, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %984 = @func_2785() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %985 = cast(meta[relay.Constant][28] /* ty=Tensor[(616), bool] */, dtype="bool") /* ty=Tensor[(616), bool] */;
  %986 = cast(meta[relay.Constant][28] /* ty=Tensor[(616), bool] */, dtype="bool") /* ty=Tensor[(616), bool] */;
  %987 = reshape(%985, newshape=[8, 7, 11]) /* ty=Tensor[(8, 7, 11), bool] */;
  %988 = reshape(%986, newshape=[8, 7, 11]) /* ty=Tensor[(8, 7, 11), bool] */;
  %989 = @func_6991(%987, %988) /* ty=(Tensor[(8, 7, 11), bool], Tensor[(8, 7, 11), uint64], Tensor[(15, 10, 3), float64], Tensor[(8, 7, 11), float64]) */;
  %990 = @func_7305() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %991 = less_equal(%982, %983) /* ty=Tensor[(8, 14, 6), bool] */;
  %992 = %984.0;
  %993 = %989.1;
  %994 = %990.1;
  (%991, %992, %993, meta[relay.Constant][28] /* ty=Tensor[(616), bool] */, %994)
}

def @func_9227(%var_9224: Tensor[(9, 10, 11), int8], %var_9225: Tensor[(9, 10, 11), int8], %var_9226: Tensor[(144), float32]) -> (Tensor[(9, 10, 11), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(2, 12, 6), float32], float32, Tensor[(144), float32]) {
  %1011 = fn (%var_9165: Tensor[(9, 10, 11), int8], %var_9166: Tensor[(9, 10, 11), int8], %var_9213: Tensor[(144), float32]) -> (Tensor[(9, 10, 11), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(2, 12, 6), float32], float32, Tensor[(144), float32]) {
    %995 = cast(%var_9166, dtype="int8") /* ty=Tensor[(9, 10, 11), int8] */;
    %996 = shape_of(%var_9165, dtype="int32") /* ty=Tensor[(3), int32] */;
    %997 = cast(%var_9165, dtype="int8") /* ty=Tensor[(9, 10, 11), int8] */;
    %998 = dyn.reshape(%995, %996, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %999 = right_shift(%997, %998) /* ty=Tensor[(9, 10, 11), int8] */;
    %1000 = cast(%999, dtype="float64") /* ty=Tensor[(9, 10, 11), float64] */;
    %1001 = @func_5698() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
    %1002 = @func_5110() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %1003 = cast(-5.55754f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %1004 = cast(%var_9213, dtype="float32") /* ty=Tensor[(144), float32] */;
    %1005 = reshape(%1003, newshape=[]) /* ty=float32 */;
    %1006 = reshape(%1004, newshape=[2, 12, 6]) /* ty=Tensor[(2, 12, 6), float32] */;
    %1007 = atanh(%1000) /* ty=Tensor[(9, 10, 11), float64] */;
    %1008 = %1001.0;
    %1009 = %1002.1;
    %1010 = @func_6449(%1005, %1006) /* ty=Tensor[(2, 12, 6), float32] */;
    (%1007, %1008, %1009, %1010, -5.55754f /* ty=float32 */, %var_9213)
  };
  %1011(%var_9224, %var_9225, %var_9226) /* ty=(Tensor[(9, 10, 11), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(2, 12, 6), float32], float32, Tensor[(144), float32]) */
}

def @func_14712() -> Tensor[(15, 10, 3), float64] {
  @func_14710() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_4045() -> (Tensor[(15, 10, 3), float64],) {
  %1012 = @func_300() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1013 = %1012.0;
  (%1013,)
}

def @func_15527() -> (Tensor[(84, 12), float32], Tensor[(84, 12), float32]) {
  @func_15525() /* ty=(Tensor[(84, 12), float32], Tensor[(84, 12), float32]) */
}

def @func_20173() -> Tensor[(3, 11, 12), uint32] {
  %1014 = cast(meta[relay.Constant][30] /* ty=Tensor[(3, 11, 12), uint32] */, dtype="uint32") /* ty=Tensor[(3, 11, 12), uint32] */;
  %1015 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(3, 11, 12), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1016 = cast(meta[relay.Constant][29] /* ty=Tensor[(3, 11, 12), uint32] */, dtype="uint32") /* ty=Tensor[(3, 11, 12), uint32] */;
  %1017 = dyn.reshape(%1014, %1015, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  add(%1016, %1017) /* ty=Tensor[(3, 11, 12), uint32] */
}

def @func_5580(%var_5578: Tensor[(3, 20), float32]) -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool], Tensor[(15, 10, 3), float64], Tensor[(3, 20), float32], Tensor[(60), float32], Tensor[(60), float32], Tensor[(4, 9, 5), float32], Tensor[(60), float32]) {
  @func_5577(%var_5578) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool], Tensor[(15, 10, 3), float64], Tensor[(3, 20), float32], Tensor[(60), float32], Tensor[(60), float32], Tensor[(4, 9, 5), float32], Tensor[(60), float32]) */
}

def @func_17539(%var_17537: int8, %var_17538: Tensor[(2, 4, 14), int8]) -> (Tensor[(2, 4, 14), int8],) {
  %1021 = fn (%var_17528: int8, %var_17529: Tensor[(2, 4, 14), int8]) -> (Tensor[(2, 4, 14), int8],) {
    %1018 = cast(%var_17528, dtype="int8") /* ty=int8 */;
    %1019 = cast(%var_17529, dtype="int8") /* ty=Tensor[(2, 4, 14), int8] */;
    %1020 = bitwise_xor(%1018, %1019) /* ty=Tensor[(2, 4, 14), int8] */;
    (%1020,)
  };
  %1021(%var_17537, %var_17538) /* ty=(Tensor[(2, 4, 14), int8],) */
}

def @func_3458(%var_3456: Tensor[(60, 1), float32]) -> (Tensor[(15, 10, 3), float64], Tensor[(60, ?), bool]) {
  @func_3455(%var_3456) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60, ?), bool]) */
}

def @func_17318(%var_17302: Tensor[(8, 13, 10), float32]) -> (Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32], Tensor[(8, 13, 10), bool]) {
  %1022 = @func_9436() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1023 = @func_8331() /* ty=(Tensor[(8, 13, 10), float32],) */;
  %1024 = @func_8403() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(4, 9, 5), float32]) */;
  %1025 = %1024.0;
  %1026 = cast(%var_17302, dtype="bool") /* ty=Tensor[(8, 13, 10), bool] */;
  %1027 = shape_of(%1025, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1028 = cast(%1025, dtype="bool") /* ty=Tensor[(8, 13, 10), bool] */;
  %1029 = dyn.reshape(%1026, %1027, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1030 = @func_14195() /* ty=Tensor[(60), float32] */;
  %1031 = %1022.0;
  %1032 = @func_14102() /* ty=Tensor[(15, 10, 3), float64] */;
  %1033 = %1023.0;
  %1034 = equal(%1028, %1029) /* ty=Tensor[(8, 13, 10), bool] */;
  (%1030, %1031, %1032, %1033, %1034)
}

def @func_11527() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1035 = @func_6868() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1036 = @func_6904() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1037 = %1035.2;
  %1038 = %1036.0;
  (%1037, %1038)
}

def @func_2401() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1039 = @func_167() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1040 = @func_2036() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1041 = %1039.0;
  %1042 = %1040.0;
  (%1041, %1042)
}

def @func_8432() -> (Tensor[(9, 10, 6), bool], Tensor[(60), float32]) {
  %1043 = @func_5358() /* ty=(Tensor[(60), float32], Tensor[(9, 10, 6), bool]) */;
  %1044 = @func_3090() /* ty=(Tensor[(60), float32],) */;
  %1045 = %1043.1;
  %1046 = %1044.0;
  (%1045, %1046)
}

def @func_14802(%var_14789: Tensor[(4, 8, 12), float64]) -> (Tensor[(4, 8, 12), float64],) {
  %1047 = cast(meta[relay.Constant][31] /* ty=Tensor[(4, 8, 12), float64] */, dtype="float64") /* ty=Tensor[(4, 8, 12), float64] */;
  %1048 = shape_of(%var_14789, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1049 = cast(%var_14789, dtype="float64") /* ty=Tensor[(4, 8, 12), float64] */;
  %1050 = dyn.reshape(%1047, %1048, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1051 = add(%1049, %1050) /* ty=Tensor[(4, 8, 12), float64] */;
  (%1051,)
}

def @func_19727() -> (Tensor[(8, 7, 11), bool],) {
  %1054 = fn () -> (Tensor[(8, 7, 11), bool],) {
    %1052 = @func_10165() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(8, 7, 11), bool]) */;
    %1053 = %1052.2;
    (%1053,)
  };
  %1054() /* ty=(Tensor[(8, 7, 11), bool],) */
}

def @func_12065() -> Tensor[(15, 10, 3), float64] {
  @func_2198() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_1306() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1061 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
    %1055 = @func_1181() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %1056 = @func_167() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %1057 = @func_588() /* ty=Tensor[(15, 10, 3), float64] */;
    %1058 = %1055.0;
    %1059 = %1056.0;
    %1060 = @func_376() /* ty=Tensor[(15, 10, 3), float64] */;
    (%1057, %1058, %1059, %1060)
  };
  %1061() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_21415(%var_21414: Tensor[(540), uint8]) -> (Tensor[(15, 10, 3), float64], Tensor[(4, 9, 5), float32], Tensor[(540), uint8], Tensor[(15, 10, 3), float64], Tensor[(520), uint16], Tensor[(9, 10, 6), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(280), int16]) {
  %1082 = fn (%var_21357: Tensor[(540), uint8]) -> (Tensor[(15, 10, 3), float64], Tensor[(4, 9, 5), float32], Tensor[(540), uint8], Tensor[(15, 10, 3), float64], Tensor[(520), uint16], Tensor[(9, 10, 6), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(280), int16]) {
    %1062 = @func_11899() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(4, 9, 5), float32]) */;
    %1063 = cast(meta[relay.Constant][32] /* ty=Tensor[(520), uint16] */, dtype="uint16") /* ty=Tensor[(520), uint16] */;
    %1064 = reshape(%1063, newshape=[520]) /* ty=Tensor[(520), uint16] */;
    %1065 = @func_12461(%1064) /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(4, 10, 13), bool], Tensor[(520), uint16]) */;
    %1066 = cast(%var_21357, dtype="uint8") /* ty=Tensor[(540), uint8] */;
    %1067 = cast(%var_21357, dtype="uint8") /* ty=Tensor[(540), uint8] */;
    %1068 = reshape(%1066, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), uint8] */;
    %1069 = reshape(%1067, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), uint8] */;
    %1070 = @func_811(%1068, %1069) /* ty=(Tensor[(9, 10, 6), bool],) */;
    %1071 = %1070.0;
    %1072 = cast(%1071, dtype="float64") /* ty=Tensor[(9, 10, 6), float64] */;
    %1073 = cast(meta[relay.Constant][33] /* ty=Tensor[(280), int16] */, dtype="int16") /* ty=Tensor[(280), int16] */;
    %1074 = reshape(%1073, newshape=[280]) /* ty=Tensor[(280), int16] */;
    %1075 = @func_6931(%1074) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(280), int16], Tensor[(280), int16], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
    %1076 = @func_14546() /* ty=Tensor[(15, 10, 3), float64] */;
    %1077 = %1062.1;
    %1078 = %1065.1;
    %1079 = acos(%1072) /* ty=Tensor[(9, 10, 6), float64] */;
    %1080 = @func_10410() /* ty=Tensor[(15, 10, 3), float64] */;
    %1081 = %1075.0;
    (%1076, %1077, %var_21357, %1078, meta[relay.Constant][32] /* ty=Tensor[(520), uint16] */, %1079, %1080, %1081, meta[relay.Constant][33] /* ty=Tensor[(280), int16] */)
  };
  %1082(%var_21414) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(4, 9, 5), float32], Tensor[(540), uint8], Tensor[(15, 10, 3), float64], Tensor[(520), uint16], Tensor[(9, 10, 6), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(280), int16]) */
}

def @func_6198() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32]) {
  %1090 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32]) {
    %1083 = @func_3809() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) */;
    %1084 = @func_3329() /* ty=(Tensor[(60), float32],) */;
    %1085 = @func_376() /* ty=Tensor[(15, 10, 3), float64] */;
    %1086 = @func_666() /* ty=Tensor[(15, 10, 3), float64] */;
    %1087 = @func_1661() /* ty=Tensor[(15, 10, 3), float64] */;
    %1088 = %1083.0;
    %1089 = %1084.0;
    (%1085, %1086, %1087, %1088, %1089)
  };
  %1090() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */
}

def @func_9995() -> Tensor[(15, 10, 3), float64] {
  @func_9993() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_8510() -> (Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), uint64]) {
  %1091 = @func_8331() /* ty=(Tensor[(8, 13, 10), float32],) */;
  %1092 = %1091.0;
  %1093 = @func_2659() /* ty=Tensor[(15, 10, 3), uint64] */;
  (%1092, %1093)
}

def @func_17338() -> Tensor[(15, 10, 3), uint64] {
  %1094 = @func_4031() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), uint64]) */;
  %1094.1
}

def @func_259() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1105 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
    %1095 = @func_167() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %1096 = @func_198() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %1097 = @func_198() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %1098 = @func_167() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %1099 = @func_167() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %1100 = %1095.0;
    %1101 = %1096.0;
    %1102 = %1097.0;
    %1103 = %1098.0;
    %1104 = %1099.0;
    (%1100, %1101, %1102, %1103, %1104)
  };
  %1105() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_2787() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  @func_2785() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_8287(%var_8286: Tensor[(13, 3, 15), float64]) -> (Tensor[(13, 3, 15), float64], Tensor[(8, 13, 10), float32]) {
  %1109 = fn (%var_8272: Tensor[(13, 3, 15), float64]) -> (Tensor[(13, 3, 15), float64], Tensor[(8, 13, 10), float32]) {
    %1106 = cast(%var_8272, dtype="float64") /* ty=Tensor[(13, 3, 15), float64] */;
    %1107 = tan(%1106) /* ty=Tensor[(13, 3, 15), float64] */;
    %1108 = @func_3486() /* ty=Tensor[(8, 13, 10), float32] */;
    (%1107, %1108)
  };
  %1109(%var_8286) /* ty=(Tensor[(13, 3, 15), float64], Tensor[(8, 13, 10), float32]) */
}

def @func_5758() -> Tensor[(10, 14, 15), float64] {
  %1111 = fn () -> Tensor[(10, 14, 15), float64] {
    %1110 = cast(meta[relay.Constant][34] /* ty=Tensor[(10, 14, 15), float64] */, dtype="float64") /* ty=Tensor[(10, 14, 15), float64] */;
    tan(%1110) /* ty=Tensor[(10, 14, 15), float64] */
  };
  %1111() /* ty=Tensor[(10, 14, 15), float64] */
}

def @func_15479() -> (Tensor[(10, 16, 8), int16], Tensor[(60), float32]) {
  %1115 = fn () -> (Tensor[(10, 16, 8), int16], Tensor[(60), float32]) {
    %1112 = @func_6323() /* ty=(Tensor[(4, 9, 5), float32], Tensor[(60), float32], Tensor[(10, 16, 8), int16], Tensor[(1280, 1), int64], Tensor[(60), float32]) */;
    %1113 = %1112.2;
    %1114 = @func_10707() /* ty=Tensor[(60), float32] */;
    (%1113, %1114)
  };
  %1115() /* ty=(Tensor[(10, 16, 8), int16], Tensor[(60), float32]) */
}

def @func_5662() -> (Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64], Tensor[(60), float32]) {
  %1116 = @func_4315() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */;
  %1117 = @func_1879() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1118 = @func_1383() /* ty=(Tensor[(60), float32],) */;
  %1119 = %1116.1;
  %1120 = %1117.0;
  %1121 = %1118.0;
  (%1119, %1120, %1121)
}

def @func_11028(%var_11026: Tensor[(10, 10, 9), int16], %var_11027: Tensor[(10, 10, 9), int16]) -> (Tensor[(10, 10, 9), int16],) {
  %1127 = fn (%var_11019: Tensor[(10, 10, 9), int16], %var_11020: Tensor[(10, 10, 9), int16]) -> (Tensor[(10, 10, 9), int16],) {
    %1122 = cast(%var_11020, dtype="int16") /* ty=Tensor[(10, 10, 9), int16] */;
    %1123 = shape_of(%var_11019, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1124 = cast(%var_11019, dtype="int16") /* ty=Tensor[(10, 10, 9), int16] */;
    %1125 = dyn.reshape(%1122, %1123, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1126 = right_shift(%1124, %1125) /* ty=Tensor[(10, 10, 9), int16] */;
    (%1126,)
  };
  %1127(%var_11026, %var_11027) /* ty=(Tensor[(10, 10, 9), int16],) */
}

def @func_3090() -> (Tensor[(60), float32],) {
  %1128 = @func_2827() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60, 1), float32], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
  %1129 = %1128.2;
  (%1129,)
}

def @func_8490() -> Tensor[(15, 10, 3), float64] {
  @func_8488() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_1496() -> (Tensor[(15, 10, 3), float64],) {
  %1131 = fn () -> (Tensor[(15, 10, 3), float64],) {
    %1130 = @func_588() /* ty=Tensor[(15, 10, 3), float64] */;
    (%1130,)
  };
  %1131() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_8331() -> (Tensor[(8, 13, 10), float32],) {
  %1132 = @func_3486() /* ty=Tensor[(8, 13, 10), float32] */;
  (%1132,)
}

def @func_1384() -> (Tensor[(60), float32],) {
  %1135 = fn () -> (Tensor[(60), float32],) {
    %1133 = @func_887() /* ty=(Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
    %1134 = %1133.2;
    (%1134,)
  };
  %1135() /* ty=(Tensor[(60), float32],) */
}

def @func_7785() -> (Tensor[(4, 9, 5), float32], Tensor[(4, 9, 5), float32]) {
  @func_7783() /* ty=(Tensor[(4, 9, 5), float32], Tensor[(4, 9, 5), float32]) */
}

def @func_10300() -> (Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) {
  @func_10298() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */
}

def @func_13799(%var_13798: uint32) -> (Tensor[(3, 10, 1), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1143 = fn (%var_13752: uint32) -> (Tensor[(3, 10, 1), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
    %1136 = cast(%var_13752, dtype="bool") /* ty=bool */;
    %1137 = cast(meta[relay.Constant][35] /* ty=Tensor[(3, 10, 1), uint32] */, dtype="bool") /* ty=Tensor[(3, 10, 1), bool] */;
    %1138 = greater(%1136, %1137) /* ty=Tensor[(3, 10, 1), bool] */;
    %1139 = cast(%1138, dtype="float64") /* ty=Tensor[(3, 10, 1), float64] */;
    %1140 = tan(%1139) /* ty=Tensor[(3, 10, 1), float64] */;
    %1141 = @func_10607() /* ty=Tensor[(15, 10, 3), float64] */;
    %1142 = @func_9696() /* ty=Tensor[(15, 10, 3), float64] */;
    (%1140, %1141, %1142)
  };
  %1143(%var_13798) /* ty=(Tensor[(3, 10, 1), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_12722(%var_12721: Tensor[(10, 14, 15), float64]) -> (Tensor[(10, 14, 15), float32],) {
  %1150 = fn (%var_12708: Tensor[(10, 14, 15), float64]) -> (Tensor[(10, 14, 15), float32],) {
    %1144 = @func_10673() /* ty=Tensor[(10, 14, 15), float64] */;
    %1145 = cast(%var_12708, dtype="float32") /* ty=Tensor[(10, 14, 15), float32] */;
    %1146 = shape_of(%1144, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1147 = cast(%1144, dtype="float32") /* ty=Tensor[(10, 14, 15), float32] */;
    %1148 = dyn.reshape(%1145, %1146, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1149 = floor_divide(%1147, %1148) /* ty=Tensor[(10, 14, 15), float32] */;
    (%1149,)
  };
  %1150(%var_12721) /* ty=(Tensor[(10, 14, 15), float32],) */
}

def @func_2785() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1151 = @func_1791() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %1152 = %1151.0;
  %1153 = @func_314() /* ty=Tensor[(15, 10, 3), float64] */;
  (%1152, %1153)
}

def @func_14103() -> Tensor[(15, 10, 3), float64] {
  %1155 = fn () -> Tensor[(15, 10, 3), float64] {
    %1154 = @func_11746() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %1154.0
  };
  %1155() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_14911() -> (Tensor[(10, 14, 15), float64], Tensor[(8, 13, 10), float32], Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64]) {
  %1163 = fn () -> (Tensor[(10, 14, 15), float64], Tensor[(8, 13, 10), float32], Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64]) {
    %1156 = @func_6031() /* ty=(Tensor[(8, 13, 10), float32],) */;
    %1157 = @func_3769() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */;
    %1158 = @func_12353() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %1159 = @func_9085() /* ty=Tensor[(10, 14, 15), float64] */;
    %1160 = %1156.0;
    %1161 = %1157.1;
    %1162 = %1158.0;
    (%1159, %1160, %1161, %1162)
  };
  %1163() /* ty=(Tensor[(10, 14, 15), float64], Tensor[(8, 13, 10), float32], Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64]) */
}

def @func_18755() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  @func_18753() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_18815() -> (Tensor[(10, 16, 8), int16], Tensor[(60), float32]) {
  @func_18813() /* ty=(Tensor[(10, 16, 8), int16], Tensor[(60), float32]) */
}

def @func_16335() -> (Tensor[(60), float32],) {
  @func_16333() /* ty=(Tensor[(60), float32],) */
}

def @func_20845() -> Tensor[(15, 10, 3), uint64] {
  %1164 = @func_20207() /* ty=(Tensor[(15, 10, 3), uint64],) */;
  %1164.0
}

def @func_18101() -> (Tensor[(8, 13, 10), float32], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) {
  @func_18099() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */
}

def @func_7693(%var_7692: Tensor[(3, 11, 14), float64]) -> (Tensor[(3, 11, 14), float64], Tensor[(60), float32]) {
  %1169 = fn (%var_7669: Tensor[(3, 11, 14), float64]) -> (Tensor[(3, 11, 14), float64], Tensor[(60), float32]) {
    %1165 = cast(%var_7669, dtype="float64") /* ty=Tensor[(3, 11, 14), float64] */;
    %1166 = @func_3090() /* ty=(Tensor[(60), float32],) */;
    %1167 = acos(%1165) /* ty=Tensor[(3, 11, 14), float64] */;
    %1168 = %1166.0;
    (%1167, %1168)
  };
  %1169(%var_7692) /* ty=(Tensor[(3, 11, 14), float64], Tensor[(60), float32]) */
}

def @func_4890() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(60), float32], Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64]) {
  %1183 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(60), float32], Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64]) {
    %1170 = @func_3105() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
    %1171 = @func_1791() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
    %1172 = @func_1396() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %1173 = @func_1383() /* ty=(Tensor[(60), float32],) */;
    %1174 = @func_4267() /* ty=(Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %1175 = %1170.0;
    %1176 = %1171.0;
    %1177 = %1172.0;
    %1178 = @func_2130() /* ty=Tensor[(15, 10, 3), float64] */;
    %1179 = @func_2565() /* ty=Tensor[(60), float32] */;
    %1180 = %1173.0;
    %1181 = %1174.0;
    %1182 = @func_2130() /* ty=Tensor[(15, 10, 3), float64] */;
    (%1175, %1176, %1177, %1178, %1179, %1180, %1181, %1182)
  };
  %1183() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(60), float32], Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64]) */
}

def @func_14071() -> (Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1184 = @func_13659() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64]) */;
  %1185 = @func_4889() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(60), float32], Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64]) */;
  %1186 = %1184.0;
  %1187 = @func_2540() /* ty=Tensor[(15, 10, 3), float64] */;
  %1188 = %1185.3;
  (%1186, %1187, %1188)
}

def @func_14511() -> Tensor[(15, 10, 3), float64] {
  %1189 = fn () -> Tensor[(15, 10, 3), float64] {
    @func_12057() /* ty=Tensor[(15, 10, 3), float64] */
  };
  %1189() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_5110() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1190 = @func_2785() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1191 = @func_314() /* ty=Tensor[(15, 10, 3), float64] */;
  %1192 = %1190.1;
  (%1191, %1192)
}

def @func_8512() -> (Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), uint64]) {
  @func_8510() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), uint64]) */
}

def @func_7739() -> (Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1198 = fn () -> (Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
    %1193 = @func_6031() /* ty=(Tensor[(8, 13, 10), float32],) */;
    %1194 = @func_1879() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %1195 = %1193.0;
    %1196 = @func_376() /* ty=Tensor[(15, 10, 3), float64] */;
    %1197 = %1194.0;
    (%1195, %1196, %1197)
  };
  %1198() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_15819() -> (Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) {
  %1199 = @func_12890() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
  %1200 = @func_8023() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1201 = %1199.0;
  %1202 = %1200.1;
  %1203 = @func_2726() /* ty=Tensor[(8, 13, 10), float32] */;
  (%1201, %1202, %1203)
}

def @func_2269(%var_2233: Tensor[(3, 20), float32]) -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(3, 20), float32], Tensor[(60), float32]) {
  %1204 = @func_731() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1205 = cast(%var_2233, dtype="float32") /* ty=Tensor[(3, 20), float32] */;
  %1206 = reshape(%1205, newshape=[60, 1]) /* ty=Tensor[(60, 1), float32] */;
  %1207 = @func_655(%1206) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60, 1), float32]) */;
  %1208 = cast(%var_2233, dtype="float32") /* ty=Tensor[(3, 20), float32] */;
  %1209 = @func_1383() /* ty=(Tensor[(60), float32],) */;
  %1210 = %1204.0;
  %1211 = %1207.0;
  %1212 = tan(%1208) /* ty=Tensor[(3, 20), float32] */;
  %1213 = %1209.0;
  (%1210, %1211, %1212, %1213)
}

def @func_12461(%var_12448: Tensor[(520), uint16]) -> (Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(4, 10, 13), bool], Tensor[(520), uint16]) {
  %1214 = @func_3329() /* ty=(Tensor[(60), float32],) */;
  %1215 = %1214.0;
  %1216 = cast(%1215, dtype="float32") /* ty=Tensor[(60), float32] */;
  %1217 = reshape(%1216, newshape=[60, 1]) /* ty=Tensor[(60, 1), float32] */;
  %1218 = @func_655(%1217) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60, 1), float32]) */;
  %1219 = cast(%var_12448, dtype="uint16") /* ty=Tensor[(520), uint16] */;
  %1220 = reshape(%1219, newshape=[4, 10, 13]) /* ty=Tensor[(4, 10, 13), uint16] */;
  %1221 = @func_2330(%1220) /* ty=(Tensor[(4, 10, 13), bool], Tensor[(15, 10, 3), float64], Tensor[(4, 10, 13), float64]) */;
  %1222 = %1218.2;
  %1223 = %1221.0;
  (%1215, %1222, %1223, %var_12448)
}

def @func_17865() -> (Tensor[(60), float32],) {
  %1224 = @func_8613() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32]) */;
  %1225 = %1224.1;
  (%1225,)
}

def @func_12304() -> Tensor[(15, 10, 3), float64] {
  @func_4927() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_9277() -> (Tensor[(15, 10, 3), float64],) {
  %1228 = fn () -> (Tensor[(15, 10, 3), float64],) {
    %1226 = @func_1396() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %1227 = %1226.0;
    (%1227,)
  };
  %1228() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_12843() -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32]) {
  @func_12841() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */
}

def @func_6323() -> (Tensor[(4, 9, 5), float32], Tensor[(60), float32], Tensor[(10, 16, 8), int16], Tensor[(1280, 1), int64], Tensor[(60), float32]) {
  %1229 = @func_4340() /* ty=Tensor[(4, 9, 5), float32] */;
  %1230 = cast(%1229, dtype="float32") /* ty=Tensor[(4, 9, 5), float32] */;
  %1231 = @func_2827() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60, 1), float32], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
  %1232 = cast(meta[relay.Constant][36] /* ty=Tensor[(1280, 1), int64] */, dtype="int64") /* ty=Tensor[(1280, 1), int64] */;
  %1233 = cast(meta[relay.Constant][36] /* ty=Tensor[(1280, 1), int64] */, dtype="int64") /* ty=Tensor[(1280, 1), int64] */;
  %1234 = reshape(%1232, newshape=[10, 16, 8]) /* ty=Tensor[(10, 16, 8), int64] */;
  %1235 = reshape(%1233, newshape=[10, 16, 8]) /* ty=Tensor[(10, 16, 8), int64] */;
  %1236 = @func_4436(%1234, %1235) /* ty=(Tensor[(10, 16, 8), int16],) */;
  %1237 = @func_5399() /* ty=(Tensor[(60), float32],) */;
  %1238 = cos(%1230) /* ty=Tensor[(4, 9, 5), float32] */;
  %1239 = %1231.2;
  %1240 = %1236.0;
  %1241 = %1237.0;
  (%1238, %1239, %1240, meta[relay.Constant][36] /* ty=Tensor[(1280, 1), int64] */, %1241)
}

def @func_200() -> (Tensor[(15, 10, 3), float64],) {
  @func_198() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_16631() -> Tensor[(4, 6, 7), float32] {
  @func_16629() /* ty=Tensor[(4, 6, 7), float32] */
}

def @func_814(%var_812: Tensor[(9, 10, 6), uint8], %var_813: Tensor[(9, 10, 6), uint8]) -> (Tensor[(9, 10, 6), bool],) {
  %1247 = fn (%var_801: Tensor[(9, 10, 6), uint8], %var_802: Tensor[(9, 10, 6), uint8]) -> (Tensor[(9, 10, 6), bool],) {
    %1242 = cast(%var_802, dtype="bool") /* ty=Tensor[(9, 10, 6), bool] */;
    %1243 = shape_of(%var_801, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1244 = cast(%var_801, dtype="bool") /* ty=Tensor[(9, 10, 6), bool] */;
    %1245 = dyn.reshape(%1242, %1243, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1246 = less_equal(%1244, %1245) /* ty=Tensor[(9, 10, 6), bool] */;
    (%1246,)
  };
  %1247(%var_812, %var_813) /* ty=(Tensor[(9, 10, 6), bool],) */
}

def @func_2199() -> Tensor[(15, 10, 3), float64] {
  %1249 = fn () -> Tensor[(15, 10, 3), float64] {
    %1248 = @func_1396() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %1248.0
  };
  %1249() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_19504(%var_19502: Tensor[(2, 13, 13), float64]) -> (Tensor[(15, 10, 3), float64], Tensor[(2, 13, 13), float64]) {
  @func_19501(%var_19502) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(2, 13, 13), float64]) */
}

def @func_15036(%var_15035: Tensor[(8, 13, 10), float32]) -> (Tensor[(8, 13, 10), bool], Tensor[(8, 13, 10), float64], Tensor[(15, 10, 3), float64]) {
  %1260 = fn (%var_15010: Tensor[(8, 13, 10), float32]) -> (Tensor[(8, 13, 10), bool], Tensor[(8, 13, 10), float64], Tensor[(15, 10, 3), float64]) {
    %1250 = @func_12478() /* ty=(Tensor[(8, 13, 10), float32],) */;
    %1251 = %1250.0;
    %1252 = cast(%var_15010, dtype="bool") /* ty=Tensor[(8, 13, 10), bool] */;
    %1253 = shape_of(%1251, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1254 = cast(%1251, dtype="bool") /* ty=Tensor[(8, 13, 10), bool] */;
    %1255 = dyn.reshape(%1252, %1253, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1256 = cast(%var_15010, dtype="float64") /* ty=Tensor[(8, 13, 10), float64] */;
    %1257 = logical_and(%1254, %1255) /* ty=Tensor[(8, 13, 10), bool] */;
    %1258 = atan(%1256) /* ty=Tensor[(8, 13, 10), float64] */;
    %1259 = @func_4927() /* ty=Tensor[(15, 10, 3), float64] */;
    (%1257, %1258, %1259)
  };
  %1260(%var_15035) /* ty=(Tensor[(8, 13, 10), bool], Tensor[(8, 13, 10), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_12408(%var_12406: Tensor[(3, 12, 9), float32]) -> (Tensor[(3, 12, 9), float32], Tensor[(15, 10, 3), float64]) {
  @func_12405(%var_12406) /* ty=(Tensor[(3, 12, 9), float32], Tensor[(15, 10, 3), float64]) */
}

def @func_4436(%var_4409: Tensor[(10, 16, 8), int64], %var_4410: Tensor[(10, 16, 8), int64]) -> (Tensor[(10, 16, 8), int16],) {
  %1261 = cast(%var_4410, dtype="int64") /* ty=Tensor[(10, 16, 8), int64] */;
  %1262 = shape_of(%var_4409, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1263 = cast(%var_4409, dtype="int64") /* ty=Tensor[(10, 16, 8), int64] */;
  %1264 = dyn.reshape(%1261, %1262, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1265 = right_shift(%1263, %1264) /* ty=Tensor[(10, 16, 8), int64] */;
  %1266 = cast(%var_4410, dtype="int16") /* ty=Tensor[(10, 16, 8), int16] */;
  %1267 = shape_of(%1265, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1268 = cast(%1265, dtype="int16") /* ty=Tensor[(10, 16, 8), int16] */;
  %1269 = dyn.reshape(%1266, %1267, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1270 = logical_xor(%1268, %1269) /* ty=Tensor[(10, 16, 8), int16] */;
  (%1270,)
}

def @func_2977() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(280), int16]) {
  %1271 = @func_2844() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1272 = cast(meta[relay.Constant][37] /* ty=Tensor[(280), int16] */, dtype="int16") /* ty=Tensor[(280), int16] */;
  %1273 = reshape(%1272, newshape=[280]) /* ty=Tensor[(280), int16] */;
  %1274 = @func_2629(%1273) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(5, 4, 14), int16], Tensor[(280), int16]) */;
  %1275 = %1271.0;
  %1276 = %1274.0;
  (%1275, %1276, meta[relay.Constant][37] /* ty=Tensor[(280), int16] */)
}

def @func_19108() -> (Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  @func_19106() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_16993() -> (Tensor[(4, 6, 7), float64], Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) {
  @func_16991() /* ty=(Tensor[(4, 6, 7), float64], Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */
}

def @func_7141() -> (Tensor[(9, 10, 6), bool], Tensor[(60), float32]) {
  %1277 = @func_887() /* ty=(Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
  %1278 = @func_2473() /* ty=Tensor[(9, 10, 6), bool] */;
  %1279 = %1277.2;
  (%1278, %1279)
}

def @func_20108() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  @func_20106() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_5913() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32], Tensor[(60), float32]) {
  @func_5911() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32], Tensor[(60), float32]) */
}

def @func_8001() -> (Tensor[(15, 10, 3), float64], Tensor[(10, 14, 15), float64], Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64]) {
  %1280 = @func_1305() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1281 = @func_3869() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */;
  %1282 = @func_5967() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1283 = %1280.0;
  %1284 = @func_5757() /* ty=Tensor[(10, 14, 15), float64] */;
  %1285 = %1281.2;
  %1286 = %1282.0;
  (%1283, %1284, %1285, %1286)
}

def @func_16202() -> (Tensor[(15, 10, 3), float64],) {
  @func_16200() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_16433() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) {
  %1292 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) {
    %1287 = @func_7305() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %1288 = @func_2464() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool], Tensor[(1, 540), uint8], Tensor[(15, 10, 3), float64]) */;
    %1289 = %1287.1;
    %1290 = %1288.3;
    %1291 = @func_2473() /* ty=Tensor[(9, 10, 6), bool] */;
    (%1289, %1290, %1291)
  };
  %1292() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) */
}

def @func_3540() -> Tensor[(15, 10, 3), float64] {
  @func_184() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_17041(%var_17039: Tensor[(10, 78), int64]) -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(13, 5, 12), bool], Tensor[(10, 78), int64]) {
  @func_17038(%var_17039) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(13, 5, 12), bool], Tensor[(10, 78), int64]) */
}

def @func_1397() -> (Tensor[(15, 10, 3), float64],) {
  %1294 = fn () -> (Tensor[(15, 10, 3), float64],) {
    %1293 = @func_376() /* ty=Tensor[(15, 10, 3), float64] */;
    (%1293,)
  };
  %1294() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_12891() -> (Tensor[(60), float32], Tensor[(15, 10, 3), float64]) {
  %1299 = fn () -> (Tensor[(60), float32], Tensor[(15, 10, 3), float64]) {
    %1295 = @func_3329() /* ty=(Tensor[(60), float32],) */;
    %1296 = @func_6832() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */;
    %1297 = %1295.0;
    %1298 = %1296.1;
    (%1297, %1298)
  };
  %1299() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */
}

def @func_2481() -> Tensor[(15, 10, 3), float64] {
  @func_2479() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_12519() -> (Tensor[(15, 10, 3), float64], Tensor[(10, 14, 15), float64]) {
  @func_12517() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(10, 14, 15), float64]) */
}

def @func_8613() -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32]) {
  %1300 = @func_1305() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1301 = @func_3769() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */;
  %1302 = @func_7600() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1303 = @func_7272() /* ty=(Tensor[(15, 10, 3), float32],) */;
  %1304 = %1300.2;
  %1305 = @func_2284() /* ty=Tensor[(60), float32] */;
  %1306 = %1301.0;
  %1307 = %1302.0;
  %1308 = %1303.0;
  (%1304, %1305, %1306, %1307, %1308)
}

def @func_2939() -> (Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) {
  %1313 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) {
    %1309 = @func_359() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %1310 = @func_1947() /* ty=(Tensor[(9, 10, 6), bool],) */;
    %1311 = %1309.0;
    %1312 = %1310.0;
    (%1311, %1312)
  };
  %1313() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) */
}

def @func_3871() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) {
  @func_3869() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */
}

def @func_15385() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  @func_15383() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_1581() -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32]) {
  @func_1579() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */
}

def @func_20175() -> Tensor[(3, 11, 12), uint32] {
  @func_20173() /* ty=Tensor[(3, 11, 12), uint32] */
}

def @func_14695() -> (Tensor[(15, 10, 3), float64], Tensor[(4, 9, 5), float32]) {
  %1314 = @func_2130() /* ty=Tensor[(15, 10, 3), float64] */;
  %1315 = @func_2854() /* ty=Tensor[(4, 9, 5), float32] */;
  (%1314, %1315)
}

def @func_8403() -> (Tensor[(8, 13, 10), float32], Tensor[(4, 9, 5), float32]) {
  %1316 = @func_6031() /* ty=(Tensor[(8, 13, 10), float32],) */;
  %1317 = %1316.0;
  %1318 = @func_4787() /* ty=Tensor[(4, 9, 5), float32] */;
  (%1317, %1318)
}

def @func_12682() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32]) {
  @func_12680() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32]) */
}

def @func_12211() -> (Tensor[(15, 10, 3), float64],) {
  @func_12209() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_20836() -> (Tensor[(15, 10, 3), float64],) {
  @func_20834() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_13275() -> (Tensor[(15, 10, 3), float64],) {
  %1319 = @func_3415() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64]) */;
  %1320 = %1319.0;
  (%1320,)
}

def @func_19218(%var_19217: Tensor[(8, 13, 10), float32]) -> (Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), bool], Tensor[(15, 10, 3), float64]) {
  %1333 = fn (%var_19150: Tensor[(8, 13, 10), float32]) -> (Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), bool], Tensor[(15, 10, 3), float64]) {
    %1321 = @func_13001() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
    %1322 = @func_1879() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %1323 = @func_9376() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */;
    %1324 = %1323.1;
    %1325 = cast(%var_19150, dtype="bool") /* ty=Tensor[(8, 13, 10), bool] */;
    %1326 = shape_of(%1324, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1327 = cast(%1324, dtype="bool") /* ty=Tensor[(8, 13, 10), bool] */;
    %1328 = dyn.reshape(%1325, %1326, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1329 = %1321.1;
    %1330 = %1322.0;
    %1331 = less(%1327, %1328) /* ty=Tensor[(8, 13, 10), bool] */;
    %1332 = @func_10335() /* ty=Tensor[(15, 10, 3), float64] */;
    (%1329, %1330, %1331, %1332)
  };
  %1333(%var_19217) /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), bool], Tensor[(15, 10, 3), float64]) */
}

def @func_2631(%var_2630: Tensor[(280), int16]) -> (Tensor[(15, 10, 3), float64], Tensor[(5, 4, 14), int16], Tensor[(280), int16]) {
  %1341 = fn (%var_2627: Tensor[(280), int16]) -> (Tensor[(15, 10, 3), float64], Tensor[(5, 4, 14), int16], Tensor[(280), int16]) {
    %1334 = @func_359() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %1335 = cast(%var_2627, dtype="int16") /* ty=Tensor[(280), int16] */;
    %1336 = cast(%var_2627, dtype="int16") /* ty=Tensor[(280), int16] */;
    %1337 = reshape(%1335, newshape=[5, 4, 14]) /* ty=Tensor[(5, 4, 14), int16] */;
    %1338 = reshape(%1336, newshape=[5, 4, 14]) /* ty=Tensor[(5, 4, 14), int16] */;
    %1339 = %1334.2;
    %1340 = @func_2160(%1337, %1338) /* ty=Tensor[(5, 4, 14), int16] */;
    (%1339, %1340, %var_2627)
  };
  %1341(%var_2630) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(5, 4, 14), int16], Tensor[(280), int16]) */
}

def @func_11728() -> Tensor[(15, 10, 3), float64] {
  @func_6480() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_9914() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(60), float32], Tensor[(10, 14, 15), float64]) {
  %1342 = @func_6904() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1343 = @func_8083() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1344 = @func_6673() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %1345 = @func_1579() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %1346 = @func_3090() /* ty=(Tensor[(60), float32],) */;
  %1347 = @func_8001() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(10, 14, 15), float64], Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64]) */;
  %1348 = %1342.0;
  %1349 = %1343.2;
  %1350 = %1344.1;
  %1351 = %1345.1;
  %1352 = %1346.0;
  %1353 = %1347.1;
  (%1348, %1349, %1350, %1351, %1352, %1353)
}

def @func_11340() -> (Tensor[(60), float32], Tensor[(12, 14, 4), float32], Tensor[(672), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  @func_11338() /* ty=(Tensor[(60), float32], Tensor[(12, 14, 4), float32], Tensor[(672), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_11102() -> Tensor[(15, 10, 3), float64] {
  @func_10607() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_2660() -> Tensor[(15, 10, 3), uint64] {
  %1355 = fn () -> Tensor[(15, 10, 3), uint64] {
    %1354 = @func_1641() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), uint64]) */;
    %1354.1
  };
  %1355() /* ty=Tensor[(15, 10, 3), uint64] */
}

def @func_19456() -> Tensor[(15, 10, 3), float64] {
  %1357 = fn () -> Tensor[(15, 10, 3), float64] {
    %1356 = @func_13001() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
    %1356.0
  };
  %1357() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_12517() -> (Tensor[(15, 10, 3), float64], Tensor[(10, 14, 15), float64]) {
  %1358 = @func_2401() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1359 = %1358.1;
  %1360 = @func_5757() /* ty=Tensor[(10, 14, 15), float64] */;
  (%1359, %1360)
}

def @func_11245() -> (Tensor[(60), float32], Tensor[(8, 13, 10), float32], Tensor[(8, 13, 10), float32]) {
  %1365 = fn () -> (Tensor[(60), float32], Tensor[(8, 13, 10), float32], Tensor[(8, 13, 10), float32]) {
    %1361 = @func_8923() /* ty=(Tensor[(8, 13, 10), float32],) */;
    %1362 = @func_2565() /* ty=Tensor[(60), float32] */;
    %1363 = %1361.0;
    %1364 = @func_2726() /* ty=Tensor[(8, 13, 10), float32] */;
    (%1362, %1363, %1364)
  };
  %1365() /* ty=(Tensor[(60), float32], Tensor[(8, 13, 10), float32], Tensor[(8, 13, 10), float32]) */
}

def @func_18289() -> (Tensor[(9, 10, 6), bool],) {
  %1368 = fn () -> (Tensor[(9, 10, 6), bool],) {
    %1366 = @func_7141() /* ty=(Tensor[(9, 10, 6), bool], Tensor[(60), float32]) */;
    %1367 = %1366.0;
    (%1367,)
  };
  %1368() /* ty=(Tensor[(9, 10, 6), bool],) */
}

def @func_6711() -> (Tensor[(15, 10, 3), float64],) {
  %1369 = @func_2479() /* ty=Tensor[(15, 10, 3), float64] */;
  (%1369,)
}

def @func_9993() -> Tensor[(15, 10, 3), float64] {
  %1370 = @func_6711() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1370.0
}

def @func_5493() -> (Tensor[(15, 10, 3), float64],) {
  %1372 = fn () -> (Tensor[(15, 10, 3), float64],) {
    %1371 = @func_184() /* ty=Tensor[(15, 10, 3), float64] */;
    (%1371,)
  };
  %1372() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_7527() -> Tensor[(15, 10, 3), float64] {
  %1373 = fn () -> Tensor[(15, 10, 3), float64] {
    @func_1661() /* ty=Tensor[(15, 10, 3), float64] */
  };
  %1373() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_8737(%var_8711: Tensor[(2, 4, 12), float64]) -> Tensor[(2, 4, 12), float64] {
  %1374 = cast(%var_8711, dtype="float64") /* ty=Tensor[(2, 4, 12), float64] */;
  tan(%1374) /* ty=Tensor[(2, 4, 12), float64] */
}

def @func_186() -> Tensor[(15, 10, 3), float64] {
  @func_184() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_3810() -> (Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) {
  %1378 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) {
    %1375 = @func_2589() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) */;
    %1376 = @func_666() /* ty=Tensor[(15, 10, 3), float64] */;
    %1377 = %1375.1;
    (%1376, %1377)
  };
  %1378() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) */
}

def @func_16200() -> (Tensor[(15, 10, 3), float64],) {
  %1379 = @func_3769() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */;
  %1380 = %1379.0;
  (%1380,)
}

def @func_6994(%var_6992: Tensor[(8, 7, 11), bool], %var_6993: Tensor[(8, 7, 11), bool]) -> (Tensor[(8, 7, 11), bool], Tensor[(8, 7, 11), uint64], Tensor[(15, 10, 3), float64], Tensor[(8, 7, 11), float64]) {
  %1394 = fn (%var_6970: Tensor[(8, 7, 11), bool], %var_6977: Tensor[(8, 7, 11), bool]) -> (Tensor[(8, 7, 11), bool], Tensor[(8, 7, 11), uint64], Tensor[(15, 10, 3), float64], Tensor[(8, 7, 11), float64]) {
    %1381 = cast(meta[relay.Constant][38] /* ty=Tensor[(8, 7, 11), bool] */, dtype="bool") /* ty=Tensor[(8, 7, 11), bool] */;
    %1382 = shape_of(%var_6970, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1383 = cast(%var_6970, dtype="bool") /* ty=Tensor[(8, 7, 11), bool] */;
    %1384 = dyn.reshape(%1381, %1382, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1385 = cast(%var_6977, dtype="uint64") /* ty=Tensor[(8, 7, 11), uint64] */;
    %1386 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(8, 7, 11), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1387 = cast(meta[relay.Constant][38] /* ty=Tensor[(8, 7, 11), bool] */, dtype="uint64") /* ty=Tensor[(8, 7, 11), uint64] */;
    %1388 = dyn.reshape(%1385, %1386, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %1389 = cast(meta[relay.Constant][38] /* ty=Tensor[(8, 7, 11), bool] */, dtype="float64") /* ty=Tensor[(8, 7, 11), float64] */;
    %1390 = logical_and(%1383, %1384) /* ty=Tensor[(8, 7, 11), bool] */;
    %1391 = right_shift(%1387, %1388) /* ty=Tensor[(8, 7, 11), uint64] */;
    %1392 = @func_2540() /* ty=Tensor[(15, 10, 3), float64] */;
    %1393 = sigmoid(%1389) /* ty=Tensor[(8, 7, 11), float64] */;
    (%1390, %1391, %1392, %1393)
  };
  %1394(%var_6992, %var_6993) /* ty=(Tensor[(8, 7, 11), bool], Tensor[(8, 7, 11), uint64], Tensor[(15, 10, 3), float64], Tensor[(8, 7, 11), float64]) */
}

def @func_11338() -> (Tensor[(60), float32], Tensor[(12, 14, 4), float32], Tensor[(672), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1395 = @func_1541() /* ty=(Tensor[(60), float32],) */;
  %1396 = cast(meta[relay.Constant][39] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %1397 = cast(meta[relay.Constant][39] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %1398 = reshape(%1396, newshape=[12, 14, 4]) /* ty=Tensor[(12, 14, 4), float32] */;
  %1399 = reshape(%1397, newshape=[12, 14, 4]) /* ty=Tensor[(12, 14, 4), float32] */;
  %1400 = @func_6111() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1401 = %1395.0;
  %1402 = @func_10361(%1398, %1399) /* ty=Tensor[(12, 14, 4), float32] */;
  %1403 = %1400.1;
  %1404 = @func_8956() /* ty=Tensor[(15, 10, 3), float64] */;
  (%1401, %1402, meta[relay.Constant][39] /* ty=Tensor[(672), float32] */, %1403, %1404)
}

def @func_15648() -> Tensor[(15, 10, 3), float64] {
  @func_15646() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_6674() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32]) {
  %1415 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32]) {
    %1405 = @func_4739() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %1406 = @func_2036() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %1407 = @func_1181() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %1408 = cast(meta[relay.Constant][40] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
    %1409 = reshape(%1408, newshape=[60, 1]) /* ty=Tensor[(60, 1), float32] */;
    %1410 = @func_3455(%1409) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60, ?), bool]) */;
    %1411 = %1405.0;
    %1412 = %1406.0;
    %1413 = %1407.0;
    %1414 = %1410.0;
    (%1411, %1412, %1413, %1414, meta[relay.Constant][40] /* ty=Tensor[(60), float32] */)
  };
  %1415() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */
}

def @func_19622() -> (Tensor[(15, 10, 3), float64],) {
  @func_19620() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_10879() -> (Tensor[(15, 10, 3), float64], Tensor[(4, 9, 5), float32], Tensor[(15, 10, 3), float64]) {
  %1422 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(4, 9, 5), float32], Tensor[(15, 10, 3), float64]) {
    %1416 = @func_7091() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) */;
    %1417 = @func_7783() /* ty=(Tensor[(4, 9, 5), float32], Tensor[(4, 9, 5), float32]) */;
    %1418 = @func_6197() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
    %1419 = %1416.0;
    %1420 = %1417.1;
    %1421 = %1418.2;
    (%1419, %1420, %1421)
  };
  %1422() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(4, 9, 5), float32], Tensor[(15, 10, 3), float64]) */
}

def @func_2272(%var_2270: Tensor[(3, 20), float32]) -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(3, 20), float32], Tensor[(60), float32]) {
  @func_2269(%var_2270) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(3, 20), float32], Tensor[(60), float32]) */
}

def @func_359() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1423 = @func_300() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1424 = @func_167() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1425 = @func_300() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1426 = %1423.1;
  %1427 = %1424.0;
  %1428 = %1425.0;
  (%1426, %1427, %1428)
}

def @func_20601() -> (Tensor[(15, 10, 3), float64],) {
  @func_20599() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_6032() -> (Tensor[(8, 13, 10), float32],) {
  %1430 = fn () -> (Tensor[(8, 13, 10), float32],) {
    %1429 = @func_2726() /* ty=Tensor[(8, 13, 10), float32] */;
    (%1429,)
  };
  %1430() /* ty=(Tensor[(8, 13, 10), float32],) */
}

def @func_720(%var_719: Tensor[(3, 20), float32]) -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(3, 20), float32]) {
  %1441 = fn (%var_692: Tensor[(3, 20), float32]) -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(3, 20), float32]) {
    %1431 = @func_359() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %1432 = @func_198() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %1433 = @func_258() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %1434 = cast(%var_692, dtype="float32") /* ty=Tensor[(3, 20), float32] */;
    %1435 = reshape(%1434, newshape=[5, 12, 1]) /* ty=Tensor[(5, 12, 1), float32] */;
    %1436 = @func_484(%1435) /* ty=(Tensor[(5, 12, 1), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %1437 = %1431.1;
    %1438 = %1432.0;
    %1439 = %1433.1;
    %1440 = %1436.2;
    (%1437, %1438, %1439, %1440, %var_692)
  };
  %1441(%var_719) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(3, 20), float32]) */
}

def @func_14805(%var_14803: Tensor[(4, 8, 12), float64]) -> (Tensor[(4, 8, 12), float64],) {
  @func_14802(%var_14803) /* ty=(Tensor[(4, 8, 12), float64],) */
}

def @func_4032() -> (Tensor[(60), float32], Tensor[(15, 10, 3), uint64]) {
  %1444 = fn () -> (Tensor[(60), float32], Tensor[(15, 10, 3), uint64]) {
    %1442 = @func_2565() /* ty=Tensor[(60), float32] */;
    %1443 = @func_2659() /* ty=Tensor[(15, 10, 3), uint64] */;
    (%1442, %1443)
  };
  %1444() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), uint64]) */
}

def @func_2285() -> Tensor[(60), float32] {
  %1446 = fn () -> Tensor[(60), float32] {
    %1445 = @func_1791() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
    %1445.1
  };
  %1446() /* ty=Tensor[(60), float32] */
}

def @func_2566() -> Tensor[(60), float32] {
  %1448 = fn () -> Tensor[(60), float32] {
    %1447 = @func_1579() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
    %1447.1
  };
  %1448() /* ty=Tensor[(60), float32] */
}

def @func_19501(%var_19478: Tensor[(2, 13, 13), float64]) -> (Tensor[(15, 10, 3), float64], Tensor[(2, 13, 13), float64]) {
  %1449 = cast(%var_19478, dtype="float64") /* ty=Tensor[(2, 13, 13), float64] */;
  %1450 = atanh(%1449) /* ty=Tensor[(2, 13, 13), float64] */;
  %1451 = cast(%1450, dtype="float64") /* ty=Tensor[(2, 13, 13), float64] */;
  %1452 = @func_11315() /* ty=Tensor[(15, 10, 3), float64] */;
  %1453 = asin(%1451) /* ty=Tensor[(2, 13, 13), float64] */;
  (%1452, %1453)
}

def @func_2542() -> Tensor[(15, 10, 3), float64] {
  @func_2540() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_10065(%var_10063: uint64) -> (Tensor[(10, 8, 3), bool], Tensor[(4, 9, 5), float32]) {
  @func_10062(%var_10063) /* ty=(Tensor[(10, 8, 3), bool], Tensor[(4, 9, 5), float32]) */
}

def @func_15294() -> (Tensor[(9, 10, 6), bool],) {
  %1456 = fn () -> (Tensor[(9, 10, 6), bool],) {
    %1454 = @func_3155() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool], Tensor[(15, 10, 3), float64]) */;
    %1455 = %1454.3;
    (%1455,)
  };
  %1456() /* ty=(Tensor[(9, 10, 6), bool],) */
}

def @func_20146() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1463 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
    %1457 = @func_15176() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %1458 = @func_12353() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %1459 = @func_12117() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %1460 = %1457.0;
    %1461 = %1458.0;
    %1462 = %1459.0;
    (%1460, %1461, %1462)
  };
  %1463() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_4927() -> Tensor[(15, 10, 3), float64] {
  %1464 = @func_796() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1464.1
}

def @func_3542() -> Tensor[(15, 10, 3), float64] {
  @func_3540() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_8994(%var_8993: Tensor[(9, 8, 14), float64]) -> (Tensor[(9, 8, 14), float64], Tensor[(15, 10, 3), float64]) {
  %1469 = fn (%var_8985: Tensor[(9, 8, 14), float64]) -> (Tensor[(9, 8, 14), float64], Tensor[(15, 10, 3), float64]) {
    %1465 = cast(%var_8985, dtype="float64") /* ty=Tensor[(9, 8, 14), float64] */;
    %1466 = @func_1579() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
    %1467 = acos(%1465) /* ty=Tensor[(9, 8, 14), float64] */;
    %1468 = %1466.0;
    (%1467, %1468)
  };
  %1469(%var_8993) /* ty=(Tensor[(9, 8, 14), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_5070() -> (Tensor[(60), float32], Tensor[(15, 10, 3), float64]) {
  @func_5068() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */
}

def @func_4163() -> (Tensor[(15, 10, 3), float64],) {
  %1472 = fn () -> (Tensor[(15, 10, 3), float64],) {
    %1470 = @func_1791() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
    %1471 = %1470.0;
    (%1471,)
  };
  %1472() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_16772(%var_16770: Tensor[(252), float32], %var_16771: Tensor[(6, 14, 3), bool]) -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(252), float32], Tensor[(15, 10, 3), float64], Tensor[(6, 14, 3), bool], Tensor[(60), float32]) {
  %1491 = fn (%var_16746: Tensor[(252), float32], %var_16753: Tensor[(6, 14, 3), bool]) -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(252), float32], Tensor[(15, 10, 3), float64], Tensor[(6, 14, 3), bool], Tensor[(60), float32]) {
    %1473 = @func_4267() /* ty=(Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %1474 = @func_16333() /* ty=(Tensor[(60), float32],) */;
    %1475 = cast(%var_16746, dtype="float32") /* ty=Tensor[(252), float32] */;
    %1476 = cast(%var_16746, dtype="float32") /* ty=Tensor[(252), float32] */;
    %1477 = reshape(%1475, newshape=[6, 14, 3]) /* ty=Tensor[(6, 14, 3), float32] */;
    %1478 = reshape(%1476, newshape=[6, 14, 3]) /* ty=Tensor[(6, 14, 3), float32] */;
    %1479 = @func_1251(%1477, %1478) /* ty=(Tensor[(6, 14, 3), bool],) */;
    %1480 = %1479.0;
    %1481 = cast(%var_16753, dtype="bool") /* ty=Tensor[(6, 14, 3), bool] */;
    %1482 = shape_of(%1480, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1483 = cast(%1480, dtype="bool") /* ty=Tensor[(6, 14, 3), bool] */;
    %1484 = dyn.reshape(%1481, %1482, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1485 = @func_1541() /* ty=(Tensor[(60), float32],) */;
    %1486 = %1473.3;
    %1487 = %1474.0;
    %1488 = @func_2198() /* ty=Tensor[(15, 10, 3), float64] */;
    %1489 = not_equal(%1483, %1484) /* ty=Tensor[(6, 14, 3), bool] */;
    %1490 = %1485.0;
    (%1486, %1487, %var_16746, %1488, %1489, %1490)
  };
  %1491(%var_16770, %var_16771) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(252), float32], Tensor[(15, 10, 3), float64], Tensor[(6, 14, 3), bool], Tensor[(60), float32]) */
}

def @func_5911() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32], Tensor[(60), float32]) {
  %1492 = @func_2401() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1493 = @func_887() /* ty=(Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
  %1494 = @func_5715() /* ty=Tensor[(15, 10, 3), float64] */;
  %1495 = %1492.0;
  %1496 = %1493.0;
  %1497 = @func_2284() /* ty=Tensor[(60), float32] */;
  (%1494, %1495, %1496, %1497)
}

def @func_8740(%var_8738: Tensor[(2, 4, 12), float64]) -> Tensor[(2, 4, 12), float64] {
  @func_8737(%var_8738) /* ty=Tensor[(2, 4, 12), float64] */
}

def @func_6557() -> (Tensor[(15, 10, 3), float64],) {
  @func_6555() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_20798(%var_20797: Tensor[(280), int16]) -> (Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64], Tensor[(280), float64]) {
  %1516 = fn (%var_20763: Tensor[(280), int16]) -> (Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64], Tensor[(280), float64]) {
    %1498 = @func_7272() /* ty=(Tensor[(15, 10, 3), float32],) */;
    %1499 = @func_13626() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %1500 = cast(%var_20763, dtype="int16") /* ty=Tensor[(280), int16] */;
    %1501 = reshape(%1500, newshape=[280]) /* ty=Tensor[(280), int16] */;
    %1502 = @func_10465(%1501) /* ty=(Tensor[(15, 10, 3), float32], Tensor[(280), int16], Tensor[(280), int16]) */;
    %1503 = %1502.2;
    %1504 = cast(%1503, dtype="int64") /* ty=Tensor[(280), int64] */;
    %1505 = shape_of(%var_20763, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1506 = cast(%var_20763, dtype="int64") /* ty=Tensor[(280), int64] */;
    %1507 = dyn.reshape(%1504, %1505, newshape=[]) /* ty=Tensor[(?), int64] */;
    %1508 = left_shift(%1506, %1507) /* ty=Tensor[(280), int64] */;
    %1509 = cast(%1508, dtype="float64") /* ty=Tensor[(280), float64] */;
    %1510 = shape_of(%1503, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1511 = cast(%1503, dtype="float64") /* ty=Tensor[(280), float64] */;
    %1512 = dyn.reshape(%1509, %1510, newshape=[]) /* ty=Tensor[(?), float64] */;
    %1513 = %1498.0;
    %1514 = %1499.1;
    %1515 = maximum(%1511, %1512) /* ty=Tensor[(280), float64] */;
    (%1513, %1514, %1515)
  };
  %1516(%var_20797) /* ty=(Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64], Tensor[(280), float64]) */
}

def @func_6713() -> (Tensor[(15, 10, 3), float64],) {
  @func_6711() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_12964() -> (Tensor[(15, 10, 3), float64],) {
  %1518 = fn () -> (Tensor[(15, 10, 3), float64],) {
    %1517 = @func_376() /* ty=Tensor[(15, 10, 3), float64] */;
    (%1517,)
  };
  %1518() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_732() -> (Tensor[(15, 10, 3), float64],) {
  %1521 = fn () -> (Tensor[(15, 10, 3), float64],) {
    %1519 = @func_300() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %1520 = %1519.1;
    (%1520,)
  };
  %1521() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_18003(%var_18002: Tensor[(12, 9, 1), uint16]) -> (Tensor[(12, 9, 1), bool],) {
  %1525 = fn (%var_17996: Tensor[(12, 9, 1), uint16]) -> (Tensor[(12, 9, 1), bool],) {
    %1522 = cast(meta[relay.Constant][41] /* ty=uint16 */, dtype="bool") /* ty=bool */;
    %1523 = cast(%var_17996, dtype="bool") /* ty=Tensor[(12, 9, 1), bool] */;
    %1524 = equal(%1522, %1523) /* ty=Tensor[(12, 9, 1), bool] */;
    (%1524,)
  };
  %1525(%var_18002) /* ty=(Tensor[(12, 9, 1), bool],) */
}

def @func_3565(%var_3549: Tensor[(8, 14, 9), float64]) -> (Tensor[(8, 14, 9), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32]) {
  %1526 = cast(%var_3549, dtype="float64") /* ty=Tensor[(8, 14, 9), float64] */;
  %1527 = shape_of(meta[relay.Constant][42] /* ty=Tensor[(8, 14, 9), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1528 = cast(meta[relay.Constant][42] /* ty=Tensor[(8, 14, 9), float64] */, dtype="float64") /* ty=Tensor[(8, 14, 9), float64] */;
  %1529 = dyn.reshape(%1526, %1527, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1530 = @func_1726() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1531 = mod(%1528, %1529) /* ty=Tensor[(8, 14, 9), float64] */;
  %1532 = %1530.3;
  %1533 = @func_2565() /* ty=Tensor[(60), float32] */;
  (%1531, %1532, %1533)
}

def @func_5664() -> (Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64], Tensor[(60), float32]) {
  @func_5662() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */
}

def @func_5400() -> (Tensor[(60), float32],) {
  %1535 = fn () -> (Tensor[(60), float32],) {
    %1534 = @func_2284() /* ty=Tensor[(60), float32] */;
    (%1534,)
  };
  %1535() /* ty=(Tensor[(60), float32],) */
}

def @func_8405() -> (Tensor[(8, 13, 10), float32], Tensor[(4, 9, 5), float32]) {
  @func_8403() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(4, 9, 5), float32]) */
}

def @func_2845() -> (Tensor[(15, 10, 3), float64],) {
  %1538 = fn () -> (Tensor[(15, 10, 3), float64],) {
    %1536 = @func_731() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %1537 = %1536.0;
    (%1537,)
  };
  %1538() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_7466(%var_7464: Tensor[(8, 14, 6), uint16], %var_7465: Tensor[(8, 14, 6), uint16]) -> (Tensor[(8, 14, 6), bool], Tensor[(15, 10, 3), float64], Tensor[(8, 7, 11), uint64], Tensor[(616), bool], Tensor[(15, 10, 3), float64]) {
  @func_7462(%var_7464, %var_7465) /* ty=(Tensor[(8, 14, 6), bool], Tensor[(15, 10, 3), float64], Tensor[(8, 7, 11), uint64], Tensor[(616), bool], Tensor[(15, 10, 3), float64]) */
}

def @func_11944() -> (Tensor[(15, 10, 3), float64], Tensor[(60, ?), bool], Tensor[(60), float32]) {
  @func_11942() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60, ?), bool], Tensor[(60), float32]) */
}

def @func_17122() -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1545 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
    %1539 = @func_5110() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %1540 = @func_796() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %1541 = @func_12304() /* ty=Tensor[(15, 10, 3), float64] */;
    %1542 = @func_2284() /* ty=Tensor[(60), float32] */;
    %1543 = %1539.0;
    %1544 = %1540.1;
    (%1541, %1542, %1543, %1544)
  };
  %1545() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_9802() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1554 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
    %1546 = @func_796() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %1547 = @func_2866() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %1548 = @func_198() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %1549 = @func_7881() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %1550 = %1546.0;
    %1551 = %1547.0;
    %1552 = %1548.0;
    %1553 = %1549.0;
    (%1550, %1551, %1552, %1553)
  };
  %1554() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_2855() -> Tensor[(4, 9, 5), float32] {
  %1556 = fn () -> Tensor[(4, 9, 5), float32] {
    %1555 = cast(meta[relay.Constant][43] /* ty=Tensor[(4, 9, 5), float32] */, dtype="float32") /* ty=Tensor[(4, 9, 5), float32] */;
    tan(%1555) /* ty=Tensor[(4, 9, 5), float32] */
  };
  %1556() /* ty=Tensor[(4, 9, 5), float32] */
}

def @func_6112() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1562 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
    %1557 = @func_796() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %1558 = @func_1879() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %1559 = @func_2198() /* ty=Tensor[(15, 10, 3), float64] */;
    %1560 = %1557.1;
    %1561 = %1558.0;
    (%1559, %1560, %1561)
  };
  %1562() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_11746() -> (Tensor[(15, 10, 3), float64],) {
  %1563 = @func_6555() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1564 = %1563.0;
  (%1564,)
}

def @func_17975(%var_17972: int8, %var_17973: Tensor[(1, 4, 16), int8], %var_17974: Tensor[(462), float64]) -> (Tensor[(1, 4, 16), int8], Tensor[(15, 10, 3), float64], Tensor[(462), float64]) {
  @func_17970(%var_17972, %var_17973, %var_17974) /* ty=(Tensor[(1, 4, 16), int8], Tensor[(15, 10, 3), float64], Tensor[(462), float64]) */
}

def @func_4929() -> Tensor[(15, 10, 3), float64] {
  @func_4927() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_19686(%var_19684: Tensor[(9, 5, 16), float64]) -> (Tensor[(9, 5, 16), float64],) {
  @func_19683(%var_19684) /* ty=(Tensor[(9, 5, 16), float64],) */
}

def @func_7601() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1569 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
    %1565 = @func_1791() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
    %1566 = @func_1879() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %1567 = %1565.0;
    %1568 = %1566.0;
    (%1567, %1568)
  };
  %1569() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_18753() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1570 = @func_13275() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1571 = @func_6959() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %1572 = %1570.0;
  %1573 = %1571.0;
  %1574 = @func_588() /* ty=Tensor[(15, 10, 3), float64] */;
  (%1572, %1573, %1574)
}

def @func_1976() -> (Tensor[(15, 10, 3), float64],) {
  %1577 = fn () -> (Tensor[(15, 10, 3), float64],) {
    %1575 = @func_1726() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %1576 = %1575.4;
    (%1576,)
  };
  %1577() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_15971() -> (Tensor[(15, 10, 3), float64],) {
  @func_15969() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_5467(%var_5407: Tensor[(16, 5, 13), float32]) -> (Tensor[(16, 5, 13), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1578 = cast(%var_5407, dtype="float32") /* ty=Tensor[(16, 5, 13), float32] */;
  %1579 = @func_1383() /* ty=(Tensor[(60), float32],) */;
  %1580 = @func_5110() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1581 = cosh(%1578) /* ty=Tensor[(16, 5, 13), float32] */;
  %1582 = @func_2479() /* ty=Tensor[(15, 10, 3), float64] */;
  %1583 = @func_2198() /* ty=Tensor[(15, 10, 3), float64] */;
  %1584 = %1579.0;
  %1585 = @func_3540() /* ty=Tensor[(15, 10, 3), float64] */;
  %1586 = %1580.1;
  %1587 = @func_2479() /* ty=Tensor[(15, 10, 3), float64] */;
  (%1581, %1582, %1583, %1584, %1585, %1586, %1587)
}

def @func_10608() -> Tensor[(15, 10, 3), float64] {
  %1588 = fn () -> Tensor[(15, 10, 3), float64] {
    @func_1661() /* ty=Tensor[(15, 10, 3), float64] */
  };
  %1588() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_11104() -> Tensor[(15, 10, 3), float64] {
  @func_11102() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_15635() -> (Tensor[(15, 10, 3), uint64], Tensor[(15, 10, 3), float64]) {
  %1589 = @func_4031() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), uint64]) */;
  %1590 = %1589.1;
  %1591 = @func_14710() /* ty=Tensor[(15, 10, 3), float64] */;
  (%1590, %1591)
}

def @func_10649() -> (Tensor[(8, 13, 10), bool], Tensor[(8, 13, 10), float32], Tensor[(9, 8, 14), float64], Tensor[(84, 12), float64]) {
  %1605 = fn () -> (Tensor[(8, 13, 10), bool], Tensor[(8, 13, 10), float32], Tensor[(9, 8, 14), float64], Tensor[(84, 12), float64]) {
    %1592 = @func_8510() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), uint64]) */;
    %1593 = %1592.0;
    %1594 = cast(meta[relay.Constant][44] /* ty=Tensor[(8, 13, 10), float32] */, dtype="bool") /* ty=Tensor[(8, 13, 10), bool] */;
    %1595 = shape_of(%1593, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1596 = cast(%1593, dtype="bool") /* ty=Tensor[(8, 13, 10), bool] */;
    %1597 = dyn.reshape(%1594, %1595, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1598 = @func_8331() /* ty=(Tensor[(8, 13, 10), float32],) */;
    %1599 = cast(meta[relay.Constant][45] /* ty=Tensor[(84, 12), float64] */, dtype="float64") /* ty=Tensor[(84, 12), float64] */;
    %1600 = reshape(%1599, newshape=[9, 8, 14]) /* ty=Tensor[(9, 8, 14), float64] */;
    %1601 = @func_8992(%1600) /* ty=(Tensor[(9, 8, 14), float64], Tensor[(15, 10, 3), float64]) */;
    %1602 = greater(%1596, %1597) /* ty=Tensor[(8, 13, 10), bool] */;
    %1603 = %1598.0;
    %1604 = %1601.0;
    (%1602, %1603, %1604, meta[relay.Constant][45] /* ty=Tensor[(84, 12), float64] */)
  };
  %1605() /* ty=(Tensor[(8, 13, 10), bool], Tensor[(8, 13, 10), float32], Tensor[(9, 8, 14), float64], Tensor[(84, 12), float64]) */
}

def @func_14005(%var_13979: Tensor[(540), uint8]) -> (Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool], Tensor[(540), uint8]) {
  %1606 = @func_8083() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1607 = @func_12640() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(1280, 11), uint8], Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64]) */;
  %1608 = cast(%var_13979, dtype="uint8") /* ty=Tensor[(540), uint8] */;
  %1609 = cast(%var_13979, dtype="uint8") /* ty=Tensor[(540), uint8] */;
  %1610 = reshape(%1608, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), uint8] */;
  %1611 = reshape(%1609, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), uint8] */;
  %1612 = @func_811(%1610, %1611) /* ty=(Tensor[(9, 10, 6), bool],) */;
  %1613 = %1606.0;
  %1614 = %1607.3;
  %1615 = %1612.0;
  (%1613, %1614, %1615, %var_13979)
}

def @func_3329() -> (Tensor[(60), float32],) {
  %1616 = @func_3090() /* ty=(Tensor[(60), float32],) */;
  %1617 = %1616.0;
  (%1617,)
}

def @func_12680() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32]) {
  %1618 = @func_6197() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %1619 = @func_8613() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32]) */;
  %1620 = %1618.1;
  %1621 = %1619.4;
  (%1620, %1621)
}

def @func_10412() -> Tensor[(15, 10, 3), float64] {
  @func_10410() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_4269() -> (Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  @func_4267() /* ty=(Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_3331() -> (Tensor[(60), float32],) {
  @func_3329() /* ty=(Tensor[(60), float32],) */
}

def @func_4547() -> (Tensor[(15, 10, 3), float64],) {
  %1622 = @func_588() /* ty=Tensor[(15, 10, 3), float64] */;
  (%1622,)
}

def @func_3105() -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) {
  %1623 = @func_1541() /* ty=(Tensor[(60), float32],) */;
  %1624 = @func_2844() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1625 = @func_937() /* ty=Tensor[(15, 10, 3), float64] */;
  %1626 = %1623.0;
  %1627 = %1624.0;
  (%1625, %1626, %1627)
}

def @func_17495() -> Tensor[(10, 14, 15), float64] {
  @func_17493() /* ty=Tensor[(10, 14, 15), float64] */
}

def @func_20106() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1628 = @func_17620() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64]) */;
  %1629 = @func_14362() /* ty=Tensor[(15, 10, 3), float64] */;
  %1630 = %1628.1;
  (%1629, %1630)
}

def @func_20578() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1631 = @func_9801() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1632 = %1631.1;
  %1633 = @func_11728() /* ty=Tensor[(15, 10, 3), float64] */;
  (%1632, %1633)
}

def @func_11942() -> (Tensor[(15, 10, 3), float64], Tensor[(60, ?), bool], Tensor[(60), float32]) {
  %1634 = cast(meta[relay.Constant][46] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %1635 = reshape(%1634, newshape=[60, 1]) /* ty=Tensor[(60, 1), float32] */;
  %1636 = @func_3455(%1635) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60, ?), bool]) */;
  %1637 = @func_7485() /* ty=Tensor[(15, 10, 3), float64] */;
  %1638 = %1636.1;
  (%1637, %1638, meta[relay.Constant][46] /* ty=Tensor[(60), float32] */)
}

def @func_15798(%var_15796: Tensor[(280), int16]) -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(5, 4, 14), int16], Tensor[(280), int16], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) {
  @func_15795(%var_15796) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(5, 4, 14), int16], Tensor[(280), int16], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */
}

def @func_15821() -> (Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) {
  @func_15819() /* ty=(Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */
}

def @func_8958() -> Tensor[(15, 10, 3), float64] {
  @func_8956() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_4047() -> (Tensor[(15, 10, 3), float64],) {
  @func_4045() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_5068() -> (Tensor[(60), float32], Tensor[(15, 10, 3), float64]) {
  %1639 = @func_1383() /* ty=(Tensor[(60), float32],) */;
  %1640 = %1639.0;
  %1641 = @func_314() /* ty=Tensor[(15, 10, 3), float64] */;
  (%1640, %1641)
}

def @func_8240() -> Tensor[(4, 9, 5), float32] {
  %1642 = @func_7783() /* ty=(Tensor[(4, 9, 5), float32], Tensor[(4, 9, 5), float32]) */;
  %1642.1
}

def @func_14472() -> Tensor[(15, 10, 3), float64] {
  %1643 = @func_2844() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1643.0
}

def @func_2475() -> Tensor[(9, 10, 6), bool] {
  @func_2473() /* ty=Tensor[(9, 10, 6), bool] */
}

def @func_18402() -> Tensor[(15, 10, 3), float64] {
  %1644 = @func_8023() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1644.1
}

def @func_3156() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool], Tensor[(15, 10, 3), float64]) {
  %1654 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool], Tensor[(15, 10, 3), float64]) {
    %1645 = @func_2785() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %1646 = @func_1495() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %1647 = @func_2589() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) */;
    %1648 = @func_1975() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %1649 = %1645.0;
    %1650 = @func_2130() /* ty=Tensor[(15, 10, 3), float64] */;
    %1651 = %1646.0;
    %1652 = %1647.1;
    %1653 = %1648.0;
    (%1649, %1650, %1651, %1652, %1653)
  };
  %1654() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool], Tensor[(15, 10, 3), float64]) */
}

def @func_17340() -> Tensor[(15, 10, 3), uint64] {
  @func_17338() /* ty=Tensor[(15, 10, 3), uint64] */
}

def @func_15969() -> (Tensor[(15, 10, 3), float64],) {
  %1655 = @func_2589() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(9, 10, 6), bool]) */;
  %1656 = %1655.0;
  (%1656,)
}

def @func_18404() -> Tensor[(15, 10, 3), float64] {
  @func_18402() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_2160(%var_2147: Tensor[(5, 4, 14), int16], %var_2148: Tensor[(5, 4, 14), int16]) -> Tensor[(5, 4, 14), int16] {
  %1657 = cast(%var_2148, dtype="int16") /* ty=Tensor[(5, 4, 14), int16] */;
  %1658 = shape_of(%var_2147, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1659 = cast(%var_2147, dtype="int16") /* ty=Tensor[(5, 4, 14), int16] */;
  %1660 = dyn.reshape(%1657, %1658, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_xor(%1659, %1660) /* ty=Tensor[(5, 4, 14), int16] */
}

def @func_14609() -> (Tensor[(60), float32],) {
  %1661 = @func_2827() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60, 1), float32], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) */;
  %1662 = %1661.2;
  (%1662,)
}

def @func_20274() -> (Tensor[(9, 13, 5), bool], Tensor[(5, 4, 14), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1673 = fn () -> (Tensor[(9, 13, 5), bool], Tensor[(5, 4, 14), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
    %1663 = cast(meta[relay.Constant][48] /* ty=Tensor[(9, 13, 5), int16] */, dtype="bool") /* ty=Tensor[(9, 13, 5), bool] */;
    %1664 = shape_of(meta[relay.Constant][47] /* ty=Tensor[(9, 13, 5), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1665 = cast(meta[relay.Constant][47] /* ty=Tensor[(9, 13, 5), int16] */, dtype="bool") /* ty=Tensor[(9, 13, 5), bool] */;
    %1666 = dyn.reshape(%1663, %1664, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1667 = @func_8194() /* ty=(Tensor[(60), float32], Tensor[(280), int16], Tensor[(15, 10, 3), float64], Tensor[(5, 4, 14), float64], Tensor[(5, 4, 14), float64], Tensor[(280), int16]) */;
    %1668 = @func_7881() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %1669 = greater(%1665, %1666) /* ty=Tensor[(9, 13, 5), bool] */;
    %1670 = %1667.3;
    %1671 = @func_13287() /* ty=Tensor[(15, 10, 3), float64] */;
    %1672 = %1668.0;
    (%1669, %1670, %1671, %1672)
  };
  %1673() /* ty=(Tensor[(9, 13, 5), bool], Tensor[(5, 4, 14), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_12119() -> (Tensor[(15, 10, 3), float64],) {
  @func_12117() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_13003() -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32]) {
  @func_13001() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */
}

def @func_1473(%var_1471: Tensor[(60), float32], %var_1472: Tensor[(15, 10, 3), float64]) -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), bool], Tensor[(15, 10, 3), int8]) {
  %1695 = fn (%var_1448: Tensor[(60), float32], %var_1464: Tensor[(15, 10, 3), float64]) -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), bool], Tensor[(15, 10, 3), int8]) {
    %1674 = @func_258() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %1675 = @func_796() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %1676 = @func_937() /* ty=Tensor[(15, 10, 3), float64] */;
    %1677 = cast(%1676, dtype="float64") /* ty=Tensor[(15, 10, 3), float64] */;
    %1678 = tan(%1677) /* ty=Tensor[(15, 10, 3), float64] */;
    %1679 = cast(%var_1448, dtype="float32") /* ty=Tensor[(60), float32] */;
    %1680 = reshape(%1679, newshape=[3, 20]) /* ty=Tensor[(3, 20), float32] */;
    %1681 = @func_718(%1680) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(3, 20), float32]) */;
    %1682 = %1681.1;
    %1683 = cast(%1682, dtype="bool") /* ty=Tensor[(15, 10, 3), bool] */;
    %1684 = shape_of(%1678, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1685 = cast(%1678, dtype="bool") /* ty=Tensor[(15, 10, 3), bool] */;
    %1686 = dyn.reshape(%1683, %1684, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1687 = cast(%var_1464, dtype="int8") /* ty=Tensor[(15, 10, 3), int8] */;
    %1688 = shape_of(%1678, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1689 = cast(%1678, dtype="int8") /* ty=Tensor[(15, 10, 3), int8] */;
    %1690 = dyn.reshape(%1687, %1688, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %1691 = %1674.3;
    %1692 = %1675.0;
    %1693 = logical_and(%1685, %1686) /* ty=Tensor[(15, 10, 3), bool] */;
    %1694 = subtract(%1689, %1690) /* ty=Tensor[(15, 10, 3), int8] */;
    (%1691, %1692, %var_1448, %1693, %1694)
  };
  %1695(%var_1471, %var_1472) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), bool], Tensor[(15, 10, 3), int8]) */
}

def @func_8615() -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32]) {
  @func_8613() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float32]) */
}

def @func_17375(%var_17369: Tensor[(8, 9, 11), uint8]) -> (Tensor[(8, 9, 11), uint8],) {
  %1696 = cast(%var_17369, dtype="uint8") /* ty=Tensor[(8, 9, 11), uint8] */;
  %1697 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(8, 9, 11), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1698 = cast(meta[relay.Constant][49] /* ty=Tensor[(8, 9, 11), uint8] */, dtype="uint8") /* ty=Tensor[(8, 9, 11), uint8] */;
  %1699 = dyn.reshape(%1696, %1697, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1700 = bitwise_xor(%1698, %1699) /* ty=Tensor[(8, 9, 11), uint8] */;
  (%1700,)
}

def @func_6832() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) {
  %1701 = @func_2036() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1702 = @func_5967() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1703 = @func_5662() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
  %1704 = %1701.0;
  %1705 = %1702.0;
  %1706 = %1703.0;
  (%1704, %1705, %1706)
}

def @func_4317() -> (Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) {
  @func_4315() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */
}

def @func_2403() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  @func_2401() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_1727() -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1715 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
    %1707 = @func_1579() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */;
    %1708 = @func_1501() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %1709 = @func_796() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %1710 = @func_666() /* ty=Tensor[(15, 10, 3), float64] */;
    %1711 = %1707.1;
    %1712 = @func_314() /* ty=Tensor[(15, 10, 3), float64] */;
    %1713 = %1708.0;
    %1714 = %1709.1;
    (%1710, %1711, %1712, %1713, %1714)
  };
  %1715() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_10336() -> Tensor[(15, 10, 3), float64] {
  %1717 = fn () -> Tensor[(15, 10, 3), float64] {
    %1716 = @func_2401() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %1716.0
  };
  %1717() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_7273() -> (Tensor[(15, 10, 3), float32],) {
  %1727 = fn () -> (Tensor[(15, 10, 3), float32],) {
    %1718 = @func_1181() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %1719 = %1718.0;
    %1720 = @func_4547() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %1721 = %1720.0;
    %1722 = cast(%1721, dtype="float32") /* ty=Tensor[(15, 10, 3), float32] */;
    %1723 = shape_of(%1719, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1724 = cast(%1719, dtype="float32") /* ty=Tensor[(15, 10, 3), float32] */;
    %1725 = dyn.reshape(%1722, %1723, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1726 = floor_divide(%1724, %1725) /* ty=Tensor[(15, 10, 3), float32] */;
    (%1726,)
  };
  %1727() /* ty=(Tensor[(15, 10, 3), float32],) */
}

def @func_16724() -> (Tensor[(15, 10, 3), float64], Tensor[(1280, 12), int8], Tensor[(4, 9, 5), float32]) {
  %1728 = @func_2401() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1729 = @func_6323() /* ty=(Tensor[(4, 9, 5), float32], Tensor[(60), float32], Tensor[(10, 16, 8), int16], Tensor[(1280, 1), int64], Tensor[(60), float32]) */;
  %1730 = %1729.3;
  %1731 = cast(%1730, dtype="float64") /* ty=Tensor[(1280, 1), float64] */;
  %1732 = cast(meta[relay.Constant][50] /* ty=Tensor[(1280, 12), int64] */, dtype="float64") /* ty=Tensor[(1280, 12), float64] */;
  %1733 = subtract(%1731, %1732) /* ty=Tensor[(1280, 12), float64] */;
  %1734 = cast(%1730, dtype="float64") /* ty=Tensor[(1280, 1), float64] */;
  %1735 = acosh(%1734) /* ty=Tensor[(1280, 1), float64] */;
  %1736 = cast(%1735, dtype="float64") /* ty=Tensor[(1280, 1), float64] */;
  %1737 = sin(%1736) /* ty=Tensor[(1280, 1), float64] */;
  %1738 = cast(%1733, dtype="int8") /* ty=Tensor[(1280, 12), int8] */;
  %1739 = cast(%1737, dtype="int8") /* ty=Tensor[(1280, 1), int8] */;
  %1740 = @func_12259() /* ty=(Tensor[(4, 9, 5), float32], Tensor[(15, 10, 3), float64]) */;
  %1741 = %1728.0;
  %1742 = logical_xor(%1738, %1739) /* ty=Tensor[(1280, 12), int8] */;
  %1743 = %1740.0;
  (%1741, %1742, %1743)
}

def @func_16248() -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32]) {
  @func_16246() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */
}

def @func_168() -> (Tensor[(15, 10, 3), float64],) {
  %1748 = fn () -> (Tensor[(15, 10, 3), float64],) {
    %1744 = cast(meta[relay.Constant][51] /* ty=Tensor[(15, 10, 3), float64] */, dtype="float64") /* ty=Tensor[(15, 10, 3), float64] */;
    %1745 = asin(%1744) /* ty=Tensor[(15, 10, 3), float64] */;
    %1746 = cast(%1745, dtype="float64") /* ty=Tensor[(15, 10, 3), float64] */;
    %1747 = log2(%1746) /* ty=Tensor[(15, 10, 3), float64] */;
    (%1747,)
  };
  %1748() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_4608() -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), int32]) {
  %1758 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), int32]) {
    %1749 = @func_3090() /* ty=(Tensor[(60), float32],) */;
    %1750 = @func_376() /* ty=Tensor[(15, 10, 3), float64] */;
    %1751 = cast(%1750, dtype="float64") /* ty=Tensor[(15, 10, 3), float64] */;
    %1752 = cast(%1750, dtype="bool") /* ty=Tensor[(15, 10, 3), bool] */;
    %1753 = reshape(%1751, newshape=[15, 10, 3]) /* ty=Tensor[(15, 10, 3), float64] */;
    %1754 = reshape(%1752, newshape=[15, 10, 3]) /* ty=Tensor[(15, 10, 3), bool] */;
    %1755 = @func_1135(%1753, %1754) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), int32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %1756 = %1749.0;
    %1757 = %1755.2;
    (%1750, %1756, %1757)
  };
  %1758() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), int32]) */
}

def @func_11694() -> Tensor[(15, 10, 3), uint64] {
  @func_11692() /* ty=Tensor[(15, 10, 3), uint64] */
}

def @func_18141() -> (Tensor[(10, 14, 15), float64], Tensor[(2, 4, 12), float64], Tensor[(1, 297), bool], Tensor[(96), float64], Tensor[(60), float32], Tensor[(520), uint16], Tensor[(15, 10, 3), float64]) {
  @func_18139() /* ty=(Tensor[(10, 14, 15), float64], Tensor[(2, 4, 12), float64], Tensor[(1, 297), bool], Tensor[(96), float64], Tensor[(60), float32], Tensor[(520), uint16], Tensor[(15, 10, 3), float64]) */
}

def @func_5715() -> Tensor[(15, 10, 3), float64] {
  %1759 = @func_167() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1759.0
}

def @func_3092() -> (Tensor[(60), float32],) {
  @func_3090() /* ty=(Tensor[(60), float32],) */
}

def @func_887() -> (Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), float64], Tensor[(60), float32], Tensor[(15, 10, 3), float64]) {
  %1760 = @func_376() /* ty=Tensor[(15, 10, 3), float64] */;
  %1761 = cast(%1760, dtype="float32") /* ty=Tensor[(15, 10, 3), float32] */;
  %1762 = cast(meta[relay.Constant][52] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %1763 = reshape(%1762, newshape=[60, 1]) /* ty=Tensor[(60, 1), float32] */;
  %1764 = @func_655(%1763) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60, 1), float32]) */;
  %1765 = @func_198() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1766 = erf(%1761) /* ty=Tensor[(15, 10, 3), float32] */;
  %1767 = %1764.2;
  %1768 = %1765.0;
  (%1766, %1767, meta[relay.Constant][52] /* ty=Tensor[(60), float32] */, %1768)
}

def @func_10298() -> (Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) {
  %1769 = @func_3869() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */;
  %1770 = @func_3540() /* ty=Tensor[(15, 10, 3), float64] */;
  %1771 = %1769.2;
  (%1770, %1771)
}

def @func_315() -> Tensor[(15, 10, 3), float64] {
  %1773 = fn () -> Tensor[(15, 10, 3), float64] {
    %1772 = @func_300() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
    %1772.0
  };
  %1773() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_19106() -> (Tensor[(60), float32], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1774 = @func_18648() /* ty=(Tensor[(60), float32], Tensor[(8, 13, 10), float32]) */;
  %1775 = @func_2977() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(280), int16]) */;
  %1776 = @func_796() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */;
  %1777 = %1774.0;
  %1778 = %1775.1;
  %1779 = %1776.0;
  (%1777, %1778, %1779)
}

def @func_14302() -> (Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) {
  %1784 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) {
    %1780 = @func_9276() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %1781 = @func_12640() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(1280, 11), uint8], Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64]) */;
    %1782 = %1780.0;
    %1783 = %1781.2;
    (%1782, %1783)
  };
  %1784() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */
}

def @func_5807(%var_5805: Tensor[(60), float32]) -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32]) {
  @func_5804(%var_5805) /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60), float32]) */
}

def @func_589() -> Tensor[(15, 10, 3), float64] {
  %1788 = fn () -> Tensor[(15, 10, 3), float64] {
    %1785 = @func_167() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %1786 = %1785.0;
    %1787 = cast(%1786, dtype="float64") /* ty=Tensor[(15, 10, 3), float64] */;
    acos(%1787) /* ty=Tensor[(15, 10, 3), float64] */
  };
  %1788() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_8003() -> (Tensor[(15, 10, 3), float64], Tensor[(10, 14, 15), float64], Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64]) {
  @func_8001() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(10, 14, 15), float64], Tensor[(8, 13, 10), float32], Tensor[(15, 10, 3), float64]) */
}

def @func_13628() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  @func_13626() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_301() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1792 = fn () -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
    %1789 = @func_167() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %1790 = %1789.0;
    %1791 = @func_184() /* ty=Tensor[(15, 10, 3), float64] */;
    (%1790, %1791)
  };
  %1792() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) */
}

def @func_13127(%var_13115: Tensor[(12, 11, 10), float64]) -> (Tensor[(12, 11, 10), float64],) {
  %1793 = cast(%var_13115, dtype="float64") /* ty=Tensor[(12, 11, 10), float64] */;
  %1794 = cosh(%1793) /* ty=Tensor[(12, 11, 10), float64] */;
  (%1794,)
}

def @func_20847() -> Tensor[(15, 10, 3), uint64] {
  @func_20845() /* ty=Tensor[(15, 10, 3), uint64] */
}

def @func_6381() -> (Tensor[(9, 10, 6), bool], Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64]) {
  %1795 = @func_1947() /* ty=(Tensor[(9, 10, 6), bool],) */;
  %1796 = @func_4162() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1797 = %1795.0;
  %1798 = @func_314() /* ty=Tensor[(15, 10, 3), float64] */;
  %1799 = %1796.0;
  (%1797, %1798, %1799)
}

def @func_12572() -> (Tensor[(15, 10, 3), float64],) {
  %1800 = @func_4315() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(8, 13, 10), float32]) */;
  %1801 = %1800.0;
  (%1801,)
}

def @func_10361(%var_10346: Tensor[(12, 14, 4), float32], %var_10347: Tensor[(12, 14, 4), float32]) -> Tensor[(12, 14, 4), float32] {
  %1802 = cast(%var_10347, dtype="float32") /* ty=Tensor[(12, 14, 4), float32] */;
  %1803 = shape_of(%var_10346, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1804 = cast(%var_10346, dtype="float32") /* ty=Tensor[(12, 14, 4), float32] */;
  %1805 = dyn.reshape(%1802, %1803, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  divide(%1804, %1805) /* ty=Tensor[(12, 14, 4), float32] */
}

def @func_9507() -> (Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60, ?), uint16]) {
  @func_9505() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(15, 10, 3), float64], Tensor[(60, ?), uint16]) */
}

def @func_11754() -> (Tensor[(15, 10, 3), float64],) {
  %1806 = @func_4547() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1807 = %1806.0;
  (%1807,)
}

def @func_11748() -> (Tensor[(15, 10, 3), float64],) {
  @func_11746() /* ty=(Tensor[(15, 10, 3), float64],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

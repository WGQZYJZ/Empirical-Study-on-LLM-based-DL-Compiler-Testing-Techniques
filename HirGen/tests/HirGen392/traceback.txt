==========mod==========
#[version = "0.0.5"]
def @func_5196() -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), uint32], Tensor[(720), float32]) {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %1 = @func_4407() /* ty=Tensor[(3, 12, 5), float32] */;
  %2 = cast(%1, dtype="float64") /* ty=Tensor[(3, 12, 5), float64] */;
  %3 = reshape(%0, newshape=[9, 8, 10]) /* ty=Tensor[(9, 8, 10), float32] */;
  %4 = reshape(%2, newshape=[3, 12, 5]) /* ty=Tensor[(3, 12, 5), float64] */;
  %5 = @func_732(%3, %4) /* ty=(Tensor[(3, 12, 5), float32], Tensor[(9, 8, 10), float32], Tensor[(9, 8, 10), float64], Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float32]) */;
  %6 = %5.3;
  (%1, %6, meta[relay.Constant][0] /* ty=Tensor[(720), float32] */)
}

def @func_8987() -> (Tensor[(3, 12, 5), uint32],) {
  %7 = @func_6770() /* ty=(Tensor[(3, 12, 5), uint32],) */;
  %8 = %7.0;
  (%8,)
}

def @func_3013() -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), bool], Tensor[(720), float64]) {
  %9 = @func_1572() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
  %10 = %9.0;
  %11 = cast(%10, dtype="float64") /* ty=Tensor[(3, 12, 5), float64] */;
  %12 = cast(meta[relay.Constant][1] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %13 = reshape(%11, newshape=[3, 12, 5]) /* ty=Tensor[(3, 12, 5), float64] */;
  %14 = reshape(%12, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %15 = @func_2371(%13, %14) /* ty=(Tensor[(3, 12, 5), bool], Tensor[(8, 6, 15), int8], Tensor[(720), float64]) */;
  %16 = %15.0;
  (%10, %16, meta[relay.Constant][1] /* ty=Tensor[(720), float64] */)
}

def @func_6270() -> (Tensor[(3, 12, 5), uint32],) {
  %17 = @func_3467() /* ty=Tensor[(3, 12, 5), uint32] */;
  (%17,)
}

def @func_5654() -> (Tensor[(720), float32], Tensor[(3, 12, 5), float32], Tensor[(56, 2), float64]) {
  %18 = cast(meta[relay.Constant][2] /* ty=Tensor[(56, 2), float64] */, dtype="float64") /* ty=Tensor[(56, 2), float64] */;
  %19 = reshape(%18, newshape=[8, 2, 7]) /* ty=Tensor[(8, 2, 7), float64] */;
  %20 = @func_946(%19) /* ty=(Tensor[(8, 2, 7), float64], Tensor[(3, 12, 5), float32], Tensor[(720), float32], Tensor[(6, 30), float64]) */;
  %21 = cast(meta[relay.Constant][2] /* ty=Tensor[(56, 2), float64] */, dtype="float64") /* ty=Tensor[(56, 2), float64] */;
  %22 = @func_3851() /* ty=Tensor[(720), float32] */;
  %23 = %20.1;
  %24 = exp(%21) /* ty=Tensor[(56, 2), float64] */;
  (%22, %23, %24)
}

def @func_7403() -> Tensor[(3, 12, 5), float32] {
  %25 = @func_1541() /* ty=(Tensor[(3, 12, 5), float32],) */;
  %25.0
}

def @func_2677(%var_2651: Tensor[(15), float32], %var_2652: Tensor[(225), float32]) -> (Tensor[(3, 12, 5), float32], Tensor[(3, 15, 5), float32], Tensor[(15), float32], Tensor[(225), float32], Tensor[(720), float32], Tensor[(3, 12, 5), float32]) {
  %26 = cast(%var_2651, dtype="float32") /* ty=Tensor[(15), float32] */;
  %27 = cast(%var_2652, dtype="float32") /* ty=Tensor[(225), float32] */;
  %28 = reshape(%26, newshape=[3, 1, 5]) /* ty=Tensor[(3, 1, 5), float32] */;
  %29 = reshape(%27, newshape=[3, 15, 5]) /* ty=Tensor[(3, 15, 5), float32] */;
  %30 = @func_808() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), uint32], Tensor[(720), float32]) */;
  %31 = @func_1464() /* ty=Tensor[(3, 12, 5), float32] */;
  %32 = @func_208(%28, %29) /* ty=Tensor[(3, 15, 5), float32] */;
  %33 = %30.2;
  %34 = @func_566() /* ty=Tensor[(3, 12, 5), float32] */;
  (%31, %32, %var_2651, %var_2652, %33, %34)
}

def @func_8540() -> (Tensor[(3, 12, 5), float64],) {
  %35 = @func_6946() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %36 = %35.1;
  (%36,)
}

def @func_3587(%var_3519: Tensor[(112), float64], %var_3562: Tensor[(15), float32], %var_3563: Tensor[(225), float32]) -> (Tensor[(3, 12, 5), float64], Tensor[(6, 30), float64], Tensor[(112), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32], Tensor[(15), float32], Tensor[(225), float64]) {
  %37 = cast(%var_3519, dtype="float64") /* ty=Tensor[(112), float64] */;
  %38 = reshape(%37, newshape=[8, 2, 7]) /* ty=Tensor[(8, 2, 7), float64] */;
  %39 = @func_946(%38) /* ty=(Tensor[(8, 2, 7), float64], Tensor[(3, 12, 5), float32], Tensor[(720), float32], Tensor[(6, 30), float64]) */;
  %40 = %39.3;
  %41 = cast(%40, dtype="float32") /* ty=Tensor[(6, 30), float32] */;
  %42 = reshape(%41, newshape=[3, 12, 5]) /* ty=Tensor[(3, 12, 5), float32] */;
  %43 = @func_2144(%42) /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(720), float32], Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float64]) */;
  %44 = cast(%var_3562, dtype="float32") /* ty=Tensor[(15), float32] */;
  %45 = cast(%var_3563, dtype="float32") /* ty=Tensor[(225), float32] */;
  %46 = reshape(%44, newshape=[15]) /* ty=Tensor[(15), float32] */;
  %47 = reshape(%45, newshape=[225]) /* ty=Tensor[(225), float32] */;
  %48 = @func_2677(%46, %47) /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 15, 5), float32], Tensor[(15), float32], Tensor[(225), float32], Tensor[(720), float32], Tensor[(3, 12, 5), float32]) */;
  %49 = cast(meta[relay.Constant][3] /* ty=Tensor[(225), float32] */, dtype="float64") /* ty=Tensor[(225), float64] */;
  %50 = shape_of(%var_3563, dtype="int32") /* ty=Tensor[(1), int32] */;
  %51 = cast(%var_3563, dtype="float64") /* ty=Tensor[(225), float64] */;
  %52 = dyn.reshape(%49, %50, newshape=[]) /* ty=Tensor[(?), float64] */;
  %53 = @func_275() /* ty=Tensor[(3, 12, 5), float64] */;
  %54 = %43.0;
  %55 = %48.5;
  %56 = mod(%51, %52) /* ty=Tensor[(225), float64] */;
  (%53, %40, %var_3519, %54, %55, %var_3562, %56)
}

def @func_10183() -> (Tensor[(3, 12, 5), float64],) {
  %57 = @func_4159() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(8, 6, 15), float64]) */;
  %58 = %57.1;
  (%58,)
}

def @func_636() -> Tensor[(3, 12, 5), float32] {
  %59 = @func_608() /* ty=(Tensor[(3, 12, 5), float32],) */;
  %59.0
}

def @func_4327() -> (Tensor[(720), float32], Tensor[(3, 12, 5), float64], Tensor[(7, 8, 13), float32]) {
  %60 = @func_808() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), uint32], Tensor[(720), float32]) */;
  %61 = @func_2849() /* ty=(Tensor[(3, 12, 5), float64],) */;
  %62 = @func_3418() /* ty=(Tensor[(7, 8, 13), float32],) */;
  %63 = %60.2;
  %64 = %61.0;
  %65 = %62.0;
  (%63, %64, %65)
}

def @func_884() -> (Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) {
  %66 = @func_636() /* ty=Tensor[(3, 12, 5), float32] */;
  %67 = @func_808() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), uint32], Tensor[(720), float32]) */;
  %68 = %67.1;
  %69 = cast(%68, dtype="int32") /* ty=Tensor[(3, 12, 5), int32] */;
  %70 = shape_of(%66, dtype="int32") /* ty=Tensor[(3), int32] */;
  %71 = cast(%66, dtype="int32") /* ty=Tensor[(3, 12, 5), int32] */;
  %72 = dyn.reshape(%69, %70, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %73 = @func_410() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %74 = left_shift(%71, %72) /* ty=Tensor[(3, 12, 5), int32] */;
  %75 = @func_275() /* ty=Tensor[(3, 12, 5), float64] */;
  %76 = %73.1;
  (%74, %75, %76)
}

def @func_9960(%var_9927: Tensor[(7, 8, 13), float32], %var_9938: Tensor[(7, 8, 13), float32]) -> (Tensor[(7, 8, 13), bool], Tensor[(7, 8, 13), int64]) {
  %77 = @func_8778() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(7, 8, 13), float32]) */;
  %78 = %77.1;
  %79 = cast(%var_9927, dtype="bool") /* ty=Tensor[(7, 8, 13), bool] */;
  %80 = shape_of(%78, dtype="int32") /* ty=Tensor[(3), int32] */;
  %81 = cast(%78, dtype="bool") /* ty=Tensor[(7, 8, 13), bool] */;
  %82 = dyn.reshape(%79, %80, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %83 = cast(%var_9938, dtype="int64") /* ty=Tensor[(7, 8, 13), int64] */;
  %84 = shape_of(%var_9927, dtype="int32") /* ty=Tensor[(3), int32] */;
  %85 = cast(%var_9927, dtype="int64") /* ty=Tensor[(7, 8, 13), int64] */;
  %86 = dyn.reshape(%83, %84, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %87 = equal(%81, %82) /* ty=Tensor[(7, 8, 13), bool] */;
  %88 = bitwise_xor(%85, %86) /* ty=Tensor[(7, 8, 13), int64] */;
  (%87, %88)
}

def @func_4171(%var_4168: Tensor[(720), float64]) -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), float32], Tensor[(720), float64]) {
  %89 = @func_2235() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
  %90 = cast(%var_4168, dtype="float64") /* ty=Tensor[(720), float64] */;
  %91 = cast(%var_4168, dtype="float64") /* ty=Tensor[(720), float64] */;
  %92 = reshape(%90, newshape=[8, 6, 15]) /* ty=Tensor[(8, 6, 15), float64] */;
  %93 = reshape(%91, newshape=[8, 6, 15]) /* ty=Tensor[(8, 6, 15), float64] */;
  %94 = @func_1000(%92, %93) /* ty=(Tensor[(8, 6, 15), int8], Tensor[(3, 12, 5), float32], Tensor[(8, 6, 15), bool], Tensor[(8, 6, 15), uint16]) */;
  %95 = %89.0;
  %96 = @func_1987() /* ty=Tensor[(3, 12, 5), int32] */;
  %97 = %94.1;
  (%95, %96, %97, %var_4168)
}

def @func_4407() -> Tensor[(3, 12, 5), float32] {
  %98 = @func_3165() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %98.1
}

def @func_7661() -> (Tensor[(720), float64], Tensor[(720), float32]) {
  %99 = @func_3013() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), bool], Tensor[(720), float64]) */;
  %100 = %99.2;
  %101 = @func_3851() /* ty=Tensor[(720), float32] */;
  (%100, %101)
}

def @func_1737(%var_1723: Tensor[(1, 3, 4), float32], %var_1724: Tensor[(14, 3, 4), float32]) -> (Tensor[(14, 3, 4), float32], Tensor[(1, 3, 4), float32]) {
  %102 = cast(%var_1723, dtype="float32") /* ty=Tensor[(1, 3, 4), float32] */;
  %103 = cast(%var_1724, dtype="float32") /* ty=Tensor[(14, 3, 4), float32] */;
  %104 = cast(%var_1723, dtype="float32") /* ty=Tensor[(1, 3, 4), float32] */;
  %105 = floor_mod(%102, %103) /* ty=Tensor[(14, 3, 4), float32] */;
  %106 = acos(%104) /* ty=Tensor[(1, 3, 4), float32] */;
  (%105, %106)
}

def @func_808() -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), uint32], Tensor[(720), float32]) {
  %107 = @func_566() /* ty=Tensor[(3, 12, 5), float32] */;
  %108 = cast(%107, dtype="float64") /* ty=Tensor[(3, 12, 5), float64] */;
  %109 = cast(meta[relay.Constant][4] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %110 = log(%108) /* ty=Tensor[(3, 12, 5), float64] */;
  %111 = cast(%110, dtype="float64") /* ty=Tensor[(3, 12, 5), float64] */;
  %112 = reshape(%109, newshape=[9, 8, 10]) /* ty=Tensor[(9, 8, 10), float32] */;
  %113 = reshape(%111, newshape=[3, 12, 5]) /* ty=Tensor[(3, 12, 5), float64] */;
  %114 = @func_732(%112, %113) /* ty=(Tensor[(3, 12, 5), float32], Tensor[(9, 8, 10), float32], Tensor[(9, 8, 10), float64], Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float32]) */;
  %115 = %114.3;
  (%110, %115, meta[relay.Constant][4] /* ty=Tensor[(720), float32] */)
}

def @func_9363() -> (Tensor[(3, 12, 5), uint32],) {
  %116 = @func_808() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), uint32], Tensor[(720), float32]) */;
  %117 = %116.1;
  (%117,)
}

def @func_1261(%var_1240: Tensor[(11, 6, 9), float64], %var_1241: Tensor[(11, 6, 9), float64], %var_1248: Tensor[(15), float32]) -> (Tensor[(11, 6, 9), float64], Tensor[(3, 15, 5), float32], Tensor[(15), float32], Tensor[(225), float32], Tensor[(3, 12, 5), float64]) {
  %118 = cast(%var_1241, dtype="float64") /* ty=Tensor[(11, 6, 9), float64] */;
  %119 = shape_of(%var_1240, dtype="int32") /* ty=Tensor[(3), int32] */;
  %120 = cast(%var_1240, dtype="float64") /* ty=Tensor[(11, 6, 9), float64] */;
  %121 = dyn.reshape(%118, %119, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %122 = cast(%var_1248, dtype="float32") /* ty=Tensor[(15), float32] */;
  %123 = cast(meta[relay.Constant][5] /* ty=Tensor[(225), float32] */, dtype="float32") /* ty=Tensor[(225), float32] */;
  %124 = reshape(%122, newshape=[3, 1, 5]) /* ty=Tensor[(3, 1, 5), float32] */;
  %125 = reshape(%123, newshape=[3, 15, 5]) /* ty=Tensor[(3, 15, 5), float32] */;
  %126 = @func_884() /* ty=(Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %127 = floor_mod(%120, %121) /* ty=Tensor[(11, 6, 9), float64] */;
  %128 = @func_208(%124, %125) /* ty=Tensor[(3, 15, 5), float32] */;
  %129 = %126.1;
  (%127, %128, %var_1248, meta[relay.Constant][5] /* ty=Tensor[(225), float32] */, %129)
}

def @func_9016() -> (Tensor[(3, 12, 5), int32], Tensor[(14, 2, 6), float32], Tensor[(168), uint8], Tensor[(182, 6), float64]) {
  %130 = cast(meta[relay.Constant][6] /* ty=Tensor[(168), uint8] */, dtype="uint8") /* ty=Tensor[(168), uint8] */;
  %131 = cast(meta[relay.Constant][6] /* ty=Tensor[(168), uint8] */, dtype="uint8") /* ty=Tensor[(168), uint8] */;
  %132 = @func_8240() /* ty=Tensor[(3, 12, 5), int32] */;
  %133 = cast(%132, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
  %134 = cast(meta[relay.Constant][7] /* ty=Tensor[(182, 6), float64] */, dtype="float64") /* ty=Tensor[(182, 6), float64] */;
  %135 = reshape(%130, newshape=[14, 2, 6]) /* ty=Tensor[(14, 2, 6), uint8] */;
  %136 = reshape(%131, newshape=[14, 2, 6]) /* ty=Tensor[(14, 2, 6), uint8] */;
  %137 = reshape(%133, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %138 = reshape(%134, newshape=[1092]) /* ty=Tensor[(1092), float64] */;
  %139 = @func_7080(%135, %136, %137, %138) /* ty=(Tensor[(14, 2, 6), bool], Tensor[(720), float32], Tensor[(180), float32], Tensor[(3, 12, 5), float32], Tensor[(14, 2, 6), float32], Tensor[(12, 7, 13), bool], Tensor[(1092), float64]) */;
  %140 = %139.4;
  (%132, %140, meta[relay.Constant][6] /* ty=Tensor[(168), uint8] */, meta[relay.Constant][7] /* ty=Tensor[(182, 6), float64] */)
}

def @func_1572() -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) {
  %141 = @func_364() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 15, 5), float32], Tensor[(15), float32], Tensor[(225), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
  %142 = @func_263() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
  %143 = %141.4;
  %144 = %142.0;
  %145 = @func_275() /* ty=Tensor[(3, 12, 5), float64] */;
  (%143, %144, %145)
}

def @func_8087(%var_8062: Tensor[(88), float32]) -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(2, 4, 11), int8], Tensor[(88), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), int32]) {
  %146 = @func_5272() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(10, 2, 5), float32]) */;
  %147 = @func_2825() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), int32]) */;
  %148 = @func_3221() /* ty=(Tensor[(3, 12, 5), float64],) */;
  %149 = cast(%var_8062, dtype="float32") /* ty=Tensor[(88), float32] */;
  %150 = %147.0;
  %151 = cast(%150, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
  %152 = cast(%var_8062, dtype="float32") /* ty=Tensor[(88), float32] */;
  %153 = reshape(%149, newshape=[2, 4, 11]) /* ty=Tensor[(2, 4, 11), float32] */;
  %154 = reshape(%151, newshape=[30, 6]) /* ty=Tensor[(30, 6), float32] */;
  %155 = reshape(%152, newshape=[2, 4, 11]) /* ty=Tensor[(2, 4, 11), float32] */;
  %156 = @func_3336(%153, %154, %155) /* ty=(Tensor[(3, 12, 5), float64], Tensor[(30, 6), float32], Tensor[(2, 4, 11), int8], Tensor[(2, 4, 11), float64], Tensor[(3, 12, 5), int32]) */;
  %157 = %156.2;
  %158 = cast(%157, dtype="float32") /* ty=Tensor[(2, 4, 11), float32] */;
  %159 = @func_4407() /* ty=Tensor[(3, 12, 5), float32] */;
  %160 = cast(%159, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
  %161 = cast(%157, dtype="float32") /* ty=Tensor[(2, 4, 11), float32] */;
  %162 = reshape(%158, newshape=[2, 4, 11]) /* ty=Tensor[(2, 4, 11), float32] */;
  %163 = reshape(%160, newshape=[30, 6]) /* ty=Tensor[(30, 6), float32] */;
  %164 = reshape(%161, newshape=[2, 4, 11]) /* ty=Tensor[(2, 4, 11), float32] */;
  %165 = @func_3336(%162, %163, %164) /* ty=(Tensor[(3, 12, 5), float64], Tensor[(30, 6), float32], Tensor[(2, 4, 11), int8], Tensor[(2, 4, 11), float64], Tensor[(3, 12, 5), int32]) */;
  %166 = %146.0;
  %167 = %148.0;
  %168 = %165.4;
  (%166, %150, %167, %157, %var_8062, %159, %168)
}

def @func_5516() -> Tensor[(3, 12, 5), float64] {
  %169 = @func_4820() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %169.1
}

def @func_8459() -> Tensor[(3, 12, 5), float32] {
  %170 = @func_7717() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(720), float64], Tensor[(3, 12, 5), float32]) */;
  %170.2
}

def @func_8831(%var_8816: Tensor[(5, 11, 5), float32]) -> (Tensor[(5, 11, 5), uint32],) {
  %171 = cast(%var_8816, dtype="float32") /* ty=Tensor[(5, 11, 5), float32] */;
  %172 = atan(%171) /* ty=Tensor[(5, 11, 5), float32] */;
  %173 = cast(%var_8816, dtype="uint32") /* ty=Tensor[(5, 11, 5), uint32] */;
  %174 = shape_of(%172, dtype="int32") /* ty=Tensor[(3), int32] */;
  %175 = cast(%172, dtype="uint32") /* ty=Tensor[(5, 11, 5), uint32] */;
  %176 = dyn.reshape(%173, %174, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %177 = logical_xor(%175, %176) /* ty=Tensor[(5, 11, 5), uint32] */;
  (%177,)
}

def @func_5578() -> Tensor[(3, 12, 5), float32] {
  @func_1464() /* ty=Tensor[(3, 12, 5), float32] */
}

def @func_9645() -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32], Tensor[(75, 3), float32]) {
  %178 = @func_4820() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %179 = @func_5546() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
  %180 = @func_5491() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(11, 6, 9), float64], Tensor[(198, 3), float64], Tensor[(15), float32], Tensor[(15), float32], Tensor[(75, 3), float32], Tensor[(6, 7, 3), float32], Tensor[(126), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32]) */;
  %181 = %178.1;
  %182 = %179.0;
  %183 = %180.5;
  (%181, %182, %183)
}

def @func_608() -> (Tensor[(3, 12, 5), float32],) {
  %184 = @func_364() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 15, 5), float32], Tensor[(15), float32], Tensor[(225), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
  %185 = %184.4;
  (%185,)
}

def @func_6895() -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) {
  %186 = @func_4244() /* ty=(Tensor[(3, 12, 5), float32],) */;
  %187 = @func_3221() /* ty=(Tensor[(3, 12, 5), float64],) */;
  %188 = %186.0;
  %189 = %187.0;
  (%188, %189)
}

def @func_2599() -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(15), float32]) {
  %190 = @func_756() /* ty=(Tensor[(3, 12, 5), float32],) */;
  %191 = @func_1572() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
  %192 = @func_263() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
  %193 = @func_364() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 15, 5), float32], Tensor[(15), float32], Tensor[(225), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
  %194 = %190.0;
  %195 = %191.1;
  %196 = %192.1;
  %197 = %193.2;
  (%194, %195, %196, %197)
}

def @func_3028() -> Tensor[(3, 12, 5), float64] {
  %198 = @func_1665() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), int32]) */;
  %198.1
}

def @func_10294() -> (Tensor[(3, 12, 5), float32],) {
  %199 = @func_9197() /* ty=(Tensor[(3, 12, 5), float32],) */;
  %200 = %199.0;
  (%200,)
}

def @func_1522() -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) {
  %201 = @func_808() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), uint32], Tensor[(720), float32]) */;
  %202 = %201.0;
  %203 = cast(%202, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
  %204 = rsqrt(%203) /* ty=Tensor[(3, 12, 5), float32] */;
  %205 = cast(%204, dtype="float64") /* ty=Tensor[(3, 12, 5), float64] */;
  %206 = cast(%204, dtype="float64") /* ty=Tensor[(3, 12, 5), float64] */;
  %207 = asin(%205) /* ty=Tensor[(3, 12, 5), float64] */;
  %208 = cos(%206) /* ty=Tensor[(3, 12, 5), float64] */;
  (%207, %208)
}

def @func_8293() -> Tensor[(192, 2), float64] {
  %209 = @func_6027() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(192, 2), float64]) */;
  %210 = %209.2;
  %211 = cast(%210, dtype="float64") /* ty=Tensor[(192, 2), float64] */;
  tan(%211) /* ty=Tensor[(192, 2), float64] */
}

def @func_6487() -> (Tensor[(720), float32],) {
  %212 = @func_3851() /* ty=Tensor[(720), float32] */;
  (%212,)
}

def @func_9698() -> Tensor[(3, 12, 5), float64] {
  @func_4471() /* ty=Tensor[(3, 12, 5), float64] */
}

def @func_3882(%var_3864: Tensor[(6, 7, 3), float32]) -> (Tensor[(3, 12, 5), float64], Tensor[(6, 7, 3), float32]) {
  %213 = @func_1971() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %214 = cast(%var_3864, dtype="float32") /* ty=Tensor[(6, 7, 3), float32] */;
  %215 = cosh(%214) /* ty=Tensor[(6, 7, 3), float32] */;
  %216 = cast(%215, dtype="float32") /* ty=Tensor[(6, 7, 3), float32] */;
  %217 = %213.1;
  %218 = acosh(%216) /* ty=Tensor[(6, 7, 3), float32] */;
  (%217, %218)
}

def @func_10114() -> Tensor[(7, 8, 13), float32] {
  %219 = @func_3418() /* ty=(Tensor[(7, 8, 13), float32],) */;
  %219.0
}

def @func_8866(%var_8857: Tensor[(8, 6, 15), float64]) -> (Tensor[(8, 6, 15), bool], Tensor[(3, 12, 5), int32]) {
  %220 = @func_7635() /* ty=(Tensor[(8, 6, 15), float64],) */;
  %221 = %220.0;
  %222 = cast(%var_8857, dtype="bool") /* ty=Tensor[(8, 6, 15), bool] */;
  %223 = shape_of(%221, dtype="int32") /* ty=Tensor[(3), int32] */;
  %224 = cast(%221, dtype="bool") /* ty=Tensor[(8, 6, 15), bool] */;
  %225 = dyn.reshape(%222, %223, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %226 = less(%224, %225) /* ty=Tensor[(8, 6, 15), bool] */;
  %227 = @func_8240() /* ty=Tensor[(3, 12, 5), int32] */;
  (%226, %227)
}

def @func_6027() -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(192, 2), float64]) {
  %228 = @func_410() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %229 = cast(meta[relay.Constant][8] /* ty=Tensor[(192, 2), float64] */, dtype="float64") /* ty=Tensor[(192, 2), float64] */;
  %230 = reshape(%229, newshape=[8, 8, 6]) /* ty=Tensor[(8, 8, 6), float64] */;
  %231 = @func_3826(%230) /* ty=(Tensor[(8, 8, 6), float64], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32]) */;
  %232 = %228.1;
  %233 = %231.2;
  (%232, %233, meta[relay.Constant][8] /* ty=Tensor[(192, 2), float64] */)
}

def @func_9449(%var_9445: Tensor[(5, 14, 10), float64]) -> Tensor[(5, 14, 10), float64] {
  %234 = cast(%var_9445, dtype="float64") /* ty=Tensor[(5, 14, 10), float64] */;
  rsqrt(%234) /* ty=Tensor[(5, 14, 10), float64] */
}

def @func_2144(%var_2139: Tensor[(3, 12, 5), float32]) -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(720), float32], Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float64]) {
  %235 = @func_884() /* ty=(Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %236 = @func_263() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
  %237 = @func_1454() /* ty=(Tensor[(720), float32],) */;
  %238 = @func_1364() /* ty=(Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float64]) */;
  %239 = @func_1665() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), int32]) */;
  %240 = %239.0;
  %241 = cast(meta[relay.Constant][9] /* ty=Tensor[(3, 12, 5), float64] */, dtype="bool") /* ty=Tensor[(3, 12, 5), bool] */;
  %242 = shape_of(%240, dtype="int32") /* ty=Tensor[(3), int32] */;
  %243 = cast(%240, dtype="bool") /* ty=Tensor[(3, 12, 5), bool] */;
  %244 = dyn.reshape(%241, %242, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %245 = equal(%243, %244) /* ty=Tensor[(3, 12, 5), bool] */;
  %246 = cast(%245, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
  %247 = atan(%246) /* ty=Tensor[(3, 12, 5), float32] */;
  %248 = cast(%var_2139, dtype="float64") /* ty=Tensor[(3, 12, 5), float64] */;
  %249 = shape_of(%247, dtype="int32") /* ty=Tensor[(3), int32] */;
  %250 = cast(%247, dtype="float64") /* ty=Tensor[(3, 12, 5), float64] */;
  %251 = dyn.reshape(%248, %249, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %252 = %235.2;
  %253 = %236.1;
  %254 = %237.0;
  %255 = %238.0;
  %256 = floor_mod(%250, %251) /* ty=Tensor[(3, 12, 5), float64] */;
  (%252, %253, %254, %255, %256)
}

def @func_9920() -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), bool]) {
  %257 = @func_7500() /* ty=(Tensor[(3, 12, 5), float64],) */;
  %258 = @func_3013() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), bool], Tensor[(720), float64]) */;
  %259 = %257.0;
  %260 = @func_9698() /* ty=Tensor[(3, 12, 5), float64] */;
  %261 = %258.1;
  (%259, %260, %261)
}

def @func_4553() -> (Tensor[(3, 12, 5), float64],) {
  %262 = @func_2889() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(720), float32]) */;
  %263 = %262.0;
  (%263,)
}

def @func_6417() -> Tensor[(8, 6, 15), float64] {
  %264 = @func_4159() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(8, 6, 15), float64]) */;
  %264.2
}

def @func_6343() -> Tensor[(3, 12, 5), float32] {
  @func_3078() /* ty=Tensor[(3, 12, 5), float32] */
}

def @func_7635() -> (Tensor[(8, 6, 15), float64],) {
  %265 = @func_6417() /* ty=Tensor[(8, 6, 15), float64] */;
  (%265,)
}

def @func_1000(%var_987: Tensor[(8, 6, 15), float64], %var_995: Tensor[(8, 6, 15), float64]) -> (Tensor[(8, 6, 15), int8], Tensor[(3, 12, 5), float32], Tensor[(8, 6, 15), bool], Tensor[(8, 6, 15), uint16]) {
  %266 = cast(meta[relay.Constant][11] /* ty=Tensor[(8, 6, 15), float64] */, dtype="float64") /* ty=Tensor[(8, 6, 15), float64] */;
  %267 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(8, 6, 15), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %268 = cast(meta[relay.Constant][10] /* ty=Tensor[(8, 6, 15), float64] */, dtype="float64") /* ty=Tensor[(8, 6, 15), float64] */;
  %269 = dyn.reshape(%266, %267, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %270 = minimum(%268, %269) /* ty=Tensor[(8, 6, 15), float64] */;
  %271 = cast(meta[relay.Constant][12] /* ty=Tensor[(8, 6, 15), float64] */, dtype="int8") /* ty=Tensor[(8, 6, 15), int8] */;
  %272 = shape_of(%270, dtype="int32") /* ty=Tensor[(3), int32] */;
  %273 = cast(%270, dtype="int8") /* ty=Tensor[(8, 6, 15), int8] */;
  %274 = dyn.reshape(%271, %272, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %275 = @func_608() /* ty=(Tensor[(3, 12, 5), float32],) */;
  %276 = cast(%var_987, dtype="bool") /* ty=Tensor[(8, 6, 15), bool] */;
  %277 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(8, 6, 15), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %278 = cast(meta[relay.Constant][12] /* ty=Tensor[(8, 6, 15), float64] */, dtype="bool") /* ty=Tensor[(8, 6, 15), bool] */;
  %279 = dyn.reshape(%276, %277, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %280 = cast(%var_995, dtype="uint16") /* ty=Tensor[(8, 6, 15), uint16] */;
  %281 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(8, 6, 15), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %282 = cast(meta[relay.Constant][12] /* ty=Tensor[(8, 6, 15), float64] */, dtype="uint16") /* ty=Tensor[(8, 6, 15), uint16] */;
  %283 = dyn.reshape(%280, %281, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %284 = maximum(%273, %274) /* ty=Tensor[(8, 6, 15), int8] */;
  %285 = %275.0;
  %286 = greater(%278, %279) /* ty=Tensor[(8, 6, 15), bool] */;
  %287 = left_shift(%282, %283) /* ty=Tensor[(8, 6, 15), uint16] */;
  (%284, %285, %286, %287)
}

def @func_6464() -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32]) {
  %288 = @func_4820() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %289 = @func_2889() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(720), float32]) */;
  %290 = %288.0;
  %291 = @func_3028() /* ty=Tensor[(3, 12, 5), float64] */;
  %292 = %289.0;
  %293 = @func_5578() /* ty=Tensor[(3, 12, 5), float32] */;
  (%290, %291, %292, %293)
}

def @func_10250() -> Tensor[(11, 11, 1), float64] {
  %294 = cast(meta[relay.Constant][13] /* ty=Tensor[(11, 11, 1), float64] */, dtype="float64") /* ty=Tensor[(11, 11, 1), float64] */;
  sin(%294) /* ty=Tensor[(11, 11, 1), float64] */
}

def @func_4103(%var_4088: Tensor[(10, 2, 5), float32]) -> (Tensor[(10, 2, 5), int64],) {
  %295 = cast(meta[relay.Constant][14] /* ty=Tensor[(10, 2, 5), float32] */, dtype="bool") /* ty=Tensor[(10, 2, 5), bool] */;
  %296 = shape_of(%var_4088, dtype="int32") /* ty=Tensor[(3), int32] */;
  %297 = cast(%var_4088, dtype="bool") /* ty=Tensor[(10, 2, 5), bool] */;
  %298 = dyn.reshape(%295, %296, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %299 = equal(%297, %298) /* ty=Tensor[(10, 2, 5), bool] */;
  %300 = cast(%299, dtype="int64") /* ty=Tensor[(10, 2, 5), int64] */;
  %301 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(10, 2, 5), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %302 = cast(meta[relay.Constant][14] /* ty=Tensor[(10, 2, 5), float32] */, dtype="int64") /* ty=Tensor[(10, 2, 5), int64] */;
  %303 = dyn.reshape(%300, %301, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %304 = left_shift(%302, %303) /* ty=Tensor[(10, 2, 5), int64] */;
  (%304,)
}

def @func_410() -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) {
  %305 = @func_364() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 15, 5), float32], Tensor[(15), float32], Tensor[(225), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
  %306 = %305.5;
  %307 = cast(%306, dtype="float64") /* ty=Tensor[(3, 12, 5), float64] */;
  %308 = @func_263() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
  %309 = log10(%307) /* ty=Tensor[(3, 12, 5), float64] */;
  %310 = %308.1;
  (%309, %310)
}

def @func_9027() -> (Tensor[(3, 12, 5), float64],) {
  %311 = @func_2889() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(720), float32]) */;
  %312 = %311.0;
  (%312,)
}

def @func_566() -> Tensor[(3, 12, 5), float32] {
  %313 = @func_364() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 15, 5), float32], Tensor[(15), float32], Tensor[(225), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
  %313.0
}

def @func_5116() -> Tensor[(3, 12, 5), uint32] {
  %314 = @func_1364() /* ty=(Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float64]) */;
  %314.0
}

def @func_7928() -> Tensor[(720), float32] {
  %315 = @func_6487() /* ty=(Tensor[(720), float32],) */;
  %315.0
}

def @func_6627(%var_6514: Tensor[(3, 12, 5), float64], %var_6573: Tensor[(720), float32]) -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), uint32], Tensor[(720), float32], Tensor[(3, 12, 5), float32]) {
  %316 = @func_4553() /* ty=(Tensor[(3, 12, 5), float64],) */;
  %317 = @func_4471() /* ty=Tensor[(3, 12, 5), float64] */;
  %318 = cast(%var_6514, dtype="float64") /* ty=Tensor[(3, 12, 5), float64] */;
  %319 = shape_of(%317, dtype="int32") /* ty=Tensor[(3), int32] */;
  %320 = cast(%317, dtype="float64") /* ty=Tensor[(3, 12, 5), float64] */;
  %321 = dyn.reshape(%318, %319, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %322 = @func_3260() /* ty=(Tensor[(3, 12, 5), bool], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32]) */;
  %323 = @func_2493() /* ty=(Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), int32]) */;
  %324 = cast(%var_6573, dtype="float32") /* ty=Tensor[(720), float32] */;
  %325 = @func_4848() /* ty=Tensor[(3, 12, 5), float32] */;
  %326 = cast(%325, dtype="float64") /* ty=Tensor[(3, 12, 5), float64] */;
  %327 = reshape(%324, newshape=[9, 8, 10]) /* ty=Tensor[(9, 8, 10), float32] */;
  %328 = reshape(%326, newshape=[3, 12, 5]) /* ty=Tensor[(3, 12, 5), float64] */;
  %329 = @func_732(%327, %328) /* ty=(Tensor[(3, 12, 5), float32], Tensor[(9, 8, 10), float32], Tensor[(9, 8, 10), float64], Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float32]) */;
  %330 = %316.0;
  %331 = mod(%320, %321) /* ty=Tensor[(3, 12, 5), float64] */;
  %332 = %322.1;
  %333 = @func_3078() /* ty=Tensor[(3, 12, 5), float32] */;
  %334 = %323.0;
  %335 = %329.3;
  %336 = @func_622() /* ty=Tensor[(3, 12, 5), float32] */;
  (%330, %331, %332, %333, %325, %334, %335, %var_6573, %336)
}

def @func_5272() -> (Tensor[(3, 12, 5), float32], Tensor[(10, 2, 5), float32]) {
  %337 = @func_1572() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
  %338 = %337.0;
  %339 = cast(%338, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
  %340 = reshape(%339, newshape=[30, 6]) /* ty=Tensor[(30, 6), float32] */;
  %341 = @func_4270(%340) /* ty=(Tensor[(15), float32], Tensor[(3, 12, 5), float32], Tensor[(30, 6), float32], Tensor[(10, 2, 5), int64], Tensor[(100), float32]) */;
  %342 = %341.3;
  %343 = cast(%342, dtype="float32") /* ty=Tensor[(10, 2, 5), float32] */;
  %344 = log10(%343) /* ty=Tensor[(10, 2, 5), float32] */;
  (%338, %344)
}

def @func_4848() -> Tensor[(3, 12, 5), float32] {
  %345 = @func_3260() /* ty=(Tensor[(3, 12, 5), bool], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32]) */;
  %345.2
}

def @func_9236() -> (Tensor[(15), float32], Tensor[(3, 12, 5), float32]) {
  %346 = @func_5491() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(11, 6, 9), float64], Tensor[(198, 3), float64], Tensor[(15), float32], Tensor[(15), float32], Tensor[(75, 3), float32], Tensor[(6, 7, 3), float32], Tensor[(126), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32]) */;
  %347 = @func_3165() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %348 = %346.4;
  %349 = %347.0;
  (%348, %349)
}

def @func_3165() -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) {
  %350 = @func_1541() /* ty=(Tensor[(3, 12, 5), float32],) */;
  %351 = @func_566() /* ty=Tensor[(3, 12, 5), float32] */;
  %352 = %350.0;
  %353 = @func_636() /* ty=Tensor[(3, 12, 5), float32] */;
  %354 = @func_275() /* ty=Tensor[(3, 12, 5), float64] */;
  %355 = @func_3028() /* ty=Tensor[(3, 12, 5), float64] */;
  (%351, %352, %353, %354, %355)
}

def @func_10071() -> Tensor[(3, 12, 5), uint32] {
  %356 = @func_6770() /* ty=(Tensor[(3, 12, 5), uint32],) */;
  %356.0
}

def @func_10580() -> (Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), float32]) {
  %357 = @func_8969() /* ty=(Tensor[(720), float32], Tensor[(3, 12, 5), int32]) */;
  %358 = %357.1;
  %359 = @func_10316() /* ty=Tensor[(3, 12, 5), float32] */;
  (%358, %359)
}

def @func_1464() -> Tensor[(3, 12, 5), float32] {
  @func_622() /* ty=Tensor[(3, 12, 5), float32] */
}

def @func_5817() -> Tensor[(3, 12, 5), float32] {
  @func_5756() /* ty=Tensor[(3, 12, 5), float32] */
}

def @func_7464() -> Tensor[(3, 12, 5), float64] {
  %360 = @func_5144() /* ty=(Tensor[(3, 12, 5), float64],) */;
  %360.0
}

def @func_7005(%var_6976: Tensor[(12), float32], %var_6977: Tensor[(168), float32]) -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), uint32], Tensor[(14, 3, 4), float32], Tensor[(12), float32], Tensor[(168), float32]) {
  %361 = @func_5037() /* ty=(Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %362 = @func_1364() /* ty=(Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float64]) */;
  %363 = cast(%var_6976, dtype="float32") /* ty=Tensor[(12), float32] */;
  %364 = cast(%var_6977, dtype="float32") /* ty=Tensor[(168), float32] */;
  %365 = reshape(%363, newshape=[1, 3, 4]) /* ty=Tensor[(1, 3, 4), float32] */;
  %366 = reshape(%364, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float32] */;
  %367 = @func_1737(%365, %366) /* ty=(Tensor[(14, 3, 4), float32], Tensor[(1, 3, 4), float32]) */;
  %368 = %361.2;
  %369 = %362.0;
  %370 = %367.0;
  (%368, %369, %370, %var_6976, %var_6977)
}

def @func_5546() -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) {
  %371 = @func_263() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
  %372 = @func_2825() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), int32]) */;
  %373 = %371.0;
  %374 = %372.0;
  (%373, %374)
}

def @func_8640() -> Tensor[(3, 12, 5), float32] {
  %375 = @func_3972() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32], Tensor[(7, 8, 13), bool]) */;
  %375.1
}

def @func_9212() -> Tensor[(16, 9, 3), float32] {
  %376 = cast(meta[relay.Constant][15] /* ty=Tensor[(16, 9, 3), float32] */, dtype="float32") /* ty=Tensor[(16, 9, 3), float32] */;
  asin(%376) /* ty=Tensor[(16, 9, 3), float32] */
}

def @func_756() -> (Tensor[(3, 12, 5), float32],) {
  %377 = @func_608() /* ty=(Tensor[(3, 12, 5), float32],) */;
  %378 = %377.0;
  (%378,)
}

def @func_10518() -> (Tensor[(720), float32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32]) {
  %379 = @func_2889() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(720), float32]) */;
  %380 = @func_5196() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), uint32], Tensor[(720), float32]) */;
  %381 = %379.1;
  %382 = @func_9698() /* ty=Tensor[(3, 12, 5), float64] */;
  %383 = %380.0;
  (%381, %382, %383)
}

def @func_1320(%var_1267: Tensor[(8, 11, 4), uint16], %var_1268: Tensor[(8, 11, 4), uint16]) -> (Tensor[(8, 11, 4), bool], Tensor[(8, 11, 4), float32], Tensor[(3, 12, 5), float64]) {
  %384 = cast(%var_1268, dtype="bool") /* ty=Tensor[(8, 11, 4), bool] */;
  %385 = shape_of(%var_1267, dtype="int32") /* ty=Tensor[(3), int32] */;
  %386 = cast(%var_1267, dtype="bool") /* ty=Tensor[(8, 11, 4), bool] */;
  %387 = dyn.reshape(%384, %385, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %388 = cast(%var_1267, dtype="float32") /* ty=Tensor[(8, 11, 4), float32] */;
  %389 = @func_410() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %390 = greater_equal(%386, %387) /* ty=Tensor[(8, 11, 4), bool] */;
  %391 = acosh(%388) /* ty=Tensor[(8, 11, 4), float32] */;
  %392 = %389.1;
  (%390, %391, %392)
}

def @func_2235() -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) {
  %393 = @func_1541() /* ty=(Tensor[(3, 12, 5), float32],) */;
  %394 = %393.0;
  %395 = cast(%394, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
  %396 = reshape(%395, newshape=[3, 12, 5]) /* ty=Tensor[(3, 12, 5), float32] */;
  %397 = @func_2144(%396) /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(720), float32], Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float64]) */;
  %398 = %397.1;
  (%394, %398)
}

def @func_7500() -> (Tensor[(3, 12, 5), float64],) {
  %399 = @func_1971() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %400 = %399.0;
  (%400,)
}

def @func_6209(%var_6206: Tensor[(15), float32]) -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(594), float64], Tensor[(15), float32]) {
  %401 = @func_1665() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), int32]) */;
  %402 = cast(meta[relay.Constant][16] /* ty=Tensor[(594), float64] */, dtype="float64") /* ty=Tensor[(594), float64] */;
  %403 = cast(meta[relay.Constant][16] /* ty=Tensor[(594), float64] */, dtype="float64") /* ty=Tensor[(594), float64] */;
  %404 = cast(%var_6206, dtype="float32") /* ty=Tensor[(15), float32] */;
  %405 = reshape(%402, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), float64] */;
  %406 = reshape(%403, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), float64] */;
  %407 = reshape(%404, newshape=[15]) /* ty=Tensor[(15), float32] */;
  %408 = @func_1261(%405, %406, %407) /* ty=(Tensor[(11, 6, 9), float64], Tensor[(3, 15, 5), float32], Tensor[(15), float32], Tensor[(225), float32], Tensor[(3, 12, 5), float64]) */;
  %409 = @func_636() /* ty=Tensor[(3, 12, 5), float32] */;
  %410 = %401.0;
  %411 = %408.4;
  (%409, %410, %411, meta[relay.Constant][16] /* ty=Tensor[(594), float64] */, %var_6206)
}

def @func_7080(%var_7020: Tensor[(14, 2, 6), uint8], %var_7021: Tensor[(14, 2, 6), uint8], %var_7053: Tensor[(180), float32], %var_7077: Tensor[(1092), float64]) -> (Tensor[(14, 2, 6), bool], Tensor[(720), float32], Tensor[(180), float32], Tensor[(3, 12, 5), float32], Tensor[(14, 2, 6), float32], Tensor[(12, 7, 13), bool], Tensor[(1092), float64]) {
  %412 = cast(%var_7021, dtype="bool") /* ty=Tensor[(14, 2, 6), bool] */;
  %413 = shape_of(%var_7020, dtype="int32") /* ty=Tensor[(3), int32] */;
  %414 = cast(%var_7020, dtype="bool") /* ty=Tensor[(14, 2, 6), bool] */;
  %415 = dyn.reshape(%412, %413, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %416 = cast(%var_7053, dtype="float32") /* ty=Tensor[(180), float32] */;
  %417 = reshape(%416, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %418 = @func_4021(%417) /* ty=(Tensor[(720), float32], Tensor[(720), float32], Tensor[(180), float32], Tensor[(3, 12, 5), float32]) */;
  %419 = cast(%var_7021, dtype="float64") /* ty=Tensor[(14, 2, 6), float64] */;
  %420 = atan(%419) /* ty=Tensor[(14, 2, 6), float64] */;
  %421 = cast(%var_7020, dtype="float32") /* ty=Tensor[(14, 2, 6), float32] */;
  %422 = shape_of(%420, dtype="int32") /* ty=Tensor[(3), int32] */;
  %423 = cast(%420, dtype="float32") /* ty=Tensor[(14, 2, 6), float32] */;
  %424 = dyn.reshape(%421, %422, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %425 = cast(%var_7077, dtype="float64") /* ty=Tensor[(1092), float64] */;
  %426 = cast(%var_7077, dtype="float64") /* ty=Tensor[(1092), float64] */;
  %427 = reshape(%425, newshape=[12, 7, 13]) /* ty=Tensor[(12, 7, 13), float64] */;
  %428 = reshape(%426, newshape=[12, 7, 13]) /* ty=Tensor[(12, 7, 13), float64] */;
  %429 = @func_3400(%427, %428) /* ty=(Tensor[(12, 7, 13), bool],) */;
  %430 = less(%414, %415) /* ty=Tensor[(14, 2, 6), bool] */;
  %431 = %418.1;
  %432 = @func_566() /* ty=Tensor[(3, 12, 5), float32] */;
  %433 = floor_mod(%423, %424) /* ty=Tensor[(14, 2, 6), float32] */;
  %434 = %429.0;
  (%430, %431, %var_7053, %432, %433, %434, %var_7077)
}

def @func_10104(%var_10083: Tensor[(7, 8, 13), float32]) -> (Tensor[(7, 8, 13), uint16], Tensor[(7, 8, 13), float64], Tensor[(3, 12, 5), float64]) {
  %435 = @func_8778() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(7, 8, 13), float32]) */;
  %436 = %435.1;
  %437 = cast(%var_10083, dtype="uint16") /* ty=Tensor[(7, 8, 13), uint16] */;
  %438 = shape_of(%436, dtype="int32") /* ty=Tensor[(3), int32] */;
  %439 = cast(%436, dtype="uint16") /* ty=Tensor[(7, 8, 13), uint16] */;
  %440 = dyn.reshape(%437, %438, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %441 = cast(%var_10083, dtype="float64") /* ty=Tensor[(7, 8, 13), float64] */;
  %442 = @func_5083() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), uint32]) */;
  %443 = bitwise_and(%439, %440) /* ty=Tensor[(7, 8, 13), uint16] */;
  %444 = sinh(%441) /* ty=Tensor[(7, 8, 13), float64] */;
  %445 = %442.0;
  (%443, %444, %445)
}

def @func_4654() -> (Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(11, 5, 15), float32]) {
  %446 = @func_410() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %447 = @func_3467() /* ty=Tensor[(3, 12, 5), uint32] */;
  %448 = cast(%447, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
  %449 = reshape(%448, newshape=[3, 12, 5]) /* ty=Tensor[(3, 12, 5), float32] */;
  %450 = @func_2144(%449) /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(720), float32], Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float64]) */;
  %451 = cast(meta[relay.Constant][17] /* ty=Tensor[(11, 1, 15), float32] */, dtype="float32") /* ty=Tensor[(11, 1, 15), float32] */;
  %452 = cast(meta[relay.Constant][18] /* ty=Tensor[(11, 5, 15), float32] */, dtype="float32") /* ty=Tensor[(11, 5, 15), float32] */;
  %453 = add(%451, %452) /* ty=Tensor[(11, 5, 15), float32] */;
  %454 = cast(meta[relay.Constant][19] /* ty=Tensor[(11, 5, 15), float32] */, dtype="float32") /* ty=Tensor[(11, 5, 15), float32] */;
  %455 = shape_of(%453, dtype="int32") /* ty=Tensor[(3), int32] */;
  %456 = cast(%453, dtype="float32") /* ty=Tensor[(11, 5, 15), float32] */;
  %457 = dyn.reshape(%454, %455, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %458 = %446.1;
  %459 = %450.4;
  %460 = mod(%456, %457) /* ty=Tensor[(11, 5, 15), float32] */;
  (%447, %458, %459, %460)
}

def @func_8240() -> Tensor[(3, 12, 5), int32] {
  %461 = @func_884() /* ty=(Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %461.0
}

def @func_7788() -> Tensor[(3, 12, 5), float64] {
  %462 = @func_5368() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32]) */;
  %462.0
}

def @func_8778() -> (Tensor[(3, 12, 5), float32], Tensor[(7, 8, 13), float32]) {
  %463 = @func_7428() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32]) */;
  %464 = @func_3418() /* ty=(Tensor[(7, 8, 13), float32],) */;
  %465 = %463.1;
  %466 = %464.0;
  (%465, %466)
}

def @func_4270(%var_4262: Tensor[(30, 6), float32]) -> (Tensor[(15), float32], Tensor[(3, 12, 5), float32], Tensor[(30, 6), float32], Tensor[(10, 2, 5), int64], Tensor[(100), float32]) {
  %467 = @func_2599() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(15), float32]) */;
  %468 = cast(%var_4262, dtype="float32") /* ty=Tensor[(30, 6), float32] */;
  %469 = reshape(%468, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %470 = @func_4021(%469) /* ty=(Tensor[(720), float32], Tensor[(720), float32], Tensor[(180), float32], Tensor[(3, 12, 5), float32]) */;
  %471 = cast(meta[relay.Constant][20] /* ty=Tensor[(100), float32] */, dtype="float32") /* ty=Tensor[(100), float32] */;
  %472 = reshape(%471, newshape=[10, 2, 5]) /* ty=Tensor[(10, 2, 5), float32] */;
  %473 = @func_4103(%472) /* ty=(Tensor[(10, 2, 5), int64],) */;
  %474 = %467.3;
  %475 = %470.3;
  %476 = %473.0;
  (%474, %475, %var_4262, %476, meta[relay.Constant][20] /* ty=Tensor[(100), float32] */)
}

def @func_8720(%var_8655: Tensor[(1, 88), float32]) -> (Tensor[(3, 12, 5), float32], Tensor[(?, 88), int8], Tensor[(1, 3, 4), float32], Tensor[(12), float32], Tensor[(168), float32], Tensor[(2, 4, 11), uint64]) {
  %477 = cast(%var_8655, dtype="float32") /* ty=Tensor[(1, 88), float32] */;
  %478 = @func_622() /* ty=Tensor[(3, 12, 5), float32] */;
  %479 = cast(%478, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
  %480 = cast(%var_8655, dtype="float32") /* ty=Tensor[(1, 88), float32] */;
  %481 = reshape(%477, newshape=[2, 4, 11]) /* ty=Tensor[(2, 4, 11), float32] */;
  %482 = reshape(%479, newshape=[30, 6]) /* ty=Tensor[(30, 6), float32] */;
  %483 = reshape(%480, newshape=[2, 4, 11]) /* ty=Tensor[(2, 4, 11), float32] */;
  %484 = @func_3336(%481, %482, %483) /* ty=(Tensor[(3, 12, 5), float64], Tensor[(30, 6), float32], Tensor[(2, 4, 11), int8], Tensor[(2, 4, 11), float64], Tensor[(3, 12, 5), int32]) */;
  %485 = %484.2;
  %486 = cast(%485, dtype="int8") /* ty=Tensor[(2, 4, 11), int8] */;
  %487 = shape_of(%var_8655, dtype="int32") /* ty=Tensor[(2), int32] */;
  %488 = cast(%var_8655, dtype="int8") /* ty=Tensor[(1, 88), int8] */;
  %489 = dyn.reshape(%486, %487, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %490 = cast(meta[relay.Constant][21] /* ty=Tensor[(12), float32] */, dtype="float32") /* ty=Tensor[(12), float32] */;
  %491 = cast(meta[relay.Constant][22] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %492 = reshape(%490, newshape=[1, 3, 4]) /* ty=Tensor[(1, 3, 4), float32] */;
  %493 = reshape(%491, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float32] */;
  %494 = @func_1737(%492, %493) /* ty=(Tensor[(14, 3, 4), float32], Tensor[(1, 3, 4), float32]) */;
  %495 = cast(%485, dtype="float64") /* ty=Tensor[(2, 4, 11), float64] */;
  %496 = log2(%495) /* ty=Tensor[(2, 4, 11), float64] */;
  %497 = cast(%485, dtype="float64") /* ty=Tensor[(2, 4, 11), float64] */;
  %498 = erf(%497) /* ty=Tensor[(2, 4, 11), float64] */;
  %499 = cast(%498, dtype="uint64") /* ty=Tensor[(2, 4, 11), uint64] */;
  %500 = shape_of(%496, dtype="int32") /* ty=Tensor[(3), int32] */;
  %501 = cast(%496, dtype="uint64") /* ty=Tensor[(2, 4, 11), uint64] */;
  %502 = dyn.reshape(%499, %500, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %503 = add(%488, %489) /* ty=Tensor[(?, 88), int8] */;
  %504 = %494.1;
  %505 = logical_xor(%501, %502) /* ty=Tensor[(2, 4, 11), uint64] */;
  (%478, %503, %504, meta[relay.Constant][21] /* ty=Tensor[(12), float32] */, meta[relay.Constant][22] /* ty=Tensor[(168), float32] */, %505)
}

def @func_263() -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) {
  %506 = cast(meta[relay.Constant][23] /* ty=Tensor[(3, 12, 5), float32] */, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
  %507 = cast(meta[relay.Constant][23] /* ty=Tensor[(3, 12, 5), float32] */, dtype="float64") /* ty=Tensor[(3, 12, 5), float64] */;
  %508 = log2(%506) /* ty=Tensor[(3, 12, 5), float32] */;
  %509 = cosh(%507) /* ty=Tensor[(3, 12, 5), float64] */;
  (%508, %509)
}

def @func_2713(%var_2705: Tensor[(6), float64]) -> (Tensor[(3, 12, 5), float64], Tensor[(6, 4, 88), uint64], Tensor[(6), float64]) {
  %510 = @func_1971() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %511 = cast(%var_2705, dtype="float64") /* ty=Tensor[(6), float64] */;
  %512 = reshape(%511, newshape=[6, 1, 1]) /* ty=Tensor[(6, 1, 1), float64] */;
  %513 = @func_2316(%512) /* ty=(Tensor[(352), uint16], Tensor[(6, 4, 88), uint64]) */;
  %514 = %510.1;
  %515 = %513.1;
  (%514, %515, %var_2705)
}

def @func_2927() -> (Tensor[(3, 12, 5), float32],) {
  %516 = @func_608() /* ty=(Tensor[(3, 12, 5), float32],) */;
  %517 = %516.0;
  (%517,)
}

def @func_10672() -> Tensor[(3, 12, 5), float32] {
  @func_1464() /* ty=Tensor[(3, 12, 5), float32] */
}

def @func_6304() -> Tensor[(3, 12, 5), float64] {
  %518 = @func_3972() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32], Tensor[(7, 8, 13), bool]) */;
  %518.0
}

def @func_8969() -> (Tensor[(720), float32], Tensor[(3, 12, 5), int32]) {
  %519 = @func_1454() /* ty=(Tensor[(720), float32],) */;
  %520 = %519.0;
  %521 = @func_8240() /* ty=Tensor[(3, 12, 5), int32] */;
  (%520, %521)
}

def @func_4820() -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) {
  %522 = @func_1665() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), int32]) */;
  %523 = @func_4471() /* ty=Tensor[(3, 12, 5), float64] */;
  %524 = %522.0;
  (%523, %524)
}

def @func_732(%var_650: Tensor[(9, 8, 10), float32], %var_702: Tensor[(3, 12, 5), float64]) -> (Tensor[(3, 12, 5), float32], Tensor[(9, 8, 10), float32], Tensor[(9, 8, 10), float64], Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float32]) {
  %525 = @func_608() /* ty=(Tensor[(3, 12, 5), float32],) */;
  %526 = %525.0;
  %527 = cast(%526, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
  %528 = cast(%var_650, dtype="float32") /* ty=Tensor[(9, 8, 10), float32] */;
  %529 = cast(%var_650, dtype="float32") /* ty=Tensor[(9, 8, 10), float32] */;
  %530 = sigmoid(%529) /* ty=Tensor[(9, 8, 10), float32] */;
  %531 = cast(%530, dtype="float64") /* ty=Tensor[(9, 8, 10), float64] */;
  %532 = @func_364() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 15, 5), float32], Tensor[(15), float32], Tensor[(225), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
  %533 = %532.5;
  %534 = cast(%var_702, dtype="uint32") /* ty=Tensor[(3, 12, 5), uint32] */;
  %535 = shape_of(%533, dtype="int32") /* ty=Tensor[(3), int32] */;
  %536 = cast(%533, dtype="uint32") /* ty=Tensor[(3, 12, 5), uint32] */;
  %537 = dyn.reshape(%534, %535, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %538 = @func_608() /* ty=(Tensor[(3, 12, 5), float32],) */;
  %539 = acos(%527) /* ty=Tensor[(3, 12, 5), float32] */;
  %540 = asin(%528) /* ty=Tensor[(9, 8, 10), float32] */;
  %541 = log2(%531) /* ty=Tensor[(9, 8, 10), float64] */;
  %542 = maximum(%536, %537) /* ty=Tensor[(3, 12, 5), uint32] */;
  %543 = %538.0;
  (%539, %540, %541, %542, %543)
}

def @func_1541() -> (Tensor[(3, 12, 5), float32],) {
  %544 = @func_1464() /* ty=Tensor[(3, 12, 5), float32] */;
  %545 = cast(%544, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
  %546 = atanh(%545) /* ty=Tensor[(3, 12, 5), float32] */;
  (%546,)
}

def @func_8130() -> (Tensor[(3, 12, 5), float64],) {
  %547 = @func_4471() /* ty=Tensor[(3, 12, 5), float64] */;
  (%547,)
}

def @func_5099() -> (Tensor[(720), float32], Tensor[(3, 12, 5), float32]) {
  %548 = @func_3851() /* ty=Tensor[(720), float32] */;
  %549 = @func_1464() /* ty=Tensor[(3, 12, 5), float32] */;
  (%548, %549)
}

def @func_10316() -> Tensor[(3, 12, 5), float32] {
  %550 = @func_8778() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(7, 8, 13), float32]) */;
  %550.0
}

def @func_6770() -> (Tensor[(3, 12, 5), uint32],) {
  %551 = @func_6270() /* ty=(Tensor[(3, 12, 5), uint32],) */;
  %552 = %551.0;
  (%552,)
}

def @func_1971() -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) {
  %553 = @func_1665() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), int32]) */;
  %554 = @func_808() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), uint32], Tensor[(720), float32]) */;
  %555 = %553.1;
  %556 = %554.0;
  (%555, %556)
}

def @func_4749() -> (Tensor[(3, 12, 5), float32],) {
  %557 = @func_2927() /* ty=(Tensor[(3, 12, 5), float32],) */;
  %558 = %557.0;
  (%558,)
}

def @func_9606() -> (Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float32], Tensor[(720), float32]) {
  %559 = @func_9363() /* ty=(Tensor[(3, 12, 5), uint32],) */;
  %560 = @func_2927() /* ty=(Tensor[(3, 12, 5), float32],) */;
  %561 = @func_5099() /* ty=(Tensor[(720), float32], Tensor[(3, 12, 5), float32]) */;
  %562 = %559.0;
  %563 = %560.0;
  %564 = %561.0;
  (%562, %563, %564)
}

def @func_3336(%var_3298: Tensor[(2, 4, 11), float32], %var_3307: Tensor[(30, 6), float32], %var_3317: Tensor[(2, 4, 11), float32]) -> (Tensor[(3, 12, 5), float64], Tensor[(30, 6), float32], Tensor[(2, 4, 11), int8], Tensor[(2, 4, 11), float64], Tensor[(3, 12, 5), int32]) {
  %565 = cast(%var_3307, dtype="float32") /* ty=Tensor[(30, 6), float32] */;
  %566 = reshape(%565, newshape=[3, 12, 5]) /* ty=Tensor[(3, 12, 5), float32] */;
  %567 = @func_2144(%566) /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(720), float32], Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float64]) */;
  %568 = cast(%var_3298, dtype="float32") /* ty=Tensor[(2, 4, 11), float32] */;
  %569 = sqrt(%568) /* ty=Tensor[(2, 4, 11), float32] */;
  %570 = cast(%569, dtype="float32") /* ty=Tensor[(2, 4, 11), float32] */;
  %571 = rsqrt(%570) /* ty=Tensor[(2, 4, 11), float32] */;
  %572 = cast(%var_3317, dtype="int8") /* ty=Tensor[(2, 4, 11), int8] */;
  %573 = shape_of(%571, dtype="int32") /* ty=Tensor[(3), int32] */;
  %574 = cast(%571, dtype="int8") /* ty=Tensor[(2, 4, 11), int8] */;
  %575 = dyn.reshape(%572, %573, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %576 = cast(%569, dtype="float64") /* ty=Tensor[(2, 4, 11), float64] */;
  %577 = @func_2493() /* ty=(Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), int32]) */;
  %578 = %567.0;
  %579 = maximum(%574, %575) /* ty=Tensor[(2, 4, 11), int8] */;
  %580 = cosh(%576) /* ty=Tensor[(2, 4, 11), float64] */;
  %581 = %577.1;
  (%578, %var_3307, %579, %580, %581)
}

def @func_10425(%var_10366: Tensor[(15), float32]) -> (Tensor[(3, 12, 5), bool], Tensor[(3, 15, 5), float32], Tensor[(594), float64], Tensor[(15), float32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32]) {
  %582 = @func_3260() /* ty=(Tensor[(3, 12, 5), bool], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32]) */;
  %583 = cast(meta[relay.Constant][24] /* ty=Tensor[(594), float64] */, dtype="float64") /* ty=Tensor[(594), float64] */;
  %584 = cast(meta[relay.Constant][24] /* ty=Tensor[(594), float64] */, dtype="float64") /* ty=Tensor[(594), float64] */;
  %585 = cast(%var_10366, dtype="float32") /* ty=Tensor[(15), float32] */;
  %586 = reshape(%583, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), float64] */;
  %587 = reshape(%584, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), float64] */;
  %588 = reshape(%585, newshape=[15]) /* ty=Tensor[(15), float32] */;
  %589 = @func_1261(%586, %587, %588) /* ty=(Tensor[(11, 6, 9), float64], Tensor[(3, 15, 5), float32], Tensor[(15), float32], Tensor[(225), float32], Tensor[(3, 12, 5), float64]) */;
  %590 = @func_8913() /* ty=(Tensor[(3, 12, 5), float64],) */;
  %591 = %582.0;
  %592 = %589.1;
  %593 = %590.0;
  %594 = @func_10316() /* ty=Tensor[(3, 12, 5), float32] */;
  (%591, %592, meta[relay.Constant][24] /* ty=Tensor[(594), float64] */, %var_10366, %593, %594)
}

def @func_9812() -> Tensor[(3, 12, 5), int32] {
  @func_7597() /* ty=Tensor[(3, 12, 5), int32] */
}

def @func_5037() -> (Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) {
  %595 = @func_884() /* ty=(Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %596 = %595.0;
  %597 = cast(%596, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
  %598 = reshape(%597, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %599 = @func_4021(%598) /* ty=(Tensor[(720), float32], Tensor[(720), float32], Tensor[(180), float32], Tensor[(3, 12, 5), float32]) */;
  %600 = @func_3221() /* ty=(Tensor[(3, 12, 5), float64],) */;
  %601 = @func_263() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
  %602 = %599.3;
  %603 = %600.0;
  %604 = %601.1;
  %605 = @func_3028() /* ty=Tensor[(3, 12, 5), float64] */;
  (%596, %602, %603, %604, %605)
}

def @func_4471() -> Tensor[(3, 12, 5), float64] {
  %606 = @func_1971() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %606.1
}

def @func_5787(%var_5767: Tensor[(14, 3, 12), float32]) -> (Tensor[(14, 3, 12), float64], Tensor[(14, 3, 12), float32]) {
  %607 = cast(%var_5767, dtype="float32") /* ty=Tensor[(14, 3, 12), float32] */;
  %608 = acosh(%607) /* ty=Tensor[(14, 3, 12), float32] */;
  %609 = cast(%var_5767, dtype="float64") /* ty=Tensor[(14, 3, 12), float64] */;
  %610 = shape_of(%608, dtype="int32") /* ty=Tensor[(3), int32] */;
  %611 = cast(%608, dtype="float64") /* ty=Tensor[(14, 3, 12), float64] */;
  %612 = dyn.reshape(%609, %610, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %613 = cast(%608, dtype="float32") /* ty=Tensor[(14, 3, 12), float32] */;
  %614 = subtract(%611, %612) /* ty=Tensor[(14, 3, 12), float64] */;
  %615 = sqrt(%613) /* ty=Tensor[(14, 3, 12), float32] */;
  (%614, %615)
}

def @func_3851() -> Tensor[(720), float32] {
  %616 = @func_808() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), uint32], Tensor[(720), float32]) */;
  %616.2
}

def @func_9816() -> Tensor[(16, 9, 3), float32] {
  @func_9212() /* ty=Tensor[(16, 9, 3), float32] */
}

def @func_4244() -> (Tensor[(3, 12, 5), float32],) {
  %617 = @func_1541() /* ty=(Tensor[(3, 12, 5), float32],) */;
  %618 = %617.0;
  (%618,)
}

def @func_622() -> Tensor[(3, 12, 5), float32] {
  %619 = @func_263() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
  %619.0
}

def @func_4974() -> (Tensor[(720), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32]) {
  %620 = @func_4327() /* ty=(Tensor[(720), float32], Tensor[(3, 12, 5), float64], Tensor[(7, 8, 13), float32]) */;
  %621 = @func_3972() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32], Tensor[(7, 8, 13), bool]) */;
  %622 = %621.1;
  %623 = cast(%622, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
  %624 = reshape(%623, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %625 = @func_4021(%624) /* ty=(Tensor[(720), float32], Tensor[(720), float32], Tensor[(180), float32], Tensor[(3, 12, 5), float32]) */;
  %626 = %620.0;
  %627 = @func_622() /* ty=Tensor[(3, 12, 5), float32] */;
  %628 = %625.3;
  (%626, %622, %627, %628)
}

def @func_5083() -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), uint32]) {
  %629 = @func_1522() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %630 = @func_2599() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(15), float32]) */;
  %631 = @func_808() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), uint32], Tensor[(720), float32]) */;
  %632 = %629.1;
  %633 = %630.1;
  %634 = %631.1;
  (%632, %633, %634)
}

def @func_7282() -> (Tensor[(3, 12, 5), float64], Tensor[(720), float32], Tensor[(3, 12, 5), float64]) {
  %635 = @func_6679() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(7, 8, 13), float64]) */;
  %636 = @func_4327() /* ty=(Tensor[(720), float32], Tensor[(3, 12, 5), float64], Tensor[(7, 8, 13), float32]) */;
  %637 = @func_4820() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %638 = %635.0;
  %639 = %636.0;
  %640 = %637.1;
  (%638, %639, %640)
}

def @func_1665() -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), int32]) {
  %641 = @func_410() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %642 = @func_884() /* ty=(Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %643 = %642.1;
  %644 = cast(%643, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
  %645 = reshape(%644, newshape=[3, 12, 5]) /* ty=Tensor[(3, 12, 5), float32] */;
  %646 = @func_1212(%645) /* ty=(Tensor[(3, 12, 5), float64],) */;
  %647 = cast(meta[relay.Constant][25] /* ty=Tensor[(3, 12, 5), float64] */, dtype="int32") /* ty=Tensor[(3, 12, 5), int32] */;
  %648 = shape_of(%643, dtype="int32") /* ty=Tensor[(3), int32] */;
  %649 = cast(%643, dtype="int32") /* ty=Tensor[(3, 12, 5), int32] */;
  %650 = dyn.reshape(%647, %648, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %651 = %641.0;
  %652 = %646.0;
  %653 = right_shift(%649, %650) /* ty=Tensor[(3, 12, 5), int32] */;
  (%651, %652, %653)
}

def @func_364() -> (Tensor[(3, 12, 5), float32], Tensor[(3, 15, 5), float32], Tensor[(15), float32], Tensor[(225), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) {
  %654 = @func_263() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
  %655 = %654.0;
  %656 = cast(%655, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
  %657 = cast(meta[relay.Constant][26] /* ty=Tensor[(15), float32] */, dtype="float32") /* ty=Tensor[(15), float32] */;
  %658 = cast(meta[relay.Constant][27] /* ty=Tensor[(225), float32] */, dtype="float32") /* ty=Tensor[(225), float32] */;
  %659 = reshape(%657, newshape=[3, 1, 5]) /* ty=Tensor[(3, 1, 5), float32] */;
  %660 = reshape(%658, newshape=[3, 15, 5]) /* ty=Tensor[(3, 15, 5), float32] */;
  %661 = cast(%655, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
  %662 = @func_263() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
  %663 = sigmoid(%656) /* ty=Tensor[(3, 12, 5), float32] */;
  %664 = @func_208(%659, %660) /* ty=Tensor[(3, 15, 5), float32] */;
  %665 = tan(%661) /* ty=Tensor[(3, 12, 5), float32] */;
  %666 = %662.1;
  (%663, %664, meta[relay.Constant][26] /* ty=Tensor[(15), float32] */, meta[relay.Constant][27] /* ty=Tensor[(225), float32] */, %665, %666)
}

def @func_8626(%var_8597: Tensor[(192, 2), float64]) -> (Tensor[(192, 2), bool], Tensor[(192, 2), float64], Tensor[(192, 2), int16], Tensor[(192, 2), float32]) {
  %667 = @func_8293() /* ty=Tensor[(192, 2), float64] */;
  %668 = cast(%667, dtype="float32") /* ty=Tensor[(192, 2), float32] */;
  %669 = sinh(%668) /* ty=Tensor[(192, 2), float32] */;
  %670 = cast(%667, dtype="bool") /* ty=Tensor[(192, 2), bool] */;
  %671 = shape_of(%669, dtype="int32") /* ty=Tensor[(2), int32] */;
  %672 = cast(%669, dtype="bool") /* ty=Tensor[(192, 2), bool] */;
  %673 = dyn.reshape(%670, %671, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %674 = cast(%669, dtype="float64") /* ty=Tensor[(192, 2), float64] */;
  %675 = shape_of(%667, dtype="int32") /* ty=Tensor[(2), int32] */;
  %676 = cast(%667, dtype="float64") /* ty=Tensor[(192, 2), float64] */;
  %677 = dyn.reshape(%674, %675, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %678 = power(%676, %677) /* ty=Tensor[(192, 2), float64] */;
  %679 = cast(%var_8597, dtype="uint16") /* ty=Tensor[(192, 2), uint16] */;
  %680 = shape_of(%678, dtype="int32") /* ty=Tensor[(2), int32] */;
  %681 = cast(%678, dtype="uint16") /* ty=Tensor[(192, 2), uint16] */;
  %682 = dyn.reshape(%679, %680, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %683 = bitwise_and(%681, %682) /* ty=Tensor[(192, 2), uint16] */;
  %684 = cast(%683, dtype="float64") /* ty=Tensor[(192, 2), float64] */;
  %685 = cast(%669, dtype="int16") /* ty=Tensor[(192, 2), int16] */;
  %686 = shape_of(%683, dtype="int32") /* ty=Tensor[(2), int32] */;
  %687 = cast(%683, dtype="int16") /* ty=Tensor[(192, 2), int16] */;
  %688 = dyn.reshape(%685, %686, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %689 = cast(%var_8597, dtype="float32") /* ty=Tensor[(192, 2), float32] */;
  %690 = greater(%672, %673) /* ty=Tensor[(192, 2), bool] */;
  %691 = rsqrt(%684) /* ty=Tensor[(192, 2), float64] */;
  %692 = logical_xor(%687, %688) /* ty=Tensor[(192, 2), int16] */;
  %693 = sin(%689) /* ty=Tensor[(192, 2), float32] */;
  (%690, %691, %692, %693)
}

def @func_3260() -> (Tensor[(3, 12, 5), bool], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32]) {
  %694 = @func_3013() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), bool], Tensor[(720), float64]) */;
  %695 = %694.1;
  %696 = cast(%695, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
  %697 = reshape(%696, newshape=[3, 12, 5]) /* ty=Tensor[(3, 12, 5), float32] */;
  %698 = @func_1212(%697) /* ty=(Tensor[(3, 12, 5), float64],) */;
  %699 = %698.0;
  %700 = @func_566() /* ty=Tensor[(3, 12, 5), float32] */;
  (%695, %699, %700)
}

def @func_1364() -> (Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float64]) {
  %701 = @func_808() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), uint32], Tensor[(720), float32]) */;
  %702 = %701.0;
  %703 = cast(meta[relay.Constant][28] /* ty=Tensor[(3, 12, 5), float64] */, dtype="uint32") /* ty=Tensor[(3, 12, 5), uint32] */;
  %704 = shape_of(%702, dtype="int32") /* ty=Tensor[(3), int32] */;
  %705 = cast(%702, dtype="uint32") /* ty=Tensor[(3, 12, 5), uint32] */;
  %706 = dyn.reshape(%703, %704, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %707 = multiply(%705, %706) /* ty=Tensor[(3, 12, 5), uint32] */;
  %708 = @func_275() /* ty=Tensor[(3, 12, 5), float64] */;
  (%707, %708)
}

def @func_6800() -> Tensor[(3, 12, 5), float32] {
  %709 = @func_608() /* ty=(Tensor[(3, 12, 5), float32],) */;
  %709.0
}

def @func_3418() -> (Tensor[(7, 8, 13), float32],) {
  %710 = cast(meta[relay.Constant][29] /* ty=Tensor[(7, 8, 13), float32] */, dtype="float32") /* ty=Tensor[(7, 8, 13), float32] */;
  %711 = tan(%710) /* ty=Tensor[(7, 8, 13), float32] */;
  (%711,)
}

def @func_5491() -> (Tensor[(3, 12, 5), float64], Tensor[(11, 6, 9), float64], Tensor[(198, 3), float64], Tensor[(15), float32], Tensor[(15), float32], Tensor[(75, 3), float32], Tensor[(6, 7, 3), float32], Tensor[(126), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32]) {
  %712 = @func_3221() /* ty=(Tensor[(3, 12, 5), float64],) */;
  %713 = cast(meta[relay.Constant][30] /* ty=Tensor[(198, 3), float64] */, dtype="float64") /* ty=Tensor[(198, 3), float64] */;
  %714 = cast(meta[relay.Constant][30] /* ty=Tensor[(198, 3), float64] */, dtype="float64") /* ty=Tensor[(198, 3), float64] */;
  %715 = cast(meta[relay.Constant][31] /* ty=Tensor[(15), float32] */, dtype="float32") /* ty=Tensor[(15), float32] */;
  %716 = reshape(%713, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), float64] */;
  %717 = reshape(%714, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), float64] */;
  %718 = reshape(%715, newshape=[15]) /* ty=Tensor[(15), float32] */;
  %719 = @func_1261(%716, %717, %718) /* ty=(Tensor[(11, 6, 9), float64], Tensor[(3, 15, 5), float32], Tensor[(15), float32], Tensor[(225), float32], Tensor[(3, 12, 5), float64]) */;
  %720 = cast(meta[relay.Constant][31] /* ty=Tensor[(15), float32] */, dtype="float32") /* ty=Tensor[(15), float32] */;
  %721 = cast(meta[relay.Constant][32] /* ty=Tensor[(75, 3), float32] */, dtype="float32") /* ty=Tensor[(75, 3), float32] */;
  %722 = reshape(%720, newshape=[15]) /* ty=Tensor[(15), float32] */;
  %723 = reshape(%721, newshape=[225]) /* ty=Tensor[(225), float32] */;
  %724 = @func_2677(%722, %723) /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 15, 5), float32], Tensor[(15), float32], Tensor[(225), float32], Tensor[(720), float32], Tensor[(3, 12, 5), float32]) */;
  %725 = cast(meta[relay.Constant][33] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %726 = reshape(%725, newshape=[6, 7, 3]) /* ty=Tensor[(6, 7, 3), float32] */;
  %727 = @func_3882(%726) /* ty=(Tensor[(3, 12, 5), float64], Tensor[(6, 7, 3), float32]) */;
  %728 = @func_5272() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(10, 2, 5), float32]) */;
  %729 = %728.0;
  %730 = cast(%729, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
  %731 = %712.0;
  %732 = %719.0;
  %733 = %724.2;
  %734 = %727.1;
  %735 = @func_636() /* ty=Tensor[(3, 12, 5), float32] */;
  %736 = sinh(%730) /* ty=Tensor[(3, 12, 5), float32] */;
  (%731, %732, meta[relay.Constant][30] /* ty=Tensor[(198, 3), float64] */, meta[relay.Constant][31] /* ty=Tensor[(15), float32] */, %733, meta[relay.Constant][32] /* ty=Tensor[(75, 3), float32] */, %734, meta[relay.Constant][33] /* ty=Tensor[(126), float32] */, %735, %736)
}

def @func_6946() -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) {
  %737 = @func_6895() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
  %738 = @func_5516() /* ty=Tensor[(3, 12, 5), float64] */;
  %739 = %737.1;
  (%738, %739)
}

def @func_7309() -> (Tensor[(3, 12, 5), float64],) {
  %740 = @func_4820() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %741 = %740.1;
  (%741,)
}

def @func_3826(%var_3792: Tensor[(8, 8, 6), float64]) -> (Tensor[(8, 8, 6), float64], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32]) {
  %742 = cast(meta[relay.Constant][34] /* ty=Tensor[(8, 8, 6), float64] */, dtype="float64") /* ty=Tensor[(8, 8, 6), float64] */;
  %743 = shape_of(%var_3792, dtype="int32") /* ty=Tensor[(3), int32] */;
  %744 = cast(%var_3792, dtype="float64") /* ty=Tensor[(8, 8, 6), float64] */;
  %745 = dyn.reshape(%742, %743, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %746 = @func_756() /* ty=(Tensor[(3, 12, 5), float32],) */;
  %747 = @func_2825() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), int32]) */;
  %748 = @func_1572() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
  %749 = mod(%744, %745) /* ty=Tensor[(8, 8, 6), float64] */;
  %750 = %746.0;
  %751 = %747.0;
  %752 = %748.1;
  (%749, %750, %751, %752)
}

def @func_4159() -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(8, 6, 15), float64]) {
  %753 = @func_3260() /* ty=(Tensor[(3, 12, 5), bool], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32]) */;
  %754 = cast(meta[relay.Constant][35] /* ty=Tensor[(60, 12), float64] */, dtype="float64") /* ty=Tensor[(60, 12), float64] */;
  %755 = cast(meta[relay.Constant][35] /* ty=Tensor[(60, 12), float64] */, dtype="float64") /* ty=Tensor[(60, 12), float64] */;
  %756 = reshape(%754, newshape=[8, 6, 15]) /* ty=Tensor[(8, 6, 15), float64] */;
  %757 = reshape(%755, newshape=[8, 6, 15]) /* ty=Tensor[(8, 6, 15), float64] */;
  %758 = @func_1000(%756, %757) /* ty=(Tensor[(8, 6, 15), int8], Tensor[(3, 12, 5), float32], Tensor[(8, 6, 15), bool], Tensor[(8, 6, 15), uint16]) */;
  %759 = %758.0;
  %760 = cast(meta[relay.Constant][35] /* ty=Tensor[(60, 12), float64] */, dtype="float64") /* ty=Tensor[(60, 12), float64] */;
  %761 = shape_of(%759, dtype="int32") /* ty=Tensor[(3), int32] */;
  %762 = cast(%759, dtype="float64") /* ty=Tensor[(8, 6, 15), float64] */;
  %763 = dyn.reshape(%760, %761, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %764 = @func_3665() /* ty=Tensor[(3, 12, 5), float64] */;
  %765 = %753.1;
  %766 = floor_divide(%762, %763) /* ty=Tensor[(8, 6, 15), float64] */;
  (%764, %765, %766)
}

def @func_2371(%var_2333: Tensor[(3, 12, 5), float64], %var_2361: Tensor[(720), float64]) -> (Tensor[(3, 12, 5), bool], Tensor[(8, 6, 15), int8], Tensor[(720), float64]) {
  %767 = @func_884() /* ty=(Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %768 = %767.1;
  %769 = cast(%var_2333, dtype="int64") /* ty=Tensor[(3, 12, 5), int64] */;
  %770 = shape_of(%768, dtype="int32") /* ty=Tensor[(3), int32] */;
  %771 = cast(%768, dtype="int64") /* ty=Tensor[(3, 12, 5), int64] */;
  %772 = dyn.reshape(%769, %770, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %773 = add(%771, %772) /* ty=Tensor[(3, 12, 5), int64] */;
  %774 = cast(%773, dtype="bool") /* ty=Tensor[(3, 12, 5), bool] */;
  %775 = shape_of(%var_2333, dtype="int32") /* ty=Tensor[(3), int32] */;
  %776 = cast(%var_2333, dtype="bool") /* ty=Tensor[(3, 12, 5), bool] */;
  %777 = dyn.reshape(%774, %775, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %778 = cast(%var_2361, dtype="float64") /* ty=Tensor[(720), float64] */;
  %779 = cast(%var_2361, dtype="float64") /* ty=Tensor[(720), float64] */;
  %780 = reshape(%778, newshape=[8, 6, 15]) /* ty=Tensor[(8, 6, 15), float64] */;
  %781 = reshape(%779, newshape=[8, 6, 15]) /* ty=Tensor[(8, 6, 15), float64] */;
  %782 = @func_1000(%780, %781) /* ty=(Tensor[(8, 6, 15), int8], Tensor[(3, 12, 5), float32], Tensor[(8, 6, 15), bool], Tensor[(8, 6, 15), uint16]) */;
  %783 = less_equal(%776, %777) /* ty=Tensor[(3, 12, 5), bool] */;
  %784 = %782.0;
  (%783, %784, %var_2361)
}

def @func_2849() -> (Tensor[(3, 12, 5), float64],) {
  %785 = @func_410() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %786 = %785.1;
  (%786,)
}

def @func_7428() -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32]) {
  %787 = @func_4244() /* ty=(Tensor[(3, 12, 5), float32],) */;
  %788 = @func_5491() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(11, 6, 9), float64], Tensor[(198, 3), float64], Tensor[(15), float32], Tensor[(15), float32], Tensor[(75, 3), float32], Tensor[(6, 7, 3), float32], Tensor[(126), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32]) */;
  %789 = %787.0;
  %790 = %788.9;
  (%789, %790)
}

def @func_8381() -> (Tensor[(720), float32], Tensor[(3, 12, 5), float32]) {
  %791 = @func_2927() /* ty=(Tensor[(3, 12, 5), float32],) */;
  %792 = @func_7928() /* ty=Tensor[(720), float32] */;
  %793 = %791.0;
  (%792, %793)
}

def @func_2316(%var_2280: Tensor[(6, 1, 1), float64]) -> (Tensor[(352), uint16], Tensor[(6, 4, 88), uint64]) {
  %794 = cast(%var_2280, dtype="float64") /* ty=Tensor[(6, 1, 1), float64] */;
  %795 = tan(%794) /* ty=Tensor[(6, 1, 1), float64] */;
  %796 = cast(%795, dtype="bool") /* ty=Tensor[(6, 1, 1), bool] */;
  %797 = shape_of(%var_2280, dtype="int32") /* ty=Tensor[(3), int32] */;
  %798 = cast(%var_2280, dtype="bool") /* ty=Tensor[(6, 1, 1), bool] */;
  %799 = dyn.reshape(%796, %797, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %800 = less(%798, %799) /* ty=Tensor[(6, ?, ?), bool] */;
  %801 = cast(meta[relay.Constant][36] /* ty=Tensor[(352), uint16] */, dtype="uint16") /* ty=Tensor[(352), uint16] */;
  %802 = reshape(%801, newshape=[4, 88]) /* ty=Tensor[(4, 88), uint16] */;
  %803 = @func_1849(%802) /* ty=(Tensor[(3, 12, 5), bool], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(4, 88), uint16], Tensor[(3, 12, 5), uint16]) */;
  %804 = %803.3;
  %805 = cast(%800, dtype="uint64") /* ty=Tensor[(6, ?, ?), uint64] */;
  %806 = cast(%804, dtype="uint64") /* ty=Tensor[(4, 88), uint64] */;
  %807 = multiply(%805, %806) /* ty=Tensor[(6, 4, 88), uint64] */;
  (meta[relay.Constant][36] /* ty=Tensor[(352), uint16] */, %807)
}

def @func_9282() -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) {
  %808 = @func_2927() /* ty=(Tensor[(3, 12, 5), float32],) */;
  %809 = @func_4553() /* ty=(Tensor[(3, 12, 5), float64],) */;
  %810 = @func_1665() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), int32]) */;
  %811 = %808.0;
  %812 = %809.0;
  %813 = %810.0;
  (%811, %812, %813)
}

def @func_1849(%var_1836: Tensor[(4, 88), uint16]) -> (Tensor[(3, 12, 5), bool], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(4, 88), uint16], Tensor[(3, 12, 5), uint16]) {
  %814 = @func_263() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
  %815 = %814.1;
  %816 = cast(meta[relay.Constant][37] /* ty=Tensor[(3, 12, 5), float64] */, dtype="bool") /* ty=Tensor[(3, 12, 5), bool] */;
  %817 = shape_of(%815, dtype="int32") /* ty=Tensor[(3), int32] */;
  %818 = cast(%815, dtype="bool") /* ty=Tensor[(3, 12, 5), bool] */;
  %819 = dyn.reshape(%816, %817, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %820 = cast(%815, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
  %821 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(3, 12, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %822 = cast(meta[relay.Constant][37] /* ty=Tensor[(3, 12, 5), float64] */, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
  %823 = dyn.reshape(%820, %821, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %824 = cast(%var_1836, dtype="uint16") /* ty=Tensor[(4, 88), uint16] */;
  %825 = cast(%var_1836, dtype="uint16") /* ty=Tensor[(4, 88), uint16] */;
  %826 = reshape(%824, newshape=[8, 11, 4]) /* ty=Tensor[(8, 11, 4), uint16] */;
  %827 = reshape(%825, newshape=[8, 11, 4]) /* ty=Tensor[(8, 11, 4), uint16] */;
  %828 = @func_1320(%826, %827) /* ty=(Tensor[(8, 11, 4), bool], Tensor[(8, 11, 4), float32], Tensor[(3, 12, 5), float64]) */;
  %829 = cast(meta[relay.Constant][37] /* ty=Tensor[(3, 12, 5), float64] */, dtype="float64") /* ty=Tensor[(3, 12, 5), float64] */;
  %830 = sqrt(%829) /* ty=Tensor[(3, 12, 5), float64] */;
  %831 = cast(meta[relay.Constant][38] /* ty=Tensor[(3, 12, 5), float64] */, dtype="uint16") /* ty=Tensor[(3, 12, 5), uint16] */;
  %832 = shape_of(%830, dtype="int32") /* ty=Tensor[(3), int32] */;
  %833 = cast(%830, dtype="uint16") /* ty=Tensor[(3, 12, 5), uint16] */;
  %834 = dyn.reshape(%831, %832, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %835 = greater_equal(%818, %819) /* ty=Tensor[(3, 12, 5), bool] */;
  %836 = floor_divide(%822, %823) /* ty=Tensor[(3, 12, 5), float32] */;
  %837 = %828.2;
  %838 = bitwise_and(%833, %834) /* ty=Tensor[(3, 12, 5), uint16] */;
  (%835, %836, %837, %var_1836, %838)
}

def @func_1454() -> (Tensor[(720), float32],) {
  %839 = @func_808() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), uint32], Tensor[(720), float32]) */;
  %840 = %839.2;
  (%840,)
}

def @func_9076() -> (Tensor[(3, 12, 5), float32],) {
  %841 = @func_6343() /* ty=Tensor[(3, 12, 5), float32] */;
  (%841,)
}

def @func_2889() -> (Tensor[(3, 12, 5), float64], Tensor[(720), float32]) {
  %842 = @func_1364() /* ty=(Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float64]) */;
  %843 = @func_1454() /* ty=(Tensor[(720), float32],) */;
  %844 = %842.1;
  %845 = %843.0;
  (%844, %845)
}

def @func_5368() -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32]) {
  %846 = @func_410() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %847 = @func_4749() /* ty=(Tensor[(3, 12, 5), float32],) */;
  %848 = %846.0;
  %849 = %847.0;
  (%848, %849)
}

def @func_5756() -> Tensor[(3, 12, 5), float32] {
  %850 = @func_2927() /* ty=(Tensor[(3, 12, 5), float32],) */;
  %850.0
}

def @func_7168() -> Tensor[(3, 12, 5), float32] {
  %851 = @func_2493() /* ty=(Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), int32]) */;
  %852 = %851.1;
  %853 = cast(%852, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
  sin(%853) /* ty=Tensor[(3, 12, 5), float32] */
}

def @func_9165() -> (Tensor[(3, 12, 5), float64],) {
  %854 = @func_1522() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %855 = %854.0;
  (%855,)
}

def @func_7717() -> (Tensor[(3, 12, 5), float32], Tensor[(720), float64], Tensor[(3, 12, 5), float32]) {
  %856 = @func_3013() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), bool], Tensor[(720), float64]) */;
  %857 = @func_1464() /* ty=Tensor[(3, 12, 5), float32] */;
  %858 = %856.2;
  %859 = @func_4848() /* ty=Tensor[(3, 12, 5), float32] */;
  (%857, %858, %859)
}

def @func_9775(%var_9772: Tensor[(6, 2), float32], %var_9773: Tensor[(168), float32]) -> (Tensor[(11, 5, 15), float32], Tensor[(3, 12, 5), float32], Tensor[(1, 3, 4), float32], Tensor[(6, 2), float32], Tensor[(168), float32]) {
  %860 = @func_4654() /* ty=(Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(11, 5, 15), float32]) */;
  %861 = @func_2927() /* ty=(Tensor[(3, 12, 5), float32],) */;
  %862 = cast(%var_9772, dtype="float32") /* ty=Tensor[(6, 2), float32] */;
  %863 = cast(%var_9773, dtype="float32") /* ty=Tensor[(168), float32] */;
  %864 = reshape(%862, newshape=[1, 3, 4]) /* ty=Tensor[(1, 3, 4), float32] */;
  %865 = reshape(%863, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float32] */;
  %866 = @func_1737(%864, %865) /* ty=(Tensor[(14, 3, 4), float32], Tensor[(1, 3, 4), float32]) */;
  %867 = %860.3;
  %868 = %861.0;
  %869 = %866.1;
  (%867, %868, %869, %var_9772, %var_9773)
}

def @func_9667(%var_9651: Tensor[(2, 6, 6), float32]) -> Tensor[(2, 6, 6), float32] {
  %870 = cast(%var_9651, dtype="float32") /* ty=Tensor[(2, 6, 6), float32] */;
  acos(%870) /* ty=Tensor[(2, 6, 6), float32] */
}

def @func_7123(%var_7120: Tensor[(1, 16, 13), float32]) -> Tensor[(1, 16, 13), float32] {
  %871 = cast(%var_7120, dtype="float32") /* ty=Tensor[(1, 16, 13), float32] */;
  atan(%871) /* ty=Tensor[(1, 16, 13), float32] */
}

def @func_6127() -> (Tensor[(3, 12, 5), float32],) {
  %872 = @func_5578() /* ty=Tensor[(3, 12, 5), float32] */;
  (%872,)
}

def @func_8913() -> (Tensor[(3, 12, 5), float64],) {
  %873 = @func_5516() /* ty=Tensor[(3, 12, 5), float64] */;
  (%873,)
}

def @func_9125() -> Tensor[(3, 12, 5), uint32] {
  %874 = @func_4654() /* ty=(Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(11, 5, 15), float32]) */;
  %874.0
}

def @func_6679() -> (Tensor[(3, 12, 5), float64], Tensor[(7, 8, 13), float64]) {
  %875 = @func_6027() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(192, 2), float64]) */;
  %876 = @func_4327() /* ty=(Tensor[(720), float32], Tensor[(3, 12, 5), float64], Tensor[(7, 8, 13), float32]) */;
  %877 = %876.2;
  %878 = cast(%877, dtype="float64") /* ty=Tensor[(7, 8, 13), float64] */;
  %879 = %875.1;
  %880 = sigmoid(%878) /* ty=Tensor[(7, 8, 13), float64] */;
  (%879, %880)
}

def @func_2493() -> (Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), int32]) {
  %881 = @func_884() /* ty=(Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %882 = @func_1987() /* ty=Tensor[(3, 12, 5), int32] */;
  %883 = %881.0;
  (%882, %883)
}

def @func_9197() -> (Tensor[(3, 12, 5), float32],) {
  %884 = @func_756() /* ty=(Tensor[(3, 12, 5), float32],) */;
  %885 = %884.0;
  (%885,)
}

def @func_9347() -> (Tensor[(3, 12, 5), float32],) {
  %886 = @func_4974() /* ty=(Tensor[(720), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32]) */;
  %887 = %886.1;
  (%887,)
}

def @main(%var_10715: Tensor[(2, 10, 4), float32]) -> Tensor[(2, 10, 4), float32] {
  %888 = cast(%var_10715, dtype="float32") /* ty=Tensor[(2, 10, 4), float32] */;
  acosh(%888) /* ty=Tensor[(2, 10, 4), float32] */
}

def @func_9060(%var_9034: Tensor[(8, 11, 8), uint16]) -> Tensor[(8, 11, 8), uint16] {
  %889 = cast(meta[relay.Constant][39] /* ty=Tensor[(8, 11, 8), uint16] */, dtype="uint16") /* ty=Tensor[(8, 11, 8), uint16] */;
  %890 = shape_of(%var_9034, dtype="int32") /* ty=Tensor[(3), int32] */;
  %891 = cast(%var_9034, dtype="uint16") /* ty=Tensor[(8, 11, 8), uint16] */;
  %892 = dyn.reshape(%889, %890, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  bitwise_xor(%891, %892) /* ty=Tensor[(8, 11, 8), uint16] */
}

def @func_3467() -> Tensor[(3, 12, 5), uint32] {
  @func_1898() /* ty=Tensor[(3, 12, 5), uint32] */
}

def @func_1898() -> Tensor[(3, 12, 5), uint32] {
  %893 = @func_1364() /* ty=(Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float64]) */;
  %893.0
}

def @func_3400(%var_3390: Tensor[(12, 7, 13), float64], %var_3391: Tensor[(12, 7, 13), float64]) -> (Tensor[(12, 7, 13), bool],) {
  %894 = cast(%var_3391, dtype="bool") /* ty=Tensor[(12, 7, 13), bool] */;
  %895 = shape_of(%var_3390, dtype="int32") /* ty=Tensor[(3), int32] */;
  %896 = cast(%var_3390, dtype="bool") /* ty=Tensor[(12, 7, 13), bool] */;
  %897 = dyn.reshape(%894, %895, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %898 = greater(%896, %897) /* ty=Tensor[(12, 7, 13), bool] */;
  (%898,)
}

def @func_1212(%var_1190: Tensor[(3, 12, 5), float32]) -> (Tensor[(3, 12, 5), float64],) {
  %899 = @func_756() /* ty=(Tensor[(3, 12, 5), float32],) */;
  %900 = %899.0;
  %901 = cast(%var_1190, dtype="float64") /* ty=Tensor[(3, 12, 5), float64] */;
  %902 = shape_of(%900, dtype="int32") /* ty=Tensor[(3), int32] */;
  %903 = cast(%900, dtype="float64") /* ty=Tensor[(3, 12, 5), float64] */;
  %904 = dyn.reshape(%901, %902, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %905 = divide(%903, %904) /* ty=Tensor[(3, 12, 5), float64] */;
  (%905,)
}

def @func_9378() -> (Tensor[(3, 12, 5), float64],) {
  %906 = @func_9282() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %907 = %906.1;
  (%907,)
}

def @func_7238() -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) {
  %908 = @func_1464() /* ty=Tensor[(3, 12, 5), float32] */;
  %909 = cast(%908, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
  %910 = reshape(%909, newshape=[3, 12, 5]) /* ty=Tensor[(3, 12, 5), float32] */;
  %911 = @func_1212(%910) /* ty=(Tensor[(3, 12, 5), float64],) */;
  %912 = @func_4407() /* ty=Tensor[(3, 12, 5), float32] */;
  %913 = %911.0;
  (%908, %912, %913)
}

def @func_3221() -> (Tensor[(3, 12, 5), float64],) {
  %914 = @func_275() /* ty=Tensor[(3, 12, 5), float64] */;
  (%914,)
}

def @func_5348(%var_5329: Tensor[(352), uint16]) -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(352), uint16], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) {
  %915 = @func_608() /* ty=(Tensor[(3, 12, 5), float32],) */;
  %916 = @func_756() /* ty=(Tensor[(3, 12, 5), float32],) */;
  %917 = cast(%var_5329, dtype="uint16") /* ty=Tensor[(352), uint16] */;
  %918 = cast(%var_5329, dtype="uint16") /* ty=Tensor[(352), uint16] */;
  %919 = reshape(%917, newshape=[8, 11, 4]) /* ty=Tensor[(8, 11, 4), uint16] */;
  %920 = reshape(%918, newshape=[8, 11, 4]) /* ty=Tensor[(8, 11, 4), uint16] */;
  %921 = @func_1320(%919, %920) /* ty=(Tensor[(8, 11, 4), bool], Tensor[(8, 11, 4), float32], Tensor[(3, 12, 5), float64]) */;
  %922 = @func_3260() /* ty=(Tensor[(3, 12, 5), bool], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32]) */;
  %923 = %915.0;
  %924 = %916.0;
  %925 = %921.2;
  %926 = %922.2;
  %927 = @func_3665() /* ty=Tensor[(3, 12, 5), float64] */;
  (%923, %924, %925, %var_5329, %926, %927)
}

def @func_3179(%var_3168: uint8, %var_3169: Tensor[(2, 12, 16), uint8]) -> Tensor[(2, 12, 16), uint8] {
  %928 = cast(%var_3168, dtype="uint8") /* ty=uint8 */;
  %929 = cast(%var_3169, dtype="uint8") /* ty=Tensor[(2, 12, 16), uint8] */;
  minimum(%928, %929) /* ty=Tensor[(2, 12, 16), uint8] */
}

def @func_1987() -> Tensor[(3, 12, 5), int32] {
  %930 = @func_1665() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), int32]) */;
  %930.2
}

def @func_3972() -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32], Tensor[(7, 8, 13), bool]) {
  %931 = @func_1665() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), int32]) */;
  %932 = @func_608() /* ty=(Tensor[(3, 12, 5), float32],) */;
  %933 = @func_3418() /* ty=(Tensor[(7, 8, 13), float32],) */;
  %934 = %933.0;
  %935 = cast(%934, dtype="float64") /* ty=Tensor[(7, 8, 13), float64] */;
  %936 = log2(%935) /* ty=Tensor[(7, 8, 13), float64] */;
  %937 = cast(%934, dtype="bool") /* ty=Tensor[(7, 8, 13), bool] */;
  %938 = shape_of(%936, dtype="int32") /* ty=Tensor[(3), int32] */;
  %939 = cast(%936, dtype="bool") /* ty=Tensor[(7, 8, 13), bool] */;
  %940 = dyn.reshape(%937, %938, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %941 = less_equal(%939, %940) /* ty=Tensor[(7, 8, 13), bool] */;
  %942 = cast(%941, dtype="bool") /* ty=Tensor[(7, 8, 13), bool] */;
  %943 = shape_of(%936, dtype="int32") /* ty=Tensor[(3), int32] */;
  %944 = cast(%936, dtype="bool") /* ty=Tensor[(7, 8, 13), bool] */;
  %945 = dyn.reshape(%942, %943, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %946 = %931.0;
  %947 = %932.0;
  %948 = less(%944, %945) /* ty=Tensor[(7, 8, 13), bool] */;
  (%946, %947, %948)
}

def @func_5144() -> (Tensor[(3, 12, 5), float64],) {
  %949 = @func_4327() /* ty=(Tensor[(720), float32], Tensor[(3, 12, 5), float64], Tensor[(7, 8, 13), float32]) */;
  %950 = %949.1;
  (%950,)
}

def @func_3078() -> Tensor[(3, 12, 5), float32] {
  %951 = @func_1541() /* ty=(Tensor[(3, 12, 5), float32],) */;
  %951.0
}

def @func_8508() -> (Tensor[(720), float32], Tensor[(3, 12, 5), float32]) {
  %952 = @func_1454() /* ty=(Tensor[(720), float32],) */;
  %953 = %952.0;
  %954 = @func_5756() /* ty=Tensor[(3, 12, 5), float32] */;
  (%953, %954)
}

def @func_4021(%var_3990: Tensor[(180), float32]) -> (Tensor[(720), float32], Tensor[(720), float32], Tensor[(180), float32], Tensor[(3, 12, 5), float32]) {
  %955 = @func_1454() /* ty=(Tensor[(720), float32],) */;
  %956 = cast(%var_3990, dtype="float32") /* ty=Tensor[(180), float32] */;
  %957 = reshape(%956, newshape=[3, 12, 5]) /* ty=Tensor[(3, 12, 5), float32] */;
  %958 = @func_2144(%957) /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(720), float32], Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float64]) */;
  %959 = @func_3013() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), bool], Tensor[(720), float64]) */;
  %960 = %955.0;
  %961 = %958.2;
  %962 = %959.0;
  (%960, %961, %var_3990, %962)
}

def @func_7597() -> Tensor[(3, 12, 5), int32] {
  %963 = @func_2825() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), int32]) */;
  %963.1
}

def @func_5957() -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(126), float32], Tensor[(3, 12, 5), float32], Tensor[(6, 4, 88), uint64], Tensor[(3, 2), float64], Tensor[(3, 12, 5), float64]) {
  %964 = @func_5083() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), uint32]) */;
  %965 = @func_2235() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
  %966 = @func_5491() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(11, 6, 9), float64], Tensor[(198, 3), float64], Tensor[(15), float32], Tensor[(15), float32], Tensor[(75, 3), float32], Tensor[(6, 7, 3), float32], Tensor[(126), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32]) */;
  %967 = cast(meta[relay.Constant][40] /* ty=Tensor[(3, 2), float64] */, dtype="float64") /* ty=Tensor[(3, 2), float64] */;
  %968 = reshape(%967, newshape=[6]) /* ty=Tensor[(6), float64] */;
  %969 = @func_2713(%968) /* ty=(Tensor[(3, 12, 5), float64], Tensor[(6, 4, 88), uint64], Tensor[(6), float64]) */;
  %970 = %966.7;
  %971 = cast(%970, dtype="float32") /* ty=Tensor[(126), float32] */;
  %972 = reshape(%971, newshape=[6, 7, 3]) /* ty=Tensor[(6, 7, 3), float32] */;
  %973 = @func_3882(%972) /* ty=(Tensor[(3, 12, 5), float64], Tensor[(6, 7, 3), float32]) */;
  %974 = @func_1464() /* ty=Tensor[(3, 12, 5), float32] */;
  %975 = %964.1;
  %976 = @func_636() /* ty=Tensor[(3, 12, 5), float32] */;
  %977 = %965.0;
  %978 = @func_4848() /* ty=Tensor[(3, 12, 5), float32] */;
  %979 = %969.1;
  %980 = %973.0;
  (%974, %975, %976, %977, %970, %978, %979, meta[relay.Constant][40] /* ty=Tensor[(3, 2), float64] */, %980)
}

def @func_7383() -> Tensor[(7, 2, 5), float32] {
  %981 = cast(meta[relay.Constant][41] /* ty=Tensor[(7, 2, 5), float32] */, dtype="float32") /* ty=Tensor[(7, 2, 5), float32] */;
  acos(%981) /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_2825() -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), int32]) {
  %982 = @func_1971() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %983 = %982.1;
  %984 = @func_1987() /* ty=Tensor[(3, 12, 5), int32] */;
  (%983, %984)
}

def @func_9728() -> (Tensor[(3, 12, 5), float32], Tensor[(12, 7, 13), bool], Tensor[(6, 28), uint8], Tensor[(14, 78), float64]) {
  %985 = cast(meta[relay.Constant][42] /* ty=Tensor[(6, 28), uint8] */, dtype="uint8") /* ty=Tensor[(6, 28), uint8] */;
  %986 = cast(meta[relay.Constant][42] /* ty=Tensor[(6, 28), uint8] */, dtype="uint8") /* ty=Tensor[(6, 28), uint8] */;
  %987 = @func_4407() /* ty=Tensor[(3, 12, 5), float32] */;
  %988 = cast(%987, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
  %989 = cast(meta[relay.Constant][43] /* ty=Tensor[(14, 78), float64] */, dtype="float64") /* ty=Tensor[(14, 78), float64] */;
  %990 = reshape(%985, newshape=[14, 2, 6]) /* ty=Tensor[(14, 2, 6), uint8] */;
  %991 = reshape(%986, newshape=[14, 2, 6]) /* ty=Tensor[(14, 2, 6), uint8] */;
  %992 = reshape(%988, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %993 = reshape(%989, newshape=[1092]) /* ty=Tensor[(1092), float64] */;
  %994 = @func_7080(%990, %991, %992, %993) /* ty=(Tensor[(14, 2, 6), bool], Tensor[(720), float32], Tensor[(180), float32], Tensor[(3, 12, 5), float32], Tensor[(14, 2, 6), float32], Tensor[(12, 7, 13), bool], Tensor[(1092), float64]) */;
  %995 = %994.5;
  (%987, %995, meta[relay.Constant][42] /* ty=Tensor[(6, 28), uint8] */, meta[relay.Constant][43] /* ty=Tensor[(14, 78), float64] */)
}

def @func_208(%var_190: Tensor[(3, 1, 5), float32], %var_191: Tensor[(3, 15, 5), float32]) -> Tensor[(3, 15, 5), float32] {
  %996 = cast(%var_190, dtype="float32") /* ty=Tensor[(3, 1, 5), float32] */;
  %997 = cast(%var_191, dtype="float32") /* ty=Tensor[(3, 15, 5), float32] */;
  floor_divide(%996, %997) /* ty=Tensor[(3, 15, 5), float32] */
}

def @func_3665() -> Tensor[(3, 12, 5), float64] {
  %998 = @func_1572() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
  %998.2
}

def @func_10655() -> (Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float64]) {
  %999 = @func_6270() /* ty=(Tensor[(3, 12, 5), uint32],) */;
  %1000 = %999.0;
  %1001 = @func_3665() /* ty=Tensor[(3, 12, 5), float64] */;
  (%1000, %1001)
}

def @func_275() -> Tensor[(3, 12, 5), float64] {
  %1002 = @func_263() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
  %1002.1
}

def @func_946(%var_929: Tensor[(8, 2, 7), float64]) -> (Tensor[(8, 2, 7), float64], Tensor[(3, 12, 5), float32], Tensor[(720), float32], Tensor[(6, 30), float64]) {
  %1003 = cast(%var_929, dtype="float64") /* ty=Tensor[(8, 2, 7), float64] */;
  %1004 = cast(meta[relay.Constant][44] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %1005 = cast(meta[relay.Constant][45] /* ty=Tensor[(6, 30), float64] */, dtype="float64") /* ty=Tensor[(6, 30), float64] */;
  %1006 = reshape(%1004, newshape=[9, 8, 10]) /* ty=Tensor[(9, 8, 10), float32] */;
  %1007 = reshape(%1005, newshape=[3, 12, 5]) /* ty=Tensor[(3, 12, 5), float64] */;
  %1008 = @func_732(%1006, %1007) /* ty=(Tensor[(3, 12, 5), float32], Tensor[(9, 8, 10), float32], Tensor[(9, 8, 10), float64], Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float32]) */;
  %1009 = atan(%1003) /* ty=Tensor[(8, 2, 7), float64] */;
  %1010 = %1008.4;
  (%1009, %1010, meta[relay.Constant][44] /* ty=Tensor[(720), float32] */, meta[relay.Constant][45] /* ty=Tensor[(6, 30), float64] */)
}

def @func_8572() -> Tensor[(3, 12, 5), float64] {
  %1011 = @func_263() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
  %1011.1
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_2928() -> (Tensor[(3, 12, 5), float32],) {
  %2 = fn () -> (Tensor[(3, 12, 5), float32],) {
    %0 = @func_608() /* ty=(Tensor[(3, 12, 5), float32],) */;
    %1 = %0.0;
    (%1,)
  };
  %2() /* ty=(Tensor[(3, 12, 5), float32],) */
}

def @func_1000(%var_987: Tensor[(8, 6, 15), float64], %var_995: Tensor[(8, 6, 15), float64]) -> (Tensor[(8, 6, 15), int8], Tensor[(3, 12, 5), float32], Tensor[(8, 6, 15), bool], Tensor[(8, 6, 15), uint16]) {
  %3 = cast(meta[relay.Constant][1] /* ty=Tensor[(8, 6, 15), float64] */, dtype="float64") /* ty=Tensor[(8, 6, 15), float64] */;
  %4 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(8, 6, 15), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %5 = cast(meta[relay.Constant][0] /* ty=Tensor[(8, 6, 15), float64] */, dtype="float64") /* ty=Tensor[(8, 6, 15), float64] */;
  %6 = dyn.reshape(%3, %4, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %7 = minimum(%5, %6) /* ty=Tensor[(8, 6, 15), float64] */;
  %8 = cast(meta[relay.Constant][2] /* ty=Tensor[(8, 6, 15), float64] */, dtype="int8") /* ty=Tensor[(8, 6, 15), int8] */;
  %9 = shape_of(%7, dtype="int32") /* ty=Tensor[(3), int32] */;
  %10 = cast(%7, dtype="int8") /* ty=Tensor[(8, 6, 15), int8] */;
  %11 = dyn.reshape(%8, %9, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %12 = @func_608() /* ty=(Tensor[(3, 12, 5), float32],) */;
  %13 = cast(%var_987, dtype="bool") /* ty=Tensor[(8, 6, 15), bool] */;
  %14 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(8, 6, 15), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %15 = cast(meta[relay.Constant][2] /* ty=Tensor[(8, 6, 15), float64] */, dtype="bool") /* ty=Tensor[(8, 6, 15), bool] */;
  %16 = dyn.reshape(%13, %14, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %17 = cast(%var_995, dtype="uint16") /* ty=Tensor[(8, 6, 15), uint16] */;
  %18 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(8, 6, 15), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %19 = cast(meta[relay.Constant][2] /* ty=Tensor[(8, 6, 15), float64] */, dtype="uint16") /* ty=Tensor[(8, 6, 15), uint16] */;
  %20 = dyn.reshape(%17, %18, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %21 = maximum(%10, %11) /* ty=Tensor[(8, 6, 15), int8] */;
  %22 = %12.0;
  %23 = greater(%15, %16) /* ty=Tensor[(8, 6, 15), bool] */;
  %24 = left_shift(%19, %20) /* ty=Tensor[(8, 6, 15), uint16] */;
  (%21, %22, %23, %24)
}

def @func_8087(%var_8062: Tensor[(88), float32]) -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(2, 4, 11), int8], Tensor[(88), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), int32]) {
  %25 = @func_5272() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(10, 2, 5), float32]) */;
  %26 = @func_2825() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), int32]) */;
  %27 = @func_3221() /* ty=(Tensor[(3, 12, 5), float64],) */;
  %28 = cast(%var_8062, dtype="float32") /* ty=Tensor[(88), float32] */;
  %29 = %26.0;
  %30 = cast(%29, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
  %31 = cast(%var_8062, dtype="float32") /* ty=Tensor[(88), float32] */;
  %32 = reshape(%28, newshape=[2, 4, 11]) /* ty=Tensor[(2, 4, 11), float32] */;
  %33 = reshape(%30, newshape=[30, 6]) /* ty=Tensor[(30, 6), float32] */;
  %34 = reshape(%31, newshape=[2, 4, 11]) /* ty=Tensor[(2, 4, 11), float32] */;
  %35 = @func_3336(%32, %33, %34) /* ty=(Tensor[(3, 12, 5), float64], Tensor[(30, 6), float32], Tensor[(2, 4, 11), int8], Tensor[(2, 4, 11), float64], Tensor[(3, 12, 5), int32]) */;
  %36 = %35.2;
  %37 = cast(%36, dtype="float32") /* ty=Tensor[(2, 4, 11), float32] */;
  %38 = @func_4407() /* ty=Tensor[(3, 12, 5), float32] */;
  %39 = cast(%38, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
  %40 = cast(%36, dtype="float32") /* ty=Tensor[(2, 4, 11), float32] */;
  %41 = reshape(%37, newshape=[2, 4, 11]) /* ty=Tensor[(2, 4, 11), float32] */;
  %42 = reshape(%39, newshape=[30, 6]) /* ty=Tensor[(30, 6), float32] */;
  %43 = reshape(%40, newshape=[2, 4, 11]) /* ty=Tensor[(2, 4, 11), float32] */;
  %44 = @func_3336(%41, %42, %43) /* ty=(Tensor[(3, 12, 5), float64], Tensor[(30, 6), float32], Tensor[(2, 4, 11), int8], Tensor[(2, 4, 11), float64], Tensor[(3, 12, 5), int32]) */;
  %45 = %25.0;
  %46 = %27.0;
  %47 = %44.4;
  (%45, %29, %46, %36, %var_8062, %38, %47)
}

def @func_6897() -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) {
  @func_6895() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */
}

def @func_8628(%var_8627: Tensor[(192, 2), float64]) -> (Tensor[(192, 2), bool], Tensor[(192, 2), float64], Tensor[(192, 2), int16], Tensor[(192, 2), float32]) {
  %75 = fn (%var_8597: Tensor[(192, 2), float64]) -> (Tensor[(192, 2), bool], Tensor[(192, 2), float64], Tensor[(192, 2), int16], Tensor[(192, 2), float32]) {
    %48 = @func_8293() /* ty=Tensor[(192, 2), float64] */;
    %49 = cast(%48, dtype="float32") /* ty=Tensor[(192, 2), float32] */;
    %50 = sinh(%49) /* ty=Tensor[(192, 2), float32] */;
    %51 = cast(%48, dtype="bool") /* ty=Tensor[(192, 2), bool] */;
    %52 = shape_of(%50, dtype="int32") /* ty=Tensor[(2), int32] */;
    %53 = cast(%50, dtype="bool") /* ty=Tensor[(192, 2), bool] */;
    %54 = dyn.reshape(%51, %52, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %55 = cast(%50, dtype="float64") /* ty=Tensor[(192, 2), float64] */;
    %56 = shape_of(%48, dtype="int32") /* ty=Tensor[(2), int32] */;
    %57 = cast(%48, dtype="float64") /* ty=Tensor[(192, 2), float64] */;
    %58 = dyn.reshape(%55, %56, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %59 = power(%57, %58) /* ty=Tensor[(192, 2), float64] */;
    %60 = cast(%var_8597, dtype="uint16") /* ty=Tensor[(192, 2), uint16] */;
    %61 = shape_of(%59, dtype="int32") /* ty=Tensor[(2), int32] */;
    %62 = cast(%59, dtype="uint16") /* ty=Tensor[(192, 2), uint16] */;
    %63 = dyn.reshape(%60, %61, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %64 = bitwise_and(%62, %63) /* ty=Tensor[(192, 2), uint16] */;
    %65 = cast(%64, dtype="float64") /* ty=Tensor[(192, 2), float64] */;
    %66 = cast(%50, dtype="int16") /* ty=Tensor[(192, 2), int16] */;
    %67 = shape_of(%64, dtype="int32") /* ty=Tensor[(2), int32] */;
    %68 = cast(%64, dtype="int16") /* ty=Tensor[(192, 2), int16] */;
    %69 = dyn.reshape(%66, %67, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
    %70 = cast(%var_8597, dtype="float32") /* ty=Tensor[(192, 2), float32] */;
    %71 = greater(%53, %54) /* ty=Tensor[(192, 2), bool] */;
    %72 = rsqrt(%65) /* ty=Tensor[(192, 2), float64] */;
    %73 = logical_xor(%68, %69) /* ty=Tensor[(192, 2), int16] */;
    %74 = sin(%70) /* ty=Tensor[(192, 2), float32] */;
    (%71, %72, %73, %74)
  };
  %75(%var_8627) /* ty=(Tensor[(192, 2), bool], Tensor[(192, 2), float64], Tensor[(192, 2), int16], Tensor[(192, 2), float32]) */
}

def @func_3014() -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), bool], Tensor[(720), float64]) {
  %84 = fn () -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), bool], Tensor[(720), float64]) {
    %76 = @func_1572() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
    %77 = %76.0;
    %78 = cast(%77, dtype="float64") /* ty=Tensor[(3, 12, 5), float64] */;
    %79 = cast(meta[relay.Constant][3] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
    %80 = reshape(%78, newshape=[3, 12, 5]) /* ty=Tensor[(3, 12, 5), float64] */;
    %81 = reshape(%79, newshape=[720]) /* ty=Tensor[(720), float64] */;
    %82 = @func_2371(%80, %81) /* ty=(Tensor[(3, 12, 5), bool], Tensor[(8, 6, 15), int8], Tensor[(720), float64]) */;
    %83 = %82.0;
    (%77, %83, meta[relay.Constant][3] /* ty=Tensor[(720), float64] */)
  };
  %84() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), bool], Tensor[(720), float64]) */
}

def @func_3404(%var_3402: Tensor[(12, 7, 13), float64], %var_3403: Tensor[(12, 7, 13), float64]) -> (Tensor[(12, 7, 13), bool],) {
  @func_3400(%var_3402, %var_3403) /* ty=(Tensor[(12, 7, 13), bool],) */
}

def @func_5578() -> Tensor[(3, 12, 5), float32] {
  @func_1464() /* ty=Tensor[(3, 12, 5), float32] */
}

def @func_5491() -> (Tensor[(3, 12, 5), float64], Tensor[(11, 6, 9), float64], Tensor[(198, 3), float64], Tensor[(15), float32], Tensor[(15), float32], Tensor[(75, 3), float32], Tensor[(6, 7, 3), float32], Tensor[(126), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32]) {
  %85 = @func_3221() /* ty=(Tensor[(3, 12, 5), float64],) */;
  %86 = cast(meta[relay.Constant][4] /* ty=Tensor[(198, 3), float64] */, dtype="float64") /* ty=Tensor[(198, 3), float64] */;
  %87 = cast(meta[relay.Constant][4] /* ty=Tensor[(198, 3), float64] */, dtype="float64") /* ty=Tensor[(198, 3), float64] */;
  %88 = cast(meta[relay.Constant][5] /* ty=Tensor[(15), float32] */, dtype="float32") /* ty=Tensor[(15), float32] */;
  %89 = reshape(%86, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), float64] */;
  %90 = reshape(%87, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), float64] */;
  %91 = reshape(%88, newshape=[15]) /* ty=Tensor[(15), float32] */;
  %92 = @func_1261(%89, %90, %91) /* ty=(Tensor[(11, 6, 9), float64], Tensor[(3, 15, 5), float32], Tensor[(15), float32], Tensor[(225), float32], Tensor[(3, 12, 5), float64]) */;
  %93 = cast(meta[relay.Constant][5] /* ty=Tensor[(15), float32] */, dtype="float32") /* ty=Tensor[(15), float32] */;
  %94 = cast(meta[relay.Constant][6] /* ty=Tensor[(75, 3), float32] */, dtype="float32") /* ty=Tensor[(75, 3), float32] */;
  %95 = reshape(%93, newshape=[15]) /* ty=Tensor[(15), float32] */;
  %96 = reshape(%94, newshape=[225]) /* ty=Tensor[(225), float32] */;
  %97 = @func_2677(%95, %96) /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 15, 5), float32], Tensor[(15), float32], Tensor[(225), float32], Tensor[(720), float32], Tensor[(3, 12, 5), float32]) */;
  %98 = cast(meta[relay.Constant][7] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %99 = reshape(%98, newshape=[6, 7, 3]) /* ty=Tensor[(6, 7, 3), float32] */;
  %100 = @func_3882(%99) /* ty=(Tensor[(3, 12, 5), float64], Tensor[(6, 7, 3), float32]) */;
  %101 = @func_5272() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(10, 2, 5), float32]) */;
  %102 = %101.0;
  %103 = cast(%102, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
  %104 = %85.0;
  %105 = %92.0;
  %106 = %97.2;
  %107 = %100.1;
  %108 = @func_636() /* ty=Tensor[(3, 12, 5), float32] */;
  %109 = sinh(%103) /* ty=Tensor[(3, 12, 5), float32] */;
  (%104, %105, meta[relay.Constant][4] /* ty=Tensor[(198, 3), float64] */, meta[relay.Constant][5] /* ty=Tensor[(15), float32] */, %106, meta[relay.Constant][6] /* ty=Tensor[(75, 3), float32] */, %107, meta[relay.Constant][7] /* ty=Tensor[(126), float32] */, %108, %109)
}

def @func_3882(%var_3864: Tensor[(6, 7, 3), float32]) -> (Tensor[(3, 12, 5), float64], Tensor[(6, 7, 3), float32]) {
  %110 = @func_1971() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %111 = cast(%var_3864, dtype="float32") /* ty=Tensor[(6, 7, 3), float32] */;
  %112 = cosh(%111) /* ty=Tensor[(6, 7, 3), float32] */;
  %113 = cast(%112, dtype="float32") /* ty=Tensor[(6, 7, 3), float32] */;
  %114 = %110.1;
  %115 = acosh(%113) /* ty=Tensor[(6, 7, 3), float32] */;
  (%114, %115)
}

def @func_2825() -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), int32]) {
  %116 = @func_1971() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %117 = %116.1;
  %118 = @func_1987() /* ty=Tensor[(3, 12, 5), int32] */;
  (%117, %118)
}

def @func_9813() -> Tensor[(3, 12, 5), int32] {
  %119 = fn () -> Tensor[(3, 12, 5), int32] {
    @func_7597() /* ty=Tensor[(3, 12, 5), int32] */
  };
  %119() /* ty=Tensor[(3, 12, 5), int32] */
}

def @func_1898() -> Tensor[(3, 12, 5), uint32] {
  %120 = @func_1364() /* ty=(Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float64]) */;
  %120.0
}

def @func_732(%var_650: Tensor[(9, 8, 10), float32], %var_702: Tensor[(3, 12, 5), float64]) -> (Tensor[(3, 12, 5), float32], Tensor[(9, 8, 10), float32], Tensor[(9, 8, 10), float64], Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float32]) {
  %121 = @func_608() /* ty=(Tensor[(3, 12, 5), float32],) */;
  %122 = %121.0;
  %123 = cast(%122, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
  %124 = cast(%var_650, dtype="float32") /* ty=Tensor[(9, 8, 10), float32] */;
  %125 = cast(%var_650, dtype="float32") /* ty=Tensor[(9, 8, 10), float32] */;
  %126 = sigmoid(%125) /* ty=Tensor[(9, 8, 10), float32] */;
  %127 = cast(%126, dtype="float64") /* ty=Tensor[(9, 8, 10), float64] */;
  %128 = @func_364() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 15, 5), float32], Tensor[(15), float32], Tensor[(225), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
  %129 = %128.5;
  %130 = cast(%var_702, dtype="uint32") /* ty=Tensor[(3, 12, 5), uint32] */;
  %131 = shape_of(%129, dtype="int32") /* ty=Tensor[(3), int32] */;
  %132 = cast(%129, dtype="uint32") /* ty=Tensor[(3, 12, 5), uint32] */;
  %133 = dyn.reshape(%130, %131, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %134 = @func_608() /* ty=(Tensor[(3, 12, 5), float32],) */;
  %135 = acos(%123) /* ty=Tensor[(3, 12, 5), float32] */;
  %136 = asin(%124) /* ty=Tensor[(9, 8, 10), float32] */;
  %137 = log2(%127) /* ty=Tensor[(9, 8, 10), float64] */;
  %138 = maximum(%132, %133) /* ty=Tensor[(3, 12, 5), uint32] */;
  %139 = %134.0;
  (%135, %136, %137, %138, %139)
}

def @func_5959() -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(126), float32], Tensor[(3, 12, 5), float32], Tensor[(6, 4, 88), uint64], Tensor[(3, 2), float64], Tensor[(3, 12, 5), float64]) {
  @func_5957() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(126), float32], Tensor[(3, 12, 5), float32], Tensor[(6, 4, 88), uint64], Tensor[(3, 2), float64], Tensor[(3, 12, 5), float64]) */
}

def @main(%var_10715: Tensor[(2, 10, 4), float32]) -> Tensor[(2, 10, 4), float32] {
  %140 = cast(%var_10715, dtype="float32") /* ty=Tensor[(2, 10, 4), float32] */;
  acosh(%140) /* ty=Tensor[(2, 10, 4), float32] */
}

def @func_5580() -> Tensor[(3, 12, 5), float32] {
  @func_5578() /* ty=Tensor[(3, 12, 5), float32] */
}

def @func_9921() -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), bool]) {
  %146 = fn () -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), bool]) {
    %141 = @func_7500() /* ty=(Tensor[(3, 12, 5), float64],) */;
    %142 = @func_3013() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), bool], Tensor[(720), float64]) */;
    %143 = %141.0;
    %144 = @func_9698() /* ty=Tensor[(3, 12, 5), float64] */;
    %145 = %142.1;
    (%143, %144, %145)
  };
  %146() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), bool]) */
}

def @func_3665() -> Tensor[(3, 12, 5), float64] {
  %147 = @func_1572() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
  %147.2
}

def @func_7597() -> Tensor[(3, 12, 5), int32] {
  %148 = @func_2825() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), int32]) */;
  %148.1
}

def @func_8294() -> Tensor[(192, 2), float64] {
  %152 = fn () -> Tensor[(192, 2), float64] {
    %149 = @func_6027() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(192, 2), float64]) */;
    %150 = %149.2;
    %151 = cast(%150, dtype="float64") /* ty=Tensor[(192, 2), float64] */;
    tan(%151) /* ty=Tensor[(192, 2), float64] */
  };
  %152() /* ty=Tensor[(192, 2), float64] */
}

def @func_3468() -> Tensor[(3, 12, 5), uint32] {
  %153 = fn () -> Tensor[(3, 12, 5), uint32] {
    @func_1898() /* ty=Tensor[(3, 12, 5), uint32] */
  };
  %153() /* ty=Tensor[(3, 12, 5), uint32] */
}

def @func_8508() -> (Tensor[(720), float32], Tensor[(3, 12, 5), float32]) {
  %154 = @func_1454() /* ty=(Tensor[(720), float32],) */;
  %155 = %154.0;
  %156 = @func_5756() /* ty=Tensor[(3, 12, 5), float32] */;
  (%155, %156)
}

def @func_10072() -> Tensor[(3, 12, 5), uint32] {
  %158 = fn () -> Tensor[(3, 12, 5), uint32] {
    %157 = @func_6770() /* ty=(Tensor[(3, 12, 5), uint32],) */;
    %157.0
  };
  %158() /* ty=Tensor[(3, 12, 5), uint32] */
}

def @func_7123(%var_7120: Tensor[(1, 16, 13), float32]) -> Tensor[(1, 16, 13), float32] {
  %159 = cast(%var_7120, dtype="float32") /* ty=Tensor[(1, 16, 13), float32] */;
  atan(%159) /* ty=Tensor[(1, 16, 13), float32] */
}

def @func_636() -> Tensor[(3, 12, 5), float32] {
  %160 = @func_608() /* ty=(Tensor[(3, 12, 5), float32],) */;
  %160.0
}

def @func_8461() -> Tensor[(3, 12, 5), float32] {
  @func_8459() /* ty=Tensor[(3, 12, 5), float32] */
}

def @func_9284() -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) {
  @func_9282() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */
}

def @func_9960(%var_9927: Tensor[(7, 8, 13), float32], %var_9938: Tensor[(7, 8, 13), float32]) -> (Tensor[(7, 8, 13), bool], Tensor[(7, 8, 13), int64]) {
  %161 = @func_8778() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(7, 8, 13), float32]) */;
  %162 = %161.1;
  %163 = cast(%var_9927, dtype="bool") /* ty=Tensor[(7, 8, 13), bool] */;
  %164 = shape_of(%162, dtype="int32") /* ty=Tensor[(3), int32] */;
  %165 = cast(%162, dtype="bool") /* ty=Tensor[(7, 8, 13), bool] */;
  %166 = dyn.reshape(%163, %164, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %167 = cast(%var_9938, dtype="int64") /* ty=Tensor[(7, 8, 13), int64] */;
  %168 = shape_of(%var_9927, dtype="int32") /* ty=Tensor[(3), int32] */;
  %169 = cast(%var_9927, dtype="int64") /* ty=Tensor[(7, 8, 13), int64] */;
  %170 = dyn.reshape(%167, %168, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %171 = equal(%165, %166) /* ty=Tensor[(7, 8, 13), bool] */;
  %172 = bitwise_xor(%169, %170) /* ty=Tensor[(7, 8, 13), int64] */;
  (%171, %172)
}

def @func_623() -> Tensor[(3, 12, 5), float32] {
  %174 = fn () -> Tensor[(3, 12, 5), float32] {
    %173 = @func_263() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
    %173.0
  };
  %174() /* ty=Tensor[(3, 12, 5), float32] */
}

def @func_5100() -> (Tensor[(720), float32], Tensor[(3, 12, 5), float32]) {
  %177 = fn () -> (Tensor[(720), float32], Tensor[(3, 12, 5), float32]) {
    %175 = @func_3851() /* ty=Tensor[(720), float32] */;
    %176 = @func_1464() /* ty=Tensor[(3, 12, 5), float32] */;
    (%175, %176)
  };
  %177() /* ty=(Tensor[(720), float32], Tensor[(3, 12, 5), float32]) */
}

def @func_6948() -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) {
  @func_6946() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */
}

def @func_9017() -> (Tensor[(3, 12, 5), int32], Tensor[(14, 2, 6), float32], Tensor[(168), uint8], Tensor[(182, 6), float64]) {
  %189 = fn () -> (Tensor[(3, 12, 5), int32], Tensor[(14, 2, 6), float32], Tensor[(168), uint8], Tensor[(182, 6), float64]) {
    %178 = cast(meta[relay.Constant][8] /* ty=Tensor[(168), uint8] */, dtype="uint8") /* ty=Tensor[(168), uint8] */;
    %179 = cast(meta[relay.Constant][8] /* ty=Tensor[(168), uint8] */, dtype="uint8") /* ty=Tensor[(168), uint8] */;
    %180 = @func_8240() /* ty=Tensor[(3, 12, 5), int32] */;
    %181 = cast(%180, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
    %182 = cast(meta[relay.Constant][9] /* ty=Tensor[(182, 6), float64] */, dtype="float64") /* ty=Tensor[(182, 6), float64] */;
    %183 = reshape(%178, newshape=[14, 2, 6]) /* ty=Tensor[(14, 2, 6), uint8] */;
    %184 = reshape(%179, newshape=[14, 2, 6]) /* ty=Tensor[(14, 2, 6), uint8] */;
    %185 = reshape(%181, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %186 = reshape(%182, newshape=[1092]) /* ty=Tensor[(1092), float64] */;
    %187 = @func_7080(%183, %184, %185, %186) /* ty=(Tensor[(14, 2, 6), bool], Tensor[(720), float32], Tensor[(180), float32], Tensor[(3, 12, 5), float32], Tensor[(14, 2, 6), float32], Tensor[(12, 7, 13), bool], Tensor[(1092), float64]) */;
    %188 = %187.4;
    (%180, %188, meta[relay.Constant][8] /* ty=Tensor[(168), uint8] */, meta[relay.Constant][9] /* ty=Tensor[(182, 6), float64] */)
  };
  %189() /* ty=(Tensor[(3, 12, 5), int32], Tensor[(14, 2, 6), float32], Tensor[(168), uint8], Tensor[(182, 6), float64]) */
}

def @func_1004(%var_1002: Tensor[(8, 6, 15), float64], %var_1003: Tensor[(8, 6, 15), float64]) -> (Tensor[(8, 6, 15), int8], Tensor[(3, 12, 5), float32], Tensor[(8, 6, 15), bool], Tensor[(8, 6, 15), uint16]) {
  @func_1000(%var_1002, %var_1003) /* ty=(Tensor[(8, 6, 15), int8], Tensor[(3, 12, 5), float32], Tensor[(8, 6, 15), bool], Tensor[(8, 6, 15), uint16]) */
}

def @func_10428(%var_10426: Tensor[(15), float32]) -> (Tensor[(3, 12, 5), bool], Tensor[(3, 15, 5), float32], Tensor[(594), float64], Tensor[(15), float32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32]) {
  @func_10425(%var_10426) /* ty=(Tensor[(3, 12, 5), bool], Tensor[(3, 15, 5), float32], Tensor[(594), float64], Tensor[(15), float32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32]) */
}

def @func_6272() -> (Tensor[(3, 12, 5), uint32],) {
  @func_6270() /* ty=(Tensor[(3, 12, 5), uint32],) */
}

def @func_2889() -> (Tensor[(3, 12, 5), float64], Tensor[(720), float32]) {
  %190 = @func_1364() /* ty=(Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float64]) */;
  %191 = @func_1454() /* ty=(Tensor[(720), float32],) */;
  %192 = %190.1;
  %193 = %191.0;
  (%192, %193)
}

def @func_9165() -> (Tensor[(3, 12, 5), float64],) {
  %194 = @func_1522() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %195 = %194.0;
  (%195,)
}

def @func_7008(%var_7006: Tensor[(12), float32], %var_7007: Tensor[(168), float32]) -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), uint32], Tensor[(14, 3, 4), float32], Tensor[(12), float32], Tensor[(168), float32]) {
  %206 = fn (%var_6976: Tensor[(12), float32], %var_6977: Tensor[(168), float32]) -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), uint32], Tensor[(14, 3, 4), float32], Tensor[(12), float32], Tensor[(168), float32]) {
    %196 = @func_5037() /* ty=(Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
    %197 = @func_1364() /* ty=(Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float64]) */;
    %198 = cast(%var_6976, dtype="float32") /* ty=Tensor[(12), float32] */;
    %199 = cast(%var_6977, dtype="float32") /* ty=Tensor[(168), float32] */;
    %200 = reshape(%198, newshape=[1, 3, 4]) /* ty=Tensor[(1, 3, 4), float32] */;
    %201 = reshape(%199, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float32] */;
    %202 = @func_1737(%200, %201) /* ty=(Tensor[(14, 3, 4), float32], Tensor[(1, 3, 4), float32]) */;
    %203 = %196.2;
    %204 = %197.0;
    %205 = %202.0;
    (%203, %204, %205, %var_6976, %var_6977)
  };
  %206(%var_7006, %var_7007) /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), uint32], Tensor[(14, 3, 4), float32], Tensor[(12), float32], Tensor[(168), float32]) */
}

def @func_8969() -> (Tensor[(720), float32], Tensor[(3, 12, 5), int32]) {
  %207 = @func_1454() /* ty=(Tensor[(720), float32],) */;
  %208 = %207.0;
  %209 = @func_8240() /* ty=Tensor[(3, 12, 5), int32] */;
  (%208, %209)
}

def @func_5146() -> (Tensor[(3, 12, 5), float64],) {
  @func_5144() /* ty=(Tensor[(3, 12, 5), float64],) */
}

def @func_1666() -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), int32]) {
  %223 = fn () -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), int32]) {
    %210 = @func_410() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
    %211 = @func_884() /* ty=(Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
    %212 = %211.1;
    %213 = cast(%212, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
    %214 = reshape(%213, newshape=[3, 12, 5]) /* ty=Tensor[(3, 12, 5), float32] */;
    %215 = @func_1212(%214) /* ty=(Tensor[(3, 12, 5), float64],) */;
    %216 = cast(meta[relay.Constant][10] /* ty=Tensor[(3, 12, 5), float64] */, dtype="int32") /* ty=Tensor[(3, 12, 5), int32] */;
    %217 = shape_of(%212, dtype="int32") /* ty=Tensor[(3), int32] */;
    %218 = cast(%212, dtype="int32") /* ty=Tensor[(3, 12, 5), int32] */;
    %219 = dyn.reshape(%216, %217, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %220 = %210.0;
    %221 = %215.0;
    %222 = right_shift(%218, %219) /* ty=Tensor[(3, 12, 5), int32] */;
    (%220, %221, %222)
  };
  %223() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), int32]) */
}

def @func_6631(%var_6629: Tensor[(3, 12, 5), float64], %var_6630: Tensor[(720), float32]) -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), uint32], Tensor[(720), float32], Tensor[(3, 12, 5), float32]) {
  @func_6627(%var_6629, %var_6630) /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), uint32], Tensor[(720), float32], Tensor[(3, 12, 5), float32]) */
}

def @func_4656() -> (Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(11, 5, 15), float32]) {
  @func_4654() /* ty=(Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(11, 5, 15), float32]) */
}

def @func_638() -> Tensor[(3, 12, 5), float32] {
  @func_636() /* ty=Tensor[(3, 12, 5), float32] */
}

def @func_8641() -> Tensor[(3, 12, 5), float32] {
  %225 = fn () -> Tensor[(3, 12, 5), float32] {
    %224 = @func_3972() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32], Tensor[(7, 8, 13), bool]) */;
    %224.1
  };
  %225() /* ty=Tensor[(3, 12, 5), float32] */
}

def @func_756() -> (Tensor[(3, 12, 5), float32],) {
  %226 = @func_608() /* ty=(Tensor[(3, 12, 5), float32],) */;
  %227 = %226.0;
  (%227,)
}

def @func_263() -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) {
  %228 = cast(meta[relay.Constant][11] /* ty=Tensor[(3, 12, 5), float32] */, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
  %229 = cast(meta[relay.Constant][11] /* ty=Tensor[(3, 12, 5), float32] */, dtype="float64") /* ty=Tensor[(3, 12, 5), float64] */;
  %230 = log2(%228) /* ty=Tensor[(3, 12, 5), float32] */;
  %231 = cosh(%229) /* ty=Tensor[(3, 12, 5), float64] */;
  (%230, %231)
}

def @func_10183() -> (Tensor[(3, 12, 5), float64],) {
  %232 = @func_4159() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(8, 6, 15), float64]) */;
  %233 = %232.1;
  (%233,)
}

def @func_2319(%var_2317: Tensor[(6, 1, 1), float64]) -> (Tensor[(352), uint16], Tensor[(6, 4, 88), uint64]) {
  @func_2316(%var_2317) /* ty=(Tensor[(352), uint16], Tensor[(6, 4, 88), uint64]) */
}

def @func_2827() -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), int32]) {
  @func_2825() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), int32]) */
}

def @func_8778() -> (Tensor[(3, 12, 5), float32], Tensor[(7, 8, 13), float32]) {
  %234 = @func_7428() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32]) */;
  %235 = @func_3418() /* ty=(Tensor[(7, 8, 13), float32],) */;
  %236 = %234.1;
  %237 = %235.0;
  (%236, %237)
}

def @func_3221() -> (Tensor[(3, 12, 5), float64],) {
  %238 = @func_275() /* ty=Tensor[(3, 12, 5), float64] */;
  (%238,)
}

def @func_4473() -> Tensor[(3, 12, 5), float64] {
  @func_4471() /* ty=Tensor[(3, 12, 5), float64] */
}

def @func_10104(%var_10083: Tensor[(7, 8, 13), float32]) -> (Tensor[(7, 8, 13), uint16], Tensor[(7, 8, 13), float64], Tensor[(3, 12, 5), float64]) {
  %239 = @func_8778() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(7, 8, 13), float32]) */;
  %240 = %239.1;
  %241 = cast(%var_10083, dtype="uint16") /* ty=Tensor[(7, 8, 13), uint16] */;
  %242 = shape_of(%240, dtype="int32") /* ty=Tensor[(3), int32] */;
  %243 = cast(%240, dtype="uint16") /* ty=Tensor[(7, 8, 13), uint16] */;
  %244 = dyn.reshape(%241, %242, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %245 = cast(%var_10083, dtype="float64") /* ty=Tensor[(7, 8, 13), float64] */;
  %246 = @func_5083() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), uint32]) */;
  %247 = bitwise_and(%243, %244) /* ty=Tensor[(7, 8, 13), uint16] */;
  %248 = sinh(%245) /* ty=Tensor[(7, 8, 13), float64] */;
  %249 = %246.0;
  (%247, %248, %249)
}

def @func_3261() -> (Tensor[(3, 12, 5), bool], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32]) {
  %257 = fn () -> (Tensor[(3, 12, 5), bool], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32]) {
    %250 = @func_3013() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), bool], Tensor[(720), float64]) */;
    %251 = %250.1;
    %252 = cast(%251, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
    %253 = reshape(%252, newshape=[3, 12, 5]) /* ty=Tensor[(3, 12, 5), float32] */;
    %254 = @func_1212(%253) /* ty=(Tensor[(3, 12, 5), float64],) */;
    %255 = %254.0;
    %256 = @func_566() /* ty=Tensor[(3, 12, 5), float32] */;
    (%251, %255, %256)
  };
  %257() /* ty=(Tensor[(3, 12, 5), bool], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32]) */
}

def @func_9077() -> (Tensor[(3, 12, 5), float32],) {
  %259 = fn () -> (Tensor[(3, 12, 5), float32],) {
    %258 = @func_6343() /* ty=Tensor[(3, 12, 5), float32] */;
    (%258,)
  };
  %259() /* ty=(Tensor[(3, 12, 5), float32],) */
}

def @func_6306() -> Tensor[(3, 12, 5), float64] {
  @func_6304() /* ty=Tensor[(3, 12, 5), float64] */
}

def @func_566() -> Tensor[(3, 12, 5), float32] {
  %260 = @func_364() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 15, 5), float32], Tensor[(15), float32], Tensor[(225), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
  %260.0
}

def @func_4408() -> Tensor[(3, 12, 5), float32] {
  %262 = fn () -> Tensor[(3, 12, 5), float32] {
    %261 = @func_3165() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
    %261.1
  };
  %262() /* ty=Tensor[(3, 12, 5), float32] */
}

def @func_7429() -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32]) {
  %267 = fn () -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32]) {
    %263 = @func_4244() /* ty=(Tensor[(3, 12, 5), float32],) */;
    %264 = @func_5491() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(11, 6, 9), float64], Tensor[(198, 3), float64], Tensor[(15), float32], Tensor[(15), float32], Tensor[(75, 3), float32], Tensor[(6, 7, 3), float32], Tensor[(126), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32]) */;
    %265 = %263.0;
    %266 = %264.9;
    (%265, %266)
  };
  %267() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32]) */
}

def @func_4273(%var_4271: Tensor[(30, 6), float32]) -> (Tensor[(15), float32], Tensor[(3, 12, 5), float32], Tensor[(30, 6), float32], Tensor[(10, 2, 5), int64], Tensor[(100), float32]) {
  @func_4270(%var_4271) /* ty=(Tensor[(15), float32], Tensor[(3, 12, 5), float32], Tensor[(30, 6), float32], Tensor[(10, 2, 5), int64], Tensor[(100), float32]) */
}

def @func_2715(%var_2714: Tensor[(6), float64]) -> (Tensor[(3, 12, 5), float64], Tensor[(6, 4, 88), uint64], Tensor[(6), float64]) {
  %274 = fn (%var_2705: Tensor[(6), float64]) -> (Tensor[(3, 12, 5), float64], Tensor[(6, 4, 88), uint64], Tensor[(6), float64]) {
    %268 = @func_1971() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
    %269 = cast(%var_2705, dtype="float64") /* ty=Tensor[(6), float64] */;
    %270 = reshape(%269, newshape=[6, 1, 1]) /* ty=Tensor[(6, 1, 1), float64] */;
    %271 = @func_2316(%270) /* ty=(Tensor[(352), uint16], Tensor[(6, 4, 88), uint64]) */;
    %272 = %268.1;
    %273 = %271.1;
    (%272, %273, %var_2705)
  };
  %274(%var_2714) /* ty=(Tensor[(3, 12, 5), float64], Tensor[(6, 4, 88), uint64], Tensor[(6), float64]) */
}

def @func_608() -> (Tensor[(3, 12, 5), float32],) {
  %275 = @func_364() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 15, 5), float32], Tensor[(15), float32], Tensor[(225), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
  %276 = %275.4;
  (%276,)
}

def @func_6946() -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) {
  %277 = @func_6895() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
  %278 = @func_5516() /* ty=Tensor[(3, 12, 5), float64] */;
  %279 = %277.1;
  (%278, %279)
}

def @func_2891() -> (Tensor[(3, 12, 5), float64], Tensor[(720), float32]) {
  @func_2889() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(720), float32]) */
}

def @func_6127() -> (Tensor[(3, 12, 5), float32],) {
  %280 = @func_5578() /* ty=Tensor[(3, 12, 5), float32] */;
  (%280,)
}

def @func_9452(%var_9450: Tensor[(5, 14, 10), float64]) -> Tensor[(5, 14, 10), float64] {
  @func_9449(%var_9450) /* ty=Tensor[(5, 14, 10), float64] */
}

def @func_9816() -> Tensor[(16, 9, 3), float32] {
  @func_9212() /* ty=Tensor[(16, 9, 3), float32] */
}

def @func_7930() -> Tensor[(720), float32] {
  @func_7928() /* ty=Tensor[(720), float32] */
}

def @func_8240() -> Tensor[(3, 12, 5), int32] {
  %281 = @func_884() /* ty=(Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %281.0
}

def @func_5516() -> Tensor[(3, 12, 5), float64] {
  %282 = @func_4820() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %282.1
}

def @func_6270() -> (Tensor[(3, 12, 5), uint32],) {
  %283 = @func_3467() /* ty=Tensor[(3, 12, 5), uint32] */;
  (%283,)
}

def @func_3828(%var_3827: Tensor[(8, 8, 6), float64]) -> (Tensor[(8, 8, 6), float64], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32]) {
  %295 = fn (%var_3792: Tensor[(8, 8, 6), float64]) -> (Tensor[(8, 8, 6), float64], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32]) {
    %284 = cast(meta[relay.Constant][12] /* ty=Tensor[(8, 8, 6), float64] */, dtype="float64") /* ty=Tensor[(8, 8, 6), float64] */;
    %285 = shape_of(%var_3792, dtype="int32") /* ty=Tensor[(3), int32] */;
    %286 = cast(%var_3792, dtype="float64") /* ty=Tensor[(8, 8, 6), float64] */;
    %287 = dyn.reshape(%284, %285, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %288 = @func_756() /* ty=(Tensor[(3, 12, 5), float32],) */;
    %289 = @func_2825() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), int32]) */;
    %290 = @func_1572() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
    %291 = mod(%286, %287) /* ty=Tensor[(8, 8, 6), float64] */;
    %292 = %288.0;
    %293 = %289.0;
    %294 = %290.1;
    (%291, %292, %293, %294)
  };
  %295(%var_3827) /* ty=(Tensor[(8, 8, 6), float64], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32]) */
}

def @func_10116() -> Tensor[(7, 8, 13), float32] {
  @func_10114() /* ty=Tensor[(7, 8, 13), float32] */
}

def @func_8987() -> (Tensor[(3, 12, 5), uint32],) {
  %296 = @func_6770() /* ty=(Tensor[(3, 12, 5), uint32],) */;
  %297 = %296.0;
  (%297,)
}

def @func_5790(%var_5788: Tensor[(14, 3, 12), float32]) -> (Tensor[(14, 3, 12), float64], Tensor[(14, 3, 12), float32]) {
  @func_5787(%var_5788) /* ty=(Tensor[(14, 3, 12), float64], Tensor[(14, 3, 12), float32]) */
}

def @func_9964(%var_9962: Tensor[(7, 8, 13), float32], %var_9963: Tensor[(7, 8, 13), float32]) -> (Tensor[(7, 8, 13), bool], Tensor[(7, 8, 13), int64]) {
  @func_9960(%var_9962, %var_9963) /* ty=(Tensor[(7, 8, 13), bool], Tensor[(7, 8, 13), int64]) */
}

def @func_10656() -> (Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float64]) {
  %301 = fn () -> (Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float64]) {
    %298 = @func_6270() /* ty=(Tensor[(3, 12, 5), uint32],) */;
    %299 = %298.0;
    %300 = @func_3665() /* ty=Tensor[(3, 12, 5), float64] */;
    (%299, %300)
  };
  %301() /* ty=(Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float64]) */
}

def @func_3079() -> Tensor[(3, 12, 5), float32] {
  %303 = fn () -> Tensor[(3, 12, 5), float32] {
    %302 = @func_1541() /* ty=(Tensor[(3, 12, 5), float32],) */;
    %302.0
  };
  %303() /* ty=Tensor[(3, 12, 5), float32] */
}

def @func_1524() -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) {
  @func_1522() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */
}

def @func_3973() -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32], Tensor[(7, 8, 13), bool]) {
  %322 = fn () -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32], Tensor[(7, 8, 13), bool]) {
    %304 = @func_1665() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), int32]) */;
    %305 = @func_608() /* ty=(Tensor[(3, 12, 5), float32],) */;
    %306 = @func_3418() /* ty=(Tensor[(7, 8, 13), float32],) */;
    %307 = %306.0;
    %308 = cast(%307, dtype="float64") /* ty=Tensor[(7, 8, 13), float64] */;
    %309 = log2(%308) /* ty=Tensor[(7, 8, 13), float64] */;
    %310 = cast(%307, dtype="bool") /* ty=Tensor[(7, 8, 13), bool] */;
    %311 = shape_of(%309, dtype="int32") /* ty=Tensor[(3), int32] */;
    %312 = cast(%309, dtype="bool") /* ty=Tensor[(7, 8, 13), bool] */;
    %313 = dyn.reshape(%310, %311, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %314 = less_equal(%312, %313) /* ty=Tensor[(7, 8, 13), bool] */;
    %315 = cast(%314, dtype="bool") /* ty=Tensor[(7, 8, 13), bool] */;
    %316 = shape_of(%309, dtype="int32") /* ty=Tensor[(3), int32] */;
    %317 = cast(%309, dtype="bool") /* ty=Tensor[(7, 8, 13), bool] */;
    %318 = dyn.reshape(%315, %316, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %319 = %304.0;
    %320 = %305.0;
    %321 = less(%317, %318) /* ty=Tensor[(7, 8, 13), bool] */;
    (%319, %320, %321)
  };
  %322() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32], Tensor[(7, 8, 13), bool]) */
}

def @func_7466() -> Tensor[(3, 12, 5), float64] {
  @func_7464() /* ty=Tensor[(3, 12, 5), float64] */
}

def @func_4024(%var_4022: Tensor[(180), float32]) -> (Tensor[(720), float32], Tensor[(720), float32], Tensor[(180), float32], Tensor[(3, 12, 5), float32]) {
  @func_4021(%var_4022) /* ty=(Tensor[(720), float32], Tensor[(720), float32], Tensor[(180), float32], Tensor[(3, 12, 5), float32]) */
}

def @func_4975() -> (Tensor[(720), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32]) {
  %332 = fn () -> (Tensor[(720), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32]) {
    %323 = @func_4327() /* ty=(Tensor[(720), float32], Tensor[(3, 12, 5), float64], Tensor[(7, 8, 13), float32]) */;
    %324 = @func_3972() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32], Tensor[(7, 8, 13), bool]) */;
    %325 = %324.1;
    %326 = cast(%325, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
    %327 = reshape(%326, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %328 = @func_4021(%327) /* ty=(Tensor[(720), float32], Tensor[(720), float32], Tensor[(180), float32], Tensor[(3, 12, 5), float32]) */;
    %329 = %323.0;
    %330 = @func_622() /* ty=Tensor[(3, 12, 5), float32] */;
    %331 = %328.3;
    (%329, %325, %330, %331)
  };
  %332() /* ty=(Tensor[(720), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32]) */
}

def @func_7085(%var_7081: Tensor[(14, 2, 6), uint8], %var_7082: Tensor[(14, 2, 6), uint8], %var_7083: Tensor[(180), float32], %var_7084: Tensor[(1092), float64]) -> (Tensor[(14, 2, 6), bool], Tensor[(720), float32], Tensor[(180), float32], Tensor[(3, 12, 5), float32], Tensor[(14, 2, 6), float32], Tensor[(12, 7, 13), bool], Tensor[(1092), float64]) {
  %356 = fn (%var_7020: Tensor[(14, 2, 6), uint8], %var_7021: Tensor[(14, 2, 6), uint8], %var_7053: Tensor[(180), float32], %var_7077: Tensor[(1092), float64]) -> (Tensor[(14, 2, 6), bool], Tensor[(720), float32], Tensor[(180), float32], Tensor[(3, 12, 5), float32], Tensor[(14, 2, 6), float32], Tensor[(12, 7, 13), bool], Tensor[(1092), float64]) {
    %333 = cast(%var_7021, dtype="bool") /* ty=Tensor[(14, 2, 6), bool] */;
    %334 = shape_of(%var_7020, dtype="int32") /* ty=Tensor[(3), int32] */;
    %335 = cast(%var_7020, dtype="bool") /* ty=Tensor[(14, 2, 6), bool] */;
    %336 = dyn.reshape(%333, %334, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %337 = cast(%var_7053, dtype="float32") /* ty=Tensor[(180), float32] */;
    %338 = reshape(%337, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %339 = @func_4021(%338) /* ty=(Tensor[(720), float32], Tensor[(720), float32], Tensor[(180), float32], Tensor[(3, 12, 5), float32]) */;
    %340 = cast(%var_7021, dtype="float64") /* ty=Tensor[(14, 2, 6), float64] */;
    %341 = atan(%340) /* ty=Tensor[(14, 2, 6), float64] */;
    %342 = cast(%var_7020, dtype="float32") /* ty=Tensor[(14, 2, 6), float32] */;
    %343 = shape_of(%341, dtype="int32") /* ty=Tensor[(3), int32] */;
    %344 = cast(%341, dtype="float32") /* ty=Tensor[(14, 2, 6), float32] */;
    %345 = dyn.reshape(%342, %343, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %346 = cast(%var_7077, dtype="float64") /* ty=Tensor[(1092), float64] */;
    %347 = cast(%var_7077, dtype="float64") /* ty=Tensor[(1092), float64] */;
    %348 = reshape(%346, newshape=[12, 7, 13]) /* ty=Tensor[(12, 7, 13), float64] */;
    %349 = reshape(%347, newshape=[12, 7, 13]) /* ty=Tensor[(12, 7, 13), float64] */;
    %350 = @func_3400(%348, %349) /* ty=(Tensor[(12, 7, 13), bool],) */;
    %351 = less(%335, %336) /* ty=Tensor[(14, 2, 6), bool] */;
    %352 = %339.1;
    %353 = @func_566() /* ty=Tensor[(3, 12, 5), float32] */;
    %354 = floor_mod(%344, %345) /* ty=Tensor[(14, 2, 6), float32] */;
    %355 = %350.0;
    (%351, %352, %var_7053, %353, %354, %355, %var_7077)
  };
  %356(%var_7081, %var_7082, %var_7083, %var_7084) /* ty=(Tensor[(14, 2, 6), bool], Tensor[(720), float32], Tensor[(180), float32], Tensor[(3, 12, 5), float32], Tensor[(14, 2, 6), float32], Tensor[(12, 7, 13), bool], Tensor[(1092), float64]) */
}

def @func_10519() -> (Tensor[(720), float32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32]) {
  %362 = fn () -> (Tensor[(720), float32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32]) {
    %357 = @func_2889() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(720), float32]) */;
    %358 = @func_5196() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), uint32], Tensor[(720), float32]) */;
    %359 = %357.1;
    %360 = @func_9698() /* ty=Tensor[(3, 12, 5), float64] */;
    %361 = %358.0;
    (%359, %360, %361)
  };
  %362() /* ty=(Tensor[(720), float32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32]) */
}

def @func_4654() -> (Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(11, 5, 15), float32]) {
  %363 = @func_410() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %364 = @func_3467() /* ty=Tensor[(3, 12, 5), uint32] */;
  %365 = cast(%364, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
  %366 = reshape(%365, newshape=[3, 12, 5]) /* ty=Tensor[(3, 12, 5), float32] */;
  %367 = @func_2144(%366) /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(720), float32], Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float64]) */;
  %368 = cast(meta[relay.Constant][13] /* ty=Tensor[(11, 1, 15), float32] */, dtype="float32") /* ty=Tensor[(11, 1, 15), float32] */;
  %369 = cast(meta[relay.Constant][14] /* ty=Tensor[(11, 5, 15), float32] */, dtype="float32") /* ty=Tensor[(11, 5, 15), float32] */;
  %370 = add(%368, %369) /* ty=Tensor[(11, 5, 15), float32] */;
  %371 = cast(meta[relay.Constant][15] /* ty=Tensor[(11, 5, 15), float32] */, dtype="float32") /* ty=Tensor[(11, 5, 15), float32] */;
  %372 = shape_of(%370, dtype="int32") /* ty=Tensor[(3), int32] */;
  %373 = cast(%370, dtype="float32") /* ty=Tensor[(11, 5, 15), float32] */;
  %374 = dyn.reshape(%371, %372, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %375 = %363.1;
  %376 = %367.4;
  %377 = mod(%373, %374) /* ty=Tensor[(11, 5, 15), float32] */;
  (%364, %375, %376, %377)
}

def @func_9214() -> Tensor[(16, 9, 3), float32] {
  @func_9212() /* ty=Tensor[(16, 9, 3), float32] */
}

def @func_9062(%var_9061: Tensor[(8, 11, 8), uint16]) -> Tensor[(8, 11, 8), uint16] {
  %382 = fn (%var_9034: Tensor[(8, 11, 8), uint16]) -> Tensor[(8, 11, 8), uint16] {
    %378 = cast(meta[relay.Constant][16] /* ty=Tensor[(8, 11, 8), uint16] */, dtype="uint16") /* ty=Tensor[(8, 11, 8), uint16] */;
    %379 = shape_of(%var_9034, dtype="int32") /* ty=Tensor[(3), int32] */;
    %380 = cast(%var_9034, dtype="uint16") /* ty=Tensor[(8, 11, 8), uint16] */;
    %381 = dyn.reshape(%378, %379, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    bitwise_xor(%380, %381) /* ty=Tensor[(8, 11, 8), uint16] */
  };
  %382(%var_9061) /* ty=Tensor[(8, 11, 8), uint16] */
}

def @func_5547() -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) {
  %387 = fn () -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) {
    %383 = @func_263() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
    %384 = @func_2825() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), int32]) */;
    %385 = %383.0;
    %386 = %384.0;
    (%385, %386)
  };
  %387() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */
}

def @func_3340(%var_3337: Tensor[(2, 4, 11), float32], %var_3338: Tensor[(30, 6), float32], %var_3339: Tensor[(2, 4, 11), float32]) -> (Tensor[(3, 12, 5), float64], Tensor[(30, 6), float32], Tensor[(2, 4, 11), int8], Tensor[(2, 4, 11), float64], Tensor[(3, 12, 5), int32]) {
  %405 = fn (%var_3298: Tensor[(2, 4, 11), float32], %var_3307: Tensor[(30, 6), float32], %var_3317: Tensor[(2, 4, 11), float32]) -> (Tensor[(3, 12, 5), float64], Tensor[(30, 6), float32], Tensor[(2, 4, 11), int8], Tensor[(2, 4, 11), float64], Tensor[(3, 12, 5), int32]) {
    %388 = cast(%var_3307, dtype="float32") /* ty=Tensor[(30, 6), float32] */;
    %389 = reshape(%388, newshape=[3, 12, 5]) /* ty=Tensor[(3, 12, 5), float32] */;
    %390 = @func_2144(%389) /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(720), float32], Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float64]) */;
    %391 = cast(%var_3298, dtype="float32") /* ty=Tensor[(2, 4, 11), float32] */;
    %392 = sqrt(%391) /* ty=Tensor[(2, 4, 11), float32] */;
    %393 = cast(%392, dtype="float32") /* ty=Tensor[(2, 4, 11), float32] */;
    %394 = rsqrt(%393) /* ty=Tensor[(2, 4, 11), float32] */;
    %395 = cast(%var_3317, dtype="int8") /* ty=Tensor[(2, 4, 11), int8] */;
    %396 = shape_of(%394, dtype="int32") /* ty=Tensor[(3), int32] */;
    %397 = cast(%394, dtype="int8") /* ty=Tensor[(2, 4, 11), int8] */;
    %398 = dyn.reshape(%395, %396, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %399 = cast(%392, dtype="float64") /* ty=Tensor[(2, 4, 11), float64] */;
    %400 = @func_2493() /* ty=(Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), int32]) */;
    %401 = %390.0;
    %402 = maximum(%397, %398) /* ty=Tensor[(2, 4, 11), int8] */;
    %403 = cosh(%399) /* ty=Tensor[(2, 4, 11), float64] */;
    %404 = %400.1;
    (%401, %var_3307, %402, %403, %404)
  };
  %405(%var_3337, %var_3338, %var_3339) /* ty=(Tensor[(3, 12, 5), float64], Tensor[(30, 6), float32], Tensor[(2, 4, 11), int8], Tensor[(2, 4, 11), float64], Tensor[(3, 12, 5), int32]) */
}

def @func_411() -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) {
  %412 = fn () -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) {
    %406 = @func_364() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 15, 5), float32], Tensor[(15), float32], Tensor[(225), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
    %407 = %406.5;
    %408 = cast(%407, dtype="float64") /* ty=Tensor[(3, 12, 5), float64] */;
    %409 = @func_263() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
    %410 = log10(%408) /* ty=Tensor[(3, 12, 5), float64] */;
    %411 = %409.1;
    (%410, %411)
  };
  %412() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */
}

def @func_8131() -> (Tensor[(3, 12, 5), float64],) {
  %414 = fn () -> (Tensor[(3, 12, 5), float64],) {
    %413 = @func_4471() /* ty=Tensor[(3, 12, 5), float64] */;
    (%413,)
  };
  %414() /* ty=(Tensor[(3, 12, 5), float64],) */
}

def @func_5370() -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32]) {
  @func_5368() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32]) */
}

def @func_7405() -> Tensor[(3, 12, 5), float32] {
  @func_7403() /* ty=Tensor[(3, 12, 5), float32] */
}

def @func_1900() -> Tensor[(3, 12, 5), uint32] {
  @func_1898() /* ty=Tensor[(3, 12, 5), uint32] */
}

def @func_6800() -> Tensor[(3, 12, 5), float32] {
  %415 = @func_608() /* ty=(Tensor[(3, 12, 5), float32],) */;
  %415.0
}

def @func_4471() -> Tensor[(3, 12, 5), float64] {
  %416 = @func_1971() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %416.1
}

def @func_5144() -> (Tensor[(3, 12, 5), float64],) {
  %417 = @func_4327() /* ty=(Tensor[(720), float32], Tensor[(3, 12, 5), float64], Tensor[(7, 8, 13), float32]) */;
  %418 = %417.1;
  (%418,)
}

def @func_265() -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) {
  @func_263() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */
}

def @func_3885(%var_3883: Tensor[(6, 7, 3), float32]) -> (Tensor[(3, 12, 5), float64], Tensor[(6, 7, 3), float32]) {
  @func_3882(%var_3883) /* ty=(Tensor[(3, 12, 5), float64], Tensor[(6, 7, 3), float32]) */
}

def @func_8542() -> (Tensor[(3, 12, 5), float64],) {
  @func_8540() /* ty=(Tensor[(3, 12, 5), float64],) */
}

def @func_3182(%var_3180: uint8, %var_3181: Tensor[(2, 12, 16), uint8]) -> Tensor[(2, 12, 16), uint8] {
  %421 = fn (%var_3168: uint8, %var_3169: Tensor[(2, 12, 16), uint8]) -> Tensor[(2, 12, 16), uint8] {
    %419 = cast(%var_3168, dtype="uint8") /* ty=uint8 */;
    %420 = cast(%var_3169, dtype="uint8") /* ty=Tensor[(2, 12, 16), uint8] */;
    minimum(%419, %420) /* ty=Tensor[(2, 12, 16), uint8] */
  };
  %421(%var_3180, %var_3181) /* ty=Tensor[(2, 12, 16), uint8] */
}

def @func_5655() -> (Tensor[(720), float32], Tensor[(3, 12, 5), float32], Tensor[(56, 2), float64]) {
  %429 = fn () -> (Tensor[(720), float32], Tensor[(3, 12, 5), float32], Tensor[(56, 2), float64]) {
    %422 = cast(meta[relay.Constant][17] /* ty=Tensor[(56, 2), float64] */, dtype="float64") /* ty=Tensor[(56, 2), float64] */;
    %423 = reshape(%422, newshape=[8, 2, 7]) /* ty=Tensor[(8, 2, 7), float64] */;
    %424 = @func_946(%423) /* ty=(Tensor[(8, 2, 7), float64], Tensor[(3, 12, 5), float32], Tensor[(720), float32], Tensor[(6, 30), float64]) */;
    %425 = cast(meta[relay.Constant][17] /* ty=Tensor[(56, 2), float64] */, dtype="float64") /* ty=Tensor[(56, 2), float64] */;
    %426 = @func_3851() /* ty=Tensor[(720), float32] */;
    %427 = %424.1;
    %428 = exp(%425) /* ty=Tensor[(56, 2), float64] */;
    (%426, %427, %428)
  };
  %429() /* ty=(Tensor[(720), float32], Tensor[(3, 12, 5), float32], Tensor[(56, 2), float64]) */
}

def @func_6418() -> Tensor[(8, 6, 15), float64] {
  %431 = fn () -> Tensor[(8, 6, 15), float64] {
    %430 = @func_4159() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(8, 6, 15), float64]) */;
    %430.2
  };
  %431() /* ty=Tensor[(8, 6, 15), float64] */
}

def @func_4171(%var_4168: Tensor[(720), float64]) -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), float32], Tensor[(720), float64]) {
  %432 = @func_2235() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
  %433 = cast(%var_4168, dtype="float64") /* ty=Tensor[(720), float64] */;
  %434 = cast(%var_4168, dtype="float64") /* ty=Tensor[(720), float64] */;
  %435 = reshape(%433, newshape=[8, 6, 15]) /* ty=Tensor[(8, 6, 15), float64] */;
  %436 = reshape(%434, newshape=[8, 6, 15]) /* ty=Tensor[(8, 6, 15), float64] */;
  %437 = @func_1000(%435, %436) /* ty=(Tensor[(8, 6, 15), int8], Tensor[(3, 12, 5), float32], Tensor[(8, 6, 15), bool], Tensor[(8, 6, 15), uint16]) */;
  %438 = %432.0;
  %439 = @func_1987() /* ty=Tensor[(3, 12, 5), int32] */;
  %440 = %437.1;
  (%438, %439, %440, %var_4168)
}

def @func_5274() -> (Tensor[(3, 12, 5), float32], Tensor[(10, 2, 5), float32]) {
  @func_5272() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(10, 2, 5), float32]) */
}

def @func_2236() -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) {
  %447 = fn () -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) {
    %441 = @func_1541() /* ty=(Tensor[(3, 12, 5), float32],) */;
    %442 = %441.0;
    %443 = cast(%442, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
    %444 = reshape(%443, newshape=[3, 12, 5]) /* ty=Tensor[(3, 12, 5), float32] */;
    %445 = @func_2144(%444) /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(720), float32], Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float64]) */;
    %446 = %445.1;
    (%442, %446)
  };
  %447() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */
}

def @func_3029() -> Tensor[(3, 12, 5), float64] {
  %449 = fn () -> Tensor[(3, 12, 5), float64] {
    %448 = @func_1665() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), int32]) */;
    %448.1
  };
  %449() /* ty=Tensor[(3, 12, 5), float64] */
}

def @func_2371(%var_2333: Tensor[(3, 12, 5), float64], %var_2361: Tensor[(720), float64]) -> (Tensor[(3, 12, 5), bool], Tensor[(8, 6, 15), int8], Tensor[(720), float64]) {
  %450 = @func_884() /* ty=(Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %451 = %450.1;
  %452 = cast(%var_2333, dtype="int64") /* ty=Tensor[(3, 12, 5), int64] */;
  %453 = shape_of(%451, dtype="int32") /* ty=Tensor[(3), int32] */;
  %454 = cast(%451, dtype="int64") /* ty=Tensor[(3, 12, 5), int64] */;
  %455 = dyn.reshape(%452, %453, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %456 = add(%454, %455) /* ty=Tensor[(3, 12, 5), int64] */;
  %457 = cast(%456, dtype="bool") /* ty=Tensor[(3, 12, 5), bool] */;
  %458 = shape_of(%var_2333, dtype="int32") /* ty=Tensor[(3), int32] */;
  %459 = cast(%var_2333, dtype="bool") /* ty=Tensor[(3, 12, 5), bool] */;
  %460 = dyn.reshape(%457, %458, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %461 = cast(%var_2361, dtype="float64") /* ty=Tensor[(720), float64] */;
  %462 = cast(%var_2361, dtype="float64") /* ty=Tensor[(720), float64] */;
  %463 = reshape(%461, newshape=[8, 6, 15]) /* ty=Tensor[(8, 6, 15), float64] */;
  %464 = reshape(%462, newshape=[8, 6, 15]) /* ty=Tensor[(8, 6, 15), float64] */;
  %465 = @func_1000(%463, %464) /* ty=(Tensor[(8, 6, 15), int8], Tensor[(3, 12, 5), float32], Tensor[(8, 6, 15), bool], Tensor[(8, 6, 15), uint16]) */;
  %466 = less_equal(%459, %460) /* ty=Tensor[(3, 12, 5), bool] */;
  %467 = %465.0;
  (%466, %467, %var_2361)
}

def @func_6680() -> (Tensor[(3, 12, 5), float64], Tensor[(7, 8, 13), float64]) {
  %474 = fn () -> (Tensor[(3, 12, 5), float64], Tensor[(7, 8, 13), float64]) {
    %468 = @func_6027() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(192, 2), float64]) */;
    %469 = @func_4327() /* ty=(Tensor[(720), float32], Tensor[(3, 12, 5), float64], Tensor[(7, 8, 13), float32]) */;
    %470 = %469.2;
    %471 = cast(%470, dtype="float64") /* ty=Tensor[(7, 8, 13), float64] */;
    %472 = %468.1;
    %473 = sigmoid(%471) /* ty=Tensor[(7, 8, 13), float64] */;
    (%472, %473)
  };
  %474() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(7, 8, 13), float64]) */
}

def @func_8723(%var_8721: Tensor[(1, 88), float32]) -> (Tensor[(3, 12, 5), float32], Tensor[(?, 88), int8], Tensor[(1, 3, 4), float32], Tensor[(12), float32], Tensor[(168), float32], Tensor[(2, 4, 11), uint64]) {
  @func_8720(%var_8721) /* ty=(Tensor[(3, 12, 5), float32], Tensor[(?, 88), int8], Tensor[(1, 3, 4), float32], Tensor[(12), float32], Tensor[(168), float32], Tensor[(2, 4, 11), uint64]) */
}

def @func_2677(%var_2651: Tensor[(15), float32], %var_2652: Tensor[(225), float32]) -> (Tensor[(3, 12, 5), float32], Tensor[(3, 15, 5), float32], Tensor[(15), float32], Tensor[(225), float32], Tensor[(720), float32], Tensor[(3, 12, 5), float32]) {
  %475 = cast(%var_2651, dtype="float32") /* ty=Tensor[(15), float32] */;
  %476 = cast(%var_2652, dtype="float32") /* ty=Tensor[(225), float32] */;
  %477 = reshape(%475, newshape=[3, 1, 5]) /* ty=Tensor[(3, 1, 5), float32] */;
  %478 = reshape(%476, newshape=[3, 15, 5]) /* ty=Tensor[(3, 15, 5), float32] */;
  %479 = @func_808() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), uint32], Tensor[(720), float32]) */;
  %480 = @func_1464() /* ty=Tensor[(3, 12, 5), float32] */;
  %481 = @func_208(%477, %478) /* ty=Tensor[(3, 15, 5), float32] */;
  %482 = %479.2;
  %483 = @func_566() /* ty=Tensor[(3, 12, 5), float32] */;
  (%480, %481, %var_2651, %var_2652, %482, %483)
}

def @func_6770() -> (Tensor[(3, 12, 5), uint32],) {
  %484 = @func_6270() /* ty=(Tensor[(3, 12, 5), uint32],) */;
  %485 = %484.0;
  (%485,)
}

def @func_8914() -> (Tensor[(3, 12, 5), float64],) {
  %487 = fn () -> (Tensor[(3, 12, 5), float64],) {
    %486 = @func_5516() /* ty=Tensor[(3, 12, 5), float64] */;
    (%486,)
  };
  %487() /* ty=(Tensor[(3, 12, 5), float64],) */
}

def @func_365() -> (Tensor[(3, 12, 5), float32], Tensor[(3, 15, 5), float32], Tensor[(15), float32], Tensor[(225), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) {
  %501 = fn () -> (Tensor[(3, 12, 5), float32], Tensor[(3, 15, 5), float32], Tensor[(15), float32], Tensor[(225), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) {
    %488 = @func_263() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
    %489 = %488.0;
    %490 = cast(%489, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
    %491 = cast(meta[relay.Constant][18] /* ty=Tensor[(15), float32] */, dtype="float32") /* ty=Tensor[(15), float32] */;
    %492 = cast(meta[relay.Constant][19] /* ty=Tensor[(225), float32] */, dtype="float32") /* ty=Tensor[(225), float32] */;
    %493 = reshape(%491, newshape=[3, 1, 5]) /* ty=Tensor[(3, 1, 5), float32] */;
    %494 = reshape(%492, newshape=[3, 15, 5]) /* ty=Tensor[(3, 15, 5), float32] */;
    %495 = cast(%489, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
    %496 = @func_263() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
    %497 = sigmoid(%490) /* ty=Tensor[(3, 12, 5), float32] */;
    %498 = @func_208(%493, %494) /* ty=Tensor[(3, 15, 5), float32] */;
    %499 = tan(%495) /* ty=Tensor[(3, 12, 5), float32] */;
    %500 = %496.1;
    (%497, %498, meta[relay.Constant][18] /* ty=Tensor[(15), float32] */, meta[relay.Constant][19] /* ty=Tensor[(225), float32] */, %499, %500)
  };
  %501() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 15, 5), float32], Tensor[(15), float32], Tensor[(225), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */
}

def @func_5037() -> (Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) {
  %502 = @func_884() /* ty=(Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %503 = %502.0;
  %504 = cast(%503, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
  %505 = reshape(%504, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %506 = @func_4021(%505) /* ty=(Tensor[(720), float32], Tensor[(720), float32], Tensor[(180), float32], Tensor[(3, 12, 5), float32]) */;
  %507 = @func_3221() /* ty=(Tensor[(3, 12, 5), float64],) */;
  %508 = @func_263() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
  %509 = %506.3;
  %510 = %507.0;
  %511 = %508.1;
  %512 = @func_3028() /* ty=Tensor[(3, 12, 5), float64] */;
  (%503, %509, %510, %511, %512)
}

def @func_4174(%var_4172: Tensor[(720), float64]) -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), float32], Tensor[(720), float64]) {
  @func_4171(%var_4172) /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), float32], Tensor[(720), float64]) */
}

def @func_3667() -> Tensor[(3, 12, 5), float64] {
  @func_3665() /* ty=Tensor[(3, 12, 5), float64] */
}

def @func_4849() -> Tensor[(3, 12, 5), float32] {
  %514 = fn () -> Tensor[(3, 12, 5), float32] {
    %513 = @func_3260() /* ty=(Tensor[(3, 12, 5), bool], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32]) */;
    %513.2
  };
  %514() /* ty=Tensor[(3, 12, 5), float32] */
}

def @func_6304() -> Tensor[(3, 12, 5), float64] {
  %515 = @func_3972() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32], Tensor[(7, 8, 13), bool]) */;
  %515.0
}

def @func_9347() -> (Tensor[(3, 12, 5), float32],) {
  %516 = @func_4974() /* ty=(Tensor[(720), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32]) */;
  %517 = %516.1;
  (%517,)
}

def @func_4749() -> (Tensor[(3, 12, 5), float32],) {
  %518 = @func_2927() /* ty=(Tensor[(3, 12, 5), float32],) */;
  %519 = %518.0;
  (%519,)
}

def @func_1455() -> (Tensor[(720), float32],) {
  %522 = fn () -> (Tensor[(720), float32],) {
    %520 = @func_808() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), uint32], Tensor[(720), float32]) */;
    %521 = %520.2;
    (%521,)
  };
  %522() /* ty=(Tensor[(720), float32],) */
}

def @func_5118() -> Tensor[(3, 12, 5), uint32] {
  @func_5116() /* ty=Tensor[(3, 12, 5), uint32] */
}

def @func_7599() -> Tensor[(3, 12, 5), int32] {
  @func_7597() /* ty=Tensor[(3, 12, 5), int32] */
}

def @func_7126(%var_7124: Tensor[(1, 16, 13), float32]) -> Tensor[(1, 16, 13), float32] {
  @func_7123(%var_7124) /* ty=Tensor[(1, 16, 13), float32] */
}

def @func_1320(%var_1267: Tensor[(8, 11, 4), uint16], %var_1268: Tensor[(8, 11, 4), uint16]) -> (Tensor[(8, 11, 4), bool], Tensor[(8, 11, 4), float32], Tensor[(3, 12, 5), float64]) {
  %523 = cast(%var_1268, dtype="bool") /* ty=Tensor[(8, 11, 4), bool] */;
  %524 = shape_of(%var_1267, dtype="int32") /* ty=Tensor[(3), int32] */;
  %525 = cast(%var_1267, dtype="bool") /* ty=Tensor[(8, 11, 4), bool] */;
  %526 = dyn.reshape(%523, %524, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %527 = cast(%var_1267, dtype="float32") /* ty=Tensor[(8, 11, 4), float32] */;
  %528 = @func_410() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %529 = greater_equal(%525, %526) /* ty=Tensor[(8, 11, 4), bool] */;
  %530 = acosh(%527) /* ty=Tensor[(8, 11, 4), float32] */;
  %531 = %528.1;
  (%529, %530, %531)
}

def @func_8833(%var_8832: Tensor[(5, 11, 5), float32]) -> (Tensor[(5, 11, 5), uint32],) {
  %539 = fn (%var_8816: Tensor[(5, 11, 5), float32]) -> (Tensor[(5, 11, 5), uint32],) {
    %532 = cast(%var_8816, dtype="float32") /* ty=Tensor[(5, 11, 5), float32] */;
    %533 = atan(%532) /* ty=Tensor[(5, 11, 5), float32] */;
    %534 = cast(%var_8816, dtype="uint32") /* ty=Tensor[(5, 11, 5), uint32] */;
    %535 = shape_of(%533, dtype="int32") /* ty=Tensor[(3), int32] */;
    %536 = cast(%533, dtype="uint32") /* ty=Tensor[(5, 11, 5), uint32] */;
    %537 = dyn.reshape(%534, %535, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %538 = logical_xor(%536, %537) /* ty=Tensor[(5, 11, 5), uint32] */;
    (%538,)
  };
  %539(%var_8832) /* ty=(Tensor[(5, 11, 5), uint32],) */
}

def @func_8459() -> Tensor[(3, 12, 5), float32] {
  %540 = @func_7717() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(720), float64], Tensor[(3, 12, 5), float32]) */;
  %540.2
}

def @func_885() -> (Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) {
  %552 = fn () -> (Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) {
    %541 = @func_636() /* ty=Tensor[(3, 12, 5), float32] */;
    %542 = @func_808() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), uint32], Tensor[(720), float32]) */;
    %543 = %542.1;
    %544 = cast(%543, dtype="int32") /* ty=Tensor[(3, 12, 5), int32] */;
    %545 = shape_of(%541, dtype="int32") /* ty=Tensor[(3), int32] */;
    %546 = cast(%541, dtype="int32") /* ty=Tensor[(3, 12, 5), int32] */;
    %547 = dyn.reshape(%544, %545, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %548 = @func_410() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
    %549 = left_shift(%546, %547) /* ty=Tensor[(3, 12, 5), int32] */;
    %550 = @func_275() /* ty=Tensor[(3, 12, 5), float64] */;
    %551 = %548.1;
    (%549, %550, %551)
  };
  %552() /* ty=(Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */
}

def @func_3167() -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) {
  @func_3165() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */
}

def @func_7636() -> (Tensor[(8, 6, 15), float64],) {
  %554 = fn () -> (Tensor[(8, 6, 15), float64],) {
    %553 = @func_6417() /* ty=Tensor[(8, 6, 15), float64] */;
    (%553,)
  };
  %554() /* ty=(Tensor[(8, 6, 15), float64],) */
}

def @func_4329() -> (Tensor[(720), float32], Tensor[(3, 12, 5), float64], Tensor[(7, 8, 13), float32]) {
  @func_4327() /* ty=(Tensor[(720), float32], Tensor[(3, 12, 5), float64], Tensor[(7, 8, 13), float32]) */
}

def @func_4822() -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) {
  @func_4820() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */
}

def @func_810() -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), uint32], Tensor[(720), float32]) {
  @func_808() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), uint32], Tensor[(720), float32]) */
}

def @func_1851(%var_1850: Tensor[(4, 88), uint16]) -> (Tensor[(3, 12, 5), bool], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(4, 88), uint16], Tensor[(3, 12, 5), uint16]) {
  %580 = fn (%var_1836: Tensor[(4, 88), uint16]) -> (Tensor[(3, 12, 5), bool], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(4, 88), uint16], Tensor[(3, 12, 5), uint16]) {
    %555 = @func_263() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
    %556 = %555.1;
    %557 = cast(meta[relay.Constant][20] /* ty=Tensor[(3, 12, 5), float64] */, dtype="bool") /* ty=Tensor[(3, 12, 5), bool] */;
    %558 = shape_of(%556, dtype="int32") /* ty=Tensor[(3), int32] */;
    %559 = cast(%556, dtype="bool") /* ty=Tensor[(3, 12, 5), bool] */;
    %560 = dyn.reshape(%557, %558, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %561 = cast(%556, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
    %562 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(3, 12, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %563 = cast(meta[relay.Constant][20] /* ty=Tensor[(3, 12, 5), float64] */, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
    %564 = dyn.reshape(%561, %562, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %565 = cast(%var_1836, dtype="uint16") /* ty=Tensor[(4, 88), uint16] */;
    %566 = cast(%var_1836, dtype="uint16") /* ty=Tensor[(4, 88), uint16] */;
    %567 = reshape(%565, newshape=[8, 11, 4]) /* ty=Tensor[(8, 11, 4), uint16] */;
    %568 = reshape(%566, newshape=[8, 11, 4]) /* ty=Tensor[(8, 11, 4), uint16] */;
    %569 = @func_1320(%567, %568) /* ty=(Tensor[(8, 11, 4), bool], Tensor[(8, 11, 4), float32], Tensor[(3, 12, 5), float64]) */;
    %570 = cast(meta[relay.Constant][20] /* ty=Tensor[(3, 12, 5), float64] */, dtype="float64") /* ty=Tensor[(3, 12, 5), float64] */;
    %571 = sqrt(%570) /* ty=Tensor[(3, 12, 5), float64] */;
    %572 = cast(meta[relay.Constant][21] /* ty=Tensor[(3, 12, 5), float64] */, dtype="uint16") /* ty=Tensor[(3, 12, 5), uint16] */;
    %573 = shape_of(%571, dtype="int32") /* ty=Tensor[(3), int32] */;
    %574 = cast(%571, dtype="uint16") /* ty=Tensor[(3, 12, 5), uint16] */;
    %575 = dyn.reshape(%572, %573, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %576 = greater_equal(%559, %560) /* ty=Tensor[(3, 12, 5), bool] */;
    %577 = floor_divide(%563, %564) /* ty=Tensor[(3, 12, 5), float32] */;
    %578 = %569.2;
    %579 = bitwise_and(%574, %575) /* ty=Tensor[(3, 12, 5), uint16] */;
    (%576, %577, %578, %var_1836, %579)
  };
  %580(%var_1850) /* ty=(Tensor[(3, 12, 5), bool], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(4, 88), uint16], Tensor[(3, 12, 5), uint16]) */
}

def @func_7718() -> (Tensor[(3, 12, 5), float32], Tensor[(720), float64], Tensor[(3, 12, 5), float32]) {
  %585 = fn () -> (Tensor[(3, 12, 5), float32], Tensor[(720), float64], Tensor[(3, 12, 5), float32]) {
    %581 = @func_3013() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), bool], Tensor[(720), float64]) */;
    %582 = @func_1464() /* ty=Tensor[(3, 12, 5), float32] */;
    %583 = %581.2;
    %584 = @func_4848() /* ty=Tensor[(3, 12, 5), float32] */;
    (%582, %583, %584)
  };
  %585() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(720), float64], Tensor[(3, 12, 5), float32]) */
}

def @func_10107(%var_10105: Tensor[(7, 8, 13), float32]) -> (Tensor[(7, 8, 13), uint16], Tensor[(7, 8, 13), float64], Tensor[(3, 12, 5), float64]) {
  @func_10104(%var_10105) /* ty=(Tensor[(7, 8, 13), uint16], Tensor[(7, 8, 13), float64], Tensor[(3, 12, 5), float64]) */
}

def @func_5368() -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32]) {
  %586 = @func_410() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %587 = @func_4749() /* ty=(Tensor[(3, 12, 5), float32],) */;
  %588 = %586.0;
  %589 = %587.0;
  (%588, %589)
}

def @func_7464() -> Tensor[(3, 12, 5), float64] {
  %590 = @func_5144() /* ty=(Tensor[(3, 12, 5), float64],) */;
  %590.0
}

def @func_8510() -> (Tensor[(720), float32], Tensor[(3, 12, 5), float32]) {
  @func_8508() /* ty=(Tensor[(720), float32], Tensor[(3, 12, 5), float32]) */
}

def @func_2375(%var_2373: Tensor[(3, 12, 5), float64], %var_2374: Tensor[(720), float64]) -> (Tensor[(3, 12, 5), bool], Tensor[(8, 6, 15), int8], Tensor[(720), float64]) {
  @func_2371(%var_2373, %var_2374) /* ty=(Tensor[(3, 12, 5), bool], Tensor[(8, 6, 15), int8], Tensor[(720), float64]) */
}

def @func_736(%var_734: Tensor[(9, 8, 10), float32], %var_735: Tensor[(3, 12, 5), float64]) -> (Tensor[(3, 12, 5), float32], Tensor[(9, 8, 10), float32], Tensor[(9, 8, 10), float64], Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float32]) {
  @func_732(%var_734, %var_735) /* ty=(Tensor[(3, 12, 5), float32], Tensor[(9, 8, 10), float32], Tensor[(9, 8, 10), float64], Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float32]) */
}

def @func_3418() -> (Tensor[(7, 8, 13), float32],) {
  %591 = cast(meta[relay.Constant][22] /* ty=Tensor[(7, 8, 13), float32] */, dtype="float32") /* ty=Tensor[(7, 8, 13), float32] */;
  %592 = tan(%591) /* ty=Tensor[(7, 8, 13), float32] */;
  (%592,)
}

def @func_1366() -> (Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float64]) {
  @func_1364() /* ty=(Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float64]) */
}

def @func_10581() -> (Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), float32]) {
  %596 = fn () -> (Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), float32]) {
    %593 = @func_8969() /* ty=(Tensor[(720), float32], Tensor[(3, 12, 5), int32]) */;
    %594 = %593.1;
    %595 = @func_10316() /* ty=Tensor[(3, 12, 5), float32] */;
    (%594, %595)
  };
  %596() /* ty=(Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), float32]) */
}

def @func_8989() -> (Tensor[(3, 12, 5), uint32],) {
  @func_8987() /* ty=(Tensor[(3, 12, 5), uint32],) */
}

def @func_10672() -> Tensor[(3, 12, 5), float32] {
  @func_1464() /* ty=Tensor[(3, 12, 5), float32] */
}

def @func_1972() -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) {
  %601 = fn () -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) {
    %597 = @func_1665() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), int32]) */;
    %598 = @func_808() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), uint32], Tensor[(720), float32]) */;
    %599 = %597.1;
    %600 = %598.0;
    (%599, %600)
  };
  %601() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */
}

def @func_3420() -> (Tensor[(7, 8, 13), float32],) {
  @func_3418() /* ty=(Tensor[(7, 8, 13), float32],) */
}

def @func_6028() -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(192, 2), float64]) {
  %608 = fn () -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(192, 2), float64]) {
    %602 = @func_410() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
    %603 = cast(meta[relay.Constant][23] /* ty=Tensor[(192, 2), float64] */, dtype="float64") /* ty=Tensor[(192, 2), float64] */;
    %604 = reshape(%603, newshape=[8, 8, 6]) /* ty=Tensor[(8, 8, 6), float64] */;
    %605 = @func_3826(%604) /* ty=(Tensor[(8, 8, 6), float64], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32]) */;
    %606 = %602.1;
    %607 = %605.2;
    (%606, %607, meta[relay.Constant][23] /* ty=Tensor[(192, 2), float64] */)
  };
  %608() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(192, 2), float64]) */
}

def @func_5493() -> (Tensor[(3, 12, 5), float64], Tensor[(11, 6, 9), float64], Tensor[(198, 3), float64], Tensor[(15), float32], Tensor[(15), float32], Tensor[(75, 3), float32], Tensor[(6, 7, 3), float32], Tensor[(126), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32]) {
  @func_5491() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(11, 6, 9), float64], Tensor[(198, 3), float64], Tensor[(15), float32], Tensor[(15), float32], Tensor[(75, 3), float32], Tensor[(6, 7, 3), float32], Tensor[(126), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32]) */
}

def @func_8573() -> Tensor[(3, 12, 5), float64] {
  %610 = fn () -> Tensor[(3, 12, 5), float64] {
    %609 = @func_263() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
    %609.1
  };
  %610() /* ty=Tensor[(3, 12, 5), float64] */
}

def @func_10114() -> Tensor[(7, 8, 13), float32] {
  %611 = @func_3418() /* ty=(Tensor[(7, 8, 13), float32],) */;
  %611.0
}

def @func_8242() -> Tensor[(3, 12, 5), int32] {
  @func_8240() /* ty=Tensor[(3, 12, 5), int32] */
}

def @func_10316() -> Tensor[(3, 12, 5), float32] {
  %612 = @func_8778() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(7, 8, 13), float32]) */;
  %612.0
}

def @func_9028() -> (Tensor[(3, 12, 5), float64],) {
  %615 = fn () -> (Tensor[(3, 12, 5), float64],) {
    %613 = @func_2889() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(720), float32]) */;
    %614 = %613.0;
    (%614,)
  };
  %615() /* ty=(Tensor[(3, 12, 5), float64],) */
}

def @func_8720(%var_8655: Tensor[(1, 88), float32]) -> (Tensor[(3, 12, 5), float32], Tensor[(?, 88), int8], Tensor[(1, 3, 4), float32], Tensor[(12), float32], Tensor[(168), float32], Tensor[(2, 4, 11), uint64]) {
  %616 = cast(%var_8655, dtype="float32") /* ty=Tensor[(1, 88), float32] */;
  %617 = @func_622() /* ty=Tensor[(3, 12, 5), float32] */;
  %618 = cast(%617, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
  %619 = cast(%var_8655, dtype="float32") /* ty=Tensor[(1, 88), float32] */;
  %620 = reshape(%616, newshape=[2, 4, 11]) /* ty=Tensor[(2, 4, 11), float32] */;
  %621 = reshape(%618, newshape=[30, 6]) /* ty=Tensor[(30, 6), float32] */;
  %622 = reshape(%619, newshape=[2, 4, 11]) /* ty=Tensor[(2, 4, 11), float32] */;
  %623 = @func_3336(%620, %621, %622) /* ty=(Tensor[(3, 12, 5), float64], Tensor[(30, 6), float32], Tensor[(2, 4, 11), int8], Tensor[(2, 4, 11), float64], Tensor[(3, 12, 5), int32]) */;
  %624 = %623.2;
  %625 = cast(%624, dtype="int8") /* ty=Tensor[(2, 4, 11), int8] */;
  %626 = shape_of(%var_8655, dtype="int32") /* ty=Tensor[(2), int32] */;
  %627 = cast(%var_8655, dtype="int8") /* ty=Tensor[(1, 88), int8] */;
  %628 = dyn.reshape(%625, %626, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %629 = cast(meta[relay.Constant][24] /* ty=Tensor[(12), float32] */, dtype="float32") /* ty=Tensor[(12), float32] */;
  %630 = cast(meta[relay.Constant][25] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %631 = reshape(%629, newshape=[1, 3, 4]) /* ty=Tensor[(1, 3, 4), float32] */;
  %632 = reshape(%630, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float32] */;
  %633 = @func_1737(%631, %632) /* ty=(Tensor[(14, 3, 4), float32], Tensor[(1, 3, 4), float32]) */;
  %634 = cast(%624, dtype="float64") /* ty=Tensor[(2, 4, 11), float64] */;
  %635 = log2(%634) /* ty=Tensor[(2, 4, 11), float64] */;
  %636 = cast(%624, dtype="float64") /* ty=Tensor[(2, 4, 11), float64] */;
  %637 = erf(%636) /* ty=Tensor[(2, 4, 11), float64] */;
  %638 = cast(%637, dtype="uint64") /* ty=Tensor[(2, 4, 11), uint64] */;
  %639 = shape_of(%635, dtype="int32") /* ty=Tensor[(3), int32] */;
  %640 = cast(%635, dtype="uint64") /* ty=Tensor[(2, 4, 11), uint64] */;
  %641 = dyn.reshape(%638, %639, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %642 = add(%627, %628) /* ty=Tensor[(?, 88), int8] */;
  %643 = %633.1;
  %644 = logical_xor(%640, %641) /* ty=Tensor[(2, 4, 11), uint64] */;
  (%617, %642, %643, meta[relay.Constant][24] /* ty=Tensor[(12), float32] */, meta[relay.Constant][25] /* ty=Tensor[(168), float32] */, %644)
}

def @func_2316(%var_2280: Tensor[(6, 1, 1), float64]) -> (Tensor[(352), uint16], Tensor[(6, 4, 88), uint64]) {
  %645 = cast(%var_2280, dtype="float64") /* ty=Tensor[(6, 1, 1), float64] */;
  %646 = tan(%645) /* ty=Tensor[(6, 1, 1), float64] */;
  %647 = cast(%646, dtype="bool") /* ty=Tensor[(6, 1, 1), bool] */;
  %648 = shape_of(%var_2280, dtype="int32") /* ty=Tensor[(3), int32] */;
  %649 = cast(%var_2280, dtype="bool") /* ty=Tensor[(6, 1, 1), bool] */;
  %650 = dyn.reshape(%647, %648, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %651 = less(%649, %650) /* ty=Tensor[(6, ?, ?), bool] */;
  %652 = cast(meta[relay.Constant][26] /* ty=Tensor[(352), uint16] */, dtype="uint16") /* ty=Tensor[(352), uint16] */;
  %653 = reshape(%652, newshape=[4, 88]) /* ty=Tensor[(4, 88), uint16] */;
  %654 = @func_1849(%653) /* ty=(Tensor[(3, 12, 5), bool], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(4, 88), uint16], Tensor[(3, 12, 5), uint16]) */;
  %655 = %654.3;
  %656 = cast(%651, dtype="uint64") /* ty=Tensor[(6, ?, ?), uint64] */;
  %657 = cast(%655, dtype="uint64") /* ty=Tensor[(4, 88), uint64] */;
  %658 = multiply(%656, %657) /* ty=Tensor[(6, 4, 88), uint64] */;
  (meta[relay.Constant][26] /* ty=Tensor[(352), uint16] */, %658)
}

def @func_4554() -> (Tensor[(3, 12, 5), float64],) {
  %661 = fn () -> (Tensor[(3, 12, 5), float64],) {
    %659 = @func_2889() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(720), float32]) */;
    %660 = %659.0;
    (%660,)
  };
  %661() /* ty=(Tensor[(3, 12, 5), float64],) */
}

def @func_208(%var_190: Tensor[(3, 1, 5), float32], %var_191: Tensor[(3, 15, 5), float32]) -> Tensor[(3, 15, 5), float32] {
  %662 = cast(%var_190, dtype="float32") /* ty=Tensor[(3, 1, 5), float32] */;
  %663 = cast(%var_191, dtype="float32") /* ty=Tensor[(3, 15, 5), float32] */;
  floor_divide(%662, %663) /* ty=Tensor[(3, 15, 5), float32] */
}

def @func_3853() -> Tensor[(720), float32] {
  @func_3851() /* ty=Tensor[(720), float32] */
}

def @func_277() -> Tensor[(3, 12, 5), float64] {
  @func_275() /* ty=Tensor[(3, 12, 5), float64] */
}

def @func_5272() -> (Tensor[(3, 12, 5), float32], Tensor[(10, 2, 5), float32]) {
  %664 = @func_1572() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
  %665 = %664.0;
  %666 = cast(%665, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
  %667 = reshape(%666, newshape=[30, 6]) /* ty=Tensor[(30, 6), float32] */;
  %668 = @func_4270(%667) /* ty=(Tensor[(15), float32], Tensor[(3, 12, 5), float32], Tensor[(30, 6), float32], Tensor[(10, 2, 5), int64], Tensor[(100), float32]) */;
  %669 = %668.3;
  %670 = cast(%669, dtype="float32") /* ty=Tensor[(10, 2, 5), float32] */;
  %671 = log10(%670) /* ty=Tensor[(10, 2, 5), float32] */;
  (%665, %671)
}

def @func_8090(%var_8088: Tensor[(88), float32]) -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(2, 4, 11), int8], Tensor[(88), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), int32]) {
  @func_8087(%var_8088) /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(2, 4, 11), int8], Tensor[(88), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), int32]) */
}

def @func_1740(%var_1738: Tensor[(1, 3, 4), float32], %var_1739: Tensor[(14, 3, 4), float32]) -> (Tensor[(14, 3, 4), float32], Tensor[(1, 3, 4), float32]) {
  %677 = fn (%var_1723: Tensor[(1, 3, 4), float32], %var_1724: Tensor[(14, 3, 4), float32]) -> (Tensor[(14, 3, 4), float32], Tensor[(1, 3, 4), float32]) {
    %672 = cast(%var_1723, dtype="float32") /* ty=Tensor[(1, 3, 4), float32] */;
    %673 = cast(%var_1724, dtype="float32") /* ty=Tensor[(14, 3, 4), float32] */;
    %674 = cast(%var_1723, dtype="float32") /* ty=Tensor[(1, 3, 4), float32] */;
    %675 = floor_mod(%672, %673) /* ty=Tensor[(14, 3, 4), float32] */;
    %676 = acos(%674) /* ty=Tensor[(1, 3, 4), float32] */;
    (%675, %676)
  };
  %677(%var_1738, %var_1739) /* ty=(Tensor[(14, 3, 4), float32], Tensor[(1, 3, 4), float32]) */
}

def @func_5197() -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), uint32], Tensor[(720), float32]) {
  %685 = fn () -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), uint32], Tensor[(720), float32]) {
    %678 = cast(meta[relay.Constant][27] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
    %679 = @func_4407() /* ty=Tensor[(3, 12, 5), float32] */;
    %680 = cast(%679, dtype="float64") /* ty=Tensor[(3, 12, 5), float64] */;
    %681 = reshape(%678, newshape=[9, 8, 10]) /* ty=Tensor[(9, 8, 10), float32] */;
    %682 = reshape(%680, newshape=[3, 12, 5]) /* ty=Tensor[(3, 12, 5), float64] */;
    %683 = @func_732(%681, %682) /* ty=(Tensor[(3, 12, 5), float32], Tensor[(9, 8, 10), float32], Tensor[(9, 8, 10), float64], Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float32]) */;
    %684 = %683.3;
    (%679, %684, meta[relay.Constant][27] /* ty=Tensor[(720), float32] */)
  };
  %685() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), uint32], Tensor[(720), float32]) */
}

def @func_8971() -> (Tensor[(720), float32], Tensor[(3, 12, 5), int32]) {
  @func_8969() /* ty=(Tensor[(720), float32], Tensor[(3, 12, 5), int32]) */
}

def @func_10674() -> Tensor[(3, 12, 5), float32] {
  @func_10672() /* ty=Tensor[(3, 12, 5), float32] */
}

def @func_4246() -> (Tensor[(3, 12, 5), float32],) {
  @func_4244() /* ty=(Tensor[(3, 12, 5), float32],) */
}

def @func_1214(%var_1213: Tensor[(3, 12, 5), float32]) -> (Tensor[(3, 12, 5), float64],) {
  %693 = fn (%var_1190: Tensor[(3, 12, 5), float32]) -> (Tensor[(3, 12, 5), float64],) {
    %686 = @func_756() /* ty=(Tensor[(3, 12, 5), float32],) */;
    %687 = %686.0;
    %688 = cast(%var_1190, dtype="float64") /* ty=Tensor[(3, 12, 5), float64] */;
    %689 = shape_of(%687, dtype="int32") /* ty=Tensor[(3), int32] */;
    %690 = cast(%687, dtype="float64") /* ty=Tensor[(3, 12, 5), float64] */;
    %691 = dyn.reshape(%688, %689, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %692 = divide(%690, %691) /* ty=Tensor[(3, 12, 5), float64] */;
    (%692,)
  };
  %693(%var_1213) /* ty=(Tensor[(3, 12, 5), float64],) */
}

def @func_8540() -> (Tensor[(3, 12, 5), float64],) {
  %694 = @func_6946() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %695 = %694.1;
  (%695,)
}

def @func_9380() -> (Tensor[(3, 12, 5), float64],) {
  @func_9378() /* ty=(Tensor[(3, 12, 5), float64],) */
}

def @func_4105(%var_4104: Tensor[(10, 2, 5), float32]) -> (Tensor[(10, 2, 5), int64],) {
  %706 = fn (%var_4088: Tensor[(10, 2, 5), float32]) -> (Tensor[(10, 2, 5), int64],) {
    %696 = cast(meta[relay.Constant][28] /* ty=Tensor[(10, 2, 5), float32] */, dtype="bool") /* ty=Tensor[(10, 2, 5), bool] */;
    %697 = shape_of(%var_4088, dtype="int32") /* ty=Tensor[(3), int32] */;
    %698 = cast(%var_4088, dtype="bool") /* ty=Tensor[(10, 2, 5), bool] */;
    %699 = dyn.reshape(%696, %697, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %700 = equal(%698, %699) /* ty=Tensor[(10, 2, 5), bool] */;
    %701 = cast(%700, dtype="int64") /* ty=Tensor[(10, 2, 5), int64] */;
    %702 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(10, 2, 5), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %703 = cast(meta[relay.Constant][28] /* ty=Tensor[(10, 2, 5), float32] */, dtype="int64") /* ty=Tensor[(10, 2, 5), int64] */;
    %704 = dyn.reshape(%701, %702, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %705 = left_shift(%703, %704) /* ty=Tensor[(10, 2, 5), int64] */;
    (%705,)
  };
  %706(%var_4104) /* ty=(Tensor[(10, 2, 5), int64],) */
}

def @func_9669(%var_9668: Tensor[(2, 6, 6), float32]) -> Tensor[(2, 6, 6), float32] {
  %708 = fn (%var_9651: Tensor[(2, 6, 6), float32]) -> Tensor[(2, 6, 6), float32] {
    %707 = cast(%var_9651, dtype="float32") /* ty=Tensor[(2, 6, 6), float32] */;
    acos(%707) /* ty=Tensor[(2, 6, 6), float32] */
  };
  %708(%var_9668) /* ty=Tensor[(2, 6, 6), float32] */
}

def @func_568() -> Tensor[(3, 12, 5), float32] {
  @func_566() /* ty=Tensor[(3, 12, 5), float32] */
}

def @func_5350(%var_5349: Tensor[(352), uint16]) -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(352), uint16], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) {
  %722 = fn (%var_5329: Tensor[(352), uint16]) -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(352), uint16], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) {
    %709 = @func_608() /* ty=(Tensor[(3, 12, 5), float32],) */;
    %710 = @func_756() /* ty=(Tensor[(3, 12, 5), float32],) */;
    %711 = cast(%var_5329, dtype="uint16") /* ty=Tensor[(352), uint16] */;
    %712 = cast(%var_5329, dtype="uint16") /* ty=Tensor[(352), uint16] */;
    %713 = reshape(%711, newshape=[8, 11, 4]) /* ty=Tensor[(8, 11, 4), uint16] */;
    %714 = reshape(%712, newshape=[8, 11, 4]) /* ty=Tensor[(8, 11, 4), uint16] */;
    %715 = @func_1320(%713, %714) /* ty=(Tensor[(8, 11, 4), bool], Tensor[(8, 11, 4), float32], Tensor[(3, 12, 5), float64]) */;
    %716 = @func_3260() /* ty=(Tensor[(3, 12, 5), bool], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32]) */;
    %717 = %709.0;
    %718 = %710.0;
    %719 = %715.2;
    %720 = %716.2;
    %721 = @func_3665() /* ty=Tensor[(3, 12, 5), float64] */;
    (%717, %718, %719, %var_5329, %720, %721)
  };
  %722(%var_5349) /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(352), uint16], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */
}

def @func_1364() -> (Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float64]) {
  %723 = @func_808() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), uint32], Tensor[(720), float32]) */;
  %724 = %723.0;
  %725 = cast(meta[relay.Constant][29] /* ty=Tensor[(3, 12, 5), float64] */, dtype="uint32") /* ty=Tensor[(3, 12, 5), uint32] */;
  %726 = shape_of(%724, dtype="int32") /* ty=Tensor[(3), int32] */;
  %727 = cast(%724, dtype="uint32") /* ty=Tensor[(3, 12, 5), uint32] */;
  %728 = dyn.reshape(%725, %726, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %729 = multiply(%727, %728) /* ty=Tensor[(3, 12, 5), uint32] */;
  %730 = @func_275() /* ty=Tensor[(3, 12, 5), float64] */;
  (%729, %730)
}

def @func_1988() -> Tensor[(3, 12, 5), int32] {
  %732 = fn () -> Tensor[(3, 12, 5), int32] {
    %731 = @func_1665() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), int32]) */;
    %731.2
  };
  %732() /* ty=Tensor[(3, 12, 5), int32] */
}

def @func_6772() -> (Tensor[(3, 12, 5), uint32],) {
  @func_6770() /* ty=(Tensor[(3, 12, 5), uint32],) */
}

def @func_9729() -> (Tensor[(3, 12, 5), float32], Tensor[(12, 7, 13), bool], Tensor[(6, 28), uint8], Tensor[(14, 78), float64]) {
  %744 = fn () -> (Tensor[(3, 12, 5), float32], Tensor[(12, 7, 13), bool], Tensor[(6, 28), uint8], Tensor[(14, 78), float64]) {
    %733 = cast(meta[relay.Constant][30] /* ty=Tensor[(6, 28), uint8] */, dtype="uint8") /* ty=Tensor[(6, 28), uint8] */;
    %734 = cast(meta[relay.Constant][30] /* ty=Tensor[(6, 28), uint8] */, dtype="uint8") /* ty=Tensor[(6, 28), uint8] */;
    %735 = @func_4407() /* ty=Tensor[(3, 12, 5), float32] */;
    %736 = cast(%735, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
    %737 = cast(meta[relay.Constant][31] /* ty=Tensor[(14, 78), float64] */, dtype="float64") /* ty=Tensor[(14, 78), float64] */;
    %738 = reshape(%733, newshape=[14, 2, 6]) /* ty=Tensor[(14, 2, 6), uint8] */;
    %739 = reshape(%734, newshape=[14, 2, 6]) /* ty=Tensor[(14, 2, 6), uint8] */;
    %740 = reshape(%736, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %741 = reshape(%737, newshape=[1092]) /* ty=Tensor[(1092), float64] */;
    %742 = @func_7080(%738, %739, %740, %741) /* ty=(Tensor[(14, 2, 6), bool], Tensor[(720), float32], Tensor[(180), float32], Tensor[(3, 12, 5), float32], Tensor[(14, 2, 6), float32], Tensor[(12, 7, 13), bool], Tensor[(1092), float64]) */;
    %743 = %742.5;
    (%735, %743, meta[relay.Constant][30] /* ty=Tensor[(6, 28), uint8] */, meta[relay.Constant][31] /* ty=Tensor[(14, 78), float64] */)
  };
  %744() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(12, 7, 13), bool], Tensor[(6, 28), uint8], Tensor[(14, 78), float64]) */
}

def @func_6212(%var_6210: Tensor[(15), float32]) -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(594), float64], Tensor[(15), float32]) {
  @func_6209(%var_6210) /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(594), float64], Tensor[(15), float32]) */
}

def @func_7928() -> Tensor[(720), float32] {
  %745 = @func_6487() /* ty=(Tensor[(720), float32],) */;
  %745.0
}

def @func_6488() -> (Tensor[(720), float32],) {
  %747 = fn () -> (Tensor[(720), float32],) {
    %746 = @func_3851() /* ty=Tensor[(720), float32] */;
    (%746,)
  };
  %747() /* ty=(Tensor[(720), float32],) */
}

def @func_8382() -> (Tensor[(720), float32], Tensor[(3, 12, 5), float32]) {
  %751 = fn () -> (Tensor[(720), float32], Tensor[(3, 12, 5), float32]) {
    %748 = @func_2927() /* ty=(Tensor[(3, 12, 5), float32],) */;
    %749 = @func_7928() /* ty=Tensor[(720), float32] */;
    %750 = %748.0;
    (%749, %750)
  };
  %751() /* ty=(Tensor[(720), float32], Tensor[(3, 12, 5), float32]) */
}

def @func_7384() -> Tensor[(7, 2, 5), float32] {
  %753 = fn () -> Tensor[(7, 2, 5), float32] {
    %752 = cast(meta[relay.Constant][32] /* ty=Tensor[(7, 2, 5), float32] */, dtype="float32") /* ty=Tensor[(7, 2, 5), float32] */;
    acos(%752) /* ty=Tensor[(7, 2, 5), float32] */
  };
  %753() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_2146(%var_2145: Tensor[(3, 12, 5), float32]) -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(720), float32], Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float64]) {
  %776 = fn (%var_2139: Tensor[(3, 12, 5), float32]) -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(720), float32], Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float64]) {
    %754 = @func_884() /* ty=(Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
    %755 = @func_263() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
    %756 = @func_1454() /* ty=(Tensor[(720), float32],) */;
    %757 = @func_1364() /* ty=(Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float64]) */;
    %758 = @func_1665() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), int32]) */;
    %759 = %758.0;
    %760 = cast(meta[relay.Constant][33] /* ty=Tensor[(3, 12, 5), float64] */, dtype="bool") /* ty=Tensor[(3, 12, 5), bool] */;
    %761 = shape_of(%759, dtype="int32") /* ty=Tensor[(3), int32] */;
    %762 = cast(%759, dtype="bool") /* ty=Tensor[(3, 12, 5), bool] */;
    %763 = dyn.reshape(%760, %761, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %764 = equal(%762, %763) /* ty=Tensor[(3, 12, 5), bool] */;
    %765 = cast(%764, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
    %766 = atan(%765) /* ty=Tensor[(3, 12, 5), float32] */;
    %767 = cast(%var_2139, dtype="float64") /* ty=Tensor[(3, 12, 5), float64] */;
    %768 = shape_of(%766, dtype="int32") /* ty=Tensor[(3), int32] */;
    %769 = cast(%766, dtype="float64") /* ty=Tensor[(3, 12, 5), float64] */;
    %770 = dyn.reshape(%767, %768, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %771 = %754.2;
    %772 = %755.1;
    %773 = %756.0;
    %774 = %757.0;
    %775 = floor_mod(%769, %770) /* ty=Tensor[(3, 12, 5), float64] */;
    (%771, %772, %773, %774, %775)
  };
  %776(%var_2145) /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(720), float32], Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float64]) */
}

def @func_5787(%var_5767: Tensor[(14, 3, 12), float32]) -> (Tensor[(14, 3, 12), float64], Tensor[(14, 3, 12), float32]) {
  %777 = cast(%var_5767, dtype="float32") /* ty=Tensor[(14, 3, 12), float32] */;
  %778 = acosh(%777) /* ty=Tensor[(14, 3, 12), float32] */;
  %779 = cast(%var_5767, dtype="float64") /* ty=Tensor[(14, 3, 12), float64] */;
  %780 = shape_of(%778, dtype="int32") /* ty=Tensor[(3), int32] */;
  %781 = cast(%778, dtype="float64") /* ty=Tensor[(14, 3, 12), float64] */;
  %782 = dyn.reshape(%779, %780, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %783 = cast(%778, dtype="float32") /* ty=Tensor[(14, 3, 12), float32] */;
  %784 = subtract(%781, %782) /* ty=Tensor[(14, 3, 12), float64] */;
  %785 = sqrt(%783) /* ty=Tensor[(14, 3, 12), float32] */;
  (%784, %785)
}

def @func_9607() -> (Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float32], Tensor[(720), float32]) {
  %792 = fn () -> (Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float32], Tensor[(720), float32]) {
    %786 = @func_9363() /* ty=(Tensor[(3, 12, 5), uint32],) */;
    %787 = @func_2927() /* ty=(Tensor[(3, 12, 5), float32],) */;
    %788 = @func_5099() /* ty=(Tensor[(720), float32], Tensor[(3, 12, 5), float32]) */;
    %789 = %786.0;
    %790 = %787.0;
    %791 = %788.0;
    (%789, %790, %791)
  };
  %792() /* ty=(Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float32], Tensor[(720), float32]) */
}

def @func_6209(%var_6206: Tensor[(15), float32]) -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(594), float64], Tensor[(15), float32]) {
  %793 = @func_1665() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), int32]) */;
  %794 = cast(meta[relay.Constant][34] /* ty=Tensor[(594), float64] */, dtype="float64") /* ty=Tensor[(594), float64] */;
  %795 = cast(meta[relay.Constant][34] /* ty=Tensor[(594), float64] */, dtype="float64") /* ty=Tensor[(594), float64] */;
  %796 = cast(%var_6206, dtype="float32") /* ty=Tensor[(15), float32] */;
  %797 = reshape(%794, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), float64] */;
  %798 = reshape(%795, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), float64] */;
  %799 = reshape(%796, newshape=[15]) /* ty=Tensor[(15), float32] */;
  %800 = @func_1261(%797, %798, %799) /* ty=(Tensor[(11, 6, 9), float64], Tensor[(3, 15, 5), float32], Tensor[(15), float32], Tensor[(225), float32], Tensor[(3, 12, 5), float64]) */;
  %801 = @func_636() /* ty=Tensor[(3, 12, 5), float32] */;
  %802 = %793.0;
  %803 = %800.4;
  (%801, %802, %803, meta[relay.Constant][34] /* ty=Tensor[(594), float64] */, %var_6206)
}

def @func_9818() -> Tensor[(16, 9, 3), float32] {
  @func_9816() /* ty=Tensor[(16, 9, 3), float32] */
}

def @func_212(%var_210: Tensor[(3, 1, 5), float32], %var_211: Tensor[(3, 15, 5), float32]) -> Tensor[(3, 15, 5), float32] {
  @func_208(%var_210, %var_211) /* ty=Tensor[(3, 15, 5), float32] */
}

def @func_1324(%var_1322: Tensor[(8, 11, 4), uint16], %var_1323: Tensor[(8, 11, 4), uint16]) -> (Tensor[(8, 11, 4), bool], Tensor[(8, 11, 4), float32], Tensor[(3, 12, 5), float64]) {
  @func_1320(%var_1322, %var_1323) /* ty=(Tensor[(8, 11, 4), bool], Tensor[(8, 11, 4), float32], Tensor[(3, 12, 5), float64]) */
}

def @func_4751() -> (Tensor[(3, 12, 5), float32],) {
  @func_4749() /* ty=(Tensor[(3, 12, 5), float32],) */
}

def @func_7403() -> Tensor[(3, 12, 5), float32] {
  %804 = @func_1541() /* ty=(Tensor[(3, 12, 5), float32],) */;
  %804.0
}

def @func_10251() -> Tensor[(11, 11, 1), float64] {
  %806 = fn () -> Tensor[(11, 11, 1), float64] {
    %805 = cast(meta[relay.Constant][35] /* ty=Tensor[(11, 11, 1), float64] */, dtype="float64") /* ty=Tensor[(11, 11, 1), float64] */;
    sin(%805) /* ty=Tensor[(11, 11, 1), float64] */
  };
  %806() /* ty=Tensor[(11, 11, 1), float64] */
}

def @func_9282() -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) {
  %807 = @func_2927() /* ty=(Tensor[(3, 12, 5), float32],) */;
  %808 = @func_4553() /* ty=(Tensor[(3, 12, 5), float64],) */;
  %809 = @func_1665() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), int32]) */;
  %810 = %807.0;
  %811 = %808.0;
  %812 = %809.0;
  (%810, %811, %812)
}

def @func_6802() -> Tensor[(3, 12, 5), float32] {
  @func_6800() /* ty=Tensor[(3, 12, 5), float32] */
}

def @func_6465() -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32]) {
  %819 = fn () -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32]) {
    %813 = @func_4820() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
    %814 = @func_2889() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(720), float32]) */;
    %815 = %813.0;
    %816 = @func_3028() /* ty=Tensor[(3, 12, 5), float64] */;
    %817 = %814.0;
    %818 = @func_5578() /* ty=Tensor[(3, 12, 5), float32] */;
    (%815, %816, %817, %818)
  };
  %819() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32]) */
}

def @func_2850() -> (Tensor[(3, 12, 5), float64],) {
  %822 = fn () -> (Tensor[(3, 12, 5), float64],) {
    %820 = @func_410() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
    %821 = %820.1;
    (%821,)
  };
  %822() /* ty=(Tensor[(3, 12, 5), float64],) */
}

def @func_3592(%var_3589: Tensor[(112), float64], %var_3590: Tensor[(15), float32], %var_3591: Tensor[(225), float32]) -> (Tensor[(3, 12, 5), float64], Tensor[(6, 30), float64], Tensor[(112), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32], Tensor[(15), float32], Tensor[(225), float64]) {
  @func_3587(%var_3589, %var_3590, %var_3591) /* ty=(Tensor[(3, 12, 5), float64], Tensor[(6, 30), float64], Tensor[(112), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32], Tensor[(15), float32], Tensor[(225), float64]) */
}

def @func_5757() -> Tensor[(3, 12, 5), float32] {
  %824 = fn () -> Tensor[(3, 12, 5), float32] {
    %823 = @func_2927() /* ty=(Tensor[(3, 12, 5), float32],) */;
    %823.0
  };
  %824() /* ty=Tensor[(3, 12, 5), float32] */
}

def @func_9449(%var_9445: Tensor[(5, 14, 10), float64]) -> Tensor[(5, 14, 10), float64] {
  %825 = cast(%var_9445, dtype="float64") /* ty=Tensor[(5, 14, 10), float64] */;
  rsqrt(%825) /* ty=Tensor[(5, 14, 10), float64] */
}

def @func_7238() -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) {
  %826 = @func_1464() /* ty=Tensor[(3, 12, 5), float32] */;
  %827 = cast(%826, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
  %828 = reshape(%827, newshape=[3, 12, 5]) /* ty=Tensor[(3, 12, 5), float32] */;
  %829 = @func_1212(%828) /* ty=(Tensor[(3, 12, 5), float64],) */;
  %830 = @func_4407() /* ty=Tensor[(3, 12, 5), float32] */;
  %831 = %829.0;
  (%826, %830, %831)
}

def @func_7662() -> (Tensor[(720), float64], Tensor[(720), float32]) {
  %835 = fn () -> (Tensor[(720), float64], Tensor[(720), float32]) {
    %832 = @func_3013() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), bool], Tensor[(720), float64]) */;
    %833 = %832.2;
    %834 = @func_3851() /* ty=Tensor[(720), float32] */;
    (%833, %834)
  };
  %835() /* ty=(Tensor[(720), float64], Tensor[(720), float32]) */
}

def @func_5819() -> Tensor[(3, 12, 5), float32] {
  @func_5817() /* ty=Tensor[(3, 12, 5), float32] */
}

def @func_2681(%var_2679: Tensor[(15), float32], %var_2680: Tensor[(225), float32]) -> (Tensor[(3, 12, 5), float32], Tensor[(3, 15, 5), float32], Tensor[(15), float32], Tensor[(225), float32], Tensor[(720), float32], Tensor[(3, 12, 5), float32]) {
  @func_2677(%var_2679, %var_2680) /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 15, 5), float32], Tensor[(15), float32], Tensor[(225), float32], Tensor[(720), float32], Tensor[(3, 12, 5), float32]) */
}

def @func_3165() -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) {
  %836 = @func_1541() /* ty=(Tensor[(3, 12, 5), float32],) */;
  %837 = @func_566() /* ty=Tensor[(3, 12, 5), float32] */;
  %838 = %836.0;
  %839 = @func_636() /* ty=Tensor[(3, 12, 5), float32] */;
  %840 = @func_275() /* ty=Tensor[(3, 12, 5), float64] */;
  %841 = @func_3028() /* ty=Tensor[(3, 12, 5), float64] */;
  (%837, %838, %839, %840, %841)
}

def @func_9349() -> (Tensor[(3, 12, 5), float32],) {
  @func_9347() /* ty=(Tensor[(3, 12, 5), float32],) */
}

def @func_10318() -> Tensor[(3, 12, 5), float32] {
  @func_10316() /* ty=Tensor[(3, 12, 5), float32] */
}

def @func_1542() -> (Tensor[(3, 12, 5), float32],) {
  %845 = fn () -> (Tensor[(3, 12, 5), float32],) {
    %842 = @func_1464() /* ty=Tensor[(3, 12, 5), float32] */;
    %843 = cast(%842, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
    %844 = atanh(%843) /* ty=Tensor[(3, 12, 5), float32] */;
    (%844,)
  };
  %845() /* ty=(Tensor[(3, 12, 5), float32],) */
}

def @func_9378() -> (Tensor[(3, 12, 5), float64],) {
  %846 = @func_9282() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %847 = %846.1;
  (%847,)
}

def @func_9198() -> (Tensor[(3, 12, 5), float32],) {
  %850 = fn () -> (Tensor[(3, 12, 5), float32],) {
    %848 = @func_756() /* ty=(Tensor[(3, 12, 5), float32],) */;
    %849 = %848.0;
    (%849,)
  };
  %850() /* ty=(Tensor[(3, 12, 5), float32],) */
}

def @func_4160() -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(8, 6, 15), float64]) {
  %865 = fn () -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(8, 6, 15), float64]) {
    %851 = @func_3260() /* ty=(Tensor[(3, 12, 5), bool], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32]) */;
    %852 = cast(meta[relay.Constant][36] /* ty=Tensor[(60, 12), float64] */, dtype="float64") /* ty=Tensor[(60, 12), float64] */;
    %853 = cast(meta[relay.Constant][36] /* ty=Tensor[(60, 12), float64] */, dtype="float64") /* ty=Tensor[(60, 12), float64] */;
    %854 = reshape(%852, newshape=[8, 6, 15]) /* ty=Tensor[(8, 6, 15), float64] */;
    %855 = reshape(%853, newshape=[8, 6, 15]) /* ty=Tensor[(8, 6, 15), float64] */;
    %856 = @func_1000(%854, %855) /* ty=(Tensor[(8, 6, 15), int8], Tensor[(3, 12, 5), float32], Tensor[(8, 6, 15), bool], Tensor[(8, 6, 15), uint16]) */;
    %857 = %856.0;
    %858 = cast(meta[relay.Constant][36] /* ty=Tensor[(60, 12), float64] */, dtype="float64") /* ty=Tensor[(60, 12), float64] */;
    %859 = shape_of(%857, dtype="int32") /* ty=Tensor[(3), int32] */;
    %860 = cast(%857, dtype="float64") /* ty=Tensor[(8, 6, 15), float64] */;
    %861 = dyn.reshape(%858, %859, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %862 = @func_3665() /* ty=Tensor[(3, 12, 5), float64] */;
    %863 = %851.1;
    %864 = floor_divide(%860, %861) /* ty=Tensor[(8, 6, 15), float64] */;
    (%862, %863, %864)
  };
  %865() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(8, 6, 15), float64]) */
}

def @func_9364() -> (Tensor[(3, 12, 5), uint32],) {
  %868 = fn () -> (Tensor[(3, 12, 5), uint32],) {
    %866 = @func_808() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), uint32], Tensor[(720), float32]) */;
    %867 = %866.1;
    (%867,)
  };
  %868() /* ty=(Tensor[(3, 12, 5), uint32],) */
}

def @func_1464() -> Tensor[(3, 12, 5), float32] {
  @func_622() /* ty=Tensor[(3, 12, 5), float32] */
}

def @func_5957() -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(126), float32], Tensor[(3, 12, 5), float32], Tensor[(6, 4, 88), uint64], Tensor[(3, 2), float64], Tensor[(3, 12, 5), float64]) {
  %869 = @func_5083() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), uint32]) */;
  %870 = @func_2235() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
  %871 = @func_5491() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(11, 6, 9), float64], Tensor[(198, 3), float64], Tensor[(15), float32], Tensor[(15), float32], Tensor[(75, 3), float32], Tensor[(6, 7, 3), float32], Tensor[(126), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32]) */;
  %872 = cast(meta[relay.Constant][37] /* ty=Tensor[(3, 2), float64] */, dtype="float64") /* ty=Tensor[(3, 2), float64] */;
  %873 = reshape(%872, newshape=[6]) /* ty=Tensor[(6), float64] */;
  %874 = @func_2713(%873) /* ty=(Tensor[(3, 12, 5), float64], Tensor[(6, 4, 88), uint64], Tensor[(6), float64]) */;
  %875 = %871.7;
  %876 = cast(%875, dtype="float32") /* ty=Tensor[(126), float32] */;
  %877 = reshape(%876, newshape=[6, 7, 3]) /* ty=Tensor[(6, 7, 3), float32] */;
  %878 = @func_3882(%877) /* ty=(Tensor[(3, 12, 5), float64], Tensor[(6, 7, 3), float32]) */;
  %879 = @func_1464() /* ty=Tensor[(3, 12, 5), float32] */;
  %880 = %869.1;
  %881 = @func_636() /* ty=Tensor[(3, 12, 5), float32] */;
  %882 = %870.0;
  %883 = @func_4848() /* ty=Tensor[(3, 12, 5), float32] */;
  %884 = %874.1;
  %885 = %878.0;
  (%879, %880, %881, %882, %875, %883, %884, meta[relay.Constant][37] /* ty=Tensor[(3, 2), float64] */, %885)
}

def @func_8780() -> (Tensor[(3, 12, 5), float32], Tensor[(7, 8, 13), float32]) {
  @func_8778() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(7, 8, 13), float32]) */
}

def @func_7310() -> (Tensor[(3, 12, 5), float64],) {
  %888 = fn () -> (Tensor[(3, 12, 5), float64],) {
    %886 = @func_4820() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
    %887 = %886.1;
    (%887,)
  };
  %888() /* ty=(Tensor[(3, 12, 5), float64],) */
}

def @func_10295() -> (Tensor[(3, 12, 5), float32],) {
  %891 = fn () -> (Tensor[(3, 12, 5), float32],) {
    %889 = @func_9197() /* ty=(Tensor[(3, 12, 5), float32],) */;
    %890 = %889.0;
    (%890,)
  };
  %891() /* ty=(Tensor[(3, 12, 5), float32],) */
}

def @func_9646() -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32], Tensor[(75, 3), float32]) {
  %898 = fn () -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32], Tensor[(75, 3), float32]) {
    %892 = @func_4820() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
    %893 = @func_5546() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
    %894 = @func_5491() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(11, 6, 9), float64], Tensor[(198, 3), float64], Tensor[(15), float32], Tensor[(15), float32], Tensor[(75, 3), float32], Tensor[(6, 7, 3), float32], Tensor[(126), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32]) */;
    %895 = %892.1;
    %896 = %893.0;
    %897 = %894.5;
    (%895, %896, %897)
  };
  %898() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32], Tensor[(75, 3), float32]) */
}

def @func_10425(%var_10366: Tensor[(15), float32]) -> (Tensor[(3, 12, 5), bool], Tensor[(3, 15, 5), float32], Tensor[(594), float64], Tensor[(15), float32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32]) {
  %899 = @func_3260() /* ty=(Tensor[(3, 12, 5), bool], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32]) */;
  %900 = cast(meta[relay.Constant][38] /* ty=Tensor[(594), float64] */, dtype="float64") /* ty=Tensor[(594), float64] */;
  %901 = cast(meta[relay.Constant][38] /* ty=Tensor[(594), float64] */, dtype="float64") /* ty=Tensor[(594), float64] */;
  %902 = cast(%var_10366, dtype="float32") /* ty=Tensor[(15), float32] */;
  %903 = reshape(%900, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), float64] */;
  %904 = reshape(%901, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), float64] */;
  %905 = reshape(%902, newshape=[15]) /* ty=Tensor[(15), float32] */;
  %906 = @func_1261(%903, %904, %905) /* ty=(Tensor[(11, 6, 9), float64], Tensor[(3, 15, 5), float32], Tensor[(15), float32], Tensor[(225), float32], Tensor[(3, 12, 5), float64]) */;
  %907 = @func_8913() /* ty=(Tensor[(3, 12, 5), float64],) */;
  %908 = %899.0;
  %909 = %906.1;
  %910 = %907.0;
  %911 = @func_10316() /* ty=Tensor[(3, 12, 5), float32] */;
  (%908, %909, meta[relay.Constant][38] /* ty=Tensor[(594), float64] */, %var_10366, %910, %911)
}

def @func_3223() -> (Tensor[(3, 12, 5), float64],) {
  @func_3221() /* ty=(Tensor[(3, 12, 5), float64],) */
}

def @func_7240() -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) {
  @func_7238() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */
}

def @func_808() -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), uint32], Tensor[(720), float32]) {
  %912 = @func_566() /* ty=Tensor[(3, 12, 5), float32] */;
  %913 = cast(%912, dtype="float64") /* ty=Tensor[(3, 12, 5), float64] */;
  %914 = cast(meta[relay.Constant][39] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %915 = log(%913) /* ty=Tensor[(3, 12, 5), float64] */;
  %916 = cast(%915, dtype="float64") /* ty=Tensor[(3, 12, 5), float64] */;
  %917 = reshape(%914, newshape=[9, 8, 10]) /* ty=Tensor[(9, 8, 10), float32] */;
  %918 = reshape(%916, newshape=[3, 12, 5]) /* ty=Tensor[(3, 12, 5), float64] */;
  %919 = @func_732(%917, %918) /* ty=(Tensor[(3, 12, 5), float32], Tensor[(9, 8, 10), float32], Tensor[(9, 8, 10), float64], Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float32]) */;
  %920 = %919.3;
  (%915, %920, meta[relay.Constant][39] /* ty=Tensor[(720), float32] */)
}

def @func_3851() -> Tensor[(720), float32] {
  %921 = @func_808() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), uint32], Tensor[(720), float32]) */;
  %921.2
}

def @func_7283() -> (Tensor[(3, 12, 5), float64], Tensor[(720), float32], Tensor[(3, 12, 5), float64]) {
  %928 = fn () -> (Tensor[(3, 12, 5), float64], Tensor[(720), float32], Tensor[(3, 12, 5), float64]) {
    %922 = @func_6679() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(7, 8, 13), float64]) */;
    %923 = @func_4327() /* ty=(Tensor[(720), float32], Tensor[(3, 12, 5), float64], Tensor[(7, 8, 13), float32]) */;
    %924 = @func_4820() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
    %925 = %922.0;
    %926 = %923.0;
    %927 = %924.1;
    (%925, %926, %927)
  };
  %928() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(720), float32], Tensor[(3, 12, 5), float64]) */
}

def @func_1265(%var_1262: Tensor[(11, 6, 9), float64], %var_1263: Tensor[(11, 6, 9), float64], %var_1264: Tensor[(15), float32]) -> (Tensor[(11, 6, 9), float64], Tensor[(3, 15, 5), float32], Tensor[(15), float32], Tensor[(225), float32], Tensor[(3, 12, 5), float64]) {
  %941 = fn (%var_1240: Tensor[(11, 6, 9), float64], %var_1241: Tensor[(11, 6, 9), float64], %var_1248: Tensor[(15), float32]) -> (Tensor[(11, 6, 9), float64], Tensor[(3, 15, 5), float32], Tensor[(15), float32], Tensor[(225), float32], Tensor[(3, 12, 5), float64]) {
    %929 = cast(%var_1241, dtype="float64") /* ty=Tensor[(11, 6, 9), float64] */;
    %930 = shape_of(%var_1240, dtype="int32") /* ty=Tensor[(3), int32] */;
    %931 = cast(%var_1240, dtype="float64") /* ty=Tensor[(11, 6, 9), float64] */;
    %932 = dyn.reshape(%929, %930, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %933 = cast(%var_1248, dtype="float32") /* ty=Tensor[(15), float32] */;
    %934 = cast(meta[relay.Constant][40] /* ty=Tensor[(225), float32] */, dtype="float32") /* ty=Tensor[(225), float32] */;
    %935 = reshape(%933, newshape=[3, 1, 5]) /* ty=Tensor[(3, 1, 5), float32] */;
    %936 = reshape(%934, newshape=[3, 15, 5]) /* ty=Tensor[(3, 15, 5), float32] */;
    %937 = @func_884() /* ty=(Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
    %938 = floor_mod(%931, %932) /* ty=Tensor[(11, 6, 9), float64] */;
    %939 = @func_208(%935, %936) /* ty=Tensor[(3, 15, 5), float32] */;
    %940 = %937.1;
    (%938, %939, %var_1248, meta[relay.Constant][40] /* ty=Tensor[(225), float32] */, %940)
  };
  %941(%var_1262, %var_1263, %var_1264) /* ty=(Tensor[(11, 6, 9), float64], Tensor[(3, 15, 5), float32], Tensor[(15), float32], Tensor[(225), float32], Tensor[(3, 12, 5), float64]) */
}

def @func_8868(%var_8867: Tensor[(8, 6, 15), float64]) -> (Tensor[(8, 6, 15), bool], Tensor[(3, 12, 5), int32]) {
  %950 = fn (%var_8857: Tensor[(8, 6, 15), float64]) -> (Tensor[(8, 6, 15), bool], Tensor[(3, 12, 5), int32]) {
    %942 = @func_7635() /* ty=(Tensor[(8, 6, 15), float64],) */;
    %943 = %942.0;
    %944 = cast(%var_8857, dtype="bool") /* ty=Tensor[(8, 6, 15), bool] */;
    %945 = shape_of(%943, dtype="int32") /* ty=Tensor[(3), int32] */;
    %946 = cast(%943, dtype="bool") /* ty=Tensor[(8, 6, 15), bool] */;
    %947 = dyn.reshape(%944, %945, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %948 = less(%946, %947) /* ty=Tensor[(8, 6, 15), bool] */;
    %949 = @func_8240() /* ty=Tensor[(3, 12, 5), int32] */;
    (%948, %949)
  };
  %950(%var_8867) /* ty=(Tensor[(8, 6, 15), bool], Tensor[(3, 12, 5), int32]) */
}

def @func_758() -> (Tensor[(3, 12, 5), float32],) {
  @func_756() /* ty=(Tensor[(3, 12, 5), float32],) */
}

def @func_9167() -> (Tensor[(3, 12, 5), float64],) {
  @func_9165() /* ty=(Tensor[(3, 12, 5), float64],) */
}

def @func_6344() -> Tensor[(3, 12, 5), float32] {
  %951 = fn () -> Tensor[(3, 12, 5), float32] {
    @func_3078() /* ty=Tensor[(3, 12, 5), float32] */
  };
  %951() /* ty=Tensor[(3, 12, 5), float32] */
}

def @func_3587(%var_3519: Tensor[(112), float64], %var_3562: Tensor[(15), float32], %var_3563: Tensor[(225), float32]) -> (Tensor[(3, 12, 5), float64], Tensor[(6, 30), float64], Tensor[(112), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32], Tensor[(15), float32], Tensor[(225), float64]) {
  %952 = cast(%var_3519, dtype="float64") /* ty=Tensor[(112), float64] */;
  %953 = reshape(%952, newshape=[8, 2, 7]) /* ty=Tensor[(8, 2, 7), float64] */;
  %954 = @func_946(%953) /* ty=(Tensor[(8, 2, 7), float64], Tensor[(3, 12, 5), float32], Tensor[(720), float32], Tensor[(6, 30), float64]) */;
  %955 = %954.3;
  %956 = cast(%955, dtype="float32") /* ty=Tensor[(6, 30), float32] */;
  %957 = reshape(%956, newshape=[3, 12, 5]) /* ty=Tensor[(3, 12, 5), float32] */;
  %958 = @func_2144(%957) /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(720), float32], Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float64]) */;
  %959 = cast(%var_3562, dtype="float32") /* ty=Tensor[(15), float32] */;
  %960 = cast(%var_3563, dtype="float32") /* ty=Tensor[(225), float32] */;
  %961 = reshape(%959, newshape=[15]) /* ty=Tensor[(15), float32] */;
  %962 = reshape(%960, newshape=[225]) /* ty=Tensor[(225), float32] */;
  %963 = @func_2677(%961, %962) /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 15, 5), float32], Tensor[(15), float32], Tensor[(225), float32], Tensor[(720), float32], Tensor[(3, 12, 5), float32]) */;
  %964 = cast(meta[relay.Constant][41] /* ty=Tensor[(225), float32] */, dtype="float64") /* ty=Tensor[(225), float64] */;
  %965 = shape_of(%var_3563, dtype="int32") /* ty=Tensor[(1), int32] */;
  %966 = cast(%var_3563, dtype="float64") /* ty=Tensor[(225), float64] */;
  %967 = dyn.reshape(%964, %965, newshape=[]) /* ty=Tensor[(?), float64] */;
  %968 = @func_275() /* ty=Tensor[(3, 12, 5), float64] */;
  %969 = %958.0;
  %970 = %963.5;
  %971 = mod(%966, %967) /* ty=Tensor[(225), float64] */;
  (%968, %955, %var_3519, %969, %970, %var_3562, %971)
}

def @func_9699() -> Tensor[(3, 12, 5), float64] {
  %972 = fn () -> Tensor[(3, 12, 5), float64] {
    @func_4471() /* ty=Tensor[(3, 12, 5), float64] */
  };
  %972() /* ty=Tensor[(3, 12, 5), float64] */
}

def @func_4327() -> (Tensor[(720), float32], Tensor[(3, 12, 5), float64], Tensor[(7, 8, 13), float32]) {
  %973 = @func_808() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), uint32], Tensor[(720), float32]) */;
  %974 = @func_2849() /* ty=(Tensor[(3, 12, 5), float64],) */;
  %975 = @func_3418() /* ty=(Tensor[(7, 8, 13), float32],) */;
  %976 = %973.2;
  %977 = %974.0;
  %978 = %975.0;
  (%976, %977, %978)
}

def @func_4244() -> (Tensor[(3, 12, 5), float32],) {
  %979 = @func_1541() /* ty=(Tensor[(3, 12, 5), float32],) */;
  %980 = %979.0;
  (%980,)
}

def @func_4820() -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) {
  %981 = @func_1665() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), int32]) */;
  %982 = @func_4471() /* ty=Tensor[(3, 12, 5), float64] */;
  %983 = %981.0;
  (%982, %983)
}

def @func_6895() -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) {
  %984 = @func_4244() /* ty=(Tensor[(3, 12, 5), float32],) */;
  %985 = @func_3221() /* ty=(Tensor[(3, 12, 5), float64],) */;
  %986 = %984.0;
  %987 = %985.0;
  (%986, %987)
}

def @func_610() -> (Tensor[(3, 12, 5), float32],) {
  @func_608() /* ty=(Tensor[(3, 12, 5), float32],) */
}

def @func_7788() -> Tensor[(3, 12, 5), float64] {
  %988 = @func_5368() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32]) */;
  %988.0
}

def @func_1573() -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) {
  %994 = fn () -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) {
    %989 = @func_364() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 15, 5), float32], Tensor[(15), float32], Tensor[(225), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
    %990 = @func_263() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
    %991 = %989.4;
    %992 = %990.0;
    %993 = @func_275() /* ty=Tensor[(3, 12, 5), float64] */;
    (%991, %992, %993)
  };
  %994() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */
}

def @func_6627(%var_6514: Tensor[(3, 12, 5), float64], %var_6573: Tensor[(720), float32]) -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), uint32], Tensor[(720), float32], Tensor[(3, 12, 5), float32]) {
  %995 = @func_4553() /* ty=(Tensor[(3, 12, 5), float64],) */;
  %996 = @func_4471() /* ty=Tensor[(3, 12, 5), float64] */;
  %997 = cast(%var_6514, dtype="float64") /* ty=Tensor[(3, 12, 5), float64] */;
  %998 = shape_of(%996, dtype="int32") /* ty=Tensor[(3), int32] */;
  %999 = cast(%996, dtype="float64") /* ty=Tensor[(3, 12, 5), float64] */;
  %1000 = dyn.reshape(%997, %998, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1001 = @func_3260() /* ty=(Tensor[(3, 12, 5), bool], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32]) */;
  %1002 = @func_2493() /* ty=(Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), int32]) */;
  %1003 = cast(%var_6573, dtype="float32") /* ty=Tensor[(720), float32] */;
  %1004 = @func_4848() /* ty=Tensor[(3, 12, 5), float32] */;
  %1005 = cast(%1004, dtype="float64") /* ty=Tensor[(3, 12, 5), float64] */;
  %1006 = reshape(%1003, newshape=[9, 8, 10]) /* ty=Tensor[(9, 8, 10), float32] */;
  %1007 = reshape(%1005, newshape=[3, 12, 5]) /* ty=Tensor[(3, 12, 5), float64] */;
  %1008 = @func_732(%1006, %1007) /* ty=(Tensor[(3, 12, 5), float32], Tensor[(9, 8, 10), float32], Tensor[(9, 8, 10), float64], Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float32]) */;
  %1009 = %995.0;
  %1010 = mod(%999, %1000) /* ty=Tensor[(3, 12, 5), float64] */;
  %1011 = %1001.1;
  %1012 = @func_3078() /* ty=Tensor[(3, 12, 5), float32] */;
  %1013 = %1002.0;
  %1014 = %1008.3;
  %1015 = @func_622() /* ty=Tensor[(3, 12, 5), float32] */;
  (%1009, %1010, %1011, %1012, %1004, %1013, %1014, %var_6573, %1015)
}

def @func_2493() -> (Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), int32]) {
  %1016 = @func_884() /* ty=(Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
  %1017 = @func_1987() /* ty=Tensor[(3, 12, 5), int32] */;
  %1018 = %1016.0;
  (%1017, %1018)
}

def @func_4021(%var_3990: Tensor[(180), float32]) -> (Tensor[(720), float32], Tensor[(720), float32], Tensor[(180), float32], Tensor[(3, 12, 5), float32]) {
  %1019 = @func_1454() /* ty=(Tensor[(720), float32],) */;
  %1020 = cast(%var_3990, dtype="float32") /* ty=Tensor[(180), float32] */;
  %1021 = reshape(%1020, newshape=[3, 12, 5]) /* ty=Tensor[(3, 12, 5), float32] */;
  %1022 = @func_2144(%1021) /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(720), float32], Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float64]) */;
  %1023 = @func_3013() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), bool], Tensor[(720), float64]) */;
  %1024 = %1019.0;
  %1025 = %1022.2;
  %1026 = %1023.0;
  (%1024, %1025, %var_3990, %1026)
}

def @func_9212() -> Tensor[(16, 9, 3), float32] {
  %1027 = cast(meta[relay.Constant][42] /* ty=Tensor[(16, 9, 3), float32] */, dtype="float32") /* ty=Tensor[(16, 9, 3), float32] */;
  asin(%1027) /* ty=Tensor[(16, 9, 3), float32] */
}

def @func_10185() -> (Tensor[(3, 12, 5), float64],) {
  @func_10183() /* ty=(Tensor[(3, 12, 5), float64],) */
}

def @func_5116() -> Tensor[(3, 12, 5), uint32] {
  %1028 = @func_1364() /* ty=(Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float64]) */;
  %1028.0
}

def @func_9778(%var_9776: Tensor[(6, 2), float32], %var_9777: Tensor[(168), float32]) -> (Tensor[(11, 5, 15), float32], Tensor[(3, 12, 5), float32], Tensor[(1, 3, 4), float32], Tensor[(6, 2), float32], Tensor[(168), float32]) {
  %1039 = fn (%var_9772: Tensor[(6, 2), float32], %var_9773: Tensor[(168), float32]) -> (Tensor[(11, 5, 15), float32], Tensor[(3, 12, 5), float32], Tensor[(1, 3, 4), float32], Tensor[(6, 2), float32], Tensor[(168), float32]) {
    %1029 = @func_4654() /* ty=(Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(11, 5, 15), float32]) */;
    %1030 = @func_2927() /* ty=(Tensor[(3, 12, 5), float32],) */;
    %1031 = cast(%var_9772, dtype="float32") /* ty=Tensor[(6, 2), float32] */;
    %1032 = cast(%var_9773, dtype="float32") /* ty=Tensor[(168), float32] */;
    %1033 = reshape(%1031, newshape=[1, 3, 4]) /* ty=Tensor[(1, 3, 4), float32] */;
    %1034 = reshape(%1032, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float32] */;
    %1035 = @func_1737(%1033, %1034) /* ty=(Tensor[(14, 3, 4), float32], Tensor[(1, 3, 4), float32]) */;
    %1036 = %1029.3;
    %1037 = %1030.0;
    %1038 = %1035.1;
    (%1036, %1037, %1038, %var_9772, %var_9773)
  };
  %1039(%var_9776, %var_9777) /* ty=(Tensor[(11, 5, 15), float32], Tensor[(3, 12, 5), float32], Tensor[(1, 3, 4), float32], Tensor[(6, 2), float32], Tensor[(168), float32]) */
}

def @func_9237() -> (Tensor[(15), float32], Tensor[(3, 12, 5), float32]) {
  %1044 = fn () -> (Tensor[(15), float32], Tensor[(3, 12, 5), float32]) {
    %1040 = @func_5491() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(11, 6, 9), float64], Tensor[(198, 3), float64], Tensor[(15), float32], Tensor[(15), float32], Tensor[(75, 3), float32], Tensor[(6, 7, 3), float32], Tensor[(126), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32]) */;
    %1041 = @func_3165() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
    %1042 = %1040.4;
    %1043 = %1041.0;
    (%1042, %1043)
  };
  %1044() /* ty=(Tensor[(15), float32], Tensor[(3, 12, 5), float32]) */
}

def @func_6129() -> (Tensor[(3, 12, 5), float32],) {
  @func_6127() /* ty=(Tensor[(3, 12, 5), float32],) */
}

def @func_1522() -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) {
  %1045 = @func_808() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), uint32], Tensor[(720), float32]) */;
  %1046 = %1045.0;
  %1047 = cast(%1046, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
  %1048 = rsqrt(%1047) /* ty=Tensor[(3, 12, 5), float32] */;
  %1049 = cast(%1048, dtype="float64") /* ty=Tensor[(3, 12, 5), float64] */;
  %1050 = cast(%1048, dtype="float64") /* ty=Tensor[(3, 12, 5), float64] */;
  %1051 = asin(%1049) /* ty=Tensor[(3, 12, 5), float64] */;
  %1052 = cos(%1050) /* ty=Tensor[(3, 12, 5), float64] */;
  (%1051, %1052)
}

def @func_1466() -> Tensor[(3, 12, 5), float32] {
  @func_1464() /* ty=Tensor[(3, 12, 5), float32] */
}

def @func_7501() -> (Tensor[(3, 12, 5), float64],) {
  %1055 = fn () -> (Tensor[(3, 12, 5), float64],) {
    %1053 = @func_1971() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
    %1054 = %1053.0;
    (%1054,)
  };
  %1055() /* ty=(Tensor[(3, 12, 5), float64],) */
}

def @func_2495() -> (Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), int32]) {
  @func_2493() /* ty=(Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), int32]) */
}

def @func_5817() -> Tensor[(3, 12, 5), float32] {
  @func_5756() /* ty=Tensor[(3, 12, 5), float32] */
}

def @func_2600() -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(15), float32]) {
  %1064 = fn () -> (Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(15), float32]) {
    %1056 = @func_756() /* ty=(Tensor[(3, 12, 5), float32],) */;
    %1057 = @func_1572() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
    %1058 = @func_263() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
    %1059 = @func_364() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 15, 5), float32], Tensor[(15), float32], Tensor[(225), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
    %1060 = %1056.0;
    %1061 = %1057.1;
    %1062 = %1058.1;
    %1063 = %1059.2;
    (%1060, %1061, %1062, %1063)
  };
  %1064() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(15), float32]) */
}

def @func_948(%var_947: Tensor[(8, 2, 7), float64]) -> (Tensor[(8, 2, 7), float64], Tensor[(3, 12, 5), float32], Tensor[(720), float32], Tensor[(6, 30), float64]) {
  %1073 = fn (%var_929: Tensor[(8, 2, 7), float64]) -> (Tensor[(8, 2, 7), float64], Tensor[(3, 12, 5), float32], Tensor[(720), float32], Tensor[(6, 30), float64]) {
    %1065 = cast(%var_929, dtype="float64") /* ty=Tensor[(8, 2, 7), float64] */;
    %1066 = cast(meta[relay.Constant][43] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
    %1067 = cast(meta[relay.Constant][44] /* ty=Tensor[(6, 30), float64] */, dtype="float64") /* ty=Tensor[(6, 30), float64] */;
    %1068 = reshape(%1066, newshape=[9, 8, 10]) /* ty=Tensor[(9, 8, 10), float32] */;
    %1069 = reshape(%1067, newshape=[3, 12, 5]) /* ty=Tensor[(3, 12, 5), float64] */;
    %1070 = @func_732(%1068, %1069) /* ty=(Tensor[(3, 12, 5), float32], Tensor[(9, 8, 10), float32], Tensor[(9, 8, 10), float64], Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float32]) */;
    %1071 = atan(%1065) /* ty=Tensor[(8, 2, 7), float64] */;
    %1072 = %1070.4;
    (%1071, %1072, meta[relay.Constant][43] /* ty=Tensor[(720), float32] */, meta[relay.Constant][44] /* ty=Tensor[(6, 30), float64] */)
  };
  %1073(%var_947) /* ty=(Tensor[(8, 2, 7), float64], Tensor[(3, 12, 5), float32], Tensor[(720), float32], Tensor[(6, 30), float64]) */
}

def @func_4270(%var_4262: Tensor[(30, 6), float32]) -> (Tensor[(15), float32], Tensor[(3, 12, 5), float32], Tensor[(30, 6), float32], Tensor[(10, 2, 5), int64], Tensor[(100), float32]) {
  %1074 = @func_2599() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(15), float32]) */;
  %1075 = cast(%var_4262, dtype="float32") /* ty=Tensor[(30, 6), float32] */;
  %1076 = reshape(%1075, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %1077 = @func_4021(%1076) /* ty=(Tensor[(720), float32], Tensor[(720), float32], Tensor[(180), float32], Tensor[(3, 12, 5), float32]) */;
  %1078 = cast(meta[relay.Constant][45] /* ty=Tensor[(100), float32] */, dtype="float32") /* ty=Tensor[(100), float32] */;
  %1079 = reshape(%1078, newshape=[10, 2, 5]) /* ty=Tensor[(10, 2, 5), float32] */;
  %1080 = @func_4103(%1079) /* ty=(Tensor[(10, 2, 5), int64],) */;
  %1081 = %1074.3;
  %1082 = %1077.3;
  %1083 = %1080.0;
  (%1081, %1082, %var_4262, %1083, meta[relay.Constant][45] /* ty=Tensor[(100), float32] */)
}

def @func_5039() -> (Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) {
  @func_5037() /* ty=(Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */
}

def @func_3400(%var_3390: Tensor[(12, 7, 13), float64], %var_3391: Tensor[(12, 7, 13), float64]) -> (Tensor[(12, 7, 13), bool],) {
  %1084 = cast(%var_3391, dtype="bool") /* ty=Tensor[(12, 7, 13), bool] */;
  %1085 = shape_of(%var_3390, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1086 = cast(%var_3390, dtype="bool") /* ty=Tensor[(12, 7, 13), bool] */;
  %1087 = dyn.reshape(%1084, %1085, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1088 = greater(%1086, %1087) /* ty=Tensor[(12, 7, 13), bool] */;
  (%1088,)
}

def @func_5084() -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), uint32]) {
  %1095 = fn () -> (Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), uint32]) {
    %1089 = @func_1522() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64]) */;
    %1090 = @func_2599() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64], Tensor[(15), float32]) */;
    %1091 = @func_808() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), uint32], Tensor[(720), float32]) */;
    %1092 = %1089.1;
    %1093 = %1090.1;
    %1094 = %1091.1;
    (%1092, %1093, %1094)
  };
  %1095() /* ty=(Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), uint32]) */
}

def @func_5518() -> Tensor[(3, 12, 5), float64] {
  @func_5516() /* ty=Tensor[(3, 12, 5), float64] */
}

def @func_275() -> Tensor[(3, 12, 5), float64] {
  %1096 = @func_263() /* ty=(Tensor[(3, 12, 5), float32], Tensor[(3, 12, 5), float64]) */;
  %1096.1
}

def @func_9126() -> Tensor[(3, 12, 5), uint32] {
  %1098 = fn () -> Tensor[(3, 12, 5), uint32] {
    %1097 = @func_4654() /* ty=(Tensor[(3, 12, 5), uint32], Tensor[(3, 12, 5), float64], Tensor[(3, 12, 5), float64], Tensor[(11, 5, 15), float32]) */;
    %1097.0
  };
  %1098() /* ty=Tensor[(3, 12, 5), uint32] */
}

def @func_7169() -> Tensor[(3, 12, 5), float32] {
  %1102 = fn () -> Tensor[(3, 12, 5), float32] {
    %1099 = @func_2493() /* ty=(Tensor[(3, 12, 5), int32], Tensor[(3, 12, 5), int32]) */;
    %1100 = %1099.1;
    %1101 = cast(%1100, dtype="float32") /* ty=Tensor[(3, 12, 5), float32] */;
    sin(%1101) /* ty=Tensor[(3, 12, 5), float32] */
  };
  %1102() /* ty=Tensor[(3, 12, 5), float32] */
}

def @func_7790() -> Tensor[(3, 12, 5), float64] {
  @func_7788() /* ty=Tensor[(3, 12, 5), float64] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen392/build/output.py:3571: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen392/build/output.py", line 3576, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(80) tvmgen_default_fused_acosh_kernel0(float* __restrict__ T_acosh, float* __restrict__ placeholder) {
  T_acosh[(((int)threadIdx.x))] = acoshf(placeholder[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


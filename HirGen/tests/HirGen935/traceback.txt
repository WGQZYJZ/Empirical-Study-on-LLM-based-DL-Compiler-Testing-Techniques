==========mod==========
#[version = "0.0.5"]
def @func_12470() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %0 = @func_7944() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %1 = @func_2541() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(882), float32]) */;
  %2 = @func_11196() /* ty=Tensor[(11, 1, 16), float64] */;
  %3 = %0.0;
  %4 = %1.1;
  (%2, %3, %4)
}

def @func_1614() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %5 = @func_1518() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %6 = %5.0;
  %7 = @func_1529() /* ty=Tensor[(11, 1, 16), float64] */;
  (%6, %7)
}

def @func_7672(%var_7621: Tensor[(8, 8, 7), bool], %var_7633: Tensor[(882), float64]) -> (Tensor[(8, 8, 7), bool], Tensor[(882, 1), float64], Tensor[(882), float64], Tensor[(11, 1, 16), float64], Tensor[(1080), float32]) {
  %8 = cast(meta[relay.Constant][0] /* ty=Tensor[(8, 8, 7), bool] */, dtype="bool") /* ty=Tensor[(8, 8, 7), bool] */;
  %9 = shape_of(%var_7621, dtype="int32") /* ty=Tensor[(3), int32] */;
  %10 = cast(%var_7621, dtype="bool") /* ty=Tensor[(8, 8, 7), bool] */;
  %11 = dyn.reshape(%8, %9, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %12 = cast(%var_7633, dtype="float64") /* ty=Tensor[(882), float64] */;
  %13 = reshape(%12, newshape=[882, 1]) /* ty=Tensor[(882, 1), float64] */;
  %14 = @func_4959(%13) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(11, ?, 16), int16], Tensor[(882, 1), float64], Tensor[(11, 1, 16), float64]) */;
  %15 = @func_7279() /* ty=(Tensor[(1080), float32],) */;
  %16 = logical_or(%10, %11) /* ty=Tensor[(8, 8, 7), bool] */;
  %17 = %14.3;
  %18 = @func_2719() /* ty=Tensor[(11, 1, 16), float64] */;
  %19 = %15.0;
  (%16, %17, %var_7633, %18, %19)
}

def @func_7944() -> (Tensor[(11, 1, 16), float64],) {
  %20 = @func_5988() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %21 = %20.0;
  (%21,)
}

def @func_11690(%var_11642: Tensor[(2, 14, 15), float32], %var_11675: Tensor[(2, 14, 15), float32]) -> (Tensor[(11, 1, 16), float64], Tensor[(2, 14, 15), int16], Tensor[(11, 1, 16), float64]) {
  %22 = cast(%var_11642, dtype="float32") /* ty=Tensor[(2, 14, 15), float32] */;
  %23 = asinh(%22) /* ty=Tensor[(2, 14, 15), float32] */;
  %24 = cast(%var_11642, dtype="float32") /* ty=Tensor[(2, 14, 15), float32] */;
  %25 = shape_of(%23, dtype="int32") /* ty=Tensor[(3), int32] */;
  %26 = cast(%23, dtype="float32") /* ty=Tensor[(2, 14, 15), float32] */;
  %27 = dyn.reshape(%24, %25, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %28 = divide(%26, %27) /* ty=Tensor[(2, 14, 15), float32] */;
  %29 = cast(%28, dtype="float32") /* ty=Tensor[(2, 14, 15), float32] */;
  %30 = atan(%29) /* ty=Tensor[(2, 14, 15), float32] */;
  %31 = cast(%var_11675, dtype="int16") /* ty=Tensor[(2, 14, 15), int16] */;
  %32 = shape_of(%30, dtype="int32") /* ty=Tensor[(3), int32] */;
  %33 = cast(%30, dtype="int16") /* ty=Tensor[(2, 14, 15), int16] */;
  %34 = dyn.reshape(%31, %32, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %35 = @func_11429() /* ty=Tensor[(11, 1, 16), float64] */;
  %36 = left_shift(%33, %34) /* ty=Tensor[(2, 14, 15), int16] */;
  %37 = @func_5898() /* ty=Tensor[(11, 1, 16), float64] */;
  (%35, %36, %37)
}

def @func_2427() -> (Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64], Tensor[(56), float64], Tensor[(98, 9), float64]) {
  %38 = @func_2148() /* ty=Tensor[(11, 1, 16), float64] */;
  %39 = cast(%38, dtype="float32") /* ty=Tensor[(11, 1, 16), float32] */;
  %40 = cast(meta[relay.Constant][1] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %41 = cast(meta[relay.Constant][2] /* ty=Tensor[(98, 9), float64] */, dtype="float64") /* ty=Tensor[(98, 9), float64] */;
  %42 = reshape(%40, newshape=[7, 8, 1]) /* ty=Tensor[(7, 8, 1), float64] */;
  %43 = reshape(%41, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %44 = @func_2216(%42, %43) /* ty=(Tensor[(7, 8, 1), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(882), float64]) */;
  %45 = acosh(%39) /* ty=Tensor[(11, 1, 16), float32] */;
  %46 = %44.1;
  (%45, %46, meta[relay.Constant][1] /* ty=Tensor[(56), float64] */, meta[relay.Constant][2] /* ty=Tensor[(98, 9), float64] */)
}

def @func_12868() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, ?, 16), int8]) {
  %47 = @func_1648() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %48 = @func_2388() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) */;
  %49 = @func_8127() /* ty=(Tensor[(11, ?, 16), int8], Tensor[(11, 1, 16), float64]) */;
  %50 = %47.0;
  %51 = %48.1;
  %52 = %49.0;
  (%50, %51, %52)
}

def @func_9612() -> Tensor[(11, 1, 16), float64] {
  %53 = @func_8539() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %53.0
}

def @func_1676() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %54 = @func_1518() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %55 = @func_1518() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %56 = %54.0;
  %57 = %55.0;
  (%56, %57)
}

def @func_2788() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %58 = @func_1676() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %59 = @func_1518() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %60 = %58.0;
  %61 = %59.0;
  (%60, %61)
}

def @func_10520() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int8], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %62 = @func_8127() /* ty=(Tensor[(11, ?, 16), int8], Tensor[(11, 1, 16), float64]) */;
  %63 = @func_4530() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %64 = @func_9648() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %65 = @func_6434() /* ty=Tensor[(11, 1, 16), float64] */;
  %66 = @func_9612() /* ty=Tensor[(11, 1, 16), float64] */;
  %67 = %62.0;
  %68 = %63.0;
  %69 = %64.2;
  (%65, %66, %67, %68, %69)
}

def @func_3760() -> (Tensor[(11, 1, 16), float64],) {
  %70 = @func_1446() /* ty=Tensor[(11, 1, 16), float64] */;
  (%70,)
}

def @func_12416(%var_12286: float64, %var_12365: Tensor[(2, 1144), float64]) -> (Tensor[(15, 1), float64], Tensor[(882), float32], Tensor[(14, 9, 7), uint32], Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int16], Tensor[(2, 1144), bool], Tensor[(5, 16, 8), int64], Tensor[(640), int64], Tensor[(11, 1, 16), float64]) {
  %71 = cast(%var_12286, dtype="float64") /* ty=float64 */;
  %72 = cast(meta[relay.Constant][3] /* ty=Tensor[(15, 1), float64] */, dtype="float64") /* ty=Tensor[(15, 1), float64] */;
  %73 = @func_2541() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(882), float32]) */;
  %74 = %73.2;
  %75 = cast(%74, dtype="float64") /* ty=Tensor[(882), float64] */;
  %76 = reshape(%75, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %77 = @func_1830(%76) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(14, 9, 7), uint32], Tensor[(11, 1, 16), float64], Tensor[(14, 9, 7), bool], Tensor[(11, 1, 16), float64]) */;
  %78 = @func_9202() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %79 = cast(%var_12365, dtype="float64") /* ty=Tensor[(2, 1144), float64] */;
  %80 = reshape(%79, newshape=[11, 13, 16]) /* ty=Tensor[(11, 13, 16), float64] */;
  %81 = @func_4296(%80) /* ty=(Tensor[(11, 13, 16), bool], Tensor[(11, 1, 16), float64], Tensor[(4, 11, 15), float32], Tensor[(660), float32], Tensor[(11, 13, 16), float64]) */;
  %82 = %81.0;
  %83 = cast(%82, dtype="bool") /* ty=Tensor[(11, 13, 16), bool] */;
  %84 = shape_of(%var_12365, dtype="int32") /* ty=Tensor[(2), int32] */;
  %85 = cast(%var_12365, dtype="bool") /* ty=Tensor[(2, 1144), bool] */;
  %86 = dyn.reshape(%83, %84, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %87 = cast(meta[relay.Constant][4] /* ty=Tensor[(640), int64] */, dtype="int64") /* ty=Tensor[(640), int64] */;
  %88 = reshape(%87, newshape=[5, 16, 8]) /* ty=Tensor[(5, 16, 8), int64] */;
  %89 = @func_5402(%88) /* ty=(Tensor[(5, 16, 8), int64],) */;
  %90 = @func_8539() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %91 = divide(%71, %72) /* ty=Tensor[(15, 1), float64] */;
  %92 = %77.3;
  %93 = %78.0;
  %94 = @func_10800() /* ty=Tensor[(11, ?, 16), int16] */;
  %95 = logical_and(%85, %86) /* ty=Tensor[(2, 1144), bool] */;
  %96 = %89.0;
  %97 = %90.0;
  (%91, %74, %92, %93, %94, %95, %96, meta[relay.Constant][4] /* ty=Tensor[(640), int64] */, %97)
}

def @func_14675(%var_14540: Tensor[(9, 11, 5), float64]) -> (Tensor[(9, 11, 5), float32], Tensor[(9, 11, 5), float32], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(9, 11, 5), bool], Tensor[(9, 11, 5), float32], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %98 = @func_6757() /* ty=(Tensor[(11, ?, 16), int8], Tensor[(9, 11, 5), int16], float32, Tensor[(495), float32]) */;
  %99 = %98.1;
  %100 = cast(%99, dtype="float32") /* ty=Tensor[(9, 11, 5), float32] */;
  %101 = cast(%99, dtype="float32") /* ty=Tensor[(9, 11, 5), float32] */;
  %102 = @func_4668() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %103 = @func_1368() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) */;
  %104 = cast(%99, dtype="float64") /* ty=Tensor[(9, 11, 5), float64] */;
  %105 = log2(%104) /* ty=Tensor[(9, 11, 5), float64] */;
  %106 = cast(%var_14540, dtype="bool") /* ty=Tensor[(9, 11, 5), bool] */;
  %107 = shape_of(%105, dtype="int32") /* ty=Tensor[(3), int32] */;
  %108 = cast(%105, dtype="bool") /* ty=Tensor[(9, 11, 5), bool] */;
  %109 = dyn.reshape(%106, %107, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %110 = greater(%108, %109) /* ty=Tensor[(9, 11, 5), bool] */;
  %111 = cast(%110, dtype="bool") /* ty=Tensor[(9, 11, 5), bool] */;
  %112 = shape_of(%99, dtype="int32") /* ty=Tensor[(3), int32] */;
  %113 = cast(%99, dtype="bool") /* ty=Tensor[(9, 11, 5), bool] */;
  %114 = dyn.reshape(%111, %112, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %115 = cast(%105, dtype="float32") /* ty=Tensor[(9, 11, 5), float32] */;
  %116 = asin(%115) /* ty=Tensor[(9, 11, 5), float32] */;
  %117 = cast(%116, dtype="float32") /* ty=Tensor[(9, 11, 5), float32] */;
  %118 = @func_11413() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %119 = @func_9306() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %120 = tan(%100) /* ty=Tensor[(9, 11, 5), float32] */;
  %121 = log10(%101) /* ty=Tensor[(9, 11, 5), float32] */;
  %122 = %102.0;
  %123 = @func_8492() /* ty=Tensor[(11, 1, 16), float64] */;
  %124 = %103.1;
  %125 = greater_equal(%113, %114) /* ty=Tensor[(9, 11, 5), bool] */;
  %126 = log(%117) /* ty=Tensor[(9, 11, 5), float32] */;
  %127 = %118.0;
  %128 = %119.1;
  %129 = @func_7302() /* ty=Tensor[(11, 1, 16), float64] */;
  %130 = @func_5652() /* ty=Tensor[(11, 1, 16), float64] */;
  (%120, %121, %122, %123, %124, %125, %126, %127, %128, %129, %130)
}

def @func_8835(%var_8805: Tensor[(18, 60), float32]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(18, 60), float32], Tensor[(11, ?, 16), int8]) {
  %131 = cast(%var_8805, dtype="float32") /* ty=Tensor[(18, 60), float32] */;
  %132 = reshape(%131, newshape=[1080]) /* ty=Tensor[(1080), float32] */;
  %133 = @func_8484(%132) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(1080), float32], Tensor[(882, 1), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(98, 9), uint8], Tensor[(700), float32]) */;
  %134 = @func_5043() /* ty=Tensor[(11, 1, 16), float64] */;
  %135 = @func_6434() /* ty=Tensor[(11, 1, 16), float64] */;
  %136 = %133.0;
  %137 = @func_5594() /* ty=Tensor[(11, ?, 16), int8] */;
  (%134, %135, %136, %var_8805, %137)
}

def @func_8418() -> Tensor[(11, 1, 16), float64] {
  %138 = @func_3456() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(1080), float32]) */;
  %138.1
}

def @func_13381(%var_13346: Tensor[(10, 4, 2), uint64], %var_13347: Tensor[(10, 4, 2), uint64]) -> (Tensor[(10, 4, 2), bool], Tensor[(10, 16, 12), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(10, 16, 12), uint8]) {
  %139 = cast(%var_13347, dtype="bool") /* ty=Tensor[(10, 4, 2), bool] */;
  %140 = shape_of(%var_13346, dtype="int32") /* ty=Tensor[(3), int32] */;
  %141 = cast(%var_13346, dtype="bool") /* ty=Tensor[(10, 4, 2), bool] */;
  %142 = dyn.reshape(%139, %140, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %143 = cast(meta[relay.Constant][5] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %144 = reshape(%143, newshape=[10, 16, 12]) /* ty=Tensor[(10, 16, 12), float64] */;
  %145 = @func_7196(%144) /* ty=(Tensor[(10, 16, 12), float64],) */;
  %146 = @func_10024() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %147 = cast(meta[relay.Constant][5] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %148 = reshape(%147, newshape=[10, 16, 12]) /* ty=Tensor[(10, 16, 12), float64] */;
  %149 = @func_7196(%148) /* ty=(Tensor[(10, 16, 12), float64],) */;
  %150 = %149.0;
  %151 = cast(meta[relay.Constant][5] /* ty=Tensor[(1920), float64] */, dtype="uint8") /* ty=Tensor[(1920), uint8] */;
  %152 = shape_of(%150, dtype="int32") /* ty=Tensor[(3), int32] */;
  %153 = cast(%150, dtype="uint8") /* ty=Tensor[(10, 16, 12), uint8] */;
  %154 = dyn.reshape(%151, %152, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %155 = less_equal(%141, %142) /* ty=Tensor[(10, 4, 2), bool] */;
  %156 = %145.0;
  %157 = %146.0;
  %158 = @func_3472() /* ty=Tensor[(11, 1, 16), float64] */;
  %159 = bitwise_and(%153, %154) /* ty=Tensor[(10, 16, 12), uint8] */;
  (%155, %156, %157, %158, %159)
}

def @func_1997() -> (Tensor[(11, 1, 16), float64],) {
  %160 = @func_1089() /* ty=Tensor[(11, 1, 16), float64] */;
  (%160,)
}

def @func_5821() -> Tensor[(11, ?, 16), int16] {
  %161 = @func_3385() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %162 = %161.1;
  %163 = @func_3626() /* ty=Tensor[(11, 1, 16), float64] */;
  %164 = cast(%163, dtype="int16") /* ty=Tensor[(11, 1, 16), int16] */;
  %165 = shape_of(%162, dtype="int32") /* ty=Tensor[(3), int32] */;
  %166 = cast(%162, dtype="int16") /* ty=Tensor[(11, 1, 16), int16] */;
  %167 = dyn.reshape(%164, %165, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_or(%166, %167) /* ty=Tensor[(11, ?, 16), int16] */
}

def @func_11262() -> (Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int8]) {
  %168 = @func_4826() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %169 = @func_10077() /* ty=(Tensor[(11, ?, 16), int8], Tensor[(11, 1, 16), float64], Tensor[(1080), float32]) */;
  %170 = %168.1;
  %171 = %169.0;
  (%170, %171)
}

def @func_4563() -> (Tensor[(11, 1, 16), float64],) {
  %172 = @func_3760() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %173 = %172.0;
  (%173,)
}

def @func_5764() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) {
  %174 = @func_5711() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %175 = @func_5126() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %176 = %174.0;
  %177 = %175.1;
  (%176, %177)
}

def @func_5219(%var_5193: Tensor[(98, 9), float64], %var_5209: Tensor[(6, 180), float32]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(98, 9), float64], Tensor[(14, 9, 7), float64], Tensor[(6, 180), float32], Tensor[(11, 1, 16), float64]) {
  %178 = @func_2388() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) */;
  %179 = @func_4530() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %180 = cast(%var_5193, dtype="float64") /* ty=Tensor[(98, 9), float64] */;
  %181 = reshape(%180, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %182 = @func_1830(%181) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(14, 9, 7), uint32], Tensor[(11, 1, 16), float64], Tensor[(14, 9, 7), bool], Tensor[(11, 1, 16), float64]) */;
  %183 = cast(%var_5209, dtype="float32") /* ty=Tensor[(6, 180), float32] */;
  %184 = cast(%var_5193, dtype="float64") /* ty=Tensor[(98, 9), float64] */;
  %185 = reshape(%183, newshape=[6, 15, 12]) /* ty=Tensor[(6, 15, 12), float32] */;
  %186 = reshape(%184, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %187 = @func_1409(%185, %186) /* ty=(Tensor[(6, 15, 12), float32], Tensor[(14, 9, 7), float64], Tensor[(882), float64]) */;
  %188 = @func_2388() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) */;
  %189 = %178.0;
  %190 = %179.0;
  %191 = %182.6;
  %192 = %187.1;
  %193 = %188.0;
  (%189, %190, %191, %var_5193, %192, %var_5209, %193)
}

def @func_9532() -> (Tensor[(11, 1, 16), float64],) {
  %194 = @func_8290() /* ty=Tensor[(11, 1, 16), float64] */;
  (%194,)
}

def @func_3087(%var_3063: Tensor[(700), float32]) -> (Tensor[(11, ?, 16), int64], Tensor[(700), float32], Tensor[(98, 9), uint8], Tensor[(11, 1, 16), float64]) {
  %195 = @func_2427() /* ty=(Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64], Tensor[(56), float64], Tensor[(98, 9), float64]) */;
  %196 = %195.3;
  %197 = cast(%196, dtype="float64") /* ty=Tensor[(98, 9), float64] */;
  %198 = cast(%var_3063, dtype="float32") /* ty=Tensor[(700), float32] */;
  %199 = reshape(%197, newshape=[98, 9]) /* ty=Tensor[(98, 9), float64] */;
  %200 = reshape(%198, newshape=[10, 70]) /* ty=Tensor[(10, 70), float32] */;
  %201 = @func_2670(%199, %200) /* ty=(Tensor[(14, 10, 5), float32], Tensor[(10, 70), float32], Tensor[(11, 1, 16), float64], Tensor[(98, 9), float32], Tensor[(98, 9), float32]) */;
  %202 = %201.4;
  %203 = cast(%202, dtype="float64") /* ty=Tensor[(98, 9), float64] */;
  %204 = sqrt(%203) /* ty=Tensor[(98, 9), float64] */;
  %205 = cast(%196, dtype="bool") /* ty=Tensor[(98, 9), bool] */;
  %206 = shape_of(%204, dtype="int32") /* ty=Tensor[(2), int32] */;
  %207 = cast(%204, dtype="bool") /* ty=Tensor[(98, 9), bool] */;
  %208 = dyn.reshape(%205, %206, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %209 = less_equal(%207, %208) /* ty=Tensor[(98, 9), bool] */;
  %210 = cast(%202, dtype="uint8") /* ty=Tensor[(98, 9), uint8] */;
  %211 = shape_of(%209, dtype="int32") /* ty=Tensor[(2), int32] */;
  %212 = cast(%209, dtype="uint8") /* ty=Tensor[(98, 9), uint8] */;
  %213 = dyn.reshape(%210, %211, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %214 = @func_2788() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %215 = @func_2467() /* ty=Tensor[(11, ?, 16), int64] */;
  %216 = logical_xor(%212, %213) /* ty=Tensor[(98, 9), uint8] */;
  %217 = %214.0;
  (%215, %var_3063, %216, %217)
}

def @func_12934() -> Tensor[(11, ?, 16), int8] {
  %218 = @func_8127() /* ty=(Tensor[(11, ?, 16), int8], Tensor[(11, 1, 16), float64]) */;
  %218.0
}

def @func_3247(%var_3221: Tensor[(11, 5, 16), float64]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, 5, 16), int64], Tensor[(11, 1, 16), float64]) {
  %219 = @func_1997() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %220 = @func_2148() /* ty=Tensor[(11, 1, 16), float64] */;
  %221 = cast(%220, dtype="int64") /* ty=Tensor[(11, 1, 16), int64] */;
  %222 = cast(%var_3221, dtype="int64") /* ty=Tensor[(11, 5, 16), int64] */;
  %223 = @func_2308() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64]) */;
  %224 = %219.0;
  %225 = multiply(%221, %222) /* ty=Tensor[(11, 5, 16), int64] */;
  %226 = %223.1;
  (%224, %225, %226)
}

def @func_1368() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) {
  %227 = @func_1060() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %228 = @func_1060() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %229 = %228.0;
  %230 = cast(%229, dtype="float32") /* ty=Tensor[(11, 1, 16), float32] */;
  %231 = asinh(%230) /* ty=Tensor[(11, 1, 16), float32] */;
  %232 = cast(%231, dtype="float32") /* ty=Tensor[(11, 1, 16), float32] */;
  %233 = %227.0;
  %234 = log10(%232) /* ty=Tensor[(11, 1, 16), float32] */;
  (%233, %234)
}

def @func_12092() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %235 = @func_4826() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %236 = @func_8028() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %237 = @func_8200() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %238 = %235.1;
  %239 = %236.2;
  %240 = %237.0;
  %241 = @func_11196() /* ty=Tensor[(11, 1, 16), float64] */;
  (%238, %239, %240, %241)
}

def @func_10444() -> Tensor[(11, 1, 16), float64] {
  %242 = @func_9648() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %242.2
}

def @func_12501() -> (Tensor[(11, 1, 16), float32],) {
  %243 = @func_9989() /* ty=Tensor[(11, 1, 16), float32] */;
  (%243,)
}

def @func_9266(%var_9253: Tensor[(7, 13, 10), int64], %var_9254: Tensor[(7, 13, 10), int64]) -> (Tensor[(7, 13, 10), int64], Tensor[(7, 13, 10), float32]) {
  %244 = cast(%var_9254, dtype="int64") /* ty=Tensor[(7, 13, 10), int64] */;
  %245 = shape_of(%var_9253, dtype="int32") /* ty=Tensor[(3), int32] */;
  %246 = cast(%var_9253, dtype="int64") /* ty=Tensor[(7, 13, 10), int64] */;
  %247 = dyn.reshape(%244, %245, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %248 = cast(%var_9254, dtype="float64") /* ty=Tensor[(7, 13, 10), float64] */;
  %249 = sin(%248) /* ty=Tensor[(7, 13, 10), float64] */;
  %250 = cast(%249, dtype="float32") /* ty=Tensor[(7, 13, 10), float32] */;
  %251 = bitwise_xor(%246, %247) /* ty=Tensor[(7, 13, 10), int64] */;
  %252 = rsqrt(%250) /* ty=Tensor[(7, 13, 10), float32] */;
  (%251, %252)
}

def @func_8539() -> (Tensor[(11, 1, 16), float64],) {
  %253 = @func_8230() /* ty=Tensor[(11, 1, 16), float64] */;
  (%253,)
}

def @func_11450() -> Tensor[(11, 1, 16), float64] {
  @func_8290() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_9989() -> Tensor[(11, 1, 16), float32] {
  %254 = @func_2388() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) */;
  %254.1
}

def @func_3472() -> Tensor[(11, 1, 16), float64] {
  %255 = @func_1865() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) */;
  %255.0
}

def @func_10981() -> Tensor[(11, 1, 16), float64] {
  @func_6832() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_9084() -> (Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), bool], Tensor[(1080), float32]) {
  %256 = cast(meta[relay.Constant][6] /* ty=Tensor[(1080), float32] */, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %257 = reshape(%256, newshape=[3, 360]) /* ty=Tensor[(3, 360), float32] */;
  %258 = @func_3018(%257) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), bool], Tensor[(11, ?, 16), float64], Tensor[(3, 360), float32]) */;
  %259 = @func_1529() /* ty=Tensor[(11, 1, 16), float64] */;
  %260 = %258.1;
  (%259, %260, meta[relay.Constant][6] /* ty=Tensor[(1080), float32] */)
}

def @func_11344() -> Tensor[(11, 1, 16), float64] {
  @func_10286() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_5179() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %261 = @func_4563() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %262 = @func_1529() /* ty=Tensor[(11, 1, 16), float64] */;
  %263 = %261.0;
  (%262, %263)
}

def @func_5402(%var_5378: Tensor[(5, 16, 8), int64]) -> (Tensor[(5, 16, 8), int64],) {
  %264 = cast(meta[relay.Constant][7] /* ty=Tensor[(5, 16, 8), int64] */, dtype="int64") /* ty=Tensor[(5, 16, 8), int64] */;
  %265 = shape_of(%var_5378, dtype="int32") /* ty=Tensor[(3), int32] */;
  %266 = cast(%var_5378, dtype="int64") /* ty=Tensor[(5, 16, 8), int64] */;
  %267 = dyn.reshape(%264, %265, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %268 = bitwise_or(%266, %267) /* ty=Tensor[(5, 16, 8), int64] */;
  (%268,)
}

def @func_5898() -> Tensor[(11, 1, 16), float64] {
  %269 = @func_3532() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %269.0
}

def @func_1089() -> Tensor[(11, 1, 16), float64] {
  %270 = @func_1060() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %271 = %270.0;
  %272 = cast(%271, dtype="float64") /* ty=Tensor[(11, 1, 16), float64] */;
  rsqrt(%272) /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_11634() -> Tensor[(11, 1, 16), float64] {
  %273 = @func_1518() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %273.0
}

def @func_13103() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64]) {
  %274 = @func_11315() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %275 = @func_10185() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %276 = @func_9944() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(882), float64]) */;
  %277 = %274.0;
  %278 = %275.0;
  %279 = %276.1;
  (%277, %278, %279)
}

def @func_11395() -> (Tensor[(11, ?, 16), bool], Tensor[(11, 1, 16), float64]) {
  %280 = @func_1865() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) */;
  %281 = %280.2;
  %282 = @func_6930() /* ty=Tensor[(11, 1, 16), float64] */;
  %283 = cast(%282, dtype="bool") /* ty=Tensor[(11, 1, 16), bool] */;
  %284 = shape_of(%281, dtype="int32") /* ty=Tensor[(3), int32] */;
  %285 = cast(%281, dtype="bool") /* ty=Tensor[(11, 1, 16), bool] */;
  %286 = dyn.reshape(%283, %284, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %287 = @func_8539() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %288 = greater(%285, %286) /* ty=Tensor[(11, ?, 16), bool] */;
  %289 = %287.0;
  (%288, %289)
}

def @func_14917() -> (Tensor[(11, 1, 16), float64],) {
  %290 = @func_3543() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %291 = %290.0;
  (%291,)
}

def @func_14901() -> Tensor[(11, 1, 16), float64] {
  @func_11429() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_1518() -> (Tensor[(11, 1, 16), float64],) {
  %292 = @func_1060() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %293 = %292.0;
  (%293,)
}

def @func_10933() -> Tensor[(11, 1, 16), float64] {
  %294 = @func_1368() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) */;
  %294.0
}

def @func_9306() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %295 = @func_1997() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %296 = @func_7302() /* ty=Tensor[(11, 1, 16), float64] */;
  %297 = %295.0;
  (%296, %297)
}

def @func_6848() -> (Tensor[(11, 1, 16), float64],) {
  %298 = @func_3151() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %299 = %298.2;
  (%299,)
}

def @func_13683() -> (Tensor[(11, 1, 16), float64],) {
  %300 = @func_5764() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) */;
  %301 = %300.0;
  (%301,)
}

def @func_3868() -> (Tensor[(11, ?, 16), int8], Tensor[(11, 1, 16), float64]) {
  %302 = @func_3543() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %303 = %302.0;
  %304 = @func_3626() /* ty=Tensor[(11, 1, 16), float64] */;
  %305 = cast(%304, dtype="int8") /* ty=Tensor[(11, 1, 16), int8] */;
  %306 = shape_of(%303, dtype="int32") /* ty=Tensor[(3), int32] */;
  %307 = cast(%303, dtype="int8") /* ty=Tensor[(11, 1, 16), int8] */;
  %308 = dyn.reshape(%305, %306, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %309 = multiply(%307, %308) /* ty=Tensor[(11, ?, 16), int8] */;
  %310 = @func_3323() /* ty=Tensor[(11, 1, 16), float64] */;
  (%309, %310)
}

def @func_636(%var_602: Tensor[(14, 9, 7), float64]) -> Tensor[(14, 9, 7), float64] {
  %311 = cast(%var_602, dtype="float64") /* ty=Tensor[(14, 9, 7), float64] */;
  %312 = asin(%311) /* ty=Tensor[(14, 9, 7), float64] */;
  %313 = cast(%312, dtype="float64") /* ty=Tensor[(14, 9, 7), float64] */;
  erf(%313) /* ty=Tensor[(14, 9, 7), float64] */
}

def @func_8121() -> (Tensor[(11, 1, 16), float64],) {
  %314 = @func_5145() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %315 = %314.0;
  (%315,)
}

def @func_5145() -> (Tensor[(11, 1, 16), float64],) {
  %316 = @func_4668() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %317 = %316.0;
  (%317,)
}

def @func_10371() -> (Tensor[(16, 14, 13), float32], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(880), float64]) {
  %318 = cast(2.78617f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %319 = cast(meta[relay.Constant][8] /* ty=Tensor[(16, 14, 13), float32] */, dtype="float32") /* ty=Tensor[(16, 14, 13), float32] */;
  %320 = cast(meta[relay.Constant][9] /* ty=Tensor[(880), float64] */, dtype="float64") /* ty=Tensor[(880), float64] */;
  %321 = reshape(%320, newshape=[11, 5, 16]) /* ty=Tensor[(11, 5, 16), float64] */;
  %322 = @func_3247(%321) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 5, 16), int64], Tensor[(11, 1, 16), float64]) */;
  %323 = power(%318, %319) /* ty=Tensor[(16, 14, 13), float32] */;
  %324 = @func_6652() /* ty=Tensor[(11, 1, 16), float64] */;
  %325 = %322.2;
  (%323, %324, %325, meta[relay.Constant][9] /* ty=Tensor[(880), float64] */)
}

def @func_8194() -> (Tensor[(11, 1, 16), float64], Tensor[(3, 10, 4), float64]) {
  %326 = @func_2308() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64]) */;
  %327 = cast(meta[relay.Constant][11] /* ty=Tensor[(3, 10, 4), int8] */, dtype="int8") /* ty=Tensor[(3, 10, 4), int8] */;
  %328 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(3, 10, 4), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %329 = cast(meta[relay.Constant][10] /* ty=Tensor[(3, 10, 4), int8] */, dtype="int8") /* ty=Tensor[(3, 10, 4), int8] */;
  %330 = dyn.reshape(%327, %328, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %331 = maximum(%329, %330) /* ty=Tensor[(3, 10, 4), int8] */;
  %332 = cast(%331, dtype="float32") /* ty=Tensor[(3, 10, 4), float32] */;
  %333 = rsqrt(%332) /* ty=Tensor[(3, 10, 4), float32] */;
  %334 = cast(%331, dtype="float64") /* ty=Tensor[(3, 10, 4), float64] */;
  %335 = shape_of(%333, dtype="int32") /* ty=Tensor[(3), int32] */;
  %336 = cast(%333, dtype="float64") /* ty=Tensor[(3, 10, 4), float64] */;
  %337 = dyn.reshape(%334, %335, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %338 = %326.1;
  %339 = floor_divide(%336, %337) /* ty=Tensor[(3, 10, 4), float64] */;
  (%338, %339)
}

def @func_8492() -> Tensor[(11, 1, 16), float64] {
  %340 = @func_7814() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %340.0
}

def @func_1229(%var_1207: Tensor[(882), float64]) -> (Tensor[(11, ?, 16), bool], Tensor[(11, ?, 16), int16], Tensor[(11, ?, 16), bool], Tensor[(11, ?, 16), int16], Tensor[(11, ?, 16), float32], Tensor[(14, 9, 7), float64], Tensor[(882), float64], Tensor[(14, 9, 7), float64], Tensor[(14, 9, 7), float64]) {
  %341 = @func_1089() /* ty=Tensor[(11, 1, 16), float64] */;
  %342 = cast(%341, dtype="float64") /* ty=Tensor[(11, 1, 16), float64] */;
  %343 = exp(%342) /* ty=Tensor[(11, 1, 16), float64] */;
  %344 = cast(%343, dtype="uint8") /* ty=Tensor[(11, 1, 16), uint8] */;
  %345 = shape_of(%341, dtype="int32") /* ty=Tensor[(3), int32] */;
  %346 = cast(%341, dtype="uint8") /* ty=Tensor[(11, 1, 16), uint8] */;
  %347 = dyn.reshape(%344, %345, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %348 = bitwise_and(%346, %347) /* ty=Tensor[(11, ?, 16), uint8] */;
  %349 = cast(%341, dtype="bool") /* ty=Tensor[(11, 1, 16), bool] */;
  %350 = shape_of(%348, dtype="int32") /* ty=Tensor[(3), int32] */;
  %351 = cast(%348, dtype="bool") /* ty=Tensor[(11, ?, 16), bool] */;
  %352 = dyn.reshape(%349, %350, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %353 = cast(%343, dtype="float32") /* ty=Tensor[(11, 1, 16), float32] */;
  %354 = shape_of(%348, dtype="int32") /* ty=Tensor[(3), int32] */;
  %355 = cast(%348, dtype="float32") /* ty=Tensor[(11, ?, 16), float32] */;
  %356 = dyn.reshape(%353, %354, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %357 = power(%355, %356) /* ty=Tensor[(11, ?, 16), float32] */;
  %358 = cast(%341, dtype="int16") /* ty=Tensor[(11, 1, 16), int16] */;
  %359 = shape_of(%357, dtype="int32") /* ty=Tensor[(3), int32] */;
  %360 = cast(%357, dtype="int16") /* ty=Tensor[(11, ?, 16), int16] */;
  %361 = dyn.reshape(%358, %359, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %362 = @func_1060() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %363 = %362.0;
  %364 = cast(%341, dtype="bool") /* ty=Tensor[(11, 1, 16), bool] */;
  %365 = shape_of(%363, dtype="int32") /* ty=Tensor[(3), int32] */;
  %366 = cast(%363, dtype="bool") /* ty=Tensor[(11, 1, 16), bool] */;
  %367 = dyn.reshape(%364, %365, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %368 = @func_1060() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %369 = %368.0;
  %370 = cast(%348, dtype="int16") /* ty=Tensor[(11, ?, 16), int16] */;
  %371 = shape_of(%369, dtype="int32") /* ty=Tensor[(3), int32] */;
  %372 = cast(%369, dtype="int16") /* ty=Tensor[(11, 1, 16), int16] */;
  %373 = dyn.reshape(%370, %371, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %374 = cast(%357, dtype="float32") /* ty=Tensor[(11, ?, 16), float32] */;
  %375 = cast(%var_1207, dtype="float64") /* ty=Tensor[(882), float64] */;
  %376 = reshape(%375, newshape=[14, 9, 7]) /* ty=Tensor[(14, 9, 7), float64] */;
  %377 = @func_636(%376) /* ty=Tensor[(14, 9, 7), float64] */;
  %378 = cast(%377, dtype="float64") /* ty=Tensor[(14, 9, 7), float64] */;
  %379 = reshape(%378, newshape=[14, 9, 7]) /* ty=Tensor[(14, 9, 7), float64] */;
  %380 = cast(%var_1207, dtype="float64") /* ty=Tensor[(882), float64] */;
  %381 = reshape(%380, newshape=[14, 9, 7]) /* ty=Tensor[(14, 9, 7), float64] */;
  %382 = greater_equal(%351, %352) /* ty=Tensor[(11, ?, 16), bool] */;
  %383 = right_shift(%360, %361) /* ty=Tensor[(11, ?, 16), int16] */;
  %384 = logical_or(%366, %367) /* ty=Tensor[(11, ?, 16), bool] */;
  %385 = maximum(%372, %373) /* ty=Tensor[(11, ?, 16), int16] */;
  %386 = sinh(%374) /* ty=Tensor[(11, ?, 16), float32] */;
  %387 = @func_636(%379) /* ty=Tensor[(14, 9, 7), float64] */;
  %388 = @func_636(%381) /* ty=Tensor[(14, 9, 7), float64] */;
  (%382, %383, %384, %385, %386, %377, %var_1207, %387, %388)
}

def @func_6757() -> (Tensor[(11, ?, 16), int8], Tensor[(9, 11, 5), int16], float32, Tensor[(495), float32]) {
  %389 = @func_3868() /* ty=(Tensor[(11, ?, 16), int8], Tensor[(11, 1, 16), float64]) */;
  %390 = cast(0.643282f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %391 = cast(meta[relay.Constant][12] /* ty=Tensor[(495), float32] */, dtype="float32") /* ty=Tensor[(495), float32] */;
  %392 = reshape(%390, newshape=[]) /* ty=float32 */;
  %393 = reshape(%391, newshape=[9, 11, 5]) /* ty=Tensor[(9, 11, 5), float32] */;
  %394 = @func_4611(%392, %393) /* ty=(Tensor[(9, 11, 5), float32], Tensor[(9, 11, 5), int16]) */;
  %395 = %389.0;
  %396 = %394.1;
  (%395, %396, 0.643282f /* ty=float32 */, meta[relay.Constant][12] /* ty=Tensor[(495), float32] */)
}

def @func_10877() -> (Tensor[(11, 1, 16), float64], Tensor[(3, 10, 4), float64]) {
  %397 = @func_3385() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %398 = @func_9955() /* ty=(Tensor[(3, 10, 4), float64],) */;
  %399 = %397.1;
  %400 = %398.0;
  (%399, %400)
}

def @func_11429() -> Tensor[(11, 1, 16), float64] {
  @func_10444() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_1446() -> Tensor[(11, 1, 16), float64] {
  @func_1089() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_4520(%var_4517: Tensor[(700), float32]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(14, 10, 5), float32], Tensor[(294, 3), float64], Tensor[(700), float32]) {
  %401 = @func_2308() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64]) */;
  %402 = @func_1614() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %403 = cast(meta[relay.Constant][13] /* ty=Tensor[(294, 3), float64] */, dtype="float64") /* ty=Tensor[(294, 3), float64] */;
  %404 = cast(%var_4517, dtype="float32") /* ty=Tensor[(700), float32] */;
  %405 = reshape(%403, newshape=[98, 9]) /* ty=Tensor[(98, 9), float64] */;
  %406 = reshape(%404, newshape=[10, 70]) /* ty=Tensor[(10, 70), float32] */;
  %407 = @func_2670(%405, %406) /* ty=(Tensor[(14, 10, 5), float32], Tensor[(10, 70), float32], Tensor[(11, 1, 16), float64], Tensor[(98, 9), float32], Tensor[(98, 9), float32]) */;
  %408 = %401.3;
  %409 = %402.1;
  %410 = @func_1446() /* ty=Tensor[(11, 1, 16), float64] */;
  %411 = %407.0;
  (%408, %409, %410, %411, meta[relay.Constant][13] /* ty=Tensor[(294, 3), float64] */, %var_4517)
}

def @func_14832() -> (Tensor[(1, 8, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %412 = cast(meta[relay.Constant][14] /* ty=Tensor[(1, 8, 16), float64] */, dtype="float64") /* ty=Tensor[(1, 8, 16), float64] */;
  %413 = @func_3532() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %414 = erf(%412) /* ty=Tensor[(1, 8, 16), float64] */;
  %415 = %413.1;
  %416 = @func_6878() /* ty=Tensor[(11, 1, 16), float64] */;
  (%414, %415, %416)
}

def @func_2499() -> Tensor[(11, 1, 16), float64] {
  %417 = @func_1614() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %417.0
}

def @func_11163() -> Tensor[(11, 1, 16), float64] {
  @func_6832() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_9648() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %418 = @func_3385() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %419 = @func_1446() /* ty=Tensor[(11, 1, 16), float64] */;
  %420 = %418.0;
  %421 = @func_2719() /* ty=Tensor[(11, 1, 16), float64] */;
  (%419, %420, %421)
}

def @func_3626() -> Tensor[(11, 1, 16), float64] {
  %422 = @func_3385() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %422.1
}

def @func_9944() -> (Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(882), float64]) {
  %423 = cast(meta[relay.Constant][15] /* ty=Tensor[(882), float64] */, dtype="float64") /* ty=Tensor[(882), float64] */;
  %424 = reshape(%423, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %425 = @func_2601(%424) /* ty=(Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64], Tensor[(14, 9, 7), float64], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) */;
  %426 = @func_3472() /* ty=Tensor[(11, 1, 16), float64] */;
  %427 = %425.0;
  (%426, %427, meta[relay.Constant][15] /* ty=Tensor[(882), float64] */)
}

def @func_5671(%var_5658: Tensor[(12, 14, 13), float64]) -> (Tensor[(12, 14, 13), float64],) {
  %428 = cast(2.95745f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %429 = cast(%var_5658, dtype="float64") /* ty=Tensor[(12, 14, 13), float64] */;
  %430 = mod(%428, %429) /* ty=Tensor[(12, 14, 13), float64] */;
  (%430,)
}

def @func_5711() -> (Tensor[(11, 1, 16), float64],) {
  %431 = @func_5179() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %432 = %431.0;
  (%432,)
}

def @func_11048() -> (Tensor[(11, 1, 16), float64],) {
  %433 = @func_10877() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(3, 10, 4), float64]) */;
  %434 = %433.0;
  (%434,)
}

def @func_11120() -> (Tensor[(11, 1, 16), float64],) {
  %435 = @func_1676() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %436 = %435.0;
  (%436,)
}

def @func_12597() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %437 = @func_11315() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %438 = %437.0;
  %439 = @func_8418() /* ty=Tensor[(11, 1, 16), float64] */;
  (%438, %439)
}

def @func_3151() -> (Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %440 = @func_2788() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %441 = @func_1648() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %442 = @func_1591() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %443 = %440.1;
  %444 = @func_2467() /* ty=Tensor[(11, ?, 16), int64] */;
  %445 = %441.0;
  %446 = %442.0;
  (%443, %444, %445, %446)
}

def @func_13155() -> (Tensor[(11, 1, 16), float64],) {
  %447 = @func_11271() /* ty=Tensor[(11, 1, 16), float64] */;
  (%447,)
}

def @func_14085() -> (Tensor[(11, 1, 16), float64], Tensor[(24, 80), float64], Tensor[(11, 1, 16), float64], Tensor[(700), float32]) {
  %448 = @func_9202() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %449 = @func_11526() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(1920), float64], Tensor[(24, 80), float64]) */;
  %450 = cast(meta[relay.Constant][16] /* ty=Tensor[(700), float32] */, dtype="float32") /* ty=Tensor[(700), float32] */;
  %451 = cast(meta[relay.Constant][16] /* ty=Tensor[(700), float32] */, dtype="float32") /* ty=Tensor[(700), float32] */;
  %452 = reshape(%450, newshape=[350, 2]) /* ty=Tensor[(350, 2), float32] */;
  %453 = reshape(%451, newshape=[350, 2]) /* ty=Tensor[(350, 2), float32] */;
  %454 = @func_13743(%452, %453) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(350, 2), bool], Tensor[(350, 2), float64]) */;
  %455 = %448.0;
  %456 = %449.2;
  %457 = %454.4;
  (%455, %456, %457, meta[relay.Constant][16] /* ty=Tensor[(700), float32] */)
}

def @func_11526() -> (Tensor[(11, 1, 16), float64], Tensor[(1920), float64], Tensor[(24, 80), float64]) {
  %458 = cast(meta[relay.Constant][17] /* ty=Tensor[(24, 80), float64] */, dtype="float64") /* ty=Tensor[(24, 80), float64] */;
  %459 = reshape(%458, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %460 = @func_9558(%459) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(10, 16, 12), float64], Tensor[(1920), float64]) */;
  %461 = @func_1529() /* ty=Tensor[(11, 1, 16), float64] */;
  %462 = %460.2;
  (%461, %462, meta[relay.Constant][17] /* ty=Tensor[(24, 80), float64] */)
}

def @func_12178(%var_12171: Tensor[(14, 9, 7), float64]) -> (Tensor[(14, 9, 7), int64],) {
  %463 = @func_11841() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(14, 9, 7), float64], Tensor[(882), float64]) */;
  %464 = %463.1;
  %465 = cast(%var_12171, dtype="int64") /* ty=Tensor[(14, 9, 7), int64] */;
  %466 = shape_of(%464, dtype="int32") /* ty=Tensor[(3), int32] */;
  %467 = cast(%464, dtype="int64") /* ty=Tensor[(14, 9, 7), int64] */;
  %468 = dyn.reshape(%465, %466, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %469 = bitwise_xor(%467, %468) /* ty=Tensor[(14, 9, 7), int64] */;
  (%469,)
}

def @func_8280() -> Tensor[(11, 1, 16), float64] {
  %470 = @func_6884() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %470.0
}

def @func_9781(%var_9748: Tensor[(5, 140), float32]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(5, 140), float32], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(700), float32]) {
  %471 = cast(%var_9748, dtype="float32") /* ty=Tensor[(5, 140), float32] */;
  %472 = reshape(%471, newshape=[700]) /* ty=Tensor[(700), float32] */;
  %473 = @func_3087(%472) /* ty=(Tensor[(11, ?, 16), int64], Tensor[(700), float32], Tensor[(98, 9), uint8], Tensor[(11, 1, 16), float64]) */;
  %474 = cast(%var_9748, dtype="float32") /* ty=Tensor[(5, 140), float32] */;
  %475 = reshape(%474, newshape=[700]) /* ty=Tensor[(700), float32] */;
  %476 = @func_3087(%475) /* ty=(Tensor[(11, ?, 16), int64], Tensor[(700), float32], Tensor[(98, 9), uint8], Tensor[(11, 1, 16), float64]) */;
  %477 = @func_6930() /* ty=Tensor[(11, 1, 16), float64] */;
  %478 = %473.3;
  %479 = @func_7302() /* ty=Tensor[(11, 1, 16), float64] */;
  %480 = @func_8280() /* ty=Tensor[(11, 1, 16), float64] */;
  %481 = %476.1;
  (%477, %478, %var_9748, %479, %480, %481)
}

def @func_15003() -> (Tensor[(3, 10, 4), float64], Tensor[(11, 1, 16), float64]) {
  %482 = @func_8194() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(3, 10, 4), float64]) */;
  %483 = @func_10024() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %484 = %482.1;
  %485 = %483.0;
  (%484, %485)
}

def @func_6525(%var_6493: Tensor[(11, 14, 16), float64]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64], Tensor[(700), float32], Tensor[(11, 14, 16), bool], Tensor[(11, 1, 16), float64]) {
  %486 = @func_3760() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %487 = @func_3151() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %488 = cast(meta[relay.Constant][18] /* ty=Tensor[(700), float32] */, dtype="float32") /* ty=Tensor[(700), float32] */;
  %489 = reshape(%488, newshape=[700]) /* ty=Tensor[(700), float32] */;
  %490 = @func_4520(%489) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(14, 10, 5), float32], Tensor[(294, 3), float64], Tensor[(700), float32]) */;
  %491 = @func_3151() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %492 = %491.2;
  %493 = cast(%492, dtype="bool") /* ty=Tensor[(11, 1, 16), bool] */;
  %494 = cast(%var_6493, dtype="bool") /* ty=Tensor[(11, 14, 16), bool] */;
  %495 = @func_1865() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) */;
  %496 = %486.0;
  %497 = %487.1;
  %498 = %490.1;
  %499 = equal(%493, %494) /* ty=Tensor[(11, 14, 16), bool] */;
  %500 = %495.0;
  (%496, %497, %498, meta[relay.Constant][18] /* ty=Tensor[(700), float32] */, %499, %500)
}

def @func_10926(%var_10879: Tensor[(15, 16, 14), float64]) -> (Tensor[(882), float64], Tensor[(882), float64], Tensor[(15, 16, 14), uint64]) {
  %501 = cast(meta[relay.Constant][19] /* ty=Tensor[(882), float64] */, dtype="float64") /* ty=Tensor[(882), float64] */;
  %502 = reshape(%501, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %503 = @func_2601(%502) /* ty=(Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64], Tensor[(14, 9, 7), float64], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) */;
  %504 = cast(%var_10879, dtype="float64") /* ty=Tensor[(15, 16, 14), float64] */;
  %505 = sigmoid(%504) /* ty=Tensor[(15, 16, 14), float64] */;
  %506 = cast(%var_10879, dtype="uint64") /* ty=Tensor[(15, 16, 14), uint64] */;
  %507 = shape_of(%505, dtype="int32") /* ty=Tensor[(3), int32] */;
  %508 = cast(%505, dtype="uint64") /* ty=Tensor[(15, 16, 14), uint64] */;
  %509 = dyn.reshape(%506, %507, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %510 = %503.3;
  %511 = left_shift(%508, %509) /* ty=Tensor[(15, 16, 14), uint64] */;
  (%510, meta[relay.Constant][19] /* ty=Tensor[(882), float64] */, %511)
}

def @func_13641() -> Tensor[(11, 1, 16), float64] {
  @func_6878() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_9157() -> Tensor[(11, 1, 16), float64] {
  %512 = @func_9033() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %512.0
}

def @func_7090(%var_7067: Tensor[(1080), float32], %var_7076: Tensor[(2, 1232), float64]) -> (Tensor[(11, ?, 16), int8], Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(1080), float32], Tensor[(700), float32], Tensor[(2, 1232), float64]) {
  %513 = @func_2541() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(882), float32]) */;
  %514 = cast(%var_7067, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %515 = reshape(%514, newshape=[1080]) /* ty=Tensor[(1080), float32] */;
  %516 = @func_2856(%515) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(1080), float32], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) */;
  %517 = cast(%var_7076, dtype="float64") /* ty=Tensor[(2, 1232), float64] */;
  %518 = reshape(%517, newshape=[11, 14, 16]) /* ty=Tensor[(11, 14, 16), float64] */;
  %519 = @func_6525(%518) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64], Tensor[(700), float32], Tensor[(11, 14, 16), bool], Tensor[(11, 1, 16), float64]) */;
  %520 = @func_5594() /* ty=Tensor[(11, ?, 16), int8] */;
  %521 = %513.0;
  %522 = %516.5;
  %523 = %519.3;
  (%520, %521, %522, %var_7067, %523, %var_7076)
}

def @func_5528(%var_5511: Tensor[(700), float32]) -> (Tensor[(11, 1, 16), float64], Tensor[(98, 9), uint8], Tensor[(700), float32], Tensor[(11, 1, 16), float64]) {
  %524 = cast(%var_5511, dtype="float32") /* ty=Tensor[(700), float32] */;
  %525 = reshape(%524, newshape=[700]) /* ty=Tensor[(700), float32] */;
  %526 = @func_3087(%525) /* ty=(Tensor[(11, ?, 16), int64], Tensor[(700), float32], Tensor[(98, 9), uint8], Tensor[(11, 1, 16), float64]) */;
  %527 = @func_1089() /* ty=Tensor[(11, 1, 16), float64] */;
  %528 = %526.2;
  %529 = @func_2499() /* ty=Tensor[(11, 1, 16), float64] */;
  (%527, %528, %var_5511, %529)
}

def @func_5863(%var_5858: Tensor[(6, 2, 7), uint8], %var_5859: Tensor[(6, 2, 7), uint8]) -> Tensor[(6, 2, 7), uint8] {
  %530 = cast(%var_5859, dtype="uint8") /* ty=Tensor[(6, 2, 7), uint8] */;
  %531 = shape_of(%var_5858, dtype="int32") /* ty=Tensor[(3), int32] */;
  %532 = cast(%var_5858, dtype="uint8") /* ty=Tensor[(6, 2, 7), uint8] */;
  %533 = dyn.reshape(%530, %531, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  bitwise_or(%532, %533) /* ty=Tensor[(6, 2, 7), uint8] */
}

def @func_5043() -> Tensor[(11, 1, 16), float64] {
  %534 = @func_2388() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) */;
  %534.0
}

def @func_8290() -> Tensor[(11, 1, 16), float64] {
  %535 = @func_1518() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %535.0
}

def @func_2467() -> Tensor[(11, ?, 16), int64] {
  %536 = @func_1676() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %537 = %536.0;
  %538 = @func_1368() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) */;
  %539 = %538.0;
  %540 = cast(%539, dtype="int64") /* ty=Tensor[(11, 1, 16), int64] */;
  %541 = shape_of(%537, dtype="int32") /* ty=Tensor[(3), int32] */;
  %542 = cast(%537, dtype="int64") /* ty=Tensor[(11, 1, 16), int64] */;
  %543 = dyn.reshape(%540, %541, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  left_shift(%542, %543) /* ty=Tensor[(11, ?, 16), int64] */
}

def @func_10077() -> (Tensor[(11, ?, 16), int8], Tensor[(11, 1, 16), float64], Tensor[(1080), float32]) {
  %544 = @func_5935() /* ty=(Tensor[(11, ?, 16), int8],) */;
  %545 = cast(meta[relay.Constant][20] /* ty=Tensor[(1080), float32] */, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %546 = reshape(%545, newshape=[1080]) /* ty=Tensor[(1080), float32] */;
  %547 = @func_2856(%546) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(1080), float32], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) */;
  %548 = %544.0;
  %549 = %547.6;
  (%548, %549, meta[relay.Constant][20] /* ty=Tensor[(1080), float32] */)
}

def @func_3282() -> (Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64]) {
  %550 = @func_2788() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %551 = %550.0;
  %552 = @func_2467() /* ty=Tensor[(11, ?, 16), int64] */;
  (%551, %552)
}

def @func_1830(%var_1777: Tensor[(882), float64]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(14, 9, 7), uint32], Tensor[(11, 1, 16), float64], Tensor[(14, 9, 7), bool], Tensor[(11, 1, 16), float64]) {
  %553 = @func_1648() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %554 = @func_1648() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %555 = @func_1312() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %556 = cast(%var_1777, dtype="float64") /* ty=Tensor[(882), float64] */;
  %557 = reshape(%556, newshape=[14, 9, 7]) /* ty=Tensor[(14, 9, 7), float64] */;
  %558 = @func_636(%557) /* ty=Tensor[(14, 9, 7), float64] */;
  %559 = cast(%558, dtype="float32") /* ty=Tensor[(14, 9, 7), float32] */;
  %560 = sqrt(%559) /* ty=Tensor[(14, 9, 7), float32] */;
  %561 = cast(meta[relay.Constant][21] /* ty=Tensor[(14, 9, 7), float32] */, dtype="uint32") /* ty=Tensor[(14, 9, 7), uint32] */;
  %562 = shape_of(%560, dtype="int32") /* ty=Tensor[(3), int32] */;
  %563 = cast(%560, dtype="uint32") /* ty=Tensor[(14, 9, 7), uint32] */;
  %564 = dyn.reshape(%561, %562, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %565 = bitwise_or(%563, %564) /* ty=Tensor[(14, 9, 7), uint32] */;
  %566 = cast(%565, dtype="float64") /* ty=Tensor[(14, 9, 7), float64] */;
  %567 = reshape(%566, newshape=[14, 9, 7]) /* ty=Tensor[(14, 9, 7), float64] */;
  %568 = @func_636(%567) /* ty=Tensor[(14, 9, 7), float64] */;
  %569 = cast(%var_1777, dtype="bool") /* ty=Tensor[(882), bool] */;
  %570 = shape_of(%568, dtype="int32") /* ty=Tensor[(3), int32] */;
  %571 = cast(%568, dtype="bool") /* ty=Tensor[(14, 9, 7), bool] */;
  %572 = dyn.reshape(%569, %570, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %573 = @func_1518() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %574 = %553.0;
  %575 = %554.0;
  %576 = %555.0;
  %577 = @func_1529() /* ty=Tensor[(11, 1, 16), float64] */;
  %578 = greater(%571, %572) /* ty=Tensor[(14, 9, 7), bool] */;
  %579 = %573.0;
  (%574, %575, %576, %565, %577, %578, %579)
}

def @func_11271() -> Tensor[(11, 1, 16), float64] {
  %580 = @func_9944() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(882), float64]) */;
  %580.0
}

def @func_5126() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %581 = @func_1060() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %582 = @func_1368() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) */;
  %583 = @func_4668() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %584 = %581.0;
  %585 = %582.1;
  %586 = @func_2499() /* ty=Tensor[(11, 1, 16), float64] */;
  %587 = %583.0;
  (%584, %585, %586, %587)
}

def @func_6434() -> Tensor[(11, 1, 16), float64] {
  @func_2370() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_4826() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %588 = @func_1648() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %589 = @func_3543() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %590 = @func_3543() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %591 = @func_1518() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %592 = @func_1614() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %593 = %588.0;
  %594 = %589.0;
  %595 = %590.0;
  %596 = %591.0;
  %597 = %592.0;
  (%593, %594, %595, %596, %597)
}

def @func_8028() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %598 = @func_1676() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %599 = @func_1518() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %600 = @func_1518() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %601 = %598.0;
  %602 = %599.0;
  %603 = %600.0;
  (%601, %602, %603)
}

def @func_2601(%var_2575: Tensor[(882), float64]) -> (Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64], Tensor[(14, 9, 7), float64], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) {
  %604 = cast(%var_2575, dtype="float64") /* ty=Tensor[(882), float64] */;
  %605 = reshape(%604, newshape=[14, 9, 7]) /* ty=Tensor[(14, 9, 7), float64] */;
  %606 = cast(%var_2575, dtype="float64") /* ty=Tensor[(882), float64] */;
  %607 = reshape(%606, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %608 = @func_1830(%607) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(14, 9, 7), uint32], Tensor[(11, 1, 16), float64], Tensor[(14, 9, 7), bool], Tensor[(11, 1, 16), float64]) */;
  %609 = @func_2467() /* ty=Tensor[(11, ?, 16), int64] */;
  %610 = @func_2499() /* ty=Tensor[(11, 1, 16), float64] */;
  %611 = @func_636(%605) /* ty=Tensor[(14, 9, 7), float64] */;
  %612 = %608.6;
  (%609, %610, %611, %var_2575, %612)
}

def @func_14452() -> Tensor[(11, 1, 16), float64] {
  %613 = @func_5711() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %613.0
}

def @func_2370() -> Tensor[(11, 1, 16), float64] {
  %614 = @func_1591() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %614.0
}

def @func_1060() -> (Tensor[(11, 1, 16), float64],) {
  %615 = cast(meta[relay.Constant][22] /* ty=Tensor[(11, 1, 16), float64] */, dtype="float64") /* ty=Tensor[(11, 1, 16), float64] */;
  %616 = tan(%615) /* ty=Tensor[(11, 1, 16), float64] */;
  (%616,)
}

def @func_6458() -> (Tensor[(11, 1, 16), float64],) {
  %617 = @func_3543() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %618 = %617.0;
  (%618,)
}

def @func_1591() -> (Tensor[(11, 1, 16), float64],) {
  %619 = @func_1089() /* ty=Tensor[(11, 1, 16), float64] */;
  (%619,)
}

def @func_4071() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %620 = @func_2719() /* ty=Tensor[(11, 1, 16), float64] */;
  %621 = @func_1446() /* ty=Tensor[(11, 1, 16), float64] */;
  (%620, %621)
}

def @func_1409(%var_1401: Tensor[(6, 15, 12), float32], %var_1407: Tensor[(882), float64]) -> (Tensor[(6, 15, 12), float32], Tensor[(14, 9, 7), float64], Tensor[(882), float64]) {
  %622 = cast(meta[relay.Constant][23] /* ty=Tensor[(6, 15, 12), float32] */, dtype="float32") /* ty=Tensor[(6, 15, 12), float32] */;
  %623 = shape_of(%var_1401, dtype="int32") /* ty=Tensor[(3), int32] */;
  %624 = cast(%var_1401, dtype="float32") /* ty=Tensor[(6, 15, 12), float32] */;
  %625 = dyn.reshape(%622, %623, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %626 = cast(%var_1407, dtype="float64") /* ty=Tensor[(882), float64] */;
  %627 = reshape(%626, newshape=[14, 9, 7]) /* ty=Tensor[(14, 9, 7), float64] */;
  %628 = power(%624, %625) /* ty=Tensor[(6, 15, 12), float32] */;
  %629 = @func_636(%627) /* ty=Tensor[(14, 9, 7), float64] */;
  (%628, %629, %var_1407)
}

def @func_6358() -> Tensor[(11, 1, 16), float64] {
  %630 = @func_3532() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %630.1
}

def @func_13959(%var_13926: int32) -> (Tensor[(16, 1, 1), int32], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(1920), float64], Tensor[(882), float64], Tensor[(10, 16, 12), float64]) {
  %631 = cast(%var_13926, dtype="int32") /* ty=int32 */;
  %632 = cast(meta[relay.Constant][24] /* ty=Tensor[(16, 1, 1), int32] */, dtype="int32") /* ty=Tensor[(16, 1, 1), int32] */;
  %633 = @func_4563() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %634 = cast(meta[relay.Constant][25] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %635 = cast(meta[relay.Constant][26] /* ty=Tensor[(882), float64] */, dtype="float64") /* ty=Tensor[(882), float64] */;
  %636 = reshape(%634, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %637 = reshape(%635, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %638 = @func_7531(%636, %637) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(700), float32], Tensor[(11, 1, 16), float64], Tensor[(10, 16, 12), float64], Tensor[(1920), float64], Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(1080), float32]) */;
  %639 = cast(meta[relay.Constant][25] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %640 = reshape(%639, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %641 = @func_9558(%640) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(10, 16, 12), float64], Tensor[(1920), float64]) */;
  %642 = add(%631, %632) /* ty=Tensor[(16, 1, 1), int32] */;
  %643 = %633.0;
  %644 = @func_13477() /* ty=Tensor[(11, 1, 16), float64] */;
  %645 = %638.7;
  %646 = %641.1;
  (%642, %643, %644, %645, meta[relay.Constant][25] /* ty=Tensor[(1920), float64] */, meta[relay.Constant][26] /* ty=Tensor[(882), float64] */, %646)
}

def @func_2279(%var_2267: Tensor[(14, 10, 5), float32]) -> (Tensor[(14, 10, 5), float32], Tensor[(11, 1, 16), float64]) {
  %647 = cast(%var_2267, dtype="float32") /* ty=Tensor[(14, 10, 5), float32] */;
  %648 = @func_1518() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %649 = asin(%647) /* ty=Tensor[(14, 10, 5), float32] */;
  %650 = %648.0;
  (%649, %650)
}

def @func_10286() -> Tensor[(11, 1, 16), float64] {
  %651 = @func_8773() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %651.0
}

def @func_3018(%var_2952: Tensor[(3, 360), float32]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), bool], Tensor[(11, ?, 16), float64], Tensor[(3, 360), float32]) {
  %652 = cast(%var_2952, dtype="float32") /* ty=Tensor[(3, 360), float32] */;
  %653 = reshape(%652, newshape=[1080]) /* ty=Tensor[(1080), float32] */;
  %654 = @func_2856(%653) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(1080), float32], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) */;
  %655 = @func_1676() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %656 = %655.0;
  %657 = @func_1591() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %658 = %657.0;
  %659 = cast(%658, dtype="bool") /* ty=Tensor[(11, 1, 16), bool] */;
  %660 = shape_of(%656, dtype="int32") /* ty=Tensor[(3), int32] */;
  %661 = cast(%656, dtype="bool") /* ty=Tensor[(11, 1, 16), bool] */;
  %662 = dyn.reshape(%659, %660, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %663 = cast(%656, dtype="float64") /* ty=Tensor[(11, 1, 16), float64] */;
  %664 = shape_of(%658, dtype="int32") /* ty=Tensor[(3), int32] */;
  %665 = cast(%658, dtype="float64") /* ty=Tensor[(11, 1, 16), float64] */;
  %666 = dyn.reshape(%663, %664, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %667 = cast(%var_2952, dtype="float64") /* ty=Tensor[(3, 360), float64] */;
  %668 = log(%667) /* ty=Tensor[(3, 360), float64] */;
  %669 = cast(%668, dtype="float32") /* ty=Tensor[(3, 360), float32] */;
  %670 = %654.2;
  %671 = not_equal(%661, %662) /* ty=Tensor[(11, ?, 16), bool] */;
  %672 = divide(%665, %666) /* ty=Tensor[(11, ?, 16), float64] */;
  %673 = sqrt(%669) /* ty=Tensor[(3, 360), float32] */;
  (%670, %671, %672, %673)
}

def @func_11244(%var_11229: Tensor[(1, 9, 12), float64]) -> Tensor[(1, 9, 12), float64] {
  %674 = cast(%var_11229, dtype="float64") /* ty=Tensor[(1, 9, 12), float64] */;
  rsqrt(%674) /* ty=Tensor[(1, 9, 12), float64] */
}

def @func_11020() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(12, 14, 13), float64], Tensor[(2184), float64]) {
  %675 = @func_6848() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %676 = @func_5764() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) */;
  %677 = cast(meta[relay.Constant][27] /* ty=Tensor[(2184), float64] */, dtype="float64") /* ty=Tensor[(2184), float64] */;
  %678 = reshape(%677, newshape=[12, 14, 13]) /* ty=Tensor[(12, 14, 13), float64] */;
  %679 = @func_5671(%678) /* ty=(Tensor[(12, 14, 13), float64],) */;
  %680 = %675.0;
  %681 = %676.1;
  %682 = %679.0;
  (%680, %681, %682, meta[relay.Constant][27] /* ty=Tensor[(2184), float64] */)
}

def @func_9955() -> (Tensor[(3, 10, 4), float64],) {
  %683 = @func_8194() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(3, 10, 4), float64]) */;
  %684 = %683.1;
  (%684,)
}

def @func_4296(%var_4256: Tensor[(11, 13, 16), float64]) -> (Tensor[(11, 13, 16), bool], Tensor[(11, 1, 16), float64], Tensor[(4, 11, 15), float32], Tensor[(660), float32], Tensor[(11, 13, 16), float64]) {
  %685 = @func_3151() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %686 = %685.0;
  %687 = cast(%686, dtype="bool") /* ty=Tensor[(11, 1, 16), bool] */;
  %688 = cast(%var_4256, dtype="bool") /* ty=Tensor[(11, 13, 16), bool] */;
  %689 = @func_1591() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %690 = cast(meta[relay.Constant][28] /* ty=Tensor[(660), float32] */, dtype="float32") /* ty=Tensor[(660), float32] */;
  %691 = reshape(%690, newshape=[4, 11, 15]) /* ty=Tensor[(4, 11, 15), float32] */;
  %692 = @func_4176(%691) /* ty=(Tensor[(4, 11, 15), float32],) */;
  %693 = cast(%var_4256, dtype="float64") /* ty=Tensor[(11, 13, 16), float64] */;
  %694 = equal(%687, %688) /* ty=Tensor[(11, 13, 16), bool] */;
  %695 = %689.0;
  %696 = %692.0;
  %697 = sqrt(%693) /* ty=Tensor[(11, 13, 16), float64] */;
  (%694, %695, %696, meta[relay.Constant][28] /* ty=Tensor[(660), float32] */, %697)
}

def @func_10228(%var_10215: Tensor[(4, 1, 13), float64], %var_10216: Tensor[(4, 7, 13), float64]) -> (Tensor[(4, 7, 13), float64], Tensor[(4, 7, 13), float32]) {
  %698 = cast(%var_10215, dtype="float64") /* ty=Tensor[(4, 1, 13), float64] */;
  %699 = cast(%var_10216, dtype="float64") /* ty=Tensor[(4, 7, 13), float64] */;
  %700 = cast(%var_10216, dtype="float32") /* ty=Tensor[(4, 7, 13), float32] */;
  %701 = power(%698, %699) /* ty=Tensor[(4, 7, 13), float64] */;
  %702 = log10(%700) /* ty=Tensor[(4, 7, 13), float32] */;
  (%701, %702)
}

def @func_12792() -> (Tensor[(11, 1, 16), float64],) {
  %703 = @func_8028() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %704 = %703.2;
  (%704,)
}

def @func_8773() -> (Tensor[(11, 1, 16), float64],) {
  %705 = @func_3532() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %706 = %705.1;
  (%706,)
}

def @func_1648() -> (Tensor[(11, 1, 16), float64],) {
  %707 = @func_1529() /* ty=Tensor[(11, 1, 16), float64] */;
  (%707,)
}

def @func_6325() -> (Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %708 = @func_1865() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) */;
  %709 = @func_4668() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %710 = @func_1089() /* ty=Tensor[(11, 1, 16), float64] */;
  %711 = %708.1;
  %712 = @func_5898() /* ty=Tensor[(11, 1, 16), float64] */;
  %713 = %709.0;
  %714 = @func_1529() /* ty=Tensor[(11, 1, 16), float64] */;
  (%710, %711, %712, %713, %714)
}

def @func_4611(%var_4594: float32, %var_4595: Tensor[(9, 11, 5), float32]) -> (Tensor[(9, 11, 5), float32], Tensor[(9, 11, 5), int16]) {
  %715 = cast(%var_4594, dtype="float32") /* ty=float32 */;
  %716 = cast(%var_4595, dtype="float32") /* ty=Tensor[(9, 11, 5), float32] */;
  %717 = cast(%var_4595, dtype="int16") /* ty=Tensor[(9, 11, 5), int16] */;
  %718 = cast(%var_4594, dtype="int16") /* ty=int16 */;
  %719 = power(%715, %716) /* ty=Tensor[(9, 11, 5), float32] */;
  %720 = maximum(%717, %718) /* ty=Tensor[(9, 11, 5), int16] */;
  (%719, %720)
}

def @func_6872() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %721 = @func_6261() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %722 = @func_5043() /* ty=Tensor[(11, 1, 16), float64] */;
  %723 = %721.0;
  (%722, %723)
}

def @func_13010() -> Tensor[(11, 1, 16), float64] {
  %724 = @func_4826() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %724.4
}

def @func_1946(%var_1933: Tensor[(882), float64]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(1080), float32], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) {
  %725 = @func_1060() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %726 = @func_1676() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %727 = cast(meta[relay.Constant][29] /* ty=Tensor[(1080), float32] */, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %728 = cast(%var_1933, dtype="float64") /* ty=Tensor[(882), float64] */;
  %729 = reshape(%727, newshape=[6, 15, 12]) /* ty=Tensor[(6, 15, 12), float32] */;
  %730 = reshape(%728, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %731 = @func_1409(%729, %730) /* ty=(Tensor[(6, 15, 12), float32], Tensor[(14, 9, 7), float64], Tensor[(882), float64]) */;
  %732 = @func_1614() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %733 = %725.0;
  %734 = @func_1529() /* ty=Tensor[(11, 1, 16), float64] */;
  %735 = %726.1;
  %736 = %731.2;
  %737 = %732.0;
  (%733, %734, %735, %736, meta[relay.Constant][29] /* ty=Tensor[(1080), float32] */, %var_1933, %737)
}

def @func_11315() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %738 = @func_8377() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %739 = %738.0;
  %740 = @func_10981() /* ty=Tensor[(11, 1, 16), float64] */;
  (%739, %740)
}

def @func_10250() -> (Tensor[(11, 1, 16), float32],) {
  %741 = @func_5764() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) */;
  %742 = %741.1;
  (%742,)
}

def @func_2216(%var_2181: Tensor[(7, 8, 1), float64], %var_2211: Tensor[(882), float64]) -> (Tensor[(7, 8, 1), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(882), float64]) {
  %743 = cast(%var_2181, dtype="float64") /* ty=Tensor[(7, 8, 1), float64] */;
  %744 = cast(%var_2211, dtype="float64") /* ty=Tensor[(882), float64] */;
  %745 = reshape(%744, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %746 = @func_1946(%745) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(1080), float32], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) */;
  %747 = cos(%743) /* ty=Tensor[(7, 8, 1), float64] */;
  %748 = @func_2148() /* ty=Tensor[(11, 1, 16), float64] */;
  %749 = %746.1;
  (%747, %748, %749, %var_2211)
}

def @func_13835(%var_13827: bool) -> (Tensor[(6, 15, 13), bool],) {
  %750 = cast(%var_13827, dtype="bool") /* ty=bool */;
  %751 = cast(meta[relay.Constant][30] /* ty=Tensor[(6, 15, 13), bool] */, dtype="bool") /* ty=Tensor[(6, 15, 13), bool] */;
  %752 = logical_or(%750, %751) /* ty=Tensor[(6, 15, 13), bool] */;
  (%752,)
}

def @func_14380() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %753 = @func_8200() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %754 = @func_11401() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %755 = @func_9512() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %756 = %753.0;
  %757 = %754.0;
  %758 = %755.0;
  (%756, %757, %758)
}

def @func_9357() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64]) {
  %759 = @func_3532() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %760 = @func_2388() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) */;
  %761 = @func_5764() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) */;
  %762 = @func_6930() /* ty=Tensor[(11, 1, 16), float64] */;
  %763 = %759.0;
  %764 = %760.1;
  %765 = %761.1;
  %766 = @func_2148() /* ty=Tensor[(11, 1, 16), float64] */;
  (%762, %763, %764, %765, %766)
}

def @func_2318() -> (Tensor[(11, 1, 16), float64],) {
  %767 = @func_1446() /* ty=Tensor[(11, 1, 16), float64] */;
  (%767,)
}

def @func_5988() -> (Tensor[(11, 1, 16), float64],) {
  %768 = @func_3456() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(1080), float32]) */;
  %769 = %768.1;
  (%769,)
}

def @func_12718(%var_12666: float64, %var_12667: Tensor[(13, 6, 14), float64]) -> (Tensor[(13, 6, 14), float64], Tensor[(98, 9), bool], Tensor[(11, ?, 16), int8]) {
  %770 = cast(%var_12666, dtype="float64") /* ty=float64 */;
  %771 = cast(%var_12667, dtype="float64") /* ty=Tensor[(13, 6, 14), float64] */;
  %772 = @func_2427() /* ty=(Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64], Tensor[(56), float64], Tensor[(98, 9), float64]) */;
  %773 = %772.3;
  %774 = cast(%773, dtype="bool") /* ty=Tensor[(98, 9), bool] */;
  %775 = cast(%var_12666, dtype="bool") /* ty=bool */;
  %776 = @func_5935() /* ty=(Tensor[(11, ?, 16), int8],) */;
  %777 = floor_divide(%770, %771) /* ty=Tensor[(13, 6, 14), float64] */;
  %778 = equal(%774, %775) /* ty=Tensor[(98, 9), bool] */;
  %779 = %776.0;
  (%777, %778, %779)
}

def @func_4986() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %780 = @func_3472() /* ty=Tensor[(11, 1, 16), float64] */;
  %781 = @func_2719() /* ty=Tensor[(11, 1, 16), float64] */;
  %782 = @func_1089() /* ty=Tensor[(11, 1, 16), float64] */;
  (%780, %781, %782)
}

def @func_2308() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64]) {
  %783 = @func_1591() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %784 = @func_1368() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) */;
  %785 = @func_1518() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %786 = %783.0;
  %787 = @func_1529() /* ty=Tensor[(11, 1, 16), float64] */;
  %788 = %784.1;
  %789 = %785.0;
  (%786, %787, %788, %789)
}

def @func_13987() -> (Tensor[(11, ?, 16), int64], Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64]) {
  %790 = @func_13103() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64]) */;
  %791 = %790.2;
  %792 = @func_2467() /* ty=Tensor[(11, ?, 16), int64] */;
  %793 = @func_11196() /* ty=Tensor[(11, 1, 16), float64] */;
  (%791, %792, %793)
}

def @func_4530() -> (Tensor[(11, 1, 16), float64],) {
  %794 = @func_3472() /* ty=Tensor[(11, 1, 16), float64] */;
  (%794,)
}

def @func_7428(%var_7394: Tensor[(1920), float64], %var_7423: Tensor[(5, 140), float32]) -> (Tensor[(11, ?, 16), int8], Tensor[(11, 1, 16), float64], Tensor[(10, 16, 12), float64], Tensor[(1920), float64], Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(6, 2, 7), uint8], Tensor[(84), uint8], Tensor[(98, 9), uint8], Tensor[(5, 140), float32]) {
  %795 = @func_5935() /* ty=(Tensor[(11, ?, 16), int8],) */;
  %796 = @func_3385() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %797 = cast(%var_7394, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %798 = reshape(%797, newshape=[10, 16, 12]) /* ty=Tensor[(10, 16, 12), float64] */;
  %799 = @func_7196(%798) /* ty=(Tensor[(10, 16, 12), float64],) */;
  %800 = @func_2308() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64]) */;
  %801 = @func_3151() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %802 = cast(meta[relay.Constant][31] /* ty=Tensor[(84), uint8] */, dtype="uint8") /* ty=Tensor[(84), uint8] */;
  %803 = cast(meta[relay.Constant][31] /* ty=Tensor[(84), uint8] */, dtype="uint8") /* ty=Tensor[(84), uint8] */;
  %804 = reshape(%802, newshape=[6, 2, 7]) /* ty=Tensor[(6, 2, 7), uint8] */;
  %805 = reshape(%803, newshape=[6, 2, 7]) /* ty=Tensor[(6, 2, 7), uint8] */;
  %806 = cast(%var_7423, dtype="float32") /* ty=Tensor[(5, 140), float32] */;
  %807 = reshape(%806, newshape=[700]) /* ty=Tensor[(700), float32] */;
  %808 = @func_5528(%807) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(98, 9), uint8], Tensor[(700), float32], Tensor[(11, 1, 16), float64]) */;
  %809 = %795.0;
  %810 = %796.1;
  %811 = %799.0;
  %812 = %800.0;
  %813 = %801.1;
  %814 = @func_5863(%804, %805) /* ty=Tensor[(6, 2, 7), uint8] */;
  %815 = %808.1;
  (%809, %810, %811, %var_7394, %812, %813, %814, meta[relay.Constant][31] /* ty=Tensor[(84), uint8] */, %815, %var_7423)
}

def @func_13477() -> Tensor[(11, 1, 16), float64] {
  %816 = @func_1591() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %816.0
}

def @func_8200() -> (Tensor[(11, 1, 16), float64],) {
  %817 = @func_3472() /* ty=Tensor[(11, 1, 16), float64] */;
  (%817,)
}

def @func_4959(%var_4944: Tensor[(882, 1), float64]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(11, ?, 16), int16], Tensor[(882, 1), float64], Tensor[(11, 1, 16), float64]) {
  %818 = cast(%var_4944, dtype="float64") /* ty=Tensor[(882, 1), float64] */;
  %819 = reshape(%818, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %820 = @func_1229(%819) /* ty=(Tensor[(11, ?, 16), bool], Tensor[(11, ?, 16), int16], Tensor[(11, ?, 16), bool], Tensor[(11, ?, 16), int16], Tensor[(11, ?, 16), float32], Tensor[(14, 9, 7), float64], Tensor[(882), float64], Tensor[(14, 9, 7), float64], Tensor[(14, 9, 7), float64]) */;
  %821 = @func_2148() /* ty=Tensor[(11, 1, 16), float64] */;
  %822 = @func_2467() /* ty=Tensor[(11, ?, 16), int64] */;
  %823 = %820.1;
  %824 = @func_3472() /* ty=Tensor[(11, 1, 16), float64] */;
  (%821, %822, %823, %var_4944, %824)
}

def @func_8723() -> (Tensor[(11, 1, 16), float64], Tensor[(700), float32], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) {
  %825 = @func_6422() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %826 = cast(meta[relay.Constant][32] /* ty=Tensor[(882), float64] */, dtype="float64") /* ty=Tensor[(882), float64] */;
  %827 = reshape(%826, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %828 = @func_4010(%827) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(10, 70), float32], Tensor[(882), float64], Tensor[(700), float32], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64]) */;
  %829 = @func_4071() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %830 = %825.0;
  %831 = %828.3;
  %832 = %829.0;
  (%830, %831, meta[relay.Constant][32] /* ty=Tensor[(882), float64] */, %832)
}

def @func_11413() -> (Tensor[(11, 1, 16), float64],) {
  %833 = @func_8127() /* ty=(Tensor[(11, ?, 16), int8], Tensor[(11, 1, 16), float64]) */;
  %834 = %833.1;
  (%834,)
}

def @func_12191() -> Tensor[(11, 1, 16), float64] {
  %835 = @func_9357() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64]) */;
  %835.0
}

def @func_12126() -> (Tensor[(11, 1, 16), float64],) {
  %836 = @func_4563() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %837 = %836.0;
  (%837,)
}

def @func_11940(%var_11926: Tensor[(448), bool]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(1080), float32], Tensor[(448), bool], Tensor[(882), float64], Tensor[(2184), float64], Tensor[(11, 1, 16), float64]) {
  %838 = @func_4071() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %839 = cast(%var_11926, dtype="bool") /* ty=Tensor[(448), bool] */;
  %840 = cast(meta[relay.Constant][33] /* ty=Tensor[(882), float64] */, dtype="float64") /* ty=Tensor[(882), float64] */;
  %841 = reshape(%839, newshape=[8, 8, 7]) /* ty=Tensor[(8, 8, 7), bool] */;
  %842 = reshape(%840, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %843 = @func_7672(%841, %842) /* ty=(Tensor[(8, 8, 7), bool], Tensor[(882, 1), float64], Tensor[(882), float64], Tensor[(11, 1, 16), float64], Tensor[(1080), float32]) */;
  %844 = @func_11020() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(12, 14, 13), float64], Tensor[(2184), float64]) */;
  %845 = @func_2499() /* ty=Tensor[(11, 1, 16), float64] */;
  %846 = %838.0;
  %847 = %843.4;
  %848 = %844.3;
  %849 = @func_1446() /* ty=Tensor[(11, 1, 16), float64] */;
  (%845, %846, %847, %var_11926, meta[relay.Constant][33] /* ty=Tensor[(882), float64] */, %848, %849)
}

def @func_2148() -> Tensor[(11, 1, 16), float64] {
  @func_1446() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_14697() -> (Tensor[(11, 1, 16), float64],) {
  %850 = @func_10268() /* ty=Tensor[(11, 1, 16), float64] */;
  (%850,)
}

def @func_10024() -> (Tensor[(11, 1, 16), float64],) {
  %851 = @func_5043() /* ty=Tensor[(11, 1, 16), float64] */;
  (%851,)
}

def @func_13039() -> Tensor[(11, 1, 16), float64] {
  %852 = @func_6261() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %852.0
}

def @func_14721() -> (Tensor[(11, 1, 16), float64],) {
  %853 = @func_2370() /* ty=Tensor[(11, 1, 16), float64] */;
  (%853,)
}

def @func_14229() -> (Tensor[(11, ?, 16), int8], Tensor[(11, 9, 16), bool]) {
  %854 = @func_6757() /* ty=(Tensor[(11, ?, 16), int8], Tensor[(9, 11, 5), int16], float32, Tensor[(495), float32]) */;
  %855 = @func_12470() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %856 = %855.1;
  %857 = cast(%856, dtype="bool") /* ty=Tensor[(11, 1, 16), bool] */;
  %858 = cast(meta[relay.Constant][34] /* ty=Tensor[(11, 9, 16), float64] */, dtype="bool") /* ty=Tensor[(11, 9, 16), bool] */;
  %859 = %854.0;
  %860 = greater(%857, %858) /* ty=Tensor[(11, 9, 16), bool] */;
  (%859, %860)
}

def @func_14483() -> Tensor[(11, 1, 16), float64] {
  %861 = @func_10693() /* ty=(Tensor[(11, ?, 16), float32], Tensor[(11, 1, 16), float64]) */;
  %861.1
}

def @func_6422() -> (Tensor[(11, 1, 16), float64],) {
  %862 = @func_4826() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %863 = %862.2;
  (%863,)
}

def @func_1529() -> Tensor[(11, 1, 16), float64] {
  %864 = @func_1368() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) */;
  %864.0
}

def @func_6261() -> (Tensor[(11, 1, 16), float64],) {
  %865 = @func_3760() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %866 = %865.0;
  (%866,)
}

def @func_13743(%var_13722: Tensor[(350, 2), float32], %var_13733: Tensor[(350, 2), float32]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(350, 2), bool], Tensor[(350, 2), float64]) {
  %867 = @func_9033() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %868 = cast(%var_13722, dtype="float32") /* ty=Tensor[(350, 2), float32] */;
  %869 = reshape(%868, newshape=[14, 10, 5]) /* ty=Tensor[(14, 10, 5), float32] */;
  %870 = @func_2279(%869) /* ty=(Tensor[(14, 10, 5), float32], Tensor[(11, 1, 16), float64]) */;
  %871 = cast(%var_13733, dtype="bool") /* ty=Tensor[(350, 2), bool] */;
  %872 = shape_of(%var_13722, dtype="int32") /* ty=Tensor[(2), int32] */;
  %873 = cast(%var_13722, dtype="bool") /* ty=Tensor[(350, 2), bool] */;
  %874 = dyn.reshape(%871, %872, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %875 = cast(%var_13722, dtype="float64") /* ty=Tensor[(350, 2), float64] */;
  %876 = %867.0;
  %877 = @func_6930() /* ty=Tensor[(11, 1, 16), float64] */;
  %878 = %870.1;
  %879 = @func_3323() /* ty=Tensor[(11, 1, 16), float64] */;
  %880 = @func_9612() /* ty=Tensor[(11, 1, 16), float64] */;
  %881 = logical_or(%873, %874) /* ty=Tensor[(350, 2), bool] */;
  %882 = sqrt(%875) /* ty=Tensor[(350, 2), float64] */;
  (%876, %877, %878, %879, %880, %881, %882)
}

def @func_3532() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %883 = @func_2318() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %884 = @func_1676() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %885 = %883.0;
  %886 = %884.0;
  (%885, %886)
}

def @func_10954() -> Tensor[(11, 1, 16), float64] {
  %887 = @func_7814() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %887.0
}

def @func_13522() -> (Tensor[(4, 11, 4), float32], Tensor[(11, 1, 16), float64]) {
  %888 = cast(meta[relay.Constant][36] /* ty=Tensor[(4, 11, 4), uint16] */, dtype="uint16") /* ty=Tensor[(4, 11, 4), uint16] */;
  %889 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(4, 11, 4), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %890 = cast(meta[relay.Constant][35] /* ty=Tensor[(4, 11, 4), uint16] */, dtype="uint16") /* ty=Tensor[(4, 11, 4), uint16] */;
  %891 = dyn.reshape(%888, %889, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %892 = bitwise_xor(%890, %891) /* ty=Tensor[(4, 11, 4), uint16] */;
  %893 = cast(%892, dtype="float32") /* ty=Tensor[(4, 11, 4), float32] */;
  %894 = sin(%893) /* ty=Tensor[(4, 11, 4), float32] */;
  %895 = @func_11163() /* ty=Tensor[(11, 1, 16), float64] */;
  (%894, %895)
}

def @func_4010(%var_3981: Tensor[(882), float64]) -> (Tensor[(11, 1, 16), float64], Tensor[(10, 70), float32], Tensor[(882), float64], Tensor[(700), float32], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64]) {
  %896 = cast(%var_3981, dtype="float64") /* ty=Tensor[(882), float64] */;
  %897 = cast(meta[relay.Constant][37] /* ty=Tensor[(700), float32] */, dtype="float32") /* ty=Tensor[(700), float32] */;
  %898 = reshape(%896, newshape=[98, 9]) /* ty=Tensor[(98, 9), float64] */;
  %899 = reshape(%897, newshape=[10, 70]) /* ty=Tensor[(10, 70), float32] */;
  %900 = @func_2670(%898, %899) /* ty=(Tensor[(14, 10, 5), float32], Tensor[(10, 70), float32], Tensor[(11, 1, 16), float64], Tensor[(98, 9), float32], Tensor[(98, 9), float32]) */;
  %901 = @func_1368() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) */;
  %902 = @func_2499() /* ty=Tensor[(11, 1, 16), float64] */;
  %903 = %900.1;
  %904 = %901.1;
  %905 = @func_2499() /* ty=Tensor[(11, 1, 16), float64] */;
  (%902, %903, %var_3981, meta[relay.Constant][37] /* ty=Tensor[(700), float32] */, %904, %905)
}

def @func_3543() -> (Tensor[(11, 1, 16), float64],) {
  %906 = @func_2370() /* ty=Tensor[(11, 1, 16), float64] */;
  (%906,)
}

def @func_11401() -> (Tensor[(11, 1, 16), float64],) {
  %907 = @func_7915() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %908 = %907.3;
  (%908,)
}

def @func_10268() -> Tensor[(11, 1, 16), float64] {
  %909 = @func_8028() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %909.1
}

def @func_5935() -> (Tensor[(11, ?, 16), int8],) {
  %910 = @func_3868() /* ty=(Tensor[(11, ?, 16), int8], Tensor[(11, 1, 16), float64]) */;
  %911 = %910.0;
  (%911,)
}

def @func_10800() -> Tensor[(11, ?, 16), int16] {
  @func_5821() /* ty=Tensor[(11, ?, 16), int16] */
}

def @func_5652() -> Tensor[(11, 1, 16), float64] {
  %912 = @func_4563() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %912.0
}

def @func_11196() -> Tensor[(11, 1, 16), float64] {
  @func_6434() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_8377() -> (Tensor[(11, 1, 16), float64],) {
  %913 = @func_3543() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %914 = %913.0;
  (%914,)
}

def @func_9202() -> (Tensor[(11, 1, 16), float64],) {
  %915 = @func_1614() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %916 = %915.0;
  (%916,)
}

def @func_7279() -> (Tensor[(1080), float32],) {
  %917 = @func_3456() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(1080), float32]) */;
  %918 = %917.2;
  (%918,)
}

def @main(%var_15104: Tensor[(2, 224), bool], %var_15110: Tensor[(2, 224), bool]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(2, 224), bool], Tensor[(2, 224), bool]) {
  %919 = @func_4986() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %920 = cast(%var_15104, dtype="bool") /* ty=Tensor[(2, 224), bool] */;
  %921 = cast(meta[relay.Constant][38] /* ty=Tensor[(882), float64] */, dtype="float64") /* ty=Tensor[(882), float64] */;
  %922 = reshape(%920, newshape=[8, 8, 7]) /* ty=Tensor[(8, 8, 7), bool] */;
  %923 = reshape(%921, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %924 = @func_7672(%922, %923) /* ty=(Tensor[(8, 8, 7), bool], Tensor[(882, 1), float64], Tensor[(882), float64], Tensor[(11, 1, 16), float64], Tensor[(1080), float32]) */;
  %925 = cast(%var_15110, dtype="bool") /* ty=Tensor[(2, 224), bool] */;
  %926 = shape_of(%var_15104, dtype="int32") /* ty=Tensor[(2), int32] */;
  %927 = cast(%var_15104, dtype="bool") /* ty=Tensor[(2, 224), bool] */;
  %928 = dyn.reshape(%925, %926, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %929 = cast(%var_15104, dtype="bool") /* ty=Tensor[(2, 224), bool] */;
  %930 = shape_of(%var_15110, dtype="int32") /* ty=Tensor[(2), int32] */;
  %931 = cast(%var_15110, dtype="bool") /* ty=Tensor[(2, 224), bool] */;
  %932 = dyn.reshape(%929, %930, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %933 = %919.1;
  %934 = %924.3;
  %935 = less(%927, %928) /* ty=Tensor[(2, 224), bool] */;
  %936 = less_equal(%931, %932) /* ty=Tensor[(2, 224), bool] */;
  (%933, %934, meta[relay.Constant][38] /* ty=Tensor[(882), float64] */, %935, %936)
}

def @func_10185() -> (Tensor[(11, 1, 16), float64],) {
  %937 = @func_9512() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %938 = %937.0;
  (%938,)
}

def @func_12768() -> (Tensor[(11, 1, 16), float64],) {
  %939 = @func_8230() /* ty=Tensor[(11, 1, 16), float64] */;
  (%939,)
}

def @func_8127() -> (Tensor[(11, ?, 16), int8], Tensor[(11, 1, 16), float64]) {
  %940 = @func_3868() /* ty=(Tensor[(11, ?, 16), int8], Tensor[(11, 1, 16), float64]) */;
  %941 = %940.0;
  %942 = @func_2719() /* ty=Tensor[(11, 1, 16), float64] */;
  (%941, %942)
}

def @func_8230() -> Tensor[(11, 1, 16), float64] {
  %943 = @func_7915() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %943.3
}

def @func_3323() -> Tensor[(11, 1, 16), float64] {
  %944 = @func_1060() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %944.0
}

def @func_4668() -> (Tensor[(11, 1, 16), float64],) {
  %945 = @func_2788() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %946 = %945.1;
  (%946,)
}

def @func_11841() -> (Tensor[(11, 1, 16), float64], Tensor[(14, 9, 7), float64], Tensor[(882), float64]) {
  %947 = @func_1865() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) */;
  %948 = cast(meta[relay.Constant][39] /* ty=Tensor[(882), float64] */, dtype="float64") /* ty=Tensor[(882), float64] */;
  %949 = reshape(%948, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %950 = @func_1229(%949) /* ty=(Tensor[(11, ?, 16), bool], Tensor[(11, ?, 16), int16], Tensor[(11, ?, 16), bool], Tensor[(11, ?, 16), int16], Tensor[(11, ?, 16), float32], Tensor[(14, 9, 7), float64], Tensor[(882), float64], Tensor[(14, 9, 7), float64], Tensor[(14, 9, 7), float64]) */;
  %951 = %947.2;
  %952 = %950.8;
  (%951, %952, meta[relay.Constant][39] /* ty=Tensor[(882), float64] */)
}

def @func_6878() -> Tensor[(11, 1, 16), float64] {
  %953 = @func_6422() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %953.0
}

def @func_7302() -> Tensor[(11, 1, 16), float64] {
  @func_2499() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_10693() -> (Tensor[(11, ?, 16), float32], Tensor[(11, 1, 16), float64]) {
  %954 = @func_1518() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %955 = %954.0;
  %956 = @func_3868() /* ty=(Tensor[(11, ?, 16), int8], Tensor[(11, 1, 16), float64]) */;
  %957 = %956.0;
  %958 = cast(%957, dtype="float32") /* ty=Tensor[(11, ?, 16), float32] */;
  %959 = shape_of(%955, dtype="int32") /* ty=Tensor[(3), int32] */;
  %960 = cast(%955, dtype="float32") /* ty=Tensor[(11, 1, 16), float32] */;
  %961 = dyn.reshape(%958, %959, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %962 = @func_6848() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %963 = mod(%960, %961) /* ty=Tensor[(11, ?, 16), float32] */;
  %964 = %962.0;
  (%963, %964)
}

def @func_6373() -> Tensor[(11, 1, 16), float64] {
  @func_1446() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_4176(%var_4167: Tensor[(4, 11, 15), float32]) -> (Tensor[(4, 11, 15), float32],) {
  %965 = cast(%var_4167, dtype="float32") /* ty=Tensor[(4, 11, 15), float32] */;
  %966 = sigmoid(%965) /* ty=Tensor[(4, 11, 15), float32] */;
  (%966,)
}

def @func_5779(%var_5774: Tensor[(16, 7, 9), float32]) -> Tensor[(16, 7, 9), float32] {
  %967 = cast(%var_5774, dtype="float32") /* ty=Tensor[(16, 7, 9), float32] */;
  rsqrt(%967) /* ty=Tensor[(16, 7, 9), float32] */
}

def @func_9875(%var_9850: Tensor[(11, 8, 16), float64]) -> (Tensor[(11, 1, 16), float32], Tensor[(448), bool], Tensor[(882), float64], Tensor[(11, 8, 16), int8], float32) {
  %968 = @func_5764() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) */;
  %969 = cast(meta[relay.Constant][40] /* ty=Tensor[(448), bool] */, dtype="bool") /* ty=Tensor[(448), bool] */;
  %970 = cast(meta[relay.Constant][41] /* ty=Tensor[(882), float64] */, dtype="float64") /* ty=Tensor[(882), float64] */;
  %971 = reshape(%969, newshape=[8, 8, 7]) /* ty=Tensor[(8, 8, 7), bool] */;
  %972 = reshape(%970, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %973 = @func_7672(%971, %972) /* ty=(Tensor[(8, 8, 7), bool], Tensor[(882, 1), float64], Tensor[(882), float64], Tensor[(11, 1, 16), float64], Tensor[(1080), float32]) */;
  %974 = %973.3;
  %975 = cast(%974, dtype="int8") /* ty=Tensor[(11, 1, 16), int8] */;
  %976 = cast(%var_9850, dtype="int8") /* ty=Tensor[(11, 8, 16), int8] */;
  %977 = @func_6757() /* ty=(Tensor[(11, ?, 16), int8], Tensor[(9, 11, 5), int16], float32, Tensor[(495), float32]) */;
  %978 = %968.1;
  %979 = bitwise_or(%975, %976) /* ty=Tensor[(11, 8, 16), int8] */;
  %980 = %977.2;
  (%978, meta[relay.Constant][40] /* ty=Tensor[(448), bool] */, meta[relay.Constant][41] /* ty=Tensor[(882), float64] */, %979, %980)
}

def @func_13869(%var_13867: Tensor[(1080), float32]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), bool], Tensor[(1080), float32]) {
  %981 = cast(%var_13867, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %982 = reshape(%981, newshape=[1080]) /* ty=Tensor[(1080), float32] */;
  %983 = @func_6142(%982) /* ty=(Tensor[(700), float32], Tensor[(700), float32], Tensor[(11, ?, 16), bool], Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int16], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(1080), float32]) */;
  %984 = @func_10444() /* ty=Tensor[(11, 1, 16), float64] */;
  %985 = %983.2;
  (%984, %985, %var_13867)
}

def @func_7915() -> (Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %986 = @func_2318() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %987 = @func_3151() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %988 = @func_4668() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %989 = %986.0;
  %990 = %987.1;
  %991 = %988.0;
  %992 = @func_6358() /* ty=Tensor[(11, 1, 16), float64] */;
  %993 = @func_7302() /* ty=Tensor[(11, 1, 16), float64] */;
  (%989, %990, %991, %992, %993)
}

def @func_6884() -> (Tensor[(11, 1, 16), float64],) {
  %994 = @func_3151() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %995 = %994.3;
  (%995,)
}

def @func_2541() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(882), float32]) {
  %996 = @func_1614() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %997 = cast(meta[relay.Constant][42] /* ty=Tensor[(882), float64] */, dtype="float64") /* ty=Tensor[(882), float64] */;
  %998 = reshape(%997, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %999 = @func_1830(%998) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(14, 9, 7), uint32], Tensor[(11, 1, 16), float64], Tensor[(14, 9, 7), bool], Tensor[(11, 1, 16), float64]) */;
  %1000 = cast(meta[relay.Constant][42] /* ty=Tensor[(882), float64] */, dtype="float32") /* ty=Tensor[(882), float32] */;
  %1001 = %996.0;
  %1002 = %999.1;
  %1003 = log(%1000) /* ty=Tensor[(882), float32] */;
  (%1001, %1002, %1003)
}

def @func_7531(%var_7500: Tensor[(1920), float64], %var_7520: Tensor[(882), float64]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(700), float32], Tensor[(11, 1, 16), float64], Tensor[(10, 16, 12), float64], Tensor[(1920), float64], Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(1080), float32]) {
  %1004 = @func_4530() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %1005 = cast(meta[relay.Constant][43] /* ty=Tensor[(700), float32] */, dtype="float32") /* ty=Tensor[(700), float32] */;
  %1006 = reshape(%1005, newshape=[700]) /* ty=Tensor[(700), float32] */;
  %1007 = @func_5528(%1006) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(98, 9), uint8], Tensor[(700), float32], Tensor[(11, 1, 16), float64]) */;
  %1008 = @func_4986() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %1009 = cast(%var_7500, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %1010 = reshape(%1009, newshape=[10, 16, 12]) /* ty=Tensor[(10, 16, 12), float64] */;
  %1011 = @func_7196(%1010) /* ty=(Tensor[(10, 16, 12), float64],) */;
  %1012 = cast(%var_7520, dtype="float64") /* ty=Tensor[(882), float64] */;
  %1013 = cast(meta[relay.Constant][44] /* ty=Tensor[(1080), float32] */, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %1014 = reshape(%1012, newshape=[98, 9]) /* ty=Tensor[(98, 9), float64] */;
  %1015 = reshape(%1013, newshape=[6, 180]) /* ty=Tensor[(6, 180), float32] */;
  %1016 = @func_5219(%1014, %1015) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(98, 9), float64], Tensor[(14, 9, 7), float64], Tensor[(6, 180), float32], Tensor[(11, 1, 16), float64]) */;
  %1017 = @func_1089() /* ty=Tensor[(11, 1, 16), float64] */;
  %1018 = %1004.0;
  %1019 = %1007.3;
  %1020 = %1008.0;
  %1021 = %1011.0;
  %1022 = %1016.1;
  (%1017, %1018, %1019, meta[relay.Constant][43] /* ty=Tensor[(700), float32] */, %1020, %1021, %var_7500, %1022, %var_7520, meta[relay.Constant][44] /* ty=Tensor[(1080), float32] */)
}

def @func_2719() -> Tensor[(11, 1, 16), float64] {
  %1023 = @func_1312() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %1023.2
}

def @func_10605(%var_10571: Tensor[(15, 14, 10), float64], %var_10601: Tensor[(2288), float64]) -> (Tensor[(15, 14, 10), float64], Tensor[(11, ?, 16), int16], Tensor[(882), float64], Tensor[(11, 13, 16), bool], Tensor[(2288), float64]) {
  %1024 = cast(%var_10571, dtype="float64") /* ty=Tensor[(15, 14, 10), float64] */;
  %1025 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(15, 14, 10), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1026 = cast(meta[relay.Constant][45] /* ty=Tensor[(15, 14, 10), float64] */, dtype="float64") /* ty=Tensor[(15, 14, 10), float64] */;
  %1027 = dyn.reshape(%1024, %1025, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1028 = cast(meta[relay.Constant][46] /* ty=Tensor[(882), float64] */, dtype="float64") /* ty=Tensor[(882), float64] */;
  %1029 = reshape(%1028, newshape=[882, 1]) /* ty=Tensor[(882, 1), float64] */;
  %1030 = @func_4959(%1029) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(11, ?, 16), int16], Tensor[(882, 1), float64], Tensor[(11, 1, 16), float64]) */;
  %1031 = cast(%var_10601, dtype="float64") /* ty=Tensor[(2288), float64] */;
  %1032 = reshape(%1031, newshape=[11, 13, 16]) /* ty=Tensor[(11, 13, 16), float64] */;
  %1033 = @func_4296(%1032) /* ty=(Tensor[(11, 13, 16), bool], Tensor[(11, 1, 16), float64], Tensor[(4, 11, 15), float32], Tensor[(660), float32], Tensor[(11, 13, 16), float64]) */;
  %1034 = divide(%1026, %1027) /* ty=Tensor[(15, 14, 10), float64] */;
  %1035 = %1030.2;
  %1036 = %1033.0;
  (%1034, %1035, meta[relay.Constant][46] /* ty=Tensor[(882), float64] */, %1036, %var_10601)
}

def @func_6930() -> Tensor[(11, 1, 16), float64] {
  %1037 = @func_6422() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %1037.0
}

def @func_7814() -> (Tensor[(11, 1, 16), float64],) {
  %1038 = @func_2318() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %1039 = %1038.0;
  (%1039,)
}

def @func_8307() -> Tensor[(11, 1, 16), float64] {
  @func_8290() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_3456() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(1080), float32]) {
  %1040 = @func_3151() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %1041 = cast(meta[relay.Constant][47] /* ty=Tensor[(1080), float32] */, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %1042 = reshape(%1041, newshape=[3, 360]) /* ty=Tensor[(3, 360), float32] */;
  %1043 = @func_3018(%1042) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), bool], Tensor[(11, ?, 16), float64], Tensor[(3, 360), float32]) */;
  %1044 = %1040.2;
  %1045 = %1043.0;
  (%1044, %1045, meta[relay.Constant][47] /* ty=Tensor[(1080), float32] */)
}

def @func_11504() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %1046 = @func_7944() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %1047 = @func_5126() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %1048 = @func_10024() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %1049 = %1046.0;
  %1050 = %1047.2;
  %1051 = %1048.0;
  (%1049, %1050, %1051)
}

def @func_11778() -> (Tensor[(11, 1, 16), float64],) {
  %1052 = @func_6422() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %1053 = %1052.0;
  (%1053,)
}

def @func_8755() -> (Tensor[(11, 1, 16), float64],) {
  %1054 = @func_6652() /* ty=Tensor[(11, 1, 16), float64] */;
  (%1054,)
}

def @func_13262(%var_13256: Tensor[(12, 15, 5), float32], %var_13257: Tensor[(12, 15, 5), float32]) -> (Tensor[(12, 15, 5), bool],) {
  %1055 = cast(%var_13257, dtype="bool") /* ty=Tensor[(12, 15, 5), bool] */;
  %1056 = shape_of(%var_13256, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1057 = cast(%var_13256, dtype="bool") /* ty=Tensor[(12, 15, 5), bool] */;
  %1058 = dyn.reshape(%1055, %1056, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1059 = equal(%1057, %1058) /* ty=Tensor[(12, 15, 5), bool] */;
  (%1059,)
}

def @func_9033() -> (Tensor[(11, 1, 16), float64],) {
  %1060 = @func_2370() /* ty=Tensor[(11, 1, 16), float64] */;
  (%1060,)
}

def @func_8484(%var_8456: Tensor[(1080), float32]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(1080), float32], Tensor[(882, 1), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(98, 9), uint8], Tensor[(700), float32]) {
  %1061 = cast(meta[relay.Constant][48] /* ty=Tensor[(882, 1), float64] */, dtype="float64") /* ty=Tensor[(882, 1), float64] */;
  %1062 = cast(%var_8456, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %1063 = reshape(%1061, newshape=[98, 9]) /* ty=Tensor[(98, 9), float64] */;
  %1064 = reshape(%1062, newshape=[6, 180]) /* ty=Tensor[(6, 180), float32] */;
  %1065 = @func_5219(%1063, %1064) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(98, 9), float64], Tensor[(14, 9, 7), float64], Tensor[(6, 180), float32], Tensor[(11, 1, 16), float64]) */;
  %1066 = cast(meta[relay.Constant][48] /* ty=Tensor[(882, 1), float64] */, dtype="float64") /* ty=Tensor[(882, 1), float64] */;
  %1067 = @func_6884() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %1068 = @func_8028() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %1069 = cast(meta[relay.Constant][49] /* ty=Tensor[(700), float32] */, dtype="float32") /* ty=Tensor[(700), float32] */;
  %1070 = reshape(%1069, newshape=[700]) /* ty=Tensor[(700), float32] */;
  %1071 = @func_3087(%1070) /* ty=(Tensor[(11, ?, 16), int64], Tensor[(700), float32], Tensor[(98, 9), uint8], Tensor[(11, 1, 16), float64]) */;
  %1072 = @func_6373() /* ty=Tensor[(11, 1, 16), float64] */;
  %1073 = %1065.0;
  %1074 = tan(%1066) /* ty=Tensor[(882, 1), float64] */;
  %1075 = %1067.0;
  %1076 = %1068.0;
  %1077 = %1071.2;
  (%1072, %1073, %var_8456, %1074, %1075, %1076, %1077, meta[relay.Constant][49] /* ty=Tensor[(700), float32] */)
}

def @func_3385() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %1078 = @func_1368() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) */;
  %1079 = @func_1518() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %1080 = %1078.0;
  %1081 = %1079.0;
  (%1080, %1081)
}

def @func_6652() -> Tensor[(11, 1, 16), float64] {
  @func_2719() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_7196(%var_7171: Tensor[(10, 16, 12), float64]) -> (Tensor[(10, 16, 12), float64],) {
  %1082 = cast(%var_7171, dtype="float64") /* ty=Tensor[(10, 16, 12), float64] */;
  %1083 = cos(%1082) /* ty=Tensor[(10, 16, 12), float64] */;
  (%1083,)
}

def @func_14423(%var_14412: Tensor[(9, 2, 11), uint32]) -> (Tensor[(9, 2, 11), uint32], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %1084 = cast(meta[relay.Constant][50] /* ty=Tensor[(9, 1, 11), uint32] */, dtype="uint32") /* ty=Tensor[(9, 1, 11), uint32] */;
  %1085 = cast(%var_14412, dtype="uint32") /* ty=Tensor[(9, 2, 11), uint32] */;
  %1086 = @func_1518() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %1087 = @func_4563() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %1088 = add(%1084, %1085) /* ty=Tensor[(9, 2, 11), uint32] */;
  %1089 = %1086.0;
  %1090 = %1087.0;
  (%1088, %1089, %1090)
}

def @func_6142(%var_6138: Tensor[(1080), float32]) -> (Tensor[(700), float32], Tensor[(700), float32], Tensor[(11, ?, 16), bool], Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int16], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(1080), float32]) {
  %1091 = cast(meta[relay.Constant][51] /* ty=Tensor[(700), float32] */, dtype="float32") /* ty=Tensor[(700), float32] */;
  %1092 = reshape(%1091, newshape=[700]) /* ty=Tensor[(700), float32] */;
  %1093 = @func_5528(%1092) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(98, 9), uint8], Tensor[(700), float32], Tensor[(11, 1, 16), float64]) */;
  %1094 = @func_3532() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %1095 = %1094.0;
  %1096 = @func_2467() /* ty=Tensor[(11, ?, 16), int64] */;
  %1097 = cast(%1096, dtype="bool") /* ty=Tensor[(11, ?, 16), bool] */;
  %1098 = shape_of(%1095, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1099 = cast(%1095, dtype="bool") /* ty=Tensor[(11, 1, 16), bool] */;
  %1100 = dyn.reshape(%1097, %1098, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1101 = @func_5126() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %1102 = cast(%var_6138, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %1103 = reshape(%1102, newshape=[1080]) /* ty=Tensor[(1080), float32] */;
  %1104 = @func_2856(%1103) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(1080), float32], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) */;
  %1105 = %1093.2;
  %1106 = equal(%1099, %1100) /* ty=Tensor[(11, ?, 16), bool] */;
  %1107 = %1101.3;
  %1108 = @func_5821() /* ty=Tensor[(11, ?, 16), int16] */;
  %1109 = @func_3626() /* ty=Tensor[(11, 1, 16), float64] */;
  %1110 = %1104.2;
  (%1105, meta[relay.Constant][51] /* ty=Tensor[(700), float32] */, %1106, %1107, %1108, %1109, %1110, %var_6138)
}

def @func_9512() -> (Tensor[(11, 1, 16), float64],) {
  %1111 = @func_4563() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %1112 = %1111.0;
  (%1112,)
}

def @func_2856(%var_2827: Tensor[(1080), float32]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(1080), float32], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) {
  %1113 = @func_1865() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) */;
  %1114 = @func_1368() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) */;
  %1115 = @func_2788() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %1116 = cast(%var_2827, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %1117 = cast(meta[relay.Constant][52] /* ty=Tensor[(882), float64] */, dtype="float64") /* ty=Tensor[(882), float64] */;
  %1118 = reshape(%1116, newshape=[6, 15, 12]) /* ty=Tensor[(6, 15, 12), float32] */;
  %1119 = reshape(%1117, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %1120 = @func_1409(%1118, %1119) /* ty=(Tensor[(6, 15, 12), float32], Tensor[(14, 9, 7), float64], Tensor[(882), float64]) */;
  %1121 = @func_1648() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %1122 = %1113.0;
  %1123 = %1114.1;
  %1124 = %1115.0;
  %1125 = %1120.2;
  %1126 = %1121.0;
  (%1122, %1123, %1124, %1125, %var_2827, meta[relay.Constant][52] /* ty=Tensor[(882), float64] */, %1126)
}

def @func_2388() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) {
  %1127 = @func_2308() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64]) */;
  %1128 = @func_1446() /* ty=Tensor[(11, 1, 16), float64] */;
  %1129 = %1127.2;
  (%1128, %1129)
}

def @func_5594() -> Tensor[(11, ?, 16), int8] {
  %1130 = @func_3532() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %1131 = %1130.0;
  %1132 = @func_2148() /* ty=Tensor[(11, 1, 16), float64] */;
  %1133 = cast(%1132, dtype="int8") /* ty=Tensor[(11, 1, 16), int8] */;
  %1134 = shape_of(%1131, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1135 = cast(%1131, dtype="int8") /* ty=Tensor[(11, 1, 16), int8] */;
  %1136 = dyn.reshape(%1133, %1134, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  subtract(%1135, %1136) /* ty=Tensor[(11, ?, 16), int8] */
}

def @func_1312() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %1137 = @func_1060() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %1138 = @func_1060() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %1139 = @func_1089() /* ty=Tensor[(11, 1, 16), float64] */;
  %1140 = %1137.0;
  %1141 = %1138.0;
  (%1139, %1140, %1141)
}

def @func_1865() -> (Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) {
  %1142 = cast(meta[relay.Constant][53] /* ty=Tensor[(882), float64] */, dtype="float64") /* ty=Tensor[(882), float64] */;
  %1143 = reshape(%1142, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %1144 = @func_1830(%1143) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(14, 9, 7), uint32], Tensor[(11, 1, 16), float64], Tensor[(14, 9, 7), bool], Tensor[(11, 1, 16), float64]) */;
  %1145 = @func_1614() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %1146 = %1145.1;
  %1147 = cast(%1146, dtype="float64") /* ty=Tensor[(11, 1, 16), float64] */;
  %1148 = acos(%1147) /* ty=Tensor[(11, 1, 16), float64] */;
  %1149 = cast(%1148, dtype="float64") /* ty=Tensor[(11, 1, 16), float64] */;
  %1150 = %1144.4;
  %1151 = sigmoid(%1149) /* ty=Tensor[(11, 1, 16), float64] */;
  (%1150, meta[relay.Constant][53] /* ty=Tensor[(882), float64] */, %1151)
}

def @func_6832() -> Tensor[(11, 1, 16), float64] {
  %1152 = @func_4071() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %1152.1
}

def @func_14763() -> (Tensor[(11, ?, 16), float32],) {
  %1153 = @func_8028() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %1154 = %1153.0;
  %1155 = @func_6930() /* ty=Tensor[(11, 1, 16), float64] */;
  %1156 = cast(%1155, dtype="float32") /* ty=Tensor[(11, 1, 16), float32] */;
  %1157 = shape_of(%1154, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1158 = cast(%1154, dtype="float32") /* ty=Tensor[(11, 1, 16), float32] */;
  %1159 = dyn.reshape(%1156, %1157, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1160 = floor_divide(%1158, %1159) /* ty=Tensor[(11, ?, 16), float32] */;
  (%1160,)
}

def @func_14280() -> (Tensor[(11, ?, 16), int16],) {
  %1161 = @func_5821() /* ty=Tensor[(11, ?, 16), int16] */;
  (%1161,)
}

def @func_2670(%var_2617: Tensor[(98, 9), float64], %var_2639: Tensor[(10, 70), float32]) -> (Tensor[(14, 10, 5), float32], Tensor[(10, 70), float32], Tensor[(11, 1, 16), float64], Tensor[(98, 9), float32], Tensor[(98, 9), float32]) {
  %1162 = cast(%var_2639, dtype="float32") /* ty=Tensor[(10, 70), float32] */;
  %1163 = reshape(%1162, newshape=[14, 10, 5]) /* ty=Tensor[(14, 10, 5), float32] */;
  %1164 = @func_2279(%1163) /* ty=(Tensor[(14, 10, 5), float32], Tensor[(11, 1, 16), float64]) */;
  %1165 = @func_1997() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %1166 = @func_2427() /* ty=(Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64], Tensor[(56), float64], Tensor[(98, 9), float64]) */;
  %1167 = %1166.3;
  %1168 = cast(%var_2617, dtype="uint32") /* ty=Tensor[(98, 9), uint32] */;
  %1169 = shape_of(%1167, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1170 = cast(%1167, dtype="uint32") /* ty=Tensor[(98, 9), uint32] */;
  %1171 = dyn.reshape(%1168, %1169, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %1172 = minimum(%1170, %1171) /* ty=Tensor[(98, 9), uint32] */;
  %1173 = cast(%1167, dtype="float32") /* ty=Tensor[(98, 9), float32] */;
  %1174 = shape_of(%1172, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1175 = cast(%1172, dtype="float32") /* ty=Tensor[(98, 9), float32] */;
  %1176 = dyn.reshape(%1173, %1174, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1177 = cast(%1167, dtype="float32") /* ty=Tensor[(98, 9), float32] */;
  %1178 = %1164.0;
  %1179 = %1165.0;
  %1180 = floor_mod(%1175, %1176) /* ty=Tensor[(98, 9), float32] */;
  %1181 = sinh(%1177) /* ty=Tensor[(98, 9), float32] */;
  (%1178, %var_2639, %1179, %1180, %1181)
}

def @func_4462(%var_4441: Tensor[(880), float64]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(880), float64]) {
  %1182 = @func_3760() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %1183 = cast(%var_4441, dtype="float64") /* ty=Tensor[(880), float64] */;
  %1184 = reshape(%1183, newshape=[11, 5, 16]) /* ty=Tensor[(11, 5, 16), float64] */;
  %1185 = @func_3247(%1184) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 5, 16), int64], Tensor[(11, 1, 16), float64]) */;
  %1186 = %1182.0;
  %1187 = %1185.2;
  (%1186, %1187, %var_4441)
}

def @func_9558(%var_9556: Tensor[(1920), float64]) -> (Tensor[(11, 1, 16), float64], Tensor[(10, 16, 12), float64], Tensor[(1920), float64]) {
  %1188 = @func_3543() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %1189 = cast(%var_9556, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %1190 = reshape(%1189, newshape=[10, 16, 12]) /* ty=Tensor[(10, 16, 12), float64] */;
  %1191 = @func_7196(%1190) /* ty=(Tensor[(10, 16, 12), float64],) */;
  %1192 = %1188.0;
  %1193 = %1191.0;
  (%1192, %1193, %var_9556)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_3457() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(1080), float32]) {
  %6 = fn () -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(1080), float32]) {
    %0 = @func_3151() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
    %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(1080), float32] */, dtype="float32") /* ty=Tensor[(1080), float32] */;
    %2 = reshape(%1, newshape=[3, 360]) /* ty=Tensor[(3, 360), float32] */;
    %3 = @func_3018(%2) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), bool], Tensor[(11, ?, 16), float64], Tensor[(3, 360), float32]) */;
    %4 = %0.2;
    %5 = %3.0;
    (%4, %5, meta[relay.Constant][0] /* ty=Tensor[(1080), float32] */)
  };
  %6() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(1080), float32]) */
}

def @func_1614() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %7 = @func_1518() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %8 = %7.0;
  %9 = @func_1529() /* ty=Tensor[(11, 1, 16), float64] */;
  (%8, %9)
}

def @func_12501() -> (Tensor[(11, 1, 16), float32],) {
  %10 = @func_9989() /* ty=Tensor[(11, 1, 16), float32] */;
  (%10,)
}

def @func_6359() -> Tensor[(11, 1, 16), float64] {
  %12 = fn () -> Tensor[(11, 1, 16), float64] {
    %11 = @func_3532() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
    %11.1
  };
  %12() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_1089() -> Tensor[(11, 1, 16), float64] {
  %13 = @func_1060() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %14 = %13.0;
  %15 = cast(%14, dtype="float64") /* ty=Tensor[(11, 1, 16), float64] */;
  rsqrt(%15) /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_12126() -> (Tensor[(11, 1, 16), float64],) {
  %16 = @func_4563() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %17 = %16.0;
  (%17,)
}

def @func_3534() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  @func_3532() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */
}

def @func_8493() -> Tensor[(11, 1, 16), float64] {
  %19 = fn () -> Tensor[(11, 1, 16), float64] {
    %18 = @func_7814() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %18.0
  };
  %19() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_8195() -> (Tensor[(11, 1, 16), float64], Tensor[(3, 10, 4), float64]) {
  %34 = fn () -> (Tensor[(11, 1, 16), float64], Tensor[(3, 10, 4), float64]) {
    %20 = @func_2308() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64]) */;
    %21 = cast(meta[relay.Constant][2] /* ty=Tensor[(3, 10, 4), int8] */, dtype="int8") /* ty=Tensor[(3, 10, 4), int8] */;
    %22 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(3, 10, 4), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %23 = cast(meta[relay.Constant][1] /* ty=Tensor[(3, 10, 4), int8] */, dtype="int8") /* ty=Tensor[(3, 10, 4), int8] */;
    %24 = dyn.reshape(%21, %22, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %25 = maximum(%23, %24) /* ty=Tensor[(3, 10, 4), int8] */;
    %26 = cast(%25, dtype="float32") /* ty=Tensor[(3, 10, 4), float32] */;
    %27 = rsqrt(%26) /* ty=Tensor[(3, 10, 4), float32] */;
    %28 = cast(%25, dtype="float64") /* ty=Tensor[(3, 10, 4), float64] */;
    %29 = shape_of(%27, dtype="int32") /* ty=Tensor[(3), int32] */;
    %30 = cast(%27, dtype="float64") /* ty=Tensor[(3, 10, 4), float64] */;
    %31 = dyn.reshape(%28, %29, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %32 = %20.1;
    %33 = floor_divide(%30, %31) /* ty=Tensor[(3, 10, 4), float64] */;
    (%32, %33)
  };
  %34() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(3, 10, 4), float64]) */
}

def @func_11841() -> (Tensor[(11, 1, 16), float64], Tensor[(14, 9, 7), float64], Tensor[(882), float64]) {
  %35 = @func_1865() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) */;
  %36 = cast(meta[relay.Constant][3] /* ty=Tensor[(882), float64] */, dtype="float64") /* ty=Tensor[(882), float64] */;
  %37 = reshape(%36, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %38 = @func_1229(%37) /* ty=(Tensor[(11, ?, 16), bool], Tensor[(11, ?, 16), int16], Tensor[(11, ?, 16), bool], Tensor[(11, ?, 16), int16], Tensor[(11, ?, 16), float32], Tensor[(14, 9, 7), float64], Tensor[(882), float64], Tensor[(14, 9, 7), float64], Tensor[(14, 9, 7), float64]) */;
  %39 = %35.2;
  %40 = %38.8;
  (%39, %40, meta[relay.Constant][3] /* ty=Tensor[(882), float64] */)
}

def @func_9990() -> Tensor[(11, 1, 16), float32] {
  %42 = fn () -> Tensor[(11, 1, 16), float32] {
    %41 = @func_2388() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) */;
    %41.1
  };
  %42() /* ty=Tensor[(11, 1, 16), float32] */
}

def @func_1529() -> Tensor[(11, 1, 16), float64] {
  %43 = @func_1368() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) */;
  %43.0
}

def @func_12471() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %49 = fn () -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
    %44 = @func_7944() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %45 = @func_2541() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(882), float32]) */;
    %46 = @func_11196() /* ty=Tensor[(11, 1, 16), float64] */;
    %47 = %44.0;
    %48 = %45.1;
    (%46, %47, %48)
  };
  %49() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */
}

def @func_12094() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  @func_12092() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */
}

def @func_12191() -> Tensor[(11, 1, 16), float64] {
  %50 = @func_9357() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64]) */;
  %50.0
}

def @func_11402() -> (Tensor[(11, 1, 16), float64],) {
  %53 = fn () -> (Tensor[(11, 1, 16), float64],) {
    %51 = @func_7915() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
    %52 = %51.3;
    (%52,)
  };
  %53() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_2318() -> (Tensor[(11, 1, 16), float64],) {
  %54 = @func_1446() /* ty=Tensor[(11, 1, 16), float64] */;
  (%54,)
}

def @func_3628() -> Tensor[(11, 1, 16), float64] {
  @func_3626() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_9878(%var_9876: Tensor[(11, 8, 16), float64]) -> (Tensor[(11, 1, 16), float32], Tensor[(448), bool], Tensor[(882), float64], Tensor[(11, 8, 16), int8], float32) {
  @func_9875(%var_9876) /* ty=(Tensor[(11, 1, 16), float32], Tensor[(448), bool], Tensor[(882), float64], Tensor[(11, 8, 16), int8], float32) */
}

def @func_5405(%var_5403: Tensor[(5, 16, 8), int64]) -> (Tensor[(5, 16, 8), int64],) {
  @func_5402(%var_5403) /* ty=(Tensor[(5, 16, 8), int64],) */
}

def @func_2543() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(882), float32]) {
  @func_2541() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(882), float32]) */
}

def @func_2673(%var_2671: Tensor[(98, 9), float64], %var_2672: Tensor[(10, 70), float32]) -> (Tensor[(14, 10, 5), float32], Tensor[(10, 70), float32], Tensor[(11, 1, 16), float64], Tensor[(98, 9), float32], Tensor[(98, 9), float32]) {
  %75 = fn (%var_2617: Tensor[(98, 9), float64], %var_2639: Tensor[(10, 70), float32]) -> (Tensor[(14, 10, 5), float32], Tensor[(10, 70), float32], Tensor[(11, 1, 16), float64], Tensor[(98, 9), float32], Tensor[(98, 9), float32]) {
    %55 = cast(%var_2639, dtype="float32") /* ty=Tensor[(10, 70), float32] */;
    %56 = reshape(%55, newshape=[14, 10, 5]) /* ty=Tensor[(14, 10, 5), float32] */;
    %57 = @func_2279(%56) /* ty=(Tensor[(14, 10, 5), float32], Tensor[(11, 1, 16), float64]) */;
    %58 = @func_1997() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %59 = @func_2427() /* ty=(Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64], Tensor[(56), float64], Tensor[(98, 9), float64]) */;
    %60 = %59.3;
    %61 = cast(%var_2617, dtype="uint32") /* ty=Tensor[(98, 9), uint32] */;
    %62 = shape_of(%60, dtype="int32") /* ty=Tensor[(2), int32] */;
    %63 = cast(%60, dtype="uint32") /* ty=Tensor[(98, 9), uint32] */;
    %64 = dyn.reshape(%61, %62, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %65 = minimum(%63, %64) /* ty=Tensor[(98, 9), uint32] */;
    %66 = cast(%60, dtype="float32") /* ty=Tensor[(98, 9), float32] */;
    %67 = shape_of(%65, dtype="int32") /* ty=Tensor[(2), int32] */;
    %68 = cast(%65, dtype="float32") /* ty=Tensor[(98, 9), float32] */;
    %69 = dyn.reshape(%66, %67, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %70 = cast(%60, dtype="float32") /* ty=Tensor[(98, 9), float32] */;
    %71 = %57.0;
    %72 = %58.0;
    %73 = floor_mod(%68, %69) /* ty=Tensor[(98, 9), float32] */;
    %74 = sinh(%70) /* ty=Tensor[(98, 9), float32] */;
    (%71, %var_2639, %72, %73, %74)
  };
  %75(%var_2671, %var_2672) /* ty=(Tensor[(14, 10, 5), float32], Tensor[(10, 70), float32], Tensor[(11, 1, 16), float64], Tensor[(98, 9), float32], Tensor[(98, 9), float32]) */
}

def @func_11197() -> Tensor[(11, 1, 16), float64] {
  %76 = fn () -> Tensor[(11, 1, 16), float64] {
    @func_6434() /* ty=Tensor[(11, 1, 16), float64] */
  };
  %76() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_2790() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  @func_2788() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */
}

def @func_7199(%var_7197: Tensor[(10, 16, 12), float64]) -> (Tensor[(10, 16, 12), float64],) {
  @func_7196(%var_7197) /* ty=(Tensor[(10, 16, 12), float64],) */
}

def @func_3626() -> Tensor[(11, 1, 16), float64] {
  %77 = @func_3385() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %77.1
}

def @func_1231(%var_1230: Tensor[(882), float64]) -> (Tensor[(11, ?, 16), bool], Tensor[(11, ?, 16), int16], Tensor[(11, ?, 16), bool], Tensor[(11, ?, 16), int16], Tensor[(11, ?, 16), float32], Tensor[(14, 9, 7), float64], Tensor[(882), float64], Tensor[(14, 9, 7), float64], Tensor[(14, 9, 7), float64]) {
  %126 = fn (%var_1207: Tensor[(882), float64]) -> (Tensor[(11, ?, 16), bool], Tensor[(11, ?, 16), int16], Tensor[(11, ?, 16), bool], Tensor[(11, ?, 16), int16], Tensor[(11, ?, 16), float32], Tensor[(14, 9, 7), float64], Tensor[(882), float64], Tensor[(14, 9, 7), float64], Tensor[(14, 9, 7), float64]) {
    %78 = @func_1089() /* ty=Tensor[(11, 1, 16), float64] */;
    %79 = cast(%78, dtype="float64") /* ty=Tensor[(11, 1, 16), float64] */;
    %80 = exp(%79) /* ty=Tensor[(11, 1, 16), float64] */;
    %81 = cast(%80, dtype="uint8") /* ty=Tensor[(11, 1, 16), uint8] */;
    %82 = shape_of(%78, dtype="int32") /* ty=Tensor[(3), int32] */;
    %83 = cast(%78, dtype="uint8") /* ty=Tensor[(11, 1, 16), uint8] */;
    %84 = dyn.reshape(%81, %82, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %85 = bitwise_and(%83, %84) /* ty=Tensor[(11, ?, 16), uint8] */;
    %86 = cast(%78, dtype="bool") /* ty=Tensor[(11, 1, 16), bool] */;
    %87 = shape_of(%85, dtype="int32") /* ty=Tensor[(3), int32] */;
    %88 = cast(%85, dtype="bool") /* ty=Tensor[(11, ?, 16), bool] */;
    %89 = dyn.reshape(%86, %87, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %90 = cast(%80, dtype="float32") /* ty=Tensor[(11, 1, 16), float32] */;
    %91 = shape_of(%85, dtype="int32") /* ty=Tensor[(3), int32] */;
    %92 = cast(%85, dtype="float32") /* ty=Tensor[(11, ?, 16), float32] */;
    %93 = dyn.reshape(%90, %91, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %94 = power(%92, %93) /* ty=Tensor[(11, ?, 16), float32] */;
    %95 = cast(%78, dtype="int16") /* ty=Tensor[(11, 1, 16), int16] */;
    %96 = shape_of(%94, dtype="int32") /* ty=Tensor[(3), int32] */;
    %97 = cast(%94, dtype="int16") /* ty=Tensor[(11, ?, 16), int16] */;
    %98 = dyn.reshape(%95, %96, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %99 = @func_1060() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %100 = %99.0;
    %101 = cast(%78, dtype="bool") /* ty=Tensor[(11, 1, 16), bool] */;
    %102 = shape_of(%100, dtype="int32") /* ty=Tensor[(3), int32] */;
    %103 = cast(%100, dtype="bool") /* ty=Tensor[(11, 1, 16), bool] */;
    %104 = dyn.reshape(%101, %102, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %105 = @func_1060() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %106 = %105.0;
    %107 = cast(%85, dtype="int16") /* ty=Tensor[(11, ?, 16), int16] */;
    %108 = shape_of(%106, dtype="int32") /* ty=Tensor[(3), int32] */;
    %109 = cast(%106, dtype="int16") /* ty=Tensor[(11, 1, 16), int16] */;
    %110 = dyn.reshape(%107, %108, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %111 = cast(%94, dtype="float32") /* ty=Tensor[(11, ?, 16), float32] */;
    %112 = cast(%var_1207, dtype="float64") /* ty=Tensor[(882), float64] */;
    %113 = reshape(%112, newshape=[14, 9, 7]) /* ty=Tensor[(14, 9, 7), float64] */;
    %114 = @func_636(%113) /* ty=Tensor[(14, 9, 7), float64] */;
    %115 = cast(%114, dtype="float64") /* ty=Tensor[(14, 9, 7), float64] */;
    %116 = reshape(%115, newshape=[14, 9, 7]) /* ty=Tensor[(14, 9, 7), float64] */;
    %117 = cast(%var_1207, dtype="float64") /* ty=Tensor[(882), float64] */;
    %118 = reshape(%117, newshape=[14, 9, 7]) /* ty=Tensor[(14, 9, 7), float64] */;
    %119 = greater_equal(%88, %89) /* ty=Tensor[(11, ?, 16), bool] */;
    %120 = right_shift(%97, %98) /* ty=Tensor[(11, ?, 16), int16] */;
    %121 = logical_or(%103, %104) /* ty=Tensor[(11, ?, 16), bool] */;
    %122 = maximum(%109, %110) /* ty=Tensor[(11, ?, 16), int16] */;
    %123 = sinh(%111) /* ty=Tensor[(11, ?, 16), float32] */;
    %124 = @func_636(%116) /* ty=Tensor[(14, 9, 7), float64] */;
    %125 = @func_636(%118) /* ty=Tensor[(14, 9, 7), float64] */;
    (%119, %120, %121, %122, %123, %114, %var_1207, %124, %125)
  };
  %126(%var_1230) /* ty=(Tensor[(11, ?, 16), bool], Tensor[(11, ?, 16), int16], Tensor[(11, ?, 16), bool], Tensor[(11, ?, 16), int16], Tensor[(11, ?, 16), float32], Tensor[(14, 9, 7), float64], Tensor[(882), float64], Tensor[(14, 9, 7), float64], Tensor[(14, 9, 7), float64]) */
}

def @func_10371() -> (Tensor[(16, 14, 13), float32], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(880), float64]) {
  %127 = cast(2.78617f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %128 = cast(meta[relay.Constant][4] /* ty=Tensor[(16, 14, 13), float32] */, dtype="float32") /* ty=Tensor[(16, 14, 13), float32] */;
  %129 = cast(meta[relay.Constant][5] /* ty=Tensor[(880), float64] */, dtype="float64") /* ty=Tensor[(880), float64] */;
  %130 = reshape(%129, newshape=[11, 5, 16]) /* ty=Tensor[(11, 5, 16), float64] */;
  %131 = @func_3247(%130) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 5, 16), int64], Tensor[(11, 1, 16), float64]) */;
  %132 = power(%127, %128) /* ty=Tensor[(16, 14, 13), float32] */;
  %133 = @func_6652() /* ty=Tensor[(11, 1, 16), float64] */;
  %134 = %131.2;
  (%132, %133, %134, meta[relay.Constant][5] /* ty=Tensor[(880), float64] */)
}

def @func_2310() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64]) {
  @func_2308() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64]) */
}

def @func_5765() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) {
  %139 = fn () -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) {
    %135 = @func_5711() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %136 = @func_5126() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
    %137 = %135.0;
    %138 = %136.1;
    (%137, %138)
  };
  %139() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) */
}

def @func_11246(%var_11245: Tensor[(1, 9, 12), float64]) -> Tensor[(1, 9, 12), float64] {
  %141 = fn (%var_11229: Tensor[(1, 9, 12), float64]) -> Tensor[(1, 9, 12), float64] {
    %140 = cast(%var_11229, dtype="float64") /* ty=Tensor[(1, 9, 12), float64] */;
    rsqrt(%140) /* ty=Tensor[(1, 9, 12), float64] */
  };
  %141(%var_11245) /* ty=Tensor[(1, 9, 12), float64] */
}

def @func_10232(%var_10230: Tensor[(4, 1, 13), float64], %var_10231: Tensor[(4, 7, 13), float64]) -> (Tensor[(4, 7, 13), float64], Tensor[(4, 7, 13), float32]) {
  @func_10228(%var_10230, %var_10231) /* ty=(Tensor[(4, 7, 13), float64], Tensor[(4, 7, 13), float32]) */
}

def @func_12178(%var_12171: Tensor[(14, 9, 7), float64]) -> (Tensor[(14, 9, 7), int64],) {
  %142 = @func_11841() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(14, 9, 7), float64], Tensor[(882), float64]) */;
  %143 = %142.1;
  %144 = cast(%var_12171, dtype="int64") /* ty=Tensor[(14, 9, 7), int64] */;
  %145 = shape_of(%143, dtype="int32") /* ty=Tensor[(3), int32] */;
  %146 = cast(%143, dtype="int64") /* ty=Tensor[(14, 9, 7), int64] */;
  %147 = dyn.reshape(%144, %145, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %148 = bitwise_xor(%146, %147) /* ty=Tensor[(14, 9, 7), int64] */;
  (%148,)
}

def @func_5821() -> Tensor[(11, ?, 16), int16] {
  %149 = @func_3385() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %150 = %149.1;
  %151 = @func_3626() /* ty=Tensor[(11, 1, 16), float64] */;
  %152 = cast(%151, dtype="int16") /* ty=Tensor[(11, 1, 16), int16] */;
  %153 = shape_of(%150, dtype="int32") /* ty=Tensor[(3), int32] */;
  %154 = cast(%150, dtype="int16") /* ty=Tensor[(11, 1, 16), int16] */;
  %155 = dyn.reshape(%152, %153, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_or(%154, %155) /* ty=Tensor[(11, ?, 16), int16] */
}

def @func_11316() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %159 = fn () -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
    %156 = @func_8377() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %157 = %156.0;
    %158 = @func_10981() /* ty=Tensor[(11, 1, 16), float64] */;
    (%157, %158)
  };
  %159() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */
}

def @func_1946(%var_1933: Tensor[(882), float64]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(1080), float32], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) {
  %160 = @func_1060() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %161 = @func_1676() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %162 = cast(meta[relay.Constant][6] /* ty=Tensor[(1080), float32] */, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %163 = cast(%var_1933, dtype="float64") /* ty=Tensor[(882), float64] */;
  %164 = reshape(%162, newshape=[6, 15, 12]) /* ty=Tensor[(6, 15, 12), float32] */;
  %165 = reshape(%163, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %166 = @func_1409(%164, %165) /* ty=(Tensor[(6, 15, 12), float32], Tensor[(14, 9, 7), float64], Tensor[(882), float64]) */;
  %167 = @func_1614() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %168 = %160.0;
  %169 = @func_1529() /* ty=Tensor[(11, 1, 16), float64] */;
  %170 = %161.1;
  %171 = %166.2;
  %172 = %167.0;
  (%168, %169, %170, %171, meta[relay.Constant][6] /* ty=Tensor[(1080), float32] */, %var_1933, %172)
}

def @func_8419() -> Tensor[(11, 1, 16), float64] {
  %174 = fn () -> Tensor[(11, 1, 16), float64] {
    %173 = @func_3456() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(1080), float32]) */;
    %173.1
  };
  %174() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_1592() -> (Tensor[(11, 1, 16), float64],) {
  %176 = fn () -> (Tensor[(11, 1, 16), float64],) {
    %175 = @func_1089() /* ty=Tensor[(11, 1, 16), float64] */;
    (%175,)
  };
  %176() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_12722(%var_12720: float64, %var_12721: Tensor[(13, 6, 14), float64]) -> (Tensor[(13, 6, 14), float64], Tensor[(98, 9), bool], Tensor[(11, ?, 16), int8]) {
  @func_12718(%var_12720, %var_12721) /* ty=(Tensor[(13, 6, 14), float64], Tensor[(98, 9), bool], Tensor[(11, ?, 16), int8]) */
}

def @func_5863(%var_5858: Tensor[(6, 2, 7), uint8], %var_5859: Tensor[(6, 2, 7), uint8]) -> Tensor[(6, 2, 7), uint8] {
  %177 = cast(%var_5859, dtype="uint8") /* ty=Tensor[(6, 2, 7), uint8] */;
  %178 = shape_of(%var_5858, dtype="int32") /* ty=Tensor[(3), int32] */;
  %179 = cast(%var_5858, dtype="uint8") /* ty=Tensor[(6, 2, 7), uint8] */;
  %180 = dyn.reshape(%177, %178, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  bitwise_or(%179, %180) /* ty=Tensor[(6, 2, 7), uint8] */
}

def @func_14087() -> (Tensor[(11, 1, 16), float64], Tensor[(24, 80), float64], Tensor[(11, 1, 16), float64], Tensor[(700), float32]) {
  @func_14085() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(24, 80), float64], Tensor[(11, 1, 16), float64], Tensor[(700), float32]) */
}

def @func_8378() -> (Tensor[(11, 1, 16), float64],) {
  %183 = fn () -> (Tensor[(11, 1, 16), float64],) {
    %181 = @func_3543() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %182 = %181.0;
    (%182,)
  };
  %183() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_9085() -> (Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), bool], Tensor[(1080), float32]) {
  %189 = fn () -> (Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), bool], Tensor[(1080), float32]) {
    %184 = cast(meta[relay.Constant][7] /* ty=Tensor[(1080), float32] */, dtype="float32") /* ty=Tensor[(1080), float32] */;
    %185 = reshape(%184, newshape=[3, 360]) /* ty=Tensor[(3, 360), float32] */;
    %186 = @func_3018(%185) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), bool], Tensor[(11, ?, 16), float64], Tensor[(3, 360), float32]) */;
    %187 = @func_1529() /* ty=Tensor[(11, 1, 16), float64] */;
    %188 = %186.1;
    (%187, %188, meta[relay.Constant][7] /* ty=Tensor[(1080), float32] */)
  };
  %189() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), bool], Tensor[(1080), float32]) */
}

def @func_4987() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %193 = fn () -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
    %190 = @func_3472() /* ty=Tensor[(11, 1, 16), float64] */;
    %191 = @func_2719() /* ty=Tensor[(11, 1, 16), float64] */;
    %192 = @func_1089() /* ty=Tensor[(11, 1, 16), float64] */;
    (%190, %191, %192)
  };
  %193() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */
}

def @func_6885() -> (Tensor[(11, 1, 16), float64],) {
  %196 = fn () -> (Tensor[(11, 1, 16), float64],) {
    %194 = @func_3151() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
    %195 = %194.3;
    (%195,)
  };
  %196() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_8127() -> (Tensor[(11, ?, 16), int8], Tensor[(11, 1, 16), float64]) {
  %197 = @func_3868() /* ty=(Tensor[(11, ?, 16), int8], Tensor[(11, 1, 16), float64]) */;
  %198 = %197.0;
  %199 = @func_2719() /* ty=Tensor[(11, 1, 16), float64] */;
  (%198, %199)
}

def @func_1060() -> (Tensor[(11, 1, 16), float64],) {
  %200 = cast(meta[relay.Constant][8] /* ty=Tensor[(11, 1, 16), float64] */, dtype="float64") /* ty=Tensor[(11, 1, 16), float64] */;
  %201 = tan(%200) /* ty=Tensor[(11, 1, 16), float64] */;
  (%201,)
}

def @func_13040() -> Tensor[(11, 1, 16), float64] {
  %203 = fn () -> Tensor[(11, 1, 16), float64] {
    %202 = @func_6261() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %202.0
  };
  %203() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_2282(%var_2280: Tensor[(14, 10, 5), float32]) -> (Tensor[(14, 10, 5), float32], Tensor[(11, 1, 16), float64]) {
  @func_2279(%var_2280) /* ty=(Tensor[(14, 10, 5), float32], Tensor[(11, 1, 16), float64]) */
}

def @func_11397() -> (Tensor[(11, ?, 16), bool], Tensor[(11, 1, 16), float64]) {
  @func_11395() /* ty=(Tensor[(11, ?, 16), bool], Tensor[(11, 1, 16), float64]) */
}

def @func_8028() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %204 = @func_1676() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %205 = @func_1518() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %206 = @func_1518() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %207 = %204.0;
  %208 = %205.0;
  %209 = %206.0;
  (%207, %208, %209)
}

def @func_8540() -> (Tensor[(11, 1, 16), float64],) {
  %211 = fn () -> (Tensor[(11, 1, 16), float64],) {
    %210 = @func_8230() /* ty=Tensor[(11, 1, 16), float64] */;
    (%210,)
  };
  %211() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_9613() -> Tensor[(11, 1, 16), float64] {
  %213 = fn () -> Tensor[(11, 1, 16), float64] {
    %212 = @func_8539() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %212.0
  };
  %213() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_9514() -> (Tensor[(11, 1, 16), float64],) {
  @func_9512() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_14918() -> (Tensor[(11, 1, 16), float64],) {
  %216 = fn () -> (Tensor[(11, 1, 16), float64],) {
    %214 = @func_3543() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %215 = %214.0;
    (%215,)
  };
  %216() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_6435() -> Tensor[(11, 1, 16), float64] {
  %217 = fn () -> Tensor[(11, 1, 16), float64] {
    @func_2370() /* ty=Tensor[(11, 1, 16), float64] */
  };
  %217() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_7304() -> Tensor[(11, 1, 16), float64] {
  @func_7302() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_2388() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) {
  %218 = @func_2308() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64]) */;
  %219 = @func_1446() /* ty=Tensor[(11, 1, 16), float64] */;
  %220 = %218.2;
  (%219, %220)
}

def @func_13988() -> (Tensor[(11, ?, 16), int64], Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64]) {
  %225 = fn () -> (Tensor[(11, ?, 16), int64], Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64]) {
    %221 = @func_13103() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64]) */;
    %222 = %221.2;
    %223 = @func_2467() /* ty=Tensor[(11, ?, 16), int64] */;
    %224 = @func_11196() /* ty=Tensor[(11, 1, 16), float64] */;
    (%222, %223, %224)
  };
  %225() /* ty=(Tensor[(11, ?, 16), int64], Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64]) */
}

def @func_5867(%var_5865: Tensor[(6, 2, 7), uint8], %var_5866: Tensor[(6, 2, 7), uint8]) -> Tensor[(6, 2, 7), uint8] {
  @func_5863(%var_5865, %var_5866) /* ty=Tensor[(6, 2, 7), uint8] */
}

def @func_7916() -> (Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %234 = fn () -> (Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
    %226 = @func_2318() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %227 = @func_3151() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
    %228 = @func_4668() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %229 = %226.0;
    %230 = %227.1;
    %231 = %228.0;
    %232 = @func_6358() /* ty=Tensor[(11, 1, 16), float64] */;
    %233 = @func_7302() /* ty=Tensor[(11, 1, 16), float64] */;
    (%229, %230, %231, %232, %233)
  };
  %234() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */
}

def @func_8307() -> Tensor[(11, 1, 16), float64] {
  @func_8290() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_4298(%var_4297: Tensor[(11, 13, 16), float64]) -> (Tensor[(11, 13, 16), bool], Tensor[(11, 1, 16), float64], Tensor[(4, 11, 15), float32], Tensor[(660), float32], Tensor[(11, 13, 16), float64]) {
  %248 = fn (%var_4256: Tensor[(11, 13, 16), float64]) -> (Tensor[(11, 13, 16), bool], Tensor[(11, 1, 16), float64], Tensor[(4, 11, 15), float32], Tensor[(660), float32], Tensor[(11, 13, 16), float64]) {
    %235 = @func_3151() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
    %236 = %235.0;
    %237 = cast(%236, dtype="bool") /* ty=Tensor[(11, 1, 16), bool] */;
    %238 = cast(%var_4256, dtype="bool") /* ty=Tensor[(11, 13, 16), bool] */;
    %239 = @func_1591() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %240 = cast(meta[relay.Constant][9] /* ty=Tensor[(660), float32] */, dtype="float32") /* ty=Tensor[(660), float32] */;
    %241 = reshape(%240, newshape=[4, 11, 15]) /* ty=Tensor[(4, 11, 15), float32] */;
    %242 = @func_4176(%241) /* ty=(Tensor[(4, 11, 15), float32],) */;
    %243 = cast(%var_4256, dtype="float64") /* ty=Tensor[(11, 13, 16), float64] */;
    %244 = equal(%237, %238) /* ty=Tensor[(11, 13, 16), bool] */;
    %245 = %239.0;
    %246 = %242.0;
    %247 = sqrt(%243) /* ty=Tensor[(11, 13, 16), float64] */;
    (%244, %245, %246, meta[relay.Constant][9] /* ty=Tensor[(660), float32] */, %247)
  };
  %248(%var_4297) /* ty=(Tensor[(11, 13, 16), bool], Tensor[(11, 1, 16), float64], Tensor[(4, 11, 15), float32], Tensor[(660), float32], Tensor[(11, 13, 16), float64]) */
}

def @func_8291() -> Tensor[(11, 1, 16), float64] {
  %250 = fn () -> Tensor[(11, 1, 16), float64] {
    %249 = @func_1518() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %249.0
  };
  %250() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_8486(%var_8485: Tensor[(1080), float32]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(1080), float32], Tensor[(882, 1), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(98, 9), uint8], Tensor[(700), float32]) {
  %268 = fn (%var_8456: Tensor[(1080), float32]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(1080), float32], Tensor[(882, 1), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(98, 9), uint8], Tensor[(700), float32]) {
    %251 = cast(meta[relay.Constant][10] /* ty=Tensor[(882, 1), float64] */, dtype="float64") /* ty=Tensor[(882, 1), float64] */;
    %252 = cast(%var_8456, dtype="float32") /* ty=Tensor[(1080), float32] */;
    %253 = reshape(%251, newshape=[98, 9]) /* ty=Tensor[(98, 9), float64] */;
    %254 = reshape(%252, newshape=[6, 180]) /* ty=Tensor[(6, 180), float32] */;
    %255 = @func_5219(%253, %254) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(98, 9), float64], Tensor[(14, 9, 7), float64], Tensor[(6, 180), float32], Tensor[(11, 1, 16), float64]) */;
    %256 = cast(meta[relay.Constant][10] /* ty=Tensor[(882, 1), float64] */, dtype="float64") /* ty=Tensor[(882, 1), float64] */;
    %257 = @func_6884() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %258 = @func_8028() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
    %259 = cast(meta[relay.Constant][11] /* ty=Tensor[(700), float32] */, dtype="float32") /* ty=Tensor[(700), float32] */;
    %260 = reshape(%259, newshape=[700]) /* ty=Tensor[(700), float32] */;
    %261 = @func_3087(%260) /* ty=(Tensor[(11, ?, 16), int64], Tensor[(700), float32], Tensor[(98, 9), uint8], Tensor[(11, 1, 16), float64]) */;
    %262 = @func_6373() /* ty=Tensor[(11, 1, 16), float64] */;
    %263 = %255.0;
    %264 = tan(%256) /* ty=Tensor[(882, 1), float64] */;
    %265 = %257.0;
    %266 = %258.0;
    %267 = %261.2;
    (%262, %263, %var_8456, %264, %265, %266, %267, meta[relay.Constant][11] /* ty=Tensor[(700), float32] */)
  };
  %268(%var_8485) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(1080), float32], Tensor[(882, 1), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(98, 9), uint8], Tensor[(700), float32]) */
}

def @func_2219(%var_2217: Tensor[(7, 8, 1), float64], %var_2218: Tensor[(882), float64]) -> (Tensor[(7, 8, 1), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(882), float64]) {
  %276 = fn (%var_2181: Tensor[(7, 8, 1), float64], %var_2211: Tensor[(882), float64]) -> (Tensor[(7, 8, 1), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(882), float64]) {
    %269 = cast(%var_2181, dtype="float64") /* ty=Tensor[(7, 8, 1), float64] */;
    %270 = cast(%var_2211, dtype="float64") /* ty=Tensor[(882), float64] */;
    %271 = reshape(%270, newshape=[882]) /* ty=Tensor[(882), float64] */;
    %272 = @func_1946(%271) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(1080), float32], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) */;
    %273 = cos(%269) /* ty=Tensor[(7, 8, 1), float64] */;
    %274 = @func_2148() /* ty=Tensor[(11, 1, 16), float64] */;
    %275 = %272.1;
    (%273, %274, %275, %var_2211)
  };
  %276(%var_2217, %var_2218) /* ty=(Tensor[(7, 8, 1), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(882), float64]) */
}

def @func_6525(%var_6493: Tensor[(11, 14, 16), float64]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64], Tensor[(700), float32], Tensor[(11, 14, 16), bool], Tensor[(11, 1, 16), float64]) {
  %277 = @func_3760() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %278 = @func_3151() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %279 = cast(meta[relay.Constant][12] /* ty=Tensor[(700), float32] */, dtype="float32") /* ty=Tensor[(700), float32] */;
  %280 = reshape(%279, newshape=[700]) /* ty=Tensor[(700), float32] */;
  %281 = @func_4520(%280) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(14, 10, 5), float32], Tensor[(294, 3), float64], Tensor[(700), float32]) */;
  %282 = @func_3151() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %283 = %282.2;
  %284 = cast(%283, dtype="bool") /* ty=Tensor[(11, 1, 16), bool] */;
  %285 = cast(%var_6493, dtype="bool") /* ty=Tensor[(11, 14, 16), bool] */;
  %286 = @func_1865() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) */;
  %287 = %277.0;
  %288 = %278.1;
  %289 = %281.1;
  %290 = equal(%284, %285) /* ty=Tensor[(11, 14, 16), bool] */;
  %291 = %286.0;
  (%287, %288, %289, meta[relay.Constant][12] /* ty=Tensor[(700), float32] */, %290, %291)
}

def @func_11430() -> Tensor[(11, 1, 16), float64] {
  %292 = fn () -> Tensor[(11, 1, 16), float64] {
    @func_10444() /* ty=Tensor[(11, 1, 16), float64] */
  };
  %292() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_7534(%var_7532: Tensor[(1920), float64], %var_7533: Tensor[(882), float64]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(700), float32], Tensor[(11, 1, 16), float64], Tensor[(10, 16, 12), float64], Tensor[(1920), float64], Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(1080), float32]) {
  %312 = fn (%var_7500: Tensor[(1920), float64], %var_7520: Tensor[(882), float64]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(700), float32], Tensor[(11, 1, 16), float64], Tensor[(10, 16, 12), float64], Tensor[(1920), float64], Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(1080), float32]) {
    %293 = @func_4530() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %294 = cast(meta[relay.Constant][13] /* ty=Tensor[(700), float32] */, dtype="float32") /* ty=Tensor[(700), float32] */;
    %295 = reshape(%294, newshape=[700]) /* ty=Tensor[(700), float32] */;
    %296 = @func_5528(%295) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(98, 9), uint8], Tensor[(700), float32], Tensor[(11, 1, 16), float64]) */;
    %297 = @func_4986() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
    %298 = cast(%var_7500, dtype="float64") /* ty=Tensor[(1920), float64] */;
    %299 = reshape(%298, newshape=[10, 16, 12]) /* ty=Tensor[(10, 16, 12), float64] */;
    %300 = @func_7196(%299) /* ty=(Tensor[(10, 16, 12), float64],) */;
    %301 = cast(%var_7520, dtype="float64") /* ty=Tensor[(882), float64] */;
    %302 = cast(meta[relay.Constant][14] /* ty=Tensor[(1080), float32] */, dtype="float32") /* ty=Tensor[(1080), float32] */;
    %303 = reshape(%301, newshape=[98, 9]) /* ty=Tensor[(98, 9), float64] */;
    %304 = reshape(%302, newshape=[6, 180]) /* ty=Tensor[(6, 180), float32] */;
    %305 = @func_5219(%303, %304) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(98, 9), float64], Tensor[(14, 9, 7), float64], Tensor[(6, 180), float32], Tensor[(11, 1, 16), float64]) */;
    %306 = @func_1089() /* ty=Tensor[(11, 1, 16), float64] */;
    %307 = %293.0;
    %308 = %296.3;
    %309 = %297.0;
    %310 = %300.0;
    %311 = %305.1;
    (%306, %307, %308, meta[relay.Constant][13] /* ty=Tensor[(700), float32] */, %309, %310, %var_7500, %311, %var_7520, meta[relay.Constant][14] /* ty=Tensor[(1080), float32] */)
  };
  %312(%var_7532, %var_7533) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(700), float32], Tensor[(11, 1, 16), float64], Tensor[(10, 16, 12), float64], Tensor[(1920), float64], Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(1080), float32]) */
}

def @func_1520() -> (Tensor[(11, 1, 16), float64],) {
  @func_1518() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_13962(%var_13960: int32) -> (Tensor[(16, 1, 1), int32], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(1920), float64], Tensor[(882), float64], Tensor[(10, 16, 12), float64]) {
  @func_13959(%var_13960) /* ty=(Tensor[(16, 1, 1), int32], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(1920), float64], Tensor[(882), float64], Tensor[(10, 16, 12), float64]) */
}

def @func_4520(%var_4517: Tensor[(700), float32]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(14, 10, 5), float32], Tensor[(294, 3), float64], Tensor[(700), float32]) {
  %313 = @func_2308() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64]) */;
  %314 = @func_1614() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %315 = cast(meta[relay.Constant][15] /* ty=Tensor[(294, 3), float64] */, dtype="float64") /* ty=Tensor[(294, 3), float64] */;
  %316 = cast(%var_4517, dtype="float32") /* ty=Tensor[(700), float32] */;
  %317 = reshape(%315, newshape=[98, 9]) /* ty=Tensor[(98, 9), float64] */;
  %318 = reshape(%316, newshape=[10, 70]) /* ty=Tensor[(10, 70), float32] */;
  %319 = @func_2670(%317, %318) /* ty=(Tensor[(14, 10, 5), float32], Tensor[(10, 70), float32], Tensor[(11, 1, 16), float64], Tensor[(98, 9), float32], Tensor[(98, 9), float32]) */;
  %320 = %313.3;
  %321 = %314.1;
  %322 = @func_1446() /* ty=Tensor[(11, 1, 16), float64] */;
  %323 = %319.0;
  (%320, %321, %322, %323, meta[relay.Constant][15] /* ty=Tensor[(294, 3), float64] */, %var_4517)
}

def @func_11021() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(12, 14, 13), float64], Tensor[(2184), float64]) {
  %332 = fn () -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(12, 14, 13), float64], Tensor[(2184), float64]) {
    %324 = @func_6848() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %325 = @func_5764() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) */;
    %326 = cast(meta[relay.Constant][16] /* ty=Tensor[(2184), float64] */, dtype="float64") /* ty=Tensor[(2184), float64] */;
    %327 = reshape(%326, newshape=[12, 14, 13]) /* ty=Tensor[(12, 14, 13), float64] */;
    %328 = @func_5671(%327) /* ty=(Tensor[(12, 14, 13), float64],) */;
    %329 = %324.0;
    %330 = %325.1;
    %331 = %328.0;
    (%329, %330, %331, meta[relay.Constant][16] /* ty=Tensor[(2184), float64] */)
  };
  %332() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(12, 14, 13), float64], Tensor[(2184), float64]) */
}

def @func_5779(%var_5774: Tensor[(16, 7, 9), float32]) -> Tensor[(16, 7, 9), float32] {
  %333 = cast(%var_5774, dtype="float32") /* ty=Tensor[(16, 7, 9), float32] */;
  rsqrt(%333) /* ty=Tensor[(16, 7, 9), float32] */
}

def @func_9781(%var_9748: Tensor[(5, 140), float32]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(5, 140), float32], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(700), float32]) {
  %334 = cast(%var_9748, dtype="float32") /* ty=Tensor[(5, 140), float32] */;
  %335 = reshape(%334, newshape=[700]) /* ty=Tensor[(700), float32] */;
  %336 = @func_3087(%335) /* ty=(Tensor[(11, ?, 16), int64], Tensor[(700), float32], Tensor[(98, 9), uint8], Tensor[(11, 1, 16), float64]) */;
  %337 = cast(%var_9748, dtype="float32") /* ty=Tensor[(5, 140), float32] */;
  %338 = reshape(%337, newshape=[700]) /* ty=Tensor[(700), float32] */;
  %339 = @func_3087(%338) /* ty=(Tensor[(11, ?, 16), int64], Tensor[(700), float32], Tensor[(98, 9), uint8], Tensor[(11, 1, 16), float64]) */;
  %340 = @func_6930() /* ty=Tensor[(11, 1, 16), float64] */;
  %341 = %336.3;
  %342 = @func_7302() /* ty=Tensor[(11, 1, 16), float64] */;
  %343 = @func_8280() /* ty=Tensor[(11, 1, 16), float64] */;
  %344 = %339.1;
  (%340, %341, %var_9748, %342, %343, %344)
}

def @func_5673(%var_5672: Tensor[(12, 14, 13), float64]) -> (Tensor[(12, 14, 13), float64],) {
  %348 = fn (%var_5658: Tensor[(12, 14, 13), float64]) -> (Tensor[(12, 14, 13), float64],) {
    %345 = cast(2.95745f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %346 = cast(%var_5658, dtype="float64") /* ty=Tensor[(12, 14, 13), float64] */;
    %347 = mod(%345, %346) /* ty=Tensor[(12, 14, 13), float64] */;
    (%347,)
  };
  %348(%var_5672) /* ty=(Tensor[(12, 14, 13), float64],) */
}

def @func_13265(%var_13263: Tensor[(12, 15, 5), float32], %var_13264: Tensor[(12, 15, 5), float32]) -> (Tensor[(12, 15, 5), bool],) {
  %354 = fn (%var_13256: Tensor[(12, 15, 5), float32], %var_13257: Tensor[(12, 15, 5), float32]) -> (Tensor[(12, 15, 5), bool],) {
    %349 = cast(%var_13257, dtype="bool") /* ty=Tensor[(12, 15, 5), bool] */;
    %350 = shape_of(%var_13256, dtype="int32") /* ty=Tensor[(3), int32] */;
    %351 = cast(%var_13256, dtype="bool") /* ty=Tensor[(12, 15, 5), bool] */;
    %352 = dyn.reshape(%349, %350, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %353 = equal(%351, %352) /* ty=Tensor[(12, 15, 5), bool] */;
    (%353,)
  };
  %354(%var_13263, %var_13264) /* ty=(Tensor[(12, 15, 5), bool],) */
}

def @func_11413() -> (Tensor[(11, 1, 16), float64],) {
  %355 = @func_8127() /* ty=(Tensor[(11, ?, 16), int8], Tensor[(11, 1, 16), float64]) */;
  %356 = %355.1;
  (%356,)
}

def @func_13746(%var_13744: Tensor[(350, 2), float32], %var_13745: Tensor[(350, 2), float32]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(350, 2), bool], Tensor[(350, 2), float64]) {
  %373 = fn (%var_13722: Tensor[(350, 2), float32], %var_13733: Tensor[(350, 2), float32]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(350, 2), bool], Tensor[(350, 2), float64]) {
    %357 = @func_9033() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %358 = cast(%var_13722, dtype="float32") /* ty=Tensor[(350, 2), float32] */;
    %359 = reshape(%358, newshape=[14, 10, 5]) /* ty=Tensor[(14, 10, 5), float32] */;
    %360 = @func_2279(%359) /* ty=(Tensor[(14, 10, 5), float32], Tensor[(11, 1, 16), float64]) */;
    %361 = cast(%var_13733, dtype="bool") /* ty=Tensor[(350, 2), bool] */;
    %362 = shape_of(%var_13722, dtype="int32") /* ty=Tensor[(2), int32] */;
    %363 = cast(%var_13722, dtype="bool") /* ty=Tensor[(350, 2), bool] */;
    %364 = dyn.reshape(%361, %362, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %365 = cast(%var_13722, dtype="float64") /* ty=Tensor[(350, 2), float64] */;
    %366 = %357.0;
    %367 = @func_6930() /* ty=Tensor[(11, 1, 16), float64] */;
    %368 = %360.1;
    %369 = @func_3323() /* ty=Tensor[(11, 1, 16), float64] */;
    %370 = @func_9612() /* ty=Tensor[(11, 1, 16), float64] */;
    %371 = logical_or(%363, %364) /* ty=Tensor[(350, 2), bool] */;
    %372 = sqrt(%365) /* ty=Tensor[(350, 2), float64] */;
    (%366, %367, %368, %369, %370, %371, %372)
  };
  %373(%var_13744, %var_13745) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(350, 2), bool], Tensor[(350, 2), float64]) */
}

def @func_9034() -> (Tensor[(11, 1, 16), float64],) {
  %375 = fn () -> (Tensor[(11, 1, 16), float64],) {
    %374 = @func_2370() /* ty=Tensor[(11, 1, 16), float64] */;
    (%374,)
  };
  %375() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_5936() -> (Tensor[(11, ?, 16), int8],) {
  %378 = fn () -> (Tensor[(11, ?, 16), int8],) {
    %376 = @func_3868() /* ty=(Tensor[(11, ?, 16), int8], Tensor[(11, 1, 16), float64]) */;
    %377 = %376.0;
    (%377,)
  };
  %378() /* ty=(Tensor[(11, ?, 16), int8],) */
}

def @func_14382() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  @func_14380() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */
}

def @func_3869() -> (Tensor[(11, ?, 16), int8], Tensor[(11, 1, 16), float64]) {
  %388 = fn () -> (Tensor[(11, ?, 16), int8], Tensor[(11, 1, 16), float64]) {
    %379 = @func_3543() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %380 = %379.0;
    %381 = @func_3626() /* ty=Tensor[(11, 1, 16), float64] */;
    %382 = cast(%381, dtype="int8") /* ty=Tensor[(11, 1, 16), int8] */;
    %383 = shape_of(%380, dtype="int32") /* ty=Tensor[(3), int32] */;
    %384 = cast(%380, dtype="int8") /* ty=Tensor[(11, 1, 16), int8] */;
    %385 = dyn.reshape(%382, %383, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %386 = multiply(%384, %385) /* ty=Tensor[(11, ?, 16), int8] */;
    %387 = @func_3323() /* ty=Tensor[(11, 1, 16), float64] */;
    (%386, %387)
  };
  %388() /* ty=(Tensor[(11, ?, 16), int8], Tensor[(11, 1, 16), float64]) */
}

def @func_10228(%var_10215: Tensor[(4, 1, 13), float64], %var_10216: Tensor[(4, 7, 13), float64]) -> (Tensor[(4, 7, 13), float64], Tensor[(4, 7, 13), float32]) {
  %389 = cast(%var_10215, dtype="float64") /* ty=Tensor[(4, 1, 13), float64] */;
  %390 = cast(%var_10216, dtype="float64") /* ty=Tensor[(4, 7, 13), float64] */;
  %391 = cast(%var_10216, dtype="float32") /* ty=Tensor[(4, 7, 13), float32] */;
  %392 = power(%389, %390) /* ty=Tensor[(4, 7, 13), float64] */;
  %393 = log10(%391) /* ty=Tensor[(4, 7, 13), float32] */;
  (%392, %393)
}

def @func_1531() -> Tensor[(11, 1, 16), float64] {
  @func_1529() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_2721() -> Tensor[(11, 1, 16), float64] {
  @func_2719() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_3282() -> (Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64]) {
  %394 = @func_2788() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %395 = %394.0;
  %396 = @func_2467() /* ty=Tensor[(11, ?, 16), int64] */;
  (%395, %396)
}

def @func_8281() -> Tensor[(11, 1, 16), float64] {
  %398 = fn () -> Tensor[(11, 1, 16), float64] {
    %397 = @func_6884() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %397.0
  };
  %398() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_11943(%var_11941: Tensor[(448), bool]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(1080), float32], Tensor[(448), bool], Tensor[(882), float64], Tensor[(2184), float64], Tensor[(11, 1, 16), float64]) {
  @func_11940(%var_11941) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(1080), float32], Tensor[(448), bool], Tensor[(882), float64], Tensor[(2184), float64], Tensor[(11, 1, 16), float64]) */
}

def @func_1650() -> (Tensor[(11, 1, 16), float64],) {
  @func_1648() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_14425(%var_14424: Tensor[(9, 2, 11), uint32]) -> (Tensor[(9, 2, 11), uint32], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %406 = fn (%var_14412: Tensor[(9, 2, 11), uint32]) -> (Tensor[(9, 2, 11), uint32], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
    %399 = cast(meta[relay.Constant][17] /* ty=Tensor[(9, 1, 11), uint32] */, dtype="uint32") /* ty=Tensor[(9, 1, 11), uint32] */;
    %400 = cast(%var_14412, dtype="uint32") /* ty=Tensor[(9, 2, 11), uint32] */;
    %401 = @func_1518() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %402 = @func_4563() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %403 = add(%399, %400) /* ty=Tensor[(9, 2, 11), uint32] */;
    %404 = %401.0;
    %405 = %402.0;
    (%403, %404, %405)
  };
  %406(%var_14424) /* ty=(Tensor[(9, 2, 11), uint32], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */
}

def @func_13105() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64]) {
  @func_13103() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64]) */
}

def @func_6932() -> Tensor[(11, 1, 16), float64] {
  @func_6930() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_4465(%var_4463: Tensor[(880), float64]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(880), float64]) {
  @func_4462(%var_4463) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(880), float64]) */
}

def @func_8202() -> (Tensor[(11, 1, 16), float64],) {
  @func_8200() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_7094(%var_7092: Tensor[(1080), float32], %var_7093: Tensor[(2, 1232), float64]) -> (Tensor[(11, ?, 16), int8], Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(1080), float32], Tensor[(700), float32], Tensor[(2, 1232), float64]) {
  @func_7090(%var_7092, %var_7093) /* ty=(Tensor[(11, ?, 16), int8], Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(1080), float32], Tensor[(700), float32], Tensor[(2, 1232), float64]) */
}

def @func_6326() -> (Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %414 = fn () -> (Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
    %407 = @func_1865() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) */;
    %408 = @func_4668() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %409 = @func_1089() /* ty=Tensor[(11, 1, 16), float64] */;
    %410 = %407.1;
    %411 = @func_5898() /* ty=Tensor[(11, 1, 16), float64] */;
    %412 = %408.0;
    %413 = @func_1529() /* ty=Tensor[(11, 1, 16), float64] */;
    (%409, %410, %411, %412, %413)
  };
  %414() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */
}

def @func_4013(%var_4011: Tensor[(882), float64]) -> (Tensor[(11, 1, 16), float64], Tensor[(10, 70), float32], Tensor[(882), float64], Tensor[(700), float32], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64]) {
  @func_4010(%var_4011) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(10, 70), float32], Tensor[(882), float64], Tensor[(700), float32], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64]) */
}

def @func_4564() -> (Tensor[(11, 1, 16), float64],) {
  %417 = fn () -> (Tensor[(11, 1, 16), float64],) {
    %415 = @func_3760() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %416 = %415.0;
    (%416,)
  };
  %417() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_13869(%var_13867: Tensor[(1080), float32]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), bool], Tensor[(1080), float32]) {
  %418 = cast(%var_13867, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %419 = reshape(%418, newshape=[1080]) /* ty=Tensor[(1080), float32] */;
  %420 = @func_6142(%419) /* ty=(Tensor[(700), float32], Tensor[(700), float32], Tensor[(11, ?, 16), bool], Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int16], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(1080), float32]) */;
  %421 = @func_10444() /* ty=Tensor[(11, 1, 16), float64] */;
  %422 = %420.2;
  (%421, %422, %var_13867)
}

def @func_8309() -> Tensor[(11, 1, 16), float64] {
  @func_8307() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_5044() -> Tensor[(11, 1, 16), float64] {
  %424 = fn () -> Tensor[(11, 1, 16), float64] {
    %423 = @func_2388() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) */;
    %423.0
  };
  %424() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_10078() -> (Tensor[(11, ?, 16), int8], Tensor[(11, 1, 16), float64], Tensor[(1080), float32]) {
  %431 = fn () -> (Tensor[(11, ?, 16), int8], Tensor[(11, 1, 16), float64], Tensor[(1080), float32]) {
    %425 = @func_5935() /* ty=(Tensor[(11, ?, 16), int8],) */;
    %426 = cast(meta[relay.Constant][18] /* ty=Tensor[(1080), float32] */, dtype="float32") /* ty=Tensor[(1080), float32] */;
    %427 = reshape(%426, newshape=[1080]) /* ty=Tensor[(1080), float32] */;
    %428 = @func_2856(%427) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(1080), float32], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) */;
    %429 = %425.0;
    %430 = %428.6;
    (%429, %430, meta[relay.Constant][18] /* ty=Tensor[(1080), float32] */)
  };
  %431() /* ty=(Tensor[(11, ?, 16), int8], Tensor[(11, 1, 16), float64], Tensor[(1080), float32]) */
}

def @func_11636() -> Tensor[(11, 1, 16), float64] {
  @func_11634() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_14764() -> (Tensor[(11, ?, 16), float32],) {
  %440 = fn () -> (Tensor[(11, ?, 16), float32],) {
    %432 = @func_8028() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
    %433 = %432.0;
    %434 = @func_6930() /* ty=Tensor[(11, 1, 16), float64] */;
    %435 = cast(%434, dtype="float32") /* ty=Tensor[(11, 1, 16), float32] */;
    %436 = shape_of(%433, dtype="int32") /* ty=Tensor[(3), int32] */;
    %437 = cast(%433, dtype="float32") /* ty=Tensor[(11, 1, 16), float32] */;
    %438 = dyn.reshape(%435, %436, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %439 = floor_divide(%437, %438) /* ty=Tensor[(11, ?, 16), float32] */;
    (%439,)
  };
  %440() /* ty=(Tensor[(11, ?, 16), float32],) */
}

def @func_13479() -> Tensor[(11, 1, 16), float64] {
  @func_13477() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_14834() -> (Tensor[(1, 8, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  @func_14832() /* ty=(Tensor[(1, 8, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */
}

def @func_10520() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int8], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %441 = @func_8127() /* ty=(Tensor[(11, ?, 16), int8], Tensor[(11, 1, 16), float64]) */;
  %442 = @func_4530() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %443 = @func_9648() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %444 = @func_6434() /* ty=Tensor[(11, 1, 16), float64] */;
  %445 = @func_9612() /* ty=Tensor[(11, 1, 16), float64] */;
  %446 = %441.0;
  %447 = %442.0;
  %448 = %443.2;
  (%444, %445, %446, %447, %448)
}

def @func_11780() -> (Tensor[(11, 1, 16), float64],) {
  @func_11778() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_9946() -> (Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(882), float64]) {
  @func_9944() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(882), float64]) */
}

def @func_2468() -> Tensor[(11, ?, 16), int64] {
  %457 = fn () -> Tensor[(11, ?, 16), int64] {
    %449 = @func_1676() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
    %450 = %449.0;
    %451 = @func_1368() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) */;
    %452 = %451.0;
    %453 = cast(%452, dtype="int64") /* ty=Tensor[(11, 1, 16), int64] */;
    %454 = shape_of(%450, dtype="int32") /* ty=Tensor[(3), int32] */;
    %455 = cast(%450, dtype="int64") /* ty=Tensor[(11, 1, 16), int64] */;
    %456 = dyn.reshape(%453, %454, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    left_shift(%455, %456) /* ty=Tensor[(11, ?, 16), int64] */
  };
  %457() /* ty=Tensor[(11, ?, 16), int64] */
}

def @func_9561(%var_9559: Tensor[(1920), float64]) -> (Tensor[(11, 1, 16), float64], Tensor[(10, 16, 12), float64], Tensor[(1920), float64]) {
  @func_9558(%var_9559) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(10, 16, 12), float64], Tensor[(1920), float64]) */
}

def @func_6528(%var_6526: Tensor[(11, 14, 16), float64]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64], Tensor[(700), float32], Tensor[(11, 14, 16), bool], Tensor[(11, 1, 16), float64]) {
  @func_6525(%var_6526) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64], Tensor[(700), float32], Tensor[(11, 14, 16), bool], Tensor[(11, 1, 16), float64]) */
}

def @func_12420(%var_12418: float64, %var_12419: Tensor[(2, 1144), float64]) -> (Tensor[(15, 1), float64], Tensor[(882), float32], Tensor[(14, 9, 7), uint32], Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int16], Tensor[(2, 1144), bool], Tensor[(5, 16, 8), int64], Tensor[(640), int64], Tensor[(11, 1, 16), float64]) {
  @func_12416(%var_12418, %var_12419) /* ty=(Tensor[(15, 1), float64], Tensor[(882), float32], Tensor[(14, 9, 7), uint32], Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int16], Tensor[(2, 1144), bool], Tensor[(5, 16, 8), int64], Tensor[(640), int64], Tensor[(11, 1, 16), float64]) */
}

def @func_3020(%var_3019: Tensor[(3, 360), float32]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), bool], Tensor[(11, ?, 16), float64], Tensor[(3, 360), float32]) {
  %480 = fn (%var_2952: Tensor[(3, 360), float32]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), bool], Tensor[(11, ?, 16), float64], Tensor[(3, 360), float32]) {
    %458 = cast(%var_2952, dtype="float32") /* ty=Tensor[(3, 360), float32] */;
    %459 = reshape(%458, newshape=[1080]) /* ty=Tensor[(1080), float32] */;
    %460 = @func_2856(%459) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(1080), float32], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) */;
    %461 = @func_1676() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
    %462 = %461.0;
    %463 = @func_1591() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %464 = %463.0;
    %465 = cast(%464, dtype="bool") /* ty=Tensor[(11, 1, 16), bool] */;
    %466 = shape_of(%462, dtype="int32") /* ty=Tensor[(3), int32] */;
    %467 = cast(%462, dtype="bool") /* ty=Tensor[(11, 1, 16), bool] */;
    %468 = dyn.reshape(%465, %466, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %469 = cast(%462, dtype="float64") /* ty=Tensor[(11, 1, 16), float64] */;
    %470 = shape_of(%464, dtype="int32") /* ty=Tensor[(3), int32] */;
    %471 = cast(%464, dtype="float64") /* ty=Tensor[(11, 1, 16), float64] */;
    %472 = dyn.reshape(%469, %470, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %473 = cast(%var_2952, dtype="float64") /* ty=Tensor[(3, 360), float64] */;
    %474 = log(%473) /* ty=Tensor[(3, 360), float64] */;
    %475 = cast(%474, dtype="float32") /* ty=Tensor[(3, 360), float32] */;
    %476 = %460.2;
    %477 = not_equal(%467, %468) /* ty=Tensor[(11, ?, 16), bool] */;
    %478 = divide(%471, %472) /* ty=Tensor[(11, ?, 16), float64] */;
    %479 = sqrt(%475) /* ty=Tensor[(3, 360), float32] */;
    (%476, %477, %478, %479)
  };
  %480(%var_3019) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), bool], Tensor[(11, ?, 16), float64], Tensor[(3, 360), float32]) */
}

def @func_11346() -> Tensor[(11, 1, 16), float64] {
  @func_11344() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_11940(%var_11926: Tensor[(448), bool]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(1080), float32], Tensor[(448), bool], Tensor[(882), float64], Tensor[(2184), float64], Tensor[(11, 1, 16), float64]) {
  %481 = @func_4071() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %482 = cast(%var_11926, dtype="bool") /* ty=Tensor[(448), bool] */;
  %483 = cast(meta[relay.Constant][19] /* ty=Tensor[(882), float64] */, dtype="float64") /* ty=Tensor[(882), float64] */;
  %484 = reshape(%482, newshape=[8, 8, 7]) /* ty=Tensor[(8, 8, 7), bool] */;
  %485 = reshape(%483, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %486 = @func_7672(%484, %485) /* ty=(Tensor[(8, 8, 7), bool], Tensor[(882, 1), float64], Tensor[(882), float64], Tensor[(11, 1, 16), float64], Tensor[(1080), float32]) */;
  %487 = @func_11020() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(12, 14, 13), float64], Tensor[(2184), float64]) */;
  %488 = @func_2499() /* ty=Tensor[(11, 1, 16), float64] */;
  %489 = %481.0;
  %490 = %486.4;
  %491 = %487.3;
  %492 = @func_1446() /* ty=Tensor[(11, 1, 16), float64] */;
  (%488, %489, %490, %var_11926, meta[relay.Constant][19] /* ty=Tensor[(882), float64] */, %491, %492)
}

def @func_8200() -> (Tensor[(11, 1, 16), float64],) {
  %493 = @func_3472() /* ty=Tensor[(11, 1, 16), float64] */;
  (%493,)
}

def @func_11452() -> Tensor[(11, 1, 16), float64] {
  @func_11450() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_12870() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, ?, 16), int8]) {
  @func_12868() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, ?, 16), int8]) */
}

def @func_11344() -> Tensor[(11, 1, 16), float64] {
  @func_10286() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_11634() -> Tensor[(11, 1, 16), float64] {
  %494 = @func_1518() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %494.0
}

def @func_2390() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) {
  @func_2388() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) */
}

def @func_7302() -> Tensor[(11, 1, 16), float64] {
  @func_2499() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_15003() -> (Tensor[(3, 10, 4), float64], Tensor[(11, 1, 16), float64]) {
  %495 = @func_8194() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(3, 10, 4), float64]) */;
  %496 = @func_10024() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %497 = %495.1;
  %498 = %496.0;
  (%497, %498)
}

def @func_2279(%var_2267: Tensor[(14, 10, 5), float32]) -> (Tensor[(14, 10, 5), float32], Tensor[(11, 1, 16), float64]) {
  %499 = cast(%var_2267, dtype="float32") /* ty=Tensor[(14, 10, 5), float32] */;
  %500 = @func_1518() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %501 = asin(%499) /* ty=Tensor[(14, 10, 5), float32] */;
  %502 = %500.0;
  (%501, %502)
}

def @func_2372() -> Tensor[(11, 1, 16), float64] {
  @func_2370() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_9533() -> (Tensor[(11, 1, 16), float64],) {
  %504 = fn () -> (Tensor[(11, 1, 16), float64],) {
    %503 = @func_8290() /* ty=Tensor[(11, 1, 16), float64] */;
    (%503,)
  };
  %504() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_7815() -> (Tensor[(11, 1, 16), float64],) {
  %507 = fn () -> (Tensor[(11, 1, 16), float64],) {
    %505 = @func_2318() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %506 = %505.0;
    (%506,)
  };
  %507() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_6758() -> (Tensor[(11, ?, 16), int8], Tensor[(9, 11, 5), int16], float32, Tensor[(495), float32]) {
  %516 = fn () -> (Tensor[(11, ?, 16), int8], Tensor[(9, 11, 5), int16], float32, Tensor[(495), float32]) {
    %508 = @func_3868() /* ty=(Tensor[(11, ?, 16), int8], Tensor[(11, 1, 16), float64]) */;
    %509 = cast(0.643282f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %510 = cast(meta[relay.Constant][20] /* ty=Tensor[(495), float32] */, dtype="float32") /* ty=Tensor[(495), float32] */;
    %511 = reshape(%509, newshape=[]) /* ty=float32 */;
    %512 = reshape(%510, newshape=[9, 11, 5]) /* ty=Tensor[(9, 11, 5), float32] */;
    %513 = @func_4611(%511, %512) /* ty=(Tensor[(9, 11, 5), float32], Tensor[(9, 11, 5), int16]) */;
    %514 = %508.0;
    %515 = %513.1;
    (%514, %515, 0.643282f /* ty=float32 */, meta[relay.Constant][20] /* ty=Tensor[(495), float32] */)
  };
  %516() /* ty=(Tensor[(11, ?, 16), int8], Tensor[(9, 11, 5), int16], float32, Tensor[(495), float32]) */
}

def @func_10287() -> Tensor[(11, 1, 16), float64] {
  %518 = fn () -> Tensor[(11, 1, 16), float64] {
    %517 = @func_8773() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %517.0
  };
  %518() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_10802() -> Tensor[(11, ?, 16), int16] {
  @func_10800() /* ty=Tensor[(11, ?, 16), int16] */
}

def @func_10268() -> Tensor[(11, 1, 16), float64] {
  %519 = @func_8028() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %519.1
}

def @func_14380() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %520 = @func_8200() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %521 = @func_11401() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %522 = @func_9512() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %523 = %520.0;
  %524 = %521.0;
  %525 = %522.0;
  (%523, %524, %525)
}

def @func_10956() -> Tensor[(11, 1, 16), float64] {
  @func_10954() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_11049() -> (Tensor[(11, 1, 16), float64],) {
  %528 = fn () -> (Tensor[(11, 1, 16), float64],) {
    %526 = @func_10877() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(3, 10, 4), float64]) */;
    %527 = %526.0;
    (%527,)
  };
  %528() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_5219(%var_5193: Tensor[(98, 9), float64], %var_5209: Tensor[(6, 180), float32]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(98, 9), float64], Tensor[(14, 9, 7), float64], Tensor[(6, 180), float32], Tensor[(11, 1, 16), float64]) {
  %529 = @func_2388() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) */;
  %530 = @func_4530() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %531 = cast(%var_5193, dtype="float64") /* ty=Tensor[(98, 9), float64] */;
  %532 = reshape(%531, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %533 = @func_1830(%532) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(14, 9, 7), uint32], Tensor[(11, 1, 16), float64], Tensor[(14, 9, 7), bool], Tensor[(11, 1, 16), float64]) */;
  %534 = cast(%var_5209, dtype="float32") /* ty=Tensor[(6, 180), float32] */;
  %535 = cast(%var_5193, dtype="float64") /* ty=Tensor[(98, 9), float64] */;
  %536 = reshape(%534, newshape=[6, 15, 12]) /* ty=Tensor[(6, 15, 12), float32] */;
  %537 = reshape(%535, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %538 = @func_1409(%536, %537) /* ty=(Tensor[(6, 15, 12), float32], Tensor[(14, 9, 7), float64], Tensor[(882), float64]) */;
  %539 = @func_2388() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) */;
  %540 = %529.0;
  %541 = %530.0;
  %542 = %533.6;
  %543 = %538.1;
  %544 = %539.0;
  (%540, %541, %542, %var_5193, %543, %var_5209, %544)
}

def @func_11778() -> (Tensor[(11, 1, 16), float64],) {
  %545 = @func_6422() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %546 = %545.0;
  (%546,)
}

def @func_11263() -> (Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int8]) {
  %551 = fn () -> (Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int8]) {
    %547 = @func_4826() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
    %548 = @func_10077() /* ty=(Tensor[(11, ?, 16), int8], Tensor[(11, 1, 16), float64], Tensor[(1080), float32]) */;
    %549 = %547.1;
    %550 = %548.0;
    (%549, %550)
  };
  %551() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int8]) */
}

def @func_3760() -> (Tensor[(11, 1, 16), float64],) {
  %552 = @func_1446() /* ty=Tensor[(11, 1, 16), float64] */;
  (%552,)
}

def @func_4827() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %563 = fn () -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
    %553 = @func_1648() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %554 = @func_3543() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %555 = @func_3543() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %556 = @func_1518() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %557 = @func_1614() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
    %558 = %553.0;
    %559 = %554.0;
    %560 = %555.0;
    %561 = %556.0;
    %562 = %557.0;
    (%558, %559, %560, %561, %562)
  };
  %563() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */
}

def @func_5126() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %564 = @func_1060() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %565 = @func_1368() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) */;
  %566 = @func_4668() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %567 = %564.0;
  %568 = %565.1;
  %569 = @func_2499() /* ty=Tensor[(11, 1, 16), float64] */;
  %570 = %566.0;
  (%567, %568, %569, %570)
}

def @func_8756() -> (Tensor[(11, 1, 16), float64],) {
  %572 = fn () -> (Tensor[(11, 1, 16), float64],) {
    %571 = @func_6652() /* ty=Tensor[(11, 1, 16), float64] */;
    (%571,)
  };
  %572() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_6459() -> (Tensor[(11, 1, 16), float64],) {
  %575 = fn () -> (Tensor[(11, 1, 16), float64],) {
    %573 = @func_3543() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %574 = %573.0;
    (%574,)
  };
  %575() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_3090(%var_3088: Tensor[(700), float32]) -> (Tensor[(11, ?, 16), int64], Tensor[(700), float32], Tensor[(98, 9), uint8], Tensor[(11, 1, 16), float64]) {
  @func_3087(%var_3088) /* ty=(Tensor[(11, ?, 16), int64], Tensor[(700), float32], Tensor[(98, 9), uint8], Tensor[(11, 1, 16), float64]) */
}

def @func_2856(%var_2827: Tensor[(1080), float32]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(1080), float32], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) {
  %576 = @func_1865() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) */;
  %577 = @func_1368() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) */;
  %578 = @func_2788() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %579 = cast(%var_2827, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %580 = cast(meta[relay.Constant][21] /* ty=Tensor[(882), float64] */, dtype="float64") /* ty=Tensor[(882), float64] */;
  %581 = reshape(%579, newshape=[6, 15, 12]) /* ty=Tensor[(6, 15, 12), float32] */;
  %582 = reshape(%580, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %583 = @func_1409(%581, %582) /* ty=(Tensor[(6, 15, 12), float32], Tensor[(14, 9, 7), float64], Tensor[(882), float64]) */;
  %584 = @func_1648() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %585 = %576.0;
  %586 = %577.1;
  %587 = %578.0;
  %588 = %583.2;
  %589 = %584.0;
  (%585, %586, %587, %588, %var_2827, meta[relay.Constant][21] /* ty=Tensor[(882), float64] */, %589)
}

def @func_6261() -> (Tensor[(11, 1, 16), float64],) {
  %590 = @func_3760() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %591 = %590.0;
  (%591,)
}

def @func_1518() -> (Tensor[(11, 1, 16), float64],) {
  %592 = @func_1060() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %593 = %592.0;
  (%593,)
}

def @func_14454() -> Tensor[(11, 1, 16), float64] {
  @func_14452() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_14902() -> Tensor[(11, 1, 16), float64] {
  %594 = fn () -> Tensor[(11, 1, 16), float64] {
    @func_11429() /* ty=Tensor[(11, 1, 16), float64] */
  };
  %594() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_12193() -> Tensor[(11, 1, 16), float64] {
  @func_12191() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_4962(%var_4960: Tensor[(882, 1), float64]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(11, ?, 16), int16], Tensor[(882, 1), float64], Tensor[(11, 1, 16), float64]) {
  @func_4959(%var_4960) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(11, ?, 16), int16], Tensor[(882, 1), float64], Tensor[(11, 1, 16), float64]) */
}

def @func_1369() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) {
  %603 = fn () -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) {
    %595 = @func_1060() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %596 = @func_1060() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %597 = %596.0;
    %598 = cast(%597, dtype="float32") /* ty=Tensor[(11, 1, 16), float32] */;
    %599 = asinh(%598) /* ty=Tensor[(11, 1, 16), float32] */;
    %600 = cast(%599, dtype="float32") /* ty=Tensor[(11, 1, 16), float32] */;
    %601 = %595.0;
    %602 = log10(%600) /* ty=Tensor[(11, 1, 16), float32] */;
    (%601, %602)
  };
  %603() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) */
}

def @func_9202() -> (Tensor[(11, 1, 16), float64],) {
  %604 = @func_1614() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %605 = %604.0;
  (%605,)
}

def @func_12770() -> (Tensor[(11, 1, 16), float64],) {
  @func_12768() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_9308() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  @func_9306() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */
}

def @func_3284() -> (Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64]) {
  @func_3282() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64]) */
}

def @func_12793() -> (Tensor[(11, 1, 16), float64],) {
  %608 = fn () -> (Tensor[(11, 1, 16), float64],) {
    %606 = @func_8028() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
    %607 = %606.2;
    (%607,)
  };
  %608() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_5713() -> (Tensor[(11, 1, 16), float64],) {
  @func_5711() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_7090(%var_7067: Tensor[(1080), float32], %var_7076: Tensor[(2, 1232), float64]) -> (Tensor[(11, ?, 16), int8], Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(1080), float32], Tensor[(700), float32], Tensor[(2, 1232), float64]) {
  %609 = @func_2541() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(882), float32]) */;
  %610 = cast(%var_7067, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %611 = reshape(%610, newshape=[1080]) /* ty=Tensor[(1080), float32] */;
  %612 = @func_2856(%611) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(1080), float32], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) */;
  %613 = cast(%var_7076, dtype="float64") /* ty=Tensor[(2, 1232), float64] */;
  %614 = reshape(%613, newshape=[11, 14, 16]) /* ty=Tensor[(11, 14, 16), float64] */;
  %615 = @func_6525(%614) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64], Tensor[(700), float32], Tensor[(11, 14, 16), bool], Tensor[(11, 1, 16), float64]) */;
  %616 = @func_5594() /* ty=Tensor[(11, ?, 16), int8] */;
  %617 = %609.0;
  %618 = %612.5;
  %619 = %615.3;
  (%616, %617, %618, %var_7067, %619, %var_7076)
}

def @func_5653() -> Tensor[(11, 1, 16), float64] {
  %621 = fn () -> Tensor[(11, 1, 16), float64] {
    %620 = @func_4563() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %620.0
  };
  %621() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_2370() -> Tensor[(11, 1, 16), float64] {
  %622 = @func_1591() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %622.0
}

def @func_13156() -> (Tensor[(11, 1, 16), float64],) {
  %624 = fn () -> (Tensor[(11, 1, 16), float64],) {
    %623 = @func_11271() /* ty=Tensor[(11, 1, 16), float64] */;
    (%623,)
  };
  %624() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_2320() -> (Tensor[(11, 1, 16), float64],) {
  @func_2318() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_7945() -> (Tensor[(11, 1, 16), float64],) {
  %627 = fn () -> (Tensor[(11, 1, 16), float64],) {
    %625 = @func_5988() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %626 = %625.0;
    (%626,)
  };
  %627() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_5900() -> Tensor[(11, 1, 16), float64] {
  @func_5898() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_2499() -> Tensor[(11, 1, 16), float64] {
  %628 = @func_1614() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %628.0
}

def @func_5147() -> (Tensor[(11, 1, 16), float64],) {
  @func_5145() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_5990() -> (Tensor[(11, 1, 16), float64],) {
  @func_5988() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_6424() -> (Tensor[(11, 1, 16), float64],) {
  @func_6422() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_9955() -> (Tensor[(3, 10, 4), float64],) {
  %629 = @func_8194() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(3, 10, 4), float64]) */;
  %630 = %629.1;
  (%630,)
}

def @func_3473() -> Tensor[(11, 1, 16), float64] {
  %632 = fn () -> Tensor[(11, 1, 16), float64] {
    %631 = @func_1865() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) */;
    %631.0
  };
  %632() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_14675(%var_14540: Tensor[(9, 11, 5), float64]) -> (Tensor[(9, 11, 5), float32], Tensor[(9, 11, 5), float32], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(9, 11, 5), bool], Tensor[(9, 11, 5), float32], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %633 = @func_6757() /* ty=(Tensor[(11, ?, 16), int8], Tensor[(9, 11, 5), int16], float32, Tensor[(495), float32]) */;
  %634 = %633.1;
  %635 = cast(%634, dtype="float32") /* ty=Tensor[(9, 11, 5), float32] */;
  %636 = cast(%634, dtype="float32") /* ty=Tensor[(9, 11, 5), float32] */;
  %637 = @func_4668() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %638 = @func_1368() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) */;
  %639 = cast(%634, dtype="float64") /* ty=Tensor[(9, 11, 5), float64] */;
  %640 = log2(%639) /* ty=Tensor[(9, 11, 5), float64] */;
  %641 = cast(%var_14540, dtype="bool") /* ty=Tensor[(9, 11, 5), bool] */;
  %642 = shape_of(%640, dtype="int32") /* ty=Tensor[(3), int32] */;
  %643 = cast(%640, dtype="bool") /* ty=Tensor[(9, 11, 5), bool] */;
  %644 = dyn.reshape(%641, %642, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %645 = greater(%643, %644) /* ty=Tensor[(9, 11, 5), bool] */;
  %646 = cast(%645, dtype="bool") /* ty=Tensor[(9, 11, 5), bool] */;
  %647 = shape_of(%634, dtype="int32") /* ty=Tensor[(3), int32] */;
  %648 = cast(%634, dtype="bool") /* ty=Tensor[(9, 11, 5), bool] */;
  %649 = dyn.reshape(%646, %647, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %650 = cast(%640, dtype="float32") /* ty=Tensor[(9, 11, 5), float32] */;
  %651 = asin(%650) /* ty=Tensor[(9, 11, 5), float32] */;
  %652 = cast(%651, dtype="float32") /* ty=Tensor[(9, 11, 5), float32] */;
  %653 = @func_11413() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %654 = @func_9306() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %655 = tan(%635) /* ty=Tensor[(9, 11, 5), float32] */;
  %656 = log10(%636) /* ty=Tensor[(9, 11, 5), float32] */;
  %657 = %637.0;
  %658 = @func_8492() /* ty=Tensor[(11, 1, 16), float64] */;
  %659 = %638.1;
  %660 = greater_equal(%648, %649) /* ty=Tensor[(9, 11, 5), bool] */;
  %661 = log(%652) /* ty=Tensor[(9, 11, 5), float32] */;
  %662 = %653.0;
  %663 = %654.1;
  %664 = @func_7302() /* ty=Tensor[(11, 1, 16), float64] */;
  %665 = @func_5652() /* ty=Tensor[(11, 1, 16), float64] */;
  (%655, %656, %657, %658, %659, %660, %661, %662, %663, %664, %665)
}

def @func_5402(%var_5378: Tensor[(5, 16, 8), int64]) -> (Tensor[(5, 16, 8), int64],) {
  %666 = cast(meta[relay.Constant][22] /* ty=Tensor[(5, 16, 8), int64] */, dtype="int64") /* ty=Tensor[(5, 16, 8), int64] */;
  %667 = shape_of(%var_5378, dtype="int32") /* ty=Tensor[(3), int32] */;
  %668 = cast(%var_5378, dtype="int64") /* ty=Tensor[(5, 16, 8), int64] */;
  %669 = dyn.reshape(%666, %667, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %670 = bitwise_or(%668, %669) /* ty=Tensor[(5, 16, 8), int64] */;
  (%670,)
}

def @func_9512() -> (Tensor[(11, 1, 16), float64],) {
  %671 = @func_4563() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %672 = %671.0;
  (%672,)
}

def @func_9358() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64]) {
  %681 = fn () -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64]) {
    %673 = @func_3532() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
    %674 = @func_2388() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) */;
    %675 = @func_5764() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) */;
    %676 = @func_6930() /* ty=Tensor[(11, 1, 16), float64] */;
    %677 = %673.0;
    %678 = %674.1;
    %679 = %675.1;
    %680 = @func_2148() /* ty=Tensor[(11, 1, 16), float64] */;
    (%676, %677, %678, %679, %680)
  };
  %681() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64]) */
}

def @func_9957() -> (Tensor[(3, 10, 4), float64],) {
  @func_9955() /* ty=(Tensor[(3, 10, 4), float64],) */
}

def @func_10025() -> (Tensor[(11, 1, 16), float64],) {
  %683 = fn () -> (Tensor[(11, 1, 16), float64],) {
    %682 = @func_5043() /* ty=Tensor[(11, 1, 16), float64] */;
    (%682,)
  };
  %683() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_8122() -> (Tensor[(11, 1, 16), float64],) {
  %686 = fn () -> (Tensor[(11, 1, 16), float64],) {
    %684 = @func_5145() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %685 = %684.0;
    (%685,)
  };
  %686() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_12868() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, ?, 16), int8]) {
  %687 = @func_1648() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %688 = @func_2388() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) */;
  %689 = @func_8127() /* ty=(Tensor[(11, ?, 16), int8], Tensor[(11, 1, 16), float64]) */;
  %690 = %687.0;
  %691 = %688.1;
  %692 = %689.0;
  (%690, %691, %692)
}

def @func_14698() -> (Tensor[(11, 1, 16), float64],) {
  %694 = fn () -> (Tensor[(11, 1, 16), float64],) {
    %693 = @func_10268() /* ty=Tensor[(11, 1, 16), float64] */;
    (%693,)
  };
  %694() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_13685() -> (Tensor[(11, 1, 16), float64],) {
  @func_13683() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_10522() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int8], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  @func_10520() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int8], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */
}

def @func_10608(%var_10606: Tensor[(15, 14, 10), float64], %var_10607: Tensor[(2288), float64]) -> (Tensor[(15, 14, 10), float64], Tensor[(11, ?, 16), int16], Tensor[(882), float64], Tensor[(11, 13, 16), bool], Tensor[(2288), float64]) {
  %708 = fn (%var_10571: Tensor[(15, 14, 10), float64], %var_10601: Tensor[(2288), float64]) -> (Tensor[(15, 14, 10), float64], Tensor[(11, ?, 16), int16], Tensor[(882), float64], Tensor[(11, 13, 16), bool], Tensor[(2288), float64]) {
    %695 = cast(%var_10571, dtype="float64") /* ty=Tensor[(15, 14, 10), float64] */;
    %696 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(15, 14, 10), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %697 = cast(meta[relay.Constant][23] /* ty=Tensor[(15, 14, 10), float64] */, dtype="float64") /* ty=Tensor[(15, 14, 10), float64] */;
    %698 = dyn.reshape(%695, %696, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %699 = cast(meta[relay.Constant][24] /* ty=Tensor[(882), float64] */, dtype="float64") /* ty=Tensor[(882), float64] */;
    %700 = reshape(%699, newshape=[882, 1]) /* ty=Tensor[(882, 1), float64] */;
    %701 = @func_4959(%700) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(11, ?, 16), int16], Tensor[(882, 1), float64], Tensor[(11, 1, 16), float64]) */;
    %702 = cast(%var_10601, dtype="float64") /* ty=Tensor[(2288), float64] */;
    %703 = reshape(%702, newshape=[11, 13, 16]) /* ty=Tensor[(11, 13, 16), float64] */;
    %704 = @func_4296(%703) /* ty=(Tensor[(11, 13, 16), bool], Tensor[(11, 1, 16), float64], Tensor[(4, 11, 15), float32], Tensor[(660), float32], Tensor[(11, 13, 16), float64]) */;
    %705 = divide(%697, %698) /* ty=Tensor[(15, 14, 10), float64] */;
    %706 = %701.2;
    %707 = %704.0;
    (%705, %706, meta[relay.Constant][24] /* ty=Tensor[(882), float64] */, %707, %var_10601)
  };
  %708(%var_10606, %var_10607) /* ty=(Tensor[(15, 14, 10), float64], Tensor[(11, ?, 16), int16], Tensor[(882), float64], Tensor[(11, 13, 16), bool], Tensor[(2288), float64]) */
}

def @func_8030() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  @func_8028() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */
}

def @func_3386() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %713 = fn () -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
    %709 = @func_1368() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) */;
    %710 = @func_1518() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %711 = %709.0;
    %712 = %710.0;
    (%711, %712)
  };
  %713() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */
}

def @func_9158() -> Tensor[(11, 1, 16), float64] {
  %715 = fn () -> Tensor[(11, 1, 16), float64] {
    %714 = @func_9033() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %714.0
  };
  %715() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_6652() -> Tensor[(11, 1, 16), float64] {
  @func_2719() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_4178(%var_4177: Tensor[(4, 11, 15), float32]) -> (Tensor[(4, 11, 15), float32],) {
  %718 = fn (%var_4167: Tensor[(4, 11, 15), float32]) -> (Tensor[(4, 11, 15), float32],) {
    %716 = cast(%var_4167, dtype="float32") /* ty=Tensor[(4, 11, 15), float32] */;
    %717 = sigmoid(%716) /* ty=Tensor[(4, 11, 15), float32] */;
    (%717,)
  };
  %718(%var_4177) /* ty=(Tensor[(4, 11, 15), float32],) */
}

def @func_7675(%var_7673: Tensor[(8, 8, 7), bool], %var_7674: Tensor[(882), float64]) -> (Tensor[(8, 8, 7), bool], Tensor[(882, 1), float64], Tensor[(882), float64], Tensor[(11, 1, 16), float64], Tensor[(1080), float32]) {
  %731 = fn (%var_7621: Tensor[(8, 8, 7), bool], %var_7633: Tensor[(882), float64]) -> (Tensor[(8, 8, 7), bool], Tensor[(882, 1), float64], Tensor[(882), float64], Tensor[(11, 1, 16), float64], Tensor[(1080), float32]) {
    %719 = cast(meta[relay.Constant][25] /* ty=Tensor[(8, 8, 7), bool] */, dtype="bool") /* ty=Tensor[(8, 8, 7), bool] */;
    %720 = shape_of(%var_7621, dtype="int32") /* ty=Tensor[(3), int32] */;
    %721 = cast(%var_7621, dtype="bool") /* ty=Tensor[(8, 8, 7), bool] */;
    %722 = dyn.reshape(%719, %720, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %723 = cast(%var_7633, dtype="float64") /* ty=Tensor[(882), float64] */;
    %724 = reshape(%723, newshape=[882, 1]) /* ty=Tensor[(882, 1), float64] */;
    %725 = @func_4959(%724) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(11, ?, 16), int16], Tensor[(882, 1), float64], Tensor[(11, 1, 16), float64]) */;
    %726 = @func_7279() /* ty=(Tensor[(1080), float32],) */;
    %727 = logical_or(%721, %722) /* ty=Tensor[(8, 8, 7), bool] */;
    %728 = %725.3;
    %729 = @func_2719() /* ty=Tensor[(11, 1, 16), float64] */;
    %730 = %726.0;
    (%727, %728, %var_7633, %729, %730)
  };
  %731(%var_7673, %var_7674) /* ty=(Tensor[(8, 8, 7), bool], Tensor[(882, 1), float64], Tensor[(882), float64], Tensor[(11, 1, 16), float64], Tensor[(1080), float32]) */
}

def @func_11506() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  @func_11504() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */
}

def @func_3762() -> (Tensor[(11, 1, 16), float64],) {
  @func_3760() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_13012() -> Tensor[(11, 1, 16), float64] {
  @func_13010() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_9784(%var_9782: Tensor[(5, 140), float32]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(5, 140), float32], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(700), float32]) {
  @func_9781(%var_9782) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(5, 140), float32], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(700), float32]) */
}

def @func_10444() -> Tensor[(11, 1, 16), float64] {
  %732 = @func_9648() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %732.2
}

def @func_9558(%var_9556: Tensor[(1920), float64]) -> (Tensor[(11, 1, 16), float64], Tensor[(10, 16, 12), float64], Tensor[(1920), float64]) {
  %733 = @func_3543() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %734 = cast(%var_9556, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %735 = reshape(%734, newshape=[10, 16, 12]) /* ty=Tensor[(10, 16, 12), float64] */;
  %736 = @func_7196(%735) /* ty=(Tensor[(10, 16, 12), float64],) */;
  %737 = %733.0;
  %738 = %736.0;
  (%737, %738, %var_9556)
}

def @func_13837(%var_13836: bool) -> (Tensor[(6, 15, 13), bool],) {
  %742 = fn (%var_13827: bool) -> (Tensor[(6, 15, 13), bool],) {
    %739 = cast(%var_13827, dtype="bool") /* ty=bool */;
    %740 = cast(meta[relay.Constant][26] /* ty=Tensor[(6, 15, 13), bool] */, dtype="bool") /* ty=Tensor[(6, 15, 13), bool] */;
    %741 = logical_or(%739, %740) /* ty=Tensor[(6, 15, 13), bool] */;
    (%741,)
  };
  %742(%var_13836) /* ty=(Tensor[(6, 15, 13), bool],) */
}

def @func_2859(%var_2857: Tensor[(1080), float32]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(1080), float32], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) {
  @func_2856(%var_2857) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(1080), float32], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) */
}

def @func_7431(%var_7429: Tensor[(1920), float64], %var_7430: Tensor[(5, 140), float32]) -> (Tensor[(11, ?, 16), int8], Tensor[(11, 1, 16), float64], Tensor[(10, 16, 12), float64], Tensor[(1920), float64], Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(6, 2, 7), uint8], Tensor[(84), uint8], Tensor[(98, 9), uint8], Tensor[(5, 140), float32]) {
  %764 = fn (%var_7394: Tensor[(1920), float64], %var_7423: Tensor[(5, 140), float32]) -> (Tensor[(11, ?, 16), int8], Tensor[(11, 1, 16), float64], Tensor[(10, 16, 12), float64], Tensor[(1920), float64], Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(6, 2, 7), uint8], Tensor[(84), uint8], Tensor[(98, 9), uint8], Tensor[(5, 140), float32]) {
    %743 = @func_5935() /* ty=(Tensor[(11, ?, 16), int8],) */;
    %744 = @func_3385() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
    %745 = cast(%var_7394, dtype="float64") /* ty=Tensor[(1920), float64] */;
    %746 = reshape(%745, newshape=[10, 16, 12]) /* ty=Tensor[(10, 16, 12), float64] */;
    %747 = @func_7196(%746) /* ty=(Tensor[(10, 16, 12), float64],) */;
    %748 = @func_2308() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64]) */;
    %749 = @func_3151() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
    %750 = cast(meta[relay.Constant][27] /* ty=Tensor[(84), uint8] */, dtype="uint8") /* ty=Tensor[(84), uint8] */;
    %751 = cast(meta[relay.Constant][27] /* ty=Tensor[(84), uint8] */, dtype="uint8") /* ty=Tensor[(84), uint8] */;
    %752 = reshape(%750, newshape=[6, 2, 7]) /* ty=Tensor[(6, 2, 7), uint8] */;
    %753 = reshape(%751, newshape=[6, 2, 7]) /* ty=Tensor[(6, 2, 7), uint8] */;
    %754 = cast(%var_7423, dtype="float32") /* ty=Tensor[(5, 140), float32] */;
    %755 = reshape(%754, newshape=[700]) /* ty=Tensor[(700), float32] */;
    %756 = @func_5528(%755) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(98, 9), uint8], Tensor[(700), float32], Tensor[(11, 1, 16), float64]) */;
    %757 = %743.0;
    %758 = %744.1;
    %759 = %747.0;
    %760 = %748.0;
    %761 = %749.1;
    %762 = @func_5863(%752, %753) /* ty=Tensor[(6, 2, 7), uint8] */;
    %763 = %756.1;
    (%757, %758, %759, %var_7394, %760, %761, %762, meta[relay.Constant][27] /* ty=Tensor[(84), uint8] */, %763, %var_7423)
  };
  %764(%var_7429, %var_7430) /* ty=(Tensor[(11, ?, 16), int8], Tensor[(11, 1, 16), float64], Tensor[(10, 16, 12), float64], Tensor[(1920), float64], Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(6, 2, 7), uint8], Tensor[(84), uint8], Tensor[(98, 9), uint8], Tensor[(5, 140), float32]) */
}

def @func_14281() -> (Tensor[(11, ?, 16), int16],) {
  %766 = fn () -> (Tensor[(11, ?, 16), int16],) {
    %765 = @func_5821() /* ty=Tensor[(11, ?, 16), int16] */;
    (%765,)
  };
  %766() /* ty=(Tensor[(11, ?, 16), int16],) */
}

def @func_9650() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  @func_9648() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */
}

def @func_2788() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %767 = @func_1676() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %768 = @func_1518() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %769 = %767.0;
  %770 = %768.0;
  (%769, %770)
}

def @func_3532() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %771 = @func_2318() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %772 = @func_1676() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %773 = %771.0;
  %774 = %772.0;
  (%773, %774)
}

def @func_8774() -> (Tensor[(11, 1, 16), float64],) {
  %777 = fn () -> (Tensor[(11, 1, 16), float64],) {
    %775 = @func_3532() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
    %776 = %775.1;
    (%776,)
  };
  %777() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_4669() -> (Tensor[(11, 1, 16), float64],) {
  %780 = fn () -> (Tensor[(11, 1, 16), float64],) {
    %778 = @func_2788() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
    %779 = %778.1;
    (%779,)
  };
  %780() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_1448() -> Tensor[(11, 1, 16), float64] {
  @func_1446() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_8129() -> (Tensor[(11, ?, 16), int8], Tensor[(11, 1, 16), float64]) {
  @func_8127() /* ty=(Tensor[(11, ?, 16), int8], Tensor[(11, 1, 16), float64]) */
}

def @func_8724() -> (Tensor[(11, 1, 16), float64], Tensor[(700), float32], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) {
  %789 = fn () -> (Tensor[(11, 1, 16), float64], Tensor[(700), float32], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) {
    %781 = @func_6422() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %782 = cast(meta[relay.Constant][28] /* ty=Tensor[(882), float64] */, dtype="float64") /* ty=Tensor[(882), float64] */;
    %783 = reshape(%782, newshape=[882]) /* ty=Tensor[(882), float64] */;
    %784 = @func_4010(%783) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(10, 70), float32], Tensor[(882), float64], Tensor[(700), float32], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64]) */;
    %785 = @func_4071() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
    %786 = %781.0;
    %787 = %784.3;
    %788 = %785.0;
    (%786, %787, meta[relay.Constant][28] /* ty=Tensor[(882), float64] */, %788)
  };
  %789() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(700), float32], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) */
}

def @func_1091() -> Tensor[(11, 1, 16), float64] {
  @func_1089() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_1314() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  @func_1312() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */
}

def @func_12935() -> Tensor[(11, ?, 16), int8] {
  %791 = fn () -> Tensor[(11, ?, 16), int8] {
    %790 = @func_8127() /* ty=(Tensor[(11, ?, 16), int8], Tensor[(11, 1, 16), float64]) */;
    %790.0
  };
  %791() /* ty=Tensor[(11, ?, 16), int8] */
}

def @func_5782(%var_5780: Tensor[(16, 7, 9), float32]) -> Tensor[(16, 7, 9), float32] {
  @func_5779(%var_5780) /* ty=Tensor[(16, 7, 9), float32] */
}

def @func_10251() -> (Tensor[(11, 1, 16), float32],) {
  %794 = fn () -> (Tensor[(11, 1, 16), float32],) {
    %792 = @func_5764() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) */;
    %793 = %792.1;
    (%793,)
  };
  %794() /* ty=(Tensor[(11, 1, 16), float32],) */
}

def @func_12598() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %798 = fn () -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
    %795 = @func_11315() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
    %796 = %795.0;
    %797 = @func_8418() /* ty=Tensor[(11, 1, 16), float64] */;
    (%796, %797)
  };
  %798() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */
}

def @func_13643() -> Tensor[(11, 1, 16), float64] {
  @func_13641() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_1676() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %799 = @func_1518() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %800 = @func_1518() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %801 = %799.0;
  %802 = %800.0;
  (%801, %802)
}

def @func_1062() -> (Tensor[(11, 1, 16), float64],) {
  @func_1060() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_5145() -> (Tensor[(11, 1, 16), float64],) {
  %803 = @func_4668() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %804 = %803.0;
  (%804,)
}

def @func_6879() -> Tensor[(11, 1, 16), float64] {
  %806 = fn () -> Tensor[(11, 1, 16), float64] {
    %805 = @func_6422() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %805.0
  };
  %806() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_8837(%var_8836: Tensor[(18, 60), float32]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(18, 60), float32], Tensor[(11, ?, 16), int8]) {
  %814 = fn (%var_8805: Tensor[(18, 60), float32]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(18, 60), float32], Tensor[(11, ?, 16), int8]) {
    %807 = cast(%var_8805, dtype="float32") /* ty=Tensor[(18, 60), float32] */;
    %808 = reshape(%807, newshape=[1080]) /* ty=Tensor[(1080), float32] */;
    %809 = @func_8484(%808) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(1080), float32], Tensor[(882, 1), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(98, 9), uint8], Tensor[(700), float32]) */;
    %810 = @func_5043() /* ty=Tensor[(11, 1, 16), float64] */;
    %811 = @func_6434() /* ty=Tensor[(11, 1, 16), float64] */;
    %812 = %809.0;
    %813 = @func_5594() /* ty=Tensor[(11, ?, 16), int8] */;
    (%810, %811, %812, %var_8805, %813)
  };
  %814(%var_8836) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(18, 60), float32], Tensor[(11, ?, 16), int8]) */
}

def @func_10954() -> Tensor[(11, 1, 16), float64] {
  %815 = @func_7814() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %815.0
}

def @func_12128() -> (Tensor[(11, 1, 16), float64],) {
  @func_12126() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_12768() -> (Tensor[(11, 1, 16), float64],) {
  %816 = @func_8230() /* ty=Tensor[(11, 1, 16), float64] */;
  (%816,)
}

def @func_15005() -> (Tensor[(3, 10, 4), float64], Tensor[(11, 1, 16), float64]) {
  @func_15003() /* ty=(Tensor[(3, 10, 4), float64], Tensor[(11, 1, 16), float64]) */
}

def @func_5898() -> Tensor[(11, 1, 16), float64] {
  %817 = @func_3532() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %817.0
}

def @func_12092() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %818 = @func_4826() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %819 = @func_8028() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %820 = @func_8200() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %821 = %818.1;
  %822 = %819.2;
  %823 = %820.0;
  %824 = @func_11196() /* ty=Tensor[(11, 1, 16), float64] */;
  (%821, %822, %823, %824)
}

def @func_11843() -> (Tensor[(11, 1, 16), float64], Tensor[(14, 9, 7), float64], Tensor[(882), float64]) {
  @func_11841() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(14, 9, 7), float64], Tensor[(882), float64]) */
}

def @func_13959(%var_13926: int32) -> (Tensor[(16, 1, 1), int32], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(1920), float64], Tensor[(882), float64], Tensor[(10, 16, 12), float64]) {
  %825 = cast(%var_13926, dtype="int32") /* ty=int32 */;
  %826 = cast(meta[relay.Constant][29] /* ty=Tensor[(16, 1, 1), int32] */, dtype="int32") /* ty=Tensor[(16, 1, 1), int32] */;
  %827 = @func_4563() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %828 = cast(meta[relay.Constant][30] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %829 = cast(meta[relay.Constant][31] /* ty=Tensor[(882), float64] */, dtype="float64") /* ty=Tensor[(882), float64] */;
  %830 = reshape(%828, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %831 = reshape(%829, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %832 = @func_7531(%830, %831) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(700), float32], Tensor[(11, 1, 16), float64], Tensor[(10, 16, 12), float64], Tensor[(1920), float64], Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(1080), float32]) */;
  %833 = cast(meta[relay.Constant][30] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %834 = reshape(%833, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %835 = @func_9558(%834) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(10, 16, 12), float64], Tensor[(1920), float64]) */;
  %836 = add(%825, %826) /* ty=Tensor[(16, 1, 1), int32] */;
  %837 = %827.0;
  %838 = @func_13477() /* ty=Tensor[(11, 1, 16), float64] */;
  %839 = %832.7;
  %840 = %835.1;
  (%836, %837, %838, %839, meta[relay.Constant][30] /* ty=Tensor[(1920), float64] */, meta[relay.Constant][31] /* ty=Tensor[(882), float64] */, %840)
}

def @func_1616() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  @func_1614() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */
}

def @func_10270() -> Tensor[(11, 1, 16), float64] {
  @func_10268() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_1832(%var_1831: Tensor[(882), float64]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(14, 9, 7), uint32], Tensor[(11, 1, 16), float64], Tensor[(14, 9, 7), bool], Tensor[(11, 1, 16), float64]) {
  %868 = fn (%var_1777: Tensor[(882), float64]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(14, 9, 7), uint32], Tensor[(11, 1, 16), float64], Tensor[(14, 9, 7), bool], Tensor[(11, 1, 16), float64]) {
    %841 = @func_1648() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %842 = @func_1648() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %843 = @func_1312() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
    %844 = cast(%var_1777, dtype="float64") /* ty=Tensor[(882), float64] */;
    %845 = reshape(%844, newshape=[14, 9, 7]) /* ty=Tensor[(14, 9, 7), float64] */;
    %846 = @func_636(%845) /* ty=Tensor[(14, 9, 7), float64] */;
    %847 = cast(%846, dtype="float32") /* ty=Tensor[(14, 9, 7), float32] */;
    %848 = sqrt(%847) /* ty=Tensor[(14, 9, 7), float32] */;
    %849 = cast(meta[relay.Constant][32] /* ty=Tensor[(14, 9, 7), float32] */, dtype="uint32") /* ty=Tensor[(14, 9, 7), uint32] */;
    %850 = shape_of(%848, dtype="int32") /* ty=Tensor[(3), int32] */;
    %851 = cast(%848, dtype="uint32") /* ty=Tensor[(14, 9, 7), uint32] */;
    %852 = dyn.reshape(%849, %850, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %853 = bitwise_or(%851, %852) /* ty=Tensor[(14, 9, 7), uint32] */;
    %854 = cast(%853, dtype="float64") /* ty=Tensor[(14, 9, 7), float64] */;
    %855 = reshape(%854, newshape=[14, 9, 7]) /* ty=Tensor[(14, 9, 7), float64] */;
    %856 = @func_636(%855) /* ty=Tensor[(14, 9, 7), float64] */;
    %857 = cast(%var_1777, dtype="bool") /* ty=Tensor[(882), bool] */;
    %858 = shape_of(%856, dtype="int32") /* ty=Tensor[(3), int32] */;
    %859 = cast(%856, dtype="bool") /* ty=Tensor[(14, 9, 7), bool] */;
    %860 = dyn.reshape(%857, %858, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %861 = @func_1518() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %862 = %841.0;
    %863 = %842.0;
    %864 = %843.0;
    %865 = @func_1529() /* ty=Tensor[(11, 1, 16), float64] */;
    %866 = greater(%859, %860) /* ty=Tensor[(14, 9, 7), bool] */;
    %867 = %861.0;
    (%862, %863, %864, %853, %865, %866, %867)
  };
  %868(%var_1831) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(14, 9, 7), uint32], Tensor[(11, 1, 16), float64], Tensor[(14, 9, 7), bool], Tensor[(11, 1, 16), float64]) */
}

def @func_13523() -> (Tensor[(4, 11, 4), float32], Tensor[(11, 1, 16), float64]) {
  %877 = fn () -> (Tensor[(4, 11, 4), float32], Tensor[(11, 1, 16), float64]) {
    %869 = cast(meta[relay.Constant][34] /* ty=Tensor[(4, 11, 4), uint16] */, dtype="uint16") /* ty=Tensor[(4, 11, 4), uint16] */;
    %870 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(4, 11, 4), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %871 = cast(meta[relay.Constant][33] /* ty=Tensor[(4, 11, 4), uint16] */, dtype="uint16") /* ty=Tensor[(4, 11, 4), uint16] */;
    %872 = dyn.reshape(%869, %870, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %873 = bitwise_xor(%871, %872) /* ty=Tensor[(4, 11, 4), uint16] */;
    %874 = cast(%873, dtype="float32") /* ty=Tensor[(4, 11, 4), float32] */;
    %875 = sin(%874) /* ty=Tensor[(4, 11, 4), float32] */;
    %876 = @func_11163() /* ty=Tensor[(11, 1, 16), float64] */;
    (%875, %876)
  };
  %877() /* ty=(Tensor[(4, 11, 4), float32], Tensor[(11, 1, 16), float64]) */
}

def @func_5128() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  @func_5126() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */
}

def @func_3325() -> Tensor[(11, 1, 16), float64] {
  @func_3323() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_7196(%var_7171: Tensor[(10, 16, 12), float64]) -> (Tensor[(10, 16, 12), float64],) {
  %878 = cast(%var_7171, dtype="float64") /* ty=Tensor[(10, 16, 12), float64] */;
  %879 = cos(%878) /* ty=Tensor[(10, 16, 12), float64] */;
  (%879,)
}

def @func_5823() -> Tensor[(11, ?, 16), int16] {
  @func_5821() /* ty=Tensor[(11, ?, 16), int16] */
}

def @func_4532() -> (Tensor[(11, 1, 16), float64],) {
  @func_4530() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_1413(%var_1411: Tensor[(6, 15, 12), float32], %var_1412: Tensor[(882), float64]) -> (Tensor[(6, 15, 12), float32], Tensor[(14, 9, 7), float64], Tensor[(882), float64]) {
  @func_1409(%var_1411, %var_1412) /* ty=(Tensor[(6, 15, 12), float32], Tensor[(14, 9, 7), float64], Tensor[(882), float64]) */
}

def @func_2541() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(882), float32]) {
  %880 = @func_1614() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %881 = cast(meta[relay.Constant][35] /* ty=Tensor[(882), float64] */, dtype="float64") /* ty=Tensor[(882), float64] */;
  %882 = reshape(%881, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %883 = @func_1830(%882) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(14, 9, 7), uint32], Tensor[(11, 1, 16), float64], Tensor[(14, 9, 7), bool], Tensor[(11, 1, 16), float64]) */;
  %884 = cast(meta[relay.Constant][35] /* ty=Tensor[(882), float64] */, dtype="float32") /* ty=Tensor[(882), float32] */;
  %885 = %880.0;
  %886 = %883.1;
  %887 = log(%884) /* ty=Tensor[(882), float32] */;
  (%885, %886, %887)
}

def @func_10186() -> (Tensor[(11, 1, 16), float64],) {
  %890 = fn () -> (Tensor[(11, 1, 16), float64],) {
    %888 = @func_9512() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %889 = %888.0;
    (%889,)
  };
  %890() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_1648() -> (Tensor[(11, 1, 16), float64],) {
  %891 = @func_1529() /* ty=Tensor[(11, 1, 16), float64] */;
  (%891,)
}

def @func_5223(%var_5221: Tensor[(98, 9), float64], %var_5222: Tensor[(6, 180), float32]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(98, 9), float64], Tensor[(14, 9, 7), float64], Tensor[(6, 180), float32], Tensor[(11, 1, 16), float64]) {
  @func_5219(%var_5221, %var_5222) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(98, 9), float64], Tensor[(14, 9, 7), float64], Tensor[(6, 180), float32], Tensor[(11, 1, 16), float64]) */
}

def @func_5595() -> Tensor[(11, ?, 16), int8] {
  %899 = fn () -> Tensor[(11, ?, 16), int8] {
    %892 = @func_3532() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
    %893 = %892.0;
    %894 = @func_2148() /* ty=Tensor[(11, 1, 16), float64] */;
    %895 = cast(%894, dtype="int8") /* ty=Tensor[(11, 1, 16), int8] */;
    %896 = shape_of(%893, dtype="int32") /* ty=Tensor[(3), int32] */;
    %897 = cast(%893, dtype="int8") /* ty=Tensor[(11, 1, 16), int8] */;
    %898 = dyn.reshape(%895, %896, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    subtract(%897, %898) /* ty=Tensor[(11, ?, 16), int8] */
  };
  %899() /* ty=Tensor[(11, ?, 16), int8] */
}

def @func_11504() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %900 = @func_7944() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %901 = @func_5126() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %902 = @func_10024() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %903 = %900.0;
  %904 = %901.2;
  %905 = %902.0;
  (%903, %904, %905)
}

def @func_9269(%var_9267: Tensor[(7, 13, 10), int64], %var_9268: Tensor[(7, 13, 10), int64]) -> (Tensor[(7, 13, 10), int64], Tensor[(7, 13, 10), float32]) {
  %915 = fn (%var_9253: Tensor[(7, 13, 10), int64], %var_9254: Tensor[(7, 13, 10), int64]) -> (Tensor[(7, 13, 10), int64], Tensor[(7, 13, 10), float32]) {
    %906 = cast(%var_9254, dtype="int64") /* ty=Tensor[(7, 13, 10), int64] */;
    %907 = shape_of(%var_9253, dtype="int32") /* ty=Tensor[(3), int32] */;
    %908 = cast(%var_9253, dtype="int64") /* ty=Tensor[(7, 13, 10), int64] */;
    %909 = dyn.reshape(%906, %907, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %910 = cast(%var_9254, dtype="float64") /* ty=Tensor[(7, 13, 10), float64] */;
    %911 = sin(%910) /* ty=Tensor[(7, 13, 10), float64] */;
    %912 = cast(%911, dtype="float32") /* ty=Tensor[(7, 13, 10), float32] */;
    %913 = bitwise_xor(%908, %909) /* ty=Tensor[(7, 13, 10), int64] */;
    %914 = rsqrt(%912) /* ty=Tensor[(7, 13, 10), float32] */;
    (%913, %914)
  };
  %915(%var_9267, %var_9268) /* ty=(Tensor[(7, 13, 10), int64], Tensor[(7, 13, 10), float32]) */
}

def @func_3249(%var_3248: Tensor[(11, 5, 16), float64]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, 5, 16), int64], Tensor[(11, 1, 16), float64]) {
  %924 = fn (%var_3221: Tensor[(11, 5, 16), float64]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, 5, 16), int64], Tensor[(11, 1, 16), float64]) {
    %916 = @func_1997() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %917 = @func_2148() /* ty=Tensor[(11, 1, 16), float64] */;
    %918 = cast(%917, dtype="int64") /* ty=Tensor[(11, 1, 16), int64] */;
    %919 = cast(%var_3221, dtype="int64") /* ty=Tensor[(11, 5, 16), int64] */;
    %920 = @func_2308() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64]) */;
    %921 = %916.0;
    %922 = multiply(%918, %919) /* ty=Tensor[(11, 5, 16), int64] */;
    %923 = %920.1;
    (%921, %922, %923)
  };
  %924(%var_3248) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 5, 16), int64], Tensor[(11, 1, 16), float64]) */
}

def @func_14832() -> (Tensor[(1, 8, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %925 = cast(meta[relay.Constant][36] /* ty=Tensor[(1, 8, 16), float64] */, dtype="float64") /* ty=Tensor[(1, 8, 16), float64] */;
  %926 = @func_3532() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %927 = erf(%925) /* ty=Tensor[(1, 8, 16), float64] */;
  %928 = %926.1;
  %929 = @func_6878() /* ty=Tensor[(11, 1, 16), float64] */;
  (%927, %928, %929)
}

def @func_13641() -> Tensor[(11, 1, 16), float64] {
  @func_6878() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_6263() -> (Tensor[(11, 1, 16), float64],) {
  @func_6261() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_2719() -> Tensor[(11, 1, 16), float64] {
  %930 = @func_1312() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %930.2
}

def @func_3544() -> (Tensor[(11, 1, 16), float64],) {
  %932 = fn () -> (Tensor[(11, 1, 16), float64],) {
    %931 = @func_2370() /* ty=Tensor[(11, 1, 16), float64] */;
    (%931,)
  };
  %932() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_14085() -> (Tensor[(11, 1, 16), float64], Tensor[(24, 80), float64], Tensor[(11, 1, 16), float64], Tensor[(700), float32]) {
  %933 = @func_9202() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %934 = @func_11526() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(1920), float64], Tensor[(24, 80), float64]) */;
  %935 = cast(meta[relay.Constant][37] /* ty=Tensor[(700), float32] */, dtype="float32") /* ty=Tensor[(700), float32] */;
  %936 = cast(meta[relay.Constant][37] /* ty=Tensor[(700), float32] */, dtype="float32") /* ty=Tensor[(700), float32] */;
  %937 = reshape(%935, newshape=[350, 2]) /* ty=Tensor[(350, 2), float32] */;
  %938 = reshape(%936, newshape=[350, 2]) /* ty=Tensor[(350, 2), float32] */;
  %939 = @func_13743(%937, %938) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(350, 2), bool], Tensor[(350, 2), float64]) */;
  %940 = %933.0;
  %941 = %934.2;
  %942 = %939.4;
  (%940, %941, %942, meta[relay.Constant][37] /* ty=Tensor[(700), float32] */)
}

def @func_639(%var_637: Tensor[(14, 9, 7), float64]) -> Tensor[(14, 9, 7), float64] {
  @func_636(%var_637) /* ty=Tensor[(14, 9, 7), float64] */
}

def @func_4611(%var_4594: float32, %var_4595: Tensor[(9, 11, 5), float32]) -> (Tensor[(9, 11, 5), float32], Tensor[(9, 11, 5), int16]) {
  %943 = cast(%var_4594, dtype="float32") /* ty=float32 */;
  %944 = cast(%var_4595, dtype="float32") /* ty=Tensor[(9, 11, 5), float32] */;
  %945 = cast(%var_4595, dtype="int16") /* ty=Tensor[(9, 11, 5), int16] */;
  %946 = cast(%var_4594, dtype="int16") /* ty=int16 */;
  %947 = power(%943, %944) /* ty=Tensor[(9, 11, 5), float32] */;
  %948 = maximum(%945, %946) /* ty=Tensor[(9, 11, 5), int16] */;
  (%947, %948)
}

def @func_9648() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %949 = @func_3385() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %950 = @func_1446() /* ty=Tensor[(11, 1, 16), float64] */;
  %951 = %949.0;
  %952 = @func_2719() /* ty=Tensor[(11, 1, 16), float64] */;
  (%950, %951, %952)
}

def @func_11450() -> Tensor[(11, 1, 16), float64] {
  @func_8290() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_13683() -> (Tensor[(11, 1, 16), float64],) {
  %953 = @func_5764() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) */;
  %954 = %953.0;
  (%954,)
}

def @func_9944() -> (Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(882), float64]) {
  %955 = cast(meta[relay.Constant][38] /* ty=Tensor[(882), float64] */, dtype="float64") /* ty=Tensor[(882), float64] */;
  %956 = reshape(%955, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %957 = @func_2601(%956) /* ty=(Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64], Tensor[(14, 9, 7), float64], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) */;
  %958 = @func_3472() /* ty=Tensor[(11, 1, 16), float64] */;
  %959 = %957.0;
  (%958, %959, meta[relay.Constant][38] /* ty=Tensor[(882), float64] */)
}

def @func_5711() -> (Tensor[(11, 1, 16), float64],) {
  %960 = @func_5179() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %961 = %960.0;
  (%961,)
}

def @func_14230() -> (Tensor[(11, ?, 16), int8], Tensor[(11, 9, 16), bool]) {
  %969 = fn () -> (Tensor[(11, ?, 16), int8], Tensor[(11, 9, 16), bool]) {
    %962 = @func_6757() /* ty=(Tensor[(11, ?, 16), int8], Tensor[(9, 11, 5), int16], float32, Tensor[(495), float32]) */;
    %963 = @func_12470() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
    %964 = %963.1;
    %965 = cast(%964, dtype="bool") /* ty=Tensor[(11, 1, 16), bool] */;
    %966 = cast(meta[relay.Constant][39] /* ty=Tensor[(11, 9, 16), float64] */, dtype="bool") /* ty=Tensor[(11, 9, 16), bool] */;
    %967 = %962.0;
    %968 = greater(%965, %966) /* ty=Tensor[(11, 9, 16), bool] */;
    (%967, %968)
  };
  %969() /* ty=(Tensor[(11, ?, 16), int8], Tensor[(11, 9, 16), bool]) */
}

def @func_10983() -> Tensor[(11, 1, 16), float64] {
  @func_10981() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_10878() -> (Tensor[(11, 1, 16), float64], Tensor[(3, 10, 4), float64]) {
  %974 = fn () -> (Tensor[(11, 1, 16), float64], Tensor[(3, 10, 4), float64]) {
    %970 = @func_3385() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
    %971 = @func_9955() /* ty=(Tensor[(3, 10, 4), float64],) */;
    %972 = %970.1;
    %973 = %971.0;
    (%972, %973)
  };
  %974() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(3, 10, 4), float64]) */
}

def @func_5988() -> (Tensor[(11, 1, 16), float64],) {
  %975 = @func_3456() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(1080), float32]) */;
  %976 = %975.1;
  (%976,)
}

def @func_1446() -> Tensor[(11, 1, 16), float64] {
  @func_1089() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_12718(%var_12666: float64, %var_12667: Tensor[(13, 6, 14), float64]) -> (Tensor[(13, 6, 14), float64], Tensor[(98, 9), bool], Tensor[(11, ?, 16), int8]) {
  %977 = cast(%var_12666, dtype="float64") /* ty=float64 */;
  %978 = cast(%var_12667, dtype="float64") /* ty=Tensor[(13, 6, 14), float64] */;
  %979 = @func_2427() /* ty=(Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64], Tensor[(56), float64], Tensor[(98, 9), float64]) */;
  %980 = %979.3;
  %981 = cast(%980, dtype="bool") /* ty=Tensor[(98, 9), bool] */;
  %982 = cast(%var_12666, dtype="bool") /* ty=bool */;
  %983 = @func_5935() /* ty=(Tensor[(11, ?, 16), int8],) */;
  %984 = floor_divide(%977, %978) /* ty=Tensor[(13, 6, 14), float64] */;
  %985 = equal(%981, %982) /* ty=Tensor[(98, 9), bool] */;
  %986 = %983.0;
  (%984, %985, %986)
}

def @func_6833() -> Tensor[(11, 1, 16), float64] {
  %988 = fn () -> Tensor[(11, 1, 16), float64] {
    %987 = @func_4071() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
    %987.1
  };
  %988() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_1678() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  @func_1676() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */
}

def @func_10928(%var_10927: Tensor[(15, 16, 14), float64]) -> (Tensor[(882), float64], Tensor[(882), float64], Tensor[(15, 16, 14), uint64]) {
  %1000 = fn (%var_10879: Tensor[(15, 16, 14), float64]) -> (Tensor[(882), float64], Tensor[(882), float64], Tensor[(15, 16, 14), uint64]) {
    %989 = cast(meta[relay.Constant][40] /* ty=Tensor[(882), float64] */, dtype="float64") /* ty=Tensor[(882), float64] */;
    %990 = reshape(%989, newshape=[882]) /* ty=Tensor[(882), float64] */;
    %991 = @func_2601(%990) /* ty=(Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64], Tensor[(14, 9, 7), float64], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) */;
    %992 = cast(%var_10879, dtype="float64") /* ty=Tensor[(15, 16, 14), float64] */;
    %993 = sigmoid(%992) /* ty=Tensor[(15, 16, 14), float64] */;
    %994 = cast(%var_10879, dtype="uint64") /* ty=Tensor[(15, 16, 14), uint64] */;
    %995 = shape_of(%993, dtype="int32") /* ty=Tensor[(3), int32] */;
    %996 = cast(%993, dtype="uint64") /* ty=Tensor[(15, 16, 14), uint64] */;
    %997 = dyn.reshape(%994, %995, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %998 = %991.3;
    %999 = left_shift(%996, %997) /* ty=Tensor[(15, 16, 14), uint64] */;
    (%998, meta[relay.Constant][40] /* ty=Tensor[(882), float64] */, %999)
  };
  %1000(%var_10927) /* ty=(Tensor[(882), float64], Tensor[(882), float64], Tensor[(15, 16, 14), uint64]) */
}

def @func_10935() -> Tensor[(11, 1, 16), float64] {
  @func_10933() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_2603(%var_2602: Tensor[(882), float64]) -> (Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64], Tensor[(14, 9, 7), float64], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) {
  %1010 = fn (%var_2575: Tensor[(882), float64]) -> (Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64], Tensor[(14, 9, 7), float64], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) {
    %1001 = cast(%var_2575, dtype="float64") /* ty=Tensor[(882), float64] */;
    %1002 = reshape(%1001, newshape=[14, 9, 7]) /* ty=Tensor[(14, 9, 7), float64] */;
    %1003 = cast(%var_2575, dtype="float64") /* ty=Tensor[(882), float64] */;
    %1004 = reshape(%1003, newshape=[882]) /* ty=Tensor[(882), float64] */;
    %1005 = @func_1830(%1004) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(14, 9, 7), uint32], Tensor[(11, 1, 16), float64], Tensor[(14, 9, 7), bool], Tensor[(11, 1, 16), float64]) */;
    %1006 = @func_2467() /* ty=Tensor[(11, ?, 16), int64] */;
    %1007 = @func_2499() /* ty=Tensor[(11, 1, 16), float64] */;
    %1008 = @func_636(%1002) /* ty=Tensor[(14, 9, 7), float64] */;
    %1009 = %1005.6;
    (%1006, %1007, %1008, %var_2575, %1009)
  };
  %1010(%var_2602) /* ty=(Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64], Tensor[(14, 9, 7), float64], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) */
}

def @func_13384(%var_13382: Tensor[(10, 4, 2), uint64], %var_13383: Tensor[(10, 4, 2), uint64]) -> (Tensor[(10, 4, 2), bool], Tensor[(10, 16, 12), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(10, 16, 12), uint8]) {
  %1032 = fn (%var_13346: Tensor[(10, 4, 2), uint64], %var_13347: Tensor[(10, 4, 2), uint64]) -> (Tensor[(10, 4, 2), bool], Tensor[(10, 16, 12), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(10, 16, 12), uint8]) {
    %1011 = cast(%var_13347, dtype="bool") /* ty=Tensor[(10, 4, 2), bool] */;
    %1012 = shape_of(%var_13346, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1013 = cast(%var_13346, dtype="bool") /* ty=Tensor[(10, 4, 2), bool] */;
    %1014 = dyn.reshape(%1011, %1012, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1015 = cast(meta[relay.Constant][41] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
    %1016 = reshape(%1015, newshape=[10, 16, 12]) /* ty=Tensor[(10, 16, 12), float64] */;
    %1017 = @func_7196(%1016) /* ty=(Tensor[(10, 16, 12), float64],) */;
    %1018 = @func_10024() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %1019 = cast(meta[relay.Constant][41] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
    %1020 = reshape(%1019, newshape=[10, 16, 12]) /* ty=Tensor[(10, 16, 12), float64] */;
    %1021 = @func_7196(%1020) /* ty=(Tensor[(10, 16, 12), float64],) */;
    %1022 = %1021.0;
    %1023 = cast(meta[relay.Constant][41] /* ty=Tensor[(1920), float64] */, dtype="uint8") /* ty=Tensor[(1920), uint8] */;
    %1024 = shape_of(%1022, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1025 = cast(%1022, dtype="uint8") /* ty=Tensor[(10, 16, 12), uint8] */;
    %1026 = dyn.reshape(%1023, %1024, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1027 = less_equal(%1013, %1014) /* ty=Tensor[(10, 4, 2), bool] */;
    %1028 = %1017.0;
    %1029 = %1018.0;
    %1030 = @func_3472() /* ty=Tensor[(11, 1, 16), float64] */;
    %1031 = bitwise_and(%1025, %1026) /* ty=Tensor[(10, 16, 12), uint8] */;
    (%1027, %1028, %1029, %1030, %1031)
  };
  %1032(%var_13382, %var_13383) /* ty=(Tensor[(10, 4, 2), bool], Tensor[(10, 16, 12), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(10, 16, 12), uint8]) */
}

def @func_6422() -> (Tensor[(11, 1, 16), float64],) {
  %1033 = @func_4826() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %1034 = %1033.2;
  (%1034,)
}

def @func_1866() -> (Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) {
  %1045 = fn () -> (Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) {
    %1035 = cast(meta[relay.Constant][42] /* ty=Tensor[(882), float64] */, dtype="float64") /* ty=Tensor[(882), float64] */;
    %1036 = reshape(%1035, newshape=[882]) /* ty=Tensor[(882), float64] */;
    %1037 = @func_1830(%1036) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(14, 9, 7), uint32], Tensor[(11, 1, 16), float64], Tensor[(14, 9, 7), bool], Tensor[(11, 1, 16), float64]) */;
    %1038 = @func_1614() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
    %1039 = %1038.1;
    %1040 = cast(%1039, dtype="float64") /* ty=Tensor[(11, 1, 16), float64] */;
    %1041 = acos(%1040) /* ty=Tensor[(11, 1, 16), float64] */;
    %1042 = cast(%1041, dtype="float64") /* ty=Tensor[(11, 1, 16), float64] */;
    %1043 = %1037.4;
    %1044 = sigmoid(%1042) /* ty=Tensor[(11, 1, 16), float64] */;
    (%1043, meta[relay.Constant][42] /* ty=Tensor[(882), float64] */, %1044)
  };
  %1045() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) */
}

def @func_11527() -> (Tensor[(11, 1, 16), float64], Tensor[(1920), float64], Tensor[(24, 80), float64]) {
  %1051 = fn () -> (Tensor[(11, 1, 16), float64], Tensor[(1920), float64], Tensor[(24, 80), float64]) {
    %1046 = cast(meta[relay.Constant][43] /* ty=Tensor[(24, 80), float64] */, dtype="float64") /* ty=Tensor[(24, 80), float64] */;
    %1047 = reshape(%1046, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
    %1048 = @func_9558(%1047) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(10, 16, 12), float64], Tensor[(1920), float64]) */;
    %1049 = @func_1529() /* ty=Tensor[(11, 1, 16), float64] */;
    %1050 = %1048.2;
    (%1049, %1050, meta[relay.Constant][43] /* ty=Tensor[(24, 80), float64] */)
  };
  %1051() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(1920), float64], Tensor[(24, 80), float64]) */
}

def @func_2501() -> Tensor[(11, 1, 16), float64] {
  @func_2499() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_11690(%var_11642: Tensor[(2, 14, 15), float32], %var_11675: Tensor[(2, 14, 15), float32]) -> (Tensor[(11, 1, 16), float64], Tensor[(2, 14, 15), int16], Tensor[(11, 1, 16), float64]) {
  %1052 = cast(%var_11642, dtype="float32") /* ty=Tensor[(2, 14, 15), float32] */;
  %1053 = asinh(%1052) /* ty=Tensor[(2, 14, 15), float32] */;
  %1054 = cast(%var_11642, dtype="float32") /* ty=Tensor[(2, 14, 15), float32] */;
  %1055 = shape_of(%1053, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1056 = cast(%1053, dtype="float32") /* ty=Tensor[(2, 14, 15), float32] */;
  %1057 = dyn.reshape(%1054, %1055, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1058 = divide(%1056, %1057) /* ty=Tensor[(2, 14, 15), float32] */;
  %1059 = cast(%1058, dtype="float32") /* ty=Tensor[(2, 14, 15), float32] */;
  %1060 = atan(%1059) /* ty=Tensor[(2, 14, 15), float32] */;
  %1061 = cast(%var_11675, dtype="int16") /* ty=Tensor[(2, 14, 15), int16] */;
  %1062 = shape_of(%1060, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1063 = cast(%1060, dtype="int16") /* ty=Tensor[(2, 14, 15), int16] */;
  %1064 = dyn.reshape(%1061, %1062, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1065 = @func_11429() /* ty=Tensor[(11, 1, 16), float64] */;
  %1066 = left_shift(%1063, %1064) /* ty=Tensor[(2, 14, 15), int16] */;
  %1067 = @func_5898() /* ty=Tensor[(11, 1, 16), float64] */;
  (%1065, %1066, %1067)
}

def @func_13477() -> Tensor[(11, 1, 16), float64] {
  %1068 = @func_1591() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %1068.0
}

def @func_1949(%var_1947: Tensor[(882), float64]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(1080), float32], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) {
  @func_1946(%var_1947) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(1080), float32], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) */
}

def @func_11272() -> Tensor[(11, 1, 16), float64] {
  %1070 = fn () -> Tensor[(11, 1, 16), float64] {
    %1069 = @func_9944() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(882), float64]) */;
    %1069.0
  };
  %1070() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_11395() -> (Tensor[(11, ?, 16), bool], Tensor[(11, 1, 16), float64]) {
  %1071 = @func_1865() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) */;
  %1072 = %1071.2;
  %1073 = @func_6930() /* ty=Tensor[(11, 1, 16), float64] */;
  %1074 = cast(%1073, dtype="bool") /* ty=Tensor[(11, 1, 16), bool] */;
  %1075 = shape_of(%1072, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1076 = cast(%1072, dtype="bool") /* ty=Tensor[(11, 1, 16), bool] */;
  %1077 = dyn.reshape(%1074, %1075, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1078 = @func_8539() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %1079 = greater(%1076, %1077) /* ty=Tensor[(11, ?, 16), bool] */;
  %1080 = %1078.0;
  (%1079, %1080)
}

def @func_5180() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %1084 = fn () -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
    %1081 = @func_4563() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %1082 = @func_1529() /* ty=Tensor[(11, 1, 16), float64] */;
    %1083 = %1081.0;
    (%1082, %1083)
  };
  %1084() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */
}

def @func_6374() -> Tensor[(11, 1, 16), float64] {
  %1085 = fn () -> Tensor[(11, 1, 16), float64] {
    @func_1446() /* ty=Tensor[(11, 1, 16), float64] */
  };
  %1085() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_6144(%var_6143: Tensor[(1080), float32]) -> (Tensor[(700), float32], Tensor[(700), float32], Tensor[(11, ?, 16), bool], Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int16], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(1080), float32]) {
  %1106 = fn (%var_6138: Tensor[(1080), float32]) -> (Tensor[(700), float32], Tensor[(700), float32], Tensor[(11, ?, 16), bool], Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int16], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(1080), float32]) {
    %1086 = cast(meta[relay.Constant][44] /* ty=Tensor[(700), float32] */, dtype="float32") /* ty=Tensor[(700), float32] */;
    %1087 = reshape(%1086, newshape=[700]) /* ty=Tensor[(700), float32] */;
    %1088 = @func_5528(%1087) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(98, 9), uint8], Tensor[(700), float32], Tensor[(11, 1, 16), float64]) */;
    %1089 = @func_3532() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
    %1090 = %1089.0;
    %1091 = @func_2467() /* ty=Tensor[(11, ?, 16), int64] */;
    %1092 = cast(%1091, dtype="bool") /* ty=Tensor[(11, ?, 16), bool] */;
    %1093 = shape_of(%1090, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1094 = cast(%1090, dtype="bool") /* ty=Tensor[(11, 1, 16), bool] */;
    %1095 = dyn.reshape(%1092, %1093, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1096 = @func_5126() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
    %1097 = cast(%var_6138, dtype="float32") /* ty=Tensor[(1080), float32] */;
    %1098 = reshape(%1097, newshape=[1080]) /* ty=Tensor[(1080), float32] */;
    %1099 = @func_2856(%1098) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(1080), float32], Tensor[(882), float64], Tensor[(11, 1, 16), float64]) */;
    %1100 = %1088.2;
    %1101 = equal(%1094, %1095) /* ty=Tensor[(11, ?, 16), bool] */;
    %1102 = %1096.3;
    %1103 = @func_5821() /* ty=Tensor[(11, ?, 16), int16] */;
    %1104 = @func_3626() /* ty=Tensor[(11, 1, 16), float64] */;
    %1105 = %1099.2;
    (%1100, meta[relay.Constant][44] /* ty=Tensor[(700), float32] */, %1101, %1102, %1103, %1104, %1105, %var_6138)
  };
  %1106(%var_6143) /* ty=(Tensor[(700), float32], Tensor[(700), float32], Tensor[(11, ?, 16), bool], Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int16], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(1080), float32]) */
}

def @func_11415() -> (Tensor[(11, 1, 16), float64],) {
  @func_11413() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_14484() -> Tensor[(11, 1, 16), float64] {
  %1108 = fn () -> Tensor[(11, 1, 16), float64] {
    %1107 = @func_10693() /* ty=(Tensor[(11, ?, 16), float32], Tensor[(11, 1, 16), float64]) */;
    %1107.1
  };
  %1108() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_636(%var_602: Tensor[(14, 9, 7), float64]) -> Tensor[(14, 9, 7), float64] {
  %1109 = cast(%var_602, dtype="float64") /* ty=Tensor[(14, 9, 7), float64] */;
  %1110 = asin(%1109) /* ty=Tensor[(14, 9, 7), float64] */;
  %1111 = cast(%1110, dtype="float64") /* ty=Tensor[(14, 9, 7), float64] */;
  erf(%1111) /* ty=Tensor[(14, 9, 7), float64] */
}

def @func_12503() -> (Tensor[(11, 1, 16), float32],) {
  @func_12501() /* ty=(Tensor[(11, 1, 16), float32],) */
}

def @func_12416(%var_12286: float64, %var_12365: Tensor[(2, 1144), float64]) -> (Tensor[(15, 1), float64], Tensor[(882), float32], Tensor[(14, 9, 7), uint32], Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int16], Tensor[(2, 1144), bool], Tensor[(5, 16, 8), int64], Tensor[(640), int64], Tensor[(11, 1, 16), float64]) {
  %1112 = cast(%var_12286, dtype="float64") /* ty=float64 */;
  %1113 = cast(meta[relay.Constant][45] /* ty=Tensor[(15, 1), float64] */, dtype="float64") /* ty=Tensor[(15, 1), float64] */;
  %1114 = @func_2541() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(882), float32]) */;
  %1115 = %1114.2;
  %1116 = cast(%1115, dtype="float64") /* ty=Tensor[(882), float64] */;
  %1117 = reshape(%1116, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %1118 = @func_1830(%1117) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(14, 9, 7), uint32], Tensor[(11, 1, 16), float64], Tensor[(14, 9, 7), bool], Tensor[(11, 1, 16), float64]) */;
  %1119 = @func_9202() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %1120 = cast(%var_12365, dtype="float64") /* ty=Tensor[(2, 1144), float64] */;
  %1121 = reshape(%1120, newshape=[11, 13, 16]) /* ty=Tensor[(11, 13, 16), float64] */;
  %1122 = @func_4296(%1121) /* ty=(Tensor[(11, 13, 16), bool], Tensor[(11, 1, 16), float64], Tensor[(4, 11, 15), float32], Tensor[(660), float32], Tensor[(11, 13, 16), float64]) */;
  %1123 = %1122.0;
  %1124 = cast(%1123, dtype="bool") /* ty=Tensor[(11, 13, 16), bool] */;
  %1125 = shape_of(%var_12365, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1126 = cast(%var_12365, dtype="bool") /* ty=Tensor[(2, 1144), bool] */;
  %1127 = dyn.reshape(%1124, %1125, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1128 = cast(meta[relay.Constant][46] /* ty=Tensor[(640), int64] */, dtype="int64") /* ty=Tensor[(640), int64] */;
  %1129 = reshape(%1128, newshape=[5, 16, 8]) /* ty=Tensor[(5, 16, 8), int64] */;
  %1130 = @func_5402(%1129) /* ty=(Tensor[(5, 16, 8), int64],) */;
  %1131 = @func_8539() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %1132 = divide(%1112, %1113) /* ty=Tensor[(15, 1), float64] */;
  %1133 = %1118.3;
  %1134 = %1119.0;
  %1135 = @func_10800() /* ty=Tensor[(11, ?, 16), int16] */;
  %1136 = logical_and(%1126, %1127) /* ty=Tensor[(2, 1144), bool] */;
  %1137 = %1130.0;
  %1138 = %1131.0;
  (%1132, %1115, %1133, %1134, %1135, %1136, %1137, meta[relay.Constant][46] /* ty=Tensor[(640), int64] */, %1138)
}

def @func_14452() -> Tensor[(11, 1, 16), float64] {
  %1139 = @func_5711() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %1139.0
}

def @func_14678(%var_14676: Tensor[(9, 11, 5), float64]) -> (Tensor[(9, 11, 5), float32], Tensor[(9, 11, 5), float32], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(9, 11, 5), bool], Tensor[(9, 11, 5), float32], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  @func_14675(%var_14676) /* ty=(Tensor[(9, 11, 5), float32], Tensor[(9, 11, 5), float32], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(9, 11, 5), bool], Tensor[(9, 11, 5), float32], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */
}

def @func_10933() -> Tensor[(11, 1, 16), float64] {
  %1140 = @func_1368() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) */;
  %1140.0
}

def @func_13872(%var_13870: Tensor[(1080), float32]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), bool], Tensor[(1080), float32]) {
  @func_13869(%var_13870) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), bool], Tensor[(1080), float32]) */
}

def @func_13010() -> Tensor[(11, 1, 16), float64] {
  %1141 = @func_4826() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %1141.4
}

def @func_2308() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64]) {
  %1142 = @func_1591() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %1143 = @func_1368() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) */;
  %1144 = @func_1518() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %1145 = %1142.0;
  %1146 = @func_1529() /* ty=Tensor[(11, 1, 16), float64] */;
  %1147 = %1143.1;
  %1148 = %1144.0;
  (%1145, %1146, %1147, %1148)
}

def @func_11164() -> Tensor[(11, 1, 16), float64] {
  %1149 = fn () -> Tensor[(11, 1, 16), float64] {
    @func_6832() /* ty=Tensor[(11, 1, 16), float64] */
  };
  %1149() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_9306() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %1150 = @func_1997() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %1151 = @func_7302() /* ty=Tensor[(11, 1, 16), float64] */;
  %1152 = %1150.0;
  (%1151, %1152)
}

def @func_5528(%var_5511: Tensor[(700), float32]) -> (Tensor[(11, 1, 16), float64], Tensor[(98, 9), uint8], Tensor[(700), float32], Tensor[(11, 1, 16), float64]) {
  %1153 = cast(%var_5511, dtype="float32") /* ty=Tensor[(700), float32] */;
  %1154 = reshape(%1153, newshape=[700]) /* ty=Tensor[(700), float32] */;
  %1155 = @func_3087(%1154) /* ty=(Tensor[(11, ?, 16), int64], Tensor[(700), float32], Tensor[(98, 9), uint8], Tensor[(11, 1, 16), float64]) */;
  %1156 = @func_1089() /* ty=Tensor[(11, 1, 16), float64] */;
  %1157 = %1155.2;
  %1158 = @func_2499() /* ty=Tensor[(11, 1, 16), float64] */;
  (%1156, %1157, %var_5511, %1158)
}

def @func_14722() -> (Tensor[(11, 1, 16), float64],) {
  %1160 = fn () -> (Tensor[(11, 1, 16), float64],) {
    %1159 = @func_2370() /* ty=Tensor[(11, 1, 16), float64] */;
    (%1159,)
  };
  %1160() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_3153() -> (Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  @func_3151() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */
}

def @func_12181(%var_12179: Tensor[(14, 9, 7), float64]) -> (Tensor[(14, 9, 7), int64],) {
  @func_12178(%var_12179) /* ty=(Tensor[(14, 9, 7), int64],) */
}

def @func_6849() -> (Tensor[(11, 1, 16), float64],) {
  %1163 = fn () -> (Tensor[(11, 1, 16), float64],) {
    %1161 = @func_3151() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
    %1162 = %1161.2;
    (%1162,)
  };
  %1163() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_4530() -> (Tensor[(11, 1, 16), float64],) {
  %1164 = @func_3472() /* ty=Tensor[(11, 1, 16), float64] */;
  (%1164,)
}

def @func_6930() -> Tensor[(11, 1, 16), float64] {
  %1165 = @func_6422() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %1165.0
}

def @func_4010(%var_3981: Tensor[(882), float64]) -> (Tensor[(11, 1, 16), float64], Tensor[(10, 70), float32], Tensor[(882), float64], Tensor[(700), float32], Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64]) {
  %1166 = cast(%var_3981, dtype="float64") /* ty=Tensor[(882), float64] */;
  %1167 = cast(meta[relay.Constant][47] /* ty=Tensor[(700), float32] */, dtype="float32") /* ty=Tensor[(700), float32] */;
  %1168 = reshape(%1166, newshape=[98, 9]) /* ty=Tensor[(98, 9), float64] */;
  %1169 = reshape(%1167, newshape=[10, 70]) /* ty=Tensor[(10, 70), float32] */;
  %1170 = @func_2670(%1168, %1169) /* ty=(Tensor[(14, 10, 5), float32], Tensor[(10, 70), float32], Tensor[(11, 1, 16), float64], Tensor[(98, 9), float32], Tensor[(98, 9), float32]) */;
  %1171 = @func_1368() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) */;
  %1172 = @func_2499() /* ty=Tensor[(11, 1, 16), float64] */;
  %1173 = %1170.1;
  %1174 = %1171.1;
  %1175 = @func_2499() /* ty=Tensor[(11, 1, 16), float64] */;
  (%1172, %1173, %var_3981, meta[relay.Constant][47] /* ty=Tensor[(700), float32] */, %1174, %1175)
}

def @func_7279() -> (Tensor[(1080), float32],) {
  %1176 = @func_3456() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(1080), float32]) */;
  %1177 = %1176.2;
  (%1177,)
}

def @func_3151() -> (Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %1178 = @func_2788() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %1179 = @func_1648() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %1180 = @func_1591() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %1181 = %1178.1;
  %1182 = @func_2467() /* ty=Tensor[(11, ?, 16), int64] */;
  %1183 = %1179.0;
  %1184 = %1180.0;
  (%1181, %1182, %1183, %1184)
}

def @func_1998() -> (Tensor[(11, 1, 16), float64],) {
  %1186 = fn () -> (Tensor[(11, 1, 16), float64],) {
    %1185 = @func_1089() /* ty=Tensor[(11, 1, 16), float64] */;
    (%1185,)
  };
  %1186() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_3323() -> Tensor[(11, 1, 16), float64] {
  %1187 = @func_1060() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %1187.0
}

def @func_10800() -> Tensor[(11, ?, 16), int16] {
  @func_5821() /* ty=Tensor[(11, ?, 16), int16] */
}

def @func_1312() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %1188 = @func_1060() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %1189 = @func_1060() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %1190 = @func_1089() /* ty=Tensor[(11, 1, 16), float64] */;
  %1191 = %1188.0;
  %1192 = %1189.0;
  (%1190, %1191, %1192)
}

def @func_4523(%var_4521: Tensor[(700), float32]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(14, 10, 5), float32], Tensor[(294, 3), float64], Tensor[(700), float32]) {
  @func_4520(%var_4521) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(14, 10, 5), float32], Tensor[(294, 3), float64], Tensor[(700), float32]) */
}

def @func_10373() -> (Tensor[(16, 14, 13), float32], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(880), float64]) {
  @func_10371() /* ty=(Tensor[(16, 14, 13), float32], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(880), float64]) */
}

def @func_11694(%var_11692: Tensor[(2, 14, 15), float32], %var_11693: Tensor[(2, 14, 15), float32]) -> (Tensor[(11, 1, 16), float64], Tensor[(2, 14, 15), int16], Tensor[(11, 1, 16), float64]) {
  @func_11690(%var_11692, %var_11693) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(2, 14, 15), int16], Tensor[(11, 1, 16), float64]) */
}

def @func_3087(%var_3063: Tensor[(700), float32]) -> (Tensor[(11, ?, 16), int64], Tensor[(700), float32], Tensor[(98, 9), uint8], Tensor[(11, 1, 16), float64]) {
  %1193 = @func_2427() /* ty=(Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64], Tensor[(56), float64], Tensor[(98, 9), float64]) */;
  %1194 = %1193.3;
  %1195 = cast(%1194, dtype="float64") /* ty=Tensor[(98, 9), float64] */;
  %1196 = cast(%var_3063, dtype="float32") /* ty=Tensor[(700), float32] */;
  %1197 = reshape(%1195, newshape=[98, 9]) /* ty=Tensor[(98, 9), float64] */;
  %1198 = reshape(%1196, newshape=[10, 70]) /* ty=Tensor[(10, 70), float32] */;
  %1199 = @func_2670(%1197, %1198) /* ty=(Tensor[(14, 10, 5), float32], Tensor[(10, 70), float32], Tensor[(11, 1, 16), float64], Tensor[(98, 9), float32], Tensor[(98, 9), float32]) */;
  %1200 = %1199.4;
  %1201 = cast(%1200, dtype="float64") /* ty=Tensor[(98, 9), float64] */;
  %1202 = sqrt(%1201) /* ty=Tensor[(98, 9), float64] */;
  %1203 = cast(%1194, dtype="bool") /* ty=Tensor[(98, 9), bool] */;
  %1204 = shape_of(%1202, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1205 = cast(%1202, dtype="bool") /* ty=Tensor[(98, 9), bool] */;
  %1206 = dyn.reshape(%1203, %1204, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1207 = less_equal(%1205, %1206) /* ty=Tensor[(98, 9), bool] */;
  %1208 = cast(%1200, dtype="uint8") /* ty=Tensor[(98, 9), uint8] */;
  %1209 = shape_of(%1207, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1210 = cast(%1207, dtype="uint8") /* ty=Tensor[(98, 9), uint8] */;
  %1211 = dyn.reshape(%1208, %1209, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %1212 = @func_2788() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %1213 = @func_2467() /* ty=Tensor[(11, ?, 16), int64] */;
  %1214 = logical_xor(%1210, %1211) /* ty=Tensor[(98, 9), uint8] */;
  %1215 = %1212.0;
  (%1213, %var_3063, %1214, %1215)
}

def @func_7281() -> (Tensor[(1080), float32],) {
  @func_7279() /* ty=(Tensor[(1080), float32],) */
}

def @func_6654() -> Tensor[(11, 1, 16), float64] {
  @func_6652() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_11121() -> (Tensor[(11, 1, 16), float64],) {
  %1218 = fn () -> (Tensor[(11, 1, 16), float64],) {
    %1216 = @func_1676() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
    %1217 = %1216.0;
    (%1217,)
  };
  %1218() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_2149() -> Tensor[(11, 1, 16), float64] {
  %1219 = fn () -> Tensor[(11, 1, 16), float64] {
    @func_1446() /* ty=Tensor[(11, 1, 16), float64] */
  };
  %1219() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_5531(%var_5529: Tensor[(700), float32]) -> (Tensor[(11, 1, 16), float64], Tensor[(98, 9), uint8], Tensor[(700), float32], Tensor[(11, 1, 16), float64]) {
  @func_5528(%var_5529) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(98, 9), uint8], Tensor[(700), float32], Tensor[(11, 1, 16), float64]) */
}

def @func_13103() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64]) {
  %1220 = @func_11315() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %1221 = @func_10185() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %1222 = @func_9944() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(882), float64]) */;
  %1223 = %1220.0;
  %1224 = %1221.0;
  %1225 = %1222.1;
  (%1223, %1224, %1225)
}

def @main(%var_15104: Tensor[(2, 224), bool], %var_15110: Tensor[(2, 224), bool]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(882), float64], Tensor[(2, 224), bool], Tensor[(2, 224), bool]) {
  %1226 = @func_4987() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
  %1227 = cast(%var_15104, dtype="bool") /* ty=Tensor[(2, 224), bool] */;
  %1228 = cast(meta[relay.Constant][48] /* ty=Tensor[(882), float64] */, dtype="float64") /* ty=Tensor[(882), float64] */;
  %1229 = reshape(%1227, newshape=[8, 8, 7]) /* ty=Tensor[(8, 8, 7), bool] */;
  %1230 = reshape(%1228, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %1231 = @func_7675(%1229, %1230) /* ty=(Tensor[(8, 8, 7), bool], Tensor[(882, 1), float64], Tensor[(882), float64], Tensor[(11, 1, 16), float64], Tensor[(1080), float32]) */;
  %1232 = cast(%var_15110, dtype="bool") /* ty=Tensor[(2, 224), bool] */;
  %1233 = shape_of(%var_15104, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1234 = cast(%var_15104, dtype="bool") /* ty=Tensor[(2, 224), bool] */;
  %1235 = dyn.reshape(%1232, %1233, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1236 = cast(%var_15104, dtype="bool") /* ty=Tensor[(2, 224), bool] */;
  %1237 = shape_of(%var_15110, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1238 = cast(%var_15110, dtype="bool") /* ty=Tensor[(2, 224), bool] */;
  %1239 = dyn.reshape(%1236, %1237, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1240 = %1226.1;
  %1241 = %1231.3;
  %1242 = less(%1234, %1235) /* ty=Tensor[(2, 224), bool] */;
  %1243 = less_equal(%1238, %1239) /* ty=Tensor[(2, 224), bool] */;
  (%1240, %1241, meta[relay.Constant][48] /* ty=Tensor[(882), float64] */, %1242, %1243)
}

def @func_9204() -> (Tensor[(11, 1, 16), float64],) {
  @func_9202() /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_8231() -> Tensor[(11, 1, 16), float64] {
  %1245 = fn () -> Tensor[(11, 1, 16), float64] {
    %1244 = @func_7915() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */;
    %1244.3
  };
  %1245() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_6873() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %1249 = fn () -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
    %1246 = @func_6261() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %1247 = @func_5043() /* ty=Tensor[(11, 1, 16), float64] */;
    %1248 = %1246.0;
    (%1247, %1248)
  };
  %1249() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */
}

def @func_4462(%var_4441: Tensor[(880), float64]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(880), float64]) {
  %1250 = @func_3760() /* ty=(Tensor[(11, 1, 16), float64],) */;
  %1251 = cast(%var_4441, dtype="float64") /* ty=Tensor[(880), float64] */;
  %1252 = reshape(%1251, newshape=[11, 5, 16]) /* ty=Tensor[(11, 5, 16), float64] */;
  %1253 = @func_3247(%1252) /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 5, 16), int64], Tensor[(11, 1, 16), float64]) */;
  %1254 = %1250.0;
  %1255 = %1253.2;
  (%1254, %1255, %var_4441)
}

def @func_4959(%var_4944: Tensor[(882, 1), float64]) -> (Tensor[(11, 1, 16), float64], Tensor[(11, ?, 16), int64], Tensor[(11, ?, 16), int16], Tensor[(882, 1), float64], Tensor[(11, 1, 16), float64]) {
  %1256 = cast(%var_4944, dtype="float64") /* ty=Tensor[(882, 1), float64] */;
  %1257 = reshape(%1256, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %1258 = @func_1229(%1257) /* ty=(Tensor[(11, ?, 16), bool], Tensor[(11, ?, 16), int16], Tensor[(11, ?, 16), bool], Tensor[(11, ?, 16), int16], Tensor[(11, ?, 16), float32], Tensor[(14, 9, 7), float64], Tensor[(882), float64], Tensor[(14, 9, 7), float64], Tensor[(14, 9, 7), float64]) */;
  %1259 = @func_2148() /* ty=Tensor[(11, 1, 16), float64] */;
  %1260 = @func_2467() /* ty=Tensor[(11, ?, 16), int64] */;
  %1261 = %1258.1;
  %1262 = @func_3472() /* ty=Tensor[(11, 1, 16), float64] */;
  (%1259, %1260, %1261, %var_4944, %1262)
}

def @func_2428() -> (Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64], Tensor[(56), float64], Tensor[(98, 9), float64]) {
  %1272 = fn () -> (Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64], Tensor[(56), float64], Tensor[(98, 9), float64]) {
    %1263 = @func_2148() /* ty=Tensor[(11, 1, 16), float64] */;
    %1264 = cast(%1263, dtype="float32") /* ty=Tensor[(11, 1, 16), float32] */;
    %1265 = cast(meta[relay.Constant][49] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
    %1266 = cast(meta[relay.Constant][50] /* ty=Tensor[(98, 9), float64] */, dtype="float64") /* ty=Tensor[(98, 9), float64] */;
    %1267 = reshape(%1265, newshape=[7, 8, 1]) /* ty=Tensor[(7, 8, 1), float64] */;
    %1268 = reshape(%1266, newshape=[882]) /* ty=Tensor[(882), float64] */;
    %1269 = @func_2216(%1267, %1268) /* ty=(Tensor[(7, 8, 1), float64], Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64], Tensor[(882), float64]) */;
    %1270 = acosh(%1264) /* ty=Tensor[(11, 1, 16), float32] */;
    %1271 = %1269.1;
    (%1270, %1271, meta[relay.Constant][49] /* ty=Tensor[(56), float64] */, meta[relay.Constant][50] /* ty=Tensor[(98, 9), float64] */)
  };
  %1272() /* ty=(Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64], Tensor[(56), float64], Tensor[(98, 9), float64]) */
}

def @func_10446() -> Tensor[(11, 1, 16), float64] {
  @func_10444() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_10694() -> (Tensor[(11, ?, 16), float32], Tensor[(11, 1, 16), float64]) {
  %1284 = fn () -> (Tensor[(11, ?, 16), float32], Tensor[(11, 1, 16), float64]) {
    %1273 = @func_1518() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %1274 = %1273.0;
    %1275 = @func_3868() /* ty=(Tensor[(11, ?, 16), int8], Tensor[(11, 1, 16), float64]) */;
    %1276 = %1275.0;
    %1277 = cast(%1276, dtype="float32") /* ty=Tensor[(11, ?, 16), float32] */;
    %1278 = shape_of(%1274, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1279 = cast(%1274, dtype="float32") /* ty=Tensor[(11, 1, 16), float32] */;
    %1280 = dyn.reshape(%1277, %1278, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1281 = @func_6848() /* ty=(Tensor[(11, 1, 16), float64],) */;
    %1282 = mod(%1279, %1280) /* ty=Tensor[(11, ?, 16), float32] */;
    %1283 = %1281.0;
    (%1282, %1283)
  };
  %1284() /* ty=(Tensor[(11, ?, 16), float32], Tensor[(11, 1, 16), float64]) */
}

def @func_1409(%var_1401: Tensor[(6, 15, 12), float32], %var_1407: Tensor[(882), float64]) -> (Tensor[(6, 15, 12), float32], Tensor[(14, 9, 7), float64], Tensor[(882), float64]) {
  %1285 = cast(meta[relay.Constant][51] /* ty=Tensor[(6, 15, 12), float32] */, dtype="float32") /* ty=Tensor[(6, 15, 12), float32] */;
  %1286 = shape_of(%var_1401, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1287 = cast(%var_1401, dtype="float32") /* ty=Tensor[(6, 15, 12), float32] */;
  %1288 = dyn.reshape(%1285, %1286, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1289 = cast(%var_1407, dtype="float64") /* ty=Tensor[(882), float64] */;
  %1290 = reshape(%1289, newshape=[14, 9, 7]) /* ty=Tensor[(14, 9, 7), float64] */;
  %1291 = power(%1287, %1288) /* ty=Tensor[(6, 15, 12), float32] */;
  %1292 = @func_636(%1290) /* ty=Tensor[(14, 9, 7), float64] */;
  (%1291, %1292, %var_1407)
}

def @func_4072() -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
  %1295 = fn () -> (Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) {
    %1293 = @func_2719() /* ty=Tensor[(11, 1, 16), float64] */;
    %1294 = @func_1446() /* ty=Tensor[(11, 1, 16), float64] */;
    (%1293, %1294)
  };
  %1295() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float64]) */
}

def @func_4615(%var_4613: float32, %var_4614: Tensor[(9, 11, 5), float32]) -> (Tensor[(9, 11, 5), float32], Tensor[(9, 11, 5), int16]) {
  @func_4611(%var_4613, %var_4614) /* ty=(Tensor[(9, 11, 5), float32], Tensor[(9, 11, 5), int16]) */
}

def @func_10981() -> Tensor[(11, 1, 16), float64] {
  @func_6832() /* ty=Tensor[(11, 1, 16), float64] */
}

def @func_9875(%var_9850: Tensor[(11, 8, 16), float64]) -> (Tensor[(11, 1, 16), float32], Tensor[(448), bool], Tensor[(882), float64], Tensor[(11, 8, 16), int8], float32) {
  %1296 = @func_5764() /* ty=(Tensor[(11, 1, 16), float64], Tensor[(11, 1, 16), float32]) */;
  %1297 = cast(meta[relay.Constant][52] /* ty=Tensor[(448), bool] */, dtype="bool") /* ty=Tensor[(448), bool] */;
  %1298 = cast(meta[relay.Constant][53] /* ty=Tensor[(882), float64] */, dtype="float64") /* ty=Tensor[(882), float64] */;
  %1299 = reshape(%1297, newshape=[8, 8, 7]) /* ty=Tensor[(8, 8, 7), bool] */;
  %1300 = reshape(%1298, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %1301 = @func_7672(%1299, %1300) /* ty=(Tensor[(8, 8, 7), bool], Tensor[(882, 1), float64], Tensor[(882), float64], Tensor[(11, 1, 16), float64], Tensor[(1080), float32]) */;
  %1302 = %1301.3;
  %1303 = cast(%1302, dtype="int8") /* ty=Tensor[(11, 1, 16), int8] */;
  %1304 = cast(%var_9850, dtype="int8") /* ty=Tensor[(11, 8, 16), int8] */;
  %1305 = @func_6757() /* ty=(Tensor[(11, ?, 16), int8], Tensor[(9, 11, 5), int16], float32, Tensor[(495), float32]) */;
  %1306 = %1296.1;
  %1307 = bitwise_or(%1303, %1304) /* ty=Tensor[(11, 8, 16), int8] */;
  %1308 = %1305.2;
  (%1306, meta[relay.Constant][52] /* ty=Tensor[(448), bool] */, meta[relay.Constant][53] /* ty=Tensor[(882), float64] */, %1307, %1308)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen935/build/output.py", line 4568, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [14:52:54] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


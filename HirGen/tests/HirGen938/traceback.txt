==========mod==========
#[version = "0.0.5"]
def @func_14153(%var_14140: Tensor[(420), float32], %var_14142: Tensor[(36), int16]) -> (Tensor[(3, 15, 15), float32], Tensor[(84, 1), int8], Tensor[(420), float32], Tensor[(330), float32], Tensor[(36), int16], Tensor[(1125, 2), float64]) {
  %0 = @func_13830() /* ty=(Tensor[(3, 15, 15), float32],) */;
  %1 = cast(%var_14140, dtype="float32") /* ty=Tensor[(420), float32] */;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %3 = cast(%var_14142, dtype="int16") /* ty=Tensor[(36), int16] */;
  %4 = cast(meta[relay.Constant][1] /* ty=Tensor[(1125, 2), float64] */, dtype="float64") /* ty=Tensor[(1125, 2), float64] */;
  %5 = reshape(%1, newshape=[420]) /* ty=Tensor[(420), float32] */;
  %6 = reshape(%2, newshape=[1, 330]) /* ty=Tensor[(1, 330), float32] */;
  %7 = reshape(%3, newshape=[36]) /* ty=Tensor[(36), int16] */;
  %8 = reshape(%4, newshape=[2250]) /* ty=Tensor[(2250), float64] */;
  %9 = @func_14104(%5, %6, %7, %8) /* ty=(Tensor[(11, ?, 7), uint8], Tensor[(10, 7, 6), float32], Tensor[(420), float32], Tensor[(288), bool], Tensor[(84, 330), float32], Tensor[(84, 1), int8], Tensor[(36), int16], Tensor[(576), int16], Tensor[(2250), float64]) */;
  %10 = %0.0;
  %11 = %9.5;
  (%10, %11, %var_14140, meta[relay.Constant][0] /* ty=Tensor[(330), float32] */, %var_14142, meta[relay.Constant][1] /* ty=Tensor[(1125, 2), float64] */)
}

def @func_11016(%var_10990: Tensor[(7, 4, 12), float32], %var_11000: Tensor[(84), int8]) -> (Tensor[(7, 4, 12), float32], Tensor[(1, 6, 14), int8], Tensor[(26), float32], Tensor[(364), float32], Tensor[(84), int8]) {
  %12 = cast(%var_10990, dtype="float32") /* ty=Tensor[(7, 4, 12), float32] */;
  %13 = cast(meta[relay.Constant][2] /* ty=Tensor[(26), float32] */, dtype="float32") /* ty=Tensor[(26), float32] */;
  %14 = cast(meta[relay.Constant][3] /* ty=Tensor[(364), float32] */, dtype="float32") /* ty=Tensor[(364), float32] */;
  %15 = cast(%var_11000, dtype="int8") /* ty=Tensor[(84), int8] */;
  %16 = reshape(%13, newshape=[13, 1, 2]) /* ty=Tensor[(13, 1, 2), float32] */;
  %17 = reshape(%14, newshape=[13, 14, 2]) /* ty=Tensor[(13, 14, 2), float32] */;
  %18 = reshape(%15, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %19 = @func_1873(%16, %17, %18) /* ty=(Tensor[(13, 14, 2), float32], Tensor[(1, 6, 14), int8], int8, Tensor[(84), int8]) */;
  %20 = cosh(%12) /* ty=Tensor[(7, 4, 12), float32] */;
  %21 = %19.1;
  (%20, %21, meta[relay.Constant][2] /* ty=Tensor[(26), float32] */, meta[relay.Constant][3] /* ty=Tensor[(364), float32] */, %var_11000)
}

def @func_3110(%var_3107: Tensor[(3, 3, 3), float64]) -> (Tensor[(3, 3, 3), float64],) {
  %22 = cast(%var_3107, dtype="float64") /* ty=Tensor[(3, 3, 3), float64] */;
  %23 = asin(%22) /* ty=Tensor[(3, 3, 3), float64] */;
  (%23,)
}

def @func_538(%var_527: int8, %var_528: Tensor[(1, 6, 14), int8]) -> (Tensor[(1, 6, 14), int8],) {
  %24 = cast(%var_527, dtype="int8") /* ty=int8 */;
  %25 = cast(%var_528, dtype="int8") /* ty=Tensor[(1, 6, 14), int8] */;
  %26 = add(%24, %25) /* ty=Tensor[(1, 6, 14), int8] */;
  (%26,)
}

def @func_2794(%var_2760: Tensor[(16, 9, 2), bool], %var_2761: Tensor[(16, 9, 2), bool]) -> (Tensor[(16, 9, 2), bool], Tensor[(2250), float64], Tensor[(84), int8], Tensor[(1, 6, 14), int8], int8, Tensor[(1, 6, 14), float64]) {
  %27 = cast(%var_2761, dtype="bool") /* ty=Tensor[(16, 9, 2), bool] */;
  %28 = shape_of(%var_2760, dtype="int32") /* ty=Tensor[(3), int32] */;
  %29 = cast(%var_2760, dtype="bool") /* ty=Tensor[(16, 9, 2), bool] */;
  %30 = dyn.reshape(%27, %28, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %31 = cast(meta[relay.Constant][6] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %32 = cast(meta[relay.Constant][5] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
  %33 = reshape(%31, newshape=[]) /* ty=int8 */;
  %34 = reshape(%32, newshape=[1, 6, 14]) /* ty=Tensor[(1, 6, 14), int8] */;
  %35 = @func_538(%33, %34) /* ty=(Tensor[(1, 6, 14), int8],) */;
  %36 = cast(meta[relay.Constant][4] /* ty=Tensor[(2250), float64] */, dtype="float64") /* ty=Tensor[(2250), float64] */;
  %37 = cast(meta[relay.Constant][5] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
  %38 = reshape(%36, newshape=[15, 10, 15]) /* ty=Tensor[(15, 10, 15), float64] */;
  %39 = reshape(%37, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %40 = @func_952(%38, %39) /* ty=(Tensor[(15, 10, 15), float64], Tensor[(1, 6, 14), int8], int8, Tensor[(84), int8]) */;
  %41 = %40.1;
  %42 = cast(%41, dtype="float64") /* ty=Tensor[(1, 6, 14), float64] */;
  %43 = logical_and(%29, %30) /* ty=Tensor[(16, 9, 2), bool] */;
  %44 = %35.0;
  %45 = log10(%42) /* ty=Tensor[(1, 6, 14), float64] */;
  (%43, meta[relay.Constant][4] /* ty=Tensor[(2250), float64] */, meta[relay.Constant][5] /* ty=Tensor[(84), int8] */, %44, meta[relay.Constant][6] /* ty=int8 */, %45)
}

def @func_11732() -> Tensor[(2, 3, 14), float64] {
  %46 = cast(meta[relay.Constant][7] /* ty=Tensor[(2, 3, 14), float64] */, dtype="float64") /* ty=Tensor[(2, 3, 14), float64] */;
  tan(%46) /* ty=Tensor[(2, 3, 14), float64] */
}

def @func_17188() -> Tensor[(13, 4, 1), float64] {
  @func_12059() /* ty=Tensor[(13, 4, 1), float64] */
}

def @func_17596(%var_17564: Tensor[(14, 15, 12), float64], %var_17590: Tensor[(288), bool]) -> (Tensor[(14, 15, 12), float64], Tensor[(14, 15, 12), float32], Tensor[(14, 15, 12), float64], Tensor[(72, 4), bool], Tensor[(27), float64], Tensor[(288), bool], Tensor[(13, 11, 13), bool]) {
  %47 = cast(%var_17564, dtype="float64") /* ty=Tensor[(14, 15, 12), float64] */;
  %48 = cast(%var_17564, dtype="float32") /* ty=Tensor[(14, 15, 12), float32] */;
  %49 = cast(%var_17564, dtype="float64") /* ty=Tensor[(14, 15, 12), float64] */;
  %50 = cast(meta[relay.Constant][8] /* ty=Tensor[(27), float64] */, dtype="float64") /* ty=Tensor[(27), float64] */;
  %51 = cast(%var_17590, dtype="bool") /* ty=Tensor[(288), bool] */;
  %52 = reshape(%50, newshape=[27]) /* ty=Tensor[(27), float64] */;
  %53 = reshape(%51, newshape=[72, 4]) /* ty=Tensor[(72, 4), bool] */;
  %54 = @func_12954(%52, %53) /* ty=(Tensor[(13, 11, 13), bool], Tensor[(27), float64], Tensor[(27), float64], Tensor[(72, 4), bool], Tensor[(2250), float64], Tensor[(52), float64], Tensor[(4, 1, 11), float32], Tensor[(44), float32]) */;
  %55 = @func_12837() /* ty=(Tensor[(13, 4, 7), bool], Tensor[(13, 11, 13), bool]) */;
  %56 = sin(%47) /* ty=Tensor[(14, 15, 12), float64] */;
  %57 = acos(%48) /* ty=Tensor[(14, 15, 12), float32] */;
  %58 = exp(%49) /* ty=Tensor[(14, 15, 12), float64] */;
  %59 = %54.3;
  %60 = %55.1;
  (%56, %57, %58, %59, meta[relay.Constant][8] /* ty=Tensor[(27), float64] */, %var_17590, %60)
}

def @func_13054() -> (Tensor[(13, 4, 7), bool], Tensor[(11, 1, 7), float32], Tensor[(77), float32]) {
  %61 = @func_12837() /* ty=(Tensor[(13, 4, 7), bool], Tensor[(13, 11, 13), bool]) */;
  %62 = cast(meta[relay.Constant][9] /* ty=Tensor[(77), float32] */, dtype="float32") /* ty=Tensor[(77), float32] */;
  %63 = reshape(%62, newshape=[11, 1, 7]) /* ty=Tensor[(11, 1, 7), float32] */;
  %64 = @func_3903(%63) /* ty=(Tensor[(11, 1, 7), float32],) */;
  %65 = %61.0;
  %66 = %64.0;
  (%65, %66, meta[relay.Constant][9] /* ty=Tensor[(77), float32] */)
}

def @func_14435() -> (Tensor[(11, ?, 7), bool], Tensor[(11, ?, 7), uint8], Tensor[(13, 4, 1), float64], Tensor[(2100), int32], Tensor[(1, 52), float64], Tensor[(13, 11, 13), bool], Tensor[(13, 4, 7), bool], Tensor[(11, ?, 7), float32]) {
  %67 = @func_14056() /* ty=Tensor[(11, ?, 7), uint8] */;
  %68 = cast(%67, dtype="float64") /* ty=Tensor[(11, ?, 7), float64] */;
  %69 = tan(%68) /* ty=Tensor[(11, ?, 7), float64] */;
  %70 = cast(%67, dtype="bool") /* ty=Tensor[(11, ?, 7), bool] */;
  %71 = shape_of(%69, dtype="int32") /* ty=Tensor[(3), int32] */;
  %72 = cast(%69, dtype="bool") /* ty=Tensor[(11, ?, 7), bool] */;
  %73 = dyn.reshape(%70, %71, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %74 = cast(meta[relay.Constant][10] /* ty=Tensor[(2100), int32] */, dtype="int32") /* ty=Tensor[(2100), int32] */;
  %75 = cast(meta[relay.Constant][10] /* ty=Tensor[(2100), int32] */, dtype="int32") /* ty=Tensor[(2100), int32] */;
  %76 = cast(meta[relay.Constant][11] /* ty=Tensor[(1, 52), float64] */, dtype="float64") /* ty=Tensor[(1, 52), float64] */;
  %77 = reshape(%74, newshape=[15, 14, 10]) /* ty=Tensor[(15, 14, 10), int32] */;
  %78 = reshape(%75, newshape=[15, 14, 10]) /* ty=Tensor[(15, 14, 10), int32] */;
  %79 = reshape(%76, newshape=[52]) /* ty=Tensor[(52), float64] */;
  %80 = @func_11927(%77, %78, %79) /* ty=(Tensor[(15, 14, 10), bool], Tensor[(13, 4, 1), float64], Tensor[(52), float64]) */;
  %81 = @func_13642() /* ty=(Tensor[(13, 11, 13), bool],) */;
  %82 = @func_13054() /* ty=(Tensor[(13, 4, 7), bool], Tensor[(11, 1, 7), float32], Tensor[(77), float32]) */;
  %83 = cast(%69, dtype="uint16") /* ty=Tensor[(11, ?, 7), uint16] */;
  %84 = shape_of(%67, dtype="int32") /* ty=Tensor[(3), int32] */;
  %85 = cast(%67, dtype="uint16") /* ty=Tensor[(11, ?, 7), uint16] */;
  %86 = dyn.reshape(%83, %84, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %87 = minimum(%85, %86) /* ty=Tensor[(11, ?, 7), uint16] */;
  %88 = cast(%87, dtype="float32") /* ty=Tensor[(11, ?, 7), float32] */;
  %89 = equal(%72, %73) /* ty=Tensor[(11, ?, 7), bool] */;
  %90 = @func_14056() /* ty=Tensor[(11, ?, 7), uint8] */;
  %91 = %80.1;
  %92 = %81.0;
  %93 = %82.0;
  %94 = atan(%88) /* ty=Tensor[(11, ?, 7), float32] */;
  (%89, %90, %91, meta[relay.Constant][10] /* ty=Tensor[(2100), int32] */, meta[relay.Constant][11] /* ty=Tensor[(1, 52), float64] */, %92, %93, %94)
}

def @func_15166() -> Tensor[(13, 11, 13), bool] {
  @func_14631() /* ty=Tensor[(13, 11, 13), bool] */
}

def @func_3903(%var_3900: Tensor[(11, 1, 7), float32]) -> (Tensor[(11, 1, 7), float32],) {
  %95 = cast(%var_3900, dtype="float32") /* ty=Tensor[(11, 1, 7), float32] */;
  %96 = sigmoid(%95) /* ty=Tensor[(11, 1, 7), float32] */;
  (%96,)
}

def @func_13343() -> Tensor[(13, 11, 13), float32] {
  @func_12746() /* ty=Tensor[(13, 11, 13), float32] */
}

def @func_16479() -> (Tensor[(13, 4, 1), float64], Tensor[(52), float64]) {
  %97 = @func_12028() /* ty=(Tensor[(2, 3, 14), float64], Tensor[(13, 4, 1), float64], Tensor[(52), float64]) */;
  %98 = @func_14277() /* ty=Tensor[(13, 4, 1), float64] */;
  %99 = %97.2;
  (%98, %99)
}

def @func_16901() -> (Tensor[(13, 11, 13), bool], Tensor[(13, 4, 7), float64]) {
  %100 = @func_16637() /* ty=(Tensor[(13, 11, 13), bool], Tensor[(660), float32], Tensor[(660), float32]) */;
  %101 = @func_12119() /* ty=(Tensor[(13, 4, 7), bool],) */;
  %102 = %101.0;
  %103 = cast(%102, dtype="float64") /* ty=Tensor[(13, 4, 7), float64] */;
  %104 = %100.0;
  %105 = acos(%103) /* ty=Tensor[(13, 4, 7), float64] */;
  (%104, %105)
}

def @func_17522(%var_17520: Tensor[(27), float64]) -> (Tensor[(13, 4, 7), bool], Tensor[(11, 1, 7), float32], Tensor[(15, 11, 4), float32], Tensor[(3, 3, 3), float64], Tensor[(27), float64]) {
  %106 = @func_16438() /* ty=(Tensor[(13, 4, 7), bool],) */;
  %107 = @func_13054() /* ty=(Tensor[(13, 4, 7), bool], Tensor[(11, 1, 7), float32], Tensor[(77), float32]) */;
  %108 = @func_14876() /* ty=(Tensor[(11, ?, 7), uint8], Tensor[(15, 11, 4), float32], Tensor[(660), float32]) */;
  %109 = cast(%var_17520, dtype="float64") /* ty=Tensor[(27), float64] */;
  %110 = reshape(%109, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), float64] */;
  %111 = @func_3110(%110) /* ty=(Tensor[(3, 3, 3), float64],) */;
  %112 = %106.0;
  %113 = %107.1;
  %114 = %108.1;
  %115 = %111.0;
  (%112, %113, %114, %115, %var_17520)
}

def @func_6044(%var_6035: Tensor[(15, 8, 2), float32]) -> Tensor[(15, 8, 2), float32] {
  %116 = cast(%var_6035, dtype="float32") /* ty=Tensor[(15, 8, 2), float32] */;
  log(%116) /* ty=Tensor[(15, 8, 2), float32] */
}

def @func_15470(%var_15439: Tensor[(11, 7, 7), float32], %var_15458: Tensor[(1512), float32]) -> (Tensor[(11, 7, 7), float64], Tensor[(1, 6, 14), int8], Tensor[(26), float32], Tensor[(91, 4), float32], Tensor[(84), int8], Tensor[(288), bool], Tensor[(1512), float32]) {
  %117 = @func_14056() /* ty=Tensor[(11, ?, 7), uint8] */;
  %118 = cast(%117, dtype="float32") /* ty=Tensor[(11, ?, 7), float32] */;
  %119 = acosh(%118) /* ty=Tensor[(11, ?, 7), float32] */;
  %120 = cast(%119, dtype="float64") /* ty=Tensor[(11, ?, 7), float64] */;
  %121 = cast(%var_15439, dtype="float64") /* ty=Tensor[(11, 7, 7), float64] */;
  %122 = cast(meta[relay.Constant][12] /* ty=Tensor[(26), float32] */, dtype="float32") /* ty=Tensor[(26), float32] */;
  %123 = cast(meta[relay.Constant][13] /* ty=Tensor[(91, 4), float32] */, dtype="float32") /* ty=Tensor[(91, 4), float32] */;
  %124 = cast(meta[relay.Constant][14] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
  %125 = reshape(%122, newshape=[13, 1, 2]) /* ty=Tensor[(13, 1, 2), float32] */;
  %126 = reshape(%123, newshape=[13, 14, 2]) /* ty=Tensor[(13, 14, 2), float32] */;
  %127 = reshape(%124, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %128 = @func_1873(%125, %126, %127) /* ty=(Tensor[(13, 14, 2), float32], Tensor[(1, 6, 14), int8], int8, Tensor[(84), int8]) */;
  %129 = cast(%var_15458, dtype="float32") /* ty=Tensor[(1512), float32] */;
  %130 = cast(%var_15458, dtype="float32") /* ty=Tensor[(1512), float32] */;
  %131 = reshape(%129, newshape=[12, 14, 9]) /* ty=Tensor[(12, 14, 9), float32] */;
  %132 = reshape(%130, newshape=[12, 14, 9]) /* ty=Tensor[(12, 14, 9), float32] */;
  %133 = @func_3843(%131, %132) /* ty=(Tensor[(12, 14, 9), float32], Tensor[(2250), float64], Tensor[(288), bool]) */;
  %134 = floor_divide(%120, %121) /* ty=Tensor[(11, 7, 7), float64] */;
  %135 = %128.1;
  %136 = %133.2;
  (%134, %135, meta[relay.Constant][12] /* ty=Tensor[(26), float32] */, meta[relay.Constant][13] /* ty=Tensor[(91, 4), float32] */, meta[relay.Constant][14] /* ty=Tensor[(84), int8] */, %136, %var_15458)
}

def @func_12954(%var_12936: Tensor[(27), float64], %var_12937: Tensor[(72, 4), bool]) -> (Tensor[(13, 11, 13), bool], Tensor[(27), float64], Tensor[(27), float64], Tensor[(72, 4), bool], Tensor[(2250), float64], Tensor[(52), float64], Tensor[(4, 1, 11), float32], Tensor[(44), float32]) {
  %137 = @func_12837() /* ty=(Tensor[(13, 4, 7), bool], Tensor[(13, 11, 13), bool]) */;
  %138 = cast(%var_12936, dtype="float64") /* ty=Tensor[(27), float64] */;
  %139 = cast(%var_12937, dtype="bool") /* ty=Tensor[(72, 4), bool] */;
  %140 = cast(meta[relay.Constant][15] /* ty=Tensor[(2250), float64] */, dtype="float64") /* ty=Tensor[(2250), float64] */;
  %141 = cast(meta[relay.Constant][16] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
  %142 = reshape(%138, newshape=[27]) /* ty=Tensor[(27), float64] */;
  %143 = reshape(%139, newshape=[288]) /* ty=Tensor[(288), bool] */;
  %144 = reshape(%140, newshape=[2250]) /* ty=Tensor[(2250), float64] */;
  %145 = reshape(%141, newshape=[52]) /* ty=Tensor[(52), float64] */;
  %146 = @func_12268(%142, %143, %144, %145) /* ty=(Tensor[(2, 3, 14), float64], Tensor[(3, 3, 3), float64], Tensor[(27), float64], Tensor[(288), bool], Tensor[(330), float32], Tensor[(288), bool], Tensor[(2250), float64], Tensor[(13, 4, 1), float64], Tensor[(52), float64]) */;
  %147 = cast(meta[relay.Constant][17] /* ty=Tensor[(44), float32] */, dtype="float32") /* ty=Tensor[(44), float32] */;
  %148 = reshape(%147, newshape=[4, 1, 11]) /* ty=Tensor[(4, 1, 11), float32] */;
  %149 = @func_8680(%148) /* ty=(Tensor[(4, 1, 11), float32],) */;
  %150 = %137.1;
  %151 = %146.2;
  %152 = %149.0;
  (%150, %151, %var_12936, %var_12937, meta[relay.Constant][15] /* ty=Tensor[(2250), float64] */, meta[relay.Constant][16] /* ty=Tensor[(52), float64] */, %152, meta[relay.Constant][17] /* ty=Tensor[(44), float32] */)
}

def @func_13715(%var_13691: Tensor[(13, 16, 1), uint32]) -> Tensor[(13, 16, 1), float32] {
  %153 = cast(meta[relay.Constant][18] /* ty=uint32 */, dtype="bool") /* ty=bool */;
  %154 = cast(%var_13691, dtype="bool") /* ty=Tensor[(13, 16, 1), bool] */;
  %155 = greater(%153, %154) /* ty=Tensor[(13, 16, 1), bool] */;
  %156 = cast(meta[relay.Constant][18] /* ty=uint32 */, dtype="float32") /* ty=float32 */;
  %157 = cast(%155, dtype="float32") /* ty=Tensor[(13, 16, 1), float32] */;
  floor_divide(%156, %157) /* ty=Tensor[(13, 16, 1), float32] */
}

def @func_14277() -> Tensor[(13, 4, 1), float64] {
  @func_12059() /* ty=Tensor[(13, 4, 1), float64] */
}

def @func_16324() -> Tensor[(3, 15, 15), float32] {
  %158 = @func_13830() /* ty=(Tensor[(3, 15, 15), float32],) */;
  %158.0
}

def @func_15984(%var_15943: Tensor[(225), float32]) -> (Tensor[(13, 11, 13), bool], Tensor[(75), float32], Tensor[(225), float32], Tensor[(13, 4, 7), float64], Tensor[(2, 3, 14), float64]) {
  %159 = cast(meta[relay.Constant][19] /* ty=Tensor[(75), float32] */, dtype="float32") /* ty=Tensor[(75), float32] */;
  %160 = cast(%var_15943, dtype="float32") /* ty=Tensor[(225), float32] */;
  %161 = reshape(%159, newshape=[15, 5, 1]) /* ty=Tensor[(15, 5, 1), float32] */;
  %162 = reshape(%160, newshape=[15, 5, 3]) /* ty=Tensor[(15, 5, 3), float32] */;
  %163 = @func_15753(%161, %162) /* ty=(Tensor[(364), float32], Tensor[(24, 14), float32], Tensor[(15, 5, 3), int64], Tensor[(13, 11, 13), bool], Tensor[(15, 5, 84), float64]) */;
  %164 = @func_12837() /* ty=(Tensor[(13, 4, 7), bool], Tensor[(13, 11, 13), bool]) */;
  %165 = %164.0;
  %166 = cast(%165, dtype="float64") /* ty=Tensor[(13, 4, 7), float64] */;
  %167 = asinh(%166) /* ty=Tensor[(13, 4, 7), float64] */;
  %168 = cast(%167, dtype="float64") /* ty=Tensor[(13, 4, 7), float64] */;
  %169 = @func_14668() /* ty=(Tensor[(2, 3, 14), float64],) */;
  %170 = %163.3;
  %171 = log10(%168) /* ty=Tensor[(13, 4, 7), float64] */;
  %172 = %169.0;
  (%170, meta[relay.Constant][19] /* ty=Tensor[(75), float32] */, %var_15943, %171, %172)
}

def @func_17469(%var_17461: Tensor[(1820, 1), float32]) -> (Tensor[(13, 4, 1), float64], Tensor[(9, 12, 6), bool], Tensor[(6, 108), uint8], Tensor[(1536), int16], Tensor[(1536), int16], Tensor[(10, 13, 14), float32], Tensor[(1820, 1), float32]) {
  %173 = cast(meta[relay.Constant][20] /* ty=Tensor[(6, 108), uint8] */, dtype="uint8") /* ty=Tensor[(6, 108), uint8] */;
  %174 = cast(meta[relay.Constant][20] /* ty=Tensor[(6, 108), uint8] */, dtype="uint8") /* ty=Tensor[(6, 108), uint8] */;
  %175 = reshape(%173, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), uint8] */;
  %176 = reshape(%174, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), uint8] */;
  %177 = cast(meta[relay.Constant][21] /* ty=Tensor[(1536), int16] */, dtype="int16") /* ty=Tensor[(1536), int16] */;
  %178 = reshape(%177, newshape=[1536]) /* ty=Tensor[(1536), int16] */;
  %179 = @func_13122(%178) /* ty=(Tensor[(13, 11, 13), bool], Tensor[(3, 3, 3), float64], Tensor[(1536), int16]) */;
  %180 = cast(%var_17461, dtype="float32") /* ty=Tensor[(1820, 1), float32] */;
  %181 = reshape(%180, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), float32] */;
  %182 = @func_14798(%181) /* ty=(Tensor[(10, 13, 14), float32],) */;
  %183 = @func_17188() /* ty=Tensor[(13, 4, 1), float64] */;
  %184 = @func_9558(%175, %176) /* ty=Tensor[(9, 12, 6), bool] */;
  %185 = %179.2;
  %186 = %182.0;
  (%183, %184, meta[relay.Constant][20] /* ty=Tensor[(6, 108), uint8] */, %185, meta[relay.Constant][21] /* ty=Tensor[(1536), int16] */, %186, %var_17461)
}

def @func_14767() -> (Tensor[(13, 4, 1), float64], Tensor[(1, 6, 14), int8], Tensor[(15, 150), float64], Tensor[(84), int8]) {
  %187 = cast(meta[relay.Constant][22] /* ty=Tensor[(15, 150), float64] */, dtype="float64") /* ty=Tensor[(15, 150), float64] */;
  %188 = cast(meta[relay.Constant][23] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
  %189 = reshape(%187, newshape=[15, 10, 15]) /* ty=Tensor[(15, 10, 15), float64] */;
  %190 = reshape(%188, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %191 = @func_952(%189, %190) /* ty=(Tensor[(15, 10, 15), float64], Tensor[(1, 6, 14), int8], int8, Tensor[(84), int8]) */;
  %192 = @func_14277() /* ty=Tensor[(13, 4, 1), float64] */;
  %193 = %191.1;
  (%192, %193, meta[relay.Constant][22] /* ty=Tensor[(15, 150), float64] */, meta[relay.Constant][23] /* ty=Tensor[(84), int8] */)
}

def @main() -> Tensor[(2, 3, 14), float64] {
  %194 = @func_11732() /* ty=Tensor[(2, 3, 14), float64] */;
  %195 = cast(%194, dtype="float64") /* ty=Tensor[(2, 3, 14), float64] */;
  sigmoid(%195) /* ty=Tensor[(2, 3, 14), float64] */
}

def @func_12119() -> (Tensor[(13, 4, 7), bool],) {
  %196 = @func_12059() /* ty=Tensor[(13, 4, 1), float64] */;
  %197 = cast(%196, dtype="bool") /* ty=Tensor[(13, 4, 1), bool] */;
  %198 = cast(meta[relay.Constant][24] /* ty=Tensor[(13, 4, 7), float64] */, dtype="bool") /* ty=Tensor[(13, 4, 7), bool] */;
  %199 = logical_or(%197, %198) /* ty=Tensor[(13, 4, 7), bool] */;
  (%199,)
}

def @func_12028() -> (Tensor[(2, 3, 14), float64], Tensor[(13, 4, 1), float64], Tensor[(52), float64]) {
  %200 = cast(meta[relay.Constant][25] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
  %201 = reshape(%200, newshape=[13, 4, 1]) /* ty=Tensor[(13, 4, 1), float64] */;
  %202 = @func_11732() /* ty=Tensor[(2, 3, 14), float64] */;
  %203 = @func_10014(%201) /* ty=Tensor[(13, 4, 1), float64] */;
  (%202, %203, meta[relay.Constant][25] /* ty=Tensor[(52), float64] */)
}

def @func_16536() -> Tensor[(2, 3, 14), float64] {
  %204 = @func_15509() /* ty=(Tensor[(2, 3, 14), float64],) */;
  %204.0
}

def @func_17173(%var_17103: Tensor[(13, 11, 13), bool]) -> (Tensor[(13, 4, 1), float64], Tensor[(8, 12, 16), float64], Tensor[(13, 11, 13), float64]) {
  %205 = @func_15062() /* ty=(Tensor[(13, 4, 7), bool], Tensor[(8, 12, 16), float64], Tensor[(1536), float64]) */;
  %206 = @func_14616() /* ty=(Tensor[(13, 11, 13), bool],) */;
  %207 = %206.0;
  %208 = cast(%var_17103, dtype="int8") /* ty=Tensor[(13, 11, 13), int8] */;
  %209 = shape_of(%207, dtype="int32") /* ty=Tensor[(3), int32] */;
  %210 = cast(%207, dtype="int8") /* ty=Tensor[(13, 11, 13), int8] */;
  %211 = dyn.reshape(%208, %209, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %212 = left_shift(%210, %211) /* ty=Tensor[(13, 11, 13), int8] */;
  %213 = cast(%212, dtype="float64") /* ty=Tensor[(13, 11, 13), float64] */;
  %214 = @func_14277() /* ty=Tensor[(13, 4, 1), float64] */;
  %215 = %205.1;
  %216 = asinh(%213) /* ty=Tensor[(13, 11, 13), float64] */;
  (%214, %215, %216)
}

def @func_15274(%var_15178: Tensor[(225, 10), float64], %var_15179: Tensor[(84), int8], %var_15225: Tensor[(2100), int32]) -> (Tensor[(648), uint8], Tensor[(84), int8], Tensor[(225, 10), uint32], Tensor[(648), uint8], Tensor[(9, 12, 6), bool], Tensor[(13, 4, 1), float64], Tensor[(2100), int32], Tensor[(52), float64], Tensor[(225, 10), float32]) {
  %217 = cast(%var_15178, dtype="float64") /* ty=Tensor[(225, 10), float64] */;
  %218 = cast(%var_15179, dtype="int8") /* ty=Tensor[(84), int8] */;
  %219 = reshape(%217, newshape=[15, 10, 15]) /* ty=Tensor[(15, 10, 15), float64] */;
  %220 = reshape(%218, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %221 = @func_952(%219, %220) /* ty=(Tensor[(15, 10, 15), float64], Tensor[(1, 6, 14), int8], int8, Tensor[(84), int8]) */;
  %222 = %221.2;
  %223 = cast(%222, dtype="uint32") /* ty=uint32 */;
  %224 = cast(%var_15178, dtype="uint32") /* ty=Tensor[(225, 10), uint32] */;
  %225 = @func_12328() /* ty=(Tensor[(2, 3, 14), float64], Tensor[(9, 12, 6), bool], Tensor[(648), uint8]) */;
  %226 = %225.2;
  %227 = cast(%226, dtype="uint8") /* ty=Tensor[(648), uint8] */;
  %228 = cast(%226, dtype="uint8") /* ty=Tensor[(648), uint8] */;
  %229 = reshape(%227, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), uint8] */;
  %230 = reshape(%228, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), uint8] */;
  %231 = cast(%var_15225, dtype="int32") /* ty=Tensor[(2100), int32] */;
  %232 = cast(%var_15225, dtype="int32") /* ty=Tensor[(2100), int32] */;
  %233 = cast(meta[relay.Constant][26] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
  %234 = reshape(%231, newshape=[15, 14, 10]) /* ty=Tensor[(15, 14, 10), int32] */;
  %235 = reshape(%232, newshape=[15, 14, 10]) /* ty=Tensor[(15, 14, 10), int32] */;
  %236 = reshape(%233, newshape=[52]) /* ty=Tensor[(52), float64] */;
  %237 = @func_11927(%234, %235, %236) /* ty=(Tensor[(15, 14, 10), bool], Tensor[(13, 4, 1), float64], Tensor[(52), float64]) */;
  %238 = cast(%222, dtype="float32") /* ty=float32 */;
  %239 = cast(%var_15178, dtype="float32") /* ty=Tensor[(225, 10), float32] */;
  %240 = @func_13441() /* ty=Tensor[(648), uint8] */;
  %241 = right_shift(%223, %224) /* ty=Tensor[(225, 10), uint32] */;
  %242 = @func_9558(%229, %230) /* ty=Tensor[(9, 12, 6), bool] */;
  %243 = %237.1;
  %244 = power(%238, %239) /* ty=Tensor[(225, 10), float32] */;
  (%240, %var_15179, %241, %226, %242, %243, %var_15225, meta[relay.Constant][26] /* ty=Tensor[(52), float64] */, %244)
}

def @func_13551(%var_13519: Tensor[(13, 4, 15), float64], %var_13543: Tensor[(84), float64], %var_13545: Tensor[(55, 6), float32], %var_13546: Tensor[(225, 10), float64]) -> (Tensor[(13, 4, 15), bool], Tensor[(288), bool], Tensor[(84), float64], Tensor[(1536), float64], Tensor[(55, 6), float32], Tensor[(225, 10), float64]) {
  %245 = @func_12059() /* ty=Tensor[(13, 4, 1), float64] */;
  %246 = cast(%245, dtype="bool") /* ty=Tensor[(13, 4, 1), bool] */;
  %247 = cast(%var_13519, dtype="bool") /* ty=Tensor[(13, 4, 15), bool] */;
  %248 = cast(%var_13543, dtype="float64") /* ty=Tensor[(84), float64] */;
  %249 = cast(meta[relay.Constant][27] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %250 = cast(%var_13545, dtype="float32") /* ty=Tensor[(55, 6), float32] */;
  %251 = cast(%var_13546, dtype="float64") /* ty=Tensor[(225, 10), float64] */;
  %252 = cast(%var_13546, dtype="float64") /* ty=Tensor[(225, 10), float64] */;
  %253 = cast(%var_13546, dtype="int16") /* ty=Tensor[(225, 10), int16] */;
  %254 = reshape(%248, newshape=[2, 3, 14]) /* ty=Tensor[(2, 3, 14), float64] */;
  %255 = reshape(%249, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %256 = reshape(%250, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %257 = reshape(%251, newshape=[1125, 2]) /* ty=Tensor[(1125, 2), float64] */;
  %258 = reshape(%252, newshape=[1125, 2]) /* ty=Tensor[(1125, 2), float64] */;
  %259 = reshape(%253, newshape=[1125, 2]) /* ty=Tensor[(1125, 2), int16] */;
  %260 = @func_12458(%254, %255, %256, %257, %258, %259) /* ty=(Tensor[(2, 3, 14), int32], Tensor[(2, 3, 14), float64], Tensor[(8, 12, 16), float64], Tensor[(1536), float64], Tensor[(15, 10, 15), float64], Tensor[(330), float32], Tensor[(288), bool], Tensor[(2, 3, 14), uint64], Tensor[(2, 3, 14), float64], Tensor[(1125, 2), bool], Tensor[(648), uint8], Tensor[(2, 10, 15), bool], Tensor[(300), uint16]) */;
  %261 = logical_and(%246, %247) /* ty=Tensor[(13, 4, 15), bool] */;
  %262 = %260.6;
  (%261, %262, %var_13543, meta[relay.Constant][27] /* ty=Tensor[(1536), float64] */, %var_13545, %var_13546)
}

def @func_16553() -> Tensor[(13, 4, 7), bool] {
  %263 = @func_15062() /* ty=(Tensor[(13, 4, 7), bool], Tensor[(8, 12, 16), float64], Tensor[(1536), float64]) */;
  %263.0
}

def @func_12649(%var_12572: Tensor[(336), float32], %var_12581: Tensor[(77), float32]) -> (Tensor[(2, 3, 14), float64], Tensor[(7, 4, 12), float32], Tensor[(336), float32], Tensor[(2250), uint32], Tensor[(420), float32], Tensor[(330), float32], Tensor[(4, 72), bool], Tensor[(77), float32]) {
  %264 = cast(%var_12572, dtype="float32") /* ty=Tensor[(336), float32] */;
  %265 = @func_11732() /* ty=Tensor[(2, 3, 14), float64] */;
  %266 = cast(%265, dtype="int8") /* ty=Tensor[(2, 3, 14), int8] */;
  %267 = reshape(%264, newshape=[7, 4, 12]) /* ty=Tensor[(7, 4, 12), float32] */;
  %268 = reshape(%266, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %269 = @func_11016(%267, %268) /* ty=(Tensor[(7, 4, 12), float32], Tensor[(1, 6, 14), int8], Tensor[(26), float32], Tensor[(364), float32], Tensor[(84), int8]) */;
  %270 = cast(meta[relay.Constant][28] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
  %271 = cast(meta[relay.Constant][28] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
  %272 = cast(meta[relay.Constant][29] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %273 = cast(meta[relay.Constant][30] /* ty=Tensor[(4, 72), bool] */, dtype="bool") /* ty=Tensor[(4, 72), bool] */;
  %274 = cast(%265, dtype="int8") /* ty=Tensor[(2, 3, 14), int8] */;
  %275 = cast(%var_12581, dtype="float32") /* ty=Tensor[(77), float32] */;
  %276 = reshape(%270, newshape=[10, 7, 6]) /* ty=Tensor[(10, 7, 6), float32] */;
  %277 = reshape(%271, newshape=[10, 7, 6]) /* ty=Tensor[(10, 7, 6), float32] */;
  %278 = reshape(%272, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %279 = reshape(%273, newshape=[24, 12]) /* ty=Tensor[(24, 12), bool] */;
  %280 = reshape(%274, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %281 = reshape(%275, newshape=[1, 77]) /* ty=Tensor[(1, 77), float32] */;
  %282 = @func_7048(%276, %277, %278, %279, %280, %281) /* ty=(Tensor[(15, 11, 2), int64], Tensor[(330), float32], Tensor[(24, 12), bool], Tensor[(84), int8], Tensor[(2250), uint32], Tensor[(11, 1, 7), float32], Tensor[(1, 77), float32], Tensor[(10, 7, 6), float32]) */;
  %283 = %269.0;
  %284 = %282.4;
  (%265, %283, %var_12572, %284, meta[relay.Constant][28] /* ty=Tensor[(420), float32] */, meta[relay.Constant][29] /* ty=Tensor[(330), float32] */, meta[relay.Constant][30] /* ty=Tensor[(4, 72), bool] */, %var_12581)
}

def @func_14994() -> (Tensor[(13, 4, 1), float64], Tensor[(13, 11, 13), float32], Tensor[(13, 4, 7), bool]) {
  %285 = @func_13311() /* ty=(Tensor[(13, 11, 13), float32],) */;
  %286 = @func_12059() /* ty=Tensor[(13, 4, 1), float64] */;
  %287 = %285.0;
  %288 = @func_14714() /* ty=Tensor[(13, 4, 7), bool] */;
  (%286, %287, %288)
}

def @func_12189() -> Tensor[(2, 3, 14), float64] {
  @func_11732() /* ty=Tensor[(2, 3, 14), float64] */
}

def @func_8680(%var_8667: Tensor[(4, 1, 11), float32]) -> (Tensor[(4, 1, 11), float32],) {
  %289 = cast(%var_8667, dtype="float32") /* ty=Tensor[(4, 1, 11), float32] */;
  %290 = sinh(%289) /* ty=Tensor[(4, 1, 11), float32] */;
  (%290,)
}

def @func_8948(%var_8923: Tensor[(3, 15, 15), float32]) -> (Tensor[(3, 15, 15), float32], Tensor[(3, 15, 15), bool]) {
  %291 = cast(%var_8923, dtype="float32") /* ty=Tensor[(3, 15, 15), float32] */;
  %292 = cos(%291) /* ty=Tensor[(3, 15, 15), float32] */;
  %293 = cast(%292, dtype="float32") /* ty=Tensor[(3, 15, 15), float32] */;
  %294 = cast(%292, dtype="bool") /* ty=Tensor[(3, 15, 15), bool] */;
  %295 = shape_of(%var_8923, dtype="int32") /* ty=Tensor[(3), int32] */;
  %296 = cast(%var_8923, dtype="bool") /* ty=Tensor[(3, 15, 15), bool] */;
  %297 = dyn.reshape(%294, %295, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %298 = atan(%293) /* ty=Tensor[(3, 15, 15), float32] */;
  %299 = logical_or(%296, %297) /* ty=Tensor[(3, 15, 15), bool] */;
  (%298, %299)
}

def @func_3020(%var_3016: Tensor[(15, 11, 4), float32]) -> (Tensor[(15, 11, 4), float32],) {
  %300 = cast(%var_3016, dtype="float32") /* ty=Tensor[(15, 11, 4), float32] */;
  %301 = cosh(%300) /* ty=Tensor[(15, 11, 4), float32] */;
  (%301,)
}

def @func_14798(%var_14789: Tensor[(10, 13, 14), float32]) -> (Tensor[(10, 13, 14), float32],) {
  %302 = cast(%var_14789, dtype="float32") /* ty=Tensor[(10, 13, 14), float32] */;
  %303 = erf(%302) /* ty=Tensor[(10, 13, 14), float32] */;
  (%303,)
}

def @func_14876() -> (Tensor[(11, ?, 7), uint8], Tensor[(15, 11, 4), float32], Tensor[(660), float32]) {
  %304 = cast(meta[relay.Constant][31] /* ty=Tensor[(660), float32] */, dtype="float32") /* ty=Tensor[(660), float32] */;
  %305 = reshape(%304, newshape=[15, 11, 4]) /* ty=Tensor[(15, 11, 4), float32] */;
  %306 = @func_3020(%305) /* ty=(Tensor[(15, 11, 4), float32],) */;
  %307 = @func_14056() /* ty=Tensor[(11, ?, 7), uint8] */;
  %308 = %306.0;
  (%307, %308, meta[relay.Constant][31] /* ty=Tensor[(660), float32] */)
}

def @func_10014(%var_10003: Tensor[(13, 4, 1), float64]) -> Tensor[(13, 4, 1), float64] {
  %309 = cast(%var_10003, dtype="float64") /* ty=Tensor[(13, 4, 1), float64] */;
  log10(%309) /* ty=Tensor[(13, 4, 1), float64] */
}

def @func_12268(%var_12242: Tensor[(27), float64], %var_12246: Tensor[(288), bool], %var_12247: Tensor[(2250), float64], %var_12262: Tensor[(52), float64]) -> (Tensor[(2, 3, 14), float64], Tensor[(3, 3, 3), float64], Tensor[(27), float64], Tensor[(288), bool], Tensor[(330), float32], Tensor[(288), bool], Tensor[(2250), float64], Tensor[(13, 4, 1), float64], Tensor[(52), float64]) {
  %310 = cast(%var_12242, dtype="float64") /* ty=Tensor[(27), float64] */;
  %311 = reshape(%310, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), float64] */;
  %312 = @func_3110(%311) /* ty=(Tensor[(3, 3, 3), float64],) */;
  %313 = cast(meta[relay.Constant][32] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %314 = cast(%var_12246, dtype="bool") /* ty=Tensor[(288), bool] */;
  %315 = cast(%var_12247, dtype="float64") /* ty=Tensor[(2250), float64] */;
  %316 = @func_12189() /* ty=Tensor[(2, 3, 14), float64] */;
  %317 = cast(%316, dtype="int8") /* ty=Tensor[(2, 3, 14), int8] */;
  %318 = reshape(%313, newshape=[15, 11, 2]) /* ty=Tensor[(15, 11, 2), float32] */;
  %319 = reshape(%314, newshape=[288]) /* ty=Tensor[(288), bool] */;
  %320 = reshape(%315, newshape=[2250]) /* ty=Tensor[(2250), float64] */;
  %321 = reshape(%317, newshape=[3, 28]) /* ty=Tensor[(3, 28), int8] */;
  %322 = @func_6698(%318, %319, %320, %321) /* ty=(Tensor[(288), bool], Tensor[(15, 10, 15), float64], Tensor[(2250), float64], Tensor[(3, 28), int8], Tensor[(15, 11, 2), int64]) */;
  %323 = cast(%var_12262, dtype="float64") /* ty=Tensor[(52), float64] */;
  %324 = reshape(%323, newshape=[13, 4, 1]) /* ty=Tensor[(13, 4, 1), float64] */;
  %325 = %312.0;
  %326 = %322.0;
  %327 = @func_10014(%324) /* ty=Tensor[(13, 4, 1), float64] */;
  (%316, %325, %var_12242, %326, meta[relay.Constant][32] /* ty=Tensor[(330), float32] */, %var_12246, %var_12247, %327, %var_12262)
}

def @func_12746() -> Tensor[(13, 11, 13), float32] {
  %328 = cast(meta[relay.Constant][33] /* ty=Tensor[(13, 11, 13), float32] */, dtype="float32") /* ty=Tensor[(13, 11, 13), float32] */;
  erf(%328) /* ty=Tensor[(13, 11, 13), float32] */
}

def @func_14830() -> (Tensor[(13, 11, 13), bool], Tensor[(1, 6, 14), int8], Tensor[(104, 2), float32], Tensor[(77, 1), float32]) {
  %329 = @func_14435() /* ty=(Tensor[(11, ?, 7), bool], Tensor[(11, ?, 7), uint8], Tensor[(13, 4, 1), float64], Tensor[(2100), int32], Tensor[(1, 52), float64], Tensor[(13, 11, 13), bool], Tensor[(13, 4, 7), bool], Tensor[(11, ?, 7), float32]) */;
  %330 = cast(meta[relay.Constant][34] /* ty=Tensor[(104, 2), float32] */, dtype="float32") /* ty=Tensor[(104, 2), float32] */;
  %331 = cast(meta[relay.Constant][35] /* ty=Tensor[(77, 1), float32] */, dtype="float32") /* ty=Tensor[(77, 1), float32] */;
  %332 = reshape(%330, newshape=[208]) /* ty=Tensor[(208), float32] */;
  %333 = reshape(%331, newshape=[77]) /* ty=Tensor[(77), float32] */;
  %334 = @func_12881(%332, %333) /* ty=(Tensor[(2, 3, 14), float64], Tensor[(208), float32], Tensor[(208), float32], Tensor[(1, 6, 14), int8], int8, Tensor[(8, 12, 16), float64], Tensor[(660), float32], Tensor[(2250), uint32], Tensor[(24, 14), float32], Tensor[(77), float32]) */;
  %335 = %329.5;
  %336 = %334.3;
  (%335, %336, meta[relay.Constant][34] /* ty=Tensor[(104, 2), float32] */, meta[relay.Constant][35] /* ty=Tensor[(77, 1), float32] */)
}

def @func_12545(%var_12522: Tensor[(660), float32]) -> (Tensor[(13, 4, 7), float64], Tensor[(15, 11, 4), float32], Tensor[(660), float32], Tensor[(8, 12, 16), float64], Tensor[(1536), float64]) {
  %337 = @func_12119() /* ty=(Tensor[(13, 4, 7), bool],) */;
  %338 = %337.0;
  %339 = cast(%338, dtype="float64") /* ty=Tensor[(13, 4, 7), float64] */;
  %340 = cast(%var_12522, dtype="float32") /* ty=Tensor[(660), float32] */;
  %341 = reshape(%340, newshape=[15, 11, 4]) /* ty=Tensor[(15, 11, 4), float32] */;
  %342 = @func_3020(%341) /* ty=(Tensor[(15, 11, 4), float32],) */;
  %343 = cast(meta[relay.Constant][36] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %344 = cast(meta[relay.Constant][36] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %345 = reshape(%343, newshape=[8, 12, 16]) /* ty=Tensor[(8, 12, 16), float64] */;
  %346 = reshape(%344, newshape=[8, 12, 16]) /* ty=Tensor[(8, 12, 16), float64] */;
  %347 = asin(%339) /* ty=Tensor[(13, 4, 7), float64] */;
  %348 = %342.0;
  %349 = @func_11204(%345, %346) /* ty=Tensor[(8, 12, 16), float64] */;
  (%347, %348, %var_12522, %349, meta[relay.Constant][36] /* ty=Tensor[(1536), float64] */)
}

def @func_16795() -> Tensor[(2, 3, 14), uint32] {
  @func_16286() /* ty=Tensor[(2, 3, 14), uint32] */
}

def @func_16960() -> (Tensor[(13, 11, 13), float32],) {
  %350 = @func_12746() /* ty=Tensor[(13, 11, 13), float32] */;
  (%350,)
}

def @func_13830() -> (Tensor[(3, 15, 15), float32],) {
  %351 = @func_13619() /* ty=(Tensor[(2, 3, 14), float64], Tensor[(3, 15, 15), float32], Tensor[(5, 135), float32]) */;
  %352 = %351.1;
  (%352,)
}

def @func_7396(%var_7391: Tensor[(12, 14, 8), float64]) -> (Tensor[(12, 14, 8), float64],) {
  %353 = cast(%var_7391, dtype="float64") /* ty=Tensor[(12, 14, 8), float64] */;
  %354 = atan(%353) /* ty=Tensor[(12, 14, 8), float64] */;
  (%354,)
}

def @func_7048(%var_6992: Tensor[(10, 7, 6), float32], %var_6993: Tensor[(10, 7, 6), float32], %var_7002: Tensor[(330), float32], %var_7003: Tensor[(24, 12), bool], %var_7005: Tensor[(84), int8], %var_7023: Tensor[(1, 77), float32]) -> (Tensor[(15, 11, 2), int64], Tensor[(330), float32], Tensor[(24, 12), bool], Tensor[(84), int8], Tensor[(2250), uint32], Tensor[(11, 1, 7), float32], Tensor[(1, 77), float32], Tensor[(10, 7, 6), float32]) {
  %355 = cast(%var_7002, dtype="float32") /* ty=Tensor[(330), float32] */;
  %356 = cast(%var_7003, dtype="bool") /* ty=Tensor[(24, 12), bool] */;
  %357 = cast(meta[relay.Constant][37] /* ty=Tensor[(2250), float64] */, dtype="float64") /* ty=Tensor[(2250), float64] */;
  %358 = cast(%var_7005, dtype="int8") /* ty=Tensor[(84), int8] */;
  %359 = reshape(%355, newshape=[15, 11, 2]) /* ty=Tensor[(15, 11, 2), float32] */;
  %360 = reshape(%356, newshape=[288]) /* ty=Tensor[(288), bool] */;
  %361 = reshape(%357, newshape=[2250]) /* ty=Tensor[(2250), float64] */;
  %362 = reshape(%358, newshape=[3, 28]) /* ty=Tensor[(3, 28), int8] */;
  %363 = @func_6698(%359, %360, %361, %362) /* ty=(Tensor[(288), bool], Tensor[(15, 10, 15), float64], Tensor[(2250), float64], Tensor[(3, 28), int8], Tensor[(15, 11, 2), int64]) */;
  %364 = cast(meta[relay.Constant][38] /* ty=Tensor[(2250), float64] */, dtype="uint32") /* ty=Tensor[(2250), uint32] */;
  %365 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(2250), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %366 = cast(meta[relay.Constant][37] /* ty=Tensor[(2250), float64] */, dtype="uint32") /* ty=Tensor[(2250), uint32] */;
  %367 = dyn.reshape(%364, %365, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %368 = cast(%var_7023, dtype="float32") /* ty=Tensor[(1, 77), float32] */;
  %369 = reshape(%368, newshape=[11, 1, 7]) /* ty=Tensor[(11, 1, 7), float32] */;
  %370 = @func_3903(%369) /* ty=(Tensor[(11, 1, 7), float32],) */;
  %371 = cast(%var_6993, dtype="float32") /* ty=Tensor[(10, 7, 6), float32] */;
  %372 = shape_of(%var_6992, dtype="int32") /* ty=Tensor[(3), int32] */;
  %373 = cast(%var_6992, dtype="float32") /* ty=Tensor[(10, 7, 6), float32] */;
  %374 = dyn.reshape(%371, %372, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %375 = floor_divide(%373, %374) /* ty=Tensor[(10, 7, 6), float32] */;
  %376 = cast(%375, dtype="float32") /* ty=Tensor[(10, 7, 6), float32] */;
  %377 = %363.4;
  %378 = bitwise_or(%366, %367) /* ty=Tensor[(2250), uint32] */;
  %379 = %370.0;
  %380 = asin(%376) /* ty=Tensor[(10, 7, 6), float32] */;
  (%377, %var_7002, %var_7003, %var_7005, %378, %379, %var_7023, %380)
}

def @func_16155() -> Tensor[(13, 4, 7), bool] {
  @func_14572() /* ty=Tensor[(13, 4, 7), bool] */
}

def @func_16197() -> (Tensor[(13, 11, 13), bool], Tensor[(13, 11, 13), bool], Tensor[(1536), float64]) {
  %381 = @func_13642() /* ty=(Tensor[(13, 11, 13), bool],) */;
  %382 = cast(meta[relay.Constant][39] /* ty=Tensor[(1536), int16] */, dtype="int16") /* ty=Tensor[(1536), int16] */;
  %383 = reshape(%382, newshape=[1536]) /* ty=Tensor[(1536), int16] */;
  %384 = @func_13122(%383) /* ty=(Tensor[(13, 11, 13), bool], Tensor[(3, 3, 3), float64], Tensor[(1536), int16]) */;
  %385 = cast(meta[relay.Constant][39] /* ty=Tensor[(1536), int16] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %386 = acosh(%385) /* ty=Tensor[(1536), float64] */;
  %387 = cast(%386, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %388 = %381.0;
  %389 = %384.0;
  %390 = atan(%387) /* ty=Tensor[(1536), float64] */;
  (%388, %389, %390)
}

def @func_17071(%var_17001: Tensor[(330), float32], %var_17002: Tensor[(288), bool], %var_17003: Tensor[(2250), float64], %var_17014: Tensor[(675), float32], %var_17059: Tensor[(75), float32]) -> (Tensor[(2, 3, 14), float64], Tensor[(15, 11, 2), int64], Tensor[(330), float32], Tensor[(288), bool], Tensor[(2250), float64], Tensor[(3, 15, 15), uint16], Tensor[(675), float32], Tensor[(13, 11, 13), bool], Tensor[(13, 4, 7), bool], Tensor[(13, 11, 13), bool], Tensor[(75), float32], Tensor[(225), float32]) {
  %391 = @func_14668() /* ty=(Tensor[(2, 3, 14), float64],) */;
  %392 = cast(%var_17001, dtype="float32") /* ty=Tensor[(330), float32] */;
  %393 = cast(%var_17002, dtype="bool") /* ty=Tensor[(288), bool] */;
  %394 = cast(%var_17003, dtype="float64") /* ty=Tensor[(2250), float64] */;
  %395 = %391.0;
  %396 = cast(%395, dtype="int8") /* ty=Tensor[(2, 3, 14), int8] */;
  %397 = reshape(%392, newshape=[15, 11, 2]) /* ty=Tensor[(15, 11, 2), float32] */;
  %398 = reshape(%393, newshape=[288]) /* ty=Tensor[(288), bool] */;
  %399 = reshape(%394, newshape=[2250]) /* ty=Tensor[(2250), float64] */;
  %400 = reshape(%396, newshape=[3, 28]) /* ty=Tensor[(3, 28), int8] */;
  %401 = @func_6698(%397, %398, %399, %400) /* ty=(Tensor[(288), bool], Tensor[(15, 10, 15), float64], Tensor[(2250), float64], Tensor[(3, 28), int8], Tensor[(15, 11, 2), int64]) */;
  %402 = cast(%var_17014, dtype="float32") /* ty=Tensor[(675), float32] */;
  %403 = reshape(%402, newshape=[3, 15, 15]) /* ty=Tensor[(3, 15, 15), float32] */;
  %404 = @func_13894(%403) /* ty=(Tensor[(3, 15, 15), float32], Tensor[(3, 15, 15), uint16]) */;
  %405 = cast(%var_17059, dtype="float32") /* ty=Tensor[(75), float32] */;
  %406 = cast(meta[relay.Constant][40] /* ty=Tensor[(225), float32] */, dtype="float32") /* ty=Tensor[(225), float32] */;
  %407 = reshape(%405, newshape=[15, 5, 1]) /* ty=Tensor[(15, 5, 1), float32] */;
  %408 = reshape(%406, newshape=[15, 5, 3]) /* ty=Tensor[(15, 5, 3), float32] */;
  %409 = @func_15753(%407, %408) /* ty=(Tensor[(364), float32], Tensor[(24, 14), float32], Tensor[(15, 5, 3), int64], Tensor[(13, 11, 13), bool], Tensor[(15, 5, 84), float64]) */;
  %410 = %401.4;
  %411 = %404.1;
  %412 = @func_15166() /* ty=Tensor[(13, 11, 13), bool] */;
  %413 = @func_14714() /* ty=Tensor[(13, 4, 7), bool] */;
  %414 = %409.3;
  (%395, %410, %var_17001, %var_17002, %var_17003, %411, %var_17014, %412, %413, %414, %var_17059, meta[relay.Constant][40] /* ty=Tensor[(225), float32] */)
}

def @func_11775(%var_11756: Tensor[(8, 36), bool]) -> (Tensor[(2, 3, 14), float64], Tensor[(12, 14, 8), float64], Tensor[(168, 8), float64], Tensor[(13, 14, 2), float32], Tensor[(26), float32], Tensor[(364), float32], Tensor[(1, 6, 14), float64], Tensor[(8, 36), bool]) {
  %415 = cast(meta[relay.Constant][41] /* ty=Tensor[(168, 8), float64] */, dtype="float64") /* ty=Tensor[(168, 8), float64] */;
  %416 = reshape(%415, newshape=[12, 14, 8]) /* ty=Tensor[(12, 14, 8), float64] */;
  %417 = @func_7396(%416) /* ty=(Tensor[(12, 14, 8), float64],) */;
  %418 = cast(meta[relay.Constant][42] /* ty=Tensor[(26), float32] */, dtype="float32") /* ty=Tensor[(26), float32] */;
  %419 = cast(meta[relay.Constant][43] /* ty=Tensor[(364), float32] */, dtype="float32") /* ty=Tensor[(364), float32] */;
  %420 = @func_11732() /* ty=Tensor[(2, 3, 14), float64] */;
  %421 = cast(%420, dtype="int8") /* ty=Tensor[(2, 3, 14), int8] */;
  %422 = reshape(%418, newshape=[13, 1, 2]) /* ty=Tensor[(13, 1, 2), float32] */;
  %423 = reshape(%419, newshape=[13, 14, 2]) /* ty=Tensor[(13, 14, 2), float32] */;
  %424 = reshape(%421, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %425 = @func_1873(%422, %423, %424) /* ty=(Tensor[(13, 14, 2), float32], Tensor[(1, 6, 14), int8], int8, Tensor[(84), int8]) */;
  %426 = cast(%var_11756, dtype="bool") /* ty=Tensor[(8, 36), bool] */;
  %427 = cast(%var_11756, dtype="bool") /* ty=Tensor[(8, 36), bool] */;
  %428 = reshape(%426, newshape=[16, 9, 2]) /* ty=Tensor[(16, 9, 2), bool] */;
  %429 = reshape(%427, newshape=[16, 9, 2]) /* ty=Tensor[(16, 9, 2), bool] */;
  %430 = @func_2794(%428, %429) /* ty=(Tensor[(16, 9, 2), bool], Tensor[(2250), float64], Tensor[(84), int8], Tensor[(1, 6, 14), int8], int8, Tensor[(1, 6, 14), float64]) */;
  %431 = %417.0;
  %432 = %425.0;
  %433 = %430.5;
  (%420, %431, meta[relay.Constant][41] /* ty=Tensor[(168, 8), float64] */, %432, meta[relay.Constant][42] /* ty=Tensor[(26), float32] */, meta[relay.Constant][43] /* ty=Tensor[(364), float32] */, %433, %var_11756)
}

def @func_16393(%var_16361: Tensor[(144, 2), float32], %var_16362: Tensor[(15, 150), float64], %var_16389: Tensor[(648), uint8]) -> (Tensor[(13, 11, 13), bool], Tensor[(2, 3, 14), float64], Tensor[(336), float32], Tensor[(144, 2), float32], Tensor[(15, 150), float64], Tensor[(9, 12, 6), bool], Tensor[(648), uint8]) {
  %434 = cast(meta[relay.Constant][44] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %435 = cast(%var_16361, dtype="float32") /* ty=Tensor[(144, 2), float32] */;
  %436 = cast(%var_16362, dtype="float64") /* ty=Tensor[(15, 150), float64] */;
  %437 = reshape(%434, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %438 = reshape(%435, newshape=[4, 72]) /* ty=Tensor[(4, 72), float32] */;
  %439 = reshape(%436, newshape=[2250]) /* ty=Tensor[(2250), float64] */;
  %440 = @func_16122(%437, %438, %439) /* ty=(Tensor[(13, 11, 13), bool], Tensor[(336), float32], Tensor[(77), float32], Tensor[(2, 3, 14), float64], Tensor[(1, 6, 14), int8], Tensor[(2250), float64], Tensor[(13, 11, 13), bool], Tensor[(4, 72), uint8]) */;
  %441 = cast(%var_16389, dtype="uint8") /* ty=Tensor[(648), uint8] */;
  %442 = cast(%var_16389, dtype="uint8") /* ty=Tensor[(648), uint8] */;
  %443 = reshape(%441, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), uint8] */;
  %444 = reshape(%442, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), uint8] */;
  %445 = @func_14631() /* ty=Tensor[(13, 11, 13), bool] */;
  %446 = %440.3;
  %447 = @func_9558(%443, %444) /* ty=Tensor[(9, 12, 6), bool] */;
  (%445, %446, meta[relay.Constant][44] /* ty=Tensor[(336), float32] */, %var_16361, %var_16362, %447, %var_16389)
}

def @func_17702(%var_17693: Tensor[(3, 16, 8), uint64], %var_17694: Tensor[(3, 16, 8), uint64]) -> Tensor[(3, 16, 8), bool] {
  %448 = cast(%var_17694, dtype="bool") /* ty=Tensor[(3, 16, 8), bool] */;
  %449 = shape_of(%var_17693, dtype="int32") /* ty=Tensor[(3), int32] */;
  %450 = cast(%var_17693, dtype="bool") /* ty=Tensor[(3, 16, 8), bool] */;
  %451 = dyn.reshape(%448, %449, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%450, %451) /* ty=Tensor[(3, 16, 8), bool] */
}

def @func_17306() -> Tensor[(2, 3, 14), uint32] {
  @func_16795() /* ty=Tensor[(2, 3, 14), uint32] */
}

def @func_14455() -> (Tensor[(13, 11, 13), bool],) {
  %452 = @func_13642() /* ty=(Tensor[(13, 11, 13), bool],) */;
  %453 = %452.0;
  (%453,)
}

def @func_13311() -> (Tensor[(13, 11, 13), float32],) {
  %454 = @func_12746() /* ty=Tensor[(13, 11, 13), float32] */;
  (%454,)
}

def @func_13894(%var_13851: Tensor[(3, 15, 15), float32]) -> (Tensor[(3, 15, 15), float32], Tensor[(3, 15, 15), uint16]) {
  %455 = @func_13830() /* ty=(Tensor[(3, 15, 15), float32],) */;
  %456 = %455.0;
  %457 = cast(%var_13851, dtype="float32") /* ty=Tensor[(3, 15, 15), float32] */;
  %458 = shape_of(%456, dtype="int32") /* ty=Tensor[(3), int32] */;
  %459 = cast(%456, dtype="float32") /* ty=Tensor[(3, 15, 15), float32] */;
  %460 = dyn.reshape(%457, %458, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %461 = cast(%456, dtype="bool") /* ty=Tensor[(3, 15, 15), bool] */;
  %462 = shape_of(%var_13851, dtype="int32") /* ty=Tensor[(3), int32] */;
  %463 = cast(%var_13851, dtype="bool") /* ty=Tensor[(3, 15, 15), bool] */;
  %464 = dyn.reshape(%461, %462, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %465 = equal(%463, %464) /* ty=Tensor[(3, 15, 15), bool] */;
  %466 = cast(%var_13851, dtype="uint16") /* ty=Tensor[(3, 15, 15), uint16] */;
  %467 = shape_of(%465, dtype="int32") /* ty=Tensor[(3), int32] */;
  %468 = cast(%465, dtype="uint16") /* ty=Tensor[(3, 15, 15), uint16] */;
  %469 = dyn.reshape(%466, %467, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %470 = multiply(%459, %460) /* ty=Tensor[(3, 15, 15), float32] */;
  %471 = logical_xor(%468, %469) /* ty=Tensor[(3, 15, 15), uint16] */;
  (%470, %471)
}

def @func_13760() -> (Tensor[(648), uint8],) {
  %472 = @func_12328() /* ty=(Tensor[(2, 3, 14), float64], Tensor[(9, 12, 6), bool], Tensor[(648), uint8]) */;
  %473 = %472.2;
  (%473,)
}

def @func_15149(%var_15078: Tensor[(288), bool], %var_15079: Tensor[(2250), float64], %var_15106: Tensor[(1536), float64]) -> (Tensor[(13, 11, 13), bool], Tensor[(288), bool], Tensor[(288), bool], Tensor[(52), float64], Tensor[(1536), float64], Tensor[(84), float64], Tensor[(330), float32], Tensor[(27, 2250), bool], Tensor[(27, 1536), bool]) {
  %474 = @func_12837() /* ty=(Tensor[(13, 4, 7), bool], Tensor[(13, 11, 13), bool]) */;
  %475 = cast(meta[relay.Constant][45] /* ty=Tensor[(27, 1), float64] */, dtype="float64") /* ty=Tensor[(27, 1), float64] */;
  %476 = cast(%var_15078, dtype="bool") /* ty=Tensor[(288), bool] */;
  %477 = cast(%var_15079, dtype="float64") /* ty=Tensor[(2250), float64] */;
  %478 = cast(meta[relay.Constant][46] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
  %479 = reshape(%475, newshape=[27]) /* ty=Tensor[(27), float64] */;
  %480 = reshape(%476, newshape=[288]) /* ty=Tensor[(288), bool] */;
  %481 = reshape(%477, newshape=[2250]) /* ty=Tensor[(2250), float64] */;
  %482 = reshape(%478, newshape=[52]) /* ty=Tensor[(52), float64] */;
  %483 = @func_12268(%479, %480, %481, %482) /* ty=(Tensor[(2, 3, 14), float64], Tensor[(3, 3, 3), float64], Tensor[(27), float64], Tensor[(288), bool], Tensor[(330), float32], Tensor[(288), bool], Tensor[(2250), float64], Tensor[(13, 4, 1), float64], Tensor[(52), float64]) */;
  %484 = cast(meta[relay.Constant][47] /* ty=Tensor[(84), float64] */, dtype="float64") /* ty=Tensor[(84), float64] */;
  %485 = cast(%var_15106, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %486 = cast(meta[relay.Constant][48] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %487 = cast(%var_15079, dtype="float64") /* ty=Tensor[(2250), float64] */;
  %488 = cast(%var_15079, dtype="float64") /* ty=Tensor[(2250), float64] */;
  %489 = cast(%var_15079, dtype="int16") /* ty=Tensor[(2250), int16] */;
  %490 = reshape(%484, newshape=[2, 3, 14]) /* ty=Tensor[(2, 3, 14), float64] */;
  %491 = reshape(%485, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %492 = reshape(%486, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %493 = reshape(%487, newshape=[1125, 2]) /* ty=Tensor[(1125, 2), float64] */;
  %494 = reshape(%488, newshape=[1125, 2]) /* ty=Tensor[(1125, 2), float64] */;
  %495 = reshape(%489, newshape=[1125, 2]) /* ty=Tensor[(1125, 2), int16] */;
  %496 = @func_12458(%490, %491, %492, %493, %494, %495) /* ty=(Tensor[(2, 3, 14), int32], Tensor[(2, 3, 14), float64], Tensor[(8, 12, 16), float64], Tensor[(1536), float64], Tensor[(15, 10, 15), float64], Tensor[(330), float32], Tensor[(288), bool], Tensor[(2, 3, 14), uint64], Tensor[(2, 3, 14), float64], Tensor[(1125, 2), bool], Tensor[(648), uint8], Tensor[(2, 10, 15), bool], Tensor[(300), uint16]) */;
  %497 = cast(%var_15079, dtype="uint16") /* ty=Tensor[(2250), uint16] */;
  %498 = cast(meta[relay.Constant][45] /* ty=Tensor[(27, 1), float64] */, dtype="uint16") /* ty=Tensor[(27, 1), uint16] */;
  %499 = logical_xor(%497, %498) /* ty=Tensor[(27, 2250), uint16] */;
  %500 = cast(%499, dtype="bool") /* ty=Tensor[(27, 2250), bool] */;
  %501 = cast(meta[relay.Constant][45] /* ty=Tensor[(27, 1), float64] */, dtype="bool") /* ty=Tensor[(27, 1), bool] */;
  %502 = cast(meta[relay.Constant][45] /* ty=Tensor[(27, 1), float64] */, dtype="float64") /* ty=Tensor[(27, 1), float64] */;
  %503 = cosh(%502) /* ty=Tensor[(27, 1), float64] */;
  %504 = cast(%503, dtype="bool") /* ty=Tensor[(27, 1), bool] */;
  %505 = cast(%var_15106, dtype="bool") /* ty=Tensor[(1536), bool] */;
  %506 = %474.1;
  %507 = %483.5;
  %508 = %496.3;
  %509 = less_equal(%500, %501) /* ty=Tensor[(27, 2250), bool] */;
  %510 = less_equal(%504, %505) /* ty=Tensor[(27, 1536), bool] */;
  (%506, %507, %var_15078, meta[relay.Constant][46] /* ty=Tensor[(52), float64] */, %508, meta[relay.Constant][47] /* ty=Tensor[(84), float64] */, meta[relay.Constant][48] /* ty=Tensor[(330), float32] */, %509, %510)
}

def @func_13081(%var_13076: Tensor[(9, 12, 6), bool]) -> Tensor[(9, 12, 6), uint64] {
  %511 = @func_12328() /* ty=(Tensor[(2, 3, 14), float64], Tensor[(9, 12, 6), bool], Tensor[(648), uint8]) */;
  %512 = %511.1;
  %513 = cast(%var_13076, dtype="uint64") /* ty=Tensor[(9, 12, 6), uint64] */;
  %514 = shape_of(%512, dtype="int32") /* ty=Tensor[(3), int32] */;
  %515 = cast(%512, dtype="uint64") /* ty=Tensor[(9, 12, 6), uint64] */;
  %516 = dyn.reshape(%513, %514, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  bitwise_xor(%515, %516) /* ty=Tensor[(9, 12, 6), uint64] */
}

def @func_14668() -> (Tensor[(2, 3, 14), float64],) {
  %517 = @func_12328() /* ty=(Tensor[(2, 3, 14), float64], Tensor[(9, 12, 6), bool], Tensor[(648), uint8]) */;
  %518 = %517.0;
  (%518,)
}

def @func_5277(%var_5225: Tensor[(1, 364), float32], %var_5253: Tensor[(27), float64]) -> (Tensor[(14, 13, 8), float32], Tensor[(13, 14, 2), float32], Tensor[(26, 1), float32], Tensor[(1, 364), float32], Tensor[(3, 28), int8], Tensor[(3, 3, 3), float64], Tensor[(27), float64], Tensor[(84), int8], Tensor[(2250), float64]) {
  %519 = cast(meta[relay.Constant][49] /* ty=Tensor[(14, 13, 8), float32] */, dtype="float32") /* ty=Tensor[(14, 13, 8), float32] */;
  %520 = cast(meta[relay.Constant][50] /* ty=Tensor[(26, 1), float32] */, dtype="float32") /* ty=Tensor[(26, 1), float32] */;
  %521 = cast(%var_5225, dtype="float32") /* ty=Tensor[(1, 364), float32] */;
  %522 = cast(meta[relay.Constant][51] /* ty=Tensor[(3, 28), int8] */, dtype="int8") /* ty=Tensor[(3, 28), int8] */;
  %523 = reshape(%520, newshape=[13, 1, 2]) /* ty=Tensor[(13, 1, 2), float32] */;
  %524 = reshape(%521, newshape=[13, 14, 2]) /* ty=Tensor[(13, 14, 2), float32] */;
  %525 = reshape(%522, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %526 = @func_1873(%523, %524, %525) /* ty=(Tensor[(13, 14, 2), float32], Tensor[(1, 6, 14), int8], int8, Tensor[(84), int8]) */;
  %527 = cast(%var_5253, dtype="float64") /* ty=Tensor[(27), float64] */;
  %528 = reshape(%527, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), float64] */;
  %529 = @func_3110(%528) /* ty=(Tensor[(3, 3, 3), float64],) */;
  %530 = cast(meta[relay.Constant][52] /* ty=Tensor[(2250), float64] */, dtype="float64") /* ty=Tensor[(2250), float64] */;
  %531 = cast(meta[relay.Constant][51] /* ty=Tensor[(3, 28), int8] */, dtype="int8") /* ty=Tensor[(3, 28), int8] */;
  %532 = reshape(%530, newshape=[15, 10, 15]) /* ty=Tensor[(15, 10, 15), float64] */;
  %533 = reshape(%531, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %534 = @func_952(%532, %533) /* ty=(Tensor[(15, 10, 15), float64], Tensor[(1, 6, 14), int8], int8, Tensor[(84), int8]) */;
  %535 = atan(%519) /* ty=Tensor[(14, 13, 8), float32] */;
  %536 = %526.0;
  %537 = %529.0;
  %538 = %534.3;
  (%535, %536, meta[relay.Constant][50] /* ty=Tensor[(26, 1), float32] */, %var_5225, meta[relay.Constant][51] /* ty=Tensor[(3, 28), int8] */, %537, %var_5253, %538, meta[relay.Constant][52] /* ty=Tensor[(2250), float64] */)
}

def @func_13642() -> (Tensor[(13, 11, 13), bool],) {
  %539 = @func_12837() /* ty=(Tensor[(13, 4, 7), bool], Tensor[(13, 11, 13), bool]) */;
  %540 = %539.1;
  (%540,)
}

def @func_14572() -> Tensor[(13, 4, 7), bool] {
  %541 = @func_14435() /* ty=(Tensor[(11, ?, 7), bool], Tensor[(11, ?, 7), uint8], Tensor[(13, 4, 1), float64], Tensor[(2100), int32], Tensor[(1, 52), float64], Tensor[(13, 11, 13), bool], Tensor[(13, 4, 7), bool], Tensor[(11, ?, 7), float32]) */;
  %541.6
}

def @func_12059() -> Tensor[(13, 4, 1), float64] {
  %542 = @func_12028() /* ty=(Tensor[(2, 3, 14), float64], Tensor[(13, 4, 1), float64], Tensor[(52), float64]) */;
  %542.1
}

def @func_12837() -> (Tensor[(13, 4, 7), bool], Tensor[(13, 11, 13), bool]) {
  %543 = @func_12119() /* ty=(Tensor[(13, 4, 7), bool],) */;
  %544 = @func_12746() /* ty=Tensor[(13, 11, 13), float32] */;
  %545 = cast(%544, dtype="float64") /* ty=Tensor[(13, 11, 13), float64] */;
  %546 = log(%545) /* ty=Tensor[(13, 11, 13), float64] */;
  %547 = cast(%546, dtype="float32") /* ty=Tensor[(13, 11, 13), float32] */;
  %548 = sinh(%547) /* ty=Tensor[(13, 11, 13), float32] */;
  %549 = cast(%544, dtype="bool") /* ty=Tensor[(13, 11, 13), bool] */;
  %550 = shape_of(%548, dtype="int32") /* ty=Tensor[(3), int32] */;
  %551 = cast(%548, dtype="bool") /* ty=Tensor[(13, 11, 13), bool] */;
  %552 = dyn.reshape(%549, %550, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %553 = %543.0;
  %554 = greater_equal(%551, %552) /* ty=Tensor[(13, 11, 13), bool] */;
  (%553, %554)
}

def @func_15531() -> (Tensor[(13, 4, 1), float64],) {
  %555 = @func_14277() /* ty=Tensor[(13, 4, 1), float64] */;
  (%555,)
}

def @func_13441() -> Tensor[(648), uint8] {
  %556 = @func_12328() /* ty=(Tensor[(2, 3, 14), float64], Tensor[(9, 12, 6), bool], Tensor[(648), uint8]) */;
  %556.2
}

def @func_1873(%var_1852: Tensor[(13, 1, 2), float32], %var_1853: Tensor[(13, 14, 2), float32], %var_1866: Tensor[(84), int8]) -> (Tensor[(13, 14, 2), float32], Tensor[(1, 6, 14), int8], int8, Tensor[(84), int8]) {
  %557 = cast(%var_1852, dtype="float32") /* ty=Tensor[(13, 1, 2), float32] */;
  %558 = cast(%var_1853, dtype="float32") /* ty=Tensor[(13, 14, 2), float32] */;
  %559 = cast(meta[relay.Constant][53] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %560 = cast(%var_1866, dtype="int8") /* ty=Tensor[(84), int8] */;
  %561 = reshape(%559, newshape=[]) /* ty=int8 */;
  %562 = reshape(%560, newshape=[1, 6, 14]) /* ty=Tensor[(1, 6, 14), int8] */;
  %563 = @func_538(%561, %562) /* ty=(Tensor[(1, 6, 14), int8],) */;
  %564 = divide(%557, %558) /* ty=Tensor[(13, 14, 2), float32] */;
  %565 = %563.0;
  (%564, %565, meta[relay.Constant][53] /* ty=int8 */, %var_1866)
}

def @func_8730(%var_8708: Tensor[(8, 7, 12), float32], %var_8713: Tensor[(22, 2), float32]) -> (Tensor[(8, 7, 12), float32], Tensor[(4, 1, 11), float32], Tensor[(22, 2), float32]) {
  %566 = cast(%var_8708, dtype="float32") /* ty=Tensor[(8, 7, 12), float32] */;
  %567 = cast(%var_8713, dtype="float32") /* ty=Tensor[(22, 2), float32] */;
  %568 = reshape(%567, newshape=[4, 1, 11]) /* ty=Tensor[(4, 1, 11), float32] */;
  %569 = @func_8680(%568) /* ty=(Tensor[(4, 1, 11), float32],) */;
  %570 = asinh(%566) /* ty=Tensor[(8, 7, 12), float32] */;
  %571 = %569.0;
  (%570, %571, %var_8713)
}

def @func_16637() -> (Tensor[(13, 11, 13), bool], Tensor[(660), float32], Tensor[(660), float32]) {
  %572 = @func_13343() /* ty=Tensor[(13, 11, 13), float32] */;
  %573 = cast(meta[relay.Constant][54] /* ty=Tensor[(13, 11, 13), float32] */, dtype="bool") /* ty=Tensor[(13, 11, 13), bool] */;
  %574 = shape_of(%572, dtype="int32") /* ty=Tensor[(3), int32] */;
  %575 = cast(%572, dtype="bool") /* ty=Tensor[(13, 11, 13), bool] */;
  %576 = dyn.reshape(%573, %574, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %577 = cast(meta[relay.Constant][55] /* ty=Tensor[(660), float32] */, dtype="float32") /* ty=Tensor[(660), float32] */;
  %578 = reshape(%577, newshape=[660]) /* ty=Tensor[(660), float32] */;
  %579 = @func_12545(%578) /* ty=(Tensor[(13, 4, 7), float64], Tensor[(15, 11, 4), float32], Tensor[(660), float32], Tensor[(8, 12, 16), float64], Tensor[(1536), float64]) */;
  %580 = less(%575, %576) /* ty=Tensor[(13, 11, 13), bool] */;
  %581 = %579.2;
  (%580, %581, meta[relay.Constant][55] /* ty=Tensor[(660), float32] */)
}

def @func_14631() -> Tensor[(13, 11, 13), bool] {
  %582 = @func_14616() /* ty=(Tensor[(13, 11, 13), bool],) */;
  %582.0
}

def @func_13619() -> (Tensor[(2, 3, 14), float64], Tensor[(3, 15, 15), float32], Tensor[(5, 135), float32]) {
  %583 = @func_12028() /* ty=(Tensor[(2, 3, 14), float64], Tensor[(13, 4, 1), float64], Tensor[(52), float64]) */;
  %584 = cast(meta[relay.Constant][56] /* ty=Tensor[(5, 135), float32] */, dtype="float32") /* ty=Tensor[(5, 135), float32] */;
  %585 = reshape(%584, newshape=[3, 15, 15]) /* ty=Tensor[(3, 15, 15), float32] */;
  %586 = @func_8948(%585) /* ty=(Tensor[(3, 15, 15), float32], Tensor[(3, 15, 15), bool]) */;
  %587 = %583.0;
  %588 = %586.0;
  (%587, %588, meta[relay.Constant][56] /* ty=Tensor[(5, 135), float32] */)
}

def @func_9837(%var_9755: Tensor[(12, 16, 8), int16], %var_9756: Tensor[(12, 16, 8), int16]) -> (Tensor[(12, 16, 8), float32], Tensor[(3, 3, 3), float64], Tensor[(27), float64]) {
  %589 = cast(%var_9756, dtype="int16") /* ty=Tensor[(12, 16, 8), int16] */;
  %590 = shape_of(%var_9755, dtype="int32") /* ty=Tensor[(3), int32] */;
  %591 = cast(%var_9755, dtype="int16") /* ty=Tensor[(12, 16, 8), int16] */;
  %592 = dyn.reshape(%589, %590, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %593 = minimum(%591, %592) /* ty=Tensor[(12, 16, 8), int16] */;
  %594 = cast(%var_9755, dtype="float32") /* ty=Tensor[(12, 16, 8), float32] */;
  %595 = shape_of(%593, dtype="int32") /* ty=Tensor[(3), int32] */;
  %596 = cast(%593, dtype="float32") /* ty=Tensor[(12, 16, 8), float32] */;
  %597 = dyn.reshape(%594, %595, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %598 = cast(meta[relay.Constant][57] /* ty=Tensor[(27), float64] */, dtype="float64") /* ty=Tensor[(27), float64] */;
  %599 = reshape(%598, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), float64] */;
  %600 = @func_3110(%599) /* ty=(Tensor[(3, 3, 3), float64],) */;
  %601 = power(%596, %597) /* ty=Tensor[(12, 16, 8), float32] */;
  %602 = %600.0;
  (%601, %602, meta[relay.Constant][57] /* ty=Tensor[(27), float64] */)
}

def @func_952(%var_942: Tensor[(15, 10, 15), float64], %var_947: Tensor[(84), int8]) -> (Tensor[(15, 10, 15), float64], Tensor[(1, 6, 14), int8], int8, Tensor[(84), int8]) {
  %603 = cast(%var_942, dtype="float64") /* ty=Tensor[(15, 10, 15), float64] */;
  %604 = cast(meta[relay.Constant][58] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %605 = cast(%var_947, dtype="int8") /* ty=Tensor[(84), int8] */;
  %606 = reshape(%604, newshape=[]) /* ty=int8 */;
  %607 = reshape(%605, newshape=[1, 6, 14]) /* ty=Tensor[(1, 6, 14), int8] */;
  %608 = @func_538(%606, %607) /* ty=(Tensor[(1, 6, 14), int8],) */;
  %609 = atan(%603) /* ty=Tensor[(15, 10, 15), float64] */;
  %610 = %608.0;
  (%609, %610, meta[relay.Constant][58] /* ty=int8 */, %var_947)
}

def @func_14933() -> Tensor[(13, 4, 7), bool] {
  @func_14714() /* ty=Tensor[(13, 4, 7), bool] */
}

def @func_14009(%var_13966: Tensor[(336), float32], %var_13967: Tensor[(77, 1), float32], %var_13979: Tensor[(27), float64], %var_13988: Tensor[(364), float32]) -> (Tensor[(2, 3, 14), float64], Tensor[(2, 10, 15), bool], Tensor[(300), uint16], Tensor[(13, 4, 648), bool], Tensor[(420), float32], Tensor[(336), float32], Tensor[(77, 1), float32], Tensor[(13, 11, 13), bool], Tensor[(27), float64], Tensor[(2, 144), bool], Tensor[(1, 364), float32], Tensor[(364), float32], Tensor[(13, 4, 648), float64], Tensor[(3, 15, 15), float32], Tensor[(675), float32]) {
  %611 = cast(meta[relay.Constant][59] /* ty=Tensor[(300), uint16] */, dtype="uint16") /* ty=Tensor[(300), uint16] */;
  %612 = reshape(%611, newshape=[2, 10, 15]) /* ty=Tensor[(2, 10, 15), uint16] */;
  %613 = @func_8093(%612) /* ty=(Tensor[(2, 10, 15), bool],) */;
  %614 = @func_12059() /* ty=Tensor[(13, 4, 1), float64] */;
  %615 = @func_13760() /* ty=(Tensor[(648), uint8],) */;
  %616 = %615.0;
  %617 = cast(%614, dtype="bool") /* ty=Tensor[(13, 4, 1), bool] */;
  %618 = cast(%616, dtype="bool") /* ty=Tensor[(648), bool] */;
  %619 = cast(%var_13966, dtype="float32") /* ty=Tensor[(336), float32] */;
  %620 = cast(%var_13967, dtype="float32") /* ty=Tensor[(77, 1), float32] */;
  %621 = reshape(%619, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %622 = reshape(%620, newshape=[77]) /* ty=Tensor[(77), float32] */;
  %623 = @func_12649(%621, %622) /* ty=(Tensor[(2, 3, 14), float64], Tensor[(7, 4, 12), float32], Tensor[(336), float32], Tensor[(2250), uint32], Tensor[(420), float32], Tensor[(330), float32], Tensor[(4, 72), bool], Tensor[(77), float32]) */;
  %624 = cast(%var_13979, dtype="float64") /* ty=Tensor[(27), float64] */;
  %625 = cast(meta[relay.Constant][60] /* ty=Tensor[(2, 144), bool] */, dtype="bool") /* ty=Tensor[(2, 144), bool] */;
  %626 = reshape(%624, newshape=[27]) /* ty=Tensor[(27), float64] */;
  %627 = reshape(%625, newshape=[72, 4]) /* ty=Tensor[(72, 4), bool] */;
  %628 = @func_12954(%626, %627) /* ty=(Tensor[(13, 11, 13), bool], Tensor[(27), float64], Tensor[(27), float64], Tensor[(72, 4), bool], Tensor[(2250), float64], Tensor[(52), float64], Tensor[(4, 1, 11), float32], Tensor[(44), float32]) */;
  %629 = cast(%var_13988, dtype="float32") /* ty=Tensor[(364), float32] */;
  %630 = cast(%var_13979, dtype="float64") /* ty=Tensor[(27), float64] */;
  %631 = reshape(%629, newshape=[1, 364]) /* ty=Tensor[(1, 364), float32] */;
  %632 = reshape(%630, newshape=[27]) /* ty=Tensor[(27), float64] */;
  %633 = @func_5277(%631, %632) /* ty=(Tensor[(14, 13, 8), float32], Tensor[(13, 14, 2), float32], Tensor[(26, 1), float32], Tensor[(1, 364), float32], Tensor[(3, 28), int8], Tensor[(3, 3, 3), float64], Tensor[(27), float64], Tensor[(84), int8], Tensor[(2250), float64]) */;
  %634 = cast(%616, dtype="int16") /* ty=Tensor[(648), int16] */;
  %635 = cast(%614, dtype="int16") /* ty=Tensor[(13, 4, 1), int16] */;
  %636 = subtract(%634, %635) /* ty=Tensor[(13, 4, 648), int16] */;
  %637 = cast(%636, dtype="float32") /* ty=Tensor[(13, 4, 648), float32] */;
  %638 = rsqrt(%637) /* ty=Tensor[(13, 4, 648), float32] */;
  %639 = cast(%638, dtype="uint32") /* ty=Tensor[(13, 4, 648), uint32] */;
  %640 = cast(%614, dtype="uint32") /* ty=Tensor[(13, 4, 1), uint32] */;
  %641 = multiply(%639, %640) /* ty=Tensor[(13, 4, 648), uint32] */;
  %642 = @func_12059() /* ty=Tensor[(13, 4, 1), float64] */;
  %643 = cast(%641, dtype="uint64") /* ty=Tensor[(13, 4, 648), uint64] */;
  %644 = cast(%642, dtype="uint64") /* ty=Tensor[(13, 4, 1), uint64] */;
  %645 = logical_xor(%643, %644) /* ty=Tensor[(13, 4, 648), uint64] */;
  %646 = cast(%645, dtype="float64") /* ty=Tensor[(13, 4, 648), float64] */;
  %647 = cast(meta[relay.Constant][61] /* ty=Tensor[(675), float32] */, dtype="float32") /* ty=Tensor[(675), float32] */;
  %648 = reshape(%647, newshape=[3, 15, 15]) /* ty=Tensor[(3, 15, 15), float32] */;
  %649 = @func_13894(%648) /* ty=(Tensor[(3, 15, 15), float32], Tensor[(3, 15, 15), uint16]) */;
  %650 = @func_12189() /* ty=Tensor[(2, 3, 14), float64] */;
  %651 = %613.0;
  %652 = logical_and(%617, %618) /* ty=Tensor[(13, 4, 648), bool] */;
  %653 = %623.4;
  %654 = %628.0;
  %655 = %633.3;
  %656 = sinh(%646) /* ty=Tensor[(13, 4, 648), float64] */;
  %657 = %649.0;
  (%650, %651, meta[relay.Constant][59] /* ty=Tensor[(300), uint16] */, %652, %653, %var_13966, %var_13967, %654, %var_13979, meta[relay.Constant][60] /* ty=Tensor[(2, 144), bool] */, %655, %var_13988, %656, %657, meta[relay.Constant][61] /* ty=Tensor[(675), float32] */)
}

def @func_12458(%var_12362: Tensor[(2, 3, 14), float64], %var_12378: Tensor[(1536), float64], %var_12381: Tensor[(330), float32], %var_12383: Tensor[(1125, 2), float64], %var_12424: Tensor[(1125, 2), float64], %var_12431: Tensor[(1125, 2), int16]) -> (Tensor[(2, 3, 14), int32], Tensor[(2, 3, 14), float64], Tensor[(8, 12, 16), float64], Tensor[(1536), float64], Tensor[(15, 10, 15), float64], Tensor[(330), float32], Tensor[(288), bool], Tensor[(2, 3, 14), uint64], Tensor[(2, 3, 14), float64], Tensor[(1125, 2), bool], Tensor[(648), uint8], Tensor[(2, 10, 15), bool], Tensor[(300), uint16]) {
  %658 = @func_12189() /* ty=Tensor[(2, 3, 14), float64] */;
  %659 = cast(%var_12362, dtype="int32") /* ty=Tensor[(2, 3, 14), int32] */;
  %660 = shape_of(%658, dtype="int32") /* ty=Tensor[(3), int32] */;
  %661 = cast(%658, dtype="int32") /* ty=Tensor[(2, 3, 14), int32] */;
  %662 = dyn.reshape(%659, %660, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %663 = @func_12328() /* ty=(Tensor[(2, 3, 14), float64], Tensor[(9, 12, 6), bool], Tensor[(648), uint8]) */;
  %664 = cast(%var_12378, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %665 = cast(%var_12378, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %666 = reshape(%664, newshape=[8, 12, 16]) /* ty=Tensor[(8, 12, 16), float64] */;
  %667 = reshape(%665, newshape=[8, 12, 16]) /* ty=Tensor[(8, 12, 16), float64] */;
  %668 = cast(%var_12381, dtype="float32") /* ty=Tensor[(330), float32] */;
  %669 = cast(meta[relay.Constant][62] /* ty=Tensor[(288), bool] */, dtype="bool") /* ty=Tensor[(288), bool] */;
  %670 = cast(%var_12383, dtype="float64") /* ty=Tensor[(1125, 2), float64] */;
  %671 = bitwise_xor(%661, %662) /* ty=Tensor[(2, 3, 14), int32] */;
  %672 = cast(%671, dtype="int8") /* ty=Tensor[(2, 3, 14), int8] */;
  %673 = reshape(%668, newshape=[15, 11, 2]) /* ty=Tensor[(15, 11, 2), float32] */;
  %674 = reshape(%669, newshape=[288]) /* ty=Tensor[(288), bool] */;
  %675 = reshape(%670, newshape=[2250]) /* ty=Tensor[(2250), float64] */;
  %676 = reshape(%672, newshape=[3, 28]) /* ty=Tensor[(3, 28), int8] */;
  %677 = @func_6698(%673, %674, %675, %676) /* ty=(Tensor[(288), bool], Tensor[(15, 10, 15), float64], Tensor[(2250), float64], Tensor[(3, 28), int8], Tensor[(15, 11, 2), int64]) */;
  %678 = cast(%658, dtype="uint64") /* ty=Tensor[(2, 3, 14), uint64] */;
  %679 = shape_of(%var_12362, dtype="int32") /* ty=Tensor[(3), int32] */;
  %680 = cast(%var_12362, dtype="uint64") /* ty=Tensor[(2, 3, 14), uint64] */;
  %681 = dyn.reshape(%678, %679, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %682 = cast(%var_12383, dtype="float64") /* ty=Tensor[(1125, 2), float64] */;
  %683 = log(%682) /* ty=Tensor[(1125, 2), float64] */;
  %684 = cast(%var_12424, dtype="int16") /* ty=Tensor[(1125, 2), int16] */;
  %685 = shape_of(%683, dtype="int32") /* ty=Tensor[(2), int32] */;
  %686 = cast(%683, dtype="int16") /* ty=Tensor[(1125, 2), int16] */;
  %687 = dyn.reshape(%684, %685, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %688 = maximum(%686, %687) /* ty=Tensor[(1125, 2), int16] */;
  %689 = cast(%var_12431, dtype="bool") /* ty=Tensor[(1125, 2), bool] */;
  %690 = shape_of(%688, dtype="int32") /* ty=Tensor[(2), int32] */;
  %691 = cast(%688, dtype="bool") /* ty=Tensor[(1125, 2), bool] */;
  %692 = dyn.reshape(%689, %690, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %693 = @func_12328() /* ty=(Tensor[(2, 3, 14), float64], Tensor[(9, 12, 6), bool], Tensor[(648), uint8]) */;
  %694 = cast(meta[relay.Constant][63] /* ty=Tensor[(300), uint16] */, dtype="uint16") /* ty=Tensor[(300), uint16] */;
  %695 = reshape(%694, newshape=[2, 10, 15]) /* ty=Tensor[(2, 10, 15), uint16] */;
  %696 = @func_8093(%695) /* ty=(Tensor[(2, 10, 15), bool],) */;
  %697 = %663.0;
  %698 = @func_11204(%666, %667) /* ty=Tensor[(8, 12, 16), float64] */;
  %699 = %677.1;
  %700 = right_shift(%680, %681) /* ty=Tensor[(2, 3, 14), uint64] */;
  %701 = @func_12189() /* ty=Tensor[(2, 3, 14), float64] */;
  %702 = greater_equal(%691, %692) /* ty=Tensor[(1125, 2), bool] */;
  %703 = %693.2;
  %704 = %696.0;
  (%671, %697, %698, %var_12378, %699, %var_12381, meta[relay.Constant][62] /* ty=Tensor[(288), bool] */, %700, %701, %702, %703, %704, meta[relay.Constant][63] /* ty=Tensor[(300), uint16] */)
}

def @func_13122(%var_13113: Tensor[(1536), int16]) -> (Tensor[(13, 11, 13), bool], Tensor[(3, 3, 3), float64], Tensor[(1536), int16]) {
  %705 = @func_12837() /* ty=(Tensor[(13, 4, 7), bool], Tensor[(13, 11, 13), bool]) */;
  %706 = cast(%var_13113, dtype="int16") /* ty=Tensor[(1536), int16] */;
  %707 = cast(%var_13113, dtype="int16") /* ty=Tensor[(1536), int16] */;
  %708 = reshape(%706, newshape=[12, 16, 8]) /* ty=Tensor[(12, 16, 8), int16] */;
  %709 = reshape(%707, newshape=[12, 16, 8]) /* ty=Tensor[(12, 16, 8), int16] */;
  %710 = @func_9837(%708, %709) /* ty=(Tensor[(12, 16, 8), float32], Tensor[(3, 3, 3), float64], Tensor[(27), float64]) */;
  %711 = %705.1;
  %712 = %710.1;
  (%711, %712, %var_13113)
}

def @func_8093(%var_8084: Tensor[(2, 10, 15), uint16]) -> (Tensor[(2, 10, 15), bool],) {
  %713 = cast(meta[relay.Constant][64] /* ty=uint16 */, dtype="bool") /* ty=bool */;
  %714 = cast(%var_8084, dtype="bool") /* ty=Tensor[(2, 10, 15), bool] */;
  %715 = less_equal(%713, %714) /* ty=Tensor[(2, 10, 15), bool] */;
  (%715,)
}

def @func_12080(%var_12078: Tensor[(208), float32]) -> (Tensor[(13, 4, 1), float64], Tensor[(1536), float64], Tensor[(208), float32]) {
  %716 = cast(%var_12078, dtype="float32") /* ty=Tensor[(208), float32] */;
  %717 = reshape(%716, newshape=[8, 13, 2]) /* ty=Tensor[(8, 13, 2), float32] */;
  %718 = @func_11483(%717) /* ty=(Tensor[(8, 13, 2), float32], Tensor[(8, 12, 16), float64], Tensor[(1536), float64]) */;
  %719 = @func_12059() /* ty=Tensor[(13, 4, 1), float64] */;
  %720 = %718.2;
  (%719, %720, %var_12078)
}

def @func_17382() -> (Tensor[(2, 3, 14), float64],) {
  %721 = @func_16536() /* ty=Tensor[(2, 3, 14), float64] */;
  (%721,)
}

def @func_15415() -> (Tensor[(13, 11, 13), bool],) {
  %722 = @func_14631() /* ty=Tensor[(13, 11, 13), bool] */;
  (%722,)
}

def @func_15753(%var_15682: Tensor[(15, 5, 1), float32], %var_15699: Tensor[(15, 5, 3), float32]) -> (Tensor[(364), float32], Tensor[(24, 14), float32], Tensor[(15, 5, 3), int64], Tensor[(13, 11, 13), bool], Tensor[(15, 5, 84), float64]) {
  %723 = cast(meta[relay.Constant][65] /* ty=Tensor[(24, 14), float32] */, dtype="float32") /* ty=Tensor[(24, 14), float32] */;
  %724 = cast(meta[relay.Constant][66] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
  %725 = reshape(%723, newshape=[7, 4, 12]) /* ty=Tensor[(7, 4, 12), float32] */;
  %726 = reshape(%724, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %727 = @func_11016(%725, %726) /* ty=(Tensor[(7, 4, 12), float32], Tensor[(1, 6, 14), int8], Tensor[(26), float32], Tensor[(364), float32], Tensor[(84), int8]) */;
  %728 = cast(%var_15682, dtype="float32") /* ty=Tensor[(15, 5, 1), float32] */;
  %729 = acosh(%728) /* ty=Tensor[(15, 5, 1), float32] */;
  %730 = cast(%729, dtype="int64") /* ty=Tensor[(15, 5, 1), int64] */;
  %731 = cast(%var_15699, dtype="int64") /* ty=Tensor[(15, 5, 3), int64] */;
  %732 = @func_14616() /* ty=(Tensor[(13, 11, 13), bool],) */;
  %733 = cast(meta[relay.Constant][66] /* ty=Tensor[(84), int8] */, dtype="float64") /* ty=Tensor[(84), float64] */;
  %734 = cast(%var_15682, dtype="float64") /* ty=Tensor[(15, 5, 1), float64] */;
  %735 = %727.3;
  %736 = left_shift(%730, %731) /* ty=Tensor[(15, 5, 3), int64] */;
  %737 = %732.0;
  %738 = multiply(%733, %734) /* ty=Tensor[(15, 5, 84), float64] */;
  (%735, meta[relay.Constant][65] /* ty=Tensor[(24, 14), float32] */, %736, %737, %738)
}

def @func_9558(%var_9547: Tensor[(9, 12, 6), uint8], %var_9548: Tensor[(9, 12, 6), uint8]) -> Tensor[(9, 12, 6), bool] {
  %739 = cast(%var_9548, dtype="uint8") /* ty=Tensor[(9, 12, 6), uint8] */;
  %740 = shape_of(%var_9547, dtype="int32") /* ty=Tensor[(3), int32] */;
  %741 = cast(%var_9547, dtype="uint8") /* ty=Tensor[(9, 12, 6), uint8] */;
  %742 = dyn.reshape(%739, %740, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %743 = multiply(%741, %742) /* ty=Tensor[(9, 12, 6), uint8] */;
  %744 = cast(%743, dtype="bool") /* ty=Tensor[(9, 12, 6), bool] */;
  %745 = shape_of(%var_9548, dtype="int32") /* ty=Tensor[(3), int32] */;
  %746 = cast(%var_9548, dtype="bool") /* ty=Tensor[(9, 12, 6), bool] */;
  %747 = dyn.reshape(%744, %745, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%746, %747) /* ty=Tensor[(9, 12, 6), bool] */
}

def @func_15647() -> (Tensor[(13, 4, 7), bool],) {
  %748 = @func_14933() /* ty=Tensor[(13, 4, 7), bool] */;
  (%748,)
}

def @func_16032(%var_15992: Tensor[(13, 11, 5), float64], %var_16004: Tensor[(84), int8]) -> (Tensor[(13, 11, 5), float64], Tensor[(84), int8], Tensor[(2250), float64], Tensor[(84), int8], Tensor[(13, 11, 13), bool], Tensor[(225), float32], Tensor[(3, 15, 15), bool], Tensor[(675), float32], Tensor[(13, 11, 13), bool]) {
  %749 = cast(%var_15992, dtype="float64") /* ty=Tensor[(13, 11, 5), float64] */;
  %750 = cast(meta[relay.Constant][67] /* ty=Tensor[(2250), float64] */, dtype="float64") /* ty=Tensor[(2250), float64] */;
  %751 = cast(%var_16004, dtype="int8") /* ty=Tensor[(84), int8] */;
  %752 = reshape(%750, newshape=[15, 10, 15]) /* ty=Tensor[(15, 10, 15), float64] */;
  %753 = reshape(%751, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %754 = @func_952(%752, %753) /* ty=(Tensor[(15, 10, 15), float64], Tensor[(1, 6, 14), int8], int8, Tensor[(84), int8]) */;
  %755 = cast(meta[relay.Constant][68] /* ty=Tensor[(225), float32] */, dtype="float32") /* ty=Tensor[(225), float32] */;
  %756 = reshape(%755, newshape=[225]) /* ty=Tensor[(225), float32] */;
  %757 = @func_15984(%756) /* ty=(Tensor[(13, 11, 13), bool], Tensor[(75), float32], Tensor[(225), float32], Tensor[(13, 4, 7), float64], Tensor[(2, 3, 14), float64]) */;
  %758 = cast(meta[relay.Constant][69] /* ty=Tensor[(675), float32] */, dtype="float32") /* ty=Tensor[(675), float32] */;
  %759 = reshape(%758, newshape=[3, 15, 15]) /* ty=Tensor[(3, 15, 15), float32] */;
  %760 = @func_8948(%759) /* ty=(Tensor[(3, 15, 15), float32], Tensor[(3, 15, 15), bool]) */;
  %761 = @func_13642() /* ty=(Tensor[(13, 11, 13), bool],) */;
  %762 = rsqrt(%749) /* ty=Tensor[(13, 11, 5), float64] */;
  %763 = %754.3;
  %764 = %757.0;
  %765 = %760.1;
  %766 = %761.0;
  (%762, %763, meta[relay.Constant][67] /* ty=Tensor[(2250), float64] */, %var_16004, %764, meta[relay.Constant][68] /* ty=Tensor[(225), float32] */, %765, meta[relay.Constant][69] /* ty=Tensor[(675), float32] */, %766)
}

def @func_6698(%var_6625: Tensor[(15, 11, 2), float32], %var_6635: Tensor[(288), bool], %var_6686: Tensor[(2250), float64], %var_6687: Tensor[(3, 28), int8]) -> (Tensor[(288), bool], Tensor[(15, 10, 15), float64], Tensor[(2250), float64], Tensor[(3, 28), int8], Tensor[(15, 11, 2), int64]) {
  %767 = cast(%var_6686, dtype="float64") /* ty=Tensor[(2250), float64] */;
  %768 = cast(%var_6687, dtype="int8") /* ty=Tensor[(3, 28), int8] */;
  %769 = reshape(%767, newshape=[15, 10, 15]) /* ty=Tensor[(15, 10, 15), float64] */;
  %770 = reshape(%768, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %771 = @func_952(%769, %770) /* ty=(Tensor[(15, 10, 15), float64], Tensor[(1, 6, 14), int8], int8, Tensor[(84), int8]) */;
  %772 = cast(%var_6625, dtype="float32") /* ty=Tensor[(15, 11, 2), float32] */;
  %773 = exp(%772) /* ty=Tensor[(15, 11, 2), float32] */;
  %774 = cast(%var_6635, dtype="bool") /* ty=Tensor[(288), bool] */;
  %775 = cast(%var_6635, dtype="bool") /* ty=Tensor[(288), bool] */;
  %776 = reshape(%774, newshape=[16, 9, 2]) /* ty=Tensor[(16, 9, 2), bool] */;
  %777 = reshape(%775, newshape=[16, 9, 2]) /* ty=Tensor[(16, 9, 2), bool] */;
  %778 = @func_2794(%776, %777) /* ty=(Tensor[(16, 9, 2), bool], Tensor[(2250), float64], Tensor[(84), int8], Tensor[(1, 6, 14), int8], int8, Tensor[(1, 6, 14), float64]) */;
  %779 = %778.4;
  %780 = cast(%773, dtype="int64") /* ty=Tensor[(15, 11, 2), int64] */;
  %781 = cast(%779, dtype="int64") /* ty=int64 */;
  %782 = %771.0;
  %783 = logical_xor(%780, %781) /* ty=Tensor[(15, 11, 2), int64] */;
  (%var_6635, %782, %var_6686, %var_6687, %783)
}

def @func_12881(%var_12856: Tensor[(208), float32], %var_12876: Tensor[(77), float32]) -> (Tensor[(2, 3, 14), float64], Tensor[(208), float32], Tensor[(208), float32], Tensor[(1, 6, 14), int8], int8, Tensor[(8, 12, 16), float64], Tensor[(660), float32], Tensor[(2250), uint32], Tensor[(24, 14), float32], Tensor[(77), float32]) {
  %784 = cast(%var_12856, dtype="float32") /* ty=Tensor[(208), float32] */;
  %785 = reshape(%784, newshape=[208]) /* ty=Tensor[(208), float32] */;
  %786 = @func_12080(%785) /* ty=(Tensor[(13, 4, 1), float64], Tensor[(1536), float64], Tensor[(208), float32]) */;
  %787 = cast(meta[relay.Constant][70] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %788 = @func_11732() /* ty=Tensor[(2, 3, 14), float64] */;
  %789 = cast(%788, dtype="int8") /* ty=Tensor[(2, 3, 14), int8] */;
  %790 = reshape(%787, newshape=[]) /* ty=int8 */;
  %791 = reshape(%789, newshape=[1, 6, 14]) /* ty=Tensor[(1, 6, 14), int8] */;
  %792 = @func_538(%790, %791) /* ty=(Tensor[(1, 6, 14), int8],) */;
  %793 = cast(meta[relay.Constant][71] /* ty=Tensor[(660), float32] */, dtype="float32") /* ty=Tensor[(660), float32] */;
  %794 = reshape(%793, newshape=[660]) /* ty=Tensor[(660), float32] */;
  %795 = @func_12545(%794) /* ty=(Tensor[(13, 4, 7), float64], Tensor[(15, 11, 4), float32], Tensor[(660), float32], Tensor[(8, 12, 16), float64], Tensor[(1536), float64]) */;
  %796 = cast(meta[relay.Constant][72] /* ty=Tensor[(24, 14), float32] */, dtype="float32") /* ty=Tensor[(24, 14), float32] */;
  %797 = cast(%var_12876, dtype="float32") /* ty=Tensor[(77), float32] */;
  %798 = reshape(%796, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %799 = reshape(%797, newshape=[77]) /* ty=Tensor[(77), float32] */;
  %800 = @func_12649(%798, %799) /* ty=(Tensor[(2, 3, 14), float64], Tensor[(7, 4, 12), float32], Tensor[(336), float32], Tensor[(2250), uint32], Tensor[(420), float32], Tensor[(330), float32], Tensor[(4, 72), bool], Tensor[(77), float32]) */;
  %801 = %786.2;
  %802 = %792.0;
  %803 = %795.3;
  %804 = %800.3;
  (%788, %801, %var_12856, %802, meta[relay.Constant][70] /* ty=int8 */, %803, meta[relay.Constant][71] /* ty=Tensor[(660), float32] */, %804, meta[relay.Constant][72] /* ty=Tensor[(24, 14), float32] */, %var_12876)
}

def @func_3843(%var_3826: Tensor[(12, 14, 9), float32], %var_3827: Tensor[(12, 14, 9), float32]) -> (Tensor[(12, 14, 9), float32], Tensor[(2250), float64], Tensor[(288), bool]) {
  %805 = cast(%var_3827, dtype="float32") /* ty=Tensor[(12, 14, 9), float32] */;
  %806 = shape_of(%var_3826, dtype="int32") /* ty=Tensor[(3), int32] */;
  %807 = cast(%var_3826, dtype="float32") /* ty=Tensor[(12, 14, 9), float32] */;
  %808 = dyn.reshape(%805, %806, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %809 = cast(meta[relay.Constant][73] /* ty=Tensor[(288), bool] */, dtype="bool") /* ty=Tensor[(288), bool] */;
  %810 = cast(meta[relay.Constant][73] /* ty=Tensor[(288), bool] */, dtype="bool") /* ty=Tensor[(288), bool] */;
  %811 = reshape(%809, newshape=[16, 9, 2]) /* ty=Tensor[(16, 9, 2), bool] */;
  %812 = reshape(%810, newshape=[16, 9, 2]) /* ty=Tensor[(16, 9, 2), bool] */;
  %813 = @func_2794(%811, %812) /* ty=(Tensor[(16, 9, 2), bool], Tensor[(2250), float64], Tensor[(84), int8], Tensor[(1, 6, 14), int8], int8, Tensor[(1, 6, 14), float64]) */;
  %814 = multiply(%807, %808) /* ty=Tensor[(12, 14, 9), float32] */;
  %815 = %813.1;
  (%814, %815, meta[relay.Constant][73] /* ty=Tensor[(288), bool] */)
}

def @func_11204(%var_11199: Tensor[(8, 12, 16), float64], %var_11200: Tensor[(8, 12, 16), float64]) -> Tensor[(8, 12, 16), float64] {
  %816 = cast(%var_11200, dtype="float64") /* ty=Tensor[(8, 12, 16), float64] */;
  %817 = shape_of(%var_11199, dtype="int32") /* ty=Tensor[(3), int32] */;
  %818 = cast(%var_11199, dtype="float64") /* ty=Tensor[(8, 12, 16), float64] */;
  %819 = dyn.reshape(%816, %817, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%818, %819) /* ty=Tensor[(8, 12, 16), float64] */
}

def @func_14616() -> (Tensor[(13, 11, 13), bool],) {
  %820 = @func_12837() /* ty=(Tensor[(13, 4, 7), bool], Tensor[(13, 11, 13), bool]) */;
  %821 = %820.1;
  (%821,)
}

def @func_16286() -> Tensor[(2, 3, 14), uint32] {
  %822 = @func_11732() /* ty=Tensor[(2, 3, 14), float64] */;
  %823 = cast(meta[relay.Constant][74] /* ty=Tensor[(2, 3, 14), float64] */, dtype="uint32") /* ty=Tensor[(2, 3, 14), uint32] */;
  %824 = shape_of(%822, dtype="int32") /* ty=Tensor[(3), int32] */;
  %825 = cast(%822, dtype="uint32") /* ty=Tensor[(2, 3, 14), uint32] */;
  %826 = dyn.reshape(%823, %824, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  left_shift(%825, %826) /* ty=Tensor[(2, 3, 14), uint32] */
}

def @func_14104(%var_14080: Tensor[(420), float32], %var_14081: Tensor[(1, 330), float32], %var_14100: Tensor[(36), int16], %var_14102: Tensor[(2250), float64]) -> (Tensor[(11, ?, 7), uint8], Tensor[(10, 7, 6), float32], Tensor[(420), float32], Tensor[(288), bool], Tensor[(84, 330), float32], Tensor[(84, 1), int8], Tensor[(36), int16], Tensor[(576), int16], Tensor[(2250), float64]) {
  %827 = cast(%var_14080, dtype="float32") /* ty=Tensor[(420), float32] */;
  %828 = cast(%var_14080, dtype="float32") /* ty=Tensor[(420), float32] */;
  %829 = cast(%var_14081, dtype="float32") /* ty=Tensor[(1, 330), float32] */;
  %830 = cast(meta[relay.Constant][75] /* ty=Tensor[(288), bool] */, dtype="bool") /* ty=Tensor[(288), bool] */;
  %831 = cast(meta[relay.Constant][76] /* ty=Tensor[(84, 1), int8] */, dtype="int8") /* ty=Tensor[(84, 1), int8] */;
  %832 = @func_14056() /* ty=Tensor[(11, ?, 7), uint8] */;
  %833 = cast(%832, dtype="float32") /* ty=Tensor[(11, ?, 7), float32] */;
  %834 = reshape(%827, newshape=[10, 7, 6]) /* ty=Tensor[(10, 7, 6), float32] */;
  %835 = reshape(%828, newshape=[10, 7, 6]) /* ty=Tensor[(10, 7, 6), float32] */;
  %836 = reshape(%829, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %837 = reshape(%830, newshape=[24, 12]) /* ty=Tensor[(24, 12), bool] */;
  %838 = reshape(%831, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %839 = reshape(%833, newshape=[1, 77]) /* ty=Tensor[(1, 77), float32] */;
  %840 = @func_7048(%834, %835, %836, %837, %838, %839) /* ty=(Tensor[(15, 11, 2), int64], Tensor[(330), float32], Tensor[(24, 12), bool], Tensor[(84), int8], Tensor[(2250), uint32], Tensor[(11, 1, 7), float32], Tensor[(1, 77), float32], Tensor[(10, 7, 6), float32]) */;
  %841 = cast(%var_14081, dtype="float32") /* ty=Tensor[(1, 330), float32] */;
  %842 = cast(meta[relay.Constant][76] /* ty=Tensor[(84, 1), int8] */, dtype="float32") /* ty=Tensor[(84, 1), float32] */;
  %843 = cast(%var_14100, dtype="int16") /* ty=Tensor[(36), int16] */;
  %844 = cast(meta[relay.Constant][77] /* ty=Tensor[(576), int16] */, dtype="int16") /* ty=Tensor[(576), int16] */;
  %845 = cast(%var_14102, dtype="float64") /* ty=Tensor[(2250), float64] */;
  %846 = reshape(%843, newshape=[1, 9, 4]) /* ty=Tensor[(1, 9, 4), int16] */;
  %847 = reshape(%844, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), int16] */;
  %848 = reshape(%845, newshape=[2250]) /* ty=Tensor[(2250), float64] */;
  %849 = @func_7795(%846, %847, %848) /* ty=(Tensor[(16, 9, 4), int16], Tensor[(1, 6, 14), int8], Tensor[(2250), float64], Tensor[(84, 1), int8], int8) */;
  %850 = %840.7;
  %851 = floor_divide(%841, %842) /* ty=Tensor[(84, 330), float32] */;
  %852 = %849.3;
  (%832, %850, %var_14080, meta[relay.Constant][75] /* ty=Tensor[(288), bool] */, %851, %852, %var_14100, meta[relay.Constant][77] /* ty=Tensor[(576), int16] */, %var_14102)
}

def @func_11927(%var_11918: Tensor[(15, 14, 10), int32], %var_11919: Tensor[(15, 14, 10), int32], %var_11925: Tensor[(52), float64]) -> (Tensor[(15, 14, 10), bool], Tensor[(13, 4, 1), float64], Tensor[(52), float64]) {
  %853 = cast(%var_11919, dtype="bool") /* ty=Tensor[(15, 14, 10), bool] */;
  %854 = shape_of(%var_11918, dtype="int32") /* ty=Tensor[(3), int32] */;
  %855 = cast(%var_11918, dtype="bool") /* ty=Tensor[(15, 14, 10), bool] */;
  %856 = dyn.reshape(%853, %854, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %857 = cast(%var_11925, dtype="float64") /* ty=Tensor[(52), float64] */;
  %858 = reshape(%857, newshape=[13, 4, 1]) /* ty=Tensor[(13, 4, 1), float64] */;
  %859 = less(%855, %856) /* ty=Tensor[(15, 14, 10), bool] */;
  %860 = @func_10014(%858) /* ty=Tensor[(13, 4, 1), float64] */;
  (%859, %860, %var_11925)
}

def @func_17431(%var_17405: Tensor[(11, 12, 10), float32]) -> (Tensor[(11, 12, 10), float32],) {
  %861 = cast(%var_17405, dtype="float32") /* ty=Tensor[(11, 12, 10), float32] */;
  %862 = erf(%861) /* ty=Tensor[(11, 12, 10), float32] */;
  (%862,)
}

def @func_16122(%var_16062: Tensor[(336), float32], %var_16076: Tensor[(4, 72), float32], %var_16086: Tensor[(2250), float64]) -> (Tensor[(13, 11, 13), bool], Tensor[(336), float32], Tensor[(77), float32], Tensor[(2, 3, 14), float64], Tensor[(1, 6, 14), int8], Tensor[(2250), float64], Tensor[(13, 11, 13), bool], Tensor[(4, 72), uint8]) {
  %863 = @func_13619() /* ty=(Tensor[(2, 3, 14), float64], Tensor[(3, 15, 15), float32], Tensor[(5, 135), float32]) */;
  %864 = cast(%var_16086, dtype="float64") /* ty=Tensor[(2250), float64] */;
  %865 = %863.0;
  %866 = cast(%865, dtype="int8") /* ty=Tensor[(2, 3, 14), int8] */;
  %867 = reshape(%864, newshape=[15, 10, 15]) /* ty=Tensor[(15, 10, 15), float64] */;
  %868 = reshape(%866, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %869 = @func_952(%867, %868) /* ty=(Tensor[(15, 10, 15), float64], Tensor[(1, 6, 14), int8], int8, Tensor[(84), int8]) */;
  %870 = @func_14455() /* ty=(Tensor[(13, 11, 13), bool],) */;
  %871 = cast(%var_16062, dtype="float32") /* ty=Tensor[(336), float32] */;
  %872 = cast(meta[relay.Constant][78] /* ty=Tensor[(77), float32] */, dtype="float32") /* ty=Tensor[(77), float32] */;
  %873 = reshape(%871, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %874 = reshape(%872, newshape=[77]) /* ty=Tensor[(77), float32] */;
  %875 = @func_12649(%873, %874) /* ty=(Tensor[(2, 3, 14), float64], Tensor[(7, 4, 12), float32], Tensor[(336), float32], Tensor[(2250), uint32], Tensor[(420), float32], Tensor[(330), float32], Tensor[(4, 72), bool], Tensor[(77), float32]) */;
  %876 = %875.6;
  %877 = cast(%876, dtype="float32") /* ty=Tensor[(4, 72), float32] */;
  %878 = sin(%877) /* ty=Tensor[(4, 72), float32] */;
  %879 = cast(%var_16076, dtype="int8") /* ty=Tensor[(4, 72), int8] */;
  %880 = shape_of(%878, dtype="int32") /* ty=Tensor[(2), int32] */;
  %881 = cast(%878, dtype="int8") /* ty=Tensor[(4, 72), int8] */;
  %882 = dyn.reshape(%879, %880, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %883 = logical_xor(%881, %882) /* ty=Tensor[(4, 72), int8] */;
  %884 = cast(%876, dtype="uint8") /* ty=Tensor[(4, 72), uint8] */;
  %885 = shape_of(%883, dtype="int32") /* ty=Tensor[(2), int32] */;
  %886 = cast(%883, dtype="uint8") /* ty=Tensor[(4, 72), uint8] */;
  %887 = dyn.reshape(%884, %885, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %888 = @func_15166() /* ty=Tensor[(13, 11, 13), bool] */;
  %889 = %869.1;
  %890 = %870.0;
  %891 = subtract(%886, %887) /* ty=Tensor[(4, 72), uint8] */;
  (%888, %var_16062, meta[relay.Constant][78] /* ty=Tensor[(77), float32] */, %865, %889, %var_16086, %890, %891)
}

def @func_12328() -> (Tensor[(2, 3, 14), float64], Tensor[(9, 12, 6), bool], Tensor[(648), uint8]) {
  %892 = cast(meta[relay.Constant][79] /* ty=Tensor[(648), uint8] */, dtype="uint8") /* ty=Tensor[(648), uint8] */;
  %893 = cast(meta[relay.Constant][79] /* ty=Tensor[(648), uint8] */, dtype="uint8") /* ty=Tensor[(648), uint8] */;
  %894 = reshape(%892, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), uint8] */;
  %895 = reshape(%893, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), uint8] */;
  %896 = @func_11732() /* ty=Tensor[(2, 3, 14), float64] */;
  %897 = @func_9558(%894, %895) /* ty=Tensor[(9, 12, 6), bool] */;
  (%896, %897, meta[relay.Constant][79] /* ty=Tensor[(648), uint8] */)
}

def @func_7795(%var_7758: Tensor[(1, 9, 4), int16], %var_7759: Tensor[(16, 9, 4), int16], %var_7771: Tensor[(2250), float64]) -> (Tensor[(16, 9, 4), int16], Tensor[(1, 6, 14), int8], Tensor[(2250), float64], Tensor[(84, 1), int8], int8) {
  %898 = cast(%var_7758, dtype="int16") /* ty=Tensor[(1, 9, 4), int16] */;
  %899 = cast(%var_7759, dtype="int16") /* ty=Tensor[(16, 9, 4), int16] */;
  %900 = cast(%var_7771, dtype="float64") /* ty=Tensor[(2250), float64] */;
  %901 = cast(meta[relay.Constant][80] /* ty=Tensor[(84, 1), int8] */, dtype="int8") /* ty=Tensor[(84, 1), int8] */;
  %902 = reshape(%900, newshape=[15, 10, 15]) /* ty=Tensor[(15, 10, 15), float64] */;
  %903 = reshape(%901, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %904 = @func_952(%902, %903) /* ty=(Tensor[(15, 10, 15), float64], Tensor[(1, 6, 14), int8], int8, Tensor[(84), int8]) */;
  %905 = cast(%var_7771, dtype="float64") /* ty=Tensor[(2250), float64] */;
  %906 = cast(meta[relay.Constant][80] /* ty=Tensor[(84, 1), int8] */, dtype="int8") /* ty=Tensor[(84, 1), int8] */;
  %907 = reshape(%905, newshape=[15, 10, 15]) /* ty=Tensor[(15, 10, 15), float64] */;
  %908 = reshape(%906, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %909 = @func_952(%907, %908) /* ty=(Tensor[(15, 10, 15), float64], Tensor[(1, 6, 14), int8], int8, Tensor[(84), int8]) */;
  %910 = left_shift(%898, %899) /* ty=Tensor[(16, 9, 4), int16] */;
  %911 = %904.1;
  %912 = %909.2;
  (%910, %911, %var_7771, meta[relay.Constant][80] /* ty=Tensor[(84, 1), int8] */, %912)
}

def @func_16746(%var_16659: Tensor[(11, 1, 7), float32]) -> (Tensor[(11, ?, 7), bool], Tensor[(11, 1, 7), float64], Tensor[(4, 1, 11), float32], Tensor[(44), float32]) {
  %913 = @func_13054() /* ty=(Tensor[(13, 4, 7), bool], Tensor[(11, 1, 7), float32], Tensor[(77), float32]) */;
  %914 = %913.1;
  %915 = cast(%var_16659, dtype="bool") /* ty=Tensor[(11, 1, 7), bool] */;
  %916 = shape_of(%914, dtype="int32") /* ty=Tensor[(3), int32] */;
  %917 = cast(%914, dtype="bool") /* ty=Tensor[(11, 1, 7), bool] */;
  %918 = dyn.reshape(%915, %916, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %919 = cast(%var_16659, dtype="float64") /* ty=Tensor[(11, 1, 7), float64] */;
  %920 = cast(meta[relay.Constant][81] /* ty=Tensor[(44), float32] */, dtype="float32") /* ty=Tensor[(44), float32] */;
  %921 = reshape(%920, newshape=[4, 1, 11]) /* ty=Tensor[(4, 1, 11), float32] */;
  %922 = @func_8680(%921) /* ty=(Tensor[(4, 1, 11), float32],) */;
  %923 = not_equal(%917, %918) /* ty=Tensor[(11, ?, 7), bool] */;
  %924 = asinh(%919) /* ty=Tensor[(11, 1, 7), float64] */;
  %925 = %922.0;
  (%923, %924, %925, meta[relay.Constant][81] /* ty=Tensor[(44), float32] */)
}

def @func_11483(%var_11453: Tensor[(8, 13, 2), float32]) -> (Tensor[(8, 13, 2), float32], Tensor[(8, 12, 16), float64], Tensor[(1536), float64]) {
  %926 = cast(%var_11453, dtype="float32") /* ty=Tensor[(8, 13, 2), float32] */;
  %927 = atanh(%926) /* ty=Tensor[(8, 13, 2), float32] */;
  %928 = cast(%var_11453, dtype="float32") /* ty=Tensor[(8, 13, 2), float32] */;
  %929 = shape_of(%927, dtype="int32") /* ty=Tensor[(3), int32] */;
  %930 = cast(%927, dtype="float32") /* ty=Tensor[(8, 13, 2), float32] */;
  %931 = dyn.reshape(%928, %929, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %932 = cast(meta[relay.Constant][82] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %933 = cast(meta[relay.Constant][82] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %934 = reshape(%932, newshape=[8, 12, 16]) /* ty=Tensor[(8, 12, 16), float64] */;
  %935 = reshape(%933, newshape=[8, 12, 16]) /* ty=Tensor[(8, 12, 16), float64] */;
  %936 = floor_mod(%930, %931) /* ty=Tensor[(8, 13, 2), float32] */;
  %937 = @func_11204(%934, %935) /* ty=Tensor[(8, 12, 16), float64] */;
  (%936, %937, meta[relay.Constant][82] /* ty=Tensor[(1536), float64] */)
}

def @func_15621() -> (Tensor[(648), uint8],) {
  %938 = @func_13441() /* ty=Tensor[(648), uint8] */;
  (%938,)
}

def @func_14056() -> Tensor[(11, ?, 7), uint8] {
  %939 = @func_13054() /* ty=(Tensor[(13, 4, 7), bool], Tensor[(11, 1, 7), float32], Tensor[(77), float32]) */;
  %940 = %939.1;
  %941 = cast(%940, dtype="float32") /* ty=Tensor[(11, 1, 7), float32] */;
  %942 = log10(%941) /* ty=Tensor[(11, 1, 7), float32] */;
  %943 = cast(%940, dtype="uint8") /* ty=Tensor[(11, 1, 7), uint8] */;
  %944 = shape_of(%942, dtype="int32") /* ty=Tensor[(3), int32] */;
  %945 = cast(%942, dtype="uint8") /* ty=Tensor[(11, 1, 7), uint8] */;
  %946 = dyn.reshape(%943, %944, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  bitwise_xor(%945, %946) /* ty=Tensor[(11, ?, 7), uint8] */
}

def @func_15509() -> (Tensor[(2, 3, 14), float64],) {
  %947 = @func_12189() /* ty=Tensor[(2, 3, 14), float64] */;
  (%947,)
}

def @func_16438() -> (Tensor[(13, 4, 7), bool],) {
  %948 = @func_16155() /* ty=Tensor[(13, 4, 7), bool] */;
  (%948,)
}

def @func_14714() -> Tensor[(13, 4, 7), bool] {
  %949 = @func_14435() /* ty=(Tensor[(11, ?, 7), bool], Tensor[(11, ?, 7), uint8], Tensor[(13, 4, 1), float64], Tensor[(2100), int32], Tensor[(1, 52), float64], Tensor[(13, 11, 13), bool], Tensor[(13, 4, 7), bool], Tensor[(11, ?, 7), float32]) */;
  %949.6
}

def @func_16500(%var_16489: Tensor[(16, 10, 9), float32]) -> (Tensor[(16, 10, 9), float32],) {
  %950 = cast(%var_16489, dtype="float32") /* ty=Tensor[(16, 10, 9), float32] */;
  %951 = tan(%950) /* ty=Tensor[(16, 10, 9), float32] */;
  (%951,)
}

def @func_15062() -> (Tensor[(13, 4, 7), bool], Tensor[(8, 12, 16), float64], Tensor[(1536), float64]) {
  %952 = cast(meta[relay.Constant][83] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %953 = cast(meta[relay.Constant][83] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %954 = reshape(%952, newshape=[8, 12, 16]) /* ty=Tensor[(8, 12, 16), float64] */;
  %955 = reshape(%953, newshape=[8, 12, 16]) /* ty=Tensor[(8, 12, 16), float64] */;
  %956 = @func_14933() /* ty=Tensor[(13, 4, 7), bool] */;
  %957 = @func_11204(%954, %955) /* ty=Tensor[(8, 12, 16), float64] */;
  (%956, %957, meta[relay.Constant][83] /* ty=Tensor[(1536), float64] */)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_7055(%var_7049: Tensor[(10, 7, 6), float32], %var_7050: Tensor[(10, 7, 6), float32], %var_7051: Tensor[(330), float32], %var_7052: Tensor[(24, 12), bool], %var_7053: Tensor[(84), int8], %var_7054: Tensor[(1, 77), float32]) -> (Tensor[(15, 11, 2), int64], Tensor[(330), float32], Tensor[(24, 12), bool], Tensor[(84), int8], Tensor[(2250), uint32], Tensor[(11, 1, 7), float32], Tensor[(1, 77), float32], Tensor[(10, 7, 6), float32]) {
  %26 = fn (%var_6992: Tensor[(10, 7, 6), float32], %var_6993: Tensor[(10, 7, 6), float32], %var_7002: Tensor[(330), float32], %var_7003: Tensor[(24, 12), bool], %var_7005: Tensor[(84), int8], %var_7023: Tensor[(1, 77), float32]) -> (Tensor[(15, 11, 2), int64], Tensor[(330), float32], Tensor[(24, 12), bool], Tensor[(84), int8], Tensor[(2250), uint32], Tensor[(11, 1, 7), float32], Tensor[(1, 77), float32], Tensor[(10, 7, 6), float32]) {
    %0 = cast(%var_7002, dtype="float32") /* ty=Tensor[(330), float32] */;
    %1 = cast(%var_7003, dtype="bool") /* ty=Tensor[(24, 12), bool] */;
    %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(2250), float64] */, dtype="float64") /* ty=Tensor[(2250), float64] */;
    %3 = cast(%var_7005, dtype="int8") /* ty=Tensor[(84), int8] */;
    %4 = reshape(%0, newshape=[15, 11, 2]) /* ty=Tensor[(15, 11, 2), float32] */;
    %5 = reshape(%1, newshape=[288]) /* ty=Tensor[(288), bool] */;
    %6 = reshape(%2, newshape=[2250]) /* ty=Tensor[(2250), float64] */;
    %7 = reshape(%3, newshape=[3, 28]) /* ty=Tensor[(3, 28), int8] */;
    %8 = @func_6698(%4, %5, %6, %7) /* ty=(Tensor[(288), bool], Tensor[(15, 10, 15), float64], Tensor[(2250), float64], Tensor[(3, 28), int8], Tensor[(15, 11, 2), int64]) */;
    %9 = cast(meta[relay.Constant][1] /* ty=Tensor[(2250), float64] */, dtype="uint32") /* ty=Tensor[(2250), uint32] */;
    %10 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(2250), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %11 = cast(meta[relay.Constant][0] /* ty=Tensor[(2250), float64] */, dtype="uint32") /* ty=Tensor[(2250), uint32] */;
    %12 = dyn.reshape(%9, %10, newshape=[]) /* ty=Tensor[(?), uint32] */;
    %13 = cast(%var_7023, dtype="float32") /* ty=Tensor[(1, 77), float32] */;
    %14 = reshape(%13, newshape=[11, 1, 7]) /* ty=Tensor[(11, 1, 7), float32] */;
    %15 = @func_3903(%14) /* ty=(Tensor[(11, 1, 7), float32],) */;
    %16 = cast(%var_6993, dtype="float32") /* ty=Tensor[(10, 7, 6), float32] */;
    %17 = shape_of(%var_6992, dtype="int32") /* ty=Tensor[(3), int32] */;
    %18 = cast(%var_6992, dtype="float32") /* ty=Tensor[(10, 7, 6), float32] */;
    %19 = dyn.reshape(%16, %17, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %20 = floor_divide(%18, %19) /* ty=Tensor[(10, 7, 6), float32] */;
    %21 = cast(%20, dtype="float32") /* ty=Tensor[(10, 7, 6), float32] */;
    %22 = %8.4;
    %23 = bitwise_or(%11, %12) /* ty=Tensor[(2250), uint32] */;
    %24 = %15.0;
    %25 = asin(%21) /* ty=Tensor[(10, 7, 6), float32] */;
    (%22, %var_7002, %var_7003, %var_7005, %23, %24, %var_7023, %25)
  };
  %26(%var_7049, %var_7050, %var_7051, %var_7052, %var_7053, %var_7054) /* ty=(Tensor[(15, 11, 2), int64], Tensor[(330), float32], Tensor[(24, 12), bool], Tensor[(84), int8], Tensor[(2250), uint32], Tensor[(11, 1, 7), float32], Tensor[(1, 77), float32], Tensor[(10, 7, 6), float32]) */
}

def @func_13122(%var_13113: Tensor[(1536), int16]) -> (Tensor[(13, 11, 13), bool], Tensor[(3, 3, 3), float64], Tensor[(1536), int16]) {
  %27 = @func_12837() /* ty=(Tensor[(13, 4, 7), bool], Tensor[(13, 11, 13), bool]) */;
  %28 = cast(%var_13113, dtype="int16") /* ty=Tensor[(1536), int16] */;
  %29 = cast(%var_13113, dtype="int16") /* ty=Tensor[(1536), int16] */;
  %30 = reshape(%28, newshape=[12, 16, 8]) /* ty=Tensor[(12, 16, 8), int16] */;
  %31 = reshape(%29, newshape=[12, 16, 8]) /* ty=Tensor[(12, 16, 8), int16] */;
  %32 = @func_9837(%30, %31) /* ty=(Tensor[(12, 16, 8), float32], Tensor[(3, 3, 3), float64], Tensor[(27), float64]) */;
  %33 = %27.1;
  %34 = %32.1;
  (%33, %34, %var_13113)
}

def @func_15062() -> (Tensor[(13, 4, 7), bool], Tensor[(8, 12, 16), float64], Tensor[(1536), float64]) {
  %35 = cast(meta[relay.Constant][2] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %36 = cast(meta[relay.Constant][2] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %37 = reshape(%35, newshape=[8, 12, 16]) /* ty=Tensor[(8, 12, 16), float64] */;
  %38 = reshape(%36, newshape=[8, 12, 16]) /* ty=Tensor[(8, 12, 16), float64] */;
  %39 = @func_14933() /* ty=Tensor[(13, 4, 7), bool] */;
  %40 = @func_11204(%37, %38) /* ty=Tensor[(8, 12, 16), float64] */;
  (%39, %40, meta[relay.Constant][2] /* ty=Tensor[(1536), float64] */)
}

def @func_16440() -> (Tensor[(13, 4, 7), bool],) {
  @func_16438() /* ty=(Tensor[(13, 4, 7), bool],) */
}

def @func_14572() -> Tensor[(13, 4, 7), bool] {
  %41 = @func_14435() /* ty=(Tensor[(11, ?, 7), bool], Tensor[(11, ?, 7), uint8], Tensor[(13, 4, 1), float64], Tensor[(2100), int32], Tensor[(1, 52), float64], Tensor[(13, 11, 13), bool], Tensor[(13, 4, 7), bool], Tensor[(11, ?, 7), float32]) */;
  %41.6
}

def @func_3110(%var_3107: Tensor[(3, 3, 3), float64]) -> (Tensor[(3, 3, 3), float64],) {
  %42 = cast(%var_3107, dtype="float64") /* ty=Tensor[(3, 3, 3), float64] */;
  %43 = asin(%42) /* ty=Tensor[(3, 3, 3), float64] */;
  (%43,)
}

def @func_14617() -> (Tensor[(13, 11, 13), bool],) {
  %46 = fn () -> (Tensor[(13, 11, 13), bool],) {
    %44 = @func_12837() /* ty=(Tensor[(13, 4, 7), bool], Tensor[(13, 11, 13), bool]) */;
    %45 = %44.1;
    (%45,)
  };
  %46() /* ty=(Tensor[(13, 11, 13), bool],) */
}

def @func_8951(%var_8949: Tensor[(3, 15, 15), float32]) -> (Tensor[(3, 15, 15), float32], Tensor[(3, 15, 15), bool]) {
  @func_8948(%var_8949) /* ty=(Tensor[(3, 15, 15), float32], Tensor[(3, 15, 15), bool]) */
}

def @func_12748() -> Tensor[(13, 11, 13), float32] {
  @func_12746() /* ty=Tensor[(13, 11, 13), float32] */
}

def @func_14716() -> Tensor[(13, 4, 7), bool] {
  @func_14714() /* ty=Tensor[(13, 4, 7), bool] */
}

def @func_12954(%var_12936: Tensor[(27), float64], %var_12937: Tensor[(72, 4), bool]) -> (Tensor[(13, 11, 13), bool], Tensor[(27), float64], Tensor[(27), float64], Tensor[(72, 4), bool], Tensor[(2250), float64], Tensor[(52), float64], Tensor[(4, 1, 11), float32], Tensor[(44), float32]) {
  %47 = @func_12837() /* ty=(Tensor[(13, 4, 7), bool], Tensor[(13, 11, 13), bool]) */;
  %48 = cast(%var_12936, dtype="float64") /* ty=Tensor[(27), float64] */;
  %49 = cast(%var_12937, dtype="bool") /* ty=Tensor[(72, 4), bool] */;
  %50 = cast(meta[relay.Constant][3] /* ty=Tensor[(2250), float64] */, dtype="float64") /* ty=Tensor[(2250), float64] */;
  %51 = cast(meta[relay.Constant][4] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
  %52 = reshape(%48, newshape=[27]) /* ty=Tensor[(27), float64] */;
  %53 = reshape(%49, newshape=[288]) /* ty=Tensor[(288), bool] */;
  %54 = reshape(%50, newshape=[2250]) /* ty=Tensor[(2250), float64] */;
  %55 = reshape(%51, newshape=[52]) /* ty=Tensor[(52), float64] */;
  %56 = @func_12268(%52, %53, %54, %55) /* ty=(Tensor[(2, 3, 14), float64], Tensor[(3, 3, 3), float64], Tensor[(27), float64], Tensor[(288), bool], Tensor[(330), float32], Tensor[(288), bool], Tensor[(2250), float64], Tensor[(13, 4, 1), float64], Tensor[(52), float64]) */;
  %57 = cast(meta[relay.Constant][5] /* ty=Tensor[(44), float32] */, dtype="float32") /* ty=Tensor[(44), float32] */;
  %58 = reshape(%57, newshape=[4, 1, 11]) /* ty=Tensor[(4, 1, 11), float32] */;
  %59 = @func_8680(%58) /* ty=(Tensor[(4, 1, 11), float32],) */;
  %60 = %47.1;
  %61 = %56.2;
  %62 = %59.0;
  (%60, %61, %var_12936, %var_12937, meta[relay.Constant][3] /* ty=Tensor[(2250), float64] */, meta[relay.Constant][4] /* ty=Tensor[(52), float64] */, %62, meta[relay.Constant][5] /* ty=Tensor[(44), float32] */)
}

def @func_15149(%var_15078: Tensor[(288), bool], %var_15079: Tensor[(2250), float64], %var_15106: Tensor[(1536), float64]) -> (Tensor[(13, 11, 13), bool], Tensor[(288), bool], Tensor[(288), bool], Tensor[(52), float64], Tensor[(1536), float64], Tensor[(84), float64], Tensor[(330), float32], Tensor[(27, 2250), bool], Tensor[(27, 1536), bool]) {
  %63 = @func_12837() /* ty=(Tensor[(13, 4, 7), bool], Tensor[(13, 11, 13), bool]) */;
  %64 = cast(meta[relay.Constant][6] /* ty=Tensor[(27, 1), float64] */, dtype="float64") /* ty=Tensor[(27, 1), float64] */;
  %65 = cast(%var_15078, dtype="bool") /* ty=Tensor[(288), bool] */;
  %66 = cast(%var_15079, dtype="float64") /* ty=Tensor[(2250), float64] */;
  %67 = cast(meta[relay.Constant][7] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
  %68 = reshape(%64, newshape=[27]) /* ty=Tensor[(27), float64] */;
  %69 = reshape(%65, newshape=[288]) /* ty=Tensor[(288), bool] */;
  %70 = reshape(%66, newshape=[2250]) /* ty=Tensor[(2250), float64] */;
  %71 = reshape(%67, newshape=[52]) /* ty=Tensor[(52), float64] */;
  %72 = @func_12268(%68, %69, %70, %71) /* ty=(Tensor[(2, 3, 14), float64], Tensor[(3, 3, 3), float64], Tensor[(27), float64], Tensor[(288), bool], Tensor[(330), float32], Tensor[(288), bool], Tensor[(2250), float64], Tensor[(13, 4, 1), float64], Tensor[(52), float64]) */;
  %73 = cast(meta[relay.Constant][8] /* ty=Tensor[(84), float64] */, dtype="float64") /* ty=Tensor[(84), float64] */;
  %74 = cast(%var_15106, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %75 = cast(meta[relay.Constant][9] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %76 = cast(%var_15079, dtype="float64") /* ty=Tensor[(2250), float64] */;
  %77 = cast(%var_15079, dtype="float64") /* ty=Tensor[(2250), float64] */;
  %78 = cast(%var_15079, dtype="int16") /* ty=Tensor[(2250), int16] */;
  %79 = reshape(%73, newshape=[2, 3, 14]) /* ty=Tensor[(2, 3, 14), float64] */;
  %80 = reshape(%74, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %81 = reshape(%75, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %82 = reshape(%76, newshape=[1125, 2]) /* ty=Tensor[(1125, 2), float64] */;
  %83 = reshape(%77, newshape=[1125, 2]) /* ty=Tensor[(1125, 2), float64] */;
  %84 = reshape(%78, newshape=[1125, 2]) /* ty=Tensor[(1125, 2), int16] */;
  %85 = @func_12458(%79, %80, %81, %82, %83, %84) /* ty=(Tensor[(2, 3, 14), int32], Tensor[(2, 3, 14), float64], Tensor[(8, 12, 16), float64], Tensor[(1536), float64], Tensor[(15, 10, 15), float64], Tensor[(330), float32], Tensor[(288), bool], Tensor[(2, 3, 14), uint64], Tensor[(2, 3, 14), float64], Tensor[(1125, 2), bool], Tensor[(648), uint8], Tensor[(2, 10, 15), bool], Tensor[(300), uint16]) */;
  %86 = cast(%var_15079, dtype="uint16") /* ty=Tensor[(2250), uint16] */;
  %87 = cast(meta[relay.Constant][6] /* ty=Tensor[(27, 1), float64] */, dtype="uint16") /* ty=Tensor[(27, 1), uint16] */;
  %88 = logical_xor(%86, %87) /* ty=Tensor[(27, 2250), uint16] */;
  %89 = cast(%88, dtype="bool") /* ty=Tensor[(27, 2250), bool] */;
  %90 = cast(meta[relay.Constant][6] /* ty=Tensor[(27, 1), float64] */, dtype="bool") /* ty=Tensor[(27, 1), bool] */;
  %91 = cast(meta[relay.Constant][6] /* ty=Tensor[(27, 1), float64] */, dtype="float64") /* ty=Tensor[(27, 1), float64] */;
  %92 = cosh(%91) /* ty=Tensor[(27, 1), float64] */;
  %93 = cast(%92, dtype="bool") /* ty=Tensor[(27, 1), bool] */;
  %94 = cast(%var_15106, dtype="bool") /* ty=Tensor[(1536), bool] */;
  %95 = %63.1;
  %96 = %72.5;
  %97 = %85.3;
  %98 = less_equal(%89, %90) /* ty=Tensor[(27, 2250), bool] */;
  %99 = less_equal(%93, %94) /* ty=Tensor[(27, 1536), bool] */;
  (%95, %96, %var_15078, meta[relay.Constant][7] /* ty=Tensor[(52), float64] */, %97, meta[relay.Constant][8] /* ty=Tensor[(84), float64] */, meta[relay.Constant][9] /* ty=Tensor[(330), float32] */, %98, %99)
}

def @func_15623() -> (Tensor[(648), uint8],) {
  @func_15621() /* ty=(Tensor[(648), uint8],) */
}

def @func_16503(%var_16501: Tensor[(16, 10, 9), float32]) -> (Tensor[(16, 10, 9), float32],) {
  @func_16500(%var_16501) /* ty=(Tensor[(16, 10, 9), float32],) */
}

def @func_15509() -> (Tensor[(2, 3, 14), float64],) {
  %100 = @func_12189() /* ty=Tensor[(2, 3, 14), float64] */;
  (%100,)
}

def @func_12548(%var_12546: Tensor[(660), float32]) -> (Tensor[(13, 4, 7), float64], Tensor[(15, 11, 4), float32], Tensor[(660), float32], Tensor[(8, 12, 16), float64], Tensor[(1536), float64]) {
  @func_12545(%var_12546) /* ty=(Tensor[(13, 4, 7), float64], Tensor[(15, 11, 4), float32], Tensor[(660), float32], Tensor[(8, 12, 16), float64], Tensor[(1536), float64]) */
}

def @func_17705(%var_17703: Tensor[(3, 16, 8), uint64], %var_17704: Tensor[(3, 16, 8), uint64]) -> Tensor[(3, 16, 8), bool] {
  %105 = fn (%var_17693: Tensor[(3, 16, 8), uint64], %var_17694: Tensor[(3, 16, 8), uint64]) -> Tensor[(3, 16, 8), bool] {
    %101 = cast(%var_17694, dtype="bool") /* ty=Tensor[(3, 16, 8), bool] */;
    %102 = shape_of(%var_17693, dtype="int32") /* ty=Tensor[(3), int32] */;
    %103 = cast(%var_17693, dtype="bool") /* ty=Tensor[(3, 16, 8), bool] */;
    %104 = dyn.reshape(%101, %102, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%103, %104) /* ty=Tensor[(3, 16, 8), bool] */
  };
  %105(%var_17703, %var_17704) /* ty=Tensor[(3, 16, 8), bool] */
}

def @func_16500(%var_16489: Tensor[(16, 10, 9), float32]) -> (Tensor[(16, 10, 9), float32],) {
  %106 = cast(%var_16489, dtype="float32") /* ty=Tensor[(16, 10, 9), float32] */;
  %107 = tan(%106) /* ty=Tensor[(16, 10, 9), float32] */;
  (%107,)
}

def @func_16961() -> (Tensor[(13, 11, 13), float32],) {
  %109 = fn () -> (Tensor[(13, 11, 13), float32],) {
    %108 = @func_12746() /* ty=Tensor[(13, 11, 13), float32] */;
    (%108,)
  };
  %109() /* ty=(Tensor[(13, 11, 13), float32],) */
}

def @func_14876() -> (Tensor[(11, ?, 7), uint8], Tensor[(15, 11, 4), float32], Tensor[(660), float32]) {
  %110 = cast(meta[relay.Constant][10] /* ty=Tensor[(660), float32] */, dtype="float32") /* ty=Tensor[(660), float32] */;
  %111 = reshape(%110, newshape=[15, 11, 4]) /* ty=Tensor[(15, 11, 4), float32] */;
  %112 = @func_3020(%111) /* ty=(Tensor[(15, 11, 4), float32],) */;
  %113 = @func_14056() /* ty=Tensor[(11, ?, 7), uint8] */;
  %114 = %112.0;
  (%113, %114, meta[relay.Constant][10] /* ty=Tensor[(660), float32] */)
}

def @func_17433(%var_17432: Tensor[(11, 12, 10), float32]) -> (Tensor[(11, 12, 10), float32],) {
  %117 = fn (%var_17405: Tensor[(11, 12, 10), float32]) -> (Tensor[(11, 12, 10), float32],) {
    %115 = cast(%var_17405, dtype="float32") /* ty=Tensor[(11, 12, 10), float32] */;
    %116 = erf(%115) /* ty=Tensor[(11, 12, 10), float32] */;
    (%116,)
  };
  %117(%var_17432) /* ty=(Tensor[(11, 12, 10), float32],) */
}

def @func_13443() -> Tensor[(648), uint8] {
  @func_13441() /* ty=Tensor[(648), uint8] */
}

def @func_17307() -> Tensor[(2, 3, 14), uint32] {
  %118 = fn () -> Tensor[(2, 3, 14), uint32] {
    @func_16795() /* ty=Tensor[(2, 3, 14), uint32] */
  };
  %118() /* ty=Tensor[(2, 3, 14), uint32] */
}

def @func_542(%var_540: int8, %var_541: Tensor[(1, 6, 14), int8]) -> (Tensor[(1, 6, 14), int8],) {
  @func_538(%var_540, %var_541) /* ty=(Tensor[(1, 6, 14), int8],) */
}

def @func_1877(%var_1874: Tensor[(13, 1, 2), float32], %var_1875: Tensor[(13, 14, 2), float32], %var_1876: Tensor[(84), int8]) -> (Tensor[(13, 14, 2), float32], Tensor[(1, 6, 14), int8], int8, Tensor[(84), int8]) {
  %128 = fn (%var_1852: Tensor[(13, 1, 2), float32], %var_1853: Tensor[(13, 14, 2), float32], %var_1866: Tensor[(84), int8]) -> (Tensor[(13, 14, 2), float32], Tensor[(1, 6, 14), int8], int8, Tensor[(84), int8]) {
    %119 = cast(%var_1852, dtype="float32") /* ty=Tensor[(13, 1, 2), float32] */;
    %120 = cast(%var_1853, dtype="float32") /* ty=Tensor[(13, 14, 2), float32] */;
    %121 = cast(meta[relay.Constant][11] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %122 = cast(%var_1866, dtype="int8") /* ty=Tensor[(84), int8] */;
    %123 = reshape(%121, newshape=[]) /* ty=int8 */;
    %124 = reshape(%122, newshape=[1, 6, 14]) /* ty=Tensor[(1, 6, 14), int8] */;
    %125 = @func_538(%123, %124) /* ty=(Tensor[(1, 6, 14), int8],) */;
    %126 = divide(%119, %120) /* ty=Tensor[(13, 14, 2), float32] */;
    %127 = %125.0;
    (%126, %127, meta[relay.Constant][11] /* ty=int8 */, %var_1866)
  };
  %128(%var_1874, %var_1875, %var_1876) /* ty=(Tensor[(13, 14, 2), float32], Tensor[(1, 6, 14), int8], int8, Tensor[(84), int8]) */
}

def @func_9840(%var_9838: Tensor[(12, 16, 8), int16], %var_9839: Tensor[(12, 16, 8), int16]) -> (Tensor[(12, 16, 8), float32], Tensor[(3, 3, 3), float64], Tensor[(27), float64]) {
  %143 = fn (%var_9755: Tensor[(12, 16, 8), int16], %var_9756: Tensor[(12, 16, 8), int16]) -> (Tensor[(12, 16, 8), float32], Tensor[(3, 3, 3), float64], Tensor[(27), float64]) {
    %129 = cast(%var_9756, dtype="int16") /* ty=Tensor[(12, 16, 8), int16] */;
    %130 = shape_of(%var_9755, dtype="int32") /* ty=Tensor[(3), int32] */;
    %131 = cast(%var_9755, dtype="int16") /* ty=Tensor[(12, 16, 8), int16] */;
    %132 = dyn.reshape(%129, %130, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %133 = minimum(%131, %132) /* ty=Tensor[(12, 16, 8), int16] */;
    %134 = cast(%var_9755, dtype="float32") /* ty=Tensor[(12, 16, 8), float32] */;
    %135 = shape_of(%133, dtype="int32") /* ty=Tensor[(3), int32] */;
    %136 = cast(%133, dtype="float32") /* ty=Tensor[(12, 16, 8), float32] */;
    %137 = dyn.reshape(%134, %135, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %138 = cast(meta[relay.Constant][12] /* ty=Tensor[(27), float64] */, dtype="float64") /* ty=Tensor[(27), float64] */;
    %139 = reshape(%138, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), float64] */;
    %140 = @func_3110(%139) /* ty=(Tensor[(3, 3, 3), float64],) */;
    %141 = power(%136, %137) /* ty=Tensor[(12, 16, 8), float32] */;
    %142 = %140.0;
    (%141, %142, meta[relay.Constant][12] /* ty=Tensor[(27), float64] */)
  };
  %143(%var_9838, %var_9839) /* ty=(Tensor[(12, 16, 8), float32], Tensor[(3, 3, 3), float64], Tensor[(27), float64]) */
}

def @func_17188() -> Tensor[(13, 4, 1), float64] {
  @func_12059() /* ty=Tensor[(13, 4, 1), float64] */
}

def @func_17382() -> (Tensor[(2, 3, 14), float64],) {
  %144 = @func_16536() /* ty=Tensor[(2, 3, 14), float64] */;
  (%144,)
}

def @func_13620() -> (Tensor[(2, 3, 14), float64], Tensor[(3, 15, 15), float32], Tensor[(5, 135), float32]) {
  %151 = fn () -> (Tensor[(2, 3, 14), float64], Tensor[(3, 15, 15), float32], Tensor[(5, 135), float32]) {
    %145 = @func_12028() /* ty=(Tensor[(2, 3, 14), float64], Tensor[(13, 4, 1), float64], Tensor[(52), float64]) */;
    %146 = cast(meta[relay.Constant][13] /* ty=Tensor[(5, 135), float32] */, dtype="float32") /* ty=Tensor[(5, 135), float32] */;
    %147 = reshape(%146, newshape=[3, 15, 15]) /* ty=Tensor[(3, 15, 15), float32] */;
    %148 = @func_8948(%147) /* ty=(Tensor[(3, 15, 15), float32], Tensor[(3, 15, 15), bool]) */;
    %149 = %145.0;
    %150 = %148.0;
    (%149, %150, meta[relay.Constant][13] /* ty=Tensor[(5, 135), float32] */)
  };
  %151() /* ty=(Tensor[(2, 3, 14), float64], Tensor[(3, 15, 15), float32], Tensor[(5, 135), float32]) */
}

def @func_16901() -> (Tensor[(13, 11, 13), bool], Tensor[(13, 4, 7), float64]) {
  %152 = @func_16637() /* ty=(Tensor[(13, 11, 13), bool], Tensor[(660), float32], Tensor[(660), float32]) */;
  %153 = @func_12119() /* ty=(Tensor[(13, 4, 7), bool],) */;
  %154 = %153.0;
  %155 = cast(%154, dtype="float64") /* ty=Tensor[(13, 4, 7), float64] */;
  %156 = %152.0;
  %157 = acos(%155) /* ty=Tensor[(13, 4, 7), float64] */;
  (%156, %157)
}

def @func_17077(%var_17072: Tensor[(330), float32], %var_17073: Tensor[(288), bool], %var_17074: Tensor[(2250), float64], %var_17075: Tensor[(675), float32], %var_17076: Tensor[(75), float32]) -> (Tensor[(2, 3, 14), float64], Tensor[(15, 11, 2), int64], Tensor[(330), float32], Tensor[(288), bool], Tensor[(2250), float64], Tensor[(3, 15, 15), uint16], Tensor[(675), float32], Tensor[(13, 11, 13), bool], Tensor[(13, 4, 7), bool], Tensor[(13, 11, 13), bool], Tensor[(75), float32], Tensor[(225), float32]) {
  %182 = fn (%var_17001: Tensor[(330), float32], %var_17002: Tensor[(288), bool], %var_17003: Tensor[(2250), float64], %var_17014: Tensor[(675), float32], %var_17059: Tensor[(75), float32]) -> (Tensor[(2, 3, 14), float64], Tensor[(15, 11, 2), int64], Tensor[(330), float32], Tensor[(288), bool], Tensor[(2250), float64], Tensor[(3, 15, 15), uint16], Tensor[(675), float32], Tensor[(13, 11, 13), bool], Tensor[(13, 4, 7), bool], Tensor[(13, 11, 13), bool], Tensor[(75), float32], Tensor[(225), float32]) {
    %158 = @func_14668() /* ty=(Tensor[(2, 3, 14), float64],) */;
    %159 = cast(%var_17001, dtype="float32") /* ty=Tensor[(330), float32] */;
    %160 = cast(%var_17002, dtype="bool") /* ty=Tensor[(288), bool] */;
    %161 = cast(%var_17003, dtype="float64") /* ty=Tensor[(2250), float64] */;
    %162 = %158.0;
    %163 = cast(%162, dtype="int8") /* ty=Tensor[(2, 3, 14), int8] */;
    %164 = reshape(%159, newshape=[15, 11, 2]) /* ty=Tensor[(15, 11, 2), float32] */;
    %165 = reshape(%160, newshape=[288]) /* ty=Tensor[(288), bool] */;
    %166 = reshape(%161, newshape=[2250]) /* ty=Tensor[(2250), float64] */;
    %167 = reshape(%163, newshape=[3, 28]) /* ty=Tensor[(3, 28), int8] */;
    %168 = @func_6698(%164, %165, %166, %167) /* ty=(Tensor[(288), bool], Tensor[(15, 10, 15), float64], Tensor[(2250), float64], Tensor[(3, 28), int8], Tensor[(15, 11, 2), int64]) */;
    %169 = cast(%var_17014, dtype="float32") /* ty=Tensor[(675), float32] */;
    %170 = reshape(%169, newshape=[3, 15, 15]) /* ty=Tensor[(3, 15, 15), float32] */;
    %171 = @func_13894(%170) /* ty=(Tensor[(3, 15, 15), float32], Tensor[(3, 15, 15), uint16]) */;
    %172 = cast(%var_17059, dtype="float32") /* ty=Tensor[(75), float32] */;
    %173 = cast(meta[relay.Constant][14] /* ty=Tensor[(225), float32] */, dtype="float32") /* ty=Tensor[(225), float32] */;
    %174 = reshape(%172, newshape=[15, 5, 1]) /* ty=Tensor[(15, 5, 1), float32] */;
    %175 = reshape(%173, newshape=[15, 5, 3]) /* ty=Tensor[(15, 5, 3), float32] */;
    %176 = @func_15753(%174, %175) /* ty=(Tensor[(364), float32], Tensor[(24, 14), float32], Tensor[(15, 5, 3), int64], Tensor[(13, 11, 13), bool], Tensor[(15, 5, 84), float64]) */;
    %177 = %168.4;
    %178 = %171.1;
    %179 = @func_15166() /* ty=Tensor[(13, 11, 13), bool] */;
    %180 = @func_14714() /* ty=Tensor[(13, 4, 7), bool] */;
    %181 = %176.3;
    (%162, %177, %var_17001, %var_17002, %var_17003, %178, %var_17014, %179, %180, %181, %var_17059, meta[relay.Constant][14] /* ty=Tensor[(225), float32] */)
  };
  %182(%var_17072, %var_17073, %var_17074, %var_17075, %var_17076) /* ty=(Tensor[(2, 3, 14), float64], Tensor[(15, 11, 2), int64], Tensor[(330), float32], Tensor[(288), bool], Tensor[(2250), float64], Tensor[(3, 15, 15), uint16], Tensor[(675), float32], Tensor[(13, 11, 13), bool], Tensor[(13, 4, 7), bool], Tensor[(13, 11, 13), bool], Tensor[(75), float32], Tensor[(225), float32]) */
}

def @func_16748(%var_16747: Tensor[(11, 1, 7), float32]) -> (Tensor[(11, ?, 7), bool], Tensor[(11, 1, 7), float64], Tensor[(4, 1, 11), float32], Tensor[(44), float32]) {
  %196 = fn (%var_16659: Tensor[(11, 1, 7), float32]) -> (Tensor[(11, ?, 7), bool], Tensor[(11, 1, 7), float64], Tensor[(4, 1, 11), float32], Tensor[(44), float32]) {
    %183 = @func_13054() /* ty=(Tensor[(13, 4, 7), bool], Tensor[(11, 1, 7), float32], Tensor[(77), float32]) */;
    %184 = %183.1;
    %185 = cast(%var_16659, dtype="bool") /* ty=Tensor[(11, 1, 7), bool] */;
    %186 = shape_of(%184, dtype="int32") /* ty=Tensor[(3), int32] */;
    %187 = cast(%184, dtype="bool") /* ty=Tensor[(11, 1, 7), bool] */;
    %188 = dyn.reshape(%185, %186, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %189 = cast(%var_16659, dtype="float64") /* ty=Tensor[(11, 1, 7), float64] */;
    %190 = cast(meta[relay.Constant][15] /* ty=Tensor[(44), float32] */, dtype="float32") /* ty=Tensor[(44), float32] */;
    %191 = reshape(%190, newshape=[4, 1, 11]) /* ty=Tensor[(4, 1, 11), float32] */;
    %192 = @func_8680(%191) /* ty=(Tensor[(4, 1, 11), float32],) */;
    %193 = not_equal(%187, %188) /* ty=Tensor[(11, ?, 7), bool] */;
    %194 = asinh(%189) /* ty=Tensor[(11, 1, 7), float64] */;
    %195 = %192.0;
    (%193, %194, %195, meta[relay.Constant][15] /* ty=Tensor[(44), float32] */)
  };
  %196(%var_16747) /* ty=(Tensor[(11, ?, 7), bool], Tensor[(11, 1, 7), float64], Tensor[(4, 1, 11), float32], Tensor[(44), float32]) */
}

def @func_14768() -> (Tensor[(13, 4, 1), float64], Tensor[(1, 6, 14), int8], Tensor[(15, 150), float64], Tensor[(84), int8]) {
  %204 = fn () -> (Tensor[(13, 4, 1), float64], Tensor[(1, 6, 14), int8], Tensor[(15, 150), float64], Tensor[(84), int8]) {
    %197 = cast(meta[relay.Constant][16] /* ty=Tensor[(15, 150), float64] */, dtype="float64") /* ty=Tensor[(15, 150), float64] */;
    %198 = cast(meta[relay.Constant][17] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
    %199 = reshape(%197, newshape=[15, 10, 15]) /* ty=Tensor[(15, 10, 15), float64] */;
    %200 = reshape(%198, newshape=[84]) /* ty=Tensor[(84), int8] */;
    %201 = @func_952(%199, %200) /* ty=(Tensor[(15, 10, 15), float64], Tensor[(1, 6, 14), int8], int8, Tensor[(84), int8]) */;
    %202 = @func_14277() /* ty=Tensor[(13, 4, 1), float64] */;
    %203 = %201.1;
    (%202, %203, meta[relay.Constant][16] /* ty=Tensor[(15, 150), float64] */, meta[relay.Constant][17] /* ty=Tensor[(84), int8] */)
  };
  %204() /* ty=(Tensor[(13, 4, 1), float64], Tensor[(1, 6, 14), int8], Tensor[(15, 150), float64], Tensor[(84), int8]) */
}

def @func_11927(%var_11918: Tensor[(15, 14, 10), int32], %var_11919: Tensor[(15, 14, 10), int32], %var_11925: Tensor[(52), float64]) -> (Tensor[(15, 14, 10), bool], Tensor[(13, 4, 1), float64], Tensor[(52), float64]) {
  %205 = cast(%var_11919, dtype="bool") /* ty=Tensor[(15, 14, 10), bool] */;
  %206 = shape_of(%var_11918, dtype="int32") /* ty=Tensor[(3), int32] */;
  %207 = cast(%var_11918, dtype="bool") /* ty=Tensor[(15, 14, 10), bool] */;
  %208 = dyn.reshape(%205, %206, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %209 = cast(%var_11925, dtype="float64") /* ty=Tensor[(52), float64] */;
  %210 = reshape(%209, newshape=[13, 4, 1]) /* ty=Tensor[(13, 4, 1), float64] */;
  %211 = less(%207, %208) /* ty=Tensor[(15, 14, 10), bool] */;
  %212 = @func_10014(%210) /* ty=Tensor[(13, 4, 1), float64] */;
  (%211, %212, %var_11925)
}

def @func_8096(%var_8094: Tensor[(2, 10, 15), uint16]) -> (Tensor[(2, 10, 15), bool],) {
  @func_8093(%var_8094) /* ty=(Tensor[(2, 10, 15), bool],) */
}

def @func_8948(%var_8923: Tensor[(3, 15, 15), float32]) -> (Tensor[(3, 15, 15), float32], Tensor[(3, 15, 15), bool]) {
  %213 = cast(%var_8923, dtype="float32") /* ty=Tensor[(3, 15, 15), float32] */;
  %214 = cos(%213) /* ty=Tensor[(3, 15, 15), float32] */;
  %215 = cast(%214, dtype="float32") /* ty=Tensor[(3, 15, 15), float32] */;
  %216 = cast(%214, dtype="bool") /* ty=Tensor[(3, 15, 15), bool] */;
  %217 = shape_of(%var_8923, dtype="int32") /* ty=Tensor[(3), int32] */;
  %218 = cast(%var_8923, dtype="bool") /* ty=Tensor[(3, 15, 15), bool] */;
  %219 = dyn.reshape(%216, %217, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %220 = atan(%215) /* ty=Tensor[(3, 15, 15), float32] */;
  %221 = logical_or(%218, %219) /* ty=Tensor[(3, 15, 15), bool] */;
  (%220, %221)
}

def @func_15064() -> (Tensor[(13, 4, 7), bool], Tensor[(8, 12, 16), float64], Tensor[(1536), float64]) {
  @func_15062() /* ty=(Tensor[(13, 4, 7), bool], Tensor[(8, 12, 16), float64], Tensor[(1536), float64]) */
}

def @func_538(%var_527: int8, %var_528: Tensor[(1, 6, 14), int8]) -> (Tensor[(1, 6, 14), int8],) {
  %222 = cast(%var_527, dtype="int8") /* ty=int8 */;
  %223 = cast(%var_528, dtype="int8") /* ty=Tensor[(1, 6, 14), int8] */;
  %224 = add(%222, %223) /* ty=Tensor[(1, 6, 14), int8] */;
  (%224,)
}

def @func_11485(%var_11484: Tensor[(8, 13, 2), float32]) -> (Tensor[(8, 13, 2), float32], Tensor[(8, 12, 16), float64], Tensor[(1536), float64]) {
  %237 = fn (%var_11453: Tensor[(8, 13, 2), float32]) -> (Tensor[(8, 13, 2), float32], Tensor[(8, 12, 16), float64], Tensor[(1536), float64]) {
    %225 = cast(%var_11453, dtype="float32") /* ty=Tensor[(8, 13, 2), float32] */;
    %226 = atanh(%225) /* ty=Tensor[(8, 13, 2), float32] */;
    %227 = cast(%var_11453, dtype="float32") /* ty=Tensor[(8, 13, 2), float32] */;
    %228 = shape_of(%226, dtype="int32") /* ty=Tensor[(3), int32] */;
    %229 = cast(%226, dtype="float32") /* ty=Tensor[(8, 13, 2), float32] */;
    %230 = dyn.reshape(%227, %228, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %231 = cast(meta[relay.Constant][18] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
    %232 = cast(meta[relay.Constant][18] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
    %233 = reshape(%231, newshape=[8, 12, 16]) /* ty=Tensor[(8, 12, 16), float64] */;
    %234 = reshape(%232, newshape=[8, 12, 16]) /* ty=Tensor[(8, 12, 16), float64] */;
    %235 = floor_mod(%229, %230) /* ty=Tensor[(8, 13, 2), float32] */;
    %236 = @func_11204(%233, %234) /* ty=Tensor[(8, 12, 16), float64] */;
    (%235, %236, meta[relay.Constant][18] /* ty=Tensor[(1536), float64] */)
  };
  %237(%var_11484) /* ty=(Tensor[(8, 13, 2), float32], Tensor[(8, 12, 16), float64], Tensor[(1536), float64]) */
}

def @func_15167() -> Tensor[(13, 11, 13), bool] {
  %238 = fn () -> Tensor[(13, 11, 13), bool] {
    @func_14631() /* ty=Tensor[(13, 11, 13), bool] */
  };
  %238() /* ty=Tensor[(13, 11, 13), bool] */
}

def @func_7398(%var_7397: Tensor[(12, 14, 8), float64]) -> (Tensor[(12, 14, 8), float64],) {
  %241 = fn (%var_7391: Tensor[(12, 14, 8), float64]) -> (Tensor[(12, 14, 8), float64],) {
    %239 = cast(%var_7391, dtype="float64") /* ty=Tensor[(12, 14, 8), float64] */;
    %240 = atan(%239) /* ty=Tensor[(12, 14, 8), float64] */;
    (%240,)
  };
  %241(%var_7397) /* ty=(Tensor[(12, 14, 8), float64],) */
}

def @func_12458(%var_12362: Tensor[(2, 3, 14), float64], %var_12378: Tensor[(1536), float64], %var_12381: Tensor[(330), float32], %var_12383: Tensor[(1125, 2), float64], %var_12424: Tensor[(1125, 2), float64], %var_12431: Tensor[(1125, 2), int16]) -> (Tensor[(2, 3, 14), int32], Tensor[(2, 3, 14), float64], Tensor[(8, 12, 16), float64], Tensor[(1536), float64], Tensor[(15, 10, 15), float64], Tensor[(330), float32], Tensor[(288), bool], Tensor[(2, 3, 14), uint64], Tensor[(2, 3, 14), float64], Tensor[(1125, 2), bool], Tensor[(648), uint8], Tensor[(2, 10, 15), bool], Tensor[(300), uint16]) {
  %242 = @func_12189() /* ty=Tensor[(2, 3, 14), float64] */;
  %243 = cast(%var_12362, dtype="int32") /* ty=Tensor[(2, 3, 14), int32] */;
  %244 = shape_of(%242, dtype="int32") /* ty=Tensor[(3), int32] */;
  %245 = cast(%242, dtype="int32") /* ty=Tensor[(2, 3, 14), int32] */;
  %246 = dyn.reshape(%243, %244, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %247 = @func_12328() /* ty=(Tensor[(2, 3, 14), float64], Tensor[(9, 12, 6), bool], Tensor[(648), uint8]) */;
  %248 = cast(%var_12378, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %249 = cast(%var_12378, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %250 = reshape(%248, newshape=[8, 12, 16]) /* ty=Tensor[(8, 12, 16), float64] */;
  %251 = reshape(%249, newshape=[8, 12, 16]) /* ty=Tensor[(8, 12, 16), float64] */;
  %252 = cast(%var_12381, dtype="float32") /* ty=Tensor[(330), float32] */;
  %253 = cast(meta[relay.Constant][19] /* ty=Tensor[(288), bool] */, dtype="bool") /* ty=Tensor[(288), bool] */;
  %254 = cast(%var_12383, dtype="float64") /* ty=Tensor[(1125, 2), float64] */;
  %255 = bitwise_xor(%245, %246) /* ty=Tensor[(2, 3, 14), int32] */;
  %256 = cast(%255, dtype="int8") /* ty=Tensor[(2, 3, 14), int8] */;
  %257 = reshape(%252, newshape=[15, 11, 2]) /* ty=Tensor[(15, 11, 2), float32] */;
  %258 = reshape(%253, newshape=[288]) /* ty=Tensor[(288), bool] */;
  %259 = reshape(%254, newshape=[2250]) /* ty=Tensor[(2250), float64] */;
  %260 = reshape(%256, newshape=[3, 28]) /* ty=Tensor[(3, 28), int8] */;
  %261 = @func_6698(%257, %258, %259, %260) /* ty=(Tensor[(288), bool], Tensor[(15, 10, 15), float64], Tensor[(2250), float64], Tensor[(3, 28), int8], Tensor[(15, 11, 2), int64]) */;
  %262 = cast(%242, dtype="uint64") /* ty=Tensor[(2, 3, 14), uint64] */;
  %263 = shape_of(%var_12362, dtype="int32") /* ty=Tensor[(3), int32] */;
  %264 = cast(%var_12362, dtype="uint64") /* ty=Tensor[(2, 3, 14), uint64] */;
  %265 = dyn.reshape(%262, %263, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %266 = cast(%var_12383, dtype="float64") /* ty=Tensor[(1125, 2), float64] */;
  %267 = log(%266) /* ty=Tensor[(1125, 2), float64] */;
  %268 = cast(%var_12424, dtype="int16") /* ty=Tensor[(1125, 2), int16] */;
  %269 = shape_of(%267, dtype="int32") /* ty=Tensor[(2), int32] */;
  %270 = cast(%267, dtype="int16") /* ty=Tensor[(1125, 2), int16] */;
  %271 = dyn.reshape(%268, %269, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %272 = maximum(%270, %271) /* ty=Tensor[(1125, 2), int16] */;
  %273 = cast(%var_12431, dtype="bool") /* ty=Tensor[(1125, 2), bool] */;
  %274 = shape_of(%272, dtype="int32") /* ty=Tensor[(2), int32] */;
  %275 = cast(%272, dtype="bool") /* ty=Tensor[(1125, 2), bool] */;
  %276 = dyn.reshape(%273, %274, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %277 = @func_12328() /* ty=(Tensor[(2, 3, 14), float64], Tensor[(9, 12, 6), bool], Tensor[(648), uint8]) */;
  %278 = cast(meta[relay.Constant][20] /* ty=Tensor[(300), uint16] */, dtype="uint16") /* ty=Tensor[(300), uint16] */;
  %279 = reshape(%278, newshape=[2, 10, 15]) /* ty=Tensor[(2, 10, 15), uint16] */;
  %280 = @func_8093(%279) /* ty=(Tensor[(2, 10, 15), bool],) */;
  %281 = %247.0;
  %282 = @func_11204(%250, %251) /* ty=Tensor[(8, 12, 16), float64] */;
  %283 = %261.1;
  %284 = right_shift(%264, %265) /* ty=Tensor[(2, 3, 14), uint64] */;
  %285 = @func_12189() /* ty=Tensor[(2, 3, 14), float64] */;
  %286 = greater_equal(%275, %276) /* ty=Tensor[(1125, 2), bool] */;
  %287 = %277.2;
  %288 = %280.0;
  (%255, %281, %282, %var_12378, %283, %var_12381, meta[relay.Constant][19] /* ty=Tensor[(288), bool] */, %284, %285, %286, %287, %288, meta[relay.Constant][20] /* ty=Tensor[(300), uint16] */)
}

def @func_16198() -> (Tensor[(13, 11, 13), bool], Tensor[(13, 11, 13), bool], Tensor[(1536), float64]) {
  %299 = fn () -> (Tensor[(13, 11, 13), bool], Tensor[(13, 11, 13), bool], Tensor[(1536), float64]) {
    %289 = @func_13642() /* ty=(Tensor[(13, 11, 13), bool],) */;
    %290 = cast(meta[relay.Constant][21] /* ty=Tensor[(1536), int16] */, dtype="int16") /* ty=Tensor[(1536), int16] */;
    %291 = reshape(%290, newshape=[1536]) /* ty=Tensor[(1536), int16] */;
    %292 = @func_13122(%291) /* ty=(Tensor[(13, 11, 13), bool], Tensor[(3, 3, 3), float64], Tensor[(1536), int16]) */;
    %293 = cast(meta[relay.Constant][21] /* ty=Tensor[(1536), int16] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
    %294 = acosh(%293) /* ty=Tensor[(1536), float64] */;
    %295 = cast(%294, dtype="float64") /* ty=Tensor[(1536), float64] */;
    %296 = %289.0;
    %297 = %292.0;
    %298 = atan(%295) /* ty=Tensor[(1536), float64] */;
    (%296, %297, %298)
  };
  %299() /* ty=(Tensor[(13, 11, 13), bool], Tensor[(13, 11, 13), bool], Tensor[(1536), float64]) */
}

def @main() -> Tensor[(2, 3, 14), float64] {
  %300 = @func_11732() /* ty=Tensor[(2, 3, 14), float64] */;
  %301 = cast(%300, dtype="float64") /* ty=Tensor[(2, 3, 14), float64] */;
  sigmoid(%301) /* ty=Tensor[(2, 3, 14), float64] */
}

def @func_16398(%var_16395: Tensor[(144, 2), float32], %var_16396: Tensor[(15, 150), float64], %var_16397: Tensor[(648), uint8]) -> (Tensor[(13, 11, 13), bool], Tensor[(2, 3, 14), float64], Tensor[(336), float32], Tensor[(144, 2), float32], Tensor[(15, 150), float64], Tensor[(9, 12, 6), bool], Tensor[(648), uint8]) {
  @func_16393(%var_16395, %var_16396, %var_16397) /* ty=(Tensor[(13, 11, 13), bool], Tensor[(2, 3, 14), float64], Tensor[(336), float32], Tensor[(144, 2), float32], Tensor[(15, 150), float64], Tensor[(9, 12, 6), bool], Tensor[(648), uint8]) */
}

def @func_12274(%var_12270: Tensor[(27), float64], %var_12271: Tensor[(288), bool], %var_12272: Tensor[(2250), float64], %var_12273: Tensor[(52), float64]) -> (Tensor[(2, 3, 14), float64], Tensor[(3, 3, 3), float64], Tensor[(27), float64], Tensor[(288), bool], Tensor[(330), float32], Tensor[(288), bool], Tensor[(2250), float64], Tensor[(13, 4, 1), float64], Tensor[(52), float64]) {
  @func_12268(%var_12270, %var_12271, %var_12272, %var_12273) /* ty=(Tensor[(2, 3, 14), float64], Tensor[(3, 3, 3), float64], Tensor[(27), float64], Tensor[(288), bool], Tensor[(330), float32], Tensor[(288), bool], Tensor[(2250), float64], Tensor[(13, 4, 1), float64], Tensor[(52), float64]) */
}

def @func_14014(%var_14010: Tensor[(336), float32], %var_14011: Tensor[(77, 1), float32], %var_14012: Tensor[(27), float64], %var_14013: Tensor[(364), float32]) -> (Tensor[(2, 3, 14), float64], Tensor[(2, 10, 15), bool], Tensor[(300), uint16], Tensor[(13, 4, 648), bool], Tensor[(420), float32], Tensor[(336), float32], Tensor[(77, 1), float32], Tensor[(13, 11, 13), bool], Tensor[(27), float64], Tensor[(2, 144), bool], Tensor[(1, 364), float32], Tensor[(364), float32], Tensor[(13, 4, 648), float64], Tensor[(3, 15, 15), float32], Tensor[(675), float32]) {
  %349 = fn (%var_13966: Tensor[(336), float32], %var_13967: Tensor[(77, 1), float32], %var_13979: Tensor[(27), float64], %var_13988: Tensor[(364), float32]) -> (Tensor[(2, 3, 14), float64], Tensor[(2, 10, 15), bool], Tensor[(300), uint16], Tensor[(13, 4, 648), bool], Tensor[(420), float32], Tensor[(336), float32], Tensor[(77, 1), float32], Tensor[(13, 11, 13), bool], Tensor[(27), float64], Tensor[(2, 144), bool], Tensor[(1, 364), float32], Tensor[(364), float32], Tensor[(13, 4, 648), float64], Tensor[(3, 15, 15), float32], Tensor[(675), float32]) {
    %302 = cast(meta[relay.Constant][22] /* ty=Tensor[(300), uint16] */, dtype="uint16") /* ty=Tensor[(300), uint16] */;
    %303 = reshape(%302, newshape=[2, 10, 15]) /* ty=Tensor[(2, 10, 15), uint16] */;
    %304 = @func_8093(%303) /* ty=(Tensor[(2, 10, 15), bool],) */;
    %305 = @func_12059() /* ty=Tensor[(13, 4, 1), float64] */;
    %306 = @func_13760() /* ty=(Tensor[(648), uint8],) */;
    %307 = %306.0;
    %308 = cast(%305, dtype="bool") /* ty=Tensor[(13, 4, 1), bool] */;
    %309 = cast(%307, dtype="bool") /* ty=Tensor[(648), bool] */;
    %310 = cast(%var_13966, dtype="float32") /* ty=Tensor[(336), float32] */;
    %311 = cast(%var_13967, dtype="float32") /* ty=Tensor[(77, 1), float32] */;
    %312 = reshape(%310, newshape=[336]) /* ty=Tensor[(336), float32] */;
    %313 = reshape(%311, newshape=[77]) /* ty=Tensor[(77), float32] */;
    %314 = @func_12649(%312, %313) /* ty=(Tensor[(2, 3, 14), float64], Tensor[(7, 4, 12), float32], Tensor[(336), float32], Tensor[(2250), uint32], Tensor[(420), float32], Tensor[(330), float32], Tensor[(4, 72), bool], Tensor[(77), float32]) */;
    %315 = cast(%var_13979, dtype="float64") /* ty=Tensor[(27), float64] */;
    %316 = cast(meta[relay.Constant][23] /* ty=Tensor[(2, 144), bool] */, dtype="bool") /* ty=Tensor[(2, 144), bool] */;
    %317 = reshape(%315, newshape=[27]) /* ty=Tensor[(27), float64] */;
    %318 = reshape(%316, newshape=[72, 4]) /* ty=Tensor[(72, 4), bool] */;
    %319 = @func_12954(%317, %318) /* ty=(Tensor[(13, 11, 13), bool], Tensor[(27), float64], Tensor[(27), float64], Tensor[(72, 4), bool], Tensor[(2250), float64], Tensor[(52), float64], Tensor[(4, 1, 11), float32], Tensor[(44), float32]) */;
    %320 = cast(%var_13988, dtype="float32") /* ty=Tensor[(364), float32] */;
    %321 = cast(%var_13979, dtype="float64") /* ty=Tensor[(27), float64] */;
    %322 = reshape(%320, newshape=[1, 364]) /* ty=Tensor[(1, 364), float32] */;
    %323 = reshape(%321, newshape=[27]) /* ty=Tensor[(27), float64] */;
    %324 = @func_5277(%322, %323) /* ty=(Tensor[(14, 13, 8), float32], Tensor[(13, 14, 2), float32], Tensor[(26, 1), float32], Tensor[(1, 364), float32], Tensor[(3, 28), int8], Tensor[(3, 3, 3), float64], Tensor[(27), float64], Tensor[(84), int8], Tensor[(2250), float64]) */;
    %325 = cast(%307, dtype="int16") /* ty=Tensor[(648), int16] */;
    %326 = cast(%305, dtype="int16") /* ty=Tensor[(13, 4, 1), int16] */;
    %327 = subtract(%325, %326) /* ty=Tensor[(13, 4, 648), int16] */;
    %328 = cast(%327, dtype="float32") /* ty=Tensor[(13, 4, 648), float32] */;
    %329 = rsqrt(%328) /* ty=Tensor[(13, 4, 648), float32] */;
    %330 = cast(%329, dtype="uint32") /* ty=Tensor[(13, 4, 648), uint32] */;
    %331 = cast(%305, dtype="uint32") /* ty=Tensor[(13, 4, 1), uint32] */;
    %332 = multiply(%330, %331) /* ty=Tensor[(13, 4, 648), uint32] */;
    %333 = @func_12059() /* ty=Tensor[(13, 4, 1), float64] */;
    %334 = cast(%332, dtype="uint64") /* ty=Tensor[(13, 4, 648), uint64] */;
    %335 = cast(%333, dtype="uint64") /* ty=Tensor[(13, 4, 1), uint64] */;
    %336 = logical_xor(%334, %335) /* ty=Tensor[(13, 4, 648), uint64] */;
    %337 = cast(%336, dtype="float64") /* ty=Tensor[(13, 4, 648), float64] */;
    %338 = cast(meta[relay.Constant][24] /* ty=Tensor[(675), float32] */, dtype="float32") /* ty=Tensor[(675), float32] */;
    %339 = reshape(%338, newshape=[3, 15, 15]) /* ty=Tensor[(3, 15, 15), float32] */;
    %340 = @func_13894(%339) /* ty=(Tensor[(3, 15, 15), float32], Tensor[(3, 15, 15), uint16]) */;
    %341 = @func_12189() /* ty=Tensor[(2, 3, 14), float64] */;
    %342 = %304.0;
    %343 = logical_and(%308, %309) /* ty=Tensor[(13, 4, 648), bool] */;
    %344 = %314.4;
    %345 = %319.0;
    %346 = %324.3;
    %347 = sinh(%337) /* ty=Tensor[(13, 4, 648), float64] */;
    %348 = %340.0;
    (%341, %342, meta[relay.Constant][22] /* ty=Tensor[(300), uint16] */, %343, %344, %var_13966, %var_13967, %345, %var_13979, meta[relay.Constant][23] /* ty=Tensor[(2, 144), bool] */, %346, %var_13988, %347, %348, meta[relay.Constant][24] /* ty=Tensor[(675), float32] */)
  };
  %349(%var_14010, %var_14011, %var_14012, %var_14013) /* ty=(Tensor[(2, 3, 14), float64], Tensor[(2, 10, 15), bool], Tensor[(300), uint16], Tensor[(13, 4, 648), bool], Tensor[(420), float32], Tensor[(336), float32], Tensor[(77, 1), float32], Tensor[(13, 11, 13), bool], Tensor[(27), float64], Tensor[(2, 144), bool], Tensor[(1, 364), float32], Tensor[(364), float32], Tensor[(13, 4, 648), float64], Tensor[(3, 15, 15), float32], Tensor[(675), float32]) */
}

def @func_16393(%var_16361: Tensor[(144, 2), float32], %var_16362: Tensor[(15, 150), float64], %var_16389: Tensor[(648), uint8]) -> (Tensor[(13, 11, 13), bool], Tensor[(2, 3, 14), float64], Tensor[(336), float32], Tensor[(144, 2), float32], Tensor[(15, 150), float64], Tensor[(9, 12, 6), bool], Tensor[(648), uint8]) {
  %350 = cast(meta[relay.Constant][25] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %351 = cast(%var_16361, dtype="float32") /* ty=Tensor[(144, 2), float32] */;
  %352 = cast(%var_16362, dtype="float64") /* ty=Tensor[(15, 150), float64] */;
  %353 = reshape(%350, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %354 = reshape(%351, newshape=[4, 72]) /* ty=Tensor[(4, 72), float32] */;
  %355 = reshape(%352, newshape=[2250]) /* ty=Tensor[(2250), float64] */;
  %356 = @func_16122(%353, %354, %355) /* ty=(Tensor[(13, 11, 13), bool], Tensor[(336), float32], Tensor[(77), float32], Tensor[(2, 3, 14), float64], Tensor[(1, 6, 14), int8], Tensor[(2250), float64], Tensor[(13, 11, 13), bool], Tensor[(4, 72), uint8]) */;
  %357 = cast(%var_16389, dtype="uint8") /* ty=Tensor[(648), uint8] */;
  %358 = cast(%var_16389, dtype="uint8") /* ty=Tensor[(648), uint8] */;
  %359 = reshape(%357, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), uint8] */;
  %360 = reshape(%358, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), uint8] */;
  %361 = @func_14631() /* ty=Tensor[(13, 11, 13), bool] */;
  %362 = %356.3;
  %363 = @func_9558(%359, %360) /* ty=Tensor[(9, 12, 6), bool] */;
  (%361, %362, meta[relay.Constant][25] /* ty=Tensor[(336), float32] */, %var_16361, %var_16362, %363, %var_16389)
}

def @func_3905(%var_3904: Tensor[(11, 1, 7), float32]) -> (Tensor[(11, 1, 7), float32],) {
  %366 = fn (%var_3900: Tensor[(11, 1, 7), float32]) -> (Tensor[(11, 1, 7), float32],) {
    %364 = cast(%var_3900, dtype="float32") /* ty=Tensor[(11, 1, 7), float32] */;
    %365 = sigmoid(%364) /* ty=Tensor[(11, 1, 7), float32] */;
    (%365,)
  };
  %366(%var_3904) /* ty=(Tensor[(11, 1, 7), float32],) */
}

def @func_13055() -> (Tensor[(13, 4, 7), bool], Tensor[(11, 1, 7), float32], Tensor[(77), float32]) {
  %373 = fn () -> (Tensor[(13, 4, 7), bool], Tensor[(11, 1, 7), float32], Tensor[(77), float32]) {
    %367 = @func_12837() /* ty=(Tensor[(13, 4, 7), bool], Tensor[(13, 11, 13), bool]) */;
    %368 = cast(meta[relay.Constant][26] /* ty=Tensor[(77), float32] */, dtype="float32") /* ty=Tensor[(77), float32] */;
    %369 = reshape(%368, newshape=[11, 1, 7]) /* ty=Tensor[(11, 1, 7), float32] */;
    %370 = @func_3903(%369) /* ty=(Tensor[(11, 1, 7), float32],) */;
    %371 = %367.0;
    %372 = %370.0;
    (%371, %372, meta[relay.Constant][26] /* ty=Tensor[(77), float32] */)
  };
  %373() /* ty=(Tensor[(13, 4, 7), bool], Tensor[(11, 1, 7), float32], Tensor[(77), float32]) */
}

def @func_16554() -> Tensor[(13, 4, 7), bool] {
  %375 = fn () -> Tensor[(13, 4, 7), bool] {
    %374 = @func_15062() /* ty=(Tensor[(13, 4, 7), bool], Tensor[(8, 12, 16), float64], Tensor[(1536), float64]) */;
    %374.0
  };
  %375() /* ty=Tensor[(13, 4, 7), bool] */
}

def @func_6047(%var_6045: Tensor[(15, 8, 2), float32]) -> Tensor[(15, 8, 2), float32] {
  @func_6044(%var_6045) /* ty=Tensor[(15, 8, 2), float32] */
}

def @func_16032(%var_15992: Tensor[(13, 11, 5), float64], %var_16004: Tensor[(84), int8]) -> (Tensor[(13, 11, 5), float64], Tensor[(84), int8], Tensor[(2250), float64], Tensor[(84), int8], Tensor[(13, 11, 13), bool], Tensor[(225), float32], Tensor[(3, 15, 15), bool], Tensor[(675), float32], Tensor[(13, 11, 13), bool]) {
  %376 = cast(%var_15992, dtype="float64") /* ty=Tensor[(13, 11, 5), float64] */;
  %377 = cast(meta[relay.Constant][27] /* ty=Tensor[(2250), float64] */, dtype="float64") /* ty=Tensor[(2250), float64] */;
  %378 = cast(%var_16004, dtype="int8") /* ty=Tensor[(84), int8] */;
  %379 = reshape(%377, newshape=[15, 10, 15]) /* ty=Tensor[(15, 10, 15), float64] */;
  %380 = reshape(%378, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %381 = @func_952(%379, %380) /* ty=(Tensor[(15, 10, 15), float64], Tensor[(1, 6, 14), int8], int8, Tensor[(84), int8]) */;
  %382 = cast(meta[relay.Constant][28] /* ty=Tensor[(225), float32] */, dtype="float32") /* ty=Tensor[(225), float32] */;
  %383 = reshape(%382, newshape=[225]) /* ty=Tensor[(225), float32] */;
  %384 = @func_15984(%383) /* ty=(Tensor[(13, 11, 13), bool], Tensor[(75), float32], Tensor[(225), float32], Tensor[(13, 4, 7), float64], Tensor[(2, 3, 14), float64]) */;
  %385 = cast(meta[relay.Constant][29] /* ty=Tensor[(675), float32] */, dtype="float32") /* ty=Tensor[(675), float32] */;
  %386 = reshape(%385, newshape=[3, 15, 15]) /* ty=Tensor[(3, 15, 15), float32] */;
  %387 = @func_8948(%386) /* ty=(Tensor[(3, 15, 15), float32], Tensor[(3, 15, 15), bool]) */;
  %388 = @func_13642() /* ty=(Tensor[(13, 11, 13), bool],) */;
  %389 = rsqrt(%376) /* ty=Tensor[(13, 11, 5), float64] */;
  %390 = %381.3;
  %391 = %384.0;
  %392 = %387.1;
  %393 = %388.0;
  (%389, %390, meta[relay.Constant][27] /* ty=Tensor[(2250), float64] */, %var_16004, %391, meta[relay.Constant][28] /* ty=Tensor[(225), float32] */, %392, meta[relay.Constant][29] /* ty=Tensor[(675), float32] */, %393)
}

def @func_14670() -> (Tensor[(2, 3, 14), float64],) {
  @func_14668() /* ty=(Tensor[(2, 3, 14), float64],) */
}

def @func_15984(%var_15943: Tensor[(225), float32]) -> (Tensor[(13, 11, 13), bool], Tensor[(75), float32], Tensor[(225), float32], Tensor[(13, 4, 7), float64], Tensor[(2, 3, 14), float64]) {
  %394 = cast(meta[relay.Constant][30] /* ty=Tensor[(75), float32] */, dtype="float32") /* ty=Tensor[(75), float32] */;
  %395 = cast(%var_15943, dtype="float32") /* ty=Tensor[(225), float32] */;
  %396 = reshape(%394, newshape=[15, 5, 1]) /* ty=Tensor[(15, 5, 1), float32] */;
  %397 = reshape(%395, newshape=[15, 5, 3]) /* ty=Tensor[(15, 5, 3), float32] */;
  %398 = @func_15753(%396, %397) /* ty=(Tensor[(364), float32], Tensor[(24, 14), float32], Tensor[(15, 5, 3), int64], Tensor[(13, 11, 13), bool], Tensor[(15, 5, 84), float64]) */;
  %399 = @func_12837() /* ty=(Tensor[(13, 4, 7), bool], Tensor[(13, 11, 13), bool]) */;
  %400 = %399.0;
  %401 = cast(%400, dtype="float64") /* ty=Tensor[(13, 4, 7), float64] */;
  %402 = asinh(%401) /* ty=Tensor[(13, 4, 7), float64] */;
  %403 = cast(%402, dtype="float64") /* ty=Tensor[(13, 4, 7), float64] */;
  %404 = @func_14668() /* ty=(Tensor[(2, 3, 14), float64],) */;
  %405 = %398.3;
  %406 = log10(%403) /* ty=Tensor[(13, 4, 7), float64] */;
  %407 = %404.0;
  (%405, meta[relay.Constant][30] /* ty=Tensor[(75), float32] */, %var_15943, %406, %407)
}

def @func_14435() -> (Tensor[(11, ?, 7), bool], Tensor[(11, ?, 7), uint8], Tensor[(13, 4, 1), float64], Tensor[(2100), int32], Tensor[(1, 52), float64], Tensor[(13, 11, 13), bool], Tensor[(13, 4, 7), bool], Tensor[(11, ?, 7), float32]) {
  %408 = @func_14056() /* ty=Tensor[(11, ?, 7), uint8] */;
  %409 = cast(%408, dtype="float64") /* ty=Tensor[(11, ?, 7), float64] */;
  %410 = tan(%409) /* ty=Tensor[(11, ?, 7), float64] */;
  %411 = cast(%408, dtype="bool") /* ty=Tensor[(11, ?, 7), bool] */;
  %412 = shape_of(%410, dtype="int32") /* ty=Tensor[(3), int32] */;
  %413 = cast(%410, dtype="bool") /* ty=Tensor[(11, ?, 7), bool] */;
  %414 = dyn.reshape(%411, %412, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %415 = cast(meta[relay.Constant][31] /* ty=Tensor[(2100), int32] */, dtype="int32") /* ty=Tensor[(2100), int32] */;
  %416 = cast(meta[relay.Constant][31] /* ty=Tensor[(2100), int32] */, dtype="int32") /* ty=Tensor[(2100), int32] */;
  %417 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 52), float64] */, dtype="float64") /* ty=Tensor[(1, 52), float64] */;
  %418 = reshape(%415, newshape=[15, 14, 10]) /* ty=Tensor[(15, 14, 10), int32] */;
  %419 = reshape(%416, newshape=[15, 14, 10]) /* ty=Tensor[(15, 14, 10), int32] */;
  %420 = reshape(%417, newshape=[52]) /* ty=Tensor[(52), float64] */;
  %421 = @func_11927(%418, %419, %420) /* ty=(Tensor[(15, 14, 10), bool], Tensor[(13, 4, 1), float64], Tensor[(52), float64]) */;
  %422 = @func_13642() /* ty=(Tensor[(13, 11, 13), bool],) */;
  %423 = @func_13054() /* ty=(Tensor[(13, 4, 7), bool], Tensor[(11, 1, 7), float32], Tensor[(77), float32]) */;
  %424 = cast(%410, dtype="uint16") /* ty=Tensor[(11, ?, 7), uint16] */;
  %425 = shape_of(%408, dtype="int32") /* ty=Tensor[(3), int32] */;
  %426 = cast(%408, dtype="uint16") /* ty=Tensor[(11, ?, 7), uint16] */;
  %427 = dyn.reshape(%424, %425, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %428 = minimum(%426, %427) /* ty=Tensor[(11, ?, 7), uint16] */;
  %429 = cast(%428, dtype="float32") /* ty=Tensor[(11, ?, 7), float32] */;
  %430 = equal(%413, %414) /* ty=Tensor[(11, ?, 7), bool] */;
  %431 = @func_14056() /* ty=Tensor[(11, ?, 7), uint8] */;
  %432 = %421.1;
  %433 = %422.0;
  %434 = %423.0;
  %435 = atan(%429) /* ty=Tensor[(11, ?, 7), float32] */;
  (%430, %431, %432, meta[relay.Constant][31] /* ty=Tensor[(2100), int32] */, meta[relay.Constant][32] /* ty=Tensor[(1, 52), float64] */, %433, %434, %435)
}

def @func_13831() -> (Tensor[(3, 15, 15), float32],) {
  %438 = fn () -> (Tensor[(3, 15, 15), float32],) {
    %436 = @func_13619() /* ty=(Tensor[(2, 3, 14), float64], Tensor[(3, 15, 15), float32], Tensor[(5, 135), float32]) */;
    %437 = %436.1;
    (%437,)
  };
  %438() /* ty=(Tensor[(3, 15, 15), float32],) */
}

def @func_17525(%var_17523: Tensor[(27), float64]) -> (Tensor[(13, 4, 7), bool], Tensor[(11, 1, 7), float32], Tensor[(15, 11, 4), float32], Tensor[(3, 3, 3), float64], Tensor[(27), float64]) {
  @func_17522(%var_17523) /* ty=(Tensor[(13, 4, 7), bool], Tensor[(11, 1, 7), float32], Tensor[(15, 11, 4), float32], Tensor[(3, 3, 3), float64], Tensor[(27), float64]) */
}

def @func_12189() -> Tensor[(2, 3, 14), float64] {
  @func_11732() /* ty=Tensor[(2, 3, 14), float64] */
}

def @func_12120() -> (Tensor[(13, 4, 7), bool],) {
  %443 = fn () -> (Tensor[(13, 4, 7), bool],) {
    %439 = @func_12059() /* ty=Tensor[(13, 4, 1), float64] */;
    %440 = cast(%439, dtype="bool") /* ty=Tensor[(13, 4, 1), bool] */;
    %441 = cast(meta[relay.Constant][33] /* ty=Tensor[(13, 4, 7), float64] */, dtype="bool") /* ty=Tensor[(13, 4, 7), bool] */;
    %442 = logical_or(%440, %441) /* ty=Tensor[(13, 4, 7), bool] */;
    (%442,)
  };
  %443() /* ty=(Tensor[(13, 4, 7), bool],) */
}

def @func_15649() -> (Tensor[(13, 4, 7), bool],) {
  @func_15647() /* ty=(Tensor[(13, 4, 7), bool],) */
}

def @func_16036(%var_16034: Tensor[(13, 11, 5), float64], %var_16035: Tensor[(84), int8]) -> (Tensor[(13, 11, 5), float64], Tensor[(84), int8], Tensor[(2250), float64], Tensor[(84), int8], Tensor[(13, 11, 13), bool], Tensor[(225), float32], Tensor[(3, 15, 15), bool], Tensor[(675), float32], Tensor[(13, 11, 13), bool]) {
  @func_16032(%var_16034, %var_16035) /* ty=(Tensor[(13, 11, 5), float64], Tensor[(84), int8], Tensor[(2250), float64], Tensor[(84), int8], Tensor[(13, 11, 13), bool], Tensor[(225), float32], Tensor[(3, 15, 15), bool], Tensor[(675), float32], Tensor[(13, 11, 13), bool]) */
}

def @func_16287() -> Tensor[(2, 3, 14), uint32] {
  %449 = fn () -> Tensor[(2, 3, 14), uint32] {
    %444 = @func_11732() /* ty=Tensor[(2, 3, 14), float64] */;
    %445 = cast(meta[relay.Constant][34] /* ty=Tensor[(2, 3, 14), float64] */, dtype="uint32") /* ty=Tensor[(2, 3, 14), uint32] */;
    %446 = shape_of(%444, dtype="int32") /* ty=Tensor[(3), int32] */;
    %447 = cast(%444, dtype="uint32") /* ty=Tensor[(2, 3, 14), uint32] */;
    %448 = dyn.reshape(%445, %446, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    left_shift(%447, %448) /* ty=Tensor[(2, 3, 14), uint32] */
  };
  %449() /* ty=Tensor[(2, 3, 14), uint32] */
}

def @func_15756(%var_15754: Tensor[(15, 5, 1), float32], %var_15755: Tensor[(15, 5, 3), float32]) -> (Tensor[(364), float32], Tensor[(24, 14), float32], Tensor[(15, 5, 3), int64], Tensor[(13, 11, 13), bool], Tensor[(15, 5, 84), float64]) {
  %466 = fn (%var_15682: Tensor[(15, 5, 1), float32], %var_15699: Tensor[(15, 5, 3), float32]) -> (Tensor[(364), float32], Tensor[(24, 14), float32], Tensor[(15, 5, 3), int64], Tensor[(13, 11, 13), bool], Tensor[(15, 5, 84), float64]) {
    %450 = cast(meta[relay.Constant][35] /* ty=Tensor[(24, 14), float32] */, dtype="float32") /* ty=Tensor[(24, 14), float32] */;
    %451 = cast(meta[relay.Constant][36] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
    %452 = reshape(%450, newshape=[7, 4, 12]) /* ty=Tensor[(7, 4, 12), float32] */;
    %453 = reshape(%451, newshape=[84]) /* ty=Tensor[(84), int8] */;
    %454 = @func_11016(%452, %453) /* ty=(Tensor[(7, 4, 12), float32], Tensor[(1, 6, 14), int8], Tensor[(26), float32], Tensor[(364), float32], Tensor[(84), int8]) */;
    %455 = cast(%var_15682, dtype="float32") /* ty=Tensor[(15, 5, 1), float32] */;
    %456 = acosh(%455) /* ty=Tensor[(15, 5, 1), float32] */;
    %457 = cast(%456, dtype="int64") /* ty=Tensor[(15, 5, 1), int64] */;
    %458 = cast(%var_15699, dtype="int64") /* ty=Tensor[(15, 5, 3), int64] */;
    %459 = @func_14616() /* ty=(Tensor[(13, 11, 13), bool],) */;
    %460 = cast(meta[relay.Constant][36] /* ty=Tensor[(84), int8] */, dtype="float64") /* ty=Tensor[(84), float64] */;
    %461 = cast(%var_15682, dtype="float64") /* ty=Tensor[(15, 5, 1), float64] */;
    %462 = %454.3;
    %463 = left_shift(%457, %458) /* ty=Tensor[(15, 5, 3), int64] */;
    %464 = %459.0;
    %465 = multiply(%460, %461) /* ty=Tensor[(15, 5, 84), float64] */;
    (%462, meta[relay.Constant][35] /* ty=Tensor[(24, 14), float32] */, %463, %464, %465)
  };
  %466(%var_15754, %var_15755) /* ty=(Tensor[(364), float32], Tensor[(24, 14), float32], Tensor[(15, 5, 3), int64], Tensor[(13, 11, 13), bool], Tensor[(15, 5, 84), float64]) */
}

def @func_13896(%var_13895: Tensor[(3, 15, 15), float32]) -> (Tensor[(3, 15, 15), float32], Tensor[(3, 15, 15), uint16]) {
  %484 = fn (%var_13851: Tensor[(3, 15, 15), float32]) -> (Tensor[(3, 15, 15), float32], Tensor[(3, 15, 15), uint16]) {
    %467 = @func_13830() /* ty=(Tensor[(3, 15, 15), float32],) */;
    %468 = %467.0;
    %469 = cast(%var_13851, dtype="float32") /* ty=Tensor[(3, 15, 15), float32] */;
    %470 = shape_of(%468, dtype="int32") /* ty=Tensor[(3), int32] */;
    %471 = cast(%468, dtype="float32") /* ty=Tensor[(3, 15, 15), float32] */;
    %472 = dyn.reshape(%469, %470, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %473 = cast(%468, dtype="bool") /* ty=Tensor[(3, 15, 15), bool] */;
    %474 = shape_of(%var_13851, dtype="int32") /* ty=Tensor[(3), int32] */;
    %475 = cast(%var_13851, dtype="bool") /* ty=Tensor[(3, 15, 15), bool] */;
    %476 = dyn.reshape(%473, %474, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %477 = equal(%475, %476) /* ty=Tensor[(3, 15, 15), bool] */;
    %478 = cast(%var_13851, dtype="uint16") /* ty=Tensor[(3, 15, 15), uint16] */;
    %479 = shape_of(%477, dtype="int32") /* ty=Tensor[(3), int32] */;
    %480 = cast(%477, dtype="uint16") /* ty=Tensor[(3, 15, 15), uint16] */;
    %481 = dyn.reshape(%478, %479, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %482 = multiply(%471, %472) /* ty=Tensor[(3, 15, 15), float32] */;
    %483 = logical_xor(%480, %481) /* ty=Tensor[(3, 15, 15), uint16] */;
    (%482, %483)
  };
  %484(%var_13895) /* ty=(Tensor[(3, 15, 15), float32], Tensor[(3, 15, 15), uint16]) */
}

def @func_6044(%var_6035: Tensor[(15, 8, 2), float32]) -> Tensor[(15, 8, 2), float32] {
  %485 = cast(%var_6035, dtype="float32") /* ty=Tensor[(15, 8, 2), float32] */;
  log(%485) /* ty=Tensor[(15, 8, 2), float32] */
}

def @func_8733(%var_8731: Tensor[(8, 7, 12), float32], %var_8732: Tensor[(22, 2), float32]) -> (Tensor[(8, 7, 12), float32], Tensor[(4, 1, 11), float32], Tensor[(22, 2), float32]) {
  %492 = fn (%var_8708: Tensor[(8, 7, 12), float32], %var_8713: Tensor[(22, 2), float32]) -> (Tensor[(8, 7, 12), float32], Tensor[(4, 1, 11), float32], Tensor[(22, 2), float32]) {
    %486 = cast(%var_8708, dtype="float32") /* ty=Tensor[(8, 7, 12), float32] */;
    %487 = cast(%var_8713, dtype="float32") /* ty=Tensor[(22, 2), float32] */;
    %488 = reshape(%487, newshape=[4, 1, 11]) /* ty=Tensor[(4, 1, 11), float32] */;
    %489 = @func_8680(%488) /* ty=(Tensor[(4, 1, 11), float32],) */;
    %490 = asinh(%486) /* ty=Tensor[(8, 7, 12), float32] */;
    %491 = %489.0;
    (%490, %491, %var_8713)
  };
  %492(%var_8731, %var_8732) /* ty=(Tensor[(8, 7, 12), float32], Tensor[(4, 1, 11), float32], Tensor[(22, 2), float32]) */
}

def @func_12329() -> (Tensor[(2, 3, 14), float64], Tensor[(9, 12, 6), bool], Tensor[(648), uint8]) {
  %499 = fn () -> (Tensor[(2, 3, 14), float64], Tensor[(9, 12, 6), bool], Tensor[(648), uint8]) {
    %493 = cast(meta[relay.Constant][37] /* ty=Tensor[(648), uint8] */, dtype="uint8") /* ty=Tensor[(648), uint8] */;
    %494 = cast(meta[relay.Constant][37] /* ty=Tensor[(648), uint8] */, dtype="uint8") /* ty=Tensor[(648), uint8] */;
    %495 = reshape(%493, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), uint8] */;
    %496 = reshape(%494, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), uint8] */;
    %497 = @func_11732() /* ty=Tensor[(2, 3, 14), float64] */;
    %498 = @func_9558(%495, %496) /* ty=Tensor[(9, 12, 6), bool] */;
    (%497, %498, meta[relay.Constant][37] /* ty=Tensor[(648), uint8] */)
  };
  %499() /* ty=(Tensor[(2, 3, 14), float64], Tensor[(9, 12, 6), bool], Tensor[(648), uint8]) */
}

def @func_13083(%var_13082: Tensor[(9, 12, 6), bool]) -> Tensor[(9, 12, 6), uint64] {
  %506 = fn (%var_13076: Tensor[(9, 12, 6), bool]) -> Tensor[(9, 12, 6), uint64] {
    %500 = @func_12328() /* ty=(Tensor[(2, 3, 14), float64], Tensor[(9, 12, 6), bool], Tensor[(648), uint8]) */;
    %501 = %500.1;
    %502 = cast(%var_13076, dtype="uint64") /* ty=Tensor[(9, 12, 6), uint64] */;
    %503 = shape_of(%501, dtype="int32") /* ty=Tensor[(3), int32] */;
    %504 = cast(%501, dtype="uint64") /* ty=Tensor[(9, 12, 6), uint64] */;
    %505 = dyn.reshape(%502, %503, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    bitwise_xor(%504, %505) /* ty=Tensor[(9, 12, 6), uint64] */
  };
  %506(%var_13082) /* ty=Tensor[(9, 12, 6), uint64] */
}

def @func_17596(%var_17564: Tensor[(14, 15, 12), float64], %var_17590: Tensor[(288), bool]) -> (Tensor[(14, 15, 12), float64], Tensor[(14, 15, 12), float32], Tensor[(14, 15, 12), float64], Tensor[(72, 4), bool], Tensor[(27), float64], Tensor[(288), bool], Tensor[(13, 11, 13), bool]) {
  %507 = cast(%var_17564, dtype="float64") /* ty=Tensor[(14, 15, 12), float64] */;
  %508 = cast(%var_17564, dtype="float32") /* ty=Tensor[(14, 15, 12), float32] */;
  %509 = cast(%var_17564, dtype="float64") /* ty=Tensor[(14, 15, 12), float64] */;
  %510 = cast(meta[relay.Constant][38] /* ty=Tensor[(27), float64] */, dtype="float64") /* ty=Tensor[(27), float64] */;
  %511 = cast(%var_17590, dtype="bool") /* ty=Tensor[(288), bool] */;
  %512 = reshape(%510, newshape=[27]) /* ty=Tensor[(27), float64] */;
  %513 = reshape(%511, newshape=[72, 4]) /* ty=Tensor[(72, 4), bool] */;
  %514 = @func_12954(%512, %513) /* ty=(Tensor[(13, 11, 13), bool], Tensor[(27), float64], Tensor[(27), float64], Tensor[(72, 4), bool], Tensor[(2250), float64], Tensor[(52), float64], Tensor[(4, 1, 11), float32], Tensor[(44), float32]) */;
  %515 = @func_12837() /* ty=(Tensor[(13, 4, 7), bool], Tensor[(13, 11, 13), bool]) */;
  %516 = sin(%507) /* ty=Tensor[(14, 15, 12), float64] */;
  %517 = acos(%508) /* ty=Tensor[(14, 15, 12), float32] */;
  %518 = exp(%509) /* ty=Tensor[(14, 15, 12), float64] */;
  %519 = %514.3;
  %520 = %515.1;
  (%516, %517, %518, %519, meta[relay.Constant][38] /* ty=Tensor[(27), float64] */, %var_17590, %520)
}

def @func_11207(%var_11205: Tensor[(8, 12, 16), float64], %var_11206: Tensor[(8, 12, 16), float64]) -> Tensor[(8, 12, 16), float64] {
  %525 = fn (%var_11199: Tensor[(8, 12, 16), float64], %var_11200: Tensor[(8, 12, 16), float64]) -> Tensor[(8, 12, 16), float64] {
    %521 = cast(%var_11200, dtype="float64") /* ty=Tensor[(8, 12, 16), float64] */;
    %522 = shape_of(%var_11199, dtype="int32") /* ty=Tensor[(3), int32] */;
    %523 = cast(%var_11199, dtype="float64") /* ty=Tensor[(8, 12, 16), float64] */;
    %524 = dyn.reshape(%521, %522, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    mod(%523, %524) /* ty=Tensor[(8, 12, 16), float64] */
  };
  %525(%var_11205, %var_11206) /* ty=Tensor[(8, 12, 16), float64] */
}

def @func_16538() -> Tensor[(2, 3, 14), float64] {
  @func_16536() /* ty=Tensor[(2, 3, 14), float64] */
}

def @func_11019(%var_11017: Tensor[(7, 4, 12), float32], %var_11018: Tensor[(84), int8]) -> (Tensor[(7, 4, 12), float32], Tensor[(1, 6, 14), int8], Tensor[(26), float32], Tensor[(364), float32], Tensor[(84), int8]) {
  %536 = fn (%var_10990: Tensor[(7, 4, 12), float32], %var_11000: Tensor[(84), int8]) -> (Tensor[(7, 4, 12), float32], Tensor[(1, 6, 14), int8], Tensor[(26), float32], Tensor[(364), float32], Tensor[(84), int8]) {
    %526 = cast(%var_10990, dtype="float32") /* ty=Tensor[(7, 4, 12), float32] */;
    %527 = cast(meta[relay.Constant][39] /* ty=Tensor[(26), float32] */, dtype="float32") /* ty=Tensor[(26), float32] */;
    %528 = cast(meta[relay.Constant][40] /* ty=Tensor[(364), float32] */, dtype="float32") /* ty=Tensor[(364), float32] */;
    %529 = cast(%var_11000, dtype="int8") /* ty=Tensor[(84), int8] */;
    %530 = reshape(%527, newshape=[13, 1, 2]) /* ty=Tensor[(13, 1, 2), float32] */;
    %531 = reshape(%528, newshape=[13, 14, 2]) /* ty=Tensor[(13, 14, 2), float32] */;
    %532 = reshape(%529, newshape=[84]) /* ty=Tensor[(84), int8] */;
    %533 = @func_1873(%530, %531, %532) /* ty=(Tensor[(13, 14, 2), float32], Tensor[(1, 6, 14), int8], int8, Tensor[(84), int8]) */;
    %534 = cosh(%526) /* ty=Tensor[(7, 4, 12), float32] */;
    %535 = %533.1;
    (%534, %535, meta[relay.Constant][39] /* ty=Tensor[(26), float32] */, meta[relay.Constant][40] /* ty=Tensor[(364), float32] */, %var_11000)
  };
  %536(%var_11017, %var_11018) /* ty=(Tensor[(7, 4, 12), float32], Tensor[(1, 6, 14), int8], Tensor[(26), float32], Tensor[(364), float32], Tensor[(84), int8]) */
}

def @func_14830() -> (Tensor[(13, 11, 13), bool], Tensor[(1, 6, 14), int8], Tensor[(104, 2), float32], Tensor[(77, 1), float32]) {
  %537 = @func_14435() /* ty=(Tensor[(11, ?, 7), bool], Tensor[(11, ?, 7), uint8], Tensor[(13, 4, 1), float64], Tensor[(2100), int32], Tensor[(1, 52), float64], Tensor[(13, 11, 13), bool], Tensor[(13, 4, 7), bool], Tensor[(11, ?, 7), float32]) */;
  %538 = cast(meta[relay.Constant][41] /* ty=Tensor[(104, 2), float32] */, dtype="float32") /* ty=Tensor[(104, 2), float32] */;
  %539 = cast(meta[relay.Constant][42] /* ty=Tensor[(77, 1), float32] */, dtype="float32") /* ty=Tensor[(77, 1), float32] */;
  %540 = reshape(%538, newshape=[208]) /* ty=Tensor[(208), float32] */;
  %541 = reshape(%539, newshape=[77]) /* ty=Tensor[(77), float32] */;
  %542 = @func_12881(%540, %541) /* ty=(Tensor[(2, 3, 14), float64], Tensor[(208), float32], Tensor[(208), float32], Tensor[(1, 6, 14), int8], int8, Tensor[(8, 12, 16), float64], Tensor[(660), float32], Tensor[(2250), uint32], Tensor[(24, 14), float32], Tensor[(77), float32]) */;
  %543 = %537.5;
  %544 = %542.3;
  (%543, %544, meta[relay.Constant][41] /* ty=Tensor[(104, 2), float32] */, meta[relay.Constant][42] /* ty=Tensor[(77, 1), float32] */)
}

def @func_11777(%var_11776: Tensor[(8, 36), bool]) -> (Tensor[(2, 3, 14), float64], Tensor[(12, 14, 8), float64], Tensor[(168, 8), float64], Tensor[(13, 14, 2), float32], Tensor[(26), float32], Tensor[(364), float32], Tensor[(1, 6, 14), float64], Tensor[(8, 36), bool]) {
  %564 = fn (%var_11756: Tensor[(8, 36), bool]) -> (Tensor[(2, 3, 14), float64], Tensor[(12, 14, 8), float64], Tensor[(168, 8), float64], Tensor[(13, 14, 2), float32], Tensor[(26), float32], Tensor[(364), float32], Tensor[(1, 6, 14), float64], Tensor[(8, 36), bool]) {
    %545 = cast(meta[relay.Constant][43] /* ty=Tensor[(168, 8), float64] */, dtype="float64") /* ty=Tensor[(168, 8), float64] */;
    %546 = reshape(%545, newshape=[12, 14, 8]) /* ty=Tensor[(12, 14, 8), float64] */;
    %547 = @func_7396(%546) /* ty=(Tensor[(12, 14, 8), float64],) */;
    %548 = cast(meta[relay.Constant][44] /* ty=Tensor[(26), float32] */, dtype="float32") /* ty=Tensor[(26), float32] */;
    %549 = cast(meta[relay.Constant][45] /* ty=Tensor[(364), float32] */, dtype="float32") /* ty=Tensor[(364), float32] */;
    %550 = @func_11732() /* ty=Tensor[(2, 3, 14), float64] */;
    %551 = cast(%550, dtype="int8") /* ty=Tensor[(2, 3, 14), int8] */;
    %552 = reshape(%548, newshape=[13, 1, 2]) /* ty=Tensor[(13, 1, 2), float32] */;
    %553 = reshape(%549, newshape=[13, 14, 2]) /* ty=Tensor[(13, 14, 2), float32] */;
    %554 = reshape(%551, newshape=[84]) /* ty=Tensor[(84), int8] */;
    %555 = @func_1873(%552, %553, %554) /* ty=(Tensor[(13, 14, 2), float32], Tensor[(1, 6, 14), int8], int8, Tensor[(84), int8]) */;
    %556 = cast(%var_11756, dtype="bool") /* ty=Tensor[(8, 36), bool] */;
    %557 = cast(%var_11756, dtype="bool") /* ty=Tensor[(8, 36), bool] */;
    %558 = reshape(%556, newshape=[16, 9, 2]) /* ty=Tensor[(16, 9, 2), bool] */;
    %559 = reshape(%557, newshape=[16, 9, 2]) /* ty=Tensor[(16, 9, 2), bool] */;
    %560 = @func_2794(%558, %559) /* ty=(Tensor[(16, 9, 2), bool], Tensor[(2250), float64], Tensor[(84), int8], Tensor[(1, 6, 14), int8], int8, Tensor[(1, 6, 14), float64]) */;
    %561 = %547.0;
    %562 = %555.0;
    %563 = %560.5;
    (%550, %561, meta[relay.Constant][43] /* ty=Tensor[(168, 8), float64] */, %562, meta[relay.Constant][44] /* ty=Tensor[(26), float32] */, meta[relay.Constant][45] /* ty=Tensor[(364), float32] */, %563, %var_11756)
  };
  %564(%var_11776) /* ty=(Tensor[(2, 3, 14), float64], Tensor[(12, 14, 8), float64], Tensor[(168, 8), float64], Tensor[(13, 14, 2), float32], Tensor[(26), float32], Tensor[(364), float32], Tensor[(1, 6, 14), float64], Tensor[(8, 36), bool]) */
}

def @func_15154(%var_15151: Tensor[(288), bool], %var_15152: Tensor[(2250), float64], %var_15153: Tensor[(1536), float64]) -> (Tensor[(13, 11, 13), bool], Tensor[(288), bool], Tensor[(288), bool], Tensor[(52), float64], Tensor[(1536), float64], Tensor[(84), float64], Tensor[(330), float32], Tensor[(27, 2250), bool], Tensor[(27, 1536), bool]) {
  @func_15149(%var_15151, %var_15152, %var_15153) /* ty=(Tensor[(13, 11, 13), bool], Tensor[(288), bool], Tensor[(288), bool], Tensor[(52), float64], Tensor[(1536), float64], Tensor[(84), float64], Tensor[(330), float32], Tensor[(27, 2250), bool], Tensor[(27, 1536), bool]) */
}

def @func_17173(%var_17103: Tensor[(13, 11, 13), bool]) -> (Tensor[(13, 4, 1), float64], Tensor[(8, 12, 16), float64], Tensor[(13, 11, 13), float64]) {
  %565 = @func_15062() /* ty=(Tensor[(13, 4, 7), bool], Tensor[(8, 12, 16), float64], Tensor[(1536), float64]) */;
  %566 = @func_14616() /* ty=(Tensor[(13, 11, 13), bool],) */;
  %567 = %566.0;
  %568 = cast(%var_17103, dtype="int8") /* ty=Tensor[(13, 11, 13), int8] */;
  %569 = shape_of(%567, dtype="int32") /* ty=Tensor[(3), int32] */;
  %570 = cast(%567, dtype="int8") /* ty=Tensor[(13, 11, 13), int8] */;
  %571 = dyn.reshape(%568, %569, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %572 = left_shift(%570, %571) /* ty=Tensor[(13, 11, 13), int8] */;
  %573 = cast(%572, dtype="float64") /* ty=Tensor[(13, 11, 13), float64] */;
  %574 = @func_14277() /* ty=Tensor[(13, 4, 1), float64] */;
  %575 = %565.1;
  %576 = asinh(%573) /* ty=Tensor[(13, 11, 13), float64] */;
  (%574, %575, %576)
}

def @func_8680(%var_8667: Tensor[(4, 1, 11), float32]) -> (Tensor[(4, 1, 11), float32],) {
  %577 = cast(%var_8667, dtype="float32") /* ty=Tensor[(4, 1, 11), float32] */;
  %578 = sinh(%577) /* ty=Tensor[(4, 1, 11), float32] */;
  (%578,)
}

def @func_17190() -> Tensor[(13, 4, 1), float64] {
  @func_17188() /* ty=Tensor[(13, 4, 1), float64] */
}

def @func_17600(%var_17598: Tensor[(14, 15, 12), float64], %var_17599: Tensor[(288), bool]) -> (Tensor[(14, 15, 12), float64], Tensor[(14, 15, 12), float32], Tensor[(14, 15, 12), float64], Tensor[(72, 4), bool], Tensor[(27), float64], Tensor[(288), bool], Tensor[(13, 11, 13), bool]) {
  @func_17596(%var_17598, %var_17599) /* ty=(Tensor[(14, 15, 12), float64], Tensor[(14, 15, 12), float32], Tensor[(14, 15, 12), float64], Tensor[(72, 4), bool], Tensor[(27), float64], Tensor[(288), bool], Tensor[(13, 11, 13), bool]) */
}

def @func_15278(%var_15275: Tensor[(225, 10), float64], %var_15276: Tensor[(84), int8], %var_15277: Tensor[(2100), int32]) -> (Tensor[(648), uint8], Tensor[(84), int8], Tensor[(225, 10), uint32], Tensor[(648), uint8], Tensor[(9, 12, 6), bool], Tensor[(13, 4, 1), float64], Tensor[(2100), int32], Tensor[(52), float64], Tensor[(225, 10), float32]) {
  %607 = fn (%var_15178: Tensor[(225, 10), float64], %var_15179: Tensor[(84), int8], %var_15225: Tensor[(2100), int32]) -> (Tensor[(648), uint8], Tensor[(84), int8], Tensor[(225, 10), uint32], Tensor[(648), uint8], Tensor[(9, 12, 6), bool], Tensor[(13, 4, 1), float64], Tensor[(2100), int32], Tensor[(52), float64], Tensor[(225, 10), float32]) {
    %579 = cast(%var_15178, dtype="float64") /* ty=Tensor[(225, 10), float64] */;
    %580 = cast(%var_15179, dtype="int8") /* ty=Tensor[(84), int8] */;
    %581 = reshape(%579, newshape=[15, 10, 15]) /* ty=Tensor[(15, 10, 15), float64] */;
    %582 = reshape(%580, newshape=[84]) /* ty=Tensor[(84), int8] */;
    %583 = @func_952(%581, %582) /* ty=(Tensor[(15, 10, 15), float64], Tensor[(1, 6, 14), int8], int8, Tensor[(84), int8]) */;
    %584 = %583.2;
    %585 = cast(%584, dtype="uint32") /* ty=uint32 */;
    %586 = cast(%var_15178, dtype="uint32") /* ty=Tensor[(225, 10), uint32] */;
    %587 = @func_12328() /* ty=(Tensor[(2, 3, 14), float64], Tensor[(9, 12, 6), bool], Tensor[(648), uint8]) */;
    %588 = %587.2;
    %589 = cast(%588, dtype="uint8") /* ty=Tensor[(648), uint8] */;
    %590 = cast(%588, dtype="uint8") /* ty=Tensor[(648), uint8] */;
    %591 = reshape(%589, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), uint8] */;
    %592 = reshape(%590, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), uint8] */;
    %593 = cast(%var_15225, dtype="int32") /* ty=Tensor[(2100), int32] */;
    %594 = cast(%var_15225, dtype="int32") /* ty=Tensor[(2100), int32] */;
    %595 = cast(meta[relay.Constant][46] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
    %596 = reshape(%593, newshape=[15, 14, 10]) /* ty=Tensor[(15, 14, 10), int32] */;
    %597 = reshape(%594, newshape=[15, 14, 10]) /* ty=Tensor[(15, 14, 10), int32] */;
    %598 = reshape(%595, newshape=[52]) /* ty=Tensor[(52), float64] */;
    %599 = @func_11927(%596, %597, %598) /* ty=(Tensor[(15, 14, 10), bool], Tensor[(13, 4, 1), float64], Tensor[(52), float64]) */;
    %600 = cast(%584, dtype="float32") /* ty=float32 */;
    %601 = cast(%var_15178, dtype="float32") /* ty=Tensor[(225, 10), float32] */;
    %602 = @func_13441() /* ty=Tensor[(648), uint8] */;
    %603 = right_shift(%585, %586) /* ty=Tensor[(225, 10), uint32] */;
    %604 = @func_9558(%591, %592) /* ty=Tensor[(9, 12, 6), bool] */;
    %605 = %599.1;
    %606 = power(%600, %601) /* ty=Tensor[(225, 10), float32] */;
    (%602, %var_15179, %603, %588, %604, %605, %var_15225, meta[relay.Constant][46] /* ty=Tensor[(52), float64] */, %606)
  };
  %607(%var_15275, %var_15276, %var_15277) /* ty=(Tensor[(648), uint8], Tensor[(84), int8], Tensor[(225, 10), uint32], Tensor[(648), uint8], Tensor[(9, 12, 6), bool], Tensor[(13, 4, 1), float64], Tensor[(2100), int32], Tensor[(52), float64], Tensor[(225, 10), float32]) */
}

def @func_14934() -> Tensor[(13, 4, 7), bool] {
  %608 = fn () -> Tensor[(13, 4, 7), bool] {
    @func_14714() /* ty=Tensor[(13, 4, 7), bool] */
  };
  %608() /* ty=Tensor[(13, 4, 7), bool] */
}

def @func_12545(%var_12522: Tensor[(660), float32]) -> (Tensor[(13, 4, 7), float64], Tensor[(15, 11, 4), float32], Tensor[(660), float32], Tensor[(8, 12, 16), float64], Tensor[(1536), float64]) {
  %609 = @func_12119() /* ty=(Tensor[(13, 4, 7), bool],) */;
  %610 = %609.0;
  %611 = cast(%610, dtype="float64") /* ty=Tensor[(13, 4, 7), float64] */;
  %612 = cast(%var_12522, dtype="float32") /* ty=Tensor[(660), float32] */;
  %613 = reshape(%612, newshape=[15, 11, 4]) /* ty=Tensor[(15, 11, 4), float32] */;
  %614 = @func_3020(%613) /* ty=(Tensor[(15, 11, 4), float32],) */;
  %615 = cast(meta[relay.Constant][47] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %616 = cast(meta[relay.Constant][47] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %617 = reshape(%615, newshape=[8, 12, 16]) /* ty=Tensor[(8, 12, 16), float64] */;
  %618 = reshape(%616, newshape=[8, 12, 16]) /* ty=Tensor[(8, 12, 16), float64] */;
  %619 = asin(%611) /* ty=Tensor[(13, 4, 7), float64] */;
  %620 = %614.0;
  %621 = @func_11204(%617, %618) /* ty=Tensor[(8, 12, 16), float64] */;
  (%619, %620, %var_12522, %621, meta[relay.Constant][47] /* ty=Tensor[(1536), float64] */)
}

def @func_14110(%var_14106: Tensor[(420), float32], %var_14107: Tensor[(1, 330), float32], %var_14108: Tensor[(36), int16], %var_14109: Tensor[(2250), float64]) -> (Tensor[(11, ?, 7), uint8], Tensor[(10, 7, 6), float32], Tensor[(420), float32], Tensor[(288), bool], Tensor[(84, 330), float32], Tensor[(84, 1), int8], Tensor[(36), int16], Tensor[(576), int16], Tensor[(2250), float64]) {
  @func_14104(%var_14106, %var_14107, %var_14108, %var_14109) /* ty=(Tensor[(11, ?, 7), uint8], Tensor[(10, 7, 6), float32], Tensor[(420), float32], Tensor[(288), bool], Tensor[(84, 330), float32], Tensor[(84, 1), int8], Tensor[(36), int16], Tensor[(576), int16], Tensor[(2250), float64]) */
}

def @func_14668() -> (Tensor[(2, 3, 14), float64],) {
  %622 = @func_12328() /* ty=(Tensor[(2, 3, 14), float64], Tensor[(9, 12, 6), bool], Tensor[(648), uint8]) */;
  %623 = %622.0;
  (%623,)
}

def @func_17176(%var_17174: Tensor[(13, 11, 13), bool]) -> (Tensor[(13, 4, 1), float64], Tensor[(8, 12, 16), float64], Tensor[(13, 11, 13), float64]) {
  @func_17173(%var_17174) /* ty=(Tensor[(13, 4, 1), float64], Tensor[(8, 12, 16), float64], Tensor[(13, 11, 13), float64]) */
}

def @func_13557(%var_13553: Tensor[(13, 4, 15), float64], %var_13554: Tensor[(84), float64], %var_13555: Tensor[(55, 6), float32], %var_13556: Tensor[(225, 10), float64]) -> (Tensor[(13, 4, 15), bool], Tensor[(288), bool], Tensor[(84), float64], Tensor[(1536), float64], Tensor[(55, 6), float32], Tensor[(225, 10), float64]) {
  @func_13551(%var_13553, %var_13554, %var_13555, %var_13556) /* ty=(Tensor[(13, 4, 15), bool], Tensor[(288), bool], Tensor[(84), float64], Tensor[(1536), float64], Tensor[(55, 6), float32], Tensor[(225, 10), float64]) */
}

def @func_14278() -> Tensor[(13, 4, 1), float64] {
  %624 = fn () -> Tensor[(13, 4, 1), float64] {
    @func_12059() /* ty=Tensor[(13, 4, 1), float64] */
  };
  %624() /* ty=Tensor[(13, 4, 1), float64] */
}

def @func_12268(%var_12242: Tensor[(27), float64], %var_12246: Tensor[(288), bool], %var_12247: Tensor[(2250), float64], %var_12262: Tensor[(52), float64]) -> (Tensor[(2, 3, 14), float64], Tensor[(3, 3, 3), float64], Tensor[(27), float64], Tensor[(288), bool], Tensor[(330), float32], Tensor[(288), bool], Tensor[(2250), float64], Tensor[(13, 4, 1), float64], Tensor[(52), float64]) {
  %625 = cast(%var_12242, dtype="float64") /* ty=Tensor[(27), float64] */;
  %626 = reshape(%625, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), float64] */;
  %627 = @func_3110(%626) /* ty=(Tensor[(3, 3, 3), float64],) */;
  %628 = cast(meta[relay.Constant][48] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %629 = cast(%var_12246, dtype="bool") /* ty=Tensor[(288), bool] */;
  %630 = cast(%var_12247, dtype="float64") /* ty=Tensor[(2250), float64] */;
  %631 = @func_12189() /* ty=Tensor[(2, 3, 14), float64] */;
  %632 = cast(%631, dtype="int8") /* ty=Tensor[(2, 3, 14), int8] */;
  %633 = reshape(%628, newshape=[15, 11, 2]) /* ty=Tensor[(15, 11, 2), float32] */;
  %634 = reshape(%629, newshape=[288]) /* ty=Tensor[(288), bool] */;
  %635 = reshape(%630, newshape=[2250]) /* ty=Tensor[(2250), float64] */;
  %636 = reshape(%632, newshape=[3, 28]) /* ty=Tensor[(3, 28), int8] */;
  %637 = @func_6698(%633, %634, %635, %636) /* ty=(Tensor[(288), bool], Tensor[(15, 10, 15), float64], Tensor[(2250), float64], Tensor[(3, 28), int8], Tensor[(15, 11, 2), int64]) */;
  %638 = cast(%var_12262, dtype="float64") /* ty=Tensor[(52), float64] */;
  %639 = reshape(%638, newshape=[13, 4, 1]) /* ty=Tensor[(13, 4, 1), float64] */;
  %640 = %627.0;
  %641 = %637.0;
  %642 = @func_10014(%639) /* ty=Tensor[(13, 4, 1), float64] */;
  (%631, %640, %var_12242, %641, meta[relay.Constant][48] /* ty=Tensor[(330), float32] */, %var_12246, %var_12247, %642, %var_12262)
}

def @func_14457() -> (Tensor[(13, 11, 13), bool],) {
  @func_14455() /* ty=(Tensor[(13, 11, 13), bool],) */
}

def @func_16438() -> (Tensor[(13, 4, 7), bool],) {
  %643 = @func_16155() /* ty=Tensor[(13, 4, 7), bool] */;
  (%643,)
}

def @func_15474(%var_15472: Tensor[(11, 7, 7), float32], %var_15473: Tensor[(1512), float32]) -> (Tensor[(11, 7, 7), float64], Tensor[(1, 6, 14), int8], Tensor[(26), float32], Tensor[(91, 4), float32], Tensor[(84), int8], Tensor[(288), bool], Tensor[(1512), float32]) {
  @func_15470(%var_15472, %var_15473) /* ty=(Tensor[(11, 7, 7), float64], Tensor[(1, 6, 14), int8], Tensor[(26), float32], Tensor[(91, 4), float32], Tensor[(84), int8], Tensor[(288), bool], Tensor[(1512), float32]) */
}

def @func_14714() -> Tensor[(13, 4, 7), bool] {
  %644 = @func_14435() /* ty=(Tensor[(11, ?, 7), bool], Tensor[(11, ?, 7), uint8], Tensor[(13, 4, 1), float64], Tensor[(2100), int32], Tensor[(1, 52), float64], Tensor[(13, 11, 13), bool], Tensor[(13, 4, 7), bool], Tensor[(11, ?, 7), float32]) */;
  %644.6
}

def @func_13717(%var_13716: Tensor[(13, 16, 1), uint32]) -> Tensor[(13, 16, 1), float32] {
  %650 = fn (%var_13691: Tensor[(13, 16, 1), uint32]) -> Tensor[(13, 16, 1), float32] {
    %645 = cast(meta[relay.Constant][49] /* ty=uint32 */, dtype="bool") /* ty=bool */;
    %646 = cast(%var_13691, dtype="bool") /* ty=Tensor[(13, 16, 1), bool] */;
    %647 = greater(%645, %646) /* ty=Tensor[(13, 16, 1), bool] */;
    %648 = cast(meta[relay.Constant][49] /* ty=uint32 */, dtype="float32") /* ty=float32 */;
    %649 = cast(%647, dtype="float32") /* ty=Tensor[(13, 16, 1), float32] */;
    floor_divide(%648, %649) /* ty=Tensor[(13, 16, 1), float32] */
  };
  %650(%var_13716) /* ty=Tensor[(13, 16, 1), float32] */
}

def @func_8683(%var_8681: Tensor[(4, 1, 11), float32]) -> (Tensor[(4, 1, 11), float32],) {
  @func_8680(%var_8681) /* ty=(Tensor[(4, 1, 11), float32],) */
}

def @func_15621() -> (Tensor[(648), uint8],) {
  %651 = @func_13441() /* ty=Tensor[(648), uint8] */;
  (%651,)
}

def @func_16795() -> Tensor[(2, 3, 14), uint32] {
  @func_16286() /* ty=Tensor[(2, 3, 14), uint32] */
}

def @func_15647() -> (Tensor[(13, 4, 7), bool],) {
  %652 = @func_14933() /* ty=Tensor[(13, 4, 7), bool] */;
  (%652,)
}

def @func_11733() -> Tensor[(2, 3, 14), float64] {
  %654 = fn () -> Tensor[(2, 3, 14), float64] {
    %653 = cast(meta[relay.Constant][50] /* ty=Tensor[(2, 3, 14), float64] */, dtype="float64") /* ty=Tensor[(2, 3, 14), float64] */;
    tan(%653) /* ty=Tensor[(2, 3, 14), float64] */
  };
  %654() /* ty=Tensor[(2, 3, 14), float64] */
}

def @func_12649(%var_12572: Tensor[(336), float32], %var_12581: Tensor[(77), float32]) -> (Tensor[(2, 3, 14), float64], Tensor[(7, 4, 12), float32], Tensor[(336), float32], Tensor[(2250), uint32], Tensor[(420), float32], Tensor[(330), float32], Tensor[(4, 72), bool], Tensor[(77), float32]) {
  %655 = cast(%var_12572, dtype="float32") /* ty=Tensor[(336), float32] */;
  %656 = @func_11732() /* ty=Tensor[(2, 3, 14), float64] */;
  %657 = cast(%656, dtype="int8") /* ty=Tensor[(2, 3, 14), int8] */;
  %658 = reshape(%655, newshape=[7, 4, 12]) /* ty=Tensor[(7, 4, 12), float32] */;
  %659 = reshape(%657, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %660 = @func_11016(%658, %659) /* ty=(Tensor[(7, 4, 12), float32], Tensor[(1, 6, 14), int8], Tensor[(26), float32], Tensor[(364), float32], Tensor[(84), int8]) */;
  %661 = cast(meta[relay.Constant][51] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
  %662 = cast(meta[relay.Constant][51] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
  %663 = cast(meta[relay.Constant][52] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %664 = cast(meta[relay.Constant][53] /* ty=Tensor[(4, 72), bool] */, dtype="bool") /* ty=Tensor[(4, 72), bool] */;
  %665 = cast(%656, dtype="int8") /* ty=Tensor[(2, 3, 14), int8] */;
  %666 = cast(%var_12581, dtype="float32") /* ty=Tensor[(77), float32] */;
  %667 = reshape(%661, newshape=[10, 7, 6]) /* ty=Tensor[(10, 7, 6), float32] */;
  %668 = reshape(%662, newshape=[10, 7, 6]) /* ty=Tensor[(10, 7, 6), float32] */;
  %669 = reshape(%663, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %670 = reshape(%664, newshape=[24, 12]) /* ty=Tensor[(24, 12), bool] */;
  %671 = reshape(%665, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %672 = reshape(%666, newshape=[1, 77]) /* ty=Tensor[(1, 77), float32] */;
  %673 = @func_7048(%667, %668, %669, %670, %671, %672) /* ty=(Tensor[(15, 11, 2), int64], Tensor[(330), float32], Tensor[(24, 12), bool], Tensor[(84), int8], Tensor[(2250), uint32], Tensor[(11, 1, 7), float32], Tensor[(1, 77), float32], Tensor[(10, 7, 6), float32]) */;
  %674 = %660.0;
  %675 = %673.4;
  (%656, %674, %var_12572, %675, meta[relay.Constant][51] /* ty=Tensor[(420), float32] */, meta[relay.Constant][52] /* ty=Tensor[(330), float32] */, meta[relay.Constant][53] /* ty=Tensor[(4, 72), bool] */, %var_12581)
}

def @func_15533() -> (Tensor[(13, 4, 1), float64],) {
  @func_15531() /* ty=(Tensor[(13, 4, 1), float64],) */
}

def @func_3843(%var_3826: Tensor[(12, 14, 9), float32], %var_3827: Tensor[(12, 14, 9), float32]) -> (Tensor[(12, 14, 9), float32], Tensor[(2250), float64], Tensor[(288), bool]) {
  %676 = cast(%var_3827, dtype="float32") /* ty=Tensor[(12, 14, 9), float32] */;
  %677 = shape_of(%var_3826, dtype="int32") /* ty=Tensor[(3), int32] */;
  %678 = cast(%var_3826, dtype="float32") /* ty=Tensor[(12, 14, 9), float32] */;
  %679 = dyn.reshape(%676, %677, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %680 = cast(meta[relay.Constant][54] /* ty=Tensor[(288), bool] */, dtype="bool") /* ty=Tensor[(288), bool] */;
  %681 = cast(meta[relay.Constant][54] /* ty=Tensor[(288), bool] */, dtype="bool") /* ty=Tensor[(288), bool] */;
  %682 = reshape(%680, newshape=[16, 9, 2]) /* ty=Tensor[(16, 9, 2), bool] */;
  %683 = reshape(%681, newshape=[16, 9, 2]) /* ty=Tensor[(16, 9, 2), bool] */;
  %684 = @func_2794(%682, %683) /* ty=(Tensor[(16, 9, 2), bool], Tensor[(2250), float64], Tensor[(84), int8], Tensor[(1, 6, 14), int8], int8, Tensor[(1, 6, 14), float64]) */;
  %685 = multiply(%678, %679) /* ty=Tensor[(12, 14, 9), float32] */;
  %686 = %684.1;
  (%685, %686, meta[relay.Constant][54] /* ty=Tensor[(288), bool] */)
}

def @func_956(%var_954: Tensor[(15, 10, 15), float64], %var_955: Tensor[(84), int8]) -> (Tensor[(15, 10, 15), float64], Tensor[(1, 6, 14), int8], int8, Tensor[(84), int8]) {
  @func_952(%var_954, %var_955) /* ty=(Tensor[(15, 10, 15), float64], Tensor[(1, 6, 14), int8], int8, Tensor[(84), int8]) */
}

def @func_16157() -> Tensor[(13, 4, 7), bool] {
  @func_16155() /* ty=Tensor[(13, 4, 7), bool] */
}

def @func_16638() -> (Tensor[(13, 11, 13), bool], Tensor[(660), float32], Tensor[(660), float32]) {
  %697 = fn () -> (Tensor[(13, 11, 13), bool], Tensor[(660), float32], Tensor[(660), float32]) {
    %687 = @func_13343() /* ty=Tensor[(13, 11, 13), float32] */;
    %688 = cast(meta[relay.Constant][55] /* ty=Tensor[(13, 11, 13), float32] */, dtype="bool") /* ty=Tensor[(13, 11, 13), bool] */;
    %689 = shape_of(%687, dtype="int32") /* ty=Tensor[(3), int32] */;
    %690 = cast(%687, dtype="bool") /* ty=Tensor[(13, 11, 13), bool] */;
    %691 = dyn.reshape(%688, %689, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %692 = cast(meta[relay.Constant][56] /* ty=Tensor[(660), float32] */, dtype="float32") /* ty=Tensor[(660), float32] */;
    %693 = reshape(%692, newshape=[660]) /* ty=Tensor[(660), float32] */;
    %694 = @func_12545(%693) /* ty=(Tensor[(13, 4, 7), float64], Tensor[(15, 11, 4), float32], Tensor[(660), float32], Tensor[(8, 12, 16), float64], Tensor[(1536), float64]) */;
    %695 = less(%690, %691) /* ty=Tensor[(13, 11, 13), bool] */;
    %696 = %694.2;
    (%695, %696, meta[relay.Constant][56] /* ty=Tensor[(660), float32] */)
  };
  %697() /* ty=(Tensor[(13, 11, 13), bool], Tensor[(660), float32], Tensor[(660), float32]) */
}

def @func_15531() -> (Tensor[(13, 4, 1), float64],) {
  %698 = @func_14277() /* ty=Tensor[(13, 4, 1), float64] */;
  (%698,)
}

def @func_17522(%var_17520: Tensor[(27), float64]) -> (Tensor[(13, 4, 7), bool], Tensor[(11, 1, 7), float32], Tensor[(15, 11, 4), float32], Tensor[(3, 3, 3), float64], Tensor[(27), float64]) {
  %699 = @func_16438() /* ty=(Tensor[(13, 4, 7), bool],) */;
  %700 = @func_13054() /* ty=(Tensor[(13, 4, 7), bool], Tensor[(11, 1, 7), float32], Tensor[(77), float32]) */;
  %701 = @func_14876() /* ty=(Tensor[(11, ?, 7), uint8], Tensor[(15, 11, 4), float32], Tensor[(660), float32]) */;
  %702 = cast(%var_17520, dtype="float64") /* ty=Tensor[(27), float64] */;
  %703 = reshape(%702, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), float64] */;
  %704 = @func_3110(%703) /* ty=(Tensor[(3, 3, 3), float64],) */;
  %705 = %699.0;
  %706 = %700.1;
  %707 = %701.1;
  %708 = %704.0;
  (%705, %706, %707, %708, %var_17520)
}

def @func_8093(%var_8084: Tensor[(2, 10, 15), uint16]) -> (Tensor[(2, 10, 15), bool],) {
  %709 = cast(meta[relay.Constant][57] /* ty=uint16 */, dtype="bool") /* ty=bool */;
  %710 = cast(%var_8084, dtype="bool") /* ty=Tensor[(2, 10, 15), bool] */;
  %711 = less_equal(%709, %710) /* ty=Tensor[(2, 10, 15), bool] */;
  (%711,)
}

def @func_14798(%var_14789: Tensor[(10, 13, 14), float32]) -> (Tensor[(10, 13, 14), float32],) {
  %712 = cast(%var_14789, dtype="float32") /* ty=Tensor[(10, 13, 14), float32] */;
  %713 = erf(%712) /* ty=Tensor[(10, 13, 14), float32] */;
  (%713,)
}

def @func_15987(%var_15985: Tensor[(225), float32]) -> (Tensor[(13, 11, 13), bool], Tensor[(75), float32], Tensor[(225), float32], Tensor[(13, 4, 7), float64], Tensor[(2, 3, 14), float64]) {
  @func_15984(%var_15985) /* ty=(Tensor[(13, 11, 13), bool], Tensor[(75), float32], Tensor[(225), float32], Tensor[(13, 4, 7), float64], Tensor[(2, 3, 14), float64]) */
}

def @func_15415() -> (Tensor[(13, 11, 13), bool],) {
  %714 = @func_14631() /* ty=Tensor[(13, 11, 13), bool] */;
  (%714,)
}

def @func_16155() -> Tensor[(13, 4, 7), bool] {
  @func_14572() /* ty=Tensor[(13, 4, 7), bool] */
}

def @func_12838() -> (Tensor[(13, 4, 7), bool], Tensor[(13, 11, 13), bool]) {
  %727 = fn () -> (Tensor[(13, 4, 7), bool], Tensor[(13, 11, 13), bool]) {
    %715 = @func_12119() /* ty=(Tensor[(13, 4, 7), bool],) */;
    %716 = @func_12746() /* ty=Tensor[(13, 11, 13), float32] */;
    %717 = cast(%716, dtype="float64") /* ty=Tensor[(13, 11, 13), float64] */;
    %718 = log(%717) /* ty=Tensor[(13, 11, 13), float64] */;
    %719 = cast(%718, dtype="float32") /* ty=Tensor[(13, 11, 13), float32] */;
    %720 = sinh(%719) /* ty=Tensor[(13, 11, 13), float32] */;
    %721 = cast(%716, dtype="bool") /* ty=Tensor[(13, 11, 13), bool] */;
    %722 = shape_of(%720, dtype="int32") /* ty=Tensor[(3), int32] */;
    %723 = cast(%720, dtype="bool") /* ty=Tensor[(13, 11, 13), bool] */;
    %724 = dyn.reshape(%721, %722, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %725 = %715.0;
    %726 = greater_equal(%723, %724) /* ty=Tensor[(13, 11, 13), bool] */;
    (%725, %726)
  };
  %727() /* ty=(Tensor[(13, 4, 7), bool], Tensor[(13, 11, 13), bool]) */
}

def @func_3022(%var_3021: Tensor[(15, 11, 4), float32]) -> (Tensor[(15, 11, 4), float32],) {
  %730 = fn (%var_3016: Tensor[(15, 11, 4), float32]) -> (Tensor[(15, 11, 4), float32],) {
    %728 = cast(%var_3016, dtype="float32") /* ty=Tensor[(15, 11, 4), float32] */;
    %729 = cosh(%728) /* ty=Tensor[(15, 11, 4), float32] */;
    (%729,)
  };
  %730(%var_3021) /* ty=(Tensor[(15, 11, 4), float32],) */
}

def @func_17471(%var_17470: Tensor[(1820, 1), float32]) -> (Tensor[(13, 4, 1), float64], Tensor[(9, 12, 6), bool], Tensor[(6, 108), uint8], Tensor[(1536), int16], Tensor[(1536), int16], Tensor[(10, 13, 14), float32], Tensor[(1820, 1), float32]) {
  %745 = fn (%var_17461: Tensor[(1820, 1), float32]) -> (Tensor[(13, 4, 1), float64], Tensor[(9, 12, 6), bool], Tensor[(6, 108), uint8], Tensor[(1536), int16], Tensor[(1536), int16], Tensor[(10, 13, 14), float32], Tensor[(1820, 1), float32]) {
    %731 = cast(meta[relay.Constant][58] /* ty=Tensor[(6, 108), uint8] */, dtype="uint8") /* ty=Tensor[(6, 108), uint8] */;
    %732 = cast(meta[relay.Constant][58] /* ty=Tensor[(6, 108), uint8] */, dtype="uint8") /* ty=Tensor[(6, 108), uint8] */;
    %733 = reshape(%731, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), uint8] */;
    %734 = reshape(%732, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), uint8] */;
    %735 = cast(meta[relay.Constant][59] /* ty=Tensor[(1536), int16] */, dtype="int16") /* ty=Tensor[(1536), int16] */;
    %736 = reshape(%735, newshape=[1536]) /* ty=Tensor[(1536), int16] */;
    %737 = @func_13122(%736) /* ty=(Tensor[(13, 11, 13), bool], Tensor[(3, 3, 3), float64], Tensor[(1536), int16]) */;
    %738 = cast(%var_17461, dtype="float32") /* ty=Tensor[(1820, 1), float32] */;
    %739 = reshape(%738, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), float32] */;
    %740 = @func_14798(%739) /* ty=(Tensor[(10, 13, 14), float32],) */;
    %741 = @func_17188() /* ty=Tensor[(13, 4, 1), float64] */;
    %742 = @func_9558(%733, %734) /* ty=Tensor[(9, 12, 6), bool] */;
    %743 = %737.2;
    %744 = %740.0;
    (%741, %742, meta[relay.Constant][58] /* ty=Tensor[(6, 108), uint8] */, %743, meta[relay.Constant][59] /* ty=Tensor[(1536), int16] */, %744, %var_17461)
  };
  %745(%var_17470) /* ty=(Tensor[(13, 4, 1), float64], Tensor[(9, 12, 6), bool], Tensor[(6, 108), uint8], Tensor[(1536), int16], Tensor[(1536), int16], Tensor[(10, 13, 14), float32], Tensor[(1820, 1), float32]) */
}

def @func_16127(%var_16124: Tensor[(336), float32], %var_16125: Tensor[(4, 72), float32], %var_16126: Tensor[(2250), float64]) -> (Tensor[(13, 11, 13), bool], Tensor[(336), float32], Tensor[(77), float32], Tensor[(2, 3, 14), float64], Tensor[(1, 6, 14), int8], Tensor[(2250), float64], Tensor[(13, 11, 13), bool], Tensor[(4, 72), uint8]) {
  @func_16122(%var_16124, %var_16125, %var_16126) /* ty=(Tensor[(13, 11, 13), bool], Tensor[(336), float32], Tensor[(77), float32], Tensor[(2, 3, 14), float64], Tensor[(1, 6, 14), int8], Tensor[(2250), float64], Tensor[(13, 11, 13), bool], Tensor[(4, 72), uint8]) */
}

def @func_13441() -> Tensor[(648), uint8] {
  %746 = @func_12328() /* ty=(Tensor[(2, 3, 14), float64], Tensor[(9, 12, 6), bool], Tensor[(648), uint8]) */;
  %746.2
}

def @func_14574() -> Tensor[(13, 4, 7), bool] {
  @func_14572() /* ty=Tensor[(13, 4, 7), bool] */
}

def @func_14437() -> (Tensor[(11, ?, 7), bool], Tensor[(11, ?, 7), uint8], Tensor[(13, 4, 1), float64], Tensor[(2100), int32], Tensor[(1, 52), float64], Tensor[(13, 11, 13), bool], Tensor[(13, 4, 7), bool], Tensor[(11, ?, 7), float32]) {
  @func_14435() /* ty=(Tensor[(11, ?, 7), bool], Tensor[(11, ?, 7), uint8], Tensor[(13, 4, 1), float64], Tensor[(2100), int32], Tensor[(1, 52), float64], Tensor[(13, 11, 13), bool], Tensor[(13, 4, 7), bool], Tensor[(11, ?, 7), float32]) */
}

def @func_14801(%var_14799: Tensor[(10, 13, 14), float32]) -> (Tensor[(10, 13, 14), float32],) {
  @func_14798(%var_14799) /* ty=(Tensor[(10, 13, 14), float32],) */
}

def @func_16325() -> Tensor[(3, 15, 15), float32] {
  %748 = fn () -> Tensor[(3, 15, 15), float32] {
    %747 = @func_13830() /* ty=(Tensor[(3, 15, 15), float32],) */;
    %747.0
  };
  %748() /* ty=Tensor[(3, 15, 15), float32] */
}

def @func_12746() -> Tensor[(13, 11, 13), float32] {
  %749 = cast(meta[relay.Constant][60] /* ty=Tensor[(13, 11, 13), float32] */, dtype="float32") /* ty=Tensor[(13, 11, 13), float32] */;
  erf(%749) /* ty=Tensor[(13, 11, 13), float32] */
}

def @func_13761() -> (Tensor[(648), uint8],) {
  %752 = fn () -> (Tensor[(648), uint8],) {
    %750 = @func_12328() /* ty=(Tensor[(2, 3, 14), float64], Tensor[(9, 12, 6), bool], Tensor[(648), uint8]) */;
    %751 = %750.2;
    (%751,)
  };
  %752() /* ty=(Tensor[(648), uint8],) */
}

def @func_16480() -> (Tensor[(13, 4, 1), float64], Tensor[(52), float64]) {
  %756 = fn () -> (Tensor[(13, 4, 1), float64], Tensor[(52), float64]) {
    %753 = @func_12028() /* ty=(Tensor[(2, 3, 14), float64], Tensor[(13, 4, 1), float64], Tensor[(52), float64]) */;
    %754 = @func_14277() /* ty=Tensor[(13, 4, 1), float64] */;
    %755 = %753.2;
    (%754, %755)
  };
  %756() /* ty=(Tensor[(13, 4, 1), float64], Tensor[(52), float64]) */
}

def @func_12061() -> Tensor[(13, 4, 1), float64] {
  @func_12059() /* ty=Tensor[(13, 4, 1), float64] */
}

def @func_5280(%var_5278: Tensor[(1, 364), float32], %var_5279: Tensor[(27), float64]) -> (Tensor[(14, 13, 8), float32], Tensor[(13, 14, 2), float32], Tensor[(26, 1), float32], Tensor[(1, 364), float32], Tensor[(3, 28), int8], Tensor[(3, 3, 3), float64], Tensor[(27), float64], Tensor[(84), int8], Tensor[(2250), float64]) {
  %777 = fn (%var_5225: Tensor[(1, 364), float32], %var_5253: Tensor[(27), float64]) -> (Tensor[(14, 13, 8), float32], Tensor[(13, 14, 2), float32], Tensor[(26, 1), float32], Tensor[(1, 364), float32], Tensor[(3, 28), int8], Tensor[(3, 3, 3), float64], Tensor[(27), float64], Tensor[(84), int8], Tensor[(2250), float64]) {
    %757 = cast(meta[relay.Constant][61] /* ty=Tensor[(14, 13, 8), float32] */, dtype="float32") /* ty=Tensor[(14, 13, 8), float32] */;
    %758 = cast(meta[relay.Constant][62] /* ty=Tensor[(26, 1), float32] */, dtype="float32") /* ty=Tensor[(26, 1), float32] */;
    %759 = cast(%var_5225, dtype="float32") /* ty=Tensor[(1, 364), float32] */;
    %760 = cast(meta[relay.Constant][63] /* ty=Tensor[(3, 28), int8] */, dtype="int8") /* ty=Tensor[(3, 28), int8] */;
    %761 = reshape(%758, newshape=[13, 1, 2]) /* ty=Tensor[(13, 1, 2), float32] */;
    %762 = reshape(%759, newshape=[13, 14, 2]) /* ty=Tensor[(13, 14, 2), float32] */;
    %763 = reshape(%760, newshape=[84]) /* ty=Tensor[(84), int8] */;
    %764 = @func_1873(%761, %762, %763) /* ty=(Tensor[(13, 14, 2), float32], Tensor[(1, 6, 14), int8], int8, Tensor[(84), int8]) */;
    %765 = cast(%var_5253, dtype="float64") /* ty=Tensor[(27), float64] */;
    %766 = reshape(%765, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), float64] */;
    %767 = @func_3110(%766) /* ty=(Tensor[(3, 3, 3), float64],) */;
    %768 = cast(meta[relay.Constant][64] /* ty=Tensor[(2250), float64] */, dtype="float64") /* ty=Tensor[(2250), float64] */;
    %769 = cast(meta[relay.Constant][63] /* ty=Tensor[(3, 28), int8] */, dtype="int8") /* ty=Tensor[(3, 28), int8] */;
    %770 = reshape(%768, newshape=[15, 10, 15]) /* ty=Tensor[(15, 10, 15), float64] */;
    %771 = reshape(%769, newshape=[84]) /* ty=Tensor[(84), int8] */;
    %772 = @func_952(%770, %771) /* ty=(Tensor[(15, 10, 15), float64], Tensor[(1, 6, 14), int8], int8, Tensor[(84), int8]) */;
    %773 = atan(%757) /* ty=Tensor[(14, 13, 8), float32] */;
    %774 = %764.0;
    %775 = %767.0;
    %776 = %772.3;
    (%773, %774, meta[relay.Constant][62] /* ty=Tensor[(26, 1), float32] */, %var_5225, meta[relay.Constant][63] /* ty=Tensor[(3, 28), int8] */, %775, %var_5253, %776, meta[relay.Constant][64] /* ty=Tensor[(2250), float64] */)
  };
  %777(%var_5278, %var_5279) /* ty=(Tensor[(14, 13, 8), float32], Tensor[(13, 14, 2), float32], Tensor[(26, 1), float32], Tensor[(1, 364), float32], Tensor[(3, 28), int8], Tensor[(3, 3, 3), float64], Tensor[(27), float64], Tensor[(84), int8], Tensor[(2250), float64]) */
}

def @func_14994() -> (Tensor[(13, 4, 1), float64], Tensor[(13, 11, 13), float32], Tensor[(13, 4, 7), bool]) {
  %778 = @func_13311() /* ty=(Tensor[(13, 11, 13), float32],) */;
  %779 = @func_12059() /* ty=Tensor[(13, 4, 1), float64] */;
  %780 = %778.0;
  %781 = @func_14714() /* ty=Tensor[(13, 4, 7), bool] */;
  (%779, %780, %781)
}

def @func_14632() -> Tensor[(13, 11, 13), bool] {
  %783 = fn () -> Tensor[(13, 11, 13), bool] {
    %782 = @func_14616() /* ty=(Tensor[(13, 11, 13), bool],) */;
    %782.0
  };
  %783() /* ty=Tensor[(13, 11, 13), bool] */
}

def @func_2797(%var_2795: Tensor[(16, 9, 2), bool], %var_2796: Tensor[(16, 9, 2), bool]) -> (Tensor[(16, 9, 2), bool], Tensor[(2250), float64], Tensor[(84), int8], Tensor[(1, 6, 14), int8], int8, Tensor[(1, 6, 14), float64]) {
  %803 = fn (%var_2760: Tensor[(16, 9, 2), bool], %var_2761: Tensor[(16, 9, 2), bool]) -> (Tensor[(16, 9, 2), bool], Tensor[(2250), float64], Tensor[(84), int8], Tensor[(1, 6, 14), int8], int8, Tensor[(1, 6, 14), float64]) {
    %784 = cast(%var_2761, dtype="bool") /* ty=Tensor[(16, 9, 2), bool] */;
    %785 = shape_of(%var_2760, dtype="int32") /* ty=Tensor[(3), int32] */;
    %786 = cast(%var_2760, dtype="bool") /* ty=Tensor[(16, 9, 2), bool] */;
    %787 = dyn.reshape(%784, %785, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %788 = cast(meta[relay.Constant][67] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %789 = cast(meta[relay.Constant][66] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
    %790 = reshape(%788, newshape=[]) /* ty=int8 */;
    %791 = reshape(%789, newshape=[1, 6, 14]) /* ty=Tensor[(1, 6, 14), int8] */;
    %792 = @func_538(%790, %791) /* ty=(Tensor[(1, 6, 14), int8],) */;
    %793 = cast(meta[relay.Constant][65] /* ty=Tensor[(2250), float64] */, dtype="float64") /* ty=Tensor[(2250), float64] */;
    %794 = cast(meta[relay.Constant][66] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
    %795 = reshape(%793, newshape=[15, 10, 15]) /* ty=Tensor[(15, 10, 15), float64] */;
    %796 = reshape(%794, newshape=[84]) /* ty=Tensor[(84), int8] */;
    %797 = @func_952(%795, %796) /* ty=(Tensor[(15, 10, 15), float64], Tensor[(1, 6, 14), int8], int8, Tensor[(84), int8]) */;
    %798 = %797.1;
    %799 = cast(%798, dtype="float64") /* ty=Tensor[(1, 6, 14), float64] */;
    %800 = logical_and(%786, %787) /* ty=Tensor[(16, 9, 2), bool] */;
    %801 = %792.0;
    %802 = log10(%799) /* ty=Tensor[(1, 6, 14), float64] */;
    (%800, meta[relay.Constant][65] /* ty=Tensor[(2250), float64] */, meta[relay.Constant][66] /* ty=Tensor[(84), int8] */, %801, meta[relay.Constant][67] /* ty=int8 */, %802)
  };
  %803(%var_2795, %var_2796) /* ty=(Tensor[(16, 9, 2), bool], Tensor[(2250), float64], Tensor[(84), int8], Tensor[(1, 6, 14), int8], int8, Tensor[(1, 6, 14), float64]) */
}

def @func_16797() -> Tensor[(2, 3, 14), uint32] {
  @func_16795() /* ty=Tensor[(2, 3, 14), uint32] */
}

def @func_952(%var_942: Tensor[(15, 10, 15), float64], %var_947: Tensor[(84), int8]) -> (Tensor[(15, 10, 15), float64], Tensor[(1, 6, 14), int8], int8, Tensor[(84), int8]) {
  %804 = cast(%var_942, dtype="float64") /* ty=Tensor[(15, 10, 15), float64] */;
  %805 = cast(meta[relay.Constant][68] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %806 = cast(%var_947, dtype="int8") /* ty=Tensor[(84), int8] */;
  %807 = reshape(%805, newshape=[]) /* ty=int8 */;
  %808 = reshape(%806, newshape=[1, 6, 14]) /* ty=Tensor[(1, 6, 14), int8] */;
  %809 = @func_538(%807, %808) /* ty=(Tensor[(1, 6, 14), int8],) */;
  %810 = atan(%804) /* ty=Tensor[(15, 10, 15), float64] */;
  %811 = %809.0;
  (%810, %811, meta[relay.Constant][68] /* ty=int8 */, %var_947)
}

def @func_12653(%var_12651: Tensor[(336), float32], %var_12652: Tensor[(77), float32]) -> (Tensor[(2, 3, 14), float64], Tensor[(7, 4, 12), float32], Tensor[(336), float32], Tensor[(2250), uint32], Tensor[(420), float32], Tensor[(330), float32], Tensor[(4, 72), bool], Tensor[(77), float32]) {
  @func_12649(%var_12651, %var_12652) /* ty=(Tensor[(2, 3, 14), float64], Tensor[(7, 4, 12), float32], Tensor[(336), float32], Tensor[(2250), uint32], Tensor[(420), float32], Tensor[(330), float32], Tensor[(4, 72), bool], Tensor[(77), float32]) */
}

def @func_3113(%var_3111: Tensor[(3, 3, 3), float64]) -> (Tensor[(3, 3, 3), float64],) {
  @func_3110(%var_3111) /* ty=(Tensor[(3, 3, 3), float64],) */
}

def @func_12083(%var_12081: Tensor[(208), float32]) -> (Tensor[(13, 4, 1), float64], Tensor[(1536), float64], Tensor[(208), float32]) {
  @func_12080(%var_12081) /* ty=(Tensor[(13, 4, 1), float64], Tensor[(1536), float64], Tensor[(208), float32]) */
}

def @func_7795(%var_7758: Tensor[(1, 9, 4), int16], %var_7759: Tensor[(16, 9, 4), int16], %var_7771: Tensor[(2250), float64]) -> (Tensor[(16, 9, 4), int16], Tensor[(1, 6, 14), int8], Tensor[(2250), float64], Tensor[(84, 1), int8], int8) {
  %812 = cast(%var_7758, dtype="int16") /* ty=Tensor[(1, 9, 4), int16] */;
  %813 = cast(%var_7759, dtype="int16") /* ty=Tensor[(16, 9, 4), int16] */;
  %814 = cast(%var_7771, dtype="float64") /* ty=Tensor[(2250), float64] */;
  %815 = cast(meta[relay.Constant][69] /* ty=Tensor[(84, 1), int8] */, dtype="int8") /* ty=Tensor[(84, 1), int8] */;
  %816 = reshape(%814, newshape=[15, 10, 15]) /* ty=Tensor[(15, 10, 15), float64] */;
  %817 = reshape(%815, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %818 = @func_952(%816, %817) /* ty=(Tensor[(15, 10, 15), float64], Tensor[(1, 6, 14), int8], int8, Tensor[(84), int8]) */;
  %819 = cast(%var_7771, dtype="float64") /* ty=Tensor[(2250), float64] */;
  %820 = cast(meta[relay.Constant][69] /* ty=Tensor[(84, 1), int8] */, dtype="int8") /* ty=Tensor[(84, 1), int8] */;
  %821 = reshape(%819, newshape=[15, 10, 15]) /* ty=Tensor[(15, 10, 15), float64] */;
  %822 = reshape(%820, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %823 = @func_952(%821, %822) /* ty=(Tensor[(15, 10, 15), float64], Tensor[(1, 6, 14), int8], int8, Tensor[(84), int8]) */;
  %824 = left_shift(%812, %813) /* ty=Tensor[(16, 9, 4), int16] */;
  %825 = %818.1;
  %826 = %823.2;
  (%824, %825, %var_7771, meta[relay.Constant][69] /* ty=Tensor[(84, 1), int8] */, %826)
}

def @func_14156(%var_14154: Tensor[(420), float32], %var_14155: Tensor[(36), int16]) -> (Tensor[(3, 15, 15), float32], Tensor[(84, 1), int8], Tensor[(420), float32], Tensor[(330), float32], Tensor[(36), int16], Tensor[(1125, 2), float64]) {
  %839 = fn (%var_14140: Tensor[(420), float32], %var_14142: Tensor[(36), int16]) -> (Tensor[(3, 15, 15), float32], Tensor[(84, 1), int8], Tensor[(420), float32], Tensor[(330), float32], Tensor[(36), int16], Tensor[(1125, 2), float64]) {
    %827 = @func_13830() /* ty=(Tensor[(3, 15, 15), float32],) */;
    %828 = cast(%var_14140, dtype="float32") /* ty=Tensor[(420), float32] */;
    %829 = cast(meta[relay.Constant][70] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
    %830 = cast(%var_14142, dtype="int16") /* ty=Tensor[(36), int16] */;
    %831 = cast(meta[relay.Constant][71] /* ty=Tensor[(1125, 2), float64] */, dtype="float64") /* ty=Tensor[(1125, 2), float64] */;
    %832 = reshape(%828, newshape=[420]) /* ty=Tensor[(420), float32] */;
    %833 = reshape(%829, newshape=[1, 330]) /* ty=Tensor[(1, 330), float32] */;
    %834 = reshape(%830, newshape=[36]) /* ty=Tensor[(36), int16] */;
    %835 = reshape(%831, newshape=[2250]) /* ty=Tensor[(2250), float64] */;
    %836 = @func_14104(%832, %833, %834, %835) /* ty=(Tensor[(11, ?, 7), uint8], Tensor[(10, 7, 6), float32], Tensor[(420), float32], Tensor[(288), bool], Tensor[(84, 330), float32], Tensor[(84, 1), int8], Tensor[(36), int16], Tensor[(576), int16], Tensor[(2250), float64]) */;
    %837 = %827.0;
    %838 = %836.5;
    (%837, %838, %var_14140, meta[relay.Constant][70] /* ty=Tensor[(330), float32] */, %var_14142, meta[relay.Constant][71] /* ty=Tensor[(1125, 2), float64] */)
  };
  %839(%var_14154, %var_14155) /* ty=(Tensor[(3, 15, 15), float32], Tensor[(84, 1), int8], Tensor[(420), float32], Tensor[(330), float32], Tensor[(36), int16], Tensor[(1125, 2), float64]) */
}

def @func_12080(%var_12078: Tensor[(208), float32]) -> (Tensor[(13, 4, 1), float64], Tensor[(1536), float64], Tensor[(208), float32]) {
  %840 = cast(%var_12078, dtype="float32") /* ty=Tensor[(208), float32] */;
  %841 = reshape(%840, newshape=[8, 13, 2]) /* ty=Tensor[(8, 13, 2), float32] */;
  %842 = @func_11483(%841) /* ty=(Tensor[(8, 13, 2), float32], Tensor[(8, 12, 16), float64], Tensor[(1536), float64]) */;
  %843 = @func_12059() /* ty=Tensor[(13, 4, 1), float64] */;
  %844 = %842.2;
  (%843, %844, %var_12078)
}

def @func_12466(%var_12460: Tensor[(2, 3, 14), float64], %var_12461: Tensor[(1536), float64], %var_12462: Tensor[(330), float32], %var_12463: Tensor[(1125, 2), float64], %var_12464: Tensor[(1125, 2), float64], %var_12465: Tensor[(1125, 2), int16]) -> (Tensor[(2, 3, 14), int32], Tensor[(2, 3, 14), float64], Tensor[(8, 12, 16), float64], Tensor[(1536), float64], Tensor[(15, 10, 15), float64], Tensor[(330), float32], Tensor[(288), bool], Tensor[(2, 3, 14), uint64], Tensor[(2, 3, 14), float64], Tensor[(1125, 2), bool], Tensor[(648), uint8], Tensor[(2, 10, 15), bool], Tensor[(300), uint16]) {
  @func_12458(%var_12460, %var_12461, %var_12462, %var_12463, %var_12464, %var_12465) /* ty=(Tensor[(2, 3, 14), int32], Tensor[(2, 3, 14), float64], Tensor[(8, 12, 16), float64], Tensor[(1536), float64], Tensor[(15, 10, 15), float64], Tensor[(330), float32], Tensor[(288), bool], Tensor[(2, 3, 14), uint64], Tensor[(2, 3, 14), float64], Tensor[(1125, 2), bool], Tensor[(648), uint8], Tensor[(2, 10, 15), bool], Tensor[(300), uint16]) */
}

def @func_6703(%var_6699: Tensor[(15, 11, 2), float32], %var_6700: Tensor[(288), bool], %var_6701: Tensor[(2250), float64], %var_6702: Tensor[(3, 28), int8]) -> (Tensor[(288), bool], Tensor[(15, 10, 15), float64], Tensor[(2250), float64], Tensor[(3, 28), int8], Tensor[(15, 11, 2), int64]) {
  %862 = fn (%var_6625: Tensor[(15, 11, 2), float32], %var_6635: Tensor[(288), bool], %var_6686: Tensor[(2250), float64], %var_6687: Tensor[(3, 28), int8]) -> (Tensor[(288), bool], Tensor[(15, 10, 15), float64], Tensor[(2250), float64], Tensor[(3, 28), int8], Tensor[(15, 11, 2), int64]) {
    %845 = cast(%var_6686, dtype="float64") /* ty=Tensor[(2250), float64] */;
    %846 = cast(%var_6687, dtype="int8") /* ty=Tensor[(3, 28), int8] */;
    %847 = reshape(%845, newshape=[15, 10, 15]) /* ty=Tensor[(15, 10, 15), float64] */;
    %848 = reshape(%846, newshape=[84]) /* ty=Tensor[(84), int8] */;
    %849 = @func_952(%847, %848) /* ty=(Tensor[(15, 10, 15), float64], Tensor[(1, 6, 14), int8], int8, Tensor[(84), int8]) */;
    %850 = cast(%var_6625, dtype="float32") /* ty=Tensor[(15, 11, 2), float32] */;
    %851 = exp(%850) /* ty=Tensor[(15, 11, 2), float32] */;
    %852 = cast(%var_6635, dtype="bool") /* ty=Tensor[(288), bool] */;
    %853 = cast(%var_6635, dtype="bool") /* ty=Tensor[(288), bool] */;
    %854 = reshape(%852, newshape=[16, 9, 2]) /* ty=Tensor[(16, 9, 2), bool] */;
    %855 = reshape(%853, newshape=[16, 9, 2]) /* ty=Tensor[(16, 9, 2), bool] */;
    %856 = @func_2794(%854, %855) /* ty=(Tensor[(16, 9, 2), bool], Tensor[(2250), float64], Tensor[(84), int8], Tensor[(1, 6, 14), int8], int8, Tensor[(1, 6, 14), float64]) */;
    %857 = %856.4;
    %858 = cast(%851, dtype="int64") /* ty=Tensor[(15, 11, 2), int64] */;
    %859 = cast(%857, dtype="int64") /* ty=int64 */;
    %860 = %849.0;
    %861 = logical_xor(%858, %859) /* ty=Tensor[(15, 11, 2), int64] */;
    (%var_6635, %860, %var_6686, %var_6687, %861)
  };
  %862(%var_6699, %var_6700, %var_6701, %var_6702) /* ty=(Tensor[(288), bool], Tensor[(15, 10, 15), float64], Tensor[(2250), float64], Tensor[(3, 28), int8], Tensor[(15, 11, 2), int64]) */
}

def @func_14104(%var_14080: Tensor[(420), float32], %var_14081: Tensor[(1, 330), float32], %var_14100: Tensor[(36), int16], %var_14102: Tensor[(2250), float64]) -> (Tensor[(11, ?, 7), uint8], Tensor[(10, 7, 6), float32], Tensor[(420), float32], Tensor[(288), bool], Tensor[(84, 330), float32], Tensor[(84, 1), int8], Tensor[(36), int16], Tensor[(576), int16], Tensor[(2250), float64]) {
  %863 = cast(%var_14080, dtype="float32") /* ty=Tensor[(420), float32] */;
  %864 = cast(%var_14080, dtype="float32") /* ty=Tensor[(420), float32] */;
  %865 = cast(%var_14081, dtype="float32") /* ty=Tensor[(1, 330), float32] */;
  %866 = cast(meta[relay.Constant][72] /* ty=Tensor[(288), bool] */, dtype="bool") /* ty=Tensor[(288), bool] */;
  %867 = cast(meta[relay.Constant][73] /* ty=Tensor[(84, 1), int8] */, dtype="int8") /* ty=Tensor[(84, 1), int8] */;
  %868 = @func_14056() /* ty=Tensor[(11, ?, 7), uint8] */;
  %869 = cast(%868, dtype="float32") /* ty=Tensor[(11, ?, 7), float32] */;
  %870 = reshape(%863, newshape=[10, 7, 6]) /* ty=Tensor[(10, 7, 6), float32] */;
  %871 = reshape(%864, newshape=[10, 7, 6]) /* ty=Tensor[(10, 7, 6), float32] */;
  %872 = reshape(%865, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %873 = reshape(%866, newshape=[24, 12]) /* ty=Tensor[(24, 12), bool] */;
  %874 = reshape(%867, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %875 = reshape(%869, newshape=[1, 77]) /* ty=Tensor[(1, 77), float32] */;
  %876 = @func_7048(%870, %871, %872, %873, %874, %875) /* ty=(Tensor[(15, 11, 2), int64], Tensor[(330), float32], Tensor[(24, 12), bool], Tensor[(84), int8], Tensor[(2250), uint32], Tensor[(11, 1, 7), float32], Tensor[(1, 77), float32], Tensor[(10, 7, 6), float32]) */;
  %877 = cast(%var_14081, dtype="float32") /* ty=Tensor[(1, 330), float32] */;
  %878 = cast(meta[relay.Constant][73] /* ty=Tensor[(84, 1), int8] */, dtype="float32") /* ty=Tensor[(84, 1), float32] */;
  %879 = cast(%var_14100, dtype="int16") /* ty=Tensor[(36), int16] */;
  %880 = cast(meta[relay.Constant][74] /* ty=Tensor[(576), int16] */, dtype="int16") /* ty=Tensor[(576), int16] */;
  %881 = cast(%var_14102, dtype="float64") /* ty=Tensor[(2250), float64] */;
  %882 = reshape(%879, newshape=[1, 9, 4]) /* ty=Tensor[(1, 9, 4), int16] */;
  %883 = reshape(%880, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), int16] */;
  %884 = reshape(%881, newshape=[2250]) /* ty=Tensor[(2250), float64] */;
  %885 = @func_7795(%882, %883, %884) /* ty=(Tensor[(16, 9, 4), int16], Tensor[(1, 6, 14), int8], Tensor[(2250), float64], Tensor[(84, 1), int8], int8) */;
  %886 = %876.7;
  %887 = floor_divide(%877, %878) /* ty=Tensor[(84, 330), float32] */;
  %888 = %885.3;
  (%868, %886, %var_14080, meta[relay.Constant][72] /* ty=Tensor[(288), bool] */, %887, %888, %var_14100, meta[relay.Constant][74] /* ty=Tensor[(576), int16] */, %var_14102)
}

def @func_14058() -> Tensor[(11, ?, 7), uint8] {
  @func_14056() /* ty=Tensor[(11, ?, 7), uint8] */
}

def @func_14996() -> (Tensor[(13, 4, 1), float64], Tensor[(13, 11, 13), float32], Tensor[(13, 4, 7), bool]) {
  @func_14994() /* ty=(Tensor[(13, 4, 1), float64], Tensor[(13, 11, 13), float32], Tensor[(13, 4, 7), bool]) */
}

def @func_12191() -> Tensor[(2, 3, 14), float64] {
  @func_12189() /* ty=Tensor[(2, 3, 14), float64] */
}

def @func_12059() -> Tensor[(13, 4, 1), float64] {
  %889 = @func_12028() /* ty=(Tensor[(2, 3, 14), float64], Tensor[(13, 4, 1), float64], Tensor[(52), float64]) */;
  %889.1
}

def @func_13344() -> Tensor[(13, 11, 13), float32] {
  %890 = fn () -> Tensor[(13, 11, 13), float32] {
    @func_12746() /* ty=Tensor[(13, 11, 13), float32] */
  };
  %890() /* ty=Tensor[(13, 11, 13), float32] */
}

def @func_9561(%var_9559: Tensor[(9, 12, 6), uint8], %var_9560: Tensor[(9, 12, 6), uint8]) -> Tensor[(9, 12, 6), bool] {
  %900 = fn (%var_9547: Tensor[(9, 12, 6), uint8], %var_9548: Tensor[(9, 12, 6), uint8]) -> Tensor[(9, 12, 6), bool] {
    %891 = cast(%var_9548, dtype="uint8") /* ty=Tensor[(9, 12, 6), uint8] */;
    %892 = shape_of(%var_9547, dtype="int32") /* ty=Tensor[(3), int32] */;
    %893 = cast(%var_9547, dtype="uint8") /* ty=Tensor[(9, 12, 6), uint8] */;
    %894 = dyn.reshape(%891, %892, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %895 = multiply(%893, %894) /* ty=Tensor[(9, 12, 6), uint8] */;
    %896 = cast(%895, dtype="bool") /* ty=Tensor[(9, 12, 6), bool] */;
    %897 = shape_of(%var_9548, dtype="int32") /* ty=Tensor[(3), int32] */;
    %898 = cast(%var_9548, dtype="bool") /* ty=Tensor[(9, 12, 6), bool] */;
    %899 = dyn.reshape(%896, %897, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    not_equal(%898, %899) /* ty=Tensor[(9, 12, 6), bool] */
  };
  %900(%var_9559, %var_9560) /* ty=Tensor[(9, 12, 6), bool] */
}

def @func_16122(%var_16062: Tensor[(336), float32], %var_16076: Tensor[(4, 72), float32], %var_16086: Tensor[(2250), float64]) -> (Tensor[(13, 11, 13), bool], Tensor[(336), float32], Tensor[(77), float32], Tensor[(2, 3, 14), float64], Tensor[(1, 6, 14), int8], Tensor[(2250), float64], Tensor[(13, 11, 13), bool], Tensor[(4, 72), uint8]) {
  %901 = @func_13619() /* ty=(Tensor[(2, 3, 14), float64], Tensor[(3, 15, 15), float32], Tensor[(5, 135), float32]) */;
  %902 = cast(%var_16086, dtype="float64") /* ty=Tensor[(2250), float64] */;
  %903 = %901.0;
  %904 = cast(%903, dtype="int8") /* ty=Tensor[(2, 3, 14), int8] */;
  %905 = reshape(%902, newshape=[15, 10, 15]) /* ty=Tensor[(15, 10, 15), float64] */;
  %906 = reshape(%904, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %907 = @func_952(%905, %906) /* ty=(Tensor[(15, 10, 15), float64], Tensor[(1, 6, 14), int8], int8, Tensor[(84), int8]) */;
  %908 = @func_14455() /* ty=(Tensor[(13, 11, 13), bool],) */;
  %909 = cast(%var_16062, dtype="float32") /* ty=Tensor[(336), float32] */;
  %910 = cast(meta[relay.Constant][75] /* ty=Tensor[(77), float32] */, dtype="float32") /* ty=Tensor[(77), float32] */;
  %911 = reshape(%909, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %912 = reshape(%910, newshape=[77]) /* ty=Tensor[(77), float32] */;
  %913 = @func_12649(%911, %912) /* ty=(Tensor[(2, 3, 14), float64], Tensor[(7, 4, 12), float32], Tensor[(336), float32], Tensor[(2250), uint32], Tensor[(420), float32], Tensor[(330), float32], Tensor[(4, 72), bool], Tensor[(77), float32]) */;
  %914 = %913.6;
  %915 = cast(%914, dtype="float32") /* ty=Tensor[(4, 72), float32] */;
  %916 = sin(%915) /* ty=Tensor[(4, 72), float32] */;
  %917 = cast(%var_16076, dtype="int8") /* ty=Tensor[(4, 72), int8] */;
  %918 = shape_of(%916, dtype="int32") /* ty=Tensor[(2), int32] */;
  %919 = cast(%916, dtype="int8") /* ty=Tensor[(4, 72), int8] */;
  %920 = dyn.reshape(%917, %918, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %921 = logical_xor(%919, %920) /* ty=Tensor[(4, 72), int8] */;
  %922 = cast(%914, dtype="uint8") /* ty=Tensor[(4, 72), uint8] */;
  %923 = shape_of(%921, dtype="int32") /* ty=Tensor[(2), int32] */;
  %924 = cast(%921, dtype="uint8") /* ty=Tensor[(4, 72), uint8] */;
  %925 = dyn.reshape(%922, %923, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %926 = @func_15166() /* ty=Tensor[(13, 11, 13), bool] */;
  %927 = %907.1;
  %928 = %908.0;
  %929 = subtract(%924, %925) /* ty=Tensor[(4, 72), uint8] */;
  (%926, %var_16062, meta[relay.Constant][75] /* ty=Tensor[(77), float32] */, %903, %927, %var_16086, %928, %929)
}

def @func_16536() -> Tensor[(2, 3, 14), float64] {
  %930 = @func_15509() /* ty=(Tensor[(2, 3, 14), float64],) */;
  %930.0
}

def @func_17384() -> (Tensor[(2, 3, 14), float64],) {
  @func_17382() /* ty=(Tensor[(2, 3, 14), float64],) */
}

def @func_12030() -> (Tensor[(2, 3, 14), float64], Tensor[(13, 4, 1), float64], Tensor[(52), float64]) {
  @func_12028() /* ty=(Tensor[(2, 3, 14), float64], Tensor[(13, 4, 1), float64], Tensor[(52), float64]) */
}

def @func_11932(%var_11929: Tensor[(15, 14, 10), int32], %var_11930: Tensor[(15, 14, 10), int32], %var_11931: Tensor[(52), float64]) -> (Tensor[(15, 14, 10), bool], Tensor[(13, 4, 1), float64], Tensor[(52), float64]) {
  @func_11927(%var_11929, %var_11930, %var_11931) /* ty=(Tensor[(15, 14, 10), bool], Tensor[(13, 4, 1), float64], Tensor[(52), float64]) */
}

def @func_7800(%var_7797: Tensor[(1, 9, 4), int16], %var_7798: Tensor[(16, 9, 4), int16], %var_7799: Tensor[(2250), float64]) -> (Tensor[(16, 9, 4), int16], Tensor[(1, 6, 14), int8], Tensor[(2250), float64], Tensor[(84, 1), int8], int8) {
  @func_7795(%var_7797, %var_7798, %var_7799) /* ty=(Tensor[(16, 9, 4), int16], Tensor[(1, 6, 14), int8], Tensor[(2250), float64], Tensor[(84, 1), int8], int8) */
}

def @func_13551(%var_13519: Tensor[(13, 4, 15), float64], %var_13543: Tensor[(84), float64], %var_13545: Tensor[(55, 6), float32], %var_13546: Tensor[(225, 10), float64]) -> (Tensor[(13, 4, 15), bool], Tensor[(288), bool], Tensor[(84), float64], Tensor[(1536), float64], Tensor[(55, 6), float32], Tensor[(225, 10), float64]) {
  %931 = @func_12059() /* ty=Tensor[(13, 4, 1), float64] */;
  %932 = cast(%931, dtype="bool") /* ty=Tensor[(13, 4, 1), bool] */;
  %933 = cast(%var_13519, dtype="bool") /* ty=Tensor[(13, 4, 15), bool] */;
  %934 = cast(%var_13543, dtype="float64") /* ty=Tensor[(84), float64] */;
  %935 = cast(meta[relay.Constant][76] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %936 = cast(%var_13545, dtype="float32") /* ty=Tensor[(55, 6), float32] */;
  %937 = cast(%var_13546, dtype="float64") /* ty=Tensor[(225, 10), float64] */;
  %938 = cast(%var_13546, dtype="float64") /* ty=Tensor[(225, 10), float64] */;
  %939 = cast(%var_13546, dtype="int16") /* ty=Tensor[(225, 10), int16] */;
  %940 = reshape(%934, newshape=[2, 3, 14]) /* ty=Tensor[(2, 3, 14), float64] */;
  %941 = reshape(%935, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %942 = reshape(%936, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %943 = reshape(%937, newshape=[1125, 2]) /* ty=Tensor[(1125, 2), float64] */;
  %944 = reshape(%938, newshape=[1125, 2]) /* ty=Tensor[(1125, 2), float64] */;
  %945 = reshape(%939, newshape=[1125, 2]) /* ty=Tensor[(1125, 2), int16] */;
  %946 = @func_12458(%940, %941, %942, %943, %944, %945) /* ty=(Tensor[(2, 3, 14), int32], Tensor[(2, 3, 14), float64], Tensor[(8, 12, 16), float64], Tensor[(1536), float64], Tensor[(15, 10, 15), float64], Tensor[(330), float32], Tensor[(288), bool], Tensor[(2, 3, 14), uint64], Tensor[(2, 3, 14), float64], Tensor[(1125, 2), bool], Tensor[(648), uint8], Tensor[(2, 10, 15), bool], Tensor[(300), uint16]) */;
  %947 = logical_and(%932, %933) /* ty=Tensor[(13, 4, 15), bool] */;
  %948 = %946.6;
  (%947, %948, %var_13543, meta[relay.Constant][76] /* ty=Tensor[(1536), float64] */, %var_13545, %var_13546)
}

def @func_14878() -> (Tensor[(11, ?, 7), uint8], Tensor[(15, 11, 4), float32], Tensor[(660), float32]) {
  @func_14876() /* ty=(Tensor[(11, ?, 7), uint8], Tensor[(15, 11, 4), float32], Tensor[(660), float32]) */
}

def @func_15511() -> (Tensor[(2, 3, 14), float64],) {
  @func_15509() /* ty=(Tensor[(2, 3, 14), float64],) */
}

def @func_12884(%var_12882: Tensor[(208), float32], %var_12883: Tensor[(77), float32]) -> (Tensor[(2, 3, 14), float64], Tensor[(208), float32], Tensor[(208), float32], Tensor[(1, 6, 14), int8], int8, Tensor[(8, 12, 16), float64], Tensor[(660), float32], Tensor[(2250), uint32], Tensor[(24, 14), float32], Tensor[(77), float32]) {
  %970 = fn (%var_12856: Tensor[(208), float32], %var_12876: Tensor[(77), float32]) -> (Tensor[(2, 3, 14), float64], Tensor[(208), float32], Tensor[(208), float32], Tensor[(1, 6, 14), int8], int8, Tensor[(8, 12, 16), float64], Tensor[(660), float32], Tensor[(2250), uint32], Tensor[(24, 14), float32], Tensor[(77), float32]) {
    %949 = cast(%var_12856, dtype="float32") /* ty=Tensor[(208), float32] */;
    %950 = reshape(%949, newshape=[208]) /* ty=Tensor[(208), float32] */;
    %951 = @func_12080(%950) /* ty=(Tensor[(13, 4, 1), float64], Tensor[(1536), float64], Tensor[(208), float32]) */;
    %952 = cast(meta[relay.Constant][77] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %953 = @func_11732() /* ty=Tensor[(2, 3, 14), float64] */;
    %954 = cast(%953, dtype="int8") /* ty=Tensor[(2, 3, 14), int8] */;
    %955 = reshape(%952, newshape=[]) /* ty=int8 */;
    %956 = reshape(%954, newshape=[1, 6, 14]) /* ty=Tensor[(1, 6, 14), int8] */;
    %957 = @func_538(%955, %956) /* ty=(Tensor[(1, 6, 14), int8],) */;
    %958 = cast(meta[relay.Constant][78] /* ty=Tensor[(660), float32] */, dtype="float32") /* ty=Tensor[(660), float32] */;
    %959 = reshape(%958, newshape=[660]) /* ty=Tensor[(660), float32] */;
    %960 = @func_12545(%959) /* ty=(Tensor[(13, 4, 7), float64], Tensor[(15, 11, 4), float32], Tensor[(660), float32], Tensor[(8, 12, 16), float64], Tensor[(1536), float64]) */;
    %961 = cast(meta[relay.Constant][79] /* ty=Tensor[(24, 14), float32] */, dtype="float32") /* ty=Tensor[(24, 14), float32] */;
    %962 = cast(%var_12876, dtype="float32") /* ty=Tensor[(77), float32] */;
    %963 = reshape(%961, newshape=[336]) /* ty=Tensor[(336), float32] */;
    %964 = reshape(%962, newshape=[77]) /* ty=Tensor[(77), float32] */;
    %965 = @func_12649(%963, %964) /* ty=(Tensor[(2, 3, 14), float64], Tensor[(7, 4, 12), float32], Tensor[(336), float32], Tensor[(2250), uint32], Tensor[(420), float32], Tensor[(330), float32], Tensor[(4, 72), bool], Tensor[(77), float32]) */;
    %966 = %951.2;
    %967 = %957.0;
    %968 = %960.3;
    %969 = %965.3;
    (%953, %966, %var_12856, %967, meta[relay.Constant][77] /* ty=int8 */, %968, meta[relay.Constant][78] /* ty=Tensor[(660), float32] */, %969, meta[relay.Constant][79] /* ty=Tensor[(24, 14), float32] */, %var_12876)
  };
  %970(%var_12882, %var_12883) /* ty=(Tensor[(2, 3, 14), float64], Tensor[(208), float32], Tensor[(208), float32], Tensor[(1, 6, 14), int8], int8, Tensor[(8, 12, 16), float64], Tensor[(660), float32], Tensor[(2250), uint32], Tensor[(24, 14), float32], Tensor[(77), float32]) */
}

def @func_10014(%var_10003: Tensor[(13, 4, 1), float64]) -> Tensor[(13, 4, 1), float64] {
  %971 = cast(%var_10003, dtype="float64") /* ty=Tensor[(13, 4, 1), float64] */;
  log10(%971) /* ty=Tensor[(13, 4, 1), float64] */
}

def @func_13312() -> (Tensor[(13, 11, 13), float32],) {
  %973 = fn () -> (Tensor[(13, 11, 13), float32],) {
    %972 = @func_12746() /* ty=Tensor[(13, 11, 13), float32] */;
    (%972,)
  };
  %973() /* ty=(Tensor[(13, 11, 13), float32],) */
}

def @func_16903() -> (Tensor[(13, 11, 13), bool], Tensor[(13, 4, 7), float64]) {
  @func_16901() /* ty=(Tensor[(13, 11, 13), bool], Tensor[(13, 4, 7), float64]) */
}

def @func_10017(%var_10015: Tensor[(13, 4, 1), float64]) -> Tensor[(13, 4, 1), float64] {
  @func_10014(%var_10015) /* ty=Tensor[(13, 4, 1), float64] */
}

def @func_13125(%var_13123: Tensor[(1536), int16]) -> (Tensor[(13, 11, 13), bool], Tensor[(3, 3, 3), float64], Tensor[(1536), int16]) {
  @func_13122(%var_13123) /* ty=(Tensor[(13, 11, 13), bool], Tensor[(3, 3, 3), float64], Tensor[(1536), int16]) */
}

def @func_13643() -> (Tensor[(13, 11, 13), bool],) {
  %976 = fn () -> (Tensor[(13, 11, 13), bool],) {
    %974 = @func_12837() /* ty=(Tensor[(13, 4, 7), bool], Tensor[(13, 11, 13), bool]) */;
    %975 = %974.1;
    (%975,)
  };
  %976() /* ty=(Tensor[(13, 11, 13), bool],) */
}

def @func_14832() -> (Tensor[(13, 11, 13), bool], Tensor[(1, 6, 14), int8], Tensor[(104, 2), float32], Tensor[(77, 1), float32]) {
  @func_14830() /* ty=(Tensor[(13, 11, 13), bool], Tensor[(1, 6, 14), int8], Tensor[(104, 2), float32], Tensor[(77, 1), float32]) */
}

def @func_14056() -> Tensor[(11, ?, 7), uint8] {
  %977 = @func_13054() /* ty=(Tensor[(13, 4, 7), bool], Tensor[(11, 1, 7), float32], Tensor[(77), float32]) */;
  %978 = %977.1;
  %979 = cast(%978, dtype="float32") /* ty=Tensor[(11, 1, 7), float32] */;
  %980 = log10(%979) /* ty=Tensor[(11, 1, 7), float32] */;
  %981 = cast(%978, dtype="uint8") /* ty=Tensor[(11, 1, 7), uint8] */;
  %982 = shape_of(%980, dtype="int32") /* ty=Tensor[(3), int32] */;
  %983 = cast(%980, dtype="uint8") /* ty=Tensor[(11, 1, 7), uint8] */;
  %984 = dyn.reshape(%981, %982, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  bitwise_xor(%983, %984) /* ty=Tensor[(11, ?, 7), uint8] */
}

def @func_3847(%var_3845: Tensor[(12, 14, 9), float32], %var_3846: Tensor[(12, 14, 9), float32]) -> (Tensor[(12, 14, 9), float32], Tensor[(2250), float64], Tensor[(288), bool]) {
  @func_3843(%var_3845, %var_3846) /* ty=(Tensor[(12, 14, 9), float32], Tensor[(2250), float64], Tensor[(288), bool]) */
}

def @func_15417() -> (Tensor[(13, 11, 13), bool],) {
  @func_15415() /* ty=(Tensor[(13, 11, 13), bool],) */
}

def @func_14455() -> (Tensor[(13, 11, 13), bool],) {
  %985 = @func_13642() /* ty=(Tensor[(13, 11, 13), bool],) */;
  %986 = %985.0;
  (%986,)
}

def @func_12958(%var_12956: Tensor[(27), float64], %var_12957: Tensor[(72, 4), bool]) -> (Tensor[(13, 11, 13), bool], Tensor[(27), float64], Tensor[(27), float64], Tensor[(72, 4), bool], Tensor[(2250), float64], Tensor[(52), float64], Tensor[(4, 1, 11), float32], Tensor[(44), float32]) {
  @func_12954(%var_12956, %var_12957) /* ty=(Tensor[(13, 11, 13), bool], Tensor[(27), float64], Tensor[(27), float64], Tensor[(72, 4), bool], Tensor[(2250), float64], Tensor[(52), float64], Tensor[(4, 1, 11), float32], Tensor[(44), float32]) */
}

def @func_15470(%var_15439: Tensor[(11, 7, 7), float32], %var_15458: Tensor[(1512), float32]) -> (Tensor[(11, 7, 7), float64], Tensor[(1, 6, 14), int8], Tensor[(26), float32], Tensor[(91, 4), float32], Tensor[(84), int8], Tensor[(288), bool], Tensor[(1512), float32]) {
  %987 = @func_14056() /* ty=Tensor[(11, ?, 7), uint8] */;
  %988 = cast(%987, dtype="float32") /* ty=Tensor[(11, ?, 7), float32] */;
  %989 = acosh(%988) /* ty=Tensor[(11, ?, 7), float32] */;
  %990 = cast(%989, dtype="float64") /* ty=Tensor[(11, ?, 7), float64] */;
  %991 = cast(%var_15439, dtype="float64") /* ty=Tensor[(11, 7, 7), float64] */;
  %992 = cast(meta[relay.Constant][80] /* ty=Tensor[(26), float32] */, dtype="float32") /* ty=Tensor[(26), float32] */;
  %993 = cast(meta[relay.Constant][81] /* ty=Tensor[(91, 4), float32] */, dtype="float32") /* ty=Tensor[(91, 4), float32] */;
  %994 = cast(meta[relay.Constant][82] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
  %995 = reshape(%992, newshape=[13, 1, 2]) /* ty=Tensor[(13, 1, 2), float32] */;
  %996 = reshape(%993, newshape=[13, 14, 2]) /* ty=Tensor[(13, 14, 2), float32] */;
  %997 = reshape(%994, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %998 = @func_1873(%995, %996, %997) /* ty=(Tensor[(13, 14, 2), float32], Tensor[(1, 6, 14), int8], int8, Tensor[(84), int8]) */;
  %999 = cast(%var_15458, dtype="float32") /* ty=Tensor[(1512), float32] */;
  %1000 = cast(%var_15458, dtype="float32") /* ty=Tensor[(1512), float32] */;
  %1001 = reshape(%999, newshape=[12, 14, 9]) /* ty=Tensor[(12, 14, 9), float32] */;
  %1002 = reshape(%1000, newshape=[12, 14, 9]) /* ty=Tensor[(12, 14, 9), float32] */;
  %1003 = @func_3843(%1001, %1002) /* ty=(Tensor[(12, 14, 9), float32], Tensor[(2250), float64], Tensor[(288), bool]) */;
  %1004 = floor_divide(%990, %991) /* ty=Tensor[(11, 7, 7), float64] */;
  %1005 = %998.1;
  %1006 = %1003.2;
  (%1004, %1005, meta[relay.Constant][80] /* ty=Tensor[(26), float32] */, meta[relay.Constant][81] /* ty=Tensor[(91, 4), float32] */, meta[relay.Constant][82] /* ty=Tensor[(84), int8] */, %1006, %var_15458)
}

def @func_12028() -> (Tensor[(2, 3, 14), float64], Tensor[(13, 4, 1), float64], Tensor[(52), float64]) {
  %1007 = cast(meta[relay.Constant][83] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
  %1008 = reshape(%1007, newshape=[13, 4, 1]) /* ty=Tensor[(13, 4, 1), float64] */;
  %1009 = @func_11732() /* ty=Tensor[(2, 3, 14), float64] */;
  %1010 = @func_10014(%1008) /* ty=Tensor[(13, 4, 1), float64] */;
  (%1009, %1010, meta[relay.Constant][83] /* ty=Tensor[(52), float64] */)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_281 = relay.var("var_281", dtype = "int64", shape = (5, 16, 13))#candidate|281|(5, 16, 13)|var|int64
var_282 = relay.var("var_282", dtype = "int64", shape = (5, 16, 13))#candidate|282|(5, 16, 13)|var|int64
bop_283 = relay.equal(var_281.astype('bool'), relay.reshape(var_282.astype('bool'), relay.shape_of(var_281))) # shape=(5, 16, 13)
bop_294 = relay.left_shift(var_282.astype('int8'), relay.reshape(bop_283.astype('int8'), relay.shape_of(var_282))) # shape=(5, 16, 13)
output = relay.Tuple([bop_294,])
output2 = relay.Tuple([bop_294,])
func_297 = relay.Function([var_281,var_282,], output)
mod['func_297'] = func_297
mod = relay.transform.InferType()(mod)
var_298 = relay.var("var_298", dtype = "int64", shape = (5, 16, 13))#candidate|298|(5, 16, 13)|var|int64
var_299 = relay.var("var_299", dtype = "int64", shape = (5, 16, 13))#candidate|299|(5, 16, 13)|var|int64
output = func_297(var_298,var_299,)
func_300 = relay.Function([var_298,var_299,], output)
mutated_mod['func_300'] = func_300
mutated_mod = relay.transform.InferType()(mutated_mod)
var_528 = relay.var("var_528", dtype = "uint16", shape = (16, 1, 16))#candidate|528|(16, 1, 16)|var|uint16
var_529 = relay.var("var_529", dtype = "uint16", shape = (16, 1, 16))#candidate|529|(16, 1, 16)|var|uint16
bop_530 = relay.less(var_528.astype('bool'), relay.reshape(var_529.astype('bool'), relay.shape_of(var_528))) # shape=(16, 1, 16)
func_297_call = mod.get_global_var('func_297')
func_300_call = mutated_mod.get_global_var('func_300')
const_535 = relay.const([[-4,7,-10,5,5,2,-4,2,-3,3,-6,4,5,-4,1,-10,-5,-6,1,-10,9,-6,9,2,8,-1,-10,-10,-6,4,6,-4,-10,-6,4,-9,-10,-5,-5,-2,-4,7,9,-1,-4,2,-10,1,-9,-2,6,7,8,-4,8,-8,-10,-8,-4,6,3,-10,-6,-4,-9,-9,2,1,-7,5,-3,-10,7,4,5,1,-9,3,-1,2,7,-7,7,-9,4,-2,6,-2,7,6,5,4,-8,1,5,-1,5,1,5,8,3,-6,1,-2,3,4,5,4,-4,3,8,-4,-10,-5,-5,4,-5,5,-8,6,-4,3,-6,-3,2,4,9,-3,2,-6],[2,-5,10,-3,-8,2,-9,3,2,8,1,-5,1,-1,-5,10,-7,-4,-4,5,-8,-5,-10,2,4,5,3,8,-8,-7,-8,-2,-3,-3,-5,-10,-5,-8,3,6,-2,-3,-3,-9,1,-5,4,-7,-4,-3,-9,2,7,-9,-1,-8,-10,-10,-3,3,4,5,5,-4,-10,-10,1,3,3,2,10,9,-10,-2,-7,-7,3,10,3,7,-2,-4,-8,-4,-2,-4,-6,-10,-1,9,7,8,9,-6,-3,-8,9,-1,1,-7,-2,5,6,-6,8,-3,-3,-5,-1,7,-7,1,10,-4,-7,-6,-1,-9,-6,4,-10,1,1,10,-10,-8,-5,-2,10,6],[4,-8,-2,-6,2,4,-8,-9,-4,1,-5,8,7,-5,-5,-6,-2,8,1,-4,-1,-7,5,7,3,3,6,-10,-5,-10,7,-9,-10,2,-10,-6,-5,9,-9,1,-4,-3,-10,-3,-9,3,-3,-4,-1,6,-3,10,5,1,-8,7,-7,-4,3,-1,-4,-8,-9,10,9,9,8,3,1,-9,-6,-2,-5,1,-4,10,-7,5,-1,5,-10,-5,4,-4,-1,7,-7,10,5,-2,4,-9,10,-6,-6,2,-5,-4,4,7,9,3,-1,2,4,5,5,10,7,-8,-7,8,-7,3,8,-5,2,-7,-10,-8,-2,-4,-8,-6,-10,-7,5,1,8,1],[3,-7,5,9,2,2,4,-2,-2,-7,-5,1,2,1,-7,-7,2,7,-5,-5,-4,2,-4,-10,5,1,6,9,4,-5,2,-3,-6,-2,-7,-8,3,-8,-4,-5,10,8,-6,1,5,-4,9,-3,-8,-6,1,5,-5,3,3,-10,-2,6,-3,1,-4,7,2,8,5,4,-9,-10,-2,-6,10,6,4,3,1,-7,9,-8,-6,-1,-2,6,4,8,10,-10,1,4,8,-5,1,3,8,1,10,4,8,5,-10,9,8,2,-3,-7,4,-3,-3,-5,8,6,1,-1,-2,3,9,3,9,-9,2,7,-7,2,-7,-3,-4,-4,-1,-4,-9,-6],[-8,8,-4,4,-4,-3,1,4,-4,-4,8,-5,-3,3,-7,2,7,5,-10,7,-9,-8,-8,10,-1,-10,10,-9,6,7,-10,1,3,-7,6,-9,-4,7,9,-4,10,1,-1,5,2,-1,2,-8,-7,-8,-10,-9,-3,-8,4,7,8,-5,10,-6,-3,5,-8,-2,1,-1,-8,5,7,-8,-5,-4,-2,-2,1,3,7,-1,4,-4,-5,5,-5,7,-4,-10,9,-4,3,1,5,7,-3,-9,-4,-1,-7,-2,-7,-4,-5,1,-10,-5,2,6,10,-1,4,4,-4,6,-1,6,9,-10,6,-8,-8,-9,9,-10,-3,-3,-3,-4,2,-8,8,5],[-6,2,8,-8,5,9,-7,2,-1,6,4,9,-7,10,-5,-1,-10,4,-4,-6,-2,-2,3,-8,9,-8,-3,10,6,-3,7,-1,-8,-6,-7,-3,7,-9,-7,7,-2,-10,2,5,2,-10,-4,5,-5,-6,1,-5,-5,1,3,10,2,2,-10,3,-5,-8,-3,-2,-3,-3,8,-7,2,4,7,-3,-4,5,2,-5,-3,7,-9,6,-9,-8,-9,-9,2,-10,-9,-8,-10,8,-2,-10,-7,3,-7,-8,2,-3,-1,-3,8,-10,6,2,2,9,-3,1,7,-8,4,1,3,6,6,5,-3,-5,-4,7,4,-1,5,9,-9,6,-4,-9,1,-9],[7,3,10,8,-4,3,1,7,10,-7,2,10,2,-2,-7,10,-6,3,-10,3,8,-1,10,6,-1,-6,-8,-10,-10,-1,-5,10,-3,-9,-5,-4,6,3,-1,-7,2,9,4,10,4,-10,2,10,2,-8,-10,2,-10,-6,-4,5,-6,5,6,3,-7,-6,-2,6,-6,5,-9,-3,-1,-9,-2,2,3,-10,-3,8,6,2,-10,4,-5,3,-5,2,-3,-3,-9,5,-2,-8,5,-6,-10,9,-9,10,-9,7,-7,-1,3,-7,9,-4,-4,6,10,2,-2,-4,3,4,-4,7,-1,-4,-2,-9,-5,-2,5,10,-3,7,-3,-6,-2,-10,3,-10],[6,1,6,-9,-10,2,2,-3,4,2,-1,-6,1,9,-1,-10,-4,-5,8,-1,-8,8,-5,-8,-10,-10,1,4,-10,-7,4,10,-8,-8,2,9,-2,-3,-5,-10,1,6,4,3,-2,6,8,4,2,2,-1,5,7,2,9,9,-2,10,-4,9,-3,-4,1,-7,-9,-9,2,-6,2,-1,2,8,6,7,1,7,-10,-5,10,8,-2,10,10,1,3,-4,-5,-8,-2,-10,-10,-9,2,5,-5,-9,-9,1,4,5,7,4,-2,10,7,9,10,2,-1,2,-10,-4,-2,2,8,-5,7,-4,2,-4,-7,6,10,-9,-5,-8,-4,5,9,3]], dtype = "int64")#candidate|535|(8, 130)|const|int64
call_534 = relay.TupleGetItem(func_297_call(relay.reshape(const_535.astype('int64'), [5, 16, 13]), relay.reshape(const_535.astype('int64'), [5, 16, 13]), ), 0)
call_536 = relay.TupleGetItem(func_300_call(relay.reshape(const_535.astype('int64'), [5, 16, 13]), relay.reshape(const_535.astype('int64'), [5, 16, 13]), ), 0)
output = relay.Tuple([bop_530,call_534,const_535,])
output2 = relay.Tuple([bop_530,call_536,const_535,])
func_537 = relay.Function([var_528,var_529,], output)
mod['func_537'] = func_537
mod = relay.transform.InferType()(mod)
var_538 = relay.var("var_538", dtype = "uint16", shape = (16, 1, 16))#candidate|538|(16, 1, 16)|var|uint16
var_539 = relay.var("var_539", dtype = "uint16", shape = (16, 1, 16))#candidate|539|(16, 1, 16)|var|uint16
output = func_537(var_538,var_539,)
func_540 = relay.Function([var_538,var_539,], output)
mutated_mod['func_540'] = func_540
mutated_mod = relay.transform.InferType()(mutated_mod)
var_542 = relay.var("var_542", dtype = "uint16", shape = (11, 6, 1))#candidate|542|(11, 6, 1)|var|uint16
var_543 = relay.var("var_543", dtype = "uint16", shape = (11, 6, 13))#candidate|543|(11, 6, 13)|var|uint16
bop_544 = relay.add(var_542.astype('uint16'), var_543.astype('uint16')) # shape=(11, 6, 13)
func_537_call = mod.get_global_var('func_537')
func_540_call = mutated_mod.get_global_var('func_540')
const_553 = relay.const([10,-5,1,3,-1,-7,4,-2,-10,3,-10,-5,3,-3,-1,-6,2,-9,1,2,-9,-10,-5,-7,-3,-7,1,-7,1,1,2,3,1,6,6,-4,7,7,6,-6,-6,3,4,2,-2,7,2,-10,10,5,-4,-10,-4,-10,2,-3,-9,-6,6,8,2,-4,3,-7,7,-10,4,-1,-8,-1,7,1,-10,-8,-4,2,2,-2,9,-2,3,9,-6,6,-1,6,-2,-3,3,-9,-10,5,-9,10,8,6,6,9,-8,-7,5,-7,10,1,3,-2,-1,6,-4,7,10,3,9,-9,-8,-5,10,10,-4,-3,1,4,2,9,8,-10,-9,6,7,-6,2,10,3,-1,-2,-8,2,2,-1,2,7,10,8,-6,1,-2,3,-4,1,-5,-10,6,4,7,-9,7,-2,-5,-10,7,-3,4,-10,-4,2,6,4,-5,7,4,-3,-5,-5,-7,-1,8,-5,10,9,-6,5,4,-1,-6,2,-8,10,-2,-2,-1,5,-7,-10,-6,2,9,-4,-7,-3,-7,4,10,7,-10,-2,1,2,10,4,-2,-7,-4,-5,10,-3,-3,-2,-2,8,1,-4,-9,-10,-2,-2,3,-7,-4,9,10,-1,-10,7,-6,-3,-5,9,5,3,-6,-2,-8,-7,1,4,-9,-4,2,10,-8,-4,1,-9,3,-4,8], dtype = "uint16")#candidate|553|(256,)|const|uint16
call_552 = relay.TupleGetItem(func_537_call(relay.reshape(const_553.astype('uint16'), [16, 1, 16]), relay.reshape(const_553.astype('uint16'), [16, 1, 16]), ), 0)
call_554 = relay.TupleGetItem(func_540_call(relay.reshape(const_553.astype('uint16'), [16, 1, 16]), relay.reshape(const_553.astype('uint16'), [16, 1, 16]), ), 0)
func_297_call = mod.get_global_var('func_297')
func_300_call = mutated_mod.get_global_var('func_300')
var_561 = relay.var("var_561", dtype = "int64", shape = (1040,))#candidate|561|(1040,)|var|int64
call_560 = relay.TupleGetItem(func_297_call(relay.reshape(var_561.astype('int64'), [5, 16, 13]), relay.reshape(var_561.astype('int64'), [5, 16, 13]), ), 0)
call_562 = relay.TupleGetItem(func_300_call(relay.reshape(var_561.astype('int64'), [5, 16, 13]), relay.reshape(var_561.astype('int64'), [5, 16, 13]), ), 0)
uop_566 = relay.log10(var_561.astype('float32')) # shape=(1040,)
bop_568 = relay.bitwise_or(var_561.astype('int8'), relay.reshape(call_560.astype('int8'), relay.shape_of(var_561))) # shape=(1040,)
bop_571 = relay.bitwise_or(var_561.astype('int8'), relay.reshape(call_562.astype('int8'), relay.shape_of(var_561))) # shape=(1040,)
func_297_call = mod.get_global_var('func_297')
func_300_call = mutated_mod.get_global_var('func_300')
call_577 = relay.TupleGetItem(func_297_call(relay.reshape(var_561.astype('int64'), [5, 16, 13]), relay.reshape(uop_566.astype('int64'), [5, 16, 13]), ), 0)
call_578 = relay.TupleGetItem(func_300_call(relay.reshape(var_561.astype('int64'), [5, 16, 13]), relay.reshape(uop_566.astype('int64'), [5, 16, 13]), ), 0)
func_297_call = mod.get_global_var('func_297')
func_300_call = mutated_mod.get_global_var('func_300')
call_579 = relay.TupleGetItem(func_297_call(relay.reshape(call_560.astype('int64'), [5, 16, 13]), relay.reshape(bop_568.astype('int64'), [5, 16, 13]), ), 0)
call_580 = relay.TupleGetItem(func_300_call(relay.reshape(call_560.astype('int64'), [5, 16, 13]), relay.reshape(bop_568.astype('int64'), [5, 16, 13]), ), 0)
output = relay.Tuple([bop_544,call_552,const_553,uop_566,bop_568,call_577,call_579,])
output2 = relay.Tuple([bop_544,call_554,const_553,uop_566,bop_571,call_578,call_580,])
func_581 = relay.Function([var_542,var_543,var_561,], output)
mod['func_581'] = func_581
mod = relay.transform.InferType()(mod)
mutated_mod['func_581'] = func_581
mutated_mod = relay.transform.InferType()(mutated_mod)
func_581_call = mutated_mod.get_global_var('func_581')
var_583 = relay.var("var_583", dtype = "uint16", shape = (11, 6, 1))#candidate|583|(11, 6, 1)|var|uint16
var_584 = relay.var("var_584", dtype = "uint16", shape = (11, 6, 13))#candidate|584|(11, 6, 13)|var|uint16
var_585 = relay.var("var_585", dtype = "int64", shape = (1040,))#candidate|585|(1040,)|var|int64
call_582 = func_581_call(var_583,var_584,var_585,)
output = call_582
func_586 = relay.Function([var_583,var_584,var_585,], output)
mutated_mod['func_586'] = func_586
mutated_mod = relay.transform.InferType()(mutated_mod)
var_892 = relay.var("var_892", dtype = "float32", shape = (5, 10, 14))#candidate|892|(5, 10, 14)|var|float32
var_893 = relay.var("var_893", dtype = "float32", shape = (5, 10, 14))#candidate|893|(5, 10, 14)|var|float32
bop_894 = relay.greater_equal(var_892.astype('bool'), relay.reshape(var_893.astype('bool'), relay.shape_of(var_892))) # shape=(5, 10, 14)
output = relay.Tuple([bop_894,])
output2 = relay.Tuple([bop_894,])
func_899 = relay.Function([var_892,var_893,], output)
mod['func_899'] = func_899
mod = relay.transform.InferType()(mod)
var_900 = relay.var("var_900", dtype = "float32", shape = (5, 10, 14))#candidate|900|(5, 10, 14)|var|float32
var_901 = relay.var("var_901", dtype = "float32", shape = (5, 10, 14))#candidate|901|(5, 10, 14)|var|float32
output = func_899(var_900,var_901,)
func_902 = relay.Function([var_900,var_901,], output)
mutated_mod['func_902'] = func_902
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1106 = relay.const([[[-1,10,2,-9,-3,-2],[9,2,-1,2,8,6],[-5,-6,2,-10,-2,6],[6,-2,8,1,-9,-5],[-5,-4,4,10,-1,-2]],[[-8,-10,5,-4,-1,9],[2,7,2,10,8,10],[-4,-1,7,-1,-8,-5],[5,3,8,5,1,-1],[-7,-10,-5,-9,3,5]],[[5,-4,7,7,3,-9],[-3,10,10,9,-2,-2],[-1,7,3,5,8,-3],[1,8,-2,-4,1,1],[5,7,-8,4,2,-3]],[[-5,-2,-10,-7,-7,-4],[2,-3,1,-2,-3,4],[10,1,1,-4,4,9],[-3,4,3,-8,-5,-8],[7,5,-9,-1,6,2]],[[8,4,-3,6,1,-3],[-8,-9,-4,-1,7,10],[2,-6,5,-10,5,5],[-8,4,-2,6,-10,3],[4,-4,10,8,7,-2]],[[3,3,7,5,-10,-5],[-6,2,-5,-9,-1,-9],[-8,4,-2,-8,-10,2],[1,-1,6,3,6,-7],[2,-2,-10,-5,10,6]],[[6,7,-4,-1,8,-8],[-7,-6,8,-6,1,5],[-10,2,8,4,-3,-7],[-1,4,10,4,2,-2],[1,-1,7,6,4,9]],[[-7,5,-5,-10,1,-6],[5,8,-7,-8,-10,3],[-4,-7,8,-10,9,6],[6,-10,10,-7,5,-2],[8,3,8,-5,4,1]],[[-8,-6,4,10,-9,-8],[8,4,3,-6,-6,8],[4,6,-3,-9,-8,7],[10,-4,2,8,1,1],[-7,-4,-3,-9,-6,-4]],[[-4,10,-1,-5,-6,8],[3,8,-7,8,6,-9],[6,8,6,1,-9,1],[-9,9,-7,5,-4,-6],[2,4,-7,10,10,-7]],[[4,-6,10,2,-6,-5],[1,-3,-3,-5,2,-6],[2,-4,6,9,-9,4],[6,9,1,3,5,7],[4,6,9,6,-10,4]],[[-2,-7,-1,2,-8,-7],[8,9,7,-3,5,-8],[-3,-8,3,-8,-6,-7],[5,2,2,-2,-3,-6],[-6,3,10,8,4,-6]],[[-7,-5,1,-9,3,2],[5,8,5,-8,2,-2],[3,-6,7,7,8,8],[5,-8,9,6,3,1],[5,-9,-3,9,-3,6]],[[-9,-6,6,-8,9,7],[-5,-5,-6,-6,-8,-10],[-6,-10,8,-10,10,5],[10,-4,9,-1,6,-3],[-2,5,-6,2,6,2]],[[7,-10,-10,2,-8,10],[-8,4,-7,-6,7,-1],[-8,4,5,7,-10,1],[-4,9,-9,-1,-10,-1],[-1,-7,10,-1,1,2]],[[1,-1,8,10,-5,4],[-8,1,8,-6,-2,-7],[-9,1,-4,-7,4,-8],[10,-4,7,-10,-3,-2],[4,-1,-10,-9,9,-8]]], dtype = "int16")#candidate|1106|(16, 5, 6)|const|int16
var_1107 = relay.var("var_1107", dtype = "int16", shape = (16, 5, 6))#candidate|1107|(16, 5, 6)|var|int16
bop_1108 = relay.greater(const_1106.astype('bool'), relay.reshape(var_1107.astype('bool'), relay.shape_of(const_1106))) # shape=(16, 5, 6)
output = relay.Tuple([bop_1108,])
output2 = relay.Tuple([bop_1108,])
func_1118 = relay.Function([var_1107,], output)
mod['func_1118'] = func_1118
mod = relay.transform.InferType()(mod)
mutated_mod['func_1118'] = func_1118
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1119 = relay.var("var_1119", dtype = "int16", shape = (16, 5, 6))#candidate|1119|(16, 5, 6)|var|int16
func_1118_call = mutated_mod.get_global_var('func_1118')
call_1120 = func_1118_call(var_1119)
output = call_1120
func_1121 = relay.Function([var_1119], output)
mutated_mod['func_1121'] = func_1121
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1227 = relay.var("var_1227", dtype = "float64", shape = (3, 4, 1))#candidate|1227|(3, 4, 1)|var|float64
uop_1228 = relay.atan(var_1227.astype('float64')) # shape=(3, 4, 1)
func_297_call = mod.get_global_var('func_297')
func_300_call = mutated_mod.get_global_var('func_300')
var_1232 = relay.var("var_1232", dtype = "int64", shape = (1040,))#candidate|1232|(1040,)|var|int64
call_1231 = relay.TupleGetItem(func_297_call(relay.reshape(var_1232.astype('int64'), [5, 16, 13]), relay.reshape(var_1232.astype('int64'), [5, 16, 13]), ), 0)
call_1233 = relay.TupleGetItem(func_300_call(relay.reshape(var_1232.astype('int64'), [5, 16, 13]), relay.reshape(var_1232.astype('int64'), [5, 16, 13]), ), 0)
func_537_call = mod.get_global_var('func_537')
func_540_call = mutated_mod.get_global_var('func_540')
const_1235 = relay.const([[10],[-7],[7],[3],[1],[7],[6],[10],[-4],[6],[5],[10],[9],[1],[5],[-2],[-9],[9],[6],[-5],[6],[7],[-7],[-3],[-5],[-1],[-9],[6],[2],[-9],[-1],[2],[-1],[-5],[3],[-4],[-4],[-2],[-1],[4],[-3],[6],[-7],[7],[10],[-6],[6],[-2],[-9],[4],[8],[10],[2],[-3],[-6],[-8],[-3],[9],[7],[-7],[4],[7],[-1],[7],[-5],[-3],[-10],[7],[4],[2],[8],[-9],[4],[-8],[5],[-7],[1],[7],[4],[-6],[-6],[4],[-2],[7],[-2],[8],[-10],[-10],[6],[-7],[-7],[8],[-10],[-2],[2],[5],[-6],[3],[1],[-6],[8],[4],[10],[2],[4],[-4],[4],[9],[-10],[10],[10],[9],[6],[6],[9],[-2],[-3],[-5],[-10],[8],[8],[5],[8],[8],[6],[2],[-3],[1],[-3],[9],[-8],[-1],[9],[5],[-4],[-5],[7],[-4],[3],[-4],[10],[-2],[5],[4],[-2],[-9],[8],[-1],[-5],[8],[1],[2],[3],[-2],[-8],[5],[10],[-2],[-3],[-4],[3],[-7],[-3],[-10],[7],[8],[3],[-6],[5],[-5],[4],[-2],[-9],[1],[5],[9],[9],[9],[-6],[-10],[6],[1],[-7],[-8],[-2],[-7],[2],[3],[6],[-5],[1],[8],[-10],[2],[7],[9],[10],[-5],[-4],[9],[-5],[-6],[-8],[8],[5],[6],[7],[-4],[3],[5],[7],[-3],[3],[-4],[-10],[-6],[-1],[-10],[1],[4],[3],[-2],[4],[-9],[1],[6],[7],[5],[-9],[10],[-5],[-2],[9],[5],[4],[-8],[9],[-7],[-3],[9],[10],[3],[5],[9],[8],[3],[6],[-10],[-9],[-4],[6],[10],[-9],[6],[1],[9]], dtype = "uint16")#candidate|1235|(256, 1)|const|uint16
call_1234 = relay.TupleGetItem(func_537_call(relay.reshape(const_1235.astype('uint16'), [16, 1, 16]), relay.reshape(const_1235.astype('uint16'), [16, 1, 16]), ), 2)
call_1236 = relay.TupleGetItem(func_540_call(relay.reshape(const_1235.astype('uint16'), [16, 1, 16]), relay.reshape(const_1235.astype('uint16'), [16, 1, 16]), ), 2)
bop_1240 = relay.logical_and(uop_1228.astype('bool'), var_1232.astype('bool')) # shape=(3, 4, 1040)
func_581_call = mod.get_global_var('func_581')
func_586_call = mutated_mod.get_global_var('func_586')
var_1256 = relay.var("var_1256", dtype = "uint16", shape = (66,))#candidate|1256|(66,)|var|uint16
const_1257 = relay.const([-6,-5,5,-7,-1,-4,-9,9,5,7,9,4,2,9,4,10,9,8,-7,1,-9,-6,-3,-4,-2,-10,-4,7,2,3,-7,5,-10,-10,-7,4,7,6,6,8,-2,1,3,-3,3,10,-9,-8,7,4,10,-9,8,4,-5,4,-3,3,-2,-4,10,-4,10,-8,9,-8,-9,-3,2,3,-2,-5,1,-4,4,-7,-1,-5,-5,5,-4,3,1,10,-5,-3,1,5,-7,6,-6,-10,-6,-7,8,4,-6,5,5,5,10,1,7,3,5,-9,-2,6,-2,8,-5,-1,-1,2,-2,8,-4,-3,-2,-7,4,8,5,-4,8,-8,-4,6,7,-1,-5,-3,7,2,-10,8,4,-2,1,7,-9,2,6,-9,8,-2,-1,3,-10,-7,3,8,1,-8,7,-2,2,10,-4,9,-10,-8,-7,-9,6,-9,3,-8,-7,-9,-4,9,-4,4,-9,-1,-5,10,-10,10,6,4,-7,4,-3,-8,-3,-2,7,5,8,-7,-7,-6,-5,-2,6,-8,10,-6,-4,-9,3,-4,-9,10,-6,-2,-1,9,-3,-7,-9,-1,-9,-2,-3,-2,6,1,-6,5,-6,-5,3,5,5,6,-8,-2,4,-4,9,-5,1,-10,-7,-8,-10,-1,7,3,-7,7,-8,6,3,10,5,6,-1,2,-1,-10,3,6,-5,-3,9,-2,9,8,-8,-5,-4,-9,-7,-3,-3,-1,-4,8,7,-4,3,3,5,-7,2,6,-3,2,-5,-10,10,5,-8,5,-8,4,-6,5,-2,4,4,-9,2,9,-10,6,-2,-4,-5,8,8,5,10,-7,2,-6,1,3,1,-3,-5,-9,-1,9,-3,-1,10,-7,8,5,-5,-6,8,-10,-5,10,-3,7,3,3,-5,-9,10,7,7,-8,5,-9,-3,-4,5,8,-4,-3,3,4,-10,-2,6,8,3,8,-10,-3,-7,1,10,9,6,-2,9,8,-9,-10,2,-10,4,3,6,-6,2,2,-1,-9,-4,8,6,-3,-6,10,10,3,10,7,1,-7,-5,8,-2,4,5,-1,8,6,6,-2,-5,-2,10,-9,5,5,-6,5,-7,8,-1,-4,1,-4,3,-5,2,5,7,4,-1,3,9,9,-8,-9,4,-9,3,-5,-1,7,6,-7,8,-6,-10,10,6,5,-6,5,10,-8,9,-9,2,6,-8,2,6,-6,-6,6,-6,7,7,-4,8,-8,-3,-9,-3,-2,10,10,1,-2,2,10,1,2,9,-5,-5,-6,-1,3,10,8,1,-7,4,9,9,4,7,8,-1,5,-7,4,3,-4,5,4,10,6,1,7,-5,10,8,-9,10,-5,-4,6,8,-2,-2,9,-6,-5,4,-8,7,-2,3,-4,-5,1,1,7,-7,-4,-3,-2,-10,9,9,3,-5,-10,6,3,-4,9,2,-5,-4,8,4,8,5,9,3,1,-7,-6,5,-4,-6,4,-10,-4,10,10,2,-9,3,4,-10,-6,5,1,3,-9,-10,-4,-4,3,-2,9,10,4,5,-3,-2,3,-1,7,10,3,-1,-10,-7,10,-7,7,6,-5,9,6,-5,1,3,-1,4,-5,-1,9,-10,-9,-5,-6,-8,-1,-7,10,-6,-1,9,-4,-4,-7,3,-2,4,-10,8,1,7,4,-1,-7,7,7,-9,-8,-9,-7,2,7,-3,-6,-5,8,1,7,6,8,-1,9,6,-3,6,-1,-1,6,-7,4,9,5,4,9,-5,3,-4,8,-2,6,10,6,-8,-5,5,9,3,-4,-8,-7,2,1,-4,5,-9,-6,10,10,6,-5,9,5,-1,-9,3,-10,-7,10,-9,1,-10,6,-1,-10,-6,-8,-2,-6,-3,10,2,1,-2,-3,10,8,3,1,-2,10,7,-2,-2,-10,1,9,3,-3,4,5,-3,5,-8,-9,7,-10,-9,1,-9,4,-2,-5,6,-9,7,-6,10,-6,6,-1,-7,5,-1,9,9,2,-8,-8,7,7,-5,2,-4,4,-6,-5,3,-10,8,4,3,-3,-3,9,10,3,1,-9,-6,7,7,6,3,4,-5,1,4,-3,4,-8,10,-10,-9,-5,1,6,5,-7,5,-2,-10,2,-8,5,-7,-8,6,-7,6,-7,-8,-6,2,3,-7,-2,9,-4,-9,1,-4,2,-9,-3,2,4,3,-3,5,6,1,10,-2,-7,3,-4,8,-5,6,2,7,8,-9,-7,-6,-8,-1,-7,3,3,-3,-3,4,8,7,5,-7,6,-3,10,-7,6,-5,2,-8,-3], dtype = "uint16")#candidate|1257|(858,)|const|uint16
call_1255 = relay.TupleGetItem(func_581_call(relay.reshape(var_1256.astype('uint16'), [11, 6, 1]), relay.reshape(const_1257.astype('uint16'), [11, 6, 13]), relay.reshape(call_1231.astype('int64'), [1040,]), ), 4)
call_1258 = relay.TupleGetItem(func_586_call(relay.reshape(var_1256.astype('uint16'), [11, 6, 1]), relay.reshape(const_1257.astype('uint16'), [11, 6, 13]), relay.reshape(call_1231.astype('int64'), [1040,]), ), 4)
bop_1260 = relay.greater_equal(const_1257.astype('bool'), const_1235.astype('bool')) # shape=(256, 858)
bop_1264 = relay.add(const_1235.astype('uint16'), var_1256.astype('uint16')) # shape=(256, 66)
uop_1268 = relay.atan(bop_1240.astype('float64')) # shape=(3, 4, 1040)
var_1273 = relay.var("var_1273", dtype = "float64", shape = (3, 4, 1040))#candidate|1273|(3, 4, 1040)|var|float64
bop_1274 = relay.floor_mod(uop_1268.astype('float64'), relay.reshape(var_1273.astype('float64'), relay.shape_of(uop_1268))) # shape=(3, 4, 1040)
output = relay.Tuple([call_1231,call_1234,call_1255,bop_1260,bop_1264,bop_1274,])
output2 = relay.Tuple([call_1233,call_1236,call_1258,bop_1260,bop_1264,bop_1274,])
func_1283 = relay.Function([var_1227,var_1232,var_1256,var_1273,], output)
mod['func_1283'] = func_1283
mod = relay.transform.InferType()(mod)
mutated_mod['func_1283'] = func_1283
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1283_call = mutated_mod.get_global_var('func_1283')
var_1285 = relay.var("var_1285", dtype = "float64", shape = (3, 4, 1))#candidate|1285|(3, 4, 1)|var|float64
var_1286 = relay.var("var_1286", dtype = "int64", shape = (1040,))#candidate|1286|(1040,)|var|int64
var_1287 = relay.var("var_1287", dtype = "uint16", shape = (66,))#candidate|1287|(66,)|var|uint16
var_1288 = relay.var("var_1288", dtype = "float64", shape = (3, 4, 1040))#candidate|1288|(3, 4, 1040)|var|float64
call_1284 = func_1283_call(var_1285,var_1286,var_1287,var_1288,)
output = call_1284
func_1289 = relay.Function([var_1285,var_1286,var_1287,var_1288,], output)
mutated_mod['func_1289'] = func_1289
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1333 = relay.const([[[5,-10,-10,2,-3,6,5,-2],[9,1,-2,4,-4,-4,3,-2],[7,-7,5,8,4,-1,10,-1],[7,-2,-4,2,1,4,-7,4],[2,-10,1,-7,1,-3,1,7],[9,-8,8,-4,-5,2,-7,-5]],[[-8,-8,-4,5,4,6,3,5],[5,-8,3,-9,-10,-2,9,-8],[4,-7,2,4,9,9,-1,7],[-8,-8,-7,-3,10,-8,5,-6],[-3,-7,-5,8,1,8,-4,10],[10,-6,5,-5,-7,3,-8,-10]],[[2,-5,10,-2,1,-5,-7,-8],[2,-7,3,3,-5,-1,7,-6],[-1,-7,2,-4,-1,9,-3,-8],[-1,6,-7,6,-9,-4,8,-5],[-1,-10,4,-8,-2,-7,-6,-3],[-10,-2,10,-8,3,-5,-4,-8]],[[3,-9,-3,-3,6,1,5,-8],[5,-9,-6,-3,-8,9,-9,6],[8,-10,-2,5,5,9,-2,-2],[-7,-1,9,-3,4,-1,-1,-6],[4,-8,-3,6,1,-5,-2,-9],[1,1,3,8,-6,-10,-6,5]]], dtype = "uint8")#candidate|1333|(4, 6, 8)|const|uint8
var_1334 = relay.var("var_1334", dtype = "uint8", shape = (4, 6, 8))#candidate|1334|(4, 6, 8)|var|uint8
bop_1335 = relay.less(const_1333.astype('bool'), relay.reshape(var_1334.astype('bool'), relay.shape_of(const_1333))) # shape=(4, 6, 8)
output = bop_1335
output2 = bop_1335
func_1352 = relay.Function([var_1334,], output)
mod['func_1352'] = func_1352
mod = relay.transform.InferType()(mod)
var_1353 = relay.var("var_1353", dtype = "uint8", shape = (4, 6, 8))#candidate|1353|(4, 6, 8)|var|uint8
output = func_1352(var_1353)
func_1354 = relay.Function([var_1353], output)
mutated_mod['func_1354'] = func_1354
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2195 = relay.var("var_2195", dtype = "bool", shape = (16, 6, 7))#candidate|2195|(16, 6, 7)|var|bool
var_2196 = relay.var("var_2196", dtype = "bool", shape = (16, 6, 7))#candidate|2196|(16, 6, 7)|var|bool
bop_2197 = relay.logical_or(var_2195.astype('bool'), relay.reshape(var_2196.astype('bool'), relay.shape_of(var_2195))) # shape=(16, 6, 7)
func_1283_call = mod.get_global_var('func_1283')
func_1289_call = mutated_mod.get_global_var('func_1289')
var_2208 = relay.var("var_2208", dtype = "float64", shape = (6, 2))#candidate|2208|(6, 2)|var|float64
const_2209 = relay.const([1,-2,-2,2,-8,-1,5,-10,-8,4,5,3,-9,-2,-4,5,-1,-8,10,4,8,6,-3,-6,5,6,-1,3,10,4,-4,-9,-6,8,7,-1,-9,8,3,5,-1,6,-10,9,4,-3,-4,3,-9,3,5,1,-3,6,-3,2,1,-8,-8,-2,2,-3,8,-4,9,5,5,7,-6,-4,5,-5,-5,-9,9,7,7,-6,4,-1,1,-8,-1,2,8,-8,-1,9,-5,-1,10,-6,6,1,3,-4,8,-1,-6,8,-1,9,9,-2,-8,7,-10,6,-6,-7,-7,-5,4,-5,3,8,-8,-7,-9,-1,1,9,-2,9,-10,-7,9,3,10,-8,1,-8,-5,6,-6,-2,-7,-10,4,5,6,-4,-7,-10,4,1,-4,-4,4,4,9,6,-9,-2,-6,8,2,8,-8,8,6,7,8,2,3,1,4,-7,6,7,-10,-5,-8,2,1,9,-9,1,10,-9,-9,-7,2,9,5,1,2,8,10,7,-1,-3,3,-10,-7,-7,1,-1,-8,-10,-6,-10,10,-10,9,-4,-4,-5,-2,1,1,-6,-2,5,9,4,-8,-6,2,9,-3,-6,-1,-5,3,2,6,8,7,9,-9,-5,-7,3,9,3,-4,-1,9,8,4,7,8,-9,9,4,10,4,10,-7,7,1,10,-6,7,-10,-4,10,-4,-8,6,-10,-1,4,-2,-10,-10,2,-4,8,4,2,-6,-1,-1,3,3,6,8,5,10,8,-10,-1,-9,-6,6,1,10,2,1,1,-9,-5,-6,6,10,7,2,-2,6,4,-6,5,4,-9,5,6,8,2,6,1,1,3,5,-4,3,-4,2,-7,1,1,6,1,-1,-10,-10,-10,-7,6,-10,5,-10,-4,-10,-9,5,-6,-7,6,1,-4,7,4,9,-7,10,-4,-3,-3,9,6,1,-6,-1,8,-10,-5,-8,-2,6,-6,5,9,8,3,-3,1,2,-4,-2,5,3,-1,-8,8,6,2,-5,9,2,-1,10,-1,-9,-5,7,7,1,-3,-2,-3,-6,-10,-6,6,-1,-7,9,3,-4,1,10,1,5,-10,-4,7,-10,3,-6,-5,6,-7,-1,2,-1,-5,10,-4,-10,6,-7,-6,-10,2,7,-4,-1,-7,3,6,-10,-5,-8,7,-3,-4,6,9,10,-3,-1,2,-7,-2,6,-4,-10,-9,10,-8,9,-5,-3,-2,-6,-2,1,8,-2,-10,-8,-7,5,-9,-3,8,-3,6,7,-1,-2,-9,8,3,-8,10,-9,-8,-4,9,-6,-9,2,-4,-3,2,-9,-10,-10,9,-6,-6,8,1,-3,-1,-9,-7,-6,-10,8,-4,-4,-8,-7,-2,7,-10,-4,-9,3,-5,10,5,-4,5,-6,-3,-5,-3,-7,7,-5,-9,2,-5,9,9,-1,-7,7,9,3,4,-2,-4,3,2,-10,6,-2,7,2,-3,8,10,-2,-1,-2,6,-1,2,2,2,7,-6,-1,-10,-8,-6,5,-6,-4,5,-1,9,-1,-7,-6,-7,-9,2,7,-2,7,3,-3,-8,-5,4,-3,-9,-5,7,7,4,8,-7,10,-10,-7,-6,4,-9,8,-7,8,3,-4,7,-6,-9,-9,-9,-6,-5,-4,3,-6,6,-8,4,1,-1,8,10,1,8,6,8,-6,4,5,-9,4,4,10,-9,-5,-10,10,-1,-9,-2,6,-8,-4,-4,2,1,-9,-7,5,2,8,-5,1,-1,4,-7,7,5,-10,2,4,-5,8,-4,9,5,9,6,-5,-2,4,1,7,-5,-9,-6,-10,-8,4,-3,9,10,7,7,7,-3,9,2,-2,-2,4,5,-10,4,6,-6,-7,-4,6,-8,-3,4,5,-9,-5,-1,8,4,-1,-1,-8,-6,7,9,3,6,8,-1,10,-3,10,3,-8,-5,5,-7,-5,8,-3,5,4,-4,-5,-7,-5,-9,2,5,9,10,8,-7,-8,-6,1,9,-3,10,-7,3,5,1,2,-9,7,-4,-7,-9,5,-8,-7,4,9,7,8,2,-2,3,8,-6,3,10,-1,7,-6,-4,1,2,9,9,-1,-5,1,-8,1,-4,4,-6,-4,-10,-7,3,10,1,-7,1,9,-3,-3,9,-5,-8,-6,-1,-7,-1,7,6,1,9,6,-8,-5,5,-3,1,7,4,-6,-2,-8,-1,8,4,-5,-9,-2,-5,-9,-4,7,8,-7,-5,-9,-7,-3,4,4,-3,1,-9,1,2,8,-2,-3,9,5,2,3,3,-8,5,6,-2,-10,-2,8,-2,-3,-1,7,6,-2,-7,8,8,8,-9,-3,-3,-3,-5,10,5,-2,-10,4,2,-4,2,-1,-1,6,-7,-10,-6,-3,4,-8,9,-5,10,4,-9,1,4,2,4,5,10,2,-8,7,-10,-3,7,-5,9,-9,10,10,5,-7,-1,-2,8,7,9,-10,-8,-6,-10,2,-4,10,10,-8,-3,3,9,-4,-7,5,-4,-5,-9,-7,-5,10,7,-1,-9,1,-6,-7,10,-2,-4,-5,5,1,10,-2,-7,2,4,1,4,7,-8,3,-8,7,3,10,-1,-1,-1,5,9,1,3,-7,6,7,8,2,-6,-10,10,-8,-3,3,3,-9,5,6,-2,7,8,-1,-5,-4,3,-9,-4,-5,7,8,-4,-4,6,1,4,-5,-3,1,-9,-8,-1,-5,-5,1,-8,3,7,-5,7,3,3,6,-6,5,-3,10,-3,10,-7,9,1,7,9,-5,7,10,7,9,2,-1,-8,-1,-7], dtype = "int64")#candidate|2209|(1040,)|const|int64
var_2210 = relay.var("var_2210", dtype = "uint16", shape = (66, 1))#candidate|2210|(66, 1)|var|uint16
var_2211 = relay.var("var_2211", dtype = "float64", shape = (12480,))#candidate|2211|(12480,)|var|float64
call_2207 = relay.TupleGetItem(func_1283_call(relay.reshape(var_2208.astype('float64'), [3, 4, 1]), relay.reshape(const_2209.astype('int64'), [1040,]), relay.reshape(var_2210.astype('uint16'), [66,]), relay.reshape(var_2211.astype('float64'), [3, 4, 1040]), ), 1)
call_2212 = relay.TupleGetItem(func_1289_call(relay.reshape(var_2208.astype('float64'), [3, 4, 1]), relay.reshape(const_2209.astype('int64'), [1040,]), relay.reshape(var_2210.astype('uint16'), [66,]), relay.reshape(var_2211.astype('float64'), [3, 4, 1040]), ), 1)
func_1283_call = mod.get_global_var('func_1283')
func_1289_call = mutated_mod.get_global_var('func_1289')
call_2213 = relay.TupleGetItem(func_1283_call(relay.reshape(var_2208.astype('float64'), [3, 4, 1]), relay.reshape(const_2209.astype('int64'), [1040,]), relay.reshape(var_2210.astype('uint16'), [66,]), relay.reshape(var_2211.astype('float64'), [3, 4, 1040]), ), 5)
call_2214 = relay.TupleGetItem(func_1289_call(relay.reshape(var_2208.astype('float64'), [3, 4, 1]), relay.reshape(const_2209.astype('int64'), [1040,]), relay.reshape(var_2210.astype('uint16'), [66,]), relay.reshape(var_2211.astype('float64'), [3, 4, 1040]), ), 5)
output = relay.Tuple([bop_2197,call_2207,var_2208,const_2209,var_2210,var_2211,call_2213,])
output2 = relay.Tuple([bop_2197,call_2212,var_2208,const_2209,var_2210,var_2211,call_2214,])
func_2215 = relay.Function([var_2195,var_2196,var_2208,var_2210,var_2211,], output)
mod['func_2215'] = func_2215
mod = relay.transform.InferType()(mod)
mutated_mod['func_2215'] = func_2215
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2215_call = mutated_mod.get_global_var('func_2215')
var_2217 = relay.var("var_2217", dtype = "bool", shape = (16, 6, 7))#candidate|2217|(16, 6, 7)|var|bool
var_2218 = relay.var("var_2218", dtype = "bool", shape = (16, 6, 7))#candidate|2218|(16, 6, 7)|var|bool
var_2219 = relay.var("var_2219", dtype = "float64", shape = (6, 2))#candidate|2219|(6, 2)|var|float64
var_2220 = relay.var("var_2220", dtype = "uint16", shape = (66, 1))#candidate|2220|(66, 1)|var|uint16
var_2221 = relay.var("var_2221", dtype = "float64", shape = (12480,))#candidate|2221|(12480,)|var|float64
call_2216 = func_2215_call(var_2217,var_2218,var_2219,var_2220,var_2221,)
output = call_2216
func_2222 = relay.Function([var_2217,var_2218,var_2219,var_2220,var_2221,], output)
mutated_mod['func_2222'] = func_2222
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2261 = relay.var("var_2261", dtype = "float64", shape = (16, 8, 12))#candidate|2261|(16, 8, 12)|var|float64
uop_2262 = relay.sinh(var_2261.astype('float64')) # shape=(16, 8, 12)
output = relay.Tuple([uop_2262,])
output2 = relay.Tuple([uop_2262,])
func_2264 = relay.Function([var_2261,], output)
mod['func_2264'] = func_2264
mod = relay.transform.InferType()(mod)
var_2265 = relay.var("var_2265", dtype = "float64", shape = (16, 8, 12))#candidate|2265|(16, 8, 12)|var|float64
output = func_2264(var_2265)
func_2266 = relay.Function([var_2265], output)
mutated_mod['func_2266'] = func_2266
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2863 = relay.var("var_2863", dtype = "float64", shape = (9, 12, 13))#candidate|2863|(9, 12, 13)|var|float64
uop_2864 = relay.log2(var_2863.astype('float64')) # shape=(9, 12, 13)
output = relay.Tuple([uop_2864,])
output2 = relay.Tuple([uop_2864,])
func_2871 = relay.Function([var_2863,], output)
mod['func_2871'] = func_2871
mod = relay.transform.InferType()(mod)
mutated_mod['func_2871'] = func_2871
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2872 = relay.var("var_2872", dtype = "float64", shape = (9, 12, 13))#candidate|2872|(9, 12, 13)|var|float64
func_2871_call = mutated_mod.get_global_var('func_2871')
call_2873 = func_2871_call(var_2872)
output = call_2873
func_2874 = relay.Function([var_2872], output)
mutated_mod['func_2874'] = func_2874
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2958 = relay.var("var_2958", dtype = "float32", shape = ())#candidate|2958|()|var|float32
const_2959 = relay.const([[[-9.377827,9.975647,0.385582,3.053291,4.721631],[-3.557047,-2.561918,0.311040,-7.868215,7.299443]],[[7.501746,4.685902,2.968119,8.096174,-0.924854],[-1.006240,8.155888,8.892077,5.324827,-8.250513]],[[-1.289626,-7.490023,8.655615,6.907913,8.497489],[-7.240341,9.114130,1.729812,8.547478,0.569477]],[[-9.983403,-3.367026,9.259263,-5.044817,5.610204],[1.344210,3.834486,-3.791732,0.579650,-3.557087]],[[-2.684277,0.139280,0.868527,-9.032952,3.771195],[-0.915531,5.891054,4.857133,-8.852582,-8.473431]],[[-6.292991,-2.243109,5.345679,-8.105220,-6.569890],[7.963812,-7.731486,-6.182267,-4.779874,-0.339509]],[[-4.438145,3.900834,-1.142718,-4.907236,-8.446312],[-9.748197,0.072574,-7.821521,2.230204,3.166804]],[[2.050256,8.641330,-5.636343,5.408911,-6.554225],[-8.926446,6.866586,5.634299,4.079615,-7.186952]],[[-0.913309,-8.864609,5.277941,-1.442419,-7.959432],[5.094788,1.201951,9.237506,-3.458306,-2.284742]]], dtype = "float32")#candidate|2959|(9, 2, 5)|const|float32
bop_2960 = relay.equal(var_2958.astype('bool'), const_2959.astype('bool')) # shape=(9, 2, 5)
func_581_call = mod.get_global_var('func_581')
func_586_call = mutated_mod.get_global_var('func_586')
var_2967 = relay.var("var_2967", dtype = "uint16", shape = (66,))#candidate|2967|(66,)|var|uint16
const_2968 = relay.const([5,1,9,-4,4,5,4,-2,-6,1,8,-5,9,-1,-3,3,8,-3,-3,9,1,-9,-5,-5,-10,4,2,-10,5,6,-2,9,3,8,-9,5,2,-4,-5,-9,-7,10,-4,2,4,9,-7,7,-10,-5,-5,-10,4,-5,5,3,8,-3,4,2,-1,5,9,7,-10,-2,-5,-1,8,-8,-9,-7,4,7,-3,-7,10,-4,5,-2,-6,-7,9,-9,-3,2,-8,9,8,4,-5,-8,3,7,3,-3,6,-9,-10,-3,-5,-5,3,9,-9,5,-3,2,6,6,-1,-10,10,3,10,-3,1,10,-3,7,1,8,6,-10,1,4,4,8,-5,-4,-7,2,6,-1,-10,-10,10,-4,8,-9,-1,-1,-8,9,-10,-8,9,-4,-1,-3,-3,3,1,-10,-3,-9,5,-9,9,-4,-2,-5,-2,7,3,-4,3,10,5,2,-2,-4,1,7,3,8,-4,10,3,9,7,2,1,3,-1,-7,8,-9,-5,8,8,5,10,-9,-3,10,-4,-2,-6,2,-2,2,10,-6,8,5,9,-9,5,3,-8,10,9,6,8,5,-9,-7,-8,6,-6,-1,10,5,10,5,-5,10,8,-9,6,-6,3,-5,-6,-9,1,7,-2,9,10,-9,-1,-9,5,-7,4,-7,5,-7,5,5,-6,9,5,-9,4,-2,-7,5,-10,2,-6,-10,2,-3,-3,-5,1,8,-4,4,7,4,-8,-5,-3,-2,-5,-1,-10,-6,-5,4,6,5,-1,9,-5,-1,6,-9,2,-10,-4,5,-7,6,1,9,4,-7,-1,4,-3,-8,2,8,1,-10,-10,10,6,-9,-8,4,2,-10,10,-10,-10,2,8,-5,-9,-5,-9,-6,2,4,4,3,-9,-9,-6,2,7,-5,5,5,4,10,-6,-10,2,8,2,-1,4,-10,1,6,7,5,1,5,-2,1,-3,-8,-7,-10,8,9,-5,2,-10,-4,-2,-10,-10,8,-2,-4,4,-10,8,9,3,-8,5,-6,10,6,10,-5,-1,-6,4,7,-10,8,-7,4,4,-2,-3,6,8,-5,7,1,-3,-2,5,-6,6,-4,2,5,-9,-5,-3,6,-2,-2,-1,9,-7,4,10,-8,-5,-9,10,2,-1,10,7,-7,-6,-10,-9,-4,9,2,-7,4,-3,-10,-7,10,9,-3,-7,9,-9,-2,-7,-9,-2,8,1,5,6,-7,-8,-2,9,7,-8,-9,5,-7,8,1,-5,1,-10,10,-2,9,-3,10,8,6,-4,-3,6,3,6,-4,-4,8,3,-10,-4,6,-3,9,-6,7,10,8,10,2,7,8,10,5,-4,10,-5,-3,-5,-10,-7,-10,7,-7,-1,-4,2,10,-7,-9,2,-9,6,-7,-4,1,-4,-10,-8,1,-5,-8,8,-1,6,6,-9,-7,6,-5,1,-4,6,-9,3,4,4,5,1,-6,5,-5,6,-9,-5,5,-10,-2,-2,-1,-10,3,6,-5,1,5,3,2,3,-2,-6,6,-5,-4,-1,2,-9,-7,-2,-3,-2,-10,-10,4,4,4,2,-7,2,4,4,7,2,8,4,8,2,3,-2,7,-3,-5,-5,-10,2,10,-1,-9,9,-6,1,-1,3,4,10,-9,-6,-8,7,-6,3,6,3,8,5,6,-9,8,2,-5,-7,7,-1,2,6,-10,4,-4,1,8,5,3,-1,-6,-7,7,-7,5,1,9,-5,-6,-3,3,-2,4,-5,3,-10,-10,10,-8,2,-5,1,8,-3,3,7,-1,-9,8,4,1,-8,10,8,3,3,3,-3,8,-7,1,-8,-3,-1,-2,-2,-8,4,8,-10,-2,-2,5,-5,-1,-5,-8,-9,10,4,5,-5,-6,-3,-10,7,5,6,5,4,-8,2,-10,7,-3,3,6,-10,-6,-7,7,-10,-5,4,-10,8,7,-3,3,8,10,-3,-9,9,10,-4,3,-1,2,8,4,-9,-6,-10,2,-6,-9,-1,3,-6,9,2,-3,10,-8,9,-4,3,-3,-10,10,9,6,10,3,4,7,4,9,-7,-2,-9,5,6,-6,4,4,-9,-5,-2,6,-10,2,-3,10,7,6,-8,-9,-10,-5,-5,8,-9,-3,-3,7,-2,-1,-7,6,-5,-10,-5,9,8,-10,3,4,-4,5,8,3,8,-8,7,10,8,4,1,-1,-7,1,-10,4,-2,1,10,1,-8,-4,4,-6,6,-8,-3,-7,9,-2,2,10,6,5,5,-7,-6,-9,-7,-5,-5,1,1,10,-5,-6,2,-3,9,-8], dtype = "uint16")#candidate|2968|(858,)|const|uint16
var_2969 = relay.var("var_2969", dtype = "int64", shape = (1040,))#candidate|2969|(1040,)|var|int64
call_2966 = relay.TupleGetItem(func_581_call(relay.reshape(var_2967.astype('uint16'), [11, 6, 1]), relay.reshape(const_2968.astype('uint16'), [11, 6, 13]), relay.reshape(var_2969.astype('int64'), [1040,]), ), 1)
call_2970 = relay.TupleGetItem(func_586_call(relay.reshape(var_2967.astype('uint16'), [11, 6, 1]), relay.reshape(const_2968.astype('uint16'), [11, 6, 13]), relay.reshape(var_2969.astype('int64'), [1040,]), ), 1)
output = relay.Tuple([bop_2960,call_2966,var_2967,const_2968,var_2969,])
output2 = relay.Tuple([bop_2960,call_2970,var_2967,const_2968,var_2969,])
func_2977 = relay.Function([var_2958,var_2967,var_2969,], output)
mod['func_2977'] = func_2977
mod = relay.transform.InferType()(mod)
mutated_mod['func_2977'] = func_2977
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2977_call = mutated_mod.get_global_var('func_2977')
var_2979 = relay.var("var_2979", dtype = "float32", shape = ())#candidate|2979|()|var|float32
var_2980 = relay.var("var_2980", dtype = "uint16", shape = (66,))#candidate|2980|(66,)|var|uint16
var_2981 = relay.var("var_2981", dtype = "int64", shape = (1040,))#candidate|2981|(1040,)|var|int64
call_2978 = func_2977_call(var_2979,var_2980,var_2981,)
output = call_2978
func_2982 = relay.Function([var_2979,var_2980,var_2981,], output)
mutated_mod['func_2982'] = func_2982
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3581 = relay.var("var_3581", dtype = "float64", shape = ())#candidate|3581|()|var|float64
var_3582 = relay.var("var_3582", dtype = "float64", shape = (1, 13, 11))#candidate|3582|(1, 13, 11)|var|float64
bop_3583 = relay.less(var_3581.astype('bool'), var_3582.astype('bool')) # shape=(1, 13, 11)
output = relay.Tuple([bop_3583,])
output2 = relay.Tuple([bop_3583,])
func_3588 = relay.Function([var_3581,var_3582,], output)
mod['func_3588'] = func_3588
mod = relay.transform.InferType()(mod)
var_3589 = relay.var("var_3589", dtype = "float64", shape = ())#candidate|3589|()|var|float64
var_3590 = relay.var("var_3590", dtype = "float64", shape = (1, 13, 11))#candidate|3590|(1, 13, 11)|var|float64
output = func_3588(var_3589,var_3590,)
func_3591 = relay.Function([var_3589,var_3590,], output)
mutated_mod['func_3591'] = func_3591
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3605 = relay.var("var_3605", dtype = "float32", shape = (16, 7, 10))#candidate|3605|(16, 7, 10)|var|float32
uop_3606 = relay.cosh(var_3605.astype('float32')) # shape=(16, 7, 10)
bop_3609 = relay.maximum(uop_3606.astype('int16'), relay.reshape(var_3605.astype('int16'), relay.shape_of(uop_3606))) # shape=(16, 7, 10)
uop_3617 = relay.cos(var_3605.astype('float64')) # shape=(16, 7, 10)
func_297_call = mod.get_global_var('func_297')
func_300_call = mutated_mod.get_global_var('func_300')
const_3622 = relay.const([[-1,-1,4,9,-2,5,8,9,-5,1,4,-6,8,-6,9,-7,2,3,9,9,8,-7,-3,-4,-5,-8,10,7,-6,-10,-6,9,-7,3,6,-9,-5,-3,-7,9,-9,-9,8,10,1,-3,8,-3,6,-1,10,-1,10,-5,8,-7,10,-9,-3,4,-8,1,1,-1,3,-1,5,10,-5,-10,-1,-1,4,9,8,3,2,-4,-9,-10,-10,-7,-5,10,-4,-3,7,5,-4,1,8,10,10,-3,-10,3,-7,6,-7,-2,-7,5,-8,7,5,-4,4,4,-9,-4,3,-2,6,-2,4,-4,-6,-5,1,6,2,10,-7,9,-5,-6,10,7,-6,1],[-1,-1,5,-3,9,-2,-3,-6,-9,8,-2,10,-4,10,-6,-10,-5,7,-8,-4,-2,-10,9,7,5,-1,10,6,10,4,6,-4,6,1,-2,2,1,10,10,-1,-3,-9,-6,6,3,-2,5,-10,-7,-6,-3,-4,-10,8,2,-4,-2,5,-10,-3,-3,1,-3,9,-1,-1,-3,1,-9,-5,8,3,4,7,-1,8,5,1,2,8,-5,8,-5,-1,-9,5,-6,7,-8,-6,5,2,5,8,3,1,-6,-4,-1,5,-1,-7,-9,-5,-1,6,4,7,-1,-9,2,4,2,-9,5,10,4,-3,4,-2,10,2,-5,-5,6,3,-5,-8,-7,7],[2,-7,5,-1,-7,-3,-10,1,3,-2,-10,-7,-3,2,-3,-3,-6,-3,-10,9,9,4,-8,5,-3,-10,-5,9,-3,8,-10,3,1,7,2,1,-2,3,4,-1,8,-1,10,8,1,-3,9,4,-2,3,1,-9,1,-10,3,-1,5,-1,9,2,9,10,-1,-10,-7,9,7,10,-2,-4,-6,-6,-6,-7,8,7,-3,5,-1,-7,8,-10,-7,-4,3,-4,2,9,8,-4,-3,2,-8,-10,-2,9,6,-4,10,-2,7,-1,7,-8,5,-9,-3,-6,10,9,-6,1,-8,3,-2,-10,-10,-7,-2,-1,-8,-7,3,-1,-1,6,-9,-7,9,-2],[4,9,4,10,2,-2,2,-1,-3,10,1,1,-3,6,8,-3,1,-6,-2,2,8,4,3,6,8,-2,-4,-10,1,8,-5,4,5,-4,8,10,-9,-9,2,8,3,-10,1,1,7,3,-10,-9,-9,-3,8,-5,2,9,9,-3,-7,9,-2,-2,-2,10,-6,-9,3,-1,7,-9,-2,-2,-6,-5,-7,-3,-7,-5,-1,-10,-5,1,-5,10,10,3,-8,5,10,-8,-4,-6,-5,-9,8,-5,-10,-3,-9,-7,4,3,4,9,7,3,-8,10,1,-2,-1,-4,-3,8,-3,3,6,1,-5,6,-10,3,7,1,-5,7,-10,-8,9,5,2,9],[-5,8,3,-1,-2,-8,10,-6,-2,10,3,5,4,2,-7,4,1,3,7,-6,-8,7,-8,2,6,-4,-2,3,-6,-3,-5,-6,-10,-2,-2,-5,7,-10,-7,-4,6,5,4,3,-2,6,3,6,10,-10,10,-5,-9,1,9,10,3,3,-3,9,3,5,-9,7,2,-2,-3,9,-3,-10,8,-10,-5,-8,7,6,-5,6,-1,-3,-2,-5,-3,-9,-7,-3,-8,5,3,-2,3,2,8,-1,-1,-1,-1,-10,-3,3,5,-6,-8,-6,4,-3,7,-4,5,3,-2,-1,-3,9,7,7,-9,-6,-3,10,-4,4,-10,6,4,1,6,-10,10,-6],[-1,-2,-7,5,-3,-9,8,10,-2,5,-8,3,-8,-4,10,7,4,-10,-10,-4,2,1,7,-1,-8,6,-1,-9,-1,7,-2,3,-6,8,1,-10,-7,4,10,4,2,-3,8,1,-2,1,7,-9,-10,-8,3,4,8,-4,5,-8,8,9,-1,5,1,9,-1,-2,7,2,9,-10,7,-5,1,-9,-5,5,1,1,-8,-1,-9,2,2,-6,3,7,-1,4,6,-1,4,-8,7,-8,-8,-4,3,-2,1,5,7,3,6,10,-1,-4,-8,-9,-10,8,7,4,9,4,-8,-3,2,-1,-3,10,-1,-8,-7,-3,-5,6,4,-3,-7,-4,-7,10],[-3,10,3,10,6,-4,-5,1,-10,4,-6,1,-4,-2,2,-2,6,-2,4,4,10,-5,7,-6,3,-4,-7,-6,-10,1,10,-10,7,-5,6,3,1,10,3,6,-8,-7,-5,-3,1,8,9,-10,-10,9,6,1,-9,-7,8,10,-4,-8,-2,-6,7,6,2,4,3,-7,5,-8,10,9,-9,-4,6,3,-7,10,-5,-1,4,-8,-9,8,6,10,-1,3,-6,4,3,1,-8,-3,9,9,-1,2,5,-6,6,-6,3,-1,-8,-2,-4,-2,-3,-7,-1,6,5,-2,8,3,3,4,-9,-6,10,10,10,8,9,8,2,-1,-3,-1,-10,8],[-4,-1,9,-1,-5,5,-5,3,-8,3,6,-1,7,-4,6,2,4,2,9,2,-6,-1,10,4,-4,2,-1,3,-6,-6,-8,-4,-10,-8,2,2,9,-1,-7,10,4,-5,6,-4,4,-5,-6,9,-5,-4,-8,-7,4,-9,4,4,1,4,7,8,-8,6,-3,-2,3,-7,6,8,-1,1,-6,3,6,5,-5,-7,-7,9,-9,8,8,-2,9,-4,-9,-8,-10,2,-10,9,9,10,-10,-6,1,10,-9,-6,2,-1,-5,-6,9,2,5,7,-7,10,8,-6,-9,-2,9,-5,8,-2,4,-1,-5,4,-4,6,10,1,-1,8,-5,8,-8,5]], dtype = "int64")#candidate|3622|(8, 130)|const|int64
call_3621 = relay.TupleGetItem(func_297_call(relay.reshape(const_3622.astype('int64'), [5, 16, 13]), relay.reshape(const_3622.astype('int64'), [5, 16, 13]), ), 0)
call_3623 = relay.TupleGetItem(func_300_call(relay.reshape(const_3622.astype('int64'), [5, 16, 13]), relay.reshape(const_3622.astype('int64'), [5, 16, 13]), ), 0)
func_2977_call = mod.get_global_var('func_2977')
func_2982_call = mutated_mod.get_global_var('func_2982')
var_3638 = relay.var("var_3638", dtype = "float32", shape = ())#candidate|3638|()|var|float32
var_3639 = relay.var("var_3639", dtype = "uint16", shape = (1, 66))#candidate|3639|(1, 66)|var|uint16
call_3637 = relay.TupleGetItem(func_2977_call(relay.reshape(var_3638.astype('float32'), []), relay.reshape(var_3639.astype('uint16'), [66,]), relay.reshape(const_3622.astype('int64'), [1040,]), ), 4)
call_3640 = relay.TupleGetItem(func_2982_call(relay.reshape(var_3638.astype('float32'), []), relay.reshape(var_3639.astype('uint16'), [66,]), relay.reshape(const_3622.astype('int64'), [1040,]), ), 4)
output = relay.Tuple([bop_3609,uop_3617,call_3621,const_3622,call_3637,var_3638,var_3639,])
output2 = relay.Tuple([bop_3609,uop_3617,call_3623,const_3622,call_3640,var_3638,var_3639,])
func_3642 = relay.Function([var_3605,var_3638,var_3639,], output)
mod['func_3642'] = func_3642
mod = relay.transform.InferType()(mod)
mutated_mod['func_3642'] = func_3642
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3642_call = mutated_mod.get_global_var('func_3642')
var_3644 = relay.var("var_3644", dtype = "float32", shape = (16, 7, 10))#candidate|3644|(16, 7, 10)|var|float32
var_3645 = relay.var("var_3645", dtype = "float32", shape = ())#candidate|3645|()|var|float32
var_3646 = relay.var("var_3646", dtype = "uint16", shape = (1, 66))#candidate|3646|(1, 66)|var|uint16
call_3643 = func_3642_call(var_3644,var_3645,var_3646,)
output = call_3643
func_3647 = relay.Function([var_3644,var_3645,var_3646,], output)
mutated_mod['func_3647'] = func_3647
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3702 = relay.var("var_3702", dtype = "float32", shape = (12, 9, 1))#candidate|3702|(12, 9, 1)|var|float32
uop_3703 = relay.tan(var_3702.astype('float32')) # shape=(12, 9, 1)
func_1118_call = mod.get_global_var('func_1118')
func_1121_call = mutated_mod.get_global_var('func_1121')
const_3711 = relay.const([[-6,8,8,9],[4,7,-1,5],[-4,-1,-9,2],[-8,7,-8,-6],[8,8,-9,-9],[10,-5,10,10],[-3,5,-7,-2],[-7,8,3,-2],[7,6,-6,9],[2,-8,3,6],[-1,8,10,-3],[-8,-4,5,4],[7,-10,-7,-2],[4,-9,10,-3],[-6,8,-10,3],[-4,-10,5,4],[6,-7,-4,9],[-9,-5,2,1],[-10,4,-2,9],[-5,6,5,-2],[-6,1,9,8],[-8,8,-2,10],[10,1,10,-1],[-10,-5,-8,7],[7,2,10,6],[2,10,7,-5],[3,-10,-5,-1],[9,-4,-4,-1],[-1,-9,-2,10],[10,-9,1,3],[-7,8,5,10],[5,1,5,2],[-4,8,7,3],[8,-4,3,3],[-4,3,-2,5],[9,9,-7,-9],[-2,-10,-4,6],[-2,-1,10,4],[-8,-3,-4,-8],[-4,4,-7,-4],[-1,-8,7,9],[4,4,-5,-8],[-9,-3,-7,3],[-9,-3,-3,7],[-3,-1,9,-10],[1,9,-4,8],[5,-4,2,4],[-4,8,-5,-3],[10,-9,-3,1],[2,-9,6,8],[9,-4,9,4],[4,-3,7,-7],[8,-7,4,-5],[10,3,-3,5],[-2,3,-6,7],[1,9,5,-6],[-4,6,-10,4],[-6,4,-9,9],[8,5,3,4],[-1,1,-10,9],[-7,-2,5,-5],[-5,10,9,-5],[5,3,-9,9],[1,-6,-4,-7],[-1,10,-4,-8],[-5,1,8,-3],[4,-9,4,-5],[-8,9,7,5],[-2,-3,-1,3],[9,-1,10,10],[-9,-8,-8,1],[-5,10,-4,-9],[1,3,3,7],[10,9,-2,-5],[-9,-8,-6,-1],[-7,3,7,6],[-4,-9,4,8],[-5,-5,7,10],[3,-1,4,9],[4,-3,-4,8],[-9,-4,4,-9],[1,6,6,-6],[-3,-9,10,10],[-2,4,3,3],[-8,7,10,-10],[9,-1,-3,3],[3,-5,-2,6],[2,-9,3,-7],[8,4,9,9],[10,-5,8,-9],[2,3,-10,7],[10,-7,7,-3],[-9,2,-8,7],[2,1,10,2],[-5,-5,3,-9],[7,5,1,10],[4,-9,5,-2],[-6,9,-4,-7],[4,-6,-5,2],[-10,-7,-5,-10],[-8,-1,4,10],[-6,-5,9,-1],[-5,2,9,-1],[10,-9,-4,-2],[-9,3,-6,-3],[-3,-5,4,5],[-1,9,-2,-1],[10,-7,-1,7],[2,5,-5,4],[-1,-10,5,4],[4,-9,8,9],[10,-4,-5,-2],[3,8,-8,-7],[1,1,3,-5],[-3,-3,4,8],[-8,-4,-3,3],[-4,7,-1,-10],[-2,-10,10,-3],[-10,3,8,8],[6,-10,-10,9]], dtype = "int16")#candidate|3711|(120, 4)|const|int16
call_3710 = relay.TupleGetItem(func_1118_call(relay.reshape(const_3711.astype('int16'), [16, 5, 6])), 0)
call_3712 = relay.TupleGetItem(func_1121_call(relay.reshape(const_3711.astype('int16'), [16, 5, 6])), 0)
func_1352_call = mod.get_global_var('func_1352')
func_1354_call = mutated_mod.get_global_var('func_1354')
var_3725 = relay.var("var_3725", dtype = "uint8", shape = (192,))#candidate|3725|(192,)|var|uint8
call_3724 = func_1352_call(relay.reshape(var_3725.astype('uint8'), [4, 6, 8]))
call_3726 = func_1352_call(relay.reshape(var_3725.astype('uint8'), [4, 6, 8]))
bop_3730 = relay.bitwise_or(uop_3703.astype('int8'), relay.reshape(var_3702.astype('int8'), relay.shape_of(uop_3703))) # shape=(12, 9, 1)
uop_3737 = relay.cos(uop_3703.astype('float64')) # shape=(12, 9, 1)
output = relay.Tuple([call_3710,const_3711,call_3724,var_3725,bop_3730,uop_3737,])
output2 = relay.Tuple([call_3712,const_3711,call_3726,var_3725,bop_3730,uop_3737,])
func_3753 = relay.Function([var_3702,var_3725,], output)
mod['func_3753'] = func_3753
mod = relay.transform.InferType()(mod)
mutated_mod['func_3753'] = func_3753
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3753_call = mutated_mod.get_global_var('func_3753')
var_3755 = relay.var("var_3755", dtype = "float32", shape = (12, 9, 1))#candidate|3755|(12, 9, 1)|var|float32
var_3756 = relay.var("var_3756", dtype = "uint8", shape = (192,))#candidate|3756|(192,)|var|uint8
call_3754 = func_3753_call(var_3755,var_3756,)
output = call_3754
func_3757 = relay.Function([var_3755,var_3756,], output)
mutated_mod['func_3757'] = func_3757
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3954 = relay.var("var_3954", dtype = "uint8", shape = ())#candidate|3954|()|var|uint8
const_3955 = relay.const([[[-6,-7],[-7,-3],[1,1],[-3,2],[8,-6],[-1,-5],[4,3],[-5,-5],[2,-2],[-10,-8],[-10,-3],[-7,-10],[9,5],[10,2]],[[-2,-3],[5,-1],[-1,-8],[8,4],[-4,-5],[-1,6],[-1,-1],[-9,-5],[9,-1],[6,-3],[-5,-8],[6,2],[-10,-1],[-2,-5]]], dtype = "uint8")#candidate|3955|(2, 14, 2)|const|uint8
bop_3956 = relay.subtract(var_3954.astype('uint8'), const_3955.astype('uint8')) # shape=(2, 14, 2)
bop_3970 = relay.floor_divide(var_3954.astype('float64'), bop_3956.astype('float64')) # shape=(2, 14, 2)
uop_3990 = relay.atan(const_3955.astype('float64')) # shape=(2, 14, 2)
bop_3993 = relay.logical_or(uop_3990.astype('bool'), relay.reshape(const_3955.astype('bool'), relay.shape_of(uop_3990))) # shape=(2, 14, 2)
output = relay.Tuple([bop_3970,bop_3993,])
output2 = relay.Tuple([bop_3970,bop_3993,])
func_4005 = relay.Function([var_3954,], output)
mod['func_4005'] = func_4005
mod = relay.transform.InferType()(mod)
var_4006 = relay.var("var_4006", dtype = "uint8", shape = ())#candidate|4006|()|var|uint8
output = func_4005(var_4006)
func_4007 = relay.Function([var_4006], output)
mutated_mod['func_4007'] = func_4007
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4025 = relay.const([[[5,7,-2,9,-7,6,-5,-2,-10,-2,-3],[-10,6,2,-8,3,4,3,4,-6,2,-2],[-8,6,9,8,2,7,-3,2,-1,-7,7],[-10,3,-4,9,-9,-10,-6,-5,-1,2,5],[-4,-9,5,9,-7,3,-7,4,-4,-7,-10],[-3,9,3,1,-9,6,1,3,3,3,1]],[[-4,-7,7,-5,9,3,-4,-1,6,-2,-5],[4,-5,1,3,-7,6,7,10,-10,10,6],[2,8,7,-10,5,4,9,9,5,2,1],[-5,-9,-9,2,4,-5,2,4,-6,-4,-10],[-4,-8,6,2,-7,-8,6,7,7,2,6],[5,3,-1,-2,3,-2,6,-9,5,7,-4]],[[5,1,-5,-5,6,-10,-1,-10,-2,10,-2],[-9,-7,6,-10,-9,2,-6,-6,7,-10,4],[6,4,-7,-9,3,1,-6,5,9,-2,7],[-9,8,-6,-1,-10,4,-4,-2,-1,4,-4],[9,6,-7,-1,6,-7,6,-5,-4,3,-10],[-9,1,-7,2,-5,5,10,-10,6,1,-2]],[[-9,-3,1,10,-4,-6,-9,-9,-6,-1,-6],[3,-2,-1,4,-9,10,5,7,-5,-6,-5],[5,3,10,2,-7,-1,-2,1,8,9,1],[1,1,8,-8,2,8,-3,-1,4,10,6],[-10,9,8,-5,-4,-4,2,-4,-6,-2,-4],[-3,-3,-3,-2,6,8,9,-5,-3,-1,-6]],[[1,-3,-6,1,3,-5,1,-9,8,7,1],[2,-4,-5,-5,10,-10,-3,10,-8,-10,-9],[-2,-5,4,-8,2,10,-4,9,-5,5,1],[-4,6,6,-7,-6,-5,-1,3,-5,7,10],[-10,1,9,-3,-8,3,-10,-7,-8,-8,-3],[2,-6,2,-2,-7,1,-8,-5,-1,7,-4]],[[-5,-6,5,-5,-10,-4,-4,10,-7,8,4],[-8,-6,-4,3,10,1,10,-9,-2,-2,5],[-3,3,1,-9,7,6,4,-6,7,6,3],[4,1,-9,4,-10,-9,8,6,7,-3,-9],[-4,-6,1,9,-8,-4,-2,-1,-8,-3,5],[9,9,7,10,10,10,-4,-8,7,-7,2]],[[-5,-6,-7,2,-2,-5,6,4,-9,9,-2],[2,-8,-3,-9,6,1,9,-3,-10,-1,-8],[1,4,-10,-1,7,-10,4,2,2,1,2],[-1,-10,-1,-10,-9,-3,-2,7,-5,9,-1],[-1,-10,5,-8,1,1,4,4,1,4,-6],[8,2,-10,-9,7,8,-2,-9,7,2,3]],[[9,10,9,-5,2,8,5,6,1,-3,-9],[9,7,-9,-3,5,-8,-2,-2,-3,10,-8],[-1,8,-8,-10,-8,-6,-6,-6,-7,-3,-7],[-3,-1,3,8,-6,-8,3,-7,-2,4,2],[4,9,10,-6,6,-5,-6,10,-2,4,-3],[5,-8,7,-6,1,8,1,3,-4,-7,-10]],[[1,-8,6,-4,-7,-3,5,-8,-10,3,1],[5,-1,5,-1,-10,2,-5,8,-1,8,3],[-3,-8,-9,10,-5,6,-5,-4,3,-9,2],[7,-5,6,-10,9,-9,6,-8,-10,1,-6],[4,-3,4,3,-5,-7,-9,-4,-1,2,-9],[-9,-5,9,2,2,-7,-6,6,6,-10,-2]],[[7,7,8,-7,-10,-4,-5,2,-8,5,1],[6,-1,-1,-7,-1,10,2,9,-6,8,-5],[3,-2,4,-8,-1,6,-9,6,-9,-10,-4],[8,-6,2,4,-8,-7,-10,2,-9,2,-6],[10,7,-8,10,-3,-5,3,-4,-7,6,5],[-6,-5,1,-8,-10,-10,2,6,-7,-10,-8]]], dtype = "int32")#candidate|4025|(10, 6, 11)|const|int32
var_4026 = relay.var("var_4026", dtype = "int32", shape = (10, 6, 11))#candidate|4026|(10, 6, 11)|var|int32
bop_4027 = relay.equal(const_4025.astype('bool'), relay.reshape(var_4026.astype('bool'), relay.shape_of(const_4025))) # shape=(10, 6, 11)
func_3642_call = mod.get_global_var('func_3642')
func_3647_call = mutated_mod.get_global_var('func_3647')
var_4034 = relay.var("var_4034", dtype = "float32", shape = (1120,))#candidate|4034|(1120,)|var|float32
const_4035 = relay.const(4.741476, dtype = "float32")#candidate|4035|()|const|float32
var_4036 = relay.var("var_4036", dtype = "uint16", shape = (22, 3))#candidate|4036|(22, 3)|var|uint16
call_4033 = relay.TupleGetItem(func_3642_call(relay.reshape(var_4034.astype('float32'), [16, 7, 10]), relay.reshape(const_4035.astype('float32'), []), relay.reshape(var_4036.astype('uint16'), [1, 66]), ), 2)
call_4037 = relay.TupleGetItem(func_3647_call(relay.reshape(var_4034.astype('float32'), [16, 7, 10]), relay.reshape(const_4035.astype('float32'), []), relay.reshape(var_4036.astype('uint16'), [1, 66]), ), 2)
output = relay.Tuple([bop_4027,call_4033,var_4034,const_4035,var_4036,])
output2 = relay.Tuple([bop_4027,call_4037,var_4034,const_4035,var_4036,])
func_4041 = relay.Function([var_4026,var_4034,var_4036,], output)
mod['func_4041'] = func_4041
mod = relay.transform.InferType()(mod)
mutated_mod['func_4041'] = func_4041
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4041_call = mutated_mod.get_global_var('func_4041')
var_4043 = relay.var("var_4043", dtype = "int32", shape = (10, 6, 11))#candidate|4043|(10, 6, 11)|var|int32
var_4044 = relay.var("var_4044", dtype = "float32", shape = (1120,))#candidate|4044|(1120,)|var|float32
var_4045 = relay.var("var_4045", dtype = "uint16", shape = (22, 3))#candidate|4045|(22, 3)|var|uint16
call_4042 = func_4041_call(var_4043,var_4044,var_4045,)
output = call_4042
func_4046 = relay.Function([var_4043,var_4044,var_4045,], output)
mutated_mod['func_4046'] = func_4046
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4209 = relay.const(5, dtype = "uint32")#candidate|4209|()|const|uint32
var_4210 = relay.var("var_4210", dtype = "uint32", shape = (14, 7, 16))#candidate|4210|(14, 7, 16)|var|uint32
bop_4211 = relay.less_equal(const_4209.astype('bool'), var_4210.astype('bool')) # shape=(14, 7, 16)
func_2871_call = mod.get_global_var('func_2871')
func_2874_call = mutated_mod.get_global_var('func_2874')
var_4217 = relay.var("var_4217", dtype = "float64", shape = (1404,))#candidate|4217|(1404,)|var|float64
call_4216 = relay.TupleGetItem(func_2871_call(relay.reshape(var_4217.astype('float64'), [9, 12, 13])), 0)
call_4218 = relay.TupleGetItem(func_2874_call(relay.reshape(var_4217.astype('float64'), [9, 12, 13])), 0)
output = relay.Tuple([bop_4211,call_4216,var_4217,])
output2 = relay.Tuple([bop_4211,call_4218,var_4217,])
func_4219 = relay.Function([var_4210,var_4217,], output)
mod['func_4219'] = func_4219
mod = relay.transform.InferType()(mod)
var_4220 = relay.var("var_4220", dtype = "uint32", shape = (14, 7, 16))#candidate|4220|(14, 7, 16)|var|uint32
var_4221 = relay.var("var_4221", dtype = "float64", shape = (1404,))#candidate|4221|(1404,)|var|float64
output = func_4219(var_4220,var_4221,)
func_4222 = relay.Function([var_4220,var_4221,], output)
mutated_mod['func_4222'] = func_4222
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4988 = relay.const([[[-3.736690,-1.694587,7.924420,5.103209,3.531017,1.192102,3.500150,-3.815768,0.736726,-8.684946]]], dtype = "float64")#candidate|4988|(1, 1, 10)|const|float64
var_4989 = relay.var("var_4989", dtype = "float64", shape = (14, 3, 10))#candidate|4989|(14, 3, 10)|var|float64
bop_4990 = relay.mod(const_4988.astype('float64'), var_4989.astype('float64')) # shape=(14, 3, 10)
bop_4997 = relay.floor_mod(bop_4990.astype('float64'), const_4988.astype('float64')) # shape=(14, 3, 10)
output = relay.Tuple([bop_4997,])
output2 = relay.Tuple([bop_4997,])
func_5003 = relay.Function([var_4989,], output)
mod['func_5003'] = func_5003
mod = relay.transform.InferType()(mod)
var_5004 = relay.var("var_5004", dtype = "float64", shape = (14, 3, 10))#candidate|5004|(14, 3, 10)|var|float64
output = func_5003(var_5004)
func_5005 = relay.Function([var_5004], output)
mutated_mod['func_5005'] = func_5005
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5794 = relay.var("var_5794", dtype = "float32", shape = (9, 13, 3))#candidate|5794|(9, 13, 3)|var|float32
var_5795 = relay.var("var_5795", dtype = "float32", shape = (9, 13, 3))#candidate|5795|(9, 13, 3)|var|float32
bop_5796 = relay.floor_mod(var_5794.astype('float32'), relay.reshape(var_5795.astype('float32'), relay.shape_of(var_5794))) # shape=(9, 13, 3)
func_2264_call = mod.get_global_var('func_2264')
func_2266_call = mutated_mod.get_global_var('func_2266')
const_5801 = relay.const([-5.536725,9.264854,7.431062,-5.015039,-7.549831,7.744404,-2.393648,7.625312,-5.112201,5.573214,-5.927758,-9.083997,-2.326621,2.387423,2.506729,2.747633,3.654716,-1.757748,-7.903717,2.245388,-6.082511,-8.960481,5.701148,7.402715,5.627567,8.740097,-1.099732,2.559227,-1.984381,-4.231229,8.619249,3.462818,-3.817652,8.575857,-2.177554,-8.366640,5.991610,9.593213,-6.551099,-7.605838,-8.723218,7.698208,-8.613499,8.055719,-8.409118,-4.066080,3.213104,-2.157148,2.187192,-9.689718,-7.642675,-0.939029,-5.005362,-5.513624,-9.101819,-4.465144,6.781720,-3.869340,-8.644303,-5.735283,0.001392,-2.444059,2.505423,5.915658,7.441009,-2.728901,-5.072919,9.295823,0.032173,9.662701,8.141725,-3.119722,-8.848630,-2.105765,-2.010357,7.248200,5.829475,0.340044,-8.047691,8.336821,-3.405724,-2.282951,9.923771,6.304590,2.931869,-0.570035,-0.458287,8.220056,4.333058,-0.781282,8.143369,-3.913409,4.448782,6.862093,-6.662417,5.091411,-1.177259,3.123276,-8.192910,-9.211912,5.969087,-2.331447,8.653054,-1.686655,2.898490,4.980228,-7.769872,4.606937,5.976176,-8.332585,9.472350,-4.504331,4.496498,1.963800,0.843607,3.200044,9.048964,-7.256999,-9.392361,6.411296,8.052519,-4.235805,-3.178330,-4.248621,-2.972430,2.668410,-1.388350,6.533171,6.938136,0.007016,4.601656,-6.268652,-9.778342,0.592790,9.746182,-2.839396,1.399252,4.163995,-5.579788,0.724000,-2.084686,5.983335,1.298875,-7.844087,7.170061,6.908289,-0.258036,9.170048,-6.014090,4.861857,-5.547536,9.704207,-6.227606,7.697204,-7.936155,3.589695,-9.685641,3.803843,-7.640220,-0.535921,-5.019106,-7.977612,1.409533,1.847243,-2.020349,-7.425544,9.410262,4.943421,-4.129903,-7.514821,9.442954,0.060443,-7.285455,9.047582,-9.769546,8.084725,0.728799,9.013896,3.663628,4.242416,-9.842865,-3.096766,0.672395,6.772752,3.838144,-5.472075,-9.076626,-9.606209,-8.480288,6.025003,8.631768,9.152524,-7.001178,-2.181614,-0.407457,8.260534,9.886196,-2.395174,1.794166,-1.622757,6.350096,-8.464407,-1.471075,3.117190,-5.493213,8.061808,6.948922,0.402254,1.915968,3.275383,6.092867,-7.800030,8.500231,2.961300,4.460617,4.665377,-2.236070,-9.206646,-7.106544,9.578513,-0.396305,-9.075546,-7.270551,3.827226,7.399715,0.604825,1.391526,1.809633,-6.443870,-5.791066,-6.924881,-6.637538,8.707678,0.256465,-6.706599,-3.586315,1.914196,-0.667822,-4.769169,-2.669964,8.592618,-9.910631,0.912936,0.481550,-5.115310,5.623412,6.997154,3.530798,-6.002512,-2.281885,-3.403303,5.503790,1.154256,6.349623,4.630792,-9.554004,1.450599,-4.790699,-9.083487,-4.436960,7.534576,-4.029663,6.079664,5.578846,-4.797191,3.517912,-7.213045,3.337371,-8.713934,-5.779897,-9.325601,-7.847020,9.080787,-9.649461,-1.096124,9.470532,8.389306,-4.877377,8.916188,-5.500328,8.217932,-6.862786,6.798990,-0.801446,-7.949999,1.599479,6.021643,-1.026863,-5.322569,-7.556885,0.668176,-6.403989,5.748497,-4.566449,-0.340061,5.589331,-7.239514,-0.655236,3.426742,8.493913,4.017047,-8.442921,1.241765,1.794587,6.106012,-1.484882,4.434518,4.514992,-1.394988,-4.282141,9.208462,-0.044518,3.037035,5.777704,3.433202,4.292237,1.280375,2.852937,-0.830586,0.653868,8.919130,1.248879,-0.481549,7.857508,-9.220852,-4.068315,2.941366,8.414764,0.977847,1.315708,9.365280,3.883637,-6.698565,4.902892,6.836981,2.748248,6.494843,-2.070755,1.079854,-3.141835,4.056925,8.248643,4.709410,3.866797,4.205988,-0.448131,4.037001,-1.359447,-1.757646,1.625608,-2.737571,-7.423669,0.400634,8.320713,7.491472,-8.875190,-7.847700,8.417268,-7.646106,-8.889163,-5.892635,-5.875874,-2.559461,7.242966,9.249490,0.122706,9.285209,0.620635,-0.339609,-4.591471,-0.637987,-8.335126,-5.790482,-3.789999,-3.318249,3.726990,8.612580,4.575522,-0.621245,7.175052,1.105985,2.947678,-1.174283,5.643440,1.326110,-0.999974,-5.946773,4.167847,8.792235,3.904403,-1.470769,-6.987147,-4.112949,-8.712466,-9.216013,-2.776178,-2.896731,9.463835,-3.588160,4.127089,-4.484443,1.805431,-1.463808,7.125704,7.497291,5.780506,4.922504,4.985701,8.127081,-9.514223,6.789485,0.123420,-5.238843,6.241408,9.227369,5.646115,-3.259748,-4.001429,3.648066,-1.196911,-3.949869,-2.681091,2.243181,-7.514885,4.001382,7.945199,4.821473,-6.933188,2.606892,1.340794,-8.708724,-0.112879,8.583036,3.449726,-7.712497,9.851636,-3.560628,0.955141,-7.702575,-0.711741,-4.431949,-6.845830,1.233641,-0.064863,-2.703398,8.537989,-2.442483,-3.436551,0.012411,-2.857908,3.221995,-2.446283,5.482686,-5.967920,7.800988,-3.349852,-7.591054,-7.746717,9.410560,-8.800493,-6.419261,4.209149,2.755429,-0.568654,2.582450,-4.151697,8.263169,-1.597348,-2.471423,-4.026899,-7.524051,-6.327795,6.498923,-1.770871,7.940259,8.354063,-9.121864,-3.397628,-5.658773,-5.399854,1.850614,-4.330420,-3.517592,3.087466,6.830718,-4.890256,-9.988629,-6.704271,8.399030,1.011745,2.138930,-7.728360,2.885421,8.725128,-4.006152,6.116334,1.953638,-4.072739,4.836153,-1.571564,7.394316,-5.848929,2.676523,9.137235,8.687436,1.845672,2.010349,-4.299140,-0.178315,-6.556684,-3.421609,-5.992601,-8.293048,6.778075,0.132280,-9.226841,-1.353372,-4.274597,-2.746181,3.652508,-0.656256,-7.471576,-4.431411,-4.805275,4.117586,2.822771,9.023410,5.209566,-7.867133,9.510769,-7.398308,-5.159675,-6.435953,0.105544,4.889108,-5.716522,0.589347,2.749614,7.908362,8.902128,0.192409,-1.940866,-5.547420,-1.648769,-0.516056,-3.775941,2.956252,-5.577692,-2.767298,-6.467746,-0.407163,3.111885,-2.486746,7.984202,3.224000,-9.021570,-5.332832,8.516257,-7.313398,3.290003,2.960977,4.429128,5.863955,-9.814272,4.212618,5.824596,4.638810,-0.411220,3.476126,0.788086,-8.742103,6.156739,5.353726,1.663021,-9.663951,-0.405273,7.248661,1.268885,1.888129,-8.217905,-0.924843,-3.955897,-4.131558,9.437848,7.858643,-2.877219,-0.911150,-3.250226,-2.540480,2.992860,-3.617140,-0.340298,-0.292546,-5.016045,3.577113,-8.003888,-5.545364,7.898080,1.696297,1.148927,-5.832574,-1.862504,1.266560,-6.812428,0.034128,0.988150,5.905722,6.788421,3.994039,-3.429740,-7.562235,-1.704074,6.807711,7.547994,2.738165,5.225410,6.956757,-1.952145,-3.042991,-5.633868,2.797856,-4.045274,-3.805438,-0.152689,5.078125,-0.517964,0.315884,6.198709,9.389035,-8.460172,7.591359,-3.779566,7.721951,5.365052,5.850038,5.369112,9.766416,6.844880,1.069579,6.369289,-7.779257,-3.783255,0.261938,8.007108,3.016215,0.877896,8.938645,7.325867,-4.478371,5.607160,-4.975495,-9.506042,-8.864370,4.905388,0.263862,-4.287590,2.770082,-5.817813,-9.805013,1.704888,7.838565,-0.084901,-1.863289,8.162911,6.421179,-7.879644,-1.030992,4.174484,-2.838763,-0.065872,-1.599729,-1.344761,-7.091068,-7.636402,-9.174371,-8.041310,-8.427600,-6.042933,-8.558073,0.667912,-3.918983,5.040627,1.653003,8.464125,-6.254456,7.367698,4.903012,-7.170203,-9.001825,-7.304563,-3.221300,-3.177360,-5.218378,1.800057,5.511581,-0.469464,-9.679404,-6.150065,-4.140865,1.744742,1.721644,8.941846,-7.108582,-4.152665,-3.849352,2.809286,1.058633,2.303249,9.781194,-2.255518,-7.952843,-2.948130,5.083382,-9.666622,8.501761,-7.533328,-0.372428,0.345793,1.706257,-3.223245,-3.078031,-0.430583,8.773534,3.066161,-2.571001,1.600454,-8.870186,2.380562,-9.798209,-0.599273,0.222765,7.270438,-3.995319,5.857530,-3.650606,-0.880652,6.268594,5.640732,-7.893501,1.050533,-4.828836,4.093806,8.835051,-2.397096,-1.880555,0.393124,0.174171,-8.057996,3.278782,7.794163,4.673969,-6.211280,-2.268380,0.238138,6.574490,0.442728,-3.567176,-4.935540,6.785762,4.642088,5.423639,-4.216192,7.116442,7.175506,-9.333864,2.982162,-2.822868,-1.109860,4.017110,1.592180,0.759597,-0.647452,-4.254491,4.626228,-8.859203,3.541273,7.130304,-9.692298,-7.035672,2.856306,9.025209,-9.516738,-4.432779,-3.074206,7.470042,-8.134434,1.098045,-2.152962,-1.030600,4.795144,-3.701476,-7.589170,-7.804893,6.295368,-6.231189,0.524979,0.860233,0.744635,7.383166,8.644691,-2.148279,6.225462,-9.613541,6.035437,0.484114,3.461966,9.840812,9.097708,6.906067,3.496107,4.790109,4.284849,-6.902765,-8.874647,-9.219876,-5.975672,-1.038007,-6.715379,3.380523,3.283489,2.063902,5.470006,-7.960796,-3.004309,9.788118,-7.471256,5.857276,7.180921,-4.800484,0.294454,4.651825,0.418962,8.796178,-8.242203,9.104884,7.363661,6.233127,-3.230473,3.971635,2.563958,-4.573794,6.752770,3.194113,4.414646,-5.031092,-4.721540,4.448523,2.665859,-0.057082,9.764699,8.416802,-5.269239,8.753633,2.175540,6.333635,6.856003,-2.140388,6.306953,3.581254,1.290606,6.200259,7.740891,-5.039062,2.957212,3.232248,-9.636975,2.440745,3.654856,6.802137,8.218357,6.159350,-2.636275,6.632889,3.607934,8.691822,7.432762,-2.708764,2.736937,6.071973,8.363695,2.464310,-1.530072,-5.446560,-4.153832,-5.011582,8.899551,-0.377610,0.468010,4.228883,6.489166,3.192731,-6.363315,5.705094,-9.191766,-1.779573,0.744246,-5.244646,4.421960,5.720956,-1.498480,6.297580,6.117449,-2.770337,-5.667720,6.367811,-7.755096,-1.635303,7.724931,-5.548155,-9.263899,6.820999,-7.410286,8.048288,1.324798,6.286608,-0.217516,5.408375,1.715098,-7.524467,8.296396,3.397704,7.238195,-7.376790,4.591228,-4.017476,-6.307425,-5.540611,5.951539,-0.564381,-8.201391,3.757909,-8.414678,7.777926,-6.588209,9.489985,8.929139,7.260379,-1.701048,7.468473,-3.267708,-3.648707,-6.271997,3.105427,-5.472246,-6.465031,-6.810431,-3.708790,-4.582306,-4.419390,1.492642,-0.066841,-5.916750,4.039674,-3.383472,-8.609162,1.576429,2.300738,0.125687,6.125707,-8.085295,2.022343,5.106772,8.148454,5.626011,-2.977130,-9.541725,9.497787,-9.969959,7.989020,-7.633776,7.694416,-3.779440,7.361301,-7.434412,-1.882419,-0.796772,5.992563,5.758358,2.551783,-1.299362,5.513892,-4.252571,8.831761,-8.767901,9.521096,-5.669395,-3.977555,4.845636,2.346776,-0.178318,-0.106136,4.983619,3.732898,4.869335,4.544227,-2.872157,-2.634764,0.481710,-1.950092,-4.776175,-5.290539,-2.619402,-9.828893,-9.556828,8.860250,9.316628,5.089022,8.098456,0.009585,6.442266,-2.960815,4.413424,3.514599,-0.199249,-6.382148,1.396407,-0.875706,7.942474,-8.289646,-0.059834,1.593644,0.431893,-9.540861,2.166754,4.749851,-4.391156,-4.437916,-8.477442,-1.184419,5.446272,-6.691266,-6.222027,4.787397,8.854690,7.349914,4.028219,6.334587,-5.172501,-0.365731,3.674261,-2.960147,8.239214,6.676295,-0.702392,2.189190,3.716195,5.139815,-9.713600,8.634257,-9.955412,3.951465,8.576887,-4.546865,-1.644532,9.612567,8.008775,5.526010,2.674500,-8.614074,-4.379425,7.151335,5.664914,4.136674,0.050046,6.078524,-0.202130,-4.907326,5.339506,8.813514,6.681679,3.078262,-7.986043,7.152204,-3.281976,-0.507621,4.389816,-0.265964,-4.869397,-3.421512,-3.162616,5.608754,-3.418421,0.616837,-2.454548,1.181631,1.927695,-3.439826,8.361675,0.986557,-0.181829,5.594034,-6.265759,-5.557470,5.901054,-6.814544,8.267659,-9.518555,7.258232,6.472120,-6.285548,5.449753,-2.849257,-8.639911,-4.436191,0.602757,5.748864,-1.087331,-0.145383,-1.681310,-6.612472,2.380441,-4.497224,4.990915,8.644173,4.407377,-9.171367,-2.627229,5.906639,-7.274443,-5.278210,-0.989800,-8.444995,1.886456,0.996838,5.875144,4.678307,5.671671,-5.947737,1.645739,-1.888570,-2.338156,-4.682753,4.173804,4.293261,5.760305,1.339458,9.109262,-6.820014,-3.953743,-3.135765,8.850024,-3.655015,8.410559,-1.555050,7.182888,0.890229,7.099689,-8.737322,6.654267,-3.223680,8.464532,-6.195119,-6.774666,-2.960610,1.928505,-0.090490,-4.479217,1.514577,3.995833,-4.452488,-2.746091,-6.179282,4.827106,-6.706556,-6.016008,4.399635,-7.166726,-7.326397,5.717488,2.001136,6.503107,5.622817,7.870947,4.553910,-3.061974,4.665149,-7.924269,-9.302283,-8.518605,-3.999455,-3.017644,-0.074319,-3.753846,0.563571,3.759563,-3.472908,-4.200676,-5.628622,-9.008572,-8.984329,-0.592151,-3.343432,-5.666905,-6.023290,9.225245,7.160225,4.510411,9.661202,9.298065,5.494362,4.356328,5.823836,1.068464,4.017945,-0.211261,4.949195,3.610367,7.699351,-6.170325,-7.226011,-8.319507,7.416496,-8.452780,1.175774,8.723923,-6.635371,-1.130932,-2.887224,-1.604623,-0.320009,-9.202945,6.964894,8.941478,3.403865,-4.461584,8.563106,7.176050,-7.742649,4.465925,1.532155,-9.059606,-6.348703,-6.982503,5.117779,-8.736164,0.906558,4.084977,5.388866,1.899443,-2.921736,-7.531663,-6.836473,8.291846,7.607319,8.899640,0.094597,0.825235,-8.267419,5.683500,-1.815628,2.462265,-4.327473,-5.244704,7.442929,-1.582697,7.393436,-9.807663,-6.807214,7.978971,-1.173152,4.861983,-0.524084,8.390988,-9.620377,-0.657975,9.493798,-3.360278,-2.641624,3.831635,-3.256694,-3.876424,-3.416512,8.580550,-5.597269,5.458938,7.012444,-6.065381,9.038521,1.585939,-7.481971,-8.053093,9.541246,6.568423,2.660793,-2.048165,-1.024406,7.917337,8.567792,-6.726143,0.023847,-0.970077,-4.467976,0.982749,5.769310,4.961096,-6.523215,8.278330,-3.038492,-3.672371,4.463050,5.262517,9.101769,-3.178110,7.806650,-5.101642,-2.060511,-8.650980,9.684892,-7.465447,-1.194247,7.704251,5.591148,-8.727569,5.421400,0.436608,3.225269,7.907528,-4.274593,5.142253,-5.284718,-7.425017,6.104082,5.676972,-8.573714,9.108664,9.021920,-0.695727,0.689781,-6.317406,0.047932,9.763571,-8.678171,3.162354,-9.139629,-9.005765,-6.072332,-4.530479,9.122891,-7.023558,5.346078,-6.654526,-4.419672,-5.401097,-8.924079,0.308886,-3.761243,-0.159158,5.578354,9.401161,8.917870,-7.271924,3.743917,4.447270,-7.458487,-0.677388,3.002403,-1.086895,9.719410,8.350973,3.153933,9.684325,3.350797,-7.897542,4.886804,-1.391479,8.272123,-8.023106,4.350592,-9.529901,-5.723447,-2.044158,1.868940,2.810644,8.299699,-0.581699,8.815637,-9.586585,-4.812268,3.037140,7.491230,-2.605604,-1.943528,1.248112,-8.293482,7.911557,-7.967746,-5.708241,-6.538116,6.119278,-1.014491,-8.974315,2.983826,-5.155703,3.912204,-5.931980,9.605750,-0.342083,8.781027,-8.894262,3.466399,-9.420833,5.161819,5.778949,9.873881,2.835020,2.078050,4.331597,-9.242471,-3.736010,-1.693286,-7.064176,1.565875,3.160553,-5.628260,-8.532067,-3.002260,-2.840120,5.087842,9.416302,-7.362180,-0.737993,2.729912,-6.936386,0.805935,5.677317,4.049960,2.212849,-9.676527,-5.896808,-6.520503,-8.307617,7.979378,-1.826502,8.823340,8.585204,-3.587962,8.537283,-8.014640,-3.170954,-9.534217,7.456117,5.202329,-3.214609,5.588081,3.956871,5.433907,-2.845928,-6.218394,9.345024,3.435669,9.177829,-6.925142,0.683319,-5.569142,-3.521230,5.961665,4.690960,-8.220334,7.389731,-4.913650,-4.037311,-0.467851,-8.181393,8.051056,-5.634404,7.694878,5.343991,-9.713717,-2.564335,-0.428677,6.232147,-2.088788,-8.266206,-9.280631,-5.591822,-4.410125,-6.549416,-0.722880,5.222163,-4.975664,-4.192575,6.928270,1.920202,-0.153611,6.821010,-4.229143,-2.446139,1.771401,-8.168900,-4.752056,-5.052667,4.191238,-2.411866,9.550884,9.954795,9.413464,9.786187,2.683118,7.930232,-8.877956,-7.028547,8.664829,1.206069,-4.602775,4.450257,6.064522,7.647319,-1.432543,-2.328555,-6.588418,-8.503190,4.071897,-7.556736,-8.847279,-4.779149,-8.540867,-1.147318,1.665378,-8.953569,9.159801,0.159939,3.526776,7.889118,-3.132088,-0.658980,3.070872,-6.345409,-6.768995,-4.135102,-2.496756,-2.527812,9.473660,8.525173,-1.436477,-8.618214,1.195196], dtype = "float64")#candidate|5801|(1536,)|const|float64
call_5800 = relay.TupleGetItem(func_2264_call(relay.reshape(const_5801.astype('float64'), [16, 8, 12])), 0)
call_5802 = relay.TupleGetItem(func_2266_call(relay.reshape(const_5801.astype('float64'), [16, 8, 12])), 0)
var_5804 = relay.var("var_5804", dtype = "float32", shape = (9, 13, 3))#candidate|5804|(9, 13, 3)|var|float32
bop_5805 = relay.maximum(var_5795.astype('int16'), relay.reshape(var_5804.astype('int16'), relay.shape_of(var_5795))) # shape=(9, 13, 3)
func_2871_call = mod.get_global_var('func_2871')
func_2874_call = mutated_mod.get_global_var('func_2874')
const_5814 = relay.const([[9.577213,0.193672,-5.489253,-6.791556,0.283292,3.502219,-2.128544,-1.691549,-4.543128,1.948891,6.880387,1.944989,-0.385062,9.685325,-4.541398,-3.906484,4.161669,-6.585324,3.108151,-9.478055,-7.916853,-2.715115,8.575358,8.808393,8.445561,-4.965046,7.866580,9.782770,4.605337,-3.584378,-1.093114,3.962795,-1.956153,6.332850,2.465127,-7.182227,-0.470726,-9.584830,8.950883,9.489700,-5.258196,0.842732,2.111913,-5.653356,3.727717,-2.491510,8.176601,6.122943,8.609264,6.128696,-1.498886,-8.964026,-8.400483,-8.926749,-1.196305,-7.503629,-1.442530,-9.397606,-2.527979,-0.445926,2.523775,-4.173025,-8.758984,-6.619213,-8.641143,-3.861906,5.599912,8.049566,6.218514,6.040722,8.338601,4.466900,1.656217,1.769131,-1.417607,2.419720,-9.124212,-1.194837,2.078542,-4.723330,-6.941966,6.459097,0.187191,6.871597,-7.892778,9.497457,-3.938222,5.476327,-9.161418,-5.484783,-8.385615,1.620997,5.803152,-4.452726,-3.225781,-6.478165,4.558478,7.989039,3.296705,-5.306044,7.480464,6.430405,-3.571907,-4.807311,-4.276554,5.205367,-8.293725,5.862177,-4.445421,3.733775,1.941934,9.951574,2.996683,0.457403,4.408222,-6.572791,8.150461,-5.708737,0.870707,7.421036,9.294707,-8.652947,6.798143,6.099611,7.884030,-9.350757,2.060612,-9.590579,-8.098326,3.741067,7.044473,8.820293,4.996056,-2.561183,-9.131155,-0.951615,-5.171866,6.393063,3.038224,7.983002,3.734716,6.062663,9.074990,2.595968,5.356597,7.998342,7.495608,-4.077601,-8.697147,2.165158,-1.968372,0.320959,-8.898591,-8.860807,2.511770,8.939756,3.591926,4.350287,-0.048981,6.779649,9.794518,-7.736598,5.200163,-9.674432,3.516517,-2.731943,1.455502,-5.273363,-4.067545,5.113123,-4.780445,7.151459,2.793730,-8.075869,2.668692,-4.644698,-8.492846,4.319963,2.150284,4.378984,4.329654,-6.366752,7.926844,5.288222,7.571598,-3.854328,3.493086,0.318105,-8.408348,-5.068846,0.941311,9.530091,3.602032,2.002576,-6.983366,7.173267,-8.440611,-2.906603,-4.602222,-7.604015,7.397380,0.358653,-4.690766,2.388730,-8.284201,-2.825653,-8.822960,7.231412,9.087571,-4.080433,3.979839,0.520430,1.596613,-7.432291,1.644765,7.985197,1.778734,0.133116,-2.630580,-8.402796,-6.563826,-5.205047,-7.496016,-3.318078,6.172139,5.213248,-7.079776,-6.935353,4.033715,8.489377,0.712396,1.426444,3.640394,-5.651718,3.728200,-8.435265,-7.497466,9.329526,-5.210883,-9.517222,-5.358874,9.235144,-5.972185,3.343660,-7.279078,3.120442,5.611153,-6.659767,6.350502,-4.160676,1.434800,7.767164,-4.340031,4.055342,-4.903148,-3.963447,9.770957,-3.965040,4.042080,4.345627,-3.343771,-7.868034,3.835584,8.809010,9.366083,-6.649963,-2.933269,-8.589544,-0.809178,-5.790231,1.324100,3.673244,-3.260234,8.030106,7.731078,2.839494,7.041000,-4.623230,-9.804069,1.638479,5.758614,-2.262921,0.311927,-7.686913,-7.060659,4.665804,1.489287,2.889969,-3.990007,-5.055345,0.943158,5.950579,2.951933,-0.371844,2.084326,9.466178,7.746740,8.161325,0.703194,-1.134432,-2.866340,6.784427,-4.544340,7.235331,8.113378,6.909089,2.966039,9.575533,-2.550109,-2.245974,-6.745900,-8.000590,7.171705,-6.146781,-5.402950,0.161064,-5.869695,-3.759946,5.946656,0.891645,6.137539,1.984555,-1.362254,9.121965,-3.949204,-1.530377,-0.749152,-0.611254,-7.159118,-2.247781,5.359713,0.522201,-2.438171,7.460210,0.606137,3.932496,5.057703,4.665635,9.583760,-5.651859,-3.575134,-8.203704,2.961463,0.546525,-8.078896,-3.330371,6.912864,1.443206,-8.851361,0.099129,-9.421125,-1.535643,7.282591,2.612833,5.864050,7.365117,-5.271674,-3.948913,-0.594880,-0.323831,1.775531,9.694312,-5.336492,-3.805303,5.491663,3.171855,-7.388941,4.407972,3.604466,6.834982,-0.161486,6.044759,-6.649243,-3.764814,1.858281,7.738114,-6.461846,0.250772,-1.194056,4.160394,0.421469,5.060358,-3.112615,6.749346,2.325340,-8.317085,5.786905,-4.222388,2.989775,6.662576,7.950089,2.602341,0.185013,2.040779,9.543606,3.438927,5.595901,-4.798875,2.648040,6.401436,-1.904664,-4.072294,1.299696,-9.980879,4.032581,6.888889,-9.907895,-8.474309,8.354855,4.974822,-2.887133,7.708478,5.079345,-8.585284,-1.259111,4.692423,1.011065,-8.217800,2.076008,-1.060395,-0.525362,0.066410,-8.346841,-1.687512,7.795072,-9.940357,-6.452295,9.430935,-1.506988,-3.687148,-4.456199,3.277463,4.562313,-9.161157,-1.479955,-9.084819,0.497005,-6.487207,3.663420,4.050593,-4.323541,8.659170,-9.233655,9.673480,-1.248809,5.684753,8.615657,-2.079491,-7.913237,4.781509,3.431623,-4.082344,-5.065650,1.719839,9.674158,-4.834416,-3.996012,0.205168,3.192990,6.148442,-9.529478,-0.931018,-0.358923,9.862296,7.830337,8.505097,-3.376335,7.178751],[-7.464076,-9.470015,-0.643796,-9.323322,-9.290876,3.671953,-8.879002,9.235482,4.182024,-7.595340,8.615420,-1.348085,1.704694,5.055096,5.818373,-8.009079,6.501857,-0.684019,8.681878,0.268792,-1.260494,2.828624,5.328597,6.889366,-6.181498,-0.184520,3.109754,5.272975,0.256764,-0.669953,9.314080,-0.338218,-9.779196,-7.834542,1.076058,5.223791,-6.343884,-8.481850,-2.906431,-3.538647,-9.068625,-6.291651,-1.469515,-7.438845,-7.695225,-8.921295,0.608364,7.566368,1.246155,8.270629,8.569628,-0.467954,-4.789554,4.327736,2.173300,5.217956,1.825449,8.536765,6.051679,6.026087,7.300147,-6.918485,-9.337727,-2.626767,1.111385,8.059811,-1.527276,9.381911,-0.966919,0.763508,-2.197159,2.485443,-5.887913,9.634027,-6.612352,-6.440325,2.886627,-2.869156,-9.579533,8.917052,8.862150,-9.812430,4.428906,-3.978480,-8.580374,9.430369,-3.788066,-8.386782,7.981714,8.622196,-4.052763,6.696375,-9.068529,-0.147032,-7.814696,-1.325980,-3.259521,-0.438049,-2.538315,1.845012,-3.818572,-1.994005,-3.456625,-8.476088,-6.995714,0.371293,7.081532,-2.216652,0.302520,-3.634840,9.387786,3.947384,0.876499,0.696313,-9.087863,-3.247855,7.150650,0.914568,-9.939829,5.970724,4.564495,1.655002,-5.554227,-2.925473,-0.045891,2.843002,-4.204623,8.370675,-5.999158,8.364674,-6.527545,-8.289003,-1.382440,4.181380,0.806690,-4.831729,8.171450,7.302647,4.981741,1.154777,-5.443208,9.194175,3.820748,-7.215609,9.541336,-0.494533,3.290090,9.020494,9.342237,-2.360181,-1.793866,5.770730,3.284113,7.392420,8.647833,-3.941252,6.744074,-2.292029,0.416308,1.714064,-8.695279,-7.275018,-6.444115,-6.631988,-5.603111,-5.327148,0.644413,-4.216388,-9.581662,1.873173,2.015095,9.383662,-1.126619,4.293932,-0.341909,-9.261707,4.938445,-6.583507,7.671428,7.515564,-8.958338,-9.582974,3.581022,-4.593308,-2.787249,1.052304,1.985420,-0.337703,-5.109540,8.916045,-0.544030,-3.147360,-3.428812,5.496365,8.951623,0.745415,-8.187474,5.452500,9.481849,0.141889,9.976727,2.998679,5.894350,-2.303937,9.760026,-7.434774,-0.487164,1.472871,-8.342103,-3.657806,7.642627,4.767742,5.751669,-9.405871,-3.036512,-5.688963,-6.170977,-0.296253,8.297764,-5.470470,0.995234,0.346935,9.564404,-2.483815,5.295478,8.381425,5.967222,0.544532,0.777492,9.707436,3.233984,7.955504,3.632409,-0.059728,2.825890,7.378386,8.492046,-0.491893,-8.540822,-0.082085,1.452213,-4.186751,-8.707893,2.413261,6.319395,9.847391,-4.160323,4.404087,5.383139,-4.696009,-6.185171,9.583548,-8.492820,-5.194130,-6.156488,8.672899,-2.010257,-1.313041,4.568535,-1.047917,-3.682444,9.097667,-5.875917,-3.078033,-0.689585,-9.986129,5.744592,4.455966,1.701336,-3.067216,-8.957632,0.132884,2.136854,-1.956705,4.245910,-7.912775,-5.203726,-8.140084,-9.622074,-5.738125,-9.445662,0.304933,-9.042967,4.671926,-0.624808,-0.781493,0.261186,9.440417,1.045872,4.879719,-9.497073,9.231662,-4.506356,2.566780,-3.124656,7.219276,0.262958,-7.566635,5.640668,4.546767,2.372675,0.056365,-2.546564,-0.256240,-0.807866,-0.552074,3.781920,4.913534,-7.793141,-5.738751,9.711223,2.023192,-5.855996,-3.904659,9.806498,7.870586,8.200752,-6.763418,8.771244,-8.469798,-5.348654,-0.008002,-9.442957,6.809804,-0.114133,8.529764,-1.565895,-2.810094,8.745410,-2.776124,2.267668,5.336067,-3.452710,-6.934370,-8.678487,6.331479,0.530648,-5.440861,-4.731257,-0.102880,8.478093,-3.836822,-7.738454,-0.522510,2.704409,4.418492,-5.456889,-3.980402,-8.139723,-0.251000,0.893973,5.727420,9.734890,-6.221737,-2.999416,7.700062,-5.281405,4.566571,-7.134488,-6.293858,-4.311499,-4.994168,2.717751,-3.352420,9.741980,-3.556979,-9.770785,-4.261549,-1.423390,4.465878,5.148923,-1.498553,-9.572069,5.628403,-4.565901,9.069026,8.803370,3.771984,-9.811958,-9.164552,4.045590,-0.783059,-1.925957,4.241453,3.750451,6.662355,6.216296,-2.158146,4.566390,4.051056,-0.279874,6.008015,-4.827740,-0.579037,-3.000288,7.367708,7.100684,7.734958,-3.472376,-7.804339,-1.596769,-2.925577,-5.470696,9.446207,-2.938302,7.242361,1.960159,-5.365487,0.501784,-7.297098,9.378011,4.285984,4.746289,1.436126,-7.091646,6.659886,8.466377,-9.658766,6.357708,-4.123047,-7.194406,-8.632740,-8.225542,-0.108092,3.416290,6.409257,-4.379629,7.233520,8.713980,5.435668,9.047334,-3.755862,-6.181134,-5.175361,2.323888,-5.110895,-3.481601,4.734929,7.519771,-2.414923,1.260887,-3.989439,0.139505,3.629900,-1.214752,-6.403369,-0.116212,-6.214860,4.477535,-3.860793,2.501321,3.061838,2.810556,-1.885710,-1.188620,1.002714,-1.161034,7.947241,1.468095,3.073041,3.312084,0.398906,-0.105823,-8.912767,-5.722614,-4.875594,4.393217,5.579789],[1.155140,-0.952435,9.788580,0.208681,0.680715,5.556559,3.066209,-2.451504,-4.956552,-5.344049,5.851949,-8.268979,3.996586,-6.308491,-7.581469,2.165563,8.729671,1.162273,5.944763,2.797920,4.107204,-0.251825,4.181850,6.938991,-0.606125,-7.685233,8.435187,-6.429382,-2.396946,9.825806,-8.178387,-2.803517,-1.872126,-2.787883,-4.612396,-0.303621,-1.128924,-9.971035,6.238080,0.424039,-3.542306,-7.392295,4.078867,-0.399770,5.703005,-1.879801,6.800764,7.872355,1.273333,5.785894,6.576729,6.150367,-6.988968,9.765847,-1.626088,-6.429520,1.434448,-1.506875,1.237430,-3.946929,-8.680922,-5.993988,5.335450,-4.525835,-5.373620,-0.012245,8.491437,9.564527,3.642591,-9.409207,-5.525492,-8.814332,3.675151,-9.046187,-3.287077,3.201188,6.076369,-3.590558,0.931693,5.091197,-2.642134,-2.332376,-9.592371,-6.415028,-6.454749,6.177419,9.553896,-4.099448,-5.896082,6.388808,6.577261,1.503547,-6.584005,0.240017,-1.519920,4.050434,-6.095485,8.662839,-0.343496,0.876015,-8.039036,7.002159,-8.143245,-1.327040,-7.309392,8.967630,-0.341533,-8.957652,-3.344512,-0.649343,1.434841,-6.306142,6.804131,-7.706209,7.635583,1.590428,-5.373289,8.760665,-3.006646,5.074609,2.686119,4.790310,9.922101,-3.612829,8.734365,3.878180,1.536843,3.229103,2.496316,-5.053884,7.335639,-7.338618,-7.831391,-0.529750,7.656019,5.891872,5.728664,-2.798616,-9.948070,-0.277738,1.235254,-9.350700,2.269148,-6.682117,5.233865,4.758034,-0.778666,-4.836179,5.081845,3.755588,-3.112534,2.496966,1.516891,3.738203,3.952832,-2.002985,5.637303,8.248595,-9.262460,3.929249,-7.642237,-9.668504,-9.688534,2.274933,8.036530,-6.679812,8.968232,5.757990,1.268435,-8.768842,0.026918,1.614283,-4.959145,5.420231,-2.118985,-2.461416,-3.713266,7.106768,-2.930588,-9.494633,-9.298598,6.663950,9.360730,-0.571115,3.504663,9.314305,5.293330,5.571325,5.457182,-0.255867,6.360553,-9.880177,8.889249,-6.699336,-1.541730,-6.087605,0.868097,-8.791918,-4.943908,3.380712,3.161673,-0.496553,-3.700042,-6.327788,5.079543,8.506673,-6.582121,-9.196767,-7.702435,6.270192,0.676868,6.834030,0.734050,8.743565,-4.135413,-1.305182,2.402341,1.679222,-7.221086,0.206668,-8.397004,2.679424,-5.724342,9.990714,-9.217865,3.652809,-2.220928,0.764389,-2.976522,6.575041,5.100328,1.604034,8.077738,-6.806921,-7.381175,5.015392,6.107672,1.967954,-5.994667,-3.345740,5.653144,-1.510732,-3.602311,-5.495170,0.702957,3.187308,1.217073,5.336683,4.180786,-8.866300,-9.134844,1.676190,-4.040078,7.101702,1.621859,-3.547852,-7.773104,-0.966766,-7.115881,5.554042,-5.002355,-5.572006,9.246419,-8.386401,-4.669077,7.718939,-5.075278,-6.534160,3.289507,5.608485,4.266441,-4.305767,6.544715,-2.511903,0.552420,0.925344,-2.353254,7.840424,2.758495,8.709430,-7.403349,-4.920387,1.417677,-3.553585,9.723410,3.730089,7.935647,-7.854072,-5.660437,-1.096263,-2.970958,5.780379,0.952559,1.322077,0.060014,-2.002399,5.405281,-3.676420,2.605684,4.042718,9.316853,7.833330,-5.387575,6.262922,-7.767637,-1.735331,8.104021,-8.517099,-2.738254,3.084611,-3.429952,-6.715061,2.589108,-1.202526,0.761913,1.037404,-3.678008,4.733784,-5.359046,6.042837,-2.720109,8.372927,4.272028,-6.964102,8.322025,2.660456,-7.020357,7.737746,2.274967,-5.382618,-8.451354,3.214351,5.468865,1.021699,0.583388,-4.733320,5.885096,3.833750,9.404426,-5.694333,9.123880,-0.339000,0.355880,4.929689,4.171755,0.887223,6.711072,-3.850528,4.781011,-1.285127,-4.692290,-8.941813,2.504762,6.888730,-9.651134,9.631273,0.005120,5.107168,-6.256614,4.146446,-5.760237,5.907157,6.164133,-5.883739,2.265866,9.701355,-8.157073,9.715178,0.974983,-9.889953,3.965650,-2.393128,-5.104561,1.118809,-9.823831,-4.846581,-9.448962,8.606922,-8.812715,-0.677718,-0.368770,3.580643,-5.454773,-3.568701,6.199852,6.301845,9.957005,-4.748718,1.250407,-4.467359,-2.047700,-0.396298,-9.584181,6.486393,-9.796421,-7.976492,4.646628,0.045883,2.914180,-0.564109,-6.255882,6.172816,9.974076,3.754976,8.707762,-4.678911,9.151980,-4.176672,-1.977651,-0.011437,-1.688377,-0.752243,-1.000192,7.377856,4.133608,6.162646,4.940184,9.630001,-9.526713,1.801528,-4.588859,2.282606,-9.349357,5.359406,9.891118,7.423439,3.308820,-0.389304,7.439165,9.197251,1.128040,8.904853,4.755162,8.511079,3.833538,0.548722,-9.140421,1.615118,0.854187,-6.023809,-7.184665,-6.934560,2.215050,-5.821817,-6.131960,0.644931,-4.745816,-6.837752,-0.981059,4.010077,-7.909843,8.099888,9.735775,0.858822,-4.730100,-3.174638,-2.743617,-6.714815,7.149853,-4.836958,-6.582750,5.166572,-2.743683,-3.204391,7.611564,0.004788,-0.124947,-7.212659]], dtype = "float64")#candidate|5814|(3, 468)|const|float64
call_5813 = relay.TupleGetItem(func_2871_call(relay.reshape(const_5814.astype('float64'), [9, 12, 13])), 0)
call_5815 = relay.TupleGetItem(func_2874_call(relay.reshape(const_5814.astype('float64'), [9, 12, 13])), 0)
output = relay.Tuple([bop_5796,call_5800,const_5801,bop_5805,call_5813,const_5814,])
output2 = relay.Tuple([bop_5796,call_5802,const_5801,bop_5805,call_5815,const_5814,])
func_5819 = relay.Function([var_5794,var_5795,var_5804,], output)
mod['func_5819'] = func_5819
mod = relay.transform.InferType()(mod)
var_5820 = relay.var("var_5820", dtype = "float32", shape = (9, 13, 3))#candidate|5820|(9, 13, 3)|var|float32
var_5821 = relay.var("var_5821", dtype = "float32", shape = (9, 13, 3))#candidate|5821|(9, 13, 3)|var|float32
var_5822 = relay.var("var_5822", dtype = "float32", shape = (9, 13, 3))#candidate|5822|(9, 13, 3)|var|float32
output = func_5819(var_5820,var_5821,var_5822,)
func_5823 = relay.Function([var_5820,var_5821,var_5822,], output)
mutated_mod['func_5823'] = func_5823
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6034 = relay.var("var_6034", dtype = "int16", shape = (10, 11, 13))#candidate|6034|(10, 11, 13)|var|int16
var_6035 = relay.var("var_6035", dtype = "int16", shape = (10, 11, 13))#candidate|6035|(10, 11, 13)|var|int16
bop_6036 = relay.equal(var_6034.astype('bool'), relay.reshape(var_6035.astype('bool'), relay.shape_of(var_6034))) # shape=(10, 11, 13)
output = bop_6036
output2 = bop_6036
func_6040 = relay.Function([var_6034,var_6035,], output)
mod['func_6040'] = func_6040
mod = relay.transform.InferType()(mod)
mutated_mod['func_6040'] = func_6040
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6040_call = mutated_mod.get_global_var('func_6040')
var_6042 = relay.var("var_6042", dtype = "int16", shape = (10, 11, 13))#candidate|6042|(10, 11, 13)|var|int16
var_6043 = relay.var("var_6043", dtype = "int16", shape = (10, 11, 13))#candidate|6043|(10, 11, 13)|var|int16
call_6041 = func_6040_call(var_6042,var_6043,)
output = call_6041
func_6044 = relay.Function([var_6042,var_6043,], output)
mutated_mod['func_6044'] = func_6044
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6168 = relay.var("var_6168", dtype = "float64", shape = (8, 3, 15))#candidate|6168|(8, 3, 15)|var|float64
uop_6169 = relay.log(var_6168.astype('float64')) # shape=(8, 3, 15)
output = uop_6169
output2 = uop_6169
func_6171 = relay.Function([var_6168,], output)
mod['func_6171'] = func_6171
mod = relay.transform.InferType()(mod)
mutated_mod['func_6171'] = func_6171
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6172 = relay.var("var_6172", dtype = "float64", shape = (8, 3, 15))#candidate|6172|(8, 3, 15)|var|float64
func_6171_call = mutated_mod.get_global_var('func_6171')
call_6173 = func_6171_call(var_6172)
output = call_6173
func_6174 = relay.Function([var_6172], output)
mutated_mod['func_6174'] = func_6174
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6295 = relay.var("var_6295", dtype = "float32", shape = (6, 11, 13))#candidate|6295|(6, 11, 13)|var|float32
uop_6296 = relay.sin(var_6295.astype('float32')) # shape=(6, 11, 13)
func_4219_call = mod.get_global_var('func_4219')
func_4222_call = mutated_mod.get_global_var('func_4222')
var_6307 = relay.var("var_6307", dtype = "uint32", shape = (56, 28))#candidate|6307|(56, 28)|var|uint32
var_6308 = relay.var("var_6308", dtype = "float64", shape = (1404,))#candidate|6308|(1404,)|var|float64
call_6306 = relay.TupleGetItem(func_4219_call(relay.reshape(var_6307.astype('uint32'), [14, 7, 16]), relay.reshape(var_6308.astype('float64'), [1404,]), ), 0)
call_6309 = relay.TupleGetItem(func_4222_call(relay.reshape(var_6307.astype('uint32'), [14, 7, 16]), relay.reshape(var_6308.astype('float64'), [1404,]), ), 0)
output = relay.Tuple([uop_6296,call_6306,var_6307,var_6308,])
output2 = relay.Tuple([uop_6296,call_6309,var_6307,var_6308,])
func_6315 = relay.Function([var_6295,var_6307,var_6308,], output)
mod['func_6315'] = func_6315
mod = relay.transform.InferType()(mod)
mutated_mod['func_6315'] = func_6315
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6315_call = mutated_mod.get_global_var('func_6315')
var_6317 = relay.var("var_6317", dtype = "float32", shape = (6, 11, 13))#candidate|6317|(6, 11, 13)|var|float32
var_6318 = relay.var("var_6318", dtype = "uint32", shape = (56, 28))#candidate|6318|(56, 28)|var|uint32
var_6319 = relay.var("var_6319", dtype = "float64", shape = (1404,))#candidate|6319|(1404,)|var|float64
call_6316 = func_6315_call(var_6317,var_6318,var_6319,)
output = call_6316
func_6320 = relay.Function([var_6317,var_6318,var_6319,], output)
mutated_mod['func_6320'] = func_6320
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6418 = relay.const([[[6.227707,-6.142616,6.476627,-7.898879,4.951456,-2.398487,-5.902907,-1.144341,-0.296921,-1.769437,5.341462,6.331280],[-2.655727,9.329449,5.837873,-4.530120,-0.376247,-3.125162,4.706326,-1.431738,-1.449408,4.414895,-4.939673,-7.242638],[1.336280,-2.740644,0.164758,5.576742,7.368492,-2.641341,-8.907773,0.343460,-3.489718,-5.659933,-4.161388,-2.846735],[-7.570501,8.903052,0.292595,9.060693,-4.221143,1.250831,4.232970,5.462427,9.555183,4.748243,-3.899700,-4.316862],[9.397345,0.232156,-4.354078,-0.831939,9.718448,3.332271,4.578684,4.078306,-1.655097,0.360645,4.966282,-9.985747],[-1.064151,-2.044480,-5.742467,7.702868,-7.419072,4.087260,-6.872465,9.144571,9.876763,-3.220365,2.531561,-5.907423],[-4.650117,0.767794,-5.114792,2.149589,-5.257156,-2.609919,-0.874217,-7.460628,-8.014001,8.969833,5.643893,-9.425747],[9.229116,1.482392,-6.069646,-2.875416,9.546594,-0.941258,0.395875,-3.633315,-7.517031,-6.090195,4.489489,4.008915]],[[-2.328598,-1.223177,9.223069,-2.586471,-5.606003,8.396485,2.386297,2.045254,4.186574,0.535543,0.360041,-6.785816],[-9.605057,7.986705,5.892869,9.501843,5.992156,5.874350,-9.659990,-1.154697,5.623308,7.593784,2.916311,7.445497],[-7.219327,-6.028194,2.752339,0.839578,2.711463,5.477121,7.948703,9.905790,-7.041825,1.763255,-5.673949,9.083434],[1.145931,1.878107,-8.715604,-1.269200,0.584991,-9.286323,3.059093,-8.604585,-7.586105,-4.404213,-1.995899,7.280711],[-8.378541,7.813018,-1.120859,6.659284,2.315080,-1.846484,7.154417,-0.334282,8.278046,4.545007,8.620180,-5.515447],[5.738670,7.685635,-0.801106,6.038681,-5.018473,9.430878,4.528735,-1.429648,5.900690,-4.804955,4.874758,6.942576],[-9.679216,-3.167548,-4.601631,1.287661,4.840205,7.706529,0.231936,-8.912744,4.251689,-8.173183,-2.486973,2.857238],[-6.700982,0.763045,7.241401,-3.204519,6.318644,6.449670,8.669972,-7.022223,2.161709,-2.779444,-2.875807,-0.329061]],[[7.412779,-2.164773,-3.184080,9.488523,-1.605499,-5.244670,-4.858913,0.805200,6.811171,0.069057,5.562793,2.841519],[-7.607854,-5.842951,0.397714,-7.706411,3.564958,-9.714828,6.232497,-6.625872,-5.077098,0.695935,-7.200256,6.751276],[3.746649,-1.023928,-8.366555,7.261307,-4.444300,3.188355,2.425186,-0.114898,-8.080677,-7.964298,-6.847991,5.567740],[4.724161,0.275495,0.813590,-4.844004,-8.998797,-0.793825,-0.743928,3.096180,9.923176,-4.791965,-2.792785,5.712457],[-3.321226,-7.448874,0.648563,0.631249,-4.399709,-1.886139,5.652570,-9.685629,5.177178,-0.594608,9.177189,-1.260532],[-2.330059,2.339613,9.735257,-9.891096,-7.317172,3.127682,-4.448090,-4.811786,4.323537,7.008769,9.157578,-4.649025],[-0.468484,4.891646,-5.608050,-5.295740,-4.872845,-9.157912,-8.948284,8.398339,2.747250,-0.062232,-0.387886,1.921414],[4.281217,-4.396339,-9.212361,-6.494765,-5.801172,-7.278021,7.813924,7.701819,-4.070610,-2.839466,-4.210481,2.339114]],[[-6.432758,-3.262603,8.779487,-1.213803,-4.815631,4.528835,-9.050209,4.115696,4.597599,4.051184,-6.650486,4.391888],[-6.293655,9.934909,5.514167,6.883623,4.396417,-4.276327,8.810333,2.786276,-5.809107,-5.739566,-4.338493,9.322709],[-8.020910,5.797784,3.648776,1.464960,-4.692203,9.796956,-3.419735,8.995503,-4.827181,-9.859810,-0.098892,8.325336],[-8.671574,2.915832,3.372677,8.045386,-0.049091,-3.400128,3.973561,0.769646,-0.372329,0.229956,5.688523,-4.926580],[0.324158,1.323405,2.433315,-5.870001,1.211581,-6.168976,-9.037252,-7.824293,-4.470804,-6.122098,-9.441005,2.414989],[-2.599052,8.105676,0.481506,7.381011,-9.874101,4.378396,7.265207,-5.018497,5.333626,9.915241,-8.388986,-6.586454],[-0.675307,-1.174808,6.774971,-2.673830,-6.660456,0.451175,8.445073,-4.795421,-5.442674,1.280018,1.378876,-4.389005],[3.080574,-7.617941,5.096916,-5.273077,-1.685251,-4.389802,9.159117,8.022003,6.936702,3.891428,-0.314712,-8.838902]],[[0.398198,-5.231481,6.549600,-6.473152,7.433426,-3.822633,0.786846,-0.712706,0.620336,2.873737,5.365419,5.094800],[-3.170617,-5.274048,-4.324548,7.578414,-1.419197,9.750287,-5.906528,-7.064034,-0.895497,-6.308561,-1.092787,7.814236],[3.833713,-4.116460,-2.951056,3.591236,-0.374918,7.946815,3.055381,6.253735,-7.038702,9.683320,-4.431485,-4.827194],[0.967042,-5.564677,-9.277769,6.144609,5.015726,-0.498677,6.053600,-6.592930,8.787431,2.065379,-0.825866,2.891325],[7.281773,5.052416,-4.066005,-4.496074,-2.463218,8.623427,3.306675,-1.952385,-3.054051,-3.407645,6.894836,-3.245914],[-4.967313,7.110637,-0.734395,8.596580,9.641718,6.010879,4.891106,5.340984,-7.160538,-9.464288,-7.622621,-8.062365],[3.627574,-4.460544,2.507640,-5.241140,-7.254494,-5.348458,-6.775388,-1.079046,-3.233658,9.800300,-0.257421,3.731126],[-1.129501,-1.731121,4.176610,0.362510,2.083743,5.337587,-4.607207,-0.208548,2.220777,7.832875,-2.748395,4.335655]],[[8.593972,-8.813035,-7.702433,9.192895,9.262330,6.823908,-2.025264,-8.830429,-9.435644,9.507414,2.987500,-9.372723],[-2.814261,-1.099678,3.782908,-4.653418,-5.298771,-2.592677,-2.127435,2.671594,0.784648,-5.689215,-3.458294,3.200452],[-6.036139,6.509797,-2.448634,-2.218089,-7.012260,-3.935650,2.076016,-8.615899,8.971029,-8.707719,-0.294449,-6.759447],[-5.670788,-7.287703,4.709594,9.090826,-7.369199,6.197226,-4.577966,5.718661,-4.777352,9.918019,-7.428630,6.970566],[-9.784811,-7.236249,-1.863500,7.421428,9.811151,9.807848,2.472761,1.061309,6.256304,8.735309,-7.974645,-8.923253],[-6.213293,-2.463952,-4.314246,-4.992318,2.649477,4.784343,7.285860,-1.537060,-7.332672,5.674457,3.759269,5.131025],[7.558723,-9.016279,-9.768960,-0.781191,-8.012195,7.962264,8.863286,-1.339267,-8.852473,-5.927397,-8.887375,9.976732],[-7.347396,-1.270474,2.954578,-7.138174,-0.590248,-6.473924,-7.700838,0.812105,-7.303956,2.205942,5.806701,-9.018405]],[[7.040606,1.275253,-7.744708,4.335048,-5.380472,-1.189692,7.578596,-8.662173,6.499280,-3.719798,-4.197793,7.002167],[8.038150,-8.671536,-0.866575,-2.130602,8.829428,3.405385,-6.299326,-0.857705,-6.723038,-6.395710,3.980195,-8.043948],[-3.288164,-4.013534,-7.086699,9.118064,-7.410890,-3.287868,-4.245042,5.061124,7.453386,0.794797,3.884358,-9.109467],[-3.274415,8.215655,9.096338,3.219157,1.887821,-4.373760,0.709941,8.423668,1.791108,-7.935541,-4.370926,7.146322],[-8.244230,-0.238416,-0.655200,5.360033,0.786740,4.672279,-8.073916,-7.797851,-7.700799,-3.503085,-0.010395,-9.334833],[7.652814,-1.815019,-6.347681,3.633030,-3.940688,-2.973352,-0.760465,-8.808563,-1.581590,4.933239,-0.748978,-6.580780],[-9.765511,-4.690326,-4.137288,1.054498,9.655548,-6.754964,1.222294,-1.296885,6.017431,0.659624,-1.225039,5.604049],[2.413403,-2.417109,4.294308,-4.610393,2.222183,-6.028370,6.848839,2.514101,2.945336,-9.956103,-1.395857,9.468544]],[[8.492613,3.684103,-3.045859,3.415296,5.560074,0.840349,-0.429584,2.444880,-1.586247,-9.903608,9.968592,-6.231711],[4.207880,2.102941,1.279572,3.965114,3.592119,-5.165789,6.012501,0.217162,5.925938,4.738569,9.658959,6.651784],[1.366818,4.531715,-1.934651,0.526405,2.335457,8.208554,3.794386,1.208573,2.666875,-8.733986,5.464826,-1.916376],[-8.551005,5.390505,-9.007371,3.213468,-8.249135,-1.865850,-3.945308,-8.116270,-5.358773,-9.415724,-5.349219,1.271849],[-2.292148,-6.630742,1.058385,-0.673123,2.651009,7.733882,2.778091,7.431210,-0.704095,-2.360154,4.606477,-6.347784],[-9.513542,-7.613604,-4.204609,-7.459003,9.830998,4.148059,1.966037,7.813345,7.399753,-1.807876,3.425493,-7.896932],[1.101446,2.328508,4.491163,5.952156,-5.043042,-2.378219,7.063070,3.814298,0.541122,4.833709,5.060915,1.739180],[-6.307469,3.541866,3.651360,1.685026,-7.116585,-2.661582,-3.793979,4.194892,0.359507,8.165819,-6.719858,2.512196]],[[7.641905,4.189652,4.295183,8.202070,-0.256935,-7.005872,-1.683870,5.910039,-4.560061,-4.527851,1.040229,6.805389],[6.717327,3.937381,-7.498742,-7.911437,1.712378,-0.904550,-8.293128,-8.412052,-8.667736,2.798492,-4.013878,0.037614],[-3.710163,3.928702,5.018098,-4.599626,-3.698885,-0.060349,-7.592944,-9.073334,-2.802685,7.306928,1.493829,-7.607707],[-5.878817,-2.142678,-3.328530,9.744512,-9.061120,-9.290491,5.535147,-5.983674,-4.060464,-8.045377,3.366501,-0.750577],[5.548062,7.197463,-0.131429,-3.546724,7.229037,3.142418,-8.106273,-3.486043,-0.084122,-5.808513,4.326599,1.034719],[-1.312598,-9.169785,-6.457714,4.025585,-9.102264,-1.651948,-7.466248,6.608030,-8.238068,1.688422,8.777542,4.031459],[-6.936430,-5.562655,-2.172701,0.459504,7.162174,2.486999,4.555547,-1.571878,9.714774,-8.039647,7.059170,2.266897],[-3.044949,8.064383,-0.905574,5.813503,-4.296562,-5.813232,6.141907,8.760654,4.460832,8.800903,-6.983837,3.075607]],[[-0.233595,1.986520,9.166623,3.732510,-1.057596,-6.571927,1.776636,5.638453,5.395541,0.123261,-0.277480,0.249163],[4.626911,-0.677352,-8.428368,9.861313,7.901033,0.323534,0.320481,-1.530057,8.311079,-5.402431,9.495373,-5.036804],[0.918539,8.318435,0.390550,2.351697,6.358255,-4.563601,2.256266,1.814412,-5.923666,-9.637585,6.026727,3.803939],[3.495132,-9.284089,-3.565716,4.639009,-0.199656,6.191013,8.610398,-8.701532,-6.987300,9.187035,-5.688953,-0.866847],[2.591838,-2.014272,5.708652,6.184976,6.910148,1.825169,-6.095472,1.857315,-2.797451,-9.212585,3.978336,-9.667822],[3.249264,-2.139390,-1.947302,3.163732,6.853598,1.246167,2.758401,2.560722,-0.957108,-0.051191,8.635994,3.654523],[-2.166220,6.567829,-4.097785,6.218513,8.056589,7.684788,-6.317986,7.463382,-7.857762,9.390051,6.301045,-5.254128],[7.130127,5.547476,-2.629635,-1.134326,-8.025042,-8.746722,-4.685750,9.108556,1.237389,2.125647,2.582100,0.953653]],[[5.414607,1.096185,5.279440,-4.092197,1.638540,6.187982,-6.083802,-2.563953,-2.632901,2.413266,8.342760,-5.211514],[4.840110,-0.759243,5.549025,-1.609074,-5.988791,5.718272,5.663739,6.610911,7.040504,-8.738971,-3.029891,1.806915],[-6.846614,9.482395,4.195054,-6.475633,-9.437429,9.540882,2.812904,-6.928913,5.914878,6.183312,-5.786689,4.125018],[-7.851050,9.114432,5.086094,7.253887,-1.871489,8.650306,-3.038889,-3.057855,-6.723881,-5.727286,-4.603440,-0.230243],[7.263869,-4.421453,-3.926453,9.233929,-1.000480,0.796095,6.200655,5.593552,-2.855088,0.620284,-6.060150,7.432966],[7.192250,-3.831145,-5.737584,-7.534090,5.286008,4.410090,-6.837643,-1.101194,-7.961001,-2.733857,-0.936536,5.115268],[-8.478865,4.918314,-9.376233,-7.897517,7.333185,6.057039,9.016909,7.836674,6.511285,-3.106951,7.642140,-2.006217],[-0.671197,-2.017486,-5.275750,3.679573,-3.015616,0.461185,0.705571,3.642556,4.018317,0.917114,-0.624092,3.835960]],[[4.089871,0.581399,-9.626601,-0.684646,9.101749,6.249442,-7.743237,-3.538056,1.092796,-6.649991,1.419399,7.052818],[-5.821360,9.991357,4.240001,-5.632915,-8.588861,-9.039886,2.524364,-3.058680,9.139892,-9.533897,-3.344100,-2.708884],[2.191255,5.679491,-4.745839,9.512902,8.800813,9.022848,1.509716,0.700469,-6.230912,-2.840690,8.785900,-8.215603],[-2.115427,-2.193849,3.154791,-5.744760,9.877672,-9.681665,8.757730,7.470725,-2.598484,4.405252,-4.664727,-8.357586],[-5.693149,2.699136,6.363419,-3.789499,-9.142604,-0.882767,-5.851757,-7.672821,-6.458322,7.299612,-0.108344,-0.466494],[-6.725921,-8.640210,2.012265,6.103576,2.735691,2.958862,-6.970421,-7.687911,-8.385762,-7.178561,-2.441583,9.873279],[9.339344,-3.879323,1.488831,8.932858,-9.090379,-4.740977,-2.903943,-2.467936,-7.293808,-2.161884,1.924608,-5.261120],[2.123003,-4.294351,4.920737,1.364400,2.008830,2.454178,-5.042382,-4.932567,-7.668657,-3.811037,-6.149327,8.841847]],[[-5.588668,5.256746,-5.996868,-3.506537,-4.743068,3.969638,-8.771345,5.266768,-0.023379,-5.015310,3.049885,-8.495572],[9.394335,-2.966461,7.212062,3.378786,8.305324,9.762738,-5.503683,2.318960,0.826768,-3.382047,8.526971,7.738937],[-2.689788,3.773306,-4.382221,-0.056390,-8.634416,1.006390,-6.814619,-2.436142,2.876082,1.355873,8.462661,-8.045913],[-9.787318,-4.797727,-0.883710,5.910828,3.491959,-8.577797,-2.433295,3.515335,9.182470,-2.511326,8.123334,8.750079],[7.197117,-3.106201,-1.932420,6.844230,-8.887201,-3.280727,7.413476,2.536234,-4.643866,-1.584579,-2.181503,-4.250818],[-2.743244,4.555983,1.012709,-1.912425,-0.454285,2.227276,0.408941,7.648609,-1.679734,2.781566,7.304327,-4.291676],[-1.719856,4.425362,-6.854733,4.402974,-9.683065,8.532378,5.452122,-1.386293,-0.162006,-3.254149,-2.042876,7.995921],[-4.660819,-7.019046,-4.660042,4.189017,2.402766,8.242339,-7.537361,-9.088992,-2.568585,-1.729850,3.891575,5.513322]]], dtype = "float64")#candidate|6418|(13, 8, 12)|const|float64
uop_6419 = relay.asinh(const_6418.astype('float64')) # shape=(13, 8, 12)
func_2871_call = mod.get_global_var('func_2871')
func_2874_call = mutated_mod.get_global_var('func_2874')
var_6458 = relay.var("var_6458", dtype = "float64", shape = (1404,))#candidate|6458|(1404,)|var|float64
call_6457 = relay.TupleGetItem(func_2871_call(relay.reshape(var_6458.astype('float64'), [9, 12, 13])), 0)
call_6459 = relay.TupleGetItem(func_2874_call(relay.reshape(var_6458.astype('float64'), [9, 12, 13])), 0)
bop_6469 = relay.bitwise_and(uop_6419.astype('uint8'), relay.reshape(const_6418.astype('uint8'), relay.shape_of(uop_6419))) # shape=(13, 8, 12)
func_1118_call = mod.get_global_var('func_1118')
func_1121_call = mutated_mod.get_global_var('func_1121')
var_6477 = relay.var("var_6477", dtype = "int16", shape = (480,))#candidate|6477|(480,)|var|int16
call_6476 = relay.TupleGetItem(func_1118_call(relay.reshape(var_6477.astype('int16'), [16, 5, 6])), 0)
call_6478 = relay.TupleGetItem(func_1121_call(relay.reshape(var_6477.astype('int16'), [16, 5, 6])), 0)
uop_6480 = relay.atan(call_6457.astype('float32')) # shape=(9, 12, 13)
uop_6482 = relay.atan(call_6459.astype('float32')) # shape=(9, 12, 13)
output = relay.Tuple([var_6458,bop_6469,call_6476,var_6477,uop_6480,])
output2 = relay.Tuple([var_6458,bop_6469,call_6478,var_6477,uop_6482,])
func_6487 = relay.Function([var_6458,var_6477,], output)
mod['func_6487'] = func_6487
mod = relay.transform.InferType()(mod)
var_6488 = relay.var("var_6488", dtype = "float64", shape = (1404,))#candidate|6488|(1404,)|var|float64
var_6489 = relay.var("var_6489", dtype = "int16", shape = (480,))#candidate|6489|(480,)|var|int16
output = func_6487(var_6488,var_6489,)
func_6490 = relay.Function([var_6488,var_6489,], output)
mutated_mod['func_6490'] = func_6490
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6654 = relay.var("var_6654", dtype = "float32", shape = (13, 2, 12))#candidate|6654|(13, 2, 12)|var|float32
uop_6655 = relay.rsqrt(var_6654.astype('float32')) # shape=(13, 2, 12)
uop_6664 = relay.cosh(uop_6655.astype('float32')) # shape=(13, 2, 12)
bop_6678 = relay.floor_divide(uop_6655.astype('float32'), relay.reshape(uop_6664.astype('float32'), relay.shape_of(uop_6655))) # shape=(13, 2, 12)
func_3588_call = mod.get_global_var('func_3588')
func_3591_call = mutated_mod.get_global_var('func_3591')
const_6705 = relay.const(8.530116, dtype = "float64")#candidate|6705|()|const|float64
const_6706 = relay.const([-9.049685,1.484119,6.539019,0.410510,6.711924,-5.774755,4.331735,3.408732,-2.867561,-3.028921,-1.361519,3.220493,-2.124923,7.015118,1.534693,-7.812912,-8.682543,5.581518,-1.463551,-2.778204,1.460617,1.316752,8.662515,1.899862,-4.132086,-1.443989,-8.249474,1.927299,-2.636338,-7.370115,0.419818,5.697618,-9.832841,5.505559,-0.023118,2.101995,3.198103,-4.531081,8.472624,-3.331488,7.696391,-2.084398,-5.284779,-9.100801,-9.598029,-6.273173,8.106376,8.567921,-8.779567,6.304569,8.026198,-4.226773,4.098100,0.896521,7.655209,4.899059,-8.712297,-7.557270,2.740568,-9.169712,6.371174,3.967651,-4.109713,7.041468,-0.875162,6.563323,5.000894,-7.396497,-7.148802,5.602425,9.464753,-8.830496,-0.471434,-6.662598,5.864078,2.560870,2.402183,-1.776902,-5.868304,-1.282968,-3.561447,-1.910583,-8.186840,-0.546691,-5.979635,-0.060894,-7.181092,-9.351685,6.258656,-0.407134,9.069426,0.278403,1.152209,-9.497418,2.396824,-6.588713,4.775998,5.274409,5.532806,-3.406738,4.035545,0.877309,-2.865592,-1.700650,-3.164285,-6.796934,6.108894,-4.215195,1.480432,-6.538031,1.750738,-4.814223,6.392832,-4.905479,-0.893010,-0.908644,2.315718,8.259634,3.229105,3.202290,3.919621,1.403745,-3.924057,0.461419,0.035121,-0.863078,-6.968914,4.807310,4.246918,-9.416390,-7.389355,5.625222,-2.493744,8.805990,6.177856,8.228283,7.850890,3.567691,-4.131304,0.505559,-2.576723,-4.981003,9.679925], dtype = "float64")#candidate|6706|(143,)|const|float64
call_6704 = relay.TupleGetItem(func_3588_call(relay.reshape(const_6705.astype('float64'), []), relay.reshape(const_6706.astype('float64'), [1, 13, 11]), ), 0)
call_6707 = relay.TupleGetItem(func_3591_call(relay.reshape(const_6705.astype('float64'), []), relay.reshape(const_6706.astype('float64'), [1, 13, 11]), ), 0)
uop_6716 = relay.asinh(call_6704.astype('float32')) # shape=(1, 13, 11)
uop_6718 = relay.asinh(call_6707.astype('float32')) # shape=(1, 13, 11)
func_1118_call = mod.get_global_var('func_1118')
func_1121_call = mutated_mod.get_global_var('func_1121')
const_6721 = relay.const([-1,-3,10,-1,4,-10,-7,9,1,-8,-4,-2,-10,-6,-7,6,-8,4,-1,-9,-2,5,9,-9,-8,9,-3,-2,10,-2,3,-4,-8,-10,-3,5,9,-7,6,1,2,7,1,-10,9,5,-1,2,-7,-2,1,-8,-7,-1,10,8,3,9,7,4,-1,-8,8,-4,10,5,-5,-2,-7,-5,4,-9,9,1,-7,-1,-4,1,-7,-8,2,8,6,10,-4,10,-8,-5,9,4,10,2,-2,-7,9,8,9,-9,-10,8,-3,2,-1,10,-2,6,10,8,-3,3,-10,-3,8,4,10,10,2,5,-8,3,-9,-3,-9,9,8,3,-2,7,-8,-8,2,-10,-9,-10,-9,-8,-2,-5,4,2,-7,-1,1,3,-8,-6,8,-7,-2,-5,-1,-1,-3,-5,-2,10,2,-2,-1,2,5,-4,-7,-1,9,2,-6,3,9,6,-5,-5,-10,-1,2,-4,3,-2,-8,-9,-9,-7,4,-6,-7,6,-1,-10,8,5,5,10,7,8,7,4,-10,2,-10,9,-1,3,8,4,-5,9,-8,9,1,1,-7,-3,-6,3,1,7,-8,5,-4,-3,8,8,-9,1,4,-7,9,-10,-2,2,6,7,-8,2,-9,-10,5,5,6,-3,10,-3,-9,-3,-7,-4,2,9,-2,-3,-3,10,-4,-3,2,3,5,2,-1,5,-8,3,10,4,-2,-5,-2,3,3,-6,-2,-9,-5,1,6,5,6,-5,-9,-10,-8,6,-3,5,4,3,10,-5,4,2,3,-3,-5,-7,9,-7,-4,6,3,3,3,-5,7,8,7,1,-7,-1,5,9,5,3,-1,7,10,-1,-6,-6,8,4,3,-5,10,-3,4,-10,-7,10,-2,2,-7,-7,-1,7,8,-3,7,-1,6,3,-7,-2,-6,2,9,1,9,10,10,7,9,1,10,2,-6,-7,-7,-7,1,-10,7,8,-7,4,-6,-7,3,-10,10,10,-6,-10,5,-6,1,9,-5,-4,5,-4,-8,-5,-9,-3,-6,8,9,-7,-7,5,8,6,10,8,7,-6,2,-8,-6,-3,-4,-6,-9,1,7,4,9,9,-9,5,-8,10,2,-3,1,-3,-7,9,-4,-1,-6,4,-4,-7,9,-8,-10,-7,8,-1,5,3,-2,5,-5,-7,-3,10,-6,-2,-6,-4,-3,-1,8,-10,-7,-5,9,7,8,7,-8,1,-4,1,-5,8,-3,-9,-4,-5,5,-2,-2,8,-4,3,4,8,-7,9,3,10,-10,-10,-9,5,-7,-8], dtype = "int16")#candidate|6721|(480,)|const|int16
call_6720 = relay.TupleGetItem(func_1118_call(relay.reshape(const_6721.astype('int16'), [16, 5, 6])), 0)
call_6722 = relay.TupleGetItem(func_1121_call(relay.reshape(const_6721.astype('int16'), [16, 5, 6])), 0)
output = relay.Tuple([bop_6678,const_6705,const_6706,uop_6716,call_6720,const_6721,])
output2 = relay.Tuple([bop_6678,const_6705,const_6706,uop_6718,call_6722,const_6721,])
func_6729 = relay.Function([var_6654,], output)
mod['func_6729'] = func_6729
mod = relay.transform.InferType()(mod)
var_6730 = relay.var("var_6730", dtype = "float32", shape = (13, 2, 12))#candidate|6730|(13, 2, 12)|var|float32
output = func_6729(var_6730)
func_6731 = relay.Function([var_6730], output)
mutated_mod['func_6731'] = func_6731
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7023 = relay.var("var_7023", dtype = "uint16", shape = (4, 6, 5))#candidate|7023|(4, 6, 5)|var|uint16
const_7024 = relay.const([[[-6,-6,-7,-10,-4],[3,10,6,5,-7],[7,10,9,-6,3],[-5,-6,-2,4,5],[8,8,10,-7,7],[8,4,-3,-4,-1]],[[4,8,7,-2,3],[-6,9,-10,-9,-4],[10,2,9,-8,6],[-2,5,2,-3,2],[-4,-8,4,2,4],[2,7,8,9,1]],[[-5,-6,6,-6,-4],[4,9,-1,-9,-8],[8,-6,6,-2,-2],[-10,7,-9,4,1],[-4,-6,-6,-7,9],[-5,7,-1,-7,-8]],[[8,-6,-4,10,-2],[5,-8,10,9,9],[5,2,-9,-7,-10],[5,-10,4,10,1],[-9,-10,9,-2,-9],[6,-7,10,-5,-2]]], dtype = "uint16")#candidate|7024|(4, 6, 5)|const|uint16
bop_7025 = relay.less(var_7023.astype('bool'), relay.reshape(const_7024.astype('bool'), relay.shape_of(var_7023))) # shape=(4, 6, 5)
output = relay.Tuple([bop_7025,])
output2 = relay.Tuple([bop_7025,])
func_7030 = relay.Function([var_7023,], output)
mod['func_7030'] = func_7030
mod = relay.transform.InferType()(mod)
mutated_mod['func_7030'] = func_7030
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7031 = relay.var("var_7031", dtype = "uint16", shape = (4, 6, 5))#candidate|7031|(4, 6, 5)|var|uint16
func_7030_call = mutated_mod.get_global_var('func_7030')
call_7032 = func_7030_call(var_7031)
output = call_7032
func_7033 = relay.Function([var_7031], output)
mutated_mod['func_7033'] = func_7033
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7294 = relay.var("var_7294", dtype = "uint16", shape = (13, 3, 1))#candidate|7294|(13, 3, 1)|var|uint16
var_7295 = relay.var("var_7295", dtype = "uint16", shape = (13, 3, 3))#candidate|7295|(13, 3, 3)|var|uint16
bop_7296 = relay.less_equal(var_7294.astype('bool'), var_7295.astype('bool')) # shape=(13, 3, 3)
bop_7301 = relay.minimum(var_7295.astype('uint32'), var_7294.astype('uint32')) # shape=(13, 3, 3)
func_4219_call = mod.get_global_var('func_4219')
func_4222_call = mutated_mod.get_global_var('func_4222')
const_7314 = relay.const([-6,-6,5,-5,-9,1,6,10,5,-1,1,-4,2,9,-5,1,-7,4,7,10,8,9,3,6,-3,10,-4,-8,-10,8,-3,-9,-9,4,-4,-10,-8,-8,8,-8,-4,-8,5,-5,-3,2,-3,8,-4,8,9,-4,-6,-5,-8,-9,5,9,3,7,-8,-2,10,2,2,-5,7,5,2,2,-7,2,-8,4,-6,7,-1,-4,-1,-6,6,6,-1,-1,-3,2,-3,3,-5,3,9,-5,9,1,6,4,9,9,1,10,2,7,6,7,7,3,9,4,9,-9,3,1,3,1,-10,1,4,-9,8,-4,-7,-10,-6,6,2,-10,-9,8,-1,-8,-3,-4,5,-9,-1,-7,-9,7,-3,-1,-8,-1,-2,-1,-9,3,-7,1,2,6,-3,4,-2,-9,5,2,-1,-4,-2,-5,3,-5,6,-6,-7,2,7,-4,-10,-6,3,10,-10,8,-7,-3,10,5,-5,2,5,-2,3,-3,-10,-8,6,-8,10,8,-8,2,-10,-2,7,-7,-2,-5,6,6,9,-1,-1,3,5,-1,-4,-1,-9,1,10,10,-10,7,-5,4,-6,-10,5,8,-7,-3,1,9,-8,8,2,-10,-5,10,9,-5,-10,3,2,-5,10,2,-5,-1,-1,1,-7,6,7,3,10,2,-4,-5,-4,-5,-2,8,-8,-8,-6,-2,9,6,-6,1,-4,5,-8,4,3,-8,6,10,-5,-3,-9,-5,-7,-6,7,-6,-10,10,-1,2,6,7,-6,-8,-5,-1,7,3,-6,-4,6,-5,-3,6,3,-8,-10,3,-3,-6,-1,5,2,2,8,-2,-10,-3,-3,-6,9,-5,2,4,8,-6,-6,7,-10,7,-6,2,-7,8,-6,-6,2,-5,-1,2,8,6,-10,1,1,7,8,-5,6,4,-2,8,-4,-8,9,-2,-9,-10,-1,-6,10,4,-5,-2,-4,3,-7,-10,2,-3,10,-10,4,-8,3,-1,-7,5,-4,3,3,4,6,2,3,-1,-3,-4,4,-5,-5,-4,-9,-6,-5,-3,-4,-10,-2,-8,-2,-2,3,3,7,4,2,6,-4,8,-1,8,7,-6,4,6,3,10,-3,3,1,-3,5,8,-2,-1,-5,-8,8,-3,-8,-8,-8,-8,1,2,9,7,-5,-5,9,-9,4,-9,3,-7,-3,-3,3,-2,3,8,-7,5,-10,-8,4,-7,7,1,10,-3,2,1,-7,2,5,1,-7,-6,5,-7,-3,7,10,2,-5,10,2,3,-4,-9,-6,-3,-7,9,-2,2,1,-7,-7,-1,-5,10,-4,-9,1,-7,10,-10,-8,-10,-5,8,-2,-7,4,-3,-10,-8,-7,3,7,-7,-2,4,3,-4,6,4,-5,-7,10,-9,3,7,2,-2,-1,-6,3,7,-5,6,-1,9,5,6,-8,-8,-10,-4,6,-3,-2,-2,-2,3,-9,9,1,-7,-6,4,8,6,8,2,4,10,8,-3,2,6,-6,9,-4,6,9,-5,-3,-5,-9,-2,6,-2,-8,3,-10,-9,-5,-6,5,9,1,3,5,2,6,-10,9,-5,7,-5,8,-3,-4,-9,10,-5,4,-4,5,-4,1,-3,3,7,7,-9,6,5,-1,-9,4,2,1,6,2,-6,3,-5,-9,-8,-4,9,-9,2,-1,-2,6,-3,-10,4,9,6,1,-8,-2,5,3,8,10,-1,2,4,-7,-6,7,10,-3,-8,6,5,2,5,-5,7,-4,4,2,-5,-6,6,4,9,-2,2,-3,-7,-6,-2,7,6,-8,1,-10,-8,9,10,-2,9,-6,-2,-7,-7,1,-3,1,-2,-2,8,9,-8,4,10,-7,-7,-1,3,6,-10,-9,7,-4,8,4,-8,6,1,-6,-3,3,7,9,-1,-9,-5,-4,10,-3,-4,6,10,-9,-9,4,-7,4,-1,5,-9,3,-5,-6,4,5,4,3,-3,-7,-7,-6,7,10,2,-2,-2,-5,-1,-3,-10,-5,2,-10,-2,7,7,-6,3,4,3,-6,-10,-1,-4,6,-5,-8,-10,-1,-5,-2,4,-9,-5,-4,-1,-1,-3,-2,1,1,-10,4,-9,-2,7,-7,3,-10,10,-5,4,2,2,-4,-9,-10,4,-10,-3,7,6,1,-1,8,-4,-2,10,-6,5,5,3,-6,-3,1,-7,-6,-4,4,9,-9,-4,-1,-5,7,5,8,9,-6,-8,-8,7,10,10,-9,8,10,-10,-6,-8,-7,-7,10,8,-10,-4,3,-2,-3,9,-1,-1,-8,-4,4,-9,4,7,-6,1,-1,-6,-6,-7,1,10,-2,-5,-2,7,2,8,-6,1,7,-7,8,-3,2,-3,6,6,-6,2,-3,-3,-7,-10,-3,-6,-4,-9,6,7,3,-2,-5,9,-1,-7,-10,-9,1,-1,-2,-5,9,1,9,5,9,-1,6,-6,-10,1,-5,-8,-2,1,7,-2,-3,4,-10,1,4,2,1,9,2,3,2,4,-2,8,2,-8,1,-6,-10,-8,1,6,-9,5,-5,-9,-8,1,-7,-1,-6,-5,-2,-10,1,7,-2,-6,-8,-2,-7,-9,3,7,8,-8,-9,-3,-5,-3,3,-8,3,-5,3,3,8,7,4,9,3,6,2,3,4,-4,6,-1,-6,-1,4,8,-7,-1,-10,3,-2,5,10,-3,-6,3,-1,-2,-1,-5,-8,-6,2,8,-2,5,-1,9,-10,10,-1,9,-9,8,-5,-6,-10,10,2,1,-10,-7,7,-4,8,5,7,1,7,6,4,5,-4,3,-4,9,3,2,-2,8,-8,-1,-1,1,-2,9,8,-8,-10,8,7,7,5,-9,6,9,4,-1,2,2,10,2,7,10,-2,3,-8,-9,-10,2,-10,1,2,-9,-5,-2,4,1,-3,1,3,-5,6,6,6,1,-10,2,-4,8,-3,4,-4,1,8,-3,7,4,3,9,-9,-7,-3,-10,-9,-8,-1,-10,-7,-2,-2,-6,2,2,9,5,2,-6,9,1,8,-10,2,-4,2,6,1,-3,-1,6,-6,9,-3,2,2,-1,7,-9,-5,7,-9,1,4,-2,-1,-8,-1,7,-3,7,-4,-4,-2,-9,-6,-2,1,6,7,4,-6,7,9,-1,-2,-8,5,-9,-6,3,7,8,1,5,10,8,-2,-3,-6,3,-1,6,2,-4,-4,-10,-6,-10,2,7,-5,-10,-9,-9,-5,4,-3,3,-6,6,6,2,6,-9,7,10,2,-10,1,7,-2,-4,-3,-4,6,10,8,5,4,-2,-1,-5,-10,-3,6,1,-1,5,-3,-3,-1,-2,7,-2,-1,-3,7,-3,-7,-10,-4,-1,5,9,8,-9,-4,-9,6,3,-8,-8,-8,-1,-7,6,-3,8,-4,8,-8,-1,5,5,-1,-9,-7,-3,-9,-8,7,-8,2,10,3,-7,4,5,-8,-3,1,10,-8,-2,7,-3,-5,-5,-9,2,3,-4,9,-6,-2,-10,10,2,10,5,6,-10,-1,10,9,1,-3,-9,-6,1,-4,4,10,-4,-2,8,8,-2,4,-8,-4,-7,6,1,-2,2,5,2,4,4,6,5,-1,-5,-7,-7,4,9,-9,3,-3,7,-3,-3,-6,2,-10,-8,-3,5,-7,-2,6,10,4,-9,10,-4,9,-9,-6,-7,-9,-7,-9,4,-5,-7,-10,8,-2,-10,7,5,-3,8,-7,-8,-1,9,-7,6,-1,-3,-9,4,10,-4,-10,-10,5,-4,5,9,7,10,10,6,-8,-2,-9,-8,2,5,-3,5,-7,2,-5,9,-10,-5,-4,4,9,-1,-4,-9,-3,8,-3,5,4,-1,-10,-10,-1,3,-8,-9,2,-7,-1,3,-5,1,4,6,-5,8,9,-6,-6,6,-3,-3,5,3,8,-9,9,-9,-5,-4,5,-6,1,-5,-8,-1,7,7,-3,9,10,-4,-9,-3,-1,-5,-8,-1,10,4,-8,-10,-8,-9,1,2,-8,-2,3,-1,2,-9,8,7,-5,-7,-7,-7,8,-4,6,10,-4,2,8,2,-1,10,2,-9,-10,9,5,-2,4,10,4,5,-4,5,-10,2,9,-3,1,5,8,9,-2,4,7,-7,6,8,8,-4,2,2,-7,-10,6,-2,-3,-6,1,2,-6,10,-10,-1,-4,7,-10,7,3,-8,5,3,-10,-3,-1,-1,-4,6,-9,-2,-4,9,7,3,-5,1], dtype = "uint32")#candidate|7314|(1568,)|const|uint32
var_7315 = relay.var("var_7315", dtype = "float64", shape = (1404,))#candidate|7315|(1404,)|var|float64
call_7313 = relay.TupleGetItem(func_4219_call(relay.reshape(const_7314.astype('uint32'), [14, 7, 16]), relay.reshape(var_7315.astype('float64'), [1404,]), ), 2)
call_7316 = relay.TupleGetItem(func_4222_call(relay.reshape(const_7314.astype('uint32'), [14, 7, 16]), relay.reshape(var_7315.astype('float64'), [1404,]), ), 2)
func_5003_call = mod.get_global_var('func_5003')
func_5005_call = mutated_mod.get_global_var('func_5005')
var_7320 = relay.var("var_7320", dtype = "float64", shape = (5, 84))#candidate|7320|(5, 84)|var|float64
call_7319 = relay.TupleGetItem(func_5003_call(relay.reshape(var_7320.astype('float64'), [14, 3, 10])), 0)
call_7321 = relay.TupleGetItem(func_5005_call(relay.reshape(var_7320.astype('float64'), [14, 3, 10])), 0)
bop_7335 = relay.greater_equal(var_7315.astype('bool'), relay.reshape(call_7313.astype('bool'), relay.shape_of(var_7315))) # shape=(1404,)
bop_7338 = relay.greater_equal(var_7315.astype('bool'), relay.reshape(call_7316.astype('bool'), relay.shape_of(var_7315))) # shape=(1404,)
bop_7342 = relay.divide(var_7315.astype('float32'), var_7294.astype('float32')) # shape=(13, 3, 1404)
output = relay.Tuple([bop_7296,bop_7301,const_7314,call_7319,var_7320,bop_7335,bop_7342,])
output2 = relay.Tuple([bop_7296,bop_7301,const_7314,call_7321,var_7320,bop_7338,bop_7342,])
func_7345 = relay.Function([var_7294,var_7295,var_7315,var_7320,], output)
mod['func_7345'] = func_7345
mod = relay.transform.InferType()(mod)
mutated_mod['func_7345'] = func_7345
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7345_call = mutated_mod.get_global_var('func_7345')
var_7347 = relay.var("var_7347", dtype = "uint16", shape = (13, 3, 1))#candidate|7347|(13, 3, 1)|var|uint16
var_7348 = relay.var("var_7348", dtype = "uint16", shape = (13, 3, 3))#candidate|7348|(13, 3, 3)|var|uint16
var_7349 = relay.var("var_7349", dtype = "float64", shape = (1404,))#candidate|7349|(1404,)|var|float64
var_7350 = relay.var("var_7350", dtype = "float64", shape = (5, 84))#candidate|7350|(5, 84)|var|float64
call_7346 = func_7345_call(var_7347,var_7348,var_7349,var_7350,)
output = call_7346
func_7351 = relay.Function([var_7347,var_7348,var_7349,var_7350,], output)
mutated_mod['func_7351'] = func_7351
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7876 = relay.const([[[-0.551930,-6.987661,-8.660328,-4.711506,-1.214352,-4.193770,1.575567,-5.922648,-9.442204,-1.952592,3.433256],[-5.759391,9.354035,-6.018944,-6.882725,-8.618044,-4.043454,-1.326340,3.235910,4.419883,0.665824,-1.301326],[-2.097866,-2.256215,7.305251,9.867161,1.150642,5.239082,5.741120,-0.066688,6.948187,1.664266,0.251189],[-4.514642,-8.152975,-6.160857,6.454310,-4.074715,-0.834363,5.347687,-8.086308,-4.368670,-7.590643,-7.611920],[-2.518627,8.785536,-4.613373,1.706052,1.599056,-5.852122,8.363666,8.436807,5.238491,-9.123471,8.357244],[9.953003,-8.584182,6.246157,5.144346,2.087788,-3.450102,9.894097,2.418850,-0.265197,-0.834888,-4.551922],[-4.552371,5.120205,-3.100608,3.615587,1.611131,3.119044,-0.177665,-1.320404,-7.029782,6.070466,-0.355407],[1.611571,9.391714,-9.103277,6.361095,-6.159397,4.741956,7.834135,8.808445,4.501659,-6.792658,4.045711],[0.135012,-1.190208,0.016878,1.138787,4.285688,2.048555,-0.512689,-6.911499,-3.697210,2.390194,-4.505571],[5.530664,1.163063,-0.816544,1.633438,8.497070,7.961993,3.263781,6.020054,6.247849,5.042248,-8.573978],[-2.156534,6.256300,3.934948,-2.181380,-8.532595,1.176167,-9.016183,1.596842,7.259639,8.814884,-5.534913],[3.026987,2.580809,-6.272616,0.800019,-9.750348,-0.129730,5.820186,1.451759,5.613603,7.982844,7.540133],[2.873717,-8.346900,3.779350,2.895053,-8.175813,-7.420634,9.535198,-3.225138,1.231471,3.181572,7.477416],[2.592419,-1.542528,-4.390287,7.706605,-7.685725,-7.610665,-4.511605,-1.408013,9.465130,-1.439188,-0.831184],[4.021827,2.085226,5.883746,-1.539157,7.781644,2.846918,-6.057261,2.990907,-0.229204,-5.158063,-3.539094]],[[-1.098313,7.769433,7.530903,6.764058,4.626324,0.937781,5.537765,6.320761,4.791412,3.158805,5.812914],[-7.114115,-0.528239,-8.799899,1.475242,5.743296,6.085060,8.255747,-7.896713,-9.513788,4.711140,-4.593385],[-3.191430,-2.889987,-3.111073,9.440732,-9.187297,9.786708,-0.693617,2.291661,-9.867961,2.280241,7.579774],[3.936658,-9.019869,-4.175436,8.602350,-8.799151,-2.746242,7.772178,3.953914,-8.611936,-3.531186,-4.508753],[9.026007,-3.306729,-0.735415,5.552967,-7.453080,1.055315,-7.165408,5.906477,6.998658,-7.530341,-0.426894],[-6.244632,-0.923602,4.708788,-2.787401,5.676962,-4.343122,-2.685245,4.389647,-6.546105,-1.170921,-0.910479],[7.971276,-4.106568,-9.390036,7.103924,-3.671124,-2.272010,-7.813117,5.266166,1.257386,8.155846,-9.652243],[-5.596237,9.393814,5.489966,-0.579118,4.355889,0.882812,-3.943011,-8.425056,9.987813,-7.416764,0.986650],[0.707091,0.567760,5.151811,-8.690772,-1.293194,0.989276,-9.719673,6.953449,7.234443,-5.171565,-9.213605],[-1.145605,-7.168786,9.211777,5.973451,-2.064571,2.306064,7.078205,-2.563329,-4.347796,-3.255424,-7.998785],[2.681702,7.644751,-5.837061,7.357494,1.060661,0.877882,4.562185,-2.015567,4.797792,-8.733415,-6.510561],[7.937944,3.685305,-6.286871,-4.573689,-9.604639,-2.303821,-1.555207,-5.596930,-8.136293,1.076535,6.870576],[-4.184675,1.784047,-1.797923,8.285073,1.931777,4.445201,-7.729075,-9.862889,6.090399,-0.125000,-3.289167],[-9.631352,6.262163,-0.930667,8.981838,4.184896,6.798966,4.148913,-0.695873,0.919158,-6.759072,8.586332],[-0.698312,5.398958,-9.013107,2.784330,-2.648648,7.406456,-5.719673,-4.568823,-9.307849,-8.495596,-8.507728]],[[8.212997,-0.847796,-7.860108,-5.884262,4.530821,5.534532,-9.589569,6.381210,-3.033991,2.491829,0.811626],[-2.693543,1.154500,8.208886,-4.552209,-9.858355,8.283377,-8.263892,0.065724,3.037171,0.486450,3.953116],[-8.926099,-8.950454,-9.299846,9.721001,6.623601,1.818248,-4.582596,-6.758702,-0.575690,-9.460580,1.923421],[7.909911,9.692478,-4.163006,0.934454,-6.127185,-1.162520,-1.034689,1.904976,-4.382412,1.978546,6.937189],[-4.359173,6.395121,-7.017331,-8.689809,-6.243180,-8.902963,-9.240527,3.085329,-2.883908,-4.709172,-9.256560],[2.630125,-3.711909,-3.189267,5.195805,7.376410,-3.931251,-2.057305,-5.913948,-0.758380,-4.031158,9.274577],[9.895643,-0.311242,-0.225907,-4.671489,-4.061515,-0.685087,6.597071,-7.554788,1.898786,1.158054,-3.963724],[-6.284818,-8.296813,-1.103270,-8.139020,-3.337499,-9.048660,0.946628,7.463419,1.229351,-2.837786,-4.463687],[-3.387069,-7.624676,-0.973160,5.203195,-1.362129,9.791053,1.602454,2.527883,7.191219,8.670049,1.141674],[0.002882,8.099216,-4.143005,-4.796593,3.958492,2.624355,-7.298627,2.364994,8.918003,-0.042755,8.668327],[-5.137105,7.536683,-9.501674,7.347261,3.061090,-7.712684,0.169891,-9.405458,1.010302,-6.281851,-0.975893],[-0.352435,5.899305,2.109554,-4.587333,8.102024,2.340251,4.859058,9.751410,5.664593,9.174321,4.616436],[-4.982122,-0.466281,-1.115040,1.524698,-2.552856,-5.016080,1.250925,9.344354,-7.790793,-8.238680,7.874358],[7.097923,-0.103928,3.167596,-4.798603,-6.422737,4.432198,-1.397836,7.767754,-6.028960,3.824460,6.207090],[-2.515553,8.665189,1.431551,-4.708895,3.301352,-4.060556,3.576101,1.969769,-3.541996,-2.699487,-3.892383]]], dtype = "float32")#candidate|7876|(3, 15, 11)|const|float32
uop_7877 = relay.atan(const_7876.astype('float32')) # shape=(3, 15, 11)
output = uop_7877
output2 = uop_7877
func_7889 = relay.Function([], output)
mod['func_7889'] = func_7889
mod = relay.transform.InferType()(mod)
output = func_7889()
func_7890 = relay.Function([], output)
mutated_mod['func_7890'] = func_7890
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7915 = relay.var("var_7915", dtype = "bool", shape = (14, 2, 7))#candidate|7915|(14, 2, 7)|var|bool
const_7916 = relay.const([[[True,False,False,True,True,True,False],[True,False,True,True,False,True,False]],[[True,True,True,False,False,True,True],[False,True,True,True,False,False,False]],[[False,False,False,True,False,False,False],[True,False,True,False,False,False,True]],[[False,False,True,True,True,True,True],[True,False,False,True,True,False,False]],[[True,False,True,False,True,True,True],[True,False,False,True,False,True,True]],[[False,True,True,False,True,False,True],[False,True,False,True,False,True,True]],[[True,True,True,True,True,False,True],[False,False,False,False,False,False,True]],[[False,True,False,False,True,True,False],[False,False,True,True,True,True,False]],[[True,False,True,True,True,True,False],[True,True,True,True,True,True,True]],[[True,False,False,True,True,True,True],[False,False,True,True,False,False,False]],[[False,False,False,True,False,False,False],[False,True,False,True,False,True,False]],[[False,True,False,True,True,False,True],[False,True,False,True,False,False,False]],[[False,False,False,False,False,False,False],[True,False,False,True,True,True,False]],[[False,False,False,False,True,False,True],[False,True,False,True,False,True,False]]], dtype = "bool")#candidate|7916|(14, 2, 7)|const|bool
bop_7917 = relay.logical_and(var_7915.astype('bool'), relay.reshape(const_7916.astype('bool'), relay.shape_of(var_7915))) # shape=(14, 2, 7)
output = relay.Tuple([bop_7917,])
output2 = relay.Tuple([bop_7917,])
func_7925 = relay.Function([var_7915,], output)
mod['func_7925'] = func_7925
mod = relay.transform.InferType()(mod)
mutated_mod['func_7925'] = func_7925
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7926 = relay.var("var_7926", dtype = "bool", shape = (14, 2, 7))#candidate|7926|(14, 2, 7)|var|bool
func_7925_call = mutated_mod.get_global_var('func_7925')
call_7927 = func_7925_call(var_7926)
output = call_7927
func_7928 = relay.Function([var_7926], output)
mutated_mod['func_7928'] = func_7928
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7889_call = mod.get_global_var('func_7889')
func_7890_call = mutated_mod.get_global_var('func_7890')
call_7995 = func_7889_call()
call_7996 = func_7889_call()
func_537_call = mod.get_global_var('func_537')
func_540_call = mutated_mod.get_global_var('func_540')
const_7998 = relay.const([6,8,-5,3,-6,3,-3,8,5,1,2,1,-3,-6,-4,4,6,-3,4,8,1,4,8,-2,-5,-4,4,-4,10,8,4,3,6,10,-4,-10,2,8,5,3,-3,-6,4,4,10,7,3,-6,8,9,-6,6,4,-10,-4,-10,1,3,-5,-9,-6,1,-8,10,-2,-7,-9,-6,9,-1,-8,9,6,7,9,-8,-2,-8,-5,6,7,-6,8,-7,-8,9,9,7,2,-7,-10,7,4,-4,-4,-6,4,7,-6,1,5,1,-10,9,4,4,-3,-8,8,5,2,3,5,-2,-4,-4,10,3,6,1,-10,-6,8,9,7,6,-7,-9,-8,-1,1,3,3,-3,-10,8,1,-10,-9,-5,-2,6,-1,-2,-4,-3,-10,-10,4,1,10,-1,-3,-2,-1,9,-9,5,-9,-8,1,10,10,4,5,-8,-5,10,4,-2,-10,-2,-5,-6,5,-9,-7,-8,1,1,-9,3,-9,-6,4,8,1,10,7,2,9,-10,10,-5,2,-7,6,7,-10,8,2,-7,-8,-1,-2,-8,-4,-9,-6,7,10,-3,3,-2,4,8,-8,9,9,-10,2,-4,-6,-1,7,2,-2,-4,4,10,7,-4,-3,8,4,5,-6,2,-1,-4,-1,-6,3,9,-7,5,-9,7,-5,-5,3,-5,-10,10,-2,-10], dtype = "uint16")#candidate|7998|(256,)|const|uint16
call_7997 = relay.TupleGetItem(func_537_call(relay.reshape(const_7998.astype('uint16'), [16, 1, 16]), relay.reshape(const_7998.astype('uint16'), [16, 1, 16]), ), 2)
call_7999 = relay.TupleGetItem(func_540_call(relay.reshape(const_7998.astype('uint16'), [16, 1, 16]), relay.reshape(const_7998.astype('uint16'), [16, 1, 16]), ), 2)
output = relay.Tuple([call_7995,call_7997,const_7998,])
output2 = relay.Tuple([call_7996,call_7999,const_7998,])
func_8000 = relay.Function([], output)
mod['func_8000'] = func_8000
mod = relay.transform.InferType()(mod)
mutated_mod['func_8000'] = func_8000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8000_call = mutated_mod.get_global_var('func_8000')
call_8001 = func_8000_call()
output = call_8001
func_8002 = relay.Function([], output)
mutated_mod['func_8002'] = func_8002
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8000_call = mod.get_global_var('func_8000')
func_8002_call = mutated_mod.get_global_var('func_8002')
call_8033 = relay.TupleGetItem(func_8000_call(), 2)
call_8034 = relay.TupleGetItem(func_8002_call(), 2)
func_3753_call = mod.get_global_var('func_3753')
func_3757_call = mutated_mod.get_global_var('func_3757')
var_8046 = relay.var("var_8046", dtype = "float32", shape = (108,))#candidate|8046|(108,)|var|float32
var_8047 = relay.var("var_8047", dtype = "uint8", shape = (192,))#candidate|8047|(192,)|var|uint8
call_8045 = relay.TupleGetItem(func_3753_call(relay.reshape(var_8046.astype('float32'), [12, 9, 1]), relay.reshape(var_8047.astype('uint8'), [192,]), ), 4)
call_8048 = relay.TupleGetItem(func_3757_call(relay.reshape(var_8046.astype('float32'), [12, 9, 1]), relay.reshape(var_8047.astype('uint8'), [192,]), ), 4)
output = relay.Tuple([call_8033,call_8045,var_8046,var_8047,])
output2 = relay.Tuple([call_8034,call_8048,var_8046,var_8047,])
func_8061 = relay.Function([var_8046,var_8047,], output)
mod['func_8061'] = func_8061
mod = relay.transform.InferType()(mod)
mutated_mod['func_8061'] = func_8061
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8061_call = mutated_mod.get_global_var('func_8061')
var_8063 = relay.var("var_8063", dtype = "float32", shape = (108,))#candidate|8063|(108,)|var|float32
var_8064 = relay.var("var_8064", dtype = "uint8", shape = (192,))#candidate|8064|(192,)|var|uint8
call_8062 = func_8061_call(var_8063,var_8064,)
output = call_8062
func_8065 = relay.Function([var_8063,var_8064,], output)
mutated_mod['func_8065'] = func_8065
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7889_call = mod.get_global_var('func_7889')
func_7890_call = mutated_mod.get_global_var('func_7890')
call_8085 = func_7889_call()
call_8086 = func_7889_call()
func_5003_call = mod.get_global_var('func_5003')
func_5005_call = mutated_mod.get_global_var('func_5005')
var_8101 = relay.var("var_8101", dtype = "float64", shape = (5, 84))#candidate|8101|(5, 84)|var|float64
call_8100 = relay.TupleGetItem(func_5003_call(relay.reshape(var_8101.astype('float64'), [14, 3, 10])), 0)
call_8102 = relay.TupleGetItem(func_5005_call(relay.reshape(var_8101.astype('float64'), [14, 3, 10])), 0)
output = relay.Tuple([call_8085,call_8100,var_8101,])
output2 = relay.Tuple([call_8086,call_8102,var_8101,])
func_8109 = relay.Function([var_8101,], output)
mod['func_8109'] = func_8109
mod = relay.transform.InferType()(mod)
var_8110 = relay.var("var_8110", dtype = "float64", shape = (5, 84))#candidate|8110|(5, 84)|var|float64
output = func_8109(var_8110)
func_8111 = relay.Function([var_8110], output)
mutated_mod['func_8111'] = func_8111
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7889_call = mod.get_global_var('func_7889')
func_7890_call = mutated_mod.get_global_var('func_7890')
call_8118 = func_7889_call()
call_8119 = func_7889_call()
output = call_8118
output2 = call_8119
func_8136 = relay.Function([], output)
mod['func_8136'] = func_8136
mod = relay.transform.InferType()(mod)
output = func_8136()
func_8137 = relay.Function([], output)
mutated_mod['func_8137'] = func_8137
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8136_call = mod.get_global_var('func_8136')
func_8137_call = mutated_mod.get_global_var('func_8137')
call_8144 = func_8136_call()
call_8145 = func_8136_call()
output = relay.Tuple([call_8144,])
output2 = relay.Tuple([call_8145,])
func_8150 = relay.Function([], output)
mod['func_8150'] = func_8150
mod = relay.transform.InferType()(mod)
mutated_mod['func_8150'] = func_8150
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8150_call = mutated_mod.get_global_var('func_8150')
call_8151 = func_8150_call()
output = call_8151
func_8152 = relay.Function([], output)
mutated_mod['func_8152'] = func_8152
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7889_call = mod.get_global_var('func_7889')
func_7890_call = mutated_mod.get_global_var('func_7890')
call_8198 = func_7889_call()
call_8199 = func_7889_call()
func_8109_call = mod.get_global_var('func_8109')
func_8111_call = mutated_mod.get_global_var('func_8111')
var_8202 = relay.var("var_8202", dtype = "float64", shape = (420,))#candidate|8202|(420,)|var|float64
call_8201 = relay.TupleGetItem(func_8109_call(relay.reshape(var_8202.astype('float64'), [5, 84])), 1)
call_8203 = relay.TupleGetItem(func_8111_call(relay.reshape(var_8202.astype('float64'), [5, 84])), 1)
output = relay.Tuple([call_8198,call_8201,var_8202,])
output2 = relay.Tuple([call_8199,call_8203,var_8202,])
func_8215 = relay.Function([var_8202,], output)
mod['func_8215'] = func_8215
mod = relay.transform.InferType()(mod)
var_8216 = relay.var("var_8216", dtype = "float64", shape = (420,))#candidate|8216|(420,)|var|float64
output = func_8215(var_8216)
func_8217 = relay.Function([var_8216], output)
mutated_mod['func_8217'] = func_8217
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8286 = relay.const([[[6]],[[3]],[[-1]],[[-9]],[[3]],[[5]],[[-6]],[[-4]]], dtype = "int16")#candidate|8286|(8, 1, 1)|const|int16
const_8287 = relay.const([[[3,-8,7],[-10,4,-6],[-2,-8,8],[6,-8,-2],[5,-7,-2],[9,-8,-10],[4,7,-5],[-2,1,5],[-3,-5,-7],[3,-6,-7],[7,-6,4],[3,5,-3],[-2,-9,-8],[-2,3,-4]],[[-4,-4,-5],[1,-6,10],[-2,-7,2],[9,-6,7],[-3,5,-8],[-10,-5,-5],[5,4,-2],[1,-7,10],[8,-5,8],[-8,-3,-8],[-3,-5,3],[9,-3,-9],[-9,-8,-9],[-8,-8,1]],[[5,10,4],[8,8,-8],[-3,-9,1],[-3,8,-9],[-10,6,-9],[5,-8,-1],[2,-2,5],[1,6,-4],[10,9,9],[-7,-2,8],[-1,5,-9],[-2,8,-3],[-5,-8,-6],[7,-10,-4]],[[-4,-7,-5],[10,-9,3],[-1,-8,10],[-9,8,5],[-2,8,1],[-10,-4,-3],[-3,4,6],[-9,-4,-6],[-10,1,-4],[2,3,7],[-5,-10,5],[9,-6,1],[10,-1,-9],[-3,3,7]],[[-4,-5,-10],[-10,-3,-3],[4,8,4],[-4,-9,3],[3,7,1],[5,-4,10],[-7,10,-3],[-8,-6,8],[8,-4,-8],[-3,2,7],[3,-9,-6],[-2,3,3],[-4,2,-9],[-9,4,-4]],[[-2,-1,6],[-10,-2,7],[-1,-1,2],[10,-6,7],[5,-4,1],[9,-2,2],[10,8,-4],[-4,-7,-7],[10,4,-10],[-3,7,3],[-3,5,-7],[-5,10,3],[-2,9,1],[-8,-5,-6]],[[3,1,-7],[10,-9,7],[-2,2,-8],[6,-9,9],[10,10,-10],[-10,8,-3],[-6,-4,5],[-10,4,1],[-7,3,-1],[-8,2,8],[-8,2,-2],[10,-5,-4],[8,1,5],[5,8,-2]],[[2,4,9],[5,4,3],[2,5,-2],[2,-2,3],[5,-1,-9],[4,2,5],[-1,9,8],[1,-9,-1],[-5,2,-6],[-5,4,3],[-7,-5,4],[10,-2,9],[5,2,-6],[7,-8,7]]], dtype = "int16")#candidate|8287|(8, 14, 3)|const|int16
bop_8288 = relay.bitwise_and(const_8286.astype('int16'), const_8287.astype('int16')) # shape=(8, 14, 3)
output = bop_8288
output2 = bop_8288
func_8297 = relay.Function([], output)
mod['func_8297'] = func_8297
mod = relay.transform.InferType()(mod)
mutated_mod['func_8297'] = func_8297
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8297_call = mutated_mod.get_global_var('func_8297')
call_8298 = func_8297_call()
output = call_8298
func_8299 = relay.Function([], output)
mutated_mod['func_8299'] = func_8299
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8333 = relay.var("var_8333", dtype = "uint64", shape = (16, 5, 6))#candidate|8333|(16, 5, 6)|var|uint64
var_8334 = relay.var("var_8334", dtype = "uint64", shape = (16, 5, 6))#candidate|8334|(16, 5, 6)|var|uint64
bop_8335 = relay.equal(var_8333.astype('bool'), relay.reshape(var_8334.astype('bool'), relay.shape_of(var_8333))) # shape=(16, 5, 6)
bop_8351 = relay.left_shift(var_8334.astype('int32'), relay.reshape(bop_8335.astype('int32'), relay.shape_of(var_8334))) # shape=(16, 5, 6)
output = bop_8351
output2 = bop_8351
func_8358 = relay.Function([var_8333,var_8334,], output)
mod['func_8358'] = func_8358
mod = relay.transform.InferType()(mod)
mutated_mod['func_8358'] = func_8358
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8358_call = mutated_mod.get_global_var('func_8358')
var_8360 = relay.var("var_8360", dtype = "uint64", shape = (16, 5, 6))#candidate|8360|(16, 5, 6)|var|uint64
var_8361 = relay.var("var_8361", dtype = "uint64", shape = (16, 5, 6))#candidate|8361|(16, 5, 6)|var|uint64
call_8359 = func_8358_call(var_8360,var_8361,)
output = call_8359
func_8362 = relay.Function([var_8360,var_8361,], output)
mutated_mod['func_8362'] = func_8362
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8136_call = mod.get_global_var('func_8136')
func_8137_call = mutated_mod.get_global_var('func_8137')
call_8366 = func_8136_call()
call_8367 = func_8136_call()
output = relay.Tuple([call_8366,])
output2 = relay.Tuple([call_8367,])
func_8375 = relay.Function([], output)
mod['func_8375'] = func_8375
mod = relay.transform.InferType()(mod)
mutated_mod['func_8375'] = func_8375
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8375_call = mutated_mod.get_global_var('func_8375')
call_8376 = func_8375_call()
output = call_8376
func_8377 = relay.Function([], output)
mutated_mod['func_8377'] = func_8377
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8000_call = mod.get_global_var('func_8000')
func_8002_call = mutated_mod.get_global_var('func_8002')
call_8397 = relay.TupleGetItem(func_8000_call(), 0)
call_8398 = relay.TupleGetItem(func_8002_call(), 0)
output = call_8397
output2 = call_8398
func_8407 = relay.Function([], output)
mod['func_8407'] = func_8407
mod = relay.transform.InferType()(mod)
output = func_8407()
func_8408 = relay.Function([], output)
mutated_mod['func_8408'] = func_8408
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7889_call = mod.get_global_var('func_7889')
func_7890_call = mutated_mod.get_global_var('func_7890')
call_8414 = func_7889_call()
call_8415 = func_7889_call()
func_8407_call = mod.get_global_var('func_8407')
func_8408_call = mutated_mod.get_global_var('func_8408')
call_8422 = func_8407_call()
call_8423 = func_8407_call()
output = relay.Tuple([call_8414,call_8422,])
output2 = relay.Tuple([call_8415,call_8423,])
func_8446 = relay.Function([], output)
mod['func_8446'] = func_8446
mod = relay.transform.InferType()(mod)
mutated_mod['func_8446'] = func_8446
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8446_call = mutated_mod.get_global_var('func_8446')
call_8447 = func_8446_call()
output = call_8447
func_8448 = relay.Function([], output)
mutated_mod['func_8448'] = func_8448
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8000_call = mod.get_global_var('func_8000')
func_8002_call = mutated_mod.get_global_var('func_8002')
call_8612 = relay.TupleGetItem(func_8000_call(), 0)
call_8613 = relay.TupleGetItem(func_8002_call(), 0)
func_8297_call = mod.get_global_var('func_8297')
func_8299_call = mutated_mod.get_global_var('func_8299')
call_8620 = func_8297_call()
call_8621 = func_8297_call()
func_8297_call = mod.get_global_var('func_8297')
func_8299_call = mutated_mod.get_global_var('func_8299')
call_8623 = func_8297_call()
call_8624 = func_8297_call()
var_8646 = relay.var("var_8646", dtype = "float32", shape = (3, 15, 11))#candidate|8646|(3, 15, 11)|var|float32
bop_8647 = relay.minimum(call_8612.astype('int64'), relay.reshape(var_8646.astype('int64'), relay.shape_of(call_8612))) # shape=(3, 15, 11)
bop_8650 = relay.minimum(call_8613.astype('int64'), relay.reshape(var_8646.astype('int64'), relay.shape_of(call_8613))) # shape=(3, 15, 11)
func_8375_call = mod.get_global_var('func_8375')
func_8377_call = mutated_mod.get_global_var('func_8377')
call_8658 = relay.TupleGetItem(func_8375_call(), 0)
call_8659 = relay.TupleGetItem(func_8377_call(), 0)
var_8662 = relay.var("var_8662", dtype = "float32", shape = (3, 15, 11))#candidate|8662|(3, 15, 11)|var|float32
bop_8663 = relay.logical_xor(call_8658.astype('int8'), relay.reshape(var_8662.astype('int8'), relay.shape_of(call_8658))) # shape=(3, 15, 11)
bop_8666 = relay.logical_xor(call_8659.astype('int8'), relay.reshape(var_8662.astype('int8'), relay.shape_of(call_8659))) # shape=(3, 15, 11)
bop_8674 = relay.bitwise_and(var_8646.astype('uint32'), relay.reshape(call_8658.astype('uint32'), relay.shape_of(var_8646))) # shape=(3, 15, 11)
bop_8677 = relay.bitwise_and(var_8646.astype('uint32'), relay.reshape(call_8659.astype('uint32'), relay.shape_of(var_8646))) # shape=(3, 15, 11)
output = relay.Tuple([call_8620,call_8623,bop_8647,bop_8663,bop_8674,])
output2 = relay.Tuple([call_8621,call_8624,bop_8650,bop_8666,bop_8677,])
func_8687 = relay.Function([var_8646,var_8662,], output)
mod['func_8687'] = func_8687
mod = relay.transform.InferType()(mod)
var_8688 = relay.var("var_8688", dtype = "float32", shape = (3, 15, 11))#candidate|8688|(3, 15, 11)|var|float32
var_8689 = relay.var("var_8689", dtype = "float32", shape = (3, 15, 11))#candidate|8689|(3, 15, 11)|var|float32
output = func_8687(var_8688,var_8689,)
func_8690 = relay.Function([var_8688,var_8689,], output)
mutated_mod['func_8690'] = func_8690
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8722 = relay.var("var_8722", dtype = "float32", shape = (14, 15, 3))#candidate|8722|(14, 15, 3)|var|float32
uop_8723 = relay.sqrt(var_8722.astype('float32')) # shape=(14, 15, 3)
output = uop_8723
output2 = uop_8723
func_8742 = relay.Function([var_8722,], output)
mod['func_8742'] = func_8742
mod = relay.transform.InferType()(mod)
mutated_mod['func_8742'] = func_8742
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8743 = relay.var("var_8743", dtype = "float32", shape = (14, 15, 3))#candidate|8743|(14, 15, 3)|var|float32
func_8742_call = mutated_mod.get_global_var('func_8742')
call_8744 = func_8742_call(var_8743)
output = call_8744
func_8745 = relay.Function([var_8743], output)
mutated_mod['func_8745'] = func_8745
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8407_call = mod.get_global_var('func_8407')
func_8408_call = mutated_mod.get_global_var('func_8408')
call_8761 = func_8407_call()
call_8762 = func_8407_call()
func_7889_call = mod.get_global_var('func_7889')
func_7890_call = mutated_mod.get_global_var('func_7890')
call_8770 = func_7889_call()
call_8771 = func_7889_call()
uop_8778 = relay.tan(call_8761.astype('float64')) # shape=(3, 15, 11)
uop_8780 = relay.tan(call_8762.astype('float64')) # shape=(3, 15, 11)
output = relay.Tuple([call_8770,uop_8778,])
output2 = relay.Tuple([call_8771,uop_8780,])
func_8789 = relay.Function([], output)
mod['func_8789'] = func_8789
mod = relay.transform.InferType()(mod)
output = func_8789()
func_8790 = relay.Function([], output)
mutated_mod['func_8790'] = func_8790
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8839 = relay.var("var_8839", dtype = "float64", shape = (13, 15, 9))#candidate|8839|(13, 15, 9)|var|float64
var_8840 = relay.var("var_8840", dtype = "float64", shape = (13, 15, 9))#candidate|8840|(13, 15, 9)|var|float64
bop_8841 = relay.mod(var_8839.astype('float64'), relay.reshape(var_8840.astype('float64'), relay.shape_of(var_8839))) # shape=(13, 15, 9)
func_3642_call = mod.get_global_var('func_3642')
func_3647_call = mutated_mod.get_global_var('func_3647')
const_8856 = relay.const([7.106946,8.845230,1.844837,7.454558,4.765398,0.624500,-2.734301,6.055740,9.962099,0.909917,-7.290885,5.190200,-9.770216,-5.403044,-9.786048,-5.496365,2.329672,4.101231,1.189230,0.778329,5.912563,4.211177,-2.710870,-9.210047,-7.762765,2.151759,-7.767740,-4.157559,-8.831266,-0.954115,8.744237,6.681595,4.647878,-5.321892,2.183496,9.810121,-1.168681,1.452348,-3.591232,-9.794825,2.143997,1.741847,-6.838369,-3.416475,-0.205503,-6.992376,0.899023,-8.265250,-9.748147,-9.827453,1.849507,9.367965,-9.695912,-2.022373,-1.927512,6.992252,-1.314671,1.323634,6.013325,-7.267256,9.638756,1.280960,-3.497926,4.032652,-2.275377,-4.526624,2.680420,0.876298,-3.385302,-5.939099,7.833672,-1.888495,-6.550542,-0.335069,-8.278058,2.811989,3.917007,-3.356477,8.757533,7.865509,5.089606,6.784825,1.239025,9.800450,-9.960884,-4.403949,8.040169,-6.891460,-4.789636,6.851693,4.518493,-3.632855,-3.673662,-3.108971,-2.361626,9.542458,2.259292,2.143780,-7.562079,0.888218,-2.728188,-8.903514,-3.593222,-4.038506,6.406320,8.243004,-7.191971,-8.411395,5.729564,-5.809157,-4.903901,4.324874,-5.053835,-6.110836,1.540989,-5.613340,2.464455,-7.027393,5.486224,-3.296530,-9.222274,9.537599,-2.262699,0.181931,-7.444313,3.712830,-9.360003,-8.004433,8.439562,4.715219,-7.093631,7.236754,-2.389693,-5.462107,-6.402676,-6.236263,-1.580411,3.087652,6.770018,-0.771979,0.103293,-8.752852,8.790141,-0.509066,2.088828,8.342428,1.045853,5.830273,-4.155443,1.732760,6.084444,-6.750600,5.605296,-8.100455,-0.619752,-3.622285,-9.689791,6.342465,-2.454981,9.441796,4.245162,3.063246,1.560134,-0.536266,-6.761554,-3.740105,-2.972605,-7.741551,-6.755879,-0.327385,5.402029,-0.759232,-9.269916,0.413966,-0.341044,-8.427186,-9.749191,-5.411865,8.736903,3.656719,8.443843,2.404081,-3.946151,1.737716,-8.105322,-3.054099,3.572454,4.519862,-4.744107,-5.423887,5.891684,5.557558,-2.061886,9.582251,-7.598930,-6.249378,-8.424393,2.890941,4.106772,-7.103265,3.327635,9.448061,1.297596,-1.460721,-1.520926,-7.431632,4.214897,8.705102,-0.825309,2.268241,4.796656,-4.883186,9.323262,3.028607,-2.586133,-6.582697,-6.948960,-8.919566,4.151830,4.539714,5.086074,8.066654,6.602337,5.556502,-0.141584,0.803921,-4.682600,5.825687,8.379196,-8.882546,-8.567309,8.096444,-9.324203,8.723401,-9.564971,1.708220,-6.956033,4.439718,8.540979,5.086546,0.876118,-5.580301,-6.349513,-4.216110,-2.656035,-2.310782,7.736914,3.999370,7.108970,1.297108,9.778237,-8.501961,-4.028224,-8.117232,-4.822612,8.061650,-3.067552,5.556071,9.019771,-9.471449,-3.840898,2.359128,9.503237,1.417996,2.598433,-3.527673,-1.568422,-6.471932,-8.723612,-6.003634,3.170562,0.681692,1.537299,-1.146708,-4.214468,-7.955644,3.882495,-3.779427,-3.763682,-6.186167,9.849030,3.025952,7.927947,-7.880783,-0.011511,-2.792746,-7.505550,0.226412,-4.869308,-7.397894,-0.512795,6.686202,-7.074638,-4.573581,4.183624,-1.237031,-5.115568,-9.233630,-4.117003,6.461594,-1.726253,-6.623605,5.347877,-1.858024,5.762911,-3.389408,-8.893387,-3.830414,-7.914235,6.570786,6.945863,-7.356076,2.065517,7.176998,4.573938,-0.100056,-8.181942,-7.124427,-6.390519,7.097421,8.735698,-0.311727,7.507263,3.491501,0.176923,4.267251,-4.492995,-9.439496,9.290255,5.743238,9.471913,-5.599559,-3.896866,5.669097,8.038548,0.450073,7.116929,-9.643949,-3.629481,-6.183126,1.426451,-9.005040,2.031235,7.631434,-8.164125,7.020681,2.413930,9.306158,-0.577238,-5.493319,6.398988,-1.239945,4.304229,8.985232,-1.403316,-4.876308,5.626300,-5.963185,4.197571,7.255045,-9.418814,2.571775,-9.126699,-9.867370,-4.258452,1.689367,-2.358322,-8.264912,-0.213997,1.647338,9.103803,-8.085658,-6.033817,2.952141,9.769548,6.109873,6.945108,3.813635,4.131803,-5.313656,-1.800225,1.523715,0.158218,6.396037,0.554213,9.735617,-9.705854,8.185286,-5.208776,-4.118642,-1.546137,1.523211,1.026708,2.804886,-2.209611,-0.475065,5.827030,5.944415,2.192918,3.363262,2.323417,4.966905,-4.291963,-4.397040,6.653540,-5.264903,-7.805280,8.598653,-6.336166,-1.798569,-8.142697,-1.865428,-0.537688,-3.671862,-9.891658,-7.294377,-3.546601,7.163814,2.996996,7.875889,-3.419298,-3.650634,-9.980145,-8.579746,-4.980260,7.051022,8.361783,5.950149,-3.067318,6.503502,4.830073,-4.310954,4.825949,-2.123519,-7.564220,8.975094,-5.798143,1.427495,2.241816,9.048439,8.843152,-3.051143,-9.731567,-4.462280,-7.301698,1.564863,-0.931191,0.940938,9.569722,-5.494240,-1.994179,3.210819,9.014894,4.211627,-1.452866,-0.143125,1.654656,2.027508,-3.320166,-7.124137,1.366173,-1.640823,-6.434423,-9.047304,-9.083863,0.261367,-3.579991,5.480592,4.761983,4.105471,9.619605,0.845723,-6.065704,5.643346,0.710476,5.035350,5.909857,-4.544984,-8.156402,-9.406483,5.590247,8.424184,-8.689751,6.228561,6.485088,6.646133,-6.579128,6.042511,4.581575,-1.117825,9.184650,-0.341723,9.776410,-7.794204,5.522915,-6.598744,-1.617428,-0.793114,-7.942120,-8.595589,-7.700690,2.658674,1.055245,-2.155852,8.902602,2.456653,-5.780514,1.722341,-7.816495,0.847434,-3.468179,-0.370641,8.886451,7.237691,-9.162176,2.181277,-1.069790,8.072069,-5.014928,-1.164694,-9.813223,-9.487975,2.557648,2.777800,8.933032,4.481639,-9.699892,-2.068060,7.793200,-0.045402,8.732710,-7.019329,-1.536215,0.908149,1.294677,-2.145980,7.226759,5.468156,-5.670576,-1.269934,7.183988,-9.960595,4.740977,-1.417766,-4.837634,-0.920829,-2.649237,2.711657,9.983663,0.700877,4.849952,-6.495379,-3.424704,3.076412,-5.233086,-6.494451,-4.151072,-9.107936,5.516689,-5.485165,7.855004,-5.179210,4.189947,-6.815287,-7.188839,-1.458727,4.937926,4.247181,-1.327848,-3.671163,-4.409480,-7.724798,5.624995,4.798875,9.700650,6.587580,-7.876983,9.836575,9.375859,-7.035893,9.258115,7.959981,-8.829084,2.015381,-7.058133,9.082716,-8.506773,0.765973,-5.665536,1.870795,-7.764005,-3.326039,-7.094512,-0.837797,4.323587,0.711203,3.045244,0.904416,2.312308,-6.082647,6.297927,9.908025,-5.383300,3.691095,3.025929,-3.407003,5.100857,-9.430864,-7.595065,-1.934736,-7.861105,8.486076,-6.250064,3.817298,2.501374,1.492746,0.844132,-3.414452,2.866483,3.189636,-5.053925,-9.316471,-4.973051,0.345743,-1.523737,9.580830,-3.442668,-8.862407,4.389656,-5.416079,-9.546642,7.165103,-4.698572,5.258260,-7.027268,-7.223182,-3.814966,-2.816372,-5.952508,-3.682278,3.111573,2.822094,-4.322858,3.650028,4.100123,-7.094094,4.703835,2.265460,9.616772,-7.776207,8.854691,7.268327,6.680043,6.167702,1.467658,-2.414619,4.727807,-1.957352,-6.471243,7.837781,-0.837201,8.478445,-5.204605,6.192628,0.222629,2.061557,5.376652,-6.027312,-1.133523,-6.655251,9.807410,0.617016,-6.627091,-8.431688,5.875133,-8.994699,1.300448,4.844359,-6.134284,-8.413117,-7.743627,3.010778,-2.711648,6.150726,9.793675,-0.966903,-1.913825,8.257563,-5.916383,0.813565,7.213624,2.051196,3.774320,-8.435101,2.452117,3.003311,-4.281955,1.180995,8.551246,-7.179127,-7.442092,9.950430,-5.240053,9.891055,1.503656,-4.885914,-5.486949,4.045088,-5.967026,-2.155845,-9.892148,-3.941201,-2.524183,2.440658,-0.731568,-5.429676,7.128996,7.934747,-6.571508,-4.119467,-2.149806,-6.728857,-3.194824,-6.019206,-1.325946,-7.692718,2.864890,4.281166,3.782275,0.075418,-4.761658,-7.053913,5.247877,5.670997,4.387803,4.686966,-4.227965,-2.810280,-2.141790,-8.673054,3.017174,9.091949,8.921346,-5.292536,-2.801007,-1.112428,6.842709,-3.233329,-7.717859,-0.914396,5.759761,9.497440,-6.919278,-4.503027,7.019692,7.513923,4.044769,0.726609,3.780462,9.915910,9.103789,8.524698,7.030416,7.897027,7.783108,9.526637,-0.285071,1.036636,-3.723783,2.299579,-6.272263,6.590582,0.660544,-3.944560,-4.981394,-8.709656,7.182367,6.295151,4.538703,-1.692383,-2.320987,8.915426,0.225500,6.484053,-6.107483,4.231570,5.088562,6.991346,7.472962,-9.583973,9.657908,2.757419,-7.442077,3.443629,9.256224,-2.640361,1.653718,-9.761012,-7.320522,7.268982,-2.628609,7.253439,5.857398,4.065745,-4.305995,-2.436777,-8.401394,-9.484565,-7.337736,8.316551,-6.177315,-0.658463,0.525973,-6.326588,-6.064588,9.649281,-6.550029,9.295094,8.835732,-4.214587,-2.118179,1.413233,-5.279056,6.349134,-3.056133,-5.358343,-5.219241,-1.122607,-1.231784,-1.480999,-8.162308,9.538685,-6.292125,-8.988194,5.976447,-1.760409,-8.284356,7.919682,6.786099,1.292181,5.555442,-1.363338,-0.994430,4.409086,2.913327,-8.343913,4.787561,-5.123532,-7.027685,2.677410,3.162743,0.519247,-7.504922,-3.717672,3.336977,7.989365,-6.368434,-4.291552,-1.549344,7.554771,3.004482,-7.025841,3.077723,9.862844,2.543834,-3.374092,-9.174149,-9.871094,-0.433848,-9.610825,9.589766,-4.965975,-8.091313,-6.457725,-9.321694,-3.570820,4.263328,3.913942,-6.042218,-3.365925,7.952530,-1.329002,-0.676442,-1.379443,-3.676016,-2.395380,-5.734697,3.649502,-4.134936,-3.845112,8.754398,-1.455414,0.909937,7.965814,-4.985376,0.539209,-1.873625,3.445444,1.054089,7.257922,7.873431,0.325410,-0.475586,-8.174988,-0.181490,-8.031064,5.920524,5.484640,-3.307063,-3.217140,-2.515983,-1.740700,-3.937585,-4.192560,-2.177956,5.217445,2.335162,2.085204,1.326037,-8.242425,-3.647159,5.305308,-7.303518,-0.047648,8.320933,5.337617,2.456156,1.906834,-5.441034,4.301096,9.467626,-6.189510,8.151866,7.830515,6.535621,-8.709723,-9.353836,9.030970,-2.845993,5.986798,8.332352,-0.670867,-2.568384,-5.896767,0.683567,0.433380,-5.623969,9.346131,-7.555559,-3.407913,6.388363,8.640569,-4.160339,-4.220906,1.062950,-5.085598,-0.424879,7.812281,-2.150760,8.527083,3.878506,2.150158,-4.228084,8.806837,7.594515,-5.939705,-8.905175,-7.749499,3.013398,-8.405107,-3.959271,6.405684,7.079606,6.012462,-1.378440,5.512967,-6.968977,5.526137,3.205151,2.299538,-1.023895,1.327991,8.267230,5.547969,-4.863796,2.732976,-6.908758,-7.829533,9.615322,-7.215322,-6.305709,3.844367,-9.028405,-2.380654,9.048621,-8.915240,1.363661,7.741452,4.125381,5.208657,-2.845290,-8.008264,2.278244,-6.459283,-9.639424,-8.788041,-8.757625,6.255702,-0.774817,-6.961894,8.814102,8.314291,5.651990,-0.760321,6.575038,-0.534914,-7.470053,7.622576,6.018231,4.878456,-9.504468,7.488193,1.398012,4.316772,-0.525671,-6.234066,-4.537314,-8.519100,-0.832866,-2.985945,7.250443,9.756545,6.799467,7.070065,-9.936359,-1.359739,2.006820,9.728468,6.904421,-9.367259,-6.576147,0.764286,3.235423,-4.064942,-8.241865,2.395921,-9.082130,-4.476266,4.731623,-2.248450,-5.936466,-1.895280,-1.524412,-5.148172,-4.188858,9.616547,0.154067,5.177071,2.981465,-7.113747,-2.663224,6.053409,-4.140535,-8.639478,8.660232,0.437449,-7.404739,8.103866,7.199699,-9.517223,9.775348,9.738100,-5.258996,3.824992,-4.128179,-1.061635,9.618011,7.194551,3.663128,-9.993015,4.475455,-9.729269,9.076726,-0.555877,7.103353,1.153804,6.765314,-3.096293,4.619468,5.674561,8.462647,1.255538,9.871009,3.108321,-6.020353,1.064463,9.944768,5.697887,-8.493515,-4.205086,-5.153717,-2.619970,-7.246469,-2.756854,-9.277561,5.089480,1.638324,-2.007687,-4.434442,3.188827,1.096293,-9.516576,-0.459779,-9.532558,0.714127,-5.027783,-1.485165,5.311705,0.673226,-6.399717], dtype = "float32")#candidate|8856|(1120,)|const|float32
const_8857 = relay.const(-7.897751, dtype = "float32")#candidate|8857|()|const|float32
var_8858 = relay.var("var_8858", dtype = "uint16", shape = (66,))#candidate|8858|(66,)|var|uint16
call_8855 = relay.TupleGetItem(func_3642_call(relay.reshape(const_8856.astype('float32'), [16, 7, 10]), relay.reshape(const_8857.astype('float32'), []), relay.reshape(var_8858.astype('uint16'), [1, 66]), ), 4)
call_8859 = relay.TupleGetItem(func_3647_call(relay.reshape(const_8856.astype('float32'), [16, 7, 10]), relay.reshape(const_8857.astype('float32'), []), relay.reshape(var_8858.astype('uint16'), [1, 66]), ), 4)
func_7345_call = mod.get_global_var('func_7345')
func_7351_call = mutated_mod.get_global_var('func_7351')
var_8867 = relay.var("var_8867", dtype = "uint16", shape = (39,))#candidate|8867|(39,)|var|uint16
var_8868 = relay.var("var_8868", dtype = "uint16", shape = (117,))#candidate|8868|(117,)|var|uint16
var_8869 = relay.var("var_8869", dtype = "float64", shape = (1404,))#candidate|8869|(1404,)|var|float64
var_8870 = relay.var("var_8870", dtype = "float64", shape = (420,))#candidate|8870|(420,)|var|float64
call_8866 = relay.TupleGetItem(func_7345_call(relay.reshape(var_8867.astype('uint16'), [13, 3, 1]), relay.reshape(var_8868.astype('uint16'), [13, 3, 3]), relay.reshape(var_8869.astype('float64'), [1404,]), relay.reshape(var_8870.astype('float64'), [5, 84]), ), 1)
call_8871 = relay.TupleGetItem(func_7351_call(relay.reshape(var_8867.astype('uint16'), [13, 3, 1]), relay.reshape(var_8868.astype('uint16'), [13, 3, 3]), relay.reshape(var_8869.astype('float64'), [1404,]), relay.reshape(var_8870.astype('float64'), [5, 84]), ), 1)
output = relay.Tuple([bop_8841,call_8855,const_8856,const_8857,var_8858,call_8866,var_8867,var_8868,var_8869,var_8870,])
output2 = relay.Tuple([bop_8841,call_8859,const_8856,const_8857,var_8858,call_8871,var_8867,var_8868,var_8869,var_8870,])
func_8898 = relay.Function([var_8839,var_8840,var_8858,var_8867,var_8868,var_8869,var_8870,], output)
mod['func_8898'] = func_8898
mod = relay.transform.InferType()(mod)
var_8899 = relay.var("var_8899", dtype = "float64", shape = (13, 15, 9))#candidate|8899|(13, 15, 9)|var|float64
var_8900 = relay.var("var_8900", dtype = "float64", shape = (13, 15, 9))#candidate|8900|(13, 15, 9)|var|float64
var_8901 = relay.var("var_8901", dtype = "uint16", shape = (66,))#candidate|8901|(66,)|var|uint16
var_8902 = relay.var("var_8902", dtype = "uint16", shape = (39,))#candidate|8902|(39,)|var|uint16
var_8903 = relay.var("var_8903", dtype = "uint16", shape = (117,))#candidate|8903|(117,)|var|uint16
var_8904 = relay.var("var_8904", dtype = "float64", shape = (1404,))#candidate|8904|(1404,)|var|float64
var_8905 = relay.var("var_8905", dtype = "float64", shape = (420,))#candidate|8905|(420,)|var|float64
output = func_8898(var_8899,var_8900,var_8901,var_8902,var_8903,var_8904,var_8905,)
func_8906 = relay.Function([var_8899,var_8900,var_8901,var_8902,var_8903,var_8904,var_8905,], output)
mutated_mod['func_8906'] = func_8906
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8407_call = mod.get_global_var('func_8407')
func_8408_call = mutated_mod.get_global_var('func_8408')
call_8908 = func_8407_call()
call_8909 = func_8407_call()
uop_8923 = relay.sinh(call_8908.astype('float64')) # shape=(3, 15, 11)
uop_8925 = relay.sinh(call_8909.astype('float64')) # shape=(3, 15, 11)
var_8928 = relay.var("var_8928", dtype = "float64", shape = (3, 15, 11))#candidate|8928|(3, 15, 11)|var|float64
bop_8929 = relay.bitwise_or(uop_8923.astype('int32'), relay.reshape(var_8928.astype('int32'), relay.shape_of(uop_8923))) # shape=(3, 15, 11)
bop_8932 = relay.bitwise_or(uop_8925.astype('int32'), relay.reshape(var_8928.astype('int32'), relay.shape_of(uop_8925))) # shape=(3, 15, 11)
func_581_call = mod.get_global_var('func_581')
func_586_call = mutated_mod.get_global_var('func_586')
var_8946 = relay.var("var_8946", dtype = "uint16", shape = (66,))#candidate|8946|(66,)|var|uint16
var_8947 = relay.var("var_8947", dtype = "uint16", shape = (429, 2))#candidate|8947|(429, 2)|var|uint16
var_8948 = relay.var("var_8948", dtype = "int64", shape = (1040,))#candidate|8948|(1040,)|var|int64
call_8945 = relay.TupleGetItem(func_581_call(relay.reshape(var_8946.astype('uint16'), [11, 6, 1]), relay.reshape(var_8947.astype('uint16'), [11, 6, 13]), relay.reshape(var_8948.astype('int64'), [1040,]), ), 4)
call_8949 = relay.TupleGetItem(func_586_call(relay.reshape(var_8946.astype('uint16'), [11, 6, 1]), relay.reshape(var_8947.astype('uint16'), [11, 6, 13]), relay.reshape(var_8948.astype('int64'), [1040,]), ), 4)
output = relay.Tuple([bop_8929,call_8945,var_8946,var_8947,var_8948,])
output2 = relay.Tuple([bop_8932,call_8949,var_8946,var_8947,var_8948,])
func_8953 = relay.Function([var_8928,var_8946,var_8947,var_8948,], output)
mod['func_8953'] = func_8953
mod = relay.transform.InferType()(mod)
mutated_mod['func_8953'] = func_8953
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8953_call = mutated_mod.get_global_var('func_8953')
var_8955 = relay.var("var_8955", dtype = "float64", shape = (3, 15, 11))#candidate|8955|(3, 15, 11)|var|float64
var_8956 = relay.var("var_8956", dtype = "uint16", shape = (66,))#candidate|8956|(66,)|var|uint16
var_8957 = relay.var("var_8957", dtype = "uint16", shape = (429, 2))#candidate|8957|(429, 2)|var|uint16
var_8958 = relay.var("var_8958", dtype = "int64", shape = (1040,))#candidate|8958|(1040,)|var|int64
call_8954 = func_8953_call(var_8955,var_8956,var_8957,var_8958,)
output = call_8954
func_8959 = relay.Function([var_8955,var_8956,var_8957,var_8958,], output)
mutated_mod['func_8959'] = func_8959
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7889_call = mod.get_global_var('func_7889')
func_7890_call = mutated_mod.get_global_var('func_7890')
call_9027 = func_7889_call()
call_9028 = func_7889_call()
func_6729_call = mod.get_global_var('func_6729')
func_6731_call = mutated_mod.get_global_var('func_6731')
var_9033 = relay.var("var_9033", dtype = "float32", shape = (312,))#candidate|9033|(312,)|var|float32
call_9032 = relay.TupleGetItem(func_6729_call(relay.reshape(var_9033.astype('float32'), [13, 2, 12])), 0)
call_9034 = relay.TupleGetItem(func_6731_call(relay.reshape(var_9033.astype('float32'), [13, 2, 12])), 0)
output = relay.Tuple([call_9027,call_9032,var_9033,])
output2 = relay.Tuple([call_9028,call_9034,var_9033,])
func_9039 = relay.Function([var_9033,], output)
mod['func_9039'] = func_9039
mod = relay.transform.InferType()(mod)
var_9040 = relay.var("var_9040", dtype = "float32", shape = (312,))#candidate|9040|(312,)|var|float32
output = func_9039(var_9040)
func_9041 = relay.Function([var_9040], output)
mutated_mod['func_9041'] = func_9041
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8000_call = mod.get_global_var('func_8000')
func_8002_call = mutated_mod.get_global_var('func_8002')
call_9102 = relay.TupleGetItem(func_8000_call(), 2)
call_9103 = relay.TupleGetItem(func_8002_call(), 2)
func_8136_call = mod.get_global_var('func_8136')
func_8137_call = mutated_mod.get_global_var('func_8137')
call_9115 = func_8136_call()
call_9116 = func_8136_call()
const_9122 = relay.const([[[0.853440,7.863952,8.220696,9.690724,-7.542616,-7.500592,-0.959132,8.034798,-5.276698,-2.442704,-5.852502],[6.587620,-6.002849,8.611228,-4.628756,6.141027,-4.392660,-1.721522,3.996262,9.172082,-6.491574,5.964783],[-7.305487,-0.967261,5.759765,-7.940258,4.690226,-8.676355,4.769265,4.278837,-8.534126,9.869438,1.157543],[4.141147,4.294477,0.279650,-9.254659,-2.843865,6.117188,4.009901,-3.557222,-3.611986,-1.284215,3.246430],[-9.929337,4.909207,9.513477,-6.493372,3.245455,0.823413,-1.771893,-8.800635,5.439759,4.944519,3.045852],[4.373976,-1.648238,7.027951,7.023156,-6.873375,5.525762,-6.836975,-7.830876,-9.979438,-8.520689,8.382315],[-6.341856,-4.343330,-6.325139,-8.783062,-3.422141,9.749692,6.918057,7.105855,3.526855,-5.830338,-7.861183],[8.684396,6.688618,-3.951817,8.948842,-0.819862,3.732798,-9.686610,-1.095886,0.681275,-8.904108,6.749506],[-2.106511,-4.242680,-3.153101,-2.056048,-8.607169,-4.402852,5.577191,9.016692,-1.090682,-4.489472,-2.231669],[3.074167,6.756815,-9.861290,-6.820047,1.749311,-4.771812,-2.112502,4.089487,4.252412,7.870588,7.214521],[-1.286522,5.907383,6.419102,-3.845983,-8.944633,-0.083332,5.662006,-4.642219,2.831560,-5.171829,1.031981],[-9.414219,2.237160,-9.289774,1.290214,-6.250729,3.544406,-7.624004,9.572935,-8.194186,7.864325,-7.032610],[6.961762,-7.531243,-8.694123,7.522326,9.539366,-8.131863,5.686437,3.644119,2.740983,4.943464,-8.699268],[1.845992,-7.235067,0.291056,-7.500455,-8.513694,-6.261344,-1.813258,8.193536,4.884251,-0.768535,-7.098532],[-9.716524,-6.633348,9.573616,-7.281770,-4.277263,5.490431,-7.881248,-5.775047,-9.246247,-8.387116,9.498439]],[[-3.665594,-0.206777,7.776695,5.299436,3.560601,-1.727573,8.402527,9.937011,4.456231,9.015228,-9.896665],[8.501043,9.703300,-7.245580,1.357032,-6.177470,-2.328920,9.203918,4.098401,4.859758,-0.968138,5.067932],[2.364820,-1.480523,-3.491801,-9.510760,6.184675,8.473709,5.463455,-2.361937,8.672222,-9.658223,-5.923018],[3.007002,5.529567,-9.662230,-3.127872,1.357240,-4.019249,-6.166782,-4.225507,5.635064,4.195307,-1.338181],[-9.853793,9.407083,7.664297,-9.238463,1.296146,-9.313163,-0.653414,-3.634234,-4.913136,8.117187,9.397331],[7.522408,-0.091996,6.471020,8.104711,-0.488659,6.428251,7.974556,-4.806953,-0.651210,3.748613,-4.580688],[5.504549,9.972979,-7.021745,-0.420659,-4.873262,5.678672,-1.865635,-9.136190,-0.441836,-8.755975,-3.648280],[6.839120,3.669401,-5.413977,-9.507075,-7.670941,-1.586544,1.083249,-2.368582,-0.061435,2.819124,7.819705],[3.549786,8.328862,5.687805,3.107071,7.086737,-0.162000,-5.068359,2.666658,4.094325,-3.992088,8.960262],[-4.999722,9.206200,3.865990,7.225897,-6.098652,-7.399549,-8.681766,1.291335,-7.746433,-7.672339,3.472335],[3.591394,9.581946,5.394417,-3.279157,3.753488,-7.577642,-1.081470,4.159848,8.537220,-8.970003,9.727798],[3.777177,-8.230137,5.543893,-1.190543,5.151100,-5.854440,-5.442309,-1.782053,-4.740335,5.454931,-7.837473],[-9.155787,2.416382,5.642751,-6.750101,9.792501,-7.935139,8.165612,-3.882516,-8.805441,5.148437,8.656831],[-5.513262,2.036214,2.029012,-1.304857,-5.018354,-4.780227,-9.904340,4.721698,-9.654291,-0.316168,-2.130904],[4.291668,1.952480,-6.246094,-2.793169,-6.961881,3.297169,3.561011,-2.127641,-5.179326,3.565178,0.678778]],[[-9.089481,-8.255266,6.912837,3.796569,-4.920670,-3.919033,0.579806,-4.818342,-5.181352,-6.202878,-1.367877],[5.696713,6.087349,2.161563,-7.994097,-1.341334,8.180487,2.917465,0.842799,-7.037486,5.348586,5.652964],[8.017749,-3.274158,-9.671344,4.796669,5.263802,-6.412647,-6.316737,4.184643,-8.116810,-7.921673,-3.595285],[-6.522760,-2.811246,6.124683,3.157527,-2.771532,-0.918653,0.680350,-0.115233,-4.095417,8.636169,-0.405901],[-2.298517,-2.615121,-3.120249,5.674545,-4.091946,-8.109320,-7.925314,8.019789,4.725910,2.319025,-5.165658],[-2.122125,8.936694,-5.126181,9.132324,8.082626,-0.967669,-2.117089,-4.049412,1.405100,4.999407,0.594832],[7.529909,-6.859259,8.002001,9.888157,-7.119663,-8.028827,-0.219010,-2.531037,8.598565,3.550639,7.844115],[-2.623930,2.360255,-1.153579,-3.066355,9.601510,-7.261130,-3.492214,9.420740,-7.086867,8.479849,5.811091],[5.259852,-7.690591,3.400038,6.112681,8.374451,-1.520690,2.650238,-6.952218,8.774149,-3.902140,2.525060],[3.164333,-4.825634,-2.829821,-0.122416,3.254037,9.533233,-4.307695,9.908295,2.545901,-9.475611,-9.080831],[-9.675416,6.276245,-6.028885,-8.234716,-5.998797,-5.596422,6.269685,-4.175375,-3.063948,7.495909,6.544394],[2.003290,7.020413,-4.898808,-5.832505,-1.023817,3.914170,-9.613258,2.622630,0.519327,-7.376339,-7.600896],[-0.983065,9.792540,-2.219489,-1.089923,3.324561,-8.858754,-2.445904,-8.868539,9.175198,2.963072,-4.060426],[-7.799353,-8.329224,3.196724,7.361979,-5.606729,-8.609208,3.567764,0.524630,4.903970,7.936967,5.898976],[-3.493769,-7.060237,-0.084452,-0.329282,-5.880724,-4.122270,-2.880764,1.275104,9.982997,8.587906,-8.485436]]], dtype = "float32")#candidate|9122|(3, 15, 11)|const|float32
bop_9123 = relay.bitwise_xor(call_9115.astype('int16'), relay.reshape(const_9122.astype('int16'), relay.shape_of(call_9115))) # shape=(3, 15, 11)
bop_9126 = relay.bitwise_xor(call_9116.astype('int16'), relay.reshape(const_9122.astype('int16'), relay.shape_of(call_9116))) # shape=(3, 15, 11)
bop_9135 = relay.right_shift(const_9122.astype('int64'), relay.reshape(call_9115.astype('int64'), relay.shape_of(const_9122))) # shape=(3, 15, 11)
bop_9138 = relay.right_shift(const_9122.astype('int64'), relay.reshape(call_9116.astype('int64'), relay.shape_of(const_9122))) # shape=(3, 15, 11)
output = relay.Tuple([call_9102,bop_9123,bop_9135,])
output2 = relay.Tuple([call_9103,bop_9126,bop_9138,])
func_9141 = relay.Function([], output)
mod['func_9141'] = func_9141
mod = relay.transform.InferType()(mod)
mutated_mod['func_9141'] = func_9141
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9141_call = mutated_mod.get_global_var('func_9141')
call_9142 = func_9141_call()
output = call_9142
func_9143 = relay.Function([], output)
mutated_mod['func_9143'] = func_9143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8446_call = mod.get_global_var('func_8446')
func_8448_call = mutated_mod.get_global_var('func_8448')
call_9182 = relay.TupleGetItem(func_8446_call(), 1)
call_9183 = relay.TupleGetItem(func_8448_call(), 1)
const_9184 = relay.const([[[0.347703,-0.012988,6.323700,1.668368,0.508137,-0.318067,5.213952,7.165691,5.545076,9.510126,-5.376207],[2.565423,3.795402,-4.672892,3.367887,8.229689,9.593259,1.525765,8.024084,-5.124124,-1.610749,-2.147627],[8.490769,-3.254458,1.926315,-2.343938,2.300944,-1.995732,-6.577273,-4.569057,-8.705834,5.180843,3.367712],[9.831055,7.651770,0.066214,-3.714237,-5.385888,-9.762731,-7.946095,-2.164786,1.746570,8.887245,-6.790381],[-3.165868,4.026017,1.634077,4.803373,8.032040,2.320044,-8.993314,-3.212980,-2.303254,-4.986339,3.034289],[-1.964622,-8.376922,-8.152271,0.258073,3.083552,3.672768,7.985221,6.052245,6.479266,6.957631,-7.333091],[4.556617,-7.111836,3.080055,-8.472235,-9.132157,-8.487016,2.069659,-0.211912,0.803512,-0.733697,-0.549660],[3.805973,-3.821794,-3.876535,2.447916,-5.719182,5.001747,-3.548418,2.471677,-4.368286,3.059483,-5.149642],[1.105338,-8.462615,3.656817,5.016711,-3.936382,5.801286,6.232116,-9.487615,-6.848150,2.826774,6.353027],[-0.753304,7.941426,-1.613865,3.736589,8.637598,3.989223,-0.612031,-3.644828,-1.844748,-4.302655,-9.748953],[8.991901,0.721703,2.265458,-8.951836,-9.854262,4.646478,8.582127,0.513288,1.830456,9.820901,-7.827646],[2.360051,7.464183,0.240747,4.429880,2.614401,-1.138416,5.338268,4.078799,-2.886061,-7.424863,1.968206],[-9.849231,3.238470,8.380913,-8.698712,-8.727511,1.367246,-0.486257,3.656196,-4.110303,-4.628723,2.098742],[-1.544723,7.437247,3.797307,-6.844364,3.427143,8.127591,-1.147992,8.135360,-6.689897,-6.323615,3.232922],[-6.169974,4.909684,3.581507,2.877893,9.759862,-4.784803,-6.894596,-4.408453,-4.923702,3.482376,-0.328944]],[[8.053458,6.708261,0.141816,9.539564,-5.752193,-2.278079,-8.837577,4.093813,-7.036393,2.346132,-3.725869],[-3.424316,-9.412197,-1.332304,-9.042097,-8.512566,6.994926,6.460400,4.964187,4.715457,-8.632432,3.130919],[-7.664362,-7.930609,5.566026,7.360593,-7.392593,3.050610,-8.237560,-2.157330,-7.695684,-4.365797,-0.122113],[5.529549,-5.603432,8.496717,-4.802844,5.039356,-2.690627,7.251252,9.326393,4.088235,4.744155,4.496575],[-3.578683,-3.141060,-9.265402,-4.870398,6.803862,-5.624118,6.399115,-2.974038,1.823269,-0.214725,-5.020160],[8.920256,-8.070802,6.710012,7.693847,5.007852,-7.567616,0.484938,2.807166,-7.210190,6.970640,-3.064062],[-3.027254,-9.428951,5.916386,6.740345,-7.605985,1.530613,1.967666,-2.252017,0.049845,7.028611,-2.782216],[-7.818384,-4.700737,-4.954865,-5.652827,-1.172059,3.213974,-0.233410,1.086586,-4.400928,-2.003762,-2.792649],[-3.344732,6.460068,4.777113,-3.321832,4.069803,2.696757,5.673145,1.265974,-6.185105,-4.493191,-4.463606],[-4.925413,7.143540,1.206393,2.379078,4.963350,1.750085,9.360861,0.218672,-6.036350,6.208870,1.752226],[5.001262,-4.328402,-6.462249,7.345888,0.295454,6.886798,6.795704,-7.553408,-2.059481,-4.108181,-5.877896],[-0.818494,9.418688,-2.173615,-7.752734,6.951512,-4.512485,-8.129847,9.575927,1.262331,2.552955,9.733772],[-2.076868,9.539729,2.910737,-8.565256,-6.456489,-5.170362,7.109888,-4.146361,-4.031754,3.122967,6.419230],[6.550027,5.803842,3.988460,2.905466,2.457319,-3.652014,3.595603,8.989524,-2.734996,-1.728628,5.740612],[6.694562,-2.611480,-6.249713,8.519896,0.219045,-8.764308,8.915423,5.996055,-3.271919,-8.172617,-4.732301]],[[-5.445007,4.539308,2.713980,9.792668,0.842425,-1.510539,-5.029108,3.316647,-0.559289,3.865403,-2.908941],[-1.246129,7.518578,-7.959105,8.320494,6.734083,-8.359643,-1.207123,4.301059,1.774453,8.183801,-7.581125],[-9.201555,0.451962,-0.247657,8.676017,6.333066,-6.534240,-0.105787,6.071335,8.221405,8.181857,3.439181],[2.283366,-1.929513,-4.355802,-2.872727,2.049960,-1.507628,8.558622,2.443736,2.535017,-1.226116,-3.656278],[2.610670,0.344989,-3.769638,-5.714217,-9.533947,-5.748686,-6.681475,-5.682168,2.669467,1.610796,-3.842892],[-3.553423,2.524690,7.068418,-9.881878,-3.934539,0.650423,-9.425869,6.859504,0.955475,8.839576,-7.667040],[-5.077986,-5.946592,-6.487389,-5.361687,6.651582,0.008335,-7.108223,-3.076663,-2.473450,-0.749444,-5.714553],[4.621515,-4.209016,-0.461243,3.905586,4.707456,5.991351,8.452561,-0.085436,9.413268,5.089482,-9.398782],[8.094297,-2.008299,-1.601816,2.966839,7.223181,-8.284065,9.984058,3.560366,6.327700,3.645423,7.247773],[-2.446155,-8.981285,0.361110,-6.764916,5.067062,-1.805427,4.237505,5.550393,-0.679626,-2.788064,-0.180477],[7.998544,-1.391458,-3.584922,2.380680,-6.300417,8.161278,5.013298,-6.247358,6.652735,7.431492,8.297757],[-2.936705,7.598617,-7.043898,6.442769,-9.684997,-2.855436,5.088515,-9.410278,-6.309906,-1.437299,3.711895],[-1.269011,-5.211788,7.012163,-1.091511,-2.398874,3.718065,7.765275,5.566211,-2.589636,5.977401,-9.083811],[-5.896380,6.711602,-2.153593,-1.908223,-2.314249,9.556382,-3.225311,-4.041739,-0.538421,7.515480,2.371577],[4.701760,2.606450,-2.342255,-5.031584,7.243339,4.000157,-4.527788,9.560331,6.332837,0.534245,-9.849416]]], dtype = "float32")#candidate|9184|(3, 15, 11)|const|float32
bop_9185 = relay.power(call_9182.astype('float32'), relay.reshape(const_9184.astype('float32'), relay.shape_of(call_9182))) # shape=(3, 15, 11)
bop_9188 = relay.power(call_9183.astype('float32'), relay.reshape(const_9184.astype('float32'), relay.shape_of(call_9183))) # shape=(3, 15, 11)
uop_9193 = relay.log10(call_9182.astype('float32')) # shape=(3, 15, 11)
uop_9195 = relay.log10(call_9183.astype('float32')) # shape=(3, 15, 11)
func_8215_call = mod.get_global_var('func_8215')
func_8217_call = mutated_mod.get_global_var('func_8217')
var_9197 = relay.var("var_9197", dtype = "float64", shape = (5, 84))#candidate|9197|(5, 84)|var|float64
call_9196 = relay.TupleGetItem(func_8215_call(relay.reshape(var_9197.astype('float64'), [420,])), 0)
call_9198 = relay.TupleGetItem(func_8217_call(relay.reshape(var_9197.astype('float64'), [420,])), 0)
func_1118_call = mod.get_global_var('func_1118')
func_1121_call = mutated_mod.get_global_var('func_1121')
var_9202 = relay.var("var_9202", dtype = "int16", shape = (480,))#candidate|9202|(480,)|var|int16
call_9201 = relay.TupleGetItem(func_1118_call(relay.reshape(var_9202.astype('int16'), [16, 5, 6])), 0)
call_9203 = relay.TupleGetItem(func_1121_call(relay.reshape(var_9202.astype('int16'), [16, 5, 6])), 0)
func_5819_call = mod.get_global_var('func_5819')
func_5823_call = mutated_mod.get_global_var('func_5823')
var_9210 = relay.var("var_9210", dtype = "float32", shape = (351,))#candidate|9210|(351,)|var|float32
call_9209 = relay.TupleGetItem(func_5819_call(relay.reshape(var_9210.astype('float32'), [9, 13, 3]), relay.reshape(var_9210.astype('float32'), [9, 13, 3]), relay.reshape(var_9210.astype('float32'), [9, 13, 3]), ), 2)
call_9211 = relay.TupleGetItem(func_5823_call(relay.reshape(var_9210.astype('float32'), [9, 13, 3]), relay.reshape(var_9210.astype('float32'), [9, 13, 3]), relay.reshape(var_9210.astype('float32'), [9, 13, 3]), ), 2)
output = relay.Tuple([bop_9185,uop_9193,call_9196,var_9197,call_9201,var_9202,call_9209,var_9210,])
output2 = relay.Tuple([bop_9188,uop_9195,call_9198,var_9197,call_9203,var_9202,call_9211,var_9210,])
func_9214 = relay.Function([var_9197,var_9202,var_9210,], output)
mod['func_9214'] = func_9214
mod = relay.transform.InferType()(mod)
var_9215 = relay.var("var_9215", dtype = "float64", shape = (5, 84))#candidate|9215|(5, 84)|var|float64
var_9216 = relay.var("var_9216", dtype = "int16", shape = (480,))#candidate|9216|(480,)|var|int16
var_9217 = relay.var("var_9217", dtype = "float32", shape = (351,))#candidate|9217|(351,)|var|float32
output = func_9214(var_9215,var_9216,var_9217,)
func_9218 = relay.Function([var_9215,var_9216,var_9217,], output)
mutated_mod['func_9218'] = func_9218
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9279 = relay.var("var_9279", dtype = "float64", shape = (4, 13, 10))#candidate|9279|(4, 13, 10)|var|float64
var_9280 = relay.var("var_9280", dtype = "float64", shape = (4, 13, 10))#candidate|9280|(4, 13, 10)|var|float64
bop_9281 = relay.divide(var_9279.astype('float64'), relay.reshape(var_9280.astype('float64'), relay.shape_of(var_9279))) # shape=(4, 13, 10)
output = bop_9281
output2 = bop_9281
func_9287 = relay.Function([var_9279,var_9280,], output)
mod['func_9287'] = func_9287
mod = relay.transform.InferType()(mod)
var_9288 = relay.var("var_9288", dtype = "float64", shape = (4, 13, 10))#candidate|9288|(4, 13, 10)|var|float64
var_9289 = relay.var("var_9289", dtype = "float64", shape = (4, 13, 10))#candidate|9289|(4, 13, 10)|var|float64
output = func_9287(var_9288,var_9289,)
func_9290 = relay.Function([var_9288,var_9289,], output)
mutated_mod['func_9290'] = func_9290
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9302 = relay.var("var_9302", dtype = "float64", shape = (4, 11, 15))#candidate|9302|(4, 11, 15)|var|float64
uop_9303 = relay.cos(var_9302.astype('float64')) # shape=(4, 11, 15)
output = uop_9303
output2 = uop_9303
func_9305 = relay.Function([var_9302,], output)
mod['func_9305'] = func_9305
mod = relay.transform.InferType()(mod)
mutated_mod['func_9305'] = func_9305
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9306 = relay.var("var_9306", dtype = "float64", shape = (4, 11, 15))#candidate|9306|(4, 11, 15)|var|float64
func_9305_call = mutated_mod.get_global_var('func_9305')
call_9307 = func_9305_call(var_9306)
output = call_9307
func_9308 = relay.Function([var_9306], output)
mutated_mod['func_9308'] = func_9308
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8446_call = mod.get_global_var('func_8446')
func_8448_call = mutated_mod.get_global_var('func_8448')
call_9324 = relay.TupleGetItem(func_8446_call(), 1)
call_9325 = relay.TupleGetItem(func_8448_call(), 1)
func_4005_call = mod.get_global_var('func_4005')
func_4007_call = mutated_mod.get_global_var('func_4007')
var_9334 = relay.var("var_9334", dtype = "uint8", shape = ())#candidate|9334|()|var|uint8
call_9333 = relay.TupleGetItem(func_4005_call(relay.reshape(var_9334.astype('uint8'), [])), 0)
call_9335 = relay.TupleGetItem(func_4007_call(relay.reshape(var_9334.astype('uint8'), [])), 0)
output = relay.Tuple([call_9324,call_9333,var_9334,])
output2 = relay.Tuple([call_9325,call_9335,var_9334,])
func_9337 = relay.Function([var_9334,], output)
mod['func_9337'] = func_9337
mod = relay.transform.InferType()(mod)
mutated_mod['func_9337'] = func_9337
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9338 = relay.var("var_9338", dtype = "uint8", shape = ())#candidate|9338|()|var|uint8
func_9337_call = mutated_mod.get_global_var('func_9337')
call_9339 = func_9337_call(var_9338)
output = call_9339
func_9340 = relay.Function([var_9338], output)
mutated_mod['func_9340'] = func_9340
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8000_call = mod.get_global_var('func_8000')
func_8002_call = mutated_mod.get_global_var('func_8002')
call_9360 = relay.TupleGetItem(func_8000_call(), 2)
call_9361 = relay.TupleGetItem(func_8002_call(), 2)
output = call_9360
output2 = call_9361
func_9366 = relay.Function([], output)
mod['func_9366'] = func_9366
mod = relay.transform.InferType()(mod)
mutated_mod['func_9366'] = func_9366
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9366_call = mutated_mod.get_global_var('func_9366')
call_9367 = func_9366_call()
output = call_9367
func_9368 = relay.Function([], output)
mutated_mod['func_9368'] = func_9368
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8150_call = mod.get_global_var('func_8150')
func_8152_call = mutated_mod.get_global_var('func_8152')
call_9424 = relay.TupleGetItem(func_8150_call(), 0)
call_9425 = relay.TupleGetItem(func_8152_call(), 0)
output = relay.Tuple([call_9424,])
output2 = relay.Tuple([call_9425,])
func_9439 = relay.Function([], output)
mod['func_9439'] = func_9439
mod = relay.transform.InferType()(mod)
output = func_9439()
func_9440 = relay.Function([], output)
mutated_mod['func_9440'] = func_9440
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8297_call = mod.get_global_var('func_8297')
func_8299_call = mutated_mod.get_global_var('func_8299')
call_9490 = func_8297_call()
call_9491 = func_8297_call()
output = call_9490
output2 = call_9491
func_9492 = relay.Function([], output)
mod['func_9492'] = func_9492
mod = relay.transform.InferType()(mod)
mutated_mod['func_9492'] = func_9492
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9492_call = mutated_mod.get_global_var('func_9492')
call_9493 = func_9492_call()
output = call_9493
func_9494 = relay.Function([], output)
mutated_mod['func_9494'] = func_9494
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9141_call = mod.get_global_var('func_9141')
func_9143_call = mutated_mod.get_global_var('func_9143')
call_9512 = relay.TupleGetItem(func_9141_call(), 1)
call_9513 = relay.TupleGetItem(func_9143_call(), 1)
func_8407_call = mod.get_global_var('func_8407')
func_8408_call = mutated_mod.get_global_var('func_8408')
call_9518 = func_8407_call()
call_9519 = func_8407_call()
output = relay.Tuple([call_9512,call_9518,])
output2 = relay.Tuple([call_9513,call_9519,])
func_9526 = relay.Function([], output)
mod['func_9526'] = func_9526
mod = relay.transform.InferType()(mod)
mutated_mod['func_9526'] = func_9526
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9526_call = mutated_mod.get_global_var('func_9526')
call_9527 = func_9526_call()
output = call_9527
func_9528 = relay.Function([], output)
mutated_mod['func_9528'] = func_9528
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9593 = relay.const([[[9,2,10,-2],[10,-8,10,2],[-4,-5,10,-5],[1,-10,4,-10]],[[4,2,-6,6],[6,3,-9,-3],[-1,8,-10,-8],[8,9,4,6]],[[9,-1,-2,9],[2,-5,-8,5],[-7,-5,-7,-5],[-1,-4,2,-2]],[[-8,6,-1,-10],[-10,5,3,1],[3,6,9,3],[-6,4,9,-10]],[[10,-6,4,3],[3,4,-7,6],[9,2,-3,-9],[-3,6,-10,8]],[[-2,-10,-2,-2],[10,-1,-9,1],[-8,7,7,10],[-8,4,1,-7]],[[-10,-3,9,-9],[9,9,8,-7],[10,-8,1,-9],[-4,-6,-8,-2]]], dtype = "int8")#candidate|9593|(7, 4, 4)|const|int8
const_9594 = relay.const([[[4,-9,-1,-9],[9,9,-6,-7],[-5,-3,-4,9],[8,9,-6,2]],[[-2,-1,2,-5],[-5,-6,-3,-2],[-8,3,5,-4],[-7,-7,-3,-5]],[[1,-5,-3,3],[7,1,-4,8],[-7,8,3,7],[6,-3,4,-1]],[[3,10,-8,-7],[2,-5,-2,-10],[4,-3,9,-6],[-3,-1,8,-3]],[[-10,10,6,3],[5,6,-10,6],[-4,8,-8,-6],[5,9,-1,-4]],[[-5,-9,2,-1],[-1,-6,-3,3],[-1,1,-7,-2],[6,6,4,-10]],[[-6,2,-2,-7],[-9,-4,-7,-10],[-1,-8,7,1],[-3,-5,-8,-8]]], dtype = "int8")#candidate|9594|(7, 4, 4)|const|int8
bop_9595 = relay.subtract(const_9593.astype('int8'), relay.reshape(const_9594.astype('int8'), relay.shape_of(const_9593))) # shape=(7, 4, 4)
output = bop_9595
output2 = bop_9595
func_9600 = relay.Function([], output)
mod['func_9600'] = func_9600
mod = relay.transform.InferType()(mod)
output = func_9600()
func_9601 = relay.Function([], output)
mutated_mod['func_9601'] = func_9601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8407_call = mod.get_global_var('func_8407')
func_8408_call = mutated_mod.get_global_var('func_8408')
call_9682 = func_8407_call()
call_9683 = func_8407_call()
output = call_9682
output2 = call_9683
func_9692 = relay.Function([], output)
mod['func_9692'] = func_9692
mod = relay.transform.InferType()(mod)
mutated_mod['func_9692'] = func_9692
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9692_call = mutated_mod.get_global_var('func_9692')
call_9693 = func_9692_call()
output = call_9693
func_9694 = relay.Function([], output)
mutated_mod['func_9694'] = func_9694
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9141_call = mod.get_global_var('func_9141')
func_9143_call = mutated_mod.get_global_var('func_9143')
call_9699 = relay.TupleGetItem(func_9141_call(), 0)
call_9700 = relay.TupleGetItem(func_9143_call(), 0)
func_9337_call = mod.get_global_var('func_9337')
func_9340_call = mutated_mod.get_global_var('func_9340')
var_9712 = relay.var("var_9712", dtype = "uint8", shape = ())#candidate|9712|()|var|uint8
call_9711 = relay.TupleGetItem(func_9337_call(relay.reshape(var_9712.astype('uint8'), [])), 1)
call_9713 = relay.TupleGetItem(func_9340_call(relay.reshape(var_9712.astype('uint8'), [])), 1)
uop_9714 = relay.sqrt(call_9711.astype('float32')) # shape=(2, 14, 2)
uop_9716 = relay.sqrt(call_9713.astype('float32')) # shape=(2, 14, 2)
func_6315_call = mod.get_global_var('func_6315')
func_6320_call = mutated_mod.get_global_var('func_6320')
const_9724 = relay.const([3.821017,-2.336711,9.447180,6.452894,6.771701,-4.858955,6.003719,1.806024,-9.315297,-3.384401,0.453616,5.345987,-1.792394,-8.051119,3.147126,5.854723,1.971065,6.812141,6.215680,-7.048079,8.828624,-2.268118,4.285755,-2.109363,0.471019,-3.092599,-4.458544,-2.172776,7.024397,-5.654584,2.909093,-5.372252,0.977576,-9.040107,-4.634845,4.218811,0.527881,-3.416719,9.292456,-6.810947,5.801447,1.471321,-3.792928,-1.268568,2.586944,3.734938,-8.796150,0.465564,6.979100,-7.539432,-5.443964,3.901244,-8.265009,-2.595007,-0.001070,-5.560778,-5.868910,8.941654,9.234020,-5.076481,-0.891030,6.567041,3.425910,-4.626789,-1.851567,-1.149305,-3.490315,6.307752,2.856097,-8.853113,-1.919986,-8.960125,9.116949,-1.256972,1.983293,4.696313,-3.170437,8.179455,0.410023,-1.492121,-1.495006,-1.821556,-5.772129,5.704636,-3.708219,0.175916,-4.930320,3.175636,-7.943806,-9.836942,-9.947289,0.215103,1.978934,9.191055,2.151845,-6.355553,-6.654626,-7.407401,-0.332273,6.020313,-5.525315,-2.636931,-9.457408,-0.916858,5.113703,-7.911891,-0.541972,-0.151193,-5.046695,-3.927782,1.804481,-2.742892,2.939471,-8.994853,-7.251745,-3.009572,-9.914367,-7.021956,-1.348752,5.648970,5.708181,-6.538821,-5.685838,9.337991,-1.673858,-1.536683,8.801055,5.939942,6.698026,-2.859889,7.348733,-2.849253,9.990168,-5.805399,5.996765,4.152976,-5.644847,-8.676617,-7.253450,3.180453,0.494840,-8.620638,-7.506860,-2.072469,8.019560,-6.277543,1.255517,4.034712,0.935466,1.567930,9.513756,7.587025,-8.463071,-9.639893,-7.335568,6.810517,8.436667,-9.776645,6.659786,-5.490158,1.630794,-1.550469,5.584457,-8.266329,0.654507,-0.942681,-9.867167,-1.673138,3.067680,-3.902011,3.678883,-7.388874,5.379205,-0.071212,0.323616,-5.316684,1.198672,3.204682,-6.226424,7.075044,9.921437,-7.614494,-4.406137,-7.874717,-0.666030,3.673626,-4.239493,-6.284758,-2.513465,5.464565,1.165352,-6.650184,-1.509353,-0.515682,0.285020,-1.987858,2.338999,0.628336,-8.283737,2.406273,-3.599399,-0.454371,-9.218159,-0.920372,0.419984,-9.427477,3.115596,-8.153871,7.644649,-8.314182,-2.092817,4.770232,-8.425515,5.350733,4.576039,3.803656,3.699710,-2.967281,-1.806028,-3.336961,-2.886205,8.117680,-0.629726,2.428632,-8.377923,-3.722506,9.010384,-7.663706,-3.779212,-0.738394,-6.177832,5.960645,6.378384,-1.794737,3.763320,1.170692,3.467695,5.771747,-7.876454,8.941868,1.128611,-9.398437,-0.600857,-3.135057,-2.921144,-8.491739,-2.415695,5.531116,2.945756,2.076087,-7.224554,3.722638,7.603729,6.371847,5.521887,-7.042885,5.409687,8.098113,2.786673,-5.000168,-1.566772,2.873937,9.698781,-3.395955,-4.727064,3.235722,7.906182,-7.527508,2.317793,-0.632571,4.758634,9.582670,8.329075,-5.236491,-5.559487,0.438580,9.697530,5.247240,3.311640,8.477349,-2.683653,-6.287089,5.697560,-2.159858,3.628569,-4.210044,-6.360135,8.223042,-0.900382,-3.776250,-6.871684,-1.276140,-0.990517,-9.822384,5.153544,8.217915,-7.353694,0.957152,4.952690,5.460117,4.054101,3.145438,6.717489,5.515279,-9.780019,8.457784,7.041667,-2.248812,7.765665,0.283565,-8.522213,-2.676127,1.270245,2.651032,-4.232801,2.604991,-8.145968,4.649559,0.932644,1.611191,-8.588625,-2.417341,-2.790828,-4.476721,-3.644353,5.988389,-6.167731,0.849612,7.662709,-8.553311,2.871389,7.414471,-8.902224,-5.324402,-9.023950,3.778709,-9.016566,-3.714883,-9.461822,-6.289633,0.913574,-7.623453,-1.648211,6.081503,-9.674522,6.203376,2.682144,5.861188,9.316503,6.314970,6.458325,-1.542386,-2.686025,0.751379,0.057277,5.360646,8.197581,8.039955,-2.784189,0.021868,-8.721592,-7.239179,-6.062513,-2.615603,8.316177,9.628981,-6.118358,-7.248920,-5.441013,-9.679718,-5.897567,-3.284151,2.108107,5.744734,-4.733481,-0.335426,7.890754,-0.490558,-9.092169,7.700462,-3.293524,-0.396686,-1.462924,-0.416074,-4.940364,9.430381,-3.637498,-6.465267,1.897957,1.436967,6.941376,-1.763056,0.687290,-4.568244,2.703668,3.888390,-2.132944,0.468595,1.028425,1.312777,-6.114220,-6.506717,9.406768,-7.181616,-8.854627,-7.800742,0.120468,-4.054537,-1.689357,-7.894636,-3.692666,6.612552,5.147672,8.362279,-8.095879,4.764486,8.431758,-6.260675,-3.278005,0.613025,-5.081357,-4.141958,4.667242,-2.640584,9.943207,4.205922,4.946382,-3.714119,3.728260,8.575541,7.602851,-1.829498,-5.958743,2.648715,5.518862,4.575383,-3.285336,0.523459,-7.584433,7.076701,-7.752209,4.220673,-3.703811,9.493780,7.544476,3.479521,2.876766,-1.930333,-3.936479,-3.259381,-5.578799,-8.692417,-6.748027,-5.521888,5.688116,-0.421404,5.632210,6.039275,-4.475683,9.573908,6.575839,-5.768745,2.488588,-8.307404,-3.573691,9.927701,-4.717264,5.648418,-9.857044,0.446002,-5.336451,3.666933,4.003474,5.606278,8.824729,-4.744876,5.537301,2.394202,8.142337,1.341203,1.025540,-9.660401,-2.366410,-2.732980,-9.192989,-6.176984,2.831650,-8.455525,6.689626,-1.401482,-1.482482,1.601223,8.994377,-6.237482,0.417746,-3.891074,3.686217,-8.224175,1.981021,-7.689821,4.495744,-2.953163,-4.217529,8.240614,-2.363821,4.126125,-2.291317,-1.147921,5.827416,-5.187064,-7.393967,8.503260,-6.706068,2.263834,-4.995651,9.649540,5.409358,4.642893,-2.010041,4.624912,-5.109661,2.664823,9.193221,1.165341,7.536743,0.859552,-9.733232,9.334004,5.459518,-9.409582,-2.686243,8.490547,2.858456,3.716297,7.183234,-3.527915,0.224241,0.814329,-4.773374,-4.443295,-4.161494,3.949973,-8.413271,5.348180,-5.103076,-4.946932,6.902775,-6.041414,-9.282389,-3.040229,-7.433209,1.250360,2.809022,-1.084581,9.853530,7.380488,9.885893,4.690205,0.830770,2.751860,-9.546305,-4.851670,1.998093,2.624964,-4.603809,9.126319,-6.384938,0.961302,3.904471,2.206670,-1.285318,5.100548,-1.283002,1.058872,3.548922,7.664815,-5.981328,-6.362040,-8.188019,7.774828,7.855747,5.152885,-9.353278,7.863819,-7.313462,-5.706258,0.097736,-7.475486,-9.771263,9.529814,-6.446866,-4.017012,-5.841612,-0.234279,-1.738453,-6.873870,3.548607,4.281911,-9.301401,3.509112,-8.783444,3.233915,7.030155,8.393985,9.363808,-2.080817,1.672401,4.630292,2.375342,-1.044026,6.974602,6.607370,-5.596015,-3.619548,-8.188830,0.544096,-0.679723,-6.969494,3.940443,8.395582,3.219633,-5.235547,-7.441905,-7.052708,-6.348819,2.605447,8.407173,-8.786104,-7.611130,-3.131860,-1.657878,2.496001,-6.074314,2.519891,2.673923,9.027115,-2.443044,5.516563,4.169001,-4.683589,-7.410597,1.895379,-4.977006,3.022105,2.058578,8.811683,1.262973,-3.043237,2.619050,0.652466,-0.752032,7.284375,7.793533,-7.366219,-4.501307,-0.747834,-1.762683,1.167400,7.843829,0.915264,-0.065988,-8.251122,7.483994,-7.593088,-9.265241,8.538393,-2.420896,7.512772,3.109113,-0.848036,-1.164266,-2.344451,-7.548888,-1.367500,-0.373439,-2.148041,-8.033532,6.452989,0.352871,-6.931734,7.777858,6.085217,-1.171337,1.478978,-0.581428,-0.167399,-8.319491,6.458164,-8.948915,-1.506227,-7.644097,9.815555,-4.406922,-8.085100,-1.091619,2.783407,0.728481,0.917641,-7.427981,3.885877,-2.087932,5.562920,7.442927,-9.843452,-7.293769,-1.066303,2.199585,-3.604969,-0.244547,-1.300392,0.035427,4.559873,-2.349770,6.889560,0.935109,6.687869,-2.182581,2.266490,0.330211,1.680313,-1.701094,-9.337224,1.736377,0.485389,-8.880044,5.484038,-9.630805,-4.428487,7.732785,3.478589,-0.612769,9.842458,9.059684,-4.975758,-1.042734,4.129191,-4.218389,-3.079485,-2.387010,5.607522,6.211014,-8.221619,2.078373,-0.993498,-0.377669,-4.036542,-1.335563,7.727213,-4.824772,2.731150,4.587203,4.081411,-3.733092,-0.049179,-3.329892,8.547185,-2.514386,6.770870,-8.607672,-8.323293,8.058108,-8.263904,-3.622234,2.395139,1.081824,1.681718,0.907169,-3.649328,3.971108,-7.725471,5.269923,4.111960,-0.664136,0.245812,2.626728,4.372333,-3.583255,-8.121518,-7.506353,5.043096,-7.645236,-8.031453,-6.693564,-1.399813,3.755541,0.589577,-2.267875,-1.799413,2.660945,-1.859560,-8.820077,8.652713,9.513392,2.181506,9.278378,1.444046,-1.526381,-8.392360,3.345620,-5.731720,0.465887,2.588019,-4.483062,-9.883342,1.377517,-0.089024,6.872134,9.843992,-9.556420,-5.794440,6.266941,3.222218,8.275192,-5.999209,-2.575897,-8.889299,-0.609572,-3.881834,0.496033,-6.136982,7.805994,-7.637078,-0.996095,8.850400,5.930146,4.181052,3.003210,-7.945125,-8.884878,4.919504,5.500487,-8.107259,0.966505,-7.134821,-3.436885,-0.517366,-7.566498,-1.740175,-5.027375,4.737121,5.904799,-8.641860,2.722946,8.147899,-2.631668,9.818823,-2.033394,1.112320,-9.470601,4.670216,8.670391,-0.005447,-2.817567,-8.652217,-1.444477,-5.669086,-6.831669,-2.663682], dtype = "float32")#candidate|9724|(858,)|const|float32
const_9725 = relay.const([7,3,-1,-2,5,10,-9,-9,2,4,-9,-8,6,10,-3,4,-7,1,5,10,1,7,6,-6,-1,10,-3,-1,-10,-5,-7,6,5,5,-9,3,2,-10,5,-9,-8,8,-7,4,-9,-2,-7,4,6,-3,2,-6,5,-5,2,7,-4,5,6,-1,-8,3,1,-9,-7,-1,2,7,3,-10,-7,9,3,-3,3,6,-4,9,8,-2,4,-6,-3,4,7,1,2,-3,3,-6,9,10,-10,-1,-8,-3,-8,-1,-4,-7,10,2,7,6,3,-8,1,8,-8,-10,-5,1,4,4,-6,6,10,-7,-5,-9,-5,3,-7,-7,-3,1,2,1,1,-1,-8,-4,-6,7,4,-10,-5,4,5,6,10,5,-7,-7,4,7,6,-2,2,4,7,2,-6,-3,8,10,-5,2,-1,-2,9,-1,-3,-7,-4,1,-4,3,-1,-2,4,-9,-5,2,-1,3,6,-3,8,-5,1,-4,-3,5,-1,-3,7,5,4,-9,2,3,7,8,-9,8,1,5,8,7,4,-6,3,-2,9,-4,-5,-8,6,-6,10,-3,5,-4,5,-4,-3,-2,2,-5,-7,-1,-5,-3,-6,4,-2,-7,-4,-9,4,9,-4,4,-7,8,-6,-4,-9,-2,3,-10,-4,3,-10,8,-8,1,-10,-7,-4,8,-3,2,7,-6,1,-9,-5,-4,5,-2,1,-4,-8,7,-7,3,7,-1,-1,-7,6,-9,8,-7,3,7,-3,-4,-3,7,6,-9,5,-9,10,-1,2,7,-1,-5,6,-8,-3,1,3,-8,-8,-2,-9,-1,7,-5,-2,-2,-9,-7,9,5,2,-9,-4,6,6,-6,8,-5,-1,-7,5,6,-6,-10,-2,8,10,9,-6,7,2,6,1,7,4,-5,-3,2,5,6,-6,1,4,2,-2,2,10,-6,-9,-5,6,1,-2,-1,-6,6,1,-10,7,5,-8,-5,-4,1,3,8,7,-3,4,-10,10,4,3,-6,-5,2,-9,4,-10,-1,-5,6,-10,-3,-2,-7,-8,6,7,4,7,7,-6,9,8,-3,-1,-6,-8,5,1,6,7,3,-6,-7,-6,8,7,-10,-7,9,9,-9,4,1,-10,-9,9,-10,-10,7,-5,-7,-2,9,-7,-7,6,7,4,7,3,10,7,-6,-8,4,5,6,-6,7,5,-2,-4,3,7,9,-6,-3,-10,4,1,1,-7,3,4,-1,-8,10,-3,7,2,9,6,5,-10,-3,-4,7,3,-7,2,8,10,-1,10,3,7,-2,-4,10,-3,-5,9,-10,-1,-1,-4,4,-6,9,4,-10,5,-3,-10,-5,6,-1,1,9,-8,-7,-9,10,-6,3,-10,1,4,4,-7,-6,8,-9,-9,-1,1,3,8,7,-2,-4,-3,8,8,-3,1,-7,-9,8,-9,8,6,1,-3,-8,9,7,-6,1,-9,9,4,-8,6,-2,6,4,1,8,4,-1,9,-6,5,8,-10,3,-5,-8,9,-4,1,-9,-3,-6,-2,-9,7,5,-3,-5,10,-8,10,-5,-9,6,-7,2,-9,-7,7,1,3,7,6,8,1,2,3,2,4,-4,10,-3,4,9,5,-7,-5,2,-6,9,8,9,-9,-5,-7,-6,-5,-8,-8,-2,9,1,2,7,-6,5,10,-7,-5,3,-1,10,7,-7,-7,8,-6,9,-2,10,-7,-2,-9,5,1,-9,-9,10,-7,1,-6,9,5,4,6,-5,-6,-9,6,-2,-6,-3,10,-8,-10,10,-5,-10,8,-8,-5,-7,-10,10,4,2,3,-2,-9,-9,-9,-9,-7,-7,-2,-9,-7,-1,-7,-2,-3,1,-2,-6,-5,-3,3,1,10,4,2,-10,2,-6,10,-9,2,8,3,4,10,-2,-9,2,-2,1,2,3,-3,-2,-6,-8,1,2,-2,3,6,-5,-10,-4,5,-6,-9,10,7,6,3,2,10,9,4,5,9,7,-9,2,10,-3,-7,10,-5,9,-10,3,7,-3,-5,-5,10,-6,4,-5,7,3,2,-10,-2,6,-10,-4,-2,9,9,4,7,10,-7,6,-4,-10,6,1,6,10,8,-4,4,8,9,-3,-1,8,6,3,-6,-6,2,-8,7,-4,-5,3,-2,-1,4,-7,-4,4,10,-2,2,-7,-5,3,-5,5,5,-9,1,-10,-3,2,2,1,-5,6,-3,10,-10,-10,-1,-4,4,-5,-3,-2,2,6,-1,-5,2,-2,6,2,6,-10,-8,-5,-6,-9,-7,-5,-8,2,2,4,1,-8,9,-3,-2,1,-7,-4,9,2,-8,-5,-2,4,6,-5,-3,6,-4,8,-3,-8,7,1,-7,2,-2,4,3,5,5,8,6,1,-4,6,7,-6,-7,-10,2,2,6,9,3,1,-7,-9,5,-10,8,-6,1,-1,3,-3,-3,10,-2,-1,4,-4,-4,-1,-4,10,9,8,10,-8,-1,9,-9,-3,9,-7,-9,3,5,-2,6,-10,-10,7,-8,-4,-10,-2,1,2,-1,-2,-10,-4,8,4,8,1,2,9,-4,8,-3,5,-8,-3,-3,-1,-9,-2,1,-2,-1,8,-2,-3,7,2,-2,5,1,-8,2,-1,-4,-7,-8,5,-2,3,9,10,-7,-7,9,-8,-7,-9,6,9,1,-7,3,-8,-5,6,-7,2,-1,5,-9,4,-1,-7,1,9,2,-2,-7,9,-1,8,5,4,-6,-10,1,-3,5,9,7,-9,-5,-5,1,-4,3,2,1,6,4,2,-9,10,-8,1,9,6,3,6,-7,8,-4,10,8,-3,-1,10,2,4,-10,-7,7,3,-5,3,3,6,2,3,1,2,2,1,-3,6,-2,-2,-4,-6,-8,-5,-10,8,-6,-2,8,-8,-8,-6,4,6,-3,-2,5,-8,-8,-6,5,-8,7,-7,-6,7,1,-6,-5,10,1,7,-1,1,-9,6,10,-4,-6,6,-3,7,-8,1,-7,1,3,6,-4,-3,-5,-8,5,-4,2,-6,-2,-3,7,-4,-4,-2,5,-3,8,-4,5,10,6,2,5,-7,10,-7,-3,-1,8,-6,-5,3,-4,-6,1,-10,9,8,-1,-1,6,-8,-1,-8,4,1,4,3,-3,9,-5,2,1,8,-5,-3,-8,-10,3,7,3,-9,2,-4,-10,-8,2,-9,-9,6,-7,-7,-1,-4,-8,-4,-9,-5,-2,7,-2,9,4,-8,6,-1,3,9,-8,10,6,-4,-4,7,9,-10,-8,6,6,8,-8,-8,-6,6,-2,9,-10,-4,-3,-2,6,5,2,7,-7,-3,-4,5,8,6,-8,7,-8,-2,-3,-3,-10,-2,-2,-2,3,-6,-6,9,-2,1,1,-8,10,-8,-6,-9,-1,-1,-9,-4,10,-3,2,-8,8,4,1,8,4,4,9,8,-4,7,-4,10,-2,10,-7,-8,-10,-6,-6,4,-2,-2,2,3,1,-3,-10,8,-8,-5,7,-1,6,9,10,2,2,5,3,1,-7,-10,-7,-10,-7,9,-8,4,-6,6,8,1,9,3,-1,8,7,4,8,-1,9,-2,10,3,-9,-5,-4,-7,10,8,4,-1,6,9,9,1,-9,9,9,7,-8,6,-9,-6,5,-2,10,2,-9,1,10,-10,-5,8,8,3,-10,-7,-6,-9,8,9,-5,5,-1,-3,-10,-10,9,-10,-5,-2,-6,5,-3,2,-6,-1,-2,-4,-5,-8,10,-2,7,-6,9,-7,-9,6,7,-5,-8,3,-3,5,-3,-4,10,-2,8,-9,-7,1,-9,10,-4,8,-9,2,-9,1,1,-5,-1,-7,-8,-7,5,1,-4,1,-5,-10,1,8,8,-1,7,1,4,1,6,-7,6,6,-10,-2,7,9,1,-7,-9,9,6,-7,7,4,-6,6,-10,5,-9,-3,6,-4,9,9,10,7,-9,-6,-4,2,1,3,-10,9,5,6,4,-2,1,-5,9,-7,-8,-7,-3,-4,6,-4,-8,-6,5,-6,-1,-1,8,-3,10,9,3,2,-4,-8,4,7,-3,4,-2,-6,-9,-3,-5,-5,-6,-4,-10,-5,-3,-5,5,10,2,7,-4,-6,1,9,-8,10,-1,-5,1,7,2,-2,3,-6,-5,8,-5,-2,6,2,-10,-9,7,3,-5,3,-4,6,-6,-2,-7,-10,-7,-9,-8,6,-3,8,-1,9,5,5,6,5], dtype = "uint32")#candidate|9725|(1568,)|const|uint32
var_9726 = relay.var("var_9726", dtype = "float64", shape = (1404,))#candidate|9726|(1404,)|var|float64
call_9723 = relay.TupleGetItem(func_6315_call(relay.reshape(const_9724.astype('float32'), [6, 11, 13]), relay.reshape(const_9725.astype('uint32'), [56, 28]), relay.reshape(var_9726.astype('float64'), [1404,]), ), 3)
call_9727 = relay.TupleGetItem(func_6320_call(relay.reshape(const_9724.astype('float32'), [6, 11, 13]), relay.reshape(const_9725.astype('uint32'), [56, 28]), relay.reshape(var_9726.astype('float64'), [1404,]), ), 3)
func_9492_call = mod.get_global_var('func_9492')
func_9494_call = mutated_mod.get_global_var('func_9494')
call_9740 = func_9492_call()
call_9741 = func_9492_call()
output = relay.Tuple([call_9699,var_9712,uop_9714,call_9723,const_9724,const_9725,var_9726,call_9740,])
output2 = relay.Tuple([call_9700,var_9712,uop_9716,call_9727,const_9724,const_9725,var_9726,call_9741,])
func_9758 = relay.Function([var_9712,var_9726,], output)
mod['func_9758'] = func_9758
mod = relay.transform.InferType()(mod)
var_9759 = relay.var("var_9759", dtype = "uint8", shape = ())#candidate|9759|()|var|uint8
var_9760 = relay.var("var_9760", dtype = "float64", shape = (1404,))#candidate|9760|(1404,)|var|float64
output = func_9758(var_9759,var_9760,)
func_9761 = relay.Function([var_9759,var_9760,], output)
mutated_mod['func_9761'] = func_9761
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9439_call = mod.get_global_var('func_9439')
func_9440_call = mutated_mod.get_global_var('func_9440')
call_9769 = relay.TupleGetItem(func_9439_call(), 0)
call_9770 = relay.TupleGetItem(func_9440_call(), 0)
output = relay.Tuple([call_9769,])
output2 = relay.Tuple([call_9770,])
func_9779 = relay.Function([], output)
mod['func_9779'] = func_9779
mod = relay.transform.InferType()(mod)
mutated_mod['func_9779'] = func_9779
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9779_call = mutated_mod.get_global_var('func_9779')
call_9780 = func_9779_call()
output = call_9780
func_9781 = relay.Function([], output)
mutated_mod['func_9781'] = func_9781
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8297_call = mod.get_global_var('func_8297')
func_8299_call = mutated_mod.get_global_var('func_8299')
call_9840 = func_8297_call()
call_9841 = func_8297_call()
output = relay.Tuple([call_9840,])
output2 = relay.Tuple([call_9841,])
func_9863 = relay.Function([], output)
mod['func_9863'] = func_9863
mod = relay.transform.InferType()(mod)
mutated_mod['func_9863'] = func_9863
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9863_call = mutated_mod.get_global_var('func_9863')
call_9864 = func_9863_call()
output = call_9864
func_9865 = relay.Function([], output)
mutated_mod['func_9865'] = func_9865
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9881 = relay.var("var_9881", dtype = "float64", shape = (9, 13, 3))#candidate|9881|(9, 13, 3)|var|float64
uop_9882 = relay.cos(var_9881.astype('float64')) # shape=(9, 13, 3)
uop_9887 = relay.asinh(uop_9882.astype('float64')) # shape=(9, 13, 3)
output = relay.Tuple([uop_9887,])
output2 = relay.Tuple([uop_9887,])
func_9911 = relay.Function([var_9881,], output)
mod['func_9911'] = func_9911
mod = relay.transform.InferType()(mod)
mutated_mod['func_9911'] = func_9911
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9912 = relay.var("var_9912", dtype = "float64", shape = (9, 13, 3))#candidate|9912|(9, 13, 3)|var|float64
func_9911_call = mutated_mod.get_global_var('func_9911')
call_9913 = func_9911_call(var_9912)
output = call_9913
func_9914 = relay.Function([var_9912], output)
mutated_mod['func_9914'] = func_9914
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9927 = relay.var("var_9927", dtype = "bool", shape = (13, 5, 14))#candidate|9927|(13, 5, 14)|var|bool
var_9928 = relay.var("var_9928", dtype = "bool", shape = (13, 5, 14))#candidate|9928|(13, 5, 14)|var|bool
bop_9929 = relay.logical_or(var_9927.astype('bool'), relay.reshape(var_9928.astype('bool'), relay.shape_of(var_9927))) # shape=(13, 5, 14)
output = bop_9929
output2 = bop_9929
func_9935 = relay.Function([var_9927,var_9928,], output)
mod['func_9935'] = func_9935
mod = relay.transform.InferType()(mod)
mutated_mod['func_9935'] = func_9935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9935_call = mutated_mod.get_global_var('func_9935')
var_9937 = relay.var("var_9937", dtype = "bool", shape = (13, 5, 14))#candidate|9937|(13, 5, 14)|var|bool
var_9938 = relay.var("var_9938", dtype = "bool", shape = (13, 5, 14))#candidate|9938|(13, 5, 14)|var|bool
call_9936 = func_9935_call(var_9937,var_9938,)
output = call_9936
func_9939 = relay.Function([var_9937,var_9938,], output)
mutated_mod['func_9939'] = func_9939
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9366_call = mod.get_global_var('func_9366')
func_9368_call = mutated_mod.get_global_var('func_9368')
call_9952 = func_9366_call()
call_9953 = func_9366_call()
func_4219_call = mod.get_global_var('func_4219')
func_4222_call = mutated_mod.get_global_var('func_4222')
const_9955 = relay.const([-10,-9,-8,4,-9,8,-1,4,4,-9,10,-5,3,2,2,-3,4,7,-9,6,1,-6,2,-6,-5,-9,5,3,7,-7,-9,-3,-4,-5,-1,-1,-4,7,-6,-4,-10,-8,-8,-4,6,-6,-6,10,-9,-5,7,-3,2,6,-6,10,5,2,-9,-10,2,10,5,1,6,-6,-1,-1,-10,-4,-9,-4,-2,-8,7,-4,4,-8,-5,-4,-3,1,9,1,-10,8,9,4,10,-10,1,-5,-9,3,10,-2,-6,-10,-6,-4,8,-6,4,8,-3,9,4,9,7,-9,9,-9,-4,-10,10,9,-6,4,-6,-3,3,-4,-6,-2,7,9,3,-1,-6,9,4,3,4,9,-2,-10,-4,1,1,4,-7,4,-8,-8,5,-2,5,9,5,-1,10,-1,8,-6,-7,7,-3,1,7,8,7,10,-7,3,-9,-8,-8,7,1,6,-4,-10,-5,10,2,-3,8,-3,4,-9,-2,6,-6,-7,6,4,8,7,-9,-5,-5,-10,-2,9,2,-1,-5,-6,7,9,-9,-3,1,10,9,8,4,8,-2,-1,7,9,-10,4,-10,-1,7,4,8,-5,9,-10,3,8,8,-2,-5,6,7,3,2,4,9,-5,-4,-3,-6,-6,4,-6,7,-5,8,6,-1,3,-2,-3,9,-10,-10,5,-8,5,-9,4,1,-6,1,6,-2,7,10,-7,-8,1,1,-4,-9,3,-1,1,6,-5,-1,1,2,9,8,10,-4,3,-6,-6,-7,-2,6,2,-3,3,8,9,-3,-1,-4,-8,1,-6,8,4,3,-4,9,4,-3,-8,-10,2,-5,4,-5,10,4,4,9,9,-4,-2,-9,7,-3,4,3,-5,-8,-2,3,-10,7,1,2,10,3,10,-10,7,-1,-5,6,5,-2,8,8,-4,-1,-2,5,10,-6,3,7,-7,10,3,5,9,-4,3,-4,-8,2,-10,2,6,-10,3,-8,6,-4,3,8,5,8,5,-4,6,2,2,8,3,-6,7,-7,-3,3,-10,-9,-4,-4,-10,-1,2,-4,9,-2,-10,-9,4,2,-6,-5,-6,3,1,9,6,8,5,-2,-4,7,5,-2,1,-8,7,-5,-8,-2,-4,10,3,7,2,2,-8,-9,-4,-3,3,4,-3,-4,7,-9,1,10,9,-1,1,-6,-2,-1,4,-5,-3,10,8,-8,3,6,9,5,-7,1,-10,4,-2,2,9,4,6,10,9,9,-7,6,-2,6,-7,-7,3,-1,-8,-10,8,-9,-9,10,-8,2,5,1,-8,9,5,-4,-9,1,8,6,-7,-2,-5,8,1,-9,7,6,-9,1,-2,2,10,9,-7,5,2,-4,-10,-2,-10,7,-5,3,7,9,10,1,7,9,-6,9,2,7,-4,10,2,-3,2,2,-3,9,2,-5,-1,-2,9,-7,5,-2,2,4,1,2,5,-3,3,-2,-3,4,1,10,-5,2,8,-8,-10,-6,-2,-6,-2,-7,-2,-2,8,-6,-9,-1,-1,6,-9,-2,1,-1,6,-3,-6,-3,-1,-3,10,8,-4,-8,3,6,2,-2,6,5,-1,-2,1,5,-2,-1,-6,4,9,8,-7,6,2,10,1,2,6,-9,1,8,-2,6,7,1,1,8,4,7,1,-6,5,-6,-3,-9,-9,-8,6,-9,1,1,-9,-1,-4,-1,-6,-9,6,-3,8,-5,-8,8,-6,-7,8,10,6,10,-10,4,7,-8,-9,-6,-2,6,6,2,-2,1,-6,7,6,1,-8,1,-10,-10,9,-8,9,-1,-9,-8,-1,-2,4,8,-7,-6,-3,10,-8,-4,6,-10,-7,9,3,10,-8,2,2,-10,10,-1,4,8,-2,1,-4,1,9,9,7,7,-2,7,-10,10,-4,-4,-4,10,-7,-4,-9,2,6,1,3,-9,8,6,3,-9,10,-5,8,-2,8,5,2,-7,-3,2,-8,-8,6,-4,1,-6,-7,-7,8,-9,7,6,-3,6,1,9,-8,6,2,-3,-3,8,-1,4,-6,8,7,3,-6,6,-8,9,-6,9,4,3,-2,7,7,7,-4,-7,10,3,-10,7,7,-3,2,-1,6,6,-4,-5,4,-4,-8,1,10,6,-4,7,1,-2,-4,9,-6,7,-8,1,-4,-10,8,10,5,8,-9,1,-7,-2,4,8,-6,2,-9,6,9,-6,9,-5,-2,-6,-9,2,7,-4,5,3,-1,5,-9,3,-9,5,5,-4,6,-1,-4,1,-6,4,-1,3,3,1,-1,10,-3,7,8,8,-1,8,-1,9,-8,-1,4,-10,-1,9,-5,-1,-7,-10,-2,-6,9,-2,-5,-10,-6,1,-4,-6,-1,-7,7,7,-8,6,7,-5,-8,-7,-10,7,7,-7,-10,-5,10,-9,2,1,-5,2,-1,-6,-5,-3,1,10,-9,-8,10,9,-7,-8,-4,-9,-8,-1,-9,7,4,-7,-9,3,-4,6,-6,7,-3,4,-6,8,-3,10,-10,6,-8,-8,-9,-6,2,8,-6,3,2,9,-10,9,-8,7,-9,-1,-3,-3,-10,7,10,1,-10,7,2,9,1,-5,-8,-8,-5,-3,7,-1,8,8,5,6,-4,7,-7,7,-6,-8,5,3,-4,-8,-4,-8,9,2,5,-9,-9,6,5,-5,-4,-5,-10,8,-5,-4,7,3,8,-10,-3,4,7,9,1,-3,10,5,6,-1,2,-4,-7,-5,-2,8,3,-7,-1,-2,-2,-1,-3,-10,2,2,9,2,-10,-9,-1,-8,-8,-5,-1,3,-2,-6,1,-3,-9,8,8,-4,-7,3,-9,-2,-5,-9,-2,10,7,6,-1,-2,4,10,1,10,-6,-6,1,-5,-3,-5,-5,8,10,-3,-4,5,6,-10,9,5,-1,10,10,-10,-10,-7,-9,-8,-2,-4,-5,-6,4,9,4,-9,-6,-10,-6,9,-7,-10,5,9,-8,-6,2,5,-6,9,10,-8,7,-3,10,9,-10,8,-7,-3,-8,10,-8,7,-9,5,-4,-6,-3,-6,-10,-4,3,6,-7,-7,-5,-6,-1,-9,9,2,1,8,6,8,-10,6,2,-5,8,-5,-8,8,-6,-2,2,-2,-1,-6,-4,-2,-7,-8,-8,-10,-5,-1,-8,2,7,10,-7,4,-3,-4,-7,9,-5,-4,10,-1,-1,-7,5,-4,5,-4,8,-2,-10,-6,-5,10,-4,2,10,-8,-8,-9,-4,5,-1,-6,9,-8,6,-8,10,10,-4,-5,-8,3,-8,10,9,5,-6,-7,-9,-8,10,6,5,4,-10,2,-4,5,1,-5,-3,-10,-9,8,3,-5,-1,3,-6,-3,-5,-6,2,-10,7,3,6,-10,10,5,5,6,-10,2,-5,-4,-2,9,2,-8,5,-10,7,-7,10,-2,-3,-1,-7,-3,-7,-3,9,-2,-1,9,-2,-10,3,-5,1,-9,6,-1,2,7,1,8,-2,-9,1,-1,-1,1,10,6,-5,-8,-5,-6,-3,4,-3,-1,3,7,2,-8,-1,-6,6,4,6,-6,3,6,7,7,4,-4,-2,2,1,8,8,-2,-5,-8,8,-2,6,-6,-7,2,5,-10,-6,-2,10,-8,-3,3,-9,-8,4,8,7,-2,9,8,9,10,10,-2,-9,9,3,9,-4,8,7,10,2,-8,6,-4,4,2,-5,4,-5,7,6,1,-4,-10,7,-5,-1,-1,-1,-4,10,-10,-10,-8,-1,4,-10,9,-4,-7,10,1,6,-10,10,5,2,2,2,-9,-6,2,8,1,2,-2,-9,4,8,4,10,5,-5,-5,10,1,7,-3,7,-6,2,-3,-4,10,-3,-7,4,-4,-10,7,3,5,1,4,1,-9,1,-6,9,6,-10,4,6,2,-6,-5,7,10,7,8,-5,1,-8,-2,2,-8,10,6,-7,3,9,4,-7,4,8,10,-8,1,9,-3,-1,3,1,9,-10,-5,10,5,-4,1,-2,7,-1,5,4,-3,9,8,7,-1,-2,8,-6,9,-3,-3,-1,-4,-1,-4,-9,1,3,9,9,-9,-6,4,1,1,-4,-8,7,9,2,-2,-10,-8,-2,-5,7,-3,2,-5,1,-8,2,-9,-9,-6,2,10,1,-5,5,4,-3,-2,-4,-7,-3,-9,-10,-4,7,-9,-6,-10,-9,9,-4,-5,-2,1,6,-1,4,5,-8,-4,7], dtype = "uint32")#candidate|9955|(1568,)|const|uint32
const_9956 = relay.const([[1.898399,6.805293,-5.009922,-3.085844,2.438924,-0.579295,-9.565736,5.170515,-6.203573,3.425162,-6.409497,-5.266058,-8.444384,-3.063342,2.742629,-9.637303,-1.352612,-6.538650,-3.415764,2.668568,-2.961914,-3.477328,-8.622693,-7.801890,-7.999600,-9.010691,-5.903653,-8.772306,-0.685421,5.861157,1.522146,-9.378612,3.697725,2.096523,-8.758237,5.224833,-8.702062,5.636823,4.667963,-9.026074,9.239442,-1.612566,4.186300,-9.845596,-9.647953,7.378527,-3.492873,0.269212,-5.480737,2.882020,1.800308,6.390982,-9.982799,5.835181,-5.059443,1.542957,-7.075915,6.674389,-2.916222,8.099358,1.572604,7.283537,4.324303,3.603772,2.769345,-9.631268,-8.179153,-4.241307,-1.628047,-7.901915,3.544861,-2.983249,-6.737121,5.097507,-0.891713,2.633388,2.408456,7.573363,7.148538,-6.265105,0.927964,-5.598643,4.182777,-5.457184,-3.576798,-9.720600,9.838476,7.816273,7.226168,-4.703598,4.087301,5.314089,-8.961620,8.947157,-6.473502,-9.917888,-6.845506,3.808174,-6.090525,7.500318,-2.240457,-9.648728,0.042552,2.139816,0.435394,-2.581405,6.927336,7.531103,-6.048031,-8.446851,2.458534,-9.856117,1.755450,8.993549,3.331883,-2.833474,-5.463153,7.644881,-8.467203,-5.373948,6.001170,-5.407238,9.567970,-4.307349,1.099139,-1.700927,-5.514546,-9.189041,-1.977989,9.839284,7.555584,5.459399,-6.371647,2.676942,-9.355774,-3.634689,-8.700812,-0.837382,4.794273,2.765833,6.898230,2.520259,-2.743083,6.750843,8.120331,-8.797368,-5.480900,-0.328698,5.625946,4.869206,-2.144534,4.722578,9.433655,-4.094706,-5.709947,6.767534],[0.041789,0.024824,-8.697135,-1.951303,7.841971,-2.168552,-2.918785,9.229518,-0.732502,1.870539,-1.629862,7.607906,8.965993,-5.860776,8.701393,9.050450,-0.549289,-1.955039,-9.203318,-0.667030,-1.168814,4.474771,-7.264786,-5.478890,-0.080652,3.971494,-0.594200,-4.518947,-5.923629,9.777973,-6.391259,-5.237565,-1.225451,5.186344,0.087038,-8.457348,6.350929,-5.060208,-8.757814,-5.543937,2.263700,-5.675336,3.832766,1.693930,1.278889,6.270369,8.215571,5.283965,7.825705,-9.243042,-7.047315,-7.354587,7.087014,1.536771,8.658923,-4.019767,2.258531,-9.944346,7.344670,-6.641333,-3.908624,-0.016088,4.481688,4.297765,-8.248907,8.776791,5.243385,-2.294372,2.821984,-5.725298,-0.397098,4.112449,7.143206,-5.840563,3.963709,-6.652240,-2.847035,2.296292,-1.245557,-7.433107,9.898404,9.387851,2.167846,2.839336,-3.484942,5.484923,-5.848823,-9.662849,-7.992552,-4.989168,-7.905172,-4.375955,5.096569,-3.775718,-8.200449,-0.447229,7.347456,-0.896952,-3.061352,8.505188,-8.445572,5.123726,0.601185,-7.555644,-8.672360,5.744511,8.438910,7.986628,1.223842,-5.180152,5.210623,4.003312,8.206287,3.459038,7.646378,-8.090113,-6.011568,-1.121107,8.219235,6.549820,7.720559,-0.103400,-8.693728,6.404478,-2.973637,-5.053118,6.944046,-0.735451,0.011814,-3.703686,-9.509515,-4.804997,-9.230918,-9.461914,-5.837896,3.945644,-4.909604,-0.134943,9.693210,-4.260092,-7.707546,3.867287,7.348255,-6.408640,-4.007017,5.454920,0.728207,5.712975,3.129447,1.827563,9.727654,3.250543,0.500480,8.870650,-2.959208,-8.867152],[-5.561292,-2.833904,7.503172,-8.246338,9.106486,-2.102065,-7.101553,-5.294372,0.596889,1.171091,-8.377630,-1.058084,-5.808115,-1.924713,6.003090,3.425829,7.543862,5.520071,-7.518183,-7.012417,-7.453895,-1.874537,-9.872730,-7.156452,8.741201,-8.509843,-8.440774,6.602005,-5.082648,9.365419,-1.929089,5.921596,-6.041759,-3.727791,4.411031,-1.361374,9.956019,-0.394205,5.907105,8.137759,-1.769847,-0.820912,-0.112747,9.785803,-1.238597,-0.372183,-6.808749,-5.384342,1.087304,5.699028,5.490191,-3.628574,1.600757,-9.469059,9.043663,6.979575,5.351919,-0.659617,0.280731,4.589506,5.509323,-3.934499,7.594767,-1.656067,4.703880,8.434481,-2.085533,8.000231,-0.287251,-6.016293,4.825509,4.627228,-8.834854,-1.482287,-4.103923,4.961305,8.565728,4.940342,-3.487842,9.877308,2.607057,-0.340980,-7.015263,4.949258,2.140149,-2.990968,9.616803,4.014561,-9.259946,3.271526,4.793107,-1.099905,-4.014414,-9.108711,8.349863,-1.867450,-4.987724,-1.455910,-7.468652,-3.725365,-8.884140,-1.077432,-5.420388,3.822681,9.761146,3.169038,9.466437,-8.552613,5.149974,-2.110955,-2.799759,-4.427443,1.400454,-7.179564,-5.185264,9.508121,9.659913,2.672797,6.778991,-2.139347,2.994684,-5.604846,4.375558,0.335876,2.674462,-7.058579,-7.006314,-3.859727,9.635576,-1.744271,0.799972,-4.806816,3.444490,5.009784,-3.114615,-2.524993,6.291704,-7.093951,2.818525,-5.711870,8.422873,-2.759250,4.808444,5.897028,9.610582,-0.874615,9.418995,-5.995424,-9.676027,-3.628847,9.393689,7.443851,4.343468,-6.956157,3.583731,4.235821],[5.006932,-5.819351,-4.871615,8.361113,6.273395,1.194252,6.281079,-1.091806,2.877454,-2.836544,4.175478,2.978000,-4.039405,3.302150,-8.630773,-3.044753,-3.178514,-8.644596,0.852069,5.941097,-1.319935,0.283388,-2.773112,3.469119,-7.282836,-8.373005,3.514686,-8.589985,8.194573,4.591469,-0.130520,5.402128,9.220387,-9.140355,-0.491673,0.956969,-3.492268,-3.205346,-0.894754,-5.468450,5.782857,-8.985612,-1.845109,-7.107576,-9.810411,-4.870697,-0.986685,-8.759414,6.261593,-2.776454,-0.812446,-2.939445,-6.534373,6.556349,0.464102,-3.524656,-7.173397,8.341909,9.077848,3.498054,-9.520572,8.147680,4.340872,-6.473042,-6.330772,-7.260207,-5.651544,7.168888,7.859883,-5.253818,-6.787121,-8.460288,3.338961,1.943304,4.562155,5.987329,-1.854281,-8.977765,-8.318369,0.648941,9.284909,7.923358,-7.659016,9.835927,9.674048,-1.571872,-2.957278,-8.243452,4.017650,-6.201874,-2.182161,-3.122656,-5.322947,3.791096,1.158763,0.297341,-0.088168,-6.771121,4.044781,7.699936,7.597913,-1.928466,-3.050309,-1.162277,2.155356,-3.947247,-7.207656,-0.352749,-4.284253,7.796949,-7.135124,-0.041118,8.303339,-6.029635,-7.030688,4.672239,1.801639,4.302040,-9.914453,6.545011,9.304530,-4.047588,-4.232303,-4.873718,-4.899804,-0.814486,5.881395,0.632853,-4.513604,3.715952,7.268414,-5.537930,0.998853,-4.552870,2.071358,2.936357,-4.044183,-5.958644,-8.496696,4.121423,-4.902794,-0.582364,-0.812291,-1.207056,1.731423,-4.942903,-2.492566,5.740385,-8.606520,-1.599561,-8.562701,-0.039754,5.817113,4.901531,-3.729649,-4.571660],[8.009351,-4.669074,-5.513277,-6.631812,-9.312194,4.242316,1.951683,-3.877562,-0.653825,-7.681842,-7.806161,0.396622,3.687467,-1.915295,8.250432,5.658685,4.749032,6.634758,-1.066669,4.012380,-2.265125,-8.913274,5.582937,4.625498,9.298503,-6.321442,1.070330,6.576548,9.484432,-5.663698,-6.609602,4.148140,6.796855,3.986922,-5.453822,-3.917056,9.103961,-2.810154,-6.361902,7.497446,2.838982,6.516003,9.818760,-0.112434,-4.757068,-9.445149,-3.611551,-0.444532,-1.575592,8.452514,-9.021422,4.687627,-0.064592,8.126866,7.237269,-3.727987,-8.634948,9.101326,-6.059947,-6.019828,-8.738403,7.967194,-4.888903,-0.495679,-8.143759,8.007334,-8.109141,-7.557176,2.325670,7.169046,-0.638294,9.638012,5.344471,0.082895,-3.265002,7.949670,-5.200368,5.419410,-2.967008,5.130790,-0.948804,-6.352886,7.088119,0.175000,-1.411766,7.695104,2.380513,8.603095,-7.347792,-6.952556,1.516473,1.545010,5.942211,-6.748132,4.517394,-5.452548,1.462707,-2.168260,9.181404,0.715750,-3.376865,4.147859,7.099929,-6.048792,0.157105,1.980416,-7.140424,-8.820733,2.376414,-6.591073,-8.211749,-7.400368,8.426739,-9.556490,1.703507,-0.044865,-8.613577,6.226721,-3.830364,5.298949,-0.180802,-7.131948,-4.582742,-8.696670,-3.348818,-9.189483,6.125173,-6.657041,9.977878,-4.465019,-4.256129,-5.829946,-4.309371,-0.626033,5.632143,-7.558794,-5.018874,9.450026,9.421427,1.067425,-5.371157,-6.377058,-5.188251,-9.858418,6.079552,-0.132361,1.395299,-4.796093,-5.705825,-1.673180,0.986097,-8.213198,-4.583989,-7.946697,5.047107,3.821348],[0.861655,-9.451409,-2.425720,4.440051,6.926898,4.002589,-4.402525,-5.607471,-5.001697,-3.982157,7.622398,-6.431507,-9.332968,1.773947,-2.087585,2.391915,-2.511670,2.327584,-0.643927,-9.531356,0.849859,-5.488134,0.756939,-5.836174,-7.952894,5.300319,8.034890,3.805763,-9.497328,-9.306645,6.331738,-7.916736,6.439821,-1.627372,-6.855499,8.617764,-5.186017,6.724809,-3.506965,3.195716,7.953252,-5.901154,-4.066086,-6.412287,-8.851564,2.684280,4.108783,0.031204,-4.427430,-8.680285,-8.808661,-1.173867,-8.887145,-2.199925,6.201959,0.696090,8.344877,-8.918063,1.751409,-4.828360,6.415771,5.900788,-0.023206,1.212164,-4.317957,2.977442,8.775782,8.741195,-7.532212,-1.620248,5.957116,-3.852625,6.301322,7.291753,3.577322,-2.504566,5.414637,8.882734,-0.826078,-5.912596,7.762712,6.217119,6.552536,-6.751272,-2.339697,-2.320613,-7.840595,-3.166765,8.363707,-2.042748,-7.191510,0.439397,-8.515515,4.619053,1.539923,9.100184,0.408946,5.216180,0.431481,-0.128098,-7.760414,9.068133,7.693993,-9.774652,8.680050,-3.279111,6.617945,-7.385847,-6.444985,-6.745202,1.577227,-6.394797,-1.793337,-5.660070,0.952407,9.755150,2.278210,-2.372128,1.942101,5.525671,9.271499,-5.575202,1.494125,-1.621673,-7.546532,9.154526,-4.872307,-5.629931,5.114804,-2.589994,-8.865831,-9.188907,3.270231,-8.715410,3.859516,2.636736,9.954997,0.459409,-1.708088,0.977790,-0.433136,1.522400,-7.227779,0.988664,-8.462774,7.013944,0.128193,-1.008342,-1.468302,4.882849,-7.445512,3.506143,-5.609991,-9.585431,-8.590048,5.546878],[-0.707195,-6.484048,4.409110,-9.385354,9.997362,-9.067585,1.564424,9.768898,1.235221,7.536002,-7.594211,-0.413183,1.205378,7.624002,-9.153387,-5.718578,5.271961,4.791007,-0.186467,-2.352679,8.209390,-7.209431,4.391196,5.263802,5.639367,-0.766499,4.978348,-6.250448,5.820442,-8.837214,6.130352,-9.587330,5.370686,3.386155,1.799532,-2.586477,-3.021740,7.893406,-8.690282,-3.878405,0.380559,0.378843,4.548532,1.647535,-1.832108,-9.484527,-5.708599,-5.966223,7.205362,8.811719,-5.563923,0.464201,2.784710,-7.589975,7.564542,8.947216,-3.408778,6.817811,-2.774708,-7.968883,8.283985,-2.911313,-4.947022,1.323591,-0.424757,-4.204782,-9.636940,4.551593,9.195373,-7.708991,0.174180,5.061433,-2.488919,7.429433,-3.639083,1.327771,9.370740,0.400341,8.938787,8.639323,-9.116909,-1.612972,0.549909,-1.674128,3.608834,-9.100562,-1.482992,-6.367437,-1.980025,0.119216,-0.775876,-2.176679,2.032873,8.515943,0.781946,-0.527485,-8.382657,-0.904533,5.193752,-7.925160,1.924873,3.897053,5.753773,7.191004,6.132756,-9.213095,4.628733,5.440625,-3.571603,5.574597,4.438314,4.255879,-9.569825,-3.268362,-5.985932,1.012537,9.083371,1.093071,-4.403619,-7.501675,-4.987409,3.675363,-7.674927,-8.490827,9.959082,-3.973172,5.969580,5.629692,7.224661,1.370181,-3.863620,-7.923961,0.618855,-9.687614,-3.006378,-9.524435,2.276002,-8.627547,-2.067078,3.710704,9.537767,2.561801,9.367289,-6.270326,-2.124555,3.499589,-9.629079,-3.510335,0.519831,-5.804557,4.997177,-7.959127,-5.924119,-7.431679,4.521862,2.400874],[8.560687,-0.956983,0.685112,-4.397363,-2.674724,-1.277573,5.269907,1.398792,-6.752438,-1.188840,-4.814718,-9.560038,5.681860,6.850782,-5.863701,5.093692,0.734740,4.884661,4.854662,-0.033332,9.004084,-3.659145,0.854508,9.429126,1.681805,-2.216154,9.138184,5.844780,9.574010,9.761548,3.073139,-0.032954,-8.109771,1.380643,9.717437,-4.127335,-3.048248,2.577796,-9.006596,1.085172,-2.776629,1.508979,9.125789,-9.360065,2.349347,-7.417985,4.999309,-3.554379,-4.044276,9.648448,7.189605,-0.165726,-1.093583,-2.146911,6.464115,4.150270,4.140549,4.572803,7.513060,3.845853,6.671138,0.036763,-9.943210,4.273094,1.981226,-6.820627,-9.489827,-8.765959,-6.651890,9.255407,8.231888,9.490912,4.030884,3.794713,9.538103,4.271482,-8.581364,8.512797,-4.068549,-7.154043,1.527920,7.721203,9.845860,-6.972022,-8.399474,6.527523,-4.604228,-7.681957,1.585845,-3.222198,-6.503898,-3.150918,-6.555203,-1.526201,-1.821686,-8.258181,0.977267,2.311588,-3.033580,6.519152,1.390798,-9.861393,4.897612,2.172733,-6.689161,7.280915,1.043769,2.060784,5.661958,2.804112,-0.702961,1.448670,2.215125,9.410758,7.377060,-0.095674,2.593887,-0.845654,1.984710,-6.689364,-4.564306,-1.520040,6.592970,1.206560,3.118843,-5.797654,0.064700,-7.696453,-3.385927,-1.444148,-6.925312,-6.200114,6.533182,-8.339620,-6.576839,-7.157444,0.404680,-7.160797,-4.318139,7.306700,-4.847268,-1.915244,-5.836909,-5.582800,-3.495044,-1.042343,5.279612,-9.030882,8.646068,5.273986,6.641470,-0.321921,0.027491,7.279370,8.852565,2.717287],[-3.798190,2.453053,-3.674999,2.242170,-3.862249,9.010526,-2.644777,-8.698369,0.025603,5.570306,2.063919,5.932592,4.793148,-9.497032,5.494434,-5.270517,3.853717,-1.775260,-5.111321,-3.817140,5.077136,-3.606872,-2.180340,-4.341428,6.512739,-6.685335,0.685123,5.880675,7.900876,6.477936,1.001447,-1.510784,5.597865,0.173635,0.041672,-4.341225,5.955937,-0.122183,1.369327,5.461622,9.170763,2.242970,6.806051,4.570106,6.811789,-5.273097,-9.989905,2.824262,9.787279,0.537939,3.613694,-7.210745,9.724779,-5.259771,8.940201,1.442718,3.049373,6.536592,5.479185,5.144181,-4.597975,1.825594,9.247777,-4.196159,1.358129,3.133578,-1.281212,-1.732806,-0.467983,-4.842512,-7.777592,-4.327818,7.138094,7.540587,-7.784359,3.698945,-7.387052,-0.491949,8.295686,-6.788061,-2.190504,9.838044,7.663034,-1.361629,-2.410830,2.012578,-2.631357,3.424830,-8.009199,-6.909450,1.758224,1.576351,8.568655,5.042349,-1.471259,9.295600,1.422651,7.836263,-1.504544,8.448653,6.527977,-4.242940,-3.614592,8.823204,-7.524682,-8.563367,3.935303,0.567899,8.332695,9.906674,-4.593741,-5.990452,-2.557006,7.528791,-3.484463,6.126717,5.645004,2.261033,1.268769,-3.166210,6.008980,-3.354182,-7.313328,4.724379,-0.876801,-3.690879,7.932550,7.311771,-2.511085,9.052070,4.059004,-7.340216,-5.942093,-7.025781,-3.122409,3.791194,8.277353,-5.388961,5.003019,0.552777,4.055267,-8.361528,3.199786,-1.897060,-6.851174,-9.558093,-0.959766,2.986510,-1.231535,5.326737,-7.000197,-7.821807,-7.405896,-7.253732,-6.997490,7.853856]], dtype = "float64")#candidate|9956|(9, 156)|const|float64
call_9954 = relay.TupleGetItem(func_4219_call(relay.reshape(const_9955.astype('uint32'), [14, 7, 16]), relay.reshape(const_9956.astype('float64'), [1404,]), ), 0)
call_9957 = relay.TupleGetItem(func_4222_call(relay.reshape(const_9955.astype('uint32'), [14, 7, 16]), relay.reshape(const_9956.astype('float64'), [1404,]), ), 0)
func_8742_call = mod.get_global_var('func_8742')
func_8745_call = mutated_mod.get_global_var('func_8745')
var_9964 = relay.var("var_9964", dtype = "float32", shape = (630,))#candidate|9964|(630,)|var|float32
call_9963 = func_8742_call(relay.reshape(var_9964.astype('float32'), [14, 15, 3]))
call_9965 = func_8742_call(relay.reshape(var_9964.astype('float32'), [14, 15, 3]))
output = relay.Tuple([call_9952,call_9954,const_9955,const_9956,call_9963,var_9964,])
output2 = relay.Tuple([call_9953,call_9957,const_9955,const_9956,call_9965,var_9964,])
func_10000 = relay.Function([var_9964,], output)
mod['func_10000'] = func_10000
mod = relay.transform.InferType()(mod)
mutated_mod['func_10000'] = func_10000
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10001 = relay.var("var_10001", dtype = "float32", shape = (630,))#candidate|10001|(630,)|var|float32
func_10000_call = mutated_mod.get_global_var('func_10000')
call_10002 = func_10000_call(var_10001)
output = call_10002
func_10003 = relay.Function([var_10001], output)
mutated_mod['func_10003'] = func_10003
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8000_call = mod.get_global_var('func_8000')
func_8002_call = mutated_mod.get_global_var('func_8002')
call_10021 = relay.TupleGetItem(func_8000_call(), 2)
call_10022 = relay.TupleGetItem(func_8002_call(), 2)
output = call_10021
output2 = call_10022
func_10030 = relay.Function([], output)
mod['func_10030'] = func_10030
mod = relay.transform.InferType()(mod)
mutated_mod['func_10030'] = func_10030
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10030_call = mutated_mod.get_global_var('func_10030')
call_10031 = func_10030_call()
output = call_10031
func_10032 = relay.Function([], output)
mutated_mod['func_10032'] = func_10032
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8150_call = mod.get_global_var('func_8150')
func_8152_call = mutated_mod.get_global_var('func_8152')
call_10046 = relay.TupleGetItem(func_8150_call(), 0)
call_10047 = relay.TupleGetItem(func_8152_call(), 0)
uop_10054 = relay.cos(call_10046.astype('float32')) # shape=(3, 15, 11)
uop_10056 = relay.cos(call_10047.astype('float32')) # shape=(3, 15, 11)
uop_10063 = relay.acos(call_10046.astype('float32')) # shape=(3, 15, 11)
uop_10065 = relay.acos(call_10047.astype('float32')) # shape=(3, 15, 11)
func_297_call = mod.get_global_var('func_297')
func_300_call = mutated_mod.get_global_var('func_300')
const_10079 = relay.const([10,3,4,-10,6,5,8,-2,-7,-6,1,3,-7,-7,9,-9,10,6,-9,-8,-2,-5,-2,-9,-5,2,-10,7,-1,8,-6,10,10,-1,-4,-6,-10,9,5,-5,-5,-6,1,4,-8,1,-9,10,-8,-10,8,3,4,1,9,10,2,-1,-9,-4,-7,-1,-7,10,1,-10,-6,8,4,-1,-7,9,7,4,-6,5,5,-2,6,-8,1,-6,2,9,5,-10,-3,4,10,-7,6,2,7,-4,7,10,1,-7,1,-10,7,1,-9,-9,-2,-5,-8,10,10,-10,5,7,9,-10,9,9,9,4,-4,7,9,4,1,-7,-7,10,-1,9,-8,-10,-10,2,8,7,9,10,8,-9,8,-1,-5,7,7,-3,5,-3,4,-4,3,6,7,-2,-10,5,-9,2,-9,-7,5,3,-7,4,-4,-4,2,-9,-4,4,-5,3,-5,-7,6,-1,6,-2,10,4,6,1,6,7,-2,-5,9,-1,2,1,2,10,5,2,-2,1,2,8,-1,-9,5,2,-1,10,-10,1,2,1,7,-5,10,9,-8,-2,-1,4,5,1,8,9,-4,-10,-6,-8,-4,2,-8,6,7,7,-8,-5,6,1,1,1,-4,4,2,5,-4,8,7,10,-1,-3,7,-6,-5,-8,-10,-2,2,6,-7,-9,-5,4,2,-7,2,-4,5,-3,-8,7,-4,2,-2,-1,9,-1,-9,-8,1,-6,5,-2,-1,-1,8,6,-6,7,9,8,-7,4,-5,1,-10,-9,-10,-5,7,-1,-5,-6,-7,8,10,6,4,5,6,5,4,1,4,4,-4,-6,-4,-10,3,9,-2,1,8,-7,-4,10,-6,-4,7,-2,3,-7,-10,9,5,-7,6,-4,7,-9,-4,1,-8,-10,2,-5,2,3,-1,5,2,-4,3,-3,9,-1,10,5,-8,-4,-9,-9,-3,4,7,-1,-3,-9,2,5,5,6,-2,3,8,-2,8,-9,-6,-6,-2,3,-1,10,-8,5,-2,7,4,4,9,8,-9,-10,-9,7,-3,-7,-7,-6,-3,-6,-3,-9,-5,8,2,3,6,6,2,-9,8,-9,-4,-9,9,-1,10,-1,6,-1,7,8,1,-9,9,-8,-3,-1,-4,-3,6,5,-6,1,8,-8,9,-8,-2,-3,-6,-10,-10,7,9,-8,4,1,2,9,5,4,-7,-6,1,2,2,8,2,5,7,-6,-7,-10,8,-8,9,9,-4,7,-4,-5,-2,8,10,5,7,8,-8,-2,8,-1,1,4,-5,-1,1,-5,10,-7,7,10,3,7,-6,10,-10,-10,-9,6,-5,-4,4,-9,5,7,-8,-5,4,-2,2,4,-1,2,-1,7,-5,4,10,-6,-9,-6,-9,-8,2,5,2,-3,6,-4,-6,-6,-1,2,4,-8,-8,-10,5,2,-5,-9,-8,1,-10,2,-5,-8,-9,-10,6,-5,-2,3,-10,5,6,4,8,8,10,5,10,-2,2,1,-9,4,9,1,6,9,-9,4,8,-7,-5,4,6,4,9,7,10,-3,1,-2,-9,-7,-4,8,-4,-10,9,-4,-3,4,2,2,-3,2,-1,10,-5,-8,9,-1,-1,4,9,5,-6,4,10,-9,4,-6,-8,-3,-3,-2,-9,9,-5,9,1,-6,3,-3,9,-6,7,-6,-8,10,1,6,-6,-9,-8,-9,-4,-3,6,-2,2,-7,-9,6,1,-1,-9,-2,3,-9,2,9,-2,5,-2,2,4,-3,-2,10,-4,-8,7,-9,5,-1,-4,5,5,-4,6,1,5,2,-2,3,-3,-10,-4,3,6,6,-8,-6,8,10,-7,-3,6,10,-10,-5,-5,-7,3,-8,-6,9,-3,9,-4,-7,-1,-3,-8,4,-7,2,1,1,-1,-2,-1,-1,5,-8,-10,-2,-7,-7,-8,-6,-9,9,10,-3,-6,6,-6,-4,8,10,8,8,-6,2,-5,1,7,-3,9,-5,-10,4,1,-7,-1,6,8,5,-8,-10,-5,6,-2,-6,4,-5,4,2,-9,-4,-7,-2,-6,-3,-5,-9,5,-2,-6,-5,2,7,-9,-3,10,-1,-10,6,-1,2,1,6,-9,-2,-9,-5,8,10,3,-8,-3,-3,-1,10,-5,9,4,-1,-6,-7,-9,9,-6,-5,-2,-3,-1,9,3,-5,10,4,1,-8,-8,1,9,3,9,-4,2,-8,-4,-6,-6,7,6,1,-7,-4,6,-2,-7,10,-4,9,-4,8,5,4,4,-7,-3,10,9,-4,-1,-2,1,6,-6,1,5,-7,3,2,-5,10,9,-7,-5,-7,-9,-5,-1,-6,-10,-7,8,3,-7,9,-6,-9,10,-7,-9,1,3,8,9,-1,3,-1,-1,-2,-1,-10,9,-6,-5,4,-7,-2,1,2,-6,-8,-10,9,5,-2,2,5,-1,-2,4,-10,9,1,2,9,-6,-6,-7,-10,8,-1,5,-2,9,-5,-10,-5,-7,-10,-8,6,7,2,8,-8,-5,-7,-7,9,4,2,-8,-2,1,-3,-2,-5,-2,-5,-1,7,4,-8,-4,8,8,-2,6,1,-10,6,-5,3,2,-8,-10,8,-2,6,3,5,-5,8,-3,-7,-5,-4,-8,8,4,-10,4,10,-4,1,10,9,-3,7,7,-10,8,5,-1,-5,-8,1,5,-7,10,8,-3,7,5,-3,-7,9,9,1,-4,6,1,7,3,-7,-1,2,2,-2,-1,-3,10,-4,-3,-10,1,-2,-7,10,-2,-10,-10,7,-2,-10,5,-1,-5,-5,-10,-9], dtype = "int64")#candidate|10079|(1040,)|const|int64
call_10078 = relay.TupleGetItem(func_297_call(relay.reshape(const_10079.astype('int64'), [5, 16, 13]), relay.reshape(const_10079.astype('int64'), [5, 16, 13]), ), 0)
call_10080 = relay.TupleGetItem(func_300_call(relay.reshape(const_10079.astype('int64'), [5, 16, 13]), relay.reshape(const_10079.astype('int64'), [5, 16, 13]), ), 0)
output = relay.Tuple([uop_10054,uop_10063,call_10078,const_10079,])
output2 = relay.Tuple([uop_10056,uop_10065,call_10080,const_10079,])
func_10082 = relay.Function([], output)
mod['func_10082'] = func_10082
mod = relay.transform.InferType()(mod)
output = func_10082()
func_10083 = relay.Function([], output)
mutated_mod['func_10083'] = func_10083
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9779_call = mod.get_global_var('func_9779')
func_9781_call = mutated_mod.get_global_var('func_9781')
call_10153 = relay.TupleGetItem(func_9779_call(), 0)
call_10154 = relay.TupleGetItem(func_9781_call(), 0)
output = relay.Tuple([call_10153,])
output2 = relay.Tuple([call_10154,])
func_10173 = relay.Function([], output)
mod['func_10173'] = func_10173
mod = relay.transform.InferType()(mod)
output = func_10173()
func_10174 = relay.Function([], output)
mutated_mod['func_10174'] = func_10174
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8375_call = mod.get_global_var('func_8375')
func_8377_call = mutated_mod.get_global_var('func_8377')
call_10183 = relay.TupleGetItem(func_8375_call(), 0)
call_10184 = relay.TupleGetItem(func_8377_call(), 0)
func_9600_call = mod.get_global_var('func_9600')
func_9601_call = mutated_mod.get_global_var('func_9601')
call_10195 = func_9600_call()
call_10196 = func_9600_call()
output = relay.Tuple([call_10183,call_10195,])
output2 = relay.Tuple([call_10184,call_10196,])
func_10202 = relay.Function([], output)
mod['func_10202'] = func_10202
mod = relay.transform.InferType()(mod)
mutated_mod['func_10202'] = func_10202
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10202_call = mutated_mod.get_global_var('func_10202')
call_10203 = func_10202_call()
output = call_10203
func_10204 = relay.Function([], output)
mutated_mod['func_10204'] = func_10204
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10082_call = mod.get_global_var('func_10082')
func_10083_call = mutated_mod.get_global_var('func_10083')
call_10297 = relay.TupleGetItem(func_10082_call(), 0)
call_10298 = relay.TupleGetItem(func_10083_call(), 0)
func_6315_call = mod.get_global_var('func_6315')
func_6320_call = mutated_mod.get_global_var('func_6320')
var_10305 = relay.var("var_10305", dtype = "float32", shape = (858,))#candidate|10305|(858,)|var|float32
var_10306 = relay.var("var_10306", dtype = "uint32", shape = (784, 2))#candidate|10306|(784, 2)|var|uint32
var_10307 = relay.var("var_10307", dtype = "float64", shape = (1404,))#candidate|10307|(1404,)|var|float64
call_10304 = relay.TupleGetItem(func_6315_call(relay.reshape(var_10305.astype('float32'), [6, 11, 13]), relay.reshape(var_10306.astype('uint32'), [56, 28]), relay.reshape(var_10307.astype('float64'), [1404,]), ), 3)
call_10308 = relay.TupleGetItem(func_6320_call(relay.reshape(var_10305.astype('float32'), [6, 11, 13]), relay.reshape(var_10306.astype('uint32'), [56, 28]), relay.reshape(var_10307.astype('float64'), [1404,]), ), 3)
uop_10312 = relay.exp(var_10306.astype('float64')) # shape=(784, 2)
func_9935_call = mod.get_global_var('func_9935')
func_9939_call = mutated_mod.get_global_var('func_9939')
const_10319 = relay.const([[True,True],[True,True],[False,False],[True,True],[False,False],[True,False],[True,True],[True,True],[True,False],[False,False],[True,True],[True,True],[False,False],[False,False],[False,True],[True,True],[False,False],[True,False],[True,False],[True,True],[False,True],[True,False],[False,True],[True,True],[True,False],[True,True],[True,False],[False,False],[False,False],[False,True],[True,False],[False,True],[False,True],[True,True],[True,False],[False,False],[True,False],[False,True],[True,True],[True,False],[True,False],[True,True],[True,True],[True,True],[True,True],[False,False],[True,True],[True,False],[False,False],[True,False],[True,False],[False,False],[False,False],[False,True],[True,True],[True,True],[True,True],[False,False],[False,True],[False,False],[False,False],[False,False],[True,False],[False,False],[False,True],[False,True],[True,False],[False,True],[False,False],[False,True],[True,False],[False,False],[True,False],[True,True],[True,True],[True,False],[True,False],[False,True],[False,False],[True,False],[True,True],[False,True],[True,False],[False,True],[False,True],[False,True],[True,True],[True,False],[True,False],[True,True],[True,True],[True,True],[True,True],[False,True],[True,True],[True,False],[False,True],[True,True],[True,False],[False,True],[True,False],[False,False],[True,False],[False,True],[False,True],[False,False],[False,True],[True,True],[False,True],[False,True],[False,False],[True,False],[True,True],[True,True],[True,True],[False,False],[True,True],[False,True],[True,False],[False,True],[True,False],[True,False],[True,False],[True,True],[True,False],[False,True],[False,True],[True,True],[False,False],[False,True],[True,True],[True,True],[False,True],[False,True],[True,False],[False,True],[False,False],[True,True],[False,False],[False,False],[False,False],[True,False],[True,True],[False,False],[True,False],[True,True],[True,True],[False,True],[False,False],[False,False],[False,True],[True,False],[True,False],[True,True],[False,True],[True,True],[True,True],[True,False],[False,True],[False,True],[False,False],[False,True],[True,False],[True,True],[False,True],[True,False],[False,False],[False,True],[False,True],[True,True],[False,False],[False,True],[True,True],[False,True],[True,False],[True,True],[False,True],[False,True],[False,True],[True,False],[True,False],[True,True],[True,True],[True,True],[True,False],[False,True],[False,False],[True,False],[False,True],[True,True],[True,False],[False,False],[False,False],[True,False],[False,False],[False,True],[True,True],[False,False],[True,True],[True,False],[True,False],[True,False],[False,False],[False,False],[True,True],[True,True],[False,True],[True,False],[False,False],[False,False],[True,False],[True,False],[False,True],[False,True],[True,True],[True,False],[True,False],[False,False],[True,False],[False,False],[False,False],[True,False],[True,False],[False,True],[True,False],[True,False],[False,False],[False,False],[False,False],[True,True],[True,False],[True,True],[True,False],[True,False],[False,True],[False,False],[True,False],[False,True],[False,False],[False,True],[False,False],[True,True],[False,True],[True,False],[True,True],[True,True],[True,True],[False,False],[True,True],[False,True],[False,True],[False,False],[True,False],[True,True],[True,True],[True,True],[True,False],[False,False],[False,False],[False,True],[True,False],[False,False],[True,False],[True,False],[True,True],[True,False],[False,True],[False,True],[False,True],[True,True],[False,False],[False,False],[False,True],[False,False],[True,False],[False,False],[False,False],[False,True],[True,True],[True,False],[True,True],[False,True],[False,False],[True,False],[True,False],[True,False],[False,False],[False,False],[True,False],[True,False],[False,True],[False,True],[True,False],[False,False],[False,False],[True,True],[True,True],[False,True],[False,True],[False,True],[True,True],[True,True],[True,True],[False,False],[True,True],[False,False],[False,False],[True,True],[True,True],[False,True],[True,True],[False,False],[False,False],[False,False],[False,False],[False,True],[True,True],[True,True],[True,True],[True,False],[False,False],[False,False],[False,True],[True,True],[True,True],[False,False],[False,False],[True,True],[True,True],[True,True],[True,True],[False,False],[True,True],[True,False],[False,True],[False,False],[True,True],[False,True],[False,False],[True,True],[True,True],[False,False],[False,True],[True,True],[False,False],[False,True],[False,False],[True,True],[False,True],[True,False],[False,True],[True,True],[False,True],[False,True],[True,True],[False,True],[True,False],[True,True],[True,False],[False,True],[False,False],[False,False],[False,False],[True,False],[True,False],[True,True],[False,False],[False,False],[True,False],[True,True],[False,False],[False,True],[False,True],[False,False],[True,False],[True,True],[False,False],[False,False],[False,True],[True,True],[False,False],[False,False],[False,False],[False,True],[False,False],[False,False],[False,False],[True,False],[True,True],[False,False],[True,False],[False,True],[False,False],[False,False],[True,True],[True,True],[True,True],[True,True],[True,False],[False,True],[False,True],[False,False],[True,True],[False,True],[True,True],[True,False],[True,True],[False,True],[True,False],[True,True],[True,False],[False,False],[True,False],[True,False],[False,True],[True,False],[False,True],[False,False],[True,False],[True,False],[True,False],[False,False],[False,False],[True,True],[False,False],[False,True],[False,True],[True,True],[True,False],[True,True],[False,True],[True,False],[False,True],[False,True],[True,True],[True,True],[False,False],[True,False],[False,True],[True,True],[True,False],[False,False],[True,False],[True,False],[False,True],[True,False],[False,False],[True,False],[True,True],[False,False],[True,True],[True,True],[True,True],[True,False],[False,False]], dtype = "bool")#candidate|10319|(455, 2)|const|bool
call_10318 = func_9935_call(relay.reshape(const_10319.astype('bool'), [13, 5, 14]), relay.reshape(const_10319.astype('bool'), [13, 5, 14]), )
call_10320 = func_9935_call(relay.reshape(const_10319.astype('bool'), [13, 5, 14]), relay.reshape(const_10319.astype('bool'), [13, 5, 14]), )
func_9337_call = mod.get_global_var('func_9337')
func_9340_call = mutated_mod.get_global_var('func_9340')
const_10326 = relay.const(3, dtype = "uint8")#candidate|10326|()|const|uint8
call_10325 = relay.TupleGetItem(func_9337_call(relay.reshape(const_10326.astype('uint8'), [])), 2)
call_10327 = relay.TupleGetItem(func_9340_call(relay.reshape(const_10326.astype('uint8'), [])), 2)
func_9141_call = mod.get_global_var('func_9141')
func_9143_call = mutated_mod.get_global_var('func_9143')
call_10328 = relay.TupleGetItem(func_9141_call(), 0)
call_10329 = relay.TupleGetItem(func_9143_call(), 0)
output = relay.Tuple([call_10297,call_10304,var_10305,var_10307,uop_10312,call_10318,const_10319,call_10325,const_10326,call_10328,])
output2 = relay.Tuple([call_10298,call_10308,var_10305,var_10307,uop_10312,call_10320,const_10319,call_10327,const_10326,call_10329,])
func_10339 = relay.Function([var_10305,var_10306,var_10307,], output)
mod['func_10339'] = func_10339
mod = relay.transform.InferType()(mod)
mutated_mod['func_10339'] = func_10339
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10339_call = mutated_mod.get_global_var('func_10339')
var_10341 = relay.var("var_10341", dtype = "float32", shape = (858,))#candidate|10341|(858,)|var|float32
var_10342 = relay.var("var_10342", dtype = "uint32", shape = (784, 2))#candidate|10342|(784, 2)|var|uint32
var_10343 = relay.var("var_10343", dtype = "float64", shape = (1404,))#candidate|10343|(1404,)|var|float64
call_10340 = func_10339_call(var_10341,var_10342,var_10343,)
output = call_10340
func_10344 = relay.Function([var_10341,var_10342,var_10343,], output)
mutated_mod['func_10344'] = func_10344
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9492_call = mod.get_global_var('func_9492')
func_9494_call = mutated_mod.get_global_var('func_9494')
call_10368 = func_9492_call()
call_10369 = func_9492_call()
output = relay.Tuple([call_10368,])
output2 = relay.Tuple([call_10369,])
func_10373 = relay.Function([], output)
mod['func_10373'] = func_10373
mod = relay.transform.InferType()(mod)
mutated_mod['func_10373'] = func_10373
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10373_call = mutated_mod.get_global_var('func_10373')
call_10374 = func_10373_call()
output = call_10374
func_10375 = relay.Function([], output)
mutated_mod['func_10375'] = func_10375
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10202_call = mod.get_global_var('func_10202')
func_10204_call = mutated_mod.get_global_var('func_10204')
call_10422 = relay.TupleGetItem(func_10202_call(), 0)
call_10423 = relay.TupleGetItem(func_10204_call(), 0)
func_1352_call = mod.get_global_var('func_1352')
func_1354_call = mutated_mod.get_global_var('func_1354')
var_10425 = relay.var("var_10425", dtype = "uint8", shape = (192,))#candidate|10425|(192,)|var|uint8
call_10424 = func_1352_call(relay.reshape(var_10425.astype('uint8'), [4, 6, 8]))
call_10426 = func_1352_call(relay.reshape(var_10425.astype('uint8'), [4, 6, 8]))
func_8898_call = mod.get_global_var('func_8898')
func_8906_call = mutated_mod.get_global_var('func_8906')
const_10444 = relay.const([6.280622,-8.345686,-2.932246,3.090209,-3.654133,9.251130,-4.961088,-9.312499,-3.445138,9.119614,3.958745,5.903447,5.293438,-5.335247,-5.623312,-8.445427,1.939037,6.233950,-5.447026,-2.640054,-6.273862,9.555643,1.968755,-0.998401,1.646523,0.802733,-1.745615,3.592340,-5.172149,-2.038678,7.408430,-3.423011,-3.249950,7.910158,0.026239,0.240598,4.087567,-2.920059,-1.605703,0.299080,-2.950744,-8.397934,1.937428,-9.649544,0.361421,-6.959738,4.362110,-4.349850,-1.951991,-2.695012,2.533511,5.702214,1.053148,4.223675,5.548006,8.451240,4.410319,-6.678600,6.757179,-9.723936,-7.977013,0.082555,-4.732737,2.449217,1.126706,-8.906773,6.938135,-9.951673,5.780126,8.835031,-1.513589,-5.603381,-8.919155,-6.321091,3.880443,1.959957,3.110853,0.053561,-0.765520,-4.032610,-7.858940,-5.884453,1.087661,-9.961922,6.041218,0.084667,-7.733588,1.511704,-1.054370,-0.291445,0.956046,9.902159,9.982152,-1.997329,8.193298,1.495997,0.540482,-7.200502,-5.222327,1.783071,-7.926117,2.572745,-6.442545,7.606772,-5.785302,-4.515014,8.176746,-8.768163,-5.564499,-4.194276,-0.251196,2.738874,-0.038631,-9.440258,3.941219,-1.724397,-4.187973,-0.903052,-4.634466,6.929933,-0.687191,-1.458245,-5.353415,-7.251815,4.751379,-3.351974,-5.896727,8.735109,9.987830,-2.684094,0.812480,-5.084962,-2.870560,-1.396076,7.735001,-8.565074,6.974014,1.825060,8.579924,-7.561724,2.801813,-6.191195,5.264651,-1.103580,4.557739,2.146431,5.691425,-3.354020,-9.057408,-8.875549,2.881436,4.118666,-3.277140,-4.680896,-2.805493,-6.110171,5.835627,-8.161992,3.273329,-4.439614,9.145143,0.454973,3.512982,-7.967991,8.583520,8.503727,9.449205,2.592369,-1.556149,-9.269318,8.619479,-1.893957,7.167874,2.874063,3.678926,-1.870166,7.914235,7.531012,1.850287,-5.165287,-2.146935,9.487075,6.206631,6.119201,-4.381558,-3.916738,7.610983,5.779810,4.632858,0.777090,-0.138559,4.433199,0.337053,-1.041903,9.265858,3.552777,6.257134,6.720274,-7.439446,-6.975339,-9.103329,-1.876538,6.507002,0.214772,-5.486994,0.003019,-9.901150,-6.419250,5.513726,-9.294283,9.431725,-6.823552,2.924802,8.150231,3.406232,-2.957167,4.464247,1.946864,-1.903363,4.579188,0.765617,9.618359,-7.021773,7.662090,8.982880,-9.542970,-0.948990,8.250831,-1.266379,9.130835,-9.602997,-2.625540,-7.463290,-6.485706,-2.246806,5.000633,-9.678904,1.036086,-0.613692,-9.464200,-5.562037,-9.168394,6.072705,-2.824494,3.541496,5.034517,-9.181519,4.231256,4.393499,6.352152,6.683790,8.367120,-5.862328,-0.705656,-0.508945,-1.752273,6.483283,1.998802,-7.579155,8.881308,4.085079,6.569218,-8.138274,-2.779895,-4.546485,3.571771,-3.775750,0.186181,4.728870,4.758066,-3.019106,-3.909379,-5.708415,-9.330347,-9.030370,-2.364938,8.672007,0.205756,-4.370006,9.804990,9.417641,3.327603,-4.167391,-0.389640,-0.307269,6.628660,9.359470,5.055734,5.767070,-5.750394,6.912419,4.682706,-9.740343,-4.275837,-9.956319,2.322782,-3.949944,1.843731,3.202419,-9.407330,2.359748,-7.687139,2.505005,-3.584474,-4.955299,-0.932273,-0.570499,-0.793038,-7.778580,8.427109,-6.610429,4.457207,2.927833,0.882334,-7.099647,9.627351,5.163646,5.752024,1.659117,1.203333,-7.368692,3.851825,1.260988,-5.482885,-1.312147,-0.675160,-8.373166,5.864665,-9.107362,7.631916,-4.967228,-9.077022,-3.615186,-8.755640,-6.359615,9.489722,-7.881296,2.659537,-8.801660,1.509823,5.605841,-3.269857,2.383617,-2.016950,-0.576789,8.268449,-9.908248,3.385753,0.001553,-7.143274,7.197087,-4.530173,-0.652752,-6.975843,1.840462,2.803812,7.674574,4.414824,4.587483,0.090362,4.501487,-9.290962,-4.466846,-0.767313,9.134929,7.350036,6.698527,-6.733603,7.475048,-1.664141,3.211586,-1.254336,3.747427,9.368346,5.535484,0.439922,3.840642,-6.248135,3.638933,4.837577,0.586832,2.828287,2.112606,-5.107683,-5.292425,3.929576,-6.192275,7.046092,9.714917,-4.337264,3.263833,8.504355,2.561982,-4.321089,5.454812,0.357950,8.356279,1.082812,4.321724,5.611384,-6.761834,8.853841,-2.649427,6.467389,7.425610,-4.668781,8.339734,-2.228100,5.758729,3.462718,-1.564675,7.957346,5.971822,-0.273862,-0.805381,8.592038,9.115525,3.563617,1.955567,2.277202,-3.313419,4.203928,-1.758094,-4.693369,-5.604322,-7.538062,3.963274,-0.845626,-0.265812,1.272539,9.748227,7.383105,6.404721,-3.774539,3.027201,4.638229,-8.814712,9.222965,-3.444677,-6.853730,9.158526,-2.781176,4.395268,-5.224507,7.568572,-3.229881,-3.437610,0.981813,5.465082,-9.759572,-9.110884,-4.141167,-7.824052,4.585301,-1.885441,8.830459,-0.221048,-2.433752,8.329057,6.650215,-3.907615,6.964547,7.707505,-7.898746,-4.824633,-5.823670,-3.054086,7.595882,-8.606789,-4.529498,3.763546,7.672447,8.453756,2.009618,-5.032171,3.318958,-5.005748,7.082236,-6.644725,-8.545330,-3.126103,2.914612,-7.551380,5.645629,8.275067,6.037850,3.252000,-2.142823,-6.617828,5.961877,-2.485567,3.522454,7.702298,-2.867181,-8.011889,5.736159,0.487488,8.462876,2.570942,7.604099,-0.690663,4.005177,8.920780,-3.410103,9.110633,-9.744190,7.048196,0.030240,-7.324597,-2.143902,-6.803612,3.002866,-2.753295,8.121266,1.561295,-0.825315,0.844148,2.003466,0.938705,-0.167345,-3.540552,-9.552404,-2.442616,-1.950503,3.976083,7.971729,-2.436768,-7.496459,-1.860962,0.764579,-8.321329,5.083559,1.609124,-9.318712,3.484770,-6.753631,4.009737,2.612816,-9.970796,-6.901904,-8.835992,9.280169,-7.085452,0.168994,-5.359775,-4.124507,-5.177389,-2.614249,-6.669575,-6.466254,-1.575731,1.606460,8.019664,4.844084,4.831954,3.540954,-6.424230,-9.941063,-8.623728,7.107527,-0.125278,5.233921,8.635231,9.493684,-3.273201,8.225550,-8.144946,-0.393513,2.797111,4.998156,4.754879,-8.871561,7.765572,-4.286882,-6.518125,-3.828740,2.852138,3.442779,-3.573816,8.546794,-5.682913,5.981016,8.396912,-3.179468,2.381532,0.829153,3.283343,-2.406989,3.570121,-8.911396,-3.609507,-2.215306,3.880281,5.021483,-5.735551,-9.201457,9.166504,6.385909,-1.608185,-8.351940,4.117843,-6.284416,6.346993,-4.890819,-3.683103,2.261704,9.503465,-3.932346,7.155344,-0.117414,-5.432222,3.029185,-5.313819,5.715074,-6.098614,2.130415,5.896950,-1.634200,-7.919865,1.661465,-3.920544,-9.890073,9.693891,-3.136680,-3.893600,-0.229982,5.108886,-0.837609,1.808057,-6.812125,2.438960,4.553091,-9.927765,-3.714353,-9.491735,5.943024,-8.283985,6.428921,-7.560749,-6.755205,-2.499702,-7.408724,-0.480915,-4.107963,-7.655469,-1.196347,-9.301456,-1.018251,6.761651,4.415061,8.809789,-3.018818,-7.500000,6.468850,8.038159,4.357819,-9.604419,-1.418628,2.271783,-7.980282,3.646520,2.884051,3.015360,-3.601813,-1.890628,-0.426906,-2.647090,8.585783,-1.900778,-7.206849,6.644600,-7.271821,3.474696,-0.168748,7.436420,-5.245395,8.585151,-3.103723,1.764166,-5.370948,-0.994056,9.493897,4.184375,-9.763502,3.420228,-4.036552,-2.048894,7.020311,1.658048,-5.475198,-6.146755,6.905353,0.780495,-1.020815,2.056843,-1.850580,-1.024326,-8.277017,9.219487,3.510177,5.490584,3.316100,-0.403137,9.931488,-6.101451,-3.711701,-7.639096,5.940313,7.024450,9.596604,-9.878038,8.797242,2.674362,-1.688537,-9.178022,-9.140368,3.792131,9.922882,-8.896682,6.666046,5.959463,1.872973,-3.452399,7.058079,5.657840,-4.390925,-3.896369,-8.860686,9.631202,-9.456968,-1.538038,-8.645332,-5.239340,-3.669552,-3.176470,-1.663238,9.704576,-4.840033,-2.322991,-5.938098,-9.455642,0.909623,-3.343029,-6.020775,-5.654016,2.365422,4.528868,2.427265,7.077013,-5.892459,8.398659,6.493437,8.149910,-9.321409,4.952368,6.379918,5.056153,8.902487,-2.594431,-3.633732,-8.871793,3.944380,8.649825,-5.440328,-9.080958,-7.751490,7.958013,9.644039,6.664615,-7.090766,-7.292863,-4.577964,-7.961486,9.673137,-1.902319,5.780789,5.553328,-5.299177,1.092946,4.402304,-9.351309,-0.307996,-7.826832,-9.191213,2.402954,-5.932986,-3.082847,-0.587824,-1.711366,2.386646,1.160528,-5.394180,9.146646,5.275295,1.369778,0.993231,-4.548425,6.764568,4.723169,9.118131,-7.792143,-5.646174,-6.591906,6.495824,-9.486719,5.692041,4.290316,-4.836901,5.289444,-2.503659,-7.648117,-1.261216,7.209078,5.731352,6.098997,9.558871,6.785258,-2.833256,-5.782643,-8.590572,-9.101241,-5.955455,6.742203,-6.019696,-1.295081,4.179576,-6.884486,-7.287253,5.556007,-5.869662,-2.523082,-3.588349,0.506502,2.500192,-3.241102,-3.420142,-7.489334,7.753747,5.458319,-9.274193,-8.185678,5.699068,0.111135,-2.891647,8.435354,3.747735,-6.654868,4.396063,-6.814813,-7.187085,5.022610,3.833434,4.927336,0.958937,-0.724140,0.898324,-8.572016,-7.937295,-7.127800,-2.382373,4.708735,9.046461,-7.360751,-9.116307,6.240201,8.778737,2.213308,-9.092572,9.658189,-0.415140,6.497950,-1.639414,-2.148134,9.252311,3.001837,-1.731077,1.088393,2.423164,1.179533,-0.773752,-0.390153,9.298544,-3.899916,-0.721550,3.075000,-4.260205,-2.643085,-8.676998,0.298467,0.332142,-1.711796,7.408199,4.736923,5.685559,-9.565871,-2.442828,0.519573,9.923047,9.916559,-0.902244,-7.814673,-1.515403,0.466697,9.540293,-3.646878,-2.482417,-6.460022,7.267598,-5.117187,-8.404859,-0.233066,2.755445,-2.412498,-2.668542,-0.813346,2.046076,7.155355,-8.303412,-7.861324,7.787742,-9.151829,4.507901,1.536077,8.273261,6.545437,2.937863,-7.931968,-3.124080,5.744591,-0.366026,4.246429,-7.122896,7.235803,1.155272,-7.524828,5.831860,-0.273110,3.028691,2.884487,1.164359,2.303002,-0.628242,9.891952,-1.538233,6.141073,6.112851,-7.977797,0.393476,-7.403173,-2.468821,9.325343,3.461017,-3.375370,-1.846135,5.995694,9.469828,-7.186263,-2.263364,-6.355027,-4.966722,-0.017362,-6.568098,8.907678,-8.857013,-0.219306,-1.663828,-4.953777,-1.092459,-1.091723,-5.993301,-7.687291,-4.317241,-3.218653,6.921297,-8.999002,-2.091795,6.648207,5.767464,0.533770,-4.078226,-1.124828,3.658641,-3.386451,-3.822700,-7.606983,5.573909,-6.885452,9.786957,-7.021980,8.257416,-2.740657,6.645537,-3.347216,-6.333732,5.467859,2.947941,3.147016,-1.041828,-8.044143,8.722330,-1.778594,-9.256057,-6.379220,9.626098,-8.605167,2.257368,-3.827896,-0.531214,-1.639514,-8.234034,1.181668,1.202044,7.158388,-8.730631,-6.695138,-4.549775,-9.774892,8.803476,1.746377,-8.912804,7.382688,-5.197021,-9.805477,-1.500627,-8.103652,-1.530942,2.068131,-5.445703,-7.172739,-9.719744,-5.149007,0.453631,4.037272,-4.238860,7.390399,-4.707427,-6.860947,-1.161223,9.100604,7.254476,-3.162482,3.386463,-5.193014,-8.712409,0.432094,4.846684,3.840433,-9.482058,-0.573388,6.674735,2.966548,-5.134523,2.102935,3.750437,-2.667269,-5.535064,-8.262973,-2.953872,6.239274,4.930794,3.477532,1.442032,5.961683,-4.543469,-8.470528,3.193703,8.888705,2.286637,5.125362,-7.727789,-9.004520,-1.767109,-1.015260,2.639045,8.804048,-8.835453,1.404462,3.702278,-6.436851,-6.239816,-7.005705,-5.200696,-9.524593,-1.925253,-7.215123,9.713147,2.412552,-3.216215,-1.713634,6.226033,-4.269779,-7.437463,6.794223,1.736392,1.210734,-6.743490,5.003905,-4.141319,8.922326,6.810938,0.326661,-6.589449,-7.614111,-8.167139,-7.164823,-5.841884,-1.229073,-1.482559,7.461204,0.993239,-9.681772,-6.483295,-4.637291,5.419603,9.723756,-2.583090,7.363377,1.876811,9.791512,-8.268093,2.986925,-6.911823,5.049968,-9.065734,-3.443282,-1.578322,2.246456,9.203203,3.579832,9.665751,1.856467,7.456049,-3.393163,1.417687,-8.413580,7.058897,-3.987494,1.937042,8.974357,-8.752800,7.775150,-0.481395,5.935946,2.470268,-7.064967,8.582713,-6.989517,-8.602272,9.097723,-7.062297,6.522577,-4.297986,2.598855,1.769083,3.927738,8.089229,-0.744890,1.032632,8.386374,-6.720140,-9.880252,4.029509,-1.640857,3.627300,3.419960,-2.264487,-1.998308,8.635554,-9.938839,-6.135385,-0.043776,7.102764,7.355105,8.454029,7.066070,-6.846870,4.904386,-5.914501,4.739484,-8.688674,2.581692,8.346923,2.808354,8.831518,8.291643,6.858363,3.376534,0.812370,4.688826,9.931909,-3.625205,-7.816950,-9.840749,-6.795784,9.143859,-1.133649,7.696604,-5.658866,-1.310689,-5.464932,5.169295,-5.257678,-9.175242,5.240852,-6.534564,-8.469975,-9.603273,-4.301197,0.642487,-2.603957,5.338187,3.495149,-1.990114,0.133650,-0.306789,-0.694180,0.855355,-9.169229,-1.105402,-8.253918,0.560283,-7.317535,2.473168,-7.098169,3.354190,5.560074,3.374217,8.464622,-6.183206,1.310517,-1.070528,-5.450849,-4.657424,-1.989567,-4.402232,0.901001,0.447571,1.440178,-1.375455,-1.465624,-9.781785,2.058474,-2.091189,8.011073,1.405323,7.110297,2.208853,-1.327793,1.782908,-8.975239,2.009448,8.087906,1.742437,1.894999,-0.157952,4.461473,-4.652856,-6.589181,8.061186,6.281419,-3.596441,7.174777,8.804024,1.457107,-8.038941,-2.024279,4.997597,-3.222448,9.570246,3.910145,5.487117,-1.414438,2.291995,9.144929,8.268152,3.520307,0.733585,4.728692,-3.980766,2.188510,-6.006405,-8.938637,8.887878,2.796403,4.813586,-5.775828,4.759910,-5.771213,-3.952012,-1.011782,-0.576777,0.410101,-5.911717,-1.333164,-9.223321,4.369697,-0.009929,-5.607505,-7.445108,-5.174385,-5.361314,9.084347,7.167663,-7.991674,7.465373,6.237088,3.615035,9.044300,6.397809,-4.833298,-8.205369,7.261814,-5.209486,-0.284473,1.027537,-6.880511,-6.916132,1.280786,0.684332,5.951017,-7.255069,-7.140941,1.793364,6.757898,-5.035122,-5.676665,9.728984,3.783594,-0.068576,0.866267,-4.137108,2.219911,6.811760,-2.732913,8.798110,1.536974,2.876546,8.968695,7.385633,3.898651,-6.848250,-1.694359,4.630775,3.853986,-0.102034,4.684637,-8.513473,9.482873,-3.050845,-7.105855,3.501882,7.663528,-8.278107,7.696053,-8.728680,5.482646,9.163096,-6.959039,6.706247,-6.660737,-6.369028,-7.026025,-5.540842,-9.741139,5.764878,-1.011395,-2.161013,4.550000,-5.228805,4.421990,-7.390284,-6.250611,-6.505654,-5.876946,-7.491193,1.871901,3.045193,-1.148339,6.236176,-4.940676,0.987018,7.835581,-4.048425,-4.794014,-0.858993,8.549263,-3.609524,-9.875570,5.660123,-4.171524,3.729365,-4.911389,9.367258,-8.151028,-5.727271,-0.990024,-9.614425,3.459523,-8.849070,6.450053,6.728092,5.362624,-7.911862,3.418218,0.002645,-1.689355,5.330608,2.384944,2.475886,-4.165184,-5.847202,6.169774,-8.533532,2.943916,2.849870,5.526701,-1.883198,-6.982808,-3.073569,-4.503709,-5.331469,-6.439896,2.481122,-8.070784,-9.389291,-0.141031,4.589003,7.726964,9.994031,6.551925,0.855938,4.987554,3.602452,7.101621,7.457658,7.808449,-5.992033,-1.009027,6.901897,-8.605900,2.064383,-0.754678,-4.251765,-2.534036,1.672118,-7.369890,1.234466,-8.733901,-0.057274,-6.722388,9.359663,6.626478,-4.007002,2.802147,-9.990454,3.585535,6.278293,5.007351,9.499788,0.163890,4.047813,7.532623,6.481649,9.205828,5.219036,-3.203800,-5.496243,-4.709311,4.590392,-0.215935,8.837665,1.359939,-6.724532,3.891639,-8.117141,-8.174287,-5.128534,-6.141271,0.564722,7.426359,-4.463174,8.047606,5.709258,7.672729,7.165002,5.488779,7.476270,8.372334,0.442942,8.747321,3.233051,4.092581,2.423595,-7.391109,1.229763,-9.063783,4.175726,-8.744227,8.458339,8.923158,-2.968940,-5.556860,2.176011,4.363924,-3.913721,-3.128627,-8.188920,1.776362,-5.806281,-2.018875,-9.945537,9.586952,-1.204981,-3.521122,4.736540,-5.425030,-5.729856,6.743760,8.030923,-4.982870,3.851368,1.782510,-5.226008,3.972331,-5.100547,1.001522,-3.832727,-6.754758,-6.664539,3.120433,-6.535545,0.184968,-8.006375,-5.407134,8.198960,3.985797,-9.571609,-8.129411,7.183758,8.391906,6.832155,-8.852932,3.358525,-6.060710,-0.726085,0.642419,-4.289232,2.350127,2.412595,-6.517557,6.631190,8.621532,-8.066327,-3.894589,0.562278,-8.455504,-5.049736,5.105206,2.326884,-1.015444,4.960203,0.150311,-2.473516,-9.133987,-0.028745,9.929144,-1.819056,5.096359,-2.106499,-1.697477,4.062180,5.717241,-5.749232,5.437175,-6.834254,8.637165,8.965540,6.926925,5.910841,6.457831,-1.611277,6.446274,9.639609,-7.520420,1.114451,-3.783457,1.219454,-6.540456,-3.308083,8.135209,0.342196,-7.406369,2.774382,4.431708,6.724960,1.016889,9.973987,-2.769286,8.900769,-8.471090,3.793913,-0.963176,-9.031500,-5.711754,-6.157186,-3.717173,-4.581745,0.996823,-3.054091,3.275719,1.205703,-9.127239,6.109089,-3.894433,7.970081,3.640842,4.020658,9.616037,4.031216,-6.565182,7.313073,4.604600,9.449129,-7.036901,6.366073,5.194561,-8.624807,1.687130,-8.995640,-1.218277,1.874001,-2.608111,8.071631,-6.554682,-6.588141,5.272256,9.021232,6.904167,3.165836,8.843414,7.719123,5.270413,-4.833415,-5.805292,-2.851230,-6.848321,-1.899789,-1.433061,-6.686101,-9.406377,2.617077,-8.279800,9.823633,5.169889,3.914670,3.739445,8.431493,-4.144271,-5.562130,-0.520259,-9.807344,-5.106351,-0.088415,-9.056919,8.189697,6.803391,-7.174157,-6.700976,9.393375,-5.536485,-2.869976,-7.885228,9.663096,7.081665,1.475889,-9.053383,-5.799058,-8.123295,-4.744760,9.066372,-5.500535,-4.585056,-9.711378,-2.037799,9.700025,0.194540,-7.040327,9.460083,-5.484606,3.427378,6.338407,3.711046,-7.197850,-1.626620,0.574328,2.987053,-7.853435,-5.782962,-0.647377,-8.028461,-5.633909,1.545957,9.470650,-7.806244,0.729232,2.142756,7.277915,-6.077682,9.571900,-4.233901,-5.839241,-3.177887,-8.066333,2.479184,9.888549,-3.316714,4.858476,-6.605040,-3.598008,9.576727,8.755988,-4.683446,7.762004,-5.280781,5.913862,1.384193,-9.690732,-5.857143,2.760971,1.976685,-3.010401,-1.461345,9.939422,-9.780764,8.746082,4.246935,7.860453,8.696364,-8.437299,2.083486,3.339608,1.688200,-7.379902,-8.329631,-1.720421,-4.048035,2.699644,-4.434750,2.093838,-6.598423,-1.844792,5.627278,-4.263609,6.278169,1.271265], dtype = "float64")#candidate|10444|(1755,)|const|float64
const_10445 = relay.const([[7,-3,-1,-4,8,-5],[-7,-1,-7,-10,1,10],[-2,-3,8,9,5,6],[-4,-8,10,-5,-8,-9],[-7,7,-6,-8,-1,7],[2,-3,-7,-1,-9,-7],[-2,5,1,4,4,-6],[10,1,6,-9,5,3],[10,4,5,-8,4,-7],[-7,2,2,-2,-1,4],[-2,-6,-4,8,7,5]], dtype = "uint16")#candidate|10445|(11, 6)|const|uint16
const_10446 = relay.const([-8,-7,5,6,7,-5,-10,3,-8,6,9,-4,-4,-1,2,-2,-7,3,-5,9,-7,-1,5,-1,-7,6,7,-7,1,-1,5,3,-4,-4,-7,1,1,3,5], dtype = "uint16")#candidate|10446|(39,)|const|uint16
var_10447 = relay.var("var_10447", dtype = "uint16", shape = (117,))#candidate|10447|(117,)|var|uint16
var_10448 = relay.var("var_10448", dtype = "float64", shape = (1404,))#candidate|10448|(1404,)|var|float64
var_10449 = relay.var("var_10449", dtype = "float64", shape = (5, 84))#candidate|10449|(5, 84)|var|float64
call_10443 = relay.TupleGetItem(func_8898_call(relay.reshape(const_10444.astype('float64'), [13, 15, 9]), relay.reshape(const_10444.astype('float64'), [13, 15, 9]), relay.reshape(const_10445.astype('uint16'), [66,]), relay.reshape(const_10446.astype('uint16'), [39,]), relay.reshape(var_10447.astype('uint16'), [117,]), relay.reshape(var_10448.astype('float64'), [1404,]), relay.reshape(var_10449.astype('float64'), [420,]), ), 1)
call_10450 = relay.TupleGetItem(func_8906_call(relay.reshape(const_10444.astype('float64'), [13, 15, 9]), relay.reshape(const_10444.astype('float64'), [13, 15, 9]), relay.reshape(const_10445.astype('uint16'), [66,]), relay.reshape(const_10446.astype('uint16'), [39,]), relay.reshape(var_10447.astype('uint16'), [117,]), relay.reshape(var_10448.astype('float64'), [1404,]), relay.reshape(var_10449.astype('float64'), [420,]), ), 1)
output = relay.Tuple([call_10422,call_10424,var_10425,call_10443,const_10444,const_10445,const_10446,var_10447,var_10448,var_10449,])
output2 = relay.Tuple([call_10423,call_10426,var_10425,call_10450,const_10444,const_10445,const_10446,var_10447,var_10448,var_10449,])
func_10466 = relay.Function([var_10425,var_10447,var_10448,var_10449,], output)
mod['func_10466'] = func_10466
mod = relay.transform.InferType()(mod)
mutated_mod['func_10466'] = func_10466
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10466_call = mutated_mod.get_global_var('func_10466')
var_10468 = relay.var("var_10468", dtype = "uint8", shape = (192,))#candidate|10468|(192,)|var|uint8
var_10469 = relay.var("var_10469", dtype = "uint16", shape = (117,))#candidate|10469|(117,)|var|uint16
var_10470 = relay.var("var_10470", dtype = "float64", shape = (1404,))#candidate|10470|(1404,)|var|float64
var_10471 = relay.var("var_10471", dtype = "float64", shape = (5, 84))#candidate|10471|(5, 84)|var|float64
call_10467 = func_10466_call(var_10468,var_10469,var_10470,var_10471,)
output = call_10467
func_10472 = relay.Function([var_10468,var_10469,var_10470,var_10471,], output)
mutated_mod['func_10472'] = func_10472
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9141_call = mod.get_global_var('func_9141')
func_9143_call = mutated_mod.get_global_var('func_9143')
call_10592 = relay.TupleGetItem(func_9141_call(), 2)
call_10593 = relay.TupleGetItem(func_9143_call(), 2)
output = call_10592
output2 = call_10593
func_10598 = relay.Function([], output)
mod['func_10598'] = func_10598
mod = relay.transform.InferType()(mod)
mutated_mod['func_10598'] = func_10598
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10598_call = mutated_mod.get_global_var('func_10598')
call_10599 = func_10598_call()
output = call_10599
func_10600 = relay.Function([], output)
mutated_mod['func_10600'] = func_10600
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8297_call = mod.get_global_var('func_8297')
func_8299_call = mutated_mod.get_global_var('func_8299')
call_10601 = func_8297_call()
call_10602 = func_8297_call()
uop_10603 = relay.log2(call_10601.astype('float64')) # shape=(8, 14, 3)
uop_10605 = relay.log2(call_10602.astype('float64')) # shape=(8, 14, 3)
bop_10618 = relay.floor_mod(uop_10603.astype('float64'), relay.reshape(call_10601.astype('float64'), relay.shape_of(uop_10603))) # shape=(8, 14, 3)
bop_10621 = relay.floor_mod(uop_10605.astype('float64'), relay.reshape(call_10602.astype('float64'), relay.shape_of(uop_10605))) # shape=(8, 14, 3)
bop_10623 = relay.less(call_10601.astype('bool'), relay.reshape(uop_10603.astype('bool'), relay.shape_of(call_10601))) # shape=(8, 14, 3)
bop_10626 = relay.less(call_10602.astype('bool'), relay.reshape(uop_10605.astype('bool'), relay.shape_of(call_10602))) # shape=(8, 14, 3)
func_5819_call = mod.get_global_var('func_5819')
func_5823_call = mutated_mod.get_global_var('func_5823')
var_10642 = relay.var("var_10642", dtype = "float32", shape = (351,))#candidate|10642|(351,)|var|float32
call_10641 = relay.TupleGetItem(func_5819_call(relay.reshape(var_10642.astype('float32'), [9, 13, 3]), relay.reshape(var_10642.astype('float32'), [9, 13, 3]), relay.reshape(var_10642.astype('float32'), [9, 13, 3]), ), 1)
call_10643 = relay.TupleGetItem(func_5823_call(relay.reshape(var_10642.astype('float32'), [9, 13, 3]), relay.reshape(var_10642.astype('float32'), [9, 13, 3]), relay.reshape(var_10642.astype('float32'), [9, 13, 3]), ), 1)
output = relay.Tuple([bop_10618,bop_10623,call_10641,var_10642,])
output2 = relay.Tuple([bop_10621,bop_10626,call_10643,var_10642,])
func_10646 = relay.Function([var_10642,], output)
mod['func_10646'] = func_10646
mod = relay.transform.InferType()(mod)
var_10647 = relay.var("var_10647", dtype = "float32", shape = (351,))#candidate|10647|(351,)|var|float32
output = func_10646(var_10647)
func_10648 = relay.Function([var_10647], output)
mutated_mod['func_10648'] = func_10648
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10373_call = mod.get_global_var('func_10373')
func_10375_call = mutated_mod.get_global_var('func_10375')
call_10722 = relay.TupleGetItem(func_10373_call(), 0)
call_10723 = relay.TupleGetItem(func_10375_call(), 0)
uop_10761 = relay.atan(call_10722.astype('float32')) # shape=(8, 14, 3)
uop_10763 = relay.atan(call_10723.astype('float32')) # shape=(8, 14, 3)
uop_10767 = relay.sinh(call_10722.astype('float32')) # shape=(8, 14, 3)
uop_10769 = relay.sinh(call_10723.astype('float32')) # shape=(8, 14, 3)
output = relay.Tuple([uop_10761,uop_10767,])
output2 = relay.Tuple([uop_10763,uop_10769,])
func_10776 = relay.Function([], output)
mod['func_10776'] = func_10776
mod = relay.transform.InferType()(mod)
output = func_10776()
func_10777 = relay.Function([], output)
mutated_mod['func_10777'] = func_10777
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10373_call = mod.get_global_var('func_10373')
func_10375_call = mutated_mod.get_global_var('func_10375')
call_10792 = relay.TupleGetItem(func_10373_call(), 0)
call_10793 = relay.TupleGetItem(func_10375_call(), 0)
func_10202_call = mod.get_global_var('func_10202')
func_10204_call = mutated_mod.get_global_var('func_10204')
call_10797 = relay.TupleGetItem(func_10202_call(), 1)
call_10798 = relay.TupleGetItem(func_10204_call(), 1)
func_1118_call = mod.get_global_var('func_1118')
func_1121_call = mutated_mod.get_global_var('func_1121')
const_10809 = relay.const([-9,2,6,7,5,2,5,-8,-9,-7,-2,3,4,-2,4,-10,8,2,5,-7,9,-10,7,1,6,-5,3,-4,-7,-2,4,1,4,-9,3,1,-5,6,10,-8,-5,5,-10,7,-5,-6,10,4,-3,5,7,5,9,-2,9,5,2,4,-9,9,9,-5,-5,5,2,-1,7,10,9,5,3,-4,2,-9,8,-6,-1,5,2,3,1,-2,10,-4,-4,-1,-9,-4,-4,3,-8,8,-2,7,-5,7,-4,4,-10,5,7,3,-2,10,-1,-7,-4,10,7,1,8,8,6,8,-2,2,-10,9,3,7,4,2,-10,-5,10,1,-5,-1,-2,-7,-3,-8,-5,4,-8,-1,-6,10,5,-3,1,-4,2,7,6,2,4,-2,-7,-6,-9,5,10,-3,1,2,9,-8,3,9,-9,1,-9,2,-9,-10,7,-6,-3,4,7,7,3,-1,9,8,-8,-1,1,-4,-2,-1,-2,-8,7,2,-9,2,-2,-8,10,7,2,9,-1,-4,-9,-4,5,9,-5,8,8,5,10,9,7,1,5,-5,-3,9,-5,5,8,-3,-3,-6,8,10,-3,9,-6,1,10,-8,-4,-5,4,10,3,3,-2,-8,-2,-10,9,7,10,9,-4,3,5,-9,-9,9,2,-2,4,-5,-8,1,4,5,4,4,-10,-5,6,-4,-3,-10,6,9,2,4,9,-9,1,-9,-5,-2,1,-10,3,3,-6,1,7,-9,4,-10,9,9,3,-5,-10,-3,-6,7,6,5,7,3,-6,2,6,-6,-1,-4,-3,-3,10,4,-1,-5,-5,1,8,5,-6,5,-8,8,-8,-6,-5,-3,-6,-1,10,-6,-8,-6,-10,-2,7,-2,-10,8,5,8,10,-5,8,3,-1,4,5,8,10,-4,9,6,8,-9,6,3,9,-2,3,7,-6,7,-1,-9,-7,10,10,-7,-7,-1,2,-9,-3,1,10,-4,-9,10,-8,-2,5,-10,7,-5,-4,9,4,8,-1,-7,-7,9,-2,9,-9,4,3,1,3,-6,4,-2,3,6,-9,7,4,5,7,7,-4,-10,-6,9,-6,-6,-2,9,-10,-3,9,-6,-8,-2,-4,-10,9,7,10,-7,-5,-1,1,4,6,-10,-9,-2,9,1,1,4,-1,7,9,2,-7,10,-2,9,4,-4,8,-2,-8,-2,4,10,9,9,-3,1,-1,-10,-7,-10,10,4,10,9,-8,-6,9,8,-5,-5,9,8,8,2,9,-6,7,-1,7,4,2,-8], dtype = "int16")#candidate|10809|(480,)|const|int16
call_10808 = relay.TupleGetItem(func_1118_call(relay.reshape(const_10809.astype('int16'), [16, 5, 6])), 0)
call_10810 = relay.TupleGetItem(func_1121_call(relay.reshape(const_10809.astype('int16'), [16, 5, 6])), 0)
uop_10819 = relay.log10(call_10792.astype('float32')) # shape=(8, 14, 3)
uop_10821 = relay.log10(call_10793.astype('float32')) # shape=(8, 14, 3)
func_10466_call = mod.get_global_var('func_10466')
func_10472_call = mutated_mod.get_global_var('func_10472')
var_10825 = relay.var("var_10825", dtype = "uint8", shape = (1, 192))#candidate|10825|(1, 192)|var|uint8
var_10826 = relay.var("var_10826", dtype = "uint16", shape = (117,))#candidate|10826|(117,)|var|uint16
const_10827 = relay.const([-9.308794,8.301231,1.748351,3.198289,5.145467,-9.450260,9.212419,-6.211849,-2.334672,7.340840,5.681677,8.071107,-7.108709,-3.223851,-8.034168,2.323053,-2.734551,0.468435,-5.048879,2.824023,-4.138755,4.402838,-5.441849,1.773026,4.025337,0.092678,6.058337,-3.996760,9.000882,4.438750,-0.174955,-9.201106,7.707116,-2.226355,9.721328,5.783121,-0.581287,8.876489,7.686981,9.654141,0.190527,2.441597,-8.290454,-6.514984,-0.849322,2.796335,9.153617,4.339077,7.752802,-4.604447,-8.333372,-0.167730,-9.196675,2.849437,-8.968226,-5.957155,3.144226,0.879476,-0.006572,-6.684963,8.179565,3.243743,4.079828,-0.521862,9.132281,2.963420,-7.395813,-5.792013,7.120254,-3.985712,-6.354534,-6.255406,9.551970,4.236634,6.595832,-6.223939,4.884420,0.869223,4.117446,2.920803,-3.361438,-1.272223,-5.354053,-3.678503,-8.170406,-9.042463,5.247297,-2.870541,-7.619983,-6.201884,3.344558,-1.545040,9.637123,-1.234490,8.156734,9.268247,-4.122557,6.234098,-7.235218,8.519469,-5.876443,5.557484,-9.079855,-0.692558,-3.068815,-6.175580,-4.186543,-0.985932,5.618582,-4.245275,0.420901,-7.714447,9.781899,-7.473311,8.429287,-0.668989,8.846094,-4.618011,7.414053,-4.357810,3.582329,-9.074080,-5.934553,5.439246,7.736890,-9.035220,2.585352,-7.422642,-9.276191,-2.025236,-2.746763,-7.427198,7.256857,5.858091,7.092132,-7.347786,4.845459,-9.415423,6.893021,4.917263,7.318268,9.839412,-8.466383,2.846482,5.069233,4.968021,-5.853500,3.430374,-4.774384,6.817835,0.381097,-4.988806,-0.670988,-8.015359,4.547505,-3.978247,3.836728,8.743753,5.681040,8.947938,5.411945,3.370280,-1.990441,2.769247,2.322290,-0.407240,-6.263670,4.038775,-3.236371,-5.647163,6.671617,-0.403729,5.376953,0.405511,8.831010,8.413201,4.504262,-7.341432,6.546755,-2.276327,-4.319795,8.854850,5.937765,4.911644,-7.821824,5.859993,-8.608349,1.679360,-8.939503,9.139477,9.623629,-9.066147,3.254149,-2.326631,-5.687362,2.227375,5.629926,6.611026,-6.421773,-2.895460,-5.718938,-8.863423,-9.344710,-0.055663,-4.883991,-6.716645,-1.135454,-5.997188,6.439539,6.494378,9.313687,1.112225,6.359470,-3.899782,3.434347,6.964919,-3.788490,7.394235,8.103721,9.344640,3.500805,5.559662,-9.037394,9.353002,-1.926051,7.816131,0.485905,-3.306000,8.802417,-6.237301,-8.185578,4.093125,-0.254197,6.583467,-7.248289,1.396873,-5.859569,-2.903405,1.900816,-2.544285,-1.876931,8.218737,-6.189055,-3.347260,-1.767432,7.384779,-3.612695,-8.901359,6.379852,-5.128924,-4.704810,6.696999,-6.587164,-2.273172,9.909141,4.616126,-7.484689,3.417158,0.667574,0.590899,8.923170,-2.273992,1.265077,-1.148330,-5.793384,-0.470779,-4.737906,1.595268,5.009641,-7.166070,-3.702659,-3.110950,2.995118,-7.609578,-4.530730,-4.097627,-8.846397,2.844240,7.699690,-8.474529,0.059154,6.561297,-6.523026,-7.494944,-4.917960,-4.428229,2.450272,0.963565,-1.522416,6.916111,5.384676,-2.584948,-6.555400,6.440824,0.144109,2.832471,1.988302,1.922469,3.650310,6.463914,-4.616665,-1.509280,3.348375,-4.779988,2.988393,-0.242679,-5.482330,-3.602327,-1.807263,-0.500469,1.730117,-0.982433,-9.857488,-5.914068,-9.646707,6.490741,1.084340,-0.672204,-8.663892,4.731567,-4.802383,-8.691562,-7.526084,5.421140,5.987406,7.442212,3.292496,5.117850,1.803660,4.388330,2.335576,-9.105965,-3.102782,6.206032,-6.974302,3.147608,-1.783119,2.744295,-1.323435,-1.690506,-3.395052,9.182686,2.715635,-6.885122,-4.114082,-0.405687,-6.772458,0.797057,4.912970,8.887348,7.287623,-7.932342,2.320458,-4.064319,-2.315646,3.281951,-0.216583,-3.828307,3.899607,-7.122318,-6.844847,2.149407,-5.180673,-5.675382,-2.317818,1.408907,-7.632901,9.464483,2.369819,0.957693,-5.847532,-2.520448,8.631693,1.239247,5.818829,5.462299,-0.523794,0.595593,3.788524,7.383519,4.733496,9.874995,-3.717731,3.623861,-7.797535,-8.772470,3.775440,-7.977242,1.010874,2.434863,1.786606,7.175962,-6.978507,-1.090479,-6.608799,9.884453,-8.967333,2.662515,5.137718,-0.480655,2.071605,5.603667,-1.098213,-9.177826,9.220566,-0.324527,-9.083328,-0.491883,-1.921333,-3.240203,-8.304270,6.359960,-0.266359,-9.142304,9.122861,5.364651,9.215040,-0.204290,-3.581915,2.244263,-1.895855,4.779865,0.998952,8.890413,-9.279738,-0.494564,6.284308,-6.888859,-7.492596,-5.017311,1.656386,0.336244,-6.734382,-2.402276,-3.345554,-4.057532,-4.227480,1.576291,5.684587,3.090711,-5.195780,7.853316,8.553056,2.217661,-6.038595,-7.733708,5.136813,-9.125733,2.271900,6.959736,-6.378146,-6.178692,7.797424,2.847961,2.527775,-2.783880,-2.247273,9.237598,7.277258,-2.237293,-2.645531,-9.905101,-8.976528,5.635313,0.712810,9.286776,-0.921368,-5.158773,1.770805,1.141949,6.300349,-2.199724,8.743815,6.378863,-8.277831,-8.177625,-9.181125,-1.851066,4.822252,-5.159854,-5.850381,-0.438453,-5.100650,-1.751014,-5.877309,-5.782455,-6.686509,-3.398249,-9.528582,-4.892994,2.374576,-8.490012,0.028481,-7.698274,-7.612515,-1.309404,-4.738523,-4.989792,7.622484,-1.141730,-1.344156,3.323511,1.340298,-6.812635,-5.057072,-7.708895,2.867572,8.004576,4.613995,9.343590,1.303545,2.665293,-9.524475,-5.788633,-9.212725,-8.182333,0.151893,6.982459,6.647903,-6.001065,5.262428,5.015300,7.218516,9.544286,-2.557388,5.461812,-6.345824,8.692610,-7.450127,3.235140,-1.022320,8.136310,5.787562,-9.869595,-5.872747,-6.474370,1.577094,-9.041577,1.214997,3.909356,-5.675685,2.225203,3.669830,8.868645,-4.542202,3.441290,-5.226426,-0.728213,4.612412,-5.271381,6.471268,0.016084,-3.557449,-0.736801,-4.503598,4.268121,-3.084300,2.053672,3.709250,5.244335,7.541501,-4.367459,1.856183,-2.641660,5.427206,-7.676430,4.673512,1.105907,0.501319,0.487319,-9.973188,-7.135442,2.331151,-4.527078,-0.892779,-3.830133,-5.828792,-0.744102,5.532221,9.722892,1.141660,-6.198752,1.973728,8.669160,5.541379,-9.072984,7.601320,-7.288699,3.998490,-6.734302,-3.161571,2.326949,1.010063,-5.340202,-4.991069,-7.172269,4.753157,8.488945,-0.158942,2.214661,1.299419,3.477265,-3.292688,-5.115741,7.976890,6.297013,0.305495,-0.655824,-0.853661,-3.541435,-6.935658,4.847095,0.082397,3.280341,7.159210,9.224049,-8.279594,6.892627,-1.284241,-4.783044,-3.590714,0.903876,1.805742,1.565687,-4.079999,-7.341119,-8.134335,-8.405258,-2.309071,1.287615,-4.840020,8.314465,-2.771720,2.250269,-8.802493,-5.426423,4.047799,-9.117964,3.647526,8.376704,4.270646,2.221628,1.587455,7.575879,7.026628,5.167958,9.221509,-4.722061,1.477387,-3.320330,-8.389594,6.288434,-4.809909,-1.582252,5.944352,5.859651,2.765257,-9.770910,-8.918302,9.923046,-8.950646,6.723592,0.424919,9.147791,2.808230,-1.492226,-5.330878,-4.857670,3.783379,5.445061,-2.847134,-6.862294,2.880310,-4.160964,-2.445341,6.149522,-5.169519,7.344112,-6.471744,-0.100855,-3.929313,4.831810,-1.092275,-1.814692,-7.226160,-9.383565,-6.687690,8.491123,2.723553,-4.174797,2.916034,6.485964,-5.599943,2.221057,5.448108,4.181910,-2.636977,3.995188,-6.348553,-0.660612,9.264893,6.344802,3.622537,8.555103,-3.810844,0.785412,6.115570,6.111446,6.655362,-7.966643,-2.314113,-3.515200,3.033582,-0.408989,0.041922,-9.497067,1.309878,1.726870,-1.185700,-8.106269,-3.821290,-0.630194,-8.825990,2.758253,-5.584589,-8.235620,9.558551,1.669639,-9.246766,-8.519834,7.912670,-6.466304,-6.927266,0.164465,-6.949386,3.624475,7.153979,-9.336291,3.803565,9.055908,-5.748226,6.223788,1.774699,-5.940767,-8.210240,4.953094,2.413308,-4.672243,7.548933,8.122633,6.372288,-5.927033,-5.419503,-3.831122,3.327363,-9.935207,-9.765210,3.816100,-6.879146,1.219989,9.343879,-4.483646,1.687593,-0.049614,6.197074,-5.626466,9.974862,7.192863,-0.050206,1.725561,-6.243456,1.309289,5.080589,-1.807554,-6.674441,-3.886531,-9.789205,-7.063716,-5.734962,0.790277,-5.742288,-9.029327,-3.609775,-1.215114,-7.785935,-8.791421,3.928347,5.792476,9.169958,-1.311523,9.327312,6.517620,-1.026171,8.189115,-2.764370,-8.847003,9.953444,-2.346916,-6.758583,-1.272820,1.387240,7.034837,-6.241146,3.424947,-7.256534,2.978684,7.941391,-0.763278,-2.230962,-4.928757,-8.542796,-3.721205,6.672557,5.277043,4.450552,-5.606579,3.491023,0.209240,-7.699949,2.202848,-0.400489,4.371508,6.740535,9.298345,2.276056,-7.973693,-1.039154,5.404592,-9.966870,-5.338507,-8.034893,-2.892924,-0.678621,5.696915,-9.962906,-9.120399,5.105622,-6.140898,3.916465,1.264331,3.433379,-8.845127,-3.035044,-8.114095,-6.285904,-5.344813,7.146835,-3.149548,-9.746278,6.242245,-3.835532,8.294029,0.662510,-3.736592,-5.438211,0.956898,-4.175374,1.757832,-9.044456,7.243105,-8.128210,4.201765,-6.027964,-6.679846,-2.985813,1.668132,5.576171,-6.300667,5.909714,4.171861,-9.883182,8.974481,-7.058804,8.816140,-2.581100,1.931097,-3.092669,5.442175,6.342047,4.697747,7.794596,-4.682950,-1.316952,8.591328,-2.868261,0.790475,2.480599,7.518938,7.135374,-7.402869,4.926705,3.953313,1.574346,-9.306556,-2.569912,-7.054536,-8.372395,-6.125572,5.841502,-1.553777,-2.842051,9.760598,3.329741,0.989532,2.884856,-3.810307,3.712300,5.928817,-1.557730,2.705354,2.304322,-8.456169,5.715587,-0.985749,-4.986892,-6.285429,-5.430800,4.905119,-9.729784,0.418527,-4.454445,-0.293731,3.369161,-8.189019,0.540045,-9.770349,8.499612,-5.483690,5.639393,-4.921034,-1.231452,-3.300244,-7.091850,-1.094315,-3.224207,-9.410714,5.486143,-1.539565,-6.029086,9.428579,4.847349,0.114977,-2.749003,3.448301,-6.946690,-0.861515,-7.742212,-9.546841,-9.713567,8.306885,-7.321482,2.082062,-8.100683,-1.218037,4.897281,-0.818821,6.258369,5.421545,9.415739,3.388117,-3.031858,-9.463241,-4.175281,2.806326,7.109617,4.786326,6.841769,-3.358010,-3.042077,-8.822930,-3.488303,-5.149069,-9.193660,4.593590,-0.672662,-3.252422,-4.261826,4.503363,8.602447,1.623246,6.723425,-7.064127,-3.153785,-3.310848,1.809254,-7.127846,8.435325,8.386000,-0.553721,-2.973811,6.676238,-2.084319,4.254533,-8.075341,-0.528758,-5.493853,-5.645423,-6.524639,5.762361,0.627445,-7.426009,-0.449354,4.151870,3.491169,-2.583431,-4.887185,-9.044273,-7.817931,0.326810,-2.628336,-1.307487,5.903911,7.122157,2.546329,7.554598,0.489116,-1.067599,0.477756,2.922412,-0.937800,-1.767153,3.527461,8.809396,3.202696,-9.790586,-1.291227,-3.449874,1.767341,-8.792177,-9.620846,-1.063613,9.058641,2.271571,-3.663956,1.828480,-3.788163,3.591136,1.730730,7.910376,9.131656,-1.398539,2.375011,-4.604313,0.790394,0.175667,-6.128394,0.852680,3.360211,-2.628511,-2.169844,-7.807173,-6.272958,-5.542571,-2.184661,-0.001841,-1.798416,6.694035,5.363880,-9.805319,-1.031543,-7.234037,2.982540,-9.624931,-3.602517,-1.465965,7.679872,3.086304,2.428846,6.162565,-6.670227,5.003129,-3.628420,-7.100950,-8.880075,-1.561987,-7.638234,4.068268,6.663099,-0.463011,0.407727,-9.035866,0.565725,-8.248607,4.017778,-2.530198,0.096742,-4.016833,6.856909,8.988937,-6.267345,-6.454146,-4.188647,-6.512158,-3.658584,5.473812,-6.387250,-2.490535,7.235471,-6.122447,-6.353634,-1.349588,-5.267811,4.284646,2.476057,-9.691319,6.479426,8.627341,-8.148514,1.225754,-3.612152,-2.088188,-1.826360,7.937512,6.430866,-5.030324,-0.162990,8.599949,-2.055892,-1.708494,0.252057,0.566429,-1.515435,-0.727658,-5.860174,1.494130,-7.488010,8.815991,-0.662988,5.670759,-6.280415,9.005871,-9.226530,-9.764916,0.993267,7.714120,0.538674,2.696719,1.197562,-1.721627,3.892635,-5.056935,-8.392200,-6.743145,-1.670408,-3.577680,-7.073990,-3.247491,4.662001,0.615694,2.064350,3.747929,0.090111,-2.669092,0.094369,-5.567789,-8.255830,-4.447612,5.291263,5.306295,-4.672377,-4.731669,7.278828,-9.050094,2.088328,-0.724761,-6.988483,6.950473,-8.458089,-6.800546,9.324045,2.183424,3.405848,-0.708544,-7.723236,8.317904,3.919828,7.607879,-4.333603,2.164559,2.132517,-9.391483,-9.753979,5.963363,-6.898937,-3.681903,3.927769,3.024665,7.616530,5.475016,-8.906326,6.879972,-5.009941,-3.772505,-8.914529,5.660177,1.564061,6.694020,1.214586,7.918672,-5.313942,1.957657,1.584845,-2.245293,-9.368490,-2.360337,-1.895134,2.532119,3.664232,9.606930,1.215953,7.388548,2.123611,-3.135445,-2.470683,-4.162719,9.360391,-9.246839,-4.363356,-7.915802,-4.619008,3.216643,-5.753007,2.100286,0.583223,9.746585,6.422338,6.045076,9.490848,-5.885344,1.581460,-0.861723,-5.975642,2.941477,6.768308,-6.986013,8.243656,8.561619,-7.221761,1.450367,1.979702,-4.770064,8.072428,5.859653,-6.496844,-4.164805,-4.016880,-5.500087,4.777382,-6.187748,4.871331,-5.812622,-8.327883,-8.436940,9.567054,-9.163613,-2.657710,9.297294,4.371842,-3.304686,-8.769566,3.088463,6.282392,-1.036636,-2.593760,-3.171154,4.312031,-9.968112,-6.274497,-5.279911,-1.763339,-6.601034,0.162638,-8.003227,8.336349,-8.952685,-8.642562,-8.786334,-5.636330,-4.194529,7.725829,-7.164198,-3.739219,0.429572,-8.373892,-8.064117,-9.775785,5.572429,-3.403664,-7.788941,0.061926,-5.612631,2.879191,1.324041,9.987594,-9.360038,-5.274788,5.477280,0.066955,0.847731,-5.519258,-1.185255,7.717504,-3.282347,1.617776,5.102187,-8.777183,-1.737400,-0.150159,6.061547,-8.107790,7.612967,-1.007207,3.757410,9.267966,6.212816,-8.185433,-9.768379,-9.052223,9.550663,-4.945288,-3.760072,-2.176240,-1.699502,-0.111363,-6.391039,2.979901,-1.680964,-3.423575,3.573680,-4.659068,7.008409,-5.708162,-0.803830,3.897088,-2.546667,-3.843511,-3.367183,-9.988870,-0.848877,-6.119322,4.456026,-0.071048,4.178094,8.130348,-0.959290,-3.492888,-4.656160,6.144025,6.560812,-5.606972,-6.476098,-2.686642,-4.497390,0.082450,2.773184,2.122139,8.721846,-1.370378,6.028569,6.532244,-7.013820,5.275654,-0.002170,2.685635,9.938176,-5.770259,2.489456,-6.826896,6.467711,-5.345040,6.925664,6.957571,8.211224,-7.270568,7.487951,-9.639966,3.630754,-4.519406,-9.546160,9.571065,8.084018,-5.976474,-6.117188,-0.519989,-5.565173,-9.065162,0.052477,3.737869,-3.920837,7.119605,8.917117,0.785196,4.524508,1.452166,8.594617,-2.512209,-6.106366,1.251917,0.784462,-8.097299,-5.429612,-7.803558,-0.752731,-6.888118], dtype = "float64")#candidate|10827|(1404,)|const|float64
const_10828 = relay.const([5.901942,0.357524,3.866488,8.257133,4.639325,3.515621,-0.891867,-6.347888,2.560033,8.219579,3.438525,5.334363,3.100695,-1.522615,0.077319,-7.281796,-0.430065,9.587540,-2.333415,5.161705,-1.999054,2.455557,4.915768,0.858805,-7.151240,0.946496,-5.175367,8.159888,-7.285680,-9.992268,-1.741701,5.276713,-3.573654,-6.285028,9.794203,-3.669411,-4.197900,-6.437879,8.770357,-1.101695,-0.927057,9.376502,-7.644726,9.327266,3.872005,-1.897011,-1.196198,-4.475564,1.093648,1.512031,-4.408181,-7.964860,3.178307,8.759598,-4.272304,-2.503955,5.034200,2.472091,-8.664208,-9.095559,-3.105517,7.296808,-2.508275,6.669725,-8.178650,-1.020759,-1.195009,8.425129,8.913193,-6.723658,6.444776,6.702583,7.178652,-2.240723,6.911571,6.375354,-0.440008,-8.698094,-1.097258,-2.588542,-2.485446,-4.096430,4.774082,-2.012410,-7.653514,2.738629,4.548894,-6.947855,9.177102,-6.350178,2.885381,0.926595,-6.450927,6.364072,9.427132,3.747826,-0.218194,3.680918,7.767701,3.372184,-6.483645,1.647274,3.466742,-3.357441,3.071319,5.377557,-7.313501,-8.203739,-6.969546,-7.627325,6.205834,4.940745,5.209943,2.150044,-2.774966,-8.225181,5.651535,-1.565100,9.530528,-4.097987,2.584462,2.610708,-0.356312,-3.648674,3.156008,-5.752718,-1.438293,2.526141,-6.510871,-1.636151,5.030972,-8.514341,5.653579,1.902804,2.123971,7.944790,3.978803,8.859179,-4.764473,-9.452510,-0.674029,-5.344848,-8.256526,-2.465527,-3.288466,1.081953,4.455605,6.002267,-2.075074,2.069474,-6.798659,-6.717114,7.902979,4.647382,0.330766,-1.836533,-6.435158,-3.961036,-0.619974,-3.384737,1.850470,-1.446783,7.450061,0.155267,-0.045406,6.239660,0.932707,-3.606890,1.041493,-9.606110,9.229422,-7.288628,8.655566,-3.881900,1.509476,2.946805,-5.863057,1.553576,9.360388,9.536163,4.602570,-9.733837,-9.472758,-4.918756,-2.960559,-7.297469,5.700240,7.565120,4.027978,-2.729100,-4.797657,8.245440,4.544216,-1.733629,-8.484021,-0.279179,9.435326,-2.969564,7.168330,6.201750,-5.283442,7.785792,9.057634,-5.765651,-8.370008,0.927978,-9.231184,8.130081,-9.662378,-2.201046,2.034446,-7.964109,9.155663,-2.486842,1.520042,-0.150587,9.313834,5.228825,7.968314,9.271866,-7.142309,-3.868196,8.337846,-7.245943,-8.539719,-8.515869,0.460100,-1.573959,-3.658313,9.512781,-1.544149,6.498936,4.190360,-1.813317,-5.966199,-7.146613,9.371083,-2.968439,-4.980796,-5.714874,8.290260,-9.952138,8.128762,-0.369643,8.859092,-0.638940,4.802057,6.980204,-3.247973,4.660688,5.202309,-5.395682,9.988175,-3.095048,6.545306,-9.434490,5.678829,-9.697980,4.336046,-6.511488,-4.463284,-1.800442,-3.213093,3.984895,-4.386000,-4.668008,-0.253187,-6.641430,3.556467,-8.058361,7.290834,1.021365,3.871197,1.752486,-8.342986,-6.653387,-8.209248,6.722739,-0.747967,-5.871896,9.584165,9.643600,4.987559,2.930503,-6.310228,9.749893,-7.441406,-5.438124,-2.724880,-0.011712,-3.750620,-4.980136,-8.521683,9.714574,-9.653309,0.877904,-5.304774,8.787490,-3.779696,-0.059276,-0.771366,-9.284525,9.668479,9.756398,-4.711124,-2.641715,-0.094714,-4.799016,-5.662812,6.678821,1.067437,2.013435,5.878166,1.067553,9.987340,-7.300472,8.738015,5.952888,-6.493063,6.662002,-1.086644,1.725958,-6.842763,4.289486,4.748479,2.740349,9.828722,8.453516,5.590644,-3.264533,-9.888295,9.258714,1.606329,-4.445714,7.361123,8.036541,-8.077798,-9.659488,-5.722101,5.883840,-0.184276,-9.724832,9.463791,8.422798,-2.965293,-3.005632,-8.749426,-3.964390,-6.612842,2.197512,-6.445693,9.462587,6.785457,6.834780,-8.609504,-6.305749,2.598250,-6.750498,-4.790726,-8.779822,-5.725734,5.819112,-5.507810,-7.688599,8.260740,-2.489749,-2.959205,-0.711205,3.929221,2.641559,-3.180999,-0.055168,-0.915203,3.798475,-3.561054,3.441963,-3.105070,-7.801439,8.898614,1.911760,-9.990419,-8.125947,6.560425,7.445939,1.385972,-8.592337,-7.856863,7.832428,-1.089698,6.373892,-3.522501,3.571167,0.932710,6.101248,-6.687464,5.880436,-3.845607,-8.790925,-2.346982,-3.405151,-9.620000,-9.849432,-8.091880,-9.062729,-5.261447,3.354952,-5.801010,6.183337,-1.622669,-3.924540,4.436927,-8.985281,-8.425855,5.848374,-8.321909,-0.669628,0.912073,5.541442,-5.254323,-5.009829], dtype = "float64")#candidate|10828|(420,)|const|float64
call_10824 = relay.TupleGetItem(func_10466_call(relay.reshape(var_10825.astype('uint8'), [192,]), relay.reshape(var_10826.astype('uint16'), [117,]), relay.reshape(const_10827.astype('float64'), [1404,]), relay.reshape(const_10828.astype('float64'), [5, 84]), ), 5)
call_10829 = relay.TupleGetItem(func_10472_call(relay.reshape(var_10825.astype('uint8'), [192,]), relay.reshape(var_10826.astype('uint16'), [117,]), relay.reshape(const_10827.astype('float64'), [1404,]), relay.reshape(const_10828.astype('float64'), [5, 84]), ), 5)
output = relay.Tuple([call_10797,call_10808,const_10809,uop_10819,call_10824,var_10825,var_10826,const_10827,const_10828,])
output2 = relay.Tuple([call_10798,call_10810,const_10809,uop_10821,call_10829,var_10825,var_10826,const_10827,const_10828,])
func_10843 = relay.Function([var_10825,var_10826,], output)
mod['func_10843'] = func_10843
mod = relay.transform.InferType()(mod)
var_10844 = relay.var("var_10844", dtype = "uint8", shape = (1, 192))#candidate|10844|(1, 192)|var|uint8
var_10845 = relay.var("var_10845", dtype = "uint16", shape = (117,))#candidate|10845|(117,)|var|uint16
output = func_10843(var_10844,var_10845,)
func_10846 = relay.Function([var_10844,var_10845,], output)
mutated_mod['func_10846'] = func_10846
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9526_call = mod.get_global_var('func_9526')
func_9528_call = mutated_mod.get_global_var('func_9528')
call_10872 = relay.TupleGetItem(func_9526_call(), 0)
call_10873 = relay.TupleGetItem(func_9528_call(), 0)
func_10466_call = mod.get_global_var('func_10466')
func_10472_call = mutated_mod.get_global_var('func_10472')
var_10876 = relay.var("var_10876", dtype = "uint8", shape = (4, 48))#candidate|10876|(4, 48)|var|uint8
var_10877 = relay.var("var_10877", dtype = "uint16", shape = (39, 3))#candidate|10877|(39, 3)|var|uint16
var_10878 = relay.var("var_10878", dtype = "float64", shape = (1404,))#candidate|10878|(1404,)|var|float64
var_10879 = relay.var("var_10879", dtype = "float64", shape = (70, 6))#candidate|10879|(70, 6)|var|float64
call_10875 = relay.TupleGetItem(func_10466_call(relay.reshape(var_10876.astype('uint8'), [192,]), relay.reshape(var_10877.astype('uint16'), [117,]), relay.reshape(var_10878.astype('float64'), [1404,]), relay.reshape(var_10879.astype('float64'), [5, 84]), ), 2)
call_10880 = relay.TupleGetItem(func_10472_call(relay.reshape(var_10876.astype('uint8'), [192,]), relay.reshape(var_10877.astype('uint16'), [117,]), relay.reshape(var_10878.astype('float64'), [1404,]), relay.reshape(var_10879.astype('float64'), [5, 84]), ), 2)
uop_10886 = relay.sinh(var_10876.astype('float32')) # shape=(4, 48)
output = relay.Tuple([call_10872,call_10875,var_10877,var_10878,var_10879,uop_10886,])
output2 = relay.Tuple([call_10873,call_10880,var_10877,var_10878,var_10879,uop_10886,])
func_10890 = relay.Function([var_10876,var_10877,var_10878,var_10879,], output)
mod['func_10890'] = func_10890
mod = relay.transform.InferType()(mod)
var_10891 = relay.var("var_10891", dtype = "uint8", shape = (4, 48))#candidate|10891|(4, 48)|var|uint8
var_10892 = relay.var("var_10892", dtype = "uint16", shape = (39, 3))#candidate|10892|(39, 3)|var|uint16
var_10893 = relay.var("var_10893", dtype = "float64", shape = (1404,))#candidate|10893|(1404,)|var|float64
var_10894 = relay.var("var_10894", dtype = "float64", shape = (70, 6))#candidate|10894|(70, 6)|var|float64
output = func_10890(var_10891,var_10892,var_10893,var_10894,)
func_10895 = relay.Function([var_10891,var_10892,var_10893,var_10894,], output)
mutated_mod['func_10895'] = func_10895
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10030_call = mod.get_global_var('func_10030')
func_10032_call = mutated_mod.get_global_var('func_10032')
call_11000 = func_10030_call()
call_11001 = func_10030_call()
func_4005_call = mod.get_global_var('func_4005')
func_4007_call = mutated_mod.get_global_var('func_4007')
var_11010 = relay.var("var_11010", dtype = "uint8", shape = ())#candidate|11010|()|var|uint8
call_11009 = relay.TupleGetItem(func_4005_call(relay.reshape(var_11010.astype('uint8'), [])), 0)
call_11011 = relay.TupleGetItem(func_4007_call(relay.reshape(var_11010.astype('uint8'), [])), 0)
output = relay.Tuple([call_11000,call_11009,var_11010,])
output2 = relay.Tuple([call_11001,call_11011,var_11010,])
func_11017 = relay.Function([var_11010,], output)
mod['func_11017'] = func_11017
mod = relay.transform.InferType()(mod)
mutated_mod['func_11017'] = func_11017
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11018 = relay.var("var_11018", dtype = "uint8", shape = ())#candidate|11018|()|var|uint8
func_11017_call = mutated_mod.get_global_var('func_11017')
call_11019 = func_11017_call(var_11018)
output = call_11019
func_11020 = relay.Function([var_11018], output)
mutated_mod['func_11020'] = func_11020
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9692_call = mod.get_global_var('func_9692')
func_9694_call = mutated_mod.get_global_var('func_9694')
call_11036 = func_9692_call()
call_11037 = func_9692_call()
func_9287_call = mod.get_global_var('func_9287')
func_9290_call = mutated_mod.get_global_var('func_9290')
const_11045 = relay.const([[-9.577409,-8.088514,-9.220090,-5.119063,7.857965,3.636929,-7.084350,-4.108684,2.313836,-2.327133,4.416071,8.449161,-5.438739,-0.555120,5.369170,-3.857998,-9.416687,8.132993,8.832568,-1.186934,9.165624,7.542106,-6.074070,9.658922,2.711050,4.904684,-4.656780,1.840284,-7.835991,6.181432,-3.775872,7.146796,-8.384933,6.537922,-0.653935,-0.513606,7.248625,4.652813,6.396334,0.407919,5.674513,9.384499,8.953699,-5.532122,-9.347888,3.813385,0.828204,-7.435852,1.693199,5.292778,1.356850,5.813987],[4.588224,-1.859614,2.768701,4.687290,9.649901,-1.734941,-9.312546,-9.687471,-7.547719,6.266275,-6.128377,1.390602,7.587802,6.503468,-3.198441,6.903748,3.446236,8.460832,7.434211,5.508727,9.908334,0.752586,9.349523,8.829042,4.707006,8.093172,-1.867165,-4.127661,-8.968394,-5.742207,-8.138759,-3.883568,-2.624085,7.026770,4.467432,-0.107935,-1.152534,-9.501622,2.912937,-6.219445,-0.099265,-5.880609,-3.809939,-9.441726,-8.271863,-7.973230,-0.343718,-4.436621,-1.391497,-2.461183,9.609659,-2.221970],[-5.466537,4.700544,-0.412702,-3.844266,8.665500,5.065780,8.956450,-9.885268,7.161317,8.235834,-9.697741,-0.749561,0.428300,-1.243464,2.786685,-6.122516,7.824252,1.541022,4.864999,-3.327041,-8.416397,6.149793,5.553980,4.477962,-5.119340,-0.747607,-5.169244,1.107455,8.144419,-3.801396,-4.020137,-6.396849,-4.423516,-3.207629,4.835222,0.626094,-5.315918,-9.696905,-5.473705,-1.708867,-1.497571,0.661029,1.272384,-6.274278,-7.927755,7.698144,0.559595,-0.736115,0.510136,-4.962006,7.386029,-2.703110],[-9.361089,5.918026,-1.098542,5.751568,-1.009874,-8.329353,6.424213,-2.164396,1.423333,-1.372513,1.977888,2.286091,8.573198,-6.693595,5.188557,2.399615,7.595994,-9.831928,-1.513152,-2.622989,2.488697,0.354877,0.583832,-6.986937,1.813732,7.822708,-7.971111,-4.538602,-4.510003,-1.633215,8.821527,3.834986,9.980080,7.282903,9.538240,-4.659407,-7.759048,7.052265,-6.377854,-2.984941,4.896377,-8.845758,-0.458876,6.109183,0.486287,-5.423208,0.845101,8.741939,-8.055513,2.481421,-4.225439,-0.741159],[3.896153,-3.530266,0.959015,0.385923,0.511560,-8.733714,-0.573616,-6.923535,-3.074123,2.617465,6.320674,-1.916781,0.100889,6.057661,5.889570,-9.523363,-5.340883,-9.191958,2.336653,-5.829378,-1.041322,7.719780,-1.470198,-9.012860,-7.713329,1.352876,3.768238,6.275052,2.704378,-4.621368,-0.921732,1.660795,-5.139983,2.986553,2.111714,-9.381348,-2.514998,7.684596,0.728494,0.317394,8.887942,3.068582,-4.317777,0.460613,-8.939577,9.526567,-9.615649,5.526902,-3.254736,-2.683726,-5.833982,4.474947],[-2.798099,8.838367,9.861585,-8.053521,2.686747,9.149537,-5.037693,5.805156,-9.004269,-1.869691,8.759101,6.071587,-9.916508,-4.144039,-9.770770,6.132885,-2.254419,2.456328,-5.744346,-8.603793,1.408774,6.150645,-2.580460,-5.124486,3.603666,7.499562,-7.361748,6.824917,-3.591608,9.890374,3.173109,-1.896615,-4.073498,4.589094,3.289391,-1.712387,8.211793,-4.593582,3.160658,1.389033,7.020574,9.276099,3.784837,-2.580512,-4.607927,6.491299,6.181407,6.379811,1.179864,-8.306031,-2.565454,5.131723],[-2.024145,0.974934,8.478423,1.555868,9.262031,-8.296980,7.731367,1.031406,6.788698,7.216421,-5.944722,-2.774015,-6.148762,-2.837861,9.382748,-1.917211,4.249294,6.930579,-6.591091,-5.557311,-0.591997,5.820542,0.907739,8.339653,2.551930,4.006938,-7.915572,9.022275,-8.781619,6.256954,5.909268,-6.250081,-5.625184,0.452778,-1.778636,-3.094888,1.238705,-5.590717,-2.713507,8.897337,-6.837282,0.655719,-1.893080,6.412941,-7.119357,-9.355309,3.811339,4.102451,7.317272,-3.758091,-2.483333,-3.288729],[-6.456511,-5.309052,-7.322980,-4.553516,1.974891,8.030711,-5.166858,-3.173167,-9.095569,7.497240,4.577896,0.030360,3.449668,-4.920848,-4.931670,7.439497,8.651229,-0.766469,0.324036,4.275810,-5.697823,-7.997745,6.275526,-3.752622,-8.915250,7.420641,-6.720109,-2.229338,1.070116,0.638103,3.137045,-2.109987,-4.401627,-8.386551,-7.150957,-5.126518,9.751066,8.598250,-7.321481,-0.149290,1.459138,-7.874343,-2.391669,-7.918607,-0.429609,8.984354,-7.864909,-9.391900,-2.792873,2.575992,-1.005211,-5.143120],[-2.375826,6.531535,7.308287,5.563336,7.044810,-3.708189,-7.843013,2.284892,-3.549961,-0.948434,8.227490,5.645540,-9.466690,-7.753369,3.776045,-4.057638,-0.951490,-6.077358,7.470918,0.910192,2.651025,-9.058903,-7.144336,-2.208818,-3.440698,2.727263,-2.155151,-1.829982,6.774780,7.161502,0.282424,2.846224,2.045139,9.639295,1.820490,-1.284699,-5.544652,5.846070,-5.062002,2.598169,-6.200270,-7.656014,7.157593,9.458136,6.746233,1.178195,-6.368731,3.613068,-9.770304,-2.498982,6.050394,0.320593],[0.741307,-0.646370,-3.597627,1.865024,-7.345934,4.827289,-1.624803,1.498769,-1.970455,-1.688572,1.993160,-8.380035,-3.628771,8.352236,3.867623,6.108810,1.882237,5.323225,4.828947,2.291731,-1.321767,4.829533,8.062326,1.941863,-1.669380,9.208562,8.645563,3.186091,-1.785747,0.032858,3.393945,2.950411,-2.647193,1.530172,3.153429,2.600428,6.381488,-9.855203,7.594792,-3.468962,3.707231,2.133771,-0.354542,-0.817092,-2.551773,-8.488169,-6.191663,-8.635522,-8.578581,-6.216082,-8.920852,-6.718203]], dtype = "float64")#candidate|11045|(10, 52)|const|float64
call_11044 = func_9287_call(relay.reshape(const_11045.astype('float64'), [4, 13, 10]), relay.reshape(const_11045.astype('float64'), [4, 13, 10]), )
call_11046 = func_9287_call(relay.reshape(const_11045.astype('float64'), [4, 13, 10]), relay.reshape(const_11045.astype('float64'), [4, 13, 10]), )
func_9600_call = mod.get_global_var('func_9600')
func_9601_call = mutated_mod.get_global_var('func_9601')
call_11054 = func_9600_call()
call_11055 = func_9600_call()
func_9287_call = mod.get_global_var('func_9287')
func_9290_call = mutated_mod.get_global_var('func_9290')
call_11061 = func_9287_call(relay.reshape(const_11045.astype('float64'), [4, 13, 10]), relay.reshape(call_11044.astype('float64'), [4, 13, 10]), )
call_11062 = func_9287_call(relay.reshape(const_11045.astype('float64'), [4, 13, 10]), relay.reshape(call_11044.astype('float64'), [4, 13, 10]), )
func_5003_call = mod.get_global_var('func_5003')
func_5005_call = mutated_mod.get_global_var('func_5005')
const_11064 = relay.const([8.266556,-2.550827,-5.910979,-4.597758,7.145155,8.068134,7.329941,8.038438,3.529003,-5.599893,6.611334,9.092105,2.683565,1.529274,9.560958,6.896546,-3.228988,5.808739,0.036749,-0.930205,8.359187,0.557058,4.165524,4.600119,4.059655,-8.773042,-3.060724,-8.729671,-2.750299,-4.364325,8.693343,-8.241867,3.563275,-6.763518,7.474720,-8.282864,-4.972329,9.316313,-8.047407,7.645748,5.609486,6.445051,0.523812,6.355394,5.857326,3.782083,1.965304,-0.681259,-5.710193,2.270026,-5.518217,-8.721452,7.017192,-3.458787,-0.957510,8.592800,9.426453,6.956637,-5.757740,-5.116324,8.168084,-1.909685,-8.672126,7.679784,-9.206987,-2.428031,-0.509051,9.395273,7.915169,-0.506600,9.875460,6.275254,-8.818914,1.027041,1.796009,-3.155174,-8.619416,6.734829,-9.669530,9.125819,1.460954,2.058968,-6.012811,5.974286,-5.513652,0.794135,5.757698,-2.335365,0.119571,-2.154018,2.065636,5.644823,7.591116,-5.238269,-3.121928,-5.931581,-9.578377,2.685660,3.377566,-0.191089,-1.198914,1.906440,-4.901475,5.531488,-8.840962,-6.474683,4.422231,0.983119,-8.100458,-1.219184,4.279893,-9.728303,-2.998452,-8.666237,-8.594285,9.160741,-7.047053,-9.416803,-5.908605,-4.512420,3.917460,-1.522749,7.190684,0.348248,-5.674629,-6.074651,4.867900,4.860465,-0.691281,4.503690,-8.414175,-1.542320,6.038791,4.572591,-1.536509,-9.861021,-0.255100,-9.681540,-1.988180,7.391091,6.357429,-8.041672,-0.092351,-8.700135,5.363046,1.734361,-7.261315,-2.768134,-9.541393,9.062052,-1.359394,-9.674901,3.455507,-0.417398,-8.845036,-9.650042,0.986742,-0.819436,-8.247090,-1.504195,-1.563629,9.496297,3.182171,0.715198,0.144491,8.896044,-5.720196,-2.946505,-1.200074,-5.565424,-2.252397,2.193632,1.024549,4.453019,-1.213600,-1.047837,5.421844,-4.657067,6.667971,-5.936884,-3.037449,-6.619618,0.638041,-5.009653,7.844301,-1.533906,9.931517,3.697933,-8.601257,-3.279911,0.142055,6.776841,-5.585163,2.840835,2.151739,-8.932306,2.231839,7.631374,2.271055,5.213111,-7.967826,-2.128598,1.120876,-0.222067,-5.025349,-8.448007,1.149878,-7.157100,3.902068,-7.971633,6.034694,2.512503,2.598141,1.941636,-8.995030,-1.198358,7.713275,5.478933,-7.658980,-1.073889,-4.555513,-9.104012,-5.180500,-5.836971,2.984031,9.774118,6.132515,0.407544,3.210636,-1.604973,2.285153,-9.279004,2.016936,5.469719,4.070514,9.632849,5.966377,-4.114809,-8.996053,6.941110,6.767962,1.453967,6.373859,9.062688,2.896853,4.417382,-5.120220,3.725636,4.161085,-3.019968,-3.243829,-9.889513,2.105391,-4.466409,3.191486,5.072910,-4.961644,-0.096631,-6.854369,-9.595493,1.116877,-4.033352,5.009756,6.875881,7.525492,3.119610,8.306318,8.388465,-9.210979,9.217791,0.065012,-2.552870,7.451178,-3.809417,3.493525,6.262469,-7.580397,-7.559365,-7.370040,-3.220874,9.752247,8.274014,5.651428,-0.725807,-8.294991,-5.752438,-1.529841,4.747600,2.109926,1.105342,-8.620066,1.053392,8.484120,-1.965151,0.377408,5.429011,9.487543,-5.330743,5.117095,-5.276964,-4.247499,6.986954,-2.547218,-7.265634,-0.704997,-1.106244,-0.133345,5.620524,3.413801,5.726839,-0.388235,-3.466132,-9.527292,3.725663,5.400132,7.169365,-7.927367,-6.723868,-9.366455,-1.099188,7.063979,0.871005,-3.844505,6.932931,4.875265,-9.240630,9.367739,9.181396,1.255540,1.565774,-8.552505,-8.583823,3.935324,6.868731,9.432044,8.049612,-8.309249,9.857093,8.768209,6.848027,4.600834,8.159959,-4.917770,-8.058134,3.717711,-1.988207,5.306131,-8.482761,7.841869,-6.303002,2.364564,5.126671,-1.049312,-8.830338,6.930976,-0.458246,4.840537,5.361781,-9.893798,-3.457733,8.744579,-7.885145,5.006539,-5.805108,-7.352161,-8.574700,-4.574633,-6.303997,-3.856595,-4.555326,-1.342691,-1.931144,-0.976586,2.200849,-8.356084,-7.557351,-8.597466,-7.471585,3.405028,-5.521710,9.758513,5.208889,4.128809,-7.300676,-4.933488,9.370074,-4.277155,4.363108,-3.690526,7.154144,-2.846619,-3.928458,-0.729206,-4.526827,3.645557,-5.620470,8.455649,-8.000416,2.816640,-2.267150,-4.261796,-3.801617,-7.053409,4.657290,-8.141215,2.608910,5.093295,2.001126,-2.308062,6.300425,-4.472234,-1.261664,-0.861448,-5.497702,7.558401,6.843895,0.014782,-3.888653,2.335466,-0.725881], dtype = "float64")#candidate|11064|(420,)|const|float64
call_11063 = relay.TupleGetItem(func_5003_call(relay.reshape(const_11064.astype('float64'), [14, 3, 10])), 0)
call_11065 = relay.TupleGetItem(func_5005_call(relay.reshape(const_11064.astype('float64'), [14, 3, 10])), 0)
func_4041_call = mod.get_global_var('func_4041')
func_4046_call = mutated_mod.get_global_var('func_4046')
var_11072 = relay.var("var_11072", dtype = "int32", shape = (660,))#candidate|11072|(660,)|var|int32
const_11073 = relay.const([1.503413,8.430066,0.723642,0.019572,5.310880,-9.799294,-3.599552,-1.455197,5.752428,2.482183,4.551075,9.173754,5.071311,-4.448249,7.114618,8.784942,-7.223735,5.025000,4.532068,-2.037825,9.845321,-0.341656,8.463649,5.242973,-8.440588,7.731103,7.015965,5.709987,-7.997354,4.799557,0.451699,-2.096058,1.821688,4.907802,-6.855116,7.020794,-3.659306,1.465451,-7.287353,-4.772853,8.401432,3.144675,4.410118,-0.684462,-4.172010,8.260479,-9.953782,-3.505322,4.958439,-7.752683,0.675335,7.154120,7.800315,-5.618595,1.703332,-0.292094,-1.484754,3.528684,1.174777,9.571223,2.165616,3.323040,-3.860078,-6.696627,4.222726,3.321072,-4.373567,1.893762,-8.153270,-4.648802,-0.664443,-4.290246,-0.058801,-2.656714,6.812375,1.852422,-2.120366,-1.693011,-1.658598,-2.147137,-4.594059,5.475983,-6.319447,-0.090449,-3.496050,8.296487,-8.730205,7.411409,6.212629,-5.430581,-3.232087,-2.253223,-0.357439,4.747746,9.314878,-1.431719,-4.955557,-0.730524,-4.063645,7.522862,6.756974,-5.064998,-7.668013,-0.037158,9.385665,1.569745,0.235317,0.036431,-3.683797,-7.037202,-5.117357,3.292317,-5.370404,-9.051676,3.329546,7.610002,-5.107797,-3.049826,-3.760269,-0.761239,7.832872,5.601814,3.574944,-3.433525,1.876758,3.899142,8.859483,-7.019411,6.008606,0.200251,-5.522090,5.747918,-9.527103,-1.726412,7.946911,-5.252169,-4.260552,7.968929,-3.361058,7.409381,-1.872936,-0.675013,-1.674925,-3.772940,3.050985,-3.758529,-9.074246,-1.686621,9.801248,0.416951,8.444738,8.205459,5.737176,-4.329898,-2.025543,-5.911283,-4.094896,-9.497707,6.347548,-3.261409,-1.729980,7.597681,7.899736,7.759412,-7.792833,1.275570,5.779271,9.158377,9.796973,-3.885536,0.982959,-2.178097,0.727728,-9.460510,3.529358,4.254476,8.716644,3.830127,-3.304165,6.399285,1.189345,7.129930,3.533591,-3.690122,-0.480138,-4.826432,1.054581,9.520458,-5.939696,4.859739,5.356497,6.293209,2.103661,7.733151,-7.953926,-5.587423,9.464887,-8.517488,-6.596825,7.357870,5.762018,9.669717,-6.781651,-9.816924,-0.856106,2.187430,-5.106501,7.148035,9.960510,-9.093633,1.940345,6.520318,-2.625070,-0.171667,-7.780919,4.826147,8.264754,-7.205056,0.496635,-9.267694,0.484555,2.457592,3.310140,0.371156,2.970367,-7.933021,5.423652,9.496608,9.034764,-1.293091,0.842833,3.234326,-2.572384,4.585926,-1.204758,-3.945805,3.523005,-2.717995,-5.444997,1.898682,1.893696,-7.600051,0.899802,-8.429861,5.389552,4.144431,-9.538088,-0.256300,-3.570999,-5.751611,1.705951,-7.356056,1.562235,1.464165,0.219471,2.504336,-9.586073,9.855580,-1.867559,-3.514448,-9.765724,-7.115178,4.875177,-8.379772,-0.491143,-7.614517,0.372124,-6.312185,3.617339,-8.697311,-6.449826,9.436147,4.133531,1.909019,-2.440048,-6.927414,4.217121,0.397689,3.016720,-6.964575,3.273052,4.958583,-4.034978,1.572176,-4.604611,-4.596200,5.969296,8.786295,-4.208221,-0.359774,4.454876,9.262652,-8.070930,5.103988,-5.287183,0.361589,-8.628192,-0.810185,8.781587,2.816755,1.825452,-9.461664,7.947004,-3.318620,-7.347975,3.362629,6.305357,-8.186776,1.518756,9.506388,-1.991375,8.518331,7.446831,1.035673,8.961459,-1.313879,-5.125499,-5.465657,3.219503,4.585673,8.564461,4.584452,9.683474,-8.760423,2.441754,2.726645,0.339156,-7.557446,-2.210225,1.571016,-9.290941,3.811164,-1.569851,8.608474,-8.169177,-8.264976,0.419911,-8.819092,5.846134,9.365575,-5.718590,-2.777644,-9.909960,-9.841483,-4.741569,-6.902011,-2.774433,3.809758,2.242914,-4.129665,9.477029,-0.927000,-3.206182,-3.389504,8.940991,-0.311484,-1.927470,8.080343,4.967245,9.931659,2.943709,8.217343,5.983418,1.641613,6.811322,-7.712871,-5.730624,6.425905,1.722458,-1.758918,0.873730,-4.513011,-9.822046,-3.513412,-2.935099,6.526199,-7.572374,9.611876,-4.149328,-4.192697,-5.812632,-2.486872,8.087883,6.457229,2.447569,-1.024484,-6.537913,-8.893732,-9.413928,-4.431706,6.157147,0.968361,-9.627027,1.907566,6.592019,-7.007465,6.711924,-8.279749,-9.163335,1.519770,9.752672,0.217074,7.761580,-9.157113,-7.919744,-1.115189,6.209174,1.310128,-9.540597,-8.248157,1.627705,5.697641,7.047990,7.568750,6.595001,-8.772324,-3.375067,-2.793603,6.681478,-9.038238,4.285791,9.084087,-8.418650,3.404797,-2.987061,-2.986403,-1.546613,-7.639909,8.499668,-6.859241,-0.711152,3.248273,-3.466311,-6.551170,2.193352,5.905462,2.489306,1.640467,-1.092073,-0.977832,-1.014076,-4.090480,-4.168975,-1.759693,-9.272684,-6.938312,2.776742,-8.732347,1.123221,-2.939782,7.346790,-9.653244,-5.138635,-2.556344,-8.733829,4.015130,8.818093,7.453435,-6.257576,4.025836,-2.215591,-4.137854,4.994631,3.711464,0.201220,7.657667,-9.950369,-9.190146,9.584971,4.721834,0.579388,-4.224629,-3.412979,9.882296,-5.239322,7.442663,-4.664736,-1.273203,-0.053195,7.077457,0.073761,-9.406426,-3.655555,5.671073,2.733765,6.172455,2.512975,0.933530,2.905668,3.314210,1.131704,8.927843,-9.596226,-3.538782,4.359191,-4.905267,-7.340791,-3.257510,6.167082,9.552964,-9.038700,-5.155284,-0.605425,8.969765,-7.508337,4.395423,-9.225025,1.699633,1.084706,7.504238,7.647722,3.189933,6.596631,-4.642470,5.811768,5.348228,-2.205849,-6.423039,-1.598550,8.715210,-9.289668,-0.980313,5.839113,2.805160,1.629863,7.895417,-0.323071,0.612639,5.537668,4.737374,6.921294,-0.403172,-8.643672,-2.088814,4.243280,9.022262,9.550722,-3.775727,0.454490,2.878622,-7.645708,-4.846038,8.208096,-9.242085,4.244819,-9.954743,9.882371,6.605409,6.589971,-6.452174,8.908869,-7.832049,7.452167,2.824170,-1.004420,-8.043763,2.924690,2.821030,-6.595673,6.961969,4.055779,-7.514875,6.272141,-4.508356,2.410166,9.652698,-6.892931,8.510652,-0.839264,3.538014,3.410215,5.564066,-6.825173,-8.947608,8.617736,-8.977622,5.528515,3.912421,-0.396012,9.059561,-9.313939,-1.851938,-7.828364,-1.400582,-0.645856,4.386900,9.862272,4.497436,2.524139,-2.768883,7.925408,-2.767148,0.928649,6.209084,7.444784,-7.499973,2.330273,6.591744,-0.874656,-5.333050,2.630758,5.986115,3.108951,-4.449113,-0.640256,9.750130,6.831422,-3.356286,5.815400,4.965464,-7.744283,-5.630449,-9.796738,9.292049,5.613111,-8.457998,1.545929,-0.261565,-9.620915,4.523510,0.595250,-9.057563,-6.688899,-3.992290,4.194912,0.512871,7.197144,0.972375,1.974826,-8.761914,8.913985,7.763381,-4.812053,1.389881,-7.828891,6.129551,3.181898,-2.442414,-7.526754,1.189735,-4.823422,5.119037,-2.428100,-4.230284,3.666726,-1.772970,9.639042,1.555924,2.356500,-0.223233,-2.379044,-1.033072,7.657563,0.324609,3.735532,0.573769,2.613017,7.646586,-9.645489,4.172582,-5.308585,-1.230164,9.726392,-9.296143,-7.705087,-0.086749,-9.352243,-2.552607,-1.543807,-9.061744,-0.734595,9.080484,-3.152467,3.357281,-5.569221,0.084247,-5.036885,-0.789518,7.405609,4.151454,8.255238,-3.591484,-2.259047,-2.553928,5.912729,-4.778097,-8.806609,2.569681,-9.836800,8.596495,-0.554013,3.216495,-9.306129,-2.965770,-8.851837,9.338977,-1.203753,-7.502903,-9.852909,3.436385,9.533924,1.898955,0.107282,-9.846079,5.204513,3.544090,-2.512953,3.450244,-4.331323,5.925137,1.619224,0.488238,-5.279893,-3.649043,-7.152103,-2.866948,6.549543,2.972355,2.420223,-2.722065,-0.050383,-0.489266,-9.511914,1.745194,5.205444,-7.273962,-1.169719,-3.423581,9.810577,4.116042,-4.299473,4.688341,-1.318349,1.868486,-5.457737,-1.288814,5.531244,-6.183427,-4.440020,-5.386738,-4.442746,-2.080907,-4.359670,4.225047,2.316692,1.715782,7.500202,4.098858,-1.103657,1.331919,-7.918595,7.404435,-9.741080,-9.658979,4.638800,-4.894620,3.265817,-7.969519,-7.903744,6.835101,8.620669,6.538391,3.036949,-9.739765,9.055678,-1.358741,4.842114,7.579698,6.382532,0.328614,8.998261,-4.875252,-1.108943,-2.912763,9.209704,2.530286,8.181587,2.851598,2.931922,-0.380562,7.978838,1.607841,-6.312401,-9.366404,-0.268632,-2.241181,0.016978,-3.328350,-6.383168,-6.384134,-0.165629,-5.384492,2.668918,-9.178443,9.656499,0.760186,6.645913,7.086285,-2.336205,-4.838348,3.432105,-2.746838,6.761098,0.923825,8.339985,0.810981,1.271859,6.619175,4.789744,5.996447,-7.842301,4.277724,0.759852,7.775457,-2.130100,-4.611859,1.908694,5.268502,5.570232,-1.046101,-4.475672,-6.980084,7.953141,-1.205304,8.082896,3.300894,0.502692,-8.892306,3.322903,-5.280503,9.380166,-1.018410,0.117929,0.159808,-3.946003,2.454380,-0.092220,-5.473699,-6.319153,-0.052140,-4.677676,5.699868,8.900682,2.958062,-4.570448,-8.413461,-2.811373,-3.603803,-6.016228,8.127173,8.837947,-4.057400,-7.915951,1.939544,2.598987,0.525035,9.404535,9.680734,-6.134576,9.841064,-5.388018,-6.372787,-8.249702,-6.952739,-9.342643,0.726416,6.401394,5.078528,-1.241584,-2.957312,3.502329,-2.778748,-1.343222,1.569781,-9.968350,8.609597,-4.471880,0.178837,-3.242133,-9.085463,9.022124,-0.481742,7.979768,7.209924,-3.371331,7.657179,2.403479,-6.620868,-2.574606,-5.944290,0.737408,0.314532,7.549697,-8.462783,5.970839,-9.560099,6.897558,0.469641,4.463388,-1.486891,-5.226743,9.240638,6.687200,7.502307,3.996915,-5.378642,-9.908703,-8.040164,2.864777,7.762858,3.946702,8.423950,2.141856,6.209570,9.314337,-6.841859,-4.269143,5.391083,-8.101867,6.666660,-6.870103,-7.962246,6.504498,-4.409444,8.111921,5.126309,-0.274152,2.537336,6.064923,-2.978193,7.578366,-1.463286,-7.280457,5.762099,2.948557,-3.345529,2.331377,-6.929210,4.386802,4.637200,-4.676338,-5.052868,0.905555,-2.530787,-9.620795,-4.714267,-7.851898,2.978161,-0.398150,2.772578,4.622647,-9.390288,-1.993111,-7.593849,1.905522,-2.760502,-0.379704,-9.474427,4.170272,3.820050,7.112685,0.393722,-5.234723,-4.187728,9.632642,-0.264177,6.134641,9.531726,3.686268,-4.807581,1.245064,9.171295,9.994786,-3.659366,-1.434408,-5.694840,9.162726,2.739886,3.802705,-2.498320,8.366673,6.843248,7.671533,-1.080322,-3.592638,-8.182753,-4.518724,-4.998246,1.033160,-5.478645,-6.890264,-6.220679,-5.703059,7.648533,2.627278,-1.422655,2.045390,-8.971905,6.050633,3.491253,2.344646,4.859885,9.859719,1.735122,-7.363403,9.710671,-2.524802,-6.940151,7.306475,-8.075509,-1.710827,-8.894988,1.517568,-3.227643,2.605562,-2.022929,3.026940,-0.356932,1.786062,-6.121671,6.804061,-2.855206,6.721935,-2.956926,4.034730,8.486916,-4.303422,8.593550,-3.810447,-5.333104,8.277452,-8.573707,-9.356609,-7.728137,-0.214790,-7.361271,-0.541999,-0.099153,4.053002,-3.758147,5.054004,-4.666437,5.708146,7.397884,-3.653664,-1.061287,2.570043,-5.038083,0.395210,7.800132,6.843995,-0.546432,2.840780,7.473650,5.289609,5.048580,-1.741934,-0.727908,3.481486,2.869098,0.815136,8.845776,6.708563,2.313824,-0.277367,-8.742520,-6.270529,3.455576,3.988207,-6.182247,3.259031,-7.185616,-7.565632,6.464863,-0.884654,2.762515,-9.946956,-6.505567,-0.595152,8.315696,7.339883,7.483680,-6.851024,2.219392,2.722055,-7.215219,6.610867,-8.134744,-4.739222,7.540596,0.825188,-2.946974,8.341848,0.543146,-6.111076,1.200286,-0.660206,4.375351,7.461290,5.625284,3.399896,2.157883,-1.132129,-0.958507,-4.024716,5.314173,-4.588081,1.918188,5.674022,6.608017,5.929393,1.192301,1.540440,-9.518168,5.152196,-3.479278,-3.643691,1.992737,5.917897,4.548896], dtype = "float32")#candidate|11073|(1120,)|const|float32
const_11074 = relay.const([8,-9,5,-6,-1,-8,9,-4,-8,-3,8,-6,6,8,-7,-7,-9,5,8,-8,-8,9,-2,6,-2,9,-1,-9,-4,-2,2,-3,-6,6,-10,4,-1,-5,5,-5,10,-7,10,10,4,2,-3,-8,-3,-6,9,1,4,2,-9,6,-10,2,2,-1,-6,-4,-8,-10,5,4], dtype = "uint16")#candidate|11074|(66,)|const|uint16
call_11071 = relay.TupleGetItem(func_4041_call(relay.reshape(var_11072.astype('int32'), [10, 6, 11]), relay.reshape(const_11073.astype('float32'), [1120,]), relay.reshape(const_11074.astype('uint16'), [22, 3]), ), 0)
call_11075 = relay.TupleGetItem(func_4046_call(relay.reshape(var_11072.astype('int32'), [10, 6, 11]), relay.reshape(const_11073.astype('float32'), [1120,]), relay.reshape(const_11074.astype('uint16'), [22, 3]), ), 0)
output = relay.Tuple([call_11036,call_11044,const_11045,call_11054,call_11061,call_11063,const_11064,call_11071,var_11072,const_11073,const_11074,])
output2 = relay.Tuple([call_11037,call_11046,const_11045,call_11055,call_11062,call_11065,const_11064,call_11075,var_11072,const_11073,const_11074,])
func_11096 = relay.Function([var_11072,], output)
mod['func_11096'] = func_11096
mod = relay.transform.InferType()(mod)
var_11097 = relay.var("var_11097", dtype = "int32", shape = (660,))#candidate|11097|(660,)|var|int32
output = func_11096(var_11097)
func_11098 = relay.Function([var_11097], output)
mutated_mod['func_11098'] = func_11098
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9141_call = mod.get_global_var('func_9141')
func_9143_call = mutated_mod.get_global_var('func_9143')
call_11100 = relay.TupleGetItem(func_9141_call(), 2)
call_11101 = relay.TupleGetItem(func_9143_call(), 2)
output = call_11100
output2 = call_11101
func_11136 = relay.Function([], output)
mod['func_11136'] = func_11136
mod = relay.transform.InferType()(mod)
mutated_mod['func_11136'] = func_11136
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11136_call = mutated_mod.get_global_var('func_11136')
call_11137 = func_11136_call()
output = call_11137
func_11138 = relay.Function([], output)
mutated_mod['func_11138'] = func_11138
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11136_call = mod.get_global_var('func_11136')
func_11138_call = mutated_mod.get_global_var('func_11138')
call_11207 = func_11136_call()
call_11208 = func_11136_call()
func_899_call = mod.get_global_var('func_899')
func_902_call = mutated_mod.get_global_var('func_902')
const_11225 = relay.const([-1.078364,4.026100,-1.898940,-3.294619,3.317316,6.272814,7.945021,7.949549,-6.981932,-1.398841,-4.382329,-2.622980,0.034402,2.733725,-2.147488,-2.705671,3.357439,0.277780,9.843559,3.223707,7.192594,8.972744,5.007929,-8.195223,4.652977,5.546331,-0.277121,-4.925252,0.623256,-8.553113,1.399033,-9.924599,-5.062198,-1.648728,-4.580460,5.842645,8.942453,-1.394895,4.171104,-4.633247,-9.183950,3.806323,0.796389,-8.361601,3.624886,-0.206933,8.563459,0.249967,-6.343663,1.251384,7.119223,-0.159781,1.592543,-9.621736,-8.335496,7.707101,-5.914220,3.620428,-5.434263,-1.539136,6.454514,-6.789441,7.225882,-4.986377,-0.952965,-5.856043,-8.706758,-4.411867,-4.178306,4.599350,1.485858,2.152976,9.221423,9.093078,-7.430005,2.825925,-9.885098,8.465115,6.523931,-9.016861,1.694709,-3.690358,2.259744,-0.341219,0.797620,-1.841371,-8.749876,-9.089492,0.745567,-6.148079,3.360394,8.035802,6.738301,6.687205,-0.348659,-2.646047,0.559194,-1.773768,7.006023,-9.823777,-2.628951,5.900832,-5.927566,-4.726674,8.231694,7.337328,-1.171285,3.600914,6.157368,-7.410268,-1.066797,-9.572614,5.808893,-1.644779,7.959683,5.091583,-7.623554,-1.788243,-1.081554,-2.257183,8.188267,-6.578257,-7.755620,-3.579519,0.055165,2.755662,3.990945,7.985254,-6.473943,-0.873263,-7.023905,3.790223,-5.940563,0.050826,-1.837982,7.431170,7.460398,7.380039,8.972197,-6.095100,0.736102,-8.101646,0.190152,2.279168,9.638810,1.099550,-3.746063,-9.578398,-7.125996,1.628963,6.009957,7.024259,9.716213,-6.559372,-1.613421,3.802970,7.895799,-2.636559,7.329439,-5.139363,0.895651,-6.184366,4.865837,2.418494,-7.905076,-9.536936,5.134027,-5.739842,2.599513,7.931410,5.860544,9.857201,-7.730714,1.177540,6.685929,-9.070949,7.520102,-1.320419,-5.654121,9.068399,2.869604,-8.021393,8.453886,7.238504,-4.183595,-3.765985,7.101156,-1.313330,3.549933,3.949916,4.949795,-3.844600,-7.955370,6.291770,-0.850586,9.568721,8.421690,-4.377102,-5.349521,8.408644,-4.700387,5.227447,9.049660,8.154642,8.613119,5.336639,-2.969243,-2.957063,9.143712,4.249226,-0.608061,7.678262,2.585779,-4.405003,7.569753,-2.197359,4.878389,1.892487,5.604064,9.674879,8.692604,5.843326,-4.859623,-0.179255,-7.806440,6.131599,-3.511831,-4.951467,-4.656628,2.107198,-2.144236,3.280581,4.175570,-2.489156,4.036372,-3.514469,-1.230423,5.460441,2.672359,-9.440273,1.453430,-2.288779,-3.382045,0.814028,1.487316,-9.391159,-7.072038,1.509055,-7.124491,-2.211867,0.895100,-5.355584,1.735736,3.693890,6.615492,-7.501370,9.520931,-4.141904,7.087579,8.761852,8.503392,-0.930663,2.278065,3.286393,8.656651,-7.156212,-6.006413,-0.720866,-7.345689,-9.949916,-1.382304,-8.052214,0.006900,9.531731,8.512162,4.575341,5.421547,-4.325796,0.990585,-4.865812,-1.914102,-8.008289,-8.847210,-8.017265,-2.327870,-8.423105,5.344709,-4.468181,-7.699227,6.793303,-6.572860,-7.817903,-1.885071,6.261707,-5.272900,-6.566344,-4.169122,-2.894981,9.052430,4.498493,9.418017,-6.299378,-9.108995,-4.529379,5.961550,-9.447128,-9.957486,1.655505,-3.912321,6.163494,-3.076321,0.292666,-9.199538,3.869049,-6.683627,4.165386,3.769465,-8.217638,-5.119148,-5.434559,-8.800683,-4.907379,8.117969,2.717687,-4.188028,-8.984298,-0.852780,0.720304,1.523029,-4.297369,9.022390,-4.439676,-8.585544,-4.754781,5.020659,-4.600182,-8.309812,-1.957249,-2.491252,2.320706,-4.500201,1.219770,6.806185,1.203264,-9.052118,-4.003788,3.788379,-3.987181,9.588265,0.846104,6.198023,-7.631531,-2.772959,4.818076,-5.385369,6.413650,-1.751085,8.579354,4.075252,4.327145,-0.802533,3.034236,-8.879080,1.503188,-3.873455,-2.868368,-3.981330,5.592575,2.786612,1.980565,7.704835,6.097018,-2.046826,4.197339,1.886262,9.508148,-4.084447,-2.181618,-9.830444,-0.797532,-8.391438,-6.589689,0.321796,0.757299,-1.448306,-3.156436,8.309040,5.317058,-5.898348,0.627980,3.815983,-2.802130,5.157270,-8.204786,-6.778685,-7.442321,8.335890,-9.269449,3.952113,-9.970198,-3.734008,4.077888,-8.402579,9.859958,-3.508905,-1.622824,8.544307,2.573721,2.859853,-1.996937,2.426430,-1.224246,9.564340,7.948167,-3.779616,-6.174262,2.469062,-0.863311,1.759906,-3.375489,-7.412519,3.042998,2.127966,-9.858284,4.214179,9.046852,-6.419425,0.182689,-8.245444,-9.500163,-5.979707,6.339980,-5.684942,1.720716,-2.400007,2.310171,8.666889,-7.145834,-3.379179,6.391763,-8.990593,-9.772352,8.508708,-2.303420,-6.941663,-3.188274,-4.683440,-3.001005,-4.825557,-2.534944,-0.905383,0.552904,-4.828679,-4.331040,0.140119,-5.277909,-9.056413,-6.234089,3.365355,7.835348,5.619778,-0.168419,-0.686822,-4.237128,5.439041,6.834081,9.510360,3.957057,-5.570783,-9.994749,1.608845,6.473821,1.409183,4.550995,6.160274,-7.563941,5.521571,-5.952844,-5.271202,-8.184300,6.181406,9.818313,-3.290961,-8.209379,-5.352384,-8.582649,-3.218685,-7.328564,3.987864,-8.488157,-5.965350,1.070915,0.425801,0.764764,7.485170,8.575106,9.714468,0.574785,8.157007,3.546198,-6.369767,-9.309284,7.943098,-4.046308,-3.663668,6.833252,2.659814,-4.384487,-2.182670,-0.308286,2.282144,-0.502213,-5.404591,7.679622,-8.492938,-7.007648,-0.645968,0.793543,6.932088,3.474931,-8.038983,-0.886479,1.962423,-9.783913,6.283741,3.428360,1.137438,2.485864,5.383635,8.655759,4.875524,-4.528418,-3.719098,-8.927374,4.741951,-9.719778,-4.013535,-6.290057,7.548499,-6.046999,3.078376,-9.656900,6.335541,7.758820,-2.525967,-0.122666,-0.891590,5.217047,-3.795574,-7.608212,3.279156,7.342521,6.232350,-3.720590,5.358804,5.570980,-9.953894,2.449551,-3.653309,6.470627,5.191667,-0.918965,-7.315461,7.991337,8.929976,3.935886,-9.839583,9.466294,-5.807702,-1.030672,-4.934515,-2.639238,2.736160,-8.704378,-1.175890,-1.305952,-1.864589,3.984243,6.060812,5.818344,-4.065182,2.229762,-0.362239,6.647424,-9.828102,-6.935699,0.606711,-4.334130,-5.087223,-1.570752,-0.577312,-0.966685,-2.696517,9.645564,-1.581131,-8.889716,2.216614,6.775844,-8.014024,-7.536422,2.283888,6.753502,-6.472624,3.240990,0.353760,9.008937,2.550809,-3.670309,-3.891415,1.375400,-9.722928,4.819003,0.184773,3.231055,2.554665,7.769456,-5.055160,-2.592225,-9.738341,9.696783,0.918330,1.029704,6.981561,-1.938272,5.379684,-7.984199,-2.094365,-1.011963,0.168875,2.362788,6.580509,8.485451,-6.651512,-4.486312,4.713398,-4.654853,0.245037,7.284309,9.031493,-8.617516,6.448052,-5.051631,-4.953465,-3.590404,8.102435,4.422896,-5.088042,-5.678562,-2.432770,4.357855,2.642012,-9.394524,6.797447,1.336488,-2.866826,0.779494,-8.402563,9.529736,-0.929935,-6.524178,4.898055,5.722706,-7.893149,-2.728109,-1.732347,2.321962,6.314337,-2.826030,4.340944,8.117673,7.564802,-3.174349,1.571865,5.654261,9.321716,5.804900,5.642656,-8.792211,-5.416479,-1.241014,-0.986326,-7.974324,5.013022,-1.246110,-1.553982,-1.662752,-8.714387,-8.181316,-8.850151,-2.270918,9.193799,9.905539,-4.988021,6.856874,-6.955131,5.917902,9.420002,0.333637,1.739657,3.086662], dtype = "float32")#candidate|11225|(700,)|const|float32
call_11224 = relay.TupleGetItem(func_899_call(relay.reshape(const_11225.astype('float32'), [5, 10, 14]), relay.reshape(const_11225.astype('float32'), [5, 10, 14]), ), 0)
call_11226 = relay.TupleGetItem(func_902_call(relay.reshape(const_11225.astype('float32'), [5, 10, 14]), relay.reshape(const_11225.astype('float32'), [5, 10, 14]), ), 0)
output = relay.Tuple([call_11207,call_11224,const_11225,])
output2 = relay.Tuple([call_11208,call_11226,const_11225,])
func_11230 = relay.Function([], output)
mod['func_11230'] = func_11230
mod = relay.transform.InferType()(mod)
mutated_mod['func_11230'] = func_11230
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11230_call = mutated_mod.get_global_var('func_11230')
call_11231 = func_11230_call()
output = call_11231
func_11232 = relay.Function([], output)
mutated_mod['func_11232'] = func_11232
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11136_call = mod.get_global_var('func_11136')
func_11138_call = mutated_mod.get_global_var('func_11138')
call_11270 = func_11136_call()
call_11271 = func_11136_call()
func_3588_call = mod.get_global_var('func_3588')
func_3591_call = mutated_mod.get_global_var('func_3591')
var_11279 = relay.var("var_11279", dtype = "float64", shape = ())#candidate|11279|()|var|float64
var_11280 = relay.var("var_11280", dtype = "float64", shape = (143,))#candidate|11280|(143,)|var|float64
call_11278 = relay.TupleGetItem(func_3588_call(relay.reshape(var_11279.astype('float64'), []), relay.reshape(var_11280.astype('float64'), [1, 13, 11]), ), 0)
call_11281 = relay.TupleGetItem(func_3591_call(relay.reshape(var_11279.astype('float64'), []), relay.reshape(var_11280.astype('float64'), [1, 13, 11]), ), 0)
output = relay.Tuple([call_11270,call_11278,var_11279,var_11280,])
output2 = relay.Tuple([call_11271,call_11281,var_11279,var_11280,])
func_11283 = relay.Function([var_11279,var_11280,], output)
mod['func_11283'] = func_11283
mod = relay.transform.InferType()(mod)
mutated_mod['func_11283'] = func_11283
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11283_call = mutated_mod.get_global_var('func_11283')
var_11285 = relay.var("var_11285", dtype = "float64", shape = ())#candidate|11285|()|var|float64
var_11286 = relay.var("var_11286", dtype = "float64", shape = (143,))#candidate|11286|(143,)|var|float64
call_11284 = func_11283_call(var_11285,var_11286,)
output = call_11284
func_11287 = relay.Function([var_11285,var_11286,], output)
mutated_mod['func_11287'] = func_11287
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10776_call = mod.get_global_var('func_10776')
func_10777_call = mutated_mod.get_global_var('func_10777')
call_11321 = relay.TupleGetItem(func_10776_call(), 1)
call_11322 = relay.TupleGetItem(func_10777_call(), 1)
uop_11338 = relay.erf(call_11321.astype('float32')) # shape=(8, 14, 3)
uop_11340 = relay.erf(call_11322.astype('float32')) # shape=(8, 14, 3)
func_8215_call = mod.get_global_var('func_8215')
func_8217_call = mutated_mod.get_global_var('func_8217')
const_11345 = relay.const([-1.722609,3.462914,8.795993,4.911498,1.249057,7.982343,0.569321,-1.869988,0.354763,-1.135764,-3.966123,-8.590840,-0.337069,0.253551,0.818574,-3.144197,-5.221280,7.497554,5.563010,9.353119,6.873800,1.532187,-0.565716,-4.020511,8.621005,-1.309485,-1.565146,8.580748,4.166156,-8.763258,8.195078,2.434890,-0.178144,6.165240,3.237181,-2.369956,6.452201,4.105013,4.250667,1.655524,-1.834661,9.276875,-9.766856,3.306775,8.449514,-9.727244,1.780773,4.977935,-6.862599,3.493950,1.806866,7.868282,-4.997340,-8.227320,-5.510092,-8.945617,1.514210,1.955039,-0.349644,-7.976590,-3.734605,6.202010,-5.509854,9.734600,6.641337,-5.566407,2.391314,-2.849922,-5.131823,4.903278,-2.487434,-7.339085,5.249290,-0.121659,-6.197156,-3.598390,1.251045,-8.751154,-3.265623,5.821587,5.864700,-0.953171,9.184300,-1.395201,-6.901102,-4.305100,9.462295,-8.043984,-1.430346,-1.383958,1.440341,4.602700,-0.866762,-1.668873,0.185151,5.459857,0.616470,0.553319,-0.042255,2.615834,-7.530748,6.147758,-0.041775,-3.647336,-1.707209,1.706176,7.428985,9.919271,8.622137,-0.557824,7.987489,5.646848,-0.112411,2.578586,-3.213732,9.799805,-2.223149,-6.756519,-7.548527,6.345991,6.963661,2.826933,4.334878,5.115777,-5.124857,3.708457,1.025407,5.006890,-1.764494,-7.308065,0.988338,3.889256,-6.087424,-7.927981,-2.345192,-4.996779,-2.330114,4.558085,-0.369411,-1.906716,-2.697240,-8.672273,-9.759995,2.008298,-1.882630,3.354925,8.554054,4.198335,-4.350128,5.237366,5.115925,0.808455,2.921171,3.446844,6.237289,-5.715194,4.105253,4.432708,-3.769664,-2.588044,-2.989043,-0.315001,-7.409878,3.398945,2.341417,-9.702524,-3.572703,3.096614,-6.933920,0.885242,-2.910296,7.597802,-7.179479,-3.893473,-2.122335,0.286490,-8.659876,-5.026183,8.540734,-6.896339,-2.645025,1.861722,-1.290285,-9.266985,9.889513,-9.730284,-0.174982,-2.448160,-7.108730,7.557505,9.477518,3.305517,9.874455,8.581201,3.509138,3.002052,-8.298129,9.221601,5.180092,9.915164,1.505126,4.999759,6.022868,3.418465,-4.730462,-9.769799,5.925968,1.593628,-0.894552,-4.129082,-9.950251,9.748273,-5.056233,8.086987,4.188298,5.124579,-8.008033,-7.650237,-6.326118,7.640440,-7.696881,-3.358832,9.945948,-5.074270,-5.568062,-7.144781,6.065418,5.708730,-2.990372,7.721914,4.389404,-6.953218,5.052952,-4.273728,-8.934794,-4.431935,8.836144,1.619764,5.883745,-4.304458,-6.952538,-2.570857,6.054162,6.906125,6.858700,8.299836,4.974177,-0.162676,-6.118477,-5.393305,7.620782,2.173473,-9.376534,1.298554,9.124893,5.424528,-7.457516,8.033880,-5.984221,0.155363,5.657731,-7.734646,4.595246,-3.988875,5.743562,-7.212305,2.959118,-2.247923,-6.201802,9.851575,8.066429,0.207563,2.367583,4.796698,-8.427431,3.924847,7.066468,-6.572341,-1.600180,-3.201620,-5.452359,-2.829261,7.071352,9.963002,4.704254,7.724590,6.511796,-1.151606,3.649375,-6.441812,0.103732,9.256242,-6.131433,0.424281,-4.932857,-8.972176,-9.041452,5.381729,8.611274,-1.177050,6.418823,-5.626910,-2.398377,1.890287,-2.734140,8.261336,5.342990,3.685112,1.390584,4.134472,-3.776174,-3.213925,-6.143877,-4.487947,-7.614608,-5.567486,-9.067447,-6.829573,-7.597620,-9.574291,-4.428830,-5.628200,2.793141,7.734855,-8.901549,-0.250112,-5.710237,4.760218,-1.540912,5.905120,-2.120346,9.636084,-5.792879,-2.883296,3.567744,7.159927,-0.773183,-3.273098,3.578971,-5.498830,-9.588300,0.381770,5.872760,6.642474,-8.035356,-9.867110,3.082454,-2.382022,-4.548982,-0.104577,6.057994,6.036415,6.823135,5.241332,8.148784,-0.110941,2.085932,-9.334520,-8.751675,-0.889299,-2.321707,-8.253674,-2.846278,1.789095,5.114320,1.741867,-3.460924,-2.316132,-1.885954,-2.266001,-2.446419,6.942567,-2.705118,-5.751396,3.830907,-5.625846,-2.279628,3.134874,7.942134,0.818761,-4.811819,6.524183,4.301266,-6.389835,-7.018972,0.516142,7.084289,-6.351815,-7.043918,7.855303,2.581311,-2.813619,-4.324228,6.744525,-7.572979,-2.226750,8.911232,0.835280,8.368840,-1.307776,0.852094,-0.303079,-9.626565,-2.400506,-0.907576,-9.051047,1.803204,0.704250,5.187796,3.745437,5.230725,-5.020899,-9.322510,2.525602,-3.861412,1.434565,5.206280,-0.861495,-0.198811,-0.487730], dtype = "float64")#candidate|11345|(420,)|const|float64
call_11344 = relay.TupleGetItem(func_8215_call(relay.reshape(const_11345.astype('float64'), [420,])), 1)
call_11346 = relay.TupleGetItem(func_8217_call(relay.reshape(const_11345.astype('float64'), [420,])), 1)
bop_11353 = relay.logical_and(uop_11338.astype('bool'), relay.reshape(call_11321.astype('bool'), relay.shape_of(uop_11338))) # shape=(8, 14, 3)
bop_11356 = relay.logical_and(uop_11340.astype('bool'), relay.reshape(call_11322.astype('bool'), relay.shape_of(uop_11340))) # shape=(8, 14, 3)
output = relay.Tuple([call_11344,const_11345,bop_11353,])
output2 = relay.Tuple([call_11346,const_11345,bop_11356,])
func_11361 = relay.Function([], output)
mod['func_11361'] = func_11361
mod = relay.transform.InferType()(mod)
output = func_11361()
func_11362 = relay.Function([], output)
mutated_mod['func_11362'] = func_11362
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10202_call = mod.get_global_var('func_10202')
func_10204_call = mutated_mod.get_global_var('func_10204')
call_11477 = relay.TupleGetItem(func_10202_call(), 1)
call_11478 = relay.TupleGetItem(func_10204_call(), 1)
var_11479 = relay.var("var_11479", dtype = "int8", shape = (7, 4, 4))#candidate|11479|(7, 4, 4)|var|int8
bop_11480 = relay.divide(call_11477.astype('float32'), relay.reshape(var_11479.astype('float32'), relay.shape_of(call_11477))) # shape=(7, 4, 4)
bop_11483 = relay.divide(call_11478.astype('float32'), relay.reshape(var_11479.astype('float32'), relay.shape_of(call_11478))) # shape=(7, 4, 4)
uop_11485 = relay.sinh(call_11477.astype('float32')) # shape=(7, 4, 4)
uop_11487 = relay.sinh(call_11478.astype('float32')) # shape=(7, 4, 4)
func_10000_call = mod.get_global_var('func_10000')
func_10003_call = mutated_mod.get_global_var('func_10003')
var_11493 = relay.var("var_11493", dtype = "float32", shape = (630,))#candidate|11493|(630,)|var|float32
call_11492 = relay.TupleGetItem(func_10000_call(relay.reshape(var_11493.astype('float32'), [630,])), 1)
call_11494 = relay.TupleGetItem(func_10003_call(relay.reshape(var_11493.astype('float32'), [630,])), 1)
func_8742_call = mod.get_global_var('func_8742')
func_8745_call = mutated_mod.get_global_var('func_8745')
call_11501 = func_8742_call(relay.reshape(var_11493.astype('float32'), [14, 15, 3]))
call_11502 = func_8742_call(relay.reshape(var_11493.astype('float32'), [14, 15, 3]))
output = relay.Tuple([bop_11480,uop_11485,call_11492,var_11493,call_11501,])
output2 = relay.Tuple([bop_11483,uop_11487,call_11494,var_11493,call_11502,])
func_11510 = relay.Function([var_11479,var_11493,], output)
mod['func_11510'] = func_11510
mod = relay.transform.InferType()(mod)
var_11511 = relay.var("var_11511", dtype = "int8", shape = (7, 4, 4))#candidate|11511|(7, 4, 4)|var|int8
var_11512 = relay.var("var_11512", dtype = "float32", shape = (630,))#candidate|11512|(630,)|var|float32
output = func_11510(var_11511,var_11512,)
func_11513 = relay.Function([var_11511,var_11512,], output)
mutated_mod['func_11513'] = func_11513
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11526 = relay.var("var_11526", dtype = "int16", shape = (16, 9, 14))#candidate|11526|(16, 9, 14)|var|int16
const_11527 = relay.const([[[3,-6,6,1,-1,-4,5,3,2,7,-7,-10,9,3],[-6,-2,2,2,-9,9,8,-6,9,-4,1,8,-8,-6],[8,-7,-2,3,-10,-3,-10,10,-6,-2,6,-5,7,4],[-4,10,-10,8,7,-7,8,5,2,7,-2,4,3,2],[5,-5,8,2,-2,1,4,8,8,10,-1,-10,6,-10],[3,10,9,8,-1,-5,-3,-4,-4,10,8,-4,7,-3],[-9,-3,-4,-2,-8,-10,3,2,4,4,8,2,2,-6],[-1,3,9,-2,-10,-8,7,5,-5,-5,-3,-7,-10,7],[-6,-4,-2,-6,-4,-6,7,3,3,-1,5,7,6,8]],[[-4,10,10,8,-3,-2,5,1,1,-5,2,-1,3,-6],[2,6,3,-6,10,-4,8,-1,-4,-6,-6,7,8,-8],[8,1,2,-5,-1,-7,-5,-5,-6,8,1,-5,7,-7],[-2,6,-1,-7,2,7,3,8,4,2,2,-10,-6,-9],[6,5,-3,7,10,8,-8,-7,10,10,1,-5,-2,5],[9,8,-2,-5,-8,10,8,9,-4,8,2,-7,10,5],[7,7,-5,-5,-1,-1,-5,-6,8,1,-2,5,9,-6],[-4,-8,-4,-6,3,6,-2,-5,-8,1,6,10,-3,1],[-7,-8,1,-3,-4,-2,2,10,-4,2,4,8,7,8]],[[-2,-1,-8,-3,8,2,5,-8,-3,-1,-3,-1,-8,9],[-8,7,-5,-1,1,2,8,-1,9,9,8,-10,-5,-8],[-1,-2,5,7,10,-3,-3,-10,10,-5,-1,-2,6,-9],[-5,8,5,3,7,-10,-9,8,9,-3,9,7,-2,-10],[10,-1,-6,1,9,3,-3,3,-5,3,10,2,-6,3],[7,8,1,-4,-8,-2,6,-3,8,2,10,9,3,-1],[-10,7,-8,-5,-4,-9,4,1,7,-1,-1,-8,8,1],[9,-10,-8,6,-2,6,10,10,5,5,5,-6,-7,-7],[2,-8,-4,9,9,-10,6,7,-9,1,-8,7,10,-10]],[[-8,6,7,-10,-6,4,4,-6,-8,-8,2,3,6,3],[-3,-7,-2,-2,8,-1,-1,-10,9,-5,9,-5,3,-2],[8,-6,-8,4,3,10,-6,-6,6,-3,-1,3,4,-2],[-8,7,-10,8,4,-8,6,10,9,-2,-3,-1,5,-4],[-5,-9,1,-8,-7,-8,8,1,6,-7,-9,-9,4,-7],[-7,2,-9,3,-5,2,-9,4,-8,1,-8,8,-7,-10],[-8,-4,9,-7,4,-10,-2,2,5,-9,3,-7,-10,6],[2,10,4,7,7,2,5,-2,-6,-8,-10,-4,-7,-2],[3,-6,-6,9,10,1,-1,3,-7,-10,-7,4,5,10]],[[6,-1,-2,8,-5,7,-2,-5,3,6,2,3,-4,7],[-2,3,9,-8,3,6,-2,3,3,-6,7,6,-8,9],[7,-3,-10,-8,-10,-9,-4,-1,8,-10,-4,-7,6,2],[-4,8,-6,-2,-7,5,-9,-2,-9,-9,9,-10,-4,5],[4,-6,8,-10,4,1,4,-1,-2,6,-8,-2,4,1],[3,-10,5,5,-1,-10,-9,-8,-10,-4,4,8,6,-10],[-4,-8,8,1,-5,1,-1,9,-3,-1,-8,5,-8,5],[-3,-2,-7,-1,10,2,-8,9,3,9,9,-9,6,8],[-9,8,9,8,-2,-4,-2,-8,-9,-2,-9,8,-1,-4]],[[3,3,-6,-3,-8,-4,1,-5,-4,3,-1,6,6,-7],[-3,5,2,7,6,-4,10,-7,4,3,-6,-1,-3,-9],[3,5,-7,-1,8,-7,-9,-9,9,-9,9,-2,10,1],[10,-2,6,-6,-10,3,6,-2,-3,3,8,-8,6,1],[-1,9,4,4,-1,-4,1,10,-9,2,3,7,-1,-10],[3,3,6,7,3,10,4,-6,-3,-2,-9,6,2,-5],[8,-10,-7,-5,4,2,3,-3,8,-2,6,-5,8,6],[7,-5,-7,4,-5,-6,2,6,10,4,9,-8,10,9],[-7,10,-8,-6,9,8,2,-4,-10,10,10,-7,-10,7]],[[10,-9,-2,-10,-3,3,10,-7,5,-5,-10,6,-10,2],[-2,1,-6,9,-9,-8,7,4,5,10,-1,-7,-3,-4],[10,5,6,3,4,9,3,6,1,9,-1,7,5,6],[9,-9,7,-10,-9,4,9,9,-3,3,-4,3,1,-9],[6,-2,-5,-5,-6,7,1,9,5,9,-2,3,5,1],[-5,-2,-6,-7,5,5,-8,7,4,-9,-5,-8,-3,2],[8,-3,4,6,-10,-2,7,-8,-2,6,2,-4,4,-3],[2,4,-9,-4,4,4,5,9,-7,-8,-4,2,10,3],[7,-10,1,10,-2,-2,6,-10,-6,-2,-8,10,5,-7]],[[8,-8,4,-4,3,-5,-10,-3,7,-7,4,3,-10,-5],[-5,-9,-2,7,-6,-1,7,-5,-4,-1,-4,3,-8,4],[-9,2,-1,6,7,-9,4,-1,9,6,-4,4,7,-8],[4,-4,10,7,-6,-5,6,-7,8,-9,-4,10,-4,-10],[4,8,7,-8,-8,8,-8,9,9,-4,4,3,10,9],[-10,9,-4,-1,-8,10,6,10,-3,9,4,10,-9,-7],[-8,5,3,3,10,2,3,-4,2,-4,-4,8,6,-6],[-2,-4,-7,-10,2,10,7,9,-6,10,8,2,9,-10],[9,-10,8,1,4,8,7,5,1,-6,7,-4,2,-7]],[[-5,5,-2,5,10,5,-9,7,2,2,8,-2,-3,-9],[2,5,-2,1,5,4,-2,-9,-4,9,-10,3,10,-4],[2,10,-9,1,-3,-3,-6,4,-6,1,1,7,-10,1],[6,4,7,1,-7,7,-5,-10,9,-1,7,6,9,-1],[-4,10,6,-7,6,-10,10,-4,-10,-6,-8,-6,8,-5],[7,-7,-6,10,-8,4,-3,-8,-4,8,5,-4,2,8],[-4,-6,-6,-2,9,-4,-9,5,-3,-6,3,2,9,-3],[-8,10,3,-2,10,-3,8,-10,-6,-10,5,-7,-2,-10],[-4,4,3,3,2,7,9,-3,-7,-5,-7,3,3,-4]],[[-8,-5,-7,-4,3,-8,-3,8,-7,3,5,9,3,8],[4,8,-6,6,-4,-4,10,-3,-7,8,-6,-7,7,5],[-8,5,-4,-3,7,-2,2,9,7,6,7,-7,-3,3],[10,1,2,-9,-8,-7,-4,8,-6,-7,-1,9,6,-10],[-4,-10,-3,-4,6,1,6,1,-6,5,7,7,6,5],[-5,3,-10,-4,4,7,-1,-4,-6,-8,-3,6,-8,8],[-10,8,-2,5,-5,-4,-6,1,-1,4,-1,4,7,5],[-5,-9,-10,2,-7,-1,-3,3,9,-7,-2,-2,5,-8],[7,6,-6,9,-2,-7,6,-5,-4,10,-4,-6,8,-9]],[[3,5,-9,-2,-8,3,9,-10,10,6,4,9,-5,-4],[2,-5,-1,7,-3,-8,-7,8,-3,-3,-6,6,8,-9],[2,-5,-9,1,3,1,-6,-5,-2,-1,5,-7,-6,10],[10,-5,5,9,2,-5,8,1,6,7,8,2,-5,-4],[-4,4,-6,-6,-1,-6,-7,-8,-8,8,-4,4,6,-5],[5,-1,6,2,-6,-2,5,10,10,8,-6,5,-3,1],[-5,10,8,10,9,-5,-2,4,6,1,1,-5,6,-6],[-9,10,-5,-5,-6,-8,-6,-1,-1,-10,-6,-4,-10,5],[-1,9,-10,-5,9,-10,4,9,-1,2,3,9,-3,-8]],[[2,-3,6,2,-8,1,-6,4,8,-3,6,-1,7,10],[-2,5,4,6,7,-6,-6,4,-5,-3,-6,2,-10,-10],[-2,7,3,-8,7,6,4,10,-6,-2,-7,-6,1,-2],[10,8,-6,-7,-6,-3,3,-8,1,8,4,-10,7,3],[-3,-9,-9,-8,1,-2,-2,-1,-6,1,8,-7,-9,5],[-3,4,-3,3,-9,7,-8,-8,-5,5,-9,-1,8,-1],[-2,-5,-5,3,1,10,-8,-1,-5,7,7,1,10,4],[9,5,4,-8,-10,-6,8,-2,-4,-3,1,9,1,3],[-4,-9,2,4,-5,-6,-7,7,-10,-2,-9,3,4,-7]],[[2,6,9,-8,-9,-1,-7,1,-9,9,-5,-4,-7,-6],[9,-6,7,6,9,-1,6,-5,6,7,4,5,-7,8],[5,7,-1,-4,6,6,-4,4,-8,-3,6,-10,-3,4],[5,6,-7,-6,5,-7,-2,8,2,5,2,-4,7,-3],[-2,-4,10,-7,-2,-5,2,2,7,-9,-2,8,-4,6],[-10,-4,5,-9,8,2,-10,-9,-1,8,10,6,2,8],[6,-7,-3,9,9,-3,-4,6,-1,8,-5,9,-4,7],[-9,-3,-1,1,3,3,8,10,-10,7,1,-3,-2,2],[-7,5,8,-1,2,4,-4,9,1,-5,6,-4,7,-5]],[[-10,-8,-8,3,3,-4,5,-10,4,-10,-9,-8,7,1],[-9,-7,-3,-8,-10,-8,4,-5,1,10,5,10,7,8],[-10,-9,7,-8,3,-3,6,5,3,-2,7,10,6,-7],[-6,6,-6,-4,3,5,-7,-10,-10,-6,-4,9,-2,5],[-7,-8,7,-10,3,10,-6,-3,-1,-8,7,-8,-4,-2],[6,-4,-10,-7,-8,-4,10,8,-6,9,-3,2,2,-1],[-5,-5,-2,3,1,3,-8,4,-10,2,-3,-5,9,-8],[-7,9,4,4,-3,10,-8,7,9,-2,4,-4,6,-5],[9,5,-2,10,10,-4,3,-9,6,-9,-9,-1,-6,10]],[[-6,-6,-8,-3,-7,8,8,-2,-5,-2,-1,3,1,-3],[-1,-8,9,2,-6,10,9,-3,-10,-8,8,-4,-2,-6],[-1,1,-1,-8,4,10,8,-3,7,-4,1,-2,5,-7],[-4,-9,4,-8,-2,7,-8,-5,-6,3,-6,-10,2,-7],[9,1,9,-10,-3,-9,-7,-8,1,1,-4,1,-3,9],[5,10,4,-9,5,-7,10,-1,10,1,-5,-1,9,10],[-2,-9,9,-3,3,5,5,-4,7,3,-5,1,9,10],[1,-1,-1,2,-10,-2,-8,10,-10,-8,10,-4,-6,-6],[4,-2,-7,10,3,-9,-6,5,9,-5,10,4,3,-4]],[[1,-3,-7,10,7,-2,-1,-1,-2,-8,2,8,9,1],[-9,2,-6,-5,-9,8,6,-6,3,-3,-6,5,-8,-9],[6,8,4,5,4,-4,8,9,-4,-2,-4,1,8,7],[9,-1,-3,-2,1,-8,1,8,-6,3,3,6,-2,5],[-2,-8,-8,8,9,10,-9,-3,-4,8,-9,1,-10,-7],[-3,2,5,-8,8,4,-8,-7,5,-7,-2,-1,8,1],[9,10,-10,-9,4,-10,5,-2,-10,-2,-1,-6,-4,2],[-8,-1,10,-9,6,7,-5,-2,3,-5,-3,10,6,6],[4,3,2,-1,7,-5,7,-5,-3,3,3,8,5,-1]]], dtype = "int16")#candidate|11527|(16, 9, 14)|const|int16
bop_11528 = relay.right_shift(var_11526.astype('int16'), relay.reshape(const_11527.astype('int16'), relay.shape_of(var_11526))) # shape=(16, 9, 14)
output = relay.Tuple([bop_11528,])
output2 = relay.Tuple([bop_11528,])
func_11534 = relay.Function([var_11526,], output)
mod['func_11534'] = func_11534
mod = relay.transform.InferType()(mod)
var_11535 = relay.var("var_11535", dtype = "int16", shape = (16, 9, 14))#candidate|11535|(16, 9, 14)|var|int16
output = func_11534(var_11535)
func_11536 = relay.Function([var_11535], output)
mutated_mod['func_11536'] = func_11536
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11546 = relay.var("var_11546", dtype = "float32", shape = (16, 1, 15))#candidate|11546|(16, 1, 15)|var|float32
uop_11547 = relay.rsqrt(var_11546.astype('float32')) # shape=(16, 1, 15)
output = relay.Tuple([uop_11547,])
output2 = relay.Tuple([uop_11547,])
func_11556 = relay.Function([var_11546,], output)
mod['func_11556'] = func_11556
mod = relay.transform.InferType()(mod)
var_11557 = relay.var("var_11557", dtype = "float32", shape = (16, 1, 15))#candidate|11557|(16, 1, 15)|var|float32
output = func_11556(var_11557)
func_11558 = relay.Function([var_11557], output)
mutated_mod['func_11558'] = func_11558
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8150_call = mod.get_global_var('func_8150')
func_8152_call = mutated_mod.get_global_var('func_8152')
call_11586 = relay.TupleGetItem(func_8150_call(), 0)
call_11587 = relay.TupleGetItem(func_8152_call(), 0)
output = relay.Tuple([call_11586,])
output2 = relay.Tuple([call_11587,])
func_11595 = relay.Function([], output)
mod['func_11595'] = func_11595
mod = relay.transform.InferType()(mod)
mutated_mod['func_11595'] = func_11595
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11595_call = mutated_mod.get_global_var('func_11595')
call_11596 = func_11595_call()
output = call_11596
func_11597 = relay.Function([], output)
mutated_mod['func_11597'] = func_11597
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9526_call = mod.get_global_var('func_9526')
func_9528_call = mutated_mod.get_global_var('func_9528')
call_11658 = relay.TupleGetItem(func_9526_call(), 1)
call_11659 = relay.TupleGetItem(func_9528_call(), 1)
func_8953_call = mod.get_global_var('func_8953')
func_8959_call = mutated_mod.get_global_var('func_8959')
const_11668 = relay.const([[3],[-6],[-2],[9],[5],[-1],[-8],[-10],[-2],[6],[-8],[5],[-3],[5],[-4],[-6],[4],[8],[-6],[7],[4],[-10],[-1],[-1],[-3],[-8],[-6],[-4],[-10],[2],[1],[-1],[-9],[-8],[-5],[6],[-3],[2],[-1],[6],[10],[4],[-6],[4],[1],[-2],[-5],[7],[1],[8],[-2],[-7],[-3],[10],[2],[5],[-9],[7],[-1],[-1],[-8],[-5],[5],[4],[7],[6]], dtype = "uint16")#candidate|11668|(66, 1)|const|uint16
var_11669 = relay.var("var_11669", dtype = "uint16", shape = (429, 2))#candidate|11669|(429, 2)|var|uint16
var_11670 = relay.var("var_11670", dtype = "int64", shape = (1040,))#candidate|11670|(1040,)|var|int64
call_11667 = relay.TupleGetItem(func_8953_call(relay.reshape(call_11658.astype('float64'), [3, 15, 11]), relay.reshape(const_11668.astype('uint16'), [66,]), relay.reshape(var_11669.astype('uint16'), [429, 2]), relay.reshape(var_11670.astype('int64'), [1040,]), ), 2)
call_11671 = relay.TupleGetItem(func_8959_call(relay.reshape(call_11658.astype('float64'), [3, 15, 11]), relay.reshape(const_11668.astype('uint16'), [66,]), relay.reshape(var_11669.astype('uint16'), [429, 2]), relay.reshape(var_11670.astype('int64'), [1040,]), ), 2)
output = relay.Tuple([call_11658,call_11667,const_11668,var_11669,var_11670,])
output2 = relay.Tuple([call_11659,call_11671,const_11668,var_11669,var_11670,])
func_11688 = relay.Function([var_11669,var_11670,], output)
mod['func_11688'] = func_11688
mod = relay.transform.InferType()(mod)
mutated_mod['func_11688'] = func_11688
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11688_call = mutated_mod.get_global_var('func_11688')
var_11690 = relay.var("var_11690", dtype = "uint16", shape = (429, 2))#candidate|11690|(429, 2)|var|uint16
var_11691 = relay.var("var_11691", dtype = "int64", shape = (1040,))#candidate|11691|(1040,)|var|int64
call_11689 = func_11688_call(var_11690,var_11691,)
output = call_11689
func_11692 = relay.Function([var_11690,var_11691,], output)
mutated_mod['func_11692'] = func_11692
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8297_call = mod.get_global_var('func_8297')
func_8299_call = mutated_mod.get_global_var('func_8299')
call_11707 = func_8297_call()
call_11708 = func_8297_call()
output = call_11707
output2 = call_11708
func_11719 = relay.Function([], output)
mod['func_11719'] = func_11719
mod = relay.transform.InferType()(mod)
output = func_11719()
func_11720 = relay.Function([], output)
mutated_mod['func_11720'] = func_11720
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9692_call = mod.get_global_var('func_9692')
func_9694_call = mutated_mod.get_global_var('func_9694')
call_11726 = func_9692_call()
call_11727 = func_9692_call()
output = relay.Tuple([call_11726,])
output2 = relay.Tuple([call_11727,])
func_11728 = relay.Function([], output)
mod['func_11728'] = func_11728
mod = relay.transform.InferType()(mod)
output = func_11728()
func_11729 = relay.Function([], output)
mutated_mod['func_11729'] = func_11729
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8407_call = mod.get_global_var('func_8407')
func_8408_call = mutated_mod.get_global_var('func_8408')
call_11763 = func_8407_call()
call_11764 = func_8407_call()
func_10202_call = mod.get_global_var('func_10202')
func_10204_call = mutated_mod.get_global_var('func_10204')
call_11784 = relay.TupleGetItem(func_10202_call(), 1)
call_11785 = relay.TupleGetItem(func_10204_call(), 1)
func_9214_call = mod.get_global_var('func_9214')
func_9218_call = mutated_mod.get_global_var('func_9218')
var_11796 = relay.var("var_11796", dtype = "float64", shape = (420,))#candidate|11796|(420,)|var|float64
const_11797 = relay.const([2,8,-4,6,-10,-3,9,6,10,6,-10,4,8,1,9,-9,-3,-2,5,4,2,4,-1,-1,-10,10,-4,7,8,-10,-5,7,-8,-8,-8,-8,-10,-2,-7,-1,-10,10,-7,-3,-4,-3,4,10,10,-4,-10,9,-7,8,-3,-2,2,-8,6,6,-4,2,1,-9,1,1,6,-9,2,10,8,2,-1,-9,-10,8,5,4,-3,1,6,5,-4,8,6,3,7,4,-4,6,1,9,-5,4,-8,2,-6,10,3,-4,-6,-3,-2,5,-3,9,-5,9,-3,-10,7,7,-10,3,-4,2,-6,7,3,2,-2,-7,-9,-9,-1,-5,2,4,-8,-7,6,6,-6,7,-4,-3,-2,-3,9,3,-10,2,10,-8,-5,-3,-8,-4,-2,2,-2,10,7,4,5,10,8,1,-10,-8,-8,7,-2,8,1,-1,7,6,-7,2,8,1,-3,-3,3,-7,6,5,-2,3,-3,6,-8,-5,-1,-8,8,4,-10,-4,2,-4,-5,8,1,1,-8,5,-9,10,7,10,5,-9,-3,-10,6,3,2,-9,3,-7,10,6,10,1,1,-3,5,3,-6,-1,6,4,-5,1,4,8,7,3,-7,-7,6,-7,3,-7,5,-1,-3,-1,7,-6,-7,5,8,3,4,6,-1,1,4,-3,7,10,-9,10,-2,-7,1,-2,3,4,7,-7,4,-4,-7,7,-3,6,9,-7,2,-7,7,-2,9,8,-8,6,-5,8,9,8,4,5,-1,2,6,8,3,6,8,7,10,-7,6,-9,-3,-1,4,-8,-8,-10,-2,-2,10,6,-1,-5,-10,8,-10,-5,7,-9,1,5,10,8,4,8,7,6,-10,-10,5,-6,-6,-9,-6,1,-6,9,-4,9,-6,-3,-2,2,10,-2,-10,2,-9,9,9,-5,8,4,-2,9,-1,-2,3,-5,-5,-10,5,-1,4,2,-9,10,-10,1,-9,-1,-5,3,6,-1,-5,4,-2,4,4,-9,2,4,8,-3,6,-7,-6,8,-8,-1,-9,-3,-1,-7,5,-1,9,-9,1,-2,-8,7,-9,6,-6,-4,-3,6,-6,-10,-2,7,6,-6,2,3,9,5,-7,-9,9,9,-10,7,-9,6,10,1,-3,-3,7,4,8,-5,-2,9,8,3,-3,4,9,-3,5,-5,3,3,5,-7,9,-7,8,10,6,-4,6,-10,9,-4,-7,5,8,-1,5,6,-4,3,-1,-10,8,5,-3,1,-10,8,-5,-9,-9,7,-2,6,-6,-8], dtype = "int16")#candidate|11797|(480,)|const|int16
const_11798 = relay.const([7.121998,7.120799,1.208983,9.106214,1.454174,9.507324,-9.384317,4.509463,0.979281,-6.071982,-5.249931,8.812360,-1.665238,-3.551194,-4.903002,-9.645053,4.667543,-7.873573,3.934300,-5.547634,2.259768,1.312532,8.483110,-5.116335,1.715000,-3.840437,6.876719,-7.358733,7.045479,1.044740,-9.603208,1.891465,2.581397,-4.537219,6.275576,-9.904317,-2.229974,3.620015,-5.097163,0.566826,-8.718023,-0.771120,2.791305,1.729814,0.340068,-5.249115,-5.811023,-7.170099,-3.629332,6.035388,1.060867,-2.401780,5.831654,4.971401,7.597148,9.774673,6.840859,2.846360,8.040256,5.212583,0.683500,-1.918391,-4.353039,-9.180129,-4.432595,-7.762230,5.623406,9.104303,-6.363720,-0.586498,2.595447,4.407265,9.688738,3.085855,2.852999,-9.461600,9.859768,7.787445,5.572061,-1.153012,6.640586,6.598654,6.006249,7.406307,7.719153,8.139116,4.661146,2.066032,4.754528,7.001606,-8.965438,5.073459,4.714107,0.754186,-6.866203,-0.023766,-1.717167,-2.778731,-3.734594,-7.451840,-7.563583,1.646777,-1.500612,-1.821063,6.809838,7.012485,2.629077,2.683100,7.675562,2.658721,-8.923046,8.172102,9.724390,-3.130153,8.727003,-8.864092,-0.008193,7.854029,-7.843552,-9.893765,-9.382018,6.567738,7.286965,-4.061617,4.591371,-1.749030,5.211006,7.919327,-7.061011,-3.863160,-2.172084,9.736912,-4.222878,9.037283,-4.627239,4.769014,3.579116,6.875062,5.506025,2.649363,7.879817,4.078687,1.841442,-4.288124,-0.999588,6.708242,2.528640,-7.637485,-1.072416,-8.295427,7.481066,8.760236,9.972501,4.497052,-6.849016,6.589075,6.061430,-9.863381,5.895846,-4.713073,7.173869,-8.906285,-4.228187,9.721641,1.702109,9.504481,2.260578,0.718509,2.654977,4.650042,-2.704994,-4.987044,5.494470,-0.405808,0.736156,7.938173,1.801556,9.679617,-7.654282,-8.974096,-2.863888,-0.548437,-2.672504,-5.179433,2.944607,9.977646,3.893244,5.878643,-5.019120,8.078587,-4.747595,-3.821307,0.730292,6.226666,-4.045345,2.291111,6.840038,-2.529447,6.700146,-6.348706,1.032592,-5.985824,1.230322,5.380019,-3.001513,8.555677,1.787122,-6.115421,6.404244,-0.021232,9.371418,-0.290221,-6.794614,-3.558574,-5.914799,-1.552254,-1.827736,-0.241309,-6.128293,1.672563,-8.084834,7.405892,-4.095582,-4.295783,5.059316,-3.762786,-6.004895,8.506756,4.688700,2.462550,-8.087812,8.124360,-0.025590,-5.759444,-0.167299,3.241892,-4.274866,-1.219656,-0.210265,-5.608275,-8.129747,-8.153814,-8.486676,2.130876,6.261429,7.799455,-3.434166,-2.726449,-5.981245,0.098267,-3.303132,0.811491,5.733709,-5.957024,4.165575,6.753401,4.529243,-6.194396,3.160464,6.756513,-3.094776,9.060634,-1.478454,-7.894374,-7.148124,9.604230,-9.254990,-5.165584,-7.734670,-2.006436,7.119793,3.125159,1.691252,-3.651652,8.706522,-5.157702,-9.507309,-4.622832,1.606273,9.133429,-1.203266,3.890908,-8.545817,-5.469902,-0.583611,-3.535589,-6.032324,-9.311784,2.826100,8.468913,-8.677095,3.160599,6.885335,2.525042,-1.524604,-0.734619,1.840131,9.299095,7.771747,1.167793,-2.859684,-5.314158,6.854969,5.699664,2.250517,-0.957309,-5.147104,3.600810,9.595189,-9.692132,6.366231,0.462713,-9.610944,-6.855575,-5.244527,4.900183,9.402479,-9.270243,-2.658662,-0.922279,-0.841684,-0.368163,-1.731644,-6.480885,-2.704943,2.068662,8.570772,7.451852,4.420566,-1.932024,9.589526,5.038205,0.472283,3.701269,1.418125,7.766225,-9.735623,-8.971475,0.844004,6.135930,5.252960,-3.270740,1.283020,2.569314,3.263740,-2.776007,1.015438,-1.971639,4.043677,6.974765,9.103166], dtype = "float32")#candidate|11798|(351,)|const|float32
call_11795 = relay.TupleGetItem(func_9214_call(relay.reshape(var_11796.astype('float64'), [5, 84]), relay.reshape(const_11797.astype('int16'), [480,]), relay.reshape(const_11798.astype('float32'), [351,]), ), 4)
call_11799 = relay.TupleGetItem(func_9218_call(relay.reshape(var_11796.astype('float64'), [5, 84]), relay.reshape(const_11797.astype('int16'), [480,]), relay.reshape(const_11798.astype('float32'), [351,]), ), 4)
func_3642_call = mod.get_global_var('func_3642')
func_3647_call = mutated_mod.get_global_var('func_3647')
const_11801 = relay.const([-8.548601,-4.106295,7.198365,-1.667024,4.289876,4.588272,-8.598104,8.303883,-7.989568,-3.012360,0.894685,3.702829,3.198421,-7.807850,0.598421,-8.339490,0.150045,3.536636,-8.120651,3.322636,8.860086,-9.635942,-8.676562,6.372696,-3.155857,-8.942915,8.458800,5.342752,2.787257,8.581569,-5.922426,-2.726562,-8.201864,-9.648973,-5.055138,-0.191400,3.872408,9.305235,-0.504824,-2.181666,2.173564,0.270526,-5.506903,6.100727,-0.136678,3.342731,-5.314574,-7.098884,8.707792,8.082120,-0.730857,7.104197,0.423646,-7.446362,-8.285435,-5.466453,6.998621,-3.693488,8.211475,-1.854177,-9.453998,-7.202438,5.233360,-1.771893,4.034313,-2.188788,0.816129,4.570208,0.783313,4.781637,-0.336809,8.083468,3.948492,-7.060570,2.125712,-3.484485,-2.715241,1.368575,7.031022,-6.635585,0.600223,-5.826873,2.187694,6.856957,9.342890,-9.659538,3.850409,-5.101838,5.098173,9.444743,6.008153,-6.222284,-5.971342,2.197452,6.661207,-0.691585,4.520014,-6.468446,3.836674,7.387732,-9.001754,-6.349429,4.680854,-5.493294,5.337190,7.974958,7.842881,-2.890729,3.534930,4.736295,-6.082338,-4.660111,-7.338039,-9.916659,-1.002146,9.703889,7.644002,-9.416779,-7.760114,0.291160,-5.191758,-5.083809,-7.347410,6.533267,-9.879177,2.824199,7.215737,-1.923907,-7.305099,6.653093,-1.314019,4.499955,-8.242134,-1.694694,-7.718784,8.451941,9.747090,-6.995330,-6.557717,6.578516,-3.354978,5.443124,-3.126367,7.618712,-7.442028,-1.396348,0.375620,-6.191693,7.517302,-4.816594,-0.527918,0.457877,5.550774,-8.353518,6.927137,1.485845,-4.396587,2.127420,-0.750514,1.013102,9.451347,-4.057674,9.506635,4.973613,2.126463,-9.706706,4.407493,0.413786,0.854455,-2.832896,-0.136752,-5.570905,3.371976,1.173658,-8.040208,-7.440190,-0.052855,0.651885,-2.708551,4.107795,-0.402571,6.709823,9.482518,6.791930,-2.680103,7.349874,8.754950,5.842779,-5.753325,-4.035314,4.988947,-7.560117,3.855748,5.297593,-2.674355,-0.624312,-4.739065,-7.492145,-1.665635,-9.880263,-2.952802,3.770328,3.303947,-8.985771,-7.739090,2.289958,2.109831,1.491421,2.370711,-4.326722,0.844270,-1.649332,2.250186,5.112322,-5.410364,-5.999637,-2.924157,-0.904936,9.186798,9.590990,-0.894666,3.164736,-8.673884,-9.616072,-5.626772,-8.414059,5.632185,5.965784,2.425266,1.721971,4.491391,-2.433635,1.284984,1.906820,0.741060,-0.045371,5.905689,-7.295867,1.569628,7.280404,9.010543,1.831041,4.207578,8.508485,-3.983086,-7.084204,8.212976,0.365254,-4.335139,2.986710,3.071865,6.832737,9.367100,-7.120087,-8.902036,-8.724998,3.924703,7.011864,3.710279,-0.473390,1.195344,1.353953,5.647925,9.826624,8.332344,-4.821219,8.747393,-9.156510,1.958451,7.548500,-5.467997,6.237794,5.527062,-8.225275,-7.980517,-0.314235,-3.440219,-0.748758,-8.722374,9.320467,-3.289838,-5.096288,8.527070,-6.521230,-6.107437,-2.221782,-8.520034,-2.539049,-1.091469,-9.605496,6.968886,-6.253306,-1.300632,-1.079137,5.779560,-1.812334,4.075680,9.534233,2.894320,1.626891,2.975742,7.277766,9.982028,4.272150,-9.209868,-8.800254,8.999270,5.136254,7.874844,-8.449595,7.873037,-8.735760,-3.998983,7.477954,-6.798600,9.897118,0.953893,1.467080,-6.544455,-3.398084,-5.638816,9.671918,-6.166246,5.858330,-1.175031,-6.605273,-9.521596,-2.510287,-9.593948,1.147266,-3.920323,-7.400038,9.698814,-5.396373,-4.427045,-0.142841,-4.678219,-6.532088,6.482156,-9.688956,-0.958874,1.250966,-2.991214,7.181840,-1.055868,1.687860,7.554835,-4.549826,3.278802,-6.590120,0.770413,-2.430952,-5.129506,-4.153464,-7.533826,2.092606,2.521385,0.786871,-5.312005,-6.471897,6.190184,6.829414,6.852360,8.506054,6.596138,4.501906,7.404694,-4.137256,-5.386940,6.518909,6.491118,9.978752,1.607750,-9.085452,6.403905,-3.400743,-4.544227,4.757714,3.410851,-2.147893,4.268024,-7.764154,8.403008,-2.964497,4.483862,-1.027327,1.925742,-7.818641,5.863051,-0.713187,7.353388,8.406063,3.674684,-7.440112,-3.136404,2.497959,-1.646121,-5.910232,-4.677645,3.059788,-3.352176,-8.297151,-3.882849,-8.402121,-6.013007,-8.718089,-3.875747,2.032909,0.234310,-4.661024,1.579621,3.747757,0.097547,0.299357,-4.032770,-1.073198,9.970557,-3.082861,8.786432,4.648213,-0.833707,1.363892,2.063419,-4.239188,-4.298768,-9.958624,-4.193302,3.092091,6.809365,8.751110,-5.479268,-0.595792,-0.896399,6.860654,-5.061773,6.120623,-1.569509,3.025918,-6.484738,-1.273634,-4.081817,-4.221103,-8.577232,0.080585,-4.207008,-8.939243,-7.639694,-3.255481,1.859632,-8.277925,-3.625486,-0.616426,-6.656345,1.287911,7.655749,-8.185962,-4.759495,-7.056487,-4.479085,8.722369,-4.570229,0.665516,-2.330333,-7.878370,7.402223,6.138369,-4.823463,7.126353,4.572979,6.689101,-3.692841,3.388783,-8.917401,-0.956418,0.829101,-9.518295,6.217436,-1.062926,0.684583,4.841375,1.972327,8.087207,2.704509,-7.986008,5.124483,0.321991,6.982265,-0.503477,0.938856,0.432292,-2.225726,-1.602094,1.783877,-9.369393,7.483678,-6.257344,-1.773569,7.629496,-1.555097,6.234985,1.167164,7.199756,2.975714,1.233725,-7.538200,4.093971,-5.870484,-7.499469,-6.873449,-3.694167,9.457803,-3.180339,-6.314864,6.112327,1.846618,-6.679515,5.505467,-9.415183,-7.501332,8.262191,-2.117315,4.884732,6.230269,-5.924076,-3.535480,3.289783,3.571768,-1.743542,4.603879,-3.851705,-5.899856,-3.587334,3.492561,-9.240112,-8.958026,-8.683332,-0.637436,8.254442,-7.434957,9.581811,-3.084453,-4.856902,-6.404242,-8.436593,-9.167368,-8.216603,9.574041,-4.303593,2.524665,-2.585976,8.540895,-6.495979,7.543325,1.662531,-7.520898,-1.163609,6.156485,-1.114164,1.871519,-1.580558,-4.898387,-5.644571,8.278523,-3.860851,3.368765,-3.275929,6.049300,-4.185076,-9.793446,-6.005580,-1.103709,4.736229,1.835417,7.317104,-0.791879,-9.236131,2.478213,9.636961,-7.109861,7.414721,-6.619473,-2.314768,4.773181,-0.813133,-6.213987,-0.036305,-7.833857,-2.544620,7.856604,-1.925452,5.925074,-0.408780,-7.116659,4.726170,5.037375,-2.785716,-9.583259,-0.301710,-1.118833,9.813776,3.793025,4.842545,-0.217184,-8.269023,-3.034046,7.544172,1.856944,-7.952629,7.389644,-2.027673,-9.280125,0.495186,1.590298,-0.923792,-7.295154,-1.971138,9.405325,9.594653,-6.440125,-1.918605,3.636789,-6.646472,7.796849,-5.657408,1.107901,-6.532744,6.857725,-9.374118,3.615720,-7.466185,0.136113,9.740620,4.096860,-0.725460,-6.284489,-6.450565,-7.948975,9.145963,5.599394,1.414352,-6.397892,-9.432679,9.882647,4.079895,-1.686763,-3.507183,-4.829843,-0.397771,2.121877,5.487903,4.660024,9.656822,4.883061,-3.194091,-1.767022,4.739724,8.060739,-7.723147,-5.182334,1.742217,-7.603515,-4.372230,3.809652,-0.022260,6.099648,4.745851,4.357581,8.772699,2.465283,4.741742,4.545464,-2.792831,-5.923251,1.299421,-3.526742,2.191223,-0.744762,-0.092622,6.470497,-4.774520,-3.485619,5.672207,-5.693565,-1.419055,-4.990547,3.563408,-9.122320,-1.932209,7.689553,-7.311385,-2.847114,-3.910696,9.930259,7.848453,5.992265,-6.567854,7.312825,2.004457,-0.042302,5.017131,8.061075,-4.983284,-3.141298,-6.009621,-7.059074,-8.866386,3.505296,1.033155,5.867076,2.385391,0.905942,-7.690569,5.566953,-1.812248,-0.195897,7.673637,7.026503,5.196281,-5.281648,8.670892,-9.008476,-9.024656,-0.481742,5.472947,-5.801839,-7.559630,-2.036484,-9.611578,-1.529030,2.583547,-1.807771,-8.711254,-5.656816,6.148134,1.420631,9.021955,-4.551195,0.734091,5.772971,-5.321328,0.749469,9.903766,-4.268586,-4.506973,5.250529,9.092184,-9.830820,4.520751,0.996814,8.438948,3.989917,0.676869,-4.861334,-3.551093,6.785583,1.740909,4.738997,-5.178298,-9.129929,-7.324045,-3.596742,8.195301,4.789267,5.393180,-4.289963,1.820913,0.903864,8.147101,-3.312718,2.703578,6.720652,-0.459381,-6.555639,-0.499998,5.921313,-8.033606,-0.380295,-0.906237,-6.668201,-8.424819,1.449075,-7.735882,-5.135745,-3.494579,1.407559,-8.591108,1.087329,6.297330,0.125381,-3.878130,-8.021708,-5.099584,6.677833,-0.870440,-6.610471,-2.874207,-3.090951,-6.825504,-9.253997,5.606992,9.580380,-3.207312,2.401177,-9.606342,5.141059,1.787062,8.423664,-7.228164,9.068402,-5.388488,-2.058141,0.761148,1.437637,7.670986,-0.910519,7.568460,4.274906,-0.199298,6.117604,5.582456,-0.475157,-0.725083,2.234381,-7.378733,6.679587,-1.516019,9.158763,-5.802239,-5.149500,-7.769080,0.288918,-2.701500,-9.168324,9.585243,4.394786,-1.389605,0.281458,1.437906,-6.744972,1.526631,-4.192728,7.162317,2.806182,-0.944326,3.301333,2.795000,-7.020390,5.471216,-0.936851,-4.423337,-2.492590,3.836245,2.380510,-3.953840,-1.982101,2.676121,3.606301,-7.742644,-3.215136,-3.546943,-0.714642,-4.752079,0.251665,0.316788,-3.014550,7.741861,-8.651473,7.505445,8.522174,1.099428,0.746174,-8.334925,0.738355,-3.829371,3.078873,-9.217546,-2.043342,-6.373560,-5.050632,6.562889,2.946717,8.345801,-3.495239,4.403316,-1.188368,6.532968,7.900240,8.113532,8.190752,9.457051,-5.537655,-0.065832,-5.338061,1.362813,-9.403175,-5.232527,1.067484,7.241320,-5.935382,-0.013896,-9.860881,-0.417528,9.614972,-1.471460,6.808481,-6.020081,6.951145,-9.966628,0.024726,1.472126,8.344113,-7.587956,2.407486,-9.728372,-1.103001,8.665924,-6.420731,0.630440,9.918091,-3.008311,2.828627,-9.638226,5.759884,-2.608622,-3.932272,-6.785003,7.426665,1.997310,2.512095,-6.091691,-4.896627,-5.303122,-0.811464,-3.036939,3.227879,-9.911859,1.396331,-1.148671,-3.061904,-6.691290,-2.365954,-7.701868,6.778820,-7.633137,5.734163,-9.684067,-5.708292,-7.534114,-0.323559,-8.441758,-8.577875,-6.009764,-9.437570,-8.773082,-1.621525,5.507888,-5.318748,-3.538794,4.546173,-4.471673,-9.649519,-8.855215,1.360597,8.181391,-9.197777,9.143958,-7.635715,-7.977054,-6.112989,9.202877,2.096706,7.750836,-0.041554,3.767878,6.865166,-5.336474,2.648331,-5.245142,-5.503804,-3.707911,-1.858842,5.135698,-7.371681,4.232124,-1.573525,8.013278,2.591582,4.696047,-8.590654,-3.732116,-3.014458,0.440519,1.639255,-0.144334,4.237537,-7.193258,7.781812,7.609055,-4.521124,-0.793835,9.158166,-1.878413,7.623312,9.950306,6.002863,7.664411,-3.209042,8.379919,-2.102540,3.437631,-4.048241,0.211030,4.264848,4.800690,1.190566,3.166816,0.098136,-8.360568,6.996568,8.500884,3.299192,2.581266,1.046765,3.430889,-3.517631,-8.006686,6.174771,-4.579390,-2.681391,-8.290314,-0.110572,-7.570745,6.674613,-5.516156,-0.421925,4.856143,-6.121520,-0.999322,4.682049,3.034314,-8.080132,9.144657,-5.095748,6.277776,7.833505,-4.382339,3.056280,-3.035292,7.053933,0.847370,-2.823781,9.117621,6.044106,-8.244002,-5.598496,1.327379,6.274988,-6.810706,-6.051116,-6.343031,8.061437,4.766571,-8.923421,0.425447,-0.157267,8.424344,-8.295369,2.808654,-0.019488,-3.919211,-3.878262,-4.863598,-6.930370,7.423044,-8.115531,5.694961,-0.773504,-1.940845,-0.086869,3.249933,-5.487357,8.032043,4.305578,1.312915,-9.491834,-0.511234,6.055555,3.985571,3.892655,-0.129383,-3.103827,3.434361,6.111990,6.959963,-5.026226,-8.824496,-0.622742,2.381640,1.230595,4.978074,-6.317175,-3.111825,-4.240542,-8.037947,-9.836339,6.936961,-9.281205,2.102635,-2.060240,3.298718,7.669640,-3.447495,3.603516,-2.829161,-1.903726,-0.014697,4.288625,-1.162582,-5.041843,-3.322846], dtype = "float32")#candidate|11801|(1120,)|const|float32
const_11802 = relay.const(-9.822243, dtype = "float32")#candidate|11802|()|const|float32
var_11803 = relay.var("var_11803", dtype = "uint16", shape = (66,))#candidate|11803|(66,)|var|uint16
call_11800 = relay.TupleGetItem(func_3642_call(relay.reshape(const_11801.astype('float32'), [16, 7, 10]), relay.reshape(const_11802.astype('float32'), []), relay.reshape(var_11803.astype('uint16'), [1, 66]), ), 6)
call_11804 = relay.TupleGetItem(func_3647_call(relay.reshape(const_11801.astype('float32'), [16, 7, 10]), relay.reshape(const_11802.astype('float32'), []), relay.reshape(var_11803.astype('uint16'), [1, 66]), ), 6)
func_9439_call = mod.get_global_var('func_9439')
func_9440_call = mutated_mod.get_global_var('func_9440')
call_11805 = relay.TupleGetItem(func_9439_call(), 0)
call_11806 = relay.TupleGetItem(func_9440_call(), 0)
func_2264_call = mod.get_global_var('func_2264')
func_2266_call = mutated_mod.get_global_var('func_2266')
var_11808 = relay.var("var_11808", dtype = "float64", shape = (1536,))#candidate|11808|(1536,)|var|float64
call_11807 = relay.TupleGetItem(func_2264_call(relay.reshape(var_11808.astype('float64'), [16, 8, 12])), 0)
call_11809 = relay.TupleGetItem(func_2266_call(relay.reshape(var_11808.astype('float64'), [16, 8, 12])), 0)
func_11510_call = mod.get_global_var('func_11510')
func_11513_call = mutated_mod.get_global_var('func_11513')
var_11811 = relay.var("var_11811", dtype = "float32", shape = (630,))#candidate|11811|(630,)|var|float32
call_11810 = relay.TupleGetItem(func_11510_call(relay.reshape(call_11784.astype('int8'), [7, 4, 4]), relay.reshape(var_11811.astype('float32'), [630,]), ), 2)
call_11812 = relay.TupleGetItem(func_11513_call(relay.reshape(call_11784.astype('int8'), [7, 4, 4]), relay.reshape(var_11811.astype('float32'), [630,]), ), 2)
output = relay.Tuple([call_11763,call_11784,call_11795,var_11796,const_11797,const_11798,call_11800,const_11801,const_11802,var_11803,call_11805,call_11807,var_11808,call_11810,var_11811,])
output2 = relay.Tuple([call_11764,call_11785,call_11799,var_11796,const_11797,const_11798,call_11804,const_11801,const_11802,var_11803,call_11806,call_11809,var_11808,call_11812,var_11811,])
func_11843 = relay.Function([var_11796,var_11803,var_11808,var_11811,], output)
mod['func_11843'] = func_11843
mod = relay.transform.InferType()(mod)
var_11844 = relay.var("var_11844", dtype = "float64", shape = (420,))#candidate|11844|(420,)|var|float64
var_11845 = relay.var("var_11845", dtype = "uint16", shape = (66,))#candidate|11845|(66,)|var|uint16
var_11846 = relay.var("var_11846", dtype = "float64", shape = (1536,))#candidate|11846|(1536,)|var|float64
var_11847 = relay.var("var_11847", dtype = "float32", shape = (630,))#candidate|11847|(630,)|var|float32
output = func_11843(var_11844,var_11845,var_11846,var_11847,)
func_11848 = relay.Function([var_11844,var_11845,var_11846,var_11847,], output)
mutated_mod['func_11848'] = func_11848
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9779_call = mod.get_global_var('func_9779')
func_9781_call = mutated_mod.get_global_var('func_9781')
call_11858 = relay.TupleGetItem(func_9779_call(), 0)
call_11859 = relay.TupleGetItem(func_9781_call(), 0)
output = call_11858
output2 = call_11859
func_11861 = relay.Function([], output)
mod['func_11861'] = func_11861
mod = relay.transform.InferType()(mod)
mutated_mod['func_11861'] = func_11861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11861_call = mutated_mod.get_global_var('func_11861')
call_11862 = func_11861_call()
output = call_11862
func_11863 = relay.Function([], output)
mutated_mod['func_11863'] = func_11863
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11361_call = mod.get_global_var('func_11361')
func_11362_call = mutated_mod.get_global_var('func_11362')
call_11977 = relay.TupleGetItem(func_11361_call(), 2)
call_11978 = relay.TupleGetItem(func_11362_call(), 2)
output = call_11977
output2 = call_11978
func_11979 = relay.Function([], output)
mod['func_11979'] = func_11979
mod = relay.transform.InferType()(mod)
mutated_mod['func_11979'] = func_11979
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11979_call = mutated_mod.get_global_var('func_11979')
call_11980 = func_11979_call()
output = call_11980
func_11981 = relay.Function([], output)
mutated_mod['func_11981'] = func_11981
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11136_call = mod.get_global_var('func_11136')
func_11138_call = mutated_mod.get_global_var('func_11138')
call_11997 = func_11136_call()
call_11998 = func_11136_call()
output = relay.Tuple([call_11997,])
output2 = relay.Tuple([call_11998,])
func_12033 = relay.Function([], output)
mod['func_12033'] = func_12033
mod = relay.transform.InferType()(mod)
mutated_mod['func_12033'] = func_12033
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12033_call = mutated_mod.get_global_var('func_12033')
call_12034 = func_12033_call()
output = call_12034
func_12035 = relay.Function([], output)
mutated_mod['func_12035'] = func_12035
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8446_call = mod.get_global_var('func_8446')
func_8448_call = mutated_mod.get_global_var('func_8448')
call_12042 = relay.TupleGetItem(func_8446_call(), 1)
call_12043 = relay.TupleGetItem(func_8448_call(), 1)
func_7889_call = mod.get_global_var('func_7889')
func_7890_call = mutated_mod.get_global_var('func_7890')
call_12051 = func_7889_call()
call_12052 = func_7889_call()
func_8742_call = mod.get_global_var('func_8742')
func_8745_call = mutated_mod.get_global_var('func_8745')
var_12063 = relay.var("var_12063", dtype = "float32", shape = (630,))#candidate|12063|(630,)|var|float32
call_12062 = func_8742_call(relay.reshape(var_12063.astype('float32'), [14, 15, 3]))
call_12064 = func_8742_call(relay.reshape(var_12063.astype('float32'), [14, 15, 3]))
output = relay.Tuple([call_12042,call_12051,call_12062,var_12063,])
output2 = relay.Tuple([call_12043,call_12052,call_12064,var_12063,])
func_12069 = relay.Function([var_12063,], output)
mod['func_12069'] = func_12069
mod = relay.transform.InferType()(mod)
mutated_mod['func_12069'] = func_12069
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12070 = relay.var("var_12070", dtype = "float32", shape = (630,))#candidate|12070|(630,)|var|float32
func_12069_call = mutated_mod.get_global_var('func_12069')
call_12071 = func_12069_call(var_12070)
output = call_12071
func_12072 = relay.Function([var_12070], output)
mutated_mod['func_12072'] = func_12072
mutated_mod = relay.transform.InferType()(mutated_mod)
const_12100 = relay.const([[[True,False,True,False,False,False,False],[True,False,False,False,False,False,True],[True,False,True,True,False,False,True],[False,True,False,True,False,True,False],[True,False,False,True,False,True,True],[True,True,True,False,True,True,False],[False,False,True,True,False,True,False],[False,True,False,True,False,False,False],[False,True,False,True,True,False,False],[False,True,True,True,False,False,True],[True,False,True,True,False,True,True],[False,False,True,True,True,True,False],[True,True,False,True,True,False,False],[False,False,True,False,True,False,True],[True,True,False,False,True,False,False],[True,True,True,True,True,False,False]],[[False,False,False,True,True,False,False],[False,False,False,True,False,True,True],[True,False,True,False,True,True,True],[False,True,True,True,False,False,False],[True,False,True,True,False,True,False],[False,False,False,False,False,True,True],[True,False,True,False,False,False,True],[True,True,False,True,True,True,False],[True,True,True,True,True,False,False],[False,True,True,False,True,True,False],[False,False,False,True,True,True,True],[True,True,False,True,False,False,False],[True,True,True,True,False,False,False],[False,False,False,False,True,True,False],[True,True,False,True,True,False,False],[False,True,True,False,False,False,True]],[[True,False,True,False,False,False,True],[False,False,True,False,False,False,False],[False,True,False,True,False,True,False],[False,True,False,False,True,True,False],[True,True,True,False,False,True,True],[False,True,False,False,False,False,True],[False,False,True,False,True,False,True],[False,True,True,False,False,True,False],[True,True,True,True,False,False,True],[False,True,False,False,True,True,True],[True,True,False,True,True,True,False],[False,True,True,False,False,True,False],[True,False,True,False,True,False,True],[False,False,True,False,False,True,True],[True,False,False,False,True,False,True],[False,True,True,True,True,True,True]],[[True,False,False,False,False,True,True],[False,True,False,False,True,True,False],[True,True,True,False,True,True,False],[True,True,False,True,True,True,False],[False,False,False,True,False,False,False],[True,True,True,True,False,True,True],[True,True,True,True,False,True,True],[True,False,False,False,False,False,False],[True,True,False,True,False,False,False],[False,False,False,True,True,True,False],[True,True,True,True,False,True,False],[False,False,True,True,False,True,False],[False,True,False,True,True,False,False],[True,True,True,True,True,True,True],[True,True,True,False,False,True,True],[False,False,True,False,False,True,True]],[[False,False,True,True,False,True,False],[True,False,True,False,True,False,True],[False,True,False,True,False,False,False],[False,True,True,False,True,True,False],[True,False,False,True,False,True,False],[False,True,True,True,True,False,True],[False,False,True,False,True,True,False],[False,True,False,False,False,True,True],[True,False,True,False,False,True,False],[True,True,False,True,False,True,True],[True,True,False,True,True,True,True],[True,True,True,True,False,True,True],[True,True,False,False,True,False,True],[False,True,True,True,False,True,False],[False,True,True,True,False,False,False],[False,True,False,True,False,True,False]],[[True,True,True,False,False,False,False],[True,False,True,True,True,False,False],[False,False,True,False,True,False,False],[True,False,False,True,False,False,False],[False,False,False,True,True,False,True],[True,False,False,False,False,True,False],[True,False,False,True,False,True,False],[True,False,False,False,False,False,False],[False,True,False,True,True,True,False],[False,True,False,True,True,False,True],[True,True,True,False,True,False,False],[True,True,False,False,True,False,True],[False,False,True,False,True,True,True],[False,False,False,False,True,False,True],[False,False,True,True,True,False,False],[True,False,False,False,False,False,True]],[[True,False,False,True,False,True,False],[False,False,True,False,True,True,True],[False,True,False,True,True,True,False],[True,False,False,False,False,False,False],[False,False,True,False,False,True,True],[True,False,True,True,True,True,True],[False,False,False,False,False,True,True],[True,False,False,False,False,False,False],[True,True,True,True,True,False,True],[False,False,True,True,False,False,False],[True,True,True,True,False,False,False],[False,True,True,True,True,True,False],[False,False,False,True,True,True,False],[False,False,False,False,False,True,True],[False,True,True,False,True,True,True],[True,True,True,True,False,True,False]],[[True,False,False,True,False,True,False],[True,False,True,False,False,True,False],[False,False,False,True,True,True,True],[False,False,False,True,True,False,False],[True,True,True,True,True,True,False],[False,False,True,True,True,False,True],[True,True,False,False,True,False,True],[False,True,False,True,False,False,False],[True,False,True,True,True,False,False],[True,True,False,True,False,True,False],[True,True,False,False,False,False,False],[True,False,True,False,True,True,True],[True,False,True,True,False,False,False],[False,False,False,True,False,False,False],[False,False,False,True,True,False,True],[False,False,False,True,False,True,True]],[[False,True,False,True,True,False,False],[True,False,False,True,True,False,False],[True,True,False,True,True,True,False],[False,True,True,False,False,True,False],[False,True,True,False,False,False,False],[True,False,False,False,False,True,False],[True,True,False,False,False,True,True],[True,False,True,False,True,True,False],[True,False,False,False,True,False,False],[True,False,False,False,False,True,True],[False,False,True,False,True,True,False],[False,False,False,True,False,True,True],[False,False,False,True,True,False,True],[False,False,False,False,False,False,False],[False,True,True,True,True,False,True],[True,False,True,True,False,True,False]],[[True,True,False,True,True,False,False],[False,False,False,True,True,False,True],[True,False,True,False,False,True,True],[True,True,False,False,True,True,True],[False,True,False,True,False,False,False],[True,False,False,False,False,False,True],[True,False,False,True,True,True,True],[True,False,False,False,False,False,True],[True,True,False,True,False,False,False],[False,False,False,False,False,True,False],[True,True,True,False,False,True,True],[True,False,False,False,True,False,False],[True,False,True,False,False,False,False],[False,False,False,True,True,True,True],[True,False,True,False,True,False,True],[True,True,False,False,True,True,False]],[[False,True,True,True,False,False,False],[False,False,False,False,True,False,True],[False,True,False,True,True,True,False],[True,True,True,False,False,True,True],[False,False,True,False,False,False,False],[False,True,False,False,True,False,False],[False,False,False,False,False,False,False],[True,False,False,False,True,True,True],[False,False,False,False,True,True,False],[True,False,False,True,True,False,True],[False,False,True,True,True,True,True],[True,False,True,False,False,True,True],[True,False,False,True,True,False,True],[False,True,False,True,True,False,False],[False,True,True,True,True,False,False],[False,False,True,True,False,True,False]],[[False,False,True,True,True,True,True],[False,True,False,False,False,False,True],[False,True,True,False,False,False,True],[True,False,True,False,False,True,True],[False,False,True,False,False,False,False],[True,True,True,True,False,True,True],[True,False,False,True,True,True,True],[True,True,True,False,False,False,False],[False,True,False,True,True,True,True],[False,False,True,True,True,False,True],[False,False,False,True,False,True,False],[True,False,True,False,False,False,False],[False,True,True,False,False,True,True],[False,False,True,False,False,False,True],[False,True,False,False,True,True,True],[True,False,True,False,False,False,False]],[[False,True,False,False,False,True,True],[False,False,False,False,True,True,False],[True,False,False,True,True,False,True],[False,True,False,True,True,True,True],[False,False,True,False,True,True,True],[True,True,False,True,True,False,False],[False,False,False,False,False,False,True],[True,True,True,True,False,True,False],[False,True,True,False,True,False,False],[False,True,True,True,False,True,False],[False,False,False,False,False,True,False],[False,True,False,True,False,True,False],[True,False,False,True,True,True,True],[False,True,True,False,False,True,True],[True,False,False,True,False,False,True],[False,True,False,False,True,False,True]],[[True,True,True,False,True,True,True],[True,False,False,True,True,False,False],[False,True,True,True,True,True,False],[False,False,True,False,True,True,True],[False,True,False,False,False,False,False],[False,True,False,True,False,False,False],[True,False,False,True,True,False,False],[True,True,False,True,True,False,True],[True,True,False,True,True,True,True],[True,True,False,True,False,False,False],[False,False,True,False,True,True,True],[False,True,False,True,True,False,False],[False,False,False,True,False,False,True],[True,True,False,False,False,False,False],[True,False,False,True,True,True,True],[False,True,True,False,False,True,False]],[[True,True,False,False,False,False,True],[False,True,False,True,False,True,True],[True,True,True,False,False,False,True],[True,True,True,True,False,False,True],[True,True,True,False,False,False,False],[False,False,False,False,True,False,True],[False,True,True,True,True,False,True],[True,False,False,False,False,True,True],[False,True,False,True,False,False,False],[True,False,False,True,False,False,False],[False,True,True,False,False,False,True],[True,True,False,False,True,False,False],[True,False,True,False,True,False,True],[False,False,True,True,False,False,False],[False,False,False,False,True,False,False],[False,False,True,True,True,True,False]],[[True,False,False,False,False,False,False],[True,False,False,True,False,True,False],[False,True,True,False,False,True,True],[True,True,True,True,False,True,True],[True,False,True,False,False,True,True],[False,True,True,False,True,True,True],[True,True,False,True,False,True,False],[False,False,True,False,False,False,True],[False,True,False,True,False,True,False],[False,True,True,True,False,False,True],[False,False,False,True,True,False,True],[True,True,True,False,False,False,False],[False,False,True,False,False,False,True],[False,True,True,False,False,False,True],[True,True,False,True,True,True,False],[False,True,True,True,True,False,True]]], dtype = "bool")#candidate|12100|(16, 16, 7)|const|bool
var_12101 = relay.var("var_12101", dtype = "bool", shape = (16, 16, 7))#candidate|12101|(16, 16, 7)|var|bool
bop_12102 = relay.logical_or(const_12100.astype('bool'), relay.reshape(var_12101.astype('bool'), relay.shape_of(const_12100))) # shape=(16, 16, 7)
output = relay.Tuple([bop_12102,])
output2 = relay.Tuple([bop_12102,])
func_12106 = relay.Function([var_12101,], output)
mod['func_12106'] = func_12106
mod = relay.transform.InferType()(mod)
mutated_mod['func_12106'] = func_12106
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12107 = relay.var("var_12107", dtype = "bool", shape = (16, 16, 7))#candidate|12107|(16, 16, 7)|var|bool
func_12106_call = mutated_mod.get_global_var('func_12106')
call_12108 = func_12106_call(var_12107)
output = call_12108
func_12109 = relay.Function([var_12107], output)
mutated_mod['func_12109'] = func_12109
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9439_call = mod.get_global_var('func_9439')
func_9440_call = mutated_mod.get_global_var('func_9440')
call_12162 = relay.TupleGetItem(func_9439_call(), 0)
call_12163 = relay.TupleGetItem(func_9440_call(), 0)
uop_12175 = relay.rsqrt(call_12162.astype('float32')) # shape=(3, 15, 11)
uop_12177 = relay.rsqrt(call_12163.astype('float32')) # shape=(3, 15, 11)
func_9779_call = mod.get_global_var('func_9779')
func_9781_call = mutated_mod.get_global_var('func_9781')
call_12179 = relay.TupleGetItem(func_9779_call(), 0)
call_12180 = relay.TupleGetItem(func_9781_call(), 0)
output = relay.Tuple([uop_12175,call_12179,])
output2 = relay.Tuple([uop_12177,call_12180,])
func_12204 = relay.Function([], output)
mod['func_12204'] = func_12204
mod = relay.transform.InferType()(mod)
output = func_12204()
func_12205 = relay.Function([], output)
mutated_mod['func_12205'] = func_12205
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11361_call = mod.get_global_var('func_11361')
func_11362_call = mutated_mod.get_global_var('func_11362')
call_12316 = relay.TupleGetItem(func_11361_call(), 1)
call_12317 = relay.TupleGetItem(func_11362_call(), 1)
output = call_12316
output2 = call_12317
func_12328 = relay.Function([], output)
mod['func_12328'] = func_12328
mod = relay.transform.InferType()(mod)
output = func_12328()
func_12329 = relay.Function([], output)
mutated_mod['func_12329'] = func_12329
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8150_call = mod.get_global_var('func_8150')
func_8152_call = mutated_mod.get_global_var('func_8152')
call_12395 = relay.TupleGetItem(func_8150_call(), 0)
call_12396 = relay.TupleGetItem(func_8152_call(), 0)
output = relay.Tuple([call_12395,])
output2 = relay.Tuple([call_12396,])
func_12405 = relay.Function([], output)
mod['func_12405'] = func_12405
mod = relay.transform.InferType()(mod)
mutated_mod['func_12405'] = func_12405
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12405_call = mutated_mod.get_global_var('func_12405')
call_12406 = func_12405_call()
output = call_12406
func_12407 = relay.Function([], output)
mutated_mod['func_12407'] = func_12407
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8789_call = mod.get_global_var('func_8789')
func_8790_call = mutated_mod.get_global_var('func_8790')
call_12428 = relay.TupleGetItem(func_8789_call(), 1)
call_12429 = relay.TupleGetItem(func_8790_call(), 1)
func_11556_call = mod.get_global_var('func_11556')
func_11558_call = mutated_mod.get_global_var('func_11558')
const_12432 = relay.const([-4.426037,4.081694,1.987815,4.503372,-3.328192,-3.121496,-2.652951,5.505384,-6.878445,-8.181163,-6.632826,9.098142,-5.604899,-8.544126,3.658138,-0.890776,7.276649,-0.213600,5.776923,-5.472193,-3.539093,-8.871537,-9.443889,6.569890,-1.897709,4.785126,-3.337064,9.048038,-5.033813,-7.642521,-3.200751,-2.187699,-3.592716,7.747852,-7.381589,6.139550,-8.755767,-6.956825,9.263059,5.477175,1.395872,-6.636420,5.666376,-2.466543,-5.081121,5.046199,0.667211,-7.898331,4.274535,5.658034,4.836326,-6.744187,0.818109,-1.771521,-6.171986,-1.824517,4.875777,2.240359,-0.739464,-7.407371,-8.302135,-4.497295,7.156757,-1.683605,-8.003689,7.045144,-8.089466,4.094102,-2.515579,0.222490,4.223600,-6.546206,-9.228725,5.283363,0.632517,4.425589,-4.398546,8.344163,0.390087,-4.978073,7.836377,2.301494,4.313083,1.519105,8.799874,5.664702,2.128093,3.610999,0.767410,-8.891334,-0.648845,2.359698,2.273099,0.621536,-0.724642,-7.943472,9.082550,0.772792,-5.077012,-3.982249,3.958074,-5.323634,1.559859,8.829717,9.770484,8.037965,9.846422,-9.905614,6.422044,2.418154,0.415924,8.574042,-2.939751,8.603466,-5.250040,-1.004460,0.669663,-1.625448,-8.753301,-3.727297,5.645967,1.497775,-9.878605,-3.161818,8.194503,0.687204,3.476310,5.791055,8.140044,1.006744,-7.053833,-7.209287,-8.064818,-0.896544,-4.133651,-3.640611,-9.154649,-1.115616,4.382643,-1.682778,3.307457,0.790644,4.305749,-4.351880,-9.724172,-1.926732,2.150445,-6.370836,0.924604,-9.349226,4.128175,2.787656,-6.278947,-4.989288,-0.668694,8.176490,-6.751076,5.341322,0.270477,4.997957,9.338657,2.540785,-8.075775,-4.166088,-8.627533,9.831798,-6.455466,-4.906522,-9.189033,-2.245198,6.543918,-4.951824,1.570870,4.981284,8.648606,-3.617186,-8.391427,6.584860,7.134864,-8.528544,-2.601342,-5.658144,7.501423,-3.791872,0.035333,-5.405412,-3.324908,4.802474,-3.385890,-9.181756,0.127873,-6.363113,-5.001572,-6.933849,-9.793295,-0.539943,-7.966699,2.638487,3.147569,2.146780,-3.067092,4.930320,6.536794,-7.638550,-3.906871,2.230258,0.545563,1.103608,-3.997763,-3.895343,4.116253,6.188153,6.096179,9.855179,-4.862648,0.772295,-6.194159,4.752520,3.098663,-6.669384,9.703276,6.709854,8.163187,-0.196723,-0.078651,-6.002291,9.279842,2.070627,-3.348687,5.408023,-4.440175,-4.279049,-5.644437,-2.932560,7.297266,1.810996,-9.512934,-7.863265,6.918685,2.435792], dtype = "float32")#candidate|12432|(240,)|const|float32
call_12431 = relay.TupleGetItem(func_11556_call(relay.reshape(const_12432.astype('float32'), [16, 1, 15])), 0)
call_12433 = relay.TupleGetItem(func_11558_call(relay.reshape(const_12432.astype('float32'), [16, 1, 15])), 0)
func_12204_call = mod.get_global_var('func_12204')
func_12205_call = mutated_mod.get_global_var('func_12205')
call_12467 = relay.TupleGetItem(func_12204_call(), 1)
call_12468 = relay.TupleGetItem(func_12205_call(), 1)
func_10598_call = mod.get_global_var('func_10598')
func_10600_call = mutated_mod.get_global_var('func_10600')
call_12480 = func_10598_call()
call_12481 = func_10598_call()
output = relay.Tuple([call_12428,call_12431,const_12432,call_12467,call_12480,])
output2 = relay.Tuple([call_12429,call_12433,const_12432,call_12468,call_12481,])
func_12489 = relay.Function([], output)
mod['func_12489'] = func_12489
mod = relay.transform.InferType()(mod)
output = func_12489()
func_12490 = relay.Function([], output)
mutated_mod['func_12490'] = func_12490
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8297_call = mod.get_global_var('func_8297')
func_8299_call = mutated_mod.get_global_var('func_8299')
call_12494 = func_8297_call()
call_12495 = func_8297_call()
func_9287_call = mod.get_global_var('func_9287')
func_9290_call = mutated_mod.get_global_var('func_9290')
var_12505 = relay.var("var_12505", dtype = "float64", shape = (520,))#candidate|12505|(520,)|var|float64
call_12504 = func_9287_call(relay.reshape(var_12505.astype('float64'), [4, 13, 10]), relay.reshape(var_12505.astype('float64'), [4, 13, 10]), )
call_12506 = func_9287_call(relay.reshape(var_12505.astype('float64'), [4, 13, 10]), relay.reshape(var_12505.astype('float64'), [4, 13, 10]), )
output = relay.Tuple([call_12494,call_12504,var_12505,])
output2 = relay.Tuple([call_12495,call_12506,var_12505,])
func_12507 = relay.Function([var_12505,], output)
mod['func_12507'] = func_12507
mod = relay.transform.InferType()(mod)
var_12508 = relay.var("var_12508", dtype = "float64", shape = (520,))#candidate|12508|(520,)|var|float64
output = func_12507(var_12508)
func_12509 = relay.Function([var_12508], output)
mutated_mod['func_12509'] = func_12509
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8136_call = mod.get_global_var('func_8136')
func_8137_call = mutated_mod.get_global_var('func_8137')
call_12519 = func_8136_call()
call_12520 = func_8136_call()
func_11556_call = mod.get_global_var('func_11556')
func_11558_call = mutated_mod.get_global_var('func_11558')
const_12533 = relay.const([[3.824320,-9.849571,-6.662331,-9.797072,-4.898386,8.825149,-8.382779,4.688711,6.093619,8.492308],[-2.228994,-5.758578,7.058370,-5.536192,-6.486159,-2.657945,5.409692,7.183458,-6.025710,-0.861345],[2.006384,5.060682,-6.092409,-8.157706,4.540746,3.328951,8.530753,5.231264,-5.936452,-7.929860],[9.972716,-0.134982,0.846460,-6.106082,1.629570,8.375463,2.983608,9.133984,0.774642,8.871378],[8.745003,-4.460821,-8.336120,9.852766,-6.406667,3.115886,-2.718426,-6.188166,5.320987,1.046362],[-4.450365,-7.638489,-9.513041,6.436240,7.555393,-6.217362,-9.685668,1.699252,-2.503884,8.538093],[6.496859,-6.134268,-6.192110,5.112011,-0.119199,0.512932,5.559835,-9.408026,7.947908,7.434957],[-7.663994,0.757362,7.161011,5.455629,-8.025403,-6.486736,5.312331,2.219337,0.638706,-3.095647],[-6.050898,-2.164284,7.731307,8.298291,9.523312,6.787191,-2.238797,-0.690989,-7.289751,0.686934],[-7.823385,-2.433864,-1.196388,6.436034,-8.654739,9.510708,8.630714,4.193024,-9.930158,6.889458],[8.374322,2.019393,-0.620406,9.600242,7.725549,4.572681,-4.234923,-9.074270,2.205167,0.251204],[7.456533,-2.179670,-0.868324,0.103917,-7.730826,-4.907452,3.485898,1.638253,5.731763,-3.830951],[8.339263,-5.870619,3.368570,7.520905,2.644433,8.557149,9.459773,3.980613,8.734826,6.469898],[-9.132859,7.085078,6.685856,0.926164,-9.726892,-4.207577,1.096593,0.732966,7.328162,1.694402],[5.696392,8.739859,1.728952,0.489172,7.471587,-3.552837,-5.974788,7.125812,7.877326,9.882416],[1.883666,7.698354,-8.276547,9.300538,1.556350,-9.351631,2.532796,-6.291753,4.641765,8.805527],[-8.706547,-1.660357,-8.663944,-6.570089,-1.067315,6.324130,9.677113,-3.418072,7.013817,3.158114],[-9.650219,-4.178115,6.838988,-6.928210,-8.210453,3.462384,-4.076798,3.159620,-2.574978,-7.541805],[3.776155,-0.835058,-6.535214,4.002273,-8.442040,3.310278,-2.244880,9.226961,-9.231143,-3.056915],[0.628711,8.438260,5.130657,-9.785885,-9.848829,-5.552318,-0.443337,1.019840,0.812248,5.720353],[7.293001,7.736795,-4.747346,-9.138545,-8.473584,8.064049,-6.544323,0.112024,5.151843,5.979348],[-4.817852,-2.341001,-9.423003,-9.596702,-2.878977,-0.691653,-2.106683,2.621173,-0.270942,1.945819],[8.741312,-1.158603,1.953478,9.013431,-5.475648,-8.152317,3.259551,8.004889,-3.655593,3.893726],[3.614445,7.672908,6.612569,-7.110739,-5.268220,1.700384,-2.537649,0.014741,3.538965,7.112758]], dtype = "float32")#candidate|12533|(24, 10)|const|float32
call_12532 = relay.TupleGetItem(func_11556_call(relay.reshape(const_12533.astype('float32'), [16, 1, 15])), 0)
call_12534 = relay.TupleGetItem(func_11558_call(relay.reshape(const_12533.astype('float32'), [16, 1, 15])), 0)
func_1352_call = mod.get_global_var('func_1352')
func_1354_call = mutated_mod.get_global_var('func_1354')
var_12536 = relay.var("var_12536", dtype = "uint8", shape = (192,))#candidate|12536|(192,)|var|uint8
call_12535 = func_1352_call(relay.reshape(var_12536.astype('uint8'), [4, 6, 8]))
call_12537 = func_1352_call(relay.reshape(var_12536.astype('uint8'), [4, 6, 8]))
func_9600_call = mod.get_global_var('func_9600')
func_9601_call = mutated_mod.get_global_var('func_9601')
call_12539 = func_9600_call()
call_12540 = func_9600_call()
func_4219_call = mod.get_global_var('func_4219')
func_4222_call = mutated_mod.get_global_var('func_4222')
const_12584 = relay.const([-4,-8,9,10,4,-1,-4,6,-2,3,7,1,7,6,-5,-5,1,1,7,3,9,-4,5,-2,8,-2,-1,8,5,6,-10,-10,6,2,5,7,-1,7,-2,-4,-4,-5,3,5,-7,9,5,8,-3,7,6,-1,8,5,-7,-10,7,-10,-1,10,7,3,1,3,2,9,5,-4,-8,-3,-10,-7,-10,-1,1,9,3,2,-5,-5,7,4,-5,-7,9,-9,-4,-10,-3,-7,2,-6,2,-8,-5,4,8,5,8,6,3,8,4,-4,-9,-3,1,-6,9,7,-7,-3,-1,-10,-2,8,-4,3,-6,-4,9,4,9,10,3,10,-2,-5,-5,4,1,-1,10,-2,-10,-9,-4,-9,-4,2,10,-9,9,5,-9,9,1,-7,-3,-5,-5,-2,-1,5,1,5,9,4,-10,-2,-8,-10,-3,7,-8,-9,-1,2,-1,9,4,3,-10,3,-6,8,8,-10,-7,-6,-3,7,-3,8,-6,6,-3,-5,-8,10,5,-7,-5,3,5,-6,4,4,2,1,-9,10,-10,2,5,-1,1,5,-6,-10,10,3,9,1,-9,1,-3,-9,-8,-10,-6,-5,-2,5,-1,-1,10,4,9,-3,8,-8,7,-4,2,-9,-9,-5,5,7,2,-6,1,-4,-5,-1,-10,-6,8,-3,-5,9,7,3,4,7,-9,10,4,2,-10,-4,4,9,-9,-4,-3,6,-7,-1,10,-6,-2,1,-10,-7,6,3,9,-1,2,-3,-8,-4,-2,7,2,3,10,2,-4,2,-8,9,-5,-8,-8,2,3,-3,1,-7,3,-7,-3,-5,-5,7,4,-3,-6,7,-3,2,-5,3,4,6,-1,2,-1,-8,-6,2,-1,-8,-5,3,-4,-5,7,-4,9,8,-5,3,7,-4,8,-2,8,-6,-5,-2,1,9,-9,-10,-4,-8,9,7,-5,-9,-7,-2,3,10,8,-8,-1,-8,1,-9,-6,-6,-2,-9,5,10,10,-7,-3,-10,10,9,-4,-4,-4,-10,1,5,10,-10,3,9,5,4,-4,6,-2,-5,-1,3,-3,-4,-10,8,5,7,2,-1,3,-5,-2,10,6,-2,6,2,8,-4,7,10,-3,-7,-2,-4,-4,1,1,-1,9,-6,7,-4,6,-5,1,-4,-2,-9,-1,-9,-1,-2,4,-9,-7,7,3,-10,9,-3,-9,-3,9,-5,-7,7,7,-2,3,3,8,-3,-9,-1,8,-9,10,10,-5,10,-1,4,4,-10,-9,6,-3,10,2,2,-7,9,-2,7,-3,-3,-1,4,-3,4,-7,7,9,-4,1,3,5,-3,10,-8,6,9,8,-7,-10,-1,3,-7,-7,3,6,-4,-7,-10,1,-2,-1,6,-6,10,-6,-5,1,9,-2,4,10,1,-8,-4,10,6,9,-1,-7,-1,2,-9,-7,-10,3,-8,-3,2,-9,10,4,-1,8,-6,-4,5,2,-8,-2,-9,-4,10,4,-9,-8,-2,-5,-5,-6,-7,7,-6,-5,9,5,-4,5,-6,-8,3,6,-10,10,-5,6,7,-3,4,7,5,3,1,-5,-10,4,9,-3,-2,-4,-1,6,-4,1,6,3,-10,-1,8,-7,-1,4,-10,10,-1,-6,3,-10,-10,-6,9,-8,-10,7,8,-8,5,-8,-10,5,-1,4,5,-2,5,3,-9,-10,-1,9,-10,-8,-1,-10,-3,2,7,1,-10,-9,2,8,3,2,-6,5,8,-1,-10,-9,5,8,-7,-4,-3,-3,-4,-6,-8,3,1,-10,-1,-7,-3,5,-8,-9,-3,4,-5,9,-8,6,-5,-10,7,5,-2,-1,1,-4,-9,3,-8,-8,-4,2,-3,-7,-7,7,8,4,-6,-6,10,-5,-5,-3,-5,-5,7,8,6,-10,-4,-9,-9,-2,-7,-4,-8,-8,-7,-5,-9,1,8,5,7,-6,-2,-3,7,10,6,1,-2,9,9,4,-4,5,6,-5,7,4,-4,2,4,5,5,6,-6,-7,-6,-2,-5,2,7,6,7,-3,9,-4,9,-3,-7,10,-1,-6,-9,9,5,7,9,8,-3,8,-8,5,4,-10,6,-2,-8,-7,-9,10,10,-8,1,4,6,-6,-6,10,10,9,-1,-4,-1,5,-9,-4,4,-5,-5,-9,-3,-5,-7,-9,6,-2,8,5,8,9,-7,-6,4,-4,-10,-2,-9,4,-2,10,10,5,9,-9,-10,-6,-9,5,-4,2,3,9,-1,-7,-5,-10,-10,-2,5,-8,10,-9,4,2,-5,2,-10,-2,-3,3,6,2,8,-5,-5,-5,6,-4,10,-10,2,-6,4,-3,-7,-4,10,8,-10,-9,7,2,10,6,3,6,10,2,-10,-3,-1,-7,-3,-7,10,-1,-9,-10,10,10,4,3,-8,7,9,-4,-7,9,7,-4,-1,-4,10,1,2,7,7,-9,4,4,4,-4,-10,10,1,4,2,4,6,4,-9,5,1,-5,-7,-10,7,-3,-9,4,-8,-3,10,2,5,3,7,1,9,-4,-5,9,-10,-10,-5,10,5,-4,1,9,10,-1,10,-6,8,-7,-4,-4,1,5,8,-1,-9,8,-9,-7,8,7,-9,-9,2,-7,-2,-3,7,-1,3,8,7,1,2,6,-5,-10,-7,-9,-4,-5,9,1,8,-1,-4,-3,6,8,2,-9,-8,-1,-9,1,-9,2,-8,6,-7,-9,5,-1,-7,-8,-2,8,-10,-4,-9,2,3,8,7,9,10,-4,-9,-5,-5,-5,-3,-8,2,-2,6,3,-10,-3,4,2,8,-10,-2,-3,-1,5,-1,-7,-4,8,-4,9,1,-2,4,8,9,-8,4,-9,10,-8,-6,8,3,10,-6,-5,3,-1,-3,-10,8,5,-1,-6,8,-4,9,6,9,-1,-9,9,6,-10,10,1,-9,-1,-9,-3,-10,-3,10,-1,9,1,10,9,-3,-3,10,2,-8,-2,-9,6,-2,8,-10,3,3,-5,-6,-9,5,2,5,5,-5,4,1,-5,9,-7,4,-8,3,-2,-10,-10,4,-10,-5,6,-3,-6,-8,-9,6,-8,5,-9,-9,-1,-3,-6,2,8,3,7,-2,-10,6,9,-5,-4,3,3,6,3,-5,-8,2,-4,10,1,-4,4,10,2,2,-8,-9,7,4,-7,-6,6,3,-5,1,6,-6,-5,-6,4,3,1,2,9,5,-7,-3,10,-4,8,10,-1,4,7,-5,8,-10,3,-4,-9,10,-1,-10,-10,6,10,-2,6,-10,-8,1,-6,4,6,2,8,-3,5,-1,-8,3,-5,-2,2,6,-9,-5,-10,2,8,1,-6,-6,10,5,4,-7,-4,-4,10,-8,6,4,4,-2,-10,8,-9,-6,-2,6,-1,-7,-3,3,10,4,5,-2,4,3,8,9,-6,6,-7,5,9,-5,4,8,7,10,2,3,5,-1,7,-2,-6,-10,3,3,7,6,3,-5,-10,4,-4,-9,5,4,1,-5,-4,-1,10,9,-1,-9,1,-5,-7,-10,-8,-2,10,-4,-9,7,2,10,-2,-1,4,-9,4,-3,-5,-5,-5,-5,-2,5,6,5,-9,-3,-4,6,-4,4,-9,2,3,8,-4,-2,-1,-8,-8,-6,9,-2,4,4,4,-10,6,-8,9,8,6,10,6,6,-4,-5,-4,8,4,7,-10,3,-9,9,-5,-1,-7,-10,-10,9,1,-7,-8,4,-6,1,8,-4,-5,6,9,2,-8,-9,9,2,-9,-4,3,2,-8,5,-9,6,-3,-3,-8,6,-7,6,-2,-7,-7,-9,-2,-2,-4,-8,-8,-4,-7,-3,1,-10,-6,-8,5,9,-10,-4,7,-3,-3,-1,-5,3,-3,-6,-8,5,-5,2,10,-3,10,-1,3,8,-4,8,6,-3,10,1,10,-1,1,-4,-7,-9,4,3,-3,5,2,1,7,-4,5,-4,-3,9,-10,-3,8,1,-4,-1,-7,-8,-2,-4,-5,7,-6,-5,5,3,7,-2,1,-8,10,-4,6,6,1,8,-10,5,5,5,6,-5,5,9,-1,-1,-6,9,-6,-1,-7,-2,1,3,9,-6,-7,9,10,-7,5,-3,-4,-5,9,9,3,5,1,2,7,7,10,-7,6,-3,-4,1,9,8,2,-6,-9,10,8,-1,1,10,-6,4,-10,10,-1,4,9,-10,9,5,-4,7,-1,8,6,5,-4,1,-4,-10], dtype = "uint32")#candidate|12584|(1568,)|const|uint32
var_12585 = relay.var("var_12585", dtype = "float64", shape = (1404,))#candidate|12585|(1404,)|var|float64
call_12583 = relay.TupleGetItem(func_4219_call(relay.reshape(const_12584.astype('uint32'), [14, 7, 16]), relay.reshape(var_12585.astype('float64'), [1404,]), ), 0)
call_12586 = relay.TupleGetItem(func_4222_call(relay.reshape(const_12584.astype('uint32'), [14, 7, 16]), relay.reshape(var_12585.astype('float64'), [1404,]), ), 0)
func_10466_call = mod.get_global_var('func_10466')
func_10472_call = mutated_mod.get_global_var('func_10472')
const_12615 = relay.const([-7,8,-6,2,5,-3,-2,-6,-3,-7,8,-6,-9,-7,8,3,-10,7,1,8,-9,-10,5,-1,-5,-7,8,4,-10,-8,-8,4,-3,8,10,3,8,-10,9,3,-10,7,-4,7,9,-2,8,8,7,-9,-1,-6,-4,-2,-10,7,7,-9,-2,-7,-6,9,-7,7,-3,2,-9,-3,-7,-5,9,-6,-3,-7,5,-5,5,5,3,5,-10,-1,7,9,-10,10,6,6,-5,4,9,1,5,7,9,7,-10,6,4,-1,2,6,1,5,6,-6,-9,10,-2,-6,-8,-10,-5,8,-4,6,2], dtype = "uint16")#candidate|12615|(117,)|const|uint16
const_12616 = relay.const([-8.301365,6.341225,-5.050880,-0.425492,-4.921005,-2.979799,-0.320820,7.948213,5.965110,-5.205670,-9.613287,3.418294,3.261451,-5.422963,-5.282958,6.322829,7.844994,4.455549,0.251194,-6.597193,-6.816549,0.598807,0.325995,-1.427656,-7.943366,8.696895,5.290659,-1.780944,-2.084716,1.891277,-2.355258,9.149090,-7.387073,-1.779593,-8.679078,4.955367,7.618142,1.395465,-3.020785,8.639062,-1.150618,9.238091,3.051540,5.919365,-9.058740,3.742210,5.999586,1.452434,2.872262,0.311934,-0.508002,5.639197,-2.422082,0.737019,-4.315941,4.509603,3.745340,-0.514287,4.190486,-3.581300,5.190580,-1.349305,-5.050150,-6.958598,7.657668,6.277853,-4.269338,8.004420,9.462639,5.231452,-7.577083,7.251210,-3.264159,-6.542658,2.624539,3.483154,-5.997357,3.241157,6.573356,9.114186,8.503757,9.934958,5.956908,-1.125135,5.527459,-8.527566,3.201974,4.553587,4.622804,2.185673,6.153638,4.002344,-6.524336,-4.459418,-7.245287,6.962222,7.064586,-0.612082,0.239027,6.123587,-4.242828,-3.844928,2.924325,6.821591,-2.305112,4.973821,-6.691708,3.286934,1.322038,-2.647262,9.674786,-5.871528,-6.391612,9.033151,5.540841,-1.550512,-1.160032,7.202601,1.833570,0.897461,1.802368,5.783021,7.502031,7.160988,-1.586831,2.168193,6.497818,-1.966870,-7.777423,8.627723,1.908889,2.439591,3.347715,7.628947,-4.289718,-3.826130,-0.127004,7.001203,-5.731985,-5.220061,-5.440257,7.981067,8.091531,-0.314818,2.091970,-1.034121,8.998934,4.096477,-0.464714,7.504483,1.428418,9.107465,8.789103,0.579078,5.568277,6.024090,6.807790,8.968072,-5.979299,-5.756726,0.908763,-9.830079,6.572110,1.320657,0.816040,-9.437250,-3.732855,-4.257262,-5.227381,-8.360246,6.014370,0.753866,-2.617930,-8.079294,-9.027114,-0.119686,9.381992,1.108603,-8.391090,-1.581483,4.070254,-2.224908,-0.997338,-1.603172,4.825451,-5.836456,-0.121782,2.670799,-1.161801,8.735570,3.040799,7.260634,1.326702,4.528758,5.721391,6.438717,-5.507169,1.737806,-7.529050,5.417480,-7.373438,-7.236835,1.573522,1.875608,9.371224,5.916912,-3.300444,6.248409,8.473343,-8.347254,4.322431,5.033055,9.505688,-5.771474,-4.442572,9.416339,-3.417369,5.015551,-0.438315,8.535430,-7.429477,-3.905449,2.013721,-7.421585,-2.646134,-9.002855,-3.228048,8.359635,-1.720164,2.041000,4.121712,6.403930,-2.321263,1.290276,6.448603,8.337171,8.310209,-1.442406,5.489466,2.618552,7.805557,7.149955,-1.660876,-1.143583,5.827165,8.200518,-8.125469,-6.329268,-1.295271,1.300658,-2.541948,5.003869,-1.512135,0.520892,-5.601455,1.524945,-2.112916,1.397185,0.198969,3.928948,4.291237,8.896118,4.016254,-4.067428,-9.910210,8.815486,-2.059621,-3.353921,-1.442388,2.715184,1.271219,5.638424,9.035133,-4.202915,-5.321877,8.039559,-0.260069,8.930640,-0.182783,3.915065,-5.785554,-4.475996,6.441338,4.456545,-2.387715,-7.935077,-9.621058,1.698964,-6.885589,-4.199235,7.141301,-4.154789,4.742085,2.765134,-6.435881,-3.384979,7.236661,4.807513,7.584269,-3.503114,7.426793,8.744100,-4.833898,-4.583894,-0.446086,8.026628,-7.805911,-4.976246,-3.295897,-0.622897,-9.080281,1.495618,3.099561,2.411824,1.598730,-5.845543,-1.070442,-9.650064,-1.067318,-1.126907,-7.400992,-5.985940,1.762429,-0.708998,-9.550486,-0.855370,6.718369,-7.705174,5.970774,1.485370,3.624308,4.872257,-8.525385,5.404566,-7.652553,4.615403,0.976149,-1.912008,-3.012264,-2.369163,0.517761,-8.787837,-5.146528,4.016015,-3.526374,0.469624,-0.079696,1.459723,-6.478991,4.673238,-2.306514,6.048238,-9.532634,8.441120,-2.837425,2.202780,-7.136414,-7.618760,-8.483662,-9.490585,5.902899,-8.774344,3.023612,-5.725770,-0.514668,-0.339803,-1.628062,7.399685,2.812558,-0.318477,-0.704068,5.278563,8.721286,-1.682022,4.551471,-8.801096,-3.441948,-3.282681,-6.064632,0.392916,-8.697389,-5.135999,-5.971266,0.971341,-3.000189,6.739357,7.838360,2.551006,0.035066,-7.475912,2.185434,7.077489,-6.116276,7.401725,-1.471683,2.190469,-5.947940,6.656907,0.351957,0.139480,-6.478513,5.752291,0.452551,-9.672829,-7.640704,-6.644065,1.227537,8.596233,2.728456,9.821868,2.784861,5.018282,-6.632618,-8.765344,0.831238,0.377077,1.525130,-6.415152,8.006085,4.079943], dtype = "float64")#candidate|12616|(420,)|const|float64
call_12614 = relay.TupleGetItem(func_10466_call(relay.reshape(var_12536.astype('uint8'), [192,]), relay.reshape(const_12615.astype('uint16'), [117,]), relay.reshape(var_12585.astype('float64'), [1404,]), relay.reshape(const_12616.astype('float64'), [5, 84]), ), 1)
call_12617 = relay.TupleGetItem(func_10472_call(relay.reshape(var_12536.astype('uint8'), [192,]), relay.reshape(const_12615.astype('uint16'), [117,]), relay.reshape(var_12585.astype('float64'), [1404,]), relay.reshape(const_12616.astype('float64'), [5, 84]), ), 1)
uop_12641 = relay.acos(call_12583.astype('float32')) # shape=(14, 7, 16)
uop_12643 = relay.acos(call_12586.astype('float32')) # shape=(14, 7, 16)
const_12652 = relay.const([[[7.994945,-5.003923,-7.447990,-9.761030,-2.057801,9.673759,-2.085715,-9.476312,-1.486869,-4.492243,-5.296418,-4.893189,0.986395,8.099947,-2.982997,-2.392901],[7.970429,8.836791,-5.810541,3.088244,9.225558,-0.632503,-9.008102,8.456127,8.776457,-8.505461,4.322719,-6.309595,9.987372,-6.059268,-4.249387,4.975634],[5.057683,9.758443,-3.872814,-4.341007,-0.593129,-2.335755,0.696006,2.535912,0.365990,-6.999499,-3.726327,3.276450,9.963206,4.209983,-4.836436,2.410181],[-6.701657,7.514358,0.949427,-3.470557,-9.104952,-8.332469,-6.841798,6.379707,2.675381,5.565306,-5.089994,3.829505,-2.652172,-8.369338,-3.421518,-2.034710],[-2.420998,2.122760,-1.021319,1.936600,-2.952661,-2.578508,-8.500648,-4.775434,-0.791809,5.953625,-4.546816,-0.441937,-1.122987,-8.717095,-6.175494,2.229656],[-7.915021,-7.190426,-6.615844,-3.718371,9.723902,7.027954,-8.761660,8.880861,6.656155,6.989208,-0.113842,-4.274457,-8.351463,8.606013,-0.085671,-7.995971],[0.802813,7.756485,-8.551431,7.044516,-6.651069,0.358354,-8.823518,5.904655,-0.839760,-2.168518,-5.367463,8.039766,6.231619,4.449523,0.909567,-2.288125]],[[-7.799884,-9.157856,3.897114,-2.800382,-4.934659,-9.917072,0.230739,8.760429,9.864758,-0.248184,-4.750200,-7.974399,-4.928804,4.417592,7.891517,-6.035806],[8.636804,0.743537,-9.272239,2.285696,3.893086,-5.965198,5.262533,-5.663575,3.277441,8.007541,-1.244621,9.354090,5.610443,-0.081303,-0.125327,0.895864],[5.521414,0.001440,-1.998688,0.039428,-7.479995,-0.307798,6.655273,-9.321467,6.975290,-0.059200,-6.310583,-1.600061,2.499013,-8.791359,-9.932409,5.740212],[-8.370478,9.377466,8.386399,4.410707,-3.656106,-9.923096,-8.343212,-6.953221,-7.971957,-3.382505,-1.415334,-6.081398,8.690272,-7.745776,-0.917565,-1.461676],[-9.173088,-1.328851,-1.774102,6.151372,9.617852,-1.265316,6.214695,-0.554940,5.100271,-2.723099,3.996459,0.944519,8.489023,-7.103666,-6.923559,2.564238],[7.175091,-5.293463,1.346432,-3.969360,7.052874,-4.129158,-0.946428,-6.464430,9.542304,7.709819,-0.439975,-5.527173,-6.478025,1.548945,3.459465,8.791615],[-1.119294,-2.396455,-7.357573,7.920002,7.964120,-2.488931,-6.836678,7.824874,9.900097,-7.300843,-8.047312,8.078037,-4.449220,1.829418,6.816836,-5.658194]],[[-0.282586,9.803218,3.143930,3.164344,1.607100,-2.446573,-3.817558,6.055396,7.081559,2.210799,-9.941320,-1.316435,-1.964055,-2.835411,7.005305,4.114920],[7.205396,-2.432729,3.599428,5.727317,1.504015,-7.759902,-3.041819,4.773548,-0.408155,2.288936,2.597230,6.711364,0.153996,-2.409262,-7.851460,-1.724462],[-2.167245,-9.540924,-1.208775,-8.203911,-6.132702,-5.727948,0.370018,-5.485961,-8.208874,-3.492889,4.232817,6.493281,-8.208750,0.933200,-7.512603,-1.415340],[-9.707147,-2.745773,1.194962,-8.794388,-9.478522,-5.381162,-4.543911,3.850390,-5.325169,7.524987,8.852342,-5.247763,-0.129830,-6.741474,1.767064,7.541688],[8.661662,7.328967,3.914161,-8.968868,-5.710623,9.001456,2.224788,2.548407,-5.084244,-0.714910,-7.404704,4.177671,-3.224020,8.226724,7.827632,-2.045011],[-7.608926,5.211621,0.235685,0.880105,-8.534394,2.632187,7.204328,3.980400,5.982562,2.150928,-8.945466,-9.623925,-1.159888,-5.976723,-0.582240,5.926529],[-4.007639,-4.591504,-8.864974,6.550734,-3.264718,5.713873,-3.788406,-6.850703,-1.716360,3.080519,-9.550541,7.970564,3.468473,-5.498121,-5.412041,-2.942689]],[[-8.752848,4.156187,6.385160,7.196154,9.933584,0.999903,9.592568,6.607027,-8.741402,-0.670376,-9.963155,8.305307,-2.517851,5.962006,3.603000,9.759341],[3.289117,9.409977,-9.826325,-1.685609,3.358012,1.424084,3.311861,-3.805721,3.731058,8.216657,-5.567522,4.903884,-6.130432,-5.847129,-0.995457,-2.517912],[-3.012603,-4.662898,-2.086767,-5.063313,6.732914,1.362910,-1.100896,-5.326818,-9.294241,4.673908,-0.016157,2.695140,8.856668,7.011639,-9.927119,0.408496],[0.012420,6.529249,9.002850,5.208822,9.064383,8.642881,-3.858807,0.305669,8.985036,9.064535,0.299718,7.068877,-5.472047,-0.041271,-2.077048,9.644102],[-0.410010,8.219010,-5.673699,-4.613765,6.304289,1.607865,5.858083,0.691847,1.662926,-9.020089,0.365828,-2.515095,-7.904204,-7.760265,-4.685026,-0.568449],[-2.773704,-6.968187,-1.837580,-3.636773,1.316871,6.955505,-5.576585,5.813336,-0.783386,-7.760364,7.460299,7.052357,-3.515075,-9.464815,-9.566173,5.321999],[6.158329,1.238546,-6.888573,0.251452,-0.124163,-4.614519,9.529613,-5.209515,7.773642,-0.613866,6.969647,4.731107,7.615786,3.354176,-0.035208,3.396743]],[[-0.984228,-7.763948,-1.027765,-0.449659,-2.434280,-3.153479,5.413590,6.664057,5.088932,6.682035,-0.157327,-3.150365,5.495888,7.952608,-8.582599,1.372444],[4.688904,9.437667,6.337707,-7.280312,-7.815539,-8.119496,-7.412096,0.565278,3.699504,-0.730895,7.856803,7.902334,-9.374201,-5.301529,7.357470,-9.189373],[2.787588,2.361555,2.477172,2.892145,-6.237981,0.300109,0.493662,-6.415282,-5.539302,-1.728426,-7.284288,-0.399440,-1.017853,0.597734,-3.104813,0.728972],[-1.407082,-6.840511,-8.268622,5.299716,6.789353,2.717407,3.348639,9.899063,5.108084,9.204984,-2.276714,-6.497426,3.022501,-4.126240,3.423324,0.132529],[-0.457408,-5.357385,4.979953,2.283821,-7.745315,-8.613224,5.810674,8.266981,6.167245,-4.816250,-4.232521,8.363814,-6.446852,7.830936,8.786564,0.240742],[2.565367,-9.630757,-5.955892,3.554594,1.154486,-9.760142,-7.460142,4.708407,8.914419,7.507574,-0.363569,3.395740,-7.709504,0.862129,0.224252,-4.787390],[-3.582730,-0.326109,-5.030973,6.859062,5.234016,-4.266557,-6.682833,7.193291,3.434086,7.036459,4.012213,3.961802,-7.819444,4.583500,2.581480,-8.959005]],[[0.636841,-5.888574,-7.930093,7.097794,-5.190028,0.854722,7.339732,-6.452871,5.175360,-9.386098,-7.290002,3.565724,-0.364437,-7.039591,-5.132504,9.696110],[0.348358,6.680898,-3.230272,3.486502,4.836136,6.849498,-9.983754,9.140683,4.316733,-6.061501,0.124014,-2.064466,2.381424,-8.989539,1.564236,1.776444],[2.848311,5.802548,1.276821,-0.429171,4.547938,5.910884,8.660121,-2.195582,-7.103370,-3.100184,-4.618015,-3.401495,-7.543529,0.326985,-7.800012,-0.801037],[0.885961,4.726858,5.709370,0.703076,0.048171,-9.579919,-7.715669,-0.068042,9.725870,-1.630586,8.149907,8.839977,1.977320,-0.541771,5.070263,-0.166240],[-1.196095,2.935952,1.577461,-3.226720,2.375794,-8.854462,3.515786,4.187465,9.463385,-6.337179,-0.457987,-4.251406,-8.883961,5.661910,-9.935485,8.448782],[-0.033331,-8.021925,5.868496,-6.152368,3.351585,-5.874617,4.269660,2.813141,-1.958545,-6.280367,-1.772965,-6.407878,1.897721,-2.539129,0.083415,-1.242964],[2.413865,-4.423514,9.851202,4.092085,0.614814,-3.470883,1.138979,7.509948,8.726663,-6.787504,3.314202,5.776286,9.901116,-5.739998,3.845484,-0.734242]],[[8.474319,9.780604,5.316265,4.556100,3.995688,-4.432913,2.527698,-9.316469,9.654261,-5.984685,8.209062,2.158186,-6.575702,-6.828672,-7.769419,-9.434034],[7.954669,-2.265925,-8.687331,4.543465,4.852023,8.358542,1.248576,-0.088985,-0.764966,4.443492,-2.256309,-8.112124,-5.288081,-4.310041,5.030624,-7.057444],[-6.061634,-1.669779,-6.727442,-5.056856,1.336713,8.966557,1.696455,5.381651,-4.707417,-1.731622,3.777836,0.577201,8.135279,-7.320310,-3.380265,6.285009],[0.166092,-6.176462,0.737899,-2.557946,-5.985327,9.177250,8.914088,0.724176,-6.216101,-5.396569,7.749864,7.613835,3.132801,4.139556,1.982061,-5.407067],[-8.324221,-7.881569,-8.448585,-1.870877,-8.222960,-3.593756,-0.897950,-7.010614,1.420382,-9.774915,-6.959965,0.880347,3.542295,-6.428025,1.459060,-5.188804],[5.804987,5.559591,1.649458,-9.494240,-2.600080,7.263595,-6.841811,4.027721,-9.307970,-1.866344,9.324655,-3.903951,8.268676,1.754753,5.142359,-6.092438],[3.913976,-1.931899,-1.033288,-0.013169,-6.723610,3.010996,7.911084,-6.051396,2.872521,0.547139,6.894513,0.868316,-7.205777,4.961722,-3.822037,-5.594447]],[[-5.238169,-6.771362,5.021743,9.600836,-5.279220,-0.544433,6.350704,7.391598,-6.212416,4.739477,-9.568789,-5.438818,-3.973131,3.614421,3.510250,-8.743086],[-1.203550,-0.904490,6.661066,5.091980,6.691124,-4.556920,9.032387,5.815439,-6.868787,7.137667,6.198624,0.542396,5.001947,2.857494,-3.838457,-2.704157],[-8.540431,-9.626393,-5.458741,-5.583656,2.919555,-8.795743,-6.947468,-8.769776,7.946290,-3.605109,4.755735,-5.302451,-0.804090,-1.659675,9.775683,3.760852],[8.095355,4.243787,-4.040982,3.231057,-0.991516,-4.927010,5.906441,4.875986,-2.730576,-7.298847,8.436249,-0.490963,-7.030619,-4.644641,-3.091636,1.944627],[2.549323,5.815589,-4.247213,-7.241579,9.964200,-4.812278,1.844872,5.755420,7.482433,-7.536866,-9.069540,-4.188397,5.410961,-7.618675,-7.297250,8.633822],[-3.262216,4.503278,-6.312251,-7.154374,-3.686390,-0.960495,-0.106189,3.789632,9.386648,3.983170,1.316738,-0.045330,-6.438882,-0.339936,2.921929,8.887843],[-1.362955,-7.622669,-1.033380,-9.558503,3.831739,-5.510167,-6.328774,7.333953,3.299955,4.349386,-2.293510,1.717762,-4.572732,-4.633277,-5.568061,-0.683773]],[[-9.752254,4.449122,5.195569,-1.188499,-8.532128,-5.858819,-7.117023,4.470005,-3.162406,-9.893271,-2.630669,-7.000432,2.899017,-3.940259,-3.708317,0.292838],[-1.951589,5.116379,-2.586967,-5.420463,-7.693901,-3.003181,9.105464,2.388217,-2.877276,-6.978628,8.569645,-1.596538,3.547947,-3.687472,9.069322,2.944372],[-5.883394,5.179496,-5.530095,-3.274205,-0.169491,5.104352,-2.225238,-2.351036,9.926514,2.854778,4.986647,0.495553,2.885677,-1.687412,1.896565,-7.578087],[-5.673581,0.274133,2.326886,0.143000,-5.743342,4.516139,0.897117,1.463954,4.821544,-9.073438,-3.295744,5.369889,2.992185,-0.818117,4.561895,1.070272],[-1.163728,-8.759836,-3.748560,-2.784290,8.427198,2.728139,1.523484,8.400640,9.653238,9.591044,8.857312,9.118529,-0.724377,-3.851547,-9.261651,3.219433],[-0.851142,6.898982,6.433835,3.929206,1.988093,-6.836472,3.539463,1.584912,3.479884,7.385343,-2.946269,3.833560,-9.496092,-1.494386,1.894474,-6.585940],[-1.461027,-3.122094,2.251888,-0.403181,-4.792051,3.073516,-2.936452,3.216047,3.953571,-0.655467,1.344717,-4.208146,7.572504,8.931456,-4.031286,-3.213322]],[[4.271445,-9.652710,-8.106803,9.092817,8.207567,1.648125,-2.278425,8.618920,3.605928,8.311696,-5.439429,-4.204869,-7.992871,-4.495225,1.142166,0.355184],[-0.239034,1.613985,-5.748758,8.275019,4.565966,4.905886,1.733778,6.664475,9.720220,-9.642689,-2.097693,5.654582,-0.187978,8.086426,7.981075,-2.620331],[1.686111,-7.922022,-2.004392,7.543787,-7.130160,5.952950,-3.057845,-9.945930,6.975842,3.572778,-3.898866,5.127067,-4.554474,-8.717164,6.575667,0.266485],[3.463371,2.238484,-5.169470,9.788203,1.927855,-8.172358,-3.269727,1.574099,1.213801,9.194473,-2.996365,-0.691985,-0.605320,-2.622492,7.603809,-2.483105],[2.370666,6.664898,-3.459863,5.540011,0.380878,7.389151,-4.306477,-4.126921,3.565057,9.635947,-7.184526,4.321275,3.991745,-8.174900,2.897879,1.249934],[-7.899610,-6.867716,9.613479,9.490242,-6.573978,-5.984207,2.864360,-4.730386,1.300297,-9.866388,-5.016693,-9.663425,7.497549,-6.965115,7.444573,-2.394426],[-8.237606,-7.346084,-5.885796,8.695985,0.370524,4.041003,-6.630743,3.850117,-0.619257,7.843359,4.841811,-7.534124,-0.597494,-1.020243,-1.463239,-5.282974]],[[3.434033,-8.316900,-4.062759,-5.060506,-7.332860,-9.714165,-0.099207,-1.002849,-1.342811,0.901060,7.541731,-1.013847,-0.935025,0.360966,1.619675,-3.103540],[-2.863185,-1.605883,-5.235279,-7.271088,2.958181,6.966610,4.958523,-5.799929,7.315369,4.466734,3.195496,-7.953162,-3.309133,-7.674771,7.267984,4.634053],[7.878610,-4.014140,-2.282392,-6.573849,-8.617257,8.259289,4.092701,5.820731,0.931931,4.789666,-1.776709,3.917643,5.004947,8.720489,-0.797874,8.018469],[-2.768348,2.791773,-6.795697,-7.549135,3.894280,-0.238429,6.668686,8.650770,5.484437,1.526272,-1.544769,-9.580923,-8.189925,6.112983,-0.781793,8.270111],[-6.988191,-4.003340,-5.087586,7.200671,-9.878479,8.727456,4.403342,5.583333,6.622535,9.364168,7.278691,-7.636777,5.385195,-4.037367,-2.216562,-6.440008],[-7.336700,2.522831,-8.178030,-9.628467,2.171224,-7.357846,-6.589166,3.327435,4.123506,5.605504,-7.966091,-7.149644,9.189687,-0.524546,-1.022959,8.866964],[3.612668,-0.782195,4.252911,-2.582056,-6.629006,-3.480637,-3.075279,-4.599917,-3.029774,-9.294533,9.815645,-1.498041,5.113652,-7.866768,0.857437,-5.780099]],[[9.207486,-3.552160,3.554642,4.562274,-8.149654,-7.350937,0.266815,-7.959988,1.771701,-0.112788,9.926108,0.773359,1.658644,3.122975,7.031127,2.665065],[-7.626517,-2.228934,6.424979,4.190782,2.437852,-2.454940,-0.213291,-4.426057,-6.659577,8.573623,0.782442,-4.498241,-0.796159,5.810729,-6.126593,-7.100103],[7.435199,-8.331207,-9.999065,-4.867724,-9.377902,-7.325225,2.052480,-5.851264,-2.059450,4.607415,-4.753069,-7.774285,5.487992,2.385476,9.424036,-6.446502],[-7.134262,6.538085,-2.150986,-4.809611,-6.770567,-4.948720,8.589206,9.003085,-4.225233,7.387536,7.749509,2.124720,7.350535,-6.825148,8.829302,5.850197],[3.072453,-2.883782,-9.351671,-0.079401,-3.081383,-0.919912,5.364175,9.918847,2.554719,3.719031,-9.991507,0.140432,8.947590,-8.686744,9.307429,-4.857541],[-1.306800,-7.439808,3.068321,-8.396891,8.001755,7.119883,-8.058963,-5.527137,2.532081,-7.413541,8.997061,4.384488,5.414406,6.021938,-2.457761,-0.154904],[-7.048902,6.046667,8.102766,5.138115,3.920800,-5.356600,0.607271,4.599097,-5.866103,9.889250,2.311053,-7.401246,-7.719532,4.504494,7.691529,-9.883921]],[[6.191211,3.566971,5.450335,0.138693,0.142789,-3.896286,8.974309,7.456223,-7.159446,3.858620,7.823609,-8.233859,1.283526,-9.288384,8.715468,-8.751225],[3.102220,-2.800413,1.609336,9.471454,4.718111,2.713278,6.652454,-6.038835,0.323240,4.527930,1.090634,2.207002,-9.980665,7.773039,-9.617369,-6.497359],[1.999220,-2.441586,-6.996624,0.949386,9.926655,-7.254821,7.574562,-5.188571,-3.987971,6.817904,-0.868405,-6.075823,1.496725,-2.802640,-4.436847,4.370006],[0.331023,-4.555668,3.657204,7.885628,-0.746861,9.742294,-3.961370,5.783375,2.657235,-0.439574,9.114271,-1.762689,-4.771525,-6.160780,7.835874,-3.526747],[4.138452,2.338691,-3.128639,6.184442,-7.990064,-0.682650,8.006096,-8.414467,1.448203,-6.536672,3.004768,9.810573,6.167799,-5.627957,4.770885,-3.095919],[8.488371,5.732724,-9.384720,9.162145,8.328328,-0.135210,4.904208,8.730608,1.434456,0.447491,1.434781,0.681401,-5.577441,3.752776,-0.252019,-9.464737],[9.266861,-1.976378,-3.581577,1.273263,1.088942,-1.514670,-0.509375,5.964719,8.347081,-9.142286,7.104151,-2.952856,-8.481713,9.505791,4.299612,-2.397776]],[[7.863766,-3.654437,-7.542495,5.788684,9.857320,-1.736271,-6.501732,-2.649664,-7.078102,-3.375124,-3.700340,4.974076,-3.646292,1.856028,-4.853628,2.146233],[-8.138969,-0.499800,2.746028,0.004522,3.372004,-8.235821,8.062748,-6.239406,6.464094,-9.165521,7.958072,-4.144124,-7.200250,6.905351,-7.677690,0.448934],[-1.801964,6.556726,8.785483,4.653608,5.723995,-3.183185,-3.246241,-6.131413,6.851923,2.430687,5.616483,7.410984,0.061067,-7.272116,7.164722,4.908977],[1.262277,5.690671,7.507085,-0.278909,-7.866319,8.580074,7.316219,-8.340058,-0.726074,2.399203,-0.735533,-2.750185,4.976529,1.926354,-6.182416,-8.080577],[0.316613,-6.240514,-7.433535,8.056784,-1.158674,3.442357,4.526506,-4.854850,1.170640,9.992019,-8.478877,-8.779065,-4.063903,-6.098676,-5.247252,1.651130],[-9.293814,-7.941408,-4.020099,5.007125,-7.904452,-8.128370,3.229860,-4.222920,-6.904846,-3.981726,0.540373,-4.223606,-3.319650,-9.517736,1.573237,-3.318469],[6.687900,8.578872,8.928400,-1.830860,2.920839,6.212958,-8.493901,-7.349324,1.866553,8.465936,7.514149,-6.149511,4.787959,-3.184093,-5.312316,-7.228473]]], dtype = "float32")#candidate|12652|(14, 7, 16)|const|float32
bop_12653 = relay.multiply(uop_12641.astype('int64'), relay.reshape(const_12652.astype('int64'), relay.shape_of(uop_12641))) # shape=(14, 7, 16)
bop_12656 = relay.multiply(uop_12643.astype('int64'), relay.reshape(const_12652.astype('int64'), relay.shape_of(uop_12643))) # shape=(14, 7, 16)
output = relay.Tuple([call_12519,call_12532,const_12533,call_12535,var_12536,call_12539,const_12584,var_12585,call_12614,const_12615,const_12616,bop_12653,])
output2 = relay.Tuple([call_12520,call_12534,const_12533,call_12537,var_12536,call_12540,const_12584,var_12585,call_12617,const_12615,const_12616,bop_12656,])
func_12697 = relay.Function([var_12536,var_12585,], output)
mod['func_12697'] = func_12697
mod = relay.transform.InferType()(mod)
mutated_mod['func_12697'] = func_12697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12697_call = mutated_mod.get_global_var('func_12697')
var_12699 = relay.var("var_12699", dtype = "uint8", shape = (192,))#candidate|12699|(192,)|var|uint8
var_12700 = relay.var("var_12700", dtype = "float64", shape = (1404,))#candidate|12700|(1404,)|var|float64
call_12698 = func_12697_call(var_12699,var_12700,)
output = call_12698
func_12701 = relay.Function([var_12699,var_12700,], output)
mutated_mod['func_12701'] = func_12701
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8407_call = mod.get_global_var('func_8407')
func_8408_call = mutated_mod.get_global_var('func_8408')
call_12719 = func_8407_call()
call_12720 = func_8407_call()
func_537_call = mod.get_global_var('func_537')
func_540_call = mutated_mod.get_global_var('func_540')
const_12722 = relay.const([7,10,9,4,-7,-9,-2,-10,-1,9,-4,-3,9,5,6,-9,-3,2,7,3,3,-2,1,7,-10,7,-1,2,-2,9,8,-2,7,2,10,-9,-7,7,4,10,-2,7,-9,5,-7,-1,4,-5,-9,-6,-2,1,5,-9,-6,2,-8,-3,-9,10,3,-10,-7,10,2,5,1,5,-8,7,-3,-1,-10,-8,3,5,-1,4,8,6,-10,-5,-8,8,-3,9,-4,7,-7,4,-2,7,-4,3,-7,-3,9,9,-8,-3,-2,9,7,1,-10,5,4,7,-2,-1,7,-5,1,4,-1,-2,-3,10,-6,5,3,-10,-1,4,-7,-4,8,3,-5,9,-5,-10,2,10,8,4,5,-8,-2,4,7,6,-9,-3,7,2,-2,2,-2,-2,8,-2,3,-1,-4,6,3,5,2,-8,-3,-1,-3,-9,-5,-5,-8,-6,-1,-5,2,-6,-5,8,-10,-8,-7,8,-4,-4,7,-2,10,-3,6,4,1,-4,-1,-6,9,6,3,-5,-10,-5,-10,-1,6,-1,-3,-2,-7,1,-9,10,10,-1,9,-1,-4,-7,5,7,3,-6,5,3,6,-1,-2,4,-7,5,2,-7,2,3,2,-1,-9,3,8,-7,1,-1,9,5,10,-3,5,1,4,7,5,10,6,10,-1,-8,3,5,3,-7,9,-7], dtype = "uint16")#candidate|12722|(256,)|const|uint16
call_12721 = relay.TupleGetItem(func_537_call(relay.reshape(const_12722.astype('uint16'), [16, 1, 16]), relay.reshape(const_12722.astype('uint16'), [16, 1, 16]), ), 1)
call_12723 = relay.TupleGetItem(func_540_call(relay.reshape(const_12722.astype('uint16'), [16, 1, 16]), relay.reshape(const_12722.astype('uint16'), [16, 1, 16]), ), 1)
output = relay.Tuple([call_12719,call_12721,const_12722,])
output2 = relay.Tuple([call_12720,call_12723,const_12722,])
func_12737 = relay.Function([], output)
mod['func_12737'] = func_12737
mod = relay.transform.InferType()(mod)
output = func_12737()
func_12738 = relay.Function([], output)
mutated_mod['func_12738'] = func_12738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11728_call = mod.get_global_var('func_11728')
func_11729_call = mutated_mod.get_global_var('func_11729')
call_12831 = relay.TupleGetItem(func_11728_call(), 0)
call_12832 = relay.TupleGetItem(func_11729_call(), 0)
output = relay.Tuple([call_12831,])
output2 = relay.Tuple([call_12832,])
func_12836 = relay.Function([], output)
mod['func_12836'] = func_12836
mod = relay.transform.InferType()(mod)
output = func_12836()
func_12837 = relay.Function([], output)
mutated_mod['func_12837'] = func_12837
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8446_call = mod.get_global_var('func_8446')
func_8448_call = mutated_mod.get_global_var('func_8448')
call_12858 = relay.TupleGetItem(func_8446_call(), 1)
call_12859 = relay.TupleGetItem(func_8448_call(), 1)
func_7925_call = mod.get_global_var('func_7925')
func_7928_call = mutated_mod.get_global_var('func_7928')
var_12864 = relay.var("var_12864", dtype = "bool", shape = (196,))#candidate|12864|(196,)|var|bool
call_12863 = relay.TupleGetItem(func_7925_call(relay.reshape(var_12864.astype('bool'), [14, 2, 7])), 0)
call_12865 = relay.TupleGetItem(func_7928_call(relay.reshape(var_12864.astype('bool'), [14, 2, 7])), 0)
func_9935_call = mod.get_global_var('func_9935')
func_9939_call = mutated_mod.get_global_var('func_9939')
const_12876 = relay.const([False,True,True,False,True,True,False,True,False,False,True,False,True,True,False,False,False,False,False,True,False,False,True,False,False,False,False,True,False,False,True,True,False,False,True,True,True,False,False,True,False,False,True,False,True,True,False,True,True,False,False,True,True,True,True,True,False,True,True,False,False,False,True,False,False,True,True,True,True,True,False,True,True,True,True,True,False,True,False,True,False,True,False,True,False,False,False,False,True,True,True,True,True,False,True,True,True,False,False,False,False,False,False,True,True,True,False,True,True,True,False,True,False,True,False,False,True,False,True,False,False,False,False,True,False,True,True,False,False,True,False,False,False,False,True,True,False,False,True,True,True,True,False,True,False,False,True,True,False,False,False,False,False,False,False,True,True,True,True,True,False,True,True,False,False,True,False,False,True,True,True,False,False,True,True,True,True,False,False,True,True,False,False,True,False,False,False,False,True,True,True,True,True,True,False,True,False,False,True,True,True,False,True,True,True,False,False,False,False,True,True,True,True,True,True,False,True,True,False,False,True,True,False,False,False,False,True,False,False,False,True,True,False,False,False,True,False,True,True,True,False,False,False,True,False,True,True,True,True,True,False,False,True,False,False,True,False,True,False,False,True,True,True,True,False,True,False,False,False,True,True,False,True,False,False,True,True,True,True,False,True,True,False,False,True,False,True,True,True,True,True,False,True,False,True,True,True,True,True,False,False,True,False,False,True,False,True,False,False,False,True,True,True,True,True,False,False,False,True,True,False,False,False,True,False,True,False,False,True,True,False,True,False,False,True,True,True,True,False,True,True,True,False,True,False,True,True,False,True,True,False,True,True,False,False,False,True,False,False,False,False,False,False,False,False,True,False,True,False,False,False,False,True,False,True,True,True,False,False,True,True,False,False,True,False,True,True,True,True,True,False,True,True,False,False,True,True,False,True,False,False,True,False,True,False,True,False,True,True,False,False,True,False,True,False,False,False,True,False,True,False,False,True,True,False,True,False,True,True,True,True,True,True,True,False,True,False,False,False,False,True,True,True,True,False,True,False,False,False,False,True,False,False,False,True,False,True,True,True,False,True,True,True,False,False,True,True,True,False,True,True,True,False,False,False,False,True,False,False,True,False,False,True,False,False,False,False,False,True,False,False,False,True,False,False,True,True,True,False,True,True,True,False,True,True,True,False,False,True,False,True,False,False,False,False,True,False,True,True,False,True,True,False,False,True,True,True,True,False,False,False,True,True,True,True,True,False,True,True,True,True,True,True,False,True,False,True,False,True,False,False,False,True,False,False,True,True,True,False,False,True,False,True,True,True,False,False,True,True,True,True,True,False,False,True,False,False,False,False,True,False,False,True,True,False,True,False,False,True,False,False,False,True,True,True,False,False,True,False,True,True,True,False,True,True,True,True,False,True,True,True,True,True,True,True,False,False,True,False,True,False,False,False,True,True,True,True,True,True,True,True,False,False,True,True,False,True,True,False,False,False,True,False,False,False,True,False,True,False,False,False,False,False,False,True,True,False,True,True,True,False,False,True,True,True,False,True,False,True,True,True,False,False,True,False,True,False,False,False,False,False,False,True,False,True,False,True,True,True,False,False,False,False,True,True,False,True,False,False,True,True,True,True,True,False,True,False,False,True,False,True,True,True,False,True,False,False,False,True,False,True,True,False,True,False,True,True,True,True,False,False,False,True,True,True,False,False,False,False,True,False,True,False,True,True,True,True,False,False,False,False,True,True,False,False,True,True,False,True,False,False,True,False,True,True,True,True,True,True,False,True,False,True,True,True,True,True,True,True,True,True,True,False,True,True,False,False,False,False,True,False,False,True,False,False,False,True,True,True,True,True,False,True,True,False,False,False,True,True,True,False,True,False,False,False,True,False,False,True,True,False,True,True,True,True,True,True,False,True,False,True,False,True,False,True,True,True,True,False,False,False,False,True,False,False,True,True,False,False,False,True,False,True,True,True,False,False,False,True,True,False,False,False,True,True,True,False,False,True,False,False,True,False,False,False,False,True,True,True,True,False,False,True,True,True,False,False,False,False,True,True,True,True,True,False,False,True,True,False,False,True,True,True,False,True,True,False,False,True,True], dtype = "bool")#candidate|12876|(910,)|const|bool
call_12875 = func_9935_call(relay.reshape(const_12876.astype('bool'), [13, 5, 14]), relay.reshape(const_12876.astype('bool'), [13, 5, 14]), )
call_12877 = func_9935_call(relay.reshape(const_12876.astype('bool'), [13, 5, 14]), relay.reshape(const_12876.astype('bool'), [13, 5, 14]), )
var_12879 = relay.var("var_12879", dtype = "bool", shape = (13, 5, 14))#candidate|12879|(13, 5, 14)|var|bool
bop_12880 = relay.less(call_12875.astype('bool'), relay.reshape(var_12879.astype('bool'), relay.shape_of(call_12875))) # shape=(13, 5, 14)
bop_12883 = relay.less(call_12877.astype('bool'), relay.reshape(var_12879.astype('bool'), relay.shape_of(call_12877))) # shape=(13, 5, 14)
bop_12885 = relay.greater(bop_12880.astype('bool'), relay.reshape(call_12875.astype('bool'), relay.shape_of(bop_12880))) # shape=(13, 5, 14)
bop_12888 = relay.greater(bop_12883.astype('bool'), relay.reshape(call_12877.astype('bool'), relay.shape_of(bop_12883))) # shape=(13, 5, 14)
uop_12895 = relay.sqrt(bop_12880.astype('float64')) # shape=(13, 5, 14)
uop_12897 = relay.sqrt(bop_12883.astype('float64')) # shape=(13, 5, 14)
func_11136_call = mod.get_global_var('func_11136')
func_11138_call = mutated_mod.get_global_var('func_11138')
call_12898 = func_11136_call()
call_12899 = func_11136_call()
uop_12905 = relay.sigmoid(uop_12895.astype('float32')) # shape=(13, 5, 14)
uop_12907 = relay.sigmoid(uop_12897.astype('float32')) # shape=(13, 5, 14)
output = relay.Tuple([call_12858,call_12863,var_12864,const_12876,bop_12885,call_12898,uop_12905,])
output2 = relay.Tuple([call_12859,call_12865,var_12864,const_12876,bop_12888,call_12899,uop_12907,])
func_12908 = relay.Function([var_12864,var_12879,], output)
mod['func_12908'] = func_12908
mod = relay.transform.InferType()(mod)
var_12909 = relay.var("var_12909", dtype = "bool", shape = (196,))#candidate|12909|(196,)|var|bool
var_12910 = relay.var("var_12910", dtype = "bool", shape = (13, 5, 14))#candidate|12910|(13, 5, 14)|var|bool
output = func_12908(var_12909,var_12910,)
func_12911 = relay.Function([var_12909,var_12910,], output)
mutated_mod['func_12911'] = func_12911
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12033_call = mod.get_global_var('func_12033')
func_12035_call = mutated_mod.get_global_var('func_12035')
call_13012 = relay.TupleGetItem(func_12033_call(), 0)
call_13013 = relay.TupleGetItem(func_12035_call(), 0)
output = call_13012
output2 = call_13013
func_13016 = relay.Function([], output)
mod['func_13016'] = func_13016
mod = relay.transform.InferType()(mod)
output = func_13016()
func_13017 = relay.Function([], output)
mutated_mod['func_13017'] = func_13017
mutated_mod = relay.transform.InferType()(mutated_mod)
const_13097 = relay.const([[[True,False,False,True,True,True,True,False,True,False,True],[False,True,False,False,True,True,True,False,False,True,True],[False,True,False,True,False,False,True,False,False,False,False],[True,True,True,False,True,True,False,True,True,False,True],[True,True,False,False,False,False,False,False,True,True,True],[False,False,True,False,True,True,False,False,True,True,True],[True,False,False,False,False,False,True,False,True,False,True],[True,True,False,False,True,False,True,False,True,True,False],[False,True,False,True,False,False,False,True,True,True,True],[False,False,True,False,True,False,True,False,True,False,True],[True,False,False,True,False,True,False,True,True,False,True],[True,True,True,True,False,False,True,True,False,True,True],[True,True,True,True,False,True,True,False,False,False,True],[False,False,True,True,False,False,True,True,True,False,False],[False,False,False,True,True,False,True,False,True,False,True]],[[False,False,True,True,True,True,True,True,False,False,True],[True,True,False,False,False,True,True,True,True,False,True],[False,True,False,False,False,False,True,False,True,False,False],[False,True,True,True,True,True,False,True,False,True,False],[False,True,True,True,True,False,True,True,True,True,False],[True,True,False,True,False,False,False,False,True,False,False],[False,True,True,True,True,False,False,True,False,False,False],[True,False,True,True,True,False,False,False,False,True,True],[False,False,True,True,False,False,False,False,False,False,False],[True,False,True,True,False,False,True,False,True,True,False],[False,False,True,True,True,True,True,False,False,False,True],[False,True,True,False,True,False,False,True,False,True,True],[True,False,True,False,True,False,True,False,False,True,True],[False,False,False,True,False,False,False,False,True,False,True],[True,False,False,True,False,True,True,True,True,False,True]],[[False,False,False,False,True,True,True,True,False,True,True],[False,False,True,False,False,True,False,False,False,True,False],[False,False,False,False,True,True,True,True,False,True,False],[True,False,True,False,True,False,False,False,False,False,False],[True,False,True,True,False,True,True,True,False,False,True],[False,False,False,False,True,False,False,False,False,True,False],[True,True,True,False,True,True,False,True,False,True,False],[True,False,False,False,False,False,False,False,True,True,False],[False,True,True,False,True,True,False,True,False,True,False],[True,True,False,True,True,True,True,True,True,False,True],[False,False,True,False,True,True,True,False,True,True,True],[False,True,False,False,True,True,False,True,False,True,False],[False,False,False,True,True,True,True,True,False,True,False],[False,True,True,True,False,True,True,False,False,True,True],[False,True,True,False,True,False,False,True,False,False,True]],[[False,True,True,True,False,False,False,True,False,False,False],[True,True,True,False,False,True,False,False,False,True,True],[True,True,True,True,True,False,False,True,True,False,False],[False,False,True,True,False,False,True,False,True,True,True],[False,True,False,True,False,False,True,True,True,True,False],[False,False,True,False,False,False,False,True,False,False,True],[True,True,True,False,True,True,True,False,False,True,True],[False,False,True,False,True,False,False,False,False,False,True],[True,True,True,True,True,False,False,True,True,True,True],[False,True,False,True,False,False,False,True,True,False,True],[True,True,True,True,True,True,False,True,False,True,False],[False,True,True,False,True,True,False,False,False,False,False],[False,False,False,False,False,False,True,False,True,False,True],[False,False,False,False,False,False,False,True,False,False,False],[False,True,True,True,True,False,True,True,False,True,True]],[[False,True,True,False,False,False,False,True,True,False,True],[False,False,True,False,True,False,False,True,True,False,False],[False,True,True,False,False,True,False,True,False,True,False],[False,True,True,False,True,False,True,False,True,True,False],[False,True,True,False,False,True,True,False,True,False,False],[True,False,False,False,True,False,False,False,False,False,True],[True,False,True,True,False,True,False,True,True,False,True],[True,True,True,False,False,True,True,False,True,False,True],[False,False,False,False,True,False,False,True,True,False,False],[False,True,False,True,False,True,True,False,False,False,True],[True,False,False,True,True,False,False,False,True,False,False],[True,False,True,True,True,True,True,True,True,True,False],[True,True,False,False,False,True,True,False,False,False,False],[False,True,True,True,False,True,False,False,False,False,True],[True,True,False,False,False,True,True,False,True,False,True]],[[False,True,True,True,False,True,True,False,True,False,False],[False,True,False,False,True,False,False,True,True,True,True],[True,False,True,False,True,True,False,False,False,False,True],[True,True,True,False,False,True,True,False,True,False,True],[True,False,True,False,False,False,True,True,True,True,True],[True,True,True,False,True,True,True,True,False,False,False],[True,True,True,False,False,True,False,False,True,True,False],[False,True,False,False,True,False,False,False,True,True,True],[False,True,True,True,False,False,True,True,True,False,False],[False,True,False,True,True,True,False,False,True,False,False],[False,True,True,False,True,True,True,False,False,False,True],[True,True,False,False,True,True,True,True,True,True,False],[True,False,True,False,True,False,False,True,False,False,False],[True,False,True,False,True,True,False,True,True,False,True],[True,False,False,False,True,True,True,False,False,False,False]],[[True,True,True,True,True,True,True,True,True,False,True],[True,False,False,False,True,False,True,True,True,False,True],[True,False,False,False,True,False,False,False,False,False,True],[False,True,False,True,True,True,False,True,False,True,False],[False,False,True,False,True,False,True,False,True,False,False],[True,True,False,True,True,False,True,True,True,True,True],[True,False,False,False,True,True,False,False,True,False,False],[False,True,False,False,False,False,True,True,False,False,False],[False,True,True,False,True,True,True,False,False,False,True],[False,False,False,True,False,False,True,True,True,True,False],[True,False,False,True,True,True,True,False,True,False,True],[True,False,False,False,False,True,False,False,False,False,True],[False,True,True,False,False,False,True,False,False,False,False],[True,True,True,False,True,True,False,True,True,True,True],[True,True,True,False,True,False,False,True,True,False,False]],[[False,True,True,True,False,True,True,True,True,False,False],[False,True,True,False,True,False,True,False,False,False,True],[True,True,False,True,True,True,False,False,True,True,True],[False,False,True,True,True,False,False,False,True,True,True],[False,True,False,True,False,False,True,False,True,False,True],[True,False,True,False,False,True,True,True,False,False,True],[True,True,True,False,False,True,True,True,False,True,False],[False,False,False,False,True,False,True,False,False,False,False],[True,False,False,False,True,False,False,True,True,True,True],[False,True,True,True,False,False,True,False,False,True,False],[False,True,False,False,False,False,False,False,False,True,False],[False,True,False,False,True,True,False,True,False,False,False],[True,False,True,True,True,True,True,True,True,True,False],[True,False,True,True,False,True,True,False,False,False,True],[False,False,True,True,False,False,False,True,False,True,True]],[[True,True,False,False,False,True,False,False,False,True,False],[True,True,False,False,False,False,False,False,False,False,True],[True,False,True,True,False,False,True,True,True,True,False],[False,True,True,True,True,True,True,True,True,False,False],[True,True,False,False,True,True,False,False,False,True,False],[True,False,False,False,True,True,True,False,False,True,False],[True,True,True,False,False,False,True,True,False,False,False],[True,False,True,False,False,True,False,True,True,True,True],[True,True,True,True,True,True,True,False,True,False,True],[True,False,False,True,True,True,False,True,True,True,False],[False,True,False,False,True,False,True,False,True,True,False],[False,False,True,False,True,True,True,True,True,False,True],[True,False,False,False,False,True,True,True,True,True,False],[False,True,True,False,True,True,True,False,True,False,False],[False,False,True,False,True,False,True,False,True,False,False]],[[True,False,False,False,True,True,False,False,True,False,False],[False,False,True,True,True,True,True,True,True,True,True],[False,True,True,False,False,True,True,False,True,False,False],[True,False,True,False,False,False,True,False,False,True,False],[True,False,False,False,True,True,True,True,True,True,False],[False,True,True,True,False,True,False,False,False,True,False],[True,True,True,True,False,True,True,True,False,False,True],[False,False,True,True,True,False,False,False,False,False,True],[True,True,True,True,True,True,True,False,False,False,True],[True,False,True,False,True,False,False,False,False,False,False],[True,False,False,True,False,False,True,True,False,True,False],[True,False,False,True,True,False,True,True,False,False,True],[True,False,True,False,True,True,False,True,True,True,True],[True,False,False,False,True,True,False,False,True,True,False],[True,False,True,False,True,True,False,True,False,True,False]]], dtype = "bool")#candidate|13097|(10, 15, 11)|const|bool
var_13098 = relay.var("var_13098", dtype = "bool", shape = (10, 15, 11))#candidate|13098|(10, 15, 11)|var|bool
bop_13099 = relay.logical_or(const_13097.astype('bool'), relay.reshape(var_13098.astype('bool'), relay.shape_of(const_13097))) # shape=(10, 15, 11)
output = relay.Tuple([bop_13099,])
output2 = relay.Tuple([bop_13099,])
F = relay.Function([var_13098,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_13098,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

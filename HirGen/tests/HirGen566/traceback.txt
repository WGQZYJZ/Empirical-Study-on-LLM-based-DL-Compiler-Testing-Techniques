==========mod==========
#[version = "0.0.5"]
def @func_1352(%var_1334: Tensor[(4, 6, 8), uint8]) -> Tensor[(4, 6, 8), bool] {
  %0 = cast(%var_1334, dtype="bool") /* ty=Tensor[(4, 6, 8), bool] */;
  %1 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(4, 6, 8), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(4, 6, 8), uint8] */, dtype="bool") /* ty=Tensor[(4, 6, 8), bool] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%2, %3) /* ty=Tensor[(4, 6, 8), bool] */
}

def @func_6729(%var_6654: Tensor[(13, 2, 12), float32]) -> (Tensor[(13, 2, 12), float32], float64, Tensor[(143), float64], Tensor[(1, 13, 11), float32], Tensor[(16, 5, 6), bool], Tensor[(480), int16]) {
  %4 = cast(%var_6654, dtype="float32") /* ty=Tensor[(13, 2, 12), float32] */;
  %5 = rsqrt(%4) /* ty=Tensor[(13, 2, 12), float32] */;
  %6 = cast(%5, dtype="float32") /* ty=Tensor[(13, 2, 12), float32] */;
  %7 = cosh(%6) /* ty=Tensor[(13, 2, 12), float32] */;
  %8 = cast(%7, dtype="float32") /* ty=Tensor[(13, 2, 12), float32] */;
  %9 = shape_of(%5, dtype="int32") /* ty=Tensor[(3), int32] */;
  %10 = cast(%5, dtype="float32") /* ty=Tensor[(13, 2, 12), float32] */;
  %11 = dyn.reshape(%8, %9, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %12 = cast(8.53012f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %13 = cast(meta[relay.Constant][1] /* ty=Tensor[(143), float64] */, dtype="float64") /* ty=Tensor[(143), float64] */;
  %14 = reshape(%12, newshape=[]) /* ty=float64 */;
  %15 = reshape(%13, newshape=[1, 13, 11]) /* ty=Tensor[(1, 13, 11), float64] */;
  %16 = @func_3588(%14, %15) /* ty=(Tensor[(1, 13, 11), bool],) */;
  %17 = %16.0;
  %18 = cast(%17, dtype="float32") /* ty=Tensor[(1, 13, 11), float32] */;
  %19 = cast(meta[relay.Constant][2] /* ty=Tensor[(480), int16] */, dtype="int16") /* ty=Tensor[(480), int16] */;
  %20 = reshape(%19, newshape=[16, 5, 6]) /* ty=Tensor[(16, 5, 6), int16] */;
  %21 = @func_1118(%20) /* ty=(Tensor[(16, 5, 6), bool],) */;
  %22 = floor_divide(%10, %11) /* ty=Tensor[(13, 2, 12), float32] */;
  %23 = asinh(%18) /* ty=Tensor[(1, 13, 11), float32] */;
  %24 = %21.0;
  (%22, 8.53012f64 /* ty=float64 */, meta[relay.Constant][1] /* ty=Tensor[(143), float64] */, %23, %24, meta[relay.Constant][2] /* ty=Tensor[(480), int16] */)
}

def @func_9287(%var_9279: Tensor[(4, 13, 10), float64], %var_9280: Tensor[(4, 13, 10), float64]) -> Tensor[(4, 13, 10), float64] {
  %25 = cast(%var_9280, dtype="float64") /* ty=Tensor[(4, 13, 10), float64] */;
  %26 = shape_of(%var_9279, dtype="int32") /* ty=Tensor[(3), int32] */;
  %27 = cast(%var_9279, dtype="float64") /* ty=Tensor[(4, 13, 10), float64] */;
  %28 = dyn.reshape(%25, %26, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%27, %28) /* ty=Tensor[(4, 13, 10), float64] */
}

def @func_9600() -> Tensor[(7, 4, 4), int8] {
  %29 = cast(meta[relay.Constant][4] /* ty=Tensor[(7, 4, 4), int8] */, dtype="int8") /* ty=Tensor[(7, 4, 4), int8] */;
  %30 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(7, 4, 4), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %31 = cast(meta[relay.Constant][3] /* ty=Tensor[(7, 4, 4), int8] */, dtype="int8") /* ty=Tensor[(7, 4, 4), int8] */;
  %32 = dyn.reshape(%29, %30, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  subtract(%31, %32) /* ty=Tensor[(7, 4, 4), int8] */
}

def @func_537(%var_528: Tensor[(16, 1, 16), uint16], %var_529: Tensor[(16, 1, 16), uint16]) -> (Tensor[(16, ?, 16), bool], Tensor[(5, 16, 13), int8], Tensor[(8, 130), int64]) {
  %33 = cast(%var_529, dtype="bool") /* ty=Tensor[(16, 1, 16), bool] */;
  %34 = shape_of(%var_528, dtype="int32") /* ty=Tensor[(3), int32] */;
  %35 = cast(%var_528, dtype="bool") /* ty=Tensor[(16, 1, 16), bool] */;
  %36 = dyn.reshape(%33, %34, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %37 = cast(meta[relay.Constant][5] /* ty=Tensor[(8, 130), int64] */, dtype="int64") /* ty=Tensor[(8, 130), int64] */;
  %38 = cast(meta[relay.Constant][5] /* ty=Tensor[(8, 130), int64] */, dtype="int64") /* ty=Tensor[(8, 130), int64] */;
  %39 = reshape(%37, newshape=[5, 16, 13]) /* ty=Tensor[(5, 16, 13), int64] */;
  %40 = reshape(%38, newshape=[5, 16, 13]) /* ty=Tensor[(5, 16, 13), int64] */;
  %41 = @func_297(%39, %40) /* ty=(Tensor[(5, 16, 13), int8],) */;
  %42 = less(%35, %36) /* ty=Tensor[(16, ?, 16), bool] */;
  %43 = %41.0;
  (%42, %43, meta[relay.Constant][5] /* ty=Tensor[(8, 130), int64] */)
}

def @func_10339(%var_10305: Tensor[(858), float32], %var_10306: Tensor[(784, 2), uint32], %var_10307: Tensor[(1404), float64]) -> (Tensor[(3, 15, 11), float32], Tensor[(1404), float64], Tensor[(858), float32], Tensor[(1404), float64], Tensor[(784, 2), float64], Tensor[(13, 5, 14), bool], Tensor[(455, 2), bool], uint8, uint8, Tensor[(256), uint16]) {
  %44 = @func_10082() /* ty=(Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float32], Tensor[(5, 16, 13), int8], Tensor[(1040), int64]) */;
  %45 = cast(%var_10305, dtype="float32") /* ty=Tensor[(858), float32] */;
  %46 = cast(%var_10306, dtype="uint32") /* ty=Tensor[(784, 2), uint32] */;
  %47 = cast(%var_10307, dtype="float64") /* ty=Tensor[(1404), float64] */;
  %48 = reshape(%45, newshape=[6, 11, 13]) /* ty=Tensor[(6, 11, 13), float32] */;
  %49 = reshape(%46, newshape=[56, 28]) /* ty=Tensor[(56, 28), uint32] */;
  %50 = reshape(%47, newshape=[1404]) /* ty=Tensor[(1404), float64] */;
  %51 = @func_6315(%48, %49, %50) /* ty=(Tensor[(6, 11, 13), float32], Tensor[(14, 7, 16), bool], Tensor[(56, 28), uint32], Tensor[(1404), float64]) */;
  %52 = cast(%var_10306, dtype="float64") /* ty=Tensor[(784, 2), float64] */;
  %53 = cast(meta[relay.Constant][6] /* ty=Tensor[(455, 2), bool] */, dtype="bool") /* ty=Tensor[(455, 2), bool] */;
  %54 = cast(meta[relay.Constant][6] /* ty=Tensor[(455, 2), bool] */, dtype="bool") /* ty=Tensor[(455, 2), bool] */;
  %55 = reshape(%53, newshape=[13, 5, 14]) /* ty=Tensor[(13, 5, 14), bool] */;
  %56 = reshape(%54, newshape=[13, 5, 14]) /* ty=Tensor[(13, 5, 14), bool] */;
  %57 = cast(meta[relay.Constant][7] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %58 = reshape(%57, newshape=[]) /* ty=uint8 */;
  %59 = @func_9337(%58) /* ty=(Tensor[(3, 15, 11), float32], Tensor[(2, 14, 2), float64], uint8) */;
  %60 = @func_9141() /* ty=(Tensor[(256), uint16], Tensor[(3, 15, 11), int16], Tensor[(3, 15, 11), int64]) */;
  %61 = %44.0;
  %62 = %51.3;
  %63 = exp(%52) /* ty=Tensor[(784, 2), float64] */;
  %64 = @func_9935(%55, %56) /* ty=Tensor[(13, 5, 14), bool] */;
  %65 = %59.2;
  %66 = %60.0;
  (%61, %62, %var_10305, %var_10307, %63, %64, meta[relay.Constant][6] /* ty=Tensor[(455, 2), bool] */, %65, meta[relay.Constant][7] /* ty=uint8 */, %66)
}

def @func_6171(%var_6168: Tensor[(8, 3, 15), float64]) -> Tensor[(8, 3, 15), float64] {
  %67 = cast(%var_6168, dtype="float64") /* ty=Tensor[(8, 3, 15), float64] */;
  log(%67) /* ty=Tensor[(8, 3, 15), float64] */
}

def @func_10202() -> (Tensor[(3, 15, 11), float32], Tensor[(7, 4, 4), int8]) {
  %68 = @func_8375() /* ty=(Tensor[(3, 15, 11), float32],) */;
  %69 = %68.0;
  %70 = @func_9600() /* ty=Tensor[(7, 4, 4), int8] */;
  (%69, %70)
}

def @func_11688(%var_11669: Tensor[(429, 2), uint16], %var_11670: Tensor[(1040), int64]) -> (Tensor[(3, 15, 11), float32], Tensor[(66), uint16], Tensor[(66, 1), uint16], Tensor[(429, 2), uint16], Tensor[(1040), int64]) {
  %71 = @func_9526() /* ty=(Tensor[(3, 15, 11), int16], Tensor[(3, 15, 11), float32]) */;
  %72 = %71.1;
  %73 = cast(%72, dtype="float64") /* ty=Tensor[(3, 15, 11), float64] */;
  %74 = cast(meta[relay.Constant][8] /* ty=Tensor[(66, 1), uint16] */, dtype="uint16") /* ty=Tensor[(66, 1), uint16] */;
  %75 = cast(%var_11669, dtype="uint16") /* ty=Tensor[(429, 2), uint16] */;
  %76 = cast(%var_11670, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %77 = reshape(%73, newshape=[3, 15, 11]) /* ty=Tensor[(3, 15, 11), float64] */;
  %78 = reshape(%74, newshape=[66]) /* ty=Tensor[(66), uint16] */;
  %79 = reshape(%75, newshape=[429, 2]) /* ty=Tensor[(429, 2), uint16] */;
  %80 = reshape(%76, newshape=[1040]) /* ty=Tensor[(1040), int64] */;
  %81 = @func_8953(%77, %78, %79, %80) /* ty=(Tensor[(3, 15, 11), int32], Tensor[(1040), int8], Tensor[(66), uint16], Tensor[(429, 2), uint16], Tensor[(1040), int64]) */;
  %82 = %81.2;
  (%72, %82, meta[relay.Constant][8] /* ty=Tensor[(66, 1), uint16] */, %var_11669, %var_11670)
}

def @func_12106(%var_12101: Tensor[(16, 16, 7), bool]) -> (Tensor[(16, 16, 7), bool],) {
  %83 = cast(%var_12101, dtype="bool") /* ty=Tensor[(16, 16, 7), bool] */;
  %84 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(16, 16, 7), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %85 = cast(meta[relay.Constant][9] /* ty=Tensor[(16, 16, 7), bool] */, dtype="bool") /* ty=Tensor[(16, 16, 7), bool] */;
  %86 = dyn.reshape(%83, %84, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %87 = logical_or(%85, %86) /* ty=Tensor[(16, 16, 7), bool] */;
  (%87,)
}

def @func_3642(%var_3605: Tensor[(16, 7, 10), float32], %var_3638: float32, %var_3639: Tensor[(1, 66), uint16]) -> (Tensor[(16, 7, 10), int16], Tensor[(16, 7, 10), float64], Tensor[(5, 16, 13), int8], Tensor[(8, 130), int64], Tensor[(1040), int64], float32, Tensor[(1, 66), uint16]) {
  %88 = cast(%var_3605, dtype="float32") /* ty=Tensor[(16, 7, 10), float32] */;
  %89 = cosh(%88) /* ty=Tensor[(16, 7, 10), float32] */;
  %90 = cast(%var_3605, dtype="int16") /* ty=Tensor[(16, 7, 10), int16] */;
  %91 = shape_of(%89, dtype="int32") /* ty=Tensor[(3), int32] */;
  %92 = cast(%89, dtype="int16") /* ty=Tensor[(16, 7, 10), int16] */;
  %93 = dyn.reshape(%90, %91, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %94 = cast(%var_3605, dtype="float64") /* ty=Tensor[(16, 7, 10), float64] */;
  %95 = cast(meta[relay.Constant][10] /* ty=Tensor[(8, 130), int64] */, dtype="int64") /* ty=Tensor[(8, 130), int64] */;
  %96 = cast(meta[relay.Constant][10] /* ty=Tensor[(8, 130), int64] */, dtype="int64") /* ty=Tensor[(8, 130), int64] */;
  %97 = reshape(%95, newshape=[5, 16, 13]) /* ty=Tensor[(5, 16, 13), int64] */;
  %98 = reshape(%96, newshape=[5, 16, 13]) /* ty=Tensor[(5, 16, 13), int64] */;
  %99 = @func_297(%97, %98) /* ty=(Tensor[(5, 16, 13), int8],) */;
  %100 = cast(%var_3638, dtype="float32") /* ty=float32 */;
  %101 = cast(%var_3639, dtype="uint16") /* ty=Tensor[(1, 66), uint16] */;
  %102 = cast(meta[relay.Constant][10] /* ty=Tensor[(8, 130), int64] */, dtype="int64") /* ty=Tensor[(8, 130), int64] */;
  %103 = reshape(%100, newshape=[]) /* ty=float32 */;
  %104 = reshape(%101, newshape=[66]) /* ty=Tensor[(66), uint16] */;
  %105 = reshape(%102, newshape=[1040]) /* ty=Tensor[(1040), int64] */;
  %106 = @func_2977(%103, %104, %105) /* ty=(Tensor[(9, 2, 5), bool], Tensor[(16, ?, 16), bool], Tensor[(66), uint16], Tensor[(858), uint16], Tensor[(1040), int64]) */;
  %107 = maximum(%92, %93) /* ty=Tensor[(16, 7, 10), int16] */;
  %108 = cos(%94) /* ty=Tensor[(16, 7, 10), float64] */;
  %109 = %99.0;
  %110 = %106.4;
  (%107, %108, %109, meta[relay.Constant][10] /* ty=Tensor[(8, 130), int64] */, %110, %var_3638, %var_3639)
}

def @func_9492() -> Tensor[(8, 14, 3), int16] {
  @func_8297() /* ty=Tensor[(8, 14, 3), int16] */
}

def @func_7345(%var_7294: Tensor[(13, 3, 1), uint16], %var_7295: Tensor[(13, 3, 3), uint16], %var_7315: Tensor[(1404), float64], %var_7320: Tensor[(5, 84), float64]) -> (Tensor[(13, 3, 3), bool], Tensor[(13, 3, 3), uint32], Tensor[(1568), uint32], Tensor[(14, 3, 10), float64], Tensor[(5, 84), float64], Tensor[(1404), bool], Tensor[(13, 3, 1404), float32]) {
  %111 = cast(%var_7294, dtype="bool") /* ty=Tensor[(13, 3, 1), bool] */;
  %112 = cast(%var_7295, dtype="bool") /* ty=Tensor[(13, 3, 3), bool] */;
  %113 = cast(%var_7295, dtype="uint32") /* ty=Tensor[(13, 3, 3), uint32] */;
  %114 = cast(%var_7294, dtype="uint32") /* ty=Tensor[(13, 3, 1), uint32] */;
  %115 = cast(%var_7320, dtype="float64") /* ty=Tensor[(5, 84), float64] */;
  %116 = reshape(%115, newshape=[14, 3, 10]) /* ty=Tensor[(14, 3, 10), float64] */;
  %117 = @func_5003(%116) /* ty=(Tensor[(14, 3, 10), float64],) */;
  %118 = cast(meta[relay.Constant][11] /* ty=Tensor[(1568), uint32] */, dtype="uint32") /* ty=Tensor[(1568), uint32] */;
  %119 = cast(%var_7315, dtype="float64") /* ty=Tensor[(1404), float64] */;
  %120 = reshape(%118, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), uint32] */;
  %121 = reshape(%119, newshape=[1404]) /* ty=Tensor[(1404), float64] */;
  %122 = @func_4219(%120, %121) /* ty=(Tensor[(14, 7, 16), bool], Tensor[(9, 12, 13), float64], Tensor[(1404), float64]) */;
  %123 = %122.2;
  %124 = cast(%123, dtype="bool") /* ty=Tensor[(1404), bool] */;
  %125 = shape_of(%var_7315, dtype="int32") /* ty=Tensor[(1), int32] */;
  %126 = cast(%var_7315, dtype="bool") /* ty=Tensor[(1404), bool] */;
  %127 = dyn.reshape(%124, %125, newshape=[]) /* ty=Tensor[(?), bool] */;
  %128 = cast(%var_7315, dtype="float32") /* ty=Tensor[(1404), float32] */;
  %129 = cast(%var_7294, dtype="float32") /* ty=Tensor[(13, 3, 1), float32] */;
  %130 = less_equal(%111, %112) /* ty=Tensor[(13, 3, 3), bool] */;
  %131 = minimum(%113, %114) /* ty=Tensor[(13, 3, 3), uint32] */;
  %132 = %117.0;
  %133 = greater_equal(%126, %127) /* ty=Tensor[(1404), bool] */;
  %134 = divide(%128, %129) /* ty=Tensor[(13, 3, 1404), float32] */;
  (%130, %131, meta[relay.Constant][11] /* ty=Tensor[(1568), uint32] */, %132, %var_7320, %133, %134)
}

def @func_4041(%var_4026: Tensor[(10, 6, 11), int32], %var_4034: Tensor[(1120), float32], %var_4036: Tensor[(22, 3), uint16]) -> (Tensor[(10, 6, 11), bool], Tensor[(5, 16, 13), int8], Tensor[(1120), float32], float32, Tensor[(22, 3), uint16]) {
  %135 = cast(%var_4026, dtype="bool") /* ty=Tensor[(10, 6, 11), bool] */;
  %136 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(10, 6, 11), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %137 = cast(meta[relay.Constant][12] /* ty=Tensor[(10, 6, 11), int32] */, dtype="bool") /* ty=Tensor[(10, 6, 11), bool] */;
  %138 = dyn.reshape(%135, %136, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %139 = cast(%var_4034, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %140 = cast(4.74148f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %141 = cast(%var_4036, dtype="uint16") /* ty=Tensor[(22, 3), uint16] */;
  %142 = reshape(%139, newshape=[16, 7, 10]) /* ty=Tensor[(16, 7, 10), float32] */;
  %143 = reshape(%140, newshape=[]) /* ty=float32 */;
  %144 = reshape(%141, newshape=[1, 66]) /* ty=Tensor[(1, 66), uint16] */;
  %145 = @func_3642(%142, %143, %144) /* ty=(Tensor[(16, 7, 10), int16], Tensor[(16, 7, 10), float64], Tensor[(5, 16, 13), int8], Tensor[(8, 130), int64], Tensor[(1040), int64], float32, Tensor[(1, 66), uint16]) */;
  %146 = equal(%137, %138) /* ty=Tensor[(10, 6, 11), bool] */;
  %147 = %145.2;
  (%146, %147, %var_4034, 4.74148f /* ty=float32 */, %var_4036)
}

def @func_11719() -> Tensor[(8, 14, 3), int16] {
  @func_8297() /* ty=Tensor[(8, 14, 3), int16] */
}

def @func_8407() -> Tensor[(3, 15, 11), float32] {
  %148 = @func_8000() /* ty=(Tensor[(3, 15, 11), float32], Tensor[(8, 130), int64], Tensor[(256), uint16]) */;
  %148.0
}

def @func_10598() -> Tensor[(3, 15, 11), int64] {
  %149 = @func_9141() /* ty=(Tensor[(256), uint16], Tensor[(3, 15, 11), int16], Tensor[(3, 15, 11), int64]) */;
  %149.2
}

def @func_9366() -> Tensor[(256), uint16] {
  %150 = @func_8000() /* ty=(Tensor[(3, 15, 11), float32], Tensor[(8, 130), int64], Tensor[(256), uint16]) */;
  %150.2
}

def @func_8136() -> Tensor[(3, 15, 11), float32] {
  @func_7889() /* ty=Tensor[(3, 15, 11), float32] */
}

def @func_7925(%var_7915: Tensor[(14, 2, 7), bool]) -> (Tensor[(14, 2, 7), bool],) {
  %151 = cast(meta[relay.Constant][13] /* ty=Tensor[(14, 2, 7), bool] */, dtype="bool") /* ty=Tensor[(14, 2, 7), bool] */;
  %152 = shape_of(%var_7915, dtype="int32") /* ty=Tensor[(3), int32] */;
  %153 = cast(%var_7915, dtype="bool") /* ty=Tensor[(14, 2, 7), bool] */;
  %154 = dyn.reshape(%151, %152, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %155 = logical_and(%153, %154) /* ty=Tensor[(14, 2, 7), bool] */;
  (%155,)
}

def @func_10173() -> (Tensor[(3, 15, 11), float32],) {
  %156 = @func_9779() /* ty=(Tensor[(3, 15, 11), float32],) */;
  %157 = %156.0;
  (%157,)
}

def @func_11361() -> (Tensor[(14, 3, 10), float64], Tensor[(420), float64], Tensor[(8, 14, 3), bool]) {
  %158 = cast(meta[relay.Constant][14] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %159 = reshape(%158, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %160 = @func_8215(%159) /* ty=(Tensor[(3, 15, 11), float32], Tensor[(14, 3, 10), float64], Tensor[(420), float64]) */;
  %161 = @func_10776() /* ty=(Tensor[(8, 14, 3), float32], Tensor[(8, 14, 3), float32]) */;
  %162 = %161.1;
  %163 = cast(%162, dtype="float32") /* ty=Tensor[(8, 14, 3), float32] */;
  %164 = erf(%163) /* ty=Tensor[(8, 14, 3), float32] */;
  %165 = cast(%162, dtype="bool") /* ty=Tensor[(8, 14, 3), bool] */;
  %166 = shape_of(%164, dtype="int32") /* ty=Tensor[(3), int32] */;
  %167 = cast(%164, dtype="bool") /* ty=Tensor[(8, 14, 3), bool] */;
  %168 = dyn.reshape(%165, %166, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %169 = %160.1;
  %170 = logical_and(%167, %168) /* ty=Tensor[(8, 14, 3), bool] */;
  (%169, meta[relay.Constant][14] /* ty=Tensor[(420), float64] */, %170)
}

def @func_12489() -> (Tensor[(3, 15, 11), float64], Tensor[(16, 1, 15), float32], Tensor[(240), float32], Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), int64]) {
  %171 = @func_8789() /* ty=(Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float64]) */;
  %172 = cast(meta[relay.Constant][15] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %173 = reshape(%172, newshape=[16, 1, 15]) /* ty=Tensor[(16, 1, 15), float32] */;
  %174 = @func_11556(%173) /* ty=(Tensor[(16, 1, 15), float32],) */;
  %175 = @func_12204() /* ty=(Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float32]) */;
  %176 = %171.1;
  %177 = %174.0;
  %178 = %175.1;
  %179 = @func_10598() /* ty=Tensor[(3, 15, 11), int64] */;
  (%176, %177, meta[relay.Constant][15] /* ty=Tensor[(240), float32] */, %178, %179)
}

def @func_2871(%var_2863: Tensor[(9, 12, 13), float64]) -> (Tensor[(9, 12, 13), float64],) {
  %180 = cast(%var_2863, dtype="float64") /* ty=Tensor[(9, 12, 13), float64] */;
  %181 = log2(%180) /* ty=Tensor[(9, 12, 13), float64] */;
  (%181,)
}

def @func_8446() -> (Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float32]) {
  %182 = @func_7889() /* ty=Tensor[(3, 15, 11), float32] */;
  %183 = @func_8407() /* ty=Tensor[(3, 15, 11), float32] */;
  (%182, %183)
}

def @func_11230() -> (Tensor[(3, 15, 11), int64], Tensor[(5, 10, 14), bool], Tensor[(700), float32]) {
  %184 = cast(meta[relay.Constant][16] /* ty=Tensor[(700), float32] */, dtype="float32") /* ty=Tensor[(700), float32] */;
  %185 = cast(meta[relay.Constant][16] /* ty=Tensor[(700), float32] */, dtype="float32") /* ty=Tensor[(700), float32] */;
  %186 = reshape(%184, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), float32] */;
  %187 = reshape(%185, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), float32] */;
  %188 = @func_899(%186, %187) /* ty=(Tensor[(5, 10, 14), bool],) */;
  %189 = @func_11136() /* ty=Tensor[(3, 15, 11), int64] */;
  %190 = %188.0;
  (%189, %190, meta[relay.Constant][16] /* ty=Tensor[(700), float32] */)
}

def @func_8150() -> (Tensor[(3, 15, 11), float32],) {
  %191 = @func_8136() /* ty=Tensor[(3, 15, 11), float32] */;
  (%191,)
}

def @func_8953(%var_8928: Tensor[(3, 15, 11), float64], %var_8946: Tensor[(66), uint16], %var_8947: Tensor[(429, 2), uint16], %var_8948: Tensor[(1040), int64]) -> (Tensor[(3, 15, 11), int32], Tensor[(1040), int8], Tensor[(66), uint16], Tensor[(429, 2), uint16], Tensor[(1040), int64]) {
  %192 = @func_8407() /* ty=Tensor[(3, 15, 11), float32] */;
  %193 = cast(%192, dtype="float64") /* ty=Tensor[(3, 15, 11), float64] */;
  %194 = sinh(%193) /* ty=Tensor[(3, 15, 11), float64] */;
  %195 = cast(%var_8928, dtype="int32") /* ty=Tensor[(3, 15, 11), int32] */;
  %196 = shape_of(%194, dtype="int32") /* ty=Tensor[(3), int32] */;
  %197 = cast(%194, dtype="int32") /* ty=Tensor[(3, 15, 11), int32] */;
  %198 = dyn.reshape(%195, %196, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %199 = cast(%var_8946, dtype="uint16") /* ty=Tensor[(66), uint16] */;
  %200 = cast(%var_8947, dtype="uint16") /* ty=Tensor[(429, 2), uint16] */;
  %201 = cast(%var_8948, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %202 = reshape(%199, newshape=[11, 6, 1]) /* ty=Tensor[(11, 6, 1), uint16] */;
  %203 = reshape(%200, newshape=[11, 6, 13]) /* ty=Tensor[(11, 6, 13), uint16] */;
  %204 = reshape(%201, newshape=[1040]) /* ty=Tensor[(1040), int64] */;
  %205 = @func_581(%202, %203, %204) /* ty=(Tensor[(11, 6, 13), uint16], Tensor[(16, ?, 16), bool], Tensor[(256), uint16], Tensor[(1040), float32], Tensor[(1040), int8], Tensor[(5, 16, 13), int8], Tensor[(5, 16, 13), int8]) */;
  %206 = bitwise_or(%197, %198) /* ty=Tensor[(3, 15, 11), int32] */;
  %207 = %205.4;
  (%206, %207, %var_8946, %var_8947, %var_8948)
}

def @func_9214(%var_9197: Tensor[(5, 84), float64], %var_9202: Tensor[(480), int16], %var_9210: Tensor[(351), float32]) -> (Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float32], Tensor[(5, 84), float64], Tensor[(16, 5, 6), bool], Tensor[(480), int16], Tensor[(1536), float64], Tensor[(351), float32]) {
  %208 = @func_8446() /* ty=(Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float32]) */;
  %209 = %208.1;
  %210 = cast(meta[relay.Constant][17] /* ty=Tensor[(3, 15, 11), float32] */, dtype="float32") /* ty=Tensor[(3, 15, 11), float32] */;
  %211 = shape_of(%209, dtype="int32") /* ty=Tensor[(3), int32] */;
  %212 = cast(%209, dtype="float32") /* ty=Tensor[(3, 15, 11), float32] */;
  %213 = dyn.reshape(%210, %211, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %214 = cast(%209, dtype="float32") /* ty=Tensor[(3, 15, 11), float32] */;
  %215 = cast(%var_9197, dtype="float64") /* ty=Tensor[(5, 84), float64] */;
  %216 = reshape(%215, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %217 = @func_8215(%216) /* ty=(Tensor[(3, 15, 11), float32], Tensor[(14, 3, 10), float64], Tensor[(420), float64]) */;
  %218 = cast(%var_9202, dtype="int16") /* ty=Tensor[(480), int16] */;
  %219 = reshape(%218, newshape=[16, 5, 6]) /* ty=Tensor[(16, 5, 6), int16] */;
  %220 = @func_1118(%219) /* ty=(Tensor[(16, 5, 6), bool],) */;
  %221 = cast(%var_9210, dtype="float32") /* ty=Tensor[(351), float32] */;
  %222 = cast(%var_9210, dtype="float32") /* ty=Tensor[(351), float32] */;
  %223 = cast(%var_9210, dtype="float32") /* ty=Tensor[(351), float32] */;
  %224 = reshape(%221, newshape=[9, 13, 3]) /* ty=Tensor[(9, 13, 3), float32] */;
  %225 = reshape(%222, newshape=[9, 13, 3]) /* ty=Tensor[(9, 13, 3), float32] */;
  %226 = reshape(%223, newshape=[9, 13, 3]) /* ty=Tensor[(9, 13, 3), float32] */;
  %227 = @func_5819(%224, %225, %226) /* ty=(Tensor[(9, 13, 3), float32], Tensor[(16, 8, 12), float64], Tensor[(1536), float64], Tensor[(9, 13, 3), int16], Tensor[(9, 12, 13), float64], Tensor[(3, 468), float64]) */;
  %228 = power(%212, %213) /* ty=Tensor[(3, 15, 11), float32] */;
  %229 = log10(%214) /* ty=Tensor[(3, 15, 11), float32] */;
  %230 = %217.0;
  %231 = %220.0;
  %232 = %227.2;
  (%228, %229, %230, %var_9197, %231, %var_9202, %232, %var_9210)
}

def @func_9337(%var_9334: uint8) -> (Tensor[(3, 15, 11), float32], Tensor[(2, 14, 2), float64], uint8) {
  %233 = @func_8446() /* ty=(Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float32]) */;
  %234 = cast(%var_9334, dtype="uint8") /* ty=uint8 */;
  %235 = reshape(%234, newshape=[]) /* ty=uint8 */;
  %236 = @func_4005(%235) /* ty=(Tensor[(2, 14, 2), float64], Tensor[(2, 14, 2), bool]) */;
  %237 = %233.1;
  %238 = %236.0;
  (%237, %238, %var_9334)
}

def @func_7030(%var_7023: Tensor[(4, 6, 5), uint16]) -> (Tensor[(4, 6, 5), bool],) {
  %239 = cast(meta[relay.Constant][18] /* ty=Tensor[(4, 6, 5), uint16] */, dtype="bool") /* ty=Tensor[(4, 6, 5), bool] */;
  %240 = shape_of(%var_7023, dtype="int32") /* ty=Tensor[(3), int32] */;
  %241 = cast(%var_7023, dtype="bool") /* ty=Tensor[(4, 6, 5), bool] */;
  %242 = dyn.reshape(%239, %240, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %243 = less(%241, %242) /* ty=Tensor[(4, 6, 5), bool] */;
  (%243,)
}

def @func_1118(%var_1107: Tensor[(16, 5, 6), int16]) -> (Tensor[(16, 5, 6), bool],) {
  %244 = cast(%var_1107, dtype="bool") /* ty=Tensor[(16, 5, 6), bool] */;
  %245 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(16, 5, 6), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %246 = cast(meta[relay.Constant][19] /* ty=Tensor[(16, 5, 6), int16] */, dtype="bool") /* ty=Tensor[(16, 5, 6), bool] */;
  %247 = dyn.reshape(%244, %245, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %248 = greater(%246, %247) /* ty=Tensor[(16, 5, 6), bool] */;
  (%248,)
}

def @func_8687(%var_8646: Tensor[(3, 15, 11), float32], %var_8662: Tensor[(3, 15, 11), float32]) -> (Tensor[(8, 14, 3), int16], Tensor[(8, 14, 3), int16], Tensor[(3, 15, 11), int64], Tensor[(3, 15, 11), int8], Tensor[(3, 15, 11), uint32]) {
  %249 = @func_8000() /* ty=(Tensor[(3, 15, 11), float32], Tensor[(8, 130), int64], Tensor[(256), uint16]) */;
  %250 = %249.0;
  %251 = cast(%var_8646, dtype="int64") /* ty=Tensor[(3, 15, 11), int64] */;
  %252 = shape_of(%250, dtype="int32") /* ty=Tensor[(3), int32] */;
  %253 = cast(%250, dtype="int64") /* ty=Tensor[(3, 15, 11), int64] */;
  %254 = dyn.reshape(%251, %252, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %255 = @func_8375() /* ty=(Tensor[(3, 15, 11), float32],) */;
  %256 = %255.0;
  %257 = cast(%var_8662, dtype="int8") /* ty=Tensor[(3, 15, 11), int8] */;
  %258 = shape_of(%256, dtype="int32") /* ty=Tensor[(3), int32] */;
  %259 = cast(%256, dtype="int8") /* ty=Tensor[(3, 15, 11), int8] */;
  %260 = dyn.reshape(%257, %258, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %261 = cast(%256, dtype="uint32") /* ty=Tensor[(3, 15, 11), uint32] */;
  %262 = shape_of(%var_8646, dtype="int32") /* ty=Tensor[(3), int32] */;
  %263 = cast(%var_8646, dtype="uint32") /* ty=Tensor[(3, 15, 11), uint32] */;
  %264 = dyn.reshape(%261, %262, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %265 = @func_8297() /* ty=Tensor[(8, 14, 3), int16] */;
  %266 = @func_8297() /* ty=Tensor[(8, 14, 3), int16] */;
  %267 = minimum(%253, %254) /* ty=Tensor[(3, 15, 11), int64] */;
  %268 = logical_xor(%259, %260) /* ty=Tensor[(3, 15, 11), int8] */;
  %269 = bitwise_and(%263, %264) /* ty=Tensor[(3, 15, 11), uint32] */;
  (%265, %266, %267, %268, %269)
}

def @func_12069(%var_12063: Tensor[(630), float32]) -> (Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float32], Tensor[(14, 15, 3), float32], Tensor[(630), float32]) {
  %270 = @func_8446() /* ty=(Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float32]) */;
  %271 = cast(%var_12063, dtype="float32") /* ty=Tensor[(630), float32] */;
  %272 = reshape(%271, newshape=[14, 15, 3]) /* ty=Tensor[(14, 15, 3), float32] */;
  %273 = %270.1;
  %274 = @func_7889() /* ty=Tensor[(3, 15, 11), float32] */;
  %275 = @func_8742(%272) /* ty=Tensor[(14, 15, 3), float32] */;
  (%273, %274, %275, %var_12063)
}

def @func_8061(%var_8046: Tensor[(108), float32], %var_8047: Tensor[(192), uint8]) -> (Tensor[(256), uint16], Tensor[(12, 9, ?), int8], Tensor[(108), float32], Tensor[(192), uint8]) {
  %276 = @func_8000() /* ty=(Tensor[(3, 15, 11), float32], Tensor[(8, 130), int64], Tensor[(256), uint16]) */;
  %277 = cast(%var_8046, dtype="float32") /* ty=Tensor[(108), float32] */;
  %278 = cast(%var_8047, dtype="uint8") /* ty=Tensor[(192), uint8] */;
  %279 = reshape(%277, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), float32] */;
  %280 = reshape(%278, newshape=[192]) /* ty=Tensor[(192), uint8] */;
  %281 = @func_3753(%279, %280) /* ty=(Tensor[(16, 5, 6), bool], Tensor[(120, 4), int16], Tensor[(4, 6, 8), bool], Tensor[(192), uint8], Tensor[(12, 9, ?), int8], Tensor[(12, 9, 1), float64]) */;
  %282 = %276.2;
  %283 = %281.4;
  (%282, %283, %var_8046, %var_8047)
}

def @func_581(%var_542: Tensor[(11, 6, 1), uint16], %var_543: Tensor[(11, 6, 13), uint16], %var_561: Tensor[(1040), int64]) -> (Tensor[(11, 6, 13), uint16], Tensor[(16, ?, 16), bool], Tensor[(256), uint16], Tensor[(1040), float32], Tensor[(1040), int8], Tensor[(5, 16, 13), int8], Tensor[(5, 16, 13), int8]) {
  %284 = cast(%var_542, dtype="uint16") /* ty=Tensor[(11, 6, 1), uint16] */;
  %285 = cast(%var_543, dtype="uint16") /* ty=Tensor[(11, 6, 13), uint16] */;
  %286 = cast(meta[relay.Constant][20] /* ty=Tensor[(256), uint16] */, dtype="uint16") /* ty=Tensor[(256), uint16] */;
  %287 = cast(meta[relay.Constant][20] /* ty=Tensor[(256), uint16] */, dtype="uint16") /* ty=Tensor[(256), uint16] */;
  %288 = reshape(%286, newshape=[16, 1, 16]) /* ty=Tensor[(16, 1, 16), uint16] */;
  %289 = reshape(%287, newshape=[16, 1, 16]) /* ty=Tensor[(16, 1, 16), uint16] */;
  %290 = @func_537(%288, %289) /* ty=(Tensor[(16, ?, 16), bool], Tensor[(5, 16, 13), int8], Tensor[(8, 130), int64]) */;
  %291 = cast(%var_561, dtype="float32") /* ty=Tensor[(1040), float32] */;
  %292 = cast(%var_561, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %293 = cast(%var_561, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %294 = reshape(%292, newshape=[5, 16, 13]) /* ty=Tensor[(5, 16, 13), int64] */;
  %295 = reshape(%293, newshape=[5, 16, 13]) /* ty=Tensor[(5, 16, 13), int64] */;
  %296 = @func_297(%294, %295) /* ty=(Tensor[(5, 16, 13), int8],) */;
  %297 = %296.0;
  %298 = cast(%297, dtype="int8") /* ty=Tensor[(5, 16, 13), int8] */;
  %299 = shape_of(%var_561, dtype="int32") /* ty=Tensor[(1), int32] */;
  %300 = cast(%var_561, dtype="int8") /* ty=Tensor[(1040), int8] */;
  %301 = dyn.reshape(%298, %299, newshape=[]) /* ty=Tensor[(?), int8] */;
  %302 = cast(%var_561, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %303 = log10(%291) /* ty=Tensor[(1040), float32] */;
  %304 = cast(%303, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %305 = reshape(%302, newshape=[5, 16, 13]) /* ty=Tensor[(5, 16, 13), int64] */;
  %306 = reshape(%304, newshape=[5, 16, 13]) /* ty=Tensor[(5, 16, 13), int64] */;
  %307 = @func_297(%305, %306) /* ty=(Tensor[(5, 16, 13), int8],) */;
  %308 = cast(%297, dtype="int64") /* ty=Tensor[(5, 16, 13), int64] */;
  %309 = bitwise_or(%300, %301) /* ty=Tensor[(1040), int8] */;
  %310 = cast(%309, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %311 = reshape(%308, newshape=[5, 16, 13]) /* ty=Tensor[(5, 16, 13), int64] */;
  %312 = reshape(%310, newshape=[5, 16, 13]) /* ty=Tensor[(5, 16, 13), int64] */;
  %313 = @func_297(%311, %312) /* ty=(Tensor[(5, 16, 13), int8],) */;
  %314 = add(%284, %285) /* ty=Tensor[(11, 6, 13), uint16] */;
  %315 = %290.0;
  %316 = %307.0;
  %317 = %313.0;
  (%314, %315, meta[relay.Constant][20] /* ty=Tensor[(256), uint16] */, %303, %309, %316, %317)
}

def @func_11861() -> Tensor[(3, 15, 11), float32] {
  %318 = @func_9779() /* ty=(Tensor[(3, 15, 11), float32],) */;
  %318.0
}

def @func_9935(%var_9927: Tensor[(13, 5, 14), bool], %var_9928: Tensor[(13, 5, 14), bool]) -> Tensor[(13, 5, 14), bool] {
  %319 = cast(%var_9928, dtype="bool") /* ty=Tensor[(13, 5, 14), bool] */;
  %320 = shape_of(%var_9927, dtype="int32") /* ty=Tensor[(3), int32] */;
  %321 = cast(%var_9927, dtype="bool") /* ty=Tensor[(13, 5, 14), bool] */;
  %322 = dyn.reshape(%319, %320, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%321, %322) /* ty=Tensor[(13, 5, 14), bool] */
}

def @func_9039(%var_9033: Tensor[(312), float32]) -> (Tensor[(3, 15, 11), float32], Tensor[(13, 2, 12), float32], Tensor[(312), float32]) {
  %323 = cast(%var_9033, dtype="float32") /* ty=Tensor[(312), float32] */;
  %324 = reshape(%323, newshape=[13, 2, 12]) /* ty=Tensor[(13, 2, 12), float32] */;
  %325 = @func_6729(%324) /* ty=(Tensor[(13, 2, 12), float32], float64, Tensor[(143), float64], Tensor[(1, 13, 11), float32], Tensor[(16, 5, 6), bool], Tensor[(480), int16]) */;
  %326 = @func_7889() /* ty=Tensor[(3, 15, 11), float32] */;
  %327 = %325.0;
  (%326, %327, %var_9033)
}

def @func_1283(%var_1227: Tensor[(3, 4, 1), float64], %var_1232: Tensor[(1040), int64], %var_1256: Tensor[(66), uint16], %var_1273: Tensor[(3, 4, 1040), float64]) -> (Tensor[(5, 16, 13), int8], Tensor[(8, 130), int64], Tensor[(1040), int8], Tensor[(256, 858), bool], Tensor[(256, 66), uint16], Tensor[(3, 4, 1040), float64]) {
  %328 = cast(%var_1232, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %329 = cast(%var_1232, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %330 = reshape(%328, newshape=[5, 16, 13]) /* ty=Tensor[(5, 16, 13), int64] */;
  %331 = reshape(%329, newshape=[5, 16, 13]) /* ty=Tensor[(5, 16, 13), int64] */;
  %332 = @func_297(%330, %331) /* ty=(Tensor[(5, 16, 13), int8],) */;
  %333 = cast(meta[relay.Constant][21] /* ty=Tensor[(256, 1), uint16] */, dtype="uint16") /* ty=Tensor[(256, 1), uint16] */;
  %334 = cast(meta[relay.Constant][21] /* ty=Tensor[(256, 1), uint16] */, dtype="uint16") /* ty=Tensor[(256, 1), uint16] */;
  %335 = reshape(%333, newshape=[16, 1, 16]) /* ty=Tensor[(16, 1, 16), uint16] */;
  %336 = reshape(%334, newshape=[16, 1, 16]) /* ty=Tensor[(16, 1, 16), uint16] */;
  %337 = @func_537(%335, %336) /* ty=(Tensor[(16, ?, 16), bool], Tensor[(5, 16, 13), int8], Tensor[(8, 130), int64]) */;
  %338 = cast(%var_1256, dtype="uint16") /* ty=Tensor[(66), uint16] */;
  %339 = cast(meta[relay.Constant][22] /* ty=Tensor[(858), uint16] */, dtype="uint16") /* ty=Tensor[(858), uint16] */;
  %340 = %332.0;
  %341 = cast(%340, dtype="int64") /* ty=Tensor[(5, 16, 13), int64] */;
  %342 = reshape(%338, newshape=[11, 6, 1]) /* ty=Tensor[(11, 6, 1), uint16] */;
  %343 = reshape(%339, newshape=[11, 6, 13]) /* ty=Tensor[(11, 6, 13), uint16] */;
  %344 = reshape(%341, newshape=[1040]) /* ty=Tensor[(1040), int64] */;
  %345 = @func_581(%342, %343, %344) /* ty=(Tensor[(11, 6, 13), uint16], Tensor[(16, ?, 16), bool], Tensor[(256), uint16], Tensor[(1040), float32], Tensor[(1040), int8], Tensor[(5, 16, 13), int8], Tensor[(5, 16, 13), int8]) */;
  %346 = cast(meta[relay.Constant][22] /* ty=Tensor[(858), uint16] */, dtype="bool") /* ty=Tensor[(858), bool] */;
  %347 = cast(meta[relay.Constant][21] /* ty=Tensor[(256, 1), uint16] */, dtype="bool") /* ty=Tensor[(256, 1), bool] */;
  %348 = cast(meta[relay.Constant][21] /* ty=Tensor[(256, 1), uint16] */, dtype="uint16") /* ty=Tensor[(256, 1), uint16] */;
  %349 = cast(%var_1256, dtype="uint16") /* ty=Tensor[(66), uint16] */;
  %350 = cast(%var_1227, dtype="float64") /* ty=Tensor[(3, 4, 1), float64] */;
  %351 = atan(%350) /* ty=Tensor[(3, 4, 1), float64] */;
  %352 = cast(%351, dtype="bool") /* ty=Tensor[(3, 4, 1), bool] */;
  %353 = cast(%var_1232, dtype="bool") /* ty=Tensor[(1040), bool] */;
  %354 = logical_and(%352, %353) /* ty=Tensor[(3, 4, 1040), bool] */;
  %355 = cast(%354, dtype="float64") /* ty=Tensor[(3, 4, 1040), float64] */;
  %356 = atan(%355) /* ty=Tensor[(3, 4, 1040), float64] */;
  %357 = cast(%var_1273, dtype="float64") /* ty=Tensor[(3, 4, 1040), float64] */;
  %358 = shape_of(%356, dtype="int32") /* ty=Tensor[(3), int32] */;
  %359 = cast(%356, dtype="float64") /* ty=Tensor[(3, 4, 1040), float64] */;
  %360 = dyn.reshape(%357, %358, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %361 = %337.2;
  %362 = %345.4;
  %363 = greater_equal(%346, %347) /* ty=Tensor[(256, 858), bool] */;
  %364 = add(%348, %349) /* ty=Tensor[(256, 66), uint16] */;
  %365 = floor_mod(%359, %360) /* ty=Tensor[(3, 4, 1040), float64] */;
  (%340, %361, %362, %363, %364, %365)
}

def @func_10082() -> (Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float32], Tensor[(5, 16, 13), int8], Tensor[(1040), int64]) {
  %366 = @func_8150() /* ty=(Tensor[(3, 15, 11), float32],) */;
  %367 = %366.0;
  %368 = cast(%367, dtype="float32") /* ty=Tensor[(3, 15, 11), float32] */;
  %369 = cast(%367, dtype="float32") /* ty=Tensor[(3, 15, 11), float32] */;
  %370 = cast(meta[relay.Constant][23] /* ty=Tensor[(1040), int64] */, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %371 = cast(meta[relay.Constant][23] /* ty=Tensor[(1040), int64] */, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %372 = reshape(%370, newshape=[5, 16, 13]) /* ty=Tensor[(5, 16, 13), int64] */;
  %373 = reshape(%371, newshape=[5, 16, 13]) /* ty=Tensor[(5, 16, 13), int64] */;
  %374 = @func_297(%372, %373) /* ty=(Tensor[(5, 16, 13), int8],) */;
  %375 = cos(%368) /* ty=Tensor[(3, 15, 11), float32] */;
  %376 = acos(%369) /* ty=Tensor[(3, 15, 11), float32] */;
  %377 = %374.0;
  (%375, %376, %377, meta[relay.Constant][23] /* ty=Tensor[(1040), int64] */)
}

def @func_9758(%var_9712: uint8, %var_9726: Tensor[(1404), float64]) -> (Tensor[(256), uint16], uint8, Tensor[(2, 14, 2), float32], Tensor[(1404), float64], Tensor[(858), float32], Tensor[(1568), uint32], Tensor[(1404), float64], Tensor[(8, 14, 3), int16]) {
  %378 = @func_9141() /* ty=(Tensor[(256), uint16], Tensor[(3, 15, 11), int16], Tensor[(3, 15, 11), int64]) */;
  %379 = cast(%var_9712, dtype="uint8") /* ty=uint8 */;
  %380 = reshape(%379, newshape=[]) /* ty=uint8 */;
  %381 = @func_9337(%380) /* ty=(Tensor[(3, 15, 11), float32], Tensor[(2, 14, 2), float64], uint8) */;
  %382 = %381.1;
  %383 = cast(%382, dtype="float32") /* ty=Tensor[(2, 14, 2), float32] */;
  %384 = cast(meta[relay.Constant][24] /* ty=Tensor[(858), float32] */, dtype="float32") /* ty=Tensor[(858), float32] */;
  %385 = cast(meta[relay.Constant][25] /* ty=Tensor[(1568), uint32] */, dtype="uint32") /* ty=Tensor[(1568), uint32] */;
  %386 = cast(%var_9726, dtype="float64") /* ty=Tensor[(1404), float64] */;
  %387 = reshape(%384, newshape=[6, 11, 13]) /* ty=Tensor[(6, 11, 13), float32] */;
  %388 = reshape(%385, newshape=[56, 28]) /* ty=Tensor[(56, 28), uint32] */;
  %389 = reshape(%386, newshape=[1404]) /* ty=Tensor[(1404), float64] */;
  %390 = @func_6315(%387, %388, %389) /* ty=(Tensor[(6, 11, 13), float32], Tensor[(14, 7, 16), bool], Tensor[(56, 28), uint32], Tensor[(1404), float64]) */;
  %391 = %378.0;
  %392 = sqrt(%383) /* ty=Tensor[(2, 14, 2), float32] */;
  %393 = %390.3;
  %394 = @func_9492() /* ty=Tensor[(8, 14, 3), int16] */;
  (%391, %var_9712, %392, %393, meta[relay.Constant][24] /* ty=Tensor[(858), float32] */, meta[relay.Constant][25] /* ty=Tensor[(1568), uint32] */, %var_9726, %394)
}

def @func_3588(%var_3581: float64, %var_3582: Tensor[(1, 13, 11), float64]) -> (Tensor[(1, 13, 11), bool],) {
  %395 = cast(%var_3581, dtype="bool") /* ty=bool */;
  %396 = cast(%var_3582, dtype="bool") /* ty=Tensor[(1, 13, 11), bool] */;
  %397 = less(%395, %396) /* ty=Tensor[(1, 13, 11), bool] */;
  (%397,)
}

def @func_4005(%var_3954: uint8) -> (Tensor[(2, 14, 2), float64], Tensor[(2, 14, 2), bool]) {
  %398 = cast(%var_3954, dtype="uint8") /* ty=uint8 */;
  %399 = cast(meta[relay.Constant][26] /* ty=Tensor[(2, 14, 2), uint8] */, dtype="uint8") /* ty=Tensor[(2, 14, 2), uint8] */;
  %400 = subtract(%398, %399) /* ty=Tensor[(2, 14, 2), uint8] */;
  %401 = cast(%var_3954, dtype="float64") /* ty=float64 */;
  %402 = cast(%400, dtype="float64") /* ty=Tensor[(2, 14, 2), float64] */;
  %403 = cast(meta[relay.Constant][26] /* ty=Tensor[(2, 14, 2), uint8] */, dtype="float64") /* ty=Tensor[(2, 14, 2), float64] */;
  %404 = atan(%403) /* ty=Tensor[(2, 14, 2), float64] */;
  %405 = cast(meta[relay.Constant][26] /* ty=Tensor[(2, 14, 2), uint8] */, dtype="bool") /* ty=Tensor[(2, 14, 2), bool] */;
  %406 = shape_of(%404, dtype="int32") /* ty=Tensor[(3), int32] */;
  %407 = cast(%404, dtype="bool") /* ty=Tensor[(2, 14, 2), bool] */;
  %408 = dyn.reshape(%405, %406, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %409 = floor_divide(%401, %402) /* ty=Tensor[(2, 14, 2), float64] */;
  %410 = logical_or(%407, %408) /* ty=Tensor[(2, 14, 2), bool] */;
  (%409, %410)
}

def @func_11283(%var_11279: float64, %var_11280: Tensor[(143), float64]) -> (Tensor[(3, 15, 11), int64], Tensor[(1, 13, 11), bool], float64, Tensor[(143), float64]) {
  %411 = cast(%var_11279, dtype="float64") /* ty=float64 */;
  %412 = cast(%var_11280, dtype="float64") /* ty=Tensor[(143), float64] */;
  %413 = reshape(%411, newshape=[]) /* ty=float64 */;
  %414 = reshape(%412, newshape=[1, 13, 11]) /* ty=Tensor[(1, 13, 11), float64] */;
  %415 = @func_3588(%413, %414) /* ty=(Tensor[(1, 13, 11), bool],) */;
  %416 = @func_11136() /* ty=Tensor[(3, 15, 11), int64] */;
  %417 = %415.0;
  (%416, %417, %var_11279, %var_11280)
}

def @func_12836() -> (Tensor[(3, 15, 11), float32],) {
  %418 = @func_11728() /* ty=(Tensor[(3, 15, 11), float32],) */;
  %419 = %418.0;
  (%419,)
}

def @func_11017(%var_11010: uint8) -> (Tensor[(256), uint16], Tensor[(2, 14, 2), float64], uint8) {
  %420 = cast(%var_11010, dtype="uint8") /* ty=uint8 */;
  %421 = reshape(%420, newshape=[]) /* ty=uint8 */;
  %422 = @func_4005(%421) /* ty=(Tensor[(2, 14, 2), float64], Tensor[(2, 14, 2), bool]) */;
  %423 = @func_10030() /* ty=Tensor[(256), uint16] */;
  %424 = %422.0;
  (%423, %424, %var_11010)
}

def @func_8375() -> (Tensor[(3, 15, 11), float32],) {
  %425 = @func_8136() /* ty=Tensor[(3, 15, 11), float32] */;
  (%425,)
}

def @func_11728() -> (Tensor[(3, 15, 11), float32],) {
  %426 = @func_9692() /* ty=Tensor[(3, 15, 11), float32] */;
  (%426,)
}

def @func_12204() -> (Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float32]) {
  %427 = @func_9439() /* ty=(Tensor[(3, 15, 11), float32],) */;
  %428 = %427.0;
  %429 = cast(%428, dtype="float32") /* ty=Tensor[(3, 15, 11), float32] */;
  %430 = @func_9779() /* ty=(Tensor[(3, 15, 11), float32],) */;
  %431 = rsqrt(%429) /* ty=Tensor[(3, 15, 11), float32] */;
  %432 = %430.0;
  (%431, %432)
}

def @func_12507(%var_12505: Tensor[(520), float64]) -> (Tensor[(8, 14, 3), int16], Tensor[(4, 13, 10), float64], Tensor[(520), float64]) {
  %433 = cast(%var_12505, dtype="float64") /* ty=Tensor[(520), float64] */;
  %434 = cast(%var_12505, dtype="float64") /* ty=Tensor[(520), float64] */;
  %435 = reshape(%433, newshape=[4, 13, 10]) /* ty=Tensor[(4, 13, 10), float64] */;
  %436 = reshape(%434, newshape=[4, 13, 10]) /* ty=Tensor[(4, 13, 10), float64] */;
  %437 = @func_8297() /* ty=Tensor[(8, 14, 3), int16] */;
  %438 = @func_9287(%435, %436) /* ty=Tensor[(4, 13, 10), float64] */;
  (%437, %438, %var_12505)
}

def @func_10030() -> Tensor[(256), uint16] {
  %439 = @func_8000() /* ty=(Tensor[(3, 15, 11), float32], Tensor[(8, 130), int64], Tensor[(256), uint16]) */;
  %439.2
}

def @func_10890(%var_10876: Tensor[(4, 48), uint8], %var_10877: Tensor[(39, 3), uint16], %var_10878: Tensor[(1404), float64], %var_10879: Tensor[(70, 6), float64]) -> (Tensor[(3, 15, 11), int16], Tensor[(192), uint8], Tensor[(39, 3), uint16], Tensor[(1404), float64], Tensor[(70, 6), float64], Tensor[(4, 48), float32]) {
  %440 = @func_9526() /* ty=(Tensor[(3, 15, 11), int16], Tensor[(3, 15, 11), float32]) */;
  %441 = cast(%var_10876, dtype="uint8") /* ty=Tensor[(4, 48), uint8] */;
  %442 = cast(%var_10877, dtype="uint16") /* ty=Tensor[(39, 3), uint16] */;
  %443 = cast(%var_10878, dtype="float64") /* ty=Tensor[(1404), float64] */;
  %444 = cast(%var_10879, dtype="float64") /* ty=Tensor[(70, 6), float64] */;
  %445 = reshape(%441, newshape=[192]) /* ty=Tensor[(192), uint8] */;
  %446 = reshape(%442, newshape=[117]) /* ty=Tensor[(117), uint16] */;
  %447 = reshape(%443, newshape=[1404]) /* ty=Tensor[(1404), float64] */;
  %448 = reshape(%444, newshape=[5, 84]) /* ty=Tensor[(5, 84), float64] */;
  %449 = @func_10466(%445, %446, %447, %448) /* ty=(Tensor[(3, 15, 11), float32], Tensor[(4, 6, 8), bool], Tensor[(192), uint8], Tensor[(1040), int64], Tensor[(1755), float64], Tensor[(11, 6), uint16], Tensor[(39), uint16], Tensor[(117), uint16], Tensor[(1404), float64], Tensor[(5, 84), float64]) */;
  %450 = cast(%var_10876, dtype="float32") /* ty=Tensor[(4, 48), float32] */;
  %451 = %440.0;
  %452 = %449.2;
  %453 = sinh(%450) /* ty=Tensor[(4, 48), float32] */;
  (%451, %452, %var_10877, %var_10878, %var_10879, %453)
}

def @func_9526() -> (Tensor[(3, 15, 11), int16], Tensor[(3, 15, 11), float32]) {
  %454 = @func_9141() /* ty=(Tensor[(256), uint16], Tensor[(3, 15, 11), int16], Tensor[(3, 15, 11), int64]) */;
  %455 = %454.1;
  %456 = @func_8407() /* ty=Tensor[(3, 15, 11), float32] */;
  (%455, %456)
}

def @func_10373() -> (Tensor[(8, 14, 3), int16],) {
  %457 = @func_9492() /* ty=Tensor[(8, 14, 3), int16] */;
  (%457,)
}

def @func_3753(%var_3702: Tensor[(12, 9, 1), float32], %var_3725: Tensor[(192), uint8]) -> (Tensor[(16, 5, 6), bool], Tensor[(120, 4), int16], Tensor[(4, 6, 8), bool], Tensor[(192), uint8], Tensor[(12, 9, ?), int8], Tensor[(12, 9, 1), float64]) {
  %458 = cast(meta[relay.Constant][27] /* ty=Tensor[(120, 4), int16] */, dtype="int16") /* ty=Tensor[(120, 4), int16] */;
  %459 = reshape(%458, newshape=[16, 5, 6]) /* ty=Tensor[(16, 5, 6), int16] */;
  %460 = @func_1118(%459) /* ty=(Tensor[(16, 5, 6), bool],) */;
  %461 = cast(%var_3725, dtype="uint8") /* ty=Tensor[(192), uint8] */;
  %462 = reshape(%461, newshape=[4, 6, 8]) /* ty=Tensor[(4, 6, 8), uint8] */;
  %463 = cast(%var_3702, dtype="float32") /* ty=Tensor[(12, 9, 1), float32] */;
  %464 = tan(%463) /* ty=Tensor[(12, 9, 1), float32] */;
  %465 = cast(%var_3702, dtype="int8") /* ty=Tensor[(12, 9, 1), int8] */;
  %466 = shape_of(%464, dtype="int32") /* ty=Tensor[(3), int32] */;
  %467 = cast(%464, dtype="int8") /* ty=Tensor[(12, 9, 1), int8] */;
  %468 = dyn.reshape(%465, %466, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %469 = cast(%464, dtype="float64") /* ty=Tensor[(12, 9, 1), float64] */;
  %470 = %460.0;
  %471 = @func_1352(%462) /* ty=Tensor[(4, 6, 8), bool] */;
  %472 = bitwise_or(%467, %468) /* ty=Tensor[(12, 9, ?), int8] */;
  %473 = cos(%469) /* ty=Tensor[(12, 9, 1), float64] */;
  (%470, meta[relay.Constant][27] /* ty=Tensor[(120, 4), int16] */, %471, %var_3725, %472, %473)
}

def @func_8215(%var_8202: Tensor[(420), float64]) -> (Tensor[(3, 15, 11), float32], Tensor[(14, 3, 10), float64], Tensor[(420), float64]) {
  %474 = cast(%var_8202, dtype="float64") /* ty=Tensor[(420), float64] */;
  %475 = reshape(%474, newshape=[5, 84]) /* ty=Tensor[(5, 84), float64] */;
  %476 = @func_8109(%475) /* ty=(Tensor[(3, 15, 11), float32], Tensor[(14, 3, 10), float64], Tensor[(5, 84), float64]) */;
  %477 = @func_7889() /* ty=Tensor[(3, 15, 11), float32] */;
  %478 = %476.1;
  (%477, %478, %var_8202)
}

def @func_8898(%var_8839: Tensor[(13, 15, 9), float64], %var_8840: Tensor[(13, 15, 9), float64], %var_8858: Tensor[(66), uint16], %var_8867: Tensor[(39), uint16], %var_8868: Tensor[(117), uint16], %var_8869: Tensor[(1404), float64], %var_8870: Tensor[(420), float64]) -> (Tensor[(13, 15, 9), float64], Tensor[(1040), int64], Tensor[(1120), float32], float32, Tensor[(66), uint16], Tensor[(13, 3, 3), uint32], Tensor[(39), uint16], Tensor[(117), uint16], Tensor[(1404), float64], Tensor[(420), float64]) {
  %479 = cast(%var_8840, dtype="float64") /* ty=Tensor[(13, 15, 9), float64] */;
  %480 = shape_of(%var_8839, dtype="int32") /* ty=Tensor[(3), int32] */;
  %481 = cast(%var_8839, dtype="float64") /* ty=Tensor[(13, 15, 9), float64] */;
  %482 = dyn.reshape(%479, %480, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %483 = cast(meta[relay.Constant][28] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %484 = cast(-7.89775f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %485 = cast(%var_8858, dtype="uint16") /* ty=Tensor[(66), uint16] */;
  %486 = reshape(%483, newshape=[16, 7, 10]) /* ty=Tensor[(16, 7, 10), float32] */;
  %487 = reshape(%484, newshape=[]) /* ty=float32 */;
  %488 = reshape(%485, newshape=[1, 66]) /* ty=Tensor[(1, 66), uint16] */;
  %489 = @func_3642(%486, %487, %488) /* ty=(Tensor[(16, 7, 10), int16], Tensor[(16, 7, 10), float64], Tensor[(5, 16, 13), int8], Tensor[(8, 130), int64], Tensor[(1040), int64], float32, Tensor[(1, 66), uint16]) */;
  %490 = cast(%var_8867, dtype="uint16") /* ty=Tensor[(39), uint16] */;
  %491 = cast(%var_8868, dtype="uint16") /* ty=Tensor[(117), uint16] */;
  %492 = cast(%var_8869, dtype="float64") /* ty=Tensor[(1404), float64] */;
  %493 = cast(%var_8870, dtype="float64") /* ty=Tensor[(420), float64] */;
  %494 = reshape(%490, newshape=[13, 3, 1]) /* ty=Tensor[(13, 3, 1), uint16] */;
  %495 = reshape(%491, newshape=[13, 3, 3]) /* ty=Tensor[(13, 3, 3), uint16] */;
  %496 = reshape(%492, newshape=[1404]) /* ty=Tensor[(1404), float64] */;
  %497 = reshape(%493, newshape=[5, 84]) /* ty=Tensor[(5, 84), float64] */;
  %498 = @func_7345(%494, %495, %496, %497) /* ty=(Tensor[(13, 3, 3), bool], Tensor[(13, 3, 3), uint32], Tensor[(1568), uint32], Tensor[(14, 3, 10), float64], Tensor[(5, 84), float64], Tensor[(1404), bool], Tensor[(13, 3, 1404), float32]) */;
  %499 = mod(%481, %482) /* ty=Tensor[(13, 15, 9), float64] */;
  %500 = %489.4;
  %501 = %498.1;
  (%499, %500, meta[relay.Constant][28] /* ty=Tensor[(1120), float32] */, -7.89775f /* ty=float32 */, %var_8858, %501, %var_8867, %var_8868, %var_8869, %var_8870)
}

def @func_4219(%var_4210: Tensor[(14, 7, 16), uint32], %var_4217: Tensor[(1404), float64]) -> (Tensor[(14, 7, 16), bool], Tensor[(9, 12, 13), float64], Tensor[(1404), float64]) {
  %502 = cast(meta[relay.Constant][29] /* ty=uint32 */, dtype="bool") /* ty=bool */;
  %503 = cast(%var_4210, dtype="bool") /* ty=Tensor[(14, 7, 16), bool] */;
  %504 = cast(%var_4217, dtype="float64") /* ty=Tensor[(1404), float64] */;
  %505 = reshape(%504, newshape=[9, 12, 13]) /* ty=Tensor[(9, 12, 13), float64] */;
  %506 = @func_2871(%505) /* ty=(Tensor[(9, 12, 13), float64],) */;
  %507 = less_equal(%502, %503) /* ty=Tensor[(14, 7, 16), bool] */;
  %508 = %506.0;
  (%507, %508, %var_4217)
}

def @func_12405() -> (Tensor[(3, 15, 11), float32],) {
  %509 = @func_8150() /* ty=(Tensor[(3, 15, 11), float32],) */;
  %510 = %509.0;
  (%510,)
}

def @func_8109(%var_8101: Tensor[(5, 84), float64]) -> (Tensor[(3, 15, 11), float32], Tensor[(14, 3, 10), float64], Tensor[(5, 84), float64]) {
  %511 = cast(%var_8101, dtype="float64") /* ty=Tensor[(5, 84), float64] */;
  %512 = reshape(%511, newshape=[14, 3, 10]) /* ty=Tensor[(14, 3, 10), float64] */;
  %513 = @func_5003(%512) /* ty=(Tensor[(14, 3, 10), float64],) */;
  %514 = @func_7889() /* ty=Tensor[(3, 15, 11), float32] */;
  %515 = %513.0;
  (%514, %515, %var_8101)
}

def @func_12737() -> (Tensor[(3, 15, 11), float32], Tensor[(5, 16, 13), int8], Tensor[(256), uint16]) {
  %516 = cast(meta[relay.Constant][30] /* ty=Tensor[(256), uint16] */, dtype="uint16") /* ty=Tensor[(256), uint16] */;
  %517 = cast(meta[relay.Constant][30] /* ty=Tensor[(256), uint16] */, dtype="uint16") /* ty=Tensor[(256), uint16] */;
  %518 = reshape(%516, newshape=[16, 1, 16]) /* ty=Tensor[(16, 1, 16), uint16] */;
  %519 = reshape(%517, newshape=[16, 1, 16]) /* ty=Tensor[(16, 1, 16), uint16] */;
  %520 = @func_537(%518, %519) /* ty=(Tensor[(16, ?, 16), bool], Tensor[(5, 16, 13), int8], Tensor[(8, 130), int64]) */;
  %521 = @func_8407() /* ty=Tensor[(3, 15, 11), float32] */;
  %522 = %520.1;
  (%521, %522, meta[relay.Constant][30] /* ty=Tensor[(256), uint16] */)
}

def @func_8358(%var_8333: Tensor[(16, 5, 6), uint64], %var_8334: Tensor[(16, 5, 6), uint64]) -> Tensor[(16, 5, 6), int32] {
  %523 = cast(%var_8334, dtype="bool") /* ty=Tensor[(16, 5, 6), bool] */;
  %524 = shape_of(%var_8333, dtype="int32") /* ty=Tensor[(3), int32] */;
  %525 = cast(%var_8333, dtype="bool") /* ty=Tensor[(16, 5, 6), bool] */;
  %526 = dyn.reshape(%523, %524, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %527 = equal(%525, %526) /* ty=Tensor[(16, 5, 6), bool] */;
  %528 = cast(%527, dtype="int32") /* ty=Tensor[(16, 5, 6), int32] */;
  %529 = shape_of(%var_8334, dtype="int32") /* ty=Tensor[(3), int32] */;
  %530 = cast(%var_8334, dtype="int32") /* ty=Tensor[(16, 5, 6), int32] */;
  %531 = dyn.reshape(%528, %529, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  left_shift(%530, %531) /* ty=Tensor[(16, 5, 6), int32] */
}

def @func_11136() -> Tensor[(3, 15, 11), int64] {
  %532 = @func_9141() /* ty=(Tensor[(256), uint16], Tensor[(3, 15, 11), int16], Tensor[(3, 15, 11), int64]) */;
  %532.2
}

def @func_10776() -> (Tensor[(8, 14, 3), float32], Tensor[(8, 14, 3), float32]) {
  %533 = @func_10373() /* ty=(Tensor[(8, 14, 3), int16],) */;
  %534 = %533.0;
  %535 = cast(%534, dtype="float32") /* ty=Tensor[(8, 14, 3), float32] */;
  %536 = cast(%534, dtype="float32") /* ty=Tensor[(8, 14, 3), float32] */;
  %537 = atan(%535) /* ty=Tensor[(8, 14, 3), float32] */;
  %538 = sinh(%536) /* ty=Tensor[(8, 14, 3), float32] */;
  (%537, %538)
}

def @func_12328() -> Tensor[(420), float64] {
  %539 = @func_11361() /* ty=(Tensor[(14, 3, 10), float64], Tensor[(420), float64], Tensor[(8, 14, 3), bool]) */;
  %539.1
}

def @func_899(%var_892: Tensor[(5, 10, 14), float32], %var_893: Tensor[(5, 10, 14), float32]) -> (Tensor[(5, 10, 14), bool],) {
  %540 = cast(%var_893, dtype="bool") /* ty=Tensor[(5, 10, 14), bool] */;
  %541 = shape_of(%var_892, dtype="int32") /* ty=Tensor[(3), int32] */;
  %542 = cast(%var_892, dtype="bool") /* ty=Tensor[(5, 10, 14), bool] */;
  %543 = dyn.reshape(%540, %541, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %544 = greater_equal(%542, %543) /* ty=Tensor[(5, 10, 14), bool] */;
  (%544,)
}

def @func_6487(%var_6458: Tensor[(1404), float64], %var_6477: Tensor[(480), int16]) -> (Tensor[(1404), float64], Tensor[(13, 8, 12), uint8], Tensor[(16, 5, 6), bool], Tensor[(480), int16], Tensor[(9, 12, 13), float32]) {
  %545 = cast(meta[relay.Constant][31] /* ty=Tensor[(13, 8, 12), float64] */, dtype="float64") /* ty=Tensor[(13, 8, 12), float64] */;
  %546 = asinh(%545) /* ty=Tensor[(13, 8, 12), float64] */;
  %547 = cast(meta[relay.Constant][31] /* ty=Tensor[(13, 8, 12), float64] */, dtype="uint8") /* ty=Tensor[(13, 8, 12), uint8] */;
  %548 = shape_of(%546, dtype="int32") /* ty=Tensor[(3), int32] */;
  %549 = cast(%546, dtype="uint8") /* ty=Tensor[(13, 8, 12), uint8] */;
  %550 = dyn.reshape(%547, %548, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %551 = cast(%var_6477, dtype="int16") /* ty=Tensor[(480), int16] */;
  %552 = reshape(%551, newshape=[16, 5, 6]) /* ty=Tensor[(16, 5, 6), int16] */;
  %553 = @func_1118(%552) /* ty=(Tensor[(16, 5, 6), bool],) */;
  %554 = cast(%var_6458, dtype="float64") /* ty=Tensor[(1404), float64] */;
  %555 = reshape(%554, newshape=[9, 12, 13]) /* ty=Tensor[(9, 12, 13), float64] */;
  %556 = @func_2871(%555) /* ty=(Tensor[(9, 12, 13), float64],) */;
  %557 = %556.0;
  %558 = cast(%557, dtype="float32") /* ty=Tensor[(9, 12, 13), float32] */;
  %559 = bitwise_and(%549, %550) /* ty=Tensor[(13, 8, 12), uint8] */;
  %560 = %553.0;
  %561 = atan(%558) /* ty=Tensor[(9, 12, 13), float32] */;
  (%var_6458, %559, %560, %var_6477, %561)
}

def @func_8742(%var_8722: Tensor[(14, 15, 3), float32]) -> Tensor[(14, 15, 3), float32] {
  %562 = cast(%var_8722, dtype="float32") /* ty=Tensor[(14, 15, 3), float32] */;
  sqrt(%562) /* ty=Tensor[(14, 15, 3), float32] */
}

def @func_10000(%var_9964: Tensor[(630), float32]) -> (Tensor[(256), uint16], Tensor[(14, 7, 16), bool], Tensor[(1568), uint32], Tensor[(9, 156), float64], Tensor[(14, 15, 3), float32], Tensor[(630), float32]) {
  %563 = cast(meta[relay.Constant][32] /* ty=Tensor[(1568), uint32] */, dtype="uint32") /* ty=Tensor[(1568), uint32] */;
  %564 = cast(meta[relay.Constant][33] /* ty=Tensor[(9, 156), float64] */, dtype="float64") /* ty=Tensor[(9, 156), float64] */;
  %565 = reshape(%563, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), uint32] */;
  %566 = reshape(%564, newshape=[1404]) /* ty=Tensor[(1404), float64] */;
  %567 = @func_4219(%565, %566) /* ty=(Tensor[(14, 7, 16), bool], Tensor[(9, 12, 13), float64], Tensor[(1404), float64]) */;
  %568 = cast(%var_9964, dtype="float32") /* ty=Tensor[(630), float32] */;
  %569 = reshape(%568, newshape=[14, 15, 3]) /* ty=Tensor[(14, 15, 3), float32] */;
  %570 = @func_9366() /* ty=Tensor[(256), uint16] */;
  %571 = %567.0;
  %572 = @func_8742(%569) /* ty=Tensor[(14, 15, 3), float32] */;
  (%570, %571, meta[relay.Constant][32] /* ty=Tensor[(1568), uint32] */, meta[relay.Constant][33] /* ty=Tensor[(9, 156), float64] */, %572, %var_9964)
}

def @func_9692() -> Tensor[(3, 15, 11), float32] {
  @func_8407() /* ty=Tensor[(3, 15, 11), float32] */
}

def @func_9305(%var_9302: Tensor[(4, 11, 15), float64]) -> Tensor[(4, 11, 15), float64] {
  %573 = cast(%var_9302, dtype="float64") /* ty=Tensor[(4, 11, 15), float64] */;
  cos(%573) /* ty=Tensor[(4, 11, 15), float64] */
}

def @func_12697(%var_12536: Tensor[(192), uint8], %var_12585: Tensor[(1404), float64]) -> (Tensor[(3, 15, 11), float32], Tensor[(16, 1, 15), float32], Tensor[(24, 10), float32], Tensor[(4, 6, 8), bool], Tensor[(192), uint8], Tensor[(7, 4, 4), int8], Tensor[(1568), uint32], Tensor[(1404), float64], Tensor[(4, 6, 8), bool], Tensor[(117), uint16], Tensor[(420), float64], Tensor[(14, 7, 16), int64]) {
  %574 = cast(meta[relay.Constant][34] /* ty=Tensor[(24, 10), float32] */, dtype="float32") /* ty=Tensor[(24, 10), float32] */;
  %575 = reshape(%574, newshape=[16, 1, 15]) /* ty=Tensor[(16, 1, 15), float32] */;
  %576 = @func_11556(%575) /* ty=(Tensor[(16, 1, 15), float32],) */;
  %577 = cast(%var_12536, dtype="uint8") /* ty=Tensor[(192), uint8] */;
  %578 = reshape(%577, newshape=[4, 6, 8]) /* ty=Tensor[(4, 6, 8), uint8] */;
  %579 = cast(%var_12536, dtype="uint8") /* ty=Tensor[(192), uint8] */;
  %580 = cast(meta[relay.Constant][36] /* ty=Tensor[(117), uint16] */, dtype="uint16") /* ty=Tensor[(117), uint16] */;
  %581 = cast(%var_12585, dtype="float64") /* ty=Tensor[(1404), float64] */;
  %582 = cast(meta[relay.Constant][37] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %583 = reshape(%579, newshape=[192]) /* ty=Tensor[(192), uint8] */;
  %584 = reshape(%580, newshape=[117]) /* ty=Tensor[(117), uint16] */;
  %585 = reshape(%581, newshape=[1404]) /* ty=Tensor[(1404), float64] */;
  %586 = reshape(%582, newshape=[5, 84]) /* ty=Tensor[(5, 84), float64] */;
  %587 = @func_10466(%583, %584, %585, %586) /* ty=(Tensor[(3, 15, 11), float32], Tensor[(4, 6, 8), bool], Tensor[(192), uint8], Tensor[(1040), int64], Tensor[(1755), float64], Tensor[(11, 6), uint16], Tensor[(39), uint16], Tensor[(117), uint16], Tensor[(1404), float64], Tensor[(5, 84), float64]) */;
  %588 = cast(meta[relay.Constant][35] /* ty=Tensor[(1568), uint32] */, dtype="uint32") /* ty=Tensor[(1568), uint32] */;
  %589 = cast(%var_12585, dtype="float64") /* ty=Tensor[(1404), float64] */;
  %590 = reshape(%588, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), uint32] */;
  %591 = reshape(%589, newshape=[1404]) /* ty=Tensor[(1404), float64] */;
  %592 = @func_4219(%590, %591) /* ty=(Tensor[(14, 7, 16), bool], Tensor[(9, 12, 13), float64], Tensor[(1404), float64]) */;
  %593 = %592.0;
  %594 = cast(%593, dtype="float32") /* ty=Tensor[(14, 7, 16), float32] */;
  %595 = acos(%594) /* ty=Tensor[(14, 7, 16), float32] */;
  %596 = cast(meta[relay.Constant][38] /* ty=Tensor[(14, 7, 16), float32] */, dtype="int64") /* ty=Tensor[(14, 7, 16), int64] */;
  %597 = shape_of(%595, dtype="int32") /* ty=Tensor[(3), int32] */;
  %598 = cast(%595, dtype="int64") /* ty=Tensor[(14, 7, 16), int64] */;
  %599 = dyn.reshape(%596, %597, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %600 = @func_8136() /* ty=Tensor[(3, 15, 11), float32] */;
  %601 = %576.0;
  %602 = @func_1352(%578) /* ty=Tensor[(4, 6, 8), bool] */;
  %603 = @func_9600() /* ty=Tensor[(7, 4, 4), int8] */;
  %604 = %587.1;
  %605 = multiply(%598, %599) /* ty=Tensor[(14, 7, 16), int64] */;
  (%600, %601, meta[relay.Constant][34] /* ty=Tensor[(24, 10), float32] */, %602, %var_12536, %603, meta[relay.Constant][35] /* ty=Tensor[(1568), uint32] */, %var_12585, %604, meta[relay.Constant][36] /* ty=Tensor[(117), uint16] */, meta[relay.Constant][37] /* ty=Tensor[(420), float64] */, %605)
}

def @func_10646(%var_10642: Tensor[(351), float32]) -> (Tensor[(8, 14, 3), float64], Tensor[(8, 14, 3), bool], Tensor[(16, 8, 12), float64], Tensor[(351), float32]) {
  %606 = @func_8297() /* ty=Tensor[(8, 14, 3), int16] */;
  %607 = cast(%606, dtype="float64") /* ty=Tensor[(8, 14, 3), float64] */;
  %608 = log2(%607) /* ty=Tensor[(8, 14, 3), float64] */;
  %609 = cast(%606, dtype="float64") /* ty=Tensor[(8, 14, 3), float64] */;
  %610 = shape_of(%608, dtype="int32") /* ty=Tensor[(3), int32] */;
  %611 = cast(%608, dtype="float64") /* ty=Tensor[(8, 14, 3), float64] */;
  %612 = dyn.reshape(%609, %610, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %613 = cast(%608, dtype="bool") /* ty=Tensor[(8, 14, 3), bool] */;
  %614 = shape_of(%606, dtype="int32") /* ty=Tensor[(3), int32] */;
  %615 = cast(%606, dtype="bool") /* ty=Tensor[(8, 14, 3), bool] */;
  %616 = dyn.reshape(%613, %614, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %617 = cast(%var_10642, dtype="float32") /* ty=Tensor[(351), float32] */;
  %618 = cast(%var_10642, dtype="float32") /* ty=Tensor[(351), float32] */;
  %619 = cast(%var_10642, dtype="float32") /* ty=Tensor[(351), float32] */;
  %620 = reshape(%617, newshape=[9, 13, 3]) /* ty=Tensor[(9, 13, 3), float32] */;
  %621 = reshape(%618, newshape=[9, 13, 3]) /* ty=Tensor[(9, 13, 3), float32] */;
  %622 = reshape(%619, newshape=[9, 13, 3]) /* ty=Tensor[(9, 13, 3), float32] */;
  %623 = @func_5819(%620, %621, %622) /* ty=(Tensor[(9, 13, 3), float32], Tensor[(16, 8, 12), float64], Tensor[(1536), float64], Tensor[(9, 13, 3), int16], Tensor[(9, 12, 13), float64], Tensor[(3, 468), float64]) */;
  %624 = floor_mod(%611, %612) /* ty=Tensor[(8, 14, 3), float64] */;
  %625 = less(%615, %616) /* ty=Tensor[(8, 14, 3), bool] */;
  %626 = %623.1;
  (%624, %625, %626, %var_10642)
}

def @func_8789() -> (Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float64]) {
  %627 = @func_8407() /* ty=Tensor[(3, 15, 11), float32] */;
  %628 = cast(%627, dtype="float64") /* ty=Tensor[(3, 15, 11), float64] */;
  %629 = @func_7889() /* ty=Tensor[(3, 15, 11), float32] */;
  %630 = tan(%628) /* ty=Tensor[(3, 15, 11), float64] */;
  (%629, %630)
}

def @func_11534(%var_11526: Tensor[(16, 9, 14), int16]) -> (Tensor[(16, 9, 14), int16],) {
  %631 = cast(meta[relay.Constant][39] /* ty=Tensor[(16, 9, 14), int16] */, dtype="int16") /* ty=Tensor[(16, 9, 14), int16] */;
  %632 = shape_of(%var_11526, dtype="int32") /* ty=Tensor[(3), int32] */;
  %633 = cast(%var_11526, dtype="int16") /* ty=Tensor[(16, 9, 14), int16] */;
  %634 = dyn.reshape(%631, %632, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %635 = right_shift(%633, %634) /* ty=Tensor[(16, 9, 14), int16] */;
  (%635,)
}

def @func_11595() -> (Tensor[(3, 15, 11), float32],) {
  %636 = @func_8150() /* ty=(Tensor[(3, 15, 11), float32],) */;
  %637 = %636.0;
  (%637,)
}

def @func_2215(%var_2195: Tensor[(16, 6, 7), bool], %var_2196: Tensor[(16, 6, 7), bool], %var_2208: Tensor[(6, 2), float64], %var_2210: Tensor[(66, 1), uint16], %var_2211: Tensor[(12480), float64]) -> (Tensor[(16, 6, 7), bool], Tensor[(8, 130), int64], Tensor[(6, 2), float64], Tensor[(1040), int64], Tensor[(66, 1), uint16], Tensor[(12480), float64], Tensor[(3, 4, 1040), float64]) {
  %638 = cast(%var_2196, dtype="bool") /* ty=Tensor[(16, 6, 7), bool] */;
  %639 = shape_of(%var_2195, dtype="int32") /* ty=Tensor[(3), int32] */;
  %640 = cast(%var_2195, dtype="bool") /* ty=Tensor[(16, 6, 7), bool] */;
  %641 = dyn.reshape(%638, %639, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %642 = cast(%var_2208, dtype="float64") /* ty=Tensor[(6, 2), float64] */;
  %643 = cast(meta[relay.Constant][40] /* ty=Tensor[(1040), int64] */, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %644 = cast(%var_2210, dtype="uint16") /* ty=Tensor[(66, 1), uint16] */;
  %645 = cast(%var_2211, dtype="float64") /* ty=Tensor[(12480), float64] */;
  %646 = reshape(%642, newshape=[3, 4, 1]) /* ty=Tensor[(3, 4, 1), float64] */;
  %647 = reshape(%643, newshape=[1040]) /* ty=Tensor[(1040), int64] */;
  %648 = reshape(%644, newshape=[66]) /* ty=Tensor[(66), uint16] */;
  %649 = reshape(%645, newshape=[3, 4, 1040]) /* ty=Tensor[(3, 4, 1040), float64] */;
  %650 = @func_1283(%646, %647, %648, %649) /* ty=(Tensor[(5, 16, 13), int8], Tensor[(8, 130), int64], Tensor[(1040), int8], Tensor[(256, 858), bool], Tensor[(256, 66), uint16], Tensor[(3, 4, 1040), float64]) */;
  %651 = cast(%var_2208, dtype="float64") /* ty=Tensor[(6, 2), float64] */;
  %652 = cast(meta[relay.Constant][40] /* ty=Tensor[(1040), int64] */, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %653 = cast(%var_2210, dtype="uint16") /* ty=Tensor[(66, 1), uint16] */;
  %654 = cast(%var_2211, dtype="float64") /* ty=Tensor[(12480), float64] */;
  %655 = reshape(%651, newshape=[3, 4, 1]) /* ty=Tensor[(3, 4, 1), float64] */;
  %656 = reshape(%652, newshape=[1040]) /* ty=Tensor[(1040), int64] */;
  %657 = reshape(%653, newshape=[66]) /* ty=Tensor[(66), uint16] */;
  %658 = reshape(%654, newshape=[3, 4, 1040]) /* ty=Tensor[(3, 4, 1040), float64] */;
  %659 = @func_1283(%655, %656, %657, %658) /* ty=(Tensor[(5, 16, 13), int8], Tensor[(8, 130), int64], Tensor[(1040), int8], Tensor[(256, 858), bool], Tensor[(256, 66), uint16], Tensor[(3, 4, 1040), float64]) */;
  %660 = logical_or(%640, %641) /* ty=Tensor[(16, 6, 7), bool] */;
  %661 = %650.1;
  %662 = %659.5;
  (%660, %661, %var_2208, meta[relay.Constant][40] /* ty=Tensor[(1040), int64] */, %var_2210, %var_2211, %662)
}

def @func_5003(%var_4989: Tensor[(14, 3, 10), float64]) -> (Tensor[(14, 3, 10), float64],) {
  %663 = cast(meta[relay.Constant][41] /* ty=Tensor[(1, 1, 10), float64] */, dtype="float64") /* ty=Tensor[(1, 1, 10), float64] */;
  %664 = cast(%var_4989, dtype="float64") /* ty=Tensor[(14, 3, 10), float64] */;
  %665 = mod(%663, %664) /* ty=Tensor[(14, 3, 10), float64] */;
  %666 = cast(%665, dtype="float64") /* ty=Tensor[(14, 3, 10), float64] */;
  %667 = cast(meta[relay.Constant][41] /* ty=Tensor[(1, 1, 10), float64] */, dtype="float64") /* ty=Tensor[(1, 1, 10), float64] */;
  %668 = floor_mod(%666, %667) /* ty=Tensor[(14, 3, 10), float64] */;
  (%668,)
}

def @func_12033() -> (Tensor[(3, 15, 11), int64],) {
  %669 = @func_11136() /* ty=Tensor[(3, 15, 11), int64] */;
  (%669,)
}

def @func_297(%var_281: Tensor[(5, 16, 13), int64], %var_282: Tensor[(5, 16, 13), int64]) -> (Tensor[(5, 16, 13), int8],) {
  %670 = cast(%var_282, dtype="bool") /* ty=Tensor[(5, 16, 13), bool] */;
  %671 = shape_of(%var_281, dtype="int32") /* ty=Tensor[(3), int32] */;
  %672 = cast(%var_281, dtype="bool") /* ty=Tensor[(5, 16, 13), bool] */;
  %673 = dyn.reshape(%670, %671, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %674 = equal(%672, %673) /* ty=Tensor[(5, 16, 13), bool] */;
  %675 = cast(%674, dtype="int8") /* ty=Tensor[(5, 16, 13), int8] */;
  %676 = shape_of(%var_282, dtype="int32") /* ty=Tensor[(3), int32] */;
  %677 = cast(%var_282, dtype="int8") /* ty=Tensor[(5, 16, 13), int8] */;
  %678 = dyn.reshape(%675, %676, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %679 = left_shift(%677, %678) /* ty=Tensor[(5, 16, 13), int8] */;
  (%679,)
}

def @func_11979() -> Tensor[(8, 14, 3), bool] {
  %680 = @func_11361() /* ty=(Tensor[(14, 3, 10), float64], Tensor[(420), float64], Tensor[(8, 14, 3), bool]) */;
  %680.2
}

def @func_9779() -> (Tensor[(3, 15, 11), float32],) {
  %681 = @func_9439() /* ty=(Tensor[(3, 15, 11), float32],) */;
  %682 = %681.0;
  (%682,)
}

def @func_6315(%var_6295: Tensor[(6, 11, 13), float32], %var_6307: Tensor[(56, 28), uint32], %var_6308: Tensor[(1404), float64]) -> (Tensor[(6, 11, 13), float32], Tensor[(14, 7, 16), bool], Tensor[(56, 28), uint32], Tensor[(1404), float64]) {
  %683 = cast(%var_6295, dtype="float32") /* ty=Tensor[(6, 11, 13), float32] */;
  %684 = cast(%var_6307, dtype="uint32") /* ty=Tensor[(56, 28), uint32] */;
  %685 = cast(%var_6308, dtype="float64") /* ty=Tensor[(1404), float64] */;
  %686 = reshape(%684, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), uint32] */;
  %687 = reshape(%685, newshape=[1404]) /* ty=Tensor[(1404), float64] */;
  %688 = @func_4219(%686, %687) /* ty=(Tensor[(14, 7, 16), bool], Tensor[(9, 12, 13), float64], Tensor[(1404), float64]) */;
  %689 = sin(%683) /* ty=Tensor[(6, 11, 13), float32] */;
  %690 = %688.0;
  (%689, %690, %var_6307, %var_6308)
}

def @func_10843(%var_10825: Tensor[(1, 192), uint8], %var_10826: Tensor[(117), uint16]) -> (Tensor[(7, 4, 4), int8], Tensor[(16, 5, 6), bool], Tensor[(480), int16], Tensor[(8, 14, 3), float32], Tensor[(11, 6), uint16], Tensor[(1, 192), uint8], Tensor[(117), uint16], Tensor[(1404), float64], Tensor[(420), float64]) {
  %691 = @func_10202() /* ty=(Tensor[(3, 15, 11), float32], Tensor[(7, 4, 4), int8]) */;
  %692 = cast(meta[relay.Constant][42] /* ty=Tensor[(480), int16] */, dtype="int16") /* ty=Tensor[(480), int16] */;
  %693 = reshape(%692, newshape=[16, 5, 6]) /* ty=Tensor[(16, 5, 6), int16] */;
  %694 = @func_1118(%693) /* ty=(Tensor[(16, 5, 6), bool],) */;
  %695 = @func_10373() /* ty=(Tensor[(8, 14, 3), int16],) */;
  %696 = %695.0;
  %697 = cast(%696, dtype="float32") /* ty=Tensor[(8, 14, 3), float32] */;
  %698 = cast(%var_10825, dtype="uint8") /* ty=Tensor[(1, 192), uint8] */;
  %699 = cast(%var_10826, dtype="uint16") /* ty=Tensor[(117), uint16] */;
  %700 = cast(meta[relay.Constant][43] /* ty=Tensor[(1404), float64] */, dtype="float64") /* ty=Tensor[(1404), float64] */;
  %701 = cast(meta[relay.Constant][44] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %702 = reshape(%698, newshape=[192]) /* ty=Tensor[(192), uint8] */;
  %703 = reshape(%699, newshape=[117]) /* ty=Tensor[(117), uint16] */;
  %704 = reshape(%700, newshape=[1404]) /* ty=Tensor[(1404), float64] */;
  %705 = reshape(%701, newshape=[5, 84]) /* ty=Tensor[(5, 84), float64] */;
  %706 = @func_10466(%702, %703, %704, %705) /* ty=(Tensor[(3, 15, 11), float32], Tensor[(4, 6, 8), bool], Tensor[(192), uint8], Tensor[(1040), int64], Tensor[(1755), float64], Tensor[(11, 6), uint16], Tensor[(39), uint16], Tensor[(117), uint16], Tensor[(1404), float64], Tensor[(5, 84), float64]) */;
  %707 = %691.1;
  %708 = %694.0;
  %709 = log10(%697) /* ty=Tensor[(8, 14, 3), float32] */;
  %710 = %706.5;
  (%707, %708, meta[relay.Constant][42] /* ty=Tensor[(480), int16] */, %709, %710, %var_10825, %var_10826, meta[relay.Constant][43] /* ty=Tensor[(1404), float64] */, meta[relay.Constant][44] /* ty=Tensor[(420), float64] */)
}

def @func_2264(%var_2261: Tensor[(16, 8, 12), float64]) -> (Tensor[(16, 8, 12), float64],) {
  %711 = cast(%var_2261, dtype="float64") /* ty=Tensor[(16, 8, 12), float64] */;
  %712 = sinh(%711) /* ty=Tensor[(16, 8, 12), float64] */;
  (%712,)
}

def @func_13016() -> Tensor[(3, 15, 11), int64] {
  %713 = @func_12033() /* ty=(Tensor[(3, 15, 11), int64],) */;
  %713.0
}

def @func_6040(%var_6034: Tensor[(10, 11, 13), int16], %var_6035: Tensor[(10, 11, 13), int16]) -> Tensor[(10, 11, 13), bool] {
  %714 = cast(%var_6035, dtype="bool") /* ty=Tensor[(10, 11, 13), bool] */;
  %715 = shape_of(%var_6034, dtype="int32") /* ty=Tensor[(3), int32] */;
  %716 = cast(%var_6034, dtype="bool") /* ty=Tensor[(10, 11, 13), bool] */;
  %717 = dyn.reshape(%714, %715, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%716, %717) /* ty=Tensor[(10, 11, 13), bool] */
}

def @func_8297() -> Tensor[(8, 14, 3), int16] {
  %718 = cast(meta[relay.Constant][45] /* ty=Tensor[(8, 1, 1), int16] */, dtype="int16") /* ty=Tensor[(8, 1, 1), int16] */;
  %719 = cast(meta[relay.Constant][46] /* ty=Tensor[(8, 14, 3), int16] */, dtype="int16") /* ty=Tensor[(8, 14, 3), int16] */;
  bitwise_and(%718, %719) /* ty=Tensor[(8, 14, 3), int16] */
}

def @func_7889() -> Tensor[(3, 15, 11), float32] {
  %720 = cast(meta[relay.Constant][47] /* ty=Tensor[(3, 15, 11), float32] */, dtype="float32") /* ty=Tensor[(3, 15, 11), float32] */;
  atan(%720) /* ty=Tensor[(3, 15, 11), float32] */
}

def @func_9439() -> (Tensor[(3, 15, 11), float32],) {
  %721 = @func_8150() /* ty=(Tensor[(3, 15, 11), float32],) */;
  %722 = %721.0;
  (%722,)
}

def @func_11096(%var_11072: Tensor[(660), int32]) -> (Tensor[(3, 15, 11), float32], Tensor[(4, 13, 10), float64], Tensor[(10, 52), float64], Tensor[(7, 4, 4), int8], Tensor[(4, 13, 10), float64], Tensor[(14, 3, 10), float64], Tensor[(420), float64], Tensor[(10, 6, 11), bool], Tensor[(660), int32], Tensor[(1120), float32], Tensor[(66), uint16]) {
  %723 = cast(meta[relay.Constant][48] /* ty=Tensor[(10, 52), float64] */, dtype="float64") /* ty=Tensor[(10, 52), float64] */;
  %724 = cast(meta[relay.Constant][48] /* ty=Tensor[(10, 52), float64] */, dtype="float64") /* ty=Tensor[(10, 52), float64] */;
  %725 = reshape(%723, newshape=[4, 13, 10]) /* ty=Tensor[(4, 13, 10), float64] */;
  %726 = reshape(%724, newshape=[4, 13, 10]) /* ty=Tensor[(4, 13, 10), float64] */;
  %727 = cast(meta[relay.Constant][48] /* ty=Tensor[(10, 52), float64] */, dtype="float64") /* ty=Tensor[(10, 52), float64] */;
  %728 = @func_9287(%725, %726) /* ty=Tensor[(4, 13, 10), float64] */;
  %729 = cast(%728, dtype="float64") /* ty=Tensor[(4, 13, 10), float64] */;
  %730 = reshape(%727, newshape=[4, 13, 10]) /* ty=Tensor[(4, 13, 10), float64] */;
  %731 = reshape(%729, newshape=[4, 13, 10]) /* ty=Tensor[(4, 13, 10), float64] */;
  %732 = cast(meta[relay.Constant][49] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %733 = reshape(%732, newshape=[14, 3, 10]) /* ty=Tensor[(14, 3, 10), float64] */;
  %734 = @func_5003(%733) /* ty=(Tensor[(14, 3, 10), float64],) */;
  %735 = cast(%var_11072, dtype="int32") /* ty=Tensor[(660), int32] */;
  %736 = cast(meta[relay.Constant][50] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %737 = cast(meta[relay.Constant][51] /* ty=Tensor[(66), uint16] */, dtype="uint16") /* ty=Tensor[(66), uint16] */;
  %738 = reshape(%735, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), int32] */;
  %739 = reshape(%736, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
  %740 = reshape(%737, newshape=[22, 3]) /* ty=Tensor[(22, 3), uint16] */;
  %741 = @func_4041(%738, %739, %740) /* ty=(Tensor[(10, 6, 11), bool], Tensor[(5, 16, 13), int8], Tensor[(1120), float32], float32, Tensor[(22, 3), uint16]) */;
  %742 = @func_9692() /* ty=Tensor[(3, 15, 11), float32] */;
  %743 = @func_9600() /* ty=Tensor[(7, 4, 4), int8] */;
  %744 = @func_9287(%730, %731) /* ty=Tensor[(4, 13, 10), float64] */;
  %745 = %734.0;
  %746 = %741.0;
  (%742, %728, meta[relay.Constant][48] /* ty=Tensor[(10, 52), float64] */, %743, %744, %745, meta[relay.Constant][49] /* ty=Tensor[(420), float64] */, %746, %var_11072, meta[relay.Constant][50] /* ty=Tensor[(1120), float32] */, meta[relay.Constant][51] /* ty=Tensor[(66), uint16] */)
}

def @func_2977(%var_2958: float32, %var_2967: Tensor[(66), uint16], %var_2969: Tensor[(1040), int64]) -> (Tensor[(9, 2, 5), bool], Tensor[(16, ?, 16), bool], Tensor[(66), uint16], Tensor[(858), uint16], Tensor[(1040), int64]) {
  %747 = cast(%var_2958, dtype="bool") /* ty=bool */;
  %748 = cast(meta[relay.Constant][52] /* ty=Tensor[(9, 2, 5), float32] */, dtype="bool") /* ty=Tensor[(9, 2, 5), bool] */;
  %749 = cast(%var_2967, dtype="uint16") /* ty=Tensor[(66), uint16] */;
  %750 = cast(meta[relay.Constant][53] /* ty=Tensor[(858), uint16] */, dtype="uint16") /* ty=Tensor[(858), uint16] */;
  %751 = cast(%var_2969, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %752 = reshape(%749, newshape=[11, 6, 1]) /* ty=Tensor[(11, 6, 1), uint16] */;
  %753 = reshape(%750, newshape=[11, 6, 13]) /* ty=Tensor[(11, 6, 13), uint16] */;
  %754 = reshape(%751, newshape=[1040]) /* ty=Tensor[(1040), int64] */;
  %755 = @func_581(%752, %753, %754) /* ty=(Tensor[(11, 6, 13), uint16], Tensor[(16, ?, 16), bool], Tensor[(256), uint16], Tensor[(1040), float32], Tensor[(1040), int8], Tensor[(5, 16, 13), int8], Tensor[(5, 16, 13), int8]) */;
  %756 = equal(%747, %748) /* ty=Tensor[(9, 2, 5), bool] */;
  %757 = %755.1;
  (%756, %757, %var_2967, meta[relay.Constant][53] /* ty=Tensor[(858), uint16] */, %var_2969)
}

def @func_10466(%var_10425: Tensor[(192), uint8], %var_10447: Tensor[(117), uint16], %var_10448: Tensor[(1404), float64], %var_10449: Tensor[(5, 84), float64]) -> (Tensor[(3, 15, 11), float32], Tensor[(4, 6, 8), bool], Tensor[(192), uint8], Tensor[(1040), int64], Tensor[(1755), float64], Tensor[(11, 6), uint16], Tensor[(39), uint16], Tensor[(117), uint16], Tensor[(1404), float64], Tensor[(5, 84), float64]) {
  %758 = @func_10202() /* ty=(Tensor[(3, 15, 11), float32], Tensor[(7, 4, 4), int8]) */;
  %759 = cast(%var_10425, dtype="uint8") /* ty=Tensor[(192), uint8] */;
  %760 = reshape(%759, newshape=[4, 6, 8]) /* ty=Tensor[(4, 6, 8), uint8] */;
  %761 = cast(meta[relay.Constant][54] /* ty=Tensor[(1755), float64] */, dtype="float64") /* ty=Tensor[(1755), float64] */;
  %762 = cast(meta[relay.Constant][54] /* ty=Tensor[(1755), float64] */, dtype="float64") /* ty=Tensor[(1755), float64] */;
  %763 = cast(meta[relay.Constant][55] /* ty=Tensor[(11, 6), uint16] */, dtype="uint16") /* ty=Tensor[(11, 6), uint16] */;
  %764 = cast(meta[relay.Constant][56] /* ty=Tensor[(39), uint16] */, dtype="uint16") /* ty=Tensor[(39), uint16] */;
  %765 = cast(%var_10447, dtype="uint16") /* ty=Tensor[(117), uint16] */;
  %766 = cast(%var_10448, dtype="float64") /* ty=Tensor[(1404), float64] */;
  %767 = cast(%var_10449, dtype="float64") /* ty=Tensor[(5, 84), float64] */;
  %768 = reshape(%761, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float64] */;
  %769 = reshape(%762, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float64] */;
  %770 = reshape(%763, newshape=[66]) /* ty=Tensor[(66), uint16] */;
  %771 = reshape(%764, newshape=[39]) /* ty=Tensor[(39), uint16] */;
  %772 = reshape(%765, newshape=[117]) /* ty=Tensor[(117), uint16] */;
  %773 = reshape(%766, newshape=[1404]) /* ty=Tensor[(1404), float64] */;
  %774 = reshape(%767, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %775 = @func_8898(%768, %769, %770, %771, %772, %773, %774) /* ty=(Tensor[(13, 15, 9), float64], Tensor[(1040), int64], Tensor[(1120), float32], float32, Tensor[(66), uint16], Tensor[(13, 3, 3), uint32], Tensor[(39), uint16], Tensor[(117), uint16], Tensor[(1404), float64], Tensor[(420), float64]) */;
  %776 = %758.0;
  %777 = @func_1352(%760) /* ty=Tensor[(4, 6, 8), bool] */;
  %778 = %775.1;
  (%776, %777, %var_10425, %778, meta[relay.Constant][54] /* ty=Tensor[(1755), float64] */, meta[relay.Constant][55] /* ty=Tensor[(11, 6), uint16] */, meta[relay.Constant][56] /* ty=Tensor[(39), uint16] */, %var_10447, %var_10448, %var_10449)
}

def @func_5819(%var_5794: Tensor[(9, 13, 3), float32], %var_5795: Tensor[(9, 13, 3), float32], %var_5804: Tensor[(9, 13, 3), float32]) -> (Tensor[(9, 13, 3), float32], Tensor[(16, 8, 12), float64], Tensor[(1536), float64], Tensor[(9, 13, 3), int16], Tensor[(9, 12, 13), float64], Tensor[(3, 468), float64]) {
  %779 = cast(%var_5795, dtype="float32") /* ty=Tensor[(9, 13, 3), float32] */;
  %780 = shape_of(%var_5794, dtype="int32") /* ty=Tensor[(3), int32] */;
  %781 = cast(%var_5794, dtype="float32") /* ty=Tensor[(9, 13, 3), float32] */;
  %782 = dyn.reshape(%779, %780, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %783 = cast(meta[relay.Constant][57] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %784 = reshape(%783, newshape=[16, 8, 12]) /* ty=Tensor[(16, 8, 12), float64] */;
  %785 = @func_2264(%784) /* ty=(Tensor[(16, 8, 12), float64],) */;
  %786 = cast(%var_5804, dtype="int16") /* ty=Tensor[(9, 13, 3), int16] */;
  %787 = shape_of(%var_5795, dtype="int32") /* ty=Tensor[(3), int32] */;
  %788 = cast(%var_5795, dtype="int16") /* ty=Tensor[(9, 13, 3), int16] */;
  %789 = dyn.reshape(%786, %787, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %790 = cast(meta[relay.Constant][58] /* ty=Tensor[(3, 468), float64] */, dtype="float64") /* ty=Tensor[(3, 468), float64] */;
  %791 = reshape(%790, newshape=[9, 12, 13]) /* ty=Tensor[(9, 12, 13), float64] */;
  %792 = @func_2871(%791) /* ty=(Tensor[(9, 12, 13), float64],) */;
  %793 = floor_mod(%781, %782) /* ty=Tensor[(9, 13, 3), float32] */;
  %794 = %785.0;
  %795 = maximum(%788, %789) /* ty=Tensor[(9, 13, 3), int16] */;
  %796 = %792.0;
  (%793, %794, meta[relay.Constant][57] /* ty=Tensor[(1536), float64] */, %795, %796, meta[relay.Constant][58] /* ty=Tensor[(3, 468), float64] */)
}

def @func_9141() -> (Tensor[(256), uint16], Tensor[(3, 15, 11), int16], Tensor[(3, 15, 11), int64]) {
  %797 = @func_8000() /* ty=(Tensor[(3, 15, 11), float32], Tensor[(8, 130), int64], Tensor[(256), uint16]) */;
  %798 = @func_8136() /* ty=Tensor[(3, 15, 11), float32] */;
  %799 = cast(meta[relay.Constant][59] /* ty=Tensor[(3, 15, 11), float32] */, dtype="int16") /* ty=Tensor[(3, 15, 11), int16] */;
  %800 = shape_of(%798, dtype="int32") /* ty=Tensor[(3), int32] */;
  %801 = cast(%798, dtype="int16") /* ty=Tensor[(3, 15, 11), int16] */;
  %802 = dyn.reshape(%799, %800, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %803 = cast(%798, dtype="int64") /* ty=Tensor[(3, 15, 11), int64] */;
  %804 = shape_of(meta[relay.Constant][59] /* ty=Tensor[(3, 15, 11), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %805 = cast(meta[relay.Constant][59] /* ty=Tensor[(3, 15, 11), float32] */, dtype="int64") /* ty=Tensor[(3, 15, 11), int64] */;
  %806 = dyn.reshape(%803, %804, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %807 = %797.2;
  %808 = bitwise_xor(%801, %802) /* ty=Tensor[(3, 15, 11), int16] */;
  %809 = right_shift(%805, %806) /* ty=Tensor[(3, 15, 11), int64] */;
  (%807, %808, %809)
}

def @func_9863() -> (Tensor[(8, 14, 3), int16],) {
  %810 = @func_8297() /* ty=Tensor[(8, 14, 3), int16] */;
  (%810,)
}

def @func_11556(%var_11546: Tensor[(16, 1, 15), float32]) -> (Tensor[(16, 1, 15), float32],) {
  %811 = cast(%var_11546, dtype="float32") /* ty=Tensor[(16, 1, 15), float32] */;
  %812 = rsqrt(%811) /* ty=Tensor[(16, 1, 15), float32] */;
  (%812,)
}

def @func_11510(%var_11479: Tensor[(7, 4, 4), int8], %var_11493: Tensor[(630), float32]) -> (Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32], Tensor[(14, 7, 16), bool], Tensor[(630), float32], Tensor[(14, 15, 3), float32]) {
  %813 = @func_10202() /* ty=(Tensor[(3, 15, 11), float32], Tensor[(7, 4, 4), int8]) */;
  %814 = %813.1;
  %815 = cast(%var_11479, dtype="float32") /* ty=Tensor[(7, 4, 4), float32] */;
  %816 = shape_of(%814, dtype="int32") /* ty=Tensor[(3), int32] */;
  %817 = cast(%814, dtype="float32") /* ty=Tensor[(7, 4, 4), float32] */;
  %818 = dyn.reshape(%815, %816, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %819 = cast(%814, dtype="float32") /* ty=Tensor[(7, 4, 4), float32] */;
  %820 = cast(%var_11493, dtype="float32") /* ty=Tensor[(630), float32] */;
  %821 = reshape(%820, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %822 = @func_10000(%821) /* ty=(Tensor[(256), uint16], Tensor[(14, 7, 16), bool], Tensor[(1568), uint32], Tensor[(9, 156), float64], Tensor[(14, 15, 3), float32], Tensor[(630), float32]) */;
  %823 = cast(%var_11493, dtype="float32") /* ty=Tensor[(630), float32] */;
  %824 = reshape(%823, newshape=[14, 15, 3]) /* ty=Tensor[(14, 15, 3), float32] */;
  %825 = divide(%817, %818) /* ty=Tensor[(7, 4, 4), float32] */;
  %826 = sinh(%819) /* ty=Tensor[(7, 4, 4), float32] */;
  %827 = %822.1;
  %828 = @func_8742(%824) /* ty=Tensor[(14, 15, 3), float32] */;
  (%825, %826, %827, %var_11493, %828)
}

def @func_12908(%var_12864: Tensor[(196), bool], %var_12879: Tensor[(13, 5, 14), bool]) -> (Tensor[(3, 15, 11), float32], Tensor[(14, 2, 7), bool], Tensor[(196), bool], Tensor[(910), bool], Tensor[(13, 5, 14), bool], Tensor[(3, 15, 11), int64], Tensor[(13, 5, 14), float32]) {
  %829 = @func_8446() /* ty=(Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float32]) */;
  %830 = cast(%var_12864, dtype="bool") /* ty=Tensor[(196), bool] */;
  %831 = reshape(%830, newshape=[14, 2, 7]) /* ty=Tensor[(14, 2, 7), bool] */;
  %832 = @func_7925(%831) /* ty=(Tensor[(14, 2, 7), bool],) */;
  %833 = cast(meta[relay.Constant][60] /* ty=Tensor[(910), bool] */, dtype="bool") /* ty=Tensor[(910), bool] */;
  %834 = cast(meta[relay.Constant][60] /* ty=Tensor[(910), bool] */, dtype="bool") /* ty=Tensor[(910), bool] */;
  %835 = reshape(%833, newshape=[13, 5, 14]) /* ty=Tensor[(13, 5, 14), bool] */;
  %836 = reshape(%834, newshape=[13, 5, 14]) /* ty=Tensor[(13, 5, 14), bool] */;
  %837 = @func_9935(%835, %836) /* ty=Tensor[(13, 5, 14), bool] */;
  %838 = cast(%var_12879, dtype="bool") /* ty=Tensor[(13, 5, 14), bool] */;
  %839 = shape_of(%837, dtype="int32") /* ty=Tensor[(3), int32] */;
  %840 = cast(%837, dtype="bool") /* ty=Tensor[(13, 5, 14), bool] */;
  %841 = dyn.reshape(%838, %839, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %842 = less(%840, %841) /* ty=Tensor[(13, 5, 14), bool] */;
  %843 = cast(%837, dtype="bool") /* ty=Tensor[(13, 5, 14), bool] */;
  %844 = shape_of(%842, dtype="int32") /* ty=Tensor[(3), int32] */;
  %845 = cast(%842, dtype="bool") /* ty=Tensor[(13, 5, 14), bool] */;
  %846 = dyn.reshape(%843, %844, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %847 = cast(%842, dtype="float64") /* ty=Tensor[(13, 5, 14), float64] */;
  %848 = sqrt(%847) /* ty=Tensor[(13, 5, 14), float64] */;
  %849 = cast(%848, dtype="float32") /* ty=Tensor[(13, 5, 14), float32] */;
  %850 = %829.1;
  %851 = %832.0;
  %852 = greater(%845, %846) /* ty=Tensor[(13, 5, 14), bool] */;
  %853 = @func_11136() /* ty=Tensor[(3, 15, 11), int64] */;
  %854 = sigmoid(%849) /* ty=Tensor[(13, 5, 14), float32] */;
  (%850, %851, %var_12864, meta[relay.Constant][60] /* ty=Tensor[(910), bool] */, %852, %853, %854)
}

def @func_11843(%var_11796: Tensor[(420), float64], %var_11803: Tensor[(66), uint16], %var_11808: Tensor[(1536), float64], %var_11811: Tensor[(630), float32]) -> (Tensor[(3, 15, 11), float32], Tensor[(7, 4, 4), int8], Tensor[(16, 5, 6), bool], Tensor[(420), float64], Tensor[(480), int16], Tensor[(351), float32], Tensor[(1, 66), uint16], Tensor[(1120), float32], float32, Tensor[(66), uint16], Tensor[(3, 15, 11), float32], Tensor[(16, 8, 12), float64], Tensor[(1536), float64], Tensor[(14, 7, 16), bool], Tensor[(630), float32]) {
  %855 = @func_10202() /* ty=(Tensor[(3, 15, 11), float32], Tensor[(7, 4, 4), int8]) */;
  %856 = cast(%var_11796, dtype="float64") /* ty=Tensor[(420), float64] */;
  %857 = cast(meta[relay.Constant][61] /* ty=Tensor[(480), int16] */, dtype="int16") /* ty=Tensor[(480), int16] */;
  %858 = cast(meta[relay.Constant][62] /* ty=Tensor[(351), float32] */, dtype="float32") /* ty=Tensor[(351), float32] */;
  %859 = reshape(%856, newshape=[5, 84]) /* ty=Tensor[(5, 84), float64] */;
  %860 = reshape(%857, newshape=[480]) /* ty=Tensor[(480), int16] */;
  %861 = reshape(%858, newshape=[351]) /* ty=Tensor[(351), float32] */;
  %862 = @func_9214(%859, %860, %861) /* ty=(Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float32], Tensor[(5, 84), float64], Tensor[(16, 5, 6), bool], Tensor[(480), int16], Tensor[(1536), float64], Tensor[(351), float32]) */;
  %863 = cast(meta[relay.Constant][63] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %864 = cast(-9.82224f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %865 = cast(%var_11803, dtype="uint16") /* ty=Tensor[(66), uint16] */;
  %866 = reshape(%863, newshape=[16, 7, 10]) /* ty=Tensor[(16, 7, 10), float32] */;
  %867 = reshape(%864, newshape=[]) /* ty=float32 */;
  %868 = reshape(%865, newshape=[1, 66]) /* ty=Tensor[(1, 66), uint16] */;
  %869 = @func_3642(%866, %867, %868) /* ty=(Tensor[(16, 7, 10), int16], Tensor[(16, 7, 10), float64], Tensor[(5, 16, 13), int8], Tensor[(8, 130), int64], Tensor[(1040), int64], float32, Tensor[(1, 66), uint16]) */;
  %870 = @func_9439() /* ty=(Tensor[(3, 15, 11), float32],) */;
  %871 = cast(%var_11808, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %872 = reshape(%871, newshape=[16, 8, 12]) /* ty=Tensor[(16, 8, 12), float64] */;
  %873 = @func_2264(%872) /* ty=(Tensor[(16, 8, 12), float64],) */;
  %874 = %855.1;
  %875 = cast(%874, dtype="int8") /* ty=Tensor[(7, 4, 4), int8] */;
  %876 = cast(%var_11811, dtype="float32") /* ty=Tensor[(630), float32] */;
  %877 = reshape(%875, newshape=[7, 4, 4]) /* ty=Tensor[(7, 4, 4), int8] */;
  %878 = reshape(%876, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %879 = @func_11510(%877, %878) /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32], Tensor[(14, 7, 16), bool], Tensor[(630), float32], Tensor[(14, 15, 3), float32]) */;
  %880 = @func_8407() /* ty=Tensor[(3, 15, 11), float32] */;
  %881 = %862.4;
  %882 = %869.6;
  %883 = %870.0;
  %884 = %873.0;
  %885 = %879.2;
  (%880, %874, %881, %var_11796, meta[relay.Constant][61] /* ty=Tensor[(480), int16] */, meta[relay.Constant][62] /* ty=Tensor[(351), float32] */, %882, meta[relay.Constant][63] /* ty=Tensor[(1120), float32] */, -9.82224f /* ty=float32 */, %var_11803, %883, %884, %var_11808, %885, %var_11811)
}

def @func_8000() -> (Tensor[(3, 15, 11), float32], Tensor[(8, 130), int64], Tensor[(256), uint16]) {
  %886 = cast(meta[relay.Constant][64] /* ty=Tensor[(256), uint16] */, dtype="uint16") /* ty=Tensor[(256), uint16] */;
  %887 = cast(meta[relay.Constant][64] /* ty=Tensor[(256), uint16] */, dtype="uint16") /* ty=Tensor[(256), uint16] */;
  %888 = reshape(%886, newshape=[16, 1, 16]) /* ty=Tensor[(16, 1, 16), uint16] */;
  %889 = reshape(%887, newshape=[16, 1, 16]) /* ty=Tensor[(16, 1, 16), uint16] */;
  %890 = @func_537(%888, %889) /* ty=(Tensor[(16, ?, 16), bool], Tensor[(5, 16, 13), int8], Tensor[(8, 130), int64]) */;
  %891 = @func_7889() /* ty=Tensor[(3, 15, 11), float32] */;
  %892 = %890.2;
  (%891, %892, meta[relay.Constant][64] /* ty=Tensor[(256), uint16] */)
}

def @func_9911(%var_9881: Tensor[(9, 13, 3), float64]) -> (Tensor[(9, 13, 3), float64],) {
  %893 = cast(%var_9881, dtype="float64") /* ty=Tensor[(9, 13, 3), float64] */;
  %894 = cos(%893) /* ty=Tensor[(9, 13, 3), float64] */;
  %895 = cast(%894, dtype="float64") /* ty=Tensor[(9, 13, 3), float64] */;
  %896 = asinh(%895) /* ty=Tensor[(9, 13, 3), float64] */;
  (%896,)
}

def @main(%var_13098: Tensor[(10, 15, 11), bool]) -> (Tensor[(10, 15, 11), bool],) {
  %897 = cast(%var_13098, dtype="bool") /* ty=Tensor[(10, 15, 11), bool] */;
  %898 = shape_of(meta[relay.Constant][65] /* ty=Tensor[(10, 15, 11), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %899 = cast(meta[relay.Constant][65] /* ty=Tensor[(10, 15, 11), bool] */, dtype="bool") /* ty=Tensor[(10, 15, 11), bool] */;
  %900 = dyn.reshape(%897, %898, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %901 = logical_or(%899, %900) /* ty=Tensor[(10, 15, 11), bool] */;
  (%901,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_10202() -> (Tensor[(3, 15, 11), float32], Tensor[(7, 4, 4), int8]) {
  %0 = @func_8375() /* ty=(Tensor[(3, 15, 11), float32],) */;
  %1 = %0.0;
  %2 = @func_9600() /* ty=Tensor[(7, 4, 4), int8] */;
  (%1, %2)
}

def @func_3647(%var_3644: Tensor[(16, 7, 10), float32], %var_3645: float32, %var_3646: Tensor[(1, 66), uint16]) -> (Tensor[(16, 7, 10), int16], Tensor[(16, 7, 10), float64], Tensor[(5, 16, 13), int8], Tensor[(8, 130), int64], Tensor[(1040), int64], float32, Tensor[(1, 66), uint16]) {
  @func_3642(%var_3644, %var_3645, %var_3646) /* ty=(Tensor[(16, 7, 10), int16], Tensor[(16, 7, 10), float64], Tensor[(5, 16, 13), int8], Tensor[(8, 130), int64], Tensor[(1040), int64], float32, Tensor[(1, 66), uint16]) */
}

def @func_4041(%var_4026: Tensor[(10, 6, 11), int32], %var_4034: Tensor[(1120), float32], %var_4036: Tensor[(22, 3), uint16]) -> (Tensor[(10, 6, 11), bool], Tensor[(5, 16, 13), int8], Tensor[(1120), float32], float32, Tensor[(22, 3), uint16]) {
  %3 = cast(%var_4026, dtype="bool") /* ty=Tensor[(10, 6, 11), bool] */;
  %4 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(10, 6, 11), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %5 = cast(meta[relay.Constant][0] /* ty=Tensor[(10, 6, 11), int32] */, dtype="bool") /* ty=Tensor[(10, 6, 11), bool] */;
  %6 = dyn.reshape(%3, %4, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %7 = cast(%var_4034, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %8 = cast(4.74148f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %9 = cast(%var_4036, dtype="uint16") /* ty=Tensor[(22, 3), uint16] */;
  %10 = reshape(%7, newshape=[16, 7, 10]) /* ty=Tensor[(16, 7, 10), float32] */;
  %11 = reshape(%8, newshape=[]) /* ty=float32 */;
  %12 = reshape(%9, newshape=[1, 66]) /* ty=Tensor[(1, 66), uint16] */;
  %13 = @func_3642(%10, %11, %12) /* ty=(Tensor[(16, 7, 10), int16], Tensor[(16, 7, 10), float64], Tensor[(5, 16, 13), int8], Tensor[(8, 130), int64], Tensor[(1040), int64], float32, Tensor[(1, 66), uint16]) */;
  %14 = equal(%5, %6) /* ty=Tensor[(10, 6, 11), bool] */;
  %15 = %13.2;
  (%14, %15, %var_4034, 4.74148f /* ty=float32 */, %var_4036)
}

def @func_8111(%var_8110: Tensor[(5, 84), float64]) -> (Tensor[(3, 15, 11), float32], Tensor[(14, 3, 10), float64], Tensor[(5, 84), float64]) {
  %21 = fn (%var_8101: Tensor[(5, 84), float64]) -> (Tensor[(3, 15, 11), float32], Tensor[(14, 3, 10), float64], Tensor[(5, 84), float64]) {
    %16 = cast(%var_8101, dtype="float64") /* ty=Tensor[(5, 84), float64] */;
    %17 = reshape(%16, newshape=[14, 3, 10]) /* ty=Tensor[(14, 3, 10), float64] */;
    %18 = @func_5003(%17) /* ty=(Tensor[(14, 3, 10), float64],) */;
    %19 = @func_7889() /* ty=Tensor[(3, 15, 11), float32] */;
    %20 = %18.0;
    (%19, %20, %var_8101)
  };
  %21(%var_8110) /* ty=(Tensor[(3, 15, 11), float32], Tensor[(14, 3, 10), float64], Tensor[(5, 84), float64]) */
}

def @func_6044(%var_6042: Tensor[(10, 11, 13), int16], %var_6043: Tensor[(10, 11, 13), int16]) -> Tensor[(10, 11, 13), bool] {
  @func_6040(%var_6042, %var_6043) /* ty=Tensor[(10, 11, 13), bool] */
}

def @main(%var_13098: Tensor[(10, 15, 11), bool]) -> (Tensor[(10, 15, 11), bool],) {
  %22 = cast(%var_13098, dtype="bool") /* ty=Tensor[(10, 15, 11), bool] */;
  %23 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(10, 15, 11), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %24 = cast(meta[relay.Constant][1] /* ty=Tensor[(10, 15, 11), bool] */, dtype="bool") /* ty=Tensor[(10, 15, 11), bool] */;
  %25 = dyn.reshape(%22, %23, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %26 = logical_or(%24, %25) /* ty=Tensor[(10, 15, 11), bool] */;
  (%26,)
}

def @func_12509(%var_12508: Tensor[(520), float64]) -> (Tensor[(8, 14, 3), int16], Tensor[(4, 13, 10), float64], Tensor[(520), float64]) {
  %33 = fn (%var_12505: Tensor[(520), float64]) -> (Tensor[(8, 14, 3), int16], Tensor[(4, 13, 10), float64], Tensor[(520), float64]) {
    %27 = cast(%var_12505, dtype="float64") /* ty=Tensor[(520), float64] */;
    %28 = cast(%var_12505, dtype="float64") /* ty=Tensor[(520), float64] */;
    %29 = reshape(%27, newshape=[4, 13, 10]) /* ty=Tensor[(4, 13, 10), float64] */;
    %30 = reshape(%28, newshape=[4, 13, 10]) /* ty=Tensor[(4, 13, 10), float64] */;
    %31 = @func_8297() /* ty=Tensor[(8, 14, 3), int16] */;
    %32 = @func_9287(%29, %30) /* ty=Tensor[(4, 13, 10), float64] */;
    (%31, %32, %var_12505)
  };
  %33(%var_12508) /* ty=(Tensor[(8, 14, 3), int16], Tensor[(4, 13, 10), float64], Tensor[(520), float64]) */
}

def @func_9141() -> (Tensor[(256), uint16], Tensor[(3, 15, 11), int16], Tensor[(3, 15, 11), int64]) {
  %34 = @func_8000() /* ty=(Tensor[(3, 15, 11), float32], Tensor[(8, 130), int64], Tensor[(256), uint16]) */;
  %35 = @func_8136() /* ty=Tensor[(3, 15, 11), float32] */;
  %36 = cast(meta[relay.Constant][2] /* ty=Tensor[(3, 15, 11), float32] */, dtype="int16") /* ty=Tensor[(3, 15, 11), int16] */;
  %37 = shape_of(%35, dtype="int32") /* ty=Tensor[(3), int32] */;
  %38 = cast(%35, dtype="int16") /* ty=Tensor[(3, 15, 11), int16] */;
  %39 = dyn.reshape(%36, %37, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %40 = cast(%35, dtype="int64") /* ty=Tensor[(3, 15, 11), int64] */;
  %41 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(3, 15, 11), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %42 = cast(meta[relay.Constant][2] /* ty=Tensor[(3, 15, 11), float32] */, dtype="int64") /* ty=Tensor[(3, 15, 11), int64] */;
  %43 = dyn.reshape(%40, %41, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %44 = %34.2;
  %45 = bitwise_xor(%38, %39) /* ty=Tensor[(3, 15, 11), int16] */;
  %46 = right_shift(%42, %43) /* ty=Tensor[(3, 15, 11), int64] */;
  (%44, %45, %46)
}

def @func_6171(%var_6168: Tensor[(8, 3, 15), float64]) -> Tensor[(8, 3, 15), float64] {
  %47 = cast(%var_6168, dtype="float64") /* ty=Tensor[(8, 3, 15), float64] */;
  log(%47) /* ty=Tensor[(8, 3, 15), float64] */
}

def @func_2266(%var_2265: Tensor[(16, 8, 12), float64]) -> (Tensor[(16, 8, 12), float64],) {
  %50 = fn (%var_2261: Tensor[(16, 8, 12), float64]) -> (Tensor[(16, 8, 12), float64],) {
    %48 = cast(%var_2261, dtype="float64") /* ty=Tensor[(16, 8, 12), float64] */;
    %49 = sinh(%48) /* ty=Tensor[(16, 8, 12), float64] */;
    (%49,)
  };
  %50(%var_2265) /* ty=(Tensor[(16, 8, 12), float64],) */
}

def @func_9761(%var_9759: uint8, %var_9760: Tensor[(1404), float64]) -> (Tensor[(256), uint16], uint8, Tensor[(2, 14, 2), float32], Tensor[(1404), float64], Tensor[(858), float32], Tensor[(1568), uint32], Tensor[(1404), float64], Tensor[(8, 14, 3), int16]) {
  %68 = fn (%var_9712: uint8, %var_9726: Tensor[(1404), float64]) -> (Tensor[(256), uint16], uint8, Tensor[(2, 14, 2), float32], Tensor[(1404), float64], Tensor[(858), float32], Tensor[(1568), uint32], Tensor[(1404), float64], Tensor[(8, 14, 3), int16]) {
    %51 = @func_9141() /* ty=(Tensor[(256), uint16], Tensor[(3, 15, 11), int16], Tensor[(3, 15, 11), int64]) */;
    %52 = cast(%var_9712, dtype="uint8") /* ty=uint8 */;
    %53 = reshape(%52, newshape=[]) /* ty=uint8 */;
    %54 = @func_9337(%53) /* ty=(Tensor[(3, 15, 11), float32], Tensor[(2, 14, 2), float64], uint8) */;
    %55 = %54.1;
    %56 = cast(%55, dtype="float32") /* ty=Tensor[(2, 14, 2), float32] */;
    %57 = cast(meta[relay.Constant][3] /* ty=Tensor[(858), float32] */, dtype="float32") /* ty=Tensor[(858), float32] */;
    %58 = cast(meta[relay.Constant][4] /* ty=Tensor[(1568), uint32] */, dtype="uint32") /* ty=Tensor[(1568), uint32] */;
    %59 = cast(%var_9726, dtype="float64") /* ty=Tensor[(1404), float64] */;
    %60 = reshape(%57, newshape=[6, 11, 13]) /* ty=Tensor[(6, 11, 13), float32] */;
    %61 = reshape(%58, newshape=[56, 28]) /* ty=Tensor[(56, 28), uint32] */;
    %62 = reshape(%59, newshape=[1404]) /* ty=Tensor[(1404), float64] */;
    %63 = @func_6315(%60, %61, %62) /* ty=(Tensor[(6, 11, 13), float32], Tensor[(14, 7, 16), bool], Tensor[(56, 28), uint32], Tensor[(1404), float64]) */;
    %64 = %51.0;
    %65 = sqrt(%56) /* ty=Tensor[(2, 14, 2), float32] */;
    %66 = %63.3;
    %67 = @func_9492() /* ty=Tensor[(8, 14, 3), int16] */;
    (%64, %var_9712, %65, %66, meta[relay.Constant][3] /* ty=Tensor[(858), float32] */, meta[relay.Constant][4] /* ty=Tensor[(1568), uint32] */, %var_9726, %67)
  };
  %68(%var_9759, %var_9760) /* ty=(Tensor[(256), uint16], uint8, Tensor[(2, 14, 2), float32], Tensor[(1404), float64], Tensor[(858), float32], Tensor[(1568), uint32], Tensor[(1404), float64], Tensor[(8, 14, 3), int16]) */
}

def @func_3591(%var_3589: float64, %var_3590: Tensor[(1, 13, 11), float64]) -> (Tensor[(1, 13, 11), bool],) {
  %72 = fn (%var_3581: float64, %var_3582: Tensor[(1, 13, 11), float64]) -> (Tensor[(1, 13, 11), bool],) {
    %69 = cast(%var_3581, dtype="bool") /* ty=bool */;
    %70 = cast(%var_3582, dtype="bool") /* ty=Tensor[(1, 13, 11), bool] */;
    %71 = less(%69, %70) /* ty=Tensor[(1, 13, 11), bool] */;
    (%71,)
  };
  %72(%var_3589, %var_3590) /* ty=(Tensor[(1, 13, 11), bool],) */
}

def @func_7030(%var_7023: Tensor[(4, 6, 5), uint16]) -> (Tensor[(4, 6, 5), bool],) {
  %73 = cast(meta[relay.Constant][5] /* ty=Tensor[(4, 6, 5), uint16] */, dtype="bool") /* ty=Tensor[(4, 6, 5), bool] */;
  %74 = shape_of(%var_7023, dtype="int32") /* ty=Tensor[(3), int32] */;
  %75 = cast(%var_7023, dtype="bool") /* ty=Tensor[(4, 6, 5), bool] */;
  %76 = dyn.reshape(%73, %74, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %77 = less(%75, %76) /* ty=Tensor[(4, 6, 5), bool] */;
  (%77,)
}

def @func_8358(%var_8333: Tensor[(16, 5, 6), uint64], %var_8334: Tensor[(16, 5, 6), uint64]) -> Tensor[(16, 5, 6), int32] {
  %78 = cast(%var_8334, dtype="bool") /* ty=Tensor[(16, 5, 6), bool] */;
  %79 = shape_of(%var_8333, dtype="int32") /* ty=Tensor[(3), int32] */;
  %80 = cast(%var_8333, dtype="bool") /* ty=Tensor[(16, 5, 6), bool] */;
  %81 = dyn.reshape(%78, %79, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %82 = equal(%80, %81) /* ty=Tensor[(16, 5, 6), bool] */;
  %83 = cast(%82, dtype="int32") /* ty=Tensor[(16, 5, 6), int32] */;
  %84 = shape_of(%var_8334, dtype="int32") /* ty=Tensor[(3), int32] */;
  %85 = cast(%var_8334, dtype="int32") /* ty=Tensor[(16, 5, 6), int32] */;
  %86 = dyn.reshape(%83, %84, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  left_shift(%85, %86) /* ty=Tensor[(16, 5, 6), int32] */
}

def @func_8953(%var_8928: Tensor[(3, 15, 11), float64], %var_8946: Tensor[(66), uint16], %var_8947: Tensor[(429, 2), uint16], %var_8948: Tensor[(1040), int64]) -> (Tensor[(3, 15, 11), int32], Tensor[(1040), int8], Tensor[(66), uint16], Tensor[(429, 2), uint16], Tensor[(1040), int64]) {
  %87 = @func_8407() /* ty=Tensor[(3, 15, 11), float32] */;
  %88 = cast(%87, dtype="float64") /* ty=Tensor[(3, 15, 11), float64] */;
  %89 = sinh(%88) /* ty=Tensor[(3, 15, 11), float64] */;
  %90 = cast(%var_8928, dtype="int32") /* ty=Tensor[(3, 15, 11), int32] */;
  %91 = shape_of(%89, dtype="int32") /* ty=Tensor[(3), int32] */;
  %92 = cast(%89, dtype="int32") /* ty=Tensor[(3, 15, 11), int32] */;
  %93 = dyn.reshape(%90, %91, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %94 = cast(%var_8946, dtype="uint16") /* ty=Tensor[(66), uint16] */;
  %95 = cast(%var_8947, dtype="uint16") /* ty=Tensor[(429, 2), uint16] */;
  %96 = cast(%var_8948, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %97 = reshape(%94, newshape=[11, 6, 1]) /* ty=Tensor[(11, 6, 1), uint16] */;
  %98 = reshape(%95, newshape=[11, 6, 13]) /* ty=Tensor[(11, 6, 13), uint16] */;
  %99 = reshape(%96, newshape=[1040]) /* ty=Tensor[(1040), int64] */;
  %100 = @func_581(%97, %98, %99) /* ty=(Tensor[(11, 6, 13), uint16], Tensor[(16, ?, 16), bool], Tensor[(256), uint16], Tensor[(1040), float32], Tensor[(1040), int8], Tensor[(5, 16, 13), int8], Tensor[(5, 16, 13), int8]) */;
  %101 = bitwise_or(%92, %93) /* ty=Tensor[(3, 15, 11), int32] */;
  %102 = %100.4;
  (%101, %102, %var_8946, %var_8947, %var_8948)
}

def @func_11595() -> (Tensor[(3, 15, 11), float32],) {
  %103 = @func_8150() /* ty=(Tensor[(3, 15, 11), float32],) */;
  %104 = %103.0;
  (%104,)
}

def @func_9781() -> (Tensor[(3, 15, 11), float32],) {
  @func_9779() /* ty=(Tensor[(3, 15, 11), float32],) */
}

def @func_8152() -> (Tensor[(3, 15, 11), float32],) {
  @func_8150() /* ty=(Tensor[(3, 15, 11), float32],) */
}

def @func_12033() -> (Tensor[(3, 15, 11), int64],) {
  %105 = @func_11136() /* ty=Tensor[(3, 15, 11), int64] */;
  (%105,)
}

def @func_9218(%var_9215: Tensor[(5, 84), float64], %var_9216: Tensor[(480), int16], %var_9217: Tensor[(351), float32]) -> (Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float32], Tensor[(5, 84), float64], Tensor[(16, 5, 6), bool], Tensor[(480), int16], Tensor[(1536), float64], Tensor[(351), float32]) {
  %131 = fn (%var_9197: Tensor[(5, 84), float64], %var_9202: Tensor[(480), int16], %var_9210: Tensor[(351), float32]) -> (Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float32], Tensor[(5, 84), float64], Tensor[(16, 5, 6), bool], Tensor[(480), int16], Tensor[(1536), float64], Tensor[(351), float32]) {
    %106 = @func_8446() /* ty=(Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float32]) */;
    %107 = %106.1;
    %108 = cast(meta[relay.Constant][6] /* ty=Tensor[(3, 15, 11), float32] */, dtype="float32") /* ty=Tensor[(3, 15, 11), float32] */;
    %109 = shape_of(%107, dtype="int32") /* ty=Tensor[(3), int32] */;
    %110 = cast(%107, dtype="float32") /* ty=Tensor[(3, 15, 11), float32] */;
    %111 = dyn.reshape(%108, %109, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %112 = cast(%107, dtype="float32") /* ty=Tensor[(3, 15, 11), float32] */;
    %113 = cast(%var_9197, dtype="float64") /* ty=Tensor[(5, 84), float64] */;
    %114 = reshape(%113, newshape=[420]) /* ty=Tensor[(420), float64] */;
    %115 = @func_8215(%114) /* ty=(Tensor[(3, 15, 11), float32], Tensor[(14, 3, 10), float64], Tensor[(420), float64]) */;
    %116 = cast(%var_9202, dtype="int16") /* ty=Tensor[(480), int16] */;
    %117 = reshape(%116, newshape=[16, 5, 6]) /* ty=Tensor[(16, 5, 6), int16] */;
    %118 = @func_1118(%117) /* ty=(Tensor[(16, 5, 6), bool],) */;
    %119 = cast(%var_9210, dtype="float32") /* ty=Tensor[(351), float32] */;
    %120 = cast(%var_9210, dtype="float32") /* ty=Tensor[(351), float32] */;
    %121 = cast(%var_9210, dtype="float32") /* ty=Tensor[(351), float32] */;
    %122 = reshape(%119, newshape=[9, 13, 3]) /* ty=Tensor[(9, 13, 3), float32] */;
    %123 = reshape(%120, newshape=[9, 13, 3]) /* ty=Tensor[(9, 13, 3), float32] */;
    %124 = reshape(%121, newshape=[9, 13, 3]) /* ty=Tensor[(9, 13, 3), float32] */;
    %125 = @func_5819(%122, %123, %124) /* ty=(Tensor[(9, 13, 3), float32], Tensor[(16, 8, 12), float64], Tensor[(1536), float64], Tensor[(9, 13, 3), int16], Tensor[(9, 12, 13), float64], Tensor[(3, 468), float64]) */;
    %126 = power(%110, %111) /* ty=Tensor[(3, 15, 11), float32] */;
    %127 = log10(%112) /* ty=Tensor[(3, 15, 11), float32] */;
    %128 = %115.0;
    %129 = %118.0;
    %130 = %125.2;
    (%126, %127, %128, %var_9197, %129, %var_9202, %130, %var_9210)
  };
  %131(%var_9215, %var_9216, %var_9217) /* ty=(Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float32], Tensor[(5, 84), float64], Tensor[(16, 5, 6), bool], Tensor[(480), int16], Tensor[(1536), float64], Tensor[(351), float32]) */
}

def @func_12205() -> (Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float32]) {
  %138 = fn () -> (Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float32]) {
    %132 = @func_9439() /* ty=(Tensor[(3, 15, 11), float32],) */;
    %133 = %132.0;
    %134 = cast(%133, dtype="float32") /* ty=Tensor[(3, 15, 11), float32] */;
    %135 = @func_9779() /* ty=(Tensor[(3, 15, 11), float32],) */;
    %136 = rsqrt(%134) /* ty=Tensor[(3, 15, 11), float32] */;
    %137 = %135.0;
    (%136, %137)
  };
  %138() /* ty=(Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float32]) */
}

def @func_2982(%var_2979: float32, %var_2980: Tensor[(66), uint16], %var_2981: Tensor[(1040), int64]) -> (Tensor[(9, 2, 5), bool], Tensor[(16, ?, 16), bool], Tensor[(66), uint16], Tensor[(858), uint16], Tensor[(1040), int64]) {
  @func_2977(%var_2979, %var_2980, %var_2981) /* ty=(Tensor[(9, 2, 5), bool], Tensor[(16, ?, 16), bool], Tensor[(66), uint16], Tensor[(858), uint16], Tensor[(1040), int64]) */
}

def @func_2871(%var_2863: Tensor[(9, 12, 13), float64]) -> (Tensor[(9, 12, 13), float64],) {
  %139 = cast(%var_2863, dtype="float64") /* ty=Tensor[(9, 12, 13), float64] */;
  %140 = log2(%139) /* ty=Tensor[(9, 12, 13), float64] */;
  (%140,)
}

def @func_9694() -> Tensor[(3, 15, 11), float32] {
  @func_9692() /* ty=Tensor[(3, 15, 11), float32] */
}

def @func_581(%var_542: Tensor[(11, 6, 1), uint16], %var_543: Tensor[(11, 6, 13), uint16], %var_561: Tensor[(1040), int64]) -> (Tensor[(11, 6, 13), uint16], Tensor[(16, ?, 16), bool], Tensor[(256), uint16], Tensor[(1040), float32], Tensor[(1040), int8], Tensor[(5, 16, 13), int8], Tensor[(5, 16, 13), int8]) {
  %141 = cast(%var_542, dtype="uint16") /* ty=Tensor[(11, 6, 1), uint16] */;
  %142 = cast(%var_543, dtype="uint16") /* ty=Tensor[(11, 6, 13), uint16] */;
  %143 = cast(meta[relay.Constant][7] /* ty=Tensor[(256), uint16] */, dtype="uint16") /* ty=Tensor[(256), uint16] */;
  %144 = cast(meta[relay.Constant][7] /* ty=Tensor[(256), uint16] */, dtype="uint16") /* ty=Tensor[(256), uint16] */;
  %145 = reshape(%143, newshape=[16, 1, 16]) /* ty=Tensor[(16, 1, 16), uint16] */;
  %146 = reshape(%144, newshape=[16, 1, 16]) /* ty=Tensor[(16, 1, 16), uint16] */;
  %147 = @func_537(%145, %146) /* ty=(Tensor[(16, ?, 16), bool], Tensor[(5, 16, 13), int8], Tensor[(8, 130), int64]) */;
  %148 = cast(%var_561, dtype="float32") /* ty=Tensor[(1040), float32] */;
  %149 = cast(%var_561, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %150 = cast(%var_561, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %151 = reshape(%149, newshape=[5, 16, 13]) /* ty=Tensor[(5, 16, 13), int64] */;
  %152 = reshape(%150, newshape=[5, 16, 13]) /* ty=Tensor[(5, 16, 13), int64] */;
  %153 = @func_297(%151, %152) /* ty=(Tensor[(5, 16, 13), int8],) */;
  %154 = %153.0;
  %155 = cast(%154, dtype="int8") /* ty=Tensor[(5, 16, 13), int8] */;
  %156 = shape_of(%var_561, dtype="int32") /* ty=Tensor[(1), int32] */;
  %157 = cast(%var_561, dtype="int8") /* ty=Tensor[(1040), int8] */;
  %158 = dyn.reshape(%155, %156, newshape=[]) /* ty=Tensor[(?), int8] */;
  %159 = cast(%var_561, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %160 = log10(%148) /* ty=Tensor[(1040), float32] */;
  %161 = cast(%160, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %162 = reshape(%159, newshape=[5, 16, 13]) /* ty=Tensor[(5, 16, 13), int64] */;
  %163 = reshape(%161, newshape=[5, 16, 13]) /* ty=Tensor[(5, 16, 13), int64] */;
  %164 = @func_297(%162, %163) /* ty=(Tensor[(5, 16, 13), int8],) */;
  %165 = cast(%154, dtype="int64") /* ty=Tensor[(5, 16, 13), int64] */;
  %166 = bitwise_or(%157, %158) /* ty=Tensor[(1040), int8] */;
  %167 = cast(%166, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %168 = reshape(%165, newshape=[5, 16, 13]) /* ty=Tensor[(5, 16, 13), int64] */;
  %169 = reshape(%167, newshape=[5, 16, 13]) /* ty=Tensor[(5, 16, 13), int64] */;
  %170 = @func_297(%168, %169) /* ty=(Tensor[(5, 16, 13), int8],) */;
  %171 = add(%141, %142) /* ty=Tensor[(11, 6, 13), uint16] */;
  %172 = %147.0;
  %173 = %164.0;
  %174 = %170.0;
  (%171, %172, meta[relay.Constant][7] /* ty=Tensor[(256), uint16] */, %160, %166, %173, %174)
}

def @func_4222(%var_4220: Tensor[(14, 7, 16), uint32], %var_4221: Tensor[(1404), float64]) -> (Tensor[(14, 7, 16), bool], Tensor[(9, 12, 13), float64], Tensor[(1404), float64]) {
  %182 = fn (%var_4210: Tensor[(14, 7, 16), uint32], %var_4217: Tensor[(1404), float64]) -> (Tensor[(14, 7, 16), bool], Tensor[(9, 12, 13), float64], Tensor[(1404), float64]) {
    %175 = cast(meta[relay.Constant][8] /* ty=uint32 */, dtype="bool") /* ty=bool */;
    %176 = cast(%var_4210, dtype="bool") /* ty=Tensor[(14, 7, 16), bool] */;
    %177 = cast(%var_4217, dtype="float64") /* ty=Tensor[(1404), float64] */;
    %178 = reshape(%177, newshape=[9, 12, 13]) /* ty=Tensor[(9, 12, 13), float64] */;
    %179 = @func_2871(%178) /* ty=(Tensor[(9, 12, 13), float64],) */;
    %180 = less_equal(%175, %176) /* ty=Tensor[(14, 7, 16), bool] */;
    %181 = %179.0;
    (%180, %181, %var_4217)
  };
  %182(%var_4220, %var_4221) /* ty=(Tensor[(14, 7, 16), bool], Tensor[(9, 12, 13), float64], Tensor[(1404), float64]) */
}

def @func_9492() -> Tensor[(8, 14, 3), int16] {
  @func_8297() /* ty=Tensor[(8, 14, 3), int16] */
}

def @func_12109(%var_12107: Tensor[(16, 16, 7), bool]) -> (Tensor[(16, 16, 7), bool],) {
  @func_12106(%var_12107) /* ty=(Tensor[(16, 16, 7), bool],) */
}

def @func_10344(%var_10341: Tensor[(858), float32], %var_10342: Tensor[(784, 2), uint32], %var_10343: Tensor[(1404), float64]) -> (Tensor[(3, 15, 11), float32], Tensor[(1404), float64], Tensor[(858), float32], Tensor[(1404), float64], Tensor[(784, 2), float64], Tensor[(13, 5, 14), bool], Tensor[(455, 2), bool], uint8, uint8, Tensor[(256), uint16]) {
  @func_10339(%var_10341, %var_10342, %var_10343) /* ty=(Tensor[(3, 15, 11), float32], Tensor[(1404), float64], Tensor[(858), float32], Tensor[(1404), float64], Tensor[(784, 2), float64], Tensor[(13, 5, 14), bool], Tensor[(455, 2), bool], uint8, uint8, Tensor[(256), uint16]) */
}

def @func_300(%var_298: Tensor[(5, 16, 13), int64], %var_299: Tensor[(5, 16, 13), int64]) -> (Tensor[(5, 16, 13), int8],) {
  %193 = fn (%var_281: Tensor[(5, 16, 13), int64], %var_282: Tensor[(5, 16, 13), int64]) -> (Tensor[(5, 16, 13), int8],) {
    %183 = cast(%var_282, dtype="bool") /* ty=Tensor[(5, 16, 13), bool] */;
    %184 = shape_of(%var_281, dtype="int32") /* ty=Tensor[(3), int32] */;
    %185 = cast(%var_281, dtype="bool") /* ty=Tensor[(5, 16, 13), bool] */;
    %186 = dyn.reshape(%183, %184, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %187 = equal(%185, %186) /* ty=Tensor[(5, 16, 13), bool] */;
    %188 = cast(%187, dtype="int8") /* ty=Tensor[(5, 16, 13), int8] */;
    %189 = shape_of(%var_282, dtype="int32") /* ty=Tensor[(3), int32] */;
    %190 = cast(%var_282, dtype="int8") /* ty=Tensor[(5, 16, 13), int8] */;
    %191 = dyn.reshape(%188, %189, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %192 = left_shift(%190, %191) /* ty=Tensor[(5, 16, 13), int8] */;
    (%192,)
  };
  %193(%var_298, %var_299) /* ty=(Tensor[(5, 16, 13), int8],) */
}

def @func_8906(%var_8899: Tensor[(13, 15, 9), float64], %var_8900: Tensor[(13, 15, 9), float64], %var_8901: Tensor[(66), uint16], %var_8902: Tensor[(39), uint16], %var_8903: Tensor[(117), uint16], %var_8904: Tensor[(1404), float64], %var_8905: Tensor[(420), float64]) -> (Tensor[(13, 15, 9), float64], Tensor[(1040), int64], Tensor[(1120), float32], float32, Tensor[(66), uint16], Tensor[(13, 3, 3), uint32], Tensor[(39), uint16], Tensor[(117), uint16], Tensor[(1404), float64], Tensor[(420), float64]) {
  %217 = fn (%var_8839: Tensor[(13, 15, 9), float64], %var_8840: Tensor[(13, 15, 9), float64], %var_8858: Tensor[(66), uint16], %var_8867: Tensor[(39), uint16], %var_8868: Tensor[(117), uint16], %var_8869: Tensor[(1404), float64], %var_8870: Tensor[(420), float64]) -> (Tensor[(13, 15, 9), float64], Tensor[(1040), int64], Tensor[(1120), float32], float32, Tensor[(66), uint16], Tensor[(13, 3, 3), uint32], Tensor[(39), uint16], Tensor[(117), uint16], Tensor[(1404), float64], Tensor[(420), float64]) {
    %194 = cast(%var_8840, dtype="float64") /* ty=Tensor[(13, 15, 9), float64] */;
    %195 = shape_of(%var_8839, dtype="int32") /* ty=Tensor[(3), int32] */;
    %196 = cast(%var_8839, dtype="float64") /* ty=Tensor[(13, 15, 9), float64] */;
    %197 = dyn.reshape(%194, %195, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %198 = cast(meta[relay.Constant][9] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
    %199 = cast(-7.89775f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %200 = cast(%var_8858, dtype="uint16") /* ty=Tensor[(66), uint16] */;
    %201 = reshape(%198, newshape=[16, 7, 10]) /* ty=Tensor[(16, 7, 10), float32] */;
    %202 = reshape(%199, newshape=[]) /* ty=float32 */;
    %203 = reshape(%200, newshape=[1, 66]) /* ty=Tensor[(1, 66), uint16] */;
    %204 = @func_3642(%201, %202, %203) /* ty=(Tensor[(16, 7, 10), int16], Tensor[(16, 7, 10), float64], Tensor[(5, 16, 13), int8], Tensor[(8, 130), int64], Tensor[(1040), int64], float32, Tensor[(1, 66), uint16]) */;
    %205 = cast(%var_8867, dtype="uint16") /* ty=Tensor[(39), uint16] */;
    %206 = cast(%var_8868, dtype="uint16") /* ty=Tensor[(117), uint16] */;
    %207 = cast(%var_8869, dtype="float64") /* ty=Tensor[(1404), float64] */;
    %208 = cast(%var_8870, dtype="float64") /* ty=Tensor[(420), float64] */;
    %209 = reshape(%205, newshape=[13, 3, 1]) /* ty=Tensor[(13, 3, 1), uint16] */;
    %210 = reshape(%206, newshape=[13, 3, 3]) /* ty=Tensor[(13, 3, 3), uint16] */;
    %211 = reshape(%207, newshape=[1404]) /* ty=Tensor[(1404), float64] */;
    %212 = reshape(%208, newshape=[5, 84]) /* ty=Tensor[(5, 84), float64] */;
    %213 = @func_7345(%209, %210, %211, %212) /* ty=(Tensor[(13, 3, 3), bool], Tensor[(13, 3, 3), uint32], Tensor[(1568), uint32], Tensor[(14, 3, 10), float64], Tensor[(5, 84), float64], Tensor[(1404), bool], Tensor[(13, 3, 1404), float32]) */;
    %214 = mod(%196, %197) /* ty=Tensor[(13, 15, 9), float64] */;
    %215 = %204.4;
    %216 = %213.1;
    (%214, %215, meta[relay.Constant][9] /* ty=Tensor[(1120), float32] */, -7.89775f /* ty=float32 */, %var_8858, %216, %var_8867, %var_8868, %var_8869, %var_8870)
  };
  %217(%var_8899, %var_8900, %var_8901, %var_8902, %var_8903, %var_8904, %var_8905) /* ty=(Tensor[(13, 15, 9), float64], Tensor[(1040), int64], Tensor[(1120), float32], float32, Tensor[(66), uint16], Tensor[(13, 3, 3), uint32], Tensor[(39), uint16], Tensor[(117), uint16], Tensor[(1404), float64], Tensor[(420), float64]) */
}

def @func_12329() -> Tensor[(420), float64] {
  %219 = fn () -> Tensor[(420), float64] {
    %218 = @func_11361() /* ty=(Tensor[(14, 3, 10), float64], Tensor[(420), float64], Tensor[(8, 14, 3), bool]) */;
    %218.1
  };
  %219() /* ty=Tensor[(420), float64] */
}

def @func_1118(%var_1107: Tensor[(16, 5, 6), int16]) -> (Tensor[(16, 5, 6), bool],) {
  %220 = cast(%var_1107, dtype="bool") /* ty=Tensor[(16, 5, 6), bool] */;
  %221 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(16, 5, 6), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %222 = cast(meta[relay.Constant][10] /* ty=Tensor[(16, 5, 6), int16] */, dtype="bool") /* ty=Tensor[(16, 5, 6), bool] */;
  %223 = dyn.reshape(%220, %221, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %224 = greater(%222, %223) /* ty=Tensor[(16, 5, 6), bool] */;
  (%224,)
}

def @func_6040(%var_6034: Tensor[(10, 11, 13), int16], %var_6035: Tensor[(10, 11, 13), int16]) -> Tensor[(10, 11, 13), bool] {
  %225 = cast(%var_6035, dtype="bool") /* ty=Tensor[(10, 11, 13), bool] */;
  %226 = shape_of(%var_6034, dtype="int32") /* ty=Tensor[(3), int32] */;
  %227 = cast(%var_6034, dtype="bool") /* ty=Tensor[(10, 11, 13), bool] */;
  %228 = dyn.reshape(%225, %226, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%227, %228) /* ty=Tensor[(10, 11, 13), bool] */
}

def @func_9601() -> Tensor[(7, 4, 4), int8] {
  %233 = fn () -> Tensor[(7, 4, 4), int8] {
    %229 = cast(meta[relay.Constant][12] /* ty=Tensor[(7, 4, 4), int8] */, dtype="int8") /* ty=Tensor[(7, 4, 4), int8] */;
    %230 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(7, 4, 4), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %231 = cast(meta[relay.Constant][11] /* ty=Tensor[(7, 4, 4), int8] */, dtype="int8") /* ty=Tensor[(7, 4, 4), int8] */;
    %232 = dyn.reshape(%229, %230, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    subtract(%231, %232) /* ty=Tensor[(7, 4, 4), int8] */
  };
  %233() /* ty=Tensor[(7, 4, 4), int8] */
}

def @func_11688(%var_11669: Tensor[(429, 2), uint16], %var_11670: Tensor[(1040), int64]) -> (Tensor[(3, 15, 11), float32], Tensor[(66), uint16], Tensor[(66, 1), uint16], Tensor[(429, 2), uint16], Tensor[(1040), int64]) {
  %234 = @func_9526() /* ty=(Tensor[(3, 15, 11), int16], Tensor[(3, 15, 11), float32]) */;
  %235 = %234.1;
  %236 = cast(%235, dtype="float64") /* ty=Tensor[(3, 15, 11), float64] */;
  %237 = cast(meta[relay.Constant][13] /* ty=Tensor[(66, 1), uint16] */, dtype="uint16") /* ty=Tensor[(66, 1), uint16] */;
  %238 = cast(%var_11669, dtype="uint16") /* ty=Tensor[(429, 2), uint16] */;
  %239 = cast(%var_11670, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %240 = reshape(%236, newshape=[3, 15, 11]) /* ty=Tensor[(3, 15, 11), float64] */;
  %241 = reshape(%237, newshape=[66]) /* ty=Tensor[(66), uint16] */;
  %242 = reshape(%238, newshape=[429, 2]) /* ty=Tensor[(429, 2), uint16] */;
  %243 = reshape(%239, newshape=[1040]) /* ty=Tensor[(1040), int64] */;
  %244 = @func_8953(%240, %241, %242, %243) /* ty=(Tensor[(3, 15, 11), int32], Tensor[(1040), int8], Tensor[(66), uint16], Tensor[(429, 2), uint16], Tensor[(1040), int64]) */;
  %245 = %244.2;
  (%235, %245, meta[relay.Constant][13] /* ty=Tensor[(66, 1), uint16] */, %var_11669, %var_11670)
}

def @func_10000(%var_9964: Tensor[(630), float32]) -> (Tensor[(256), uint16], Tensor[(14, 7, 16), bool], Tensor[(1568), uint32], Tensor[(9, 156), float64], Tensor[(14, 15, 3), float32], Tensor[(630), float32]) {
  %246 = cast(meta[relay.Constant][14] /* ty=Tensor[(1568), uint32] */, dtype="uint32") /* ty=Tensor[(1568), uint32] */;
  %247 = cast(meta[relay.Constant][15] /* ty=Tensor[(9, 156), float64] */, dtype="float64") /* ty=Tensor[(9, 156), float64] */;
  %248 = reshape(%246, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), uint32] */;
  %249 = reshape(%247, newshape=[1404]) /* ty=Tensor[(1404), float64] */;
  %250 = @func_4219(%248, %249) /* ty=(Tensor[(14, 7, 16), bool], Tensor[(9, 12, 13), float64], Tensor[(1404), float64]) */;
  %251 = cast(%var_9964, dtype="float32") /* ty=Tensor[(630), float32] */;
  %252 = reshape(%251, newshape=[14, 15, 3]) /* ty=Tensor[(14, 15, 3), float32] */;
  %253 = @func_9366() /* ty=Tensor[(256), uint16] */;
  %254 = %250.0;
  %255 = @func_8742(%252) /* ty=Tensor[(14, 15, 3), float32] */;
  (%253, %254, meta[relay.Constant][14] /* ty=Tensor[(1568), uint32] */, meta[relay.Constant][15] /* ty=Tensor[(9, 156), float64] */, %255, %var_9964)
}

def @func_11597() -> (Tensor[(3, 15, 11), float32],) {
  @func_11595() /* ty=(Tensor[(3, 15, 11), float32],) */
}

def @func_11098(%var_11097: Tensor[(660), int32]) -> (Tensor[(3, 15, 11), float32], Tensor[(4, 13, 10), float64], Tensor[(10, 52), float64], Tensor[(7, 4, 4), int8], Tensor[(4, 13, 10), float64], Tensor[(14, 3, 10), float64], Tensor[(420), float64], Tensor[(10, 6, 11), bool], Tensor[(660), int32], Tensor[(1120), float32], Tensor[(66), uint16]) {
  %280 = fn (%var_11072: Tensor[(660), int32]) -> (Tensor[(3, 15, 11), float32], Tensor[(4, 13, 10), float64], Tensor[(10, 52), float64], Tensor[(7, 4, 4), int8], Tensor[(4, 13, 10), float64], Tensor[(14, 3, 10), float64], Tensor[(420), float64], Tensor[(10, 6, 11), bool], Tensor[(660), int32], Tensor[(1120), float32], Tensor[(66), uint16]) {
    %256 = cast(meta[relay.Constant][16] /* ty=Tensor[(10, 52), float64] */, dtype="float64") /* ty=Tensor[(10, 52), float64] */;
    %257 = cast(meta[relay.Constant][16] /* ty=Tensor[(10, 52), float64] */, dtype="float64") /* ty=Tensor[(10, 52), float64] */;
    %258 = reshape(%256, newshape=[4, 13, 10]) /* ty=Tensor[(4, 13, 10), float64] */;
    %259 = reshape(%257, newshape=[4, 13, 10]) /* ty=Tensor[(4, 13, 10), float64] */;
    %260 = cast(meta[relay.Constant][16] /* ty=Tensor[(10, 52), float64] */, dtype="float64") /* ty=Tensor[(10, 52), float64] */;
    %261 = @func_9287(%258, %259) /* ty=Tensor[(4, 13, 10), float64] */;
    %262 = cast(%261, dtype="float64") /* ty=Tensor[(4, 13, 10), float64] */;
    %263 = reshape(%260, newshape=[4, 13, 10]) /* ty=Tensor[(4, 13, 10), float64] */;
    %264 = reshape(%262, newshape=[4, 13, 10]) /* ty=Tensor[(4, 13, 10), float64] */;
    %265 = cast(meta[relay.Constant][17] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
    %266 = reshape(%265, newshape=[14, 3, 10]) /* ty=Tensor[(14, 3, 10), float64] */;
    %267 = @func_5003(%266) /* ty=(Tensor[(14, 3, 10), float64],) */;
    %268 = cast(%var_11072, dtype="int32") /* ty=Tensor[(660), int32] */;
    %269 = cast(meta[relay.Constant][18] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
    %270 = cast(meta[relay.Constant][19] /* ty=Tensor[(66), uint16] */, dtype="uint16") /* ty=Tensor[(66), uint16] */;
    %271 = reshape(%268, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), int32] */;
    %272 = reshape(%269, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
    %273 = reshape(%270, newshape=[22, 3]) /* ty=Tensor[(22, 3), uint16] */;
    %274 = @func_4041(%271, %272, %273) /* ty=(Tensor[(10, 6, 11), bool], Tensor[(5, 16, 13), int8], Tensor[(1120), float32], float32, Tensor[(22, 3), uint16]) */;
    %275 = @func_9692() /* ty=Tensor[(3, 15, 11), float32] */;
    %276 = @func_9600() /* ty=Tensor[(7, 4, 4), int8] */;
    %277 = @func_9287(%263, %264) /* ty=Tensor[(4, 13, 10), float64] */;
    %278 = %267.0;
    %279 = %274.0;
    (%275, %261, meta[relay.Constant][16] /* ty=Tensor[(10, 52), float64] */, %276, %277, %278, meta[relay.Constant][17] /* ty=Tensor[(420), float64] */, %279, %var_11072, meta[relay.Constant][18] /* ty=Tensor[(1120), float32] */, meta[relay.Constant][19] /* ty=Tensor[(66), uint16] */)
  };
  %280(%var_11097) /* ty=(Tensor[(3, 15, 11), float32], Tensor[(4, 13, 10), float64], Tensor[(10, 52), float64], Tensor[(7, 4, 4), int8], Tensor[(4, 13, 10), float64], Tensor[(14, 3, 10), float64], Tensor[(420), float64], Tensor[(10, 6, 11), bool], Tensor[(660), int32], Tensor[(1120), float32], Tensor[(66), uint16]) */
}

def @func_8297() -> Tensor[(8, 14, 3), int16] {
  %281 = cast(meta[relay.Constant][20] /* ty=Tensor[(8, 1, 1), int16] */, dtype="int16") /* ty=Tensor[(8, 1, 1), int16] */;
  %282 = cast(meta[relay.Constant][21] /* ty=Tensor[(8, 14, 3), int16] */, dtype="int16") /* ty=Tensor[(8, 14, 3), int16] */;
  bitwise_and(%281, %282) /* ty=Tensor[(8, 14, 3), int16] */
}

def @func_9337(%var_9334: uint8) -> (Tensor[(3, 15, 11), float32], Tensor[(2, 14, 2), float64], uint8) {
  %283 = @func_8446() /* ty=(Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float32]) */;
  %284 = cast(%var_9334, dtype="uint8") /* ty=uint8 */;
  %285 = reshape(%284, newshape=[]) /* ty=uint8 */;
  %286 = @func_4005(%285) /* ty=(Tensor[(2, 14, 2), float64], Tensor[(2, 14, 2), bool]) */;
  %287 = %283.1;
  %288 = %286.0;
  (%287, %288, %var_9334)
}

def @func_9865() -> (Tensor[(8, 14, 3), int16],) {
  @func_9863() /* ty=(Tensor[(8, 14, 3), int16],) */
}

def @func_3757(%var_3755: Tensor[(12, 9, 1), float32], %var_3756: Tensor[(192), uint8]) -> (Tensor[(16, 5, 6), bool], Tensor[(120, 4), int16], Tensor[(4, 6, 8), bool], Tensor[(192), uint8], Tensor[(12, 9, ?), int8], Tensor[(12, 9, 1), float64]) {
  @func_3753(%var_3755, %var_3756) /* ty=(Tensor[(16, 5, 6), bool], Tensor[(120, 4), int16], Tensor[(4, 6, 8), bool], Tensor[(192), uint8], Tensor[(12, 9, ?), int8], Tensor[(12, 9, 1), float64]) */
}

def @func_10204() -> (Tensor[(3, 15, 11), float32], Tensor[(7, 4, 4), int8]) {
  @func_10202() /* ty=(Tensor[(3, 15, 11), float32], Tensor[(7, 4, 4), int8]) */
}

def @func_11020(%var_11018: uint8) -> (Tensor[(256), uint16], Tensor[(2, 14, 2), float64], uint8) {
  @func_11017(%var_11018) /* ty=(Tensor[(256), uint16], Tensor[(2, 14, 2), float64], uint8) */
}

def @func_9528() -> (Tensor[(3, 15, 11), int16], Tensor[(3, 15, 11), float32]) {
  @func_9526() /* ty=(Tensor[(3, 15, 11), int16], Tensor[(3, 15, 11), float32]) */
}

def @func_9340(%var_9338: uint8) -> (Tensor[(3, 15, 11), float32], Tensor[(2, 14, 2), float64], uint8) {
  @func_9337(%var_9338) /* ty=(Tensor[(3, 15, 11), float32], Tensor[(2, 14, 2), float64], uint8) */
}

def @func_11232() -> (Tensor[(3, 15, 11), int64], Tensor[(5, 10, 14), bool], Tensor[(700), float32]) {
  @func_11230() /* ty=(Tensor[(3, 15, 11), int64], Tensor[(5, 10, 14), bool], Tensor[(700), float32]) */
}

def @func_7033(%var_7031: Tensor[(4, 6, 5), uint16]) -> (Tensor[(4, 6, 5), bool],) {
  @func_7030(%var_7031) /* ty=(Tensor[(4, 6, 5), bool],) */
}

def @func_9779() -> (Tensor[(3, 15, 11), float32],) {
  %289 = @func_9439() /* ty=(Tensor[(3, 15, 11), float32],) */;
  %290 = %289.0;
  (%290,)
}

def @func_7928(%var_7926: Tensor[(14, 2, 7), bool]) -> (Tensor[(14, 2, 7), bool],) {
  @func_7925(%var_7926) /* ty=(Tensor[(14, 2, 7), bool],) */
}

def @func_11287(%var_11285: float64, %var_11286: Tensor[(143), float64]) -> (Tensor[(3, 15, 11), int64], Tensor[(1, 13, 11), bool], float64, Tensor[(143), float64]) {
  @func_11283(%var_11285, %var_11286) /* ty=(Tensor[(3, 15, 11), int64], Tensor[(1, 13, 11), bool], float64, Tensor[(143), float64]) */
}

def @func_1289(%var_1285: Tensor[(3, 4, 1), float64], %var_1286: Tensor[(1040), int64], %var_1287: Tensor[(66), uint16], %var_1288: Tensor[(3, 4, 1040), float64]) -> (Tensor[(5, 16, 13), int8], Tensor[(8, 130), int64], Tensor[(1040), int8], Tensor[(256, 858), bool], Tensor[(256, 66), uint16], Tensor[(3, 4, 1040), float64]) {
  @func_1283(%var_1285, %var_1286, %var_1287, %var_1288) /* ty=(Tensor[(5, 16, 13), int8], Tensor[(8, 130), int64], Tensor[(1040), int8], Tensor[(256, 858), bool], Tensor[(256, 66), uint16], Tensor[(3, 4, 1040), float64]) */
}

def @func_11692(%var_11690: Tensor[(429, 2), uint16], %var_11691: Tensor[(1040), int64]) -> (Tensor[(3, 15, 11), float32], Tensor[(66), uint16], Tensor[(66, 1), uint16], Tensor[(429, 2), uint16], Tensor[(1040), int64]) {
  @func_11688(%var_11690, %var_11691) /* ty=(Tensor[(3, 15, 11), float32], Tensor[(66), uint16], Tensor[(66, 1), uint16], Tensor[(429, 2), uint16], Tensor[(1040), int64]) */
}

def @func_11720() -> Tensor[(8, 14, 3), int16] {
  %291 = fn () -> Tensor[(8, 14, 3), int16] {
    @func_8297() /* ty=Tensor[(8, 14, 3), int16] */
  };
  %291() /* ty=Tensor[(8, 14, 3), int16] */
}

def @func_11729() -> (Tensor[(3, 15, 11), float32],) {
  %293 = fn () -> (Tensor[(3, 15, 11), float32],) {
    %292 = @func_9692() /* ty=Tensor[(3, 15, 11), float32] */;
    (%292,)
  };
  %293() /* ty=(Tensor[(3, 15, 11), float32],) */
}

def @func_7925(%var_7915: Tensor[(14, 2, 7), bool]) -> (Tensor[(14, 2, 7), bool],) {
  %294 = cast(meta[relay.Constant][22] /* ty=Tensor[(14, 2, 7), bool] */, dtype="bool") /* ty=Tensor[(14, 2, 7), bool] */;
  %295 = shape_of(%var_7915, dtype="int32") /* ty=Tensor[(3), int32] */;
  %296 = cast(%var_7915, dtype="bool") /* ty=Tensor[(14, 2, 7), bool] */;
  %297 = dyn.reshape(%294, %295, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %298 = logical_and(%296, %297) /* ty=Tensor[(14, 2, 7), bool] */;
  (%298,)
}

def @func_10466(%var_10425: Tensor[(192), uint8], %var_10447: Tensor[(117), uint16], %var_10448: Tensor[(1404), float64], %var_10449: Tensor[(5, 84), float64]) -> (Tensor[(3, 15, 11), float32], Tensor[(4, 6, 8), bool], Tensor[(192), uint8], Tensor[(1040), int64], Tensor[(1755), float64], Tensor[(11, 6), uint16], Tensor[(39), uint16], Tensor[(117), uint16], Tensor[(1404), float64], Tensor[(5, 84), float64]) {
  %299 = @func_10202() /* ty=(Tensor[(3, 15, 11), float32], Tensor[(7, 4, 4), int8]) */;
  %300 = cast(%var_10425, dtype="uint8") /* ty=Tensor[(192), uint8] */;
  %301 = reshape(%300, newshape=[4, 6, 8]) /* ty=Tensor[(4, 6, 8), uint8] */;
  %302 = cast(meta[relay.Constant][23] /* ty=Tensor[(1755), float64] */, dtype="float64") /* ty=Tensor[(1755), float64] */;
  %303 = cast(meta[relay.Constant][23] /* ty=Tensor[(1755), float64] */, dtype="float64") /* ty=Tensor[(1755), float64] */;
  %304 = cast(meta[relay.Constant][24] /* ty=Tensor[(11, 6), uint16] */, dtype="uint16") /* ty=Tensor[(11, 6), uint16] */;
  %305 = cast(meta[relay.Constant][25] /* ty=Tensor[(39), uint16] */, dtype="uint16") /* ty=Tensor[(39), uint16] */;
  %306 = cast(%var_10447, dtype="uint16") /* ty=Tensor[(117), uint16] */;
  %307 = cast(%var_10448, dtype="float64") /* ty=Tensor[(1404), float64] */;
  %308 = cast(%var_10449, dtype="float64") /* ty=Tensor[(5, 84), float64] */;
  %309 = reshape(%302, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float64] */;
  %310 = reshape(%303, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float64] */;
  %311 = reshape(%304, newshape=[66]) /* ty=Tensor[(66), uint16] */;
  %312 = reshape(%305, newshape=[39]) /* ty=Tensor[(39), uint16] */;
  %313 = reshape(%306, newshape=[117]) /* ty=Tensor[(117), uint16] */;
  %314 = reshape(%307, newshape=[1404]) /* ty=Tensor[(1404), float64] */;
  %315 = reshape(%308, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %316 = @func_8898(%309, %310, %311, %312, %313, %314, %315) /* ty=(Tensor[(13, 15, 9), float64], Tensor[(1040), int64], Tensor[(1120), float32], float32, Tensor[(66), uint16], Tensor[(13, 3, 3), uint32], Tensor[(39), uint16], Tensor[(117), uint16], Tensor[(1404), float64], Tensor[(420), float64]) */;
  %317 = %299.0;
  %318 = @func_1352(%301) /* ty=Tensor[(4, 6, 8), bool] */;
  %319 = %316.1;
  (%317, %318, %var_10425, %319, meta[relay.Constant][23] /* ty=Tensor[(1755), float64] */, meta[relay.Constant][24] /* ty=Tensor[(11, 6), uint16] */, meta[relay.Constant][25] /* ty=Tensor[(39), uint16] */, %var_10447, %var_10448, %var_10449)
}

def @func_11362() -> (Tensor[(14, 3, 10), float64], Tensor[(420), float64], Tensor[(8, 14, 3), bool]) {
  %333 = fn () -> (Tensor[(14, 3, 10), float64], Tensor[(420), float64], Tensor[(8, 14, 3), bool]) {
    %320 = cast(meta[relay.Constant][26] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
    %321 = reshape(%320, newshape=[420]) /* ty=Tensor[(420), float64] */;
    %322 = @func_8215(%321) /* ty=(Tensor[(3, 15, 11), float32], Tensor[(14, 3, 10), float64], Tensor[(420), float64]) */;
    %323 = @func_10776() /* ty=(Tensor[(8, 14, 3), float32], Tensor[(8, 14, 3), float32]) */;
    %324 = %323.1;
    %325 = cast(%324, dtype="float32") /* ty=Tensor[(8, 14, 3), float32] */;
    %326 = erf(%325) /* ty=Tensor[(8, 14, 3), float32] */;
    %327 = cast(%324, dtype="bool") /* ty=Tensor[(8, 14, 3), bool] */;
    %328 = shape_of(%326, dtype="int32") /* ty=Tensor[(3), int32] */;
    %329 = cast(%326, dtype="bool") /* ty=Tensor[(8, 14, 3), bool] */;
    %330 = dyn.reshape(%327, %328, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %331 = %322.1;
    %332 = logical_and(%329, %330) /* ty=Tensor[(8, 14, 3), bool] */;
    (%331, meta[relay.Constant][26] /* ty=Tensor[(420), float64] */, %332)
  };
  %333() /* ty=(Tensor[(14, 3, 10), float64], Tensor[(420), float64], Tensor[(8, 14, 3), bool]) */
}

def @func_8790() -> (Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float64]) {
  %338 = fn () -> (Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float64]) {
    %334 = @func_8407() /* ty=Tensor[(3, 15, 11), float32] */;
    %335 = cast(%334, dtype="float64") /* ty=Tensor[(3, 15, 11), float64] */;
    %336 = @func_7889() /* ty=Tensor[(3, 15, 11), float32] */;
    %337 = tan(%335) /* ty=Tensor[(3, 15, 11), float64] */;
    (%336, %337)
  };
  %338() /* ty=(Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float64]) */
}

def @func_8745(%var_8743: Tensor[(14, 15, 3), float32]) -> Tensor[(14, 15, 3), float32] {
  @func_8742(%var_8743) /* ty=Tensor[(14, 15, 3), float32] */
}

def @func_11861() -> Tensor[(3, 15, 11), float32] {
  %339 = @func_9779() /* ty=(Tensor[(3, 15, 11), float32],) */;
  %339.0
}

def @func_9305(%var_9302: Tensor[(4, 11, 15), float64]) -> Tensor[(4, 11, 15), float64] {
  %340 = cast(%var_9302, dtype="float64") /* ty=Tensor[(4, 11, 15), float64] */;
  cos(%340) /* ty=Tensor[(4, 11, 15), float64] */
}

def @func_12106(%var_12101: Tensor[(16, 16, 7), bool]) -> (Tensor[(16, 16, 7), bool],) {
  %341 = cast(%var_12101, dtype="bool") /* ty=Tensor[(16, 16, 7), bool] */;
  %342 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(16, 16, 7), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %343 = cast(meta[relay.Constant][27] /* ty=Tensor[(16, 16, 7), bool] */, dtype="bool") /* ty=Tensor[(16, 16, 7), bool] */;
  %344 = dyn.reshape(%341, %342, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %345 = logical_or(%343, %344) /* ty=Tensor[(16, 16, 7), bool] */;
  (%345,)
}

def @func_9041(%var_9040: Tensor[(312), float32]) -> (Tensor[(3, 15, 11), float32], Tensor[(13, 2, 12), float32], Tensor[(312), float32]) {
  %351 = fn (%var_9033: Tensor[(312), float32]) -> (Tensor[(3, 15, 11), float32], Tensor[(13, 2, 12), float32], Tensor[(312), float32]) {
    %346 = cast(%var_9033, dtype="float32") /* ty=Tensor[(312), float32] */;
    %347 = reshape(%346, newshape=[13, 2, 12]) /* ty=Tensor[(13, 2, 12), float32] */;
    %348 = @func_6729(%347) /* ty=(Tensor[(13, 2, 12), float32], float64, Tensor[(143), float64], Tensor[(1, 13, 11), float32], Tensor[(16, 5, 6), bool], Tensor[(480), int16]) */;
    %349 = @func_7889() /* ty=Tensor[(3, 15, 11), float32] */;
    %350 = %348.0;
    (%349, %350, %var_9033)
  };
  %351(%var_9040) /* ty=(Tensor[(3, 15, 11), float32], Tensor[(13, 2, 12), float32], Tensor[(312), float32]) */
}

def @func_9308(%var_9306: Tensor[(4, 11, 15), float64]) -> Tensor[(4, 11, 15), float64] {
  @func_9305(%var_9306) /* ty=Tensor[(4, 11, 15), float64] */
}

def @func_9368() -> Tensor[(256), uint16] {
  @func_9366() /* ty=Tensor[(256), uint16] */
}

def @func_9440() -> (Tensor[(3, 15, 11), float32],) {
  %354 = fn () -> (Tensor[(3, 15, 11), float32],) {
    %352 = @func_8150() /* ty=(Tensor[(3, 15, 11), float32],) */;
    %353 = %352.0;
    (%353,)
  };
  %354() /* ty=(Tensor[(3, 15, 11), float32],) */
}

def @func_10339(%var_10305: Tensor[(858), float32], %var_10306: Tensor[(784, 2), uint32], %var_10307: Tensor[(1404), float64]) -> (Tensor[(3, 15, 11), float32], Tensor[(1404), float64], Tensor[(858), float32], Tensor[(1404), float64], Tensor[(784, 2), float64], Tensor[(13, 5, 14), bool], Tensor[(455, 2), bool], uint8, uint8, Tensor[(256), uint16]) {
  %355 = @func_10082() /* ty=(Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float32], Tensor[(5, 16, 13), int8], Tensor[(1040), int64]) */;
  %356 = cast(%var_10305, dtype="float32") /* ty=Tensor[(858), float32] */;
  %357 = cast(%var_10306, dtype="uint32") /* ty=Tensor[(784, 2), uint32] */;
  %358 = cast(%var_10307, dtype="float64") /* ty=Tensor[(1404), float64] */;
  %359 = reshape(%356, newshape=[6, 11, 13]) /* ty=Tensor[(6, 11, 13), float32] */;
  %360 = reshape(%357, newshape=[56, 28]) /* ty=Tensor[(56, 28), uint32] */;
  %361 = reshape(%358, newshape=[1404]) /* ty=Tensor[(1404), float64] */;
  %362 = @func_6315(%359, %360, %361) /* ty=(Tensor[(6, 11, 13), float32], Tensor[(14, 7, 16), bool], Tensor[(56, 28), uint32], Tensor[(1404), float64]) */;
  %363 = cast(%var_10306, dtype="float64") /* ty=Tensor[(784, 2), float64] */;
  %364 = cast(meta[relay.Constant][28] /* ty=Tensor[(455, 2), bool] */, dtype="bool") /* ty=Tensor[(455, 2), bool] */;
  %365 = cast(meta[relay.Constant][28] /* ty=Tensor[(455, 2), bool] */, dtype="bool") /* ty=Tensor[(455, 2), bool] */;
  %366 = reshape(%364, newshape=[13, 5, 14]) /* ty=Tensor[(13, 5, 14), bool] */;
  %367 = reshape(%365, newshape=[13, 5, 14]) /* ty=Tensor[(13, 5, 14), bool] */;
  %368 = cast(meta[relay.Constant][29] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %369 = reshape(%368, newshape=[]) /* ty=uint8 */;
  %370 = @func_9337(%369) /* ty=(Tensor[(3, 15, 11), float32], Tensor[(2, 14, 2), float64], uint8) */;
  %371 = @func_9141() /* ty=(Tensor[(256), uint16], Tensor[(3, 15, 11), int16], Tensor[(3, 15, 11), int64]) */;
  %372 = %355.0;
  %373 = %362.3;
  %374 = exp(%363) /* ty=Tensor[(784, 2), float64] */;
  %375 = @func_9935(%366, %367) /* ty=Tensor[(13, 5, 14), bool] */;
  %376 = %370.2;
  %377 = %371.0;
  (%372, %373, %var_10305, %var_10307, %374, %375, meta[relay.Constant][28] /* ty=Tensor[(455, 2), bool] */, %376, meta[relay.Constant][29] /* ty=uint8 */, %377)
}

def @func_10174() -> (Tensor[(3, 15, 11), float32],) {
  %380 = fn () -> (Tensor[(3, 15, 11), float32],) {
    %378 = @func_9779() /* ty=(Tensor[(3, 15, 11), float32],) */;
    %379 = %378.0;
    (%379,)
  };
  %380() /* ty=(Tensor[(3, 15, 11), float32],) */
}

def @func_10895(%var_10891: Tensor[(4, 48), uint8], %var_10892: Tensor[(39, 3), uint16], %var_10893: Tensor[(1404), float64], %var_10894: Tensor[(70, 6), float64]) -> (Tensor[(3, 15, 11), int16], Tensor[(192), uint8], Tensor[(39, 3), uint16], Tensor[(1404), float64], Tensor[(70, 6), float64], Tensor[(4, 48), float32]) {
  %395 = fn (%var_10876: Tensor[(4, 48), uint8], %var_10877: Tensor[(39, 3), uint16], %var_10878: Tensor[(1404), float64], %var_10879: Tensor[(70, 6), float64]) -> (Tensor[(3, 15, 11), int16], Tensor[(192), uint8], Tensor[(39, 3), uint16], Tensor[(1404), float64], Tensor[(70, 6), float64], Tensor[(4, 48), float32]) {
    %381 = @func_9526() /* ty=(Tensor[(3, 15, 11), int16], Tensor[(3, 15, 11), float32]) */;
    %382 = cast(%var_10876, dtype="uint8") /* ty=Tensor[(4, 48), uint8] */;
    %383 = cast(%var_10877, dtype="uint16") /* ty=Tensor[(39, 3), uint16] */;
    %384 = cast(%var_10878, dtype="float64") /* ty=Tensor[(1404), float64] */;
    %385 = cast(%var_10879, dtype="float64") /* ty=Tensor[(70, 6), float64] */;
    %386 = reshape(%382, newshape=[192]) /* ty=Tensor[(192), uint8] */;
    %387 = reshape(%383, newshape=[117]) /* ty=Tensor[(117), uint16] */;
    %388 = reshape(%384, newshape=[1404]) /* ty=Tensor[(1404), float64] */;
    %389 = reshape(%385, newshape=[5, 84]) /* ty=Tensor[(5, 84), float64] */;
    %390 = @func_10466(%386, %387, %388, %389) /* ty=(Tensor[(3, 15, 11), float32], Tensor[(4, 6, 8), bool], Tensor[(192), uint8], Tensor[(1040), int64], Tensor[(1755), float64], Tensor[(11, 6), uint16], Tensor[(39), uint16], Tensor[(117), uint16], Tensor[(1404), float64], Tensor[(5, 84), float64]) */;
    %391 = cast(%var_10876, dtype="float32") /* ty=Tensor[(4, 48), float32] */;
    %392 = %381.0;
    %393 = %390.2;
    %394 = sinh(%391) /* ty=Tensor[(4, 48), float32] */;
    (%392, %393, %var_10877, %var_10878, %var_10879, %394)
  };
  %395(%var_10891, %var_10892, %var_10893, %var_10894) /* ty=(Tensor[(3, 15, 11), int16], Tensor[(192), uint8], Tensor[(39, 3), uint16], Tensor[(1404), float64], Tensor[(70, 6), float64], Tensor[(4, 48), float32]) */
}

def @func_11017(%var_11010: uint8) -> (Tensor[(256), uint16], Tensor[(2, 14, 2), float64], uint8) {
  %396 = cast(%var_11010, dtype="uint8") /* ty=uint8 */;
  %397 = reshape(%396, newshape=[]) /* ty=uint8 */;
  %398 = @func_4005(%397) /* ty=(Tensor[(2, 14, 2), float64], Tensor[(2, 14, 2), bool]) */;
  %399 = @func_10030() /* ty=Tensor[(256), uint16] */;
  %400 = %398.0;
  (%399, %400, %var_11010)
}

def @func_11848(%var_11844: Tensor[(420), float64], %var_11845: Tensor[(66), uint16], %var_11846: Tensor[(1536), float64], %var_11847: Tensor[(630), float32]) -> (Tensor[(3, 15, 11), float32], Tensor[(7, 4, 4), int8], Tensor[(16, 5, 6), bool], Tensor[(420), float64], Tensor[(480), int16], Tensor[(351), float32], Tensor[(1, 66), uint16], Tensor[(1120), float32], float32, Tensor[(66), uint16], Tensor[(3, 15, 11), float32], Tensor[(16, 8, 12), float64], Tensor[(1536), float64], Tensor[(14, 7, 16), bool], Tensor[(630), float32]) {
  %432 = fn (%var_11796: Tensor[(420), float64], %var_11803: Tensor[(66), uint16], %var_11808: Tensor[(1536), float64], %var_11811: Tensor[(630), float32]) -> (Tensor[(3, 15, 11), float32], Tensor[(7, 4, 4), int8], Tensor[(16, 5, 6), bool], Tensor[(420), float64], Tensor[(480), int16], Tensor[(351), float32], Tensor[(1, 66), uint16], Tensor[(1120), float32], float32, Tensor[(66), uint16], Tensor[(3, 15, 11), float32], Tensor[(16, 8, 12), float64], Tensor[(1536), float64], Tensor[(14, 7, 16), bool], Tensor[(630), float32]) {
    %401 = @func_10202() /* ty=(Tensor[(3, 15, 11), float32], Tensor[(7, 4, 4), int8]) */;
    %402 = cast(%var_11796, dtype="float64") /* ty=Tensor[(420), float64] */;
    %403 = cast(meta[relay.Constant][30] /* ty=Tensor[(480), int16] */, dtype="int16") /* ty=Tensor[(480), int16] */;
    %404 = cast(meta[relay.Constant][31] /* ty=Tensor[(351), float32] */, dtype="float32") /* ty=Tensor[(351), float32] */;
    %405 = reshape(%402, newshape=[5, 84]) /* ty=Tensor[(5, 84), float64] */;
    %406 = reshape(%403, newshape=[480]) /* ty=Tensor[(480), int16] */;
    %407 = reshape(%404, newshape=[351]) /* ty=Tensor[(351), float32] */;
    %408 = @func_9214(%405, %406, %407) /* ty=(Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float32], Tensor[(5, 84), float64], Tensor[(16, 5, 6), bool], Tensor[(480), int16], Tensor[(1536), float64], Tensor[(351), float32]) */;
    %409 = cast(meta[relay.Constant][32] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
    %410 = cast(-9.82224f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %411 = cast(%var_11803, dtype="uint16") /* ty=Tensor[(66), uint16] */;
    %412 = reshape(%409, newshape=[16, 7, 10]) /* ty=Tensor[(16, 7, 10), float32] */;
    %413 = reshape(%410, newshape=[]) /* ty=float32 */;
    %414 = reshape(%411, newshape=[1, 66]) /* ty=Tensor[(1, 66), uint16] */;
    %415 = @func_3642(%412, %413, %414) /* ty=(Tensor[(16, 7, 10), int16], Tensor[(16, 7, 10), float64], Tensor[(5, 16, 13), int8], Tensor[(8, 130), int64], Tensor[(1040), int64], float32, Tensor[(1, 66), uint16]) */;
    %416 = @func_9439() /* ty=(Tensor[(3, 15, 11), float32],) */;
    %417 = cast(%var_11808, dtype="float64") /* ty=Tensor[(1536), float64] */;
    %418 = reshape(%417, newshape=[16, 8, 12]) /* ty=Tensor[(16, 8, 12), float64] */;
    %419 = @func_2264(%418) /* ty=(Tensor[(16, 8, 12), float64],) */;
    %420 = %401.1;
    %421 = cast(%420, dtype="int8") /* ty=Tensor[(7, 4, 4), int8] */;
    %422 = cast(%var_11811, dtype="float32") /* ty=Tensor[(630), float32] */;
    %423 = reshape(%421, newshape=[7, 4, 4]) /* ty=Tensor[(7, 4, 4), int8] */;
    %424 = reshape(%422, newshape=[630]) /* ty=Tensor[(630), float32] */;
    %425 = @func_11510(%423, %424) /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32], Tensor[(14, 7, 16), bool], Tensor[(630), float32], Tensor[(14, 15, 3), float32]) */;
    %426 = @func_8407() /* ty=Tensor[(3, 15, 11), float32] */;
    %427 = %408.4;
    %428 = %415.6;
    %429 = %416.0;
    %430 = %419.0;
    %431 = %425.2;
    (%426, %420, %427, %var_11796, meta[relay.Constant][30] /* ty=Tensor[(480), int16] */, meta[relay.Constant][31] /* ty=Tensor[(351), float32] */, %428, meta[relay.Constant][32] /* ty=Tensor[(1120), float32] */, -9.82224f /* ty=float32 */, %var_11803, %429, %430, %var_11808, %431, %var_11811)
  };
  %432(%var_11844, %var_11845, %var_11846, %var_11847) /* ty=(Tensor[(3, 15, 11), float32], Tensor[(7, 4, 4), int8], Tensor[(16, 5, 6), bool], Tensor[(420), float64], Tensor[(480), int16], Tensor[(351), float32], Tensor[(1, 66), uint16], Tensor[(1120), float32], float32, Tensor[(66), uint16], Tensor[(3, 15, 11), float32], Tensor[(16, 8, 12), float64], Tensor[(1536), float64], Tensor[(14, 7, 16), bool], Tensor[(630), float32]) */
}

def @func_11513(%var_11511: Tensor[(7, 4, 4), int8], %var_11512: Tensor[(630), float32]) -> (Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32], Tensor[(14, 7, 16), bool], Tensor[(630), float32], Tensor[(14, 15, 3), float32]) {
  %449 = fn (%var_11479: Tensor[(7, 4, 4), int8], %var_11493: Tensor[(630), float32]) -> (Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32], Tensor[(14, 7, 16), bool], Tensor[(630), float32], Tensor[(14, 15, 3), float32]) {
    %433 = @func_10202() /* ty=(Tensor[(3, 15, 11), float32], Tensor[(7, 4, 4), int8]) */;
    %434 = %433.1;
    %435 = cast(%var_11479, dtype="float32") /* ty=Tensor[(7, 4, 4), float32] */;
    %436 = shape_of(%434, dtype="int32") /* ty=Tensor[(3), int32] */;
    %437 = cast(%434, dtype="float32") /* ty=Tensor[(7, 4, 4), float32] */;
    %438 = dyn.reshape(%435, %436, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %439 = cast(%434, dtype="float32") /* ty=Tensor[(7, 4, 4), float32] */;
    %440 = cast(%var_11493, dtype="float32") /* ty=Tensor[(630), float32] */;
    %441 = reshape(%440, newshape=[630]) /* ty=Tensor[(630), float32] */;
    %442 = @func_10000(%441) /* ty=(Tensor[(256), uint16], Tensor[(14, 7, 16), bool], Tensor[(1568), uint32], Tensor[(9, 156), float64], Tensor[(14, 15, 3), float32], Tensor[(630), float32]) */;
    %443 = cast(%var_11493, dtype="float32") /* ty=Tensor[(630), float32] */;
    %444 = reshape(%443, newshape=[14, 15, 3]) /* ty=Tensor[(14, 15, 3), float32] */;
    %445 = divide(%437, %438) /* ty=Tensor[(7, 4, 4), float32] */;
    %446 = sinh(%439) /* ty=Tensor[(7, 4, 4), float32] */;
    %447 = %442.1;
    %448 = @func_8742(%444) /* ty=Tensor[(14, 15, 3), float32] */;
    (%445, %446, %447, %var_11493, %448)
  };
  %449(%var_11511, %var_11512) /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32], Tensor[(14, 7, 16), bool], Tensor[(630), float32], Tensor[(14, 15, 3), float32]) */
}

def @func_10032() -> Tensor[(256), uint16] {
  @func_10030() /* ty=Tensor[(256), uint16] */
}

def @func_11979() -> Tensor[(8, 14, 3), bool] {
  %450 = @func_11361() /* ty=(Tensor[(14, 3, 10), float64], Tensor[(420), float64], Tensor[(8, 14, 3), bool]) */;
  %450.2
}

def @func_2222(%var_2217: Tensor[(16, 6, 7), bool], %var_2218: Tensor[(16, 6, 7), bool], %var_2219: Tensor[(6, 2), float64], %var_2220: Tensor[(66, 1), uint16], %var_2221: Tensor[(12480), float64]) -> (Tensor[(16, 6, 7), bool], Tensor[(8, 130), int64], Tensor[(6, 2), float64], Tensor[(1040), int64], Tensor[(66, 1), uint16], Tensor[(12480), float64], Tensor[(3, 4, 1040), float64]) {
  @func_2215(%var_2217, %var_2218, %var_2219, %var_2220, %var_2221) /* ty=(Tensor[(16, 6, 7), bool], Tensor[(8, 130), int64], Tensor[(6, 2), float64], Tensor[(1040), int64], Tensor[(66, 1), uint16], Tensor[(12480), float64], Tensor[(3, 4, 1040), float64]) */
}

def @func_10598() -> Tensor[(3, 15, 11), int64] {
  %451 = @func_9141() /* ty=(Tensor[(256), uint16], Tensor[(3, 15, 11), int16], Tensor[(3, 15, 11), int64]) */;
  %451.2
}

def @func_8690(%var_8688: Tensor[(3, 15, 11), float32], %var_8689: Tensor[(3, 15, 11), float32]) -> (Tensor[(8, 14, 3), int16], Tensor[(8, 14, 3), int16], Tensor[(3, 15, 11), int64], Tensor[(3, 15, 11), int8], Tensor[(3, 15, 11), uint32]) {
  %473 = fn (%var_8646: Tensor[(3, 15, 11), float32], %var_8662: Tensor[(3, 15, 11), float32]) -> (Tensor[(8, 14, 3), int16], Tensor[(8, 14, 3), int16], Tensor[(3, 15, 11), int64], Tensor[(3, 15, 11), int8], Tensor[(3, 15, 11), uint32]) {
    %452 = @func_8000() /* ty=(Tensor[(3, 15, 11), float32], Tensor[(8, 130), int64], Tensor[(256), uint16]) */;
    %453 = %452.0;
    %454 = cast(%var_8646, dtype="int64") /* ty=Tensor[(3, 15, 11), int64] */;
    %455 = shape_of(%453, dtype="int32") /* ty=Tensor[(3), int32] */;
    %456 = cast(%453, dtype="int64") /* ty=Tensor[(3, 15, 11), int64] */;
    %457 = dyn.reshape(%454, %455, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %458 = @func_8375() /* ty=(Tensor[(3, 15, 11), float32],) */;
    %459 = %458.0;
    %460 = cast(%var_8662, dtype="int8") /* ty=Tensor[(3, 15, 11), int8] */;
    %461 = shape_of(%459, dtype="int32") /* ty=Tensor[(3), int32] */;
    %462 = cast(%459, dtype="int8") /* ty=Tensor[(3, 15, 11), int8] */;
    %463 = dyn.reshape(%460, %461, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %464 = cast(%459, dtype="uint32") /* ty=Tensor[(3, 15, 11), uint32] */;
    %465 = shape_of(%var_8646, dtype="int32") /* ty=Tensor[(3), int32] */;
    %466 = cast(%var_8646, dtype="uint32") /* ty=Tensor[(3, 15, 11), uint32] */;
    %467 = dyn.reshape(%464, %465, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %468 = @func_8297() /* ty=Tensor[(8, 14, 3), int16] */;
    %469 = @func_8297() /* ty=Tensor[(8, 14, 3), int16] */;
    %470 = minimum(%456, %457) /* ty=Tensor[(3, 15, 11), int64] */;
    %471 = logical_xor(%462, %463) /* ty=Tensor[(3, 15, 11), int8] */;
    %472 = bitwise_and(%466, %467) /* ty=Tensor[(3, 15, 11), uint32] */;
    (%468, %469, %470, %471, %472)
  };
  %473(%var_8688, %var_8689) /* ty=(Tensor[(8, 14, 3), int16], Tensor[(8, 14, 3), int16], Tensor[(3, 15, 11), int64], Tensor[(3, 15, 11), int8], Tensor[(3, 15, 11), uint32]) */
}

def @func_902(%var_900: Tensor[(5, 10, 14), float32], %var_901: Tensor[(5, 10, 14), float32]) -> (Tensor[(5, 10, 14), bool],) {
  %479 = fn (%var_892: Tensor[(5, 10, 14), float32], %var_893: Tensor[(5, 10, 14), float32]) -> (Tensor[(5, 10, 14), bool],) {
    %474 = cast(%var_893, dtype="bool") /* ty=Tensor[(5, 10, 14), bool] */;
    %475 = shape_of(%var_892, dtype="int32") /* ty=Tensor[(3), int32] */;
    %476 = cast(%var_892, dtype="bool") /* ty=Tensor[(5, 10, 14), bool] */;
    %477 = dyn.reshape(%474, %475, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %478 = greater_equal(%476, %477) /* ty=Tensor[(5, 10, 14), bool] */;
    (%478,)
  };
  %479(%var_900, %var_901) /* ty=(Tensor[(5, 10, 14), bool],) */
}

def @func_11136() -> Tensor[(3, 15, 11), int64] {
  %480 = @func_9141() /* ty=(Tensor[(256), uint16], Tensor[(3, 15, 11), int16], Tensor[(3, 15, 11), int64]) */;
  %480.2
}

def @func_9366() -> Tensor[(256), uint16] {
  %481 = @func_8000() /* ty=(Tensor[(3, 15, 11), float32], Tensor[(8, 130), int64], Tensor[(256), uint16]) */;
  %481.2
}

def @func_2874(%var_2872: Tensor[(9, 12, 13), float64]) -> (Tensor[(9, 12, 13), float64],) {
  @func_2871(%var_2872) /* ty=(Tensor[(9, 12, 13), float64],) */
}

def @func_10777() -> (Tensor[(8, 14, 3), float32], Tensor[(8, 14, 3), float32]) {
  %488 = fn () -> (Tensor[(8, 14, 3), float32], Tensor[(8, 14, 3), float32]) {
    %482 = @func_10373() /* ty=(Tensor[(8, 14, 3), int16],) */;
    %483 = %482.0;
    %484 = cast(%483, dtype="float32") /* ty=Tensor[(8, 14, 3), float32] */;
    %485 = cast(%483, dtype="float32") /* ty=Tensor[(8, 14, 3), float32] */;
    %486 = atan(%484) /* ty=Tensor[(8, 14, 3), float32] */;
    %487 = sinh(%485) /* ty=Tensor[(8, 14, 3), float32] */;
    (%486, %487)
  };
  %488() /* ty=(Tensor[(8, 14, 3), float32], Tensor[(8, 14, 3), float32]) */
}

def @func_6731(%var_6730: Tensor[(13, 2, 12), float32]) -> (Tensor[(13, 2, 12), float32], float64, Tensor[(143), float64], Tensor[(1, 13, 11), float32], Tensor[(16, 5, 6), bool], Tensor[(480), int16]) {
  %510 = fn (%var_6654: Tensor[(13, 2, 12), float32]) -> (Tensor[(13, 2, 12), float32], float64, Tensor[(143), float64], Tensor[(1, 13, 11), float32], Tensor[(16, 5, 6), bool], Tensor[(480), int16]) {
    %489 = cast(%var_6654, dtype="float32") /* ty=Tensor[(13, 2, 12), float32] */;
    %490 = rsqrt(%489) /* ty=Tensor[(13, 2, 12), float32] */;
    %491 = cast(%490, dtype="float32") /* ty=Tensor[(13, 2, 12), float32] */;
    %492 = cosh(%491) /* ty=Tensor[(13, 2, 12), float32] */;
    %493 = cast(%492, dtype="float32") /* ty=Tensor[(13, 2, 12), float32] */;
    %494 = shape_of(%490, dtype="int32") /* ty=Tensor[(3), int32] */;
    %495 = cast(%490, dtype="float32") /* ty=Tensor[(13, 2, 12), float32] */;
    %496 = dyn.reshape(%493, %494, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %497 = cast(8.53012f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %498 = cast(meta[relay.Constant][33] /* ty=Tensor[(143), float64] */, dtype="float64") /* ty=Tensor[(143), float64] */;
    %499 = reshape(%497, newshape=[]) /* ty=float64 */;
    %500 = reshape(%498, newshape=[1, 13, 11]) /* ty=Tensor[(1, 13, 11), float64] */;
    %501 = @func_3588(%499, %500) /* ty=(Tensor[(1, 13, 11), bool],) */;
    %502 = %501.0;
    %503 = cast(%502, dtype="float32") /* ty=Tensor[(1, 13, 11), float32] */;
    %504 = cast(meta[relay.Constant][34] /* ty=Tensor[(480), int16] */, dtype="int16") /* ty=Tensor[(480), int16] */;
    %505 = reshape(%504, newshape=[16, 5, 6]) /* ty=Tensor[(16, 5, 6), int16] */;
    %506 = @func_1118(%505) /* ty=(Tensor[(16, 5, 6), bool],) */;
    %507 = floor_divide(%495, %496) /* ty=Tensor[(13, 2, 12), float32] */;
    %508 = asinh(%503) /* ty=Tensor[(1, 13, 11), float32] */;
    %509 = %506.0;
    (%507, 8.53012f64 /* ty=float64 */, meta[relay.Constant][33] /* ty=Tensor[(143), float64] */, %508, %509, meta[relay.Constant][34] /* ty=Tensor[(480), int16] */)
  };
  %510(%var_6730) /* ty=(Tensor[(13, 2, 12), float32], float64, Tensor[(143), float64], Tensor[(1, 13, 11), float32], Tensor[(16, 5, 6), bool], Tensor[(480), int16]) */
}

def @func_8061(%var_8046: Tensor[(108), float32], %var_8047: Tensor[(192), uint8]) -> (Tensor[(256), uint16], Tensor[(12, 9, ?), int8], Tensor[(108), float32], Tensor[(192), uint8]) {
  %511 = @func_8000() /* ty=(Tensor[(3, 15, 11), float32], Tensor[(8, 130), int64], Tensor[(256), uint16]) */;
  %512 = cast(%var_8046, dtype="float32") /* ty=Tensor[(108), float32] */;
  %513 = cast(%var_8047, dtype="uint8") /* ty=Tensor[(192), uint8] */;
  %514 = reshape(%512, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), float32] */;
  %515 = reshape(%513, newshape=[192]) /* ty=Tensor[(192), uint8] */;
  %516 = @func_3753(%514, %515) /* ty=(Tensor[(16, 5, 6), bool], Tensor[(120, 4), int16], Tensor[(4, 6, 8), bool], Tensor[(192), uint8], Tensor[(12, 9, ?), int8], Tensor[(12, 9, 1), float64]) */;
  %517 = %511.2;
  %518 = %516.4;
  (%517, %518, %var_8046, %var_8047)
}

def @func_8742(%var_8722: Tensor[(14, 15, 3), float32]) -> Tensor[(14, 15, 3), float32] {
  %519 = cast(%var_8722, dtype="float32") /* ty=Tensor[(14, 15, 3), float32] */;
  sqrt(%519) /* ty=Tensor[(14, 15, 3), float32] */
}

def @func_9692() -> Tensor[(3, 15, 11), float32] {
  @func_8407() /* ty=Tensor[(3, 15, 11), float32] */
}

def @func_11558(%var_11557: Tensor[(16, 1, 15), float32]) -> (Tensor[(16, 1, 15), float32],) {
  %522 = fn (%var_11546: Tensor[(16, 1, 15), float32]) -> (Tensor[(16, 1, 15), float32],) {
    %520 = cast(%var_11546, dtype="float32") /* ty=Tensor[(16, 1, 15), float32] */;
    %521 = rsqrt(%520) /* ty=Tensor[(16, 1, 15), float32] */;
    (%521,)
  };
  %522(%var_11557) /* ty=(Tensor[(16, 1, 15), float32],) */
}

def @func_3753(%var_3702: Tensor[(12, 9, 1), float32], %var_3725: Tensor[(192), uint8]) -> (Tensor[(16, 5, 6), bool], Tensor[(120, 4), int16], Tensor[(4, 6, 8), bool], Tensor[(192), uint8], Tensor[(12, 9, ?), int8], Tensor[(12, 9, 1), float64]) {
  %523 = cast(meta[relay.Constant][35] /* ty=Tensor[(120, 4), int16] */, dtype="int16") /* ty=Tensor[(120, 4), int16] */;
  %524 = reshape(%523, newshape=[16, 5, 6]) /* ty=Tensor[(16, 5, 6), int16] */;
  %525 = @func_1118(%524) /* ty=(Tensor[(16, 5, 6), bool],) */;
  %526 = cast(%var_3725, dtype="uint8") /* ty=Tensor[(192), uint8] */;
  %527 = reshape(%526, newshape=[4, 6, 8]) /* ty=Tensor[(4, 6, 8), uint8] */;
  %528 = cast(%var_3702, dtype="float32") /* ty=Tensor[(12, 9, 1), float32] */;
  %529 = tan(%528) /* ty=Tensor[(12, 9, 1), float32] */;
  %530 = cast(%var_3702, dtype="int8") /* ty=Tensor[(12, 9, 1), int8] */;
  %531 = shape_of(%529, dtype="int32") /* ty=Tensor[(3), int32] */;
  %532 = cast(%529, dtype="int8") /* ty=Tensor[(12, 9, 1), int8] */;
  %533 = dyn.reshape(%530, %531, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %534 = cast(%529, dtype="float64") /* ty=Tensor[(12, 9, 1), float64] */;
  %535 = %525.0;
  %536 = @func_1352(%527) /* ty=Tensor[(4, 6, 8), bool] */;
  %537 = bitwise_or(%532, %533) /* ty=Tensor[(12, 9, ?), int8] */;
  %538 = cos(%534) /* ty=Tensor[(12, 9, 1), float64] */;
  (%535, meta[relay.Constant][35] /* ty=Tensor[(120, 4), int16] */, %536, %var_3725, %537, %538)
}

def @func_10030() -> Tensor[(256), uint16] {
  %539 = @func_8000() /* ty=(Tensor[(3, 15, 11), float32], Tensor[(8, 130), int64], Tensor[(256), uint16]) */;
  %539.2
}

def @func_10472(%var_10468: Tensor[(192), uint8], %var_10469: Tensor[(117), uint16], %var_10470: Tensor[(1404), float64], %var_10471: Tensor[(5, 84), float64]) -> (Tensor[(3, 15, 11), float32], Tensor[(4, 6, 8), bool], Tensor[(192), uint8], Tensor[(1040), int64], Tensor[(1755), float64], Tensor[(11, 6), uint16], Tensor[(39), uint16], Tensor[(117), uint16], Tensor[(1404), float64], Tensor[(5, 84), float64]) {
  @func_10466(%var_10468, %var_10469, %var_10470, %var_10471) /* ty=(Tensor[(3, 15, 11), float32], Tensor[(4, 6, 8), bool], Tensor[(192), uint8], Tensor[(1040), int64], Tensor[(1755), float64], Tensor[(11, 6), uint16], Tensor[(39), uint16], Tensor[(117), uint16], Tensor[(1404), float64], Tensor[(5, 84), float64]) */
}

def @func_9143() -> (Tensor[(256), uint16], Tensor[(3, 15, 11), int16], Tensor[(3, 15, 11), int64]) {
  @func_9141() /* ty=(Tensor[(256), uint16], Tensor[(3, 15, 11), int16], Tensor[(3, 15, 11), int64]) */
}

def @func_11863() -> Tensor[(3, 15, 11), float32] {
  @func_11861() /* ty=Tensor[(3, 15, 11), float32] */
}

def @func_8217(%var_8216: Tensor[(420), float64]) -> (Tensor[(3, 15, 11), float32], Tensor[(14, 3, 10), float64], Tensor[(420), float64]) {
  %545 = fn (%var_8202: Tensor[(420), float64]) -> (Tensor[(3, 15, 11), float32], Tensor[(14, 3, 10), float64], Tensor[(420), float64]) {
    %540 = cast(%var_8202, dtype="float64") /* ty=Tensor[(420), float64] */;
    %541 = reshape(%540, newshape=[5, 84]) /* ty=Tensor[(5, 84), float64] */;
    %542 = @func_8109(%541) /* ty=(Tensor[(3, 15, 11), float32], Tensor[(14, 3, 10), float64], Tensor[(5, 84), float64]) */;
    %543 = @func_7889() /* ty=Tensor[(3, 15, 11), float32] */;
    %544 = %542.1;
    (%543, %544, %var_8202)
  };
  %545(%var_8216) /* ty=(Tensor[(3, 15, 11), float32], Tensor[(14, 3, 10), float64], Tensor[(420), float64]) */
}

def @func_11230() -> (Tensor[(3, 15, 11), int64], Tensor[(5, 10, 14), bool], Tensor[(700), float32]) {
  %546 = cast(meta[relay.Constant][36] /* ty=Tensor[(700), float32] */, dtype="float32") /* ty=Tensor[(700), float32] */;
  %547 = cast(meta[relay.Constant][36] /* ty=Tensor[(700), float32] */, dtype="float32") /* ty=Tensor[(700), float32] */;
  %548 = reshape(%546, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), float32] */;
  %549 = reshape(%547, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), float32] */;
  %550 = @func_899(%548, %549) /* ty=(Tensor[(5, 10, 14), bool],) */;
  %551 = @func_11136() /* ty=Tensor[(3, 15, 11), int64] */;
  %552 = %550.0;
  (%551, %552, meta[relay.Constant][36] /* ty=Tensor[(700), float32] */)
}

def @func_12697(%var_12536: Tensor[(192), uint8], %var_12585: Tensor[(1404), float64]) -> (Tensor[(3, 15, 11), float32], Tensor[(16, 1, 15), float32], Tensor[(24, 10), float32], Tensor[(4, 6, 8), bool], Tensor[(192), uint8], Tensor[(7, 4, 4), int8], Tensor[(1568), uint32], Tensor[(1404), float64], Tensor[(4, 6, 8), bool], Tensor[(117), uint16], Tensor[(420), float64], Tensor[(14, 7, 16), int64]) {
  %553 = cast(meta[relay.Constant][37] /* ty=Tensor[(24, 10), float32] */, dtype="float32") /* ty=Tensor[(24, 10), float32] */;
  %554 = reshape(%553, newshape=[16, 1, 15]) /* ty=Tensor[(16, 1, 15), float32] */;
  %555 = @func_11556(%554) /* ty=(Tensor[(16, 1, 15), float32],) */;
  %556 = cast(%var_12536, dtype="uint8") /* ty=Tensor[(192), uint8] */;
  %557 = reshape(%556, newshape=[4, 6, 8]) /* ty=Tensor[(4, 6, 8), uint8] */;
  %558 = cast(%var_12536, dtype="uint8") /* ty=Tensor[(192), uint8] */;
  %559 = cast(meta[relay.Constant][39] /* ty=Tensor[(117), uint16] */, dtype="uint16") /* ty=Tensor[(117), uint16] */;
  %560 = cast(%var_12585, dtype="float64") /* ty=Tensor[(1404), float64] */;
  %561 = cast(meta[relay.Constant][40] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %562 = reshape(%558, newshape=[192]) /* ty=Tensor[(192), uint8] */;
  %563 = reshape(%559, newshape=[117]) /* ty=Tensor[(117), uint16] */;
  %564 = reshape(%560, newshape=[1404]) /* ty=Tensor[(1404), float64] */;
  %565 = reshape(%561, newshape=[5, 84]) /* ty=Tensor[(5, 84), float64] */;
  %566 = @func_10466(%562, %563, %564, %565) /* ty=(Tensor[(3, 15, 11), float32], Tensor[(4, 6, 8), bool], Tensor[(192), uint8], Tensor[(1040), int64], Tensor[(1755), float64], Tensor[(11, 6), uint16], Tensor[(39), uint16], Tensor[(117), uint16], Tensor[(1404), float64], Tensor[(5, 84), float64]) */;
  %567 = cast(meta[relay.Constant][38] /* ty=Tensor[(1568), uint32] */, dtype="uint32") /* ty=Tensor[(1568), uint32] */;
  %568 = cast(%var_12585, dtype="float64") /* ty=Tensor[(1404), float64] */;
  %569 = reshape(%567, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), uint32] */;
  %570 = reshape(%568, newshape=[1404]) /* ty=Tensor[(1404), float64] */;
  %571 = @func_4219(%569, %570) /* ty=(Tensor[(14, 7, 16), bool], Tensor[(9, 12, 13), float64], Tensor[(1404), float64]) */;
  %572 = %571.0;
  %573 = cast(%572, dtype="float32") /* ty=Tensor[(14, 7, 16), float32] */;
  %574 = acos(%573) /* ty=Tensor[(14, 7, 16), float32] */;
  %575 = cast(meta[relay.Constant][41] /* ty=Tensor[(14, 7, 16), float32] */, dtype="int64") /* ty=Tensor[(14, 7, 16), int64] */;
  %576 = shape_of(%574, dtype="int32") /* ty=Tensor[(3), int32] */;
  %577 = cast(%574, dtype="int64") /* ty=Tensor[(14, 7, 16), int64] */;
  %578 = dyn.reshape(%575, %576, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %579 = @func_8136() /* ty=Tensor[(3, 15, 11), float32] */;
  %580 = %555.0;
  %581 = @func_1352(%557) /* ty=Tensor[(4, 6, 8), bool] */;
  %582 = @func_9600() /* ty=Tensor[(7, 4, 4), int8] */;
  %583 = %566.1;
  %584 = multiply(%577, %578) /* ty=Tensor[(14, 7, 16), int64] */;
  (%579, %580, meta[relay.Constant][37] /* ty=Tensor[(24, 10), float32] */, %581, %var_12536, %582, meta[relay.Constant][38] /* ty=Tensor[(1568), uint32] */, %var_12585, %583, meta[relay.Constant][39] /* ty=Tensor[(117), uint16] */, meta[relay.Constant][40] /* ty=Tensor[(420), float64] */, %584)
}

def @func_8446() -> (Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float32]) {
  %585 = @func_7889() /* ty=Tensor[(3, 15, 11), float32] */;
  %586 = @func_8407() /* ty=Tensor[(3, 15, 11), float32] */;
  (%585, %586)
}

def @func_4007(%var_4006: uint8) -> (Tensor[(2, 14, 2), float64], Tensor[(2, 14, 2), bool]) {
  %600 = fn (%var_3954: uint8) -> (Tensor[(2, 14, 2), float64], Tensor[(2, 14, 2), bool]) {
    %587 = cast(%var_3954, dtype="uint8") /* ty=uint8 */;
    %588 = cast(meta[relay.Constant][42] /* ty=Tensor[(2, 14, 2), uint8] */, dtype="uint8") /* ty=Tensor[(2, 14, 2), uint8] */;
    %589 = subtract(%587, %588) /* ty=Tensor[(2, 14, 2), uint8] */;
    %590 = cast(%var_3954, dtype="float64") /* ty=float64 */;
    %591 = cast(%589, dtype="float64") /* ty=Tensor[(2, 14, 2), float64] */;
    %592 = cast(meta[relay.Constant][42] /* ty=Tensor[(2, 14, 2), uint8] */, dtype="float64") /* ty=Tensor[(2, 14, 2), float64] */;
    %593 = atan(%592) /* ty=Tensor[(2, 14, 2), float64] */;
    %594 = cast(meta[relay.Constant][42] /* ty=Tensor[(2, 14, 2), uint8] */, dtype="bool") /* ty=Tensor[(2, 14, 2), bool] */;
    %595 = shape_of(%593, dtype="int32") /* ty=Tensor[(3), int32] */;
    %596 = cast(%593, dtype="bool") /* ty=Tensor[(2, 14, 2), bool] */;
    %597 = dyn.reshape(%594, %595, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %598 = floor_divide(%590, %591) /* ty=Tensor[(2, 14, 2), float64] */;
    %599 = logical_or(%596, %597) /* ty=Tensor[(2, 14, 2), bool] */;
    (%598, %599)
  };
  %600(%var_4006) /* ty=(Tensor[(2, 14, 2), float64], Tensor[(2, 14, 2), bool]) */
}

def @func_11138() -> Tensor[(3, 15, 11), int64] {
  @func_11136() /* ty=Tensor[(3, 15, 11), int64] */
}

def @func_11536(%var_11535: Tensor[(16, 9, 14), int16]) -> (Tensor[(16, 9, 14), int16],) {
  %606 = fn (%var_11526: Tensor[(16, 9, 14), int16]) -> (Tensor[(16, 9, 14), int16],) {
    %601 = cast(meta[relay.Constant][43] /* ty=Tensor[(16, 9, 14), int16] */, dtype="int16") /* ty=Tensor[(16, 9, 14), int16] */;
    %602 = shape_of(%var_11526, dtype="int32") /* ty=Tensor[(3), int32] */;
    %603 = cast(%var_11526, dtype="int16") /* ty=Tensor[(16, 9, 14), int16] */;
    %604 = dyn.reshape(%601, %602, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %605 = right_shift(%603, %604) /* ty=Tensor[(16, 9, 14), int16] */;
    (%605,)
  };
  %606(%var_11535) /* ty=(Tensor[(16, 9, 14), int16],) */
}

def @func_8150() -> (Tensor[(3, 15, 11), float32],) {
  %607 = @func_8136() /* ty=Tensor[(3, 15, 11), float32] */;
  (%607,)
}

def @func_11283(%var_11279: float64, %var_11280: Tensor[(143), float64]) -> (Tensor[(3, 15, 11), int64], Tensor[(1, 13, 11), bool], float64, Tensor[(143), float64]) {
  %608 = cast(%var_11279, dtype="float64") /* ty=float64 */;
  %609 = cast(%var_11280, dtype="float64") /* ty=Tensor[(143), float64] */;
  %610 = reshape(%608, newshape=[]) /* ty=float64 */;
  %611 = reshape(%609, newshape=[1, 13, 11]) /* ty=Tensor[(1, 13, 11), float64] */;
  %612 = @func_3588(%610, %611) /* ty=(Tensor[(1, 13, 11), bool],) */;
  %613 = @func_11136() /* ty=Tensor[(3, 15, 11), int64] */;
  %614 = %612.0;
  (%613, %614, %var_11279, %var_11280)
}

def @func_10375() -> (Tensor[(8, 14, 3), int16],) {
  @func_10373() /* ty=(Tensor[(8, 14, 3), int16],) */
}

def @func_10003(%var_10001: Tensor[(630), float32]) -> (Tensor[(256), uint16], Tensor[(14, 7, 16), bool], Tensor[(1568), uint32], Tensor[(9, 156), float64], Tensor[(14, 15, 3), float32], Tensor[(630), float32]) {
  @func_10000(%var_10001) /* ty=(Tensor[(256), uint16], Tensor[(14, 7, 16), bool], Tensor[(1568), uint32], Tensor[(9, 156), float64], Tensor[(14, 15, 3), float32], Tensor[(630), float32]) */
}

def @func_9494() -> Tensor[(8, 14, 3), int16] {
  @func_9492() /* ty=Tensor[(8, 14, 3), int16] */
}

def @func_12405() -> (Tensor[(3, 15, 11), float32],) {
  %615 = @func_8150() /* ty=(Tensor[(3, 15, 11), float32],) */;
  %616 = %615.0;
  (%616,)
}

def @func_2977(%var_2958: float32, %var_2967: Tensor[(66), uint16], %var_2969: Tensor[(1040), int64]) -> (Tensor[(9, 2, 5), bool], Tensor[(16, ?, 16), bool], Tensor[(66), uint16], Tensor[(858), uint16], Tensor[(1040), int64]) {
  %617 = cast(%var_2958, dtype="bool") /* ty=bool */;
  %618 = cast(meta[relay.Constant][44] /* ty=Tensor[(9, 2, 5), float32] */, dtype="bool") /* ty=Tensor[(9, 2, 5), bool] */;
  %619 = cast(%var_2967, dtype="uint16") /* ty=Tensor[(66), uint16] */;
  %620 = cast(meta[relay.Constant][45] /* ty=Tensor[(858), uint16] */, dtype="uint16") /* ty=Tensor[(858), uint16] */;
  %621 = cast(%var_2969, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %622 = reshape(%619, newshape=[11, 6, 1]) /* ty=Tensor[(11, 6, 1), uint16] */;
  %623 = reshape(%620, newshape=[11, 6, 13]) /* ty=Tensor[(11, 6, 13), uint16] */;
  %624 = reshape(%621, newshape=[1040]) /* ty=Tensor[(1040), int64] */;
  %625 = @func_581(%622, %623, %624) /* ty=(Tensor[(11, 6, 13), uint16], Tensor[(16, ?, 16), bool], Tensor[(256), uint16], Tensor[(1040), float32], Tensor[(1040), int8], Tensor[(5, 16, 13), int8], Tensor[(5, 16, 13), int8]) */;
  %626 = equal(%617, %618) /* ty=Tensor[(9, 2, 5), bool] */;
  %627 = %625.1;
  (%626, %627, %var_2967, meta[relay.Constant][45] /* ty=Tensor[(858), uint16] */, %var_2969)
}

def @func_10083() -> (Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float32], Tensor[(5, 16, 13), int8], Tensor[(1040), int64]) {
  %640 = fn () -> (Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float32], Tensor[(5, 16, 13), int8], Tensor[(1040), int64]) {
    %628 = @func_8150() /* ty=(Tensor[(3, 15, 11), float32],) */;
    %629 = %628.0;
    %630 = cast(%629, dtype="float32") /* ty=Tensor[(3, 15, 11), float32] */;
    %631 = cast(%629, dtype="float32") /* ty=Tensor[(3, 15, 11), float32] */;
    %632 = cast(meta[relay.Constant][46] /* ty=Tensor[(1040), int64] */, dtype="int64") /* ty=Tensor[(1040), int64] */;
    %633 = cast(meta[relay.Constant][46] /* ty=Tensor[(1040), int64] */, dtype="int64") /* ty=Tensor[(1040), int64] */;
    %634 = reshape(%632, newshape=[5, 16, 13]) /* ty=Tensor[(5, 16, 13), int64] */;
    %635 = reshape(%633, newshape=[5, 16, 13]) /* ty=Tensor[(5, 16, 13), int64] */;
    %636 = @func_297(%634, %635) /* ty=(Tensor[(5, 16, 13), int8],) */;
    %637 = cos(%630) /* ty=Tensor[(3, 15, 11), float32] */;
    %638 = acos(%631) /* ty=Tensor[(3, 15, 11), float32] */;
    %639 = %636.0;
    (%637, %638, %639, meta[relay.Constant][46] /* ty=Tensor[(1040), int64] */)
  };
  %640() /* ty=(Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float32], Tensor[(5, 16, 13), int8], Tensor[(1040), int64]) */
}

def @func_8000() -> (Tensor[(3, 15, 11), float32], Tensor[(8, 130), int64], Tensor[(256), uint16]) {
  %641 = cast(meta[relay.Constant][47] /* ty=Tensor[(256), uint16] */, dtype="uint16") /* ty=Tensor[(256), uint16] */;
  %642 = cast(meta[relay.Constant][47] /* ty=Tensor[(256), uint16] */, dtype="uint16") /* ty=Tensor[(256), uint16] */;
  %643 = reshape(%641, newshape=[16, 1, 16]) /* ty=Tensor[(16, 1, 16), uint16] */;
  %644 = reshape(%642, newshape=[16, 1, 16]) /* ty=Tensor[(16, 1, 16), uint16] */;
  %645 = @func_537(%643, %644) /* ty=(Tensor[(16, ?, 16), bool], Tensor[(5, 16, 13), int8], Tensor[(8, 130), int64]) */;
  %646 = @func_7889() /* ty=Tensor[(3, 15, 11), float32] */;
  %647 = %645.2;
  (%646, %647, meta[relay.Constant][47] /* ty=Tensor[(256), uint16] */)
}

def @func_2215(%var_2195: Tensor[(16, 6, 7), bool], %var_2196: Tensor[(16, 6, 7), bool], %var_2208: Tensor[(6, 2), float64], %var_2210: Tensor[(66, 1), uint16], %var_2211: Tensor[(12480), float64]) -> (Tensor[(16, 6, 7), bool], Tensor[(8, 130), int64], Tensor[(6, 2), float64], Tensor[(1040), int64], Tensor[(66, 1), uint16], Tensor[(12480), float64], Tensor[(3, 4, 1040), float64]) {
  %648 = cast(%var_2196, dtype="bool") /* ty=Tensor[(16, 6, 7), bool] */;
  %649 = shape_of(%var_2195, dtype="int32") /* ty=Tensor[(3), int32] */;
  %650 = cast(%var_2195, dtype="bool") /* ty=Tensor[(16, 6, 7), bool] */;
  %651 = dyn.reshape(%648, %649, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %652 = cast(%var_2208, dtype="float64") /* ty=Tensor[(6, 2), float64] */;
  %653 = cast(meta[relay.Constant][48] /* ty=Tensor[(1040), int64] */, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %654 = cast(%var_2210, dtype="uint16") /* ty=Tensor[(66, 1), uint16] */;
  %655 = cast(%var_2211, dtype="float64") /* ty=Tensor[(12480), float64] */;
  %656 = reshape(%652, newshape=[3, 4, 1]) /* ty=Tensor[(3, 4, 1), float64] */;
  %657 = reshape(%653, newshape=[1040]) /* ty=Tensor[(1040), int64] */;
  %658 = reshape(%654, newshape=[66]) /* ty=Tensor[(66), uint16] */;
  %659 = reshape(%655, newshape=[3, 4, 1040]) /* ty=Tensor[(3, 4, 1040), float64] */;
  %660 = @func_1283(%656, %657, %658, %659) /* ty=(Tensor[(5, 16, 13), int8], Tensor[(8, 130), int64], Tensor[(1040), int8], Tensor[(256, 858), bool], Tensor[(256, 66), uint16], Tensor[(3, 4, 1040), float64]) */;
  %661 = cast(%var_2208, dtype="float64") /* ty=Tensor[(6, 2), float64] */;
  %662 = cast(meta[relay.Constant][48] /* ty=Tensor[(1040), int64] */, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %663 = cast(%var_2210, dtype="uint16") /* ty=Tensor[(66, 1), uint16] */;
  %664 = cast(%var_2211, dtype="float64") /* ty=Tensor[(12480), float64] */;
  %665 = reshape(%661, newshape=[3, 4, 1]) /* ty=Tensor[(3, 4, 1), float64] */;
  %666 = reshape(%662, newshape=[1040]) /* ty=Tensor[(1040), int64] */;
  %667 = reshape(%663, newshape=[66]) /* ty=Tensor[(66), uint16] */;
  %668 = reshape(%664, newshape=[3, 4, 1040]) /* ty=Tensor[(3, 4, 1040), float64] */;
  %669 = @func_1283(%665, %666, %667, %668) /* ty=(Tensor[(5, 16, 13), int8], Tensor[(8, 130), int64], Tensor[(1040), int8], Tensor[(256, 858), bool], Tensor[(256, 66), uint16], Tensor[(3, 4, 1040), float64]) */;
  %670 = logical_or(%650, %651) /* ty=Tensor[(16, 6, 7), bool] */;
  %671 = %660.1;
  %672 = %669.5;
  (%670, %671, %var_2208, meta[relay.Constant][48] /* ty=Tensor[(1040), int64] */, %var_2210, %var_2211, %672)
}

def @func_7351(%var_7347: Tensor[(13, 3, 1), uint16], %var_7348: Tensor[(13, 3, 3), uint16], %var_7349: Tensor[(1404), float64], %var_7350: Tensor[(5, 84), float64]) -> (Tensor[(13, 3, 3), bool], Tensor[(13, 3, 3), uint32], Tensor[(1568), uint32], Tensor[(14, 3, 10), float64], Tensor[(5, 84), float64], Tensor[(1404), bool], Tensor[(13, 3, 1404), float32]) {
  @func_7345(%var_7347, %var_7348, %var_7349, %var_7350) /* ty=(Tensor[(13, 3, 3), bool], Tensor[(13, 3, 3), uint32], Tensor[(1568), uint32], Tensor[(14, 3, 10), float64], Tensor[(5, 84), float64], Tensor[(1404), bool], Tensor[(13, 3, 1404), float32]) */
}

def @func_9863() -> (Tensor[(8, 14, 3), int16],) {
  %673 = @func_8297() /* ty=Tensor[(8, 14, 3), int16] */;
  (%673,)
}

def @func_8002() -> (Tensor[(3, 15, 11), float32], Tensor[(8, 130), int64], Tensor[(256), uint16]) {
  @func_8000() /* ty=(Tensor[(3, 15, 11), float32], Tensor[(8, 130), int64], Tensor[(256), uint16]) */
}

def @func_5823(%var_5820: Tensor[(9, 13, 3), float32], %var_5821: Tensor[(9, 13, 3), float32], %var_5822: Tensor[(9, 13, 3), float32]) -> (Tensor[(9, 13, 3), float32], Tensor[(16, 8, 12), float64], Tensor[(1536), float64], Tensor[(9, 13, 3), int16], Tensor[(9, 12, 13), float64], Tensor[(3, 468), float64]) {
  %692 = fn (%var_5794: Tensor[(9, 13, 3), float32], %var_5795: Tensor[(9, 13, 3), float32], %var_5804: Tensor[(9, 13, 3), float32]) -> (Tensor[(9, 13, 3), float32], Tensor[(16, 8, 12), float64], Tensor[(1536), float64], Tensor[(9, 13, 3), int16], Tensor[(9, 12, 13), float64], Tensor[(3, 468), float64]) {
    %674 = cast(%var_5795, dtype="float32") /* ty=Tensor[(9, 13, 3), float32] */;
    %675 = shape_of(%var_5794, dtype="int32") /* ty=Tensor[(3), int32] */;
    %676 = cast(%var_5794, dtype="float32") /* ty=Tensor[(9, 13, 3), float32] */;
    %677 = dyn.reshape(%674, %675, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %678 = cast(meta[relay.Constant][49] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
    %679 = reshape(%678, newshape=[16, 8, 12]) /* ty=Tensor[(16, 8, 12), float64] */;
    %680 = @func_2264(%679) /* ty=(Tensor[(16, 8, 12), float64],) */;
    %681 = cast(%var_5804, dtype="int16") /* ty=Tensor[(9, 13, 3), int16] */;
    %682 = shape_of(%var_5795, dtype="int32") /* ty=Tensor[(3), int32] */;
    %683 = cast(%var_5795, dtype="int16") /* ty=Tensor[(9, 13, 3), int16] */;
    %684 = dyn.reshape(%681, %682, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %685 = cast(meta[relay.Constant][50] /* ty=Tensor[(3, 468), float64] */, dtype="float64") /* ty=Tensor[(3, 468), float64] */;
    %686 = reshape(%685, newshape=[9, 12, 13]) /* ty=Tensor[(9, 12, 13), float64] */;
    %687 = @func_2871(%686) /* ty=(Tensor[(9, 12, 13), float64],) */;
    %688 = floor_mod(%676, %677) /* ty=Tensor[(9, 13, 3), float32] */;
    %689 = %680.0;
    %690 = maximum(%683, %684) /* ty=Tensor[(9, 13, 3), int16] */;
    %691 = %687.0;
    (%688, %689, meta[relay.Constant][49] /* ty=Tensor[(1536), float64] */, %690, %691, meta[relay.Constant][50] /* ty=Tensor[(3, 468), float64] */)
  };
  %692(%var_5820, %var_5821, %var_5822) /* ty=(Tensor[(9, 13, 3), float32], Tensor[(16, 8, 12), float64], Tensor[(1536), float64], Tensor[(9, 13, 3), int16], Tensor[(9, 12, 13), float64], Tensor[(3, 468), float64]) */
}

def @func_586(%var_583: Tensor[(11, 6, 1), uint16], %var_584: Tensor[(11, 6, 13), uint16], %var_585: Tensor[(1040), int64]) -> (Tensor[(11, 6, 13), uint16], Tensor[(16, ?, 16), bool], Tensor[(256), uint16], Tensor[(1040), float32], Tensor[(1040), int8], Tensor[(5, 16, 13), int8], Tensor[(5, 16, 13), int8]) {
  @func_581(%var_583, %var_584, %var_585) /* ty=(Tensor[(11, 6, 13), uint16], Tensor[(16, ?, 16), bool], Tensor[(256), uint16], Tensor[(1040), float32], Tensor[(1040), int8], Tensor[(5, 16, 13), int8], Tensor[(5, 16, 13), int8]) */
}

def @func_9939(%var_9937: Tensor[(13, 5, 14), bool], %var_9938: Tensor[(13, 5, 14), bool]) -> Tensor[(13, 5, 14), bool] {
  @func_9935(%var_9937, %var_9938) /* ty=Tensor[(13, 5, 14), bool] */
}

def @func_3642(%var_3605: Tensor[(16, 7, 10), float32], %var_3638: float32, %var_3639: Tensor[(1, 66), uint16]) -> (Tensor[(16, 7, 10), int16], Tensor[(16, 7, 10), float64], Tensor[(5, 16, 13), int8], Tensor[(8, 130), int64], Tensor[(1040), int64], float32, Tensor[(1, 66), uint16]) {
  %693 = cast(%var_3605, dtype="float32") /* ty=Tensor[(16, 7, 10), float32] */;
  %694 = cosh(%693) /* ty=Tensor[(16, 7, 10), float32] */;
  %695 = cast(%var_3605, dtype="int16") /* ty=Tensor[(16, 7, 10), int16] */;
  %696 = shape_of(%694, dtype="int32") /* ty=Tensor[(3), int32] */;
  %697 = cast(%694, dtype="int16") /* ty=Tensor[(16, 7, 10), int16] */;
  %698 = dyn.reshape(%695, %696, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %699 = cast(%var_3605, dtype="float64") /* ty=Tensor[(16, 7, 10), float64] */;
  %700 = cast(meta[relay.Constant][51] /* ty=Tensor[(8, 130), int64] */, dtype="int64") /* ty=Tensor[(8, 130), int64] */;
  %701 = cast(meta[relay.Constant][51] /* ty=Tensor[(8, 130), int64] */, dtype="int64") /* ty=Tensor[(8, 130), int64] */;
  %702 = reshape(%700, newshape=[5, 16, 13]) /* ty=Tensor[(5, 16, 13), int64] */;
  %703 = reshape(%701, newshape=[5, 16, 13]) /* ty=Tensor[(5, 16, 13), int64] */;
  %704 = @func_297(%702, %703) /* ty=(Tensor[(5, 16, 13), int8],) */;
  %705 = cast(%var_3638, dtype="float32") /* ty=float32 */;
  %706 = cast(%var_3639, dtype="uint16") /* ty=Tensor[(1, 66), uint16] */;
  %707 = cast(meta[relay.Constant][51] /* ty=Tensor[(8, 130), int64] */, dtype="int64") /* ty=Tensor[(8, 130), int64] */;
  %708 = reshape(%705, newshape=[]) /* ty=float32 */;
  %709 = reshape(%706, newshape=[66]) /* ty=Tensor[(66), uint16] */;
  %710 = reshape(%707, newshape=[1040]) /* ty=Tensor[(1040), int64] */;
  %711 = @func_2977(%708, %709, %710) /* ty=(Tensor[(9, 2, 5), bool], Tensor[(16, ?, 16), bool], Tensor[(66), uint16], Tensor[(858), uint16], Tensor[(1040), int64]) */;
  %712 = maximum(%697, %698) /* ty=Tensor[(16, 7, 10), int16] */;
  %713 = cos(%699) /* ty=Tensor[(16, 7, 10), float64] */;
  %714 = %704.0;
  %715 = %711.4;
  (%712, %713, %714, meta[relay.Constant][51] /* ty=Tensor[(8, 130), int64] */, %715, %var_3638, %var_3639)
}

def @func_10600() -> Tensor[(3, 15, 11), int64] {
  @func_10598() /* ty=Tensor[(3, 15, 11), int64] */
}

def @func_6315(%var_6295: Tensor[(6, 11, 13), float32], %var_6307: Tensor[(56, 28), uint32], %var_6308: Tensor[(1404), float64]) -> (Tensor[(6, 11, 13), float32], Tensor[(14, 7, 16), bool], Tensor[(56, 28), uint32], Tensor[(1404), float64]) {
  %716 = cast(%var_6295, dtype="float32") /* ty=Tensor[(6, 11, 13), float32] */;
  %717 = cast(%var_6307, dtype="uint32") /* ty=Tensor[(56, 28), uint32] */;
  %718 = cast(%var_6308, dtype="float64") /* ty=Tensor[(1404), float64] */;
  %719 = reshape(%717, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), uint32] */;
  %720 = reshape(%718, newshape=[1404]) /* ty=Tensor[(1404), float64] */;
  %721 = @func_4219(%719, %720) /* ty=(Tensor[(14, 7, 16), bool], Tensor[(9, 12, 13), float64], Tensor[(1404), float64]) */;
  %722 = sin(%716) /* ty=Tensor[(6, 11, 13), float32] */;
  %723 = %721.0;
  (%722, %723, %var_6307, %var_6308)
}

def @func_6490(%var_6488: Tensor[(1404), float64], %var_6489: Tensor[(480), int16]) -> (Tensor[(1404), float64], Tensor[(13, 8, 12), uint8], Tensor[(16, 5, 6), bool], Tensor[(480), int16], Tensor[(9, 12, 13), float32]) {
  %741 = fn (%var_6458: Tensor[(1404), float64], %var_6477: Tensor[(480), int16]) -> (Tensor[(1404), float64], Tensor[(13, 8, 12), uint8], Tensor[(16, 5, 6), bool], Tensor[(480), int16], Tensor[(9, 12, 13), float32]) {
    %724 = cast(meta[relay.Constant][52] /* ty=Tensor[(13, 8, 12), float64] */, dtype="float64") /* ty=Tensor[(13, 8, 12), float64] */;
    %725 = asinh(%724) /* ty=Tensor[(13, 8, 12), float64] */;
    %726 = cast(meta[relay.Constant][52] /* ty=Tensor[(13, 8, 12), float64] */, dtype="uint8") /* ty=Tensor[(13, 8, 12), uint8] */;
    %727 = shape_of(%725, dtype="int32") /* ty=Tensor[(3), int32] */;
    %728 = cast(%725, dtype="uint8") /* ty=Tensor[(13, 8, 12), uint8] */;
    %729 = dyn.reshape(%726, %727, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %730 = cast(%var_6477, dtype="int16") /* ty=Tensor[(480), int16] */;
    %731 = reshape(%730, newshape=[16, 5, 6]) /* ty=Tensor[(16, 5, 6), int16] */;
    %732 = @func_1118(%731) /* ty=(Tensor[(16, 5, 6), bool],) */;
    %733 = cast(%var_6458, dtype="float64") /* ty=Tensor[(1404), float64] */;
    %734 = reshape(%733, newshape=[9, 12, 13]) /* ty=Tensor[(9, 12, 13), float64] */;
    %735 = @func_2871(%734) /* ty=(Tensor[(9, 12, 13), float64],) */;
    %736 = %735.0;
    %737 = cast(%736, dtype="float32") /* ty=Tensor[(9, 12, 13), float32] */;
    %738 = bitwise_and(%728, %729) /* ty=Tensor[(13, 8, 12), uint8] */;
    %739 = %732.0;
    %740 = atan(%737) /* ty=Tensor[(9, 12, 13), float32] */;
    (%var_6458, %738, %739, %var_6477, %740)
  };
  %741(%var_6488, %var_6489) /* ty=(Tensor[(1404), float64], Tensor[(13, 8, 12), uint8], Tensor[(16, 5, 6), bool], Tensor[(480), int16], Tensor[(9, 12, 13), float32]) */
}

def @func_12035() -> (Tensor[(3, 15, 11), int64],) {
  @func_12033() /* ty=(Tensor[(3, 15, 11), int64],) */
}

def @func_12490() -> (Tensor[(3, 15, 11), float64], Tensor[(16, 1, 15), float32], Tensor[(240), float32], Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), int64]) {
  %751 = fn () -> (Tensor[(3, 15, 11), float64], Tensor[(16, 1, 15), float32], Tensor[(240), float32], Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), int64]) {
    %742 = @func_8789() /* ty=(Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float64]) */;
    %743 = cast(meta[relay.Constant][53] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
    %744 = reshape(%743, newshape=[16, 1, 15]) /* ty=Tensor[(16, 1, 15), float32] */;
    %745 = @func_11556(%744) /* ty=(Tensor[(16, 1, 15), float32],) */;
    %746 = @func_12204() /* ty=(Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float32]) */;
    %747 = %742.1;
    %748 = %745.0;
    %749 = %746.1;
    %750 = @func_10598() /* ty=Tensor[(3, 15, 11), int64] */;
    (%747, %748, meta[relay.Constant][53] /* ty=Tensor[(240), float32] */, %749, %750)
  };
  %751() /* ty=(Tensor[(3, 15, 11), float64], Tensor[(16, 1, 15), float32], Tensor[(240), float32], Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), int64]) */
}

def @func_12911(%var_12909: Tensor[(196), bool], %var_12910: Tensor[(13, 5, 14), bool]) -> (Tensor[(3, 15, 11), float32], Tensor[(14, 2, 7), bool], Tensor[(196), bool], Tensor[(910), bool], Tensor[(13, 5, 14), bool], Tensor[(3, 15, 11), int64], Tensor[(13, 5, 14), float32]) {
  %778 = fn (%var_12864: Tensor[(196), bool], %var_12879: Tensor[(13, 5, 14), bool]) -> (Tensor[(3, 15, 11), float32], Tensor[(14, 2, 7), bool], Tensor[(196), bool], Tensor[(910), bool], Tensor[(13, 5, 14), bool], Tensor[(3, 15, 11), int64], Tensor[(13, 5, 14), float32]) {
    %752 = @func_8446() /* ty=(Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float32]) */;
    %753 = cast(%var_12864, dtype="bool") /* ty=Tensor[(196), bool] */;
    %754 = reshape(%753, newshape=[14, 2, 7]) /* ty=Tensor[(14, 2, 7), bool] */;
    %755 = @func_7925(%754) /* ty=(Tensor[(14, 2, 7), bool],) */;
    %756 = cast(meta[relay.Constant][54] /* ty=Tensor[(910), bool] */, dtype="bool") /* ty=Tensor[(910), bool] */;
    %757 = cast(meta[relay.Constant][54] /* ty=Tensor[(910), bool] */, dtype="bool") /* ty=Tensor[(910), bool] */;
    %758 = reshape(%756, newshape=[13, 5, 14]) /* ty=Tensor[(13, 5, 14), bool] */;
    %759 = reshape(%757, newshape=[13, 5, 14]) /* ty=Tensor[(13, 5, 14), bool] */;
    %760 = @func_9935(%758, %759) /* ty=Tensor[(13, 5, 14), bool] */;
    %761 = cast(%var_12879, dtype="bool") /* ty=Tensor[(13, 5, 14), bool] */;
    %762 = shape_of(%760, dtype="int32") /* ty=Tensor[(3), int32] */;
    %763 = cast(%760, dtype="bool") /* ty=Tensor[(13, 5, 14), bool] */;
    %764 = dyn.reshape(%761, %762, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %765 = less(%763, %764) /* ty=Tensor[(13, 5, 14), bool] */;
    %766 = cast(%760, dtype="bool") /* ty=Tensor[(13, 5, 14), bool] */;
    %767 = shape_of(%765, dtype="int32") /* ty=Tensor[(3), int32] */;
    %768 = cast(%765, dtype="bool") /* ty=Tensor[(13, 5, 14), bool] */;
    %769 = dyn.reshape(%766, %767, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %770 = cast(%765, dtype="float64") /* ty=Tensor[(13, 5, 14), float64] */;
    %771 = sqrt(%770) /* ty=Tensor[(13, 5, 14), float64] */;
    %772 = cast(%771, dtype="float32") /* ty=Tensor[(13, 5, 14), float32] */;
    %773 = %752.1;
    %774 = %755.0;
    %775 = greater(%768, %769) /* ty=Tensor[(13, 5, 14), bool] */;
    %776 = @func_11136() /* ty=Tensor[(3, 15, 11), int64] */;
    %777 = sigmoid(%772) /* ty=Tensor[(13, 5, 14), float32] */;
    (%773, %774, %var_12864, meta[relay.Constant][54] /* ty=Tensor[(910), bool] */, %775, %776, %777)
  };
  %778(%var_12909, %var_12910) /* ty=(Tensor[(3, 15, 11), float32], Tensor[(14, 2, 7), bool], Tensor[(196), bool], Tensor[(910), bool], Tensor[(13, 5, 14), bool], Tensor[(3, 15, 11), int64], Tensor[(13, 5, 14), float32]) */
}

def @func_6174(%var_6172: Tensor[(8, 3, 15), float64]) -> Tensor[(8, 3, 15), float64] {
  @func_6171(%var_6172) /* ty=Tensor[(8, 3, 15), float64] */
}

def @func_9914(%var_9912: Tensor[(9, 13, 3), float64]) -> (Tensor[(9, 13, 3), float64],) {
  @func_9911(%var_9912) /* ty=(Tensor[(9, 13, 3), float64],) */
}

def @func_9526() -> (Tensor[(3, 15, 11), int16], Tensor[(3, 15, 11), float32]) {
  %779 = @func_9141() /* ty=(Tensor[(256), uint16], Tensor[(3, 15, 11), int16], Tensor[(3, 15, 11), int64]) */;
  %780 = %779.1;
  %781 = @func_8407() /* ty=Tensor[(3, 15, 11), float32] */;
  (%780, %781)
}

def @func_9290(%var_9288: Tensor[(4, 13, 10), float64], %var_9289: Tensor[(4, 13, 10), float64]) -> Tensor[(4, 13, 10), float64] {
  %786 = fn (%var_9279: Tensor[(4, 13, 10), float64], %var_9280: Tensor[(4, 13, 10), float64]) -> Tensor[(4, 13, 10), float64] {
    %782 = cast(%var_9280, dtype="float64") /* ty=Tensor[(4, 13, 10), float64] */;
    %783 = shape_of(%var_9279, dtype="int32") /* ty=Tensor[(3), int32] */;
    %784 = cast(%var_9279, dtype="float64") /* ty=Tensor[(4, 13, 10), float64] */;
    %785 = dyn.reshape(%782, %783, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    divide(%784, %785) /* ty=Tensor[(4, 13, 10), float64] */
  };
  %786(%var_9288, %var_9289) /* ty=Tensor[(4, 13, 10), float64] */
}

def @func_12072(%var_12070: Tensor[(630), float32]) -> (Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float32], Tensor[(14, 15, 3), float32], Tensor[(630), float32]) {
  @func_12069(%var_12070) /* ty=(Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float32], Tensor[(14, 15, 3), float32], Tensor[(630), float32]) */
}

def @func_9935(%var_9927: Tensor[(13, 5, 14), bool], %var_9928: Tensor[(13, 5, 14), bool]) -> Tensor[(13, 5, 14), bool] {
  %787 = cast(%var_9928, dtype="bool") /* ty=Tensor[(13, 5, 14), bool] */;
  %788 = shape_of(%var_9927, dtype="int32") /* ty=Tensor[(3), int32] */;
  %789 = cast(%var_9927, dtype="bool") /* ty=Tensor[(13, 5, 14), bool] */;
  %790 = dyn.reshape(%787, %788, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%789, %790) /* ty=Tensor[(13, 5, 14), bool] */
}

def @func_8448() -> (Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float32]) {
  @func_8446() /* ty=(Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float32]) */
}

def @func_8959(%var_8955: Tensor[(3, 15, 11), float64], %var_8956: Tensor[(66), uint16], %var_8957: Tensor[(429, 2), uint16], %var_8958: Tensor[(1040), int64]) -> (Tensor[(3, 15, 11), int32], Tensor[(1040), int8], Tensor[(66), uint16], Tensor[(429, 2), uint16], Tensor[(1040), int64]) {
  @func_8953(%var_8955, %var_8956, %var_8957, %var_8958) /* ty=(Tensor[(3, 15, 11), int32], Tensor[(1040), int8], Tensor[(66), uint16], Tensor[(429, 2), uint16], Tensor[(1040), int64]) */
}

def @func_12069(%var_12063: Tensor[(630), float32]) -> (Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float32], Tensor[(14, 15, 3), float32], Tensor[(630), float32]) {
  %791 = @func_8446() /* ty=(Tensor[(3, 15, 11), float32], Tensor[(3, 15, 11), float32]) */;
  %792 = cast(%var_12063, dtype="float32") /* ty=Tensor[(630), float32] */;
  %793 = reshape(%792, newshape=[14, 15, 3]) /* ty=Tensor[(14, 15, 3), float32] */;
  %794 = %791.1;
  %795 = @func_7889() /* ty=Tensor[(3, 15, 11), float32] */;
  %796 = @func_8742(%793) /* ty=Tensor[(14, 15, 3), float32] */;
  (%794, %795, %796, %var_12063)
}

def @func_12407() -> (Tensor[(3, 15, 11), float32],) {
  @func_12405() /* ty=(Tensor[(3, 15, 11), float32],) */
}

def @func_8299() -> Tensor[(8, 14, 3), int16] {
  @func_8297() /* ty=Tensor[(8, 14, 3), int16] */
}

def @func_8375() -> (Tensor[(3, 15, 11), float32],) {
  %797 = @func_8136() /* ty=Tensor[(3, 15, 11), float32] */;
  (%797,)
}

def @func_5005(%var_5004: Tensor[(14, 3, 10), float64]) -> (Tensor[(14, 3, 10), float64],) {
  %804 = fn (%var_4989: Tensor[(14, 3, 10), float64]) -> (Tensor[(14, 3, 10), float64],) {
    %798 = cast(meta[relay.Constant][55] /* ty=Tensor[(1, 1, 10), float64] */, dtype="float64") /* ty=Tensor[(1, 1, 10), float64] */;
    %799 = cast(%var_4989, dtype="float64") /* ty=Tensor[(14, 3, 10), float64] */;
    %800 = mod(%798, %799) /* ty=Tensor[(14, 3, 10), float64] */;
    %801 = cast(%800, dtype="float64") /* ty=Tensor[(14, 3, 10), float64] */;
    %802 = cast(meta[relay.Constant][55] /* ty=Tensor[(1, 1, 10), float64] */, dtype="float64") /* ty=Tensor[(1, 1, 10), float64] */;
    %803 = floor_mod(%801, %802) /* ty=Tensor[(14, 3, 10), float64] */;
    (%803,)
  };
  %804(%var_5004) /* ty=(Tensor[(14, 3, 10), float64],) */
}

def @func_8065(%var_8063: Tensor[(108), float32], %var_8064: Tensor[(192), uint8]) -> (Tensor[(256), uint16], Tensor[(12, 9, ?), int8], Tensor[(108), float32], Tensor[(192), uint8]) {
  @func_8061(%var_8063, %var_8064) /* ty=(Tensor[(256), uint16], Tensor[(12, 9, ?), int8], Tensor[(108), float32], Tensor[(192), uint8]) */
}

def @func_540(%var_538: Tensor[(16, 1, 16), uint16], %var_539: Tensor[(16, 1, 16), uint16]) -> (Tensor[(16, ?, 16), bool], Tensor[(5, 16, 13), int8], Tensor[(8, 130), int64]) {
  %816 = fn (%var_528: Tensor[(16, 1, 16), uint16], %var_529: Tensor[(16, 1, 16), uint16]) -> (Tensor[(16, ?, 16), bool], Tensor[(5, 16, 13), int8], Tensor[(8, 130), int64]) {
    %805 = cast(%var_529, dtype="bool") /* ty=Tensor[(16, 1, 16), bool] */;
    %806 = shape_of(%var_528, dtype="int32") /* ty=Tensor[(3), int32] */;
    %807 = cast(%var_528, dtype="bool") /* ty=Tensor[(16, 1, 16), bool] */;
    %808 = dyn.reshape(%805, %806, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %809 = cast(meta[relay.Constant][56] /* ty=Tensor[(8, 130), int64] */, dtype="int64") /* ty=Tensor[(8, 130), int64] */;
    %810 = cast(meta[relay.Constant][56] /* ty=Tensor[(8, 130), int64] */, dtype="int64") /* ty=Tensor[(8, 130), int64] */;
    %811 = reshape(%809, newshape=[5, 16, 13]) /* ty=Tensor[(5, 16, 13), int64] */;
    %812 = reshape(%810, newshape=[5, 16, 13]) /* ty=Tensor[(5, 16, 13), int64] */;
    %813 = @func_297(%811, %812) /* ty=(Tensor[(5, 16, 13), int8],) */;
    %814 = less(%807, %808) /* ty=Tensor[(16, ?, 16), bool] */;
    %815 = %813.0;
    (%814, %815, meta[relay.Constant][56] /* ty=Tensor[(8, 130), int64] */)
  };
  %816(%var_538, %var_539) /* ty=(Tensor[(16, ?, 16), bool], Tensor[(5, 16, 13), int8], Tensor[(8, 130), int64]) */
}

def @func_7890() -> Tensor[(3, 15, 11), float32] {
  %818 = fn () -> Tensor[(3, 15, 11), float32] {
    %817 = cast(meta[relay.Constant][57] /* ty=Tensor[(3, 15, 11), float32] */, dtype="float32") /* ty=Tensor[(3, 15, 11), float32] */;
    atan(%817) /* ty=Tensor[(3, 15, 11), float32] */
  };
  %818() /* ty=Tensor[(3, 15, 11), float32] */
}

def @func_1283(%var_1227: Tensor[(3, 4, 1), float64], %var_1232: Tensor[(1040), int64], %var_1256: Tensor[(66), uint16], %var_1273: Tensor[(3, 4, 1040), float64]) -> (Tensor[(5, 16, 13), int8], Tensor[(8, 130), int64], Tensor[(1040), int8], Tensor[(256, 858), bool], Tensor[(256, 66), uint16], Tensor[(3, 4, 1040), float64]) {
  %819 = cast(%var_1232, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %820 = cast(%var_1232, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %821 = reshape(%819, newshape=[5, 16, 13]) /* ty=Tensor[(5, 16, 13), int64] */;
  %822 = reshape(%820, newshape=[5, 16, 13]) /* ty=Tensor[(5, 16, 13), int64] */;
  %823 = @func_297(%821, %822) /* ty=(Tensor[(5, 16, 13), int8],) */;
  %824 = cast(meta[relay.Constant][58] /* ty=Tensor[(256, 1), uint16] */, dtype="uint16") /* ty=Tensor[(256, 1), uint16] */;
  %825 = cast(meta[relay.Constant][58] /* ty=Tensor[(256, 1), uint16] */, dtype="uint16") /* ty=Tensor[(256, 1), uint16] */;
  %826 = reshape(%824, newshape=[16, 1, 16]) /* ty=Tensor[(16, 1, 16), uint16] */;
  %827 = reshape(%825, newshape=[16, 1, 16]) /* ty=Tensor[(16, 1, 16), uint16] */;
  %828 = @func_537(%826, %827) /* ty=(Tensor[(16, ?, 16), bool], Tensor[(5, 16, 13), int8], Tensor[(8, 130), int64]) */;
  %829 = cast(%var_1256, dtype="uint16") /* ty=Tensor[(66), uint16] */;
  %830 = cast(meta[relay.Constant][59] /* ty=Tensor[(858), uint16] */, dtype="uint16") /* ty=Tensor[(858), uint16] */;
  %831 = %823.0;
  %832 = cast(%831, dtype="int64") /* ty=Tensor[(5, 16, 13), int64] */;
  %833 = reshape(%829, newshape=[11, 6, 1]) /* ty=Tensor[(11, 6, 1), uint16] */;
  %834 = reshape(%830, newshape=[11, 6, 13]) /* ty=Tensor[(11, 6, 13), uint16] */;
  %835 = reshape(%832, newshape=[1040]) /* ty=Tensor[(1040), int64] */;
  %836 = @func_581(%833, %834, %835) /* ty=(Tensor[(11, 6, 13), uint16], Tensor[(16, ?, 16), bool], Tensor[(256), uint16], Tensor[(1040), float32], Tensor[(1040), int8], Tensor[(5, 16, 13), int8], Tensor[(5, 16, 13), int8]) */;
  %837 = cast(meta[relay.Constant][59] /* ty=Tensor[(858), uint16] */, dtype="bool") /* ty=Tensor[(858), bool] */;
  %838 = cast(meta[relay.Constant][58] /* ty=Tensor[(256, 1), uint16] */, dtype="bool") /* ty=Tensor[(256, 1), bool] */;
  %839 = cast(meta[relay.Constant][58] /* ty=Tensor[(256, 1), uint16] */, dtype="uint16") /* ty=Tensor[(256, 1), uint16] */;
  %840 = cast(%var_1256, dtype="uint16") /* ty=Tensor[(66), uint16] */;
  %841 = cast(%var_1227, dtype="float64") /* ty=Tensor[(3, 4, 1), float64] */;
  %842 = atan(%841) /* ty=Tensor[(3, 4, 1), float64] */;
  %843 = cast(%842, dtype="bool") /* ty=Tensor[(3, 4, 1), bool] */;
  %844 = cast(%var_1232, dtype="bool") /* ty=Tensor[(1040), bool] */;
  %845 = logical_and(%843, %844) /* ty=Tensor[(3, 4, 1040), bool] */;
  %846 = cast(%845, dtype="float64") /* ty=Tensor[(3, 4, 1040), float64] */;
  %847 = atan(%846) /* ty=Tensor[(3, 4, 1040), float64] */;
  %848 = cast(%var_1273, dtype="float64") /* ty=Tensor[(3, 4, 1040), float64] */;
  %849 = shape_of(%847, dtype="int32") /* ty=Tensor[(3), int32] */;
  %850 = cast(%847, dtype="float64") /* ty=Tensor[(3, 4, 1040), float64] */;
  %851 = dyn.reshape(%848, %849, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %852 = %828.2;
  %853 = %836.4;
  %854 = greater_equal(%837, %838) /* ty=Tensor[(256, 858), bool] */;
  %855 = add(%839, %840) /* ty=Tensor[(256, 66), uint16] */;
  %856 = floor_mod(%850, %851) /* ty=Tensor[(3, 4, 1040), float64] */;
  (%831, %852, %853, %854, %855, %856)
}

def @func_12837() -> (Tensor[(3, 15, 11), float32],) {
  %859 = fn () -> (Tensor[(3, 15, 11), float32],) {
    %857 = @func_11728() /* ty=(Tensor[(3, 15, 11), float32],) */;
    %858 = %857.0;
    (%858,)
  };
  %859() /* ty=(Tensor[(3, 15, 11), float32],) */
}

def @func_4046(%var_4043: Tensor[(10, 6, 11), int32], %var_4044: Tensor[(1120), float32], %var_4045: Tensor[(22, 3), uint16]) -> (Tensor[(10, 6, 11), bool], Tensor[(5, 16, 13), int8], Tensor[(1120), float32], float32, Tensor[(22, 3), uint16]) {
  @func_4041(%var_4043, %var_4044, %var_4045) /* ty=(Tensor[(10, 6, 11), bool], Tensor[(5, 16, 13), int8], Tensor[(1120), float32], float32, Tensor[(22, 3), uint16]) */
}

def @func_12738() -> (Tensor[(3, 15, 11), float32], Tensor[(5, 16, 13), int8], Tensor[(256), uint16]) {
  %867 = fn () -> (Tensor[(3, 15, 11), float32], Tensor[(5, 16, 13), int8], Tensor[(256), uint16]) {
    %860 = cast(meta[relay.Constant][60] /* ty=Tensor[(256), uint16] */, dtype="uint16") /* ty=Tensor[(256), uint16] */;
    %861 = cast(meta[relay.Constant][60] /* ty=Tensor[(256), uint16] */, dtype="uint16") /* ty=Tensor[(256), uint16] */;
    %862 = reshape(%860, newshape=[16, 1, 16]) /* ty=Tensor[(16, 1, 16), uint16] */;
    %863 = reshape(%861, newshape=[16, 1, 16]) /* ty=Tensor[(16, 1, 16), uint16] */;
    %864 = @func_537(%862, %863) /* ty=(Tensor[(16, ?, 16), bool], Tensor[(5, 16, 13), int8], Tensor[(8, 130), int64]) */;
    %865 = @func_8407() /* ty=Tensor[(3, 15, 11), float32] */;
    %866 = %864.1;
    (%865, %866, meta[relay.Constant][60] /* ty=Tensor[(256), uint16] */)
  };
  %867() /* ty=(Tensor[(3, 15, 11), float32], Tensor[(5, 16, 13), int8], Tensor[(256), uint16]) */
}

def @func_8362(%var_8360: Tensor[(16, 5, 6), uint64], %var_8361: Tensor[(16, 5, 6), uint64]) -> Tensor[(16, 5, 6), int32] {
  @func_8358(%var_8360, %var_8361) /* ty=Tensor[(16, 5, 6), int32] */
}

def @func_1354(%var_1353: Tensor[(4, 6, 8), uint8]) -> Tensor[(4, 6, 8), bool] {
  %872 = fn (%var_1334: Tensor[(4, 6, 8), uint8]) -> Tensor[(4, 6, 8), bool] {
    %868 = cast(%var_1334, dtype="bool") /* ty=Tensor[(4, 6, 8), bool] */;
    %869 = shape_of(meta[relay.Constant][61] /* ty=Tensor[(4, 6, 8), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %870 = cast(meta[relay.Constant][61] /* ty=Tensor[(4, 6, 8), uint8] */, dtype="bool") /* ty=Tensor[(4, 6, 8), bool] */;
    %871 = dyn.reshape(%868, %869, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less(%870, %871) /* ty=Tensor[(4, 6, 8), bool] */
  };
  %872(%var_1353) /* ty=Tensor[(4, 6, 8), bool] */
}

def @func_8137() -> Tensor[(3, 15, 11), float32] {
  %873 = fn () -> Tensor[(3, 15, 11), float32] {
    @func_7889() /* ty=Tensor[(3, 15, 11), float32] */
  };
  %873() /* ty=Tensor[(3, 15, 11), float32] */
}

def @func_10648(%var_10647: Tensor[(351), float32]) -> (Tensor[(8, 14, 3), float64], Tensor[(8, 14, 3), bool], Tensor[(16, 8, 12), float64], Tensor[(351), float32]) {
  %895 = fn (%var_10642: Tensor[(351), float32]) -> (Tensor[(8, 14, 3), float64], Tensor[(8, 14, 3), bool], Tensor[(16, 8, 12), float64], Tensor[(351), float32]) {
    %874 = @func_8297() /* ty=Tensor[(8, 14, 3), int16] */;
    %875 = cast(%874, dtype="float64") /* ty=Tensor[(8, 14, 3), float64] */;
    %876 = log2(%875) /* ty=Tensor[(8, 14, 3), float64] */;
    %877 = cast(%874, dtype="float64") /* ty=Tensor[(8, 14, 3), float64] */;
    %878 = shape_of(%876, dtype="int32") /* ty=Tensor[(3), int32] */;
    %879 = cast(%876, dtype="float64") /* ty=Tensor[(8, 14, 3), float64] */;
    %880 = dyn.reshape(%877, %878, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %881 = cast(%876, dtype="bool") /* ty=Tensor[(8, 14, 3), bool] */;
    %882 = shape_of(%874, dtype="int32") /* ty=Tensor[(3), int32] */;
    %883 = cast(%874, dtype="bool") /* ty=Tensor[(8, 14, 3), bool] */;
    %884 = dyn.reshape(%881, %882, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %885 = cast(%var_10642, dtype="float32") /* ty=Tensor[(351), float32] */;
    %886 = cast(%var_10642, dtype="float32") /* ty=Tensor[(351), float32] */;
    %887 = cast(%var_10642, dtype="float32") /* ty=Tensor[(351), float32] */;
    %888 = reshape(%885, newshape=[9, 13, 3]) /* ty=Tensor[(9, 13, 3), float32] */;
    %889 = reshape(%886, newshape=[9, 13, 3]) /* ty=Tensor[(9, 13, 3), float32] */;
    %890 = reshape(%887, newshape=[9, 13, 3]) /* ty=Tensor[(9, 13, 3), float32] */;
    %891 = @func_5819(%888, %889, %890) /* ty=(Tensor[(9, 13, 3), float32], Tensor[(16, 8, 12), float64], Tensor[(1536), float64], Tensor[(9, 13, 3), int16], Tensor[(9, 12, 13), float64], Tensor[(3, 468), float64]) */;
    %892 = floor_mod(%879, %880) /* ty=Tensor[(8, 14, 3), float64] */;
    %893 = less(%883, %884) /* ty=Tensor[(8, 14, 3), bool] */;
    %894 = %891.1;
    (%892, %893, %894, %var_10642)
  };
  %895(%var_10647) /* ty=(Tensor[(8, 14, 3), float64], Tensor[(8, 14, 3), bool], Tensor[(16, 8, 12), float64], Tensor[(351), float32]) */
}

def @func_8377() -> (Tensor[(3, 15, 11), float32],) {
  @func_8375() /* ty=(Tensor[(3, 15, 11), float32],) */
}

def @func_1121(%var_1119: Tensor[(16, 5, 6), int16]) -> (Tensor[(16, 5, 6), bool],) {
  @func_1118(%var_1119) /* ty=(Tensor[(16, 5, 6), bool],) */
}

def @func_6320(%var_6317: Tensor[(6, 11, 13), float32], %var_6318: Tensor[(56, 28), uint32], %var_6319: Tensor[(1404), float64]) -> (Tensor[(6, 11, 13), float32], Tensor[(14, 7, 16), bool], Tensor[(56, 28), uint32], Tensor[(1404), float64]) {
  @func_6315(%var_6317, %var_6318, %var_6319) /* ty=(Tensor[(6, 11, 13), float32], Tensor[(14, 7, 16), bool], Tensor[(56, 28), uint32], Tensor[(1404), float64]) */
}

def @func_9911(%var_9881: Tensor[(9, 13, 3), float64]) -> (Tensor[(9, 13, 3), float64],) {
  %896 = cast(%var_9881, dtype="float64") /* ty=Tensor[(9, 13, 3), float64] */;
  %897 = cos(%896) /* ty=Tensor[(9, 13, 3), float64] */;
  %898 = cast(%897, dtype="float64") /* ty=Tensor[(9, 13, 3), float64] */;
  %899 = asinh(%898) /* ty=Tensor[(9, 13, 3), float64] */;
  (%899,)
}

def @func_8408() -> Tensor[(3, 15, 11), float32] {
  %901 = fn () -> Tensor[(3, 15, 11), float32] {
    %900 = @func_8000() /* ty=(Tensor[(3, 15, 11), float32], Tensor[(8, 130), int64], Tensor[(256), uint16]) */;
    %900.0
  };
  %901() /* ty=Tensor[(3, 15, 11), float32] */
}

def @func_7345(%var_7294: Tensor[(13, 3, 1), uint16], %var_7295: Tensor[(13, 3, 3), uint16], %var_7315: Tensor[(1404), float64], %var_7320: Tensor[(5, 84), float64]) -> (Tensor[(13, 3, 3), bool], Tensor[(13, 3, 3), uint32], Tensor[(1568), uint32], Tensor[(14, 3, 10), float64], Tensor[(5, 84), float64], Tensor[(1404), bool], Tensor[(13, 3, 1404), float32]) {
  %902 = cast(%var_7294, dtype="bool") /* ty=Tensor[(13, 3, 1), bool] */;
  %903 = cast(%var_7295, dtype="bool") /* ty=Tensor[(13, 3, 3), bool] */;
  %904 = cast(%var_7295, dtype="uint32") /* ty=Tensor[(13, 3, 3), uint32] */;
  %905 = cast(%var_7294, dtype="uint32") /* ty=Tensor[(13, 3, 1), uint32] */;
  %906 = cast(%var_7320, dtype="float64") /* ty=Tensor[(5, 84), float64] */;
  %907 = reshape(%906, newshape=[14, 3, 10]) /* ty=Tensor[(14, 3, 10), float64] */;
  %908 = @func_5003(%907) /* ty=(Tensor[(14, 3, 10), float64],) */;
  %909 = cast(meta[relay.Constant][62] /* ty=Tensor[(1568), uint32] */, dtype="uint32") /* ty=Tensor[(1568), uint32] */;
  %910 = cast(%var_7315, dtype="float64") /* ty=Tensor[(1404), float64] */;
  %911 = reshape(%909, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), uint32] */;
  %912 = reshape(%910, newshape=[1404]) /* ty=Tensor[(1404), float64] */;
  %913 = @func_4219(%911, %912) /* ty=(Tensor[(14, 7, 16), bool], Tensor[(9, 12, 13), float64], Tensor[(1404), float64]) */;
  %914 = %913.2;
  %915 = cast(%914, dtype="bool") /* ty=Tensor[(1404), bool] */;
  %916 = shape_of(%var_7315, dtype="int32") /* ty=Tensor[(1), int32] */;
  %917 = cast(%var_7315, dtype="bool") /* ty=Tensor[(1404), bool] */;
  %918 = dyn.reshape(%915, %916, newshape=[]) /* ty=Tensor[(?), bool] */;
  %919 = cast(%var_7315, dtype="float32") /* ty=Tensor[(1404), float32] */;
  %920 = cast(%var_7294, dtype="float32") /* ty=Tensor[(13, 3, 1), float32] */;
  %921 = less_equal(%902, %903) /* ty=Tensor[(13, 3, 3), bool] */;
  %922 = minimum(%904, %905) /* ty=Tensor[(13, 3, 3), uint32] */;
  %923 = %908.0;
  %924 = greater_equal(%917, %918) /* ty=Tensor[(1404), bool] */;
  %925 = divide(%919, %920) /* ty=Tensor[(13, 3, 1404), float32] */;
  (%921, %922, meta[relay.Constant][62] /* ty=Tensor[(1568), uint32] */, %923, %var_7320, %924, %925)
}

def @func_13017() -> Tensor[(3, 15, 11), int64] {
  %927 = fn () -> Tensor[(3, 15, 11), int64] {
    %926 = @func_12033() /* ty=(Tensor[(3, 15, 11), int64],) */;
    %926.0
  };
  %927() /* ty=Tensor[(3, 15, 11), int64] */
}

def @func_10373() -> (Tensor[(8, 14, 3), int16],) {
  %928 = @func_9492() /* ty=Tensor[(8, 14, 3), int16] */;
  (%928,)
}

def @func_11981() -> Tensor[(8, 14, 3), bool] {
  @func_11979() /* ty=Tensor[(8, 14, 3), bool] */
}

def @func_12701(%var_12699: Tensor[(192), uint8], %var_12700: Tensor[(1404), float64]) -> (Tensor[(3, 15, 11), float32], Tensor[(16, 1, 15), float32], Tensor[(24, 10), float32], Tensor[(4, 6, 8), bool], Tensor[(192), uint8], Tensor[(7, 4, 4), int8], Tensor[(1568), uint32], Tensor[(1404), float64], Tensor[(4, 6, 8), bool], Tensor[(117), uint16], Tensor[(420), float64], Tensor[(14, 7, 16), int64]) {
  @func_12697(%var_12699, %var_12700) /* ty=(Tensor[(3, 15, 11), float32], Tensor[(16, 1, 15), float32], Tensor[(24, 10), float32], Tensor[(4, 6, 8), bool], Tensor[(192), uint8], Tensor[(7, 4, 4), int8], Tensor[(1568), uint32], Tensor[(1404), float64], Tensor[(4, 6, 8), bool], Tensor[(117), uint16], Tensor[(420), float64], Tensor[(14, 7, 16), int64]) */
}

def @func_10846(%var_10844: Tensor[(1, 192), uint8], %var_10845: Tensor[(117), uint16]) -> (Tensor[(7, 4, 4), int8], Tensor[(16, 5, 6), bool], Tensor[(480), int16], Tensor[(8, 14, 3), float32], Tensor[(11, 6), uint16], Tensor[(1, 192), uint8], Tensor[(117), uint16], Tensor[(1404), float64], Tensor[(420), float64]) {
  %949 = fn (%var_10825: Tensor[(1, 192), uint8], %var_10826: Tensor[(117), uint16]) -> (Tensor[(7, 4, 4), int8], Tensor[(16, 5, 6), bool], Tensor[(480), int16], Tensor[(8, 14, 3), float32], Tensor[(11, 6), uint16], Tensor[(1, 192), uint8], Tensor[(117), uint16], Tensor[(1404), float64], Tensor[(420), float64]) {
    %929 = @func_10202() /* ty=(Tensor[(3, 15, 11), float32], Tensor[(7, 4, 4), int8]) */;
    %930 = cast(meta[relay.Constant][63] /* ty=Tensor[(480), int16] */, dtype="int16") /* ty=Tensor[(480), int16] */;
    %931 = reshape(%930, newshape=[16, 5, 6]) /* ty=Tensor[(16, 5, 6), int16] */;
    %932 = @func_1118(%931) /* ty=(Tensor[(16, 5, 6), bool],) */;
    %933 = @func_10373() /* ty=(Tensor[(8, 14, 3), int16],) */;
    %934 = %933.0;
    %935 = cast(%934, dtype="float32") /* ty=Tensor[(8, 14, 3), float32] */;
    %936 = cast(%var_10825, dtype="uint8") /* ty=Tensor[(1, 192), uint8] */;
    %937 = cast(%var_10826, dtype="uint16") /* ty=Tensor[(117), uint16] */;
    %938 = cast(meta[relay.Constant][64] /* ty=Tensor[(1404), float64] */, dtype="float64") /* ty=Tensor[(1404), float64] */;
    %939 = cast(meta[relay.Constant][65] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
    %940 = reshape(%936, newshape=[192]) /* ty=Tensor[(192), uint8] */;
    %941 = reshape(%937, newshape=[117]) /* ty=Tensor[(117), uint16] */;
    %942 = reshape(%938, newshape=[1404]) /* ty=Tensor[(1404), float64] */;
    %943 = reshape(%939, newshape=[5, 84]) /* ty=Tensor[(5, 84), float64] */;
    %944 = @func_10466(%940, %941, %942, %943) /* ty=(Tensor[(3, 15, 11), float32], Tensor[(4, 6, 8), bool], Tensor[(192), uint8], Tensor[(1040), int64], Tensor[(1755), float64], Tensor[(11, 6), uint16], Tensor[(39), uint16], Tensor[(117), uint16], Tensor[(1404), float64], Tensor[(5, 84), float64]) */;
    %945 = %929.1;
    %946 = %932.0;
    %947 = log10(%935) /* ty=Tensor[(8, 14, 3), float32] */;
    %948 = %944.5;
    (%945, %946, meta[relay.Constant][63] /* ty=Tensor[(480), int16] */, %947, %948, %var_10825, %var_10826, meta[relay.Constant][64] /* ty=Tensor[(1404), float64] */, meta[relay.Constant][65] /* ty=Tensor[(420), float64] */)
  };
  %949(%var_10844, %var_10845) /* ty=(Tensor[(7, 4, 4), int8], Tensor[(16, 5, 6), bool], Tensor[(480), int16], Tensor[(8, 14, 3), float32], Tensor[(11, 6), uint16], Tensor[(1, 192), uint8], Tensor[(117), uint16], Tensor[(1404), float64], Tensor[(420), float64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen566/build/output.py:2266: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen566/build/output.py", line 2271, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(1024) tvmgen_default_fused_reshape_logical_or_kernel0(signed char* __restrict__ T_logical_or, signed char* __restrict__ placeholder, signed char* __restrict__ placeholder1) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 1650) {
    T_logical_or[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = ((signed char)(((bool)placeholder[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))]) || ((bool)placeholder1[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))])));
  }
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


==========mod==========
#[version = "0.0.5"]
def @func_3920() -> (Tensor[(14, 3, 15), uint32],) {
  %0 = @func_2459() /* ty=(Tensor[(14, 3, 15), uint32],) */;
  %1 = %0.0;
  (%1,)
}

def @func_7520() -> (Tensor[(14, 3, 15), float32],) {
  %2 = @func_5744() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %3 = %2.0;
  (%3,)
}

def @func_8075(%var_8050: Tensor[(18, 50), int8], %var_8054: Tensor[(1, 728), float32], %var_8057: Tensor[(280), float32], %var_8058: Tensor[(525), bool], %var_8059: Tensor[(60), float32]) -> (Tensor[(14, 3, 15), float32], Tensor[(6, 15, 10), int8], Tensor[(18, 50), int8], Tensor[(4, 13, 14), bool], Tensor[(1, 728), float32], Tensor[(14, 3, 15), float32], Tensor[(280), float32], Tensor[(525), bool], Tensor[(60), float32], Tensor[(11, 12, 16), float32]) {
  %4 = @func_1430() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %5 = cast(%var_8050, dtype="int8") /* ty=Tensor[(18, 50), int8] */;
  %6 = cast(%var_8050, dtype="int8") /* ty=Tensor[(18, 50), int8] */;
  %7 = reshape(%5, newshape=[6, 15, 10]) /* ty=Tensor[(6, 15, 10), int8] */;
  %8 = reshape(%6, newshape=[6, 15, 10]) /* ty=Tensor[(6, 15, 10), int8] */;
  %9 = @func_7792(%7, %8) /* ty=(Tensor[(6, 15, 10), int8],) */;
  %10 = cast(%var_8054, dtype="float32") /* ty=Tensor[(1, 728), float32] */;
  %11 = reshape(%10, newshape=[4, 13, 14]) /* ty=Tensor[(4, 13, 14), float32] */;
  %12 = @func_6509(%11) /* ty=(Tensor[(11, 12, 16), float32], Tensor[(4, 13, 14), float32], Tensor[(4, 13, 14), bool]) */;
  %13 = cast(%var_8057, dtype="float32") /* ty=Tensor[(280), float32] */;
  %14 = cast(%var_8058, dtype="bool") /* ty=Tensor[(525), bool] */;
  %15 = cast(%var_8059, dtype="float32") /* ty=Tensor[(60), float32] */;
  %16 = reshape(%13, newshape=[140, 2]) /* ty=Tensor[(140, 2), float32] */;
  %17 = reshape(%14, newshape=[525]) /* ty=Tensor[(525), bool] */;
  %18 = reshape(%15, newshape=[60]) /* ty=Tensor[(60), float32] */;
  %19 = @func_7743(%16, %17, %18) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(15, 7, 5), bool], Tensor[(10), float32], Tensor[(140, 2), float32], Tensor[(525), bool], Tensor[(14, 3, 15), float32], Tensor[(2, 6, 5), float32], Tensor[(60), float32]) */;
  %20 = @func_5777() /* ty=(Tensor[(11, 12, 16), float32],) */;
  %21 = %4.0;
  %22 = %9.0;
  %23 = %12.2;
  %24 = %19.0;
  %25 = %20.0;
  (%21, %22, %var_8050, %23, %var_8054, %24, %var_8057, %var_8058, %var_8059, %25)
}

def @func_3545() -> (Tensor[(14, 3, 15), float64], Tensor[(12, ?, 14), uint8], Tensor[(168), uint8], Tensor[(15, 15, 12), float64], Tensor[(2700), float64]) {
  %26 = @func_2198() /* ty=(Tensor[(14, 3, 15), float64],) */;
  %27 = cast(meta[relay.Constant][0] /* ty=Tensor[(168), uint8] */, dtype="uint8") /* ty=Tensor[(168), uint8] */;
  %28 = reshape(%27, newshape=[12, 1, 14]) /* ty=Tensor[(12, 1, 14), uint8] */;
  %29 = @func_295(%28) /* ty=(Tensor[(12, ?, 14), uint8],) */;
  %30 = cast(meta[relay.Constant][1] /* ty=Tensor[(2700), float64] */, dtype="float64") /* ty=Tensor[(2700), float64] */;
  %31 = reshape(%30, newshape=[15, 15, 12]) /* ty=Tensor[(15, 15, 12), float64] */;
  %32 = @func_2795(%31) /* ty=(Tensor[(15, 15, 12), float64],) */;
  %33 = %26.0;
  %34 = %29.0;
  %35 = %32.0;
  (%33, %34, meta[relay.Constant][0] /* ty=Tensor[(168), uint8] */, %35, meta[relay.Constant][1] /* ty=Tensor[(2700), float64] */)
}

def @func_7880() -> (Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float64]) {
  %36 = @func_2198() /* ty=(Tensor[(14, 3, 15), float64],) */;
  %37 = @func_2016() /* ty=Tensor[(14, 3, 15), float32] */;
  %38 = %36.0;
  (%37, %38)
}

def @func_7743(%var_7721: Tensor[(140, 2), float32], %var_7722: Tensor[(525), bool], %var_7741: Tensor[(60), float32]) -> (Tensor[(14, 3, 15), float32], Tensor[(15, 7, 5), bool], Tensor[(10), float32], Tensor[(140, 2), float32], Tensor[(525), bool], Tensor[(14, 3, 15), float32], Tensor[(2, 6, 5), float32], Tensor[(60), float32]) {
  %39 = cast(meta[relay.Constant][2] /* ty=Tensor[(10), float32] */, dtype="float32") /* ty=Tensor[(10), float32] */;
  %40 = cast(%var_7721, dtype="float32") /* ty=Tensor[(140, 2), float32] */;
  %41 = cast(%var_7722, dtype="bool") /* ty=Tensor[(525), bool] */;
  %42 = reshape(%39, newshape=[1, 2, 5]) /* ty=Tensor[(1, 2, 5), float32] */;
  %43 = reshape(%40, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %44 = reshape(%41, newshape=[525]) /* ty=Tensor[(525), bool] */;
  %45 = @func_1888(%42, %43, %44) /* ty=(Tensor[(1, 2, 5), float32], Tensor[(2, 10, 14), float64], Tensor[(280), float32], Tensor[(15, 7, 5), bool], Tensor[(525), bool]) */;
  %46 = @func_1430() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %47 = cast(%var_7741, dtype="float32") /* ty=Tensor[(60), float32] */;
  %48 = reshape(%47, newshape=[60]) /* ty=Tensor[(60), float32] */;
  %49 = @func_6666(%48) /* ty=(Tensor[(14, 3, 15), uint32], Tensor[(2, 6, 5), float32], Tensor[(60), float32]) */;
  %50 = @func_2894() /* ty=Tensor[(14, 3, 15), float32] */;
  %51 = %45.3;
  %52 = %46.0;
  %53 = %49.1;
  (%50, %51, meta[relay.Constant][2] /* ty=Tensor[(10), float32] */, %var_7721, %var_7722, %52, %53, %var_7741)
}

def @main() -> (Tensor[(2, 14, 6), float64], float64, Tensor[(11, 12, 16), int8]) {
  %54 = cast(-5.80968f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %55 = reshape(%54, newshape=[]) /* ty=float64 */;
  %56 = @func_3440() /* ty=Tensor[(11, 12, 16), float32] */;
  %57 = cast(meta[relay.Constant][3] /* ty=Tensor[(11, 12, 16), float32] */, dtype="int8") /* ty=Tensor[(11, 12, 16), int8] */;
  %58 = shape_of(%56, dtype="int32") /* ty=Tensor[(3), int32] */;
  %59 = cast(%56, dtype="int8") /* ty=Tensor[(11, 12, 16), int8] */;
  %60 = dyn.reshape(%57, %58, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %61 = @func_5813(%55) /* ty=Tensor[(2, 14, 6), float64] */;
  %62 = minimum(%59, %60) /* ty=Tensor[(11, 12, 16), int8] */;
  (%61, -5.80968f64 /* ty=float64 */, %62)
}

def @func_4118() -> Tensor[(525, 1), bool] {
  %63 = @func_1611() /* ty=(Tensor[(14, 3, 15), float32], Tensor[(525, 1), bool], Tensor[(10, 30), bool]) */;
  %63.1
}

def @func_6828(%var_6821: Tensor[(11, 12, 16), float32]) -> (Tensor[(11, 12, 16), bool],) {
  %64 = @func_3198() /* ty=Tensor[(11, 12, 16), float32] */;
  %65 = cast(%var_6821, dtype="bool") /* ty=Tensor[(11, 12, 16), bool] */;
  %66 = shape_of(%64, dtype="int32") /* ty=Tensor[(3), int32] */;
  %67 = cast(%64, dtype="bool") /* ty=Tensor[(11, 12, 16), bool] */;
  %68 = dyn.reshape(%65, %66, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %69 = greater_equal(%67, %68) /* ty=Tensor[(11, 12, 16), bool] */;
  (%69,)
}

def @func_1888(%var_1874: Tensor[(1, 2, 5), float32], %var_1880: Tensor[(280), float32], %var_1884: Tensor[(525), bool]) -> (Tensor[(1, 2, 5), float32], Tensor[(2, 10, 14), float64], Tensor[(280), float32], Tensor[(15, 7, 5), bool], Tensor[(525), bool]) {
  %70 = cast(%var_1874, dtype="float32") /* ty=Tensor[(1, 2, 5), float32] */;
  %71 = cast(%var_1880, dtype="float32") /* ty=Tensor[(280), float32] */;
  %72 = reshape(%71, newshape=[2, 10, 14]) /* ty=Tensor[(2, 10, 14), float32] */;
  %73 = @func_1056(%72) /* ty=(Tensor[(2, 10, 14), float32], Tensor[(2, 10, 14), float64]) */;
  %74 = cast(%var_1884, dtype="bool") /* ty=Tensor[(525), bool] */;
  %75 = cast(%var_1884, dtype="bool") /* ty=Tensor[(525), bool] */;
  %76 = reshape(%74, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), bool] */;
  %77 = reshape(%75, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), bool] */;
  %78 = atan(%70) /* ty=Tensor[(1, 2, 5), float32] */;
  %79 = %73.1;
  %80 = @func_465(%76, %77) /* ty=Tensor[(15, 7, 5), bool] */;
  (%78, %79, %var_1880, %80, %var_1884)
}

def @func_7365() -> Tensor[(14, 3, 15), float32] {
  %81 = @func_7311() /* ty=(Tensor[(14, 3, 15), float32], Tensor[(11, 12, 16), float64]) */;
  %81.0
}

def @func_5482(%var_5477: Tensor[(396), float64]) -> (Tensor[(14, 3, 15), float32], Tensor[(6, 11, 6), float64], Tensor[(396), float64]) {
  %82 = @func_1611() /* ty=(Tensor[(14, 3, 15), float32], Tensor[(525, 1), bool], Tensor[(10, 30), bool]) */;
  %83 = cast(%var_5477, dtype="float64") /* ty=Tensor[(396), float64] */;
  %84 = reshape(%83, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), float64] */;
  %85 = %82.0;
  %86 = @func_1463(%84) /* ty=Tensor[(6, 11, 6), float64] */;
  (%85, %86, %var_5477)
}

def @func_1133(%var_1119: Tensor[(14, 3, 15), float32]) -> (Tensor[(14, 3, 15), bool], Tensor[(14, 3, 15), bool], Tensor[(14, 3, 15), int64]) {
  %87 = @func_1084() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %88 = %87.0;
  %89 = cast(%88, dtype="float32") /* ty=Tensor[(14, 3, 15), float32] */;
  %90 = tan(%89) /* ty=Tensor[(14, 3, 15), float32] */;
  %91 = cast(%88, dtype="bool") /* ty=Tensor[(14, 3, 15), bool] */;
  %92 = shape_of(%90, dtype="int32") /* ty=Tensor[(3), int32] */;
  %93 = cast(%90, dtype="bool") /* ty=Tensor[(14, 3, 15), bool] */;
  %94 = dyn.reshape(%91, %92, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %95 = cast(%var_1119, dtype="bool") /* ty=Tensor[(14, 3, 15), bool] */;
  %96 = shape_of(%90, dtype="int32") /* ty=Tensor[(3), int32] */;
  %97 = cast(%90, dtype="bool") /* ty=Tensor[(14, 3, 15), bool] */;
  %98 = dyn.reshape(%95, %96, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %99 = cast(meta[relay.Constant][4] /* ty=Tensor[(14, 3, 15), float32] */, dtype="int64") /* ty=Tensor[(14, 3, 15), int64] */;
  %100 = shape_of(%var_1119, dtype="int32") /* ty=Tensor[(3), int32] */;
  %101 = cast(%var_1119, dtype="int64") /* ty=Tensor[(14, 3, 15), int64] */;
  %102 = dyn.reshape(%99, %100, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %103 = not_equal(%93, %94) /* ty=Tensor[(14, 3, 15), bool] */;
  %104 = logical_and(%97, %98) /* ty=Tensor[(14, 3, 15), bool] */;
  %105 = bitwise_xor(%101, %102) /* ty=Tensor[(14, 3, 15), int64] */;
  (%103, %104, %105)
}

def @func_2965() -> Tensor[(14, 3, 15), float32] {
  %106 = @func_1611() /* ty=(Tensor[(14, 3, 15), float32], Tensor[(525, 1), bool], Tensor[(10, 30), bool]) */;
  %106.0
}

def @func_1780(%var_1746: Tensor[(396), float64], %var_1771: Tensor[(300), bool]) -> (Tensor[(14, 3, 15), float32], Tensor[(6, 11, 6), float64], Tensor[(396), float64], Tensor[(300), bool], Tensor[(300), bool]) {
  %107 = @func_1040() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %108 = cast(%var_1746, dtype="float64") /* ty=Tensor[(396), float64] */;
  %109 = reshape(%108, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), float64] */;
  %110 = cast(%var_1771, dtype="bool") /* ty=Tensor[(300), bool] */;
  %111 = reshape(%110, newshape=[300]) /* ty=Tensor[(300), bool] */;
  %112 = @func_1404(%111) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(12, 5, 5), bool], Tensor[(300), bool]) */;
  %113 = %107.0;
  %114 = @func_1463(%109) /* ty=Tensor[(6, 11, 6), float64] */;
  %115 = %112.2;
  (%113, %114, %var_1746, %115, %var_1771)
}

def @func_6471() -> (Tensor[(14, 3, 15), uint32],) {
  %116 = @func_6083() /* ty=(Tensor[(14, 3, 15), uint32], Tensor[(396), int32], Tensor[(66, 6), float32]) */;
  %117 = %116.0;
  (%117,)
}

def @func_5158() -> (Tensor[(14, 3, 15), float32],) {
  %118 = @func_1084() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %119 = %118.0;
  (%119,)
}

def @func_6549() -> Tensor[(14, 3, 15), uint32] {
  %120 = @func_2993() /* ty=(Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint32]) */;
  %120.1
}

def @func_7228(%var_7209: Tensor[(728), float32]) -> (Tensor[(14, 3, 15), float32], Tensor[(6, 11, 6), float64], Tensor[(396), float64], Tensor[(4, 13, 14), float32], Tensor[(728), float32], Tensor[(12, ?, 14), uint8], Tensor[(168), uint8], Tensor[(12, ?, 14), uint8]) {
  %121 = cast(meta[relay.Constant][5] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %122 = reshape(%121, newshape=[66, 6]) /* ty=Tensor[(66, 6), float64] */;
  %123 = @func_3260(%122) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(6, 11, 6), float64], Tensor[(66, 6), float64], Tensor[(525, 1), float32], Tensor[(525, ?), float32]) */;
  %124 = cast(%var_7209, dtype="float32") /* ty=Tensor[(728), float32] */;
  %125 = reshape(%124, newshape=[4, 13, 14]) /* ty=Tensor[(4, 13, 14), float32] */;
  %126 = @func_6509(%125) /* ty=(Tensor[(11, 12, 16), float32], Tensor[(4, 13, 14), float32], Tensor[(4, 13, 14), bool]) */;
  %127 = cast(meta[relay.Constant][6] /* ty=Tensor[(168), uint8] */, dtype="uint8") /* ty=Tensor[(168), uint8] */;
  %128 = reshape(%127, newshape=[168, 1]) /* ty=Tensor[(168, 1), uint8] */;
  %129 = @func_1234(%128) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(12, ?, 14), uint8], Tensor[(168, 1), float64]) */;
  %130 = %129.1;
  %131 = cast(%130, dtype="uint8") /* ty=Tensor[(12, ?, 14), uint8] */;
  %132 = reshape(%131, newshape=[168, 1]) /* ty=Tensor[(168, 1), uint8] */;
  %133 = @func_1234(%132) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(12, ?, 14), uint8], Tensor[(168, 1), float64]) */;
  %134 = @func_2910() /* ty=Tensor[(14, 3, 15), float32] */;
  %135 = %123.1;
  %136 = %126.1;
  %137 = %133.1;
  (%134, %135, meta[relay.Constant][5] /* ty=Tensor[(396), float64] */, %136, %var_7209, %130, meta[relay.Constant][6] /* ty=Tensor[(168), uint8] */, %137)
}

def @func_1637(%var_1623: Tensor[(525), bool], %var_1627: Tensor[(66, 6), float64]) -> (Tensor[(14, 3, 15), float32], Tensor[(15, 7, 5), bool], Tensor[(525), bool], Tensor[(6, 11, 6), float64], Tensor[(66, 6), float64]) {
  %138 = @func_1040() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %139 = cast(%var_1623, dtype="bool") /* ty=Tensor[(525), bool] */;
  %140 = cast(%var_1623, dtype="bool") /* ty=Tensor[(525), bool] */;
  %141 = reshape(%139, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), bool] */;
  %142 = reshape(%140, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), bool] */;
  %143 = cast(%var_1627, dtype="float64") /* ty=Tensor[(66, 6), float64] */;
  %144 = reshape(%143, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), float64] */;
  %145 = %138.0;
  %146 = @func_465(%141, %142) /* ty=Tensor[(15, 7, 5), bool] */;
  %147 = @func_1463(%144) /* ty=Tensor[(6, 11, 6), float64] */;
  (%145, %146, %var_1623, %147, %var_1627)
}

def @func_4472(%var_4448: Tensor[(5, 60), bool]) -> (Tensor[(14, 3, 15), float32], Tensor[(525), bool], Tensor[(35, 15), bool], Tensor[(12, 5, 5), float64], Tensor[(5, 60), float32]) {
  %148 = @func_3958() /* ty=Tensor[(14, 3, 15), float32] */;
  %149 = cast(%148, dtype="bool") /* ty=Tensor[(14, 3, 15), bool] */;
  %150 = cast(meta[relay.Constant][7] /* ty=Tensor[(35, 15), bool] */, dtype="bool") /* ty=Tensor[(35, 15), bool] */;
  %151 = reshape(%149, newshape=[14, 3, 15]) /* ty=Tensor[(14, 3, 15), bool] */;
  %152 = reshape(%150, newshape=[525]) /* ty=Tensor[(525), bool] */;
  %153 = @func_1322(%151, %152) /* ty=(Tensor[(14, 3, 15), uint64], Tensor[(15, 7, 5), bool], Tensor[(525), bool]) */;
  %154 = cast(%var_4448, dtype="bool") /* ty=Tensor[(5, 60), bool] */;
  %155 = reshape(%154, newshape=[300]) /* ty=Tensor[(300), bool] */;
  %156 = @func_1404(%155) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(12, 5, 5), bool], Tensor[(300), bool]) */;
  %157 = %156.1;
  %158 = cast(%157, dtype="float64") /* ty=Tensor[(12, 5, 5), float64] */;
  %159 = cast(%var_4448, dtype="float32") /* ty=Tensor[(5, 60), float32] */;
  %160 = %153.2;
  %161 = atanh(%158) /* ty=Tensor[(12, 5, 5), float64] */;
  %162 = asin(%159) /* ty=Tensor[(5, 60), float32] */;
  (%148, %160, meta[relay.Constant][7] /* ty=Tensor[(35, 15), bool] */, %161, %162)
}

def @func_2459() -> (Tensor[(14, 3, 15), uint32],) {
  %163 = @func_2010() /* ty=(Tensor[(14, 3, 15), int64], Tensor[(14, 3, 15), uint32]) */;
  %164 = %163.1;
  (%164,)
}

def @func_1939(%var_1920: Tensor[(525), bool]) -> (Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32], Tensor[(396), float64], Tensor[(15, 7, 5), bool], Tensor[(525), bool]) {
  %165 = @func_1084() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %166 = cast(meta[relay.Constant][8] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %167 = reshape(%166, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %168 = @func_1846(%167) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(6, 11, 6), float64], Tensor[(396), float64]) */;
  %169 = cast(%var_1920, dtype="bool") /* ty=Tensor[(525), bool] */;
  %170 = cast(%var_1920, dtype="bool") /* ty=Tensor[(525), bool] */;
  %171 = reshape(%169, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), bool] */;
  %172 = reshape(%170, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), bool] */;
  %173 = %165.0;
  %174 = %168.0;
  %175 = @func_465(%171, %172) /* ty=Tensor[(15, 7, 5), bool] */;
  (%173, %174, meta[relay.Constant][8] /* ty=Tensor[(396), float64] */, %175, %var_1920)
}

def @func_4885() -> Tensor[(14, 3, 15), uint32] {
  %176 = @func_2459() /* ty=(Tensor[(14, 3, 15), uint32],) */;
  %176.0
}

def @func_4959() -> (Tensor[(14, 3, 15), uint64], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32], Tensor[(9, 10, 16), float32], Tensor[(720, 2), float64]) {
  %177 = @func_4571() /* ty=(Tensor[(14, 3, 15), float32], Tensor[(280), float32], Tensor[(525), bool], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint64], Tensor[(624), uint8], Tensor[(396), float64]) */;
  %178 = @func_2351() /* ty=(Tensor[(14, 3, 15), uint32],) */;
  %179 = %178.0;
  %180 = cast(%179, dtype="float64") /* ty=Tensor[(14, 3, 15), float64] */;
  %181 = log(%180) /* ty=Tensor[(14, 3, 15), float64] */;
  %182 = cast(%181, dtype="float32") /* ty=Tensor[(14, 3, 15), float32] */;
  %183 = cast(meta[relay.Constant][9] /* ty=Tensor[(720, 2), float64] */, dtype="float64") /* ty=Tensor[(720, 2), float64] */;
  %184 = reshape(%183, newshape=[9, 10, 16]) /* ty=Tensor[(9, 10, 16), float64] */;
  %185 = @func_4903(%184) /* ty=(Tensor[(9, 10, 16), float64], Tensor[(9, 10, 16), float32]) */;
  %186 = %177.4;
  %187 = @func_3958() /* ty=Tensor[(14, 3, 15), float32] */;
  %188 = erf(%182) /* ty=Tensor[(14, 3, 15), float32] */;
  %189 = %185.1;
  (%186, %187, %188, %189, meta[relay.Constant][9] /* ty=Tensor[(720, 2), float64] */)
}

def @func_1463(%var_1453: Tensor[(6, 11, 6), float64]) -> Tensor[(6, 11, 6), float64] {
  %190 = cast(%var_1453, dtype="float64") /* ty=Tensor[(6, 11, 6), float64] */;
  log10(%190) /* ty=Tensor[(6, 11, 6), float64] */
}

def @func_3874() -> Tensor[(14, 3, 15), float32] {
  @func_2910() /* ty=Tensor[(14, 3, 15), float32] */
}

def @func_2894() -> Tensor[(14, 3, 15), float32] {
  %191 = @func_1084() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %191.0
}

def @func_5547(%var_5536: Tensor[(27, 50), float64], %var_5543: Tensor[(27, 50), float64]) -> (Tensor[(14, 3, 15), float32], Tensor[(525), bool], Tensor[(525), bool], Tensor[(396), float64], Tensor[(6, 15, 15), float64], Tensor[(27, 50), uint32]) {
  %192 = @func_4858() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %193 = cast(meta[relay.Constant][10] /* ty=Tensor[(525), bool] */, dtype="bool") /* ty=Tensor[(525), bool] */;
  %194 = cast(meta[relay.Constant][11] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %195 = reshape(%193, newshape=[525]) /* ty=Tensor[(525), bool] */;
  %196 = reshape(%194, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %197 = @func_3986(%195, %196) /* ty=(Tensor[(14, 3, 15), float64], Tensor[(15, 7, 5), bool], Tensor[(525), bool], Tensor[(396), float64]) */;
  %198 = cast(%var_5536, dtype="float64") /* ty=Tensor[(27, 50), float64] */;
  %199 = cast(%var_5536, dtype="float64") /* ty=Tensor[(27, 50), float64] */;
  %200 = reshape(%198, newshape=[6, 15, 15]) /* ty=Tensor[(6, 15, 15), float64] */;
  %201 = reshape(%199, newshape=[6, 15, 15]) /* ty=Tensor[(6, 15, 15), float64] */;
  %202 = @func_5078(%200, %201) /* ty=(Tensor[(6, 15, 15), float64], Tensor[(14, 3, 15), float32], Tensor[(396), float64], Tensor[(6, 15, 15), float64], Tensor[(280), float32], Tensor[(280), float32]) */;
  %203 = cast(%var_5543, dtype="uint32") /* ty=Tensor[(27, 50), uint32] */;
  %204 = shape_of(%var_5536, dtype="int32") /* ty=Tensor[(2), int32] */;
  %205 = cast(%var_5536, dtype="uint32") /* ty=Tensor[(27, 50), uint32] */;
  %206 = dyn.reshape(%203, %204, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %207 = %192.0;
  %208 = %197.2;
  %209 = %202.3;
  %210 = bitwise_or(%205, %206) /* ty=Tensor[(27, 50), uint32] */;
  (%207, %208, meta[relay.Constant][10] /* ty=Tensor[(525), bool] */, meta[relay.Constant][11] /* ty=Tensor[(396), float64] */, %209, %210)
}

def @func_4858() -> (Tensor[(14, 3, 15), float32],) {
  %211 = @func_2965() /* ty=Tensor[(14, 3, 15), float32] */;
  (%211,)
}

def @func_7823() -> (Tensor[(14, 3, 15), float32],) {
  %212 = @func_2894() /* ty=Tensor[(14, 3, 15), float32] */;
  (%212,)
}

def @func_5795(%var_5788: Tensor[(1, 280), float32], %var_5789: Tensor[(168), uint8]) -> (Tensor[(11, 12, 16), float32], Tensor[(12, ?, 14), uint8], Tensor[(1, 280), float32], Tensor[(168), uint8], float32) {
  %213 = cast(%var_5788, dtype="float32") /* ty=Tensor[(1, 280), float32] */;
  %214 = cast(%var_5789, dtype="uint8") /* ty=Tensor[(168), uint8] */;
  %215 = cast(-5.34046f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %216 = reshape(%213, newshape=[70, 4]) /* ty=Tensor[(70, 4), float32] */;
  %217 = reshape(%214, newshape=[168]) /* ty=Tensor[(168), uint8] */;
  %218 = reshape(%215, newshape=[]) /* ty=float32 */;
  %219 = @func_3149(%216, %217, %218) /* ty=(Tensor[(14, 3, 15), float64], Tensor[(14, 3, 15), uint64], Tensor[(624), uint8], Tensor[(70, 4), float32], Tensor[(198, 2), float64], Tensor[(12, ?, 14), uint8], Tensor[(168), uint8], Tensor[(8, 7, 11), int64], float32, Tensor[(616), float32], Tensor[(525), bool], Tensor[(14, 3, 15), float32], Tensor[(525, 10), bool], Tensor[(5250), bool], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), int8], Tensor[(14, 3, 15), float32], Tensor[(15, 7, 5), bool], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32]) */;
  %220 = @func_3440() /* ty=Tensor[(11, 12, 16), float32] */;
  %221 = %219.5;
  (%220, %221, %var_5788, %var_5789, -5.34046f /* ty=float32 */)
}

def @func_8506() -> Tensor[(14, 3, 15), uint32] {
  %222 = @func_2010() /* ty=(Tensor[(14, 3, 15), int64], Tensor[(14, 3, 15), uint32]) */;
  %222.1
}

def @func_6666(%var_6664: Tensor[(60), float32]) -> (Tensor[(14, 3, 15), uint32], Tensor[(2, 6, 5), float32], Tensor[(60), float32]) {
  %223 = @func_2459() /* ty=(Tensor[(14, 3, 15), uint32],) */;
  %224 = cast(%var_6664, dtype="float32") /* ty=Tensor[(60), float32] */;
  %225 = reshape(%224, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), float32] */;
  %226 = @func_4099(%225) /* ty=(Tensor[(2, 6, 5), float32], Tensor[(14, 3, 15), uint32]) */;
  %227 = %223.0;
  %228 = %226.0;
  (%227, %228, %var_6664)
}

def @func_5125(%var_5090: uint32, %var_5091: Tensor[(15, 4, 1), uint32]) -> (Tensor[(15, 4, 1), uint32],) {
  %229 = cast(%var_5090, dtype="uint32") /* ty=uint32 */;
  %230 = cast(%var_5091, dtype="uint32") /* ty=Tensor[(15, 4, 1), uint32] */;
  %231 = subtract(%229, %230) /* ty=Tensor[(15, 4, 1), uint32] */;
  (%231,)
}

def @func_7431(%var_7414: Tensor[(630), float64]) -> (Tensor[(11, 12, 16), int64], Tensor[(14, 3, 15), int8], Tensor[(630), float64]) {
  %232 = @func_3198() /* ty=Tensor[(11, 12, 16), float32] */;
  %233 = cast(%232, dtype="float32") /* ty=Tensor[(11, 12, 16), float32] */;
  %234 = acos(%233) /* ty=Tensor[(11, 12, 16), float32] */;
  %235 = cast(%232, dtype="int64") /* ty=Tensor[(11, 12, 16), int64] */;
  %236 = shape_of(%234, dtype="int32") /* ty=Tensor[(3), int32] */;
  %237 = cast(%234, dtype="int64") /* ty=Tensor[(11, 12, 16), int64] */;
  %238 = dyn.reshape(%235, %236, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %239 = cast(%var_7414, dtype="float64") /* ty=Tensor[(630), float64] */;
  %240 = reshape(%239, newshape=[14, 3, 15]) /* ty=Tensor[(14, 3, 15), float64] */;
  %241 = @func_2326(%240) /* ty=(Tensor[(14, 3, 15), int8],) */;
  %242 = right_shift(%237, %238) /* ty=Tensor[(11, 12, 16), int64] */;
  %243 = %241.0;
  (%242, %243, %var_7414)
}

def @func_5709(%var_5689: Tensor[(3, 10, 15), float64], %var_5693: Tensor[(140, 2), float32], %var_5694: Tensor[(168), uint8], %var_5695: float32) -> (Tensor[(8, 7, 11), int64], Tensor[(140, 2), float32], Tensor[(168), uint8], float32, Tensor[(3, 10, 15), bool], Tensor[(14, 3, 15), uint32]) {
  %244 = cast(%var_5693, dtype="float32") /* ty=Tensor[(140, 2), float32] */;
  %245 = cast(%var_5694, dtype="uint8") /* ty=Tensor[(168), uint8] */;
  %246 = cast(%var_5695, dtype="float32") /* ty=float32 */;
  %247 = reshape(%244, newshape=[70, 4]) /* ty=Tensor[(70, 4), float32] */;
  %248 = reshape(%245, newshape=[168]) /* ty=Tensor[(168), uint8] */;
  %249 = reshape(%246, newshape=[]) /* ty=float32 */;
  %250 = @func_3149(%247, %248, %249) /* ty=(Tensor[(14, 3, 15), float64], Tensor[(14, 3, 15), uint64], Tensor[(624), uint8], Tensor[(70, 4), float32], Tensor[(198, 2), float64], Tensor[(12, ?, 14), uint8], Tensor[(168), uint8], Tensor[(8, 7, 11), int64], float32, Tensor[(616), float32], Tensor[(525), bool], Tensor[(14, 3, 15), float32], Tensor[(525, 10), bool], Tensor[(5250), bool], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), int8], Tensor[(14, 3, 15), float32], Tensor[(15, 7, 5), bool], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32]) */;
  %251 = cast(%var_5689, dtype="float64") /* ty=Tensor[(3, 10, 15), float64] */;
  %252 = cosh(%251) /* ty=Tensor[(3, 10, 15), float64] */;
  %253 = cast(%var_5689, dtype="bool") /* ty=Tensor[(3, 10, 15), bool] */;
  %254 = shape_of(%252, dtype="int32") /* ty=Tensor[(3), int32] */;
  %255 = cast(%252, dtype="bool") /* ty=Tensor[(3, 10, 15), bool] */;
  %256 = dyn.reshape(%253, %254, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %257 = %250.7;
  %258 = logical_and(%255, %256) /* ty=Tensor[(3, 10, 15), bool] */;
  %259 = @func_2034() /* ty=Tensor[(14, 3, 15), uint32] */;
  (%257, %var_5693, %var_5694, %var_5695, %258, %259)
}

def @func_7895() -> (Tensor[(14, 3, 15), float32],) {
  %260 = @func_7520() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %261 = %260.0;
  (%261,)
}

def @func_7792(%var_7778: Tensor[(6, 15, 10), int8], %var_7779: Tensor[(6, 15, 10), int8]) -> (Tensor[(6, 15, 10), int8],) {
  %262 = cast(%var_7779, dtype="int8") /* ty=Tensor[(6, 15, 10), int8] */;
  %263 = shape_of(%var_7778, dtype="int32") /* ty=Tensor[(3), int32] */;
  %264 = cast(%var_7778, dtype="int8") /* ty=Tensor[(6, 15, 10), int8] */;
  %265 = dyn.reshape(%262, %263, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %266 = multiply(%264, %265) /* ty=Tensor[(6, 15, 10), int8] */;
  (%266,)
}

def @func_1817() -> Tensor[(14, 3, 15), float32] {
  %267 = @func_1430() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %267.0
}

def @func_2993() -> (Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint32]) {
  %268 = @func_1430() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %269 = @func_2351() /* ty=(Tensor[(14, 3, 15), uint32],) */;
  %270 = %268.0;
  %271 = %269.0;
  (%270, %271)
}

def @func_1040() -> (Tensor[(14, 3, 15), float32],) {
  %272 = cast(meta[relay.Constant][12] /* ty=Tensor[(14, 3, 15), float32] */, dtype="float32") /* ty=Tensor[(14, 3, 15), float32] */;
  %273 = asin(%272) /* ty=Tensor[(14, 3, 15), float32] */;
  (%273,)
}

def @func_2016() -> Tensor[(14, 3, 15), float32] {
  %274 = @func_1430() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %274.0
}

def @func_4571() -> (Tensor[(14, 3, 15), float32], Tensor[(280), float32], Tensor[(525), bool], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint64], Tensor[(624), uint8], Tensor[(396), float64]) {
  %275 = cast(meta[relay.Constant][13] /* ty=Tensor[(525), bool] */, dtype="bool") /* ty=Tensor[(525), bool] */;
  %276 = @func_2965() /* ty=Tensor[(14, 3, 15), float32] */;
  %277 = cast(%276, dtype="float64") /* ty=Tensor[(14, 3, 15), float64] */;
  %278 = reshape(%275, newshape=[525]) /* ty=Tensor[(525), bool] */;
  %279 = reshape(%277, newshape=[14, 3, 15]) /* ty=Tensor[(14, 3, 15), float64] */;
  %280 = @func_3754(%278, %279) /* ty=(Tensor[(525), bool], Tensor[(525), bool], Tensor[(396), float64], Tensor[(2, 10, 14), float32], Tensor[(280), float32], Tensor[(6, 11, 6), float64], Tensor[(14, 3, 15), uint32], Tensor[(14, 3, 15), float32]) */;
  %281 = @func_1040() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %282 = cast(meta[relay.Constant][14] /* ty=Tensor[(624), uint8] */, dtype="uint8") /* ty=Tensor[(624), uint8] */;
  %283 = cast(meta[relay.Constant][14] /* ty=Tensor[(624), uint8] */, dtype="uint8") /* ty=Tensor[(624), uint8] */;
  %284 = %280.4;
  %285 = cast(%284, dtype="float32") /* ty=Tensor[(280), float32] */;
  %286 = cast(meta[relay.Constant][15] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %287 = reshape(%282, newshape=[13, 16, 3]) /* ty=Tensor[(13, 16, 3), uint8] */;
  %288 = reshape(%283, newshape=[13, 16, 3]) /* ty=Tensor[(13, 16, 3), uint8] */;
  %289 = reshape(%285, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %290 = reshape(%286, newshape=[396, 1]) /* ty=Tensor[(396, 1), float64] */;
  %291 = @func_2588(%287, %288, %289, %290) /* ty=(Tensor[(13, 16, 3), uint8], Tensor[(280), float32], Tensor[(280), float32], Tensor[(14, 3, 15), float32], Tensor[(396), float64], Tensor[(14, 3, 15), float32], Tensor[(2, 10, 14), float64], Tensor[(5, 2), float32], Tensor[(525), bool], Tensor[(396, 1), float32], Tensor[(300), bool], Tensor[(300), bool], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint64], Tensor[(396, 1), float32]) */;
  %292 = %281.0;
  %293 = %291.13;
  (%276, %284, meta[relay.Constant][13] /* ty=Tensor[(525), bool] */, %292, %293, meta[relay.Constant][14] /* ty=Tensor[(624), uint8] */, meta[relay.Constant][15] /* ty=Tensor[(396), float64] */)
}

def @func_3198() -> Tensor[(11, 12, 16), float32] {
  %294 = cast(meta[relay.Constant][16] /* ty=Tensor[(11, 12, 16), float32] */, dtype="float32") /* ty=Tensor[(11, 12, 16), float32] */;
  rsqrt(%294) /* ty=Tensor[(11, 12, 16), float32] */
}

def @func_7013(%var_6959: Tensor[(16, 12, 10), float64], %var_6993: float64, %var_7008: Tensor[(5250), bool]) -> (Tensor[(16, 12, 10), float64], Tensor[(2, 14, 6), float64], float64, Tensor[(15, 7, 5), bool], Tensor[(5250), bool]) {
  %295 = cast(%var_6959, dtype="float64") /* ty=Tensor[(16, 12, 10), float64] */;
  %296 = cast(%var_6993, dtype="float64") /* ty=float64 */;
  %297 = reshape(%296, newshape=[]) /* ty=float64 */;
  %298 = cast(%var_7008, dtype="bool") /* ty=Tensor[(5250), bool] */;
  %299 = reshape(%298, newshape=[525, 10]) /* ty=Tensor[(525, 10), bool] */;
  %300 = @func_2092(%299) /* ty=(Tensor[(525, 10), bool], Tensor[(15, 7, 5), bool]) */;
  %301 = log2(%295) /* ty=Tensor[(16, 12, 10), float64] */;
  %302 = @func_5813(%297) /* ty=Tensor[(2, 14, 6), float64] */;
  %303 = %300.1;
  (%301, %302, %var_6993, %303, %var_7008)
}

def @func_4684() -> (Tensor[(14, 3, 15), float32],) {
  %304 = @func_1817() /* ty=Tensor[(14, 3, 15), float32] */;
  (%304,)
}

def @func_3958() -> Tensor[(14, 3, 15), float32] {
  @func_3172() /* ty=Tensor[(14, 3, 15), float32] */
}

def @func_3339(%var_3336: Tensor[(3, 132), float64]) -> (Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), bool], Tensor[(14, 3, 15), float32], Tensor[(3, 132), float64], Tensor[(300), bool]) {
  %305 = @func_2910() /* ty=Tensor[(14, 3, 15), float32] */;
  %306 = cast(%305, dtype="float32") /* ty=Tensor[(14, 3, 15), float32] */;
  %307 = reshape(%306, newshape=[14, 3, 15]) /* ty=Tensor[(14, 3, 15), float32] */;
  %308 = @func_1133(%307) /* ty=(Tensor[(14, 3, 15), bool], Tensor[(14, 3, 15), bool], Tensor[(14, 3, 15), int64]) */;
  %309 = cast(%var_3336, dtype="float64") /* ty=Tensor[(3, 132), float64] */;
  %310 = cast(meta[relay.Constant][17] /* ty=Tensor[(300), bool] */, dtype="bool") /* ty=Tensor[(300), bool] */;
  %311 = reshape(%309, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %312 = reshape(%310, newshape=[300]) /* ty=Tensor[(300), bool] */;
  %313 = @func_1780(%311, %312) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(6, 11, 6), float64], Tensor[(396), float64], Tensor[(300), bool], Tensor[(300), bool]) */;
  %314 = %308.1;
  %315 = %313.0;
  (%305, %314, %315, %var_3336, meta[relay.Constant][17] /* ty=Tensor[(300), bool] */)
}

def @func_3810(%var_3793: Tensor[(14, 3, 15), float64]) -> (Tensor[(14, 3, 15), int16], Tensor[(14, 3, 15), float32]) {
  %316 = @func_3545() /* ty=(Tensor[(14, 3, 15), float64], Tensor[(12, ?, 14), uint8], Tensor[(168), uint8], Tensor[(15, 15, 12), float64], Tensor[(2700), float64]) */;
  %317 = %316.0;
  %318 = cast(%var_3793, dtype="int16") /* ty=Tensor[(14, 3, 15), int16] */;
  %319 = shape_of(%317, dtype="int32") /* ty=Tensor[(3), int32] */;
  %320 = cast(%317, dtype="int16") /* ty=Tensor[(14, 3, 15), int16] */;
  %321 = dyn.reshape(%318, %319, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %322 = maximum(%320, %321) /* ty=Tensor[(14, 3, 15), int16] */;
  %323 = @func_2894() /* ty=Tensor[(14, 3, 15), float32] */;
  (%322, %323)
}

def @func_1152(%var_1142: Tensor[(12, 5, 5), bool]) -> (Tensor[(12, 5, 5), bool], Tensor[(15, 7, 5), bool], Tensor[(525, 1), bool]) {
  %324 = cast(meta[relay.Constant][18] /* ty=Tensor[(12, 5, 5), bool] */, dtype="bool") /* ty=Tensor[(12, 5, 5), bool] */;
  %325 = shape_of(%var_1142, dtype="int32") /* ty=Tensor[(3), int32] */;
  %326 = cast(%var_1142, dtype="bool") /* ty=Tensor[(12, 5, 5), bool] */;
  %327 = dyn.reshape(%324, %325, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %328 = cast(meta[relay.Constant][19] /* ty=Tensor[(525, 1), bool] */, dtype="bool") /* ty=Tensor[(525, 1), bool] */;
  %329 = cast(meta[relay.Constant][19] /* ty=Tensor[(525, 1), bool] */, dtype="bool") /* ty=Tensor[(525, 1), bool] */;
  %330 = reshape(%328, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), bool] */;
  %331 = reshape(%329, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), bool] */;
  %332 = logical_or(%326, %327) /* ty=Tensor[(12, 5, 5), bool] */;
  %333 = @func_465(%330, %331) /* ty=Tensor[(15, 7, 5), bool] */;
  (%332, %333, meta[relay.Constant][19] /* ty=Tensor[(525, 1), bool] */)
}

def @func_6918() -> (Tensor[(14, 3, 15), float32],) {
  %334 = @func_2016() /* ty=Tensor[(14, 3, 15), float32] */;
  (%334,)
}

def @func_1611() -> (Tensor[(14, 3, 15), float32], Tensor[(525, 1), bool], Tensor[(10, 30), bool]) {
  %335 = @func_1430() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %336 = cast(meta[relay.Constant][20] /* ty=Tensor[(10, 30), bool] */, dtype="bool") /* ty=Tensor[(10, 30), bool] */;
  %337 = reshape(%336, newshape=[12, 5, 5]) /* ty=Tensor[(12, 5, 5), bool] */;
  %338 = @func_1152(%337) /* ty=(Tensor[(12, 5, 5), bool], Tensor[(15, 7, 5), bool], Tensor[(525, 1), bool]) */;
  %339 = %335.0;
  %340 = %338.2;
  (%339, %340, meta[relay.Constant][20] /* ty=Tensor[(10, 30), bool] */)
}

def @func_3172() -> Tensor[(14, 3, 15), float32] {
  %341 = @func_1040() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %341.0
}

def @func_3986(%var_3982: Tensor[(525), bool], %var_3983: Tensor[(396), float64]) -> (Tensor[(14, 3, 15), float64], Tensor[(15, 7, 5), bool], Tensor[(525), bool], Tensor[(396), float64]) {
  %342 = @func_2198() /* ty=(Tensor[(14, 3, 15), float64],) */;
  %343 = cast(%var_3982, dtype="bool") /* ty=Tensor[(525), bool] */;
  %344 = cast(%var_3983, dtype="float64") /* ty=Tensor[(396), float64] */;
  %345 = reshape(%343, newshape=[525]) /* ty=Tensor[(525), bool] */;
  %346 = reshape(%344, newshape=[66, 6]) /* ty=Tensor[(66, 6), float64] */;
  %347 = @func_1637(%345, %346) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(15, 7, 5), bool], Tensor[(525), bool], Tensor[(6, 11, 6), float64], Tensor[(66, 6), float64]) */;
  %348 = %342.0;
  %349 = %347.1;
  (%348, %349, %var_3982, %var_3983)
}

def @func_4775(%var_4737: Tensor[(15, 7, 5), bool], %var_4770: float32) -> (Tensor[(624), uint8], Tensor[(525), bool], Tensor[(15, 7, 5), float32], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint32], Tensor[(624), uint8], Tensor[(280), float32], Tensor[(168), uint8], float32) {
  %350 = @func_4571() /* ty=(Tensor[(14, 3, 15), float32], Tensor[(280), float32], Tensor[(525), bool], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint64], Tensor[(624), uint8], Tensor[(396), float64]) */;
  %351 = @func_3172() /* ty=Tensor[(14, 3, 15), float32] */;
  %352 = cast(%351, dtype="bool") /* ty=Tensor[(14, 3, 15), bool] */;
  %353 = cast(meta[relay.Constant][21] /* ty=Tensor[(525), bool] */, dtype="bool") /* ty=Tensor[(525), bool] */;
  %354 = reshape(%352, newshape=[14, 3, 15]) /* ty=Tensor[(14, 3, 15), bool] */;
  %355 = reshape(%353, newshape=[525]) /* ty=Tensor[(525), bool] */;
  %356 = @func_1322(%354, %355) /* ty=(Tensor[(14, 3, 15), uint64], Tensor[(15, 7, 5), bool], Tensor[(525), bool]) */;
  %357 = %356.1;
  %358 = cast(%var_4737, dtype="float32") /* ty=Tensor[(15, 7, 5), float32] */;
  %359 = shape_of(%357, dtype="int32") /* ty=Tensor[(3), int32] */;
  %360 = cast(%357, dtype="float32") /* ty=Tensor[(15, 7, 5), float32] */;
  %361 = dyn.reshape(%358, %359, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %362 = @func_3920() /* ty=(Tensor[(14, 3, 15), uint32],) */;
  %363 = %362.0;
  %364 = cast(%363, dtype="float32") /* ty=Tensor[(14, 3, 15), float32] */;
  %365 = shape_of(%351, dtype="int32") /* ty=Tensor[(3), int32] */;
  %366 = cast(%351, dtype="float32") /* ty=Tensor[(14, 3, 15), float32] */;
  %367 = dyn.reshape(%364, %365, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %368 = @func_4245() /* ty=(Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint32], Tensor[(14, 3, 15), float32]) */;
  %369 = cast(meta[relay.Constant][22] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %370 = cast(meta[relay.Constant][23] /* ty=Tensor[(168), uint8] */, dtype="uint8") /* ty=Tensor[(168), uint8] */;
  %371 = cast(%var_4770, dtype="float32") /* ty=float32 */;
  %372 = reshape(%369, newshape=[70, 4]) /* ty=Tensor[(70, 4), float32] */;
  %373 = reshape(%370, newshape=[168]) /* ty=Tensor[(168), uint8] */;
  %374 = reshape(%371, newshape=[]) /* ty=float32 */;
  %375 = @func_3149(%372, %373, %374) /* ty=(Tensor[(14, 3, 15), float64], Tensor[(14, 3, 15), uint64], Tensor[(624), uint8], Tensor[(70, 4), float32], Tensor[(198, 2), float64], Tensor[(12, ?, 14), uint8], Tensor[(168), uint8], Tensor[(8, 7, 11), int64], float32, Tensor[(616), float32], Tensor[(525), bool], Tensor[(14, 3, 15), float32], Tensor[(525, 10), bool], Tensor[(5250), bool], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), int8], Tensor[(14, 3, 15), float32], Tensor[(15, 7, 5), bool], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32]) */;
  %376 = %350.5;
  %377 = divide(%360, %361) /* ty=Tensor[(15, 7, 5), float32] */;
  %378 = mod(%366, %367) /* ty=Tensor[(14, 3, 15), float32] */;
  %379 = @func_2045() /* ty=Tensor[(14, 3, 15), float32] */;
  %380 = %368.1;
  %381 = %375.2;
  (%376, meta[relay.Constant][21] /* ty=Tensor[(525), bool] */, %377, %378, %379, %380, %381, meta[relay.Constant][22] /* ty=Tensor[(280), float32] */, meta[relay.Constant][23] /* ty=Tensor[(168), uint8] */, %var_4770)
}

def @func_5847() -> Tensor[(14, 3, 15), uint32] {
  %382 = @func_4433() /* ty=(Tensor[(14, 3, 15), uint32], Tensor[(14, 3, 15), uint32]) */;
  %382.0
}

def @func_7156(%var_7149: Tensor[(525, 13), bool]) -> (Tensor[(525, 13), uint64],) {
  %383 = @func_4118() /* ty=Tensor[(525, 1), bool] */;
  %384 = cast(%383, dtype="uint64") /* ty=Tensor[(525, 1), uint64] */;
  %385 = cast(%var_7149, dtype="uint64") /* ty=Tensor[(525, 13), uint64] */;
  %386 = logical_xor(%384, %385) /* ty=Tensor[(525, 13), uint64] */;
  (%386,)
}

def @func_8129() -> Tensor[(15, 7, 5), bool] {
  %387 = @func_7609() /* ty=(Tensor[(525, 1), float32], Tensor[(14, 3, 15), float32], Tensor[(15, 7, 5), bool]) */;
  %387.2
}

def @func_8672() -> (Tensor[(14, 3, 15), uint32], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint32], Tensor[(280), float32], Tensor[(675, 2), float64], Tensor[(14, 3, 15), int8]) {
  %388 = @func_6317() /* ty=(Tensor[(14, 3, 15), uint32],) */;
  %389 = @func_7334() /* ty=(Tensor[(14, 3, 15), uint32],) */;
  %390 = cast(meta[relay.Constant][24] /* ty=Tensor[(675, 2), float64] */, dtype="float64") /* ty=Tensor[(675, 2), float64] */;
  %391 = cast(meta[relay.Constant][24] /* ty=Tensor[(675, 2), float64] */, dtype="float64") /* ty=Tensor[(675, 2), float64] */;
  %392 = reshape(%390, newshape=[6, 15, 15]) /* ty=Tensor[(6, 15, 15), float64] */;
  %393 = reshape(%391, newshape=[6, 15, 15]) /* ty=Tensor[(6, 15, 15), float64] */;
  %394 = @func_5078(%392, %393) /* ty=(Tensor[(6, 15, 15), float64], Tensor[(14, 3, 15), float32], Tensor[(396), float64], Tensor[(6, 15, 15), float64], Tensor[(280), float32], Tensor[(280), float32]) */;
  %395 = %389.0;
  %396 = cast(%395, dtype="float64") /* ty=Tensor[(14, 3, 15), float64] */;
  %397 = reshape(%396, newshape=[630]) /* ty=Tensor[(630), float64] */;
  %398 = @func_7431(%397) /* ty=(Tensor[(11, 12, 16), int64], Tensor[(14, 3, 15), int8], Tensor[(630), float64]) */;
  %399 = %388.0;
  %400 = @func_2016() /* ty=Tensor[(14, 3, 15), float32] */;
  %401 = %394.4;
  %402 = %398.1;
  (%399, %400, %395, %401, meta[relay.Constant][24] /* ty=Tensor[(675, 2), float64] */, %402)
}

def @func_8417() -> (Tensor[(14, 3, 15), uint32],) {
  %403 = @func_2351() /* ty=(Tensor[(14, 3, 15), uint32],) */;
  %404 = %403.0;
  (%404,)
}

def @func_8340(%var_8321: Tensor[(198, 2), float64], %var_8322: Tensor[(280), float32]) -> (Tensor[(14, 3, 15), float32], Tensor[(396), float64], Tensor[(198, 2), float64], Tensor[(280), float32]) {
  %405 = cast(%var_8321, dtype="float64") /* ty=Tensor[(198, 2), float64] */;
  %406 = cast(%var_8322, dtype="float32") /* ty=Tensor[(280), float32] */;
  %407 = reshape(%405, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %408 = reshape(%406, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %409 = @func_5407(%407, %408) /* ty=(Tensor[(14, 3, 15), uint32], Tensor[(396), float64], Tensor[(396), float64], Tensor[(280), float32], Tensor[(624), uint8], Tensor[(280), float32]) */;
  %410 = @func_5569() /* ty=Tensor[(14, 3, 15), float32] */;
  %411 = %409.2;
  (%410, %411, %var_8321, %var_8322)
}

def @func_2910() -> Tensor[(14, 3, 15), float32] {
  @func_2045() /* ty=Tensor[(14, 3, 15), float32] */
}

def @func_5507() -> (Tensor[(14, 3, 15), uint32],) {
  %412 = @func_2034() /* ty=Tensor[(14, 3, 15), uint32] */;
  (%412,)
}

def @func_8358() -> Tensor[(14, 3, 15), float32] {
  %413 = @func_7823() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %413.0
}

def @func_7491(%var_7487: Tensor[(280), float32]) -> (Tensor[(14, 3, 15), uint32], Tensor[(14, 3, 15), int8], Tensor[(14, 3, 15), float64], Tensor[(4, 13, 14), float32], Tensor[(728), float32], Tensor[(12, ?, 14), uint8], Tensor[(280), float32], Tensor[(168), uint8], float32) {
  %414 = @func_2034() /* ty=Tensor[(14, 3, 15), uint32] */;
  %415 = cast(%414, dtype="float64") /* ty=Tensor[(14, 3, 15), float64] */;
  %416 = reshape(%415, newshape=[630]) /* ty=Tensor[(630), float64] */;
  %417 = @func_7431(%416) /* ty=(Tensor[(11, 12, 16), int64], Tensor[(14, 3, 15), int8], Tensor[(630), float64]) */;
  %418 = @func_4129() /* ty=(Tensor[(14, 3, 15), float64],) */;
  %419 = cast(meta[relay.Constant][25] /* ty=Tensor[(728), float32] */, dtype="float32") /* ty=Tensor[(728), float32] */;
  %420 = reshape(%419, newshape=[728]) /* ty=Tensor[(728), float32] */;
  %421 = @func_7228(%420) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(6, 11, 6), float64], Tensor[(396), float64], Tensor[(4, 13, 14), float32], Tensor[(728), float32], Tensor[(12, ?, 14), uint8], Tensor[(168), uint8], Tensor[(12, ?, 14), uint8]) */;
  %422 = cast(%var_7487, dtype="float32") /* ty=Tensor[(280), float32] */;
  %423 = cast(meta[relay.Constant][26] /* ty=Tensor[(168), uint8] */, dtype="uint8") /* ty=Tensor[(168), uint8] */;
  %424 = cast(9.22703f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %425 = reshape(%422, newshape=[70, 4]) /* ty=Tensor[(70, 4), float32] */;
  %426 = reshape(%423, newshape=[168]) /* ty=Tensor[(168), uint8] */;
  %427 = reshape(%424, newshape=[]) /* ty=float32 */;
  %428 = @func_3149(%425, %426, %427) /* ty=(Tensor[(14, 3, 15), float64], Tensor[(14, 3, 15), uint64], Tensor[(624), uint8], Tensor[(70, 4), float32], Tensor[(198, 2), float64], Tensor[(12, ?, 14), uint8], Tensor[(168), uint8], Tensor[(8, 7, 11), int64], float32, Tensor[(616), float32], Tensor[(525), bool], Tensor[(14, 3, 15), float32], Tensor[(525, 10), bool], Tensor[(5250), bool], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), int8], Tensor[(14, 3, 15), float32], Tensor[(15, 7, 5), bool], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32]) */;
  %429 = %417.1;
  %430 = %418.0;
  %431 = %421.3;
  %432 = %428.5;
  (%414, %429, %430, %431, meta[relay.Constant][25] /* ty=Tensor[(728), float32] */, %432, %var_7487, meta[relay.Constant][26] /* ty=Tensor[(168), uint8] */, 9.22703f /* ty=float32 */)
}

def @func_7334() -> (Tensor[(14, 3, 15), uint32],) {
  %433 = @func_4433() /* ty=(Tensor[(14, 3, 15), uint32], Tensor[(14, 3, 15), uint32]) */;
  %434 = %433.0;
  (%434,)
}

def @func_4513(%var_4492: Tensor[(10, 15, 14), uint16], %var_4493: Tensor[(10, 15, 14), uint16]) -> (Tensor[(10, 15, 14), uint16], Tensor[(10, 15, 14), float32]) {
  %435 = cast(%var_4493, dtype="uint16") /* ty=Tensor[(10, 15, 14), uint16] */;
  %436 = shape_of(%var_4492, dtype="int32") /* ty=Tensor[(3), int32] */;
  %437 = cast(%var_4492, dtype="uint16") /* ty=Tensor[(10, 15, 14), uint16] */;
  %438 = dyn.reshape(%435, %436, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %439 = cast(%var_4493, dtype="float32") /* ty=Tensor[(10, 15, 14), float32] */;
  %440 = bitwise_or(%437, %438) /* ty=Tensor[(10, 15, 14), uint16] */;
  %441 = log10(%439) /* ty=Tensor[(10, 15, 14), float32] */;
  (%440, %441)
}

def @func_6509(%var_6482: Tensor[(4, 13, 14), float32]) -> (Tensor[(11, 12, 16), float32], Tensor[(4, 13, 14), float32], Tensor[(4, 13, 14), bool]) {
  %442 = @func_5777() /* ty=(Tensor[(11, 12, 16), float32],) */;
  %443 = cast(%var_6482, dtype="float32") /* ty=Tensor[(4, 13, 14), float32] */;
  %444 = cos(%443) /* ty=Tensor[(4, 13, 14), float32] */;
  %445 = cast(%444, dtype="float32") /* ty=Tensor[(4, 13, 14), float32] */;
  %446 = cast(%var_6482, dtype="bool") /* ty=Tensor[(4, 13, 14), bool] */;
  %447 = shape_of(%444, dtype="int32") /* ty=Tensor[(3), int32] */;
  %448 = cast(%444, dtype="bool") /* ty=Tensor[(4, 13, 14), bool] */;
  %449 = dyn.reshape(%446, %447, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %450 = %442.0;
  %451 = acos(%445) /* ty=Tensor[(4, 13, 14), float32] */;
  %452 = logical_and(%448, %449) /* ty=Tensor[(4, 13, 14), bool] */;
  (%450, %451, %452)
}

def @func_2351() -> (Tensor[(14, 3, 15), uint32],) {
  %453 = @func_2010() /* ty=(Tensor[(14, 3, 15), int64], Tensor[(14, 3, 15), uint32]) */;
  %454 = %453.1;
  (%454,)
}

def @func_5078(%var_5005: Tensor[(6, 15, 15), float64], %var_5006: Tensor[(6, 15, 15), float64]) -> (Tensor[(6, 15, 15), float64], Tensor[(14, 3, 15), float32], Tensor[(396), float64], Tensor[(6, 15, 15), float64], Tensor[(280), float32], Tensor[(280), float32]) {
  %455 = cast(%var_5006, dtype="float64") /* ty=Tensor[(6, 15, 15), float64] */;
  %456 = shape_of(%var_5005, dtype="int32") /* ty=Tensor[(3), int32] */;
  %457 = cast(%var_5005, dtype="float64") /* ty=Tensor[(6, 15, 15), float64] */;
  %458 = dyn.reshape(%455, %456, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %459 = cast(meta[relay.Constant][27] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %460 = reshape(%459, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %461 = @func_1846(%460) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(6, 11, 6), float64], Tensor[(396), float64]) */;
  %462 = cast(%var_5006, dtype="float64") /* ty=Tensor[(6, 15, 15), float64] */;
  %463 = shape_of(%var_5005, dtype="int32") /* ty=Tensor[(3), int32] */;
  %464 = cast(%var_5005, dtype="float64") /* ty=Tensor[(6, 15, 15), float64] */;
  %465 = dyn.reshape(%462, %463, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %466 = cast(meta[relay.Constant][28] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %467 = reshape(%466, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %468 = @func_2405(%467) /* ty=(Tensor[(14, 3, 15), uint64], Tensor[(2, 10, 14), float32], Tensor[(280), float32]) */;
  %469 = floor_mod(%457, %458) /* ty=Tensor[(6, 15, 15), float64] */;
  %470 = %461.0;
  %471 = divide(%464, %465) /* ty=Tensor[(6, 15, 15), float64] */;
  %472 = %468.2;
  (%469, %470, meta[relay.Constant][27] /* ty=Tensor[(396), float64] */, %471, %472, meta[relay.Constant][28] /* ty=Tensor[(280), float32] */)
}

def @func_2045() -> Tensor[(14, 3, 15), float32] {
  %473 = @func_1040() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %473.0
}

def @func_1084() -> (Tensor[(14, 3, 15), float32],) {
  %474 = @func_1040() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %475 = %474.0;
  (%475,)
}

def @func_2629(%var_2614: Tensor[(3, 4, 14), int16], %var_2620: Tensor[(300), bool]) -> (Tensor[(3, 4, 14), bool], Tensor[(6, 11, 6), float64], Tensor[(396), float64], Tensor[(300), bool]) {
  %476 = cast(%var_2614, dtype="bool") /* ty=Tensor[(3, 4, 14), bool] */;
  %477 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(3, 4, 14), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %478 = cast(meta[relay.Constant][29] /* ty=Tensor[(3, 4, 14), int16] */, dtype="bool") /* ty=Tensor[(3, 4, 14), bool] */;
  %479 = dyn.reshape(%476, %477, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %480 = cast(meta[relay.Constant][30] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %481 = cast(%var_2620, dtype="bool") /* ty=Tensor[(300), bool] */;
  %482 = reshape(%480, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %483 = reshape(%481, newshape=[300]) /* ty=Tensor[(300), bool] */;
  %484 = @func_1780(%482, %483) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(6, 11, 6), float64], Tensor[(396), float64], Tensor[(300), bool], Tensor[(300), bool]) */;
  %485 = equal(%478, %479) /* ty=Tensor[(3, 4, 14), bool] */;
  %486 = %484.1;
  (%485, %486, meta[relay.Constant][30] /* ty=Tensor[(396), float64] */, %var_2620)
}

def @func_2092(%var_2071: Tensor[(525, 10), bool]) -> (Tensor[(525, 10), bool], Tensor[(15, 7, 5), bool]) {
  %487 = @func_1611() /* ty=(Tensor[(14, 3, 15), float32], Tensor[(525, 1), bool], Tensor[(10, 30), bool]) */;
  %488 = %487.1;
  %489 = cast(%488, dtype="bool") /* ty=Tensor[(525, 1), bool] */;
  %490 = cast(%var_2071, dtype="bool") /* ty=Tensor[(525, 10), bool] */;
  %491 = cast(%488, dtype="bool") /* ty=Tensor[(525, 1), bool] */;
  %492 = cast(%488, dtype="bool") /* ty=Tensor[(525, 1), bool] */;
  %493 = reshape(%491, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), bool] */;
  %494 = reshape(%492, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), bool] */;
  %495 = less_equal(%489, %490) /* ty=Tensor[(525, 10), bool] */;
  %496 = @func_465(%493, %494) /* ty=Tensor[(15, 7, 5), bool] */;
  (%495, %496)
}

def @func_1234(%var_1197: Tensor[(168, 1), uint8]) -> (Tensor[(14, 3, 15), float32], Tensor[(12, ?, 14), uint8], Tensor[(168, 1), float64]) {
  %497 = @func_1040() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %498 = cast(%var_1197, dtype="uint8") /* ty=Tensor[(168, 1), uint8] */;
  %499 = reshape(%498, newshape=[12, 1, 14]) /* ty=Tensor[(12, 1, 14), uint8] */;
  %500 = @func_295(%499) /* ty=(Tensor[(12, ?, 14), uint8],) */;
  %501 = cast(%var_1197, dtype="float32") /* ty=Tensor[(168, 1), float32] */;
  %502 = acos(%501) /* ty=Tensor[(168, 1), float32] */;
  %503 = cast(%502, dtype="float64") /* ty=Tensor[(168, 1), float64] */;
  %504 = %497.0;
  %505 = %500.0;
  %506 = atan(%503) /* ty=Tensor[(168, 1), float64] */;
  (%504, %505, %506)
}

def @func_2326(%var_2318: Tensor[(14, 3, 15), float64]) -> (Tensor[(14, 3, 15), int8],) {
  %507 = @func_2198() /* ty=(Tensor[(14, 3, 15), float64],) */;
  %508 = %507.0;
  %509 = cast(%var_2318, dtype="int8") /* ty=Tensor[(14, 3, 15), int8] */;
  %510 = shape_of(%508, dtype="int32") /* ty=Tensor[(3), int32] */;
  %511 = cast(%508, dtype="int8") /* ty=Tensor[(14, 3, 15), int8] */;
  %512 = dyn.reshape(%509, %510, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %513 = logical_xor(%511, %512) /* ty=Tensor[(14, 3, 15), int8] */;
  (%513,)
}

def @func_1322(%var_1307: Tensor[(14, 3, 15), bool], %var_1317: Tensor[(525), bool]) -> (Tensor[(14, 3, 15), uint64], Tensor[(15, 7, 5), bool], Tensor[(525), bool]) {
  %514 = @func_1040() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %515 = %514.0;
  %516 = cast(%515, dtype="float32") /* ty=Tensor[(14, 3, 15), float32] */;
  %517 = cosh(%516) /* ty=Tensor[(14, 3, 15), float32] */;
  %518 = cast(%515, dtype="bool") /* ty=Tensor[(14, 3, 15), bool] */;
  %519 = shape_of(%517, dtype="int32") /* ty=Tensor[(3), int32] */;
  %520 = cast(%517, dtype="bool") /* ty=Tensor[(14, 3, 15), bool] */;
  %521 = dyn.reshape(%518, %519, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %522 = greater_equal(%520, %521) /* ty=Tensor[(14, 3, 15), bool] */;
  %523 = cast(%var_1307, dtype="uint64") /* ty=Tensor[(14, 3, 15), uint64] */;
  %524 = shape_of(%522, dtype="int32") /* ty=Tensor[(3), int32] */;
  %525 = cast(%522, dtype="uint64") /* ty=Tensor[(14, 3, 15), uint64] */;
  %526 = dyn.reshape(%523, %524, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %527 = cast(%var_1317, dtype="bool") /* ty=Tensor[(525), bool] */;
  %528 = cast(%var_1317, dtype="bool") /* ty=Tensor[(525), bool] */;
  %529 = reshape(%527, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), bool] */;
  %530 = reshape(%528, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), bool] */;
  %531 = bitwise_or(%525, %526) /* ty=Tensor[(14, 3, 15), uint64] */;
  %532 = @func_465(%529, %530) /* ty=Tensor[(15, 7, 5), bool] */;
  (%531, %532, %var_1317)
}

def @func_2795(%var_2787: Tensor[(15, 15, 12), float64]) -> (Tensor[(15, 15, 12), float64],) {
  %533 = cast(%var_2787, dtype="float64") /* ty=Tensor[(15, 15, 12), float64] */;
  %534 = cosh(%533) /* ty=Tensor[(15, 15, 12), float64] */;
  (%534,)
}

def @func_5813(%var_5808: float64) -> Tensor[(2, 14, 6), float64] {
  %535 = cast(%var_5808, dtype="float64") /* ty=float64 */;
  %536 = cast(meta[relay.Constant][31] /* ty=Tensor[(2, 14, 6), float64] */, dtype="float64") /* ty=Tensor[(2, 14, 6), float64] */;
  power(%535, %536) /* ty=Tensor[(2, 14, 6), float64] */
}

def @func_4099(%var_4086: Tensor[(2, 6, 5), float32]) -> (Tensor[(2, 6, 5), float32], Tensor[(14, 3, 15), uint32]) {
  %537 = cast(%var_4086, dtype="float32") /* ty=Tensor[(2, 6, 5), float32] */;
  %538 = @func_3920() /* ty=(Tensor[(14, 3, 15), uint32],) */;
  %539 = sigmoid(%537) /* ty=Tensor[(2, 6, 5), float32] */;
  %540 = %538.0;
  (%539, %540)
}

def @func_295(%var_288: Tensor[(12, 1, 14), uint8]) -> (Tensor[(12, ?, 14), uint8],) {
  %541 = cast(meta[relay.Constant][32] /* ty=Tensor[(12, 1, 14), uint8] */, dtype="uint8") /* ty=Tensor[(12, 1, 14), uint8] */;
  %542 = shape_of(%var_288, dtype="int32") /* ty=Tensor[(3), int32] */;
  %543 = cast(%var_288, dtype="uint8") /* ty=Tensor[(12, 1, 14), uint8] */;
  %544 = dyn.reshape(%541, %542, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %545 = right_shift(%543, %544) /* ty=Tensor[(12, ?, 14), uint8] */;
  (%545,)
}

def @func_7534() -> (Tensor[(14, 3, 15), float32],) {
  %546 = @func_5569() /* ty=Tensor[(14, 3, 15), float32] */;
  (%546,)
}

def @func_5610() -> Tensor[(14, 3, 15), uint32] {
  @func_2034() /* ty=Tensor[(14, 3, 15), uint32] */
}

def @func_2142(%var_2128: Tensor[(396), float64]) -> (Tensor[(14, 3, 15), float32], Tensor[(396), float64], Tensor[(396), float64]) {
  %547 = cast(%var_2128, dtype="float64") /* ty=Tensor[(396), float64] */;
  %548 = reshape(%547, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %549 = @func_1846(%548) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(6, 11, 6), float64], Tensor[(396), float64]) */;
  %550 = @func_1817() /* ty=Tensor[(14, 3, 15), float32] */;
  %551 = %549.2;
  (%550, %551, %var_2128)
}

def @func_1526(%var_1502: Tensor[(14, 3, 15), float32]) -> (Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32]) {
  %552 = @func_1084() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %553 = %552.0;
  %554 = cast(%var_1502, dtype="float32") /* ty=Tensor[(14, 3, 15), float32] */;
  %555 = shape_of(%553, dtype="int32") /* ty=Tensor[(3), int32] */;
  %556 = cast(%553, dtype="float32") /* ty=Tensor[(14, 3, 15), float32] */;
  %557 = dyn.reshape(%554, %555, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %558 = @func_1084() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %559 = divide(%556, %557) /* ty=Tensor[(14, 3, 15), float32] */;
  %560 = %558.0;
  (%559, %560)
}

def @func_5744() -> (Tensor[(14, 3, 15), float32],) {
  %561 = @func_2965() /* ty=Tensor[(14, 3, 15), float32] */;
  (%561,)
}

def @func_7678() -> (Tensor[(14, 3, 15), uint32], Tensor[(14, 3, 15), float32]) {
  %562 = @func_2993() /* ty=(Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint32]) */;
  %563 = %562.1;
  %564 = @func_2894() /* ty=Tensor[(14, 3, 15), float32] */;
  (%563, %564)
}

def @func_6351(%var_6334: uint32) -> (Tensor[(14, 3, 15), float32], uint32, Tensor[(60), uint32], Tensor[(15, 4, 1), float64]) {
  %565 = @func_1084() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %566 = cast(%var_6334, dtype="uint32") /* ty=uint32 */;
  %567 = cast(meta[relay.Constant][33] /* ty=Tensor[(60), uint32] */, dtype="uint32") /* ty=Tensor[(60), uint32] */;
  %568 = reshape(%566, newshape=[]) /* ty=uint32 */;
  %569 = reshape(%567, newshape=[15, 4, 1]) /* ty=Tensor[(15, 4, 1), uint32] */;
  %570 = @func_5125(%568, %569) /* ty=(Tensor[(15, 4, 1), uint32],) */;
  %571 = %570.0;
  %572 = cast(%571, dtype="float64") /* ty=Tensor[(15, 4, 1), float64] */;
  %573 = %565.0;
  %574 = sin(%572) /* ty=Tensor[(15, 4, 1), float64] */;
  (%573, %var_6334, meta[relay.Constant][33] /* ty=Tensor[(60), uint32] */, %574)
}

def @func_2034() -> Tensor[(14, 3, 15), uint32] {
  %575 = @func_2010() /* ty=(Tensor[(14, 3, 15), int64], Tensor[(14, 3, 15), uint32]) */;
  %575.1
}

def @func_2452(%var_2441: int16, %var_2442: Tensor[(11, 11, 11), int16]) -> Tensor[(11, 11, 11), bool] {
  %576 = cast(%var_2441, dtype="int16") /* ty=int16 */;
  %577 = cast(%var_2442, dtype="int16") /* ty=Tensor[(11, 11, 11), int16] */;
  %578 = right_shift(%576, %577) /* ty=Tensor[(11, 11, 11), int16] */;
  %579 = cast(%578, dtype="bool") /* ty=Tensor[(11, 11, 11), bool] */;
  %580 = cast(%var_2441, dtype="bool") /* ty=bool */;
  less(%579, %580) /* ty=Tensor[(11, 11, 11), bool] */
}

def @func_4903(%var_4889: Tensor[(9, 10, 16), float64]) -> (Tensor[(9, 10, 16), float64], Tensor[(9, 10, 16), float32]) {
  %581 = cast(meta[relay.Constant][34] /* ty=Tensor[(9, 10, 16), float64] */, dtype="float64") /* ty=Tensor[(9, 10, 16), float64] */;
  %582 = shape_of(%var_4889, dtype="int32") /* ty=Tensor[(3), int32] */;
  %583 = cast(%var_4889, dtype="float64") /* ty=Tensor[(9, 10, 16), float64] */;
  %584 = dyn.reshape(%581, %582, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %585 = cast(meta[relay.Constant][34] /* ty=Tensor[(9, 10, 16), float64] */, dtype="float32") /* ty=Tensor[(9, 10, 16), float32] */;
  %586 = floor_divide(%583, %584) /* ty=Tensor[(9, 10, 16), float64] */;
  %587 = atanh(%585) /* ty=Tensor[(9, 10, 16), float32] */;
  (%586, %587)
}

def @func_2198() -> (Tensor[(14, 3, 15), float64],) {
  %588 = @func_2016() /* ty=Tensor[(14, 3, 15), float32] */;
  %589 = cast(meta[relay.Constant][35] /* ty=Tensor[(14, 3, 15), float32] */, dtype="float64") /* ty=Tensor[(14, 3, 15), float64] */;
  %590 = shape_of(%588, dtype="int32") /* ty=Tensor[(3), int32] */;
  %591 = cast(%588, dtype="float64") /* ty=Tensor[(14, 3, 15), float64] */;
  %592 = dyn.reshape(%589, %590, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %593 = floor_divide(%591, %592) /* ty=Tensor[(14, 3, 15), float64] */;
  (%593,)
}

def @func_3418(%var_3368: Tensor[(11, 12, 16), float32]) -> (Tensor[(14, 3, 15), float32], Tensor[(11, 12, 16), float64], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float64]) {
  %594 = @func_3198() /* ty=Tensor[(11, 12, 16), float32] */;
  %595 = cast(%var_3368, dtype="float32") /* ty=Tensor[(11, 12, 16), float32] */;
  %596 = shape_of(%594, dtype="int32") /* ty=Tensor[(3), int32] */;
  %597 = cast(%594, dtype="float32") /* ty=Tensor[(11, 12, 16), float32] */;
  %598 = dyn.reshape(%595, %596, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %599 = divide(%597, %598) /* ty=Tensor[(11, 12, 16), float32] */;
  %600 = cast(%599, dtype="float64") /* ty=Tensor[(11, 12, 16), float64] */;
  %601 = @func_1611() /* ty=(Tensor[(14, 3, 15), float32], Tensor[(525, 1), bool], Tensor[(10, 30), bool]) */;
  %602 = @func_1040() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %603 = @func_2198() /* ty=(Tensor[(14, 3, 15), float64],) */;
  %604 = @func_2910() /* ty=Tensor[(14, 3, 15), float32] */;
  %605 = sigmoid(%600) /* ty=Tensor[(11, 12, 16), float64] */;
  %606 = %601.0;
  %607 = %602.0;
  %608 = @func_2910() /* ty=Tensor[(14, 3, 15), float32] */;
  %609 = %603.0;
  (%604, %605, %606, %607, %608, %609)
}

def @func_1056(%var_1047: Tensor[(2, 10, 14), float32]) -> (Tensor[(2, 10, 14), float32], Tensor[(2, 10, 14), float64]) {
  %610 = cast(%var_1047, dtype="float32") /* ty=Tensor[(2, 10, 14), float32] */;
  %611 = cast(%var_1047, dtype="float64") /* ty=Tensor[(2, 10, 14), float64] */;
  %612 = cos(%610) /* ty=Tensor[(2, 10, 14), float32] */;
  %613 = sin(%611) /* ty=Tensor[(2, 10, 14), float64] */;
  (%612, %613)
}

def @func_3754(%var_3669: Tensor[(525), bool], %var_3696: Tensor[(14, 3, 15), float64]) -> (Tensor[(525), bool], Tensor[(525), bool], Tensor[(396), float64], Tensor[(2, 10, 14), float32], Tensor[(280), float32], Tensor[(6, 11, 6), float64], Tensor[(14, 3, 15), uint32], Tensor[(14, 3, 15), float32]) {
  %614 = cast(%var_3669, dtype="bool") /* ty=Tensor[(525), bool] */;
  %615 = cast(meta[relay.Constant][36] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %616 = reshape(%614, newshape=[525]) /* ty=Tensor[(525), bool] */;
  %617 = reshape(%615, newshape=[66, 6]) /* ty=Tensor[(66, 6), float64] */;
  %618 = @func_1637(%616, %617) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(15, 7, 5), bool], Tensor[(525), bool], Tensor[(6, 11, 6), float64], Tensor[(66, 6), float64]) */;
  %619 = cast(meta[relay.Constant][37] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %620 = reshape(%619, newshape=[2, 10, 14]) /* ty=Tensor[(2, 10, 14), float32] */;
  %621 = @func_1056(%620) /* ty=(Tensor[(2, 10, 14), float32], Tensor[(2, 10, 14), float64]) */;
  %622 = cast(%var_3669, dtype="bool") /* ty=Tensor[(525), bool] */;
  %623 = cast(meta[relay.Constant][36] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %624 = reshape(%622, newshape=[525]) /* ty=Tensor[(525), bool] */;
  %625 = reshape(%623, newshape=[66, 6]) /* ty=Tensor[(66, 6), float64] */;
  %626 = @func_1637(%624, %625) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(15, 7, 5), bool], Tensor[(525), bool], Tensor[(6, 11, 6), float64], Tensor[(66, 6), float64]) */;
  %627 = @func_2910() /* ty=Tensor[(14, 3, 15), float32] */;
  %628 = cast(%627, dtype="float64") /* ty=Tensor[(14, 3, 15), float64] */;
  %629 = asinh(%628) /* ty=Tensor[(14, 3, 15), float64] */;
  %630 = cast(%629, dtype="float64") /* ty=Tensor[(14, 3, 15), float64] */;
  %631 = sin(%630) /* ty=Tensor[(14, 3, 15), float64] */;
  %632 = cast(%var_3696, dtype="uint32") /* ty=Tensor[(14, 3, 15), uint32] */;
  %633 = shape_of(%631, dtype="int32") /* ty=Tensor[(3), int32] */;
  %634 = cast(%631, dtype="uint32") /* ty=Tensor[(14, 3, 15), uint32] */;
  %635 = dyn.reshape(%632, %633, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %636 = cast(%631, dtype="float32") /* ty=Tensor[(14, 3, 15), float32] */;
  %637 = shape_of(%629, dtype="int32") /* ty=Tensor[(3), int32] */;
  %638 = cast(%629, dtype="float32") /* ty=Tensor[(14, 3, 15), float32] */;
  %639 = dyn.reshape(%636, %637, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %640 = %618.2;
  %641 = %621.0;
  %642 = %626.3;
  %643 = bitwise_and(%634, %635) /* ty=Tensor[(14, 3, 15), uint32] */;
  %644 = power(%638, %639) /* ty=Tensor[(14, 3, 15), float32] */;
  (%640, %var_3669, meta[relay.Constant][36] /* ty=Tensor[(396), float64] */, %641, meta[relay.Constant][37] /* ty=Tensor[(280), float32] */, %642, %643, %644)
}

def @func_1404(%var_1382: Tensor[(300), bool]) -> (Tensor[(14, 3, 15), float32], Tensor[(12, 5, 5), bool], Tensor[(300), bool]) {
  %645 = @func_1084() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %646 = cast(%var_1382, dtype="bool") /* ty=Tensor[(300), bool] */;
  %647 = reshape(%646, newshape=[12, 5, 5]) /* ty=Tensor[(12, 5, 5), bool] */;
  %648 = @func_1152(%647) /* ty=(Tensor[(12, 5, 5), bool], Tensor[(15, 7, 5), bool], Tensor[(525, 1), bool]) */;
  %649 = %645.0;
  %650 = %648.0;
  (%649, %650, %var_1382)
}

def @func_7557() -> Tensor[(525, 1), bool] {
  @func_4118() /* ty=Tensor[(525, 1), bool] */
}

def @func_5777() -> (Tensor[(11, 12, 16), float32],) {
  %651 = @func_3440() /* ty=Tensor[(11, 12, 16), float32] */;
  %652 = cast(%651, dtype="float32") /* ty=Tensor[(11, 12, 16), float32] */;
  %653 = cosh(%652) /* ty=Tensor[(11, 12, 16), float32] */;
  (%653,)
}

def @func_4245() -> (Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint32], Tensor[(14, 3, 15), float32]) {
  %654 = @func_2459() /* ty=(Tensor[(14, 3, 15), uint32],) */;
  %655 = @func_1430() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %656 = @func_3172() /* ty=Tensor[(14, 3, 15), float32] */;
  %657 = %654.0;
  %658 = %655.0;
  (%656, %657, %658)
}

def @func_6643(%var_6621: Tensor[(42, 4), uint8]) -> (Tensor[(14, 3, 15), float32], Tensor[(168), uint8], Tensor[(280), float32], Tensor[(42, 4), float32]) {
  %659 = @func_4684() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %660 = cast(meta[relay.Constant][38] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %661 = cast(%var_6621, dtype="uint8") /* ty=Tensor[(42, 4), uint8] */;
  %662 = reshape(%660, newshape=[1, 280]) /* ty=Tensor[(1, 280), float32] */;
  %663 = reshape(%661, newshape=[168]) /* ty=Tensor[(168), uint8] */;
  %664 = @func_5795(%662, %663) /* ty=(Tensor[(11, 12, 16), float32], Tensor[(12, ?, 14), uint8], Tensor[(1, 280), float32], Tensor[(168), uint8], float32) */;
  %665 = cast(%var_6621, dtype="float32") /* ty=Tensor[(42, 4), float32] */;
  %666 = %659.0;
  %667 = %664.3;
  %668 = sin(%665) /* ty=Tensor[(42, 4), float32] */;
  (%666, %667, meta[relay.Constant][38] /* ty=Tensor[(280), float32] */, %668)
}

def @func_5407(%var_5364: Tensor[(396), float64], %var_5380: Tensor[(280), float32]) -> (Tensor[(14, 3, 15), uint32], Tensor[(396), float64], Tensor[(396), float64], Tensor[(280), float32], Tensor[(624), uint8], Tensor[(280), float32]) {
  %669 = @func_2351() /* ty=(Tensor[(14, 3, 15), uint32],) */;
  %670 = cast(%var_5364, dtype="float64") /* ty=Tensor[(396), float64] */;
  %671 = reshape(%670, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %672 = @func_2142(%671) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(396), float64], Tensor[(396), float64]) */;
  %673 = cast(meta[relay.Constant][39] /* ty=Tensor[(624), uint8] */, dtype="uint8") /* ty=Tensor[(624), uint8] */;
  %674 = cast(meta[relay.Constant][39] /* ty=Tensor[(624), uint8] */, dtype="uint8") /* ty=Tensor[(624), uint8] */;
  %675 = cast(%var_5380, dtype="float32") /* ty=Tensor[(280), float32] */;
  %676 = cast(%var_5364, dtype="float64") /* ty=Tensor[(396), float64] */;
  %677 = reshape(%673, newshape=[13, 16, 3]) /* ty=Tensor[(13, 16, 3), uint8] */;
  %678 = reshape(%674, newshape=[13, 16, 3]) /* ty=Tensor[(13, 16, 3), uint8] */;
  %679 = reshape(%675, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %680 = reshape(%676, newshape=[396, 1]) /* ty=Tensor[(396, 1), float64] */;
  %681 = @func_2588(%677, %678, %679, %680) /* ty=(Tensor[(13, 16, 3), uint8], Tensor[(280), float32], Tensor[(280), float32], Tensor[(14, 3, 15), float32], Tensor[(396), float64], Tensor[(14, 3, 15), float32], Tensor[(2, 10, 14), float64], Tensor[(5, 2), float32], Tensor[(525), bool], Tensor[(396, 1), float32], Tensor[(300), bool], Tensor[(300), bool], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint64], Tensor[(396, 1), float32]) */;
  %682 = %669.0;
  %683 = %672.1;
  %684 = %681.2;
  (%682, %683, %var_5364, %684, meta[relay.Constant][39] /* ty=Tensor[(624), uint8] */, %var_5380)
}

def @func_2010() -> (Tensor[(14, 3, 15), int64], Tensor[(14, 3, 15), uint32]) {
  %685 = @func_1084() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %686 = %685.0;
  %687 = cast(%686, dtype="float32") /* ty=Tensor[(14, 3, 15), float32] */;
  %688 = reshape(%687, newshape=[14, 3, 15]) /* ty=Tensor[(14, 3, 15), float32] */;
  %689 = @func_1133(%688) /* ty=(Tensor[(14, 3, 15), bool], Tensor[(14, 3, 15), bool], Tensor[(14, 3, 15), int64]) */;
  %690 = cast(%686, dtype="float32") /* ty=Tensor[(14, 3, 15), float32] */;
  %691 = reshape(%690, newshape=[14, 3, 15]) /* ty=Tensor[(14, 3, 15), float32] */;
  %692 = @func_1526(%691) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32]) */;
  %693 = %692.1;
  %694 = cast(%686, dtype="uint32") /* ty=Tensor[(14, 3, 15), uint32] */;
  %695 = shape_of(%693, dtype="int32") /* ty=Tensor[(3), int32] */;
  %696 = cast(%693, dtype="uint32") /* ty=Tensor[(14, 3, 15), uint32] */;
  %697 = dyn.reshape(%694, %695, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %698 = %689.2;
  %699 = subtract(%696, %697) /* ty=Tensor[(14, 3, 15), uint32] */;
  (%698, %699)
}

def @func_2588(%var_2464: Tensor[(13, 16, 3), uint8], %var_2465: Tensor[(13, 16, 3), uint8], %var_2489: Tensor[(280), float32], %var_2518: Tensor[(396, 1), float64]) -> (Tensor[(13, 16, 3), uint8], Tensor[(280), float32], Tensor[(280), float32], Tensor[(14, 3, 15), float32], Tensor[(396), float64], Tensor[(14, 3, 15), float32], Tensor[(2, 10, 14), float64], Tensor[(5, 2), float32], Tensor[(525), bool], Tensor[(396, 1), float32], Tensor[(300), bool], Tensor[(300), bool], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint64], Tensor[(396, 1), float32]) {
  %700 = cast(%var_2465, dtype="uint8") /* ty=Tensor[(13, 16, 3), uint8] */;
  %701 = shape_of(%var_2464, dtype="int32") /* ty=Tensor[(3), int32] */;
  %702 = cast(%var_2464, dtype="uint8") /* ty=Tensor[(13, 16, 3), uint8] */;
  %703 = dyn.reshape(%700, %701, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %704 = cast(%var_2489, dtype="float32") /* ty=Tensor[(280), float32] */;
  %705 = reshape(%704, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %706 = @func_2405(%705) /* ty=(Tensor[(14, 3, 15), uint64], Tensor[(2, 10, 14), float32], Tensor[(280), float32]) */;
  %707 = cast(%var_2518, dtype="float64") /* ty=Tensor[(396, 1), float64] */;
  %708 = reshape(%707, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %709 = @func_2142(%708) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(396), float64], Tensor[(396), float64]) */;
  %710 = %709.1;
  %711 = cast(%710, dtype="float64") /* ty=Tensor[(396), float64] */;
  %712 = reshape(%711, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %713 = @func_2142(%712) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(396), float64], Tensor[(396), float64]) */;
  %714 = cast(meta[relay.Constant][40] /* ty=Tensor[(5, 2), float32] */, dtype="float32") /* ty=Tensor[(5, 2), float32] */;
  %715 = %706.2;
  %716 = cast(%715, dtype="float32") /* ty=Tensor[(280), float32] */;
  %717 = cast(meta[relay.Constant][41] /* ty=Tensor[(525), bool] */, dtype="bool") /* ty=Tensor[(525), bool] */;
  %718 = reshape(%714, newshape=[1, 2, 5]) /* ty=Tensor[(1, 2, 5), float32] */;
  %719 = reshape(%716, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %720 = reshape(%717, newshape=[525]) /* ty=Tensor[(525), bool] */;
  %721 = @func_1888(%718, %719, %720) /* ty=(Tensor[(1, 2, 5), float32], Tensor[(2, 10, 14), float64], Tensor[(280), float32], Tensor[(15, 7, 5), bool], Tensor[(525), bool]) */;
  %722 = cast(%var_2518, dtype="float32") /* ty=Tensor[(396, 1), float32] */;
  %723 = sinh(%722) /* ty=Tensor[(396, 1), float32] */;
  %724 = cast(%723, dtype="float32") /* ty=Tensor[(396, 1), float32] */;
  %725 = cast(%710, dtype="float64") /* ty=Tensor[(396), float64] */;
  %726 = cast(meta[relay.Constant][42] /* ty=Tensor[(300), bool] */, dtype="bool") /* ty=Tensor[(300), bool] */;
  %727 = reshape(%725, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %728 = reshape(%726, newshape=[300]) /* ty=Tensor[(300), bool] */;
  %729 = @func_1780(%727, %728) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(6, 11, 6), float64], Tensor[(396), float64], Tensor[(300), bool], Tensor[(300), bool]) */;
  %730 = @func_1040() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %731 = %713.0;
  %732 = cast(%731, dtype="bool") /* ty=Tensor[(14, 3, 15), bool] */;
  %733 = cast(meta[relay.Constant][41] /* ty=Tensor[(525), bool] */, dtype="bool") /* ty=Tensor[(525), bool] */;
  %734 = reshape(%732, newshape=[14, 3, 15]) /* ty=Tensor[(14, 3, 15), bool] */;
  %735 = reshape(%733, newshape=[525]) /* ty=Tensor[(525), bool] */;
  %736 = @func_1322(%734, %735) /* ty=(Tensor[(14, 3, 15), uint64], Tensor[(15, 7, 5), bool], Tensor[(525), bool]) */;
  %737 = cast(%723, dtype="float32") /* ty=Tensor[(396, 1), float32] */;
  %738 = bitwise_xor(%702, %703) /* ty=Tensor[(13, 16, 3), uint8] */;
  %739 = @func_1817() /* ty=Tensor[(14, 3, 15), float32] */;
  %740 = %721.1;
  %741 = acosh(%724) /* ty=Tensor[(396, 1), float32] */;
  %742 = %729.3;
  %743 = %730.0;
  %744 = %736.0;
  %745 = erf(%737) /* ty=Tensor[(396, 1), float32] */;
  (%738, %715, %var_2489, %739, %710, %731, %740, meta[relay.Constant][40] /* ty=Tensor[(5, 2), float32] */, meta[relay.Constant][41] /* ty=Tensor[(525), bool] */, %741, %742, meta[relay.Constant][42] /* ty=Tensor[(300), bool] */, %743, %744, %745)
}

def @func_3260(%var_3234: Tensor[(66, 6), float64]) -> (Tensor[(14, 3, 15), float32], Tensor[(6, 11, 6), float64], Tensor[(66, 6), float64], Tensor[(525, 1), float32], Tensor[(525, ?), float32]) {
  %746 = cast(%var_3234, dtype="float64") /* ty=Tensor[(66, 6), float64] */;
  %747 = reshape(%746, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), float64] */;
  %748 = @func_1611() /* ty=(Tensor[(14, 3, 15), float32], Tensor[(525, 1), bool], Tensor[(10, 30), bool]) */;
  %749 = %748.1;
  %750 = cast(%749, dtype="float64") /* ty=Tensor[(525, 1), float64] */;
  %751 = asinh(%750) /* ty=Tensor[(525, 1), float64] */;
  %752 = cast(%751, dtype="float64") /* ty=Tensor[(525, 1), float64] */;
  %753 = cosh(%752) /* ty=Tensor[(525, 1), float64] */;
  %754 = cast(%753, dtype="float32") /* ty=Tensor[(525, 1), float32] */;
  %755 = sqrt(%754) /* ty=Tensor[(525, 1), float32] */;
  %756 = cast(%755, dtype="float32") /* ty=Tensor[(525, 1), float32] */;
  %757 = cast(%749, dtype="float32") /* ty=Tensor[(525, 1), float32] */;
  %758 = shape_of(%755, dtype="int32") /* ty=Tensor[(2), int32] */;
  %759 = cast(%755, dtype="float32") /* ty=Tensor[(525, 1), float32] */;
  %760 = dyn.reshape(%757, %758, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %761 = @func_2894() /* ty=Tensor[(14, 3, 15), float32] */;
  %762 = @func_1463(%747) /* ty=Tensor[(6, 11, 6), float64] */;
  %763 = sin(%756) /* ty=Tensor[(525, 1), float32] */;
  %764 = floor_divide(%759, %760) /* ty=Tensor[(525, ?), float32] */;
  (%761, %762, %var_3234, %763, %764)
}

def @func_1430() -> (Tensor[(14, 3, 15), float32],) {
  %765 = @func_1040() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %766 = %765.0;
  (%766,)
}

def @func_4433() -> (Tensor[(14, 3, 15), uint32], Tensor[(14, 3, 15), uint32]) {
  %767 = @func_2993() /* ty=(Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint32]) */;
  %768 = @func_2351() /* ty=(Tensor[(14, 3, 15), uint32],) */;
  %769 = %767.1;
  %770 = %768.0;
  (%769, %770)
}

def @func_7311() -> (Tensor[(14, 3, 15), float32], Tensor[(11, 12, 16), float64]) {
  %771 = @func_5777() /* ty=(Tensor[(11, 12, 16), float32],) */;
  %772 = %771.0;
  %773 = cast(meta[relay.Constant][43] /* ty=Tensor[(11, 12, 16), float32] */, dtype="float64") /* ty=Tensor[(11, 12, 16), float64] */;
  %774 = shape_of(%772, dtype="int32") /* ty=Tensor[(3), int32] */;
  %775 = cast(%772, dtype="float64") /* ty=Tensor[(11, 12, 16), float64] */;
  %776 = dyn.reshape(%773, %774, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %777 = @func_2910() /* ty=Tensor[(14, 3, 15), float32] */;
  %778 = floor_mod(%775, %776) /* ty=Tensor[(11, 12, 16), float64] */;
  (%777, %778)
}

def @func_5569() -> Tensor[(14, 3, 15), float32] {
  %779 = @func_5158() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %779.0
}

def @func_6083() -> (Tensor[(14, 3, 15), uint32], Tensor[(396), int32], Tensor[(66, 6), float32]) {
  %780 = @func_3920() /* ty=(Tensor[(14, 3, 15), uint32],) */;
  %781 = cast(meta[relay.Constant][44] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %782 = reshape(%781, newshape=[66, 6]) /* ty=Tensor[(66, 6), float64] */;
  %783 = @func_3260(%782) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(6, 11, 6), float64], Tensor[(66, 6), float64], Tensor[(525, 1), float32], Tensor[(525, ?), float32]) */;
  %784 = %783.2;
  %785 = cast(%784, dtype="int32") /* ty=Tensor[(66, 6), int32] */;
  %786 = shape_of(meta[relay.Constant][44] /* ty=Tensor[(396), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %787 = cast(meta[relay.Constant][44] /* ty=Tensor[(396), float64] */, dtype="int32") /* ty=Tensor[(396), int32] */;
  %788 = dyn.reshape(%785, %786, newshape=[]) /* ty=Tensor[(?), int32] */;
  %789 = cast(meta[relay.Constant][45] /* ty=Tensor[(66, 6), float64] */, dtype="float32") /* ty=Tensor[(66, 6), float32] */;
  %790 = shape_of(%784, dtype="int32") /* ty=Tensor[(2), int32] */;
  %791 = cast(%784, dtype="float32") /* ty=Tensor[(66, 6), float32] */;
  %792 = dyn.reshape(%789, %790, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %793 = %780.0;
  %794 = maximum(%787, %788) /* ty=Tensor[(396), int32] */;
  %795 = floor_mod(%791, %792) /* ty=Tensor[(66, 6), float32] */;
  (%793, %794, %795)
}

def @func_6134() -> (Tensor[(14, 3, 15), uint32],) {
  %796 = @func_5610() /* ty=Tensor[(14, 3, 15), uint32] */;
  (%796,)
}

def @func_5887(%var_5873: Tensor[(11, 12, 16), float32]) -> (Tensor[(11, 12, 16), bool], Tensor[(14, 3, 15), float32]) {
  %797 = @func_3198() /* ty=Tensor[(11, 12, 16), float32] */;
  %798 = cast(%var_5873, dtype="bool") /* ty=Tensor[(11, 12, 16), bool] */;
  %799 = shape_of(%797, dtype="int32") /* ty=Tensor[(3), int32] */;
  %800 = cast(%797, dtype="bool") /* ty=Tensor[(11, 12, 16), bool] */;
  %801 = dyn.reshape(%798, %799, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %802 = @func_4858() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %803 = equal(%800, %801) /* ty=Tensor[(11, 12, 16), bool] */;
  %804 = %802.0;
  (%803, %804)
}

def @func_6317() -> (Tensor[(14, 3, 15), uint32],) {
  %805 = @func_5847() /* ty=Tensor[(14, 3, 15), uint32] */;
  (%805,)
}

def @func_4129() -> (Tensor[(14, 3, 15), float64],) {
  %806 = @func_2198() /* ty=(Tensor[(14, 3, 15), float64],) */;
  %807 = %806.0;
  (%807,)
}

def @func_1846(%var_1841: Tensor[(396), float64]) -> (Tensor[(14, 3, 15), float32], Tensor[(6, 11, 6), float64], Tensor[(396), float64]) {
  %808 = cast(%var_1841, dtype="float64") /* ty=Tensor[(396), float64] */;
  %809 = reshape(%808, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), float64] */;
  %810 = @func_1817() /* ty=Tensor[(14, 3, 15), float32] */;
  %811 = @func_1463(%809) /* ty=Tensor[(6, 11, 6), float64] */;
  (%810, %811, %var_1841)
}

def @func_3149(%var_3046: Tensor[(70, 4), float32], %var_3050: Tensor[(168), uint8], %var_3058: float32) -> (Tensor[(14, 3, 15), float64], Tensor[(14, 3, 15), uint64], Tensor[(624), uint8], Tensor[(70, 4), float32], Tensor[(198, 2), float64], Tensor[(12, ?, 14), uint8], Tensor[(168), uint8], Tensor[(8, 7, 11), int64], float32, Tensor[(616), float32], Tensor[(525), bool], Tensor[(14, 3, 15), float32], Tensor[(525, 10), bool], Tensor[(5250), bool], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), int8], Tensor[(14, 3, 15), float32], Tensor[(15, 7, 5), bool], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32]) {
  %812 = @func_2198() /* ty=(Tensor[(14, 3, 15), float64],) */;
  %813 = cast(meta[relay.Constant][46] /* ty=Tensor[(624), uint8] */, dtype="uint8") /* ty=Tensor[(624), uint8] */;
  %814 = cast(meta[relay.Constant][46] /* ty=Tensor[(624), uint8] */, dtype="uint8") /* ty=Tensor[(624), uint8] */;
  %815 = cast(%var_3046, dtype="float32") /* ty=Tensor[(70, 4), float32] */;
  %816 = cast(meta[relay.Constant][47] /* ty=Tensor[(198, 2), float64] */, dtype="float64") /* ty=Tensor[(198, 2), float64] */;
  %817 = reshape(%813, newshape=[13, 16, 3]) /* ty=Tensor[(13, 16, 3), uint8] */;
  %818 = reshape(%814, newshape=[13, 16, 3]) /* ty=Tensor[(13, 16, 3), uint8] */;
  %819 = reshape(%815, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %820 = reshape(%816, newshape=[396, 1]) /* ty=Tensor[(396, 1), float64] */;
  %821 = @func_2588(%817, %818, %819, %820) /* ty=(Tensor[(13, 16, 3), uint8], Tensor[(280), float32], Tensor[(280), float32], Tensor[(14, 3, 15), float32], Tensor[(396), float64], Tensor[(14, 3, 15), float32], Tensor[(2, 10, 14), float64], Tensor[(5, 2), float32], Tensor[(525), bool], Tensor[(396, 1), float32], Tensor[(300), bool], Tensor[(300), bool], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint64], Tensor[(396, 1), float32]) */;
  %822 = cast(%var_3050, dtype="uint8") /* ty=Tensor[(168), uint8] */;
  %823 = reshape(%822, newshape=[12, 1, 14]) /* ty=Tensor[(12, 1, 14), uint8] */;
  %824 = @func_295(%823) /* ty=(Tensor[(12, ?, 14), uint8],) */;
  %825 = cast(%var_3058, dtype="float32") /* ty=float32 */;
  %826 = cast(meta[relay.Constant][48] /* ty=Tensor[(616), float32] */, dtype="float32") /* ty=Tensor[(616), float32] */;
  %827 = cast(meta[relay.Constant][48] /* ty=Tensor[(616), float32] */, dtype="bool") /* ty=Tensor[(616), bool] */;
  %828 = cast(meta[relay.Constant][49] /* ty=Tensor[(525), bool] */, dtype="bool") /* ty=Tensor[(525), bool] */;
  %829 = reshape(%825, newshape=[]) /* ty=float32 */;
  %830 = reshape(%826, newshape=[8, 7, 11]) /* ty=Tensor[(8, 7, 11), float32] */;
  %831 = reshape(%827, newshape=[8, 7, 11]) /* ty=Tensor[(8, 7, 11), bool] */;
  %832 = reshape(%828, newshape=[525]) /* ty=Tensor[(525), bool] */;
  %833 = @func_2283(%829, %830, %831, %832) /* ty=(Tensor[(8, 7, 11), int64], Tensor[(2, 10, 14), float64], Tensor[(280), float32], Tensor[(14, 3, 15), float32], Tensor[(8, 7, 11), float32], Tensor[(15, 7, 5), bool], Tensor[(525), bool]) */;
  %834 = @func_1084() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %835 = cast(meta[relay.Constant][50] /* ty=Tensor[(5250), bool] */, dtype="bool") /* ty=Tensor[(5250), bool] */;
  %836 = reshape(%835, newshape=[525, 10]) /* ty=Tensor[(525, 10), bool] */;
  %837 = @func_2092(%836) /* ty=(Tensor[(525, 10), bool], Tensor[(15, 7, 5), bool]) */;
  %838 = @func_1430() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %839 = %834.0;
  %840 = cast(%839, dtype="float64") /* ty=Tensor[(14, 3, 15), float64] */;
  %841 = reshape(%840, newshape=[14, 3, 15]) /* ty=Tensor[(14, 3, 15), float64] */;
  %842 = @func_2326(%841) /* ty=(Tensor[(14, 3, 15), int8],) */;
  %843 = @func_2351() /* ty=(Tensor[(14, 3, 15), uint32],) */;
  %844 = %843.0;
  %845 = cast(%844, dtype="float32") /* ty=Tensor[(14, 3, 15), float32] */;
  %846 = cast(meta[relay.Constant][50] /* ty=Tensor[(5250), bool] */, dtype="bool") /* ty=Tensor[(5250), bool] */;
  %847 = reshape(%846, newshape=[525, 10]) /* ty=Tensor[(525, 10), bool] */;
  %848 = @func_2092(%847) /* ty=(Tensor[(525, 10), bool], Tensor[(15, 7, 5), bool]) */;
  %849 = cast(%844, dtype="float32") /* ty=Tensor[(14, 3, 15), float32] */;
  %850 = rsqrt(%849) /* ty=Tensor[(14, 3, 15), float32] */;
  %851 = cast(meta[relay.Constant][51] /* ty=Tensor[(14, 3, 15), float32] */, dtype="uint64") /* ty=Tensor[(14, 3, 15), uint64] */;
  %852 = shape_of(%850, dtype="int32") /* ty=Tensor[(3), int32] */;
  %853 = cast(%850, dtype="uint64") /* ty=Tensor[(14, 3, 15), uint64] */;
  %854 = dyn.reshape(%851, %852, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %855 = add(%853, %854) /* ty=Tensor[(14, 3, 15), uint64] */;
  %856 = cast(%855, dtype="float64") /* ty=Tensor[(14, 3, 15), float64] */;
  %857 = atanh(%856) /* ty=Tensor[(14, 3, 15), float64] */;
  %858 = cast(%857, dtype="float32") /* ty=Tensor[(14, 3, 15), float32] */;
  %859 = %812.0;
  %860 = %821.13;
  %861 = %824.0;
  %862 = %833.0;
  %863 = %837.0;
  %864 = %838.0;
  %865 = %842.0;
  %866 = sinh(%845) /* ty=Tensor[(14, 3, 15), float32] */;
  %867 = %848.1;
  %868 = @func_1817() /* ty=Tensor[(14, 3, 15), float32] */;
  %869 = exp(%858) /* ty=Tensor[(14, 3, 15), float32] */;
  (%859, %860, meta[relay.Constant][46] /* ty=Tensor[(624), uint8] */, %var_3046, meta[relay.Constant][47] /* ty=Tensor[(198, 2), float64] */, %861, %var_3050, %862, %var_3058, meta[relay.Constant][48] /* ty=Tensor[(616), float32] */, meta[relay.Constant][49] /* ty=Tensor[(525), bool] */, %839, %863, meta[relay.Constant][50] /* ty=Tensor[(5250), bool] */, %864, %865, %866, %867, %868, %869)
}

def @func_4298(%var_4275: Tensor[(35, 15), bool]) -> (Tensor[(14, 3, 15), float32], Tensor[(35, 15), bool], Tensor[(14, 3, 15), float32], Tensor[(15, 7, 5), float64]) {
  %870 = @func_1084() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %871 = cast(%var_4275, dtype="bool") /* ty=Tensor[(35, 15), bool] */;
  %872 = cast(%var_4275, dtype="bool") /* ty=Tensor[(35, 15), bool] */;
  %873 = reshape(%871, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), bool] */;
  %874 = reshape(%872, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), bool] */;
  %875 = @func_465(%873, %874) /* ty=Tensor[(15, 7, 5), bool] */;
  %876 = cast(%875, dtype="float32") /* ty=Tensor[(15, 7, 5), float32] */;
  %877 = tan(%876) /* ty=Tensor[(15, 7, 5), float32] */;
  %878 = cast(%877, dtype="float64") /* ty=Tensor[(15, 7, 5), float64] */;
  %879 = @func_2045() /* ty=Tensor[(14, 3, 15), float32] */;
  %880 = %870.0;
  %881 = sin(%878) /* ty=Tensor[(15, 7, 5), float64] */;
  (%879, %var_4275, %880, %881)
}

def @func_5339(%var_5279: Tensor[(1, 1350), float64], %var_5294: Tensor[(2100), uint16]) -> (Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32], Tensor[(280), float32], Tensor[(5, 1350), bool], Tensor[(10, 15, 14), uint16], Tensor[(2100), uint16], Tensor[(14, 3, 15), int8], Tensor[(5, 1350), float32], Tensor[(14, 3, 15), int8], Tensor[(5, 1350), float32]) {
  %882 = @func_4684() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %883 = @func_2993() /* ty=(Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint32]) */;
  %884 = cast(%var_5279, dtype="float64") /* ty=Tensor[(1, 1350), float64] */;
  %885 = cast(%var_5279, dtype="float64") /* ty=Tensor[(1, 1350), float64] */;
  %886 = reshape(%884, newshape=[6, 15, 15]) /* ty=Tensor[(6, 15, 15), float64] */;
  %887 = reshape(%885, newshape=[6, 15, 15]) /* ty=Tensor[(6, 15, 15), float64] */;
  %888 = @func_5078(%886, %887) /* ty=(Tensor[(6, 15, 15), float64], Tensor[(14, 3, 15), float32], Tensor[(396), float64], Tensor[(6, 15, 15), float64], Tensor[(280), float32], Tensor[(280), float32]) */;
  %889 = cast(%var_5279, dtype="bool") /* ty=Tensor[(1, 1350), bool] */;
  %890 = cast(meta[relay.Constant][52] /* ty=Tensor[(5, 1350), float64] */, dtype="bool") /* ty=Tensor[(5, 1350), bool] */;
  %891 = cast(%var_5294, dtype="uint16") /* ty=Tensor[(2100), uint16] */;
  %892 = cast(%var_5294, dtype="uint16") /* ty=Tensor[(2100), uint16] */;
  %893 = reshape(%891, newshape=[10, 15, 14]) /* ty=Tensor[(10, 15, 14), uint16] */;
  %894 = reshape(%892, newshape=[10, 15, 14]) /* ty=Tensor[(10, 15, 14), uint16] */;
  %895 = @func_4513(%893, %894) /* ty=(Tensor[(10, 15, 14), uint16], Tensor[(10, 15, 14), float32]) */;
  %896 = %882.0;
  %897 = cast(%896, dtype="float64") /* ty=Tensor[(14, 3, 15), float64] */;
  %898 = reshape(%897, newshape=[14, 3, 15]) /* ty=Tensor[(14, 3, 15), float64] */;
  %899 = @func_2326(%898) /* ty=(Tensor[(14, 3, 15), int8],) */;
  %900 = cast(meta[relay.Constant][52] /* ty=Tensor[(5, 1350), float64] */, dtype="bool") /* ty=Tensor[(5, 1350), bool] */;
  %901 = cast(%var_5279, dtype="bool") /* ty=Tensor[(1, 1350), bool] */;
  %902 = equal(%900, %901) /* ty=Tensor[(5, 1350), bool] */;
  %903 = cast(%902, dtype="float32") /* ty=Tensor[(5, 1350), float32] */;
  %904 = cast(%var_5279, dtype="float32") /* ty=Tensor[(1, 1350), float32] */;
  %905 = %899.0;
  %906 = cast(%905, dtype="float64") /* ty=Tensor[(14, 3, 15), float64] */;
  %907 = reshape(%906, newshape=[14, 3, 15]) /* ty=Tensor[(14, 3, 15), float64] */;
  %908 = @func_2326(%907) /* ty=(Tensor[(14, 3, 15), int8],) */;
  %909 = cast(meta[relay.Constant][52] /* ty=Tensor[(5, 1350), float64] */, dtype="float32") /* ty=Tensor[(5, 1350), float32] */;
  %910 = cast(%var_5279, dtype="float32") /* ty=Tensor[(1, 1350), float32] */;
  %911 = %883.0;
  %912 = %888.4;
  %913 = not_equal(%889, %890) /* ty=Tensor[(5, 1350), bool] */;
  %914 = %895.0;
  %915 = minimum(%903, %904) /* ty=Tensor[(5, 1350), float32] */;
  %916 = %908.0;
  %917 = divide(%909, %910) /* ty=Tensor[(5, 1350), float32] */;
  (%896, %911, %912, %913, %914, %var_5294, %905, %915, %916, %917)
}

def @func_2283(%var_2238: float32, %var_2239: Tensor[(8, 7, 11), float32], %var_2247: Tensor[(8, 7, 11), bool], %var_2278: Tensor[(525), bool]) -> (Tensor[(8, 7, 11), int64], Tensor[(2, 10, 14), float64], Tensor[(280), float32], Tensor[(14, 3, 15), float32], Tensor[(8, 7, 11), float32], Tensor[(15, 7, 5), bool], Tensor[(525), bool]) {
  %918 = cast(%var_2238, dtype="float32") /* ty=float32 */;
  %919 = cast(%var_2239, dtype="float32") /* ty=Tensor[(8, 7, 11), float32] */;
  %920 = floor_divide(%918, %919) /* ty=Tensor[(8, 7, 11), float32] */;
  %921 = cast(%var_2238, dtype="bool") /* ty=bool */;
  %922 = cast(%920, dtype="bool") /* ty=Tensor[(8, 7, 11), bool] */;
  %923 = greater(%921, %922) /* ty=Tensor[(8, 7, 11), bool] */;
  %924 = cast(%var_2247, dtype="bool") /* ty=Tensor[(8, 7, 11), bool] */;
  %925 = shape_of(%923, dtype="int32") /* ty=Tensor[(3), int32] */;
  %926 = cast(%923, dtype="bool") /* ty=Tensor[(8, 7, 11), bool] */;
  %927 = dyn.reshape(%924, %925, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %928 = equal(%926, %927) /* ty=Tensor[(8, 7, 11), bool] */;
  %929 = cast(%923, dtype="int64") /* ty=Tensor[(8, 7, 11), int64] */;
  %930 = shape_of(%928, dtype="int32") /* ty=Tensor[(3), int32] */;
  %931 = cast(%928, dtype="int64") /* ty=Tensor[(8, 7, 11), int64] */;
  %932 = dyn.reshape(%929, %930, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %933 = cast(meta[relay.Constant][53] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %934 = reshape(%933, newshape=[2, 10, 14]) /* ty=Tensor[(2, 10, 14), float32] */;
  %935 = @func_1056(%934) /* ty=(Tensor[(2, 10, 14), float32], Tensor[(2, 10, 14), float64]) */;
  %936 = cast(%923, dtype="float32") /* ty=Tensor[(8, 7, 11), float32] */;
  %937 = cast(%var_2278, dtype="bool") /* ty=Tensor[(525), bool] */;
  %938 = cast(%var_2278, dtype="bool") /* ty=Tensor[(525), bool] */;
  %939 = reshape(%937, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), bool] */;
  %940 = reshape(%938, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), bool] */;
  %941 = maximum(%931, %932) /* ty=Tensor[(8, 7, 11), int64] */;
  %942 = %935.1;
  %943 = @func_2045() /* ty=Tensor[(14, 3, 15), float32] */;
  %944 = acos(%936) /* ty=Tensor[(8, 7, 11), float32] */;
  %945 = @func_465(%939, %940) /* ty=Tensor[(15, 7, 5), bool] */;
  (%941, %942, meta[relay.Constant][53] /* ty=Tensor[(280), float32] */, %943, %944, %945, %var_2278)
}

def @func_6023(%var_5998: Tensor[(450), float64], %var_6000: Tensor[(168), uint8]) -> (Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32], Tensor[(525, 9), bool], Tensor[(8, 7, 11), int64], Tensor[(450), float64], Tensor[(280), float32], Tensor[(168), uint8], float32) {
  %946 = @func_5610() /* ty=Tensor[(14, 3, 15), uint32] */;
  %947 = cast(%946, dtype="float32") /* ty=Tensor[(14, 3, 15), float32] */;
  %948 = @func_5744() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %949 = @func_4118() /* ty=Tensor[(525, 1), bool] */;
  %950 = cast(%949, dtype="float32") /* ty=Tensor[(525, 1), float32] */;
  %951 = cast(meta[relay.Constant][54] /* ty=Tensor[(525, 9), bool] */, dtype="float32") /* ty=Tensor[(525, 9), float32] */;
  %952 = floor_mod(%950, %951) /* ty=Tensor[(525, 9), float32] */;
  %953 = cast(meta[relay.Constant][54] /* ty=Tensor[(525, 9), bool] */, dtype="uint64") /* ty=Tensor[(525, 9), uint64] */;
  %954 = cast(%949, dtype="uint64") /* ty=Tensor[(525, 1), uint64] */;
  %955 = maximum(%953, %954) /* ty=Tensor[(525, 9), uint64] */;
  %956 = cast(%955, dtype="bool") /* ty=Tensor[(525, 9), bool] */;
  %957 = shape_of(%952, dtype="int32") /* ty=Tensor[(2), int32] */;
  %958 = cast(%952, dtype="bool") /* ty=Tensor[(525, 9), bool] */;
  %959 = dyn.reshape(%956, %957, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %960 = cast(%var_5998, dtype="float64") /* ty=Tensor[(450), float64] */;
  %961 = cast(meta[relay.Constant][55] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %962 = cast(%var_6000, dtype="uint8") /* ty=Tensor[(168), uint8] */;
  %963 = cast(9.19619f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %964 = reshape(%960, newshape=[3, 10, 15]) /* ty=Tensor[(3, 10, 15), float64] */;
  %965 = reshape(%961, newshape=[140, 2]) /* ty=Tensor[(140, 2), float32] */;
  %966 = reshape(%962, newshape=[168]) /* ty=Tensor[(168), uint8] */;
  %967 = reshape(%963, newshape=[]) /* ty=float32 */;
  %968 = @func_5709(%964, %965, %966, %967) /* ty=(Tensor[(8, 7, 11), int64], Tensor[(140, 2), float32], Tensor[(168), uint8], float32, Tensor[(3, 10, 15), bool], Tensor[(14, 3, 15), uint32]) */;
  %969 = acos(%947) /* ty=Tensor[(14, 3, 15), float32] */;
  %970 = @func_2910() /* ty=Tensor[(14, 3, 15), float32] */;
  %971 = %948.0;
  %972 = not_equal(%958, %959) /* ty=Tensor[(525, 9), bool] */;
  %973 = %968.0;
  (%969, %970, %971, %972, %973, %var_5998, meta[relay.Constant][55] /* ty=Tensor[(280), float32] */, %var_6000, 9.19619f /* ty=float32 */)
}

def @func_2405(%var_2403: Tensor[(280), float32]) -> (Tensor[(14, 3, 15), uint64], Tensor[(2, 10, 14), float32], Tensor[(280), float32]) {
  %974 = @func_2034() /* ty=Tensor[(14, 3, 15), uint32] */;
  %975 = cast(meta[relay.Constant][56] /* ty=Tensor[(14, 3, 15), uint32] */, dtype="uint64") /* ty=Tensor[(14, 3, 15), uint64] */;
  %976 = shape_of(%974, dtype="int32") /* ty=Tensor[(3), int32] */;
  %977 = cast(%974, dtype="uint64") /* ty=Tensor[(14, 3, 15), uint64] */;
  %978 = dyn.reshape(%975, %976, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %979 = cast(%var_2403, dtype="float32") /* ty=Tensor[(280), float32] */;
  %980 = reshape(%979, newshape=[2, 10, 14]) /* ty=Tensor[(2, 10, 14), float32] */;
  %981 = @func_1056(%980) /* ty=(Tensor[(2, 10, 14), float32], Tensor[(2, 10, 14), float64]) */;
  %982 = right_shift(%977, %978) /* ty=Tensor[(14, 3, 15), uint64] */;
  %983 = %981.0;
  (%982, %983, %var_2403)
}

def @func_7466() -> Tensor[(14, 3, 15), uint32] {
  %984 = @func_2351() /* ty=(Tensor[(14, 3, 15), uint32],) */;
  %984.0
}

def @func_6783() -> (Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint32]) {
  %985 = @func_6471() /* ty=(Tensor[(14, 3, 15), uint32],) */;
  %986 = @func_5569() /* ty=Tensor[(14, 3, 15), float32] */;
  %987 = %985.0;
  (%986, %987)
}

def @func_465(%var_460: Tensor[(15, 7, 5), bool], %var_461: Tensor[(15, 7, 5), bool]) -> Tensor[(15, 7, 5), bool] {
  %988 = cast(%var_461, dtype="bool") /* ty=Tensor[(15, 7, 5), bool] */;
  %989 = shape_of(%var_460, dtype="int32") /* ty=Tensor[(3), int32] */;
  %990 = cast(%var_460, dtype="bool") /* ty=Tensor[(15, 7, 5), bool] */;
  %991 = dyn.reshape(%988, %989, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%990, %991) /* ty=Tensor[(15, 7, 5), bool] */
}

def @func_7609() -> (Tensor[(525, 1), float32], Tensor[(14, 3, 15), float32], Tensor[(15, 7, 5), bool]) {
  %992 = @func_4118() /* ty=Tensor[(525, 1), bool] */;
  %993 = cast(%992, dtype="float32") /* ty=Tensor[(525, 1), float32] */;
  %994 = @func_7534() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %995 = atan(%993) /* ty=Tensor[(525, 1), float32] */;
  %996 = cast(%995, dtype="bool") /* ty=Tensor[(525, 1), bool] */;
  %997 = cast(%995, dtype="bool") /* ty=Tensor[(525, 1), bool] */;
  %998 = reshape(%996, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), bool] */;
  %999 = reshape(%997, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), bool] */;
  %1000 = %994.0;
  %1001 = @func_465(%998, %999) /* ty=Tensor[(15, 7, 5), bool] */;
  (%995, %1000, %1001)
}

def @func_3440() -> Tensor[(11, 12, 16), float32] {
  @func_3198() /* ty=Tensor[(11, 12, 16), float32] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_6783() -> (Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint32]) {
  %0 = @func_6471() /* ty=(Tensor[(14, 3, 15), uint32],) */;
  %1 = @func_5569() /* ty=Tensor[(14, 3, 15), float32] */;
  %2 = %0.0;
  (%1, %2)
}

def @func_1042() -> (Tensor[(14, 3, 15), float32],) {
  @func_1040() /* ty=(Tensor[(14, 3, 15), float32],) */
}

def @func_3754(%var_3669: Tensor[(525), bool], %var_3696: Tensor[(14, 3, 15), float64]) -> (Tensor[(525), bool], Tensor[(525), bool], Tensor[(396), float64], Tensor[(2, 10, 14), float32], Tensor[(280), float32], Tensor[(6, 11, 6), float64], Tensor[(14, 3, 15), uint32], Tensor[(14, 3, 15), float32]) {
  %3 = cast(%var_3669, dtype="bool") /* ty=Tensor[(525), bool] */;
  %4 = cast(meta[relay.Constant][0] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %5 = reshape(%3, newshape=[525]) /* ty=Tensor[(525), bool] */;
  %6 = reshape(%4, newshape=[66, 6]) /* ty=Tensor[(66, 6), float64] */;
  %7 = @func_1637(%5, %6) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(15, 7, 5), bool], Tensor[(525), bool], Tensor[(6, 11, 6), float64], Tensor[(66, 6), float64]) */;
  %8 = cast(meta[relay.Constant][1] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %9 = reshape(%8, newshape=[2, 10, 14]) /* ty=Tensor[(2, 10, 14), float32] */;
  %10 = @func_1056(%9) /* ty=(Tensor[(2, 10, 14), float32], Tensor[(2, 10, 14), float64]) */;
  %11 = cast(%var_3669, dtype="bool") /* ty=Tensor[(525), bool] */;
  %12 = cast(meta[relay.Constant][0] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %13 = reshape(%11, newshape=[525]) /* ty=Tensor[(525), bool] */;
  %14 = reshape(%12, newshape=[66, 6]) /* ty=Tensor[(66, 6), float64] */;
  %15 = @func_1637(%13, %14) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(15, 7, 5), bool], Tensor[(525), bool], Tensor[(6, 11, 6), float64], Tensor[(66, 6), float64]) */;
  %16 = @func_2910() /* ty=Tensor[(14, 3, 15), float32] */;
  %17 = cast(%16, dtype="float64") /* ty=Tensor[(14, 3, 15), float64] */;
  %18 = asinh(%17) /* ty=Tensor[(14, 3, 15), float64] */;
  %19 = cast(%18, dtype="float64") /* ty=Tensor[(14, 3, 15), float64] */;
  %20 = sin(%19) /* ty=Tensor[(14, 3, 15), float64] */;
  %21 = cast(%var_3696, dtype="uint32") /* ty=Tensor[(14, 3, 15), uint32] */;
  %22 = shape_of(%20, dtype="int32") /* ty=Tensor[(3), int32] */;
  %23 = cast(%20, dtype="uint32") /* ty=Tensor[(14, 3, 15), uint32] */;
  %24 = dyn.reshape(%21, %22, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %25 = cast(%20, dtype="float32") /* ty=Tensor[(14, 3, 15), float32] */;
  %26 = shape_of(%18, dtype="int32") /* ty=Tensor[(3), int32] */;
  %27 = cast(%18, dtype="float32") /* ty=Tensor[(14, 3, 15), float32] */;
  %28 = dyn.reshape(%25, %26, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %29 = %7.2;
  %30 = %10.0;
  %31 = %15.3;
  %32 = bitwise_and(%23, %24) /* ty=Tensor[(14, 3, 15), uint32] */;
  %33 = power(%27, %28) /* ty=Tensor[(14, 3, 15), float32] */;
  (%29, %var_3669, meta[relay.Constant][0] /* ty=Tensor[(396), float64] */, %30, meta[relay.Constant][1] /* ty=Tensor[(280), float32] */, %31, %32, %33)
}

def @func_4959() -> (Tensor[(14, 3, 15), uint64], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32], Tensor[(9, 10, 16), float32], Tensor[(720, 2), float64]) {
  %34 = @func_4571() /* ty=(Tensor[(14, 3, 15), float32], Tensor[(280), float32], Tensor[(525), bool], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint64], Tensor[(624), uint8], Tensor[(396), float64]) */;
  %35 = @func_2351() /* ty=(Tensor[(14, 3, 15), uint32],) */;
  %36 = %35.0;
  %37 = cast(%36, dtype="float64") /* ty=Tensor[(14, 3, 15), float64] */;
  %38 = log(%37) /* ty=Tensor[(14, 3, 15), float64] */;
  %39 = cast(%38, dtype="float32") /* ty=Tensor[(14, 3, 15), float32] */;
  %40 = cast(meta[relay.Constant][2] /* ty=Tensor[(720, 2), float64] */, dtype="float64") /* ty=Tensor[(720, 2), float64] */;
  %41 = reshape(%40, newshape=[9, 10, 16]) /* ty=Tensor[(9, 10, 16), float64] */;
  %42 = @func_4903(%41) /* ty=(Tensor[(9, 10, 16), float64], Tensor[(9, 10, 16), float32]) */;
  %43 = %34.4;
  %44 = @func_3958() /* ty=Tensor[(14, 3, 15), float32] */;
  %45 = erf(%39) /* ty=Tensor[(14, 3, 15), float32] */;
  %46 = %42.1;
  (%43, %44, %45, %46, meta[relay.Constant][2] /* ty=Tensor[(720, 2), float64] */)
}

def @func_5342(%var_5340: Tensor[(1, 1350), float64], %var_5341: Tensor[(2100), uint16]) -> (Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32], Tensor[(280), float32], Tensor[(5, 1350), bool], Tensor[(10, 15, 14), uint16], Tensor[(2100), uint16], Tensor[(14, 3, 15), int8], Tensor[(5, 1350), float32], Tensor[(14, 3, 15), int8], Tensor[(5, 1350), float32]) {
  %83 = fn (%var_5279: Tensor[(1, 1350), float64], %var_5294: Tensor[(2100), uint16]) -> (Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32], Tensor[(280), float32], Tensor[(5, 1350), bool], Tensor[(10, 15, 14), uint16], Tensor[(2100), uint16], Tensor[(14, 3, 15), int8], Tensor[(5, 1350), float32], Tensor[(14, 3, 15), int8], Tensor[(5, 1350), float32]) {
    %47 = @func_4684() /* ty=(Tensor[(14, 3, 15), float32],) */;
    %48 = @func_2993() /* ty=(Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint32]) */;
    %49 = cast(%var_5279, dtype="float64") /* ty=Tensor[(1, 1350), float64] */;
    %50 = cast(%var_5279, dtype="float64") /* ty=Tensor[(1, 1350), float64] */;
    %51 = reshape(%49, newshape=[6, 15, 15]) /* ty=Tensor[(6, 15, 15), float64] */;
    %52 = reshape(%50, newshape=[6, 15, 15]) /* ty=Tensor[(6, 15, 15), float64] */;
    %53 = @func_5078(%51, %52) /* ty=(Tensor[(6, 15, 15), float64], Tensor[(14, 3, 15), float32], Tensor[(396), float64], Tensor[(6, 15, 15), float64], Tensor[(280), float32], Tensor[(280), float32]) */;
    %54 = cast(%var_5279, dtype="bool") /* ty=Tensor[(1, 1350), bool] */;
    %55 = cast(meta[relay.Constant][3] /* ty=Tensor[(5, 1350), float64] */, dtype="bool") /* ty=Tensor[(5, 1350), bool] */;
    %56 = cast(%var_5294, dtype="uint16") /* ty=Tensor[(2100), uint16] */;
    %57 = cast(%var_5294, dtype="uint16") /* ty=Tensor[(2100), uint16] */;
    %58 = reshape(%56, newshape=[10, 15, 14]) /* ty=Tensor[(10, 15, 14), uint16] */;
    %59 = reshape(%57, newshape=[10, 15, 14]) /* ty=Tensor[(10, 15, 14), uint16] */;
    %60 = @func_4513(%58, %59) /* ty=(Tensor[(10, 15, 14), uint16], Tensor[(10, 15, 14), float32]) */;
    %61 = %47.0;
    %62 = cast(%61, dtype="float64") /* ty=Tensor[(14, 3, 15), float64] */;
    %63 = reshape(%62, newshape=[14, 3, 15]) /* ty=Tensor[(14, 3, 15), float64] */;
    %64 = @func_2326(%63) /* ty=(Tensor[(14, 3, 15), int8],) */;
    %65 = cast(meta[relay.Constant][3] /* ty=Tensor[(5, 1350), float64] */, dtype="bool") /* ty=Tensor[(5, 1350), bool] */;
    %66 = cast(%var_5279, dtype="bool") /* ty=Tensor[(1, 1350), bool] */;
    %67 = equal(%65, %66) /* ty=Tensor[(5, 1350), bool] */;
    %68 = cast(%67, dtype="float32") /* ty=Tensor[(5, 1350), float32] */;
    %69 = cast(%var_5279, dtype="float32") /* ty=Tensor[(1, 1350), float32] */;
    %70 = %64.0;
    %71 = cast(%70, dtype="float64") /* ty=Tensor[(14, 3, 15), float64] */;
    %72 = reshape(%71, newshape=[14, 3, 15]) /* ty=Tensor[(14, 3, 15), float64] */;
    %73 = @func_2326(%72) /* ty=(Tensor[(14, 3, 15), int8],) */;
    %74 = cast(meta[relay.Constant][3] /* ty=Tensor[(5, 1350), float64] */, dtype="float32") /* ty=Tensor[(5, 1350), float32] */;
    %75 = cast(%var_5279, dtype="float32") /* ty=Tensor[(1, 1350), float32] */;
    %76 = %48.0;
    %77 = %53.4;
    %78 = not_equal(%54, %55) /* ty=Tensor[(5, 1350), bool] */;
    %79 = %60.0;
    %80 = minimum(%68, %69) /* ty=Tensor[(5, 1350), float32] */;
    %81 = %73.0;
    %82 = divide(%74, %75) /* ty=Tensor[(5, 1350), float32] */;
    (%61, %76, %77, %78, %79, %var_5294, %70, %80, %81, %82)
  };
  %83(%var_5340, %var_5341) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32], Tensor[(280), float32], Tensor[(5, 1350), bool], Tensor[(10, 15, 14), uint16], Tensor[(2100), uint16], Tensor[(14, 3, 15), int8], Tensor[(5, 1350), float32], Tensor[(14, 3, 15), int8], Tensor[(5, 1350), float32]) */
}

def @func_5507() -> (Tensor[(14, 3, 15), uint32],) {
  %84 = @func_2034() /* ty=Tensor[(14, 3, 15), uint32] */;
  (%84,)
}

def @func_2912() -> Tensor[(14, 3, 15), float32] {
  @func_2910() /* ty=Tensor[(14, 3, 15), float32] */
}

def @func_6135() -> (Tensor[(14, 3, 15), uint32],) {
  %86 = fn () -> (Tensor[(14, 3, 15), uint32],) {
    %85 = @func_5610() /* ty=Tensor[(14, 3, 15), uint32] */;
    (%85,)
  };
  %86() /* ty=(Tensor[(14, 3, 15), uint32],) */
}

def @func_3986(%var_3982: Tensor[(525), bool], %var_3983: Tensor[(396), float64]) -> (Tensor[(14, 3, 15), float64], Tensor[(15, 7, 5), bool], Tensor[(525), bool], Tensor[(396), float64]) {
  %87 = @func_2198() /* ty=(Tensor[(14, 3, 15), float64],) */;
  %88 = cast(%var_3982, dtype="bool") /* ty=Tensor[(525), bool] */;
  %89 = cast(%var_3983, dtype="float64") /* ty=Tensor[(396), float64] */;
  %90 = reshape(%88, newshape=[525]) /* ty=Tensor[(525), bool] */;
  %91 = reshape(%89, newshape=[66, 6]) /* ty=Tensor[(66, 6), float64] */;
  %92 = @func_1637(%90, %91) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(15, 7, 5), bool], Tensor[(525), bool], Tensor[(6, 11, 6), float64], Tensor[(66, 6), float64]) */;
  %93 = %87.0;
  %94 = %92.1;
  (%93, %94, %var_3982, %var_3983)
}

def @func_6471() -> (Tensor[(14, 3, 15), uint32],) {
  %95 = @func_6083() /* ty=(Tensor[(14, 3, 15), uint32], Tensor[(396), int32], Tensor[(66, 6), float32]) */;
  %96 = %95.0;
  (%96,)
}

def @func_7228(%var_7209: Tensor[(728), float32]) -> (Tensor[(14, 3, 15), float32], Tensor[(6, 11, 6), float64], Tensor[(396), float64], Tensor[(4, 13, 14), float32], Tensor[(728), float32], Tensor[(12, ?, 14), uint8], Tensor[(168), uint8], Tensor[(12, ?, 14), uint8]) {
  %97 = cast(meta[relay.Constant][4] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %98 = reshape(%97, newshape=[66, 6]) /* ty=Tensor[(66, 6), float64] */;
  %99 = @func_3260(%98) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(6, 11, 6), float64], Tensor[(66, 6), float64], Tensor[(525, 1), float32], Tensor[(525, ?), float32]) */;
  %100 = cast(%var_7209, dtype="float32") /* ty=Tensor[(728), float32] */;
  %101 = reshape(%100, newshape=[4, 13, 14]) /* ty=Tensor[(4, 13, 14), float32] */;
  %102 = @func_6509(%101) /* ty=(Tensor[(11, 12, 16), float32], Tensor[(4, 13, 14), float32], Tensor[(4, 13, 14), bool]) */;
  %103 = cast(meta[relay.Constant][5] /* ty=Tensor[(168), uint8] */, dtype="uint8") /* ty=Tensor[(168), uint8] */;
  %104 = reshape(%103, newshape=[168, 1]) /* ty=Tensor[(168, 1), uint8] */;
  %105 = @func_1234(%104) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(12, ?, 14), uint8], Tensor[(168, 1), float64]) */;
  %106 = %105.1;
  %107 = cast(%106, dtype="uint8") /* ty=Tensor[(12, ?, 14), uint8] */;
  %108 = reshape(%107, newshape=[168, 1]) /* ty=Tensor[(168, 1), uint8] */;
  %109 = @func_1234(%108) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(12, ?, 14), uint8], Tensor[(168, 1), float64]) */;
  %110 = @func_2910() /* ty=Tensor[(14, 3, 15), float32] */;
  %111 = %99.1;
  %112 = %102.1;
  %113 = %109.1;
  (%110, %111, meta[relay.Constant][4] /* ty=Tensor[(396), float64] */, %112, %var_7209, %106, meta[relay.Constant][5] /* ty=Tensor[(168), uint8] */, %113)
}

def @func_5715(%var_5711: Tensor[(3, 10, 15), float64], %var_5712: Tensor[(140, 2), float32], %var_5713: Tensor[(168), uint8], %var_5714: float32) -> (Tensor[(8, 7, 11), int64], Tensor[(140, 2), float32], Tensor[(168), uint8], float32, Tensor[(3, 10, 15), bool], Tensor[(14, 3, 15), uint32]) {
  @func_5709(%var_5711, %var_5712, %var_5713, %var_5714) /* ty=(Tensor[(8, 7, 11), int64], Tensor[(140, 2), float32], Tensor[(168), uint8], float32, Tensor[(3, 10, 15), bool], Tensor[(14, 3, 15), uint32]) */
}

def @func_1326(%var_1324: Tensor[(14, 3, 15), bool], %var_1325: Tensor[(525), bool]) -> (Tensor[(14, 3, 15), uint64], Tensor[(15, 7, 5), bool], Tensor[(525), bool]) {
  @func_1322(%var_1324, %var_1325) /* ty=(Tensor[(14, 3, 15), uint64], Tensor[(15, 7, 5), bool], Tensor[(525), bool]) */
}

def @func_1084() -> (Tensor[(14, 3, 15), float32],) {
  %114 = @func_1040() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %115 = %114.0;
  (%115,)
}

def @func_4472(%var_4448: Tensor[(5, 60), bool]) -> (Tensor[(14, 3, 15), float32], Tensor[(525), bool], Tensor[(35, 15), bool], Tensor[(12, 5, 5), float64], Tensor[(5, 60), float32]) {
  %116 = @func_3958() /* ty=Tensor[(14, 3, 15), float32] */;
  %117 = cast(%116, dtype="bool") /* ty=Tensor[(14, 3, 15), bool] */;
  %118 = cast(meta[relay.Constant][6] /* ty=Tensor[(35, 15), bool] */, dtype="bool") /* ty=Tensor[(35, 15), bool] */;
  %119 = reshape(%117, newshape=[14, 3, 15]) /* ty=Tensor[(14, 3, 15), bool] */;
  %120 = reshape(%118, newshape=[525]) /* ty=Tensor[(525), bool] */;
  %121 = @func_1322(%119, %120) /* ty=(Tensor[(14, 3, 15), uint64], Tensor[(15, 7, 5), bool], Tensor[(525), bool]) */;
  %122 = cast(%var_4448, dtype="bool") /* ty=Tensor[(5, 60), bool] */;
  %123 = reshape(%122, newshape=[300]) /* ty=Tensor[(300), bool] */;
  %124 = @func_1404(%123) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(12, 5, 5), bool], Tensor[(300), bool]) */;
  %125 = %124.1;
  %126 = cast(%125, dtype="float64") /* ty=Tensor[(12, 5, 5), float64] */;
  %127 = cast(%var_4448, dtype="float32") /* ty=Tensor[(5, 60), float32] */;
  %128 = %121.2;
  %129 = atanh(%126) /* ty=Tensor[(12, 5, 5), float64] */;
  %130 = asin(%127) /* ty=Tensor[(5, 60), float32] */;
  (%116, %128, meta[relay.Constant][6] /* ty=Tensor[(35, 15), bool] */, %129, %130)
}

def @func_4131() -> (Tensor[(14, 3, 15), float64],) {
  @func_4129() /* ty=(Tensor[(14, 3, 15), float64],) */
}

def @func_3174() -> Tensor[(14, 3, 15), float32] {
  @func_3172() /* ty=Tensor[(14, 3, 15), float32] */
}

def @func_4247() -> (Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint32], Tensor[(14, 3, 15), float32]) {
  @func_4245() /* ty=(Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint32], Tensor[(14, 3, 15), float32]) */
}

def @func_1056(%var_1047: Tensor[(2, 10, 14), float32]) -> (Tensor[(2, 10, 14), float32], Tensor[(2, 10, 14), float64]) {
  %131 = cast(%var_1047, dtype="float32") /* ty=Tensor[(2, 10, 14), float32] */;
  %132 = cast(%var_1047, dtype="float64") /* ty=Tensor[(2, 10, 14), float64] */;
  %133 = cos(%131) /* ty=Tensor[(2, 10, 14), float32] */;
  %134 = sin(%132) /* ty=Tensor[(2, 10, 14), float64] */;
  (%133, %134)
}

def @func_4475(%var_4473: Tensor[(5, 60), bool]) -> (Tensor[(14, 3, 15), float32], Tensor[(525), bool], Tensor[(35, 15), bool], Tensor[(12, 5, 5), float64], Tensor[(5, 60), float32]) {
  @func_4472(%var_4473) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(525), bool], Tensor[(35, 15), bool], Tensor[(12, 5, 5), float64], Tensor[(5, 60), float32]) */
}

def @func_4571() -> (Tensor[(14, 3, 15), float32], Tensor[(280), float32], Tensor[(525), bool], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint64], Tensor[(624), uint8], Tensor[(396), float64]) {
  %135 = cast(meta[relay.Constant][7] /* ty=Tensor[(525), bool] */, dtype="bool") /* ty=Tensor[(525), bool] */;
  %136 = @func_2965() /* ty=Tensor[(14, 3, 15), float32] */;
  %137 = cast(%136, dtype="float64") /* ty=Tensor[(14, 3, 15), float64] */;
  %138 = reshape(%135, newshape=[525]) /* ty=Tensor[(525), bool] */;
  %139 = reshape(%137, newshape=[14, 3, 15]) /* ty=Tensor[(14, 3, 15), float64] */;
  %140 = @func_3754(%138, %139) /* ty=(Tensor[(525), bool], Tensor[(525), bool], Tensor[(396), float64], Tensor[(2, 10, 14), float32], Tensor[(280), float32], Tensor[(6, 11, 6), float64], Tensor[(14, 3, 15), uint32], Tensor[(14, 3, 15), float32]) */;
  %141 = @func_1040() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %142 = cast(meta[relay.Constant][8] /* ty=Tensor[(624), uint8] */, dtype="uint8") /* ty=Tensor[(624), uint8] */;
  %143 = cast(meta[relay.Constant][8] /* ty=Tensor[(624), uint8] */, dtype="uint8") /* ty=Tensor[(624), uint8] */;
  %144 = %140.4;
  %145 = cast(%144, dtype="float32") /* ty=Tensor[(280), float32] */;
  %146 = cast(meta[relay.Constant][9] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %147 = reshape(%142, newshape=[13, 16, 3]) /* ty=Tensor[(13, 16, 3), uint8] */;
  %148 = reshape(%143, newshape=[13, 16, 3]) /* ty=Tensor[(13, 16, 3), uint8] */;
  %149 = reshape(%145, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %150 = reshape(%146, newshape=[396, 1]) /* ty=Tensor[(396, 1), float64] */;
  %151 = @func_2588(%147, %148, %149, %150) /* ty=(Tensor[(13, 16, 3), uint8], Tensor[(280), float32], Tensor[(280), float32], Tensor[(14, 3, 15), float32], Tensor[(396), float64], Tensor[(14, 3, 15), float32], Tensor[(2, 10, 14), float64], Tensor[(5, 2), float32], Tensor[(525), bool], Tensor[(396, 1), float32], Tensor[(300), bool], Tensor[(300), bool], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint64], Tensor[(396, 1), float32]) */;
  %152 = %141.0;
  %153 = %151.13;
  (%136, %144, meta[relay.Constant][7] /* ty=Tensor[(525), bool] */, %152, %153, meta[relay.Constant][8] /* ty=Tensor[(624), uint8] */, meta[relay.Constant][9] /* ty=Tensor[(396), float64] */)
}

def @func_2455(%var_2453: int16, %var_2454: Tensor[(11, 11, 11), int16]) -> Tensor[(11, 11, 11), bool] {
  %159 = fn (%var_2441: int16, %var_2442: Tensor[(11, 11, 11), int16]) -> Tensor[(11, 11, 11), bool] {
    %154 = cast(%var_2441, dtype="int16") /* ty=int16 */;
    %155 = cast(%var_2442, dtype="int16") /* ty=Tensor[(11, 11, 11), int16] */;
    %156 = right_shift(%154, %155) /* ty=Tensor[(11, 11, 11), int16] */;
    %157 = cast(%156, dtype="bool") /* ty=Tensor[(11, 11, 11), bool] */;
    %158 = cast(%var_2441, dtype="bool") /* ty=bool */;
    less(%157, %158) /* ty=Tensor[(11, 11, 11), bool] */
  };
  %159(%var_2453, %var_2454) /* ty=Tensor[(11, 11, 11), bool] */
}

def @func_2288(%var_2284: float32, %var_2285: Tensor[(8, 7, 11), float32], %var_2286: Tensor[(8, 7, 11), bool], %var_2287: Tensor[(525), bool]) -> (Tensor[(8, 7, 11), int64], Tensor[(2, 10, 14), float64], Tensor[(280), float32], Tensor[(14, 3, 15), float32], Tensor[(8, 7, 11), float32], Tensor[(15, 7, 5), bool], Tensor[(525), bool]) {
  %188 = fn (%var_2238: float32, %var_2239: Tensor[(8, 7, 11), float32], %var_2247: Tensor[(8, 7, 11), bool], %var_2278: Tensor[(525), bool]) -> (Tensor[(8, 7, 11), int64], Tensor[(2, 10, 14), float64], Tensor[(280), float32], Tensor[(14, 3, 15), float32], Tensor[(8, 7, 11), float32], Tensor[(15, 7, 5), bool], Tensor[(525), bool]) {
    %160 = cast(%var_2238, dtype="float32") /* ty=float32 */;
    %161 = cast(%var_2239, dtype="float32") /* ty=Tensor[(8, 7, 11), float32] */;
    %162 = floor_divide(%160, %161) /* ty=Tensor[(8, 7, 11), float32] */;
    %163 = cast(%var_2238, dtype="bool") /* ty=bool */;
    %164 = cast(%162, dtype="bool") /* ty=Tensor[(8, 7, 11), bool] */;
    %165 = greater(%163, %164) /* ty=Tensor[(8, 7, 11), bool] */;
    %166 = cast(%var_2247, dtype="bool") /* ty=Tensor[(8, 7, 11), bool] */;
    %167 = shape_of(%165, dtype="int32") /* ty=Tensor[(3), int32] */;
    %168 = cast(%165, dtype="bool") /* ty=Tensor[(8, 7, 11), bool] */;
    %169 = dyn.reshape(%166, %167, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %170 = equal(%168, %169) /* ty=Tensor[(8, 7, 11), bool] */;
    %171 = cast(%165, dtype="int64") /* ty=Tensor[(8, 7, 11), int64] */;
    %172 = shape_of(%170, dtype="int32") /* ty=Tensor[(3), int32] */;
    %173 = cast(%170, dtype="int64") /* ty=Tensor[(8, 7, 11), int64] */;
    %174 = dyn.reshape(%171, %172, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %175 = cast(meta[relay.Constant][10] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
    %176 = reshape(%175, newshape=[2, 10, 14]) /* ty=Tensor[(2, 10, 14), float32] */;
    %177 = @func_1056(%176) /* ty=(Tensor[(2, 10, 14), float32], Tensor[(2, 10, 14), float64]) */;
    %178 = cast(%165, dtype="float32") /* ty=Tensor[(8, 7, 11), float32] */;
    %179 = cast(%var_2278, dtype="bool") /* ty=Tensor[(525), bool] */;
    %180 = cast(%var_2278, dtype="bool") /* ty=Tensor[(525), bool] */;
    %181 = reshape(%179, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), bool] */;
    %182 = reshape(%180, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), bool] */;
    %183 = maximum(%173, %174) /* ty=Tensor[(8, 7, 11), int64] */;
    %184 = %177.1;
    %185 = @func_2045() /* ty=Tensor[(14, 3, 15), float32] */;
    %186 = acos(%178) /* ty=Tensor[(8, 7, 11), float32] */;
    %187 = @func_465(%181, %182) /* ty=Tensor[(15, 7, 5), bool] */;
    (%183, %184, meta[relay.Constant][10] /* ty=Tensor[(280), float32] */, %185, %186, %187, %var_2278)
  };
  %188(%var_2284, %var_2285, %var_2286, %var_2287) /* ty=(Tensor[(8, 7, 11), int64], Tensor[(2, 10, 14), float64], Tensor[(280), float32], Tensor[(14, 3, 15), float32], Tensor[(8, 7, 11), float32], Tensor[(15, 7, 5), bool], Tensor[(525), bool]) */
}

def @func_2895() -> Tensor[(14, 3, 15), float32] {
  %190 = fn () -> Tensor[(14, 3, 15), float32] {
    %189 = @func_1084() /* ty=(Tensor[(14, 3, 15), float32],) */;
    %189.0
  };
  %190() /* ty=Tensor[(14, 3, 15), float32] */
}

def @func_465(%var_460: Tensor[(15, 7, 5), bool], %var_461: Tensor[(15, 7, 5), bool]) -> Tensor[(15, 7, 5), bool] {
  %191 = cast(%var_461, dtype="bool") /* ty=Tensor[(15, 7, 5), bool] */;
  %192 = shape_of(%var_460, dtype="int32") /* ty=Tensor[(3), int32] */;
  %193 = cast(%var_460, dtype="bool") /* ty=Tensor[(15, 7, 5), bool] */;
  %194 = dyn.reshape(%191, %192, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%193, %194) /* ty=Tensor[(15, 7, 5), bool] */
}

def @func_7521() -> (Tensor[(14, 3, 15), float32],) {
  %197 = fn () -> (Tensor[(14, 3, 15), float32],) {
    %195 = @func_5744() /* ty=(Tensor[(14, 3, 15), float32],) */;
    %196 = %195.0;
    (%196,)
  };
  %197() /* ty=(Tensor[(14, 3, 15), float32],) */
}

def @func_1846(%var_1841: Tensor[(396), float64]) -> (Tensor[(14, 3, 15), float32], Tensor[(6, 11, 6), float64], Tensor[(396), float64]) {
  %198 = cast(%var_1841, dtype="float64") /* ty=Tensor[(396), float64] */;
  %199 = reshape(%198, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), float64] */;
  %200 = @func_1817() /* ty=Tensor[(14, 3, 15), float32] */;
  %201 = @func_1463(%199) /* ty=Tensor[(6, 11, 6), float64] */;
  (%200, %201, %var_1841)
}

def @func_2965() -> Tensor[(14, 3, 15), float32] {
  %202 = @func_1611() /* ty=(Tensor[(14, 3, 15), float32], Tensor[(525, 1), bool], Tensor[(10, 30), bool]) */;
  %202.0
}

def @func_2200() -> (Tensor[(14, 3, 15), float64],) {
  @func_2198() /* ty=(Tensor[(14, 3, 15), float64],) */
}

def @func_3990(%var_3988: Tensor[(525), bool], %var_3989: Tensor[(396), float64]) -> (Tensor[(14, 3, 15), float64], Tensor[(15, 7, 5), bool], Tensor[(525), bool], Tensor[(396), float64]) {
  @func_3986(%var_3988, %var_3989) /* ty=(Tensor[(14, 3, 15), float64], Tensor[(15, 7, 5), bool], Tensor[(525), bool], Tensor[(396), float64]) */
}

def @func_7896() -> (Tensor[(14, 3, 15), float32],) {
  %205 = fn () -> (Tensor[(14, 3, 15), float32],) {
    %203 = @func_7520() /* ty=(Tensor[(14, 3, 15), float32],) */;
    %204 = %203.0;
    (%204,)
  };
  %205() /* ty=(Tensor[(14, 3, 15), float32],) */
}

def @func_4101(%var_4100: Tensor[(2, 6, 5), float32]) -> (Tensor[(2, 6, 5), float32], Tensor[(14, 3, 15), uint32]) {
  %210 = fn (%var_4086: Tensor[(2, 6, 5), float32]) -> (Tensor[(2, 6, 5), float32], Tensor[(14, 3, 15), uint32]) {
    %206 = cast(%var_4086, dtype="float32") /* ty=Tensor[(2, 6, 5), float32] */;
    %207 = @func_3920() /* ty=(Tensor[(14, 3, 15), uint32],) */;
    %208 = sigmoid(%206) /* ty=Tensor[(2, 6, 5), float32] */;
    %209 = %207.0;
    (%208, %209)
  };
  %210(%var_4100) /* ty=(Tensor[(2, 6, 5), float32], Tensor[(14, 3, 15), uint32]) */
}

def @func_4118() -> Tensor[(525, 1), bool] {
  %211 = @func_1611() /* ty=(Tensor[(14, 3, 15), float32], Tensor[(525, 1), bool], Tensor[(10, 30), bool]) */;
  %211.1
}

def @func_2798(%var_2796: Tensor[(15, 15, 12), float64]) -> (Tensor[(15, 15, 12), float64],) {
  @func_2795(%var_2796) /* ty=(Tensor[(15, 15, 12), float64],) */
}

def @func_2045() -> Tensor[(14, 3, 15), float32] {
  %212 = @func_1040() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %212.0
}

def @func_1407(%var_1405: Tensor[(300), bool]) -> (Tensor[(14, 3, 15), float32], Tensor[(12, 5, 5), bool], Tensor[(300), bool]) {
  @func_1404(%var_1405) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(12, 5, 5), bool], Tensor[(300), bool]) */
}

def @func_7468() -> Tensor[(14, 3, 15), uint32] {
  @func_7466() /* ty=Tensor[(14, 3, 15), uint32] */
}

def @func_3153(%var_3150: Tensor[(70, 4), float32], %var_3151: Tensor[(168), uint8], %var_3152: float32) -> (Tensor[(14, 3, 15), float64], Tensor[(14, 3, 15), uint64], Tensor[(624), uint8], Tensor[(70, 4), float32], Tensor[(198, 2), float64], Tensor[(12, ?, 14), uint8], Tensor[(168), uint8], Tensor[(8, 7, 11), int64], float32, Tensor[(616), float32], Tensor[(525), bool], Tensor[(14, 3, 15), float32], Tensor[(525, 10), bool], Tensor[(5250), bool], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), int8], Tensor[(14, 3, 15), float32], Tensor[(15, 7, 5), bool], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32]) {
  %271 = fn (%var_3046: Tensor[(70, 4), float32], %var_3050: Tensor[(168), uint8], %var_3058: float32) -> (Tensor[(14, 3, 15), float64], Tensor[(14, 3, 15), uint64], Tensor[(624), uint8], Tensor[(70, 4), float32], Tensor[(198, 2), float64], Tensor[(12, ?, 14), uint8], Tensor[(168), uint8], Tensor[(8, 7, 11), int64], float32, Tensor[(616), float32], Tensor[(525), bool], Tensor[(14, 3, 15), float32], Tensor[(525, 10), bool], Tensor[(5250), bool], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), int8], Tensor[(14, 3, 15), float32], Tensor[(15, 7, 5), bool], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32]) {
    %213 = @func_2198() /* ty=(Tensor[(14, 3, 15), float64],) */;
    %214 = cast(meta[relay.Constant][11] /* ty=Tensor[(624), uint8] */, dtype="uint8") /* ty=Tensor[(624), uint8] */;
    %215 = cast(meta[relay.Constant][11] /* ty=Tensor[(624), uint8] */, dtype="uint8") /* ty=Tensor[(624), uint8] */;
    %216 = cast(%var_3046, dtype="float32") /* ty=Tensor[(70, 4), float32] */;
    %217 = cast(meta[relay.Constant][12] /* ty=Tensor[(198, 2), float64] */, dtype="float64") /* ty=Tensor[(198, 2), float64] */;
    %218 = reshape(%214, newshape=[13, 16, 3]) /* ty=Tensor[(13, 16, 3), uint8] */;
    %219 = reshape(%215, newshape=[13, 16, 3]) /* ty=Tensor[(13, 16, 3), uint8] */;
    %220 = reshape(%216, newshape=[280]) /* ty=Tensor[(280), float32] */;
    %221 = reshape(%217, newshape=[396, 1]) /* ty=Tensor[(396, 1), float64] */;
    %222 = @func_2588(%218, %219, %220, %221) /* ty=(Tensor[(13, 16, 3), uint8], Tensor[(280), float32], Tensor[(280), float32], Tensor[(14, 3, 15), float32], Tensor[(396), float64], Tensor[(14, 3, 15), float32], Tensor[(2, 10, 14), float64], Tensor[(5, 2), float32], Tensor[(525), bool], Tensor[(396, 1), float32], Tensor[(300), bool], Tensor[(300), bool], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint64], Tensor[(396, 1), float32]) */;
    %223 = cast(%var_3050, dtype="uint8") /* ty=Tensor[(168), uint8] */;
    %224 = reshape(%223, newshape=[12, 1, 14]) /* ty=Tensor[(12, 1, 14), uint8] */;
    %225 = @func_295(%224) /* ty=(Tensor[(12, ?, 14), uint8],) */;
    %226 = cast(%var_3058, dtype="float32") /* ty=float32 */;
    %227 = cast(meta[relay.Constant][13] /* ty=Tensor[(616), float32] */, dtype="float32") /* ty=Tensor[(616), float32] */;
    %228 = cast(meta[relay.Constant][13] /* ty=Tensor[(616), float32] */, dtype="bool") /* ty=Tensor[(616), bool] */;
    %229 = cast(meta[relay.Constant][14] /* ty=Tensor[(525), bool] */, dtype="bool") /* ty=Tensor[(525), bool] */;
    %230 = reshape(%226, newshape=[]) /* ty=float32 */;
    %231 = reshape(%227, newshape=[8, 7, 11]) /* ty=Tensor[(8, 7, 11), float32] */;
    %232 = reshape(%228, newshape=[8, 7, 11]) /* ty=Tensor[(8, 7, 11), bool] */;
    %233 = reshape(%229, newshape=[525]) /* ty=Tensor[(525), bool] */;
    %234 = @func_2283(%230, %231, %232, %233) /* ty=(Tensor[(8, 7, 11), int64], Tensor[(2, 10, 14), float64], Tensor[(280), float32], Tensor[(14, 3, 15), float32], Tensor[(8, 7, 11), float32], Tensor[(15, 7, 5), bool], Tensor[(525), bool]) */;
    %235 = @func_1084() /* ty=(Tensor[(14, 3, 15), float32],) */;
    %236 = cast(meta[relay.Constant][15] /* ty=Tensor[(5250), bool] */, dtype="bool") /* ty=Tensor[(5250), bool] */;
    %237 = reshape(%236, newshape=[525, 10]) /* ty=Tensor[(525, 10), bool] */;
    %238 = @func_2092(%237) /* ty=(Tensor[(525, 10), bool], Tensor[(15, 7, 5), bool]) */;
    %239 = @func_1430() /* ty=(Tensor[(14, 3, 15), float32],) */;
    %240 = %235.0;
    %241 = cast(%240, dtype="float64") /* ty=Tensor[(14, 3, 15), float64] */;
    %242 = reshape(%241, newshape=[14, 3, 15]) /* ty=Tensor[(14, 3, 15), float64] */;
    %243 = @func_2326(%242) /* ty=(Tensor[(14, 3, 15), int8],) */;
    %244 = @func_2351() /* ty=(Tensor[(14, 3, 15), uint32],) */;
    %245 = %244.0;
    %246 = cast(%245, dtype="float32") /* ty=Tensor[(14, 3, 15), float32] */;
    %247 = cast(meta[relay.Constant][15] /* ty=Tensor[(5250), bool] */, dtype="bool") /* ty=Tensor[(5250), bool] */;
    %248 = reshape(%247, newshape=[525, 10]) /* ty=Tensor[(525, 10), bool] */;
    %249 = @func_2092(%248) /* ty=(Tensor[(525, 10), bool], Tensor[(15, 7, 5), bool]) */;
    %250 = cast(%245, dtype="float32") /* ty=Tensor[(14, 3, 15), float32] */;
    %251 = rsqrt(%250) /* ty=Tensor[(14, 3, 15), float32] */;
    %252 = cast(meta[relay.Constant][16] /* ty=Tensor[(14, 3, 15), float32] */, dtype="uint64") /* ty=Tensor[(14, 3, 15), uint64] */;
    %253 = shape_of(%251, dtype="int32") /* ty=Tensor[(3), int32] */;
    %254 = cast(%251, dtype="uint64") /* ty=Tensor[(14, 3, 15), uint64] */;
    %255 = dyn.reshape(%252, %253, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %256 = add(%254, %255) /* ty=Tensor[(14, 3, 15), uint64] */;
    %257 = cast(%256, dtype="float64") /* ty=Tensor[(14, 3, 15), float64] */;
    %258 = atanh(%257) /* ty=Tensor[(14, 3, 15), float64] */;
    %259 = cast(%258, dtype="float32") /* ty=Tensor[(14, 3, 15), float32] */;
    %260 = %213.0;
    %261 = %222.13;
    %262 = %225.0;
    %263 = %234.0;
    %264 = %238.0;
    %265 = %239.0;
    %266 = %243.0;
    %267 = sinh(%246) /* ty=Tensor[(14, 3, 15), float32] */;
    %268 = %249.1;
    %269 = @func_1817() /* ty=Tensor[(14, 3, 15), float32] */;
    %270 = exp(%259) /* ty=Tensor[(14, 3, 15), float32] */;
    (%260, %261, meta[relay.Constant][11] /* ty=Tensor[(624), uint8] */, %var_3046, meta[relay.Constant][12] /* ty=Tensor[(198, 2), float64] */, %262, %var_3050, %263, %var_3058, meta[relay.Constant][13] /* ty=Tensor[(616), float32] */, meta[relay.Constant][14] /* ty=Tensor[(525), bool] */, %240, %264, meta[relay.Constant][15] /* ty=Tensor[(5250), bool] */, %265, %266, %267, %268, %269, %270)
  };
  %271(%var_3150, %var_3151, %var_3152) /* ty=(Tensor[(14, 3, 15), float64], Tensor[(14, 3, 15), uint64], Tensor[(624), uint8], Tensor[(70, 4), float32], Tensor[(198, 2), float64], Tensor[(12, ?, 14), uint8], Tensor[(168), uint8], Tensor[(8, 7, 11), int64], float32, Tensor[(616), float32], Tensor[(525), bool], Tensor[(14, 3, 15), float32], Tensor[(525, 10), bool], Tensor[(5250), bool], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), int8], Tensor[(14, 3, 15), float32], Tensor[(15, 7, 5), bool], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32]) */
}

def @func_7747(%var_7744: Tensor[(140, 2), float32], %var_7745: Tensor[(525), bool], %var_7746: Tensor[(60), float32]) -> (Tensor[(14, 3, 15), float32], Tensor[(15, 7, 5), bool], Tensor[(10), float32], Tensor[(140, 2), float32], Tensor[(525), bool], Tensor[(14, 3, 15), float32], Tensor[(2, 6, 5), float32], Tensor[(60), float32]) {
  %287 = fn (%var_7721: Tensor[(140, 2), float32], %var_7722: Tensor[(525), bool], %var_7741: Tensor[(60), float32]) -> (Tensor[(14, 3, 15), float32], Tensor[(15, 7, 5), bool], Tensor[(10), float32], Tensor[(140, 2), float32], Tensor[(525), bool], Tensor[(14, 3, 15), float32], Tensor[(2, 6, 5), float32], Tensor[(60), float32]) {
    %272 = cast(meta[relay.Constant][17] /* ty=Tensor[(10), float32] */, dtype="float32") /* ty=Tensor[(10), float32] */;
    %273 = cast(%var_7721, dtype="float32") /* ty=Tensor[(140, 2), float32] */;
    %274 = cast(%var_7722, dtype="bool") /* ty=Tensor[(525), bool] */;
    %275 = reshape(%272, newshape=[1, 2, 5]) /* ty=Tensor[(1, 2, 5), float32] */;
    %276 = reshape(%273, newshape=[280]) /* ty=Tensor[(280), float32] */;
    %277 = reshape(%274, newshape=[525]) /* ty=Tensor[(525), bool] */;
    %278 = @func_1888(%275, %276, %277) /* ty=(Tensor[(1, 2, 5), float32], Tensor[(2, 10, 14), float64], Tensor[(280), float32], Tensor[(15, 7, 5), bool], Tensor[(525), bool]) */;
    %279 = @func_1430() /* ty=(Tensor[(14, 3, 15), float32],) */;
    %280 = cast(%var_7741, dtype="float32") /* ty=Tensor[(60), float32] */;
    %281 = reshape(%280, newshape=[60]) /* ty=Tensor[(60), float32] */;
    %282 = @func_6666(%281) /* ty=(Tensor[(14, 3, 15), uint32], Tensor[(2, 6, 5), float32], Tensor[(60), float32]) */;
    %283 = @func_2894() /* ty=Tensor[(14, 3, 15), float32] */;
    %284 = %278.3;
    %285 = %279.0;
    %286 = %282.1;
    (%283, %284, meta[relay.Constant][17] /* ty=Tensor[(10), float32] */, %var_7721, %var_7722, %285, %286, %var_7741)
  };
  %287(%var_7744, %var_7745, %var_7746) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(15, 7, 5), bool], Tensor[(10), float32], Tensor[(140, 2), float32], Tensor[(525), bool], Tensor[(14, 3, 15), float32], Tensor[(2, 6, 5), float32], Tensor[(60), float32]) */
}

def @func_1322(%var_1307: Tensor[(14, 3, 15), bool], %var_1317: Tensor[(525), bool]) -> (Tensor[(14, 3, 15), uint64], Tensor[(15, 7, 5), bool], Tensor[(525), bool]) {
  %288 = @func_1040() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %289 = %288.0;
  %290 = cast(%289, dtype="float32") /* ty=Tensor[(14, 3, 15), float32] */;
  %291 = cosh(%290) /* ty=Tensor[(14, 3, 15), float32] */;
  %292 = cast(%289, dtype="bool") /* ty=Tensor[(14, 3, 15), bool] */;
  %293 = shape_of(%291, dtype="int32") /* ty=Tensor[(3), int32] */;
  %294 = cast(%291, dtype="bool") /* ty=Tensor[(14, 3, 15), bool] */;
  %295 = dyn.reshape(%292, %293, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %296 = greater_equal(%294, %295) /* ty=Tensor[(14, 3, 15), bool] */;
  %297 = cast(%var_1307, dtype="uint64") /* ty=Tensor[(14, 3, 15), uint64] */;
  %298 = shape_of(%296, dtype="int32") /* ty=Tensor[(3), int32] */;
  %299 = cast(%296, dtype="uint64") /* ty=Tensor[(14, 3, 15), uint64] */;
  %300 = dyn.reshape(%297, %298, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %301 = cast(%var_1317, dtype="bool") /* ty=Tensor[(525), bool] */;
  %302 = cast(%var_1317, dtype="bool") /* ty=Tensor[(525), bool] */;
  %303 = reshape(%301, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), bool] */;
  %304 = reshape(%302, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), bool] */;
  %305 = bitwise_or(%299, %300) /* ty=Tensor[(14, 3, 15), uint64] */;
  %306 = @func_465(%303, %304) /* ty=Tensor[(15, 7, 5), bool] */;
  (%305, %306, %var_1317)
}

def @func_7824() -> (Tensor[(14, 3, 15), float32],) {
  %308 = fn () -> (Tensor[(14, 3, 15), float32],) {
    %307 = @func_2894() /* ty=Tensor[(14, 3, 15), float32] */;
    (%307,)
  };
  %308() /* ty=(Tensor[(14, 3, 15), float32],) */
}

def @func_8129() -> Tensor[(15, 7, 5), bool] {
  %309 = @func_7609() /* ty=(Tensor[(525, 1), float32], Tensor[(14, 3, 15), float32], Tensor[(15, 7, 5), bool]) */;
  %309.2
}

def @func_2993() -> (Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint32]) {
  %310 = @func_1430() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %311 = @func_2351() /* ty=(Tensor[(14, 3, 15), uint32],) */;
  %312 = %310.0;
  %313 = %311.0;
  (%312, %313)
}

def @func_8506() -> Tensor[(14, 3, 15), uint32] {
  %314 = @func_2010() /* ty=(Tensor[(14, 3, 15), int64], Tensor[(14, 3, 15), uint32]) */;
  %314.1
}

def @func_6831(%var_6829: Tensor[(11, 12, 16), float32]) -> (Tensor[(11, 12, 16), bool],) {
  @func_6828(%var_6829) /* ty=(Tensor[(11, 12, 16), bool],) */
}

def @func_6919() -> (Tensor[(14, 3, 15), float32],) {
  %316 = fn () -> (Tensor[(14, 3, 15), float32],) {
    %315 = @func_2016() /* ty=Tensor[(14, 3, 15), float32] */;
    (%315,)
  };
  %316() /* ty=(Tensor[(14, 3, 15), float32],) */
}

def @func_8672() -> (Tensor[(14, 3, 15), uint32], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint32], Tensor[(280), float32], Tensor[(675, 2), float64], Tensor[(14, 3, 15), int8]) {
  %317 = @func_6317() /* ty=(Tensor[(14, 3, 15), uint32],) */;
  %318 = @func_7334() /* ty=(Tensor[(14, 3, 15), uint32],) */;
  %319 = cast(meta[relay.Constant][18] /* ty=Tensor[(675, 2), float64] */, dtype="float64") /* ty=Tensor[(675, 2), float64] */;
  %320 = cast(meta[relay.Constant][18] /* ty=Tensor[(675, 2), float64] */, dtype="float64") /* ty=Tensor[(675, 2), float64] */;
  %321 = reshape(%319, newshape=[6, 15, 15]) /* ty=Tensor[(6, 15, 15), float64] */;
  %322 = reshape(%320, newshape=[6, 15, 15]) /* ty=Tensor[(6, 15, 15), float64] */;
  %323 = @func_5078(%321, %322) /* ty=(Tensor[(6, 15, 15), float64], Tensor[(14, 3, 15), float32], Tensor[(396), float64], Tensor[(6, 15, 15), float64], Tensor[(280), float32], Tensor[(280), float32]) */;
  %324 = %318.0;
  %325 = cast(%324, dtype="float64") /* ty=Tensor[(14, 3, 15), float64] */;
  %326 = reshape(%325, newshape=[630]) /* ty=Tensor[(630), float64] */;
  %327 = @func_7431(%326) /* ty=(Tensor[(11, 12, 16), int64], Tensor[(14, 3, 15), int8], Tensor[(630), float64]) */;
  %328 = %317.0;
  %329 = @func_2016() /* ty=Tensor[(14, 3, 15), float32] */;
  %330 = %323.4;
  %331 = %327.1;
  (%328, %329, %324, %330, meta[relay.Constant][18] /* ty=Tensor[(675, 2), float64] */, %331)
}

def @func_4435() -> (Tensor[(14, 3, 15), uint32], Tensor[(14, 3, 15), uint32]) {
  @func_4433() /* ty=(Tensor[(14, 3, 15), uint32], Tensor[(14, 3, 15), uint32]) */
}

def @func_4129() -> (Tensor[(14, 3, 15), float64],) {
  %332 = @func_2198() /* ty=(Tensor[(14, 3, 15), float64],) */;
  %333 = %332.0;
  (%333,)
}

def @func_4573() -> (Tensor[(14, 3, 15), float32], Tensor[(280), float32], Tensor[(525), bool], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint64], Tensor[(624), uint8], Tensor[(396), float64]) {
  @func_4571() /* ty=(Tensor[(14, 3, 15), float32], Tensor[(280), float32], Tensor[(525), bool], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint64], Tensor[(624), uint8], Tensor[(396), float64]) */
}

def @func_6645(%var_6644: Tensor[(42, 4), uint8]) -> (Tensor[(14, 3, 15), float32], Tensor[(168), uint8], Tensor[(280), float32], Tensor[(42, 4), float32]) {
  %344 = fn (%var_6621: Tensor[(42, 4), uint8]) -> (Tensor[(14, 3, 15), float32], Tensor[(168), uint8], Tensor[(280), float32], Tensor[(42, 4), float32]) {
    %334 = @func_4684() /* ty=(Tensor[(14, 3, 15), float32],) */;
    %335 = cast(meta[relay.Constant][19] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
    %336 = cast(%var_6621, dtype="uint8") /* ty=Tensor[(42, 4), uint8] */;
    %337 = reshape(%335, newshape=[1, 280]) /* ty=Tensor[(1, 280), float32] */;
    %338 = reshape(%336, newshape=[168]) /* ty=Tensor[(168), uint8] */;
    %339 = @func_5795(%337, %338) /* ty=(Tensor[(11, 12, 16), float32], Tensor[(12, ?, 14), uint8], Tensor[(1, 280), float32], Tensor[(168), uint8], float32) */;
    %340 = cast(%var_6621, dtype="float32") /* ty=Tensor[(42, 4), float32] */;
    %341 = %334.0;
    %342 = %339.3;
    %343 = sin(%340) /* ty=Tensor[(42, 4), float32] */;
    (%341, %342, meta[relay.Constant][19] /* ty=Tensor[(280), float32] */, %343)
  };
  %344(%var_6644) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(168), uint8], Tensor[(280), float32], Tensor[(42, 4), float32]) */
}

def @func_3545() -> (Tensor[(14, 3, 15), float64], Tensor[(12, ?, 14), uint8], Tensor[(168), uint8], Tensor[(15, 15, 12), float64], Tensor[(2700), float64]) {
  %345 = @func_2198() /* ty=(Tensor[(14, 3, 15), float64],) */;
  %346 = cast(meta[relay.Constant][20] /* ty=Tensor[(168), uint8] */, dtype="uint8") /* ty=Tensor[(168), uint8] */;
  %347 = reshape(%346, newshape=[12, 1, 14]) /* ty=Tensor[(12, 1, 14), uint8] */;
  %348 = @func_295(%347) /* ty=(Tensor[(12, ?, 14), uint8],) */;
  %349 = cast(meta[relay.Constant][21] /* ty=Tensor[(2700), float64] */, dtype="float64") /* ty=Tensor[(2700), float64] */;
  %350 = reshape(%349, newshape=[15, 15, 12]) /* ty=Tensor[(15, 15, 12), float64] */;
  %351 = @func_2795(%350) /* ty=(Tensor[(15, 15, 12), float64],) */;
  %352 = %345.0;
  %353 = %348.0;
  %354 = %351.0;
  (%352, %353, meta[relay.Constant][20] /* ty=Tensor[(168), uint8] */, %354, meta[relay.Constant][21] /* ty=Tensor[(2700), float64] */)
}

def @func_7557() -> Tensor[(525, 1), bool] {
  @func_4118() /* ty=Tensor[(525, 1), bool] */
}

def @func_1817() -> Tensor[(14, 3, 15), float32] {
  %355 = @func_1430() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %355.0
}

def @func_3547() -> (Tensor[(14, 3, 15), float64], Tensor[(12, ?, 14), uint8], Tensor[(168), uint8], Tensor[(15, 15, 12), float64], Tensor[(2700), float64]) {
  @func_3545() /* ty=(Tensor[(14, 3, 15), float64], Tensor[(12, ?, 14), uint8], Tensor[(168), uint8], Tensor[(15, 15, 12), float64], Tensor[(2700), float64]) */
}

def @func_7335() -> (Tensor[(14, 3, 15), uint32],) {
  %358 = fn () -> (Tensor[(14, 3, 15), uint32],) {
    %356 = @func_4433() /* ty=(Tensor[(14, 3, 15), uint32], Tensor[(14, 3, 15), uint32]) */;
    %357 = %356.0;
    (%357,)
  };
  %358() /* ty=(Tensor[(14, 3, 15), uint32],) */
}

def @func_1783(%var_1781: Tensor[(396), float64], %var_1782: Tensor[(300), bool]) -> (Tensor[(14, 3, 15), float32], Tensor[(6, 11, 6), float64], Tensor[(396), float64], Tensor[(300), bool], Tensor[(300), bool]) {
  %368 = fn (%var_1746: Tensor[(396), float64], %var_1771: Tensor[(300), bool]) -> (Tensor[(14, 3, 15), float32], Tensor[(6, 11, 6), float64], Tensor[(396), float64], Tensor[(300), bool], Tensor[(300), bool]) {
    %359 = @func_1040() /* ty=(Tensor[(14, 3, 15), float32],) */;
    %360 = cast(%var_1746, dtype="float64") /* ty=Tensor[(396), float64] */;
    %361 = reshape(%360, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), float64] */;
    %362 = cast(%var_1771, dtype="bool") /* ty=Tensor[(300), bool] */;
    %363 = reshape(%362, newshape=[300]) /* ty=Tensor[(300), bool] */;
    %364 = @func_1404(%363) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(12, 5, 5), bool], Tensor[(300), bool]) */;
    %365 = %359.0;
    %366 = @func_1463(%361) /* ty=Tensor[(6, 11, 6), float64] */;
    %367 = %364.2;
    (%365, %366, %var_1746, %367, %var_1771)
  };
  %368(%var_1781, %var_1782) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(6, 11, 6), float64], Tensor[(396), float64], Tensor[(300), bool], Tensor[(300), bool]) */
}

def @func_3198() -> Tensor[(11, 12, 16), float32] {
  %369 = cast(meta[relay.Constant][22] /* ty=Tensor[(11, 12, 16), float32] */, dtype="float32") /* ty=Tensor[(11, 12, 16), float32] */;
  rsqrt(%369) /* ty=Tensor[(11, 12, 16), float32] */
}

def @func_6473() -> (Tensor[(14, 3, 15), uint32],) {
  @func_6471() /* ty=(Tensor[(14, 3, 15), uint32],) */
}

def @func_1086() -> (Tensor[(14, 3, 15), float32],) {
  @func_1084() /* ty=(Tensor[(14, 3, 15), float32],) */
}

def @func_295(%var_288: Tensor[(12, 1, 14), uint8]) -> (Tensor[(12, ?, 14), uint8],) {
  %370 = cast(meta[relay.Constant][23] /* ty=Tensor[(12, 1, 14), uint8] */, dtype="uint8") /* ty=Tensor[(12, 1, 14), uint8] */;
  %371 = shape_of(%var_288, dtype="int32") /* ty=Tensor[(3), int32] */;
  %372 = cast(%var_288, dtype="uint8") /* ty=Tensor[(12, 1, 14), uint8] */;
  %373 = dyn.reshape(%370, %371, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %374 = right_shift(%372, %373) /* ty=Tensor[(12, ?, 14), uint8] */;
  (%374,)
}

def @func_4433() -> (Tensor[(14, 3, 15), uint32], Tensor[(14, 3, 15), uint32]) {
  %375 = @func_2993() /* ty=(Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint32]) */;
  %376 = @func_2351() /* ty=(Tensor[(14, 3, 15), uint32],) */;
  %377 = %375.1;
  %378 = %376.0;
  (%377, %378)
}

def @func_6549() -> Tensor[(14, 3, 15), uint32] {
  %379 = @func_2993() /* ty=(Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint32]) */;
  %379.1
}

def @func_8082(%var_8077: Tensor[(18, 50), int8], %var_8078: Tensor[(1, 728), float32], %var_8079: Tensor[(280), float32], %var_8080: Tensor[(525), bool], %var_8081: Tensor[(60), float32]) -> (Tensor[(14, 3, 15), float32], Tensor[(6, 15, 10), int8], Tensor[(18, 50), int8], Tensor[(4, 13, 14), bool], Tensor[(1, 728), float32], Tensor[(14, 3, 15), float32], Tensor[(280), float32], Tensor[(525), bool], Tensor[(60), float32], Tensor[(11, 12, 16), float32]) {
  @func_8075(%var_8077, %var_8078, %var_8079, %var_8080, %var_8081) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(6, 15, 10), int8], Tensor[(18, 50), int8], Tensor[(4, 13, 14), bool], Tensor[(1, 728), float32], Tensor[(14, 3, 15), float32], Tensor[(280), float32], Tensor[(525), bool], Tensor[(60), float32], Tensor[(11, 12, 16), float32]) */
}

def @func_7231(%var_7229: Tensor[(728), float32]) -> (Tensor[(14, 3, 15), float32], Tensor[(6, 11, 6), float64], Tensor[(396), float64], Tensor[(4, 13, 14), float32], Tensor[(728), float32], Tensor[(12, ?, 14), uint8], Tensor[(168), uint8], Tensor[(12, ?, 14), uint8]) {
  @func_7228(%var_7229) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(6, 11, 6), float64], Tensor[(396), float64], Tensor[(4, 13, 14), float32], Tensor[(728), float32], Tensor[(12, ?, 14), uint8], Tensor[(168), uint8], Tensor[(12, ?, 14), uint8]) */
}

def @func_2035() -> Tensor[(14, 3, 15), uint32] {
  %381 = fn () -> Tensor[(14, 3, 15), uint32] {
    %380 = @func_2010() /* ty=(Tensor[(14, 3, 15), int64], Tensor[(14, 3, 15), uint32]) */;
    %380.1
  };
  %381() /* ty=Tensor[(14, 3, 15), uint32] */
}

def @func_6828(%var_6821: Tensor[(11, 12, 16), float32]) -> (Tensor[(11, 12, 16), bool],) {
  %382 = @func_3198() /* ty=Tensor[(11, 12, 16), float32] */;
  %383 = cast(%var_6821, dtype="bool") /* ty=Tensor[(11, 12, 16), bool] */;
  %384 = shape_of(%382, dtype="int32") /* ty=Tensor[(3), int32] */;
  %385 = cast(%382, dtype="bool") /* ty=Tensor[(11, 12, 16), bool] */;
  %386 = dyn.reshape(%383, %384, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %387 = greater_equal(%385, %386) /* ty=Tensor[(11, 12, 16), bool] */;
  (%387,)
}

def @main() -> (Tensor[(2, 14, 6), float64], float64, Tensor[(11, 12, 16), int8]) {
  %388 = cast(-5.80968f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %389 = reshape(%388, newshape=[]) /* ty=float64 */;
  %390 = @func_3440() /* ty=Tensor[(11, 12, 16), float32] */;
  %391 = cast(meta[relay.Constant][24] /* ty=Tensor[(11, 12, 16), float32] */, dtype="int8") /* ty=Tensor[(11, 12, 16), int8] */;
  %392 = shape_of(%390, dtype="int32") /* ty=Tensor[(3), int32] */;
  %393 = cast(%390, dtype="int8") /* ty=Tensor[(11, 12, 16), int8] */;
  %394 = dyn.reshape(%391, %392, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %395 = @func_5813(%389) /* ty=Tensor[(2, 14, 6), float64] */;
  %396 = minimum(%393, %394) /* ty=Tensor[(11, 12, 16), int8] */;
  (%395, -5.80968f64 /* ty=float64 */, %396)
}

def @func_2144(%var_2143: Tensor[(396), float64]) -> (Tensor[(14, 3, 15), float32], Tensor[(396), float64], Tensor[(396), float64]) {
  %402 = fn (%var_2128: Tensor[(396), float64]) -> (Tensor[(14, 3, 15), float32], Tensor[(396), float64], Tensor[(396), float64]) {
    %397 = cast(%var_2128, dtype="float64") /* ty=Tensor[(396), float64] */;
    %398 = reshape(%397, newshape=[396]) /* ty=Tensor[(396), float64] */;
    %399 = @func_1846(%398) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(6, 11, 6), float64], Tensor[(396), float64]) */;
    %400 = @func_1817() /* ty=Tensor[(14, 3, 15), float32] */;
    %401 = %399.2;
    (%400, %401, %var_2128)
  };
  %402(%var_2143) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(396), float64], Tensor[(396), float64]) */
}

def @func_5848() -> Tensor[(14, 3, 15), uint32] {
  %404 = fn () -> Tensor[(14, 3, 15), uint32] {
    %403 = @func_4433() /* ty=(Tensor[(14, 3, 15), uint32], Tensor[(14, 3, 15), uint32]) */;
    %403.0
  };
  %404() /* ty=Tensor[(14, 3, 15), uint32] */
}

def @func_6319() -> (Tensor[(14, 3, 15), uint32],) {
  @func_6317() /* ty=(Tensor[(14, 3, 15), uint32],) */
}

def @func_8360() -> Tensor[(14, 3, 15), float32] {
  @func_8358() /* ty=Tensor[(14, 3, 15), float32] */
}

def @func_1430() -> (Tensor[(14, 3, 15), float32],) {
  %405 = @func_1040() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %406 = %405.0;
  (%406,)
}

def @func_1155(%var_1153: Tensor[(12, 5, 5), bool]) -> (Tensor[(12, 5, 5), bool], Tensor[(15, 7, 5), bool], Tensor[(525, 1), bool]) {
  @func_1152(%var_1153) /* ty=(Tensor[(12, 5, 5), bool], Tensor[(15, 7, 5), bool], Tensor[(525, 1), bool]) */
}

def @func_3758(%var_3756: Tensor[(525), bool], %var_3757: Tensor[(14, 3, 15), float64]) -> (Tensor[(525), bool], Tensor[(525), bool], Tensor[(396), float64], Tensor[(2, 10, 14), float32], Tensor[(280), float32], Tensor[(6, 11, 6), float64], Tensor[(14, 3, 15), uint32], Tensor[(14, 3, 15), float32]) {
  @func_3754(%var_3756, %var_3757) /* ty=(Tensor[(525), bool], Tensor[(525), bool], Tensor[(396), float64], Tensor[(2, 10, 14), float32], Tensor[(280), float32], Tensor[(6, 11, 6), float64], Tensor[(14, 3, 15), uint32], Tensor[(14, 3, 15), float32]) */
}

def @func_2405(%var_2403: Tensor[(280), float32]) -> (Tensor[(14, 3, 15), uint64], Tensor[(2, 10, 14), float32], Tensor[(280), float32]) {
  %407 = @func_2034() /* ty=Tensor[(14, 3, 15), uint32] */;
  %408 = cast(meta[relay.Constant][25] /* ty=Tensor[(14, 3, 15), uint32] */, dtype="uint64") /* ty=Tensor[(14, 3, 15), uint64] */;
  %409 = shape_of(%407, dtype="int32") /* ty=Tensor[(3), int32] */;
  %410 = cast(%407, dtype="uint64") /* ty=Tensor[(14, 3, 15), uint64] */;
  %411 = dyn.reshape(%408, %409, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %412 = cast(%var_2403, dtype="float32") /* ty=Tensor[(280), float32] */;
  %413 = reshape(%412, newshape=[2, 10, 14]) /* ty=Tensor[(2, 10, 14), float32] */;
  %414 = @func_1056(%413) /* ty=(Tensor[(2, 10, 14), float32], Tensor[(2, 10, 14), float64]) */;
  %415 = right_shift(%410, %411) /* ty=Tensor[(14, 3, 15), uint64] */;
  %416 = %414.0;
  (%415, %416, %var_2403)
}

def @func_5611() -> Tensor[(14, 3, 15), uint32] {
  %417 = fn () -> Tensor[(14, 3, 15), uint32] {
    @func_2034() /* ty=Tensor[(14, 3, 15), uint32] */
  };
  %417() /* ty=Tensor[(14, 3, 15), uint32] */
}

def @func_7559() -> Tensor[(525, 1), bool] {
  @func_7557() /* ty=Tensor[(525, 1), bool] */
}

def @func_4686() -> (Tensor[(14, 3, 15), float32],) {
  @func_4684() /* ty=(Tensor[(14, 3, 15), float32],) */
}

def @func_6511(%var_6510: Tensor[(4, 13, 14), float32]) -> (Tensor[(11, 12, 16), float32], Tensor[(4, 13, 14), float32], Tensor[(4, 13, 14), bool]) {
  %429 = fn (%var_6482: Tensor[(4, 13, 14), float32]) -> (Tensor[(11, 12, 16), float32], Tensor[(4, 13, 14), float32], Tensor[(4, 13, 14), bool]) {
    %418 = @func_5777() /* ty=(Tensor[(11, 12, 16), float32],) */;
    %419 = cast(%var_6482, dtype="float32") /* ty=Tensor[(4, 13, 14), float32] */;
    %420 = cos(%419) /* ty=Tensor[(4, 13, 14), float32] */;
    %421 = cast(%420, dtype="float32") /* ty=Tensor[(4, 13, 14), float32] */;
    %422 = cast(%var_6482, dtype="bool") /* ty=Tensor[(4, 13, 14), bool] */;
    %423 = shape_of(%420, dtype="int32") /* ty=Tensor[(3), int32] */;
    %424 = cast(%420, dtype="bool") /* ty=Tensor[(4, 13, 14), bool] */;
    %425 = dyn.reshape(%422, %423, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %426 = %418.0;
    %427 = acos(%421) /* ty=Tensor[(4, 13, 14), float32] */;
    %428 = logical_and(%424, %425) /* ty=Tensor[(4, 13, 14), bool] */;
    (%426, %427, %428)
  };
  %429(%var_6510) /* ty=(Tensor[(11, 12, 16), float32], Tensor[(4, 13, 14), float32], Tensor[(4, 13, 14), bool]) */
}

def @func_3875() -> Tensor[(14, 3, 15), float32] {
  %430 = fn () -> Tensor[(14, 3, 15), float32] {
    @func_2910() /* ty=Tensor[(14, 3, 15), float32] */
  };
  %430() /* ty=Tensor[(14, 3, 15), float32] */
}

def @func_3342(%var_3340: Tensor[(3, 132), float64]) -> (Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), bool], Tensor[(14, 3, 15), float32], Tensor[(3, 132), float64], Tensor[(300), bool]) {
  @func_3339(%var_3340) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), bool], Tensor[(14, 3, 15), float32], Tensor[(3, 132), float64], Tensor[(300), bool]) */
}

def @func_3920() -> (Tensor[(14, 3, 15), uint32],) {
  %431 = @func_2459() /* ty=(Tensor[(14, 3, 15), uint32],) */;
  %432 = %431.0;
  (%432,)
}

def @func_1059(%var_1057: Tensor[(2, 10, 14), float32]) -> (Tensor[(2, 10, 14), float32], Tensor[(2, 10, 14), float64]) {
  @func_1056(%var_1057) /* ty=(Tensor[(2, 10, 14), float32], Tensor[(2, 10, 14), float64]) */
}

def @func_2352() -> (Tensor[(14, 3, 15), uint32],) {
  %435 = fn () -> (Tensor[(14, 3, 15), uint32],) {
    %433 = @func_2010() /* ty=(Tensor[(14, 3, 15), int64], Tensor[(14, 3, 15), uint32]) */;
    %434 = %433.1;
    (%434,)
  };
  %435() /* ty=(Tensor[(14, 3, 15), uint32],) */
}

def @func_2459() -> (Tensor[(14, 3, 15), uint32],) {
  %436 = @func_2010() /* ty=(Tensor[(14, 3, 15), int64], Tensor[(14, 3, 15), uint32]) */;
  %437 = %436.1;
  (%437,)
}

def @func_7534() -> (Tensor[(14, 3, 15), float32],) {
  %438 = @func_5569() /* ty=Tensor[(14, 3, 15), float32] */;
  (%438,)
}

def @func_3339(%var_3336: Tensor[(3, 132), float64]) -> (Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), bool], Tensor[(14, 3, 15), float32], Tensor[(3, 132), float64], Tensor[(300), bool]) {
  %439 = @func_2910() /* ty=Tensor[(14, 3, 15), float32] */;
  %440 = cast(%439, dtype="float32") /* ty=Tensor[(14, 3, 15), float32] */;
  %441 = reshape(%440, newshape=[14, 3, 15]) /* ty=Tensor[(14, 3, 15), float32] */;
  %442 = @func_1133(%441) /* ty=(Tensor[(14, 3, 15), bool], Tensor[(14, 3, 15), bool], Tensor[(14, 3, 15), int64]) */;
  %443 = cast(%var_3336, dtype="float64") /* ty=Tensor[(3, 132), float64] */;
  %444 = cast(meta[relay.Constant][26] /* ty=Tensor[(300), bool] */, dtype="bool") /* ty=Tensor[(300), bool] */;
  %445 = reshape(%443, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %446 = reshape(%444, newshape=[300]) /* ty=Tensor[(300), bool] */;
  %447 = @func_1780(%445, %446) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(6, 11, 6), float64], Tensor[(396), float64], Tensor[(300), bool], Tensor[(300), bool]) */;
  %448 = %442.1;
  %449 = %447.0;
  (%439, %448, %449, %var_3336, meta[relay.Constant][26] /* ty=Tensor[(300), bool] */)
}

def @func_2011() -> (Tensor[(14, 3, 15), int64], Tensor[(14, 3, 15), uint32]) {
  %465 = fn () -> (Tensor[(14, 3, 15), int64], Tensor[(14, 3, 15), uint32]) {
    %450 = @func_1084() /* ty=(Tensor[(14, 3, 15), float32],) */;
    %451 = %450.0;
    %452 = cast(%451, dtype="float32") /* ty=Tensor[(14, 3, 15), float32] */;
    %453 = reshape(%452, newshape=[14, 3, 15]) /* ty=Tensor[(14, 3, 15), float32] */;
    %454 = @func_1133(%453) /* ty=(Tensor[(14, 3, 15), bool], Tensor[(14, 3, 15), bool], Tensor[(14, 3, 15), int64]) */;
    %455 = cast(%451, dtype="float32") /* ty=Tensor[(14, 3, 15), float32] */;
    %456 = reshape(%455, newshape=[14, 3, 15]) /* ty=Tensor[(14, 3, 15), float32] */;
    %457 = @func_1526(%456) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32]) */;
    %458 = %457.1;
    %459 = cast(%451, dtype="uint32") /* ty=Tensor[(14, 3, 15), uint32] */;
    %460 = shape_of(%458, dtype="int32") /* ty=Tensor[(3), int32] */;
    %461 = cast(%458, dtype="uint32") /* ty=Tensor[(14, 3, 15), uint32] */;
    %462 = dyn.reshape(%459, %460, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %463 = %454.2;
    %464 = subtract(%461, %462) /* ty=Tensor[(14, 3, 15), uint32] */;
    (%463, %464)
  };
  %465() /* ty=(Tensor[(14, 3, 15), int64], Tensor[(14, 3, 15), uint32]) */
}

def @func_2910() -> Tensor[(14, 3, 15), float32] {
  @func_2045() /* ty=Tensor[(14, 3, 15), float32] */
}

def @func_2017() -> Tensor[(14, 3, 15), float32] {
  %467 = fn () -> Tensor[(14, 3, 15), float32] {
    %466 = @func_1430() /* ty=(Tensor[(14, 3, 15), float32],) */;
    %466.0
  };
  %467() /* ty=Tensor[(14, 3, 15), float32] */
}

def @func_6026(%var_6024: Tensor[(450), float64], %var_6025: Tensor[(168), uint8]) -> (Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32], Tensor[(525, 9), bool], Tensor[(8, 7, 11), int64], Tensor[(450), float64], Tensor[(280), float32], Tensor[(168), uint8], float32) {
  %496 = fn (%var_5998: Tensor[(450), float64], %var_6000: Tensor[(168), uint8]) -> (Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32], Tensor[(525, 9), bool], Tensor[(8, 7, 11), int64], Tensor[(450), float64], Tensor[(280), float32], Tensor[(168), uint8], float32) {
    %468 = @func_5610() /* ty=Tensor[(14, 3, 15), uint32] */;
    %469 = cast(%468, dtype="float32") /* ty=Tensor[(14, 3, 15), float32] */;
    %470 = @func_5744() /* ty=(Tensor[(14, 3, 15), float32],) */;
    %471 = @func_4118() /* ty=Tensor[(525, 1), bool] */;
    %472 = cast(%471, dtype="float32") /* ty=Tensor[(525, 1), float32] */;
    %473 = cast(meta[relay.Constant][27] /* ty=Tensor[(525, 9), bool] */, dtype="float32") /* ty=Tensor[(525, 9), float32] */;
    %474 = floor_mod(%472, %473) /* ty=Tensor[(525, 9), float32] */;
    %475 = cast(meta[relay.Constant][27] /* ty=Tensor[(525, 9), bool] */, dtype="uint64") /* ty=Tensor[(525, 9), uint64] */;
    %476 = cast(%471, dtype="uint64") /* ty=Tensor[(525, 1), uint64] */;
    %477 = maximum(%475, %476) /* ty=Tensor[(525, 9), uint64] */;
    %478 = cast(%477, dtype="bool") /* ty=Tensor[(525, 9), bool] */;
    %479 = shape_of(%474, dtype="int32") /* ty=Tensor[(2), int32] */;
    %480 = cast(%474, dtype="bool") /* ty=Tensor[(525, 9), bool] */;
    %481 = dyn.reshape(%478, %479, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %482 = cast(%var_5998, dtype="float64") /* ty=Tensor[(450), float64] */;
    %483 = cast(meta[relay.Constant][28] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
    %484 = cast(%var_6000, dtype="uint8") /* ty=Tensor[(168), uint8] */;
    %485 = cast(9.19619f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %486 = reshape(%482, newshape=[3, 10, 15]) /* ty=Tensor[(3, 10, 15), float64] */;
    %487 = reshape(%483, newshape=[140, 2]) /* ty=Tensor[(140, 2), float32] */;
    %488 = reshape(%484, newshape=[168]) /* ty=Tensor[(168), uint8] */;
    %489 = reshape(%485, newshape=[]) /* ty=float32 */;
    %490 = @func_5709(%486, %487, %488, %489) /* ty=(Tensor[(8, 7, 11), int64], Tensor[(140, 2), float32], Tensor[(168), uint8], float32, Tensor[(3, 10, 15), bool], Tensor[(14, 3, 15), uint32]) */;
    %491 = acos(%469) /* ty=Tensor[(14, 3, 15), float32] */;
    %492 = @func_2910() /* ty=Tensor[(14, 3, 15), float32] */;
    %493 = %470.0;
    %494 = not_equal(%480, %481) /* ty=Tensor[(525, 9), bool] */;
    %495 = %490.0;
    (%491, %492, %493, %494, %495, %var_5998, meta[relay.Constant][28] /* ty=Tensor[(280), float32] */, %var_6000, 9.19619f /* ty=float32 */)
  };
  %496(%var_6024, %var_6025) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32], Tensor[(525, 9), bool], Tensor[(8, 7, 11), int64], Tensor[(450), float64], Tensor[(280), float32], Tensor[(168), uint8], float32) */
}

def @func_3260(%var_3234: Tensor[(66, 6), float64]) -> (Tensor[(14, 3, 15), float32], Tensor[(6, 11, 6), float64], Tensor[(66, 6), float64], Tensor[(525, 1), float32], Tensor[(525, ?), float32]) {
  %497 = cast(%var_3234, dtype="float64") /* ty=Tensor[(66, 6), float64] */;
  %498 = reshape(%497, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), float64] */;
  %499 = @func_1611() /* ty=(Tensor[(14, 3, 15), float32], Tensor[(525, 1), bool], Tensor[(10, 30), bool]) */;
  %500 = %499.1;
  %501 = cast(%500, dtype="float64") /* ty=Tensor[(525, 1), float64] */;
  %502 = asinh(%501) /* ty=Tensor[(525, 1), float64] */;
  %503 = cast(%502, dtype="float64") /* ty=Tensor[(525, 1), float64] */;
  %504 = cosh(%503) /* ty=Tensor[(525, 1), float64] */;
  %505 = cast(%504, dtype="float32") /* ty=Tensor[(525, 1), float32] */;
  %506 = sqrt(%505) /* ty=Tensor[(525, 1), float32] */;
  %507 = cast(%506, dtype="float32") /* ty=Tensor[(525, 1), float32] */;
  %508 = cast(%500, dtype="float32") /* ty=Tensor[(525, 1), float32] */;
  %509 = shape_of(%506, dtype="int32") /* ty=Tensor[(2), int32] */;
  %510 = cast(%506, dtype="float32") /* ty=Tensor[(525, 1), float32] */;
  %511 = dyn.reshape(%508, %509, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %512 = @func_2894() /* ty=Tensor[(14, 3, 15), float32] */;
  %513 = @func_1463(%498) /* ty=Tensor[(6, 11, 6), float64] */;
  %514 = sin(%507) /* ty=Tensor[(525, 1), float32] */;
  %515 = floor_divide(%510, %511) /* ty=Tensor[(525, ?), float32] */;
  (%512, %513, %var_3234, %514, %515)
}

def @func_1641(%var_1639: Tensor[(525), bool], %var_1640: Tensor[(66, 6), float64]) -> (Tensor[(14, 3, 15), float32], Tensor[(15, 7, 5), bool], Tensor[(525), bool], Tensor[(6, 11, 6), float64], Tensor[(66, 6), float64]) {
  @func_1637(%var_1639, %var_1640) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(15, 7, 5), bool], Tensor[(525), bool], Tensor[(6, 11, 6), float64], Tensor[(66, 6), float64]) */
}

def @func_4778(%var_4776: Tensor[(15, 7, 5), bool], %var_4777: float32) -> (Tensor[(624), uint8], Tensor[(525), bool], Tensor[(15, 7, 5), float32], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint32], Tensor[(624), uint8], Tensor[(280), float32], Tensor[(168), uint8], float32) {
  %548 = fn (%var_4737: Tensor[(15, 7, 5), bool], %var_4770: float32) -> (Tensor[(624), uint8], Tensor[(525), bool], Tensor[(15, 7, 5), float32], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint32], Tensor[(624), uint8], Tensor[(280), float32], Tensor[(168), uint8], float32) {
    %516 = @func_4571() /* ty=(Tensor[(14, 3, 15), float32], Tensor[(280), float32], Tensor[(525), bool], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint64], Tensor[(624), uint8], Tensor[(396), float64]) */;
    %517 = @func_3172() /* ty=Tensor[(14, 3, 15), float32] */;
    %518 = cast(%517, dtype="bool") /* ty=Tensor[(14, 3, 15), bool] */;
    %519 = cast(meta[relay.Constant][29] /* ty=Tensor[(525), bool] */, dtype="bool") /* ty=Tensor[(525), bool] */;
    %520 = reshape(%518, newshape=[14, 3, 15]) /* ty=Tensor[(14, 3, 15), bool] */;
    %521 = reshape(%519, newshape=[525]) /* ty=Tensor[(525), bool] */;
    %522 = @func_1322(%520, %521) /* ty=(Tensor[(14, 3, 15), uint64], Tensor[(15, 7, 5), bool], Tensor[(525), bool]) */;
    %523 = %522.1;
    %524 = cast(%var_4737, dtype="float32") /* ty=Tensor[(15, 7, 5), float32] */;
    %525 = shape_of(%523, dtype="int32") /* ty=Tensor[(3), int32] */;
    %526 = cast(%523, dtype="float32") /* ty=Tensor[(15, 7, 5), float32] */;
    %527 = dyn.reshape(%524, %525, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %528 = @func_3920() /* ty=(Tensor[(14, 3, 15), uint32],) */;
    %529 = %528.0;
    %530 = cast(%529, dtype="float32") /* ty=Tensor[(14, 3, 15), float32] */;
    %531 = shape_of(%517, dtype="int32") /* ty=Tensor[(3), int32] */;
    %532 = cast(%517, dtype="float32") /* ty=Tensor[(14, 3, 15), float32] */;
    %533 = dyn.reshape(%530, %531, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %534 = @func_4245() /* ty=(Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint32], Tensor[(14, 3, 15), float32]) */;
    %535 = cast(meta[relay.Constant][30] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
    %536 = cast(meta[relay.Constant][31] /* ty=Tensor[(168), uint8] */, dtype="uint8") /* ty=Tensor[(168), uint8] */;
    %537 = cast(%var_4770, dtype="float32") /* ty=float32 */;
    %538 = reshape(%535, newshape=[70, 4]) /* ty=Tensor[(70, 4), float32] */;
    %539 = reshape(%536, newshape=[168]) /* ty=Tensor[(168), uint8] */;
    %540 = reshape(%537, newshape=[]) /* ty=float32 */;
    %541 = @func_3149(%538, %539, %540) /* ty=(Tensor[(14, 3, 15), float64], Tensor[(14, 3, 15), uint64], Tensor[(624), uint8], Tensor[(70, 4), float32], Tensor[(198, 2), float64], Tensor[(12, ?, 14), uint8], Tensor[(168), uint8], Tensor[(8, 7, 11), int64], float32, Tensor[(616), float32], Tensor[(525), bool], Tensor[(14, 3, 15), float32], Tensor[(525, 10), bool], Tensor[(5250), bool], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), int8], Tensor[(14, 3, 15), float32], Tensor[(15, 7, 5), bool], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32]) */;
    %542 = %516.5;
    %543 = divide(%526, %527) /* ty=Tensor[(15, 7, 5), float32] */;
    %544 = mod(%532, %533) /* ty=Tensor[(14, 3, 15), float32] */;
    %545 = @func_2045() /* ty=Tensor[(14, 3, 15), float32] */;
    %546 = %534.1;
    %547 = %541.2;
    (%542, meta[relay.Constant][29] /* ty=Tensor[(525), bool] */, %543, %544, %545, %546, %547, meta[relay.Constant][30] /* ty=Tensor[(280), float32] */, meta[relay.Constant][31] /* ty=Tensor[(168), uint8] */, %var_4770)
  };
  %548(%var_4776, %var_4777) /* ty=(Tensor[(624), uint8], Tensor[(525), bool], Tensor[(15, 7, 5), float32], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint32], Tensor[(624), uint8], Tensor[(280), float32], Tensor[(168), uint8], float32) */
}

def @func_8419() -> (Tensor[(14, 3, 15), uint32],) {
  @func_8417() /* ty=(Tensor[(14, 3, 15), uint32],) */
}

def @func_2047() -> Tensor[(14, 3, 15), float32] {
  @func_2045() /* ty=Tensor[(14, 3, 15), float32] */
}

def @func_7881() -> (Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float64]) {
  %552 = fn () -> (Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float64]) {
    %549 = @func_2198() /* ty=(Tensor[(14, 3, 15), float64],) */;
    %550 = @func_2016() /* ty=Tensor[(14, 3, 15), float32] */;
    %551 = %549.0;
    (%550, %551)
  };
  %552() /* ty=(Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float64]) */
}

def @func_5159() -> (Tensor[(14, 3, 15), float32],) {
  %555 = fn () -> (Tensor[(14, 3, 15), float32],) {
    %553 = @func_1084() /* ty=(Tensor[(14, 3, 15), float32],) */;
    %554 = %553.0;
    (%554,)
  };
  %555() /* ty=(Tensor[(14, 3, 15), float32],) */
}

def @func_6354(%var_6352: uint32) -> (Tensor[(14, 3, 15), float32], uint32, Tensor[(60), uint32], Tensor[(15, 4, 1), float64]) {
  @func_6351(%var_6352) /* ty=(Tensor[(14, 3, 15), float32], uint32, Tensor[(60), uint32], Tensor[(15, 4, 1), float64]) */
}

def @func_1404(%var_1382: Tensor[(300), bool]) -> (Tensor[(14, 3, 15), float32], Tensor[(12, 5, 5), bool], Tensor[(300), bool]) {
  %556 = @func_1084() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %557 = cast(%var_1382, dtype="bool") /* ty=Tensor[(300), bool] */;
  %558 = reshape(%557, newshape=[12, 5, 5]) /* ty=Tensor[(12, 5, 5), bool] */;
  %559 = @func_1152(%558) /* ty=(Tensor[(12, 5, 5), bool], Tensor[(15, 7, 5), bool], Tensor[(525, 1), bool]) */;
  %560 = %556.0;
  %561 = %559.0;
  (%560, %561, %var_1382)
}

def @func_4684() -> (Tensor[(14, 3, 15), float32],) {
  %562 = @func_1817() /* ty=Tensor[(14, 3, 15), float32] */;
  (%562,)
}

def @func_5779() -> (Tensor[(11, 12, 16), float32],) {
  @func_5777() /* ty=(Tensor[(11, 12, 16), float32],) */
}

def @func_6351(%var_6334: uint32) -> (Tensor[(14, 3, 15), float32], uint32, Tensor[(60), uint32], Tensor[(15, 4, 1), float64]) {
  %563 = @func_1084() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %564 = cast(%var_6334, dtype="uint32") /* ty=uint32 */;
  %565 = cast(meta[relay.Constant][32] /* ty=Tensor[(60), uint32] */, dtype="uint32") /* ty=Tensor[(60), uint32] */;
  %566 = reshape(%564, newshape=[]) /* ty=uint32 */;
  %567 = reshape(%565, newshape=[15, 4, 1]) /* ty=Tensor[(15, 4, 1), uint32] */;
  %568 = @func_5125(%566, %567) /* ty=(Tensor[(15, 4, 1), uint32],) */;
  %569 = %568.0;
  %570 = cast(%569, dtype="float64") /* ty=Tensor[(15, 4, 1), float64] */;
  %571 = %563.0;
  %572 = sin(%570) /* ty=Tensor[(15, 4, 1), float64] */;
  (%571, %var_6334, meta[relay.Constant][32] /* ty=Tensor[(60), uint32] */, %572)
}

def @func_2632(%var_2630: Tensor[(3, 4, 14), int16], %var_2631: Tensor[(300), bool]) -> (Tensor[(3, 4, 14), bool], Tensor[(6, 11, 6), float64], Tensor[(396), float64], Tensor[(300), bool]) {
  %584 = fn (%var_2614: Tensor[(3, 4, 14), int16], %var_2620: Tensor[(300), bool]) -> (Tensor[(3, 4, 14), bool], Tensor[(6, 11, 6), float64], Tensor[(396), float64], Tensor[(300), bool]) {
    %573 = cast(%var_2614, dtype="bool") /* ty=Tensor[(3, 4, 14), bool] */;
    %574 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(3, 4, 14), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %575 = cast(meta[relay.Constant][33] /* ty=Tensor[(3, 4, 14), int16] */, dtype="bool") /* ty=Tensor[(3, 4, 14), bool] */;
    %576 = dyn.reshape(%573, %574, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %577 = cast(meta[relay.Constant][34] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
    %578 = cast(%var_2620, dtype="bool") /* ty=Tensor[(300), bool] */;
    %579 = reshape(%577, newshape=[396]) /* ty=Tensor[(396), float64] */;
    %580 = reshape(%578, newshape=[300]) /* ty=Tensor[(300), bool] */;
    %581 = @func_1780(%579, %580) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(6, 11, 6), float64], Tensor[(396), float64], Tensor[(300), bool], Tensor[(300), bool]) */;
    %582 = equal(%575, %576) /* ty=Tensor[(3, 4, 14), bool] */;
    %583 = %581.1;
    (%582, %583, meta[relay.Constant][34] /* ty=Tensor[(396), float64] */, %var_2620)
  };
  %584(%var_2630, %var_2631) /* ty=(Tensor[(3, 4, 14), bool], Tensor[(6, 11, 6), float64], Tensor[(396), float64], Tensor[(300), bool]) */
}

def @func_1152(%var_1142: Tensor[(12, 5, 5), bool]) -> (Tensor[(12, 5, 5), bool], Tensor[(15, 7, 5), bool], Tensor[(525, 1), bool]) {
  %585 = cast(meta[relay.Constant][35] /* ty=Tensor[(12, 5, 5), bool] */, dtype="bool") /* ty=Tensor[(12, 5, 5), bool] */;
  %586 = shape_of(%var_1142, dtype="int32") /* ty=Tensor[(3), int32] */;
  %587 = cast(%var_1142, dtype="bool") /* ty=Tensor[(12, 5, 5), bool] */;
  %588 = dyn.reshape(%585, %586, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %589 = cast(meta[relay.Constant][36] /* ty=Tensor[(525, 1), bool] */, dtype="bool") /* ty=Tensor[(525, 1), bool] */;
  %590 = cast(meta[relay.Constant][36] /* ty=Tensor[(525, 1), bool] */, dtype="bool") /* ty=Tensor[(525, 1), bool] */;
  %591 = reshape(%589, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), bool] */;
  %592 = reshape(%590, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), bool] */;
  %593 = logical_or(%587, %588) /* ty=Tensor[(12, 5, 5), bool] */;
  %594 = @func_465(%591, %592) /* ty=Tensor[(15, 7, 5), bool] */;
  (%593, %594, meta[relay.Constant][36] /* ty=Tensor[(525, 1), bool] */)
}

def @func_2092(%var_2071: Tensor[(525, 10), bool]) -> (Tensor[(525, 10), bool], Tensor[(15, 7, 5), bool]) {
  %595 = @func_1611() /* ty=(Tensor[(14, 3, 15), float32], Tensor[(525, 1), bool], Tensor[(10, 30), bool]) */;
  %596 = %595.1;
  %597 = cast(%596, dtype="bool") /* ty=Tensor[(525, 1), bool] */;
  %598 = cast(%var_2071, dtype="bool") /* ty=Tensor[(525, 10), bool] */;
  %599 = cast(%596, dtype="bool") /* ty=Tensor[(525, 1), bool] */;
  %600 = cast(%596, dtype="bool") /* ty=Tensor[(525, 1), bool] */;
  %601 = reshape(%599, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), bool] */;
  %602 = reshape(%600, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), bool] */;
  %603 = less_equal(%597, %598) /* ty=Tensor[(525, 10), bool] */;
  %604 = @func_465(%601, %602) /* ty=Tensor[(15, 7, 5), bool] */;
  (%603, %604)
}

def @func_1528(%var_1527: Tensor[(14, 3, 15), float32]) -> (Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32]) {
  %614 = fn (%var_1502: Tensor[(14, 3, 15), float32]) -> (Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32]) {
    %605 = @func_1084() /* ty=(Tensor[(14, 3, 15), float32],) */;
    %606 = %605.0;
    %607 = cast(%var_1502, dtype="float32") /* ty=Tensor[(14, 3, 15), float32] */;
    %608 = shape_of(%606, dtype="int32") /* ty=Tensor[(3), int32] */;
    %609 = cast(%606, dtype="float32") /* ty=Tensor[(14, 3, 15), float32] */;
    %610 = dyn.reshape(%607, %608, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %611 = @func_1084() /* ty=(Tensor[(14, 3, 15), float32],) */;
    %612 = divide(%609, %610) /* ty=Tensor[(14, 3, 15), float32] */;
    %613 = %611.0;
    (%612, %613)
  };
  %614(%var_1527) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32]) */
}

def @func_4886() -> Tensor[(14, 3, 15), uint32] {
  %616 = fn () -> Tensor[(14, 3, 15), uint32] {
    %615 = @func_2459() /* ty=(Tensor[(14, 3, 15), uint32],) */;
    %615.0
  };
  %616() /* ty=Tensor[(14, 3, 15), uint32] */
}

def @func_3263(%var_3261: Tensor[(66, 6), float64]) -> (Tensor[(14, 3, 15), float32], Tensor[(6, 11, 6), float64], Tensor[(66, 6), float64], Tensor[(525, 1), float32], Tensor[(525, ?), float32]) {
  @func_3260(%var_3261) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(6, 11, 6), float64], Tensor[(66, 6), float64], Tensor[(525, 1), float32], Tensor[(525, ?), float32]) */
}

def @func_4298(%var_4275: Tensor[(35, 15), bool]) -> (Tensor[(14, 3, 15), float32], Tensor[(35, 15), bool], Tensor[(14, 3, 15), float32], Tensor[(15, 7, 5), float64]) {
  %617 = @func_1084() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %618 = cast(%var_4275, dtype="bool") /* ty=Tensor[(35, 15), bool] */;
  %619 = cast(%var_4275, dtype="bool") /* ty=Tensor[(35, 15), bool] */;
  %620 = reshape(%618, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), bool] */;
  %621 = reshape(%619, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), bool] */;
  %622 = @func_465(%620, %621) /* ty=Tensor[(15, 7, 5), bool] */;
  %623 = cast(%622, dtype="float32") /* ty=Tensor[(15, 7, 5), float32] */;
  %624 = tan(%623) /* ty=Tensor[(15, 7, 5), float32] */;
  %625 = cast(%624, dtype="float64") /* ty=Tensor[(15, 7, 5), float64] */;
  %626 = @func_2045() /* ty=Tensor[(14, 3, 15), float32] */;
  %627 = %617.0;
  %628 = sin(%625) /* ty=Tensor[(15, 7, 5), float64] */;
  (%626, %var_4275, %627, %628)
}

def @func_4859() -> (Tensor[(14, 3, 15), float32],) {
  %630 = fn () -> (Tensor[(14, 3, 15), float32],) {
    %629 = @func_2965() /* ty=Tensor[(14, 3, 15), float32] */;
    (%629,)
  };
  %630() /* ty=(Tensor[(14, 3, 15), float32],) */
}

def @func_5813(%var_5808: float64) -> Tensor[(2, 14, 6), float64] {
  %631 = cast(%var_5808, dtype="float64") /* ty=float64 */;
  %632 = cast(meta[relay.Constant][37] /* ty=Tensor[(2, 14, 6), float64] */, dtype="float64") /* ty=Tensor[(2, 14, 6), float64] */;
  power(%631, %632) /* ty=Tensor[(2, 14, 6), float64] */
}

def @func_5128(%var_5126: uint32, %var_5127: Tensor[(15, 4, 1), uint32]) -> (Tensor[(15, 4, 1), uint32],) {
  %636 = fn (%var_5090: uint32, %var_5091: Tensor[(15, 4, 1), uint32]) -> (Tensor[(15, 4, 1), uint32],) {
    %633 = cast(%var_5090, dtype="uint32") /* ty=uint32 */;
    %634 = cast(%var_5091, dtype="uint32") /* ty=Tensor[(15, 4, 1), uint32] */;
    %635 = subtract(%633, %634) /* ty=Tensor[(15, 4, 1), uint32] */;
    (%635,)
  };
  %636(%var_5126, %var_5127) /* ty=(Tensor[(15, 4, 1), uint32],) */
}

def @func_7312() -> (Tensor[(14, 3, 15), float32], Tensor[(11, 12, 16), float64]) {
  %645 = fn () -> (Tensor[(14, 3, 15), float32], Tensor[(11, 12, 16), float64]) {
    %637 = @func_5777() /* ty=(Tensor[(11, 12, 16), float32],) */;
    %638 = %637.0;
    %639 = cast(meta[relay.Constant][38] /* ty=Tensor[(11, 12, 16), float32] */, dtype="float64") /* ty=Tensor[(11, 12, 16), float64] */;
    %640 = shape_of(%638, dtype="int32") /* ty=Tensor[(3), int32] */;
    %641 = cast(%638, dtype="float64") /* ty=Tensor[(11, 12, 16), float64] */;
    %642 = dyn.reshape(%639, %640, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %643 = @func_2910() /* ty=Tensor[(14, 3, 15), float32] */;
    %644 = floor_mod(%641, %642) /* ty=Tensor[(11, 12, 16), float64] */;
    (%643, %644)
  };
  %645() /* ty=(Tensor[(14, 3, 15), float32], Tensor[(11, 12, 16), float64]) */
}

def @func_7792(%var_7778: Tensor[(6, 15, 10), int8], %var_7779: Tensor[(6, 15, 10), int8]) -> (Tensor[(6, 15, 10), int8],) {
  %646 = cast(%var_7779, dtype="int8") /* ty=Tensor[(6, 15, 10), int8] */;
  %647 = shape_of(%var_7778, dtype="int32") /* ty=Tensor[(3), int32] */;
  %648 = cast(%var_7778, dtype="int8") /* ty=Tensor[(6, 15, 10), int8] */;
  %649 = dyn.reshape(%646, %647, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %650 = multiply(%648, %649) /* ty=Tensor[(6, 15, 10), int8] */;
  (%650,)
}

def @func_8674() -> (Tensor[(14, 3, 15), uint32], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint32], Tensor[(280), float32], Tensor[(675, 2), float64], Tensor[(14, 3, 15), int8]) {
  @func_8672() /* ty=(Tensor[(14, 3, 15), uint32], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint32], Tensor[(280), float32], Tensor[(675, 2), float64], Tensor[(14, 3, 15), int8]) */
}

def @func_1135(%var_1134: Tensor[(14, 3, 15), float32]) -> (Tensor[(14, 3, 15), bool], Tensor[(14, 3, 15), bool], Tensor[(14, 3, 15), int64]) {
  %670 = fn (%var_1119: Tensor[(14, 3, 15), float32]) -> (Tensor[(14, 3, 15), bool], Tensor[(14, 3, 15), bool], Tensor[(14, 3, 15), int64]) {
    %651 = @func_1084() /* ty=(Tensor[(14, 3, 15), float32],) */;
    %652 = %651.0;
    %653 = cast(%652, dtype="float32") /* ty=Tensor[(14, 3, 15), float32] */;
    %654 = tan(%653) /* ty=Tensor[(14, 3, 15), float32] */;
    %655 = cast(%652, dtype="bool") /* ty=Tensor[(14, 3, 15), bool] */;
    %656 = shape_of(%654, dtype="int32") /* ty=Tensor[(3), int32] */;
    %657 = cast(%654, dtype="bool") /* ty=Tensor[(14, 3, 15), bool] */;
    %658 = dyn.reshape(%655, %656, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %659 = cast(%var_1119, dtype="bool") /* ty=Tensor[(14, 3, 15), bool] */;
    %660 = shape_of(%654, dtype="int32") /* ty=Tensor[(3), int32] */;
    %661 = cast(%654, dtype="bool") /* ty=Tensor[(14, 3, 15), bool] */;
    %662 = dyn.reshape(%659, %660, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %663 = cast(meta[relay.Constant][39] /* ty=Tensor[(14, 3, 15), float32] */, dtype="int64") /* ty=Tensor[(14, 3, 15), int64] */;
    %664 = shape_of(%var_1119, dtype="int32") /* ty=Tensor[(3), int32] */;
    %665 = cast(%var_1119, dtype="int64") /* ty=Tensor[(14, 3, 15), int64] */;
    %666 = dyn.reshape(%663, %664, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %667 = not_equal(%657, %658) /* ty=Tensor[(14, 3, 15), bool] */;
    %668 = logical_and(%661, %662) /* ty=Tensor[(14, 3, 15), bool] */;
    %669 = bitwise_xor(%665, %666) /* ty=Tensor[(14, 3, 15), int64] */;
    (%667, %668, %669)
  };
  %670(%var_1134) /* ty=(Tensor[(14, 3, 15), bool], Tensor[(14, 3, 15), bool], Tensor[(14, 3, 15), int64]) */
}

def @func_2198() -> (Tensor[(14, 3, 15), float64],) {
  %671 = @func_2016() /* ty=Tensor[(14, 3, 15), float32] */;
  %672 = cast(meta[relay.Constant][40] /* ty=Tensor[(14, 3, 15), float32] */, dtype="float64") /* ty=Tensor[(14, 3, 15), float64] */;
  %673 = shape_of(%671, dtype="int32") /* ty=Tensor[(3), int32] */;
  %674 = cast(%671, dtype="float64") /* ty=Tensor[(14, 3, 15), float64] */;
  %675 = dyn.reshape(%672, %673, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %676 = floor_divide(%674, %675) /* ty=Tensor[(14, 3, 15), float64] */;
  (%676,)
}

def @func_2995() -> (Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint32]) {
  @func_2993() /* ty=(Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint32]) */
}

def @func_5746() -> (Tensor[(14, 3, 15), float32],) {
  @func_5744() /* ty=(Tensor[(14, 3, 15), float32],) */
}

def @func_298(%var_296: Tensor[(12, 1, 14), uint8]) -> (Tensor[(12, ?, 14), uint8],) {
  @func_295(%var_296) /* ty=(Tensor[(12, ?, 14), uint8],) */
}

def @func_5798(%var_5796: Tensor[(1, 280), float32], %var_5797: Tensor[(168), uint8]) -> (Tensor[(11, 12, 16), float32], Tensor[(12, ?, 14), uint8], Tensor[(1, 280), float32], Tensor[(168), uint8], float32) {
  %686 = fn (%var_5788: Tensor[(1, 280), float32], %var_5789: Tensor[(168), uint8]) -> (Tensor[(11, 12, 16), float32], Tensor[(12, ?, 14), uint8], Tensor[(1, 280), float32], Tensor[(168), uint8], float32) {
    %677 = cast(%var_5788, dtype="float32") /* ty=Tensor[(1, 280), float32] */;
    %678 = cast(%var_5789, dtype="uint8") /* ty=Tensor[(168), uint8] */;
    %679 = cast(-5.34046f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %680 = reshape(%677, newshape=[70, 4]) /* ty=Tensor[(70, 4), float32] */;
    %681 = reshape(%678, newshape=[168]) /* ty=Tensor[(168), uint8] */;
    %682 = reshape(%679, newshape=[]) /* ty=float32 */;
    %683 = @func_3149(%680, %681, %682) /* ty=(Tensor[(14, 3, 15), float64], Tensor[(14, 3, 15), uint64], Tensor[(624), uint8], Tensor[(70, 4), float32], Tensor[(198, 2), float64], Tensor[(12, ?, 14), uint8], Tensor[(168), uint8], Tensor[(8, 7, 11), int64], float32, Tensor[(616), float32], Tensor[(525), bool], Tensor[(14, 3, 15), float32], Tensor[(525, 10), bool], Tensor[(5250), bool], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), int8], Tensor[(14, 3, 15), float32], Tensor[(15, 7, 5), bool], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32]) */;
    %684 = @func_3440() /* ty=Tensor[(11, 12, 16), float32] */;
    %685 = %683.5;
    (%684, %685, %var_5788, %var_5789, -5.34046f /* ty=float32 */)
  };
  %686(%var_5796, %var_5797) /* ty=(Tensor[(11, 12, 16), float32], Tensor[(12, ?, 14), uint8], Tensor[(1, 280), float32], Tensor[(168), uint8], float32) */
}

def @func_7679() -> (Tensor[(14, 3, 15), uint32], Tensor[(14, 3, 15), float32]) {
  %690 = fn () -> (Tensor[(14, 3, 15), uint32], Tensor[(14, 3, 15), float32]) {
    %687 = @func_2993() /* ty=(Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint32]) */;
    %688 = %687.1;
    %689 = @func_2894() /* ty=Tensor[(14, 3, 15), float32] */;
    (%688, %689)
  };
  %690() /* ty=(Tensor[(14, 3, 15), uint32], Tensor[(14, 3, 15), float32]) */
}

def @func_8417() -> (Tensor[(14, 3, 15), uint32],) {
  %691 = @func_2351() /* ty=(Tensor[(14, 3, 15), uint32],) */;
  %692 = %691.0;
  (%692,)
}

def @func_1465(%var_1464: Tensor[(6, 11, 6), float64]) -> Tensor[(6, 11, 6), float64] {
  %694 = fn (%var_1453: Tensor[(6, 11, 6), float64]) -> Tensor[(6, 11, 6), float64] {
    %693 = cast(%var_1453, dtype="float64") /* ty=Tensor[(6, 11, 6), float64] */;
    log10(%693) /* ty=Tensor[(6, 11, 6), float64] */
  };
  %694(%var_1464) /* ty=Tensor[(6, 11, 6), float64] */
}

def @func_3172() -> Tensor[(14, 3, 15), float32] {
  %695 = @func_1040() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %695.0
}

def @func_1893(%var_1890: Tensor[(1, 2, 5), float32], %var_1891: Tensor[(280), float32], %var_1892: Tensor[(525), bool]) -> (Tensor[(1, 2, 5), float32], Tensor[(2, 10, 14), float64], Tensor[(280), float32], Tensor[(15, 7, 5), bool], Tensor[(525), bool]) {
  @func_1888(%var_1890, %var_1891, %var_1892) /* ty=(Tensor[(1, 2, 5), float32], Tensor[(2, 10, 14), float64], Tensor[(280), float32], Tensor[(15, 7, 5), bool], Tensor[(525), bool]) */
}

def @func_3420(%var_3419: Tensor[(11, 12, 16), float32]) -> (Tensor[(14, 3, 15), float32], Tensor[(11, 12, 16), float64], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float64]) {
  %712 = fn (%var_3368: Tensor[(11, 12, 16), float32]) -> (Tensor[(14, 3, 15), float32], Tensor[(11, 12, 16), float64], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float64]) {
    %696 = @func_3198() /* ty=Tensor[(11, 12, 16), float32] */;
    %697 = cast(%var_3368, dtype="float32") /* ty=Tensor[(11, 12, 16), float32] */;
    %698 = shape_of(%696, dtype="int32") /* ty=Tensor[(3), int32] */;
    %699 = cast(%696, dtype="float32") /* ty=Tensor[(11, 12, 16), float32] */;
    %700 = dyn.reshape(%697, %698, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %701 = divide(%699, %700) /* ty=Tensor[(11, 12, 16), float32] */;
    %702 = cast(%701, dtype="float64") /* ty=Tensor[(11, 12, 16), float64] */;
    %703 = @func_1611() /* ty=(Tensor[(14, 3, 15), float32], Tensor[(525, 1), bool], Tensor[(10, 30), bool]) */;
    %704 = @func_1040() /* ty=(Tensor[(14, 3, 15), float32],) */;
    %705 = @func_2198() /* ty=(Tensor[(14, 3, 15), float64],) */;
    %706 = @func_2910() /* ty=Tensor[(14, 3, 15), float32] */;
    %707 = sigmoid(%702) /* ty=Tensor[(11, 12, 16), float64] */;
    %708 = %703.0;
    %709 = %704.0;
    %710 = @func_2910() /* ty=Tensor[(14, 3, 15), float32] */;
    %711 = %705.0;
    (%706, %707, %708, %709, %710, %711)
  };
  %712(%var_3419) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(11, 12, 16), float64], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float64]) */
}

def @func_7796(%var_7794: Tensor[(6, 15, 10), int8], %var_7795: Tensor[(6, 15, 10), int8]) -> (Tensor[(6, 15, 10), int8],) {
  @func_7792(%var_7794, %var_7795) /* ty=(Tensor[(6, 15, 10), int8],) */
}

def @func_1040() -> (Tensor[(14, 3, 15), float32],) {
  %713 = cast(meta[relay.Constant][41] /* ty=Tensor[(14, 3, 15), float32] */, dtype="float32") /* ty=Tensor[(14, 3, 15), float32] */;
  %714 = asin(%713) /* ty=Tensor[(14, 3, 15), float32] */;
  (%714,)
}

def @func_1237(%var_1235: Tensor[(168, 1), uint8]) -> (Tensor[(14, 3, 15), float32], Tensor[(12, ?, 14), uint8], Tensor[(168, 1), float64]) {
  @func_1234(%var_1235) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(12, ?, 14), uint8], Tensor[(168, 1), float64]) */
}

def @func_5744() -> (Tensor[(14, 3, 15), float32],) {
  %715 = @func_2965() /* ty=Tensor[(14, 3, 15), float32] */;
  (%715,)
}

def @func_3958() -> Tensor[(14, 3, 15), float32] {
  @func_3172() /* ty=Tensor[(14, 3, 15), float32] */
}

def @func_7493(%var_7492: Tensor[(280), float32]) -> (Tensor[(14, 3, 15), uint32], Tensor[(14, 3, 15), int8], Tensor[(14, 3, 15), float64], Tensor[(4, 13, 14), float32], Tensor[(728), float32], Tensor[(12, ?, 14), uint8], Tensor[(280), float32], Tensor[(168), uint8], float32) {
  %735 = fn (%var_7487: Tensor[(280), float32]) -> (Tensor[(14, 3, 15), uint32], Tensor[(14, 3, 15), int8], Tensor[(14, 3, 15), float64], Tensor[(4, 13, 14), float32], Tensor[(728), float32], Tensor[(12, ?, 14), uint8], Tensor[(280), float32], Tensor[(168), uint8], float32) {
    %716 = @func_2034() /* ty=Tensor[(14, 3, 15), uint32] */;
    %717 = cast(%716, dtype="float64") /* ty=Tensor[(14, 3, 15), float64] */;
    %718 = reshape(%717, newshape=[630]) /* ty=Tensor[(630), float64] */;
    %719 = @func_7431(%718) /* ty=(Tensor[(11, 12, 16), int64], Tensor[(14, 3, 15), int8], Tensor[(630), float64]) */;
    %720 = @func_4129() /* ty=(Tensor[(14, 3, 15), float64],) */;
    %721 = cast(meta[relay.Constant][42] /* ty=Tensor[(728), float32] */, dtype="float32") /* ty=Tensor[(728), float32] */;
    %722 = reshape(%721, newshape=[728]) /* ty=Tensor[(728), float32] */;
    %723 = @func_7228(%722) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(6, 11, 6), float64], Tensor[(396), float64], Tensor[(4, 13, 14), float32], Tensor[(728), float32], Tensor[(12, ?, 14), uint8], Tensor[(168), uint8], Tensor[(12, ?, 14), uint8]) */;
    %724 = cast(%var_7487, dtype="float32") /* ty=Tensor[(280), float32] */;
    %725 = cast(meta[relay.Constant][43] /* ty=Tensor[(168), uint8] */, dtype="uint8") /* ty=Tensor[(168), uint8] */;
    %726 = cast(9.22703f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %727 = reshape(%724, newshape=[70, 4]) /* ty=Tensor[(70, 4), float32] */;
    %728 = reshape(%725, newshape=[168]) /* ty=Tensor[(168), uint8] */;
    %729 = reshape(%726, newshape=[]) /* ty=float32 */;
    %730 = @func_3149(%727, %728, %729) /* ty=(Tensor[(14, 3, 15), float64], Tensor[(14, 3, 15), uint64], Tensor[(624), uint8], Tensor[(70, 4), float32], Tensor[(198, 2), float64], Tensor[(12, ?, 14), uint8], Tensor[(168), uint8], Tensor[(8, 7, 11), int64], float32, Tensor[(616), float32], Tensor[(525), bool], Tensor[(14, 3, 15), float32], Tensor[(525, 10), bool], Tensor[(5250), bool], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), int8], Tensor[(14, 3, 15), float32], Tensor[(15, 7, 5), bool], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32]) */;
    %731 = %719.1;
    %732 = %720.0;
    %733 = %723.3;
    %734 = %730.5;
    (%716, %731, %732, %733, meta[relay.Constant][42] /* ty=Tensor[(728), float32] */, %734, %var_7487, meta[relay.Constant][43] /* ty=Tensor[(168), uint8] */, 9.22703f /* ty=float32 */)
  };
  %735(%var_7492) /* ty=(Tensor[(14, 3, 15), uint32], Tensor[(14, 3, 15), int8], Tensor[(14, 3, 15), float64], Tensor[(4, 13, 14), float32], Tensor[(728), float32], Tensor[(12, ?, 14), uint8], Tensor[(280), float32], Tensor[(168), uint8], float32) */
}

def @func_2461() -> (Tensor[(14, 3, 15), uint32],) {
  @func_2459() /* ty=(Tensor[(14, 3, 15), uint32],) */
}

def @func_5569() -> Tensor[(14, 3, 15), float32] {
  %736 = @func_5158() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %736.0
}

def @func_5816(%var_5814: float64) -> Tensor[(2, 14, 6), float64] {
  @func_5813(%var_5814) /* ty=Tensor[(2, 14, 6), float64] */
}

def @func_3960() -> Tensor[(14, 3, 15), float32] {
  @func_3958() /* ty=Tensor[(14, 3, 15), float32] */
}

def @func_1888(%var_1874: Tensor[(1, 2, 5), float32], %var_1880: Tensor[(280), float32], %var_1884: Tensor[(525), bool]) -> (Tensor[(1, 2, 5), float32], Tensor[(2, 10, 14), float64], Tensor[(280), float32], Tensor[(15, 7, 5), bool], Tensor[(525), bool]) {
  %737 = cast(%var_1874, dtype="float32") /* ty=Tensor[(1, 2, 5), float32] */;
  %738 = cast(%var_1880, dtype="float32") /* ty=Tensor[(280), float32] */;
  %739 = reshape(%738, newshape=[2, 10, 14]) /* ty=Tensor[(2, 10, 14), float32] */;
  %740 = @func_1056(%739) /* ty=(Tensor[(2, 10, 14), float32], Tensor[(2, 10, 14), float64]) */;
  %741 = cast(%var_1884, dtype="bool") /* ty=Tensor[(525), bool] */;
  %742 = cast(%var_1884, dtype="bool") /* ty=Tensor[(525), bool] */;
  %743 = reshape(%741, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), bool] */;
  %744 = reshape(%742, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), bool] */;
  %745 = atan(%737) /* ty=Tensor[(1, 2, 5), float32] */;
  %746 = %740.1;
  %747 = @func_465(%743, %744) /* ty=Tensor[(15, 7, 5), bool] */;
  (%745, %746, %var_1880, %747, %var_1884)
}

def @func_7536() -> (Tensor[(14, 3, 15), float32],) {
  @func_7534() /* ty=(Tensor[(14, 3, 15), float32],) */
}

def @func_3200() -> Tensor[(11, 12, 16), float32] {
  @func_3198() /* ty=Tensor[(11, 12, 16), float32] */
}

def @func_7610() -> (Tensor[(525, 1), float32], Tensor[(14, 3, 15), float32], Tensor[(15, 7, 5), bool]) {
  %758 = fn () -> (Tensor[(525, 1), float32], Tensor[(14, 3, 15), float32], Tensor[(15, 7, 5), bool]) {
    %748 = @func_4118() /* ty=Tensor[(525, 1), bool] */;
    %749 = cast(%748, dtype="float32") /* ty=Tensor[(525, 1), float32] */;
    %750 = @func_7534() /* ty=(Tensor[(14, 3, 15), float32],) */;
    %751 = atan(%749) /* ty=Tensor[(525, 1), float32] */;
    %752 = cast(%751, dtype="bool") /* ty=Tensor[(525, 1), bool] */;
    %753 = cast(%751, dtype="bool") /* ty=Tensor[(525, 1), bool] */;
    %754 = reshape(%752, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), bool] */;
    %755 = reshape(%753, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), bool] */;
    %756 = %750.0;
    %757 = @func_465(%754, %755) /* ty=Tensor[(15, 7, 5), bool] */;
    (%751, %756, %757)
  };
  %758() /* ty=(Tensor[(525, 1), float32], Tensor[(14, 3, 15), float32], Tensor[(15, 7, 5), bool]) */
}

def @func_7433(%var_7432: Tensor[(630), float64]) -> (Tensor[(11, 12, 16), int64], Tensor[(14, 3, 15), int8], Tensor[(630), float64]) {
  %771 = fn (%var_7414: Tensor[(630), float64]) -> (Tensor[(11, 12, 16), int64], Tensor[(14, 3, 15), int8], Tensor[(630), float64]) {
    %759 = @func_3198() /* ty=Tensor[(11, 12, 16), float32] */;
    %760 = cast(%759, dtype="float32") /* ty=Tensor[(11, 12, 16), float32] */;
    %761 = acos(%760) /* ty=Tensor[(11, 12, 16), float32] */;
    %762 = cast(%759, dtype="int64") /* ty=Tensor[(11, 12, 16), int64] */;
    %763 = shape_of(%761, dtype="int32") /* ty=Tensor[(3), int32] */;
    %764 = cast(%761, dtype="int64") /* ty=Tensor[(11, 12, 16), int64] */;
    %765 = dyn.reshape(%762, %763, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %766 = cast(%var_7414, dtype="float64") /* ty=Tensor[(630), float64] */;
    %767 = reshape(%766, newshape=[14, 3, 15]) /* ty=Tensor[(14, 3, 15), float64] */;
    %768 = @func_2326(%767) /* ty=(Tensor[(14, 3, 15), int8],) */;
    %769 = right_shift(%764, %765) /* ty=Tensor[(11, 12, 16), int64] */;
    %770 = %768.0;
    (%769, %770, %var_7414)
  };
  %771(%var_7432) /* ty=(Tensor[(11, 12, 16), int64], Tensor[(14, 3, 15), int8], Tensor[(630), float64]) */
}

def @func_5777() -> (Tensor[(11, 12, 16), float32],) {
  %772 = @func_3440() /* ty=Tensor[(11, 12, 16), float32] */;
  %773 = cast(%772, dtype="float32") /* ty=Tensor[(11, 12, 16), float32] */;
  %774 = cosh(%773) /* ty=Tensor[(11, 12, 16), float32] */;
  (%774,)
}

def @func_8343(%var_8341: Tensor[(198, 2), float64], %var_8342: Tensor[(280), float32]) -> (Tensor[(14, 3, 15), float32], Tensor[(396), float64], Tensor[(198, 2), float64], Tensor[(280), float32]) {
  %782 = fn (%var_8321: Tensor[(198, 2), float64], %var_8322: Tensor[(280), float32]) -> (Tensor[(14, 3, 15), float32], Tensor[(396), float64], Tensor[(198, 2), float64], Tensor[(280), float32]) {
    %775 = cast(%var_8321, dtype="float64") /* ty=Tensor[(198, 2), float64] */;
    %776 = cast(%var_8322, dtype="float32") /* ty=Tensor[(280), float32] */;
    %777 = reshape(%775, newshape=[396]) /* ty=Tensor[(396), float64] */;
    %778 = reshape(%776, newshape=[280]) /* ty=Tensor[(280), float32] */;
    %779 = @func_5407(%777, %778) /* ty=(Tensor[(14, 3, 15), uint32], Tensor[(396), float64], Tensor[(396), float64], Tensor[(280), float32], Tensor[(624), uint8], Tensor[(280), float32]) */;
    %780 = @func_5569() /* ty=Tensor[(14, 3, 15), float32] */;
    %781 = %779.2;
    (%780, %781, %var_8321, %var_8322)
  };
  %782(%var_8341, %var_8342) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(396), float64], Tensor[(198, 2), float64], Tensor[(280), float32]) */
}

def @func_2408(%var_2406: Tensor[(280), float32]) -> (Tensor[(14, 3, 15), uint64], Tensor[(2, 10, 14), float32], Tensor[(280), float32]) {
  @func_2405(%var_2406) /* ty=(Tensor[(14, 3, 15), uint64], Tensor[(2, 10, 14), float32], Tensor[(280), float32]) */
}

def @func_4961() -> (Tensor[(14, 3, 15), uint64], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32], Tensor[(9, 10, 16), float32], Tensor[(720, 2), float64]) {
  @func_4959() /* ty=(Tensor[(14, 3, 15), uint64], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32], Tensor[(9, 10, 16), float32], Tensor[(720, 2), float64]) */
}

def @func_1612() -> (Tensor[(14, 3, 15), float32], Tensor[(525, 1), bool], Tensor[(10, 30), bool]) {
  %789 = fn () -> (Tensor[(14, 3, 15), float32], Tensor[(525, 1), bool], Tensor[(10, 30), bool]) {
    %783 = @func_1430() /* ty=(Tensor[(14, 3, 15), float32],) */;
    %784 = cast(meta[relay.Constant][44] /* ty=Tensor[(10, 30), bool] */, dtype="bool") /* ty=Tensor[(10, 30), bool] */;
    %785 = reshape(%784, newshape=[12, 5, 5]) /* ty=Tensor[(12, 5, 5), bool] */;
    %786 = @func_1152(%785) /* ty=(Tensor[(12, 5, 5), bool], Tensor[(15, 7, 5), bool], Tensor[(525, 1), bool]) */;
    %787 = %783.0;
    %788 = %786.2;
    (%787, %788, meta[relay.Constant][44] /* ty=Tensor[(10, 30), bool] */)
  };
  %789() /* ty=(Tensor[(14, 3, 15), float32], Tensor[(525, 1), bool], Tensor[(10, 30), bool]) */
}

def @func_8358() -> Tensor[(14, 3, 15), float32] {
  %790 = @func_7823() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %790.0
}

def @func_1637(%var_1623: Tensor[(525), bool], %var_1627: Tensor[(66, 6), float64]) -> (Tensor[(14, 3, 15), float32], Tensor[(15, 7, 5), bool], Tensor[(525), bool], Tensor[(6, 11, 6), float64], Tensor[(66, 6), float64]) {
  %791 = @func_1040() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %792 = cast(%var_1623, dtype="bool") /* ty=Tensor[(525), bool] */;
  %793 = cast(%var_1623, dtype="bool") /* ty=Tensor[(525), bool] */;
  %794 = reshape(%792, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), bool] */;
  %795 = reshape(%793, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), bool] */;
  %796 = cast(%var_1627, dtype="float64") /* ty=Tensor[(66, 6), float64] */;
  %797 = reshape(%796, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), float64] */;
  %798 = %791.0;
  %799 = @func_465(%794, %795) /* ty=Tensor[(15, 7, 5), bool] */;
  %800 = @func_1463(%797) /* ty=Tensor[(6, 11, 6), float64] */;
  (%798, %799, %var_1623, %800, %var_1627)
}

def @func_7366() -> Tensor[(14, 3, 15), float32] {
  %802 = fn () -> Tensor[(14, 3, 15), float32] {
    %801 = @func_7311() /* ty=(Tensor[(14, 3, 15), float32], Tensor[(11, 12, 16), float64]) */;
    %801.0
  };
  %802() /* ty=Tensor[(14, 3, 15), float32] */
}

def @func_5411(%var_5409: Tensor[(396), float64], %var_5410: Tensor[(280), float32]) -> (Tensor[(14, 3, 15), uint32], Tensor[(396), float64], Tensor[(396), float64], Tensor[(280), float32], Tensor[(624), uint8], Tensor[(280), float32]) {
  @func_5407(%var_5409, %var_5410) /* ty=(Tensor[(14, 3, 15), uint32], Tensor[(396), float64], Tensor[(396), float64], Tensor[(280), float32], Tensor[(624), uint8], Tensor[(280), float32]) */
}

def @func_6785() -> (Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint32]) {
  @func_6783() /* ty=(Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint32]) */
}

def @func_3922() -> (Tensor[(14, 3, 15), uint32],) {
  @func_3920() /* ty=(Tensor[(14, 3, 15), uint32],) */
}

def @func_1941(%var_1940: Tensor[(525), bool]) -> (Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32], Tensor[(396), float64], Tensor[(15, 7, 5), bool], Tensor[(525), bool]) {
  %814 = fn (%var_1920: Tensor[(525), bool]) -> (Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32], Tensor[(396), float64], Tensor[(15, 7, 5), bool], Tensor[(525), bool]) {
    %803 = @func_1084() /* ty=(Tensor[(14, 3, 15), float32],) */;
    %804 = cast(meta[relay.Constant][45] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
    %805 = reshape(%804, newshape=[396]) /* ty=Tensor[(396), float64] */;
    %806 = @func_1846(%805) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(6, 11, 6), float64], Tensor[(396), float64]) */;
    %807 = cast(%var_1920, dtype="bool") /* ty=Tensor[(525), bool] */;
    %808 = cast(%var_1920, dtype="bool") /* ty=Tensor[(525), bool] */;
    %809 = reshape(%807, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), bool] */;
    %810 = reshape(%808, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), bool] */;
    %811 = %803.0;
    %812 = %806.0;
    %813 = @func_465(%809, %810) /* ty=Tensor[(15, 7, 5), bool] */;
    (%811, %812, meta[relay.Constant][45] /* ty=Tensor[(396), float64] */, %813, %var_1920)
  };
  %814(%var_1940) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32], Tensor[(396), float64], Tensor[(15, 7, 5), bool], Tensor[(525), bool]) */
}

def @func_8075(%var_8050: Tensor[(18, 50), int8], %var_8054: Tensor[(1, 728), float32], %var_8057: Tensor[(280), float32], %var_8058: Tensor[(525), bool], %var_8059: Tensor[(60), float32]) -> (Tensor[(14, 3, 15), float32], Tensor[(6, 15, 10), int8], Tensor[(18, 50), int8], Tensor[(4, 13, 14), bool], Tensor[(1, 728), float32], Tensor[(14, 3, 15), float32], Tensor[(280), float32], Tensor[(525), bool], Tensor[(60), float32], Tensor[(11, 12, 16), float32]) {
  %815 = @func_1430() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %816 = cast(%var_8050, dtype="int8") /* ty=Tensor[(18, 50), int8] */;
  %817 = cast(%var_8050, dtype="int8") /* ty=Tensor[(18, 50), int8] */;
  %818 = reshape(%816, newshape=[6, 15, 10]) /* ty=Tensor[(6, 15, 10), int8] */;
  %819 = reshape(%817, newshape=[6, 15, 10]) /* ty=Tensor[(6, 15, 10), int8] */;
  %820 = @func_7792(%818, %819) /* ty=(Tensor[(6, 15, 10), int8],) */;
  %821 = cast(%var_8054, dtype="float32") /* ty=Tensor[(1, 728), float32] */;
  %822 = reshape(%821, newshape=[4, 13, 14]) /* ty=Tensor[(4, 13, 14), float32] */;
  %823 = @func_6509(%822) /* ty=(Tensor[(11, 12, 16), float32], Tensor[(4, 13, 14), float32], Tensor[(4, 13, 14), bool]) */;
  %824 = cast(%var_8057, dtype="float32") /* ty=Tensor[(280), float32] */;
  %825 = cast(%var_8058, dtype="bool") /* ty=Tensor[(525), bool] */;
  %826 = cast(%var_8059, dtype="float32") /* ty=Tensor[(60), float32] */;
  %827 = reshape(%824, newshape=[140, 2]) /* ty=Tensor[(140, 2), float32] */;
  %828 = reshape(%825, newshape=[525]) /* ty=Tensor[(525), bool] */;
  %829 = reshape(%826, newshape=[60]) /* ty=Tensor[(60), float32] */;
  %830 = @func_7743(%827, %828, %829) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(15, 7, 5), bool], Tensor[(10), float32], Tensor[(140, 2), float32], Tensor[(525), bool], Tensor[(14, 3, 15), float32], Tensor[(2, 6, 5), float32], Tensor[(60), float32]) */;
  %831 = @func_5777() /* ty=(Tensor[(11, 12, 16), float32],) */;
  %832 = %815.0;
  %833 = %820.0;
  %834 = %823.2;
  %835 = %830.0;
  %836 = %831.0;
  (%832, %833, %var_8050, %834, %var_8054, %835, %var_8057, %var_8058, %var_8059, %836)
}

def @func_8131() -> Tensor[(15, 7, 5), bool] {
  @func_8129() /* ty=Tensor[(15, 7, 5), bool] */
}

def @func_5509() -> (Tensor[(14, 3, 15), uint32],) {
  @func_5507() /* ty=(Tensor[(14, 3, 15), uint32],) */
}

def @func_6084() -> (Tensor[(14, 3, 15), uint32], Tensor[(396), int32], Tensor[(66, 6), float32]) {
  %853 = fn () -> (Tensor[(14, 3, 15), uint32], Tensor[(396), int32], Tensor[(66, 6), float32]) {
    %837 = @func_3920() /* ty=(Tensor[(14, 3, 15), uint32],) */;
    %838 = cast(meta[relay.Constant][46] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
    %839 = reshape(%838, newshape=[66, 6]) /* ty=Tensor[(66, 6), float64] */;
    %840 = @func_3260(%839) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(6, 11, 6), float64], Tensor[(66, 6), float64], Tensor[(525, 1), float32], Tensor[(525, ?), float32]) */;
    %841 = %840.2;
    %842 = cast(%841, dtype="int32") /* ty=Tensor[(66, 6), int32] */;
    %843 = shape_of(meta[relay.Constant][46] /* ty=Tensor[(396), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %844 = cast(meta[relay.Constant][46] /* ty=Tensor[(396), float64] */, dtype="int32") /* ty=Tensor[(396), int32] */;
    %845 = dyn.reshape(%842, %843, newshape=[]) /* ty=Tensor[(?), int32] */;
    %846 = cast(meta[relay.Constant][47] /* ty=Tensor[(66, 6), float64] */, dtype="float32") /* ty=Tensor[(66, 6), float32] */;
    %847 = shape_of(%841, dtype="int32") /* ty=Tensor[(2), int32] */;
    %848 = cast(%841, dtype="float32") /* ty=Tensor[(66, 6), float32] */;
    %849 = dyn.reshape(%846, %847, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %850 = %837.0;
    %851 = maximum(%844, %845) /* ty=Tensor[(396), int32] */;
    %852 = floor_mod(%848, %849) /* ty=Tensor[(66, 6), float32] */;
    (%850, %851, %852)
  };
  %853() /* ty=(Tensor[(14, 3, 15), uint32], Tensor[(396), int32], Tensor[(66, 6), float32]) */
}

def @func_7466() -> Tensor[(14, 3, 15), uint32] {
  %854 = @func_2351() /* ty=(Tensor[(14, 3, 15), uint32],) */;
  %854.0
}

def @func_1234(%var_1197: Tensor[(168, 1), uint8]) -> (Tensor[(14, 3, 15), float32], Tensor[(12, ?, 14), uint8], Tensor[(168, 1), float64]) {
  %855 = @func_1040() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %856 = cast(%var_1197, dtype="uint8") /* ty=Tensor[(168, 1), uint8] */;
  %857 = reshape(%856, newshape=[12, 1, 14]) /* ty=Tensor[(12, 1, 14), uint8] */;
  %858 = @func_295(%857) /* ty=(Tensor[(12, ?, 14), uint8],) */;
  %859 = cast(%var_1197, dtype="float32") /* ty=Tensor[(168, 1), float32] */;
  %860 = acos(%859) /* ty=Tensor[(168, 1), float32] */;
  %861 = cast(%860, dtype="float64") /* ty=Tensor[(168, 1), float64] */;
  %862 = %855.0;
  %863 = %858.0;
  %864 = atan(%861) /* ty=Tensor[(168, 1), float64] */;
  (%862, %863, %864)
}

def @func_6551() -> Tensor[(14, 3, 15), uint32] {
  @func_6549() /* ty=Tensor[(14, 3, 15), uint32] */
}

def @func_5571() -> Tensor[(14, 3, 15), float32] {
  @func_5569() /* ty=Tensor[(14, 3, 15), float32] */
}

def @func_3812(%var_3811: Tensor[(14, 3, 15), float64]) -> (Tensor[(14, 3, 15), int16], Tensor[(14, 3, 15), float32]) {
  %873 = fn (%var_3793: Tensor[(14, 3, 15), float64]) -> (Tensor[(14, 3, 15), int16], Tensor[(14, 3, 15), float32]) {
    %865 = @func_3545() /* ty=(Tensor[(14, 3, 15), float64], Tensor[(12, ?, 14), uint8], Tensor[(168), uint8], Tensor[(15, 15, 12), float64], Tensor[(2700), float64]) */;
    %866 = %865.0;
    %867 = cast(%var_3793, dtype="int16") /* ty=Tensor[(14, 3, 15), int16] */;
    %868 = shape_of(%866, dtype="int32") /* ty=Tensor[(3), int32] */;
    %869 = cast(%866, dtype="int16") /* ty=Tensor[(14, 3, 15), int16] */;
    %870 = dyn.reshape(%867, %868, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %871 = maximum(%869, %870) /* ty=Tensor[(14, 3, 15), int16] */;
    %872 = @func_2894() /* ty=Tensor[(14, 3, 15), float32] */;
    (%871, %872)
  };
  %873(%var_3811) /* ty=(Tensor[(14, 3, 15), int16], Tensor[(14, 3, 15), float32]) */
}

def @func_2095(%var_2093: Tensor[(525, 10), bool]) -> (Tensor[(525, 10), bool], Tensor[(15, 7, 5), bool]) {
  @func_2092(%var_2093) /* ty=(Tensor[(525, 10), bool], Tensor[(15, 7, 5), bool]) */
}

def @func_2593(%var_2589: Tensor[(13, 16, 3), uint8], %var_2590: Tensor[(13, 16, 3), uint8], %var_2591: Tensor[(280), float32], %var_2592: Tensor[(396, 1), float64]) -> (Tensor[(13, 16, 3), uint8], Tensor[(280), float32], Tensor[(280), float32], Tensor[(14, 3, 15), float32], Tensor[(396), float64], Tensor[(14, 3, 15), float32], Tensor[(2, 10, 14), float64], Tensor[(5, 2), float32], Tensor[(525), bool], Tensor[(396, 1), float32], Tensor[(300), bool], Tensor[(300), bool], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint64], Tensor[(396, 1), float32]) {
  %920 = fn (%var_2464: Tensor[(13, 16, 3), uint8], %var_2465: Tensor[(13, 16, 3), uint8], %var_2489: Tensor[(280), float32], %var_2518: Tensor[(396, 1), float64]) -> (Tensor[(13, 16, 3), uint8], Tensor[(280), float32], Tensor[(280), float32], Tensor[(14, 3, 15), float32], Tensor[(396), float64], Tensor[(14, 3, 15), float32], Tensor[(2, 10, 14), float64], Tensor[(5, 2), float32], Tensor[(525), bool], Tensor[(396, 1), float32], Tensor[(300), bool], Tensor[(300), bool], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint64], Tensor[(396, 1), float32]) {
    %874 = cast(%var_2465, dtype="uint8") /* ty=Tensor[(13, 16, 3), uint8] */;
    %875 = shape_of(%var_2464, dtype="int32") /* ty=Tensor[(3), int32] */;
    %876 = cast(%var_2464, dtype="uint8") /* ty=Tensor[(13, 16, 3), uint8] */;
    %877 = dyn.reshape(%874, %875, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %878 = cast(%var_2489, dtype="float32") /* ty=Tensor[(280), float32] */;
    %879 = reshape(%878, newshape=[280]) /* ty=Tensor[(280), float32] */;
    %880 = @func_2405(%879) /* ty=(Tensor[(14, 3, 15), uint64], Tensor[(2, 10, 14), float32], Tensor[(280), float32]) */;
    %881 = cast(%var_2518, dtype="float64") /* ty=Tensor[(396, 1), float64] */;
    %882 = reshape(%881, newshape=[396]) /* ty=Tensor[(396), float64] */;
    %883 = @func_2142(%882) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(396), float64], Tensor[(396), float64]) */;
    %884 = %883.1;
    %885 = cast(%884, dtype="float64") /* ty=Tensor[(396), float64] */;
    %886 = reshape(%885, newshape=[396]) /* ty=Tensor[(396), float64] */;
    %887 = @func_2142(%886) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(396), float64], Tensor[(396), float64]) */;
    %888 = cast(meta[relay.Constant][48] /* ty=Tensor[(5, 2), float32] */, dtype="float32") /* ty=Tensor[(5, 2), float32] */;
    %889 = %880.2;
    %890 = cast(%889, dtype="float32") /* ty=Tensor[(280), float32] */;
    %891 = cast(meta[relay.Constant][49] /* ty=Tensor[(525), bool] */, dtype="bool") /* ty=Tensor[(525), bool] */;
    %892 = reshape(%888, newshape=[1, 2, 5]) /* ty=Tensor[(1, 2, 5), float32] */;
    %893 = reshape(%890, newshape=[280]) /* ty=Tensor[(280), float32] */;
    %894 = reshape(%891, newshape=[525]) /* ty=Tensor[(525), bool] */;
    %895 = @func_1888(%892, %893, %894) /* ty=(Tensor[(1, 2, 5), float32], Tensor[(2, 10, 14), float64], Tensor[(280), float32], Tensor[(15, 7, 5), bool], Tensor[(525), bool]) */;
    %896 = cast(%var_2518, dtype="float32") /* ty=Tensor[(396, 1), float32] */;
    %897 = sinh(%896) /* ty=Tensor[(396, 1), float32] */;
    %898 = cast(%897, dtype="float32") /* ty=Tensor[(396, 1), float32] */;
    %899 = cast(%884, dtype="float64") /* ty=Tensor[(396), float64] */;
    %900 = cast(meta[relay.Constant][50] /* ty=Tensor[(300), bool] */, dtype="bool") /* ty=Tensor[(300), bool] */;
    %901 = reshape(%899, newshape=[396]) /* ty=Tensor[(396), float64] */;
    %902 = reshape(%900, newshape=[300]) /* ty=Tensor[(300), bool] */;
    %903 = @func_1780(%901, %902) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(6, 11, 6), float64], Tensor[(396), float64], Tensor[(300), bool], Tensor[(300), bool]) */;
    %904 = @func_1040() /* ty=(Tensor[(14, 3, 15), float32],) */;
    %905 = %887.0;
    %906 = cast(%905, dtype="bool") /* ty=Tensor[(14, 3, 15), bool] */;
    %907 = cast(meta[relay.Constant][49] /* ty=Tensor[(525), bool] */, dtype="bool") /* ty=Tensor[(525), bool] */;
    %908 = reshape(%906, newshape=[14, 3, 15]) /* ty=Tensor[(14, 3, 15), bool] */;
    %909 = reshape(%907, newshape=[525]) /* ty=Tensor[(525), bool] */;
    %910 = @func_1322(%908, %909) /* ty=(Tensor[(14, 3, 15), uint64], Tensor[(15, 7, 5), bool], Tensor[(525), bool]) */;
    %911 = cast(%897, dtype="float32") /* ty=Tensor[(396, 1), float32] */;
    %912 = bitwise_xor(%876, %877) /* ty=Tensor[(13, 16, 3), uint8] */;
    %913 = @func_1817() /* ty=Tensor[(14, 3, 15), float32] */;
    %914 = %895.1;
    %915 = acosh(%898) /* ty=Tensor[(396, 1), float32] */;
    %916 = %903.3;
    %917 = %904.0;
    %918 = %910.0;
    %919 = erf(%911) /* ty=Tensor[(396, 1), float32] */;
    (%912, %889, %var_2489, %913, %884, %905, %914, meta[relay.Constant][48] /* ty=Tensor[(5, 2), float32] */, meta[relay.Constant][49] /* ty=Tensor[(525), bool] */, %915, %916, meta[relay.Constant][50] /* ty=Tensor[(300), bool] */, %917, %918, %919)
  };
  %920(%var_2589, %var_2590, %var_2591, %var_2592) /* ty=(Tensor[(13, 16, 3), uint8], Tensor[(280), float32], Tensor[(280), float32], Tensor[(14, 3, 15), float32], Tensor[(396), float64], Tensor[(14, 3, 15), float32], Tensor[(2, 10, 14), float64], Tensor[(5, 2), float32], Tensor[(525), bool], Tensor[(396, 1), float32], Tensor[(300), bool], Tensor[(300), bool], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint64], Tensor[(396, 1), float32]) */
}

def @func_2328(%var_2327: Tensor[(14, 3, 15), float64]) -> (Tensor[(14, 3, 15), int8],) {
  %928 = fn (%var_2318: Tensor[(14, 3, 15), float64]) -> (Tensor[(14, 3, 15), int8],) {
    %921 = @func_2198() /* ty=(Tensor[(14, 3, 15), float64],) */;
    %922 = %921.0;
    %923 = cast(%var_2318, dtype="int8") /* ty=Tensor[(14, 3, 15), int8] */;
    %924 = shape_of(%922, dtype="int32") /* ty=Tensor[(3), int32] */;
    %925 = cast(%922, dtype="int8") /* ty=Tensor[(14, 3, 15), int8] */;
    %926 = dyn.reshape(%923, %924, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %927 = logical_xor(%925, %926) /* ty=Tensor[(14, 3, 15), int8] */;
    (%927,)
  };
  %928(%var_2327) /* ty=(Tensor[(14, 3, 15), int8],) */
}

def @func_6668(%var_6667: Tensor[(60), float32]) -> (Tensor[(14, 3, 15), uint32], Tensor[(2, 6, 5), float32], Tensor[(60), float32]) {
  %935 = fn (%var_6664: Tensor[(60), float32]) -> (Tensor[(14, 3, 15), uint32], Tensor[(2, 6, 5), float32], Tensor[(60), float32]) {
    %929 = @func_2459() /* ty=(Tensor[(14, 3, 15), uint32],) */;
    %930 = cast(%var_6664, dtype="float32") /* ty=Tensor[(60), float32] */;
    %931 = reshape(%930, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), float32] */;
    %932 = @func_4099(%931) /* ty=(Tensor[(2, 6, 5), float32], Tensor[(14, 3, 15), uint32]) */;
    %933 = %929.0;
    %934 = %932.0;
    (%933, %934, %var_6664)
  };
  %935(%var_6667) /* ty=(Tensor[(14, 3, 15), uint32], Tensor[(2, 6, 5), float32], Tensor[(60), float32]) */
}

def @func_7017(%var_7014: Tensor[(16, 12, 10), float64], %var_7015: float64, %var_7016: Tensor[(5250), bool]) -> (Tensor[(16, 12, 10), float64], Tensor[(2, 14, 6), float64], float64, Tensor[(15, 7, 5), bool], Tensor[(5250), bool]) {
  %945 = fn (%var_6959: Tensor[(16, 12, 10), float64], %var_6993: float64, %var_7008: Tensor[(5250), bool]) -> (Tensor[(16, 12, 10), float64], Tensor[(2, 14, 6), float64], float64, Tensor[(15, 7, 5), bool], Tensor[(5250), bool]) {
    %936 = cast(%var_6959, dtype="float64") /* ty=Tensor[(16, 12, 10), float64] */;
    %937 = cast(%var_6993, dtype="float64") /* ty=float64 */;
    %938 = reshape(%937, newshape=[]) /* ty=float64 */;
    %939 = cast(%var_7008, dtype="bool") /* ty=Tensor[(5250), bool] */;
    %940 = reshape(%939, newshape=[525, 10]) /* ty=Tensor[(525, 10), bool] */;
    %941 = @func_2092(%940) /* ty=(Tensor[(525, 10), bool], Tensor[(15, 7, 5), bool]) */;
    %942 = log2(%936) /* ty=Tensor[(16, 12, 10), float64] */;
    %943 = @func_5813(%938) /* ty=Tensor[(2, 14, 6), float64] */;
    %944 = %941.1;
    (%942, %943, %var_6993, %944, %var_7008)
  };
  %945(%var_7014, %var_7015, %var_7016) /* ty=(Tensor[(16, 12, 10), float64], Tensor[(2, 14, 6), float64], float64, Tensor[(15, 7, 5), bool], Tensor[(5250), bool]) */
}

def @func_5484(%var_5483: Tensor[(396), float64]) -> (Tensor[(14, 3, 15), float32], Tensor[(6, 11, 6), float64], Tensor[(396), float64]) {
  %951 = fn (%var_5477: Tensor[(396), float64]) -> (Tensor[(14, 3, 15), float32], Tensor[(6, 11, 6), float64], Tensor[(396), float64]) {
    %946 = @func_1611() /* ty=(Tensor[(14, 3, 15), float32], Tensor[(525, 1), bool], Tensor[(10, 30), bool]) */;
    %947 = cast(%var_5477, dtype="float64") /* ty=Tensor[(396), float64] */;
    %948 = reshape(%947, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), float64] */;
    %949 = %946.0;
    %950 = @func_1463(%948) /* ty=Tensor[(6, 11, 6), float64] */;
    (%949, %950, %var_5477)
  };
  %951(%var_5483) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(6, 11, 6), float64], Tensor[(396), float64]) */
}

def @func_5709(%var_5689: Tensor[(3, 10, 15), float64], %var_5693: Tensor[(140, 2), float32], %var_5694: Tensor[(168), uint8], %var_5695: float32) -> (Tensor[(8, 7, 11), int64], Tensor[(140, 2), float32], Tensor[(168), uint8], float32, Tensor[(3, 10, 15), bool], Tensor[(14, 3, 15), uint32]) {
  %952 = cast(%var_5693, dtype="float32") /* ty=Tensor[(140, 2), float32] */;
  %953 = cast(%var_5694, dtype="uint8") /* ty=Tensor[(168), uint8] */;
  %954 = cast(%var_5695, dtype="float32") /* ty=float32 */;
  %955 = reshape(%952, newshape=[70, 4]) /* ty=Tensor[(70, 4), float32] */;
  %956 = reshape(%953, newshape=[168]) /* ty=Tensor[(168), uint8] */;
  %957 = reshape(%954, newshape=[]) /* ty=float32 */;
  %958 = @func_3149(%955, %956, %957) /* ty=(Tensor[(14, 3, 15), float64], Tensor[(14, 3, 15), uint64], Tensor[(624), uint8], Tensor[(70, 4), float32], Tensor[(198, 2), float64], Tensor[(12, ?, 14), uint8], Tensor[(168), uint8], Tensor[(8, 7, 11), int64], float32, Tensor[(616), float32], Tensor[(525), bool], Tensor[(14, 3, 15), float32], Tensor[(525, 10), bool], Tensor[(5250), bool], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), int8], Tensor[(14, 3, 15), float32], Tensor[(15, 7, 5), bool], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), float32]) */;
  %959 = cast(%var_5689, dtype="float64") /* ty=Tensor[(3, 10, 15), float64] */;
  %960 = cosh(%959) /* ty=Tensor[(3, 10, 15), float64] */;
  %961 = cast(%var_5689, dtype="bool") /* ty=Tensor[(3, 10, 15), bool] */;
  %962 = shape_of(%960, dtype="int32") /* ty=Tensor[(3), int32] */;
  %963 = cast(%960, dtype="bool") /* ty=Tensor[(3, 10, 15), bool] */;
  %964 = dyn.reshape(%961, %962, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %965 = %958.7;
  %966 = logical_and(%963, %964) /* ty=Tensor[(3, 10, 15), bool] */;
  %967 = @func_2034() /* ty=Tensor[(14, 3, 15), uint32] */;
  (%965, %var_5693, %var_5694, %var_5695, %966, %967)
}

def @func_7158(%var_7157: Tensor[(525, 13), bool]) -> (Tensor[(525, 13), uint64],) {
  %972 = fn (%var_7149: Tensor[(525, 13), bool]) -> (Tensor[(525, 13), uint64],) {
    %968 = @func_4118() /* ty=Tensor[(525, 1), bool] */;
    %969 = cast(%968, dtype="uint64") /* ty=Tensor[(525, 1), uint64] */;
    %970 = cast(%var_7149, dtype="uint64") /* ty=Tensor[(525, 13), uint64] */;
    %971 = logical_xor(%969, %970) /* ty=Tensor[(525, 13), uint64] */;
    (%971,)
  };
  %972(%var_7157) /* ty=(Tensor[(525, 13), uint64],) */
}

def @func_4245() -> (Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint32], Tensor[(14, 3, 15), float32]) {
  %973 = @func_2459() /* ty=(Tensor[(14, 3, 15), uint32],) */;
  %974 = @func_1430() /* ty=(Tensor[(14, 3, 15), float32],) */;
  %975 = @func_3172() /* ty=Tensor[(14, 3, 15), float32] */;
  %976 = %973.0;
  %977 = %974.0;
  (%975, %976, %977)
}

def @func_469(%var_467: Tensor[(15, 7, 5), bool], %var_468: Tensor[(15, 7, 5), bool]) -> Tensor[(15, 7, 5), bool] {
  @func_465(%var_467, %var_468) /* ty=Tensor[(15, 7, 5), bool] */
}

def @func_4905(%var_4904: Tensor[(9, 10, 16), float64]) -> (Tensor[(9, 10, 16), float64], Tensor[(9, 10, 16), float32]) {
  %985 = fn (%var_4889: Tensor[(9, 10, 16), float64]) -> (Tensor[(9, 10, 16), float64], Tensor[(9, 10, 16), float32]) {
    %978 = cast(meta[relay.Constant][51] /* ty=Tensor[(9, 10, 16), float64] */, dtype="float64") /* ty=Tensor[(9, 10, 16), float64] */;
    %979 = shape_of(%var_4889, dtype="int32") /* ty=Tensor[(3), int32] */;
    %980 = cast(%var_4889, dtype="float64") /* ty=Tensor[(9, 10, 16), float64] */;
    %981 = dyn.reshape(%978, %979, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %982 = cast(meta[relay.Constant][51] /* ty=Tensor[(9, 10, 16), float64] */, dtype="float32") /* ty=Tensor[(9, 10, 16), float32] */;
    %983 = floor_divide(%980, %981) /* ty=Tensor[(9, 10, 16), float64] */;
    %984 = atanh(%982) /* ty=Tensor[(9, 10, 16), float32] */;
    (%983, %984)
  };
  %985(%var_4904) /* ty=(Tensor[(9, 10, 16), float64], Tensor[(9, 10, 16), float32]) */
}

def @func_1819() -> Tensor[(14, 3, 15), float32] {
  @func_1817() /* ty=Tensor[(14, 3, 15), float32] */
}

def @func_5081(%var_5079: Tensor[(6, 15, 15), float64], %var_5080: Tensor[(6, 15, 15), float64]) -> (Tensor[(6, 15, 15), float64], Tensor[(14, 3, 15), float32], Tensor[(396), float64], Tensor[(6, 15, 15), float64], Tensor[(280), float32], Tensor[(280), float32]) {
  %1004 = fn (%var_5005: Tensor[(6, 15, 15), float64], %var_5006: Tensor[(6, 15, 15), float64]) -> (Tensor[(6, 15, 15), float64], Tensor[(14, 3, 15), float32], Tensor[(396), float64], Tensor[(6, 15, 15), float64], Tensor[(280), float32], Tensor[(280), float32]) {
    %986 = cast(%var_5006, dtype="float64") /* ty=Tensor[(6, 15, 15), float64] */;
    %987 = shape_of(%var_5005, dtype="int32") /* ty=Tensor[(3), int32] */;
    %988 = cast(%var_5005, dtype="float64") /* ty=Tensor[(6, 15, 15), float64] */;
    %989 = dyn.reshape(%986, %987, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %990 = cast(meta[relay.Constant][52] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
    %991 = reshape(%990, newshape=[396]) /* ty=Tensor[(396), float64] */;
    %992 = @func_1846(%991) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(6, 11, 6), float64], Tensor[(396), float64]) */;
    %993 = cast(%var_5006, dtype="float64") /* ty=Tensor[(6, 15, 15), float64] */;
    %994 = shape_of(%var_5005, dtype="int32") /* ty=Tensor[(3), int32] */;
    %995 = cast(%var_5005, dtype="float64") /* ty=Tensor[(6, 15, 15), float64] */;
    %996 = dyn.reshape(%993, %994, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %997 = cast(meta[relay.Constant][53] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
    %998 = reshape(%997, newshape=[280]) /* ty=Tensor[(280), float32] */;
    %999 = @func_2405(%998) /* ty=(Tensor[(14, 3, 15), uint64], Tensor[(2, 10, 14), float32], Tensor[(280), float32]) */;
    %1000 = floor_mod(%988, %989) /* ty=Tensor[(6, 15, 15), float64] */;
    %1001 = %992.0;
    %1002 = divide(%995, %996) /* ty=Tensor[(6, 15, 15), float64] */;
    %1003 = %999.2;
    (%1000, %1001, meta[relay.Constant][52] /* ty=Tensor[(396), float64] */, %1002, %1003, meta[relay.Constant][53] /* ty=Tensor[(280), float32] */)
  };
  %1004(%var_5079, %var_5080) /* ty=(Tensor[(6, 15, 15), float64], Tensor[(14, 3, 15), float32], Tensor[(396), float64], Tensor[(6, 15, 15), float64], Tensor[(280), float32], Tensor[(280), float32]) */
}

def @func_4301(%var_4299: Tensor[(35, 15), bool]) -> (Tensor[(14, 3, 15), float32], Tensor[(35, 15), bool], Tensor[(14, 3, 15), float32], Tensor[(15, 7, 5), float64]) {
  @func_4298(%var_4299) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(35, 15), bool], Tensor[(14, 3, 15), float32], Tensor[(15, 7, 5), float64]) */
}

def @func_2967() -> Tensor[(14, 3, 15), float32] {
  @func_2965() /* ty=Tensor[(14, 3, 15), float32] */
}

def @func_4120() -> Tensor[(525, 1), bool] {
  @func_4118() /* ty=Tensor[(525, 1), bool] */
}

def @func_5550(%var_5548: Tensor[(27, 50), float64], %var_5549: Tensor[(27, 50), float64]) -> (Tensor[(14, 3, 15), float32], Tensor[(525), bool], Tensor[(525), bool], Tensor[(396), float64], Tensor[(6, 15, 15), float64], Tensor[(27, 50), uint32]) {
  %1024 = fn (%var_5536: Tensor[(27, 50), float64], %var_5543: Tensor[(27, 50), float64]) -> (Tensor[(14, 3, 15), float32], Tensor[(525), bool], Tensor[(525), bool], Tensor[(396), float64], Tensor[(6, 15, 15), float64], Tensor[(27, 50), uint32]) {
    %1005 = @func_4858() /* ty=(Tensor[(14, 3, 15), float32],) */;
    %1006 = cast(meta[relay.Constant][54] /* ty=Tensor[(525), bool] */, dtype="bool") /* ty=Tensor[(525), bool] */;
    %1007 = cast(meta[relay.Constant][55] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
    %1008 = reshape(%1006, newshape=[525]) /* ty=Tensor[(525), bool] */;
    %1009 = reshape(%1007, newshape=[396]) /* ty=Tensor[(396), float64] */;
    %1010 = @func_3986(%1008, %1009) /* ty=(Tensor[(14, 3, 15), float64], Tensor[(15, 7, 5), bool], Tensor[(525), bool], Tensor[(396), float64]) */;
    %1011 = cast(%var_5536, dtype="float64") /* ty=Tensor[(27, 50), float64] */;
    %1012 = cast(%var_5536, dtype="float64") /* ty=Tensor[(27, 50), float64] */;
    %1013 = reshape(%1011, newshape=[6, 15, 15]) /* ty=Tensor[(6, 15, 15), float64] */;
    %1014 = reshape(%1012, newshape=[6, 15, 15]) /* ty=Tensor[(6, 15, 15), float64] */;
    %1015 = @func_5078(%1013, %1014) /* ty=(Tensor[(6, 15, 15), float64], Tensor[(14, 3, 15), float32], Tensor[(396), float64], Tensor[(6, 15, 15), float64], Tensor[(280), float32], Tensor[(280), float32]) */;
    %1016 = cast(%var_5543, dtype="uint32") /* ty=Tensor[(27, 50), uint32] */;
    %1017 = shape_of(%var_5536, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1018 = cast(%var_5536, dtype="uint32") /* ty=Tensor[(27, 50), uint32] */;
    %1019 = dyn.reshape(%1016, %1017, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %1020 = %1005.0;
    %1021 = %1010.2;
    %1022 = %1015.3;
    %1023 = bitwise_or(%1018, %1019) /* ty=Tensor[(27, 50), uint32] */;
    (%1020, %1021, meta[relay.Constant][54] /* ty=Tensor[(525), bool] */, meta[relay.Constant][55] /* ty=Tensor[(396), float64] */, %1022, %1023)
  };
  %1024(%var_5548, %var_5549) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(525), bool], Tensor[(525), bool], Tensor[(396), float64], Tensor[(6, 15, 15), float64], Tensor[(27, 50), uint32]) */
}

def @func_1849(%var_1847: Tensor[(396), float64]) -> (Tensor[(14, 3, 15), float32], Tensor[(6, 11, 6), float64], Tensor[(396), float64]) {
  @func_1846(%var_1847) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(6, 11, 6), float64], Tensor[(396), float64]) */
}

def @func_6317() -> (Tensor[(14, 3, 15), uint32],) {
  %1025 = @func_5847() /* ty=Tensor[(14, 3, 15), uint32] */;
  (%1025,)
}

def @func_4516(%var_4514: Tensor[(10, 15, 14), uint16], %var_4515: Tensor[(10, 15, 14), uint16]) -> (Tensor[(10, 15, 14), uint16], Tensor[(10, 15, 14), float32]) {
  %1033 = fn (%var_4492: Tensor[(10, 15, 14), uint16], %var_4493: Tensor[(10, 15, 14), uint16]) -> (Tensor[(10, 15, 14), uint16], Tensor[(10, 15, 14), float32]) {
    %1026 = cast(%var_4493, dtype="uint16") /* ty=Tensor[(10, 15, 14), uint16] */;
    %1027 = shape_of(%var_4492, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1028 = cast(%var_4492, dtype="uint16") /* ty=Tensor[(10, 15, 14), uint16] */;
    %1029 = dyn.reshape(%1026, %1027, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1030 = cast(%var_4493, dtype="float32") /* ty=Tensor[(10, 15, 14), float32] */;
    %1031 = bitwise_or(%1028, %1029) /* ty=Tensor[(10, 15, 14), uint16] */;
    %1032 = log10(%1030) /* ty=Tensor[(10, 15, 14), float32] */;
    (%1031, %1032)
  };
  %1033(%var_4514, %var_4515) /* ty=(Tensor[(10, 15, 14), uint16], Tensor[(10, 15, 14), float32]) */
}

def @func_3441() -> Tensor[(11, 12, 16), float32] {
  %1034 = fn () -> Tensor[(11, 12, 16), float32] {
    @func_3198() /* ty=Tensor[(11, 12, 16), float32] */
  };
  %1034() /* ty=Tensor[(11, 12, 16), float32] */
}

def @func_8508() -> Tensor[(14, 3, 15), uint32] {
  @func_8506() /* ty=Tensor[(14, 3, 15), uint32] */
}

def @func_5889(%var_5888: Tensor[(11, 12, 16), float32]) -> (Tensor[(11, 12, 16), bool], Tensor[(14, 3, 15), float32]) {
  %1043 = fn (%var_5873: Tensor[(11, 12, 16), float32]) -> (Tensor[(11, 12, 16), bool], Tensor[(14, 3, 15), float32]) {
    %1035 = @func_3198() /* ty=Tensor[(11, 12, 16), float32] */;
    %1036 = cast(%var_5873, dtype="bool") /* ty=Tensor[(11, 12, 16), bool] */;
    %1037 = shape_of(%1035, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1038 = cast(%1035, dtype="bool") /* ty=Tensor[(11, 12, 16), bool] */;
    %1039 = dyn.reshape(%1036, %1037, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1040 = @func_4858() /* ty=(Tensor[(14, 3, 15), float32],) */;
    %1041 = equal(%1038, %1039) /* ty=Tensor[(11, 12, 16), bool] */;
    %1042 = %1040.0;
    (%1041, %1042)
  };
  %1043(%var_5888) /* ty=(Tensor[(11, 12, 16), bool], Tensor[(14, 3, 15), float32]) */
}

def @func_1432() -> (Tensor[(14, 3, 15), float32],) {
  @func_1430() /* ty=(Tensor[(14, 3, 15), float32],) */
}

def @func_2795(%var_2787: Tensor[(15, 15, 12), float64]) -> (Tensor[(15, 15, 12), float64],) {
  %1044 = cast(%var_2787, dtype="float64") /* ty=Tensor[(15, 15, 12), float64] */;
  %1045 = cosh(%1044) /* ty=Tensor[(15, 15, 12), float64] */;
  (%1045,)
}

def @func_5407(%var_5364: Tensor[(396), float64], %var_5380: Tensor[(280), float32]) -> (Tensor[(14, 3, 15), uint32], Tensor[(396), float64], Tensor[(396), float64], Tensor[(280), float32], Tensor[(624), uint8], Tensor[(280), float32]) {
  %1046 = @func_2351() /* ty=(Tensor[(14, 3, 15), uint32],) */;
  %1047 = cast(%var_5364, dtype="float64") /* ty=Tensor[(396), float64] */;
  %1048 = reshape(%1047, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %1049 = @func_2142(%1048) /* ty=(Tensor[(14, 3, 15), float32], Tensor[(396), float64], Tensor[(396), float64]) */;
  %1050 = cast(meta[relay.Constant][56] /* ty=Tensor[(624), uint8] */, dtype="uint8") /* ty=Tensor[(624), uint8] */;
  %1051 = cast(meta[relay.Constant][56] /* ty=Tensor[(624), uint8] */, dtype="uint8") /* ty=Tensor[(624), uint8] */;
  %1052 = cast(%var_5380, dtype="float32") /* ty=Tensor[(280), float32] */;
  %1053 = cast(%var_5364, dtype="float64") /* ty=Tensor[(396), float64] */;
  %1054 = reshape(%1050, newshape=[13, 16, 3]) /* ty=Tensor[(13, 16, 3), uint8] */;
  %1055 = reshape(%1051, newshape=[13, 16, 3]) /* ty=Tensor[(13, 16, 3), uint8] */;
  %1056 = reshape(%1052, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %1057 = reshape(%1053, newshape=[396, 1]) /* ty=Tensor[(396, 1), float64] */;
  %1058 = @func_2588(%1054, %1055, %1056, %1057) /* ty=(Tensor[(13, 16, 3), uint8], Tensor[(280), float32], Tensor[(280), float32], Tensor[(14, 3, 15), float32], Tensor[(396), float64], Tensor[(14, 3, 15), float32], Tensor[(2, 10, 14), float64], Tensor[(5, 2), float32], Tensor[(525), bool], Tensor[(396, 1), float32], Tensor[(300), bool], Tensor[(300), bool], Tensor[(14, 3, 15), float32], Tensor[(14, 3, 15), uint64], Tensor[(396, 1), float32]) */;
  %1059 = %1046.0;
  %1060 = %1049.1;
  %1061 = %1058.2;
  (%1059, %1060, %var_5364, %1061, meta[relay.Constant][56] /* ty=Tensor[(624), uint8] */, %var_5380)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
const_106 = relay.const([[[8.861560,-8.342271,-2.972618,7.012515],[2.076377,1.951961,8.730133,8.513953],[-9.610300,5.968997,-6.544693,-9.418869],[5.642519,5.721419,-5.205920,-8.723512],[7.396849,-5.967830,-8.656654,6.450424],[4.564504,-5.031437,3.068843,-7.269098],[-6.060413,3.522341,2.814704,-9.156501],[-6.505068,-0.868408,-7.438818,-8.289796],[8.567652,-4.199785,-4.067206,8.907160],[-8.143240,5.755710,5.280668,2.516977],[8.788913,-1.314490,-6.650274,7.781155],[9.349551,-9.566510,-9.814808,6.317561]],[[7.264744,-9.119554,3.332507,6.803754],[7.192020,-9.264497,-1.710212,4.393254],[-7.453832,-9.183781,-1.662976,3.261529],[5.060855,-6.377925,-9.010885,-1.289572],[9.226490,-8.850863,-6.915503,-2.063635],[-2.485997,4.858508,2.473503,-1.894941],[-3.279330,-6.989669,-1.822552,-3.245904],[1.713361,8.145369,-7.143516,-1.654139],[-6.543229,3.541065,-5.561478,7.515444],[-4.766665,-8.660971,1.174349,2.322563],[0.998585,-2.499629,5.894833,-8.475669],[2.201964,-5.310411,1.805649,9.950009]],[[2.618984,-9.500017,1.049365,-9.754539],[-8.158593,9.540434,9.691056,-5.586484],[-4.623308,-6.934750,0.092025,3.963661],[2.491631,7.035393,-7.949417,-0.200983],[7.369201,2.346561,-8.578579,-5.599188],[-4.899339,-6.291433,-4.541675,7.536889],[-8.120199,-7.843759,-7.464226,-8.690966],[3.197102,-7.934452,8.073437,-0.445565],[0.194211,9.192741,9.061772,5.258742],[7.178019,-2.914614,-2.579421,-2.886968],[0.707254,-8.681059,-5.014945,2.957087],[-7.730788,3.849677,0.069229,-4.144702]],[[-7.259354,-1.611138,3.082014,2.681954],[-5.346259,-4.304987,3.451385,8.550602],[8.750991,-3.788560,-5.941930,-4.866920],[4.226532,-8.723539,3.501397,-8.844937],[-8.561262,1.319984,-8.967602,-4.418007],[-7.829078,8.093585,-7.533968,8.412764],[-6.904851,2.113533,5.722408,-9.913297],[-2.438760,7.226392,9.294527,7.342903],[6.680752,-3.361052,3.521041,-3.700199],[6.598613,-5.273938,-7.566140,-7.905179],[8.354985,4.522451,1.282286,-0.473438],[5.896589,9.994422,4.859052,-0.621103]],[[2.752245,-6.328710,-6.104524,9.150027],[-1.839210,3.727703,5.310657,7.974355],[6.705836,3.336101,-5.726495,-6.070765],[-7.858061,0.956361,-4.650415,-7.507855],[-9.930902,5.366631,7.750289,-9.048553],[-8.601254,-2.080552,8.241216,-8.682221],[-1.431908,4.676861,5.128023,-8.267890],[7.278036,6.155916,-8.252667,-1.055381],[-7.936969,2.426169,-9.121929,4.037127],[5.885539,-1.176305,-1.471717,8.252160],[-9.158218,6.631434,2.282276,3.344678],[3.682847,-2.038078,-7.537907,-5.910725]]], dtype = "float32")#candidate|106|(5, 12, 4)|const|float32
uop_107 = relay.tan(const_106.astype('float32')) # shape=(5, 12, 4)
output = relay.Tuple([uop_107,])
output2 = relay.Tuple([uop_107,])
func_109 = relay.Function([], output)
mod['func_109'] = func_109
mod = relay.transform.InferType()(mod)
mutated_mod['func_109'] = func_109
mutated_mod = relay.transform.InferType()(mutated_mod)
func_109_call = mutated_mod.get_global_var('func_109')
call_110 = func_109_call()
output = call_110
func_111 = relay.Function([], output)
mutated_mod['func_111'] = func_111
mutated_mod = relay.transform.InferType()(mutated_mod)
func_109_call = mod.get_global_var('func_109')
func_111_call = mutated_mod.get_global_var('func_111')
call_180 = relay.TupleGetItem(func_109_call(), 0)
call_181 = relay.TupleGetItem(func_111_call(), 0)
var_194 = relay.var("var_194", dtype = "float32", shape = (5, 12, 4))#candidate|194|(5, 12, 4)|var|float32
bop_195 = relay.floor_divide(call_180.astype('float32'), relay.reshape(var_194.astype('float32'), relay.shape_of(call_180))) # shape=(5, 12, 4)
bop_198 = relay.floor_divide(call_181.astype('float32'), relay.reshape(var_194.astype('float32'), relay.shape_of(call_181))) # shape=(5, 12, 4)
bop_201 = relay.multiply(call_180.astype('float64'), relay.reshape(var_194.astype('float64'), relay.shape_of(call_180))) # shape=(5, 12, 4)
bop_204 = relay.multiply(call_181.astype('float64'), relay.reshape(var_194.astype('float64'), relay.shape_of(call_181))) # shape=(5, 12, 4)
output = relay.Tuple([bop_195,bop_201,])
output2 = relay.Tuple([bop_198,bop_204,])
func_208 = relay.Function([var_194,], output)
mod['func_208'] = func_208
mod = relay.transform.InferType()(mod)
var_209 = relay.var("var_209", dtype = "float32", shape = (5, 12, 4))#candidate|209|(5, 12, 4)|var|float32
output = func_208(var_209)
func_210 = relay.Function([var_209], output)
mutated_mod['func_210'] = func_210
mutated_mod = relay.transform.InferType()(mutated_mod)
const_334 = relay.const([[[1.147980,-8.457528,-4.863494,0.338687,4.676212,0.129842,0.063092,3.753045,-8.830212,-7.290663,8.090245,9.682992],[2.808055,5.396586,-5.952928,7.632457,6.491001,7.923636,-3.566746,1.181080,-9.437251,0.781304,2.124763,3.835523],[-0.601273,-0.126663,-8.293178,0.194468,-5.523045,4.305185,5.899499,-3.864819,3.387394,-6.402167,8.302113,0.066888],[7.626430,1.400878,7.404711,-2.892857,-6.088479,5.711490,8.128433,-7.009616,5.809999,-1.496787,2.659939,3.699047],[-0.494692,-6.936493,5.932763,-4.984243,-8.037884,4.059132,-8.053099,-4.106182,-0.624800,1.155201,-1.483249,-0.555068],[6.791500,-9.593754,5.902244,0.866364,6.043456,4.754285,5.386148,4.211253,5.256057,9.817181,8.916761,7.259819],[2.277551,1.020043,-1.904892,1.150128,-2.644608,-7.477804,6.855385,-9.107879,0.027077,0.678843,5.939509,2.480873]],[[-0.992259,-6.845130,-0.846490,0.398583,-3.143901,4.773710,-3.117906,-6.850389,-9.448616,7.217567,3.332526,-8.140491],[2.621025,9.100138,2.569960,-4.627376,-7.532327,4.089386,-4.631731,-8.237696,1.582212,8.769417,4.514858,-2.452798],[7.686587,0.653036,7.466053,9.494343,-5.215477,6.116941,2.817720,9.622386,-3.150946,-2.851898,5.470709,9.912529],[-9.697710,9.610392,9.677885,2.543031,6.041135,0.482638,7.411608,1.682949,2.283456,9.092605,-2.326605,-4.158063],[1.123443,3.863404,-7.886270,0.433818,-9.078313,-7.046206,-6.714881,-7.585331,-0.331975,4.335309,-4.991872,1.751865],[5.118426,0.510735,6.379402,1.441057,-9.777960,-9.365540,7.901853,-5.826316,-3.398547,5.576593,-3.907379,-2.207842],[7.366377,-5.441301,-8.730171,-4.915061,-6.895175,-3.936602,9.290477,-8.293160,-8.792052,-3.650917,-5.699792,9.387671]],[[7.111107,-3.175523,-2.481146,9.939625,-7.511878,-6.448281,0.495948,-1.171186,-3.065165,-1.081134,-2.802446,3.568588],[3.695725,0.245399,-3.370034,-8.754033,6.383570,-9.198307,1.406664,-5.239124,6.500644,-2.098313,9.745308,9.375803],[2.895377,4.122548,-7.085955,2.284054,2.600990,-4.978075,8.314961,2.618795,8.091546,4.173451,4.001355,-1.374810],[-7.054654,-2.993779,5.383533,7.409286,9.070169,2.454958,9.271530,6.888519,2.383507,7.099816,-8.832704,7.281706],[-7.519189,-1.810033,-1.744755,-5.883637,9.452067,-8.589059,-8.993160,-7.096945,0.995927,-3.408739,-6.718027,2.453570],[3.288761,-8.959819,3.227455,7.696592,-9.048968,-9.259142,-1.367178,9.459507,0.401848,-4.260464,0.346462,4.555613],[-6.491061,-1.640741,6.438520,-8.811489,-7.969637,-1.858025,7.915551,8.958505,4.257423,-8.901754,-7.578134,2.613926]]], dtype = "float64")#candidate|334|(3, 7, 12)|const|float64
uop_335 = relay.rsqrt(const_334.astype('float64')) # shape=(3, 7, 12)
output = relay.Tuple([uop_335,])
output2 = relay.Tuple([uop_335,])
func_339 = relay.Function([], output)
mod['func_339'] = func_339
mod = relay.transform.InferType()(mod)
mutated_mod['func_339'] = func_339
mutated_mod = relay.transform.InferType()(mutated_mod)
func_339_call = mutated_mod.get_global_var('func_339')
call_340 = func_339_call()
output = call_340
func_341 = relay.Function([], output)
mutated_mod['func_341'] = func_341
mutated_mod = relay.transform.InferType()(mutated_mod)
func_109_call = mod.get_global_var('func_109')
func_111_call = mutated_mod.get_global_var('func_111')
call_345 = relay.TupleGetItem(func_109_call(), 0)
call_346 = relay.TupleGetItem(func_111_call(), 0)
func_339_call = mod.get_global_var('func_339')
func_341_call = mutated_mod.get_global_var('func_341')
call_351 = relay.TupleGetItem(func_339_call(), 0)
call_352 = relay.TupleGetItem(func_341_call(), 0)
output = relay.Tuple([call_345,call_351,])
output2 = relay.Tuple([call_346,call_352,])
func_357 = relay.Function([], output)
mod['func_357'] = func_357
mod = relay.transform.InferType()(mod)
mutated_mod['func_357'] = func_357
mutated_mod = relay.transform.InferType()(mutated_mod)
func_357_call = mutated_mod.get_global_var('func_357')
call_358 = func_357_call()
output = call_358
func_359 = relay.Function([], output)
mutated_mod['func_359'] = func_359
mutated_mod = relay.transform.InferType()(mutated_mod)
func_357_call = mod.get_global_var('func_357')
func_359_call = mutated_mod.get_global_var('func_359')
call_491 = relay.TupleGetItem(func_357_call(), 1)
call_492 = relay.TupleGetItem(func_359_call(), 1)
uop_510 = relay.acosh(call_491.astype('float32')) # shape=(3, 7, 12)
uop_512 = relay.acosh(call_492.astype('float32')) # shape=(3, 7, 12)
output = uop_510
output2 = uop_512
func_525 = relay.Function([], output)
mod['func_525'] = func_525
mod = relay.transform.InferType()(mod)
mutated_mod['func_525'] = func_525
mutated_mod = relay.transform.InferType()(mutated_mod)
func_525_call = mutated_mod.get_global_var('func_525')
call_526 = func_525_call()
output = call_526
func_527 = relay.Function([], output)
mutated_mod['func_527'] = func_527
mutated_mod = relay.transform.InferType()(mutated_mod)
var_545 = relay.var("var_545", dtype = "uint32", shape = (10, 15, 12))#candidate|545|(10, 15, 12)|var|uint32
const_546 = relay.const([[[2,-1,-8,-2,8,3,8,8,4,-3,6,10],[5,6,6,7,7,8,4,4,-8,8,5,-1],[-9,-8,6,8,1,-1,-5,-4,10,-8,10,8],[1,5,-1,4,1,-6,7,8,7,-4,2,3],[-10,8,-4,-9,2,10,-10,-5,4,10,5,-9],[9,-3,1,-5,-8,2,-7,7,-5,-7,1,8],[3,-7,7,-1,9,-9,1,-1,7,10,-4,-5],[4,-6,4,-10,-5,7,3,10,1,2,5,8],[-9,-6,-7,-4,5,-8,5,7,-3,1,2,7],[1,3,7,8,2,-8,6,-10,3,1,-5,9],[-5,-5,-2,-10,4,-10,7,-6,3,7,-8,-10],[6,1,2,-1,-10,3,9,-6,-9,5,-6,4],[-6,9,-2,7,2,3,-7,8,1,9,5,4],[-4,9,-1,-9,7,-3,9,-1,7,3,-6,-1],[-2,-6,8,2,-10,-3,-7,-8,-10,-5,10,-10]],[[-8,2,3,3,-8,6,-1,-9,1,-10,4,-3],[8,5,-4,4,9,-7,1,-10,1,4,-6,10],[7,-6,-9,-9,-6,4,1,-1,-6,-3,-10,-8],[10,-2,-7,4,2,4,8,8,-8,-6,-10,9],[7,5,-6,-8,-4,-3,-3,-4,-6,8,-2,9],[-7,-10,2,-5,1,8,-2,4,-9,7,-3,-8],[-9,-6,-1,2,-2,8,-2,-4,-2,10,1,10],[-10,-1,-7,-3,-5,7,6,5,2,1,-6,-6],[-7,2,10,-7,8,5,-7,2,-9,-10,-2,10],[-10,-7,4,-5,-10,7,1,-2,2,-4,8,-2],[9,-10,9,-5,1,-5,5,-5,1,7,-8,10],[-8,10,4,-1,-4,-4,-2,-3,-10,7,-10,-2],[-4,2,-2,3,-7,-6,-5,-4,9,-3,6,4],[-4,-1,3,5,4,1,-10,-6,7,9,-10,-10],[-10,1,-9,-2,-6,-9,-8,-6,2,10,4,-10]],[[-9,-1,-2,1,-6,-8,7,-9,-2,-4,3,-3],[-9,-6,9,2,-4,9,5,-8,2,7,-5,-4],[5,7,10,-2,3,2,5,-1,8,-7,-2,6],[-2,-5,1,3,-9,-5,-10,-6,4,-4,3,-10],[-7,-5,-3,-3,8,-1,7,-7,6,-3,-9,-9],[8,-4,9,1,-2,-5,9,-7,3,-6,-3,7],[4,-4,-1,-6,6,-2,-5,-3,9,-9,5,5],[-5,10,-1,7,-9,8,6,10,7,9,5,8],[-1,2,4,-3,6,9,10,-5,-7,-8,-1,6],[-10,-10,8,-9,-5,-4,8,-10,-1,-4,-4,-10],[3,5,10,-2,8,-5,7,7,5,-3,-7,7],[-1,-8,9,-6,-10,6,4,-10,9,-1,9,10],[-7,7,3,3,3,9,-3,-6,-7,3,-2,6],[-8,10,2,9,3,5,-10,-2,-10,-6,-7,6],[-5,-7,-1,8,7,5,8,-1,2,6,4,4]],[[8,-7,-2,-9,1,4,9,1,2,7,2,2],[2,5,-6,10,-10,-1,1,9,-7,5,-5,-2],[-2,8,5,-9,7,-4,4,-9,2,-7,1,6],[9,4,10,2,4,-8,-9,7,1,-9,7,9],[9,2,-4,-7,-2,6,6,-3,-7,9,-6,-1],[10,-1,-9,4,-8,7,-5,-2,5,8,-7,2],[-2,9,-9,-6,-2,4,7,9,-6,-5,3,7],[-7,-1,-6,8,4,-5,-10,2,7,-3,-5,2],[-1,2,6,3,-4,8,9,-7,7,-8,2,9],[7,8,4,-1,6,-10,3,-6,2,-7,3,-8],[4,7,7,9,-10,5,-6,-3,-10,-5,-8,9],[6,-1,-8,9,-6,-1,-6,6,-7,2,-7,-6],[-7,9,-1,-5,4,7,-6,3,-5,-4,5,7],[-9,7,-5,3,5,9,-10,-4,4,-4,8,-2],[-4,-3,6,-4,10,-1,6,9,5,7,4,-10]],[[5,-9,-3,-5,9,7,6,10,-5,-1,6,2],[9,9,-3,2,-2,10,-5,-2,2,10,3,4],[-5,-8,-6,-4,-10,-8,1,10,2,9,-6,2],[4,-6,3,4,-6,9,-3,-6,-6,-5,-4,-10],[-6,4,2,9,-7,5,-4,6,-1,1,7,-6],[-10,10,9,-2,1,-6,1,10,-10,-6,4,-2],[6,-1,-1,-6,10,-6,-5,4,2,2,-7,1],[-9,-10,8,10,-5,7,-7,-6,-6,-6,1,-1],[-9,-8,7,-4,4,-9,-5,-6,-7,-6,-5,-1],[-7,4,-6,4,-7,-4,10,9,1,8,-7,6],[-1,-8,9,7,-8,-5,-5,-2,1,-9,3,7],[-7,9,3,-6,10,-9,5,6,-7,10,9,-6],[-9,1,2,7,5,1,-3,-10,-5,3,-7,5],[-9,-5,8,-9,6,-8,-8,-8,-1,10,-8,-9],[1,2,1,1,-4,-8,-10,9,7,-6,2,-7]],[[-5,-9,7,-5,-9,6,6,-10,6,3,5,3],[9,6,-5,6,-7,-2,-4,3,-6,5,-8,6],[-5,1,-1,3,-6,-3,1,1,-6,-2,-2,4],[-6,3,8,-8,-8,-4,-5,-9,5,4,-1,3],[9,-8,2,2,2,2,3,-2,10,10,-2,-10],[10,10,10,1,-9,-4,-10,9,-10,-2,2,3],[-10,1,1,7,-5,7,10,-7,-4,2,-5,-5],[-3,-7,-3,-10,3,-2,-3,10,-8,3,2,1],[-9,1,5,9,5,4,8,10,7,10,5,-8],[-6,4,-3,5,7,7,5,1,-4,9,-1,5],[-3,8,4,2,8,-7,1,2,9,-10,-7,-4],[6,-5,2,-4,5,-4,7,9,10,-6,-10,-8],[10,-3,1,-10,-3,-3,-6,-2,9,10,-2,1],[6,2,10,5,10,-8,7,9,4,-7,-10,-9],[-6,5,9,9,-7,-1,5,-6,-4,-7,2,-3]],[[7,-5,8,6,-5,2,-10,1,-6,-4,-8,7],[3,-5,7,3,7,-2,4,-10,8,-4,7,-6],[10,3,8,-2,-3,10,-6,-5,-9,-1,-5,-1],[-5,1,-2,4,-7,-10,8,-10,2,2,-10,-2],[-3,3,3,1,1,-9,-1,7,-9,-6,10,7],[-5,1,-5,-8,7,8,-7,8,-3,5,8,-5],[-8,6,-7,3,2,-9,8,-7,9,4,4,-8],[-9,-2,-2,5,-8,-1,4,6,7,-4,3,7],[-9,-9,-3,2,9,-8,-3,-2,-4,5,-8,-3],[-4,-7,10,-8,7,2,6,1,-9,6,-1,-2],[-3,10,-6,6,10,9,-9,9,-8,-5,6,-8],[4,9,-4,8,-8,9,-3,-7,10,5,5,-7],[-4,5,-8,-6,-9,-8,6,10,-6,9,6,4],[-2,-7,-2,7,-7,-9,7,7,-10,7,-1,-9],[10,6,-4,3,-1,2,-5,1,-1,-6,6,4]],[[-8,-10,-10,6,9,-7,4,10,10,-9,8,4],[-2,8,4,2,3,-3,-4,-4,-2,-7,-8,-2],[-6,-3,2,-6,8,10,5,5,5,4,6,-2],[8,-5,-4,-5,7,-5,-7,-1,4,-8,5,-1],[-3,10,3,-10,-1,7,9,6,-2,-4,3,-4],[9,7,7,-6,1,2,10,-4,6,-6,3,-10],[6,-2,1,5,-9,-6,8,-9,-8,4,-4,8],[-10,-4,10,-8,1,-3,-9,2,1,-4,-2,10],[7,-9,-4,2,3,7,-3,-8,-8,-5,-1,4],[-9,-3,-5,-2,-8,-5,7,-4,-5,-4,9,-1],[6,3,6,-9,8,-5,-4,-5,-9,-5,-8,-7],[-2,-1,4,10,-9,7,-4,2,10,-5,6,9],[8,2,-2,9,1,-9,-2,-4,3,8,-10,9],[8,6,-2,9,-8,-8,-1,6,-6,6,-3,-1],[-4,4,-9,-3,7,-3,2,-10,5,1,-4,-8]],[[10,-10,-6,9,-10,-1,-6,-8,-4,1,-4,-8],[-9,-7,-6,3,2,-10,6,8,4,5,-6,4],[-5,-7,6,-2,-4,7,-5,-9,6,5,1,-8],[-5,-7,-7,10,-6,2,2,-8,-2,-10,7,-6],[-7,5,-6,-2,-7,1,-10,7,-8,7,-5,-10],[-9,-6,8,-9,4,-2,6,-9,-3,-6,-1,-8],[-4,-3,-1,5,-3,-6,4,-5,-1,9,3,2],[-8,10,3,-10,-4,-5,-6,-6,-3,10,-10,-6],[-4,-10,-2,-4,1,2,3,-1,5,-1,-6,9],[-9,-7,-4,2,9,-6,2,-1,-5,5,7,4],[-1,4,-1,-7,4,1,-8,-7,-3,-7,-2,-8],[-3,4,8,-1,-4,-6,-10,7,-8,3,1,2],[2,9,-10,-2,9,-3,5,-5,1,-5,-4,-4],[-1,8,-6,8,-2,3,-5,6,-2,-2,-5,7],[10,-6,6,-7,-8,1,-9,-3,7,4,-2,5]],[[-9,2,-5,9,-2,-10,-6,5,3,-7,4,-3],[7,-2,-8,-4,3,-3,6,-2,9,-7,8,-1],[10,3,-10,-5,-6,6,4,-10,-6,5,-9,2],[-10,4,-3,-1,5,-4,-2,1,-6,1,9,-6],[6,-8,-8,-4,-9,8,-5,4,-3,-4,9,-3],[4,-4,-7,1,10,10,-10,-8,-3,3,-5,8],[5,-3,9,9,3,-10,4,4,1,-3,8,-1],[8,-1,-1,1,2,10,3,7,-3,-4,8,-10],[-2,9,-6,1,6,-7,2,3,-3,7,4,-9],[3,-3,-3,-8,-8,5,9,10,-9,-2,-4,-8],[8,2,-1,9,6,3,-9,-4,-1,-2,8,-8],[8,9,5,-8,5,6,-1,-10,-9,6,-5,6],[3,8,10,8,6,-8,7,7,-6,-7,-8,-3],[1,4,2,-4,7,-6,-10,3,-6,-10,-8,6],[-9,-8,4,-3,-1,-3,-8,9,10,2,-4,5]]], dtype = "uint32")#candidate|546|(10, 15, 12)|const|uint32
bop_547 = relay.less_equal(var_545.astype('bool'), relay.reshape(const_546.astype('bool'), relay.shape_of(var_545))) # shape=(10, 15, 12)
func_357_call = mod.get_global_var('func_357')
func_359_call = mutated_mod.get_global_var('func_359')
call_550 = relay.TupleGetItem(func_357_call(), 0)
call_551 = relay.TupleGetItem(func_359_call(), 0)
output = relay.Tuple([bop_547,call_550,])
output2 = relay.Tuple([bop_547,call_551,])
func_554 = relay.Function([var_545,], output)
mod['func_554'] = func_554
mod = relay.transform.InferType()(mod)
mutated_mod['func_554'] = func_554
mutated_mod = relay.transform.InferType()(mutated_mod)
var_555 = relay.var("var_555", dtype = "uint32", shape = (10, 15, 12))#candidate|555|(10, 15, 12)|var|uint32
func_554_call = mutated_mod.get_global_var('func_554')
call_556 = func_554_call(var_555)
output = call_556
func_557 = relay.Function([var_555], output)
mutated_mod['func_557'] = func_557
mutated_mod = relay.transform.InferType()(mutated_mod)
func_525_call = mod.get_global_var('func_525')
func_527_call = mutated_mod.get_global_var('func_527')
call_595 = func_525_call()
call_596 = func_525_call()
output = call_595
output2 = call_596
func_597 = relay.Function([], output)
mod['func_597'] = func_597
mod = relay.transform.InferType()(mod)
output = func_597()
func_598 = relay.Function([], output)
mutated_mod['func_598'] = func_598
mutated_mod = relay.transform.InferType()(mutated_mod)
const_612 = relay.const(0.623202, dtype = "float32")#candidate|612|()|const|float32
var_613 = relay.var("var_613", dtype = "float32", shape = (6, 11, 4))#candidate|613|(6, 11, 4)|var|float32
bop_614 = relay.minimum(const_612.astype('float32'), var_613.astype('float32')) # shape=(6, 11, 4)
output = relay.Tuple([bop_614,])
output2 = relay.Tuple([bop_614,])
func_626 = relay.Function([var_613,], output)
mod['func_626'] = func_626
mod = relay.transform.InferType()(mod)
mutated_mod['func_626'] = func_626
mutated_mod = relay.transform.InferType()(mutated_mod)
var_627 = relay.var("var_627", dtype = "float32", shape = (6, 11, 4))#candidate|627|(6, 11, 4)|var|float32
func_626_call = mutated_mod.get_global_var('func_626')
call_628 = func_626_call(var_627)
output = call_628
func_629 = relay.Function([var_627], output)
mutated_mod['func_629'] = func_629
mutated_mod = relay.transform.InferType()(mutated_mod)
func_109_call = mod.get_global_var('func_109')
func_111_call = mutated_mod.get_global_var('func_111')
call_672 = relay.TupleGetItem(func_109_call(), 0)
call_673 = relay.TupleGetItem(func_111_call(), 0)
func_554_call = mod.get_global_var('func_554')
func_557_call = mutated_mod.get_global_var('func_557')
const_687 = relay.const([[7,1,-5,3,-1,-7,2,-8,9,4,-5,8,-8,-6,5,5,-8,-7,1,6,-6,2,-8,-1,-10,-1,-7,-10,10,-8,-4,8,-1,6,7,-3,4,5,6,1,10,-3,-10,1,-7,-6,4,-2,9,7,1,-10,-7,-6,-10,9,8,-8,4,-10,-10,1,-8,-9,2,-4,-7,-5,1,7,2,-3,9,1,-3,-2,5,7,6,-4,-5,1,-5,8,10,9,-1,-2,-4,-4,4,-1,9,6,-5,4,-1,2,1,-3],[-5,-5,-3,-9,-2,5,8,8,-4,-3,-7,1,-3,-3,2,9,6,-8,-3,-9,9,-2,10,6,-6,-6,-7,-8,-9,9,7,-3,-2,-4,-7,1,-7,-2,-4,-4,9,-1,7,9,2,-9,5,-2,2,-1,6,-4,-4,-1,-7,9,7,2,-1,9,-10,10,2,-2,5,3,5,8,6,-10,-6,-8,-8,4,5,1,-6,3,-3,4,10,1,7,-7,-1,-7,-5,-10,7,-4,-9,-10,-6,-5,-9,8,6,-7,1,7],[2,-6,1,3,2,-2,10,6,-6,6,-9,7,4,-10,9,-6,3,1,10,2,9,2,6,7,10,9,10,7,-1,10,6,4,-7,-3,-9,10,-1,-9,-2,-10,2,4,-5,-5,-7,6,-10,-3,5,6,5,2,-8,-2,7,-3,-9,-10,-5,1,-1,-5,7,-10,8,-6,1,8,7,8,-1,-3,-9,7,10,-7,-6,2,2,6,5,2,8,-5,-1,-8,-5,3,4,7,-9,-4,7,-6,5,1,-6,8,-5,10],[8,-8,-1,-9,2,-10,2,-4,10,-10,-4,7,-5,5,-9,-8,2,-2,-7,-9,-8,-10,1,-9,-3,-7,9,-8,-10,8,7,6,2,-4,10,-9,-2,-9,2,5,-7,6,-6,-4,-9,-4,6,8,2,8,7,2,-8,-4,1,8,2,5,10,4,2,6,10,8,7,-5,7,6,8,-6,1,-6,7,3,-5,-7,-5,-4,6,-8,-2,-1,-10,-4,9,9,3,-5,9,8,-4,-10,7,-5,-10,7,-8,10,-5,8],[2,4,-3,6,6,7,-10,-7,4,9,7,-5,4,4,-2,3,-10,-1,-5,-6,-2,9,1,-8,-9,9,3,-2,-1,-6,9,-7,8,1,-7,-4,-1,1,-10,8,-6,-7,3,5,6,-9,3,-3,5,4,-2,-3,1,8,2,3,5,6,9,-5,5,7,1,-8,-5,-10,-3,1,-6,-7,7,8,-10,-3,6,-4,-4,-10,1,3,2,-5,8,-1,7,3,-8,9,5,-8,9,-3,-3,8,-3,-1,6,-10,-2,-9],[8,4,-4,5,4,-2,5,6,10,-1,-6,-8,6,9,8,6,9,-4,-2,2,-4,9,-2,5,-10,3,-1,-2,-8,7,-6,-5,-3,-10,8,1,6,1,-6,10,-5,3,3,-2,-6,-10,-2,-9,-4,1,1,-3,-1,-7,-1,4,9,1,-3,-6,4,3,-10,2,-1,5,-5,1,5,3,-4,-5,4,-6,10,8,-7,-9,-3,-3,4,-6,-10,-4,-6,2,-4,4,2,-7,-1,8,5,-9,8,3,-9,10,-8,4],[-1,-4,3,5,8,-10,8,-1,5,3,1,7,7,-1,2,-10,6,-8,-4,6,6,4,-4,-10,6,-4,1,9,9,-4,-9,-3,-10,4,5,-7,6,6,-6,-8,-8,-9,4,-9,-2,-3,9,6,7,5,-1,-3,-4,6,-3,-10,7,-4,-1,-3,7,-4,3,8,-1,4,-3,-9,-5,-7,-9,3,-8,6,-9,-2,4,1,-5,9,-1,-10,-7,-3,3,-3,7,-6,-3,6,-1,6,-4,5,7,-7,-5,3,5,-8],[-6,-9,-7,9,9,-1,6,6,-6,9,-4,-10,-3,-5,-10,5,4,-8,2,2,-7,-10,2,-10,8,10,8,-5,6,9,2,2,9,8,1,3,-5,-8,-2,5,-10,3,6,8,9,8,1,-9,9,-4,-1,8,-1,-3,7,-2,-3,-6,5,3,-1,-7,-10,-3,-8,-9,3,5,4,-4,7,1,-2,-1,10,3,6,4,-6,6,3,3,5,-1,-7,1,2,4,-8,1,10,9,-3,5,-9,5,8,-9,7,1],[4,6,5,-10,-6,3,4,-5,5,6,8,-6,-1,-9,-5,-10,6,7,-7,-6,-7,-2,-1,7,4,-7,-7,1,10,-4,-2,-7,2,2,10,-6,-7,9,-3,3,2,-2,-5,-6,-4,-3,7,-7,-4,10,-8,-3,3,4,-8,5,-9,10,-1,2,-7,2,-2,4,-9,-10,-1,2,4,-1,-3,4,-5,-9,-1,10,3,-1,-2,-1,-9,7,-3,-5,-5,1,3,1,2,-4,8,-8,-5,-7,3,-9,-8,-2,7,10],[-4,-9,10,4,-1,-4,2,1,-2,8,6,-8,6,-7,-7,-3,2,7,6,-4,2,6,-10,3,7,9,-9,-10,-9,7,4,7,6,7,-7,-8,1,-5,3,4,9,5,-10,-4,10,3,3,-1,5,-10,-1,1,2,-2,4,-9,9,3,-9,-6,-10,6,-10,2,-6,-8,-1,-8,7,-10,-8,-5,4,-6,-7,-1,-3,10,-3,1,-5,6,-9,8,8,8,8,-3,-3,3,-1,-7,-3,-8,-7,6,7,7,8,-4],[3,2,-5,-4,-4,-6,-3,-7,-10,-3,-3,1,2,-6,1,-7,-9,-8,6,3,-8,2,4,8,-4,10,-1,-7,-9,3,10,6,3,-6,-3,6,1,-5,-9,8,-5,1,1,10,1,-10,7,4,10,-6,10,6,-2,-6,-5,2,-3,9,3,4,5,6,-1,-2,10,-6,2,4,5,2,-2,-2,-9,1,-10,-5,2,-7,-2,4,8,4,3,1,8,8,8,-7,10,-9,6,5,5,-8,2,-1,-5,-8,3,-8],[3,-2,-7,9,8,8,-4,-9,7,-8,-3,-9,3,9,-9,8,-3,6,-9,7,-5,-1,-8,-9,-10,-3,-5,-3,2,-8,-9,4,5,1,-4,-1,-5,-7,-3,-9,-3,-7,-7,-1,-4,-1,-3,4,6,2,-4,-1,3,4,-4,10,5,8,-2,2,-5,-7,-1,-6,6,9,1,1,-7,2,7,-7,-1,-8,-3,7,5,-6,-6,-3,2,-4,-1,-9,-1,-8,-2,5,-1,6,-3,-1,10,-5,2,9,-10,-1,2,-9],[-10,5,5,7,1,9,-10,-2,-10,7,7,-7,10,9,-7,-9,7,-1,2,-8,3,8,-8,2,-7,9,4,2,6,-10,-10,-2,-10,9,10,6,-5,-7,-5,10,-9,-8,6,10,9,-7,-8,-6,-3,-10,-2,-8,-1,9,-5,7,-9,8,-3,9,8,-1,-6,-5,-3,2,3,4,5,7,-4,6,9,9,2,-4,-6,9,3,1,-10,3,2,-9,-1,-9,-1,6,-8,-2,3,-1,2,-10,-3,-2,3,8,1,4],[-4,-6,-7,8,7,6,-7,-8,-8,-5,9,-5,3,8,3,-7,-3,5,-7,-5,-3,6,-9,-9,3,7,-3,4,8,-1,2,-9,3,8,6,-4,-6,9,5,10,3,-3,10,2,7,-10,-9,7,2,2,9,-7,6,-8,-3,2,6,2,-1,5,-6,-1,3,-9,-3,2,-6,-7,-4,-5,3,-5,-1,6,-9,-1,5,2,-10,-2,-3,-5,5,1,-8,10,-2,-2,-2,-6,-1,-8,1,-4,-2,-5,3,3,-5,9],[9,-5,-4,5,-7,-7,-1,5,-6,4,5,2,-3,-6,-9,10,-4,-10,-1,-2,-7,-7,3,-10,-10,6,6,-3,-3,7,-4,10,3,-6,-7,5,7,-2,-3,-9,7,-8,5,3,-2,2,9,-4,3,9,8,2,7,6,-6,-2,-2,5,-4,5,-9,4,8,2,-7,1,-6,-1,-7,-10,-3,6,-5,-1,9,8,5,-8,9,-6,1,-6,-10,-8,3,2,4,-1,10,9,8,-7,-9,-7,5,9,-9,-2,1,10],[10,1,-1,-3,4,10,1,-6,4,-3,5,4,-6,-6,6,10,-7,10,-3,9,-4,1,6,-8,-9,9,2,1,-10,2,3,2,4,10,-4,7,5,5,-3,2,-5,-7,6,4,7,10,9,1,-3,-3,7,-4,5,-6,4,2,10,-6,-9,2,6,5,-5,1,7,-4,-3,9,-10,8,-2,5,10,-10,-4,5,4,7,6,7,3,8,-2,6,1,-7,-6,6,-6,7,9,-1,-1,10,8,1,-9,-9,-7,2],[-1,-2,1,-5,6,-10,3,8,2,3,5,1,-6,-4,7,2,5,7,4,5,-3,7,-6,1,-10,8,-2,-1,1,-1,1,6,-9,-2,-4,-7,1,4,6,5,-4,3,-4,-2,10,-3,1,7,-4,-5,5,9,3,-5,-1,-6,5,-10,-6,4,-8,-8,-8,-8,-1,5,4,-2,-5,5,9,-2,-5,-3,-5,-8,6,1,-3,10,-2,10,7,3,10,10,1,4,-2,-6,8,1,2,-9,3,-8,2,-10,-3,1],[-3,5,-2,-10,9,-3,-2,10,6,-8,9,-3,8,-10,-8,-4,-3,-7,-9,-3,-4,5,1,-1,-3,6,-9,-2,4,-5,4,-5,2,4,-10,-2,-3,2,10,-1,-6,-4,-9,9,-8,-8,-8,1,-7,-1,-10,-1,8,7,9,-3,-8,-10,-5,10,7,-8,-3,5,4,4,9,-6,-1,8,-4,6,10,-9,-7,8,9,7,7,-1,-9,4,4,-6,-5,-6,-5,-3,8,-8,2,-9,4,-4,-7,1,-2,4,4,-1]], dtype = "uint32")#candidate|687|(18, 100)|const|uint32
call_686 = relay.TupleGetItem(func_554_call(relay.reshape(const_687.astype('uint32'), [10, 15, 12])), 0)
call_688 = relay.TupleGetItem(func_557_call(relay.reshape(const_687.astype('uint32'), [10, 15, 12])), 0)
output = relay.Tuple([call_672,call_686,const_687,])
output2 = relay.Tuple([call_673,call_688,const_687,])
func_692 = relay.Function([], output)
mod['func_692'] = func_692
mod = relay.transform.InferType()(mod)
output = func_692()
func_693 = relay.Function([], output)
mutated_mod['func_693'] = func_693
mutated_mod = relay.transform.InferType()(mutated_mod)
func_597_call = mod.get_global_var('func_597')
func_598_call = mutated_mod.get_global_var('func_598')
call_712 = func_597_call()
call_713 = func_597_call()
var_718 = relay.var("var_718", dtype = "float32", shape = (3, 7, 12))#candidate|718|(3, 7, 12)|var|float32
bop_719 = relay.power(call_712.astype('float32'), relay.reshape(var_718.astype('float32'), relay.shape_of(call_712))) # shape=(3, 7, 12)
bop_722 = relay.power(call_713.astype('float32'), relay.reshape(var_718.astype('float32'), relay.shape_of(call_713))) # shape=(3, 7, 12)
var_724 = relay.var("var_724", dtype = "float32", shape = (3, 7, 12))#candidate|724|(3, 7, 12)|var|float32
bop_725 = relay.greater_equal(bop_719.astype('bool'), relay.reshape(var_724.astype('bool'), relay.shape_of(bop_719))) # shape=(3, 7, 12)
bop_728 = relay.greater_equal(bop_722.astype('bool'), relay.reshape(var_724.astype('bool'), relay.shape_of(bop_722))) # shape=(3, 7, 12)
func_626_call = mod.get_global_var('func_626')
func_629_call = mutated_mod.get_global_var('func_629')
const_742 = relay.const([5.976806,-7.213596,6.683005,-3.620311,-9.152915,2.346016,-1.463762,-0.791017,4.238460,3.596926,-3.973604,-6.996278,5.708228,-6.849000,8.127329,-5.234554,-5.836847,2.774369,-3.039595,-0.861321,-1.220782,-5.286020,-3.148144,-9.345396,8.692404,2.407934,6.095389,6.399142,-8.185964,3.086108,-0.577135,8.715787,-1.163093,-5.255055,-5.082777,1.739483,-5.046248,2.994594,6.156167,-3.101200,-2.961332,-2.469106,9.381613,-2.516621,9.699622,5.760810,3.659245,-7.264414,-2.699422,7.675712,5.042125,0.401639,-4.301193,6.647982,-8.138743,-4.035510,9.125191,-4.078123,5.946143,-5.899484,1.071081,-6.515076,-8.167357,-3.078750,0.900247,3.019646,1.283733,-7.201992,-0.616606,1.349969,-1.166475,1.998969,-7.214882,-4.209464,-3.511012,-8.014350,6.825542,3.970124,6.385194,-1.623371,6.969095,-1.874779,-8.151938,-5.304649,-3.902080,9.273177,-8.055972,-9.035505,1.012871,-0.155264,2.279051,4.492542,2.957238,9.224804,-9.815365,4.672287,1.123546,-5.105229,-7.035136,-6.801076,-5.184537,4.747705,-6.183041,8.406769,9.921947,-6.344992,-3.634770,9.801935,-6.871362,1.031652,-0.858743,-6.519024,-4.544514,9.339449,4.056988,6.649182,5.236749,-3.467606,-7.637155,6.164201,6.310753,-3.851193,6.256004,0.980809,-1.084867,9.823819,7.422965,2.049936,-5.463120,9.011611,-0.674850,-0.823832,1.924477,-1.379857,-0.679939,8.001569,5.678005,-1.397582,2.524278,-5.017149,-2.092549,-8.176695,3.594291,8.657963,-6.022489,3.337146,6.221583,0.548923,7.662898,-8.532078,2.118606,2.009456,7.564363,-9.568818,-5.038103,0.198298,-0.511302,-1.188892,2.868139,2.604318,-7.391072,-8.893233,-2.409834,3.409813,0.612922,-9.409911,0.658281,6.915662,2.913984,-0.069208,-4.195428,-8.859068,3.245686,-0.592836,-4.974499,5.468406,9.356119,-4.659365,7.543820,7.337208,4.548446,4.263211,4.259474,0.581235,-8.932949,-2.834318,0.134259,6.705952,-5.870168,6.291405,-6.598647,6.570439,6.636871,9.229751,8.573731,0.194300,-2.318426,-1.933362,-4.554475,-1.837943,0.813111,4.391426,3.415652,1.339824,8.961731,-6.047186,9.871911,6.621886,6.571675,8.402268,5.085360,4.980046,-5.388695,7.765110,-7.573507,3.169806,6.511404,-4.816380,-9.487093,-8.708286,9.674571,2.611962,-5.096643,3.351499,0.855259,4.986460,3.204492,4.324198,-0.109804,-7.211680,-7.773393,-0.846638,7.165579,1.230844,-0.834530,8.632792,-1.517466,8.480968,8.309035,0.681942,9.600710,1.982417,8.701372,-2.918354,4.910573,-5.984756,9.425132,0.250370,-9.067353,-5.417832,-6.630204,-2.151865,-7.287054,-5.338860,-8.995681,-2.093048,-2.186519,-6.395803,-9.374733,7.378809,-0.814824,-1.757601,-7.345738,-7.673673], dtype = "float32")#candidate|742|(264,)|const|float32
call_741 = relay.TupleGetItem(func_626_call(relay.reshape(const_742.astype('float32'), [6, 11, 4])), 0)
call_743 = relay.TupleGetItem(func_629_call(relay.reshape(const_742.astype('float32'), [6, 11, 4])), 0)
var_749 = relay.var("var_749", dtype = "bool", shape = (3, 7, 12))#candidate|749|(3, 7, 12)|var|bool
bop_750 = relay.bitwise_or(bop_725.astype('uint16'), relay.reshape(var_749.astype('uint16'), relay.shape_of(bop_725))) # shape=(3, 7, 12)
bop_753 = relay.bitwise_or(bop_728.astype('uint16'), relay.reshape(var_749.astype('uint16'), relay.shape_of(bop_728))) # shape=(3, 7, 12)
var_758 = relay.var("var_758", dtype = "float32", shape = (3, 7, 12))#candidate|758|(3, 7, 12)|var|float32
bop_759 = relay.logical_and(var_718.astype('bool'), relay.reshape(var_758.astype('bool'), relay.shape_of(var_718))) # shape=(3, 7, 12)
output = relay.Tuple([call_741,const_742,bop_750,bop_759,])
output2 = relay.Tuple([call_743,const_742,bop_753,bop_759,])
func_769 = relay.Function([var_718,var_724,var_749,var_758,], output)
mod['func_769'] = func_769
mod = relay.transform.InferType()(mod)
mutated_mod['func_769'] = func_769
mutated_mod = relay.transform.InferType()(mutated_mod)
func_769_call = mutated_mod.get_global_var('func_769')
var_771 = relay.var("var_771", dtype = "float32", shape = (3, 7, 12))#candidate|771|(3, 7, 12)|var|float32
var_772 = relay.var("var_772", dtype = "float32", shape = (3, 7, 12))#candidate|772|(3, 7, 12)|var|float32
var_773 = relay.var("var_773", dtype = "bool", shape = (3, 7, 12))#candidate|773|(3, 7, 12)|var|bool
var_774 = relay.var("var_774", dtype = "float32", shape = (3, 7, 12))#candidate|774|(3, 7, 12)|var|float32
call_770 = func_769_call(var_771,var_772,var_773,var_774,)
output = call_770
func_775 = relay.Function([var_771,var_772,var_773,var_774,], output)
mutated_mod['func_775'] = func_775
mutated_mod = relay.transform.InferType()(mutated_mod)
func_357_call = mod.get_global_var('func_357')
func_359_call = mutated_mod.get_global_var('func_359')
call_785 = relay.TupleGetItem(func_357_call(), 1)
call_786 = relay.TupleGetItem(func_359_call(), 1)
output = relay.Tuple([call_785,])
output2 = relay.Tuple([call_786,])
func_799 = relay.Function([], output)
mod['func_799'] = func_799
mod = relay.transform.InferType()(mod)
mutated_mod['func_799'] = func_799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_799_call = mutated_mod.get_global_var('func_799')
call_800 = func_799_call()
output = call_800
func_801 = relay.Function([], output)
mutated_mod['func_801'] = func_801
mutated_mod = relay.transform.InferType()(mutated_mod)
var_828 = relay.var("var_828", dtype = "float64", shape = (5, 10))#candidate|828|(5, 10)|var|float64
uop_829 = relay.log(var_828.astype('float64')) # shape=(5, 10)
output = uop_829
output2 = uop_829
func_835 = relay.Function([var_828,], output)
mod['func_835'] = func_835
mod = relay.transform.InferType()(mod)
var_836 = relay.var("var_836", dtype = "float64", shape = (5, 10))#candidate|836|(5, 10)|var|float64
output = func_835(var_836)
func_837 = relay.Function([var_836], output)
mutated_mod['func_837'] = func_837
mutated_mod = relay.transform.InferType()(mutated_mod)
func_597_call = mod.get_global_var('func_597')
func_598_call = mutated_mod.get_global_var('func_598')
call_842 = func_597_call()
call_843 = func_597_call()
output = relay.Tuple([call_842,])
output2 = relay.Tuple([call_843,])
func_851 = relay.Function([], output)
mod['func_851'] = func_851
mod = relay.transform.InferType()(mod)
output = func_851()
func_852 = relay.Function([], output)
mutated_mod['func_852'] = func_852
mutated_mod = relay.transform.InferType()(mutated_mod)
var_869 = relay.var("var_869", dtype = "float64", shape = (5, 3, 6))#candidate|869|(5, 3, 6)|var|float64
uop_870 = relay.acosh(var_869.astype('float64')) # shape=(5, 3, 6)
func_851_call = mod.get_global_var('func_851')
func_852_call = mutated_mod.get_global_var('func_852')
call_875 = relay.TupleGetItem(func_851_call(), 0)
call_876 = relay.TupleGetItem(func_852_call(), 0)
uop_878 = relay.rsqrt(var_869.astype('float32')) # shape=(5, 3, 6)
func_692_call = mod.get_global_var('func_692')
func_693_call = mutated_mod.get_global_var('func_693')
call_883 = relay.TupleGetItem(func_692_call(), 2)
call_884 = relay.TupleGetItem(func_693_call(), 2)
uop_890 = relay.sinh(uop_870.astype('float32')) # shape=(5, 3, 6)
uop_896 = relay.asin(call_875.astype('float32')) # shape=(3, 7, 12)
uop_898 = relay.asin(call_876.astype('float32')) # shape=(3, 7, 12)
uop_905 = relay.asin(var_869.astype('float64')) # shape=(5, 3, 6)
var_912 = relay.var("var_912", dtype = "float32", shape = (5, 3, 6))#candidate|912|(5, 3, 6)|var|float32
bop_913 = relay.power(uop_890.astype('float32'), relay.reshape(var_912.astype('float32'), relay.shape_of(uop_890))) # shape=(5, 3, 6)
bop_920 = relay.subtract(call_875.astype('float64'), relay.reshape(uop_896.astype('float64'), relay.shape_of(call_875))) # shape=(3, 7, 12)
bop_923 = relay.subtract(call_876.astype('float64'), relay.reshape(uop_898.astype('float64'), relay.shape_of(call_876))) # shape=(3, 7, 12)
output = relay.Tuple([uop_878,call_883,uop_905,bop_913,bop_920,])
output2 = relay.Tuple([uop_878,call_884,uop_905,bop_913,bop_923,])
func_924 = relay.Function([var_869,var_912,], output)
mod['func_924'] = func_924
mod = relay.transform.InferType()(mod)
mutated_mod['func_924'] = func_924
mutated_mod = relay.transform.InferType()(mutated_mod)
func_924_call = mutated_mod.get_global_var('func_924')
var_926 = relay.var("var_926", dtype = "float64", shape = (5, 3, 6))#candidate|926|(5, 3, 6)|var|float64
var_927 = relay.var("var_927", dtype = "float32", shape = (5, 3, 6))#candidate|927|(5, 3, 6)|var|float32
call_925 = func_924_call(var_926,var_927,)
output = call_925
func_928 = relay.Function([var_926,var_927,], output)
mutated_mod['func_928'] = func_928
mutated_mod = relay.transform.InferType()(mutated_mod)
func_692_call = mod.get_global_var('func_692')
func_693_call = mutated_mod.get_global_var('func_693')
call_934 = relay.TupleGetItem(func_692_call(), 1)
call_935 = relay.TupleGetItem(func_693_call(), 1)
func_924_call = mod.get_global_var('func_924')
func_928_call = mutated_mod.get_global_var('func_928')
const_954 = relay.const([6.247387,2.440205,8.003551,-1.007895,-3.593102,2.038478,0.983252,-5.603657,-6.533939,2.134571,3.354019,-9.909731,-3.082964,2.964329,0.713235,-7.132626,-2.976554,-9.390257,6.816092,-5.075157,-6.081839,-2.843330,-2.658644,6.582118,7.179734,3.057940,-9.892060,-8.431544,-2.723749,2.329229,6.117995,-4.392886,0.225326,4.055365,-8.442010,-2.529306,0.649114,-8.461827,-5.643594,-2.862114,-3.718583,-5.383398,0.103194,-5.927293,-1.285193,-1.166112,8.921872,9.166147,3.969230,7.382442,-6.286586,-7.262317,-5.115374,-6.293118,7.775095,-6.776436,-1.993948,-8.937415,0.487898,1.505586,-2.561083,7.963344,7.171835,-4.065183,4.577746,-4.735271,-7.707794,-4.017516,7.226653,3.596318,9.123208,-0.568405,-7.316285,-6.622345,7.984321,0.953768,3.164344,8.238743,9.232887,2.856505,6.468057,6.917521,-9.222005,6.448269,-7.386622,-2.841336,-1.048263,2.012793,-6.949210,0.806369], dtype = "float64")#candidate|954|(90,)|const|float64
call_953 = relay.TupleGetItem(func_924_call(relay.reshape(const_954.astype('float64'), [5, 3, 6]), relay.reshape(const_954.astype('float32'), [5, 3, 6]), ), 2)
call_955 = relay.TupleGetItem(func_928_call(relay.reshape(const_954.astype('float64'), [5, 3, 6]), relay.reshape(const_954.astype('float32'), [5, 3, 6]), ), 2)
bop_956 = relay.equal(call_953.astype('bool'), relay.reshape(const_954.astype('bool'), relay.shape_of(call_953))) # shape=(5, 3, 6)
bop_959 = relay.equal(call_955.astype('bool'), relay.reshape(const_954.astype('bool'), relay.shape_of(call_955))) # shape=(5, 3, 6)
func_525_call = mod.get_global_var('func_525')
func_527_call = mutated_mod.get_global_var('func_527')
call_975 = func_525_call()
call_976 = func_525_call()
output = relay.Tuple([call_934,bop_956,call_975,])
output2 = relay.Tuple([call_935,bop_959,call_976,])
func_986 = relay.Function([], output)
mod['func_986'] = func_986
mod = relay.transform.InferType()(mod)
output = func_986()
func_987 = relay.Function([], output)
mutated_mod['func_987'] = func_987
mutated_mod = relay.transform.InferType()(mutated_mod)
const_994 = relay.const([[[-6.753000,-5.354984,3.914031,3.483575,-8.228854,6.154038,8.935560,9.883737,-0.751368,4.768060,-9.238247,1.607801,-6.067423,-2.645309,-5.461935],[-7.427331,-2.655208,1.755590,8.157759,2.262273,8.391943,-6.244358,-4.769209,6.954212,-2.042534,-2.591121,5.620726,3.513928,8.975417,7.013030],[-8.994415,0.958553,-2.645059,-9.949353,2.507327,8.871104,4.821381,7.612933,-5.549905,-1.197151,-1.481870,4.311027,-7.881511,0.176508,-6.482121],[-1.899595,-5.446274,5.018307,-3.542241,-4.466972,7.877554,3.506427,-5.220223,2.145066,2.948796,0.097920,-5.875184,7.491061,-4.960583,-4.711993]],[[-8.825712,5.460597,-6.306717,2.042181,-4.098509,1.593345,-0.989365,-7.072322,0.463247,0.294306,9.579847,-6.465906,3.385580,1.243941,4.143385],[7.081302,-2.964801,-8.896589,8.773372,1.997450,-0.640103,-3.308556,5.030758,4.908703,-5.219865,-2.030453,1.966565,1.825334,-6.909746,-1.954563],[-8.969108,7.566250,-8.165165,-8.191175,-0.621926,-5.523567,-2.915919,4.103396,5.828997,-5.813716,1.498385,-5.805190,-6.634736,9.025192,-1.046031],[-5.286212,8.323455,2.385872,4.706768,-9.083977,6.198969,-3.394254,2.922038,-6.674475,-5.090137,-1.116498,4.105904,1.136517,-5.355252,-8.128466]]], dtype = "float32")#candidate|994|(2, 4, 15)|const|float32
uop_995 = relay.acosh(const_994.astype('float32')) # shape=(2, 4, 15)
func_208_call = mod.get_global_var('func_208')
func_210_call = mutated_mod.get_global_var('func_210')
const_1003 = relay.const([-6.716007,-8.241139,-4.538293,-1.923570,-0.853311,-7.465728,9.881044,-2.823993,2.928624,4.603824,-0.378964,-1.123410,5.070301,-4.276490,6.395990,5.117133,3.934727,0.887629,0.498721,8.439911,4.847982,-4.944996,-9.744242,-6.541556,5.077414,-1.290454,7.784347,9.119388,0.975522,6.330857,5.182959,3.653824,-6.948594,-2.155812,-0.681154,5.313185,-4.049266,-5.739544,-5.149575,-7.070596,-5.169681,-2.745286,-3.523079,-3.787055,1.377251,-4.595562,-8.273073,-7.771015,-1.647866,1.632527,-7.770357,-2.781607,-0.326138,6.455428,5.975405,-3.545073,-0.889832,8.280887,-1.678950,9.333984,9.414251,-9.179716,7.945042,-6.652976,9.193149,-9.398188,0.395255,-0.472985,1.254204,-5.601550,-5.578548,-6.412489,3.365616,2.513717,1.057097,-7.240580,-0.261490,9.946243,4.373896,-7.694416,3.418276,-1.638287,1.994587,-3.948638,2.417222,-0.715806,7.906514,-4.973589,-9.895568,-2.297467,-7.822840,9.934135,5.716361,-8.173467,-2.127722,8.783920,5.742570,-3.569632,2.429645,5.603104,-1.262321,-4.014645,-6.978326,-8.472028,-6.999694,1.250430,7.772013,5.283135,7.100518,1.361689,-3.272069,4.264116,9.202987,2.678373,-9.291204,6.006511,-2.046266,-4.511584,-9.501388,9.378935,4.931919,-3.696531,7.511904,8.669146,7.489897,9.693977,9.776916,-1.698288,-0.948221,1.933938,-2.832059,4.757005,-1.981661,-7.109278,3.434870,4.390045,-8.580660,0.287822,-4.421013,-7.528369,-1.736655,7.090557,-9.990173,-6.445908,7.370233,6.113571,-5.030264,-0.032046,-9.223334,9.713307,4.126846,-0.142512,-7.001929,5.375328,-5.847297,7.234956,5.241090,-1.970076,-8.039546,1.038101,3.193503,5.568921,1.424935,-3.851898,-5.042914,8.636637,2.108487,8.189995,-7.071403,-6.268174,-3.301428,4.698304,-7.397676,0.059889,-4.055729,1.135091,9.692847,9.776371,-0.670478,-8.604755,9.666865,-2.820049,8.847189,4.649692,7.539716,-6.710037,3.471333,9.116945,-8.814118,-6.301550,8.700160,-0.266791,-6.061661,-4.642371,1.629240,-0.174326,-1.839708,0.803908,-8.018507,2.313262,-5.049421,-5.732994,9.401363,-6.663727,-4.111684,-4.010924,-7.006052,3.126111,-0.196430,4.749566,-8.695925,6.481871,0.446905,5.710799,1.830335,6.664464,-4.105666,2.109650,0.730435,3.778350,-2.468748,-2.827940,-0.718874,4.209959,5.554685,2.780374,-0.307326,-8.091419,9.871668,-3.410871,8.512821,5.794725,1.488853,7.786036,-9.909395,-5.226638,1.913589,6.616473,-4.591315,-7.292013], dtype = "float32")#candidate|1003|(240,)|const|float32
call_1002 = relay.TupleGetItem(func_208_call(relay.reshape(const_1003.astype('float32'), [5, 12, 4])), 1)
call_1004 = relay.TupleGetItem(func_210_call(relay.reshape(const_1003.astype('float32'), [5, 12, 4])), 1)
func_208_call = mod.get_global_var('func_208')
func_210_call = mutated_mod.get_global_var('func_210')
call_1010 = relay.TupleGetItem(func_208_call(relay.reshape(call_1002.astype('float32'), [5, 12, 4])), 1)
call_1011 = relay.TupleGetItem(func_210_call(relay.reshape(call_1002.astype('float32'), [5, 12, 4])), 1)
uop_1016 = relay.acos(uop_995.astype('float64')) # shape=(2, 4, 15)
output = relay.Tuple([call_1002,const_1003,call_1010,uop_1016,])
output2 = relay.Tuple([call_1004,const_1003,call_1011,uop_1016,])
func_1020 = relay.Function([], output)
mod['func_1020'] = func_1020
mod = relay.transform.InferType()(mod)
output = func_1020()
func_1021 = relay.Function([], output)
mutated_mod['func_1021'] = func_1021
mutated_mod = relay.transform.InferType()(mutated_mod)
func_525_call = mod.get_global_var('func_525')
func_527_call = mutated_mod.get_global_var('func_527')
call_1025 = func_525_call()
call_1026 = func_525_call()
output = relay.Tuple([call_1025,])
output2 = relay.Tuple([call_1026,])
func_1028 = relay.Function([], output)
mod['func_1028'] = func_1028
mod = relay.transform.InferType()(mod)
output = func_1028()
func_1029 = relay.Function([], output)
mutated_mod['func_1029'] = func_1029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_986_call = mod.get_global_var('func_986')
func_987_call = mutated_mod.get_global_var('func_987')
call_1141 = relay.TupleGetItem(func_986_call(), 1)
call_1142 = relay.TupleGetItem(func_987_call(), 1)
output = relay.Tuple([call_1141,])
output2 = relay.Tuple([call_1142,])
func_1143 = relay.Function([], output)
mod['func_1143'] = func_1143
mod = relay.transform.InferType()(mod)
mutated_mod['func_1143'] = func_1143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1143_call = mutated_mod.get_global_var('func_1143')
call_1144 = func_1143_call()
output = call_1144
func_1145 = relay.Function([], output)
mutated_mod['func_1145'] = func_1145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_799_call = mod.get_global_var('func_799')
func_801_call = mutated_mod.get_global_var('func_801')
call_1168 = relay.TupleGetItem(func_799_call(), 0)
call_1169 = relay.TupleGetItem(func_801_call(), 0)
output = call_1168
output2 = call_1169
func_1175 = relay.Function([], output)
mod['func_1175'] = func_1175
mod = relay.transform.InferType()(mod)
output = func_1175()
func_1176 = relay.Function([], output)
mutated_mod['func_1176'] = func_1176
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1193 = relay.var("var_1193", dtype = "int32", shape = (8, 6, 16))#candidate|1193|(8, 6, 16)|var|int32
var_1194 = relay.var("var_1194", dtype = "int32", shape = (8, 6, 16))#candidate|1194|(8, 6, 16)|var|int32
bop_1195 = relay.logical_xor(var_1193.astype('int32'), relay.reshape(var_1194.astype('int32'), relay.shape_of(var_1193))) # shape=(8, 6, 16)
output = bop_1195
output2 = bop_1195
func_1208 = relay.Function([var_1193,var_1194,], output)
mod['func_1208'] = func_1208
mod = relay.transform.InferType()(mod)
mutated_mod['func_1208'] = func_1208
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1208_call = mutated_mod.get_global_var('func_1208')
var_1210 = relay.var("var_1210", dtype = "int32", shape = (8, 6, 16))#candidate|1210|(8, 6, 16)|var|int32
var_1211 = relay.var("var_1211", dtype = "int32", shape = (8, 6, 16))#candidate|1211|(8, 6, 16)|var|int32
call_1209 = func_1208_call(var_1210,var_1211,)
output = call_1209
func_1212 = relay.Function([var_1210,var_1211,], output)
mutated_mod['func_1212'] = func_1212
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1020_call = mod.get_global_var('func_1020')
func_1021_call = mutated_mod.get_global_var('func_1021')
call_1220 = relay.TupleGetItem(func_1020_call(), 1)
call_1221 = relay.TupleGetItem(func_1021_call(), 1)
output = call_1220
output2 = call_1221
func_1225 = relay.Function([], output)
mod['func_1225'] = func_1225
mod = relay.transform.InferType()(mod)
output = func_1225()
func_1226 = relay.Function([], output)
mutated_mod['func_1226'] = func_1226
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1229 = relay.const(-8, dtype = "int16")#candidate|1229|()|const|int16
var_1230 = relay.var("var_1230", dtype = "int16", shape = (2, 2, 6))#candidate|1230|(2, 2, 6)|var|int16
bop_1231 = relay.greater_equal(const_1229.astype('bool'), var_1230.astype('bool')) # shape=(2, 2, 6)
output = bop_1231
output2 = bop_1231
func_1243 = relay.Function([var_1230,], output)
mod['func_1243'] = func_1243
mod = relay.transform.InferType()(mod)
var_1244 = relay.var("var_1244", dtype = "int16", shape = (2, 2, 6))#candidate|1244|(2, 2, 6)|var|int16
output = func_1243(var_1244)
func_1245 = relay.Function([var_1244], output)
mutated_mod['func_1245'] = func_1245
mutated_mod = relay.transform.InferType()(mutated_mod)
func_986_call = mod.get_global_var('func_986')
func_987_call = mutated_mod.get_global_var('func_987')
call_1251 = relay.TupleGetItem(func_986_call(), 1)
call_1252 = relay.TupleGetItem(func_987_call(), 1)
output = relay.Tuple([call_1251,])
output2 = relay.Tuple([call_1252,])
func_1254 = relay.Function([], output)
mod['func_1254'] = func_1254
mod = relay.transform.InferType()(mod)
output = func_1254()
func_1255 = relay.Function([], output)
mutated_mod['func_1255'] = func_1255
mutated_mod = relay.transform.InferType()(mutated_mod)
func_799_call = mod.get_global_var('func_799')
func_801_call = mutated_mod.get_global_var('func_801')
call_1261 = relay.TupleGetItem(func_799_call(), 0)
call_1262 = relay.TupleGetItem(func_801_call(), 0)
output = call_1261
output2 = call_1262
func_1275 = relay.Function([], output)
mod['func_1275'] = func_1275
mod = relay.transform.InferType()(mod)
mutated_mod['func_1275'] = func_1275
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1275_call = mutated_mod.get_global_var('func_1275')
call_1276 = func_1275_call()
output = call_1276
func_1277 = relay.Function([], output)
mutated_mod['func_1277'] = func_1277
mutated_mod = relay.transform.InferType()(mutated_mod)
func_692_call = mod.get_global_var('func_692')
func_693_call = mutated_mod.get_global_var('func_693')
call_1278 = relay.TupleGetItem(func_692_call(), 2)
call_1279 = relay.TupleGetItem(func_693_call(), 2)
func_1243_call = mod.get_global_var('func_1243')
func_1245_call = mutated_mod.get_global_var('func_1245')
const_1283 = relay.const([2,-3,10,1,-1,-10,-3,1,2,7,1,-1,-10,-7,-8,7,6,4,-1,3,-2,-7,7,-6], dtype = "int16")#candidate|1283|(24,)|const|int16
call_1282 = func_1243_call(relay.reshape(const_1283.astype('int16'), [2, 2, 6]))
call_1284 = func_1243_call(relay.reshape(const_1283.astype('int16'), [2, 2, 6]))
func_1208_call = mod.get_global_var('func_1208')
func_1212_call = mutated_mod.get_global_var('func_1212')
var_1292 = relay.var("var_1292", dtype = "int32", shape = (768,))#candidate|1292|(768,)|var|int32
call_1291 = func_1208_call(relay.reshape(var_1292.astype('int32'), [8, 6, 16]), relay.reshape(var_1292.astype('int32'), [8, 6, 16]), )
call_1293 = func_1208_call(relay.reshape(var_1292.astype('int32'), [8, 6, 16]), relay.reshape(var_1292.astype('int32'), [8, 6, 16]), )
func_799_call = mod.get_global_var('func_799')
func_801_call = mutated_mod.get_global_var('func_801')
call_1305 = relay.TupleGetItem(func_799_call(), 0)
call_1306 = relay.TupleGetItem(func_801_call(), 0)
func_851_call = mod.get_global_var('func_851')
func_852_call = mutated_mod.get_global_var('func_852')
call_1320 = relay.TupleGetItem(func_851_call(), 0)
call_1321 = relay.TupleGetItem(func_852_call(), 0)
output = relay.Tuple([call_1278,call_1282,const_1283,call_1291,var_1292,call_1305,call_1320,])
output2 = relay.Tuple([call_1279,call_1284,const_1283,call_1293,var_1292,call_1306,call_1321,])
func_1324 = relay.Function([var_1292,], output)
mod['func_1324'] = func_1324
mod = relay.transform.InferType()(mod)
var_1325 = relay.var("var_1325", dtype = "int32", shape = (768,))#candidate|1325|(768,)|var|int32
output = func_1324(var_1325)
func_1326 = relay.Function([var_1325], output)
mutated_mod['func_1326'] = func_1326
mutated_mod = relay.transform.InferType()(mutated_mod)
func_109_call = mod.get_global_var('func_109')
func_111_call = mutated_mod.get_global_var('func_111')
call_1377 = relay.TupleGetItem(func_109_call(), 0)
call_1378 = relay.TupleGetItem(func_111_call(), 0)
const_1379 = relay.const([[[-1.249885,3.711943,-3.389371,-3.039058],[8.455869,4.706904,8.975723,5.029363],[2.482384,-2.910252,-1.064713,7.415644],[-3.271280,-6.161163,-7.320569,-7.038205],[-1.880693,-3.985558,0.409003,-7.435784],[-5.945676,6.474474,-9.261364,5.676296],[-3.876605,-6.952986,-8.114169,-2.578369],[-2.324745,7.741520,-6.363986,7.949194],[4.663959,1.239571,-2.510797,0.560525],[1.398000,-2.115277,9.729484,3.741017],[3.966027,9.049765,-3.818483,-8.029546],[-8.057672,7.722750,5.356134,-0.306911]],[[-0.215208,6.397308,8.345596,-7.373441],[2.912664,-5.523448,-0.111566,5.949829],[1.353832,5.189063,-9.390007,-4.045205],[0.886194,9.075914,-3.833377,-4.938108],[-4.858802,9.990482,-4.070050,-0.943759],[-8.195446,0.116996,8.587304,-0.339702],[1.567184,-3.044283,1.546743,-5.353821],[-4.481223,-6.704922,0.915802,-0.060245],[-0.406973,6.874119,2.368266,6.011935],[2.911565,-2.217784,6.295456,9.875043],[-9.669081,-6.485024,3.593099,6.533413],[-6.881307,-9.953450,-5.470417,3.878884]],[[1.547866,1.771710,8.308058,-3.893555],[3.793445,9.229266,-0.495655,3.784549],[-5.550285,-9.447790,3.914583,5.932274],[3.213090,6.995358,-3.219814,9.625084],[-2.022811,-7.780034,7.184087,-8.451127],[3.742426,4.721071,-9.408386,6.336611],[-0.894838,-7.262986,6.665093,5.639168],[-3.000337,-3.721743,-9.787286,-0.325074],[-9.023897,-7.756074,2.648482,4.294819],[-0.964928,-5.258843,5.473861,3.925166],[-8.256010,8.291327,8.224224,-1.881082],[-1.496391,1.904264,-2.037401,9.394998]],[[-9.806349,-6.444490,-1.135165,6.164308],[-2.679892,8.816556,3.380792,1.603431],[4.830569,7.430164,-6.180464,-0.628466],[-3.196379,7.030974,7.210116,0.593784],[-4.949978,3.953620,6.312517,5.595734],[2.419782,-2.188845,7.439613,-0.737109],[-8.635207,4.756438,9.567357,9.362822],[5.439601,3.258380,1.559191,2.880762],[-4.095416,-0.843724,4.952251,-5.298881],[1.593678,7.660384,-2.142559,0.772960],[8.921247,9.103195,-7.656760,-0.194151],[1.200160,-9.555388,-6.190199,-1.317111]],[[-1.993571,5.579961,-8.768032,-1.848583],[-7.794436,-7.579167,8.252912,5.022574],[9.670348,-0.040307,-7.741074,1.419314],[-9.126860,-6.058303,1.979873,8.328970],[-5.837355,9.695940,-2.040384,-2.009895],[0.573575,-3.189102,-5.567786,2.894943],[-3.845493,0.432386,-9.420219,4.900946],[-0.176357,-2.808506,-5.015496,4.449399],[-0.143050,-8.383763,0.288596,7.126428],[2.983620,7.123377,0.665615,3.510238],[-5.202062,-4.170441,-4.082119,7.085504],[-4.658584,-2.191117,-6.007084,6.137385]]], dtype = "float32")#candidate|1379|(5, 12, 4)|const|float32
bop_1380 = relay.equal(call_1377.astype('bool'), relay.reshape(const_1379.astype('bool'), relay.shape_of(call_1377))) # shape=(5, 12, 4)
bop_1383 = relay.equal(call_1378.astype('bool'), relay.reshape(const_1379.astype('bool'), relay.shape_of(call_1378))) # shape=(5, 12, 4)
uop_1384 = relay.atan(call_1377.astype('float32')) # shape=(5, 12, 4)
uop_1386 = relay.atan(call_1378.astype('float32')) # shape=(5, 12, 4)
func_1225_call = mod.get_global_var('func_1225')
func_1226_call = mutated_mod.get_global_var('func_1226')
call_1406 = func_1225_call()
call_1407 = func_1225_call()
const_1414 = relay.const([[[3.647616,-9.795810,-0.226475,-9.543341],[-6.567811,9.277746,2.009305,2.724967],[-1.696648,5.233722,2.822632,2.991973],[-9.117079,-7.602230,-1.475054,7.669509],[-2.948073,-4.377898,-0.156731,-7.314175],[8.102356,-6.956670,8.209013,-0.709448],[3.310504,4.036199,7.553537,-7.701755],[5.144936,5.349691,9.708658,0.462537],[-0.013247,-0.768869,-5.062107,9.751305],[-6.717999,-3.981061,6.622892,1.556331],[4.395767,9.061115,-0.241534,-2.385937],[-6.201207,8.547396,6.490217,-2.138230]],[[0.110675,-4.986222,7.446912,1.028577],[9.248188,-0.418797,-9.131684,0.072226],[-5.956713,5.927790,3.133620,-3.435200],[5.051399,2.256096,-7.867530,-5.355868],[-7.596633,-2.421459,-6.343502,7.458915],[3.052485,-1.819221,0.698374,4.385117],[-2.470851,-8.655841,6.957757,7.548460],[5.786383,8.521249,-1.719056,3.845173],[-7.073799,3.092397,9.828042,-3.614864],[-9.446120,6.573700,2.232899,1.623564],[5.194757,4.796126,3.951532,1.345438],[0.524872,-4.892695,-3.227911,-9.915757]],[[1.022789,4.113792,-7.912528,-3.069931],[-8.805363,-6.196606,-2.708653,6.579020],[-7.341122,-0.638607,3.817492,-3.146462],[-9.407468,5.627218,-5.087645,1.844833],[4.586566,-4.998789,3.579538,-7.754711],[-9.796120,1.747604,-0.974929,-3.880271],[9.415623,-1.761358,-6.740556,6.438632],[-3.675091,9.014872,-2.801281,-4.803799],[1.312623,8.622735,5.404900,-9.931957],[-7.226544,6.923428,-8.208420,9.340866],[-4.013998,7.459325,-8.098422,-4.263800],[8.195185,9.879175,-9.965264,1.186434]],[[3.590908,-5.028303,-2.404802,-3.953982],[-5.597384,0.494920,-5.065060,-6.539456],[9.027587,3.145288,-3.355097,-9.730668],[-0.628949,3.102210,8.562491,-0.239431],[3.387768,-4.718262,-7.309450,8.258227],[-2.315983,1.688583,8.813680,6.977599],[3.595677,7.671697,-0.388622,9.694401],[8.543872,-5.210582,0.433581,0.476952],[8.602848,-5.972309,9.373715,7.885695],[8.644662,-4.331226,-5.461641,4.394232],[-9.296693,-7.347884,-2.337557,4.863067],[-5.689656,-1.212638,3.589568,2.204754]],[[1.592029,-6.197026,5.323367,-9.692360],[-7.697040,2.361525,6.488086,7.067112],[9.255752,-7.698289,1.687479,-9.538348],[6.613674,-7.096417,-0.642122,-8.690980],[5.741659,-3.599887,-3.752417,7.592965],[5.812690,8.397342,0.664265,8.732504],[-5.807952,-0.696651,7.224902,-5.533128],[-8.721187,5.266069,-1.307139,-2.607290],[-2.310622,-6.703400,-4.045968,-0.355757],[-4.485503,-5.377368,-9.214901,7.852412],[4.373749,-3.311869,-4.855413,-4.911829],[0.819887,0.086475,8.593938,-6.483459]]], dtype = "float32")#candidate|1414|(5, 12, 4)|const|float32
bop_1415 = relay.mod(uop_1384.astype('float32'), relay.reshape(const_1414.astype('float32'), relay.shape_of(uop_1384))) # shape=(5, 12, 4)
bop_1418 = relay.mod(uop_1386.astype('float32'), relay.reshape(const_1414.astype('float32'), relay.shape_of(uop_1386))) # shape=(5, 12, 4)
output = relay.Tuple([bop_1380,call_1406,bop_1415,])
output2 = relay.Tuple([bop_1383,call_1407,bop_1418,])
func_1440 = relay.Function([], output)
mod['func_1440'] = func_1440
mod = relay.transform.InferType()(mod)
output = func_1440()
func_1441 = relay.Function([], output)
mutated_mod['func_1441'] = func_1441
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1440_call = mod.get_global_var('func_1440')
func_1441_call = mutated_mod.get_global_var('func_1441')
call_1442 = relay.TupleGetItem(func_1440_call(), 0)
call_1443 = relay.TupleGetItem(func_1441_call(), 0)
func_1175_call = mod.get_global_var('func_1175')
func_1176_call = mutated_mod.get_global_var('func_1176')
call_1444 = func_1175_call()
call_1445 = func_1175_call()
output = relay.Tuple([call_1442,call_1444,])
output2 = relay.Tuple([call_1443,call_1445,])
func_1451 = relay.Function([], output)
mod['func_1451'] = func_1451
mod = relay.transform.InferType()(mod)
mutated_mod['func_1451'] = func_1451
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1451_call = mutated_mod.get_global_var('func_1451')
call_1452 = func_1451_call()
output = call_1452
func_1453 = relay.Function([], output)
mutated_mod['func_1453'] = func_1453
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1275_call = mod.get_global_var('func_1275')
func_1277_call = mutated_mod.get_global_var('func_1277')
call_1477 = func_1275_call()
call_1478 = func_1275_call()
output = relay.Tuple([call_1477,])
output2 = relay.Tuple([call_1478,])
func_1482 = relay.Function([], output)
mod['func_1482'] = func_1482
mod = relay.transform.InferType()(mod)
output = func_1482()
func_1483 = relay.Function([], output)
mutated_mod['func_1483'] = func_1483
mutated_mod = relay.transform.InferType()(mutated_mod)
func_692_call = mod.get_global_var('func_692')
func_693_call = mutated_mod.get_global_var('func_693')
call_1516 = relay.TupleGetItem(func_692_call(), 1)
call_1517 = relay.TupleGetItem(func_693_call(), 1)
func_554_call = mod.get_global_var('func_554')
func_557_call = mutated_mod.get_global_var('func_557')
call_1518 = relay.TupleGetItem(func_554_call(relay.reshape(call_1516.astype('uint32'), [10, 15, 12])), 0)
call_1519 = relay.TupleGetItem(func_557_call(relay.reshape(call_1516.astype('uint32'), [10, 15, 12])), 0)
bop_1521 = relay.power(call_1518.astype('float64'), relay.reshape(call_1516.astype('float64'), relay.shape_of(call_1518))) # shape=(10, 15, 12)
bop_1524 = relay.power(call_1519.astype('float64'), relay.reshape(call_1517.astype('float64'), relay.shape_of(call_1519))) # shape=(10, 15, 12)
func_1440_call = mod.get_global_var('func_1440')
func_1441_call = mutated_mod.get_global_var('func_1441')
call_1527 = relay.TupleGetItem(func_1440_call(), 0)
call_1528 = relay.TupleGetItem(func_1441_call(), 0)
func_1225_call = mod.get_global_var('func_1225')
func_1226_call = mutated_mod.get_global_var('func_1226')
call_1552 = func_1225_call()
call_1553 = func_1225_call()
output = relay.Tuple([bop_1521,call_1527,call_1552,])
output2 = relay.Tuple([bop_1524,call_1528,call_1553,])
func_1569 = relay.Function([], output)
mod['func_1569'] = func_1569
mod = relay.transform.InferType()(mod)
output = func_1569()
func_1570 = relay.Function([], output)
mutated_mod['func_1570'] = func_1570
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1440_call = mod.get_global_var('func_1440')
func_1441_call = mutated_mod.get_global_var('func_1441')
call_1571 = relay.TupleGetItem(func_1440_call(), 1)
call_1572 = relay.TupleGetItem(func_1441_call(), 1)
output = relay.Tuple([call_1571,])
output2 = relay.Tuple([call_1572,])
func_1579 = relay.Function([], output)
mod['func_1579'] = func_1579
mod = relay.transform.InferType()(mod)
output = func_1579()
func_1580 = relay.Function([], output)
mutated_mod['func_1580'] = func_1580
mutated_mod = relay.transform.InferType()(mutated_mod)
func_799_call = mod.get_global_var('func_799')
func_801_call = mutated_mod.get_global_var('func_801')
call_1593 = relay.TupleGetItem(func_799_call(), 0)
call_1594 = relay.TupleGetItem(func_801_call(), 0)
func_835_call = mod.get_global_var('func_835')
func_837_call = mutated_mod.get_global_var('func_837')
const_1598 = relay.const([1.379685,-4.142164,-3.591127,-0.532046,0.351880,8.266171,-6.945390,-8.325370,-9.683185,-6.565314,-5.543921,1.242529,-1.820161,-0.034014,-3.730287,-2.278742,4.760952,-9.024524,-0.464961,-3.254677,-9.161300,-9.119664,4.134248,4.730836,6.561084,1.136966,4.451551,3.729506,-4.710289,3.822041,-8.340548,9.025983,8.387029,6.760669,-6.562671,5.753809,0.343753,6.651809,-9.976139,-9.664390,5.324086,7.026869,0.327078,-9.480381,-3.116011,-8.828588,4.500090,9.352568,6.133067,-2.487968], dtype = "float64")#candidate|1598|(50,)|const|float64
call_1597 = func_835_call(relay.reshape(const_1598.astype('float64'), [5, 10]))
call_1599 = func_835_call(relay.reshape(const_1598.astype('float64'), [5, 10]))
uop_1608 = relay.sinh(const_1598.astype('float32')) # shape=(50,)
output = relay.Tuple([call_1593,call_1597,uop_1608,])
output2 = relay.Tuple([call_1594,call_1599,uop_1608,])
func_1612 = relay.Function([], output)
mod['func_1612'] = func_1612
mod = relay.transform.InferType()(mod)
mutated_mod['func_1612'] = func_1612
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1612_call = mutated_mod.get_global_var('func_1612')
call_1613 = func_1612_call()
output = call_1613
func_1614 = relay.Function([], output)
mutated_mod['func_1614'] = func_1614
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1143_call = mod.get_global_var('func_1143')
func_1145_call = mutated_mod.get_global_var('func_1145')
call_1642 = relay.TupleGetItem(func_1143_call(), 0)
call_1643 = relay.TupleGetItem(func_1145_call(), 0)
output = relay.Tuple([call_1642,])
output2 = relay.Tuple([call_1643,])
func_1654 = relay.Function([], output)
mod['func_1654'] = func_1654
mod = relay.transform.InferType()(mod)
mutated_mod['func_1654'] = func_1654
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1654_call = mutated_mod.get_global_var('func_1654')
call_1655 = func_1654_call()
output = call_1655
func_1656 = relay.Function([], output)
mutated_mod['func_1656'] = func_1656
mutated_mod = relay.transform.InferType()(mutated_mod)
func_986_call = mod.get_global_var('func_986')
func_987_call = mutated_mod.get_global_var('func_987')
call_1705 = relay.TupleGetItem(func_986_call(), 1)
call_1706 = relay.TupleGetItem(func_987_call(), 1)
var_1715 = relay.var("var_1715", dtype = "bool", shape = (5, 3, 6))#candidate|1715|(5, 3, 6)|var|bool
bop_1716 = relay.subtract(call_1705.astype('int8'), relay.reshape(var_1715.astype('int8'), relay.shape_of(call_1705))) # shape=(5, 3, 6)
bop_1719 = relay.subtract(call_1706.astype('int8'), relay.reshape(var_1715.astype('int8'), relay.shape_of(call_1706))) # shape=(5, 3, 6)
uop_1724 = relay.cos(call_1705.astype('float64')) # shape=(5, 3, 6)
uop_1726 = relay.cos(call_1706.astype('float64')) # shape=(5, 3, 6)
func_1028_call = mod.get_global_var('func_1028')
func_1029_call = mutated_mod.get_global_var('func_1029')
call_1736 = relay.TupleGetItem(func_1028_call(), 0)
call_1737 = relay.TupleGetItem(func_1029_call(), 0)
func_1254_call = mod.get_global_var('func_1254')
func_1255_call = mutated_mod.get_global_var('func_1255')
call_1772 = relay.TupleGetItem(func_1254_call(), 0)
call_1773 = relay.TupleGetItem(func_1255_call(), 0)
func_1569_call = mod.get_global_var('func_1569')
func_1570_call = mutated_mod.get_global_var('func_1570')
call_1779 = relay.TupleGetItem(func_1569_call(), 2)
call_1780 = relay.TupleGetItem(func_1570_call(), 2)
output = relay.Tuple([bop_1716,uop_1724,call_1736,call_1772,call_1779,])
output2 = relay.Tuple([bop_1719,uop_1726,call_1737,call_1773,call_1780,])
func_1797 = relay.Function([var_1715,], output)
mod['func_1797'] = func_1797
mod = relay.transform.InferType()(mod)
var_1798 = relay.var("var_1798", dtype = "bool", shape = (5, 3, 6))#candidate|1798|(5, 3, 6)|var|bool
output = func_1797(var_1798)
func_1799 = relay.Function([var_1798], output)
mutated_mod['func_1799'] = func_1799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1020_call = mod.get_global_var('func_1020')
func_1021_call = mutated_mod.get_global_var('func_1021')
call_1830 = relay.TupleGetItem(func_1020_call(), 2)
call_1831 = relay.TupleGetItem(func_1021_call(), 2)
output = relay.Tuple([call_1830,])
output2 = relay.Tuple([call_1831,])
func_1832 = relay.Function([], output)
mod['func_1832'] = func_1832
mod = relay.transform.InferType()(mod)
mutated_mod['func_1832'] = func_1832
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1832_call = mutated_mod.get_global_var('func_1832')
call_1833 = func_1832_call()
output = call_1833
func_1834 = relay.Function([], output)
mutated_mod['func_1834'] = func_1834
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1028_call = mod.get_global_var('func_1028')
func_1029_call = mutated_mod.get_global_var('func_1029')
call_1839 = relay.TupleGetItem(func_1028_call(), 0)
call_1840 = relay.TupleGetItem(func_1029_call(), 0)
uop_1844 = relay.acos(call_1839.astype('float32')) # shape=(3, 7, 12)
uop_1846 = relay.acos(call_1840.astype('float32')) # shape=(3, 7, 12)
func_1482_call = mod.get_global_var('func_1482')
func_1483_call = mutated_mod.get_global_var('func_1483')
call_1847 = relay.TupleGetItem(func_1482_call(), 0)
call_1848 = relay.TupleGetItem(func_1483_call(), 0)
output = relay.Tuple([uop_1844,call_1847,])
output2 = relay.Tuple([uop_1846,call_1848,])
func_1857 = relay.Function([], output)
mod['func_1857'] = func_1857
mod = relay.transform.InferType()(mod)
mutated_mod['func_1857'] = func_1857
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1857_call = mutated_mod.get_global_var('func_1857')
call_1858 = func_1857_call()
output = call_1858
func_1859 = relay.Function([], output)
mutated_mod['func_1859'] = func_1859
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1451_call = mod.get_global_var('func_1451')
func_1453_call = mutated_mod.get_global_var('func_1453')
call_1875 = relay.TupleGetItem(func_1451_call(), 1)
call_1876 = relay.TupleGetItem(func_1453_call(), 1)
var_1888 = relay.var("var_1888", dtype = "float64", shape = (3, 7, 12))#candidate|1888|(3, 7, 12)|var|float64
bop_1889 = relay.floor_mod(call_1875.astype('float64'), relay.reshape(var_1888.astype('float64'), relay.shape_of(call_1875))) # shape=(3, 7, 12)
bop_1892 = relay.floor_mod(call_1876.astype('float64'), relay.reshape(var_1888.astype('float64'), relay.shape_of(call_1876))) # shape=(3, 7, 12)
const_1894 = relay.const([[[-7.187777,4.904726,5.324569,4.708187,-1.076294,-1.667089,7.906930,5.158780,-0.691673,-5.436683,-6.248937,-7.702132],[-4.645076,2.039832,1.684608,-3.982797,8.379557,-1.550032,-6.600398,4.443763,-1.213610,-1.134504,9.096488,-2.676901],[3.530173,-9.837406,-7.449504,-3.056562,-2.270877,3.482284,8.146584,9.903459,3.274809,6.955921,-1.377609,-6.812813],[0.868538,-0.768043,-2.049894,-6.945724,-2.522286,1.522746,4.123014,5.464036,-5.060527,6.723923,-7.150850,-4.228034],[-3.772249,-0.213637,-5.351544,5.302379,3.054039,-0.484172,-0.317644,-8.745887,-9.227110,-6.480569,9.284708,2.078866],[-6.038618,4.586455,6.623359,4.582953,-2.953861,-8.521966,-0.371647,-4.005793,-1.150958,-5.369199,0.456382,6.842231],[-9.313694,4.313740,6.603642,0.338333,3.611668,5.634346,-6.580899,-6.695990,-7.672027,-5.679800,-0.154238,-0.021814]],[[6.218500,-2.566511,3.500014,-2.074670,8.899828,-3.131440,-6.774057,-7.190041,-1.524568,9.121257,-4.872051,1.012070],[-6.597201,-5.041195,-8.580853,4.000909,9.022139,-0.449716,2.960632,-2.950908,-5.094439,-6.515665,6.957977,-0.099333],[-1.040245,-7.696466,9.588249,6.535784,8.235231,7.000976,-7.090637,-8.140865,-1.876062,2.680416,4.801772,-0.070693],[-0.046044,7.431848,7.474701,9.585331,6.854093,2.640339,-6.343192,-2.428467,-1.185007,2.595714,4.690406,-0.134282],[2.471432,4.209328,7.270922,-6.532883,-8.400660,7.548857,-3.317792,9.302814,1.580677,-8.549306,2.235524,4.498102],[-2.672530,7.358642,-5.933394,9.243857,7.827856,0.888099,-5.407164,-5.139243,2.988349,7.049636,-1.299489,4.187376],[5.354897,7.343269,-7.363569,-4.985568,-4.897462,-0.615552,0.874514,-6.589755,3.307191,0.667306,3.577505,-1.424744]],[[-5.109038,-7.008329,5.850467,-4.214777,-2.160499,5.082224,-8.923769,0.094890,3.360932,-3.418942,-5.296243,8.565185],[-5.690075,5.774455,-4.092334,-9.717182,2.936887,-0.692413,-0.280808,2.947266,-9.654905,4.671140,-2.862384,5.099343],[4.351178,-5.977068,-6.082291,7.726457,1.160306,8.247286,-2.576441,-9.273934,-3.379590,-2.540964,5.499822,6.918702],[4.815286,-7.020530,-2.731158,4.604410,3.820779,2.215944,-0.288073,-6.681969,4.112537,5.958038,2.371370,-1.786058],[-5.345844,-0.786627,-7.346452,-0.883996,5.399279,-4.481327,-5.649281,2.056475,2.929095,-5.162711,1.681649,8.585978],[-7.416526,-3.281362,-2.055073,6.881218,-0.043201,-2.403158,-0.715122,-3.892630,-7.850435,8.229841,-5.225340,-6.178033],[7.534405,1.303516,-0.632886,5.836752,-6.620485,-8.248976,-4.432226,4.221462,-6.309938,-8.211864,-7.548254,-3.823829]]], dtype = "float64")#candidate|1894|(3, 7, 12)|const|float64
bop_1895 = relay.less(var_1888.astype('bool'), relay.reshape(const_1894.astype('bool'), relay.shape_of(var_1888))) # shape=(3, 7, 12)
func_769_call = mod.get_global_var('func_769')
func_775_call = mutated_mod.get_global_var('func_775')
call_1903 = relay.TupleGetItem(func_769_call(relay.reshape(bop_1889.astype('float32'), [3, 7, 12]), relay.reshape(call_1875.astype('float32'), [3, 7, 12]), relay.reshape(call_1875.astype('bool'), [3, 7, 12]), relay.reshape(bop_1895.astype('float32'), [3, 7, 12]), ), 0)
call_1904 = relay.TupleGetItem(func_775_call(relay.reshape(bop_1889.astype('float32'), [3, 7, 12]), relay.reshape(call_1875.astype('float32'), [3, 7, 12]), relay.reshape(call_1875.astype('bool'), [3, 7, 12]), relay.reshape(bop_1895.astype('float32'), [3, 7, 12]), ), 0)
func_1028_call = mod.get_global_var('func_1028')
func_1029_call = mutated_mod.get_global_var('func_1029')
call_1922 = relay.TupleGetItem(func_1028_call(), 0)
call_1923 = relay.TupleGetItem(func_1029_call(), 0)
func_692_call = mod.get_global_var('func_692')
func_693_call = mutated_mod.get_global_var('func_693')
call_1924 = relay.TupleGetItem(func_692_call(), 1)
call_1925 = relay.TupleGetItem(func_693_call(), 1)
func_851_call = mod.get_global_var('func_851')
func_852_call = mutated_mod.get_global_var('func_852')
call_1929 = relay.TupleGetItem(func_851_call(), 0)
call_1930 = relay.TupleGetItem(func_852_call(), 0)
func_799_call = mod.get_global_var('func_799')
func_801_call = mutated_mod.get_global_var('func_801')
call_1937 = relay.TupleGetItem(func_799_call(), 0)
call_1938 = relay.TupleGetItem(func_801_call(), 0)
output = relay.Tuple([bop_1889,bop_1895,call_1903,call_1922,call_1924,call_1929,call_1937,])
output2 = relay.Tuple([bop_1892,bop_1895,call_1904,call_1923,call_1925,call_1930,call_1938,])
func_1939 = relay.Function([var_1888,], output)
mod['func_1939'] = func_1939
mod = relay.transform.InferType()(mod)
var_1940 = relay.var("var_1940", dtype = "float64", shape = (3, 7, 12))#candidate|1940|(3, 7, 12)|var|float64
output = func_1939(var_1940)
func_1941 = relay.Function([var_1940], output)
mutated_mod['func_1941'] = func_1941
mutated_mod = relay.transform.InferType()(mutated_mod)
func_339_call = mod.get_global_var('func_339')
func_341_call = mutated_mod.get_global_var('func_341')
call_1961 = relay.TupleGetItem(func_339_call(), 0)
call_1962 = relay.TupleGetItem(func_341_call(), 0)
output = call_1961
output2 = call_1962
func_1963 = relay.Function([], output)
mod['func_1963'] = func_1963
mod = relay.transform.InferType()(mod)
mutated_mod['func_1963'] = func_1963
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1963_call = mutated_mod.get_global_var('func_1963')
call_1964 = func_1963_call()
output = call_1964
func_1965 = relay.Function([], output)
mutated_mod['func_1965'] = func_1965
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1028_call = mod.get_global_var('func_1028')
func_1029_call = mutated_mod.get_global_var('func_1029')
call_1988 = relay.TupleGetItem(func_1028_call(), 0)
call_1989 = relay.TupleGetItem(func_1029_call(), 0)
output = relay.Tuple([call_1988,])
output2 = relay.Tuple([call_1989,])
func_1996 = relay.Function([], output)
mod['func_1996'] = func_1996
mod = relay.transform.InferType()(mod)
mutated_mod['func_1996'] = func_1996
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1996_call = mutated_mod.get_global_var('func_1996')
call_1997 = func_1996_call()
output = call_1997
func_1998 = relay.Function([], output)
mutated_mod['func_1998'] = func_1998
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2039 = relay.var("var_2039", dtype = "float32", shape = (15, 5, 13))#candidate|2039|(15, 5, 13)|var|float32
uop_2040 = relay.log10(var_2039.astype('float32')) # shape=(15, 5, 13)
output = uop_2040
output2 = uop_2040
func_2052 = relay.Function([var_2039,], output)
mod['func_2052'] = func_2052
mod = relay.transform.InferType()(mod)
mutated_mod['func_2052'] = func_2052
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2053 = relay.var("var_2053", dtype = "float32", shape = (15, 5, 13))#candidate|2053|(15, 5, 13)|var|float32
func_2052_call = mutated_mod.get_global_var('func_2052')
call_2054 = func_2052_call(var_2053)
output = call_2054
func_2055 = relay.Function([var_2053], output)
mutated_mod['func_2055'] = func_2055
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2060 = relay.var("var_2060", dtype = "float64", shape = (1, 1, 1))#candidate|2060|(1, 1, 1)|var|float64
uop_2061 = relay.tan(var_2060.astype('float64')) # shape=(1, 1, 1)
func_597_call = mod.get_global_var('func_597')
func_598_call = mutated_mod.get_global_var('func_598')
call_2065 = func_597_call()
call_2066 = func_597_call()
func_554_call = mod.get_global_var('func_554')
func_557_call = mutated_mod.get_global_var('func_557')
var_2069 = relay.var("var_2069", dtype = "uint32", shape = (1, 1800))#candidate|2069|(1, 1800)|var|uint32
call_2068 = relay.TupleGetItem(func_554_call(relay.reshape(var_2069.astype('uint32'), [10, 15, 12])), 0)
call_2070 = relay.TupleGetItem(func_557_call(relay.reshape(var_2069.astype('uint32'), [10, 15, 12])), 0)
output = relay.Tuple([uop_2061,call_2065,call_2068,var_2069,])
output2 = relay.Tuple([uop_2061,call_2066,call_2070,var_2069,])
func_2074 = relay.Function([var_2060,var_2069,], output)
mod['func_2074'] = func_2074
mod = relay.transform.InferType()(mod)
var_2075 = relay.var("var_2075", dtype = "float64", shape = (1, 1, 1))#candidate|2075|(1, 1, 1)|var|float64
var_2076 = relay.var("var_2076", dtype = "uint32", shape = (1, 1800))#candidate|2076|(1, 1800)|var|uint32
output = func_2074(var_2075,var_2076,)
func_2077 = relay.Function([var_2075,var_2076,], output)
mutated_mod['func_2077'] = func_2077
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1175_call = mod.get_global_var('func_1175')
func_1176_call = mutated_mod.get_global_var('func_1176')
call_2079 = func_1175_call()
call_2080 = func_1175_call()
output = relay.Tuple([call_2079,])
output2 = relay.Tuple([call_2080,])
func_2088 = relay.Function([], output)
mod['func_2088'] = func_2088
mod = relay.transform.InferType()(mod)
mutated_mod['func_2088'] = func_2088
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2088_call = mutated_mod.get_global_var('func_2088')
call_2089 = func_2088_call()
output = call_2089
func_2090 = relay.Function([], output)
mutated_mod['func_2090'] = func_2090
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1569_call = mod.get_global_var('func_1569')
func_1570_call = mutated_mod.get_global_var('func_1570')
call_2091 = relay.TupleGetItem(func_1569_call(), 1)
call_2092 = relay.TupleGetItem(func_1570_call(), 1)
uop_2093 = relay.sinh(call_2091.astype('float32')) # shape=(5, 12, 4)
uop_2095 = relay.sinh(call_2092.astype('float32')) # shape=(5, 12, 4)
uop_2099 = relay.erf(uop_2093.astype('float32')) # shape=(5, 12, 4)
uop_2101 = relay.erf(uop_2095.astype('float32')) # shape=(5, 12, 4)
var_2105 = relay.var("var_2105", dtype = "float32", shape = (5, 12, 4))#candidate|2105|(5, 12, 4)|var|float32
bop_2106 = relay.bitwise_xor(uop_2099.astype('int16'), relay.reshape(var_2105.astype('int16'), relay.shape_of(uop_2099))) # shape=(5, 12, 4)
bop_2109 = relay.bitwise_xor(uop_2101.astype('int16'), relay.reshape(var_2105.astype('int16'), relay.shape_of(uop_2101))) # shape=(5, 12, 4)
func_1996_call = mod.get_global_var('func_1996')
func_1998_call = mutated_mod.get_global_var('func_1998')
call_2120 = relay.TupleGetItem(func_1996_call(), 0)
call_2121 = relay.TupleGetItem(func_1998_call(), 0)
output = relay.Tuple([bop_2106,call_2120,])
output2 = relay.Tuple([bop_2109,call_2121,])
func_2139 = relay.Function([var_2105,], output)
mod['func_2139'] = func_2139
mod = relay.transform.InferType()(mod)
var_2140 = relay.var("var_2140", dtype = "float32", shape = (5, 12, 4))#candidate|2140|(5, 12, 4)|var|float32
output = func_2139(var_2140)
func_2141 = relay.Function([var_2140], output)
mutated_mod['func_2141'] = func_2141
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1963_call = mod.get_global_var('func_1963')
func_1965_call = mutated_mod.get_global_var('func_1965')
call_2150 = func_1963_call()
call_2151 = func_1963_call()
output = relay.Tuple([call_2150,])
output2 = relay.Tuple([call_2151,])
func_2167 = relay.Function([], output)
mod['func_2167'] = func_2167
mod = relay.transform.InferType()(mod)
output = func_2167()
func_2168 = relay.Function([], output)
mutated_mod['func_2168'] = func_2168
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1143_call = mod.get_global_var('func_1143')
func_1145_call = mutated_mod.get_global_var('func_1145')
call_2172 = relay.TupleGetItem(func_1143_call(), 0)
call_2173 = relay.TupleGetItem(func_1145_call(), 0)
func_357_call = mod.get_global_var('func_357')
func_359_call = mutated_mod.get_global_var('func_359')
call_2178 = relay.TupleGetItem(func_357_call(), 0)
call_2179 = relay.TupleGetItem(func_359_call(), 0)
var_2192 = relay.var("var_2192", dtype = "bool", shape = (5, 3, 6))#candidate|2192|(5, 3, 6)|var|bool
bop_2193 = relay.floor_divide(call_2172.astype('float64'), relay.reshape(var_2192.astype('float64'), relay.shape_of(call_2172))) # shape=(5, 3, 6)
bop_2196 = relay.floor_divide(call_2173.astype('float64'), relay.reshape(var_2192.astype('float64'), relay.shape_of(call_2173))) # shape=(5, 3, 6)
bop_2209 = relay.add(call_2172.astype('int64'), relay.reshape(bop_2193.astype('int64'), relay.shape_of(call_2172))) # shape=(5, 3, 6)
bop_2212 = relay.add(call_2173.astype('int64'), relay.reshape(bop_2196.astype('int64'), relay.shape_of(call_2173))) # shape=(5, 3, 6)
func_1020_call = mod.get_global_var('func_1020')
func_1021_call = mutated_mod.get_global_var('func_1021')
call_2219 = relay.TupleGetItem(func_1020_call(), 0)
call_2220 = relay.TupleGetItem(func_1021_call(), 0)
output = relay.Tuple([call_2178,bop_2209,call_2219,])
output2 = relay.Tuple([call_2179,bop_2212,call_2220,])
func_2228 = relay.Function([var_2192,], output)
mod['func_2228'] = func_2228
mod = relay.transform.InferType()(mod)
mutated_mod['func_2228'] = func_2228
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2229 = relay.var("var_2229", dtype = "bool", shape = (5, 3, 6))#candidate|2229|(5, 3, 6)|var|bool
func_2228_call = mutated_mod.get_global_var('func_2228')
call_2230 = func_2228_call(var_2229)
output = call_2230
func_2231 = relay.Function([var_2229], output)
mutated_mod['func_2231'] = func_2231
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2281 = relay.var("var_2281", dtype = "uint32", shape = (14, 10, 2))#candidate|2281|(14, 10, 2)|var|uint32
var_2282 = relay.var("var_2282", dtype = "uint32", shape = (14, 10, 2))#candidate|2282|(14, 10, 2)|var|uint32
bop_2283 = relay.greater(var_2281.astype('bool'), relay.reshape(var_2282.astype('bool'), relay.shape_of(var_2281))) # shape=(14, 10, 2)
output = bop_2283
output2 = bop_2283
func_2294 = relay.Function([var_2281,var_2282,], output)
mod['func_2294'] = func_2294
mod = relay.transform.InferType()(mod)
mutated_mod['func_2294'] = func_2294
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2294_call = mutated_mod.get_global_var('func_2294')
var_2296 = relay.var("var_2296", dtype = "uint32", shape = (14, 10, 2))#candidate|2296|(14, 10, 2)|var|uint32
var_2297 = relay.var("var_2297", dtype = "uint32", shape = (14, 10, 2))#candidate|2297|(14, 10, 2)|var|uint32
call_2295 = func_2294_call(var_2296,var_2297,)
output = call_2295
func_2298 = relay.Function([var_2296,var_2297,], output)
mutated_mod['func_2298'] = func_2298
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2319 = relay.var("var_2319", dtype = "int8", shape = ())#candidate|2319|()|var|int8
var_2320 = relay.var("var_2320", dtype = "int8", shape = (9, 4, 1))#candidate|2320|(9, 4, 1)|var|int8
bop_2321 = relay.left_shift(var_2319.astype('int8'), var_2320.astype('int8')) # shape=(9, 4, 1)
bop_2326 = relay.logical_or(var_2319.astype('bool'), bop_2321.astype('bool')) # shape=(9, 4, 1)
bop_2331 = relay.bitwise_xor(var_2320.astype('int16'), relay.reshape(bop_2326.astype('int16'), relay.shape_of(var_2320))) # shape=(9, 4, 1)
func_1579_call = mod.get_global_var('func_1579')
func_1580_call = mutated_mod.get_global_var('func_1580')
call_2336 = relay.TupleGetItem(func_1579_call(), 0)
call_2337 = relay.TupleGetItem(func_1580_call(), 0)
func_1254_call = mod.get_global_var('func_1254')
func_1255_call = mutated_mod.get_global_var('func_1255')
call_2341 = relay.TupleGetItem(func_1254_call(), 0)
call_2342 = relay.TupleGetItem(func_1255_call(), 0)
bop_2347 = relay.right_shift(call_2336.astype('int64'), bop_2331.astype('int64')) # shape=(9, 4, 240)
bop_2350 = relay.right_shift(call_2337.astype('int64'), bop_2331.astype('int64')) # shape=(9, 4, 240)
output = relay.Tuple([call_2341,bop_2347,])
output2 = relay.Tuple([call_2342,bop_2350,])
func_2359 = relay.Function([var_2319,var_2320,], output)
mod['func_2359'] = func_2359
mod = relay.transform.InferType()(mod)
var_2360 = relay.var("var_2360", dtype = "int8", shape = ())#candidate|2360|()|var|int8
var_2361 = relay.var("var_2361", dtype = "int8", shape = (9, 4, 1))#candidate|2361|(9, 4, 1)|var|int8
output = func_2359(var_2360,var_2361,)
func_2362 = relay.Function([var_2360,var_2361,], output)
mutated_mod['func_2362'] = func_2362
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2441 = relay.var("var_2441", dtype = "float32", shape = (9, 1, 7))#candidate|2441|(9, 1, 7)|var|float32
uop_2442 = relay.erf(var_2441.astype('float32')) # shape=(9, 1, 7)
func_339_call = mod.get_global_var('func_339')
func_341_call = mutated_mod.get_global_var('func_341')
call_2444 = relay.TupleGetItem(func_339_call(), 0)
call_2445 = relay.TupleGetItem(func_341_call(), 0)
const_2450 = relay.const([[[6.527538,-8.497737,2.558457,9.129308,-0.580330,-8.020767,-9.850678],[-4.569431,5.789239,2.643933,-6.359628,5.902530,-7.719996,0.044801]],[[7.329473,5.677624,6.341671,2.029934,-5.021394,6.071446,-4.837760],[-0.541223,9.115434,3.436798,-7.140669,-8.251338,-1.937079,4.056784]],[[2.735486,2.633934,8.429662,7.868661,8.911653,-8.075210,9.743592],[-4.163523,5.585774,-2.082554,0.903938,3.080910,-5.280261,-1.111504]],[[6.694534,2.000067,-1.617032,1.853277,-3.347683,-8.073557,5.109332],[5.308390,3.789414,-1.947631,-9.830321,4.204763,0.825405,8.705442]],[[-7.595697,-6.713880,-1.461241,-5.619165,5.521023,-6.708778,1.782822],[8.257209,0.257160,1.077854,-6.361154,2.862237,4.382511,-5.213977]],[[6.673419,-4.834906,8.686604,1.936508,5.102683,4.648077,-9.948401],[-0.287186,-4.393658,-6.249071,-0.345553,-8.591857,-5.763010,7.445426]],[[-3.375186,-9.847051,9.983602,-0.766978,3.388609,-4.065384,6.792147],[8.883677,-0.960770,1.782535,6.022780,-6.565483,-6.955556,-8.996031]],[[7.420226,-2.274862,8.630188,3.889505,7.476402,-7.635957,-6.393539],[7.317997,-6.147646,7.606573,-1.203586,9.120308,-9.807082,8.483922]],[[7.288918,8.531507,6.361513,-0.755859,-0.091569,-3.629242,6.579678],[9.817116,5.069065,-6.092836,1.683688,-1.032328,-3.680103,-5.850079]]], dtype = "float32")#candidate|2450|(9, 2, 7)|const|float32
bop_2451 = relay.greater(uop_2442.astype('bool'), const_2450.astype('bool')) # shape=(9, 2, 7)
output = relay.Tuple([call_2444,bop_2451,])
output2 = relay.Tuple([call_2445,bop_2451,])
func_2468 = relay.Function([var_2441,], output)
mod['func_2468'] = func_2468
mod = relay.transform.InferType()(mod)
mutated_mod['func_2468'] = func_2468
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2469 = relay.var("var_2469", dtype = "float32", shape = (9, 1, 7))#candidate|2469|(9, 1, 7)|var|float32
func_2468_call = mutated_mod.get_global_var('func_2468')
call_2470 = func_2468_call(var_2469)
output = call_2470
func_2471 = relay.Function([var_2469], output)
mutated_mod['func_2471'] = func_2471
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2167_call = mod.get_global_var('func_2167')
func_2168_call = mutated_mod.get_global_var('func_2168')
call_2484 = relay.TupleGetItem(func_2167_call(), 0)
call_2485 = relay.TupleGetItem(func_2168_call(), 0)
var_2489 = relay.var("var_2489", dtype = "float64", shape = (3, 7, 12))#candidate|2489|(3, 7, 12)|var|float64
bop_2490 = relay.add(call_2484.astype('uint64'), relay.reshape(var_2489.astype('uint64'), relay.shape_of(call_2484))) # shape=(3, 7, 12)
bop_2493 = relay.add(call_2485.astype('uint64'), relay.reshape(var_2489.astype('uint64'), relay.shape_of(call_2485))) # shape=(3, 7, 12)
func_1275_call = mod.get_global_var('func_1275')
func_1277_call = mutated_mod.get_global_var('func_1277')
call_2496 = func_1275_call()
call_2497 = func_1275_call()
uop_2498 = relay.atanh(bop_2490.astype('float64')) # shape=(3, 7, 12)
uop_2500 = relay.atanh(bop_2493.astype('float64')) # shape=(3, 7, 12)
func_1028_call = mod.get_global_var('func_1028')
func_1029_call = mutated_mod.get_global_var('func_1029')
call_2517 = relay.TupleGetItem(func_1028_call(), 0)
call_2518 = relay.TupleGetItem(func_1029_call(), 0)
output = relay.Tuple([call_2496,uop_2498,call_2517,])
output2 = relay.Tuple([call_2497,uop_2500,call_2518,])
func_2521 = relay.Function([var_2489,], output)
mod['func_2521'] = func_2521
mod = relay.transform.InferType()(mod)
var_2522 = relay.var("var_2522", dtype = "float64", shape = (3, 7, 12))#candidate|2522|(3, 7, 12)|var|float64
output = func_2521(var_2522)
func_2523 = relay.Function([var_2522], output)
mutated_mod['func_2523'] = func_2523
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1832_call = mod.get_global_var('func_1832')
func_1834_call = mutated_mod.get_global_var('func_1834')
call_2613 = relay.TupleGetItem(func_1832_call(), 0)
call_2614 = relay.TupleGetItem(func_1834_call(), 0)
func_851_call = mod.get_global_var('func_851')
func_852_call = mutated_mod.get_global_var('func_852')
call_2634 = relay.TupleGetItem(func_851_call(), 0)
call_2635 = relay.TupleGetItem(func_852_call(), 0)
var_2638 = relay.var("var_2638", dtype = "float64", shape = (5, 12, 4))#candidate|2638|(5, 12, 4)|var|float64
bop_2639 = relay.power(call_2613.astype('float32'), relay.reshape(var_2638.astype('float32'), relay.shape_of(call_2613))) # shape=(5, 12, 4)
bop_2642 = relay.power(call_2614.astype('float32'), relay.reshape(var_2638.astype('float32'), relay.shape_of(call_2614))) # shape=(5, 12, 4)
output = relay.Tuple([call_2634,bop_2639,])
output2 = relay.Tuple([call_2635,bop_2642,])
func_2643 = relay.Function([var_2638,], output)
mod['func_2643'] = func_2643
mod = relay.transform.InferType()(mod)
mutated_mod['func_2643'] = func_2643
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2644 = relay.var("var_2644", dtype = "float64", shape = (5, 12, 4))#candidate|2644|(5, 12, 4)|var|float64
func_2643_call = mutated_mod.get_global_var('func_2643')
call_2645 = func_2643_call(var_2644)
output = call_2645
func_2646 = relay.Function([var_2644], output)
mutated_mod['func_2646'] = func_2646
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1654_call = mod.get_global_var('func_1654')
func_1656_call = mutated_mod.get_global_var('func_1656')
call_2665 = relay.TupleGetItem(func_1654_call(), 0)
call_2666 = relay.TupleGetItem(func_1656_call(), 0)
output = call_2665
output2 = call_2666
func_2676 = relay.Function([], output)
mod['func_2676'] = func_2676
mod = relay.transform.InferType()(mod)
mutated_mod['func_2676'] = func_2676
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2676_call = mutated_mod.get_global_var('func_2676')
call_2677 = func_2676_call()
output = call_2677
func_2678 = relay.Function([], output)
mutated_mod['func_2678'] = func_2678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_986_call = mod.get_global_var('func_986')
func_987_call = mutated_mod.get_global_var('func_987')
call_2695 = relay.TupleGetItem(func_986_call(), 2)
call_2696 = relay.TupleGetItem(func_987_call(), 2)
output = call_2695
output2 = call_2696
func_2713 = relay.Function([], output)
mod['func_2713'] = func_2713
mod = relay.transform.InferType()(mod)
mutated_mod['func_2713'] = func_2713
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2713_call = mutated_mod.get_global_var('func_2713')
call_2714 = func_2713_call()
output = call_2714
func_2715 = relay.Function([], output)
mutated_mod['func_2715'] = func_2715
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2744 = relay.var("var_2744", dtype = "int64", shape = (4, 2, 6))#candidate|2744|(4, 2, 6)|var|int64
var_2745 = relay.var("var_2745", dtype = "int64", shape = (4, 2, 6))#candidate|2745|(4, 2, 6)|var|int64
bop_2746 = relay.minimum(var_2744.astype('int64'), relay.reshape(var_2745.astype('int64'), relay.shape_of(var_2744))) # shape=(4, 2, 6)
func_1612_call = mod.get_global_var('func_1612')
func_1614_call = mutated_mod.get_global_var('func_1614')
call_2751 = relay.TupleGetItem(func_1612_call(), 2)
call_2752 = relay.TupleGetItem(func_1614_call(), 2)
var_2760 = relay.var("var_2760", dtype = "int64", shape = (4, 2, 6))#candidate|2760|(4, 2, 6)|var|int64
bop_2761 = relay.greater_equal(bop_2746.astype('bool'), relay.reshape(var_2760.astype('bool'), relay.shape_of(bop_2746))) # shape=(4, 2, 6)
output = relay.Tuple([call_2751,bop_2761,])
output2 = relay.Tuple([call_2752,bop_2761,])
func_2766 = relay.Function([var_2744,var_2745,var_2760,], output)
mod['func_2766'] = func_2766
mod = relay.transform.InferType()(mod)
mutated_mod['func_2766'] = func_2766
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2766_call = mutated_mod.get_global_var('func_2766')
var_2768 = relay.var("var_2768", dtype = "int64", shape = (4, 2, 6))#candidate|2768|(4, 2, 6)|var|int64
var_2769 = relay.var("var_2769", dtype = "int64", shape = (4, 2, 6))#candidate|2769|(4, 2, 6)|var|int64
var_2770 = relay.var("var_2770", dtype = "int64", shape = (4, 2, 6))#candidate|2770|(4, 2, 6)|var|int64
call_2767 = func_2766_call(var_2768,var_2769,var_2770,)
output = call_2767
func_2771 = relay.Function([var_2768,var_2769,var_2770,], output)
mutated_mod['func_2771'] = func_2771
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1569_call = mod.get_global_var('func_1569')
func_1570_call = mutated_mod.get_global_var('func_1570')
call_2782 = relay.TupleGetItem(func_1569_call(), 2)
call_2783 = relay.TupleGetItem(func_1570_call(), 2)
func_2468_call = mod.get_global_var('func_2468')
func_2471_call = mutated_mod.get_global_var('func_2471')
var_2787 = relay.var("var_2787", dtype = "float32", shape = (63, 1))#candidate|2787|(63, 1)|var|float32
call_2786 = relay.TupleGetItem(func_2468_call(relay.reshape(var_2787.astype('float32'), [9, 1, 7])), 1)
call_2788 = relay.TupleGetItem(func_2471_call(relay.reshape(var_2787.astype('float32'), [9, 1, 7])), 1)
output = relay.Tuple([call_2782,call_2786,var_2787,])
output2 = relay.Tuple([call_2783,call_2788,var_2787,])
func_2789 = relay.Function([var_2787,], output)
mod['func_2789'] = func_2789
mod = relay.transform.InferType()(mod)
mutated_mod['func_2789'] = func_2789
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2790 = relay.var("var_2790", dtype = "float32", shape = (63, 1))#candidate|2790|(63, 1)|var|float32
func_2789_call = mutated_mod.get_global_var('func_2789')
call_2791 = func_2789_call(var_2790)
output = call_2791
func_2792 = relay.Function([var_2790], output)
mutated_mod['func_2792'] = func_2792
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1482_call = mod.get_global_var('func_1482')
func_1483_call = mutated_mod.get_global_var('func_1483')
call_2796 = relay.TupleGetItem(func_1482_call(), 0)
call_2797 = relay.TupleGetItem(func_1483_call(), 0)
func_554_call = mod.get_global_var('func_554')
func_557_call = mutated_mod.get_global_var('func_557')
const_2816 = relay.const([-6,-7,-8,-5,7,5,-10,-7,-9,3,8,7,2,5,7,-2,-8,-7,9,9,-10,6,-7,6,-1,-9,-4,2,8,-4,3,7,7,10,-4,4,5,5,-2,8,-7,-4,-3,9,-6,-4,8,-10,5,-3,-1,4,-6,8,9,3,2,9,6,5,-10,8,-10,5,10,-4,-2,7,-7,-5,-2,4,-8,9,10,3,-3,-10,-3,10,-2,6,-3,3,9,-8,-8,5,3,9,10,-3,-3,7,7,-1,2,-4,-10,8,-7,-10,-9,1,1,-7,-2,-3,5,-2,9,-1,9,-7,4,-10,-4,-6,-7,4,6,10,-4,-4,-5,9,-8,-5,8,7,1,-3,-8,-5,5,-5,-3,-9,-10,-3,-7,-8,-7,-5,-9,8,-10,3,7,4,-9,3,6,8,4,2,6,-8,5,9,-6,1,6,-5,-2,-5,10,1,-9,-3,-10,6,-4,-10,-10,10,4,3,5,-4,-8,8,-8,-5,9,2,2,-9,2,5,8,7,9,3,7,5,-10,-3,-3,7,-6,-5,-7,-7,4,3,9,4,-2,-6,-8,-6,3,7,8,1,-3,4,-1,-10,-3,4,7,-2,7,-9,10,-3,5,-10,-4,-6,-9,8,1,2,-3,8,6,-8,-9,-2,-2,-3,-5,-7,5,-7,-6,-2,-2,-1,-3,-6,10,-6,1,-7,2,-10,-2,-7,2,1,6,-5,2,-3,6,5,-5,4,-10,-1,-2,9,-7,2,10,-5,1,-5,7,-7,9,-10,5,-10,-6,7,-1,-5,5,-6,-3,1,3,4,-6,-7,-4,-9,1,-6,-2,7,3,10,9,3,8,-5,-2,3,1,2,6,-6,3,-6,-7,8,4,8,-3,7,-6,4,-3,-5,8,-2,1,9,-10,-8,-9,4,4,9,2,-1,-10,8,2,2,1,4,1,-5,-10,7,9,3,5,3,9,8,8,7,-9,2,4,-3,9,8,-3,9,10,7,5,3,-3,7,8,1,-4,9,-9,3,-2,-7,7,1,7,3,10,-6,-8,4,7,-3,-10,-9,7,-5,4,-6,-8,-8,-4,9,-8,7,-9,4,-6,-9,1,5,1,-7,-4,5,9,-10,-6,-9,3,-2,6,-10,-3,1,6,-2,-6,1,-3,5,-10,6,-2,-10,-10,-9,8,-9,8,-7,-3,-1,-9,2,-7,-5,-10,2,-8,8,7,-4,-7,-6,-2,9,-3,6,-1,5,3,-6,4,6,-4,-10,2,-4,7,-3,-4,-6,-1,10,-1,3,-6,1,-10,-10,1,-3,-5,1,-10,5,-7,10,3,1,4,10,-4,10,7,-8,1,1,-10,-2,-9,4,-5,-3,6,-4,9,-2,4,6,-1,10,-8,10,7,10,-8,-3,1,-3,1,9,1,4,-3,-7,-5,-6,9,-2,-1,-2,7,4,-3,-6,6,6,-7,3,1,4,-8,-10,10,3,2,-10,3,6,-5,-10,-8,-10,-7,6,-4,5,-3,-1,4,-4,-9,7,2,-8,6,10,6,-10,3,-2,-6,-1,1,10,5,-4,-10,-8,2,9,-6,3,-9,7,-9,-10,-6,-2,2,2,9,4,5,-2,-6,7,2,-3,5,2,9,-8,3,-1,5,-4,7,2,10,1,8,7,9,10,4,-9,4,-7,9,-5,1,-7,-9,-10,-6,4,-10,4,3,-5,-6,9,2,-8,-5,-5,4,7,-10,10,-8,10,5,9,-5,-6,-1,-2,4,3,-3,-8,-10,-10,-1,-8,7,9,9,-2,4,-7,5,-7,-9,10,9,-1,-4,9,3,6,-5,-4,5,-1,5,4,-9,-1,-1,2,-1,-1,6,-10,-7,-9,-1,9,8,-7,-9,-5,3,-9,-8,-6,-6,4,7,10,-10,8,-1,-9,6,4,-8,8,-4,8,1,-1,-1,8,-10,-5,7,-4,-10,-9,-1,-6,1,-2,2,-5,4,-10,2,4,-6,4,2,-6,-3,1,-8,-6,-10,4,-6,2,8,4,10,1,7,-1,-3,1,2,1,8,2,6,7,6,2,3,-3,-6,-1,10,-1,-1,-1,4,-4,1,-10,2,9,-1,2,-8,9,9,-6,3,4,-2,6,6,10,-8,4,-10,-9,-3,4,-6,-5,6,6,9,-5,4,6,-3,-9,7,-2,6,7,-2,1,8,5,-5,3,-2,4,-2,-9,-9,8,2,4,-1,7,5,-3,2,-7,10,1,-10,1,-9,7,-9,-5,-6,8,1,-1,1,-9,4,10,-10,8,-7,-2,-7,4,7,-6,-10,10,-8,-10,-5,-2,9,-4,4,-8,1,9,2,-4,5,-10,4,6,1,3,-7,6,8,4,2,-4,2,10,7,3,-6,6,-2,-4,-10,-10,3,-4,6,4,8,8,1,5,2,9,10,-9,-8,5,1,7,-1,-6,9,-2,10,-8,-8,9,9,-7,3,-1,-9,1,4,-6,8,-2,4,3,-6,4,-4,-3,9,1,-5,3,1,-6,3,-1,-5,-10,-7,-2,-4,6,-7,2,-8,-10,-7,9,-8,-4,4,-3,-8,-8,6,7,-6,9,-3,-3,-3,-6,-7,-10,-7,-7,-10,1,-5,-3,9,-2,-5,2,3,-9,-8,9,-7,4,5,-6,-4,-3,6,-2,5,1,7,6,-9,-10,-9,6,-10,-1,-4,10,-3,-8,6,-3,-6,-1,-10,-4,-3,9,5,-9,8,10,6,-1,-10,8,-1,-6,-9,-9,-5,1,-9,-3,8,9,-3,-7,8,10,6,-3,2,3,10,2,7,5,-6,2,2,7,2,-4,9,-8,3,4,-3,-9,-9,10,6,1,6,3,7,-1,1,9,1,-7,-9,2,-5,6,-3,9,-2,9,-6,-5,-10,1,-4,-3,6,-1,-2,6,5,-3,-8,8,-5,-7,-7,3,9,-3,2,9,-8,4,7,-7,-2,1,-5,2,-5,-8,-1,4,-4,-4,2,8,-4,-2,-2,3,1,6,4,3,-6,4,3,7,4,8,5,-8,6,-1,-8,4,2,-5,-7,8,1,-1,9,-4,1,10,5,6,9,2,6,9,6,-4,2,6,-3,10,5,6,-5,2,6,3,-7,-3,3,-9,-5,1,5,3,-4,-2,6,-5,-6,-2,4,10,-2,-4,-4,-3,-8,-6,-2,2,3,-3,4,1,4,4,1,-9,8,8,-6,1,-5,-6,-8,-1,2,10,-3,-6,6,-4,6,10,7,-6,-8,7,-5,-8,-1,4,6,-9,-6,-7,7,-9,-5,6,6,-4,-8,6,4,-6,7,-6,5,4,-2,-6,-2,-1,4,10,-9,4,5,-1,-8,-4,7,9,-7,5,-4,8,6,7,-7,1,1,-3,9,-9,-1,1,-5,7,-3,-1,3,-7,9,10,10,1,-1,2,-10,-7,2,-6,8,10,8,-2,-1,2,2,-7,7,4,4,-8,-4,5,2,-4,-7,-4,6,-7,-5,-10,-3,7,-4,-8,6,-5,10,10,-1,4,9,-2,4,-5,-8,-3,-1,-3,-3,5,8,2,8,-9,8,-5,-1,-3,8,-3,-2,-7,9,10,-10,3,-3,-5,-9,-9,10,-4,-3,-6,-5,-7,-5,4,6,-6,-6,-6,4,-9,-8,7,-2,-8,8,-8,-3,1,-1,2,8,-6,6,3,-3,-10,1,-8,-8,10,2,-8,2,7,-6,-3,-6,9,10,2,4,-6,-1,8,5,-5,7,-4,-5,-4,-9,-7,5,8,10,1,-4,-9,-3,4,6,-5,-5,3,1,2,4,6,7,-9,6,1,8,4,-6,9,2,-6,-6,-6,6,-6,9,-4,-6,3,2,1,-3,-3,-7,-2,10,-3,-9,-3,1,9,-1,-6,5,-10,-3,-9,8,-7,6,-4,-9,1,8,-3,3,-8,-5,1,6,-9,2,7,-1,5,-4,-2,-7,-1,6,5,5,4,-10,2,-6,-6,10,-8,-8,6,3,-4,-2,-5,-8,10,4,7,-6,-9,-9,-1,-8,10,4,-5,6,5,-6,-8,3,-10,-9,10,-6,-10,-3,6,9,-7,-3,-10,-4,9,-7,4,7,8,1,-3,-8,3,-5,-5,4,7,-4,6,-4,-8,6,-3,-6,-8,9,-7,8,10,-9,-8,-5,-10,-4,9,-3,-10,-8,1,6,-4,-3,-3,1,4,8,-10,-9,-6,-7,4,1,-1,9,-5,-1,1,10,-5,-9,8,1,2,10,-6,2,-9,3,2,-1,-6,-5,-4,-5,5,-10,-3,3,-2,5,2,-7,10,2,-2,10,5,7,2,10,5,-10,-10,6,-8,9,8,-4,4,2,-10,5,10,7,-3,-9,7,-9,-6,9,3,7,-4,10,8,-5,6,6,-2,-8,-9,5,8,-3,10,10,1,-5,-6,-4,-8,-5,-1,-10,1,7,-7,-8,-10,-9,2,-4,-7,-10,5,-9,5,9,4,-8,-7,7,-1,9,5,-2,9,3,-6,-9,9,5,-4,1,-4,-3,5,-3,6,-10,1,-9,9,-6,-5,7,5,-7,6,6,-6,-1,10,9,-5,8,-10,-8,-9,3,9,7,2,4,-1,-10,-9,1,-4,-7,9,6,-10,-8,9,2,-9,-4,2,-1,-6,1,-9,-7,3,3,-7,1,3,6,-9,10,9,1,1,4,2,-5,10,-5,3,-4,8,8,5,3,-6,5,10,5,-9,-1,6,5,7,10,-9,2,2,-9,8,2,-7,-9,5,10,-5,-7,6,-9,-4,-7,-5,-10,-1,-5,-3,2,6,-8,-5,6,-9,3,7,-10,-10,5,6,-4,6,-5,-8,10,-10,6,-7,7,7,3,1,4,10], dtype = "uint32")#candidate|2816|(1800,)|const|uint32
call_2815 = relay.TupleGetItem(func_554_call(relay.reshape(const_2816.astype('uint32'), [10, 15, 12])), 1)
call_2817 = relay.TupleGetItem(func_557_call(relay.reshape(const_2816.astype('uint32'), [10, 15, 12])), 1)
func_626_call = mod.get_global_var('func_626')
func_629_call = mutated_mod.get_global_var('func_629')
var_2835 = relay.var("var_2835", dtype = "float32", shape = (1, 264))#candidate|2835|(1, 264)|var|float32
call_2834 = relay.TupleGetItem(func_626_call(relay.reshape(var_2835.astype('float32'), [6, 11, 4])), 0)
call_2836 = relay.TupleGetItem(func_629_call(relay.reshape(var_2835.astype('float32'), [6, 11, 4])), 0)
func_1324_call = mod.get_global_var('func_1324')
func_1326_call = mutated_mod.get_global_var('func_1326')
const_2838 = relay.const([-3,7,9,-9,8,-9,-8,7,-8,-9,5,6,-8,-5,9,-1,-2,-6,-10,3,-3,-4,-1,-4,-1,-9,-2,-8,-9,5,4,10,-4,7,3,5,2,-10,10,3,8,-8,8,-1,8,5,-1,5,3,-9,-4,6,-4,1,2,-3,-8,3,4,5,9,3,-6,3,-2,8,9,-4,-2,-6,8,5,10,-4,-1,8,8,9,-10,3,-9,10,5,-2,6,1,7,4,5,2,4,7,-1,-5,-9,5,-9,5,-8,3,2,9,-2,-7,-10,5,10,5,-6,-6,-9,2,-5,-2,-5,8,8,9,2,-7,4,8,3,9,6,-4,-6,2,5,-6,-10,-8,-4,10,-2,8,-8,3,-10,1,-6,10,3,-3,10,9,-6,8,-3,-5,5,4,-2,7,7,-9,-4,5,2,4,-9,-2,9,4,10,10,3,-1,8,6,-9,-10,-5,-8,5,9,-6,-1,-2,-10,4,-8,-3,3,-10,-9,-5,9,4,-7,1,6,-6,4,-4,10,4,7,8,9,1,4,6,4,-3,10,-6,3,5,-3,2,7,3,3,3,9,9,10,9,7,6,7,-6,-7,8,10,-5,-7,-10,-10,-4,1,-6,-1,6,8,5,-7,6,2,5,-5,8,7,-4,-4,-7,4,-5,-10,-2,6,-4,6,8,5,9,-4,-3,8,-1,6,7,-3,4,5,2,1,6,-7,9,-10,3,7,6,-5,-6,-6,10,7,-1,-10,-6,8,-2,8,8,-10,-1,-8,2,5,2,-3,9,8,2,4,3,-10,8,6,6,-6,5,-6,-5,5,10,-4,5,10,2,-7,-7,-1,5,-10,7,7,-2,-7,4,8,7,5,-4,3,-1,4,-7,5,-4,4,3,-1,4,3,9,2,-3,-2,-1,4,5,-2,-3,-4,-1,6,2,10,7,-6,5,6,4,-5,-3,9,-7,8,-7,6,-3,-4,4,-2,7,9,5,-10,-1,6,-3,10,7,1,4,-1,-4,3,7,8,3,-6,1,7,-10,-8,9,5,7,7,-5,-8,3,6,-7,6,10,-8,7,-6,10,1,1,-5,-6,-10,3,10,1,8,10,8,7,2,-1,2,-2,3,1,-2,2,-7,-1,-3,-5,-10,6,-5,-2,-6,7,6,-2,-1,-7,-9,-6,-4,-5,1,9,-3,9,-5,-6,8,10,3,5,7,8,10,2,4,2,-5,9,5,7,3,-2,9,4,-8,-7,-10,-8,-10,6,-10,-1,1,-5,10,-6,-7,3,-4,7,6,6,-8,6,-7,-4,-5,1,5,-2,-10,-7,9,-3,8,7,-6,8,7,4,10,-8,10,-1,-7,-1,1,2,-9,7,8,9,-6,10,5,-5,1,-8,-7,8,-1,-9,-7,4,-7,-1,-4,-9,-9,4,-2,-7,-6,-3,-7,5,10,-2,-4,-10,9,5,4,-4,4,7,8,-8,2,-7,4,6,-5,-8,-5,9,-4,7,-10,-8,-10,-10,-10,3,2,8,-4,-10,3,8,-10,9,-3,9,7,10,4,-6,-10,6,-10,8,1,3,-7,1,9,-9,-6,10,8,1,-9,8,-7,-1,-1,3,6,7,8,-3,7,3,-2,7,2,4,4,-1,8,-9,1,-4,-9,-2,-8,8,-7,-9,2,1,-1,-5,8,-7,6,-7,10,-3,2,-8,2,-6,-6,10,-8,-2,-7,-7,3,-3,-9,-5,4,10,7,6,3,-8,4,7,-8,-4,-7,2,-2,8,-7,-2,5,7,-7,1,3,-9,7,1,-6,-2,6,3,-1,1,8,-9,3,-4,6,-2,-3,6,-8,7,3,-5,7,7,10,6,-9,-10,-10,5,-8,-7,-8,4,1,10,-3,3,4,8,7,-2,10,9,4,5,10,6,-4,-4,4,-1,8,6,3,5,-9,-6,-7,-8,8,-7,-7,6,3,-8,-5,-5,2,-4,7,-5,-4,-7,6,4,-1,4,-3,-1,2,5,-10,-10,-2,-9,4,7,-5,-1,-10,-6,-7,10,1,-8,1,-2,-4,3,-7], dtype = "int32")#candidate|2838|(768,)|const|int32
call_2837 = relay.TupleGetItem(func_1324_call(relay.reshape(const_2838.astype('int32'), [768,])), 2)
call_2839 = relay.TupleGetItem(func_1326_call(relay.reshape(const_2838.astype('int32'), [768,])), 2)
func_1254_call = mod.get_global_var('func_1254')
func_1255_call = mutated_mod.get_global_var('func_1255')
call_2855 = relay.TupleGetItem(func_1254_call(), 0)
call_2856 = relay.TupleGetItem(func_1255_call(), 0)
output = relay.Tuple([call_2796,call_2815,const_2816,call_2834,var_2835,call_2837,const_2838,call_2855,])
output2 = relay.Tuple([call_2797,call_2817,const_2816,call_2836,var_2835,call_2839,const_2838,call_2856,])
func_2874 = relay.Function([var_2835,], output)
mod['func_2874'] = func_2874
mod = relay.transform.InferType()(mod)
mutated_mod['func_2874'] = func_2874
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2875 = relay.var("var_2875", dtype = "float32", shape = (1, 264))#candidate|2875|(1, 264)|var|float32
func_2874_call = mutated_mod.get_global_var('func_2874')
call_2876 = func_2874_call(var_2875)
output = call_2876
func_2877 = relay.Function([var_2875], output)
mutated_mod['func_2877'] = func_2877
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1175_call = mod.get_global_var('func_1175')
func_1176_call = mutated_mod.get_global_var('func_1176')
call_2890 = func_1175_call()
call_2891 = func_1175_call()
output = call_2890
output2 = call_2891
func_2894 = relay.Function([], output)
mod['func_2894'] = func_2894
mod = relay.transform.InferType()(mod)
mutated_mod['func_2894'] = func_2894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2894_call = mutated_mod.get_global_var('func_2894')
call_2895 = func_2894_call()
output = call_2895
func_2896 = relay.Function([], output)
mutated_mod['func_2896'] = func_2896
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1143_call = mod.get_global_var('func_1143')
func_1145_call = mutated_mod.get_global_var('func_1145')
call_2942 = relay.TupleGetItem(func_1143_call(), 0)
call_2943 = relay.TupleGetItem(func_1145_call(), 0)
func_769_call = mod.get_global_var('func_769')
func_775_call = mutated_mod.get_global_var('func_775')
const_2952 = relay.const([7.724949,-4.032150,-4.253158,-8.065130,-8.479634,0.466325,-5.596705,0.520288,-2.853563,0.297124,-7.792289,4.083530,3.867103,-1.390792,-1.050596,-9.068082,-0.979126,4.108133,7.835205,6.331796,-7.479330,4.498683,0.190826,-2.821273,-3.553408,7.104940,0.343807,-4.964809,-5.260329,-7.750360,1.178802,-4.699812,0.672261,9.884686,0.802015,-4.016501,0.638921,-5.579849,1.940683,3.623699,3.288042,-0.026456,2.326480,5.457273,-4.039255,-9.333685,-8.701442,0.693102,2.092689,-0.295244,8.779423,-6.696658,-2.887478,-1.109387,1.615782,-1.314685,-0.420521,4.371166,0.990952,5.610253,-6.400446,9.786803,9.831205,4.064426,9.093271,7.805816,-4.506903,-6.468534,4.551685,-5.070354,-7.517345,3.056898,-0.058856,-0.410708,1.064734,7.899055,-4.723624,1.336997,3.417667,-4.386433,-5.542833,-9.010529,0.627290,-6.810637,4.628033,5.286920,7.302980,-5.759144,8.928773,0.411652,9.430912,3.165898,4.836700,5.062483,6.918090,-1.331142,7.196548,-1.413218,9.666084,8.713462,-7.915434,-7.636732,4.879931,8.716625,7.612852,-8.802121,3.640498,-2.811913,-9.466652,3.093301,6.139547,6.619862,-1.909675,8.001033,-9.373478,-0.355887,2.486062,-3.884566,-6.029883,-2.211434,-5.847318,-0.670262,-5.396465,1.723815,-2.403847,-3.761140,-3.542834,-3.556497,5.833196,-8.366901,4.311010,-0.633851,6.901765,7.478861,-1.289765,5.076971,-3.313699,-5.881520,0.899346,0.166278,2.143852,1.367821,-4.649228,-1.813805,-0.309601,9.306910,-5.564043,-7.024970,2.669893,1.355352,2.035564,-7.138022,-0.193056,-0.542441,-2.622762,3.196095,0.332612,8.847111,-4.363936,-7.022219,-4.869396,-5.685587,5.799179,-2.992759,2.360765,5.656870,2.432011,-3.345993,-8.961682,0.145332,2.558803,-0.248316,7.864732,-5.207860,-6.888615,-8.861503,-0.409678,0.655344,-3.018936,-6.486183,2.004095,-7.838019,-6.144714,-1.402904,-9.739669,2.821363,-9.747604,-4.904068,-5.385629,4.794226,6.954865,4.589581,5.592923,-7.291430,6.281087,5.449977,-8.642972,7.107891,-5.450546,0.001381,6.332246,-0.823740,4.893607,8.759041,9.703361,-9.285839,7.971161,6.730857,-9.958533,-6.318572,-8.428482,-1.228196,8.902356,7.524604,7.606472,-7.007189,-5.712588,-7.405265,-6.722956,0.111777,-2.073799,-3.034821,7.966414,-4.928083,0.668686,6.957167,-9.647769,-1.226160,2.232909,-3.262820,5.921649,0.899986,8.201914,2.324401,-8.090423,-8.931160,-5.258274,-7.384762,-9.527323,7.776736,1.443923,9.679300,-6.182096,8.844706,-3.704207,-0.531478,0.132560,6.516778,5.307761,-1.068609,7.156932,-7.437486], dtype = "float32")#candidate|2952|(252,)|const|float32
call_2951 = relay.TupleGetItem(func_769_call(relay.reshape(const_2952.astype('float32'), [3, 7, 12]), relay.reshape(const_2952.astype('float32'), [3, 7, 12]), relay.reshape(const_2952.astype('bool'), [3, 7, 12]), relay.reshape(const_2952.astype('float32'), [3, 7, 12]), ), 0)
call_2953 = relay.TupleGetItem(func_775_call(relay.reshape(const_2952.astype('float32'), [3, 7, 12]), relay.reshape(const_2952.astype('float32'), [3, 7, 12]), relay.reshape(const_2952.astype('bool'), [3, 7, 12]), relay.reshape(const_2952.astype('float32'), [3, 7, 12]), ), 0)
func_924_call = mod.get_global_var('func_924')
func_928_call = mutated_mod.get_global_var('func_928')
call_2982 = relay.TupleGetItem(func_924_call(relay.reshape(call_2942.astype('float64'), [5, 3, 6]), relay.reshape(call_2942.astype('float32'), [5, 3, 6]), ), 3)
call_2983 = relay.TupleGetItem(func_928_call(relay.reshape(call_2942.astype('float64'), [5, 3, 6]), relay.reshape(call_2942.astype('float32'), [5, 3, 6]), ), 3)
uop_2992 = relay.sinh(const_2952.astype('float32')) # shape=(252,)
uop_2996 = relay.atanh(call_2951.astype('float32')) # shape=(6, 11, 4)
uop_2998 = relay.atanh(call_2953.astype('float32')) # shape=(6, 11, 4)
func_769_call = mod.get_global_var('func_769')
func_775_call = mutated_mod.get_global_var('func_775')
call_3001 = relay.TupleGetItem(func_769_call(relay.reshape(uop_2992.astype('float32'), [3, 7, 12]), relay.reshape(uop_2992.astype('float32'), [3, 7, 12]), relay.reshape(const_2952.astype('bool'), [3, 7, 12]), relay.reshape(uop_2992.astype('float32'), [3, 7, 12]), ), 2)
call_3002 = relay.TupleGetItem(func_775_call(relay.reshape(uop_2992.astype('float32'), [3, 7, 12]), relay.reshape(uop_2992.astype('float32'), [3, 7, 12]), relay.reshape(const_2952.astype('bool'), [3, 7, 12]), relay.reshape(uop_2992.astype('float32'), [3, 7, 12]), ), 2)
func_1797_call = mod.get_global_var('func_1797')
func_1799_call = mutated_mod.get_global_var('func_1799')
call_3016 = relay.TupleGetItem(func_1797_call(relay.reshape(call_2942.astype('bool'), [5, 3, 6])), 4)
call_3017 = relay.TupleGetItem(func_1799_call(relay.reshape(call_2942.astype('bool'), [5, 3, 6])), 4)
func_2874_call = mod.get_global_var('func_2874')
func_2877_call = mutated_mod.get_global_var('func_2877')
call_3021 = relay.TupleGetItem(func_2874_call(relay.reshape(call_2951.astype('float32'), [1, 264])), 1)
call_3022 = relay.TupleGetItem(func_2877_call(relay.reshape(call_2951.astype('float32'), [1, 264])), 1)
output = relay.Tuple([call_2942,call_2982,uop_2992,uop_2996,call_3001,call_3016,call_3021,])
output2 = relay.Tuple([call_2943,call_2983,uop_2992,uop_2998,call_3002,call_3017,call_3022,])
func_3028 = relay.Function([], output)
mod['func_3028'] = func_3028
mod = relay.transform.InferType()(mod)
output = func_3028()
func_3029 = relay.Function([], output)
mutated_mod['func_3029'] = func_3029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1143_call = mod.get_global_var('func_1143')
func_1145_call = mutated_mod.get_global_var('func_1145')
call_3047 = relay.TupleGetItem(func_1143_call(), 0)
call_3048 = relay.TupleGetItem(func_1145_call(), 0)
func_525_call = mod.get_global_var('func_525')
func_527_call = mutated_mod.get_global_var('func_527')
call_3065 = func_525_call()
call_3066 = func_525_call()
output = relay.Tuple([call_3047,call_3065,])
output2 = relay.Tuple([call_3048,call_3066,])
func_3067 = relay.Function([], output)
mod['func_3067'] = func_3067
mod = relay.transform.InferType()(mod)
mutated_mod['func_3067'] = func_3067
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3067_call = mutated_mod.get_global_var('func_3067')
call_3068 = func_3067_call()
output = call_3068
func_3069 = relay.Function([], output)
mutated_mod['func_3069'] = func_3069
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1254_call = mod.get_global_var('func_1254')
func_1255_call = mutated_mod.get_global_var('func_1255')
call_3101 = relay.TupleGetItem(func_1254_call(), 0)
call_3102 = relay.TupleGetItem(func_1255_call(), 0)
var_3103 = relay.var("var_3103", dtype = "bool", shape = (5, 3, 6))#candidate|3103|(5, 3, 6)|var|bool
bop_3104 = relay.right_shift(call_3101.astype('int8'), relay.reshape(var_3103.astype('int8'), relay.shape_of(call_3101))) # shape=(5, 3, 6)
bop_3107 = relay.right_shift(call_3102.astype('int8'), relay.reshape(var_3103.astype('int8'), relay.shape_of(call_3102))) # shape=(5, 3, 6)
output = bop_3104
output2 = bop_3107
func_3108 = relay.Function([var_3103,], output)
mod['func_3108'] = func_3108
mod = relay.transform.InferType()(mod)
var_3109 = relay.var("var_3109", dtype = "bool", shape = (5, 3, 6))#candidate|3109|(5, 3, 6)|var|bool
output = func_3108(var_3109)
func_3110 = relay.Function([var_3109], output)
mutated_mod['func_3110'] = func_3110
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3112 = relay.var("var_3112", dtype = "float64", shape = (9, 3, 11))#candidate|3112|(9, 3, 11)|var|float64
uop_3113 = relay.sigmoid(var_3112.astype('float64')) # shape=(9, 3, 11)
output = relay.Tuple([uop_3113,])
output2 = relay.Tuple([uop_3113,])
func_3129 = relay.Function([var_3112,], output)
mod['func_3129'] = func_3129
mod = relay.transform.InferType()(mod)
var_3130 = relay.var("var_3130", dtype = "float64", shape = (9, 3, 11))#candidate|3130|(9, 3, 11)|var|float64
output = func_3129(var_3130)
func_3131 = relay.Function([var_3130], output)
mutated_mod['func_3131'] = func_3131
mutated_mod = relay.transform.InferType()(mutated_mod)
func_851_call = mod.get_global_var('func_851')
func_852_call = mutated_mod.get_global_var('func_852')
call_3146 = relay.TupleGetItem(func_851_call(), 0)
call_3147 = relay.TupleGetItem(func_852_call(), 0)
output = relay.Tuple([call_3146,])
output2 = relay.Tuple([call_3147,])
func_3149 = relay.Function([], output)
mod['func_3149'] = func_3149
mod = relay.transform.InferType()(mod)
mutated_mod['func_3149'] = func_3149
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3149_call = mutated_mod.get_global_var('func_3149')
call_3150 = func_3149_call()
output = call_3150
func_3151 = relay.Function([], output)
mutated_mod['func_3151'] = func_3151
mutated_mod = relay.transform.InferType()(mutated_mod)
func_339_call = mod.get_global_var('func_339')
func_341_call = mutated_mod.get_global_var('func_341')
call_3182 = relay.TupleGetItem(func_339_call(), 0)
call_3183 = relay.TupleGetItem(func_341_call(), 0)
output = relay.Tuple([call_3182,])
output2 = relay.Tuple([call_3183,])
func_3186 = relay.Function([], output)
mod['func_3186'] = func_3186
mod = relay.transform.InferType()(mod)
mutated_mod['func_3186'] = func_3186
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3186_call = mutated_mod.get_global_var('func_3186')
call_3187 = func_3186_call()
output = call_3187
func_3188 = relay.Function([], output)
mutated_mod['func_3188'] = func_3188
mutated_mod = relay.transform.InferType()(mutated_mod)
func_799_call = mod.get_global_var('func_799')
func_801_call = mutated_mod.get_global_var('func_801')
call_3206 = relay.TupleGetItem(func_799_call(), 0)
call_3207 = relay.TupleGetItem(func_801_call(), 0)
var_3210 = relay.var("var_3210", dtype = "float64", shape = (3, 7, 12))#candidate|3210|(3, 7, 12)|var|float64
bop_3211 = relay.floor_divide(call_3206.astype('float64'), relay.reshape(var_3210.astype('float64'), relay.shape_of(call_3206))) # shape=(3, 7, 12)
bop_3214 = relay.floor_divide(call_3207.astype('float64'), relay.reshape(var_3210.astype('float64'), relay.shape_of(call_3207))) # shape=(3, 7, 12)
bop_3223 = relay.left_shift(var_3210.astype('int64'), relay.reshape(bop_3211.astype('int64'), relay.shape_of(var_3210))) # shape=(3, 7, 12)
bop_3226 = relay.left_shift(var_3210.astype('int64'), relay.reshape(bop_3214.astype('int64'), relay.shape_of(var_3210))) # shape=(3, 7, 12)
func_2359_call = mod.get_global_var('func_2359')
func_2362_call = mutated_mod.get_global_var('func_2362')
const_3230 = relay.const(9, dtype = "int8")#candidate|3230|()|const|int8
var_3231 = relay.var("var_3231", dtype = "int8", shape = (18, 2))#candidate|3231|(18, 2)|var|int8
call_3229 = relay.TupleGetItem(func_2359_call(relay.reshape(const_3230.astype('int8'), []), relay.reshape(var_3231.astype('int8'), [9, 4, 1]), ), 1)
call_3232 = relay.TupleGetItem(func_2362_call(relay.reshape(const_3230.astype('int8'), []), relay.reshape(var_3231.astype('int8'), [9, 4, 1]), ), 1)
bop_3238 = relay.bitwise_xor(var_3231.astype('uint8'), const_3230.astype('uint8')) # shape=(18, 2)
output = relay.Tuple([bop_3223,call_3229,bop_3238,])
output2 = relay.Tuple([bop_3226,call_3232,bop_3238,])
func_3243 = relay.Function([var_3210,var_3231,], output)
mod['func_3243'] = func_3243
mod = relay.transform.InferType()(mod)
mutated_mod['func_3243'] = func_3243
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3243_call = mutated_mod.get_global_var('func_3243')
var_3245 = relay.var("var_3245", dtype = "float64", shape = (3, 7, 12))#candidate|3245|(3, 7, 12)|var|float64
var_3246 = relay.var("var_3246", dtype = "int8", shape = (18, 2))#candidate|3246|(18, 2)|var|int8
call_3244 = func_3243_call(var_3245,var_3246,)
output = call_3244
func_3247 = relay.Function([var_3245,var_3246,], output)
mutated_mod['func_3247'] = func_3247
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3307 = relay.var("var_3307", dtype = "float32", shape = (6, 13, 9))#candidate|3307|(6, 13, 9)|var|float32
uop_3308 = relay.rsqrt(var_3307.astype('float32')) # shape=(6, 13, 9)
uop_3310 = relay.acosh(uop_3308.astype('float64')) # shape=(6, 13, 9)
output = relay.Tuple([uop_3310,])
output2 = relay.Tuple([uop_3310,])
func_3312 = relay.Function([var_3307,], output)
mod['func_3312'] = func_3312
mod = relay.transform.InferType()(mod)
var_3313 = relay.var("var_3313", dtype = "float32", shape = (6, 13, 9))#candidate|3313|(6, 13, 9)|var|float32
output = func_3312(var_3313)
func_3314 = relay.Function([var_3313], output)
mutated_mod['func_3314'] = func_3314
mutated_mod = relay.transform.InferType()(mutated_mod)
func_525_call = mod.get_global_var('func_525')
func_527_call = mutated_mod.get_global_var('func_527')
call_3327 = func_525_call()
call_3328 = func_525_call()
var_3337 = relay.var("var_3337", dtype = "float32", shape = (3, 7, 12))#candidate|3337|(3, 7, 12)|var|float32
bop_3338 = relay.logical_xor(call_3327.astype('uint64'), relay.reshape(var_3337.astype('uint64'), relay.shape_of(call_3327))) # shape=(3, 7, 12)
bop_3341 = relay.logical_xor(call_3328.astype('uint64'), relay.reshape(var_3337.astype('uint64'), relay.shape_of(call_3328))) # shape=(3, 7, 12)
bop_3346 = relay.bitwise_and(var_3337.astype('uint16'), relay.reshape(call_3327.astype('uint16'), relay.shape_of(var_3337))) # shape=(3, 7, 12)
bop_3349 = relay.bitwise_and(var_3337.astype('uint16'), relay.reshape(call_3328.astype('uint16'), relay.shape_of(var_3337))) # shape=(3, 7, 12)
func_2713_call = mod.get_global_var('func_2713')
func_2715_call = mutated_mod.get_global_var('func_2715')
call_3372 = func_2713_call()
call_3373 = func_2713_call()
output = relay.Tuple([bop_3338,bop_3346,call_3372,])
output2 = relay.Tuple([bop_3341,bop_3349,call_3373,])
func_3375 = relay.Function([var_3337,], output)
mod['func_3375'] = func_3375
mod = relay.transform.InferType()(mod)
mutated_mod['func_3375'] = func_3375
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3376 = relay.var("var_3376", dtype = "float32", shape = (3, 7, 12))#candidate|3376|(3, 7, 12)|var|float32
func_3375_call = mutated_mod.get_global_var('func_3375')
call_3377 = func_3375_call(var_3376)
output = call_3377
func_3378 = relay.Function([var_3376], output)
mutated_mod['func_3378'] = func_3378
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3067_call = mod.get_global_var('func_3067')
func_3069_call = mutated_mod.get_global_var('func_3069')
call_3380 = relay.TupleGetItem(func_3067_call(), 0)
call_3381 = relay.TupleGetItem(func_3069_call(), 0)
func_554_call = mod.get_global_var('func_554')
func_557_call = mutated_mod.get_global_var('func_557')
var_3385 = relay.var("var_3385", dtype = "uint32", shape = (1800,))#candidate|3385|(1800,)|var|uint32
call_3384 = relay.TupleGetItem(func_554_call(relay.reshape(var_3385.astype('uint32'), [10, 15, 12])), 0)
call_3386 = relay.TupleGetItem(func_557_call(relay.reshape(var_3385.astype('uint32'), [10, 15, 12])), 0)
output = relay.Tuple([call_3380,call_3384,var_3385,])
output2 = relay.Tuple([call_3381,call_3386,var_3385,])
func_3397 = relay.Function([var_3385,], output)
mod['func_3397'] = func_3397
mod = relay.transform.InferType()(mod)
var_3398 = relay.var("var_3398", dtype = "uint32", shape = (1800,))#candidate|3398|(1800,)|var|uint32
output = func_3397(var_3398)
func_3399 = relay.Function([var_3398], output)
mutated_mod['func_3399'] = func_3399
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3403 = relay.var("var_3403", dtype = "int64", shape = (2, 12, 7))#candidate|3403|(2, 12, 7)|var|int64
const_3404 = relay.const([[[6,-5,-1,10,-9,-4,9],[10,8,5,8,5,9,1],[7,-5,9,2,6,-1,-7],[7,5,-1,7,10,3,-5],[9,8,-6,-1,-5,-7,2],[-8,-7,6,-2,6,2,7],[9,8,8,8,-8,-10,-9],[-4,7,4,6,-5,-9,-10],[-6,8,6,5,-1,9,9],[2,8,-3,-9,8,-6,-4],[5,6,10,5,8,-2,-3],[8,-2,-2,-10,5,1,-5]],[[-8,2,4,3,1,-1,-9],[10,4,6,2,-6,2,-10],[-5,-1,-5,-6,-10,2,-8],[2,6,3,-2,5,6,4],[3,4,10,-10,-8,-5,-5],[2,2,3,8,7,5,-3],[5,3,-5,5,2,-2,10],[-9,-4,10,-6,3,1,5],[-2,-8,-10,-5,8,2,-3],[-8,-2,10,9,2,-5,1],[-7,-1,-7,-5,2,3,10],[-9,10,8,6,7,-9,5]]], dtype = "int64")#candidate|3404|(2, 12, 7)|const|int64
bop_3405 = relay.greater_equal(var_3403.astype('bool'), relay.reshape(const_3404.astype('bool'), relay.shape_of(var_3403))) # shape=(2, 12, 7)
output = relay.Tuple([bop_3405,])
output2 = relay.Tuple([bop_3405,])
func_3419 = relay.Function([var_3403,], output)
mod['func_3419'] = func_3419
mod = relay.transform.InferType()(mod)
var_3420 = relay.var("var_3420", dtype = "int64", shape = (2, 12, 7))#candidate|3420|(2, 12, 7)|var|int64
output = func_3419(var_3420)
func_3421 = relay.Function([var_3420], output)
mutated_mod['func_3421'] = func_3421
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1996_call = mod.get_global_var('func_1996')
func_1998_call = mutated_mod.get_global_var('func_1998')
call_3440 = relay.TupleGetItem(func_1996_call(), 0)
call_3441 = relay.TupleGetItem(func_1998_call(), 0)
output = relay.Tuple([call_3440,])
output2 = relay.Tuple([call_3441,])
func_3445 = relay.Function([], output)
mod['func_3445'] = func_3445
mod = relay.transform.InferType()(mod)
mutated_mod['func_3445'] = func_3445
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3445_call = mutated_mod.get_global_var('func_3445')
call_3446 = func_3445_call()
output = call_3446
func_3447 = relay.Function([], output)
mutated_mod['func_3447'] = func_3447
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2088_call = mod.get_global_var('func_2088')
func_2090_call = mutated_mod.get_global_var('func_2090')
call_3452 = relay.TupleGetItem(func_2088_call(), 0)
call_3453 = relay.TupleGetItem(func_2090_call(), 0)
uop_3475 = relay.cosh(call_3452.astype('float64')) # shape=(3, 7, 12)
uop_3477 = relay.cosh(call_3453.astype('float64')) # shape=(3, 7, 12)
output = relay.Tuple([uop_3475,])
output2 = relay.Tuple([uop_3477,])
func_3498 = relay.Function([], output)
mod['func_3498'] = func_3498
mod = relay.transform.InferType()(mod)
mutated_mod['func_3498'] = func_3498
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3498_call = mutated_mod.get_global_var('func_3498')
call_3499 = func_3498_call()
output = call_3499
func_3500 = relay.Function([], output)
mutated_mod['func_3500'] = func_3500
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2713_call = mod.get_global_var('func_2713')
func_2715_call = mutated_mod.get_global_var('func_2715')
call_3514 = func_2713_call()
call_3515 = func_2713_call()
output = relay.Tuple([call_3514,])
output2 = relay.Tuple([call_3515,])
func_3517 = relay.Function([], output)
mod['func_3517'] = func_3517
mod = relay.transform.InferType()(mod)
mutated_mod['func_3517'] = func_3517
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3517_call = mutated_mod.get_global_var('func_3517')
call_3518 = func_3517_call()
output = call_3518
func_3519 = relay.Function([], output)
mutated_mod['func_3519'] = func_3519
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1175_call = mod.get_global_var('func_1175')
func_1176_call = mutated_mod.get_global_var('func_1176')
call_3557 = func_1175_call()
call_3558 = func_1175_call()
output = relay.Tuple([call_3557,])
output2 = relay.Tuple([call_3558,])
func_3578 = relay.Function([], output)
mod['func_3578'] = func_3578
mod = relay.transform.InferType()(mod)
mutated_mod['func_3578'] = func_3578
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3578_call = mutated_mod.get_global_var('func_3578')
call_3579 = func_3578_call()
output = call_3579
func_3580 = relay.Function([], output)
mutated_mod['func_3580'] = func_3580
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3578_call = mod.get_global_var('func_3578')
func_3580_call = mutated_mod.get_global_var('func_3580')
call_3657 = relay.TupleGetItem(func_3578_call(), 0)
call_3658 = relay.TupleGetItem(func_3580_call(), 0)
func_1440_call = mod.get_global_var('func_1440')
func_1441_call = mutated_mod.get_global_var('func_1441')
call_3660 = relay.TupleGetItem(func_1440_call(), 2)
call_3661 = relay.TupleGetItem(func_1441_call(), 2)
func_1451_call = mod.get_global_var('func_1451')
func_1453_call = mutated_mod.get_global_var('func_1453')
call_3669 = relay.TupleGetItem(func_1451_call(), 0)
call_3670 = relay.TupleGetItem(func_1453_call(), 0)
output = relay.Tuple([call_3657,call_3660,call_3669,])
output2 = relay.Tuple([call_3658,call_3661,call_3670,])
func_3671 = relay.Function([], output)
mod['func_3671'] = func_3671
mod = relay.transform.InferType()(mod)
mutated_mod['func_3671'] = func_3671
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3671_call = mutated_mod.get_global_var('func_3671')
call_3672 = func_3671_call()
output = call_3672
func_3673 = relay.Function([], output)
mutated_mod['func_3673'] = func_3673
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1020_call = mod.get_global_var('func_1020')
func_1021_call = mutated_mod.get_global_var('func_1021')
call_3711 = relay.TupleGetItem(func_1020_call(), 0)
call_3712 = relay.TupleGetItem(func_1021_call(), 0)
output = relay.Tuple([call_3711,])
output2 = relay.Tuple([call_3712,])
func_3716 = relay.Function([], output)
mod['func_3716'] = func_3716
mod = relay.transform.InferType()(mod)
mutated_mod['func_3716'] = func_3716
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3716_call = mutated_mod.get_global_var('func_3716')
call_3717 = func_3716_call()
output = call_3717
func_3718 = relay.Function([], output)
mutated_mod['func_3718'] = func_3718
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2167_call = mod.get_global_var('func_2167')
func_2168_call = mutated_mod.get_global_var('func_2168')
call_3756 = relay.TupleGetItem(func_2167_call(), 0)
call_3757 = relay.TupleGetItem(func_2168_call(), 0)
uop_3762 = relay.asinh(call_3756.astype('float32')) # shape=(3, 7, 12)
uop_3764 = relay.asinh(call_3757.astype('float32')) # shape=(3, 7, 12)
func_1254_call = mod.get_global_var('func_1254')
func_1255_call = mutated_mod.get_global_var('func_1255')
call_3778 = relay.TupleGetItem(func_1254_call(), 0)
call_3779 = relay.TupleGetItem(func_1255_call(), 0)
output = relay.Tuple([uop_3762,call_3778,])
output2 = relay.Tuple([uop_3764,call_3779,])
func_3780 = relay.Function([], output)
mod['func_3780'] = func_3780
mod = relay.transform.InferType()(mod)
output = func_3780()
func_3781 = relay.Function([], output)
mutated_mod['func_3781'] = func_3781
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3946 = relay.var("var_3946", dtype = "float64", shape = (1, 8, 5))#candidate|3946|(1, 8, 5)|var|float64
uop_3947 = relay.sqrt(var_3946.astype('float64')) # shape=(1, 8, 5)
output = uop_3947
output2 = uop_3947
func_3951 = relay.Function([var_3946,], output)
mod['func_3951'] = func_3951
mod = relay.transform.InferType()(mod)
var_3952 = relay.var("var_3952", dtype = "float64", shape = (1, 8, 5))#candidate|3952|(1, 8, 5)|var|float64
output = func_3951(var_3952)
func_3953 = relay.Function([var_3952], output)
mutated_mod['func_3953'] = func_3953
mutated_mod = relay.transform.InferType()(mutated_mod)
func_851_call = mod.get_global_var('func_851')
func_852_call = mutated_mod.get_global_var('func_852')
call_3967 = relay.TupleGetItem(func_851_call(), 0)
call_3968 = relay.TupleGetItem(func_852_call(), 0)
func_851_call = mod.get_global_var('func_851')
func_852_call = mutated_mod.get_global_var('func_852')
call_3979 = relay.TupleGetItem(func_851_call(), 0)
call_3980 = relay.TupleGetItem(func_852_call(), 0)
var_3981 = relay.var("var_3981", dtype = "float32", shape = (3, 7, 12))#candidate|3981|(3, 7, 12)|var|float32
bop_3982 = relay.less_equal(call_3979.astype('bool'), relay.reshape(var_3981.astype('bool'), relay.shape_of(call_3979))) # shape=(3, 7, 12)
bop_3985 = relay.less_equal(call_3980.astype('bool'), relay.reshape(var_3981.astype('bool'), relay.shape_of(call_3980))) # shape=(3, 7, 12)
output = relay.Tuple([call_3967,bop_3982,])
output2 = relay.Tuple([call_3968,bop_3985,])
func_3992 = relay.Function([var_3981,], output)
mod['func_3992'] = func_3992
mod = relay.transform.InferType()(mod)
var_3993 = relay.var("var_3993", dtype = "float32", shape = (3, 7, 12))#candidate|3993|(3, 7, 12)|var|float32
output = func_3992(var_3993)
func_3994 = relay.Function([var_3993], output)
mutated_mod['func_3994'] = func_3994
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4023 = relay.var("var_4023", dtype = "float64", shape = (6, 9, 6))#candidate|4023|(6, 9, 6)|var|float64
const_4024 = relay.const([[[0.485007,-6.743768,8.738605,-2.150646,-7.999626,4.092196],[-2.255538,-8.364089,-9.097724,-0.288642,2.633217,-0.098815],[9.406864,0.880198,-7.814018,4.852164,-1.337356,4.628361],[-5.614066,9.759240,-6.682722,-4.741356,-5.687117,-3.977441],[4.100377,-1.539439,-3.834328,3.431401,2.390101,5.069411],[9.983083,0.430937,-3.747590,1.694987,-0.633588,3.094458],[8.293887,6.360629,-8.578873,-2.131230,2.664139,1.755099],[2.042635,1.373564,8.182461,-1.915915,8.996126,-3.694409],[7.748930,1.078150,5.696773,-3.299555,-8.663236,-3.727783]],[[5.929508,-8.026756,7.616212,-4.551874,-0.916823,-2.035562],[-0.076738,-9.185191,-5.764961,-4.572464,-9.852164,-2.932402],[-1.096870,-0.223358,-9.887665,-5.655162,7.264898,-7.091456],[-7.466092,3.709072,5.312491,-1.283556,3.165633,2.591017],[-8.724925,4.025906,7.030130,-3.701164,-2.129810,6.401905],[6.028691,-8.912389,-5.713701,-2.389969,-8.179512,-4.084031],[7.439990,3.040802,9.605195,-5.889625,-5.479322,4.203236],[8.806833,-4.702435,-6.759900,8.139181,0.633948,1.559506],[-6.771702,-0.019963,1.670406,-9.813108,7.038264,6.119315]],[[1.216268,-7.029777,2.116788,6.217473,8.461501,-9.237739],[6.060375,-2.905524,-9.561005,8.337906,4.115636,8.255097],[-3.284640,0.416509,7.419219,-5.666000,-4.233851,0.390268],[-7.333927,4.867595,-2.171993,-0.591957,4.860214,-8.289534],[-2.352537,-7.478495,1.571043,-0.467200,-6.619684,7.160444],[9.689600,-5.709421,5.792131,4.658823,-7.771205,9.156270],[5.278237,8.910852,-4.014999,-0.908806,7.719372,-9.393788],[-5.136635,-0.419159,-1.015582,-6.439541,4.805499,-1.572644],[-3.041056,0.144180,-7.054440,6.930543,-4.619873,-3.222669]],[[-1.727314,1.634557,7.827505,-1.660213,-9.916955,-8.992722],[3.586777,-3.484982,7.460555,4.774807,9.186525,9.113181],[2.745441,4.616085,3.445763,1.077206,-0.296974,6.925989],[-8.684609,1.862792,-1.501044,-5.664875,-3.257496,-0.672254],[9.476392,-0.548576,-6.412789,-3.168525,-1.687465,0.534219],[1.003625,-0.517815,1.806165,4.150034,2.378021,9.457163],[7.635134,1.124060,-4.851349,5.811662,0.466172,-4.147725],[7.385762,-5.188008,-6.555319,5.960955,-0.917055,4.945297],[0.682141,2.942018,8.834156,-7.184588,-2.104691,4.916042]],[[-5.915557,-0.719744,-9.401439,1.973684,1.103691,8.901069],[-3.142958,9.800942,-9.377016,-4.180236,-0.879267,5.997942],[-7.694832,-4.296535,0.502752,-3.247546,-3.952773,-5.460455],[2.612735,1.156177,7.439542,8.486462,2.583071,-4.632778],[8.408802,-2.259532,-5.984717,-2.201496,6.409343,-2.863810],[-7.858314,-6.901183,4.699623,8.956840,0.676371,-8.970283],[1.790417,-2.796018,-5.218089,4.989489,8.535115,2.334764],[7.048876,9.796068,-2.900274,2.600649,-3.348122,-0.791191],[-8.305131,-9.020956,-1.860635,-5.887619,-1.086363,-1.956737]],[[7.835893,9.312698,5.892886,7.614928,-1.470394,-6.833533],[-2.438959,6.461403,0.827965,-7.290416,4.935357,0.890302],[4.800986,2.957548,-1.482577,2.620955,1.920625,5.380911],[2.258023,8.044824,6.246673,1.989705,-0.784428,-0.066337],[-3.545547,2.639878,6.050672,4.437465,1.940359,3.128850],[-1.479886,0.084879,5.205667,2.734671,7.376496,-5.481769],[-8.802628,-3.028639,-2.347290,-6.510764,-2.857668,-6.011880],[7.029740,-2.881254,-1.924046,-6.181096,-5.197787,3.217626],[-4.432324,9.326873,4.026026,-0.818638,6.004790,-0.905299]]], dtype = "float64")#candidate|4024|(6, 9, 6)|const|float64
bop_4025 = relay.power(var_4023.astype('float64'), relay.reshape(const_4024.astype('float64'), relay.shape_of(var_4023))) # shape=(6, 9, 6)
output = bop_4025
output2 = bop_4025
func_4028 = relay.Function([var_4023,], output)
mod['func_4028'] = func_4028
mod = relay.transform.InferType()(mod)
var_4029 = relay.var("var_4029", dtype = "float64", shape = (6, 9, 6))#candidate|4029|(6, 9, 6)|var|float64
output = func_4028(var_4029)
func_4030 = relay.Function([var_4029], output)
mutated_mod['func_4030'] = func_4030
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1175_call = mod.get_global_var('func_1175')
func_1176_call = mutated_mod.get_global_var('func_1176')
call_4059 = func_1175_call()
call_4060 = func_1175_call()
output = relay.Tuple([call_4059,])
output2 = relay.Tuple([call_4060,])
func_4078 = relay.Function([], output)
mod['func_4078'] = func_4078
mod = relay.transform.InferType()(mod)
output = func_4078()
func_4079 = relay.Function([], output)
mutated_mod['func_4079'] = func_4079
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1612_call = mod.get_global_var('func_1612')
func_1614_call = mutated_mod.get_global_var('func_1614')
call_4107 = relay.TupleGetItem(func_1612_call(), 2)
call_4108 = relay.TupleGetItem(func_1614_call(), 2)
output = relay.Tuple([call_4107,])
output2 = relay.Tuple([call_4108,])
func_4109 = relay.Function([], output)
mod['func_4109'] = func_4109
mod = relay.transform.InferType()(mod)
mutated_mod['func_4109'] = func_4109
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4109_call = mutated_mod.get_global_var('func_4109')
call_4110 = func_4109_call()
output = call_4110
func_4111 = relay.Function([], output)
mutated_mod['func_4111'] = func_4111
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2088_call = mod.get_global_var('func_2088')
func_2090_call = mutated_mod.get_global_var('func_2090')
call_4124 = relay.TupleGetItem(func_2088_call(), 0)
call_4125 = relay.TupleGetItem(func_2090_call(), 0)
func_1857_call = mod.get_global_var('func_1857')
func_1859_call = mutated_mod.get_global_var('func_1859')
call_4136 = relay.TupleGetItem(func_1857_call(), 0)
call_4137 = relay.TupleGetItem(func_1859_call(), 0)
output = relay.Tuple([call_4124,call_4136,])
output2 = relay.Tuple([call_4125,call_4137,])
func_4143 = relay.Function([], output)
mod['func_4143'] = func_4143
mod = relay.transform.InferType()(mod)
mutated_mod['func_4143'] = func_4143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4143_call = mutated_mod.get_global_var('func_4143')
call_4144 = func_4143_call()
output = call_4144
func_4145 = relay.Function([], output)
mutated_mod['func_4145'] = func_4145
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4149 = relay.var("var_4149", dtype = "float32", shape = ())#candidate|4149|()|var|float32
var_4150 = relay.var("var_4150", dtype = "float32", shape = (9, 15, 10))#candidate|4150|(9, 15, 10)|var|float32
bop_4151 = relay.power(var_4149.astype('float32'), var_4150.astype('float32')) # shape=(9, 15, 10)
output = relay.Tuple([bop_4151,])
output2 = relay.Tuple([bop_4151,])
func_4157 = relay.Function([var_4149,var_4150,], output)
mod['func_4157'] = func_4157
mod = relay.transform.InferType()(mod)
mutated_mod['func_4157'] = func_4157
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4157_call = mutated_mod.get_global_var('func_4157')
var_4159 = relay.var("var_4159", dtype = "float32", shape = ())#candidate|4159|()|var|float32
var_4160 = relay.var("var_4160", dtype = "float32", shape = (9, 15, 10))#candidate|4160|(9, 15, 10)|var|float32
call_4158 = func_4157_call(var_4159,var_4160,)
output = call_4158
func_4161 = relay.Function([var_4159,var_4160,], output)
mutated_mod['func_4161'] = func_4161
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1612_call = mod.get_global_var('func_1612')
func_1614_call = mutated_mod.get_global_var('func_1614')
call_4177 = relay.TupleGetItem(func_1612_call(), 0)
call_4178 = relay.TupleGetItem(func_1614_call(), 0)
var_4183 = relay.var("var_4183", dtype = "float64", shape = (3, 7, 12))#candidate|4183|(3, 7, 12)|var|float64
bop_4184 = relay.bitwise_xor(call_4177.astype('uint64'), relay.reshape(var_4183.astype('uint64'), relay.shape_of(call_4177))) # shape=(3, 7, 12)
bop_4187 = relay.bitwise_xor(call_4178.astype('uint64'), relay.reshape(var_4183.astype('uint64'), relay.shape_of(call_4178))) # shape=(3, 7, 12)
output = bop_4184
output2 = bop_4187
func_4195 = relay.Function([var_4183,], output)
mod['func_4195'] = func_4195
mod = relay.transform.InferType()(mod)
var_4196 = relay.var("var_4196", dtype = "float64", shape = (3, 7, 12))#candidate|4196|(3, 7, 12)|var|float64
output = func_4195(var_4196)
func_4197 = relay.Function([var_4196], output)
mutated_mod['func_4197'] = func_4197
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1654_call = mod.get_global_var('func_1654')
func_1656_call = mutated_mod.get_global_var('func_1656')
call_4199 = relay.TupleGetItem(func_1654_call(), 0)
call_4200 = relay.TupleGetItem(func_1656_call(), 0)
uop_4201 = relay.exp(call_4199.astype('float64')) # shape=(5, 3, 6)
uop_4203 = relay.exp(call_4200.astype('float64')) # shape=(5, 3, 6)
func_4078_call = mod.get_global_var('func_4078')
func_4079_call = mutated_mod.get_global_var('func_4079')
call_4211 = relay.TupleGetItem(func_4078_call(), 0)
call_4212 = relay.TupleGetItem(func_4079_call(), 0)
var_4221 = relay.var("var_4221", dtype = "float64", shape = (5, 3, 6))#candidate|4221|(5, 3, 6)|var|float64
bop_4222 = relay.left_shift(uop_4201.astype('uint32'), relay.reshape(var_4221.astype('uint32'), relay.shape_of(uop_4201))) # shape=(5, 3, 6)
bop_4225 = relay.left_shift(uop_4203.astype('uint32'), relay.reshape(var_4221.astype('uint32'), relay.shape_of(uop_4203))) # shape=(5, 3, 6)
func_3312_call = mod.get_global_var('func_3312')
func_3314_call = mutated_mod.get_global_var('func_3314')
var_4243 = relay.var("var_4243", dtype = "float32", shape = (702,))#candidate|4243|(702,)|var|float32
call_4242 = relay.TupleGetItem(func_3312_call(relay.reshape(var_4243.astype('float32'), [6, 13, 9])), 0)
call_4244 = relay.TupleGetItem(func_3314_call(relay.reshape(var_4243.astype('float32'), [6, 13, 9])), 0)
func_554_call = mod.get_global_var('func_554')
func_557_call = mutated_mod.get_global_var('func_557')
const_4248 = relay.const([2,-1,-2,5,-4,3,-3,-3,-3,-1,6,-10,-3,4,-4,-7,-7,-9,9,-6,-6,-3,4,-1,-8,5,-6,-4,-6,9,3,8,-8,9,-2,2,-2,7,10,4,2,-2,4,5,4,10,2,7,5,-9,1,-3,6,-10,9,4,3,2,-4,7,-3,-7,-5,6,2,-6,-7,-7,-10,9,3,3,-9,-3,-1,3,9,10,-4,-5,4,-1,-10,-3,-5,2,-6,-4,-1,10,-1,-8,10,-6,6,3,3,-10,2,3,-8,7,-1,10,10,-4,2,-1,1,9,1,9,7,6,5,-9,6,8,7,-1,-8,7,-8,4,-8,-9,6,2,1,5,7,10,9,3,6,4,9,-5,2,6,-4,-8,7,4,-5,-6,4,-8,-4,1,-6,-7,4,2,3,5,-7,6,2,3,-10,4,5,-6,-4,10,-10,5,-8,2,-8,-7,-2,10,6,3,-2,-9,-8,5,-10,2,-1,5,-7,-3,6,4,4,3,-9,5,3,8,6,3,-8,7,-5,3,3,-9,-7,-8,6,2,-6,-7,-10,10,8,-4,-10,8,-5,-7,8,-7,10,-7,-7,-2,-3,-3,3,8,9,-10,3,4,10,8,1,2,-3,8,5,4,-8,-2,10,-4,4,-8,1,-8,-7,-8,2,-10,10,-6,7,-4,6,-7,10,7,-5,-2,9,9,4,4,9,2,1,6,-7,2,8,2,-3,1,-6,-8,1,-10,-5,3,-10,5,5,9,4,9,-3,2,-2,7,6,-2,1,3,10,-3,-5,4,-2,3,-6,-9,-3,-6,4,2,9,6,-8,9,9,8,2,3,3,-9,-8,10,9,-8,-1,2,6,1,9,10,2,1,8,-8,-1,1,-7,-5,-7,9,5,8,-9,3,-9,-7,9,-4,3,-9,9,4,-1,2,1,-3,-3,8,-10,-2,-2,-1,-7,9,9,4,9,3,8,5,-9,6,1,-3,-4,1,6,-8,-9,4,-8,5,6,-5,-7,4,1,7,-5,-3,7,-7,-10,-5,6,8,-8,1,-4,10,9,7,-5,1,7,1,10,7,4,10,3,-6,-2,5,-3,7,-9,1,-9,6,-6,9,8,7,-10,-4,6,4,-6,2,-5,9,-3,10,3,-7,-6,5,4,5,-1,-9,-8,-5,-3,2,-7,-2,3,2,7,-3,8,6,-1,10,-8,1,3,8,2,-1,-3,9,4,-2,-1,-5,-6,-4,2,1,2,-5,7,-8,7,9,-4,-8,10,-9,-6,1,-5,-10,-9,-6,4,-6,7,9,-7,4,7,-8,-3,-7,3,-2,2,-5,3,-2,5,8,-5,-5,-7,2,2,-10,-8,3,-4,-10,-7,7,-6,-6,8,2,1,6,10,-2,9,-9,-9,-8,7,1,-3,-3,9,2,3,5,-3,2,8,-8,-7,5,9,-1,1,2,2,7,-7,3,2,6,8,9,-5,4,-3,-8,-4,1,-4,-1,2,-2,-6,-1,-2,2,-8,-7,-7,2,1,4,-10,-1,2,3,-2,5,9,-4,4,2,-8,-2,1,7,-6,7,8,2,-2,3,9,1,3,-8,3,8,8,-6,-6,1,6,9,8,3,6,3,4,-3,9,-6,1,4,4,6,-5,-9,7,-2,-9,4,-2,3,10,5,-9,-4,4,8,7,5,3,10,4,-4,10,-2,-4,10,-3,5,-7,10,4,7,-4,-5,10,8,1,9,-9,-4,8,-6,1,10,-10,-7,-10,10,-9,-2,10,5,1,3,-6,4,-10,-2,-4,7,5,-10,8,-9,-3,-8,-1,4,-6,4,3,6,10,4,-4,-8,5,-2,-6,-2,9,3,2,4,6,1,-5,3,-9,-9,-8,-10,3,-7,-2,-9,8,3,-1,9,-4,-5,9,6,4,1,-2,-4,2,5,10,-6,-6,-2,7,-4,-4,-4,8,-3,5,6,-4,2,4,3,-1,-6,-10,-6,8,10,1,-6,-3,-3,2,6,4,3,5,-3,5,-5,-6,1,-1,7,-4,2,2,6,7,-8,-9,-6,-7,1,8,6,-5,7,10,9,-9,-1,-6,-2,10,3,-3,4,-10,1,-8,-2,-3,-2,-5,5,2,4,7,-1,8,-4,3,-2,-2,-8,7,7,1,3,10,9,-5,10,-8,7,-4,-6,1,-9,10,-5,-9,9,4,5,9,6,6,-6,-6,10,-7,9,6,-3,7,-5,2,6,7,10,7,10,1,-8,2,-8,-6,-7,5,1,7,8,-2,-5,-8,-5,-10,-8,2,7,4,2,-10,-4,-6,7,-3,-5,9,-5,5,-2,6,4,-6,3,6,-1,4,-3,2,-6,-3,3,-10,-1,-2,-10,2,8,6,-7,-7,-9,6,3,-2,-7,1,8,-10,-6,1,3,-9,1,-2,-8,-7,-2,-8,2,-8,-4,-1,-8,-3,-5,10,8,-9,-7,-7,2,1,-8,-10,9,-3,5,-7,-5,1,7,-8,-3,3,-5,-4,-6,-2,-5,9,10,-9,4,-2,-8,-10,4,-9,-2,6,5,-6,-4,7,1,-3,8,8,10,4,2,-5,2,3,8,-3,7,6,-2,-1,1,-5,-8,4,4,-5,1,-1,4,7,3,-7,-3,-4,-5,7,-10,6,5,5,-7,-6,-2,1,10,10,-8,-4,7,6,-4,10,5,-10,-8,-2,5,3,-2,5,-2,5,-1,3,-8,2,3,-6,7,-1,-10,2,-8,7,1,3,-7,3,1,6,6,1,-9,6,-2,-5,-9,-2,-1,-6,-10,-4,-1,-5,-5,-10,-8,-10,8,6,-4,-6,5,-9,-6,-9,-6,-3,3,7,-8,1,-10,4,-9,-9,1,-6,-3,7,10,6,-2,-10,7,-5,6,3,-6,-5,-9,-6,10,-1,6,4,5,-9,1,1,9,-2,-9,3,4,-10,2,5,9,7,-5,1,-3,6,2,-1,-1,-7,10,10,6,8,8,-2,-1,-4,9,6,-6,3,8,-8,-9,-3,-5,-4,3,-8,5,-9,8,5,-9,-7,-1,-2,6,-10,-4,-3,-6,-9,9,9,9,2,-1,5,8,-6,4,-10,9,5,-4,4,7,8,-3,2,7,1,3,-2,10,1,-6,-4,2,-8,-10,-8,-8,-5,-7,4,4,-4,3,-9,-3,-7,-3,4,2,2,6,1,8,4,-4,9,-6,-5,8,2,-6,10,1,3,-8,7,8,-6,5,-2,-10,7,6,5,-7,5,7,3,3,-5,-2,5,-2,6,2,-6,-9,-6,-6,8,7,7,3,4,-5,-5,1,6,-10,3,-2,-2,-4,5,9,-1,9,2,7,7,5,10,-1,-1,1,-5,-5,-4,-5,-6,4,-3,-7,-4,3,8,-3,-5,-7,5,2,-2,7,3,5,-10,-9,2,10,-2,-5,-10,-1,3,1,5,-10,-10,3,10,-3,8,3,-5,6,-5,-8,-9,10,-6,-2,6,-9,8,8,-1,8,10,-9,-6,4,6,-8,2,9,-1,-2,2,3,-5,-7,1,-8,-9,-8,2,8,-8,6,-4,-10,7,-4,-1,-10,8,-5,-5,2,9,-8,-3,-10,-3,-1,-1,-4,10,9,6,10,-9,3,-7,9,-4,-7,-3,8,-5,-3,-9,-7,8,10,5,8,-6,-7,5,-9,3,5,-6,2,-1,8,-5,-9,-8,6,1,-9,-4,-2,-4,-5,-6,5,-5,-3,-3,8,-5,2,8,-9,2,7,-6,-5,9,-5,10,9,6,-4,3,10,9,-3,2,5,2,1,1,6,6,5,3,3,-5,2,-1,6,-6,6,-3,-3,-4,-10,-10,7,10,-4,-5,2,-8,-8,7,-8,4,-1,6,1,8,-7,10,8,5,10,-1,-1,-9,7,-4,-8,-10,5,-3,-7,10,3,7,7,-3,3,-3,4,-5,7,7,-10,-2,-2,3,-8,-3,-10,-10,4,8,-9,6,-1,8,2,3,4,-9,2,8,-3,-1,-3,2,8,9,-10,-3,-5,1,8,-1,1,1,-10,-5,1,-7,-9,-4,-10,-4,-7,1,10,1,-6,-2,-2,2,1,-6,5,7,-4,-1,-1,5,4,1,-10,3,5,-4,-8,9,-6,-10,-8,-5,5,9,10,5,1,-9,-8,-10,-8,8,-3,-5,-9,9,1,2,-9,5,4,-3,-6,8,7,-5,-4,-2,1,5,-2,9,-8,1,-1,-7,6,10,4,-6,-7,7,5,8,7,-5,-10,2,5,-7,10,1,-6,8,2,3,4,-1,-9,4,-6,5,-3,-6,-10,7,9,-8,1,-6,-1,-2,-9,3,-4,4,-7,-8,5,1,8,-7,-5,3,2,-9,-8,-7,6,7,-8,1,-1,8,-2,-3,-6,-1,-7,9,4,2,10,3,1,5,-4,-7,-5,2,5,-2,-10,-3,7,-6,-1,5,10,-7,-9,-2,-9,7,-3,3,-8,8,8,-3,-7,-6,-9,-10,-10,-10,9,1,1,4,-8,-4,4,2,-7,-6,8,-3,-4,6,9,-4,-7,6,4,-4,9,-9,-3,-6,10,3,4,4,8,-4,7,-5,5,-4,3,1,7,-6,1,-1,4,8,9,-7,-2,-1,-1,5,8,-4,9,-5,-3,9,3,-6,3,6,-6,6,-6,-8,3,-4,1,2,-3,-6,-7,4,-4,-8,4,6,9,-7,1,3,-9,5,-6,9,5,8,2,-4,2,-3,8,-6,3,1,1,6,-2,1,9,7,-7,5,-7,-10,-3,-7,4,7,9,1,-1,-1,9,10,3,-1,-2,-2,9,8,-4,-2,-8,-6,-6,-10,-4], dtype = "uint32")#candidate|4248|(1800,)|const|uint32
call_4247 = relay.TupleGetItem(func_554_call(relay.reshape(const_4248.astype('uint32'), [10, 15, 12])), 0)
call_4249 = relay.TupleGetItem(func_557_call(relay.reshape(const_4248.astype('uint32'), [10, 15, 12])), 0)
uop_4253 = relay.sigmoid(call_4247.astype('float64')) # shape=(10, 15, 12)
uop_4255 = relay.sigmoid(call_4249.astype('float64')) # shape=(10, 15, 12)
uop_4262 = relay.atan(call_4211.astype('float64')) # shape=(3, 7, 12)
uop_4264 = relay.atan(call_4212.astype('float64')) # shape=(3, 7, 12)
func_3578_call = mod.get_global_var('func_3578')
func_3580_call = mutated_mod.get_global_var('func_3580')
call_4267 = relay.TupleGetItem(func_3578_call(), 0)
call_4268 = relay.TupleGetItem(func_3580_call(), 0)
output = relay.Tuple([bop_4222,call_4242,var_4243,const_4248,uop_4253,uop_4262,call_4267,])
output2 = relay.Tuple([bop_4225,call_4244,var_4243,const_4248,uop_4255,uop_4264,call_4268,])
func_4272 = relay.Function([var_4221,var_4243,], output)
mod['func_4272'] = func_4272
mod = relay.transform.InferType()(mod)
mutated_mod['func_4272'] = func_4272
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4272_call = mutated_mod.get_global_var('func_4272')
var_4274 = relay.var("var_4274", dtype = "float64", shape = (5, 3, 6))#candidate|4274|(5, 3, 6)|var|float64
var_4275 = relay.var("var_4275", dtype = "float32", shape = (702,))#candidate|4275|(702,)|var|float32
call_4273 = func_4272_call(var_4274,var_4275,)
output = call_4273
func_4276 = relay.Function([var_4274,var_4275,], output)
mutated_mod['func_4276'] = func_4276
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2088_call = mod.get_global_var('func_2088')
func_2090_call = mutated_mod.get_global_var('func_2090')
call_4386 = relay.TupleGetItem(func_2088_call(), 0)
call_4387 = relay.TupleGetItem(func_2090_call(), 0)
uop_4405 = relay.log(call_4386.astype('float32')) # shape=(3, 7, 12)
uop_4407 = relay.log(call_4387.astype('float32')) # shape=(3, 7, 12)
func_357_call = mod.get_global_var('func_357')
func_359_call = mutated_mod.get_global_var('func_359')
call_4418 = relay.TupleGetItem(func_357_call(), 1)
call_4419 = relay.TupleGetItem(func_359_call(), 1)
func_3375_call = mod.get_global_var('func_3375')
func_3378_call = mutated_mod.get_global_var('func_3378')
call_4431 = relay.TupleGetItem(func_3375_call(relay.reshape(call_4386.astype('float32'), [3, 7, 12])), 1)
call_4432 = relay.TupleGetItem(func_3378_call(relay.reshape(call_4386.astype('float32'), [3, 7, 12])), 1)
bop_4439 = relay.maximum(uop_4405.astype('int16'), relay.reshape(call_4386.astype('int16'), relay.shape_of(uop_4405))) # shape=(3, 7, 12)
bop_4442 = relay.maximum(uop_4407.astype('int16'), relay.reshape(call_4387.astype('int16'), relay.shape_of(uop_4407))) # shape=(3, 7, 12)
func_835_call = mod.get_global_var('func_835')
func_837_call = mutated_mod.get_global_var('func_837')
const_4452 = relay.const([4.655195,0.418447,-8.066911,3.603901,0.089142,-3.760808,-9.237083,5.743690,9.837077,-2.293097,-5.549802,-6.767420,-9.330777,6.241908,-4.719308,-9.795319,-6.266081,9.837880,3.751456,-3.442623,1.746903,3.342055,-9.294479,3.921497,-1.392068,2.702067,8.477118,8.149173,-2.075313,1.653814,-9.598100,2.579069,-9.156014,-7.772400,6.590241,-6.599417,9.771468,-1.933595,-1.975293,6.428750,-5.683246,5.928372,-6.685342,8.948983,-2.243455,4.187654,-3.934112,9.009792,-1.354082,-3.173625], dtype = "float64")#candidate|4452|(50,)|const|float64
call_4451 = func_835_call(relay.reshape(const_4452.astype('float64'), [5, 10]))
call_4453 = func_835_call(relay.reshape(const_4452.astype('float64'), [5, 10]))
output = relay.Tuple([call_4418,call_4431,bop_4439,call_4451,const_4452,])
output2 = relay.Tuple([call_4419,call_4432,bop_4442,call_4453,const_4452,])
func_4458 = relay.Function([], output)
mod['func_4458'] = func_4458
mod = relay.transform.InferType()(mod)
output = func_4458()
func_4459 = relay.Function([], output)
mutated_mod['func_4459'] = func_4459
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1857_call = mod.get_global_var('func_1857')
func_1859_call = mutated_mod.get_global_var('func_1859')
call_4517 = relay.TupleGetItem(func_1857_call(), 0)
call_4518 = relay.TupleGetItem(func_1859_call(), 0)
func_799_call = mod.get_global_var('func_799')
func_801_call = mutated_mod.get_global_var('func_801')
call_4519 = relay.TupleGetItem(func_799_call(), 0)
call_4520 = relay.TupleGetItem(func_801_call(), 0)
func_3375_call = mod.get_global_var('func_3375')
func_3378_call = mutated_mod.get_global_var('func_3378')
call_4525 = relay.TupleGetItem(func_3375_call(relay.reshape(call_4517.astype('float32'), [3, 7, 12])), 0)
call_4526 = relay.TupleGetItem(func_3378_call(relay.reshape(call_4517.astype('float32'), [3, 7, 12])), 0)
output = relay.Tuple([call_4517,call_4519,call_4525,])
output2 = relay.Tuple([call_4518,call_4520,call_4526,])
func_4538 = relay.Function([], output)
mod['func_4538'] = func_4538
mod = relay.transform.InferType()(mod)
mutated_mod['func_4538'] = func_4538
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4538_call = mutated_mod.get_global_var('func_4538')
call_4539 = func_4538_call()
output = call_4539
func_4540 = relay.Function([], output)
mutated_mod['func_4540'] = func_4540
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4541 = relay.var("var_4541", dtype = "uint64", shape = (11, 3, 10))#candidate|4541|(11, 3, 10)|var|uint64
var_4542 = relay.var("var_4542", dtype = "uint64", shape = (11, 3, 10))#candidate|4542|(11, 3, 10)|var|uint64
bop_4543 = relay.logical_xor(var_4541.astype('uint64'), relay.reshape(var_4542.astype('uint64'), relay.shape_of(var_4541))) # shape=(11, 3, 10)
uop_4551 = relay.sqrt(var_4541.astype('float64')) # shape=(11, 3, 10)
func_2789_call = mod.get_global_var('func_2789')
func_2792_call = mutated_mod.get_global_var('func_2792')
var_4560 = relay.var("var_4560", dtype = "float32", shape = (63,))#candidate|4560|(63,)|var|float32
call_4559 = relay.TupleGetItem(func_2789_call(relay.reshape(var_4560.astype('float32'), [63, 1])), 1)
call_4561 = relay.TupleGetItem(func_2792_call(relay.reshape(var_4560.astype('float32'), [63, 1])), 1)
bop_4570 = relay.multiply(uop_4551.astype('int32'), relay.reshape(bop_4543.astype('int32'), relay.shape_of(uop_4551))) # shape=(11, 3, 10)
func_4195_call = mod.get_global_var('func_4195')
func_4197_call = mutated_mod.get_global_var('func_4197')
var_4582 = relay.var("var_4582", dtype = "float64", shape = (252,))#candidate|4582|(252,)|var|float64
call_4581 = func_4195_call(relay.reshape(var_4582.astype('float64'), [3, 7, 12]))
call_4583 = func_4195_call(relay.reshape(var_4582.astype('float64'), [3, 7, 12]))
output = relay.Tuple([call_4559,var_4560,bop_4570,call_4581,var_4582,])
output2 = relay.Tuple([call_4561,var_4560,bop_4570,call_4583,var_4582,])
func_4591 = relay.Function([var_4541,var_4542,var_4560,var_4582,], output)
mod['func_4591'] = func_4591
mod = relay.transform.InferType()(mod)
var_4592 = relay.var("var_4592", dtype = "uint64", shape = (11, 3, 10))#candidate|4592|(11, 3, 10)|var|uint64
var_4593 = relay.var("var_4593", dtype = "uint64", shape = (11, 3, 10))#candidate|4593|(11, 3, 10)|var|uint64
var_4594 = relay.var("var_4594", dtype = "float32", shape = (63,))#candidate|4594|(63,)|var|float32
var_4595 = relay.var("var_4595", dtype = "float64", shape = (252,))#candidate|4595|(252,)|var|float64
output = func_4591(var_4592,var_4593,var_4594,var_4595,)
func_4596 = relay.Function([var_4592,var_4593,var_4594,var_4595,], output)
mutated_mod['func_4596'] = func_4596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3517_call = mod.get_global_var('func_3517')
func_3519_call = mutated_mod.get_global_var('func_3519')
call_4618 = relay.TupleGetItem(func_3517_call(), 0)
call_4619 = relay.TupleGetItem(func_3519_call(), 0)
func_1208_call = mod.get_global_var('func_1208')
func_1212_call = mutated_mod.get_global_var('func_1212')
var_4626 = relay.var("var_4626", dtype = "int32", shape = (768,))#candidate|4626|(768,)|var|int32
call_4625 = func_1208_call(relay.reshape(var_4626.astype('int32'), [8, 6, 16]), relay.reshape(var_4626.astype('int32'), [8, 6, 16]), )
call_4627 = func_1208_call(relay.reshape(var_4626.astype('int32'), [8, 6, 16]), relay.reshape(var_4626.astype('int32'), [8, 6, 16]), )
uop_4634 = relay.sin(call_4625.astype('float32')) # shape=(8, 6, 16)
uop_4636 = relay.sin(call_4627.astype('float32')) # shape=(8, 6, 16)
output = relay.Tuple([call_4618,var_4626,uop_4634,])
output2 = relay.Tuple([call_4619,var_4626,uop_4636,])
func_4643 = relay.Function([var_4626,], output)
mod['func_4643'] = func_4643
mod = relay.transform.InferType()(mod)
mutated_mod['func_4643'] = func_4643
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4644 = relay.var("var_4644", dtype = "int32", shape = (768,))#candidate|4644|(768,)|var|int32
func_4643_call = mutated_mod.get_global_var('func_4643')
call_4645 = func_4643_call(var_4644)
output = call_4645
func_4646 = relay.Function([var_4644], output)
mutated_mod['func_4646'] = func_4646
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1996_call = mod.get_global_var('func_1996')
func_1998_call = mutated_mod.get_global_var('func_1998')
call_4808 = relay.TupleGetItem(func_1996_call(), 0)
call_4809 = relay.TupleGetItem(func_1998_call(), 0)
uop_4827 = relay.sin(call_4808.astype('float32')) # shape=(3, 7, 12)
uop_4829 = relay.sin(call_4809.astype('float32')) # shape=(3, 7, 12)
output = relay.Tuple([uop_4827,])
output2 = relay.Tuple([uop_4829,])
func_4839 = relay.Function([], output)
mod['func_4839'] = func_4839
mod = relay.transform.InferType()(mod)
mutated_mod['func_4839'] = func_4839
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4839_call = mutated_mod.get_global_var('func_4839')
call_4840 = func_4839_call()
output = call_4840
func_4841 = relay.Function([], output)
mutated_mod['func_4841'] = func_4841
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4458_call = mod.get_global_var('func_4458')
func_4459_call = mutated_mod.get_global_var('func_4459')
call_4856 = relay.TupleGetItem(func_4458_call(), 1)
call_4857 = relay.TupleGetItem(func_4459_call(), 1)
func_2294_call = mod.get_global_var('func_2294')
func_2298_call = mutated_mod.get_global_var('func_2298')
var_4861 = relay.var("var_4861", dtype = "uint32", shape = (280, 1))#candidate|4861|(280, 1)|var|uint32
call_4860 = func_2294_call(relay.reshape(var_4861.astype('uint32'), [14, 10, 2]), relay.reshape(var_4861.astype('uint32'), [14, 10, 2]), )
call_4862 = func_2294_call(relay.reshape(var_4861.astype('uint32'), [14, 10, 2]), relay.reshape(var_4861.astype('uint32'), [14, 10, 2]), )
bop_4865 = relay.divide(var_4861.astype('float64'), relay.reshape(call_4860.astype('float64'), relay.shape_of(var_4861))) # shape=(280, 1)
bop_4868 = relay.divide(var_4861.astype('float64'), relay.reshape(call_4862.astype('float64'), relay.shape_of(var_4861))) # shape=(280, 1)
output = relay.Tuple([call_4856,bop_4865,])
output2 = relay.Tuple([call_4857,bop_4868,])
func_4870 = relay.Function([var_4861,], output)
mod['func_4870'] = func_4870
mod = relay.transform.InferType()(mod)
var_4871 = relay.var("var_4871", dtype = "uint32", shape = (280, 1))#candidate|4871|(280, 1)|var|uint32
output = func_4870(var_4871)
func_4872 = relay.Function([var_4871], output)
mutated_mod['func_4872'] = func_4872
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3780_call = mod.get_global_var('func_3780')
func_3781_call = mutated_mod.get_global_var('func_3781')
call_4892 = relay.TupleGetItem(func_3780_call(), 1)
call_4893 = relay.TupleGetItem(func_3781_call(), 1)
output = relay.Tuple([call_4892,])
output2 = relay.Tuple([call_4893,])
func_4894 = relay.Function([], output)
mod['func_4894'] = func_4894
mod = relay.transform.InferType()(mod)
output = func_4894()
func_4895 = relay.Function([], output)
mutated_mod['func_4895'] = func_4895
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3578_call = mod.get_global_var('func_3578')
func_3580_call = mutated_mod.get_global_var('func_3580')
call_4901 = relay.TupleGetItem(func_3578_call(), 0)
call_4902 = relay.TupleGetItem(func_3580_call(), 0)
output = call_4901
output2 = call_4902
func_4912 = relay.Function([], output)
mod['func_4912'] = func_4912
mod = relay.transform.InferType()(mod)
mutated_mod['func_4912'] = func_4912
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4912_call = mutated_mod.get_global_var('func_4912')
call_4913 = func_4912_call()
output = call_4913
func_4914 = relay.Function([], output)
mutated_mod['func_4914'] = func_4914
mutated_mod = relay.transform.InferType()(mutated_mod)
func_109_call = mod.get_global_var('func_109')
func_111_call = mutated_mod.get_global_var('func_111')
call_4977 = relay.TupleGetItem(func_109_call(), 0)
call_4978 = relay.TupleGetItem(func_111_call(), 0)
func_3517_call = mod.get_global_var('func_3517')
func_3519_call = mutated_mod.get_global_var('func_3519')
call_4981 = relay.TupleGetItem(func_3517_call(), 0)
call_4982 = relay.TupleGetItem(func_3519_call(), 0)
var_4989 = relay.var("var_4989", dtype = "float32", shape = (5, 12, 4))#candidate|4989|(5, 12, 4)|var|float32
bop_4990 = relay.maximum(call_4977.astype('int16'), relay.reshape(var_4989.astype('int16'), relay.shape_of(call_4977))) # shape=(5, 12, 4)
bop_4993 = relay.maximum(call_4978.astype('int16'), relay.reshape(var_4989.astype('int16'), relay.shape_of(call_4978))) # shape=(5, 12, 4)
func_1028_call = mod.get_global_var('func_1028')
func_1029_call = mutated_mod.get_global_var('func_1029')
call_4994 = relay.TupleGetItem(func_1028_call(), 0)
call_4995 = relay.TupleGetItem(func_1029_call(), 0)
output = relay.Tuple([call_4981,bop_4990,call_4994,])
output2 = relay.Tuple([call_4982,bop_4993,call_4995,])
func_5001 = relay.Function([var_4989,], output)
mod['func_5001'] = func_5001
mod = relay.transform.InferType()(mod)
var_5002 = relay.var("var_5002", dtype = "float32", shape = (5, 12, 4))#candidate|5002|(5, 12, 4)|var|float32
output = func_5001(var_5002)
func_5003 = relay.Function([var_5002], output)
mutated_mod['func_5003'] = func_5003
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3149_call = mod.get_global_var('func_3149')
func_3151_call = mutated_mod.get_global_var('func_3151')
call_5008 = relay.TupleGetItem(func_3149_call(), 0)
call_5009 = relay.TupleGetItem(func_3151_call(), 0)
func_4143_call = mod.get_global_var('func_4143')
func_4145_call = mutated_mod.get_global_var('func_4145')
call_5029 = relay.TupleGetItem(func_4143_call(), 0)
call_5030 = relay.TupleGetItem(func_4145_call(), 0)
output = relay.Tuple([call_5008,call_5029,])
output2 = relay.Tuple([call_5009,call_5030,])
func_5033 = relay.Function([], output)
mod['func_5033'] = func_5033
mod = relay.transform.InferType()(mod)
output = func_5033()
func_5034 = relay.Function([], output)
mutated_mod['func_5034'] = func_5034
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5109 = relay.var("var_5109", dtype = "int64", shape = (11, 10, 11))#candidate|5109|(11, 10, 11)|var|int64
const_5110 = relay.const([[[-5,4,-1,-2,-7,5,-9,5,-8,10,-8],[3,-1,-7,8,-2,5,6,9,6,-10,1],[-2,3,-9,-9,3,8,1,-9,-9,2,1],[10,8,5,1,-9,4,2,6,10,-3,1],[4,-5,-5,7,-4,5,2,-4,-7,5,5],[-5,-3,8,5,-2,-3,2,-3,-5,5,-1],[-1,-10,-5,10,-6,-1,-1,-5,-2,5,-3],[5,-5,2,-10,7,-5,-10,5,2,-4,-10],[-6,1,-3,7,-5,-1,3,-10,-4,4,5],[-4,3,-2,3,-4,-9,10,3,-8,-10,-1]],[[-10,-7,10,-8,7,-5,-9,9,-1,2,-10],[-1,-10,1,8,2,-3,-6,2,7,-7,-2],[-3,10,-6,5,-7,-6,7,-6,1,5,-6],[-8,5,8,10,-8,-2,7,3,1,10,6],[7,2,-9,-4,8,-3,-9,-6,-2,-4,-5],[2,4,-9,-1,2,4,-7,-3,-7,-5,7],[-5,5,-7,4,1,-1,7,1,-4,5,-9],[10,5,4,-2,-6,-3,-4,1,6,2,-8],[9,9,4,-1,8,6,1,-3,-2,9,9],[10,3,-3,5,-6,-5,-6,-10,-4,10,-2]],[[-2,5,-4,-1,-10,-5,7,10,3,6,10],[7,-9,-8,10,10,-3,-6,-9,-1,10,-2],[8,-8,-7,-9,6,-8,-8,6,6,-10,2],[7,-4,2,8,10,-7,7,5,-2,-5,-10],[9,-10,3,-6,-9,6,-5,7,2,9,8],[-3,3,7,-10,-10,-2,-3,-2,10,4,-5],[6,-2,1,-8,-7,-3,-8,6,-7,6,7],[-6,2,10,-4,7,-9,8,8,9,9,-6],[4,7,-8,-3,-6,-6,7,-6,-5,2,-10],[3,8,-5,-6,6,-5,-3,9,10,7,4]],[[5,6,3,-1,-8,-2,6,5,-10,-4,-5],[-8,5,10,7,7,-5,2,-10,-8,-9,7],[10,9,-3,3,-2,-4,10,-8,-9,-8,7],[-10,-5,7,1,-1,-6,-8,-5,-8,-3,-3],[-6,9,7,8,9,3,8,-8,-4,9,9],[-8,10,1,-8,-6,9,-8,5,2,-5,8],[5,-2,6,8,1,-2,-1,4,-9,-4,6],[-7,-1,4,4,-9,1,5,-5,5,-8,-6],[-1,-10,1,-1,9,7,-4,4,-3,6,-6],[-1,5,-6,-4,4,5,6,-2,-2,-4,9]],[[-7,6,7,6,-5,4,-3,-5,-5,2,4],[7,-4,5,5,6,8,-6,5,6,-8,-2],[-3,8,3,-9,8,3,2,-10,1,-2,9],[1,9,6,2,-6,2,-2,-4,3,4,5],[-3,6,10,-4,6,-5,-5,-10,-6,1,-2],[6,-3,-9,-5,4,9,6,7,-10,-5,6],[5,-8,-4,-2,1,4,7,2,8,-1,-7],[-8,-7,7,-5,-2,9,-3,9,9,1,6],[7,-9,-6,-5,9,7,-4,-8,5,1,-9],[1,10,-10,5,9,5,-8,10,4,-9,-5]],[[-3,-3,-4,6,-9,-3,-7,9,2,4,6],[8,7,7,-1,2,7,4,-10,-7,5,9],[7,-4,6,4,-1,-9,-2,-8,-9,9,-4],[9,1,-6,-6,-8,2,1,1,-1,-6,3],[-7,5,9,-1,-4,10,6,2,2,-6,4],[-4,1,-7,6,-8,-1,8,-4,-5,-1,6],[1,-1,9,-7,3,10,-9,-4,9,7,-7],[-1,3,-1,-1,2,-4,6,10,-10,7,10],[1,8,-8,-1,9,5,-8,-8,1,10,5],[-3,-9,10,5,1,-4,7,5,4,-9,-10]],[[3,-5,-10,-4,-3,9,-9,10,-9,-1,10],[-4,7,-1,-6,3,-8,8,5,2,8,-2],[2,-3,2,5,-6,-9,6,-9,-8,4,3],[4,1,-8,1,7,3,-6,8,9,8,-4],[5,-7,-6,-2,10,-6,4,-1,5,8,-2],[3,4,1,-7,8,-10,8,5,-4,-6,7],[6,4,-10,9,7,-9,3,4,-8,-5,-7],[-4,-3,-7,-1,-10,4,8,8,-3,9,-9],[5,4,8,-2,2,-7,-4,-3,-9,-2,9],[-7,5,-6,-6,-7,-8,4,8,-1,4,5]],[[-2,-3,-3,6,-2,1,-4,4,-1,1,-1],[7,5,-2,-8,4,-7,-1,-1,4,-9,-1],[-3,-5,5,6,-4,-7,-3,-5,6,-8,-8],[5,7,3,4,1,10,-2,3,-2,2,-6],[-8,5,2,-9,4,10,-3,7,8,7,-5],[4,8,7,-3,5,3,7,5,6,10,-1],[10,10,-8,-7,-7,-1,4,5,10,-1,1],[-8,2,6,-9,-6,-2,8,-5,-3,3,7],[1,-5,5,-3,3,-3,-3,-8,-5,-5,1],[9,6,8,5,9,9,-8,-9,3,10,7]],[[-6,-10,-9,9,6,-8,9,4,-3,-3,-6],[-9,2,6,-9,-7,-10,-5,10,3,-4,-10],[6,1,6,4,-5,-6,-4,-8,7,-7,10],[10,-7,-8,3,-6,-2,10,10,-10,6,3],[8,2,-7,-6,2,9,-8,-2,4,10,4],[-2,4,3,-7,2,8,-3,-5,-1,5,-8],[-4,-4,8,-4,5,-1,9,-1,-10,2,-8],[-10,5,10,9,1,-10,-4,8,-3,6,-2],[-9,9,-7,-5,9,-8,7,4,-7,1,-1],[-6,-5,-4,4,-5,-10,-10,9,-1,-3,3]],[[-10,5,-4,-5,-5,6,3,-2,5,-9,4],[-1,9,1,3,-9,3,-10,-2,3,-9,7],[6,-8,7,-3,1,3,-8,-1,2,-3,3],[3,-8,1,3,9,7,10,7,4,9,-7],[6,7,-7,3,2,5,10,9,-4,-5,-8],[-7,-10,2,-2,6,8,-6,-4,4,4,-7],[-5,-10,-5,-2,-9,7,-1,9,-1,-1,-8],[3,-3,7,-8,2,1,4,6,-10,-6,4],[-7,3,8,6,-9,6,-7,9,-5,1,-4],[3,-3,-7,-9,8,-6,1,-5,9,-5,-7]],[[-8,-8,-9,1,3,5,7,7,-7,-10,-8],[-6,-8,-6,-10,7,-9,-2,-3,-4,-7,4],[-5,9,-6,4,10,6,6,4,2,5,6],[2,8,-10,4,-10,5,-2,6,6,7,7],[1,-1,-3,-6,2,2,3,7,-6,-8,-6],[-3,-6,10,8,-9,1,3,6,2,-9,-10],[-6,2,3,10,-10,-2,1,-2,-1,9,-2],[-5,4,-4,2,7,-10,8,9,-5,-3,9],[-2,3,3,5,-6,2,8,3,2,9,-9],[9,7,8,2,-5,8,8,-2,7,-5,-8]]], dtype = "int64")#candidate|5110|(11, 10, 11)|const|int64
bop_5111 = relay.greater_equal(var_5109.astype('bool'), relay.reshape(const_5110.astype('bool'), relay.shape_of(var_5109))) # shape=(11, 10, 11)
func_835_call = mod.get_global_var('func_835')
func_837_call = mutated_mod.get_global_var('func_837')
var_5117 = relay.var("var_5117", dtype = "float64", shape = (10, 5))#candidate|5117|(10, 5)|var|float64
call_5116 = func_835_call(relay.reshape(var_5117.astype('float64'), [5, 10]))
call_5118 = func_835_call(relay.reshape(var_5117.astype('float64'), [5, 10]))
bop_5128 = relay.logical_or(const_5110.astype('bool'), relay.reshape(bop_5111.astype('bool'), relay.shape_of(const_5110))) # shape=(11, 10, 11)
func_1482_call = mod.get_global_var('func_1482')
func_1483_call = mutated_mod.get_global_var('func_1483')
call_5138 = relay.TupleGetItem(func_1482_call(), 0)
call_5139 = relay.TupleGetItem(func_1483_call(), 0)
func_4195_call = mod.get_global_var('func_4195')
func_4197_call = mutated_mod.get_global_var('func_4197')
call_5154 = func_4195_call(relay.reshape(call_5138.astype('float64'), [3, 7, 12]))
call_5155 = func_4195_call(relay.reshape(call_5138.astype('float64'), [3, 7, 12]))
output = relay.Tuple([call_5116,var_5117,bop_5128,call_5138,call_5154,])
output2 = relay.Tuple([call_5118,var_5117,bop_5128,call_5139,call_5155,])
func_5159 = relay.Function([var_5109,var_5117,], output)
mod['func_5159'] = func_5159
mod = relay.transform.InferType()(mod)
var_5160 = relay.var("var_5160", dtype = "int64", shape = (11, 10, 11))#candidate|5160|(11, 10, 11)|var|int64
var_5161 = relay.var("var_5161", dtype = "float64", shape = (10, 5))#candidate|5161|(10, 5)|var|float64
output = func_5159(var_5160,var_5161,)
func_5162 = relay.Function([var_5160,var_5161,], output)
mutated_mod['func_5162'] = func_5162
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5174 = relay.var("var_5174", dtype = "float64", shape = ())#candidate|5174|()|var|float64
const_5175 = relay.const([[[6.776317,-7.607661,-1.636127,0.566007,8.133065,5.057048,-4.044341,-9.812527,-2.330140,-9.247353],[-6.622759,3.450402,8.742116,5.778770,-3.346205,2.764444,3.227407,-1.287221,-0.325649,-5.200962],[-9.995832,9.171561,5.617347,-2.716087,-6.263052,-3.603783,-9.528149,7.079234,4.939078,3.117540],[-5.666101,2.183030,-0.234402,5.354897,-9.493677,-7.824056,5.461103,1.302953,4.347895,-9.126705],[3.792385,-9.315383,7.315938,3.522914,-3.811400,-1.962832,0.958551,3.068608,-0.218350,5.864087],[-7.819284,4.449500,2.980952,-2.455122,-1.271844,-9.868007,5.745605,5.749884,3.262424,5.437129],[-1.059717,-8.821466,-9.738704,0.277555,-9.750166,5.576202,1.135406,-3.894457,5.464748,9.793901],[0.429369,7.156342,0.985852,2.288757,1.771660,-9.508782,3.882271,-3.483236,-6.457404,-8.731148],[-7.802578,6.719295,-8.656779,-6.448864,-8.378290,5.941226,-7.053812,9.144768,-8.245586,-1.880573],[9.905228,0.239522,8.828115,-9.186391,3.680735,-7.369205,-4.529302,2.401989,0.198147,5.866969],[-5.764492,8.085966,4.874502,-3.403734,-4.434042,-6.985588,6.643251,-7.565017,2.451118,6.631880],[8.700474,-3.120366,7.835673,-3.882270,3.988189,6.200107,-7.790838,-7.088057,1.193268,3.196195],[3.811173,9.404644,1.521340,9.782375,0.272002,-4.282237,-4.670784,-0.225502,-0.749920,-0.115459],[-8.564604,7.380562,1.067402,4.010317,-5.273451,-0.221337,-1.858763,0.368377,3.172838,-8.851895],[9.462829,5.758909,2.280417,3.365972,-9.635386,0.889499,7.757536,9.757505,6.896677,6.032731]],[[-7.305831,8.902445,-2.747202,-7.683025,-7.409206,-5.568460,4.731143,4.884565,2.746181,0.499304],[0.186185,7.729730,6.229691,9.312340,5.253289,5.602538,-1.915585,-3.093641,6.825654,-5.179820],[1.728202,7.294586,-1.689174,0.503312,5.133594,8.104577,1.776216,-7.539851,2.050136,8.637601],[-0.923577,-8.070526,-5.879923,0.075668,-2.229169,5.825349,-0.317807,-9.560605,4.539817,5.154221],[-7.281394,6.384973,3.156300,1.475921,0.795115,8.199791,4.810011,-1.102189,-6.421377,5.386370],[8.090158,-3.040828,2.360337,-1.670828,-6.974756,3.877392,-2.400497,-9.350616,-9.765168,7.834601],[2.812710,-0.294921,-5.422545,-5.176490,-8.423355,3.280542,-1.810222,-4.274806,2.260827,-5.939004],[-7.034314,-4.033707,4.158441,-6.547275,-8.971445,3.697063,-9.324062,-8.489525,5.817478,6.903509],[-6.926973,0.596622,-3.116844,-2.944543,5.912573,6.043258,9.715043,-2.572178,-8.472980,-2.640002],[-5.319832,-3.029256,0.904548,-0.500541,9.294484,6.646859,-6.692737,-2.276046,-8.175800,-8.035466],[-4.586108,3.479001,-3.190210,-1.636840,-2.802825,2.039819,-5.702171,8.401503,2.642575,-8.807409],[3.976926,-0.548117,6.235134,-1.206559,-9.098870,3.601890,-0.421600,-2.083828,-3.086594,8.961296],[0.898745,-8.658820,9.865417,-9.535387,7.421758,9.175183,-3.985228,-4.507217,5.105087,4.864656],[-5.167228,-9.028955,3.250360,5.128291,1.390614,-2.592336,0.131166,-8.340140,-1.717689,2.487445],[-9.888487,-4.637455,4.445911,-0.346812,4.358582,-3.116663,-2.332562,-0.318087,7.156167,7.117425]],[[-6.827883,0.982395,-6.049880,-7.994341,-6.330506,-5.254641,7.960948,3.979750,-3.406367,6.340378],[4.269085,7.955976,-0.550671,4.693057,7.665768,-0.625988,-9.956299,7.218545,0.236198,2.360954],[-6.877467,-7.577107,-8.351815,-0.321527,4.242291,-6.192432,2.628023,-6.826285,5.550350,7.532516],[2.771977,2.226396,5.689548,-4.401403,-2.741418,6.785059,-7.322788,-3.449213,5.455479,6.592285],[-7.431347,-7.218490,0.102026,8.188242,-7.007638,2.184380,-7.490522,-0.193511,8.326904,7.184700],[-1.493117,-6.633094,-8.664159,-3.509412,6.262357,4.557427,7.927170,8.766368,-5.968491,-5.159453],[0.468329,-8.503289,-2.276919,-3.848670,-6.514354,8.030958,-9.385640,3.954242,1.002386,-2.271033],[0.421711,-3.246233,3.896547,0.415345,8.609562,2.624130,7.976145,-2.830296,-1.686670,5.174708],[-9.722580,8.936905,9.485262,-3.649673,-3.296926,2.693263,-0.456794,2.731317,-2.586467,0.592445],[-5.334729,-0.974004,2.051173,8.557647,9.279718,-4.640039,0.669724,-1.839211,-7.612391,3.118073],[-4.737801,-2.870265,5.601964,-1.962990,-1.879412,3.240637,-8.851101,-9.534757,-7.015237,7.613451],[-9.717502,-7.189514,-3.236315,-1.872101,0.148273,5.643343,0.008609,-0.892814,1.855995,-4.857120],[-2.205521,-8.271268,4.753615,-4.632103,-9.039172,-5.921533,6.778368,1.758850,3.064246,-5.108501],[9.518436,-8.458244,5.370047,7.644791,-8.263019,-9.644497,4.707825,1.899667,3.642829,0.673235],[-6.979050,7.181316,-9.354212,7.426594,-3.034432,-2.752055,1.324961,-8.390525,0.587992,-5.991355]],[[0.545937,-1.708204,0.495975,-6.326054,-5.502287,9.715101,8.295556,-9.555692,7.402661,2.593238],[-7.272993,1.404086,6.459778,-1.455455,-7.709771,-6.303033,-8.285389,-1.911785,-5.666458,-3.837625],[-8.836808,7.621742,-3.251934,3.904528,1.137487,-8.410508,-9.420431,-3.743715,9.334307,-2.732909],[7.521924,-1.500618,-2.426109,2.935112,1.856149,2.061852,5.106213,6.032338,-2.725412,6.204791],[8.808773,5.136420,-6.296296,7.979470,2.169244,9.961767,-3.450328,-2.138114,-3.172497,-1.995452],[6.040683,-7.367962,-5.565036,2.362956,-7.561353,9.771539,-3.231128,-1.328694,-5.603888,-7.412455],[5.967602,-8.935137,4.085397,-6.786856,-3.179782,0.837224,-0.025316,9.640626,7.224396,-5.280981],[6.901681,-8.488853,-2.858436,-6.348205,-2.226651,-7.933594,-6.376187,-9.036187,1.399965,-7.944342],[0.635440,-9.556333,5.945198,-5.136358,-7.312040,-9.672683,-0.896720,6.076937,1.621177,5.903259],[-4.239550,-6.737627,-0.947635,5.495462,3.715658,-9.744159,0.610864,2.879939,-7.472633,-8.736604],[-1.053193,-7.502773,0.660604,7.596028,-6.133027,-3.672744,2.854716,3.411921,3.009217,8.888000],[-0.360839,1.992407,-6.966835,-2.997004,3.145910,0.043562,-6.109878,-5.263192,8.657041,-8.379055],[9.561301,0.369650,3.418660,-5.457620,8.369917,-5.785500,2.005565,4.254416,-4.623310,-0.328221],[-2.497707,8.503749,-4.816611,-2.729860,1.868317,9.891582,-5.039884,9.986082,7.514530,-2.233986],[-9.718141,9.536079,7.786503,5.642278,-6.243824,5.585299,-7.181448,9.077877,-7.462838,-3.224635]],[[6.189013,-6.925875,-8.212938,8.605377,-2.519468,-6.479063,-0.831303,-4.492358,3.617607,6.365729],[-1.134242,-3.018226,2.783471,3.352029,-7.561801,-7.465004,9.771876,0.324047,-3.949583,2.778761],[-9.125489,6.231900,0.564192,-1.638735,-1.190425,4.002883,-2.968763,2.913686,8.643412,-3.423756],[-7.451703,2.520249,7.554115,-7.419469,-6.738779,-3.478906,0.092316,7.956121,-5.145547,3.593209],[-3.988160,5.810617,6.341784,-6.209090,8.725418,-8.269474,2.888147,1.834326,-6.572375,0.048656],[2.145085,6.655475,6.287732,-8.262350,9.379318,-0.724698,-2.334330,-5.551053,-5.929069,-3.374939],[0.622457,-5.228856,5.140480,-6.901554,1.903301,-3.562636,7.565515,1.207286,-5.698057,-4.701562],[-1.717912,2.047642,-4.438921,-7.786025,5.003506,-5.285267,1.285876,8.830040,-7.712076,-8.466767],[1.304855,3.763732,-9.811454,-6.833777,-1.637246,-0.483864,8.958927,7.082466,-1.286271,9.930674],[-2.011904,-5.288380,-2.009409,-7.312828,5.446942,-4.995363,2.774497,-7.342411,-6.049028,5.094569],[1.277370,1.847982,2.501085,4.622981,-4.668196,1.529552,-1.055945,-8.212088,-2.002182,-0.265388],[6.585688,-4.240768,-2.951909,3.701880,6.392698,4.330732,-2.729849,-9.039955,3.506840,6.750517],[-1.933066,-0.470477,4.291203,6.165320,-7.540661,8.702259,-1.586919,-1.287002,-9.633336,7.224978],[-2.834654,1.672646,-3.824830,0.231180,8.581044,8.901862,6.230044,-8.168362,5.511180,-7.755766],[2.288226,4.699423,-2.565243,-1.148091,8.543668,-1.765514,-8.906230,0.493099,2.506525,-9.677925]],[[0.131311,-9.161024,-2.209732,2.737550,-3.928762,3.274392,-7.188639,4.034667,-7.517096,7.407276],[-6.787562,-9.797382,5.063281,4.167865,-2.349171,5.632313,3.953879,-6.369622,1.332469,7.472891],[-0.782648,8.978503,-6.466157,6.518519,6.528282,-1.491543,-8.776795,-2.752186,-2.900214,5.951944],[-1.045984,7.232078,-0.791004,4.811617,6.004002,-1.143257,5.830100,-4.727692,-8.962588,-9.181929],[8.727155,1.213543,3.968567,3.589166,3.395363,-2.122330,-1.812345,-6.872542,-3.681190,-0.439519],[-6.356970,3.084720,-2.099908,8.393654,3.564750,-5.849639,9.123793,-0.782550,-6.333398,-5.770409],[-5.790265,7.226138,-8.258270,-9.921944,8.805115,4.073077,7.102172,5.492029,-3.856777,-7.302457],[-8.842313,-2.666446,5.569917,6.027537,0.769748,4.467290,-7.766732,-4.995502,-9.584459,5.835491],[8.597294,-9.339010,3.691069,-3.243818,-9.456249,4.947585,-3.205663,-8.809077,5.912636,6.797131],[-6.379087,-7.611031,8.057747,4.978942,9.413804,7.297635,7.905530,4.004552,1.588291,8.930015],[2.877446,-5.132268,-6.256137,4.252079,-5.475290,-8.826594,8.737686,-7.752676,9.969010,2.216821],[-5.922019,0.086458,-3.734472,9.820715,7.123792,3.474016,0.391654,-9.994302,7.225333,4.159961],[-5.516458,-9.883554,6.772574,-4.854940,-7.297631,2.131481,-8.837149,0.131534,-6.512669,-9.361668],[5.852624,-2.553802,1.741927,-5.835074,-8.872594,8.981441,-3.793891,-3.465982,-8.168902,-4.478518],[-8.538331,4.171218,6.440994,3.427648,2.206769,9.045231,-2.274556,-3.059467,-7.155696,-6.195965]],[[-7.210503,8.466600,5.939011,-2.425179,-4.601421,-6.574046,6.003948,4.068702,-6.272149,-8.805105],[-9.134837,-6.790277,3.373324,-4.853089,-8.964125,-3.105577,-5.982087,0.270807,8.594051,8.708313],[-0.214324,0.421019,-7.466583,-9.805054,7.896109,-1.525967,-7.127926,-3.425130,8.951807,2.283721],[6.557571,9.943508,0.916090,1.637733,-7.688465,-4.846998,5.839322,-6.810473,-4.983961,-9.932865],[1.239601,0.291921,-5.562562,7.164381,1.591754,5.007284,-1.564551,-9.033228,9.685801,7.658811],[1.931384,-3.707362,2.979235,-2.959896,-7.456691,3.043560,8.158899,5.181049,8.052154,-5.629354],[-4.145167,8.598045,-9.714216,-3.045897,-8.236150,4.082357,-1.731959,-7.920129,6.645239,7.850695],[3.929748,2.233719,-8.079277,-2.640692,-4.257669,-9.214784,-5.719708,8.889679,1.957553,-7.205069],[3.179120,1.728879,-8.578204,3.880444,-2.843697,4.214876,-6.572760,2.844774,7.105583,-7.541918],[-0.509423,-8.462240,-3.769368,1.849943,-9.900206,9.070204,0.574383,9.147816,-3.703518,2.777727],[0.087168,8.225082,-5.127384,-1.537767,-0.680830,6.233448,5.366313,-6.808114,1.750232,-7.250209],[3.964413,-3.885427,-9.751463,-8.583194,-8.515340,-0.359746,-4.806141,2.867742,-6.582982,1.675245],[-7.666141,0.470090,-3.647060,-1.330073,8.076531,9.630276,-1.502106,3.169984,9.772836,-7.325649],[-4.085353,-7.886787,-0.008213,6.702337,4.187366,4.287567,7.249730,-3.837385,-1.744632,1.408215],[8.410766,7.733935,-9.006561,-2.032948,-7.614920,-8.069970,8.286495,-4.654004,-1.880899,-1.385681]],[[-0.573637,-7.328825,-7.376831,2.834608,2.069063,-8.562081,-3.851573,-6.452941,3.555031,-5.733494],[1.464323,-8.645959,8.846877,-4.247653,-1.984984,-7.170535,3.581266,-2.647378,8.519478,-2.224398],[-1.173289,3.454099,-3.520942,-5.772437,-4.483263,-5.802696,5.117478,9.121485,8.018424,-1.919416],[-9.621420,-4.085953,3.450022,-1.578978,-7.433929,1.478804,7.523067,9.204340,4.392433,3.459614],[4.655191,0.153930,-3.378596,2.627419,6.584895,1.540255,-1.969290,6.598148,-3.173508,-8.683915],[-6.481528,-1.960285,-5.012892,-9.197866,2.845137,-4.676232,5.677837,0.759743,-9.119061,4.170733],[-4.918777,5.252836,-8.490270,4.442856,-5.026809,4.026400,1.752244,7.273469,-3.184352,5.400118],[9.406934,-7.994874,-1.856566,3.743190,-1.580845,-0.320442,8.653197,-4.721937,-3.825177,3.017336],[6.128018,0.978386,-7.884568,6.398943,-0.331360,-3.096868,-8.700345,-0.182544,-4.943322,6.291724],[-5.662611,6.239851,8.135508,8.151279,3.720016,1.013475,-1.691045,-3.920313,4.875646,5.878607],[-7.917588,6.297039,-0.084670,1.877782,5.694596,5.443646,-6.522153,-7.945283,-9.948369,5.620238],[-7.333124,3.917175,-0.207998,1.694589,6.314884,6.893643,-4.775142,-6.461709,7.743671,7.863931],[-6.410117,-0.162430,1.657705,-5.562808,4.924953,-5.540747,-8.818285,-0.772965,0.872770,-4.460119],[-9.335100,-6.435724,2.155453,9.809732,6.722768,4.476063,5.341878,-2.172771,-6.811861,3.164786],[0.157998,8.544801,2.240091,-8.499987,1.170276,8.334575,-7.408393,-9.573226,-9.146454,-4.348758]],[[-9.940476,3.677966,-6.633815,3.875593,-2.096585,-3.687681,-7.992989,-8.258750,5.535361,-7.556616],[6.558426,-1.759389,1.218076,8.726906,-2.270910,5.884177,-6.607624,-2.402159,9.230845,7.910271],[-7.450994,0.319778,-6.733489,-4.541464,-1.993178,-8.795495,-1.188576,7.605546,-4.228908,5.042332],[8.538349,7.298637,9.130039,-1.031647,8.650563,0.380623,3.192942,-8.747535,-5.661375,7.342053],[1.041268,-2.829742,-9.478262,-7.529813,4.221717,8.823010,-6.861276,-5.515440,-1.499022,-9.000762],[-3.083678,-5.756691,-7.803350,4.157311,3.254526,1.981403,5.070574,3.850113,-6.464014,-6.760926],[8.288701,-0.613923,-2.508994,-0.799663,9.829887,7.427076,-9.323397,8.640861,-6.298500,6.168542],[2.774491,7.324625,-4.033467,-4.548758,-6.904862,-5.918905,-2.567056,1.264816,0.731203,3.268254],[3.672810,7.071761,-5.922987,-3.003087,7.697026,1.932550,8.815458,2.124965,5.755753,-7.189818],[-9.041050,2.533433,8.151602,-6.352850,-7.981187,9.849439,-0.158067,9.023689,1.272079,8.251363],[5.977147,6.347229,1.294113,4.400546,-5.940598,-8.633932,-4.800487,9.704440,7.963627,9.320514],[9.617960,0.442960,0.061266,8.159045,-5.683350,7.818117,0.362858,-8.883658,-5.454346,1.107295],[3.879164,8.572535,4.987327,2.755265,-4.551018,8.556222,4.227397,6.853943,4.407743,8.869015],[-5.446082,-5.327061,6.292396,-9.430909,-6.191201,-3.305866,-1.390049,8.718147,-9.351247,-2.678694],[6.859881,2.197417,-8.570438,8.900531,0.221680,9.598256,-3.922773,4.117280,5.549918,0.575850]],[[4.566260,2.724226,8.153274,8.452213,-5.417047,4.759446,5.191981,-2.407545,7.281297,-3.572784],[4.340607,-2.441477,2.622438,7.540179,-3.635423,-1.966567,7.205020,1.298988,-8.548591,-2.454846],[-3.479567,8.621882,-7.447462,8.912680,6.111378,-5.932001,7.916704,-2.176709,-0.269972,5.452250],[-7.724587,-0.951249,-8.356396,1.293728,7.204343,8.121686,4.828259,0.219785,-0.082232,3.399736],[-0.300565,-2.129745,6.873315,-6.640947,0.560385,-1.711896,0.666804,9.923693,-7.412115,5.661813],[-8.384922,5.022746,2.676683,-3.448695,8.273581,8.795940,7.318190,8.674425,9.095403,3.405143],[-7.971040,-1.648731,-4.772188,4.841657,-0.415919,-6.628694,1.394021,-2.277466,7.609757,-3.952710],[8.938948,-6.955200,-1.719557,6.975161,-6.150509,-0.671900,-1.125964,-9.875297,-6.695878,5.501693],[-1.721496,0.170157,7.858651,-1.263611,-6.199904,1.009954,0.569608,1.831846,1.222222,6.883251],[3.331107,-5.296128,-0.804124,-3.294048,-0.289843,-9.056141,-7.115231,-4.082500,7.395115,-7.448303],[-8.612098,1.499084,5.941246,1.232416,4.337329,-4.057141,-5.514170,-1.773745,-1.560998,0.251213],[-0.295908,9.419941,2.895771,-7.862313,5.108009,3.476836,-1.715140,8.116059,6.367903,0.876114],[4.935780,0.501602,-2.053340,-9.865170,-6.223961,-7.130423,3.335336,5.945102,5.853368,-0.519055],[-0.898455,-1.724409,-2.497562,7.756453,-5.015308,0.671618,-9.131655,4.255544,-1.086520,6.655644],[6.046707,-8.324915,-1.867504,-7.584007,5.913564,-3.993193,-9.269639,6.926898,-6.283833,-4.465367]],[[1.111248,-9.302146,-8.948047,-8.140474,1.072525,0.735498,0.630408,-4.235915,-0.666893,-0.474116],[6.679692,3.426554,9.814234,-2.752785,0.095619,6.771248,-3.915881,7.292581,3.604645,-1.750793],[8.485590,-6.327623,4.363780,-6.003606,4.466008,3.544038,0.096566,-7.962793,3.901085,-3.272787],[1.489733,6.470993,7.902157,-7.525848,2.845563,-5.596779,-5.810373,9.235837,2.062042,6.514586],[-7.018141,5.720070,-2.801503,6.512010,-3.978847,-8.220743,4.618342,-5.718031,-3.508526,8.986234],[4.505450,1.535595,-0.030610,5.627665,-8.257930,-6.694371,2.534196,8.407957,8.965977,-7.760790],[-3.958733,0.709214,-0.970998,3.285692,-1.419904,-8.514919,-0.033593,-0.873461,9.220522,-7.669300],[-8.040126,-0.559802,-0.926726,6.925483,-2.237836,9.346290,8.602048,-7.560786,-9.277983,-0.906300],[3.314534,-4.454413,-7.134774,-7.588640,-4.554143,-7.010286,-7.490055,9.107369,-9.338876,-7.587844],[-1.622264,8.145124,4.635937,8.280801,3.838787,-3.685350,8.426208,-1.421738,5.174731,1.462080],[4.135330,7.810263,-6.986553,-7.586630,0.888156,-2.223676,3.457384,6.457568,6.313983,-9.596407],[1.184837,1.404961,-8.840034,-7.797055,0.154640,3.996559,3.744670,-5.954472,0.087286,-1.276981],[1.732873,-1.115508,9.024454,3.173319,3.890653,2.919797,3.931098,7.746078,0.014180,3.245402],[4.026086,9.498195,9.139753,-4.978139,4.043096,-8.652525,9.940111,0.851139,-3.808820,-9.059943],[-7.467837,-9.778271,-5.568144,5.013190,-1.924615,-2.708222,-1.827702,-2.413432,1.617918,-2.136894]],[[-1.297764,-3.426623,-0.048402,-5.641355,-4.401301,-5.975477,-8.172113,-7.425818,-9.305810,-0.822958],[3.873517,-0.539316,1.555892,4.689872,5.892035,0.946433,-0.724195,-1.155983,5.022038,-5.125027],[0.591412,-7.184633,0.342195,-9.914741,1.420856,-9.656018,-7.765090,-0.148721,-6.713851,-3.481352],[2.131268,7.912009,9.729200,-8.006634,-2.073225,2.184954,2.523987,4.238455,-6.312422,-2.081891],[5.827017,-9.820412,0.215710,4.755112,3.940254,-7.931561,9.985714,-7.279926,7.505433,8.011971],[5.306922,4.871967,-1.510529,-8.848487,-3.984602,-5.510607,5.654426,0.709587,3.733098,-1.597347],[8.522592,-3.036095,-0.084379,1.032957,1.473387,3.751504,1.246631,-1.429803,-5.938094,2.417477],[6.745189,-1.723130,-6.271347,-4.852764,-8.120074,-8.119211,3.617391,-8.885457,-6.895622,9.021389],[-0.014714,-9.991899,4.757494,4.432546,7.442286,-7.859674,4.125789,-2.404345,1.410864,3.560968],[4.513012,5.778362,-5.544868,7.885621,2.030812,7.310170,3.699405,-1.976080,-9.438272,-2.927660],[-4.788095,-3.363491,7.559647,9.085832,2.223061,-3.571623,8.797576,5.278796,2.052433,-6.743130],[2.626337,-8.648697,7.925387,2.131395,5.694813,-4.980164,0.904255,6.208674,1.547068,7.780916],[4.972893,1.709957,1.041299,1.898913,6.619562,9.766395,4.766800,-5.485091,-7.389837,-1.357875],[4.988967,6.360779,0.603978,-4.985930,-3.890418,-8.641255,4.279521,-6.137307,-9.324750,-0.845854],[4.103870,4.041658,1.519538,4.187170,7.368996,2.648032,-4.496223,0.350591,4.103751,-2.349326]]], dtype = "float64")#candidate|5175|(12, 15, 10)|const|float64
bop_5176 = relay.power(var_5174.astype('float64'), const_5175.astype('float64')) # shape=(12, 15, 10)
var_5189 = relay.var("var_5189", dtype = "float64", shape = (12, 15, 10))#candidate|5189|(12, 15, 10)|var|float64
bop_5190 = relay.bitwise_xor(const_5175.astype('uint8'), relay.reshape(var_5189.astype('uint8'), relay.shape_of(const_5175))) # shape=(12, 15, 10)
func_339_call = mod.get_global_var('func_339')
func_341_call = mutated_mod.get_global_var('func_341')
call_5193 = relay.TupleGetItem(func_339_call(), 0)
call_5194 = relay.TupleGetItem(func_341_call(), 0)
uop_5199 = relay.asinh(var_5189.astype('float64')) # shape=(12, 15, 10)
const_5202 = relay.const([[[-7.525344,8.306911,3.201412,-2.839908,8.047545,-5.924134,5.819234,-9.745332,-4.737847,-3.952012],[3.542797,6.920727,1.480049,-4.329596,7.120070,7.726978,4.098185,7.651746,4.739033,9.971269],[7.370501,-0.913491,-5.543052,-7.203662,-3.917782,-9.990929,9.655607,-0.888050,-2.345106,4.615543],[1.440564,-0.840030,5.805419,6.999802,4.176920,3.298289,-6.610018,-1.743308,1.217868,8.615675],[9.004607,9.398848,-1.791228,4.635914,-7.920704,-1.828469,3.264265,7.850090,-0.010162,-3.194630],[2.609112,0.336445,6.211514,-7.616386,-6.211037,-7.040218,2.002037,-4.420460,-9.586067,9.241186],[-7.559531,-9.574084,-0.602368,-1.580061,-4.119683,-2.136768,-2.983774,-1.399752,7.729713,-1.920927],[-4.908378,4.597985,-6.765557,4.247755,-1.007206,-5.686145,2.687684,-6.441176,-4.925541,-5.253244],[7.457292,-8.049927,-2.288182,-6.025151,6.826852,7.485306,3.617873,-7.247075,-4.439681,-5.039211],[-0.383006,9.718631,2.456303,4.750287,-6.288323,4.840787,-8.664886,-3.478254,-0.628976,4.553430],[2.342423,0.410604,6.778816,2.853576,-6.756542,-6.424488,-0.835252,-4.599335,-3.144796,5.334783],[6.728298,-0.393860,-3.139301,3.084215,0.251193,-8.687774,3.839948,-2.649686,4.284449,8.904219],[1.923161,-7.758118,6.639849,-0.729027,-2.610304,6.119978,-2.020921,-5.908523,-3.745780,5.774253],[-5.972495,-9.669143,7.464641,-5.467037,-7.182675,-1.107044,-9.035628,7.507603,8.729102,6.767661],[5.185151,-9.655138,-5.760120,-4.869491,-6.833513,9.363966,-3.239523,-3.951296,-8.226174,-8.244030]],[[-8.113786,-8.695081,-4.696675,8.338111,6.583335,8.346584,2.674084,-3.053592,-1.204202,-9.345691],[-7.202575,1.173572,1.206999,5.586948,7.789122,3.811662,-7.201137,-5.035700,8.827956,9.963456],[-6.908100,-0.592885,-9.024364,5.658192,1.809106,3.216099,1.771330,-7.308403,-3.357934,-6.730653],[-8.210803,-9.692142,-9.618791,4.597693,-4.599773,-4.782437,6.078465,-9.508939,-6.154380,4.015472],[2.326906,0.426294,3.519345,2.301317,7.843598,9.880002,0.836830,0.473392,-6.637564,-4.881706],[4.024240,0.906517,7.462451,-3.803356,-6.281132,7.873264,-6.526304,-3.000560,0.708599,8.714275],[-5.927103,-7.319199,-2.105613,4.418180,-2.753212,9.946914,-0.896500,-2.703961,-7.744291,7.284937],[-8.771425,-4.075785,-6.972984,6.787344,4.489980,-1.602004,8.387436,7.965592,-7.261212,3.026181],[-4.096270,-7.459675,9.381310,-3.561439,4.327156,-8.815806,0.924037,-5.025825,-0.331268,5.379670],[3.705941,6.588460,-2.836928,-6.929426,8.748657,0.848286,1.100770,-7.459821,-8.687179,-4.785208],[2.128359,-2.310350,-8.815481,-2.219454,-9.656759,-5.547586,1.882301,-7.277952,-4.689231,5.693810],[-7.963593,-0.073573,-0.205616,4.046011,6.056873,3.064925,-8.109463,9.130459,-0.834378,1.353834],[3.267043,-5.644901,0.786492,-1.925419,-7.074966,1.431127,-6.292728,-3.728630,5.417789,-6.259312],[4.803529,3.586355,5.345757,-3.956161,-9.690944,-0.453327,0.605755,-3.608686,7.044513,5.626054],[-6.969124,5.331041,-5.057267,-6.836552,8.211975,-0.225079,-5.415106,-0.780204,9.599439,5.059681]],[[3.283187,1.574626,3.649482,6.518375,0.580876,-9.615231,-0.605067,-4.556976,9.381716,-3.289781],[1.045493,8.809338,-6.494304,6.379054,4.186754,7.871538,-3.147557,3.545689,-3.984731,3.625375],[6.136482,-0.552402,9.252322,-2.385490,8.292315,2.227483,-6.644142,-4.720199,-4.024913,-7.677577],[-8.238566,-5.931272,-8.719407,-4.012000,5.656511,-5.257921,6.171069,-6.042451,-3.352017,2.671720],[3.060370,-5.507508,-4.400021,-8.036765,6.180174,-1.553038,-0.021983,-4.815197,-3.349447,9.179038],[-5.813669,4.698498,-2.238575,-5.651713,-8.955967,-0.857461,-8.832492,7.685535,6.905348,-7.112027],[-4.624217,0.218684,0.096103,-4.070673,-1.240519,2.827518,7.467771,6.833892,-2.868199,-3.867240],[8.253824,-1.894909,-6.330529,-8.094878,3.095375,-9.663679,5.427658,-1.871483,5.315421,2.806193],[0.442408,9.080255,8.146198,-3.049939,-4.545640,-8.747952,-0.639084,-7.066128,4.481129,-8.529211],[3.132887,-7.503205,-2.219374,7.028994,5.614344,-1.901629,-9.819306,-6.295544,-3.783775,7.497411],[6.712511,-4.803978,2.218430,-9.377572,-1.701559,8.587260,6.736280,-8.107881,3.274495,-8.577626],[-1.734746,3.248906,-2.104930,-8.997928,-6.175678,2.212901,-9.846491,7.086769,-1.740927,-4.524580],[2.848967,-9.028970,0.581724,-3.036566,2.039952,-2.680028,5.766989,-7.975794,4.503197,-0.767737],[-0.360749,3.474278,-7.592197,-0.185261,7.393143,6.087215,3.674060,6.085886,-6.977367,4.861534],[-4.317626,-8.498885,6.316433,5.083436,6.343820,-7.942594,-4.723210,-9.653559,0.049180,0.672004]],[[9.070670,6.934337,9.492659,-2.318797,-4.975560,6.293344,1.850130,0.194953,-0.271674,2.892941],[-6.293835,8.111088,2.248664,7.337812,0.117321,5.797309,5.009214,3.213087,-2.882802,9.769209],[1.797897,3.341106,-0.734636,4.428702,-7.309291,-1.436462,-5.810332,8.624856,-2.701796,-2.031687],[7.427185,-4.260028,-8.394187,0.972571,4.665832,-9.950067,6.250115,8.392896,-3.811847,-0.656101],[4.755813,1.788218,3.961021,-3.907492,-4.194031,1.082545,-4.060497,-2.133955,6.585967,7.504317],[-9.492665,0.684530,-4.853276,6.606002,9.081468,5.621902,2.108829,-6.449350,0.032548,-4.694073],[-9.246143,9.804007,8.891543,4.460390,-9.430338,-8.519364,-4.817200,-9.397371,-7.107905,0.388809],[-9.963644,2.179884,-0.442119,-4.286378,-5.147519,9.074536,-8.055809,9.881601,-2.844688,-4.263434],[-0.251321,-9.817243,-0.590058,5.840712,-7.161095,-6.435308,6.498841,-7.617595,5.357130,4.890298],[2.121598,-5.669314,5.672159,-7.851654,9.588640,-1.402298,5.011137,-0.216817,-6.561769,-5.416786],[6.250121,5.965054,-9.031770,-0.397867,-7.692145,5.435298,-8.913888,0.956388,-5.562718,2.625737],[-7.499481,5.688478,-3.120616,6.727347,2.669604,-7.807233,-2.640333,9.796059,9.276637,-8.401387],[5.548129,-4.157626,-5.350254,9.235139,6.920149,-4.312730,0.334584,6.205538,3.800114,-9.414867],[-2.267157,9.149183,-7.287722,-3.150840,-1.535637,8.506441,-5.274560,4.090641,9.427443,6.861815],[-1.208808,-5.380107,5.276651,4.258340,-7.027163,9.442835,-3.676372,1.434663,5.911853,6.433893]],[[-8.463023,8.839986,-4.728009,4.453663,-1.532052,-1.020114,-8.320477,-0.598618,-1.828637,3.013550],[0.551225,1.133411,8.437150,-5.687796,-1.752422,3.746690,-8.304222,-7.178347,8.481464,-9.859038],[-4.798643,-1.789169,4.048056,6.170374,3.701296,-5.867556,6.042342,-8.371994,-7.315595,-1.346495],[-6.991601,7.087701,-3.238215,1.386557,-4.767347,0.627489,-5.325268,5.700916,-7.671742,5.275240],[9.538917,-8.299285,-3.647336,-6.195789,2.762848,3.898944,-3.741334,-0.135388,-5.312308,-6.310884],[8.336434,-3.367094,-1.433663,8.103733,-2.258522,-9.876474,-2.866589,-1.834152,1.780204,4.820201],[0.085150,4.091072,-1.647526,2.656597,1.704236,8.703934,6.197129,7.407941,1.146091,3.345970],[9.645837,-9.199573,-1.650141,-4.456164,8.432349,2.102026,3.831386,-8.970109,-2.774542,-5.221223],[1.826248,6.594096,8.668038,-9.080491,1.739208,-1.097664,8.026037,9.635244,-1.587202,-2.555469],[1.737695,-2.438570,-9.232183,-0.139363,-9.497850,-7.107731,-5.817939,1.640500,-9.142076,7.343936],[6.369588,2.866992,-2.122344,-7.654378,-8.405838,-5.818857,-1.738788,-9.771957,4.596441,-3.861048],[-6.042505,2.252974,-5.994898,-1.941214,7.110684,-6.583494,-2.845603,2.034000,-2.797305,1.028318],[-8.269709,4.959227,-1.669179,8.259360,-6.539144,-2.852999,4.681597,-6.543013,-2.308352,-4.224149],[-6.420084,-5.220708,-9.426222,7.515095,0.323568,-3.026589,-7.416014,7.804133,9.084170,-3.252735],[-4.583401,-9.079832,-4.500710,4.742286,-1.430536,-8.401094,-2.761690,3.494148,4.224979,-8.545716]],[[6.480101,-2.966363,-4.884273,-3.083440,5.801172,3.013626,6.122003,2.224998,-8.645592,-2.994716],[-3.670000,0.369847,6.900086,-0.026994,8.004438,-7.819756,3.187006,-8.305554,-0.824201,5.978602],[2.185009,6.273819,0.655056,4.917209,5.847600,-0.896083,-5.631346,-8.999759,-3.671536,-7.192304],[1.587931,-2.184696,-6.980187,-0.690504,1.582025,-5.503822,6.439197,-6.045844,-3.475257,-7.676194],[2.335952,7.087790,2.118206,-9.398392,-9.202882,0.927164,5.431643,-2.924085,8.751791,-8.601044],[6.505517,8.382893,-6.889738,2.002270,9.430121,-2.799752,-6.592584,0.984648,9.310938,9.186565],[-8.763314,-6.519462,-9.042052,6.483095,9.077652,-4.665235,-4.359737,9.602577,3.269562,4.554074],[7.310492,-0.389755,-8.169590,5.220040,3.892190,5.705839,3.998782,4.266019,8.510799,7.187061],[-8.024790,6.563678,-6.382715,6.894462,2.933572,-4.211224,-6.512077,-9.212400,-7.883250,-9.637457],[-4.299362,-9.457119,9.126052,1.413364,-9.616445,-2.990450,-1.342100,-0.434912,-7.079868,9.500598],[-8.883693,-9.831842,-1.448588,6.348757,-7.320038,-8.541543,-7.301491,4.741574,-8.947985,-6.898389],[1.678463,7.008132,-3.224882,-1.236696,1.415933,-4.109170,-1.405961,-8.012362,7.487436,6.593499],[8.342212,-1.655386,-6.546786,-0.959734,-4.762517,-0.191065,4.910435,8.125046,1.551786,-8.603710],[2.351703,-6.803014,-2.593365,-1.087405,9.407159,5.545241,3.849951,-0.933179,0.994135,-4.622886],[5.981976,-4.768077,-5.213429,-5.143941,4.836672,-0.539132,0.507740,-9.627049,4.476504,9.254503]],[[8.964613,-0.111623,-4.092374,-5.511121,1.622068,9.500391,5.915217,0.058678,9.745100,5.276107],[-6.464283,-4.513763,0.308341,6.382956,4.156928,4.501928,-4.654681,-7.151093,-6.801393,-7.390988],[4.828795,-5.214064,0.904464,7.895661,2.635652,-0.656031,-9.042657,9.643685,8.151422,6.599448],[4.887392,4.346054,-7.699397,-1.224956,6.637423,-4.795344,-2.983983,3.057185,-7.320060,-5.807639],[-9.976560,4.245293,2.009816,-7.344723,-8.767782,-4.309788,-3.798910,2.213798,5.149548,8.744312],[-5.983794,8.475828,-6.836434,6.246260,6.122271,-0.018909,-4.465443,2.306661,-7.475311,-9.195742],[1.612282,-9.990895,5.704393,-1.547266,4.030038,7.944685,2.348964,-7.612424,3.725941,-0.485681],[6.212375,-6.019822,-9.859799,-6.621881,9.857433,7.683529,0.780286,-3.611980,5.276039,5.058901],[-1.514337,1.359650,9.518796,9.025528,2.534842,-5.046063,-8.832164,-2.987196,-1.908376,5.977522],[9.855425,-4.004019,-4.558179,4.588386,0.846052,-4.306281,5.388697,4.419055,1.135414,-8.879001],[-6.518815,-3.806038,5.282966,7.552588,3.651963,-9.988759,-6.721335,6.996009,2.723841,-4.107693],[4.337644,1.534062,-6.738758,0.431364,4.678505,-3.166497,-5.163368,4.335812,9.929143,9.636898],[1.340343,-6.462050,-8.016232,4.305194,-6.912659,-1.596863,-4.345127,6.447244,-1.091328,6.416203],[-5.539091,3.566294,-5.144196,-1.284957,-7.840576,-0.281367,7.223399,6.502415,-4.004098,-2.062669],[-8.587823,-1.072703,-7.129905,-4.116365,-2.322321,-3.673347,4.114315,-2.944866,-6.070677,-6.290546]],[[-9.003880,4.192855,9.006119,-3.213779,7.336468,-4.159647,2.420899,-1.790066,-7.564460,9.167179],[-0.728932,9.579364,3.687711,9.184232,4.667340,-0.537690,-0.154280,8.829992,-9.334766,6.286332],[-8.753121,-9.324994,-9.499652,6.693435,1.799231,-6.243990,6.136517,6.400450,2.827703,-6.679116],[-2.611584,-7.164754,-0.463922,-5.669909,4.588274,-6.891877,-6.415079,-0.866905,-0.610908,2.635141],[-0.788181,6.515165,-4.243045,-3.609503,-0.206213,-6.925344,-9.722369,7.680569,-9.158076,8.945707],[-3.488403,-6.826729,-8.655404,2.049237,-7.361281,-2.733679,-4.809069,-7.236793,7.927088,-2.489642],[-8.930433,-6.967074,-5.197529,6.119326,-5.693850,-1.368384,1.014630,4.208818,9.696753,-1.145531],[3.656066,-9.392266,-9.751674,-3.465929,-5.022640,2.233083,6.778234,4.070151,-6.038094,3.824673],[2.412660,4.157388,-0.741964,3.446286,7.276297,5.794675,-0.391898,2.317671,7.380172,-2.030777],[-2.635279,-6.113586,-5.733866,1.843461,-6.389307,6.274820,9.091841,-8.116009,0.333144,0.625320],[1.200730,6.355713,4.186671,8.419963,4.097531,-1.518922,8.578724,6.849066,-6.646389,-8.522340],[7.280806,-2.850568,-9.135324,-6.030896,-7.673647,0.228787,6.918530,-2.183237,4.960297,9.162536],[1.002212,-8.765549,-9.640377,-6.396193,4.084465,5.066243,-9.483803,9.519773,6.422040,-4.037655],[0.047080,4.035669,1.474867,5.766486,0.582138,2.628309,-3.025990,-0.296246,1.433665,6.346314],[5.653085,-8.308627,1.075422,8.684606,3.862136,-0.484936,0.615368,8.166722,3.975895,3.492341]],[[0.027242,-3.517287,-3.744218,-1.001820,5.324926,-9.443871,4.584616,5.506653,-3.094529,8.144819],[-3.897540,3.774545,1.640415,-8.545777,6.769469,-7.245111,-8.235113,3.469630,3.778752,1.773437],[8.539300,7.347998,-4.470301,6.391591,4.840385,-6.166630,7.723324,0.484315,8.738860,8.720217],[3.402452,8.370204,-4.736176,2.287918,8.170720,4.411945,-2.230953,7.102735,5.287965,-9.528619],[5.595232,-0.652741,-2.152367,8.181830,-2.027783,-9.119168,-5.424825,5.315992,-8.932532,-5.335662],[0.441186,2.012231,6.168345,-5.312881,3.657778,8.068871,-9.473113,5.476093,-1.671769,-7.730243],[-6.250675,-1.164353,-3.817967,6.150367,-4.577613,-7.840274,6.243142,-2.437912,-2.906489,1.408147],[8.732930,-6.281442,2.574991,-2.578666,5.754529,-6.111445,8.875999,-0.973903,-6.359523,6.276675],[-8.313222,2.109827,2.885522,-7.713200,-2.115566,1.803825,-3.207795,7.523808,-5.654821,6.107428],[-3.417298,3.548326,5.488811,-2.679080,5.707233,-5.091886,3.164638,-3.514283,9.219254,0.906197],[-6.032696,1.886779,-5.126127,-3.653633,-3.602951,-2.920631,0.108245,3.851289,-8.246821,1.125241],[0.295398,1.394053,6.011029,2.444697,-7.331386,-9.130620,5.682494,1.151965,2.010362,-7.049621],[-4.054522,-4.676580,-5.514800,-7.213492,6.540322,9.946739,1.648542,-7.952128,-5.768675,-0.624193],[-4.972568,6.085318,-7.246180,8.641013,0.320485,-7.309769,5.109571,0.746354,-2.714837,-2.390879],[5.598420,-3.620887,-5.017992,9.760733,-7.986181,6.885680,9.614758,-5.039635,2.307134,2.774256]],[[-7.120257,-4.896815,-6.678184,0.431431,8.142069,8.307285,2.627826,-3.011931,-2.287913,-3.066548],[6.553578,4.494114,6.496604,-1.972264,8.039307,4.818209,9.966406,7.946826,0.524612,-6.746748],[-6.716762,-8.112845,5.924144,4.575442,-9.961804,-4.230363,6.275286,-3.742354,-8.301162,-9.848686],[-1.463902,8.406963,4.685291,-8.116371,3.656901,-2.015349,-3.508861,-2.130899,9.308059,7.072964],[3.874358,4.145974,1.194026,7.987949,-9.883961,8.387608,6.887543,4.747278,-8.211742,-5.320934],[-2.755620,4.985735,8.034987,4.015353,-2.412855,-8.031014,-8.019455,-0.209338,-8.499311,6.764168],[6.626713,6.258703,8.571199,-7.809511,-6.516622,-4.819818,9.041223,9.587075,7.672835,4.982542],[0.351464,1.869641,4.102829,4.440411,-4.328185,-6.996639,-9.375126,-4.790539,-9.111982,3.568842],[0.262712,-4.269055,1.164966,1.077915,-6.181353,-7.444451,4.402996,7.642659,-4.086722,-3.329455],[-6.097469,-6.417541,-2.184480,-8.390715,2.823693,-9.106480,0.623969,9.090693,-1.745960,0.626739],[0.859747,8.263822,-7.501795,8.492691,8.500038,2.019704,8.852182,-2.814779,-0.832718,-5.440564],[-3.672926,2.023178,4.970787,2.736123,5.736471,-8.638933,-3.070682,9.515108,4.702012,5.198989],[-2.401855,-7.970398,8.372399,-7.949635,9.596766,4.734143,8.785197,-5.971259,-0.376134,-4.546336],[-8.179214,-1.777439,-1.189078,8.999773,8.841721,0.164879,3.313715,8.464663,-6.500463,7.064254],[-3.305480,-5.425718,3.521959,4.530977,-4.450524,1.436118,-6.477132,2.394939,-8.733349,-1.710428]],[[-2.228943,8.835211,4.136609,-1.996800,-5.715451,-6.666975,-2.997443,-8.895026,9.678089,0.799789],[-6.843474,-0.309042,3.474635,2.902529,8.300506,8.829503,7.284744,7.412057,6.280112,6.649649],[3.130901,-1.273238,-1.640615,8.617544,-6.232226,5.357710,-4.731714,-3.846011,5.751001,3.211904],[4.578356,-4.050179,7.814395,-2.765310,3.958514,8.668564,3.934442,0.588230,-6.005705,2.331232],[3.357219,3.217909,-3.827748,5.571444,-9.705396,-8.771553,9.013628,-6.161496,2.876732,8.607414],[-1.103485,5.999413,5.545685,5.440751,-0.131904,-9.127253,7.837682,0.104874,9.049094,-3.457260],[8.428351,-4.974586,5.144221,8.381998,8.465316,-8.536346,9.017762,4.151664,-1.027756,7.946149],[5.445238,-1.999832,6.880138,-1.072500,8.018140,-9.655347,-6.106412,3.958664,-2.351537,-9.083502],[-4.703560,0.543369,-9.537600,-7.193183,-2.059565,9.400204,2.927827,-2.550647,4.426945,-9.304579],[3.228664,9.375623,6.236249,-7.332999,-2.411344,0.162504,9.369492,-2.658998,1.256947,-2.271950],[-1.527788,4.347628,6.593440,7.845521,-9.018205,1.638541,-3.334205,8.016406,-8.895886,5.461180],[-9.267603,9.348289,-8.693111,-3.959743,-0.900182,9.473380,-4.376484,-9.377681,-2.261207,9.839072],[1.468623,1.827917,5.351500,4.662823,-2.166866,-9.436688,8.286821,-0.031104,-5.614147,4.918859],[7.129868,8.613758,6.246099,2.335281,4.001948,6.150491,-4.770813,2.428776,0.531300,1.384874],[5.151749,4.806838,2.256959,-0.666158,-8.948999,-2.055335,-2.467473,6.009675,7.500903,-2.635232]],[[4.868548,-2.267487,-0.174146,-2.728017,-6.616535,6.497674,8.148447,2.729307,-3.188676,-1.470203],[7.924597,-4.851295,7.368229,-0.182566,-3.886664,8.113623,-5.232308,7.670499,4.544310,-5.397939],[2.717335,-7.404642,-2.314713,9.504995,8.576439,7.078132,-0.747440,5.639488,-3.594773,7.342809],[-2.268833,-8.110127,-9.689303,1.333566,8.707605,0.892858,1.077708,-0.241244,6.390915,-5.771624],[0.234658,-6.619166,4.977644,8.551156,7.844602,-3.677504,-7.926659,-4.495175,7.136364,-7.475001],[2.228423,0.268421,6.992165,5.241646,-9.644514,-8.139413,7.552817,8.304548,-8.358568,-9.674015],[3.519476,8.671517,-4.608034,-1.051513,9.637362,-8.486801,5.912433,1.155906,2.907756,9.605007],[-0.705356,-7.775873,-6.801389,-1.920351,-2.696631,-3.008262,9.779365,3.234963,2.034159,0.266397],[2.766028,-2.028057,-1.682115,5.143606,-7.517703,5.240279,-1.589400,-9.832752,5.187064,1.201104],[-5.430538,-6.654625,9.715999,4.370186,4.903642,1.272737,-4.715198,9.709721,0.415471,3.830962],[-9.250831,-4.449673,-6.762885,2.017953,9.744899,5.622165,7.214315,-4.322075,-4.321164,1.019628],[-1.094211,-5.315117,-3.899614,4.705626,-3.239397,0.616525,2.595227,-2.113011,1.926367,-6.736300],[-8.412358,-3.562149,9.253504,5.978842,-1.830451,7.722974,6.844616,6.237615,-8.167904,-0.677876],[0.814022,4.315891,5.176522,-2.760520,6.472615,-6.496025,4.753547,7.941452,9.135302,-2.350889],[-3.319758,-3.762882,9.062958,8.304823,5.234613,-1.763276,-7.701643,9.848672,0.730724,-8.133929]]], dtype = "float64")#candidate|5202|(12, 15, 10)|const|float64
bop_5203 = relay.less_equal(uop_5199.astype('bool'), relay.reshape(const_5202.astype('bool'), relay.shape_of(uop_5199))) # shape=(12, 15, 10)
func_1208_call = mod.get_global_var('func_1208')
func_1212_call = mutated_mod.get_global_var('func_1212')
var_5208 = relay.var("var_5208", dtype = "int32", shape = (768,))#candidate|5208|(768,)|var|int32
call_5207 = func_1208_call(relay.reshape(var_5208.astype('int32'), [8, 6, 16]), relay.reshape(var_5208.astype('int32'), [8, 6, 16]), )
call_5209 = func_1208_call(relay.reshape(var_5208.astype('int32'), [8, 6, 16]), relay.reshape(var_5208.astype('int32'), [8, 6, 16]), )
func_1143_call = mod.get_global_var('func_1143')
func_1145_call = mutated_mod.get_global_var('func_1145')
call_5210 = relay.TupleGetItem(func_1143_call(), 0)
call_5211 = relay.TupleGetItem(func_1145_call(), 0)
output = relay.Tuple([bop_5176,bop_5190,call_5193,bop_5203,call_5207,var_5208,call_5210,])
output2 = relay.Tuple([bop_5176,bop_5190,call_5194,bop_5203,call_5209,var_5208,call_5211,])
func_5219 = relay.Function([var_5174,var_5189,var_5208,], output)
mod['func_5219'] = func_5219
mod = relay.transform.InferType()(mod)
var_5220 = relay.var("var_5220", dtype = "float64", shape = ())#candidate|5220|()|var|float64
var_5221 = relay.var("var_5221", dtype = "float64", shape = (12, 15, 10))#candidate|5221|(12, 15, 10)|var|float64
var_5222 = relay.var("var_5222", dtype = "int32", shape = (768,))#candidate|5222|(768,)|var|int32
output = func_5219(var_5220,var_5221,var_5222,)
func_5223 = relay.Function([var_5220,var_5221,var_5222,], output)
mutated_mod['func_5223'] = func_5223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3028_call = mod.get_global_var('func_3028')
func_3029_call = mutated_mod.get_global_var('func_3029')
call_5280 = relay.TupleGetItem(func_3028_call(), 1)
call_5281 = relay.TupleGetItem(func_3029_call(), 1)
output = call_5280
output2 = call_5281
func_5285 = relay.Function([], output)
mod['func_5285'] = func_5285
mod = relay.transform.InferType()(mod)
mutated_mod['func_5285'] = func_5285
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5285_call = mutated_mod.get_global_var('func_5285')
call_5286 = func_5285_call()
output = call_5286
func_5287 = relay.Function([], output)
mutated_mod['func_5287'] = func_5287
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2167_call = mod.get_global_var('func_2167')
func_2168_call = mutated_mod.get_global_var('func_2168')
call_5315 = relay.TupleGetItem(func_2167_call(), 0)
call_5316 = relay.TupleGetItem(func_2168_call(), 0)
func_597_call = mod.get_global_var('func_597')
func_598_call = mutated_mod.get_global_var('func_598')
call_5318 = func_597_call()
call_5319 = func_597_call()
output = relay.Tuple([call_5315,call_5318,])
output2 = relay.Tuple([call_5316,call_5319,])
func_5326 = relay.Function([], output)
mod['func_5326'] = func_5326
mod = relay.transform.InferType()(mod)
mutated_mod['func_5326'] = func_5326
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5326_call = mutated_mod.get_global_var('func_5326')
call_5327 = func_5326_call()
output = call_5327
func_5328 = relay.Function([], output)
mutated_mod['func_5328'] = func_5328
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5337 = relay.const(4.202502, dtype = "float64")#candidate|5337|()|const|float64
const_5338 = relay.const([[[-6.833006,1.875695,7.511449,-3.711679,9.915312,9.245505,-0.846867,6.655861,-7.787431],[-3.664632,-5.595683,-7.291480,-4.160697,1.812096,6.865593,-9.000433,1.915532,-4.232925],[-3.416082,-9.218323,0.468005,1.655861,-8.595041,9.562454,6.495582,-0.177535,-6.099058],[-3.079941,7.326124,-9.522166,-5.908940,-2.729436,-1.703952,-1.116631,4.788280,-2.105613],[-9.931025,-3.665947,-9.020703,1.305309,-3.130914,-5.829074,5.061097,7.876018,-6.365830],[2.393509,-3.593444,-8.900494,2.292298,-5.015316,8.993083,0.166422,-3.415055,9.388404],[6.678213,8.807964,-9.233214,-2.054573,-8.352287,2.219783,9.788819,6.772683,-7.040364],[-4.220370,-8.210647,2.496199,-4.126186,5.698513,-7.804770,6.568056,-5.952355,0.075396],[-1.202182,-2.934356,5.091274,0.283598,-7.614907,4.748396,2.117620,-7.772653,-3.309002],[7.404409,-0.438103,5.986078,3.555500,-2.061888,4.631911,1.644508,6.420462,-4.140722]],[[9.497885,9.589573,-7.225284,-8.153194,2.948398,1.196138,-0.384853,-2.744438,-5.765472],[-1.687422,-5.445992,4.285356,-6.459908,-9.355944,-0.398269,9.314854,-1.850716,1.594440],[8.950174,-0.106837,0.518264,-4.624608,9.048628,-2.743332,-1.285119,8.865029,-7.157535],[0.721457,2.260681,-2.972096,-8.126972,1.635318,0.010719,-2.497328,1.234749,8.467543],[-6.066797,-3.241563,-1.796207,8.434196,4.785580,2.797868,9.694563,4.781817,-2.302673],[-2.827243,0.829210,-4.956560,8.512951,0.581677,4.927765,4.002408,-4.137134,7.588693],[-3.081725,2.603754,-6.363074,0.003451,5.277679,-0.887864,7.796995,8.082421,3.374085],[5.331453,-4.559282,5.467939,4.795726,0.316821,-0.940689,-0.041658,-6.529569,3.621830],[-8.130924,-4.506335,6.381196,-2.814977,-8.806996,0.046461,0.823878,-7.196975,2.977193],[3.786389,-3.765298,-5.344313,-9.137903,5.910774,-5.112281,3.754385,-2.901158,6.111116]],[[-7.627351,-6.159180,4.436796,-0.032133,-8.682276,-8.967057,-8.703388,-9.588749,-3.029744],[-8.367745,4.852554,8.211808,-9.316429,-6.129652,0.170959,-6.672261,6.658124,-8.772173],[-1.139051,5.621011,3.239012,-4.259512,-9.324384,-0.171397,5.501580,8.539295,-8.769899],[-4.784833,7.938364,2.402465,-9.686884,-0.472751,-9.193058,-8.031299,-9.226946,1.350466],[7.446068,6.061806,-2.675147,1.217386,-1.744678,-5.656426,4.538645,4.542129,-2.546205],[1.139068,-4.298040,-4.583233,-5.908999,1.184466,4.809757,-9.200184,-8.098397,-1.762736],[9.902518,-0.098802,-7.649829,5.016300,-7.545417,-5.700849,4.021891,0.655403,4.080452],[2.776082,7.001146,-5.189641,3.199188,4.005874,5.245856,2.902684,9.788923,-1.374496],[-7.949169,-0.543735,3.326135,2.278518,-4.099984,-4.250458,4.356635,-1.817159,7.586681],[3.008297,9.119077,-9.585273,-5.885574,-2.209792,-8.376564,8.241389,-0.444670,6.589128]],[[-9.367500,-6.589033,0.150831,-4.936765,-9.570597,8.519621,-7.207978,2.919605,-3.610788],[-8.179944,7.382126,-1.241557,6.277058,-5.539468,1.570221,9.235662,2.000161,5.444392],[4.001991,5.385338,-9.293228,2.517907,3.803936,-3.278937,-3.925775,-3.294632,1.080280],[9.498995,-3.965611,-5.474172,6.325532,2.552385,-7.901005,-2.847247,-4.567700,2.058325],[-9.605734,2.319112,5.965491,0.073005,-5.446182,3.416025,7.936842,9.336609,1.182934],[8.823673,5.141791,1.385705,3.397669,8.665345,3.945242,-5.062771,8.534311,5.926592],[-9.582432,6.310403,-1.053109,-3.250195,4.369481,2.686792,-9.536409,-5.333398,4.748179],[8.064726,9.908661,-1.035453,5.307343,-3.849064,2.922596,-7.685466,6.121309,-9.808963],[-2.612584,2.076345,-2.982249,-1.685515,8.691398,2.163014,-9.816419,-4.219905,7.492719],[-4.251258,0.015767,-0.211945,-3.251685,-2.115444,-4.515425,8.835546,-2.830242,-0.480556]],[[5.852604,2.028093,8.676594,0.302165,1.010041,1.699926,0.465042,8.574316,0.510667],[2.172514,-5.042171,8.751625,-5.346326,-8.110728,3.449466,-6.280715,4.668456,4.719942],[-4.494213,2.649409,-8.958308,-9.433383,-5.529631,3.382828,6.857213,-3.532010,-3.966148],[-6.985526,-0.347734,0.342055,-8.215928,6.240868,4.280768,-5.005158,4.796225,5.538600],[5.937952,6.266260,-4.481827,6.543571,1.791832,4.519148,4.558291,5.221882,-8.936007],[7.726745,-8.034726,2.037919,9.229916,5.219985,9.533564,3.286655,-5.645025,-8.631730],[7.864761,9.470482,8.888264,-7.543720,-8.280074,9.037919,1.976578,5.708472,1.824674],[1.395252,8.806695,3.109630,-3.329871,3.345852,-5.169821,9.284007,9.214683,-3.934697],[6.821294,1.870693,-8.163599,0.028012,1.385274,3.178926,8.559160,6.187846,9.638216],[4.455559,0.219409,0.883620,-5.586013,8.712443,5.262445,1.338113,1.950637,-4.538403]],[[7.948766,8.454349,7.637560,1.941818,9.995489,4.394119,4.877326,-2.960424,8.130991],[-3.158901,-4.321968,3.073710,-3.148683,2.352163,2.905943,8.097638,5.545350,7.082816],[-5.192625,1.665058,6.042343,-5.100066,1.221050,-8.880231,-5.255390,-0.550518,-2.351630],[-8.713319,-3.239136,-0.803026,-1.703197,-0.483566,-8.022216,-5.931705,-8.954234,6.588838],[-9.531175,5.430232,-9.499690,-6.117501,-5.918660,-4.806558,-8.610891,5.828324,-6.761698],[-7.495546,-5.337736,-4.389429,-1.620067,5.382329,-1.240733,-9.703909,-4.358992,-7.123193],[8.355455,-0.447601,9.240455,4.079051,6.633330,3.134238,-7.793376,-4.974219,-8.371681],[-2.307247,3.554010,-2.274867,-9.304579,-5.460715,-7.485861,1.301176,0.082234,3.812513],[-1.040041,-5.116582,-1.559410,4.360933,8.961842,5.524836,-4.628159,-1.710181,4.534306],[6.076683,-1.420617,-4.127190,-7.280441,-9.831974,8.255744,6.072788,-8.575216,-4.077304]],[[8.153120,-8.760838,1.212103,-0.543676,1.396033,-5.459829,8.492234,-6.990684,1.121132],[-3.601546,-4.243059,-4.620340,4.851365,-8.772254,0.134247,-1.878037,-0.307553,-9.200855],[-0.089169,-8.449268,6.175019,-5.402113,-2.324920,-2.472519,6.785464,-3.835578,-2.713212],[-3.318505,-7.622376,7.341047,1.350367,-2.168233,-1.575523,4.320114,2.270963,-2.053743],[-3.964410,-6.351860,4.375032,7.485967,8.184635,4.646348,-4.361692,8.348211,-2.624319],[-2.847199,-9.279721,9.039778,1.918291,5.972817,-7.067279,-5.663587,-9.055705,-0.071835],[3.764047,0.904704,8.929591,-0.677804,-2.777136,-0.286002,0.851995,-6.997654,2.102284],[-2.055722,-3.218615,1.515462,-3.494251,-1.821510,-0.474787,-8.220065,-4.912662,5.105408],[-8.008393,3.015069,4.828237,8.634767,-4.217405,4.013333,-5.237035,5.909754,9.329837],[9.761858,-5.295698,4.815006,-7.459331,-1.349081,3.395125,-4.017050,-1.545728,-7.159062]],[[3.538030,-7.945757,1.627880,1.320774,1.737409,-9.404741,-6.932447,-4.344046,7.966294],[1.233176,-1.839987,-2.324789,6.751623,2.460600,-1.382295,-5.296719,-4.158525,-7.521396],[-0.931460,0.562149,-6.210110,-8.892358,4.404503,7.084463,-9.319392,2.169419,-9.909276],[-9.033879,-4.979906,3.840588,2.207743,6.073903,-1.250251,9.774251,1.137102,9.094142],[5.754310,-4.480744,-0.198155,6.352594,5.658703,6.588145,6.346634,1.324297,-1.555523],[-7.386858,-2.939358,6.170681,7.106291,3.874648,7.367762,-2.587278,9.072046,9.550802],[-7.006492,-5.212433,2.238573,-0.713885,-4.873696,5.617595,-7.582874,-4.802111,7.667996],[-8.074124,0.852112,7.132618,-7.565576,5.861534,7.090536,5.211513,1.936567,1.607877],[-0.449156,9.736733,0.097491,1.676683,8.894331,9.842209,9.524744,5.770506,3.646695],[7.395866,0.326880,3.416171,4.732611,-5.560898,7.443292,-5.776372,8.087595,-9.827756]],[[-4.147126,9.428839,8.687370,-4.243030,-3.470545,4.605483,-5.941649,4.267742,8.824590],[-5.559550,8.798655,-8.578094,-3.635939,-7.995404,-7.118924,3.201488,-3.876000,-6.880096],[3.956367,-8.469530,3.339796,2.094598,-0.049783,2.641463,-2.497163,0.284066,-2.467058],[-6.629015,-3.186077,2.590089,0.395754,3.198971,8.186126,5.397040,-3.059033,-7.352023],[-2.008063,8.117042,-1.166358,-1.776383,7.888471,-0.907720,1.759086,-2.088603,-6.414124],[4.917117,-1.366824,3.657200,-8.552024,-1.860596,1.723142,-0.397737,2.670242,-4.717410],[-0.806905,-5.828204,-2.560838,-0.061123,1.564885,5.112387,-6.999811,8.655114,5.115774],[-7.781341,3.645356,-6.875879,5.814349,-1.217284,4.636628,-7.295363,-8.139454,3.168462],[0.716034,-9.398664,-8.406268,-1.722263,-6.183526,-7.968931,3.563039,-3.542613,0.231867],[7.396228,1.626626,0.448656,-6.479057,9.227094,-5.266733,-6.650843,-4.068557,-5.876231]],[[-4.933657,6.790477,-7.654257,0.850183,-8.116470,7.474232,-7.456794,-0.397006,-0.949740],[-4.232526,0.398853,3.991675,-3.738510,0.512416,4.992188,-4.466462,3.671729,-5.153663],[9.487359,4.288640,8.694952,5.443223,5.780135,-7.685555,-0.099101,-5.376518,-7.967999],[1.257840,8.328489,3.076314,1.533526,7.090157,1.938460,-7.094098,9.823675,-8.970494],[-9.617989,-8.270872,7.467938,-3.716214,-1.741283,6.086639,-5.311172,2.079175,1.876204],[-4.501115,-4.177341,0.867823,-6.612220,-5.353721,2.976998,-2.518659,5.004573,7.379775],[3.558052,-9.821226,7.429838,-8.809821,-5.903177,7.271589,-2.768508,-3.172033,5.913763],[-4.929868,-7.139835,5.750025,3.141679,2.177908,6.280180,5.298716,-5.979636,-4.651642],[8.188750,-6.107445,-2.745360,-2.814865,9.589943,-7.786472,-3.949182,-3.212800,3.090134],[8.519918,-1.052926,7.743876,0.941153,-9.265951,-3.786515,4.659360,-7.682070,-0.731328]],[[-8.265206,6.431904,0.868701,-0.009081,7.441633,-8.499699,6.017740,5.700449,8.409923],[4.663347,-3.198211,-0.638429,-4.483956,-9.432529,1.241132,3.907607,9.746563,-5.679229],[-2.658266,8.992482,6.975780,8.398710,1.922167,-3.319301,8.518971,1.293671,-5.645148],[8.966589,-0.822940,0.020938,-7.012824,7.323534,9.767255,-0.219426,-5.787100,1.192875],[-0.076791,-2.036542,-5.301726,-6.351242,-6.429007,2.323734,2.187336,8.357386,-4.264252],[-9.434381,-9.740522,6.744788,2.706318,4.203850,6.646651,1.683990,4.212365,8.001287],[2.725616,-2.180501,9.441175,-1.478904,-8.779138,-7.780628,-2.722652,8.872875,-5.252718],[-8.249336,-7.647171,-1.305479,1.611937,2.880699,0.928077,-6.344010,-4.801253,6.362367],[-5.822949,9.533755,8.692691,4.347828,-3.043228,-6.085616,9.233310,-3.661585,6.292481],[7.625156,-2.351742,4.922328,5.771578,-6.575956,-4.474635,-4.103656,0.947971,5.099116]],[[6.767392,-3.585960,0.375874,9.699851,-3.204466,0.223363,-0.133450,-1.411809,5.949437],[-8.448742,3.709706,5.851683,-4.773787,-4.199353,0.074006,3.189623,-3.980853,-7.325872],[-0.467567,7.109116,8.449305,-2.922297,6.208785,-5.445881,3.853293,-8.282078,-8.382185],[-0.840382,1.469366,-4.250750,3.842834,5.706105,-0.976608,7.736390,6.733238,3.300749],[6.413198,-4.767667,-5.257830,-7.754314,-5.767401,-5.764217,-5.630218,5.654729,9.277096],[-0.574268,3.468967,-4.757783,5.359198,5.450111,-5.236429,7.558473,-2.714406,4.410922],[-9.184303,-1.888058,-2.549255,8.229721,-3.083334,-3.614169,7.961076,-4.729185,-9.861101],[-1.781002,-7.179810,9.525747,-1.341157,4.204888,-5.426318,5.500375,-4.527824,7.080872],[-2.583042,3.305099,-2.070007,-5.041995,-5.484650,-2.142959,9.521244,-6.746723,-0.383149],[2.545286,-8.241672,-8.151908,6.098058,7.518468,2.049515,-5.481783,-5.874176,-3.811286]],[[6.659649,-2.278635,5.584781,-8.463970,5.808840,4.706895,-0.060461,-5.224283,8.714451],[-8.910227,-0.285125,-9.019666,-9.277347,3.482843,-4.328462,3.367421,-3.439182,1.416978],[8.741305,-5.649814,-0.051152,-4.590414,-4.942769,0.200028,4.865213,-4.448985,8.027470],[-2.540414,1.812797,-0.314189,9.202154,8.453604,9.084754,-9.832800,0.044912,6.085911],[-7.303706,-7.284058,-5.953327,-0.206463,1.317435,1.959463,4.788665,8.788956,9.382208],[-8.387010,4.147703,-7.266820,-8.539770,1.010775,-8.005286,1.877653,4.293285,1.271718],[3.443101,7.419693,6.071075,3.793310,-4.163383,6.187316,1.632938,9.992521,-3.063094],[4.360787,-7.993500,-9.726598,-6.788146,3.171877,4.146226,7.402420,-4.934607,-9.660821],[-3.654063,-2.224524,-3.056895,-0.891394,2.880517,-1.788986,-6.696725,-0.127980,0.106409],[3.459611,-4.486786,1.948072,5.967246,-5.190631,9.278965,5.748569,-1.769630,4.297734]],[[-3.336311,-3.286156,2.990116,9.164353,9.488837,-6.211084,-5.753188,-6.503193,-0.527824],[-7.313230,-6.638001,3.004903,7.624064,2.199648,-1.343858,-8.312294,0.548084,-5.604979],[-9.120467,-3.727697,2.288598,-8.108352,-9.952824,-1.921230,-6.842297,-9.198014,9.908025],[-9.055954,3.933532,-5.799045,-4.120105,-8.821071,-8.737337,-2.592335,-1.819048,-6.764333],[8.548707,6.221123,3.413087,-1.457128,-9.364341,-8.430343,-1.222228,7.680449,9.465202],[0.398862,-8.998300,9.936936,-8.579500,5.013031,-1.681788,-7.035963,-5.472520,3.509681],[5.330927,1.322036,-2.850300,0.333834,1.163471,-5.441510,5.125362,-7.585353,5.928856],[-1.315338,-7.769917,-5.284138,9.957722,-6.201324,-7.298085,2.241788,-3.269290,-2.044090],[-2.155443,8.914956,-6.789416,-4.375128,-5.996988,5.654956,-0.361329,5.783171,-7.718751],[8.156603,3.745011,2.177485,1.844877,0.061768,-8.462428,5.699915,-2.569652,-2.966092]],[[-1.527235,-0.715666,0.478311,0.474721,5.302709,-4.328514,-3.132445,9.383468,-8.554407],[-9.012296,5.856435,9.617717,6.136081,-2.410599,2.800033,-0.318139,-4.468217,-2.877451],[-4.511255,3.630319,3.255585,9.850097,-1.879573,6.989163,-5.888856,-6.544893,6.581495],[5.266382,-0.869782,-9.183870,-7.563530,-4.053362,0.175884,-7.297464,-8.062240,1.734915],[-4.599172,3.993507,9.701495,5.219711,-2.231444,4.929528,8.274947,-4.931871,3.636373],[5.618333,3.406972,-7.124347,0.589977,0.277758,-5.297159,1.858392,6.794588,1.347012],[4.635120,-0.420000,6.961532,5.340084,-8.857773,-9.845307,3.190709,9.483117,0.736377],[9.647801,9.793601,-1.010087,-9.373043,-9.863049,0.259407,-0.400129,-0.934110,-4.835390],[7.482938,-0.947559,-7.672158,2.510535,-9.525784,-1.046487,-8.141956,-9.574991,-5.350024],[5.294130,-4.381815,0.927408,-9.903924,-2.044369,-5.671206,-7.113090,5.405365,-8.909793]]], dtype = "float64")#candidate|5338|(15, 10, 9)|const|float64
bop_5339 = relay.divide(const_5337.astype('float64'), const_5338.astype('float64')) # shape=(15, 10, 9)
uop_5353 = relay.log(const_5338.astype('float64')) # shape=(15, 10, 9)
var_5362 = relay.var("var_5362", dtype = "float64", shape = (15, 10, 9))#candidate|5362|(15, 10, 9)|var|float64
bop_5363 = relay.bitwise_xor(const_5338.astype('uint8'), relay.reshape(var_5362.astype('uint8'), relay.shape_of(const_5338))) # shape=(15, 10, 9)
uop_5368 = relay.acosh(uop_5353.astype('float32')) # shape=(15, 10, 9)
const_5372 = relay.const([[[0.367024,6.819404,9.838546,-4.199488,-0.659180,-4.418367,0.581654,8.159978,-6.838311],[6.470567,4.676695,7.444215,0.185276,6.647424,7.619457,-5.295405,3.726902,-6.532171],[-4.926365,5.972884,4.047028,3.758386,2.578331,-5.750070,-9.298304,-6.837579,5.259105],[5.897483,6.665758,-4.914730,0.587020,-4.729472,5.987814,2.830351,6.794057,-6.060839],[-9.716938,2.868213,-7.753109,1.933435,7.280393,8.457606,2.962639,1.557921,0.530639],[-1.696778,-1.675040,8.473671,1.327466,3.971054,-6.923665,6.137781,6.298564,-6.790083],[4.825797,-5.380571,3.662692,1.507648,-0.140841,2.349740,-6.336671,0.081147,-8.051464],[-5.609264,6.854716,-0.451240,4.486483,0.434935,6.053826,4.269318,9.168163,0.578531],[7.471579,-6.973826,-4.577597,8.485281,0.713173,1.067388,8.178494,1.259978,-7.074092],[-6.476091,-7.345621,-5.393261,0.086583,-0.898094,-0.004638,1.232019,-8.643341,7.500030]],[[-6.736019,9.751674,7.016220,3.011684,5.924346,-0.156917,3.372894,5.209618,-9.012660],[5.847774,8.023159,-2.603286,4.929667,4.150085,0.799715,-8.751571,8.778954,4.825939],[2.475841,-4.552221,-9.247080,-3.273703,4.287459,7.407275,2.459796,-9.789072,-6.542756],[-1.855970,-4.413193,9.067293,3.662890,5.655895,5.635796,7.114938,-8.086243,4.358651],[-0.371728,-7.627627,-5.921314,4.201793,-7.594614,-3.555657,9.375452,-1.009891,2.532081],[0.969401,-5.859578,3.692898,-0.954280,-4.331073,-9.733607,7.875354,6.094596,3.550450],[7.333442,1.235257,-2.734358,-1.561407,6.657158,6.058200,-6.593886,7.174304,-1.162286],[-0.407002,8.506913,3.992106,2.064511,9.914019,-5.375519,-0.340697,8.307644,3.058065],[8.662715,0.681491,-0.647687,2.107332,-6.111632,4.677729,-1.666700,8.917556,-8.051683],[9.547820,8.769529,-8.414183,6.122479,9.410307,3.436139,-6.209405,-2.419162,6.060014]],[[9.432800,2.610138,3.522216,-6.238687,-1.415219,2.558805,-3.041845,-0.210486,7.690862],[8.650726,4.481112,-1.164104,1.896595,-9.802455,-5.126811,-0.667937,-1.251473,9.356796],[9.607788,6.877248,0.758107,-1.149280,-4.179450,7.333373,-6.386156,-8.016197,7.284942],[-6.222612,-3.243634,-0.701377,-2.475700,-6.474482,-5.581003,-0.503621,7.708015,-8.941226],[-4.929907,-2.455475,0.104536,3.144504,-5.846745,-3.507976,-2.888908,-7.377152,5.202029],[8.249881,9.728286,-5.407723,-1.667449,9.058549,2.903562,-0.016029,0.599218,-6.456963],[7.635771,-0.428010,5.833887,4.438306,7.190930,-2.663066,8.302134,-3.389205,2.152880],[-8.478451,1.938845,0.021872,9.590988,-4.306965,-4.430930,-5.934868,-0.434598,2.004512],[5.204681,4.239968,-6.304182,5.008298,-3.574553,5.636922,-1.302090,2.660222,6.870787],[-8.865316,-7.504872,5.238190,3.288431,-2.552460,-8.460349,-6.796370,3.298459,-5.124897]],[[6.005244,3.334742,5.928412,-9.370706,-3.839383,5.908952,-6.240440,7.140234,4.992157],[-3.452464,-2.562719,-1.837878,-9.948742,-7.346873,1.131447,-3.098106,-1.480704,-3.830458],[-1.479665,8.821155,-8.147830,-0.355604,4.897084,1.272670,9.373852,8.041981,5.774466],[-6.054405,-2.448936,2.902557,-6.651494,2.841408,9.053992,-4.589341,-9.825836,-0.314225],[8.683308,4.828473,-6.876608,8.927923,-4.968723,2.182754,-9.542856,-2.511712,-8.818091],[-0.589235,2.742165,3.122075,5.057890,-2.999847,-4.658806,-7.429817,2.267264,-3.766010],[8.610229,6.247731,-4.790698,3.734316,0.954024,-0.678395,0.349802,-4.463094,-9.346540],[8.850588,9.425285,0.636643,-2.440417,1.828581,4.264748,-2.828332,5.331091,9.947388],[-1.243971,0.255302,-0.050336,-5.240164,-3.081744,-9.262884,-1.779699,3.080029,1.763603],[1.693197,-2.915344,9.100508,-7.516197,-3.790314,-2.575899,-2.496500,-6.157999,-6.012461]],[[9.605489,-7.759826,4.499032,-7.729003,-5.985154,2.682830,-8.451465,-0.359369,-8.511772],[-5.843187,7.454266,-1.027065,-3.388358,-9.375995,-3.240265,3.191353,7.710637,-0.114485],[-8.546869,3.737245,-8.222277,-1.602206,9.670580,9.292900,9.975224,1.358077,3.330036],[-9.361522,-2.818835,-7.583205,0.053369,-8.257743,-7.042238,0.865356,8.538668,3.587751],[9.986621,-6.608038,-7.943486,-5.817429,7.025692,-5.157670,-2.973232,4.304165,-5.649131],[9.836061,5.691088,-7.388279,-7.868131,1.605098,-7.127977,9.829837,-7.343877,0.812181],[-2.978155,-4.066278,6.348982,-4.235448,0.975128,-0.204914,6.586059,5.404300,4.336191],[-9.925546,1.920564,6.944300,6.748701,-3.588972,-7.997886,-5.268275,1.728982,-5.265661],[-2.972054,-5.763177,-2.001441,8.736491,7.558586,1.178137,-0.258034,-5.252838,0.519089],[-9.999484,7.105702,-8.517217,-9.473046,-5.093483,-5.309377,-2.250887,1.774831,-0.341515]],[[5.047972,8.855766,9.010157,3.050480,3.163685,5.270474,2.698272,6.439469,-5.811556],[-7.057216,-5.107403,9.186408,2.787501,4.870897,-5.737537,9.571710,9.400977,-7.525288],[6.189059,8.002686,-3.871905,3.795968,-5.342982,-0.919370,-3.789862,5.211494,1.757319],[9.802666,-1.887284,3.764034,9.287323,-9.889348,6.531702,5.115225,-1.009152,8.540492],[8.174986,-5.216364,2.210817,1.200655,3.545923,4.706466,4.744049,0.023338,2.823872],[-4.526233,7.840037,-3.436063,-5.699002,5.633625,-0.883795,2.373269,1.773592,3.390093],[-7.669699,6.063168,5.913238,-3.770017,0.086845,-1.390453,-8.518284,1.195654,6.444087],[-4.138044,6.587918,-8.765678,7.280285,-0.965079,5.224559,7.515543,-8.092063,5.913623],[6.636109,-7.519796,3.244177,-7.003733,8.206839,-0.729511,3.003538,-3.475303,-2.225247],[-6.222315,-2.420122,0.376324,-2.101233,9.408106,9.069669,-6.092494,-0.647029,4.646159]],[[8.878461,6.089008,-0.880106,8.184920,3.486432,-9.660080,-5.091917,4.646579,8.251165],[-7.799176,7.769994,-8.948496,-7.547743,-9.911237,8.305192,-8.279645,3.864737,-6.763703],[9.663559,3.045463,3.300832,8.106181,-5.861311,4.851164,7.040467,8.779307,1.840825],[2.881863,-2.471688,6.840783,9.705689,-0.831761,5.922832,-8.581924,-9.184448,0.927738],[-6.942845,6.702850,1.558788,-9.662691,-8.323906,-3.607328,-6.799880,9.233959,7.056443],[-2.834219,-7.198032,8.325300,9.892165,7.817314,8.588199,-7.433182,7.349301,-2.765412],[-3.754798,4.211964,-3.555263,-6.384722,2.306877,2.412466,-6.581820,1.432129,-9.086805],[0.614165,5.756808,2.616578,2.065082,-6.518464,7.168196,-1.837780,8.583362,-4.042408],[9.418376,-1.763026,-9.468297,2.657180,-6.986532,0.888697,9.113292,-9.112402,5.593446],[4.558563,5.041238,6.056279,-7.916675,-0.781799,6.986370,5.062092,-0.088654,4.320684]],[[0.441067,6.646267,-2.490485,-8.798369,0.256976,-1.935274,-0.505751,-9.868225,3.834495],[-8.609354,4.367313,5.076663,9.614076,1.474456,3.768852,-7.633883,0.846267,-6.510992],[-8.509143,5.817883,4.824554,5.042093,4.575490,-7.729485,3.808277,-3.888868,1.096773],[-7.713550,-1.629202,-2.412160,-8.253109,-9.547583,5.427996,6.699925,0.843939,9.042241],[-5.323332,-7.644297,-9.185834,-2.918253,2.001235,-2.348572,8.432318,5.254358,-7.170847],[5.998404,-6.856699,-2.079727,-1.126272,0.849098,-6.703716,-6.475051,6.907826,-3.040483],[8.583472,-5.491102,9.289093,-8.373082,9.035642,-5.289145,2.844337,-6.496211,2.630049],[3.060459,6.988182,5.599228,-5.008339,-2.527931,-8.691198,8.772276,-9.620260,-2.389142],[5.271524,-1.232388,-6.551274,-3.471419,-0.695782,2.643958,-2.037975,9.627703,-0.452099],[7.412676,-1.955312,-8.158830,8.598238,1.266292,9.381063,1.532490,-2.952071,4.073322]],[[1.198072,-4.830784,1.876459,7.491154,2.489971,5.381669,-3.729301,-2.283086,-8.109070],[6.587435,-8.173783,1.618203,7.367402,-9.430598,-7.166349,-0.051614,-0.782112,5.952271],[3.484851,7.039223,6.010483,-8.452462,4.306212,1.948370,4.966374,0.543824,9.903207],[-3.019795,-1.962445,-6.565927,-8.558942,-2.290263,5.429404,-6.631105,-4.140374,0.026010],[-8.489348,7.206577,-8.298487,-0.701883,-1.737880,-5.979157,-8.362151,-2.734090,6.409105],[-9.004401,7.525594,-1.864390,-8.934418,1.674953,-4.613816,1.105473,-6.301866,9.154483],[2.481011,9.806811,7.579951,0.324172,-5.037295,-2.265085,-6.492390,8.868802,2.811383],[-0.866246,7.567825,8.849250,3.664560,-9.295687,7.944318,-2.742531,2.777777,-4.785337],[1.586490,1.658652,0.017715,-8.626684,-2.352635,-1.792045,1.588197,0.669021,-1.217335],[8.364307,5.076730,-3.833984,2.099215,9.441845,-9.210024,1.996361,1.651741,1.004000]],[[5.285763,-7.203669,4.949795,9.296723,-4.284038,3.509775,4.005148,-2.025414,0.560640],[-4.287948,7.261399,1.556497,9.788059,-1.455368,7.439414,-0.967423,9.648367,-9.667537],[9.287770,2.546023,4.010584,-5.752362,6.849937,9.671279,2.576628,2.375012,-4.799511],[-3.802051,-2.362243,-0.082354,-3.946975,-9.109925,-8.860963,0.966377,-5.598603,7.924114],[0.416868,5.303201,-6.601613,4.324733,-5.126068,-7.170312,-1.449628,-3.355224,8.563180],[-5.536348,4.610037,0.917071,-2.148843,6.505764,-1.408284,-8.911819,6.584966,-9.021297],[-5.438440,9.607604,8.346391,1.251984,6.276285,-2.002459,6.189565,-1.509478,1.841312],[-1.750146,-6.532591,-3.380452,-8.504792,8.919278,-8.130288,8.156829,4.881526,8.708372],[-4.789724,-9.865080,4.064809,8.046278,-8.727440,2.083028,3.801294,3.106630,-6.612947],[-6.505882,-1.154710,-4.769238,-6.344079,4.167028,-7.300127,-7.225716,-9.368352,-4.160805]],[[7.416138,-9.595264,-0.011065,8.149869,4.027891,7.031695,-2.097297,-0.989510,6.051408],[-9.557448,-6.965678,-8.560849,-0.382772,7.595557,2.061560,-2.789123,1.473022,-3.842859],[6.436349,-0.054384,-1.440942,-5.732360,4.002968,1.462186,8.424082,-0.489150,-1.946683],[-0.744616,8.941911,5.650418,-8.398211,6.775646,-4.572208,9.113606,4.274740,-1.209013],[9.066232,4.281554,6.102688,-0.139910,-3.271426,-1.495569,8.940672,5.930333,-5.383750],[6.586285,5.145832,8.030358,1.478235,6.891031,-9.008937,-4.850729,-3.690586,-1.912179],[8.221520,-3.295495,-9.318374,-8.632883,3.958592,-8.273997,-6.663538,-5.846399,2.177270],[9.203635,-7.487685,3.159308,-5.945903,1.223645,8.896045,-6.290327,-8.624613,-6.883894],[8.802957,-8.057506,7.208189,-9.268985,-8.161274,1.377813,-5.276795,-4.955609,2.604653],[6.380119,-3.962574,-3.709401,7.964324,-3.186311,8.636828,-0.410461,0.013773,8.262980]],[[3.370752,-9.791814,5.575920,6.183946,-3.787600,-3.987863,-5.050417,9.407495,-1.099107],[-6.761164,-8.447003,7.931110,-0.132679,-3.741798,-7.577799,-4.539990,5.749770,-0.356569],[-3.532847,5.042137,9.262680,-0.105889,1.808075,-0.758839,6.164156,3.260249,1.696377],[0.683677,-1.302738,0.316587,5.149733,2.949314,-0.916263,7.390501,6.643352,0.199637],[7.213904,-9.463963,9.663684,-5.059336,-8.206711,-7.106014,4.025632,3.091215,9.406426],[-7.412711,-8.791462,-8.800077,7.368761,1.549527,-9.675787,-6.204574,-8.857464,-9.330354],[0.302134,-6.613373,5.172150,-0.591119,-3.823825,-6.602386,-5.284586,-6.316545,-1.967565],[-7.728717,4.637414,4.927594,-3.107688,8.990861,-9.589291,3.362062,-9.409390,5.115857],[-2.558289,-3.746913,2.462798,1.207441,-3.332244,-1.454144,-6.932268,-4.515017,-9.171210],[9.692824,9.578395,6.311617,-5.919954,-6.894680,-6.964626,-5.941068,0.839915,8.209245]],[[-5.895032,-4.106836,8.629913,2.519361,5.472723,5.416335,4.374043,4.986526,9.316957],[6.254151,1.277629,-9.149332,7.439574,-5.658473,-8.752298,-6.155189,-3.329273,0.179811],[5.408208,3.070122,-9.137506,9.026105,8.156207,5.747539,3.432880,4.618608,-7.754133],[3.762688,-6.520212,-9.846600,2.264285,7.167878,7.123090,3.330198,-2.226778,-0.739200],[1.471897,-1.053229,-4.690167,7.478162,-2.108618,-1.287741,8.803866,4.926880,4.740137],[-1.430453,-2.863315,2.849723,-1.297171,-7.685924,9.905794,4.802459,-3.213226,-4.249254],[7.497470,9.249270,-5.958977,-1.792558,0.884792,7.535344,5.716120,2.969694,-2.334521],[-3.684212,-2.953475,9.185791,3.729340,-7.852650,-3.309934,-9.896679,5.983087,-1.129984],[4.645846,0.653994,-5.989497,5.671523,-4.541253,3.039681,9.812509,4.263186,-4.609838],[-3.618506,7.603641,-3.873055,1.196781,-9.143035,-7.582521,-1.420633,6.121296,-8.970463]],[[-7.964696,-3.885498,-9.915456,5.690046,2.910373,3.146433,1.658805,4.484961,3.594273],[4.106906,-9.312498,2.136924,-4.361945,-4.349530,2.224207,3.166189,-0.885040,-7.248228],[6.673627,1.650303,-9.600686,-2.671130,-4.289763,-6.709846,2.034766,-9.086869,0.610584],[-7.838084,1.194241,-4.614574,6.057861,-1.935185,2.523735,6.579797,2.046538,6.334419],[0.714076,5.359747,7.073669,2.254421,3.381867,-5.921674,7.039224,-6.498209,0.904580],[5.941646,-8.957822,-3.322823,-5.350874,-2.734369,-5.964569,1.720878,-8.320499,0.781461],[2.873778,-2.145123,-3.606131,4.857341,-4.733369,-3.869431,-8.562183,-7.498555,-3.663982],[-8.759346,-1.658461,-0.801404,-6.188314,0.956470,-0.238574,-7.730278,6.017031,2.168685],[6.325364,-4.224731,-6.611644,7.825909,-4.818982,-2.222407,0.511744,-4.776075,0.324851],[-0.338132,-4.542108,-0.136242,7.266934,-9.393348,-1.099612,-0.088469,8.803099,6.150642]],[[-1.352688,-3.098279,-8.302242,9.554101,-6.320874,-9.207116,-8.098269,7.126189,-4.519394],[3.472934,8.859936,-8.406755,2.178997,8.553420,4.691367,1.179293,-8.943384,6.968274],[-5.848741,-9.046722,-4.358971,-0.127965,3.592947,7.215762,-9.317304,0.841053,4.510997],[9.278489,3.010157,7.790934,0.261222,-1.687430,-3.905149,-7.993608,-0.502270,2.283807],[8.681834,5.066898,-4.903511,-5.715248,7.672157,-9.728014,-5.821373,-4.105050,-9.463710],[-6.607664,-4.624892,3.819267,-9.868798,0.279871,-4.465854,8.153333,-0.846955,1.699276],[-1.670051,8.905192,8.124968,-4.152936,3.243663,6.669520,-5.674382,0.307589,-7.129383],[3.214910,8.375142,0.427823,-2.036293,2.872316,9.590039,2.017073,0.044152,-8.889383],[-5.605873,-1.899301,0.047860,4.646345,5.711528,-7.427048,-0.977770,7.303007,-5.221217],[4.353315,4.660109,1.079709,6.471123,-9.304315,-6.478581,-5.240412,1.614916,-8.822816]]], dtype = "float64")#candidate|5372|(15, 10, 9)|const|float64
bop_5373 = relay.subtract(uop_5353.astype('float64'), relay.reshape(const_5372.astype('float64'), relay.shape_of(uop_5353))) # shape=(15, 10, 9)
bop_5381 = relay.greater(uop_5368.astype('bool'), relay.reshape(uop_5353.astype('bool'), relay.shape_of(uop_5368))) # shape=(15, 10, 9)
output = relay.Tuple([bop_5339,bop_5363,bop_5373,bop_5381,])
output2 = relay.Tuple([bop_5339,bop_5363,bop_5373,bop_5381,])
func_5393 = relay.Function([var_5362,], output)
mod['func_5393'] = func_5393
mod = relay.transform.InferType()(mod)
mutated_mod['func_5393'] = func_5393
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5394 = relay.var("var_5394", dtype = "float64", shape = (15, 10, 9))#candidate|5394|(15, 10, 9)|var|float64
func_5393_call = mutated_mod.get_global_var('func_5393')
call_5395 = func_5393_call(var_5394)
output = call_5395
func_5396 = relay.Function([var_5394], output)
mutated_mod['func_5396'] = func_5396
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5033_call = mod.get_global_var('func_5033')
func_5034_call = mutated_mod.get_global_var('func_5034')
call_5415 = relay.TupleGetItem(func_5033_call(), 1)
call_5416 = relay.TupleGetItem(func_5034_call(), 1)
func_208_call = mod.get_global_var('func_208')
func_210_call = mutated_mod.get_global_var('func_210')
var_5420 = relay.var("var_5420", dtype = "float32", shape = (240,))#candidate|5420|(240,)|var|float32
call_5419 = relay.TupleGetItem(func_208_call(relay.reshape(var_5420.astype('float32'), [5, 12, 4])), 0)
call_5421 = relay.TupleGetItem(func_210_call(relay.reshape(var_5420.astype('float32'), [5, 12, 4])), 0)
uop_5423 = relay.acosh(call_5419.astype('float64')) # shape=(5, 12, 4)
uop_5425 = relay.acosh(call_5421.astype('float64')) # shape=(5, 12, 4)
output = relay.Tuple([call_5415,var_5420,uop_5423,])
output2 = relay.Tuple([call_5416,var_5420,uop_5425,])
func_5446 = relay.Function([var_5420,], output)
mod['func_5446'] = func_5446
mod = relay.transform.InferType()(mod)
mutated_mod['func_5446'] = func_5446
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5447 = relay.var("var_5447", dtype = "float32", shape = (240,))#candidate|5447|(240,)|var|float32
func_5446_call = mutated_mod.get_global_var('func_5446')
call_5448 = func_5446_call(var_5447)
output = call_5448
func_5449 = relay.Function([var_5447], output)
mutated_mod['func_5449'] = func_5449
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1028_call = mod.get_global_var('func_1028')
func_1029_call = mutated_mod.get_global_var('func_1029')
call_5506 = relay.TupleGetItem(func_1028_call(), 0)
call_5507 = relay.TupleGetItem(func_1029_call(), 0)
output = call_5506
output2 = call_5507
func_5523 = relay.Function([], output)
mod['func_5523'] = func_5523
mod = relay.transform.InferType()(mod)
output = func_5523()
func_5524 = relay.Function([], output)
mutated_mod['func_5524'] = func_5524
mutated_mod = relay.transform.InferType()(mutated_mod)
func_525_call = mod.get_global_var('func_525')
func_527_call = mutated_mod.get_global_var('func_527')
call_5525 = func_525_call()
call_5526 = func_525_call()
output = relay.Tuple([call_5525,])
output2 = relay.Tuple([call_5526,])
func_5535 = relay.Function([], output)
mod['func_5535'] = func_5535
mod = relay.transform.InferType()(mod)
output = func_5535()
func_5536 = relay.Function([], output)
mutated_mod['func_5536'] = func_5536
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3517_call = mod.get_global_var('func_3517')
func_3519_call = mutated_mod.get_global_var('func_3519')
call_5558 = relay.TupleGetItem(func_3517_call(), 0)
call_5559 = relay.TupleGetItem(func_3519_call(), 0)
output = call_5558
output2 = call_5559
func_5568 = relay.Function([], output)
mod['func_5568'] = func_5568
mod = relay.transform.InferType()(mod)
mutated_mod['func_5568'] = func_5568
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5568_call = mutated_mod.get_global_var('func_5568')
call_5569 = func_5568_call()
output = call_5569
func_5570 = relay.Function([], output)
mutated_mod['func_5570'] = func_5570
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5285_call = mod.get_global_var('func_5285')
func_5287_call = mutated_mod.get_global_var('func_5287')
call_5573 = func_5285_call()
call_5574 = func_5285_call()
output = relay.Tuple([call_5573,])
output2 = relay.Tuple([call_5574,])
func_5582 = relay.Function([], output)
mod['func_5582'] = func_5582
mod = relay.transform.InferType()(mod)
output = func_5582()
func_5583 = relay.Function([], output)
mutated_mod['func_5583'] = func_5583
mutated_mod = relay.transform.InferType()(mutated_mod)
func_692_call = mod.get_global_var('func_692')
func_693_call = mutated_mod.get_global_var('func_693')
call_5659 = relay.TupleGetItem(func_692_call(), 0)
call_5660 = relay.TupleGetItem(func_693_call(), 0)
var_5664 = relay.var("var_5664", dtype = "float32", shape = (5, 12, 4))#candidate|5664|(5, 12, 4)|var|float32
bop_5665 = relay.greater(call_5659.astype('bool'), relay.reshape(var_5664.astype('bool'), relay.shape_of(call_5659))) # shape=(5, 12, 4)
bop_5668 = relay.greater(call_5660.astype('bool'), relay.reshape(var_5664.astype('bool'), relay.shape_of(call_5660))) # shape=(5, 12, 4)
output = relay.Tuple([bop_5665,])
output2 = relay.Tuple([bop_5668,])
func_5680 = relay.Function([var_5664,], output)
mod['func_5680'] = func_5680
mod = relay.transform.InferType()(mod)
var_5681 = relay.var("var_5681", dtype = "float32", shape = (5, 12, 4))#candidate|5681|(5, 12, 4)|var|float32
output = func_5680(var_5681)
func_5682 = relay.Function([var_5681], output)
mutated_mod['func_5682'] = func_5682
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1569_call = mod.get_global_var('func_1569')
func_1570_call = mutated_mod.get_global_var('func_1570')
call_5700 = relay.TupleGetItem(func_1569_call(), 2)
call_5701 = relay.TupleGetItem(func_1570_call(), 2)
output = call_5700
output2 = call_5701
func_5702 = relay.Function([], output)
mod['func_5702'] = func_5702
mod = relay.transform.InferType()(mod)
mutated_mod['func_5702'] = func_5702
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5702_call = mutated_mod.get_global_var('func_5702')
call_5703 = func_5702_call()
output = call_5703
func_5704 = relay.Function([], output)
mutated_mod['func_5704'] = func_5704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4143_call = mod.get_global_var('func_4143')
func_4145_call = mutated_mod.get_global_var('func_4145')
call_5707 = relay.TupleGetItem(func_4143_call(), 1)
call_5708 = relay.TupleGetItem(func_4145_call(), 1)
uop_5714 = relay.exp(call_5707.astype('float64')) # shape=(3, 7, 12)
uop_5716 = relay.exp(call_5708.astype('float64')) # shape=(3, 7, 12)
output = relay.Tuple([uop_5714,])
output2 = relay.Tuple([uop_5716,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

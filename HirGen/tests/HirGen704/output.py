import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
const_109 = relay.const([[[-10,-3,9,-5,3],[-7,-9,-4,-7,2]],[[-5,1,-10,-6,-8],[9,1,1,3,-6]],[[2,-1,-8,-3,-4],[-1,1,-2,-4,10]],[[-1,-8,-2,-2,-8],[1,2,2,-7,-8]],[[-2,-9,-10,-4,1],[-6,2,3,-6,-10]],[[3,-4,-3,6,-1],[-8,-3,6,10,-10]],[[3,-1,4,2,1],[2,-3,-9,-3,6]]], dtype = "uint64")#candidate|109|(7, 2, 5)|const|uint64
const_110 = relay.const([[[6,4,-4,-4,-1],[8,6,2,6,-5]],[[2,1,-7,3,-3],[-3,-6,1,-7,2]],[[1,6,5,-1,7],[7,3,-1,-4,4]],[[-1,-4,-4,-4,2],[-7,-7,2,-10,2]],[[-10,9,7,-4,4],[-8,-4,9,-1,-7]],[[2,-8,8,2,5],[-7,3,8,8,10]],[[-1,5,3,1,9],[-7,-3,-10,4,-9]]], dtype = "uint64")#candidate|110|(7, 2, 5)|const|uint64
bop_111 = relay.subtract(const_109.astype('uint64'), relay.reshape(const_110.astype('uint64'), relay.shape_of(const_109))) # shape=(7, 2, 5)
var_135 = relay.var("var_135", dtype = "uint64", shape = (7, 2, 5))#candidate|135|(7, 2, 5)|var|uint64
bop_136 = relay.power(const_109.astype('float32'), relay.reshape(var_135.astype('float32'), relay.shape_of(const_109))) # shape=(7, 2, 5)
output = relay.Tuple([bop_111,bop_136,])
output2 = relay.Tuple([bop_111,bop_136,])
func_148 = relay.Function([var_135,], output)
mod['func_148'] = func_148
mod = relay.transform.InferType()(mod)
var_149 = relay.var("var_149", dtype = "uint64", shape = (7, 2, 5))#candidate|149|(7, 2, 5)|var|uint64
output = func_148(var_149)
func_150 = relay.Function([var_149], output)
mutated_mod['func_150'] = func_150
mutated_mod = relay.transform.InferType()(mutated_mod)
var_213 = relay.var("var_213", dtype = "int16", shape = ())#candidate|213|()|var|int16
var_214 = relay.var("var_214", dtype = "int16", shape = (7, 6, 7))#candidate|214|(7, 6, 7)|var|int16
bop_215 = relay.minimum(var_213.astype('int16'), var_214.astype('int16')) # shape=(7, 6, 7)
output = relay.Tuple([bop_215,])
output2 = relay.Tuple([bop_215,])
func_218 = relay.Function([var_213,var_214,], output)
mod['func_218'] = func_218
mod = relay.transform.InferType()(mod)
mutated_mod['func_218'] = func_218
mutated_mod = relay.transform.InferType()(mutated_mod)
func_218_call = mutated_mod.get_global_var('func_218')
var_220 = relay.var("var_220", dtype = "int16", shape = ())#candidate|220|()|var|int16
var_221 = relay.var("var_221", dtype = "int16", shape = (7, 6, 7))#candidate|221|(7, 6, 7)|var|int16
call_219 = func_218_call(var_220,var_221,)
output = call_219
func_222 = relay.Function([var_220,var_221,], output)
mutated_mod['func_222'] = func_222
mutated_mod = relay.transform.InferType()(mutated_mod)
var_356 = relay.var("var_356", dtype = "float32", shape = (12, 14, 6))#candidate|356|(12, 14, 6)|var|float32
uop_357 = relay.asin(var_356.astype('float32')) # shape=(12, 14, 6)
uop_360 = relay.tan(uop_357.astype('float64')) # shape=(12, 14, 6)
func_148_call = mod.get_global_var('func_148')
func_150_call = mutated_mod.get_global_var('func_150')
const_367 = relay.const([8,9,-1,5,-10,-8,-7,5,10,-4,-1,2,9,-2,6,-6,-5,-10,-5,8,4,-6,-8,9,-8,8,-10,-5,-8,7,-6,10,9,-10,5,-4,3,-9,10,8,-3,-9,7,-9,-1,-10,-1,-10,10,-7,-7,5,-10,10,-4,-9,-7,9,-2,-8,7,2,8,-2,-4,-5,-9,-3,-7,-8], dtype = "uint64")#candidate|367|(70,)|const|uint64
call_366 = relay.TupleGetItem(func_148_call(relay.reshape(const_367.astype('uint64'), [7, 2, 5])), 1)
call_368 = relay.TupleGetItem(func_150_call(relay.reshape(const_367.astype('uint64'), [7, 2, 5])), 1)
output = relay.Tuple([uop_360,call_366,const_367,])
output2 = relay.Tuple([uop_360,call_368,const_367,])
func_379 = relay.Function([var_356,], output)
mod['func_379'] = func_379
mod = relay.transform.InferType()(mod)
mutated_mod['func_379'] = func_379
mutated_mod = relay.transform.InferType()(mutated_mod)
var_380 = relay.var("var_380", dtype = "float32", shape = (12, 14, 6))#candidate|380|(12, 14, 6)|var|float32
func_379_call = mutated_mod.get_global_var('func_379')
call_381 = func_379_call(var_380)
output = call_381
func_382 = relay.Function([var_380], output)
mutated_mod['func_382'] = func_382
mutated_mod = relay.transform.InferType()(mutated_mod)
var_384 = relay.var("var_384", dtype = "uint8", shape = (9, 10, 10))#candidate|384|(9, 10, 10)|var|uint8
var_385 = relay.var("var_385", dtype = "uint8", shape = (9, 10, 10))#candidate|385|(9, 10, 10)|var|uint8
bop_386 = relay.less_equal(var_384.astype('bool'), relay.reshape(var_385.astype('bool'), relay.shape_of(var_384))) # shape=(9, 10, 10)
func_218_call = mod.get_global_var('func_218')
func_222_call = mutated_mod.get_global_var('func_222')
const_390 = relay.const(-1, dtype = "int16")#candidate|390|()|const|int16
var_391 = relay.var("var_391", dtype = "int16", shape = (294,))#candidate|391|(294,)|var|int16
call_389 = relay.TupleGetItem(func_218_call(relay.reshape(const_390.astype('int16'), []), relay.reshape(var_391.astype('int16'), [7, 6, 7]), ), 0)
call_392 = relay.TupleGetItem(func_222_call(relay.reshape(const_390.astype('int16'), []), relay.reshape(var_391.astype('int16'), [7, 6, 7]), ), 0)
func_218_call = mod.get_global_var('func_218')
func_222_call = mutated_mod.get_global_var('func_222')
call_404 = relay.TupleGetItem(func_218_call(relay.reshape(const_390.astype('int16'), []), relay.reshape(call_389.astype('int16'), [7, 6, 7]), ), 0)
call_405 = relay.TupleGetItem(func_222_call(relay.reshape(const_390.astype('int16'), []), relay.reshape(call_389.astype('int16'), [7, 6, 7]), ), 0)
func_379_call = mod.get_global_var('func_379')
func_382_call = mutated_mod.get_global_var('func_382')
var_415 = relay.var("var_415", dtype = "float32", shape = (1008,))#candidate|415|(1008,)|var|float32
call_414 = relay.TupleGetItem(func_379_call(relay.reshape(var_415.astype('float32'), [12, 14, 6])), 2)
call_416 = relay.TupleGetItem(func_382_call(relay.reshape(var_415.astype('float32'), [12, 14, 6])), 2)
output = relay.Tuple([bop_386,call_389,const_390,var_391,call_404,call_414,var_415,])
output2 = relay.Tuple([bop_386,call_392,const_390,var_391,call_405,call_416,var_415,])
func_419 = relay.Function([var_384,var_385,var_391,var_415,], output)
mod['func_419'] = func_419
mod = relay.transform.InferType()(mod)
mutated_mod['func_419'] = func_419
mutated_mod = relay.transform.InferType()(mutated_mod)
func_419_call = mutated_mod.get_global_var('func_419')
var_421 = relay.var("var_421", dtype = "uint8", shape = (9, 10, 10))#candidate|421|(9, 10, 10)|var|uint8
var_422 = relay.var("var_422", dtype = "uint8", shape = (9, 10, 10))#candidate|422|(9, 10, 10)|var|uint8
var_423 = relay.var("var_423", dtype = "int16", shape = (294,))#candidate|423|(294,)|var|int16
var_424 = relay.var("var_424", dtype = "float32", shape = (1008,))#candidate|424|(1008,)|var|float32
call_420 = func_419_call(var_421,var_422,var_423,var_424,)
output = call_420
func_425 = relay.Function([var_421,var_422,var_423,var_424,], output)
mutated_mod['func_425'] = func_425
mutated_mod = relay.transform.InferType()(mutated_mod)
const_819 = relay.const([[[-1.759310,6.625434,-8.421980,-0.433124,4.974992,7.763866],[-8.903062,8.050127,-0.066403,5.104121,-7.550689,6.561215],[8.392974,-6.407612,8.519355,7.398026,6.595104,6.638228],[3.319145,-4.868739,2.912538,-1.173540,-2.443351,-0.307691],[5.240193,7.511377,3.591218,8.993484,-7.091057,-6.415616],[7.760751,2.009676,-5.749457,-5.402892,-1.826495,-2.836159],[-0.332137,8.157860,5.870099,9.485369,2.980097,-6.624942],[-9.452489,5.250855,5.714861,-2.906918,6.064928,8.395956],[-4.652528,8.345665,4.267212,-7.217527,-8.150815,-5.337840],[4.368698,-7.491173,2.145344,2.548302,-1.167526,-7.487028],[9.641487,-0.588054,-0.910613,-3.841264,0.324602,7.284675],[-9.355379,-8.547462,-2.175515,-0.363544,2.233427,-5.374755],[2.336713,-9.166984,9.300092,1.108331,6.400593,0.885189],[3.009243,-0.288286,-1.922706,7.627542,4.712508,3.291359],[3.405382,-4.639711,1.354583,0.495438,-3.333828,-5.797278]],[[-1.068361,-5.673023,-1.420541,2.653875,-9.075495,-0.380081],[6.924958,2.605664,-7.481508,-0.562283,-3.715567,-7.491707],[-3.351110,-8.920943,7.628266,-7.876793,-2.015799,9.326416],[-5.088412,-8.731850,-0.665860,9.059763,0.649356,-1.244661],[-6.527577,5.293715,9.797734,-7.189577,3.618380,4.865060],[7.055131,-4.806140,-7.966098,-1.710525,-0.162968,6.579056],[-0.168294,-4.513261,5.191281,7.849624,-2.720035,-8.235494],[-6.800718,7.561472,3.596882,-4.131067,-8.016833,-9.238380],[-2.257373,9.575245,-1.733475,3.310665,-9.716419,-1.097932],[-2.581581,6.057995,-0.914571,5.379178,-2.623202,-2.781511],[8.653772,-3.560460,8.705972,-2.564518,-4.626202,-8.456316],[6.413478,8.982275,3.696014,7.703197,1.266310,-5.574223],[3.614619,-9.182077,-7.616499,8.367872,2.102650,9.385576],[5.442092,-1.468409,-2.837960,-9.201604,-6.655928,6.955458],[9.880610,1.358988,7.681930,-8.373963,4.195360,-9.697736]],[[2.727579,6.146795,3.724160,5.023181,6.324387,-2.636453],[-6.470087,2.353883,-0.710734,-6.845942,1.630942,-9.323843],[-4.557689,9.019347,2.376948,5.237963,-9.899913,4.314680],[-5.822340,-3.136579,-6.261033,5.515153,5.926980,9.484225],[7.844012,2.017017,-1.661529,8.211346,-3.674328,-4.626195],[-0.474028,-6.749041,7.091058,-4.596403,-1.178003,6.853999],[-0.775154,7.053333,6.707168,8.258851,-6.138484,3.319179],[2.612895,1.193844,-8.349719,0.884011,-3.069814,8.927039],[-0.262946,7.596339,-5.825241,9.289250,4.036550,-3.286667],[-0.529813,6.430190,-0.689722,3.354861,7.321932,0.184315],[-3.665375,-5.797185,-1.678626,-5.670434,5.136613,5.026161],[-6.534912,-8.452995,4.680097,-8.536930,7.621926,-6.829345],[2.586772,3.075527,0.694577,-7.909611,3.265000,-3.832026],[-5.638853,-8.157769,-2.198098,2.086460,4.622506,-2.102530],[-3.694351,-8.526224,-5.194336,8.294304,-4.112640,-9.775254]]], dtype = "float32")#candidate|819|(3, 15, 6)|const|float32
var_820 = relay.var("var_820", dtype = "float32", shape = (3, 15, 6))#candidate|820|(3, 15, 6)|var|float32
bop_821 = relay.equal(const_819.astype('bool'), relay.reshape(var_820.astype('bool'), relay.shape_of(const_819))) # shape=(3, 15, 6)
output = relay.Tuple([bop_821,])
output2 = relay.Tuple([bop_821,])
func_826 = relay.Function([var_820,], output)
mod['func_826'] = func_826
mod = relay.transform.InferType()(mod)
var_827 = relay.var("var_827", dtype = "float32", shape = (3, 15, 6))#candidate|827|(3, 15, 6)|var|float32
output = func_826(var_827)
func_828 = relay.Function([var_827], output)
mutated_mod['func_828'] = func_828
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1592 = relay.var("var_1592", dtype = "uint32", shape = (10, 16, 15))#candidate|1592|(10, 16, 15)|var|uint32
var_1593 = relay.var("var_1593", dtype = "uint32", shape = (10, 16, 15))#candidate|1593|(10, 16, 15)|var|uint32
bop_1594 = relay.multiply(var_1592.astype('uint32'), relay.reshape(var_1593.astype('uint32'), relay.shape_of(var_1592))) # shape=(10, 16, 15)
output = bop_1594
output2 = bop_1594
func_1599 = relay.Function([var_1592,var_1593,], output)
mod['func_1599'] = func_1599
mod = relay.transform.InferType()(mod)
mutated_mod['func_1599'] = func_1599
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1599_call = mutated_mod.get_global_var('func_1599')
var_1601 = relay.var("var_1601", dtype = "uint32", shape = (10, 16, 15))#candidate|1601|(10, 16, 15)|var|uint32
var_1602 = relay.var("var_1602", dtype = "uint32", shape = (10, 16, 15))#candidate|1602|(10, 16, 15)|var|uint32
call_1600 = func_1599_call(var_1601,var_1602,)
output = call_1600
func_1603 = relay.Function([var_1601,var_1602,], output)
mutated_mod['func_1603'] = func_1603
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1620 = relay.var("var_1620", dtype = "float64", shape = (9, 15, 13))#candidate|1620|(9, 15, 13)|var|float64
uop_1621 = relay.sinh(var_1620.astype('float64')) # shape=(9, 15, 13)
output = uop_1621
output2 = uop_1621
func_1627 = relay.Function([var_1620,], output)
mod['func_1627'] = func_1627
mod = relay.transform.InferType()(mod)
mutated_mod['func_1627'] = func_1627
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1628 = relay.var("var_1628", dtype = "float64", shape = (9, 15, 13))#candidate|1628|(9, 15, 13)|var|float64
func_1627_call = mutated_mod.get_global_var('func_1627')
call_1629 = func_1627_call(var_1628)
output = call_1629
func_1630 = relay.Function([var_1628], output)
mutated_mod['func_1630'] = func_1630
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1710 = relay.var("var_1710", dtype = "float64", shape = (1, 5, 7))#candidate|1710|(1, 5, 7)|var|float64
uop_1711 = relay.log10(var_1710.astype('float64')) # shape=(1, 5, 7)
output = uop_1711
output2 = uop_1711
func_1715 = relay.Function([var_1710,], output)
mod['func_1715'] = func_1715
mod = relay.transform.InferType()(mod)
var_1716 = relay.var("var_1716", dtype = "float64", shape = (1, 5, 7))#candidate|1716|(1, 5, 7)|var|float64
output = func_1715(var_1716)
func_1717 = relay.Function([var_1716], output)
mutated_mod['func_1717'] = func_1717
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1951 = relay.var("var_1951", dtype = "float64", shape = (2, 8, 8))#candidate|1951|(2, 8, 8)|var|float64
var_1952 = relay.var("var_1952", dtype = "float64", shape = (2, 8, 8))#candidate|1952|(2, 8, 8)|var|float64
bop_1953 = relay.mod(var_1951.astype('float64'), relay.reshape(var_1952.astype('float64'), relay.shape_of(var_1951))) # shape=(2, 8, 8)
func_1627_call = mod.get_global_var('func_1627')
func_1630_call = mutated_mod.get_global_var('func_1630')
var_1963 = relay.var("var_1963", dtype = "float64", shape = (1755,))#candidate|1963|(1755,)|var|float64
call_1962 = func_1627_call(relay.reshape(var_1963.astype('float64'), [9, 15, 13]))
call_1964 = func_1627_call(relay.reshape(var_1963.astype('float64'), [9, 15, 13]))
uop_1983 = relay.exp(bop_1953.astype('float32')) # shape=(2, 8, 8)
bop_1994 = relay.logical_xor(uop_1983.astype('int16'), relay.reshape(var_1951.astype('int16'), relay.shape_of(uop_1983))) # shape=(2, 8, 8)
uop_2000 = relay.tan(bop_1953.astype('float64')) # shape=(2, 8, 8)
func_218_call = mod.get_global_var('func_218')
func_222_call = mutated_mod.get_global_var('func_222')
const_2003 = relay.const(-10, dtype = "int16")#candidate|2003|()|const|int16
const_2004 = relay.const([7,-6,7,-6,-5,-2,-1,7,-3,-2,5,9,-6,-7,-1,9,-8,-4,10,-1,5,3,-6,9,1,2,-9,-6,-10,-1,7,1,-6,-4,3,1,-7,-7,-5,6,10,-4,1,-3,-4,3,6,-9,-9,9,6,-1,6,-8,4,7,-4,-2,2,5,10,7,2,-8,-9,-2,-7,-8,2,-4,-1,-10,-3,-9,6,2,2,3,5,4,8,-9,-10,8,4,-8,-2,-2,-9,-9,-7,-4,-10,4,8,-9,5,-1,-4,8,-8,5,-5,4,-1,10,6,8,10,-3,-1,3,10,-2,-3,-2,-7,3,-7,-5,-2,6,-8,5,-8,6,-9,-7,5,3,2,-10,-4,10,-10,8,1,-1,8,-8,-4,-6,-5,2,-4,9,2,-4,2,8,8,-5,9,7,2,6,10,-9,-6,-9,7,6,-7,6,4,-3,-9,1,-6,7,-6,4,-6,-2,-5,3,-9,3,-7,9,-2,-6,-3,-1,7,-7,-3,-10,-3,1,3,1,-1,2,-3,1,-3,8,-4,-5,9,4,2,-8,6,4,-3,5,-9,-4,-8,-2,2,9,1,6,5,-1,-4,1,-10,3,-9,-7,-5,-5,-8,6,-8,-3,-8,-10,-1,-7,10,6,4,-5,-10,-3,5,-10,4,-10,-2,3,4,-2,-4,9,-8,6,-6,4,3,-3,-7,1,2,6,-8,1,-2,-8,-1,-2,6,2,9,10,-5,-2,7,-4,9,-2,-10,-3,-7,1,-10,8,1,7,-5,-3,1,3,-3,8,8,10,-4,-4], dtype = "int16")#candidate|2004|(294,)|const|int16
call_2002 = relay.TupleGetItem(func_218_call(relay.reshape(const_2003.astype('int16'), []), relay.reshape(const_2004.astype('int16'), [7, 6, 7]), ), 0)
call_2005 = relay.TupleGetItem(func_222_call(relay.reshape(const_2003.astype('int16'), []), relay.reshape(const_2004.astype('int16'), [7, 6, 7]), ), 0)
func_1715_call = mod.get_global_var('func_1715')
func_1717_call = mutated_mod.get_global_var('func_1717')
var_2013 = relay.var("var_2013", dtype = "float64", shape = (35, 1))#candidate|2013|(35, 1)|var|float64
call_2012 = func_1715_call(relay.reshape(var_2013.astype('float64'), [1, 5, 7]))
call_2014 = func_1715_call(relay.reshape(var_2013.astype('float64'), [1, 5, 7]))
uop_2016 = relay.erf(bop_1994.astype('float64')) # shape=(2, 8, 8)
uop_2018 = relay.acos(uop_2016.astype('float64')) # shape=(2, 8, 8)
output = relay.Tuple([call_1962,var_1963,uop_2000,call_2002,const_2003,const_2004,call_2012,var_2013,uop_2018,])
output2 = relay.Tuple([call_1964,var_1963,uop_2000,call_2005,const_2003,const_2004,call_2014,var_2013,uop_2018,])
func_2022 = relay.Function([var_1951,var_1952,var_1963,var_2013,], output)
mod['func_2022'] = func_2022
mod = relay.transform.InferType()(mod)
mutated_mod['func_2022'] = func_2022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2022_call = mutated_mod.get_global_var('func_2022')
var_2024 = relay.var("var_2024", dtype = "float64", shape = (2, 8, 8))#candidate|2024|(2, 8, 8)|var|float64
var_2025 = relay.var("var_2025", dtype = "float64", shape = (2, 8, 8))#candidate|2025|(2, 8, 8)|var|float64
var_2026 = relay.var("var_2026", dtype = "float64", shape = (1755,))#candidate|2026|(1755,)|var|float64
var_2027 = relay.var("var_2027", dtype = "float64", shape = (35, 1))#candidate|2027|(35, 1)|var|float64
call_2023 = func_2022_call(var_2024,var_2025,var_2026,var_2027,)
output = call_2023
func_2028 = relay.Function([var_2024,var_2025,var_2026,var_2027,], output)
mutated_mod['func_2028'] = func_2028
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2351 = relay.var("var_2351", dtype = "int8", shape = ())#candidate|2351|()|var|int8
const_2352 = relay.const([[[-8],[10],[-1],[-2],[-10]],[[4],[-6],[1],[-6],[-10]],[[6],[-4],[4],[-7],[9]],[[-10],[3],[3],[-1],[-4]],[[-9],[6],[5],[-9],[-6]],[[7],[-1],[-7],[8],[-7]],[[-2],[-4],[-1],[8],[-5]]], dtype = "int8")#candidate|2352|(7, 5, 1)|const|int8
bop_2353 = relay.bitwise_or(var_2351.astype('int8'), const_2352.astype('int8')) # shape=(7, 5, 1)
output = relay.Tuple([bop_2353,])
output2 = relay.Tuple([bop_2353,])
func_2369 = relay.Function([var_2351,], output)
mod['func_2369'] = func_2369
mod = relay.transform.InferType()(mod)
mutated_mod['func_2369'] = func_2369
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2370 = relay.var("var_2370", dtype = "int8", shape = ())#candidate|2370|()|var|int8
func_2369_call = mutated_mod.get_global_var('func_2369')
call_2371 = func_2369_call(var_2370)
output = call_2371
func_2372 = relay.Function([var_2370], output)
mutated_mod['func_2372'] = func_2372
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2489 = relay.var("var_2489", dtype = "float32", shape = (9, 10, 13))#candidate|2489|(9, 10, 13)|var|float32
const_2490 = relay.const([[[0.649543,-0.158839,6.768568,-1.779350,-1.871355,-7.242254,2.866255,6.212228,8.350987,3.171430,-7.178115,-7.277265,8.313736],[2.219506,-9.077015,-6.616285,-1.243523,-5.011430,-5.859816,-9.778524,6.206059,7.784900,-4.546263,-8.649468,-3.551088,7.702905],[-1.903254,9.128674,6.674318,4.553762,0.695737,-0.286771,-6.664230,-6.536273,2.213798,-9.360501,1.870561,-2.211685,-2.861064],[8.108051,-0.968341,6.071690,8.463675,-0.535943,6.106931,-0.414662,0.253407,-5.791388,9.498791,3.579144,-1.986370,2.305661],[4.877493,3.364035,-1.551145,-5.142272,9.666965,-3.543724,0.790116,6.641140,-3.812773,9.859040,-7.983578,2.098938,-0.612193],[0.298015,-4.837067,-3.060525,-5.086198,4.986415,1.778446,6.337359,0.441605,2.389111,6.894714,6.289683,-3.199817,3.990283],[3.671622,7.616214,9.261006,-7.851405,8.728072,0.920479,-8.229271,2.167642,2.470453,-9.693476,-2.028429,7.810252,-9.298706],[0.320280,5.298510,-3.510892,1.174253,4.083176,-9.801990,6.556227,-2.888095,4.528224,5.340627,-2.466776,7.272340,-0.383347],[-9.200206,8.160415,-0.730557,-9.585703,-2.089615,-2.894504,-5.849691,-6.341739,3.909896,-5.859481,7.992290,-7.304406,-6.519646],[9.624567,0.763268,6.959183,8.171211,8.381421,6.883816,2.488736,-5.295032,-4.590285,1.108542,4.383526,-7.906369,1.394900]],[[0.939609,-1.848359,-7.597990,7.601213,5.654150,-9.577337,-4.294442,3.658999,3.650112,8.478930,-2.422168,-2.952072,-7.275815],[0.179347,2.317285,-9.775489,-2.657156,5.616941,-8.680559,7.573967,3.651689,-0.159264,3.978796,-8.115171,5.817177,-5.621886],[8.262512,5.337922,-7.163328,-8.181452,6.790045,-0.376911,0.709260,0.830626,-5.054654,-1.741874,-2.968846,9.115243,-1.761034],[-7.695877,4.549580,0.731565,5.274616,7.656358,9.380516,9.233980,-1.461158,2.987653,7.298267,-4.248726,8.517348,-5.401274],[8.519114,4.767713,4.818332,9.328522,-1.924593,1.670035,-7.052885,0.521279,-2.450511,-4.171825,-3.370358,-2.338714,-0.919845],[5.018368,3.822019,8.411494,-1.943672,-8.659370,-7.537714,-7.143919,8.996282,-8.529005,-5.712925,3.823396,2.937535,-7.106524],[0.249611,8.336535,5.601119,4.175076,-3.494185,4.167262,2.796998,-4.906716,-1.740314,-6.537746,-1.000144,8.107091,-7.624017],[2.686111,-8.163412,0.086323,1.265581,-7.473399,-3.330664,2.574350,-6.160097,2.281516,4.138934,-6.227503,-8.861619,2.236109],[3.557687,-6.807627,0.108182,9.186117,1.528326,-0.156271,-2.744280,3.841048,-7.829722,0.316403,1.475288,5.206078,2.700825],[-8.391983,-3.872885,-6.546327,-0.629154,-4.163738,0.210078,-2.541273,-9.524516,4.101097,3.636284,6.010362,9.449429,-4.090987]],[[3.970975,2.995455,9.953456,9.251404,9.413198,-9.881474,-2.243729,-1.396924,-8.351071,-4.503895,4.688031,5.481985,-4.414936],[-3.835613,-5.916024,-4.227452,-8.599597,-8.623569,-9.584130,-5.630304,5.488316,7.317380,9.719145,7.045120,-2.189158,-6.445230],[2.524336,-0.819879,4.405467,-3.406706,-6.056745,6.542967,-5.592103,-3.973399,3.021814,7.385418,6.575602,-4.038763,-8.967575],[2.499861,5.937595,-5.510634,9.870125,-7.128455,6.402460,-3.996439,-0.569192,8.775602,7.264531,2.932226,-7.119280,-7.171709],[5.333064,-3.318894,-3.354323,0.278625,3.077227,4.805145,-5.217401,3.953491,-2.808838,7.717881,-8.096868,8.682023,8.317866],[-5.142213,2.782430,5.933538,-1.073803,-7.298370,2.294545,-1.298948,1.147271,-7.541431,-1.235179,-2.761874,1.711489,4.254501],[-1.533982,-1.266628,1.925183,5.292910,8.820141,4.147231,-9.962116,-4.076751,5.072873,-7.158704,-5.464317,5.059328,3.154364],[9.724147,0.117101,-7.712297,-6.923642,1.872742,0.322860,-3.786935,-3.754213,-6.557434,-4.175112,-3.040051,-8.983075,-3.219307],[9.666499,6.394896,7.036029,-1.374746,1.393943,-5.175198,3.125458,2.553175,-0.021149,4.752655,2.653559,5.009255,-3.651312],[-5.004424,2.631947,-8.199353,-7.076675,5.208186,-9.232360,-9.064922,-4.261190,7.204127,1.561339,-8.061104,8.170687,-4.481902]],[[-9.003011,-1.790104,4.053540,4.450211,9.272455,-5.569772,1.200820,-2.214095,3.340844,3.415950,0.509672,2.554632,2.260622],[4.509586,4.836668,8.134684,3.885576,-9.923861,-0.463803,8.136669,4.548601,7.699594,0.068978,0.335274,2.214792,-2.607499],[4.875412,7.029318,-9.772366,7.550161,-9.563684,9.009634,-8.342743,-2.020095,6.796818,0.591800,2.388423,3.220514,-6.481279],[2.810425,4.661800,-3.152796,4.522806,9.185800,-7.403223,6.714431,0.452473,5.845288,9.118817,5.626258,0.051695,8.992879],[8.727527,-1.306610,0.318154,0.755987,0.798480,-7.898413,7.474968,-5.739186,-5.743460,-5.359914,-7.463622,-6.733916,-5.220420],[-1.626019,-9.240888,-9.156996,-9.379103,7.191925,0.853277,-8.186812,-7.235265,6.411257,-7.031043,-0.017949,-6.555687,5.165351],[-1.168225,-8.528716,6.070216,-2.245173,-2.700416,4.618334,0.653797,6.100939,-0.335428,-6.993407,-8.899059,-9.718962,5.302620],[6.384953,-7.662041,0.801759,-5.583216,7.314045,-3.622071,3.792156,-4.158367,-6.517473,3.234140,-1.975595,8.980278,3.072376],[0.900641,1.142924,-3.458213,-8.361091,1.516814,8.484557,7.617720,3.734439,-0.129143,-7.501457,7.322325,8.448058,-5.937006],[-8.102083,-0.977191,1.736900,-7.781219,-5.652502,-5.071464,3.309457,-4.563346,5.630828,7.223619,-0.167717,-7.393602,-8.296855]],[[5.292777,-3.205943,-9.972146,5.484510,-1.407471,-2.053376,7.541160,3.103704,2.761303,2.851037,5.074950,9.881261,4.864980],[2.909838,-8.039804,-5.037522,1.322513,-2.293298,1.678957,-8.250636,-8.295293,-4.907112,6.601196,5.443937,-4.839462,4.607341],[-9.006808,-4.560932,-8.454807,5.993578,-4.002160,-8.141614,-5.596135,5.571938,-9.790256,-9.163244,-5.688457,1.359558,-7.294270],[-5.749965,3.909432,3.435255,-8.149903,-9.587012,3.111510,0.389568,0.266945,1.964966,-1.561087,0.521972,-1.779349,-4.054247],[1.875578,-7.359852,-8.127933,-5.158060,-2.667255,6.080928,-0.553979,8.679151,5.914032,6.057156,-2.442379,6.256507,3.383979],[-5.068944,-4.395007,-4.607767,-3.850105,9.417919,7.333006,-5.630163,4.651281,-2.457115,7.548489,7.101999,-6.682163,8.516020],[1.990566,-8.911383,-0.956501,-6.231892,5.887804,-3.318897,-9.100152,-1.132883,9.206703,4.583004,6.479290,-6.416613,-2.372028],[4.293561,-0.101688,1.549611,8.282766,-5.227260,-6.625256,-9.214789,1.774873,5.584280,6.126070,7.983478,2.310719,2.549343],[-7.984926,1.948574,-6.742895,-1.399812,-5.975349,-1.279084,4.973436,0.857324,-8.961585,6.686328,-7.457382,6.369955,-3.519975],[-4.991710,1.089049,-9.043796,-8.420410,-4.688879,9.324957,1.146578,0.826153,5.195893,5.449701,-3.103628,8.481376,3.713012]],[[4.829907,6.434950,-7.763705,5.511684,8.154264,7.718351,1.820651,-6.314996,-8.011659,-9.827313,-4.221691,-5.930308,-3.361814],[8.458943,-3.357557,2.949318,1.087837,-0.497231,8.525363,5.163269,5.840612,-4.437400,9.613287,4.436226,-4.992116,0.079800],[-5.055735,-9.243386,-4.283683,-1.897685,0.048332,-5.641570,-4.505816,-0.252392,-4.268390,-6.247537,-9.160482,9.019469,-7.902177],[-3.991093,-1.793005,3.176141,4.734886,-6.129301,2.953959,3.273901,-1.421809,3.637701,-4.442079,-3.847060,1.614463,-0.959267],[8.010088,6.087295,6.960690,2.552643,7.577181,-7.299878,-6.266113,1.966991,9.634621,-9.897346,-7.908792,-4.134037,3.425827],[-3.846583,9.078222,2.966804,-7.420308,-8.097973,-2.620475,6.730623,-3.900148,-1.121916,-4.603992,-2.557356,-2.281612,-4.967765],[-2.710591,5.559556,9.650082,4.287260,7.157345,-0.488374,8.821588,8.334345,-2.672680,-9.345963,-1.951456,4.459582,-9.675821],[-6.568840,0.869485,1.643069,1.926802,5.140767,-6.597651,2.424703,4.021310,6.589373,7.865406,-5.310837,-7.142194,-7.206050],[-9.653611,3.473131,-9.819431,2.535733,-1.220195,2.371553,-0.401426,3.211262,0.505135,-3.708223,-8.799081,-5.030467,-1.468822],[7.473111,1.740113,0.635583,4.030857,-4.173034,-1.628237,5.024222,-6.002643,-3.226046,-9.306142,-8.010142,-0.813185,-0.187537]],[[-4.541688,-6.118512,-5.046955,5.834707,-9.522779,2.685087,-6.784983,6.174959,5.927171,9.951377,2.335777,-6.489325,4.595340],[-0.370770,2.647171,-0.972899,6.090032,-9.423154,-3.389667,8.752637,-5.254585,9.374846,-1.734635,4.613930,8.807754,0.336101],[-3.998886,-8.792612,-6.998409,-1.557502,-1.163019,-5.791114,3.780972,1.665250,-8.550490,-3.257119,2.192301,0.687528,-9.209215],[9.224841,-4.747716,4.478734,2.223206,-5.198615,-8.554371,8.365436,-6.376665,-8.538998,9.625184,8.762835,-4.102498,-4.388157],[0.733407,6.091682,5.329203,-0.555064,7.003314,-6.834041,7.308837,0.537646,6.260115,-2.423806,-2.315260,-4.776167,-7.963278],[3.434398,0.124195,-1.743296,-4.472043,5.952167,9.208081,9.350345,3.115719,2.570182,-7.673528,-5.441983,9.439478,3.700300],[2.500685,7.893692,-7.101253,-3.813956,2.292564,-2.541043,-0.052443,0.177299,1.857866,-7.682459,-0.641307,-8.284550,-5.494053],[2.570492,4.142121,0.293689,-2.981874,5.244926,-0.163429,-1.313831,-3.940569,5.747417,-2.164070,-6.254899,0.565927,-9.547515],[-8.974082,-9.785003,3.007113,9.446267,8.559682,4.968053,0.204011,-5.898736,-9.909322,0.789772,7.041815,4.355668,5.328486],[-2.787179,4.569996,1.969345,3.521923,-6.840287,4.322534,5.980285,0.561750,-0.473615,5.129683,-9.367898,4.459630,8.562243]],[[-2.069546,4.366875,-1.607546,-9.905700,-7.328627,-9.674925,3.239882,5.065924,-7.358848,3.579995,0.466807,-5.181466,-5.028986],[3.429806,8.235939,9.859606,7.232099,4.928412,-3.363439,4.921043,2.394293,-6.142349,1.064035,5.059839,-0.884692,5.527452],[-4.810766,9.869162,-1.910817,0.662820,3.388700,2.797804,7.712375,-8.586544,-6.984778,-1.829976,4.437200,-8.485610,-7.258812],[-7.290668,4.653729,4.090753,-2.956165,-2.353776,0.536957,-7.168473,-9.247646,5.789523,-4.272260,2.240273,-8.182918,3.768313],[-5.106773,-0.124951,3.034849,-5.433354,-1.478157,0.769199,-9.999706,0.840054,0.413030,-0.621721,7.195388,2.449182,4.212756],[-8.503248,-4.388931,-3.344424,0.542919,-1.784035,9.763979,3.381752,-5.155613,-2.968706,2.663356,-4.522869,2.571857,-6.486872],[-9.590041,7.852560,4.105244,3.255035,6.327889,-0.614029,-3.787232,8.547660,7.500771,9.309523,5.835416,-9.393966,0.064039],[8.344496,6.395394,7.554505,0.038757,-4.256330,-5.925321,3.116660,4.091539,9.434792,-6.531156,8.940677,6.111113,4.807088],[3.706133,2.830081,-2.993062,4.862242,8.240878,1.430480,7.393721,5.398957,-4.361781,1.278549,-3.860438,9.944928,-1.861289],[9.264202,-4.578862,-7.940656,-8.671595,-4.130091,9.180930,8.620795,1.274576,8.256883,-2.693449,-9.595064,0.481906,-0.089157]],[[-9.230828,-6.948969,-5.740693,1.320495,-5.276059,-5.347192,2.049599,5.041660,3.154431,6.702252,-9.253990,0.749523,4.258938],[5.735539,-6.404136,3.160304,0.735178,3.758525,3.115262,-5.661424,-1.020356,-4.631192,-9.417680,-1.461256,-2.373658,-9.867377],[7.955115,0.848499,6.599235,2.514785,-0.219638,9.019682,1.855699,-9.544197,5.572857,-7.070464,4.335177,4.095120,2.452375],[4.360855,-6.478549,-4.751096,-5.059375,-0.565230,-5.193348,9.722140,-8.671112,-9.317871,7.670854,-3.842519,-4.920292,-4.977824],[-2.541137,5.917937,-9.216456,8.435866,-4.431480,-3.386786,-8.437271,-8.465413,-7.293885,5.062063,-1.467720,-3.333190,-4.833411],[-6.125289,-1.658458,1.199803,1.425928,-1.907103,4.639816,-5.063681,9.537859,-3.551819,0.328683,-3.192047,-1.905645,8.249228],[4.376932,-9.422248,-5.801769,-4.056883,-5.797815,0.117107,-8.157057,5.689010,-8.380707,7.126185,-7.146490,4.846162,3.613563],[2.511168,0.218446,-9.438146,9.931716,8.166349,-8.281704,-9.525966,9.072109,-8.853271,3.409120,5.141063,3.580626,2.311131],[6.653221,4.083232,-7.436885,-7.704946,4.737905,-7.043264,-7.546617,4.019080,-2.951160,6.643186,6.787806,5.537782,1.459722],[-3.119969,-1.104941,-5.873821,-7.715537,-4.097574,-8.497130,9.043803,3.257357,-8.206824,1.850465,-8.833414,7.882637,7.350837]]], dtype = "float32")#candidate|2490|(9, 10, 13)|const|float32
bop_2491 = relay.divide(var_2489.astype('float32'), relay.reshape(const_2490.astype('float32'), relay.shape_of(var_2489))) # shape=(9, 10, 13)
func_2369_call = mod.get_global_var('func_2369')
func_2372_call = mutated_mod.get_global_var('func_2372')
var_2502 = relay.var("var_2502", dtype = "int8", shape = ())#candidate|2502|()|var|int8
call_2501 = relay.TupleGetItem(func_2369_call(relay.reshape(var_2502.astype('int8'), [])), 0)
call_2503 = relay.TupleGetItem(func_2372_call(relay.reshape(var_2502.astype('int8'), [])), 0)
output = relay.Tuple([bop_2491,call_2501,var_2502,])
output2 = relay.Tuple([bop_2491,call_2503,var_2502,])
func_2508 = relay.Function([var_2489,var_2502,], output)
mod['func_2508'] = func_2508
mod = relay.transform.InferType()(mod)
mutated_mod['func_2508'] = func_2508
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2508_call = mutated_mod.get_global_var('func_2508')
var_2510 = relay.var("var_2510", dtype = "float32", shape = (9, 10, 13))#candidate|2510|(9, 10, 13)|var|float32
var_2511 = relay.var("var_2511", dtype = "int8", shape = ())#candidate|2511|()|var|int8
call_2509 = func_2508_call(var_2510,var_2511,)
output = call_2509
func_2512 = relay.Function([var_2510,var_2511,], output)
mutated_mod['func_2512'] = func_2512
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2629 = relay.var("var_2629", dtype = "float64", shape = (2, 15, 7))#candidate|2629|(2, 15, 7)|var|float64
var_2630 = relay.var("var_2630", dtype = "float64", shape = (2, 15, 7))#candidate|2630|(2, 15, 7)|var|float64
bop_2631 = relay.floor_divide(var_2629.astype('float64'), relay.reshape(var_2630.astype('float64'), relay.shape_of(var_2629))) # shape=(2, 15, 7)
func_2022_call = mod.get_global_var('func_2022')
func_2028_call = mutated_mod.get_global_var('func_2028')
const_2636 = relay.const([6.127380,1.309830,9.609441,-0.755872,-0.971092,-9.951521,-6.602507,0.061520,4.046317,-6.931150,5.380009,-8.668326,-3.626765,4.578798,2.296071,-6.588796,9.573591,-9.623557,-2.026918,-3.971450,-3.916264,-3.985877,-0.791626,-7.607144,8.075470,-7.137257,0.388444,-1.114995,-6.416528,6.021648,0.897461,-2.117766,3.185029,8.789612,-2.930116,-6.277220,-6.263970,6.353846,5.665391,-1.936589,-6.330406,1.009814,1.796017,8.882818,8.058638,2.985052,7.949190,4.687810,-9.954330,-7.281626,-3.283978,-9.183528,4.553940,-7.507344,6.094435,4.553920,0.564214,2.196928,-7.802589,-8.018186,-5.718860,0.222042,-6.544721,-4.721036,8.508835,9.652782,-4.710222,0.114472,7.428191,-6.943236,-4.119367,0.945346,-2.649338,8.346427,6.466976,4.391199,1.586586,2.999193,7.089152,4.378152,-2.907925,1.356714,-8.854083,-6.356064,-8.730618,-8.321095,-0.642052,-4.294040,9.558159,-3.693644,-2.371053,-8.552930,-2.979844,4.938086,6.448715,-9.013427,9.181155,-5.718681,-0.160990,2.841680,4.140229,-6.015216,6.078813,3.360800,-5.274168,-1.043824,5.992626,-5.539666,-9.656444,9.511714,-6.262062,-3.707736,7.539060,1.276654,2.507303,-6.645094,5.154168,8.997002,-4.646082,4.803280,-1.194120,4.183092,-6.568881,1.962581,8.856376,-1.015448,-1.995628,8.790388], dtype = "float64")#candidate|2636|(128,)|const|float64
var_2637 = relay.var("var_2637", dtype = "float64", shape = (1755,))#candidate|2637|(1755,)|var|float64
var_2638 = relay.var("var_2638", dtype = "float64", shape = (35,))#candidate|2638|(35,)|var|float64
call_2635 = relay.TupleGetItem(func_2022_call(relay.reshape(const_2636.astype('float64'), [2, 8, 8]), relay.reshape(const_2636.astype('float64'), [2, 8, 8]), relay.reshape(var_2637.astype('float64'), [1755,]), relay.reshape(var_2638.astype('float64'), [35, 1]), ), 5)
call_2639 = relay.TupleGetItem(func_2028_call(relay.reshape(const_2636.astype('float64'), [2, 8, 8]), relay.reshape(const_2636.astype('float64'), [2, 8, 8]), relay.reshape(var_2637.astype('float64'), [1755,]), relay.reshape(var_2638.astype('float64'), [35, 1]), ), 5)
bop_2648 = relay.maximum(var_2629.astype('uint64'), relay.reshape(var_2630.astype('uint64'), relay.shape_of(var_2629))) # shape=(2, 15, 7)
const_2674 = relay.const([1,-10,-3,5,-9,9,-8,-3,4,-9,3,-1,-8,3,4,-1,-3,1,-8,-9,7,1,1,-8,-5,-3,2,-9,9,-10,-7,10,-3,-7,-9,-8,-8,-2,2,-3,-8,5,10,-10,8,-2,2,7,2,6,4,-8,2,9,-9,-1,9,-6,-2,6,8,-4,-9,-4,7,-2,4,3,-1,10,-7,8,-8,4,3,-9,9,9,-4,-9,-5,-4,-3,4,1,4,8,-5,6,-6,1,-10,-9,-8,-4,-4,8,-7,-4,4,9,-7,-10,3,4,-7,-7,7,7,-6,2,1,5,2,-1,7,4,8,6,2,-1,7,7,3,-9,7,9,3,6,-5,10,10,8,8,7,6,-10,-7,6,2,-1,7,7,-3,-5,-3,-4,9,-8,6,10,7,-2,8,6,-3,9,6,2,-10,-10,2,-5,-6,9,-2,1,-8,6,2,5,9,-7,-1,-4,6,5,10,8,-5,-7,5,-6,2,8,-4,-1,-7,7,1,-1,7,-6,6,-2,-2,-9,8,9,-7,-6,-2,-5,-9,-8,-6,-7,5,-10,9,5,3,-10,7,-1,-8,7,-7,-8,-7,-7,7,5,-1,-4,-9,2,3,4,-3,6,3,-1,8,-9,6,-7,1,-5,-9,3,-10,-3,-8,2,-2,-3,6,7,3,-8,-3,-2,-8,-9,7,-6,-8,1,6,5,4,4,2,-3,-9,-4,7,-7,2,-4,9,-10,-1,-10,4,2,5,-7,7,-10,2,-9,9,-6,3,1,-1,8,2,6,7,-4,-6], dtype = "int16")#candidate|2674|(294,)|const|int16
bop_2675 = relay.equal(call_2635.astype('bool'), relay.reshape(const_2674.astype('bool'), relay.shape_of(call_2635))) # shape=(294,)
bop_2678 = relay.equal(call_2639.astype('bool'), relay.reshape(const_2674.astype('bool'), relay.shape_of(call_2639))) # shape=(294,)
func_379_call = mod.get_global_var('func_379')
func_382_call = mutated_mod.get_global_var('func_382')
const_2680 = relay.const([-8.994110,7.337571,-4.149123,-9.411448,9.469055,2.918050,8.908877,1.817408,2.827737,-8.803090,2.445587,1.544348,9.133503,-5.677696,-6.929616,-4.686133,0.189346,9.126383,8.990334,2.452591,-5.548129,-6.621943,-5.028826,0.134673,5.587905,9.257143,-4.892777,9.221358,-5.050874,9.492539,4.158523,-2.208078,5.244274,-8.499175,6.958777,-8.313181,-4.378015,-0.250436,-7.430847,-2.713486,2.807745,5.334542,-7.815680,4.038105,-2.578573,8.716019,8.585592,-7.130229,-6.542905,2.109951,2.844814,9.599925,-9.865497,-1.355404,0.340634,-6.351190,-9.567946,-2.975703,4.646909,-6.514190,-2.933631,6.030678,1.044683,8.728955,-3.272270,0.598089,-2.902316,5.375838,-1.850125,0.872923,-7.156002,-3.693758,3.940287,3.323663,7.223178,9.437138,-0.008167,3.226483,-5.382685,8.112728,0.600391,-9.727300,9.884870,-3.019715,-8.627529,0.142542,4.397614,6.817663,-8.231490,2.894353,-0.560875,-5.826943,5.250182,-3.649125,-0.952798,-5.789939,8.266653,2.262684,-1.383080,-4.629851,7.350276,8.678859,-9.370859,-6.240431,-2.107111,-9.283115,-7.695479,4.173039,-0.203548,7.861187,4.951974,-3.081948,4.423769,1.557911,4.110674,-7.396338,7.499853,3.985194,-0.493378,-6.487307,-0.660429,-2.696931,7.416814,-4.849589,3.529277,-6.849314,-9.187026,0.088251,-4.005513,7.350998,7.651543,5.630065,-2.681354,-3.096262,-8.252136,4.147564,7.656959,5.346859,9.521173,-4.861235,9.655680,6.020031,6.530889,4.978331,0.725051,5.514997,-9.015851,3.291858,7.062685,-6.319653,-1.140981,-8.043019,6.824517,9.486114,-2.275689,1.897056,-8.465860,0.540605,-2.129616,-5.899435,5.437757,-9.336015,-2.086392,-7.889918,6.484532,9.775062,-5.941238,7.828946,0.853322,-8.573204,-0.835847,1.581636,-1.405765,-5.321593,-6.776827,-3.719924,-6.327791,1.813013,-5.063818,-5.893589,-0.167262,-3.619867,-3.746952,-4.666079,-3.391866,1.583642,1.597675,4.690827,5.261454,-0.464078,-8.970163,0.245177,4.385693,0.513215,0.123031,8.210836,3.883160,-1.849125,8.544145,4.211271,-9.858047,-6.203598,-4.818711,1.049112,5.807532,8.237093,8.576065,-7.458546,9.666068,-5.739161,5.493491,3.258768,2.122327,-5.601841,-0.963715,-9.516787,-9.561503,-6.109094,0.934117,-4.128582,9.864644,-1.980219,2.411782,9.215080,4.375028,3.288376,9.862393,7.805038,-1.273099,4.727214,-4.443456,2.601296,-6.579673,0.318216,-8.676023,-5.507262,3.698786,-7.233053,8.184473,2.043939,4.403359,-5.719687,5.758323,-6.208795,9.917929,2.845366,0.084587,5.451418,-9.690885,0.319380,-2.955160,3.354647,2.709469,-0.232263,6.670415,7.809126,-6.169058,-5.839107,2.942407,-9.898911,-5.067194,-9.248535,-0.800820,-6.018126,-7.870111,7.537803,8.876568,-0.992776,-5.768506,-3.697340,1.369899,7.457221,9.029525,1.750838,-3.196084,2.634347,7.194281,-5.927505,5.376029,1.040130,5.616537,7.608811,6.670877,4.923192,-3.055981,7.031691,6.701510,-8.071531,-2.515025,0.100905,3.469144,-4.383165,4.061593,-9.255286,3.871389,-1.427156,7.906405,8.476843,-7.204053,-6.948956,-2.433139,-0.754858,-2.627783,-6.937915,-2.989711,4.221976,1.615718,5.096812,5.806064,9.187354,7.023981,0.096454,0.411497,4.627689,4.274386,9.117456,1.710120,9.148937,-1.984749,3.992365,9.325330,-8.398939,-3.542903,2.095058,6.721961,-3.556204,3.679998,9.486546,-4.269164,-5.476601,1.687431,-4.316236,0.921403,-9.170930,2.106040,-5.405273,3.742678,7.003514,-7.274541,5.070552,-0.932029,-2.425147,7.756937,-2.701468,-2.758674,3.563812,-6.441007,6.006017,9.715890,2.369021,4.357507,6.513628,-3.033515,-4.541802,-8.152757,8.117909,0.107916,-6.258191,5.898830,-2.501658,2.408561,1.419657,5.586593,4.892660,3.086331,-6.992714,-6.866301,9.205230,-2.705156,-3.192411,9.383583,5.735509,4.229302,6.396767,4.884387,9.464315,9.062653,-4.910795,3.741833,8.260200,6.090710,6.664351,7.887407,-3.576112,-4.098028,-2.647826,-2.059095,-5.817052,2.262983,4.309724,0.659898,9.103372,5.590579,-1.262015,6.947893,9.202980,4.540621,4.035361,2.166613,-2.617216,-2.170315,0.121582,3.419272,-6.755350,9.510064,1.540375,-2.371126,2.012669,-2.354254,-8.547707,9.241220,-5.835383,-7.713361,-5.256030,-2.128859,3.229941,8.506256,6.222980,-2.634338,-0.465762,1.770148,5.777362,-8.770658,-4.737297,-3.948693,6.025392,-8.845937,-8.169829,8.431435,3.588971,4.491717,-2.668524,6.455467,7.733767,8.343774,-1.925329,6.601309,7.649319,-5.432694,3.053079,-7.892801,1.135328,-8.995242,-9.448697,-1.760722,8.184437,-7.759164,-7.272697,-3.208911,-8.550274,8.649103,-4.508177,-8.686383,4.342559,8.150740,1.678313,9.810867,8.282724,-6.748817,4.958075,3.990656,-1.963700,-0.576531,2.606972,9.474160,-4.787762,-7.237065,6.037078,-9.364489,-5.742275,1.920209,-9.792025,-8.276977,4.917153,4.705843,7.899713,8.448813,-5.466738,-0.992679,-3.374966,6.691476,9.494395,-2.439452,-4.663453,2.518216,-4.879924,-4.614564,4.292441,-6.533629,4.257723,9.690897,-6.763260,1.410246,-9.473906,0.045728,4.915675,4.203194,-2.314435,7.960113,1.006267,6.422678,-9.640185,-7.517382,-8.704494,-6.636682,-3.891365,-4.272463,-4.005062,7.077450,-0.328903,-0.882652,-4.438469,-4.686112,1.449500,9.685387,-3.643506,-5.790393,0.751155,-0.172768,-7.439236,8.633129,-9.482658,6.180061,8.261113,1.977882,5.712179,8.649615,2.739952,3.918145,-0.024059,9.749723,5.759795,5.143080,-9.014183,7.079587,-3.747128,3.345205,-2.088514,3.344208,-1.818072,6.161207,-6.260942,6.787557,-7.717454,-1.328221,0.166119,2.660406,-7.021333,0.505330,-6.221240,2.068183,-8.349756,8.342506,0.269624,-5.928843,2.272601,-2.801387,1.877253,-2.735597,-6.225425,-1.619664,-4.326312,-0.891907,-5.549262,-9.860584,-5.042726,2.186554,-9.669616,-6.772010,6.645248,1.244213,-0.807963,2.226360,8.600480,-0.160571,-1.292812,-5.585790,-0.415865,2.344619,-5.806914,-6.809130,1.667328,7.659092,-1.813474,-7.622922,0.848745,7.695027,6.403979,4.076146,-8.800360,-1.331692,-2.421819,6.417184,0.551892,9.679377,-1.409272,0.082098,0.514889,-8.263277,-1.204575,1.025766,-8.591057,8.025003,0.740560,1.817485,-5.778756,2.538327,-5.976891,-9.889333,4.024410,0.189835,5.481797,-4.429770,-3.847642,-5.488200,9.887704,-2.654322,-1.439160,9.959865,-1.005410,9.343435,-7.440511,5.923039,-7.285260,-7.153257,4.181730,9.643182,-9.926118,6.131166,-2.775257,0.631753,2.506929,-1.502680,-9.813031,-0.084036,-4.095182,7.863003,-9.449846,1.742466,-9.979959,-5.054395,6.685447,-6.625262,3.139741,-7.977547,-8.533031,5.830991,1.345111,9.450617,7.186786,-7.393575,-2.079433,-5.723523,-6.091061,6.893071,-3.467139,-8.622186,2.424323,1.141938,-1.623871,4.426451,-3.535864,3.912531,-1.057094,4.242852,-0.210271,8.769773,6.653925,6.242222,9.034871,9.823439,-0.506330,3.565657,-3.682393,7.681416,2.265275,8.132502,6.287164,7.882813,-5.720424,-7.441793,8.264167,1.405449,9.496245,-1.758459,1.107215,-6.633332,-8.003757,2.959778,2.594009,3.348152,1.141712,-9.606804,1.397416,-3.823598,-5.298394,-8.257501,-0.230175,-3.800627,-6.579414,-5.906413,-5.993054,-4.051822,6.786716,-8.678449,-6.196712,6.403857,-2.934552,-4.013480,5.647293,2.310624,7.567009,2.989760,5.616858,-5.762059,5.070481,9.436460,2.933600,-6.108529,-4.157391,3.577921,-7.231491,-0.119859,-8.265328,4.578682,-9.465911,0.339478,-1.063007,4.098758,5.615050,-4.487978,4.163359,-3.303533,5.627906,2.707468,5.540034,-6.030074,9.115691,5.537895,7.501130,6.566965,2.119140,-8.510331,-9.199217,-7.952983,1.201697,-6.093386,-8.354920,0.971536,0.747897,8.089392,-9.689946,-7.045819,8.486074,4.833938,-3.126701,-2.749980,-2.098575,-7.946307,-3.745580,-1.687891,8.140537,-6.495208,6.854653,9.112481,-6.508231,-8.455638,-1.068505,-5.360810,-4.676927,-9.687624,9.072580,-9.543844,5.077727,-0.509085,0.625516,2.785190,8.854560,9.427508,-7.517920,8.225734,6.416734,9.586298,-4.011825,4.683542,0.190375,-5.771689,-1.705063,-3.908057,1.426034,-7.885425,5.623823,0.825832,1.309378,-8.996888,6.885335,4.478939,3.744909,-3.380198,-3.059183,-3.322653,6.925081,-2.369203,3.454800,-7.025040,8.523288,-8.018663,-5.517412,8.356470,-4.240710,9.211374,0.122167,-8.756042,3.591113,7.019140,5.519131,-5.011003,-8.999303,-6.656240,6.273342,-7.463719,3.515870,-0.823630,-4.156246,-5.794778,1.873857,-5.604863,-1.601985,9.083813,5.166933,8.423629,-7.184894,8.519187,9.445305,-1.422924,-4.562450,4.038869,3.173451,-8.830178,-4.298391,-9.318474,-8.739089,-9.448026,-3.497706,1.840750,-7.694399,-7.324756,-8.538099,5.813892,4.107967,-6.331148,-0.729679,-8.149650,0.662328,5.516059,6.109998,1.147945,-8.333461,-4.669767,0.199450,-9.556125,-1.794713,-1.810921,2.411038,-8.881677,-4.090849,-1.915678,3.514422,-4.273694,2.153691,-6.593629,-5.251897,7.648842,1.026387,5.480598,6.339692,2.354997,-4.967493,-6.432508,2.349422,-9.555043,5.605452,2.866612,4.887219,-2.122883,7.837322,5.752526,-8.021094,6.688355,-1.943837,5.036630,-4.722177,-3.947494,-4.014276,-2.446182,2.992859,7.382761,-3.152457,0.965095,4.932884,-5.772155,-0.124648,-4.311867,-1.138758,7.192287,-3.607406,-2.806071,8.071016,9.178616,0.468773,4.630043,-4.843334,-6.196298,3.451622,6.095337,0.533289,-2.024043,1.714767,-3.255694,-4.618016,6.882510,-3.647311,0.971333,-0.718653,-1.516348,3.403545,-4.881191,-7.261413,-2.709273,5.970090,-3.660874,8.124920,-8.832524,0.998135,2.330367,-5.605588,-9.848880,-4.901474,-5.108817,-8.043799,5.840956,4.014365,-4.764690,-7.857724,5.987500,-6.314115,-4.905289,-9.236314,-7.180007,5.884481,5.921083,-5.463141,0.250690,-3.939651,7.393066,-9.987804,-3.169350,5.628331,5.220867,6.705636,0.955055,7.084339,6.290884,-0.971754,8.850847,9.784733,-8.408498,3.668058,2.904965,0.382674,-8.420396,5.778706,0.171317,4.224936,-0.414239,-4.963701,-0.493758,5.477988,8.638915,-5.476698,5.966695,-0.697468,0.840082,2.565366,5.620304,-2.065878,-2.131685,-4.569479,-9.801867,7.876173,-9.901846,-6.579100,1.092862,-1.263805,4.919094,5.092096,7.611807,-2.419695,6.037920,3.739927,6.302201,1.803051,0.047590,3.307059,5.924779,-5.197119,-6.829677,7.710776], dtype = "float32")#candidate|2680|(1008,)|const|float32
call_2679 = relay.TupleGetItem(func_379_call(relay.reshape(const_2680.astype('float32'), [12, 14, 6])), 2)
call_2681 = relay.TupleGetItem(func_382_call(relay.reshape(const_2680.astype('float32'), [12, 14, 6])), 2)
output = relay.Tuple([bop_2631,const_2636,var_2637,var_2638,bop_2648,bop_2675,call_2679,const_2680,])
output2 = relay.Tuple([bop_2631,const_2636,var_2637,var_2638,bop_2648,bop_2678,call_2681,const_2680,])
func_2685 = relay.Function([var_2629,var_2630,var_2637,var_2638,], output)
mod['func_2685'] = func_2685
mod = relay.transform.InferType()(mod)
mutated_mod['func_2685'] = func_2685
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2685_call = mutated_mod.get_global_var('func_2685')
var_2687 = relay.var("var_2687", dtype = "float64", shape = (2, 15, 7))#candidate|2687|(2, 15, 7)|var|float64
var_2688 = relay.var("var_2688", dtype = "float64", shape = (2, 15, 7))#candidate|2688|(2, 15, 7)|var|float64
var_2689 = relay.var("var_2689", dtype = "float64", shape = (1755,))#candidate|2689|(1755,)|var|float64
var_2690 = relay.var("var_2690", dtype = "float64", shape = (35,))#candidate|2690|(35,)|var|float64
call_2686 = func_2685_call(var_2687,var_2688,var_2689,var_2690,)
output = call_2686
func_2691 = relay.Function([var_2687,var_2688,var_2689,var_2690,], output)
mutated_mod['func_2691'] = func_2691
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2933 = relay.const([[[3.657151,4.567346,1.592507,-7.302391,-8.107050,1.552510,7.804150],[-4.752849,2.037663,1.908572,-2.265629,3.689510,-7.256001,-3.212802],[0.256525,-1.893744,-8.336853,7.749316,-8.525015,-4.102861,-5.181258],[-0.726352,-8.874186,-1.910215,5.964572,-5.361628,5.614789,3.219045],[-9.874637,0.261375,2.188497,-8.468722,4.898441,-3.727291,-1.410479],[-2.265625,-7.950844,-5.285753,-8.110273,-5.048583,-0.959440,9.955291],[-3.768294,-9.461738,-7.445383,-2.384781,3.466079,-1.971515,-9.853254],[-1.152945,0.674635,-0.497540,-8.879613,-4.321300,8.562986,-2.532503],[6.055796,3.067248,-8.512767,-3.975516,-4.745958,-7.198852,-9.645133],[-3.873032,5.079208,0.058121,-4.363051,-4.105404,-0.925228,7.137648],[-0.979659,-7.134370,8.325920,2.391674,0.070434,5.721643,8.188568],[8.784269,-3.290746,-5.430959,1.687456,-3.040923,8.746853,-7.259201]],[[3.643308,6.514719,2.287235,2.520223,-9.974846,-5.069590,0.531273],[6.588549,3.364857,-7.688811,-1.967782,-1.814414,-5.038071,5.312353],[3.565890,7.355265,0.771987,-3.190170,-6.271711,-7.445943,5.852681],[-8.760652,-3.349426,6.908383,5.508976,2.684738,-5.770048,6.694702],[-6.569930,5.269756,-5.151595,-7.818021,7.455059,-1.958870,-5.897256],[-7.316488,0.462638,-9.450369,-6.521077,5.913237,4.142010,-8.461036],[-1.279937,-7.227948,-2.379076,5.408311,2.773070,9.317316,-4.502364],[-9.413080,-5.577417,-6.700777,-3.022155,6.261614,-1.919352,-7.206102],[1.734062,-7.961982,-8.920959,-6.909311,-0.337160,0.781384,1.178283],[-0.325588,-6.631013,-9.906070,-7.910855,-7.155551,-3.162217,0.252641],[-2.384786,-1.145062,-3.270410,-8.251263,-5.021643,-7.059605,-1.474020],[-1.669068,-5.659256,4.988592,3.606562,8.524576,6.534797,-3.605445]],[[4.816222,-2.123112,1.210476,2.589487,4.261762,-9.494520,-7.131228],[-3.198853,-4.480137,-3.351472,-5.916842,2.618946,6.281818,7.558874],[-7.900167,-6.820808,2.934251,-1.024921,-0.590559,0.466859,6.661960],[1.812603,-2.894338,-7.213741,-3.155641,2.889868,-0.998346,-8.830922],[5.855951,-5.312748,-7.151884,7.477263,-2.083691,-5.719297,5.620915],[-5.738739,-9.500438,-0.519263,-6.226347,0.805164,0.589742,1.829861],[-5.485851,4.435997,5.859287,2.337405,1.209040,3.762617,-9.761079],[-8.773089,2.296429,-0.848268,-8.226094,-1.047661,7.313903,0.434115],[-5.821112,3.799904,-5.320259,-8.092102,-5.515406,2.953745,-7.068573],[0.114269,2.933988,-8.746115,4.755781,-3.462627,4.551162,-0.663384],[-3.057741,6.669132,-0.973920,1.000079,-8.309874,-7.620253,-7.637501],[-3.086291,-4.130101,6.002533,8.750383,5.460142,5.334003,-3.510496]],[[-2.415499,2.221331,-8.496155,-0.016194,4.555805,4.343471,7.823558],[9.961445,-9.394512,6.901501,3.774503,-3.459189,-7.108961,8.729331],[4.399522,6.982106,-5.912964,-0.367602,9.087789,2.588212,3.936779],[-6.947034,-4.578048,-8.792888,8.339280,-6.421644,-5.546014,8.374049],[-2.862956,-4.932628,-6.666977,5.786921,9.686801,0.735083,-0.878725],[1.507969,-0.247766,7.497853,0.899828,1.107353,6.352763,-4.331087],[-6.313451,-8.175518,-0.238313,-4.620346,-8.444047,-0.079464,0.227619],[1.793844,-9.788279,5.030292,-2.887328,-7.539048,-5.373885,5.862714],[1.178551,-6.498584,5.449130,-3.490359,1.861991,9.721783,-5.858332],[4.515662,9.340043,-5.801490,-6.016004,-1.058650,-2.218387,-0.065859],[-2.428542,-3.911557,1.343503,4.982252,1.702344,3.620355,-3.328865],[2.067945,-1.273371,9.968242,5.460916,9.459563,1.507552,-3.859430]],[[-7.232647,4.694058,-7.861938,-4.051446,-9.311537,1.756781,9.069364],[-7.933555,4.071954,5.573129,7.163570,5.576536,-2.121923,-9.149503],[9.894231,4.008709,3.088963,-2.137649,-3.602146,-2.842286,9.041362],[-2.125686,-8.138815,-8.484794,-8.405770,7.797483,-1.200936,-5.420242],[0.057168,3.306725,-2.923453,4.707053,6.979038,8.150838,-0.649298],[-6.413829,9.657586,1.447821,4.460143,9.556742,6.332888,6.464756],[-0.214526,-6.286689,-5.669077,-2.710345,-1.404537,5.366236,6.163826],[6.889903,-3.963208,7.034889,-6.391795,3.903586,7.776021,-2.358833],[1.932533,-8.737798,7.054280,6.993325,-5.321851,-2.736517,0.740849],[-0.126174,8.544585,7.005512,0.593067,7.031416,4.908256,-6.249325],[-3.636453,5.616826,-6.431949,6.780546,-6.186544,-5.306289,-8.735627],[8.136014,-9.280140,-8.329106,0.217370,3.112598,1.378586,-3.160612]],[[5.064324,4.899564,3.096706,4.851837,-3.092591,-9.717631,0.610358],[-2.753672,5.959672,-8.187232,9.948708,2.250361,-2.927387,-7.708322],[-9.634062,-6.290964,7.657860,5.269988,-5.967419,-1.579008,7.721721],[5.085831,4.681549,-0.375365,8.487521,-0.607700,3.453287,9.105634],[-4.411597,0.256925,-1.952857,-4.599629,4.229547,3.636532,-9.301379],[7.549742,-5.411540,0.133872,-0.558180,-7.036500,-8.871353,-0.646812],[4.150040,1.162156,9.040586,-0.340831,-1.275164,8.062516,-7.218826],[4.075616,2.387003,-3.642988,2.145354,1.928453,7.724455,4.165914],[0.357789,6.990026,0.761290,-2.475716,-7.824082,-7.941761,-9.798763],[-6.613525,-4.429305,1.295078,-1.109840,5.278320,3.290866,8.339314],[0.697452,-1.555033,7.320630,7.894694,-2.721648,6.845823,-5.618579],[2.139538,-6.799344,3.127103,8.041706,-1.768730,-6.278372,3.324441]],[[-6.073823,-7.865010,7.892097,-3.061025,-7.166978,4.541344,-3.209120],[7.887638,1.965315,5.990484,4.825083,-8.237250,4.900227,-6.308104],[0.157285,-0.928229,5.372734,2.914318,6.116281,2.926308,3.384375],[0.126838,9.946174,-5.785796,3.584417,-7.152024,-4.258983,-3.415755],[9.188361,7.134454,-9.503231,6.389310,-9.979781,1.387840,-6.432935],[2.893772,0.760471,3.408988,-7.240673,9.425346,5.209889,-6.002576],[7.815475,-4.648727,8.107270,9.768769,8.213497,9.683898,6.533599],[1.125609,4.888126,2.535581,7.191228,-4.026144,-2.366753,-9.568959],[5.241857,5.090114,3.148144,-8.274382,5.481171,-8.138670,-0.881773],[-6.109540,-8.197091,0.307289,-0.083863,8.111465,-4.237299,9.983538],[0.848812,-9.963282,-0.361871,7.693854,4.599963,4.790133,6.199754],[8.798019,8.984808,5.631691,-6.243608,-1.223160,0.652494,-3.579413]],[[9.695597,-8.687281,3.793844,9.579930,-1.318385,7.213102,-7.425815],[-0.306498,7.431454,2.066009,9.767188,-9.456960,-8.811656,1.421917],[-7.057914,5.965512,3.644383,0.490479,-8.942244,9.128702,1.992841],[4.947455,7.561219,-5.562091,2.340052,6.876220,-3.566334,-3.583998],[-9.923307,7.352161,-9.192879,-8.137426,-8.497279,-4.036650,8.853724],[-2.685360,7.341181,-2.262783,7.269472,0.638612,1.696376,-5.508188],[-0.084698,-2.812412,-4.335538,-4.180494,-2.466038,-1.361636,-0.730208],[3.622818,-6.066998,-3.676029,7.768002,-7.558340,9.380517,-1.103749],[2.540289,3.617430,4.286282,-9.758681,7.930530,-2.076613,-2.619728],[-5.150751,-1.890998,-8.419531,5.464985,-9.094785,9.328767,-2.313161],[-9.062570,2.073655,1.991356,5.979427,-0.221466,-8.027207,-9.867588],[8.632758,0.137996,3.894600,-7.097331,5.956926,7.447822,-5.048018]],[[-8.798808,4.052377,1.536455,-9.026643,2.189447,-0.653532,-8.359905],[4.779083,2.282052,2.234481,2.672682,-3.848608,-3.913003,7.250949],[9.739652,-8.778650,-3.048045,-6.685158,6.074882,-3.517754,3.883986],[-1.441704,2.331926,-1.209942,5.293197,-9.592264,6.453200,-7.821100],[-8.760482,0.563170,4.189408,4.270629,7.863488,-7.845128,6.129859],[-6.029298,1.633720,-1.390832,-4.688465,9.748528,-0.784324,-3.193225],[2.555581,4.912310,2.622152,4.531650,-3.079608,-0.400609,9.426729],[-4.173086,-6.720176,2.505897,-0.065999,-3.568906,-0.008836,-1.716428],[9.743791,-4.147465,9.906437,-0.334239,-5.935905,0.411991,8.966882],[3.190482,-4.749683,8.932273,-2.541497,-7.296326,-8.136214,3.276591],[2.897889,2.648665,6.595965,4.778013,4.442304,2.421020,3.586508],[-8.252510,-2.924221,8.179244,-3.566312,4.220419,0.100541,6.996753]]], dtype = "float64")#candidate|2933|(9, 12, 7)|const|float64
uop_2934 = relay.atanh(const_2933.astype('float64')) # shape=(9, 12, 7)
func_2508_call = mod.get_global_var('func_2508')
func_2512_call = mutated_mod.get_global_var('func_2512')
const_2942 = relay.const([9.849374,7.058287,-5.813091,-4.018881,8.830742,8.923718,-8.011910,9.739424,4.148335,4.634962,-5.829913,-5.745229,-2.636680,-6.654659,5.644814,-5.336109,-0.101385,-5.487616,3.241859,-4.598260,-0.226923,4.932107,8.258849,3.882465,-1.888694,-5.252514,6.938828,-2.001297,2.419315,-3.803112,5.423065,5.738285,-6.535159,4.648876,3.828125,-1.277300,5.415989,-1.949723,4.945331,2.223607,2.172545,-5.387863,-8.330950,-7.443911,2.182138,7.949687,1.247362,-0.174573,-2.330342,5.336910,9.076618,-8.060502,-8.504932,7.744115,-4.545995,0.686576,-4.867694,-1.299608,-8.369038,-4.631135,7.843045,5.456850,-9.299044,-5.469230,9.682879,-8.350614,-2.026892,4.142785,-5.058192,-6.382620,0.080577,-8.180427,7.805922,-2.936573,1.053583,6.157109,-2.650095,-2.729488,-5.736269,-1.848831,-5.902046,-1.062729,2.687396,9.054859,-9.571023,-9.347289,9.855220,3.280804,9.604158,8.046679,-3.882269,-4.556793,5.406169,3.470873,3.175984,1.886367,6.339231,-4.917484,9.300262,-7.923543,6.409435,7.472406,1.443056,5.106483,-2.513632,5.553891,1.987102,-1.501603,-3.642038,-1.893649,4.300444,-6.907070,3.037289,7.020259,-9.386918,-7.125203,-2.006683,5.718416,-9.635514,-4.703104,0.862885,2.816481,7.707963,0.532657,-1.484107,-0.588968,5.550922,-7.387560,6.976236,9.949238,1.605112,-1.048050,9.333390,7.576239,-6.329612,-4.845976,2.476446,2.180629,2.048532,2.572528,-3.703315,3.415735,-7.968269,9.519105,2.907269,4.717837,-7.364711,-9.777997,2.939784,-2.287558,-7.102374,5.862579,-4.575574,-9.413621,6.694685,3.457935,3.082408,7.099015,-8.420443,-7.898847,6.830688,-8.612802,2.358686,1.287169,-0.896332,-2.761252,5.417168,1.820906,-0.308316,0.148151,7.288137,-2.934882,-0.206371,-9.093247,-9.614216,-0.790566,-9.892132,5.773077,-4.988583,6.513863,-1.774188,5.614972,2.332174,-0.636663,-8.009653,-6.462168,-3.847014,5.347701,-3.006328,-1.709964,-7.530322,2.461828,8.252112,-2.614442,7.812947,5.982286,2.111642,2.210037,4.317229,8.039743,-8.454336,1.293640,-3.729988,0.413606,-8.258003,3.803399,-2.860401,2.162723,1.630815,0.297147,3.607810,0.747991,6.977461,-5.255625,-3.345600,7.091319,5.964303,4.133947,5.996321,-2.494198,-4.418903,-0.897771,-1.758186,0.735431,4.665635,6.504184,3.528946,7.434865,4.214420,8.130127,3.277981,-5.946374,9.677744,-0.224460,-8.383588,-5.911235,-1.680453,-4.106030,-3.974638,3.231807,-9.372901,8.092867,8.910843,6.831745,-7.806151,-8.282717,7.798226,-0.066007,-7.473774,0.336427,0.397225,-6.737597,-1.378553,8.456963,-1.150591,-5.980248,6.577112,-1.775528,-1.315335,9.023391,-5.447871,9.018160,4.814747,-0.399658,-0.174117,-2.471379,6.079491,-3.564160,2.775325,-3.247526,-6.254425,9.062063,-8.147847,-9.128029,3.946082,6.946788,8.023574,8.523504,-8.424984,-4.532254,7.753734,6.487808,6.183972,-7.531740,6.822476,-7.234919,4.878521,3.825043,0.984168,-0.759999,1.578673,-2.713040,-4.663566,2.652255,4.153715,-2.314575,4.297565,6.086792,2.911415,7.664872,1.098205,-2.279194,4.707289,-8.011832,2.787426,5.792929,0.994902,1.089453,1.308954,-1.854217,-2.649031,6.289554,-9.680678,9.507171,-1.978386,-8.313474,-9.466361,-6.902489,-8.586037,0.966342,-6.522903,9.813202,-3.002271,2.434583,9.367611,7.076869,-9.542679,6.336950,8.648377,-5.380953,-6.039379,6.482610,8.800101,-0.309893,8.065848,7.338897,5.796122,2.303355,7.823391,3.295137,-3.898903,0.282496,-0.709618,-1.465272,4.130489,7.575588,8.113154,-4.017969,1.591054,2.757659,-2.465166,-5.914102,0.442536,-1.073207,-5.684229,0.750663,-8.973013,-9.729520,-8.518328,-4.530529,9.486397,9.318882,5.576272,-8.058394,-3.576858,3.833543,-8.314724,-8.516744,8.918988,5.876035,2.344116,-2.347287,6.787754,-7.741579,7.885788,0.183715,-6.758521,-1.136004,-1.434291,-3.880191,-5.454002,-3.625705,3.095092,-2.564580,7.930396,9.250922,-3.257305,-4.482542,-8.497996,9.497409,0.606459,-0.328777,0.902448,7.567558,3.478891,7.570142,5.185404,7.191775,-6.762325,0.442984,2.360034,-3.601369,6.110212,7.861797,2.021912,8.416368,8.172519,0.773042,-4.609207,-1.731127,-6.083985,6.244384,7.602411,2.706779,-3.413595,9.222706,3.893176,-5.920482,-3.693363,-0.148063,-1.814052,1.478257,6.330150,9.006014,2.303647,-0.485701,1.176825,-9.312692,-6.718241,-0.027730,-4.303065,-0.100225,-2.314660,-4.134195,-8.393927,-7.761390,8.410415,-6.555418,-9.011985,-6.919296,0.403761,-3.850791,3.998100,-7.743685,-0.505865,-8.605696,-7.922982,-5.672449,5.703781,-5.130548,6.530859,4.395259,-9.169236,9.086955,7.840434,-8.951874,-4.088843,0.261763,3.555494,1.152583,-2.022320,8.660280,-1.003894,6.501674,-9.405615,6.710242,0.441345,-5.370786,-3.535304,-1.038891,-1.933485,1.841064,3.420318,-8.507653,-9.818773,-8.114402,3.828945,2.116964,5.285127,-6.282198,-3.274722,2.742776,-0.382256,7.111024,-2.571180,-6.127174,4.168590,2.068298,-0.538217,4.483900,-9.858189,2.837605,4.355680,9.039312,-1.917201,6.207007,-2.893772,-5.704648,-3.144279,6.856538,1.566668,1.437233,6.676122,-0.451558,-8.252108,-7.330812,3.771593,8.687757,5.541021,-1.030691,-0.256380,-4.189483,-1.300512,7.421788,9.063159,8.780590,-4.638842,5.088273,-1.272828,8.812080,1.483261,0.957805,0.922784,-7.214601,5.824338,-4.368109,-6.119332,-8.278749,4.705698,0.274948,9.867648,-3.840437,-6.618082,8.659799,1.270118,7.244459,9.944795,4.421567,7.996618,6.350829,-7.042812,-4.163958,-6.237621,-6.265280,-0.630799,-1.025411,-0.621479,6.084490,-2.661142,9.014821,5.199874,5.789185,0.453977,-9.506554,-8.747847,-2.189723,0.816195,0.810992,0.579556,-1.467380,8.662765,3.510389,7.274701,-4.164613,-0.385156,3.002845,9.687455,-1.746536,5.654854,6.423784,-7.006674,9.256143,8.832739,6.811165,-1.583183,-0.851635,1.597883,0.146291,4.634857,-0.155535,-7.907825,6.594848,-9.071418,-4.107753,-4.380146,0.084144,5.625174,2.059501,5.415840,-3.274070,-5.935017,-9.953027,-9.027886,-9.909726,1.717770,0.391434,-2.338446,7.429938,-2.540287,-9.920089,-6.940704,5.200900,-2.144892,-7.147442,-6.298845,3.227617,5.015744,-7.005137,-2.896336,4.405447,1.435891,9.392003,-9.117316,7.346924,-2.609579,5.006562,7.785734,5.635861,5.417352,-0.288168,-1.412646,-2.121737,7.270088,7.408441,1.229178,6.618410,-0.564650,-0.317039,-8.303190,4.134592,-7.820379,0.974201,-2.323500,3.636201,-3.030567,3.302070,-8.838651,-6.203937,-0.174214,6.805331,8.296844,-7.343456,3.397592,-7.161492,-0.524851,-8.122280,-7.166474,9.989899,-8.105615,8.738197,-2.949640,9.168756,-0.482166,-0.737159,-1.899736,5.922876,-7.720771,6.162873,-0.756505,6.898904,4.845151,8.442425,1.329419,-7.314547,-8.879438,-0.680492,-8.090983,8.145701,-5.409505,0.480034,4.137623,-6.049688,4.526658,8.616485,0.550864,-4.586544,-1.929731,-6.820156,-4.511814,-2.252304,-4.652960,1.075378,-1.488024,-4.879049,-1.303088,7.364844,-7.039499,-9.612734,0.924556,9.101238,-2.829492,-0.746614,-3.825689,9.428193,3.918216,4.194834,-7.672508,9.852106,6.319193,8.759115,6.295136,7.231708,-8.830838,9.591578,6.349747,-1.628987,5.024835,-9.447631,-5.143374,-2.239929,4.073746,0.729570,5.356629,9.164076,-0.619218,-1.287828,1.477376,8.343307,7.811354,-2.553621,-1.426123,6.841490,4.534374,3.625619,2.135201,8.053514,0.874459,-9.753893,8.471758,8.639528,7.424491,-7.005835,0.068283,-8.279583,-9.723030,1.909049,-0.290606,-2.753748,-3.916043,2.225466,-8.178893,0.741504,4.182777,-6.027018,3.654466,0.370938,1.401165,9.219874,5.530374,-3.243540,-9.999114,-2.354643,-3.691462,-4.956503,-9.004601,-8.204701,0.398445,-9.599810,8.312389,8.940741,-7.524358,2.888725,-1.596911,-7.748655,2.955087,-6.039529,-0.928068,-3.677752,0.885518,-7.675914,-0.116794,-5.279873,-5.151365,-8.260830,7.284051,-9.028057,-9.979857,-9.174904,-9.798658,7.613465,7.310016,-2.403256,-6.251862,-9.682354,7.957144,-9.785981,2.071482,2.862026,6.336706,7.222780,-1.496770,4.583011,-7.374679,7.298160,-4.347366,-9.426325,-3.394265,-8.050296,0.122273,1.391164,8.278560,-3.056902,-1.962664,-4.586448,1.852836,6.150650,0.469174,2.707144,-9.158901,-9.257188,6.308010,-3.954489,9.026264,-1.196367,0.722519,-1.654137,0.330161,3.431124,-9.897348,-0.647976,9.269916,1.969491,-5.193105,-3.180801,-6.833592,9.118337,2.348406,8.405589,-7.838159,9.227718,1.206129,-3.493493,-6.527573,8.836276,0.649300,5.848913,6.281245,4.874045,0.433377,-4.005169,6.776612,9.650606,5.917752,6.021156,-6.207419,2.973659,-8.992980,5.174395,8.031310,-0.634598,-0.981729,0.434971,-5.721613,4.429508,7.588088,5.848292,8.235337,8.791824,-1.873119,3.483623,-0.126040,-4.275613,-4.178412,4.889204,-3.523065,8.871713,2.476430,-7.619080,2.879369,6.071549,9.437603,1.146724,7.382188,0.517627,-7.997452,5.080019,2.730040,2.966405,7.233062,4.598738,-6.141609,-1.323979,-2.882068,-0.531726,-6.362199,-1.451513,-8.576123,-8.463731,-0.194282,8.889600,-8.684931,8.165183,2.484175,-1.194619,-8.463607,-4.432655,-2.250531,-3.481936,-4.327147,-3.619262,0.919484,-9.705717,8.200939,3.836151,9.972024,-4.500354,1.672978,7.185271,-6.483666,3.347189,-5.091707,-4.343277,-8.791898,6.963983,3.210746,4.506514,-4.720390,-0.689629,6.688291,2.615824,4.597732,-6.110541,-7.997601,1.863717,2.231508,9.771272,-4.400271,-8.029938,-4.991069,6.039086,-5.528070,-8.885735,9.044355,-5.821529,9.500753,3.190026,7.822547,7.888766,9.223310,-1.830695,-6.591202,-7.481523,0.963841,1.094914,-2.490687,7.753773,-5.816193,6.966084,9.291773,-9.670275,-3.754549,3.957442,7.829393,3.714413,1.808283,-0.463508,4.061865,-5.937923,6.583435,-4.637800,3.375984,-9.933993,-4.260455,9.364888,0.701657,-3.261765,0.747369,1.788712,-9.225066,3.898213,9.186624,9.418930,6.918531,5.459199,-9.442832,-6.517777,-4.970664,2.210773,5.010955,-6.428257,-3.420780,-8.534313,-8.898889,-9.573510,-6.087685,-9.513244,8.158052,-7.035461,3.383070,-5.698022,0.123547,2.406356,9.520718,-3.835453,7.701975,-6.403545,3.238449,9.682015,-5.550998,3.091018,-8.288016,-3.952687,7.865493,-9.401643,2.980055,-9.425129,5.199749,-8.351603,-0.974693,4.718564,4.293888,3.862433,-3.759509,-2.159417,0.402139,0.417519,8.600054,1.876729,-1.514363,0.423665,-9.745230,7.363046,-3.181643,6.429754,-0.095843,-9.873342,-4.529909,8.661688,9.955149,4.214545,7.162906,-2.480270,0.529993,0.935217,1.075897,4.218809,7.187556,8.122717,-2.049824,-7.785936,-3.738781,-1.721110,6.619528,5.263838,5.150365,7.902975,-6.118879,2.311784,1.134391,0.884123,9.991296,2.432376,2.173128,-5.237372,0.329766,4.645236,-7.301749,-0.706522,1.965502,-5.962707,-7.744068,3.974052,3.165210,-8.178145,2.272894,4.683946,-4.538063,4.055424,6.853540,9.318879,8.570718,-5.928513,-4.777361,3.347560,2.624516,-9.735864,4.469840,-4.371902,-3.179271,3.048121,-1.102787,6.155289,4.183854,0.906230,-6.159926,9.350612,8.094389,3.615458,-6.247718,7.103603,-8.370883,-1.670207,0.869940,-3.459888,8.277801,6.749976,-9.773782,9.459911,-8.594759,1.370362,5.569423,-9.115407,-8.734559,5.905235,-8.795597,-6.750099,-6.756877,-2.874466,4.564679,-4.248567,-7.987528,7.939137,-9.757737,5.670658,3.250958,0.975230,5.606221,1.293501,-6.219953,0.999165,1.072801,1.055312,-3.460104,8.948749,2.789758,-9.186044,1.653055,-6.917352,-0.096770,-0.630906,-4.079219,3.735098,2.862706,-4.432957,3.901039,-6.664210,1.898773,-8.795991,0.545703,-8.276821,2.054235,6.576665,-0.885001,-4.073969,0.291449,-4.633176,3.325171,6.634278,-8.842110,-7.821869,5.401794,-9.904622,-4.264054,-1.326902,-4.978781,-3.335837,-7.115624,-0.780135,-5.197759,7.669682,-6.209243,7.531587,4.948115,-6.903369,-0.559540,2.264988,-7.586754,2.027352,4.324435,-3.582829], dtype = "float32")#candidate|2942|(1170,)|const|float32
var_2943 = relay.var("var_2943", dtype = "int8", shape = ())#candidate|2943|()|var|int8
call_2941 = relay.TupleGetItem(func_2508_call(relay.reshape(const_2942.astype('float32'), [9, 10, 13]), relay.reshape(var_2943.astype('int8'), []), ), 2)
call_2944 = relay.TupleGetItem(func_2512_call(relay.reshape(const_2942.astype('float32'), [9, 10, 13]), relay.reshape(var_2943.astype('int8'), []), ), 2)
func_1599_call = mod.get_global_var('func_1599')
func_1603_call = mutated_mod.get_global_var('func_1603')
var_2954 = relay.var("var_2954", dtype = "uint32", shape = (2400,))#candidate|2954|(2400,)|var|uint32
call_2953 = func_1599_call(relay.reshape(var_2954.astype('uint32'), [10, 16, 15]), relay.reshape(var_2954.astype('uint32'), [10, 16, 15]), )
call_2955 = func_1599_call(relay.reshape(var_2954.astype('uint32'), [10, 16, 15]), relay.reshape(var_2954.astype('uint32'), [10, 16, 15]), )
output = relay.Tuple([uop_2934,call_2941,const_2942,var_2943,call_2953,var_2954,])
output2 = relay.Tuple([uop_2934,call_2944,const_2942,var_2943,call_2955,var_2954,])
func_2961 = relay.Function([var_2943,var_2954,], output)
mod['func_2961'] = func_2961
mod = relay.transform.InferType()(mod)
mutated_mod['func_2961'] = func_2961
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2961_call = mutated_mod.get_global_var('func_2961')
var_2963 = relay.var("var_2963", dtype = "int8", shape = ())#candidate|2963|()|var|int8
var_2964 = relay.var("var_2964", dtype = "uint32", shape = (2400,))#candidate|2964|(2400,)|var|uint32
call_2962 = func_2961_call(var_2963,var_2964,)
output = call_2962
func_2965 = relay.Function([var_2963,var_2964,], output)
mutated_mod['func_2965'] = func_2965
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3145 = relay.var("var_3145", dtype = "uint8", shape = ())#candidate|3145|()|var|uint8
var_3146 = relay.var("var_3146", dtype = "uint8", shape = (11, 12, 1))#candidate|3146|(11, 12, 1)|var|uint8
bop_3147 = relay.greater(var_3145.astype('bool'), var_3146.astype('bool')) # shape=(11, 12, 1)
output = relay.Tuple([bop_3147,])
output2 = relay.Tuple([bop_3147,])
func_3153 = relay.Function([var_3145,var_3146,], output)
mod['func_3153'] = func_3153
mod = relay.transform.InferType()(mod)
mutated_mod['func_3153'] = func_3153
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3153_call = mutated_mod.get_global_var('func_3153')
var_3155 = relay.var("var_3155", dtype = "uint8", shape = ())#candidate|3155|()|var|uint8
var_3156 = relay.var("var_3156", dtype = "uint8", shape = (11, 12, 1))#candidate|3156|(11, 12, 1)|var|uint8
call_3154 = func_3153_call(var_3155,var_3156,)
output = call_3154
func_3157 = relay.Function([var_3155,var_3156,], output)
mutated_mod['func_3157'] = func_3157
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3421 = relay.var("var_3421", dtype = "float32", shape = (10, 5, 7))#candidate|3421|(10, 5, 7)|var|float32
const_3422 = relay.const([[[-1.088633,1.895507,-1.914213,2.522823,-0.194557,-6.527730,-3.844216],[3.849497,5.594000,5.249175,1.370747,8.973401,4.611014,-2.485280],[3.400796,-9.980123,-6.411161,7.281027,0.104286,-1.854824,6.574041],[-8.180204,7.275292,5.146075,1.202412,-5.291187,-3.005265,-2.781957],[4.924160,3.011275,-1.544361,-4.548771,0.797045,6.224763,-1.501758]],[[-4.444168,-6.040463,9.416735,-4.223175,5.719307,-5.138676,-9.321227],[7.921965,-8.770270,-0.464681,2.725191,3.672106,5.928809,7.195692],[8.785771,1.565564,2.833601,1.629439,6.351885,4.598082,4.910405],[-8.311180,2.181888,-0.671573,-1.968231,6.827494,4.707446,-0.637895],[9.570784,2.854742,5.412891,-4.171617,3.231702,-1.103671,-2.342808]],[[9.901933,4.975193,2.996181,0.781024,-8.349724,-3.694267,-5.285904],[6.617748,6.027848,-0.960452,7.589584,9.661227,0.881802,3.351551],[9.024368,4.138563,-9.033740,-5.039711,1.248899,7.697847,-4.069944],[7.955217,-3.863342,9.805230,7.434641,-6.726115,8.173127,8.247947],[-0.834729,-2.433383,-6.883578,-5.734419,-6.555749,-2.425158,8.978434]],[[-3.137921,-7.011088,-1.517277,-1.995251,-7.254333,7.508722,-9.073321],[-5.792790,6.748946,2.170048,-7.201711,-4.236382,-4.179989,0.625358],[-1.519793,-4.910858,-4.474876,1.924744,6.816160,-6.976366,3.732491],[7.955958,6.605488,6.995825,-4.986538,-6.783848,-4.617199,-5.462517],[-8.964790,-1.988266,-6.180683,7.923321,7.126662,4.382083,-8.109769]],[[-9.784960,1.323270,6.753722,9.645591,-3.531168,9.667900,-0.260754],[0.156257,-9.401075,-5.320856,-2.892575,-7.715819,-1.427015,-6.133015],[-3.265290,8.330708,5.812182,-6.998317,9.478354,8.194062,-1.714010],[5.609327,9.879616,5.696267,-6.927351,-0.871738,-1.617288,-9.954798],[-6.357132,-7.525060,3.540533,6.141630,-3.479686,3.489123,6.885759]],[[4.550824,-8.659878,-3.137410,8.118423,9.658554,7.483842,9.350423],[-8.048576,-7.391403,-6.377672,-5.982765,5.135906,-1.288851,9.567790],[6.330137,7.299909,-0.938528,8.028614,4.524702,-8.980106,-3.323548],[-3.603923,2.967175,0.566009,9.859568,-5.223795,9.352152,2.920808],[-9.544563,-9.912276,8.474073,-6.466489,6.544565,-6.474595,8.618401]],[[4.571732,-2.415227,3.492954,4.225177,-6.647540,-6.368093,-3.677522],[-9.265000,-1.118245,-4.694166,-3.348721,-6.482136,-5.202006,7.940384],[-7.990523,2.564560,-0.137986,4.987321,-7.412632,9.646614,2.118012],[5.219787,5.539929,2.163687,-0.682749,-3.866453,2.771891,-6.883134],[-3.664514,-3.303124,-3.021380,5.784449,4.547377,-7.768119,3.063114]],[[-4.135388,9.686195,-2.459603,3.082224,-1.458077,0.777870,6.048860],[2.773158,-8.038407,4.537314,-6.506173,7.024031,-4.960760,-2.405115],[-1.289285,-6.435427,-3.748099,-7.491025,6.895144,-4.182090,-4.834969],[-2.264205,-9.521928,1.323330,-3.384693,0.207656,-7.018413,-2.381247],[-9.233134,9.885005,-4.690457,1.409038,8.111447,8.556604,-7.568103]],[[9.539569,3.527376,-6.649502,9.204524,4.135519,-9.233813,1.198596],[9.941746,0.285671,-8.264955,-1.450949,9.139831,-8.104496,3.564971],[3.189214,1.230298,-7.705086,-9.808302,9.055179,-8.536613,0.774723],[1.955850,2.666660,-4.670543,-9.514900,0.754299,0.303654,2.909913],[-0.777830,4.851375,-9.799266,-4.856394,-5.395085,8.658560,-7.243870]],[[-3.667815,-7.099253,-3.046079,-1.812995,-2.907572,-2.648439,2.506391],[-5.418089,2.701575,1.672573,-5.168149,6.087772,9.162455,-6.704875],[4.337448,-4.212582,-2.407605,-8.478157,2.600841,-2.483551,2.159544],[8.899369,-5.108714,8.618878,-2.088612,0.783341,-4.468124,8.254650],[-1.851486,-8.030031,7.550712,4.341300,3.138978,-1.803949,-4.499852]]], dtype = "float32")#candidate|3422|(10, 5, 7)|const|float32
bop_3423 = relay.power(var_3421.astype('float32'), relay.reshape(const_3422.astype('float32'), relay.shape_of(var_3421))) # shape=(10, 5, 7)
output = bop_3423
output2 = bop_3423
func_3435 = relay.Function([var_3421,], output)
mod['func_3435'] = func_3435
mod = relay.transform.InferType()(mod)
var_3436 = relay.var("var_3436", dtype = "float32", shape = (10, 5, 7))#candidate|3436|(10, 5, 7)|var|float32
output = func_3435(var_3436)
func_3437 = relay.Function([var_3436], output)
mutated_mod['func_3437'] = func_3437
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3754 = relay.var("var_3754", dtype = "float64", shape = (12, 12, 13))#candidate|3754|(12, 12, 13)|var|float64
var_3755 = relay.var("var_3755", dtype = "float64", shape = (12, 12, 13))#candidate|3755|(12, 12, 13)|var|float64
bop_3756 = relay.floor_mod(var_3754.astype('float64'), relay.reshape(var_3755.astype('float64'), relay.shape_of(var_3754))) # shape=(12, 12, 13)
output = bop_3756
output2 = bop_3756
func_3759 = relay.Function([var_3754,var_3755,], output)
mod['func_3759'] = func_3759
mod = relay.transform.InferType()(mod)
mutated_mod['func_3759'] = func_3759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3759_call = mutated_mod.get_global_var('func_3759')
var_3761 = relay.var("var_3761", dtype = "float64", shape = (12, 12, 13))#candidate|3761|(12, 12, 13)|var|float64
var_3762 = relay.var("var_3762", dtype = "float64", shape = (12, 12, 13))#candidate|3762|(12, 12, 13)|var|float64
call_3760 = func_3759_call(var_3761,var_3762,)
output = call_3760
func_3763 = relay.Function([var_3761,var_3762,], output)
mutated_mod['func_3763'] = func_3763
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4369 = relay.var("var_4369", dtype = "float32", shape = (4, 5, 6))#candidate|4369|(4, 5, 6)|var|float32
uop_4370 = relay.atan(var_4369.astype('float32')) # shape=(4, 5, 6)
output = relay.Tuple([uop_4370,])
output2 = relay.Tuple([uop_4370,])
func_4375 = relay.Function([var_4369,], output)
mod['func_4375'] = func_4375
mod = relay.transform.InferType()(mod)
var_4376 = relay.var("var_4376", dtype = "float32", shape = (4, 5, 6))#candidate|4376|(4, 5, 6)|var|float32
output = func_4375(var_4376)
func_4377 = relay.Function([var_4376], output)
mutated_mod['func_4377'] = func_4377
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4594 = relay.var("var_4594", dtype = "int64", shape = (13, 1, 5))#candidate|4594|(13, 1, 5)|var|int64
var_4595 = relay.var("var_4595", dtype = "int64", shape = (13, 15, 5))#candidate|4595|(13, 15, 5)|var|int64
bop_4596 = relay.less_equal(var_4594.astype('bool'), var_4595.astype('bool')) # shape=(13, 15, 5)
func_3435_call = mod.get_global_var('func_3435')
func_3437_call = mutated_mod.get_global_var('func_3437')
const_4601 = relay.const([0.150199,5.108300,7.857040,8.963498,-3.632997,4.947803,-9.962411,6.677981,-5.936117,-2.543116,2.882864,3.473833,-8.339419,-9.212207,-5.382169,-0.118771,-6.372792,-1.503275,-0.163477,-0.978067,-9.197142,-8.552398,-1.489007,-8.413568,4.844877,-0.924691,-3.410584,-9.378658,6.292146,6.592905,-3.201997,6.748784,4.068026,6.470133,9.613518,-4.995958,8.608528,3.937980,1.476982,-5.551869,-7.315099,9.315757,2.185453,8.921833,-3.058291,-4.902361,3.841193,-8.722785,-7.384463,-4.954687,7.212583,8.232918,0.886002,9.344258,-6.736352,2.393971,-9.640754,-4.907333,1.679049,1.221776,-4.704841,-9.281302,7.925448,-0.041636,-7.842019,-2.229545,1.331999,4.885559,-4.148578,4.878876,-3.905156,9.669066,-2.066551,-7.636905,0.250874,8.423105,-8.326954,8.685858,-3.171721,8.925714,-8.491568,6.709478,7.689045,7.237892,6.423146,-6.700277,0.441534,-9.324107,9.611875,7.721504,-5.397929,-1.086569,5.855559,2.226329,9.816578,-2.038152,-0.120468,-4.077483,-2.748080,1.045787,-8.971736,-7.004455,4.094691,8.807228,8.768466,5.780233,-9.795925,-7.868260,-1.771743,4.807606,-9.524209,4.752115,9.761849,-2.875853,1.965288,9.149802,-9.614296,-4.349326,7.751590,-4.515699,-0.851246,-7.711156,-3.172461,-1.143839,-8.171696,-3.797643,-2.198693,4.194581,8.163607,3.004937,0.509088,7.343090,-2.183809,0.647266,0.171992,3.320224,-1.840596,-7.893776,-5.041672,0.645959,8.828611,-2.305876,9.743962,4.542121,0.647691,-4.161224,-6.892054,-1.838420,7.713885,-4.503462,-6.705683,-1.662447,2.680695,3.244517,-5.092977,0.977790,-4.255970,5.982573,1.978595,5.853966,6.955143,-8.544349,9.579098,2.266028,-7.903882,8.934811,8.641384,2.208572,5.685129,-5.028725,7.461642,2.695681,8.234724,-8.290666,9.363472,-1.598406,7.701595,-0.186701,8.149397,7.073509,4.320737,-4.444525,-3.776069,-3.464062,-5.313562,2.543369,-6.992026,-1.957634,3.703586,-5.891344,-0.764735,-6.926874,2.739942,-9.140044,-5.020020,9.768651,-5.418475,-7.839692,4.673824,-9.045714,0.669903,-6.408997,-5.874372,-7.125006,0.774420,7.745810,2.763816,0.627313,-7.776678,2.199480,4.958565,1.432038,2.391633,-7.792498,-8.000634,-5.630238,7.527463,2.880505,6.581369,0.736979,-1.814818,-3.873855,-7.618961,6.254550,6.543766,8.658264,6.454972,3.991395,-2.330796,2.106046,-3.783667,0.978535,-0.088897,-4.499349,-5.786529,-7.764622,-4.776006,-5.042236,-3.110190,3.548211,-7.458334,-1.628389,6.082006,-6.006229,-4.678550,-7.229708,-5.647041,-9.086782,-5.856239,-0.331521,-9.258514,-6.441132,-4.783008,-8.868945,-3.790542,-2.658871,-5.692297,-4.326860,-3.117342,-3.575158,-1.415170,-5.629699,-8.802334,-8.072763,0.875213,1.139775,8.278290,-9.319084,-0.064997,6.943742,-3.423949,4.175432,-4.017007,6.868836,2.908318,6.462954,-5.475000,-1.516630,-4.970632,-6.193559,0.276602,-0.757310,9.084428,-9.703900,9.353378,-7.715765,-6.488135,-9.929006,7.437668,1.241922,6.275065,-4.930572,-9.426796,-2.086574,9.767870,-9.786520,-3.996659,-4.443193,6.797383,7.755987,-7.407671,6.772434,-1.443597,5.938382,6.435537,-2.419185,-6.394466,-2.535311,0.677547,0.670275,0.925062,0.013285,-5.866448,0.894365,6.586670,-1.080671,-0.702276,-7.206802,-3.964487,-2.831597,-6.807459,-3.541767,-0.768250,-3.917570,-5.184364,-5.795296,4.827944,4.736819,4.563795,-5.465344,-7.937279,-8.765599,-5.668774,2.322101,2.019403,-3.925186,-1.717352,-6.785612,6.062307,-6.788194,-5.236234,-9.462066,-4.717735,-7.390573,-3.324343,-0.901571,4.981567,-3.649293,5.223643,-5.631384], dtype = "float32")#candidate|4601|(350,)|const|float32
call_4600 = func_3435_call(relay.reshape(const_4601.astype('float32'), [10, 5, 7]))
call_4602 = func_3435_call(relay.reshape(const_4601.astype('float32'), [10, 5, 7]))
output = relay.Tuple([bop_4596,call_4600,const_4601,])
output2 = relay.Tuple([bop_4596,call_4602,const_4601,])
func_4612 = relay.Function([var_4594,var_4595,], output)
mod['func_4612'] = func_4612
mod = relay.transform.InferType()(mod)
var_4613 = relay.var("var_4613", dtype = "int64", shape = (13, 1, 5))#candidate|4613|(13, 1, 5)|var|int64
var_4614 = relay.var("var_4614", dtype = "int64", shape = (13, 15, 5))#candidate|4614|(13, 15, 5)|var|int64
output = func_4612(var_4613,var_4614,)
func_4615 = relay.Function([var_4613,var_4614,], output)
mutated_mod['func_4615'] = func_4615
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4712 = relay.var("var_4712", dtype = "float64", shape = (5, 13, 3))#candidate|4712|(5, 13, 3)|var|float64
uop_4713 = relay.log(var_4712.astype('float64')) # shape=(5, 13, 3)
output = uop_4713
output2 = uop_4713
func_4723 = relay.Function([var_4712,], output)
mod['func_4723'] = func_4723
mod = relay.transform.InferType()(mod)
var_4724 = relay.var("var_4724", dtype = "float64", shape = (5, 13, 3))#candidate|4724|(5, 13, 3)|var|float64
output = func_4723(var_4724)
func_4725 = relay.Function([var_4724], output)
mutated_mod['func_4725'] = func_4725
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4878 = relay.var("var_4878", dtype = "uint32", shape = (14, 8, 13))#candidate|4878|(14, 8, 13)|var|uint32
var_4879 = relay.var("var_4879", dtype = "uint32", shape = (14, 8, 13))#candidate|4879|(14, 8, 13)|var|uint32
bop_4880 = relay.multiply(var_4878.astype('uint32'), relay.reshape(var_4879.astype('uint32'), relay.shape_of(var_4878))) # shape=(14, 8, 13)
output = bop_4880
output2 = bop_4880
func_4892 = relay.Function([var_4878,var_4879,], output)
mod['func_4892'] = func_4892
mod = relay.transform.InferType()(mod)
var_4893 = relay.var("var_4893", dtype = "uint32", shape = (14, 8, 13))#candidate|4893|(14, 8, 13)|var|uint32
var_4894 = relay.var("var_4894", dtype = "uint32", shape = (14, 8, 13))#candidate|4894|(14, 8, 13)|var|uint32
output = func_4892(var_4893,var_4894,)
func_4895 = relay.Function([var_4893,var_4894,], output)
mutated_mod['func_4895'] = func_4895
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5179 = relay.var("var_5179", dtype = "float32", shape = ())#candidate|5179|()|var|float32
const_5180 = relay.const([[[-2.613137,-5.852081,0.148321,-5.467293,-8.492297,-9.670630,-5.380169,8.041750,8.890159],[2.344490,7.479594,9.024005,-4.987925,3.059763,-0.455470,-9.720021,-6.388812,9.491274],[-0.334703,-2.559887,5.647816,2.237520,-1.585853,-6.289670,8.400938,6.343159,1.547689],[8.109557,0.555909,0.453689,-8.879113,-7.693560,2.430060,-3.632268,2.684722,-1.428522],[-6.862515,-1.101847,6.409544,-3.217429,-4.833648,1.902764,-8.833738,3.204220,1.695495],[8.811961,-3.536885,-8.247824,-1.749951,9.718994,-1.765844,-2.637753,-2.934432,0.888258],[1.061421,-3.133746,8.119210,6.788849,3.354585,0.570819,8.762051,-6.579670,-5.745993],[6.801051,6.502057,-0.437803,4.977588,-0.662872,9.534987,5.478758,-3.878967,-3.090077],[3.511114,5.056020,-1.525009,6.766659,-2.668374,-6.065138,-3.934083,0.863866,-8.970154]]], dtype = "float32")#candidate|5180|(1, 9, 9)|const|float32
bop_5181 = relay.floor_mod(var_5179.astype('float32'), const_5180.astype('float32')) # shape=(1, 9, 9)
func_4612_call = mod.get_global_var('func_4612')
func_4615_call = mutated_mod.get_global_var('func_4615')
var_5187 = relay.var("var_5187", dtype = "int64", shape = (65, 1))#candidate|5187|(65, 1)|var|int64
var_5188 = relay.var("var_5188", dtype = "int64", shape = (975,))#candidate|5188|(975,)|var|int64
call_5186 = relay.TupleGetItem(func_4612_call(relay.reshape(var_5187.astype('int64'), [13, 1, 5]), relay.reshape(var_5188.astype('int64'), [13, 15, 5]), ), 1)
call_5189 = relay.TupleGetItem(func_4615_call(relay.reshape(var_5187.astype('int64'), [13, 1, 5]), relay.reshape(var_5188.astype('int64'), [13, 15, 5]), ), 1)
output = relay.Tuple([bop_5181,call_5186,var_5187,var_5188,])
output2 = relay.Tuple([bop_5181,call_5189,var_5187,var_5188,])
func_5190 = relay.Function([var_5179,var_5187,var_5188,], output)
mod['func_5190'] = func_5190
mod = relay.transform.InferType()(mod)
mutated_mod['func_5190'] = func_5190
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5190_call = mutated_mod.get_global_var('func_5190')
var_5192 = relay.var("var_5192", dtype = "float32", shape = ())#candidate|5192|()|var|float32
var_5193 = relay.var("var_5193", dtype = "int64", shape = (65, 1))#candidate|5193|(65, 1)|var|int64
var_5194 = relay.var("var_5194", dtype = "int64", shape = (975,))#candidate|5194|(975,)|var|int64
call_5191 = func_5190_call(var_5192,var_5193,var_5194,)
output = call_5191
func_5195 = relay.Function([var_5192,var_5193,var_5194,], output)
mutated_mod['func_5195'] = func_5195
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5299 = relay.var("var_5299", dtype = "float32", shape = ())#candidate|5299|()|var|float32
var_5300 = relay.var("var_5300", dtype = "float32", shape = (6, 3, 1))#candidate|5300|(6, 3, 1)|var|float32
bop_5301 = relay.minimum(var_5299.astype('float32'), var_5300.astype('float32')) # shape=(6, 3, 1)
func_2508_call = mod.get_global_var('func_2508')
func_2512_call = mutated_mod.get_global_var('func_2512')
const_5311 = relay.const([-4.535353,1.880600,-2.640550,-6.349457,-0.255694,4.751852,-1.763058,0.968686,9.621356,1.725617,9.668443,0.995449,-7.226691,2.593865,-3.939467,5.664212,-5.787454,2.815260,-2.558011,8.504104,-1.199129,-6.196373,5.619288,2.604146,-3.252867,-9.606410,9.767555,-6.917261,-8.501111,9.895592,-7.235375,5.395915,3.378132,-7.084752,-6.162055,6.724732,-8.172702,-6.875332,3.132395,6.393069,-7.442604,-9.154362,2.467843,2.845287,-6.650141,2.945045,-5.160301,-6.726338,7.529737,7.060611,-8.781161,-7.154444,-9.553821,-4.113217,1.785982,-9.452128,-0.256127,1.723549,6.008023,8.793709,-6.763937,8.799691,-3.328537,-8.874108,-5.578774,2.252650,-4.354639,8.950687,-4.121895,2.086463,0.215400,-4.768712,-6.362792,-0.669909,-9.843665,4.001684,-8.041819,6.222751,-2.682210,-5.605756,-8.230563,4.354730,-6.836670,8.669733,3.686691,-4.693776,-2.271477,-1.238968,-1.577931,8.574674,-3.809895,1.372255,4.059142,4.884748,3.202292,-2.591551,-9.608344,-2.802198,-0.493346,1.937975,-6.183890,0.433567,-4.275711,0.103037,-9.696533,-0.796206,-0.766077,6.636327,-1.796088,1.161264,-4.751186,6.401578,-4.366368,9.749354,-0.114438,-6.377598,-2.704675,6.742360,2.605621,-3.870884,5.517239,-1.866955,-9.369594,9.209282,4.315407,-8.917255,-4.644731,-4.436440,-4.104546,-6.724671,-5.044148,3.242696,-0.425402,-7.743795,-3.151807,7.729253,3.310512,6.912093,5.777865,-6.339584,7.524587,-7.532154,6.203328,-6.159955,7.770146,-0.686475,0.602573,-4.537620,-8.243968,5.379855,2.466859,4.166710,3.254263,7.887247,3.862671,7.381482,-2.850502,5.714527,-1.016122,9.301437,-1.495591,6.016799,-5.958780,9.863092,-4.931588,3.276285,6.484476,-9.511143,9.734243,9.695480,-3.444154,3.325118,-7.429657,-8.406820,6.971093,-5.577175,5.877683,5.517849,-4.770969,-9.943183,-8.584912,-4.801424,-7.257859,-9.343152,-4.563178,4.082553,-1.229713,-2.432922,4.647305,8.564653,-6.424198,-2.829309,9.894669,0.765031,-0.942682,0.130517,1.687172,-2.200464,-5.803289,5.497316,-0.556420,0.141887,-9.956145,8.443567,-1.877055,-9.089068,9.703389,-2.201111,-2.294527,-8.151500,-9.658149,3.028103,4.162529,8.634203,-0.843938,4.150084,7.284478,5.593278,-3.339327,9.561640,0.407607,8.937074,-7.927146,-4.070116,-8.816236,9.324437,-0.188554,-5.135982,-0.479785,2.119096,8.348751,5.920948,-1.802425,-5.376176,-0.708942,8.926849,0.312823,-4.118210,2.098619,-4.786004,5.741409,-0.977242,4.614911,5.551466,-8.923610,-1.765147,1.050508,1.124351,9.002927,-9.757125,3.756371,7.351317,6.407455,1.187896,-0.845765,-8.157248,3.281356,5.322657,0.262001,8.944251,-2.289641,8.232817,8.166168,9.513375,-1.198650,-0.220853,6.831281,-7.060356,0.652041,4.883814,-1.350689,4.181585,-3.441618,-4.614867,-1.976770,-8.234031,8.562623,-6.490148,-0.322620,9.577623,-4.220837,-8.891161,-5.808831,-4.623416,-8.026160,5.785940,9.982623,6.048476,-2.736647,1.500958,0.797008,1.368143,-7.442707,1.554327,6.684368,1.830221,2.715330,6.095058,2.271200,4.632351,-9.092991,-8.551254,-2.507074,9.103782,8.130624,1.189904,-5.429883,2.528761,-9.293690,3.638126,-0.342291,2.413413,4.512984,4.478193,-9.830226,-4.403824,0.855105,-3.445648,-4.861890,-8.581611,2.753004,-2.133396,-6.861813,-4.477159,6.480927,-0.711953,-0.092682,6.170513,2.580867,-1.975340,5.163122,-2.834695,7.806537,-9.704192,-7.261491,0.666150,-1.157200,-6.004981,-0.695478,-0.558181,-3.271969,6.984526,-9.016566,-2.040430,4.453242,-6.100720,-5.922787,7.284350,7.144348,8.607206,9.415894,6.111226,2.867302,-6.616117,-4.162419,1.675184,-4.612341,-5.428466,4.878050,-5.119060,5.022099,5.162715,6.609929,-4.355382,7.464280,-2.602412,-7.435292,-0.199368,7.468208,7.327260,7.765874,8.215775,2.704671,1.186833,-9.508893,7.608008,-1.677099,1.280074,-2.119164,-8.378175,-8.348372,-4.716968,0.339333,-8.248440,2.171681,-4.007694,-2.880378,-1.527235,5.762832,-2.408871,0.321891,-6.194533,-4.517910,3.207445,6.422921,-7.000838,6.747272,-9.914710,-4.745675,9.806230,7.798653,-0.276091,5.840546,4.169272,-5.878870,4.867992,-1.644598,6.970985,6.889615,1.402126,2.582095,-6.343446,-5.374314,4.588507,8.941998,-7.742406,-1.836104,-7.411048,-5.984436,6.610187,0.925150,-5.113159,-0.497534,0.569554,9.239683,-0.230478,-6.687639,3.632680,5.819102,0.784111,7.705914,0.488672,1.948013,-3.683461,-5.049754,-4.821857,-9.489472,6.192749,1.717012,-9.774866,7.897099,2.018803,-3.895326,-7.874419,4.999561,-8.492301,2.207500,-9.154179,-5.258399,-5.138224,-9.147810,-8.598231,-7.252808,4.412711,-3.480417,-3.987150,-9.455863,-0.139164,-7.443061,2.419923,-6.033831,-7.926871,3.039785,-5.551055,2.836965,-6.245591,-1.113715,-5.662898,-9.478061,-3.122614,-3.933070,-6.620898,-0.140747,5.564054,5.997780,-7.522896,-6.058659,-6.160506,9.763904,7.396731,4.362200,8.575301,5.205003,-8.372285,5.810304,-3.952626,5.964038,4.413509,9.136248,-2.507688,7.978549,0.924229,-2.439305,5.857009,-8.832744,-1.976388,9.457105,9.014172,-4.145738,-6.138339,-0.855475,0.941728,-9.554774,7.336636,1.657866,-5.430970,-4.123459,-1.802941,2.163448,4.080418,3.770588,-4.639747,8.450121,7.112497,1.035449,4.483064,-8.511408,-5.093263,3.182379,8.521117,8.395866,8.248834,9.296304,-3.994986,-4.715697,-5.439428,-4.870718,-2.437609,3.457126,4.503905,9.225501,-3.541345,9.875259,-6.244355,8.635020,7.388709,-7.815254,-1.240373,-4.324427,-1.743185,-9.756102,-3.224071,8.540307,-9.187425,-8.629287,-6.599155,0.969096,-1.602143,4.187356,0.855111,-7.445866,5.988633,-4.616139,-8.013529,8.378219,1.950351,6.358628,-0.721254,-5.239567,2.871031,-2.156117,-7.641016,0.182170,-2.723864,-8.200952,7.641961,-8.482941,8.716341,-7.846148,6.877940,-4.111451,-5.657705,9.291344,7.854997,1.527564,-9.926109,-5.968086,5.552118,1.801390,-8.181758,-4.501119,-8.755081,-3.899035,9.153369,2.560200,-5.200082,4.784306,-3.504921,6.755078,-8.489315,-9.724832,-3.020386,7.361302,-5.758914,6.843808,-5.368684,-5.745491,-7.063108,-3.174501,-0.607734,5.697753,-7.870573,3.686754,8.085294,-6.228694,0.572302,-6.703156,7.966779,-5.292791,5.680853,-1.941172,2.830467,-8.825812,0.483685,8.888928,2.525383,9.640196,9.853450,-2.304240,5.681030,-2.111060,2.385357,4.778045,-9.322721,0.974464,4.915773,-9.735933,-2.003670,3.559531,5.125795,5.110462,1.091697,-0.243004,4.843286,6.002972,1.771678,-0.563157,-1.697163,6.476632,5.863466,-8.889454,-3.332849,2.375728,-5.611536,2.052826,8.342451,-0.316191,3.791981,5.080652,7.309765,2.736029,-4.857614,2.722297,8.349031,7.384251,3.086670,-2.080589,-7.980501,7.066501,-8.333253,7.211227,8.907780,-8.357819,-1.262375,-0.566849,-7.635937,3.054519,5.383235,5.796269,4.056592,6.890108,7.778215,6.297896,8.645289,-2.160094,2.528007,1.317983,3.739269,4.861323,7.636787,0.349675,5.579537,-2.895771,7.551912,-6.789209,-0.921807,-5.949017,8.769073,-0.384739,-5.630101,-3.249304,-9.903671,-8.565332,3.979032,7.041393,7.862185,-7.375430,0.076629,7.615596,-2.319140,-3.973733,0.156237,-8.233521,-2.943436,3.940051,9.981903,-6.503972,0.119665,3.925533,-3.490722,3.467769,2.331224,-3.703170,-3.719696,-1.060954,6.125543,-1.385324,9.726213,5.015810,3.007216,-0.124721,-7.432855,-9.443118,4.863451,-3.762184,-1.861162,-4.981913,4.319539,8.442730,-4.427332,7.150968,-1.747551,0.536787,-6.765036,2.747218,3.779552,9.432167,-3.942703,-0.589176,0.703257,0.446126,-6.098970,-4.472937,-5.710109,-6.182617,6.493062,3.318127,2.578177,3.868254,1.843564,6.699986,-5.052425,6.104975,-1.389409,-6.798651,-9.372550,7.678559,7.944011,7.130012,1.854677,6.667527,1.434052,-9.264274,8.652549,-6.028698,-2.631443,6.628076,-4.518020,3.030418,-6.036392,2.016693,4.301079,-1.187996,-5.466758,9.270653,4.116224,-9.857766,6.257351,7.844384,-9.028353,5.256393,3.218719,5.489098,7.553455,-7.507573,-9.942710,9.852129,-9.459264,8.119030,6.847214,1.785835,1.800336,9.796871,-3.620682,5.840932,-3.598511,-2.973859,4.932153,-1.256251,-1.557329,9.540084,-2.875066,5.912440,-7.919466,2.853990,4.570678,-9.622989,-6.562252,4.076491,-0.066855,9.554258,3.777240,-3.049126,1.832188,-1.309848,8.777339,-1.144710,-1.599197,-5.543396,-2.711002,-0.246181,-4.714751,-5.829635,-4.352285,-5.129022,-2.010559,5.240871,8.709241,8.380774,-6.316175,-4.363486,5.637681,2.022600,-3.582411,-1.919280,2.656112,-9.036540,4.059866,-3.679932,-1.674746,-6.240543,-3.749953,6.646111,4.457437,-9.542286,-6.754638,8.709411,-3.477003,1.716907,-5.465140,8.684811,-1.858502,-2.968718,3.195244,8.347038,9.479768,-4.721845,2.185917,6.514342,-3.400655,9.021481,-8.731946,-9.859726,7.239886,-9.872280,7.733633,-7.988823,1.116342,8.977902,7.786879,9.728125,-9.712358,2.264689,2.725839,-4.003414,-1.098998,-9.723976,-0.301847,0.408315,-7.808683,-3.738313,-8.129631,8.207546,7.124742,-7.030208,4.482150,2.176235,0.314302,0.105134,2.686830,8.828343,2.322364,-8.616256,-1.914554,-7.891255,2.432790,8.568854,5.794554,-0.317327,1.286790,7.092373,-8.499786,8.994617,4.832908,-4.949517,-5.799678,4.770478,2.931767,-3.108898,9.724328,-9.661333,0.612176,-0.576844,-1.869773,5.453240,5.557846,-8.300634,5.773596,-8.951307,-1.819036,9.720280,-0.404703,3.913300,-3.316345,2.162030,-2.970014,6.904041,3.340659,-4.493414,-4.596740,-7.788037,-8.517122,3.402969,-7.966838,3.883147,-4.129628,9.412008,6.435963,-4.522553,-3.762932,5.756667,5.875337,-7.499288,4.627961,-9.241997,-7.122834,2.626646,0.356624,-7.916831,-8.370962,-3.292046,-3.086795,1.486485,-0.808196,-2.685138,-5.545996,0.004785,-4.019698,-6.858380,-5.620228,4.870133,1.014147,-4.179913,1.384092,-8.864997,-2.987700,-1.512632,6.473170,-7.596717,4.430108,-8.692008,-9.908434,2.073007,-8.112547,-9.512841,-0.748820,0.657227,4.690771,-0.068281,8.307799,-4.416911,2.902747,-9.770007,1.932380,4.564821,4.929283,-9.234191,1.922578,-0.885901,1.923478,0.246931,-0.194510,-2.312891,-4.590509,-5.811009,3.318309,9.683329,5.326290,4.465995,-5.034874,6.731360,0.896623,4.830549,4.351825,-3.277356,5.567000,-7.827865,-8.654096,6.435090,8.861720,-3.516760,-0.408015,-2.266077,-5.963966,-7.560651,-2.222200,-4.436587,5.509616,-0.627215,-6.757426,-0.422480,-5.015413,8.173020,9.986143,7.526986,3.028139,5.931005,3.874866,1.687538,-1.734388,-1.414197,-7.027633,-0.560000,5.654914,-1.168586,4.889390,4.707790,-0.929827,-7.836342,9.788853,-1.164790,-7.920803,-2.908168,4.672504,9.740297,-6.524642,-4.197729,-5.260310,-6.467017,-4.876127,3.054227,9.776649,6.049028,-4.971624,7.806108,-8.229741,-6.491201,-5.567345,-7.917150,-3.176228,9.994184,-2.177514,7.600281,-9.101830,-5.458009,5.621202,-7.364743,-0.292103,-5.759168,6.698801,-5.529604,2.775950,-1.758702,8.087912,-4.442526,-2.696653,-8.935927,6.708510,-9.968899,-9.366692,-1.500018,-0.440536,-6.020813,8.863643,6.787803,5.549137,-6.702901,-0.524643,-9.830273,5.925697,-9.463104,-2.038715,-4.512708,-8.341143,3.227663,7.249515,-4.048513,-2.520911,-4.497499,2.229156,-2.994009,2.761128,-5.744380,-4.528112,-8.565621,0.758738,2.926027,2.533240,7.804060,-0.330543,-2.362493,8.818269,-6.570191,-4.976857,5.465174,-7.165356,-1.394550,-7.076744,-0.040762,9.001938,-8.445002,5.565986,-1.630134,-7.957675,-5.859676,-8.691194,-7.180532,-6.272989,9.873260,-2.023507,-9.946487,-0.114764,-0.395420,5.581337,0.802160,7.070766,9.462789,-2.565849,-0.880118,-5.257338,6.187018,1.747658,-8.239319,-9.824402,-1.551562,-8.906340,-9.592264,5.198508,3.285558,3.700309,2.678781,-8.580211,1.269368,-4.471467,2.226288,-0.529916,8.190128,2.292142,4.540424,8.584535,-0.396651,9.119166,3.581114,6.504314,1.560184,0.146145,-2.628031,-8.224254,-7.510400,4.772392], dtype = "float32")#candidate|5311|(1170,)|const|float32
call_5310 = relay.TupleGetItem(func_2508_call(relay.reshape(const_5311.astype('float32'), [9, 10, 13]), relay.reshape(var_5299.astype('int8'), []), ), 1)
call_5312 = relay.TupleGetItem(func_2512_call(relay.reshape(const_5311.astype('float32'), [9, 10, 13]), relay.reshape(var_5299.astype('int8'), []), ), 1)
func_2369_call = mod.get_global_var('func_2369')
func_2372_call = mutated_mod.get_global_var('func_2372')
call_5313 = relay.TupleGetItem(func_2369_call(relay.reshape(var_5299.astype('int8'), [])), 0)
call_5314 = relay.TupleGetItem(func_2372_call(relay.reshape(var_5299.astype('int8'), [])), 0)
func_3153_call = mod.get_global_var('func_3153')
func_3157_call = mutated_mod.get_global_var('func_3157')
const_5316 = relay.const([-8,9,9,6,-9,10,-2,10,5,2,-7,-10,-10,-2,-2,1,3,10,3,-9,-10,-8,2,-6,3,9,-5,-4,3,-9,10,9,-10,-7,-4,7,5,-6,1,-4,-8,-6,-5,9,6,-4,-8,2,-1,-2,3,-9,-3,7,-5,-10,-7,7,7,-9,1,-9,-8,8,-8,-4,-10,-3,-6,-8,-3,-5,7,10,7,4,5,-9,-6,2,-9,-7,9,-5,10,7,4,-4,5,2,3,10,-3,1,-7,-3,9,-9,-2,5,-8,5,-6,2,3,3,-3,-6,-1,-6,-9,-7,1,-7,8,4,4,-9,-10,-4,-6,1,-8,-6,5,9,10,-2,-2,3,3,-10], dtype = "uint8")#candidate|5316|(132,)|const|uint8
call_5315 = relay.TupleGetItem(func_3153_call(relay.reshape(var_5299.astype('uint8'), []), relay.reshape(const_5316.astype('uint8'), [11, 12, 1]), ), 0)
call_5317 = relay.TupleGetItem(func_3157_call(relay.reshape(var_5299.astype('uint8'), []), relay.reshape(const_5316.astype('uint8'), [11, 12, 1]), ), 0)
output = relay.Tuple([bop_5301,call_5310,const_5311,call_5313,call_5315,const_5316,])
output2 = relay.Tuple([bop_5301,call_5312,const_5311,call_5314,call_5317,const_5316,])
func_5318 = relay.Function([var_5299,var_5300,], output)
mod['func_5318'] = func_5318
mod = relay.transform.InferType()(mod)
var_5319 = relay.var("var_5319", dtype = "float32", shape = ())#candidate|5319|()|var|float32
var_5320 = relay.var("var_5320", dtype = "float32", shape = (6, 3, 1))#candidate|5320|(6, 3, 1)|var|float32
output = func_5318(var_5319,var_5320,)
func_5321 = relay.Function([var_5319,var_5320,], output)
mutated_mod['func_5321'] = func_5321
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5587 = relay.const([[[8.281988,-0.187398,7.543101,5.596660,7.503516,7.968763,5.903249,5.423478,2.937035,5.731042,5.684037,7.687599,8.749133,-1.516429],[3.469608,-1.004103,0.925993,-9.258956,-6.544134,6.768450,5.461753,-1.719651,6.387677,6.123079,-9.096196,7.162897,-8.545047,-6.357019],[-4.956396,-3.204697,-5.203284,-8.224769,4.428698,-7.517642,8.948369,1.989162,-5.093086,9.094614,5.060606,2.759305,3.870327,-1.598533],[4.355246,-6.601167,7.501175,5.192242,7.621867,2.581791,-7.791662,-6.344612,2.171241,1.959660,4.578514,6.861743,9.846983,4.257131],[-5.023192,0.536278,-3.194034,9.822589,-6.235416,3.612329,-8.761418,-6.220815,8.224205,-2.154493,-8.233159,-3.735838,9.998687,8.137121]],[[-4.353721,3.240442,-3.323001,-6.831843,-1.630195,-8.625652,2.670067,-0.303677,-9.582946,-5.796022,8.623355,2.627242,-7.902055,-3.391347],[3.854314,1.263358,-3.929207,-6.460498,2.388879,6.397990,-9.399320,-3.571475,1.589327,-0.305112,0.149296,0.840770,9.104290,-7.732683],[4.167081,1.502053,-4.605992,-2.156605,-0.540109,3.329673,-2.331747,1.955089,-8.513842,-8.620492,5.456652,-1.829455,8.923198,8.865911],[-0.104803,9.270605,-4.799167,-8.376970,2.465364,3.729050,-1.965208,8.241236,9.579404,6.788862,-5.837652,-7.234198,-1.622726,-4.756804],[-7.498806,5.614832,2.366178,-6.434040,9.619418,4.377493,-9.764579,-1.128628,0.718898,5.329256,1.078752,5.422469,-3.883460,9.330955]],[[-2.417457,-8.384086,1.691215,6.212673,-7.711382,2.177889,-8.332575,-0.617074,8.125699,5.064206,-4.207868,-6.144705,-5.729138,2.136123],[5.930438,1.246375,-5.689074,-4.762935,8.652610,5.949512,-8.960493,-6.527028,1.701862,2.482870,7.220038,0.339354,2.295075,1.488007],[5.075608,-0.830327,9.523727,-6.028711,1.227268,-7.521712,-9.950196,1.443596,-0.837654,-2.060230,-5.115591,-1.601142,-9.538227,-7.748308],[3.517195,1.549818,-2.300962,1.838577,-8.261230,-7.665668,0.310275,-4.111787,-4.724088,-4.479570,4.093506,-6.215466,-1.866223,-8.522927],[-2.455326,-8.219338,-1.317706,1.716401,7.034422,0.748980,-3.817005,7.269318,-1.100327,-6.082037,6.697019,7.990761,9.624816,5.964920]],[[-1.396144,-8.319870,-3.752951,8.905400,7.227160,0.727420,0.636020,-7.720232,-7.924326,7.775421,7.929730,4.401822,-4.074495,-2.986866],[-1.103150,5.119450,7.898125,-9.005583,-4.161964,-9.423609,-3.069196,-3.783224,-6.575711,0.255063,4.829248,6.206778,-5.493729,1.357414],[0.320723,-0.046364,0.342918,1.637943,-8.816133,-7.396030,0.283617,-4.671097,4.327781,4.794694,4.377495,-6.316535,-7.532815,9.411558],[1.221575,9.803955,-7.585413,-6.096343,-6.477945,-3.342765,3.316727,2.127499,-3.120035,-2.807411,5.454235,8.597576,1.304486,2.092451],[-8.204117,-1.933936,6.669637,-5.274723,-8.487294,-7.503806,-8.311699,8.567131,3.838898,-3.252710,-1.551316,8.441448,6.832522,-8.652285]],[[5.746797,-3.314699,-0.818530,9.747700,-6.069126,-1.410286,-2.467811,8.705592,3.582830,6.632149,-0.769116,-9.590571,-9.726353,-1.601307],[0.881894,-8.528115,-4.293464,-0.630566,-8.480776,-7.267244,7.794713,2.223096,8.148118,0.560158,0.558203,-0.606345,-9.807954,-3.319042],[-6.153492,-7.725440,1.756515,-8.788782,6.383864,-9.365475,-3.341414,7.993040,6.546430,-4.320289,9.416670,-9.177090,-1.305238,-9.951143],[6.948890,4.802621,2.381823,6.289260,4.883919,-8.769717,-8.876137,-3.870736,-0.703987,5.137438,-3.319203,-9.679114,2.846455,-6.976582],[9.431901,-4.765576,7.623076,3.603643,-7.414740,7.592450,-0.717914,-2.597881,-0.210524,-2.509051,-4.141316,1.902441,2.077321,5.639447]],[[-2.130688,-1.175685,-5.437774,-8.446694,-6.483500,1.345609,7.382986,-1.185177,-2.453704,-4.010002,1.001975,2.515651,-2.625431,-5.116040],[0.494043,-8.151517,6.073910,1.625458,-4.972429,2.760121,1.487051,8.397533,9.501156,6.557231,-3.520592,8.999275,-2.467659,-1.780297],[9.879318,-7.247048,-7.817292,-8.443929,7.170247,2.120470,9.843842,-7.415525,9.914407,8.711073,-3.107812,5.996619,2.616382,-0.743997],[9.110020,-6.802154,-3.254671,7.477962,-3.640450,-5.741031,-5.882776,7.228184,9.323955,-3.948728,5.999963,7.860829,-8.325960,-3.046587],[4.156798,8.050769,0.436950,4.176227,-8.925573,-8.424592,-3.677055,-2.685971,8.796549,5.955243,-9.534618,2.845847,4.638176,4.693423]],[[7.427036,3.148060,-1.881440,-8.637450,2.699601,0.753408,-0.300156,-0.367049,5.389976,2.568558,-8.068296,2.521533,1.127482,-6.078014],[6.578470,-8.714745,6.383496,-0.569044,3.308699,-0.767867,-5.978467,-6.946193,0.283594,-6.070215,-2.802030,3.408090,-7.379330,0.609626],[-7.929296,-7.071620,1.338646,-7.044427,2.736822,-5.328881,5.669850,3.416913,4.551623,8.203345,-7.240654,1.883402,9.155281,1.057240],[8.492327,4.846064,-1.002900,0.263518,8.511198,-7.834844,-6.217099,2.894730,8.568357,-4.654461,-8.597193,-8.331596,5.999603,3.004113],[-9.618942,-9.956661,2.549415,2.799420,7.635846,3.499615,0.546783,1.771717,0.840188,1.416847,8.018291,9.306891,4.883938,-8.355611]],[[7.606241,-0.332114,-8.763280,8.423471,-8.916101,3.658249,2.129014,-3.454879,6.437828,2.259003,-1.982248,1.932727,-8.869215,-5.969614],[-5.891399,-4.153457,-3.975423,-8.947699,1.253876,3.401712,-9.275280,4.054001,4.121757,-8.159662,-6.821017,5.757005,0.422173,-6.765726],[0.429158,3.052153,-8.084250,4.304868,-2.522986,8.350971,6.753276,-1.957338,-3.846739,-3.209711,1.173401,-5.510033,-8.173500,2.406526],[-7.905493,1.945141,-2.905715,-3.837310,-2.052805,9.341401,6.735329,-4.135804,7.983760,-2.822269,-1.213750,-8.263545,-8.965501,2.715809],[-7.338411,-4.881206,2.286558,7.501824,-6.100025,-4.499641,5.332074,-7.084297,-9.013044,-5.285731,8.093843,5.200783,8.523405,3.578532]],[[-0.693009,-2.449985,0.569791,-1.225203,-5.327055,-3.228626,2.445856,0.825762,2.820287,6.089814,-1.350405,8.770126,-6.652077,6.507460],[-1.631668,3.567514,-2.464439,-9.005088,-7.411666,-0.350172,-7.149606,-1.287378,6.608178,-8.118082,5.956905,-8.333807,7.598290,3.453277],[2.299529,5.663489,0.409619,-4.945248,-8.880743,-8.371033,2.488711,1.155332,3.409152,0.095580,3.769197,9.565212,3.678379,-8.325435],[-3.944882,8.588944,1.735411,0.930515,5.943124,-6.223663,-1.449946,4.173763,5.534458,9.125256,-5.454760,6.672528,0.992525,-9.918311],[-0.401706,3.352363,-4.353469,-5.635871,-8.869693,-2.230941,-1.821709,3.940793,1.130892,-7.530356,-3.534302,-9.388896,8.929511,-6.485057]],[[-2.129839,5.262652,-7.312423,1.524751,0.302379,-6.132390,-4.111121,-6.544906,6.724303,4.250916,-8.009387,1.864630,-3.813921,1.606963],[5.351414,-9.081140,-7.911191,-6.225376,-8.168051,9.935910,-6.177257,4.770949,-0.749958,3.529959,-7.287736,0.131496,-0.486663,1.899934],[-9.419148,-4.241127,-5.746780,9.727270,3.974119,7.792392,-2.023947,5.211394,-1.872207,9.819681,-7.805453,-2.088757,7.425012,8.276505],[-4.634965,-4.484308,9.993546,-8.550962,6.527230,-4.309707,-3.486424,6.622141,-8.026837,6.525736,2.656815,-4.922016,3.880454,-4.166332],[-5.348667,-1.980052,-0.215689,9.844495,-7.729804,-2.207280,0.365588,-9.712743,-7.975019,-9.054183,-9.060957,-5.226153,-9.958231,-4.375029]]], dtype = "float64")#candidate|5587|(10, 5, 14)|const|float64
uop_5588 = relay.sigmoid(const_5587.astype('float64')) # shape=(10, 5, 14)
output = uop_5588
output2 = uop_5588
func_5599 = relay.Function([], output)
mod['func_5599'] = func_5599
mod = relay.transform.InferType()(mod)
output = func_5599()
func_5600 = relay.Function([], output)
mutated_mod['func_5600'] = func_5600
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5599_call = mod.get_global_var('func_5599')
func_5600_call = mutated_mod.get_global_var('func_5600')
call_5621 = func_5599_call()
call_5622 = func_5599_call()
func_2022_call = mod.get_global_var('func_2022')
func_2028_call = mutated_mod.get_global_var('func_2028')
const_5625 = relay.const([5.339349,4.245640,5.511777,-9.000983,2.460397,7.455753,-4.823781,1.666550,-9.664757,-8.866161,4.763156,7.764625,3.340190,-2.699086,2.701558,-2.122614,-5.157331,9.924074,6.845327,-1.034082,3.326111,9.745468,-7.328382,5.027461,-8.654298,9.197128,-2.736727,1.413857,3.158342,0.725861,5.168123,-5.980600,7.965835,8.523747,3.697864,0.156106,5.599713,-3.277625,2.695272,-8.476741,2.115940,4.693874,-6.909830,8.655480,-5.714742,-2.950843,4.075010,-8.519735,1.749405,4.938062,9.907954,1.513538,4.455757,8.045546,-5.430091,3.357392,7.827183,5.373313,3.605983,-0.202308,6.918096,9.591814,5.737808,4.732513,5.781753,7.562068,-1.143780,1.145335,-3.933756,-9.918813,-6.523389,-9.470985,5.507504,9.846030,7.581956,-1.845941,5.210610,6.768451,5.344338,7.558119,3.417649,-8.071955,5.785596,-5.450688,-0.675521,-6.601012,-8.217654,-5.908032,9.221293,-0.309305,4.282350,9.288532,9.183060,7.836852,-9.793201,0.390501,5.263815,0.297953,-7.837789,-5.541805,-8.071927,2.374453,-6.716173,-2.906497,-5.575954,-5.534244,-7.229463,-4.523943,-9.070637,-2.398171,-2.329019,-6.874546,9.825415,-4.727615,1.948147,-5.988089,-2.245955,-2.957737,-4.767509,-2.555596,-3.826184,-7.314690,-4.708325,-7.901862,9.913576,1.949157,-2.213217,8.664979], dtype = "float64")#candidate|5625|(128,)|const|float64
const_5626 = relay.const([0.238756,-1.374023,-8.339168,-8.270028,5.230888,5.275907,9.478225,-3.946610,-1.413558,1.357419,1.220567,5.035389,8.490130,-4.246379,-3.159364,3.650140,1.805715,0.140497,-9.294697,-1.619532,-6.439172,0.462104,-1.600610,3.011400,2.362487,-0.327342,2.348602,-1.042959,8.278473,5.440921,-5.725343,7.181283,-7.148539,3.469527,-5.670420,-5.400398,6.691753,5.383777,3.216394,-1.602749,3.444062,7.999232,-4.678557,7.923632,4.711097,1.348093,8.378113,5.868349,-5.547326,-3.949323,6.886169,9.569638,1.152751,-3.101627,-7.919746,6.876767,1.696006,-0.503672,-0.695427,2.192871,-1.015221,9.483140,7.008706,-3.964343,1.192786,9.866691,1.435082,3.343033,1.730553,-4.493624,-2.096368,5.109045,-0.802714,-4.692336,5.050064,-1.618055,-8.547587,-3.273328,6.194054,0.773990,0.147508,2.390409,-2.632977,3.109410,-3.807002,2.218573,-6.991547,-3.943987,-3.274652,1.457735,8.829107,3.338520,-5.570640,3.196369,-6.871319,-9.048119,9.046821,0.607441,4.655919,7.254141,-5.517698,-4.446336,5.377457,7.704446,0.851996,-9.971641,6.530563,4.994252,5.845124,6.099555,4.193193,3.491440,8.782165,-5.728271,-0.745048,-9.539140,-3.809268,1.839692,3.504878,1.717024,9.625434,5.231634,-1.957988,-3.998364,-0.444684,7.371513,-3.592034,-8.642338,2.861819,-7.594430,7.127803,-1.837547,9.534946,7.736799,3.329619,-5.115917,-0.982326,4.613019,-8.243900,-7.505169,9.113292,-5.051558,0.701384,9.737149,-2.004674,-3.759392,-8.316476,2.490915,-8.097233,-6.772666,-9.235993,-8.623969,1.169158,1.500357,-3.714264,-6.890971,0.815347,7.588059,8.956084,-7.291291,-3.349035,5.930337,2.717721,-2.493401,-9.102442,6.828870,5.590392,4.426613,8.967770,-5.546184,4.979033,4.678867,-9.349600,2.345331,3.910789,5.987645,-7.341215,-2.942766,6.706307,3.336450,-0.644012,-4.253289,-6.547377,-8.008767,-6.502377,3.915340,9.903330,7.400886,2.629438,8.596158,-7.119554,-5.568707,-7.124170,-9.166964,-4.616848,1.505013,2.039438,-4.456342,3.993787,6.869858,-9.673927,7.951996,-4.361925,6.926306,0.202870,-9.162922,7.502704,-2.632126,-5.289483,7.511697,-0.437323,4.439477,0.316378,-0.444728,-2.991741,-6.068728,-7.830308,-1.585898,-7.047282,5.723127,-7.827975,3.271520,-3.731048,4.919483,2.653334,5.762728,6.004443,6.297002,9.266782,-1.731527,0.722846,-8.217104,-9.609737,-7.657449,-9.370543,8.483642,-1.396278,-1.730193,-2.075070,9.553491,-7.310204,-3.291561,3.430956,-0.885208,6.065690,-4.558806,-4.511960,-6.659464,9.581681,2.256221,-5.625756,-2.431660,-6.066399,-7.782750,0.559140,-7.621400,-0.476406,5.133747,-8.785479,-1.826541,-2.417014,-4.203715,0.177964,-9.542935,-5.877994,-3.196536,-3.340585,8.263565,9.612984,7.429763,6.608592,5.668480,-9.491083,0.148036,-8.904568,-7.341009,-0.450813,6.300715,-5.237795,-2.451458,-3.934027,0.875180,0.348186,4.247485,-4.334595,3.456352,-8.264181,-7.067822,-1.745102,7.559281,4.915534,7.497710,-0.379315,-9.578173,-0.049429,5.496765,9.286276,8.275018,8.435820,-2.620805,-8.456480,7.488521,-6.278739,3.044384,6.397962,8.154114,9.861614,-5.331916,-5.548265,-8.732916,0.164333,9.523965,-5.358508,-8.100622,9.346422,-7.755153,-7.773602,-0.305774,1.939172,1.752362,-8.422946,1.087650,-2.811579,1.245463,-6.796483,8.542748,-3.994011,4.729893,-6.281215,-7.926140,-3.334333,4.416844,6.963834,6.613306,5.358313,2.017246,0.685831,3.774486,5.609059,-8.033601,-8.361264,3.564571,-2.996711,-7.873896,-9.972948,-6.574974,2.222531,-3.868704,6.049950,0.506485,-1.383361,-4.718291,0.205702,0.495413,5.656486,2.063312,-5.358732,-4.820507,6.139617,3.369030,8.620935,-2.616917,8.061531,9.632436,-9.231166,0.205602,-9.092852,-4.281672,-8.482158,-5.559934,-1.024249,4.292519,-3.220874,4.144562,-3.969726,-0.594495,5.527492,-9.843427,3.001128,1.864415,-0.065061,-3.639234,1.959010,4.184341,6.616822,5.188629,3.961514,-9.135132,-7.621045,2.317163,-0.100795,-0.769867,-1.093897,-1.050134,5.490777,6.508538,-8.967133,-7.846220,-2.580510,8.909897,8.836570,6.567251,-2.604953,-5.895417,-4.991329,8.717170,3.919938,-2.108605,3.662846,8.881582,-7.032669,-9.233054,5.539227,-4.727640,-4.156545,2.489676,-5.623279,-9.432079,-4.133370,4.427946,-6.616759,4.652268,9.437917,6.678177,-2.784145,1.097438,8.658656,3.456399,-6.717241,3.927532,-6.935300,-5.584469,8.359955,8.329991,7.215471,-5.392066,6.880808,-1.040174,8.319963,9.393460,-0.198718,7.788919,8.828935,-5.816755,-1.681858,-4.426467,-9.620284,-0.183934,-7.964981,3.705423,-7.137113,7.717790,4.828621,-9.313926,-6.793858,-7.563888,-0.537668,-1.392714,2.935498,4.638622,-5.430616,-5.324580,-1.572493,7.831606,-7.834918,6.646154,-9.314918,-1.377646,-4.865935,0.988796,9.687290,5.588960,2.701500,2.091656,0.930150,-1.339757,-0.465770,-2.731781,5.601704,0.699795,7.765281,7.978901,-4.404126,1.365830,-5.349347,0.886763,1.942130,-1.761758,-9.825197,2.717360,-9.013407,-0.236943,-0.286049,-3.688294,-2.265557,2.202115,-6.696548,3.722778,-9.752541,9.365919,3.372698,-5.317032,6.978159,9.039850,-8.570043,6.426698,2.007099,-5.708416,0.318138,4.076045,-5.980891,9.274128,2.115527,6.448651,5.527340,3.160308,7.869770,7.139168,-9.700226,8.581037,5.808504,1.798659,-9.102048,-2.228601,-7.601293,2.994820,-5.995493,3.203035,3.785929,-1.134883,5.189620,-6.606019,1.987279,-5.685098,-1.516278,7.840694,-6.422879,-7.638814,-8.945524,-2.723610,2.380271,0.158387,-6.794985,4.407500,-7.391267,6.766427,9.283312,-2.226358,4.770658,-0.404023,-5.269414,-0.069992,0.422564,8.480945,4.717361,-2.218204,8.135548,2.832966,2.064257,-2.653952,-1.986838,7.617452,6.036470,-4.151935,-4.438589,-3.710548,-1.417509,-0.856738,-2.307710,3.115996,9.439344,-4.215260,-2.198951,3.321331,-3.189873,0.507676,3.625031,8.021107,-1.159980,4.932122,-9.268825,-8.586894,-0.362336,-7.772138,-8.624436,1.653387,-8.979757,1.302712,5.742655,-4.120001,-7.638459,-9.127777,-2.804347,-0.636560,5.633182,-2.428474,8.389350,2.212138,2.355543,-4.584725,5.930988,6.520246,4.025295,-1.161731,5.610246,7.550761,-0.849112,8.696382,5.315545,-3.413176,-4.296473,-4.952104,9.188288,1.465759,-6.969812,-1.326295,5.825661,4.579807,-2.275330,3.733158,-6.816419,6.753082,-5.752268,0.943841,-4.130568,1.121601,-3.115882,7.615555,1.980898,-0.405083,-9.093898,9.468049,5.147108,6.336316,7.881239,5.194263,0.733984,-8.555453,-9.432323,9.871802,0.372569,5.522201,-9.016383,5.230840,1.870314,1.541970,3.755149,-1.586424,3.963269,-2.337463,-4.190605,-7.045030,3.668477,-6.138048,9.609825,-7.670320,-1.222312,-9.084534,-5.861149,-1.746852,-3.348790,-1.104689,-6.622340,-5.916714,-7.559118,-2.463175,-2.511142,-4.295449,-9.647037,6.913186,-6.210929,-0.040036,3.724272,3.714007,9.837791,-9.946312,-6.068667,1.059091,7.261486,-2.948682,-1.445101,-2.927722,-2.179338,-2.885326,2.324482,-6.284184,-3.995763,-4.689037,5.226096,7.539022,4.982829,-2.876625,-3.183698,1.204079,1.381528,7.140531,-1.970606,7.780863,-5.196207,1.169434,5.968357,1.650655,0.484524,-1.939477,-8.811691,4.279346,9.499227,9.661056,6.479293,5.111590,-0.847678,-3.756208,-0.082556,0.507134,-7.949459,2.401319,-9.366046,0.978032,-6.667359,1.843742,3.586853,4.352717,-0.379028,7.337646,2.141397,3.996548,0.989380,-5.879474,8.253250,7.075727,7.186926,4.666825,1.761830,2.791782,-7.340148,-2.666129,1.065116,-4.563615,-9.557625,1.474787,-7.918143,-2.013506,-3.423383,-6.879446,-9.713912,7.419737,-0.035061,-9.859958,9.388570,1.530365,-8.452463,-5.837470,2.774103,3.001709,-7.483094,1.528354,4.668632,-2.132052,1.010041,3.667352,-4.534858,9.980640,-6.442009,9.683449,1.092333,7.812804,-9.513903,3.545574,1.534279,-1.052593,7.365581,-5.192363,8.307067,-7.238464,5.961154,-4.169392,7.224490,-5.816175,1.964660,6.448165,7.212710,-7.823188,-2.886851,1.454115,2.560550,8.625797,-5.105091,2.883846,0.624192,-9.316408,-0.014633,-4.676493,-7.084340,4.721053,-5.551191,-1.834461,0.485195,-9.348135,-9.559798,7.908135,0.738720,-8.701015,9.590753,7.812304,3.845611,6.571043,-0.443916,1.931006,7.487186,8.251003,-6.440264,5.633175,-4.730527,1.861515,1.230569,-2.760163,-4.706946,-7.718474,4.001674,-0.622020,3.404849,-5.689847,8.349790,-2.382652,-0.150686,2.994909,5.494505,-1.115125,-1.641025,-5.371415,6.115380,-0.401157,6.366041,5.708852,-4.313259,-4.997122,1.861171,6.010671,-2.930663,6.710795,3.809689,1.380752,6.028269,8.736245,-5.635447,-8.610667,-6.252563,7.588059,1.392984,-9.546322,-6.660766,-2.840538,8.644622,-1.766477,0.921121,-8.383500,-9.657495,-6.210035,-5.551038,7.435458,2.020500,-4.727073,-0.107392,-3.382857,-7.669635,7.585576,5.138855,-7.133236,-6.824594,-6.444091,2.719266,-4.456627,7.089254,3.679232,-8.034640,-6.297011,-5.545155,-9.633132,-1.942541,6.937058,5.418626,5.803979,-0.528279,-5.280745,-8.189518,-5.970010,1.046227,-5.295472,4.436231,-7.695745,-2.700674,-4.705696,2.920577,-2.985894,1.500973,-7.873781,-3.317006,9.273182,-6.455091,2.264457,-8.356687,-3.642895,6.563611,-4.487084,-5.784320,-6.763698,8.676674,-7.900308,1.217605,-2.974756,-1.525017,-2.285675,-2.269467,0.503317,9.086353,-8.091131,-1.863595,6.007072,2.244520,7.925536,1.269664,-5.531316,-1.230177,5.439394,4.819067,-6.020095,5.716382,6.266640,-3.901552,-1.059523,2.053185,9.634884,4.907389,0.132645,3.672309,-9.713493,3.750858,4.936594,7.244704,7.010260,1.990381,-3.221272,-7.678313,-4.855421,-0.451911,-0.325117,6.989853,-2.801746,8.797237,6.310184,-7.873609,7.387273,5.516370,4.836498,4.993450,2.583597,-8.361898,2.528838,8.503432,9.602548,-6.083186,-1.056104,5.886530,-8.662258,-3.969115,8.288233,-3.143139,-8.448042,-1.044038,-9.649487,7.244226,-2.614390,-0.848959,-9.788213,4.978264,6.909947,-4.411616,-4.401803,-8.413218,-1.779567,-1.234439,0.157532,-0.479908,-3.745958,4.025812,-2.825377,3.824047,-1.983822,6.412846,7.422048,-7.863093,-0.989440,-7.683602,7.401581,-9.907121,-6.418101,9.350003,9.926145,0.028302,-3.954104,-6.758553,9.618487,4.209988,0.759013,1.269589,-8.070054,-7.801030,-3.141652,3.689933,6.800675,0.332752,-4.982362,-2.741434,-5.513597,-9.643226,-8.306230,9.446302,-2.388078,-8.814876,5.814904,-3.650651,0.779015,0.942215,-0.458802,2.543568,-5.315423,7.265799,-5.764542,-5.734517,2.367547,7.258576,2.405701,-3.507019,-5.707020,-6.902334,-9.962311,8.778347,1.923507,3.043416,5.116229,2.398350,7.396560,-2.998467,-0.354902,-7.192432,3.501500,-1.957138,-4.932796,-9.843663,4.791271,3.240897,-4.810968,9.287410,9.122794,4.817488,-4.013805,-5.384189,2.357216,0.565344,2.008074,4.470086,5.294650,1.748086,-9.225760,-3.231110,-9.576578,4.917764,-0.589931,-2.065234,4.933944,-6.651992,2.953598,6.933368,-8.118007,-1.268286,-1.913178,-6.784654,9.237250,-5.611253,-3.757727,7.539936,-3.656314,1.817291,-6.460711,-5.989766,3.359263,8.519907,1.912423,7.658740,6.951811,6.411195,0.882948,0.630328,8.398520,8.813009,1.179101,2.886334,1.704820,-2.801343,-9.557631,-1.732245,-2.611545,-9.604412,-8.326385,3.677468,-2.053365,-8.161621,-3.255087,-4.740376,1.218178,0.895955,4.977317,-3.773622,1.105314,-5.524026,1.166534,4.637990,-3.563730,6.427366,5.995547,-2.641756,6.941681,-4.242943,-1.318291,6.059181,-4.488232,-9.431932,0.591829,-9.176950,-7.800752,6.710379,4.322130,7.557583,-1.714463,2.781876,7.644892,8.570200,-4.836388,-4.622845,1.678881,-0.564075,0.664330,6.021653,7.761177,2.216445,-4.836859,2.371750,-1.094506,3.321606,4.525789,-8.380358,-4.401363,2.090213,1.877204,5.929022,2.986223,-3.218974,0.735734,-4.001242,-2.946155,-4.047656,-7.912472,-8.109169,-3.053841,5.038587,-6.362545,-5.276573,-3.416125,8.936526,2.716063,-1.811467,-2.789727,8.184498,-5.996587,-6.237231,-3.834564,7.050639,-1.934880,9.916552,9.113562,-9.468882,-9.111181,-4.483739,-5.870111,0.081630,-3.499692,8.952203,-2.594011,-3.506965,-0.743624,0.068674,2.788541,2.545208,3.616576,-1.335347,4.028620,-7.950688,6.830706,-4.082713,2.032824,-3.779504,1.253584,-2.821306,-5.883638,-6.412699,-6.987440,4.357185,-4.921588,0.298205,9.335172,-4.409891,3.195000,9.892593,3.890480,-3.708015,5.200497,1.560483,-6.326528,-3.880974,-6.657063,3.713033,3.529847,8.072794,8.494149,3.012381,-4.546057,-0.017502,-0.408853,5.079534,2.604930,-3.048652,-5.285689,-3.952466,-0.705224,1.404744,0.776916,4.449520,-5.688706,4.374510,5.505939,-4.973346,-6.857815,4.798855,-3.378279,2.059294,9.577844,-3.402571,7.549003,-8.742992,-4.445406,-2.556777,3.639132,-3.234059,-2.229338,9.565750,-3.991308,-0.887925,-2.112779,1.795649,-3.135827,8.776029,9.142144,6.254796,-0.674306,-3.623415,0.177910,-0.949237,-0.678967,-1.549996,-3.251225,-4.948923,-0.622695,-7.491369,8.749607,9.035393,-9.656846,2.947019,3.165257,-1.962962,-5.746569,-0.598993,8.442136,-7.724494,2.063792,1.600396,9.982838,-6.127812,-1.663727,-1.903284,-4.234365,9.776973,-4.093295,-3.160320,4.500733,4.142841,1.108811,5.505380,2.202258,-0.753095,0.880683,-5.316273,-0.387879,-7.148444,0.443285,-3.452989,-6.908062,-5.440059,-7.860846,-1.119376,3.650832,5.599605,2.679718,-5.060320,3.916594,1.977487,-0.411950,3.864607,-5.260243,5.768186,-8.296105,-9.062600,0.442284,-4.565275,3.655471,2.492681,-5.238408,-3.596468,9.060015,-0.142788,1.925378,1.478889,-6.056817,-4.831603,-9.650003,-3.752849,3.969082,-4.712678,-9.920584,-2.858251,7.447651,-4.880301,3.811820,-5.730835,6.310841,3.548348,-7.452903,-9.452100,0.735998,-4.052440,-9.741149,-8.796588,2.046093,-8.671404,1.299036,4.160801,-7.137498,5.416825,-3.410747,7.311807,-6.751388,3.930414,5.728429,5.866273,-4.887253,0.494696,9.872760,0.182333,-3.270130,-8.332445,-0.205892,-8.474600,2.802695,-3.261223,8.190353,-6.085915,-0.302712,6.428303,6.446791,-7.619954,-3.898119,9.142284,-8.045443,-7.676057,-6.080227,-4.134665,-6.617649,-9.800612,-6.554491,-5.870984,-9.128397,-3.356215,-4.179516,-2.966479,-2.249365,9.820982,-4.686595,-5.550557,1.080406,5.744364,1.236892,7.174933,5.939165,-8.109203,-1.755405,0.482754,4.402572,-4.878221,6.816784,1.170794,3.301792,-9.921788,1.963595,-3.097620,0.416567,5.168506,-6.736269,5.846425,-9.041019,7.408243,-3.741161,2.814616,-4.134934,4.980635,-4.249596,-7.128166,6.026546,-4.482293,3.894073,-4.329528,-8.924057,-6.506494,-5.540245,-9.655037,3.006939,0.799473,2.241432,5.587156,-1.934449,9.859217,0.923938,9.768544,0.576876,-2.908769,-2.743971,8.766092,-3.711335,1.278495,0.097615,5.858436,-9.263073,-6.930652,2.605482,8.489823,-8.147761,-1.120777,-9.522709,7.893309,4.592699,6.642031,-2.522072,9.208555,-8.196685,4.213085,-7.339505,-6.281605,8.560135,-8.242657,-2.884021,7.738778,2.031789,-2.872839,0.999516,9.080588,0.558683,-5.152642,1.019440,-1.606072,8.085969,-2.522215,-0.917903,-0.612755,4.241703,-5.177556,-6.284365,2.010147,-5.117217,-9.188141,6.958142,-2.581751,-9.253042,-8.483313,-6.020595,0.126410,-3.411039,-3.595081,-6.812357,-5.586872,0.759523,6.527507,-4.901645,7.133103,-5.391729,-3.877025,7.171666,2.645284,-9.865277,-9.946711,-2.841206,-7.431317,4.490278,-9.388827,1.406332,4.503078,3.248492,-4.454230,8.594224,-5.949685,6.399395,1.377396,-4.463715,-6.431437,-9.800927,5.114894,-4.402320,9.970167,-1.617654,3.090556,5.225162,0.578469,2.289414,-8.050376,8.197519,0.370788,-9.641233,-2.176377,4.983257,9.427394,1.664111,-6.580671,-0.434581,3.078394,8.378423,-4.536411,0.794049,-6.091978,1.598980,-0.074488,2.334039,-3.769005,-0.198889,-1.313021,2.985898,-1.187132,1.127945,8.342587,-9.169580,-1.343416,0.429757,-6.203324,-8.017524,-5.017140,-6.517226,2.835909,-5.192589,4.557482,-2.507832,-1.822909,0.122151,-0.213269,3.914768,-8.016106,-8.606040,-8.819346,1.569251,-2.492156,8.474993,8.991435,9.571641,4.054644,-6.277753,8.330475,3.823443,7.159459,-2.859686,3.710883,2.682445,2.561425,-0.656035,3.153948,3.373288,-7.177346,-9.097904,-0.894751,-0.505617,0.136414,-5.866614,0.323541,-8.070029,-6.662902,-6.877723,9.656674,2.515492,1.617743,-0.740709,4.298096,-0.353413,-5.785014,8.857529,4.838099,-1.712871,0.182136,3.400674,-3.102689,6.766479,-6.572319,-6.998918,3.908600,-7.620040,-0.365225,5.744203,-8.000318,7.389309,6.215889,9.610492,-2.454195,7.525638,-1.035981,-3.660470,9.984009,7.226048,2.668615,9.583940,1.949262,9.008616,-0.507995,8.208313,-5.198126,0.540734,-1.581527,-4.017770,-9.277783,-7.741531,-1.604044,-8.967401,-4.979874,3.939522,2.787034,-7.173502,3.810300,-9.824802,-1.737050,-2.209946,-2.527277,-9.105387,8.601605,4.726479,1.899960,-6.823899,-7.708714,8.111893,1.018663,-8.388461,5.400806,9.254621,-9.396298,-5.487604,-8.061072,-6.214419,-4.607645,8.534858,8.224283,0.353621,-6.554208,7.781127,-0.544863,2.701864,9.371144,2.114033,-1.729981,7.407434,-0.796116,6.491454,9.903655,-0.714394,6.932599,2.633598,-3.283171,1.369544,-1.555573,-1.687329,1.735006,-4.102113,7.030897,5.753506,1.976076,1.620524,-9.417092,-7.138071,-5.913797,3.914329,-2.963817,-5.988316,3.475120,4.281239,-4.314024,4.823109,0.565728,1.954437,7.025815,-2.878445,7.850081,-6.985829,-5.278883,4.717202,5.323940,-1.967295,9.317429,4.694036,-2.592604,1.924617,-4.909043,-2.469145,-1.039505,-8.644262,-9.015062,-6.706328,-8.536417,4.840313,0.643903,0.002917,5.713343,-5.995832,0.658751,-6.550708,-1.623920,-4.608152,-9.159477,-8.765343,-0.030319,-6.693425,1.797458,5.638289,2.220014,5.056771,5.293304,-0.569023,-3.301005,-2.788506,-8.607325,-9.489232,-8.950182,3.627503,8.026097,3.747462,-8.352304], dtype = "float64")#candidate|5626|(1755,)|const|float64
const_5627 = relay.const([-6.468022,3.582048,9.339366,-8.182662,-0.633823,6.608825,-2.955803,3.789021,-9.277591,-4.074128,-4.309735,-9.580204,1.128937,5.583825,-6.639868,8.480222,8.302798,-0.120328,-7.602683,-0.996481,-5.891913,8.158550,8.089847,7.848416,-0.574583,0.783015,7.017999,-2.723625,5.474869,8.207156,-9.815158,-4.380420,-7.482797,9.420693,7.625239], dtype = "float64")#candidate|5627|(35,)|const|float64
call_5624 = relay.TupleGetItem(func_2022_call(relay.reshape(const_5625.astype('float64'), [2, 8, 8]), relay.reshape(const_5625.astype('float64'), [2, 8, 8]), relay.reshape(const_5626.astype('float64'), [1755,]), relay.reshape(const_5627.astype('float64'), [35, 1]), ), 7)
call_5628 = relay.TupleGetItem(func_2028_call(relay.reshape(const_5625.astype('float64'), [2, 8, 8]), relay.reshape(const_5625.astype('float64'), [2, 8, 8]), relay.reshape(const_5626.astype('float64'), [1755,]), relay.reshape(const_5627.astype('float64'), [35, 1]), ), 7)
func_1627_call = mod.get_global_var('func_1627')
func_1630_call = mutated_mod.get_global_var('func_1630')
call_5629 = func_1627_call(relay.reshape(const_5626.astype('float64'), [9, 15, 13]))
call_5630 = func_1627_call(relay.reshape(const_5626.astype('float64'), [9, 15, 13]))
output = relay.Tuple([call_5621,call_5624,const_5625,const_5626,const_5627,call_5629,])
output2 = relay.Tuple([call_5622,call_5628,const_5625,const_5626,const_5627,call_5630,])
func_5631 = relay.Function([], output)
mod['func_5631'] = func_5631
mod = relay.transform.InferType()(mod)
output = func_5631()
func_5632 = relay.Function([], output)
mutated_mod['func_5632'] = func_5632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5631_call = mod.get_global_var('func_5631')
func_5632_call = mutated_mod.get_global_var('func_5632')
call_5644 = relay.TupleGetItem(func_5631_call(), 4)
call_5645 = relay.TupleGetItem(func_5632_call(), 4)
func_1715_call = mod.get_global_var('func_1715')
func_1717_call = mutated_mod.get_global_var('func_1717')
call_5676 = func_1715_call(relay.reshape(call_5644.astype('float64'), [1, 5, 7]))
call_5677 = func_1715_call(relay.reshape(call_5644.astype('float64'), [1, 5, 7]))
func_1599_call = mod.get_global_var('func_1599')
func_1603_call = mutated_mod.get_global_var('func_1603')
const_5679 = relay.const([10,9,3,-3,4,3,-9,-7,-10,8,5,-3,-4,-10,-7,-8,-3,1,2,-2,9,6,2,4,-6,-7,4,1,-2,6,8,-6,-10,-6,-4,1,-2,9,2,7,6,1,3,-9,-5,-4,-9,-3,-9,3,5,-7,3,-2,-9,-5,2,-6,-9,10,10,-6,-6,9,-6,-1,8,-2,1,-8,-5,-7,10,-2,10,3,-9,8,6,1,2,6,9,3,-2,-2,3,-3,-5,-1,10,3,-1,-5,10,2,9,4,-6,7,7,6,-1,2,-6,8,-5,7,4,6,7,10,3,-3,-2,-8,2,-6,3,-6,10,-8,7,-4,5,-6,5,-10,1,-9,4,9,-9,6,6,-4,-7,5,8,-4,-9,-7,8,3,9,-2,9,-8,8,-2,-7,3,9,-8,5,-9,-2,-9,4,-2,5,-7,-5,3,-8,-10,-3,8,10,8,8,10,-6,2,2,-4,-8,-9,7,-10,9,1,-4,-4,7,-2,1,-4,-2,8,2,10,4,-5,-3,7,9,-4,7,9,-9,-8,4,7,10,-1,9,2,-3,6,4,-10,9,7,-9,1,-7,8,1,-7,-3,1,10,-5,2,10,5,10,3,2,-4,-10,2,-4,3,1,-2,8,-8,6,4,-6,6,-5,-3,-1,-9,-10,8,3,-5,-7,-1,-8,8,8,10,3,2,-6,-6,-4,7,8,-7,-9,7,1,3,-6,-3,-4,-8,2,-6,7,-7,-7,-4,-2,-5,-7,-8,-4,-8,-1,5,-8,4,-5,8,2,-2,2,3,-10,4,5,-4,3,9,4,1,9,10,6,7,-5,-9,8,10,2,-5,-6,-6,-2,-4,9,6,9,-3,8,-4,-10,10,7,-5,-4,6,1,10,6,-8,9,4,-2,6,-8,2,5,7,-2,9,-5,7,-8,9,-2,1,-1,-1,4,2,8,-2,-6,3,3,5,8,4,-8,1,10,-1,-7,-5,-10,2,2,8,-3,7,2,4,3,-7,-10,3,10,-10,-8,7,3,5,3,3,-4,-10,4,10,1,-10,-8,1,-1,-5,6,-9,3,-4,7,10,2,10,5,3,7,-7,8,-3,10,8,-1,-7,-2,1,-10,1,-5,6,-10,6,-2,-2,-2,9,-2,8,-7,8,-5,7,3,7,-8,8,2,5,8,8,2,-3,-6,8,7,-1,8,-8,-7,-9,-8,4,10,7,7,-9,3,-3,-3,4,-8,2,4,-5,7,-7,10,8,-1,1,2,-8,1,6,4,-6,7,-8,-10,-4,-8,3,-10,-9,7,10,-9,-6,2,6,2,-8,-10,1,-9,6,-4,7,-3,9,-6,1,7,-8,9,-5,-4,9,-7,-3,-5,-6,-1,7,9,3,-4,3,-2,-2,-4,2,-10,-1,3,-5,-4,-9,4,-6,1,8,-6,9,-1,10,10,3,-7,8,10,-8,4,7,3,-9,-7,-2,-8,-2,5,-6,8,-4,-6,2,-6,10,10,-8,-3,9,-3,-4,5,-2,9,-3,7,-9,2,9,-6,7,-6,-8,9,-10,10,5,-1,-4,-7,7,-8,9,2,5,-6,-1,-5,-1,10,-1,7,-6,5,7,10,-7,4,6,3,3,6,-2,-7,-7,6,7,-4,-10,-4,-4,-4,-3,-9,4,2,1,-3,1,8,7,6,7,-5,-2,5,3,8,-6,7,-9,9,-9,7,-4,-7,-8,3,6,2,8,3,5,-9,8,-4,7,9,8,7,10,3,9,-3,5,-1,3,8,5,10,5,10,-7,-9,4,9,10,-2,-9,3,8,-10,-10,-8,6,-8,-4,-5,7,8,-10,5,-8,-10,-2,2,7,-1,-10,1,9,-7,8,-5,-5,-6,9,-4,10,5,-7,4,-1,-10,-5,7,2,8,3,5,-6,3,-4,-4,1,10,8,-1,-8,10,-3,9,10,-3,1,-2,-1,-2,-2,-3,6,10,-5,5,-3,9,1,-1,-9,5,-4,-7,-2,2,-7,-8,6,9,10,-7,8,-8,5,-3,6,4,-4,5,-4,-1,-1,4,-8,9,6,2,-3,6,-2,4,-6,9,1,-8,-2,6,2,1,4,10,7,5,-4,1,9,-5,-4,-4,8,-4,5,-4,-1,-6,6,-4,-8,6,-9,10,-2,10,9,3,-10,-10,6,-1,-10,1,-3,-2,5,4,4,-9,-1,4,-4,7,-3,-8,-2,9,4,-1,-6,-9,-2,-2,-9,5,-1,9,-6,-1,5,2,-6,1,-1,-10,-7,8,4,-8,-1,2,-3,-9,-9,-2,10,4,-4,-8,9,-4,7,-6,9,3,-8,-4,-7,-10,3,-1,-5,-1,-1,-6,8,-5,-1,5,6,2,4,4,10,8,-7,10,-5,3,-9,4,-10,-2,3,-10,5,4,-1,1,-6,7,-9,7,8,-9,10,6,-4,10,-6,-6,-6,2,-1,-9,1,10,4,3,-9,1,-6,1,3,-9,4,2,8,-7,7,5,3,10,-5,1,5,-3,-9,1,6,3,-5,-1,-10,-1,-6,7,-4,-1,7,-2,6,-3,10,8,-4,-9,7,4,-10,-4,-5,-10,-5,-9,4,7,9,-2,-4,8,-1,-8,6,-8,9,7,-3,3,9,-2,-5,1,-9,-4,5,-2,6,-7,-4,-3,6,-8,-6,-9,-5,5,2,-2,1,3,-8,2,-4,8,-3,2,-10,8,-1,8,8,6,1,10,-5,-8,9,-7,-9,3,-8,1,7,-2,6,6,5,-5,-9,-8,7,7,6,-9,1,-8,8,4,1,-4,8,-3,10,-1,3,5,-5,-6,-8,-5,8,9,5,9,-1,-4,-3,-4,-5,3,-4,5,-3,-10,7,-10,-9,1,4,1,-3,6,2,-10,-7,-4,-3,10,-2,-7,-8,-4,-7,2,-4,-7,-7,-4,5,7,-1,2,-10,2,-5,-10,7,9,-8,-7,5,9,9,3,9,5,-1,-4,9,2,4,-6,-6,8,7,6,3,6,-1,5,10,-2,7,9,-3,-2,3,-9,-5,4,-6,6,6,-1,-2,6,8,-3,3,1,-3,2,-10,-6,2,9,-10,7,-8,2,-9,-1,6,2,-6,-7,3,-8,2,10,-5,4,-1,-9,1,8,-10,5,-3,-7,-9,1,-4,6,2,-4,2,-2,8,3,-5,-7,10,-2,10,-5,6,10,-4,7,-4,-4,-8,-1,-10,-4,-5,-9,-5,-1,2,4,1,-9,-2,-10,-9,3,1,-2,8,5,8,-10,8,-8,5,-10,5,1,8,-4,-6,-4,10,-9,3,4,1,-6,3,-9,5,-7,1,-10,9,-5,2,5,7,-2,9,4,10,-7,6,-1,7,3,-6,-6,8,2,-3,4,1,2,2,10,-8,4,4,4,5,-1,2,-8,1,2,6,-3,2,7,-1,-7,-3,-2,-10,10,6,8,9,10,-5,3,8,10,-1,-7,5,9,9,-7,-10,2,-8,-5,8,10,-8,7,-9,10,-6,-2,3,1,3,-8,-6,-8,-3,-5,8,6,-8,-4,10,9,-2,-8,-10,-8,-8,-5,-9,9,6,4,-9,10,3,-4,-1,-10,-4,10,7,9,4,-10,-7,-8,-4,6,5,1,-3,1,-10,7,-9,-7,6,-6,10,-5,6,9,-6,-3,5,8,-9,-2,-2,-2,-7,-9,-5,-3,-10,9,2,6,-6,-10,1,7,-7,-2,9,9,-4,-10,5,1,4,3,-1,5,-6,-6,-2,-10,3,9,-7,-9,1,8,-5,-3,-1,4,-5,-9,3,-1,-8,8,-4,-5,-7,10,4,-4,-8,-7,-3,-3,1,1,-9,10,3,1,5,8,10,8,7,4,-10,6,-3,4,-3,7,7,-9,5,10,6,2,8,-10,3,-10,-7,8,7,4,-7,2,-10,6,1,-5,-4,2,6,-6,-8,-4,7,4,4,-6,1,-4,-8,-6,4,7,10,-9,3,-7,-4,-5,5,-6,1,7,-7,5,-9,6,4,-3,-3,3,10,9,3,6,7,-6,-2,-10,-3,-6,-8,8,-6,-8,-5,-6,-3,2,1,5,-10,6,-3,4,-3,-10,5,-3,-1,1,-4,-5,-4,-4,-5,-2,-9,10,7,9,4,-9,9,9,4,8,-9,-4,7,9,-4,-6,1,4,10,6,-3,3,6,2,4,-8,2,-5,10,1,-4,7,-5,-1,-6,-10,-1,-3,-7,-9,-4,1,10,6,-1,-4,-6,-10,5,7,-8,2,-2,-8,-1,-9,7,2,-7,7,-5,-2,-3,-3,6,10,1,-5,9,1,4,5,-1,9,7,-5,-9,3,-1,-10,10,-1,4,-3,1,4,-3,7,8,-1,3,7,-7,6,9,-5,6,10,-1,-4,7,6,-7,-4,-10,-9,-5,5,-7,9,6,6,7,-5,-1,1,-7,7,-1,-2,-10,-3,7,6,-10,-1,9,2,5,6,-6,-3,-7,10,5,-10,1,9,-5,4,-2,-4,2,10,-1,3,-7,-2,-9,2,-2,-7,8,-3,-5,-8,1,1,-8,-3,9,-6,-2,-1,-9,-5,7,-6,-1,6,5,2,-6,1,4,-2,-10,1,7,5,5,6,5,7,-2,-2,6,5,9,-3,2,7,-4,-5,10,-6,1,9,8,2,8,7,9,6,-9,-10,6,2,8,10,9,-7,2,8,3,-9,5,-4,9,-10,-9,-9,2,5,-9,9,3,-10,-3,4,-8,6,-9,8,10,-6,10,6,-7,1,-5,5,6,4,4,5,3,5,-4,7,1,-3,-9,5,9,3,6,-6,3,-4,-10,-9,2,4,-7,10,-4,-2,-3,10,-3,-7,-1,5,-5,-1,10,9,-3,8,3,9,2,-2,-10,-6,-7,4,-10,-2,-8,1,2,-1,-2,-7,8,4,-9,4,1,2,5,-6,5,-9,2,10,-9,-10,-2,5,3,10,8,-1,4,-6,7,3,1,-4,3,8,-7,-2,-7,8,6,4,-2,2,-8,4,-2,9,2,-10,-9,4,9,6,-4,-8,2,6,-6,-7,-9,-10,-1,-6,-4,5,-7,1,6,-1,-2,1,-10,-8,-5,1,-8,-5,-1,10,-9,9,6,9,-9,-4,-1,5,-4,-8,-7,-5,9,4,2,5,2,5,-8,-2,7,8,-1,-1,-7,5,5,1,-9,4,-2,1,5,-2,2,-9,-9,1,1,8,9,2,-3,-8,9,-2,-2,-4,2,-9,-1,-5,5,-4,-8,-4,6,-10,8,-9,-3,9,7,2,1,-4,-2,-7,-7,-5,3,-1,-5,6,-1,2,8,-9,7,4,7,-2,-1,7,-10,-2,-2,-2,5,10,-4,2,-4,-9,-4,-8,-3,1,-9,-1,-3,-2,7,9,1,-10,2,9,2,-4,10,-1,-4,6,-3,4,9,10,-1,8,10,9,9,-5,-5,-1,-5,-10,5,2,-3,5,-4,2,3,9,9,5,-5,10,1,5,-4,-5,-10,-8,-7,9,-7,7,10,-5,-4,-6,1,7,7,-10,-6,1,-5,-1,1,4,-8,10,-6,6,3,9,5,-8,1,-5,-4,-4,-7,-1,-4,10,7,1,-3,5,6,2,3,6,-7,-10,-1,-1,-9,9,-9,-7,-9,10,-3,9,-1,1,-10,-6,9,-9,-10,1,5,5,10,-8,10,10,5,3,8,-1,-2,-7,-5,-5,9,4,-5,7,3,-2,-5,6,-2,9,-4,8,7,1,4,-7,-10,-6,-2,-10,-8,7,5,-5,-2,-6,-5,2,-2,2,-7,-10,1,-3,8,-7,-6,-2,-6,7,-1,4,-9,-8,9,10,10,-6,5,4,-1,-2,5,-9,10,1,-10,9,-1,-4,-6,8,-4,7,-4,-5,-3,-3,10,3,9,-3,-1,2,-9,4,-1,-3,9,-6,-2,7,5,-8,-1,7,7,10,-4,1,9,1,8,-4,-4,9,1,-5,-5,3,6,-7,-2,2,-9,1,8,7,6,4,-2,-9,-8,-9,-9,-8,-4,9,-2,-6,-4,9,9,-10,7,-6,-7,-2,-9,-8,7,3,-3,-9,-3,-5,2,-9,-10,-5,-2,-6,5,-4,10,1,7,9,6,4,3,-6,-5,-5,5,10,10,-8,3,-9,5,-2,-6,2,-9,3,10,-6,-6,10,2,1,-7,8,3,4,-9,-10,-7,7,3,-7,-9,7,-3,-9,8,-8,-10,-6,-2,-1,-9,6,-3,2,-4,8,2,-1,4,-2,9,-9,4,10,-8,-7,-1,-2,7,-10,-3,-6,-4,1,-4,-2,3,-2,9,-5,2,-5,-6,-7,3,5,6,10,-8,-9,6,-7,-5,5,10,10,-3,-5,3,1,-1,-1,-8,8,6,8,1,10,-2,-9,-7,6,-3,7,3,2,-6,1,-6,10,8,-3,-3,4,-7,2,1,2,-9,10,10,-7,6,10,7,-5], dtype = "uint32")#candidate|5679|(2400,)|const|uint32
call_5678 = func_1599_call(relay.reshape(const_5679.astype('uint32'), [10, 16, 15]), relay.reshape(const_5679.astype('uint32'), [10, 16, 15]), )
call_5680 = func_1599_call(relay.reshape(const_5679.astype('uint32'), [10, 16, 15]), relay.reshape(const_5679.astype('uint32'), [10, 16, 15]), )
output = relay.Tuple([call_5644,call_5676,call_5678,const_5679,])
output2 = relay.Tuple([call_5645,call_5677,call_5680,const_5679,])
func_5687 = relay.Function([], output)
mod['func_5687'] = func_5687
mod = relay.transform.InferType()(mod)
output = func_5687()
func_5688 = relay.Function([], output)
mutated_mod['func_5688'] = func_5688
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5757 = relay.var("var_5757", dtype = "float32", shape = (6, 11, 2))#candidate|5757|(6, 11, 2)|var|float32
uop_5758 = relay.cosh(var_5757.astype('float32')) # shape=(6, 11, 2)
output = relay.Tuple([uop_5758,])
output2 = relay.Tuple([uop_5758,])
func_5776 = relay.Function([var_5757,], output)
mod['func_5776'] = func_5776
mod = relay.transform.InferType()(mod)
mutated_mod['func_5776'] = func_5776
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5777 = relay.var("var_5777", dtype = "float32", shape = (6, 11, 2))#candidate|5777|(6, 11, 2)|var|float32
func_5776_call = mutated_mod.get_global_var('func_5776')
call_5778 = func_5776_call(var_5777)
output = call_5778
func_5779 = relay.Function([var_5777], output)
mutated_mod['func_5779'] = func_5779
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5687_call = mod.get_global_var('func_5687')
func_5688_call = mutated_mod.get_global_var('func_5688')
call_5790 = relay.TupleGetItem(func_5687_call(), 0)
call_5791 = relay.TupleGetItem(func_5688_call(), 0)
uop_5794 = relay.exp(call_5790.astype('float64')) # shape=(35,)
uop_5796 = relay.exp(call_5791.astype('float64')) # shape=(35,)
output = relay.Tuple([uop_5794,])
output2 = relay.Tuple([uop_5796,])
func_5812 = relay.Function([], output)
mod['func_5812'] = func_5812
mod = relay.transform.InferType()(mod)
output = func_5812()
func_5813 = relay.Function([], output)
mutated_mod['func_5813'] = func_5813
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5631_call = mod.get_global_var('func_5631')
func_5632_call = mutated_mod.get_global_var('func_5632')
call_5814 = relay.TupleGetItem(func_5631_call(), 1)
call_5815 = relay.TupleGetItem(func_5632_call(), 1)
var_5831 = relay.var("var_5831", dtype = "float64", shape = (35, 2))#candidate|5831|(35, 2)|var|float64
bop_5832 = relay.bitwise_and(call_5814.astype('uint8'), var_5831.astype('uint8')) # shape=(35, 2)
bop_5835 = relay.bitwise_and(call_5815.astype('uint8'), var_5831.astype('uint8')) # shape=(35, 2)
uop_5841 = relay.tan(var_5831.astype('float64')) # shape=(35, 2)
var_5846 = relay.var("var_5846", dtype = "float64", shape = (35, 2))#candidate|5846|(35, 2)|var|float64
bop_5847 = relay.divide(uop_5841.astype('float32'), relay.reshape(var_5846.astype('float32'), relay.shape_of(uop_5841))) # shape=(35, 2)
output = relay.Tuple([bop_5832,bop_5847,])
output2 = relay.Tuple([bop_5835,bop_5847,])
func_5860 = relay.Function([var_5831,var_5846,], output)
mod['func_5860'] = func_5860
mod = relay.transform.InferType()(mod)
mutated_mod['func_5860'] = func_5860
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5860_call = mutated_mod.get_global_var('func_5860')
var_5862 = relay.var("var_5862", dtype = "float64", shape = (35, 2))#candidate|5862|(35, 2)|var|float64
var_5863 = relay.var("var_5863", dtype = "float64", shape = (35, 2))#candidate|5863|(35, 2)|var|float64
call_5861 = func_5860_call(var_5862,var_5863,)
output = call_5861
func_5864 = relay.Function([var_5862,var_5863,], output)
mutated_mod['func_5864'] = func_5864
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5599_call = mod.get_global_var('func_5599')
func_5600_call = mutated_mod.get_global_var('func_5600')
call_5866 = func_5599_call()
call_5867 = func_5599_call()
output = call_5866
output2 = call_5867
func_5887 = relay.Function([], output)
mod['func_5887'] = func_5887
mod = relay.transform.InferType()(mod)
output = func_5887()
func_5888 = relay.Function([], output)
mutated_mod['func_5888'] = func_5888
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5919 = relay.var("var_5919", dtype = "float32", shape = (10, 16, 12))#candidate|5919|(10, 16, 12)|var|float32
uop_5920 = relay.erf(var_5919.astype('float32')) # shape=(10, 16, 12)
output = uop_5920
output2 = uop_5920
func_5931 = relay.Function([var_5919,], output)
mod['func_5931'] = func_5931
mod = relay.transform.InferType()(mod)
mutated_mod['func_5931'] = func_5931
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5932 = relay.var("var_5932", dtype = "float32", shape = (10, 16, 12))#candidate|5932|(10, 16, 12)|var|float32
func_5931_call = mutated_mod.get_global_var('func_5931')
call_5933 = func_5931_call(var_5932)
output = call_5933
func_5934 = relay.Function([var_5932], output)
mutated_mod['func_5934'] = func_5934
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5812_call = mod.get_global_var('func_5812')
func_5813_call = mutated_mod.get_global_var('func_5813')
call_5966 = relay.TupleGetItem(func_5812_call(), 0)
call_5967 = relay.TupleGetItem(func_5813_call(), 0)
uop_5969 = relay.sigmoid(call_5966.astype('float64')) # shape=(35,)
uop_5971 = relay.sigmoid(call_5967.astype('float64')) # shape=(35,)
func_2369_call = mod.get_global_var('func_2369')
func_2372_call = mutated_mod.get_global_var('func_2372')
var_5979 = relay.var("var_5979", dtype = "int8", shape = ())#candidate|5979|()|var|int8
call_5978 = relay.TupleGetItem(func_2369_call(relay.reshape(var_5979.astype('int8'), [])), 0)
call_5980 = relay.TupleGetItem(func_2372_call(relay.reshape(var_5979.astype('int8'), [])), 0)
output = relay.Tuple([uop_5969,call_5978,var_5979,])
output2 = relay.Tuple([uop_5971,call_5980,var_5979,])
func_5983 = relay.Function([var_5979,], output)
mod['func_5983'] = func_5983
mod = relay.transform.InferType()(mod)
var_5984 = relay.var("var_5984", dtype = "int8", shape = ())#candidate|5984|()|var|int8
output = func_5983(var_5984)
func_5985 = relay.Function([var_5984], output)
mutated_mod['func_5985'] = func_5985
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5687_call = mod.get_global_var('func_5687')
func_5688_call = mutated_mod.get_global_var('func_5688')
call_6062 = relay.TupleGetItem(func_5687_call(), 2)
call_6063 = relay.TupleGetItem(func_5688_call(), 2)
uop_6072 = relay.sinh(call_6062.astype('float64')) # shape=(10, 16, 15)
uop_6074 = relay.sinh(call_6063.astype('float64')) # shape=(10, 16, 15)
var_6078 = relay.var("var_6078", dtype = "uint32", shape = (10, 16, 15))#candidate|6078|(10, 16, 15)|var|uint32
bop_6079 = relay.add(call_6062.astype('float64'), relay.reshape(var_6078.astype('float64'), relay.shape_of(call_6062))) # shape=(10, 16, 15)
bop_6082 = relay.add(call_6063.astype('float64'), relay.reshape(var_6078.astype('float64'), relay.shape_of(call_6063))) # shape=(10, 16, 15)
output = relay.Tuple([uop_6072,bop_6079,])
output2 = relay.Tuple([uop_6074,bop_6082,])
func_6085 = relay.Function([var_6078,], output)
mod['func_6085'] = func_6085
mod = relay.transform.InferType()(mod)
var_6086 = relay.var("var_6086", dtype = "uint32", shape = (10, 16, 15))#candidate|6086|(10, 16, 15)|var|uint32
output = func_6085(var_6086)
func_6087 = relay.Function([var_6086], output)
mutated_mod['func_6087'] = func_6087
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5812_call = mod.get_global_var('func_5812')
func_5813_call = mutated_mod.get_global_var('func_5813')
call_6101 = relay.TupleGetItem(func_5812_call(), 0)
call_6102 = relay.TupleGetItem(func_5813_call(), 0)
func_5318_call = mod.get_global_var('func_5318')
func_5321_call = mutated_mod.get_global_var('func_5321')
var_6104 = relay.var("var_6104", dtype = "float32", shape = ())#candidate|6104|()|var|float32
var_6105 = relay.var("var_6105", dtype = "float32", shape = (18,))#candidate|6105|(18,)|var|float32
call_6103 = relay.TupleGetItem(func_5318_call(relay.reshape(var_6104.astype('float32'), []), relay.reshape(var_6105.astype('float32'), [6, 3, 1]), ), 0)
call_6106 = relay.TupleGetItem(func_5321_call(relay.reshape(var_6104.astype('float32'), []), relay.reshape(var_6105.astype('float32'), [6, 3, 1]), ), 0)
output = relay.Tuple([call_6101,call_6103,var_6104,var_6105,])
output2 = relay.Tuple([call_6102,call_6106,var_6104,var_6105,])
func_6109 = relay.Function([var_6104,var_6105,], output)
mod['func_6109'] = func_6109
mod = relay.transform.InferType()(mod)
var_6110 = relay.var("var_6110", dtype = "float32", shape = ())#candidate|6110|()|var|float32
var_6111 = relay.var("var_6111", dtype = "float32", shape = (18,))#candidate|6111|(18,)|var|float32
output = func_6109(var_6110,var_6111,)
func_6112 = relay.Function([var_6110,var_6111,], output)
mutated_mod['func_6112'] = func_6112
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5631_call = mod.get_global_var('func_5631')
func_5632_call = mutated_mod.get_global_var('func_5632')
call_6116 = relay.TupleGetItem(func_5631_call(), 1)
call_6117 = relay.TupleGetItem(func_5632_call(), 1)
output = call_6116
output2 = call_6117
func_6124 = relay.Function([], output)
mod['func_6124'] = func_6124
mod = relay.transform.InferType()(mod)
output = func_6124()
func_6125 = relay.Function([], output)
mutated_mod['func_6125'] = func_6125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5887_call = mod.get_global_var('func_5887')
func_5888_call = mutated_mod.get_global_var('func_5888')
call_6149 = func_5887_call()
call_6150 = func_5887_call()
output = relay.Tuple([call_6149,])
output2 = relay.Tuple([call_6150,])
func_6151 = relay.Function([], output)
mod['func_6151'] = func_6151
mod = relay.transform.InferType()(mod)
output = func_6151()
func_6152 = relay.Function([], output)
mutated_mod['func_6152'] = func_6152
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5599_call = mod.get_global_var('func_5599')
func_5600_call = mutated_mod.get_global_var('func_5600')
call_6180 = func_5599_call()
call_6181 = func_5599_call()
func_2022_call = mod.get_global_var('func_2022')
func_2028_call = mutated_mod.get_global_var('func_2028')
var_6190 = relay.var("var_6190", dtype = "float64", shape = (32, 4))#candidate|6190|(32, 4)|var|float64
const_6191 = relay.const([8.981312,-8.374287,-4.942195,-6.205442,3.151153,1.844794,-7.068697,-8.296437,8.688032,-3.997905,1.998709,-8.545596,-6.239551,4.762004,-0.754632,-7.780354,8.261867,3.079054,0.290708,-1.251385,-2.099690,9.580580,-3.536367,6.543671,-6.628530,-2.242756,9.897949,6.172817,8.702645,5.713550,-9.929607,9.709081,4.847825,1.238530,-9.034696,2.845084,6.515348,4.825187,-0.691618,1.512011,-5.162308,-5.656824,2.094465,-3.962361,2.124419,-1.433158,5.687955,5.902023,-6.538059,-5.970909,-7.842439,9.375735,-4.791779,-0.582598,-4.982194,3.542567,0.801017,-0.070903,-9.291312,9.324992,-8.369213,7.800126,7.168619,-1.974352,1.260184,-3.472120,9.137351,9.556427,-7.831869,-9.707738,6.540559,3.417142,-9.987411,5.239335,-0.092937,-7.883951,-9.000684,9.815171,-7.228987,-6.136631,-8.163250,3.095467,-0.325242,6.861864,-2.833667,0.578406,4.864773,-1.996789,-2.369986,-1.047827,-8.434407,-5.455187,-4.569001,-4.914047,7.592118,-0.835379,2.671603,4.584315,-7.699669,-6.946074,7.737650,2.358927,1.889873,-3.632164,5.688743,-8.259187,9.602190,4.301755,-9.691502,-4.628859,-4.427224,6.818353,-9.643067,3.919039,5.216579,-9.023228,-7.655585,-0.264219,5.957147,9.720986,1.215816,6.801905,-3.357779,8.931097,-1.999039,7.853510,-1.883916,5.541377,0.963416,-9.053643,-6.793449,0.919407,-3.725079,-0.787663,-7.537491,-1.337879,-9.310456,-3.045793,-1.997061,7.892887,7.585586,0.479442,-1.893809,8.640570,-7.439749,-2.000912,-0.188876,0.050931,4.353113,-3.784793,0.197445,-5.698831,-0.689433,7.910796,-2.885275,-4.182414,7.746116,4.515389,-3.884421,2.739857,-5.120690,5.645729,-9.677821,9.955131,5.975787,9.098378,1.350897,-9.233413,1.274040,-7.352960,-1.176789,9.966376,5.791350,1.426255,6.581907,-4.394599,7.793059,-2.914865,-5.322110,0.784690,-2.197049,-0.503877,-2.383763,0.841939,-7.342401,8.325901,-3.437930,-2.885442,-3.012497,2.609341,1.592100,4.129354,-2.004654,-3.257088,-9.218785,-3.835832,-3.699277,-6.345764,6.143367,-5.308687,1.846381,-0.722259,1.631971,7.784468,7.096612,0.753031,-4.804608,5.308241,0.175444,9.814198,6.938480,-5.676237,9.330365,6.583846,-7.176077,-2.035506,6.615870,-7.163901,-0.064063,-4.192207,-1.287112,-5.655899,1.458044,7.091183,0.115979,-8.789672,-1.857732,-8.321207,9.525502,-7.484143,-6.855862,2.818986,-4.081955,-5.296391,-4.287765,-1.487057,-0.961391,3.884611,-8.354710,-3.972822,-5.761497,-0.571635,6.067133,-6.373790,-5.419470,6.888956,8.560247,7.336313,-3.851049,-0.781207,-2.610809,8.520880,4.177775,-2.038984,-3.151767,8.478630,5.446944,7.737403,0.167357,7.109540,1.457906,-5.198406,-8.740728,-0.365994,8.883223,1.663654,1.088297,-3.987506,1.566561,-7.816591,-7.799961,-4.640172,7.268545,-9.501579,4.900563,2.564623,-0.830861,-5.591346,4.393721,5.557448,7.586518,-1.020248,-6.277984,-9.894530,-7.412066,8.911882,-8.260377,-8.700550,3.131712,-5.395410,9.127823,5.450806,3.018585,-1.673754,-1.251203,6.725507,-2.686374,-5.042962,4.829342,-9.202303,0.210719,-0.316995,-6.794197,-4.298048,8.458500,-8.435429,-5.258624,2.586028,2.205874,-8.279189,6.364305,-2.198925,5.832208,-6.016625,8.150759,-2.146726,-5.140702,-6.582982,-5.189362,7.054122,-2.639507,-4.619263,3.029727,-8.716496,8.960566,8.176483,2.844464,-0.433625,-9.155019,9.190074,6.575552,1.038772,-4.032726,-9.274289,-2.185092,-2.587797,-5.156958,2.123271,-9.346366,-2.274326,-0.626931,6.426497,7.072670,-4.295733,-9.759270,1.379838,-0.176849,-9.357342,3.287857,3.608807,-0.025179,-1.829940,-5.534933,-4.688946,9.671097,-3.023928,-7.632587,1.177097,3.066145,-3.618901,8.151515,7.949006,-7.923944,-7.350397,6.771658,1.905570,-7.269008,-9.052156,7.881105,9.589257,9.823476,-6.220287,2.386850,-9.698708,2.975159,8.771860,-9.465871,-5.282113,-9.656500,-4.331432,-7.109739,7.420252,0.427988,3.137661,-3.856075,-9.948973,-8.820021,-9.593659,-1.212597,-7.167667,6.787815,1.518795,7.533369,-9.147786,-2.336875,9.329644,-5.123896,3.029707,-3.731819,-1.227785,-7.730541,-8.746525,5.261558,-9.839612,9.087920,4.011672,-2.124106,8.265762,8.439205,2.057814,-6.220648,-2.880385,0.730452,9.868313,9.552579,6.544254,-8.303077,-9.682562,-0.792201,3.240819,-0.199105,-1.416342,3.252449,-3.438376,1.466334,8.989764,-1.756740,-9.628707,8.413129,1.882204,1.706273,-8.541955,-1.055844,8.793951,-8.276143,7.247275,3.419612,8.841039,8.378068,1.246415,-4.884789,-2.131962,4.967458,-1.221812,-6.295151,5.704782,-8.956844,8.085142,-6.224195,9.050569,-1.449112,9.547839,-1.984828,-2.862039,-2.381302,-9.437940,-3.717991,2.870263,8.382995,0.640650,8.177591,7.878331,-1.648170,4.271062,1.175474,3.349316,6.827618,-2.756150,-7.382083,2.528821,-8.965110,8.974584,-6.150077,-0.511386,-2.527297,-1.738517,-0.658472,-0.768348,-3.331893,-3.289365,-5.020012,2.212880,-0.418328,-8.582242,3.129004,-6.090720,4.780547,-7.701496,-6.757933,-9.239119,-8.473300,6.856418,-4.102689,-2.869127,7.922930,7.163606,-3.434451,3.844372,-6.661404,5.522042,8.440075,4.608386,8.041319,-0.739057,9.266138,0.938703,1.503276,-5.642810,-3.114402,7.678277,0.820288,6.464084,7.709052,4.113879,-1.073694,8.157206,-5.960791,3.275767,2.069937,4.570250,-1.838942,-3.210010,2.633096,8.914622,2.519937,1.160701,6.851229,9.519698,3.155587,-5.075035,2.882047,7.193953,5.651975,-7.599149,2.725485,3.017624,-1.380163,1.054413,-4.031703,0.048775,1.324039,1.125570,2.717134,-3.594460,1.615855,9.635725,-6.725988,-8.555263,4.569835,-2.989276,-7.254213,-9.652438,-2.904096,1.948456,-1.732656,-2.791170,6.653014,7.687366,-2.712925,-6.623038,-8.343268,4.130169,-1.124371,-8.081139,-1.949527,-7.666026,-9.750236,8.278512,5.871012,-8.519009,9.799375,2.026225,-5.002019,1.575719,-3.818667,-1.063742,4.323204,-5.345962,4.549780,3.669794,6.609368,-6.579349,-7.621353,-1.894684,-2.911960,-2.102134,-9.430173,0.693466,-7.982091,6.766331,-5.037615,9.425454,5.410129,9.013157,5.486492,-4.377590,4.223033,-6.080141,-8.963932,0.602398,0.880450,-6.263449,5.066435,-7.906543,4.720357,9.040080,7.421654,8.728773,-2.452569,1.670093,-3.013137,-0.805744,7.389376,2.528510,-1.134461,-3.669168,-6.229778,7.012393,-2.970122,1.999447,7.189628,4.368762,-1.049491,-4.558966,-9.098655,-8.268100,6.357665,-3.281780,2.563762,8.155579,-5.093300,-1.045916,-0.110465,-3.682008,1.743329,-0.732920,-4.238072,-0.714513,4.647814,4.153732,-2.503233,-2.338410,5.923506,-0.483716,-1.703428,-8.783976,-5.869824,-2.185258,-0.639947,1.323798,-2.686566,-4.196323,-4.066627,9.177791,0.491247,3.976783,-4.101333,-2.771553,-9.432266,8.266634,-5.364840,5.736727,-0.213483,2.202774,-8.799066,-6.602333,7.710947,-2.351458,1.318059,1.866430,-1.390765,1.065274,-2.625000,-0.268542,-4.453804,0.041916,9.308818,1.764268,-4.606902,-9.939322,-0.955811,-1.121008,-9.009623,9.793185,-1.024992,-7.708786,5.751059,-7.217143,5.587201,-8.804531,-9.164526,-2.306439,-7.331964,3.025734,7.431466,6.856449,-3.254508,3.591340,-9.909657,7.634740,2.107226,-1.522378,8.394624,-7.809923,4.515762,-7.077972,-0.484478,-0.554173,0.668426,-0.348150,0.238080,-6.878018,8.632256,-4.737461,-3.359303,-0.596635,-0.288712,-2.084198,0.067599,-6.992427,0.450538,-1.377712,-6.872138,-9.899472,-7.631103,-3.528084,-7.890341,-0.233407,-8.868529,-8.544086,-7.016936,-1.286690,7.692414,-3.689270,7.757596,3.375462,7.367498,-1.742942,-6.786736,0.626513,1.592066,4.327755,-9.919869,3.670332,-2.051194,4.367407,8.033458,6.369280,-2.487663,8.400507,8.891730,-6.350144,9.814548,-8.593538,6.231447,-4.637386,0.209889,7.043938,0.057315,-8.735782,-5.696755,-4.631448,6.805346,-0.630803,7.507686,6.643725,-4.123586,-6.585631,-5.973336,-4.917306,-9.064562,0.165582,-2.971233,-4.001958,6.122023,9.192190,-6.294069,0.672705,-0.882913,-2.807332,-0.399297,-1.534107,8.901470,-8.044982,6.751391,-9.852092,8.239672,9.825483,-9.665843,-5.080341,-4.910229,5.708557,5.448164,-6.987858,-1.679689,-9.089586,-6.665657,6.909289,0.875607,5.507359,-1.069214,-0.365903,6.763347,8.884378,7.156599,-9.580162,-1.592984,9.774536,-3.489682,3.483775,-8.734104,5.927659,-8.274501,-0.126635,-7.108318,-6.991776,4.912026,0.019549,-5.472661,-4.010116,-0.605890,4.809936,-3.890867,-7.437644,-6.122185,3.074021,7.467058,8.917475,-4.125626,5.224092,2.127516,1.461084,3.762715,-1.745003,-9.207008,9.605247,1.826546,5.627066,2.177053,-4.532854,3.004119,-6.225510,7.801655,-2.589863,-4.544214,-9.813117,7.210652,-8.803885,-9.136821,-8.437366,-0.731608,8.955406,-6.401558,5.206942,0.774854,7.281059,-8.077355,9.910211,5.031833,1.563790,-1.977610,0.912076,7.784097,-7.832259,-3.292648,-7.090440,-7.101034,-7.319564,-1.443602,1.406478,-0.769980,-4.195036,-8.426351,-8.617483,2.922811,8.069400,6.982569,1.148554,9.401623,1.292673,-3.499695,-0.475055,2.428919,9.306532,-3.678876,4.656642,1.142383,9.334884,-0.893030,4.822714,4.537154,5.545585,-4.550109,-8.677110,-1.610179,6.486413,3.831261,4.478898,5.151165,2.495386,5.775491,-5.101418,-9.272627,8.806919,5.070694,8.511300,6.325500,8.818790,9.802398,7.601805,4.575723,6.417316,-4.790489,-2.739691,6.596659,-4.760049,-8.109913,-2.610871,-3.075514,0.835364,-8.996464,6.552017,6.657791,7.316295,-1.917273,-1.044007,-0.640431,-4.049618,9.812159,-4.657315,-0.474453,4.368006,8.345870,-4.127398,7.424123,5.342038,-2.071220,-2.350345,9.264556,-8.262173,-3.893699,-3.010800,-7.228228,-2.666998,2.012558,6.700986,0.044280,-0.654682,-3.339422,-5.369142,8.731704,9.895427,-5.728610,7.649135,-5.473260,6.609747,3.387031,0.852306,4.178300,0.694968,-6.217909,-4.420488,9.720026,-4.768578,1.286930,-8.120318,-1.106605,-4.628168,8.668126,-1.344121,-6.293631,-4.426847,8.875552,0.772668,7.911160,3.909146,6.467500,3.298249,2.243518,-0.829211,8.274714,5.344770,0.869082,-5.290879,6.334340,-6.637644,9.702796,4.867155,-7.715302,1.801038,8.328678,2.365481,-0.351416,-9.298359,-8.297815,6.263542,4.303766,7.618170,-6.477477,4.585843,-6.268650,4.198877,-2.761383,4.693601,-0.677546,1.308212,7.055319,-9.186876,0.612501,1.047025,-2.862381,3.675193,0.703052,-8.023689,7.269835,-6.714446,8.241339,5.433685,-4.458059,-8.830229,3.952408,3.977135,-2.217782,-4.852533,-1.793713,6.546956,-4.540785,-1.474286,3.414346,-9.866292,-9.831264,-7.427000,-4.955972,5.859789,-5.692902,4.968446,0.327488,6.257209,0.912614,-9.649863,7.651387,-6.470958,-9.417226,-4.876478,7.293887,-9.594851,4.095219,7.678334,-0.741397,-3.691404,-5.704002,-3.447294,-9.973843,2.917625,-4.423426,1.282561,7.810015,6.833668,-5.707619,1.091348,-5.181414,7.402595,-4.095076,-5.604476,-4.738256,-1.087232,-4.632135,-5.504374,-9.840859,-2.149050,1.214364,-2.122957,0.253078,5.203855,5.422966,7.906182,-0.835091,5.811146,3.675500,-3.514366,8.510473,-7.639853,8.729079,-4.924367,-0.763090,-8.914960,4.515948,-6.669965,5.748599,-2.106474,-4.630548,-8.848834,8.767596,-5.122018,8.521667,-2.476954,7.318922,6.737416,5.709012,-9.232180,-7.189135,-2.641211,3.526549,6.375657,-7.141403,-3.204351,5.713207,7.403900,-1.896674,-9.828434,-1.634917,-6.675233,3.749810,5.716008,-9.667820,5.344006,-2.356971,-6.698579,-6.983132,-9.217961,1.174055,-8.894430,-3.365890,9.733993,4.306408,-0.472871,-6.391809,6.157662,-1.496798,5.977866,-3.385279,-4.158339,-1.971305,-7.070950,-9.577766,6.662929,3.312288,-0.303777,5.639379,1.703900,1.694488,1.463534,-7.938196,-8.497108,5.480161,8.824591,-9.927189,-0.691203,-8.958209,9.891979,-1.553845,9.503393,-5.248752,7.783467,4.112156,-8.414458,-0.192136,0.140179,-0.309709,-7.212708,1.625882,1.637161,6.009950,-1.366239,4.039238,-0.047436,-9.110786,0.164267,6.962184,-3.905784,4.041160,-4.490909,-2.311266,4.233105,1.977135,-4.123627,0.377605,-3.312510,-0.231087,2.467515,-9.887537,4.512346,3.209094,-2.763335,9.382496,5.138556,5.848446,-7.914021,6.212766,0.382886,0.162688,3.852832,8.088063,1.762301,-4.472554,5.795643,-6.611654,7.017076,-7.425024,2.397645,7.981243,-8.978896,-8.419026,-1.394051,-9.579013,-0.993835,-7.313819,7.545067,8.822629,0.448270,3.270974,-7.112941,9.553112,9.914438,8.896507,0.722427,2.134851,-9.507343,-0.017159,-1.458186,-4.517799,3.323866,-9.954753,-8.406090,3.628422,-8.600848,6.274041,1.899987,-2.552959,-7.358216,8.411372,-7.613828,7.453553,-2.223812,-4.340498,4.468593,2.236441,4.824145,4.180471,4.683355,3.395968,3.503385,-5.267070,0.535153,9.615797,9.994585,2.420031,6.164187,-9.973109,-8.379867,-8.624655,0.959793,-3.150296,-0.551475,-8.983292,8.299673,6.673245,-4.327587,2.288847,-3.411954,0.766363,3.618882,-7.140466,-9.599716,-3.506720,6.816811,-4.889937,-0.830134,3.606457,-5.839503,-0.693020,4.359835,-3.151425,2.753489,3.774002,-8.930537,7.656208,9.139965,-8.855250,-8.692842,-9.084226,-7.574276,-2.164023,-1.266605,9.298381,-8.392410,-0.766856,1.059133,8.540824,-6.602675,-7.592497,-4.812886,-4.028368,8.153472,7.134072,8.637640,0.060441,-5.661842,-5.493554,6.946651,7.248364,4.111842,5.374839,-8.837482,3.400212,1.278781,1.481928,-8.289409,6.593628,-1.784399,1.737355,1.065167,6.125977,6.533832,-9.248330,4.231151,-4.474670,9.879064,2.764472,-1.295296,-5.359305,6.767571,3.239102,3.648869,4.001292,0.223256,9.866745,-6.394927,-8.339552,-5.409807,-2.984745,-3.384712,-2.090207,5.863409,2.063445,-3.909539,0.076982,6.397801,2.022076,-2.782844,6.547710,-2.713818,-2.339019,5.640895,-5.184038,8.434464,-2.536704,6.742222,1.423821,-0.926860,-8.378906,-6.821938,-9.637334,5.476928,-7.585521,2.375874,5.285159,-3.736005,-9.601225,7.779107,1.643627,6.281754,-3.873743,-7.592749,4.244164,0.144531,7.919973,-4.652877,8.308994,-2.462545,7.763187,0.019129,2.030130,-6.977963,-6.001571,-4.373713,-5.769476,5.172211,-9.450475,-8.200374,-0.246954,8.320208,3.152192,-5.893012,5.863074,-5.523945,-8.232254,-6.092757,0.217543,1.411315,-2.789378,5.891778,1.192492,3.051896,-9.388201,-0.609317,3.238990,-3.272525,9.645424,-1.546668,1.967042,1.811802,-2.654996,5.836626,-8.339546,0.004925,-6.009079,7.416416,3.071061,0.641887,-6.603840,6.179659,-5.099851,-4.054576,-1.841048,-1.829229,7.954070,3.854365,4.104078,3.782839,7.097521,-8.902134,3.022942,4.838646,6.358100,-2.426372,-9.321485,1.128264,2.946454,-9.522554,-8.284395,-1.397115,-1.939418,-9.531490,-6.550064,0.070451,-0.683987,-7.959985,7.712568,3.103215,-1.919358,-8.907930,4.412942,9.966005,9.364994,-6.794920,5.843975,6.274219,-4.716750,3.354793,6.602781,-4.800541,7.183660,3.068679,-9.639145,2.903283,-3.163262,-5.276789,6.981986,8.575440,4.800323,4.491819,-3.289338,1.654561,-7.148754,2.161263,7.559306,4.754395,-8.191395,-4.260014,8.684907,-6.448303,6.833585,4.813137,-2.112438,-6.609727,-1.168455,-0.463095,-9.758825,4.939636,9.127390,2.924834,-4.540495,0.766253,1.017809,-5.438245,2.381970,9.602588,9.235140,0.211822,5.670999,0.315615,3.529215,-4.446822,3.991805,-9.469155,-6.879172,-2.181165,8.644356,-9.469676,4.218701,8.579341,7.564551,4.347825,-6.262034,-2.314361,-7.244196,3.172638,-5.288352,-0.178977,-5.977829,-7.297470,-5.473589,0.181865,-3.950620,-9.079085,-7.061738,-1.626733,-7.749765,-1.803101,-8.554899,-1.309794,8.099907,1.166813,9.278157,9.502876,-1.369327,1.184254,-4.976966,-1.566063,-2.516873,-5.875535,4.256598,-6.893895,6.444357,-0.737862,2.347693,-7.765187,-5.989848,-8.484237,3.538256,3.621986,3.933129,-9.595880,-7.226338,-7.817824,-7.202622,8.305409,7.870861,7.609715,6.537422,8.858198,5.236660,9.165357,9.611502,9.034762,9.358280,-3.775712,3.756366,6.182776,-6.889851,-7.612724,-9.986266,-6.358775,3.481801,-8.886630,9.640126,-6.613314,-3.271353,-8.706524,4.338517,-0.452451,6.781399,-4.563774,-5.948572,-6.243068,6.523355,8.494739,-8.618525,-6.089178,6.762232,-9.340953,-8.142432,0.443736,-2.552671,-8.818567,-3.753435,4.916289,0.592978,-6.362363,4.108733,-0.704686,-6.466844,-4.356671,4.176910,-2.769492,-1.855327,9.656070,4.452382,0.367279,7.645146,-4.307642,-5.366116,6.242507,1.401105,1.499363,-4.864565,9.481008,0.003839,5.336909,-9.065381,-6.672263,7.149296,2.267795,-5.759383,-7.586869,-8.593496,2.228533,-7.644742,9.028999,3.010776,-1.076621,-3.609586,-3.676124,-7.288119,9.936204,6.280946,1.886565,3.635775,-2.215619,2.924822,7.399082,5.706171,-2.240788,8.618792,2.122730,1.653544,-6.529718,4.773532,4.768909,4.982865,1.566957,-6.235276,2.825079,7.786031,-0.837748,-5.833616,5.608994,-0.177033,-6.880496,9.975101,-8.939435,8.109722,-8.070146,9.141855,-4.443281,-8.917217,-9.948310,-2.988424,0.749770,4.939750,-3.148861,3.074719,4.662795,-8.455515,-6.452055,8.896289,-9.699832,7.332347,5.156686,-4.309247,1.787727,0.495032,-5.372811,1.226149,-2.433909,8.056534,5.859922,-3.483837,-7.232411,-0.412124,-1.704330,-2.957950,-1.809910,9.441372,-5.409846,-0.537201,1.580252,4.261408,8.180269,7.617323,6.871108,0.336591,9.254175,7.992315,-2.170364,-3.617066,6.627381,6.229529,6.062450,-7.711457,-8.687121,1.789013,-4.646050,2.140396,-2.378148,5.937047,6.976374,-2.480765,-2.381657,3.799968,8.473822,0.208851,-0.870113,-5.323051,-1.893131,8.598469,6.051870,-9.529538,-4.394041,-4.561739,-5.772625,-2.247864,-6.490752,-5.246805,5.259657,9.844820,-0.074697,6.168926,9.299577,-4.869628,-8.018394,-0.263665,-6.038760,-7.973268,2.902904,5.204282,-0.527174,5.999836,-3.300558,-3.292077,7.149679,-2.207831,-8.392020,-9.098549,-1.959112,6.622634,8.159704,-6.464264,-9.168105,-0.250884,9.457662,5.446770,8.027264,-8.522054], dtype = "float64")#candidate|6191|(1755,)|const|float64
const_6192 = relay.const([-1.224226,-8.753737,-6.531055,-9.770224,3.030026,3.958334,-6.816605,-9.509650,-4.945335,-5.918211,4.412657,-6.622459,-2.448663,-2.027401,5.346604,4.139489,-6.982899,-5.650381,-0.668344,6.785999,3.336813,-7.783532,-5.692061,-5.387756,3.465200,7.126544,6.777141,-1.774127,-4.521421,4.121786,-5.132660,-5.436037,-9.125651,6.345959,4.184496], dtype = "float64")#candidate|6192|(35,)|const|float64
call_6189 = relay.TupleGetItem(func_2022_call(relay.reshape(var_6190.astype('float64'), [2, 8, 8]), relay.reshape(var_6190.astype('float64'), [2, 8, 8]), relay.reshape(const_6191.astype('float64'), [1755,]), relay.reshape(const_6192.astype('float64'), [35, 1]), ), 0)
call_6193 = relay.TupleGetItem(func_2028_call(relay.reshape(var_6190.astype('float64'), [2, 8, 8]), relay.reshape(var_6190.astype('float64'), [2, 8, 8]), relay.reshape(const_6191.astype('float64'), [1755,]), relay.reshape(const_6192.astype('float64'), [35, 1]), ), 0)
func_5599_call = mod.get_global_var('func_5599')
func_5600_call = mutated_mod.get_global_var('func_5600')
call_6195 = func_5599_call()
call_6196 = func_5599_call()
uop_6205 = relay.atan(const_6191.astype('float32')) # shape=(1755,)
bop_6208 = relay.less(uop_6205.astype('bool'), relay.reshape(const_6191.astype('bool'), relay.shape_of(uop_6205))) # shape=(1755,)
output = relay.Tuple([call_6180,call_6189,var_6190,const_6192,call_6195,bop_6208,])
output2 = relay.Tuple([call_6181,call_6193,var_6190,const_6192,call_6196,bop_6208,])
func_6215 = relay.Function([var_6190,], output)
mod['func_6215'] = func_6215
mod = relay.transform.InferType()(mod)
var_6216 = relay.var("var_6216", dtype = "float64", shape = (32, 4))#candidate|6216|(32, 4)|var|float64
output = func_6215(var_6216)
func_6217 = relay.Function([var_6216], output)
mutated_mod['func_6217'] = func_6217
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5599_call = mod.get_global_var('func_5599')
func_5600_call = mutated_mod.get_global_var('func_5600')
call_6237 = func_5599_call()
call_6238 = func_5599_call()
output = relay.Tuple([call_6237,])
output2 = relay.Tuple([call_6238,])
func_6242 = relay.Function([], output)
mod['func_6242'] = func_6242
mod = relay.transform.InferType()(mod)
mutated_mod['func_6242'] = func_6242
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6242_call = mutated_mod.get_global_var('func_6242')
call_6243 = func_6242_call()
output = call_6243
func_6244 = relay.Function([], output)
mutated_mod['func_6244'] = func_6244
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6151_call = mod.get_global_var('func_6151')
func_6152_call = mutated_mod.get_global_var('func_6152')
call_6294 = relay.TupleGetItem(func_6151_call(), 0)
call_6295 = relay.TupleGetItem(func_6152_call(), 0)
func_1627_call = mod.get_global_var('func_1627')
func_1630_call = mutated_mod.get_global_var('func_1630')
var_6297 = relay.var("var_6297", dtype = "float64", shape = (1755,))#candidate|6297|(1755,)|var|float64
call_6296 = func_1627_call(relay.reshape(var_6297.astype('float64'), [9, 15, 13]))
call_6298 = func_1627_call(relay.reshape(var_6297.astype('float64'), [9, 15, 13]))
func_4723_call = mod.get_global_var('func_4723')
func_4725_call = mutated_mod.get_global_var('func_4725')
var_6305 = relay.var("var_6305", dtype = "float64", shape = (195,))#candidate|6305|(195,)|var|float64
call_6304 = func_4723_call(relay.reshape(var_6305.astype('float64'), [5, 13, 3]))
call_6306 = func_4723_call(relay.reshape(var_6305.astype('float64'), [5, 13, 3]))
bop_6307 = relay.add(call_6304.astype('uint16'), relay.reshape(var_6305.astype('uint16'), relay.shape_of(call_6304))) # shape=(5, 13, 3)
bop_6310 = relay.add(call_6306.astype('uint16'), relay.reshape(var_6305.astype('uint16'), relay.shape_of(call_6306))) # shape=(5, 13, 3)
uop_6313 = relay.atanh(call_6294.astype('float32')) # shape=(10, 5, 14)
uop_6315 = relay.atanh(call_6295.astype('float32')) # shape=(10, 5, 14)
func_1627_call = mod.get_global_var('func_1627')
func_1630_call = mutated_mod.get_global_var('func_1630')
call_6319 = func_1627_call(relay.reshape(var_6297.astype('float64'), [9, 15, 13]))
call_6320 = func_1627_call(relay.reshape(var_6297.astype('float64'), [9, 15, 13]))
bop_6325 = relay.greater(call_6296.astype('bool'), relay.reshape(call_6319.astype('bool'), relay.shape_of(call_6296))) # shape=(9, 15, 13)
bop_6328 = relay.greater(call_6298.astype('bool'), relay.reshape(call_6320.astype('bool'), relay.shape_of(call_6298))) # shape=(9, 15, 13)
output = relay.Tuple([var_6297,bop_6307,uop_6313,bop_6325,])
output2 = relay.Tuple([var_6297,bop_6310,uop_6315,bop_6328,])
func_6334 = relay.Function([var_6297,var_6305,], output)
mod['func_6334'] = func_6334
mod = relay.transform.InferType()(mod)
var_6335 = relay.var("var_6335", dtype = "float64", shape = (1755,))#candidate|6335|(1755,)|var|float64
var_6336 = relay.var("var_6336", dtype = "float64", shape = (195,))#candidate|6336|(195,)|var|float64
output = func_6334(var_6335,var_6336,)
func_6337 = relay.Function([var_6335,var_6336,], output)
mutated_mod['func_6337'] = func_6337
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6369 = relay.var("var_6369", dtype = "int64", shape = (3, 14, 15))#candidate|6369|(3, 14, 15)|var|int64
var_6370 = relay.var("var_6370", dtype = "int64", shape = (3, 14, 15))#candidate|6370|(3, 14, 15)|var|int64
bop_6371 = relay.maximum(var_6369.astype('int64'), relay.reshape(var_6370.astype('int64'), relay.shape_of(var_6369))) # shape=(3, 14, 15)
output = relay.Tuple([bop_6371,])
output2 = relay.Tuple([bop_6371,])
func_6389 = relay.Function([var_6369,var_6370,], output)
mod['func_6389'] = func_6389
mod = relay.transform.InferType()(mod)
var_6390 = relay.var("var_6390", dtype = "int64", shape = (3, 14, 15))#candidate|6390|(3, 14, 15)|var|int64
var_6391 = relay.var("var_6391", dtype = "int64", shape = (3, 14, 15))#candidate|6391|(3, 14, 15)|var|int64
output = func_6389(var_6390,var_6391,)
func_6392 = relay.Function([var_6390,var_6391,], output)
mutated_mod['func_6392'] = func_6392
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5599_call = mod.get_global_var('func_5599')
func_5600_call = mutated_mod.get_global_var('func_5600')
call_6399 = func_5599_call()
call_6400 = func_5599_call()
func_4723_call = mod.get_global_var('func_4723')
func_4725_call = mutated_mod.get_global_var('func_4725')
const_6407 = relay.const([1.787657,-5.980893,-0.919933,3.160854,7.485872,1.576456,-5.622853,6.392293,2.779966,-3.311160,3.044316,-1.880001,2.308446,6.828387,1.383024,9.099194,6.231870,6.247339,1.006793,-1.199755,-9.921160,-2.497595,4.933630,-8.270237,1.572897,2.530588,-1.238097,-1.845013,-9.933178,-0.141710,8.354362,6.824341,6.749946,-0.152405,2.650969,4.221802,-8.305395,-6.467285,8.139546,-2.990404,7.315812,-4.739886,2.579278,3.668980,-0.020044,8.961974,9.916035,-4.294667,-7.072771,2.500249,-4.669307,1.289295,-8.097408,-2.791875,7.803525,-4.098053,4.540363,-9.700057,-9.812039,-6.382137,9.501075,-6.310221,-6.199146,5.840047,2.120462,3.369938,-1.042245,-5.068745,-9.341849,-9.102396,8.953317,5.781560,0.155057,-9.430863,4.936183,-9.031444,-9.927647,-4.431908,-5.212790,6.260019,-7.726227,7.602699,-4.651407,-3.880963,-7.858838,-0.972464,2.780953,-9.652193,4.064156,-6.740070,-1.755627,9.364157,0.424446,8.089292,7.292078,6.979426,3.260200,-6.293341,-7.771899,2.037555,-3.397068,5.535414,9.086814,-9.746393,-2.539813,9.646907,-0.851814,9.906877,-6.592882,1.700974,-1.618632,-9.502143,0.318208,6.057253,2.325346,-2.000517,-7.513357,6.507204,-7.829405,-3.366176,5.688081,8.814190,-9.517059,0.200776,0.667649,-7.758591,-0.258771,-9.888731,-8.298531,8.810508,-8.268808,8.229683,5.327510,-3.143954,-4.712131,-3.889195,-8.161474,2.712275,9.893991,-8.945389,8.041765,-5.117206,2.661805,8.815382,-7.487346,4.438092,3.253356,9.847355,9.833071,-6.044844,-3.252169,3.388612,-8.277819,2.873265,-1.031211,-4.220795,-8.327148,5.761849,8.233682,3.370820,9.858194,-2.288840,4.032938,-8.036421,9.290277,7.174966,5.393616,5.960898,7.075519,1.467320,-8.807063,-2.142600,-7.861052,-7.995869,-7.977408,7.007409,-6.131938,-0.980501,8.934994,-5.990344,0.058867,-1.525852,4.239953,-9.597932,-4.663469,-7.794586,-6.335367,-3.948400,-7.422227,-8.789789,-4.187657,-2.496166,-5.844301,2.815071,2.103453], dtype = "float64")#candidate|6407|(195,)|const|float64
call_6406 = func_4723_call(relay.reshape(const_6407.astype('float64'), [5, 13, 3]))
call_6408 = func_4723_call(relay.reshape(const_6407.astype('float64'), [5, 13, 3]))
func_379_call = mod.get_global_var('func_379')
func_382_call = mutated_mod.get_global_var('func_382')
var_6436 = relay.var("var_6436", dtype = "float32", shape = (252, 4))#candidate|6436|(252, 4)|var|float32
call_6435 = relay.TupleGetItem(func_379_call(relay.reshape(var_6436.astype('float32'), [12, 14, 6])), 1)
call_6437 = relay.TupleGetItem(func_382_call(relay.reshape(var_6436.astype('float32'), [12, 14, 6])), 1)
func_5983_call = mod.get_global_var('func_5983')
func_5985_call = mutated_mod.get_global_var('func_5985')
const_6439 = relay.const(-5, dtype = "int8")#candidate|6439|()|const|int8
call_6438 = relay.TupleGetItem(func_5983_call(relay.reshape(const_6439.astype('int8'), [])), 1)
call_6440 = relay.TupleGetItem(func_5985_call(relay.reshape(const_6439.astype('int8'), [])), 1)
output = relay.Tuple([call_6399,call_6406,const_6407,call_6435,var_6436,call_6438,const_6439,])
output2 = relay.Tuple([call_6400,call_6408,const_6407,call_6437,var_6436,call_6440,const_6439,])
func_6447 = relay.Function([var_6436,], output)
mod['func_6447'] = func_6447
mod = relay.transform.InferType()(mod)
var_6448 = relay.var("var_6448", dtype = "float32", shape = (252, 4))#candidate|6448|(252, 4)|var|float32
output = func_6447(var_6448)
func_6449 = relay.Function([var_6448], output)
mutated_mod['func_6449'] = func_6449
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6151_call = mod.get_global_var('func_6151')
func_6152_call = mutated_mod.get_global_var('func_6152')
call_6470 = relay.TupleGetItem(func_6151_call(), 0)
call_6471 = relay.TupleGetItem(func_6152_call(), 0)
func_148_call = mod.get_global_var('func_148')
func_150_call = mutated_mod.get_global_var('func_150')
var_6475 = relay.var("var_6475", dtype = "uint64", shape = (7, 10))#candidate|6475|(7, 10)|var|uint64
call_6474 = relay.TupleGetItem(func_148_call(relay.reshape(var_6475.astype('uint64'), [7, 2, 5])), 0)
call_6476 = relay.TupleGetItem(func_150_call(relay.reshape(var_6475.astype('uint64'), [7, 2, 5])), 0)
func_5812_call = mod.get_global_var('func_5812')
func_5813_call = mutated_mod.get_global_var('func_5813')
call_6493 = relay.TupleGetItem(func_5812_call(), 0)
call_6494 = relay.TupleGetItem(func_5813_call(), 0)
func_2022_call = mod.get_global_var('func_2022')
func_2028_call = mutated_mod.get_global_var('func_2028')
var_6498 = relay.var("var_6498", dtype = "float64", shape = (128,))#candidate|6498|(128,)|var|float64
var_6499 = relay.var("var_6499", dtype = "float64", shape = (1755,))#candidate|6499|(1755,)|var|float64
call_6497 = relay.TupleGetItem(func_2022_call(relay.reshape(var_6498.astype('float64'), [2, 8, 8]), relay.reshape(var_6498.astype('float64'), [2, 8, 8]), relay.reshape(var_6499.astype('float64'), [1755,]), relay.reshape(call_6493.astype('float64'), [35, 1]), ), 7)
call_6500 = relay.TupleGetItem(func_2028_call(relay.reshape(var_6498.astype('float64'), [2, 8, 8]), relay.reshape(var_6498.astype('float64'), [2, 8, 8]), relay.reshape(var_6499.astype('float64'), [1755,]), relay.reshape(call_6493.astype('float64'), [35, 1]), ), 7)
func_3435_call = mod.get_global_var('func_3435')
func_3437_call = mutated_mod.get_global_var('func_3437')
const_6507 = relay.const([[-6.495596,-7.907619],[4.256033,-1.159791],[-2.849853,-0.198807],[-4.561561,-6.190929],[-4.290114,3.935251],[2.902102,2.867465],[6.258588,-5.017750],[-4.261725,5.440310],[-1.067093,8.532254],[8.224159,4.959216],[9.976159,-2.185110],[-4.413576,-5.821762],[-3.824871,3.248401],[0.622478,7.211764],[4.363721,-1.626493],[-3.767460,-5.905563],[-1.619905,-3.816068],[-2.333532,6.708583],[-7.391207,0.474782],[-2.172134,6.121418],[5.594811,-0.457900],[0.928515,1.247088],[0.984106,-2.892646],[0.943790,0.289670],[-8.266992,2.699255],[5.367878,-9.958081],[6.677473,-9.439549],[-5.362908,-7.123776],[-2.337430,-2.528989],[-9.224520,-3.765371],[8.989147,6.418209],[-4.725967,-0.909144],[2.552497,9.165832],[-9.952910,-7.666028],[2.888513,8.652677],[-4.839320,0.202591],[5.333042,-3.892628],[1.034292,9.099222],[-5.060779,-3.538602],[4.880359,7.009024],[-2.692836,6.032845],[1.095659,-1.944999],[0.759723,-1.457293],[-8.454082,-6.929608],[8.803051,8.722578],[-2.211741,1.615961],[-8.092831,9.460517],[8.385972,-5.942423],[1.626344,-4.787052],[9.095488,6.320422],[8.591964,-5.578999],[7.119770,1.563145],[9.650689,3.132865],[1.643937,-7.491719],[-2.545538,-5.922469],[0.345035,-3.043201],[-2.738755,8.113175],[6.065448,-9.109920],[-7.161147,-9.345820],[-2.534212,-4.196497],[6.527521,1.762319],[-3.228657,-0.580603],[1.435765,-8.926808],[6.599811,9.967182],[-4.467889,5.348052],[5.447111,-4.021385],[-3.044321,2.583104],[-5.925606,-5.255066],[3.241794,-4.030004],[-0.305768,9.698985],[6.612192,-6.595461],[-8.833974,2.047627],[-9.656877,-8.916070],[-7.160848,6.327099],[-1.189090,5.576785],[-2.739781,-8.299618],[9.214128,3.677741],[2.248913,2.444796],[5.276074,2.872285],[3.001681,-0.820848],[6.041036,1.277919],[4.568771,-9.676284],[9.036857,-9.954321],[9.529922,-1.191099],[9.290258,-8.833278],[-3.723817,-6.521618],[8.444291,9.956707],[-9.918881,-0.623269],[-9.391046,5.197179],[-4.472912,2.642099],[-0.885555,3.883599],[-5.294046,-1.445932],[-6.387944,-1.140049],[6.756363,-5.034378],[-3.187017,4.033947],[7.208328,-2.192934],[-2.572968,2.956979],[4.316204,-4.860739],[-5.150052,-0.982074],[2.087328,-2.862177],[6.819981,-9.421511],[1.146173,-9.218001],[-1.302142,-2.739556],[3.304537,-9.637964],[2.995566,1.905975],[-8.382666,-8.906651],[0.266086,-4.568590],[5.459877,-5.790131],[6.604162,3.220037],[7.058666,3.890160],[-2.600267,7.623898],[-4.191251,1.439825],[8.801201,8.856954],[-7.899036,-4.305843],[-9.609244,0.210101],[-8.842875,-4.864921],[-2.461901,-8.807475],[2.942013,-9.976496],[-6.879129,-5.876021],[9.693427,-3.211388],[-7.182884,-0.296281],[8.486374,-0.462916],[4.326482,3.074667],[-9.097102,-0.065226],[-6.061079,-6.048497],[-8.436240,0.722058],[8.638496,0.389016],[9.046676,7.276841],[7.456109,-6.075690],[3.872139,-5.485926],[-2.388737,-0.473249],[-8.203940,-4.857087],[0.396280,-8.482675],[7.718050,-2.829635],[7.313359,2.578157],[9.558258,-9.891662],[-0.032381,6.226873],[-8.809516,5.370097],[-1.072188,3.771338],[-1.307529,2.934209],[-8.051998,8.545912],[8.071536,-5.054266],[8.486367,8.788780],[6.187355,-7.862900],[-0.884444,8.208760],[8.109426,-5.793422],[-3.173571,-7.369297],[9.289536,-2.545522],[-7.203794,4.234745],[-8.771207,-5.761704],[4.420468,-8.477898],[-6.032747,-9.108966],[1.650060,2.299712],[-8.294121,-4.950118],[4.432960,0.293906],[-4.598659,-2.590636],[6.497196,-8.802190],[-7.315226,-0.273459],[-7.559962,-5.676540],[7.728301,2.317924],[-9.602114,3.892635],[-4.705069,3.472877],[5.188975,-9.682518],[-6.563364,-6.135609],[-1.603635,7.178956],[7.821812,-8.634209],[1.858495,-3.325834],[-6.380200,8.800165],[-3.650630,8.319081],[-1.624640,-1.468606],[-9.756734,9.023903],[-8.533465,-6.758981],[-8.713324,4.817536],[3.243574,3.212541],[-9.998395,5.540875]], dtype = "float32")#candidate|6507|(175, 2)|const|float32
call_6506 = func_3435_call(relay.reshape(const_6507.astype('float32'), [10, 5, 7]))
call_6508 = func_3435_call(relay.reshape(const_6507.astype('float32'), [10, 5, 7]))
uop_6515 = relay.atanh(call_6474.astype('float32')) # shape=(7, 2, 5)
uop_6517 = relay.atanh(call_6476.astype('float32')) # shape=(7, 2, 5)
func_3153_call = mod.get_global_var('func_3153')
func_3157_call = mutated_mod.get_global_var('func_3157')
var_6522 = relay.var("var_6522", dtype = "uint8", shape = ())#candidate|6522|()|var|uint8
var_6523 = relay.var("var_6523", dtype = "uint8", shape = (132,))#candidate|6523|(132,)|var|uint8
call_6521 = relay.TupleGetItem(func_3153_call(relay.reshape(var_6522.astype('uint8'), []), relay.reshape(var_6523.astype('uint8'), [11, 12, 1]), ), 0)
call_6524 = relay.TupleGetItem(func_3157_call(relay.reshape(var_6522.astype('uint8'), []), relay.reshape(var_6523.astype('uint8'), [11, 12, 1]), ), 0)
func_5318_call = mod.get_global_var('func_5318')
func_5321_call = mutated_mod.get_global_var('func_5321')
var_6533 = relay.var("var_6533", dtype = "float32", shape = (18,))#candidate|6533|(18,)|var|float32
call_6532 = relay.TupleGetItem(func_5318_call(relay.reshape(var_6522.astype('float32'), []), relay.reshape(var_6533.astype('float32'), [6, 3, 1]), ), 0)
call_6534 = relay.TupleGetItem(func_5321_call(relay.reshape(var_6522.astype('float32'), []), relay.reshape(var_6533.astype('float32'), [6, 3, 1]), ), 0)
uop_6536 = relay.exp(uop_6515.astype('float32')) # shape=(7, 2, 5)
uop_6538 = relay.exp(uop_6517.astype('float32')) # shape=(7, 2, 5)
output = relay.Tuple([call_6470,var_6475,call_6493,call_6497,var_6498,var_6499,call_6506,const_6507,call_6521,var_6522,var_6523,call_6532,var_6533,uop_6536,])
output2 = relay.Tuple([call_6471,var_6475,call_6494,call_6500,var_6498,var_6499,call_6508,const_6507,call_6524,var_6522,var_6523,call_6534,var_6533,uop_6538,])
func_6546 = relay.Function([var_6475,var_6498,var_6499,var_6522,var_6523,var_6533,], output)
mod['func_6546'] = func_6546
mod = relay.transform.InferType()(mod)
mutated_mod['func_6546'] = func_6546
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6546_call = mutated_mod.get_global_var('func_6546')
var_6548 = relay.var("var_6548", dtype = "uint64", shape = (7, 10))#candidate|6548|(7, 10)|var|uint64
var_6549 = relay.var("var_6549", dtype = "float64", shape = (128,))#candidate|6549|(128,)|var|float64
var_6550 = relay.var("var_6550", dtype = "float64", shape = (1755,))#candidate|6550|(1755,)|var|float64
var_6551 = relay.var("var_6551", dtype = "uint8", shape = ())#candidate|6551|()|var|uint8
var_6552 = relay.var("var_6552", dtype = "uint8", shape = (132,))#candidate|6552|(132,)|var|uint8
var_6553 = relay.var("var_6553", dtype = "float32", shape = (18,))#candidate|6553|(18,)|var|float32
call_6547 = func_6546_call(var_6548,var_6549,var_6550,var_6551,var_6552,var_6553,)
output = call_6547
func_6554 = relay.Function([var_6548,var_6549,var_6550,var_6551,var_6552,var_6553,], output)
mutated_mod['func_6554'] = func_6554
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6124_call = mod.get_global_var('func_6124')
func_6125_call = mutated_mod.get_global_var('func_6125')
call_6588 = func_6124_call()
call_6589 = func_6124_call()
func_6546_call = mod.get_global_var('func_6546')
func_6554_call = mutated_mod.get_global_var('func_6554')
const_6591 = relay.const([3,-4,-8,-9,3,3,1,8,-8,-2,-10,-5,-4,-1,5,4,1,-3,3,2,-3,10,6,9,-10,-4,-9,-1,-2,-7,6,5,1,6,1,-10,4,-10,9,6,-10,2,-3,-4,7,2,-3,1,-8,-10,7,-5,1,1,5,-1,-10,-6,-6,-8,4,-6,-8,2,6,-6,1,3,-5,2], dtype = "uint64")#candidate|6591|(70,)|const|uint64
var_6592 = relay.var("var_6592", dtype = "float64", shape = (128,))#candidate|6592|(128,)|var|float64
var_6593 = relay.var("var_6593", dtype = "float64", shape = (1755,))#candidate|6593|(1755,)|var|float64
var_6594 = relay.var("var_6594", dtype = "uint8", shape = ())#candidate|6594|()|var|uint8
var_6595 = relay.var("var_6595", dtype = "uint8", shape = (132,))#candidate|6595|(132,)|var|uint8
const_6596 = relay.const([3.636631,-0.618601,-5.153715,5.667637,-5.281191,3.803702,-9.959334,8.967893,-6.174335,-2.544537,-9.047750,8.739203,-6.107599,0.234553,1.211809,-7.871017,-3.501494,-2.826478], dtype = "float32")#candidate|6596|(18,)|const|float32
call_6590 = relay.TupleGetItem(func_6546_call(relay.reshape(const_6591.astype('uint64'), [7, 10]), relay.reshape(var_6592.astype('float64'), [128,]), relay.reshape(var_6593.astype('float64'), [1755,]), relay.reshape(var_6594.astype('uint8'), []), relay.reshape(var_6595.astype('uint8'), [132,]), relay.reshape(const_6596.astype('float32'), [18,]), ), 1)
call_6597 = relay.TupleGetItem(func_6554_call(relay.reshape(const_6591.astype('uint64'), [7, 10]), relay.reshape(var_6592.astype('float64'), [128,]), relay.reshape(var_6593.astype('float64'), [1755,]), relay.reshape(var_6594.astype('uint8'), []), relay.reshape(var_6595.astype('uint8'), [132,]), relay.reshape(const_6596.astype('float32'), [18,]), ), 1)
output = relay.Tuple([call_6588,call_6590,const_6591,var_6592,var_6593,var_6594,var_6595,const_6596,])
output2 = relay.Tuple([call_6589,call_6597,const_6591,var_6592,var_6593,var_6594,var_6595,const_6596,])
func_6615 = relay.Function([var_6592,var_6593,var_6594,var_6595,], output)
mod['func_6615'] = func_6615
mod = relay.transform.InferType()(mod)
var_6616 = relay.var("var_6616", dtype = "float64", shape = (128,))#candidate|6616|(128,)|var|float64
var_6617 = relay.var("var_6617", dtype = "float64", shape = (1755,))#candidate|6617|(1755,)|var|float64
var_6618 = relay.var("var_6618", dtype = "uint8", shape = ())#candidate|6618|()|var|uint8
var_6619 = relay.var("var_6619", dtype = "uint8", shape = (132,))#candidate|6619|(132,)|var|uint8
output = func_6615(var_6616,var_6617,var_6618,var_6619,)
func_6620 = relay.Function([var_6616,var_6617,var_6618,var_6619,], output)
mutated_mod['func_6620'] = func_6620
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6124_call = mod.get_global_var('func_6124')
func_6125_call = mutated_mod.get_global_var('func_6125')
call_6636 = func_6124_call()
call_6637 = func_6124_call()
func_3759_call = mod.get_global_var('func_3759')
func_3763_call = mutated_mod.get_global_var('func_3763')
const_6640 = relay.const([9.875430,1.645221,-8.371134,-5.759601,-2.535384,-9.431474,0.553301,3.112383,2.786184,-1.587901,2.197240,2.748018,-3.521282,4.596592,-3.474813,-6.194885,-6.661772,-2.513156,1.898008,-5.581130,3.600114,6.025068,-2.319497,1.068305,3.192522,0.734505,-8.291265,-9.661435,-8.021709,-9.716941,5.655611,3.450849,-0.898631,-6.710700,-2.555630,6.422693,-5.315575,-4.016452,2.660568,-4.144911,0.004409,-2.341820,-4.512062,4.728496,-9.865497,-8.144190,-9.488115,-6.902641,4.115882,2.920968,2.032413,-4.323662,6.408389,-1.091771,-6.865840,9.084939,-7.494656,-7.631526,-6.051075,9.608457,7.651808,3.790499,6.628443,8.551714,-4.758373,4.431113,9.004173,3.445424,-8.653949,-6.126820,0.014337,2.655597,0.937197,-1.357459,2.033026,-6.876553,8.271198,-6.371869,7.062631,-5.604766,-6.907025,2.614953,4.418877,-7.772807,-4.889375,-2.717655,4.753012,3.614155,2.108108,-0.668518,-0.349952,-0.448357,-1.109856,-1.093375,-3.020717,-3.924360,-8.960464,-7.967462,-4.028699,-9.388127,9.792838,-5.638565,-5.450559,7.388414,-8.135807,-3.698953,9.172733,-5.295320,7.483565,1.813106,2.931245,5.695209,-3.405076,0.893304,-9.110059,4.743352,9.778891,-3.110161,-2.632479,6.776288,-3.617608,6.141625,-8.039013,4.851565,-2.106410,4.548714,-8.986437,-7.745127,3.742918,-3.723776,9.296784,7.131729,7.769538,-8.483833,-8.697966,-4.041832,3.656353,-9.662265,-9.036531,5.049964,-9.150461,-7.664701,3.101349,4.203118,8.979171,7.548557,-1.245099,4.439328,-9.305168,0.158867,2.881541,8.731889,5.314419,0.880937,-3.289154,-9.158969,3.416970,7.704478,8.368648,6.102648,-3.619244,5.863863,-4.648989,4.079744,-5.444065,6.155508,-9.700006,-0.823615,-0.870887,0.273258,6.239742,5.440786,6.558785,5.534070,-1.313720,4.347000,2.822673,3.910483,0.071917,9.509889,9.991033,1.443341,7.017499,7.634538,3.068031,-7.706835,-9.012456,-6.069858,1.749785,9.310856,-7.794640,-8.799730,1.488782,2.749221,-6.074592,7.745580,8.632892,-0.878716,-1.967920,-3.460561,-5.517247,-2.552122,0.606952,-3.687912,9.363241,-9.319802,-7.514805,0.165578,-2.815774,-1.370605,5.554471,-7.433795,7.049091,-0.815460,-4.136201,4.967420,2.198258,2.793516,-5.611834,8.178350,6.350751,-7.822143,9.373103,-9.537838,-5.012017,-0.356039,-3.514141,0.183537,8.295249,3.746043,-6.517306,5.422696,4.567754,-3.757821,-4.947696,3.478862,1.554659,-5.877179,8.083941,-3.447242,0.912396,-6.230214,8.634019,9.429047,7.907039,-2.160809,-7.984984,7.532877,2.198417,9.322299,-2.256465,3.185892,-9.000593,-3.522911,-4.929660,-7.278075,1.784879,8.567025,-4.178433,-5.385892,-4.689791,9.402567,-5.497532,-5.822421,7.433144,2.052333,-5.713947,0.304613,-4.431738,-0.027642,6.526853,4.152353,5.990977,5.894830,0.236152,1.743224,9.095214,-3.211511,-5.076385,3.495742,6.455864,2.903608,2.286711,-9.315437,-8.692007,2.917139,6.082149,-6.065064,5.120630,-6.373076,8.515456,-7.319099,5.230377,-8.302933,4.297510,4.576843,3.543072,-6.505652,7.107999,-5.094333,-6.532327,1.717025,-3.456751,-4.054108,-3.102525,3.408803,8.762757,-0.693438,-7.910746,-4.466298,-7.281991,-6.579986,-7.629986,-9.731153,-1.438252,2.231458,-3.683995,-8.779717,-2.520158,9.961529,-3.086964,0.033956,-3.815558,-4.348499,-4.814333,8.565538,-3.463999,-1.544950,-3.615944,-6.032324,-7.678954,4.913242,2.983359,2.020841,3.713659,-1.511251,4.767149,6.331000,7.583586,7.814855,-1.976288,-0.760623,-7.931878,3.315525,0.161777,1.731246,8.584536,0.226383,5.607802,-6.939034,7.563064,-4.780355,-6.978405,-5.572170,4.533625,-8.441798,-8.631300,-0.916929,3.881269,-5.007811,7.228150,-6.597635,-7.036456,9.212943,4.162571,-0.620117,-1.371055,2.361497,-8.997125,-9.986285,5.694763,3.336796,5.514934,5.490927,2.433168,-0.023721,5.285908,4.226679,-9.352374,8.743640,5.512394,-6.598524,-9.149762,-3.518303,5.473287,-5.811461,2.731335,5.125445,0.816309,-5.661338,-3.083187,-0.003696,2.510386,2.734622,-9.650626,4.924294,3.063845,-0.838021,-2.233751,-5.327388,4.303648,-9.864109,5.222439,-2.629750,-8.351030,9.820606,8.202769,2.975308,-5.390495,-3.299065,8.505666,-9.587072,4.138947,4.962486,5.147129,3.026400,-1.437387,-0.880997,7.563205,9.059274,4.344476,-8.063216,-0.778137,9.461371,3.265057,3.744901,-7.301834,5.155506,-1.009226,3.660152,-2.530910,7.435859,-1.515977,-2.590298,-8.151838,-7.129308,9.868207,-3.447215,-1.689803,-6.802257,5.332902,-9.170533,0.270453,7.434760,-8.427389,6.014698,0.831348,-3.677500,-3.458577,-6.143129,-3.167703,-1.010252,1.973712,9.624623,9.928448,7.896624,3.149172,-0.210843,1.076480,0.871959,-2.789979,8.779714,4.180529,4.927315,-9.092357,-3.688987,-2.989819,-6.564945,8.017633,8.505569,9.910136,1.096923,9.559044,9.490535,5.080825,-9.688862,-2.053010,0.353878,7.328679,8.109488,-8.865265,-6.234286,9.209000,9.528458,-8.068769,3.872531,1.510075,8.720686,-7.777756,-4.259139,9.606264,4.844896,-8.301547,1.637948,9.116096,3.910669,-6.160159,1.132977,9.145455,-9.604528,6.076083,1.357400,-4.673716,7.040030,-9.370152,-4.473071,7.675417,0.808359,-6.189018,1.033529,0.625100,-0.728811,0.152758,1.213191,-4.484153,-6.696872,5.626991,-7.835387,-0.215190,-7.970312,1.973854,-7.330089,-0.820769,-0.911783,-7.092273,4.769606,5.540120,0.182738,9.142192,6.500010,-7.093051,8.986981,7.184367,7.932688,-1.504436,-4.535326,-2.451834,-4.049324,-0.153243,-9.158827,-5.492540,6.254792,3.786378,-3.908752,6.951944,-1.162587,-7.540918,-8.403039,7.970076,7.293389,1.050247,-0.045650,9.684903,8.076606,3.617238,-0.585738,8.892748,6.397242,6.056263,0.394253,9.644403,-2.669722,5.015019,-8.460506,8.843232,-5.266458,5.153342,-1.100411,2.151329,1.571117,2.557081,1.485818,9.627995,3.242843,-2.984991,9.548392,-7.603874,3.655346,-7.525401,0.329485,-1.653280,1.108042,-3.944983,-3.961538,9.311288,-9.179558,8.015553,8.797879,4.166975,7.505944,0.165409,6.838354,6.396446,8.949963,-6.597358,3.812181,7.284933,8.261480,-7.944050,2.746916,9.454515,0.427708,7.484558,4.590987,4.559039,2.906555,7.222509,7.170348,1.012998,2.754394,7.570405,-7.430712,0.719545,-5.407462,5.919932,0.979207,3.538016,-5.207754,4.920334,9.579741,-9.422908,9.786583,-3.769440,-3.445727,8.835213,5.842424,-6.396292,5.583003,0.352966,-1.461923,-9.476974,3.694891,-3.554483,-0.890247,1.911959,-9.768429,-8.645163,-0.595030,-2.291071,3.468122,-9.430512,-6.817420,-3.905106,-6.559451,7.471511,7.612393,-9.716033,-7.141702,-4.203344,-1.895454,-8.415183,1.770771,-8.073731,1.851536,8.779228,-3.593979,-3.836942,-9.629669,6.665746,-7.367001,3.837281,-4.076581,0.634373,-0.358636,6.313602,8.294957,-4.772787,1.646121,-1.657924,8.654905,8.425259,0.059956,3.486256,-6.037373,-6.364225,0.614716,-6.087004,8.377493,-1.282346,9.244065,-2.336200,-7.126186,-4.910006,9.115889,-5.404987,-7.840205,2.767972,2.682702,7.781066,3.977358,6.148485,-0.533062,-1.754219,3.938165,0.099062,-5.894257,0.629358,-2.777976,-1.095716,4.358243,0.674451,-4.542941,3.127321,4.418287,-2.488641,9.777402,2.003426,5.513811,6.065917,8.398710,-6.423740,0.748254,-5.204134,9.375781,9.252955,6.781267,-2.454191,0.985032,-7.159163,-7.662598,5.754635,-7.928688,3.255690,-0.544228,-0.073685,-9.287861,-2.012209,-8.275605,9.606715,2.003443,-7.921011,4.708393,9.877051,6.678045,7.331539,-1.078840,8.808778,-0.041978,-2.160836,6.763157,-1.304924,1.344309,7.020295,1.097941,5.554464,-8.648971,1.614736,-3.605345,-5.020217,-3.995755,-6.625342,1.010112,8.788217,-7.885664,-5.647955,-7.595559,0.781094,3.385793,-5.523475,-0.952857,-6.524142,1.216370,-5.229112,-3.115392,1.546248,6.998807,7.836392,8.838971,-1.378463,-8.164639,-9.237114,3.364706,2.879258,-3.675799,5.291660,0.516162,7.672856,4.656045,5.584953,5.630033,9.975001,-2.084110,9.038187,9.009016,3.795938,-9.499370,9.111546,-6.817033,4.605837,-0.607862,4.494098,-5.057599,-6.217590,-6.711795,4.918406,4.156440,-7.581009,9.223800,6.667269,7.530694,-2.159322,-2.262954,8.276630,-8.843558,-9.549991,7.322968,6.588182,-1.081232,-7.132745,6.863700,-3.882169,-4.853189,-6.753810,-0.942105,-0.382219,-6.897231,-5.979693,-3.181539,8.384004,-7.971232,8.824462,8.761936,9.967951,4.546019,7.221843,5.062185,6.632386,-1.704056,6.783314,0.649945,3.097003,-6.994594,0.413424,1.559644,-6.894098,-2.727881,-1.191358,-4.020140,9.273391,9.736436,-3.070372,1.408335,-8.246525,3.740196,-8.558126,6.516976,-6.217753,8.321696,4.710582,9.916508,-6.294043,8.844676,3.668721,-1.975805,5.438168,5.687820,-7.823398,2.430103,1.693240,-7.658351,-1.626427,5.165602,-9.806520,-1.689850,4.568079,1.439403,5.498393,-8.723526,-5.961063,4.911386,-2.143325,1.862193,1.334940,3.756937,7.181545,9.475469,-0.204485,-5.396393,6.946126,-9.229327,-1.429315,1.447294,-4.543957,5.156873,-9.234658,5.302102,8.245923,-3.384527,1.177408,1.440381,2.402577,-5.442624,6.679285,-8.954100,5.633066,-8.909634,-1.893692,8.271026,9.770483,8.350740,-4.096969,1.803404,2.898207,-7.207362,5.010028,2.806549,-0.250241,-0.393630,8.134388,7.005161,3.120948,-2.258674,8.350475,7.370372,-1.417460,-6.535440,5.655418,6.461924,9.709909,4.057699,1.359209,-7.422996,2.516201,-9.409907,1.302238,4.650965,1.182193,2.458435,-2.789098,6.551264,5.027239,3.950836,3.075330,-7.800929,-6.551830,-0.894114,-9.304499,-9.395870,7.752925,-3.626375,-7.329560,-3.257626,-4.339373,-7.763211,-5.267996,6.649399,8.095065,-3.485875,0.855954,-2.748047,-1.447100,-8.049600,9.311053,-4.574824,2.613629,4.505276,1.030448,8.741880,7.173229,-7.955779,1.364761,-0.854010,-9.047332,-6.324416,6.212441,0.344997,1.877216,-8.212969,-4.955962,7.521542,-6.295853,3.557389,-2.762880,9.107952,-7.895564,7.539549,1.806328,0.727536,-3.646563,-1.572129,-9.161690,-0.765791,1.775251,-2.395089,3.779735,1.483996,-3.406057,5.854260,8.099602,1.826790,-9.735780,1.346264,-6.154025,1.617389,-1.328411,-3.564446,-0.245800,-3.431887,5.021775,3.404672,6.686977,-4.591295,-5.120671,-6.274757,-7.124127,7.780995,3.490055,5.485648,9.861738,-0.620126,-2.274939,-1.716878,3.645118,-3.505025,7.822780,-6.666518,-0.236889,0.287523,-0.253086,-6.368357,9.597733,-2.648092,-7.310495,-0.216938,-5.400894,-1.462216,6.566125,3.105413,3.200947,7.803097,-3.051974,1.639898,7.877130,4.460773,4.523708,-0.849252,6.941555,6.868748,-5.554560,-4.955038,-0.125981,9.900350,8.095971,0.351525,-4.258384,-4.911081,-6.413288,6.429706,-5.502045,1.114614,-5.524743,-5.066931,-0.699632,-1.368924,6.764006,-5.528761,3.327503,1.709433,-6.842566,7.578730,9.859283,6.454431,-5.051262,2.118016,2.316699,-6.557668,0.133110,-3.335828,-5.285547,-7.004618,0.496911,1.429163,3.310795,0.939214,8.835229,-8.836712,-6.576967,-0.926220,6.667233,1.742970,9.658178,-4.432550,-2.078219,-9.897298,0.060257,-4.390732,5.307911,9.148008,-7.863096,0.867882,-0.724082,7.135750,0.718350,3.781473,4.018362,-0.900298,-4.287031,8.613805,3.403665,3.174712,9.228058,3.965405,6.786302,5.032211,2.261509,-8.105035,-4.379761,5.482746,6.484444,-9.836926,3.278150,6.365506,-7.365872,9.658951,4.216386,-9.870262,-7.834944,4.436583,7.024749,-9.641061,8.443641,-4.804075,-6.806028,-8.087154,-5.305928,-5.824578,9.806889,0.367369,5.383457,3.193609,2.050106,4.347550,5.193714,3.252522,6.232743,4.885445,-2.364867,-3.955773,8.654144,3.884765,-6.668544,-5.877408,9.067167,8.565932,-2.940822,7.008759,-7.407024,1.241185,-1.584667,-1.711586,-1.152235,-1.696196,7.193761,5.632221,1.319762,-2.299141,2.893474,2.679467,-8.048318,4.229621,2.335839,-5.494927,5.710871,6.507236,1.107295,2.185810,-4.277307,-3.433953,-2.161210,-4.342109,-0.238767,7.951827,3.534889,0.714698,7.326865,-9.404139,3.141017,4.360163,0.267663,-1.473928,-8.728542,-2.166225,-9.559350,1.934870,4.840166,-2.236310,-5.779052,5.727367,1.130702,-4.366576,5.977687,7.396391,9.527343,5.129381,-1.667483,1.036530,4.363529,7.892375,2.525557,-1.768271,-2.209767,-3.719764,7.950340,7.123318,-7.932592,6.435040,-0.106817,1.585949,8.026030,-4.432059,-3.033472,7.950505,-2.128908,2.492540,4.219277,-5.445855,1.946569,-4.876460,-6.886493,1.152145,4.366898,-8.733132,2.642085,-1.956104,-0.906770,-5.344251,-7.548422,-2.062078,-3.035433,-4.774507,7.538381,-5.435453,-0.879487,9.702507,-7.297800,2.786435,-4.284284,0.607983,1.787331,-9.360942,2.025840,9.747991,-6.379179,-1.790440,7.492303,-3.865215,6.023610,9.290149,-4.760063,-9.073701,9.181248,-8.177540,5.855754,-8.055253,8.579662,-5.558034,0.014507,8.881428,4.219218,0.891905,-3.951950,6.725653,-2.598534,4.063146,-6.848001,4.696215,-0.567738,1.220568,0.350807,-2.605593,-5.840084,3.063292,-2.056131,-8.308365,-0.056437,2.372598,0.182691,-6.319936,7.772962,-3.734905,5.158629,-1.548251,-7.602293,6.980457,0.435546,-4.453384,-7.019595,1.288005,-8.666488,-2.683391,3.612654,-4.544634,4.001897,-8.220076,-6.449940,-4.023067,-5.159855,2.927019,-6.536184,1.272290,0.735310,2.371115,7.248436,-4.869489,-6.806036,5.558208,-6.646422,6.222218,-1.300932,4.525615,-3.525594,4.150742,-3.195421,7.453501,1.176382,-0.326135,3.850841,8.896706,-2.460948,-1.852112,-8.935933,8.110382,6.020906,-2.087049,-4.902024,9.502961,9.501272,-3.969753,9.046215,-4.797015,-4.099052,1.971020,5.843058,-9.875140,9.805637,-5.033917,-0.371853,-7.626487,-9.447404,-3.491171,-8.742429,-0.962930,-8.048749,6.765604,-3.598189,-4.292511,-3.104414,-0.193193,-8.031828,-8.173668,-4.187389,-3.968371,-0.722925,-8.300445,6.240245,9.684955,-7.690317,-2.897431,-2.290278,2.850500,4.595353,8.697473,1.811786,9.440840,5.287006,1.818224,2.808438,-6.684887,7.654987,-5.282381,0.767029,-6.209017,0.588180,-7.721099,7.552383,9.340670,-7.798013,-2.069847,-0.798677,4.511199,2.726881,8.772178,-5.982996,-2.735650,3.455940,9.938971,5.138550,-2.135452,-0.674263,-8.500347,-5.108242,-7.776907,8.179317,3.316439,6.563799,1.993582,4.942161,9.642137,-8.291929,6.608923,-2.086491,7.140639,7.808116,2.687684,-1.764846,6.710523,1.475560,8.403490,-8.570240,-9.553478,-6.046865,8.018657,3.506795,2.248999,-9.819408,8.550022,6.822849,-4.820562,-8.223433,-6.442928,-3.908672,-4.068887,-6.007939,-1.955333,-5.555326,-4.263032,-3.602452,-3.726950,-3.870340,1.358487,7.459371,9.663371,9.835866,9.284780,4.413716,5.007229,7.134163,9.675681,6.331057,-0.244709,7.576425,-1.987590,-3.678313,1.599361,7.589950,-5.131280,4.683281,1.435559,5.287924,-4.943465,7.670357,-0.383328,8.712880,-1.661850,9.453284,-6.158328,3.905280,-5.757193,-5.442412,-6.252350,9.352120,-5.438941,-2.476984,1.461983,-4.455069,2.041098,9.356062,-0.941080,8.429870,-2.839037,4.223897,3.271806,2.642425,2.972677,6.374462,8.915019,-2.938627,0.452597,-1.867510,-3.865404,4.428568,-6.632587,-2.259325,9.378429,6.173175,-7.470593,1.315853,4.609051,-6.602907,-3.554411,-6.467071,-8.830376,0.751020,2.643022,-1.025369,-7.149661,6.120714,2.193708,6.530466,-4.223581,-6.217103,3.877976,-2.204323,-8.973497,7.590439,5.935890,0.178910,-3.349962,8.516879,-8.940435,-4.898961,7.674491,0.924836,4.602947,-2.624017,0.650312,-0.942048,-7.312728,7.296685,8.965083,1.606464,-4.070040,-6.436494,2.865911,-2.774667,-9.808438,-0.135653,5.206520,-4.790035,-2.305585,-0.629300,1.559211,-4.647406,7.056296,-3.345853,6.914131,7.935648,-9.132849,-9.660792,-6.314396,7.656400,0.439149,-4.075893,8.548428,1.866880,5.582554,7.933980,5.685471,-0.578913,7.260407,1.622246,-6.276116,-1.612451,0.102283,-5.196987,-2.888344,-4.199512,0.207524,-1.121202,1.518706,-1.933179,3.657319,4.423391,-4.062100,7.947932,-2.080014,-6.373340,-6.191179,-1.536272,3.224247,6.863858,-5.389064,-5.638571,-2.138588,8.556834,-7.038901,1.629272,7.044281,-0.779928,-3.972248,-7.113978,9.814202,-8.562475,0.916214,6.574274,0.738656,-9.549506,-6.214167,-1.926562,8.060309,-6.105704,5.327205,2.550813,-8.394036,-2.070768,-0.821614,1.817124,4.008467,7.238541,-4.059593,-4.802728,3.159099,-1.579078,8.923834,-5.957497,-0.198141,-4.064959,-9.521234,-8.696091,-3.202721,-1.548992,3.651611,-6.609632,8.295394,-5.779712,-6.093114,7.219944,1.735094,9.982400,-0.440858,-9.369430,-7.192190,8.696537,-3.447763,3.585508,-9.078753,5.548473,3.991381,3.178348,3.302707,3.634281,-2.530879,0.234635,-4.022502,-4.980788,9.117262,9.060587,8.231834,-3.153935,-9.990125,-9.262392,0.217062,2.431212,4.999298,1.406137,-5.704445,-1.306362,-1.163298,-8.950685,-1.628363,1.331667,3.851927,2.568944,7.001794,4.001959,8.403630,6.898041,5.913073,-9.691436,0.594979,-5.045686,-8.178427,-3.444973,-2.018857,9.571702,2.789826,-8.934741,3.497649,3.637102,-3.384748,-4.562991,9.343622,-8.306118,-2.319081,2.716152,3.457129,6.119261,8.260774,-0.182884,3.144597,-9.620066,-7.705195,4.606357,3.755215,6.467222,2.970161,0.935296,5.923869,-3.275129,-7.064672,7.733693,5.127348,0.950276,-3.822506,-1.526385,3.044339,-2.180722,-6.088074,2.820682,-7.725281,1.161901,6.224446,-4.403327,-0.560192,-7.404949,1.002975,-4.957888,0.529669,7.458994,5.096399,5.216575,-4.447949,3.540641,7.023798,-1.007878,0.207283,-5.713097,4.984528,4.115521,3.701876,-2.889369,3.286229,3.370109,0.132638,-7.718070,-9.761347,0.821348,1.172248,8.957237,-0.852705,-1.547850,1.249089,-2.005092,-2.589716,8.738517,5.129059,-4.603818,-1.937677,7.315960,-2.428939,7.007056,9.843980,4.587706,4.759154,-8.847811,3.745158,2.755957,9.037146,2.333670,1.647762,2.217295,-8.506917,8.419399,3.485609,-4.784301,-8.338067,-9.615620,8.768265,-9.557055,8.565083,-4.052438,9.339863,0.773970,0.258244,-7.400100,2.766538,5.335363,2.214673,5.891163,-4.151313,-8.413636,7.989303,-7.799234,6.834480,4.842162,4.953813,5.046207,9.054515,1.849012,0.656225,8.063923,8.735583,-4.814450,5.154652,7.419326,-6.788018,-1.715110,3.411677,-7.057828,5.067627,9.335550,0.078327,8.692050,0.154269,5.871472,2.651851,-6.782788,3.229142,3.006394,-4.465253,-7.194314,9.354419,-1.504449,-5.585039,1.807320,-4.796508,-4.716484,2.203548,-6.802301,6.341218,5.383652,-1.354366,1.242396,-7.404736,-3.588163,-5.028987,5.482530,0.911910,-5.744981,-1.780259,1.496513,-4.686327,-8.051503,0.922518,-1.506193,-3.060034,6.145675,1.239699,9.946019,-0.230191,-8.024668,-5.084657,-3.845233,1.617839,9.578048,-7.828748,-4.315833,4.152940,-5.202579,6.522276,1.293511,-6.088262,-9.511842,3.186174,9.311307,6.065149,-3.869688,-4.528017,9.136983,7.877465,8.332621,7.575897,-5.931147,2.797506,-1.082686,-4.842140,-2.738479,-4.811290,-2.509404,-9.832042,1.037884,-4.638342,-7.245290,-3.235534,-0.315938,-5.201762,0.155278,-1.862948,-2.816484,-0.958504,-7.341083,-4.224532], dtype = "float64")#candidate|6640|(1872,)|const|float64
call_6639 = func_3759_call(relay.reshape(const_6640.astype('float64'), [12, 12, 13]), relay.reshape(const_6640.astype('float64'), [12, 12, 13]), )
call_6641 = func_3759_call(relay.reshape(const_6640.astype('float64'), [12, 12, 13]), relay.reshape(const_6640.astype('float64'), [12, 12, 13]), )
bop_6644 = relay.subtract(call_6636.astype('int32'), const_6640.astype('int32')) # shape=(35, 1872)
bop_6647 = relay.subtract(call_6637.astype('int32'), const_6640.astype('int32')) # shape=(35, 1872)
func_6447_call = mod.get_global_var('func_6447')
func_6449_call = mutated_mod.get_global_var('func_6449')
var_6657 = relay.var("var_6657", dtype = "float32", shape = (1008,))#candidate|6657|(1008,)|var|float32
call_6656 = relay.TupleGetItem(func_6447_call(relay.reshape(var_6657.astype('float32'), [252, 4])), 5)
call_6658 = relay.TupleGetItem(func_6449_call(relay.reshape(var_6657.astype('float32'), [252, 4])), 5)
uop_6673 = relay.cosh(call_6636.astype('float32')) # shape=(35, 1)
uop_6675 = relay.cosh(call_6637.astype('float32')) # shape=(35, 1)
func_5776_call = mod.get_global_var('func_5776')
func_5779_call = mutated_mod.get_global_var('func_5779')
var_6680 = relay.var("var_6680", dtype = "float32", shape = (132,))#candidate|6680|(132,)|var|float32
call_6679 = relay.TupleGetItem(func_5776_call(relay.reshape(var_6680.astype('float32'), [6, 11, 2])), 0)
call_6681 = relay.TupleGetItem(func_5779_call(relay.reshape(var_6680.astype('float32'), [6, 11, 2])), 0)
bop_6689 = relay.left_shift(uop_6673.astype('uint64'), const_6640.astype('uint64')) # shape=(35, 1872)
bop_6692 = relay.left_shift(uop_6675.astype('uint64'), const_6640.astype('uint64')) # shape=(35, 1872)
func_5983_call = mod.get_global_var('func_5983')
func_5985_call = mutated_mod.get_global_var('func_5985')
var_6700 = relay.var("var_6700", dtype = "int8", shape = ())#candidate|6700|()|var|int8
call_6699 = relay.TupleGetItem(func_5983_call(relay.reshape(var_6700.astype('int8'), [])), 0)
call_6701 = relay.TupleGetItem(func_5985_call(relay.reshape(var_6700.astype('int8'), [])), 0)
output = relay.Tuple([call_6639,bop_6644,call_6656,var_6657,call_6679,var_6680,bop_6689,call_6699,var_6700,])
output2 = relay.Tuple([call_6641,bop_6647,call_6658,var_6657,call_6681,var_6680,bop_6692,call_6701,var_6700,])
func_6708 = relay.Function([var_6657,var_6680,var_6700,], output)
mod['func_6708'] = func_6708
mod = relay.transform.InferType()(mod)
var_6709 = relay.var("var_6709", dtype = "float32", shape = (1008,))#candidate|6709|(1008,)|var|float32
var_6710 = relay.var("var_6710", dtype = "float32", shape = (132,))#candidate|6710|(132,)|var|float32
var_6711 = relay.var("var_6711", dtype = "int8", shape = ())#candidate|6711|()|var|int8
output = func_6708(var_6709,var_6710,var_6711,)
func_6712 = relay.Function([var_6709,var_6710,var_6711,], output)
mutated_mod['func_6712'] = func_6712
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6798 = relay.const([[[-4.273279,-0.980480,7.981998,2.102941,1.673967],[3.062874,-2.509905,-1.324668,9.977264,7.065480],[-0.118154,8.633432,-8.324583,-8.217985,-6.529978],[-8.063182,7.029930,7.031667,4.169850,-7.321886],[-5.181704,-1.631050,0.626663,8.992925,-5.644382],[-1.612866,-9.525893,2.110583,6.654248,6.783416]],[[5.124028,-3.684400,-3.052070,9.294342,-3.062931],[-1.272575,-0.694125,9.959932,2.144394,-7.291340],[6.979259,0.107450,6.283887,-3.427680,-2.710453],[-6.720810,0.726417,9.966412,-3.539076,-6.273533],[-1.307278,2.896397,5.148221,-1.254071,-5.160418],[-4.430882,0.534288,8.546547,-3.832294,2.660820]],[[0.226715,-2.398378,7.157063,-9.837606,-0.977664],[-4.461457,8.271238,1.373384,9.687232,-2.555752],[5.417855,9.174694,-2.582863,8.354493,5.960822],[6.778414,-2.344539,1.775987,4.970230,5.756004],[-5.415941,-9.978144,-9.219513,-5.119752,-5.979181],[8.865945,1.263317,-8.880884,7.495545,-6.398427]],[[1.575629,-7.088709,6.488290,1.532485,5.828179],[3.807434,-9.811488,-2.851560,9.123803,-5.820998],[2.579320,1.409118,6.938009,-0.626114,8.529840],[9.285415,-8.501639,-8.916076,6.245905,9.858457],[3.451657,2.158320,-4.739222,-7.591080,-5.896124],[4.312385,-4.981298,6.163761,3.127865,-4.560715]],[[-3.380115,5.160070,7.193050,8.587888,8.680662],[-4.777469,4.862767,-7.331662,4.156807,8.728751],[-9.401367,9.009316,-7.129859,-7.000974,-3.391875],[-7.085561,-3.089940,4.688691,-2.982664,-7.895233],[6.893824,-6.871329,-8.431664,0.707549,7.657463],[-0.794903,3.985402,-4.201427,-8.316687,2.892195]],[[4.057020,0.650427,8.129227,-8.291806,3.920750],[7.236104,5.917544,9.801615,7.193844,4.863727],[-1.430539,-7.357765,4.041177,8.402155,3.821823],[-3.968677,-5.870089,-9.009421,-5.050074,0.304455],[0.646549,6.563051,-5.421151,3.418193,6.964653],[-9.856998,-3.266597,1.551150,3.029120,9.223149]],[[-1.383018,-9.114622,7.639563,-1.172318,4.648566],[-6.567832,3.816357,1.539396,-0.220289,4.223434],[0.746350,4.772899,-5.896125,2.290745,7.186077],[-2.457910,-8.570773,7.422785,5.202396,6.799595],[8.100409,1.393309,9.895579,2.574228,1.065578],[3.814779,-0.396630,-5.620970,-0.321214,0.629997]],[[-6.927030,1.244489,-4.101918,1.013584,-3.751517],[-6.141148,-6.966892,-1.715942,-8.585109,5.248952],[-0.153527,-2.379495,-4.735612,4.803221,-1.713433],[-0.739787,-1.734360,0.974962,-9.657996,-6.679986],[8.501275,0.905964,6.265890,-0.391281,2.686863],[8.633124,-5.204399,-7.706331,7.235298,2.555955]],[[-7.670982,-2.957936,6.307553,4.480972,-0.184978],[6.170824,-2.978113,9.469964,-8.706790,6.673304],[-7.150675,-9.464279,-6.611992,4.237177,-9.499063],[7.543200,-6.633467,-7.917490,8.220220,-3.908571],[8.165362,-9.483535,-5.710087,6.936170,0.646104],[-1.204184,-6.959961,-2.975785,4.683574,-1.236992]],[[1.030185,1.410787,7.731772,4.709863,7.426146],[6.926592,7.761375,7.510273,5.436887,0.224325],[4.526624,-9.051671,-0.765454,7.655686,-3.170977],[9.299094,3.946705,-4.539605,-2.890091,-2.129509],[0.589019,7.890801,3.783335,-9.605263,1.999181],[8.595796,3.560810,-1.268652,-8.464699,7.030684]]], dtype = "float64")#candidate|6798|(10, 6, 5)|const|float64
uop_6799 = relay.sigmoid(const_6798.astype('float64')) # shape=(10, 6, 5)
output = relay.Tuple([uop_6799,])
output2 = relay.Tuple([uop_6799,])
func_6802 = relay.Function([], output)
mod['func_6802'] = func_6802
mod = relay.transform.InferType()(mod)
output = func_6802()
func_6803 = relay.Function([], output)
mutated_mod['func_6803'] = func_6803
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6151_call = mod.get_global_var('func_6151')
func_6152_call = mutated_mod.get_global_var('func_6152')
call_6820 = relay.TupleGetItem(func_6151_call(), 0)
call_6821 = relay.TupleGetItem(func_6152_call(), 0)
output = relay.Tuple([call_6820,])
output2 = relay.Tuple([call_6821,])
func_6829 = relay.Function([], output)
mod['func_6829'] = func_6829
mod = relay.transform.InferType()(mod)
mutated_mod['func_6829'] = func_6829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6829_call = mutated_mod.get_global_var('func_6829')
call_6830 = func_6829_call()
output = call_6830
func_6831 = relay.Function([], output)
mutated_mod['func_6831'] = func_6831
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5887_call = mod.get_global_var('func_5887')
func_5888_call = mutated_mod.get_global_var('func_5888')
call_6832 = func_5887_call()
call_6833 = func_5887_call()
var_6834 = relay.var("var_6834", dtype = "float64", shape = (10, 5, 14))#candidate|6834|(10, 5, 14)|var|float64
bop_6835 = relay.divide(call_6832.astype('float32'), relay.reshape(var_6834.astype('float32'), relay.shape_of(call_6832))) # shape=(10, 5, 14)
bop_6838 = relay.divide(call_6833.astype('float32'), relay.reshape(var_6834.astype('float32'), relay.shape_of(call_6833))) # shape=(10, 5, 14)
bop_6840 = relay.logical_or(bop_6835.astype('bool'), relay.reshape(var_6834.astype('bool'), relay.shape_of(bop_6835))) # shape=(10, 5, 14)
bop_6843 = relay.logical_or(bop_6838.astype('bool'), relay.reshape(var_6834.astype('bool'), relay.shape_of(bop_6838))) # shape=(10, 5, 14)
output = relay.Tuple([bop_6840,])
output2 = relay.Tuple([bop_6843,])
func_6854 = relay.Function([var_6834,], output)
mod['func_6854'] = func_6854
mod = relay.transform.InferType()(mod)
var_6855 = relay.var("var_6855", dtype = "float64", shape = (10, 5, 14))#candidate|6855|(10, 5, 14)|var|float64
output = func_6854(var_6855)
func_6856 = relay.Function([var_6855], output)
mutated_mod['func_6856'] = func_6856
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6829_call = mod.get_global_var('func_6829')
func_6831_call = mutated_mod.get_global_var('func_6831')
call_6937 = relay.TupleGetItem(func_6829_call(), 0)
call_6938 = relay.TupleGetItem(func_6831_call(), 0)
output = call_6937
output2 = call_6938
func_6939 = relay.Function([], output)
mod['func_6939'] = func_6939
mod = relay.transform.InferType()(mod)
mutated_mod['func_6939'] = func_6939
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6939_call = mutated_mod.get_global_var('func_6939')
call_6940 = func_6939_call()
output = call_6940
func_6941 = relay.Function([], output)
mutated_mod['func_6941'] = func_6941
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6124_call = mod.get_global_var('func_6124')
func_6125_call = mutated_mod.get_global_var('func_6125')
call_6944 = func_6124_call()
call_6945 = func_6124_call()
func_6389_call = mod.get_global_var('func_6389')
func_6392_call = mutated_mod.get_global_var('func_6392')
var_6950 = relay.var("var_6950", dtype = "int64", shape = (630,))#candidate|6950|(630,)|var|int64
call_6949 = relay.TupleGetItem(func_6389_call(relay.reshape(var_6950.astype('int64'), [3, 14, 15]), relay.reshape(var_6950.astype('int64'), [3, 14, 15]), ), 0)
call_6951 = relay.TupleGetItem(func_6392_call(relay.reshape(var_6950.astype('int64'), [3, 14, 15]), relay.reshape(var_6950.astype('int64'), [3, 14, 15]), ), 0)
func_6389_call = mod.get_global_var('func_6389')
func_6392_call = mutated_mod.get_global_var('func_6392')
call_6952 = relay.TupleGetItem(func_6389_call(relay.reshape(call_6949.astype('int64'), [3, 14, 15]), relay.reshape(var_6950.astype('int64'), [3, 14, 15]), ), 0)
call_6953 = relay.TupleGetItem(func_6392_call(relay.reshape(call_6949.astype('int64'), [3, 14, 15]), relay.reshape(var_6950.astype('int64'), [3, 14, 15]), ), 0)
func_2685_call = mod.get_global_var('func_2685')
func_2691_call = mutated_mod.get_global_var('func_2691')
const_6955 = relay.const([-5.305548,-8.256669,8.075979,-1.278145,-6.459811,9.836315,-0.905252,3.917351,4.692688,-7.062988,9.314079,2.476007,-8.210027,-0.022016,-6.115528,-6.653788,-5.661711,-6.085935,4.529351,-3.398636,-7.982182,8.530255,-5.099887,6.540929,-1.756165,-0.386172,7.092214,0.675889,-8.497942,6.871765,9.296698,8.069886,-5.648023,8.053757,-1.071230,2.334270,-2.654249,7.859700,9.514120,-0.803681,-5.529518,-8.060019,6.345168,-2.944714,6.554568,-5.830084,9.078411,8.728262,2.656269,-7.871453,-2.064749,-2.342743,-9.076794,8.248847,-9.473733,-6.751915,-6.722764,4.233313,-5.090930,5.562923,1.543452,-7.122777,2.201636,6.484143,-3.068846,-4.751176,2.048064,8.563508,-0.634130,-8.913255,9.204440,-8.452067,3.722691,8.870718,4.411749,5.525380,-8.946135,2.537956,0.405841,-6.081644,-1.715483,-9.850797,-9.804395,-0.511209,-5.597347,4.253842,2.192195,4.673175,8.288229,-2.462664,3.706430,-4.540458,0.593672,1.487763,-8.730970,-3.667619,-5.515896,-3.519195,5.450846,-2.651138,6.050239,7.811179,3.428260,9.992624,1.990807,8.026805,-2.698297,-8.195316,5.522744,-6.873097,2.373324,2.869772,-1.518244,-3.394883,-1.592216,1.595989,3.421919,-9.607976,-0.802121,9.050954,4.003350,-4.869871,-4.388822,8.551825,1.808242,2.934972,-1.092118,-2.471784,9.652293,-7.890802,5.465199,7.838506,-4.445542,5.633399,-6.024399,-7.576639,3.937830,2.488036,7.780965,-3.015214,-8.406936,-2.130667,-0.197431,9.256633,7.126077,7.151523,-1.404790,2.766029,-9.205081,9.661022,-9.147342,-3.526461,-9.367222,7.708549,-9.952330,-1.884015,-3.791815,7.516803,-0.962264,-0.630823,4.846128,-3.924498,-7.714653,-7.753742,1.137240,5.044460,-3.311890,2.419914,7.544077,-4.760852,-4.772117,3.601825,6.690877,4.357114,7.095734,-3.383865,0.472863,-3.041010,-8.963099,-9.418093,-5.774446,2.269894,3.276520,-7.369114,-8.408821,-0.730901,1.824491,2.175903,4.305923,-9.459811,-9.620170,7.929401,-7.917197,6.066252,-4.773146,-8.358025,-1.861168,7.484197,-0.437734,-9.253261,4.391417,-6.266487,-9.578672,0.768154,-8.952319,1.710033,-7.122571,8.424392,-2.753515,-2.247387], dtype = "float64")#candidate|6955|(210,)|const|float64
var_6956 = relay.var("var_6956", dtype = "float64", shape = (15, 117))#candidate|6956|(15, 117)|var|float64
call_6954 = relay.TupleGetItem(func_2685_call(relay.reshape(const_6955.astype('float64'), [2, 15, 7]), relay.reshape(const_6955.astype('float64'), [2, 15, 7]), relay.reshape(var_6956.astype('float64'), [1755,]), relay.reshape(call_6944.astype('float64'), [35,]), ), 0)
call_6957 = relay.TupleGetItem(func_2691_call(relay.reshape(const_6955.astype('float64'), [2, 15, 7]), relay.reshape(const_6955.astype('float64'), [2, 15, 7]), relay.reshape(var_6956.astype('float64'), [1755,]), relay.reshape(call_6944.astype('float64'), [35,]), ), 0)
output = relay.Tuple([call_6944,call_6949,var_6950,call_6952,call_6954,const_6955,var_6956,])
output2 = relay.Tuple([call_6945,call_6951,var_6950,call_6953,call_6957,const_6955,var_6956,])
func_6966 = relay.Function([var_6950,var_6956,], output)
mod['func_6966'] = func_6966
mod = relay.transform.InferType()(mod)
mutated_mod['func_6966'] = func_6966
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6966_call = mutated_mod.get_global_var('func_6966')
var_6968 = relay.var("var_6968", dtype = "int64", shape = (630,))#candidate|6968|(630,)|var|int64
var_6969 = relay.var("var_6969", dtype = "float64", shape = (15, 117))#candidate|6969|(15, 117)|var|float64
call_6967 = func_6966_call(var_6968,var_6969,)
output = call_6967
func_6970 = relay.Function([var_6968,var_6969,], output)
mutated_mod['func_6970'] = func_6970
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6124_call = mod.get_global_var('func_6124')
func_6125_call = mutated_mod.get_global_var('func_6125')
call_6986 = func_6124_call()
call_6987 = func_6124_call()
const_6990 = relay.const([[-5.271240,9.401514,-3.048050,-0.314390,-9.730022,-0.780203,-9.191315,-2.480885,6.971397],[-1.705441,-8.388680,9.545634,-5.096097,-4.450608,5.956414,-9.199879,-3.648908,1.725264],[-7.339373,-1.383853,-9.175391,-8.580625,5.738998,3.545723,1.996050,9.256877,-6.872009],[3.091804,-7.286638,1.363008,3.980703,5.204480,4.737176,-4.960534,-0.378223,-7.648604],[0.334510,9.232896,3.746420,8.482304,-8.251830,-5.410710,-1.425167,7.498365,0.314478],[-1.207672,-0.495153,-1.446212,-8.846078,2.717476,1.745716,-0.245722,-0.945838,9.317135],[-7.930837,2.683239,-9.414583,-9.563528,5.381532,5.785732,-2.760560,1.677495,-5.310708],[-3.797005,-2.217516,6.061237,2.268962,4.272719,-2.514676,3.911135,5.716368,8.985347],[-0.474510,-8.371694,-7.890771,-4.532913,8.811687,3.378465,3.489769,6.792877,-9.333962],[-6.852529,-1.927718,2.019868,-4.538966,1.805633,7.590653,7.674669,-9.079718,1.901409],[-0.446070,6.061698,5.261087,2.756583,-7.072009,1.320621,7.717060,-5.482443,6.633666],[-7.016658,-6.497658,1.270112,5.455843,7.836559,1.145213,-1.759718,-1.216763,5.695072],[-6.986786,8.211391,3.270584,0.605705,-1.984584,-7.950621,-8.918583,3.242514,6.109916],[-3.653263,-0.592191,-2.625572,0.865016,1.579249,0.179245,5.908992,0.507973,-8.161190],[7.331373,7.541420,-5.430691,9.494934,9.708992,6.469645,-2.938468,8.142822,-5.442200],[-0.378358,-0.385910,3.013889,-9.870937,8.695573,0.912726,1.877641,-9.664930,-2.730831],[-1.077473,7.068594,7.054481,-6.638105,-9.630412,-9.081474,-2.450545,-0.938237,-9.675035],[-4.364576,0.423338,-2.213934,9.511324,2.939919,-7.219039,-8.781763,-2.892304,-1.748741],[0.776697,3.760334,-7.618147,-9.303448,-3.654939,4.561935,-0.091329,9.969695,-2.831858],[5.236787,7.015018,4.871909,-5.541759,8.745668,4.930249,-9.759917,-7.858633,-5.737119],[7.763799,7.963583,-5.860665,-8.776640,-1.777784,-1.292056,7.499345,0.051376,-8.661760],[6.805892,-2.169817,6.632647,-9.970478,-0.827280,4.500015,-1.368847,4.736267,-9.161828],[-4.930250,6.532476,2.905108,6.163569,9.778274,5.408129,0.945597,-9.385271,2.239990],[4.052299,-2.899717,3.612064,1.239789,-7.400779,5.173588,-0.484247,-6.354201,4.924523],[7.068531,-6.587479,5.878563,-9.998092,-1.599274,-2.739392,1.337419,-6.640506,-4.815368],[0.566890,9.290735,-9.704705,1.973262,-8.085835,-4.845577,1.549115,3.979678,-8.018211],[3.134751,3.176200,-5.990180,-5.542884,-3.443626,2.280827,-6.199868,-8.355643,-8.979398],[-8.219153,2.088289,8.110165,-2.338556,3.310462,2.066707,-4.948442,-5.586535,-9.869886],[-5.720129,-1.616064,1.398536,4.870573,3.013458,9.032727,-7.012340,7.422101,4.513087],[-8.481642,9.592364,1.998499,6.999338,3.874054,8.681520,-6.133397,-1.178832,-4.104935],[-5.821356,7.355545,2.996842,-3.466741,4.250311,1.921307,-0.128209,-0.947387,3.069819],[-8.560952,-0.780463,2.410513,-5.756063,4.359578,-9.622428,-0.358481,1.257829,-1.588138],[2.978017,-0.729143,-9.521434,6.884920,1.491664,-4.726619,8.272572,-4.185574,1.660984],[4.635563,5.104124,-2.613001,7.898814,8.864550,4.050686,7.591053,-6.868731,2.803577],[-7.041695,4.615095,-6.199996,-3.034219,4.867241,7.118993,-0.962377,-5.296041,0.317257]], dtype = "float64")#candidate|6990|(35, 9)|const|float64
bop_6991 = relay.divide(call_6986.astype('float64'), const_6990.astype('float64')) # shape=(35, 9)
bop_6994 = relay.divide(call_6987.astype('float64'), const_6990.astype('float64')) # shape=(35, 9)
uop_7005 = relay.sin(const_6990.astype('float64')) # shape=(35, 9)
bop_7007 = relay.bitwise_or(uop_7005.astype('int32'), relay.reshape(bop_6991.astype('int32'), relay.shape_of(uop_7005))) # shape=(35, 9)
bop_7010 = relay.bitwise_or(uop_7005.astype('int32'), relay.reshape(bop_6994.astype('int32'), relay.shape_of(uop_7005))) # shape=(35, 9)
uop_7015 = relay.tan(bop_7007.astype('float64')) # shape=(35, 9)
uop_7017 = relay.tan(bop_7010.astype('float64')) # shape=(35, 9)
bop_7019 = relay.multiply(uop_7015.astype('uint32'), relay.reshape(bop_6991.astype('uint32'), relay.shape_of(uop_7015))) # shape=(35, 9)
bop_7022 = relay.multiply(uop_7017.astype('uint32'), relay.reshape(bop_6994.astype('uint32'), relay.shape_of(uop_7017))) # shape=(35, 9)
func_5860_call = mod.get_global_var('func_5860')
func_5864_call = mutated_mod.get_global_var('func_5864')
var_7030 = relay.var("var_7030", dtype = "float64", shape = (70,))#candidate|7030|(70,)|var|float64
call_7029 = relay.TupleGetItem(func_5860_call(relay.reshape(var_7030.astype('float64'), [35, 2]), relay.reshape(var_7030.astype('float64'), [35, 2]), ), 1)
call_7031 = relay.TupleGetItem(func_5864_call(relay.reshape(var_7030.astype('float64'), [35, 2]), relay.reshape(var_7030.astype('float64'), [35, 2]), ), 1)
uop_7032 = relay.exp(bop_7019.astype('float32')) # shape=(35, 9)
uop_7034 = relay.exp(bop_7022.astype('float32')) # shape=(35, 9)
uop_7046 = relay.log10(const_6990.astype('float32')) # shape=(35, 9)
output = relay.Tuple([call_7029,var_7030,uop_7032,uop_7046,])
output2 = relay.Tuple([call_7031,var_7030,uop_7034,uop_7046,])
func_7082 = relay.Function([var_7030,], output)
mod['func_7082'] = func_7082
mod = relay.transform.InferType()(mod)
var_7083 = relay.var("var_7083", dtype = "float64", shape = (70,))#candidate|7083|(70,)|var|float64
output = func_7082(var_7083)
func_7084 = relay.Function([var_7083], output)
mutated_mod['func_7084'] = func_7084
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7086 = relay.const([[[7,2,-3,-9,6],[8,4,-4,-6,3],[-3,-8,-4,-6,-5],[-2,-10,2,-9,-10],[10,-4,-10,9,-9],[1,3,-10,4,5],[-6,-10,3,2,5],[-1,-1,-1,-1,4],[1,1,3,-4,-9],[8,7,-4,4,-6],[-7,5,-10,-7,-7],[3,6,-5,-9,-10],[7,4,8,6,-3],[10,-7,-5,3,2]],[[-5,-1,8,2,4],[-6,9,-5,-7,6],[3,-7,3,1,-6],[-10,-5,1,-7,-3],[-4,4,-8,-8,-1],[-6,-2,-7,6,5],[-1,2,5,1,6],[-3,-4,4,5,8],[6,-2,-6,-5,7],[4,-4,5,-2,1],[2,-8,10,-8,-2],[3,-2,-8,4,-1],[-3,8,-3,-7,9],[3,-2,8,3,-9]],[[6,-4,-6,7,8],[-10,6,10,-1,4],[-7,-3,-10,-10,-9],[-9,-2,-3,9,-6],[-7,8,4,-3,-7],[9,6,2,3,10],[-3,-6,3,-3,9],[-7,-6,2,-7,9],[3,-9,-7,6,4],[-3,4,4,-9,10],[-6,6,4,-4,-2],[6,-8,-6,-5,-7],[10,-8,9,2,6],[-10,8,4,4,4]],[[10,5,2,-5,6],[6,1,-10,3,-2],[3,3,8,5,5],[9,-7,3,6,8],[9,-7,7,5,-9],[-1,9,-4,-1,-10],[-8,4,-1,-7,-5],[8,9,8,-3,8],[-2,-4,2,9,-9],[-2,7,-2,-2,-5],[6,-3,-1,10,6],[7,6,-10,-1,6],[7,9,-3,-2,2],[4,-3,2,9,-7]],[[10,4,7,-6,2],[-10,-9,3,-10,9],[-2,-9,-1,8,-2],[9,-1,8,7,-6],[-8,-8,-5,-1,5],[8,-2,-4,-7,4],[-7,1,-6,-6,3],[-1,-8,7,9,-10],[-7,-6,5,-3,2],[2,-10,7,-2,-6],[5,-7,6,8,-2],[-4,9,8,-7,6],[8,-9,1,-4,-1],[9,10,10,-7,-3]],[[-9,8,4,1,8],[-3,7,7,-9,10],[-3,-7,4,1,8],[-2,1,-6,-7,10],[-6,4,-4,1,1],[-5,-2,-9,10,10],[6,-6,2,-5,10],[-8,8,-10,-2,8],[-4,-2,-5,-5,-3],[-2,6,7,1,9],[-7,8,9,-10,10],[-8,10,3,1,10],[-2,2,-10,6,-2],[3,-3,7,-8,7]],[[-4,4,-3,9,4],[7,-2,4,9,-3],[6,-10,-6,5,3],[-4,4,-1,5,-10],[-1,-9,-5,7,4],[5,-6,10,-2,-8],[6,-2,-1,1,4],[7,8,10,-8,9],[7,-3,-1,-6,10],[7,-5,-8,1,2],[-3,-3,-6,6,10],[-5,1,1,-1,-4],[1,6,-8,2,-8],[-5,3,1,10,3]],[[-5,8,-8,-10,8],[-9,3,2,-4,1],[9,10,-3,-3,-10],[-5,-7,-3,-2,2],[-4,8,8,1,6],[-1,-9,7,4,6],[-6,-9,2,8,4],[5,-2,-5,4,-2],[9,3,8,9,2],[4,-6,1,-4,3],[8,5,-2,-2,-8],[5,2,5,-10,10],[2,9,8,4,-8],[1,7,-8,10,-3]],[[4,6,-8,6,7],[-7,1,-5,-6,4],[-7,10,2,-5,7],[1,-6,7,-9,-1],[8,-5,5,-9,-2],[5,-7,5,4,-4],[-8,2,3,9,4],[-10,9,3,-7,5],[5,-9,4,6,4],[8,-4,-7,4,8],[-7,10,4,-9,8],[-2,-1,-9,-7,-4],[-2,4,-5,-10,-8],[-6,-9,-2,-2,5]],[[3,4,6,-1,-6],[-3,-9,4,-9,-2],[-7,5,-7,-6,-6],[-8,6,-4,-7,7],[-2,-4,9,-7,-4],[-7,-7,4,9,-2],[1,-5,4,-3,-6],[4,1,1,6,10],[6,1,-2,-9,7],[8,-3,-8,6,-10],[2,-2,-4,4,-10],[-3,4,2,-1,6],[2,7,-1,-6,6],[9,2,10,-6,-9]],[[9,-3,-6,-8,7],[6,-10,-7,-1,5],[-1,-7,8,10,-2],[-10,-2,3,-9,-6],[4,6,-8,4,5],[7,6,10,1,-5],[10,-7,10,10,-10],[-4,10,-2,-2,-8],[-6,5,-10,5,7],[-6,7,7,3,5],[-6,2,8,4,10],[10,-8,-9,10,-10],[6,-3,-9,-10,-10],[10,7,-9,5,6]],[[-5,1,-1,-2,4],[9,-7,-5,-3,-3],[-4,-6,-2,-6,8],[2,10,9,-4,4],[2,-10,-4,-7,3],[-1,-10,10,1,9],[-9,7,4,9,-6],[6,6,6,4,-8],[-1,6,5,-5,1],[10,-7,-9,2,9],[-3,-3,-2,9,-2],[4,8,-7,7,9],[-8,-8,-5,-5,7],[4,-8,8,-8,7]],[[8,5,3,-8,6],[8,6,8,-5,8],[-5,-3,-9,-3,2],[7,1,-5,-4,5],[-2,-1,-9,2,9],[7,2,7,10,8],[-9,-1,7,-7,1],[-8,-4,-1,-7,8],[-5,-2,-2,-10,-8],[-6,5,9,7,2],[7,1,10,-4,-7],[5,-5,8,-3,-4],[9,9,-9,-6,2],[4,-8,1,-7,5]]], dtype = "int32")#candidate|7086|(13, 14, 5)|const|int32
var_7087 = relay.var("var_7087", dtype = "int32", shape = (13, 14, 5))#candidate|7087|(13, 14, 5)|var|int32
bop_7088 = relay.right_shift(const_7086.astype('int32'), relay.reshape(var_7087.astype('int32'), relay.shape_of(const_7086))) # shape=(13, 14, 5)
func_6615_call = mod.get_global_var('func_6615')
func_6620_call = mutated_mod.get_global_var('func_6620')
var_7099 = relay.var("var_7099", dtype = "float64", shape = (128,))#candidate|7099|(128,)|var|float64
var_7100 = relay.var("var_7100", dtype = "float64", shape = (5, 351))#candidate|7100|(5, 351)|var|float64
var_7101 = relay.var("var_7101", dtype = "uint8", shape = ())#candidate|7101|()|var|uint8
const_7102 = relay.const([2,6,8,1,-7,-5,-8,-2,-6,4,-10,9,-2,10,-1,-3,-8,-1,1,6,-5,-4,7,3,-4,1,5,-1,-2,-9,2,5,3,6,6,-1,-3,5,10,3,8,-2,-3,-10,-4,7,-10,-5,8,6,-1,6,-1,-4,-10,7,-9,3,-1,-7,3,-10,8,-8,7,10,-1,2,7,5,2,-9,10,-3,4,-6,5,10,1,2,1,6,8,6,-5,-7,4,8,-8,6,2,-1,-6,-2,8,-5,-6,3,-10,-3,1,-1,-6,10,1,-9,6,4,8,10,-2,5,5,-3,-8,-9,-6,3,-9,-9,-8,7,-6,-7,7,-2,-2,8,-6,2,7,2], dtype = "uint8")#candidate|7102|(132,)|const|uint8
call_7098 = relay.TupleGetItem(func_6615_call(relay.reshape(var_7099.astype('float64'), [128,]), relay.reshape(var_7100.astype('float64'), [1755,]), relay.reshape(var_7101.astype('uint8'), []), relay.reshape(const_7102.astype('uint8'), [132,]), ), 6)
call_7103 = relay.TupleGetItem(func_6620_call(relay.reshape(var_7099.astype('float64'), [128,]), relay.reshape(var_7100.astype('float64'), [1755,]), relay.reshape(var_7101.astype('uint8'), []), relay.reshape(const_7102.astype('uint8'), [132,]), ), 6)
func_6215_call = mod.get_global_var('func_6215')
func_6217_call = mutated_mod.get_global_var('func_6217')
call_7111 = relay.TupleGetItem(func_6215_call(relay.reshape(var_7099.astype('float64'), [32, 4])), 0)
call_7112 = relay.TupleGetItem(func_6217_call(relay.reshape(var_7099.astype('float64'), [32, 4])), 0)
func_6447_call = mod.get_global_var('func_6447')
func_6449_call = mutated_mod.get_global_var('func_6449')
const_7119 = relay.const([[-4.573660,-3.300492,-8.254338,-4.552251,9.281913,-2.160514,-1.600720,9.496743,8.545707,-9.211369,0.430095,-5.256910,-9.129857,4.903757,8.804209,-5.943548,7.180344,-7.404875,2.791176,8.561319,1.699533,9.069321,-5.196111,1.018723,8.080540,-8.887715,-6.889777,3.497985,-5.835652,7.694609,-2.162877,-9.796540,-1.338656,6.336940,7.722071,2.086734,-2.630531,-8.814777,5.917154,4.679771,1.069419,-6.382769,-5.419765,-8.948137,-4.540456,-2.450283,-7.146991,-3.147875,7.357802,-8.964639,9.600560,6.046550,-5.771199,-5.220991,-6.392002,-2.496467,6.682509,1.445471,-9.327877,9.200532,-8.751489,5.267080,-5.380609,2.425142,8.587727,-5.035960,7.678701,4.473438,8.600418,-3.937658,8.684313,-6.265474,0.946626,-3.683604,4.114391,-5.006524,3.943350,-8.253202,3.032486,8.288389,7.166168,8.331617,1.199572,0.865727,6.306821,-7.467256,-7.029950,1.982227,9.290645,-5.674798,1.523907,-0.242390,-8.102965,-1.031006,-8.216600,4.184449,0.511076,4.657515,3.464223,-6.713932,-3.148784,9.227340,4.634738,-8.842944,-6.145590,0.005144,4.355183,-2.108614,9.760212,7.491968,-6.904756,2.920276,-8.616723,-9.339759,6.534247,-5.046581,-1.670924,4.206518,-4.282974,-2.142193,-8.665585,3.182170,5.716844,4.457051,-8.521459,-2.085175,9.795760,4.004584,-5.958448,0.457247,-0.451710,3.807957,3.139349,-7.656926,-3.877414,-4.864989,-3.433929,-5.929031,4.445406,-0.496683,1.634970,-0.239469,5.977103,-2.806385,-2.773894,6.078655,6.867978,2.809037,9.057109,-2.957282,-8.940425,-6.799236,-9.647276,-4.729296,4.318840,-6.749153,5.482614,8.852233,-0.361087,2.313290,-6.230457,3.460010,2.843355,-5.532839,-8.186294,6.913799,-8.320427,6.809825,-1.404994,-2.529515,1.320242,-3.213098,-1.877795,4.938163,4.209913,1.026081,8.599436,1.291634,6.611415,-6.607959,5.013705,-8.803945,1.141862,-5.707044,6.679753,8.842610,6.640778,7.712693,-2.310163,-2.736730,2.723313,0.160642,-3.840309,-7.424126,-4.041301,2.982625,-5.692810,4.766235,-1.029612,5.071376,9.376189,-5.875123,2.363220,-4.264717,-9.262156,9.437671,-6.074195,-5.374526,-4.727306,-5.637270,3.221036,-5.891978,7.894268,-0.364137,4.160293,2.335293,-7.745147,-8.956023,3.356981,9.508712,5.216612,-8.016350,4.667842,9.184273,3.384712,3.074131,8.389979,-8.758521,3.096989,-3.146936,-4.373342,7.971081,9.388001,-0.226734,-4.894603,-7.430402,2.436446,6.582842,-4.971324,-3.294171,-2.183668,-0.849183,8.045089,-4.231833,9.691255,6.868717,-9.542722,2.416402,-7.798034,9.945291,4.019366,8.105663,-3.713844,-3.851952,2.822102,-1.196181,-8.641218,9.634138,5.192183,-3.845103,2.127548,-2.696834,0.013285,2.950877,-1.490687,-6.065931,1.340281,-3.615800,0.528712,-4.850093,9.730976,-1.673703,3.086172,0.172616,-2.362063,-0.908790,2.082277,1.295068,-3.951831,5.651961,4.213709,-3.989147,3.610850,-3.044400,0.047424,0.510249,4.792844,-6.217848,3.656804,3.235268,-3.320824,2.757931,5.307831,-6.177424,-0.762350,-7.936979,2.164281,-1.013709,6.419311,6.777969,2.941606,2.975221,5.404861,5.384127,7.079545,-1.049115,-3.795630,9.970722,-1.366425,9.112460,2.228969,7.533675,8.707459,1.364880,-9.688631,4.033011,7.253526,3.690876,7.588408,-3.785741,2.930643,-0.108679,-3.553783,7.794901,4.402311,8.559279,-0.822747,9.077361,-5.840800,-5.634166,-8.497047,-3.861076,-7.055696,-6.517545,2.770367,-1.023347,9.390915,-3.225351,6.596311,-7.768728,8.774933,3.323677,-6.196097,7.043716,-4.879655,-2.243209,5.414641,-5.907273,-0.433971,2.239276,7.916291,-2.748214,-4.976669,0.055361,8.966336,-0.323108,9.741780,-0.899105,6.513900,0.035130,-2.829431,-3.218110,-0.903962,7.984842,2.195675,-6.480597,4.410313,4.522345,-6.404817,7.658887,-5.845789,-0.033347,7.573478,-3.426017,-9.359795,-5.604165,0.422163,-8.003517,-6.419636,-0.760425,4.968679,-9.310231,6.337226,-8.583137,-1.916595,9.558103,-4.632832,7.063803,7.825187,-3.241592,3.738396,-4.574683,5.515185,-2.306268,-1.200642,6.729968,-7.999689,-1.799277,8.552149,3.995146,-0.007876,-6.728239,-1.891612,0.971464,4.618622,5.719314,-7.845586,0.154028,-9.074336,8.022042,-5.328603,-1.965948,4.956656,5.117449,-1.739318,-6.014821,6.506814,2.974279,-9.255573,0.304933,-6.853312,-1.276609,-4.112359,-1.412208,-0.487498,-0.698241,-3.906768,8.696269,5.097091,-8.212318,3.705781,8.991480,0.624800,-5.115364,2.797928,-5.091295,-8.028265,-6.191279,-5.996374,2.240962,4.895520,-3.464854,3.387954,6.094811,-0.036751,-8.214363,-8.279867,-7.643449,-5.450223,-4.057999,1.759748,1.590606,3.560855,-9.243557,-1.454561,-5.105228,9.140564,7.176900,-0.577076,-6.442115,-7.296601,-9.483766,-9.193092,-4.126421,0.616186,-2.277386,9.864601,-6.941945,3.502869,4.218884,4.683014,6.926537,-6.704604,9.850554,5.939817,4.679981,-8.836896,3.271809,-2.441003,8.169955,-2.103076,-2.040782,6.393876,-2.590338,-5.336966,-3.979487,-2.788205,-1.622282,-3.396667,1.521420,0.057866,4.946954,7.642417,-3.323321,-8.033598,4.106866,6.352267,0.068369,7.414444,-2.050118,2.867521,9.862847,-0.851021,-6.666493],[7.818097,9.026215,-6.928874,-4.553356,3.659790,8.991607,-4.516342,-3.948992,3.552156,-5.075247,2.932447,-2.533525,7.225820,-3.388748,0.879838,-6.722598,5.180376,-8.233779,-5.328021,8.016056,4.773428,4.032015,6.326889,-4.012160,8.369027,9.878118,7.794727,1.408859,5.906908,-2.712111,-2.427012,2.689280,-2.261786,9.206654,-6.072683,-3.478088,-0.264510,9.092599,0.725022,-1.556084,-3.614492,-2.729357,0.341903,-2.921666,9.336489,6.236259,6.102196,0.708976,-3.394126,-9.491155,9.052517,3.426079,1.598424,-6.502955,-2.165524,6.737504,-9.520753,-9.760132,-6.388134,7.735814,6.873928,3.640241,0.374880,3.241515,-2.740047,2.357326,-0.135064,1.839178,5.381306,8.458415,-3.848411,7.571220,-0.453642,-8.745981,-4.561818,-6.159974,-2.231796,4.171166,0.348314,-8.369793,-2.004549,8.451174,-8.134685,-0.183181,-2.685696,6.469966,9.763232,-7.055161,-9.029195,-7.103692,-0.046921,-9.761883,-0.531952,-9.585373,-8.885192,3.315583,-4.785041,-5.792529,3.848684,9.127487,-3.585913,-0.085903,9.404823,3.848331,3.720853,-4.212491,-8.376464,5.274131,-9.132851,-5.481281,-9.350344,-7.741032,2.357823,7.471945,5.371287,-4.550225,4.917425,9.932834,6.877882,-2.786819,-3.771298,-1.724582,3.301556,-9.281326,-7.154198,5.752119,-6.204442,7.217675,-5.317929,4.987647,6.329660,4.487083,-0.673294,6.997931,5.561814,1.154225,9.313946,-4.467201,8.356515,-1.015223,-8.110716,-8.299459,1.204014,-3.245881,-0.829684,-8.616026,7.879164,-9.548434,-3.055796,-8.368310,7.063753,-8.535849,2.803848,0.698454,1.503987,-8.122665,9.399606,-1.120913,8.116986,-1.193953,-1.299564,3.435195,-4.912316,-3.999622,-3.376843,-4.405981,-7.430824,-3.490243,-1.552172,-8.004370,1.764181,1.666584,2.987415,-3.722767,-5.728885,-8.590066,6.992167,-1.000355,1.799587,-0.579685,2.896531,0.969350,6.909569,-1.389897,5.897774,0.208151,8.464409,-8.926258,5.475197,7.207188,3.018356,-6.552323,-6.190746,4.287787,6.619346,5.758676,-4.995927,-9.005095,-7.058710,7.701632,4.703803,-1.287352,8.553337,4.193243,8.962202,-8.273873,-7.312469,3.120364,-1.031551,-7.306507,3.146739,-6.544615,-9.882931,3.949526,0.172479,7.919182,-5.379310,-5.880059,-8.701361,-1.516794,-8.938885,-7.560119,4.812409,1.082009,-0.005077,-9.633179,4.992931,-3.589527,8.960524,-0.357127,-6.440297,-0.864417,-1.578390,1.716565,-6.879818,-8.550876,-0.133944,-5.915232,3.327982,7.601024,8.565317,7.974927,5.012630,3.299891,6.582829,5.920103,9.990990,-1.904831,-9.216072,-1.333548,3.671832,-2.853100,8.976826,-1.539591,-8.161160,1.410013,5.277657,9.038075,-1.859044,8.616227,-0.329048,8.075851,-4.575380,9.196502,0.696364,-5.156542,0.020755,7.831984,2.308063,1.106792,7.220569,7.291896,8.300038,3.102132,1.855457,3.792516,-5.388929,8.036371,4.432866,2.155352,-5.685116,1.214928,-8.616194,6.074160,-1.286842,-2.764537,0.024785,-6.871362,-6.604593,-6.034239,0.594043,6.251096,-1.671037,-5.190190,-1.367626,5.348375,9.026919,-0.933815,5.732309,3.962835,-9.836692,2.456529,-4.935281,-4.221301,-6.268203,-5.763411,-7.107138,7.633547,5.317986,-9.840423,7.741059,-7.434329,6.863609,9.633015,-4.174726,-7.661341,-0.881264,-8.418252,-9.194439,3.172806,5.191428,-4.986890,9.680572,9.137965,1.062901,-6.353200,6.198897,-8.931722,2.401623,0.828138,-4.723528,-6.414806,5.618754,8.533659,0.195357,-6.857547,2.686257,3.936917,-9.314663,2.574632,-7.289381,5.124370,-2.695977,-5.405211,7.789201,-8.130700,-5.966770,-9.566184,8.047629,5.309627,-6.582341,-6.790906,-0.514417,-4.165127,-6.735814,-7.782636,-5.982361,-1.412315,1.076283,-7.058687,-1.411664,9.064428,-0.540085,-1.877917,7.038627,-1.617137,-8.410698,4.502915,-2.331737,2.303868,0.357170,-3.706156,2.088437,6.153623,3.843764,4.280054,-0.304580,-0.274334,-2.981551,-3.294455,-3.381720,7.757800,7.041673,3.509625,4.763267,-5.579879,8.712589,-8.697434,3.636998,7.132053,3.695017,-9.643394,9.287131,-5.032414,-3.721439,-9.349060,-8.921112,0.670010,-5.606134,6.746038,0.071501,3.829117,-8.646768,-9.110491,2.798828,9.809659,-3.910420,-5.812746,-1.961845,-0.239750,3.547991,-1.275295,-3.492489,-4.474981,-6.194901,-8.721682,7.711282,-1.406281,3.005465,-3.636786,5.478972,-5.409290,4.761020,5.423026,9.851953,-3.481506,-5.160726,-8.648521,-9.872380,-5.128954,2.602158,9.132218,-2.961815,-7.450359,-3.448777,-0.171389,-9.431879,5.272143,1.541455,-5.012765,-8.675635,1.866671,7.887779,-6.904616,-4.351531,-4.765781,7.063986,5.749252,-9.237510,-3.647208,-4.040342,-4.337883,4.308088,-6.133461,-0.267077,2.651988,-3.646912,-8.046146,6.631435,5.218948,7.900452,0.931342,4.708963,-1.766608,-7.801752,-7.242115,6.671132,-2.025891,6.847624,3.932713,2.357990,-7.227697,1.004648,5.463802,3.635367,9.148735,-1.617211,-2.029086,3.708907,5.027125,2.883478,-6.519264,-9.712993,9.785805,5.678990,-2.717851,7.007502,-4.190399,6.837183,4.762774,7.990176,4.023767,9.383892,2.814992,-1.051197,7.760901,0.027471,-1.587585,-9.923119,8.016883,-8.246654,-8.146568,-3.789484,-2.880570]], dtype = "float32")#candidate|7119|(2, 504)|const|float32
call_7118 = relay.TupleGetItem(func_6447_call(relay.reshape(const_7119.astype('float32'), [252, 4])), 5)
call_7120 = relay.TupleGetItem(func_6449_call(relay.reshape(const_7119.astype('float32'), [252, 4])), 5)
output = relay.Tuple([bop_7088,call_7098,var_7099,var_7100,var_7101,const_7102,call_7111,call_7118,const_7119,])
output2 = relay.Tuple([bop_7088,call_7103,var_7099,var_7100,var_7101,const_7102,call_7112,call_7120,const_7119,])
func_7123 = relay.Function([var_7087,var_7099,var_7100,var_7101,], output)
mod['func_7123'] = func_7123
mod = relay.transform.InferType()(mod)
var_7124 = relay.var("var_7124", dtype = "int32", shape = (13, 14, 5))#candidate|7124|(13, 14, 5)|var|int32
var_7125 = relay.var("var_7125", dtype = "float64", shape = (128,))#candidate|7125|(128,)|var|float64
var_7126 = relay.var("var_7126", dtype = "float64", shape = (5, 351))#candidate|7126|(5, 351)|var|float64
var_7127 = relay.var("var_7127", dtype = "uint8", shape = ())#candidate|7127|()|var|uint8
output = func_7123(var_7124,var_7125,var_7126,var_7127,)
func_7128 = relay.Function([var_7124,var_7125,var_7126,var_7127,], output)
mutated_mod['func_7128'] = func_7128
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6829_call = mod.get_global_var('func_6829')
func_6831_call = mutated_mod.get_global_var('func_6831')
call_7142 = relay.TupleGetItem(func_6829_call(), 0)
call_7143 = relay.TupleGetItem(func_6831_call(), 0)
func_2961_call = mod.get_global_var('func_2961')
func_2965_call = mutated_mod.get_global_var('func_2965')
const_7148 = relay.const(-6, dtype = "int8")#candidate|7148|()|const|int8
var_7149 = relay.var("var_7149", dtype = "uint32", shape = (2400,))#candidate|7149|(2400,)|var|uint32
call_7147 = relay.TupleGetItem(func_2961_call(relay.reshape(const_7148.astype('int8'), []), relay.reshape(var_7149.astype('uint32'), [2400,]), ), 4)
call_7150 = relay.TupleGetItem(func_2965_call(relay.reshape(const_7148.astype('int8'), []), relay.reshape(var_7149.astype('uint32'), [2400,]), ), 4)
output = relay.Tuple([call_7142,call_7147,const_7148,var_7149,])
output2 = relay.Tuple([call_7143,call_7150,const_7148,var_7149,])
func_7175 = relay.Function([var_7149,], output)
mod['func_7175'] = func_7175
mod = relay.transform.InferType()(mod)
mutated_mod['func_7175'] = func_7175
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7176 = relay.var("var_7176", dtype = "uint32", shape = (2400,))#candidate|7176|(2400,)|var|uint32
func_7175_call = mutated_mod.get_global_var('func_7175')
call_7177 = func_7175_call(var_7176)
output = call_7177
func_7178 = relay.Function([var_7176], output)
mutated_mod['func_7178'] = func_7178
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7196 = relay.const([[[6.697315,-7.948009,-9.559257,-1.780572,5.695380,-6.766970,-9.568862,4.377794,-3.003770,6.124612],[-4.221652,-7.220046,4.706814,5.511845,5.460153,1.009986,-0.996576,-4.060391,2.581416,2.012496],[-6.733563,-0.086559,6.768288,-6.144609,1.233162,-9.703611,9.341248,2.925964,5.182348,-3.683925],[3.463216,6.004387,7.008935,-0.474365,-4.254624,7.563351,9.146581,2.114395,0.124417,7.253050],[6.980842,-5.461839,-3.578054,1.062040,2.921459,-4.676002,3.316278,-7.945008,5.337905,4.435628],[-1.282781,2.300040,-7.267258,-5.715769,-8.133425,1.068601,6.167725,-3.084721,6.335711,7.387774]],[[-9.176979,0.613751,4.773115,-1.830877,-3.821696,2.347703,2.681020,-8.508543,2.975790,2.883258],[-4.901882,-0.420529,5.325202,-4.078718,-0.219163,5.339497,1.053138,0.431299,-1.965243,-0.290650],[2.936205,8.214147,-3.733912,5.273147,1.913793,1.546608,4.208167,9.175257,-4.598945,9.499254],[-0.355687,4.361247,0.570533,-5.179703,9.085894,-5.340334,-1.259453,1.400345,1.086567,8.791844],[2.868983,2.573237,-5.603796,9.081219,-2.829590,7.316215,6.625154,-5.365903,0.240463,-8.384906],[3.612959,-3.971973,3.312130,-0.640176,-6.300334,9.981996,-0.770799,-9.922997,1.213795,-7.119176]],[[-4.266600,-7.688472,-0.187668,-9.719976,-2.018240,-9.442043,9.043324,9.621189,-7.942115,1.114776],[8.058567,7.456759,8.179037,-0.306211,7.516882,-4.805532,3.604318,-5.575250,-7.367428,5.302974],[8.557865,-0.503600,-6.411737,5.064199,-6.055256,2.222281,3.608439,8.149616,-6.383240,-9.204324],[-4.486162,0.645479,3.783856,-0.655777,-8.640940,-9.364163,3.332919,-5.309627,8.270235,7.666061],[4.316020,0.991071,9.878333,4.708319,2.104275,8.516978,2.017153,3.349934,-2.927201,-0.156806],[2.815931,0.009993,4.457595,7.535016,6.975137,-5.329144,0.413330,-8.663036,3.029210,8.187225]],[[9.487886,-3.006718,1.059914,7.249913,0.854299,2.195515,8.590790,-1.269826,-3.163342,2.726716],[-9.692457,-9.473284,5.360679,-5.538986,8.076726,8.013231,-8.440148,8.736154,0.791641,-4.540382],[-3.701129,-1.104982,-0.367282,-0.719543,-1.608123,-3.604542,-2.337632,-2.261292,1.553196,-7.298992],[-7.837554,8.539388,4.632308,0.780992,-6.222409,-8.993704,7.663548,-1.232413,8.029206,-2.901053],[-7.624479,-0.265294,-1.031656,-7.233190,1.123808,-6.888220,8.546439,-0.782036,-6.955481,4.204828],[9.448523,9.867972,-6.445942,-8.648156,-0.428294,4.072077,-0.677794,8.304656,5.483039,-9.372039]],[[-1.012698,-0.399158,0.805376,5.733759,-0.232275,-2.966820,-9.591411,-9.664647,4.249552,-8.791081],[-2.676047,-1.543337,8.321150,5.067800,4.607100,3.148810,-5.139334,5.495619,-7.080958,7.067378],[-5.256405,7.933348,0.252877,8.445172,-0.317798,-3.378439,-9.089413,1.480560,6.762815,-7.539781],[5.633139,-3.428213,1.088203,9.664774,-3.814422,3.502694,-2.351847,1.361927,-3.344496,-2.359317],[-3.682065,6.572539,9.957007,-4.694243,9.769841,7.357928,-2.134724,-5.908532,-4.946219,-3.870368],[-1.271996,2.040086,-2.749124,-4.686220,7.663616,4.582073,-1.946228,-2.381807,-0.807810,-8.457931]],[[4.304271,-4.295121,3.422842,-5.290011,-4.576687,6.139321,-2.484812,5.299515,9.110671,4.565293],[-8.782973,6.334326,-5.243391,-6.267099,-5.401658,-7.406815,-7.864669,-6.323155,-1.443862,9.117326],[5.735075,2.748253,0.169565,-6.510586,4.753390,-6.034825,-6.922190,-0.458322,3.235328,7.107509],[0.640495,-5.021390,-5.562203,2.544766,5.056665,4.854224,6.482010,-3.158059,3.843023,-2.099009],[-3.246919,-1.842743,-3.766967,5.285072,2.389816,5.773870,5.232763,1.567411,-1.324110,-7.477353],[3.593690,-3.473765,-5.189036,-3.837476,0.995363,-8.902887,9.582477,8.172883,0.452162,3.731275]]], dtype = "float32")#candidate|7196|(6, 6, 10)|const|float32
const_7197 = relay.const([[[1.193363,-7.860010,0.310559,-7.743599,-6.767014,8.674636,-7.022790,0.497379,-0.407199,0.413871],[0.118883,3.176728,-1.071508,7.104511,-8.039328,4.867821,4.712395,-6.912069,-5.243573,-4.135872],[-5.899198,-8.644226,-9.660962,4.966089,-7.094549,6.887619,5.481684,-3.554595,-5.635096,-9.754741],[7.650728,-0.843842,2.810115,3.525506,2.155764,2.268354,0.054693,3.745257,1.749182,-6.650289],[4.281200,6.422242,2.035696,2.980035,-4.384776,-7.419818,1.488541,-9.008810,8.483277,-5.899772],[-5.171066,-8.805642,7.484529,4.870953,8.450737,5.208058,4.134503,8.667233,-3.179436,-0.170477]],[[-2.215647,-2.422484,-6.221783,7.400643,-8.998832,-7.315037,9.247881,9.086198,-2.244666,0.214943],[-7.298033,3.119823,-1.603030,-9.421158,5.018984,9.113033,3.437701,8.144699,-7.534865,2.568654],[-6.120448,4.945535,6.805886,6.135854,2.614990,4.237386,4.559516,-4.659389,1.462274,-9.256600],[1.767722,7.931639,-2.511812,-6.227231,9.681688,2.708896,-4.120937,9.772840,0.476523,6.309334],[5.952785,2.990637,1.495476,-7.004949,-1.463627,6.913593,-7.068820,4.462870,7.422681,-6.245945],[2.475300,2.381664,-6.700106,7.647045,0.935086,9.643535,5.089859,5.333784,-6.560714,-5.929089]],[[-5.793439,-6.241709,-7.699124,6.804410,-6.615108,-1.148102,-6.476864,7.822148,-3.097043,-7.519248],[1.103880,-6.939550,-7.318219,-8.094966,-6.096445,-4.826844,-6.244023,0.333531,-0.882679,8.915669],[-7.100149,-5.049355,8.694256,-1.971613,3.532432,5.608937,-6.969703,1.323352,9.979037,5.691294],[-7.029780,-8.645115,-7.949691,9.039220,6.601003,6.937490,-0.984027,-8.289295,9.041100,6.120718],[8.171157,-7.220748,9.334493,6.585269,3.833353,-1.801894,-3.588123,-8.482091,-9.563249,0.225973],[-5.546541,-6.991967,-8.638514,-6.758171,9.202581,-8.281566,-8.775828,-5.412898,0.854781,-4.426285]],[[-1.511230,-1.761117,-0.255467,9.820811,7.699757,-2.737484,-6.482850,-2.091440,1.714271,-8.487261],[0.086668,1.772145,7.384679,2.310095,0.654265,8.755312,-2.292301,-5.769342,9.428052,8.007671],[-6.266196,-2.014817,-0.707740,-0.777045,-5.693017,-5.375427,2.337863,9.997314,2.305895,5.957478],[5.988367,-9.148031,1.636950,-2.883781,6.378006,5.691675,9.462445,-7.693789,-2.348361,1.012921],[8.418109,-9.179159,3.586886,-7.386427,-9.442731,-3.531790,-8.862869,2.454821,8.545322,-6.253795],[-7.070204,8.490408,-5.192113,8.182601,-0.176299,8.502267,9.567614,-2.762088,1.946137,2.035503]],[[3.948372,8.029006,9.756876,9.854294,-3.802677,5.592399,8.767617,-8.526643,-6.977361,-4.930075],[-6.928537,-4.772167,-0.740502,0.583443,9.127155,9.827753,-5.612845,0.470493,-4.652303,-2.029095],[-5.262386,3.900195,-5.621125,6.940752,1.423802,6.707023,1.422536,5.628244,8.623866,-3.163834],[-4.977258,2.150307,-5.676998,-2.386743,3.497410,-7.082374,-2.558384,4.606169,2.541253,5.166752],[-4.859134,3.011303,-6.576898,9.029277,6.415482,7.452418,-9.414248,-9.884120,6.315667,0.723988],[0.639297,-2.256566,8.425045,5.736964,5.774313,9.382595,1.719131,2.324352,-3.651112,1.181979]],[[-0.855494,2.198440,2.617347,-6.124123,-3.952016,1.854793,0.314337,4.886911,1.696339,9.352461],[8.496193,0.906397,3.406123,-9.098097,0.790515,6.405000,-1.592321,-9.402222,-0.485643,-0.476250],[-3.086872,7.626259,-9.980435,-6.783614,8.154592,-1.890594,8.192810,5.332080,-3.965453,-5.786793],[-6.280498,-3.472635,-4.142762,-7.893858,7.519756,0.128527,5.543669,8.435130,3.229080,2.106576],[9.722061,8.710126,3.100187,-9.713061,-6.798108,-2.854487,-5.702579,-4.231776,6.945482,-4.774394],[0.503643,6.102708,-0.327342,-5.316229,-2.334711,-9.363802,0.805609,-2.515385,-8.813973,1.902863]]], dtype = "float32")#candidate|7197|(6, 6, 10)|const|float32
bop_7198 = relay.power(const_7196.astype('float32'), relay.reshape(const_7197.astype('float32'), relay.shape_of(const_7196))) # shape=(6, 6, 10)
output = relay.Tuple([bop_7198,])
output2 = relay.Tuple([bop_7198,])
func_7207 = relay.Function([], output)
mod['func_7207'] = func_7207
mod = relay.transform.InferType()(mod)
mutated_mod['func_7207'] = func_7207
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7207_call = mutated_mod.get_global_var('func_7207')
call_7208 = func_7207_call()
output = call_7208
func_7209 = relay.Function([], output)
mutated_mod['func_7209'] = func_7209
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7236 = relay.const(-0.305288, dtype = "float64")#candidate|7236|()|const|float64
var_7237 = relay.var("var_7237", dtype = "float64", shape = (13, 16, 2))#candidate|7237|(13, 16, 2)|var|float64
bop_7238 = relay.floor_mod(const_7236.astype('float64'), var_7237.astype('float64')) # shape=(13, 16, 2)
func_419_call = mod.get_global_var('func_419')
func_425_call = mutated_mod.get_global_var('func_425')
const_7243 = relay.const([[-6,-8,-8,2,-3,4,-3,-4,-2,7,-8,-5,-3,4,6,2,-1,-10,5,7,-7,2,6,2,-10,3,4,-1,-2,9,-6,-7,1,-6,-9,4,3,-9,-2,7,8,10,-8,10,-7,-8,-2,-10,4,9],[8,-1,-9,-2,-9,-5,-8,10,-5,6,3,-4,10,-8,-9,-8,-2,10,9,-4,-10,7,3,6,2,-9,7,-8,7,-9,-4,-5,-6,-8,8,5,-1,8,2,4,-5,6,8,8,1,6,-6,2,8,7],[1,4,4,8,3,9,6,-1,-3,-2,6,-10,8,4,-1,2,5,-4,7,7,3,-9,3,-3,-8,-1,-4,-7,-2,-10,4,-2,7,7,7,3,10,-9,1,9,9,-4,-10,7,3,-4,-9,-5,-4,2],[6,1,7,-9,4,-8,10,5,-4,-2,10,-4,-2,-9,1,8,-7,3,9,-4,2,5,7,-3,-4,8,1,-7,10,1,-7,9,10,-10,4,1,10,-1,9,8,9,9,7,-6,2,-8,-8,3,-9,-6],[-8,2,-4,5,-6,-7,6,-6,-4,1,2,4,-8,-6,1,1,-1,-7,5,10,-2,6,-5,-4,7,-4,5,-8,7,10,-8,-7,-4,-5,6,-10,-4,-8,-1,9,-8,-6,1,7,-8,5,-10,4,-7,-4],[-6,-1,5,1,-2,5,-3,4,-6,3,-10,9,-9,5,-4,8,7,10,9,-9,2,-2,6,-1,6,6,10,-7,8,4,-3,4,2,-2,-5,-3,-7,-4,-10,3,6,-4,-5,-7,3,7,-6,5,-4,8],[-10,-8,5,-9,-6,-4,2,-3,9,1,3,-9,2,-6,3,-8,4,-9,10,7,10,2,-1,2,5,3,3,9,-8,-2,9,-5,7,-6,-3,5,-4,9,2,-5,-5,6,-2,5,-10,-2,-8,3,-2,2],[-2,1,4,3,-9,4,9,-2,-7,-3,-4,5,2,7,9,-1,6,8,2,-7,-10,-5,-3,9,3,-6,-7,-1,2,-4,7,1,7,-5,-1,-8,-3,1,1,5,-4,-3,3,9,-1,-6,8,4,-7,4],[1,-10,-6,-8,10,1,6,4,-7,5,-8,10,8,-1,5,2,9,8,-2,-10,-4,6,-4,-7,3,-3,-5,-7,9,6,5,-9,10,10,8,4,-3,-9,-9,10,-10,-3,7,8,1,-1,-3,-3,-8,7],[-4,-7,1,4,2,-4,-8,-9,-8,-1,10,7,2,6,-2,-5,4,-3,-8,5,-10,6,5,-3,2,-3,-7,8,10,-9,-7,-1,8,5,3,-6,8,-1,7,7,-1,4,1,-7,-7,5,3,-4,2,-5],[-1,7,4,2,3,3,-8,-2,-10,-9,-5,1,-10,9,6,6,8,7,-3,-3,6,2,4,6,3,1,10,8,-6,-4,2,10,-3,-1,-3,3,-2,-7,9,2,-9,-1,-4,-2,7,-3,-6,-10,9,7],[8,5,-5,8,-6,-7,3,5,-7,8,-3,-3,-5,1,-4,9,-8,-2,9,-6,-10,1,1,1,-4,-3,1,9,-9,-1,9,-5,-6,-10,8,-1,1,4,-9,1,3,2,10,-9,4,-3,1,7,-6,-4],[5,5,-7,-7,5,10,1,-1,7,-9,-3,3,-10,-3,9,3,3,7,10,-6,3,-10,-2,-7,-2,-10,-1,-10,3,-9,1,6,3,-3,9,-5,-5,-1,7,-6,4,-5,8,6,-9,4,9,3,5,-5],[3,-9,7,5,-7,7,6,-6,7,6,1,5,3,-3,4,-3,10,-7,-3,2,-3,3,3,6,3,6,-3,5,-1,-4,-8,1,-10,-6,-1,5,7,5,-7,-10,2,-6,8,-1,-10,3,-4,6,5,9],[10,9,-9,-9,-5,7,-6,-4,-2,5,-2,2,5,9,1,5,9,-1,10,3,1,-5,-2,-3,-4,10,9,9,1,-5,6,-4,-5,3,6,-1,7,6,-4,6,9,1,6,-3,10,9,-7,-10,7,8],[-3,-2,6,10,7,6,-9,-6,-9,-2,-7,4,4,-8,1,-6,-6,3,-6,-4,8,-1,-8,-2,5,5,-8,8,5,5,-2,10,-1,4,5,-2,-7,-10,7,-2,-9,-4,8,-9,8,8,-6,1,-3,-7],[-2,-3,-10,-4,6,-9,4,2,-5,-4,-4,2,3,9,8,-4,3,-9,-2,-9,-10,-5,-2,-6,-7,-8,3,3,5,1,8,-4,-5,-3,8,5,-2,2,-7,-9,-9,5,10,9,8,9,-9,6,-5,-1],[4,-1,-6,10,-3,8,-9,5,9,-5,6,-4,6,-9,10,6,-7,2,-9,-9,-3,-4,9,10,-3,-4,8,6,-7,-4,6,-5,-6,8,-9,-10,3,-5,-3,-10,-1,-5,-4,2,5,-2,-8,6,2,-1]], dtype = "uint8")#candidate|7243|(18, 50)|const|uint8
var_7244 = relay.var("var_7244", dtype = "int16", shape = (294,))#candidate|7244|(294,)|var|int16
const_7245 = relay.const([2.983574,-6.647037,2.625455,-1.700277,-1.016368,-2.259831,-6.685973,0.595100,9.725400,2.921243,-0.672373,-8.678311,-8.641219,-1.354323,7.725343,0.746912,-1.723768,-7.827882,-3.652397,1.690964,8.859406,-7.077123,-6.411928,-4.959707,0.940993,-4.011036,-0.081467,-7.804489,-4.173942,-2.611093,-1.211165,4.142277,-8.984309,7.335594,-5.570218,2.237012,-1.740573,-9.975908,2.748642,-5.710727,-4.440718,-2.870409,-7.365040,-6.219079,-5.035022,-7.395252,-8.813780,3.946606,4.166567,5.819800,2.630005,-5.569432,-4.229292,7.417923,5.077680,-6.034423,-9.601634,-5.253952,-6.113055,3.594682,6.995037,1.136661,9.080125,-4.858355,2.675663,0.129848,-6.293720,5.484194,-2.860912,-4.426968,-2.208025,1.043416,-4.412110,7.674972,-7.050539,9.899949,-5.323707,7.608890,8.443528,2.256038,5.901694,7.851189,-4.035716,4.091798,2.263307,-2.957318,-6.266274,-7.206998,8.407860,6.812242,0.010329,7.331828,-3.505793,5.236717,1.992973,-1.145357,4.513720,-1.399559,-7.627388,-9.345666,-1.726731,-6.027584,0.783237,7.601946,-8.269299,-8.126645,3.626904,-2.425891,4.825375,2.318122,-1.837635,3.009491,4.169203,2.255785,6.814157,-4.714301,-6.895936,6.267246,2.105882,-6.441653,3.114176,8.942695,-2.002324,-9.330221,-8.020246,-5.128187,-6.122480,-9.643082,-6.796631,2.834506,-2.330701,1.115718,-4.157596,-2.500165,6.451567,-5.512145,0.309244,8.139526,8.736078,3.716361,6.374518,-4.661306,-9.061756,2.743254,-0.378314,-5.678586,-6.766720,1.924573,-6.149806,7.282521,-4.349653,9.965600,3.167793,4.284699,-6.589078,-3.989234,5.122285,2.714023,-1.946569,-5.389709,-6.605774,5.219668,-2.869186,8.066790,-5.182047,-9.346672,-0.094843,-8.275250,-8.437651,-8.413261,6.119757,-7.920966,4.514578,-9.344378,-1.773842,-4.649002,3.137084,-6.220436,-0.959195,0.048781,-2.950449,9.504952,7.416657,-4.931314,-2.574074,-4.973306,-1.217878,-9.412519,9.487756,3.709656,8.561235,-2.560284,5.653295,-9.642566,-8.570816,-1.517232,7.943454,-6.009889,9.011000,-1.156471,6.779349,1.519009,9.600165,-4.649485,-4.279271,-6.065454,6.770880,0.483099,7.878488,0.049931,1.258359,-8.451506,7.873046,5.795559,-7.048708,-1.102707,-2.503431,0.134991,6.061098,-1.320090,8.488785,6.084377,2.624523,8.098864,-4.252959,0.455063,-5.402944,-0.094290,-0.025904,-3.213710,2.149447,-8.688770,8.316121,4.881433,0.780306,-2.293196,3.079520,-1.672176,-3.136237,2.148452,-6.196295,-4.277686,2.006054,-6.333728,-2.412344,-5.482640,-4.018908,-2.358648,-5.896780,-7.293905,6.657581,-0.075224,2.219838,-0.805118,-1.066263,-1.143840,-9.714574,1.103495,-9.867361,2.302462,-2.340021,-2.611951,-1.738999,-9.537874,7.381003,6.618764,-0.202372,0.436652,-5.700190,2.322669,6.026187,7.141554,5.912866,2.835792,-3.221414,-7.915608,-5.639889,0.145473,2.982190,9.207819,8.590820,-3.664603,-6.146524,9.888658,3.234685,2.811898,-8.002344,-6.027953,3.020126,0.143614,-6.796312,3.201824,8.924494,7.660591,-6.203965,4.120111,5.622116,5.110327,6.198295,-1.357866,-3.644557,4.185015,-0.658645,-0.365442,-0.781535,-0.986130,5.849472,3.064532,-9.777939,-9.509275,-8.988502,-8.144870,2.401435,1.042834,-6.630903,8.694382,-2.051656,-0.616962,-4.972217,-8.894113,-1.526309,9.695145,-7.241801,-3.943447,4.393230,-8.650724,-0.193217,-0.800008,-2.246843,-5.442474,0.247518,0.852998,3.680208,6.502535,-4.311349,-1.573566,-2.591293,9.053816,-6.067739,5.416990,-4.523871,2.404515,8.603938,-2.098744,-5.450488,-3.129286,-8.441496,1.001788,9.930631,2.778772,-2.862462,7.267258,4.040764,-8.539820,-5.803157,9.947497,2.350732,-6.493552,-3.314224,-0.962480,3.930175,8.457517,1.140919,5.393872,0.874509,-9.254580,-4.310333,-6.483902,-5.208119,-2.289243,-3.849091,0.416650,-7.479429,-5.213728,-8.733618,5.877505,-4.843926,2.039094,9.220458,-2.558653,5.760065,8.786609,-6.037981,1.783155,-7.392295,-6.672485,-0.264966,-5.285849,0.855992,7.778777,4.565653,2.204504,2.545764,8.748207,-8.018903,0.145823,8.376319,9.395970,-4.244292,-3.802962,-2.568369,-4.606283,3.187726,-4.802676,6.731569,-4.448061,-1.831250,-2.765749,4.669355,6.087698,-0.135571,5.455330,0.571197,1.846472,-6.952265,-8.339641,-7.420198,8.725540,7.823190,-5.958704,3.902110,5.115322,3.732241,-9.699990,-0.566821,-8.860251,-4.495618,-4.052737,-1.532429,-5.128462,2.679453,-3.648886,3.311592,7.470320,4.815393,9.228806,9.356594,-3.222164,5.837173,7.164124,-3.697546,-5.534590,6.837611,-2.263936,-1.648500,-1.518307,8.751280,-2.978382,-3.327580,7.486735,7.285792,5.342546,-0.830563,5.749519,-8.198281,4.024692,-7.403626,4.259135,-6.209346,-3.123228,-3.978129,-2.100304,0.554087,-4.315342,5.307248,4.670295,4.014333,2.058873,-3.728888,6.980213,6.547045,-4.627206,-2.738865,1.024714,1.522446,3.962741,7.864176,-6.558267,-3.945856,-0.623043,-0.210539,1.732169,-4.006462,5.921202,2.059343,3.483767,6.824453,9.824288,-9.457597,-2.548030,-9.388901,8.305505,-2.835128,-3.073684,0.620991,-6.751719,-1.966560,2.547251,-6.951545,1.766036,0.811347,-7.824452,-1.950442,-2.479202,-0.968616,4.766928,-9.785842,-6.693525,-3.401193,-8.100548,-9.113070,6.084969,-1.611739,1.840323,-1.403402,-7.933851,-6.684058,-8.324139,-4.300239,9.272380,-9.270968,6.214348,0.334679,2.478301,-7.223256,1.001482,-8.404348,7.623317,1.538786,1.050126,-2.687280,9.746958,-9.816791,8.231031,-2.172859,4.115712,0.771522,-7.554452,4.441422,-6.801449,3.083897,-9.575173,3.201838,-9.118537,-5.251256,-1.337489,2.244250,6.237688,3.324087,8.504886,5.111167,-5.524327,1.798670,-3.517265,-6.897044,1.464582,-5.785505,1.350952,8.784929,0.103312,5.308384,-3.870212,1.114163,-0.966101,1.441383,4.239444,3.659416,5.469586,-5.877191,6.932439,6.457628,-8.869115,-6.673369,0.395223,5.981778,7.446190,-9.633606,7.725148,-6.265743,-7.154910,3.614665,-4.834114,-9.066413,-1.368476,4.234040,3.402856,-0.273620,3.068651,-5.420936,-3.328130,6.547718,-2.344229,-8.780995,8.259160,-0.109971,-2.283955,3.342943,-3.759989,-1.961357,-3.536933,-1.024959,-9.740795,0.488291,6.992615,-3.442958,1.051979,7.422831,9.676940,-3.984565,-8.712501,5.265532,-1.586348,-7.642744,-2.458762,0.596008,-5.497379,-8.747007,-6.095438,-6.950105,1.028445,-9.302962,-4.965977,6.264337,5.772321,0.366879,-7.624096,-7.610824,2.541546,8.767789,6.676372,3.697783,-3.316323,9.708431,1.275834,-9.222629,-6.937749,-3.058038,-6.246664,2.735625,0.227082,-1.624766,2.252499,-7.095711,4.626827,-9.744137,1.484061,-0.984678,7.008535,-0.367145,-7.063095,-1.755842,9.667137,6.557101,-8.229286,8.340762,0.773356,8.843686,-2.501879,-8.322297,3.815565,0.706690,-3.928763,-5.135879,2.099482,-2.005111,3.261323,-8.618755,0.989265,-0.386806,-4.614306,8.884337,4.926157,-4.521666,3.582881,0.066709,8.011800,6.229390,5.738250,-4.892854,-0.526818,-1.994073,6.013240,3.654210,-8.322373,-6.722924,0.490778,4.159684,-4.175517,8.575548,-8.048092,-4.274632,9.523201,0.236367,8.818594,2.747160,-2.865822,4.311727,-0.402578,8.855841,-9.905734,-0.040952,9.583628,7.229977,3.764475,6.407851,4.107152,-5.534626,9.294429,4.177776,1.987037,1.404329,-9.876635,4.064974,1.913943,-8.700224,-7.842984,9.339637,-6.159661,5.378408,0.671255,6.051137,-0.237486,0.069229,8.919113,-2.938304,0.843935,-1.115442,-3.332389,7.625811,-6.442136,1.615194,-9.422959,0.556546,5.603157,-0.038073,8.536862,-9.196390,3.243164,-8.964213,-1.389741,0.177490,-7.356027,-4.952946,5.819988,-4.060886,7.758918,-9.263137,-0.388143,-5.095511,-9.630904,4.139290,-8.510660,8.317644,0.145063,-2.517143,-6.481960,-7.209172,8.411277,6.965927,-7.309565,1.522531,-3.150192,8.934210,0.868798,-9.309152,-7.952848,8.889151,7.464461,5.075071,-9.898008,3.332771,0.318913,7.400849,-3.895561,-4.857737,-8.307912,-8.588425,7.196694,-7.405304,8.031709,5.313648,-4.785509,-9.103957,9.337082,-5.897489,4.529592,9.071788,0.312759,8.298650,7.841618,-2.372155,2.428438,-7.918835,-0.792505,1.829826,-3.420758,-8.252023,-4.798814,-8.667365,-3.224348,9.318886,-2.522060,-1.225219,-3.919566,4.632530,0.619372,1.902712,-7.169194,-7.993420,-0.481874,-3.473444,-1.182234,0.983724,4.173508,-4.915287,5.954145,6.797692,-0.169399,3.894910,-4.443512,4.011637,1.019611,-2.777983,-7.062532,-0.073646,8.584233,4.091357,8.303563,-3.872544,0.138916,-3.807343,-6.045780,-1.414335,-7.053571,5.143686,7.052358,-3.928541,-8.384160,-8.838258,1.418653,1.521727,-3.607906,-7.248096,-6.897205,-6.142814,-8.993096,-7.247370,9.853414,6.795400,-1.301537,-4.204675,3.555666,-2.530381,7.817510,1.977038,-6.406774,4.661464,1.105710,-0.632272,-3.044310,9.618157,-2.348238,-0.215054,2.658070,9.669869,-1.674689,2.188869,-2.381703,6.350925,-8.505687,0.400869,-0.319109,3.311761,-3.221375,2.061393,8.765526,7.075806,-3.621193,1.843112,-7.864058,2.722528,-5.446979,-8.342477,2.295306,-9.451928,-2.712233,-5.846241,4.945866,5.305331,5.885991,-0.043895,0.411067,-5.696414,2.538098,2.745474,-4.941846,6.613176,6.614096,-9.634546,7.878012,5.621365,-7.496883,-6.518325,4.943244,4.400745,-4.099242,2.453025,-0.757121,8.426592,6.644827,6.182363,-2.046354,-5.345205,-1.161555,-5.044198,-4.383849,-8.718101,5.650381,-4.282198,-3.270598,6.495250,9.686157,-8.583870,9.604642,-6.260688,7.000872,-1.043830,-4.594100,0.103468,7.694817,-6.701659,8.252648,-1.457127,-5.103105,-7.391703,0.886905,0.718285,-2.808072,-6.548238,-8.587220,4.376939,-4.711553,1.384603,-9.003723,8.827985,-4.024894,8.203657,-4.186402,-3.569232,-9.940563,6.042001,-7.789518,0.680046,8.987924,-1.218098,-6.461793,5.025598,-7.958155,2.031249,1.261299,-6.458039,-8.770044,-9.605999,-5.131123,8.091237,4.077182,-8.706145,-5.494572,-9.134936,1.303447,6.614635,-2.359667,-2.846970,7.426128,-5.476191,-9.034089,-5.570435,-4.674909,-6.039164,5.761360,-8.429663,-3.764479,-5.123159,-9.683305,-2.768794,-4.187615,4.872942,-9.371443,1.007217,0.895757,7.053178,-5.683496,-3.435789,-2.126934,0.328625,5.196925,-9.449309,-4.700335,-1.764261,7.138717,-7.194135,-0.408500,7.124554,7.748938,-4.568737,-5.176830,8.145923,1.087466], dtype = "float32")#candidate|7245|(1008,)|const|float32
call_7242 = relay.TupleGetItem(func_419_call(relay.reshape(const_7243.astype('uint8'), [9, 10, 10]), relay.reshape(const_7243.astype('uint8'), [9, 10, 10]), relay.reshape(var_7244.astype('int16'), [294,]), relay.reshape(const_7245.astype('float32'), [1008,]), ), 0)
call_7246 = relay.TupleGetItem(func_425_call(relay.reshape(const_7243.astype('uint8'), [9, 10, 10]), relay.reshape(const_7243.astype('uint8'), [9, 10, 10]), relay.reshape(var_7244.astype('int16'), [294,]), relay.reshape(const_7245.astype('float32'), [1008,]), ), 0)
func_7207_call = mod.get_global_var('func_7207')
func_7209_call = mutated_mod.get_global_var('func_7209')
call_7247 = relay.TupleGetItem(func_7207_call(), 0)
call_7248 = relay.TupleGetItem(func_7209_call(), 0)
output = relay.Tuple([bop_7238,call_7242,const_7243,var_7244,const_7245,call_7247,])
output2 = relay.Tuple([bop_7238,call_7246,const_7243,var_7244,const_7245,call_7248,])
func_7259 = relay.Function([var_7237,var_7244,], output)
mod['func_7259'] = func_7259
mod = relay.transform.InferType()(mod)
var_7260 = relay.var("var_7260", dtype = "float64", shape = (13, 16, 2))#candidate|7260|(13, 16, 2)|var|float64
var_7261 = relay.var("var_7261", dtype = "int16", shape = (294,))#candidate|7261|(294,)|var|int16
output = func_7259(var_7260,var_7261,)
func_7262 = relay.Function([var_7260,var_7261,], output)
mutated_mod['func_7262'] = func_7262
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6124_call = mod.get_global_var('func_6124')
func_6125_call = mutated_mod.get_global_var('func_6125')
call_7264 = func_6124_call()
call_7265 = func_6124_call()
uop_7267 = relay.erf(call_7264.astype('float32')) # shape=(35, 1)
uop_7269 = relay.erf(call_7265.astype('float32')) # shape=(35, 1)
output = relay.Tuple([uop_7267,])
output2 = relay.Tuple([uop_7269,])
func_7272 = relay.Function([], output)
mod['func_7272'] = func_7272
mod = relay.transform.InferType()(mod)
mutated_mod['func_7272'] = func_7272
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7272_call = mutated_mod.get_global_var('func_7272')
call_7273 = func_7272_call()
output = call_7273
func_7274 = relay.Function([], output)
mutated_mod['func_7274'] = func_7274
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5812_call = mod.get_global_var('func_5812')
func_5813_call = mutated_mod.get_global_var('func_5813')
call_7280 = relay.TupleGetItem(func_5812_call(), 0)
call_7281 = relay.TupleGetItem(func_5813_call(), 0)
output = relay.Tuple([call_7280,])
output2 = relay.Tuple([call_7281,])
func_7311 = relay.Function([], output)
mod['func_7311'] = func_7311
mod = relay.transform.InferType()(mod)
output = func_7311()
func_7312 = relay.Function([], output)
mutated_mod['func_7312'] = func_7312
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7332 = relay.var("var_7332", dtype = "float32", shape = (7, 14, 11))#candidate|7332|(7, 14, 11)|var|float32
uop_7333 = relay.cosh(var_7332.astype('float32')) # shape=(7, 14, 11)
func_6966_call = mod.get_global_var('func_6966')
func_6970_call = mutated_mod.get_global_var('func_6970')
var_7346 = relay.var("var_7346", dtype = "int64", shape = (630,))#candidate|7346|(630,)|var|int64
var_7347 = relay.var("var_7347", dtype = "float64", shape = (1755, 1))#candidate|7347|(1755, 1)|var|float64
call_7345 = relay.TupleGetItem(func_6966_call(relay.reshape(var_7346.astype('int64'), [630,]), relay.reshape(var_7347.astype('float64'), [15, 117]), ), 4)
call_7348 = relay.TupleGetItem(func_6970_call(relay.reshape(var_7346.astype('int64'), [630,]), relay.reshape(var_7347.astype('float64'), [15, 117]), ), 4)
func_379_call = mod.get_global_var('func_379')
func_382_call = mutated_mod.get_global_var('func_382')
var_7354 = relay.var("var_7354", dtype = "float32", shape = (1008,))#candidate|7354|(1008,)|var|float32
call_7353 = relay.TupleGetItem(func_379_call(relay.reshape(var_7354.astype('float32'), [12, 14, 6])), 2)
call_7355 = relay.TupleGetItem(func_382_call(relay.reshape(var_7354.astype('float32'), [12, 14, 6])), 2)
bop_7359 = relay.divide(var_7347.astype('float64'), call_7353.astype('float64')) # shape=(1755, 70)
bop_7362 = relay.divide(var_7347.astype('float64'), call_7355.astype('float64')) # shape=(1755, 70)
func_2685_call = mod.get_global_var('func_2685')
func_2691_call = mutated_mod.get_global_var('func_2691')
var_7364 = relay.var("var_7364", dtype = "float64", shape = (35,))#candidate|7364|(35,)|var|float64
call_7363 = relay.TupleGetItem(func_2685_call(relay.reshape(call_7345.astype('float64'), [2, 15, 7]), relay.reshape(call_7345.astype('float64'), [2, 15, 7]), relay.reshape(var_7347.astype('float64'), [1755,]), relay.reshape(var_7364.astype('float64'), [35,]), ), 3)
call_7365 = relay.TupleGetItem(func_2691_call(relay.reshape(call_7345.astype('float64'), [2, 15, 7]), relay.reshape(call_7345.astype('float64'), [2, 15, 7]), relay.reshape(var_7347.astype('float64'), [1755,]), relay.reshape(var_7364.astype('float64'), [35,]), ), 3)
output = relay.Tuple([uop_7333,call_7345,var_7346,var_7354,bop_7359,call_7363,var_7364,])
output2 = relay.Tuple([uop_7333,call_7348,var_7346,var_7354,bop_7362,call_7365,var_7364,])
func_7372 = relay.Function([var_7332,var_7346,var_7347,var_7354,var_7364,], output)
mod['func_7372'] = func_7372
mod = relay.transform.InferType()(mod)
var_7373 = relay.var("var_7373", dtype = "float32", shape = (7, 14, 11))#candidate|7373|(7, 14, 11)|var|float32
var_7374 = relay.var("var_7374", dtype = "int64", shape = (630,))#candidate|7374|(630,)|var|int64
var_7375 = relay.var("var_7375", dtype = "float64", shape = (1755, 1))#candidate|7375|(1755, 1)|var|float64
var_7376 = relay.var("var_7376", dtype = "float32", shape = (1008,))#candidate|7376|(1008,)|var|float32
var_7377 = relay.var("var_7377", dtype = "float64", shape = (35,))#candidate|7377|(35,)|var|float64
output = func_7372(var_7373,var_7374,var_7375,var_7376,var_7377,)
func_7378 = relay.Function([var_7373,var_7374,var_7375,var_7376,var_7377,], output)
mutated_mod['func_7378'] = func_7378
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7439 = relay.const([[[-1,5,-7,-10,-3],[-10,7,-9,8,8],[-10,-10,5,-8,-7],[8,5,5,-6,-3],[-8,-7,-2,-8,6],[6,4,-6,5,1],[6,-10,-1,-3,4],[5,-8,8,1,-10],[10,2,1,-5,4],[8,5,1,7,-4],[9,-2,2,-8,-4],[9,-4,1,10,2],[2,-4,-10,-5,-10],[-5,-8,7,-6,2]],[[-5,5,-3,5,-4],[5,-8,5,5,-4],[-8,-5,7,8,-9],[5,-3,-5,1,-10],[-6,-1,8,-4,-5],[-8,-9,-1,5,2],[-2,-9,-1,3,-4],[-5,10,7,-1,10],[9,-8,1,5,-1],[-1,7,-7,-6,-2],[-3,-3,4,-2,-10],[10,-10,-8,-10,-8],[-3,3,3,-10,-10],[7,9,8,-9,8]],[[-5,-9,-7,-8,1],[7,9,3,9,8],[6,-3,-7,-8,-3],[8,-5,5,-5,10],[-10,-1,8,-8,-9],[-6,-4,-2,2,-9],[-8,-5,5,8,4],[9,6,3,-6,-1],[-9,-2,8,4,-3],[8,-10,-6,-4,7],[2,-2,-6,4,-5],[-8,4,7,-3,-1],[-6,2,4,2,-2],[-6,7,-5,-2,-6]],[[6,3,-6,-1,3],[-7,-2,6,-7,-2],[9,7,5,-10,3],[-5,-2,8,-1,4],[10,5,-2,-6,9],[-10,-7,6,-9,8],[-2,10,1,9,4],[6,-9,-5,-9,-10],[10,-9,-4,-8,1],[4,9,7,-1,-10],[4,-8,6,-3,-6],[-5,2,-5,9,9],[9,5,-9,-8,1],[-3,3,-9,7,-3]],[[-5,-3,-2,-3,-2],[-3,8,-1,-10,-5],[-4,-7,2,-5,8],[-5,-6,-1,-5,-9],[7,-9,10,1,-6],[3,7,-6,-8,1],[9,-2,-2,-3,-5],[5,-4,8,2,-4],[-8,-10,-8,7,9],[5,-1,3,8,-2],[8,-7,-2,6,4],[4,-10,-8,-1,6],[2,10,-6,9,-8],[-9,8,1,-10,-6]],[[9,-8,-4,-7,1],[7,-5,-9,9,-9],[8,-3,3,-8,3],[7,4,10,2,-5],[3,6,-8,-10,-2],[-3,-6,-1,-2,-2],[-3,-6,-4,4,-6],[-9,-10,6,2,6],[5,-6,-8,8,6],[-7,-8,-7,-1,-10],[-2,5,-8,2,9],[3,7,-2,8,7],[9,4,-6,2,4],[6,3,-9,-4,-10]],[[-9,6,-4,-1,8],[6,-1,-5,-3,-6],[-10,-4,6,5,-2],[-5,-8,7,9,6],[-5,3,5,2,-6],[7,-3,-1,2,-2],[-1,-7,8,-2,-3],[2,-3,3,4,9],[8,-8,-7,-1,-6],[-5,-10,7,10,4],[-10,-1,-1,2,-2],[7,-7,2,-5,2],[3,-8,4,10,-5],[-5,-3,9,-3,-1]],[[-3,6,3,-3,10],[-10,7,-8,3,4],[4,-4,-6,-1,3],[-5,-10,8,8,4],[9,10,3,-8,8],[6,-1,-9,3,-7],[1,5,-4,7,-6],[-9,8,-2,9,-1],[10,-1,8,-10,-9],[7,9,-5,5,-5],[4,6,5,-7,8],[3,5,-10,5,2],[-9,6,-3,10,-3],[-10,1,3,6,2]],[[7,-5,-1,-3,-7],[2,8,-5,-1,10],[2,-2,-8,10,-4],[9,10,-2,-8,-9],[4,2,-1,2,2],[5,1,-8,2,-2],[-2,8,4,-5,6],[1,7,-9,-10,8],[2,7,-1,-2,-3],[-1,-7,7,8,-6],[-5,-2,10,-1,-2],[-4,4,-8,6,-10],[-8,4,-10,7,-2],[-10,-1,1,6,4]],[[3,-2,9,2,2],[6,4,5,10,2],[6,1,6,1,-6],[-8,2,5,-2,9],[-10,-5,-5,-8,2],[-9,2,6,-3,-8],[1,-9,-7,-6,-3],[4,2,-10,10,1],[6,10,9,-3,-2],[-3,-8,6,9,8],[-9,-9,-2,7,5],[-3,6,-8,-9,9],[-6,4,7,1,6],[-1,-2,7,7,7]],[[1,-4,5,-4,-5],[-8,5,4,6,9],[-7,-8,-1,4,-8],[-2,2,6,8,-4],[2,5,-5,-3,-8],[-4,3,5,-4,1],[-1,1,-9,-1,-8],[3,6,-1,-10,-4],[7,5,-10,3,9],[-8,-9,4,-7,-6],[-9,-6,8,9,-2],[-6,1,-8,-2,-4],[6,-5,-10,-4,5],[3,10,10,9,-6]],[[2,-9,-7,-3,7],[-2,-9,2,6,-8],[6,7,-3,4,6],[-2,-3,-3,-7,1],[-6,-8,10,6,-6],[8,-6,-7,-2,8],[2,10,10,-8,-10],[2,2,2,-2,9],[-3,-9,4,7,-7],[-7,6,6,9,-4],[1,-6,5,-4,-6],[-2,-3,-7,9,2],[10,6,-7,3,-6],[-6,10,9,-1,2]],[[-9,-6,7,9,9],[3,3,7,-2,5],[-7,5,4,-5,-9],[2,-3,-10,2,-8],[3,10,1,-3,8],[-10,-10,6,-9,8],[-10,-7,1,-5,9],[3,5,5,3,-8],[7,-9,3,10,6],[1,10,-9,7,3],[-5,7,2,-7,-9],[7,3,2,1,7],[4,1,7,-7,2],[-10,8,9,9,-4]],[[-1,6,-9,1,2],[5,-5,2,-6,6],[-8,-7,6,-6,-3],[3,5,9,10,2],[-7,10,5,6,2],[9,10,6,-3,-1],[5,4,7,-4,5],[-1,-4,6,4,1],[4,5,8,-2,-8],[-9,10,4,7,2],[-3,4,-5,-7,2],[6,7,-2,7,-6],[-8,7,-8,-3,9],[7,-2,1,1,6]]], dtype = "uint32")#candidate|7439|(14, 14, 5)|const|uint32
const_7440 = relay.const([[[4,-2,2,-2,2],[-7,-3,-5,8,-2],[7,-8,-5,-9,3],[-8,1,1,-8,2],[8,-8,4,4,3],[9,-1,-6,-5,1],[-6,3,1,-3,-9],[-10,-4,8,10,-2],[-9,-2,1,9,5],[-1,2,-2,-8,-3],[2,3,-2,6,6],[6,10,-8,-9,4],[-10,7,-1,-5,6],[5,1,-5,-3,-8]],[[2,4,3,-2,2],[8,-3,4,-6,2],[-8,1,8,-4,-1],[-10,6,5,-10,4],[5,6,9,-3,-10],[8,-5,-9,6,-4],[8,2,-9,-5,-3],[3,-3,9,8,6],[8,-7,-2,6,2],[7,-5,5,-5,3],[1,10,-4,5,-3],[-9,6,6,4,8],[-3,5,-3,1,3],[7,-1,-2,-6,-6]],[[-10,9,-3,-4,8],[-3,6,-10,10,-6],[-7,-1,-10,5,9],[-4,-10,-5,-10,2],[-10,1,-4,-4,2],[9,4,10,-2,9],[-10,-10,-6,5,-3],[-5,3,6,5,-4],[-1,8,5,-9,-5],[-8,-1,-5,-3,-6],[7,-7,5,8,5],[-9,-6,-2,-5,8],[9,-6,6,1,2],[-6,-7,1,-10,6]],[[-2,-2,1,9,-4],[5,5,-6,-3,-10],[2,-5,-1,-5,-7],[6,3,8,-3,10],[-6,-3,-8,-5,5],[7,-3,8,-3,7],[-3,9,-3,2,6],[3,8,-6,-4,1],[-6,7,-3,5,10],[-5,-7,9,-3,-5],[-2,2,4,-10,9],[-8,-8,-6,3,-6],[-5,6,-7,-3,-5],[-7,1,-8,-9,5]],[[-8,5,-1,-10,6],[7,-8,5,-9,4],[-1,10,-4,8,9],[-3,8,4,1,-4],[-1,-10,6,-4,8],[-9,-1,-2,9,8],[3,4,1,1,-3],[1,-5,-3,-6,6],[-7,4,3,-2,-6],[-10,-2,-10,-6,5],[3,-5,6,-9,-7],[8,-9,-1,-8,7],[-3,-1,-5,8,-2],[-1,8,5,-4,-8]],[[-9,-4,-9,-5,5],[-1,2,3,-4,9],[3,-3,3,-7,-2],[9,-1,2,-5,-7],[8,3,1,-7,7],[3,3,-3,1,7],[-4,5,-9,-5,3],[-7,1,2,5,7],[5,-6,-5,9,8],[1,10,7,-4,-4],[-4,1,2,-7,3],[1,-5,8,-5,-8],[-1,-6,5,-2,6],[8,-10,5,-2,-1]],[[8,3,-10,-3,-8],[-9,-10,-3,10,5],[-1,8,-2,3,7],[9,5,-9,4,1],[5,-2,7,-1,1],[5,-9,-3,-7,-4],[-2,2,-4,-4,4],[-10,-5,3,10,-9],[8,-2,6,-7,-4],[9,-4,3,1,6],[-3,4,1,-10,-1],[-1,-10,7,8,8],[7,-8,-8,6,-10],[-7,-1,1,-8,2]],[[-9,-8,5,4,1],[7,-9,6,-8,9],[7,1,6,-9,-2],[-6,5,1,-1,-3],[-8,10,-7,-7,3],[3,1,-9,7,-3],[-8,-1,5,2,6],[10,-8,-5,1,2],[-7,3,10,-5,9],[-7,9,1,-9,-1],[10,2,2,-7,-9],[-6,-5,-8,-2,-3],[3,1,9,5,4],[-6,7,-4,-7,-3]],[[-9,5,-9,-10,-6],[-3,4,-10,-5,2],[10,6,8,-8,3],[1,8,8,1,-8],[3,-7,-5,-2,3],[-10,4,2,-7,6],[10,4,5,7,1],[2,-9,1,-7,2],[6,5,-9,-1,7],[-6,7,9,3,-8],[3,8,-1,4,1],[8,-10,-7,-9,-3],[10,-3,3,-8,8],[-3,-6,-3,-10,-4]],[[4,8,6,1,6],[10,-7,-2,7,-9],[6,5,2,10,4],[-5,-8,10,-10,9],[-7,3,-4,-4,-5],[-5,6,-2,8,2],[-7,-10,-10,9,5],[8,-7,-8,6,-1],[7,-1,-5,-1,6],[-7,-10,10,-1,-2],[8,-8,2,7,8],[-10,-3,-5,-5,-1],[10,4,7,10,4],[2,-3,-9,6,3]],[[-4,-8,4,-7,-10],[10,8,-7,-9,-1],[-10,-6,-5,8,-9],[-5,3,-1,-7,-6],[7,-6,-1,8,-2],[4,3,-3,-3,8],[-1,6,-6,-1,-3],[9,-2,-5,-8,4],[1,9,7,2,2],[-3,-5,-7,6,-4],[-6,3,6,2,10],[-1,5,6,-2,4],[-10,-9,8,6,3],[-6,-10,8,6,9]],[[5,8,-10,3,-3],[-7,6,6,1,9],[-9,-4,4,5,9],[6,4,5,-8,-5],[7,-2,6,-6,-9],[3,-10,8,-7,5],[-7,-4,-5,-4,-9],[-2,8,7,3,3],[8,1,-2,-3,-2],[-7,-9,1,-9,-9],[-1,-3,6,-5,5],[2,-5,-3,-1,-6],[-7,3,1,2,-8],[-8,-1,-10,-3,5]],[[-6,-3,-9,7,-5],[3,3,7,-2,6],[9,1,-5,4,-9],[-9,-5,3,9,4],[-3,5,6,2,3],[10,-1,10,3,7],[-5,4,-7,6,8],[-3,8,7,-1,4],[6,-4,4,-5,9],[8,8,-6,10,2],[-3,-7,2,6,2],[7,-3,-6,-6,3],[-3,-7,-2,6,6],[-8,-5,-1,10,2]],[[7,-1,-10,-9,-8],[-10,-3,1,-4,7],[-7,9,1,-8,-7],[-4,-10,9,4,6],[10,2,-7,-1,2],[-10,-5,10,9,9],[-8,4,-2,8,9],[-7,-4,-4,-3,-1],[-3,3,-10,-5,1],[-6,-1,-7,-3,6],[-10,3,-1,4,-4],[-1,8,6,-7,10],[7,6,-8,8,5],[7,8,-9,9,-4]]], dtype = "uint32")#candidate|7440|(14, 14, 5)|const|uint32
bop_7441 = relay.left_shift(const_7439.astype('uint32'), relay.reshape(const_7440.astype('uint32'), relay.shape_of(const_7439))) # shape=(14, 14, 5)
output = bop_7441
output2 = bop_7441
func_7444 = relay.Function([], output)
mod['func_7444'] = func_7444
mod = relay.transform.InferType()(mod)
mutated_mod['func_7444'] = func_7444
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7444_call = mutated_mod.get_global_var('func_7444')
call_7445 = func_7444_call()
output = call_7445
func_7446 = relay.Function([], output)
mutated_mod['func_7446'] = func_7446
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5812_call = mod.get_global_var('func_5812')
func_5813_call = mutated_mod.get_global_var('func_5813')
call_7481 = relay.TupleGetItem(func_5812_call(), 0)
call_7482 = relay.TupleGetItem(func_5813_call(), 0)
func_6242_call = mod.get_global_var('func_6242')
func_6244_call = mutated_mod.get_global_var('func_6244')
call_7491 = relay.TupleGetItem(func_6242_call(), 0)
call_7492 = relay.TupleGetItem(func_6244_call(), 0)
uop_7507 = relay.log10(call_7481.astype('float32')) # shape=(35,)
uop_7509 = relay.log10(call_7482.astype('float32')) # shape=(35,)
func_5860_call = mod.get_global_var('func_5860')
func_5864_call = mutated_mod.get_global_var('func_5864')
const_7514 = relay.const([2.238056,-3.159675,-5.428124,-4.677805,5.282992,7.143890,-5.432301,-5.692790,0.632553,1.226667,9.234309,-7.946291,8.468600,-2.643976,2.951067,9.807493,-4.632392,-9.511142,-9.586405,-5.028495,7.089001,-4.731088,-6.100993,7.129946,6.899049,-5.013815,1.571984,-4.786398,-4.321003,9.681895,-9.280868,3.089291,-3.022202,-5.529633,-5.634497,1.831836,-9.233788,-5.166535,-6.576629,-7.860174,-2.042086,-4.433917,-3.488581,-0.898023,-1.581087,-3.926546,3.342924,6.697042,1.306110,-9.951039,-1.279389,-6.773664,-8.414941,-1.453161,-3.290381,-9.248670,9.699900,9.184791,5.694956,9.688557,1.765660,3.052246,3.701256,6.734369,-4.272031,-5.134503,5.681785,2.606361,1.384736,-7.964022], dtype = "float64")#candidate|7514|(70,)|const|float64
call_7513 = relay.TupleGetItem(func_5860_call(relay.reshape(const_7514.astype('float64'), [35, 2]), relay.reshape(const_7514.astype('float64'), [35, 2]), ), 0)
call_7515 = relay.TupleGetItem(func_5864_call(relay.reshape(const_7514.astype('float64'), [35, 2]), relay.reshape(const_7514.astype('float64'), [35, 2]), ), 0)
output = relay.Tuple([call_7491,uop_7507,call_7513,const_7514,])
output2 = relay.Tuple([call_7492,uop_7509,call_7515,const_7514,])
func_7530 = relay.Function([], output)
mod['func_7530'] = func_7530
mod = relay.transform.InferType()(mod)
output = func_7530()
func_7531 = relay.Function([], output)
mutated_mod['func_7531'] = func_7531
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7530_call = mod.get_global_var('func_7530')
func_7531_call = mutated_mod.get_global_var('func_7531')
call_7538 = relay.TupleGetItem(func_7530_call(), 1)
call_7539 = relay.TupleGetItem(func_7531_call(), 1)
func_148_call = mod.get_global_var('func_148')
func_150_call = mutated_mod.get_global_var('func_150')
var_7541 = relay.var("var_7541", dtype = "uint64", shape = (70,))#candidate|7541|(70,)|var|uint64
call_7540 = relay.TupleGetItem(func_148_call(relay.reshape(var_7541.astype('uint64'), [7, 2, 5])), 0)
call_7542 = relay.TupleGetItem(func_150_call(relay.reshape(var_7541.astype('uint64'), [7, 2, 5])), 0)
output = relay.Tuple([call_7538,call_7540,var_7541,])
output2 = relay.Tuple([call_7539,call_7542,var_7541,])
func_7543 = relay.Function([var_7541,], output)
mod['func_7543'] = func_7543
mod = relay.transform.InferType()(mod)
var_7544 = relay.var("var_7544", dtype = "uint64", shape = (70,))#candidate|7544|(70,)|var|uint64
output = func_7543(var_7544)
func_7545 = relay.Function([var_7544], output)
mutated_mod['func_7545'] = func_7545
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5812_call = mod.get_global_var('func_5812')
func_5813_call = mutated_mod.get_global_var('func_5813')
call_7576 = relay.TupleGetItem(func_5812_call(), 0)
call_7577 = relay.TupleGetItem(func_5813_call(), 0)
func_6151_call = mod.get_global_var('func_6151')
func_6152_call = mutated_mod.get_global_var('func_6152')
call_7578 = relay.TupleGetItem(func_6151_call(), 0)
call_7579 = relay.TupleGetItem(func_6152_call(), 0)
output = relay.Tuple([call_7576,call_7578,])
output2 = relay.Tuple([call_7577,call_7579,])
func_7614 = relay.Function([], output)
mod['func_7614'] = func_7614
mod = relay.transform.InferType()(mod)
mutated_mod['func_7614'] = func_7614
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7614_call = mutated_mod.get_global_var('func_7614')
call_7615 = func_7614_call()
output = call_7615
func_7616 = relay.Function([], output)
mutated_mod['func_7616'] = func_7616
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6829_call = mod.get_global_var('func_6829')
func_6831_call = mutated_mod.get_global_var('func_6831')
call_7714 = relay.TupleGetItem(func_6829_call(), 0)
call_7715 = relay.TupleGetItem(func_6831_call(), 0)
output = relay.Tuple([call_7714,])
output2 = relay.Tuple([call_7715,])
func_7723 = relay.Function([], output)
mod['func_7723'] = func_7723
mod = relay.transform.InferType()(mod)
mutated_mod['func_7723'] = func_7723
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7723_call = mutated_mod.get_global_var('func_7723')
call_7724 = func_7723_call()
output = call_7724
func_7725 = relay.Function([], output)
mutated_mod['func_7725'] = func_7725
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5812_call = mod.get_global_var('func_5812')
func_5813_call = mutated_mod.get_global_var('func_5813')
call_7730 = relay.TupleGetItem(func_5812_call(), 0)
call_7731 = relay.TupleGetItem(func_5813_call(), 0)
output = relay.Tuple([call_7730,])
output2 = relay.Tuple([call_7731,])
func_7732 = relay.Function([], output)
mod['func_7732'] = func_7732
mod = relay.transform.InferType()(mod)
mutated_mod['func_7732'] = func_7732
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7732_call = mutated_mod.get_global_var('func_7732')
call_7733 = func_7732_call()
output = call_7733
func_7734 = relay.Function([], output)
mutated_mod['func_7734'] = func_7734
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6802_call = mod.get_global_var('func_6802')
func_6803_call = mutated_mod.get_global_var('func_6803')
call_7778 = relay.TupleGetItem(func_6802_call(), 0)
call_7779 = relay.TupleGetItem(func_6803_call(), 0)
output = relay.Tuple([call_7778,])
output2 = relay.Tuple([call_7779,])
func_7784 = relay.Function([], output)
mod['func_7784'] = func_7784
mod = relay.transform.InferType()(mod)
output = func_7784()
func_7785 = relay.Function([], output)
mutated_mod['func_7785'] = func_7785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6939_call = mod.get_global_var('func_6939')
func_6941_call = mutated_mod.get_global_var('func_6941')
call_7865 = func_6939_call()
call_7866 = func_6939_call()
func_4612_call = mod.get_global_var('func_4612')
func_4615_call = mutated_mod.get_global_var('func_4615')
var_7870 = relay.var("var_7870", dtype = "int64", shape = (13, 5))#candidate|7870|(13, 5)|var|int64
const_7871 = relay.const([[6],[6],[-7],[-5],[3],[-2],[-7],[-4],[-8],[-7],[-10],[9],[6],[5],[-9],[-6],[10],[-10],[-5],[4],[1],[8],[6],[-4],[-2],[-7],[1],[-2],[-3],[2],[-10],[8],[-4],[-9],[-3],[6],[-8],[1],[-6],[-10],[-6],[-3],[-5],[4],[10],[10],[8],[-3],[6],[1],[6],[3],[-4],[8],[1],[-10],[-5],[6],[8],[9],[-7],[1],[9],[-10],[-6],[6],[10],[6],[4],[-8],[3],[2],[3],[-9],[-7],[10],[-1],[3],[-2],[7],[-4],[2],[2],[2],[5],[1],[-7],[6],[-10],[-10],[3],[-4],[8],[-6],[-10],[10],[8],[10],[1],[6],[-9],[2],[9],[-6],[10],[7],[-4],[2],[8],[-4],[-3],[-2],[6],[10],[1],[1],[-10],[-8],[10],[-7],[9],[-8],[7],[-7],[-7],[3],[3],[8],[-9],[-7],[4],[-2],[1],[-3],[-3],[-1],[-8],[-7],[8],[10],[-5],[3],[10],[9],[2],[2],[4],[-10],[4],[-5],[-6],[9],[-7],[9],[-10],[-1],[1],[5],[7],[-3],[-10],[5],[-8],[8],[-8],[9],[1],[-8],[-6],[-4],[-5],[1],[10],[9],[10],[8],[-6],[-3],[-8],[8],[-3],[-10],[7],[-3],[-6],[-9],[-3],[-6],[6],[10],[-7],[7],[1],[-2],[10],[7],[-7],[8],[-6],[6],[7],[10],[8],[2],[-1],[-2],[-3],[4],[9],[-5],[5],[10],[8],[7],[8],[-5],[-1],[-6],[-10],[2],[3],[10],[5],[1],[9],[2],[-5],[-8],[-10],[-6],[-8],[-5],[5],[9],[2],[-7],[-7],[2],[-10],[-5],[9],[4],[10],[9],[-7],[-10],[8],[-6],[-7],[-8],[-6],[3],[-1],[-5],[-7],[9],[10],[2],[-7],[1],[7],[-9],[-9],[8],[1],[6],[-1],[1],[5],[1],[8],[10],[5],[-7],[-2],[-6],[-2],[-4],[3],[-6],[7],[2],[-2],[-8],[-8],[-8],[10],[4],[7],[-10],[2],[10],[3],[4],[5],[10],[1],[-10],[4],[-7],[-6],[1],[-3],[3],[-10],[1],[-1],[3],[-4],[-1],[6],[-2],[5],[1],[7],[-2],[-5],[1],[9],[7],[9],[1],[-8],[5],[3],[2],[-1],[-8],[4],[6],[9],[6],[-2],[-1],[-3],[10],[6],[-5],[8],[-6],[-7],[-2],[-1],[-5],[-2],[-8],[-6],[7],[3],[8],[-6],[-1],[2],[5],[-5],[-2],[-9],[1],[5],[-7],[-6],[9],[1],[-1],[-4],[4],[1],[-2],[-1],[-4],[-10],[-9],[9],[1],[7],[-2],[-2],[6],[-5],[-10],[5],[-10],[-9],[-9],[1],[-7],[10],[-2],[-7],[4],[10],[8],[4],[-9],[-8],[-9],[5],[9],[-2],[-6],[-4],[6],[10],[-4],[2],[2],[3],[-7],[-3],[-10],[-5],[4],[-8],[6],[3],[-5],[-7],[-10],[8],[4],[1],[3],[8],[-5],[-6],[2],[1],[3],[-2],[1],[1],[4],[-4],[4],[8],[3],[8],[7],[8],[8],[6],[5],[-9],[9],[7],[7],[-4],[7],[5],[2],[-1],[-7],[5],[-4],[-6],[4],[4],[9],[8],[-5],[6],[3],[2],[9],[-1],[-3],[8],[-3],[3],[-5],[-2],[9],[8],[9],[6],[9],[5],[3],[3],[-7],[1],[-1],[9],[3],[1],[-9],[4],[-9],[7],[-8],[-2],[-6],[-2],[8],[-9],[2],[-2],[-2],[-6],[3],[10],[8],[-1],[10],[-7],[-3],[-7],[7],[8],[-7],[-10],[-10],[3],[-3],[4],[4],[-7],[1],[1],[8],[-10],[-6],[9],[-6],[-1],[-5],[-3],[5],[-6],[3],[-6],[5],[-1],[-3],[-8],[10],[-1],[-4],[-4],[-9],[-5],[-5],[-1],[4],[-9],[-5],[-4],[-8],[9],[-9],[2],[6],[6],[6],[-2],[4],[-9],[-8],[1],[8],[-9],[-7],[-5],[9],[-8],[-2],[8],[4],[8],[5],[-4],[9],[-9],[-6],[9],[2],[-8],[10],[-4],[9],[7],[-2],[9],[-8],[-7],[9],[3],[-9],[-5],[5],[-10],[9],[-6],[1],[-7],[-1],[10],[-9],[1],[-6],[-2],[4],[-2],[-10],[-9],[-10],[-1],[-6],[9],[-6],[8],[3],[3],[8],[1],[4],[10],[-1],[-10],[-1],[7],[7],[2],[7],[-3],[-10],[-4],[-10],[4],[1],[-6],[1],[5],[-10],[4],[-4],[-3],[-10],[-6],[-6],[4],[9],[-8],[-5],[9],[-8],[-2],[-10],[-10],[2],[2],[-6],[6],[-9],[7],[-1],[-3],[8],[-1],[4],[10],[-6],[-10],[9],[-9],[-5],[-8],[-5],[8],[-9],[1],[-7],[8],[6],[8],[-9],[1],[-1],[2],[-10],[-5],[-1],[7],[-7],[9],[-2],[-6],[7],[-4],[-5],[-4],[-3],[10],[7],[-5],[4],[-1],[3],[2],[-2],[6],[3],[3],[-7],[-4],[1],[7],[-4],[-7],[-10],[7],[2],[-10],[5],[7],[-2],[1],[6],[-7],[3],[3],[9],[8],[-6],[6],[9],[1],[-1],[-8],[-4],[-4],[-7],[-4],[-1],[6],[-2],[9],[-7],[-9],[-4],[-1],[6],[4],[-5],[-4],[7],[-9],[-4],[-9],[-6],[10],[4],[-3],[8],[3],[7],[-5],[-8],[-10],[3],[-3],[-1],[7],[7],[-2],[-1],[-3],[4],[5],[8],[-6],[-4],[7],[9],[-6],[-1],[-5],[3],[-10],[7],[3],[6],[2],[-2],[4],[7],[-4],[-10],[-4],[8],[3],[8],[6],[9],[-2],[-7],[4],[-1],[-3],[-5],[2],[6],[6],[6],[-5],[1],[6],[4],[-1],[-7],[9],[7],[9],[-2],[-10],[9],[3],[-5],[9],[9],[6],[2],[9],[3],[10],[4],[5],[-5],[-9],[7],[5],[1],[-1],[-7],[8],[6],[7],[-7],[5],[10],[-1],[5],[6],[-8],[-8],[-6],[1],[3],[4],[4],[-7],[5],[8],[2],[-1],[9],[5],[-7],[5],[-9],[10],[-7],[3],[-5],[-9],[8],[-1],[8],[6],[-3],[10],[-8],[-7],[9],[-2],[-4],[-6],[-5],[1],[7],[-1],[4],[1],[-1],[1],[3],[-5],[10],[7],[3],[-2],[2],[-8],[-8],[-9],[8],[3],[1],[-5],[-10],[-4],[2],[5],[1],[-3],[-1],[-1],[-2],[2],[-9],[6],[-10],[-9],[-2],[1],[3],[-4],[-7],[6],[1],[2],[4],[-5],[-2],[8],[-7],[-9],[3],[5],[-6],[-5],[4],[-3],[8],[-8],[-9],[-1],[2],[1],[2],[-7],[4],[-5],[8],[10],[6],[3],[5],[-10],[-5],[2],[-7],[-9],[8],[6],[9],[-10],[-1],[-8],[2],[-3],[3],[10],[-1],[-3],[-9],[10],[-7],[-6],[9],[4],[7],[-1],[-8],[9]], dtype = "int64")#candidate|7871|(975, 1)|const|int64
call_7869 = relay.TupleGetItem(func_4612_call(relay.reshape(var_7870.astype('int64'), [13, 1, 5]), relay.reshape(const_7871.astype('int64'), [13, 15, 5]), ), 2)
call_7872 = relay.TupleGetItem(func_4615_call(relay.reshape(var_7870.astype('int64'), [13, 1, 5]), relay.reshape(const_7871.astype('int64'), [13, 15, 5]), ), 2)
uop_7874 = relay.exp(call_7865.astype('float64')) # shape=(10, 5, 14)
uop_7876 = relay.exp(call_7866.astype('float64')) # shape=(10, 5, 14)
bop_7877 = relay.bitwise_xor(call_7869.astype('int16'), const_7871.astype('int16')) # shape=(975, 350)
bop_7880 = relay.bitwise_xor(call_7872.astype('int16'), const_7871.astype('int16')) # shape=(975, 350)
output = relay.Tuple([var_7870,uop_7874,bop_7877,])
output2 = relay.Tuple([var_7870,uop_7876,bop_7880,])
func_7881 = relay.Function([var_7870,], output)
mod['func_7881'] = func_7881
mod = relay.transform.InferType()(mod)
mutated_mod['func_7881'] = func_7881
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7882 = relay.var("var_7882", dtype = "int64", shape = (13, 5))#candidate|7882|(13, 5)|var|int64
func_7881_call = mutated_mod.get_global_var('func_7881')
call_7883 = func_7881_call(var_7882)
output = call_7883
func_7884 = relay.Function([var_7882], output)
mutated_mod['func_7884'] = func_7884
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7207_call = mod.get_global_var('func_7207')
func_7209_call = mutated_mod.get_global_var('func_7209')
call_7923 = relay.TupleGetItem(func_7207_call(), 0)
call_7924 = relay.TupleGetItem(func_7209_call(), 0)
func_7543_call = mod.get_global_var('func_7543')
func_7545_call = mutated_mod.get_global_var('func_7545')
var_7926 = relay.var("var_7926", dtype = "uint64", shape = (70,))#candidate|7926|(70,)|var|uint64
call_7925 = relay.TupleGetItem(func_7543_call(relay.reshape(var_7926.astype('uint64'), [70,])), 2)
call_7927 = relay.TupleGetItem(func_7545_call(relay.reshape(var_7926.astype('uint64'), [70,])), 2)
func_4723_call = mod.get_global_var('func_4723')
func_4725_call = mutated_mod.get_global_var('func_4725')
const_7933 = relay.const([4.064303,-1.362575,-8.736967,-8.202292,-9.698464,-2.056888,8.768784,0.303648,9.923369,-3.792559,-9.422434,1.506880,9.804152,-4.791129,2.151765,-4.619319,-3.291588,-7.687616,5.737708,7.948098,-6.015984,-0.100874,9.083941,-8.243524,-1.805362,-2.912456,9.602662,-1.896412,-2.159524,3.481357,0.243425,-9.483548,-8.152203,-8.505129,8.642150,1.550314,-0.401938,-0.095225,-3.332464,-6.278192,3.457735,1.965296,8.728736,-6.389717,-1.783719,2.206038,4.806602,2.483311,-1.247612,-8.711764,4.109012,-6.526179,6.019793,4.925817,7.322603,5.256111,9.033554,4.059069,-6.638273,-9.511477,0.301967,-0.059669,-4.990242,-2.373449,1.864770,-5.533753,5.315865,-3.120349,6.284704,-3.492339,-9.019464,-6.543408,-9.344425,-6.585219,2.147487,0.689388,-7.980061,0.350347,6.263166,3.191588,-4.133228,-5.192903,-8.555141,9.127542,-4.417595,-5.049657,0.003609,-7.840257,-0.469572,-9.827670,-6.154556,-9.596293,9.687366,8.231248,-6.003840,1.629657,-5.305993,-4.859685,3.719151,2.796516,6.869031,-9.409577,-4.095570,-8.704819,7.585709,-4.868061,-5.741082,-2.194920,-9.605882,-1.608304,-4.200503,-3.680865,6.208339,-7.179893,-6.998093,8.949981,6.238036,-7.337147,-7.152631,9.159794,8.736757,5.788667,-0.641822,3.269511,1.938932,0.470645,4.687563,3.204652,-4.099906,6.074148,9.442898,-3.151689,-6.604562,-4.818870,9.415181,-7.060809,3.373391,-1.034492,6.637147,-1.272327,-5.577498,9.096906,9.635502,-6.136382,-2.740579,-2.739813,-8.648604,-1.246641,5.208311,-4.126590,-7.742618,4.995342,-7.486306,-0.920956,2.447219,4.548407,-5.302195,-4.974761,7.122406,-1.797220,-7.313272,4.731690,1.977066,-0.029561,-7.660270,-7.916558,1.933730,-9.614859,1.056452,-2.306582,4.207730,-9.593388,-5.004233,-8.022238,-3.246131,5.416005,4.615040,0.547369,-3.494925,-2.685384,-3.390142,-0.265055,-7.634685,-7.524720,4.649275,3.543600,-6.726434,-3.159702,-7.171557,-9.920245,3.963247,8.241017,-1.468541,-8.079222,-6.174101], dtype = "float64")#candidate|7933|(195,)|const|float64
call_7932 = func_4723_call(relay.reshape(const_7933.astype('float64'), [5, 13, 3]))
call_7934 = func_4723_call(relay.reshape(const_7933.astype('float64'), [5, 13, 3]))
output = relay.Tuple([call_7923,call_7925,var_7926,call_7932,const_7933,])
output2 = relay.Tuple([call_7924,call_7927,var_7926,call_7934,const_7933,])
func_7937 = relay.Function([var_7926,], output)
mod['func_7937'] = func_7937
mod = relay.transform.InferType()(mod)
var_7938 = relay.var("var_7938", dtype = "uint64", shape = (70,))#candidate|7938|(70,)|var|uint64
output = func_7937(var_7938)
func_7939 = relay.Function([var_7938], output)
mutated_mod['func_7939'] = func_7939
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7732_call = mod.get_global_var('func_7732')
func_7734_call = mutated_mod.get_global_var('func_7734')
call_7951 = relay.TupleGetItem(func_7732_call(), 0)
call_7952 = relay.TupleGetItem(func_7734_call(), 0)
var_7972 = relay.var("var_7972", dtype = "float64", shape = (35,))#candidate|7972|(35,)|var|float64
bop_7973 = relay.minimum(call_7951.astype('float32'), relay.reshape(var_7972.astype('float32'), relay.shape_of(call_7951))) # shape=(35,)
bop_7976 = relay.minimum(call_7952.astype('float32'), relay.reshape(var_7972.astype('float32'), relay.shape_of(call_7952))) # shape=(35,)
output = relay.Tuple([bop_7973,])
output2 = relay.Tuple([bop_7976,])
func_7981 = relay.Function([var_7972,], output)
mod['func_7981'] = func_7981
mod = relay.transform.InferType()(mod)
var_7982 = relay.var("var_7982", dtype = "float64", shape = (35,))#candidate|7982|(35,)|var|float64
output = func_7981(var_7982)
func_7983 = relay.Function([var_7982], output)
mutated_mod['func_7983'] = func_7983
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7993 = relay.var("var_7993", dtype = "bool", shape = (3, 10, 14))#candidate|7993|(3, 10, 14)|var|bool
var_7994 = relay.var("var_7994", dtype = "bool", shape = (3, 10, 14))#candidate|7994|(3, 10, 14)|var|bool
bop_7995 = relay.logical_or(var_7993.astype('bool'), relay.reshape(var_7994.astype('bool'), relay.shape_of(var_7993))) # shape=(3, 10, 14)
func_2685_call = mod.get_global_var('func_2685')
func_2691_call = mutated_mod.get_global_var('func_2691')
var_8000 = relay.var("var_8000", dtype = "float64", shape = (1, 210))#candidate|8000|(1, 210)|var|float64
var_8001 = relay.var("var_8001", dtype = "float64", shape = (195, 9))#candidate|8001|(195, 9)|var|float64
const_8002 = relay.const([-5.933951,-3.812181,-4.416744,-3.440241,-3.627280,-0.499128,0.677014,-4.786439,6.301819,-0.557791,7.123139,4.389823,-9.378093,1.453111,7.165455,-5.128314,2.340354,8.276111,-7.849597,7.562060,-1.144532,-7.092159,-4.889981,-5.786000,7.622657,-4.264483,8.665665,0.866348,3.848577,6.288369,3.634913,-6.669841,-1.595821,-3.426597,-6.926946], dtype = "float64")#candidate|8002|(35,)|const|float64
call_7999 = relay.TupleGetItem(func_2685_call(relay.reshape(var_8000.astype('float64'), [2, 15, 7]), relay.reshape(var_8000.astype('float64'), [2, 15, 7]), relay.reshape(var_8001.astype('float64'), [1755,]), relay.reshape(const_8002.astype('float64'), [35,]), ), 4)
call_8003 = relay.TupleGetItem(func_2691_call(relay.reshape(var_8000.astype('float64'), [2, 15, 7]), relay.reshape(var_8000.astype('float64'), [2, 15, 7]), relay.reshape(var_8001.astype('float64'), [1755,]), relay.reshape(const_8002.astype('float64'), [35,]), ), 4)
output = relay.Tuple([bop_7995,call_7999,var_8000,var_8001,const_8002,])
output2 = relay.Tuple([bop_7995,call_8003,var_8000,var_8001,const_8002,])
func_8007 = relay.Function([var_7993,var_7994,var_8000,var_8001,], output)
mod['func_8007'] = func_8007
mod = relay.transform.InferType()(mod)
var_8008 = relay.var("var_8008", dtype = "bool", shape = (3, 10, 14))#candidate|8008|(3, 10, 14)|var|bool
var_8009 = relay.var("var_8009", dtype = "bool", shape = (3, 10, 14))#candidate|8009|(3, 10, 14)|var|bool
var_8010 = relay.var("var_8010", dtype = "float64", shape = (1, 210))#candidate|8010|(1, 210)|var|float64
var_8011 = relay.var("var_8011", dtype = "float64", shape = (195, 9))#candidate|8011|(195, 9)|var|float64
output = func_8007(var_8008,var_8009,var_8010,var_8011,)
func_8012 = relay.Function([var_8008,var_8009,var_8010,var_8011,], output)
mutated_mod['func_8012'] = func_8012
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7207_call = mod.get_global_var('func_7207')
func_7209_call = mutated_mod.get_global_var('func_7209')
call_8137 = relay.TupleGetItem(func_7207_call(), 0)
call_8138 = relay.TupleGetItem(func_7209_call(), 0)
output = relay.Tuple([call_8137,])
output2 = relay.Tuple([call_8138,])
func_8145 = relay.Function([], output)
mod['func_8145'] = func_8145
mod = relay.transform.InferType()(mod)
output = func_8145()
func_8146 = relay.Function([], output)
mutated_mod['func_8146'] = func_8146
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5687_call = mod.get_global_var('func_5687')
func_5688_call = mutated_mod.get_global_var('func_5688')
call_8162 = relay.TupleGetItem(func_5687_call(), 2)
call_8163 = relay.TupleGetItem(func_5688_call(), 2)
uop_8168 = relay.asinh(call_8162.astype('float64')) # shape=(10, 16, 15)
uop_8170 = relay.asinh(call_8163.astype('float64')) # shape=(10, 16, 15)
bop_8174 = relay.not_equal(uop_8168.astype('bool'), relay.reshape(call_8162.astype('bool'), relay.shape_of(uop_8168))) # shape=(10, 16, 15)
bop_8177 = relay.not_equal(uop_8170.astype('bool'), relay.reshape(call_8163.astype('bool'), relay.shape_of(uop_8170))) # shape=(10, 16, 15)
func_7082_call = mod.get_global_var('func_7082')
func_7084_call = mutated_mod.get_global_var('func_7084')
const_8189 = relay.const([2.532551,-0.358574,1.991659,2.778918,-2.434155,6.826164,8.083409,2.110158,7.675730,-4.565123,2.035517,-0.919592,-4.801583,-8.700944,4.731809,6.409710,-1.398264,6.254850,-6.630616,4.269925,-9.330864,3.587442,-2.197128,8.948522,6.288629,-0.714832,-0.003000,5.479138,-1.689727,-6.854627,2.664422,6.099835,5.257583,-5.509205,8.190322,0.935555,-9.190719,-1.693557,3.352778,-4.121304,1.542943,0.024244,0.438215,-1.439840,-4.498896,4.752760,-6.261000,1.868459,9.242721,1.428584,2.303875,3.023071,1.043872,-1.650459,6.470915,8.997465,1.498091,-6.194159,-9.191680,-9.418261,-4.185984,-6.977307,-0.421205,-1.390528,4.860293,5.541344,-6.646517,-8.130148,-1.566911,-9.656868], dtype = "float64")#candidate|8189|(70,)|const|float64
call_8188 = relay.TupleGetItem(func_7082_call(relay.reshape(const_8189.astype('float64'), [70,])), 2)
call_8190 = relay.TupleGetItem(func_7084_call(relay.reshape(const_8189.astype('float64'), [70,])), 2)
uop_8201 = relay.cosh(call_8188.astype('float64')) # shape=(35, 9)
uop_8203 = relay.cosh(call_8190.astype('float64')) # shape=(35, 9)
output = relay.Tuple([bop_8174,const_8189,uop_8201,])
output2 = relay.Tuple([bop_8177,const_8189,uop_8203,])
func_8206 = relay.Function([], output)
mod['func_8206'] = func_8206
mod = relay.transform.InferType()(mod)
mutated_mod['func_8206'] = func_8206
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8206_call = mutated_mod.get_global_var('func_8206')
call_8207 = func_8206_call()
output = call_8207
func_8208 = relay.Function([], output)
mutated_mod['func_8208'] = func_8208
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5687_call = mod.get_global_var('func_5687')
func_5688_call = mutated_mod.get_global_var('func_5688')
call_8227 = relay.TupleGetItem(func_5687_call(), 0)
call_8228 = relay.TupleGetItem(func_5688_call(), 0)
func_7082_call = mod.get_global_var('func_7082')
func_7084_call = mutated_mod.get_global_var('func_7084')
var_8246 = relay.var("var_8246", dtype = "float64", shape = (70,))#candidate|8246|(70,)|var|float64
call_8245 = relay.TupleGetItem(func_7082_call(relay.reshape(var_8246.astype('float64'), [70,])), 1)
call_8247 = relay.TupleGetItem(func_7084_call(relay.reshape(var_8246.astype('float64'), [70,])), 1)
func_7444_call = mod.get_global_var('func_7444')
func_7446_call = mutated_mod.get_global_var('func_7446')
call_8253 = func_7444_call()
call_8254 = func_7444_call()
output = relay.Tuple([call_8227,call_8245,var_8246,call_8253,])
output2 = relay.Tuple([call_8228,call_8247,var_8246,call_8254,])
func_8262 = relay.Function([var_8246,], output)
mod['func_8262'] = func_8262
mod = relay.transform.InferType()(mod)
var_8263 = relay.var("var_8263", dtype = "float64", shape = (70,))#candidate|8263|(70,)|var|float64
output = func_8262(var_8263)
func_8264 = relay.Function([var_8263], output)
mutated_mod['func_8264'] = func_8264
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7723_call = mod.get_global_var('func_7723')
func_7725_call = mutated_mod.get_global_var('func_7725')
call_8268 = relay.TupleGetItem(func_7723_call(), 0)
call_8269 = relay.TupleGetItem(func_7725_call(), 0)
output = relay.Tuple([call_8268,])
output2 = relay.Tuple([call_8269,])
func_8284 = relay.Function([], output)
mod['func_8284'] = func_8284
mod = relay.transform.InferType()(mod)
mutated_mod['func_8284'] = func_8284
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8284_call = mutated_mod.get_global_var('func_8284')
call_8285 = func_8284_call()
output = call_8285
func_8286 = relay.Function([], output)
mutated_mod['func_8286'] = func_8286
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6124_call = mod.get_global_var('func_6124')
func_6125_call = mutated_mod.get_global_var('func_6125')
call_8381 = func_6124_call()
call_8382 = func_6124_call()
func_8284_call = mod.get_global_var('func_8284')
func_8286_call = mutated_mod.get_global_var('func_8286')
call_8397 = relay.TupleGetItem(func_8284_call(), 0)
call_8398 = relay.TupleGetItem(func_8286_call(), 0)
output = relay.Tuple([call_8381,call_8397,])
output2 = relay.Tuple([call_8382,call_8398,])
func_8408 = relay.Function([], output)
mod['func_8408'] = func_8408
mod = relay.transform.InferType()(mod)
output = func_8408()
func_8409 = relay.Function([], output)
mutated_mod['func_8409'] = func_8409
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6829_call = mod.get_global_var('func_6829')
func_6831_call = mutated_mod.get_global_var('func_6831')
call_8412 = relay.TupleGetItem(func_6829_call(), 0)
call_8413 = relay.TupleGetItem(func_6831_call(), 0)
func_6802_call = mod.get_global_var('func_6802')
func_6803_call = mutated_mod.get_global_var('func_6803')
call_8423 = relay.TupleGetItem(func_6802_call(), 0)
call_8424 = relay.TupleGetItem(func_6803_call(), 0)
func_8145_call = mod.get_global_var('func_8145')
func_8146_call = mutated_mod.get_global_var('func_8146')
call_8426 = relay.TupleGetItem(func_8145_call(), 0)
call_8427 = relay.TupleGetItem(func_8146_call(), 0)
output = relay.Tuple([call_8412,call_8423,call_8426,])
output2 = relay.Tuple([call_8413,call_8424,call_8427,])
func_8433 = relay.Function([], output)
mod['func_8433'] = func_8433
mod = relay.transform.InferType()(mod)
mutated_mod['func_8433'] = func_8433
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8433_call = mutated_mod.get_global_var('func_8433')
call_8434 = func_8433_call()
output = call_8434
func_8435 = relay.Function([], output)
mutated_mod['func_8435'] = func_8435
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8466 = relay.const([[[3.490579,0.103744,9.977222,-2.970186,-8.505138,-0.802487,-9.995268,-9.083712,-3.305961,3.008416,2.422968,-8.104737,-7.939876,-3.238423,-4.850880],[6.468446,7.062676,-8.217595,0.376611,-4.102907,4.079364,1.075024,7.461875,-7.501062,0.694001,-7.662307,-3.019040,-9.742425,2.454429,-6.187864],[-5.873065,5.119098,-4.039250,-6.930015,-7.092585,7.465532,2.368274,-6.174938,-4.457211,2.633028,-9.108184,-0.378956,-9.717438,-5.908677,3.018855],[8.363885,-5.632601,6.982596,-1.780730,-9.799182,-9.704306,-9.145527,-8.475881,7.895140,-7.221582,2.374130,-7.185650,5.449717,-0.602083,-4.765425],[-0.965366,3.657935,4.331121,9.092732,-5.969916,-8.611630,6.846064,3.681909,0.822086,6.497718,5.864394,9.899773,-3.686857,-1.862372,-1.269707],[4.991335,7.352958,7.226923,6.528248,-5.302152,-6.722029,7.986243,-3.749089,-2.298904,3.118073,8.783375,-6.057508,-4.381590,8.661071,1.460953],[-4.548026,-5.790845,2.862767,-3.178526,-8.530095,-6.306528,1.862290,-2.824097,-3.081909,-7.982982,-7.349525,-3.724570,-8.251739,-9.056762,-4.680523],[3.740971,-5.766989,-7.448021,7.621243,-7.845556,5.076177,-6.935883,-0.062784,-5.790814,7.249805,-2.467527,-9.896880,-8.372368,-9.951414,-7.035158],[-6.425423,4.392952,2.775938,-9.429661,-4.330950,-5.006798,-7.486675,-8.228046,-4.795588,5.546866,5.697165,1.223441,5.035509,-0.078097,-0.340840],[-4.151228,-7.647084,2.596865,9.405229,-0.236900,9.736280,0.989059,-2.132844,-1.333608,2.635177,-8.786009,-2.177818,-5.149072,-2.733899,3.784624],[-2.803395,0.626905,1.372696,-5.883474,6.353178,-8.407865,-8.089170,-6.442359,5.359707,9.004659,-5.262463,-6.017052,1.923221,-7.095558,2.448702]],[[2.720458,2.836533,5.305081,4.120906,7.488230,-0.030476,6.771504,-9.752008,6.943024,3.307981,-7.986723,4.641625,-5.600826,6.848162,-0.876687],[-0.326537,-8.367767,-4.283673,-7.390756,-0.187109,-1.933771,5.521593,6.580119,6.101817,7.488922,2.178207,7.131048,-7.494259,4.512521,-5.119366],[7.380494,3.586335,9.085098,7.829047,-2.806876,8.908420,-0.249479,-0.003934,-5.685634,8.221094,-5.123281,8.847387,5.829896,0.963922,-2.428524],[-5.507568,-1.106505,9.324927,4.843230,0.232961,-5.208440,8.232326,5.724232,-1.680834,8.449019,-4.032999,-5.561650,1.235785,4.486523,5.081379],[2.109875,5.558657,1.096725,8.679272,0.762459,-5.245786,4.426579,0.355290,-7.093400,6.053171,0.115082,9.233774,6.691652,6.803440,-4.837854],[-2.605205,-8.398215,1.323460,8.916970,-9.643187,-4.549566,-0.931840,-6.297535,-2.029830,-8.826354,7.155222,5.173188,3.598051,1.179129,-9.128138],[2.546246,2.481646,-7.622795,-7.243072,1.600465,9.315764,7.068250,-8.288444,8.195785,-9.365779,-6.296988,9.477968,5.515980,-7.556958,8.018003],[-8.040110,-4.119450,-5.060921,-3.190517,-1.728860,3.168107,0.802229,4.907127,5.347748,5.689855,-1.223699,4.006547,1.817431,1.395024,8.179497],[-4.045113,6.047516,-2.785595,-4.150383,-1.757923,-9.300832,-1.457988,8.481854,1.174439,-3.014913,-3.903987,-5.377864,-3.953322,-7.920048,-3.722816],[-7.472464,8.957772,6.895859,4.712056,5.578636,-1.171635,6.820362,3.153320,-1.865866,3.558233,5.074024,-9.947374,5.177554,-2.543496,-8.658650],[-1.632542,5.629412,-3.932762,8.123043,-1.941317,-9.501705,-4.915007,9.125338,-6.569144,8.191040,-4.101200,1.070340,-4.732503,2.453018,6.223696]],[[2.824801,-4.667123,3.678596,7.750013,-5.740644,0.528569,-6.602872,2.358517,-8.943358,-2.324449,7.760689,-1.741658,1.578642,-7.030102,5.811275],[-3.835306,1.472893,-7.255630,1.955440,6.786151,4.423057,-8.251563,-9.455847,-8.104354,3.956894,-1.641348,3.399744,-8.254118,-7.623822,-8.326267],[-2.419606,-9.348309,4.974504,-2.201426,2.710648,3.301057,2.702063,-5.550840,8.170052,-1.496020,0.864883,0.353676,4.243617,8.889083,-2.743930],[-4.979226,-6.261208,-9.333860,4.654059,2.681305,-2.554247,7.622087,-5.904845,-2.146802,-5.453023,7.376123,3.875813,0.573327,-0.347131,-3.746177],[-1.984393,9.687905,-8.971105,-6.622998,-0.529346,-7.271537,-1.485712,-9.732143,3.082693,-7.651366,0.562701,-6.086028,8.387890,-1.727806,-9.286798],[-6.123116,5.720928,-4.363089,-6.703048,1.624252,-1.587549,3.036365,5.333169,1.991988,-7.495140,1.229595,4.695356,3.764690,8.517841,-6.204930],[-1.284922,-9.459829,-9.726769,1.870565,6.621266,-6.691135,-1.473983,7.616916,1.137133,8.769758,-9.704538,-8.740446,-0.399955,-1.919396,0.276113],[2.396981,-9.224197,1.743267,-3.542771,2.373522,8.663448,4.084086,3.417538,5.422588,-2.657202,2.361192,5.414273,-6.080539,7.833758,7.887380],[-5.609914,-6.279075,-1.635929,0.205211,6.361316,5.910077,-4.478512,-4.469881,8.613008,5.640867,-4.380368,-4.975077,-8.391566,6.051590,-6.001931],[-8.636302,-0.559826,4.933627,-1.131175,2.572281,9.511344,-5.848911,-3.130346,0.177222,-2.688900,4.364669,0.925356,3.711500,-6.126034,0.828067],[3.719292,1.515869,5.156780,3.142088,-2.931162,8.207081,6.080618,0.583053,-4.387346,1.322934,8.813080,-1.999717,-9.282318,-7.727089,-3.540890]],[[7.096914,5.750625,7.827101,2.376029,-2.602493,-9.275647,9.712629,3.639791,9.958456,-4.664731,8.149255,6.777860,-7.818628,0.357765,-6.353413],[5.786378,2.383305,4.278184,0.461653,5.021244,-0.671120,5.384210,5.826510,-4.477756,-4.580283,5.057389,4.080609,6.432278,1.703933,-8.533258],[4.522910,0.871738,9.321070,2.581394,-6.290157,-9.829091,-2.469474,-3.113562,4.295286,-7.641853,7.079590,1.166961,-9.343101,3.298012,2.894881],[-8.874464,0.454148,2.331285,-1.268826,4.537290,-3.173407,6.466918,6.901118,-3.738493,-1.061717,-3.580459,0.704079,-2.082939,7.926721,1.349983],[-8.727851,7.212118,2.344717,-9.794792,2.920186,-9.852383,2.315949,5.079991,-0.824250,2.618150,-6.796454,-4.002366,2.237709,-2.858324,-0.650603],[1.780122,9.868939,-2.429484,-8.159068,-7.747878,-4.809475,9.938846,-1.922808,-1.622502,-7.759228,0.640392,-7.042795,-0.340817,6.228133,-3.596259],[-0.020853,-5.454065,-3.745964,8.173948,0.245000,-3.188505,-8.852950,1.731112,-4.826170,7.567633,-5.661324,-3.121149,6.513157,-0.430313,4.219072],[-2.368247,8.451390,1.387016,-8.023208,-0.155277,-4.204490,6.487781,-9.086129,3.724160,8.995954,8.662495,6.220521,-6.550182,4.980788,2.151305],[6.274808,-0.464057,-4.739629,-6.384010,-6.773668,-6.503185,8.435715,-6.207417,8.853221,5.539604,-5.568480,-5.967660,-2.456203,-7.807596,6.552896],[-7.157859,-1.308089,9.981666,-7.419657,3.061757,-8.722470,6.063116,1.228293,3.217429,5.849580,5.164067,-1.026474,7.604117,-3.584713,-8.133166],[-2.082152,-2.254848,5.213803,8.558169,0.836580,1.478580,8.186896,-2.603012,-1.976551,5.129993,-0.383061,6.857624,-4.033717,7.368096,5.831629]],[[-4.208446,-5.567493,-5.670445,3.886431,7.672441,-8.229553,-4.271592,1.865121,-4.925466,3.989596,6.053795,0.665576,-7.884152,2.127906,-5.103061],[8.784687,-7.518380,-2.251140,3.138985,9.124198,-0.116820,4.568789,9.494353,1.247872,-6.481051,4.076183,-8.125521,7.818707,-9.711095,-3.902777],[2.533824,7.519435,7.563135,-3.762615,9.814191,5.099628,9.957443,6.129287,5.848589,-4.039397,3.036235,6.468355,-9.371639,-2.274895,-0.071936],[-3.414686,-4.178817,4.577418,6.259789,-9.400239,6.761043,-2.382398,5.587180,1.472704,0.404871,-9.124812,4.977626,-1.126794,-4.663075,-0.542099],[-7.830961,-9.198793,0.932115,-3.055826,5.348177,4.787492,6.373422,7.471480,5.307953,6.706237,6.115195,1.031101,-8.475498,-3.828158,-4.415461],[1.697190,1.053681,9.523017,3.704586,9.736524,1.974886,-3.674587,0.070119,6.445537,-8.476186,7.661762,-8.648165,0.531401,-3.571404,-1.545854],[-9.874378,0.189961,1.740751,-6.423481,5.563616,-1.805841,4.285589,5.752102,-0.725523,3.435471,3.089747,-1.660355,-4.040718,-6.827893,-7.513592],[1.313252,-3.326782,-8.768720,-6.576243,2.535206,5.810277,-4.061255,-6.784383,6.454010,-8.350564,5.412154,6.799612,3.431793,0.346311,-2.883426],[-4.907494,4.083441,9.152869,6.072802,-9.999113,1.348116,-1.484424,-3.963332,9.143877,7.880229,6.735504,3.443092,6.452955,-9.764071,5.173360],[-2.100783,-5.741062,-1.063925,8.484090,2.807729,-2.314621,1.406173,-5.410424,7.095303,4.932687,5.978668,-1.242460,0.758785,-2.732479,-2.131165],[0.834244,0.717361,-8.097483,2.119752,3.383398,-3.835584,4.779024,-2.149159,1.001254,9.091841,5.456519,4.336095,1.076253,8.389239,-6.291630]]], dtype = "float32")#candidate|8466|(5, 11, 15)|const|float32
var_8467 = relay.var("var_8467", dtype = "float32", shape = (5, 11, 15))#candidate|8467|(5, 11, 15)|var|float32
bop_8468 = relay.floor_mod(const_8466.astype('float32'), relay.reshape(var_8467.astype('float32'), relay.shape_of(const_8466))) # shape=(5, 11, 15)
output = relay.Tuple([bop_8468,])
output2 = relay.Tuple([bop_8468,])
func_8480 = relay.Function([var_8467,], output)
mod['func_8480'] = func_8480
mod = relay.transform.InferType()(mod)
var_8481 = relay.var("var_8481", dtype = "float32", shape = (5, 11, 15))#candidate|8481|(5, 11, 15)|var|float32
output = func_8480(var_8481)
func_8482 = relay.Function([var_8481], output)
mutated_mod['func_8482'] = func_8482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6151_call = mod.get_global_var('func_6151')
func_6152_call = mutated_mod.get_global_var('func_6152')
call_8486 = relay.TupleGetItem(func_6151_call(), 0)
call_8487 = relay.TupleGetItem(func_6152_call(), 0)
func_5860_call = mod.get_global_var('func_5860')
func_5864_call = mutated_mod.get_global_var('func_5864')
var_8498 = relay.var("var_8498", dtype = "float64", shape = (70,))#candidate|8498|(70,)|var|float64
call_8497 = relay.TupleGetItem(func_5860_call(relay.reshape(var_8498.astype('float64'), [35, 2]), relay.reshape(var_8498.astype('float64'), [35, 2]), ), 0)
call_8499 = relay.TupleGetItem(func_5864_call(relay.reshape(var_8498.astype('float64'), [35, 2]), relay.reshape(var_8498.astype('float64'), [35, 2]), ), 0)
output = relay.Tuple([call_8486,call_8497,var_8498,])
output2 = relay.Tuple([call_8487,call_8499,var_8498,])
func_8503 = relay.Function([var_8498,], output)
mod['func_8503'] = func_8503
mod = relay.transform.InferType()(mod)
mutated_mod['func_8503'] = func_8503
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8504 = relay.var("var_8504", dtype = "float64", shape = (70,))#candidate|8504|(70,)|var|float64
func_8503_call = mutated_mod.get_global_var('func_8503')
call_8505 = func_8503_call(var_8504)
output = call_8505
func_8506 = relay.Function([var_8504], output)
mutated_mod['func_8506'] = func_8506
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6802_call = mod.get_global_var('func_6802')
func_6803_call = mutated_mod.get_global_var('func_6803')
call_8540 = relay.TupleGetItem(func_6802_call(), 0)
call_8541 = relay.TupleGetItem(func_6803_call(), 0)
func_3153_call = mod.get_global_var('func_3153')
func_3157_call = mutated_mod.get_global_var('func_3157')
var_8576 = relay.var("var_8576", dtype = "uint8", shape = ())#candidate|8576|()|var|uint8
var_8577 = relay.var("var_8577", dtype = "uint8", shape = (132,))#candidate|8577|(132,)|var|uint8
call_8575 = relay.TupleGetItem(func_3153_call(relay.reshape(var_8576.astype('uint8'), []), relay.reshape(var_8577.astype('uint8'), [11, 12, 1]), ), 0)
call_8578 = relay.TupleGetItem(func_3157_call(relay.reshape(var_8576.astype('uint8'), []), relay.reshape(var_8577.astype('uint8'), [11, 12, 1]), ), 0)
func_6546_call = mod.get_global_var('func_6546')
func_6554_call = mutated_mod.get_global_var('func_6554')
const_8581 = relay.const([5,5,-8,-4,5,-10,2,-4,4,7,1,-10,9,-3,10,-8,3,7,-2,-4,4,3,-3,-7,6,-6,9,7,8,2,-6,-4,-6,10,4,6,-9,4,-8,10,6,3,4,1,10,9,-6,6,-4,9,-2,7,-7,-3,3,1,1,-5,3,-6,-1,-10,-10,6,-3,-3,3,-6,1,5], dtype = "uint64")#candidate|8581|(70,)|const|uint64
const_8582 = relay.const([9.824732,4.341861,6.786485,7.498578,8.814483,-6.776226,-5.943404,-5.944021,4.345614,-9.006166,-2.872915,8.704082,-2.322112,4.183331,-9.317798,4.929562,2.760933,-9.844018,9.743905,3.160708,5.885023,0.043956,2.545569,5.222572,-3.179693,7.609640,3.018485,9.617060,-6.806369,5.675270,5.964702,-6.065235,4.288409,-8.723240,2.753606,4.860988,4.165555,-5.242801,2.662731,9.493043,2.042871,-9.370810,5.344440,-6.517954,-5.558829,-0.396614,6.317689,-2.273991,5.437988,2.047978,-8.138181,-7.806943,1.963442,-3.692676,-5.496230,7.598422,4.601414,-8.186871,8.075136,-4.277482,-1.996241,4.491829,2.792369,-6.587991,-3.895757,2.781063,0.036271,-6.314586,-8.791951,1.631223,6.996788,5.648922,-9.927505,5.700692,-4.094032,5.659677,9.872610,-0.469294,-1.460856,4.554201,-1.936136,9.972142,-7.616693,7.773677,-3.600097,6.572739,9.676736,-1.750102,-0.930902,1.413737,7.973902,4.054090,8.329933,-1.473984,6.221113,1.790731,-4.853065,6.954659,-7.278972,-7.515670,4.608760,-7.894342,-9.545034,-4.755060,0.372969,0.942194,-4.025908,6.305378,7.179525,8.678111,2.210256,-8.249976,0.813619,6.890979,-3.336868,-9.038083,2.565405,-6.915874,-5.737966,0.725225,-6.542358,-7.501292,1.756147,1.046810,1.151745,6.453055,6.651840,8.214832], dtype = "float64")#candidate|8582|(128,)|const|float64
const_8583 = relay.const([-1.800818,6.031521,-6.570745,5.349152,-5.313606,-5.450559,2.748713,7.476074,-1.952260,5.424708,3.120458,-0.195298,4.694812,8.748445,-7.132643,-8.357499,5.671797,1.960231,-0.222433,-1.834908,2.075457,3.960654,2.565367,9.886930,4.530543,-1.381897,-9.685320,6.421721,-4.875977,-2.400847,1.247216,9.437687,0.375611,-0.265020,4.856420,-7.500998,6.478749,9.639586,8.663144,-7.363760,-9.357067,1.972243,5.091489,-1.897397,-9.712605,1.957304,4.927060,-0.123142,4.524225,-6.277451,5.824449,9.768430,1.317187,0.681606,3.383757,1.822210,-5.801936,-7.655140,-4.180222,1.300885,-9.309775,-3.143264,0.604865,-3.773144,0.435576,8.389989,5.024697,3.542256,-7.412753,7.880648,-6.964439,9.581507,-4.524346,-2.592912,-6.883231,8.048700,-0.541644,-3.807856,-7.056488,-6.055004,-0.485781,-9.068319,-0.299778,-2.450634,-6.648937,6.300276,-6.788439,-8.433100,-9.386044,9.810108,-0.543526,7.254466,-7.860942,9.201015,-8.907845,-8.129424,8.250301,5.165234,-7.722731,-8.699999,5.892135,1.622712,-8.261881,-9.729338,1.277459,3.097125,-6.021016,-2.015658,9.308239,2.366571,-8.560114,-6.653345,-3.049104,2.312088,4.411047,-8.899476,0.497050,-5.328273,6.049452,0.286851,6.474609,-2.621291,4.323256,-9.061188,-3.671816,8.769144,-1.976976,3.374039,1.671038,9.938463,-4.211384,9.382265,-2.391592,-0.731513,8.583361,-1.191679,-2.429930,-0.644133,8.319670,-8.147647,6.031922,-8.515732,9.235022,-7.839937,2.986541,5.265034,9.484937,0.816989,8.963990,1.781100,7.581339,6.487671,7.240510,-3.127479,-8.136343,-6.983018,-8.100231,6.153171,-9.343998,-4.717516,-9.613348,-2.292160,-8.517250,1.790904,3.531297,-0.204999,-7.589879,-0.369097,-6.973293,-2.708692,-9.795358,-7.936948,-7.648473,-0.732946,8.879412,-4.577152,5.456371,-6.821457,-3.459668,3.362005,-2.545112,0.263507,5.022306,-9.751312,-3.110094,-0.702740,-6.887806,5.846712,7.863297,0.675464,-6.701974,-7.547329,-4.448977,5.781319,-3.367361,-4.473385,8.644158,8.561576,-2.051535,-4.422969,-1.518512,0.132828,2.110255,0.967482,-8.269036,1.923544,-0.848771,-5.251842,-8.134496,-6.710958,-7.596855,-0.696057,-8.658721,-9.160325,1.874328,8.963757,-1.808305,-1.969984,2.090764,-3.816628,2.483437,-9.547478,8.708797,-4.148403,-7.478316,-6.174968,-1.564137,-4.534597,-7.802486,7.486822,0.051044,6.152237,9.918452,3.996229,-4.690438,-1.137122,-3.505559,2.229643,-9.705917,2.112722,-2.711571,4.125979,-9.740204,0.026531,3.138403,4.023273,5.897124,-3.282971,-6.945705,5.846445,1.345722,-3.996088,-2.011677,5.491948,-2.012974,-9.169577,-1.240298,7.733547,2.645242,1.923063,2.787895,-2.770859,0.444496,2.863660,-3.537909,-9.887169,-7.615900,1.146598,0.486106,6.696439,-2.319053,-1.817774,-3.567545,5.387538,7.686931,-0.159764,7.235388,6.450780,0.798037,3.716520,-0.931803,1.572938,-4.105228,2.651766,1.434116,8.898042,-2.065343,-5.840270,6.537352,3.820844,-0.531553,6.860631,-6.421651,-9.897500,3.282498,3.102095,-7.443781,5.168887,-2.894150,-4.936806,9.286425,8.436937,5.409714,-4.955093,7.001186,4.715968,9.138126,-0.698589,-9.321849,4.969660,-5.269157,7.931707,2.713350,6.095244,2.943506,4.886488,-2.802793,2.836592,-7.805046,-8.384966,8.318965,0.599380,6.826675,-5.472547,4.130849,1.557974,-3.477326,-3.604467,7.717638,6.556597,0.630866,-0.387142,9.676830,7.744961,0.052254,-0.215398,-8.939961,-1.253454,9.465226,9.702564,-9.118957,-3.189128,0.514501,9.783184,-0.248094,0.737214,1.451417,3.836823,4.370276,8.850286,7.929347,2.116065,2.681122,6.752077,-1.484381,2.491424,2.125494,-5.742859,-0.391397,-6.815996,-1.901721,-4.789451,7.894520,4.854422,3.409488,8.625088,-1.931780,-1.246622,-4.043399,-4.686857,-5.224323,-8.433032,1.798737,-3.421371,-2.506215,-1.089048,-0.850244,-6.444838,6.250251,8.580287,-5.739349,6.056119,4.765699,7.568381,6.287295,8.297816,4.531356,8.417582,-7.629609,4.955568,-7.297372,5.358977,-8.398881,-8.065218,8.630923,-8.941893,4.920700,-1.964419,6.383044,-2.142371,5.831243,-1.071381,3.056046,6.397558,5.607739,-6.070030,1.764219,0.805735,-2.212988,8.237074,9.818573,0.698476,2.340548,3.751116,0.033819,6.590164,4.648776,-4.610055,3.412610,-7.609440,-9.969641,1.606932,5.809628,4.596554,-2.725480,2.057806,8.067157,-4.208105,9.155695,5.107820,-2.647131,9.404650,1.003762,-9.894927,-1.841400,6.292867,-0.532458,-1.676781,2.166747,4.731981,-6.165514,2.584256,2.151894,-4.355871,-8.624011,-0.699705,-2.422514,-3.980905,8.154476,-4.921453,-2.940356,-3.600983,-7.413559,-2.729095,-7.144461,-5.075024,-1.421838,-4.181379,8.194427,-0.336123,5.879329,-6.565881,2.753818,3.072828,-2.948652,-6.521778,0.085346,5.160547,1.066381,-1.022516,5.666380,-8.739703,-7.232842,2.507955,1.038732,5.051930,-3.657834,-5.525515,5.300190,-7.968744,6.998106,-7.117471,4.036862,8.535092,9.780633,5.931042,-8.293438,-1.173629,-6.896990,-2.536229,-0.120424,-9.754099,-1.558401,-9.362637,-9.092391,3.553450,4.209960,5.654948,3.641159,2.904390,-3.874667,2.494946,-0.462209,1.603743,7.256636,-7.655920,-2.054596,7.242080,5.301903,-6.334239,-9.822325,1.492315,1.894766,3.723464,5.511873,9.525327,0.210472,-9.978487,-5.814355,-6.833839,-7.847127,0.063053,-4.310935,6.446139,-6.286533,3.249205,1.841236,-0.847623,4.034892,1.145910,-7.496131,-0.562483,3.901940,3.808431,3.819100,7.994645,-1.912295,-2.484667,8.374989,-4.324554,7.855893,0.990486,8.762090,8.622479,3.014078,8.981960,3.179490,0.726513,4.676170,-1.176541,-8.336894,-8.864816,3.529953,5.864353,-6.421161,-9.585837,-2.595421,-2.752919,-5.453971,-6.506036,-1.605206,5.301130,-9.615855,-4.058544,-0.537850,-8.471597,-9.500692,6.474588,7.939956,2.083257,0.139070,1.621179,4.840277,9.360906,1.394628,3.212082,5.603134,5.603060,6.479092,4.423115,-1.440845,-6.616724,-9.471800,-0.387470,7.764169,2.955684,-1.064122,-2.361094,-8.380845,1.050815,0.776995,6.731190,2.013337,-6.813242,-7.183487,-6.934340,2.404258,-0.765721,0.041853,8.234163,-9.786740,3.096479,1.591811,-0.512236,9.106268,8.639361,-0.196409,1.513883,6.088754,-5.419554,-0.620389,3.612896,5.460121,0.713424,-4.093231,9.880077,-4.212653,6.324800,-9.492844,0.415838,9.233986,7.332413,-6.507411,-3.178793,-9.329673,8.922467,2.955017,0.352984,-5.116581,6.177636,4.059554,1.013607,6.075603,-8.804033,-4.141955,2.578824,-0.092788,3.116787,-9.617509,8.195199,-7.808157,3.575191,3.263666,3.341732,2.920539,-9.204003,3.462419,-9.170162,4.814646,3.699162,5.253293,1.017253,4.411009,-2.038685,-3.790272,-6.289631,-4.755586,1.217236,-2.822598,-0.215152,5.650044,3.690268,-4.066070,-3.922033,-2.938449,-3.292786,-9.688234,9.297676,-0.117599,1.856682,9.222042,-0.538926,8.978309,5.153485,-3.514928,-6.587360,0.854087,-3.212910,1.162168,1.499561,-0.947376,2.541530,9.613637,-0.961774,-3.131790,5.122315,-6.375993,-7.689904,9.050195,0.247950,0.429418,3.030577,2.962532,-8.851685,-6.089780,-4.310719,5.451479,-2.155493,8.014429,0.955848,-5.530832,0.058084,-7.901981,8.536179,-7.004417,6.080005,-1.239554,-1.025587,-9.137683,-2.740540,-5.891282,-5.026361,3.855832,-6.429819,6.583051,-5.327454,-6.712058,-2.583816,9.416221,-6.628417,3.112977,3.498087,8.929357,5.172157,2.729376,-6.672730,5.215754,2.237019,1.411693,2.093544,1.413888,3.043549,4.317174,-3.477960,2.899650,-2.490322,-5.096088,-0.006576,1.340740,-5.084659,4.178677,-5.043255,0.423285,1.035373,-5.678730,9.082230,6.898959,5.679869,1.872322,2.814644,9.301795,7.003523,-4.343800,5.546869,3.117539,-1.197214,-6.273602,0.779880,-3.819249,0.201584,9.446222,2.387905,7.206604,-7.561760,-7.231393,8.896973,0.866675,-4.008319,-3.404309,-1.057452,2.614311,-9.774446,7.288982,0.349362,5.139994,-8.240029,4.909057,4.746086,8.969529,7.615669,8.742174,8.806844,0.548308,-0.949776,8.807164,-8.223471,4.377816,-2.892103,-8.398438,0.101709,-9.841212,5.604651,9.059989,-2.384360,-2.100820,-2.717691,-7.881447,-7.903989,9.323258,7.853772,6.021826,4.669665,3.007414,-5.965739,1.296757,3.343013,0.647522,-9.061772,7.730930,8.696305,-5.473603,6.273998,3.183026,7.029946,8.803842,1.916914,-0.871784,2.131357,4.997777,3.039121,7.910499,-1.720283,1.326929,4.402232,-1.625289,-4.564976,1.093423,9.786508,-9.210932,1.079304,-8.000218,-9.691902,-4.744660,-1.153396,9.403328,-4.507925,-0.045568,-1.044874,7.188116,-0.818390,-0.256723,2.744121,-6.146254,7.145101,5.201705,-2.232107,1.223794,-1.346088,8.457926,8.839849,-9.323146,2.740098,8.778430,2.624159,-0.600139,-0.634699,-7.927905,-1.791058,-7.072645,1.505991,-9.821325,0.485539,8.367700,1.266320,-1.535826,5.722146,7.156176,8.239174,-7.860989,6.359880,-6.621273,-5.513044,7.253420,-4.768770,-5.015743,5.849438,6.165593,-2.474787,-6.673133,1.986450,3.086281,-5.330641,-6.485603,6.573157,-1.127772,0.474844,-2.347126,5.514502,-9.649738,9.324461,-3.388715,2.990974,-0.579888,-2.586904,-5.547294,6.035978,-6.306168,-5.906300,-8.409748,-7.267631,-6.946340,5.972614,4.026995,7.365773,-5.537474,-2.245169,3.082796,8.832257,8.945359,4.225515,7.698687,5.922357,-5.797163,-0.364330,9.418351,9.910298,-3.904653,-0.006978,5.168462,2.831381,6.902891,-9.779435,-9.595835,-1.038158,0.490361,0.650314,-1.755639,9.720322,-6.138137,3.685723,-7.151041,4.815897,-2.335408,-3.317520,0.648428,2.567504,1.287885,-5.462461,5.934094,8.132372,-4.069741,-1.787457,-9.771614,9.673217,3.306374,-1.433361,6.849779,1.633002,-3.080466,4.775974,0.651648,-3.982890,3.531951,-4.264499,8.097008,5.456613,-7.250207,-5.271532,4.122788,1.280650,4.904985,-4.306979,-5.494926,-1.956122,3.453502,-1.472822,-2.106260,8.193645,0.449836,5.632168,-9.261247,-7.160374,-6.345992,9.155538,-6.233975,-7.537610,-8.127105,-3.755420,-7.889934,2.226385,4.650184,4.285287,-7.093529,3.774628,-7.557285,-2.605760,9.033021,-2.800666,-9.683109,-6.869063,-9.299473,-9.077791,1.242692,3.790749,1.975296,-1.529926,5.041545,-7.895120,-2.593157,7.824812,-0.278840,3.748242,0.604541,5.247436,0.783638,-5.599653,3.614805,2.176021,-6.889286,-1.507423,6.913453,-1.808857,-8.526416,5.060125,-9.438850,-8.417330,-5.548761,-6.277412,9.678882,5.939847,7.805319,-8.214053,-5.695487,-0.193885,1.642901,-1.345358,1.013427,7.988528,-9.725231,-2.992375,3.291831,0.856525,7.891560,2.199476,-2.046232,6.181912,3.721409,-8.128751,9.299876,-5.596418,5.782827,-1.787881,8.150345,6.534986,-1.533678,-6.832050,-3.056167,4.012237,3.239300,-2.102240,-2.753075,-1.983837,9.497587,2.300877,4.873931,3.058826,4.077973,6.424133,6.471241,-6.206665,-0.308392,-6.282903,-9.012797,-3.793425,-4.147585,6.122023,1.154815,-8.454488,-6.519867,8.492008,8.901472,0.305700,-2.196204,3.770592,3.309969,1.563250,-0.078294,-4.857855,-8.630447,5.811178,0.573150,6.713233,-3.158396,8.271667,8.949145,-5.646962,-8.354906,7.580572,-5.826187,-6.421774,-7.164230,3.251279,0.500144,-5.104761,2.619633,3.981564,-2.915827,8.408168,-4.690025,-5.039963,6.770284,6.504440,-5.852873,7.395771,0.647393,-2.883514,6.432048,8.436390,7.201302,-6.107550,5.659730,3.693907,-4.791268,-4.319100,4.107330,9.804216,7.038746,-6.151377,1.246156,-0.547070,-1.384540,3.143424,-8.175928,-5.955564,-3.218120,-7.125591,-0.724376,2.855482,-3.929895,-0.767319,-7.031920,3.260285,-4.517232,9.377614,7.227646,-5.150065,-0.969810,9.985768,-7.168500,-7.158637,3.610999,-7.715525,-1.689288,-3.077699,1.582459,1.760069,-9.735849,1.901292,-2.126914,8.626953,-6.879440,8.702636,9.462174,-6.294824,0.255096,-4.024221,3.239971,-6.138673,-6.571171,1.966900,6.832146,-7.624996,6.111050,-7.147432,-5.747779,6.573355,-9.169547,-9.362216,3.876011,5.470462,7.882108,2.777722,3.947882,8.867571,1.620646,1.789355,0.452115,-8.323805,-0.970349,-6.768108,-8.561260,8.489291,6.358926,-0.739597,-7.923899,5.628992,1.095553,3.328925,-1.755275,3.808553,3.334363,7.720576,-7.640958,9.055127,-3.530206,9.320673,6.613474,1.046950,-9.231483,4.960424,-4.516396,8.069876,-8.421239,-9.245328,4.379148,-8.831600,-8.305150,5.316123,6.498445,8.071080,-3.015573,2.521496,-8.446529,-0.443013,-5.950833,3.204737,-1.402950,4.104330,3.386166,-8.611779,8.460937,1.768162,-1.910319,-2.500981,9.339489,0.375288,-2.137874,3.018720,-5.340028,-7.896070,-5.988489,1.425402,-5.965849,0.973570,-8.868696,-0.771664,-1.740971,7.712902,-5.231962,-5.625459,-6.508823,2.140185,-3.591516,6.134617,7.238457,-2.732522,8.949492,-0.377470,-4.593454,-7.312768,3.839335,-4.324033,-3.707478,-1.436546,4.612471,0.444412,1.179750,-3.143668,0.582019,-9.066836,7.204317,-1.618682,-8.063066,-7.310698,-9.128669,7.409537,8.422311,7.528013,8.329662,-8.725837,7.294905,-9.309850,2.813694,-3.706647,-8.714175,2.744996,0.904391,7.638289,-6.406602,-6.273732,-7.643102,8.977655,3.261400,2.290154,-3.914769,5.881289,0.857901,-4.579746,4.875151,-2.150529,4.514738,9.908610,0.738998,-7.682996,6.369547,4.836146,-0.525424,1.708881,7.679871,8.566370,6.273502,9.600419,-5.381333,4.858521,9.487192,-7.840983,9.276741,8.688567,-3.168565,-4.401510,4.100952,5.274196,-0.404258,1.531828,9.216213,-8.010614,-5.549741,-1.522897,4.346609,-4.392416,5.251683,-0.581670,-9.090051,1.985347,0.670091,-3.465117,2.586398,9.954572,7.077095,-2.695243,0.689371,8.316922,-3.319130,-3.620309,7.473336,-7.733142,7.038055,6.164335,1.056832,-9.371102,-6.301678,5.854793,-7.069172,-7.160531,0.329689,7.340067,4.933718,-8.012080,-2.045569,1.978792,7.054064,-6.075494,-9.933158,8.200142,-2.101687,6.146063,-7.875052,8.407572,2.979804,-4.553920,-9.821210,5.091185,-7.532856,0.110393,-4.741939,-3.808351,8.150961,0.549118,-7.207280,8.640272,-6.923724,-6.022725,6.694684,-7.327276,4.492082,5.773411,-5.960141,1.896991,2.573960,2.968374,4.413187,6.871959,-8.143797,2.080575,2.392389,1.614844,4.171064,1.388713,6.679135,6.304664,-7.863415,-3.700143,0.652226,-0.166090,2.198373,-9.697752,6.007262,3.707439,-0.299157,8.277180,5.194047,-6.181151,-0.111095,7.633666,8.544792,-0.625370,5.341187,-6.620110,-1.311573,2.109149,-9.722299,-0.044689,-6.351611,1.855184,-7.608341,-8.532331,5.513501,-9.301684,-7.464167,-2.497370,-3.938832,-0.951194,3.917299,-0.806827,8.646716,8.393088,-5.170333,4.653918,6.976346,0.364565,6.492989,3.539836,-7.821751,-1.719660,8.325282,-7.651047,6.579632,-4.052752,8.343251,-6.213229,-9.550202,-1.912585,-1.187144,2.610836,-2.592590,1.534266,1.722782,1.569633,4.558857,-7.892677,-2.691707,-5.484803,0.795709,-9.339206,-5.636304,2.236097,8.058389,4.551499,-1.699977,5.872338,2.527755,-2.807465,-4.346392,5.471149,-2.143468,-9.741843,-7.582025,-5.789641,7.203260,8.383119,-5.984004,8.901726,-7.737313,0.553842,6.125759,-9.922886,0.771350,3.629255,-8.363846,7.439238,2.706608,7.262584,2.500729,1.307740,-0.705727,-8.338288,-9.765145,-1.224899,-6.351164,2.488165,9.266855,-1.236568,-5.691391,-1.375657,-9.928136,7.369094,0.690753,-8.063835,7.552619,-1.672189,-0.805933,-4.814858,-3.966145,9.271634,-7.719145,-3.228012,-2.650843,-9.598169,8.420331,7.285532,4.428708,9.982382,4.191228,9.669689,8.543144,2.819263,-9.354787,-8.271499,-3.802333,2.411687,-3.402320,-5.749779,-4.911861,-6.206609,4.720466,-3.093542,-8.406510,-6.792641,8.017527,-4.157969,8.932535,-1.479288,8.328011,-6.782464,-3.829093,-3.024920,7.277009,-5.303714,-9.266763,2.169039,-8.487593,-9.152229,1.609518,6.724868,-9.756625,-3.936322,6.824663,5.671962,2.383778,-2.084254,8.463105,3.881929,-5.980794,-6.974950,-0.701460,-9.399278,0.271866,8.580113,2.771877,9.638465,1.388126,0.400404,-9.106899,3.452456,-9.848407,-0.554394,4.869255,6.260678,0.633673,-3.747164,1.354286,-8.193102,5.208015,-0.418290,-4.789439,-6.121664,2.952672,-7.073905,-7.898707,0.662222,-7.555680,-5.406160,5.596480,6.830323,2.106455,-3.741078,-8.544200,-4.680651,9.761919,4.874516,-1.984544,5.857663,6.592108,-8.905545,2.164028,1.025288,1.054087,0.986244,9.711200,5.156899,-8.214969,8.293315,-2.296681,-5.436295,-1.594637,-5.940071,3.378805,-4.030412,2.356488,-6.290150,3.695001,-8.001411,1.257537,4.912791,-3.522913,-6.570537,3.748849,-9.854322,9.829819,1.713674,-4.902259,-4.859269,4.616139,-6.795421,1.940681,3.897684,-9.595142,4.731162,-5.162944,-6.459675,8.129756,3.604191,5.596480,2.244464,9.434802,-8.050603,-1.267504,7.642800,-8.358015,-3.632702,4.942062,-5.635833,-0.756186,4.356981,-6.539403,7.255098,-9.200837,-1.677611,-6.757377,-1.499104,-0.045557,2.315451,-4.595619,-1.034413,3.859938,-7.479817,5.965026,-9.707277,2.755914,-4.678372,-3.697305,0.935461,-6.779591,-2.134260,7.467061,-6.785201,1.990116,-6.105616,4.844443,-0.770624,-2.961273,1.319893,8.179938,6.132148,5.969773,5.723480,7.835816,5.639069,-0.797334,8.735039,-8.561213,-7.510930,5.194457,9.719470,5.560944,9.036445,5.764350,9.302465,0.315068,9.302983,-2.471673,-6.638239,1.931720,-7.618887,8.544223,-8.286744,4.654182,1.533172,1.601695,3.148389,5.694738,-9.463528,1.990522,9.020877,-2.297183,-7.430388,5.028874,8.817399,-7.811279,8.045253,7.419847,9.419927,-9.166388,8.572477,-4.818263,-4.918579,-9.909102,-9.134770,2.048045,-5.319238,-2.050902,-7.844288,5.570996,-8.809064,5.409473,2.362780,2.738694,-0.315930,9.301020,-7.187382,-5.341191,2.164637,2.302580,7.498607,-4.355846,9.356801,-0.895679,-7.737000,3.357053,1.301822,-2.564316,4.181187,3.737984,9.864258,3.238010,-2.111744,0.551100,-7.449796,8.609336,3.105783,5.953620,-2.361374,-7.858987,4.522317,-0.084505], dtype = "float64")#candidate|8583|(1755,)|const|float64
var_8584 = relay.var("var_8584", dtype = "float32", shape = (18, 1))#candidate|8584|(18, 1)|var|float32
call_8580 = relay.TupleGetItem(func_6546_call(relay.reshape(const_8581.astype('uint64'), [7, 10]), relay.reshape(const_8582.astype('float64'), [128,]), relay.reshape(const_8583.astype('float64'), [1755,]), relay.reshape(var_8576.astype('uint8'), []), relay.reshape(var_8577.astype('uint8'), [132,]), relay.reshape(var_8584.astype('float32'), [18,]), ), 6)
call_8585 = relay.TupleGetItem(func_6554_call(relay.reshape(const_8581.astype('uint64'), [7, 10]), relay.reshape(const_8582.astype('float64'), [128,]), relay.reshape(const_8583.astype('float64'), [1755,]), relay.reshape(var_8576.astype('uint8'), []), relay.reshape(var_8577.astype('uint8'), [132,]), relay.reshape(var_8584.astype('float32'), [18,]), ), 6)
func_6124_call = mod.get_global_var('func_6124')
func_6125_call = mutated_mod.get_global_var('func_6125')
call_8603 = func_6124_call()
call_8604 = func_6124_call()
uop_8606 = relay.atan(var_8584.astype('float32')) # shape=(18, 1)
output = relay.Tuple([call_8540,call_8575,var_8576,var_8577,call_8580,const_8581,const_8582,const_8583,call_8603,uop_8606,])
output2 = relay.Tuple([call_8541,call_8578,var_8576,var_8577,call_8585,const_8581,const_8582,const_8583,call_8604,uop_8606,])
func_8617 = relay.Function([var_8576,var_8577,var_8584,], output)
mod['func_8617'] = func_8617
mod = relay.transform.InferType()(mod)
var_8618 = relay.var("var_8618", dtype = "uint8", shape = ())#candidate|8618|()|var|uint8
var_8619 = relay.var("var_8619", dtype = "uint8", shape = (132,))#candidate|8619|(132,)|var|uint8
var_8620 = relay.var("var_8620", dtype = "float32", shape = (18, 1))#candidate|8620|(18, 1)|var|float32
output = func_8617(var_8618,var_8619,var_8620,)
func_8621 = relay.Function([var_8618,var_8619,var_8620,], output)
mutated_mod['func_8621'] = func_8621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5599_call = mod.get_global_var('func_5599')
func_5600_call = mutated_mod.get_global_var('func_5600')
call_8669 = func_5599_call()
call_8670 = func_5599_call()
func_6802_call = mod.get_global_var('func_6802')
func_6803_call = mutated_mod.get_global_var('func_6803')
call_8675 = relay.TupleGetItem(func_6802_call(), 0)
call_8676 = relay.TupleGetItem(func_6803_call(), 0)
uop_8680 = relay.log10(call_8669.astype('float64')) # shape=(10, 5, 14)
uop_8682 = relay.log10(call_8670.astype('float64')) # shape=(10, 5, 14)
func_5776_call = mod.get_global_var('func_5776')
func_5779_call = mutated_mod.get_global_var('func_5779')
var_8700 = relay.var("var_8700", dtype = "float32", shape = (132,))#candidate|8700|(132,)|var|float32
call_8699 = relay.TupleGetItem(func_5776_call(relay.reshape(var_8700.astype('float32'), [6, 11, 2])), 0)
call_8701 = relay.TupleGetItem(func_5779_call(relay.reshape(var_8700.astype('float32'), [6, 11, 2])), 0)
func_8262_call = mod.get_global_var('func_8262')
func_8264_call = mutated_mod.get_global_var('func_8264')
var_8707 = relay.var("var_8707", dtype = "float64", shape = (14, 5))#candidate|8707|(14, 5)|var|float64
call_8706 = relay.TupleGetItem(func_8262_call(relay.reshape(var_8707.astype('float64'), [70,])), 3)
call_8708 = relay.TupleGetItem(func_8264_call(relay.reshape(var_8707.astype('float64'), [70,])), 3)
uop_8713 = relay.rsqrt(call_8675.astype('float64')) # shape=(10, 6, 5)
uop_8715 = relay.rsqrt(call_8676.astype('float64')) # shape=(10, 6, 5)
func_5931_call = mod.get_global_var('func_5931')
func_5934_call = mutated_mod.get_global_var('func_5934')
var_8732 = relay.var("var_8732", dtype = "float32", shape = (1920,))#candidate|8732|(1920,)|var|float32
call_8731 = func_5931_call(relay.reshape(var_8732.astype('float32'), [10, 16, 12]))
call_8733 = func_5931_call(relay.reshape(var_8732.astype('float32'), [10, 16, 12]))
uop_8734 = relay.atan(uop_8713.astype('float64')) # shape=(10, 6, 5)
uop_8736 = relay.atan(uop_8715.astype('float64')) # shape=(10, 6, 5)
output = relay.Tuple([uop_8680,call_8699,var_8700,call_8706,var_8707,call_8731,var_8732,uop_8734,])
output2 = relay.Tuple([uop_8682,call_8701,var_8700,call_8708,var_8707,call_8733,var_8732,uop_8736,])
func_8762 = relay.Function([var_8700,var_8707,var_8732,], output)
mod['func_8762'] = func_8762
mod = relay.transform.InferType()(mod)
mutated_mod['func_8762'] = func_8762
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8762_call = mutated_mod.get_global_var('func_8762')
var_8764 = relay.var("var_8764", dtype = "float32", shape = (132,))#candidate|8764|(132,)|var|float32
var_8765 = relay.var("var_8765", dtype = "float64", shape = (14, 5))#candidate|8765|(14, 5)|var|float64
var_8766 = relay.var("var_8766", dtype = "float32", shape = (1920,))#candidate|8766|(1920,)|var|float32
call_8763 = func_8762_call(var_8764,var_8765,var_8766,)
output = call_8763
func_8767 = relay.Function([var_8764,var_8765,var_8766,], output)
mutated_mod['func_8767'] = func_8767
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6939_call = mod.get_global_var('func_6939')
func_6941_call = mutated_mod.get_global_var('func_6941')
call_8792 = func_6939_call()
call_8793 = func_6939_call()
output = call_8792
output2 = call_8793
func_8799 = relay.Function([], output)
mod['func_8799'] = func_8799
mod = relay.transform.InferType()(mod)
mutated_mod['func_8799'] = func_8799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8799_call = mutated_mod.get_global_var('func_8799')
call_8800 = func_8799_call()
output = call_8800
func_8801 = relay.Function([], output)
mutated_mod['func_8801'] = func_8801
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7444_call = mod.get_global_var('func_7444')
func_7446_call = mutated_mod.get_global_var('func_7446')
call_8814 = func_7444_call()
call_8815 = func_7444_call()
func_8799_call = mod.get_global_var('func_8799')
func_8801_call = mutated_mod.get_global_var('func_8801')
call_8824 = func_8799_call()
call_8825 = func_8799_call()
uop_8826 = relay.acosh(call_8824.astype('float64')) # shape=(10, 5, 14)
uop_8828 = relay.acosh(call_8825.astype('float64')) # shape=(10, 5, 14)
uop_8832 = relay.cosh(uop_8826.astype('float64')) # shape=(10, 5, 14)
uop_8834 = relay.cosh(uop_8828.astype('float64')) # shape=(10, 5, 14)
output = relay.Tuple([call_8814,uop_8832,])
output2 = relay.Tuple([call_8815,uop_8834,])
func_8838 = relay.Function([], output)
mod['func_8838'] = func_8838
mod = relay.transform.InferType()(mod)
mutated_mod['func_8838'] = func_8838
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8838_call = mutated_mod.get_global_var('func_8838')
call_8839 = func_8838_call()
output = call_8839
func_8840 = relay.Function([], output)
mutated_mod['func_8840'] = func_8840
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7732_call = mod.get_global_var('func_7732')
func_7734_call = mutated_mod.get_global_var('func_7734')
call_8844 = relay.TupleGetItem(func_7732_call(), 0)
call_8845 = relay.TupleGetItem(func_7734_call(), 0)
output = relay.Tuple([call_8844,])
output2 = relay.Tuple([call_8845,])
func_8846 = relay.Function([], output)
mod['func_8846'] = func_8846
mod = relay.transform.InferType()(mod)
output = func_8846()
func_8847 = relay.Function([], output)
mutated_mod['func_8847'] = func_8847
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8903 = relay.const([[[5.610667,-2.524409,8.768512,0.880294,-2.926240,-2.600902,3.324474,8.327768,0.512966,4.630520,9.563179,7.554040,-0.127587,-8.554308,0.521997],[3.462395,-1.455535,-7.147511,-8.545913,-7.359560,3.271346,3.264243,2.644040,-7.774983,2.112368,-6.813832,-7.926842,-1.115113,5.847349,-3.087601],[-4.969833,-4.836623,-1.472875,-4.945837,-6.747969,2.534142,-3.451153,5.562490,-0.025272,-4.992731,0.139076,-7.219445,1.114267,8.299142,0.476184],[0.211807,5.888584,-3.028285,-2.885480,8.696861,-9.693718,-0.943998,5.789389,-6.292346,-9.998203,7.330363,-9.301860,1.744714,4.007921,-3.386722],[-6.408085,-2.906221,2.027801,7.519495,-7.050398,4.460206,-6.666262,6.327546,2.044570,8.012941,-4.058262,9.392931,-9.594475,-2.163584,0.532353],[-5.381369,-4.094060,-2.668033,7.189077,4.034309,-0.300262,-6.308094,5.628709,-9.353882,-6.111681,-1.841966,-9.534216,5.702369,-7.072268,-7.946120],[-4.202732,0.489176,-5.809683,0.363035,-5.682094,6.103494,9.548379,7.277187,7.429334,6.070882,3.007397,-8.312702,3.419706,-5.963242,-0.109558],[-9.974591,2.540192,4.274007,1.244488,9.042078,-1.433892,-8.086656,2.912569,-7.312224,3.534070,-8.826329,7.697492,-0.230201,-1.939093,-8.083604]],[[-9.943183,0.416768,-1.977327,6.906500,7.266603,2.280146,1.248640,3.848521,0.043575,8.937708,8.573425,3.854452,-8.461956,-7.604768,-8.365174],[9.157916,6.926705,-6.824595,-6.526544,4.136990,6.114625,4.395078,-5.929550,0.409821,-5.581401,-8.812688,-3.566427,-1.399003,8.110692,9.032399],[6.790176,-1.257934,6.808989,-3.224844,-4.135934,-8.983648,0.729032,-9.276468,-8.121677,8.010781,-5.862497,5.328128,-2.602045,-2.685690,-7.681586],[4.782137,-6.211564,-4.107803,7.396872,4.957613,-7.076302,6.313398,6.406067,9.778702,7.199100,-6.438079,-4.178664,-5.307967,2.538271,-6.429885],[-5.270685,3.865408,-8.788641,-1.850829,9.696786,7.510285,1.614410,5.947843,1.825775,6.419274,0.406348,-6.269276,3.340185,-4.632182,9.853826],[-2.173630,7.611539,8.540652,5.328550,7.378260,1.989820,-3.706715,9.721822,-6.208506,-2.169957,0.228383,2.474373,4.620407,-3.061252,-8.169454],[-3.816125,1.595799,-9.886056,0.154174,-5.539894,-7.768344,-0.174329,1.081104,-8.130363,-4.815284,8.289502,4.904495,1.162189,7.867459,-8.997427],[-5.167223,-1.029192,-8.116012,-6.085925,-6.056251,-6.731294,-5.958125,1.298757,-1.749047,4.850109,-2.809700,-9.373409,-1.610328,-0.846702,2.602756]],[[5.267590,5.662517,5.955025,-2.253683,-0.497098,6.712082,-4.452320,6.050095,7.902759,9.692435,-0.426939,6.572008,8.178082,-9.414734,4.991870],[7.488877,6.757631,-8.488344,-3.336676,-4.598282,2.230237,-1.493512,-6.661504,1.542250,0.413000,-9.440162,-7.266768,2.538946,7.340256,9.143580],[9.717545,1.270541,9.377375,-0.333800,9.256862,-5.367932,-5.485476,-1.765268,-6.176820,-9.182442,-7.604515,7.871315,-4.974482,4.494264,1.124673],[-8.087634,4.701698,6.731073,4.045333,-9.460749,6.983933,2.735926,3.796445,-0.118886,6.364090,-4.597598,9.118895,-4.969194,-0.065934,-8.284410],[-9.823406,-5.148771,-1.095749,-4.182101,0.064994,-7.605794,-3.854227,-2.662637,5.135094,4.703786,4.429958,5.898968,-5.756671,-9.426073,0.209810],[-0.047370,1.442455,0.373179,-2.228800,2.064657,-0.748944,-1.549575,8.531569,9.770454,6.644918,1.138671,-0.994637,-8.272375,-6.312572,0.282166],[0.074324,5.240981,-6.979481,-0.731862,6.155133,3.141578,-9.020895,-6.140325,-3.160789,-4.930666,-8.491454,8.530549,-1.970631,0.829706,-2.826186],[-6.331902,-5.490815,5.648015,-4.569210,-7.255875,1.712816,-2.049964,6.516662,-8.154610,-6.986355,-2.456840,-7.831096,8.111154,9.316458,-8.475614]],[[4.474731,2.331673,-2.002495,-0.485203,-8.176519,-0.119585,-9.768566,1.703595,4.998558,-1.932669,7.912638,4.269718,-7.404153,-9.242128,2.598929],[3.925080,-7.961779,2.785081,9.314315,4.580057,-6.852242,-7.190893,-4.234681,-1.495495,1.834869,7.952485,9.644941,-8.478076,5.194546,6.436108],[0.335425,4.989669,0.730461,2.078220,5.807231,0.218708,-8.111932,-2.040655,9.052497,7.456981,5.221062,0.396885,4.034119,-5.564821,9.846377],[8.906947,3.406196,-7.175876,2.770859,3.031414,-6.790148,-7.330123,-0.561316,-2.992684,-7.993470,-6.748866,-7.993303,-8.138488,-5.633140,7.173161],[0.363264,-6.391823,4.834524,7.844628,-3.572430,0.062265,3.478233,-6.629365,5.435188,-4.905348,-0.458739,6.156992,-6.237765,-5.158053,4.613721],[-2.054671,-1.377220,8.350417,2.980612,7.729385,5.817385,0.729300,-3.917885,0.257331,-0.278502,3.240462,-0.062606,0.635797,0.171649,4.291477],[3.378273,7.646413,2.046711,-7.195170,3.464968,-6.927555,-1.251624,-2.060501,7.813369,-4.567612,1.252594,-3.841508,4.165384,-0.162972,3.730952],[0.035695,-5.948713,3.096460,2.335523,-1.695858,4.824116,5.830720,-4.072765,-5.598273,7.412186,0.788780,0.747730,8.585856,-3.647213,6.570216]],[[5.308458,-7.674463,1.605765,1.111034,5.686410,4.141419,3.228167,2.816911,-5.255189,5.463100,-2.283457,-4.446116,3.090784,-8.672604,-6.934782],[5.992885,-2.442017,8.320940,1.101535,-4.474376,-3.277643,7.000282,6.900042,-0.055972,5.345457,2.271650,-8.305393,5.583855,7.340167,8.160400],[2.457841,-6.250315,9.257183,8.676588,-7.410570,8.657531,6.983007,-9.514552,8.258639,1.184061,8.290046,1.249118,-3.038543,1.387349,-5.965486],[4.999577,5.641172,-0.125836,0.389682,-0.502528,7.882943,3.761494,-3.374687,9.918942,-3.483013,-0.245085,-3.335191,7.844227,-2.742639,-9.880726],[-5.647977,-1.533698,1.048535,-5.288715,-0.567064,2.040005,-1.194653,6.544106,-7.023899,0.295899,7.370795,-2.126243,0.204590,-3.292413,-0.971001],[-4.255134,2.231689,1.315858,7.400832,1.954557,-9.025751,-8.543537,3.856436,6.712311,-0.344461,-5.641505,8.494663,9.289678,6.310103,-4.312585],[3.921266,-0.451265,-6.811528,2.735496,2.889275,1.754360,5.040459,-1.379396,8.551101,9.902018,-1.542415,2.691622,-2.591991,-6.726480,3.661945],[-2.086121,-8.037554,4.258537,-9.232998,-9.793504,5.597791,7.287720,2.791997,-1.446874,4.793127,1.618469,4.893371,6.681713,1.153325,3.848300]],[[5.688472,2.441981,-2.344605,-2.833799,-2.999726,-9.978667,-4.415744,-2.286682,-4.418261,7.407829,-4.697238,6.069204,1.983967,-7.783748,4.667130],[2.388940,4.573633,-1.495540,6.886708,-5.166925,5.460477,-0.770212,-4.134786,-0.622502,2.155461,-3.506939,-9.192748,6.507886,8.090781,-6.316994],[-0.857395,4.464300,4.230978,4.415879,-0.740531,-1.109210,8.992485,0.071585,7.522893,-1.411323,7.512731,3.043340,-6.348301,-8.638014,-9.875543],[-6.959586,-6.620257,-4.062363,2.130764,6.952481,9.074944,-3.770864,-1.888116,-1.266172,9.058923,-8.225879,9.747303,-2.119310,-5.599559,5.080659],[0.782832,3.936830,8.296629,4.298481,-4.173002,-9.381646,-0.045099,-5.337698,8.389417,1.729934,5.153045,0.709465,2.025747,-6.989918,-2.826780],[-2.400539,-5.956915,-5.430119,3.767267,-8.883207,-9.398406,7.942229,5.604560,9.643522,-6.824293,6.371460,-7.342498,-7.004095,-8.976371,0.501280],[6.140695,7.474746,-2.017548,5.953068,9.175491,2.386671,4.334296,6.849217,-0.582400,2.918303,4.134744,-0.442297,9.592864,1.725918,4.961957],[8.961809,-0.042651,-4.168808,-8.623625,-8.721808,-4.238493,4.809760,-7.419254,-6.326471,8.784407,4.192032,1.261398,-0.272633,-7.935654,-1.299749]],[[-9.883831,-1.668366,-7.767902,6.527174,8.335551,9.258448,1.002620,7.332228,5.815924,-1.030457,1.625631,1.222959,4.258173,6.390945,5.433103],[-2.313926,7.443615,-2.597289,1.276953,-7.908518,9.538623,-1.049493,-3.014886,-8.406399,-3.249313,-9.459121,-1.374788,-1.423198,7.584071,8.425807],[8.957542,8.011087,3.465872,1.260262,9.274651,0.752919,4.837080,-3.687608,3.962439,8.814317,3.305979,4.094126,0.046465,-2.510416,6.998270],[9.516309,1.940537,-9.636303,-0.111056,3.352706,5.765318,-0.233973,8.574108,2.367052,9.373553,-2.989587,-2.295652,-1.869336,0.099117,3.956140],[-8.450514,7.746155,5.408488,-9.997480,0.609564,3.738177,-1.367221,8.830845,-0.168190,-7.040643,3.884292,1.551077,-3.245060,2.842276,-3.665847],[2.532427,5.380686,-4.524608,-4.607898,-7.325226,-7.724498,-0.380357,2.502702,-6.120696,-7.618710,3.274027,6.667094,-5.624927,-0.899302,3.594035],[-7.875222,-1.727920,-9.719184,-8.120330,1.167934,-1.988481,-2.394917,2.462403,0.833802,-6.058118,-5.372244,9.636329,-7.699366,-4.509803,-8.038284],[4.604414,-3.156204,-4.719355,-1.281687,0.338065,-3.905758,9.869211,-9.944895,-9.785054,2.472845,-3.174935,5.196562,8.909309,2.783873,-2.393553]],[[-0.913217,-6.028176,4.751841,0.306213,3.263364,-5.822468,-7.367958,-2.108907,-3.572534,-6.296960,1.332409,3.720194,8.626857,-3.381306,-8.675737],[-7.168315,-9.336866,8.297625,0.423573,9.395921,9.596403,-4.449686,-7.950598,8.556673,-5.336151,-5.702627,-5.120965,-1.123928,-6.824634,-1.246482],[3.286123,7.393605,4.851965,-3.836656,1.342362,1.294253,0.665064,5.122006,-3.114252,-5.730961,-1.460576,4.617436,-5.837826,-8.492140,-6.618464],[-8.111817,1.752692,-9.813901,-2.954097,-2.149600,-5.263426,8.339154,3.586639,5.155446,8.645221,-0.703066,-7.491852,-8.723425,0.052499,-1.189551],[7.985687,-0.168008,-7.628707,7.885363,1.413077,9.650725,4.287228,1.025587,1.274074,-8.879015,-0.128299,-3.956919,-8.577751,1.278559,-7.652509],[-9.541991,-5.337544,-1.036556,8.810347,-0.694953,2.844037,-4.616795,-6.584670,-4.816879,1.826210,-5.445048,3.096581,-9.734765,1.235091,-7.184990],[3.332673,9.143251,2.898356,5.554214,4.054554,1.941457,9.884754,2.773542,1.117929,2.795503,-8.209403,-4.240517,-4.834008,-6.468189,-3.688209],[8.947108,2.410115,-6.704390,2.257647,5.664356,8.675030,0.499560,-0.231071,-6.190932,-3.412940,-4.722604,9.067607,9.129134,-4.794141,5.383412]],[[-2.550992,-1.799206,7.958004,-7.186201,-9.124172,1.933996,-0.971590,-8.310035,8.636838,-5.884727,-2.373888,-5.791272,9.777582,-4.219573,6.168219],[-0.615669,-1.641568,1.210168,5.690378,-9.588906,9.440254,1.225258,3.106948,8.602599,-1.195247,-7.766740,-9.790502,-4.555805,-0.677578,3.878518],[-5.822262,2.608768,1.666132,-5.332112,-7.188447,-0.358628,-5.842621,5.062520,-8.393713,-8.170774,-2.796755,1.459534,-2.978599,-4.044855,-7.387352],[-0.726994,-7.522327,-3.788719,7.493862,-5.282865,7.333193,8.986634,0.131976,4.100397,7.681451,-2.345686,1.646213,1.114839,-2.435502,-0.187911],[1.644812,2.539466,9.075918,9.570483,0.180211,-5.482415,7.430399,-0.927607,2.543511,-2.223542,-6.853223,-3.402020,-5.314196,2.059241,-1.258449],[-4.590875,-3.830545,0.606707,0.840150,-7.256747,-7.700196,8.275143,8.791733,-9.807030,-3.297840,0.631746,-3.375534,-0.501247,9.073279,9.414109],[0.660626,-1.415936,9.950612,4.135956,-2.385472,8.160233,8.009964,-1.649809,5.178351,2.484667,7.803286,-9.289064,-3.701347,1.160943,-3.602165],[5.231677,-1.682439,6.262114,6.708021,-8.375817,9.421697,4.255315,-0.811254,6.388140,-4.449041,4.887423,3.554653,4.086175,-1.474260,-5.542517]],[[7.486061,2.158550,5.983491,-2.554203,7.857032,-3.922576,-3.354596,5.366604,-0.865026,-7.796339,5.448262,-9.653898,8.306752,3.250095,-6.957085],[-8.813100,3.605761,6.903447,4.563349,-2.542767,-4.029464,9.778892,-9.214977,-5.934654,8.066612,2.401432,-0.032405,6.701136,-7.063324,-6.838956],[-2.062675,-2.015239,-4.782433,-3.082289,6.291798,-5.713542,-7.566403,6.130656,8.348444,9.671976,-0.358506,5.271478,-9.706472,0.871674,2.804842],[-6.721450,-6.145735,-8.039211,-3.747135,-3.277137,6.889256,-4.343100,-0.259231,-3.251455,9.979408,-6.304838,-4.182594,-7.626819,3.656687,5.520109],[6.185000,-9.530382,8.916552,-0.654667,-2.069088,1.962916,-6.010407,4.889323,9.511226,-1.419993,1.192438,4.033174,-0.890629,-6.956855,1.277947],[1.087365,0.264661,-3.519365,-6.806883,9.208707,-0.438050,-3.321753,-9.464611,7.418521,5.309465,-8.443998,1.999948,-7.017893,6.105995,8.952133],[8.090906,-9.028022,-7.559373,8.076893,7.399712,0.550613,4.393112,-6.989695,6.981554,-3.283096,2.083569,6.497712,-7.410777,7.228967,1.753540],[-2.474872,2.118539,7.041425,9.823654,-0.226007,4.604833,-8.060882,6.883864,-8.910630,4.069425,1.922021,9.980618,5.790160,-5.170565,-9.244390]],[[1.227564,-3.411464,3.588292,-9.624217,-4.998960,6.650303,9.321596,3.853029,3.140695,1.959377,-5.877129,7.124625,-5.215362,4.956897,8.945923],[-0.228524,-2.940495,8.914297,-0.528125,-6.705134,-2.909307,3.574675,-5.508199,-0.370424,-1.849907,-5.800447,-0.639350,0.661240,-6.732300,-3.566392],[-2.008903,-3.024755,7.633541,-3.503262,1.545675,3.906240,-4.082864,2.014489,4.594111,-3.748727,-5.196168,-4.383934,3.330638,4.862033,-3.128970],[2.091902,-6.996930,7.099487,-1.423645,9.056043,-8.180571,7.450095,3.908301,4.935700,3.573723,8.482011,-5.364367,-2.072172,4.222129,3.066540],[8.499402,-9.424356,-4.558685,-3.637900,2.364186,0.634572,-7.529997,-9.367278,0.127342,-5.929367,-2.593760,-2.297542,3.523842,-8.218793,-5.456944],[-5.759047,-9.935130,4.622197,-4.359071,6.040491,-8.594887,4.248134,-0.800179,-0.684408,-4.187869,-7.840820,-2.530791,6.728380,5.362674,-2.405103],[-9.648821,-2.132371,4.158510,3.782152,9.218272,6.201774,9.025914,-3.726781,0.889168,-9.007883,8.694750,-8.050365,4.141504,9.868422,9.575641],[5.052686,-0.853849,-2.029990,3.267759,7.247698,4.090934,-6.050050,8.705883,-3.402098,-1.847745,-2.412394,6.821953,0.825600,6.370158,4.383465]],[[9.058120,-7.339400,-7.060132,0.830142,-2.911696,-1.693278,-0.744818,3.571086,7.341597,-2.780593,-8.348554,9.720265,6.728849,-7.804140,2.999944],[1.101758,-7.391684,-9.990727,-3.052496,0.945864,-7.221044,-2.263558,-8.196988,9.214370,0.180816,6.507780,-5.288005,7.914516,-2.402911,-0.764885],[-1.299950,-3.870414,8.775906,7.832462,-4.614953,1.881347,0.067470,9.137925,1.228492,2.058338,-3.451455,-8.062343,-0.318160,-6.567163,1.482327],[-1.158292,-8.254730,7.765671,-1.139762,-1.359262,4.121984,0.132040,2.133028,-4.102191,7.851057,-2.562562,5.801739,8.298725,-5.644022,-4.311736],[-5.160025,8.825326,5.840314,2.537972,-0.450368,-9.777747,0.103761,-5.961443,9.681949,0.097197,-6.262726,-0.962904,-0.056196,1.789302,-8.725965],[-0.728474,6.712486,1.010829,-5.706212,-1.573902,-0.308972,-5.129133,-2.800924,6.154986,-4.065948,4.185554,-5.301340,-9.699339,8.810947,7.735814],[3.500548,-8.762797,-4.653963,4.959630,-6.732106,3.549378,-3.333651,-0.644904,-8.791758,-9.552617,-8.990391,0.603037,-2.559880,1.597189,-4.857828],[4.602048,0.474558,-0.991865,1.552941,-0.905391,0.605115,9.669723,-9.673808,-8.381247,0.695766,9.180914,-6.251529,-5.087049,-3.122991,-9.634649]]], dtype = "float32")#candidate|8903|(12, 8, 15)|const|float32
uop_8904 = relay.cos(const_8903.astype('float32')) # shape=(12, 8, 15)
var_8948 = relay.var("var_8948", dtype = "float32", shape = (12, 8, 15))#candidate|8948|(12, 8, 15)|var|float32
bop_8949 = relay.maximum(const_8903.astype('int64'), relay.reshape(var_8948.astype('int64'), relay.shape_of(const_8903))) # shape=(12, 8, 15)
uop_8952 = relay.atan(uop_8904.astype('float32')) # shape=(12, 8, 15)
bop_8954 = relay.logical_and(uop_8952.astype('bool'), relay.reshape(uop_8904.astype('bool'), relay.shape_of(uop_8952))) # shape=(12, 8, 15)
func_7272_call = mod.get_global_var('func_7272')
func_7274_call = mutated_mod.get_global_var('func_7274')
call_8959 = relay.TupleGetItem(func_7272_call(), 0)
call_8960 = relay.TupleGetItem(func_7274_call(), 0)
output = relay.Tuple([bop_8949,bop_8954,call_8959,])
output2 = relay.Tuple([bop_8949,bop_8954,call_8960,])
func_8973 = relay.Function([var_8948,], output)
mod['func_8973'] = func_8973
mod = relay.transform.InferType()(mod)
mutated_mod['func_8973'] = func_8973
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8974 = relay.var("var_8974", dtype = "float32", shape = (12, 8, 15))#candidate|8974|(12, 8, 15)|var|float32
func_8973_call = mutated_mod.get_global_var('func_8973')
call_8975 = func_8973_call(var_8974)
output = call_8975
func_8976 = relay.Function([var_8974], output)
mutated_mod['func_8976'] = func_8976
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7530_call = mod.get_global_var('func_7530')
func_7531_call = mutated_mod.get_global_var('func_7531')
call_8995 = relay.TupleGetItem(func_7530_call(), 2)
call_8996 = relay.TupleGetItem(func_7531_call(), 2)
func_1627_call = mod.get_global_var('func_1627')
func_1630_call = mutated_mod.get_global_var('func_1630')
const_9006 = relay.const([[-9.952713,8.463522,-0.417073,-6.451757,-9.936913,6.138935,2.590672,-4.490835,-6.764719,-1.957329,5.628347,9.402778,-1.039518,3.026972,2.926103,7.724831,8.319989,-6.543672,1.319106,-7.766527,6.595119,-6.380781,-3.148482,7.838626,6.953576,6.637206,-0.338190,8.093869,-6.339772,4.172061,7.190459,4.661740,1.842388,-5.414968,-1.850081,-9.506061,-6.970388,9.788197,-2.757587,5.193926,-6.525924,-8.343215,-7.487516,3.926443,-2.984428,-0.534337,4.923507,-1.286915,5.925958,-7.195186,3.500805,5.284257,7.827459,-8.050668,-5.040942,-5.578176,7.599193,0.058651,-8.664545,-9.051570,8.496140,4.761062,-8.535171,3.289752,-1.454398,1.012639,3.912287,-9.524357,8.185480,-7.224044,-8.576610,1.083526,2.510026,3.182601,5.580110,-8.761783,-7.147345,-0.008865,1.716060,-7.169687,8.069423,-1.471999,2.201792,3.642847,8.854689,-6.820805,-6.095277,1.402754,-1.262537,-1.013927,-5.015383,-8.535394,-3.451873,1.167660,-6.176672,6.638947,-8.511538,-0.978935,-5.731207,-9.331873,2.587386,-7.559940,-6.142575,3.347172,-7.439558,8.849001,-2.285872,-8.769663,-8.706278,3.577052,7.018633,-0.854886,-8.192742,5.677681,-5.141058,-7.224367,-6.599989],[-7.009561,6.961048,4.305210,9.340922,-3.051883,-2.849034,-4.871904,2.643300,-4.097633,-3.987398,-1.379553,3.849804,-9.496936,6.668225,-2.518887,3.394995,2.070707,-6.060334,-2.933150,7.720820,-7.076409,2.985233,-6.817927,-1.306040,-0.810317,0.902562,9.526827,-6.396654,-7.964952,-3.252583,-9.039928,2.252265,-7.188214,-0.159431,0.045332,-3.980540,-6.553488,-1.451742,-4.749212,0.745213,-8.448953,1.675320,3.506750,5.851139,9.689882,-8.887511,9.853725,8.662717,-9.844629,-6.283008,1.807769,7.978524,9.739781,-1.420984,-7.307718,-3.420331,-3.447902,-5.310195,1.126967,-6.627403,6.818235,-1.461840,-6.632906,7.678910,-1.301232,7.114772,-9.214973,6.497105,-5.461781,8.267905,1.853292,9.010552,3.930648,2.524836,6.185194,8.766776,8.919268,8.714078,-9.183907,-1.075680,2.043856,-0.319639,-5.601755,1.029747,-4.157814,9.355613,-2.515561,2.997015,-0.856410,-7.744896,-1.442204,-1.289446,-3.189633,-4.798763,-8.315378,9.573881,-8.246720,1.103326,3.978376,9.427500,8.024826,0.383393,-4.667029,1.237043,2.798774,-3.255013,-6.542003,9.412725,9.218838,3.296090,-2.581101,9.397563,-4.095661,8.814790,3.468597,9.818069,4.825382],[-0.831269,-3.249363,-5.107554,6.363914,3.331118,-4.969841,-2.737385,-1.665671,7.715044,-5.703639,3.128254,-2.066252,-5.565600,-6.680103,-5.769125,-9.220854,6.888682,7.671844,9.895434,-4.637738,-4.065078,7.594706,-9.632389,-5.467482,4.843511,-5.251374,9.302466,3.941246,-3.184041,-8.042419,-4.601756,5.488875,2.217519,0.878745,-6.937820,8.652478,-8.441261,9.894565,8.091761,5.384708,0.774301,8.673720,-2.357633,-5.181462,-3.330779,8.945592,-4.176515,-2.506003,2.531365,-9.489990,-3.375958,-2.830726,-1.704147,7.679327,1.343491,-7.712739,1.969725,-4.648148,8.493346,-6.503890,9.696735,-5.906114,8.814958,8.804358,-3.059354,-6.684751,9.857176,-9.232958,-5.679779,8.136637,-3.274526,-8.156204,-1.344859,3.454332,-8.486049,8.603493,9.462828,0.640884,1.859339,-1.983893,-2.336387,-9.851693,9.143074,4.739561,-9.284691,-4.841206,1.301543,-1.889035,7.012759,5.925983,-0.422003,6.198070,-2.040086,-7.655513,7.999871,2.643306,2.656766,8.436022,-7.818630,-5.313834,-1.400874,4.094450,-3.755000,3.068759,5.849365,5.536587,8.776296,-3.033120,8.496363,4.968127,2.010065,-8.583169,-4.252738,0.223426,-9.516363,-9.526976,-7.878780],[-8.991195,4.127192,-4.037976,-1.816146,-9.936574,-3.109041,3.312962,6.073409,-7.017775,-3.176892,9.999037,3.926143,6.512107,9.286179,-4.373858,-7.872617,-7.418053,-2.975788,-7.515549,-8.244791,-2.525019,7.900283,-1.710889,6.855444,9.553830,8.816999,-6.377547,-1.371164,-3.177856,3.734072,5.632472,-5.178582,-0.371789,8.237516,4.203638,7.606183,-2.358801,-6.632917,-1.171017,-7.735303,9.689388,-2.918400,-5.629727,1.864501,-9.992153,4.831037,-3.086353,7.348340,-8.169423,-3.920637,-0.275576,3.703282,-0.108900,7.756296,3.894889,5.039724,8.723296,9.820014,-3.576119,4.931593,4.492417,-2.983714,-5.318253,-9.492359,-2.519431,-8.568028,8.074018,-5.289602,3.536537,-5.865722,3.614398,3.776026,9.907251,-2.923121,-8.442821,7.106430,-0.648369,5.809014,9.297001,5.651500,-5.948416,7.514103,5.297582,-2.970410,3.700131,-7.601244,-5.708429,-3.861784,-4.227711,0.594604,-8.946317,-4.393104,-6.133739,5.358287,-3.915207,-5.707866,-4.731790,-1.891650,1.881230,9.046025,9.182920,1.968657,0.081252,7.597929,-6.168694,-3.582440,1.647327,0.113491,7.473012,-3.703846,9.267856,-2.999340,-7.881858,8.042540,5.524914,-6.027132,-5.413298],[-1.016642,3.809946,8.196445,-1.048724,-2.244802,9.888668,-0.805737,-9.044253,-2.339400,7.393562,-9.565106,6.799408,8.433184,-2.332045,3.079247,3.573606,-8.076762,2.516405,-0.911704,-8.265200,-8.402148,-2.876444,-9.882240,8.887357,-4.122107,1.293696,-4.870875,-9.878280,-3.451000,3.048984,-3.875508,3.219103,-9.688251,-9.805603,9.249430,5.102353,-1.190760,-8.095709,9.492273,9.525903,-1.530785,-5.356528,0.542911,-3.960136,8.150093,3.975452,-3.295700,-5.137801,-1.189844,3.257840,6.877352,9.069316,-4.209172,-3.038394,4.633124,2.915892,6.796729,-8.661072,-0.614633,-7.298999,-7.845106,9.185995,-9.420307,1.430047,3.346260,-2.229559,-8.597580,-7.255953,6.547457,-7.015832,7.845440,-9.615910,3.370828,5.015940,1.177505,5.343194,-9.169821,-6.070541,-3.526454,4.156004,-0.641367,4.766878,5.187946,9.234431,-0.175679,8.376500,0.948623,-8.143792,-3.921745,5.769692,1.010025,2.328737,2.978534,6.115359,-0.123230,2.321497,-8.002161,5.758983,8.390839,7.332288,-4.696062,2.263400,-4.718136,-4.341266,1.999687,1.305476,-3.522644,-7.816741,-2.423251,4.426575,-5.326062,-7.412507,2.593858,-4.156129,-9.896984,4.375963,-4.551236],[0.584683,-2.018334,8.239917,1.680947,3.331402,-8.953616,8.192107,9.532640,8.686232,-4.248952,-6.624202,9.615709,-5.317086,-6.782290,-8.950053,-9.390101,-1.207642,4.203277,-2.967875,-2.789284,-7.257573,-9.394857,2.998273,-8.121865,5.055646,-5.410236,0.190010,4.277641,-5.217829,2.771478,-5.704397,-7.899460,-2.510477,3.073813,-2.869243,-3.168142,-6.738201,-4.207155,-9.036226,-8.833291,2.671191,-8.372300,-1.526334,-5.681759,4.998852,0.519404,3.736510,-1.984672,9.007072,0.871880,9.625462,-6.422904,-1.198908,-9.910706,0.808169,-4.713620,9.685900,8.569434,-4.707239,-1.335798,1.198771,-1.654052,3.178543,0.113468,-0.586004,-2.590753,-7.318807,4.371676,-0.584961,-5.697105,-2.809234,-4.924199,8.369941,6.885844,-3.236098,1.438781,8.739641,-3.353348,0.827467,0.098820,-4.884553,2.972859,-8.508306,4.198838,-9.803764,-5.547710,8.591605,2.445814,0.502121,-2.598915,-4.544056,9.518363,5.276351,9.659053,1.846376,-2.211893,-0.698663,4.430075,-6.255576,9.081496,-2.676392,9.223659,6.214023,-9.790366,6.984627,-7.738261,-8.623753,3.259081,4.890301,-2.715327,7.891716,2.649718,2.236562,-8.090123,2.022140,-6.405898,-7.813255],[0.681270,-5.643453,-2.970573,6.784803,-4.256095,-0.337813,4.751120,-6.975560,8.806090,9.828881,6.097963,8.238750,-3.234413,-5.363743,-2.856848,0.847283,-3.463469,9.457515,8.626537,1.630746,-9.306931,-1.119575,9.509617,-7.141949,-1.500543,6.026411,-8.328201,-9.805570,-7.152187,6.131233,6.211879,-9.421336,2.915117,-4.287300,-8.717676,-6.758827,3.088992,4.799453,9.833552,1.240795,3.799151,0.628747,1.257716,-9.268703,-6.035256,-8.287034,-7.959710,9.605352,-7.706397,8.984848,8.595543,-7.504348,-3.086145,-1.859907,0.680098,5.329130,-0.790704,-2.962099,-5.937818,5.011673,-1.300385,-0.669222,3.284836,-6.662055,2.092164,-2.008914,0.657532,-4.765139,-2.700852,0.403545,-1.899208,-9.557142,-5.676506,7.450322,-3.314127,1.044025,-2.521902,3.624912,-7.031536,-6.426132,3.509097,-9.096806,2.314846,-1.232620,4.345751,3.310808,3.434257,6.812742,-9.851188,-4.083260,6.585087,3.721725,-9.160897,5.752052,5.937686,-5.533178,4.789403,8.926144,3.582780,-7.414485,-8.681362,7.405974,-7.904692,5.028965,2.775411,7.303600,5.476984,-1.707253,9.193030,-1.779218,6.086786,-4.190734,-1.786472,8.241826,4.794946,-2.009286,2.674708],[9.154190,-6.277742,-6.499806,3.189783,8.823512,1.470988,-5.738812,4.077910,2.795476,9.731096,6.571804,8.745349,-8.148989,3.815709,-6.512879,-7.659326,-2.725347,-5.186487,-2.548706,-3.293046,9.618912,8.513104,-1.254447,-7.175694,-4.859688,4.290559,9.265873,-8.657045,-0.005568,3.136311,2.590479,-8.889092,-5.361501,-1.890450,-1.257893,-2.430600,-2.932103,9.759196,7.952618,-3.560841,-9.857975,5.032411,1.763390,8.703978,3.815050,-2.521115,-0.872677,-2.920073,-4.521453,0.029534,1.667184,-5.138822,6.342494,8.783059,0.699349,-9.085621,9.233118,-0.503798,-1.495284,-1.941708,-6.435308,-5.949488,-9.814328,0.931757,0.545096,5.950379,6.194164,0.662195,-8.020020,8.368851,-9.283333,0.523094,3.064688,-8.740482,1.974859,-9.887976,-0.447272,-2.218530,8.974505,4.492307,-8.060662,-1.170262,-9.539837,-4.529516,-0.005248,-0.190390,-2.784293,-8.026897,4.449912,9.596041,-0.691467,-2.663229,-4.219039,8.392841,9.230828,-1.413321,5.125982,5.473059,-8.784371,-2.686229,2.860702,-4.915252,-4.728898,6.701354,5.021883,-8.883442,-1.586128,-5.930238,4.189220,8.625398,-4.483522,-2.314230,-4.604777,7.741154,-1.641936,8.366798,5.572823],[7.292656,-7.262557,6.686504,5.301409,8.487576,0.219283,-2.346184,8.431620,5.996627,5.324188,-6.903452,3.700464,5.553871,8.032342,2.527067,-2.114814,0.662232,9.171421,-0.948678,-7.908544,3.704100,-8.370019,3.750100,4.308880,1.714181,-9.803613,-6.756010,-0.099291,9.174507,-8.976892,-3.044489,0.587302,0.675943,-6.967242,4.974933,-6.380996,-7.425398,-3.948077,-3.274758,-3.002131,1.476302,2.237931,-2.973314,0.415044,-3.461680,-8.809274,-8.460495,-9.795098,0.264197,8.308342,6.415460,4.373504,-8.300273,3.202670,8.027764,3.867594,0.453289,-1.337973,-5.477383,1.140520,0.479416,4.540581,-9.230687,6.312685,-8.451122,-7.413573,-2.126939,-2.120673,-0.399064,-9.004928,1.357845,-5.531956,-0.608166,4.925284,-4.403732,8.341427,-9.214895,0.329619,-9.162597,-3.346944,0.574219,6.894779,-1.822683,3.067688,9.360756,-6.128640,9.852511,2.833178,7.697420,-5.482650,-8.782470,6.849788,-4.070267,6.969092,-6.814228,3.731281,-4.670485,4.336145,-7.875802,6.216825,-6.744015,6.231782,-9.806741,-2.656301,9.169450,9.784002,-2.351897,-7.589866,8.044594,-1.626789,-8.558047,-8.359916,-7.425920,7.404781,-2.605135,-4.594380,3.364625],[-1.124816,4.090034,4.553939,4.215423,-2.653404,-7.419318,-9.290698,-8.727729,5.935110,-4.237608,2.789423,3.254196,-4.591666,-2.990237,7.412543,-1.406259,5.123463,-8.195236,-5.603678,-9.404855,0.242178,1.501205,-0.673005,-2.015090,-5.805876,7.244385,5.270276,1.323039,-2.777876,2.239880,1.848781,4.083239,1.076106,1.153100,4.097785,-5.564948,-5.933470,-6.478600,0.417649,-4.957837,-6.494969,4.944628,0.651627,8.409953,-4.000100,2.071940,-9.883188,3.828248,-3.436290,7.139898,-5.538131,-3.610097,3.506665,0.245703,-7.524401,5.501001,-2.559987,-6.933718,7.804742,6.233883,-3.352322,1.768131,-9.323372,-9.397121,8.628349,-5.685613,0.481336,8.168641,-7.266169,6.904690,-9.311733,7.756859,-4.987353,-4.966649,3.599152,4.110145,-7.810052,-5.444220,4.024380,0.421123,-0.912290,-4.604416,9.601044,-7.685340,7.113747,-1.354771,-6.269861,-6.723427,9.451615,-6.425906,-1.297270,2.364916,-0.912423,5.271318,-7.992216,2.247042,5.188673,4.724924,9.156380,-7.502516,4.348798,-2.900144,-9.751967,-1.282411,-3.280046,-4.075910,6.046978,6.670724,8.639972,2.695404,-9.191921,-7.257089,1.794168,-0.703279,9.623995,7.803549,2.590332],[9.315717,-5.273584,2.312942,-0.732854,9.416798,6.355602,-1.865698,-0.095441,9.097118,-0.617062,-5.236214,8.191126,-2.857982,2.899666,0.093724,2.758108,-3.261807,2.744004,-8.357089,5.421179,7.883811,4.180411,9.845287,5.547223,-5.743175,-0.582561,9.928371,7.582679,-4.511632,1.865215,8.138907,-4.857957,-6.589819,3.614175,-0.941994,6.216782,-0.036810,1.059911,-2.736471,-6.266182,-0.848768,8.629636,-6.914302,9.893896,6.672441,-5.955205,7.509239,-7.299088,-2.147034,4.719353,-1.745165,-8.563941,1.555166,-6.673633,4.965076,-5.570633,0.144274,6.302968,-2.472537,-9.873011,-8.946802,-2.799529,-8.924433,6.770142,-3.574009,7.372928,2.536810,7.984254,2.303027,-3.148528,-6.864267,-6.711711,-9.917876,1.543344,-3.582018,-4.965224,3.255042,-3.006917,2.749409,-4.216168,-5.433381,-1.266512,-6.690236,-1.093118,0.284662,-2.308864,1.999631,1.429400,-7.423886,-3.690891,7.381944,1.568143,0.391431,-1.119518,-8.449782,4.586712,-7.137150,-7.315609,1.578066,-6.479940,-2.313642,7.061199,8.264769,9.647738,5.142070,-3.596745,8.322942,6.251277,7.552374,3.575694,1.731883,3.014772,8.537670,-5.799915,-1.542640,8.156016,4.919248],[4.097853,-5.644819,-2.362651,-8.296367,-4.890133,3.697732,8.633078,0.032670,-0.504842,4.328434,-0.278455,9.257881,7.363716,2.054259,-9.868861,3.961883,1.587974,7.840490,-0.332306,-3.144341,3.744492,-7.416295,-6.427471,6.365677,-5.193136,-8.291462,2.271989,8.122359,-5.517302,-1.119524,2.522838,-0.477035,8.405503,7.345505,5.413602,-8.123261,8.847201,5.222807,-8.559912,-6.718437,1.988040,7.973763,-8.120044,-3.343218,5.988210,-5.728479,-0.700671,8.746696,-1.297695,3.544048,-3.903469,-2.115575,7.329270,9.043311,-7.164104,-5.090535,8.986199,3.144738,1.430978,-7.239551,-0.166012,8.350743,0.231205,-3.024898,7.584937,1.934028,5.545174,9.859262,-9.544376,-6.968154,-4.104813,-2.462967,-1.533390,-7.969957,1.926957,-8.060556,7.636936,5.641597,-7.176644,-3.273560,2.168958,7.814051,6.578228,8.234049,7.585241,-1.811118,9.112812,4.802297,-4.809350,8.768577,-3.208267,5.810826,3.428597,-0.328839,-5.863225,-0.061132,5.317869,-2.799588,-9.001799,-3.039018,7.749830,-9.849035,6.618369,-1.052889,1.954152,-0.068755,0.409672,3.255210,-2.675943,-8.771188,-2.969664,-4.720682,-6.461405,-6.063410,9.239100,0.938689,8.018043],[6.373056,7.733197,7.856578,4.710880,0.073711,5.440257,7.034232,-1.395042,3.610297,-3.281503,-6.794751,-2.376471,-0.559224,6.009814,4.796530,2.271827,-7.753700,-2.663656,6.648441,0.997173,8.449025,3.235759,-0.096662,-5.723238,-2.292668,7.305764,-7.276711,8.935834,6.209594,-3.269733,9.710060,2.636740,-3.440341,7.780688,8.880885,-8.052531,-3.273579,-6.880362,-2.262885,-2.954470,7.081200,2.006107,5.923204,-4.961795,-1.099606,8.094950,-7.594225,3.474294,5.367044,-6.580831,7.001526,2.936376,-5.991638,-2.798804,-6.740250,2.092967,-6.791856,5.040917,0.946009,0.092555,-6.949916,-2.810728,9.317152,-7.166287,-7.933904,-6.090586,5.968622,1.025136,7.045875,-3.296979,-8.784612,9.365065,5.257662,3.668983,1.652435,-1.423027,4.397424,-1.773638,-4.093320,6.006617,-3.986095,-7.264810,0.003778,4.607114,0.179649,8.527467,-6.703032,-6.917532,8.838902,-0.175521,-6.179965,7.879039,5.552941,5.495592,-5.177834,2.016043,-0.875622,-7.864789,7.287757,-9.005769,-3.829087,2.837516,-9.938612,-5.812656,0.215919,-1.828016,4.992105,8.882058,-6.032850,-2.337268,-2.513596,5.306146,6.340411,-4.056000,6.073412,4.203378,-4.184555],[-6.004542,-7.719472,6.298369,-8.248960,-0.134591,8.684153,-9.433055,-0.577813,-0.188392,-1.046190,4.277874,9.852329,9.578390,-8.737018,-9.793375,9.288257,4.864979,4.131914,1.468719,0.696306,3.208391,2.358678,-4.045068,-9.813732,-0.406708,-5.733844,-5.575827,-0.579503,-3.908021,-7.188843,9.123252,-7.937438,-8.918402,4.578746,7.337842,4.359947,2.412760,-4.721747,-8.746274,-2.377217,-2.962086,-7.285625,7.994604,-9.400537,5.231204,-2.464195,-5.131679,8.194937,5.508839,-6.324311,7.078656,8.412935,-6.372623,-0.591190,5.644424,-9.452202,8.418320,-6.146475,0.722154,5.714720,-7.395953,5.842712,-1.379641,5.663483,-4.323322,-4.417845,3.298864,-9.797371,9.457131,-7.568931,-6.371471,-9.393073,0.309228,-3.799991,0.099764,8.658569,7.616334,-2.578903,3.324600,6.425563,7.783507,-6.461567,-4.841008,3.630836,8.589695,-9.854152,-6.462771,-1.137523,3.477975,-5.870317,-4.517164,-0.390825,-3.945496,3.857809,-1.871102,6.782836,-6.843154,-8.823329,4.844161,-7.792482,8.899413,-2.660508,-4.265195,1.456647,2.234128,-5.842356,3.710431,7.730606,-5.306623,-9.733267,-8.610831,-8.346230,0.680082,1.831120,-2.754913,0.772686,-9.704699],[1.336803,-8.611520,-3.929621,-9.883992,7.570746,-6.248270,-1.089216,2.263627,0.865368,-9.355843,-2.832894,6.343272,-4.331716,-4.668440,9.522127,0.567478,1.155770,-0.749018,5.608407,-3.851161,-0.667528,-0.565966,6.773542,7.340050,4.198550,7.989935,6.922129,4.207831,-3.444628,-7.674465,-8.852685,2.944677,7.971199,1.245121,-5.421403,-1.515313,-2.090361,0.943664,-7.346037,3.348910,3.795670,-5.181812,5.199199,-3.660251,0.467207,5.283800,6.760836,4.083148,-6.504299,1.488098,-3.600787,-3.915403,-6.251959,1.021369,-1.786383,-7.129161,7.581837,5.168892,-3.716694,-7.482190,-6.530877,3.428669,-8.372623,-4.650799,-2.622899,-0.902580,6.090809,7.303998,-5.588420,4.441404,1.736869,-7.434965,-7.135768,1.791337,-1.319500,-6.888816,-8.527364,-4.073851,-5.445258,4.888925,-9.751913,8.625030,-8.557597,-9.717607,5.780237,-9.956974,5.650782,6.851796,-7.514961,7.127956,4.428941,1.563075,9.224139,-3.734396,-8.641497,-6.375610,9.045167,8.953878,9.245302,3.155219,4.945392,5.535414,-4.287735,-9.769443,-2.050247,1.580617,0.292774,7.684533,-5.415927,-5.732269,1.086744,-3.563608,-1.957407,3.926104,5.535753,3.115844,-0.613428]], dtype = "float64")#candidate|9006|(15, 117)|const|float64
call_9005 = func_1627_call(relay.reshape(const_9006.astype('float64'), [9, 15, 13]))
call_9007 = func_1627_call(relay.reshape(const_9006.astype('float64'), [9, 15, 13]))
output = relay.Tuple([call_8995,call_9005,const_9006,])
output2 = relay.Tuple([call_8996,call_9007,const_9006,])
func_9017 = relay.Function([], output)
mod['func_9017'] = func_9017
mod = relay.transform.InferType()(mod)
output = func_9017()
func_9018 = relay.Function([], output)
mutated_mod['func_9018'] = func_9018
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9124 = relay.var("var_9124", dtype = "float32", shape = (2, 9, 2))#candidate|9124|(2, 9, 2)|var|float32
uop_9125 = relay.atan(var_9124.astype('float32')) # shape=(2, 9, 2)
output = uop_9125
output2 = uop_9125
func_9128 = relay.Function([var_9124,], output)
mod['func_9128'] = func_9128
mod = relay.transform.InferType()(mod)
var_9129 = relay.var("var_9129", dtype = "float32", shape = (2, 9, 2))#candidate|9129|(2, 9, 2)|var|float32
output = func_9128(var_9129)
func_9130 = relay.Function([var_9129], output)
mutated_mod['func_9130'] = func_9130
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6242_call = mod.get_global_var('func_6242')
func_6244_call = mutated_mod.get_global_var('func_6244')
call_9146 = relay.TupleGetItem(func_6242_call(), 0)
call_9147 = relay.TupleGetItem(func_6244_call(), 0)
func_5190_call = mod.get_global_var('func_5190')
func_5195_call = mutated_mod.get_global_var('func_5195')
var_9155 = relay.var("var_9155", dtype = "float32", shape = ())#candidate|9155|()|var|float32
const_9156 = relay.const([-5,3,-1,-8,3,-10,10,8,-9,-5,-8,2,1,4,-8,6,-1,-3,5,1,-7,-2,-8,-2,-5,9,3,-5,-7,-6,10,-10,3,5,5,6,7,-8,10,2,-8,-9,4,-7,5,-6,5,7,-9,6,6,-5,-7,8,2,3,2,-5,7,5,-5,-6,9,8,6], dtype = "int64")#candidate|9156|(65,)|const|int64
var_9157 = relay.var("var_9157", dtype = "int64", shape = (975,))#candidate|9157|(975,)|var|int64
call_9154 = relay.TupleGetItem(func_5190_call(relay.reshape(var_9155.astype('float32'), []), relay.reshape(const_9156.astype('int64'), [65, 1]), relay.reshape(var_9157.astype('int64'), [975,]), ), 2)
call_9158 = relay.TupleGetItem(func_5195_call(relay.reshape(var_9155.astype('float32'), []), relay.reshape(const_9156.astype('int64'), [65, 1]), relay.reshape(var_9157.astype('int64'), [975,]), ), 2)
func_2961_call = mod.get_global_var('func_2961')
func_2965_call = mutated_mod.get_global_var('func_2965')
var_9160 = relay.var("var_9160", dtype = "uint32", shape = (2400,))#candidate|9160|(2400,)|var|uint32
call_9159 = relay.TupleGetItem(func_2961_call(relay.reshape(var_9155.astype('int8'), []), relay.reshape(var_9160.astype('uint32'), [2400,]), ), 2)
call_9161 = relay.TupleGetItem(func_2965_call(relay.reshape(var_9155.astype('int8'), []), relay.reshape(var_9160.astype('uint32'), [2400,]), ), 2)
func_6854_call = mod.get_global_var('func_6854')
func_6856_call = mutated_mod.get_global_var('func_6856')
call_9191 = relay.TupleGetItem(func_6854_call(relay.reshape(call_9146.astype('float64'), [10, 5, 14])), 0)
call_9192 = relay.TupleGetItem(func_6856_call(relay.reshape(call_9146.astype('float64'), [10, 5, 14])), 0)
bop_9193 = relay.left_shift(call_9191.astype('uint16'), relay.reshape(call_9146.astype('uint16'), relay.shape_of(call_9191))) # shape=(10, 5, 14)
bop_9196 = relay.left_shift(call_9192.astype('uint16'), relay.reshape(call_9147.astype('uint16'), relay.shape_of(call_9192))) # shape=(10, 5, 14)
func_8262_call = mod.get_global_var('func_8262')
func_8264_call = mutated_mod.get_global_var('func_8264')
const_9200 = relay.const([[-6.359378],[4.054779],[4.569434],[-2.195159],[-2.072320],[-5.896543],[-8.998670],[1.127024],[-8.631689],[-6.901072],[-2.418215],[4.591539],[-1.315074],[-2.221744],[-7.776829],[-1.378096],[1.022889],[-0.634049],[-0.901025],[3.983508],[3.080537],[-6.059797],[-8.623453],[9.428565],[-6.177791],[9.890378],[-0.104553],[9.543207],[6.510924],[1.778206],[7.551581],[-9.962762],[5.801427],[0.895557],[-5.783831],[-1.076255],[-7.017515],[7.818738],[-3.327879],[-7.353797],[-0.724594],[6.952837],[-6.462858],[1.388059],[3.378428],[3.478306],[-8.979743],[5.764762],[0.102379],[2.725390],[2.613338],[2.699869],[7.022870],[-4.471779],[0.346167],[-6.332730],[-9.749761],[-9.000934],[-5.360590],[2.772197],[-5.774793],[-4.532803],[-6.611522],[-4.279772],[-5.420187],[4.753769],[6.331068],[-7.819509],[6.593604],[2.279668]], dtype = "float64")#candidate|9200|(70, 1)|const|float64
call_9199 = relay.TupleGetItem(func_8262_call(relay.reshape(const_9200.astype('float64'), [70,])), 1)
call_9201 = relay.TupleGetItem(func_8264_call(relay.reshape(const_9200.astype('float64'), [70,])), 1)
func_8846_call = mod.get_global_var('func_8846')
func_8847_call = mutated_mod.get_global_var('func_8847')
call_9209 = relay.TupleGetItem(func_8846_call(), 0)
call_9210 = relay.TupleGetItem(func_8847_call(), 0)
output = relay.Tuple([call_9154,var_9155,const_9156,var_9157,call_9159,var_9160,bop_9193,call_9199,const_9200,call_9209,])
output2 = relay.Tuple([call_9158,var_9155,const_9156,var_9157,call_9161,var_9160,bop_9196,call_9201,const_9200,call_9210,])
func_9211 = relay.Function([var_9155,var_9157,var_9160,], output)
mod['func_9211'] = func_9211
mod = relay.transform.InferType()(mod)
mutated_mod['func_9211'] = func_9211
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9211_call = mutated_mod.get_global_var('func_9211')
var_9213 = relay.var("var_9213", dtype = "float32", shape = ())#candidate|9213|()|var|float32
var_9214 = relay.var("var_9214", dtype = "int64", shape = (975,))#candidate|9214|(975,)|var|int64
var_9215 = relay.var("var_9215", dtype = "uint32", shape = (2400,))#candidate|9215|(2400,)|var|uint32
call_9212 = func_9211_call(var_9213,var_9214,var_9215,)
output = call_9212
func_9216 = relay.Function([var_9213,var_9214,var_9215,], output)
mutated_mod['func_9216'] = func_9216
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5599_call = mod.get_global_var('func_5599')
func_5600_call = mutated_mod.get_global_var('func_5600')
call_9257 = func_5599_call()
call_9258 = func_5599_call()
func_8617_call = mod.get_global_var('func_8617')
func_8621_call = mutated_mod.get_global_var('func_8621')
const_9269 = relay.const(-10, dtype = "uint8")#candidate|9269|()|const|uint8
const_9270 = relay.const([[4,1,6,10,-7,-3,1,-8,9,-4,8,7,3,-7,-6,7,-1,-1,-2,-9,5,-1,-9,5,-4,-10,-8,10,-3,-6,6,-6,-2,3,1,2,-5,4,6,1,-10,-2,-10,-10],[9,-1,-9,-1,-7,4,8,3,1,-9,-9,-6,-3,-5,-3,7,1,7,6,-1,-6,-10,3,10,-3,10,1,-10,6,-9,-2,-1,8,-3,9,9,8,-2,5,6,2,9,-4,8],[-6,-1,7,3,1,10,-9,7,-8,-10,-10,-10,-2,6,10,8,-4,6,2,-5,-5,-4,5,4,8,-8,-2,-3,-9,-2,6,5,-10,9,10,6,-2,2,2,3,-1,10,-9,-8]], dtype = "uint8")#candidate|9270|(3, 44)|const|uint8
const_9271 = relay.const([1.950422,-9.103305,-8.020403,1.266530,2.874392,8.655215,1.204240,3.099907,-5.897838,-2.112384,-1.282556,6.915566,-5.711118,3.001670,-2.558567,7.589803,4.021858,0.238597], dtype = "float32")#candidate|9271|(18,)|const|float32
call_9268 = relay.TupleGetItem(func_8617_call(relay.reshape(const_9269.astype('uint8'), []), relay.reshape(const_9270.astype('uint8'), [132,]), relay.reshape(const_9271.astype('float32'), [18, 1]), ), 2)
call_9272 = relay.TupleGetItem(func_8621_call(relay.reshape(const_9269.astype('uint8'), []), relay.reshape(const_9270.astype('uint8'), [132,]), relay.reshape(const_9271.astype('float32'), [18, 1]), ), 2)
output = relay.Tuple([call_9257,call_9268,const_9269,const_9270,const_9271,])
output2 = relay.Tuple([call_9258,call_9272,const_9269,const_9270,const_9271,])
func_9273 = relay.Function([], output)
mod['func_9273'] = func_9273
mod = relay.transform.InferType()(mod)
mutated_mod['func_9273'] = func_9273
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9273_call = mutated_mod.get_global_var('func_9273')
call_9274 = func_9273_call()
output = call_9274
func_9275 = relay.Function([], output)
mutated_mod['func_9275'] = func_9275
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8206_call = mod.get_global_var('func_8206')
func_8208_call = mutated_mod.get_global_var('func_8208')
call_9276 = relay.TupleGetItem(func_8206_call(), 0)
call_9277 = relay.TupleGetItem(func_8208_call(), 0)
output = relay.Tuple([call_9276,])
output2 = relay.Tuple([call_9277,])
func_9278 = relay.Function([], output)
mod['func_9278'] = func_9278
mod = relay.transform.InferType()(mod)
mutated_mod['func_9278'] = func_9278
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9278_call = mutated_mod.get_global_var('func_9278')
call_9279 = func_9278_call()
output = call_9279
func_9280 = relay.Function([], output)
mutated_mod['func_9280'] = func_9280
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9305 = relay.const([[[3.939018,-7.673810,5.974246,5.687566,-0.793996,-4.352723,-2.970758,-9.944421,-7.937391,-8.038336,-6.992365,4.468237]],[[9.825658,6.407939,-3.996877,-1.493111,-8.352503,9.864476,3.016748,7.758581,9.220845,-6.692329,8.859955,0.496726]],[[3.430466,-1.305165,-5.939548,-7.024224,-6.678465,4.090221,-9.923256,0.627021,-9.091041,-8.365314,5.396003,2.908736]],[[7.136618,-3.006245,-0.261252,8.159345,1.698559,3.224361,2.915460,-4.688677,9.638287,-2.632558,8.458146,-6.940072]]], dtype = "float32")#candidate|9305|(4, 1, 12)|const|float32
uop_9306 = relay.sin(const_9305.astype('float32')) # shape=(4, 1, 12)
bop_9309 = relay.bitwise_and(const_9305.astype('int16'), relay.reshape(uop_9306.astype('int16'), relay.shape_of(const_9305))) # shape=(4, 1, 12)
output = bop_9309
output2 = bop_9309
func_9315 = relay.Function([], output)
mod['func_9315'] = func_9315
mod = relay.transform.InferType()(mod)
mutated_mod['func_9315'] = func_9315
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9315_call = mutated_mod.get_global_var('func_9315')
call_9316 = func_9315_call()
output = call_9316
func_9317 = relay.Function([], output)
mutated_mod['func_9317'] = func_9317
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7272_call = mod.get_global_var('func_7272')
func_7274_call = mutated_mod.get_global_var('func_7274')
call_9323 = relay.TupleGetItem(func_7272_call(), 0)
call_9324 = relay.TupleGetItem(func_7274_call(), 0)
output = relay.Tuple([call_9323,])
output2 = relay.Tuple([call_9324,])
func_9347 = relay.Function([], output)
mod['func_9347'] = func_9347
mod = relay.transform.InferType()(mod)
output = func_9347()
func_9348 = relay.Function([], output)
mutated_mod['func_9348'] = func_9348
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5887_call = mod.get_global_var('func_5887')
func_5888_call = mutated_mod.get_global_var('func_5888')
call_9473 = func_5887_call()
call_9474 = func_5887_call()
const_9477 = relay.const([[[-8.171173,8.984843,-8.164649,-8.905751,-2.042871,4.663016,1.289431,8.773164,-7.531044,7.214786,1.999119,-3.492053,-5.801601,1.222901],[-0.559738,8.518225,4.726383,-4.319564,3.207087,-4.316657,4.219011,0.522947,6.877094,-0.803180,8.161974,-7.413557,-9.881437,7.605719],[1.860076,4.792437,-1.346494,-5.956517,5.954895,5.856604,-2.879785,-4.092516,3.696567,-7.489918,-3.710558,-3.819104,-0.609635,-7.803162],[-5.216384,0.019371,-3.930498,5.172873,9.477811,-0.448852,-4.594638,-3.741607,4.660111,-9.283396,-3.768187,-6.341246,4.080159,5.738595],[3.435380,0.207475,4.989785,-8.140187,8.643983,-7.144924,8.119312,4.948336,6.348406,-6.754521,-8.557567,9.101003,-2.468342,3.277497]],[[4.029552,0.529288,-4.375710,-7.858842,-2.204013,7.980778,-2.663159,-1.228175,1.232966,6.430124,2.754041,3.318814,-4.292002,2.573541],[-6.909459,-0.255745,9.566833,1.885351,-6.769424,6.459403,-9.559212,-1.845931,0.804193,-3.974422,-9.196448,9.171393,-8.584618,0.276371],[9.135812,5.520984,4.951831,1.159584,6.455772,-7.105638,-5.233687,-6.232195,1.775720,8.524540,-8.493410,0.943928,9.946737,-5.248999],[1.333276,-0.435626,-9.785921,1.791957,-7.570925,-8.001389,7.221386,5.330661,4.929545,-6.920862,1.735014,5.601981,6.961344,-5.446920],[5.623666,-4.215306,1.409732,8.653452,-9.182837,8.551704,-4.398152,7.179559,7.186844,2.220575,-4.338802,6.382905,-6.785500,6.290982]],[[5.956852,-2.740058,4.500555,3.691713,-0.033875,-0.400561,5.475713,0.747585,-1.332672,6.330343,6.212580,-3.992649,-2.028451,9.394209],[-0.201646,6.642370,2.720430,-7.044461,-6.782176,8.774239,-1.924623,-0.759889,8.745512,6.367708,-4.174590,8.634570,-1.769596,9.039866],[6.700874,1.355619,-0.625778,0.653988,-2.761404,-3.481671,-6.182492,5.494280,2.605498,-8.999406,3.005074,-8.631223,2.793275,-7.719485],[3.073418,-3.915053,-7.297821,-2.208945,-9.486895,-5.091230,5.140850,-5.940861,-9.509681,2.679581,9.199477,4.385772,8.091325,-5.401156],[6.584896,-9.122040,-0.231157,-7.500307,-9.768014,7.267288,-3.716790,-8.865021,-5.983679,5.141079,-7.400781,7.344045,3.177257,3.025201]],[[-2.700662,5.224992,-0.450640,2.570588,-4.138790,4.800799,-9.435829,-3.825939,3.128852,8.514052,9.840606,-0.856749,8.052868,5.731250],[-5.723935,0.760974,-3.069002,5.049775,0.483611,7.313535,-7.548653,-8.257841,-1.283960,5.913911,5.864967,3.245441,-2.444364,0.754926],[0.028032,-9.245479,6.428455,4.533509,-2.526369,-7.260785,6.503224,7.705949,-6.107142,-6.079816,-9.651564,-8.347888,-8.944467,-0.711692],[-5.104885,-4.718737,-7.474306,2.072832,0.321685,0.381314,0.205973,1.447659,-1.453982,-4.216438,-9.417906,8.644791,5.924053,6.030893],[9.003741,-5.666138,1.483750,-7.003167,9.070236,1.000907,-8.691828,-9.355208,-7.484659,-0.830880,-7.340352,4.151789,8.924496,-3.943388]],[[5.367334,6.883649,3.886881,-0.766841,-3.888022,7.242201,-9.781692,-9.253535,2.640647,3.393897,-2.018859,-2.820206,-9.171204,-9.136520],[-4.041652,-7.819980,-3.702194,3.518327,9.920054,-8.369086,-8.535960,7.875573,-2.289074,5.454754,-2.039095,7.195558,-5.619464,-5.465355],[6.385317,-9.171927,2.233931,5.388573,-8.630003,6.161810,-2.740154,-7.221284,2.623101,-0.811534,3.290583,-6.821424,-4.076695,6.014862],[2.579630,9.169904,-5.055760,6.257859,5.347178,8.813635,5.777789,2.009157,-4.110786,-2.764312,-0.982971,7.251522,-1.354678,7.621342],[7.708085,4.344407,-5.687341,0.196385,-7.337973,-3.347606,-8.022466,-8.664086,3.734793,0.081243,6.166636,0.331430,-7.181970,1.680586]],[[-7.442735,5.132265,2.014717,0.356418,-7.766126,-1.831953,1.736416,-8.532497,-3.253122,7.866017,-4.795629,5.006014,-8.058904,6.229663],[3.208997,3.632485,-6.700002,4.112031,1.119781,1.831014,-4.197992,-6.409895,7.219296,2.161643,1.826942,7.962991,6.592195,1.303480],[6.638953,1.630904,-5.220318,6.180210,9.398131,-5.569339,6.723606,-3.507244,-2.319633,9.289082,0.337907,7.125340,8.249595,1.190923],[-8.980439,-6.393448,7.146946,-4.268161,-0.212357,-8.652560,2.640168,-4.166304,6.537660,-4.556224,7.418625,2.742428,-5.176041,-0.577396],[2.475891,-6.520395,-3.716366,8.422614,-0.706433,5.345117,1.987892,7.655326,9.596065,6.713449,-5.572858,-0.225270,1.938566,6.225435]],[[-1.627901,0.836106,9.229545,9.537204,-9.063611,2.960642,8.955503,3.302128,3.959054,2.746900,-5.253653,4.655368,-1.560822,1.901967],[9.249737,4.957203,-4.367717,9.021258,-8.977264,0.327746,7.891023,-0.210242,-2.403159,-5.132802,-3.598877,-1.483659,-9.250521,4.549788],[0.316272,7.173044,0.110760,-1.289679,2.410329,6.246928,8.562338,4.241492,-2.890331,2.795182,2.850591,-3.592971,2.379891,2.140411],[-0.797871,-3.053548,9.870178,-1.737043,-0.851804,-4.755040,-8.796145,9.849562,-5.595044,-5.492781,-3.303280,7.223876,9.762647,4.873892],[-6.834995,0.330621,-3.466916,-5.453747,9.846160,-8.785755,-9.254555,4.576219,8.735311,-1.597183,7.553395,-7.550334,-0.466350,-1.659475]],[[7.161034,-5.332362,-2.951039,-1.134790,3.937220,-1.854118,9.896544,-7.181623,9.290263,-1.565913,-9.358061,-4.915931,4.905615,-5.920148],[8.942728,-0.800948,-2.573166,-6.772492,-5.821090,0.170439,-2.942997,-9.752492,0.269481,2.893225,-7.550580,0.453862,-2.935672,2.671197],[-1.447887,3.372497,-1.189575,-3.587444,-9.133429,9.887858,5.397287,-2.739760,-9.557680,9.183985,1.185862,-9.672192,-0.172132,-4.023483],[3.067621,-0.900566,0.045149,4.687082,9.061398,0.461130,1.875117,-2.774855,0.529936,-3.526076,5.139870,7.707899,-6.004466,8.484680],[2.712519,0.606767,8.331120,-8.312355,7.022050,-5.350071,3.546367,-2.816605,-9.579589,3.639798,8.963198,5.668630,7.684986,3.557367]],[[-7.113417,-0.231555,-1.602654,-1.337742,-9.827458,8.518691,3.720545,-9.297462,8.276716,0.657062,-8.952634,5.999377,-7.544647,-7.078756],[-3.372201,7.214736,-4.168710,-8.092161,3.308646,-5.847220,-0.680929,7.039696,7.291815,-0.332113,-3.475369,-2.750352,8.942238,-8.662550],[-3.289957,5.143674,-4.735939,6.062820,4.414659,9.364983,9.284029,-6.093637,3.729281,2.255653,7.537078,0.723967,4.039651,-2.018561],[-7.968321,-9.343572,-2.076935,5.808786,-4.314732,7.880866,-7.730178,-6.594862,1.354286,4.990895,-7.626640,4.766191,4.950226,5.011526],[5.613466,9.175509,-1.730609,-1.693393,8.789237,1.698829,1.045632,4.071031,3.055399,7.415688,-2.543592,-3.615079,8.409711,1.900417]],[[-4.481606,5.526203,-1.053740,3.283839,-8.629223,7.689278,3.025941,1.686709,-2.392959,5.608039,-5.636658,-3.789645,5.667453,9.804159],[-6.350868,2.935043,1.316075,-1.607413,0.719079,-0.455230,-3.188684,-3.856017,-2.229331,-3.949620,-9.286642,-1.369492,-1.410345,-5.318511],[9.359366,-1.835862,-4.298659,1.146106,-8.638793,1.624276,0.513953,2.439153,-5.110054,-2.862303,0.179654,5.479744,-7.892527,-1.387443],[-6.166948,-8.103750,-2.331061,7.641331,8.518467,-4.403911,0.929210,6.371635,8.729006,-5.266324,-7.227147,-0.798673,0.874521,-0.159261],[6.307403,-1.143579,5.979245,-9.721325,7.572811,-0.512118,-9.901770,-1.830405,-9.766460,-8.450039,-3.008469,4.364038,8.914208,-4.515162]]], dtype = "float64")#candidate|9477|(10, 5, 14)|const|float64
bop_9478 = relay.floor_divide(call_9473.astype('float64'), relay.reshape(const_9477.astype('float64'), relay.shape_of(call_9473))) # shape=(10, 5, 14)
bop_9481 = relay.floor_divide(call_9474.astype('float64'), relay.reshape(const_9477.astype('float64'), relay.shape_of(call_9474))) # shape=(10, 5, 14)
bop_9491 = relay.less(bop_9478.astype('bool'), relay.reshape(call_9473.astype('bool'), relay.shape_of(bop_9478))) # shape=(10, 5, 14)
bop_9494 = relay.less(bop_9481.astype('bool'), relay.reshape(call_9474.astype('bool'), relay.shape_of(bop_9481))) # shape=(10, 5, 14)
func_7123_call = mod.get_global_var('func_7123')
func_7128_call = mutated_mod.get_global_var('func_7128')
const_9509 = relay.const([-6,-10,10,4,-10,-9,8,4,2,-6,5,5,-9,-3,1,-2,6,4,8,7,-2,10,10,4,5,2,9,1,6,6,-9,-4,10,10,8,7,-4,10,8,-9,3,-2,9,-10,-1,-4,-7,-5,8,5,5,-4,7,-6,-1,8,6,-8,-7,-10,7,9,4,-2,-1,6,1,6,7,4,7,-2,4,-8,8,-9,3,2,-2,-10,3,1,-10,-1,1,5,-7,-2,6,-2,-9,-3,9,-2,10,-5,9,-5,7,8,-1,-7,-9,-1,-9,3,-6,-2,2,5,7,-2,-10,-7,-7,6,-7,8,1,1,2,10,10,2,-10,-3,1,-5,-4,-9,-9,-9,-7,10,-8,-10,9,-8,-3,-1,9,2,-9,10,-1,-4,-5,5,-4,10,10,-2,-9,7,3,9,-2,-2,7,-4,-3,9,5,-10,2,9,-9,2,3,3,7,-8,10,10,3,8,-4,6,2,8,-7,8,10,-5,9,-7,-8,5,-4,-7,-1,-5,-1,-4,-6,-9,-1,-10,-4,2,-2,10,-5,-10,-2,-7,4,-7,10,10,-6,-10,3,-6,4,-10,8,-6,7,-3,7,-1,2,5,-1,-2,3,2,10,3,-7,-10,-5,9,4,-10,-5,-1,-10,1,-1,-8,2,10,-7,6,10,-10,-4,-8,2,9,-10,6,-9,1,9,6,-9,-5,-3,-2,-9,-5,-3,1,-10,5,-5,10,-8,-5,10,10,2,-6,8,-6,-2,2,-4,3,5,6,6,5,-10,-1,-4,10,6,-8,5,3,-7,-3,10,-6,1,-5,1,3,10,2,4,-1,7,7,5,1,7,-2,-9,1,4,1,8,9,-9,-4,-2,-5,6,2,2,-1,7,-5,6,8,-2,5,10,-7,-4,2,-6,4,-9,-3,-2,-1,10,7,9,-5,-2,-10,4,-3,-8,4,-4,-8,-7,-7,5,-1,-5,10,2,7,-6,10,4,-8,-10,8,1,10,-7,10,-6,-7,-7,-5,4,7,-10,-2,10,-9,-2,-6,-5,2,3,5,3,10,-1,-1,8,-5,-4,-3,6,-5,-10,-3,7,-6,9,10,3,4,-7,-1,2,3,4,10,-9,10,6,-4,-9,1,-4,-2,3,3,10,4,1,-9,5,-4,-4,6,8,-3,10,6,7,1,1,-9,-9,4,2,2,1,-6,2,7,9,6,-5,5,8,3,1,2,-7,-7,-8,-10,9,-7,5,-9,-5,-6,-9,4,9,9,-9,10,-7,-7,-8,-5,-3,5,6,4,3,2,3,9,3,-9,-9,10,-6,1,4,-10,-10,-4,-1,10,10,-5,-9,-2,10,-5,-2,5,2,1,-3,2,6,-2,6,-2,-5,9,9,6,-3,-10,-6,3,2,1,-7,-1,-2,-1,-6,-7,9,-4,-7,8,1,-7,5,-4,-7,2,-9,6,-7,-2,-1,-5,4,9,-2,-3,6,-2,1,-8,3,2,-5,5,-9,-7,7,1,3,-5,8,2,10,-5,-9,1,2,-6,-4,-1,8,-3,9,-6,-5,-9,-3,-9,4,5,-6,7,-4,7,4,2,3,6,-1,-6,5,1,6,-10,3,-6,-6,9,6,7,-3,1,-6,9,1,-6,-3,-6,-7,9,-6,9,8,1,5,5,8,-3,4,2,7,4,4,-1,8,9,5,-5,7,8,-5,9,10,8,3,-7,-9,-2,-1,-2,-1,3,10,-2,4,-10,-4,4,10,-5,-3,3,5,5,-6,-5,7,-6,5,-7,-7,-10,7,-4,6,-7,-4,-1,4,7,2,-9,-1,9,1,7,-4,-1,-10,5,8,7,4,3,3,-10,-3,5,3,1,9,-6,-6,-3,3,4,-1,3,8,-3,-7,5,1,-3,-5,10,4,-8,-2,9,-8,7,4,5,8,-3,1,5,10,-8,-4,-9,-4,-1,8,4,-4,5,4,10,-10,-9,8,4,-3,3,1,-8,-8,5,-2,2,-3,4,1,-9,4,3,-3,-2,-9,6,6,9,4,2,5,1,-2,-3,-6,3,4,4,3,4,10,4,-3,-1,-6,-4,-6,-7,10,1,-6,-8,8,-8,7,-3,-9,2,-9,-10,6,6,-10,10,6,-10,6,3,-1,5,10,-6,6,-2,2,3,-7,-2,3,9,-3,-4,-8,-3,7,-8,7,-7,-3,-1,4,-5,-3,9,8,7,-8,8,-7,6,10,-10,-7,1,7,-7,6,-1,-8,4,10,-5,2,4,-6,-3,4,5,-2,3,10,10,1,-4,-4,3,2,2,-3,5,-7,-8,-2,4,9,5,5,-5,9,-5,8,8,-8,-5,-9,10,9,-8,-1,6,10,-9,-7,3,-4,10,8,3,2,-7,-10,-8,-5,3,9,-5,-1,3,-1,-3,-5,-8,-4,-9,10,-7,4,-3,-2,-4,4,-9,6,-2], dtype = "int32")#candidate|9509|(910,)|const|int32
var_9510 = relay.var("var_9510", dtype = "float64", shape = (16, 8))#candidate|9510|(16, 8)|var|float64
var_9511 = relay.var("var_9511", dtype = "float64", shape = (1755,))#candidate|9511|(1755,)|var|float64
var_9512 = relay.var("var_9512", dtype = "uint8", shape = ())#candidate|9512|()|var|uint8
call_9508 = relay.TupleGetItem(func_7123_call(relay.reshape(const_9509.astype('int32'), [13, 14, 5]), relay.reshape(var_9510.astype('float64'), [128,]), relay.reshape(var_9511.astype('float64'), [5, 351]), relay.reshape(var_9512.astype('uint8'), []), ), 7)
call_9513 = relay.TupleGetItem(func_7128_call(relay.reshape(const_9509.astype('int32'), [13, 14, 5]), relay.reshape(var_9510.astype('float64'), [128,]), relay.reshape(var_9511.astype('float64'), [5, 351]), relay.reshape(var_9512.astype('uint8'), []), ), 7)
output = relay.Tuple([bop_9491,call_9508,const_9509,var_9510,var_9511,var_9512,])
output2 = relay.Tuple([bop_9494,call_9513,const_9509,var_9510,var_9511,var_9512,])
func_9520 = relay.Function([var_9510,var_9511,var_9512,], output)
mod['func_9520'] = func_9520
mod = relay.transform.InferType()(mod)
mutated_mod['func_9520'] = func_9520
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9520_call = mutated_mod.get_global_var('func_9520')
var_9522 = relay.var("var_9522", dtype = "float64", shape = (16, 8))#candidate|9522|(16, 8)|var|float64
var_9523 = relay.var("var_9523", dtype = "float64", shape = (1755,))#candidate|9523|(1755,)|var|float64
var_9524 = relay.var("var_9524", dtype = "uint8", shape = ())#candidate|9524|()|var|uint8
call_9521 = func_9520_call(var_9522,var_9523,var_9524,)
output = call_9521
func_9525 = relay.Function([var_9522,var_9523,var_9524,], output)
mutated_mod['func_9525'] = func_9525
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9273_call = mod.get_global_var('func_9273')
func_9275_call = mutated_mod.get_global_var('func_9275')
call_9553 = relay.TupleGetItem(func_9273_call(), 0)
call_9554 = relay.TupleGetItem(func_9275_call(), 0)
output = call_9553
output2 = call_9554
func_9557 = relay.Function([], output)
mod['func_9557'] = func_9557
mod = relay.transform.InferType()(mod)
mutated_mod['func_9557'] = func_9557
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9557_call = mutated_mod.get_global_var('func_9557')
call_9558 = func_9557_call()
output = call_9558
func_9559 = relay.Function([], output)
mutated_mod['func_9559'] = func_9559
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9569 = relay.const([[[7.518248,-3.004556,-9.783044],[4.403886,-1.452378,-4.658431],[-2.175239,-4.055580,-1.633161],[-8.513427,5.230680,7.507083],[-6.706452,5.919502,8.558938],[7.704229,-3.804860,5.733624],[-0.062439,5.136511,5.856000],[-2.377326,-8.033993,-1.302675],[8.963900,1.503093,1.170500],[2.518002,4.152800,5.660088],[1.677658,-7.650486,2.903134],[-1.539770,-0.055547,-2.061773],[-9.390954,6.774685,8.007310],[0.835527,2.887305,6.853339],[1.990472,-5.834445,-0.662051]],[[-6.016860,-0.052249,8.018248],[-6.776849,1.313817,5.348395],[-7.912754,-9.665304,-4.535020],[4.244854,1.181414,6.207280],[-5.521865,9.278039,9.007390],[-0.783644,5.900799,-6.543476],[-1.494049,-6.658019,-0.182121],[-2.686343,8.523281,-7.595031],[-4.715680,4.088111,-5.352032],[9.199593,-8.040912,8.620022],[-1.716333,7.784255,-4.199542],[-3.946108,-1.072371,4.951736],[5.787511,2.869042,-1.646858],[-2.215359,-0.405907,-5.419767],[-5.963945,4.066524,-0.378526]],[[4.307357,-2.882508,-9.493343],[-4.191045,-9.418056,-4.574476],[4.341164,9.927492,-7.776515],[5.740405,-1.054231,7.993053],[-6.547139,-4.268646,-0.575709],[8.981696,7.830987,-8.789490],[-5.617340,7.584133,9.197162],[-4.589340,1.403470,0.364844],[-2.280518,-3.562622,-4.208425],[7.079150,-1.948736,-4.515448],[6.357255,-2.932210,-9.614439],[-4.048892,2.951898,8.744685],[1.358620,-6.330337,7.498909],[8.968859,-1.346611,-9.377890],[1.602080,4.204298,-6.645632]],[[-1.258821,4.200696,-5.113922],[5.357955,2.702163,-0.864650],[1.496470,-6.901727,-3.257561],[2.014266,8.667532,-3.919896],[1.675027,-8.078193,3.000408],[-4.491474,-6.970079,-3.760789],[5.199157,3.844449,-9.942873],[3.588963,-2.625109,0.932136],[6.301162,-4.895059,-7.742417],[9.263496,-2.904503,5.812756],[-3.667433,4.432913,4.565230],[6.869195,2.574554,9.297527],[3.614014,2.378984,6.455005],[-9.858010,2.803291,3.015126],[2.284049,0.664018,-2.248425]]], dtype = "float32")#candidate|9569|(4, 15, 3)|const|float32
uop_9570 = relay.log(const_9569.astype('float32')) # shape=(4, 15, 3)
output = uop_9570
output2 = uop_9570
func_9580 = relay.Function([], output)
mod['func_9580'] = func_9580
mod = relay.transform.InferType()(mod)
output = func_9580()
func_9581 = relay.Function([], output)
mutated_mod['func_9581'] = func_9581
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9557_call = mod.get_global_var('func_9557')
func_9559_call = mutated_mod.get_global_var('func_9559')
call_9608 = func_9557_call()
call_9609 = func_9557_call()
output = relay.Tuple([call_9608,])
output2 = relay.Tuple([call_9609,])
func_9612 = relay.Function([], output)
mod['func_9612'] = func_9612
mod = relay.transform.InferType()(mod)
mutated_mod['func_9612'] = func_9612
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9612_call = mutated_mod.get_global_var('func_9612')
call_9613 = func_9612_call()
output = call_9613
func_9614 = relay.Function([], output)
mutated_mod['func_9614'] = func_9614
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8284_call = mod.get_global_var('func_8284')
func_8286_call = mutated_mod.get_global_var('func_8286')
call_9698 = relay.TupleGetItem(func_8284_call(), 0)
call_9699 = relay.TupleGetItem(func_8286_call(), 0)
output = call_9698
output2 = call_9699
func_9710 = relay.Function([], output)
mod['func_9710'] = func_9710
mod = relay.transform.InferType()(mod)
mutated_mod['func_9710'] = func_9710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9710_call = mutated_mod.get_global_var('func_9710')
call_9711 = func_9710_call()
output = call_9711
func_9712 = relay.Function([], output)
mutated_mod['func_9712'] = func_9712
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8838_call = mod.get_global_var('func_8838')
func_8840_call = mutated_mod.get_global_var('func_8840')
call_9817 = relay.TupleGetItem(func_8838_call(), 1)
call_9818 = relay.TupleGetItem(func_8840_call(), 1)
func_9710_call = mod.get_global_var('func_9710')
func_9712_call = mutated_mod.get_global_var('func_9712')
call_9819 = func_9710_call()
call_9820 = func_9710_call()
func_218_call = mod.get_global_var('func_218')
func_222_call = mutated_mod.get_global_var('func_222')
var_9844 = relay.var("var_9844", dtype = "int16", shape = ())#candidate|9844|()|var|int16
const_9845 = relay.const([6,7,-10,-6,-4,-5,-9,6,7,-5,4,7,8,-4,-2,-3,6,-4,10,9,4,10,6,-5,6,5,-10,9,-6,7,4,6,-9,-8,-10,-3,-8,8,-1,-9,4,6,6,6,-10,10,10,-6,8,-9,1,-3,-9,5,5,-6,7,5,-9,5,-3,-3,-3,-3,5,9,8,-6,-4,-6,6,10,-5,-7,5,4,-7,10,-10,-10,6,2,1,10,1,-4,9,-2,-8,-9,-9,8,3,-7,-2,-7,-6,4,-9,1,-2,8,-9,-8,-7,10,1,3,8,7,7,-10,-5,10,-1,-3,-8,-6,9,-3,-10,-4,1,-7,9,10,-7,9,-5,5,10,10,-9,6,-2,-6,-2,-3,2,-3,-3,-9,3,4,6,3,7,5,-2,6,10,6,4,4,-1,-7,1,-7,-3,-10,4,7,9,-9,-1,-4,-5,-2,2,-5,4,-7,7,7,9,-8,-3,6,7,4,8,-10,10,4,-9,-5,2,-7,-10,-8,6,-1,3,2,3,-9,-5,6,10,-9,10,1,8,10,6,6,-5,2,4,-7,1,-8,4,4,-3,-2,-7,-4,3,-2,1,1,-4,-4,-7,5,-9,-6,8,-7,-3,5,-4,-4,2,-5,3,-7,-9,5,-3,5,5,5,3,6,10,7,-8,-10,8,-1,3,8,-2,1,-5,-7,10,-6,3,1,1,9,1,-10,-7,2,3,-4,-2,8,3,-10,7,-8,-7,-6,-8,-8,4,-10,8,-3,-1,-6,3,-2,1,-9,-9,-9,-5,5], dtype = "int16")#candidate|9845|(294,)|const|int16
call_9843 = relay.TupleGetItem(func_218_call(relay.reshape(var_9844.astype('int16'), []), relay.reshape(const_9845.astype('int16'), [7, 6, 7]), ), 0)
call_9846 = relay.TupleGetItem(func_222_call(relay.reshape(var_9844.astype('int16'), []), relay.reshape(const_9845.astype('int16'), [7, 6, 7]), ), 0)
func_6215_call = mod.get_global_var('func_6215')
func_6217_call = mutated_mod.get_global_var('func_6217')
var_9861 = relay.var("var_9861", dtype = "float64", shape = (64, 2))#candidate|9861|(64, 2)|var|float64
call_9860 = relay.TupleGetItem(func_6215_call(relay.reshape(var_9861.astype('float64'), [32, 4])), 0)
call_9862 = relay.TupleGetItem(func_6217_call(relay.reshape(var_9861.astype('float64'), [32, 4])), 0)
output = relay.Tuple([call_9817,call_9819,call_9843,var_9844,const_9845,call_9860,var_9861,])
output2 = relay.Tuple([call_9818,call_9820,call_9846,var_9844,const_9845,call_9862,var_9861,])
func_9863 = relay.Function([var_9844,var_9861,], output)
mod['func_9863'] = func_9863
mod = relay.transform.InferType()(mod)
mutated_mod['func_9863'] = func_9863
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9863_call = mutated_mod.get_global_var('func_9863')
var_9865 = relay.var("var_9865", dtype = "int16", shape = ())#candidate|9865|()|var|int16
var_9866 = relay.var("var_9866", dtype = "float64", shape = (64, 2))#candidate|9866|(64, 2)|var|float64
call_9864 = func_9863_call(var_9865,var_9866,)
output = call_9864
func_9867 = relay.Function([var_9865,var_9866,], output)
mutated_mod['func_9867'] = func_9867
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7444_call = mod.get_global_var('func_7444')
func_7446_call = mutated_mod.get_global_var('func_7446')
call_9881 = func_7444_call()
call_9882 = func_7444_call()
output = call_9881
output2 = call_9882
func_9895 = relay.Function([], output)
mod['func_9895'] = func_9895
mod = relay.transform.InferType()(mod)
output = func_9895()
func_9896 = relay.Function([], output)
mutated_mod['func_9896'] = func_9896
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9557_call = mod.get_global_var('func_9557')
func_9559_call = mutated_mod.get_global_var('func_9559')
call_9943 = func_9557_call()
call_9944 = func_9557_call()
func_9710_call = mod.get_global_var('func_9710')
func_9712_call = mutated_mod.get_global_var('func_9712')
call_9965 = func_9710_call()
call_9966 = func_9710_call()
func_5860_call = mod.get_global_var('func_5860')
func_5864_call = mutated_mod.get_global_var('func_5864')
const_9971 = relay.const([8.075217,7.162793,0.128165,-0.077103,1.738390,0.122998,2.784945,8.338620,2.969616,3.134033,5.710729,0.090465,-0.900467,6.965146,-0.905978,5.815628,3.357552,7.812593,0.330968,9.411429,-9.756170,-5.317175,-6.941718,-9.351589,-9.697681,-4.403207,9.550117,4.340062,2.154502,5.212845,-6.745083,1.745793,-8.556739,-8.392594,4.325303,-0.143351,-4.164418,5.127432,-4.034726,-4.632174,3.426927,8.224027,0.789435,-5.162864,7.543704,-2.031471,-3.300408,-5.608233,-7.939370,-7.554386,-0.586837,-2.855967,5.490808,6.779916,0.749326,-7.658839,-9.776947,2.442887,7.126511,-5.646406,-1.275122,-0.822043,7.312899,7.869477,8.475956,2.382186,-0.028945,-5.960613,2.837020,0.345864], dtype = "float64")#candidate|9971|(70,)|const|float64
call_9970 = relay.TupleGetItem(func_5860_call(relay.reshape(const_9971.astype('float64'), [35, 2]), relay.reshape(const_9971.astype('float64'), [35, 2]), ), 1)
call_9972 = relay.TupleGetItem(func_5864_call(relay.reshape(const_9971.astype('float64'), [35, 2]), relay.reshape(const_9971.astype('float64'), [35, 2]), ), 1)
func_3759_call = mod.get_global_var('func_3759')
func_3763_call = mutated_mod.get_global_var('func_3763')
const_9974 = relay.const([-0.704783,-8.550400,5.525754,4.413766,-8.808992,-8.796072,-6.708478,7.287098,1.951321,-4.198818,3.990544,-3.806066,6.127101,5.878673,-3.458573,-2.245276,-2.289493,5.452255,-3.973934,-2.707952,4.768763,-8.175792,5.309971,-5.591798,1.870278,-9.919186,1.587680,-9.614197,-3.554611,1.883365,-3.005289,8.830415,5.643577,-6.860646,3.126814,-5.951194,-8.699864,-4.763590,-6.351940,-0.901041,0.331795,-5.895711,2.081136,3.710597,-9.950519,6.600498,3.577696,-6.753053,7.817709,-5.620474,6.687154,-5.495784,-9.521047,-4.848515,9.009803,-1.258544,1.786688,5.648373,2.999106,-2.229501,-7.693816,-3.098943,4.471773,-1.772863,-9.996343,8.544443,6.209387,9.449907,1.302377,-3.117545,-8.323041,0.024546,3.743916,-6.156830,-8.533480,-7.510305,-7.711424,-9.690122,2.226428,7.055641,1.284067,-3.172965,-0.425927,-5.059987,9.479223,-3.842884,6.868675,1.079901,2.197185,7.074403,-4.685922,-3.125135,9.436141,-3.416695,3.646137,-5.138252,6.237128,3.823166,-0.174290,0.164886,-2.229861,9.177289,6.771926,-2.572556,-4.830903,-6.211841,1.800579,-6.526775,5.425777,-3.309080,-5.762950,-6.343471,6.312823,1.097290,6.027577,4.893408,-7.163775,-0.197054,0.485226,-7.696316,-2.143564,-1.678595,9.597752,-0.594132,-3.148981,2.824410,9.029519,-4.238617,0.467276,-6.100975,-5.991749,-1.322017,-6.755956,-2.701043,1.027614,-7.942744,-8.634019,-9.765720,7.440308,-3.506778,0.852617,-9.720896,4.882728,3.388663,-2.856560,-3.275743,9.145936,9.280505,5.384114,4.576218,6.188728,-9.247515,-4.938379,9.280919,-6.025900,4.369610,-6.514815,-5.080470,-7.196808,-3.111634,-7.539306,2.366367,-1.680808,6.481785,7.857397,-3.569781,-9.154095,-2.588488,1.114628,-7.930187,2.215453,3.177329,1.873534,-8.508141,6.445652,-4.554675,9.055058,0.631254,3.831010,3.896299,0.613559,6.101713,-8.598008,9.168120,3.296470,3.937586,7.773873,-1.625506,3.599687,6.227754,-6.806965,-1.140798,2.457286,6.052257,-2.138415,8.462935,-6.007228,-5.544039,-7.315586,5.024466,9.175282,7.685221,4.535590,-8.031980,-3.959217,-0.544952,5.554257,-8.004805,-2.258136,5.374942,-6.012203,0.359145,4.792005,8.235256,3.780812,-5.333047,-9.435028,9.861697,2.167639,-0.216396,2.969946,-1.929233,9.515710,-2.272625,-0.873397,-9.757142,-9.241925,-9.836279,6.650911,-0.548232,-5.881352,-4.516905,-7.998267,-4.611383,8.037769,8.009164,8.115084,8.463389,-5.609865,0.001256,-0.737702,9.267989,7.946579,-7.662656,6.886121,1.120039,3.557718,-9.986114,7.517797,-2.612370,2.299577,-6.635596,3.699606,3.178764,3.525335,1.302466,3.267618,-2.699568,-4.967345,7.318768,9.846249,5.512171,-2.398360,-0.791223,-6.356449,-7.188263,-0.598030,8.586434,2.684468,3.046537,5.263339,-3.076981,1.235800,5.414346,9.094745,-6.774407,3.262813,-6.986721,7.970548,6.777202,0.291107,-1.062389,-1.947490,8.437439,-0.284439,-3.162309,5.248351,-8.422363,-0.693608,-2.078342,1.198425,-4.301605,-0.886128,-2.030602,-9.135477,-1.441487,-6.582159,3.284204,-5.637211,-4.751469,-9.149012,-6.649940,4.053215,-1.070340,-9.992199,5.020856,1.712503,-5.037851,-7.145723,-6.835673,-9.019837,-5.427812,1.323432,-9.659609,1.742073,-7.831140,9.420420,9.767326,-4.960842,-7.105131,9.395441,-8.621985,-7.524109,-0.167178,3.921819,7.822112,0.900341,-8.132214,5.275807,-6.896549,8.243363,-7.427270,3.210616,3.970287,-5.671216,-4.444273,-8.787564,-6.611255,5.806385,4.804284,5.447478,9.750798,4.030389,4.848865,-0.720783,3.855149,3.467136,-5.758995,7.018932,-7.985434,-8.769471,8.217338,0.225335,6.266024,6.518849,9.785093,6.086009,6.042428,7.316881,7.637947,4.687979,4.136412,6.589360,1.243268,-5.533184,-8.014235,2.259711,7.439282,9.327419,4.740994,9.936903,-7.718185,7.427003,5.105451,-6.163121,-2.241877,8.678945,-2.826203,-0.157627,-3.904481,9.446298,4.954104,-2.987732,3.672689,5.314540,-6.141625,-8.064731,9.943481,1.740526,-3.705631,9.408113,0.317694,-5.821679,9.573780,3.014396,2.279551,-8.045741,2.083451,5.853302,8.048848,-4.597884,-2.367739,-3.400564,-2.589711,-5.953927,2.985473,-9.218169,8.901415,0.519250,7.702562,-3.052174,0.166047,2.914174,8.493291,-1.402187,6.766309,7.009809,4.289116,2.595187,3.097175,-5.458618,4.526635,5.598439,8.874823,-2.313037,3.526279,-4.158154,4.072645,-5.819922,-3.738752,0.555982,6.888938,7.803070,-3.785651,-6.974586,7.559031,7.791005,1.374640,4.624578,5.269674,2.135339,-4.663128,6.533790,9.659862,-0.071552,-1.692125,5.736581,-5.850851,-4.289938,8.471915,-1.740374,8.159063,-2.453533,-8.018865,-9.034942,8.867943,7.792594,4.829880,5.483256,-5.854795,-9.357542,-1.471741,-5.586990,4.913686,7.830183,6.199586,7.348537,1.968793,-6.076217,6.550883,8.671095,-9.289355,-3.183878,-8.747846,5.426540,4.842307,2.195026,9.604148,8.849048,8.565961,-8.247787,-0.682532,4.867731,6.463345,-4.456371,-5.750313,7.725249,-3.941809,-5.657506,8.443181,6.178868,-7.416413,-5.830625,-9.053627,-5.053945,8.230485,-0.153096,-9.089307,6.765957,9.702201,-6.453926,-0.622406,1.569383,0.877304,1.490091,8.412336,6.974460,4.385241,7.281888,6.358306,4.432623,-8.183084,0.474804,-6.938936,-9.078450,-4.888999,0.497938,-8.792046,6.770039,8.887583,5.490304,9.480463,-8.604359,-4.583305,-3.690988,1.164771,-6.365851,2.818218,-6.942092,7.023189,-9.409760,8.462116,-5.140389,-1.289823,8.090173,-3.858960,-7.124880,7.979518,-9.345290,-6.872431,-5.196000,2.691281,-8.837481,-9.113443,-1.179031,3.295392,7.982342,-4.433119,2.785623,5.760004,-1.411042,1.604157,7.971608,4.832693,-8.936235,-4.123444,1.542701,-8.786092,-0.603712,-3.726328,-9.830181,9.274641,-7.398173,2.586485,-6.786839,-6.463787,-0.399249,3.940425,0.349625,4.501496,9.506000,-1.959936,4.319599,-7.490359,2.713737,-9.024714,-6.915684,3.996810,-1.538344,-2.725481,7.940826,3.111524,-0.053380,0.034904,-7.229951,-9.135253,-4.862004,-9.306639,2.544135,8.844181,-1.799137,-5.292048,-1.378990,4.783447,-6.654870,0.786302,3.698973,0.610592,-5.831102,4.814592,3.330838,-8.917955,-5.057893,-3.044318,9.461568,-5.272585,8.563056,-9.993578,-5.643599,-3.952812,-2.809805,-5.134396,2.234751,9.625827,-5.131731,-5.215549,-8.080460,9.447555,6.199196,-0.050385,3.939591,-8.979865,2.938208,-1.537889,9.581678,-7.469455,6.991858,5.436002,-8.312920,-1.215115,4.394594,9.555196,1.927436,-4.503875,-2.250775,0.273865,1.173696,-9.032268,-6.240129,-9.316043,-1.941399,6.352641,9.739395,-3.605968,-2.766888,-7.030820,7.468740,6.585159,-1.154495,6.072585,2.055018,-6.530375,0.196878,8.985961,-3.428069,8.334806,3.933586,-6.970476,8.500432,-8.843783,4.582262,6.080942,-1.922090,9.696468,-8.879759,4.051460,4.842243,-2.942952,4.905926,-8.106956,9.865691,-5.259313,1.781846,8.151681,3.410219,-8.348260,-6.008962,3.943754,-2.359314,0.285077,9.799312,-1.316783,-0.445800,8.493685,4.342401,8.399896,6.127641,2.609059,-7.250129,6.774373,-2.806058,-4.684724,5.865568,-0.699735,-2.512459,-2.752354,-7.574017,-8.632411,5.028147,-1.183699,-7.087496,0.762498,5.254843,-2.282449,6.528873,2.806041,9.511840,-6.534554,2.546553,-3.309109,-0.244334,-5.369344,-6.057655,-4.590058,-3.453604,-5.921211,-9.778592,9.143086,-8.180967,-1.166785,1.497718,2.363563,1.881818,-5.633265,-8.198536,8.846855,7.984563,-9.819982,-4.605449,-3.234214,2.294906,7.413694,-6.079172,-1.671793,-4.231617,2.611491,-0.261784,-4.563107,-7.182668,4.735508,-7.056272,-4.313481,-3.468902,8.659775,2.305388,4.082347,-7.407880,-7.236835,1.470564,7.545043,9.637836,-6.398146,2.138313,-3.873734,9.549686,2.839564,-8.044793,2.541310,-3.368800,6.154057,-8.521850,-1.242515,-0.188490,-2.615562,3.933813,8.923607,-2.806892,3.596701,4.141387,5.315908,6.490572,-1.765877,-6.004015,-7.908833,-8.510663,-4.417987,-1.841717,3.557103,-8.208116,5.530001,3.613597,-1.708971,-8.319833,4.641152,1.498138,-6.971079,2.470570,-2.263711,-2.362194,-9.845845,1.597565,-6.794601,-3.982765,-7.052763,3.603261,-9.540751,-8.959590,-7.982476,-1.285474,-2.493419,-8.409671,-7.340098,0.856122,-0.715238,4.764965,-7.072135,4.708716,1.113561,-1.338302,-7.881069,6.024692,-6.271013,-1.341763,-2.308559,2.994021,-2.121781,3.723097,0.316663,-2.123218,-6.989358,4.719974,-8.476411,0.760817,-7.480178,8.361036,5.559319,9.442421,-5.530579,-2.063956,7.994370,-4.937013,-7.419490,-2.136939,-0.940765,5.824015,0.036559,-6.886581,1.206917,3.570720,9.822399,5.237904,5.078558,1.172047,-4.580329,-0.151131,4.929082,5.737354,-9.360065,8.296215,-3.794659,3.822777,8.965123,2.588188,-1.096343,-3.730282,8.380038,-8.652277,8.156019,0.936756,-4.138622,0.639111,-6.872825,0.741739,-1.123912,4.207979,1.574473,-4.197026,-4.569537,8.987636,-8.940731,7.599301,9.832345,-9.214465,3.603695,-9.170323,7.794893,6.959125,3.221477,-0.323412,8.894671,-5.154861,8.028881,-9.937139,1.864646,-1.319400,9.061674,4.608661,9.171649,0.572621,5.363942,-9.303248,9.344708,-3.077611,-7.039107,9.612660,5.556656,-2.939788,-4.168882,-1.897617,8.673611,-6.277760,-4.798382,9.456361,6.605708,-5.269161,9.690632,-8.641276,-0.218295,1.490227,7.196561,8.838225,-4.934226,8.958813,-4.054576,-9.478866,-8.712200,-6.596304,7.018620,3.564354,3.198518,8.602410,-5.781456,4.901034,3.423331,-6.775376,4.601195,7.444852,3.962477,7.789307,-7.246760,3.492908,-7.179667,-9.945166,-1.372725,-1.808300,9.890713,-9.311216,7.782839,2.350574,-5.768982,-8.261857,7.690263,8.840389,-3.413342,-4.855212,2.632885,-4.106010,9.840000,3.942316,-1.056916,6.789574,2.340486,0.523494,-0.078122,4.131014,-0.221768,-7.515149,9.718743,4.005312,-7.397975,8.365818,1.399870,4.692001,-6.230695,-5.201691,4.698839,-7.223472,2.576309,4.999166,-3.171854,-7.590301,-2.221666,-1.507562,6.562671,-6.331741,1.885647,1.478859,9.463841,-1.116248,1.336009,-9.086370,-6.039192,7.848107,-4.591414,7.574131,-4.804154,-5.615881,3.361960,-7.501626,-3.446170,-3.209344,-7.892054,-1.770710,6.765988,5.722109,-0.526229,7.053739,4.431072,-6.680244,1.664287,-0.188309,-8.448892,9.878425,-7.050379,-6.053604,-9.928432,-6.539977,-0.468230,-7.433713,5.727180,-6.623606,9.783554,2.578274,-3.374424,-9.736913,2.510832,7.405775,3.998429,6.145281,6.165627,-0.545983,2.458245,-8.550491,-5.804905,7.867575,2.569894,4.522476,7.010874,5.932515,-2.933580,2.004926,-2.881948,8.070618,5.039400,1.287544,-7.938938,-4.765402,5.054360,1.209369,2.785753,2.323942,-7.348144,2.764000,3.791124,-8.890901,6.334333,-2.329227,-6.409878,2.585040,-5.594811,-3.705036,1.899923,-2.528081,-8.277817,-7.031904,-2.865532,-5.464550,-8.650340,-8.131854,-5.467665,8.102125,7.172244,0.781185,-8.042275,0.482657,-0.021224,3.213780,1.130112,-3.339129,-4.536053,2.292680,-0.247211,7.408519,-3.006303,2.912722,-5.429711,-9.042952,-5.357890,-1.760331,-5.554480,1.176644,2.931473,-9.502455,9.351551,-1.716215,9.237341,-7.928197,2.618853,-0.786657,-5.170924,-8.396494,5.540412,-4.969584,5.910109,-4.339510,-4.405801,-6.978078,-7.870495,-0.831319,9.147336,8.673672,2.476378,-6.510832,-9.697996,-5.860350,-1.041960,7.283120,6.706020,2.433389,-4.766294,-3.895549,-2.859580,3.116982,-3.128476,-6.232567,-1.885219,-1.093787,8.443357,8.055237,-3.196033,-0.605830,-4.341366,-9.039734,9.491221,-9.154795,0.216339,6.552598,5.135725,-8.320661,-1.093564,4.785621,4.819620,-5.102208,0.041161,-0.527294,4.195020,-0.723827,-7.803598,5.350958,1.044161,-1.843139,8.342829,-5.227130,-4.172212,-2.196054,3.738245,1.761845,8.745063,8.818979,4.179962,-8.098058,5.720879,3.919880,0.835205,6.917312,-7.095168,4.302233,0.311879,0.669404,7.326184,2.192034,4.813809,5.718656,-3.786694,5.237136,-6.325349,1.468823,4.709573,7.300598,1.700674,0.664558,-9.095934,5.489837,-6.928513,4.438143,-5.979783,-2.203441,-6.794658,9.144017,-8.186018,-0.416213,-2.966525,-8.078460,-3.169293,9.667670,0.529507,-8.781686,5.583647,7.847034,-2.099853,1.528148,6.189131,-7.333973,0.742539,9.562904,1.080163,-1.577241,1.331722,9.583657,1.710831,2.547391,4.981617,-8.319993,-8.682919,-8.823696,6.374002,0.602905,3.759642,-9.714118,4.316110,-4.686472,2.006771,3.441927,-1.233375,5.776412,3.785649,-3.677386,-6.488160,9.086902,-6.082641,5.594319,-2.189054,1.255614,-7.040923,-4.088329,4.089901,-8.304208,-0.163904,5.543065,-1.263711,-8.475705,2.196325,-6.304650,9.742838,-4.900855,1.803729,8.970400,5.621901,0.376984,-0.368562,8.741575,8.714751,2.115186,3.654202,-5.141659,0.794728,1.713526,6.129392,-2.913045,-9.774263,-2.223145,-7.362393,8.908393,-2.719563,5.071149,-3.848992,-4.461626,0.668934,0.588738,-8.639245,-5.244829,-9.321356,0.679941,-1.514685,7.850429,-3.043208,-5.342081,2.451897,-9.604802,0.929378,4.027457,3.262938,9.983673,1.340266,5.742936,-6.605905,1.051389,-9.515305,-2.016786,-1.818080,2.748352,9.949976,7.927421,6.428046,9.090328,1.763473,-2.827129,-6.490872,8.674411,8.972186,-5.449633,2.524879,-1.907915,-3.537045,-0.521974,-3.879429,3.713414,4.846052,9.084584,6.568542,5.345867,0.227778,3.613627,1.609544,2.880164,5.680310,-2.767375,4.033924,-2.840527,5.717939,-8.178156,-4.771637,-4.471641,-6.385687,-8.036282,-8.256915,-2.321874,-5.425191,4.136846,5.159445,-0.099781,-0.167394,2.870419,4.747922,7.057420,-7.455116,0.109510,-5.055553,-8.789329,3.366737,-3.088979,4.703148,7.245402,-5.909574,0.183662,5.391869,-0.126414,1.050925,0.534440,-1.690838,8.025735,-5.138766,3.367587,-1.047398,8.569682,0.046063,7.091426,-9.523330,-0.783687,-2.954936,-4.387803,5.590734,3.890165,-3.985425,7.304563,-3.509264,9.721887,0.967673,9.929173,2.881786,5.155671,-5.345665,1.263425,2.828033,6.014776,6.720575,8.886462,-9.451580,9.917847,3.118329,8.930852,-4.383042,-8.544401,-2.616775,7.368563,-2.439052,-5.415382,-4.374726,-9.204706,5.392867,0.745922,9.335735,3.509289,6.734684,0.633566,8.143727,-0.228106,5.958434,-3.335947,-8.875932,2.129429,-1.638053,5.619499,7.728029,2.953857,4.379778,-5.655549,9.511692,6.605037,-3.712402,-9.544825,0.465410,6.820911,6.817151,-6.675601,-2.561006,4.950828,8.927713,9.589411,-7.889764,4.764590,8.583685,-1.685815,4.620705,0.698541,-4.852101,-1.224922,0.444875,7.134089,1.964507,-8.207721,2.791528,-1.764827,9.031979,-2.078079,-9.532982,4.781271,3.863262,6.124777,6.123186,-7.156584,-0.477312,-1.965205,8.279337,-7.578217,7.649884,-1.176099,-2.622914,-7.669763,-9.362613,3.796967,-2.577090,-8.709307,4.930760,6.711776,-3.663618,-1.121916,-1.118912,-6.002486,-8.997627,-6.835753,-7.385347,3.403555,1.396106,-4.390474,-0.004803,7.738531,-3.467624,-1.648450,6.240911,4.634147,8.393357,-5.137454,-5.399282,7.474286,1.814242,-0.584335,-2.037459,6.906604,5.643091,7.197518,0.853948,6.663739,-9.847592,5.238578,6.234132,-7.064312,7.183766,-6.038437,5.817677,-0.778294,9.429426,-9.977885,-5.365618,5.227533,4.237291,1.110688,5.791620,1.037393,-2.394752,7.734997,3.057434,1.586938,-3.589355,-0.807995,6.759345,9.501861,8.006522,3.663884,1.175233,-5.232842,8.683827,8.950141,-4.588562,7.817916,-0.496671,-9.361261,-8.636794,-2.827369,7.595547,-1.806781,1.461499,6.792033,-5.931702,6.527731,3.801653,-8.529219,3.047005,-1.288836,-1.232623,1.470260,-9.646118,-7.192994,4.483237,-2.800055,9.394585,5.306365,-6.697852,-1.821941,3.724511,-1.206146,0.367685,-2.004328,-2.671285,-6.170918,-7.313775,4.599667,8.520948,2.534061,-7.817025,0.659884,-3.071945,4.173060,9.118857,5.055841,5.767551,0.744955,0.485092,2.873183,-4.662997,-4.555512,2.068830,-5.240698,-5.892632,7.413597,4.585052,-6.140524,-4.024050,-0.565273,7.205601,-2.045475,7.090322,0.629423,9.132965,-6.179192,-2.294846,-2.991372,4.665643,-6.416047,-5.278290,-8.222854,-9.522873,-1.811977,-1.916923,-4.143821,-0.049203,-8.737874,2.013861,-4.886587,2.733082,-1.099358,-4.242786,8.720224,8.835579,2.929738,-6.102977,2.289695,-1.272929,5.269349,-6.184162,9.671576,-0.799809,-9.141351,2.971786,0.144575,-2.396118,9.168738,-0.111610,-0.464528,-6.644815,-1.963392,9.966181,-3.698800,3.554392,0.793486,0.849290,-4.186645,-4.792683,5.565147,-4.326199,-0.410442,7.594889,3.211239,5.899408,9.776847,9.353048,-3.908799,-1.519843,-7.740045,-6.986805,9.417383,-5.264175,2.014820,4.364764,7.003950,6.690300,-1.615294,3.194389,9.605312,6.779631,-5.598349,-0.344647,0.909651,1.082318,-6.322859,4.143647,-5.402171,3.835293,1.660307,-2.066246,-4.383507,-5.727291,-0.704890,-4.064119,-0.402994,0.827915,-8.260472,7.965218,-4.061127,-0.872945,-1.671632,-2.300786,4.702747,3.138711,-9.340952,3.384665,5.759563,1.820941,9.901201,1.011431,4.182939,2.187343,-2.960373,-7.054844,1.206150,4.854798,-0.661590,-3.410109,-5.683914,-6.897717,-9.602272,4.895847,-8.239972,9.816007,1.397440,8.081448,2.026336,-4.851561,-0.269106,-1.342673,4.090483,7.804799,-3.634050,-9.525679,2.999113,8.708953,-7.546027,-1.091564,-7.422047,9.960633,-9.044227,-7.304783,1.784234,-6.744477,3.954734,8.870330,-3.976500,1.668922,5.868076,4.018489,-9.989404,-2.761499,-3.838843,5.772831,-3.066606,-2.305898,-0.721494,3.541784,6.052698,0.959579,-0.358682,-9.629211,8.887218,3.029749,3.677418,-4.361283,-6.225786,-6.162985,4.570513,1.416561,-9.419241,-2.762820,-6.108128,-4.666362,4.671447,8.910192,4.883913,2.226471,4.869706,0.097548,7.711543,-0.578932,-7.966322,-8.051856,0.975051,7.898387,9.110978,-8.794873,3.130318,-2.751504,-8.248311,6.855599,6.086491,-1.626168,3.866367,2.355785,6.335835,-5.124780,-6.794900,5.308852,-6.960611,-6.793877,8.249229,-4.189804,0.178513,0.844789,-6.198958,2.894727,4.551393,-0.750342,1.405634,-2.661057,7.864049,-7.306609,8.194748,5.766205,8.316278,-0.702062,-9.897333,8.290187,0.446731,7.885715,3.553374,4.127804,6.743171,-8.151646,5.138827,0.588756,1.398270,-8.050968,-3.160023,4.635994,0.412304,-6.412378,-5.961218,-0.172894,-6.744820,8.624783,-2.190569,8.065451,-5.409961,0.051584,-6.830077,-2.004443,-1.768801,-0.326894,5.183190,-8.214380,7.001876,-9.125233,9.659434,4.879044,0.059219,7.392576,3.150888,3.966210,-3.495018,2.997684,5.191922,1.885076,7.490321,-0.630993,0.081600,1.227095,1.687919,-9.689791,-8.946663,9.552452,-1.286454,-8.976448,9.931386,3.762667,-5.632554,-8.639892,-5.127470,6.032874,8.974639,-5.132362,0.214744,-0.584450,-6.764728,6.687189,-4.252445,-9.099547,0.310094,8.429359,-1.937097,6.350399,8.251253,-7.603009,6.717477,4.902210,-1.744736,2.747000,-3.758291,-0.499499,-9.725765,4.921733,-9.986627,2.175426,-6.201129,-3.252517,5.810496,4.204933,4.067057,-5.437598,-4.666061,-5.719097,-6.756503,-8.798581,6.292933,9.717859,-3.842571,-6.467063,-8.996542,-0.087688,-2.192336,4.232107,-1.552808,0.393446,-1.107541,-7.510855], dtype = "float64")#candidate|9974|(1872,)|const|float64
call_9973 = func_3759_call(relay.reshape(const_9974.astype('float64'), [12, 12, 13]), relay.reshape(const_9974.astype('float64'), [12, 12, 13]), )
call_9975 = func_3759_call(relay.reshape(const_9974.astype('float64'), [12, 12, 13]), relay.reshape(const_9974.astype('float64'), [12, 12, 13]), )
output = relay.Tuple([call_9943,call_9965,call_9970,const_9971,call_9973,const_9974,])
output2 = relay.Tuple([call_9944,call_9966,call_9972,const_9971,call_9975,const_9974,])
func_9977 = relay.Function([], output)
mod['func_9977'] = func_9977
mod = relay.transform.InferType()(mod)
mutated_mod['func_9977'] = func_9977
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9977_call = mutated_mod.get_global_var('func_9977')
call_9978 = func_9977_call()
output = call_9978
func_9979 = relay.Function([], output)
mutated_mod['func_9979'] = func_9979
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5812_call = mod.get_global_var('func_5812')
func_5813_call = mutated_mod.get_global_var('func_5813')
call_10008 = relay.TupleGetItem(func_5812_call(), 0)
call_10009 = relay.TupleGetItem(func_5813_call(), 0)
uop_10022 = relay.log2(call_10008.astype('float64')) # shape=(35,)
uop_10024 = relay.log2(call_10009.astype('float64')) # shape=(35,)
func_6124_call = mod.get_global_var('func_6124')
func_6125_call = mutated_mod.get_global_var('func_6125')
call_10042 = func_6124_call()
call_10043 = func_6124_call()
output = relay.Tuple([uop_10022,call_10042,])
output2 = relay.Tuple([uop_10024,call_10043,])
func_10047 = relay.Function([], output)
mod['func_10047'] = func_10047
mod = relay.transform.InferType()(mod)
output = func_10047()
func_10048 = relay.Function([], output)
mutated_mod['func_10048'] = func_10048
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5599_call = mod.get_global_var('func_5599')
func_5600_call = mutated_mod.get_global_var('func_5600')
call_10062 = func_5599_call()
call_10063 = func_5599_call()
output = relay.Tuple([call_10062,])
output2 = relay.Tuple([call_10063,])
func_10114 = relay.Function([], output)
mod['func_10114'] = func_10114
mod = relay.transform.InferType()(mod)
mutated_mod['func_10114'] = func_10114
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10114_call = mutated_mod.get_global_var('func_10114')
call_10115 = func_10114_call()
output = call_10115
func_10116 = relay.Function([], output)
mutated_mod['func_10116'] = func_10116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7272_call = mod.get_global_var('func_7272')
func_7274_call = mutated_mod.get_global_var('func_7274')
call_10237 = relay.TupleGetItem(func_7272_call(), 0)
call_10238 = relay.TupleGetItem(func_7274_call(), 0)
func_148_call = mod.get_global_var('func_148')
func_150_call = mutated_mod.get_global_var('func_150')
const_10247 = relay.const([10,-2,1,6,-10,-8,-6,8,2,4,-5,2,4,-3,6,2,10,-8,3,-10,2,-10,4,-2,-7,2,9,-5,-7,7,-10,1,4,-2,1,10,10,4,7,-2,2,6,7,-4,2,8,-2,-6,6,5,-8,3,-4,3,4,-4,9,-10,3,-1,-7,9,-5,8,-2,1,8,9,-4,1], dtype = "uint64")#candidate|10247|(70,)|const|uint64
call_10246 = relay.TupleGetItem(func_148_call(relay.reshape(const_10247.astype('uint64'), [7, 2, 5])), 1)
call_10248 = relay.TupleGetItem(func_150_call(relay.reshape(const_10247.astype('uint64'), [7, 2, 5])), 1)
var_10256 = relay.var("var_10256", dtype = "float32", shape = (35, 14))#candidate|10256|(35, 14)|var|float32
bop_10257 = relay.logical_or(call_10237.astype('bool'), var_10256.astype('bool')) # shape=(35, 14)
bop_10260 = relay.logical_or(call_10238.astype('bool'), var_10256.astype('bool')) # shape=(35, 14)
output = relay.Tuple([call_10246,const_10247,bop_10257,])
output2 = relay.Tuple([call_10248,const_10247,bop_10260,])
func_10262 = relay.Function([var_10256,], output)
mod['func_10262'] = func_10262
mod = relay.transform.InferType()(mod)
var_10263 = relay.var("var_10263", dtype = "float32", shape = (35, 14))#candidate|10263|(35, 14)|var|float32
output = func_10262(var_10263)
func_10264 = relay.Function([var_10263], output)
mutated_mod['func_10264'] = func_10264
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10270 = relay.var("var_10270", dtype = "int32", shape = (2, 5, 13))#candidate|10270|(2, 5, 13)|var|int32
var_10271 = relay.var("var_10271", dtype = "int32", shape = (2, 5, 13))#candidate|10271|(2, 5, 13)|var|int32
bop_10272 = relay.add(var_10270.astype('int32'), relay.reshape(var_10271.astype('int32'), relay.shape_of(var_10270))) # shape=(2, 5, 13)
uop_10280 = relay.sinh(var_10270.astype('float64')) # shape=(2, 5, 13)
output = relay.Tuple([bop_10272,uop_10280,])
output2 = relay.Tuple([bop_10272,uop_10280,])
func_10284 = relay.Function([var_10270,var_10271,], output)
mod['func_10284'] = func_10284
mod = relay.transform.InferType()(mod)
var_10285 = relay.var("var_10285", dtype = "int32", shape = (2, 5, 13))#candidate|10285|(2, 5, 13)|var|int32
var_10286 = relay.var("var_10286", dtype = "int32", shape = (2, 5, 13))#candidate|10286|(2, 5, 13)|var|int32
output = func_10284(var_10285,var_10286,)
func_10287 = relay.Function([var_10285,var_10286,], output)
mutated_mod['func_10287'] = func_10287
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9710_call = mod.get_global_var('func_9710')
func_9712_call = mutated_mod.get_global_var('func_9712')
call_10304 = func_9710_call()
call_10305 = func_9710_call()
output = relay.Tuple([call_10304,])
output2 = relay.Tuple([call_10305,])
func_10312 = relay.Function([], output)
mod['func_10312'] = func_10312
mod = relay.transform.InferType()(mod)
mutated_mod['func_10312'] = func_10312
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10312_call = mutated_mod.get_global_var('func_10312')
call_10313 = func_10312_call()
output = call_10313
func_10314 = relay.Function([], output)
mutated_mod['func_10314'] = func_10314
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10514 = relay.const([[[-7.224359,9.258339,8.563129,3.692710,-4.880991,2.515659,5.019348,3.633481,9.671948,-7.625954,-6.042155,9.738738,2.225528],[-4.835091,4.356468,6.412690,1.462032,-7.675012,-4.082755,2.724790,-4.747048,-8.200118,9.924964,2.921979,-4.552103,-1.788968]],[[-0.559912,4.756308,4.557716,7.570268,0.599975,7.111184,5.960140,7.579526,7.000874,-7.906625,2.315276,7.430341,-5.390824],[-0.049533,-2.413149,-2.783249,-5.859454,5.177791,1.161533,-5.620974,3.002191,0.536374,8.923444,-9.955729,6.658350,0.956716]],[[5.422560,3.972318,6.588928,5.243177,-8.041941,-9.790019,8.417149,8.206013,-3.719795,2.898563,4.618177,-7.843772,7.809537],[2.592333,-1.848077,-9.867448,5.497410,2.949303,5.975272,2.565209,-3.414124,-3.974624,6.477471,-9.431950,1.369911,3.309929]],[[1.446508,8.536964,-3.007814,6.767103,5.852026,4.253452,-3.189957,0.131728,2.371458,9.906069,3.591800,1.335567,0.817969],[-1.151435,8.455182,0.469904,-8.116208,7.822530,2.815485,7.586547,-6.363952,-3.250578,9.506947,-5.487148,-3.211672,5.784647]],[[3.673047,-3.159918,-3.263429,9.683198,-4.397247,-9.048271,-3.060620,8.733566,3.695180,-4.175908,5.829890,-4.381900,8.963888],[3.966082,-2.484793,6.419636,6.872649,3.390592,-0.207501,7.010350,7.325975,9.260734,-5.578428,-8.354073,4.718185,8.099762]],[[6.003954,-4.838429,5.966143,-2.724234,-0.590949,7.340339,9.725727,3.922735,-1.845399,-7.778998,4.444285,2.539166,-7.199099],[5.234972,-2.130410,6.236848,-1.566202,-1.669018,3.812909,0.332953,-9.019638,-7.364264,9.240174,-4.967198,-4.172934,-3.165756]],[[-1.740106,1.177757,2.289998,2.286894,-3.134210,3.105274,-7.689238,-3.566652,-1.336883,0.664723,-0.075356,-4.528223,6.456507],[8.212122,6.227348,7.202505,2.462764,-4.548638,4.077311,3.150754,-7.902589,-5.968342,-9.833382,7.835972,7.162223,-5.760791]],[[-0.344903,0.499366,5.830209,5.407275,-3.312806,-5.773628,-4.240924,-9.314102,-4.861325,5.514524,-5.357340,6.845169,-4.195319],[1.670478,3.975268,8.626777,-1.022744,-8.124546,-5.351260,-5.199182,-3.484544,-0.951941,-2.238774,3.868114,-1.789936,8.880495]],[[-1.691571,-5.860696,5.550888,-3.616935,2.183563,-5.791500,7.879884,0.215713,2.364054,-2.176793,-8.690329,-6.362989,-9.780153],[-5.190823,-5.204224,4.798360,-4.012237,4.596041,-9.274875,0.325381,0.199791,4.977646,-2.164093,-9.772488,1.130437,2.518736]]], dtype = "float32")#candidate|10514|(9, 2, 13)|const|float32
uop_10515 = relay.acosh(const_10514.astype('float32')) # shape=(9, 2, 13)
output = relay.Tuple([uop_10515,])
output2 = relay.Tuple([uop_10515,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

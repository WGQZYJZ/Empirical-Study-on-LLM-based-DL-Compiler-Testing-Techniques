==========mod==========
#[version = "0.0.5"]
def @func_9211(%var_9155: float32, %var_9157: Tensor[(975), int64], %var_9160: Tensor[(2400), uint32]) -> (Tensor[(65, 1), int64], float32, Tensor[(65), int64], Tensor[(975), int64], Tensor[(1170), float32], Tensor[(2400), uint32], Tensor[(10, 5, 14), uint16], Tensor[(70), float64], Tensor[(70, 1), float64], Tensor[(35), float64]) {
  %0 = cast(%var_9155, dtype="float32") /* ty=float32 */;
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(65), int64] */, dtype="int64") /* ty=Tensor[(65), int64] */;
  %2 = cast(%var_9157, dtype="int64") /* ty=Tensor[(975), int64] */;
  %3 = reshape(%0, newshape=[]) /* ty=float32 */;
  %4 = reshape(%1, newshape=[65, 1]) /* ty=Tensor[(65, 1), int64] */;
  %5 = reshape(%2, newshape=[975]) /* ty=Tensor[(975), int64] */;
  %6 = @func_5190(%3, %4, %5) /* ty=(Tensor[(1, 9, 9), float32], Tensor[(10, 5, 7), float32], Tensor[(65, 1), int64], Tensor[(975), int64]) */;
  %7 = cast(%var_9155, dtype="int8") /* ty=int8 */;
  %8 = cast(%var_9160, dtype="uint32") /* ty=Tensor[(2400), uint32] */;
  %9 = reshape(%7, newshape=[]) /* ty=int8 */;
  %10 = reshape(%8, newshape=[2400]) /* ty=Tensor[(2400), uint32] */;
  %11 = @func_2961(%9, %10) /* ty=(Tensor[(9, 12, 7), float64], int8, Tensor[(1170), float32], int8, Tensor[(10, 16, 15), uint32], Tensor[(2400), uint32]) */;
  %12 = @func_6242() /* ty=(Tensor[(10, 5, 14), float64],) */;
  %13 = %12.0;
  %14 = cast(%13, dtype="float64") /* ty=Tensor[(10, 5, 14), float64] */;
  %15 = reshape(%14, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), float64] */;
  %16 = @func_6854(%15) /* ty=(Tensor[(10, 5, 14), bool],) */;
  %17 = %16.0;
  %18 = cast(%13, dtype="uint16") /* ty=Tensor[(10, 5, 14), uint16] */;
  %19 = shape_of(%17, dtype="int32") /* ty=Tensor[(3), int32] */;
  %20 = cast(%17, dtype="uint16") /* ty=Tensor[(10, 5, 14), uint16] */;
  %21 = dyn.reshape(%18, %19, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %22 = cast(meta[relay.Constant][1] /* ty=Tensor[(70, 1), float64] */, dtype="float64") /* ty=Tensor[(70, 1), float64] */;
  %23 = reshape(%22, newshape=[70]) /* ty=Tensor[(70), float64] */;
  %24 = @func_8262(%23) /* ty=(Tensor[(35), float64], Tensor[(70), float64], Tensor[(70), float64], Tensor[(14, 14, 5), uint32]) */;
  %25 = @func_8846() /* ty=(Tensor[(35), float64],) */;
  %26 = %6.2;
  %27 = %11.2;
  %28 = left_shift(%20, %21) /* ty=Tensor[(10, 5, 14), uint16] */;
  %29 = %24.1;
  %30 = %25.0;
  (%26, %var_9155, meta[relay.Constant][0] /* ty=Tensor[(65), int64] */, %var_9157, %27, %var_9160, %28, %29, meta[relay.Constant][1] /* ty=Tensor[(70, 1), float64] */, %30)
}

def @func_8480(%var_8467: Tensor[(5, 11, 15), float32]) -> (Tensor[(5, 11, 15), float32],) {
  %31 = cast(%var_8467, dtype="float32") /* ty=Tensor[(5, 11, 15), float32] */;
  %32 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(5, 11, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %33 = cast(meta[relay.Constant][2] /* ty=Tensor[(5, 11, 15), float32] */, dtype="float32") /* ty=Tensor[(5, 11, 15), float32] */;
  %34 = dyn.reshape(%31, %32, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %35 = floor_mod(%33, %34) /* ty=Tensor[(5, 11, 15), float32] */;
  (%35,)
}

def @func_8503(%var_8498: Tensor[(70), float64]) -> (Tensor[(10, 5, 14), float64], Tensor[(35, 2), uint8], Tensor[(70), float64]) {
  %36 = @func_6151() /* ty=(Tensor[(10, 5, 14), float64],) */;
  %37 = cast(%var_8498, dtype="float64") /* ty=Tensor[(70), float64] */;
  %38 = cast(%var_8498, dtype="float64") /* ty=Tensor[(70), float64] */;
  %39 = reshape(%37, newshape=[35, 2]) /* ty=Tensor[(35, 2), float64] */;
  %40 = reshape(%38, newshape=[35, 2]) /* ty=Tensor[(35, 2), float64] */;
  %41 = @func_5860(%39, %40) /* ty=(Tensor[(35, 2), uint8], Tensor[(35, 2), float32]) */;
  %42 = %36.0;
  %43 = %41.0;
  (%42, %43, %var_8498)
}

def @func_6151() -> (Tensor[(10, 5, 14), float64],) {
  %44 = @func_5887() /* ty=Tensor[(10, 5, 14), float64] */;
  (%44,)
}

def @func_9580() -> Tensor[(4, 15, 3), float32] {
  %45 = cast(meta[relay.Constant][3] /* ty=Tensor[(4, 15, 3), float32] */, dtype="float32") /* ty=Tensor[(4, 15, 3), float32] */;
  log(%45) /* ty=Tensor[(4, 15, 3), float32] */
}

def @func_5983(%var_5979: int8) -> (Tensor[(35), float64], Tensor[(7, 5, 1), int8], int8) {
  %46 = @func_5812() /* ty=(Tensor[(35), float64],) */;
  %47 = %46.0;
  %48 = cast(%47, dtype="float64") /* ty=Tensor[(35), float64] */;
  %49 = cast(%var_5979, dtype="int8") /* ty=int8 */;
  %50 = reshape(%49, newshape=[]) /* ty=int8 */;
  %51 = @func_2369(%50) /* ty=(Tensor[(7, 5, 1), int8],) */;
  %52 = sigmoid(%48) /* ty=Tensor[(35), float64] */;
  %53 = %51.0;
  (%52, %53, %var_5979)
}

def @func_419(%var_384: Tensor[(9, 10, 10), uint8], %var_385: Tensor[(9, 10, 10), uint8], %var_391: Tensor[(294), int16], %var_415: Tensor[(1008), float32]) -> (Tensor[(9, 10, 10), bool], Tensor[(7, 6, 7), int16], int16, Tensor[(294), int16], Tensor[(7, 6, 7), int16], Tensor[(70), uint64], Tensor[(1008), float32]) {
  %54 = cast(%var_385, dtype="bool") /* ty=Tensor[(9, 10, 10), bool] */;
  %55 = shape_of(%var_384, dtype="int32") /* ty=Tensor[(3), int32] */;
  %56 = cast(%var_384, dtype="bool") /* ty=Tensor[(9, 10, 10), bool] */;
  %57 = dyn.reshape(%54, %55, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %58 = cast(meta[relay.Constant][4] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %59 = cast(%var_391, dtype="int16") /* ty=Tensor[(294), int16] */;
  %60 = reshape(%58, newshape=[]) /* ty=int16 */;
  %61 = reshape(%59, newshape=[7, 6, 7]) /* ty=Tensor[(7, 6, 7), int16] */;
  %62 = @func_218(%60, %61) /* ty=(Tensor[(7, 6, 7), int16],) */;
  %63 = cast(meta[relay.Constant][4] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %64 = %62.0;
  %65 = cast(%64, dtype="int16") /* ty=Tensor[(7, 6, 7), int16] */;
  %66 = reshape(%63, newshape=[]) /* ty=int16 */;
  %67 = reshape(%65, newshape=[7, 6, 7]) /* ty=Tensor[(7, 6, 7), int16] */;
  %68 = @func_218(%66, %67) /* ty=(Tensor[(7, 6, 7), int16],) */;
  %69 = cast(%var_415, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %70 = reshape(%69, newshape=[12, 14, 6]) /* ty=Tensor[(12, 14, 6), float32] */;
  %71 = @func_379(%70) /* ty=(Tensor[(12, 14, 6), float64], Tensor[(7, 2, 5), float32], Tensor[(70), uint64]) */;
  %72 = less_equal(%56, %57) /* ty=Tensor[(9, 10, 10), bool] */;
  %73 = %68.0;
  %74 = %71.2;
  (%72, %64, meta[relay.Constant][4] /* ty=int16 */, %var_391, %73, %74, %var_415)
}

def @func_379(%var_356: Tensor[(12, 14, 6), float32]) -> (Tensor[(12, 14, 6), float64], Tensor[(7, 2, 5), float32], Tensor[(70), uint64]) {
  %75 = cast(%var_356, dtype="float32") /* ty=Tensor[(12, 14, 6), float32] */;
  %76 = asin(%75) /* ty=Tensor[(12, 14, 6), float32] */;
  %77 = cast(%76, dtype="float64") /* ty=Tensor[(12, 14, 6), float64] */;
  %78 = cast(meta[relay.Constant][5] /* ty=Tensor[(70), uint64] */, dtype="uint64") /* ty=Tensor[(70), uint64] */;
  %79 = reshape(%78, newshape=[7, 2, 5]) /* ty=Tensor[(7, 2, 5), uint64] */;
  %80 = @func_148(%79) /* ty=(Tensor[(7, 2, 5), uint64], Tensor[(7, 2, 5), float32]) */;
  %81 = tan(%77) /* ty=Tensor[(12, 14, 6), float64] */;
  %82 = %80.1;
  (%81, %82, meta[relay.Constant][5] /* ty=Tensor[(70), uint64] */)
}

def @func_7372(%var_7332: Tensor[(7, 14, 11), float32], %var_7346: Tensor[(630), int64], %var_7347: Tensor[(1755, 1), float64], %var_7354: Tensor[(1008), float32], %var_7364: Tensor[(35), float64]) -> (Tensor[(7, 14, 11), float32], Tensor[(2, 15, 7), float64], Tensor[(630), int64], Tensor[(1008), float32], Tensor[(1755, 70), float64], Tensor[(35), float64], Tensor[(35), float64]) {
  %83 = cast(%var_7332, dtype="float32") /* ty=Tensor[(7, 14, 11), float32] */;
  %84 = cast(%var_7346, dtype="int64") /* ty=Tensor[(630), int64] */;
  %85 = cast(%var_7347, dtype="float64") /* ty=Tensor[(1755, 1), float64] */;
  %86 = reshape(%84, newshape=[630]) /* ty=Tensor[(630), int64] */;
  %87 = reshape(%85, newshape=[15, 117]) /* ty=Tensor[(15, 117), float64] */;
  %88 = @func_6966(%86, %87) /* ty=(Tensor[(35, 1), float64], Tensor[(3, 14, 15), int64], Tensor[(630), int64], Tensor[(3, 14, 15), int64], Tensor[(2, 15, 7), float64], Tensor[(210), float64], Tensor[(15, 117), float64]) */;
  %89 = cast(%var_7354, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %90 = reshape(%89, newshape=[12, 14, 6]) /* ty=Tensor[(12, 14, 6), float32] */;
  %91 = @func_379(%90) /* ty=(Tensor[(12, 14, 6), float64], Tensor[(7, 2, 5), float32], Tensor[(70), uint64]) */;
  %92 = %91.2;
  %93 = cast(%var_7347, dtype="float64") /* ty=Tensor[(1755, 1), float64] */;
  %94 = cast(%92, dtype="float64") /* ty=Tensor[(70), float64] */;
  %95 = %88.4;
  %96 = cast(%95, dtype="float64") /* ty=Tensor[(2, 15, 7), float64] */;
  %97 = cast(%95, dtype="float64") /* ty=Tensor[(2, 15, 7), float64] */;
  %98 = cast(%var_7347, dtype="float64") /* ty=Tensor[(1755, 1), float64] */;
  %99 = cast(%var_7364, dtype="float64") /* ty=Tensor[(35), float64] */;
  %100 = reshape(%96, newshape=[2, 15, 7]) /* ty=Tensor[(2, 15, 7), float64] */;
  %101 = reshape(%97, newshape=[2, 15, 7]) /* ty=Tensor[(2, 15, 7), float64] */;
  %102 = reshape(%98, newshape=[1755]) /* ty=Tensor[(1755), float64] */;
  %103 = reshape(%99, newshape=[35]) /* ty=Tensor[(35), float64] */;
  %104 = @func_2685(%100, %101, %102, %103) /* ty=(Tensor[(2, 15, 7), float64], Tensor[(128), float64], Tensor[(1755), float64], Tensor[(35), float64], Tensor[(2, 15, 7), uint64], Tensor[(294), bool], Tensor[(70), uint64], Tensor[(1008), float32]) */;
  %105 = cosh(%83) /* ty=Tensor[(7, 14, 11), float32] */;
  %106 = divide(%93, %94) /* ty=Tensor[(1755, 70), float64] */;
  %107 = %104.3;
  (%105, %95, %var_7346, %var_7354, %106, %107, %var_7364)
}

def @func_10284(%var_10270: Tensor[(2, 5, 13), int32], %var_10271: Tensor[(2, 5, 13), int32]) -> (Tensor[(2, 5, 13), int32], Tensor[(2, 5, 13), float64]) {
  %108 = cast(%var_10271, dtype="int32") /* ty=Tensor[(2, 5, 13), int32] */;
  %109 = shape_of(%var_10270, dtype="int32") /* ty=Tensor[(3), int32] */;
  %110 = cast(%var_10270, dtype="int32") /* ty=Tensor[(2, 5, 13), int32] */;
  %111 = dyn.reshape(%108, %109, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %112 = cast(%var_10270, dtype="float64") /* ty=Tensor[(2, 5, 13), float64] */;
  %113 = add(%110, %111) /* ty=Tensor[(2, 5, 13), int32] */;
  %114 = sinh(%112) /* ty=Tensor[(2, 5, 13), float64] */;
  (%113, %114)
}

def @func_6447(%var_6436: Tensor[(252, 4), float32]) -> (Tensor[(10, 5, 14), float64], Tensor[(5, 13, 3), float64], Tensor[(195), float64], Tensor[(7, 2, 5), float32], Tensor[(252, 4), float32], Tensor[(7, 5, 1), int8], int8) {
  %115 = cast(meta[relay.Constant][6] /* ty=Tensor[(195), float64] */, dtype="float64") /* ty=Tensor[(195), float64] */;
  %116 = reshape(%115, newshape=[5, 13, 3]) /* ty=Tensor[(5, 13, 3), float64] */;
  %117 = cast(%var_6436, dtype="float32") /* ty=Tensor[(252, 4), float32] */;
  %118 = reshape(%117, newshape=[12, 14, 6]) /* ty=Tensor[(12, 14, 6), float32] */;
  %119 = @func_379(%118) /* ty=(Tensor[(12, 14, 6), float64], Tensor[(7, 2, 5), float32], Tensor[(70), uint64]) */;
  %120 = cast(meta[relay.Constant][7] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %121 = reshape(%120, newshape=[]) /* ty=int8 */;
  %122 = @func_5983(%121) /* ty=(Tensor[(35), float64], Tensor[(7, 5, 1), int8], int8) */;
  %123 = @func_5599() /* ty=Tensor[(10, 5, 14), float64] */;
  %124 = @func_4723(%116) /* ty=Tensor[(5, 13, 3), float64] */;
  %125 = %119.1;
  %126 = %122.1;
  (%123, %124, meta[relay.Constant][6] /* ty=Tensor[(195), float64] */, %125, %var_6436, %126, meta[relay.Constant][7] /* ty=int8 */)
}

def @func_5318(%var_5299: float32, %var_5300: Tensor[(6, 3, 1), float32]) -> (Tensor[(6, 3, 1), float32], Tensor[(7, 5, 1), int8], Tensor[(1170), float32], Tensor[(7, 5, 1), int8], Tensor[(11, 12, 1), bool], Tensor[(132), uint8]) {
  %127 = cast(%var_5299, dtype="float32") /* ty=float32 */;
  %128 = cast(%var_5300, dtype="float32") /* ty=Tensor[(6, 3, 1), float32] */;
  %129 = cast(meta[relay.Constant][8] /* ty=Tensor[(1170), float32] */, dtype="float32") /* ty=Tensor[(1170), float32] */;
  %130 = cast(%var_5299, dtype="int8") /* ty=int8 */;
  %131 = reshape(%129, newshape=[9, 10, 13]) /* ty=Tensor[(9, 10, 13), float32] */;
  %132 = reshape(%130, newshape=[]) /* ty=int8 */;
  %133 = @func_2508(%131, %132) /* ty=(Tensor[(9, 10, 13), float32], Tensor[(7, 5, 1), int8], int8) */;
  %134 = cast(%var_5299, dtype="int8") /* ty=int8 */;
  %135 = reshape(%134, newshape=[]) /* ty=int8 */;
  %136 = @func_2369(%135) /* ty=(Tensor[(7, 5, 1), int8],) */;
  %137 = cast(%var_5299, dtype="uint8") /* ty=uint8 */;
  %138 = cast(meta[relay.Constant][9] /* ty=Tensor[(132), uint8] */, dtype="uint8") /* ty=Tensor[(132), uint8] */;
  %139 = reshape(%137, newshape=[]) /* ty=uint8 */;
  %140 = reshape(%138, newshape=[11, 12, 1]) /* ty=Tensor[(11, 12, 1), uint8] */;
  %141 = @func_3153(%139, %140) /* ty=(Tensor[(11, 12, 1), bool],) */;
  %142 = minimum(%127, %128) /* ty=Tensor[(6, 3, 1), float32] */;
  %143 = %133.1;
  %144 = %136.0;
  %145 = %141.0;
  (%142, %143, meta[relay.Constant][8] /* ty=Tensor[(1170), float32] */, %144, %145, meta[relay.Constant][9] /* ty=Tensor[(132), uint8] */)
}

def @func_7937(%var_7926: Tensor[(70), uint64]) -> (Tensor[(6, 6, 10), float32], Tensor[(70), uint64], Tensor[(70), uint64], Tensor[(5, 13, 3), float64], Tensor[(195), float64]) {
  %146 = @func_7207() /* ty=(Tensor[(6, 6, 10), float32],) */;
  %147 = cast(%var_7926, dtype="uint64") /* ty=Tensor[(70), uint64] */;
  %148 = reshape(%147, newshape=[70]) /* ty=Tensor[(70), uint64] */;
  %149 = @func_7543(%148) /* ty=(Tensor[(35), float32], Tensor[(7, 2, 5), uint64], Tensor[(70), uint64]) */;
  %150 = cast(meta[relay.Constant][10] /* ty=Tensor[(195), float64] */, dtype="float64") /* ty=Tensor[(195), float64] */;
  %151 = reshape(%150, newshape=[5, 13, 3]) /* ty=Tensor[(5, 13, 3), float64] */;
  %152 = %146.0;
  %153 = %149.2;
  %154 = @func_4723(%151) /* ty=Tensor[(5, 13, 3), float64] */;
  (%152, %153, %var_7926, %154, meta[relay.Constant][10] /* ty=Tensor[(195), float64] */)
}

def @func_6829() -> (Tensor[(10, 5, 14), float64],) {
  %155 = @func_6151() /* ty=(Tensor[(10, 5, 14), float64],) */;
  %156 = %155.0;
  (%156,)
}

def @func_7543(%var_7541: Tensor[(70), uint64]) -> (Tensor[(35), float32], Tensor[(7, 2, 5), uint64], Tensor[(70), uint64]) {
  %157 = @func_7530() /* ty=(Tensor[(10, 5, 14), float64], Tensor[(35), float32], Tensor[(35, 2), uint8], Tensor[(70), float64]) */;
  %158 = cast(%var_7541, dtype="uint64") /* ty=Tensor[(70), uint64] */;
  %159 = reshape(%158, newshape=[7, 2, 5]) /* ty=Tensor[(7, 2, 5), uint64] */;
  %160 = @func_148(%159) /* ty=(Tensor[(7, 2, 5), uint64], Tensor[(7, 2, 5), float32]) */;
  %161 = %157.1;
  %162 = %160.0;
  (%161, %162, %var_7541)
}

def @func_7530() -> (Tensor[(10, 5, 14), float64], Tensor[(35), float32], Tensor[(35, 2), uint8], Tensor[(70), float64]) {
  %163 = @func_6242() /* ty=(Tensor[(10, 5, 14), float64],) */;
  %164 = @func_5812() /* ty=(Tensor[(35), float64],) */;
  %165 = %164.0;
  %166 = cast(%165, dtype="float32") /* ty=Tensor[(35), float32] */;
  %167 = cast(meta[relay.Constant][11] /* ty=Tensor[(70), float64] */, dtype="float64") /* ty=Tensor[(70), float64] */;
  %168 = cast(meta[relay.Constant][11] /* ty=Tensor[(70), float64] */, dtype="float64") /* ty=Tensor[(70), float64] */;
  %169 = reshape(%167, newshape=[35, 2]) /* ty=Tensor[(35, 2), float64] */;
  %170 = reshape(%168, newshape=[35, 2]) /* ty=Tensor[(35, 2), float64] */;
  %171 = @func_5860(%169, %170) /* ty=(Tensor[(35, 2), uint8], Tensor[(35, 2), float32]) */;
  %172 = %163.0;
  %173 = log10(%166) /* ty=Tensor[(35), float32] */;
  %174 = %171.0;
  (%172, %173, %174, meta[relay.Constant][11] /* ty=Tensor[(70), float64] */)
}

def @func_9520(%var_9510: Tensor[(16, 8), float64], %var_9511: Tensor[(1755), float64], %var_9512: uint8) -> (Tensor[(10, 5, 14), bool], Tensor[(7, 5, 1), int8], Tensor[(910), int32], Tensor[(16, 8), float64], Tensor[(1755), float64], uint8) {
  %175 = @func_5887() /* ty=Tensor[(10, 5, 14), float64] */;
  %176 = cast(meta[relay.Constant][12] /* ty=Tensor[(10, 5, 14), float64] */, dtype="float64") /* ty=Tensor[(10, 5, 14), float64] */;
  %177 = shape_of(%175, dtype="int32") /* ty=Tensor[(3), int32] */;
  %178 = cast(%175, dtype="float64") /* ty=Tensor[(10, 5, 14), float64] */;
  %179 = dyn.reshape(%176, %177, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %180 = floor_divide(%178, %179) /* ty=Tensor[(10, 5, 14), float64] */;
  %181 = cast(%175, dtype="bool") /* ty=Tensor[(10, 5, 14), bool] */;
  %182 = shape_of(%180, dtype="int32") /* ty=Tensor[(3), int32] */;
  %183 = cast(%180, dtype="bool") /* ty=Tensor[(10, 5, 14), bool] */;
  %184 = dyn.reshape(%181, %182, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %185 = cast(meta[relay.Constant][13] /* ty=Tensor[(910), int32] */, dtype="int32") /* ty=Tensor[(910), int32] */;
  %186 = cast(%var_9510, dtype="float64") /* ty=Tensor[(16, 8), float64] */;
  %187 = cast(%var_9511, dtype="float64") /* ty=Tensor[(1755), float64] */;
  %188 = cast(%var_9512, dtype="uint8") /* ty=uint8 */;
  %189 = reshape(%185, newshape=[13, 14, 5]) /* ty=Tensor[(13, 14, 5), int32] */;
  %190 = reshape(%186, newshape=[128]) /* ty=Tensor[(128), float64] */;
  %191 = reshape(%187, newshape=[5, 351]) /* ty=Tensor[(5, 351), float64] */;
  %192 = reshape(%188, newshape=[]) /* ty=uint8 */;
  %193 = @func_7123(%189, %190, %191, %192) /* ty=(Tensor[(13, 14, 5), int32], Tensor[(132), uint8], Tensor[(128), float64], Tensor[(5, 351), float64], uint8, Tensor[(132), uint8], Tensor[(10, 5, 14), float64], Tensor[(7, 5, 1), int8], Tensor[(2, 504), float32]) */;
  %194 = less(%183, %184) /* ty=Tensor[(10, 5, 14), bool] */;
  %195 = %193.7;
  (%194, %195, meta[relay.Constant][13] /* ty=Tensor[(910), int32] */, %var_9510, %var_9511, %var_9512)
}

def @func_6242() -> (Tensor[(10, 5, 14), float64],) {
  %196 = @func_5599() /* ty=Tensor[(10, 5, 14), float64] */;
  (%196,)
}

def @func_9977() -> (Tensor[(10, 5, 14), float64], Tensor[(10, 5, 14), float64], Tensor[(35, 2), float32], Tensor[(70), float64], Tensor[(12, 12, 13), float64], Tensor[(1872), float64]) {
  %197 = cast(meta[relay.Constant][14] /* ty=Tensor[(70), float64] */, dtype="float64") /* ty=Tensor[(70), float64] */;
  %198 = cast(meta[relay.Constant][14] /* ty=Tensor[(70), float64] */, dtype="float64") /* ty=Tensor[(70), float64] */;
  %199 = reshape(%197, newshape=[35, 2]) /* ty=Tensor[(35, 2), float64] */;
  %200 = reshape(%198, newshape=[35, 2]) /* ty=Tensor[(35, 2), float64] */;
  %201 = @func_5860(%199, %200) /* ty=(Tensor[(35, 2), uint8], Tensor[(35, 2), float32]) */;
  %202 = cast(meta[relay.Constant][15] /* ty=Tensor[(1872), float64] */, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %203 = cast(meta[relay.Constant][15] /* ty=Tensor[(1872), float64] */, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %204 = reshape(%202, newshape=[12, 12, 13]) /* ty=Tensor[(12, 12, 13), float64] */;
  %205 = reshape(%203, newshape=[12, 12, 13]) /* ty=Tensor[(12, 12, 13), float64] */;
  %206 = @func_9557() /* ty=Tensor[(10, 5, 14), float64] */;
  %207 = @func_9710() /* ty=Tensor[(10, 5, 14), float64] */;
  %208 = %201.1;
  %209 = @func_3759(%204, %205) /* ty=Tensor[(12, 12, 13), float64] */;
  (%206, %207, %208, meta[relay.Constant][14] /* ty=Tensor[(70), float64] */, %209, meta[relay.Constant][15] /* ty=Tensor[(1872), float64] */)
}

def @func_5599() -> Tensor[(10, 5, 14), float64] {
  %210 = cast(meta[relay.Constant][16] /* ty=Tensor[(10, 5, 14), float64] */, dtype="float64") /* ty=Tensor[(10, 5, 14), float64] */;
  sigmoid(%210) /* ty=Tensor[(10, 5, 14), float64] */
}

def @func_10114() -> (Tensor[(10, 5, 14), float64],) {
  %211 = @func_5599() /* ty=Tensor[(10, 5, 14), float64] */;
  (%211,)
}

def @func_7123(%var_7087: Tensor[(13, 14, 5), int32], %var_7099: Tensor[(128), float64], %var_7100: Tensor[(5, 351), float64], %var_7101: uint8) -> (Tensor[(13, 14, 5), int32], Tensor[(132), uint8], Tensor[(128), float64], Tensor[(5, 351), float64], uint8, Tensor[(132), uint8], Tensor[(10, 5, 14), float64], Tensor[(7, 5, 1), int8], Tensor[(2, 504), float32]) {
  %212 = cast(%var_7087, dtype="int32") /* ty=Tensor[(13, 14, 5), int32] */;
  %213 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(13, 14, 5), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %214 = cast(meta[relay.Constant][17] /* ty=Tensor[(13, 14, 5), int32] */, dtype="int32") /* ty=Tensor[(13, 14, 5), int32] */;
  %215 = dyn.reshape(%212, %213, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %216 = cast(%var_7099, dtype="float64") /* ty=Tensor[(128), float64] */;
  %217 = cast(%var_7100, dtype="float64") /* ty=Tensor[(5, 351), float64] */;
  %218 = cast(%var_7101, dtype="uint8") /* ty=uint8 */;
  %219 = cast(meta[relay.Constant][18] /* ty=Tensor[(132), uint8] */, dtype="uint8") /* ty=Tensor[(132), uint8] */;
  %220 = reshape(%216, newshape=[128]) /* ty=Tensor[(128), float64] */;
  %221 = reshape(%217, newshape=[1755]) /* ty=Tensor[(1755), float64] */;
  %222 = reshape(%218, newshape=[]) /* ty=uint8 */;
  %223 = reshape(%219, newshape=[132]) /* ty=Tensor[(132), uint8] */;
  %224 = @func_6615(%220, %221, %222, %223) /* ty=(Tensor[(35, 1), float64], Tensor[(7, 10), uint64], Tensor[(70), uint64], Tensor[(128), float64], Tensor[(1755), float64], uint8, Tensor[(132), uint8], Tensor[(18), float32]) */;
  %225 = cast(%var_7099, dtype="float64") /* ty=Tensor[(128), float64] */;
  %226 = reshape(%225, newshape=[32, 4]) /* ty=Tensor[(32, 4), float64] */;
  %227 = @func_6215(%226) /* ty=(Tensor[(10, 5, 14), float64], Tensor[(9, 15, 13), float64], Tensor[(32, 4), float64], Tensor[(35), float64], Tensor[(10, 5, 14), float64], Tensor[(1755), bool]) */;
  %228 = cast(meta[relay.Constant][19] /* ty=Tensor[(2, 504), float32] */, dtype="float32") /* ty=Tensor[(2, 504), float32] */;
  %229 = reshape(%228, newshape=[252, 4]) /* ty=Tensor[(252, 4), float32] */;
  %230 = @func_6447(%229) /* ty=(Tensor[(10, 5, 14), float64], Tensor[(5, 13, 3), float64], Tensor[(195), float64], Tensor[(7, 2, 5), float32], Tensor[(252, 4), float32], Tensor[(7, 5, 1), int8], int8) */;
  %231 = right_shift(%214, %215) /* ty=Tensor[(13, 14, 5), int32] */;
  %232 = %224.6;
  %233 = %227.0;
  %234 = %230.5;
  (%231, %232, %var_7099, %var_7100, %var_7101, meta[relay.Constant][18] /* ty=Tensor[(132), uint8] */, %233, %234, meta[relay.Constant][19] /* ty=Tensor[(2, 504), float32] */)
}

def @func_8762(%var_8700: Tensor[(132), float32], %var_8707: Tensor[(14, 5), float64], %var_8732: Tensor[(1920), float32]) -> (Tensor[(10, 5, 14), float64], Tensor[(6, 11, 2), float32], Tensor[(132), float32], Tensor[(14, 14, 5), uint32], Tensor[(14, 5), float64], Tensor[(10, 16, 12), float32], Tensor[(1920), float32], Tensor[(10, 6, 5), float64]) {
  %235 = @func_5599() /* ty=Tensor[(10, 5, 14), float64] */;
  %236 = cast(%235, dtype="float64") /* ty=Tensor[(10, 5, 14), float64] */;
  %237 = cast(%var_8700, dtype="float32") /* ty=Tensor[(132), float32] */;
  %238 = reshape(%237, newshape=[6, 11, 2]) /* ty=Tensor[(6, 11, 2), float32] */;
  %239 = @func_5776(%238) /* ty=(Tensor[(6, 11, 2), float32],) */;
  %240 = cast(%var_8707, dtype="float64") /* ty=Tensor[(14, 5), float64] */;
  %241 = reshape(%240, newshape=[70]) /* ty=Tensor[(70), float64] */;
  %242 = @func_8262(%241) /* ty=(Tensor[(35), float64], Tensor[(70), float64], Tensor[(70), float64], Tensor[(14, 14, 5), uint32]) */;
  %243 = cast(%var_8732, dtype="float32") /* ty=Tensor[(1920), float32] */;
  %244 = reshape(%243, newshape=[10, 16, 12]) /* ty=Tensor[(10, 16, 12), float32] */;
  %245 = @func_6802() /* ty=(Tensor[(10, 6, 5), float64],) */;
  %246 = %245.0;
  %247 = cast(%246, dtype="float64") /* ty=Tensor[(10, 6, 5), float64] */;
  %248 = rsqrt(%247) /* ty=Tensor[(10, 6, 5), float64] */;
  %249 = cast(%248, dtype="float64") /* ty=Tensor[(10, 6, 5), float64] */;
  %250 = log10(%236) /* ty=Tensor[(10, 5, 14), float64] */;
  %251 = %239.0;
  %252 = %242.3;
  %253 = @func_5931(%244) /* ty=Tensor[(10, 16, 12), float32] */;
  %254 = atan(%249) /* ty=Tensor[(10, 6, 5), float64] */;
  (%250, %251, %var_8700, %252, %var_8707, %253, %var_8732, %254)
}

def @func_1715(%var_1710: Tensor[(1, 5, 7), float64]) -> Tensor[(1, 5, 7), float64] {
  %255 = cast(%var_1710, dtype="float64") /* ty=Tensor[(1, 5, 7), float64] */;
  log10(%255) /* ty=Tensor[(1, 5, 7), float64] */
}

def @func_9710() -> Tensor[(10, 5, 14), float64] {
  %256 = @func_8284() /* ty=(Tensor[(10, 5, 14), float64],) */;
  %256.0
}

def @func_6939() -> Tensor[(10, 5, 14), float64] {
  %257 = @func_6829() /* ty=(Tensor[(10, 5, 14), float64],) */;
  %257.0
}

def @func_6854(%var_6834: Tensor[(10, 5, 14), float64]) -> (Tensor[(10, 5, 14), bool],) {
  %258 = @func_5887() /* ty=Tensor[(10, 5, 14), float64] */;
  %259 = cast(%var_6834, dtype="float32") /* ty=Tensor[(10, 5, 14), float32] */;
  %260 = shape_of(%258, dtype="int32") /* ty=Tensor[(3), int32] */;
  %261 = cast(%258, dtype="float32") /* ty=Tensor[(10, 5, 14), float32] */;
  %262 = dyn.reshape(%259, %260, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %263 = divide(%261, %262) /* ty=Tensor[(10, 5, 14), float32] */;
  %264 = cast(%var_6834, dtype="bool") /* ty=Tensor[(10, 5, 14), bool] */;
  %265 = shape_of(%263, dtype="int32") /* ty=Tensor[(3), int32] */;
  %266 = cast(%263, dtype="bool") /* ty=Tensor[(10, 5, 14), bool] */;
  %267 = dyn.reshape(%264, %265, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %268 = logical_or(%266, %267) /* ty=Tensor[(10, 5, 14), bool] */;
  (%268,)
}

def @func_9612() -> (Tensor[(10, 5, 14), float64],) {
  %269 = @func_9557() /* ty=Tensor[(10, 5, 14), float64] */;
  (%269,)
}

def @func_9017() -> (Tensor[(35, 2), uint8], Tensor[(9, 15, 13), float64], Tensor[(15, 117), float64]) {
  %270 = @func_7530() /* ty=(Tensor[(10, 5, 14), float64], Tensor[(35), float32], Tensor[(35, 2), uint8], Tensor[(70), float64]) */;
  %271 = cast(meta[relay.Constant][20] /* ty=Tensor[(15, 117), float64] */, dtype="float64") /* ty=Tensor[(15, 117), float64] */;
  %272 = reshape(%271, newshape=[9, 15, 13]) /* ty=Tensor[(9, 15, 13), float64] */;
  %273 = %270.2;
  %274 = @func_1627(%272) /* ty=Tensor[(9, 15, 13), float64] */;
  (%273, %274, meta[relay.Constant][20] /* ty=Tensor[(15, 117), float64] */)
}

def @func_9895() -> Tensor[(14, 14, 5), uint32] {
  @func_7444() /* ty=Tensor[(14, 14, 5), uint32] */
}

def @func_7175(%var_7149: Tensor[(2400), uint32]) -> (Tensor[(10, 5, 14), float64], Tensor[(10, 16, 15), uint32], int8, Tensor[(2400), uint32]) {
  %275 = @func_6829() /* ty=(Tensor[(10, 5, 14), float64],) */;
  %276 = cast(meta[relay.Constant][21] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %277 = cast(%var_7149, dtype="uint32") /* ty=Tensor[(2400), uint32] */;
  %278 = reshape(%276, newshape=[]) /* ty=int8 */;
  %279 = reshape(%277, newshape=[2400]) /* ty=Tensor[(2400), uint32] */;
  %280 = @func_2961(%278, %279) /* ty=(Tensor[(9, 12, 7), float64], int8, Tensor[(1170), float32], int8, Tensor[(10, 16, 15), uint32], Tensor[(2400), uint32]) */;
  %281 = %275.0;
  %282 = %280.4;
  (%281, %282, meta[relay.Constant][21] /* ty=int8 */, %var_7149)
}

def @func_10262(%var_10256: Tensor[(35, 14), float32]) -> (Tensor[(7, 2, 5), float32], Tensor[(70), uint64], Tensor[(35, 14), bool]) {
  %283 = cast(meta[relay.Constant][22] /* ty=Tensor[(70), uint64] */, dtype="uint64") /* ty=Tensor[(70), uint64] */;
  %284 = reshape(%283, newshape=[7, 2, 5]) /* ty=Tensor[(7, 2, 5), uint64] */;
  %285 = @func_148(%284) /* ty=(Tensor[(7, 2, 5), uint64], Tensor[(7, 2, 5), float32]) */;
  %286 = @func_7272() /* ty=(Tensor[(35, 1), float32],) */;
  %287 = %286.0;
  %288 = cast(%287, dtype="bool") /* ty=Tensor[(35, 1), bool] */;
  %289 = cast(%var_10256, dtype="bool") /* ty=Tensor[(35, 14), bool] */;
  %290 = %285.1;
  %291 = logical_or(%288, %289) /* ty=Tensor[(35, 14), bool] */;
  (%290, meta[relay.Constant][22] /* ty=Tensor[(70), uint64] */, %291)
}

def @func_7723() -> (Tensor[(10, 5, 14), float64],) {
  %292 = @func_6829() /* ty=(Tensor[(10, 5, 14), float64],) */;
  %293 = %292.0;
  (%293,)
}

def @func_8617(%var_8576: uint8, %var_8577: Tensor[(132), uint8], %var_8584: Tensor[(18, 1), float32]) -> (Tensor[(10, 6, 5), float64], Tensor[(11, 12, 1), bool], uint8, Tensor[(132), uint8], Tensor[(10, 5, 7), float32], Tensor[(70), uint64], Tensor[(128), float64], Tensor[(1755), float64], Tensor[(35, 1), float64], Tensor[(18, 1), float32]) {
  %294 = @func_6802() /* ty=(Tensor[(10, 6, 5), float64],) */;
  %295 = cast(%var_8576, dtype="uint8") /* ty=uint8 */;
  %296 = cast(%var_8577, dtype="uint8") /* ty=Tensor[(132), uint8] */;
  %297 = reshape(%295, newshape=[]) /* ty=uint8 */;
  %298 = reshape(%296, newshape=[11, 12, 1]) /* ty=Tensor[(11, 12, 1), uint8] */;
  %299 = @func_3153(%297, %298) /* ty=(Tensor[(11, 12, 1), bool],) */;
  %300 = cast(meta[relay.Constant][23] /* ty=Tensor[(70), uint64] */, dtype="uint64") /* ty=Tensor[(70), uint64] */;
  %301 = cast(meta[relay.Constant][24] /* ty=Tensor[(128), float64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
  %302 = cast(meta[relay.Constant][25] /* ty=Tensor[(1755), float64] */, dtype="float64") /* ty=Tensor[(1755), float64] */;
  %303 = cast(%var_8576, dtype="uint8") /* ty=uint8 */;
  %304 = cast(%var_8577, dtype="uint8") /* ty=Tensor[(132), uint8] */;
  %305 = cast(%var_8584, dtype="float32") /* ty=Tensor[(18, 1), float32] */;
  %306 = reshape(%300, newshape=[7, 10]) /* ty=Tensor[(7, 10), uint64] */;
  %307 = reshape(%301, newshape=[128]) /* ty=Tensor[(128), float64] */;
  %308 = reshape(%302, newshape=[1755]) /* ty=Tensor[(1755), float64] */;
  %309 = reshape(%303, newshape=[]) /* ty=uint8 */;
  %310 = reshape(%304, newshape=[132]) /* ty=Tensor[(132), uint8] */;
  %311 = reshape(%305, newshape=[18]) /* ty=Tensor[(18), float32] */;
  %312 = @func_6546(%306, %307, %308, %309, %310, %311) /* ty=(Tensor[(10, 5, 14), float64], Tensor[(7, 10), uint64], Tensor[(35), float64], Tensor[(35, 1), float64], Tensor[(128), float64], Tensor[(1755), float64], Tensor[(10, 5, 7), float32], Tensor[(175, 2), float32], Tensor[(11, 12, 1), bool], uint8, Tensor[(132), uint8], Tensor[(6, 3, 1), float32], Tensor[(18), float32], Tensor[(7, 2, 5), float32]) */;
  %313 = cast(%var_8584, dtype="float32") /* ty=Tensor[(18, 1), float32] */;
  %314 = %294.0;
  %315 = %299.0;
  %316 = %312.6;
  %317 = @func_6124() /* ty=Tensor[(35, 1), float64] */;
  %318 = atan(%313) /* ty=Tensor[(18, 1), float32] */;
  (%314, %315, %var_8576, %var_8577, %316, meta[relay.Constant][23] /* ty=Tensor[(70), uint64] */, meta[relay.Constant][24] /* ty=Tensor[(128), float64] */, meta[relay.Constant][25] /* ty=Tensor[(1755), float64] */, %317, %318)
}

def @func_3759(%var_3754: Tensor[(12, 12, 13), float64], %var_3755: Tensor[(12, 12, 13), float64]) -> Tensor[(12, 12, 13), float64] {
  %319 = cast(%var_3755, dtype="float64") /* ty=Tensor[(12, 12, 13), float64] */;
  %320 = shape_of(%var_3754, dtype="int32") /* ty=Tensor[(3), int32] */;
  %321 = cast(%var_3754, dtype="float64") /* ty=Tensor[(12, 12, 13), float64] */;
  %322 = dyn.reshape(%319, %320, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%321, %322) /* ty=Tensor[(12, 12, 13), float64] */
}

def @func_2508(%var_2489: Tensor[(9, 10, 13), float32], %var_2502: int8) -> (Tensor[(9, 10, 13), float32], Tensor[(7, 5, 1), int8], int8) {
  %323 = cast(meta[relay.Constant][26] /* ty=Tensor[(9, 10, 13), float32] */, dtype="float32") /* ty=Tensor[(9, 10, 13), float32] */;
  %324 = shape_of(%var_2489, dtype="int32") /* ty=Tensor[(3), int32] */;
  %325 = cast(%var_2489, dtype="float32") /* ty=Tensor[(9, 10, 13), float32] */;
  %326 = dyn.reshape(%323, %324, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %327 = cast(%var_2502, dtype="int8") /* ty=int8 */;
  %328 = reshape(%327, newshape=[]) /* ty=int8 */;
  %329 = @func_2369(%328) /* ty=(Tensor[(7, 5, 1), int8],) */;
  %330 = divide(%325, %326) /* ty=Tensor[(9, 10, 13), float32] */;
  %331 = %329.0;
  (%330, %331, %var_2502)
}

def @func_6334(%var_6297: Tensor[(1755), float64], %var_6305: Tensor[(195), float64]) -> (Tensor[(1755), float64], Tensor[(5, 13, 3), uint16], Tensor[(10, 5, 14), float32], Tensor[(9, 15, 13), bool]) {
  %332 = cast(%var_6305, dtype="float64") /* ty=Tensor[(195), float64] */;
  %333 = reshape(%332, newshape=[5, 13, 3]) /* ty=Tensor[(5, 13, 3), float64] */;
  %334 = @func_4723(%333) /* ty=Tensor[(5, 13, 3), float64] */;
  %335 = cast(%var_6305, dtype="uint16") /* ty=Tensor[(195), uint16] */;
  %336 = shape_of(%334, dtype="int32") /* ty=Tensor[(3), int32] */;
  %337 = cast(%334, dtype="uint16") /* ty=Tensor[(5, 13, 3), uint16] */;
  %338 = dyn.reshape(%335, %336, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %339 = @func_6151() /* ty=(Tensor[(10, 5, 14), float64],) */;
  %340 = %339.0;
  %341 = cast(%340, dtype="float32") /* ty=Tensor[(10, 5, 14), float32] */;
  %342 = cast(%var_6297, dtype="float64") /* ty=Tensor[(1755), float64] */;
  %343 = reshape(%342, newshape=[9, 15, 13]) /* ty=Tensor[(9, 15, 13), float64] */;
  %344 = @func_1627(%343) /* ty=Tensor[(9, 15, 13), float64] */;
  %345 = cast(%var_6297, dtype="float64") /* ty=Tensor[(1755), float64] */;
  %346 = reshape(%345, newshape=[9, 15, 13]) /* ty=Tensor[(9, 15, 13), float64] */;
  %347 = @func_1627(%346) /* ty=Tensor[(9, 15, 13), float64] */;
  %348 = cast(%347, dtype="bool") /* ty=Tensor[(9, 15, 13), bool] */;
  %349 = shape_of(%344, dtype="int32") /* ty=Tensor[(3), int32] */;
  %350 = cast(%344, dtype="bool") /* ty=Tensor[(9, 15, 13), bool] */;
  %351 = dyn.reshape(%348, %349, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %352 = add(%337, %338) /* ty=Tensor[(5, 13, 3), uint16] */;
  %353 = atanh(%341) /* ty=Tensor[(10, 5, 14), float32] */;
  %354 = greater(%350, %351) /* ty=Tensor[(9, 15, 13), bool] */;
  (%var_6297, %352, %353, %354)
}

def @func_3153(%var_3145: uint8, %var_3146: Tensor[(11, 12, 1), uint8]) -> (Tensor[(11, 12, 1), bool],) {
  %355 = cast(%var_3145, dtype="bool") /* ty=bool */;
  %356 = cast(%var_3146, dtype="bool") /* ty=Tensor[(11, 12, 1), bool] */;
  %357 = greater(%355, %356) /* ty=Tensor[(11, 12, 1), bool] */;
  (%357,)
}

def @func_5776(%var_5757: Tensor[(6, 11, 2), float32]) -> (Tensor[(6, 11, 2), float32],) {
  %358 = cast(%var_5757, dtype="float32") /* ty=Tensor[(6, 11, 2), float32] */;
  %359 = cosh(%358) /* ty=Tensor[(6, 11, 2), float32] */;
  (%359,)
}

def @func_8206() -> (Tensor[(10, 16, 15), bool], Tensor[(70), float64], Tensor[(35, 9), float64]) {
  %360 = @func_5687() /* ty=(Tensor[(35), float64], Tensor[(1, 5, 7), float64], Tensor[(10, 16, 15), uint32], Tensor[(2400), uint32]) */;
  %361 = %360.2;
  %362 = cast(%361, dtype="float64") /* ty=Tensor[(10, 16, 15), float64] */;
  %363 = asinh(%362) /* ty=Tensor[(10, 16, 15), float64] */;
  %364 = cast(%361, dtype="bool") /* ty=Tensor[(10, 16, 15), bool] */;
  %365 = shape_of(%363, dtype="int32") /* ty=Tensor[(3), int32] */;
  %366 = cast(%363, dtype="bool") /* ty=Tensor[(10, 16, 15), bool] */;
  %367 = dyn.reshape(%364, %365, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %368 = cast(meta[relay.Constant][27] /* ty=Tensor[(70), float64] */, dtype="float64") /* ty=Tensor[(70), float64] */;
  %369 = reshape(%368, newshape=[70]) /* ty=Tensor[(70), float64] */;
  %370 = @func_7082(%369) /* ty=(Tensor[(35, 2), float32], Tensor[(70), float64], Tensor[(35, 9), float32], Tensor[(35, 9), float32]) */;
  %371 = %370.2;
  %372 = cast(%371, dtype="float64") /* ty=Tensor[(35, 9), float64] */;
  %373 = not_equal(%366, %367) /* ty=Tensor[(10, 16, 15), bool] */;
  %374 = cosh(%372) /* ty=Tensor[(35, 9), float64] */;
  (%373, meta[relay.Constant][27] /* ty=Tensor[(70), float64] */, %374)
}

def @func_5812() -> (Tensor[(35), float64],) {
  %375 = @func_5687() /* ty=(Tensor[(35), float64], Tensor[(1, 5, 7), float64], Tensor[(10, 16, 15), uint32], Tensor[(2400), uint32]) */;
  %376 = %375.0;
  %377 = cast(%376, dtype="float64") /* ty=Tensor[(35), float64] */;
  %378 = exp(%377) /* ty=Tensor[(35), float64] */;
  (%378,)
}

def @func_8284() -> (Tensor[(10, 5, 14), float64],) {
  %379 = @func_7723() /* ty=(Tensor[(10, 5, 14), float64],) */;
  %380 = %379.0;
  (%380,)
}

def @func_6109(%var_6104: float32, %var_6105: Tensor[(18), float32]) -> (Tensor[(35), float64], Tensor[(6, 3, 1), float32], float32, Tensor[(18), float32]) {
  %381 = @func_5812() /* ty=(Tensor[(35), float64],) */;
  %382 = cast(%var_6104, dtype="float32") /* ty=float32 */;
  %383 = cast(%var_6105, dtype="float32") /* ty=Tensor[(18), float32] */;
  %384 = reshape(%382, newshape=[]) /* ty=float32 */;
  %385 = reshape(%383, newshape=[6, 3, 1]) /* ty=Tensor[(6, 3, 1), float32] */;
  %386 = @func_5318(%384, %385) /* ty=(Tensor[(6, 3, 1), float32], Tensor[(7, 5, 1), int8], Tensor[(1170), float32], Tensor[(7, 5, 1), int8], Tensor[(11, 12, 1), bool], Tensor[(132), uint8]) */;
  %387 = %381.0;
  %388 = %386.0;
  (%387, %388, %var_6104, %var_6105)
}

def @func_3435(%var_3421: Tensor[(10, 5, 7), float32]) -> Tensor[(10, 5, 7), float32] {
  %389 = cast(meta[relay.Constant][28] /* ty=Tensor[(10, 5, 7), float32] */, dtype="float32") /* ty=Tensor[(10, 5, 7), float32] */;
  %390 = shape_of(%var_3421, dtype="int32") /* ty=Tensor[(3), int32] */;
  %391 = cast(%var_3421, dtype="float32") /* ty=Tensor[(10, 5, 7), float32] */;
  %392 = dyn.reshape(%389, %390, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%391, %392) /* ty=Tensor[(10, 5, 7), float32] */
}

def @func_8838() -> (Tensor[(14, 14, 5), uint32], Tensor[(10, 5, 14), float64]) {
  %393 = @func_8799() /* ty=Tensor[(10, 5, 14), float64] */;
  %394 = cast(%393, dtype="float64") /* ty=Tensor[(10, 5, 14), float64] */;
  %395 = acosh(%394) /* ty=Tensor[(10, 5, 14), float64] */;
  %396 = cast(%395, dtype="float64") /* ty=Tensor[(10, 5, 14), float64] */;
  %397 = @func_7444() /* ty=Tensor[(14, 14, 5), uint32] */;
  %398 = cosh(%396) /* ty=Tensor[(10, 5, 14), float64] */;
  (%397, %398)
}

def @func_8799() -> Tensor[(10, 5, 14), float64] {
  @func_6939() /* ty=Tensor[(10, 5, 14), float64] */
}

def @func_6085(%var_6078: Tensor[(10, 16, 15), uint32]) -> (Tensor[(10, 16, 15), float64], Tensor[(10, 16, 15), float64]) {
  %399 = @func_5687() /* ty=(Tensor[(35), float64], Tensor[(1, 5, 7), float64], Tensor[(10, 16, 15), uint32], Tensor[(2400), uint32]) */;
  %400 = %399.2;
  %401 = cast(%400, dtype="float64") /* ty=Tensor[(10, 16, 15), float64] */;
  %402 = cast(%var_6078, dtype="float64") /* ty=Tensor[(10, 16, 15), float64] */;
  %403 = shape_of(%400, dtype="int32") /* ty=Tensor[(3), int32] */;
  %404 = cast(%400, dtype="float64") /* ty=Tensor[(10, 16, 15), float64] */;
  %405 = dyn.reshape(%402, %403, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %406 = sinh(%401) /* ty=Tensor[(10, 16, 15), float64] */;
  %407 = add(%404, %405) /* ty=Tensor[(10, 16, 15), float64] */;
  (%406, %407)
}

def @func_4375(%var_4369: Tensor[(4, 5, 6), float32]) -> (Tensor[(4, 5, 6), float32],) {
  %408 = cast(%var_4369, dtype="float32") /* ty=Tensor[(4, 5, 6), float32] */;
  %409 = atan(%408) /* ty=Tensor[(4, 5, 6), float32] */;
  (%409,)
}

def @func_4612(%var_4594: Tensor[(13, 1, 5), int64], %var_4595: Tensor[(13, 15, 5), int64]) -> (Tensor[(13, 15, 5), bool], Tensor[(10, 5, 7), float32], Tensor[(350), float32]) {
  %410 = cast(%var_4594, dtype="bool") /* ty=Tensor[(13, 1, 5), bool] */;
  %411 = cast(%var_4595, dtype="bool") /* ty=Tensor[(13, 15, 5), bool] */;
  %412 = cast(meta[relay.Constant][29] /* ty=Tensor[(350), float32] */, dtype="float32") /* ty=Tensor[(350), float32] */;
  %413 = reshape(%412, newshape=[10, 5, 7]) /* ty=Tensor[(10, 5, 7), float32] */;
  %414 = less_equal(%410, %411) /* ty=Tensor[(13, 15, 5), bool] */;
  %415 = @func_3435(%413) /* ty=Tensor[(10, 5, 7), float32] */;
  (%414, %415, meta[relay.Constant][29] /* ty=Tensor[(350), float32] */)
}

def @func_9278() -> (Tensor[(10, 16, 15), bool],) {
  %416 = @func_8206() /* ty=(Tensor[(10, 16, 15), bool], Tensor[(70), float64], Tensor[(35, 9), float64]) */;
  %417 = %416.0;
  (%417,)
}

def @func_9557() -> Tensor[(10, 5, 14), float64] {
  %418 = @func_9273() /* ty=(Tensor[(10, 5, 14), float64], uint8, uint8, Tensor[(3, 44), uint8], Tensor[(18), float32]) */;
  %418.0
}

def @func_4723(%var_4712: Tensor[(5, 13, 3), float64]) -> Tensor[(5, 13, 3), float64] {
  %419 = cast(%var_4712, dtype="float64") /* ty=Tensor[(5, 13, 3), float64] */;
  log(%419) /* ty=Tensor[(5, 13, 3), float64] */
}

def @func_2369(%var_2351: int8) -> (Tensor[(7, 5, 1), int8],) {
  %420 = cast(%var_2351, dtype="int8") /* ty=int8 */;
  %421 = cast(meta[relay.Constant][30] /* ty=Tensor[(7, 5, 1), int8] */, dtype="int8") /* ty=Tensor[(7, 5, 1), int8] */;
  %422 = bitwise_or(%420, %421) /* ty=Tensor[(7, 5, 1), int8] */;
  (%422,)
}

def @func_826(%var_820: Tensor[(3, 15, 6), float32]) -> (Tensor[(3, 15, 6), bool],) {
  %423 = cast(%var_820, dtype="bool") /* ty=Tensor[(3, 15, 6), bool] */;
  %424 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(3, 15, 6), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %425 = cast(meta[relay.Constant][31] /* ty=Tensor[(3, 15, 6), float32] */, dtype="bool") /* ty=Tensor[(3, 15, 6), bool] */;
  %426 = dyn.reshape(%423, %424, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %427 = equal(%425, %426) /* ty=Tensor[(3, 15, 6), bool] */;
  (%427,)
}

def @func_7259(%var_7237: Tensor[(13, 16, 2), float64], %var_7244: Tensor[(294), int16]) -> (Tensor[(13, 16, 2), float64], Tensor[(9, 10, 10), bool], Tensor[(18, 50), uint8], Tensor[(294), int16], Tensor[(1008), float32], Tensor[(6, 6, 10), float32]) {
  %428 = cast(-0.305288f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %429 = cast(%var_7237, dtype="float64") /* ty=Tensor[(13, 16, 2), float64] */;
  %430 = cast(meta[relay.Constant][32] /* ty=Tensor[(18, 50), uint8] */, dtype="uint8") /* ty=Tensor[(18, 50), uint8] */;
  %431 = cast(meta[relay.Constant][32] /* ty=Tensor[(18, 50), uint8] */, dtype="uint8") /* ty=Tensor[(18, 50), uint8] */;
  %432 = cast(%var_7244, dtype="int16") /* ty=Tensor[(294), int16] */;
  %433 = cast(meta[relay.Constant][33] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %434 = reshape(%430, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), uint8] */;
  %435 = reshape(%431, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), uint8] */;
  %436 = reshape(%432, newshape=[294]) /* ty=Tensor[(294), int16] */;
  %437 = reshape(%433, newshape=[1008]) /* ty=Tensor[(1008), float32] */;
  %438 = @func_419(%434, %435, %436, %437) /* ty=(Tensor[(9, 10, 10), bool], Tensor[(7, 6, 7), int16], int16, Tensor[(294), int16], Tensor[(7, 6, 7), int16], Tensor[(70), uint64], Tensor[(1008), float32]) */;
  %439 = @func_7207() /* ty=(Tensor[(6, 6, 10), float32],) */;
  %440 = floor_mod(%428, %429) /* ty=Tensor[(13, 16, 2), float64] */;
  %441 = %438.0;
  %442 = %439.0;
  (%440, %441, meta[relay.Constant][32] /* ty=Tensor[(18, 50), uint8] */, %var_7244, meta[relay.Constant][33] /* ty=Tensor[(1008), float32] */, %442)
}

def @func_218(%var_213: int16, %var_214: Tensor[(7, 6, 7), int16]) -> (Tensor[(7, 6, 7), int16],) {
  %443 = cast(%var_213, dtype="int16") /* ty=int16 */;
  %444 = cast(%var_214, dtype="int16") /* ty=Tensor[(7, 6, 7), int16] */;
  %445 = minimum(%443, %444) /* ty=Tensor[(7, 6, 7), int16] */;
  (%445,)
}

def @func_5931(%var_5919: Tensor[(10, 16, 12), float32]) -> Tensor[(10, 16, 12), float32] {
  %446 = cast(%var_5919, dtype="float32") /* ty=Tensor[(10, 16, 12), float32] */;
  erf(%446) /* ty=Tensor[(10, 16, 12), float32] */
}

def @func_6802() -> (Tensor[(10, 6, 5), float64],) {
  %447 = cast(meta[relay.Constant][34] /* ty=Tensor[(10, 6, 5), float64] */, dtype="float64") /* ty=Tensor[(10, 6, 5), float64] */;
  %448 = sigmoid(%447) /* ty=Tensor[(10, 6, 5), float64] */;
  (%448,)
}

def @func_5887() -> Tensor[(10, 5, 14), float64] {
  @func_5599() /* ty=Tensor[(10, 5, 14), float64] */
}

def @func_8262(%var_8246: Tensor[(70), float64]) -> (Tensor[(35), float64], Tensor[(70), float64], Tensor[(70), float64], Tensor[(14, 14, 5), uint32]) {
  %449 = @func_5687() /* ty=(Tensor[(35), float64], Tensor[(1, 5, 7), float64], Tensor[(10, 16, 15), uint32], Tensor[(2400), uint32]) */;
  %450 = cast(%var_8246, dtype="float64") /* ty=Tensor[(70), float64] */;
  %451 = reshape(%450, newshape=[70]) /* ty=Tensor[(70), float64] */;
  %452 = @func_7082(%451) /* ty=(Tensor[(35, 2), float32], Tensor[(70), float64], Tensor[(35, 9), float32], Tensor[(35, 9), float32]) */;
  %453 = %449.0;
  %454 = %452.1;
  %455 = @func_7444() /* ty=Tensor[(14, 14, 5), uint32] */;
  (%453, %454, %var_8246, %455)
}

def @func_8145() -> (Tensor[(6, 6, 10), float32],) {
  %456 = @func_7207() /* ty=(Tensor[(6, 6, 10), float32],) */;
  %457 = %456.0;
  (%457,)
}

def @func_5687() -> (Tensor[(35), float64], Tensor[(1, 5, 7), float64], Tensor[(10, 16, 15), uint32], Tensor[(2400), uint32]) {
  %458 = @func_5631() /* ty=(Tensor[(10, 5, 14), float64], Tensor[(35, 1), float64], Tensor[(128), float64], Tensor[(1755), float64], Tensor[(35), float64], Tensor[(9, 15, 13), float64]) */;
  %459 = %458.4;
  %460 = cast(%459, dtype="float64") /* ty=Tensor[(35), float64] */;
  %461 = reshape(%460, newshape=[1, 5, 7]) /* ty=Tensor[(1, 5, 7), float64] */;
  %462 = cast(meta[relay.Constant][35] /* ty=Tensor[(2400), uint32] */, dtype="uint32") /* ty=Tensor[(2400), uint32] */;
  %463 = cast(meta[relay.Constant][35] /* ty=Tensor[(2400), uint32] */, dtype="uint32") /* ty=Tensor[(2400), uint32] */;
  %464 = reshape(%462, newshape=[10, 16, 15]) /* ty=Tensor[(10, 16, 15), uint32] */;
  %465 = reshape(%463, newshape=[10, 16, 15]) /* ty=Tensor[(10, 16, 15), uint32] */;
  %466 = @func_1715(%461) /* ty=Tensor[(1, 5, 7), float64] */;
  %467 = @func_1599(%464, %465) /* ty=Tensor[(10, 16, 15), uint32] */;
  (%459, %466, %467, meta[relay.Constant][35] /* ty=Tensor[(2400), uint32] */)
}

def @func_8973(%var_8948: Tensor[(12, 8, 15), float32]) -> (Tensor[(12, 8, 15), int64], Tensor[(12, 8, 15), bool], Tensor[(35, 1), float32]) {
  %468 = cast(%var_8948, dtype="int64") /* ty=Tensor[(12, 8, 15), int64] */;
  %469 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(12, 8, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %470 = cast(meta[relay.Constant][36] /* ty=Tensor[(12, 8, 15), float32] */, dtype="int64") /* ty=Tensor[(12, 8, 15), int64] */;
  %471 = dyn.reshape(%468, %469, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %472 = cast(meta[relay.Constant][36] /* ty=Tensor[(12, 8, 15), float32] */, dtype="float32") /* ty=Tensor[(12, 8, 15), float32] */;
  %473 = cos(%472) /* ty=Tensor[(12, 8, 15), float32] */;
  %474 = cast(%473, dtype="float32") /* ty=Tensor[(12, 8, 15), float32] */;
  %475 = atan(%474) /* ty=Tensor[(12, 8, 15), float32] */;
  %476 = cast(%473, dtype="bool") /* ty=Tensor[(12, 8, 15), bool] */;
  %477 = shape_of(%475, dtype="int32") /* ty=Tensor[(3), int32] */;
  %478 = cast(%475, dtype="bool") /* ty=Tensor[(12, 8, 15), bool] */;
  %479 = dyn.reshape(%476, %477, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %480 = @func_7272() /* ty=(Tensor[(35, 1), float32],) */;
  %481 = maximum(%470, %471) /* ty=Tensor[(12, 8, 15), int64] */;
  %482 = logical_and(%478, %479) /* ty=Tensor[(12, 8, 15), bool] */;
  %483 = %480.0;
  (%481, %482, %483)
}

def @func_9347() -> (Tensor[(35, 1), float32],) {
  %484 = @func_7272() /* ty=(Tensor[(35, 1), float32],) */;
  %485 = %484.0;
  (%485,)
}

def @func_2685(%var_2629: Tensor[(2, 15, 7), float64], %var_2630: Tensor[(2, 15, 7), float64], %var_2637: Tensor[(1755), float64], %var_2638: Tensor[(35), float64]) -> (Tensor[(2, 15, 7), float64], Tensor[(128), float64], Tensor[(1755), float64], Tensor[(35), float64], Tensor[(2, 15, 7), uint64], Tensor[(294), bool], Tensor[(70), uint64], Tensor[(1008), float32]) {
  %486 = cast(%var_2630, dtype="float64") /* ty=Tensor[(2, 15, 7), float64] */;
  %487 = shape_of(%var_2629, dtype="int32") /* ty=Tensor[(3), int32] */;
  %488 = cast(%var_2629, dtype="float64") /* ty=Tensor[(2, 15, 7), float64] */;
  %489 = dyn.reshape(%486, %487, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %490 = cast(%var_2630, dtype="uint64") /* ty=Tensor[(2, 15, 7), uint64] */;
  %491 = shape_of(%var_2629, dtype="int32") /* ty=Tensor[(3), int32] */;
  %492 = cast(%var_2629, dtype="uint64") /* ty=Tensor[(2, 15, 7), uint64] */;
  %493 = dyn.reshape(%490, %491, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %494 = cast(meta[relay.Constant][37] /* ty=Tensor[(128), float64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
  %495 = cast(meta[relay.Constant][37] /* ty=Tensor[(128), float64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
  %496 = cast(%var_2637, dtype="float64") /* ty=Tensor[(1755), float64] */;
  %497 = cast(%var_2638, dtype="float64") /* ty=Tensor[(35), float64] */;
  %498 = reshape(%494, newshape=[2, 8, 8]) /* ty=Tensor[(2, 8, 8), float64] */;
  %499 = reshape(%495, newshape=[2, 8, 8]) /* ty=Tensor[(2, 8, 8), float64] */;
  %500 = reshape(%496, newshape=[1755]) /* ty=Tensor[(1755), float64] */;
  %501 = reshape(%497, newshape=[35, 1]) /* ty=Tensor[(35, 1), float64] */;
  %502 = @func_2022(%498, %499, %500, %501) /* ty=(Tensor[(9, 15, 13), float64], Tensor[(1755), float64], Tensor[(2, 8, 8), float64], Tensor[(7, 6, 7), int16], int16, Tensor[(294), int16], Tensor[(1, 5, 7), float64], Tensor[(35, 1), float64], Tensor[(2, 8, 8), float64]) */;
  %503 = %502.5;
  %504 = cast(meta[relay.Constant][38] /* ty=Tensor[(294), int16] */, dtype="bool") /* ty=Tensor[(294), bool] */;
  %505 = shape_of(%503, dtype="int32") /* ty=Tensor[(1), int32] */;
  %506 = cast(%503, dtype="bool") /* ty=Tensor[(294), bool] */;
  %507 = dyn.reshape(%504, %505, newshape=[]) /* ty=Tensor[(?), bool] */;
  %508 = cast(meta[relay.Constant][39] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %509 = reshape(%508, newshape=[12, 14, 6]) /* ty=Tensor[(12, 14, 6), float32] */;
  %510 = @func_379(%509) /* ty=(Tensor[(12, 14, 6), float64], Tensor[(7, 2, 5), float32], Tensor[(70), uint64]) */;
  %511 = floor_divide(%488, %489) /* ty=Tensor[(2, 15, 7), float64] */;
  %512 = maximum(%492, %493) /* ty=Tensor[(2, 15, 7), uint64] */;
  %513 = equal(%506, %507) /* ty=Tensor[(294), bool] */;
  %514 = %510.2;
  (%511, meta[relay.Constant][37] /* ty=Tensor[(128), float64] */, %var_2637, %var_2638, %512, %513, %514, meta[relay.Constant][39] /* ty=Tensor[(1008), float32] */)
}

def @func_6215(%var_6190: Tensor[(32, 4), float64]) -> (Tensor[(10, 5, 14), float64], Tensor[(9, 15, 13), float64], Tensor[(32, 4), float64], Tensor[(35), float64], Tensor[(10, 5, 14), float64], Tensor[(1755), bool]) {
  %515 = cast(%var_6190, dtype="float64") /* ty=Tensor[(32, 4), float64] */;
  %516 = cast(%var_6190, dtype="float64") /* ty=Tensor[(32, 4), float64] */;
  %517 = cast(meta[relay.Constant][40] /* ty=Tensor[(1755), float64] */, dtype="float64") /* ty=Tensor[(1755), float64] */;
  %518 = cast(meta[relay.Constant][41] /* ty=Tensor[(35), float64] */, dtype="float64") /* ty=Tensor[(35), float64] */;
  %519 = reshape(%515, newshape=[2, 8, 8]) /* ty=Tensor[(2, 8, 8), float64] */;
  %520 = reshape(%516, newshape=[2, 8, 8]) /* ty=Tensor[(2, 8, 8), float64] */;
  %521 = reshape(%517, newshape=[1755]) /* ty=Tensor[(1755), float64] */;
  %522 = reshape(%518, newshape=[35, 1]) /* ty=Tensor[(35, 1), float64] */;
  %523 = @func_2022(%519, %520, %521, %522) /* ty=(Tensor[(9, 15, 13), float64], Tensor[(1755), float64], Tensor[(2, 8, 8), float64], Tensor[(7, 6, 7), int16], int16, Tensor[(294), int16], Tensor[(1, 5, 7), float64], Tensor[(35, 1), float64], Tensor[(2, 8, 8), float64]) */;
  %524 = cast(meta[relay.Constant][40] /* ty=Tensor[(1755), float64] */, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %525 = atan(%524) /* ty=Tensor[(1755), float32] */;
  %526 = cast(meta[relay.Constant][40] /* ty=Tensor[(1755), float64] */, dtype="bool") /* ty=Tensor[(1755), bool] */;
  %527 = shape_of(%525, dtype="int32") /* ty=Tensor[(1), int32] */;
  %528 = cast(%525, dtype="bool") /* ty=Tensor[(1755), bool] */;
  %529 = dyn.reshape(%526, %527, newshape=[]) /* ty=Tensor[(?), bool] */;
  %530 = @func_5599() /* ty=Tensor[(10, 5, 14), float64] */;
  %531 = %523.0;
  %532 = @func_5599() /* ty=Tensor[(10, 5, 14), float64] */;
  %533 = less(%528, %529) /* ty=Tensor[(1755), bool] */;
  (%530, %531, %var_6190, meta[relay.Constant][41] /* ty=Tensor[(35), float64] */, %532, %533)
}

def @func_9128(%var_9124: Tensor[(2, 9, 2), float32]) -> Tensor[(2, 9, 2), float32] {
  %534 = cast(%var_9124, dtype="float32") /* ty=Tensor[(2, 9, 2), float32] */;
  atan(%534) /* ty=Tensor[(2, 9, 2), float32] */
}

def @main() -> (Tensor[(9, 2, 13), float32],) {
  %535 = cast(meta[relay.Constant][42] /* ty=Tensor[(9, 2, 13), float32] */, dtype="float32") /* ty=Tensor[(9, 2, 13), float32] */;
  %536 = acosh(%535) /* ty=Tensor[(9, 2, 13), float32] */;
  (%536,)
}

def @func_8433() -> (Tensor[(10, 5, 14), float64], Tensor[(10, 6, 5), float64], Tensor[(6, 6, 10), float32]) {
  %537 = @func_6829() /* ty=(Tensor[(10, 5, 14), float64],) */;
  %538 = @func_6802() /* ty=(Tensor[(10, 6, 5), float64],) */;
  %539 = @func_8145() /* ty=(Tensor[(6, 6, 10), float32],) */;
  %540 = %537.0;
  %541 = %538.0;
  %542 = %539.0;
  (%540, %541, %542)
}

def @func_6389(%var_6369: Tensor[(3, 14, 15), int64], %var_6370: Tensor[(3, 14, 15), int64]) -> (Tensor[(3, 14, 15), int64],) {
  %543 = cast(%var_6370, dtype="int64") /* ty=Tensor[(3, 14, 15), int64] */;
  %544 = shape_of(%var_6369, dtype="int32") /* ty=Tensor[(3), int32] */;
  %545 = cast(%var_6369, dtype="int64") /* ty=Tensor[(3, 14, 15), int64] */;
  %546 = dyn.reshape(%543, %544, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %547 = maximum(%545, %546) /* ty=Tensor[(3, 14, 15), int64] */;
  (%547,)
}

def @func_7272() -> (Tensor[(35, 1), float32],) {
  %548 = @func_6124() /* ty=Tensor[(35, 1), float64] */;
  %549 = cast(%548, dtype="float32") /* ty=Tensor[(35, 1), float32] */;
  %550 = erf(%549) /* ty=Tensor[(35, 1), float32] */;
  (%550,)
}

def @func_5860(%var_5831: Tensor[(35, 2), float64], %var_5846: Tensor[(35, 2), float64]) -> (Tensor[(35, 2), uint8], Tensor[(35, 2), float32]) {
  %551 = @func_5631() /* ty=(Tensor[(10, 5, 14), float64], Tensor[(35, 1), float64], Tensor[(128), float64], Tensor[(1755), float64], Tensor[(35), float64], Tensor[(9, 15, 13), float64]) */;
  %552 = %551.1;
  %553 = cast(%552, dtype="uint8") /* ty=Tensor[(35, 1), uint8] */;
  %554 = cast(%var_5831, dtype="uint8") /* ty=Tensor[(35, 2), uint8] */;
  %555 = cast(%var_5831, dtype="float64") /* ty=Tensor[(35, 2), float64] */;
  %556 = tan(%555) /* ty=Tensor[(35, 2), float64] */;
  %557 = cast(%var_5846, dtype="float32") /* ty=Tensor[(35, 2), float32] */;
  %558 = shape_of(%556, dtype="int32") /* ty=Tensor[(2), int32] */;
  %559 = cast(%556, dtype="float32") /* ty=Tensor[(35, 2), float32] */;
  %560 = dyn.reshape(%557, %558, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %561 = bitwise_and(%553, %554) /* ty=Tensor[(35, 2), uint8] */;
  %562 = divide(%559, %560) /* ty=Tensor[(35, 2), float32] */;
  (%561, %562)
}

def @func_2961(%var_2943: int8, %var_2954: Tensor[(2400), uint32]) -> (Tensor[(9, 12, 7), float64], int8, Tensor[(1170), float32], int8, Tensor[(10, 16, 15), uint32], Tensor[(2400), uint32]) {
  %563 = cast(meta[relay.Constant][43] /* ty=Tensor[(9, 12, 7), float64] */, dtype="float64") /* ty=Tensor[(9, 12, 7), float64] */;
  %564 = cast(meta[relay.Constant][44] /* ty=Tensor[(1170), float32] */, dtype="float32") /* ty=Tensor[(1170), float32] */;
  %565 = cast(%var_2943, dtype="int8") /* ty=int8 */;
  %566 = reshape(%564, newshape=[9, 10, 13]) /* ty=Tensor[(9, 10, 13), float32] */;
  %567 = reshape(%565, newshape=[]) /* ty=int8 */;
  %568 = @func_2508(%566, %567) /* ty=(Tensor[(9, 10, 13), float32], Tensor[(7, 5, 1), int8], int8) */;
  %569 = cast(%var_2954, dtype="uint32") /* ty=Tensor[(2400), uint32] */;
  %570 = cast(%var_2954, dtype="uint32") /* ty=Tensor[(2400), uint32] */;
  %571 = reshape(%569, newshape=[10, 16, 15]) /* ty=Tensor[(10, 16, 15), uint32] */;
  %572 = reshape(%570, newshape=[10, 16, 15]) /* ty=Tensor[(10, 16, 15), uint32] */;
  %573 = atanh(%563) /* ty=Tensor[(9, 12, 7), float64] */;
  %574 = %568.2;
  %575 = @func_1599(%571, %572) /* ty=Tensor[(10, 16, 15), uint32] */;
  (%573, %574, meta[relay.Constant][44] /* ty=Tensor[(1170), float32] */, %var_2943, %575, %var_2954)
}

def @func_148(%var_135: Tensor[(7, 2, 5), uint64]) -> (Tensor[(7, 2, 5), uint64], Tensor[(7, 2, 5), float32]) {
  %576 = cast(meta[relay.Constant][46] /* ty=Tensor[(7, 2, 5), uint64] */, dtype="uint64") /* ty=Tensor[(7, 2, 5), uint64] */;
  %577 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(7, 2, 5), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %578 = cast(meta[relay.Constant][45] /* ty=Tensor[(7, 2, 5), uint64] */, dtype="uint64") /* ty=Tensor[(7, 2, 5), uint64] */;
  %579 = dyn.reshape(%576, %577, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %580 = cast(%var_135, dtype="float32") /* ty=Tensor[(7, 2, 5), float32] */;
  %581 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(7, 2, 5), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %582 = cast(meta[relay.Constant][45] /* ty=Tensor[(7, 2, 5), uint64] */, dtype="float32") /* ty=Tensor[(7, 2, 5), float32] */;
  %583 = dyn.reshape(%580, %581, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %584 = subtract(%578, %579) /* ty=Tensor[(7, 2, 5), uint64] */;
  %585 = power(%582, %583) /* ty=Tensor[(7, 2, 5), float32] */;
  (%584, %585)
}

def @func_5631() -> (Tensor[(10, 5, 14), float64], Tensor[(35, 1), float64], Tensor[(128), float64], Tensor[(1755), float64], Tensor[(35), float64], Tensor[(9, 15, 13), float64]) {
  %586 = cast(meta[relay.Constant][47] /* ty=Tensor[(128), float64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
  %587 = cast(meta[relay.Constant][47] /* ty=Tensor[(128), float64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
  %588 = cast(meta[relay.Constant][48] /* ty=Tensor[(1755), float64] */, dtype="float64") /* ty=Tensor[(1755), float64] */;
  %589 = cast(meta[relay.Constant][49] /* ty=Tensor[(35), float64] */, dtype="float64") /* ty=Tensor[(35), float64] */;
  %590 = reshape(%586, newshape=[2, 8, 8]) /* ty=Tensor[(2, 8, 8), float64] */;
  %591 = reshape(%587, newshape=[2, 8, 8]) /* ty=Tensor[(2, 8, 8), float64] */;
  %592 = reshape(%588, newshape=[1755]) /* ty=Tensor[(1755), float64] */;
  %593 = reshape(%589, newshape=[35, 1]) /* ty=Tensor[(35, 1), float64] */;
  %594 = @func_2022(%590, %591, %592, %593) /* ty=(Tensor[(9, 15, 13), float64], Tensor[(1755), float64], Tensor[(2, 8, 8), float64], Tensor[(7, 6, 7), int16], int16, Tensor[(294), int16], Tensor[(1, 5, 7), float64], Tensor[(35, 1), float64], Tensor[(2, 8, 8), float64]) */;
  %595 = cast(meta[relay.Constant][48] /* ty=Tensor[(1755), float64] */, dtype="float64") /* ty=Tensor[(1755), float64] */;
  %596 = reshape(%595, newshape=[9, 15, 13]) /* ty=Tensor[(9, 15, 13), float64] */;
  %597 = @func_5599() /* ty=Tensor[(10, 5, 14), float64] */;
  %598 = %594.7;
  %599 = @func_1627(%596) /* ty=Tensor[(9, 15, 13), float64] */;
  (%597, %598, meta[relay.Constant][47] /* ty=Tensor[(128), float64] */, meta[relay.Constant][48] /* ty=Tensor[(1755), float64] */, meta[relay.Constant][49] /* ty=Tensor[(35), float64] */, %599)
}

def @func_5190(%var_5179: float32, %var_5187: Tensor[(65, 1), int64], %var_5188: Tensor[(975), int64]) -> (Tensor[(1, 9, 9), float32], Tensor[(10, 5, 7), float32], Tensor[(65, 1), int64], Tensor[(975), int64]) {
  %600 = cast(%var_5179, dtype="float32") /* ty=float32 */;
  %601 = cast(meta[relay.Constant][50] /* ty=Tensor[(1, 9, 9), float32] */, dtype="float32") /* ty=Tensor[(1, 9, 9), float32] */;
  %602 = cast(%var_5187, dtype="int64") /* ty=Tensor[(65, 1), int64] */;
  %603 = cast(%var_5188, dtype="int64") /* ty=Tensor[(975), int64] */;
  %604 = reshape(%602, newshape=[13, 1, 5]) /* ty=Tensor[(13, 1, 5), int64] */;
  %605 = reshape(%603, newshape=[13, 15, 5]) /* ty=Tensor[(13, 15, 5), int64] */;
  %606 = @func_4612(%604, %605) /* ty=(Tensor[(13, 15, 5), bool], Tensor[(10, 5, 7), float32], Tensor[(350), float32]) */;
  %607 = floor_mod(%600, %601) /* ty=Tensor[(1, 9, 9), float32] */;
  %608 = %606.1;
  (%607, %608, %var_5187, %var_5188)
}

def @func_7614() -> (Tensor[(35), float64], Tensor[(10, 5, 14), float64]) {
  %609 = @func_5812() /* ty=(Tensor[(35), float64],) */;
  %610 = @func_6151() /* ty=(Tensor[(10, 5, 14), float64],) */;
  %611 = %609.0;
  %612 = %610.0;
  (%611, %612)
}

def @func_2022(%var_1951: Tensor[(2, 8, 8), float64], %var_1952: Tensor[(2, 8, 8), float64], %var_1963: Tensor[(1755), float64], %var_2013: Tensor[(35, 1), float64]) -> (Tensor[(9, 15, 13), float64], Tensor[(1755), float64], Tensor[(2, 8, 8), float64], Tensor[(7, 6, 7), int16], int16, Tensor[(294), int16], Tensor[(1, 5, 7), float64], Tensor[(35, 1), float64], Tensor[(2, 8, 8), float64]) {
  %613 = cast(%var_1963, dtype="float64") /* ty=Tensor[(1755), float64] */;
  %614 = reshape(%613, newshape=[9, 15, 13]) /* ty=Tensor[(9, 15, 13), float64] */;
  %615 = cast(%var_1952, dtype="float64") /* ty=Tensor[(2, 8, 8), float64] */;
  %616 = shape_of(%var_1951, dtype="int32") /* ty=Tensor[(3), int32] */;
  %617 = cast(%var_1951, dtype="float64") /* ty=Tensor[(2, 8, 8), float64] */;
  %618 = dyn.reshape(%615, %616, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %619 = mod(%617, %618) /* ty=Tensor[(2, 8, 8), float64] */;
  %620 = cast(%619, dtype="float64") /* ty=Tensor[(2, 8, 8), float64] */;
  %621 = cast(meta[relay.Constant][51] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %622 = cast(meta[relay.Constant][52] /* ty=Tensor[(294), int16] */, dtype="int16") /* ty=Tensor[(294), int16] */;
  %623 = reshape(%621, newshape=[]) /* ty=int16 */;
  %624 = reshape(%622, newshape=[7, 6, 7]) /* ty=Tensor[(7, 6, 7), int16] */;
  %625 = @func_218(%623, %624) /* ty=(Tensor[(7, 6, 7), int16],) */;
  %626 = cast(%var_2013, dtype="float64") /* ty=Tensor[(35, 1), float64] */;
  %627 = reshape(%626, newshape=[1, 5, 7]) /* ty=Tensor[(1, 5, 7), float64] */;
  %628 = cast(%619, dtype="float32") /* ty=Tensor[(2, 8, 8), float32] */;
  %629 = exp(%628) /* ty=Tensor[(2, 8, 8), float32] */;
  %630 = cast(%var_1951, dtype="int16") /* ty=Tensor[(2, 8, 8), int16] */;
  %631 = shape_of(%629, dtype="int32") /* ty=Tensor[(3), int32] */;
  %632 = cast(%629, dtype="int16") /* ty=Tensor[(2, 8, 8), int16] */;
  %633 = dyn.reshape(%630, %631, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %634 = logical_xor(%632, %633) /* ty=Tensor[(2, 8, 8), int16] */;
  %635 = cast(%634, dtype="float64") /* ty=Tensor[(2, 8, 8), float64] */;
  %636 = erf(%635) /* ty=Tensor[(2, 8, 8), float64] */;
  %637 = cast(%636, dtype="float64") /* ty=Tensor[(2, 8, 8), float64] */;
  %638 = @func_1627(%614) /* ty=Tensor[(9, 15, 13), float64] */;
  %639 = tan(%620) /* ty=Tensor[(2, 8, 8), float64] */;
  %640 = %625.0;
  %641 = @func_1715(%627) /* ty=Tensor[(1, 5, 7), float64] */;
  %642 = acos(%637) /* ty=Tensor[(2, 8, 8), float64] */;
  (%638, %var_1963, %639, %640, meta[relay.Constant][51] /* ty=int16 */, meta[relay.Constant][52] /* ty=Tensor[(294), int16] */, %641, %var_2013, %642)
}

def @func_8846() -> (Tensor[(35), float64],) {
  %643 = @func_7732() /* ty=(Tensor[(35), float64],) */;
  %644 = %643.0;
  (%644,)
}

def @func_7444() -> Tensor[(14, 14, 5), uint32] {
  %645 = cast(meta[relay.Constant][54] /* ty=Tensor[(14, 14, 5), uint32] */, dtype="uint32") /* ty=Tensor[(14, 14, 5), uint32] */;
  %646 = shape_of(meta[relay.Constant][53] /* ty=Tensor[(14, 14, 5), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %647 = cast(meta[relay.Constant][53] /* ty=Tensor[(14, 14, 5), uint32] */, dtype="uint32") /* ty=Tensor[(14, 14, 5), uint32] */;
  %648 = dyn.reshape(%645, %646, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  left_shift(%647, %648) /* ty=Tensor[(14, 14, 5), uint32] */
}

def @func_8408() -> (Tensor[(35, 1), float64], Tensor[(10, 5, 14), float64]) {
  %649 = @func_8284() /* ty=(Tensor[(10, 5, 14), float64],) */;
  %650 = @func_6124() /* ty=Tensor[(35, 1), float64] */;
  %651 = %649.0;
  (%650, %651)
}

def @func_10047() -> (Tensor[(35), float64], Tensor[(35, 1), float64]) {
  %652 = @func_5812() /* ty=(Tensor[(35), float64],) */;
  %653 = %652.0;
  %654 = cast(%653, dtype="float64") /* ty=Tensor[(35), float64] */;
  %655 = log2(%654) /* ty=Tensor[(35), float64] */;
  %656 = @func_6124() /* ty=Tensor[(35, 1), float64] */;
  (%655, %656)
}

def @func_7207() -> (Tensor[(6, 6, 10), float32],) {
  %657 = cast(meta[relay.Constant][56] /* ty=Tensor[(6, 6, 10), float32] */, dtype="float32") /* ty=Tensor[(6, 6, 10), float32] */;
  %658 = shape_of(meta[relay.Constant][55] /* ty=Tensor[(6, 6, 10), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %659 = cast(meta[relay.Constant][55] /* ty=Tensor[(6, 6, 10), float32] */, dtype="float32") /* ty=Tensor[(6, 6, 10), float32] */;
  %660 = dyn.reshape(%657, %658, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %661 = power(%659, %660) /* ty=Tensor[(6, 6, 10), float32] */;
  (%661,)
}

def @func_1627(%var_1620: Tensor[(9, 15, 13), float64]) -> Tensor[(9, 15, 13), float64] {
  %662 = cast(%var_1620, dtype="float64") /* ty=Tensor[(9, 15, 13), float64] */;
  sinh(%662) /* ty=Tensor[(9, 15, 13), float64] */
}

def @func_6708(%var_6657: Tensor[(1008), float32], %var_6680: Tensor[(132), float32], %var_6700: int8) -> (Tensor[(12, 12, 13), float64], Tensor[(35, 1872), int32], Tensor[(7, 5, 1), int8], Tensor[(1008), float32], Tensor[(6, 11, 2), float32], Tensor[(132), float32], Tensor[(35, 1872), uint64], Tensor[(35), float64], int8) {
  %663 = cast(meta[relay.Constant][57] /* ty=Tensor[(1872), float64] */, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %664 = cast(meta[relay.Constant][57] /* ty=Tensor[(1872), float64] */, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %665 = reshape(%663, newshape=[12, 12, 13]) /* ty=Tensor[(12, 12, 13), float64] */;
  %666 = reshape(%664, newshape=[12, 12, 13]) /* ty=Tensor[(12, 12, 13), float64] */;
  %667 = @func_6124() /* ty=Tensor[(35, 1), float64] */;
  %668 = cast(%667, dtype="int32") /* ty=Tensor[(35, 1), int32] */;
  %669 = cast(meta[relay.Constant][57] /* ty=Tensor[(1872), float64] */, dtype="int32") /* ty=Tensor[(1872), int32] */;
  %670 = cast(%var_6657, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %671 = reshape(%670, newshape=[252, 4]) /* ty=Tensor[(252, 4), float32] */;
  %672 = @func_6447(%671) /* ty=(Tensor[(10, 5, 14), float64], Tensor[(5, 13, 3), float64], Tensor[(195), float64], Tensor[(7, 2, 5), float32], Tensor[(252, 4), float32], Tensor[(7, 5, 1), int8], int8) */;
  %673 = cast(%var_6680, dtype="float32") /* ty=Tensor[(132), float32] */;
  %674 = reshape(%673, newshape=[6, 11, 2]) /* ty=Tensor[(6, 11, 2), float32] */;
  %675 = @func_5776(%674) /* ty=(Tensor[(6, 11, 2), float32],) */;
  %676 = cast(%667, dtype="float32") /* ty=Tensor[(35, 1), float32] */;
  %677 = cosh(%676) /* ty=Tensor[(35, 1), float32] */;
  %678 = cast(%677, dtype="uint64") /* ty=Tensor[(35, 1), uint64] */;
  %679 = cast(meta[relay.Constant][57] /* ty=Tensor[(1872), float64] */, dtype="uint64") /* ty=Tensor[(1872), uint64] */;
  %680 = cast(%var_6700, dtype="int8") /* ty=int8 */;
  %681 = reshape(%680, newshape=[]) /* ty=int8 */;
  %682 = @func_5983(%681) /* ty=(Tensor[(35), float64], Tensor[(7, 5, 1), int8], int8) */;
  %683 = @func_3759(%665, %666) /* ty=Tensor[(12, 12, 13), float64] */;
  %684 = subtract(%668, %669) /* ty=Tensor[(35, 1872), int32] */;
  %685 = %672.5;
  %686 = %675.0;
  %687 = left_shift(%678, %679) /* ty=Tensor[(35, 1872), uint64] */;
  %688 = %682.0;
  (%683, %684, %685, %var_6657, %686, %var_6680, %687, %688, %var_6700)
}

def @func_6615(%var_6592: Tensor[(128), float64], %var_6593: Tensor[(1755), float64], %var_6594: uint8, %var_6595: Tensor[(132), uint8]) -> (Tensor[(35, 1), float64], Tensor[(7, 10), uint64], Tensor[(70), uint64], Tensor[(128), float64], Tensor[(1755), float64], uint8, Tensor[(132), uint8], Tensor[(18), float32]) {
  %689 = cast(meta[relay.Constant][58] /* ty=Tensor[(70), uint64] */, dtype="uint64") /* ty=Tensor[(70), uint64] */;
  %690 = cast(%var_6592, dtype="float64") /* ty=Tensor[(128), float64] */;
  %691 = cast(%var_6593, dtype="float64") /* ty=Tensor[(1755), float64] */;
  %692 = cast(%var_6594, dtype="uint8") /* ty=uint8 */;
  %693 = cast(%var_6595, dtype="uint8") /* ty=Tensor[(132), uint8] */;
  %694 = cast(meta[relay.Constant][59] /* ty=Tensor[(18), float32] */, dtype="float32") /* ty=Tensor[(18), float32] */;
  %695 = reshape(%689, newshape=[7, 10]) /* ty=Tensor[(7, 10), uint64] */;
  %696 = reshape(%690, newshape=[128]) /* ty=Tensor[(128), float64] */;
  %697 = reshape(%691, newshape=[1755]) /* ty=Tensor[(1755), float64] */;
  %698 = reshape(%692, newshape=[]) /* ty=uint8 */;
  %699 = reshape(%693, newshape=[132]) /* ty=Tensor[(132), uint8] */;
  %700 = reshape(%694, newshape=[18]) /* ty=Tensor[(18), float32] */;
  %701 = @func_6546(%695, %696, %697, %698, %699, %700) /* ty=(Tensor[(10, 5, 14), float64], Tensor[(7, 10), uint64], Tensor[(35), float64], Tensor[(35, 1), float64], Tensor[(128), float64], Tensor[(1755), float64], Tensor[(10, 5, 7), float32], Tensor[(175, 2), float32], Tensor[(11, 12, 1), bool], uint8, Tensor[(132), uint8], Tensor[(6, 3, 1), float32], Tensor[(18), float32], Tensor[(7, 2, 5), float32]) */;
  %702 = @func_6124() /* ty=Tensor[(35, 1), float64] */;
  %703 = %701.1;
  (%702, %703, meta[relay.Constant][58] /* ty=Tensor[(70), uint64] */, %var_6592, %var_6593, %var_6594, %var_6595, meta[relay.Constant][59] /* ty=Tensor[(18), float32] */)
}

def @func_10312() -> (Tensor[(10, 5, 14), float64],) {
  %704 = @func_9710() /* ty=Tensor[(10, 5, 14), float64] */;
  (%704,)
}

def @func_7311() -> (Tensor[(35), float64],) {
  %705 = @func_5812() /* ty=(Tensor[(35), float64],) */;
  %706 = %705.0;
  (%706,)
}

def @func_7082(%var_7030: Tensor[(70), float64]) -> (Tensor[(35, 2), float32], Tensor[(70), float64], Tensor[(35, 9), float32], Tensor[(35, 9), float32]) {
  %707 = cast(%var_7030, dtype="float64") /* ty=Tensor[(70), float64] */;
  %708 = cast(%var_7030, dtype="float64") /* ty=Tensor[(70), float64] */;
  %709 = reshape(%707, newshape=[35, 2]) /* ty=Tensor[(35, 2), float64] */;
  %710 = reshape(%708, newshape=[35, 2]) /* ty=Tensor[(35, 2), float64] */;
  %711 = @func_5860(%709, %710) /* ty=(Tensor[(35, 2), uint8], Tensor[(35, 2), float32]) */;
  %712 = cast(meta[relay.Constant][60] /* ty=Tensor[(35, 9), float64] */, dtype="float64") /* ty=Tensor[(35, 9), float64] */;
  %713 = sin(%712) /* ty=Tensor[(35, 9), float64] */;
  %714 = @func_6124() /* ty=Tensor[(35, 1), float64] */;
  %715 = cast(%714, dtype="float64") /* ty=Tensor[(35, 1), float64] */;
  %716 = cast(meta[relay.Constant][60] /* ty=Tensor[(35, 9), float64] */, dtype="float64") /* ty=Tensor[(35, 9), float64] */;
  %717 = divide(%715, %716) /* ty=Tensor[(35, 9), float64] */;
  %718 = cast(%717, dtype="int32") /* ty=Tensor[(35, 9), int32] */;
  %719 = shape_of(%713, dtype="int32") /* ty=Tensor[(2), int32] */;
  %720 = cast(%713, dtype="int32") /* ty=Tensor[(35, 9), int32] */;
  %721 = dyn.reshape(%718, %719, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %722 = bitwise_or(%720, %721) /* ty=Tensor[(35, 9), int32] */;
  %723 = cast(%722, dtype="float64") /* ty=Tensor[(35, 9), float64] */;
  %724 = tan(%723) /* ty=Tensor[(35, 9), float64] */;
  %725 = cast(%717, dtype="uint32") /* ty=Tensor[(35, 9), uint32] */;
  %726 = shape_of(%724, dtype="int32") /* ty=Tensor[(2), int32] */;
  %727 = cast(%724, dtype="uint32") /* ty=Tensor[(35, 9), uint32] */;
  %728 = dyn.reshape(%725, %726, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %729 = multiply(%727, %728) /* ty=Tensor[(35, 9), uint32] */;
  %730 = cast(%729, dtype="float32") /* ty=Tensor[(35, 9), float32] */;
  %731 = cast(meta[relay.Constant][60] /* ty=Tensor[(35, 9), float64] */, dtype="float32") /* ty=Tensor[(35, 9), float32] */;
  %732 = %711.1;
  %733 = exp(%730) /* ty=Tensor[(35, 9), float32] */;
  %734 = log10(%731) /* ty=Tensor[(35, 9), float32] */;
  (%732, %var_7030, %733, %734)
}

def @func_9273() -> (Tensor[(10, 5, 14), float64], uint8, uint8, Tensor[(3, 44), uint8], Tensor[(18), float32]) {
  %735 = cast(meta[relay.Constant][61] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %736 = cast(meta[relay.Constant][62] /* ty=Tensor[(3, 44), uint8] */, dtype="uint8") /* ty=Tensor[(3, 44), uint8] */;
  %737 = cast(meta[relay.Constant][63] /* ty=Tensor[(18), float32] */, dtype="float32") /* ty=Tensor[(18), float32] */;
  %738 = reshape(%735, newshape=[]) /* ty=uint8 */;
  %739 = reshape(%736, newshape=[132]) /* ty=Tensor[(132), uint8] */;
  %740 = reshape(%737, newshape=[18, 1]) /* ty=Tensor[(18, 1), float32] */;
  %741 = @func_8617(%738, %739, %740) /* ty=(Tensor[(10, 6, 5), float64], Tensor[(11, 12, 1), bool], uint8, Tensor[(132), uint8], Tensor[(10, 5, 7), float32], Tensor[(70), uint64], Tensor[(128), float64], Tensor[(1755), float64], Tensor[(35, 1), float64], Tensor[(18, 1), float32]) */;
  %742 = @func_5599() /* ty=Tensor[(10, 5, 14), float64] */;
  %743 = %741.2;
  (%742, %743, meta[relay.Constant][61] /* ty=uint8 */, meta[relay.Constant][62] /* ty=Tensor[(3, 44), uint8] */, meta[relay.Constant][63] /* ty=Tensor[(18), float32] */)
}

def @func_9863(%var_9844: int16, %var_9861: Tensor[(64, 2), float64]) -> (Tensor[(10, 5, 14), float64], Tensor[(10, 5, 14), float64], Tensor[(7, 6, 7), int16], int16, Tensor[(294), int16], Tensor[(10, 5, 14), float64], Tensor[(64, 2), float64]) {
  %744 = @func_8838() /* ty=(Tensor[(14, 14, 5), uint32], Tensor[(10, 5, 14), float64]) */;
  %745 = cast(%var_9844, dtype="int16") /* ty=int16 */;
  %746 = cast(meta[relay.Constant][64] /* ty=Tensor[(294), int16] */, dtype="int16") /* ty=Tensor[(294), int16] */;
  %747 = reshape(%745, newshape=[]) /* ty=int16 */;
  %748 = reshape(%746, newshape=[7, 6, 7]) /* ty=Tensor[(7, 6, 7), int16] */;
  %749 = @func_218(%747, %748) /* ty=(Tensor[(7, 6, 7), int16],) */;
  %750 = cast(%var_9861, dtype="float64") /* ty=Tensor[(64, 2), float64] */;
  %751 = reshape(%750, newshape=[32, 4]) /* ty=Tensor[(32, 4), float64] */;
  %752 = @func_6215(%751) /* ty=(Tensor[(10, 5, 14), float64], Tensor[(9, 15, 13), float64], Tensor[(32, 4), float64], Tensor[(35), float64], Tensor[(10, 5, 14), float64], Tensor[(1755), bool]) */;
  %753 = %744.1;
  %754 = @func_9710() /* ty=Tensor[(10, 5, 14), float64] */;
  %755 = %749.0;
  %756 = %752.0;
  (%753, %754, %755, %var_9844, meta[relay.Constant][64] /* ty=Tensor[(294), int16] */, %756, %var_9861)
}

def @func_9315() -> Tensor[(4, ?, 12), int16] {
  %757 = cast(meta[relay.Constant][65] /* ty=Tensor[(4, 1, 12), float32] */, dtype="float32") /* ty=Tensor[(4, 1, 12), float32] */;
  %758 = sin(%757) /* ty=Tensor[(4, 1, 12), float32] */;
  %759 = cast(%758, dtype="int16") /* ty=Tensor[(4, 1, 12), int16] */;
  %760 = shape_of(meta[relay.Constant][65] /* ty=Tensor[(4, 1, 12), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %761 = cast(meta[relay.Constant][65] /* ty=Tensor[(4, 1, 12), float32] */, dtype="int16") /* ty=Tensor[(4, 1, 12), int16] */;
  %762 = dyn.reshape(%759, %760, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_and(%761, %762) /* ty=Tensor[(4, ?, 12), int16] */
}

def @func_6124() -> Tensor[(35, 1), float64] {
  %763 = @func_5631() /* ty=(Tensor[(10, 5, 14), float64], Tensor[(35, 1), float64], Tensor[(128), float64], Tensor[(1755), float64], Tensor[(35), float64], Tensor[(9, 15, 13), float64]) */;
  %763.1
}

def @func_6966(%var_6950: Tensor[(630), int64], %var_6956: Tensor[(15, 117), float64]) -> (Tensor[(35, 1), float64], Tensor[(3, 14, 15), int64], Tensor[(630), int64], Tensor[(3, 14, 15), int64], Tensor[(2, 15, 7), float64], Tensor[(210), float64], Tensor[(15, 117), float64]) {
  %764 = cast(%var_6950, dtype="int64") /* ty=Tensor[(630), int64] */;
  %765 = cast(%var_6950, dtype="int64") /* ty=Tensor[(630), int64] */;
  %766 = reshape(%764, newshape=[3, 14, 15]) /* ty=Tensor[(3, 14, 15), int64] */;
  %767 = reshape(%765, newshape=[3, 14, 15]) /* ty=Tensor[(3, 14, 15), int64] */;
  %768 = @func_6389(%766, %767) /* ty=(Tensor[(3, 14, 15), int64],) */;
  %769 = %768.0;
  %770 = cast(%769, dtype="int64") /* ty=Tensor[(3, 14, 15), int64] */;
  %771 = cast(%var_6950, dtype="int64") /* ty=Tensor[(630), int64] */;
  %772 = reshape(%770, newshape=[3, 14, 15]) /* ty=Tensor[(3, 14, 15), int64] */;
  %773 = reshape(%771, newshape=[3, 14, 15]) /* ty=Tensor[(3, 14, 15), int64] */;
  %774 = @func_6389(%772, %773) /* ty=(Tensor[(3, 14, 15), int64],) */;
  %775 = cast(meta[relay.Constant][66] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %776 = cast(meta[relay.Constant][66] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %777 = cast(%var_6956, dtype="float64") /* ty=Tensor[(15, 117), float64] */;
  %778 = @func_6124() /* ty=Tensor[(35, 1), float64] */;
  %779 = cast(%778, dtype="float64") /* ty=Tensor[(35, 1), float64] */;
  %780 = reshape(%775, newshape=[2, 15, 7]) /* ty=Tensor[(2, 15, 7), float64] */;
  %781 = reshape(%776, newshape=[2, 15, 7]) /* ty=Tensor[(2, 15, 7), float64] */;
  %782 = reshape(%777, newshape=[1755]) /* ty=Tensor[(1755), float64] */;
  %783 = reshape(%779, newshape=[35]) /* ty=Tensor[(35), float64] */;
  %784 = @func_2685(%780, %781, %782, %783) /* ty=(Tensor[(2, 15, 7), float64], Tensor[(128), float64], Tensor[(1755), float64], Tensor[(35), float64], Tensor[(2, 15, 7), uint64], Tensor[(294), bool], Tensor[(70), uint64], Tensor[(1008), float32]) */;
  %785 = %774.0;
  %786 = %784.0;
  (%778, %769, %var_6950, %785, %786, meta[relay.Constant][66] /* ty=Tensor[(210), float64] */, %var_6956)
}

def @func_7981(%var_7972: Tensor[(35), float64]) -> (Tensor[(35), float32],) {
  %787 = @func_7732() /* ty=(Tensor[(35), float64],) */;
  %788 = %787.0;
  %789 = cast(%var_7972, dtype="float32") /* ty=Tensor[(35), float32] */;
  %790 = shape_of(%788, dtype="int32") /* ty=Tensor[(1), int32] */;
  %791 = cast(%788, dtype="float32") /* ty=Tensor[(35), float32] */;
  %792 = dyn.reshape(%789, %790, newshape=[]) /* ty=Tensor[(?), float32] */;
  %793 = minimum(%791, %792) /* ty=Tensor[(35), float32] */;
  (%793,)
}

def @func_7881(%var_7870: Tensor[(13, 5), int64]) -> (Tensor[(13, 5), int64], Tensor[(10, 5, 14), float64], Tensor[(975, 350), int16]) {
  %794 = @func_6939() /* ty=Tensor[(10, 5, 14), float64] */;
  %795 = cast(%794, dtype="float64") /* ty=Tensor[(10, 5, 14), float64] */;
  %796 = cast(%var_7870, dtype="int64") /* ty=Tensor[(13, 5), int64] */;
  %797 = cast(meta[relay.Constant][67] /* ty=Tensor[(975, 1), int64] */, dtype="int64") /* ty=Tensor[(975, 1), int64] */;
  %798 = reshape(%796, newshape=[13, 1, 5]) /* ty=Tensor[(13, 1, 5), int64] */;
  %799 = reshape(%797, newshape=[13, 15, 5]) /* ty=Tensor[(13, 15, 5), int64] */;
  %800 = @func_4612(%798, %799) /* ty=(Tensor[(13, 15, 5), bool], Tensor[(10, 5, 7), float32], Tensor[(350), float32]) */;
  %801 = %800.2;
  %802 = cast(%801, dtype="int16") /* ty=Tensor[(350), int16] */;
  %803 = cast(meta[relay.Constant][67] /* ty=Tensor[(975, 1), int64] */, dtype="int16") /* ty=Tensor[(975, 1), int16] */;
  %804 = exp(%795) /* ty=Tensor[(10, 5, 14), float64] */;
  %805 = bitwise_xor(%802, %803) /* ty=Tensor[(975, 350), int16] */;
  (%var_7870, %804, %805)
}

def @func_6546(%var_6475: Tensor[(7, 10), uint64], %var_6498: Tensor[(128), float64], %var_6499: Tensor[(1755), float64], %var_6522: uint8, %var_6523: Tensor[(132), uint8], %var_6533: Tensor[(18), float32]) -> (Tensor[(10, 5, 14), float64], Tensor[(7, 10), uint64], Tensor[(35), float64], Tensor[(35, 1), float64], Tensor[(128), float64], Tensor[(1755), float64], Tensor[(10, 5, 7), float32], Tensor[(175, 2), float32], Tensor[(11, 12, 1), bool], uint8, Tensor[(132), uint8], Tensor[(6, 3, 1), float32], Tensor[(18), float32], Tensor[(7, 2, 5), float32]) {
  %806 = @func_6151() /* ty=(Tensor[(10, 5, 14), float64],) */;
  %807 = @func_5812() /* ty=(Tensor[(35), float64],) */;
  %808 = cast(%var_6498, dtype="float64") /* ty=Tensor[(128), float64] */;
  %809 = cast(%var_6498, dtype="float64") /* ty=Tensor[(128), float64] */;
  %810 = cast(%var_6499, dtype="float64") /* ty=Tensor[(1755), float64] */;
  %811 = %807.0;
  %812 = cast(%811, dtype="float64") /* ty=Tensor[(35), float64] */;
  %813 = reshape(%808, newshape=[2, 8, 8]) /* ty=Tensor[(2, 8, 8), float64] */;
  %814 = reshape(%809, newshape=[2, 8, 8]) /* ty=Tensor[(2, 8, 8), float64] */;
  %815 = reshape(%810, newshape=[1755]) /* ty=Tensor[(1755), float64] */;
  %816 = reshape(%812, newshape=[35, 1]) /* ty=Tensor[(35, 1), float64] */;
  %817 = @func_2022(%813, %814, %815, %816) /* ty=(Tensor[(9, 15, 13), float64], Tensor[(1755), float64], Tensor[(2, 8, 8), float64], Tensor[(7, 6, 7), int16], int16, Tensor[(294), int16], Tensor[(1, 5, 7), float64], Tensor[(35, 1), float64], Tensor[(2, 8, 8), float64]) */;
  %818 = cast(meta[relay.Constant][68] /* ty=Tensor[(175, 2), float32] */, dtype="float32") /* ty=Tensor[(175, 2), float32] */;
  %819 = reshape(%818, newshape=[10, 5, 7]) /* ty=Tensor[(10, 5, 7), float32] */;
  %820 = cast(%var_6522, dtype="uint8") /* ty=uint8 */;
  %821 = cast(%var_6523, dtype="uint8") /* ty=Tensor[(132), uint8] */;
  %822 = reshape(%820, newshape=[]) /* ty=uint8 */;
  %823 = reshape(%821, newshape=[11, 12, 1]) /* ty=Tensor[(11, 12, 1), uint8] */;
  %824 = @func_3153(%822, %823) /* ty=(Tensor[(11, 12, 1), bool],) */;
  %825 = cast(%var_6522, dtype="float32") /* ty=float32 */;
  %826 = cast(%var_6533, dtype="float32") /* ty=Tensor[(18), float32] */;
  %827 = reshape(%825, newshape=[]) /* ty=float32 */;
  %828 = reshape(%826, newshape=[6, 3, 1]) /* ty=Tensor[(6, 3, 1), float32] */;
  %829 = @func_5318(%827, %828) /* ty=(Tensor[(6, 3, 1), float32], Tensor[(7, 5, 1), int8], Tensor[(1170), float32], Tensor[(7, 5, 1), int8], Tensor[(11, 12, 1), bool], Tensor[(132), uint8]) */;
  %830 = cast(%var_6475, dtype="uint64") /* ty=Tensor[(7, 10), uint64] */;
  %831 = reshape(%830, newshape=[7, 2, 5]) /* ty=Tensor[(7, 2, 5), uint64] */;
  %832 = @func_148(%831) /* ty=(Tensor[(7, 2, 5), uint64], Tensor[(7, 2, 5), float32]) */;
  %833 = %832.0;
  %834 = cast(%833, dtype="float32") /* ty=Tensor[(7, 2, 5), float32] */;
  %835 = atanh(%834) /* ty=Tensor[(7, 2, 5), float32] */;
  %836 = cast(%835, dtype="float32") /* ty=Tensor[(7, 2, 5), float32] */;
  %837 = %806.0;
  %838 = %817.7;
  %839 = @func_3435(%819) /* ty=Tensor[(10, 5, 7), float32] */;
  %840 = %824.0;
  %841 = %829.0;
  %842 = exp(%836) /* ty=Tensor[(7, 2, 5), float32] */;
  (%837, %var_6475, %811, %838, %var_6498, %var_6499, %839, meta[relay.Constant][68] /* ty=Tensor[(175, 2), float32] */, %840, %var_6522, %var_6523, %841, %var_6533, %842)
}

def @func_1599(%var_1592: Tensor[(10, 16, 15), uint32], %var_1593: Tensor[(10, 16, 15), uint32]) -> Tensor[(10, 16, 15), uint32] {
  %843 = cast(%var_1593, dtype="uint32") /* ty=Tensor[(10, 16, 15), uint32] */;
  %844 = shape_of(%var_1592, dtype="int32") /* ty=Tensor[(3), int32] */;
  %845 = cast(%var_1592, dtype="uint32") /* ty=Tensor[(10, 16, 15), uint32] */;
  %846 = dyn.reshape(%843, %844, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  multiply(%845, %846) /* ty=Tensor[(10, 16, 15), uint32] */
}

def @func_7784() -> (Tensor[(10, 6, 5), float64],) {
  %847 = @func_6802() /* ty=(Tensor[(10, 6, 5), float64],) */;
  %848 = %847.0;
  (%848,)
}

def @func_7732() -> (Tensor[(35), float64],) {
  %849 = @func_5812() /* ty=(Tensor[(35), float64],) */;
  %850 = %849.0;
  (%850,)
}

def @func_4892(%var_4878: Tensor[(14, 8, 13), uint32], %var_4879: Tensor[(14, 8, 13), uint32]) -> Tensor[(14, 8, 13), uint32] {
  %851 = cast(%var_4879, dtype="uint32") /* ty=Tensor[(14, 8, 13), uint32] */;
  %852 = shape_of(%var_4878, dtype="int32") /* ty=Tensor[(3), int32] */;
  %853 = cast(%var_4878, dtype="uint32") /* ty=Tensor[(14, 8, 13), uint32] */;
  %854 = dyn.reshape(%851, %852, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  multiply(%853, %854) /* ty=Tensor[(14, 8, 13), uint32] */
}

def @func_8007(%var_7993: Tensor[(3, 10, 14), bool], %var_7994: Tensor[(3, 10, 14), bool], %var_8000: Tensor[(1, 210), float64], %var_8001: Tensor[(195, 9), float64]) -> (Tensor[(3, 10, 14), bool], Tensor[(2, 15, 7), uint64], Tensor[(1, 210), float64], Tensor[(195, 9), float64], Tensor[(35), float64]) {
  %855 = cast(%var_7994, dtype="bool") /* ty=Tensor[(3, 10, 14), bool] */;
  %856 = shape_of(%var_7993, dtype="int32") /* ty=Tensor[(3), int32] */;
  %857 = cast(%var_7993, dtype="bool") /* ty=Tensor[(3, 10, 14), bool] */;
  %858 = dyn.reshape(%855, %856, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %859 = cast(%var_8000, dtype="float64") /* ty=Tensor[(1, 210), float64] */;
  %860 = cast(%var_8000, dtype="float64") /* ty=Tensor[(1, 210), float64] */;
  %861 = cast(%var_8001, dtype="float64") /* ty=Tensor[(195, 9), float64] */;
  %862 = cast(meta[relay.Constant][69] /* ty=Tensor[(35), float64] */, dtype="float64") /* ty=Tensor[(35), float64] */;
  %863 = reshape(%859, newshape=[2, 15, 7]) /* ty=Tensor[(2, 15, 7), float64] */;
  %864 = reshape(%860, newshape=[2, 15, 7]) /* ty=Tensor[(2, 15, 7), float64] */;
  %865 = reshape(%861, newshape=[1755]) /* ty=Tensor[(1755), float64] */;
  %866 = reshape(%862, newshape=[35]) /* ty=Tensor[(35), float64] */;
  %867 = @func_2685(%863, %864, %865, %866) /* ty=(Tensor[(2, 15, 7), float64], Tensor[(128), float64], Tensor[(1755), float64], Tensor[(35), float64], Tensor[(2, 15, 7), uint64], Tensor[(294), bool], Tensor[(70), uint64], Tensor[(1008), float32]) */;
  %868 = logical_or(%857, %858) /* ty=Tensor[(3, 10, 14), bool] */;
  %869 = %867.4;
  (%868, %869, %var_8000, %var_8001, meta[relay.Constant][69] /* ty=Tensor[(35), float64] */)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_9557() -> Tensor[(10, 5, 14), float64] {
  %0 = @func_9273() /* ty=(Tensor[(10, 5, 14), float64], uint8, uint8, Tensor[(3, 44), uint8], Tensor[(18), float32]) */;
  %0.0
}

def @func_4895(%var_4893: Tensor[(14, 8, 13), uint32], %var_4894: Tensor[(14, 8, 13), uint32]) -> Tensor[(14, 8, 13), uint32] {
  %5 = fn (%var_4878: Tensor[(14, 8, 13), uint32], %var_4879: Tensor[(14, 8, 13), uint32]) -> Tensor[(14, 8, 13), uint32] {
    %1 = cast(%var_4879, dtype="uint32") /* ty=Tensor[(14, 8, 13), uint32] */;
    %2 = shape_of(%var_4878, dtype="int32") /* ty=Tensor[(3), int32] */;
    %3 = cast(%var_4878, dtype="uint32") /* ty=Tensor[(14, 8, 13), uint32] */;
    %4 = dyn.reshape(%1, %2, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    multiply(%3, %4) /* ty=Tensor[(14, 8, 13), uint32] */
  };
  %5(%var_4893, %var_4894) /* ty=Tensor[(14, 8, 13), uint32] */
}

def @func_5190(%var_5179: float32, %var_5187: Tensor[(65, 1), int64], %var_5188: Tensor[(975), int64]) -> (Tensor[(1, 9, 9), float32], Tensor[(10, 5, 7), float32], Tensor[(65, 1), int64], Tensor[(975), int64]) {
  %6 = cast(%var_5179, dtype="float32") /* ty=float32 */;
  %7 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 9, 9), float32] */, dtype="float32") /* ty=Tensor[(1, 9, 9), float32] */;
  %8 = cast(%var_5187, dtype="int64") /* ty=Tensor[(65, 1), int64] */;
  %9 = cast(%var_5188, dtype="int64") /* ty=Tensor[(975), int64] */;
  %10 = reshape(%8, newshape=[13, 1, 5]) /* ty=Tensor[(13, 1, 5), int64] */;
  %11 = reshape(%9, newshape=[13, 15, 5]) /* ty=Tensor[(13, 15, 5), int64] */;
  %12 = @func_4612(%10, %11) /* ty=(Tensor[(13, 15, 5), bool], Tensor[(10, 5, 7), float32], Tensor[(350), float32]) */;
  %13 = floor_mod(%6, %7) /* ty=Tensor[(1, 9, 9), float32] */;
  %14 = %12.1;
  (%13, %14, %var_5187, %var_5188)
}

def @func_6152() -> (Tensor[(10, 5, 14), float64],) {
  %16 = fn () -> (Tensor[(10, 5, 14), float64],) {
    %15 = @func_5887() /* ty=Tensor[(10, 5, 14), float64] */;
    (%15,)
  };
  %16() /* ty=(Tensor[(10, 5, 14), float64],) */
}

def @func_8208() -> (Tensor[(10, 16, 15), bool], Tensor[(70), float64], Tensor[(35, 9), float64]) {
  @func_8206() /* ty=(Tensor[(10, 16, 15), bool], Tensor[(70), float64], Tensor[(35, 9), float64]) */
}

def @func_6803() -> (Tensor[(10, 6, 5), float64],) {
  %19 = fn () -> (Tensor[(10, 6, 5), float64],) {
    %17 = cast(meta[relay.Constant][1] /* ty=Tensor[(10, 6, 5), float64] */, dtype="float64") /* ty=Tensor[(10, 6, 5), float64] */;
    %18 = sigmoid(%17) /* ty=Tensor[(10, 6, 5), float64] */;
    (%18,)
  };
  %19() /* ty=(Tensor[(10, 6, 5), float64],) */
}

def @func_6244() -> (Tensor[(10, 5, 14), float64],) {
  @func_6242() /* ty=(Tensor[(10, 5, 14), float64],) */
}

def @func_6125() -> Tensor[(35, 1), float64] {
  %21 = fn () -> Tensor[(35, 1), float64] {
    %20 = @func_5631() /* ty=(Tensor[(10, 5, 14), float64], Tensor[(35, 1), float64], Tensor[(128), float64], Tensor[(1755), float64], Tensor[(35), float64], Tensor[(9, 15, 13), float64]) */;
    %20.1
  };
  %21() /* ty=Tensor[(35, 1), float64] */
}

def @func_6087(%var_6086: Tensor[(10, 16, 15), uint32]) -> (Tensor[(10, 16, 15), float64], Tensor[(10, 16, 15), float64]) {
  %31 = fn (%var_6078: Tensor[(10, 16, 15), uint32]) -> (Tensor[(10, 16, 15), float64], Tensor[(10, 16, 15), float64]) {
    %22 = @func_5687() /* ty=(Tensor[(35), float64], Tensor[(1, 5, 7), float64], Tensor[(10, 16, 15), uint32], Tensor[(2400), uint32]) */;
    %23 = %22.2;
    %24 = cast(%23, dtype="float64") /* ty=Tensor[(10, 16, 15), float64] */;
    %25 = cast(%var_6078, dtype="float64") /* ty=Tensor[(10, 16, 15), float64] */;
    %26 = shape_of(%23, dtype="int32") /* ty=Tensor[(3), int32] */;
    %27 = cast(%23, dtype="float64") /* ty=Tensor[(10, 16, 15), float64] */;
    %28 = dyn.reshape(%25, %26, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %29 = sinh(%24) /* ty=Tensor[(10, 16, 15), float64] */;
    %30 = add(%27, %28) /* ty=Tensor[(10, 16, 15), float64] */;
    (%29, %30)
  };
  %31(%var_6086) /* ty=(Tensor[(10, 16, 15), float64], Tensor[(10, 16, 15), float64]) */
}

def @func_8762(%var_8700: Tensor[(132), float32], %var_8707: Tensor[(14, 5), float64], %var_8732: Tensor[(1920), float32]) -> (Tensor[(10, 5, 14), float64], Tensor[(6, 11, 2), float32], Tensor[(132), float32], Tensor[(14, 14, 5), uint32], Tensor[(14, 5), float64], Tensor[(10, 16, 12), float32], Tensor[(1920), float32], Tensor[(10, 6, 5), float64]) {
  %32 = @func_5599() /* ty=Tensor[(10, 5, 14), float64] */;
  %33 = cast(%32, dtype="float64") /* ty=Tensor[(10, 5, 14), float64] */;
  %34 = cast(%var_8700, dtype="float32") /* ty=Tensor[(132), float32] */;
  %35 = reshape(%34, newshape=[6, 11, 2]) /* ty=Tensor[(6, 11, 2), float32] */;
  %36 = @func_5776(%35) /* ty=(Tensor[(6, 11, 2), float32],) */;
  %37 = cast(%var_8707, dtype="float64") /* ty=Tensor[(14, 5), float64] */;
  %38 = reshape(%37, newshape=[70]) /* ty=Tensor[(70), float64] */;
  %39 = @func_8262(%38) /* ty=(Tensor[(35), float64], Tensor[(70), float64], Tensor[(70), float64], Tensor[(14, 14, 5), uint32]) */;
  %40 = cast(%var_8732, dtype="float32") /* ty=Tensor[(1920), float32] */;
  %41 = reshape(%40, newshape=[10, 16, 12]) /* ty=Tensor[(10, 16, 12), float32] */;
  %42 = @func_6802() /* ty=(Tensor[(10, 6, 5), float64],) */;
  %43 = %42.0;
  %44 = cast(%43, dtype="float64") /* ty=Tensor[(10, 6, 5), float64] */;
  %45 = rsqrt(%44) /* ty=Tensor[(10, 6, 5), float64] */;
  %46 = cast(%45, dtype="float64") /* ty=Tensor[(10, 6, 5), float64] */;
  %47 = log10(%33) /* ty=Tensor[(10, 5, 14), float64] */;
  %48 = %36.0;
  %49 = %39.3;
  %50 = @func_5931(%41) /* ty=Tensor[(10, 16, 12), float32] */;
  %51 = atan(%46) /* ty=Tensor[(10, 6, 5), float64] */;
  (%47, %48, %var_8700, %49, %var_8707, %50, %var_8732, %51)
}

def @func_7734() -> (Tensor[(35), float64],) {
  @func_7732() /* ty=(Tensor[(35), float64],) */
}

def @func_1599(%var_1592: Tensor[(10, 16, 15), uint32], %var_1593: Tensor[(10, 16, 15), uint32]) -> Tensor[(10, 16, 15), uint32] {
  %52 = cast(%var_1593, dtype="uint32") /* ty=Tensor[(10, 16, 15), uint32] */;
  %53 = shape_of(%var_1592, dtype="int32") /* ty=Tensor[(3), int32] */;
  %54 = cast(%var_1592, dtype="uint32") /* ty=Tensor[(10, 16, 15), uint32] */;
  %55 = dyn.reshape(%52, %53, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  multiply(%54, %55) /* ty=Tensor[(10, 16, 15), uint32] */
}

def @func_2372(%var_2370: int8) -> (Tensor[(7, 5, 1), int8],) {
  @func_2369(%var_2370) /* ty=(Tensor[(7, 5, 1), int8],) */
}

def @func_2691(%var_2687: Tensor[(2, 15, 7), float64], %var_2688: Tensor[(2, 15, 7), float64], %var_2689: Tensor[(1755), float64], %var_2690: Tensor[(35), float64]) -> (Tensor[(2, 15, 7), float64], Tensor[(128), float64], Tensor[(1755), float64], Tensor[(35), float64], Tensor[(2, 15, 7), uint64], Tensor[(294), bool], Tensor[(70), uint64], Tensor[(1008), float32]) {
  @func_2685(%var_2687, %var_2688, %var_2689, %var_2690) /* ty=(Tensor[(2, 15, 7), float64], Tensor[(128), float64], Tensor[(1755), float64], Tensor[(35), float64], Tensor[(2, 15, 7), uint64], Tensor[(294), bool], Tensor[(70), uint64], Tensor[(1008), float32]) */
}

def @func_10287(%var_10285: Tensor[(2, 5, 13), int32], %var_10286: Tensor[(2, 5, 13), int32]) -> (Tensor[(2, 5, 13), int32], Tensor[(2, 5, 13), float64]) {
  %63 = fn (%var_10270: Tensor[(2, 5, 13), int32], %var_10271: Tensor[(2, 5, 13), int32]) -> (Tensor[(2, 5, 13), int32], Tensor[(2, 5, 13), float64]) {
    %56 = cast(%var_10271, dtype="int32") /* ty=Tensor[(2, 5, 13), int32] */;
    %57 = shape_of(%var_10270, dtype="int32") /* ty=Tensor[(3), int32] */;
    %58 = cast(%var_10270, dtype="int32") /* ty=Tensor[(2, 5, 13), int32] */;
    %59 = dyn.reshape(%56, %57, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %60 = cast(%var_10270, dtype="float64") /* ty=Tensor[(2, 5, 13), float64] */;
    %61 = add(%58, %59) /* ty=Tensor[(2, 5, 13), int32] */;
    %62 = sinh(%60) /* ty=Tensor[(2, 5, 13), float64] */;
    (%61, %62)
  };
  %63(%var_10285, %var_10286) /* ty=(Tensor[(2, 5, 13), int32], Tensor[(2, 5, 13), float64]) */
}

def @func_7262(%var_7260: Tensor[(13, 16, 2), float64], %var_7261: Tensor[(294), int16]) -> (Tensor[(13, 16, 2), float64], Tensor[(9, 10, 10), bool], Tensor[(18, 50), uint8], Tensor[(294), int16], Tensor[(1008), float32], Tensor[(6, 6, 10), float32]) {
  %79 = fn (%var_7237: Tensor[(13, 16, 2), float64], %var_7244: Tensor[(294), int16]) -> (Tensor[(13, 16, 2), float64], Tensor[(9, 10, 10), bool], Tensor[(18, 50), uint8], Tensor[(294), int16], Tensor[(1008), float32], Tensor[(6, 6, 10), float32]) {
    %64 = cast(-0.305288f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %65 = cast(%var_7237, dtype="float64") /* ty=Tensor[(13, 16, 2), float64] */;
    %66 = cast(meta[relay.Constant][2] /* ty=Tensor[(18, 50), uint8] */, dtype="uint8") /* ty=Tensor[(18, 50), uint8] */;
    %67 = cast(meta[relay.Constant][2] /* ty=Tensor[(18, 50), uint8] */, dtype="uint8") /* ty=Tensor[(18, 50), uint8] */;
    %68 = cast(%var_7244, dtype="int16") /* ty=Tensor[(294), int16] */;
    %69 = cast(meta[relay.Constant][3] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
    %70 = reshape(%66, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), uint8] */;
    %71 = reshape(%67, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), uint8] */;
    %72 = reshape(%68, newshape=[294]) /* ty=Tensor[(294), int16] */;
    %73 = reshape(%69, newshape=[1008]) /* ty=Tensor[(1008), float32] */;
    %74 = @func_419(%70, %71, %72, %73) /* ty=(Tensor[(9, 10, 10), bool], Tensor[(7, 6, 7), int16], int16, Tensor[(294), int16], Tensor[(7, 6, 7), int16], Tensor[(70), uint64], Tensor[(1008), float32]) */;
    %75 = @func_7207() /* ty=(Tensor[(6, 6, 10), float32],) */;
    %76 = floor_mod(%64, %65) /* ty=Tensor[(13, 16, 2), float64] */;
    %77 = %74.0;
    %78 = %75.0;
    (%76, %77, meta[relay.Constant][2] /* ty=Tensor[(18, 50), uint8] */, %var_7244, meta[relay.Constant][3] /* ty=Tensor[(1008), float32] */, %78)
  };
  %79(%var_7260, %var_7261) /* ty=(Tensor[(13, 16, 2), float64], Tensor[(9, 10, 10), bool], Tensor[(18, 50), uint8], Tensor[(294), int16], Tensor[(1008), float32], Tensor[(6, 6, 10), float32]) */
}

def @func_9211(%var_9155: float32, %var_9157: Tensor[(975), int64], %var_9160: Tensor[(2400), uint32]) -> (Tensor[(65, 1), int64], float32, Tensor[(65), int64], Tensor[(975), int64], Tensor[(1170), float32], Tensor[(2400), uint32], Tensor[(10, 5, 14), uint16], Tensor[(70), float64], Tensor[(70, 1), float64], Tensor[(35), float64]) {
  %80 = cast(%var_9155, dtype="float32") /* ty=float32 */;
  %81 = cast(meta[relay.Constant][4] /* ty=Tensor[(65), int64] */, dtype="int64") /* ty=Tensor[(65), int64] */;
  %82 = cast(%var_9157, dtype="int64") /* ty=Tensor[(975), int64] */;
  %83 = reshape(%80, newshape=[]) /* ty=float32 */;
  %84 = reshape(%81, newshape=[65, 1]) /* ty=Tensor[(65, 1), int64] */;
  %85 = reshape(%82, newshape=[975]) /* ty=Tensor[(975), int64] */;
  %86 = @func_5190(%83, %84, %85) /* ty=(Tensor[(1, 9, 9), float32], Tensor[(10, 5, 7), float32], Tensor[(65, 1), int64], Tensor[(975), int64]) */;
  %87 = cast(%var_9155, dtype="int8") /* ty=int8 */;
  %88 = cast(%var_9160, dtype="uint32") /* ty=Tensor[(2400), uint32] */;
  %89 = reshape(%87, newshape=[]) /* ty=int8 */;
  %90 = reshape(%88, newshape=[2400]) /* ty=Tensor[(2400), uint32] */;
  %91 = @func_2961(%89, %90) /* ty=(Tensor[(9, 12, 7), float64], int8, Tensor[(1170), float32], int8, Tensor[(10, 16, 15), uint32], Tensor[(2400), uint32]) */;
  %92 = @func_6242() /* ty=(Tensor[(10, 5, 14), float64],) */;
  %93 = %92.0;
  %94 = cast(%93, dtype="float64") /* ty=Tensor[(10, 5, 14), float64] */;
  %95 = reshape(%94, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), float64] */;
  %96 = @func_6854(%95) /* ty=(Tensor[(10, 5, 14), bool],) */;
  %97 = %96.0;
  %98 = cast(%93, dtype="uint16") /* ty=Tensor[(10, 5, 14), uint16] */;
  %99 = shape_of(%97, dtype="int32") /* ty=Tensor[(3), int32] */;
  %100 = cast(%97, dtype="uint16") /* ty=Tensor[(10, 5, 14), uint16] */;
  %101 = dyn.reshape(%98, %99, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %102 = cast(meta[relay.Constant][5] /* ty=Tensor[(70, 1), float64] */, dtype="float64") /* ty=Tensor[(70, 1), float64] */;
  %103 = reshape(%102, newshape=[70]) /* ty=Tensor[(70), float64] */;
  %104 = @func_8262(%103) /* ty=(Tensor[(35), float64], Tensor[(70), float64], Tensor[(70), float64], Tensor[(14, 14, 5), uint32]) */;
  %105 = @func_8846() /* ty=(Tensor[(35), float64],) */;
  %106 = %86.2;
  %107 = %91.2;
  %108 = left_shift(%100, %101) /* ty=Tensor[(10, 5, 14), uint16] */;
  %109 = %104.1;
  %110 = %105.0;
  (%106, %var_9155, meta[relay.Constant][4] /* ty=Tensor[(65), int64] */, %var_9157, %107, %var_9160, %108, %109, meta[relay.Constant][5] /* ty=Tensor[(70, 1), float64] */, %110)
}

def @func_382(%var_380: Tensor[(12, 14, 6), float32]) -> (Tensor[(12, 14, 6), float64], Tensor[(7, 2, 5), float32], Tensor[(70), uint64]) {
  @func_379(%var_380) /* ty=(Tensor[(12, 14, 6), float64], Tensor[(7, 2, 5), float32], Tensor[(70), uint64]) */
}

def @func_5888() -> Tensor[(10, 5, 14), float64] {
  %111 = fn () -> Tensor[(10, 5, 14), float64] {
    @func_5599() /* ty=Tensor[(10, 5, 14), float64] */
  };
  %111() /* ty=Tensor[(10, 5, 14), float64] */
}

def @func_2369(%var_2351: int8) -> (Tensor[(7, 5, 1), int8],) {
  %112 = cast(%var_2351, dtype="int8") /* ty=int8 */;
  %113 = cast(meta[relay.Constant][6] /* ty=Tensor[(7, 5, 1), int8] */, dtype="int8") /* ty=Tensor[(7, 5, 1), int8] */;
  %114 = bitwise_or(%112, %113) /* ty=Tensor[(7, 5, 1), int8] */;
  (%114,)
}

def @func_7785() -> (Tensor[(10, 6, 5), float64],) {
  %117 = fn () -> (Tensor[(10, 6, 5), float64],) {
    %115 = @func_6802() /* ty=(Tensor[(10, 6, 5), float64],) */;
    %116 = %115.0;
    (%116,)
  };
  %117() /* ty=(Tensor[(10, 6, 5), float64],) */
}

def @func_7178(%var_7176: Tensor[(2400), uint32]) -> (Tensor[(10, 5, 14), float64], Tensor[(10, 16, 15), uint32], int8, Tensor[(2400), uint32]) {
  @func_7175(%var_7176) /* ty=(Tensor[(10, 5, 14), float64], Tensor[(10, 16, 15), uint32], int8, Tensor[(2400), uint32]) */
}

def @func_3157(%var_3155: uint8, %var_3156: Tensor[(11, 12, 1), uint8]) -> (Tensor[(11, 12, 1), bool],) {
  @func_3153(%var_3155, %var_3156) /* ty=(Tensor[(11, 12, 1), bool],) */
}

def @func_7444() -> Tensor[(14, 14, 5), uint32] {
  %118 = cast(meta[relay.Constant][8] /* ty=Tensor[(14, 14, 5), uint32] */, dtype="uint32") /* ty=Tensor[(14, 14, 5), uint32] */;
  %119 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(14, 14, 5), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %120 = cast(meta[relay.Constant][7] /* ty=Tensor[(14, 14, 5), uint32] */, dtype="uint32") /* ty=Tensor[(14, 14, 5), uint32] */;
  %121 = dyn.reshape(%118, %119, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  left_shift(%120, %121) /* ty=Tensor[(14, 14, 5), uint32] */
}

def @func_10114() -> (Tensor[(10, 5, 14), float64],) {
  %122 = @func_5599() /* ty=Tensor[(10, 5, 14), float64] */;
  (%122,)
}

def @func_425(%var_421: Tensor[(9, 10, 10), uint8], %var_422: Tensor[(9, 10, 10), uint8], %var_423: Tensor[(294), int16], %var_424: Tensor[(1008), float32]) -> (Tensor[(9, 10, 10), bool], Tensor[(7, 6, 7), int16], int16, Tensor[(294), int16], Tensor[(7, 6, 7), int16], Tensor[(70), uint64], Tensor[(1008), float32]) {
  @func_419(%var_421, %var_422, %var_423, %var_424) /* ty=(Tensor[(9, 10, 10), bool], Tensor[(7, 6, 7), int16], int16, Tensor[(294), int16], Tensor[(7, 6, 7), int16], Tensor[(70), uint64], Tensor[(1008), float32]) */
}

def @func_8621(%var_8618: uint8, %var_8619: Tensor[(132), uint8], %var_8620: Tensor[(18, 1), float32]) -> (Tensor[(10, 6, 5), float64], Tensor[(11, 12, 1), bool], uint8, Tensor[(132), uint8], Tensor[(10, 5, 7), float32], Tensor[(70), uint64], Tensor[(128), float64], Tensor[(1755), float64], Tensor[(35, 1), float64], Tensor[(18, 1), float32]) {
  %148 = fn (%var_8576: uint8, %var_8577: Tensor[(132), uint8], %var_8584: Tensor[(18, 1), float32]) -> (Tensor[(10, 6, 5), float64], Tensor[(11, 12, 1), bool], uint8, Tensor[(132), uint8], Tensor[(10, 5, 7), float32], Tensor[(70), uint64], Tensor[(128), float64], Tensor[(1755), float64], Tensor[(35, 1), float64], Tensor[(18, 1), float32]) {
    %123 = @func_6802() /* ty=(Tensor[(10, 6, 5), float64],) */;
    %124 = cast(%var_8576, dtype="uint8") /* ty=uint8 */;
    %125 = cast(%var_8577, dtype="uint8") /* ty=Tensor[(132), uint8] */;
    %126 = reshape(%124, newshape=[]) /* ty=uint8 */;
    %127 = reshape(%125, newshape=[11, 12, 1]) /* ty=Tensor[(11, 12, 1), uint8] */;
    %128 = @func_3153(%126, %127) /* ty=(Tensor[(11, 12, 1), bool],) */;
    %129 = cast(meta[relay.Constant][9] /* ty=Tensor[(70), uint64] */, dtype="uint64") /* ty=Tensor[(70), uint64] */;
    %130 = cast(meta[relay.Constant][10] /* ty=Tensor[(128), float64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
    %131 = cast(meta[relay.Constant][11] /* ty=Tensor[(1755), float64] */, dtype="float64") /* ty=Tensor[(1755), float64] */;
    %132 = cast(%var_8576, dtype="uint8") /* ty=uint8 */;
    %133 = cast(%var_8577, dtype="uint8") /* ty=Tensor[(132), uint8] */;
    %134 = cast(%var_8584, dtype="float32") /* ty=Tensor[(18, 1), float32] */;
    %135 = reshape(%129, newshape=[7, 10]) /* ty=Tensor[(7, 10), uint64] */;
    %136 = reshape(%130, newshape=[128]) /* ty=Tensor[(128), float64] */;
    %137 = reshape(%131, newshape=[1755]) /* ty=Tensor[(1755), float64] */;
    %138 = reshape(%132, newshape=[]) /* ty=uint8 */;
    %139 = reshape(%133, newshape=[132]) /* ty=Tensor[(132), uint8] */;
    %140 = reshape(%134, newshape=[18]) /* ty=Tensor[(18), float32] */;
    %141 = @func_6546(%135, %136, %137, %138, %139, %140) /* ty=(Tensor[(10, 5, 14), float64], Tensor[(7, 10), uint64], Tensor[(35), float64], Tensor[(35, 1), float64], Tensor[(128), float64], Tensor[(1755), float64], Tensor[(10, 5, 7), float32], Tensor[(175, 2), float32], Tensor[(11, 12, 1), bool], uint8, Tensor[(132), uint8], Tensor[(6, 3, 1), float32], Tensor[(18), float32], Tensor[(7, 2, 5), float32]) */;
    %142 = cast(%var_8584, dtype="float32") /* ty=Tensor[(18, 1), float32] */;
    %143 = %123.0;
    %144 = %128.0;
    %145 = %141.6;
    %146 = @func_6124() /* ty=Tensor[(35, 1), float64] */;
    %147 = atan(%142) /* ty=Tensor[(18, 1), float32] */;
    (%143, %144, %var_8576, %var_8577, %145, meta[relay.Constant][9] /* ty=Tensor[(70), uint64] */, meta[relay.Constant][10] /* ty=Tensor[(128), float64] */, meta[relay.Constant][11] /* ty=Tensor[(1755), float64] */, %146, %147)
  };
  %148(%var_8618, %var_8619, %var_8620) /* ty=(Tensor[(10, 6, 5), float64], Tensor[(11, 12, 1), bool], uint8, Tensor[(132), uint8], Tensor[(10, 5, 7), float32], Tensor[(70), uint64], Tensor[(128), float64], Tensor[(1755), float64], Tensor[(35, 1), float64], Tensor[(18, 1), float32]) */
}

def @func_3437(%var_3436: Tensor[(10, 5, 7), float32]) -> Tensor[(10, 5, 7), float32] {
  %153 = fn (%var_3421: Tensor[(10, 5, 7), float32]) -> Tensor[(10, 5, 7), float32] {
    %149 = cast(meta[relay.Constant][12] /* ty=Tensor[(10, 5, 7), float32] */, dtype="float32") /* ty=Tensor[(10, 5, 7), float32] */;
    %150 = shape_of(%var_3421, dtype="int32") /* ty=Tensor[(3), int32] */;
    %151 = cast(%var_3421, dtype="float32") /* ty=Tensor[(10, 5, 7), float32] */;
    %152 = dyn.reshape(%149, %150, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    power(%151, %152) /* ty=Tensor[(10, 5, 7), float32] */
  };
  %153(%var_3436) /* ty=Tensor[(10, 5, 7), float32] */
}

def @func_5600() -> Tensor[(10, 5, 14), float64] {
  %155 = fn () -> Tensor[(10, 5, 14), float64] {
    %154 = cast(meta[relay.Constant][13] /* ty=Tensor[(10, 5, 14), float64] */, dtype="float64") /* ty=Tensor[(10, 5, 14), float64] */;
    sigmoid(%154) /* ty=Tensor[(10, 5, 14), float64] */
  };
  %155() /* ty=Tensor[(10, 5, 14), float64] */
}

def @func_5321(%var_5319: float32, %var_5320: Tensor[(6, 3, 1), float32]) -> (Tensor[(6, 3, 1), float32], Tensor[(7, 5, 1), int8], Tensor[(1170), float32], Tensor[(7, 5, 1), int8], Tensor[(11, 12, 1), bool], Tensor[(132), uint8]) {
  %175 = fn (%var_5299: float32, %var_5300: Tensor[(6, 3, 1), float32]) -> (Tensor[(6, 3, 1), float32], Tensor[(7, 5, 1), int8], Tensor[(1170), float32], Tensor[(7, 5, 1), int8], Tensor[(11, 12, 1), bool], Tensor[(132), uint8]) {
    %156 = cast(%var_5299, dtype="float32") /* ty=float32 */;
    %157 = cast(%var_5300, dtype="float32") /* ty=Tensor[(6, 3, 1), float32] */;
    %158 = cast(meta[relay.Constant][14] /* ty=Tensor[(1170), float32] */, dtype="float32") /* ty=Tensor[(1170), float32] */;
    %159 = cast(%var_5299, dtype="int8") /* ty=int8 */;
    %160 = reshape(%158, newshape=[9, 10, 13]) /* ty=Tensor[(9, 10, 13), float32] */;
    %161 = reshape(%159, newshape=[]) /* ty=int8 */;
    %162 = @func_2508(%160, %161) /* ty=(Tensor[(9, 10, 13), float32], Tensor[(7, 5, 1), int8], int8) */;
    %163 = cast(%var_5299, dtype="int8") /* ty=int8 */;
    %164 = reshape(%163, newshape=[]) /* ty=int8 */;
    %165 = @func_2369(%164) /* ty=(Tensor[(7, 5, 1), int8],) */;
    %166 = cast(%var_5299, dtype="uint8") /* ty=uint8 */;
    %167 = cast(meta[relay.Constant][15] /* ty=Tensor[(132), uint8] */, dtype="uint8") /* ty=Tensor[(132), uint8] */;
    %168 = reshape(%166, newshape=[]) /* ty=uint8 */;
    %169 = reshape(%167, newshape=[11, 12, 1]) /* ty=Tensor[(11, 12, 1), uint8] */;
    %170 = @func_3153(%168, %169) /* ty=(Tensor[(11, 12, 1), bool],) */;
    %171 = minimum(%156, %157) /* ty=Tensor[(6, 3, 1), float32] */;
    %172 = %162.1;
    %173 = %165.0;
    %174 = %170.0;
    (%171, %172, meta[relay.Constant][14] /* ty=Tensor[(1170), float32] */, %173, %174, meta[relay.Constant][15] /* ty=Tensor[(132), uint8] */)
  };
  %175(%var_5319, %var_5320) /* ty=(Tensor[(6, 3, 1), float32], Tensor[(7, 5, 1), int8], Tensor[(1170), float32], Tensor[(7, 5, 1), int8], Tensor[(11, 12, 1), bool], Tensor[(132), uint8]) */
}

def @func_8433() -> (Tensor[(10, 5, 14), float64], Tensor[(10, 6, 5), float64], Tensor[(6, 6, 10), float32]) {
  %176 = @func_6829() /* ty=(Tensor[(10, 5, 14), float64],) */;
  %177 = @func_6802() /* ty=(Tensor[(10, 6, 5), float64],) */;
  %178 = @func_8145() /* ty=(Tensor[(6, 6, 10), float32],) */;
  %179 = %176.0;
  %180 = %177.0;
  %181 = %178.0;
  (%179, %180, %181)
}

def @func_8838() -> (Tensor[(14, 14, 5), uint32], Tensor[(10, 5, 14), float64]) {
  %182 = @func_8799() /* ty=Tensor[(10, 5, 14), float64] */;
  %183 = cast(%182, dtype="float64") /* ty=Tensor[(10, 5, 14), float64] */;
  %184 = acosh(%183) /* ty=Tensor[(10, 5, 14), float64] */;
  %185 = cast(%184, dtype="float64") /* ty=Tensor[(10, 5, 14), float64] */;
  %186 = @func_7444() /* ty=Tensor[(14, 14, 5), uint32] */;
  %187 = cosh(%185) /* ty=Tensor[(10, 5, 14), float64] */;
  (%186, %187)
}

def @main() -> (Tensor[(9, 2, 13), float32],) {
  %188 = cast(meta[relay.Constant][16] /* ty=Tensor[(9, 2, 13), float32] */, dtype="float32") /* ty=Tensor[(9, 2, 13), float32] */;
  %189 = acosh(%188) /* ty=Tensor[(9, 2, 13), float32] */;
  (%189,)
}

def @func_6939() -> Tensor[(10, 5, 14), float64] {
  %190 = @func_6829() /* ty=(Tensor[(10, 5, 14), float64],) */;
  %190.0
}

def @func_8146() -> (Tensor[(6, 6, 10), float32],) {
  %193 = fn () -> (Tensor[(6, 6, 10), float32],) {
    %191 = @func_7207() /* ty=(Tensor[(6, 6, 10), float32],) */;
    %192 = %191.0;
    (%192,)
  };
  %193() /* ty=(Tensor[(6, 6, 10), float32],) */
}

def @func_6829() -> (Tensor[(10, 5, 14), float64],) {
  %194 = @func_6151() /* ty=(Tensor[(10, 5, 14), float64],) */;
  %195 = %194.0;
  (%195,)
}

def @func_9280() -> (Tensor[(10, 16, 15), bool],) {
  @func_9278() /* ty=(Tensor[(10, 16, 15), bool],) */
}

def @func_10048() -> (Tensor[(35), float64], Tensor[(35, 1), float64]) {
  %201 = fn () -> (Tensor[(35), float64], Tensor[(35, 1), float64]) {
    %196 = @func_5812() /* ty=(Tensor[(35), float64],) */;
    %197 = %196.0;
    %198 = cast(%197, dtype="float64") /* ty=Tensor[(35), float64] */;
    %199 = log2(%198) /* ty=Tensor[(35), float64] */;
    %200 = @func_6124() /* ty=Tensor[(35, 1), float64] */;
    (%199, %200)
  };
  %201() /* ty=(Tensor[(35), float64], Tensor[(35, 1), float64]) */
}

def @func_4377(%var_4376: Tensor[(4, 5, 6), float32]) -> (Tensor[(4, 5, 6), float32],) {
  %204 = fn (%var_4369: Tensor[(4, 5, 6), float32]) -> (Tensor[(4, 5, 6), float32],) {
    %202 = cast(%var_4369, dtype="float32") /* ty=Tensor[(4, 5, 6), float32] */;
    %203 = atan(%202) /* ty=Tensor[(4, 5, 6), float32] */;
    (%203,)
  };
  %204(%var_4376) /* ty=(Tensor[(4, 5, 6), float32],) */
}

def @func_6242() -> (Tensor[(10, 5, 14), float64],) {
  %205 = @func_5599() /* ty=Tensor[(10, 5, 14), float64] */;
  (%205,)
}

def @func_7209() -> (Tensor[(6, 6, 10), float32],) {
  @func_7207() /* ty=(Tensor[(6, 6, 10), float32],) */
}

def @func_9348() -> (Tensor[(35, 1), float32],) {
  %208 = fn () -> (Tensor[(35, 1), float32],) {
    %206 = @func_7272() /* ty=(Tensor[(35, 1), float32],) */;
    %207 = %206.0;
    (%207,)
  };
  %208() /* ty=(Tensor[(35, 1), float32],) */
}

def @func_9278() -> (Tensor[(10, 16, 15), bool],) {
  %209 = @func_8206() /* ty=(Tensor[(10, 16, 15), bool], Tensor[(70), float64], Tensor[(35, 9), float64]) */;
  %210 = %209.0;
  (%210,)
}

def @func_1717(%var_1716: Tensor[(1, 5, 7), float64]) -> Tensor[(1, 5, 7), float64] {
  %212 = fn (%var_1710: Tensor[(1, 5, 7), float64]) -> Tensor[(1, 5, 7), float64] {
    %211 = cast(%var_1710, dtype="float64") /* ty=Tensor[(1, 5, 7), float64] */;
    log10(%211) /* ty=Tensor[(1, 5, 7), float64] */
  };
  %212(%var_1716) /* ty=Tensor[(1, 5, 7), float64] */
}

def @func_1627(%var_1620: Tensor[(9, 15, 13), float64]) -> Tensor[(9, 15, 13), float64] {
  %213 = cast(%var_1620, dtype="float64") /* ty=Tensor[(9, 15, 13), float64] */;
  sinh(%213) /* ty=Tensor[(9, 15, 13), float64] */
}

def @func_7531() -> (Tensor[(10, 5, 14), float64], Tensor[(35), float32], Tensor[(35, 2), uint8], Tensor[(70), float64]) {
  %226 = fn () -> (Tensor[(10, 5, 14), float64], Tensor[(35), float32], Tensor[(35, 2), uint8], Tensor[(70), float64]) {
    %214 = @func_6242() /* ty=(Tensor[(10, 5, 14), float64],) */;
    %215 = @func_5812() /* ty=(Tensor[(35), float64],) */;
    %216 = %215.0;
    %217 = cast(%216, dtype="float32") /* ty=Tensor[(35), float32] */;
    %218 = cast(meta[relay.Constant][17] /* ty=Tensor[(70), float64] */, dtype="float64") /* ty=Tensor[(70), float64] */;
    %219 = cast(meta[relay.Constant][17] /* ty=Tensor[(70), float64] */, dtype="float64") /* ty=Tensor[(70), float64] */;
    %220 = reshape(%218, newshape=[35, 2]) /* ty=Tensor[(35, 2), float64] */;
    %221 = reshape(%219, newshape=[35, 2]) /* ty=Tensor[(35, 2), float64] */;
    %222 = @func_5860(%220, %221) /* ty=(Tensor[(35, 2), uint8], Tensor[(35, 2), float32]) */;
    %223 = %214.0;
    %224 = log10(%217) /* ty=Tensor[(35), float32] */;
    %225 = %222.0;
    (%223, %224, %225, meta[relay.Constant][17] /* ty=Tensor[(70), float64] */)
  };
  %226() /* ty=(Tensor[(10, 5, 14), float64], Tensor[(35), float32], Tensor[(35, 2), uint8], Tensor[(70), float64]) */
}

def @func_9863(%var_9844: int16, %var_9861: Tensor[(64, 2), float64]) -> (Tensor[(10, 5, 14), float64], Tensor[(10, 5, 14), float64], Tensor[(7, 6, 7), int16], int16, Tensor[(294), int16], Tensor[(10, 5, 14), float64], Tensor[(64, 2), float64]) {
  %227 = @func_8838() /* ty=(Tensor[(14, 14, 5), uint32], Tensor[(10, 5, 14), float64]) */;
  %228 = cast(%var_9844, dtype="int16") /* ty=int16 */;
  %229 = cast(meta[relay.Constant][18] /* ty=Tensor[(294), int16] */, dtype="int16") /* ty=Tensor[(294), int16] */;
  %230 = reshape(%228, newshape=[]) /* ty=int16 */;
  %231 = reshape(%229, newshape=[7, 6, 7]) /* ty=Tensor[(7, 6, 7), int16] */;
  %232 = @func_218(%230, %231) /* ty=(Tensor[(7, 6, 7), int16],) */;
  %233 = cast(%var_9861, dtype="float64") /* ty=Tensor[(64, 2), float64] */;
  %234 = reshape(%233, newshape=[32, 4]) /* ty=Tensor[(32, 4), float64] */;
  %235 = @func_6215(%234) /* ty=(Tensor[(10, 5, 14), float64], Tensor[(9, 15, 13), float64], Tensor[(32, 4), float64], Tensor[(35), float64], Tensor[(10, 5, 14), float64], Tensor[(1755), bool]) */;
  %236 = %227.1;
  %237 = @func_9710() /* ty=Tensor[(10, 5, 14), float64] */;
  %238 = %232.0;
  %239 = %235.0;
  (%236, %237, %238, %var_9844, meta[relay.Constant][18] /* ty=Tensor[(294), int16] */, %239, %var_9861)
}

def @func_218(%var_213: int16, %var_214: Tensor[(7, 6, 7), int16]) -> (Tensor[(7, 6, 7), int16],) {
  %240 = cast(%var_213, dtype="int16") /* ty=int16 */;
  %241 = cast(%var_214, dtype="int16") /* ty=Tensor[(7, 6, 7), int16] */;
  %242 = minimum(%240, %241) /* ty=Tensor[(7, 6, 7), int16] */;
  (%242,)
}

def @func_5776(%var_5757: Tensor[(6, 11, 2), float32]) -> (Tensor[(6, 11, 2), float32],) {
  %243 = cast(%var_5757, dtype="float32") /* ty=Tensor[(6, 11, 2), float32] */;
  %244 = cosh(%243) /* ty=Tensor[(6, 11, 2), float32] */;
  (%244,)
}

def @func_8012(%var_8008: Tensor[(3, 10, 14), bool], %var_8009: Tensor[(3, 10, 14), bool], %var_8010: Tensor[(1, 210), float64], %var_8011: Tensor[(195, 9), float64]) -> (Tensor[(3, 10, 14), bool], Tensor[(2, 15, 7), uint64], Tensor[(1, 210), float64], Tensor[(195, 9), float64], Tensor[(35), float64]) {
  %260 = fn (%var_7993: Tensor[(3, 10, 14), bool], %var_7994: Tensor[(3, 10, 14), bool], %var_8000: Tensor[(1, 210), float64], %var_8001: Tensor[(195, 9), float64]) -> (Tensor[(3, 10, 14), bool], Tensor[(2, 15, 7), uint64], Tensor[(1, 210), float64], Tensor[(195, 9), float64], Tensor[(35), float64]) {
    %245 = cast(%var_7994, dtype="bool") /* ty=Tensor[(3, 10, 14), bool] */;
    %246 = shape_of(%var_7993, dtype="int32") /* ty=Tensor[(3), int32] */;
    %247 = cast(%var_7993, dtype="bool") /* ty=Tensor[(3, 10, 14), bool] */;
    %248 = dyn.reshape(%245, %246, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %249 = cast(%var_8000, dtype="float64") /* ty=Tensor[(1, 210), float64] */;
    %250 = cast(%var_8000, dtype="float64") /* ty=Tensor[(1, 210), float64] */;
    %251 = cast(%var_8001, dtype="float64") /* ty=Tensor[(195, 9), float64] */;
    %252 = cast(meta[relay.Constant][19] /* ty=Tensor[(35), float64] */, dtype="float64") /* ty=Tensor[(35), float64] */;
    %253 = reshape(%249, newshape=[2, 15, 7]) /* ty=Tensor[(2, 15, 7), float64] */;
    %254 = reshape(%250, newshape=[2, 15, 7]) /* ty=Tensor[(2, 15, 7), float64] */;
    %255 = reshape(%251, newshape=[1755]) /* ty=Tensor[(1755), float64] */;
    %256 = reshape(%252, newshape=[35]) /* ty=Tensor[(35), float64] */;
    %257 = @func_2685(%253, %254, %255, %256) /* ty=(Tensor[(2, 15, 7), float64], Tensor[(128), float64], Tensor[(1755), float64], Tensor[(35), float64], Tensor[(2, 15, 7), uint64], Tensor[(294), bool], Tensor[(70), uint64], Tensor[(1008), float32]) */;
    %258 = logical_or(%247, %248) /* ty=Tensor[(3, 10, 14), bool] */;
    %259 = %257.4;
    (%258, %259, %var_8000, %var_8001, meta[relay.Constant][19] /* ty=Tensor[(35), float64] */)
  };
  %260(%var_8008, %var_8009, %var_8010, %var_8011) /* ty=(Tensor[(3, 10, 14), bool], Tensor[(2, 15, 7), uint64], Tensor[(1, 210), float64], Tensor[(195, 9), float64], Tensor[(35), float64]) */
}

def @func_2685(%var_2629: Tensor[(2, 15, 7), float64], %var_2630: Tensor[(2, 15, 7), float64], %var_2637: Tensor[(1755), float64], %var_2638: Tensor[(35), float64]) -> (Tensor[(2, 15, 7), float64], Tensor[(128), float64], Tensor[(1755), float64], Tensor[(35), float64], Tensor[(2, 15, 7), uint64], Tensor[(294), bool], Tensor[(70), uint64], Tensor[(1008), float32]) {
  %261 = cast(%var_2630, dtype="float64") /* ty=Tensor[(2, 15, 7), float64] */;
  %262 = shape_of(%var_2629, dtype="int32") /* ty=Tensor[(3), int32] */;
  %263 = cast(%var_2629, dtype="float64") /* ty=Tensor[(2, 15, 7), float64] */;
  %264 = dyn.reshape(%261, %262, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %265 = cast(%var_2630, dtype="uint64") /* ty=Tensor[(2, 15, 7), uint64] */;
  %266 = shape_of(%var_2629, dtype="int32") /* ty=Tensor[(3), int32] */;
  %267 = cast(%var_2629, dtype="uint64") /* ty=Tensor[(2, 15, 7), uint64] */;
  %268 = dyn.reshape(%265, %266, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %269 = cast(meta[relay.Constant][20] /* ty=Tensor[(128), float64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
  %270 = cast(meta[relay.Constant][20] /* ty=Tensor[(128), float64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
  %271 = cast(%var_2637, dtype="float64") /* ty=Tensor[(1755), float64] */;
  %272 = cast(%var_2638, dtype="float64") /* ty=Tensor[(35), float64] */;
  %273 = reshape(%269, newshape=[2, 8, 8]) /* ty=Tensor[(2, 8, 8), float64] */;
  %274 = reshape(%270, newshape=[2, 8, 8]) /* ty=Tensor[(2, 8, 8), float64] */;
  %275 = reshape(%271, newshape=[1755]) /* ty=Tensor[(1755), float64] */;
  %276 = reshape(%272, newshape=[35, 1]) /* ty=Tensor[(35, 1), float64] */;
  %277 = @func_2022(%273, %274, %275, %276) /* ty=(Tensor[(9, 15, 13), float64], Tensor[(1755), float64], Tensor[(2, 8, 8), float64], Tensor[(7, 6, 7), int16], int16, Tensor[(294), int16], Tensor[(1, 5, 7), float64], Tensor[(35, 1), float64], Tensor[(2, 8, 8), float64]) */;
  %278 = %277.5;
  %279 = cast(meta[relay.Constant][21] /* ty=Tensor[(294), int16] */, dtype="bool") /* ty=Tensor[(294), bool] */;
  %280 = shape_of(%278, dtype="int32") /* ty=Tensor[(1), int32] */;
  %281 = cast(%278, dtype="bool") /* ty=Tensor[(294), bool] */;
  %282 = dyn.reshape(%279, %280, newshape=[]) /* ty=Tensor[(?), bool] */;
  %283 = cast(meta[relay.Constant][22] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %284 = reshape(%283, newshape=[12, 14, 6]) /* ty=Tensor[(12, 14, 6), float32] */;
  %285 = @func_379(%284) /* ty=(Tensor[(12, 14, 6), float64], Tensor[(7, 2, 5), float32], Tensor[(70), uint64]) */;
  %286 = floor_divide(%263, %264) /* ty=Tensor[(2, 15, 7), float64] */;
  %287 = maximum(%267, %268) /* ty=Tensor[(2, 15, 7), uint64] */;
  %288 = equal(%281, %282) /* ty=Tensor[(294), bool] */;
  %289 = %285.2;
  (%286, meta[relay.Constant][20] /* ty=Tensor[(128), float64] */, %var_2637, %var_2638, %287, %288, %289, meta[relay.Constant][22] /* ty=Tensor[(1008), float32] */)
}

def @func_9130(%var_9129: Tensor[(2, 9, 2), float32]) -> Tensor[(2, 9, 2), float32] {
  %291 = fn (%var_9124: Tensor[(2, 9, 2), float32]) -> Tensor[(2, 9, 2), float32] {
    %290 = cast(%var_9124, dtype="float32") /* ty=Tensor[(2, 9, 2), float32] */;
    atan(%290) /* ty=Tensor[(2, 9, 2), float32] */
  };
  %291(%var_9129) /* ty=Tensor[(2, 9, 2), float32] */
}

def @func_9216(%var_9213: float32, %var_9214: Tensor[(975), int64], %var_9215: Tensor[(2400), uint32]) -> (Tensor[(65, 1), int64], float32, Tensor[(65), int64], Tensor[(975), int64], Tensor[(1170), float32], Tensor[(2400), uint32], Tensor[(10, 5, 14), uint16], Tensor[(70), float64], Tensor[(70, 1), float64], Tensor[(35), float64]) {
  @func_9211(%var_9213, %var_9214, %var_9215) /* ty=(Tensor[(65, 1), int64], float32, Tensor[(65), int64], Tensor[(975), int64], Tensor[(1170), float32], Tensor[(2400), uint32], Tensor[(10, 5, 14), uint16], Tensor[(70), float64], Tensor[(70, 1), float64], Tensor[(35), float64]) */
}

def @func_8847() -> (Tensor[(35), float64],) {
  %294 = fn () -> (Tensor[(35), float64],) {
    %292 = @func_7732() /* ty=(Tensor[(35), float64],) */;
    %293 = %292.0;
    (%293,)
  };
  %294() /* ty=(Tensor[(35), float64],) */
}

def @func_7545(%var_7544: Tensor[(70), uint64]) -> (Tensor[(35), float32], Tensor[(7, 2, 5), uint64], Tensor[(70), uint64]) {
  %301 = fn (%var_7541: Tensor[(70), uint64]) -> (Tensor[(35), float32], Tensor[(7, 2, 5), uint64], Tensor[(70), uint64]) {
    %295 = @func_7530() /* ty=(Tensor[(10, 5, 14), float64], Tensor[(35), float32], Tensor[(35, 2), uint8], Tensor[(70), float64]) */;
    %296 = cast(%var_7541, dtype="uint64") /* ty=Tensor[(70), uint64] */;
    %297 = reshape(%296, newshape=[7, 2, 5]) /* ty=Tensor[(7, 2, 5), uint64] */;
    %298 = @func_148(%297) /* ty=(Tensor[(7, 2, 5), uint64], Tensor[(7, 2, 5), float32]) */;
    %299 = %295.1;
    %300 = %298.0;
    (%299, %300, %var_7541)
  };
  %301(%var_7544) /* ty=(Tensor[(35), float32], Tensor[(7, 2, 5), uint64], Tensor[(70), uint64]) */
}

def @func_8206() -> (Tensor[(10, 16, 15), bool], Tensor[(70), float64], Tensor[(35, 9), float64]) {
  %302 = @func_5687() /* ty=(Tensor[(35), float64], Tensor[(1, 5, 7), float64], Tensor[(10, 16, 15), uint32], Tensor[(2400), uint32]) */;
  %303 = %302.2;
  %304 = cast(%303, dtype="float64") /* ty=Tensor[(10, 16, 15), float64] */;
  %305 = asinh(%304) /* ty=Tensor[(10, 16, 15), float64] */;
  %306 = cast(%303, dtype="bool") /* ty=Tensor[(10, 16, 15), bool] */;
  %307 = shape_of(%305, dtype="int32") /* ty=Tensor[(3), int32] */;
  %308 = cast(%305, dtype="bool") /* ty=Tensor[(10, 16, 15), bool] */;
  %309 = dyn.reshape(%306, %307, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %310 = cast(meta[relay.Constant][23] /* ty=Tensor[(70), float64] */, dtype="float64") /* ty=Tensor[(70), float64] */;
  %311 = reshape(%310, newshape=[70]) /* ty=Tensor[(70), float64] */;
  %312 = @func_7082(%311) /* ty=(Tensor[(35, 2), float32], Tensor[(70), float64], Tensor[(35, 9), float32], Tensor[(35, 9), float32]) */;
  %313 = %312.2;
  %314 = cast(%313, dtype="float64") /* ty=Tensor[(35, 9), float64] */;
  %315 = not_equal(%308, %309) /* ty=Tensor[(10, 16, 15), bool] */;
  %316 = cosh(%314) /* ty=Tensor[(35, 9), float64] */;
  (%315, meta[relay.Constant][23] /* ty=Tensor[(70), float64] */, %316)
}

def @func_9979() -> (Tensor[(10, 5, 14), float64], Tensor[(10, 5, 14), float64], Tensor[(35, 2), float32], Tensor[(70), float64], Tensor[(12, 12, 13), float64], Tensor[(1872), float64]) {
  @func_9977() /* ty=(Tensor[(10, 5, 14), float64], Tensor[(10, 5, 14), float64], Tensor[(35, 2), float32], Tensor[(70), float64], Tensor[(12, 12, 13), float64], Tensor[(1872), float64]) */
}

def @func_10312() -> (Tensor[(10, 5, 14), float64],) {
  %317 = @func_9710() /* ty=Tensor[(10, 5, 14), float64] */;
  (%317,)
}

def @func_5813() -> (Tensor[(35), float64],) {
  %322 = fn () -> (Tensor[(35), float64],) {
    %318 = @func_5687() /* ty=(Tensor[(35), float64], Tensor[(1, 5, 7), float64], Tensor[(10, 16, 15), uint32], Tensor[(2400), uint32]) */;
    %319 = %318.0;
    %320 = cast(%319, dtype="float64") /* ty=Tensor[(35), float64] */;
    %321 = exp(%320) /* ty=Tensor[(35), float64] */;
    (%321,)
  };
  %322() /* ty=(Tensor[(35), float64],) */
}

def @func_6392(%var_6390: Tensor[(3, 14, 15), int64], %var_6391: Tensor[(3, 14, 15), int64]) -> (Tensor[(3, 14, 15), int64],) {
  %328 = fn (%var_6369: Tensor[(3, 14, 15), int64], %var_6370: Tensor[(3, 14, 15), int64]) -> (Tensor[(3, 14, 15), int64],) {
    %323 = cast(%var_6370, dtype="int64") /* ty=Tensor[(3, 14, 15), int64] */;
    %324 = shape_of(%var_6369, dtype="int32") /* ty=Tensor[(3), int32] */;
    %325 = cast(%var_6369, dtype="int64") /* ty=Tensor[(3, 14, 15), int64] */;
    %326 = dyn.reshape(%323, %324, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %327 = maximum(%325, %326) /* ty=Tensor[(3, 14, 15), int64] */;
    (%327,)
  };
  %328(%var_6390, %var_6391) /* ty=(Tensor[(3, 14, 15), int64],) */
}

def @func_5195(%var_5192: float32, %var_5193: Tensor[(65, 1), int64], %var_5194: Tensor[(975), int64]) -> (Tensor[(1, 9, 9), float32], Tensor[(10, 5, 7), float32], Tensor[(65, 1), int64], Tensor[(975), int64]) {
  @func_5190(%var_5192, %var_5193, %var_5194) /* ty=(Tensor[(1, 9, 9), float32], Tensor[(10, 5, 7), float32], Tensor[(65, 1), int64], Tensor[(975), int64]) */
}

def @func_8506(%var_8504: Tensor[(70), float64]) -> (Tensor[(10, 5, 14), float64], Tensor[(35, 2), uint8], Tensor[(70), float64]) {
  @func_8503(%var_8504) /* ty=(Tensor[(10, 5, 14), float64], Tensor[(35, 2), uint8], Tensor[(70), float64]) */
}

def @func_1630(%var_1628: Tensor[(9, 15, 13), float64]) -> Tensor[(9, 15, 13), float64] {
  @func_1627(%var_1628) /* ty=Tensor[(9, 15, 13), float64] */
}

def @func_5779(%var_5777: Tensor[(6, 11, 2), float32]) -> (Tensor[(6, 11, 2), float32],) {
  @func_5776(%var_5777) /* ty=(Tensor[(6, 11, 2), float32],) */
}

def @func_6620(%var_6616: Tensor[(128), float64], %var_6617: Tensor[(1755), float64], %var_6618: uint8, %var_6619: Tensor[(132), uint8]) -> (Tensor[(35, 1), float64], Tensor[(7, 10), uint64], Tensor[(70), uint64], Tensor[(128), float64], Tensor[(1755), float64], uint8, Tensor[(132), uint8], Tensor[(18), float32]) {
  %344 = fn (%var_6592: Tensor[(128), float64], %var_6593: Tensor[(1755), float64], %var_6594: uint8, %var_6595: Tensor[(132), uint8]) -> (Tensor[(35, 1), float64], Tensor[(7, 10), uint64], Tensor[(70), uint64], Tensor[(128), float64], Tensor[(1755), float64], uint8, Tensor[(132), uint8], Tensor[(18), float32]) {
    %329 = cast(meta[relay.Constant][24] /* ty=Tensor[(70), uint64] */, dtype="uint64") /* ty=Tensor[(70), uint64] */;
    %330 = cast(%var_6592, dtype="float64") /* ty=Tensor[(128), float64] */;
    %331 = cast(%var_6593, dtype="float64") /* ty=Tensor[(1755), float64] */;
    %332 = cast(%var_6594, dtype="uint8") /* ty=uint8 */;
    %333 = cast(%var_6595, dtype="uint8") /* ty=Tensor[(132), uint8] */;
    %334 = cast(meta[relay.Constant][25] /* ty=Tensor[(18), float32] */, dtype="float32") /* ty=Tensor[(18), float32] */;
    %335 = reshape(%329, newshape=[7, 10]) /* ty=Tensor[(7, 10), uint64] */;
    %336 = reshape(%330, newshape=[128]) /* ty=Tensor[(128), float64] */;
    %337 = reshape(%331, newshape=[1755]) /* ty=Tensor[(1755), float64] */;
    %338 = reshape(%332, newshape=[]) /* ty=uint8 */;
    %339 = reshape(%333, newshape=[132]) /* ty=Tensor[(132), uint8] */;
    %340 = reshape(%334, newshape=[18]) /* ty=Tensor[(18), float32] */;
    %341 = @func_6546(%335, %336, %337, %338, %339, %340) /* ty=(Tensor[(10, 5, 14), float64], Tensor[(7, 10), uint64], Tensor[(35), float64], Tensor[(35, 1), float64], Tensor[(128), float64], Tensor[(1755), float64], Tensor[(10, 5, 7), float32], Tensor[(175, 2), float32], Tensor[(11, 12, 1), bool], uint8, Tensor[(132), uint8], Tensor[(6, 3, 1), float32], Tensor[(18), float32], Tensor[(7, 2, 5), float32]) */;
    %342 = @func_6124() /* ty=Tensor[(35, 1), float64] */;
    %343 = %341.1;
    (%342, %343, meta[relay.Constant][24] /* ty=Tensor[(70), uint64] */, %var_6592, %var_6593, %var_6594, %var_6595, meta[relay.Constant][25] /* ty=Tensor[(18), float32] */)
  };
  %344(%var_6616, %var_6617, %var_6618, %var_6619) /* ty=(Tensor[(35, 1), float64], Tensor[(7, 10), uint64], Tensor[(70), uint64], Tensor[(128), float64], Tensor[(1755), float64], uint8, Tensor[(132), uint8], Tensor[(18), float32]) */
}

def @func_7175(%var_7149: Tensor[(2400), uint32]) -> (Tensor[(10, 5, 14), float64], Tensor[(10, 16, 15), uint32], int8, Tensor[(2400), uint32]) {
  %345 = @func_6829() /* ty=(Tensor[(10, 5, 14), float64],) */;
  %346 = cast(meta[relay.Constant][26] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %347 = cast(%var_7149, dtype="uint32") /* ty=Tensor[(2400), uint32] */;
  %348 = reshape(%346, newshape=[]) /* ty=int8 */;
  %349 = reshape(%347, newshape=[2400]) /* ty=Tensor[(2400), uint32] */;
  %350 = @func_2961(%348, %349) /* ty=(Tensor[(9, 12, 7), float64], int8, Tensor[(1170), float32], int8, Tensor[(10, 16, 15), uint32], Tensor[(2400), uint32]) */;
  %351 = %345.0;
  %352 = %350.4;
  (%351, %352, meta[relay.Constant][26] /* ty=int8 */, %var_7149)
}

def @func_7274() -> (Tensor[(35, 1), float32],) {
  @func_7272() /* ty=(Tensor[(35, 1), float32],) */
}

def @func_2965(%var_2963: int8, %var_2964: Tensor[(2400), uint32]) -> (Tensor[(9, 12, 7), float64], int8, Tensor[(1170), float32], int8, Tensor[(10, 16, 15), uint32], Tensor[(2400), uint32]) {
  @func_2961(%var_2963, %var_2964) /* ty=(Tensor[(9, 12, 7), float64], int8, Tensor[(1170), float32], int8, Tensor[(10, 16, 15), uint32], Tensor[(2400), uint32]) */
}

def @func_9612() -> (Tensor[(10, 5, 14), float64],) {
  %353 = @func_9557() /* ty=Tensor[(10, 5, 14), float64] */;
  (%353,)
}

def @func_5688() -> (Tensor[(35), float64], Tensor[(1, 5, 7), float64], Tensor[(10, 16, 15), uint32], Tensor[(2400), uint32]) {
  %364 = fn () -> (Tensor[(35), float64], Tensor[(1, 5, 7), float64], Tensor[(10, 16, 15), uint32], Tensor[(2400), uint32]) {
    %354 = @func_5631() /* ty=(Tensor[(10, 5, 14), float64], Tensor[(35, 1), float64], Tensor[(128), float64], Tensor[(1755), float64], Tensor[(35), float64], Tensor[(9, 15, 13), float64]) */;
    %355 = %354.4;
    %356 = cast(%355, dtype="float64") /* ty=Tensor[(35), float64] */;
    %357 = reshape(%356, newshape=[1, 5, 7]) /* ty=Tensor[(1, 5, 7), float64] */;
    %358 = cast(meta[relay.Constant][27] /* ty=Tensor[(2400), uint32] */, dtype="uint32") /* ty=Tensor[(2400), uint32] */;
    %359 = cast(meta[relay.Constant][27] /* ty=Tensor[(2400), uint32] */, dtype="uint32") /* ty=Tensor[(2400), uint32] */;
    %360 = reshape(%358, newshape=[10, 16, 15]) /* ty=Tensor[(10, 16, 15), uint32] */;
    %361 = reshape(%359, newshape=[10, 16, 15]) /* ty=Tensor[(10, 16, 15), uint32] */;
    %362 = @func_1715(%357) /* ty=Tensor[(1, 5, 7), float64] */;
    %363 = @func_1599(%360, %361) /* ty=Tensor[(10, 16, 15), uint32] */;
    (%355, %362, %363, meta[relay.Constant][27] /* ty=Tensor[(2400), uint32] */)
  };
  %364() /* ty=(Tensor[(35), float64], Tensor[(1, 5, 7), float64], Tensor[(10, 16, 15), uint32], Tensor[(2400), uint32]) */
}

def @func_7616() -> (Tensor[(35), float64], Tensor[(10, 5, 14), float64]) {
  @func_7614() /* ty=(Tensor[(35), float64], Tensor[(10, 5, 14), float64]) */
}

def @func_8976(%var_8974: Tensor[(12, 8, 15), float32]) -> (Tensor[(12, 8, 15), int64], Tensor[(12, 8, 15), bool], Tensor[(35, 1), float32]) {
  @func_8973(%var_8974) /* ty=(Tensor[(12, 8, 15), int64], Tensor[(12, 8, 15), bool], Tensor[(35, 1), float32]) */
}

def @func_9315() -> Tensor[(4, ?, 12), int16] {
  %365 = cast(meta[relay.Constant][28] /* ty=Tensor[(4, 1, 12), float32] */, dtype="float32") /* ty=Tensor[(4, 1, 12), float32] */;
  %366 = sin(%365) /* ty=Tensor[(4, 1, 12), float32] */;
  %367 = cast(%366, dtype="int16") /* ty=Tensor[(4, 1, 12), int16] */;
  %368 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(4, 1, 12), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %369 = cast(meta[relay.Constant][28] /* ty=Tensor[(4, 1, 12), float32] */, dtype="int16") /* ty=Tensor[(4, 1, 12), int16] */;
  %370 = dyn.reshape(%367, %368, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_and(%369, %370) /* ty=Tensor[(4, ?, 12), int16] */
}

def @func_5931(%var_5919: Tensor[(10, 16, 12), float32]) -> Tensor[(10, 16, 12), float32] {
  %371 = cast(%var_5919, dtype="float32") /* ty=Tensor[(10, 16, 12), float32] */;
  erf(%371) /* ty=Tensor[(10, 16, 12), float32] */
}

def @func_6554(%var_6548: Tensor[(7, 10), uint64], %var_6549: Tensor[(128), float64], %var_6550: Tensor[(1755), float64], %var_6551: uint8, %var_6552: Tensor[(132), uint8], %var_6553: Tensor[(18), float32]) -> (Tensor[(10, 5, 14), float64], Tensor[(7, 10), uint64], Tensor[(35), float64], Tensor[(35, 1), float64], Tensor[(128), float64], Tensor[(1755), float64], Tensor[(10, 5, 7), float32], Tensor[(175, 2), float32], Tensor[(11, 12, 1), bool], uint8, Tensor[(132), uint8], Tensor[(6, 3, 1), float32], Tensor[(18), float32], Tensor[(7, 2, 5), float32]) {
  @func_6546(%var_6548, %var_6549, %var_6550, %var_6551, %var_6552, %var_6553) /* ty=(Tensor[(10, 5, 14), float64], Tensor[(7, 10), uint64], Tensor[(35), float64], Tensor[(35, 1), float64], Tensor[(128), float64], Tensor[(1755), float64], Tensor[(10, 5, 7), float32], Tensor[(175, 2), float32], Tensor[(11, 12, 1), bool], uint8, Tensor[(132), uint8], Tensor[(6, 3, 1), float32], Tensor[(18), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_6856(%var_6855: Tensor[(10, 5, 14), float64]) -> (Tensor[(10, 5, 14), bool],) {
  %383 = fn (%var_6834: Tensor[(10, 5, 14), float64]) -> (Tensor[(10, 5, 14), bool],) {
    %372 = @func_5887() /* ty=Tensor[(10, 5, 14), float64] */;
    %373 = cast(%var_6834, dtype="float32") /* ty=Tensor[(10, 5, 14), float32] */;
    %374 = shape_of(%372, dtype="int32") /* ty=Tensor[(3), int32] */;
    %375 = cast(%372, dtype="float32") /* ty=Tensor[(10, 5, 14), float32] */;
    %376 = dyn.reshape(%373, %374, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %377 = divide(%375, %376) /* ty=Tensor[(10, 5, 14), float32] */;
    %378 = cast(%var_6834, dtype="bool") /* ty=Tensor[(10, 5, 14), bool] */;
    %379 = shape_of(%377, dtype="int32") /* ty=Tensor[(3), int32] */;
    %380 = cast(%377, dtype="bool") /* ty=Tensor[(10, 5, 14), bool] */;
    %381 = dyn.reshape(%378, %379, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %382 = logical_or(%380, %381) /* ty=Tensor[(10, 5, 14), bool] */;
    (%382,)
  };
  %383(%var_6855) /* ty=(Tensor[(10, 5, 14), bool],) */
}

def @func_2028(%var_2024: Tensor[(2, 8, 8), float64], %var_2025: Tensor[(2, 8, 8), float64], %var_2026: Tensor[(1755), float64], %var_2027: Tensor[(35, 1), float64]) -> (Tensor[(9, 15, 13), float64], Tensor[(1755), float64], Tensor[(2, 8, 8), float64], Tensor[(7, 6, 7), int16], int16, Tensor[(294), int16], Tensor[(1, 5, 7), float64], Tensor[(35, 1), float64], Tensor[(2, 8, 8), float64]) {
  @func_2022(%var_2024, %var_2025, %var_2026, %var_2027) /* ty=(Tensor[(9, 15, 13), float64], Tensor[(1755), float64], Tensor[(2, 8, 8), float64], Tensor[(7, 6, 7), int16], int16, Tensor[(294), int16], Tensor[(1, 5, 7), float64], Tensor[(35, 1), float64], Tensor[(2, 8, 8), float64]) */
}

def @func_6449(%var_6448: Tensor[(252, 4), float32]) -> (Tensor[(10, 5, 14), float64], Tensor[(5, 13, 3), float64], Tensor[(195), float64], Tensor[(7, 2, 5), float32], Tensor[(252, 4), float32], Tensor[(7, 5, 1), int8], int8) {
  %396 = fn (%var_6436: Tensor[(252, 4), float32]) -> (Tensor[(10, 5, 14), float64], Tensor[(5, 13, 3), float64], Tensor[(195), float64], Tensor[(7, 2, 5), float32], Tensor[(252, 4), float32], Tensor[(7, 5, 1), int8], int8) {
    %384 = cast(meta[relay.Constant][29] /* ty=Tensor[(195), float64] */, dtype="float64") /* ty=Tensor[(195), float64] */;
    %385 = reshape(%384, newshape=[5, 13, 3]) /* ty=Tensor[(5, 13, 3), float64] */;
    %386 = cast(%var_6436, dtype="float32") /* ty=Tensor[(252, 4), float32] */;
    %387 = reshape(%386, newshape=[12, 14, 6]) /* ty=Tensor[(12, 14, 6), float32] */;
    %388 = @func_379(%387) /* ty=(Tensor[(12, 14, 6), float64], Tensor[(7, 2, 5), float32], Tensor[(70), uint64]) */;
    %389 = cast(meta[relay.Constant][30] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %390 = reshape(%389, newshape=[]) /* ty=int8 */;
    %391 = @func_5983(%390) /* ty=(Tensor[(35), float64], Tensor[(7, 5, 1), int8], int8) */;
    %392 = @func_5599() /* ty=Tensor[(10, 5, 14), float64] */;
    %393 = @func_4723(%385) /* ty=Tensor[(5, 13, 3), float64] */;
    %394 = %388.1;
    %395 = %391.1;
    (%392, %393, meta[relay.Constant][29] /* ty=Tensor[(195), float64] */, %394, %var_6436, %395, meta[relay.Constant][30] /* ty=int8 */)
  };
  %396(%var_6448) /* ty=(Tensor[(10, 5, 14), float64], Tensor[(5, 13, 3), float64], Tensor[(195), float64], Tensor[(7, 2, 5), float32], Tensor[(252, 4), float32], Tensor[(7, 5, 1), int8], int8) */
}

def @func_7128(%var_7124: Tensor[(13, 14, 5), int32], %var_7125: Tensor[(128), float64], %var_7126: Tensor[(5, 351), float64], %var_7127: uint8) -> (Tensor[(13, 14, 5), int32], Tensor[(132), uint8], Tensor[(128), float64], Tensor[(5, 351), float64], uint8, Tensor[(132), uint8], Tensor[(10, 5, 14), float64], Tensor[(7, 5, 1), int8], Tensor[(2, 504), float32]) {
  %420 = fn (%var_7087: Tensor[(13, 14, 5), int32], %var_7099: Tensor[(128), float64], %var_7100: Tensor[(5, 351), float64], %var_7101: uint8) -> (Tensor[(13, 14, 5), int32], Tensor[(132), uint8], Tensor[(128), float64], Tensor[(5, 351), float64], uint8, Tensor[(132), uint8], Tensor[(10, 5, 14), float64], Tensor[(7, 5, 1), int8], Tensor[(2, 504), float32]) {
    %397 = cast(%var_7087, dtype="int32") /* ty=Tensor[(13, 14, 5), int32] */;
    %398 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(13, 14, 5), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %399 = cast(meta[relay.Constant][31] /* ty=Tensor[(13, 14, 5), int32] */, dtype="int32") /* ty=Tensor[(13, 14, 5), int32] */;
    %400 = dyn.reshape(%397, %398, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %401 = cast(%var_7099, dtype="float64") /* ty=Tensor[(128), float64] */;
    %402 = cast(%var_7100, dtype="float64") /* ty=Tensor[(5, 351), float64] */;
    %403 = cast(%var_7101, dtype="uint8") /* ty=uint8 */;
    %404 = cast(meta[relay.Constant][32] /* ty=Tensor[(132), uint8] */, dtype="uint8") /* ty=Tensor[(132), uint8] */;
    %405 = reshape(%401, newshape=[128]) /* ty=Tensor[(128), float64] */;
    %406 = reshape(%402, newshape=[1755]) /* ty=Tensor[(1755), float64] */;
    %407 = reshape(%403, newshape=[]) /* ty=uint8 */;
    %408 = reshape(%404, newshape=[132]) /* ty=Tensor[(132), uint8] */;
    %409 = @func_6615(%405, %406, %407, %408) /* ty=(Tensor[(35, 1), float64], Tensor[(7, 10), uint64], Tensor[(70), uint64], Tensor[(128), float64], Tensor[(1755), float64], uint8, Tensor[(132), uint8], Tensor[(18), float32]) */;
    %410 = cast(%var_7099, dtype="float64") /* ty=Tensor[(128), float64] */;
    %411 = reshape(%410, newshape=[32, 4]) /* ty=Tensor[(32, 4), float64] */;
    %412 = @func_6215(%411) /* ty=(Tensor[(10, 5, 14), float64], Tensor[(9, 15, 13), float64], Tensor[(32, 4), float64], Tensor[(35), float64], Tensor[(10, 5, 14), float64], Tensor[(1755), bool]) */;
    %413 = cast(meta[relay.Constant][33] /* ty=Tensor[(2, 504), float32] */, dtype="float32") /* ty=Tensor[(2, 504), float32] */;
    %414 = reshape(%413, newshape=[252, 4]) /* ty=Tensor[(252, 4), float32] */;
    %415 = @func_6447(%414) /* ty=(Tensor[(10, 5, 14), float64], Tensor[(5, 13, 3), float64], Tensor[(195), float64], Tensor[(7, 2, 5), float32], Tensor[(252, 4), float32], Tensor[(7, 5, 1), int8], int8) */;
    %416 = right_shift(%399, %400) /* ty=Tensor[(13, 14, 5), int32] */;
    %417 = %409.6;
    %418 = %412.0;
    %419 = %415.5;
    (%416, %417, %var_7099, %var_7100, %var_7101, meta[relay.Constant][32] /* ty=Tensor[(132), uint8] */, %418, %419, meta[relay.Constant][33] /* ty=Tensor[(2, 504), float32] */)
  };
  %420(%var_7124, %var_7125, %var_7126, %var_7127) /* ty=(Tensor[(13, 14, 5), int32], Tensor[(132), uint8], Tensor[(128), float64], Tensor[(5, 351), float64], uint8, Tensor[(132), uint8], Tensor[(10, 5, 14), float64], Tensor[(7, 5, 1), int8], Tensor[(2, 504), float32]) */
}

def @func_5860(%var_5831: Tensor[(35, 2), float64], %var_5846: Tensor[(35, 2), float64]) -> (Tensor[(35, 2), uint8], Tensor[(35, 2), float32]) {
  %421 = @func_5631() /* ty=(Tensor[(10, 5, 14), float64], Tensor[(35, 1), float64], Tensor[(128), float64], Tensor[(1755), float64], Tensor[(35), float64], Tensor[(9, 15, 13), float64]) */;
  %422 = %421.1;
  %423 = cast(%422, dtype="uint8") /* ty=Tensor[(35, 1), uint8] */;
  %424 = cast(%var_5831, dtype="uint8") /* ty=Tensor[(35, 2), uint8] */;
  %425 = cast(%var_5831, dtype="float64") /* ty=Tensor[(35, 2), float64] */;
  %426 = tan(%425) /* ty=Tensor[(35, 2), float64] */;
  %427 = cast(%var_5846, dtype="float32") /* ty=Tensor[(35, 2), float32] */;
  %428 = shape_of(%426, dtype="int32") /* ty=Tensor[(2), int32] */;
  %429 = cast(%426, dtype="float32") /* ty=Tensor[(35, 2), float32] */;
  %430 = dyn.reshape(%427, %428, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %431 = bitwise_and(%423, %424) /* ty=Tensor[(35, 2), uint8] */;
  %432 = divide(%429, %430) /* ty=Tensor[(35, 2), float32] */;
  (%431, %432)
}

def @func_8973(%var_8948: Tensor[(12, 8, 15), float32]) -> (Tensor[(12, 8, 15), int64], Tensor[(12, 8, 15), bool], Tensor[(35, 1), float32]) {
  %433 = cast(%var_8948, dtype="int64") /* ty=Tensor[(12, 8, 15), int64] */;
  %434 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(12, 8, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %435 = cast(meta[relay.Constant][34] /* ty=Tensor[(12, 8, 15), float32] */, dtype="int64") /* ty=Tensor[(12, 8, 15), int64] */;
  %436 = dyn.reshape(%433, %434, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %437 = cast(meta[relay.Constant][34] /* ty=Tensor[(12, 8, 15), float32] */, dtype="float32") /* ty=Tensor[(12, 8, 15), float32] */;
  %438 = cos(%437) /* ty=Tensor[(12, 8, 15), float32] */;
  %439 = cast(%438, dtype="float32") /* ty=Tensor[(12, 8, 15), float32] */;
  %440 = atan(%439) /* ty=Tensor[(12, 8, 15), float32] */;
  %441 = cast(%438, dtype="bool") /* ty=Tensor[(12, 8, 15), bool] */;
  %442 = shape_of(%440, dtype="int32") /* ty=Tensor[(3), int32] */;
  %443 = cast(%440, dtype="bool") /* ty=Tensor[(12, 8, 15), bool] */;
  %444 = dyn.reshape(%441, %442, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %445 = @func_7272() /* ty=(Tensor[(35, 1), float32],) */;
  %446 = maximum(%435, %436) /* ty=Tensor[(12, 8, 15), int64] */;
  %447 = logical_and(%443, %444) /* ty=Tensor[(12, 8, 15), bool] */;
  %448 = %445.0;
  (%446, %447, %448)
}

def @func_9896() -> Tensor[(14, 14, 5), uint32] {
  %449 = fn () -> Tensor[(14, 14, 5), uint32] {
    @func_7444() /* ty=Tensor[(14, 14, 5), uint32] */
  };
  %449() /* ty=Tensor[(14, 14, 5), uint32] */
}

def @func_9712() -> Tensor[(10, 5, 14), float64] {
  @func_9710() /* ty=Tensor[(10, 5, 14), float64] */
}

def @func_8409() -> (Tensor[(35, 1), float64], Tensor[(10, 5, 14), float64]) {
  %453 = fn () -> (Tensor[(35, 1), float64], Tensor[(10, 5, 14), float64]) {
    %450 = @func_8284() /* ty=(Tensor[(10, 5, 14), float64],) */;
    %451 = @func_6124() /* ty=Tensor[(35, 1), float64] */;
    %452 = %450.0;
    (%451, %452)
  };
  %453() /* ty=(Tensor[(35, 1), float64], Tensor[(10, 5, 14), float64]) */
}

def @func_828(%var_827: Tensor[(3, 15, 6), float32]) -> (Tensor[(3, 15, 6), bool],) {
  %459 = fn (%var_820: Tensor[(3, 15, 6), float32]) -> (Tensor[(3, 15, 6), bool],) {
    %454 = cast(%var_820, dtype="bool") /* ty=Tensor[(3, 15, 6), bool] */;
    %455 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(3, 15, 6), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %456 = cast(meta[relay.Constant][35] /* ty=Tensor[(3, 15, 6), float32] */, dtype="bool") /* ty=Tensor[(3, 15, 6), bool] */;
    %457 = dyn.reshape(%454, %455, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %458 = equal(%456, %457) /* ty=Tensor[(3, 15, 6), bool] */;
    (%458,)
  };
  %459(%var_827) /* ty=(Tensor[(3, 15, 6), bool],) */
}

def @func_9525(%var_9522: Tensor[(16, 8), float64], %var_9523: Tensor[(1755), float64], %var_9524: uint8) -> (Tensor[(10, 5, 14), bool], Tensor[(7, 5, 1), int8], Tensor[(910), int32], Tensor[(16, 8), float64], Tensor[(1755), float64], uint8) {
  @func_9520(%var_9522, %var_9523, %var_9524) /* ty=(Tensor[(10, 5, 14), bool], Tensor[(7, 5, 1), int8], Tensor[(910), int32], Tensor[(16, 8), float64], Tensor[(1755), float64], uint8) */
}

def @func_7614() -> (Tensor[(35), float64], Tensor[(10, 5, 14), float64]) {
  %460 = @func_5812() /* ty=(Tensor[(35), float64],) */;
  %461 = @func_6151() /* ty=(Tensor[(10, 5, 14), float64],) */;
  %462 = %460.0;
  %463 = %461.0;
  (%462, %463)
}

def @func_6831() -> (Tensor[(10, 5, 14), float64],) {
  @func_6829() /* ty=(Tensor[(10, 5, 14), float64],) */
}

def @func_7732() -> (Tensor[(35), float64],) {
  %464 = @func_5812() /* ty=(Tensor[(35), float64],) */;
  %465 = %464.0;
  (%465,)
}

def @func_9710() -> Tensor[(10, 5, 14), float64] {
  %466 = @func_8284() /* ty=(Tensor[(10, 5, 14), float64],) */;
  %466.0
}

def @func_3153(%var_3145: uint8, %var_3146: Tensor[(11, 12, 1), uint8]) -> (Tensor[(11, 12, 1), bool],) {
  %467 = cast(%var_3145, dtype="bool") /* ty=bool */;
  %468 = cast(%var_3146, dtype="bool") /* ty=Tensor[(11, 12, 1), bool] */;
  %469 = greater(%467, %468) /* ty=Tensor[(11, 12, 1), bool] */;
  (%469,)
}

def @func_1603(%var_1601: Tensor[(10, 16, 15), uint32], %var_1602: Tensor[(10, 16, 15), uint32]) -> Tensor[(10, 16, 15), uint32] {
  @func_1599(%var_1601, %var_1602) /* ty=Tensor[(10, 16, 15), uint32] */
}

def @func_9520(%var_9510: Tensor[(16, 8), float64], %var_9511: Tensor[(1755), float64], %var_9512: uint8) -> (Tensor[(10, 5, 14), bool], Tensor[(7, 5, 1), int8], Tensor[(910), int32], Tensor[(16, 8), float64], Tensor[(1755), float64], uint8) {
  %470 = @func_5887() /* ty=Tensor[(10, 5, 14), float64] */;
  %471 = cast(meta[relay.Constant][36] /* ty=Tensor[(10, 5, 14), float64] */, dtype="float64") /* ty=Tensor[(10, 5, 14), float64] */;
  %472 = shape_of(%470, dtype="int32") /* ty=Tensor[(3), int32] */;
  %473 = cast(%470, dtype="float64") /* ty=Tensor[(10, 5, 14), float64] */;
  %474 = dyn.reshape(%471, %472, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %475 = floor_divide(%473, %474) /* ty=Tensor[(10, 5, 14), float64] */;
  %476 = cast(%470, dtype="bool") /* ty=Tensor[(10, 5, 14), bool] */;
  %477 = shape_of(%475, dtype="int32") /* ty=Tensor[(3), int32] */;
  %478 = cast(%475, dtype="bool") /* ty=Tensor[(10, 5, 14), bool] */;
  %479 = dyn.reshape(%476, %477, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %480 = cast(meta[relay.Constant][37] /* ty=Tensor[(910), int32] */, dtype="int32") /* ty=Tensor[(910), int32] */;
  %481 = cast(%var_9510, dtype="float64") /* ty=Tensor[(16, 8), float64] */;
  %482 = cast(%var_9511, dtype="float64") /* ty=Tensor[(1755), float64] */;
  %483 = cast(%var_9512, dtype="uint8") /* ty=uint8 */;
  %484 = reshape(%480, newshape=[13, 14, 5]) /* ty=Tensor[(13, 14, 5), int32] */;
  %485 = reshape(%481, newshape=[128]) /* ty=Tensor[(128), float64] */;
  %486 = reshape(%482, newshape=[5, 351]) /* ty=Tensor[(5, 351), float64] */;
  %487 = reshape(%483, newshape=[]) /* ty=uint8 */;
  %488 = @func_7123(%484, %485, %486, %487) /* ty=(Tensor[(13, 14, 5), int32], Tensor[(132), uint8], Tensor[(128), float64], Tensor[(5, 351), float64], uint8, Tensor[(132), uint8], Tensor[(10, 5, 14), float64], Tensor[(7, 5, 1), int8], Tensor[(2, 504), float32]) */;
  %489 = less(%478, %479) /* ty=Tensor[(10, 5, 14), bool] */;
  %490 = %488.7;
  (%489, %490, meta[relay.Constant][37] /* ty=Tensor[(910), int32] */, %var_9510, %var_9511, %var_9512)
}

def @func_7207() -> (Tensor[(6, 6, 10), float32],) {
  %491 = cast(meta[relay.Constant][39] /* ty=Tensor[(6, 6, 10), float32] */, dtype="float32") /* ty=Tensor[(6, 6, 10), float32] */;
  %492 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(6, 6, 10), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %493 = cast(meta[relay.Constant][38] /* ty=Tensor[(6, 6, 10), float32] */, dtype="float32") /* ty=Tensor[(6, 6, 10), float32] */;
  %494 = dyn.reshape(%491, %492, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %495 = power(%493, %494) /* ty=Tensor[(6, 6, 10), float32] */;
  (%495,)
}

def @func_2022(%var_1951: Tensor[(2, 8, 8), float64], %var_1952: Tensor[(2, 8, 8), float64], %var_1963: Tensor[(1755), float64], %var_2013: Tensor[(35, 1), float64]) -> (Tensor[(9, 15, 13), float64], Tensor[(1755), float64], Tensor[(2, 8, 8), float64], Tensor[(7, 6, 7), int16], int16, Tensor[(294), int16], Tensor[(1, 5, 7), float64], Tensor[(35, 1), float64], Tensor[(2, 8, 8), float64]) {
  %496 = cast(%var_1963, dtype="float64") /* ty=Tensor[(1755), float64] */;
  %497 = reshape(%496, newshape=[9, 15, 13]) /* ty=Tensor[(9, 15, 13), float64] */;
  %498 = cast(%var_1952, dtype="float64") /* ty=Tensor[(2, 8, 8), float64] */;
  %499 = shape_of(%var_1951, dtype="int32") /* ty=Tensor[(3), int32] */;
  %500 = cast(%var_1951, dtype="float64") /* ty=Tensor[(2, 8, 8), float64] */;
  %501 = dyn.reshape(%498, %499, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %502 = mod(%500, %501) /* ty=Tensor[(2, 8, 8), float64] */;
  %503 = cast(%502, dtype="float64") /* ty=Tensor[(2, 8, 8), float64] */;
  %504 = cast(meta[relay.Constant][40] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %505 = cast(meta[relay.Constant][41] /* ty=Tensor[(294), int16] */, dtype="int16") /* ty=Tensor[(294), int16] */;
  %506 = reshape(%504, newshape=[]) /* ty=int16 */;
  %507 = reshape(%505, newshape=[7, 6, 7]) /* ty=Tensor[(7, 6, 7), int16] */;
  %508 = @func_218(%506, %507) /* ty=(Tensor[(7, 6, 7), int16],) */;
  %509 = cast(%var_2013, dtype="float64") /* ty=Tensor[(35, 1), float64] */;
  %510 = reshape(%509, newshape=[1, 5, 7]) /* ty=Tensor[(1, 5, 7), float64] */;
  %511 = cast(%502, dtype="float32") /* ty=Tensor[(2, 8, 8), float32] */;
  %512 = exp(%511) /* ty=Tensor[(2, 8, 8), float32] */;
  %513 = cast(%var_1951, dtype="int16") /* ty=Tensor[(2, 8, 8), int16] */;
  %514 = shape_of(%512, dtype="int32") /* ty=Tensor[(3), int32] */;
  %515 = cast(%512, dtype="int16") /* ty=Tensor[(2, 8, 8), int16] */;
  %516 = dyn.reshape(%513, %514, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %517 = logical_xor(%515, %516) /* ty=Tensor[(2, 8, 8), int16] */;
  %518 = cast(%517, dtype="float64") /* ty=Tensor[(2, 8, 8), float64] */;
  %519 = erf(%518) /* ty=Tensor[(2, 8, 8), float64] */;
  %520 = cast(%519, dtype="float64") /* ty=Tensor[(2, 8, 8), float64] */;
  %521 = @func_1627(%497) /* ty=Tensor[(9, 15, 13), float64] */;
  %522 = tan(%503) /* ty=Tensor[(2, 8, 8), float64] */;
  %523 = %508.0;
  %524 = @func_1715(%510) /* ty=Tensor[(1, 5, 7), float64] */;
  %525 = acos(%520) /* ty=Tensor[(2, 8, 8), float64] */;
  (%521, %var_1963, %522, %523, meta[relay.Constant][40] /* ty=int16 */, meta[relay.Constant][41] /* ty=Tensor[(294), int16] */, %524, %var_2013, %525)
}

def @func_8284() -> (Tensor[(10, 5, 14), float64],) {
  %526 = @func_7723() /* ty=(Tensor[(10, 5, 14), float64],) */;
  %527 = %526.0;
  (%527,)
}

def @func_419(%var_384: Tensor[(9, 10, 10), uint8], %var_385: Tensor[(9, 10, 10), uint8], %var_391: Tensor[(294), int16], %var_415: Tensor[(1008), float32]) -> (Tensor[(9, 10, 10), bool], Tensor[(7, 6, 7), int16], int16, Tensor[(294), int16], Tensor[(7, 6, 7), int16], Tensor[(70), uint64], Tensor[(1008), float32]) {
  %528 = cast(%var_385, dtype="bool") /* ty=Tensor[(9, 10, 10), bool] */;
  %529 = shape_of(%var_384, dtype="int32") /* ty=Tensor[(3), int32] */;
  %530 = cast(%var_384, dtype="bool") /* ty=Tensor[(9, 10, 10), bool] */;
  %531 = dyn.reshape(%528, %529, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %532 = cast(meta[relay.Constant][42] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %533 = cast(%var_391, dtype="int16") /* ty=Tensor[(294), int16] */;
  %534 = reshape(%532, newshape=[]) /* ty=int16 */;
  %535 = reshape(%533, newshape=[7, 6, 7]) /* ty=Tensor[(7, 6, 7), int16] */;
  %536 = @func_218(%534, %535) /* ty=(Tensor[(7, 6, 7), int16],) */;
  %537 = cast(meta[relay.Constant][42] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %538 = %536.0;
  %539 = cast(%538, dtype="int16") /* ty=Tensor[(7, 6, 7), int16] */;
  %540 = reshape(%537, newshape=[]) /* ty=int16 */;
  %541 = reshape(%539, newshape=[7, 6, 7]) /* ty=Tensor[(7, 6, 7), int16] */;
  %542 = @func_218(%540, %541) /* ty=(Tensor[(7, 6, 7), int16],) */;
  %543 = cast(%var_415, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %544 = reshape(%543, newshape=[12, 14, 6]) /* ty=Tensor[(12, 14, 6), float32] */;
  %545 = @func_379(%544) /* ty=(Tensor[(12, 14, 6), float64], Tensor[(7, 2, 5), float32], Tensor[(70), uint64]) */;
  %546 = less_equal(%530, %531) /* ty=Tensor[(9, 10, 10), bool] */;
  %547 = %542.0;
  %548 = %545.2;
  (%546, %538, meta[relay.Constant][42] /* ty=int16 */, %var_391, %547, %548, %var_415)
}

def @func_4615(%var_4613: Tensor[(13, 1, 5), int64], %var_4614: Tensor[(13, 15, 5), int64]) -> (Tensor[(13, 15, 5), bool], Tensor[(10, 5, 7), float32], Tensor[(350), float32]) {
  %555 = fn (%var_4594: Tensor[(13, 1, 5), int64], %var_4595: Tensor[(13, 15, 5), int64]) -> (Tensor[(13, 15, 5), bool], Tensor[(10, 5, 7), float32], Tensor[(350), float32]) {
    %549 = cast(%var_4594, dtype="bool") /* ty=Tensor[(13, 1, 5), bool] */;
    %550 = cast(%var_4595, dtype="bool") /* ty=Tensor[(13, 15, 5), bool] */;
    %551 = cast(meta[relay.Constant][43] /* ty=Tensor[(350), float32] */, dtype="float32") /* ty=Tensor[(350), float32] */;
    %552 = reshape(%551, newshape=[10, 5, 7]) /* ty=Tensor[(10, 5, 7), float32] */;
    %553 = less_equal(%549, %550) /* ty=Tensor[(13, 15, 5), bool] */;
    %554 = @func_3435(%552) /* ty=Tensor[(10, 5, 7), float32] */;
    (%553, %554, meta[relay.Constant][43] /* ty=Tensor[(350), float32] */)
  };
  %555(%var_4613, %var_4614) /* ty=(Tensor[(13, 15, 5), bool], Tensor[(10, 5, 7), float32], Tensor[(350), float32]) */
}

def @func_2512(%var_2510: Tensor[(9, 10, 13), float32], %var_2511: int8) -> (Tensor[(9, 10, 13), float32], Tensor[(7, 5, 1), int8], int8) {
  @func_2508(%var_2510, %var_2511) /* ty=(Tensor[(9, 10, 13), float32], Tensor[(7, 5, 1), int8], int8) */
}

def @func_8286() -> (Tensor[(10, 5, 14), float64],) {
  @func_8284() /* ty=(Tensor[(10, 5, 14), float64],) */
}

def @func_9273() -> (Tensor[(10, 5, 14), float64], uint8, uint8, Tensor[(3, 44), uint8], Tensor[(18), float32]) {
  %556 = cast(meta[relay.Constant][44] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %557 = cast(meta[relay.Constant][45] /* ty=Tensor[(3, 44), uint8] */, dtype="uint8") /* ty=Tensor[(3, 44), uint8] */;
  %558 = cast(meta[relay.Constant][46] /* ty=Tensor[(18), float32] */, dtype="float32") /* ty=Tensor[(18), float32] */;
  %559 = reshape(%556, newshape=[]) /* ty=uint8 */;
  %560 = reshape(%557, newshape=[132]) /* ty=Tensor[(132), uint8] */;
  %561 = reshape(%558, newshape=[18, 1]) /* ty=Tensor[(18, 1), float32] */;
  %562 = @func_8617(%559, %560, %561) /* ty=(Tensor[(10, 6, 5), float64], Tensor[(11, 12, 1), bool], uint8, Tensor[(132), uint8], Tensor[(10, 5, 7), float32], Tensor[(70), uint64], Tensor[(128), float64], Tensor[(1755), float64], Tensor[(35, 1), float64], Tensor[(18, 1), float32]) */;
  %563 = @func_5599() /* ty=Tensor[(10, 5, 14), float64] */;
  %564 = %562.2;
  (%563, %564, meta[relay.Constant][44] /* ty=uint8 */, meta[relay.Constant][45] /* ty=Tensor[(3, 44), uint8] */, meta[relay.Constant][46] /* ty=Tensor[(18), float32] */)
}

def @func_6112(%var_6110: float32, %var_6111: Tensor[(18), float32]) -> (Tensor[(35), float64], Tensor[(6, 3, 1), float32], float32, Tensor[(18), float32]) {
  %573 = fn (%var_6104: float32, %var_6105: Tensor[(18), float32]) -> (Tensor[(35), float64], Tensor[(6, 3, 1), float32], float32, Tensor[(18), float32]) {
    %565 = @func_5812() /* ty=(Tensor[(35), float64],) */;
    %566 = cast(%var_6104, dtype="float32") /* ty=float32 */;
    %567 = cast(%var_6105, dtype="float32") /* ty=Tensor[(18), float32] */;
    %568 = reshape(%566, newshape=[]) /* ty=float32 */;
    %569 = reshape(%567, newshape=[6, 3, 1]) /* ty=Tensor[(6, 3, 1), float32] */;
    %570 = @func_5318(%568, %569) /* ty=(Tensor[(6, 3, 1), float32], Tensor[(7, 5, 1), int8], Tensor[(1170), float32], Tensor[(7, 5, 1), int8], Tensor[(11, 12, 1), bool], Tensor[(132), uint8]) */;
    %571 = %565.0;
    %572 = %570.0;
    (%571, %572, %var_6104, %var_6105)
  };
  %573(%var_6110, %var_6111) /* ty=(Tensor[(35), float64], Tensor[(6, 3, 1), float32], float32, Tensor[(18), float32]) */
}

def @func_9317() -> Tensor[(4, ?, 12), int16] {
  @func_9315() /* ty=Tensor[(4, ?, 12), int16] */
}

def @func_379(%var_356: Tensor[(12, 14, 6), float32]) -> (Tensor[(12, 14, 6), float64], Tensor[(7, 2, 5), float32], Tensor[(70), uint64]) {
  %574 = cast(%var_356, dtype="float32") /* ty=Tensor[(12, 14, 6), float32] */;
  %575 = asin(%574) /* ty=Tensor[(12, 14, 6), float32] */;
  %576 = cast(%575, dtype="float64") /* ty=Tensor[(12, 14, 6), float64] */;
  %577 = cast(meta[relay.Constant][47] /* ty=Tensor[(70), uint64] */, dtype="uint64") /* ty=Tensor[(70), uint64] */;
  %578 = reshape(%577, newshape=[7, 2, 5]) /* ty=Tensor[(7, 2, 5), uint64] */;
  %579 = @func_148(%578) /* ty=(Tensor[(7, 2, 5), uint64], Tensor[(7, 2, 5), float32]) */;
  %580 = tan(%576) /* ty=Tensor[(12, 14, 6), float64] */;
  %581 = %579.1;
  (%580, %581, meta[relay.Constant][47] /* ty=Tensor[(70), uint64] */)
}

def @func_7378(%var_7373: Tensor[(7, 14, 11), float32], %var_7374: Tensor[(630), int64], %var_7375: Tensor[(1755, 1), float64], %var_7376: Tensor[(1008), float32], %var_7377: Tensor[(35), float64]) -> (Tensor[(7, 14, 11), float32], Tensor[(2, 15, 7), float64], Tensor[(630), int64], Tensor[(1008), float32], Tensor[(1755, 70), float64], Tensor[(35), float64], Tensor[(35), float64]) {
  %607 = fn (%var_7332: Tensor[(7, 14, 11), float32], %var_7346: Tensor[(630), int64], %var_7347: Tensor[(1755, 1), float64], %var_7354: Tensor[(1008), float32], %var_7364: Tensor[(35), float64]) -> (Tensor[(7, 14, 11), float32], Tensor[(2, 15, 7), float64], Tensor[(630), int64], Tensor[(1008), float32], Tensor[(1755, 70), float64], Tensor[(35), float64], Tensor[(35), float64]) {
    %582 = cast(%var_7332, dtype="float32") /* ty=Tensor[(7, 14, 11), float32] */;
    %583 = cast(%var_7346, dtype="int64") /* ty=Tensor[(630), int64] */;
    %584 = cast(%var_7347, dtype="float64") /* ty=Tensor[(1755, 1), float64] */;
    %585 = reshape(%583, newshape=[630]) /* ty=Tensor[(630), int64] */;
    %586 = reshape(%584, newshape=[15, 117]) /* ty=Tensor[(15, 117), float64] */;
    %587 = @func_6966(%585, %586) /* ty=(Tensor[(35, 1), float64], Tensor[(3, 14, 15), int64], Tensor[(630), int64], Tensor[(3, 14, 15), int64], Tensor[(2, 15, 7), float64], Tensor[(210), float64], Tensor[(15, 117), float64]) */;
    %588 = cast(%var_7354, dtype="float32") /* ty=Tensor[(1008), float32] */;
    %589 = reshape(%588, newshape=[12, 14, 6]) /* ty=Tensor[(12, 14, 6), float32] */;
    %590 = @func_379(%589) /* ty=(Tensor[(12, 14, 6), float64], Tensor[(7, 2, 5), float32], Tensor[(70), uint64]) */;
    %591 = %590.2;
    %592 = cast(%var_7347, dtype="float64") /* ty=Tensor[(1755, 1), float64] */;
    %593 = cast(%591, dtype="float64") /* ty=Tensor[(70), float64] */;
    %594 = %587.4;
    %595 = cast(%594, dtype="float64") /* ty=Tensor[(2, 15, 7), float64] */;
    %596 = cast(%594, dtype="float64") /* ty=Tensor[(2, 15, 7), float64] */;
    %597 = cast(%var_7347, dtype="float64") /* ty=Tensor[(1755, 1), float64] */;
    %598 = cast(%var_7364, dtype="float64") /* ty=Tensor[(35), float64] */;
    %599 = reshape(%595, newshape=[2, 15, 7]) /* ty=Tensor[(2, 15, 7), float64] */;
    %600 = reshape(%596, newshape=[2, 15, 7]) /* ty=Tensor[(2, 15, 7), float64] */;
    %601 = reshape(%597, newshape=[1755]) /* ty=Tensor[(1755), float64] */;
    %602 = reshape(%598, newshape=[35]) /* ty=Tensor[(35), float64] */;
    %603 = @func_2685(%599, %600, %601, %602) /* ty=(Tensor[(2, 15, 7), float64], Tensor[(128), float64], Tensor[(1755), float64], Tensor[(35), float64], Tensor[(2, 15, 7), uint64], Tensor[(294), bool], Tensor[(70), uint64], Tensor[(1008), float32]) */;
    %604 = cosh(%582) /* ty=Tensor[(7, 14, 11), float32] */;
    %605 = divide(%592, %593) /* ty=Tensor[(1755, 70), float64] */;
    %606 = %603.3;
    (%604, %594, %var_7346, %var_7354, %605, %606, %var_7364)
  };
  %607(%var_7373, %var_7374, %var_7375, %var_7376, %var_7377) /* ty=(Tensor[(7, 14, 11), float32], Tensor[(2, 15, 7), float64], Tensor[(630), int64], Tensor[(1008), float32], Tensor[(1755, 70), float64], Tensor[(35), float64], Tensor[(35), float64]) */
}

def @func_150(%var_149: Tensor[(7, 2, 5), uint64]) -> (Tensor[(7, 2, 5), uint64], Tensor[(7, 2, 5), float32]) {
  %618 = fn (%var_135: Tensor[(7, 2, 5), uint64]) -> (Tensor[(7, 2, 5), uint64], Tensor[(7, 2, 5), float32]) {
    %608 = cast(meta[relay.Constant][49] /* ty=Tensor[(7, 2, 5), uint64] */, dtype="uint64") /* ty=Tensor[(7, 2, 5), uint64] */;
    %609 = shape_of(meta[relay.Constant][48] /* ty=Tensor[(7, 2, 5), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %610 = cast(meta[relay.Constant][48] /* ty=Tensor[(7, 2, 5), uint64] */, dtype="uint64") /* ty=Tensor[(7, 2, 5), uint64] */;
    %611 = dyn.reshape(%608, %609, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %612 = cast(%var_135, dtype="float32") /* ty=Tensor[(7, 2, 5), float32] */;
    %613 = shape_of(meta[relay.Constant][48] /* ty=Tensor[(7, 2, 5), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %614 = cast(meta[relay.Constant][48] /* ty=Tensor[(7, 2, 5), uint64] */, dtype="float32") /* ty=Tensor[(7, 2, 5), float32] */;
    %615 = dyn.reshape(%612, %613, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %616 = subtract(%610, %611) /* ty=Tensor[(7, 2, 5), uint64] */;
    %617 = power(%614, %615) /* ty=Tensor[(7, 2, 5), float32] */;
    (%616, %617)
  };
  %618(%var_149) /* ty=(Tensor[(7, 2, 5), uint64], Tensor[(7, 2, 5), float32]) */
}

def @func_8435() -> (Tensor[(10, 5, 14), float64], Tensor[(10, 6, 5), float64], Tensor[(6, 6, 10), float32]) {
  @func_8433() /* ty=(Tensor[(10, 5, 14), float64], Tensor[(10, 6, 5), float64], Tensor[(6, 6, 10), float32]) */
}

def @func_8503(%var_8498: Tensor[(70), float64]) -> (Tensor[(10, 5, 14), float64], Tensor[(35, 2), uint8], Tensor[(70), float64]) {
  %619 = @func_6151() /* ty=(Tensor[(10, 5, 14), float64],) */;
  %620 = cast(%var_8498, dtype="float64") /* ty=Tensor[(70), float64] */;
  %621 = cast(%var_8498, dtype="float64") /* ty=Tensor[(70), float64] */;
  %622 = reshape(%620, newshape=[35, 2]) /* ty=Tensor[(35, 2), float64] */;
  %623 = reshape(%621, newshape=[35, 2]) /* ty=Tensor[(35, 2), float64] */;
  %624 = @func_5860(%622, %623) /* ty=(Tensor[(35, 2), uint8], Tensor[(35, 2), float32]) */;
  %625 = %619.0;
  %626 = %624.0;
  (%625, %626, %var_8498)
}

def @func_10264(%var_10263: Tensor[(35, 14), float32]) -> (Tensor[(7, 2, 5), float32], Tensor[(70), uint64], Tensor[(35, 14), bool]) {
  %636 = fn (%var_10256: Tensor[(35, 14), float32]) -> (Tensor[(7, 2, 5), float32], Tensor[(70), uint64], Tensor[(35, 14), bool]) {
    %627 = cast(meta[relay.Constant][50] /* ty=Tensor[(70), uint64] */, dtype="uint64") /* ty=Tensor[(70), uint64] */;
    %628 = reshape(%627, newshape=[7, 2, 5]) /* ty=Tensor[(7, 2, 5), uint64] */;
    %629 = @func_148(%628) /* ty=(Tensor[(7, 2, 5), uint64], Tensor[(7, 2, 5), float32]) */;
    %630 = @func_7272() /* ty=(Tensor[(35, 1), float32],) */;
    %631 = %630.0;
    %632 = cast(%631, dtype="bool") /* ty=Tensor[(35, 1), bool] */;
    %633 = cast(%var_10256, dtype="bool") /* ty=Tensor[(35, 14), bool] */;
    %634 = %629.1;
    %635 = logical_or(%632, %633) /* ty=Tensor[(35, 14), bool] */;
    (%634, meta[relay.Constant][50] /* ty=Tensor[(70), uint64] */, %635)
  };
  %636(%var_10263) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(70), uint64], Tensor[(35, 14), bool]) */
}

def @func_6966(%var_6950: Tensor[(630), int64], %var_6956: Tensor[(15, 117), float64]) -> (Tensor[(35, 1), float64], Tensor[(3, 14, 15), int64], Tensor[(630), int64], Tensor[(3, 14, 15), int64], Tensor[(2, 15, 7), float64], Tensor[(210), float64], Tensor[(15, 117), float64]) {
  %637 = cast(%var_6950, dtype="int64") /* ty=Tensor[(630), int64] */;
  %638 = cast(%var_6950, dtype="int64") /* ty=Tensor[(630), int64] */;
  %639 = reshape(%637, newshape=[3, 14, 15]) /* ty=Tensor[(3, 14, 15), int64] */;
  %640 = reshape(%638, newshape=[3, 14, 15]) /* ty=Tensor[(3, 14, 15), int64] */;
  %641 = @func_6389(%639, %640) /* ty=(Tensor[(3, 14, 15), int64],) */;
  %642 = %641.0;
  %643 = cast(%642, dtype="int64") /* ty=Tensor[(3, 14, 15), int64] */;
  %644 = cast(%var_6950, dtype="int64") /* ty=Tensor[(630), int64] */;
  %645 = reshape(%643, newshape=[3, 14, 15]) /* ty=Tensor[(3, 14, 15), int64] */;
  %646 = reshape(%644, newshape=[3, 14, 15]) /* ty=Tensor[(3, 14, 15), int64] */;
  %647 = @func_6389(%645, %646) /* ty=(Tensor[(3, 14, 15), int64],) */;
  %648 = cast(meta[relay.Constant][51] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %649 = cast(meta[relay.Constant][51] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %650 = cast(%var_6956, dtype="float64") /* ty=Tensor[(15, 117), float64] */;
  %651 = @func_6124() /* ty=Tensor[(35, 1), float64] */;
  %652 = cast(%651, dtype="float64") /* ty=Tensor[(35, 1), float64] */;
  %653 = reshape(%648, newshape=[2, 15, 7]) /* ty=Tensor[(2, 15, 7), float64] */;
  %654 = reshape(%649, newshape=[2, 15, 7]) /* ty=Tensor[(2, 15, 7), float64] */;
  %655 = reshape(%650, newshape=[1755]) /* ty=Tensor[(1755), float64] */;
  %656 = reshape(%652, newshape=[35]) /* ty=Tensor[(35), float64] */;
  %657 = @func_2685(%653, %654, %655, %656) /* ty=(Tensor[(2, 15, 7), float64], Tensor[(128), float64], Tensor[(1755), float64], Tensor[(35), float64], Tensor[(2, 15, 7), uint64], Tensor[(294), bool], Tensor[(70), uint64], Tensor[(1008), float32]) */;
  %658 = %647.0;
  %659 = %657.0;
  (%651, %642, %var_6950, %658, %659, meta[relay.Constant][51] /* ty=Tensor[(210), float64] */, %var_6956)
}

def @func_4725(%var_4724: Tensor[(5, 13, 3), float64]) -> Tensor[(5, 13, 3), float64] {
  %661 = fn (%var_4712: Tensor[(5, 13, 3), float64]) -> Tensor[(5, 13, 3), float64] {
    %660 = cast(%var_4712, dtype="float64") /* ty=Tensor[(5, 13, 3), float64] */;
    log(%660) /* ty=Tensor[(5, 13, 3), float64] */
  };
  %661(%var_4724) /* ty=Tensor[(5, 13, 3), float64] */
}

def @func_5632() -> (Tensor[(10, 5, 14), float64], Tensor[(35, 1), float64], Tensor[(128), float64], Tensor[(1755), float64], Tensor[(35), float64], Tensor[(9, 15, 13), float64]) {
  %676 = fn () -> (Tensor[(10, 5, 14), float64], Tensor[(35, 1), float64], Tensor[(128), float64], Tensor[(1755), float64], Tensor[(35), float64], Tensor[(9, 15, 13), float64]) {
    %662 = cast(meta[relay.Constant][52] /* ty=Tensor[(128), float64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
    %663 = cast(meta[relay.Constant][52] /* ty=Tensor[(128), float64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
    %664 = cast(meta[relay.Constant][53] /* ty=Tensor[(1755), float64] */, dtype="float64") /* ty=Tensor[(1755), float64] */;
    %665 = cast(meta[relay.Constant][54] /* ty=Tensor[(35), float64] */, dtype="float64") /* ty=Tensor[(35), float64] */;
    %666 = reshape(%662, newshape=[2, 8, 8]) /* ty=Tensor[(2, 8, 8), float64] */;
    %667 = reshape(%663, newshape=[2, 8, 8]) /* ty=Tensor[(2, 8, 8), float64] */;
    %668 = reshape(%664, newshape=[1755]) /* ty=Tensor[(1755), float64] */;
    %669 = reshape(%665, newshape=[35, 1]) /* ty=Tensor[(35, 1), float64] */;
    %670 = @func_2022(%666, %667, %668, %669) /* ty=(Tensor[(9, 15, 13), float64], Tensor[(1755), float64], Tensor[(2, 8, 8), float64], Tensor[(7, 6, 7), int16], int16, Tensor[(294), int16], Tensor[(1, 5, 7), float64], Tensor[(35, 1), float64], Tensor[(2, 8, 8), float64]) */;
    %671 = cast(meta[relay.Constant][53] /* ty=Tensor[(1755), float64] */, dtype="float64") /* ty=Tensor[(1755), float64] */;
    %672 = reshape(%671, newshape=[9, 15, 13]) /* ty=Tensor[(9, 15, 13), float64] */;
    %673 = @func_5599() /* ty=Tensor[(10, 5, 14), float64] */;
    %674 = %670.7;
    %675 = @func_1627(%672) /* ty=Tensor[(9, 15, 13), float64] */;
    (%673, %674, meta[relay.Constant][52] /* ty=Tensor[(128), float64] */, meta[relay.Constant][53] /* ty=Tensor[(1755), float64] */, meta[relay.Constant][54] /* ty=Tensor[(35), float64] */, %675)
  };
  %676() /* ty=(Tensor[(10, 5, 14), float64], Tensor[(35, 1), float64], Tensor[(128), float64], Tensor[(1755), float64], Tensor[(35), float64], Tensor[(9, 15, 13), float64]) */
}

def @func_9867(%var_9865: int16, %var_9866: Tensor[(64, 2), float64]) -> (Tensor[(10, 5, 14), float64], Tensor[(10, 5, 14), float64], Tensor[(7, 6, 7), int16], int16, Tensor[(294), int16], Tensor[(10, 5, 14), float64], Tensor[(64, 2), float64]) {
  @func_9863(%var_9865, %var_9866) /* ty=(Tensor[(10, 5, 14), float64], Tensor[(10, 5, 14), float64], Tensor[(7, 6, 7), int16], int16, Tensor[(294), int16], Tensor[(10, 5, 14), float64], Tensor[(64, 2), float64]) */
}

def @func_7884(%var_7882: Tensor[(13, 5), int64]) -> (Tensor[(13, 5), int64], Tensor[(10, 5, 14), float64], Tensor[(975, 350), int16]) {
  @func_7881(%var_7882) /* ty=(Tensor[(13, 5), int64], Tensor[(10, 5, 14), float64], Tensor[(975, 350), int16]) */
}

def @func_7723() -> (Tensor[(10, 5, 14), float64],) {
  %677 = @func_6829() /* ty=(Tensor[(10, 5, 14), float64],) */;
  %678 = %677.0;
  (%678,)
}

def @func_222(%var_220: int16, %var_221: Tensor[(7, 6, 7), int16]) -> (Tensor[(7, 6, 7), int16],) {
  @func_218(%var_220, %var_221) /* ty=(Tensor[(7, 6, 7), int16],) */
}

def @func_8840() -> (Tensor[(14, 14, 5), uint32], Tensor[(10, 5, 14), float64]) {
  @func_8838() /* ty=(Tensor[(14, 14, 5), uint32], Tensor[(10, 5, 14), float64]) */
}

def @func_7272() -> (Tensor[(35, 1), float32],) {
  %679 = @func_6124() /* ty=Tensor[(35, 1), float64] */;
  %680 = cast(%679, dtype="float32") /* ty=Tensor[(35, 1), float32] */;
  %681 = erf(%680) /* ty=Tensor[(35, 1), float32] */;
  (%681,)
}

def @func_8799() -> Tensor[(10, 5, 14), float64] {
  @func_6939() /* ty=Tensor[(10, 5, 14), float64] */
}

def @func_8801() -> Tensor[(10, 5, 14), float64] {
  @func_8799() /* ty=Tensor[(10, 5, 14), float64] */
}

def @func_5864(%var_5862: Tensor[(35, 2), float64], %var_5863: Tensor[(35, 2), float64]) -> (Tensor[(35, 2), uint8], Tensor[(35, 2), float32]) {
  @func_5860(%var_5862, %var_5863) /* ty=(Tensor[(35, 2), uint8], Tensor[(35, 2), float32]) */
}

def @func_9559() -> Tensor[(10, 5, 14), float64] {
  @func_9557() /* ty=Tensor[(10, 5, 14), float64] */
}

def @func_7312() -> (Tensor[(35), float64],) {
  %684 = fn () -> (Tensor[(35), float64],) {
    %682 = @func_5812() /* ty=(Tensor[(35), float64],) */;
    %683 = %682.0;
    (%683,)
  };
  %684() /* ty=(Tensor[(35), float64],) */
}

def @func_3763(%var_3761: Tensor[(12, 12, 13), float64], %var_3762: Tensor[(12, 12, 13), float64]) -> Tensor[(12, 12, 13), float64] {
  @func_3759(%var_3761, %var_3762) /* ty=Tensor[(12, 12, 13), float64] */
}

def @func_3759(%var_3754: Tensor[(12, 12, 13), float64], %var_3755: Tensor[(12, 12, 13), float64]) -> Tensor[(12, 12, 13), float64] {
  %685 = cast(%var_3755, dtype="float64") /* ty=Tensor[(12, 12, 13), float64] */;
  %686 = shape_of(%var_3754, dtype="int32") /* ty=Tensor[(3), int32] */;
  %687 = cast(%var_3754, dtype="float64") /* ty=Tensor[(12, 12, 13), float64] */;
  %688 = dyn.reshape(%685, %686, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%687, %688) /* ty=Tensor[(12, 12, 13), float64] */
}

def @func_6217(%var_6216: Tensor[(32, 4), float64]) -> (Tensor[(10, 5, 14), float64], Tensor[(9, 15, 13), float64], Tensor[(32, 4), float64], Tensor[(35), float64], Tensor[(10, 5, 14), float64], Tensor[(1755), bool]) {
  %708 = fn (%var_6190: Tensor[(32, 4), float64]) -> (Tensor[(10, 5, 14), float64], Tensor[(9, 15, 13), float64], Tensor[(32, 4), float64], Tensor[(35), float64], Tensor[(10, 5, 14), float64], Tensor[(1755), bool]) {
    %689 = cast(%var_6190, dtype="float64") /* ty=Tensor[(32, 4), float64] */;
    %690 = cast(%var_6190, dtype="float64") /* ty=Tensor[(32, 4), float64] */;
    %691 = cast(meta[relay.Constant][55] /* ty=Tensor[(1755), float64] */, dtype="float64") /* ty=Tensor[(1755), float64] */;
    %692 = cast(meta[relay.Constant][56] /* ty=Tensor[(35), float64] */, dtype="float64") /* ty=Tensor[(35), float64] */;
    %693 = reshape(%689, newshape=[2, 8, 8]) /* ty=Tensor[(2, 8, 8), float64] */;
    %694 = reshape(%690, newshape=[2, 8, 8]) /* ty=Tensor[(2, 8, 8), float64] */;
    %695 = reshape(%691, newshape=[1755]) /* ty=Tensor[(1755), float64] */;
    %696 = reshape(%692, newshape=[35, 1]) /* ty=Tensor[(35, 1), float64] */;
    %697 = @func_2022(%693, %694, %695, %696) /* ty=(Tensor[(9, 15, 13), float64], Tensor[(1755), float64], Tensor[(2, 8, 8), float64], Tensor[(7, 6, 7), int16], int16, Tensor[(294), int16], Tensor[(1, 5, 7), float64], Tensor[(35, 1), float64], Tensor[(2, 8, 8), float64]) */;
    %698 = cast(meta[relay.Constant][55] /* ty=Tensor[(1755), float64] */, dtype="float32") /* ty=Tensor[(1755), float32] */;
    %699 = atan(%698) /* ty=Tensor[(1755), float32] */;
    %700 = cast(meta[relay.Constant][55] /* ty=Tensor[(1755), float64] */, dtype="bool") /* ty=Tensor[(1755), bool] */;
    %701 = shape_of(%699, dtype="int32") /* ty=Tensor[(1), int32] */;
    %702 = cast(%699, dtype="bool") /* ty=Tensor[(1755), bool] */;
    %703 = dyn.reshape(%700, %701, newshape=[]) /* ty=Tensor[(?), bool] */;
    %704 = @func_5599() /* ty=Tensor[(10, 5, 14), float64] */;
    %705 = %697.0;
    %706 = @func_5599() /* ty=Tensor[(10, 5, 14), float64] */;
    %707 = less(%702, %703) /* ty=Tensor[(1755), bool] */;
    (%704, %705, %var_6190, meta[relay.Constant][56] /* ty=Tensor[(35), float64] */, %706, %707)
  };
  %708(%var_6216) /* ty=(Tensor[(10, 5, 14), float64], Tensor[(9, 15, 13), float64], Tensor[(32, 4), float64], Tensor[(35), float64], Tensor[(10, 5, 14), float64], Tensor[(1755), bool]) */
}

def @func_7725() -> (Tensor[(10, 5, 14), float64],) {
  @func_7723() /* ty=(Tensor[(10, 5, 14), float64],) */
}

def @func_10314() -> (Tensor[(10, 5, 14), float64],) {
  @func_10312() /* ty=(Tensor[(10, 5, 14), float64],) */
}

def @func_6941() -> Tensor[(10, 5, 14), float64] {
  @func_6939() /* ty=Tensor[(10, 5, 14), float64] */
}

def @func_10116() -> (Tensor[(10, 5, 14), float64],) {
  @func_10114() /* ty=(Tensor[(10, 5, 14), float64],) */
}

def @func_8264(%var_8263: Tensor[(70), float64]) -> (Tensor[(35), float64], Tensor[(70), float64], Tensor[(70), float64], Tensor[(14, 14, 5), uint32]) {
  %716 = fn (%var_8246: Tensor[(70), float64]) -> (Tensor[(35), float64], Tensor[(70), float64], Tensor[(70), float64], Tensor[(14, 14, 5), uint32]) {
    %709 = @func_5687() /* ty=(Tensor[(35), float64], Tensor[(1, 5, 7), float64], Tensor[(10, 16, 15), uint32], Tensor[(2400), uint32]) */;
    %710 = cast(%var_8246, dtype="float64") /* ty=Tensor[(70), float64] */;
    %711 = reshape(%710, newshape=[70]) /* ty=Tensor[(70), float64] */;
    %712 = @func_7082(%711) /* ty=(Tensor[(35, 2), float32], Tensor[(70), float64], Tensor[(35, 9), float32], Tensor[(35, 9), float32]) */;
    %713 = %709.0;
    %714 = %712.1;
    %715 = @func_7444() /* ty=Tensor[(14, 14, 5), uint32] */;
    (%713, %714, %var_8246, %715)
  };
  %716(%var_8263) /* ty=(Tensor[(35), float64], Tensor[(70), float64], Tensor[(70), float64], Tensor[(14, 14, 5), uint32]) */
}

def @func_6337(%var_6335: Tensor[(1755), float64], %var_6336: Tensor[(195), float64]) -> (Tensor[(1755), float64], Tensor[(5, 13, 3), uint16], Tensor[(10, 5, 14), float32], Tensor[(9, 15, 13), bool]) {
  %740 = fn (%var_6297: Tensor[(1755), float64], %var_6305: Tensor[(195), float64]) -> (Tensor[(1755), float64], Tensor[(5, 13, 3), uint16], Tensor[(10, 5, 14), float32], Tensor[(9, 15, 13), bool]) {
    %717 = cast(%var_6305, dtype="float64") /* ty=Tensor[(195), float64] */;
    %718 = reshape(%717, newshape=[5, 13, 3]) /* ty=Tensor[(5, 13, 3), float64] */;
    %719 = @func_4723(%718) /* ty=Tensor[(5, 13, 3), float64] */;
    %720 = cast(%var_6305, dtype="uint16") /* ty=Tensor[(195), uint16] */;
    %721 = shape_of(%719, dtype="int32") /* ty=Tensor[(3), int32] */;
    %722 = cast(%719, dtype="uint16") /* ty=Tensor[(5, 13, 3), uint16] */;
    %723 = dyn.reshape(%720, %721, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %724 = @func_6151() /* ty=(Tensor[(10, 5, 14), float64],) */;
    %725 = %724.0;
    %726 = cast(%725, dtype="float32") /* ty=Tensor[(10, 5, 14), float32] */;
    %727 = cast(%var_6297, dtype="float64") /* ty=Tensor[(1755), float64] */;
    %728 = reshape(%727, newshape=[9, 15, 13]) /* ty=Tensor[(9, 15, 13), float64] */;
    %729 = @func_1627(%728) /* ty=Tensor[(9, 15, 13), float64] */;
    %730 = cast(%var_6297, dtype="float64") /* ty=Tensor[(1755), float64] */;
    %731 = reshape(%730, newshape=[9, 15, 13]) /* ty=Tensor[(9, 15, 13), float64] */;
    %732 = @func_1627(%731) /* ty=Tensor[(9, 15, 13), float64] */;
    %733 = cast(%732, dtype="bool") /* ty=Tensor[(9, 15, 13), bool] */;
    %734 = shape_of(%729, dtype="int32") /* ty=Tensor[(3), int32] */;
    %735 = cast(%729, dtype="bool") /* ty=Tensor[(9, 15, 13), bool] */;
    %736 = dyn.reshape(%733, %734, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %737 = add(%722, %723) /* ty=Tensor[(5, 13, 3), uint16] */;
    %738 = atanh(%726) /* ty=Tensor[(10, 5, 14), float32] */;
    %739 = greater(%735, %736) /* ty=Tensor[(9, 15, 13), bool] */;
    (%var_6297, %737, %738, %739)
  };
  %740(%var_6335, %var_6336) /* ty=(Tensor[(1755), float64], Tensor[(5, 13, 3), uint16], Tensor[(10, 5, 14), float32], Tensor[(9, 15, 13), bool]) */
}

def @func_9275() -> (Tensor[(10, 5, 14), float64], uint8, uint8, Tensor[(3, 44), uint8], Tensor[(18), float32]) {
  @func_9273() /* ty=(Tensor[(10, 5, 14), float64], uint8, uint8, Tensor[(3, 44), uint8], Tensor[(18), float32]) */
}

def @func_2961(%var_2943: int8, %var_2954: Tensor[(2400), uint32]) -> (Tensor[(9, 12, 7), float64], int8, Tensor[(1170), float32], int8, Tensor[(10, 16, 15), uint32], Tensor[(2400), uint32]) {
  %741 = cast(meta[relay.Constant][57] /* ty=Tensor[(9, 12, 7), float64] */, dtype="float64") /* ty=Tensor[(9, 12, 7), float64] */;
  %742 = cast(meta[relay.Constant][58] /* ty=Tensor[(1170), float32] */, dtype="float32") /* ty=Tensor[(1170), float32] */;
  %743 = cast(%var_2943, dtype="int8") /* ty=int8 */;
  %744 = reshape(%742, newshape=[9, 10, 13]) /* ty=Tensor[(9, 10, 13), float32] */;
  %745 = reshape(%743, newshape=[]) /* ty=int8 */;
  %746 = @func_2508(%744, %745) /* ty=(Tensor[(9, 10, 13), float32], Tensor[(7, 5, 1), int8], int8) */;
  %747 = cast(%var_2954, dtype="uint32") /* ty=Tensor[(2400), uint32] */;
  %748 = cast(%var_2954, dtype="uint32") /* ty=Tensor[(2400), uint32] */;
  %749 = reshape(%747, newshape=[10, 16, 15]) /* ty=Tensor[(10, 16, 15), uint32] */;
  %750 = reshape(%748, newshape=[10, 16, 15]) /* ty=Tensor[(10, 16, 15), uint32] */;
  %751 = atanh(%741) /* ty=Tensor[(9, 12, 7), float64] */;
  %752 = %746.2;
  %753 = @func_1599(%749, %750) /* ty=Tensor[(10, 16, 15), uint32] */;
  (%751, %752, meta[relay.Constant][58] /* ty=Tensor[(1170), float32] */, %var_2943, %753, %var_2954)
}

def @func_6546(%var_6475: Tensor[(7, 10), uint64], %var_6498: Tensor[(128), float64], %var_6499: Tensor[(1755), float64], %var_6522: uint8, %var_6523: Tensor[(132), uint8], %var_6533: Tensor[(18), float32]) -> (Tensor[(10, 5, 14), float64], Tensor[(7, 10), uint64], Tensor[(35), float64], Tensor[(35, 1), float64], Tensor[(128), float64], Tensor[(1755), float64], Tensor[(10, 5, 7), float32], Tensor[(175, 2), float32], Tensor[(11, 12, 1), bool], uint8, Tensor[(132), uint8], Tensor[(6, 3, 1), float32], Tensor[(18), float32], Tensor[(7, 2, 5), float32]) {
  %754 = @func_6151() /* ty=(Tensor[(10, 5, 14), float64],) */;
  %755 = @func_5812() /* ty=(Tensor[(35), float64],) */;
  %756 = cast(%var_6498, dtype="float64") /* ty=Tensor[(128), float64] */;
  %757 = cast(%var_6498, dtype="float64") /* ty=Tensor[(128), float64] */;
  %758 = cast(%var_6499, dtype="float64") /* ty=Tensor[(1755), float64] */;
  %759 = %755.0;
  %760 = cast(%759, dtype="float64") /* ty=Tensor[(35), float64] */;
  %761 = reshape(%756, newshape=[2, 8, 8]) /* ty=Tensor[(2, 8, 8), float64] */;
  %762 = reshape(%757, newshape=[2, 8, 8]) /* ty=Tensor[(2, 8, 8), float64] */;
  %763 = reshape(%758, newshape=[1755]) /* ty=Tensor[(1755), float64] */;
  %764 = reshape(%760, newshape=[35, 1]) /* ty=Tensor[(35, 1), float64] */;
  %765 = @func_2022(%761, %762, %763, %764) /* ty=(Tensor[(9, 15, 13), float64], Tensor[(1755), float64], Tensor[(2, 8, 8), float64], Tensor[(7, 6, 7), int16], int16, Tensor[(294), int16], Tensor[(1, 5, 7), float64], Tensor[(35, 1), float64], Tensor[(2, 8, 8), float64]) */;
  %766 = cast(meta[relay.Constant][59] /* ty=Tensor[(175, 2), float32] */, dtype="float32") /* ty=Tensor[(175, 2), float32] */;
  %767 = reshape(%766, newshape=[10, 5, 7]) /* ty=Tensor[(10, 5, 7), float32] */;
  %768 = cast(%var_6522, dtype="uint8") /* ty=uint8 */;
  %769 = cast(%var_6523, dtype="uint8") /* ty=Tensor[(132), uint8] */;
  %770 = reshape(%768, newshape=[]) /* ty=uint8 */;
  %771 = reshape(%769, newshape=[11, 12, 1]) /* ty=Tensor[(11, 12, 1), uint8] */;
  %772 = @func_3153(%770, %771) /* ty=(Tensor[(11, 12, 1), bool],) */;
  %773 = cast(%var_6522, dtype="float32") /* ty=float32 */;
  %774 = cast(%var_6533, dtype="float32") /* ty=Tensor[(18), float32] */;
  %775 = reshape(%773, newshape=[]) /* ty=float32 */;
  %776 = reshape(%774, newshape=[6, 3, 1]) /* ty=Tensor[(6, 3, 1), float32] */;
  %777 = @func_5318(%775, %776) /* ty=(Tensor[(6, 3, 1), float32], Tensor[(7, 5, 1), int8], Tensor[(1170), float32], Tensor[(7, 5, 1), int8], Tensor[(11, 12, 1), bool], Tensor[(132), uint8]) */;
  %778 = cast(%var_6475, dtype="uint64") /* ty=Tensor[(7, 10), uint64] */;
  %779 = reshape(%778, newshape=[7, 2, 5]) /* ty=Tensor[(7, 2, 5), uint64] */;
  %780 = @func_148(%779) /* ty=(Tensor[(7, 2, 5), uint64], Tensor[(7, 2, 5), float32]) */;
  %781 = %780.0;
  %782 = cast(%781, dtype="float32") /* ty=Tensor[(7, 2, 5), float32] */;
  %783 = atanh(%782) /* ty=Tensor[(7, 2, 5), float32] */;
  %784 = cast(%783, dtype="float32") /* ty=Tensor[(7, 2, 5), float32] */;
  %785 = %754.0;
  %786 = %765.7;
  %787 = @func_3435(%767) /* ty=Tensor[(10, 5, 7), float32] */;
  %788 = %772.0;
  %789 = %777.0;
  %790 = exp(%784) /* ty=Tensor[(7, 2, 5), float32] */;
  (%785, %var_6475, %759, %786, %var_6498, %var_6499, %787, meta[relay.Constant][59] /* ty=Tensor[(175, 2), float32] */, %788, %var_6522, %var_6523, %789, %var_6533, %790)
}

def @func_6970(%var_6968: Tensor[(630), int64], %var_6969: Tensor[(15, 117), float64]) -> (Tensor[(35, 1), float64], Tensor[(3, 14, 15), int64], Tensor[(630), int64], Tensor[(3, 14, 15), int64], Tensor[(2, 15, 7), float64], Tensor[(210), float64], Tensor[(15, 117), float64]) {
  @func_6966(%var_6968, %var_6969) /* ty=(Tensor[(35, 1), float64], Tensor[(3, 14, 15), int64], Tensor[(630), int64], Tensor[(3, 14, 15), int64], Tensor[(2, 15, 7), float64], Tensor[(210), float64], Tensor[(15, 117), float64]) */
}

def @func_9018() -> (Tensor[(35, 2), uint8], Tensor[(9, 15, 13), float64], Tensor[(15, 117), float64]) {
  %796 = fn () -> (Tensor[(35, 2), uint8], Tensor[(9, 15, 13), float64], Tensor[(15, 117), float64]) {
    %791 = @func_7530() /* ty=(Tensor[(10, 5, 14), float64], Tensor[(35), float32], Tensor[(35, 2), uint8], Tensor[(70), float64]) */;
    %792 = cast(meta[relay.Constant][60] /* ty=Tensor[(15, 117), float64] */, dtype="float64") /* ty=Tensor[(15, 117), float64] */;
    %793 = reshape(%792, newshape=[9, 15, 13]) /* ty=Tensor[(9, 15, 13), float64] */;
    %794 = %791.2;
    %795 = @func_1627(%793) /* ty=Tensor[(9, 15, 13), float64] */;
    (%794, %795, meta[relay.Constant][60] /* ty=Tensor[(15, 117), float64] */)
  };
  %796() /* ty=(Tensor[(35, 2), uint8], Tensor[(9, 15, 13), float64], Tensor[(15, 117), float64]) */
}

def @func_7084(%var_7083: Tensor[(70), float64]) -> (Tensor[(35, 2), float32], Tensor[(70), float64], Tensor[(35, 9), float32], Tensor[(35, 9), float32]) {
  %825 = fn (%var_7030: Tensor[(70), float64]) -> (Tensor[(35, 2), float32], Tensor[(70), float64], Tensor[(35, 9), float32], Tensor[(35, 9), float32]) {
    %797 = cast(%var_7030, dtype="float64") /* ty=Tensor[(70), float64] */;
    %798 = cast(%var_7030, dtype="float64") /* ty=Tensor[(70), float64] */;
    %799 = reshape(%797, newshape=[35, 2]) /* ty=Tensor[(35, 2), float64] */;
    %800 = reshape(%798, newshape=[35, 2]) /* ty=Tensor[(35, 2), float64] */;
    %801 = @func_5860(%799, %800) /* ty=(Tensor[(35, 2), uint8], Tensor[(35, 2), float32]) */;
    %802 = cast(meta[relay.Constant][61] /* ty=Tensor[(35, 9), float64] */, dtype="float64") /* ty=Tensor[(35, 9), float64] */;
    %803 = sin(%802) /* ty=Tensor[(35, 9), float64] */;
    %804 = @func_6124() /* ty=Tensor[(35, 1), float64] */;
    %805 = cast(%804, dtype="float64") /* ty=Tensor[(35, 1), float64] */;
    %806 = cast(meta[relay.Constant][61] /* ty=Tensor[(35, 9), float64] */, dtype="float64") /* ty=Tensor[(35, 9), float64] */;
    %807 = divide(%805, %806) /* ty=Tensor[(35, 9), float64] */;
    %808 = cast(%807, dtype="int32") /* ty=Tensor[(35, 9), int32] */;
    %809 = shape_of(%803, dtype="int32") /* ty=Tensor[(2), int32] */;
    %810 = cast(%803, dtype="int32") /* ty=Tensor[(35, 9), int32] */;
    %811 = dyn.reshape(%808, %809, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %812 = bitwise_or(%810, %811) /* ty=Tensor[(35, 9), int32] */;
    %813 = cast(%812, dtype="float64") /* ty=Tensor[(35, 9), float64] */;
    %814 = tan(%813) /* ty=Tensor[(35, 9), float64] */;
    %815 = cast(%807, dtype="uint32") /* ty=Tensor[(35, 9), uint32] */;
    %816 = shape_of(%814, dtype="int32") /* ty=Tensor[(2), int32] */;
    %817 = cast(%814, dtype="uint32") /* ty=Tensor[(35, 9), uint32] */;
    %818 = dyn.reshape(%815, %816, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %819 = multiply(%817, %818) /* ty=Tensor[(35, 9), uint32] */;
    %820 = cast(%819, dtype="float32") /* ty=Tensor[(35, 9), float32] */;
    %821 = cast(meta[relay.Constant][61] /* ty=Tensor[(35, 9), float64] */, dtype="float32") /* ty=Tensor[(35, 9), float32] */;
    %822 = %801.1;
    %823 = exp(%820) /* ty=Tensor[(35, 9), float32] */;
    %824 = log10(%821) /* ty=Tensor[(35, 9), float32] */;
    (%822, %var_7030, %823, %824)
  };
  %825(%var_7083) /* ty=(Tensor[(35, 2), float32], Tensor[(70), float64], Tensor[(35, 9), float32], Tensor[(35, 9), float32]) */
}

def @func_8767(%var_8764: Tensor[(132), float32], %var_8765: Tensor[(14, 5), float64], %var_8766: Tensor[(1920), float32]) -> (Tensor[(10, 5, 14), float64], Tensor[(6, 11, 2), float32], Tensor[(132), float32], Tensor[(14, 14, 5), uint32], Tensor[(14, 5), float64], Tensor[(10, 16, 12), float32], Tensor[(1920), float32], Tensor[(10, 6, 5), float64]) {
  @func_8762(%var_8764, %var_8765, %var_8766) /* ty=(Tensor[(10, 5, 14), float64], Tensor[(6, 11, 2), float32], Tensor[(132), float32], Tensor[(14, 14, 5), uint32], Tensor[(14, 5), float64], Tensor[(10, 16, 12), float32], Tensor[(1920), float32], Tensor[(10, 6, 5), float64]) */
}

def @func_7939(%var_7938: Tensor[(70), uint64]) -> (Tensor[(6, 6, 10), float32], Tensor[(70), uint64], Tensor[(70), uint64], Tensor[(5, 13, 3), float64], Tensor[(195), float64]) {
  %835 = fn (%var_7926: Tensor[(70), uint64]) -> (Tensor[(6, 6, 10), float32], Tensor[(70), uint64], Tensor[(70), uint64], Tensor[(5, 13, 3), float64], Tensor[(195), float64]) {
    %826 = @func_7207() /* ty=(Tensor[(6, 6, 10), float32],) */;
    %827 = cast(%var_7926, dtype="uint64") /* ty=Tensor[(70), uint64] */;
    %828 = reshape(%827, newshape=[70]) /* ty=Tensor[(70), uint64] */;
    %829 = @func_7543(%828) /* ty=(Tensor[(35), float32], Tensor[(7, 2, 5), uint64], Tensor[(70), uint64]) */;
    %830 = cast(meta[relay.Constant][62] /* ty=Tensor[(195), float64] */, dtype="float64") /* ty=Tensor[(195), float64] */;
    %831 = reshape(%830, newshape=[5, 13, 3]) /* ty=Tensor[(5, 13, 3), float64] */;
    %832 = %826.0;
    %833 = %829.2;
    %834 = @func_4723(%831) /* ty=Tensor[(5, 13, 3), float64] */;
    (%832, %833, %var_7926, %834, meta[relay.Constant][62] /* ty=Tensor[(195), float64] */)
  };
  %835(%var_7938) /* ty=(Tensor[(6, 6, 10), float32], Tensor[(70), uint64], Tensor[(70), uint64], Tensor[(5, 13, 3), float64], Tensor[(195), float64]) */
}

def @func_6712(%var_6709: Tensor[(1008), float32], %var_6710: Tensor[(132), float32], %var_6711: int8) -> (Tensor[(12, 12, 13), float64], Tensor[(35, 1872), int32], Tensor[(7, 5, 1), int8], Tensor[(1008), float32], Tensor[(6, 11, 2), float32], Tensor[(132), float32], Tensor[(35, 1872), uint64], Tensor[(35), float64], int8) {
  %862 = fn (%var_6657: Tensor[(1008), float32], %var_6680: Tensor[(132), float32], %var_6700: int8) -> (Tensor[(12, 12, 13), float64], Tensor[(35, 1872), int32], Tensor[(7, 5, 1), int8], Tensor[(1008), float32], Tensor[(6, 11, 2), float32], Tensor[(132), float32], Tensor[(35, 1872), uint64], Tensor[(35), float64], int8) {
    %836 = cast(meta[relay.Constant][63] /* ty=Tensor[(1872), float64] */, dtype="float64") /* ty=Tensor[(1872), float64] */;
    %837 = cast(meta[relay.Constant][63] /* ty=Tensor[(1872), float64] */, dtype="float64") /* ty=Tensor[(1872), float64] */;
    %838 = reshape(%836, newshape=[12, 12, 13]) /* ty=Tensor[(12, 12, 13), float64] */;
    %839 = reshape(%837, newshape=[12, 12, 13]) /* ty=Tensor[(12, 12, 13), float64] */;
    %840 = @func_6124() /* ty=Tensor[(35, 1), float64] */;
    %841 = cast(%840, dtype="int32") /* ty=Tensor[(35, 1), int32] */;
    %842 = cast(meta[relay.Constant][63] /* ty=Tensor[(1872), float64] */, dtype="int32") /* ty=Tensor[(1872), int32] */;
    %843 = cast(%var_6657, dtype="float32") /* ty=Tensor[(1008), float32] */;
    %844 = reshape(%843, newshape=[252, 4]) /* ty=Tensor[(252, 4), float32] */;
    %845 = @func_6447(%844) /* ty=(Tensor[(10, 5, 14), float64], Tensor[(5, 13, 3), float64], Tensor[(195), float64], Tensor[(7, 2, 5), float32], Tensor[(252, 4), float32], Tensor[(7, 5, 1), int8], int8) */;
    %846 = cast(%var_6680, dtype="float32") /* ty=Tensor[(132), float32] */;
    %847 = reshape(%846, newshape=[6, 11, 2]) /* ty=Tensor[(6, 11, 2), float32] */;
    %848 = @func_5776(%847) /* ty=(Tensor[(6, 11, 2), float32],) */;
    %849 = cast(%840, dtype="float32") /* ty=Tensor[(35, 1), float32] */;
    %850 = cosh(%849) /* ty=Tensor[(35, 1), float32] */;
    %851 = cast(%850, dtype="uint64") /* ty=Tensor[(35, 1), uint64] */;
    %852 = cast(meta[relay.Constant][63] /* ty=Tensor[(1872), float64] */, dtype="uint64") /* ty=Tensor[(1872), uint64] */;
    %853 = cast(%var_6700, dtype="int8") /* ty=int8 */;
    %854 = reshape(%853, newshape=[]) /* ty=int8 */;
    %855 = @func_5983(%854) /* ty=(Tensor[(35), float64], Tensor[(7, 5, 1), int8], int8) */;
    %856 = @func_3759(%838, %839) /* ty=Tensor[(12, 12, 13), float64] */;
    %857 = subtract(%841, %842) /* ty=Tensor[(35, 1872), int32] */;
    %858 = %845.5;
    %859 = %848.0;
    %860 = left_shift(%851, %852) /* ty=Tensor[(35, 1872), uint64] */;
    %861 = %855.0;
    (%856, %857, %858, %var_6657, %859, %var_6680, %860, %861, %var_6700)
  };
  %862(%var_6709, %var_6710, %var_6711) /* ty=(Tensor[(12, 12, 13), float64], Tensor[(35, 1872), int32], Tensor[(7, 5, 1), int8], Tensor[(1008), float32], Tensor[(6, 11, 2), float32], Tensor[(132), float32], Tensor[(35, 1872), uint64], Tensor[(35), float64], int8) */
}

def @func_8482(%var_8481: Tensor[(5, 11, 15), float32]) -> (Tensor[(5, 11, 15), float32],) {
  %868 = fn (%var_8467: Tensor[(5, 11, 15), float32]) -> (Tensor[(5, 11, 15), float32],) {
    %863 = cast(%var_8467, dtype="float32") /* ty=Tensor[(5, 11, 15), float32] */;
    %864 = shape_of(meta[relay.Constant][64] /* ty=Tensor[(5, 11, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %865 = cast(meta[relay.Constant][64] /* ty=Tensor[(5, 11, 15), float32] */, dtype="float32") /* ty=Tensor[(5, 11, 15), float32] */;
    %866 = dyn.reshape(%863, %864, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %867 = floor_mod(%865, %866) /* ty=Tensor[(5, 11, 15), float32] */;
    (%867,)
  };
  %868(%var_8481) /* ty=(Tensor[(5, 11, 15), float32],) */
}

def @func_9581() -> Tensor[(4, 15, 3), float32] {
  %870 = fn () -> Tensor[(4, 15, 3), float32] {
    %869 = cast(meta[relay.Constant][65] /* ty=Tensor[(4, 15, 3), float32] */, dtype="float32") /* ty=Tensor[(4, 15, 3), float32] */;
    log(%869) /* ty=Tensor[(4, 15, 3), float32] */
  };
  %870() /* ty=Tensor[(4, 15, 3), float32] */
}

def @func_5934(%var_5932: Tensor[(10, 16, 12), float32]) -> Tensor[(10, 16, 12), float32] {
  @func_5931(%var_5932) /* ty=Tensor[(10, 16, 12), float32] */
}

def @func_2508(%var_2489: Tensor[(9, 10, 13), float32], %var_2502: int8) -> (Tensor[(9, 10, 13), float32], Tensor[(7, 5, 1), int8], int8) {
  %871 = cast(meta[relay.Constant][66] /* ty=Tensor[(9, 10, 13), float32] */, dtype="float32") /* ty=Tensor[(9, 10, 13), float32] */;
  %872 = shape_of(%var_2489, dtype="int32") /* ty=Tensor[(3), int32] */;
  %873 = cast(%var_2489, dtype="float32") /* ty=Tensor[(9, 10, 13), float32] */;
  %874 = dyn.reshape(%871, %872, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %875 = cast(%var_2502, dtype="int8") /* ty=int8 */;
  %876 = reshape(%875, newshape=[]) /* ty=int8 */;
  %877 = @func_2369(%876) /* ty=(Tensor[(7, 5, 1), int8],) */;
  %878 = divide(%873, %874) /* ty=Tensor[(9, 10, 13), float32] */;
  %879 = %877.0;
  (%878, %879, %var_2502)
}

def @func_5985(%var_5984: int8) -> (Tensor[(35), float64], Tensor[(7, 5, 1), int8], int8) {
  %888 = fn (%var_5979: int8) -> (Tensor[(35), float64], Tensor[(7, 5, 1), int8], int8) {
    %880 = @func_5812() /* ty=(Tensor[(35), float64],) */;
    %881 = %880.0;
    %882 = cast(%881, dtype="float64") /* ty=Tensor[(35), float64] */;
    %883 = cast(%var_5979, dtype="int8") /* ty=int8 */;
    %884 = reshape(%883, newshape=[]) /* ty=int8 */;
    %885 = @func_2369(%884) /* ty=(Tensor[(7, 5, 1), int8],) */;
    %886 = sigmoid(%882) /* ty=Tensor[(35), float64] */;
    %887 = %885.0;
    (%886, %887, %var_5979)
  };
  %888(%var_5984) /* ty=(Tensor[(35), float64], Tensor[(7, 5, 1), int8], int8) */
}

def @func_7881(%var_7870: Tensor[(13, 5), int64]) -> (Tensor[(13, 5), int64], Tensor[(10, 5, 14), float64], Tensor[(975, 350), int16]) {
  %889 = @func_6939() /* ty=Tensor[(10, 5, 14), float64] */;
  %890 = cast(%889, dtype="float64") /* ty=Tensor[(10, 5, 14), float64] */;
  %891 = cast(%var_7870, dtype="int64") /* ty=Tensor[(13, 5), int64] */;
  %892 = cast(meta[relay.Constant][67] /* ty=Tensor[(975, 1), int64] */, dtype="int64") /* ty=Tensor[(975, 1), int64] */;
  %893 = reshape(%891, newshape=[13, 1, 5]) /* ty=Tensor[(13, 1, 5), int64] */;
  %894 = reshape(%892, newshape=[13, 15, 5]) /* ty=Tensor[(13, 15, 5), int64] */;
  %895 = @func_4612(%893, %894) /* ty=(Tensor[(13, 15, 5), bool], Tensor[(10, 5, 7), float32], Tensor[(350), float32]) */;
  %896 = %895.2;
  %897 = cast(%896, dtype="int16") /* ty=Tensor[(350), int16] */;
  %898 = cast(meta[relay.Constant][67] /* ty=Tensor[(975, 1), int64] */, dtype="int16") /* ty=Tensor[(975, 1), int16] */;
  %899 = exp(%890) /* ty=Tensor[(10, 5, 14), float64] */;
  %900 = bitwise_xor(%897, %898) /* ty=Tensor[(975, 350), int16] */;
  (%var_7870, %899, %900)
}

def @func_9614() -> (Tensor[(10, 5, 14), float64],) {
  @func_9612() /* ty=(Tensor[(10, 5, 14), float64],) */
}

def @func_9977() -> (Tensor[(10, 5, 14), float64], Tensor[(10, 5, 14), float64], Tensor[(35, 2), float32], Tensor[(70), float64], Tensor[(12, 12, 13), float64], Tensor[(1872), float64]) {
  %901 = cast(meta[relay.Constant][68] /* ty=Tensor[(70), float64] */, dtype="float64") /* ty=Tensor[(70), float64] */;
  %902 = cast(meta[relay.Constant][68] /* ty=Tensor[(70), float64] */, dtype="float64") /* ty=Tensor[(70), float64] */;
  %903 = reshape(%901, newshape=[35, 2]) /* ty=Tensor[(35, 2), float64] */;
  %904 = reshape(%902, newshape=[35, 2]) /* ty=Tensor[(35, 2), float64] */;
  %905 = @func_5860(%903, %904) /* ty=(Tensor[(35, 2), uint8], Tensor[(35, 2), float32]) */;
  %906 = cast(meta[relay.Constant][69] /* ty=Tensor[(1872), float64] */, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %907 = cast(meta[relay.Constant][69] /* ty=Tensor[(1872), float64] */, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %908 = reshape(%906, newshape=[12, 12, 13]) /* ty=Tensor[(12, 12, 13), float64] */;
  %909 = reshape(%907, newshape=[12, 12, 13]) /* ty=Tensor[(12, 12, 13), float64] */;
  %910 = @func_9557() /* ty=Tensor[(10, 5, 14), float64] */;
  %911 = @func_9710() /* ty=Tensor[(10, 5, 14), float64] */;
  %912 = %905.1;
  %913 = @func_3759(%908, %909) /* ty=Tensor[(12, 12, 13), float64] */;
  (%910, %911, %912, meta[relay.Constant][68] /* ty=Tensor[(70), float64] */, %913, meta[relay.Constant][69] /* ty=Tensor[(1872), float64] */)
}

def @func_7983(%var_7982: Tensor[(35), float64]) -> (Tensor[(35), float32],) {
  %921 = fn (%var_7972: Tensor[(35), float64]) -> (Tensor[(35), float32],) {
    %914 = @func_7732() /* ty=(Tensor[(35), float64],) */;
    %915 = %914.0;
    %916 = cast(%var_7972, dtype="float32") /* ty=Tensor[(35), float32] */;
    %917 = shape_of(%915, dtype="int32") /* ty=Tensor[(1), int32] */;
    %918 = cast(%915, dtype="float32") /* ty=Tensor[(35), float32] */;
    %919 = dyn.reshape(%916, %917, newshape=[]) /* ty=Tensor[(?), float32] */;
    %920 = minimum(%918, %919) /* ty=Tensor[(35), float32] */;
    (%920,)
  };
  %921(%var_7982) /* ty=(Tensor[(35), float32],) */
}

def @func_7446() -> Tensor[(14, 14, 5), uint32] {
  @func_7444() /* ty=Tensor[(14, 14, 5), uint32] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen704/build/output.py:2196: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen704/build/output.py:2201: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='cuda')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen704/build/output.py:2213: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen704/build/output.py:2218: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='cuda')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen704/build/output.py:2223: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mutated_mod, target='llvm')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen704/build/output.py:2228: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mutated_mod, target='cuda')

===================================
#[version = "0.0.5"]
def @main() -> (Tensor[(9, 2, 13), float32],) {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(9, 2, 13), float32] */, dtype="float32") /* GeneratedSource */ /* ty=Tensor[(9, 2, 13), float32] */;
  %1 = acosh(%0) /* GeneratedSource */ /* ty=Tensor[(9, 2, 13), float32] */;
  (%1,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */

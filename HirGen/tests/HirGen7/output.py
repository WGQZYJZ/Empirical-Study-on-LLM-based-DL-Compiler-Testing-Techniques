import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_72 = relay.var("var_72", dtype = "bool", shape = (4, 2, 4))#candidate|72|(4, 2, 4)|var|bool
const_73 = relay.const([[[True,False,True,True],[True,True,True,False]],[[False,False,True,False],[False,False,False,False]],[[False,False,False,True],[True,True,False,False]],[[True,True,True,False],[True,False,False,False]]], dtype = "bool")#candidate|73|(4, 2, 4)|const|bool
bop_74 = relay.logical_or(var_72.astype('bool'), relay.reshape(const_73.astype('bool'), relay.shape_of(var_72))) # shape=(4, 2, 4)
bop_77 = relay.multiply(const_73.astype('uint8'), relay.reshape(bop_74.astype('uint8'), relay.shape_of(const_73))) # shape=(4, 2, 4)
output = relay.Tuple([bop_77,])
output2 = relay.Tuple([bop_77,])
func_103 = relay.Function([var_72,], output)
mod['func_103'] = func_103
mod = relay.transform.InferType()(mod)
mutated_mod['func_103'] = func_103
mutated_mod = relay.transform.InferType()(mutated_mod)
var_104 = relay.var("var_104", dtype = "bool", shape = (4, 2, 4))#candidate|104|(4, 2, 4)|var|bool
func_103_call = mutated_mod.get_global_var('func_103')
call_105 = func_103_call(var_104)
output = call_105
func_106 = relay.Function([var_104], output)
mutated_mod['func_106'] = func_106
mutated_mod = relay.transform.InferType()(mutated_mod)
const_113 = relay.const([[[-9,-3,9],[6,-1,10],[1,-5,-2],[7,2,1]],[[-4,8,-9],[9,-4,-4],[6,-6,4],[9,2,10]],[[4,10,-7],[-3,-7,-8],[6,6,-2],[4,-2,-7]],[[8,2,9],[-8,1,8],[-8,-10,-1],[-1,6,6]],[[-8,7,3],[-6,7,5],[-10,-10,10],[9,-10,2]],[[7,-10,-1],[-2,9,10],[-1,-6,-4],[8,-3,-5]],[[6,-10,-4],[8,6,-6],[-6,-9,-10],[-8,-7,1]],[[3,-7,6],[9,7,8],[4,3,-6],[8,-9,-7]],[[-9,-10,-9],[-10,-10,1],[3,10,1],[-1,8,4]],[[3,7,10],[1,-1,8],[1,4,-6],[-7,-7,9]],[[7,-1,-4],[-10,-9,-10],[-1,10,9],[-1,5,2]],[[-10,-10,-8],[-5,9,-1],[-2,-1,-7],[2,2,-9]],[[-10,-3,-8],[4,-4,7],[5,6,-9],[-6,-7,4]],[[8,4,-7],[-2,5,-10],[10,1,2],[5,-9,9]]], dtype = "int32")#candidate|113|(14, 4, 3)|const|int32
const_114 = relay.const([[[-7,-5,-3],[3,5,-6],[5,3,-2],[10,6,-10]],[[-9,4,-7],[9,-2,-6],[7,3,-3],[8,-10,-9]],[[6,2,5],[7,-9,7],[-6,9,-3],[2,-6,3]],[[-3,7,-2],[6,8,-1],[9,10,1],[-3,4,-2]],[[9,-10,-9],[4,3,-7],[-10,4,10],[2,3,1]],[[-9,-8,6],[-1,-6,-10],[3,-8,7],[-3,8,-4]],[[3,2,-8],[-10,5,10],[-8,8,4],[-8,4,-5]],[[-1,8,8],[-8,8,8],[10,2,4],[1,-3,-5]],[[-1,-3,-10],[7,-9,-1],[-5,-7,-8],[8,3,-7]],[[2,-8,-7],[3,9,-4],[-4,-10,-4],[-9,9,-3]],[[-1,7,10],[10,10,-8],[-2,-6,5],[-9,8,4]],[[-8,2,-9],[4,-3,5],[-3,-5,2],[1,-2,-6]],[[-6,8,4],[-6,4,-10],[3,2,-7],[9,-1,-4]],[[-10,8,1],[-3,-1,-2],[2,7,-8],[-9,-3,6]]], dtype = "int32")#candidate|114|(14, 4, 3)|const|int32
bop_115 = relay.greater(const_113.astype('bool'), relay.reshape(const_114.astype('bool'), relay.shape_of(const_113))) # shape=(14, 4, 3)
output = bop_115
output2 = bop_115
func_120 = relay.Function([], output)
mod['func_120'] = func_120
mod = relay.transform.InferType()(mod)
mutated_mod['func_120'] = func_120
mutated_mod = relay.transform.InferType()(mutated_mod)
func_120_call = mutated_mod.get_global_var('func_120')
call_121 = func_120_call()
output = call_121
func_122 = relay.Function([], output)
mutated_mod['func_122'] = func_122
mutated_mod = relay.transform.InferType()(mutated_mod)
func_120_call = mod.get_global_var('func_120')
func_122_call = mutated_mod.get_global_var('func_122')
call_127 = func_120_call()
call_128 = func_120_call()
func_103_call = mod.get_global_var('func_103')
func_106_call = mutated_mod.get_global_var('func_106')
var_130 = relay.var("var_130", dtype = "bool", shape = (32,))#candidate|130|(32,)|var|bool
call_129 = relay.TupleGetItem(func_103_call(relay.reshape(var_130.astype('bool'), [4, 2, 4])), 0)
call_131 = relay.TupleGetItem(func_106_call(relay.reshape(var_130.astype('bool'), [4, 2, 4])), 0)
func_120_call = mod.get_global_var('func_120')
func_122_call = mutated_mod.get_global_var('func_122')
call_134 = func_120_call()
call_135 = func_120_call()
func_103_call = mod.get_global_var('func_103')
func_106_call = mutated_mod.get_global_var('func_106')
call_136 = relay.TupleGetItem(func_103_call(relay.reshape(call_129.astype('bool'), [4, 2, 4])), 0)
call_137 = relay.TupleGetItem(func_106_call(relay.reshape(call_129.astype('bool'), [4, 2, 4])), 0)
output = relay.Tuple([call_127,call_129,var_130,call_134,call_136,])
output2 = relay.Tuple([call_128,call_131,var_130,call_135,call_137,])
func_156 = relay.Function([var_130,], output)
mod['func_156'] = func_156
mod = relay.transform.InferType()(mod)
var_157 = relay.var("var_157", dtype = "bool", shape = (32,))#candidate|157|(32,)|var|bool
output = func_156(var_157)
func_158 = relay.Function([var_157], output)
mutated_mod['func_158'] = func_158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_120_call = mod.get_global_var('func_120')
func_122_call = mutated_mod.get_global_var('func_122')
call_217 = func_120_call()
call_218 = func_120_call()
output = relay.Tuple([call_217,])
output2 = relay.Tuple([call_218,])
func_234 = relay.Function([], output)
mod['func_234'] = func_234
mod = relay.transform.InferType()(mod)
output = func_234()
func_235 = relay.Function([], output)
mutated_mod['func_235'] = func_235
mutated_mod = relay.transform.InferType()(mutated_mod)
var_255 = relay.var("var_255", dtype = "float32", shape = (7, 5, 13))#candidate|255|(7, 5, 13)|var|float32
const_256 = relay.const([[[9.846802,7.461251,8.231642,2.438216,-5.699741,1.718274,4.582649,-9.289290,-8.458244,4.521770,-5.126102,-3.517092,-0.031223],[-5.443331,0.485011,-3.040797,-5.344731,6.766746,-0.468428,-5.200688,0.042746,-2.814947,3.366681,2.503628,-2.037683,-4.540671],[-5.657825,-7.569487,-3.047047,-2.262415,-1.368246,-3.844118,8.349097,-9.321437,-3.702766,-3.061632,2.135937,3.448831,8.615984],[-8.386832,1.291885,6.388155,4.439218,-2.439587,-1.400931,-5.093336,6.369144,1.606579,-9.925113,-5.274277,-7.517100,-3.573753],[-9.920806,-5.820206,2.871694,8.603541,8.580758,-0.410504,-3.252696,-4.007407,1.292071,7.390305,2.560666,2.729951,9.022246]],[[3.993283,-7.846271,4.401506,4.017395,1.819554,-9.891901,6.565397,2.372118,-1.167177,-9.124035,-0.300299,6.295728,-7.221654],[-8.636145,-4.556285,4.434337,6.414116,-0.569604,-7.889569,-3.942493,-9.170350,-4.350771,-9.491363,9.605078,3.779128,4.365528],[7.082151,-7.800978,5.076128,-3.318554,-2.566720,1.058945,5.972241,-5.462358,4.598074,7.728102,5.634280,1.976126,8.351133],[-0.331261,-0.560286,-7.430004,9.222982,6.259575,2.821609,-7.706618,-9.397268,0.844459,0.691535,2.718314,-4.550301,-5.911379],[5.684511,2.807650,-9.969322,9.933593,3.646122,3.403554,-7.225724,-0.066118,-5.344582,1.732860,-4.892462,-8.774726,-5.039410]],[[2.859171,6.166676,-0.105794,5.489499,0.719831,-3.089888,4.776563,4.486322,-4.472187,3.493287,7.508041,6.349558,-6.597476],[-4.004741,-1.354626,9.532831,3.952082,4.666892,7.264016,-2.565555,1.494168,7.328115,-9.837429,0.281412,3.353617,4.546909],[-4.909443,1.722915,5.297286,2.685087,9.708754,7.996259,3.343478,-0.023373,3.566803,-7.541745,0.697137,9.737947,-8.505291],[-1.493017,-5.567397,-6.241632,8.837888,4.843664,8.851077,-4.358572,5.210806,-4.510527,-0.963279,3.368648,9.788641,-5.981982],[-3.213191,-7.702992,-2.736033,-1.925711,2.364028,0.568140,-1.906566,4.551608,-9.589339,-0.035796,5.566642,-0.712770,-8.269858]],[[0.405195,1.536214,-1.750368,-3.945634,-8.030224,-0.700225,6.543090,-6.188643,-1.442765,0.791690,-1.255016,2.061736,-3.159614],[3.341349,-7.160489,-8.506109,5.876125,-1.527219,9.515884,0.446081,3.763127,-7.644915,2.276193,-6.892035,-0.513527,4.304845],[3.853876,5.711204,2.708799,-5.202582,-9.885606,6.412804,1.679127,-0.811696,-6.794055,-2.009512,9.195356,-9.901525,4.389674],[-3.946422,1.162827,0.453685,-9.366737,-6.559224,3.447283,1.334854,1.382870,-2.333492,-7.249228,-0.827694,-2.146179,9.181293],[7.191187,-8.943113,-5.627798,-3.134908,-1.392225,-1.748235,8.279169,-0.031877,0.813692,-2.791271,-0.514261,2.766872,4.552825]],[[-5.515466,3.180565,1.174811,8.003205,1.061787,-1.110704,9.824583,7.730372,3.425413,-4.976021,-6.550469,-8.191852,5.594888],[0.597355,4.041091,-5.693458,-6.457078,2.385546,-4.535590,9.876586,-0.045960,-3.700191,-3.935524,9.408270,-9.148617,8.327288],[-9.446165,9.814093,-9.708975,-7.466099,-3.541509,7.630999,-2.400300,-2.069666,-1.702782,7.402874,-0.789775,-5.105689,6.432138],[-4.883574,-9.514876,-2.028842,6.961950,-4.009112,-6.785515,-6.282808,6.815872,6.932387,-2.155959,-8.212210,3.720514,-7.850550],[6.279833,-7.438479,-0.087017,-6.879342,-2.460344,9.406075,3.439101,-4.169039,9.587699,-2.453135,-9.929309,-5.351810,2.178295]],[[4.056738,-8.334695,-8.942057,3.176151,1.800577,-9.501203,-1.757215,-0.827386,-0.008910,5.863036,-8.275053,2.762041,5.523819],[-6.822676,8.455146,-6.434494,9.886723,-8.757075,8.379333,-7.774377,6.078887,-7.210456,-1.445633,-5.103289,-0.526355,3.219246],[-5.807433,5.853834,-9.799866,1.269240,-9.880524,4.628999,3.586213,2.689883,2.595070,1.714716,-7.128691,-1.141551,-7.376033],[-5.154275,-9.852621,1.015560,-6.856198,-6.376412,7.836301,-3.940224,1.571109,1.451112,7.225390,5.677876,-0.556770,-2.544669],[0.444135,3.511837,6.403734,-1.385497,2.148315,-0.872057,9.267380,0.068861,-7.286461,-8.926781,2.474457,-8.512821,-1.435592]],[[0.681123,-5.833338,-0.318175,-5.701602,-4.999983,6.519226,2.619430,-8.948479,-5.909310,-1.443608,-5.622182,-2.257545,-9.761697],[-8.849115,-6.493369,4.351334,-1.147409,3.086262,3.364337,-6.016850,9.616510,-2.921763,3.547989,-9.492305,-0.658300,3.521185],[-8.424850,4.241966,1.268329,8.709761,0.621950,2.225823,1.531270,-7.446550,-0.009377,-0.948681,-2.299485,-6.225925,2.512891],[6.856755,1.982845,3.958160,-0.803696,-6.039370,-7.881470,-4.011342,-4.209570,7.008228,-9.830291,-3.899325,2.154014,0.209239],[-8.225920,0.960151,-6.410875,9.333102,7.155933,2.720863,-6.073948,4.974417,-6.150193,-3.388653,1.643255,-9.643666,4.236711]]], dtype = "float32")#candidate|256|(7, 5, 13)|const|float32
bop_257 = relay.mod(var_255.astype('float32'), relay.reshape(const_256.astype('float32'), relay.shape_of(var_255))) # shape=(7, 5, 13)
func_103_call = mod.get_global_var('func_103')
func_106_call = mutated_mod.get_global_var('func_106')
const_265 = relay.const([True,False,True,True,True,True,False,False,True,False,True,True,False,True,False,True,True,False,True,False,False,False,True,False,False,True,True,True,True,True,True,True], dtype = "bool")#candidate|265|(32,)|const|bool
call_264 = relay.TupleGetItem(func_103_call(relay.reshape(const_265.astype('bool'), [4, 2, 4])), 0)
call_266 = relay.TupleGetItem(func_106_call(relay.reshape(const_265.astype('bool'), [4, 2, 4])), 0)
uop_272 = relay.asin(const_265.astype('float64')) # shape=(32,)
func_156_call = mod.get_global_var('func_156')
func_158_call = mutated_mod.get_global_var('func_158')
call_278 = relay.TupleGetItem(func_156_call(relay.reshape(call_264.astype('bool'), [32,])), 4)
call_279 = relay.TupleGetItem(func_158_call(relay.reshape(call_264.astype('bool'), [32,])), 4)
output = relay.Tuple([bop_257,call_264,uop_272,call_278,])
output2 = relay.Tuple([bop_257,call_266,uop_272,call_279,])
func_285 = relay.Function([var_255,], output)
mod['func_285'] = func_285
mod = relay.transform.InferType()(mod)
mutated_mod['func_285'] = func_285
mutated_mod = relay.transform.InferType()(mutated_mod)
var_286 = relay.var("var_286", dtype = "float32", shape = (7, 5, 13))#candidate|286|(7, 5, 13)|var|float32
func_285_call = mutated_mod.get_global_var('func_285')
call_287 = func_285_call(var_286)
output = call_287
func_288 = relay.Function([var_286], output)
mutated_mod['func_288'] = func_288
mutated_mod = relay.transform.InferType()(mutated_mod)
var_308 = relay.var("var_308", dtype = "float64", shape = (7, 15, 2))#candidate|308|(7, 15, 2)|var|float64
uop_309 = relay.exp(var_308.astype('float64')) # shape=(7, 15, 2)
output = relay.Tuple([uop_309,])
output2 = relay.Tuple([uop_309,])
func_312 = relay.Function([var_308,], output)
mod['func_312'] = func_312
mod = relay.transform.InferType()(mod)
mutated_mod['func_312'] = func_312
mutated_mod = relay.transform.InferType()(mutated_mod)
var_313 = relay.var("var_313", dtype = "float64", shape = (7, 15, 2))#candidate|313|(7, 15, 2)|var|float64
func_312_call = mutated_mod.get_global_var('func_312')
call_314 = func_312_call(var_313)
output = call_314
func_315 = relay.Function([var_313], output)
mutated_mod['func_315'] = func_315
mutated_mod = relay.transform.InferType()(mutated_mod)
func_120_call = mod.get_global_var('func_120')
func_122_call = mutated_mod.get_global_var('func_122')
call_319 = func_120_call()
call_320 = func_120_call()
uop_323 = relay.cos(call_319.astype('float32')) # shape=(14, 4, 3)
uop_325 = relay.cos(call_320.astype('float32')) # shape=(14, 4, 3)
func_285_call = mod.get_global_var('func_285')
func_288_call = mutated_mod.get_global_var('func_288')
const_332 = relay.const([[-3.958963,-8.737215,-3.438070,-3.793809,-3.110746,7.258357,5.765536,3.976785,-0.366187,8.684783,-7.536758,-6.380052,-5.073459,3.250474,-1.247251,5.018059,-3.493352,1.048194,-1.093576,-7.888217,3.340883,-1.798007,1.073954,-9.113061,1.237759,9.882430,-9.005232,-8.813916,-0.995878,0.185625,5.757702,1.023381,-0.215273,-4.833551,-1.478816],[-6.271479,-0.118713,-9.534433,-9.163227,9.897360,2.610396,6.296363,-7.849777,-7.886446,7.566803,-1.346933,9.254428,2.669914,-5.716960,-7.764840,-6.618050,-7.549934,8.091224,-5.137010,-0.344122,-0.966526,7.610903,0.551636,6.229069,-4.070375,-1.027941,5.297513,-8.321249,3.269396,6.739744,6.388245,-4.539484,-7.996353,-3.065394,-2.617412],[4.735092,-0.831901,-9.778377,-5.249164,-7.324948,5.122096,8.448096,-1.302536,1.064389,3.093122,2.555127,-7.993679,-8.321298,-1.254829,3.726930,5.155357,5.156014,0.575092,-4.842344,4.502414,-4.709703,5.322499,6.067367,1.550980,0.400693,5.739037,6.654937,5.656515,2.591338,7.006118,-9.041483,6.103846,-1.499440,9.545603,-3.706170],[1.172262,1.587758,9.443119,-4.132459,1.844339,5.756265,7.541172,-4.932985,-7.496355,-7.980034,9.852734,7.410582,-6.775995,0.976584,-9.727549,-6.164386,8.470943,-0.688697,-6.824982,4.441589,-3.750001,1.097545,-3.992807,-3.449552,6.849477,-8.447003,7.004700,4.703542,3.022139,-8.792884,-5.996554,-9.658123,-0.818149,-3.896180,2.008702],[8.330529,-6.532273,2.462197,-4.166864,-1.720100,-8.376309,-4.037755,-6.611086,5.573454,5.740951,5.531272,-7.672346,1.203387,-9.121033,-8.889290,5.905275,3.313941,-5.172454,-2.762571,5.719308,-1.938932,3.382807,9.054567,-4.869128,-6.004505,-4.309088,5.768849,3.178495,-5.510136,9.206964,1.554030,-1.902210,-0.208273,-5.677426,3.239950],[1.774256,8.127231,2.108761,-8.843596,-4.158816,5.407608,-3.725173,6.342168,1.556610,9.580246,-4.236577,4.255699,-6.020794,2.640532,3.604130,-9.286414,-0.764963,5.131669,-9.548282,3.529500,-4.299682,-3.649240,-8.762756,-2.468999,6.088113,-1.361659,1.547711,-1.131920,2.083236,-4.466118,-9.332448,-4.213263,-2.906318,-5.732867,1.771601],[1.286856,-2.363763,0.851373,-8.575313,-6.775396,8.064221,5.853957,2.836685,-3.627521,-0.962386,9.711999,7.804696,8.123410,9.771798,2.652233,-1.141242,0.067883,-0.799105,5.465699,-0.334582,-7.581900,-9.823566,-2.414578,3.537470,-7.233691,4.962100,-0.521255,4.931348,8.000897,-0.844365,-8.018486,0.660539,3.276852,-3.213064,-9.163951],[0.754167,-5.709872,0.982814,2.683128,-7.955370,-4.886453,1.823173,-8.529116,-7.775272,1.512981,-4.243002,1.206733,1.051071,3.739361,9.410545,6.366461,-7.705589,-2.399049,-2.744460,-9.001454,-0.867235,1.574794,-4.675735,-8.017044,9.381055,0.859757,5.376831,2.198700,6.570849,-9.670960,9.218987,9.807333,-1.769650,7.008265,1.477673],[9.087937,-1.700436,9.723313,-9.567257,9.760951,-6.503564,-7.189562,-0.361173,-1.945411,-8.317959,-9.625322,-6.026055,-8.810724,-6.906214,-5.653344,8.861103,8.005808,-2.213303,-7.055422,-9.778282,-2.358890,-5.759017,2.682970,-6.732016,3.324371,-5.302039,-8.077032,6.123810,0.043886,-4.859413,-7.242696,9.037670,8.753836,-6.949924,0.486155],[-2.335671,2.640753,-6.091580,3.003074,0.634707,6.478179,-2.894968,-0.114398,-9.666924,6.962403,0.211468,2.475838,2.898644,-5.169935,-1.859503,8.760890,0.415246,-5.261500,7.357294,3.012848,-2.303445,-1.803845,-7.320305,-6.024800,3.683758,-9.751230,8.333760,7.607451,-5.039071,2.476226,2.305168,1.698363,4.925275,-3.760198,8.542944],[7.438476,2.945118,1.010409,8.760771,-8.510369,1.297481,4.808681,-3.175651,-3.930740,1.884817,-1.943121,-6.055742,1.472588,8.901945,-5.249135,0.619498,-2.511539,2.124789,0.047171,8.339880,1.898338,-3.033181,-1.700004,-2.096683,7.354503,-9.112196,-4.763240,-2.996923,-3.483030,-4.207499,-0.005054,1.848673,-2.799069,-8.444502,1.062613],[2.025715,8.943950,8.277731,6.257692,-1.688824,3.281211,-1.833726,9.426205,-8.496994,-3.505531,-8.573490,-3.439383,9.779946,-8.570929,-7.494450,7.783291,2.572425,5.438176,-2.718048,-6.197874,-8.772819,8.090479,1.198307,8.051644,4.212622,-6.680715,-6.023872,9.168102,0.886869,-4.643111,2.774828,-8.950992,-0.605628,1.089031,-5.396427],[4.197304,-2.319834,3.554400,4.808066,6.229035,-7.581689,-7.165308,-7.032004,-1.747947,5.307413,-5.985634,-4.661785,1.015499,-8.436547,-4.934271,-7.975206,0.441188,-6.879053,3.437678,2.963406,-2.511183,-7.027680,3.144287,-8.560855,7.867675,-8.888770,-8.068112,-2.905576,5.981937,8.389124,4.845196,0.482301,-6.302939,3.948127,2.182538]], dtype = "float32")#candidate|332|(13, 35)|const|float32
call_331 = relay.TupleGetItem(func_285_call(relay.reshape(const_332.astype('float32'), [7, 5, 13])), 0)
call_333 = relay.TupleGetItem(func_288_call(relay.reshape(const_332.astype('float32'), [7, 5, 13])), 0)
func_312_call = mod.get_global_var('func_312')
func_315_call = mutated_mod.get_global_var('func_315')
const_335 = relay.const([-6.029534,-1.622289,-1.188115,6.106557,-2.461574,7.001167,-2.925959,-7.266746,5.985677,-3.752441,3.771977,-4.064282,-7.670556,2.883632,-2.097396,-2.297792,-6.671113,9.850410,7.941651,-2.889590,4.723350,5.870636,-0.581116,-8.605285,8.389595,-2.304191,0.069383,-9.096977,5.345375,-7.282004,-7.240242,-9.397655,1.520241,8.239467,-0.929427,-2.014420,-2.529656,-3.613406,-5.907470,-3.020539,8.867946,-3.579259,8.676669,-6.146971,-4.363800,-0.071040,2.844609,5.822835,9.629610,9.684137,-0.668822,1.257128,7.421279,5.841723,7.381146,5.704701,-9.550985,8.044293,-8.598028,-6.146371,-4.379264,9.454586,9.756837,4.490504,-1.024255,6.472485,-4.793869,6.086935,-5.827954,0.506007,-3.478677,-7.341654,-9.400963,-6.785118,-2.420535,7.852285,-2.600151,-1.811845,2.007830,-2.831158,8.922915,-8.493016,-4.320562,6.344364,-0.142728,-5.191516,-7.612376,8.488095,0.564716,6.752157,-6.850725,-3.961244,-3.962834,0.220515,-8.336966,4.690397,9.705285,-9.165744,2.611571,-0.521457,-8.790001,-6.315272,6.792540,-2.903880,1.229259,-1.781906,-1.074734,-1.484161,-9.966481,4.497391,3.404321,-5.986545,-7.511810,0.420695,-7.094044,-3.445119,-4.289640,1.796505,-1.672720,-9.807500,-3.852758,-0.739367,-1.557498,0.661343,-0.632964,1.344900,9.612415,-3.374757,-0.892948,3.987541,3.365927,-3.820377,-5.662987,6.842908,5.267903,-2.487867,5.809525,-3.165270,-8.793672,-7.953969,-5.843098,-2.401097,5.430818,-1.146169,-7.376886,-1.854811,5.064530,-5.862986,2.524533,-1.944132,8.954476,-8.116051,0.353816,-7.089552,-2.761017,-4.273740,6.612028,-4.980643,7.486106,-2.885409,-5.591369,5.726819,7.454462,3.158629,-2.285250,6.748494,-5.123872,-7.866092,4.836304,2.187596,6.624412,-3.867873,4.511147,8.412326,7.791144,-4.165964,-8.545023,9.108230,8.101441,-8.010127,2.170788,-4.002910,3.355410,5.049244,6.271498,-1.721354,8.522510,7.109146,0.647755,5.436021,8.755445,-1.624906,-9.137827,6.636642,-5.924525,7.269639,-0.154938,-2.674514,-5.879912,-0.492765,-3.238759,-7.489825,1.792096,-1.802856,-6.667540,-0.203688,-0.008152,3.931919,-3.699518,-7.595453], dtype = "float64")#candidate|335|(210,)|const|float64
call_334 = relay.TupleGetItem(func_312_call(relay.reshape(const_335.astype('float64'), [7, 15, 2])), 0)
call_336 = relay.TupleGetItem(func_315_call(relay.reshape(const_335.astype('float64'), [7, 15, 2])), 0)
uop_339 = relay.erf(uop_323.astype('float32')) # shape=(14, 4, 3)
uop_341 = relay.erf(uop_325.astype('float32')) # shape=(14, 4, 3)
bop_347 = relay.right_shift(call_331.astype('int8'), relay.reshape(const_332.astype('int8'), relay.shape_of(call_331))) # shape=(7, 5, 13)
bop_350 = relay.right_shift(call_333.astype('int8'), relay.reshape(const_332.astype('int8'), relay.shape_of(call_333))) # shape=(7, 5, 13)
func_156_call = mod.get_global_var('func_156')
func_158_call = mutated_mod.get_global_var('func_158')
const_352 = relay.const([True,True,True,True,False,False,True,False,True,False,False,False,True,False,True,True,True,True,False,True,True,True,True,False,False,True,True,False,False,True,True,True], dtype = "bool")#candidate|352|(32,)|const|bool
call_351 = relay.TupleGetItem(func_156_call(relay.reshape(const_352.astype('bool'), [32,])), 2)
call_353 = relay.TupleGetItem(func_158_call(relay.reshape(const_352.astype('bool'), [32,])), 2)
output = relay.Tuple([call_334,const_335,uop_339,bop_347,call_351,const_352,])
output2 = relay.Tuple([call_336,const_335,uop_341,bop_350,call_353,const_352,])
func_355 = relay.Function([], output)
mod['func_355'] = func_355
mod = relay.transform.InferType()(mod)
output = func_355()
func_356 = relay.Function([], output)
mutated_mod['func_356'] = func_356
mutated_mod = relay.transform.InferType()(mutated_mod)
var_463 = relay.var("var_463", dtype = "float64", shape = (9, 11, 14))#candidate|463|(9, 11, 14)|var|float64
const_464 = relay.const([[[1.328527,4.038444,0.211074,-2.817171,9.570490,-8.208334,4.139673,0.583352,9.671379,-1.211344,7.787967,-0.613479,2.495229,6.212755],[-6.560886,6.214905,9.957884,8.006303,-6.078203,0.146122,-7.280382,-8.189641,-2.785724,-7.005322,-8.048620,-5.789631,-4.766225,-4.115917],[9.809627,7.263083,7.639456,1.097353,5.271300,7.334935,8.419127,-4.174601,2.118528,6.100040,-3.061037,6.874172,-3.995519,4.552653],[-5.871973,-4.709413,0.415243,7.412254,3.765471,4.101019,-4.320102,-3.855319,0.651079,4.357000,-2.997567,-3.531847,-9.691256,8.919337],[7.721886,9.225643,1.678848,-3.951553,3.358840,3.424837,-8.601703,7.311133,1.984549,-0.500860,-1.938221,5.540539,-9.798203,-1.008105],[-5.499116,8.954900,-8.862479,5.726613,4.150254,-9.083009,-8.717078,2.990299,-9.074969,1.201313,-7.488226,-3.290716,3.741544,9.183854],[2.667940,-9.370656,-8.581591,-3.768438,-8.840756,-8.596981,2.326450,-7.461538,-3.254246,-7.647760,-8.404243,-2.481692,-4.630927,-9.899678],[9.408490,8.131648,4.012399,-3.087007,-3.380583,-3.350378,-1.544115,-2.985682,1.147414,7.896123,-0.662936,-0.260401,3.027856,4.932885],[6.395553,3.982974,-9.106106,6.232873,-1.906096,0.762066,-7.273460,6.938190,-2.518101,-8.679509,-1.888234,8.210029,-2.854565,-7.366815],[-8.317473,1.239592,1.008179,-7.802302,9.187483,9.512133,3.857434,-9.115910,-4.913364,6.208807,8.116913,-0.174386,1.320789,-8.939099],[4.043228,-3.277482,6.856817,4.183427,-3.329463,-4.104806,9.874247,-8.237923,-5.700112,6.269835,-9.428186,8.931843,-9.687605,-0.025508]],[[1.407203,3.283879,2.319357,-8.299523,3.225843,4.212529,-0.857506,-2.738765,6.955193,-3.396974,7.846608,-2.925066,-2.621642,-6.572342],[7.248724,8.027341,1.760737,5.281031,-1.252608,1.199445,8.547721,7.686063,-9.980489,1.339919,-5.178693,9.949431,7.600772,-7.741269],[8.407379,3.979056,9.632612,4.048119,4.214547,9.028369,0.392873,-9.995938,6.390903,-6.926832,7.475292,6.185431,8.632733,7.968048],[-7.730606,8.866239,-2.404906,-1.707151,2.768730,3.406964,-1.915506,-3.281357,3.415587,-0.247291,-1.755950,5.286293,-4.221233,-9.795615],[1.096152,8.991090,1.688494,-7.830201,4.119625,8.558662,-6.152502,4.584842,9.064509,-4.130541,-4.848221,0.022005,2.196999,-9.626321],[6.626960,-5.989580,6.810444,-7.765455,-0.680040,-5.213141,1.389764,-1.301557,-9.441752,-1.108247,2.063766,3.178419,0.137043,-8.936101],[0.437767,-8.195138,0.953151,3.497215,-6.274938,7.628098,-5.133274,-7.581049,1.468485,-6.665494,3.200139,8.938239,3.162403,-9.294235],[2.332027,-9.712997,-0.303981,7.687044,2.927848,-0.685328,-1.943525,-3.610267,3.645602,-7.794778,6.828547,8.586586,6.328349,7.585192],[4.147878,9.758377,-1.262276,0.518319,5.511884,0.402697,8.486443,-6.441584,2.952351,9.402129,-8.544683,-8.439766,-0.617995,-6.537933],[-4.064291,-9.677416,0.636895,6.311758,9.257891,-3.716134,7.374894,1.005698,9.619986,9.384652,-2.001599,-0.518547,-2.357651,-9.646669],[-2.079103,4.231742,-6.555610,-2.898474,1.965585,-4.454981,-4.806813,8.803832,-2.709414,-4.614353,8.773540,-0.180344,-1.107019,-4.475825]],[[2.459486,5.375606,2.952811,0.423825,1.040914,6.493419,5.671810,2.849822,5.340498,7.714912,-1.948227,3.374639,0.938528,6.090004],[-9.210067,0.806776,6.331883,9.390416,2.523723,-4.560183,-1.099935,8.487608,1.249258,9.728249,-8.133136,-0.017494,2.254679,-9.741706],[-2.457373,-3.549939,1.311647,-2.112195,3.755113,3.582460,-1.671641,4.954736,9.113918,-0.469890,0.038442,2.062150,8.641255,-3.432526],[-5.080972,3.991819,3.190048,3.207553,3.888132,8.661995,-6.006777,8.942959,-4.025740,7.395740,-3.640920,7.850773,-3.669580,3.905418],[-1.948562,-9.716023,-6.535933,7.317328,3.505045,-0.073095,2.464414,2.188872,-2.320057,-0.841311,3.090554,-6.455618,-4.242660,-4.158552],[1.458341,-1.733832,7.512091,-4.395878,-0.422323,5.643307,-5.081477,6.210444,0.391637,0.805337,4.077082,0.995177,-6.147944,-0.747247],[5.049916,9.547612,-2.656327,-3.431803,-3.869168,8.606280,8.766717,-7.827464,-8.606767,9.135075,3.564170,4.352037,-4.459137,9.799286],[1.359815,9.952281,-3.234928,8.108376,-9.940753,9.168923,-6.943600,-6.861005,4.487440,6.180695,-5.225721,-0.995226,-6.244409,-8.820200],[-3.965179,1.494576,-8.447907,-3.440325,1.055098,8.739933,3.824346,-2.783091,-6.783624,9.834988,3.606888,0.654756,9.503170,0.457521],[-7.124112,4.365403,-6.873290,-8.768984,1.127839,8.131941,-4.038488,0.720856,9.639540,0.892370,-5.721788,-0.138035,2.946573,3.384282],[2.448565,-8.995323,-7.895302,-0.761922,-4.907730,8.437706,2.875484,-6.688036,-0.286547,5.768925,8.935739,1.130286,-4.451522,-5.034750]],[[7.312295,-0.017607,-4.664685,-6.555793,-7.443240,2.604211,7.708065,8.881416,-2.117321,-8.442575,1.573389,-3.694338,-7.741420,-0.986447],[1.057527,7.471234,-5.001466,3.166408,-7.912776,8.029143,-3.834507,-3.238608,-3.806249,-0.128406,8.296684,1.717090,3.777155,-1.737769],[4.674784,-8.480270,3.570642,6.251157,2.422580,-0.202868,8.706112,7.378930,8.100700,6.776151,0.416249,-4.261977,6.923194,8.200205],[6.020582,-7.154531,-2.771033,-4.966688,-9.211234,3.779952,-3.494615,-5.335291,8.886845,-4.587853,1.434140,-0.436013,5.783017,8.895105],[-4.361789,7.408621,-1.636311,-4.645325,-1.106260,-5.103613,6.723579,9.878139,-5.313704,2.447232,0.618931,-7.650844,5.755709,2.831192],[4.965640,9.293400,1.731479,3.461005,5.998043,-4.032256,-9.606096,-3.691402,-6.709299,-5.029997,2.570893,-6.249935,7.289574,0.440960],[-8.439483,6.876845,-8.474297,7.063900,-5.438500,0.466597,7.054398,0.424960,4.025324,2.421150,8.246216,-0.522702,5.835919,7.061484],[2.564743,9.603305,9.449632,8.572922,-9.114458,3.436569,5.052078,-1.089957,-7.559232,8.572928,3.136417,1.204297,-4.203988,-5.890031],[3.065038,-9.035735,-7.393418,-2.554760,-3.483429,1.529786,-1.541393,1.645638,-6.827023,-3.585231,-8.714550,-3.417751,-3.909099,-9.489958],[4.211373,-9.919732,5.889151,5.559538,4.304285,9.464737,6.759692,-6.441788,-6.322249,2.196498,0.767553,3.067032,1.103480,2.353365],[-1.543551,-9.866265,-4.188240,-3.097425,7.768806,-9.811260,9.267874,3.164128,-2.930914,-3.242043,0.060225,8.595494,-8.599827,-4.526818]],[[-9.362722,5.148515,-1.949599,-7.347945,2.364755,-2.220704,-5.608066,1.455157,-1.597633,-4.092664,-2.417833,3.006897,6.497645,-5.502774],[-7.715522,9.594511,-3.451732,1.577893,6.706573,-8.384569,-2.020175,1.487694,4.798372,-3.479993,1.984878,-1.157156,8.347834,-6.889605],[2.714231,-0.451407,1.319543,-0.312512,0.098815,-1.875024,-6.267304,3.785823,6.435043,9.646959,4.369398,1.154565,8.094991,-2.738857],[3.885949,5.197367,8.620180,-6.398144,2.645586,-3.688317,-4.927177,5.665907,8.207925,2.017672,-4.663483,3.323718,-4.287412,-4.675429],[9.330665,7.007821,0.624985,0.125726,-3.601380,-7.344991,-6.382209,-8.786491,3.012560,1.226445,-2.333903,-8.659888,-4.205081,-8.508959],[-4.486088,-6.444602,1.360222,-7.810534,-3.867886,9.182673,-3.349694,-4.601094,6.430850,6.087588,0.860310,0.488214,-0.077222,-4.121815],[-5.041408,9.638311,1.310053,-7.450587,8.257573,-3.146709,-7.008917,9.842010,8.498422,7.779929,-5.684647,3.903812,-0.010933,-0.947270],[-0.300134,9.945293,8.785428,1.611410,-7.588284,-7.785114,7.374593,0.428551,-5.955563,-2.942713,-0.271603,-2.619113,-9.718083,-0.980905],[7.637975,7.706551,8.004921,-7.211368,-3.527966,-9.445239,2.016016,-7.125629,7.889862,-4.498393,-7.653988,9.195312,-8.798275,-9.294549],[0.620134,1.295051,5.046104,1.723214,0.506523,6.283477,7.744124,-7.642595,-5.134911,2.804171,-9.629867,-5.731806,-3.881778,-8.401330],[7.171957,-8.953170,9.816006,9.748590,-2.819432,-2.395163,-8.978985,5.191232,7.012883,-2.292482,9.976375,0.266223,6.675815,-1.063698]],[[7.459019,5.235356,6.209611,4.713290,8.164629,4.246694,9.375102,-4.701566,-3.756651,-9.580118,2.461725,8.895943,-0.153807,3.046938],[-1.543471,-3.561060,-9.123297,1.777305,4.620867,-6.676395,5.744400,-2.093571,8.634946,1.048300,4.110814,8.071731,-5.422530,6.119477],[6.725637,0.296880,-6.450305,5.546311,3.679459,7.788286,-0.536824,2.475348,9.717031,-5.109105,-4.698190,-5.310812,7.791293,1.050558],[7.292482,5.767589,0.268900,-3.138620,-3.131455,-4.415161,-3.540813,-9.288057,8.308291,0.399862,4.245732,-8.150249,8.736118,9.949152],[-0.953479,-9.210556,6.626932,9.459081,-6.308227,5.595215,9.733260,-3.687360,7.176649,-3.920276,8.499162,6.311869,-4.391393,-2.119686],[9.351418,-5.470117,-8.705130,5.177110,-8.773259,-1.438468,-2.681050,8.324702,3.879115,-0.032728,-7.661013,-2.437755,-4.974556,5.701909],[1.918924,-2.030256,6.354402,-3.820637,8.455452,-0.094710,-6.781617,5.451035,-3.690080,9.142049,-1.378807,-5.019291,-1.023375,-5.631286],[-3.842571,6.422787,-0.373342,-6.200357,5.434913,8.574935,-3.302929,-3.789447,4.330965,-6.102191,3.339718,1.689584,8.713072,-4.288287],[-4.966568,-0.966576,-1.645534,-4.310076,2.266858,5.703411,-7.721626,1.610767,-2.668491,4.304933,7.308070,8.976145,8.988841,9.952096],[-9.972405,6.231008,-0.186139,0.616135,5.432028,8.160662,3.982624,0.193320,-5.360676,-6.496108,4.873491,-0.893206,8.275096,1.642332],[-7.898773,6.928371,-8.081270,-6.292916,-3.978417,-4.782334,4.702150,-9.274185,-4.808833,-9.256587,1.544398,1.562733,4.863663,2.047380]],[[9.434877,7.563057,7.816297,-3.189647,4.799861,4.035200,-6.369175,-8.947131,3.664254,-0.041540,-5.232244,-0.975068,-0.502715,-5.596272],[4.260951,-2.317169,-8.701833,5.771235,2.459530,-1.096652,-8.171822,-8.108403,0.460489,-7.767207,-7.705612,-4.326139,-6.352551,-6.466444],[-3.643103,-6.975325,-8.706616,-8.565319,-4.697803,4.382856,1.074604,0.688118,3.557325,-6.809261,-3.541567,1.237891,-4.608945,1.949356],[9.005092,4.818140,8.215208,4.638242,-6.664372,-9.742434,7.592785,-0.697366,4.632315,-8.197440,-5.063576,6.630000,-9.662638,0.750007],[-0.764295,2.724467,-5.791987,1.227518,-5.776417,8.755814,-2.989821,8.354448,1.496118,-3.531773,8.249533,5.038859,-0.262388,-7.311757],[-8.972344,8.447353,9.171698,-0.666305,9.583547,0.364213,-3.182384,-7.940954,-5.782923,9.751309,-8.869987,1.050832,-0.082063,5.938097],[1.454251,0.066501,1.765747,4.655374,1.751089,-1.394184,4.241132,-5.726084,-7.512489,0.448885,9.202337,6.662585,-2.024836,6.977124],[4.236405,5.600123,5.741933,-6.546180,9.188671,4.635933,5.960629,6.735063,1.566302,7.176924,6.838574,-4.510521,4.564268,-1.231100],[-2.653714,-8.020132,-5.431365,5.031015,2.157368,-0.077973,5.835379,3.523229,7.903047,7.657042,8.212931,-8.866829,4.126025,9.029069],[-7.767198,2.544020,6.709502,2.066570,9.555782,0.587478,-5.218091,-8.305801,6.044512,2.092846,-0.391216,2.806201,3.092217,-7.084897],[9.435813,1.889672,2.434673,-8.703485,-3.810743,-5.118715,-9.399447,-8.961924,7.905821,-6.281801,6.508458,0.804710,0.875355,5.040779]],[[3.129807,9.888004,8.225548,-3.134629,7.108968,0.650653,-8.912986,-6.711299,-6.516790,-3.051220,1.672186,-8.931435,-2.985043,-6.959014],[5.534114,-9.544142,-8.109516,6.886839,-9.830170,-8.631539,-7.223292,4.598893,-5.534128,-0.450106,3.273144,-3.232380,5.808213,8.089172],[9.984517,6.957055,3.639448,7.112299,-2.506812,7.820633,-1.550964,-5.363788,8.686958,-4.174127,4.043254,-1.650513,9.147346,3.348347],[-0.529184,-7.372672,1.609381,-5.853678,3.261607,-7.316468,-8.722985,-9.491639,9.350719,1.843252,-2.232386,-8.084503,-9.162713,-2.218358],[-7.016815,6.726645,-2.656596,-4.176126,2.397986,-9.806141,-1.780351,-9.257791,-6.661239,7.033429,-6.666755,6.497856,-9.370713,-4.081331],[-3.236715,-7.364948,2.145882,2.928299,0.134246,0.792789,-7.833601,7.603470,-5.264995,6.239928,-0.573351,-9.533461,-8.616495,-6.886403],[-2.400128,5.525934,6.776947,6.469568,7.979282,4.213288,-3.877299,-6.637031,-0.930276,8.751884,6.446043,-6.783459,8.389230,-7.619961],[-9.857688,4.608075,-5.627225,3.298710,-5.213246,-8.340916,-6.338148,9.092627,-8.259932,1.576337,3.356003,4.349330,-0.304197,6.469857],[-5.716803,9.571674,-1.926795,3.798608,0.724426,-3.223975,1.739502,-7.748122,-9.176844,-5.549230,4.183701,-7.737857,-9.651470,3.589454],[2.785777,5.040263,6.800938,-4.814249,3.519992,-9.146070,-6.003274,-4.470943,1.143622,5.526774,-4.754062,-6.920612,-1.866802,1.210603],[-3.841137,6.208747,9.723245,3.007544,8.081001,-9.376117,-6.400041,8.401809,5.526527,-5.124925,-6.667014,2.138177,-2.676543,-8.053066]],[[-5.918961,9.581984,7.547575,-6.305634,0.828983,2.765366,4.668037,1.307632,-6.484106,-1.909290,8.656650,-1.264285,5.959106,-2.758385],[5.857293,-5.465391,-6.801283,-8.124509,-9.896321,-3.665450,-4.336905,-8.021423,2.560038,5.861022,-1.937703,-7.577490,6.564605,-3.868688],[-6.392691,-0.059991,2.529290,8.048062,-1.878731,3.592275,-9.885529,3.929962,9.472388,-5.935089,7.823357,-8.071286,9.225143,6.268408],[0.847180,3.314558,7.434040,8.818623,-3.019850,-5.103869,-8.879432,0.375560,-9.498177,-3.408075,-6.660229,-5.122730,-7.317849,-3.719981],[0.033726,-2.043095,6.965228,-1.753187,6.615564,6.344285,-8.045199,5.649115,-1.361306,1.598491,3.351734,-6.907403,-7.262102,6.443150],[-6.286958,6.700471,-5.633051,-6.266155,1.965301,-6.123475,5.259890,7.641805,4.707536,-6.134267,9.850666,-9.770829,3.513095,1.106319],[-6.592538,7.703862,-6.424764,-9.858963,-7.543177,-3.247169,-7.840116,3.361550,-9.920337,8.859384,4.993708,4.330889,-5.775690,7.306813],[9.913227,5.721862,2.392492,-2.538064,5.121419,-5.939054,0.758074,-0.767294,3.640879,6.907929,-9.067085,-7.643269,2.358824,-4.078909],[1.087768,1.168700,-8.925305,-4.978855,8.336027,9.036964,-9.486271,2.455888,-2.690089,8.205566,0.935584,-5.609540,1.216843,8.099573],[-9.204725,-3.397194,1.317473,-5.567592,1.114251,7.632685,7.810175,5.990250,0.572869,-5.557609,-0.886396,0.533001,-3.533261,0.589829],[-0.659164,-2.993285,0.040337,8.274063,3.420281,-2.461041,-6.052205,3.282375,5.613090,7.262604,2.738529,-4.319988,2.656518,5.723299]]], dtype = "float64")#candidate|464|(9, 11, 14)|const|float64
bop_465 = relay.not_equal(var_463.astype('bool'), relay.reshape(const_464.astype('bool'), relay.shape_of(var_463))) # shape=(9, 11, 14)
uop_472 = relay.sinh(const_464.astype('float64')) # shape=(9, 11, 14)
output = relay.Tuple([bop_465,uop_472,])
output2 = relay.Tuple([bop_465,uop_472,])
func_487 = relay.Function([var_463,], output)
mod['func_487'] = func_487
mod = relay.transform.InferType()(mod)
var_488 = relay.var("var_488", dtype = "float64", shape = (9, 11, 14))#candidate|488|(9, 11, 14)|var|float64
output = func_487(var_488)
func_489 = relay.Function([var_488], output)
mutated_mod['func_489'] = func_489
mutated_mod = relay.transform.InferType()(mutated_mod)
func_234_call = mod.get_global_var('func_234')
func_235_call = mutated_mod.get_global_var('func_235')
call_491 = relay.TupleGetItem(func_234_call(), 0)
call_492 = relay.TupleGetItem(func_235_call(), 0)
const_498 = relay.const([[[True,False,True],[False,True,False],[False,True,True],[True,False,False]],[[False,False,True],[False,False,False],[True,True,True],[True,True,True]],[[False,False,True],[False,False,False],[False,True,False],[False,True,True]],[[False,True,True],[False,True,True],[False,True,True],[True,True,True]],[[True,False,False],[False,True,True],[False,True,True],[True,False,False]],[[True,False,True],[True,False,True],[False,True,False],[True,True,True]],[[False,True,False],[True,True,False],[False,False,False],[False,True,False]],[[False,True,True],[True,False,True],[True,True,False],[True,False,False]],[[False,False,True],[False,False,False],[False,False,False],[False,False,True]],[[False,False,True],[True,True,False],[True,True,True],[False,False,True]],[[False,False,False],[False,True,False],[False,True,True],[False,True,True]],[[False,True,True],[False,False,True],[True,False,False],[True,True,True]],[[True,False,False],[True,True,False],[False,True,False],[True,True,True]],[[True,True,False],[False,True,False],[True,False,True],[True,False,True]]], dtype = "bool")#candidate|498|(14, 4, 3)|const|bool
bop_499 = relay.logical_or(call_491.astype('bool'), relay.reshape(const_498.astype('bool'), relay.shape_of(call_491))) # shape=(14, 4, 3)
bop_502 = relay.logical_or(call_492.astype('bool'), relay.reshape(const_498.astype('bool'), relay.shape_of(call_492))) # shape=(14, 4, 3)
func_285_call = mod.get_global_var('func_285')
func_288_call = mutated_mod.get_global_var('func_288')
const_512 = relay.const([-4.385747,7.776121,5.999033,-3.614036,-1.495075,6.683696,-5.282696,-4.756818,6.609660,6.111634,3.811218,0.066559,3.917294,1.112910,4.306316,6.584072,-3.120695,9.995935,2.895415,5.388944,1.887696,-1.528860,5.574496,-6.811637,-0.763907,1.043243,-2.537241,-5.136708,-0.189026,-0.400385,9.745850,8.224327,1.355652,7.696235,2.170134,-9.734278,-2.196228,-3.853647,1.299289,-5.064472,-3.253493,4.621806,-9.828377,2.034503,7.731302,-0.707060,0.573443,-5.768757,3.419009,5.960708,-4.704894,4.645718,-2.307325,-1.068999,-0.419501,0.044368,-0.812248,-0.172204,1.644957,7.045636,6.419222,0.801279,-9.377433,4.970936,-8.571973,-6.472739,-1.853726,8.393827,2.288703,-2.984722,-4.250639,5.333136,4.991507,2.068001,3.768904,6.152763,-6.332973,7.442207,5.938627,-2.250816,9.912124,-8.890177,-1.636693,-2.207738,-2.326616,-7.312500,9.469386,1.833170,9.469216,5.409485,-0.407973,4.375201,7.710173,3.529004,-6.348205,-7.490293,-7.748914,3.777448,-6.908055,-8.377209,9.352884,8.829652,-4.732100,9.797613,1.298865,-5.527532,5.045967,3.735617,-1.362730,4.890084,-2.361494,-8.456652,2.841432,-2.815977,-6.829817,-8.736715,0.509585,-5.739478,-0.450971,6.712080,-5.127341,0.804232,7.872783,-9.015236,5.982678,-9.254570,-1.579730,-4.190930,7.038916,8.829645,-6.084240,3.544481,-7.464197,6.824533,9.215726,-6.459595,5.173477,0.321721,-8.095564,-7.817507,-0.151364,-2.383990,-6.415337,-7.323986,0.171158,4.991898,7.683443,8.580415,-6.503688,-8.549907,2.659604,2.240606,4.788913,9.686482,-4.000094,5.820326,2.649851,7.735998,3.660541,5.551722,-6.703354,-3.455833,1.248217,1.167266,-9.051650,6.228973,-0.745095,-5.174979,2.544239,-9.752366,-9.757341,-4.319254,9.995777,4.392319,8.345257,9.261095,6.771910,4.988890,0.881919,-9.613621,2.842912,1.222363,-5.693643,1.037861,0.182514,8.490468,1.003942,8.549013,-3.764425,1.345520,6.047744,8.585877,-4.850595,5.812881,2.488435,-9.210151,7.480000,-7.170515,0.030713,-3.655842,8.293547,-5.471337,3.728953,5.642004,-7.263057,-2.403865,5.641363,-5.066088,-2.479017,9.962084,2.008370,-9.128282,3.203894,-7.286049,-7.751450,-9.063067,7.043951,3.295072,-7.094204,-3.508084,6.518838,4.762797,-5.432345,1.220574,4.116986,-8.791300,-6.875946,-6.068592,7.041249,-0.407709,7.260656,-6.054036,-7.122743,4.618619,-1.785470,0.256155,-1.164342,3.352399,0.267370,-5.474785,4.700049,4.222806,6.815542,-5.235638,1.615016,0.879478,5.263861,1.964130,7.637613,-5.641097,-9.175294,7.685516,-0.031341,9.458241,4.968977,9.920543,-2.928975,-7.858745,-5.638540,-0.356043,-1.043402,-9.274080,1.807423,3.167901,-3.269076,8.627417,6.837392,-7.281099,3.718786,7.293377,7.090922,3.519566,-5.027142,4.532027,-1.367284,-7.210208,1.291977,-4.904025,-5.327719,3.659428,-5.696771,9.128897,-2.083482,8.441324,9.066302,-4.871176,3.255342,-2.209072,-1.721524,-1.476879,0.008545,6.653537,9.741297,-1.542521,2.518186,4.651158,-0.163049,3.643194,-1.134111,-4.048665,-6.350857,-7.969686,-1.476725,8.961135,-6.486962,-6.253294,-9.567035,4.908337,4.354039,5.476283,9.154488,-0.254445,6.723102,-8.235523,8.956842,8.970116,-0.247828,9.569305,-2.652786,9.932852,6.127336,-0.153819,1.682944,6.483073,4.047928,9.578537,5.587239,-6.928037,0.661963,-2.084987,9.973852,-3.476939,3.540406,1.707115,-4.800320,7.856910,-3.297903,6.179421,6.854417,-2.102075,5.450871,2.719223,-9.466414,7.853488,2.448227,-0.260592,3.066605,-9.877686,-6.383224,-0.070397,-7.715066,-7.537916,-7.777882,-4.697470,6.688141,-8.792212,-8.349944,3.359759,-8.103504,-9.219761,3.024102,-9.163325,-0.652811,4.946478,-3.201141,7.633450,5.828271,3.786705,-0.620573,5.572349,7.514812,-4.076513,-4.170971,-9.472392,1.024271,-3.200467,7.186785,3.290232,9.122803,-1.043270,5.053787,-3.104787,-1.468570,-7.061033,8.695717,-6.883148,7.344855,-6.463952,-0.012510,-0.522022,4.479341,-8.260339,-3.852825,-5.886470,5.648958,9.358177,3.150606,0.399143,-9.944457,-5.281033,-4.112500,-4.144407,2.678703,4.939797,9.022222,4.938538,-6.582037,1.699639,-5.339778,-7.546334,-6.887133,-2.976669,9.401794,4.998684,8.473716,3.553003,-0.182822,9.300058,-9.857799,-3.233767,4.739195,-7.147566,2.486519,-3.214298,-7.050922,1.917654,-1.287040,-4.080054,-7.216510,4.693832,7.508595,7.180673,-0.477117,9.130222,3.880137,-6.383555,-3.274962,-6.833387,-1.890163,9.369893,0.499684,-2.869810,-7.486840,7.530430,-7.476899,-1.911565,6.378262,-8.505008,-5.717048,-7.779568,4.675954,-8.136380,1.698853,1.522145,3.311405], dtype = "float32")#candidate|512|(455,)|const|float32
call_511 = relay.TupleGetItem(func_285_call(relay.reshape(const_512.astype('float32'), [7, 5, 13])), 3)
call_513 = relay.TupleGetItem(func_288_call(relay.reshape(const_512.astype('float32'), [7, 5, 13])), 3)
output = relay.Tuple([bop_499,call_511,const_512,])
output2 = relay.Tuple([bop_502,call_513,const_512,])
func_522 = relay.Function([], output)
mod['func_522'] = func_522
mod = relay.transform.InferType()(mod)
mutated_mod['func_522'] = func_522
mutated_mod = relay.transform.InferType()(mutated_mod)
func_522_call = mutated_mod.get_global_var('func_522')
call_523 = func_522_call()
output = call_523
func_524 = relay.Function([], output)
mutated_mod['func_524'] = func_524
mutated_mod = relay.transform.InferType()(mutated_mod)
func_120_call = mod.get_global_var('func_120')
func_122_call = mutated_mod.get_global_var('func_122')
call_604 = func_120_call()
call_605 = func_120_call()
output = call_604
output2 = call_605
func_617 = relay.Function([], output)
mod['func_617'] = func_617
mod = relay.transform.InferType()(mod)
output = func_617()
func_618 = relay.Function([], output)
mutated_mod['func_618'] = func_618
mutated_mod = relay.transform.InferType()(mutated_mod)
func_234_call = mod.get_global_var('func_234')
func_235_call = mutated_mod.get_global_var('func_235')
call_619 = relay.TupleGetItem(func_234_call(), 0)
call_620 = relay.TupleGetItem(func_235_call(), 0)
var_621 = relay.var("var_621", dtype = "bool", shape = (14, 4, 3))#candidate|621|(14, 4, 3)|var|bool
bop_622 = relay.divide(call_619.astype('float64'), relay.reshape(var_621.astype('float64'), relay.shape_of(call_619))) # shape=(14, 4, 3)
bop_625 = relay.divide(call_620.astype('float64'), relay.reshape(var_621.astype('float64'), relay.shape_of(call_620))) # shape=(14, 4, 3)
output = relay.Tuple([bop_622,])
output2 = relay.Tuple([bop_625,])
func_626 = relay.Function([var_621,], output)
mod['func_626'] = func_626
mod = relay.transform.InferType()(mod)
var_627 = relay.var("var_627", dtype = "bool", shape = (14, 4, 3))#candidate|627|(14, 4, 3)|var|bool
output = func_626(var_627)
func_628 = relay.Function([var_627], output)
mutated_mod['func_628'] = func_628
mutated_mod = relay.transform.InferType()(mutated_mod)
func_120_call = mod.get_global_var('func_120')
func_122_call = mutated_mod.get_global_var('func_122')
call_711 = func_120_call()
call_712 = func_120_call()
func_285_call = mod.get_global_var('func_285')
func_288_call = mutated_mod.get_global_var('func_288')
const_733 = relay.const([[-5.481009],[5.905012],[9.966090],[0.990955],[3.064117],[-0.531646],[2.316683],[-8.639081],[4.928321],[1.603920],[4.331804],[4.971448],[-4.822196],[0.363640],[-3.602953],[1.125289],[-3.571637],[-4.959471],[-5.267571],[-7.635151],[0.804960],[-2.658619],[1.452784],[5.025464],[9.549878],[2.312389],[-4.218315],[-9.686832],[4.585603],[4.672058],[5.822348],[2.147397],[4.766002],[9.872469],[5.979639],[-2.513956],[-8.560773],[3.993741],[7.381619],[-5.765932],[0.271745],[5.469426],[-9.238695],[-7.177203],[7.334759],[6.010626],[-3.274174],[3.135038],[-9.451702],[-0.552346],[-3.403520],[-1.854329],[8.212240],[-8.940498],[2.503618],[3.228202],[4.573384],[-0.166563],[-8.641050],[3.821969],[-9.821210],[-5.150256],[9.988786],[-2.627918],[-1.156334],[3.614692],[4.319572],[-1.515871],[1.878400],[4.042435],[9.813779],[6.174912],[-4.440131],[4.839652],[3.602985],[-1.797754],[8.587026],[-5.455407],[-6.231536],[0.323026],[1.897217],[-7.812278],[-1.265825],[5.456315],[1.586492],[-4.707521],[7.307759],[9.279212],[8.685380],[-9.678112],[-8.408005],[-7.323273],[2.644996],[-3.642745],[-1.903179],[8.632028],[7.647949],[-6.910480],[-5.009084],[3.713128],[9.281675],[-7.043997],[-3.325070],[-6.086449],[-1.101028],[-1.208025],[6.335258],[4.371325],[2.526677],[7.271554],[4.908885],[-2.846367],[-5.126328],[-0.964578],[-9.475155],[-6.585669],[-8.107776],[1.831672],[1.928541],[-1.127519],[-0.265465],[-8.658519],[-1.790945],[2.754229],[2.863613],[5.378020],[3.978059],[1.956118],[-2.491400],[-7.018519],[-6.965757],[-5.377719],[9.527291],[0.011215],[3.013315],[7.910475],[-4.500894],[-0.278356],[8.141570],[-8.128510],[-5.499674],[5.588592],[4.238919],[4.122549],[-3.998750],[8.381763],[-0.099414],[8.509397],[0.298075],[-3.089038],[0.843223],[-5.447189],[0.104568],[-8.085064],[-5.374712],[-3.411486],[-9.907754],[-3.457952],[-0.878067],[5.152643],[0.361570],[5.455339],[0.852367],[-6.390760],[6.321852],[3.158586],[-8.429157],[-9.999052],[-6.996414],[-3.240363],[-6.921902],[1.002249],[-8.195737],[-5.971574],[3.668498],[5.016583],[-5.564528],[4.455279],[-9.480492],[-0.717271],[-8.826806],[-2.589113],[-6.038326],[7.611239],[0.364604],[0.269550],[-8.644144],[-5.954717],[6.303273],[2.871158],[-2.012961],[0.144738],[-7.399497],[-2.355577],[-5.782402],[-0.170588],[0.384779],[9.857278],[-7.178591],[-4.444262],[-9.703296],[6.160189],[6.911971],[9.214979],[-8.488102],[4.879648],[-3.941120],[-8.780236],[3.181986],[8.074433],[3.407460],[2.617954],[-6.851120],[-6.697097],[9.311581],[-3.562951],[6.016331],[-1.814101],[8.816631],[6.791215],[-6.108016],[-1.729147],[7.449820],[4.160836],[-4.067134],[1.620127],[9.826560],[-0.339883],[8.998706],[-3.373544],[8.238830],[8.584639],[-0.977306],[4.181404],[1.470862],[5.701837],[-2.531032],[-1.526837],[-3.284763],[-7.507107],[-5.882495],[7.644586],[-8.415728],[0.693074],[-2.326124],[-7.527783],[-7.478332],[-0.738732],[3.210865],[-8.547005],[-8.996938],[2.331804],[-3.832720],[9.454922],[0.477980],[7.556323],[5.752907],[8.307895],[-5.639013],[0.994893],[-8.959257],[-6.833832],[7.812005],[1.713526],[3.103244],[-0.733524],[-9.007507],[-7.020289],[8.990564],[4.976025],[0.457460],[5.639663],[8.445301],[4.854274],[8.823075],[2.022670],[-5.102601],[0.231428],[-2.929387],[8.464656],[-9.602032],[-5.274260],[1.659214],[5.008367],[-5.944918],[7.989074],[9.853396],[-3.217529],[-2.449818],[-0.038093],[-5.623776],[0.316356],[-5.972498],[0.375356],[-5.323015],[-5.672644],[-9.138258],[4.249545],[1.342624],[-9.981028],[1.703832],[8.731953],[-7.474291],[-8.537064],[0.316762],[2.585160],[-1.832609],[0.438890],[0.783282],[7.978362],[9.150189],[-1.910879],[-2.995238],[4.796186],[7.169797],[6.364679],[9.918613],[5.823792],[-8.460776],[-5.907836],[8.926782],[-9.136893],[7.540929],[-6.641705],[-4.800296],[-6.405777],[4.673329],[9.478092],[-5.208874],[9.413442],[-3.600121],[-0.344542],[0.667231],[-4.182459],[5.673729],[-3.804667],[-8.717309],[-1.567949],[-5.025175],[-4.467408],[5.411397],[-9.682009],[3.063753],[-7.335689],[-7.834863],[7.230397],[0.652652],[-2.616253],[-8.089841],[-4.245157],[-7.693040],[-3.353988],[6.904400],[-0.175642],[6.617846],[-5.569050],[5.151608],[3.969220],[-7.876651],[-7.498158],[3.343215],[-1.381301],[5.209973],[5.748947],[1.681339],[-1.592443],[-5.332294],[-6.965649],[6.617798],[8.587836],[7.176958],[9.702862],[-8.162089],[7.938540],[1.915432],[0.322477],[-1.517994],[4.339529],[0.440324],[4.592544],[-6.798743],[-8.004677],[-6.344196],[5.370183],[7.457964],[-7.278300],[-7.539603],[5.335222],[-6.714865],[-2.006598],[-5.315160],[-7.174076],[2.238000],[-8.731128],[-8.956123],[9.480212],[7.843956],[-3.491587],[-8.865254],[-5.025446],[-4.847542],[-1.449968],[-3.999468],[-4.404624],[-8.854806],[-7.800804],[-3.419015],[8.853255],[-6.335174],[-3.996382],[9.267822],[-1.214062],[2.785313],[-5.067025],[-6.840311],[0.399426],[5.364927],[0.718200],[6.908449],[-7.597576],[-4.670178],[-8.361081],[8.419751],[-3.902151],[-6.556088],[2.153022],[-4.320924],[-2.757128],[-6.216649],[5.601509],[4.546291],[3.019883],[-8.175152],[6.975493],[-2.393921],[-0.795511],[-5.257944],[-3.694458],[-5.312797],[-0.891027],[7.011000],[5.918019],[7.206384],[-6.869934],[-9.670565],[-5.163928],[-4.847541],[4.922513],[-5.253566],[0.481086],[-0.250903],[-9.037963],[-2.049969],[2.218458],[2.843274]], dtype = "float32")#candidate|733|(455, 1)|const|float32
call_732 = relay.TupleGetItem(func_285_call(relay.reshape(const_733.astype('float32'), [7, 5, 13])), 3)
call_734 = relay.TupleGetItem(func_288_call(relay.reshape(const_733.astype('float32'), [7, 5, 13])), 3)
func_617_call = mod.get_global_var('func_617')
func_618_call = mutated_mod.get_global_var('func_618')
call_742 = func_617_call()
call_743 = func_617_call()
func_103_call = mod.get_global_var('func_103')
func_106_call = mutated_mod.get_global_var('func_106')
call_756 = relay.TupleGetItem(func_103_call(relay.reshape(call_732.astype('bool'), [4, 2, 4])), 0)
call_757 = relay.TupleGetItem(func_106_call(relay.reshape(call_732.astype('bool'), [4, 2, 4])), 0)
bop_786 = relay.multiply(call_711.astype('uint16'), relay.reshape(call_742.astype('uint16'), relay.shape_of(call_711))) # shape=(14, 4, 3)
bop_789 = relay.multiply(call_712.astype('uint16'), relay.reshape(call_743.astype('uint16'), relay.shape_of(call_712))) # shape=(14, 4, 3)
func_522_call = mod.get_global_var('func_522')
func_524_call = mutated_mod.get_global_var('func_524')
call_830 = relay.TupleGetItem(func_522_call(), 1)
call_831 = relay.TupleGetItem(func_524_call(), 1)
func_103_call = mod.get_global_var('func_103')
func_106_call = mutated_mod.get_global_var('func_106')
call_837 = relay.TupleGetItem(func_103_call(relay.reshape(call_756.astype('bool'), [4, 2, 4])), 0)
call_838 = relay.TupleGetItem(func_106_call(relay.reshape(call_756.astype('bool'), [4, 2, 4])), 0)
var_847 = relay.var("var_847", dtype = "float32", shape = (455, 4))#candidate|847|(455, 4)|var|float32
bop_848 = relay.mod(const_733.astype('float32'), var_847.astype('float32')) # shape=(455, 4)
func_103_call = mod.get_global_var('func_103')
func_106_call = mutated_mod.get_global_var('func_106')
call_856 = relay.TupleGetItem(func_103_call(relay.reshape(call_837.astype('bool'), [4, 2, 4])), 0)
call_857 = relay.TupleGetItem(func_106_call(relay.reshape(call_837.astype('bool'), [4, 2, 4])), 0)
bop_861 = relay.not_equal(call_732.astype('bool'), relay.reshape(call_830.astype('bool'), relay.shape_of(call_732))) # shape=(4, 2, 4)
bop_864 = relay.not_equal(call_734.astype('bool'), relay.reshape(call_831.astype('bool'), relay.shape_of(call_734))) # shape=(4, 2, 4)
output = relay.Tuple([call_756,bop_786,call_837,bop_848,call_856,bop_861,])
output2 = relay.Tuple([call_757,bop_789,call_838,bop_848,call_857,bop_864,])
func_870 = relay.Function([var_847,], output)
mod['func_870'] = func_870
mod = relay.transform.InferType()(mod)
mutated_mod['func_870'] = func_870
mutated_mod = relay.transform.InferType()(mutated_mod)
var_871 = relay.var("var_871", dtype = "float32", shape = (455, 4))#candidate|871|(455, 4)|var|float32
func_870_call = mutated_mod.get_global_var('func_870')
call_872 = func_870_call(var_871)
output = call_872
func_873 = relay.Function([var_871], output)
mutated_mod['func_873'] = func_873
mutated_mod = relay.transform.InferType()(mutated_mod)
func_617_call = mod.get_global_var('func_617')
func_618_call = mutated_mod.get_global_var('func_618')
call_944 = func_617_call()
call_945 = func_617_call()
func_234_call = mod.get_global_var('func_234')
func_235_call = mutated_mod.get_global_var('func_235')
call_948 = relay.TupleGetItem(func_234_call(), 0)
call_949 = relay.TupleGetItem(func_235_call(), 0)
func_312_call = mod.get_global_var('func_312')
func_315_call = mutated_mod.get_global_var('func_315')
var_952 = relay.var("var_952", dtype = "float64", shape = (5, 42))#candidate|952|(5, 42)|var|float64
call_951 = relay.TupleGetItem(func_312_call(relay.reshape(var_952.astype('float64'), [7, 15, 2])), 0)
call_953 = relay.TupleGetItem(func_315_call(relay.reshape(var_952.astype('float64'), [7, 15, 2])), 0)
uop_967 = relay.acos(call_951.astype('float64')) # shape=(7, 15, 2)
uop_969 = relay.acos(call_953.astype('float64')) # shape=(7, 15, 2)
uop_972 = relay.sqrt(uop_967.astype('float64')) # shape=(7, 15, 2)
uop_974 = relay.sqrt(uop_969.astype('float64')) # shape=(7, 15, 2)
func_156_call = mod.get_global_var('func_156')
func_158_call = mutated_mod.get_global_var('func_158')
var_977 = relay.var("var_977", dtype = "bool", shape = (32,))#candidate|977|(32,)|var|bool
call_976 = relay.TupleGetItem(func_156_call(relay.reshape(var_977.astype('bool'), [32,])), 3)
call_978 = relay.TupleGetItem(func_158_call(relay.reshape(var_977.astype('bool'), [32,])), 3)
const_985 = relay.const([[-6.959889,3.706212,-4.617155,-3.057738,-4.006591,-7.694254,7.651644,-0.618233,-7.810672,-6.291682,-5.602107,6.812253,-8.502491,9.165826,-9.786305,8.697038,3.808731,-4.067393,-5.517028,3.813499,2.197847,6.835716,-4.037070,2.797185,-1.897417,-2.582962,-3.562362,-2.494713,-3.980902,-6.846819,7.464108,4.294593,1.441210,-1.636331,-2.361591,-3.726148,-0.146397,2.359085,-7.079951,2.528557,-0.980992,5.083816],[4.575748,5.247902,8.941068,-3.929116,-4.951569,-6.354330,7.039695,0.590539,-9.991571,9.293644,4.694157,4.374621,0.334968,-3.079738,-9.867695,9.512214,4.404976,8.627677,-1.775393,3.673691,-0.662215,-7.667839,8.497269,2.872470,-3.310206,-5.981321,9.304151,5.361173,-6.045208,-9.521122,9.068944,-7.535519,9.227231,-7.151327,0.799364,-0.476969,6.373294,-5.696806,-9.894224,-0.517892,-0.099333,-9.978164],[-0.805963,2.124911,5.320075,9.732917,3.510621,0.436729,2.879324,-9.906870,-6.170496,-9.001701,-3.521610,-8.507439,4.202716,8.542201,0.287534,3.992187,2.024704,-2.077333,2.280645,1.856156,1.210477,2.713333,-8.814892,2.386737,-3.864416,-6.021539,-4.927493,4.826700,9.235802,-1.354261,-7.555314,-2.066805,-6.046070,-7.617982,-5.055767,-1.632760,-2.161704,1.358350,7.674199,6.114028,-3.338518,-4.367292],[-8.952419,-1.332486,-1.155542,-6.332217,1.088748,-0.585031,7.504144,3.808735,7.190998,1.571198,5.892697,-6.191316,-8.762158,-1.050459,-3.315167,2.204751,-6.555416,-7.035726,-6.326378,6.903318,-0.827416,4.423189,-1.596412,1.133441,-0.430216,6.006978,5.876296,3.175126,-0.658999,5.925127,-9.830381,0.604220,-1.432410,-8.891533,9.478599,-0.945506,1.269476,0.695541,-2.201830,0.162890,-6.241585,-9.254657],[2.158338,4.793396,3.221531,-6.926193,1.717135,-7.936050,4.341969,2.902932,-1.659852,-2.096150,8.928037,9.545491,1.245627,5.423656,-9.882036,9.933076,8.273282,3.668917,8.186058,-1.029374,9.802346,4.810455,9.602693,7.486319,-2.017974,-0.427931,-1.867977,-4.050466,-8.762730,8.445913,0.685639,-6.629127,7.492256,-6.703982,9.803147,3.386803,6.834778,-8.032984,8.063368,4.830073,4.450183,-0.175413]], dtype = "float64")#candidate|985|(5, 42)|const|float64
bop_986 = relay.bitwise_xor(var_952.astype('uint8'), relay.reshape(const_985.astype('uint8'), relay.shape_of(var_952))) # shape=(5, 42)
uop_993 = relay.cos(uop_972.astype('float64')) # shape=(7, 15, 2)
uop_995 = relay.cos(uop_974.astype('float64')) # shape=(7, 15, 2)
bop_997 = relay.right_shift(uop_972.astype('int8'), relay.reshape(bop_986.astype('int8'), relay.shape_of(uop_972))) # shape=(7, 15, 2)
bop_1000 = relay.right_shift(uop_974.astype('int8'), relay.reshape(bop_986.astype('int8'), relay.shape_of(uop_974))) # shape=(7, 15, 2)
uop_1007 = relay.cosh(uop_993.astype('float32')) # shape=(7, 15, 2)
uop_1009 = relay.cosh(uop_995.astype('float32')) # shape=(7, 15, 2)
uop_1019 = relay.log(uop_993.astype('float32')) # shape=(7, 15, 2)
uop_1021 = relay.log(uop_995.astype('float32')) # shape=(7, 15, 2)
bop_1022 = relay.add(bop_997.astype('int64'), relay.reshape(call_951.astype('int64'), relay.shape_of(bop_997))) # shape=(7, 15, 2)
bop_1025 = relay.add(bop_1000.astype('int64'), relay.reshape(call_953.astype('int64'), relay.shape_of(bop_1000))) # shape=(7, 15, 2)
func_285_call = mod.get_global_var('func_285')
func_288_call = mutated_mod.get_global_var('func_288')
var_1032 = relay.var("var_1032", dtype = "float32", shape = (455,))#candidate|1032|(455,)|var|float32
call_1031 = relay.TupleGetItem(func_285_call(relay.reshape(var_1032.astype('float32'), [7, 5, 13])), 2)
call_1033 = relay.TupleGetItem(func_288_call(relay.reshape(var_1032.astype('float32'), [7, 5, 13])), 2)
func_487_call = mod.get_global_var('func_487')
func_489_call = mutated_mod.get_global_var('func_489')
var_1036 = relay.var("var_1036", dtype = "float64", shape = (1386,))#candidate|1036|(1386,)|var|float64
call_1035 = relay.TupleGetItem(func_487_call(relay.reshape(var_1036.astype('float64'), [9, 11, 14])), 0)
call_1037 = relay.TupleGetItem(func_489_call(relay.reshape(var_1036.astype('float64'), [9, 11, 14])), 0)
func_285_call = mod.get_global_var('func_285')
func_288_call = mutated_mod.get_global_var('func_288')
call_1039 = relay.TupleGetItem(func_285_call(relay.reshape(var_1032.astype('float32'), [7, 5, 13])), 2)
call_1040 = relay.TupleGetItem(func_288_call(relay.reshape(var_1032.astype('float32'), [7, 5, 13])), 2)
var_1041 = relay.var("var_1041", dtype = "float32", shape = (7, 15, 2))#candidate|1041|(7, 15, 2)|var|float32
bop_1042 = relay.mod(uop_1007.astype('float64'), relay.reshape(var_1041.astype('float64'), relay.shape_of(uop_1007))) # shape=(7, 15, 2)
bop_1045 = relay.mod(uop_1009.astype('float64'), relay.reshape(var_1041.astype('float64'), relay.shape_of(uop_1009))) # shape=(7, 15, 2)
func_120_call = mod.get_global_var('func_120')
func_122_call = mutated_mod.get_global_var('func_122')
call_1054 = func_120_call()
call_1055 = func_120_call()
func_870_call = mod.get_global_var('func_870')
func_873_call = mutated_mod.get_global_var('func_873')
const_1057 = relay.const([-0.162435,7.054909,3.923411,0.962075,-9.190450,7.393968,2.134149,9.492642,-4.013879,-4.022948,0.096870,-7.316891,-6.596583,5.782355,-9.562308,-4.986210,-1.540494,-7.746445,8.914064,6.497711,-4.608074,-9.786716,-8.054448,-0.927707,6.619724,5.739447,-0.269070,8.487390,-6.331355,-6.261078,4.662300,-0.311427,-9.557426,7.462780,-2.867795,-7.139453,-2.965732,-7.100138,-9.087625,3.804924,2.462962,-5.310180,-2.628099,-2.732885,-5.360392,2.603783,-1.164553,3.664444,-5.286009,-1.295027,5.592957,7.391231,-3.418735,-6.302405,-7.516699,-2.449067,7.272258,3.889567,-8.972047,-4.542474,-7.941692,0.744289,7.768054,-0.485924,5.977558,-1.576202,9.618737,-3.504907,0.459463,-0.599832,3.900316,-5.997149,1.446978,-0.456931,0.448239,-6.480085,1.013233,-0.116645,-8.845203,-8.855839,-5.346640,6.620480,5.964382,2.483831,-7.130639,-6.497896,-6.382080,-8.942373,5.233346,-7.126455,-4.583760,-9.376266,-7.023287,-0.663899,9.072667,-9.721280,-8.946450,2.042274,-3.453329,-8.758044,-4.237745,-3.300428,5.083721,-3.653652,2.539282,-0.374289,6.542416,8.693193,6.265055,0.430726,0.025964,-9.298356,8.093322,1.288089,-0.679383,-2.465345,-9.078612,-4.527914,-7.614974,-7.746032,0.771731,3.097147,-6.854399,-3.999115,-5.170161,-5.504635,0.195403,0.097878,4.105034,-6.384024,8.081754,-5.723417,8.885469,3.800259,-2.171207,-0.791438,-3.457154,-3.822603,-2.950156,9.144798,-2.983865,-6.552852,-9.458852,-9.502336,-7.201841,-0.504303,-2.749421,-9.532350,6.041908,6.267770,1.892535,9.585083,9.627833,-7.602422,-4.805884,-5.496152,-1.653571,-7.142034,0.767971,-4.563872,-0.040703,5.148151,1.261890,-9.810046,4.412858,-5.593316,0.874926,5.842768,-4.111080,1.561298,5.982635,1.227964,-4.029485,-9.422995,5.872694,-2.586653,0.089466,-0.445286,6.388517,4.094933,-5.574898,7.001280,8.645859,-8.205060,7.772293,-4.295534,7.611274,-6.376696,-8.348942,4.950842,9.522943,7.629200,4.112384,4.931037,-2.239129,-6.122628,1.321815,6.969713,-7.644411,-1.809615,6.072233,-6.006771,-4.511217,-0.432229,5.041201,-5.529336,1.889046,-5.311508,3.419000,0.356915,-9.939796,-9.393323,-9.849374,5.210455,2.136847,-5.380784,-3.530460,-6.149478,6.542484,4.555205,-6.686916,4.840591,0.938256,5.133258,2.763559,6.452101,-7.488936,2.755291,9.117549,5.840455,-3.641100,3.528287,-0.730535,-9.501022,-2.673632,-5.904151,1.209039,6.132369,8.762214,-9.599467,6.420446,5.651998,4.955965,-0.239443,9.567586,-6.199395,8.739024,-2.837016,0.527091,3.331528,1.694945,-0.801149,4.010507,2.247387,-3.286622,-3.759550,4.284016,7.230088,-2.303835,5.203993,2.735837,-0.366396,0.810741,-5.498815,2.011300,3.551483,-4.705795,9.968085,4.536674,-8.589289,-2.902353,4.618501,-7.890206,1.784358,2.304962,-8.321896,-9.458521,8.747260,-9.003062,-1.112678,-3.086493,-1.870369,1.316532,-2.107916,-8.551252,8.343667,9.110343,3.664058,4.307190,5.462209,7.118156,-5.383554,-3.700489,-3.577406,0.577313,-5.582344,-5.959061,-3.340553,-8.468415,-6.080363,-2.544006,-7.124281,-8.190486,6.656816,-0.429960,-4.066760,4.174504,0.632207,8.586582,-8.087908,-1.545646,-6.387540,0.414346,-8.830915,4.945318,-8.398546,-8.109481,-9.396858,-5.860563,2.319761,-6.839480,1.368133,-4.751358,4.458605,-7.789610,-9.926157,-6.167574,2.784636,-2.275244,1.686783,-4.418867,9.140849,-0.070332,2.010667,8.146201,0.455698,0.716457,4.702819,5.135392,0.220282,-8.449345,-7.260695,-6.539585,-3.635741,-2.984917,-4.177486,-6.720369,8.873553,9.779890,5.495284,9.110730,-1.286528,5.105930,-5.632541,-0.645299,-3.228995,-5.831042,3.561326,-8.526990,2.566085,-6.073706,3.115671,2.676535,6.005744,-4.444999,5.171237,-7.641872,-7.805640,-0.308153,-2.163412,-5.710932,0.306842,-8.744725,8.616705,5.611381,0.948104,-7.099520,-9.875448,9.375870,2.822784,-2.438621,-2.762091,-9.442589,5.096774,7.307873,-1.162371,-7.380597,-7.764457,-4.872842,-0.190435,-2.664058,6.079913,-4.626999,-1.156762,-8.250098,1.483312,8.730854,2.066252,-4.984234,-3.902492,-8.216036,6.007017,-1.531411,0.868119,6.058767,-9.971591,4.302973,9.718917,6.524383,-7.420451,9.870054,6.595876,1.271742,-0.071512,6.201289,8.089358,1.781750,-9.236806,7.850177,2.841726,7.575326,-3.483812,9.431171,5.527463,-5.291181,-1.512719,9.035453,-3.708007,-1.525066,0.996955,2.703220,-5.185011,2.016340,-2.444321,-7.215719,-8.449726,-7.000456,7.736596,-5.298186,-3.507541,-8.190185,-7.729268,-0.322567,-5.527608,7.012462,-3.592267,-8.153459,-4.630756,-6.048766,-9.451097,-0.539350,-7.542747,-7.850174,-2.320479,-4.287831,3.253705,-2.111829,5.320628,-7.695584,0.093576,5.722732,-3.874545,-8.059559,7.331458,3.412213,-0.116425,-1.945645,-6.698681,-9.494621,0.525456,-3.694516,1.820568,-9.701651,8.892251,-7.255561,2.192807,1.411390,6.941622,-7.789996,-4.570726,5.416056,0.855033,7.872098,-0.661467,-0.515558,0.129325,-8.471487,6.992313,6.718901,1.535001,-4.126817,9.492318,-9.197544,9.332577,4.983320,-8.421136,-8.685180,1.144172,-5.842308,4.408764,7.740572,0.769521,5.031733,8.330123,7.842504,-3.245855,9.546390,1.271238,0.628328,-7.065225,-4.492561,1.217650,-0.948025,1.190560,-0.214331,0.441954,5.703826,6.142749,-7.276213,4.504263,2.343480,7.988899,8.591615,-4.362296,2.861382,3.885885,7.795103,5.793061,4.622173,-8.452953,3.047570,-6.273511,-9.865096,-9.885743,-8.464669,5.915050,9.713344,-5.841480,4.114181,1.039100,1.370472,9.931026,9.237431,-2.228663,5.753232,-6.213984,-6.967778,9.136842,-4.835586,0.935251,9.405825,-9.296535,2.621304,7.256286,5.204271,-1.746227,2.362249,-1.647858,-4.408176,-4.426190,5.692917,-0.960911,8.002362,1.237207,3.993676,-8.660780,4.508624,-0.037877,7.750104,0.176245,-2.684292,1.693067,8.014246,1.298251,-5.689511,3.404479,-8.239795,2.142375,1.796565,-4.032816,-1.303813,4.284724,5.341416,-9.801644,6.888087,-8.604461,7.049659,-9.939525,5.349080,-7.960461,2.658371,4.794342,-3.852684,4.930632,3.639348,-7.370582,-6.561174,3.713989,4.348315,-2.086374,-9.564606,8.556941,-7.765788,-1.269523,7.323617,2.554107,1.316291,-1.585649,5.208114,7.380242,4.828079,-6.347144,-9.750451,-6.796819,-0.098709,-3.183899,7.398255,-6.512969,1.437282,3.023945,-7.172632,5.855594,5.550321,9.653743,4.552271,-8.978227,-4.116282,-1.780946,-9.265475,7.290605,3.973460,1.471670,8.531633,-2.098152,3.000933,1.182655,-4.427369,6.594368,-9.658444,4.634153,3.158718,8.963476,-3.107556,-6.484298,-1.324760,3.751180,-8.330175,-2.515571,3.906758,-2.498234,-7.181383,-7.897133,1.315375,-4.990318,-0.182000,1.480848,0.768906,7.922030,9.418292,6.139215,0.037725,3.187712,1.414197,8.996630,0.853117,6.138996,6.764370,-1.742955,3.257100,7.213447,-7.970920,-1.354421,5.931755,-0.529499,7.292238,-7.609505,-0.002309,-8.789797,1.254770,-5.122908,-9.656464,-3.522003,0.990958,-2.432724,4.320358,-9.419863,-9.101654,-8.604966,2.422875,-1.898718,-4.432914,4.985153,6.555627,-5.713353,-8.721743,8.913299,7.004130,-7.145077,-8.062446,7.790421,-9.323782,-5.657939,-8.500447,-9.559525,5.585301,6.570076,8.131632,-1.384573,-2.210421,1.610845,-1.248982,8.379127,-9.458513,-6.939331,-6.211740,7.926219,-5.825090,-3.315642,-9.241883,-4.147195,3.197948,6.699766,-7.204635,9.444682,-9.286582,2.526283,6.537957,-1.558521,1.755466,0.747457,6.513738,-8.473113,-9.943264,-8.487764,-0.796569,-1.980927,-3.989202,-3.444629,6.051765,-7.898528,6.152534,-6.680433,-4.627838,-9.622147,-1.383436,-5.383834,-9.486233,0.576295,0.180686,1.827592,-8.724044,0.097510,6.841080,3.438345,-3.985642,4.019366,-8.278520,-7.651601,-5.929506,-4.355732,-5.531923,-3.726956,8.641990,7.290847,-6.206655,-1.432120,-5.314024,0.218725,-6.550838,3.671222,-0.877943,-8.432454,-9.651229,-0.681036,2.788965,2.915886,6.870397,5.382079,5.234682,3.872820,2.919716,-2.276997,8.368241,-4.626537,0.150896,-3.553951,-7.678943,-9.869524,-2.509389,6.425669,6.728407,4.617809,2.283095,7.899485,-0.556863,-3.792463,7.771273,5.638535,-7.259298,-2.434599,2.983549,-3.536461,1.756407,6.201862,0.176925,7.038435,8.018810,2.641183,8.373617,-8.070317,2.259715,-9.452560,5.301503,2.894082,7.758460,1.398525,0.188165,-1.993500,-6.877357,-6.613941,-4.290733,-0.900702,-3.813425,-4.986930,9.272207,3.096714,7.581770,7.515362,-0.540805,2.074910,-3.944233,-9.894694,-4.546686,-0.122590,-9.728589,-3.313068,-0.782445,6.490107,-8.534936,0.176941,-2.724577,-3.299074,-6.738801,-2.089754,-6.250706,-1.136344,7.827925,-2.080707,7.219398,-0.279760,8.433688,-8.329743,-7.315386,8.327397,-1.645636,-7.969664,2.154455,-6.348302,-4.466463,-2.303584,-2.398539,2.079666,-3.780807,6.607716,-2.960792,6.554092,-8.894500,8.365768,7.908405,6.300304,9.441286,-1.183770,-3.639345,-4.153811,-6.069843,-8.722916,2.346766,-9.895315,0.818372,6.751715,3.769001,-6.134555,5.900685,-1.859040,-9.272923,-5.741763,3.145233,-1.681016,9.314628,-0.540823,-2.541667,9.231542,-6.910373,1.033448,5.804707,2.183920,1.626728,6.131048,-7.155884,-3.528255,6.465607,-5.332502,8.371536,7.655683,-2.783008,-1.927242,-6.010834,-3.580767,4.756894,-7.841058,1.508118,-4.765880,2.564271,5.512476,1.947428,-9.647143,-5.106321,-4.465548,-0.191832,-6.020569,4.345275,7.396570,-0.609412,6.104713,9.577624,4.245116,0.580589,4.120329,1.016713,-6.124177,-0.591691,1.744619,-3.664183,1.252577,9.746241,8.620044,-7.425161,-6.083839,-4.496728,1.180253,-3.858941,-1.467947,-4.329790,-9.750477,-8.239752,-2.128272,-0.269889,9.032750,7.851181,2.328370,4.055736,-7.143897,4.710510,-6.861691,-2.870335,6.521258,-7.919673,-9.796527,5.559410,-2.079215,-5.217425,5.935696,8.769718,9.360307,4.017656,7.735858,8.085446,-1.769507,0.710251,-4.610919,-0.280133,-7.859993,-5.402925,6.055434,0.565760,5.803312,0.539183,-2.174484,-7.832503,1.595435,-3.207332,-9.623191,-2.945084,-8.059443,9.044813,2.208425,-0.224829,8.112379,1.404849,8.827141,-9.221869,-8.849748,4.297607,-6.299038,-6.045693,7.450844,4.416329,-2.006088,-2.217194,2.052002,5.008077,-6.900533,-6.698134,-9.074443,-3.973460,-7.757673,8.560865,-3.804044,-5.157279,-2.055170,6.487231,3.289764,6.947196,-9.602166,5.111540,0.551217,5.355272,-0.247241,7.171946,5.582029,-6.005682,9.129874,-2.456769,-7.234095,-7.020517,7.232278,-3.673414,-4.902044,-8.183399,-2.406648,-0.447950,-5.440958,6.122923,1.728726,-7.139912,-6.806283,1.438566,-9.886868,-4.396579,-6.113988,8.048559,-1.344422,-8.810244,4.646439,5.591585,-2.835048,4.749726,7.661588,-9.335778,-3.603306,2.838769,8.715750,-1.342228,-9.065152,3.356793,3.363442,-3.886408,-9.031139,7.954957,7.248425,9.588781,-3.223997,8.817710,2.454081,7.168479,-0.977431,2.727729,6.431147,4.561045,-1.220799,-7.799473,7.368521,9.455653,5.322046,7.907540,2.947956,4.128797,7.328965,-1.728246,-7.562282,-9.402730,-0.429648,-3.885863,0.106106,-9.252324,-5.889481,-3.918719,1.193641,-3.066126,-2.978507,-0.346897,-1.625481,4.853933,-4.100623,7.221056,6.971910,6.691303,4.498392,2.198799,3.831380,-3.478193,-1.172968,7.046747,-8.573895,3.501920,6.705594,-8.252029,4.207800,3.577907,4.454052,-1.027746,3.081013,0.077982,6.477846,5.894660,-1.380272,9.782741,-8.169436,-9.742536,-8.044768,2.412048,0.309492,5.782102,-6.707917,-9.689637,1.779017,-1.684954,-5.830910,6.598462,8.376315,-5.649099,-5.737576,-1.415316,-7.633819,6.490212,-7.311162,-6.424899,2.975212,-4.227075,4.700262,2.152460,4.021163,7.274183,9.400132,-9.373782,1.760869,-2.623582,-6.416437,3.977023,-4.732183,7.772074,6.103180,-6.128172,4.276268,-4.731484,-3.212645,-2.172572,-6.736244,1.987263,-5.877692,-8.731045,3.966575,-2.885153,4.475292,-2.072622,-1.133261,7.827740,-3.972610,-2.888710,-8.029383,-6.688679,3.485507,3.620277,-6.569230,0.364134,-5.641594,-0.595239,5.204530,6.880626,-1.630054,-8.716644,8.780186,2.698365,2.630800,1.149892,-1.116807,-0.154824,-3.472468,9.467601,6.381833,-7.108573,-5.251502,3.707317,6.290463,4.063227,-3.955058,-3.999430,6.259705,1.843218,-2.530486,-5.026666,-7.371972,-9.866799,-7.350382,1.081209,-5.146668,6.996552,4.098281,-3.675839,2.805576,-2.088509,3.929158,8.908709,-2.982910,-2.783186,-6.079234,-4.424272,1.125915,5.475349,-4.556974,2.504298,-1.446202,-4.508916,8.111766,-1.970071,-5.061300,5.421592,-2.047204,-9.253464,6.329315,7.813013,4.620229,4.245721,-4.363652,4.564870,1.711823,1.019309,0.965476,1.473837,1.274259,-3.179051,8.980346,6.284029,-3.522947,-5.031064,-7.095011,9.940646,2.807728,5.223672,-7.363410,9.186087,9.575198,8.041166,-9.421795,-7.186666,0.859291,7.024006,-9.026375,-8.083710,-9.438021,-2.323213,-4.234770,-7.697438,-6.520453,1.219415,-7.582667,2.260248,3.207577,4.227654,6.560792,1.890359,-8.503386,2.802593,-8.744491,3.287933,7.702592,9.506254,-6.838873,7.647903,1.410267,6.337970,6.176553,-4.595623,3.289422,-2.274878,5.843362,8.442279,-9.168324,-3.307370,-6.680418,7.727650,1.792399,1.132998,3.951553,8.009849,1.998001,-6.183780,4.693632,-9.336125,-5.608331,5.000182,-6.937509,6.346726,-5.083209,6.997187,-6.536241,-3.100652,-0.698030,2.267442,-4.557795,-8.822483,0.122636,7.489056,6.537290,5.035383,-9.869244,8.969273,-0.249926,-0.031687,-7.066952,9.577190,-1.241284,6.935115,-6.225222,-6.276038,5.394999,-2.006976,-5.983365,4.379855,8.720840,7.540821,4.618596,9.992872,-1.354704,-4.720885,2.577053,8.011375,0.219074,-2.244517,5.524614,8.220258,-8.880689,8.571985,2.506354,-7.983139,0.888241,-5.379972,2.496567,-1.940900,3.138256,-1.880930,3.323577,3.652640,-6.607275,-1.299699,-2.523414,-9.378621,7.871844,9.398589,-7.681899,-2.763137,-1.631369,2.237602,-4.391644,2.442889,-0.944176,-8.423571,5.179548,0.410907,-6.375843,7.874803,0.780220,7.767659,6.217182,3.623464,-8.252489,0.651360,-3.504564,-8.691533,7.447814,1.293286,-3.940574,0.034455,1.538312,6.334047,-2.654882,-8.285868,9.157976,-0.678563,4.269887,-4.579656,9.604223,-9.653613,-0.803526,-2.567146,-3.317348,-9.294100,-0.690174,-6.552631,-8.303402,3.395919,-6.168696,-2.068103,7.852770,-1.017391,-2.913202,-0.063121,-4.918271,5.744426,-5.435843,-3.446825,1.893464,6.564437,-4.956691,0.342110,6.522163,1.999894,8.207370,9.670263,3.688841,8.770000,1.928986,6.045803,-3.750853,-6.489347,7.977439,2.159097,8.421391,-3.318771,-0.747351,-4.489261,-7.012157,0.204597,0.183041,-6.629230,-7.134598,-7.856848,5.788963,6.864998,4.289595,-2.729154,1.760229,9.632105,-1.663975,-5.202794,-2.697072,7.118803,2.763047,-8.614655,5.323530,0.147057,-9.197671,3.208912,5.629156,8.453075,7.118473,9.418464,2.639970,6.078377,-7.103823,-9.017434,9.593323,1.376615,-7.776790,7.273358,-3.942692,7.632916,7.222188,7.590313,8.739440,1.367508,-1.746531,1.331384,7.343907,-5.067976,5.926579,-4.911655,-2.424082,9.877803,1.337375,-5.183809,4.619688,-0.782397,5.960989,8.803022,-9.943453,9.414618,-6.117362,-9.173034,8.898439,7.311067,2.125915,8.743321,-0.909413,-6.928437,-6.206034,9.739758,-4.280281,-0.951676,4.161131,7.084957,-0.127959,1.235875,5.859918,-8.067701,-4.293078,3.766350,-4.911867,7.978435,6.023209,-7.278462,-5.012367,8.257766,-5.885917,-0.806606,-9.414720,3.619149,-8.983961,5.883959,8.625788,3.467359,9.415174,0.087577,7.967823,-1.254127,7.740878,-8.777957,1.906326,-8.265593,7.797391,3.576009,-6.601564,-7.199311,6.781078,0.825302,-3.612647,-7.453618,6.352978,0.150624,-2.937330,-9.435981,-5.890026,-4.030982,-2.460158,7.897067,6.061324,4.956031,-2.417469,6.675526,9.555470,-6.763063,0.570727,-6.035937,-9.717600,2.888526,9.457104,-5.562094,8.041093,2.150948,-1.827007,8.236910,-1.767329,8.776944,4.068214,-0.169246,7.203252,-8.961707,-6.759885,-0.033069,-7.342180,3.736170,8.898852,9.836949,-9.118469,-5.058379,-1.471811,8.046971,0.818904,5.293034,9.621171,5.019251,-9.883421,4.972117,-0.637384,2.691045,5.545234,5.897628,9.977016,9.386123,9.216268,-1.657009,-1.152168,-1.941761,-6.948011,-9.829823,-0.836363,5.783395,8.734987,7.479183,-0.771563,-0.856650,4.990574,-7.909233,-9.430442,7.459899,8.598016,6.712492,6.026397,1.563406,4.184205,1.920844,-6.130909,-4.826542,4.275246,2.937312,7.175436,1.499120,0.856534,5.796639,-9.901685,-4.720630,-8.144776,9.743318,1.172461,1.822848,-8.765446,-6.074032,0.417442,-9.168891,-2.747001,-6.546955,2.435154,0.874964,8.092533,-8.333023,0.652827,-1.522789,7.615768,4.033065,-7.833787,1.271217,5.769562,5.263368,2.027557,0.719034,-2.779338,3.405486,4.916312,-5.507935,6.212920,-4.313036,2.658580,-0.143159,-8.329927,-4.408106,-2.676372,8.119719,0.428703,9.202867,-7.283013,0.193122,-9.120964,-0.090806,9.038207,6.489284,-6.357372,1.969240,-7.248834,-9.741875,8.861972,9.853863,-2.333268,3.689447,-8.204102,-5.590527,0.157305,4.350172,-8.304315,4.140474,-5.856278,-2.150835,4.837372,1.885007,1.042443,-7.786829,-3.051201,1.663318,5.820720,-9.588337,9.411267,-3.186503,-4.871626,-7.505292,-6.846261,-3.608726,-7.238549,0.042970,-5.247637,6.698328,-0.447166,-5.953071,-0.538941,6.794700,-7.254557,1.177298,9.731726,-1.542318,3.238294,-4.424613,9.996920,-5.319617,-5.354595,5.239979,-0.094039,-0.748007,-1.710710,6.899572,-1.861002,-0.227728,3.584182,-4.745147,-2.053311,-5.129845,-5.258171,6.792733,-6.618255,9.006398,9.035065,8.582104,-1.171530,-7.868829,8.809739,8.145064,-3.521209,-8.236840,0.742988,-9.193689,-7.748184,9.550532,-5.585196,-6.972301,-1.448604,2.021274,-8.517708,-4.680205,-0.389360,7.779284,-9.375321,-0.710664,4.116372,-9.855243,4.729052,-5.120640,-3.806034,-7.498076,-3.668904,3.245444,3.193359,-6.329330,8.416295,-9.984650,8.169018,6.849024,-6.562277,-9.084024,0.872235,-9.556690,-7.310015,-7.831951,-4.547368,3.913959,6.885118,8.606882,6.341897,-6.606014,-3.350741,-1.302720,-9.050938,-6.495837,2.529134,-2.561109,9.040037,-3.661448,4.874332,-7.824986,1.341473,-3.372446,-5.477789,5.728100,9.338521,2.623384,-5.439353,2.814903,9.558990,9.349453,5.408940,7.971127,-4.589540,-4.194837,-6.582810,2.775254,-6.864584,-9.970077,-8.667894,-8.703910,0.699199,1.201709,1.901869,8.290282,-8.710356,-7.064851,-8.865411,0.721942,5.749028,6.215484,-5.368576,4.462670,-2.068277,-7.758396,-0.206057], dtype = "float32")#candidate|1057|(1820,)|const|float32
call_1056 = relay.TupleGetItem(func_870_call(relay.reshape(const_1057.astype('float32'), [455, 4])), 5)
call_1058 = relay.TupleGetItem(func_873_call(relay.reshape(const_1057.astype('float32'), [455, 4])), 5)
func_120_call = mod.get_global_var('func_120')
func_122_call = mutated_mod.get_global_var('func_122')
call_1059 = func_120_call()
call_1060 = func_120_call()
output = relay.Tuple([call_944,call_948,call_976,var_977,uop_1019,bop_1022,call_1031,var_1032,call_1035,var_1036,call_1039,bop_1042,call_1054,call_1056,const_1057,call_1059,])
output2 = relay.Tuple([call_945,call_949,call_978,var_977,uop_1021,bop_1025,call_1033,var_1032,call_1037,var_1036,call_1040,bop_1045,call_1055,call_1058,const_1057,call_1060,])
func_1062 = relay.Function([var_952,var_977,var_1032,var_1036,var_1041,], output)
mod['func_1062'] = func_1062
mod = relay.transform.InferType()(mod)
var_1063 = relay.var("var_1063", dtype = "float64", shape = (5, 42))#candidate|1063|(5, 42)|var|float64
var_1064 = relay.var("var_1064", dtype = "bool", shape = (32,))#candidate|1064|(32,)|var|bool
var_1065 = relay.var("var_1065", dtype = "float32", shape = (455,))#candidate|1065|(455,)|var|float32
var_1066 = relay.var("var_1066", dtype = "float64", shape = (1386,))#candidate|1066|(1386,)|var|float64
var_1067 = relay.var("var_1067", dtype = "float32", shape = (7, 15, 2))#candidate|1067|(7, 15, 2)|var|float32
output = func_1062(var_1063,var_1064,var_1065,var_1066,var_1067,)
func_1068 = relay.Function([var_1063,var_1064,var_1065,var_1066,var_1067,], output)
mutated_mod['func_1068'] = func_1068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_355_call = mod.get_global_var('func_355')
func_356_call = mutated_mod.get_global_var('func_356')
call_1103 = relay.TupleGetItem(func_355_call(), 5)
call_1104 = relay.TupleGetItem(func_356_call(), 5)
output = relay.Tuple([call_1103,])
output2 = relay.Tuple([call_1104,])
func_1113 = relay.Function([], output)
mod['func_1113'] = func_1113
mod = relay.transform.InferType()(mod)
mutated_mod['func_1113'] = func_1113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1113_call = mutated_mod.get_global_var('func_1113')
call_1114 = func_1113_call()
output = call_1114
func_1115 = relay.Function([], output)
mutated_mod['func_1115'] = func_1115
mutated_mod = relay.transform.InferType()(mutated_mod)
func_522_call = mod.get_global_var('func_522')
func_524_call = mutated_mod.get_global_var('func_524')
call_1124 = relay.TupleGetItem(func_522_call(), 1)
call_1125 = relay.TupleGetItem(func_524_call(), 1)
output = call_1124
output2 = call_1125
func_1126 = relay.Function([], output)
mod['func_1126'] = func_1126
mod = relay.transform.InferType()(mod)
mutated_mod['func_1126'] = func_1126
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1126_call = mutated_mod.get_global_var('func_1126')
call_1127 = func_1126_call()
output = call_1127
func_1128 = relay.Function([], output)
mutated_mod['func_1128'] = func_1128
mutated_mod = relay.transform.InferType()(mutated_mod)
func_120_call = mod.get_global_var('func_120')
func_122_call = mutated_mod.get_global_var('func_122')
call_1142 = func_120_call()
call_1143 = func_120_call()
output = relay.Tuple([call_1142,])
output2 = relay.Tuple([call_1143,])
func_1151 = relay.Function([], output)
mod['func_1151'] = func_1151
mod = relay.transform.InferType()(mod)
output = func_1151()
func_1152 = relay.Function([], output)
mutated_mod['func_1152'] = func_1152
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1126_call = mod.get_global_var('func_1126')
func_1128_call = mutated_mod.get_global_var('func_1128')
call_1156 = func_1126_call()
call_1157 = func_1126_call()
output = call_1156
output2 = call_1157
func_1160 = relay.Function([], output)
mod['func_1160'] = func_1160
mod = relay.transform.InferType()(mod)
mutated_mod['func_1160'] = func_1160
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1160_call = mutated_mod.get_global_var('func_1160')
call_1161 = func_1160_call()
output = call_1161
func_1162 = relay.Function([], output)
mutated_mod['func_1162'] = func_1162
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1151_call = mod.get_global_var('func_1151')
func_1152_call = mutated_mod.get_global_var('func_1152')
call_1240 = relay.TupleGetItem(func_1151_call(), 0)
call_1241 = relay.TupleGetItem(func_1152_call(), 0)
func_234_call = mod.get_global_var('func_234')
func_235_call = mutated_mod.get_global_var('func_235')
call_1250 = relay.TupleGetItem(func_234_call(), 0)
call_1251 = relay.TupleGetItem(func_235_call(), 0)
func_522_call = mod.get_global_var('func_522')
func_524_call = mutated_mod.get_global_var('func_524')
call_1256 = relay.TupleGetItem(func_522_call(), 2)
call_1257 = relay.TupleGetItem(func_524_call(), 2)
bop_1262 = relay.floor_mod(call_1250.astype('float32'), relay.reshape(call_1240.astype('float32'), relay.shape_of(call_1250))) # shape=(14, 4, 3)
bop_1265 = relay.floor_mod(call_1251.astype('float32'), relay.reshape(call_1241.astype('float32'), relay.shape_of(call_1251))) # shape=(14, 4, 3)
output = relay.Tuple([call_1256,bop_1262,])
output2 = relay.Tuple([call_1257,bop_1265,])
func_1271 = relay.Function([], output)
mod['func_1271'] = func_1271
mod = relay.transform.InferType()(mod)
output = func_1271()
func_1272 = relay.Function([], output)
mutated_mod['func_1272'] = func_1272
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1113_call = mod.get_global_var('func_1113')
func_1115_call = mutated_mod.get_global_var('func_1115')
call_1288 = relay.TupleGetItem(func_1113_call(), 0)
call_1289 = relay.TupleGetItem(func_1115_call(), 0)
func_626_call = mod.get_global_var('func_626')
func_628_call = mutated_mod.get_global_var('func_628')
var_1297 = relay.var("var_1297", dtype = "bool", shape = (168,))#candidate|1297|(168,)|var|bool
call_1296 = relay.TupleGetItem(func_626_call(relay.reshape(var_1297.astype('bool'), [14, 4, 3])), 0)
call_1298 = relay.TupleGetItem(func_628_call(relay.reshape(var_1297.astype('bool'), [14, 4, 3])), 0)
func_1126_call = mod.get_global_var('func_1126')
func_1128_call = mutated_mod.get_global_var('func_1128')
call_1306 = func_1126_call()
call_1307 = func_1126_call()
output = relay.Tuple([call_1288,call_1296,var_1297,call_1306,])
output2 = relay.Tuple([call_1289,call_1298,var_1297,call_1307,])
func_1312 = relay.Function([var_1297,], output)
mod['func_1312'] = func_1312
mod = relay.transform.InferType()(mod)
var_1313 = relay.var("var_1313", dtype = "bool", shape = (168,))#candidate|1313|(168,)|var|bool
output = func_1312(var_1313)
func_1314 = relay.Function([var_1313], output)
mutated_mod['func_1314'] = func_1314
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1318 = relay.var("var_1318", dtype = "float64", shape = (16, 9, 7))#candidate|1318|(16, 9, 7)|var|float64
uop_1319 = relay.sinh(var_1318.astype('float64')) # shape=(16, 9, 7)
output = uop_1319
output2 = uop_1319
func_1323 = relay.Function([var_1318,], output)
mod['func_1323'] = func_1323
mod = relay.transform.InferType()(mod)
var_1324 = relay.var("var_1324", dtype = "float64", shape = (16, 9, 7))#candidate|1324|(16, 9, 7)|var|float64
output = func_1323(var_1324)
func_1325 = relay.Function([var_1324], output)
mutated_mod['func_1325'] = func_1325
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1336 = relay.var("var_1336", dtype = "float64", shape = (10, 3, 5))#candidate|1336|(10, 3, 5)|var|float64
var_1337 = relay.var("var_1337", dtype = "float64", shape = (10, 3, 5))#candidate|1337|(10, 3, 5)|var|float64
bop_1338 = relay.add(var_1336.astype('float64'), relay.reshape(var_1337.astype('float64'), relay.shape_of(var_1336))) # shape=(10, 3, 5)
uop_1351 = relay.rsqrt(bop_1338.astype('float64')) # shape=(10, 3, 5)
output = relay.Tuple([uop_1351,])
output2 = relay.Tuple([uop_1351,])
func_1353 = relay.Function([var_1336,var_1337,], output)
mod['func_1353'] = func_1353
mod = relay.transform.InferType()(mod)
mutated_mod['func_1353'] = func_1353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1353_call = mutated_mod.get_global_var('func_1353')
var_1355 = relay.var("var_1355", dtype = "float64", shape = (10, 3, 5))#candidate|1355|(10, 3, 5)|var|float64
var_1356 = relay.var("var_1356", dtype = "float64", shape = (10, 3, 5))#candidate|1356|(10, 3, 5)|var|float64
call_1354 = func_1353_call(var_1355,var_1356,)
output = call_1354
func_1357 = relay.Function([var_1355,var_1356,], output)
mutated_mod['func_1357'] = func_1357
mutated_mod = relay.transform.InferType()(mutated_mod)
func_120_call = mod.get_global_var('func_120')
func_122_call = mutated_mod.get_global_var('func_122')
call_1391 = func_120_call()
call_1392 = func_120_call()
uop_1403 = relay.acosh(call_1391.astype('float32')) # shape=(14, 4, 3)
uop_1405 = relay.acosh(call_1392.astype('float32')) # shape=(14, 4, 3)
output = relay.Tuple([uop_1403,])
output2 = relay.Tuple([uop_1405,])
func_1406 = relay.Function([], output)
mod['func_1406'] = func_1406
mod = relay.transform.InferType()(mod)
output = func_1406()
func_1407 = relay.Function([], output)
mutated_mod['func_1407'] = func_1407
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1126_call = mod.get_global_var('func_1126')
func_1128_call = mutated_mod.get_global_var('func_1128')
call_1415 = func_1126_call()
call_1416 = func_1126_call()
output = call_1415
output2 = call_1416
func_1417 = relay.Function([], output)
mod['func_1417'] = func_1417
mod = relay.transform.InferType()(mod)
mutated_mod['func_1417'] = func_1417
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1417_call = mutated_mod.get_global_var('func_1417')
call_1418 = func_1417_call()
output = call_1418
func_1419 = relay.Function([], output)
mutated_mod['func_1419'] = func_1419
mutated_mod = relay.transform.InferType()(mutated_mod)
func_617_call = mod.get_global_var('func_617')
func_618_call = mutated_mod.get_global_var('func_618')
call_1446 = func_617_call()
call_1447 = func_617_call()
var_1449 = relay.var("var_1449", dtype = "bool", shape = (14, 4, 3))#candidate|1449|(14, 4, 3)|var|bool
bop_1450 = relay.bitwise_or(call_1446.astype('int32'), relay.reshape(var_1449.astype('int32'), relay.shape_of(call_1446))) # shape=(14, 4, 3)
bop_1453 = relay.bitwise_or(call_1447.astype('int32'), relay.reshape(var_1449.astype('int32'), relay.shape_of(call_1447))) # shape=(14, 4, 3)
uop_1457 = relay.acos(call_1446.astype('float64')) # shape=(14, 4, 3)
uop_1459 = relay.acos(call_1447.astype('float64')) # shape=(14, 4, 3)
var_1462 = relay.var("var_1462", dtype = "float64", shape = (14, 4, 3))#candidate|1462|(14, 4, 3)|var|float64
bop_1463 = relay.bitwise_xor(uop_1457.astype('uint16'), relay.reshape(var_1462.astype('uint16'), relay.shape_of(uop_1457))) # shape=(14, 4, 3)
bop_1466 = relay.bitwise_xor(uop_1459.astype('uint16'), relay.reshape(var_1462.astype('uint16'), relay.shape_of(uop_1459))) # shape=(14, 4, 3)
output = relay.Tuple([bop_1450,bop_1463,])
output2 = relay.Tuple([bop_1453,bop_1466,])
func_1478 = relay.Function([var_1449,var_1462,], output)
mod['func_1478'] = func_1478
mod = relay.transform.InferType()(mod)
var_1479 = relay.var("var_1479", dtype = "bool", shape = (14, 4, 3))#candidate|1479|(14, 4, 3)|var|bool
var_1480 = relay.var("var_1480", dtype = "float64", shape = (14, 4, 3))#candidate|1480|(14, 4, 3)|var|float64
output = func_1478(var_1479,var_1480,)
func_1481 = relay.Function([var_1479,var_1480,], output)
mutated_mod['func_1481'] = func_1481
mutated_mod = relay.transform.InferType()(mutated_mod)
func_234_call = mod.get_global_var('func_234')
func_235_call = mutated_mod.get_global_var('func_235')
call_1512 = relay.TupleGetItem(func_234_call(), 0)
call_1513 = relay.TupleGetItem(func_235_call(), 0)
output = call_1512
output2 = call_1513
func_1523 = relay.Function([], output)
mod['func_1523'] = func_1523
mod = relay.transform.InferType()(mod)
mutated_mod['func_1523'] = func_1523
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1523_call = mutated_mod.get_global_var('func_1523')
call_1524 = func_1523_call()
output = call_1524
func_1525 = relay.Function([], output)
mutated_mod['func_1525'] = func_1525
mutated_mod = relay.transform.InferType()(mutated_mod)
func_617_call = mod.get_global_var('func_617')
func_618_call = mutated_mod.get_global_var('func_618')
call_1531 = func_617_call()
call_1532 = func_617_call()
output = call_1531
output2 = call_1532
func_1544 = relay.Function([], output)
mod['func_1544'] = func_1544
mod = relay.transform.InferType()(mod)
mutated_mod['func_1544'] = func_1544
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1544_call = mutated_mod.get_global_var('func_1544')
call_1545 = func_1544_call()
output = call_1545
func_1546 = relay.Function([], output)
mutated_mod['func_1546'] = func_1546
mutated_mod = relay.transform.InferType()(mutated_mod)
func_355_call = mod.get_global_var('func_355')
func_356_call = mutated_mod.get_global_var('func_356')
call_1580 = relay.TupleGetItem(func_355_call(), 2)
call_1581 = relay.TupleGetItem(func_356_call(), 2)
func_355_call = mod.get_global_var('func_355')
func_356_call = mutated_mod.get_global_var('func_356')
call_1586 = relay.TupleGetItem(func_355_call(), 5)
call_1587 = relay.TupleGetItem(func_356_call(), 5)
output = relay.Tuple([call_1580,call_1586,])
output2 = relay.Tuple([call_1581,call_1587,])
func_1604 = relay.Function([], output)
mod['func_1604'] = func_1604
mod = relay.transform.InferType()(mod)
output = func_1604()
func_1605 = relay.Function([], output)
mutated_mod['func_1605'] = func_1605
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1609 = relay.var("var_1609", dtype = "uint8", shape = (3, 13, 16))#candidate|1609|(3, 13, 16)|var|uint8
var_1610 = relay.var("var_1610", dtype = "uint8", shape = (3, 13, 16))#candidate|1610|(3, 13, 16)|var|uint8
bop_1611 = relay.left_shift(var_1609.astype('uint8'), relay.reshape(var_1610.astype('uint8'), relay.shape_of(var_1609))) # shape=(3, 13, 16)
func_487_call = mod.get_global_var('func_487')
func_489_call = mutated_mod.get_global_var('func_489')
const_1620 = relay.const([[3.808831],[-4.474070],[5.519577],[-6.082437],[-3.998665],[2.770413],[-6.195101],[-4.574337],[-8.866238],[8.383280],[7.531885],[-7.130827],[9.745442],[3.942557],[3.574594],[3.668407],[2.825652],[7.028424],[-4.186948],[7.848669],[3.752704],[0.783979],[0.557120],[5.973044],[-7.836582],[5.844104],[7.942269],[-8.082210],[5.461009],[-1.110431],[9.225531],[-0.526028],[1.138458],[-6.914980],[0.346346],[-3.674474],[-3.189822],[-7.416866],[5.314246],[1.309994],[-1.800079],[-0.509335],[4.752716],[-5.916043],[-4.977847],[1.534745],[-1.408268],[-9.599905],[4.764415],[-5.270113],[0.726783],[8.064369],[-3.102739],[5.371165],[9.987555],[5.306896],[6.828371],[9.504857],[-0.221387],[-0.724437],[6.330766],[8.319215],[6.507057],[8.674455],[-3.507406],[5.889452],[0.986486],[5.600394],[-8.321752],[3.843726],[7.629605],[0.484059],[-5.358864],[9.216619],[-1.949981],[4.464832],[-7.210829],[-9.451372],[3.345400],[-0.243766],[5.165091],[0.453360],[8.784380],[-2.968476],[7.509485],[1.964689],[-5.624757],[-9.674498],[-2.314766],[-1.133382],[5.198086],[-0.438996],[-1.800196],[3.167835],[-7.268463],[0.084320],[1.261791],[-7.679713],[2.103408],[-5.686343],[5.750459],[9.254477],[-2.418540],[-4.886030],[-2.912263],[4.094828],[9.820323],[0.245270],[-3.085366],[2.974624],[-9.997962],[-0.351223],[0.425852],[-7.842332],[3.784046],[2.758898],[0.275301],[9.165517],[-1.257385],[-0.079103],[-7.488373],[-8.643618],[7.362874],[6.869335],[-3.195063],[-2.223952],[8.364329],[-6.971065],[-5.385604],[9.153980],[8.036659],[-0.173840],[3.818949],[-5.796696],[7.049292],[-3.126084],[6.258447],[7.733108],[-1.956849],[-5.431838],[2.627295],[-1.755039],[-7.759371],[6.909847],[3.195225],[-3.577064],[-3.085133],[6.132442],[-4.360360],[2.308572],[-7.247064],[5.873736],[5.627677],[-5.359842],[0.147739],[-4.830811],[-9.747771],[7.019804],[-2.503195],[1.436940],[4.462587],[-6.030016],[-5.214979],[-0.681708],[-3.160151],[-8.520614],[1.828981],[-0.682789],[0.051928],[4.141417],[9.799598],[5.404607],[-8.200395],[-1.573438],[-1.592226],[-5.026544],[-9.534533],[4.611454],[0.869237],[1.567769],[3.020578],[-6.474975],[-6.064319],[3.000833],[-4.797499],[-8.935803],[3.072060],[4.021683],[0.392829],[-5.648253],[3.312759],[7.994064],[7.319051],[-0.746562],[-3.053258],[-9.737084],[9.263213],[5.213191],[3.723267],[2.466105],[7.198824],[-0.517573],[-7.362617],[-4.347917],[4.978835],[4.572066],[9.625879],[-6.062713],[1.260687],[3.303173],[2.311438],[2.395477],[0.138702],[-9.360739],[-5.453920],[-9.558272],[7.534214],[-3.736242],[-6.258547],[7.818490],[6.331073],[-3.134669],[-2.486400],[8.541214],[9.789413],[4.795520],[0.598202],[4.694551],[9.890376],[9.828313],[-8.958398],[4.782377],[-0.809593],[0.391850],[-8.132804],[6.288238],[7.916594],[5.392475],[-8.519397],[6.203685],[5.912344],[-1.002357],[8.009287],[1.038935],[6.834439],[-2.787238],[-5.554054],[-4.626149],[2.356852],[5.087344],[-8.978076],[1.129401],[-7.275205],[8.049263],[-3.614555],[-7.507595],[-7.012615],[-4.945066],[6.067184],[-5.454038],[-2.475664],[-7.628420],[7.757673],[-5.375976],[-1.961556],[-8.456430],[-7.920746],[-2.179863],[-2.232071],[1.530655],[-4.452449],[7.449279],[5.929876],[-6.016414],[0.781776],[7.165355],[-8.433607],[5.550376],[-5.409992],[-4.000481],[4.155091],[-5.745086],[1.764102],[9.770191],[-6.370203],[-8.390402],[-3.191305],[7.489004],[6.248770],[-1.094088],[0.994352],[-7.459397],[2.602333],[3.483313],[1.863901],[-5.794307],[-0.270286],[-7.710328],[4.785288],[-6.295340],[4.005494],[-7.446239],[-0.938131],[3.333726],[-4.923567],[-9.319811],[6.975927],[5.869806],[-4.845218],[9.288948],[-8.782422],[9.700238],[-8.339612],[-4.193218],[2.677568],[1.491317],[7.453633],[-3.373075],[-3.301673],[3.395165],[-0.238829],[-8.700959],[2.976448],[-1.515475],[-0.836760],[6.932418],[-4.514919],[0.460177],[2.102777],[-0.743115],[-6.848607],[1.287389],[-1.385946],[2.886918],[7.681161],[1.164239],[9.604591],[2.367724],[7.472013],[-0.103758],[4.512194],[-1.554058],[-4.962447],[-9.177581],[-1.523844],[-5.265150],[6.854146],[-1.690420],[-5.102293],[-8.411894],[9.465754],[4.843272],[7.705689],[7.762764],[-4.700510],[-3.964188],[1.088158],[1.454591],[-4.401748],[2.914265],[7.718260],[-7.876758],[2.597314],[-3.283283],[-2.654078],[7.422314],[-7.145299],[-2.189057],[-5.524739],[-7.577525],[-8.501947],[-0.226733],[3.622193],[1.818563],[-6.150043],[-6.253410],[2.773559],[-6.533187],[-2.495671],[-6.668737],[0.088792],[-6.096280],[-2.141721],[7.696938],[-4.905363],[1.905734],[-2.054043],[-3.838343],[-1.802252],[3.994267],[2.933804],[-3.284504],[-9.228797],[3.336487],[5.989667],[-1.558974],[-8.734525],[-0.186442],[5.112998],[6.530695],[0.178267],[-4.868920],[-4.954807],[2.088640],[7.030319],[9.706109],[3.055370],[2.112680],[-7.172115],[-0.129325],[-2.605204],[-8.055093],[6.616465],[2.245952],[-7.718800],[-8.091270],[6.740971],[0.917458],[4.265686],[-2.787372],[-1.841293],[4.074194],[6.052826],[6.536686],[-5.499560],[5.979622],[-6.268379],[5.098922],[-2.889158],[5.968553],[6.194166],[-4.135182],[-7.368405],[-6.344973],[4.050564],[-3.952131],[3.822954],[2.543828],[-9.977414],[-0.362058],[-2.348380],[2.843733],[-7.527313],[-6.497783],[6.694516],[4.245233],[6.832939],[-3.194509],[-1.246517],[5.778610],[3.022298],[8.812644],[-7.129222],[-6.706955],[3.830046],[9.563137],[-2.465010],[9.225177],[3.595461],[-4.335983],[8.899393],[8.442625],[0.816108],[-8.244860],[-1.492920],[1.907145],[-1.433868],[-5.023555],[2.503279],[8.550874],[-3.551807],[-5.505675],[-6.789134],[0.608749],[6.609065],[-2.052320],[3.900325],[0.179951],[7.728234],[-6.431203],[-6.078860],[-2.077001],[-2.383410],[0.646849],[0.830333],[3.470283],[5.975901],[-3.968954],[1.011865],[2.899722],[5.265348],[9.853928],[8.529221],[-3.763997],[-8.799992],[-0.453422],[-7.610569],[2.024944],[-1.705736],[5.666107],[-4.805589],[2.654888],[-0.515454],[6.689347],[2.610507],[8.958642],[-7.910592],[8.167426],[3.125399],[0.508401],[8.793247],[-8.470253],[-1.994164],[-5.354201],[-3.854659],[-1.597507],[-6.397458],[-6.412105],[8.764020],[-5.649963],[-0.707770],[-4.913608],[-7.598413],[-2.030611],[0.627118],[-5.696884],[-7.059323],[-2.491033],[-0.054566],[4.564080],[-6.068664],[1.460122],[9.683136],[-9.979412],[5.978908],[6.737968],[-1.664323],[2.710938],[9.150002],[-4.341191],[4.825518],[9.903312],[-2.475880],[-1.969328],[7.689564],[1.414469],[0.581430],[-0.590765],[5.668833],[1.588064],[-1.660799],[-4.316826],[-7.204243],[8.316797],[-3.082187],[-6.424275],[-4.624733],[0.141930],[-2.292785],[-4.479609],[4.670962],[4.275237],[-1.454501],[2.988734],[-2.556349],[7.973123],[8.259232],[1.846751],[2.121607],[4.810344],[0.818312],[8.787824],[-6.761394],[-5.649273],[-7.393683],[-1.647699],[-4.534232],[-2.468558],[6.099058],[-3.632653],[-5.646456],[-5.410946],[-7.805800],[-6.281859],[3.366559],[9.237452],[2.808923],[-8.086556],[8.722404],[-4.360555],[7.721101],[0.277005],[1.977793],[7.429514],[1.304519],[-0.536431],[5.322276],[9.685185],[6.232781],[1.453930],[2.646780],[5.708972],[1.668059],[-0.995430],[-5.909011],[-2.882496],[8.111582],[5.455034],[3.391828],[-2.880502],[5.806658],[-5.680378],[5.718106],[-2.648580],[5.736314],[8.243816],[-0.349815],[-5.400910],[9.925608],[-6.338706],[4.534946],[4.482322],[-9.484094],[2.656686],[6.532321],[-8.785983],[2.290989],[1.727266],[-4.007740],[8.542613],[4.388837],[-6.911637],[9.278756],[8.295674],[-7.712978],[-5.371539],[-7.961092],[-6.680182],[-6.896419],[-5.834418],[1.569000],[-1.188519],[-2.283282],[-7.330154],[7.638226],[-1.090503],[-3.829406],[-1.160244],[4.713470],[-0.517097],[2.394469],[-1.200676],[6.971569],[-3.854969],[-1.118466],[0.722613],[3.053437],[-9.561320],[-0.290506],[-5.121082],[-1.301995],[-6.960732],[-2.860839],[-0.539180],[2.105603],[2.421760],[4.154965],[-1.305772],[-7.317868],[2.832608],[-3.691168],[5.763242],[-0.748132],[2.765608],[-0.544373],[7.796449],[-3.793361],[8.753465],[-8.797929],[1.156583],[9.157696],[1.135656],[-0.731265],[3.660325],[-6.623644],[9.120577],[2.419419],[1.520812],[1.106119],[-6.027708],[-1.008161],[-5.849093],[-8.992073],[2.528308],[-6.444686],[-2.663738],[8.003386],[-4.753269],[6.486740],[6.460485],[-0.267956],[-4.231487],[0.529225],[-9.071221],[-8.139025],[-9.776881],[-0.187434],[-9.043748],[-8.442490],[5.518776],[-4.869511],[-5.717020],[0.407773],[0.507514],[-1.928421],[7.819921],[2.695903],[8.741743],[2.600951],[3.870911],[-5.787820],[-5.451231],[3.009922],[4.906056],[2.111077],[-9.306715],[-9.749499],[5.021954],[4.992769],[2.873290],[5.423026],[3.185261],[-5.705001],[1.691268],[-3.672683],[-9.057511],[-9.932937],[8.285052],[1.431557],[-7.558960],[5.572078],[-3.288194],[9.744039],[-5.353422],[-5.770913],[6.319665],[-2.331861],[-9.102105],[4.095356],[-2.962652],[5.506276],[-1.484602],[7.523833],[6.996406],[3.917296],[5.793869],[-8.147685],[-5.631864],[-6.194573],[-5.734947],[-2.940882],[-7.192358],[-4.258844],[-3.791715],[1.542966],[2.405331],[4.440634],[-0.069824],[0.296633],[4.332107],[5.902291],[-0.201257],[-8.312834],[-8.621863],[0.935736],[6.131461],[-1.722003],[-5.680845],[-2.338216],[-1.509616],[5.783813],[-0.627935],[6.679097],[7.065513],[-6.324538],[6.619937],[-6.270258],[8.232156],[4.929502],[3.951444],[9.665441],[-8.360166],[-0.161652],[-5.351205],[0.973938],[-0.437749],[1.212642],[8.036904],[-3.278247],[5.274712],[6.645590],[-5.851132],[-5.486607],[-3.834547],[9.183151],[-6.865929],[-2.651006],[-6.766891],[0.737193],[-9.887382],[0.057132],[7.169528],[3.459929],[-5.935073],[-7.220617],[9.809653],[-2.420958],[2.561809],[5.370730],[-1.140049],[7.215327],[6.150639],[-0.638702],[-1.810217],[4.733716],[-9.658064],[-4.216610],[9.453760],[7.307488],[4.122844],[6.615977],[5.388174],[-0.501126],[8.153864],[6.305195],[7.986790],[-9.882447],[-5.035931],[-9.654074],[7.769461],[7.125790],[4.049095],[6.898688],[-3.627957],[-9.151652],[-0.701691],[-3.228433],[8.882346],[-6.748843],[-2.062839],[7.823254],[-1.579889],[0.386752],[-0.327035],[-8.801313],[6.046479],[3.764959],[7.811591],[8.392107],[5.932243],[9.256032],[1.404822],[-3.345025],[-2.063778],[3.549054],[-1.763572],[-6.929901],[2.618116],[0.429901],[-9.741972],[8.817792],[-9.804842],[-8.678154],[6.869237],[9.895902],[5.975538],[5.872777],[-5.898203],[9.753253],[-7.261173],[8.632425],[0.752195],[-0.764245],[6.682928],[-1.938395],[0.185915],[9.504679],[3.266705],[0.919241],[2.185973],[2.952386],[9.760961],[-3.894293],[-7.560590],[-4.992418],[-0.572930],[6.050189],[-4.431716],[-4.591322],[-5.767196],[9.421308],[-6.870994],[1.186881],[-0.517589],[3.778852],[6.875753],[-8.954067],[0.799361],[-1.031516],[-6.207990],[-9.444000],[-0.205900],[2.902618],[3.700539],[1.172958],[-0.111685],[8.047920],[1.527306],[-4.742983],[9.047245],[-4.269387],[4.779393],[2.918447],[9.830020],[-1.697131],[4.610149],[-7.986659],[0.939344],[-9.544514],[-5.878310],[-2.502298],[-6.787793],[9.415238],[-1.463288],[6.610004],[4.977658],[-7.146456],[-2.310822],[9.734239],[0.431024],[2.362071],[8.287826],[-7.745306],[1.957039],[3.770625],[-6.742643],[3.193667],[-7.623105],[4.388667],[-3.787507],[-3.857764],[-3.964493],[-1.490054],[4.568420],[-8.569221],[-9.204680],[6.123663],[0.379127],[-6.559261],[-0.830962],[-7.315992],[4.933230],[8.541902],[1.260200],[-8.505987],[5.357181],[3.566471],[0.103757],[-1.949216],[-0.465131],[5.398594],[-3.823216],[-1.738641],[-9.438932],[7.174362],[-2.307765],[-7.686900],[1.940028],[2.117132],[-8.226027],[-9.595433],[8.180041],[8.025188],[-8.841648],[8.942189],[-6.851273],[0.262273],[8.527811],[-6.104672],[-3.818342],[-5.418373],[-4.063940],[-6.931760],[-7.954884],[-7.762962],[8.387746],[-8.190117],[-2.142270],[2.396214],[3.647997],[1.292509],[8.656399],[-9.401597],[-2.615189],[-4.573636],[-8.526318],[-4.235442],[0.124618],[-7.941694],[-3.961337],[-0.341829],[-2.142006],[-5.792198],[-6.533166],[1.313782],[-4.975456],[6.401416],[0.903554],[-7.908810],[2.625720],[-6.030622],[0.564570],[-5.352037],[6.564545],[-0.551803],[6.684304],[9.212046],[0.785524],[-3.515327],[2.110440],[0.565128],[5.789465],[8.762408],[0.869222],[-1.640951],[-7.941939],[-5.880138],[9.988817],[1.559518],[-1.741203],[4.494059],[-2.565750],[6.442979],[-5.266187],[-2.931704],[6.868267],[-9.911856],[-5.299890],[3.969742],[8.611070],[-4.975316],[-6.278592],[-9.896584],[0.257423],[-8.493059],[6.413195],[9.367593],[-3.939414],[-5.165506],[2.347642],[-6.515168],[-3.197193],[0.758789],[-4.896169],[-6.915363],[-3.394329],[9.188371],[-5.835730],[3.417946],[3.503294],[5.749354],[5.631917],[8.558121],[8.879911],[-9.382619],[-7.829841],[5.706331],[5.106245],[8.263478],[2.427677],[-6.924850],[2.023939],[-5.369162],[4.827627],[3.072294],[8.547554],[2.940125],[-0.611883],[-0.824468],[-3.007703],[-1.368156],[7.078537],[-1.951156],[-7.322344],[-3.779920],[2.670121],[0.612653],[-8.429337],[-4.749062],[9.409812],[4.260080],[-7.517479],[7.081272],[8.402874],[-8.681437],[1.995815],[-0.709202],[-3.679103],[1.674621],[-6.761988],[-9.675664],[-8.198748],[-7.336571],[1.642342],[-7.051513],[1.118160],[5.097594],[3.108298],[-3.549172],[-0.001859],[-8.933893],[9.003260],[-0.025885],[4.005119],[-8.506724],[9.916203],[-0.767975],[-9.750110],[5.222824],[0.678630],[4.765741],[4.906824],[5.726722],[5.467443],[6.559114],[-3.286475],[0.473750],[-7.407863],[-9.270622],[-8.791633],[6.417602],[9.279148],[9.584783],[7.596137],[-9.043255],[0.898073],[8.128409],[-1.442230],[7.676260],[-9.359218],[-7.541584],[-4.060052],[-2.053958],[7.330583],[2.073744],[6.654414],[-8.564109],[-6.742453],[-3.611862],[-2.609428],[-5.328977],[-4.950756],[-4.767855],[-6.791536],[7.601445],[-7.126112],[-6.230246],[9.844604],[3.044760],[2.818621],[-0.518485],[1.318410],[0.729431],[0.424036],[9.410523],[-3.401398],[5.360674],[8.751693],[-1.026998],[5.943020],[-8.904630],[3.304031],[-4.971217],[6.928836],[8.306861],[-5.959896],[3.833452],[-9.997465],[1.954679],[2.758552],[5.714503],[4.415453],[-6.232000],[-4.919761],[-9.469372],[-7.582340],[3.300319],[4.506411],[5.439106],[4.863383],[5.531682],[-4.886523],[-0.741670],[-8.670349],[-2.467226],[-7.379784],[7.817032],[-3.175055],[5.455335],[-0.327952],[-9.538527],[-5.073424],[-7.151301],[-1.623163],[9.721605],[8.043891],[5.693329],[4.131653],[-6.714649],[-2.551473],[5.663915],[9.472769],[-0.373251],[5.347988],[-8.173826],[3.193412],[-1.832402],[1.567502],[-6.396637],[-2.755428],[7.927573],[-7.139717],[-2.141854],[-1.630715],[1.588559],[0.638519],[-3.258249],[-5.139902],[8.997977],[-1.067445],[2.026809],[-3.444285],[7.503465],[9.557651],[8.273217],[8.437798],[9.522247],[-5.951170],[-5.250087],[-1.670940],[2.775119],[-4.048096],[-1.305610],[-8.562879],[-0.560914],[-3.226636],[-1.947615],[-8.710844],[-7.844010],[0.043879],[5.281317],[-6.562305],[7.432263],[-9.764904],[-1.812910],[3.765343],[0.235828],[2.035076],[-5.527762],[8.412402],[-3.506763],[3.593547],[-3.050960],[-3.037699],[7.087176],[4.592043],[8.389207],[0.472620],[-5.666885],[-4.286766],[-5.140194],[-1.614752],[9.624411],[-1.869950],[0.535461],[3.707662],[4.021102],[-4.364033],[-1.267359],[-2.198972],[7.061901],[-1.097578],[8.462977],[6.999193],[-5.701344],[-6.189169],[9.027435],[-0.447912],[-4.652970],[2.953871],[-0.121868],[6.616460],[6.732851],[5.747238],[9.091827],[0.702712],[5.805032],[1.527397],[3.391925],[-8.777174],[-1.876880],[-7.480718],[9.331593],[-9.705659],[2.321616],[5.037512],[-7.675359],[7.944625],[7.525837],[1.233247],[-4.400009],[1.058516],[8.752207],[9.446581],[7.219904],[-1.041627],[-8.562844],[2.937658],[7.304951],[-1.834726],[0.442172],[-6.217934],[-3.456047],[5.148002],[-1.856377],[-5.362760],[6.637940],[9.259884],[-0.100651],[8.810252],[-2.503441],[1.696364],[6.465977],[3.428660],[5.716886],[6.596980],[5.354159],[-2.085600],[-8.417262],[3.554286],[8.252946],[9.300738],[6.445691],[5.533909],[4.428010],[4.705590],[-5.049132],[7.882061],[-5.732788],[-7.147390],[-0.037190],[-1.517909],[0.028507],[6.948957],[9.212163],[-8.251710],[1.321012],[0.755754],[-3.857216],[-0.938548],[-6.276005],[-1.664382],[9.085785],[-3.373334],[-4.379035],[8.885531],[-0.672194],[-1.577165],[-1.114964],[1.502639],[4.202965],[-1.492470],[-7.506802],[1.889247],[-9.394378],[-6.580508]], dtype = "float64")#candidate|1620|(1386, 1)|const|float64
call_1619 = relay.TupleGetItem(func_487_call(relay.reshape(const_1620.astype('float64'), [9, 11, 14])), 1)
call_1621 = relay.TupleGetItem(func_489_call(relay.reshape(const_1620.astype('float64'), [9, 11, 14])), 1)
func_312_call = mod.get_global_var('func_312')
func_315_call = mutated_mod.get_global_var('func_315')
const_1623 = relay.const([0.611750,-8.304154,-1.962364,-8.425786,-1.713935,-0.322565,-8.231317,4.024669,3.165817,7.097886,-6.654775,-9.288481,0.054551,6.453554,7.785350,5.824271,-6.593256,4.661971,5.280749,3.483223,6.439889,-8.274004,-6.343480,7.157230,-5.567086,2.024795,-0.887581,-8.628389,5.803241,-9.611200,-5.310537,4.643673,-3.988063,5.690065,-1.378080,0.468137,-4.943802,3.662183,5.127498,9.720908,-4.225546,-6.962960,-3.881166,-2.925125,-9.573487,7.104920,2.766096,-8.354180,2.334143,5.814287,-7.978112,8.756518,-9.186079,8.237886,2.459083,4.986755,0.650301,1.396343,1.122134,7.631954,-3.064725,-2.754401,-6.730564,7.246155,-8.317432,1.110368,-3.596493,-4.709850,-3.492004,-4.980450,-1.419252,3.337458,-4.319468,5.208611,-9.194851,3.112157,7.429788,-3.692851,-4.028916,1.032655,-9.602195,7.909316,5.821581,-4.893999,3.009236,-7.235073,-4.991212,-4.544927,-9.438474,-4.256714,-4.532763,1.316549,5.714095,6.098083,-9.835000,4.271368,-2.001031,8.836169,-7.754387,8.137823,-3.291264,5.355170,8.235433,3.405800,7.528284,-6.701915,-6.404255,-0.031869,-3.213688,2.737422,-8.667804,1.992018,-3.415413,4.787763,-2.541424,-3.780979,-1.011171,-9.921928,3.337154,5.879047,5.444727,6.179539,6.088210,-3.814308,8.840639,-0.891166,-7.009832,-3.011270,-6.226673,6.346619,-1.960198,-9.427227,7.281108,-8.736673,-3.259980,2.959915,-9.489064,0.730391,-7.889708,3.844575,-0.526855,-6.908896,3.575800,7.368685,-4.849514,4.944952,-9.855326,3.790115,-0.910083,4.674506,9.455711,-2.767315,0.588435,0.775100,8.165756,9.824582,0.021674,-1.564557,8.605180,-5.041353,-1.289992,-8.699847,9.181165,-6.428000,-4.996638,2.327526,9.450169,6.799617,3.070950,-0.780290,5.631657,-4.730781,7.582894,9.882782,-1.359958,-4.647221,5.357313,-6.494278,-9.099655,-2.624226,-8.833423,-6.386491,-3.017361,-2.411270,5.553331,-4.765613,-7.662243,2.024472,-9.322371,-9.537128,-2.811879,0.315615,-5.719612,3.947001,9.226833,4.388553,4.436814,4.102529,4.558689,5.769369,-8.387858,8.540604,5.565594,6.304904,2.566006,-0.768578,-4.256127,-4.646000,4.623611,-3.319575], dtype = "float64")#candidate|1623|(210,)|const|float64
call_1622 = relay.TupleGetItem(func_312_call(relay.reshape(const_1623.astype('float64'), [7, 15, 2])), 0)
call_1624 = relay.TupleGetItem(func_315_call(relay.reshape(const_1623.astype('float64'), [7, 15, 2])), 0)
func_1406_call = mod.get_global_var('func_1406')
func_1407_call = mutated_mod.get_global_var('func_1407')
call_1633 = relay.TupleGetItem(func_1406_call(), 0)
call_1634 = relay.TupleGetItem(func_1407_call(), 0)
func_1271_call = mod.get_global_var('func_1271')
func_1272_call = mutated_mod.get_global_var('func_1272')
call_1635 = relay.TupleGetItem(func_1271_call(), 0)
call_1636 = relay.TupleGetItem(func_1272_call(), 0)
func_103_call = mod.get_global_var('func_103')
func_106_call = mutated_mod.get_global_var('func_106')
var_1639 = relay.var("var_1639", dtype = "bool", shape = (32,))#candidate|1639|(32,)|var|bool
call_1638 = relay.TupleGetItem(func_103_call(relay.reshape(var_1639.astype('bool'), [4, 2, 4])), 0)
call_1640 = relay.TupleGetItem(func_106_call(relay.reshape(var_1639.astype('bool'), [4, 2, 4])), 0)
func_1126_call = mod.get_global_var('func_1126')
func_1128_call = mutated_mod.get_global_var('func_1128')
call_1647 = func_1126_call()
call_1648 = func_1126_call()
bop_1651 = relay.divide(call_1622.astype('float64'), relay.reshape(const_1623.astype('float64'), relay.shape_of(call_1622))) # shape=(7, 15, 2)
bop_1654 = relay.divide(call_1624.astype('float64'), relay.reshape(const_1623.astype('float64'), relay.shape_of(call_1624))) # shape=(7, 15, 2)
uop_1657 = relay.log10(const_1620.astype('float64')) # shape=(1386, 1)
output = relay.Tuple([bop_1611,call_1619,call_1633,call_1635,call_1638,var_1639,call_1647,bop_1651,uop_1657,])
output2 = relay.Tuple([bop_1611,call_1621,call_1634,call_1636,call_1640,var_1639,call_1648,bop_1654,uop_1657,])
func_1659 = relay.Function([var_1609,var_1610,var_1639,], output)
mod['func_1659'] = func_1659
mod = relay.transform.InferType()(mod)
var_1660 = relay.var("var_1660", dtype = "uint8", shape = (3, 13, 16))#candidate|1660|(3, 13, 16)|var|uint8
var_1661 = relay.var("var_1661", dtype = "uint8", shape = (3, 13, 16))#candidate|1661|(3, 13, 16)|var|uint8
var_1662 = relay.var("var_1662", dtype = "bool", shape = (32,))#candidate|1662|(32,)|var|bool
output = func_1659(var_1660,var_1661,var_1662,)
func_1663 = relay.Function([var_1660,var_1661,var_1662,], output)
mutated_mod['func_1663'] = func_1663
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1406_call = mod.get_global_var('func_1406')
func_1407_call = mutated_mod.get_global_var('func_1407')
call_1674 = relay.TupleGetItem(func_1406_call(), 0)
call_1675 = relay.TupleGetItem(func_1407_call(), 0)
output = call_1674
output2 = call_1675
func_1677 = relay.Function([], output)
mod['func_1677'] = func_1677
mod = relay.transform.InferType()(mod)
mutated_mod['func_1677'] = func_1677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1677_call = mutated_mod.get_global_var('func_1677')
call_1678 = func_1677_call()
output = call_1678
func_1679 = relay.Function([], output)
mutated_mod['func_1679'] = func_1679
mutated_mod = relay.transform.InferType()(mutated_mod)
func_120_call = mod.get_global_var('func_120')
func_122_call = mutated_mod.get_global_var('func_122')
call_1690 = func_120_call()
call_1691 = func_120_call()
func_1478_call = mod.get_global_var('func_1478')
func_1481_call = mutated_mod.get_global_var('func_1481')
call_1702 = relay.TupleGetItem(func_1478_call(relay.reshape(call_1690.astype('bool'), [14, 4, 3]), relay.reshape(call_1690.astype('float64'), [14, 4, 3]), ), 1)
call_1703 = relay.TupleGetItem(func_1481_call(relay.reshape(call_1690.astype('bool'), [14, 4, 3]), relay.reshape(call_1690.astype('float64'), [14, 4, 3]), ), 1)
func_1406_call = mod.get_global_var('func_1406')
func_1407_call = mutated_mod.get_global_var('func_1407')
call_1709 = relay.TupleGetItem(func_1406_call(), 0)
call_1710 = relay.TupleGetItem(func_1407_call(), 0)
func_1151_call = mod.get_global_var('func_1151')
func_1152_call = mutated_mod.get_global_var('func_1152')
call_1716 = relay.TupleGetItem(func_1151_call(), 0)
call_1717 = relay.TupleGetItem(func_1152_call(), 0)
output = relay.Tuple([call_1690,call_1702,call_1709,call_1716,])
output2 = relay.Tuple([call_1691,call_1703,call_1710,call_1717,])
func_1718 = relay.Function([], output)
mod['func_1718'] = func_1718
mod = relay.transform.InferType()(mod)
mutated_mod['func_1718'] = func_1718
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1718_call = mutated_mod.get_global_var('func_1718')
call_1719 = func_1718_call()
output = call_1719
func_1720 = relay.Function([], output)
mutated_mod['func_1720'] = func_1720
mutated_mod = relay.transform.InferType()(mutated_mod)
func_355_call = mod.get_global_var('func_355')
func_356_call = mutated_mod.get_global_var('func_356')
call_1740 = relay.TupleGetItem(func_355_call(), 5)
call_1741 = relay.TupleGetItem(func_356_call(), 5)
output = call_1740
output2 = call_1741
func_1751 = relay.Function([], output)
mod['func_1751'] = func_1751
mod = relay.transform.InferType()(mod)
output = func_1751()
func_1752 = relay.Function([], output)
mutated_mod['func_1752'] = func_1752
mutated_mod = relay.transform.InferType()(mutated_mod)
func_355_call = mod.get_global_var('func_355')
func_356_call = mutated_mod.get_global_var('func_356')
call_1763 = relay.TupleGetItem(func_355_call(), 4)
call_1764 = relay.TupleGetItem(func_356_call(), 4)
func_1323_call = mod.get_global_var('func_1323')
func_1325_call = mutated_mod.get_global_var('func_1325')
const_1774 = relay.const([-8.547920,9.536222,-0.318483,-1.195641,-0.312894,9.710394,9.143367,0.642094,5.257925,-3.422608,0.707905,3.375686,-9.328509,2.439150,0.307941,8.259369,-7.049379,-3.599668,-7.632618,-2.599894,-4.224190,-3.588495,-6.638960,-9.179157,8.105429,-0.004988,-2.161843,1.693053,-8.867668,-4.372758,0.195123,7.155516,-7.834267,5.254476,-3.988081,-1.038003,1.855250,-9.710447,-8.012543,8.473786,-9.486633,7.686210,2.120401,6.448238,8.828308,7.833592,4.954804,-4.672055,-5.302783,-1.001372,9.011960,8.353930,3.783114,-5.737680,-2.479498,2.638974,-9.515499,-2.008598,-1.744710,8.150917,5.256617,-8.538555,6.819565,4.389892,-3.468592,-2.035480,-6.936337,-6.676460,2.259084,1.122645,0.648594,-8.586082,2.183623,5.090221,-3.702116,4.018048,-2.123043,-7.380999,6.185744,9.693018,-3.493775,9.403669,-5.701166,-8.184445,5.891291,5.871482,2.019113,-2.190241,-8.240509,-1.511533,-4.795620,0.877356,9.210278,-2.323878,2.451782,2.156900,4.437729,-0.448551,-4.662933,5.309193,-2.879309,-1.704344,9.287669,5.484598,4.664742,-0.926515,1.229104,-0.269774,-9.344354,9.922611,-4.798603,2.757140,-3.178717,3.025387,-0.483217,-5.069333,-3.789998,-5.531454,7.923126,6.184455,5.092335,-9.329318,5.364935,-4.905874,8.916789,8.831743,-2.284312,3.461576,-1.851848,6.169480,9.366552,-8.835672,6.673971,8.506168,-7.748473,5.723641,3.578726,-4.508514,-5.794956,-8.445336,7.393766,6.094402,-0.575542,-5.998130,-3.289128,2.355410,2.676708,7.026124,5.295047,0.195890,0.822890,2.206862,-0.915426,-1.771733,-3.488753,-9.707457,-4.080068,8.656928,-4.036730,-1.046264,-7.054620,-3.481652,5.789866,-7.829922,2.709470,-3.655246,-9.177773,9.256556,4.257710,7.847336,-8.679257,0.512514,2.657270,1.315974,-2.404360,-2.509046,1.469813,-5.093432,-7.153680,5.924762,-5.207169,8.187321,-4.747245,9.438035,-5.180318,1.467270,-3.780825,6.227652,-5.419613,0.070937,-3.133171,3.492596,4.680364,-8.367089,-8.477863,9.779742,7.238043,3.966676,9.958006,-8.937884,2.659963,-8.976591,-3.079048,9.186303,-4.735412,-6.477472,9.723605,-1.798841,1.110492,-2.173492,4.896557,3.828651,-8.496877,-9.044496,9.130350,1.265907,-8.761562,4.994263,-2.093940,0.283063,3.973153,5.005623,9.643169,4.062848,9.148922,-7.568042,7.309588,0.022272,-7.024337,6.986227,-0.128154,-1.250607,-4.537296,-1.026531,5.226636,7.485866,0.832945,0.361699,7.488876,2.780991,-2.063801,3.132459,9.119765,-2.463654,-2.597342,-4.656901,-1.538893,0.674536,-1.173190,6.631500,-0.317593,-1.812228,-3.416622,-8.806977,5.592620,-6.179110,-8.514199,0.824028,-5.385253,0.051399,-9.970867,-7.939179,8.773850,2.502208,6.851437,9.255293,-2.853713,8.260268,0.673040,-0.756964,4.568568,-5.821131,-4.650259,-4.228471,7.823751,6.012797,2.997936,2.528492,4.553105,-5.772093,2.748658,-1.392428,2.262655,-2.655288,-6.392507,2.086601,4.431081,3.641888,-3.144035,7.614219,4.199613,8.374755,-0.633181,4.343078,6.080058,-5.450789,7.785483,-0.807208,-6.370248,1.901403,1.976096,-4.241245,4.259350,-5.844891,1.718663,3.498538,-0.946937,5.585501,9.345778,4.477282,-2.888896,-7.952398,-8.660362,2.314967,6.466487,6.119302,8.903729,-5.721707,3.108975,-1.563917,-8.441749,-4.090631,-1.716691,2.326171,-0.533859,5.865863,-6.322941,1.647390,-0.067894,0.906681,4.584934,0.922419,-9.324799,1.632755,-7.901980,1.161746,-8.175589,-3.733074,6.650701,-0.845682,-8.865851,2.858979,3.814241,4.115664,9.757181,-6.214602,-7.957977,7.095267,8.254003,-2.411813,6.420055,-8.501415,2.667607,-7.142839,-6.899034,7.666753,-8.681195,4.767317,2.423424,-1.426412,5.763320,7.429162,-6.930486,-5.691006,-2.588619,7.611274,-3.073406,5.069147,-4.982314,7.037575,-4.007594,8.506287,2.231339,9.297694,-9.547427,3.285913,-5.233092,4.614243,7.700299,-6.154177,-2.220926,4.438174,4.757965,6.393687,2.821815,-3.044347,6.812089,-2.285100,-6.696140,6.504224,8.166530,-2.670481,6.604865,-2.003603,0.269434,-6.455698,0.020067,5.052096,-2.576262,-6.433388,5.045300,-8.389208,0.317744,7.071048,-5.051456,-7.199470,8.568179,8.043888,-0.855991,0.786931,-3.091379,0.085375,-4.517822,-8.388668,3.431614,-8.595418,5.721870,7.270793,1.756450,-3.400476,4.701538,-5.782981,2.298665,-5.174004,6.173401,8.354862,4.396601,5.233766,8.965905,4.081124,5.703867,1.406625,-7.601641,0.081530,6.520089,4.800446,-8.094176,3.115314,5.570763,6.828115,-6.962267,-5.703928,7.525569,8.714160,7.870532,-4.166947,-8.112417,8.383432,-6.078681,-5.461079,-1.114567,8.723861,2.638024,-0.518470,-3.215905,-9.616438,-3.821085,-4.149171,-5.598496,0.734149,-3.954398,-5.721447,9.166084,7.048962,-4.470822,-2.403760,8.151380,7.975626,-6.436968,5.786766,2.796502,9.582225,-7.884617,-3.054361,2.830997,-7.815607,1.789061,-5.619474,-1.333375,-2.186667,-4.289346,7.876726,-9.225339,-4.863335,-0.052667,7.481312,1.957456,-7.499718,6.507693,0.301377,-5.501292,-7.753665,-4.052443,-9.800471,6.579552,-6.602544,6.232881,5.475210,-2.481746,7.293007,-0.423892,6.682512,8.141143,7.326772,-4.132500,-1.214927,9.968158,-9.372099,6.619205,-8.978557,4.377489,-8.449614,3.879394,7.837839,-4.122306,-8.344157,2.070917,-0.309344,9.401715,1.137724,-2.847316,-7.729601,2.844511,-5.807701,-6.864109,9.203465,9.214760,-8.069910,7.510619,-1.586494,-9.345054,-1.537160,-0.990913,4.588936,5.194247,8.066263,-5.266286,0.570124,-3.150819,-2.449484,-5.475371,1.756561,-1.562938,-9.226256,6.456341,6.185342,-2.242997,9.380925,-1.672242,-4.694661,-2.725568,-7.818693,-9.958214,-2.931122,4.664782,7.175375,-8.969109,3.963614,-2.327203,-1.629931,-2.322505,-0.689974,-9.015309,-0.055575,-9.597279,-5.583602,-2.685775,8.291137,-4.270334,-1.905800,-4.159431,4.859621,-0.649207,8.020231,7.347833,-9.394566,0.008632,-3.931053,-7.026082,9.304693,2.599734,7.456172,-0.564753,-1.390151,-5.984991,-2.141184,-5.827612,2.040906,-5.687902,-5.307122,1.778030,2.555552,2.110705,-8.006377,-4.692733,-9.410196,9.119730,-4.720478,-1.544384,-1.666109,1.369462,7.634741,-9.449742,-7.540252,-7.236095,-3.588394,8.844928,-3.568670,5.276007,-4.379181,-8.558967,-0.763919,4.407296,2.518684,6.024565,-9.277675,-1.685651,6.275904,0.489966,1.704966,-6.332757,9.544256,-8.398997,-7.419656,-9.871620,5.973027,8.416574,-5.427915,-4.543485,-2.377452,7.336120,-0.375900,-5.692071,-4.064411,5.867902,7.139839,-7.791236,3.816535,9.297224,-7.468370,0.741415,-7.016714,2.587788,1.501589,6.322943,-9.191721,-4.223917,-4.231976,-8.803647,-4.516601,7.076255,2.439784,-2.308108,-3.848081,-4.337886,3.577592,-8.266828,-2.292295,-0.426633,-1.448546,2.311060,-0.637857,3.509530,-3.042189,-3.679784,-2.480266,3.586989,2.761193,-4.277418,4.426761,-3.164062,-1.902483,-3.867117,5.470189,-3.596775,-2.067510,-5.581805,-9.607903,-6.467959,3.731515,9.882320,-8.628149,1.847633,1.712302,0.139623,-4.435830,9.673600,-2.552982,4.530824,0.566449,6.939441,2.890283,-0.667037,-2.268228,-2.119727,8.798752,4.579372,-6.982747,1.593835,-6.885969,-1.628314,9.221284,-5.275761,-7.408018,0.758452,4.247203,3.113713,-2.663057,-1.473450,-7.180580,-5.600282,8.990134,2.622609,-6.635553,0.311279,4.613613,9.689185,8.587426,5.130779,3.809697,9.027691,8.529703,3.659940,2.301497,-0.760513,-1.315772,7.339206,-5.164454,-1.365075,-1.186589,-0.444960,4.680204,-2.927780,3.514680,-6.989837,-6.231634,7.626186,0.077915,1.199238,6.212705,-1.566883,-8.043410,0.381535,4.252191,4.271229,7.951120,6.709939,2.608114,1.880991,5.060246,6.041471,-7.468985,-1.995021,7.937956,-1.025299,7.681767,-8.033189,-0.207985,1.923926,0.958472,8.958258,-0.840804,-5.375885,-2.538057,-2.940077,4.019276,7.872947,-0.110629,7.656410,2.729602,-3.361151,8.361355,-4.724826,-1.671595,4.645163,-5.346745,-2.946722,8.684860,-6.827971,6.636386,-9.962415,-0.042852,-4.410786,1.785538,-8.327862,2.719398,7.744306,-7.832479,-4.094785,9.601806,-7.527578,5.040687,-7.413417,8.727274,-9.618146,9.201318,-9.500394,1.025790,3.765312,-8.354182,6.762862,-4.554102,-9.068995,1.812770,-6.323858,-1.556416,-8.391259,7.029669,4.419770,-0.074080,7.464729,-4.886792,9.705466,-5.099387,-1.119950,5.659188,-5.179394,-8.631850,-1.255569,-0.372166,5.400394,4.128175,-8.017253,-4.397572,-1.602879,6.960315,0.947878,0.726623,9.460141,2.947833,-0.395694,-3.811737,-8.663818,-4.169426,-6.476642,9.575734,9.319357,6.603488,-0.192453,8.872240,-8.079207,-7.453322,-5.324136,2.154506,-6.924937,6.008503,8.669108,4.347007,1.939779,-8.605309,-0.975454,0.508932,-7.120114,0.628056,-1.177822,3.789948,-8.350047,-9.843031,1.769996,-6.847191,-5.120364,7.369253,3.704266,-2.164541,-8.934596,-5.906508,-3.113599,-5.553353,8.208114,8.559459,6.279944,-0.924175,6.736501,-9.727642,-0.416654,-1.824273,3.884812,-2.411444,-7.836819,6.119870,9.332971,-8.141780,4.041335,3.639013,-2.073339,-9.002127,9.210438,0.657105,-9.587629,-9.273410,1.373850,4.588122,-8.319127,8.163305,-9.642599,3.504567,1.669618,-0.358128,-3.581610,2.302465,-0.814795,-2.757857,-1.610818,-3.005158,-8.785508,-5.577185,5.396995,-1.392733,3.733132,0.536004,-0.139785,-1.313894,-0.981126,-8.412360,-7.102581,0.604210,3.312973,-5.582880,-1.038499,-7.126279,7.945171,-8.653380,1.924292,-9.529521,-2.155425,-8.570485,-6.371786,-3.020512,9.755196,-5.496976,-3.498144,2.928502,6.738627,-4.694785,-7.374240,-8.184644,9.044743,7.787442,8.445368,7.313228,3.021059,-0.086772,-7.214079,-2.968697,8.625291,6.895161,-7.672468,-6.946124,0.342088,8.904502,5.344636,2.524991,-6.280888,8.257145,0.589031,-5.552753,3.627180,-2.272195,1.036844,7.204609,0.952036,5.015461,8.522397,-1.991769,-4.368280,8.189452,2.008208,-0.989387,6.380926,-0.376111,-5.800379,6.687411,0.486342,-4.316629,-2.411183,-7.526257,-4.598159,6.844255,8.283137,-7.497821,-3.862730,4.882019,7.360736,2.672243,-9.131963,9.997560,-4.282069,-9.784577,-1.332098,5.687376,-1.893143,1.568561,0.122100,0.641542,-6.888077,-9.358430,4.241247,-7.650877,5.194892,5.906366,7.807131,-3.174978,8.489542,-3.596363,5.404231,-8.860277,5.805821,2.822323], dtype = "float64")#candidate|1774|(1008,)|const|float64
call_1773 = func_1323_call(relay.reshape(const_1774.astype('float64'), [16, 9, 7]))
call_1775 = func_1323_call(relay.reshape(const_1774.astype('float64'), [16, 9, 7]))
output = relay.Tuple([call_1763,call_1773,const_1774,])
output2 = relay.Tuple([call_1764,call_1775,const_1774,])
func_1784 = relay.Function([], output)
mod['func_1784'] = func_1784
mod = relay.transform.InferType()(mod)
output = func_1784()
func_1785 = relay.Function([], output)
mutated_mod['func_1785'] = func_1785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_234_call = mod.get_global_var('func_234')
func_235_call = mutated_mod.get_global_var('func_235')
call_1822 = relay.TupleGetItem(func_234_call(), 0)
call_1823 = relay.TupleGetItem(func_235_call(), 0)
uop_1829 = relay.sqrt(call_1822.astype('float32')) # shape=(14, 4, 3)
uop_1831 = relay.sqrt(call_1823.astype('float32')) # shape=(14, 4, 3)
output = uop_1829
output2 = uop_1831
func_1846 = relay.Function([], output)
mod['func_1846'] = func_1846
mod = relay.transform.InferType()(mod)
mutated_mod['func_1846'] = func_1846
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1846_call = mutated_mod.get_global_var('func_1846')
call_1847 = func_1846_call()
output = call_1847
func_1848 = relay.Function([], output)
mutated_mod['func_1848'] = func_1848
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1160_call = mod.get_global_var('func_1160')
func_1162_call = mutated_mod.get_global_var('func_1162')
call_1886 = func_1160_call()
call_1887 = func_1160_call()
output = call_1886
output2 = call_1887
func_1892 = relay.Function([], output)
mod['func_1892'] = func_1892
mod = relay.transform.InferType()(mod)
output = func_1892()
func_1893 = relay.Function([], output)
mutated_mod['func_1893'] = func_1893
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1751_call = mod.get_global_var('func_1751')
func_1752_call = mutated_mod.get_global_var('func_1752')
call_1897 = func_1751_call()
call_1898 = func_1751_call()
func_1544_call = mod.get_global_var('func_1544')
func_1546_call = mutated_mod.get_global_var('func_1546')
call_1929 = func_1544_call()
call_1930 = func_1544_call()
func_487_call = mod.get_global_var('func_487')
func_489_call = mutated_mod.get_global_var('func_489')
var_1932 = relay.var("var_1932", dtype = "float64", shape = (1386,))#candidate|1932|(1386,)|var|float64
call_1931 = relay.TupleGetItem(func_487_call(relay.reshape(var_1932.astype('float64'), [9, 11, 14])), 1)
call_1933 = relay.TupleGetItem(func_489_call(relay.reshape(var_1932.astype('float64'), [9, 11, 14])), 1)
output = relay.Tuple([call_1897,call_1929,call_1931,var_1932,])
output2 = relay.Tuple([call_1898,call_1930,call_1933,var_1932,])
func_1941 = relay.Function([var_1932,], output)
mod['func_1941'] = func_1941
mod = relay.transform.InferType()(mod)
var_1942 = relay.var("var_1942", dtype = "float64", shape = (1386,))#candidate|1942|(1386,)|var|float64
output = func_1941(var_1942)
func_1943 = relay.Function([var_1942], output)
mutated_mod['func_1943'] = func_1943
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1751_call = mod.get_global_var('func_1751')
func_1752_call = mutated_mod.get_global_var('func_1752')
call_1992 = func_1751_call()
call_1993 = func_1751_call()
var_2016 = relay.var("var_2016", dtype = "bool", shape = (32,))#candidate|2016|(32,)|var|bool
bop_2017 = relay.less_equal(call_1992.astype('bool'), relay.reshape(var_2016.astype('bool'), relay.shape_of(call_1992))) # shape=(32,)
bop_2020 = relay.less_equal(call_1993.astype('bool'), relay.reshape(var_2016.astype('bool'), relay.shape_of(call_1993))) # shape=(32,)
func_1846_call = mod.get_global_var('func_1846')
func_1848_call = mutated_mod.get_global_var('func_1848')
call_2023 = func_1846_call()
call_2024 = func_1846_call()
output = relay.Tuple([bop_2017,call_2023,])
output2 = relay.Tuple([bop_2020,call_2024,])
func_2025 = relay.Function([var_2016,], output)
mod['func_2025'] = func_2025
mod = relay.transform.InferType()(mod)
var_2026 = relay.var("var_2026", dtype = "bool", shape = (32,))#candidate|2026|(32,)|var|bool
output = func_2025(var_2026)
func_2027 = relay.Function([var_2026], output)
mutated_mod['func_2027'] = func_2027
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2046 = relay.var("var_2046", dtype = "bool", shape = (15, 1, 11))#candidate|2046|(15, 1, 11)|var|bool
var_2047 = relay.var("var_2047", dtype = "bool", shape = (15, 11, 11))#candidate|2047|(15, 11, 11)|var|bool
bop_2048 = relay.logical_or(var_2046.astype('bool'), var_2047.astype('bool')) # shape=(15, 11, 11)
var_2051 = relay.var("var_2051", dtype = "bool", shape = (15, 4, 11))#candidate|2051|(15, 4, 11)|var|bool
bop_2052 = relay.divide(var_2046.astype('float64'), var_2051.astype('float64')) # shape=(15, 4, 11)
uop_2056 = relay.asin(bop_2052.astype('float64')) # shape=(15, 4, 11)
output = relay.Tuple([bop_2048,uop_2056,])
output2 = relay.Tuple([bop_2048,uop_2056,])
func_2063 = relay.Function([var_2046,var_2047,var_2051,], output)
mod['func_2063'] = func_2063
mod = relay.transform.InferType()(mod)
mutated_mod['func_2063'] = func_2063
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2063_call = mutated_mod.get_global_var('func_2063')
var_2065 = relay.var("var_2065", dtype = "bool", shape = (15, 1, 11))#candidate|2065|(15, 1, 11)|var|bool
var_2066 = relay.var("var_2066", dtype = "bool", shape = (15, 11, 11))#candidate|2066|(15, 11, 11)|var|bool
var_2067 = relay.var("var_2067", dtype = "bool", shape = (15, 4, 11))#candidate|2067|(15, 4, 11)|var|bool
call_2064 = func_2063_call(var_2065,var_2066,var_2067,)
output = call_2064
func_2068 = relay.Function([var_2065,var_2066,var_2067,], output)
mutated_mod['func_2068'] = func_2068
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2079 = relay.var("var_2079", dtype = "int8", shape = (11, 12, 11))#candidate|2079|(11, 12, 11)|var|int8
var_2080 = relay.var("var_2080", dtype = "int8", shape = (11, 12, 11))#candidate|2080|(11, 12, 11)|var|int8
bop_2081 = relay.bitwise_or(var_2079.astype('int8'), relay.reshape(var_2080.astype('int8'), relay.shape_of(var_2079))) # shape=(11, 12, 11)
output = relay.Tuple([bop_2081,])
output2 = relay.Tuple([bop_2081,])
func_2093 = relay.Function([var_2079,var_2080,], output)
mod['func_2093'] = func_2093
mod = relay.transform.InferType()(mod)
mutated_mod['func_2093'] = func_2093
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2093_call = mutated_mod.get_global_var('func_2093')
var_2095 = relay.var("var_2095", dtype = "int8", shape = (11, 12, 11))#candidate|2095|(11, 12, 11)|var|int8
var_2096 = relay.var("var_2096", dtype = "int8", shape = (11, 12, 11))#candidate|2096|(11, 12, 11)|var|int8
call_2094 = func_2093_call(var_2095,var_2096,)
output = call_2094
func_2097 = relay.Function([var_2095,var_2096,], output)
mutated_mod['func_2097'] = func_2097
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1751_call = mod.get_global_var('func_1751')
func_1752_call = mutated_mod.get_global_var('func_1752')
call_2104 = func_1751_call()
call_2105 = func_1751_call()
func_870_call = mod.get_global_var('func_870')
func_873_call = mutated_mod.get_global_var('func_873')
const_2111 = relay.const([4.297651,0.099249,-6.230659,-7.876238,-0.614236,8.610439,5.261984,5.880322,-7.915046,-0.374557,-5.564482,8.963961,-6.267637,9.019617,3.844528,-8.031825,2.616631,2.753049,4.882806,2.138065,6.821077,-4.590507,-0.597011,9.540593,-4.988296,-2.234476,-2.805488,8.817511,0.932119,-5.346834,-1.434912,3.188210,0.691240,9.228216,-9.289778,-8.770481,-6.004954,4.387647,-5.953438,9.382736,-9.326556,6.905250,3.507915,1.617119,-3.531837,0.445751,-1.929594,-9.879128,4.714221,2.565478,9.947507,-3.592783,-8.427427,-8.600552,-0.372022,-6.085636,5.536052,8.273732,-6.643278,-8.415105,5.141446,-2.029883,-8.646097,1.647537,-8.539159,-2.315436,-7.444321,3.507890,-8.619114,3.687991,4.630877,5.743119,3.696027,3.460521,2.884977,-9.886277,3.574935,-3.995047,-2.532604,-4.949853,-2.599430,-2.093227,0.871728,-5.320618,9.342964,-9.864790,0.575257,-5.505689,5.853209,-8.644492,9.411216,5.298635,6.829193,-7.781276,0.696928,5.816366,0.562535,-3.636064,8.747204,-7.772235,-2.345756,-4.372007,-5.458278,-4.376892,-7.734453,-7.477218,-6.775040,9.149436,-5.846462,7.967678,-1.045253,4.767660,-8.887537,-2.638279,-2.993499,-6.313964,2.909254,-9.829489,9.021793,2.211437,-4.484354,1.967518,8.911193,-5.384990,1.791439,8.313928,-5.454450,5.297408,-9.655676,8.252208,2.983324,1.079178,-6.944112,-1.975158,1.721285,4.468849,-4.984634,-5.854775,8.508696,5.656144,-3.846625,-9.103270,7.972981,3.407398,8.003308,6.126465,-4.270814,-8.256231,-6.877650,1.950054,-5.629155,0.619929,3.831876,5.794193,2.390329,8.338176,8.452222,-3.087561,-5.509158,1.924622,-4.379473,-2.276835,7.293571,1.838556,5.172573,1.501549,-8.117839,-2.651823,-9.474879,-6.795356,-6.913198,4.407669,-6.320673,4.377202,3.492419,-0.171645,8.817189,5.251345,6.003228,-7.720261,8.830824,2.814606,6.009062,9.804806,5.971162,7.859660,-5.206880,0.205701,-9.398904,5.554181,7.560554,-6.285126,-9.152495,-9.506529,-2.794162,-4.924362,-8.115779,4.470747,-8.571569,-5.466713,6.414951,0.840041,-7.039515,-8.522294,3.120628,9.885110,9.193890,4.279539,7.684072,-2.814826,1.129336,2.120167,-0.743221,7.955982,8.065122,-8.853000,0.353276,-5.981892,-9.824291,-0.950000,-1.175928,8.147854,4.952918,9.585366,-0.838820,9.560599,6.676435,9.459559,2.002016,-4.585806,-4.830706,0.227698,-3.169064,-4.018996,-4.293137,0.084121,-1.646732,9.689195,7.853482,-2.989187,-9.262894,2.647610,-8.518888,0.333966,4.456629,-2.650440,-7.887748,9.113433,-2.244757,2.204392,3.423632,4.457768,6.158371,7.733019,-4.730056,-8.453294,5.074037,-5.429758,8.426125,-6.325585,1.655695,-3.208028,-8.160002,-0.345826,7.368062,-8.928834,-4.918406,-5.560915,-8.585512,6.695246,2.940771,5.635056,1.205951,-6.035022,3.726894,-4.782508,-1.837309,-1.973063,-1.717710,5.568080,-9.831629,-3.011102,1.795706,9.373991,0.360285,-5.430934,-2.388940,2.030051,0.849653,-7.558597,-4.259222,5.019080,-4.979768,-0.163445,9.879922,-9.348513,5.755486,-6.489429,-0.183962,-3.321233,-8.517129,-5.570067,-5.444128,6.371551,-6.261241,-2.056021,-1.244442,3.338419,9.473767,7.254839,4.277812,-9.516347,6.926415,6.294706,-5.532289,0.280060,5.943915,-2.526838,1.098164,2.637565,9.670152,3.565630,-4.993195,-2.991129,-3.147422,-3.766849,-4.375896,-4.715174,0.725624,0.475866,5.986513,9.161980,-2.279474,-8.608485,6.669579,2.932898,3.323480,-1.114709,1.352199,6.789218,-8.206299,0.268086,-0.408914,-0.398363,-0.692848,-7.363716,-1.553932,-8.506541,2.528490,0.128653,-2.214445,5.766295,4.049675,6.227341,1.476701,-2.321571,-0.313905,-0.997211,2.942024,6.530896,-8.786108,7.970647,7.119453,4.643416,-0.542488,6.604104,-2.119603,-0.096163,-3.494278,-0.345678,-8.632316,7.969766,7.473780,8.019029,5.926841,-1.320622,-2.990237,-8.919400,7.937029,-1.037693,-9.041277,-5.510001,5.349388,-7.716558,9.693368,4.094029,9.389571,-0.578773,-8.083756,6.636873,-6.454491,7.574678,7.346970,-6.708536,9.745940,-5.815093,-4.996338,-0.899732,2.895169,1.702802,-2.659632,-3.851183,-4.572337,-1.872103,7.885892,-2.649821,1.597836,-3.468353,6.082573,4.976543,-5.894221,0.265880,-9.347856,-6.662747,-5.913395,-0.558357,-3.491670,3.947188,-0.388167,9.457850,5.129766,9.604077,0.281420,-5.180585,1.848846,5.487671,3.099317,-6.174736,8.859131,-9.648212,4.990795,-6.873008,8.237961,-5.097836,3.791518,1.601171,0.833911,4.891275,5.971143,0.147458,7.357091,-8.468236,1.455364,-7.766314,6.144442,3.828619,-2.999178,-8.371008,7.261363,4.126349,-3.528495,2.023639,9.016511,-3.174687,-3.431303,8.796841,-7.200297,7.757069,1.151292,-5.195959,-0.741400,6.805274,4.843032,-3.412515,-9.340982,2.549079,5.465536,-5.019757,8.484672,5.242217,-5.277332,6.834959,-5.457808,0.916650,7.706075,-8.430019,9.380984,-5.031920,6.823075,6.796973,-0.139826,-7.332746,6.570861,-3.496896,6.534779,4.200994,1.615494,-8.787973,6.765366,9.088930,-6.764903,-5.217876,2.092168,-0.622229,8.010070,-1.483493,2.586683,6.136306,4.484066,9.898515,2.284491,-1.092335,-3.870842,-7.452542,-1.456994,-5.278173,1.635081,-9.102064,9.492997,9.837688,-5.261965,-6.173364,-5.813248,6.364218,5.992802,-1.636442,9.283086,8.799420,-9.624194,5.119698,4.885070,0.228809,-3.693512,2.058505,-7.113943,-3.290621,-6.322582,-4.150098,8.303648,-6.731211,1.704444,3.128276,-1.725333,-9.432494,5.401001,4.972560,5.194425,5.998483,3.905117,2.157105,-4.771201,-2.431765,-0.959260,9.790548,-8.375362,-2.865107,6.376960,-3.550246,3.468549,-4.799243,-9.531941,4.882833,-4.293315,0.226168,-8.790396,1.064043,6.885461,7.178026,3.650043,1.405915,6.587024,0.852756,8.306268,-9.478351,-6.686017,8.459034,-4.674359,-9.736624,-2.918537,-7.856534,-8.562086,3.378035,-3.088012,4.740888,0.655008,5.551393,-7.071535,9.101619,5.674305,-7.217485,-1.816682,-2.194535,4.691986,4.482155,0.538739,-8.700160,-9.291867,4.350897,-1.648768,-6.124256,1.792711,-1.452319,-3.247416,6.272752,6.326376,8.655052,-4.637353,1.999320,-7.220831,3.364097,-6.789322,1.686298,9.263747,9.394079,7.396436,8.807567,-7.179127,-1.549202,-7.779004,-9.214067,-8.228582,1.029500,2.031546,-1.588744,-7.747212,8.492027,3.613687,9.470258,6.489410,-8.351157,-9.156624,5.725469,-0.629598,0.520152,-2.348194,-3.618379,1.895441,8.717704,-4.662765,-3.925968,4.572043,-8.139925,-2.724243,4.368400,-4.571855,-2.139722,1.928452,5.599636,8.993732,-6.666269,-0.999574,-9.576061,3.778788,3.045037,2.873664,-6.426721,4.629394,0.953460,-2.911474,-2.131377,1.813592,1.073779,-9.480110,-9.586369,5.843968,0.657120,9.111014,8.033857,7.625094,8.811442,-4.110830,9.868068,-8.517768,2.439886,9.365600,1.174060,-8.899845,-1.207192,-2.028731,-4.615797,1.467817,0.022067,-8.668445,4.826836,1.663816,-0.768937,-1.150698,-7.063042,5.751740,4.306183,7.556696,5.591952,3.801169,-3.920864,-0.810254,5.430870,6.653705,-3.783976,7.602123,8.167340,-2.483004,-2.258286,-8.678211,5.178547,-3.797622,-0.358453,-7.574945,1.032261,3.927700,9.914510,7.671573,-3.158128,1.070306,-0.621620,-7.376558,-0.277095,8.302213,-9.879060,2.990547,9.838966,-7.169975,1.820432,2.485370,1.386522,-1.045111,-8.728796,4.070732,-9.718024,-4.420151,-1.306627,4.954775,8.599996,7.956706,-5.875194,-9.412230,3.624628,9.285603,3.252634,5.604092,-9.437170,8.861719,3.884405,1.464495,1.361999,-3.587723,-7.363143,-0.525695,6.901435,1.626820,-2.004383,5.129618,1.643756,-0.134453,-2.754948,3.945760,-1.488841,4.083341,7.912014,9.718198,-9.461971,-0.801285,7.020846,7.860593,2.980565,-3.659158,-2.659844,6.114111,0.844593,-9.932993,7.286280,-3.607357,-8.371836,-4.499254,-2.043965,-5.058385,9.835323,3.118781,-3.564911,8.798928,-7.001432,0.104637,-9.862137,-7.235363,2.077120,2.234774,-4.304869,-0.281245,6.029537,-4.289236,-8.849028,4.565879,-0.964005,3.552532,3.679391,-7.251346,-4.837989,-7.049256,-3.561500,-2.912041,5.581808,-9.333128,0.584052,-3.572650,8.211416,-7.848359,5.547790,-9.287202,3.347353,-9.072975,-8.158336,-2.493925,1.954857,6.006524,5.981304,1.436489,7.893817,-2.090181,-9.096816,-9.987340,2.022101,6.180805,-7.497718,-8.119189,2.785423,-8.172873,9.052769,8.264819,6.224133,-3.505100,-2.172621,1.996974,-3.945839,2.719311,-5.447858,-9.606867,-6.378267,-4.655679,1.931761,-9.592897,-3.170509,4.833241,7.408416,-2.461632,6.025733,0.103681,-7.854078,-2.074956,-0.787110,2.120366,0.025111,7.903172,9.832451,-9.863227,-6.194201,-8.883894,6.850271,0.980095,-3.353427,7.588130,-7.437688,4.823817,4.341172,2.425083,1.127156,-8.688160,3.598948,2.264885,2.108335,7.770919,-6.639189,-9.166298,2.164237,1.626471,5.060363,-6.889855,2.343941,-6.990302,6.791851,1.037831,-3.947501,3.240641,7.472034,8.622334,-3.166380,-3.609214,-7.576957,-3.450023,-6.425077,1.639106,-4.223214,-1.505664,7.583605,-0.036886,-2.823832,-2.478462,2.042558,-0.806566,-9.704613,2.786913,2.893704,6.696940,9.574024,9.956939,7.656377,0.639202,-8.452247,-2.654822,4.356188,-3.627997,-9.006618,-6.813422,-3.996558,-2.530863,-2.444059,7.039178,4.218016,5.782172,-3.019900,2.382703,2.804828,7.814086,-5.081041,-4.298153,-3.642889,6.169786,9.411653,-8.559057,0.643600,-4.693585,6.117351,4.090837,-7.121795,2.724660,4.803706,2.824072,3.686677,5.749998,-9.318950,8.558038,-0.748167,8.683752,1.632524,-8.853699,-4.151358,-6.109330,-2.979741,-9.791315,5.996702,-6.587784,-0.668855,7.019292,-3.558094,0.875803,-9.089898,-4.989358,-1.171794,-5.486438,8.790967,-1.605732,3.258640,1.275899,-5.873646,0.178005,0.403935,-6.627568,9.331941,-5.073755,-5.995035,-3.018690,-1.142813,-8.796622,-6.898640,-6.009716,4.630326,0.918589,-3.305396,-9.151674,-9.510645,-2.721866,0.542962,-7.851595,-3.603850,0.748519,-7.107513,-7.448301,-3.838615,7.979133,0.880515,-2.364406,-3.697592,-5.627904,7.797203,0.409645,-5.849970,7.782639,4.041661,-8.185779,-9.244077,-6.187525,8.032436,-1.986300,2.166987,-7.484991,0.430098,2.074322,-1.675231,-0.535965,7.877865,4.296307,4.384287,0.618498,-8.976759,6.003162,5.587971,-5.052521,-9.734850,-3.776188,-1.766895,-3.782431,-5.940585,-1.765238,6.843698,-0.464228,-9.341887,-7.581006,-2.578165,-1.565039,6.857579,-2.365219,-8.993354,7.856860,1.468503,-1.691783,-8.727250,6.899840,3.041425,8.625518,4.877543,5.679881,-6.307956,5.690400,0.096988,4.075491,3.733289,-9.036795,-5.944514,-0.428207,9.139246,-6.945934,-2.662017,-3.283127,5.865556,-2.713782,5.376205,-8.931309,-2.765347,3.214022,-7.589238,-6.372500,-1.193673,1.912560,9.207510,-0.350452,-1.322260,-3.198432,-9.603046,-1.550568,7.853209,-3.349033,-8.706504,-8.432239,2.232168,3.403011,-7.709311,4.489826,-0.689816,-6.130677,3.008642,-0.113682,2.660214,-2.167396,-9.300436,2.629950,9.019770,-7.395532,-6.160002,-5.630940,-4.101742,3.652243,-8.098125,0.776750,0.450897,-3.639647,-3.711956,8.877160,9.140917,-6.079988,-3.985068,5.775679,7.974707,-6.062905,-0.685209,7.493960,-1.421081,-2.097191,-7.335381,0.331134,7.546771,-8.252424,-2.059987,5.166094,6.339065,9.815125,9.917481,9.525339,7.347632,-7.774854,5.539728,-0.552187,9.076656,-0.231412,8.039785,2.301182,1.503635,-0.396594,0.379446,6.467003,6.758830,8.218549,-0.524963,-4.766052,-7.823772,0.746763,-1.060366,9.271194,-8.480566,6.971904,0.579520,-3.203104,-4.331146,-6.473678,-5.164727,-8.153111,6.537657,-4.418641,8.395733,0.714316,-5.761344,7.390842,-1.966375,-8.407597,-9.239231,-8.746041,-4.016979,-0.324540,-6.399322,0.754741,-2.133133,-5.513619,1.386677,8.841729,9.789843,-6.135521,-9.348680,5.009447,-6.979124,1.604572,7.765289,-6.442375,2.396086,5.194419,5.009661,-8.238427,-9.941686,3.490955,-8.368978,-3.920678,5.084103,5.480000,-1.139328,4.007901,-8.308491,4.291291,-3.670863,6.025193,-6.972181,8.322961,8.465256,-7.270927,8.459418,5.634370,-3.786995,2.763306,-6.491727,5.734618,6.545699,3.042819,-4.473626,-8.071010,-8.370733,-7.022459,-6.631399,9.657860,0.271299,0.136790,0.009371,-7.608762,1.160598,-8.478479,-6.096803,-0.071111,-0.428049,9.141180,9.898359,6.380043,-1.252941,-7.327734,-7.283078,-9.948500,1.931892,-6.811391,7.810404,2.405956,-4.558634,-5.475959,6.523917,7.413044,1.391002,-9.343049,-6.960594,-4.718009,0.098710,5.094479,-2.248605,-8.422908,1.952318,2.749789,6.170494,4.950677,-9.467738,1.469893,9.175188,8.729530,9.784644,7.083114,4.611343,-8.497030,-3.523172,-0.999881,-8.348909,2.407621,0.413913,-3.903594,7.197533,9.955667,5.693425,0.688350,1.923641,4.705335,2.522612,-1.880868,1.226699,2.165113,-6.598726,-8.644857,-9.616643,-4.313195,-5.786447,9.384546,0.467319,2.850143,0.278406,4.115967,2.210644,9.801144,3.126422,-9.439754,6.828242,-5.114993,9.861365,-8.341050,-9.284919,-6.585253,9.968192,-7.202713,-8.786076,2.661160,9.876043,-1.046477,-7.299426,4.415164,5.465852,-5.846703,3.251161,-0.711741,1.080616,3.246295,6.315348,4.713836,1.897456,8.318750,2.194799,9.356307,3.180450,-9.097537,5.818981,9.125805,2.562125,2.792020,4.336666,0.554386,-7.462867,-6.553695,-9.381368,-1.484199,-9.149254,1.177935,9.501465,-7.785636,-5.637083,-8.723404,-3.865656,-4.467601,5.483671,-2.848236,5.258705,2.359351,-1.183931,-9.662387,8.667835,-4.337771,-6.694259,-1.693968,-2.729128,0.013689,7.889687,5.715536,9.848723,1.898501,6.617315,8.494872,2.429620,1.521518,8.074416,0.304399,-8.824949,-1.926731,2.614376,-0.346183,9.459581,2.959922,7.402847,-8.152284,-8.171998,0.272254,4.470634,9.477477,-0.719821,5.593272,-9.373860,-0.347688,-3.939820,1.489231,0.498416,-4.053087,2.810699,8.502698,-4.274556,-9.317952,0.990442,-4.637381,-0.416679,-1.023594,-9.214444,-3.715445,-6.126776,-8.617462,2.995468,-5.306613,7.137651,3.403112,-2.482461,-4.028175,-3.308638,-5.542262,-7.064018,7.531534,-6.533934,0.039856,0.410323,6.932577,5.660489,-9.775945,0.716480,4.177984,0.989554,-0.415301,-2.404707,-4.048620,4.624531,-9.190469,-1.579091,-8.438908,8.055415,6.641116,-6.749790,-6.109514,-4.492934,-4.239127,-6.321758,6.201419,0.560455,8.189343,-7.439594,-7.000731,-0.456818,5.460915,-4.762472,5.373630,-1.931214,-1.804020,7.847307,-8.191733,-3.997829,-8.470067,-2.750038,-8.207780,9.845516,4.565366,-8.007996,9.241615,3.985011,0.851484,-8.162937,4.840972,0.460222,5.885833,8.442112,9.049833,8.118690,-6.679101,7.050095,8.455871,-9.849487,-5.392923,-4.420978,-1.260130,-0.072403,-5.486697,-1.323880,7.538419,0.740401,2.783913,-8.412295,-3.724475,-6.390949,-7.432765,-5.082768,-8.822166,-2.005414,8.309763,-3.107635,-9.957130,7.072235,8.129640,1.224163,7.304181,-3.870397,6.334548,0.819122,-6.297148,-1.673178,7.059134,-3.512036,9.020222,-7.346930,9.792787,-1.274333,-4.265318,-6.715729,-2.956998,-0.144352,1.631525,-7.907613,-1.814580,-5.561809,7.831670,3.671297,4.023591,-9.993265,-5.196315,8.810453,1.397477,-6.369386,1.131209,7.196084,-8.589337,-9.854569,-3.978591,-1.027678,-2.385174,4.841189,7.499969,1.384054,-1.568736,0.226471,-1.771148,3.226614,9.141719,8.539696,-7.753809,-3.183790,4.363237,-6.428158,9.477796,-5.700269,-2.070146,9.537161,-8.563188,-5.741559,-7.719299,7.277555,5.349627,-6.099665,-5.054871,3.739092,-4.597345,8.865641,-7.856454,-0.342285,-9.530578,-6.801475,-0.679814,-6.699815,-3.391249,-9.883855,1.453579,7.401875,-9.674906,0.309492,-9.767673,7.639763,-4.943533,-2.492983,6.472348,-6.236765,1.945127,-2.787611,-9.247932,-8.731349,3.078438,1.386362,-4.345668,5.248901,-9.075163,-9.207808,-2.867481,6.495464,-4.561276,4.221703,-9.012956,-7.723535,-8.098356,-0.512217,3.086931,7.308582,0.676048,9.149453,-9.219184,-3.033627,2.472939,6.047483,-3.930827,-8.364629,-7.873789,-9.896208,3.209172,-5.237625,3.993018,-0.311133,6.093894,-3.237099,-6.069785,-0.427154,-7.968892,3.870015,1.330231,2.822221,-4.842377,3.447990,-7.487878,9.230883,-4.446969,9.856645,-1.606403,-0.007432,-8.310029,-7.332629,3.229969,6.605697,7.728164,7.301537,8.988859,5.481522,0.065393,-8.107743,-6.829215,4.908358,9.894178,6.183940,7.545601,3.614383,-6.695064,-4.928790,-9.325572,9.213241,9.227099,4.251421,-0.729812,-8.208933,2.407724,1.014998,-0.243241,-9.958562,5.915622,-4.144290,4.045471,-8.026376,1.828852,7.888266,-3.478874,-7.275552,-0.081823,-3.169197,-9.980390,-4.859293,2.572335,6.898623,-7.811048,7.131286,5.464467,-6.043062,5.565622,-9.309235,-1.238336,2.911991,7.550035,-7.439211,4.475967,-5.283118,3.280278,0.101793,-1.288581,-5.276307,-3.750948,-3.060471,4.226949,-9.701530,-6.334278,-7.618175,9.329688,6.878176,1.226740,-0.143796,0.136809,-0.438512,3.915722,2.417980,-7.009331,-0.472185,-5.183212,1.063070,-7.011460,-6.535623,-7.135444,2.174802,-6.177554,-7.253767,-2.149846,-5.630356,5.510508,-1.408358,-0.137930,-2.179468,3.886356,2.675061,-4.180104,-3.106078,0.666801,1.507606,1.959033,9.364980,8.844043,2.746021,-0.632331,2.617859,-0.852416,-6.958372,-4.970624,6.436996,7.089008,1.834282,1.229598,-0.924889,-6.960522,4.389667,-0.834395,-6.224319,-3.364654,8.455027,2.767631,6.563333,-2.507944,9.604386,-1.932966,9.293919,2.032142,2.912432,-7.599922,4.018759,3.878030,-3.663600,8.568696,-4.894234,-0.502450,-0.415900,-7.512806,3.158968,1.654304,4.342138,8.393402,-2.334664,1.545930,-8.282721,7.292038,4.679833,-8.255487,1.750321,-7.213968,6.562273,8.007406,-2.467108,5.606600,7.295604,-9.578509,0.359663,3.831357,0.315505,2.454250,-1.627421,6.359326,-9.737174,9.486412,-4.696372,1.393852,-0.115101,4.410971,-6.727510,-9.958378,-0.135420,9.379958,-9.254908,8.058975,2.276207,2.266851,6.886269,1.814208,-9.811024,1.178385,-7.121738,9.110162,-7.324847,-8.651845,8.877873,-2.781686,0.329066,8.663755,-5.982273,0.492281,-1.744086,7.998964,-5.485416,8.676283,9.726530,1.093372,5.130142,-8.427489,8.632604,-8.654096,0.689442,-0.958113,-2.822571,-2.578134,-7.246538,1.435565,3.398595,2.781393,8.282892,-1.214752,4.507541,1.863447,-0.714519,-3.832257,-5.202089,1.045142,0.913066,-3.558458,1.846257,-0.566006,3.402292,-8.404188,-6.912751,-8.695876,-5.041281,-4.824632,-3.962002,-0.617798,7.805178,-3.087841,-7.530108,4.048345,-5.091282,4.644694,5.908482,2.605406,7.571062,8.747261,6.169007,-9.058093,-3.894810], dtype = "float32")#candidate|2111|(1820,)|const|float32
call_2110 = relay.TupleGetItem(func_870_call(relay.reshape(const_2111.astype('float32'), [455, 4])), 3)
call_2112 = relay.TupleGetItem(func_873_call(relay.reshape(const_2111.astype('float32'), [455, 4])), 3)
uop_2113 = relay.rsqrt(call_2110.astype('float32')) # shape=(455, 4)
uop_2115 = relay.rsqrt(call_2112.astype('float32')) # shape=(455, 4)
output = relay.Tuple([call_2104,const_2111,uop_2113,])
output2 = relay.Tuple([call_2105,const_2111,uop_2115,])
func_2118 = relay.Function([], output)
mod['func_2118'] = func_2118
mod = relay.transform.InferType()(mod)
mutated_mod['func_2118'] = func_2118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2118_call = mutated_mod.get_global_var('func_2118')
call_2119 = func_2118_call()
output = call_2119
func_2120 = relay.Function([], output)
mutated_mod['func_2120'] = func_2120
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2121 = relay.var("var_2121", dtype = "uint16", shape = (7, 13, 6))#candidate|2121|(7, 13, 6)|var|uint16
var_2122 = relay.var("var_2122", dtype = "uint16", shape = (7, 13, 6))#candidate|2122|(7, 13, 6)|var|uint16
bop_2123 = relay.minimum(var_2121.astype('uint16'), relay.reshape(var_2122.astype('uint16'), relay.shape_of(var_2121))) # shape=(7, 13, 6)
func_1544_call = mod.get_global_var('func_1544')
func_1546_call = mutated_mod.get_global_var('func_1546')
call_2126 = func_1544_call()
call_2127 = func_1544_call()
output = relay.Tuple([bop_2123,call_2126,])
output2 = relay.Tuple([bop_2123,call_2127,])
func_2128 = relay.Function([var_2121,var_2122,], output)
mod['func_2128'] = func_2128
mod = relay.transform.InferType()(mod)
mutated_mod['func_2128'] = func_2128
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2128_call = mutated_mod.get_global_var('func_2128')
var_2130 = relay.var("var_2130", dtype = "uint16", shape = (7, 13, 6))#candidate|2130|(7, 13, 6)|var|uint16
var_2131 = relay.var("var_2131", dtype = "uint16", shape = (7, 13, 6))#candidate|2131|(7, 13, 6)|var|uint16
call_2129 = func_2128_call(var_2130,var_2131,)
output = call_2129
func_2132 = relay.Function([var_2130,var_2131,], output)
mutated_mod['func_2132'] = func_2132
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2118_call = mod.get_global_var('func_2118')
func_2120_call = mutated_mod.get_global_var('func_2120')
call_2134 = relay.TupleGetItem(func_2118_call(), 2)
call_2135 = relay.TupleGetItem(func_2120_call(), 2)
func_1941_call = mod.get_global_var('func_1941')
func_1943_call = mutated_mod.get_global_var('func_1943')
var_2139 = relay.var("var_2139", dtype = "float64", shape = (1386,))#candidate|2139|(1386,)|var|float64
call_2138 = relay.TupleGetItem(func_1941_call(relay.reshape(var_2139.astype('float64'), [1386,])), 1)
call_2140 = relay.TupleGetItem(func_1943_call(relay.reshape(var_2139.astype('float64'), [1386,])), 1)
uop_2164 = relay.cos(var_2139.astype('float32')) # shape=(1386,)
func_522_call = mod.get_global_var('func_522')
func_524_call = mutated_mod.get_global_var('func_524')
call_2166 = relay.TupleGetItem(func_522_call(), 0)
call_2167 = relay.TupleGetItem(func_524_call(), 0)
func_156_call = mod.get_global_var('func_156')
func_158_call = mutated_mod.get_global_var('func_158')
var_2171 = relay.var("var_2171", dtype = "bool", shape = (32,))#candidate|2171|(32,)|var|bool
call_2170 = relay.TupleGetItem(func_156_call(relay.reshape(var_2171.astype('bool'), [32,])), 0)
call_2172 = relay.TupleGetItem(func_158_call(relay.reshape(var_2171.astype('bool'), [32,])), 0)
func_1151_call = mod.get_global_var('func_1151')
func_1152_call = mutated_mod.get_global_var('func_1152')
call_2174 = relay.TupleGetItem(func_1151_call(), 0)
call_2175 = relay.TupleGetItem(func_1152_call(), 0)
output = relay.Tuple([call_2134,call_2138,uop_2164,call_2166,call_2170,var_2171,call_2174,])
output2 = relay.Tuple([call_2135,call_2140,uop_2164,call_2167,call_2172,var_2171,call_2175,])
func_2183 = relay.Function([var_2139,var_2171,], output)
mod['func_2183'] = func_2183
mod = relay.transform.InferType()(mod)
mutated_mod['func_2183'] = func_2183
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2183_call = mutated_mod.get_global_var('func_2183')
var_2185 = relay.var("var_2185", dtype = "float64", shape = (1386,))#candidate|2185|(1386,)|var|float64
var_2186 = relay.var("var_2186", dtype = "bool", shape = (32,))#candidate|2186|(32,)|var|bool
call_2184 = func_2183_call(var_2185,var_2186,)
output = call_2184
func_2187 = relay.Function([var_2185,var_2186,], output)
mutated_mod['func_2187'] = func_2187
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1113_call = mod.get_global_var('func_1113')
func_1115_call = mutated_mod.get_global_var('func_1115')
call_2195 = relay.TupleGetItem(func_1113_call(), 0)
call_2196 = relay.TupleGetItem(func_1115_call(), 0)
func_1113_call = mod.get_global_var('func_1113')
func_1115_call = mutated_mod.get_global_var('func_1115')
call_2202 = relay.TupleGetItem(func_1113_call(), 0)
call_2203 = relay.TupleGetItem(func_1115_call(), 0)
func_1312_call = mod.get_global_var('func_1312')
func_1314_call = mutated_mod.get_global_var('func_1314')
var_2205 = relay.var("var_2205", dtype = "bool", shape = (168,))#candidate|2205|(168,)|var|bool
call_2204 = relay.TupleGetItem(func_1312_call(relay.reshape(var_2205.astype('bool'), [168,])), 0)
call_2206 = relay.TupleGetItem(func_1314_call(relay.reshape(var_2205.astype('bool'), [168,])), 0)
func_2093_call = mod.get_global_var('func_2093')
func_2097_call = mutated_mod.get_global_var('func_2097')
const_2213 = relay.const([-1,-10,-7,-5,-1,2,-7,-2,5,2,5,-2,2,5,10,-5,-8,-3,2,-6,6,6,-3,6,8,-7,-9,9,-4,9,8,-6,-6,3,-7,-5,-9,8,-1,9,2,4,8,-1,8,4,-3,-4,9,1,8,-1,-8,10,-3,9,-8,-5,6,7,-9,10,3,-2,-1,10,-8,-8,-2,-6,-9,10,-7,4,-4,-5,-3,-4,-9,9,-9,1,4,6,10,-2,-6,-8,1,6,2,8,-6,-2,-1,7,3,-9,-7,-2,-8,8,9,9,-8,5,6,-7,-6,-1,3,-6,6,-3,2,-2,2,-6,-5,-10,10,5,9,-2,3,1,-9,-4,4,-10,3,-9,-1,7,-2,9,2,-9,7,7,3,8,7,-1,-9,9,4,-8,-7,-10,-2,10,-4,5,2,-3,-10,-9,3,9,-2,4,10,-2,7,-3,-3,-2,-4,8,9,-1,4,-7,3,-9,-6,-10,4,-3,-3,9,1,-5,-8,-3,6,-7,5,5,2,2,8,-6,5,3,-8,-6,-2,6,-3,9,2,-10,-10,6,1,-9,9,9,-7,-1,-5,-3,-7,-8,-7,-10,3,-7,-4,-4,-10,-4,-10,-2,7,9,-2,10,-3,-2,7,1,-1,-2,3,2,9,-2,-2,4,-10,3,7,-3,-4,-1,6,-3,-10,4,3,7,-5,-10,5,-6,9,9,3,-4,-7,-1,7,-2,1,10,-3,5,-6,-4,-9,6,-10,-1,6,-1,2,-8,6,-8,7,10,-7,-9,-9,3,-5,-3,-5,5,4,8,8,5,-7,10,2,-3,4,-1,-7,3,7,-7,2,6,10,2,-2,-1,-1,-3,10,2,-10,-8,-7,-10,-7,-7,-9,-7,-8,6,-9,9,7,-4,9,-10,9,7,1,2,-4,-10,-3,3,-7,3,5,7,3,-8,7,1,-8,-4,8,8,7,7,5,3,-9,10,-8,6,10,4,-4,5,-5,-10,9,5,7,7,-1,6,7,-6,4,-8,7,-2,-9,10,10,-7,9,-4,-3,8,1,4,1,5,-1,10,5,7,-10,7,9,8,5,6,-1,10,10,10,-3,7,-9,1,8,9,-7,10,2,7,10,-5,-10,4,10,-1,10,6,4,3,-5,2,1,-9,-1,-10,10,3,10,-9,-3,3,8,-5,7,8,2,-4,-3,-6,9,-5,-1,8,6,-4,-8,4,-6,-10,-9,-3,-8,4,1,-6,-7,-1,7,-2,5,-6,4,-10,-1,1,1,-10,4,2,7,-6,-7,3,-6,-9,-2,5,4,-6,8,-6,-3,9,2,3,-7,4,-7,10,-3,-4,5,-10,-5,-6,4,-3,8,-4,-3,-2,7,-8,4,-6,8,-1,-9,4,9,-8,-3,2,3,4,5,10,-3,-6,6,-5,4,-7,-8,9,-2,2,8,-7,-10,-8,-8,-6,-5,-9,6,5,-9,-5,5,6,-10,1,10,8,-8,4,-5,8,-7,-2,10,-5,10,-7,3,-2,-2,9,-2,4,3,7,-2,-7,3,-2,-7,-3,-8,-3,6,3,10,-9,-1,4,3,-2,-6,4,8,-2,4,3,-6,2,-4,9,9,6,-3,1,-10,2,4,5,1,-9,3,-8,10,2,-7,8,10,-5,4,2,-1,-2,-10,8,-6,-10,-1,-1,-10,-5,-5,4,-4,-2,-5,2,9,-10,3,-2,-7,10,-1,-8,-6,-10,3,6,-1,8,3,3,-6,-8,-2,-9,-3,8,-2,4,9,-8,-8,-10,3,6,-9,-5,-3,-3,-5,6,3,-1,8,2,-1,-10,5,9,-9,1,5,1,10,5,-6,5,-2,-4,-4,-10,7,6,-1,9,10,-7,7,-3,4,6,6,1,10,2,4,-10,3,2,-1,-5,-2,-3,4,7,3,-10,-5,-1,-8,10,7,2,8,-4,-6,7,3,6,8,-5,-9,4,-8,10,7,8,1,-4,6,5,6,10,4,7,1,6,7,-3,-4,10,4,5,-2,4,6,-9,-5,-4,-7,2,-2,-8,-8,-3,6,4,-5,-7,8,4,5,8,4,-9,-2,-1,-1,5,-1,-10,4,-1,4,8,1,8,5,6,-10,2,-7,-8,1,-6,4,1,1,-8,10,-9,-8,-7,-4,6,-7,10,1,-2,3,-5,5,4,-10,3,10,8,-8,3,-7,10,7,-10,7,-3,2,-7,5,-5,6,4,-9,-6,-9,-2,9,-2,1,-7,6,9,7,4,-9,-7,-8,-1,-5,-5,5,1,-1,-10,-7,-1,6,-10,9,-5,5,-1,4,10,-8,-2,-4,7,-9,10,-6,8,2,-5,4,-9,-5,-1,-4,-8,6,7,6,7,-3,-1,9,-10,-9,-4,-6,-3,-3,2,7,-2,-2,5,3,3,-1,2,4,-1,-9,-10,-7,-8,9,-2,1,-9,2,-3,8,-8,10,10,-4,-7,-7,-9,-9,-7,-8,5,4,4,-10,1,-3,-8,1,-7,1,1,10,-2,-9,-9,9,-8,-10,9,9,9,-8,-5,6,-7,5,-3,-8,-5,-6,-5,2,10,-4,-3,6,5,2,-5,9,5,10,10,-5,-6,-1,7,-2,7,-5,-1,4,-5,5,3,5,-9,-8,-4,5,-5,1,-10,-9,1,7,5,9,8,-3,9,10,3,-8,-8,-7,9,-5,2,-8,-9,6,-6,5,8,-6,-4,-6,2,-1,7,5,7,7,-5,-2,-1,8,3,3,9,-8,-6,9,-10,-10,10,5,5,-7,-8,-7,-7,-6,8,2,9,-2,6,-2,-4,3,8,-1,1,-5,9,8,9,-6,5,6,-8,10,-2,8,5,-9,-1,-5,-10,-3,-4,-5,-9,2,1,-10,8,2,-2,-5,-4,-9,-7,-9,-7,-8,-5,6,5,8,5,4,-5,3,-9,-4,5,9,-10,-10,3,9,-2,2,2,3,7,9,4,-1,2,-3,1,-8,-2,-9,8,-3,-3,-6,-6,-10,-6,6,3,-10,-5,2,7,-6,-10,-2,-2,-9,-9,-8,3,9,-9,9,2,-8,4,-4,2,8,6,-2,-6,-3,-5,-1,9,10,-2,-9,-10,-3,7,-5,-9,2,-4,4,-5,-6,-8,-1,-4,-4,-1,5,1,8,-7,-8,-8,2,9,4,4,6,-7,-8,9,-1,6,6,4,-7,6,9,-8,-6,8,-10,-9,4,-3,-9,6,-5,-6,2,-4,2,4,2,4,-8,-7,5,-5,2,-3,2,-2,2,9,-7,2,-3,-3,-6,-2,-9,1,6,5,3,10,-7,-2,10,4,-4,-1,1,-1,-10,1,3,5,9,-9,10,-8,4,8,3,3,6,-4,7,4,-10,1,9,5,8,10,5,-6,10,-5,6,10,-4,-1,-2,2,-9,5,9,-6,6,-6,4,4,-8,8,-10,7,3,-7,-2,6,2,-1,-3,-7,-5,-4,6,4,8,7,-10,-2,-2,-9,7,-8,-9,9,10,-5,-10,-3,-8,2,8,-3,-4,3,-5,-2,10,-3,-3,-4,-8,-5,7,-9,-4,2,10,2,4,2,10,2,-6,-2,7,1,3,8,-5,-9,-7,2,-10,-1,-2,4,7,-5,-2,3,10,-7,-1,7,1,4,8,-3,-2,1,-7,5,2,8,-4,-3,4,-9,4,-10,1,3,2,6,-10,6,-3,-1,1,-10,10,-3,-5,9,8,6,-3,-9,-5,-9,-3,2,7,4,3,-5,9,-7,-10,-4,6,-8,-9,6,-1,8,-9,3,-4,-4,-10,1,-8,-4,5,-7,-9,1,-3,1,1,9,10,8,8,4,-2,7,-3,8,-10,8,1,9,-6,7,10,9,-7,-7,-10,1,3,-4,9,-4,-9,10,10,4,-10,5,-7,3,3,9,8,-7,-9,9], dtype = "int8")#candidate|2213|(1452,)|const|int8
call_2212 = relay.TupleGetItem(func_2093_call(relay.reshape(const_2213.astype('int8'), [11, 12, 11]), relay.reshape(const_2213.astype('int8'), [11, 12, 11]), ), 0)
call_2214 = relay.TupleGetItem(func_2097_call(relay.reshape(const_2213.astype('int8'), [11, 12, 11]), relay.reshape(const_2213.astype('int8'), [11, 12, 11]), ), 0)
output = relay.Tuple([call_2195,call_2202,call_2204,var_2205,call_2212,const_2213,])
output2 = relay.Tuple([call_2196,call_2203,call_2206,var_2205,call_2214,const_2213,])
func_2217 = relay.Function([var_2205,], output)
mod['func_2217'] = func_2217
mod = relay.transform.InferType()(mod)
var_2218 = relay.var("var_2218", dtype = "bool", shape = (168,))#candidate|2218|(168,)|var|bool
output = func_2217(var_2218)
func_2219 = relay.Function([var_2218], output)
mutated_mod['func_2219'] = func_2219
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2118_call = mod.get_global_var('func_2118')
func_2120_call = mutated_mod.get_global_var('func_2120')
call_2255 = relay.TupleGetItem(func_2118_call(), 2)
call_2256 = relay.TupleGetItem(func_2120_call(), 2)
func_1751_call = mod.get_global_var('func_1751')
func_1752_call = mutated_mod.get_global_var('func_1752')
call_2264 = func_1751_call()
call_2265 = func_1751_call()
func_1271_call = mod.get_global_var('func_1271')
func_1272_call = mutated_mod.get_global_var('func_1272')
call_2266 = relay.TupleGetItem(func_1271_call(), 1)
call_2267 = relay.TupleGetItem(func_1272_call(), 1)
output = relay.Tuple([call_2255,call_2264,call_2266,])
output2 = relay.Tuple([call_2256,call_2265,call_2267,])
func_2268 = relay.Function([], output)
mod['func_2268'] = func_2268
mod = relay.transform.InferType()(mod)
mutated_mod['func_2268'] = func_2268
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2268_call = mutated_mod.get_global_var('func_2268')
call_2269 = func_2268_call()
output = call_2269
func_2270 = relay.Function([], output)
mutated_mod['func_2270'] = func_2270
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2268_call = mod.get_global_var('func_2268')
func_2270_call = mutated_mod.get_global_var('func_2270')
call_2284 = relay.TupleGetItem(func_2268_call(), 1)
call_2285 = relay.TupleGetItem(func_2270_call(), 1)
func_2118_call = mod.get_global_var('func_2118')
func_2120_call = mutated_mod.get_global_var('func_2120')
call_2316 = relay.TupleGetItem(func_2118_call(), 1)
call_2317 = relay.TupleGetItem(func_2120_call(), 1)
output = relay.Tuple([call_2284,call_2316,])
output2 = relay.Tuple([call_2285,call_2317,])
func_2319 = relay.Function([], output)
mod['func_2319'] = func_2319
mod = relay.transform.InferType()(mod)
mutated_mod['func_2319'] = func_2319
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2319_call = mutated_mod.get_global_var('func_2319')
call_2320 = func_2319_call()
output = call_2320
func_2321 = relay.Function([], output)
mutated_mod['func_2321'] = func_2321
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2334 = relay.const([[[-2.308821,3.048858,4.566683,-9.842877,-2.540903,-1.921354,-6.263916,-0.178881,-5.272120,-5.929259,-0.647724,9.849530,9.883513,-6.613606,0.632286]],[[9.856630,-4.204110,-4.893546,2.031407,2.658058,1.532756,6.014176,4.613830,9.921158,2.572512,2.357657,-8.039612,-6.257131,-6.903042,2.039752]],[[2.627192,4.660718,7.973731,3.502045,-4.569408,-4.202844,-1.805671,0.913505,-0.222304,-9.070278,-1.525389,4.916734,-1.018822,9.965398,-2.771691]],[[1.125819,2.077392,4.469252,-2.965776,7.655592,-7.163486,-7.499119,8.741841,-2.772128,-9.432377,-8.033661,6.101866,-5.076688,3.823692,-3.529283]],[[-4.541186,5.043764,-0.558145,-4.891030,7.740943,6.469696,2.649046,2.552898,4.796457,-8.443666,-1.981154,-2.786685,-0.907212,2.348113,-4.886028]],[[-7.334385,6.689658,-8.964955,-0.060089,8.747118,-1.041460,2.913495,-6.179317,5.747933,8.781241,-2.237640,-5.783389,2.679759,7.638120,-3.521809]],[[-8.253898,-7.108780,0.137224,1.048193,2.164371,1.259118,6.637717,4.936984,5.466001,5.926430,3.638239,-6.384303,-5.883535,-6.591875,6.506305]],[[-4.621221,6.479317,7.226995,3.948804,7.040872,2.210592,7.040171,8.864677,9.384728,3.409461,6.429946,-0.355780,-2.123686,9.788965,-8.033778]],[[4.793427,-3.635637,6.052939,9.420616,-1.058070,5.864280,-8.539710,-8.508864,0.273093,-3.375938,-3.007595,5.936714,-7.056508,-7.296176,5.985210]],[[-7.969677,4.699016,6.044863,-3.698893,8.326835,9.011747,3.403213,3.642150,-4.240471,3.202019,9.791359,-6.380673,-5.701829,-2.911159,1.760779]],[[8.278461,0.894542,-5.012030,2.432936,3.924246,-7.431629,5.296822,-3.943966,4.261126,7.565387,-4.328429,1.848458,-0.277840,0.048510,-4.849180]],[[-4.113207,-4.996881,-7.079774,-0.033799,7.792677,-5.617233,4.606379,4.433822,0.667588,-1.163723,6.231171,5.414039,1.994396,-8.073856,5.097503]],[[4.812512,-7.924162,6.801987,9.768097,-1.511800,0.006425,-6.244255,-2.271262,9.395273,-3.243174,6.104003,-6.400768,-9.447664,-5.893798,-3.723663]],[[6.809718,6.642818,0.190351,-4.070635,-9.434419,6.636708,-2.415458,-8.640749,-0.247991,-7.380320,6.618839,-0.850983,-3.730639,-1.923438,-5.604873]]], dtype = "float64")#candidate|2334|(14, 1, 15)|const|float64
uop_2335 = relay.atanh(const_2334.astype('float64')) # shape=(14, 1, 15)
bop_2341 = relay.add(const_2334.astype('int8'), relay.reshape(uop_2335.astype('int8'), relay.shape_of(const_2334))) # shape=(14, 1, 15)
func_1544_call = mod.get_global_var('func_1544')
func_1546_call = mutated_mod.get_global_var('func_1546')
call_2346 = func_1544_call()
call_2347 = func_1544_call()
output = relay.Tuple([bop_2341,call_2346,])
output2 = relay.Tuple([bop_2341,call_2347,])
func_2351 = relay.Function([], output)
mod['func_2351'] = func_2351
mod = relay.transform.InferType()(mod)
output = func_2351()
func_2352 = relay.Function([], output)
mutated_mod['func_2352'] = func_2352
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1677_call = mod.get_global_var('func_1677')
func_1679_call = mutated_mod.get_global_var('func_1679')
call_2373 = func_1677_call()
call_2374 = func_1677_call()
func_1160_call = mod.get_global_var('func_1160')
func_1162_call = mutated_mod.get_global_var('func_1162')
call_2380 = func_1160_call()
call_2381 = func_1160_call()
func_1417_call = mod.get_global_var('func_1417')
func_1419_call = mutated_mod.get_global_var('func_1419')
call_2390 = func_1417_call()
call_2391 = func_1417_call()
func_1544_call = mod.get_global_var('func_1544')
func_1546_call = mutated_mod.get_global_var('func_1546')
call_2400 = func_1544_call()
call_2401 = func_1544_call()
output = relay.Tuple([call_2373,call_2380,call_2390,call_2400,])
output2 = relay.Tuple([call_2374,call_2381,call_2391,call_2401,])
func_2422 = relay.Function([], output)
mod['func_2422'] = func_2422
mod = relay.transform.InferType()(mod)
mutated_mod['func_2422'] = func_2422
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2422_call = mutated_mod.get_global_var('func_2422')
call_2423 = func_2422_call()
output = call_2423
func_2424 = relay.Function([], output)
mutated_mod['func_2424'] = func_2424
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2427 = relay.const(-2, dtype = "uint8")#candidate|2427|()|const|uint8
var_2428 = relay.var("var_2428", dtype = "uint8", shape = (6, 16, 13))#candidate|2428|(6, 16, 13)|var|uint8
bop_2429 = relay.maximum(const_2427.astype('uint8'), var_2428.astype('uint8')) # shape=(6, 16, 13)
uop_2443 = relay.sin(var_2428.astype('float32')) # shape=(6, 16, 13)
output = relay.Tuple([bop_2429,uop_2443,])
output2 = relay.Tuple([bop_2429,uop_2443,])
func_2455 = relay.Function([var_2428,], output)
mod['func_2455'] = func_2455
mod = relay.transform.InferType()(mod)
var_2456 = relay.var("var_2456", dtype = "uint8", shape = (6, 16, 13))#candidate|2456|(6, 16, 13)|var|uint8
output = func_2455(var_2456)
func_2457 = relay.Function([var_2456], output)
mutated_mod['func_2457'] = func_2457
mutated_mod = relay.transform.InferType()(mutated_mod)
func_120_call = mod.get_global_var('func_120')
func_122_call = mutated_mod.get_global_var('func_122')
call_2491 = func_120_call()
call_2492 = func_120_call()
func_120_call = mod.get_global_var('func_120')
func_122_call = mutated_mod.get_global_var('func_122')
call_2509 = func_120_call()
call_2510 = func_120_call()
func_1544_call = mod.get_global_var('func_1544')
func_1546_call = mutated_mod.get_global_var('func_1546')
call_2516 = func_1544_call()
call_2517 = func_1544_call()
output = relay.Tuple([call_2491,call_2509,call_2516,])
output2 = relay.Tuple([call_2492,call_2510,call_2517,])
func_2520 = relay.Function([], output)
mod['func_2520'] = func_2520
mod = relay.transform.InferType()(mod)
output = func_2520()
func_2521 = relay.Function([], output)
mutated_mod['func_2521'] = func_2521
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1677_call = mod.get_global_var('func_1677')
func_1679_call = mutated_mod.get_global_var('func_1679')
call_2582 = func_1677_call()
call_2583 = func_1677_call()
uop_2593 = relay.rsqrt(call_2582.astype('float64')) # shape=(14, 4, 3)
uop_2595 = relay.rsqrt(call_2583.astype('float64')) # shape=(14, 4, 3)
output = uop_2593
output2 = uop_2595
func_2600 = relay.Function([], output)
mod['func_2600'] = func_2600
mod = relay.transform.InferType()(mod)
output = func_2600()
func_2601 = relay.Function([], output)
mutated_mod['func_2601'] = func_2601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1406_call = mod.get_global_var('func_1406')
func_1407_call = mutated_mod.get_global_var('func_1407')
call_2635 = relay.TupleGetItem(func_1406_call(), 0)
call_2636 = relay.TupleGetItem(func_1407_call(), 0)
func_1892_call = mod.get_global_var('func_1892')
func_1893_call = mutated_mod.get_global_var('func_1893')
call_2637 = func_1892_call()
call_2638 = func_1892_call()
func_103_call = mod.get_global_var('func_103')
func_106_call = mutated_mod.get_global_var('func_106')
call_2655 = relay.TupleGetItem(func_103_call(relay.reshape(call_2637.astype('bool'), [4, 2, 4])), 0)
call_2656 = relay.TupleGetItem(func_106_call(relay.reshape(call_2637.astype('bool'), [4, 2, 4])), 0)
func_2455_call = mod.get_global_var('func_2455')
func_2457_call = mutated_mod.get_global_var('func_2457')
const_2659 = relay.const([10,-1,-1,-5,2,-8,-2,6,2,-6,6,7,-3,1,2,-6,-2,-5,7,-5,5,5,2,9,-3,-8,-1,7,1,5,-1,-8,-7,4,-1,4,10,5,1,9,-1,3,1,-7,7,8,4,-9,-6,-4,3,5,9,7,-6,-4,-3,-10,-8,-9,-2,2,-2,4,5,-5,9,-2,-3,-8,7,-7,-10,7,5,-2,-4,2,5,-1,5,-9,-9,-3,-9,-1,-3,-7,7,-3,-9,-1,9,-6,-9,-7,7,9,6,-8,2,-9,2,-8,-9,3,-5,-10,8,-3,7,3,5,-9,5,3,-1,-10,10,1,-8,9,9,-10,-5,7,-10,-7,-4,5,6,-7,-2,-9,7,-4,-2,-8,2,9,-8,1,-9,-4,-5,-2,-7,-9,8,-5,-7,9,2,2,5,3,-10,-1,5,1,4,-2,-6,2,-10,-10,6,8,-7,3,-6,5,-3,6,-4,7,-2,-9,-3,-2,-7,-1,2,-10,2,2,2,-7,-8,10,-9,9,9,2,10,4,-8,10,-4,10,-8,5,4,2,4,1,2,-7,-10,10,2,-7,8,-10,-2,8,7,-7,-7,10,-4,5,10,6,10,10,-9,-4,-6,9,7,7,3,4,4,1,4,3,-9,-4,4,-3,-2,-2,-1,8,8,-3,-1,3,10,3,-2,-8,7,10,-9,-6,7,-1,9,-6,5,2,-6,-3,-8,10,5,9,-1,3,1,1,9,4,-1,9,-2,4,-5,-4,-3,3,4,10,-2,-5,4,8,-8,-1,5,-7,-10,-6,-5,-8,-7,-6,2,4,9,-4,7,-6,6,-4,-9,9,1,4,8,-6,-10,5,8,-7,-1,2,5,-3,-7,-4,-9,6,10,9,2,2,8,6,-9,5,-6,-7,4,3,-8,-8,2,10,3,-10,3,-7,-1,8,-7,-9,-9,3,-6,-5,-3,-5,8,-7,-3,6,-10,10,9,1,-1,9,9,-3,10,1,-2,8,-2,-1,-1,4,3,5,9,7,8,-10,-10,4,-3,-5,3,-7,10,1,-6,-5,6,10,-5,7,-5,-2,10,-6,3,9,7,-1,5,-8,-7,-1,-10,10,8,-1,-4,9,-1,10,8,-7,7,-2,4,-3,-5,-5,7,-2,-3,-7,8,-3,-3,-2,-2,6,9,-2,-9,3,1,-9,-3,3,-8,3,8,-6,10,-2,6,-2,7,9,10,10,-10,-2,-3,-1,7,6,1,-6,9,3,-5,2,10,-8,5,-4,8,-10,-2,4,6,-3,-4,-7,-7,8,-7,2,4,-10,7,-6,1,-9,-8,10,-3,-10,-6,-9,9,-4,2,6,5,6,1,10,9,-4,-10,-8,1,-1,-7,9,10,4,7,-9,-5,6,-7,9,6,3,-10,-1,1,10,-2,5,10,3,9,-4,7,10,8,1,3,-10,-7,7,-2,-7,6,4,3,-7,-1,7,-1,-3,-8,-3,-8,-5,-3,-4,-1,-7,5,5,3,10,-3,2,-4,2,-9,3,7,4,-4,5,1,2,-5,6,7,2,3,-3,-10,8,-2,-9,-3,-1,3,-10,-9,-2,9,6,4,-7,3,3,-7,-3,2,-9,4,1,9,-2,6,-7,-2,3,1,2,-2,-5,3,-9,9,1,-2,-1,-6,9,6,6,-9,3,-1,-1,-9,-1,4,1,-9,-7,7,-2,-8,4,7,2,-1,3,2,-2,-10,-7,-4,-10,-1,4,2,10,4,-5,-5,6,-4,7,-5,-8,1,-3,-4,-8,7,-2,5,-10,7,2,2,8,-1,3,6,-2,7,-2,8,5,-1,4,-10,-6,10,10,8,-10,-5,-4,4,-7,-1,3,2,-5,-8,8,-5,-6,-4,1,-8,-8,1,3,-8,-10,3,10,-3,6,-6,-9,3,-8,-4,7,-9,5,9,-7,10,7,1,7,-4,5,-1,1,-10,1,9,7,4,-9,-2,1,-6,-5,8,10,7,10,-8,4,-1,5,2,7,4,1,4,5,-10,4,-4,-10,10,9,-2,-9,7,-4,-3,-4,-8,-10,7,-2,-8,5,-3,-3,6,2,-6,-4,4,-1,-10,4,10,-2,-3,-3,1,3,6,8,9,-1,-2,7,2,2,4,10,4,-2,4,-8,-7,10,10,-5,-9,-3,1,4,-1,-3,-4,1,-3,-5,-2,4,7,-1,4,-5,2,2,9,5,6,-4,-9,10,-2,10,9,1,8,2,-8,4,4,-1,4,4,-4,-10,-5,-6,5,-1,8,2,-6,9,-1,3,-9,-2,-10,2,-5,6,5,9,6,6,-3,-3,3,2,2,-3,10,3,2,-4,2,-8,-10,6,-10,3,1,2,-5,-1,-10,10,-10,9,-2,8,1,-8,-7,-10,-7,2,-6,-3,9,-1,-8,8,-6,1,-8,-10,7,1,-4,-2,-3,-10,-9,3,7,-8,3,-5,2,6,5,10,-6,7,-1,1,-5,4,-4,-5,-9,5,8,-2,6,-10,-4,2,-1,-7,1,-8,-9,-2,9,3,10,-1,-10,9,-1,-6,9,-2,-8,-5,-9,5,5,-10,-5,-2,2,3,8,-7,-3,3,-10,2,-6,-5,10,-4,9,7,8,9,5,-4,-6,-2,-4,10,-2,2,-1,-4,10,6,-1,-1,4,-10,4,2,5,-8,10,6,4,1,-6,-6,2,-4,-5,-3,7,-10,5,2,9,-2,-9,3,6,-9,-1,-9,-9,8,-1,4,2,10,7,1,1,-5,10,6,-3,8,-3,7,-3,-7,7,2,-7,-9,6,10,-3,-10,2,7,-4,-7,4,-9,10,1,1,-7,10,3,-7,-3,-6,1,2,3,-7,-3,6,-9,-9,-6,-8,9,10,-3,-4,7,-1,10,-10,-9,3,7,-3,-8,9,-5,8,2,-7,-6,1,-3,-6,6,-5,-3,7,10,8,-4,-3,-3,-2,-8,2,-10,-9,-5,-5,1,6,-2,5,2,-1,2,5,6,10,8,10,-5,2,-2,-3,-1,-8,-3,-5,6,-1,-2,4,8,2,6,-6,10,2,-9,6,3,10,-5,-1,3,-1,-10,4,9,-4,7,7,-1,9,2,-7,7,1,4,-5,3,3,1,3,-3,-6,-8,8,-1,-9,-2,8,-6,3,2,-9,6,-10,9,-8,10,-3,-8,-10,-7,2,5,-1,2,1,6,8,-1,-10,2,3,3,-2,6,-1,-9,2,-6,7,9,-9,7,6,6,10,-5,9,6,10,-3,5,-6,8,-4,-8,-2,-9,-6,8,-10,-9,-9,4,2,-9,6,9,-5,-6,3,-1,2,-5,-6,8,1,-2,8,10,-1,-6,-7,1,-3,10,-10], dtype = "uint8")#candidate|2659|(1248,)|const|uint8
call_2658 = relay.TupleGetItem(func_2455_call(relay.reshape(const_2659.astype('uint8'), [6, 16, 13])), 0)
call_2660 = relay.TupleGetItem(func_2457_call(relay.reshape(const_2659.astype('uint8'), [6, 16, 13])), 0)
output = relay.Tuple([call_2635,call_2637,call_2655,call_2658,const_2659,])
output2 = relay.Tuple([call_2636,call_2638,call_2656,call_2660,const_2659,])
func_2667 = relay.Function([], output)
mod['func_2667'] = func_2667
mod = relay.transform.InferType()(mod)
mutated_mod['func_2667'] = func_2667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2667_call = mutated_mod.get_global_var('func_2667')
call_2668 = func_2667_call()
output = call_2668
func_2669 = relay.Function([], output)
mutated_mod['func_2669'] = func_2669
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1113_call = mod.get_global_var('func_1113')
func_1115_call = mutated_mod.get_global_var('func_1115')
call_2703 = relay.TupleGetItem(func_1113_call(), 0)
call_2704 = relay.TupleGetItem(func_1115_call(), 0)
func_2268_call = mod.get_global_var('func_2268')
func_2270_call = mutated_mod.get_global_var('func_2270')
call_2716 = relay.TupleGetItem(func_2268_call(), 2)
call_2717 = relay.TupleGetItem(func_2270_call(), 2)
var_2759 = relay.var("var_2759", dtype = "float32", shape = (14, 4, 3))#candidate|2759|(14, 4, 3)|var|float32
bop_2760 = relay.less_equal(call_2716.astype('bool'), relay.reshape(var_2759.astype('bool'), relay.shape_of(call_2716))) # shape=(14, 4, 3)
bop_2763 = relay.less_equal(call_2717.astype('bool'), relay.reshape(var_2759.astype('bool'), relay.shape_of(call_2717))) # shape=(14, 4, 3)
uop_2777 = relay.sigmoid(call_2716.astype('float32')) # shape=(14, 4, 3)
uop_2779 = relay.sigmoid(call_2717.astype('float32')) # shape=(14, 4, 3)
func_1353_call = mod.get_global_var('func_1353')
func_1357_call = mutated_mod.get_global_var('func_1357')
const_2789 = relay.const([0.212222,2.713719,2.826556,-5.810951,-3.773657,5.346345,-5.738876,-8.568530,-5.257875,-4.051443,5.288466,-7.304825,3.083960,3.772613,2.581615,-8.852999,0.856677,8.080363,-0.111046,-9.603297,-2.931609,-9.242368,-1.327583,3.262415,5.335749,3.971046,9.621599,-8.798082,-4.966323,1.949922,-8.158968,-1.204204,0.188190,-2.669632,-6.984970,7.565181,1.992979,7.088850,-6.728605,-5.103121,-6.162769,7.475425,-8.784972,8.290021,7.509937,-3.948361,-2.315373,-7.980568,-8.978383,3.622412,4.983361,3.819930,8.222095,-1.444253,9.557339,6.801789,0.913689,-5.823499,-8.195540,-4.060085,-7.379655,2.928454,-3.528356,4.958879,1.117185,1.059818,6.508726,6.575658,6.086345,-3.079266,-4.520080,-9.880512,-6.192414,3.503578,-1.998355,3.393327,-5.848523,0.372517,-8.202215,9.650481,-2.112165,-9.695959,7.630925,-7.666678,-3.713658,-9.203984,-1.070018,-7.668701,2.915315,-7.496946,5.034015,-6.694486,-3.998770,-0.762916,-2.305121,-1.706604,-3.274679,-9.198899,-5.458881,-1.260907,-7.665672,-9.546528,-5.276087,9.855886,-9.538240,9.717220,7.250058,-7.950502,-9.350233,-8.167960,-8.820370,9.723176,-9.092970,0.817697,-3.268533,3.017735,-2.269409,2.208424,-7.803507,-8.846780,-6.336031,-5.710362,7.691820,-5.155749,-4.783912,8.855802,8.633570,5.861556,-3.425694,2.429017,4.794479,7.218850,-9.124787,-8.022926,-9.566908,6.450283,-4.531678,-7.089695,-3.553433,6.580664,-2.128370,-3.557612,6.803948,2.573038,-7.907522,-7.217116,1.696237,6.631131,7.523401,-3.123788], dtype = "float64")#candidate|2789|(150,)|const|float64
call_2788 = relay.TupleGetItem(func_1353_call(relay.reshape(const_2789.astype('float64'), [10, 3, 5]), relay.reshape(const_2789.astype('float64'), [10, 3, 5]), ), 0)
call_2790 = relay.TupleGetItem(func_1357_call(relay.reshape(const_2789.astype('float64'), [10, 3, 5]), relay.reshape(const_2789.astype('float64'), [10, 3, 5]), ), 0)
func_1659_call = mod.get_global_var('func_1659')
func_1663_call = mutated_mod.get_global_var('func_1663')
const_2794 = relay.const([3,-4,-6,6,-10,-3,-5,5,-1,9,5,-8,7,-6,-10,-6,4,1,-7,-3,9,1,6,1,4,-5,-1,1,-2,10,-6,8,-8,-4,-3,3,3,-7,-2,6,-6,5,1,5,5,-9,2,4,6,7,5,3,-6,6,-7,-1,3,-10,4,-2,-1,-1,-8,-4,-3,4,-1,-7,-5,2,-7,-5,-1,-7,-10,-5,9,3,10,-2,6,-10,-10,3,-10,-9,2,-7,9,-9,2,10,-7,-9,-8,-10,4,3,-9,-1,-3,-5,-4,-7,8,-2,7,4,-4,-3,-3,-9,6,-4,8,3,-8,6,3,-5,-9,-3,-10,2,-9,6,-9,2,-7,-10,4,8,-2,-1,10,-7,-6,7,5,-10,6,10,-3,1,-9,-8,-4,2,-3,-2,3,-3,-8,-5,-10,1,10,-9,4,-6,-1,-5,-1,1,-1,8,-2,3,1,-7,2,5,9,-7,-6,-3,7,1,4,5,-7,-1,6,-1,3,-6,-5,-7,4,5,-8,6,6,-7,-9,10,-7,-7,7,8,5,5,4,4,5,-8,8,10,1,-8,10,-8,-1,10,2,-9,9,-7,-5,10,10,5,-10,-4,4,3,10,-3,-6,-8,-8,-7,9,1,-5,-6,-9,-5,-7,1,-8,7,4,8,10,8,3,8,-9,7,-2,-1,5,-9,4,4,-4,2,9,-8,6,-1,-3,-2,-10,8,-4,-10,-6,1,-10,-2,6,-2,3,-7,10,-1,-7,-7,6,8,8,-10,8,2,6,2,-9,-8,6,5,-5,1,9,-10,5,6,-5,-6,8,3,-4,-8,1,7,-3,-5,9,10,-4,-5,-8,2,5,-6,-8,7,-4,-6,2,2,8,-4,3,-6,-4,-8,2,-6,8,10,-3,-1,-3,-1,2,4,3,6,-4,5,-3,-2,4,2,2,-9,10,-3,7,-9,9,1,-1,-8,-9,-5,-9,-7,-5,-5,10,3,6,-2,9,-3,7,8,3,5,2,-6,6,-2,-4,-7,4,4,-5,-4,2,-3,-3,8,-9,-10,2,-10,1,9,-10,10,8,4,4,10,-7,-4,-3,6,7,1,-2,-10,-4,10,7,9,-6,1,-3,6,3,10,-6,8,-2,5,-9,-9,-5,-8,-1,-10,-4,-8,3,6,-8,3,-3,-7,7,9,8,2,8,-8,9,-7,10,-9,-9,-10,-3,1,4,-3,10,9,-1,-3,-3,8,-10,4,-10,6,9,-8,-9,-10,-5,-5,6,-6,7,6,2,-9,-10,-6,-7,10,8,-10,-7,1,-5,10,10,-8,5,4,-1,2,7,2,10,-2,1,5,-4,9,-3,-3,-5,10,7,9,-9,9,-1,-10,2,7,-5,9,-1,3,9,8,8,-6,-4,-5,8,-8,3,-7,-1,-8,1,8,-10,-7,-6,5,-3,-9,5,-9,-7,1,-7,7,-5,6,6,9,6,5,8,-6,-2,-9,10,-10,-5,7,1,1,10,-3,3,4,-7,1,-10,8,1,-9,-5,6,-1,-1,-8,10,2,-8,-5,-4,1,8,10,5,3,-2,2,8,4,8,6,4,1,-2,-2,7,-10,7,2,3,6,4,5,3,-5,-3,-9,6,-7,-4,-5,-6,-7,4,7,-5,-3,10,4,7,-6,-8,-5,5,-5,3,-2,-4,4,-8], dtype = "uint8")#candidate|2794|(624,)|const|uint8
call_2793 = relay.TupleGetItem(func_1659_call(relay.reshape(const_2794.astype('uint8'), [3, 13, 16]), relay.reshape(const_2794.astype('uint8'), [3, 13, 16]), relay.reshape(call_2703.astype('bool'), [32,]), ), 0)
call_2795 = relay.TupleGetItem(func_1663_call(relay.reshape(const_2794.astype('uint8'), [3, 13, 16]), relay.reshape(const_2794.astype('uint8'), [3, 13, 16]), relay.reshape(call_2703.astype('bool'), [32,]), ), 0)
output = relay.Tuple([call_2703,bop_2760,uop_2777,call_2788,const_2789,call_2793,const_2794,])
output2 = relay.Tuple([call_2704,bop_2763,uop_2779,call_2790,const_2789,call_2795,const_2794,])
func_2806 = relay.Function([var_2759,], output)
mod['func_2806'] = func_2806
mod = relay.transform.InferType()(mod)
mutated_mod['func_2806'] = func_2806
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2807 = relay.var("var_2807", dtype = "float32", shape = (14, 4, 3))#candidate|2807|(14, 4, 3)|var|float32
func_2806_call = mutated_mod.get_global_var('func_2806')
call_2808 = func_2806_call(var_2807)
output = call_2808
func_2809 = relay.Function([var_2807], output)
mutated_mod['func_2809'] = func_2809
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2816 = relay.var("var_2816", dtype = "uint32", shape = (16, 16, 6))#candidate|2816|(16, 16, 6)|var|uint32
var_2817 = relay.var("var_2817", dtype = "uint32", shape = (16, 16, 6))#candidate|2817|(16, 16, 6)|var|uint32
bop_2818 = relay.not_equal(var_2816.astype('bool'), relay.reshape(var_2817.astype('bool'), relay.shape_of(var_2816))) # shape=(16, 16, 6)
output = bop_2818
output2 = bop_2818
func_2825 = relay.Function([var_2816,var_2817,], output)
mod['func_2825'] = func_2825
mod = relay.transform.InferType()(mod)
mutated_mod['func_2825'] = func_2825
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2825_call = mutated_mod.get_global_var('func_2825')
var_2827 = relay.var("var_2827", dtype = "uint32", shape = (16, 16, 6))#candidate|2827|(16, 16, 6)|var|uint32
var_2828 = relay.var("var_2828", dtype = "uint32", shape = (16, 16, 6))#candidate|2828|(16, 16, 6)|var|uint32
call_2826 = func_2825_call(var_2827,var_2828,)
output = call_2826
func_2829 = relay.Function([var_2827,var_2828,], output)
mutated_mod['func_2829'] = func_2829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1846_call = mod.get_global_var('func_1846')
func_1848_call = mutated_mod.get_global_var('func_1848')
call_2843 = func_1846_call()
call_2844 = func_1846_call()
var_2859 = relay.var("var_2859", dtype = "float32", shape = (14, 4, 3))#candidate|2859|(14, 4, 3)|var|float32
bop_2860 = relay.logical_and(call_2843.astype('bool'), relay.reshape(var_2859.astype('bool'), relay.shape_of(call_2843))) # shape=(14, 4, 3)
bop_2863 = relay.logical_and(call_2844.astype('bool'), relay.reshape(var_2859.astype('bool'), relay.shape_of(call_2844))) # shape=(14, 4, 3)
output = relay.Tuple([bop_2860,])
output2 = relay.Tuple([bop_2863,])
func_2864 = relay.Function([var_2859,], output)
mod['func_2864'] = func_2864
mod = relay.transform.InferType()(mod)
mutated_mod['func_2864'] = func_2864
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2865 = relay.var("var_2865", dtype = "float32", shape = (14, 4, 3))#candidate|2865|(14, 4, 3)|var|float32
func_2864_call = mutated_mod.get_global_var('func_2864')
call_2866 = func_2864_call(var_2865)
output = call_2866
func_2867 = relay.Function([var_2865], output)
mutated_mod['func_2867'] = func_2867
mutated_mod = relay.transform.InferType()(mutated_mod)
func_234_call = mod.get_global_var('func_234')
func_235_call = mutated_mod.get_global_var('func_235')
call_2881 = relay.TupleGetItem(func_234_call(), 0)
call_2882 = relay.TupleGetItem(func_235_call(), 0)
func_1659_call = mod.get_global_var('func_1659')
func_1663_call = mutated_mod.get_global_var('func_1663')
const_2889 = relay.const([4,-1,-1,7,-7,-9,-9,-1,-9,5,4,-4,4,6,10,7,5,4,10,-1,4,-3,2,9,-9,-5,-6,1,-10,-7,4,-4,-9,-6,-10,6,-1,-10,-3,4,3,4,-10,-1,-3,1,-2,8,-3,-10,5,10,5,9,-9,1,-4,-3,-9,5,3,-1,10,6,-6,-8,-2,-5,8,-6,-6,-1,1,5,8,-4,-5,-8,4,10,-10,-1,9,-3,9,-6,-8,7,8,-1,-3,7,-2,5,-9,-8,-5,5,-6,-3,-10,1,-3,-7,-10,7,-7,-3,1,7,-5,3,7,-6,-6,7,5,4,-6,-8,3,-2,-2,-1,3,5,4,-9,-7,3,3,1,-10,5,8,-4,1,-1,-1,7,10,-3,3,-9,-7,6,-4,8,-2,8,10,-2,8,-5,-8,4,-8,6,8,-2,8,5,-4,4,7,7,5,-10,5,-3,-10,10,-5,9,-10,8,-10,-9,-5,-10,4,2,7,4,7,-4,6,7,10,3,-1,-9,-4,-5,9,3,-5,5,-7,5,-6,-3,2,-2,-9,2,5,-9,10,-8,-9,4,-8,-5,6,10,-8,-4,4,3,-10,1,8,6,4,-7,-7,-9,8,9,-4,7,4,2,-7,1,-10,5,-4,6,-5,5,1,-6,-7,-4,5,-5,-5,7,2,1,2,-9,-9,8,-5,-5,-6,7,7,4,-7,1,6,5,-7,9,4,-8,5,6,-9,-8,3,8,-9,10,-1,-7,8,-6,-8,-4,5,7,8,-9,4,1,3,5,-2,-9,7,-2,7,10,3,10,-6,7,10,-10,-3,2,-10,1,6,-3,-5,-8,2,-8,3,-4,-6,-4,9,1,-5,-10,-1,-5,1,10,4,10,7,3,-7,1,-8,-10,-1,8,3,2,-3,9,-6,1,8,-10,-1,-6,-9,-2,4,-5,10,-2,5,6,-1,-1,-5,-9,-4,-9,3,3,-6,1,6,6,3,-8,-10,-6,1,-9,10,9,-8,-10,6,3,8,-2,3,-10,-4,5,-5,4,-8,2,3,-3,10,2,-5,-5,-2,-7,3,-1,10,-10,7,-10,-10,-3,2,4,7,7,10,7,7,6,3,-8,3,7,5,-3,8,6,9,-3,5,-8,-1,8,9,9,-1,-5,6,-2,-9,-4,10,8,-9,6,10,8,9,9,-9,-1,7,3,-8,-2,10,4,5,9,-3,-5,-9,4,10,9,6,-10,-6,6,-9,-10,6,9,6,-5,-5,3,5,3,3,-5,-1,-1,7,10,-8,5,4,5,-3,8,1,1,9,3,5,-2,-4,-3,2,7,4,4,-7,6,9,10,-5,10,-5,7,-3,-8,4,8,-7,-6,8,-6,10,8,8,-3,-9,1,8,-5,9,-7,-7,8,9,-2,3,5,2,5,1,6,-3,-3,-5,9,2,-6,1,2,8,-9,3,-8,-9,-6,-3,8,9,6,-10,9,-10,-10,3,-3,5,3,7,-3,-6,-5,-1,-4,6,6,4,-7,-4,-7,10,-7,-3,-5,4,7,8,9,-8,-2,5,-10,5,5,-8,-6,4,7,4,10,-9,7,10,7,-1,2,-6,4,2,1,-4,10,10,9,-1,-3,-5,-10,-8,-5,-5,-6,-9,-4,-2,5,-4,7,-4,8,-5,-6,3,5], dtype = "uint8")#candidate|2889|(624,)|const|uint8
const_2890 = relay.const([True,False,True,False,False,False,False,False,True,True,False,True,False,True,True,True,True,False,False,True,True,True,False,False,False,False,False,False,True,True,True,False], dtype = "bool")#candidate|2890|(32,)|const|bool
call_2888 = relay.TupleGetItem(func_1659_call(relay.reshape(const_2889.astype('uint8'), [3, 13, 16]), relay.reshape(const_2889.astype('uint8'), [3, 13, 16]), relay.reshape(const_2890.astype('bool'), [32,]), ), 1)
call_2891 = relay.TupleGetItem(func_1663_call(relay.reshape(const_2889.astype('uint8'), [3, 13, 16]), relay.reshape(const_2889.astype('uint8'), [3, 13, 16]), relay.reshape(const_2890.astype('bool'), [32,]), ), 1)
func_1604_call = mod.get_global_var('func_1604')
func_1605_call = mutated_mod.get_global_var('func_1605')
call_2896 = relay.TupleGetItem(func_1604_call(), 1)
call_2897 = relay.TupleGetItem(func_1605_call(), 1)
output = relay.Tuple([call_2881,call_2888,const_2889,const_2890,call_2896,])
output2 = relay.Tuple([call_2882,call_2891,const_2889,const_2890,call_2897,])
func_2908 = relay.Function([], output)
mod['func_2908'] = func_2908
mod = relay.transform.InferType()(mod)
mutated_mod['func_2908'] = func_2908
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2908_call = mutated_mod.get_global_var('func_2908')
call_2909 = func_2908_call()
output = call_2909
func_2910 = relay.Function([], output)
mutated_mod['func_2910'] = func_2910
mutated_mod = relay.transform.InferType()(mutated_mod)
func_617_call = mod.get_global_var('func_617')
func_618_call = mutated_mod.get_global_var('func_618')
call_2918 = func_617_call()
call_2919 = func_617_call()
output = call_2918
output2 = call_2919
func_2946 = relay.Function([], output)
mod['func_2946'] = func_2946
mod = relay.transform.InferType()(mod)
mutated_mod['func_2946'] = func_2946
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2946_call = mutated_mod.get_global_var('func_2946')
call_2947 = func_2946_call()
output = call_2947
func_2948 = relay.Function([], output)
mutated_mod['func_2948'] = func_2948
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2667_call = mod.get_global_var('func_2667')
func_2669_call = mutated_mod.get_global_var('func_2669')
call_2982 = relay.TupleGetItem(func_2667_call(), 3)
call_2983 = relay.TupleGetItem(func_2669_call(), 3)
const_2990 = relay.const([[[10,2,9,-4,1,5,10,7,5,8,-7,-3,-5],[-9,-3,-7,-4,8,7,8,9,1,7,3,3,1],[2,-1,4,-10,-6,1,-5,3,3,9,7,3,-8],[-5,-8,1,10,-7,-3,-1,-3,8,1,2,-3,8],[-1,-3,7,-9,4,-3,5,7,8,-8,-10,2,6],[-9,-5,10,-8,-6,-2,-8,-7,1,4,2,7,4],[4,1,10,-2,7,-10,6,-1,-2,-7,1,-3,-7],[6,2,-3,6,8,-6,-8,4,-9,7,-9,9,10],[-3,5,-7,-3,-1,-7,10,2,8,8,-1,2,-7],[6,8,-7,8,-10,3,4,-10,2,10,6,5,10],[3,1,-7,-7,1,-8,6,-4,1,-2,2,-1,-7],[10,2,-7,4,-6,-4,-7,-9,-6,1,3,-9,-5],[10,-3,2,10,-3,-9,-4,9,-10,-5,-9,5,2],[-6,-4,3,-4,4,10,-9,10,2,-5,-3,7,-5],[10,8,7,-4,2,8,4,3,-5,-8,2,-10,-1],[3,3,-4,-9,5,-8,-8,8,8,9,5,6,10]],[[3,9,5,4,2,-10,-4,-7,-6,3,-5,6,-4],[8,6,10,-8,-5,-10,10,9,-3,7,-3,8,-4],[9,-5,-1,-1,-10,8,9,-2,4,-9,4,-4,-3],[-1,-5,2,-7,4,-9,-4,-7,7,-8,3,3,-3],[-5,7,7,8,4,-7,6,-8,-8,4,-9,-3,1],[6,-9,10,-9,-1,6,-10,9,1,9,-2,6,-4],[8,9,-3,-5,6,-6,4,-3,9,9,9,5,1],[-6,-5,1,10,-3,7,-5,5,9,-1,8,-6,-9],[-10,4,2,-10,4,10,-1,5,3,2,3,7,-6],[3,-3,8,7,-5,-5,7,6,3,4,-9,10,-7],[5,-7,1,4,4,-7,7,1,-9,-1,-8,6,4],[9,7,7,1,4,5,6,-1,10,9,1,-2,4],[-7,-3,6,-5,7,-4,5,10,7,9,9,9,1],[-7,-2,-4,-1,-2,-9,9,-8,-6,-4,-2,2,-10],[-3,8,-9,-6,6,-10,6,-6,-6,3,-2,6,3],[9,-1,6,-8,-7,-1,-7,-4,-8,8,7,10,9]],[[-7,10,-7,7,7,-4,-2,-1,-6,2,7,4,3],[-1,-1,7,-7,10,-5,4,2,7,8,9,-8,8],[10,-1,3,-9,2,4,2,-3,-3,-9,4,-1,3],[8,10,7,8,-4,-9,5,9,-3,3,10,-3,-3],[4,-1,1,-2,-3,-10,8,2,-4,-1,6,6,9],[7,4,1,1,6,-9,-2,7,5,-5,5,6,4],[7,5,-5,-10,-2,8,-10,7,5,6,-1,-9,10],[6,7,1,-2,-10,9,-8,10,4,2,-1,-3,1],[10,10,2,-7,8,3,-2,-6,4,2,2,5,-9],[1,5,-4,9,-4,-10,10,-7,-7,-9,-10,9,-6],[-9,-4,-7,-8,6,7,8,8,2,-7,4,-8,8],[-3,-1,9,2,-6,-10,-3,-8,4,2,3,4,3],[-5,1,10,-2,5,-8,-7,-7,-1,-3,-1,-5,3],[-4,-8,-6,-7,-8,-1,7,4,-4,-2,-7,-9,9],[1,2,-2,2,-3,-6,-3,7,-7,-1,-10,1,6],[-4,-10,5,-9,-5,3,-2,6,-9,2,-5,2,9]],[[1,-3,-10,1,10,-1,-3,9,-6,6,-8,-10,-3],[-9,-1,9,8,6,-1,-8,-5,1,7,-5,2,2],[-8,-2,9,8,-10,1,-8,-4,6,-9,10,8,-9],[-10,-6,-1,-7,5,-4,6,-7,10,4,6,7,-8],[5,-4,-10,-7,7,1,3,-1,-9,1,-2,5,8],[-5,-7,1,8,8,10,-4,-3,2,-3,3,10,1],[-6,7,6,-6,-6,6,-4,1,2,-2,2,-3,7],[-8,1,-8,-4,10,8,6,4,-7,8,2,-5,9],[8,-6,-9,3,-4,6,5,-9,-5,-8,-8,-7,3],[10,-6,9,10,-1,10,8,5,1,1,5,-6,5],[8,-2,-5,-10,9,5,5,-8,-9,8,-10,6,-10],[7,3,-9,6,-1,6,-2,-3,4,-4,-4,9,-9],[-10,2,7,5,3,-1,7,-2,7,8,10,9,-6],[-10,-4,8,5,1,1,-2,-10,-5,-6,10,10,3],[-1,5,5,6,6,1,-4,-3,-8,3,-7,5,-5],[9,4,-7,-4,4,-2,1,4,9,-6,-5,9,-2]],[[-6,2,-3,-1,10,-4,2,8,-8,-2,-10,-10,-7],[-9,-5,-3,-10,-4,-3,-2,3,-1,-3,9,-5,2],[3,-10,-9,7,1,-4,-2,-6,3,9,-3,1,7],[-7,-2,-8,3,7,8,-7,-1,-4,1,-7,-9,8],[-5,9,-10,4,7,7,1,-3,8,-10,3,4,-5],[6,-9,7,5,8,2,7,6,-9,-10,6,2,-8],[1,9,-5,1,1,-8,3,4,-7,-3,7,-10,6],[-6,3,3,8,-1,7,8,9,6,3,-5,1,5],[-2,4,10,-6,5,-6,-3,7,10,-10,3,-9,4],[-9,4,10,7,-5,3,10,3,3,7,-6,7,-6],[-1,-7,8,9,-9,1,-4,-5,-10,-7,4,-10,9],[-10,3,-7,8,9,-3,2,-9,10,-1,-10,-3,-5],[8,10,3,-6,-3,-1,10,-10,10,4,7,1,-10],[-9,2,10,1,-7,-9,3,5,-4,3,7,8,-1],[5,10,-6,8,7,6,-9,4,-6,-3,-8,8,-3],[-7,6,3,-1,-7,-6,-5,-5,10,-5,-4,-1,4]],[[6,-3,6,-7,7,4,-4,6,-5,2,-3,-4,9],[9,-6,1,6,-10,-3,7,-8,-1,3,4,-10,8],[1,4,-1,-1,-8,9,-6,6,-6,3,-5,6,-2],[6,7,7,-7,9,4,4,-2,-5,10,10,-6,9],[7,-1,-6,-3,10,-2,-3,-4,-2,-8,-9,-3,-6],[-4,5,-6,-9,-3,4,9,-8,-1,-3,-7,-1,-9],[9,9,6,8,9,6,-10,4,-7,-8,-3,5,1],[-10,8,-3,3,2,7,3,-5,5,-9,7,-1,10],[-3,-9,6,7,1,3,-3,-5,7,8,8,5,-2],[3,9,-7,-8,-7,10,-2,-5,4,10,-10,-7,8],[2,5,8,-7,-1,3,3,-6,5,3,-1,-8,8],[9,-6,5,10,4,-5,-9,7,6,2,-4,-9,5],[-8,2,-2,-5,6,8,7,-6,-5,9,-4,6,8],[-3,9,-7,-2,2,10,2,-7,-3,-4,-7,3,3],[-2,3,10,-6,-3,-5,2,9,-5,9,1,6,-9],[6,-10,1,-9,3,10,6,2,10,-9,5,10,-7]]], dtype = "uint8")#candidate|2990|(6, 16, 13)|const|uint8
bop_2991 = relay.subtract(call_2982.astype('int16'), relay.reshape(const_2990.astype('int16'), relay.shape_of(call_2982))) # shape=(6, 16, 13)
bop_2994 = relay.subtract(call_2983.astype('int16'), relay.reshape(const_2990.astype('int16'), relay.shape_of(call_2983))) # shape=(6, 16, 13)
uop_3001 = relay.sqrt(bop_2991.astype('float32')) # shape=(6, 16, 13)
uop_3003 = relay.sqrt(bop_2994.astype('float32')) # shape=(6, 16, 13)
output = uop_3001
output2 = uop_3003
func_3023 = relay.Function([], output)
mod['func_3023'] = func_3023
mod = relay.transform.InferType()(mod)
output = func_3023()
func_3024 = relay.Function([], output)
mutated_mod['func_3024'] = func_3024
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2319_call = mod.get_global_var('func_2319')
func_2321_call = mutated_mod.get_global_var('func_2321')
call_3042 = relay.TupleGetItem(func_2319_call(), 0)
call_3043 = relay.TupleGetItem(func_2321_call(), 0)
func_355_call = mod.get_global_var('func_355')
func_356_call = mutated_mod.get_global_var('func_356')
call_3050 = relay.TupleGetItem(func_355_call(), 2)
call_3051 = relay.TupleGetItem(func_356_call(), 2)
func_487_call = mod.get_global_var('func_487')
func_489_call = mutated_mod.get_global_var('func_489')
var_3070 = relay.var("var_3070", dtype = "float64", shape = (7, 198))#candidate|3070|(7, 198)|var|float64
call_3069 = relay.TupleGetItem(func_487_call(relay.reshape(var_3070.astype('float64'), [9, 11, 14])), 1)
call_3071 = relay.TupleGetItem(func_489_call(relay.reshape(var_3070.astype('float64'), [9, 11, 14])), 1)
output = relay.Tuple([call_3042,call_3050,call_3069,var_3070,])
output2 = relay.Tuple([call_3043,call_3051,call_3071,var_3070,])
func_3090 = relay.Function([var_3070,], output)
mod['func_3090'] = func_3090
mod = relay.transform.InferType()(mod)
var_3091 = relay.var("var_3091", dtype = "float64", shape = (7, 198))#candidate|3091|(7, 198)|var|float64
output = func_3090(var_3091)
func_3092 = relay.Function([var_3091], output)
mutated_mod['func_3092'] = func_3092
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1751_call = mod.get_global_var('func_1751')
func_1752_call = mutated_mod.get_global_var('func_1752')
call_3094 = func_1751_call()
call_3095 = func_1751_call()
func_2825_call = mod.get_global_var('func_2825')
func_2829_call = mutated_mod.get_global_var('func_2829')
const_3101 = relay.const([[-9,-5],[-3,7],[-4,-3],[-2,9],[-5,6],[6,3],[7,5],[-6,-9],[4,-8],[-6,-2],[2,9],[4,-7],[7,-4],[5,8],[-1,-2],[-10,10],[4,10],[-4,2],[-8,2],[-9,10],[2,-8],[-1,-3],[-3,-9],[-5,-6],[-8,-8],[-9,-8],[1,8],[1,-7],[1,-2],[-4,-7],[9,10],[5,-2],[2,-7],[2,9],[-7,5],[-6,1],[-8,2],[-9,8],[4,-1],[-4,4],[-6,-9],[6,2],[-7,-1],[7,-2],[6,-6],[-4,-2],[-2,7],[-9,2],[-2,4],[10,-3],[-10,2],[8,-4],[-10,1],[7,-4],[8,5],[-4,3],[-9,-6],[-2,6],[3,1],[1,-8],[-6,-7],[-4,-1],[2,-2],[-4,-4],[3,-10],[7,6],[3,3],[-3,-5],[2,3],[2,-10],[10,1],[-10,-7],[-3,7],[4,-3],[-3,2],[-9,-8],[-8,-9],[-4,5],[5,-10],[-8,-8],[-7,-4],[2,-9],[-6,-2],[8,8],[-10,-6],[-7,10],[6,-9],[-8,-9],[3,7],[3,-2],[-7,-3],[-4,-10],[-9,-9],[-9,10],[-1,-10],[-7,-6],[-4,-8],[7,5],[-4,-8],[1,-3],[8,9],[-10,-3],[-2,-2],[3,1],[-10,-2],[1,-2],[8,-1],[10,1],[5,5],[1,-8],[10,1],[-7,1],[-3,4],[-2,7],[8,9],[4,-6],[-2,-6],[-1,-7],[4,6],[-2,1],[-10,1],[3,2],[-8,9],[-4,2],[-8,-10],[-5,-1],[7,-2],[-2,8],[2,-6],[7,-6],[2,8],[-4,2],[1,2],[9,4],[-9,-6],[-1,-7],[-2,-8],[2,6],[1,7],[-6,-7],[1,2],[-3,5],[-3,6],[-5,-7],[-5,-8],[10,10],[7,7],[8,-8],[-5,8],[-7,1],[4,-5],[8,8],[8,-2],[-1,10],[-4,9],[4,1],[-10,-9],[-2,8],[-6,6],[7,-1],[1,3],[-8,10],[-3,3],[10,7],[3,-8],[4,10],[1,8],[-2,-4],[2,7],[-2,1],[-7,1],[8,-7],[3,3],[-3,1],[-1,-3],[6,7],[5,-10],[-10,10],[-7,3],[10,6],[5,-5],[4,-2],[3,-7],[-1,8],[8,-2],[-1,4],[-5,3],[8,1],[9,-10],[9,10],[-7,10],[-1,3],[8,-8],[8,-5],[10,10],[-7,9],[-6,3],[-3,9],[9,-10],[-10,2],[10,5],[1,-3],[-9,-6],[4,6],[-8,-5],[-9,-3],[-6,1],[-5,3],[10,-5],[9,-1],[-9,-7],[-6,-2],[10,-5],[4,1],[2,5],[4,5],[6,-6],[-8,-5],[6,1],[-7,-8],[10,9],[-3,3],[2,-3],[6,2],[-7,-8],[7,-1],[7,7],[-5,-2],[8,1],[10,7],[4,8],[-7,1],[-1,9],[2,3],[4,-3],[4,-3],[7,-6],[-8,8],[-2,-1],[9,4],[-10,-5],[7,-2],[-9,7],[2,-8],[4,5],[6,5],[10,-8],[7,-8],[-9,9],[-3,4],[-8,5],[-10,7],[6,9],[5,-1],[-1,5],[-3,5],[6,-7],[-5,-10],[1,-2],[-8,-9],[3,6],[2,-5],[6,-3],[3,-10],[-1,9],[-9,10],[-4,-3],[3,7],[-9,-4],[-8,-6],[-10,-3],[6,-3],[2,7],[-1,-1],[1,-7],[7,-10],[5,-9],[-4,-7],[-3,-7],[-6,8],[-10,-1],[-1,-6],[-10,7],[-9,4],[-3,-6],[6,-1],[-6,8],[7,-3],[-10,-10],[9,-5],[10,-4],[1,2],[-1,-10],[6,7],[-8,-5],[2,3],[-2,-5],[10,-10],[2,-9],[4,-4],[2,3],[5,-1],[5,-9],[-3,1],[7,8],[3,-8],[-4,7],[-10,2],[-7,3],[4,-7],[9,-8],[-10,10],[4,-5],[-8,2],[-1,1],[-4,-7],[-9,-2],[-2,2],[5,-6],[8,4],[-3,-8],[3,-4],[-1,-10],[-7,5],[-7,9],[-8,-3],[-2,9],[4,-1],[-4,10],[1,4],[9,8],[-2,4],[-1,-9],[5,-1],[-10,6],[-6,2],[7,5],[-6,-1],[-4,-2],[1,-6],[-10,-1],[-8,9],[-5,-3],[-1,-10],[7,-8],[6,-9],[-8,7],[-9,-4],[-7,-2],[-9,2],[-8,-6],[-9,9],[2,8],[-5,-8],[-8,-2],[7,5],[-1,10],[10,6],[6,6],[6,1],[3,6],[6,10],[-1,10],[10,-4],[4,3],[-6,9],[8,-7],[-1,2],[6,1],[-2,-6],[5,10],[3,8],[-10,1],[-7,7],[-6,-2],[1,-2],[-4,10],[5,-8],[4,-10],[6,6],[7,9],[8,3],[-8,-4],[1,-9],[10,-10],[7,-9],[-7,-10],[7,6],[-5,-9],[-1,-10],[9,10],[-1,-4],[8,10],[-1,-6],[8,-1],[6,-10],[-2,-6],[3,-4],[2,-4],[-2,-6],[4,8],[6,4],[-2,10],[2,-10],[9,9],[-4,6],[-6,-8],[1,-1],[-1,10],[2,1],[1,-5],[1,9],[-1,-4],[1,10],[-2,-8],[-4,8],[7,-1],[2,-7],[7,-5],[-7,-10],[5,5],[8,3],[-4,3],[-1,3],[8,1],[10,-2],[9,-5],[4,-5],[3,-2],[5,-9],[10,9],[4,1],[8,2],[7,-4],[3,-3],[7,3],[9,-9],[5,-7],[1,-6],[10,6],[7,-7],[-2,-3],[10,-2],[-7,9],[10,-4],[7,10],[7,-2],[1,-6],[-6,5],[4,4],[7,3],[1,-1],[9,8],[7,3],[-3,-3],[-4,3],[4,9],[9,1],[1,9],[7,7],[-5,1],[2,-8],[-2,-9],[9,-6],[1,10],[3,5],[7,-8],[-6,-2],[1,-5],[-9,7],[-1,8],[8,5],[-1,1],[-6,10],[10,2],[4,-7],[7,-5],[2,-10],[10,-6],[-1,-10],[-6,8],[5,7],[-5,-9],[3,1],[7,-10],[10,3],[5,-8],[10,1],[-9,8],[-7,9],[-6,-1],[6,2],[-2,2],[10,1],[5,-6],[-9,1],[-7,4],[-7,-8],[-3,3],[2,3],[-8,5],[-10,-7],[-8,-4],[-1,-7],[-5,2],[3,-7],[8,-6],[-7,-6],[3,7],[8,10],[9,2],[-10,-8],[-7,-9],[2,-7],[-5,-3],[-1,1],[8,7],[4,-1],[3,2],[-4,8],[-3,-4],[-2,5],[3,2],[-5,-5],[-1,-1],[10,-7],[-7,6],[-1,5],[-1,9],[7,3],[-2,-3],[9,3],[10,4],[-8,-5],[-2,-8],[-7,-9],[1,4],[-3,-7],[1,3],[-8,10],[2,10],[-7,-9],[-7,-1],[10,-5],[-9,-9],[3,7],[-8,3],[-9,-5],[-7,3],[3,-2],[-8,5],[5,1],[8,-4],[7,-6],[-4,-4],[2,-3],[6,2],[9,10],[-6,-7],[6,5],[-7,-4],[2,1],[8,6],[7,-8],[9,-2],[3,6],[-8,10],[-1,7],[-4,4],[10,-2],[3,10],[-1,-2],[-10,9],[-8,-1],[-9,10],[6,10],[6,-7],[-1,9],[-9,5],[9,10],[-4,1],[7,-8],[-4,8],[4,3],[-4,-10],[-1,3],[10,-10],[5,-10],[-1,3],[-4,-4],[-9,-10],[2,7],[-6,-5],[8,9],[-3,-8],[-10,-9],[9,1],[-1,4],[9,5],[9,-9],[8,2],[-9,-5],[9,-3],[4,-2],[-2,-8],[7,-4],[-8,-10],[-2,-2],[3,8],[4,-6],[-9,-3],[-1,-5],[7,-7],[-7,-1],[-2,10],[9,4],[-5,-6],[6,-5],[3,7],[5,8],[-5,-6],[-7,-5],[-9,-1],[-8,-2],[7,-5],[2,-9],[10,-2],[8,-6],[-6,-7],[-1,-10],[-9,1],[-5,-4],[1,-7],[-9,-9],[-4,3],[10,7],[2,-8],[8,3],[8,7],[-7,8],[-2,2],[-5,10],[3,-1],[3,-8],[4,7],[-6,1],[6,-9],[-1,-2],[4,-6],[-6,-8],[2,-1],[-1,-7],[7,-9],[6,-6],[10,-5],[4,5],[3,9],[-8,8],[8,4],[-2,-6],[-6,-3],[5,-5],[7,-7],[7,-1],[1,-2],[6,-10],[1,6],[4,-2],[7,3],[7,8],[-7,-4],[-6,9],[-4,-8],[-8,7],[-10,-5],[-4,-7],[4,-6],[9,4],[-8,-2],[-5,4],[9,4],[-10,-1],[5,-9],[2,-2],[5,7],[2,9],[10,-6],[4,6],[4,5],[2,-8],[-1,-6],[2,-9],[-5,-2],[8,9],[-5,-4],[-7,-4],[-2,-8],[-2,-1],[-3,6],[-4,4],[-9,-8],[-10,-4],[-4,-3],[1,-3],[-4,-7],[-7,-1],[-3,8],[2,-1],[-10,8],[8,4],[2,-4],[-5,-6],[-9,-9],[-9,-9],[-7,-4],[-10,-10],[5,-10],[-1,6],[4,-6],[8,1],[-3,4],[-1,6],[9,-9],[-2,9],[8,-2],[-6,2],[-8,-10],[-8,-4],[1,5],[-10,-2],[-9,-7],[-9,-10],[-6,5],[9,-1],[-4,5],[-1,-7],[8,6],[10,-8],[8,-10],[2,3],[-2,-7],[6,10],[-8,-3],[4,3],[9,2],[9,8],[5,-6],[8,2],[-8,1],[-8,5],[5,-9],[8,-3],[-1,-8],[-4,10],[4,4],[-5,-10],[-9,10],[-1,5],[3,-5],[6,-9],[2,9],[-2,3],[5,8],[6,-7],[-10,-4],[2,-4],[-3,-3],[8,8]], dtype = "uint32")#candidate|3101|(768, 2)|const|uint32
call_3100 = func_2825_call(relay.reshape(const_3101.astype('uint32'), [16, 16, 6]), relay.reshape(const_3101.astype('uint32'), [16, 16, 6]), )
call_3102 = func_2825_call(relay.reshape(const_3101.astype('uint32'), [16, 16, 6]), relay.reshape(const_3101.astype('uint32'), [16, 16, 6]), )
func_2667_call = mod.get_global_var('func_2667')
func_2669_call = mutated_mod.get_global_var('func_2669')
call_3105 = relay.TupleGetItem(func_2667_call(), 4)
call_3106 = relay.TupleGetItem(func_2669_call(), 4)
func_2864_call = mod.get_global_var('func_2864')
func_2867_call = mutated_mod.get_global_var('func_2867')
const_3117 = relay.const([-0.743055,3.735585,-5.676992,2.657401,6.347938,-9.047825,9.148566,-5.549565,-3.009835,-6.395941,-6.041988,-9.403668,4.300548,4.921069,2.382910,3.255359,-6.500152,-3.572913,1.666492,5.652171,2.941079,6.077782,5.782575,2.347303,0.966198,3.259491,-3.832485,-3.047714,-2.195040,-5.835568,-4.451086,4.465141,-0.579397,0.924507,5.883051,1.820670,-6.682239,-9.932130,-6.406173,2.690934,9.336384,1.610536,-9.224191,9.908983,4.653002,8.639148,2.807904,-9.062495,-7.677092,-1.635423,-5.682797,-8.591436,-8.468559,-5.674433,-8.410805,-8.555384,-3.509455,5.312543,-4.769863,5.180649,1.894432,4.060180,-0.312938,-6.604520,9.643823,-4.503773,-5.978787,-3.305704,3.025397,2.541362,-7.162534,-5.885916,9.279784,7.225962,-3.119017,0.024632,2.278535,9.749291,-1.146282,6.085818,-6.339320,2.997064,-3.540349,5.125108,-1.812748,-8.076137,-5.017650,9.902762,-8.618137,7.699476,-1.562490,-0.216333,0.439471,0.062830,-0.578317,6.651315,-3.736748,7.103781,-3.346957,4.278159,-0.677200,7.265515,-7.045579,-1.259351,-1.019864,8.418870,4.115825,-6.373804,6.783495,-7.618176,-7.781591,-7.182625,2.039919,-8.642077,-1.589092,-0.836330,3.306264,-9.960082,5.194841,-5.562381,-4.873055,-7.602430,-9.458962,4.703823,-9.297168,5.982351,6.849429,2.832943,9.473829,9.039964,2.032703,-9.202892,0.460818,-0.567790,-8.493518,-6.253273,3.400968,-5.415894,-8.191592,0.541541,7.671884,7.867225,0.504733,2.911619,-7.187872,-2.643492,3.720031,-4.811578,9.644836,5.657846,-5.268784,9.100594,-7.394239,1.157185,6.839032,7.957401,7.804595,0.138999,2.196252,1.545309,3.663089,-8.766394,3.403541,-0.199814,5.075520,-5.416750,3.929851,7.871100], dtype = "float32")#candidate|3117|(168,)|const|float32
call_3116 = relay.TupleGetItem(func_2864_call(relay.reshape(const_3117.astype('float32'), [14, 4, 3])), 0)
call_3118 = relay.TupleGetItem(func_2867_call(relay.reshape(const_3117.astype('float32'), [14, 4, 3])), 0)
uop_3129 = relay.cos(call_3100.astype('float64')) # shape=(16, 16, 6)
uop_3131 = relay.cos(call_3102.astype('float64')) # shape=(16, 16, 6)
output = relay.Tuple([call_3094,const_3101,call_3105,call_3116,const_3117,uop_3129,])
output2 = relay.Tuple([call_3095,const_3101,call_3106,call_3118,const_3117,uop_3131,])
func_3164 = relay.Function([], output)
mod['func_3164'] = func_3164
mod = relay.transform.InferType()(mod)
output = func_3164()
func_3165 = relay.Function([], output)
mutated_mod['func_3165'] = func_3165
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1784_call = mod.get_global_var('func_1784')
func_1785_call = mutated_mod.get_global_var('func_1785')
call_3224 = relay.TupleGetItem(func_1784_call(), 0)
call_3225 = relay.TupleGetItem(func_1785_call(), 0)
output = relay.Tuple([call_3224,])
output2 = relay.Tuple([call_3225,])
func_3252 = relay.Function([], output)
mod['func_3252'] = func_3252
mod = relay.transform.InferType()(mod)
output = func_3252()
func_3253 = relay.Function([], output)
mutated_mod['func_3253'] = func_3253
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2422_call = mod.get_global_var('func_2422')
func_2424_call = mutated_mod.get_global_var('func_2424')
call_3287 = relay.TupleGetItem(func_2422_call(), 0)
call_3288 = relay.TupleGetItem(func_2424_call(), 0)
func_2183_call = mod.get_global_var('func_2183')
func_2187_call = mutated_mod.get_global_var('func_2187')
const_3290 = relay.const([2.925817,-3.812228,7.022697,7.508573,2.346713,8.225422,4.197764,-7.792177,9.906874,-2.736792,-4.150207,3.784817,-2.356559,8.498338,4.511442,7.990910,1.938345,-3.532646,-0.443187,8.865406,2.054121,-3.012440,-8.386151,1.804304,7.440787,-0.763611,-5.409304,-7.931498,-4.578417,-9.846061,5.625626,5.256891,-1.545887,2.792650,0.441168,-7.450787,3.060794,-0.711568,7.880130,5.063771,7.890260,-0.126303,-8.185517,-9.503944,-1.563416,-3.168657,7.147767,-0.075208,4.135340,-1.702468,-1.927097,-9.584208,-3.135294,0.949174,-1.704462,-2.628711,0.199215,2.117989,-2.606349,-0.129268,8.973315,-4.916850,-4.332951,-2.884257,-8.656657,8.048092,7.372138,6.755074,-9.627500,5.938266,2.292265,-4.422063,-0.918723,-9.318644,4.650348,1.674815,-9.095325,9.482806,-6.743869,-9.133766,4.481518,9.824230,0.780695,-1.318305,8.391928,-0.997156,1.252468,0.627728,2.843710,-6.258067,4.265824,0.658310,1.986856,-4.505384,-5.309719,5.821407,-5.711282,-2.716311,5.027452,5.822570,-0.452890,9.554556,-2.270476,0.272805,8.406793,8.658403,7.821407,-1.993447,5.380892,-1.155313,3.720294,4.783713,-2.889458,-3.444569,-1.329116,-5.756386,8.572850,8.577502,5.321516,6.079307,-4.881471,0.399326,7.553469,5.750009,-3.128379,-6.547314,7.918752,-1.949728,0.292271,5.845190,-0.282043,-3.450078,8.506815,-4.902520,-3.729101,8.229738,-3.390446,-8.261637,-8.871671,-5.702781,5.214233,4.294832,8.040959,-9.406864,-5.685171,-2.353147,-8.114331,-7.909769,-9.172440,-1.612498,3.973277,-2.763438,-2.573481,1.690904,-7.636426,2.182903,8.433849,-1.197383,-9.180933,0.872869,-9.189255,-1.129226,4.197797,-2.798034,9.359810,-3.231087,4.099097,-3.632459,-8.560140,-0.022278,9.724495,-4.680312,-5.482290,0.953043,-3.234688,7.763196,0.788958,8.978839,4.220446,-8.187072,-5.281018,2.451982,8.017448,8.127879,5.646921,-8.465454,0.569438,0.614406,2.538905,7.223496,-7.787668,-3.410269,-2.837627,-4.918174,-6.521772,-5.957294,4.107819,-2.719313,4.301586,-2.669966,2.307999,7.223082,-6.553703,5.448444,-3.745668,1.217344,8.369741,-4.870973,5.571495,2.432703,4.807690,-3.156766,2.988337,-6.555095,-9.959851,-0.033813,8.794210,-9.981230,-2.828693,-1.442259,-7.408185,6.064435,7.413792,2.954800,-1.073267,-1.070976,-3.747507,6.083846,8.841327,-5.575389,-2.482858,-5.550344,4.716435,0.176354,-4.659312,-8.653087,5.359625,-2.203303,7.367630,4.712341,2.320492,3.279750,-0.341175,4.579756,-9.214216,2.531334,-1.819548,8.685052,9.182490,-9.845670,-2.557525,-9.026365,-0.518283,-7.100616,6.918432,-7.945599,-0.639968,-4.088454,-9.861604,-4.199078,-3.871325,4.045387,0.347813,-9.171616,-7.589675,-6.519740,9.513514,-7.479950,-5.844752,8.060257,1.464346,-2.116059,6.692909,-6.340421,-7.847848,2.098500,0.243921,-0.750756,6.188589,6.044771,5.461436,-0.029388,-4.891402,-5.731351,5.692182,-7.753262,6.968287,-4.364011,-8.879004,-8.959983,-1.968673,7.054935,8.757963,-1.704737,-3.321841,-4.264056,-6.641757,-7.980565,9.986448,1.669339,-3.643523,3.746193,-4.045227,-5.138593,9.605080,2.611297,-4.481858,8.484854,-6.760006,-1.019261,9.442880,-9.635625,0.051535,-5.038715,-8.779548,-9.386228,-6.898170,-5.037236,7.304037,5.097883,-7.519359,-6.787904,7.718540,-0.015074,-3.304873,-6.311670,3.077930,3.137115,0.101434,8.774892,6.786521,-2.667123,-9.415792,-8.749646,9.123461,-4.512818,-6.443151,7.981966,-4.320791,-7.479753,-6.076651,-2.409848,2.999903,4.962508,4.113753,-4.706937,-2.430236,-2.018422,-5.458295,-0.005671,-9.912779,4.130504,-4.444417,-6.805125,-3.043223,1.542132,6.289780,-5.938782,4.723849,2.507972,-1.293704,3.156472,-9.120335,3.485484,-5.775946,7.736327,-4.248854,4.145634,5.055806,6.266134,-5.392651,-5.100892,-5.041760,1.346229,-4.947057,3.587508,-2.917398,5.261800,-7.242326,7.968527,1.226073,-7.949561,4.402045,-5.020419,6.378524,-8.101387,-5.639960,-7.148912,7.513488,-4.887284,-5.340024,5.584286,-2.749469,-0.549125,4.079097,1.718448,-2.913713,1.764329,4.678921,-7.363034,9.034825,7.893929,2.064656,3.185817,7.125604,4.912150,2.061020,-6.854683,1.001108,-2.425831,6.132839,7.173615,0.827105,1.578416,-1.726757,-8.744577,5.820725,9.514821,5.543381,5.065781,-0.626195,-5.279719,3.970016,8.317784,6.260519,-9.862294,5.920404,-4.001463,-7.556045,-1.794780,1.751462,-9.738400,-4.925797,-3.557363,-0.595472,-4.137942,-6.064698,-4.475376,4.848094,-4.329733,-4.476807,8.976024,2.715511,-9.454046,-5.856759,-3.440765,5.371516,-4.649539,0.246519,1.218116,-4.537834,-7.537297,8.641552,5.984508,2.952919,0.020742,-3.047489,3.487298,4.888812,9.906865,-9.470957,2.549347,-8.226063,5.027273,-4.153808,-4.250948,-9.387119,4.662266,0.252586,2.329381,4.048438,-2.703287,8.201440,7.440241,-4.603869,-9.905606,-5.525053,-3.646522,3.203604,-2.550930,8.364041,2.435781,-1.923775,6.712346,7.483827,-5.455271,8.890487,-7.750305,-3.181870,9.202378,-9.544187,-5.463229,-6.317061,8.991191,-2.845184,9.449611,-5.609506,-9.695891,-2.629065,7.778744,-4.792591,-1.123004,-3.496203,-2.853637,-3.664910,1.301817,-6.401924,3.513935,0.390277,-5.349033,0.765475,0.111993,-1.842154,-1.915157,2.584772,-7.019517,0.142806,1.863362,8.445913,-8.955740,-6.981684,-9.571746,8.985558,7.891917,6.270339,1.188713,6.632467,-6.248680,-8.277871,-2.186262,-1.153828,6.264531,9.590714,-9.273103,-6.255825,-8.891508,-8.626750,1.719072,4.707599,-6.797185,3.873812,7.209821,-6.949286,-2.275142,-5.396761,-9.553770,-9.672457,-9.232276,3.701805,-8.586657,1.805209,-0.555600,-1.729350,-7.178660,-1.691925,-2.920303,-9.527022,-7.829614,5.711195,3.952953,-3.157155,7.785973,2.969125,-7.530186,-3.226381,-6.914103,-2.794911,0.620702,3.107824,-5.730523,7.166301,5.090308,-4.626393,-4.290756,-8.560970,3.808044,-2.714129,3.683259,-3.826382,-1.118491,8.192268,-3.664748,1.969088,-8.369827,2.337905,-8.351258,7.950228,-9.036140,3.984631,0.661346,-6.782997,-5.702359,8.894386,-6.172574,-6.695721,-4.460901,-5.733696,9.247336,9.627464,-2.991518,-4.165593,0.314271,-7.014499,9.893070,-6.782272,9.623215,1.017829,5.487206,-4.349694,-7.392283,-7.016085,-5.023946,3.043788,-0.584687,3.106999,-7.961167,2.411302,5.856434,2.598388,-7.206163,6.100471,4.628933,1.056901,-6.300863,-6.104578,-1.627927,7.745733,0.353527,-6.592258,6.497188,-7.663550,2.219768,4.112164,3.308880,4.688787,7.187889,-2.030484,4.577767,8.303785,7.537576,-5.896493,1.775046,-0.199717,5.920790,-5.152536,-6.035112,-6.661495,0.677852,-2.287378,-6.898383,-5.368223,-2.207005,-3.315874,-9.361365,5.365291,-1.558959,-7.705520,-6.365359,-2.108372,2.301335,-9.440319,-8.348898,-9.363262,5.828371,-3.264363,-1.164526,8.779573,4.778412,8.703797,8.145920,9.354687,-8.544146,1.268343,-5.754662,-4.272891,7.347321,3.896946,4.512118,6.899120,-1.455844,8.231470,-3.642461,-7.100883,-5.396615,6.504875,-5.492754,2.249079,-7.296035,9.412158,6.378273,8.891722,2.900489,-9.609467,-3.519689,4.241650,8.770539,7.536803,1.903773,-0.745125,6.212610,8.169884,-2.794468,4.045277,-9.769127,-9.141695,-1.342828,-4.406756,-3.822747,9.231867,-6.984635,-4.756353,8.889208,3.280757,5.660807,-3.928581,0.630977,-0.583695,5.959475,7.298750,6.513663,0.872350,4.621691,2.056061,-5.227736,-2.289087,8.885708,-6.499017,-7.504716,2.069009,8.292085,4.551090,8.166823,8.476727,6.415702,-1.940558,-4.882254,-4.052991,9.729031,3.967741,-4.350856,-0.127314,-0.635421,-8.617515,-4.058215,-3.923779,-5.381465,5.548029,-9.757488,-2.989384,2.805785,-3.389272,-2.859816,1.231950,-5.955926,1.215957,-2.536531,-8.850451,-4.945428,6.950722,-0.387127,1.205963,1.393146,-4.875862,9.740409,5.133116,-8.964117,-5.623196,1.020329,-1.024389,-8.062096,-7.721592,-6.600011,-2.074064,-5.075545,4.569956,9.750560,9.927894,0.153157,-5.809915,-0.957673,2.911174,1.465275,3.154494,9.533913,-4.980107,5.016502,-0.728976,5.140573,-1.920307,5.911587,-2.906950,-1.331583,3.880927,-3.568053,-5.354750,-7.435134,1.089941,6.603120,-6.033769,-2.741617,3.152791,7.043236,1.029731,-9.178598,-7.266593,-1.764931,-4.956198,-7.966336,-6.437684,-8.819446,9.209361,1.154126,-8.309358,8.525829,0.918917,-8.234097,5.965820,5.499794,-5.853737,8.506219,9.655245,-3.764367,-9.593879,9.495409,3.556702,-0.226463,-9.806444,5.961646,-6.553493,5.560084,-1.157452,-3.026702,-2.433450,1.725441,1.740272,4.361484,-7.218282,1.086419,9.993962,5.035700,-3.723529,6.706437,2.542061,4.450784,-8.658124,-6.580828,-9.346741,-4.281388,-0.400957,-0.674944,-9.973017,-0.759475,3.172886,-3.743187,-6.217274,8.873082,3.834518,-3.032091,8.775578,-0.464690,-2.560790,-6.623001,-6.581632,9.223464,-6.593208,-4.523445,-5.901201,9.068632,-3.347991,-6.934579,-2.029150,2.954145,-0.961923,-9.442491,-8.933139,1.477083,7.350280,1.943818,6.431611,-7.136421,-1.763414,-0.012397,8.949813,-7.882194,3.777745,8.121804,-7.074504,7.564036,-4.954668,-7.943660,1.276138,9.447474,-6.411334,-8.007607,-8.490806,4.162312,8.037000,2.563989,-3.707356,3.939859,-2.909602,3.220632,3.627643,5.406062,-5.598846,-2.770792,-6.427648,7.855015,6.326116,-3.553211,-5.970958,-5.930180,9.581989,0.566800,-6.848309,-7.784008,2.489287,8.967147,-3.157478,-8.682077,4.757847,-3.669654,-0.928523,-8.576091,5.714009,0.892813,-3.342507,-1.526194,6.907373,3.688768,-5.537720,-8.157588,4.864557,-9.676993,4.102338,6.187558,-6.380327,-7.708694,5.810101,-2.026650,4.451047,-4.894525,4.697062,2.686511,-5.001177,-6.975874,-4.418822,-7.422879,3.289889,-3.609952,3.141928,1.499263,2.075447,0.582379,-8.471791,-5.837266,9.936429,4.885759,5.834973,-4.351208,-2.078066,-2.551920,5.359399,-5.461098,0.411141,9.609758,-3.180065,-0.956395,-4.370633,-6.481274,0.480237,-4.116906,-2.060065,-9.550237,3.574185,5.084765,2.721061,-9.966181,5.587960,9.720269,1.854559,0.651826,8.149402,-5.957264,8.337294,-7.286243,0.603128,-6.736093,3.393977,7.022400,6.525537,-2.162900,-1.150610,1.724553,1.753776,-9.421120,-4.848067,6.757459,-4.641371,9.770630,-1.036938,-5.237854,3.231848,6.394406,3.296363,0.419697,-3.574820,-5.699143,-7.136907,-7.370845,-6.302185,0.454737,-5.157109,7.927931,-4.185609,9.130903,-8.464184,-0.200954,-6.203395,-8.530337,-9.174496,-1.307385,1.886098,8.471445,-7.538741,-6.093297,-3.343442,3.645016,-2.861221,6.178436,-7.861579,1.016372,5.083877,-9.566631,-9.244283,8.152343,-4.008097,7.279913,-1.203025,5.417291,-0.545835,-2.235206,6.456733,0.716380,-3.658782,-3.850776,4.048841,9.308050,7.982479,-9.032530,5.165840,-3.653814,9.508415,0.932899,-9.993064,5.452940,-5.407256,-7.110346,7.142106,4.795649,-8.596372,-3.407886,-4.577301,-1.838610,3.707994,9.565819,4.065937,-5.158854,8.587749,-0.047348,3.541679,-6.355912,6.646944,9.692651,-2.355083,-8.028094,0.413280,7.409605,2.516797,9.969103,-7.202495,1.943561,3.810527,5.939068,1.024323,-9.853062,7.713461,3.371882,8.297158,6.451962,7.879157,2.864091,4.025516,-8.803090,-0.217590,8.214001,-3.754136,-6.999445,0.212745,-2.530945,-9.834910,0.180832,7.340365,-5.148785,2.406207,2.242020,-3.889971,9.331149,3.933220,-1.713099,-6.397885,-3.070956,-9.444765,-8.093488,-0.637855,-3.763998,2.504978,-2.697292,-5.393409,-2.757256,2.197676,1.334101,-5.037298,2.081074,-9.997925,2.622552,4.684977,-2.114731,0.150975,1.903897,7.309888,-0.982093,3.360233,-7.317407,3.382622,-6.266346,-2.693862,-1.340136,-2.910701,-0.679361,3.505164,5.641017,5.528116,-8.550873,-3.019755,1.996098,-3.461318,8.971292,-0.433910,1.474282,-2.627303,-1.627886,1.632546,1.365996,-0.789465,3.218245,8.592293,4.319711,-6.799994,9.065496,1.307643,-3.422934,-2.438726,-7.043149,3.783267,5.529819,3.494567,-9.879741,-4.316470,-5.662805,0.805210,0.922597,4.069798,-6.550141,-1.622868,-1.917681,-5.297813,8.245969,-4.087737,4.224847,-2.403968,1.515586,6.027787,-8.994032,5.493038,-0.428658,-3.040515,-2.982898,-3.662125,3.000460,-9.221976,2.294897,2.584821,-4.575042,-7.929369,6.048055,-4.378945,-9.541539,9.248585,1.015750,4.271532,2.644069,8.576296,1.166131,-7.956420,5.400557,2.630013,4.820584,5.160713,-7.344434,-8.492476,-2.715112,0.753638,-9.222995,-9.640844,9.776887,2.975333,7.225602,-8.302598,8.927926,-0.187255,-1.883438,9.884088,-1.155663,8.711053,-6.212828,-1.517145,-6.600375,1.643554,-0.016697,-1.564712,8.596763,2.766713,0.261239,-0.965129,-6.758619,3.963568,-6.051250,6.745788,1.204889,7.743076,-7.276888,4.573655,9.689761,9.632899,-3.097275,-8.165952,6.871094,-6.910026,1.010705,7.032787,8.425632,-2.914126,1.721937,-6.746919,-6.072928,-6.164444,-2.726220,1.812309,-5.538544,8.628227,2.334056,6.847518,4.241792,1.487960,-3.800796,8.775914,0.415967,1.848455,0.353830,8.803294,2.113913,-0.326931,9.696256,-0.896943,-6.187633,-3.217538,8.017191,-4.039429,-6.141269,9.414253,5.190246,-5.099716,4.490539,0.006829,-6.496073,-6.173957,4.717442,8.359057,1.994894,-0.321930,0.167181,2.658140,-2.768938,-0.171129,5.360790,2.158960,-7.084205,2.817083,1.622216,-2.231859,7.592599,-8.792129,5.732956,-4.263295,3.564891,-5.236060,9.676187,7.211686,8.251404,-7.237472,7.252526,2.491175,-6.497371,4.452912,-8.656431,7.798647,9.809379,-1.509094,6.538155,1.169545,7.272290,2.215103,5.536798,8.018992,-6.580805,8.023443,2.710846,7.521229,4.675486,-5.762178,-1.951601,1.621898,8.024496,-8.847942,-9.829858,5.569478,2.397367,1.764950,3.486702,-6.585515,-2.713516,9.882396,-0.739192,7.978291,-9.159066,8.386859,2.145899,-5.055782,-8.931089,3.775944,-7.734308,8.041243,-3.462910,-5.474546,2.301948,9.294447,-9.834005,9.329802,-5.441033,-1.494131,-0.022283,0.207210,-7.903723,-3.100634,4.786950,-0.698838,-9.453707,0.057244,-1.694328,-5.016985,-1.073942,0.873376,5.914103,-3.641084,-9.200065,-9.148892,-9.701845,-4.712524,5.071268,-5.717867,2.797913,-0.270599,-0.311931,-1.667332,7.340613], dtype = "float64")#candidate|3290|(1386,)|const|float64
var_3291 = relay.var("var_3291", dtype = "bool", shape = (32, 1))#candidate|3291|(32, 1)|var|bool
call_3289 = relay.TupleGetItem(func_2183_call(relay.reshape(const_3290.astype('float64'), [1386,]), relay.reshape(var_3291.astype('bool'), [32,]), ), 6)
call_3292 = relay.TupleGetItem(func_2187_call(relay.reshape(const_3290.astype('float64'), [1386,]), relay.reshape(var_3291.astype('bool'), [32,]), ), 6)
func_1151_call = mod.get_global_var('func_1151')
func_1152_call = mutated_mod.get_global_var('func_1152')
call_3299 = relay.TupleGetItem(func_1151_call(), 0)
call_3300 = relay.TupleGetItem(func_1152_call(), 0)
func_1478_call = mod.get_global_var('func_1478')
func_1481_call = mutated_mod.get_global_var('func_1481')
call_3309 = relay.TupleGetItem(func_1478_call(relay.reshape(call_3287.astype('bool'), [14, 4, 3]), relay.reshape(call_3289.astype('float64'), [14, 4, 3]), ), 0)
call_3310 = relay.TupleGetItem(func_1481_call(relay.reshape(call_3287.astype('bool'), [14, 4, 3]), relay.reshape(call_3289.astype('float64'), [14, 4, 3]), ), 0)
output = relay.Tuple([call_3287,call_3289,const_3290,var_3291,call_3299,call_3309,])
output2 = relay.Tuple([call_3288,call_3292,const_3290,var_3291,call_3300,call_3310,])
func_3316 = relay.Function([var_3291,], output)
mod['func_3316'] = func_3316
mod = relay.transform.InferType()(mod)
var_3317 = relay.var("var_3317", dtype = "bool", shape = (32, 1))#candidate|3317|(32, 1)|var|bool
output = func_3316(var_3317)
func_3318 = relay.Function([var_3317], output)
mutated_mod['func_3318'] = func_3318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2422_call = mod.get_global_var('func_2422')
func_2424_call = mutated_mod.get_global_var('func_2424')
call_3365 = relay.TupleGetItem(func_2422_call(), 2)
call_3366 = relay.TupleGetItem(func_2424_call(), 2)
func_3316_call = mod.get_global_var('func_3316')
func_3318_call = mutated_mod.get_global_var('func_3318')
call_3381 = relay.TupleGetItem(func_3316_call(relay.reshape(call_3365.astype('bool'), [32, 1])), 3)
call_3382 = relay.TupleGetItem(func_3318_call(relay.reshape(call_3365.astype('bool'), [32, 1])), 3)
bop_3385 = relay.logical_or(call_3381.astype('bool'), relay.reshape(call_3365.astype('bool'), relay.shape_of(call_3381))) # shape=(32, 1)
bop_3388 = relay.logical_or(call_3382.astype('bool'), relay.reshape(call_3366.astype('bool'), relay.shape_of(call_3382))) # shape=(32, 1)
output = bop_3385
output2 = bop_3388
func_3389 = relay.Function([], output)
mod['func_3389'] = func_3389
mod = relay.transform.InferType()(mod)
mutated_mod['func_3389'] = func_3389
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3389_call = mutated_mod.get_global_var('func_3389')
call_3390 = func_3389_call()
output = call_3390
func_3391 = relay.Function([], output)
mutated_mod['func_3391'] = func_3391
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3402 = relay.var("var_3402", dtype = "float64", shape = ())#candidate|3402|()|var|float64
var_3403 = relay.var("var_3403", dtype = "float64", shape = (14, 14, 13))#candidate|3403|(14, 14, 13)|var|float64
bop_3404 = relay.floor_divide(var_3402.astype('float64'), var_3403.astype('float64')) # shape=(14, 14, 13)
output = bop_3404
output2 = bop_3404
func_3419 = relay.Function([var_3402,var_3403,], output)
mod['func_3419'] = func_3419
mod = relay.transform.InferType()(mod)
mutated_mod['func_3419'] = func_3419
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3419_call = mutated_mod.get_global_var('func_3419')
var_3421 = relay.var("var_3421", dtype = "float64", shape = ())#candidate|3421|()|var|float64
var_3422 = relay.var("var_3422", dtype = "float64", shape = (14, 14, 13))#candidate|3422|(14, 14, 13)|var|float64
call_3420 = func_3419_call(var_3421,var_3422,)
output = call_3420
func_3423 = relay.Function([var_3421,var_3422,], output)
mutated_mod['func_3423'] = func_3423
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3164_call = mod.get_global_var('func_3164')
func_3165_call = mutated_mod.get_global_var('func_3165')
call_3456 = relay.TupleGetItem(func_3164_call(), 5)
call_3457 = relay.TupleGetItem(func_3165_call(), 5)
func_1271_call = mod.get_global_var('func_1271')
func_1272_call = mutated_mod.get_global_var('func_1272')
call_3458 = relay.TupleGetItem(func_1271_call(), 1)
call_3459 = relay.TupleGetItem(func_1272_call(), 1)
func_2351_call = mod.get_global_var('func_2351')
func_2352_call = mutated_mod.get_global_var('func_2352')
call_3465 = relay.TupleGetItem(func_2351_call(), 1)
call_3466 = relay.TupleGetItem(func_2352_call(), 1)
func_1160_call = mod.get_global_var('func_1160')
func_1162_call = mutated_mod.get_global_var('func_1162')
call_3478 = func_1160_call()
call_3479 = func_1160_call()
output = relay.Tuple([call_3456,call_3458,call_3465,call_3478,])
output2 = relay.Tuple([call_3457,call_3459,call_3466,call_3479,])
func_3488 = relay.Function([], output)
mod['func_3488'] = func_3488
mod = relay.transform.InferType()(mod)
output = func_3488()
func_3489 = relay.Function([], output)
mutated_mod['func_3489'] = func_3489
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1677_call = mod.get_global_var('func_1677')
func_1679_call = mutated_mod.get_global_var('func_1679')
call_3542 = func_1677_call()
call_3543 = func_1677_call()
func_1353_call = mod.get_global_var('func_1353')
func_1357_call = mutated_mod.get_global_var('func_1357')
const_3547 = relay.const([-1.912321,-8.851372,-8.311535,-2.276473,-3.863468,-2.817937,-2.143180,-8.820733,-9.942194,4.761701,4.000530,6.369365,7.475805,4.728202,8.088240,-8.335142,-1.340259,9.946928,-6.783630,-8.076702,-2.119833,1.350430,9.913238,5.609630,6.428408,-5.333461,-5.222200,6.982972,3.279698,1.218003,3.296099,9.736966,-6.905328,7.505044,-8.355509,0.336717,-2.095171,-3.430655,7.445571,-1.334583,-4.103828,7.107834,-4.548209,5.643861,-2.597982,-3.732644,-7.173918,5.183983,1.146534,-0.011406,-9.775894,-4.802913,-9.425028,-2.117958,-4.680527,6.354217,-7.851260,9.933513,6.412734,-2.874483,8.277614,4.349199,-8.574329,1.515756,1.894913,-7.671419,7.069017,3.844935,8.523840,9.318402,-8.305885,-0.434381,-8.681608,6.109744,-5.365365,8.450351,-9.307396,-6.645679,7.405591,-5.646756,4.672532,7.353498,0.234692,-9.346760,-9.171297,-7.089270,-3.400493,1.584825,1.942078,-0.642236,9.358168,2.160007,8.965877,-5.552092,4.862022,8.804561,5.584650,-1.999259,2.804922,9.535206,-5.046858,-9.198225,7.139836,3.277148,-8.758216,-0.402079,5.962522,-4.256514,7.456403,-9.158310,7.392767,4.156757,-5.867124,-3.560744,8.615926,2.847456,0.086686,-7.277504,-1.624742,0.296087,-3.126230,-9.207265,-6.207063,-2.798969,9.303194,-1.785201,-8.390541,-9.247274,1.125164,5.221465,-7.889962,5.897970,-2.419463,-3.656807,7.474586,-9.059652,-8.205755,-6.026749,0.995175,-6.067316,2.687215,5.553575,9.780987,-3.856661,-6.993882,3.781430,-7.872194,4.588796,-1.738449,4.490538], dtype = "float64")#candidate|3547|(150,)|const|float64
call_3546 = relay.TupleGetItem(func_1353_call(relay.reshape(const_3547.astype('float64'), [10, 3, 5]), relay.reshape(const_3547.astype('float64'), [10, 3, 5]), ), 0)
call_3548 = relay.TupleGetItem(func_1357_call(relay.reshape(const_3547.astype('float64'), [10, 3, 5]), relay.reshape(const_3547.astype('float64'), [10, 3, 5]), ), 0)
output = relay.Tuple([call_3542,call_3546,const_3547,])
output2 = relay.Tuple([call_3543,call_3548,const_3547,])
func_3560 = relay.Function([], output)
mod['func_3560'] = func_3560
mod = relay.transform.InferType()(mod)
output = func_3560()
func_3561 = relay.Function([], output)
mutated_mod['func_3561'] = func_3561
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3572 = relay.var("var_3572", dtype = "float32", shape = (7, 6, 6))#candidate|3572|(7, 6, 6)|var|float32
uop_3573 = relay.asin(var_3572.astype('float32')) # shape=(7, 6, 6)
bop_3576 = relay.logical_or(uop_3573.astype('bool'), relay.reshape(var_3572.astype('bool'), relay.shape_of(uop_3573))) # shape=(7, 6, 6)
output = relay.Tuple([bop_3576,])
output2 = relay.Tuple([bop_3576,])
func_3585 = relay.Function([var_3572,], output)
mod['func_3585'] = func_3585
mod = relay.transform.InferType()(mod)
mutated_mod['func_3585'] = func_3585
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3586 = relay.var("var_3586", dtype = "float32", shape = (7, 6, 6))#candidate|3586|(7, 6, 6)|var|float32
func_3585_call = mutated_mod.get_global_var('func_3585')
call_3587 = func_3585_call(var_3586)
output = call_3587
func_3588 = relay.Function([var_3586], output)
mutated_mod['func_3588'] = func_3588
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1126_call = mod.get_global_var('func_1126')
func_1128_call = mutated_mod.get_global_var('func_1128')
call_3616 = func_1126_call()
call_3617 = func_1126_call()
output = relay.Tuple([call_3616,])
output2 = relay.Tuple([call_3617,])
func_3619 = relay.Function([], output)
mod['func_3619'] = func_3619
mod = relay.transform.InferType()(mod)
mutated_mod['func_3619'] = func_3619
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3619_call = mutated_mod.get_global_var('func_3619')
call_3620 = func_3619_call()
output = call_3620
func_3621 = relay.Function([], output)
mutated_mod['func_3621'] = func_3621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2600_call = mod.get_global_var('func_2600')
func_2601_call = mutated_mod.get_global_var('func_2601')
call_3622 = func_2600_call()
call_3623 = func_2600_call()
uop_3646 = relay.atanh(call_3622.astype('float32')) # shape=(14, 4, 3)
uop_3648 = relay.atanh(call_3623.astype('float32')) # shape=(14, 4, 3)
func_1478_call = mod.get_global_var('func_1478')
func_1481_call = mutated_mod.get_global_var('func_1481')
call_3661 = relay.TupleGetItem(func_1478_call(relay.reshape(uop_3646.astype('bool'), [14, 4, 3]), relay.reshape(uop_3646.astype('float64'), [14, 4, 3]), ), 1)
call_3662 = relay.TupleGetItem(func_1481_call(relay.reshape(uop_3646.astype('bool'), [14, 4, 3]), relay.reshape(uop_3646.astype('float64'), [14, 4, 3]), ), 1)
output = relay.Tuple([uop_3646,call_3661,])
output2 = relay.Tuple([uop_3648,call_3662,])
func_3677 = relay.Function([], output)
mod['func_3677'] = func_3677
mod = relay.transform.InferType()(mod)
output = func_3677()
func_3678 = relay.Function([], output)
mutated_mod['func_3678'] = func_3678
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3720 = relay.var("var_3720", dtype = "int32", shape = (11, 3, 2))#candidate|3720|(11, 3, 2)|var|int32
var_3721 = relay.var("var_3721", dtype = "int32", shape = (11, 3, 2))#candidate|3721|(11, 3, 2)|var|int32
bop_3722 = relay.subtract(var_3720.astype('int32'), relay.reshape(var_3721.astype('int32'), relay.shape_of(var_3720))) # shape=(11, 3, 2)
uop_3728 = relay.log(var_3720.astype('float64')) # shape=(11, 3, 2)
func_2667_call = mod.get_global_var('func_2667')
func_2669_call = mutated_mod.get_global_var('func_2669')
call_3733 = relay.TupleGetItem(func_2667_call(), 2)
call_3734 = relay.TupleGetItem(func_2669_call(), 2)
output = relay.Tuple([bop_3722,uop_3728,call_3733,])
output2 = relay.Tuple([bop_3722,uop_3728,call_3734,])
func_3736 = relay.Function([var_3720,var_3721,], output)
mod['func_3736'] = func_3736
mod = relay.transform.InferType()(mod)
mutated_mod['func_3736'] = func_3736
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3736_call = mutated_mod.get_global_var('func_3736')
var_3738 = relay.var("var_3738", dtype = "int32", shape = (11, 3, 2))#candidate|3738|(11, 3, 2)|var|int32
var_3739 = relay.var("var_3739", dtype = "int32", shape = (11, 3, 2))#candidate|3739|(11, 3, 2)|var|int32
call_3737 = func_3736_call(var_3738,var_3739,)
output = call_3737
func_3740 = relay.Function([var_3738,var_3739,], output)
mutated_mod['func_3740'] = func_3740
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3753 = relay.var("var_3753", dtype = "float32", shape = (16, 10, 15))#candidate|3753|(16, 10, 15)|var|float32
uop_3754 = relay.asin(var_3753.astype('float32')) # shape=(16, 10, 15)
func_3619_call = mod.get_global_var('func_3619')
func_3621_call = mutated_mod.get_global_var('func_3621')
call_3758 = relay.TupleGetItem(func_3619_call(), 0)
call_3759 = relay.TupleGetItem(func_3621_call(), 0)
bop_3761 = relay.logical_or(uop_3754.astype('bool'), relay.reshape(var_3753.astype('bool'), relay.shape_of(uop_3754))) # shape=(16, 10, 15)
func_2455_call = mod.get_global_var('func_2455')
func_2457_call = mutated_mod.get_global_var('func_2457')
var_3770 = relay.var("var_3770", dtype = "uint8", shape = (1248,))#candidate|3770|(1248,)|var|uint8
call_3769 = relay.TupleGetItem(func_2455_call(relay.reshape(var_3770.astype('uint8'), [6, 16, 13])), 1)
call_3771 = relay.TupleGetItem(func_2457_call(relay.reshape(var_3770.astype('uint8'), [6, 16, 13])), 1)
bop_3774 = relay.less(bop_3761.astype('bool'), relay.reshape(uop_3754.astype('bool'), relay.shape_of(bop_3761))) # shape=(16, 10, 15)
output = relay.Tuple([call_3758,call_3769,var_3770,bop_3774,])
output2 = relay.Tuple([call_3759,call_3771,var_3770,bop_3774,])
func_3777 = relay.Function([var_3753,var_3770,], output)
mod['func_3777'] = func_3777
mod = relay.transform.InferType()(mod)
var_3778 = relay.var("var_3778", dtype = "float32", shape = (16, 10, 15))#candidate|3778|(16, 10, 15)|var|float32
var_3779 = relay.var("var_3779", dtype = "uint8", shape = (1248,))#candidate|3779|(1248,)|var|uint8
output = func_3777(var_3778,var_3779,)
func_3780 = relay.Function([var_3778,var_3779,], output)
mutated_mod['func_3780'] = func_3780
mutated_mod = relay.transform.InferType()(mutated_mod)
func_234_call = mod.get_global_var('func_234')
func_235_call = mutated_mod.get_global_var('func_235')
call_3787 = relay.TupleGetItem(func_234_call(), 0)
call_3788 = relay.TupleGetItem(func_235_call(), 0)
output = relay.Tuple([call_3787,])
output2 = relay.Tuple([call_3788,])
func_3806 = relay.Function([], output)
mod['func_3806'] = func_3806
mod = relay.transform.InferType()(mod)
output = func_3806()
func_3807 = relay.Function([], output)
mutated_mod['func_3807'] = func_3807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1406_call = mod.get_global_var('func_1406')
func_1407_call = mutated_mod.get_global_var('func_1407')
call_3819 = relay.TupleGetItem(func_1406_call(), 0)
call_3820 = relay.TupleGetItem(func_1407_call(), 0)
func_3252_call = mod.get_global_var('func_3252')
func_3253_call = mutated_mod.get_global_var('func_3253')
call_3843 = relay.TupleGetItem(func_3252_call(), 0)
call_3844 = relay.TupleGetItem(func_3253_call(), 0)
uop_3862 = relay.asin(call_3819.astype('float64')) # shape=(14, 4, 3)
uop_3864 = relay.asin(call_3820.astype('float64')) # shape=(14, 4, 3)
output = relay.Tuple([call_3843,uop_3862,])
output2 = relay.Tuple([call_3844,uop_3864,])
func_3871 = relay.Function([], output)
mod['func_3871'] = func_3871
mod = relay.transform.InferType()(mod)
output = func_3871()
func_3872 = relay.Function([], output)
mutated_mod['func_3872'] = func_3872
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2520_call = mod.get_global_var('func_2520')
func_2521_call = mutated_mod.get_global_var('func_2521')
call_3903 = relay.TupleGetItem(func_2520_call(), 0)
call_3904 = relay.TupleGetItem(func_2521_call(), 0)
func_1126_call = mod.get_global_var('func_1126')
func_1128_call = mutated_mod.get_global_var('func_1128')
call_3905 = func_1126_call()
call_3906 = func_1126_call()
output = relay.Tuple([call_3903,call_3905,])
output2 = relay.Tuple([call_3904,call_3906,])
func_3935 = relay.Function([], output)
mod['func_3935'] = func_3935
mod = relay.transform.InferType()(mod)
output = func_3935()
func_3936 = relay.Function([], output)
mutated_mod['func_3936'] = func_3936
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3389_call = mod.get_global_var('func_3389')
func_3391_call = mutated_mod.get_global_var('func_3391')
call_3944 = func_3389_call()
call_3945 = func_3389_call()
output = call_3944
output2 = call_3945
func_3949 = relay.Function([], output)
mod['func_3949'] = func_3949
mod = relay.transform.InferType()(mod)
mutated_mod['func_3949'] = func_3949
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3949_call = mutated_mod.get_global_var('func_3949')
call_3950 = func_3949_call()
output = call_3950
func_3951 = relay.Function([], output)
mutated_mod['func_3951'] = func_3951
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1113_call = mod.get_global_var('func_1113')
func_1115_call = mutated_mod.get_global_var('func_1115')
call_3963 = relay.TupleGetItem(func_1113_call(), 0)
call_3964 = relay.TupleGetItem(func_1115_call(), 0)
func_3619_call = mod.get_global_var('func_3619')
func_3621_call = mutated_mod.get_global_var('func_3621')
call_3968 = relay.TupleGetItem(func_3619_call(), 0)
call_3969 = relay.TupleGetItem(func_3621_call(), 0)
func_3389_call = mod.get_global_var('func_3389')
func_3391_call = mutated_mod.get_global_var('func_3391')
call_3971 = func_3389_call()
call_3972 = func_3389_call()
func_3619_call = mod.get_global_var('func_3619')
func_3621_call = mutated_mod.get_global_var('func_3621')
call_3978 = relay.TupleGetItem(func_3619_call(), 0)
call_3979 = relay.TupleGetItem(func_3621_call(), 0)
func_2351_call = mod.get_global_var('func_2351')
func_2352_call = mutated_mod.get_global_var('func_2352')
call_3980 = relay.TupleGetItem(func_2351_call(), 1)
call_3981 = relay.TupleGetItem(func_2352_call(), 1)
func_3560_call = mod.get_global_var('func_3560')
func_3561_call = mutated_mod.get_global_var('func_3561')
call_3990 = relay.TupleGetItem(func_3560_call(), 1)
call_3991 = relay.TupleGetItem(func_3561_call(), 1)
func_1323_call = mod.get_global_var('func_1323')
func_1325_call = mutated_mod.get_global_var('func_1325')
var_4007 = relay.var("var_4007", dtype = "float64", shape = (1008,))#candidate|4007|(1008,)|var|float64
call_4006 = func_1323_call(relay.reshape(var_4007.astype('float64'), [16, 9, 7]))
call_4008 = func_1323_call(relay.reshape(var_4007.astype('float64'), [16, 9, 7]))
uop_4021 = relay.log(call_3968.astype('float64')) # shape=(4, 2, 4)
uop_4023 = relay.log(call_3969.astype('float64')) # shape=(4, 2, 4)
uop_4025 = relay.rsqrt(uop_4021.astype('float32')) # shape=(4, 2, 4)
uop_4027 = relay.rsqrt(uop_4023.astype('float32')) # shape=(4, 2, 4)
func_3806_call = mod.get_global_var('func_3806')
func_3807_call = mutated_mod.get_global_var('func_3807')
call_4033 = relay.TupleGetItem(func_3806_call(), 0)
call_4034 = relay.TupleGetItem(func_3807_call(), 0)
bop_4036 = relay.add(uop_4025.astype('float64'), relay.reshape(uop_4021.astype('float64'), relay.shape_of(uop_4025))) # shape=(4, 2, 4)
bop_4039 = relay.add(uop_4027.astype('float64'), relay.reshape(uop_4023.astype('float64'), relay.shape_of(uop_4027))) # shape=(4, 2, 4)
output = relay.Tuple([call_3963,call_3971,call_3978,call_3980,call_3990,call_4006,var_4007,call_4033,bop_4036,])
output2 = relay.Tuple([call_3964,call_3972,call_3979,call_3981,call_3991,call_4008,var_4007,call_4034,bop_4039,])
func_4040 = relay.Function([var_4007,], output)
mod['func_4040'] = func_4040
mod = relay.transform.InferType()(mod)
mutated_mod['func_4040'] = func_4040
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4041 = relay.var("var_4041", dtype = "float64", shape = (1008,))#candidate|4041|(1008,)|var|float64
func_4040_call = mutated_mod.get_global_var('func_4040')
call_4042 = func_4040_call(var_4041)
output = call_4042
func_4043 = relay.Function([var_4041], output)
mutated_mod['func_4043'] = func_4043
mutated_mod = relay.transform.InferType()(mutated_mod)
func_355_call = mod.get_global_var('func_355')
func_356_call = mutated_mod.get_global_var('func_356')
call_4054 = relay.TupleGetItem(func_355_call(), 3)
call_4055 = relay.TupleGetItem(func_356_call(), 3)
func_1718_call = mod.get_global_var('func_1718')
func_1720_call = mutated_mod.get_global_var('func_1720')
call_4056 = relay.TupleGetItem(func_1718_call(), 1)
call_4057 = relay.TupleGetItem(func_1720_call(), 1)
uop_4060 = relay.acos(call_4054.astype('float64')) # shape=(7, 5, 13)
uop_4062 = relay.acos(call_4055.astype('float64')) # shape=(7, 5, 13)
output = relay.Tuple([call_4056,uop_4060,])
output2 = relay.Tuple([call_4057,uop_4062,])
func_4066 = relay.Function([], output)
mod['func_4066'] = func_4066
mod = relay.transform.InferType()(mod)
mutated_mod['func_4066'] = func_4066
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4066_call = mutated_mod.get_global_var('func_4066')
call_4067 = func_4066_call()
output = call_4067
func_4068 = relay.Function([], output)
mutated_mod['func_4068'] = func_4068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1126_call = mod.get_global_var('func_1126')
func_1128_call = mutated_mod.get_global_var('func_1128')
call_4091 = func_1126_call()
call_4092 = func_1126_call()
const_4104 = relay.const([[[4,-2,-2,-7],[-10,8,8,5]],[[-8,7,7,-4],[2,2,-4,3]],[[2,5,2,-4],[9,-8,-1,6]],[[-6,-1,-1,-3],[-8,-2,-3,-2]]], dtype = "uint8")#candidate|4104|(4, 2, 4)|const|uint8
bop_4105 = relay.left_shift(call_4091.astype('uint16'), relay.reshape(const_4104.astype('uint16'), relay.shape_of(call_4091))) # shape=(4, 2, 4)
bop_4108 = relay.left_shift(call_4092.astype('uint16'), relay.reshape(const_4104.astype('uint16'), relay.shape_of(call_4092))) # shape=(4, 2, 4)
var_4113 = relay.var("var_4113", dtype = "uint16", shape = (4, 2, 4))#candidate|4113|(4, 2, 4)|var|uint16
bop_4114 = relay.minimum(bop_4105.astype('int8'), relay.reshape(var_4113.astype('int8'), relay.shape_of(bop_4105))) # shape=(4, 2, 4)
bop_4117 = relay.minimum(bop_4108.astype('int8'), relay.reshape(var_4113.astype('int8'), relay.shape_of(bop_4108))) # shape=(4, 2, 4)
var_4118 = relay.var("var_4118", dtype = "uint8", shape = (4, 2, 4))#candidate|4118|(4, 2, 4)|var|uint8
bop_4119 = relay.maximum(call_4091.astype('float64'), relay.reshape(var_4118.astype('float64'), relay.shape_of(call_4091))) # shape=(4, 2, 4)
bop_4122 = relay.maximum(call_4092.astype('float64'), relay.reshape(var_4118.astype('float64'), relay.shape_of(call_4092))) # shape=(4, 2, 4)
uop_4125 = relay.tan(bop_4114.astype('float64')) # shape=(4, 2, 4)
uop_4127 = relay.tan(bop_4117.astype('float64')) # shape=(4, 2, 4)
var_4131 = relay.var("var_4131", dtype = "float64", shape = (4, 2, 4))#candidate|4131|(4, 2, 4)|var|float64
bop_4132 = relay.power(uop_4125.astype('float32'), relay.reshape(var_4131.astype('float32'), relay.shape_of(uop_4125))) # shape=(4, 2, 4)
bop_4135 = relay.power(uop_4127.astype('float32'), relay.reshape(var_4131.astype('float32'), relay.shape_of(uop_4127))) # shape=(4, 2, 4)
output = relay.Tuple([bop_4119,bop_4132,])
output2 = relay.Tuple([bop_4122,bop_4135,])
func_4148 = relay.Function([var_4113,var_4118,var_4131,], output)
mod['func_4148'] = func_4148
mod = relay.transform.InferType()(mod)
mutated_mod['func_4148'] = func_4148
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4148_call = mutated_mod.get_global_var('func_4148')
var_4150 = relay.var("var_4150", dtype = "uint16", shape = (4, 2, 4))#candidate|4150|(4, 2, 4)|var|uint16
var_4151 = relay.var("var_4151", dtype = "uint8", shape = (4, 2, 4))#candidate|4151|(4, 2, 4)|var|uint8
var_4152 = relay.var("var_4152", dtype = "float64", shape = (4, 2, 4))#candidate|4152|(4, 2, 4)|var|float64
call_4149 = func_4148_call(var_4150,var_4151,var_4152,)
output = call_4149
func_4153 = relay.Function([var_4150,var_4151,var_4152,], output)
mutated_mod['func_4153'] = func_4153
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1604_call = mod.get_global_var('func_1604')
func_1605_call = mutated_mod.get_global_var('func_1605')
call_4205 = relay.TupleGetItem(func_1604_call(), 0)
call_4206 = relay.TupleGetItem(func_1605_call(), 0)
func_1312_call = mod.get_global_var('func_1312')
func_1314_call = mutated_mod.get_global_var('func_1314')
call_4242 = relay.TupleGetItem(func_1312_call(relay.reshape(call_4205.astype('bool'), [168,])), 1)
call_4243 = relay.TupleGetItem(func_1314_call(relay.reshape(call_4205.astype('bool'), [168,])), 1)
output = relay.Tuple([call_4205,call_4242,])
output2 = relay.Tuple([call_4206,call_4243,])
func_4253 = relay.Function([], output)
mod['func_4253'] = func_4253
mod = relay.transform.InferType()(mod)
output = func_4253()
func_4254 = relay.Function([], output)
mutated_mod['func_4254'] = func_4254
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2268_call = mod.get_global_var('func_2268')
func_2270_call = mutated_mod.get_global_var('func_2270')
call_4277 = relay.TupleGetItem(func_2268_call(), 2)
call_4278 = relay.TupleGetItem(func_2270_call(), 2)
output = relay.Tuple([call_4277,])
output2 = relay.Tuple([call_4278,])
func_4279 = relay.Function([], output)
mod['func_4279'] = func_4279
mod = relay.transform.InferType()(mod)
mutated_mod['func_4279'] = func_4279
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4279_call = mutated_mod.get_global_var('func_4279')
call_4280 = func_4279_call()
output = call_4280
func_4281 = relay.Function([], output)
mutated_mod['func_4281'] = func_4281
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4282 = relay.var("var_4282", dtype = "float64", shape = (15, 6, 9))#candidate|4282|(15, 6, 9)|var|float64
var_4283 = relay.var("var_4283", dtype = "float64", shape = (15, 6, 9))#candidate|4283|(15, 6, 9)|var|float64
bop_4284 = relay.mod(var_4282.astype('float64'), relay.reshape(var_4283.astype('float64'), relay.shape_of(var_4282))) # shape=(15, 6, 9)
func_1126_call = mod.get_global_var('func_1126')
func_1128_call = mutated_mod.get_global_var('func_1128')
call_4288 = func_1126_call()
call_4289 = func_1126_call()
output = relay.Tuple([bop_4284,call_4288,])
output2 = relay.Tuple([bop_4284,call_4289,])
func_4290 = relay.Function([var_4282,var_4283,], output)
mod['func_4290'] = func_4290
mod = relay.transform.InferType()(mod)
mutated_mod['func_4290'] = func_4290
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4290_call = mutated_mod.get_global_var('func_4290')
var_4292 = relay.var("var_4292", dtype = "float64", shape = (15, 6, 9))#candidate|4292|(15, 6, 9)|var|float64
var_4293 = relay.var("var_4293", dtype = "float64", shape = (15, 6, 9))#candidate|4293|(15, 6, 9)|var|float64
call_4291 = func_4290_call(var_4292,var_4293,)
output = call_4291
func_4294 = relay.Function([var_4292,var_4293,], output)
mutated_mod['func_4294'] = func_4294
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4409 = relay.var("var_4409", dtype = "int64", shape = (11, 4, 3))#candidate|4409|(11, 4, 3)|var|int64
var_4410 = relay.var("var_4410", dtype = "int64", shape = (11, 4, 3))#candidate|4410|(11, 4, 3)|var|int64
bop_4411 = relay.maximum(var_4409.astype('int64'), relay.reshape(var_4410.astype('int64'), relay.shape_of(var_4409))) # shape=(11, 4, 3)
output = relay.Tuple([bop_4411,])
output2 = relay.Tuple([bop_4411,])
func_4416 = relay.Function([var_4409,var_4410,], output)
mod['func_4416'] = func_4416
mod = relay.transform.InferType()(mod)
mutated_mod['func_4416'] = func_4416
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4416_call = mutated_mod.get_global_var('func_4416')
var_4418 = relay.var("var_4418", dtype = "int64", shape = (11, 4, 3))#candidate|4418|(11, 4, 3)|var|int64
var_4419 = relay.var("var_4419", dtype = "int64", shape = (11, 4, 3))#candidate|4419|(11, 4, 3)|var|int64
call_4417 = func_4416_call(var_4418,var_4419,)
output = call_4417
func_4420 = relay.Function([var_4418,var_4419,], output)
mutated_mod['func_4420'] = func_4420
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2908_call = mod.get_global_var('func_2908')
func_2910_call = mutated_mod.get_global_var('func_2910')
call_4499 = relay.TupleGetItem(func_2908_call(), 3)
call_4500 = relay.TupleGetItem(func_2910_call(), 3)
uop_4507 = relay.sinh(call_4499.astype('float32')) # shape=(32,)
uop_4509 = relay.sinh(call_4500.astype('float32')) # shape=(32,)
func_2063_call = mod.get_global_var('func_2063')
func_2068_call = mutated_mod.get_global_var('func_2068')
const_4529 = relay.const([[False,False,True,True,True,True,True,False,True,False,True,True,True,False,True],[True,False,False,False,False,True,False,False,False,False,True,False,True,True,True],[False,True,True,False,True,False,True,False,True,False,False,False,True,False,False],[True,True,False,True,True,True,True,True,True,True,True,False,True,True,True],[False,True,True,True,True,False,False,True,False,True,True,False,True,True,False],[False,False,True,False,True,True,True,False,False,True,True,False,True,False,True],[True,False,False,False,False,False,False,False,True,False,True,False,False,False,True],[True,False,True,False,True,True,True,False,True,False,True,True,False,True,True],[True,False,False,True,False,False,True,False,False,False,False,True,True,False,True],[False,True,False,False,False,True,True,True,True,False,True,True,True,True,False],[True,False,False,True,False,False,True,True,False,True,False,False,False,True,False]], dtype = "bool")#candidate|4529|(11, 15)|const|bool
var_4530 = relay.var("var_4530", dtype = "bool", shape = (1815,))#candidate|4530|(1815,)|var|bool
const_4531 = relay.const([True,False,False,False,True,False,True,True,True,False,False,True,True,True,True,False,True,True,True,False,True,False,False,True,False,True,True,False,True,True,True,False,True,False,True,True,False,False,False,True,False,False,False,False,True,True,False,False,False,False,True,True,False,True,False,True,True,True,True,False,True,False,False,False,False,True,True,False,True,True,True,False,False,True,False,True,False,False,False,False,False,True,True,True,False,True,False,True,True,True,True,False,True,False,False,False,True,False,False,True,True,False,True,True,True,True,True,False,True,True,False,False,False,False,True,False,True,True,False,False,False,True,False,True,True,True,True,True,True,False,False,False,False,True,False,True,False,True,True,True,False,False,True,False,False,False,False,True,True,False,False,True,False,False,True,True,True,False,False,False,False,False,True,False,True,True,False,True,False,True,True,False,True,False,False,True,True,False,True,False,True,True,False,True,True,True,False,True,True,True,True,False,True,False,False,True,True,False,False,True,False,True,True,True,False,True,True,True,False,False,True,True,True,True,False,False,False,False,True,False,True,True,False,True,True,False,False,True,True,False,False,True,False,False,False,False,True,True,True,True,True,False,False,False,False,False,True,False,True,False,False,False,True,False,True,True,True,True,False,False,False,False,True,False,False,True,False,False,True,True,True,False,True,False,True,True,False,False,False,True,False,False,False,False,True,True,True,False,True,True,False,True,True,True,True,False,False,True,False,True,False,True,False,True,True,True,True,False,True,True,True,True,True,True,True,False,True,False,False,False,True,False,True,True,True,False,True,False,True,True,True,True,False,True,False,False,False,True,False,True,False,True,True,False,True,False,False,False,True,True,False,False,True,True,True,True,True,False,True,False,True,False,True,False,False,True,False,False,True,False,False,True,True,True,True,False,True,False,False,False,True,False,True,False,True,False,True,False,True,False,False,False,True,True,False,True,True,False,True,False,False,True,True,False,False,True,False,False,True,True,False,False,True,True,False,True,False,False,True,True,False,False,True,True,True,False,False,False,False,False,False,True,True,False,True,False,True,True,False,False,False,False,False,False,False,False,True,False,False,False,True,True,False,False,False,False,False,True,False,True,True,True,False,False,True,True,False,False,False,False,False,True,True,False,True,True,False,False,True,True,False,False,False,True,False,False,True,True,True,True,False,False,False,False,True,True,True,True,True,True,False,True,False,True,True,True,False,False,True,True,True,False,True,True,True,True,True,False,False,True,True,False,True,False,False,False,True,True,False,True,True,False,False,True,True,False,True,True,False,False,False,True,False,True,False,True,False,True,True,True,False,True,True,False,True,False,False,False,True,False,True,False,False,False,False,True,False,True,False,False,True,False,True,False,True,True,True,False,False,True,True,True,False,False,True,True,False,True,True,False,False,True,False,False,True,False,False,True,True,False,True,True,True,False,True,False,True,False,False,True,True,True,False,True,False,True,False,False,True,False,False,True,True,True,True,False,True,True,True,True,False,False,False,True,False,True,True,True,True,False,False,True,True,True,False,True,False,True,False,True,True,False,False,False,True,False,False,True,True,True], dtype = "bool")#candidate|4531|(660,)|const|bool
call_4528 = relay.TupleGetItem(func_2063_call(relay.reshape(const_4529.astype('bool'), [15, 1, 11]), relay.reshape(var_4530.astype('bool'), [15, 11, 11]), relay.reshape(const_4531.astype('bool'), [15, 4, 11]), ), 1)
call_4532 = relay.TupleGetItem(func_2068_call(relay.reshape(const_4529.astype('bool'), [15, 1, 11]), relay.reshape(var_4530.astype('bool'), [15, 11, 11]), relay.reshape(const_4531.astype('bool'), [15, 4, 11]), ), 1)
func_1677_call = mod.get_global_var('func_1677')
func_1679_call = mutated_mod.get_global_var('func_1679')
call_4539 = func_1677_call()
call_4540 = func_1677_call()
func_3736_call = mod.get_global_var('func_3736')
func_3740_call = mutated_mod.get_global_var('func_3740')
const_4542 = relay.const([-4,-1,1,-10,-10,-4,-4,-2,-10,-7,-7,7,7,-3,3,6,-10,-6,8,7,-1,-9,-1,-1,1,9,-6,9,4,8,-7,-5,-3,9,6,-9,6,-2,-2,-10,-3,-2,-7,2,-10,-1,9,3,6,1,-7,-9,-10,-2,7,5,10,1,-6,-9,5,3,-5,-4,-10,6], dtype = "int32")#candidate|4542|(66,)|const|int32
call_4541 = relay.TupleGetItem(func_3736_call(relay.reshape(const_4542.astype('int32'), [11, 3, 2]), relay.reshape(const_4542.astype('int32'), [11, 3, 2]), ), 1)
call_4543 = relay.TupleGetItem(func_3740_call(relay.reshape(const_4542.astype('int32'), [11, 3, 2]), relay.reshape(const_4542.astype('int32'), [11, 3, 2]), ), 1)
var_4575 = relay.var("var_4575", dtype = "float32", shape = (14, 4, 3))#candidate|4575|(14, 4, 3)|var|float32
bop_4576 = relay.less(call_4539.astype('bool'), relay.reshape(var_4575.astype('bool'), relay.shape_of(call_4539))) # shape=(14, 4, 3)
bop_4579 = relay.less(call_4540.astype('bool'), relay.reshape(var_4575.astype('bool'), relay.shape_of(call_4540))) # shape=(14, 4, 3)
output = relay.Tuple([uop_4507,call_4528,const_4529,var_4530,const_4531,call_4541,const_4542,bop_4576,])
output2 = relay.Tuple([uop_4509,call_4532,const_4529,var_4530,const_4531,call_4543,const_4542,bop_4579,])
func_4589 = relay.Function([var_4530,var_4575,], output)
mod['func_4589'] = func_4589
mod = relay.transform.InferType()(mod)
mutated_mod['func_4589'] = func_4589
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4589_call = mutated_mod.get_global_var('func_4589')
var_4591 = relay.var("var_4591", dtype = "bool", shape = (1815,))#candidate|4591|(1815,)|var|bool
var_4592 = relay.var("var_4592", dtype = "float32", shape = (14, 4, 3))#candidate|4592|(14, 4, 3)|var|float32
call_4590 = func_4589_call(var_4591,var_4592,)
output = call_4590
func_4593 = relay.Function([var_4591,var_4592,], output)
mutated_mod['func_4593'] = func_4593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1604_call = mod.get_global_var('func_1604')
func_1605_call = mutated_mod.get_global_var('func_1605')
call_4604 = relay.TupleGetItem(func_1604_call(), 1)
call_4605 = relay.TupleGetItem(func_1605_call(), 1)
output = relay.Tuple([call_4604,])
output2 = relay.Tuple([call_4605,])
func_4606 = relay.Function([], output)
mod['func_4606'] = func_4606
mod = relay.transform.InferType()(mod)
mutated_mod['func_4606'] = func_4606
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4606_call = mutated_mod.get_global_var('func_4606')
call_4607 = func_4606_call()
output = call_4607
func_4608 = relay.Function([], output)
mutated_mod['func_4608'] = func_4608
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1151_call = mod.get_global_var('func_1151')
func_1152_call = mutated_mod.get_global_var('func_1152')
call_4646 = relay.TupleGetItem(func_1151_call(), 0)
call_4647 = relay.TupleGetItem(func_1152_call(), 0)
func_3488_call = mod.get_global_var('func_3488')
func_3489_call = mutated_mod.get_global_var('func_3489')
call_4675 = relay.TupleGetItem(func_3488_call(), 1)
call_4676 = relay.TupleGetItem(func_3489_call(), 1)
var_4682 = relay.var("var_4682", dtype = "bool", shape = (14, 4, 3))#candidate|4682|(14, 4, 3)|var|bool
bop_4683 = relay.bitwise_and(call_4646.astype('int32'), relay.reshape(var_4682.astype('int32'), relay.shape_of(call_4646))) # shape=(14, 4, 3)
bop_4686 = relay.bitwise_and(call_4647.astype('int32'), relay.reshape(var_4682.astype('int32'), relay.shape_of(call_4647))) # shape=(14, 4, 3)
output = relay.Tuple([call_4675,bop_4683,])
output2 = relay.Tuple([call_4676,bop_4686,])
func_4687 = relay.Function([var_4682,], output)
mod['func_4687'] = func_4687
mod = relay.transform.InferType()(mod)
var_4688 = relay.var("var_4688", dtype = "bool", shape = (14, 4, 3))#candidate|4688|(14, 4, 3)|var|bool
output = func_4687(var_4688)
func_4689 = relay.Function([var_4688], output)
mutated_mod['func_4689'] = func_4689
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1271_call = mod.get_global_var('func_1271')
func_1272_call = mutated_mod.get_global_var('func_1272')
call_4741 = relay.TupleGetItem(func_1271_call(), 1)
call_4742 = relay.TupleGetItem(func_1272_call(), 1)
uop_4748 = relay.exp(call_4741.astype('float32')) # shape=(14, 4, 3)
uop_4750 = relay.exp(call_4742.astype('float32')) # shape=(14, 4, 3)
output = relay.Tuple([uop_4748,])
output2 = relay.Tuple([uop_4750,])
func_4759 = relay.Function([], output)
mod['func_4759'] = func_4759
mod = relay.transform.InferType()(mod)
output = func_4759()
func_4760 = relay.Function([], output)
mutated_mod['func_4760'] = func_4760
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4759_call = mod.get_global_var('func_4759')
func_4760_call = mutated_mod.get_global_var('func_4760')
call_4818 = relay.TupleGetItem(func_4759_call(), 0)
call_4819 = relay.TupleGetItem(func_4760_call(), 0)
output = call_4818
output2 = call_4819
func_4820 = relay.Function([], output)
mod['func_4820'] = func_4820
mod = relay.transform.InferType()(mod)
mutated_mod['func_4820'] = func_4820
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4820_call = mutated_mod.get_global_var('func_4820')
call_4821 = func_4820_call()
output = call_4821
func_4822 = relay.Function([], output)
mutated_mod['func_4822'] = func_4822
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4841 = relay.var("var_4841", dtype = "int8", shape = (10, 2, 14))#candidate|4841|(10, 2, 14)|var|int8
var_4842 = relay.var("var_4842", dtype = "int8", shape = (10, 2, 14))#candidate|4842|(10, 2, 14)|var|int8
bop_4843 = relay.minimum(var_4841.astype('int8'), relay.reshape(var_4842.astype('int8'), relay.shape_of(var_4841))) # shape=(10, 2, 14)
output = bop_4843
output2 = bop_4843
func_4875 = relay.Function([var_4841,var_4842,], output)
mod['func_4875'] = func_4875
mod = relay.transform.InferType()(mod)
var_4876 = relay.var("var_4876", dtype = "int8", shape = (10, 2, 14))#candidate|4876|(10, 2, 14)|var|int8
var_4877 = relay.var("var_4877", dtype = "int8", shape = (10, 2, 14))#candidate|4877|(10, 2, 14)|var|int8
output = func_4875(var_4876,var_4877,)
func_4878 = relay.Function([var_4876,var_4877,], output)
mutated_mod['func_4878'] = func_4878
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2118_call = mod.get_global_var('func_2118')
func_2120_call = mutated_mod.get_global_var('func_2120')
call_4894 = relay.TupleGetItem(func_2118_call(), 0)
call_4895 = relay.TupleGetItem(func_2120_call(), 0)
func_487_call = mod.get_global_var('func_487')
func_489_call = mutated_mod.get_global_var('func_489')
const_4906 = relay.const([1.870315,-9.696701,0.837915,4.707622,-1.085122,3.418971,-9.161224,9.425782,3.302323,0.428675,-6.025245,-5.434198,-5.590341,-5.904188,4.527442,5.393966,-6.244039,-9.592533,4.757770,-6.847295,1.067340,-3.854589,-7.574158,8.751440,-4.604376,1.794507,2.306147,-2.270878,4.808589,9.410012,5.609544,-1.933211,2.162034,-7.708879,-2.747267,-4.672363,-4.620274,-2.572366,2.289798,-7.852803,-8.345673,-8.747209,0.958332,6.933288,5.780833,-5.349112,-4.964971,-0.787149,4.574545,-2.798054,6.653676,2.190469,2.347257,-4.368421,5.430404,2.706597,-2.991131,7.353882,-8.727282,0.510135,-9.117244,-2.442039,-0.901699,-0.058016,9.186579,5.289494,3.737505,-8.089373,-1.674975,7.861944,-9.716236,-4.173941,-2.095616,-3.278646,-6.016047,9.377113,7.840012,3.240472,-8.383159,-9.687501,3.690438,2.736058,-0.430064,2.140539,-7.179076,0.479001,8.503987,-3.961874,1.043669,-2.067306,-0.370595,-7.787066,-1.419137,9.064854,5.874293,-2.081279,8.501771,-6.953662,-0.280137,2.571392,-9.858149,0.517550,-9.551515,-1.892135,-0.378773,2.495251,-7.791025,4.201670,-9.682825,1.146938,-9.937680,-0.589945,1.122266,8.137350,-3.204979,3.100943,4.799911,8.694130,-2.358613,-7.535547,-6.894183,6.182961,3.317997,7.491447,7.934019,-3.795681,9.785901,2.767532,1.454228,-3.216223,3.715518,-9.227758,-7.899213,-9.491849,1.932489,1.615973,5.496117,-0.895565,9.010699,-8.339576,5.046113,-5.369824,5.945327,9.801921,8.885966,-9.417022,9.796441,9.087957,-0.508881,-1.645560,-8.097248,-8.364917,-4.293933,3.301250,-4.206255,-9.402052,-3.287858,-0.562919,1.466078,-9.126590,5.317505,8.048281,1.701351,-5.777573,9.335936,-4.211470,3.651838,8.106755,0.522696,0.799132,-3.575711,2.194630,9.091292,-8.917869,-9.874155,4.531123,9.715830,-2.152977,6.490962,2.753601,-9.754362,9.677774,-4.659760,6.554883,8.992197,5.204039,4.134281,-0.264937,5.670576,6.384678,7.517657,4.797243,6.766272,6.852152,9.804211,1.196804,-4.940089,5.179644,8.689830,7.569812,3.131720,-6.900223,6.156545,2.341316,4.091249,-6.515310,5.923757,-7.999685,-5.372778,-3.763212,-0.845811,8.001800,-9.294669,9.526716,5.439489,-7.517333,8.080220,4.386474,8.435594,7.675150,9.149192,9.473913,-9.699381,-0.941539,2.138729,-8.081472,-4.353535,9.512139,-8.583805,7.152592,1.910151,-6.920763,-0.305364,9.251606,4.440040,5.013956,5.159730,3.597786,-5.665663,-6.220276,-3.274100,1.303265,-8.238509,3.533026,6.814874,-6.932699,-3.009318,4.493103,7.364907,-8.070986,-1.147702,8.644807,-6.736918,9.216510,-8.870510,6.737137,-5.613041,-3.163184,8.544246,0.175935,-3.035322,7.999486,-4.058077,8.734587,6.793440,-3.361998,1.157952,3.542541,0.018251,-9.885714,-6.821408,-2.877808,-4.334578,0.508259,1.024825,-1.560749,3.029297,-5.396687,7.073967,6.005675,-2.280867,-6.445678,2.915861,4.842664,-6.912241,0.930635,1.582089,2.583291,-1.032555,5.638442,9.989683,7.129635,4.770656,-3.420413,8.084562,-7.130071,-2.166617,-9.965117,-5.810197,-5.686100,7.007085,-3.700059,8.973651,9.042784,-8.209271,9.148891,-0.902917,-3.287346,1.724380,-7.824167,-6.984611,-2.263384,0.259259,1.463710,-8.753389,-1.012759,7.684059,2.090484,-3.559668,-8.683589,6.069393,-2.484832,-8.900617,-3.283651,-7.513236,-3.249927,9.412510,0.859089,1.919178,-5.282900,-6.329491,-0.035642,2.661618,-7.106840,-4.358326,2.280371,4.491639,6.071644,-6.945535,6.356339,2.515895,-6.827562,-3.122434,5.351755,-7.004419,5.870419,8.395069,-3.728083,3.066712,-5.300244,3.218489,-5.359936,-0.437283,-8.896789,6.805291,6.768147,3.926722,3.844546,0.291430,-6.430699,-1.460678,-0.616694,0.714982,0.350684,2.460418,-7.034261,3.040978,6.125676,-5.813089,-3.096234,6.844343,-3.725334,2.296089,-0.214750,4.515343,-0.628829,6.756258,2.331056,6.166369,4.665346,-3.739579,6.969078,-8.224228,4.298744,-1.405872,-5.785470,0.274469,1.021527,-0.406367,9.081536,-9.440403,-0.254973,-8.024076,-1.723409,-3.540537,6.031035,8.960267,-5.843887,9.437413,-3.165171,2.773541,-5.118819,-0.548069,-8.964942,4.637796,-1.587653,0.447913,0.241343,-1.205260,-1.742122,-3.464442,8.912138,-7.086498,5.536967,-5.510929,-1.442817,2.234090,-6.770689,-7.157231,-4.605006,3.978452,3.692129,1.428834,-3.039618,-4.686209,-3.293637,-6.569824,-7.524426,0.153334,7.165052,4.826864,-3.815178,-1.585238,-3.665832,1.795970,-9.117360,7.236871,7.619877,0.721344,-4.095288,-6.285278,-8.500679,4.164941,-9.897148,-0.545323,-9.848706,7.650062,-9.157639,5.763217,-5.858583,-4.150764,2.074106,-1.758224,-3.994136,2.893957,5.815281,-6.106124,-1.843482,-9.218680,-5.758217,-5.432763,-2.198504,7.167578,1.899200,-7.517571,1.994208,3.844596,-7.784810,-5.216263,0.319412,-2.666850,8.418848,-8.840454,-2.147993,-0.779846,8.680497,4.699793,-6.988291,1.914240,6.195179,6.156760,-0.729529,-8.375091,-5.531137,8.659316,-7.702797,-2.569871,-2.113775,1.114362,3.261318,-4.378348,8.778730,1.988682,-3.345618,2.536272,-6.045246,2.379777,6.121739,0.220311,-6.119070,2.115621,-7.179088,-1.605644,-4.655405,2.019710,-0.555551,4.020942,5.048914,3.913907,3.139743,-8.017712,-7.060668,-9.711825,9.385952,3.719803,-8.349268,-5.854049,2.443297,-6.247339,-8.758604,7.587594,2.976391,-3.156939,5.943752,-4.124537,0.711041,-6.730167,-0.136744,9.612133,3.379355,5.075805,-8.120085,-7.792951,1.864932,5.476243,7.875319,-2.119120,4.345813,6.235297,-8.247771,4.843705,-1.178105,3.185983,-8.418880,-3.155702,-6.884983,-7.369349,4.440549,-7.527179,1.146480,3.868778,-0.844555,4.374765,-5.449070,8.537589,-2.952501,-2.899681,-4.021074,-5.959303,8.864080,-0.494447,-0.998718,-0.437821,-5.496070,-7.796096,-0.338156,-6.849986,7.663911,3.981181,-7.363454,4.638945,7.751552,-0.089416,2.323520,6.827761,0.566349,-2.378140,-8.655695,-4.519978,3.472987,-2.462973,-7.686951,1.915208,-9.157114,0.435462,1.432593,5.219241,3.102824,-7.413140,-1.857582,6.827363,-0.108666,-5.138485,-7.356417,6.990883,8.485964,2.653492,-2.563598,-1.591907,2.676922,4.567309,-5.817401,-5.058236,-9.015728,-7.773708,-2.600179,0.896257,-1.050098,3.831333,-2.812712,-3.212074,-7.525181,6.651266,-3.939644,3.697866,8.621313,-8.839273,3.316185,3.015486,-3.610717,6.525285,4.739062,3.651188,-5.639416,-7.564274,2.547799,-8.074514,4.051236,-9.576884,8.782072,1.182382,-0.518191,-6.947625,-8.231603,-1.178029,-9.525523,8.122401,-9.458994,3.239206,1.972115,6.508304,-4.387015,-0.969325,1.113185,-5.583913,-6.116799,7.101743,1.091950,7.778324,-0.805941,-8.761410,0.505783,-7.868484,-9.821883,-6.355488,-7.805237,-2.707849,8.740700,-9.125004,9.532229,-2.575362,-4.978889,1.235929,4.313559,-8.264746,-3.753683,-0.746735,-8.895984,3.474595,-7.159244,0.843293,9.678087,-0.039700,-0.325199,5.387257,6.794751,-1.661354,8.119410,8.528966,-4.069136,-6.161795,0.706938,-6.859669,-8.720753,-0.394266,8.629090,8.368997,-5.830302,3.958109,-7.773852,-1.867606,-2.958103,5.476866,-8.014040,9.924407,-0.654224,4.729913,-9.873158,-0.894299,4.021050,-8.248010,-5.935879,6.808558,7.099160,0.605779,5.091983,1.581168,-8.036385,-1.677491,2.067500,9.113591,2.303116,3.321425,-1.333570,-5.268862,6.732401,-2.750382,-8.228175,-3.048988,1.134312,3.604607,6.945998,-2.756412,-3.598731,5.227588,-6.741559,9.011933,2.394841,-7.523800,-8.881853,-5.979320,6.379060,9.133597,-0.833292,4.819432,-1.653812,9.366551,6.348468,6.378548,-5.062232,3.219276,-9.803628,-0.051367,-4.761673,2.546620,-3.352860,-9.612396,8.539568,4.054681,9.801989,3.212780,-2.845369,6.550726,-2.777115,1.013899,3.449465,-5.786754,6.161946,-2.941112,9.110827,4.233879,3.151054,1.773820,0.567524,-3.078703,5.225577,-5.131305,-1.982080,8.362983,0.855548,1.163843,2.525876,-3.579557,4.314734,-4.745853,-3.522384,-5.280710,9.200143,-7.948210,-1.480796,9.922029,-5.997772,5.902973,-5.473641,-4.183630,5.624237,-6.263891,8.711020,-2.283621,9.167074,3.742072,-9.433192,7.275169,5.288516,-6.752286,6.006728,9.060232,-9.149768,-8.210059,3.817434,-0.709836,6.122353,6.165254,6.857447,2.775286,4.860670,-7.905595,-8.652937,3.603498,-0.425574,5.221441,-4.298497,9.326706,-3.872226,1.926703,-1.992805,-8.285868,-6.389753,-2.658012,3.004762,8.897679,-1.534591,-7.609564,3.650659,-4.435988,-8.470498,2.487373,-4.681627,4.643868,8.932171,-5.868153,-0.535661,6.303269,2.460653,-1.632076,0.064824,4.622178,8.997604,-6.435879,5.223841,-1.713611,-2.141902,-2.003499,1.407976,4.860317,-4.754465,-1.296806,0.494229,-4.569843,-3.672375,9.366206,-5.837851,6.301724,1.023176,-4.660326,2.202847,-4.076616,2.612502,-6.405370,-8.605195,8.966644,-4.459793,6.222933,9.704964,-0.753747,-2.236993,5.087716,-9.740090,-7.222925,-8.619801,-4.029364,-0.474872,1.891548,-3.916400,-2.651858,-0.812819,6.070678,3.468833,-7.008208,-2.906476,-4.373552,-5.626783,0.134423,1.096247,-1.632677,9.665266,1.026677,0.508715,4.932557,-0.117648,-5.873395,6.644324,0.820197,-0.436058,0.878551,-2.458168,1.721298,6.124928,9.411104,0.372020,-5.227203,0.751891,-4.362750,-7.839324,-1.241342,9.949699,1.677785,-2.213935,7.080654,-8.275509,-7.049295,1.567150,-7.223293,-4.666456,7.113351,4.212050,-6.057801,6.569431,-5.345621,-6.599335,-1.085068,5.648289,-3.109604,1.406586,8.821753,-9.973837,-3.373770,6.933114,-4.776251,6.189629,9.790138,4.928681,8.672810,-5.403079,7.532379,-9.469006,-0.781171,4.436556,0.390494,9.359811,7.900607,-0.500279,4.806436,-4.351014,-2.788626,9.182896,-7.732878,8.892729,2.712207,6.706752,4.499382,-8.125322,-5.150429,-7.675792,-8.592323,-1.716047,-5.017733,-5.906231,-8.491377,8.577761,-1.327085,6.518859,-0.614824,-7.366098,-4.189095,-5.625304,4.070991,-5.199038,-8.763268,1.199412,-2.095652,-1.864495,3.721074,-1.712051,4.607514,-1.547433,-3.301502,5.541906,-2.365616,-2.521803,0.462645,-3.238963,2.017206,-9.514656,-7.833497,8.501412,0.934199,4.440025,-8.349484,9.437043,0.687301,8.554690,8.969726,-4.647013,-6.749672,-6.830590,6.681178,-7.490251,2.812934,6.927741,-5.307569,-3.761671,-8.335842,-7.150048,9.802313,9.594180,7.805891,-3.419877,4.584659,7.848928,5.045625,6.988514,-5.410905,-5.717652,7.641172,4.142509,-3.716818,8.554865,3.554392,0.374125,1.510596,-8.952469,6.569937,7.468552,9.298746,-1.147352,8.420928,-9.267046,0.051482,0.311573,-2.468269,-4.717215,3.389711,6.111910,-1.439909,5.167110,3.223709,-2.969719,0.998668,4.611295,-8.082724,4.487644,-2.797577,-4.397906,-9.087153,-1.338199,-6.500735,1.495017,-3.880057,9.586206,1.545352,2.916669,-4.732671,3.848841,5.223458,-3.450899,-7.107584,9.304477,2.425339,-7.263761,-7.824535,-0.806247,-1.814972,-7.367941,0.258635,5.967655,-8.425735,1.619227,-8.178613,-4.382962,-0.578043,-5.016451,5.850560,9.624414,5.806540,-0.268171,-2.089985,-9.420745,5.478483,5.305970,-4.692264,1.158766,5.530825,5.848418,-6.214573,-0.063573,4.732646,6.186714,-7.727615,0.955787,2.531495,9.438043,3.761127,-0.561905,-5.117699,4.648524,-1.469495,-1.224743,6.182701,9.712240,1.211579,-4.102467,-9.121144,4.505503,-8.550606,-5.490693,9.948630,0.436176,-8.879703,4.325547,-9.780764,9.389056,5.041062,-2.087527,-2.094455,-8.645706,0.092084,-7.208345,2.137793,2.814734,-1.524880,6.234476,6.743913,-0.834582,-4.048167,0.499593,-2.455048,0.556426,-2.480132,1.037303,9.073579,-2.872812,-9.874513,1.387339,9.995595,-5.477577,-2.842086,5.109223,-6.780908,0.682236,2.427167,4.655346,-4.595212,4.870553,2.967623,9.915110,0.951823,5.527480,-5.351675,4.966667,4.607436,5.352019,7.362935,-7.074260,9.845401,-6.894604,-7.464794,-9.646406,-1.681194,2.545641,-6.610898,-5.469759,-5.603860,-0.335129,-0.399856,-3.626357,0.677294,-0.635305,-2.142443,-6.084270,-7.915141,-8.837006,4.299637,3.299516,4.255171,0.460885,2.583646,5.187517,9.313349,-4.940714,4.670740,-2.868715,6.376535,0.127459,4.949492,6.410206,-2.236113,-6.482681,-2.954797,7.203330,-3.714118,-2.205384,-6.963061,1.291465,7.031912,-3.586989,5.670466,5.882419,7.512563,-4.406875,-1.526915,-9.336497,-2.520407,-4.743624,0.501289,-0.594238,-3.609868,8.393767,-6.359434,7.374623,9.164969,-6.205859,-3.756349,3.353824,-7.437549,-0.466168,9.855521,6.296008,1.666274,-2.461498,6.182089,-6.503300,9.909122,-9.341003,-9.906395,3.344549,6.196534,-4.725334,8.741393,7.698891,-7.942203,2.613603,3.784235,1.889086,-6.800623,8.566975,-4.787238,-5.824924,8.534699,9.078559,-1.974734,1.838381,-2.764275,0.588449,1.925377,0.564076,-9.014764,1.877238,0.239927,-7.580511,7.203725,0.998876,7.806737,1.895824,-1.415527,-4.501620,-4.190400,4.730713,-1.250238,-3.512210,2.592043,1.464961,-5.933883,5.055746,0.219973,-6.732722,5.148511,-1.215192,9.465532,-3.013428,-3.194539,-4.468286,-8.512394,3.664382,-2.000823,2.583002,6.384147,6.322116,7.252529,1.913116,-5.546736,8.661367,9.124910,-4.925557,-6.846659,-5.939157,8.612371,5.412394,-3.398379,-4.336590,-5.783301,2.829386,-4.682988,-5.008408,3.106675,-2.288107,9.610636,-6.628571,2.792119,8.476542,7.007675,-7.904549,-0.538403,-8.058935,-2.162682,1.428769,-0.415012,-1.114919,8.678459,5.735006,-3.251689,-9.460415,4.034121,-5.671495,9.056905,-0.164135,-1.320657,1.823485,-1.918551,8.999448,4.052466,-2.369985,3.149488,-7.217225,3.088405,-1.214859,-2.427357,8.683614,1.815054,-4.725765,2.205457,0.688386,-6.076408,-7.749746,-5.712642,6.945686,-8.181695,-1.028285,9.188460,-4.984783,-0.060813,-9.516193,8.910649,-9.426393,-0.907482,8.570250,-2.093876,5.257240,1.828175,0.907297,5.003119,9.640077,-7.603566,-1.532846,3.138254,-6.988923,4.319360,-4.309696,-0.179574,4.563549,7.063539,-6.371867,0.244361,-3.560774,6.135034,-3.361151,7.412773,-5.568633,0.319975,8.233074,8.050722,-5.452084,-6.166259,8.662117,-2.740476,9.959574,6.806219,4.245126,9.645990,-9.398499,1.645971,-0.085093,-5.475049,5.627344,9.162089,-4.725681], dtype = "float64")#candidate|4906|(1386,)|const|float64
call_4905 = relay.TupleGetItem(func_487_call(relay.reshape(const_4906.astype('float64'), [9, 11, 14])), 0)
call_4907 = relay.TupleGetItem(func_489_call(relay.reshape(const_4906.astype('float64'), [9, 11, 14])), 0)
output = relay.Tuple([call_4894,call_4905,const_4906,])
output2 = relay.Tuple([call_4895,call_4907,const_4906,])
func_4915 = relay.Function([], output)
mod['func_4915'] = func_4915
mod = relay.transform.InferType()(mod)
output = func_4915()
func_4916 = relay.Function([], output)
mutated_mod['func_4916'] = func_4916
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3252_call = mod.get_global_var('func_3252')
func_3253_call = mutated_mod.get_global_var('func_3253')
call_4920 = relay.TupleGetItem(func_3252_call(), 0)
call_4921 = relay.TupleGetItem(func_3253_call(), 0)
output = relay.Tuple([call_4920,])
output2 = relay.Tuple([call_4921,])
func_4931 = relay.Function([], output)
mod['func_4931'] = func_4931
mod = relay.transform.InferType()(mod)
mutated_mod['func_4931'] = func_4931
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4931_call = mutated_mod.get_global_var('func_4931')
call_4932 = func_4931_call()
output = call_4932
func_4933 = relay.Function([], output)
mutated_mod['func_4933'] = func_4933
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1271_call = mod.get_global_var('func_1271')
func_1272_call = mutated_mod.get_global_var('func_1272')
call_4964 = relay.TupleGetItem(func_1271_call(), 0)
call_4965 = relay.TupleGetItem(func_1272_call(), 0)
uop_4979 = relay.cos(call_4964.astype('float64')) # shape=(455,)
uop_4981 = relay.cos(call_4965.astype('float64')) # shape=(455,)
uop_4983 = relay.erf(call_4964.astype('float32')) # shape=(455,)
uop_4985 = relay.erf(call_4965.astype('float32')) # shape=(455,)
func_4687_call = mod.get_global_var('func_4687')
func_4689_call = mutated_mod.get_global_var('func_4689')
const_4988 = relay.const([[False,True,False,False,True,True,False,True,True,False,True,False,True,True,True,False,True,False,False,True,False,False,True,False,False,True,False,True,True,False,True,True,True,True,True,False,False,True,False,True,False,True,True,True,False,False,True,True,False,True,False,False,False,False,False,False],[True,True,True,False,True,False,True,False,True,True,False,False,False,False,True,False,True,True,False,False,True,True,True,False,True,False,False,True,False,True,True,True,False,False,True,True,True,False,True,False,True,True,False,False,False,False,False,True,True,False,True,False,False,True,False,True],[True,True,False,True,False,True,False,False,True,True,True,False,True,False,True,True,True,True,True,True,True,True,True,False,False,False,True,False,True,True,True,False,False,True,True,False,False,True,False,True,False,True,False,False,True,True,True,True,False,False,False,False,True,True,False,True]], dtype = "bool")#candidate|4988|(3, 56)|const|bool
call_4987 = relay.TupleGetItem(func_4687_call(relay.reshape(const_4988.astype('bool'), [14, 4, 3])), 1)
call_4989 = relay.TupleGetItem(func_4689_call(relay.reshape(const_4988.astype('bool'), [14, 4, 3])), 1)
bop_5003 = relay.mod(uop_4979.astype('float32'), relay.reshape(uop_4983.astype('float32'), relay.shape_of(uop_4979))) # shape=(455,)
bop_5006 = relay.mod(uop_4981.astype('float32'), relay.reshape(uop_4985.astype('float32'), relay.shape_of(uop_4981))) # shape=(455,)
bop_5009 = relay.greater_equal(uop_4983.astype('bool'), relay.reshape(uop_4979.astype('bool'), relay.shape_of(uop_4983))) # shape=(455,)
bop_5012 = relay.greater_equal(uop_4985.astype('bool'), relay.reshape(uop_4981.astype('bool'), relay.shape_of(uop_4985))) # shape=(455,)
output = relay.Tuple([call_4987,const_4988,bop_5003,bop_5009,])
output2 = relay.Tuple([call_4989,const_4988,bop_5006,bop_5012,])
func_5022 = relay.Function([], output)
mod['func_5022'] = func_5022
mod = relay.transform.InferType()(mod)
mutated_mod['func_5022'] = func_5022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5022_call = mutated_mod.get_global_var('func_5022')
call_5023 = func_5022_call()
output = call_5023
func_5024 = relay.Function([], output)
mutated_mod['func_5024'] = func_5024
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4279_call = mod.get_global_var('func_4279')
func_4281_call = mutated_mod.get_global_var('func_4281')
call_5058 = relay.TupleGetItem(func_4279_call(), 0)
call_5059 = relay.TupleGetItem(func_4281_call(), 0)
output = relay.Tuple([call_5058,])
output2 = relay.Tuple([call_5059,])
func_5060 = relay.Function([], output)
mod['func_5060'] = func_5060
mod = relay.transform.InferType()(mod)
output = func_5060()
func_5061 = relay.Function([], output)
mutated_mod['func_5061'] = func_5061
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5134 = relay.var("var_5134", dtype = "int32", shape = (4, 9, 4))#candidate|5134|(4, 9, 4)|var|int32
var_5135 = relay.var("var_5135", dtype = "int32", shape = (4, 9, 4))#candidate|5135|(4, 9, 4)|var|int32
bop_5136 = relay.bitwise_and(var_5134.astype('int32'), relay.reshape(var_5135.astype('int32'), relay.shape_of(var_5134))) # shape=(4, 9, 4)
uop_5140 = relay.atanh(var_5134.astype('float32')) # shape=(4, 9, 4)
output = relay.Tuple([bop_5136,uop_5140,])
output2 = relay.Tuple([bop_5136,uop_5140,])
func_5152 = relay.Function([var_5134,var_5135,], output)
mod['func_5152'] = func_5152
mod = relay.transform.InferType()(mod)
var_5153 = relay.var("var_5153", dtype = "int32", shape = (4, 9, 4))#candidate|5153|(4, 9, 4)|var|int32
var_5154 = relay.var("var_5154", dtype = "int32", shape = (4, 9, 4))#candidate|5154|(4, 9, 4)|var|int32
output = func_5152(var_5153,var_5154,)
func_5155 = relay.Function([var_5153,var_5154,], output)
mutated_mod['func_5155'] = func_5155
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3949_call = mod.get_global_var('func_3949')
func_3951_call = mutated_mod.get_global_var('func_3951')
call_5176 = func_3949_call()
call_5177 = func_3949_call()
uop_5178 = relay.acosh(call_5176.astype('float32')) # shape=(32, 1)
uop_5180 = relay.acosh(call_5177.astype('float32')) # shape=(32, 1)
func_4253_call = mod.get_global_var('func_4253')
func_4254_call = mutated_mod.get_global_var('func_4254')
call_5183 = relay.TupleGetItem(func_4253_call(), 1)
call_5184 = relay.TupleGetItem(func_4254_call(), 1)
const_5188 = relay.const([[2.833122,9.817130,9.159146],[6.438879,-6.708200,-3.334061],[-7.304842,-2.424015,-4.124197],[3.587178,-1.972005,-2.524748],[-8.603056,-7.647978,-5.269959],[3.065429,-6.119607,-7.716799],[4.636776,-4.375977,-4.155508],[5.856765,-8.364108,2.767514],[6.241486,7.458293,-7.235056],[-2.772559,-7.274248,5.845354],[-2.566537,-4.607774,3.243071],[-9.199833,-0.979116,6.998728],[-6.573523,-3.598251,-0.609635],[4.902199,-3.055812,5.590549],[-6.841692,5.835166,-9.987239],[1.655543,-3.950059,2.407460],[-7.706630,-5.925129,3.677777],[-8.914989,-2.328737,-3.873645],[-8.387838,-6.505606,5.246224],[7.023332,2.210030,-6.145094],[3.879516,-4.100641,2.031921],[-3.285170,-6.853211,5.028866],[-3.464903,2.601358,-6.647394],[9.254543,2.792523,3.044599],[-9.230910,0.790433,-4.234095],[3.421553,1.369919,3.122847],[-7.687399,1.059913,-1.945696],[-8.236886,-7.496764,0.178330],[5.514316,8.300099,3.931793],[3.925471,3.170678,8.175803],[-2.268774,-0.378111,9.896526],[2.527905,2.327937,-2.510133]], dtype = "float32")#candidate|5188|(32, 3)|const|float32
bop_5189 = relay.equal(uop_5178.astype('bool'), const_5188.astype('bool')) # shape=(32, 3)
bop_5192 = relay.equal(uop_5180.astype('bool'), const_5188.astype('bool')) # shape=(32, 3)
uop_5193 = relay.sigmoid(bop_5189.astype('float32')) # shape=(32, 3)
uop_5195 = relay.sigmoid(bop_5192.astype('float32')) # shape=(32, 3)
uop_5196 = relay.sin(uop_5193.astype('float64')) # shape=(32, 3)
uop_5198 = relay.sin(uop_5195.astype('float64')) # shape=(32, 3)
func_4687_call = mod.get_global_var('func_4687')
func_4689_call = mutated_mod.get_global_var('func_4689')
call_5206 = relay.TupleGetItem(func_4687_call(relay.reshape(call_5183.astype('bool'), [14, 4, 3])), 1)
call_5207 = relay.TupleGetItem(func_4689_call(relay.reshape(call_5183.astype('bool'), [14, 4, 3])), 1)
output = relay.Tuple([call_5183,uop_5196,call_5206,])
output2 = relay.Tuple([call_5184,uop_5198,call_5207,])
func_5210 = relay.Function([], output)
mod['func_5210'] = func_5210
mod = relay.transform.InferType()(mod)
output = func_5210()
func_5211 = relay.Function([], output)
mutated_mod['func_5211'] = func_5211
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2600_call = mod.get_global_var('func_2600')
func_2601_call = mutated_mod.get_global_var('func_2601')
call_5218 = func_2600_call()
call_5219 = func_2600_call()
output = relay.Tuple([call_5218,])
output2 = relay.Tuple([call_5219,])
func_5225 = relay.Function([], output)
mod['func_5225'] = func_5225
mod = relay.transform.InferType()(mod)
mutated_mod['func_5225'] = func_5225
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5225_call = mutated_mod.get_global_var('func_5225')
call_5226 = func_5225_call()
output = call_5226
func_5227 = relay.Function([], output)
mutated_mod['func_5227'] = func_5227
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1113_call = mod.get_global_var('func_1113')
func_1115_call = mutated_mod.get_global_var('func_1115')
call_5269 = relay.TupleGetItem(func_1113_call(), 0)
call_5270 = relay.TupleGetItem(func_1115_call(), 0)
func_1718_call = mod.get_global_var('func_1718')
func_1720_call = mutated_mod.get_global_var('func_1720')
call_5271 = relay.TupleGetItem(func_1718_call(), 3)
call_5272 = relay.TupleGetItem(func_1720_call(), 3)
func_1062_call = mod.get_global_var('func_1062')
func_1068_call = mutated_mod.get_global_var('func_1068')
var_5274 = relay.var("var_5274", dtype = "float64", shape = (210,))#candidate|5274|(210,)|var|float64
var_5275 = relay.var("var_5275", dtype = "float32", shape = (455,))#candidate|5275|(455,)|var|float32
var_5276 = relay.var("var_5276", dtype = "float64", shape = (1386,))#candidate|5276|(1386,)|var|float64
call_5273 = relay.TupleGetItem(func_1062_call(relay.reshape(var_5274.astype('float64'), [5, 42]), relay.reshape(call_5269.astype('bool'), [32,]), relay.reshape(var_5275.astype('float32'), [455,]), relay.reshape(var_5276.astype('float64'), [1386,]), relay.reshape(var_5274.astype('float32'), [7, 15, 2]), ), 15)
call_5277 = relay.TupleGetItem(func_1068_call(relay.reshape(var_5274.astype('float64'), [5, 42]), relay.reshape(call_5269.astype('bool'), [32,]), relay.reshape(var_5275.astype('float32'), [455,]), relay.reshape(var_5276.astype('float64'), [1386,]), relay.reshape(var_5274.astype('float32'), [7, 15, 2]), ), 15)
output = relay.Tuple([call_5269,call_5271,call_5273,var_5274,var_5275,var_5276,])
output2 = relay.Tuple([call_5270,call_5272,call_5277,var_5274,var_5275,var_5276,])
func_5290 = relay.Function([var_5274,var_5275,var_5276,], output)
mod['func_5290'] = func_5290
mod = relay.transform.InferType()(mod)
mutated_mod['func_5290'] = func_5290
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5290_call = mutated_mod.get_global_var('func_5290')
var_5292 = relay.var("var_5292", dtype = "float64", shape = (210,))#candidate|5292|(210,)|var|float64
var_5293 = relay.var("var_5293", dtype = "float32", shape = (455,))#candidate|5293|(455,)|var|float32
var_5294 = relay.var("var_5294", dtype = "float64", shape = (1386,))#candidate|5294|(1386,)|var|float64
call_5291 = func_5290_call(var_5292,var_5293,var_5294,)
output = call_5291
func_5295 = relay.Function([var_5292,var_5293,var_5294,], output)
mutated_mod['func_5295'] = func_5295
mutated_mod = relay.transform.InferType()(mutated_mod)
func_355_call = mod.get_global_var('func_355')
func_356_call = mutated_mod.get_global_var('func_356')
call_5323 = relay.TupleGetItem(func_355_call(), 3)
call_5324 = relay.TupleGetItem(func_356_call(), 3)
output = relay.Tuple([call_5323,])
output2 = relay.Tuple([call_5324,])
func_5330 = relay.Function([], output)
mod['func_5330'] = func_5330
mod = relay.transform.InferType()(mod)
output = func_5330()
func_5331 = relay.Function([], output)
mutated_mod['func_5331'] = func_5331
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1151_call = mod.get_global_var('func_1151')
func_1152_call = mutated_mod.get_global_var('func_1152')
call_5361 = relay.TupleGetItem(func_1151_call(), 0)
call_5362 = relay.TupleGetItem(func_1152_call(), 0)
func_4040_call = mod.get_global_var('func_4040')
func_4043_call = mutated_mod.get_global_var('func_4043')
var_5369 = relay.var("var_5369", dtype = "float64", shape = (1008,))#candidate|5369|(1008,)|var|float64
call_5368 = relay.TupleGetItem(func_4040_call(relay.reshape(var_5369.astype('float64'), [1008,])), 3)
call_5370 = relay.TupleGetItem(func_4043_call(relay.reshape(var_5369.astype('float64'), [1008,])), 3)
output = relay.Tuple([call_5361,call_5368,var_5369,])
output2 = relay.Tuple([call_5362,call_5370,var_5369,])
func_5389 = relay.Function([var_5369,], output)
mod['func_5389'] = func_5389
mod = relay.transform.InferType()(mod)
mutated_mod['func_5389'] = func_5389
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5390 = relay.var("var_5390", dtype = "float64", shape = (1008,))#candidate|5390|(1008,)|var|float64
func_5389_call = mutated_mod.get_global_var('func_5389')
call_5391 = func_5389_call(var_5390)
output = call_5391
func_5392 = relay.Function([var_5390], output)
mutated_mod['func_5392'] = func_5392
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2351_call = mod.get_global_var('func_2351')
func_2352_call = mutated_mod.get_global_var('func_2352')
call_5394 = relay.TupleGetItem(func_2351_call(), 1)
call_5395 = relay.TupleGetItem(func_2352_call(), 1)
output = relay.Tuple([call_5394,])
output2 = relay.Tuple([call_5395,])
func_5427 = relay.Function([], output)
mod['func_5427'] = func_5427
mod = relay.transform.InferType()(mod)
output = func_5427()
func_5428 = relay.Function([], output)
mutated_mod['func_5428'] = func_5428
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5448 = relay.var("var_5448", dtype = "float64", shape = (16, 14, 3))#candidate|5448|(16, 14, 3)|var|float64
uop_5449 = relay.asin(var_5448.astype('float64')) # shape=(16, 14, 3)
func_4253_call = mod.get_global_var('func_4253')
func_4254_call = mutated_mod.get_global_var('func_4254')
call_5463 = relay.TupleGetItem(func_4253_call(), 1)
call_5464 = relay.TupleGetItem(func_4254_call(), 1)
func_3316_call = mod.get_global_var('func_3316')
func_3318_call = mutated_mod.get_global_var('func_3318')
const_5470 = relay.const([False,False,True,True,False,True,False,False,False,False,True,False,True,False,True,True,True,False,True,True,False,False,True,True,True,True,True,False,False,True,False,True], dtype = "bool")#candidate|5470|(32,)|const|bool
call_5469 = relay.TupleGetItem(func_3316_call(relay.reshape(const_5470.astype('bool'), [32, 1])), 1)
call_5471 = relay.TupleGetItem(func_3318_call(relay.reshape(const_5470.astype('bool'), [32, 1])), 1)
output = relay.Tuple([uop_5449,call_5463,call_5469,const_5470,])
output2 = relay.Tuple([uop_5449,call_5464,call_5471,const_5470,])
func_5478 = relay.Function([var_5448,], output)
mod['func_5478'] = func_5478
mod = relay.transform.InferType()(mod)
mutated_mod['func_5478'] = func_5478
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5479 = relay.var("var_5479", dtype = "float64", shape = (16, 14, 3))#candidate|5479|(16, 14, 3)|var|float64
func_5478_call = mutated_mod.get_global_var('func_5478')
call_5480 = func_5478_call(var_5479)
output = call_5480
func_5481 = relay.Function([var_5479], output)
mutated_mod['func_5481'] = func_5481
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1751_call = mod.get_global_var('func_1751')
func_1752_call = mutated_mod.get_global_var('func_1752')
call_5659 = func_1751_call()
call_5660 = func_1751_call()
func_234_call = mod.get_global_var('func_234')
func_235_call = mutated_mod.get_global_var('func_235')
call_5665 = relay.TupleGetItem(func_234_call(), 0)
call_5666 = relay.TupleGetItem(func_235_call(), 0)
func_4589_call = mod.get_global_var('func_4589')
func_4593_call = mutated_mod.get_global_var('func_4593')
const_5669 = relay.const([False,True,False,True,False,True,True,False,True,True,True,False,True,False,True,True,False,False,False,True,True,True,False,False,True,True,True,True,False,False,True,False,True,False,True,True,True,True,True,False,False,True,False,True,True,True,True,True,True,True,False,True,True,False,True,False,True,False,True,True,False,True,True,True,True,True,False,False,False,False,False,False,True,True,True,False,False,False,True,False,False,True,True,True,True,False,True,True,False,False,False,True,True,False,False,False,True,True,False,True,True,True,True,False,False,False,False,False,True,True,False,True,False,True,False,True,True,True,False,False,True,True,True,True,True,True,True,False,False,False,True,True,True,False,True,True,False,True,True,True,False,False,False,False,True,False,False,True,True,False,True,True,True,False,False,False,True,True,False,False,True,True,True,False,True,True,True,False,False,True,True,True,True,False,True,False,False,True,True,False,False,False,True,True,False,True,False,False,False,False,False,False,False,True,False,True,False,False,True,True,True,True,False,False,True,True,False,True,True,False,True,True,False,False,False,True,True,False,True,False,True,True,False,True,False,False,False,True,False,False,False,True,True,False,True,False,True,False,True,False,False,True,True,False,True,False,True,True,False,False,True,True,True,True,False,False,True,True,True,False,True,True,True,False,True,True,False,False,True,True,True,True,False,False,True,False,False,True,True,True,True,False,False,True,True,True,True,False,False,False,False,True,True,False,True,False,True,True,False,False,False,True,True,True,False,False,True,False,True,False,True,True,False,False,False,True,True,True,True,True,True,False,False,False,False,True,False,True,False,False,True,False,False,False,True,False,False,False,False,False,False,False,True,False,False,True,True,True,False,True,False,True,True,False,True,True,True,True,False,True,True,True,True,True,True,True,True,True,True,False,True,False,False,False,False,False,True,False,True,True,True,True,False,False,True,True,True,False,False,True,True,False,False,False,True,True,True,True,False,True,True,False,True,True,False,True,True,False,True,False,True,False,True,False,False,False,True,True,False,False,False,True,False,False,True,True,True,True,False,False,False,True,False,True,False,False,False,True,False,False,True,False,False,False,False,True,False,True,False,False,True,True,True,True,True,True,True,True,False,True,True,False,True,True,True,True,True,True,True,False,True,False,False,False,True,False,True,True,True,True,False,True,False,True,False,False,False,True,True,False,True,False,False,False,True,True,True,False,True,False,False,False,True,False,False,False,False,True,True,False,True,True,True,True,True,True,True,True,True,False,False,False,False,False,False,True,False,True,False,True,False,False,True,True,True,False,True,True,True,False,True,False,False,False,False,True,False,True,False,True,False,False,True,False,True,True,False,True,False,False,False,False,False,True,True,True,True,False,True,True,True,False,True,True,True,True,False,True,True,False,False,True,True,True,True,False,False,True,True,False,True,True,True,False,False,False,True,False,True,False,True,False,True,False,True,False,False,True,True,True,True,True,False,False,False,True,False,False,True,True,False,False,False,True,False,True,False,False,True,True,False,False,True,True,False,False,True,False,True,False,True,False,True,True,True,True,True,True,True,False,True,False,False,True,True,True,False,True,True,True,False,True,True,True,True,False,True,False,False,False,True,False,True,False,True,False,False,False,True,True,False,False,True,True,False,True,False,False,False,True,False,True,False,True,False,True,True,False,False,False,False,True,False,True,True,True,True,True,False,True,True,False,True,False,True,True,True,True,False,False,False,False,True,True,True,True,False,True,True,False,True,False,True,True,True,True,False,True,False,False,False,True,True,True,False,False,True,True,False,True,True,False,True,False,True,False,False,False,True,True,False,False,True,False,True,True,True,False,False,True,False,False,True,True,True,True,False,False,False,False,True,False,False,False,False,False,True,False,False,False,False,False,True,True,False,False,False,True,False,False,True,True,False,False,False,False,True,False,False,True,False,False,True,True,False,False,True,True,False,True,False,False,True,True,False,False,True,False,True,False,True,False,True,True,False,True,True,True,False,False,True,False,False,False,True,False,False,False,False,True,True,False,True,True,True,True,True,False,False,False,False,True,True,True,False,True,True,False,True,True,False,False,True,False,False,True,False,True,True,False,False,True,False,True,False,True,True,True,False,True,True,False,False,False,False,False,False,True,False,True,False,False,True,True,False,True,False,True,False,False,True,False,True,False,False,True,True,True,False,True,False,True,False,False,False,False,False,False,True,True,True,True,True,False,False,False,True,True,True,False,True,False,False,False,False,False,True,False,True,True,True,True,False,True,True,False,True,False,False,False,True,True,True,False,True,False,False,True,True,True,True,False,False,True,False,False,False,True,False,True,False,False,True,False,True,False,True,True,False,True,True,True,True,True,False,False,True,False,True,False,False,False,False,False,False,False,False,False,True,True,True,True,True,False,True,False,True,False,True,True,False,True,True,True,False,True,True,True,True,True,True,True,True,True,True,True,True,False,True,False,True,True,True,False,True,False,False,False,True,False,False,True,True,True,False,True,False,True,False,True,False,True,True,False,False,False,True,True,False,True,True,True,False,False,True,True,False,False,False,True,False,False,False,True,True,False,False,True,False,False,False,False,True,True,False,True,False,False,False,False,True,True,False,True,True,True,False,True,True,False,True,True,False,True,False,True,False,False,False,False,False,True,False,True,False,True,False,False,True,False,True,False,True,True,True,False,False,True,False,False,False,True,True,False,False,False,False,False,False,False,False,True,True,True,False,False,False,True,False,True,True,True,True,True,False,False,True,True,True,True,True,True,False,False,False,True,False,False,True,True,False,False,False,False,True,False,False,True,True,False,False,True,False,True,False,False,True,True,True,False,True,False,False,True,True,False,False,True,False,False,False,False,False,False,False,True,True,False,False,False,True,False,True,True,True,True,True,False,True,True,False,False,True,False,True,False,False,False,False,False,False,False,True,False,True,True,True,False,False,True,False,True,True,False,False,False,True,True,False,False,False,False,False,False,True,False,False,True,False,False,False,False,True,True,False,False,False,True,False,False,False,False,True,True,False,True,True,False,True,True,False,True,True,True,True,False,True,False,False,True,False,False,True,True,True,True,True,True,False,True,False,False,False,True,True,False,True,False,False,False,True,True,True,False,False,True,True,True,True,True,False,True,True,True,True,False,False,False,True,False,False,True,False,False,True,True,False,False,True,True,False,False,False,True,False,False,False,True,True,True,False,True,True,True,False,False,True,False,False,True,False,False,False,False,False,True,True,True,True,False,False,True,False,False,True,False,False,True,False,True,True,False,False,False,False,False,False,True,False,False,False,False,True,True,False,True,False,True,False,False,True,False,True,True,False,False,True,False,False,True,True,True,False,True,True,False,True,True,True,True,True,False,True,False,True,True,False,True,False,False,True,True,True,True,False,True,True,False,False,True,True,True,False,True,True,True,True,False,False,True,False,False,True,True,False,False,True,False,True,True,True,True,True,False,False,True,True,True,True,True,True,True,True,True,False,False,True,False,False,True,True,False,True,False,False,False,False,True,False,True,False,True,False,True,True,False,True,True,False,False,False,True,True,True,False,False,True,True,False,False,True,True,False,False,True,False,False,True,True,True,False,False,False,True,True,False,True,False,True,True,True,True,False,False,True,True,False,False,False,False,False,True,True,True,False,False,True,False,True,True,True,False,True,False,True,False,False,False,True,True,False,False,False,False,False,True,True,True,False,False,True,False,True,True,True,True,True,True,False,True,False,True,True,True,True,False,True,True,False,False,False,False,False,True,True,True,False,False,False,False,False,True,True,False,False,False,True,False,True,True,True,True,True,False,False,False,False,False,False,False,False,False,True,True,True,False,False,False,False,False,False,True,True,True,True,False,False,False,False,True,False,True,True,True,True,True,True,True,True,True,True,False,False,False,True,True,False,True,True,True,True,False,False,False,True,True,False,True,True,False,True,True,True,False,False,False,True,False,True,True,True,True,True,True,True,False,True,False,True,False,True,False,False,True,False,False,False,True,True,True,True,False,True,True,False,True,True,False,True,True,True,True,False,False,False,True,False,True,True,True,False,False,True,False,True,True,False,True,False,False,True,False,False,False,True,True,True,False,True,True,True,False,False,True,False,False,True,False,False,False,True,False,True,False,False,False,True,True,False,False,True,True,False,True,True,True,False,False,True,True,True,True,True,True,False,True,False,True,True,False,False,False,False,True,False,False,True,False,True,True,False,False,False,False,False,True,True,False,False,False,False,True,True,True,True], dtype = "bool")#candidate|5669|(1815,)|const|bool
call_5668 = relay.TupleGetItem(func_4589_call(relay.reshape(const_5669.astype('bool'), [1815,]), relay.reshape(call_5665.astype('float32'), [14, 4, 3]), ), 5)
call_5670 = relay.TupleGetItem(func_4593_call(relay.reshape(const_5669.astype('bool'), [1815,]), relay.reshape(call_5665.astype('float32'), [14, 4, 3]), ), 5)
func_120_call = mod.get_global_var('func_120')
func_122_call = mutated_mod.get_global_var('func_122')
call_5683 = func_120_call()
call_5684 = func_120_call()
output = relay.Tuple([call_5659,call_5665,call_5668,const_5669,call_5683,])
output2 = relay.Tuple([call_5660,call_5666,call_5670,const_5669,call_5684,])
func_5728 = relay.Function([], output)
mod['func_5728'] = func_5728
mod = relay.transform.InferType()(mod)
output = func_5728()
func_5729 = relay.Function([], output)
mutated_mod['func_5729'] = func_5729
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1523_call = mod.get_global_var('func_1523')
func_1525_call = mutated_mod.get_global_var('func_1525')
call_5739 = func_1523_call()
call_5740 = func_1523_call()
func_2667_call = mod.get_global_var('func_2667')
func_2669_call = mutated_mod.get_global_var('func_2669')
call_5746 = relay.TupleGetItem(func_2667_call(), 1)
call_5747 = relay.TupleGetItem(func_2669_call(), 1)
func_3023_call = mod.get_global_var('func_3023')
func_3024_call = mutated_mod.get_global_var('func_3024')
call_5755 = func_3023_call()
call_5756 = func_3023_call()
uop_5757 = relay.erf(call_5755.astype('float32')) # shape=(6, 16, 13)
uop_5759 = relay.erf(call_5756.astype('float32')) # shape=(6, 16, 13)
bop_5762 = relay.greater(uop_5757.astype('bool'), relay.reshape(call_5755.astype('bool'), relay.shape_of(uop_5757))) # shape=(6, 16, 13)
bop_5765 = relay.greater(uop_5759.astype('bool'), relay.reshape(call_5756.astype('bool'), relay.shape_of(uop_5759))) # shape=(6, 16, 13)
var_5770 = relay.var("var_5770", dtype = "uint8", shape = (4, 2, 4))#candidate|5770|(4, 2, 4)|var|uint8
bop_5771 = relay.mod(call_5746.astype('float64'), relay.reshape(var_5770.astype('float64'), relay.shape_of(call_5746))) # shape=(4, 2, 4)
bop_5774 = relay.mod(call_5747.astype('float64'), relay.reshape(var_5770.astype('float64'), relay.shape_of(call_5747))) # shape=(4, 2, 4)
func_5427_call = mod.get_global_var('func_5427')
func_5428_call = mutated_mod.get_global_var('func_5428')
call_5776 = relay.TupleGetItem(func_5427_call(), 0)
call_5777 = relay.TupleGetItem(func_5428_call(), 0)
bop_5787 = relay.multiply(bop_5762.astype('uint64'), relay.reshape(uop_5757.astype('uint64'), relay.shape_of(bop_5762))) # shape=(6, 16, 13)
bop_5790 = relay.multiply(bop_5765.astype('uint64'), relay.reshape(uop_5759.astype('uint64'), relay.shape_of(bop_5765))) # shape=(6, 16, 13)
output = relay.Tuple([call_5739,bop_5771,call_5776,bop_5787,])
output2 = relay.Tuple([call_5740,bop_5774,call_5777,bop_5790,])
func_5803 = relay.Function([var_5770,], output)
mod['func_5803'] = func_5803
mod = relay.transform.InferType()(mod)
var_5804 = relay.var("var_5804", dtype = "uint8", shape = (4, 2, 4))#candidate|5804|(4, 2, 4)|var|uint8
output = func_5803(var_5804)
func_5805 = relay.Function([var_5804], output)
mutated_mod['func_5805'] = func_5805
mutated_mod = relay.transform.InferType()(mutated_mod)
func_617_call = mod.get_global_var('func_617')
func_618_call = mutated_mod.get_global_var('func_618')
call_5822 = func_617_call()
call_5823 = func_617_call()
func_3164_call = mod.get_global_var('func_3164')
func_3165_call = mutated_mod.get_global_var('func_3165')
call_5825 = relay.TupleGetItem(func_3164_call(), 1)
call_5826 = relay.TupleGetItem(func_3165_call(), 1)
output = relay.Tuple([call_5822,call_5825,])
output2 = relay.Tuple([call_5823,call_5826,])
func_5843 = relay.Function([], output)
mod['func_5843'] = func_5843
mod = relay.transform.InferType()(mod)
mutated_mod['func_5843'] = func_5843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5843_call = mutated_mod.get_global_var('func_5843')
call_5844 = func_5843_call()
output = call_5844
func_5845 = relay.Function([], output)
mutated_mod['func_5845'] = func_5845
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5854 = relay.const([[[9,1,1,2,-2,-9,4,9,-9,8],[-9,7,-6,7,-6,-3,2,9,-1,-3],[5,-1,9,-6,3,6,7,-8,-2,6],[-9,1,4,-5,10,7,10,-6,-10,-9],[10,-6,1,-10,8,10,-7,-1,2,-6],[-5,-10,1,-6,-2,-5,-2,-1,-5,-7],[9,2,-8,-6,8,5,-7,8,2,-10],[-1,-9,5,8,-1,5,-2,-5,-10,3],[3,1,2,7,-5,10,-1,1,-9,6]]], dtype = "int8")#candidate|5854|(1, 9, 10)|const|int8
var_5855 = relay.var("var_5855", dtype = "int8", shape = (9, 9, 10))#candidate|5855|(9, 9, 10)|var|int8
bop_5856 = relay.minimum(const_5854.astype('int8'), var_5855.astype('int8')) # shape=(9, 9, 10)
output = bop_5856
output2 = bop_5856
F = relay.Function([var_5855,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_5855,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

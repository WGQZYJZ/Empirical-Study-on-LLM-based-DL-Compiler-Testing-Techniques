==========mod==========
#[version = "0.0.5"]
def @func_6042(%var_6012: Tensor[(60), float64], %var_6027: Tensor[(1664), uint64]) -> (Tensor[(14, 7, 3), float32], int8, Tensor[(648), int32], Tensor[(60), float64], int8, Tensor[(154), float32], Tensor[(1664), int64], Tensor[(2816), float64], Tensor[(180), uint16], Tensor[(1664), uint64], Tensor[(10, 11, 5), int8]) {
  %0 = @func_5050() /* ty=(Tensor[(14, 7, 3), float64], Tensor[(14, 7, 3), float32]) */;
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(648), int32] */, dtype="int32") /* ty=Tensor[(648), int32] */;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(648), int32] */, dtype="int32") /* ty=Tensor[(648), int32] */;
  %3 = cast(%var_6012, dtype="float64") /* ty=Tensor[(60), float64] */;
  %4 = cast(meta[relay.Constant][1] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %5 = cast(meta[relay.Constant][2] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
  %6 = reshape(%1, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), int32] */;
  %7 = reshape(%2, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), int32] */;
  %8 = reshape(%3, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %9 = reshape(%4, newshape=[]) /* ty=int8 */;
  %10 = reshape(%5, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %11 = @func_1737(%6, %7, %8, %9, %10) /* ty=(Tensor[(6, 9, 12), int32], Tensor[(60), float64], int8, Tensor[(154), bool]) */;
  %12 = cast(meta[relay.Constant][3] /* ty=Tensor[(2816), float64] */, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %13 = cast(meta[relay.Constant][4] /* ty=Tensor[(180), uint16] */, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %14 = cast(%var_6012, dtype="float64") /* ty=Tensor[(60), float64] */;
  %15 = cast(meta[relay.Constant][2] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
  %16 = cast(%var_6027, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
  %17 = reshape(%12, newshape=[2816]) /* ty=Tensor[(2816), float64] */;
  %18 = reshape(%13, newshape=[180]) /* ty=Tensor[(180), uint16] */;
  %19 = reshape(%14, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %20 = reshape(%15, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %21 = reshape(%16, newshape=[1664]) /* ty=Tensor[(1664), uint64] */;
  %22 = @func_4103(%17, %18, %19, %20, %21) /* ty=(Tensor[(14, 7, 3), float32], Tensor[(16, 16, 11), float64], Tensor[(5), int32], Tensor[(2816), float64], Tensor[(180), uint16], Tensor[(12, 11, 4), float32], Tensor[(60), float64], Tensor[(154), float32], Tensor[(16, 16, 11), float64], Tensor[(1664), int64]) */;
  %23 = %11.2;
  %24 = cast(%23, dtype="int8") /* ty=int8 */;
  %25 = reshape(%24, newshape=[]) /* ty=int8 */;
  %26 = @func_1574(%25) /* ty=(Tensor[(10, 11, 5), int8],) */;
  %27 = %0.1;
  %28 = %22.9;
  %29 = %26.0;
  (%27, %23, meta[relay.Constant][0] /* ty=Tensor[(648), int32] */, %var_6012, meta[relay.Constant][1] /* ty=int8 */, meta[relay.Constant][2] /* ty=Tensor[(154), float32] */, %28, meta[relay.Constant][3] /* ty=Tensor[(2816), float64] */, meta[relay.Constant][4] /* ty=Tensor[(180), uint16] */, %var_6027, %29)
}

def @func_5050() -> (Tensor[(14, 7, 3), float64], Tensor[(14, 7, 3), float32]) {
  %30 = @func_4375() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32]) */;
  %31 = %30.1;
  %32 = cast(meta[relay.Constant][5] /* ty=Tensor[(14, 7, 3), float32] */, dtype="float64") /* ty=Tensor[(14, 7, 3), float64] */;
  %33 = shape_of(%31, dtype="int32") /* ty=Tensor[(3), int32] */;
  %34 = cast(%31, dtype="float64") /* ty=Tensor[(14, 7, 3), float64] */;
  %35 = dyn.reshape(%32, %33, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %36 = cast(%31, dtype="float32") /* ty=Tensor[(14, 7, 3), float32] */;
  %37 = power(%34, %35) /* ty=Tensor[(14, 7, 3), float64] */;
  %38 = asin(%36) /* ty=Tensor[(14, 7, 3), float32] */;
  (%37, %38)
}

def @func_9004() -> (Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32]) {
  %39 = @func_7702() /* ty=(Tensor[(14, 7, 3), bool],) */;
  %40 = @func_5161() /* ty=(Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) */;
  %41 = %39.0;
  %42 = %40.1;
  (%41, %42)
}

def @func_10307() -> (Tensor[(14, 7, 3), float32],) {
  %43 = @func_5261() /* ty=Tensor[(14, 7, 3), float32] */;
  (%43,)
}

def @func_5612(%var_5602: Tensor[(6, 10, 12), float64], %var_5603: Tensor[(6, 10, 12), float64], %var_5610: int8) -> (Tensor[(6, 10, 12), float64], Tensor[(180), uint16], Tensor[(2816), float64], Tensor[(180, 1), uint16], int8) {
  %44 = cast(%var_5603, dtype="float64") /* ty=Tensor[(6, 10, 12), float64] */;
  %45 = shape_of(%var_5602, dtype="int32") /* ty=Tensor[(3), int32] */;
  %46 = cast(%var_5602, dtype="float64") /* ty=Tensor[(6, 10, 12), float64] */;
  %47 = dyn.reshape(%44, %45, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %48 = cast(meta[relay.Constant][6] /* ty=Tensor[(2816), float64] */, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %49 = cast(meta[relay.Constant][7] /* ty=Tensor[(180, 1), uint16] */, dtype="uint16") /* ty=Tensor[(180, 1), uint16] */;
  %50 = cast(%var_5610, dtype="int8") /* ty=int8 */;
  %51 = reshape(%48, newshape=[16, 16, 11]) /* ty=Tensor[(16, 16, 11), float64] */;
  %52 = reshape(%49, newshape=[180]) /* ty=Tensor[(180), uint16] */;
  %53 = reshape(%50, newshape=[]) /* ty=int8 */;
  %54 = @func_1938(%51, %52, %53) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(12, 11, 4), float32], Tensor[(180), uint16], int8) */;
  %55 = maximum(%46, %47) /* ty=Tensor[(6, 10, 12), float64] */;
  %56 = %54.2;
  (%55, %56, meta[relay.Constant][6] /* ty=Tensor[(2816), float64] */, meta[relay.Constant][7] /* ty=Tensor[(180, 1), uint16] */, %var_5610)
}

def @func_5769(%var_5751: Tensor[(8, 4, 5), float64]) -> (Tensor[(8, 4, 5), float64],) {
  %57 = cast(%var_5751, dtype="float64") /* ty=Tensor[(8, 4, 5), float64] */;
  %58 = sqrt(%57) /* ty=Tensor[(8, 4, 5), float64] */;
  (%58,)
}

def @func_6764(%var_6760: Tensor[(70), float32]) -> (Tensor[(14, 7, 3), bool], Tensor[(5, 1, 14), float32], Tensor[(70), float32]) {
  %59 = @func_4375() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32]) */;
  %60 = cast(%var_6760, dtype="float32") /* ty=Tensor[(70), float32] */;
  %61 = reshape(%60, newshape=[5, 1, 14]) /* ty=Tensor[(5, 1, 14), float32] */;
  %62 = %59.0;
  %63 = @func_5396(%61) /* ty=Tensor[(5, 1, 14), float32] */;
  (%62, %63, %var_6760)
}

def @func_10700(%var_10664: Tensor[(2, 6, 14), int32], %var_10676: Tensor[(108), float64], %var_10685: int8, %var_10686: Tensor[(154), float32]) -> (Tensor[(2, 6, 14), float64], Tensor[(2, 6, 9), float64], Tensor[(108), float64], Tensor[(16, 12, 12), float64], Tensor[(16, 12, 12), float64], int8, Tensor[(154), float32]) {
  %64 = cast(%var_10664, dtype="int32") /* ty=Tensor[(2, 6, 14), int32] */;
  %65 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(2, 6, 14), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %66 = cast(meta[relay.Constant][8] /* ty=Tensor[(2, 6, 14), int32] */, dtype="int32") /* ty=Tensor[(2, 6, 14), int32] */;
  %67 = dyn.reshape(%64, %65, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %68 = logical_xor(%66, %67) /* ty=Tensor[(2, 6, 14), int32] */;
  %69 = cast(%68, dtype="float64") /* ty=Tensor[(2, 6, 14), float64] */;
  %70 = cast(%var_10676, dtype="float64") /* ty=Tensor[(108), float64] */;
  %71 = reshape(%70, newshape=[2, 6, 9]) /* ty=Tensor[(2, 6, 9), float64] */;
  %72 = @func_9324(%71) /* ty=(Tensor[(2, 6, 9), float64], Tensor[(10, 11, 5), int8], int8) */;
  %73 = cast(%var_10685, dtype="int8") /* ty=int8 */;
  %74 = cast(%var_10686, dtype="float32") /* ty=Tensor[(154), float32] */;
  %75 = reshape(%73, newshape=[]) /* ty=int8 */;
  %76 = reshape(%74, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %77 = @func_5913(%75, %76) /* ty=(Tensor[(14, 7, 3), float32], Tensor[(16, 12, 12), float64], Tensor[(5, 1, 14), float32], Tensor[(70), float32], Tensor[(10, 11, 5), int8], Tensor[(1, 60), float64], int8, Tensor[(154), float32], Tensor[(1664), uint64], Tensor[(6, 9, 12), int32]) */;
  %78 = acos(%69) /* ty=Tensor[(2, 6, 14), float64] */;
  %79 = %72.0;
  %80 = @func_5650() /* ty=Tensor[(16, 12, 12), float64] */;
  %81 = %77.1;
  (%78, %79, %var_10676, %80, %81, %var_10685, %var_10686)
}

def @func_8815(%var_8801: Tensor[(8, 10, 16), float64]) -> Tensor[(8, 10, 16), float64] {
  %82 = cast(%var_8801, dtype="float64") /* ty=Tensor[(8, 10, 16), float64] */;
  exp(%82) /* ty=Tensor[(8, 10, 16), float64] */
}

def @func_8293(%var_8288: int8) -> (Tensor[(70), float32], Tensor[(5, 1, 14), float32], Tensor[(10, 11, 5), int8], int8) {
  %83 = @func_6553() /* ty=(Tensor[(70), float32],) */;
  %84 = %83.0;
  %85 = cast(%84, dtype="float32") /* ty=Tensor[(70), float32] */;
  %86 = reshape(%85, newshape=[70]) /* ty=Tensor[(70), float32] */;
  %87 = @func_6764(%86) /* ty=(Tensor[(14, 7, 3), bool], Tensor[(5, 1, 14), float32], Tensor[(70), float32]) */;
  %88 = cast(%var_8288, dtype="int8") /* ty=int8 */;
  %89 = reshape(%88, newshape=[]) /* ty=int8 */;
  %90 = @func_1574(%89) /* ty=(Tensor[(10, 11, 5), int8],) */;
  %91 = %87.1;
  %92 = %90.0;
  (%84, %91, %92, %var_8288)
}

def @func_897(%var_869: Tensor[(180), uint16], %var_876: int8) -> (Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(528), float32], Tensor[(180), uint16], Tensor[(14, 1, 11), int8], int8, Tensor[(154), int8], Tensor[(12, 11, 4), float32], Tensor[(14, 14, 10), float32]) {
  %93 = cast(meta[relay.Constant][9] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %94 = reshape(%93, newshape=[12, 11, 4]) /* ty=Tensor[(12, 11, 4), float32] */;
  %95 = cast(%var_869, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %96 = cast(%var_869, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %97 = reshape(%95, newshape=[5, 4, 9]) /* ty=Tensor[(5, 4, 9), uint16] */;
  %98 = reshape(%96, newshape=[5, 4, 9]) /* ty=Tensor[(5, 4, 9), uint16] */;
  %99 = @func_666(%97, %98) /* ty=(Tensor[(5, 4, 9), uint16], Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(12, 11, 4), float32], Tensor[(12, 11, 4), float32]) */;
  %100 = cast(%var_876, dtype="int8") /* ty=int8 */;
  %101 = cast(meta[relay.Constant][10] /* ty=Tensor[(154), int8] */, dtype="int8") /* ty=Tensor[(154), int8] */;
  %102 = reshape(%100, newshape=[]) /* ty=int8 */;
  %103 = reshape(%101, newshape=[14, 1, 11]) /* ty=Tensor[(14, 1, 11), int8] */;
  %104 = @func_134(%102, %103) /* ty=(Tensor[(14, 1, 11), int8],) */;
  %105 = cast(%var_869, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %106 = cast(%var_869, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %107 = reshape(%105, newshape=[5, 4, 9]) /* ty=Tensor[(5, 4, 9), uint16] */;
  %108 = reshape(%106, newshape=[5, 4, 9]) /* ty=Tensor[(5, 4, 9), uint16] */;
  %109 = @func_666(%107, %108) /* ty=(Tensor[(5, 4, 9), uint16], Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(12, 11, 4), float32], Tensor[(12, 11, 4), float32]) */;
  %110 = cast(meta[relay.Constant][11] /* ty=Tensor[(14, 14, 10), float64] */, dtype="float64") /* ty=Tensor[(14, 14, 10), float64] */;
  %111 = log(%110) /* ty=Tensor[(14, 14, 10), float64] */;
  %112 = cast(meta[relay.Constant][12] /* ty=Tensor[(14, 14, 10), float64] */, dtype="float32") /* ty=Tensor[(14, 14, 10), float32] */;
  %113 = shape_of(%111, dtype="int32") /* ty=Tensor[(3), int32] */;
  %114 = cast(%111, dtype="float32") /* ty=Tensor[(14, 14, 10), float32] */;
  %115 = dyn.reshape(%112, %113, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %116 = @func_339(%94) /* ty=Tensor[(12, 11, 4), float32] */;
  %117 = %99.2;
  %118 = %104.0;
  %119 = %109.1;
  %120 = divide(%114, %115) /* ty=Tensor[(14, 14, 10), float32] */;
  (%116, meta[relay.Constant][9] /* ty=Tensor[(528), float32] */, %117, %var_869, %118, %var_876, meta[relay.Constant][10] /* ty=Tensor[(154), int8] */, %119, %120)
}

def @func_5980(%var_5952: Tensor[(8, 12, 16), uint8], %var_5953: Tensor[(8, 12, 16), uint8], %var_5962: Tensor[(252), uint8], %var_5963: Tensor[(60), float64], %var_5964: Tensor[(154), float32], %var_5965: Tensor[(1, 1664), uint64], %var_5966: Tensor[(5), int32]) -> (Tensor[(8, 12, 16), uint8], Tensor[(180), uint16], Tensor[(252), uint8], Tensor[(60), float64], Tensor[(154), float32], Tensor[(1, 1664), uint64], Tensor[(5), int32], Tensor[(180), uint16], Tensor[(1664), uint64], int8) {
  %121 = cast(%var_5953, dtype="uint8") /* ty=Tensor[(8, 12, 16), uint8] */;
  %122 = shape_of(%var_5952, dtype="int32") /* ty=Tensor[(3), int32] */;
  %123 = cast(%var_5952, dtype="uint8") /* ty=Tensor[(8, 12, 16), uint8] */;
  %124 = dyn.reshape(%121, %122, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %125 = cast(%var_5962, dtype="uint8") /* ty=Tensor[(252), uint8] */;
  %126 = cast(%var_5963, dtype="float64") /* ty=Tensor[(60), float64] */;
  %127 = cast(%var_5964, dtype="float32") /* ty=Tensor[(154), float32] */;
  %128 = cast(%var_5965, dtype="uint64") /* ty=Tensor[(1, 1664), uint64] */;
  %129 = cast(%var_5966, dtype="int32") /* ty=Tensor[(5), int32] */;
  %130 = cast(meta[relay.Constant][13] /* ty=Tensor[(180), uint16] */, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %131 = reshape(%125, newshape=[3, 6, 14]) /* ty=Tensor[(3, 6, 14), uint8] */;
  %132 = reshape(%126, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %133 = reshape(%127, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %134 = reshape(%128, newshape=[1664]) /* ty=Tensor[(1664), uint64] */;
  %135 = reshape(%129, newshape=[5]) /* ty=Tensor[(5), int32] */;
  %136 = reshape(%130, newshape=[180]) /* ty=Tensor[(180), uint16] */;
  %137 = @func_2414(%131, %132, %133, %134, %135, %136) /* ty=(Tensor[(3, 6, 14), bool], int8, Tensor[(60), float64], Tensor[(154), float32], Tensor[(1664), uint64], Tensor[(180), uint16], Tensor[(5), int32], Tensor[(180), uint16], Tensor[(2816), uint64]) */;
  %138 = cast(meta[relay.Constant][14] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %139 = cast(%var_5964, dtype="float32") /* ty=Tensor[(154), float32] */;
  %140 = cast(%var_5965, dtype="uint64") /* ty=Tensor[(1, 1664), uint64] */;
  %141 = reshape(%138, newshape=[]) /* ty=int8 */;
  %142 = reshape(%139, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %143 = reshape(%140, newshape=[1664]) /* ty=Tensor[(1664), uint64] */;
  %144 = @func_4858(%141, %142, %143) /* ty=(int8, Tensor[(60), float64], Tensor[(154), float32], Tensor[(1664), uint64], Tensor[(648), uint16]) */;
  %145 = maximum(%123, %124) /* ty=Tensor[(8, 12, 16), uint8] */;
  %146 = %137.7;
  %147 = %144.3;
  (%145, %146, %var_5962, %var_5963, %var_5964, %var_5965, %var_5966, meta[relay.Constant][13] /* ty=Tensor[(180), uint16] */, %147, meta[relay.Constant][14] /* ty=int8 */)
}

def @func_7605() -> (Tensor[(16, 12, 12), float64], Tensor[(154), int8], Tensor[(49, 6), bool], Tensor[(132), uint64]) {
  %148 = @func_6698() /* ty=(Tensor[(16, 12, 12), float64], Tensor[(14, 7, 3), float32]) */;
  %149 = cast(meta[relay.Constant][15] /* ty=Tensor[(49, 6), bool] */, dtype="bool") /* ty=Tensor[(49, 6), bool] */;
  %150 = cast(meta[relay.Constant][16] /* ty=Tensor[(132), uint64] */, dtype="uint64") /* ty=Tensor[(132), uint64] */;
  %151 = reshape(%149, newshape=[14, 7, 3]) /* ty=Tensor[(14, 7, 3), bool] */;
  %152 = reshape(%150, newshape=[33, 4]) /* ty=Tensor[(33, 4), uint64] */;
  %153 = @func_5138(%151, %152) /* ty=(Tensor[(14, 7, 3), bool], Tensor[(1, 11, 12), uint64], Tensor[(33, 4), uint64], Tensor[(14, 7, 3), float64], Tensor[(154), int8], Tensor[(180), uint16], int8) */;
  %154 = %148.0;
  %155 = %153.4;
  (%154, %155, meta[relay.Constant][15] /* ty=Tensor[(49, 6), bool] */, meta[relay.Constant][16] /* ty=Tensor[(132), uint64] */)
}

def @func_10245(%var_10217: Tensor[(70), float32], %var_10218: Tensor[(324, 2), int32]) -> (Tensor[(16, 12, 12), float64], Tensor[(14, 7, 3), float32], Tensor[(70), float32], Tensor[(324, 2), int32], Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32]) {
  %156 = @func_6467() /* ty=(Tensor[(16, 12, 12), float64], Tensor[(70), float32]) */;
  %157 = cast(%var_10217, dtype="float32") /* ty=Tensor[(70), float32] */;
  %158 = cast(%var_10218, dtype="int32") /* ty=Tensor[(324, 2), int32] */;
  %159 = reshape(%157, newshape=[70]) /* ty=Tensor[(70), float32] */;
  %160 = reshape(%158, newshape=[648]) /* ty=Tensor[(648), int32] */;
  %161 = @func_7790(%159, %160) /* ty=(Tensor[(14, 7, 3), float32], Tensor[(70), float32], Tensor[(70), float32], Tensor[(648), bool], Tensor[(648), int32]) */;
  %162 = @func_7702() /* ty=(Tensor[(14, 7, 3), bool],) */;
  %163 = @func_8065() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %164 = %156.0;
  %165 = %161.0;
  %166 = %162.0;
  %167 = %163.0;
  (%164, %165, %var_10217, %var_10218, %166, %167)
}

def @func_9038(%var_9015: Tensor[(11, 3, 16), float32]) -> (Tensor[(11, 3, 16), float32],) {
  %168 = cast(%var_9015, dtype="float32") /* ty=Tensor[(11, 3, 16), float32] */;
  %169 = sqrt(%168) /* ty=Tensor[(11, 3, 16), float32] */;
  (%169,)
}

def @func_8495() -> (Tensor[(14, 7, 3), uint8],) {
  %170 = @func_8065() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %171 = %170.0;
  %172 = cast(meta[relay.Constant][17] /* ty=Tensor[(14, 7, 3), float32] */, dtype="uint8") /* ty=Tensor[(14, 7, 3), uint8] */;
  %173 = shape_of(%171, dtype="int32") /* ty=Tensor[(3), int32] */;
  %174 = cast(%171, dtype="uint8") /* ty=Tensor[(14, 7, 3), uint8] */;
  %175 = dyn.reshape(%172, %173, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %176 = multiply(%174, %175) /* ty=Tensor[(14, 7, 3), uint8] */;
  (%176,)
}

def @func_4411(%var_4386: Tensor[(15, 7, 3), float32], %var_4392: Tensor[(8, 24), uint8], %var_4393: int8, %var_4394: Tensor[(154), int8], %var_4395: Tensor[(132), uint64]) -> (Tensor[(15, 7, 3), float32], Tensor[(14, 1, 11), int8], Tensor[(96), uint8], Tensor[(8, 24), uint8], int8, Tensor[(154), int8], Tensor[(132), uint64], Tensor[(14, 1, 11), int8]) {
  %177 = cast(%var_4386, dtype="float32") /* ty=Tensor[(15, 7, 3), float32] */;
  %178 = cast(meta[relay.Constant][18] /* ty=Tensor[(96), uint8] */, dtype="uint8") /* ty=Tensor[(96), uint8] */;
  %179 = cast(%var_4392, dtype="uint8") /* ty=Tensor[(8, 24), uint8] */;
  %180 = cast(%var_4393, dtype="int8") /* ty=int8 */;
  %181 = cast(%var_4394, dtype="int8") /* ty=Tensor[(154), int8] */;
  %182 = cast(%var_4395, dtype="uint64") /* ty=Tensor[(132), uint64] */;
  %183 = reshape(%178, newshape=[6, 16, 1]) /* ty=Tensor[(6, 16, 1), uint8] */;
  %184 = reshape(%179, newshape=[6, 16, 2]) /* ty=Tensor[(6, 16, 2), uint8] */;
  %185 = reshape(%180, newshape=[]) /* ty=int8 */;
  %186 = reshape(%181, newshape=[154]) /* ty=Tensor[(154), int8] */;
  %187 = reshape(%182, newshape=[132]) /* ty=Tensor[(132), uint64] */;
  %188 = @func_4294(%183, %184, %185, %186, %187) /* ty=(Tensor[(6, 16, 2), float64], Tensor[(6, 16, 2), float64], Tensor[(14, 1, 11), int8], int8, Tensor[(154), int8], Tensor[(1, 11, 12), uint64], Tensor[(132), uint64]) */;
  %189 = cast(%var_4393, dtype="int8") /* ty=int8 */;
  %190 = %188.2;
  %191 = cast(%190, dtype="int8") /* ty=Tensor[(14, 1, 11), int8] */;
  %192 = reshape(%189, newshape=[]) /* ty=int8 */;
  %193 = reshape(%191, newshape=[14, 1, 11]) /* ty=Tensor[(14, 1, 11), int8] */;
  %194 = @func_134(%192, %193) /* ty=(Tensor[(14, 1, 11), int8],) */;
  %195 = sin(%177) /* ty=Tensor[(15, 7, 3), float32] */;
  %196 = %194.0;
  (%195, %190, meta[relay.Constant][18] /* ty=Tensor[(96), uint8] */, %var_4392, %var_4393, %var_4394, %var_4395, %196)
}

def @func_6384(%var_6360: Tensor[(648), int32], %var_6361: Tensor[(60), float64], %var_6363: Tensor[(1, 154), float32]) -> (Tensor[(14, 7, 3), float32], int8, Tensor[(648), int32], Tensor[(60), float64], int8, Tensor[(1, 154), float32], Tensor[(70), float32]) {
  %197 = @func_5698() /* ty=(Tensor[(14, 7, 3), float64], Tensor[(14, 7, 3), float32]) */;
  %198 = cast(%var_6360, dtype="int32") /* ty=Tensor[(648), int32] */;
  %199 = cast(%var_6360, dtype="int32") /* ty=Tensor[(648), int32] */;
  %200 = cast(%var_6361, dtype="float64") /* ty=Tensor[(60), float64] */;
  %201 = cast(meta[relay.Constant][19] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %202 = cast(%var_6363, dtype="float32") /* ty=Tensor[(1, 154), float32] */;
  %203 = reshape(%198, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), int32] */;
  %204 = reshape(%199, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), int32] */;
  %205 = reshape(%200, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %206 = reshape(%201, newshape=[]) /* ty=int8 */;
  %207 = reshape(%202, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %208 = @func_1737(%203, %204, %205, %206, %207) /* ty=(Tensor[(6, 9, 12), int32], Tensor[(60), float64], int8, Tensor[(154), bool]) */;
  %209 = @func_5676() /* ty=(Tensor[(14, 7, 3), float32], Tensor[(5, 1, 14), float32], Tensor[(70), float32]) */;
  %210 = %197.1;
  %211 = %208.2;
  %212 = %209.2;
  (%210, %211, %var_6360, %var_6361, meta[relay.Constant][19] /* ty=int8 */, %var_6363, %212)
}

def @func_4103(%var_4067: Tensor[(2816), float64], %var_4068: Tensor[(180), uint16], %var_4074: Tensor[(60), float64], %var_4075: Tensor[(154), float32], %var_4076: Tensor[(1664), uint64]) -> (Tensor[(14, 7, 3), float32], Tensor[(16, 16, 11), float64], Tensor[(5), int32], Tensor[(2816), float64], Tensor[(180), uint16], Tensor[(12, 11, 4), float32], Tensor[(60), float64], Tensor[(154), float32], Tensor[(16, 16, 11), float64], Tensor[(1664), int64]) {
  %213 = @func_4016() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %214 = cast(-5 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %215 = cast(meta[relay.Constant][20] /* ty=Tensor[(5), int32] */, dtype="int32") /* ty=Tensor[(5), int32] */;
  %216 = cast(%var_4067, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %217 = cast(%var_4068, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %218 = reshape(%214, newshape=[]) /* ty=int32 */;
  %219 = reshape(%215, newshape=[1, 1, 5]) /* ty=Tensor[(1, 1, 5), int32] */;
  %220 = reshape(%216, newshape=[2816]) /* ty=Tensor[(2816), float64] */;
  %221 = reshape(%217, newshape=[180]) /* ty=Tensor[(180), uint16] */;
  %222 = @func_2124(%218, %219, %220, %221) /* ty=(Tensor[(1, 1, 5), int32], Tensor[(1, 1, 5), uint32], Tensor[(60), float64], Tensor[(16, 16, 11), float64], Tensor[(180), uint16], Tensor[(10, 2, 3), float64], Tensor[(2816), float32]) */;
  %223 = cast(%var_4074, dtype="float64") /* ty=Tensor[(60), float64] */;
  %224 = cast(-5 /* ty=int32 */, dtype="int8") /* ty=int8 */;
  %225 = cast(%var_4075, dtype="float32") /* ty=Tensor[(154), float32] */;
  %226 = cast(%var_4076, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
  %227 = reshape(%223, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %228 = reshape(%224, newshape=[]) /* ty=int8 */;
  %229 = reshape(%225, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %230 = reshape(%226, newshape=[1664]) /* ty=Tensor[(1664), uint64] */;
  %231 = @func_1872(%227, %228, %229, %230) /* ty=(Tensor[(9, 10), float64], Tensor[(6, 9, 12), int32], Tensor[(648), int32], Tensor[(60), float64], int8, Tensor[(154), float32], Tensor[(12, 11, 4), float32], Tensor[(180, 1), uint16], Tensor[(12, 11, 4), float32], Tensor[(10, 11, 5), int8], Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(13, 16, 8), uint64], Tensor[(1664), uint64], Tensor[(154), int8]) */;
  %232 = cast(-5 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %233 = cast(meta[relay.Constant][20] /* ty=Tensor[(5), int32] */, dtype="int32") /* ty=Tensor[(5), int32] */;
  %234 = cast(%var_4067, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %235 = cast(%var_4068, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %236 = reshape(%232, newshape=[]) /* ty=int32 */;
  %237 = reshape(%233, newshape=[1, 1, 5]) /* ty=Tensor[(1, 1, 5), int32] */;
  %238 = reshape(%234, newshape=[2816]) /* ty=Tensor[(2816), float64] */;
  %239 = reshape(%235, newshape=[180]) /* ty=Tensor[(180), uint16] */;
  %240 = @func_2124(%236, %237, %238, %239) /* ty=(Tensor[(1, 1, 5), int32], Tensor[(1, 1, 5), uint32], Tensor[(60), float64], Tensor[(16, 16, 11), float64], Tensor[(180), uint16], Tensor[(10, 2, 3), float64], Tensor[(2816), float32]) */;
  %241 = cast(%var_4076, dtype="int64") /* ty=Tensor[(1664), int64] */;
  %242 = cast(-5 /* ty=int32 */, dtype="int64") /* ty=int64 */;
  %243 = %213.0;
  %244 = %222.3;
  %245 = %231.8;
  %246 = %240.3;
  %247 = minimum(%241, %242) /* ty=Tensor[(1664), int64] */;
  (%243, %244, meta[relay.Constant][20] /* ty=Tensor[(5), int32] */, %var_4067, %var_4068, %245, %var_4074, %var_4075, %246, %247)
}

def @func_4460(%var_4451: Tensor[(14, 7, 3), float32]) -> Tensor[(14, 7, 3), uint32] {
  %248 = @func_4375() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32]) */;
  %249 = %248.1;
  %250 = cast(%var_4451, dtype="uint32") /* ty=Tensor[(14, 7, 3), uint32] */;
  %251 = shape_of(%249, dtype="int32") /* ty=Tensor[(3), int32] */;
  %252 = cast(%249, dtype="uint32") /* ty=Tensor[(14, 7, 3), uint32] */;
  %253 = dyn.reshape(%250, %251, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  subtract(%252, %253) /* ty=Tensor[(14, 7, 3), uint32] */
}

def @func_5470(%var_5458: Tensor[(648), int32]) -> Tensor[(648), bool] {
  %254 = @func_4637() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32], Tensor[(6, 9, 12), int32], Tensor[(648), int32], int8) */;
  %255 = %254.3;
  %256 = cast(%var_5458, dtype="bool") /* ty=Tensor[(648), bool] */;
  %257 = shape_of(%255, dtype="int32") /* ty=Tensor[(1), int32] */;
  %258 = cast(%255, dtype="bool") /* ty=Tensor[(648), bool] */;
  %259 = dyn.reshape(%256, %257, newshape=[]) /* ty=Tensor[(?), bool] */;
  equal(%258, %259) /* ty=Tensor[(648), bool] */
}

def @func_10490(%var_10479: Tensor[(315), float32]) -> (Tensor[(6, 9, 12), int32], Tensor[(14, 1, 11), int8], Tensor[(315), float32], Tensor[(192), uint8], int8, Tensor[(154), int8], Tensor[(132), uint64]) {
  %260 = cast(%var_10479, dtype="float32") /* ty=Tensor[(315), float32] */;
  %261 = cast(meta[relay.Constant][21] /* ty=Tensor[(192), uint8] */, dtype="uint8") /* ty=Tensor[(192), uint8] */;
  %262 = cast(meta[relay.Constant][22] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %263 = cast(meta[relay.Constant][23] /* ty=Tensor[(154), int8] */, dtype="int8") /* ty=Tensor[(154), int8] */;
  %264 = cast(meta[relay.Constant][24] /* ty=Tensor[(132), uint64] */, dtype="uint64") /* ty=Tensor[(132), uint64] */;
  %265 = reshape(%260, newshape=[15, 7, 3]) /* ty=Tensor[(15, 7, 3), float32] */;
  %266 = reshape(%261, newshape=[8, 24]) /* ty=Tensor[(8, 24), uint8] */;
  %267 = reshape(%262, newshape=[]) /* ty=int8 */;
  %268 = reshape(%263, newshape=[154]) /* ty=Tensor[(154), int8] */;
  %269 = reshape(%264, newshape=[132]) /* ty=Tensor[(132), uint64] */;
  %270 = @func_4411(%265, %266, %267, %268, %269) /* ty=(Tensor[(15, 7, 3), float32], Tensor[(14, 1, 11), int8], Tensor[(96), uint8], Tensor[(8, 24), uint8], int8, Tensor[(154), int8], Tensor[(132), uint64], Tensor[(14, 1, 11), int8]) */;
  %271 = @func_5549() /* ty=Tensor[(6, 9, 12), int32] */;
  %272 = %270.1;
  (%271, %272, %var_10479, meta[relay.Constant][21] /* ty=Tensor[(192), uint8] */, meta[relay.Constant][22] /* ty=int8 */, meta[relay.Constant][23] /* ty=Tensor[(154), int8] */, meta[relay.Constant][24] /* ty=Tensor[(132), uint64] */)
}

def @func_4880() -> (Tensor[(14, 7, 3), float32],) {
  %273 = @func_4775() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %274 = %273.0;
  (%274,)
}

def @func_1758(%var_1747: Tensor[(13, 16, 8), uint64], %var_1748: Tensor[(13, 16, 8), uint64]) -> (Tensor[(13, 16, 8), uint64],) {
  %275 = cast(%var_1748, dtype="uint64") /* ty=Tensor[(13, 16, 8), uint64] */;
  %276 = shape_of(%var_1747, dtype="int32") /* ty=Tensor[(3), int32] */;
  %277 = cast(%var_1747, dtype="uint64") /* ty=Tensor[(13, 16, 8), uint64] */;
  %278 = dyn.reshape(%275, %276, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %279 = bitwise_xor(%277, %278) /* ty=Tensor[(13, 16, 8), uint64] */;
  (%279,)
}

def @func_4016() -> (Tensor[(14, 7, 3), float32],) {
  %280 = cast(meta[relay.Constant][25] /* ty=Tensor[(14, 7, 3), float32] */, dtype="float32") /* ty=Tensor[(14, 7, 3), float32] */;
  %281 = tan(%280) /* ty=Tensor[(14, 7, 3), float32] */;
  %282 = cast(%281, dtype="float32") /* ty=Tensor[(14, 7, 3), float32] */;
  %283 = sqrt(%282) /* ty=Tensor[(14, 7, 3), float32] */;
  (%283,)
}

def @func_403(%var_371: Tensor[(10, 2, 3), float64], %var_397: int8) -> (Tensor[(10, 2, 3), float64], Tensor[(14, 1, 11), int8], int8, Tensor[(154), int8]) {
  %284 = cast(%var_371, dtype="float64") /* ty=Tensor[(10, 2, 3), float64] */;
  %285 = cast(%var_397, dtype="int8") /* ty=int8 */;
  %286 = cast(meta[relay.Constant][26] /* ty=Tensor[(154), int8] */, dtype="int8") /* ty=Tensor[(154), int8] */;
  %287 = reshape(%285, newshape=[]) /* ty=int8 */;
  %288 = reshape(%286, newshape=[14, 1, 11]) /* ty=Tensor[(14, 1, 11), int8] */;
  %289 = @func_134(%287, %288) /* ty=(Tensor[(14, 1, 11), int8],) */;
  %290 = rsqrt(%284) /* ty=Tensor[(10, 2, 3), float64] */;
  %291 = %289.0;
  (%290, %291, %var_397, meta[relay.Constant][26] /* ty=Tensor[(154), int8] */)
}

def @func_8920() -> (Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) {
  %292 = @func_5273() /* ty=(Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), uint32]) */;
  %293 = @func_5161() /* ty=(Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) */;
  %294 = %292.0;
  %295 = %293.1;
  (%294, %295)
}

def @func_5335(%var_5308: Tensor[(4, 10, 9), float32]) -> (Tensor[(6, 9, 12), int32], Tensor[(4, 10, 9), float32]) {
  %296 = @func_4637() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32], Tensor[(6, 9, 12), int32], Tensor[(648), int32], int8) */;
  %297 = cast(%var_5308, dtype="float32") /* ty=Tensor[(4, 10, 9), float32] */;
  %298 = cos(%297) /* ty=Tensor[(4, 10, 9), float32] */;
  %299 = cast(%298, dtype="float32") /* ty=Tensor[(4, 10, 9), float32] */;
  %300 = %296.2;
  %301 = atanh(%299) /* ty=Tensor[(4, 10, 9), float32] */;
  (%300, %301)
}

def @main(%var_10901: Tensor[(10, 1, 16), bool], %var_10902: Tensor[(10, 12, 16), bool]) -> Tensor[(10, 12, 16), bool] {
  %302 = cast(%var_10901, dtype="bool") /* ty=Tensor[(10, 1, 16), bool] */;
  %303 = cast(%var_10902, dtype="bool") /* ty=Tensor[(10, 12, 16), bool] */;
  logical_and(%302, %303) /* ty=Tensor[(10, 12, 16), bool] */
}

def @func_10353(%var_10340: bool, %var_10341: Tensor[(16, 15, 10), bool]) -> Tensor[(16, 15, 10), bool] {
  %304 = cast(%var_10340, dtype="bool") /* ty=bool */;
  %305 = cast(%var_10341, dtype="bool") /* ty=Tensor[(16, 15, 10), bool] */;
  logical_and(%304, %305) /* ty=Tensor[(16, 15, 10), bool] */
}

def @func_8556() -> Tensor[(14, 7, 3), float64] {
  %306 = @func_7558() /* ty=(Tensor[(14, 7, 3), float64],) */;
  %306.0
}

def @func_1737(%var_1692: Tensor[(6, 9, 12), int32], %var_1693: Tensor[(6, 9, 12), int32], %var_1721: Tensor[(60), float64], %var_1722: int8, %var_1729: Tensor[(154), float32]) -> (Tensor[(6, 9, 12), int32], Tensor[(60), float64], int8, Tensor[(154), bool]) {
  %307 = cast(%var_1693, dtype="int32") /* ty=Tensor[(6, 9, 12), int32] */;
  %308 = shape_of(%var_1692, dtype="int32") /* ty=Tensor[(3), int32] */;
  %309 = cast(%var_1692, dtype="int32") /* ty=Tensor[(6, 9, 12), int32] */;
  %310 = dyn.reshape(%307, %308, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %311 = cast(%var_1721, dtype="float64") /* ty=Tensor[(60), float64] */;
  %312 = cast(%var_1722, dtype="int8") /* ty=int8 */;
  %313 = reshape(%311, newshape=[10, 2, 3]) /* ty=Tensor[(10, 2, 3), float64] */;
  %314 = reshape(%312, newshape=[]) /* ty=int8 */;
  %315 = @func_403(%313, %314) /* ty=(Tensor[(10, 2, 3), float64], Tensor[(14, 1, 11), int8], int8, Tensor[(154), int8]) */;
  %316 = %315.3;
  %317 = cast(%316, dtype="float32") /* ty=Tensor[(154), float32] */;
  %318 = acos(%317) /* ty=Tensor[(154), float32] */;
  %319 = cast(%var_1729, dtype="bool") /* ty=Tensor[(154), bool] */;
  %320 = shape_of(%318, dtype="int32") /* ty=Tensor[(1), int32] */;
  %321 = cast(%318, dtype="bool") /* ty=Tensor[(154), bool] */;
  %322 = dyn.reshape(%319, %320, newshape=[]) /* ty=Tensor[(?), bool] */;
  %323 = bitwise_and(%309, %310) /* ty=Tensor[(6, 9, 12), int32] */;
  %324 = greater_equal(%321, %322) /* ty=Tensor[(154), bool] */;
  (%323, %var_1721, %var_1722, %324)
}

def @func_5913(%var_5907: int8, %var_5908: Tensor[(154), float32]) -> (Tensor[(14, 7, 3), float32], Tensor[(16, 12, 12), float64], Tensor[(5, 1, 14), float32], Tensor[(70), float32], Tensor[(10, 11, 5), int8], Tensor[(1, 60), float64], int8, Tensor[(154), float32], Tensor[(1664), uint64], Tensor[(6, 9, 12), int32]) {
  %325 = @func_5273() /* ty=(Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), uint32]) */;
  %326 = cast(meta[relay.Constant][27] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
  %327 = reshape(%326, newshape=[5, 1, 14]) /* ty=Tensor[(5, 1, 14), float32] */;
  %328 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 60), float64] */, dtype="float64") /* ty=Tensor[(1, 60), float64] */;
  %329 = cast(%var_5907, dtype="int8") /* ty=int8 */;
  %330 = cast(%var_5908, dtype="float32") /* ty=Tensor[(154), float32] */;
  %331 = cast(meta[relay.Constant][29] /* ty=Tensor[(1664), uint64] */, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
  %332 = reshape(%328, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %333 = reshape(%329, newshape=[]) /* ty=int8 */;
  %334 = reshape(%330, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %335 = reshape(%331, newshape=[1664]) /* ty=Tensor[(1664), uint64] */;
  %336 = @func_1872(%332, %333, %334, %335) /* ty=(Tensor[(9, 10), float64], Tensor[(6, 9, 12), int32], Tensor[(648), int32], Tensor[(60), float64], int8, Tensor[(154), float32], Tensor[(12, 11, 4), float32], Tensor[(180, 1), uint16], Tensor[(12, 11, 4), float32], Tensor[(10, 11, 5), int8], Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(13, 16, 8), uint64], Tensor[(1664), uint64], Tensor[(154), int8]) */;
  %337 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 60), float64] */, dtype="float64") /* ty=Tensor[(1, 60), float64] */;
  %338 = cast(%var_5907, dtype="int8") /* ty=int8 */;
  %339 = cast(%var_5908, dtype="float32") /* ty=Tensor[(154), float32] */;
  %340 = cast(meta[relay.Constant][29] /* ty=Tensor[(1664), uint64] */, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
  %341 = reshape(%337, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %342 = reshape(%338, newshape=[]) /* ty=int8 */;
  %343 = reshape(%339, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %344 = reshape(%340, newshape=[1664]) /* ty=Tensor[(1664), uint64] */;
  %345 = @func_1872(%341, %342, %343, %344) /* ty=(Tensor[(9, 10), float64], Tensor[(6, 9, 12), int32], Tensor[(648), int32], Tensor[(60), float64], int8, Tensor[(154), float32], Tensor[(12, 11, 4), float32], Tensor[(180, 1), uint16], Tensor[(12, 11, 4), float32], Tensor[(10, 11, 5), int8], Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(13, 16, 8), uint64], Tensor[(1664), uint64], Tensor[(154), int8]) */;
  %346 = %325.0;
  %347 = @func_5650() /* ty=Tensor[(16, 12, 12), float64] */;
  %348 = @func_5396(%327) /* ty=Tensor[(5, 1, 14), float32] */;
  %349 = %336.9;
  %350 = %345.1;
  (%346, %347, %348, meta[relay.Constant][27] /* ty=Tensor[(70), float32] */, %349, meta[relay.Constant][28] /* ty=Tensor[(1, 60), float64] */, %var_5907, %var_5908, meta[relay.Constant][29] /* ty=Tensor[(1664), uint64] */, %350)
}

def @func_5748() -> (Tensor[(14, 7, 3), bool], Tensor[(16, 12, 12), float64]) {
  %351 = @func_4016() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %352 = %351.0;
  %353 = cast(meta[relay.Constant][30] /* ty=Tensor[(14, 7, 3), float32] */, dtype="bool") /* ty=Tensor[(14, 7, 3), bool] */;
  %354 = shape_of(%352, dtype="int32") /* ty=Tensor[(3), int32] */;
  %355 = cast(%352, dtype="bool") /* ty=Tensor[(14, 7, 3), bool] */;
  %356 = dyn.reshape(%353, %354, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %357 = not_equal(%355, %356) /* ty=Tensor[(14, 7, 3), bool] */;
  %358 = @func_4613() /* ty=Tensor[(16, 12, 12), float64] */;
  (%357, %358)
}

def @func_9537() -> (Tensor[(14, 7, 3), float32],) {
  %359 = @func_4212() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %360 = %359.0;
  (%360,)
}

def @func_9952(%var_9931: Tensor[(70), float32], %var_9939: Tensor[(528), float32]) -> (Tensor[(14, 7, 3), float32], Tensor[(16, 12, 12), float64], Tensor[(5, 1, 14), float32], Tensor[(70), float32], Tensor[(3, 4, 11), float32], Tensor[(132), float32], Tensor[(528), float32]) {
  %361 = cast(%var_9931, dtype="float32") /* ty=Tensor[(70), float32] */;
  %362 = reshape(%361, newshape=[70]) /* ty=Tensor[(70), float32] */;
  %363 = @func_6764(%362) /* ty=(Tensor[(14, 7, 3), bool], Tensor[(5, 1, 14), float32], Tensor[(70), float32]) */;
  %364 = cast(meta[relay.Constant][31] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
  %365 = cast(%var_9939, dtype="float32") /* ty=Tensor[(528), float32] */;
  %366 = reshape(%364, newshape=[3, 4, 11]) /* ty=Tensor[(3, 4, 11), float32] */;
  %367 = reshape(%365, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %368 = @func_9222(%366, %367) /* ty=(Tensor[(3, 4, 11), float32], Tensor[(3, 4, 11), float32], Tensor[(12, 11, 4), float32], Tensor[(528), float32]) */;
  %369 = @func_5655() /* ty=Tensor[(14, 7, 3), float32] */;
  %370 = @func_5650() /* ty=Tensor[(16, 12, 12), float64] */;
  %371 = %363.1;
  %372 = %368.1;
  (%369, %370, %371, %var_9931, %372, meta[relay.Constant][31] /* ty=Tensor[(132), float32] */, %var_9939)
}

def @func_6604() -> Tensor[(14, 7, 3), float32] {
  %373 = @func_4375() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32]) */;
  %373.1
}

def @func_10055() -> (Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) {
  %374 = @func_4775() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %375 = %374.0;
  %376 = @func_6604() /* ty=Tensor[(14, 7, 3), float32] */;
  (%375, %376)
}

def @func_6910() -> Tensor[(14, 7, 3), float64] {
  %377 = @func_5938() /* ty=(Tensor[(14, 7, 3), float64],) */;
  %377.0
}

def @func_9879() -> (Tensor[(14, 7, 3), float32],) {
  %378 = @func_5655() /* ty=Tensor[(14, 7, 3), float32] */;
  (%378,)
}

def @func_9149() -> (Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) {
  %379 = @func_7040() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %380 = @func_8065() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %381 = %379.0;
  %382 = %380.0;
  (%381, %382)
}

def @func_10335() -> (Tensor[(14, 7, 3), float32],) {
  %383 = @func_5050() /* ty=(Tensor[(14, 7, 3), float64], Tensor[(14, 7, 3), float32]) */;
  %384 = %383.1;
  (%384,)
}

def @func_7229() -> Tensor[(14, 7, 3), float32] {
  %385 = @func_4375() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32]) */;
  %385.1
}

def @func_5396(%var_5383: Tensor[(5, 1, 14), float32]) -> Tensor[(5, 1, 14), float32] {
  %386 = cast(%var_5383, dtype="float32") /* ty=Tensor[(5, 1, 14), float32] */;
  log10(%386) /* ty=Tensor[(5, 1, 14), float32] */
}

def @func_1574(%var_1560: int8) -> (Tensor[(10, 11, 5), int8],) {
  %387 = cast(%var_1560, dtype="int8") /* ty=int8 */;
  %388 = cast(meta[relay.Constant][32] /* ty=Tensor[(10, 11, 5), int8] */, dtype="int8") /* ty=Tensor[(10, 11, 5), int8] */;
  %389 = subtract(%387, %388) /* ty=Tensor[(10, 11, 5), int8] */;
  (%389,)
}

def @func_7110(%var_7066: Tensor[(2, 11, 5), float64]) -> (Tensor[(264, 2), float32], Tensor[(2, 264), float32], Tensor[(2, 11, 5), uint32], Tensor[(14, 7, 3), float64], Tensor[(2, 11, 5), float32], Tensor[(14, 7, 3), float32]) {
  %390 = cast(meta[relay.Constant][33] /* ty=Tensor[(2, 264), float32] */, dtype="float32") /* ty=Tensor[(2, 264), float32] */;
  %391 = reshape(%390, newshape=[264, 2]) /* ty=Tensor[(264, 2), float32] */;
  %392 = @func_4156(%391) /* ty=(Tensor[(14, 7, 3), float32], Tensor[(2816), float64], Tensor[(144, 4), int8], Tensor[(154), int8], Tensor[(2, 1408), float64], Tensor[(12, 11, 4), float32], Tensor[(264, 2), float32]) */;
  %393 = cast(%var_7066, dtype="float64") /* ty=Tensor[(2, 11, 5), float64] */;
  %394 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(2, 11, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %395 = cast(meta[relay.Constant][34] /* ty=Tensor[(2, 11, 5), float64] */, dtype="float64") /* ty=Tensor[(2, 11, 5), float64] */;
  %396 = dyn.reshape(%393, %394, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %397 = floor_divide(%395, %396) /* ty=Tensor[(2, 11, 5), float64] */;
  %398 = cast(%397, dtype="uint32") /* ty=Tensor[(2, 11, 5), uint32] */;
  %399 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(2, 11, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %400 = cast(meta[relay.Constant][34] /* ty=Tensor[(2, 11, 5), float64] */, dtype="uint32") /* ty=Tensor[(2, 11, 5), uint32] */;
  %401 = dyn.reshape(%398, %399, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %402 = @func_5938() /* ty=(Tensor[(14, 7, 3), float64],) */;
  %403 = cast(%var_7066, dtype="float32") /* ty=Tensor[(2, 11, 5), float32] */;
  %404 = @func_7040() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %405 = %392.6;
  %406 = subtract(%400, %401) /* ty=Tensor[(2, 11, 5), uint32] */;
  %407 = %402.0;
  %408 = log10(%403) /* ty=Tensor[(2, 11, 5), float32] */;
  %409 = %404.0;
  (%405, meta[relay.Constant][33] /* ty=Tensor[(2, 264), float32] */, %406, %407, %408, %409)
}

def @func_7879() -> (Tensor[(5, 1, 14), float32],) {
  %410 = @func_5676() /* ty=(Tensor[(14, 7, 3), float32], Tensor[(5, 1, 14), float32], Tensor[(70), float32]) */;
  %411 = %410.1;
  (%411,)
}

def @func_9324(%var_9311: Tensor[(2, 6, 9), float64]) -> (Tensor[(2, 6, 9), float64], Tensor[(10, 11, 5), int8], int8) {
  %412 = cast(%var_9311, dtype="float64") /* ty=Tensor[(2, 6, 9), float64] */;
  %413 = cast(meta[relay.Constant][35] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %414 = reshape(%413, newshape=[]) /* ty=int8 */;
  %415 = @func_1574(%414) /* ty=(Tensor[(10, 11, 5), int8],) */;
  %416 = atanh(%412) /* ty=Tensor[(2, 6, 9), float64] */;
  %417 = %415.0;
  (%416, %417, meta[relay.Constant][35] /* ty=int8 */)
}

def @func_2571(%var_2509: int8, %var_2510: Tensor[(154), int8], %var_2521: Tensor[(2816), float64]) -> (Tensor[(154), int8], Tensor[(60), float64], Tensor[(5), int32], Tensor[(2816), float64], Tensor[(3, 60), uint16], Tensor[(11, 8, 10), int64], Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(14, 1, 11), uint8]) {
  %418 = cast(%var_2509, dtype="int32") /* ty=int32 */;
  %419 = cast(meta[relay.Constant][36] /* ty=Tensor[(5), int32] */, dtype="int32") /* ty=Tensor[(5), int32] */;
  %420 = cast(%var_2521, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %421 = cast(meta[relay.Constant][37] /* ty=Tensor[(3, 60), uint16] */, dtype="uint16") /* ty=Tensor[(3, 60), uint16] */;
  %422 = reshape(%418, newshape=[]) /* ty=int32 */;
  %423 = reshape(%419, newshape=[1, 1, 5]) /* ty=Tensor[(1, 1, 5), int32] */;
  %424 = reshape(%420, newshape=[2816]) /* ty=Tensor[(2816), float64] */;
  %425 = reshape(%421, newshape=[180]) /* ty=Tensor[(180), uint16] */;
  %426 = @func_2124(%422, %423, %424, %425) /* ty=(Tensor[(1, 1, 5), int32], Tensor[(1, 1, 5), uint32], Tensor[(60), float64], Tensor[(16, 16, 11), float64], Tensor[(180), uint16], Tensor[(10, 2, 3), float64], Tensor[(2816), float32]) */;
  %427 = cast(meta[relay.Constant][38] /* ty=Tensor[(11, 8, 10), float32] */, dtype="float32") /* ty=Tensor[(11, 8, 10), float32] */;
  %428 = cos(%427) /* ty=Tensor[(11, 8, 10), float32] */;
  %429 = cast(meta[relay.Constant][38] /* ty=Tensor[(11, 8, 10), float32] */, dtype="int64") /* ty=Tensor[(11, 8, 10), int64] */;
  %430 = shape_of(%428, dtype="int32") /* ty=Tensor[(3), int32] */;
  %431 = cast(%428, dtype="int64") /* ty=Tensor[(11, 8, 10), int64] */;
  %432 = dyn.reshape(%429, %430, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %433 = cast(meta[relay.Constant][39] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %434 = reshape(%433, newshape=[12, 11, 4]) /* ty=Tensor[(12, 11, 4), float32] */;
  %435 = cast(%var_2509, dtype="int8") /* ty=int8 */;
  %436 = cast(%var_2510, dtype="int8") /* ty=Tensor[(154), int8] */;
  %437 = reshape(%435, newshape=[]) /* ty=int8 */;
  %438 = reshape(%436, newshape=[14, 1, 11]) /* ty=Tensor[(14, 1, 11), int8] */;
  %439 = @func_134(%437, %438) /* ty=(Tensor[(14, 1, 11), int8],) */;
  %440 = %439.0;
  %441 = cast(%440, dtype="uint8") /* ty=Tensor[(14, 1, 11), uint8] */;
  %442 = cast(%var_2509, dtype="uint8") /* ty=uint8 */;
  %443 = %426.2;
  %444 = multiply(%431, %432) /* ty=Tensor[(11, 8, 10), int64] */;
  %445 = @func_339(%434) /* ty=Tensor[(12, 11, 4), float32] */;
  %446 = bitwise_and(%441, %442) /* ty=Tensor[(14, 1, 11), uint8] */;
  (%var_2510, %443, meta[relay.Constant][36] /* ty=Tensor[(5), int32] */, %var_2521, meta[relay.Constant][37] /* ty=Tensor[(3, 60), uint16] */, %444, %445, meta[relay.Constant][39] /* ty=Tensor[(528), float32] */, %446)
}

def @func_8107() -> Tensor[(14, 7, 3), float32] {
  %447 = @func_7873() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %447.0
}

def @func_7558() -> (Tensor[(14, 7, 3), float64],) {
  %448 = @func_5938() /* ty=(Tensor[(14, 7, 3), float64],) */;
  %449 = %448.0;
  (%449,)
}

def @func_8754() -> (Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), bool], Tensor[(33, 4), uint64], Tensor[(16, 12, 12), float64]) {
  %450 = @func_6698() /* ty=(Tensor[(16, 12, 12), float64], Tensor[(14, 7, 3), float32]) */;
  %451 = %450.1;
  %452 = cast(%451, dtype="float32") /* ty=Tensor[(14, 7, 3), float32] */;
  %453 = reshape(%452, newshape=[14, 7, 3]) /* ty=Tensor[(14, 7, 3), float32] */;
  %454 = @func_8634(%453) /* ty=(Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) */;
  %455 = cast(%451, dtype="bool") /* ty=Tensor[(14, 7, 3), bool] */;
  %456 = cast(meta[relay.Constant][40] /* ty=Tensor[(33, 4), uint64] */, dtype="uint64") /* ty=Tensor[(33, 4), uint64] */;
  %457 = reshape(%455, newshape=[14, 7, 3]) /* ty=Tensor[(14, 7, 3), bool] */;
  %458 = reshape(%456, newshape=[33, 4]) /* ty=Tensor[(33, 4), uint64] */;
  %459 = @func_5138(%457, %458) /* ty=(Tensor[(14, 7, 3), bool], Tensor[(1, 11, 12), uint64], Tensor[(33, 4), uint64], Tensor[(14, 7, 3), float64], Tensor[(154), int8], Tensor[(180), uint16], int8) */;
  %460 = @func_5748() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(16, 12, 12), float64]) */;
  %461 = %454.1;
  %462 = %459.0;
  %463 = %460.1;
  (%451, %461, %462, meta[relay.Constant][40] /* ty=Tensor[(33, 4), uint64] */, %463)
}

def @func_6467() -> (Tensor[(16, 12, 12), float64], Tensor[(70), float32]) {
  %464 = @func_5676() /* ty=(Tensor[(14, 7, 3), float32], Tensor[(5, 1, 14), float32], Tensor[(70), float32]) */;
  %465 = @func_4613() /* ty=Tensor[(16, 12, 12), float64] */;
  %466 = %464.2;
  (%465, %466)
}

def @func_5273() -> (Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), uint32]) {
  %467 = @func_4880() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %468 = %467.0;
  %469 = cast(%468, dtype="float32") /* ty=Tensor[(14, 7, 3), float32] */;
  %470 = reshape(%469, newshape=[14, 7, 3]) /* ty=Tensor[(14, 7, 3), float32] */;
  %471 = @func_4460(%470) /* ty=Tensor[(14, 7, 3), uint32] */;
  (%468, %471)
}

def @func_2722(%var_2650: Tensor[(11, 7, 3), float32], %var_2651: Tensor[(11, 7, 3), float32], %var_2674: Tensor[(528), float32], %var_2689: int8, %var_2693: Tensor[(2816), float64], %var_2717: Tensor[(15, 4), float64], %var_2718: Tensor[(416, 4), uint64]) -> (Tensor[(11, 7, 3), float32], Tensor[(8, 12, 16), float64], Tensor[(1536), float64], Tensor[(12, 11, 4), float32], Tensor[(528), float32], int8, Tensor[(6, 30), uint16], int8, Tensor[(154), int8], Tensor[(11, 14), int8], Tensor[(2816), float64], Tensor[(8, 12, 16), float64], Tensor[(60), float64], Tensor[(15, 4), float64], Tensor[(416, 4), uint64]) {
  %472 = cast(%var_2651, dtype="float32") /* ty=Tensor[(11, 7, 3), float32] */;
  %473 = shape_of(%var_2650, dtype="int32") /* ty=Tensor[(3), int32] */;
  %474 = cast(%var_2650, dtype="float32") /* ty=Tensor[(11, 7, 3), float32] */;
  %475 = dyn.reshape(%472, %473, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %476 = cast(meta[relay.Constant][41] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %477 = reshape(%476, newshape=[8, 12, 16]) /* ty=Tensor[(8, 12, 16), float64] */;
  %478 = cast(%var_2674, dtype="float32") /* ty=Tensor[(528), float32] */;
  %479 = reshape(%478, newshape=[12, 11, 4]) /* ty=Tensor[(12, 11, 4), float32] */;
  %480 = cast(meta[relay.Constant][42] /* ty=Tensor[(6, 30), uint16] */, dtype="uint16") /* ty=Tensor[(6, 30), uint16] */;
  %481 = cast(%var_2689, dtype="int8") /* ty=int8 */;
  %482 = reshape(%480, newshape=[180]) /* ty=Tensor[(180), uint16] */;
  %483 = reshape(%481, newshape=[]) /* ty=int8 */;
  %484 = @func_897(%482, %483) /* ty=(Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(528), float32], Tensor[(180), uint16], Tensor[(14, 1, 11), int8], int8, Tensor[(154), int8], Tensor[(12, 11, 4), float32], Tensor[(14, 14, 10), float32]) */;
  %485 = cast(%var_2689, dtype="int8") /* ty=int8 */;
  %486 = cast(meta[relay.Constant][43] /* ty=Tensor[(11, 14), int8] */, dtype="int8") /* ty=Tensor[(11, 14), int8] */;
  %487 = cast(%var_2693, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %488 = reshape(%485, newshape=[]) /* ty=int8 */;
  %489 = reshape(%486, newshape=[154]) /* ty=Tensor[(154), int8] */;
  %490 = reshape(%487, newshape=[2816]) /* ty=Tensor[(2816), float64] */;
  %491 = @func_2571(%488, %489, %490) /* ty=(Tensor[(154), int8], Tensor[(60), float64], Tensor[(5), int32], Tensor[(2816), float64], Tensor[(3, 60), uint16], Tensor[(11, 8, 10), int64], Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(14, 1, 11), uint8]) */;
  %492 = cast(meta[relay.Constant][41] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %493 = reshape(%492, newshape=[8, 12, 16]) /* ty=Tensor[(8, 12, 16), float64] */;
  %494 = cast(%var_2717, dtype="float64") /* ty=Tensor[(15, 4), float64] */;
  %495 = %484.5;
  %496 = cast(%495, dtype="int8") /* ty=int8 */;
  %497 = cast(meta[relay.Constant][43] /* ty=Tensor[(11, 14), int8] */, dtype="float32") /* ty=Tensor[(11, 14), float32] */;
  %498 = cast(%var_2718, dtype="uint64") /* ty=Tensor[(416, 4), uint64] */;
  %499 = reshape(%494, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %500 = reshape(%496, newshape=[]) /* ty=int8 */;
  %501 = reshape(%497, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %502 = reshape(%498, newshape=[1664]) /* ty=Tensor[(1664), uint64] */;
  %503 = @func_1872(%499, %500, %501, %502) /* ty=(Tensor[(9, 10), float64], Tensor[(6, 9, 12), int32], Tensor[(648), int32], Tensor[(60), float64], int8, Tensor[(154), float32], Tensor[(12, 11, 4), float32], Tensor[(180, 1), uint16], Tensor[(12, 11, 4), float32], Tensor[(10, 11, 5), int8], Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(13, 16, 8), uint64], Tensor[(1664), uint64], Tensor[(154), int8]) */;
  %504 = floor_mod(%474, %475) /* ty=Tensor[(11, 7, 3), float32] */;
  %505 = @func_2631(%477) /* ty=Tensor[(8, 12, 16), float64] */;
  %506 = @func_339(%479) /* ty=Tensor[(12, 11, 4), float32] */;
  %507 = %491.0;
  %508 = @func_2631(%493) /* ty=Tensor[(8, 12, 16), float64] */;
  %509 = %503.3;
  (%504, %505, meta[relay.Constant][41] /* ty=Tensor[(1536), float64] */, %506, %var_2674, %495, meta[relay.Constant][42] /* ty=Tensor[(6, 30), uint16] */, %var_2689, %507, meta[relay.Constant][43] /* ty=Tensor[(11, 14), int8] */, %var_2693, %508, %509, %var_2717, %var_2718)
}

def @func_9685() -> (Tensor[(16, 12, 12), float64],) {
  %510 = @func_5650() /* ty=Tensor[(16, 12, 12), float64] */;
  (%510,)
}

def @func_10875() -> Tensor[(14, 7, 3), float32] {
  @func_5261() /* ty=Tensor[(14, 7, 3), float32] */
}

def @func_5698() -> (Tensor[(14, 7, 3), float64], Tensor[(14, 7, 3), float32]) {
  %511 = @func_5050() /* ty=(Tensor[(14, 7, 3), float64], Tensor[(14, 7, 3), float32]) */;
  %512 = %511.0;
  %513 = @func_5655() /* ty=Tensor[(14, 7, 3), float32] */;
  (%512, %513)
}

def @func_2124(%var_2058: int32, %var_2059: Tensor[(1, 1, 5), int32], %var_2111: Tensor[(2816), float64], %var_2112: Tensor[(180), uint16]) -> (Tensor[(1, 1, 5), int32], Tensor[(1, 1, 5), uint32], Tensor[(60), float64], Tensor[(16, 16, 11), float64], Tensor[(180), uint16], Tensor[(10, 2, 3), float64], Tensor[(2816), float32]) {
  %514 = cast(%var_2058, dtype="int32") /* ty=int32 */;
  %515 = cast(%var_2059, dtype="int32") /* ty=Tensor[(1, 1, 5), int32] */;
  %516 = cast(%var_2058, dtype="uint32") /* ty=uint32 */;
  %517 = cast(%var_2059, dtype="uint32") /* ty=Tensor[(1, 1, 5), uint32] */;
  %518 = cast(%var_2111, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %519 = cast(%var_2112, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %520 = cast(%var_2058, dtype="int8") /* ty=int8 */;
  %521 = reshape(%518, newshape=[16, 16, 11]) /* ty=Tensor[(16, 16, 11), float64] */;
  %522 = reshape(%519, newshape=[180]) /* ty=Tensor[(180), uint16] */;
  %523 = reshape(%520, newshape=[]) /* ty=int8 */;
  %524 = @func_1938(%521, %522, %523) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(12, 11, 4), float32], Tensor[(180), uint16], int8) */;
  %525 = cast(meta[relay.Constant][44] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %526 = cast(%var_2058, dtype="int8") /* ty=int8 */;
  %527 = reshape(%525, newshape=[10, 2, 3]) /* ty=Tensor[(10, 2, 3), float64] */;
  %528 = reshape(%526, newshape=[]) /* ty=int8 */;
  %529 = @func_403(%527, %528) /* ty=(Tensor[(10, 2, 3), float64], Tensor[(14, 1, 11), int8], int8, Tensor[(154), int8]) */;
  %530 = %529.0;
  %531 = cast(%530, dtype="float64") /* ty=Tensor[(10, 2, 3), float64] */;
  %532 = cast(%var_2111, dtype="float32") /* ty=Tensor[(2816), float32] */;
  %533 = bitwise_or(%514, %515) /* ty=Tensor[(1, 1, 5), int32] */;
  %534 = minimum(%516, %517) /* ty=Tensor[(1, 1, 5), uint32] */;
  %535 = %524.0;
  %536 = sinh(%531) /* ty=Tensor[(10, 2, 3), float64] */;
  %537 = sinh(%532) /* ty=Tensor[(2816), float32] */;
  (%533, %534, meta[relay.Constant][44] /* ty=Tensor[(60), float64] */, %535, %var_2112, %536, %537)
}

def @func_5650() -> Tensor[(16, 12, 12), float64] {
  @func_4613() /* ty=Tensor[(16, 12, 12), float64] */
}

def @func_8775() -> (Tensor[(14, 7, 3), float32],) {
  %538 = @func_7291() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %539 = %538.0;
  (%539,)
}

def @func_7873() -> (Tensor[(14, 7, 3), float32],) {
  %540 = @func_4775() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %541 = %540.0;
  (%541,)
}

def @func_6191() -> (Tensor[(12, 13, 16), float32],) {
  %542 = cast(meta[relay.Constant][45] /* ty=Tensor[(12, 13, 16), float32] */, dtype="float32") /* ty=Tensor[(12, 13, 16), float32] */;
  %543 = asin(%542) /* ty=Tensor[(12, 13, 16), float32] */;
  (%543,)
}

def @func_4375() -> (Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32]) {
  %544 = @func_4016() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %545 = %544.0;
  %546 = @func_4016() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %547 = %546.0;
  %548 = cast(%547, dtype="bool") /* ty=Tensor[(14, 7, 3), bool] */;
  %549 = shape_of(%545, dtype="int32") /* ty=Tensor[(3), int32] */;
  %550 = cast(%545, dtype="bool") /* ty=Tensor[(14, 7, 3), bool] */;
  %551 = dyn.reshape(%548, %549, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %552 = @func_4212() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %553 = greater_equal(%550, %551) /* ty=Tensor[(14, 7, 3), bool] */;
  %554 = %552.0;
  (%553, %554)
}

def @func_9203(%var_9185: Tensor[(60), float64], %var_9186: int8) -> (Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32], Tensor[(12, 11, 4), float32], Tensor[(60), float64], int8, Tensor[(154), float32], Tensor[(1664), uint64]) {
  %555 = cast(%var_9185, dtype="float64") /* ty=Tensor[(60), float64] */;
  %556 = cast(%var_9186, dtype="int8") /* ty=int8 */;
  %557 = cast(meta[relay.Constant][46] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
  %558 = cast(meta[relay.Constant][47] /* ty=Tensor[(1664), uint64] */, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
  %559 = reshape(%555, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %560 = reshape(%556, newshape=[]) /* ty=int8 */;
  %561 = reshape(%557, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %562 = reshape(%558, newshape=[1664]) /* ty=Tensor[(1664), uint64] */;
  %563 = @func_1872(%559, %560, %561, %562) /* ty=(Tensor[(9, 10), float64], Tensor[(6, 9, 12), int32], Tensor[(648), int32], Tensor[(60), float64], int8, Tensor[(154), float32], Tensor[(12, 11, 4), float32], Tensor[(180, 1), uint16], Tensor[(12, 11, 4), float32], Tensor[(10, 11, 5), int8], Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(13, 16, 8), uint64], Tensor[(1664), uint64], Tensor[(154), int8]) */;
  %564 = @func_8779() /* ty=Tensor[(14, 7, 3), float32] */;
  %565 = @func_6604() /* ty=Tensor[(14, 7, 3), float32] */;
  %566 = %563.8;
  (%564, %565, %566, %var_9185, %var_9186, meta[relay.Constant][46] /* ty=Tensor[(154), float32] */, meta[relay.Constant][47] /* ty=Tensor[(1664), uint64] */)
}

def @func_6553() -> (Tensor[(70), float32],) {
  %567 = @func_6467() /* ty=(Tensor[(16, 12, 12), float64], Tensor[(70), float32]) */;
  %568 = %567.1;
  (%568,)
}

def @func_10449(%var_10440: int8) -> (Tensor[(14, 7, 3), float32], Tensor[(10, 11, 5), float64], Tensor[(10, 11, 5), float32]) {
  %569 = @func_9859() /* ty=(Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) */;
  %570 = cast(%var_10440, dtype="int8") /* ty=int8 */;
  %571 = reshape(%570, newshape=[]) /* ty=int8 */;
  %572 = @func_1574(%571) /* ty=(Tensor[(10, 11, 5), int8],) */;
  %573 = %572.0;
  %574 = cast(%573, dtype="float64") /* ty=Tensor[(10, 11, 5), float64] */;
  %575 = cast(%var_10440, dtype="float64") /* ty=float64 */;
  %576 = cast(%573, dtype="float32") /* ty=Tensor[(10, 11, 5), float32] */;
  %577 = %569.1;
  %578 = divide(%574, %575) /* ty=Tensor[(10, 11, 5), float64] */;
  %579 = atan(%576) /* ty=Tensor[(10, 11, 5), float32] */;
  (%577, %578, %579)
}

def @func_7405() -> (Tensor[(14, 7, 3), bool],) {
  %580 = @func_4375() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32]) */;
  %581 = %580.0;
  (%581,)
}

def @func_5549() -> Tensor[(6, 9, 12), int32] {
  %582 = @func_4637() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32], Tensor[(6, 9, 12), int32], Tensor[(648), int32], int8) */;
  %582.2
}

def @func_5261() -> Tensor[(14, 7, 3), float32] {
  %583 = @func_4212() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %583.0
}

def @func_8672(%var_8654: Tensor[(2, 9, 6), bool]) -> (Tensor[(2, 9, 6), bool],) {
  %584 = cast(meta[relay.Constant][48] /* ty=Tensor[(2, 9, 6), bool] */, dtype="bool") /* ty=Tensor[(2, 9, 6), bool] */;
  %585 = shape_of(%var_8654, dtype="int32") /* ty=Tensor[(3), int32] */;
  %586 = cast(%var_8654, dtype="bool") /* ty=Tensor[(2, 9, 6), bool] */;
  %587 = dyn.reshape(%584, %585, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %588 = logical_and(%586, %587) /* ty=Tensor[(2, 9, 6), bool] */;
  (%588,)
}

def @func_5938() -> (Tensor[(14, 7, 3), float64],) {
  %589 = @func_5050() /* ty=(Tensor[(14, 7, 3), float64], Tensor[(14, 7, 3), float32]) */;
  %590 = %589.0;
  (%590,)
}

def @func_6929(%var_6921: Tensor[(180), uint16]) -> (Tensor[(14, 7, 3), float32], Tensor[(5, 14, 6), int8], Tensor[(420, 1), int8], Tensor[(2816), float64], Tensor[(180), uint16]) {
  %591 = @func_4880() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %592 = cast(meta[relay.Constant][49] /* ty=Tensor[(420, 1), int8] */, dtype="int8") /* ty=Tensor[(420, 1), int8] */;
  %593 = cast(meta[relay.Constant][49] /* ty=Tensor[(420, 1), int8] */, dtype="int8") /* ty=Tensor[(420, 1), int8] */;
  %594 = cast(meta[relay.Constant][50] /* ty=Tensor[(2816), float64] */, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %595 = cast(%var_6921, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %596 = reshape(%592, newshape=[5, 14, 6]) /* ty=Tensor[(5, 14, 6), int8] */;
  %597 = reshape(%593, newshape=[5, 14, 6]) /* ty=Tensor[(5, 14, 6), int8] */;
  %598 = reshape(%594, newshape=[64, 44]) /* ty=Tensor[(64, 44), float64] */;
  %599 = reshape(%595, newshape=[180]) /* ty=Tensor[(180), uint16] */;
  %600 = @func_3629(%596, %597, %598, %599) /* ty=(Tensor[(5, 14, 6), int8], Tensor[(5), int32], Tensor[(64, 44), float64], Tensor[(180), uint16], Tensor[(1, 1, 5), bool], Tensor[(12, 11, 4), float32]) */;
  %601 = %591.0;
  %602 = %600.0;
  (%601, %602, meta[relay.Constant][49] /* ty=Tensor[(420, 1), int8] */, meta[relay.Constant][50] /* ty=Tensor[(2816), float64] */, %var_6921)
}

def @func_4716(%var_4661: Tensor[(154), float32], %var_4664: Tensor[(180), uint16]) -> (Tensor[(14, 7, 3), float32], Tensor[(252), uint8], Tensor[(1, 60), float64], Tensor[(5), int32], Tensor[(180), uint16], Tensor[(1664), uint16], Tensor[(154), float32]) {
  %603 = @func_4375() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32]) */;
  %604 = cast(meta[relay.Constant][51] /* ty=Tensor[(252), uint8] */, dtype="uint8") /* ty=Tensor[(252), uint8] */;
  %605 = cast(meta[relay.Constant][52] /* ty=Tensor[(1, 60), float64] */, dtype="float64") /* ty=Tensor[(1, 60), float64] */;
  %606 = cast(%var_4661, dtype="float32") /* ty=Tensor[(154), float32] */;
  %607 = cast(meta[relay.Constant][54] /* ty=Tensor[(1664), uint64] */, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
  %608 = cast(meta[relay.Constant][53] /* ty=Tensor[(5), int32] */, dtype="int32") /* ty=Tensor[(5), int32] */;
  %609 = cast(%var_4664, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %610 = reshape(%604, newshape=[3, 6, 14]) /* ty=Tensor[(3, 6, 14), uint8] */;
  %611 = reshape(%605, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %612 = reshape(%606, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %613 = reshape(%607, newshape=[1664]) /* ty=Tensor[(1664), uint64] */;
  %614 = reshape(%608, newshape=[5]) /* ty=Tensor[(5), int32] */;
  %615 = reshape(%609, newshape=[180]) /* ty=Tensor[(180), uint16] */;
  %616 = @func_2414(%610, %611, %612, %613, %614, %615) /* ty=(Tensor[(3, 6, 14), bool], int8, Tensor[(60), float64], Tensor[(154), float32], Tensor[(1664), uint64], Tensor[(180), uint16], Tensor[(5), int32], Tensor[(180), uint16], Tensor[(2816), uint64]) */;
  %617 = %616.4;
  %618 = cast(%617, dtype="uint16") /* ty=Tensor[(1664), uint16] */;
  %619 = shape_of(meta[relay.Constant][54] /* ty=Tensor[(1664), uint64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %620 = cast(meta[relay.Constant][54] /* ty=Tensor[(1664), uint64] */, dtype="uint16") /* ty=Tensor[(1664), uint16] */;
  %621 = dyn.reshape(%618, %619, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %622 = cast(%var_4661, dtype="float64") /* ty=Tensor[(154), float64] */;
  %623 = sqrt(%622) /* ty=Tensor[(154), float64] */;
  %624 = cast(%623, dtype="float32") /* ty=Tensor[(154), float32] */;
  %625 = cosh(%624) /* ty=Tensor[(154), float32] */;
  %626 = cast(%625, dtype="float32") /* ty=Tensor[(154), float32] */;
  %627 = %603.1;
  %628 = subtract(%620, %621) /* ty=Tensor[(1664), uint16] */;
  %629 = asin(%626) /* ty=Tensor[(154), float32] */;
  (%627, meta[relay.Constant][51] /* ty=Tensor[(252), uint8] */, meta[relay.Constant][52] /* ty=Tensor[(1, 60), float64] */, meta[relay.Constant][53] /* ty=Tensor[(5), int32] */, %var_4664, %628, %629)
}

def @func_10592(%var_10554: bool) -> (Tensor[(14, 7, 3), float32], Tensor[(14, 1, 8), bool], Tensor[(180), uint16], Tensor[(180), uint16], Tensor[(16, 12, 12), float64]) {
  %630 = @func_7291() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %631 = cast(%var_10554, dtype="bool") /* ty=bool */;
  %632 = reshape(%631, newshape=[]) /* ty=bool */;
  %633 = @func_5526(%632) /* ty=Tensor[(14, 1, 8), bool] */;
  %634 = cast(%633, dtype="bool") /* ty=Tensor[(14, 1, 8), bool] */;
  %635 = cast(%var_10554, dtype="bool") /* ty=bool */;
  %636 = cast(meta[relay.Constant][55] /* ty=Tensor[(180), uint16] */, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %637 = reshape(%636, newshape=[180]) /* ty=Tensor[(180), uint16] */;
  %638 = @func_6929(%637) /* ty=(Tensor[(14, 7, 3), float32], Tensor[(5, 14, 6), int8], Tensor[(420, 1), int8], Tensor[(2816), float64], Tensor[(180), uint16]) */;
  %639 = %630.0;
  %640 = logical_and(%634, %635) /* ty=Tensor[(14, 1, 8), bool] */;
  %641 = %638.4;
  %642 = @func_4613() /* ty=Tensor[(16, 12, 12), float64] */;
  (%639, %640, %641, meta[relay.Constant][55] /* ty=Tensor[(180), uint16] */, %642)
}

def @func_9581(%var_9573: Tensor[(60), float64], %var_9574: Tensor[(22, 7), float32], %var_9575: Tensor[(1664), uint64]) -> (Tensor[(14, 7, 3), float32], Tensor[(154), float32], Tensor[(2816), float64], Tensor[(60), float64], Tensor[(22, 7), float32], Tensor[(1664), uint64]) {
  %643 = @func_8920() /* ty=(Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) */;
  %644 = cast(meta[relay.Constant][56] /* ty=Tensor[(2816), float64] */, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %645 = cast(%var_9573, dtype="float64") /* ty=Tensor[(60), float64] */;
  %646 = cast(%var_9574, dtype="float32") /* ty=Tensor[(22, 7), float32] */;
  %647 = cast(%var_9575, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
  %648 = reshape(%644, newshape=[2816]) /* ty=Tensor[(2816), float64] */;
  %649 = reshape(%645, newshape=[60, 1]) /* ty=Tensor[(60, 1), float64] */;
  %650 = reshape(%646, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %651 = reshape(%647, newshape=[104, 16]) /* ty=Tensor[(104, 16), uint64] */;
  %652 = @func_6539(%648, %649, %650, %651) /* ty=(Tensor[(14, 7, 3), float32], Tensor[(12, 11, 4), float32], Tensor[(2816), float64], Tensor[(6, 30), uint16], Tensor[(60, 1), float64], Tensor[(154), float32], Tensor[(104, 16), uint64]) */;
  %653 = %643.0;
  %654 = %652.5;
  (%653, %654, meta[relay.Constant][56] /* ty=Tensor[(2816), float64] */, %var_9573, %var_9574, %var_9575)
}

def @func_10851() -> Tensor[(16, 12, 12), float64] {
  @func_6784() /* ty=Tensor[(16, 12, 12), float64] */
}

def @func_8205(%var_8191: Tensor[(7, 4, 16), float64]) -> (Tensor[(7, 4, 16), float64], Tensor[(14, 7, 3), float64]) {
  %655 = cast(%var_8191, dtype="float64") /* ty=Tensor[(7, 4, 16), float64] */;
  %656 = rsqrt(%655) /* ty=Tensor[(7, 4, 16), float64] */;
  %657 = @func_6910() /* ty=Tensor[(14, 7, 3), float64] */;
  (%656, %657)
}

def @func_6074(%var_6052: Tensor[(1, 231), float32], %var_6053: Tensor[(528), float32], %var_6055: Tensor[(2816), float64], %var_6056: Tensor[(60), float64], %var_6057: Tensor[(1664), uint64]) -> (Tensor[(14, 7, 3), float32], Tensor[(528), float32], Tensor[(528), float32], Tensor[(2816), float64], Tensor[(60), float64], Tensor[(1664), uint64], Tensor[(?, 231), float64]) {
  %658 = @func_4775() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %659 = cast(%var_6052, dtype="float32") /* ty=Tensor[(1, 231), float32] */;
  %660 = cast(%var_6052, dtype="float32") /* ty=Tensor[(1, 231), float32] */;
  %661 = cast(%var_6053, dtype="float32") /* ty=Tensor[(528), float32] */;
  %662 = cast(meta[relay.Constant][57] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %663 = cast(%var_6055, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %664 = cast(%var_6056, dtype="float64") /* ty=Tensor[(60), float64] */;
  %665 = cast(%var_6057, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
  %666 = reshape(%659, newshape=[11, 7, 3]) /* ty=Tensor[(11, 7, 3), float32] */;
  %667 = reshape(%660, newshape=[11, 7, 3]) /* ty=Tensor[(11, 7, 3), float32] */;
  %668 = reshape(%661, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %669 = reshape(%662, newshape=[]) /* ty=int8 */;
  %670 = reshape(%663, newshape=[2816]) /* ty=Tensor[(2816), float64] */;
  %671 = reshape(%664, newshape=[15, 4]) /* ty=Tensor[(15, 4), float64] */;
  %672 = reshape(%665, newshape=[416, 4]) /* ty=Tensor[(416, 4), uint64] */;
  %673 = @func_2722(%666, %667, %668, %669, %670, %671, %672) /* ty=(Tensor[(11, 7, 3), float32], Tensor[(8, 12, 16), float64], Tensor[(1536), float64], Tensor[(12, 11, 4), float32], Tensor[(528), float32], int8, Tensor[(6, 30), uint16], int8, Tensor[(154), int8], Tensor[(11, 14), int8], Tensor[(2816), float64], Tensor[(8, 12, 16), float64], Tensor[(60), float64], Tensor[(15, 4), float64], Tensor[(416, 4), uint64]) */;
  %674 = cast(meta[relay.Constant][57] /* ty=int8 */, dtype="float32") /* ty=float32 */;
  %675 = cast(%var_6052, dtype="float32") /* ty=Tensor[(1, 231), float32] */;
  %676 = divide(%674, %675) /* ty=Tensor[(1, 231), float32] */;
  %677 = cast(%676, dtype="float64") /* ty=Tensor[(1, 231), float64] */;
  %678 = shape_of(%var_6052, dtype="int32") /* ty=Tensor[(2), int32] */;
  %679 = cast(%var_6052, dtype="float64") /* ty=Tensor[(1, 231), float64] */;
  %680 = dyn.reshape(%677, %678, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %681 = %658.0;
  %682 = %673.4;
  %683 = maximum(%679, %680) /* ty=Tensor[(?, 231), float64] */;
  (%681, %682, %var_6053, %var_6055, %var_6056, %var_6057, %683)
}

def @func_6642(%var_6640: int8) -> (Tensor[(14, 7, 3), float32], Tensor[(10, 11, 5), int8], int8) {
  %684 = cast(%var_6640, dtype="int8") /* ty=int8 */;
  %685 = reshape(%684, newshape=[]) /* ty=int8 */;
  %686 = @func_1574(%685) /* ty=(Tensor[(10, 11, 5), int8],) */;
  %687 = @func_6604() /* ty=Tensor[(14, 7, 3), float32] */;
  %688 = %686.0;
  (%687, %688, %var_6640)
}

def @func_9859() -> (Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) {
  %689 = @func_8065() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %690 = @func_4016() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %691 = %689.0;
  %692 = %690.0;
  (%691, %692)
}

def @func_339(%var_324: Tensor[(12, 11, 4), float32]) -> Tensor[(12, 11, 4), float32] {
  %693 = cast(%var_324, dtype="float32") /* ty=Tensor[(12, 11, 4), float32] */;
  %694 = shape_of(meta[relay.Constant][58] /* ty=Tensor[(12, 11, 4), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %695 = cast(meta[relay.Constant][58] /* ty=Tensor[(12, 11, 4), float32] */, dtype="float32") /* ty=Tensor[(12, 11, 4), float32] */;
  %696 = dyn.reshape(%693, %694, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%695, %696) /* ty=Tensor[(12, 11, 4), float32] */
}

def @func_4613() -> Tensor[(16, 12, 12), float64] {
  %697 = cast(meta[relay.Constant][59] /* ty=Tensor[(16, 12, 12), float64] */, dtype="float64") /* ty=Tensor[(16, 12, 12), float64] */;
  asin(%697) /* ty=Tensor[(16, 12, 12), float64] */
}

def @func_8779() -> Tensor[(14, 7, 3), float32] {
  %698 = @func_8065() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %698.0
}

def @func_4001(%var_3980: Tensor[(11, 13, 14), float32], %var_3986: int8, %var_3987: Tensor[(154), float32]) -> (Tensor[(11, 13, 14), float32], Tensor[(60), float64], Tensor[(648), int32], Tensor[(60), float64], int8, Tensor[(154), float32]) {
  %699 = cast(%var_3980, dtype="float32") /* ty=Tensor[(11, 13, 14), float32] */;
  %700 = cast(meta[relay.Constant][60] /* ty=Tensor[(648), int32] */, dtype="int32") /* ty=Tensor[(648), int32] */;
  %701 = cast(meta[relay.Constant][60] /* ty=Tensor[(648), int32] */, dtype="int32") /* ty=Tensor[(648), int32] */;
  %702 = cast(meta[relay.Constant][61] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %703 = cast(%var_3986, dtype="int8") /* ty=int8 */;
  %704 = cast(%var_3987, dtype="float32") /* ty=Tensor[(154), float32] */;
  %705 = reshape(%700, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), int32] */;
  %706 = reshape(%701, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), int32] */;
  %707 = reshape(%702, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %708 = reshape(%703, newshape=[]) /* ty=int8 */;
  %709 = reshape(%704, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %710 = @func_1737(%705, %706, %707, %708, %709) /* ty=(Tensor[(6, 9, 12), int32], Tensor[(60), float64], int8, Tensor[(154), bool]) */;
  %711 = erf(%699) /* ty=Tensor[(11, 13, 14), float32] */;
  %712 = %710.1;
  (%711, %712, meta[relay.Constant][60] /* ty=Tensor[(648), int32] */, meta[relay.Constant][61] /* ty=Tensor[(60), float64] */, %var_3986, %var_3987)
}

def @func_4590(%var_4582: Tensor[(648), int32], %var_4584: int8) -> (Tensor[(14, 7, 3), float32], Tensor[(6, 9, 12), int32], Tensor[(648), int32], Tensor[(60), float64], int8, Tensor[(11, 14), float32], Tensor[(14, 7, 3), float32]) {
  %713 = @func_4212() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %714 = cast(%var_4582, dtype="int32") /* ty=Tensor[(648), int32] */;
  %715 = cast(%var_4582, dtype="int32") /* ty=Tensor[(648), int32] */;
  %716 = cast(meta[relay.Constant][62] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %717 = cast(%var_4584, dtype="int8") /* ty=int8 */;
  %718 = cast(meta[relay.Constant][63] /* ty=Tensor[(11, 14), float32] */, dtype="float32") /* ty=Tensor[(11, 14), float32] */;
  %719 = reshape(%714, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), int32] */;
  %720 = reshape(%715, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), int32] */;
  %721 = reshape(%716, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %722 = reshape(%717, newshape=[]) /* ty=int8 */;
  %723 = reshape(%718, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %724 = @func_1737(%719, %720, %721, %722, %723) /* ty=(Tensor[(6, 9, 12), int32], Tensor[(60), float64], int8, Tensor[(154), bool]) */;
  %725 = @func_4016() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %726 = %713.0;
  %727 = %724.0;
  %728 = %725.0;
  (%726, %727, %var_4582, meta[relay.Constant][62] /* ty=Tensor[(60), float64] */, %var_4584, meta[relay.Constant][63] /* ty=Tensor[(11, 14), float32] */, %728)
}

def @func_2414(%var_2339: Tensor[(3, 6, 14), uint8], %var_2358: Tensor[(60), float64], %var_2360: Tensor[(154), float32], %var_2361: Tensor[(1664), uint64], %var_2378: Tensor[(5), int32], %var_2380: Tensor[(180), uint16]) -> (Tensor[(3, 6, 14), bool], int8, Tensor[(60), float64], Tensor[(154), float32], Tensor[(1664), uint64], Tensor[(180), uint16], Tensor[(5), int32], Tensor[(180), uint16], Tensor[(2816), uint64]) {
  %729 = cast(meta[relay.Constant][64] /* ty=Tensor[(3, 6, 14), uint8] */, dtype="bool") /* ty=Tensor[(3, 6, 14), bool] */;
  %730 = shape_of(%var_2339, dtype="int32") /* ty=Tensor[(3), int32] */;
  %731 = cast(%var_2339, dtype="bool") /* ty=Tensor[(3, 6, 14), bool] */;
  %732 = dyn.reshape(%729, %730, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %733 = cast(%var_2358, dtype="float64") /* ty=Tensor[(60), float64] */;
  %734 = cast(meta[relay.Constant][65] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %735 = cast(%var_2360, dtype="float32") /* ty=Tensor[(154), float32] */;
  %736 = cast(%var_2361, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
  %737 = reshape(%733, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %738 = reshape(%734, newshape=[]) /* ty=int8 */;
  %739 = reshape(%735, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %740 = reshape(%736, newshape=[1664]) /* ty=Tensor[(1664), uint64] */;
  %741 = @func_1872(%737, %738, %739, %740) /* ty=(Tensor[(9, 10), float64], Tensor[(6, 9, 12), int32], Tensor[(648), int32], Tensor[(60), float64], int8, Tensor[(154), float32], Tensor[(12, 11, 4), float32], Tensor[(180, 1), uint16], Tensor[(12, 11, 4), float32], Tensor[(10, 11, 5), int8], Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(13, 16, 8), uint64], Tensor[(1664), uint64], Tensor[(154), int8]) */;
  %742 = cast(meta[relay.Constant][65] /* ty=int8 */, dtype="int32") /* ty=int32 */;
  %743 = cast(%var_2378, dtype="int32") /* ty=Tensor[(5), int32] */;
  %744 = cast(meta[relay.Constant][66] /* ty=Tensor[(2816), float64] */, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %745 = cast(%var_2380, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %746 = reshape(%742, newshape=[]) /* ty=int32 */;
  %747 = reshape(%743, newshape=[1, 1, 5]) /* ty=Tensor[(1, 1, 5), int32] */;
  %748 = reshape(%744, newshape=[2816]) /* ty=Tensor[(2816), float64] */;
  %749 = reshape(%745, newshape=[180]) /* ty=Tensor[(180), uint16] */;
  %750 = @func_2124(%746, %747, %748, %749) /* ty=(Tensor[(1, 1, 5), int32], Tensor[(1, 1, 5), uint32], Tensor[(60), float64], Tensor[(16, 16, 11), float64], Tensor[(180), uint16], Tensor[(10, 2, 3), float64], Tensor[(2816), float32]) */;
  %751 = cast(meta[relay.Constant][66] /* ty=Tensor[(2816), float64] */, dtype="uint64") /* ty=Tensor[(2816), uint64] */;
  %752 = cast(meta[relay.Constant][65] /* ty=int8 */, dtype="uint64") /* ty=uint64 */;
  %753 = less_equal(%731, %732) /* ty=Tensor[(3, 6, 14), bool] */;
  %754 = %741.4;
  %755 = %750.4;
  %756 = multiply(%751, %752) /* ty=Tensor[(2816), uint64] */;
  (%753, %754, %var_2358, %var_2360, %var_2361, %755, %var_2378, %var_2380, %756)
}

def @func_8026(%var_7973: Tensor[(5, 1, 14), float32]) -> (Tensor[(14, 7, 3), float64], Tensor[(5, ?, 14), bool]) {
  %757 = @func_5938() /* ty=(Tensor[(14, 7, 3), float64],) */;
  %758 = cast(%var_7973, dtype="float64") /* ty=Tensor[(5, 1, 14), float64] */;
  %759 = log(%758) /* ty=Tensor[(5, 1, 14), float64] */;
  %760 = @func_7879() /* ty=(Tensor[(5, 1, 14), float32],) */;
  %761 = %760.0;
  %762 = cast(%var_7973, dtype="int16") /* ty=Tensor[(5, 1, 14), int16] */;
  %763 = shape_of(%761, dtype="int32") /* ty=Tensor[(3), int32] */;
  %764 = cast(%761, dtype="int16") /* ty=Tensor[(5, 1, 14), int16] */;
  %765 = dyn.reshape(%762, %763, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %766 = logical_xor(%764, %765) /* ty=Tensor[(5, ?, 14), int16] */;
  %767 = cast(%766, dtype="bool") /* ty=Tensor[(5, ?, 14), bool] */;
  %768 = shape_of(%759, dtype="int32") /* ty=Tensor[(3), int32] */;
  %769 = cast(%759, dtype="bool") /* ty=Tensor[(5, 1, 14), bool] */;
  %770 = dyn.reshape(%767, %768, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %771 = %757.0;
  %772 = equal(%769, %770) /* ty=Tensor[(5, ?, 14), bool] */;
  (%771, %772)
}

def @func_4637() -> (Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32], Tensor[(6, 9, 12), int32], Tensor[(648), int32], int8) {
  %773 = @func_4375() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32]) */;
  %774 = @func_4016() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %775 = cast(meta[relay.Constant][67] /* ty=Tensor[(648), int32] */, dtype="int32") /* ty=Tensor[(648), int32] */;
  %776 = cast(meta[relay.Constant][68] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %777 = reshape(%775, newshape=[648]) /* ty=Tensor[(648), int32] */;
  %778 = reshape(%776, newshape=[]) /* ty=int8 */;
  %779 = @func_4590(%777, %778) /* ty=(Tensor[(14, 7, 3), float32], Tensor[(6, 9, 12), int32], Tensor[(648), int32], Tensor[(60), float64], int8, Tensor[(11, 14), float32], Tensor[(14, 7, 3), float32]) */;
  %780 = %773.0;
  %781 = %774.0;
  %782 = %779.1;
  (%780, %781, %782, meta[relay.Constant][67] /* ty=Tensor[(648), int32] */, meta[relay.Constant][68] /* ty=int8 */)
}

def @func_3629(%var_3567: Tensor[(5, 14, 6), int8], %var_3568: Tensor[(5, 14, 6), int8], %var_3582: Tensor[(64, 44), float64], %var_3583: Tensor[(180), uint16]) -> (Tensor[(5, 14, 6), int8], Tensor[(5), int32], Tensor[(64, 44), float64], Tensor[(180), uint16], Tensor[(1, 1, 5), bool], Tensor[(12, 11, 4), float32]) {
  %783 = cast(%var_3568, dtype="int8") /* ty=Tensor[(5, 14, 6), int8] */;
  %784 = shape_of(%var_3567, dtype="int32") /* ty=Tensor[(3), int32] */;
  %785 = cast(%var_3567, dtype="int8") /* ty=Tensor[(5, 14, 6), int8] */;
  %786 = dyn.reshape(%783, %784, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %787 = cast(-7 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %788 = cast(meta[relay.Constant][69] /* ty=Tensor[(5), int32] */, dtype="int32") /* ty=Tensor[(5), int32] */;
  %789 = cast(%var_3582, dtype="float64") /* ty=Tensor[(64, 44), float64] */;
  %790 = cast(%var_3583, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %791 = reshape(%787, newshape=[]) /* ty=int32 */;
  %792 = reshape(%788, newshape=[1, 1, 5]) /* ty=Tensor[(1, 1, 5), int32] */;
  %793 = reshape(%789, newshape=[2816]) /* ty=Tensor[(2816), float64] */;
  %794 = reshape(%790, newshape=[180]) /* ty=Tensor[(180), uint16] */;
  %795 = @func_2124(%791, %792, %793, %794) /* ty=(Tensor[(1, 1, 5), int32], Tensor[(1, 1, 5), uint32], Tensor[(60), float64], Tensor[(16, 16, 11), float64], Tensor[(180), uint16], Tensor[(10, 2, 3), float64], Tensor[(2816), float32]) */;
  %796 = %795.0;
  %797 = cast(%796, dtype="bool") /* ty=Tensor[(1, 1, 5), bool] */;
  %798 = cast(-7 /* ty=int32 */, dtype="bool") /* ty=bool */;
  %799 = cast(%var_3582, dtype="float64") /* ty=Tensor[(64, 44), float64] */;
  %800 = cast(%var_3583, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %801 = cast(-7 /* ty=int32 */, dtype="int8") /* ty=int8 */;
  %802 = reshape(%799, newshape=[16, 16, 11]) /* ty=Tensor[(16, 16, 11), float64] */;
  %803 = reshape(%800, newshape=[180]) /* ty=Tensor[(180), uint16] */;
  %804 = reshape(%801, newshape=[]) /* ty=int8 */;
  %805 = @func_1938(%802, %803, %804) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(12, 11, 4), float32], Tensor[(180), uint16], int8) */;
  %806 = add(%785, %786) /* ty=Tensor[(5, 14, 6), int8] */;
  %807 = greater_equal(%797, %798) /* ty=Tensor[(1, 1, 5), bool] */;
  %808 = %805.1;
  (%806, meta[relay.Constant][69] /* ty=Tensor[(5), int32] */, %var_3582, %var_3583, %807, %808)
}

def @func_10729(%var_10723: Tensor[(576, 1), int8]) -> (Tensor[(14, 7, 3), uint32], Tensor[(12, 8, 6), int8], Tensor[(576, 1), int8], Tensor[(11, 14), int8], Tensor[(2816), float64]) {
  %809 = @func_5273() /* ty=(Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), uint32]) */;
  %810 = cast(%var_10723, dtype="int8") /* ty=Tensor[(576, 1), int8] */;
  %811 = cast(%var_10723, dtype="int8") /* ty=Tensor[(576, 1), int8] */;
  %812 = cast(meta[relay.Constant][70] /* ty=Tensor[(11, 14), int8] */, dtype="int8") /* ty=Tensor[(11, 14), int8] */;
  %813 = cast(meta[relay.Constant][71] /* ty=Tensor[(2816), float64] */, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %814 = reshape(%810, newshape=[12, 8, 6]) /* ty=Tensor[(12, 8, 6), int8] */;
  %815 = reshape(%811, newshape=[12, 8, 6]) /* ty=Tensor[(12, 8, 6), int8] */;
  %816 = reshape(%812, newshape=[154]) /* ty=Tensor[(154), int8] */;
  %817 = reshape(%813, newshape=[2816]) /* ty=Tensor[(2816), float64] */;
  %818 = @func_3697(%814, %815, %816, %817) /* ty=(Tensor[(12, 8, 6), int8], Tensor[(12, 8, 6), float32], Tensor[(60), float64], int8, Tensor[(154), int8], Tensor[(2816), float64]) */;
  %819 = %809.1;
  %820 = %818.0;
  (%819, %820, %var_10723, meta[relay.Constant][70] /* ty=Tensor[(11, 14), int8] */, meta[relay.Constant][71] /* ty=Tensor[(2816), float64] */)
}

def @func_9773(%var_9761: Tensor[(14, 7, 3), float32]) -> Tensor[(14, 7, 3), int16] {
  %821 = @func_4016() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %822 = %821.0;
  %823 = cast(%var_9761, dtype="int16") /* ty=Tensor[(14, 7, 3), int16] */;
  %824 = shape_of(%822, dtype="int32") /* ty=Tensor[(3), int32] */;
  %825 = cast(%822, dtype="int16") /* ty=Tensor[(14, 7, 3), int16] */;
  %826 = dyn.reshape(%823, %824, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_xor(%825, %826) /* ty=Tensor[(14, 7, 3), int16] */
}

def @func_5138(%var_5097: Tensor[(14, 7, 3), bool], %var_5113: Tensor[(33, 4), uint64]) -> (Tensor[(14, 7, 3), bool], Tensor[(1, 11, 12), uint64], Tensor[(33, 4), uint64], Tensor[(14, 7, 3), float64], Tensor[(154), int8], Tensor[(180), uint16], int8) {
  %827 = @func_4637() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32], Tensor[(6, 9, 12), int32], Tensor[(648), int32], int8) */;
  %828 = %827.0;
  %829 = cast(%var_5097, dtype="bool") /* ty=Tensor[(14, 7, 3), bool] */;
  %830 = shape_of(%828, dtype="int32") /* ty=Tensor[(3), int32] */;
  %831 = cast(%828, dtype="bool") /* ty=Tensor[(14, 7, 3), bool] */;
  %832 = dyn.reshape(%829, %830, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %833 = cast(%var_5113, dtype="uint64") /* ty=Tensor[(33, 4), uint64] */;
  %834 = reshape(%833, newshape=[1, 11, 12]) /* ty=Tensor[(1, 11, 12), uint64] */;
  %835 = @func_2237(%834) /* ty=(Tensor[(1, 11, 12), uint64],) */;
  %836 = @func_5050() /* ty=(Tensor[(14, 7, 3), float64], Tensor[(14, 7, 3), float32]) */;
  %837 = %836.0;
  %838 = cast(%837, dtype="float64") /* ty=Tensor[(14, 7, 3), float64] */;
  %839 = cast(meta[relay.Constant][72] /* ty=Tensor[(180), uint16] */, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %840 = cast(meta[relay.Constant][73] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %841 = reshape(%839, newshape=[180]) /* ty=Tensor[(180), uint16] */;
  %842 = reshape(%840, newshape=[]) /* ty=int8 */;
  %843 = @func_897(%841, %842) /* ty=(Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(528), float32], Tensor[(180), uint16], Tensor[(14, 1, 11), int8], int8, Tensor[(154), int8], Tensor[(12, 11, 4), float32], Tensor[(14, 14, 10), float32]) */;
  %844 = equal(%831, %832) /* ty=Tensor[(14, 7, 3), bool] */;
  %845 = %835.0;
  %846 = sigmoid(%838) /* ty=Tensor[(14, 7, 3), float64] */;
  %847 = %843.6;
  (%844, %845, %var_5113, %846, %847, meta[relay.Constant][72] /* ty=Tensor[(180), uint16] */, meta[relay.Constant][73] /* ty=int8 */)
}

def @func_3697(%var_3671: Tensor[(12, 8, 6), int8], %var_3672: Tensor[(12, 8, 6), int8], %var_3689: Tensor[(154), int8], %var_3690: Tensor[(2816), float64]) -> (Tensor[(12, 8, 6), int8], Tensor[(12, 8, 6), float32], Tensor[(60), float64], int8, Tensor[(154), int8], Tensor[(2816), float64]) {
  %848 = cast(%var_3672, dtype="int8") /* ty=Tensor[(12, 8, 6), int8] */;
  %849 = shape_of(%var_3671, dtype="int32") /* ty=Tensor[(3), int32] */;
  %850 = cast(%var_3671, dtype="int8") /* ty=Tensor[(12, 8, 6), int8] */;
  %851 = dyn.reshape(%848, %849, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %852 = cast(%var_3671, dtype="float32") /* ty=Tensor[(12, 8, 6), float32] */;
  %853 = cast(meta[relay.Constant][74] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %854 = cast(%var_3689, dtype="int8") /* ty=Tensor[(154), int8] */;
  %855 = cast(%var_3690, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %856 = reshape(%853, newshape=[]) /* ty=int8 */;
  %857 = reshape(%854, newshape=[154]) /* ty=Tensor[(154), int8] */;
  %858 = reshape(%855, newshape=[2816]) /* ty=Tensor[(2816), float64] */;
  %859 = @func_2571(%856, %857, %858) /* ty=(Tensor[(154), int8], Tensor[(60), float64], Tensor[(5), int32], Tensor[(2816), float64], Tensor[(3, 60), uint16], Tensor[(11, 8, 10), int64], Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(14, 1, 11), uint8]) */;
  %860 = left_shift(%850, %851) /* ty=Tensor[(12, 8, 6), int8] */;
  %861 = erf(%852) /* ty=Tensor[(12, 8, 6), float32] */;
  %862 = %859.1;
  (%860, %861, %862, meta[relay.Constant][74] /* ty=int8 */, %var_3689, %var_3690)
}

def @func_10195() -> Tensor[(14, 7, 3), float32] {
  %863 = @func_4016() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %863.0
}

def @func_7702() -> (Tensor[(14, 7, 3), bool],) {
  %864 = @func_4375() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32]) */;
  %865 = %864.0;
  (%865,)
}

def @func_8065() -> (Tensor[(14, 7, 3), float32],) {
  %866 = @func_4375() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32]) */;
  %867 = %866.1;
  (%867,)
}

def @func_7291() -> (Tensor[(14, 7, 3), float32],) {
  %868 = @func_4212() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %869 = %868.0;
  (%869,)
}

def @func_5082(%var_5067: Tensor[(1, 5), int32], %var_5068: Tensor[(64, 44), float64], %var_5069: Tensor[(180), uint16], %var_5080: Tensor[(154), int8]) -> (Tensor[(14, 7, 3), float32], Tensor[(1, 1, 5), uint32], Tensor[(1, 5), int32], Tensor[(180), uint16], Tensor[(64, 44), bool], Tensor[(12, 8, 6), int8], Tensor[(144, 4), int8], Tensor[(154), int8]) {
  %870 = @func_4212() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %871 = cast(-2 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %872 = cast(%var_5067, dtype="int32") /* ty=Tensor[(1, 5), int32] */;
  %873 = cast(%var_5068, dtype="float64") /* ty=Tensor[(64, 44), float64] */;
  %874 = cast(%var_5069, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %875 = reshape(%871, newshape=[]) /* ty=int32 */;
  %876 = reshape(%872, newshape=[1, 1, 5]) /* ty=Tensor[(1, 1, 5), int32] */;
  %877 = reshape(%873, newshape=[2816]) /* ty=Tensor[(2816), float64] */;
  %878 = reshape(%874, newshape=[180]) /* ty=Tensor[(180), uint16] */;
  %879 = @func_2124(%875, %876, %877, %878) /* ty=(Tensor[(1, 1, 5), int32], Tensor[(1, 1, 5), uint32], Tensor[(60), float64], Tensor[(16, 16, 11), float64], Tensor[(180), uint16], Tensor[(10, 2, 3), float64], Tensor[(2816), float32]) */;
  %880 = cast(%var_5068, dtype="bool") /* ty=Tensor[(64, 44), bool] */;
  %881 = cast(-2 /* ty=int32 */, dtype="bool") /* ty=bool */;
  %882 = cast(meta[relay.Constant][75] /* ty=Tensor[(144, 4), int8] */, dtype="int8") /* ty=Tensor[(144, 4), int8] */;
  %883 = cast(meta[relay.Constant][75] /* ty=Tensor[(144, 4), int8] */, dtype="int8") /* ty=Tensor[(144, 4), int8] */;
  %884 = cast(%var_5080, dtype="int8") /* ty=Tensor[(154), int8] */;
  %885 = cast(%var_5068, dtype="float64") /* ty=Tensor[(64, 44), float64] */;
  %886 = reshape(%882, newshape=[12, 8, 6]) /* ty=Tensor[(12, 8, 6), int8] */;
  %887 = reshape(%883, newshape=[12, 8, 6]) /* ty=Tensor[(12, 8, 6), int8] */;
  %888 = reshape(%884, newshape=[154]) /* ty=Tensor[(154), int8] */;
  %889 = reshape(%885, newshape=[2816]) /* ty=Tensor[(2816), float64] */;
  %890 = @func_3697(%886, %887, %888, %889) /* ty=(Tensor[(12, 8, 6), int8], Tensor[(12, 8, 6), float32], Tensor[(60), float64], int8, Tensor[(154), int8], Tensor[(2816), float64]) */;
  %891 = %870.0;
  %892 = %879.1;
  %893 = less(%880, %881) /* ty=Tensor[(64, 44), bool] */;
  %894 = %890.0;
  (%891, %892, %var_5067, %var_5069, %893, %894, meta[relay.Constant][75] /* ty=Tensor[(144, 4), int8] */, %var_5080)
}

def @func_10899() -> (Tensor[(14, 7, 3), float64], Tensor[(4, 10, 9), float32], Tensor[(360), float32]) {
  %895 = @func_7558() /* ty=(Tensor[(14, 7, 3), float64],) */;
  %896 = cast(meta[relay.Constant][76] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %897 = reshape(%896, newshape=[4, 10, 9]) /* ty=Tensor[(4, 10, 9), float32] */;
  %898 = @func_5335(%897) /* ty=(Tensor[(6, 9, 12), int32], Tensor[(4, 10, 9), float32]) */;
  %899 = %895.0;
  %900 = %898.1;
  (%899, %900, meta[relay.Constant][76] /* ty=Tensor[(360), float32] */)
}

def @func_1938(%var_1924: Tensor[(16, 16, 11), float64], %var_1934: Tensor[(180), uint16], %var_1935: int8) -> (Tensor[(16, 16, 11), float64], Tensor[(12, 11, 4), float32], Tensor[(180), uint16], int8) {
  %901 = cast(%var_1924, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
  %902 = cast(%var_1934, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %903 = cast(%var_1935, dtype="int8") /* ty=int8 */;
  %904 = reshape(%902, newshape=[180]) /* ty=Tensor[(180), uint16] */;
  %905 = reshape(%903, newshape=[]) /* ty=int8 */;
  %906 = @func_897(%904, %905) /* ty=(Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(528), float32], Tensor[(180), uint16], Tensor[(14, 1, 11), int8], int8, Tensor[(154), int8], Tensor[(12, 11, 4), float32], Tensor[(14, 14, 10), float32]) */;
  %907 = tan(%901) /* ty=Tensor[(16, 16, 11), float64] */;
  %908 = %906.7;
  (%907, %908, %var_1934, %var_1935)
}

def @func_2631(%var_2623: Tensor[(8, 12, 16), float64]) -> Tensor[(8, 12, 16), float64] {
  %909 = cast(%var_2623, dtype="float64") /* ty=Tensor[(8, 12, 16), float64] */;
  atan(%909) /* ty=Tensor[(8, 12, 16), float64] */
}

def @func_7790(%var_7768: Tensor[(70), float32], %var_7778: Tensor[(648), int32]) -> (Tensor[(14, 7, 3), float32], Tensor[(70), float32], Tensor[(70), float32], Tensor[(648), bool], Tensor[(648), int32]) {
  %910 = cast(%var_7768, dtype="float32") /* ty=Tensor[(70), float32] */;
  %911 = reshape(%910, newshape=[70]) /* ty=Tensor[(70), float32] */;
  %912 = @func_6764(%911) /* ty=(Tensor[(14, 7, 3), bool], Tensor[(5, 1, 14), float32], Tensor[(70), float32]) */;
  %913 = cast(%var_7778, dtype="int32") /* ty=Tensor[(648), int32] */;
  %914 = reshape(%913, newshape=[648]) /* ty=Tensor[(648), int32] */;
  %915 = @func_5655() /* ty=Tensor[(14, 7, 3), float32] */;
  %916 = %912.2;
  %917 = @func_5470(%914) /* ty=Tensor[(648), bool] */;
  (%915, %916, %var_7768, %917, %var_7778)
}

def @func_6539(%var_6515: Tensor[(2816), float64], %var_6517: Tensor[(60, 1), float64], %var_6518: Tensor[(154), float32], %var_6519: Tensor[(104, 16), uint64]) -> (Tensor[(14, 7, 3), float32], Tensor[(12, 11, 4), float32], Tensor[(2816), float64], Tensor[(6, 30), uint16], Tensor[(60, 1), float64], Tensor[(154), float32], Tensor[(104, 16), uint64]) {
  %918 = @func_4212() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %919 = cast(%var_6515, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %920 = cast(meta[relay.Constant][77] /* ty=Tensor[(6, 30), uint16] */, dtype="uint16") /* ty=Tensor[(6, 30), uint16] */;
  %921 = cast(%var_6517, dtype="float64") /* ty=Tensor[(60, 1), float64] */;
  %922 = cast(%var_6518, dtype="float32") /* ty=Tensor[(154), float32] */;
  %923 = cast(%var_6519, dtype="uint64") /* ty=Tensor[(104, 16), uint64] */;
  %924 = reshape(%919, newshape=[2816]) /* ty=Tensor[(2816), float64] */;
  %925 = reshape(%920, newshape=[180]) /* ty=Tensor[(180), uint16] */;
  %926 = reshape(%921, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %927 = reshape(%922, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %928 = reshape(%923, newshape=[1664]) /* ty=Tensor[(1664), uint64] */;
  %929 = @func_4103(%924, %925, %926, %927, %928) /* ty=(Tensor[(14, 7, 3), float32], Tensor[(16, 16, 11), float64], Tensor[(5), int32], Tensor[(2816), float64], Tensor[(180), uint16], Tensor[(12, 11, 4), float32], Tensor[(60), float64], Tensor[(154), float32], Tensor[(16, 16, 11), float64], Tensor[(1664), int64]) */;
  %930 = %918.0;
  %931 = %929.5;
  (%930, %931, %var_6515, meta[relay.Constant][77] /* ty=Tensor[(6, 30), uint16] */, %var_6517, %var_6518, %var_6519)
}

def @func_7040() -> (Tensor[(14, 7, 3), float32],) {
  %932 = @func_4880() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %933 = %932.0;
  (%933,)
}

def @func_9222(%var_9210: Tensor[(3, 4, 11), float32], %var_9219: Tensor[(528), float32]) -> (Tensor[(3, 4, 11), float32], Tensor[(3, 4, 11), float32], Tensor[(12, 11, 4), float32], Tensor[(528), float32]) {
  %934 = cast(%var_9210, dtype="float32") /* ty=Tensor[(3, 4, 11), float32] */;
  %935 = cast(%var_9210, dtype="float32") /* ty=Tensor[(3, 4, 11), float32] */;
  %936 = cast(%var_9219, dtype="float32") /* ty=Tensor[(528), float32] */;
  %937 = reshape(%936, newshape=[12, 11, 4]) /* ty=Tensor[(12, 11, 4), float32] */;
  %938 = asin(%934) /* ty=Tensor[(3, 4, 11), float32] */;
  %939 = rsqrt(%935) /* ty=Tensor[(3, 4, 11), float32] */;
  %940 = @func_339(%937) /* ty=Tensor[(12, 11, 4), float32] */;
  (%938, %939, %940, %var_9219)
}

def @func_6784() -> Tensor[(16, 12, 12), float64] {
  @func_4613() /* ty=Tensor[(16, 12, 12), float64] */
}

def @func_10832() -> Tensor[(14, 7, 3), float32] {
  %941 = @func_9235() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %941.0
}

def @func_2237(%var_2220: Tensor[(1, 11, 12), uint64]) -> (Tensor[(1, 11, 12), uint64],) {
  %942 = cast(meta[relay.Constant][78] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %943 = cast(%var_2220, dtype="uint64") /* ty=Tensor[(1, 11, 12), uint64] */;
  %944 = left_shift(%942, %943) /* ty=Tensor[(1, 11, 12), uint64] */;
  (%944,)
}

def @func_6698() -> (Tensor[(16, 12, 12), float64], Tensor[(14, 7, 3), float32]) {
  %945 = @func_5748() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(16, 12, 12), float64]) */;
  %946 = %945.1;
  %947 = @func_5261() /* ty=Tensor[(14, 7, 3), float32] */;
  (%946, %947)
}

def @func_10748() -> (Tensor[(14, 7, 3), float32],) {
  %948 = @func_4212() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %949 = %948.0;
  (%949,)
}

def @func_4294(%var_4254: Tensor[(6, 16, 1), uint8], %var_4255: Tensor[(6, 16, 2), uint8], %var_4279: int8, %var_4280: Tensor[(154), int8], %var_4288: Tensor[(132), uint64]) -> (Tensor[(6, 16, 2), float64], Tensor[(6, 16, 2), float64], Tensor[(14, 1, 11), int8], int8, Tensor[(154), int8], Tensor[(1, 11, 12), uint64], Tensor[(132), uint64]) {
  %950 = cast(%var_4254, dtype="uint8") /* ty=Tensor[(6, 16, 1), uint8] */;
  %951 = cast(%var_4255, dtype="uint8") /* ty=Tensor[(6, 16, 2), uint8] */;
  %952 = left_shift(%950, %951) /* ty=Tensor[(6, 16, 2), uint8] */;
  %953 = cast(%952, dtype="float64") /* ty=Tensor[(6, 16, 2), float64] */;
  %954 = cast(%var_4255, dtype="float64") /* ty=Tensor[(6, 16, 2), float64] */;
  %955 = cast(%var_4279, dtype="int8") /* ty=int8 */;
  %956 = cast(%var_4280, dtype="int8") /* ty=Tensor[(154), int8] */;
  %957 = reshape(%955, newshape=[]) /* ty=int8 */;
  %958 = reshape(%956, newshape=[14, 1, 11]) /* ty=Tensor[(14, 1, 11), int8] */;
  %959 = @func_134(%957, %958) /* ty=(Tensor[(14, 1, 11), int8],) */;
  %960 = cast(%var_4288, dtype="uint64") /* ty=Tensor[(132), uint64] */;
  %961 = reshape(%960, newshape=[1, 11, 12]) /* ty=Tensor[(1, 11, 12), uint64] */;
  %962 = @func_2237(%961) /* ty=(Tensor[(1, 11, 12), uint64],) */;
  %963 = tan(%953) /* ty=Tensor[(6, 16, 2), float64] */;
  %964 = acos(%954) /* ty=Tensor[(6, 16, 2), float64] */;
  %965 = %959.0;
  %966 = %962.0;
  (%963, %964, %965, %var_4279, %var_4280, %966, %var_4288)
}

def @func_4983(%var_4932: Tensor[(132), uint64], %var_4969: Tensor[(60), float64], %var_4972: Tensor[(5), int32]) -> (Tensor[(16, 12, 12), float64], Tensor[(?, 11, 12), float32], Tensor[(154), float32], Tensor[(252), uint8], Tensor[(60), float64], Tensor[(154, 1), float32], Tensor[(1664), uint64], Tensor[(5), int32], Tensor[(6, 30), uint16]) {
  %967 = cast(%var_4932, dtype="uint64") /* ty=Tensor[(132), uint64] */;
  %968 = reshape(%967, newshape=[1, 11, 12]) /* ty=Tensor[(1, 11, 12), uint64] */;
  %969 = @func_2237(%968) /* ty=(Tensor[(1, 11, 12), uint64],) */;
  %970 = %969.0;
  %971 = cast(%var_4932, dtype="float32") /* ty=Tensor[(132), float32] */;
  %972 = shape_of(%970, dtype="int32") /* ty=Tensor[(3), int32] */;
  %973 = cast(%970, dtype="float32") /* ty=Tensor[(1, 11, 12), float32] */;
  %974 = dyn.reshape(%971, %972, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %975 = cast(meta[relay.Constant][79] /* ty=Tensor[(252), uint8] */, dtype="uint8") /* ty=Tensor[(252), uint8] */;
  %976 = cast(%var_4969, dtype="float64") /* ty=Tensor[(60), float64] */;
  %977 = cast(meta[relay.Constant][80] /* ty=Tensor[(154, 1), float32] */, dtype="float32") /* ty=Tensor[(154, 1), float32] */;
  %978 = cast(meta[relay.Constant][81] /* ty=Tensor[(1664), uint64] */, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
  %979 = cast(%var_4972, dtype="int32") /* ty=Tensor[(5), int32] */;
  %980 = cast(meta[relay.Constant][82] /* ty=Tensor[(6, 30), uint16] */, dtype="uint16") /* ty=Tensor[(6, 30), uint16] */;
  %981 = reshape(%975, newshape=[3, 6, 14]) /* ty=Tensor[(3, 6, 14), uint8] */;
  %982 = reshape(%976, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %983 = reshape(%977, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %984 = reshape(%978, newshape=[1664]) /* ty=Tensor[(1664), uint64] */;
  %985 = reshape(%979, newshape=[5]) /* ty=Tensor[(5), int32] */;
  %986 = reshape(%980, newshape=[180]) /* ty=Tensor[(180), uint16] */;
  %987 = @func_2414(%981, %982, %983, %984, %985, %986) /* ty=(Tensor[(3, 6, 14), bool], int8, Tensor[(60), float64], Tensor[(154), float32], Tensor[(1664), uint64], Tensor[(180), uint16], Tensor[(5), int32], Tensor[(180), uint16], Tensor[(2816), uint64]) */;
  %988 = @func_4613() /* ty=Tensor[(16, 12, 12), float64] */;
  %989 = floor_mod(%973, %974) /* ty=Tensor[(?, 11, 12), float32] */;
  %990 = %987.3;
  (%988, %989, %990, meta[relay.Constant][79] /* ty=Tensor[(252), uint8] */, %var_4969, meta[relay.Constant][80] /* ty=Tensor[(154, 1), float32] */, meta[relay.Constant][81] /* ty=Tensor[(1664), uint64] */, %var_4972, meta[relay.Constant][82] /* ty=Tensor[(6, 30), uint16] */)
}

def @func_134(%var_125: int8, %var_126: Tensor[(14, 1, 11), int8]) -> (Tensor[(14, 1, 11), int8],) {
  %991 = cast(%var_125, dtype="int8") /* ty=int8 */;
  %992 = cast(%var_126, dtype="int8") /* ty=Tensor[(14, 1, 11), int8] */;
  %993 = logical_xor(%991, %992) /* ty=Tensor[(14, 1, 11), int8] */;
  (%993,)
}

def @func_4551(%var_4532: Tensor[(5, 9, 1), float64]) -> (Tensor[(5, 9, 4), float64], Tensor[(5, 9, 4), float64]) {
  %994 = cast(%var_4532, dtype="float64") /* ty=Tensor[(5, 9, 1), float64] */;
  %995 = cast(meta[relay.Constant][83] /* ty=Tensor[(5, 9, 4), float64] */, dtype="float64") /* ty=Tensor[(5, 9, 4), float64] */;
  %996 = cast(meta[relay.Constant][83] /* ty=Tensor[(5, 9, 4), float64] */, dtype="float32") /* ty=Tensor[(5, 9, 4), float32] */;
  %997 = atan(%996) /* ty=Tensor[(5, 9, 4), float32] */;
  %998 = cast(%997, dtype="float64") /* ty=Tensor[(5, 9, 4), float64] */;
  %999 = floor_divide(%994, %995) /* ty=Tensor[(5, 9, 4), float64] */;
  %1000 = sin(%998) /* ty=Tensor[(5, 9, 4), float64] */;
  (%999, %1000)
}

def @func_6312(%var_6271: int8) -> (Tensor[(14, 7, 3), bool], Tensor[(180), uint16], Tensor[(720), float64], int8, Tensor[(14, 7, 3), float64], Tensor[(14, 7, 3), uint32]) {
  %1001 = @func_4375() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32]) */;
  %1002 = cast(meta[relay.Constant][84] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %1003 = cast(meta[relay.Constant][84] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %1004 = cast(%var_6271, dtype="int8") /* ty=int8 */;
  %1005 = reshape(%1002, newshape=[6, 10, 12]) /* ty=Tensor[(6, 10, 12), float64] */;
  %1006 = reshape(%1003, newshape=[6, 10, 12]) /* ty=Tensor[(6, 10, 12), float64] */;
  %1007 = reshape(%1004, newshape=[]) /* ty=int8 */;
  %1008 = @func_5612(%1005, %1006, %1007) /* ty=(Tensor[(6, 10, 12), float64], Tensor[(180), uint16], Tensor[(2816), float64], Tensor[(180, 1), uint16], int8) */;
  %1009 = @func_5050() /* ty=(Tensor[(14, 7, 3), float64], Tensor[(14, 7, 3), float32]) */;
  %1010 = %1009.0;
  %1011 = cast(%1010, dtype="float32") /* ty=Tensor[(14, 7, 3), float32] */;
  %1012 = reshape(%1011, newshape=[14, 7, 3]) /* ty=Tensor[(14, 7, 3), float32] */;
  %1013 = %1001.0;
  %1014 = %1008.1;
  %1015 = @func_4460(%1012) /* ty=Tensor[(14, 7, 3), uint32] */;
  (%1013, %1014, meta[relay.Constant][84] /* ty=Tensor[(720), float64] */, %var_6271, %1010, %1015)
}

def @func_9371() -> (Tensor[(14, 7, 3), float32],) {
  %1016 = @func_8775() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %1017 = %1016.0;
  (%1017,)
}

def @func_4858(%var_4838: int8, %var_4839: Tensor[(154), float32], %var_4840: Tensor[(1664), uint64]) -> (int8, Tensor[(60), float64], Tensor[(154), float32], Tensor[(1664), uint64], Tensor[(648), uint16]) {
  %1018 = cast(meta[relay.Constant][85] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %1019 = cast(%var_4838, dtype="int8") /* ty=int8 */;
  %1020 = cast(%var_4839, dtype="float32") /* ty=Tensor[(154), float32] */;
  %1021 = cast(%var_4840, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
  %1022 = reshape(%1018, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %1023 = reshape(%1019, newshape=[]) /* ty=int8 */;
  %1024 = reshape(%1020, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %1025 = reshape(%1021, newshape=[1664]) /* ty=Tensor[(1664), uint64] */;
  %1026 = @func_1872(%1022, %1023, %1024, %1025) /* ty=(Tensor[(9, 10), float64], Tensor[(6, 9, 12), int32], Tensor[(648), int32], Tensor[(60), float64], int8, Tensor[(154), float32], Tensor[(12, 11, 4), float32], Tensor[(180, 1), uint16], Tensor[(12, 11, 4), float32], Tensor[(10, 11, 5), int8], Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(13, 16, 8), uint64], Tensor[(1664), uint64], Tensor[(154), int8]) */;
  %1027 = @func_4637() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32], Tensor[(6, 9, 12), int32], Tensor[(648), int32], int8) */;
  %1028 = %1027.3;
  %1029 = cast(%1028, dtype="float64") /* ty=Tensor[(648), float64] */;
  %1030 = acos(%1029) /* ty=Tensor[(648), float64] */;
  %1031 = cast(%1030, dtype="uint16") /* ty=Tensor[(648), uint16] */;
  %1032 = cast(%var_4838, dtype="uint16") /* ty=uint16 */;
  %1033 = %1026.4;
  %1034 = left_shift(%1031, %1032) /* ty=Tensor[(648), uint16] */;
  (%1033, meta[relay.Constant][85] /* ty=Tensor[(60), float64] */, %var_4839, %var_4840, %1034)
}

def @func_8634(%var_8611: Tensor[(14, 7, 3), float32]) -> (Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) {
  %1035 = @func_6604() /* ty=Tensor[(14, 7, 3), float32] */;
  %1036 = cast(%var_8611, dtype="float32") /* ty=Tensor[(14, 7, 3), float32] */;
  %1037 = shape_of(%1035, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1038 = cast(%1035, dtype="float32") /* ty=Tensor[(14, 7, 3), float32] */;
  %1039 = dyn.reshape(%1036, %1037, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1040 = @func_4775() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %1041 = divide(%1038, %1039) /* ty=Tensor[(14, 7, 3), float32] */;
  %1042 = %1040.0;
  (%1041, %1042)
}

def @func_5526(%var_5505: bool) -> Tensor[(14, 1, 8), bool] {
  %1043 = cast(%var_5505, dtype="bool") /* ty=bool */;
  %1044 = cast(meta[relay.Constant][86] /* ty=Tensor[(14, 1, 8), bool] */, dtype="bool") /* ty=Tensor[(14, 1, 8), bool] */;
  logical_or(%1043, %1044) /* ty=Tensor[(14, 1, 8), bool] */
}

def @func_3269(%var_3179: Tensor[(6, 15, 4), float64], %var_3180: Tensor[(6, 15, 4), float64], %var_3210: Tensor[(180), uint16], %var_3227: Tensor[(11, 14), int8], %var_3267: Tensor[(528), float32]) -> (Tensor[(5, 4, 9), uint16], Tensor[(180), uint16], Tensor[(14, 1, 11), int8], int8, Tensor[(11, 14), int8], Tensor[(14, 1, 11), int8], Tensor[(1, 11, 12), uint64], Tensor[(3, 44), uint64], Tensor[(6, 15, 4), uint64], Tensor[(12, 11, 4), float32], Tensor[(528), float32]) {
  %1045 = cast(%var_3210, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %1046 = cast(%var_3210, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %1047 = reshape(%1045, newshape=[5, 4, 9]) /* ty=Tensor[(5, 4, 9), uint16] */;
  %1048 = reshape(%1046, newshape=[5, 4, 9]) /* ty=Tensor[(5, 4, 9), uint16] */;
  %1049 = @func_666(%1047, %1048) /* ty=(Tensor[(5, 4, 9), uint16], Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(12, 11, 4), float32], Tensor[(12, 11, 4), float32]) */;
  %1050 = cast(meta[relay.Constant][87] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %1051 = cast(%var_3227, dtype="int8") /* ty=Tensor[(11, 14), int8] */;
  %1052 = reshape(%1050, newshape=[]) /* ty=int8 */;
  %1053 = reshape(%1051, newshape=[14, 1, 11]) /* ty=Tensor[(14, 1, 11), int8] */;
  %1054 = @func_134(%1052, %1053) /* ty=(Tensor[(14, 1, 11), int8],) */;
  %1055 = cast(meta[relay.Constant][87] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %1056 = %1054.0;
  %1057 = cast(%1056, dtype="int8") /* ty=Tensor[(14, 1, 11), int8] */;
  %1058 = reshape(%1055, newshape=[]) /* ty=int8 */;
  %1059 = reshape(%1057, newshape=[14, 1, 11]) /* ty=Tensor[(14, 1, 11), int8] */;
  %1060 = @func_134(%1058, %1059) /* ty=(Tensor[(14, 1, 11), int8],) */;
  %1061 = cast(meta[relay.Constant][88] /* ty=Tensor[(3, 44), uint64] */, dtype="uint64") /* ty=Tensor[(3, 44), uint64] */;
  %1062 = reshape(%1061, newshape=[1, 11, 12]) /* ty=Tensor[(1, 11, 12), uint64] */;
  %1063 = @func_2237(%1062) /* ty=(Tensor[(1, 11, 12), uint64],) */;
  %1064 = cast(%var_3180, dtype="float64") /* ty=Tensor[(6, 15, 4), float64] */;
  %1065 = shape_of(%var_3179, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1066 = cast(%var_3179, dtype="float64") /* ty=Tensor[(6, 15, 4), float64] */;
  %1067 = dyn.reshape(%1064, %1065, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1068 = subtract(%1066, %1067) /* ty=Tensor[(6, 15, 4), float64] */;
  %1069 = cast(%1068, dtype="float32") /* ty=Tensor[(6, 15, 4), float32] */;
  %1070 = asinh(%1069) /* ty=Tensor[(6, 15, 4), float32] */;
  %1071 = cast(%1068, dtype="float64") /* ty=Tensor[(6, 15, 4), float64] */;
  %1072 = shape_of(%1070, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1073 = cast(%1070, dtype="float64") /* ty=Tensor[(6, 15, 4), float64] */;
  %1074 = dyn.reshape(%1071, %1072, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1075 = power(%1073, %1074) /* ty=Tensor[(6, 15, 4), float64] */;
  %1076 = cast(%var_3180, dtype="uint64") /* ty=Tensor[(6, 15, 4), uint64] */;
  %1077 = shape_of(%1075, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1078 = cast(%1075, dtype="uint64") /* ty=Tensor[(6, 15, 4), uint64] */;
  %1079 = dyn.reshape(%1076, %1077, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1080 = cast(%var_3267, dtype="float32") /* ty=Tensor[(528), float32] */;
  %1081 = reshape(%1080, newshape=[12, 11, 4]) /* ty=Tensor[(12, 11, 4), float32] */;
  %1082 = %1049.0;
  %1083 = %1060.0;
  %1084 = %1063.0;
  %1085 = bitwise_or(%1078, %1079) /* ty=Tensor[(6, 15, 4), uint64] */;
  %1086 = @func_339(%1081) /* ty=Tensor[(12, 11, 4), float32] */;
  (%1082, %var_3210, %1056, meta[relay.Constant][87] /* ty=int8 */, %var_3227, %1083, %1084, meta[relay.Constant][88] /* ty=Tensor[(3, 44), uint64] */, %1085, %1086, %var_3267)
}

def @func_8580() -> (Tensor[(5, 1, 14), float32],) {
  %1087 = @func_5676() /* ty=(Tensor[(14, 7, 3), float32], Tensor[(5, 1, 14), float32], Tensor[(70), float32]) */;
  %1088 = %1087.1;
  (%1088,)
}

def @func_7388(%var_7365: Tensor[(3, 14, 7), int64]) -> (Tensor[(5, 1, 14), float32], Tensor[(70), float32], Tensor[(3, 14, 7), float64]) {
  %1089 = cast(meta[relay.Constant][89] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
  %1090 = reshape(%1089, newshape=[70]) /* ty=Tensor[(70), float32] */;
  %1091 = @func_6764(%1090) /* ty=(Tensor[(14, 7, 3), bool], Tensor[(5, 1, 14), float32], Tensor[(70), float32]) */;
  %1092 = cast(meta[relay.Constant][90] /* ty=Tensor[(3, 14, 7), int64] */, dtype="int64") /* ty=Tensor[(3, 14, 7), int64] */;
  %1093 = shape_of(%var_7365, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1094 = cast(%var_7365, dtype="int64") /* ty=Tensor[(3, 14, 7), int64] */;
  %1095 = dyn.reshape(%1092, %1093, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1096 = multiply(%1094, %1095) /* ty=Tensor[(3, 14, 7), int64] */;
  %1097 = cast(%1096, dtype="float64") /* ty=Tensor[(3, 14, 7), float64] */;
  %1098 = sinh(%1097) /* ty=Tensor[(3, 14, 7), float64] */;
  %1099 = cast(%1098, dtype="float64") /* ty=Tensor[(3, 14, 7), float64] */;
  %1100 = %1091.1;
  %1101 = log10(%1099) /* ty=Tensor[(3, 14, 7), float64] */;
  (%1100, meta[relay.Constant][89] /* ty=Tensor[(70), float32] */, %1101)
}

def @func_9903(%var_9883: Tensor[(4, 2, 16), uint64]) -> (Tensor[(4, 2, 16), bool],) {
  %1102 = cast(%var_9883, dtype="bool") /* ty=Tensor[(4, 2, 16), bool] */;
  %1103 = shape_of(meta[relay.Constant][91] /* ty=Tensor[(4, 2, 16), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1104 = cast(meta[relay.Constant][91] /* ty=Tensor[(4, 2, 16), uint64] */, dtype="bool") /* ty=Tensor[(4, 2, 16), bool] */;
  %1105 = dyn.reshape(%1102, %1103, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1106 = not_equal(%1104, %1105) /* ty=Tensor[(4, 2, 16), bool] */;
  (%1106,)
}

def @func_7652() -> Tensor[(14, 7, 3), float32] {
  %1107 = @func_4775() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %1107.0
}

def @func_4156(%var_4154: Tensor[(264, 2), float32]) -> (Tensor[(14, 7, 3), float32], Tensor[(2816), float64], Tensor[(144, 4), int8], Tensor[(154), int8], Tensor[(2, 1408), float64], Tensor[(12, 11, 4), float32], Tensor[(264, 2), float32]) {
  %1108 = @func_4016() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %1109 = cast(meta[relay.Constant][92] /* ty=Tensor[(144, 4), int8] */, dtype="int8") /* ty=Tensor[(144, 4), int8] */;
  %1110 = cast(meta[relay.Constant][92] /* ty=Tensor[(144, 4), int8] */, dtype="int8") /* ty=Tensor[(144, 4), int8] */;
  %1111 = cast(meta[relay.Constant][93] /* ty=Tensor[(154), int8] */, dtype="int8") /* ty=Tensor[(154), int8] */;
  %1112 = cast(meta[relay.Constant][94] /* ty=Tensor[(2, 1408), float64] */, dtype="float64") /* ty=Tensor[(2, 1408), float64] */;
  %1113 = reshape(%1109, newshape=[12, 8, 6]) /* ty=Tensor[(12, 8, 6), int8] */;
  %1114 = reshape(%1110, newshape=[12, 8, 6]) /* ty=Tensor[(12, 8, 6), int8] */;
  %1115 = reshape(%1111, newshape=[154]) /* ty=Tensor[(154), int8] */;
  %1116 = reshape(%1112, newshape=[2816]) /* ty=Tensor[(2816), float64] */;
  %1117 = @func_3697(%1113, %1114, %1115, %1116) /* ty=(Tensor[(12, 8, 6), int8], Tensor[(12, 8, 6), float32], Tensor[(60), float64], int8, Tensor[(154), int8], Tensor[(2816), float64]) */;
  %1118 = cast(%var_4154, dtype="float32") /* ty=Tensor[(264, 2), float32] */;
  %1119 = reshape(%1118, newshape=[12, 11, 4]) /* ty=Tensor[(12, 11, 4), float32] */;
  %1120 = %1108.0;
  %1121 = %1117.5;
  %1122 = @func_339(%1119) /* ty=Tensor[(12, 11, 4), float32] */;
  (%1120, %1121, meta[relay.Constant][92] /* ty=Tensor[(144, 4), int8] */, meta[relay.Constant][93] /* ty=Tensor[(154), int8] */, meta[relay.Constant][94] /* ty=Tensor[(2, 1408), float64] */, %1122, %var_4154)
}

def @func_8510(%var_8503: Tensor[(10, 8, 9), int32], %var_8504: Tensor[(10, 8, 9), int32]) -> Tensor[(10, 8, 9), int32] {
  %1123 = cast(%var_8504, dtype="int32") /* ty=Tensor[(10, 8, 9), int32] */;
  %1124 = shape_of(%var_8503, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1125 = cast(%var_8503, dtype="int32") /* ty=Tensor[(10, 8, 9), int32] */;
  %1126 = dyn.reshape(%1123, %1124, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  bitwise_and(%1125, %1126) /* ty=Tensor[(10, 8, 9), int32] */
}

def @func_5161() -> (Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) {
  %1127 = @func_4016() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %1128 = @func_4212() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %1129 = %1127.0;
  %1130 = %1128.0;
  (%1129, %1130)
}

def @func_5676() -> (Tensor[(14, 7, 3), float32], Tensor[(5, 1, 14), float32], Tensor[(70), float32]) {
  %1131 = @func_4775() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %1132 = cast(meta[relay.Constant][95] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
  %1133 = reshape(%1132, newshape=[5, 1, 14]) /* ty=Tensor[(5, 1, 14), float32] */;
  %1134 = %1131.0;
  %1135 = @func_5396(%1133) /* ty=Tensor[(5, 1, 14), float32] */;
  (%1134, %1135, meta[relay.Constant][95] /* ty=Tensor[(70), float32] */)
}

def @func_10390() -> (Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) {
  %1136 = @func_5161() /* ty=(Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) */;
  %1137 = @func_4212() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %1138 = %1136.0;
  %1139 = %1137.0;
  %1140 = @func_8107() /* ty=Tensor[(14, 7, 3), float32] */;
  (%1138, %1139, %1140)
}

def @func_9235() -> (Tensor[(14, 7, 3), float32],) {
  %1141 = @func_4212() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %1142 = %1141.0;
  (%1142,)
}

def @func_7254(%var_7232: Tensor[(7, 10, 13), uint16], %var_7233: Tensor[(7, 10, 13), uint16]) -> (Tensor[(7, 10, 13), uint16], Tensor[(16, 12, 12), float64], Tensor[(5, 9, 4), float64], Tensor[(1, 45), float64]) {
  %1143 = cast(%var_7233, dtype="uint16") /* ty=Tensor[(7, 10, 13), uint16] */;
  %1144 = shape_of(%var_7232, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1145 = cast(%var_7232, dtype="uint16") /* ty=Tensor[(7, 10, 13), uint16] */;
  %1146 = dyn.reshape(%1143, %1144, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1147 = cast(meta[relay.Constant][96] /* ty=Tensor[(1, 45), float64] */, dtype="float64") /* ty=Tensor[(1, 45), float64] */;
  %1148 = reshape(%1147, newshape=[5, 9, 1]) /* ty=Tensor[(5, 9, 1), float64] */;
  %1149 = @func_4551(%1148) /* ty=(Tensor[(5, 9, 4), float64], Tensor[(5, 9, 4), float64]) */;
  %1150 = left_shift(%1145, %1146) /* ty=Tensor[(7, 10, 13), uint16] */;
  %1151 = @func_5650() /* ty=Tensor[(16, 12, 12), float64] */;
  %1152 = %1149.0;
  (%1150, %1151, %1152, meta[relay.Constant][96] /* ty=Tensor[(1, 45), float64] */)
}

def @func_6851() -> (int8, Tensor[(14, 7, 3), float32]) {
  %1153 = @func_4637() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32], Tensor[(6, 9, 12), int32], Tensor[(648), int32], int8) */;
  %1154 = %1153.4;
  %1155 = cast(%1154, dtype="int8") /* ty=int8 */;
  %1156 = reshape(%1155, newshape=[]) /* ty=int8 */;
  %1157 = @func_6642(%1156) /* ty=(Tensor[(14, 7, 3), float32], Tensor[(10, 11, 5), int8], int8) */;
  %1158 = %1157.0;
  (%1154, %1158)
}

def @func_10517(%var_10502: int8) -> (Tensor[(14, 7, 3), bool], Tensor[(10, 11, 5), int8], int8, Tensor[(14, 7, 3), float32]) {
  %1159 = @func_8754() /* ty=(Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), bool], Tensor[(33, 4), uint64], Tensor[(16, 12, 12), float64]) */;
  %1160 = cast(%var_10502, dtype="int8") /* ty=int8 */;
  %1161 = reshape(%1160, newshape=[]) /* ty=int8 */;
  %1162 = @func_6642(%1161) /* ty=(Tensor[(14, 7, 3), float32], Tensor[(10, 11, 5), int8], int8) */;
  %1163 = @func_10335() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %1164 = %1159.2;
  %1165 = %1162.1;
  %1166 = %1163.0;
  (%1164, %1165, %var_10502, %1166)
}

def @func_1872(%var_1830: Tensor[(60), float64], %var_1831: int8, %var_1832: Tensor[(154), float32], %var_1857: Tensor[(1664), uint64]) -> (Tensor[(9, 10), float64], Tensor[(6, 9, 12), int32], Tensor[(648), int32], Tensor[(60), float64], int8, Tensor[(154), float32], Tensor[(12, 11, 4), float32], Tensor[(180, 1), uint16], Tensor[(12, 11, 4), float32], Tensor[(10, 11, 5), int8], Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(13, 16, 8), uint64], Tensor[(1664), uint64], Tensor[(154), int8]) {
  %1167 = cast(meta[relay.Constant][97] /* ty=Tensor[(9, 10), float64] */, dtype="float64") /* ty=Tensor[(9, 10), float64] */;
  %1168 = cast(meta[relay.Constant][98] /* ty=Tensor[(648), int32] */, dtype="int32") /* ty=Tensor[(648), int32] */;
  %1169 = cast(meta[relay.Constant][98] /* ty=Tensor[(648), int32] */, dtype="int32") /* ty=Tensor[(648), int32] */;
  %1170 = cast(%var_1830, dtype="float64") /* ty=Tensor[(60), float64] */;
  %1171 = cast(%var_1831, dtype="int8") /* ty=int8 */;
  %1172 = cast(%var_1832, dtype="float32") /* ty=Tensor[(154), float32] */;
  %1173 = reshape(%1168, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), int32] */;
  %1174 = reshape(%1169, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), int32] */;
  %1175 = reshape(%1170, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %1176 = reshape(%1171, newshape=[]) /* ty=int8 */;
  %1177 = reshape(%1172, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %1178 = @func_1737(%1173, %1174, %1175, %1176, %1177) /* ty=(Tensor[(6, 9, 12), int32], Tensor[(60), float64], int8, Tensor[(154), bool]) */;
  %1179 = cast(meta[relay.Constant][99] /* ty=Tensor[(180, 1), uint16] */, dtype="uint16") /* ty=Tensor[(180, 1), uint16] */;
  %1180 = cast(meta[relay.Constant][99] /* ty=Tensor[(180, 1), uint16] */, dtype="uint16") /* ty=Tensor[(180, 1), uint16] */;
  %1181 = reshape(%1179, newshape=[5, 4, 9]) /* ty=Tensor[(5, 4, 9), uint16] */;
  %1182 = reshape(%1180, newshape=[5, 4, 9]) /* ty=Tensor[(5, 4, 9), uint16] */;
  %1183 = @func_666(%1181, %1182) /* ty=(Tensor[(5, 4, 9), uint16], Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(12, 11, 4), float32], Tensor[(12, 11, 4), float32]) */;
  %1184 = %1183.3;
  %1185 = cast(%1184, dtype="float32") /* ty=Tensor[(12, 11, 4), float32] */;
  %1186 = reshape(%1185, newshape=[12, 11, 4]) /* ty=Tensor[(12, 11, 4), float32] */;
  %1187 = cast(%var_1831, dtype="int8") /* ty=int8 */;
  %1188 = reshape(%1187, newshape=[]) /* ty=int8 */;
  %1189 = @func_1574(%1188) /* ty=(Tensor[(10, 11, 5), int8],) */;
  %1190 = cast(meta[relay.Constant][99] /* ty=Tensor[(180, 1), uint16] */, dtype="uint16") /* ty=Tensor[(180, 1), uint16] */;
  %1191 = cast(%var_1831, dtype="int8") /* ty=int8 */;
  %1192 = reshape(%1190, newshape=[180]) /* ty=Tensor[(180), uint16] */;
  %1193 = reshape(%1191, newshape=[]) /* ty=int8 */;
  %1194 = @func_897(%1192, %1193) /* ty=(Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(528), float32], Tensor[(180), uint16], Tensor[(14, 1, 11), int8], int8, Tensor[(154), int8], Tensor[(12, 11, 4), float32], Tensor[(14, 14, 10), float32]) */;
  %1195 = cast(meta[relay.Constant][99] /* ty=Tensor[(180, 1), uint16] */, dtype="uint16") /* ty=Tensor[(180, 1), uint16] */;
  %1196 = cast(meta[relay.Constant][99] /* ty=Tensor[(180, 1), uint16] */, dtype="uint16") /* ty=Tensor[(180, 1), uint16] */;
  %1197 = reshape(%1195, newshape=[5, 4, 9]) /* ty=Tensor[(5, 4, 9), uint16] */;
  %1198 = reshape(%1196, newshape=[5, 4, 9]) /* ty=Tensor[(5, 4, 9), uint16] */;
  %1199 = @func_666(%1197, %1198) /* ty=(Tensor[(5, 4, 9), uint16], Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(12, 11, 4), float32], Tensor[(12, 11, 4), float32]) */;
  %1200 = cast(%var_1857, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
  %1201 = cast(%var_1857, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
  %1202 = reshape(%1200, newshape=[13, 16, 8]) /* ty=Tensor[(13, 16, 8), uint64] */;
  %1203 = reshape(%1201, newshape=[13, 16, 8]) /* ty=Tensor[(13, 16, 8), uint64] */;
  %1204 = @func_1758(%1202, %1203) /* ty=(Tensor[(13, 16, 8), uint64],) */;
  %1205 = cast(%var_1830, dtype="float64") /* ty=Tensor[(60), float64] */;
  %1206 = cast(%var_1831, dtype="int8") /* ty=int8 */;
  %1207 = reshape(%1205, newshape=[10, 2, 3]) /* ty=Tensor[(10, 2, 3), float64] */;
  %1208 = reshape(%1206, newshape=[]) /* ty=int8 */;
  %1209 = @func_403(%1207, %1208) /* ty=(Tensor[(10, 2, 3), float64], Tensor[(14, 1, 11), int8], int8, Tensor[(154), int8]) */;
  %1210 = exp(%1167) /* ty=Tensor[(9, 10), float64] */;
  %1211 = %1178.0;
  %1212 = @func_339(%1186) /* ty=Tensor[(12, 11, 4), float32] */;
  %1213 = %1189.0;
  %1214 = %1194.0;
  %1215 = %1199.2;
  %1216 = %1204.0;
  %1217 = %1209.3;
  (%1210, %1211, meta[relay.Constant][98] /* ty=Tensor[(648), int32] */, %var_1830, %var_1831, %var_1832, %1184, meta[relay.Constant][99] /* ty=Tensor[(180, 1), uint16] */, %1212, %1213, %1214, %1215, %1216, %var_1857, %1217)
}

def @func_666(%var_614: Tensor[(5, 4, 9), uint16], %var_615: Tensor[(5, 4, 9), uint16]) -> (Tensor[(5, 4, 9), uint16], Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(12, 11, 4), float32], Tensor[(12, 11, 4), float32]) {
  %1218 = cast(%var_615, dtype="uint16") /* ty=Tensor[(5, 4, 9), uint16] */;
  %1219 = shape_of(%var_614, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1220 = cast(%var_614, dtype="uint16") /* ty=Tensor[(5, 4, 9), uint16] */;
  %1221 = dyn.reshape(%1218, %1219, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1222 = cast(meta[relay.Constant][100] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %1223 = reshape(%1222, newshape=[12, 11, 4]) /* ty=Tensor[(12, 11, 4), float32] */;
  %1224 = cast(meta[relay.Constant][100] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %1225 = reshape(%1224, newshape=[12, 11, 4]) /* ty=Tensor[(12, 11, 4), float32] */;
  %1226 = @func_339(%1223) /* ty=Tensor[(12, 11, 4), float32] */;
  %1227 = cast(%1226, dtype="float32") /* ty=Tensor[(12, 11, 4), float32] */;
  %1228 = reshape(%1227, newshape=[12, 11, 4]) /* ty=Tensor[(12, 11, 4), float32] */;
  %1229 = maximum(%1220, %1221) /* ty=Tensor[(5, 4, 9), uint16] */;
  %1230 = @func_339(%1225) /* ty=Tensor[(12, 11, 4), float32] */;
  %1231 = @func_339(%1228) /* ty=Tensor[(12, 11, 4), float32] */;
  (%1229, %1226, meta[relay.Constant][100] /* ty=Tensor[(528), float32] */, %1230, %1231)
}

def @func_9633() -> (Tensor[(14, 7, 3), float32],) {
  %1232 = @func_8775() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %1233 = %1232.0;
  (%1233,)
}

def @func_10363() -> Tensor[(14, 7, 3), bool] {
  %1234 = @func_9004() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32]) */;
  %1234.0
}

def @func_10175(%var_10115: Tensor[(1664), uint64], %var_10154: int8) -> (Tensor[(16, 12, 12), float64], Tensor[(13, 16, 8), uint64], Tensor[(1664), uint64], Tensor[(648), bool], Tensor[(648), int32], Tensor[(14, 7, 3), float32], int8) {
  %1235 = cast(%var_10115, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
  %1236 = cast(%var_10115, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
  %1237 = reshape(%1235, newshape=[13, 16, 8]) /* ty=Tensor[(13, 16, 8), uint64] */;
  %1238 = reshape(%1236, newshape=[13, 16, 8]) /* ty=Tensor[(13, 16, 8), uint64] */;
  %1239 = @func_1758(%1237, %1238) /* ty=(Tensor[(13, 16, 8), uint64],) */;
  %1240 = cast(meta[relay.Constant][101] /* ty=Tensor[(648), int32] */, dtype="int32") /* ty=Tensor[(648), int32] */;
  %1241 = reshape(%1240, newshape=[648]) /* ty=Tensor[(648), int32] */;
  %1242 = @func_5470(%1241) /* ty=Tensor[(648), bool] */;
  %1243 = cast(%1242, dtype="int32") /* ty=Tensor[(648), int32] */;
  %1244 = cast(%var_10154, dtype="int8") /* ty=int8 */;
  %1245 = reshape(%1243, newshape=[648]) /* ty=Tensor[(648), int32] */;
  %1246 = reshape(%1244, newshape=[]) /* ty=int8 */;
  %1247 = @func_4590(%1245, %1246) /* ty=(Tensor[(14, 7, 3), float32], Tensor[(6, 9, 12), int32], Tensor[(648), int32], Tensor[(60), float64], int8, Tensor[(11, 14), float32], Tensor[(14, 7, 3), float32]) */;
  %1248 = @func_5650() /* ty=Tensor[(16, 12, 12), float64] */;
  %1249 = %1239.0;
  %1250 = %1247.6;
  (%1248, %1249, %var_10115, %1242, meta[relay.Constant][101] /* ty=Tensor[(648), int32] */, %1250, %var_10154)
}

def @func_5655() -> Tensor[(14, 7, 3), float32] {
  %1251 = @func_5050() /* ty=(Tensor[(14, 7, 3), float64], Tensor[(14, 7, 3), float32]) */;
  %1251.1
}

def @func_4775() -> (Tensor[(14, 7, 3), float32],) {
  %1252 = @func_4016() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %1253 = %1252.0;
  (%1253,)
}

def @func_8408() -> (Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) {
  %1254 = @func_4212() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %1255 = %1254.0;
  %1256 = @func_6604() /* ty=Tensor[(14, 7, 3), float32] */;
  (%1255, %1256)
}

def @func_7508(%var_7469: int8, %var_7470: Tensor[(154, 1), float32], %var_7482: Tensor[(180), uint16], %var_7483: Tensor[(528), float32]) -> (Tensor[(14, 7, 3), uint32], Tensor[(5, 1, 14), float32], int8, Tensor[(154, 1), float32], Tensor[(14, 1, 11), int8], Tensor[(360), float64], Tensor[(180), uint16], Tensor[(528), float32]) {
  %1257 = @func_5273() /* ty=(Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), uint32]) */;
  %1258 = cast(%var_7469, dtype="int8") /* ty=int8 */;
  %1259 = cast(%var_7470, dtype="float32") /* ty=Tensor[(154, 1), float32] */;
  %1260 = reshape(%1258, newshape=[]) /* ty=int8 */;
  %1261 = reshape(%1259, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %1262 = @func_5913(%1260, %1261) /* ty=(Tensor[(14, 7, 3), float32], Tensor[(16, 12, 12), float64], Tensor[(5, 1, 14), float32], Tensor[(70), float32], Tensor[(10, 11, 5), int8], Tensor[(1, 60), float64], int8, Tensor[(154), float32], Tensor[(1664), uint64], Tensor[(6, 9, 12), int32]) */;
  %1263 = cast(meta[relay.Constant][102] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %1264 = cast(meta[relay.Constant][102] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %1265 = cast(%var_7482, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %1266 = cast(%var_7470, dtype="int8") /* ty=Tensor[(154, 1), int8] */;
  %1267 = cast(%var_7483, dtype="float32") /* ty=Tensor[(528), float32] */;
  %1268 = reshape(%1263, newshape=[6, 15, 4]) /* ty=Tensor[(6, 15, 4), float64] */;
  %1269 = reshape(%1264, newshape=[6, 15, 4]) /* ty=Tensor[(6, 15, 4), float64] */;
  %1270 = reshape(%1265, newshape=[180]) /* ty=Tensor[(180), uint16] */;
  %1271 = reshape(%1266, newshape=[11, 14]) /* ty=Tensor[(11, 14), int8] */;
  %1272 = reshape(%1267, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %1273 = @func_3269(%1268, %1269, %1270, %1271, %1272) /* ty=(Tensor[(5, 4, 9), uint16], Tensor[(180), uint16], Tensor[(14, 1, 11), int8], int8, Tensor[(11, 14), int8], Tensor[(14, 1, 11), int8], Tensor[(1, 11, 12), uint64], Tensor[(3, 44), uint64], Tensor[(6, 15, 4), uint64], Tensor[(12, 11, 4), float32], Tensor[(528), float32]) */;
  %1274 = %1257.1;
  %1275 = %1262.2;
  %1276 = %1273.2;
  (%1274, %1275, %var_7469, %var_7470, %1276, meta[relay.Constant][102] /* ty=Tensor[(360), float64] */, %var_7482, %var_7483)
}

def @func_4212() -> (Tensor[(14, 7, 3), float32],) {
  %1277 = @func_4016() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %1278 = %1277.0;
  (%1278,)
}

def @func_10795() -> (Tensor[(14, 7, 3), float64],) {
  %1279 = @func_7558() /* ty=(Tensor[(14, 7, 3), float64],) */;
  %1280 = %1279.0;
  (%1280,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_5650() -> Tensor[(16, 12, 12), float64] {
  @func_4613() /* ty=Tensor[(16, 12, 12), float64] */
}

def @func_1758(%var_1747: Tensor[(13, 16, 8), uint64], %var_1748: Tensor[(13, 16, 8), uint64]) -> (Tensor[(13, 16, 8), uint64],) {
  %0 = cast(%var_1748, dtype="uint64") /* ty=Tensor[(13, 16, 8), uint64] */;
  %1 = shape_of(%var_1747, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_1747, dtype="uint64") /* ty=Tensor[(13, 16, 8), uint64] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %4 = bitwise_xor(%2, %3) /* ty=Tensor[(13, 16, 8), uint64] */;
  (%4,)
}

def @func_5470(%var_5458: Tensor[(648), int32]) -> Tensor[(648), bool] {
  %5 = @func_4637() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32], Tensor[(6, 9, 12), int32], Tensor[(648), int32], int8) */;
  %6 = %5.3;
  %7 = cast(%var_5458, dtype="bool") /* ty=Tensor[(648), bool] */;
  %8 = shape_of(%6, dtype="int32") /* ty=Tensor[(1), int32] */;
  %9 = cast(%6, dtype="bool") /* ty=Tensor[(648), bool] */;
  %10 = dyn.reshape(%7, %8, newshape=[]) /* ty=Tensor[(?), bool] */;
  equal(%9, %10) /* ty=Tensor[(648), bool] */
}

def @func_10900() -> (Tensor[(14, 7, 3), float64], Tensor[(4, 10, 9), float32], Tensor[(360), float32]) {
  %17 = fn () -> (Tensor[(14, 7, 3), float64], Tensor[(4, 10, 9), float32], Tensor[(360), float32]) {
    %11 = @func_7558() /* ty=(Tensor[(14, 7, 3), float64],) */;
    %12 = cast(meta[relay.Constant][0] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
    %13 = reshape(%12, newshape=[4, 10, 9]) /* ty=Tensor[(4, 10, 9), float32] */;
    %14 = @func_5335(%13) /* ty=(Tensor[(6, 9, 12), int32], Tensor[(4, 10, 9), float32]) */;
    %15 = %11.0;
    %16 = %14.1;
    (%15, %16, meta[relay.Constant][0] /* ty=Tensor[(360), float32] */)
  };
  %17() /* ty=(Tensor[(14, 7, 3), float64], Tensor[(4, 10, 9), float32], Tensor[(360), float32]) */
}

def @func_7292() -> (Tensor[(14, 7, 3), float32],) {
  %20 = fn () -> (Tensor[(14, 7, 3), float32],) {
    %18 = @func_4212() /* ty=(Tensor[(14, 7, 3), float32],) */;
    %19 = %18.0;
    (%19,)
  };
  %20() /* ty=(Tensor[(14, 7, 3), float32],) */
}

def @func_8921() -> (Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) {
  %25 = fn () -> (Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) {
    %21 = @func_5273() /* ty=(Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), uint32]) */;
    %22 = @func_5161() /* ty=(Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) */;
    %23 = %21.0;
    %24 = %22.1;
    (%23, %24)
  };
  %25() /* ty=(Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) */
}

def @func_7559() -> (Tensor[(14, 7, 3), float64],) {
  %28 = fn () -> (Tensor[(14, 7, 3), float64],) {
    %26 = @func_5938() /* ty=(Tensor[(14, 7, 3), float64],) */;
    %27 = %26.0;
    (%27,)
  };
  %28() /* ty=(Tensor[(14, 7, 3), float64],) */
}

def @func_4018() -> (Tensor[(14, 7, 3), float32],) {
  @func_4016() /* ty=(Tensor[(14, 7, 3), float32],) */
}

def @func_3275(%var_3270: Tensor[(6, 15, 4), float64], %var_3271: Tensor[(6, 15, 4), float64], %var_3272: Tensor[(180), uint16], %var_3273: Tensor[(11, 14), int8], %var_3274: Tensor[(528), float32]) -> (Tensor[(5, 4, 9), uint16], Tensor[(180), uint16], Tensor[(14, 1, 11), int8], int8, Tensor[(11, 14), int8], Tensor[(14, 1, 11), int8], Tensor[(1, 11, 12), uint64], Tensor[(3, 44), uint64], Tensor[(6, 15, 4), uint64], Tensor[(12, 11, 4), float32], Tensor[(528), float32]) {
  %71 = fn (%var_3179: Tensor[(6, 15, 4), float64], %var_3180: Tensor[(6, 15, 4), float64], %var_3210: Tensor[(180), uint16], %var_3227: Tensor[(11, 14), int8], %var_3267: Tensor[(528), float32]) -> (Tensor[(5, 4, 9), uint16], Tensor[(180), uint16], Tensor[(14, 1, 11), int8], int8, Tensor[(11, 14), int8], Tensor[(14, 1, 11), int8], Tensor[(1, 11, 12), uint64], Tensor[(3, 44), uint64], Tensor[(6, 15, 4), uint64], Tensor[(12, 11, 4), float32], Tensor[(528), float32]) {
    %29 = cast(%var_3210, dtype="uint16") /* ty=Tensor[(180), uint16] */;
    %30 = cast(%var_3210, dtype="uint16") /* ty=Tensor[(180), uint16] */;
    %31 = reshape(%29, newshape=[5, 4, 9]) /* ty=Tensor[(5, 4, 9), uint16] */;
    %32 = reshape(%30, newshape=[5, 4, 9]) /* ty=Tensor[(5, 4, 9), uint16] */;
    %33 = @func_666(%31, %32) /* ty=(Tensor[(5, 4, 9), uint16], Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(12, 11, 4), float32], Tensor[(12, 11, 4), float32]) */;
    %34 = cast(meta[relay.Constant][1] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %35 = cast(%var_3227, dtype="int8") /* ty=Tensor[(11, 14), int8] */;
    %36 = reshape(%34, newshape=[]) /* ty=int8 */;
    %37 = reshape(%35, newshape=[14, 1, 11]) /* ty=Tensor[(14, 1, 11), int8] */;
    %38 = @func_134(%36, %37) /* ty=(Tensor[(14, 1, 11), int8],) */;
    %39 = cast(meta[relay.Constant][1] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %40 = %38.0;
    %41 = cast(%40, dtype="int8") /* ty=Tensor[(14, 1, 11), int8] */;
    %42 = reshape(%39, newshape=[]) /* ty=int8 */;
    %43 = reshape(%41, newshape=[14, 1, 11]) /* ty=Tensor[(14, 1, 11), int8] */;
    %44 = @func_134(%42, %43) /* ty=(Tensor[(14, 1, 11), int8],) */;
    %45 = cast(meta[relay.Constant][2] /* ty=Tensor[(3, 44), uint64] */, dtype="uint64") /* ty=Tensor[(3, 44), uint64] */;
    %46 = reshape(%45, newshape=[1, 11, 12]) /* ty=Tensor[(1, 11, 12), uint64] */;
    %47 = @func_2237(%46) /* ty=(Tensor[(1, 11, 12), uint64],) */;
    %48 = cast(%var_3180, dtype="float64") /* ty=Tensor[(6, 15, 4), float64] */;
    %49 = shape_of(%var_3179, dtype="int32") /* ty=Tensor[(3), int32] */;
    %50 = cast(%var_3179, dtype="float64") /* ty=Tensor[(6, 15, 4), float64] */;
    %51 = dyn.reshape(%48, %49, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %52 = subtract(%50, %51) /* ty=Tensor[(6, 15, 4), float64] */;
    %53 = cast(%52, dtype="float32") /* ty=Tensor[(6, 15, 4), float32] */;
    %54 = asinh(%53) /* ty=Tensor[(6, 15, 4), float32] */;
    %55 = cast(%52, dtype="float64") /* ty=Tensor[(6, 15, 4), float64] */;
    %56 = shape_of(%54, dtype="int32") /* ty=Tensor[(3), int32] */;
    %57 = cast(%54, dtype="float64") /* ty=Tensor[(6, 15, 4), float64] */;
    %58 = dyn.reshape(%55, %56, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %59 = power(%57, %58) /* ty=Tensor[(6, 15, 4), float64] */;
    %60 = cast(%var_3180, dtype="uint64") /* ty=Tensor[(6, 15, 4), uint64] */;
    %61 = shape_of(%59, dtype="int32") /* ty=Tensor[(3), int32] */;
    %62 = cast(%59, dtype="uint64") /* ty=Tensor[(6, 15, 4), uint64] */;
    %63 = dyn.reshape(%60, %61, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %64 = cast(%var_3267, dtype="float32") /* ty=Tensor[(528), float32] */;
    %65 = reshape(%64, newshape=[12, 11, 4]) /* ty=Tensor[(12, 11, 4), float32] */;
    %66 = %33.0;
    %67 = %44.0;
    %68 = %47.0;
    %69 = bitwise_or(%62, %63) /* ty=Tensor[(6, 15, 4), uint64] */;
    %70 = @func_339(%65) /* ty=Tensor[(12, 11, 4), float32] */;
    (%66, %var_3210, %40, meta[relay.Constant][1] /* ty=int8 */, %var_3227, %67, %68, meta[relay.Constant][2] /* ty=Tensor[(3, 44), uint64] */, %69, %70, %var_3267)
  };
  %71(%var_3270, %var_3271, %var_3272, %var_3273, %var_3274) /* ty=(Tensor[(5, 4, 9), uint16], Tensor[(180), uint16], Tensor[(14, 1, 11), int8], int8, Tensor[(11, 14), int8], Tensor[(14, 1, 11), int8], Tensor[(1, 11, 12), uint64], Tensor[(3, 44), uint64], Tensor[(6, 15, 4), uint64], Tensor[(12, 11, 4), float32], Tensor[(528), float32]) */
}

def @func_9206(%var_9204: Tensor[(60), float64], %var_9205: int8) -> (Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32], Tensor[(12, 11, 4), float32], Tensor[(60), float64], int8, Tensor[(154), float32], Tensor[(1664), uint64]) {
  %84 = fn (%var_9185: Tensor[(60), float64], %var_9186: int8) -> (Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32], Tensor[(12, 11, 4), float32], Tensor[(60), float64], int8, Tensor[(154), float32], Tensor[(1664), uint64]) {
    %72 = cast(%var_9185, dtype="float64") /* ty=Tensor[(60), float64] */;
    %73 = cast(%var_9186, dtype="int8") /* ty=int8 */;
    %74 = cast(meta[relay.Constant][3] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
    %75 = cast(meta[relay.Constant][4] /* ty=Tensor[(1664), uint64] */, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
    %76 = reshape(%72, newshape=[60]) /* ty=Tensor[(60), float64] */;
    %77 = reshape(%73, newshape=[]) /* ty=int8 */;
    %78 = reshape(%74, newshape=[154]) /* ty=Tensor[(154), float32] */;
    %79 = reshape(%75, newshape=[1664]) /* ty=Tensor[(1664), uint64] */;
    %80 = @func_1872(%76, %77, %78, %79) /* ty=(Tensor[(9, 10), float64], Tensor[(6, 9, 12), int32], Tensor[(648), int32], Tensor[(60), float64], int8, Tensor[(154), float32], Tensor[(12, 11, 4), float32], Tensor[(180, 1), uint16], Tensor[(12, 11, 4), float32], Tensor[(10, 11, 5), int8], Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(13, 16, 8), uint64], Tensor[(1664), uint64], Tensor[(154), int8]) */;
    %81 = @func_8779() /* ty=Tensor[(14, 7, 3), float32] */;
    %82 = @func_6604() /* ty=Tensor[(14, 7, 3), float32] */;
    %83 = %80.8;
    (%81, %82, %83, %var_9185, %var_9186, meta[relay.Constant][3] /* ty=Tensor[(154), float32] */, meta[relay.Constant][4] /* ty=Tensor[(1664), uint64] */)
  };
  %84(%var_9204, %var_9205) /* ty=(Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32], Tensor[(12, 11, 4), float32], Tensor[(60), float64], int8, Tensor[(154), float32], Tensor[(1664), uint64]) */
}

def @func_4882() -> (Tensor[(14, 7, 3), float32],) {
  @func_4880() /* ty=(Tensor[(14, 7, 3), float32],) */
}

def @func_4213() -> (Tensor[(14, 7, 3), float32],) {
  %87 = fn () -> (Tensor[(14, 7, 3), float32],) {
    %85 = @func_4016() /* ty=(Tensor[(14, 7, 3), float32],) */;
    %86 = %85.0;
    (%86,)
  };
  %87() /* ty=(Tensor[(14, 7, 3), float32],) */
}

def @func_5051() -> (Tensor[(14, 7, 3), float64], Tensor[(14, 7, 3), float32]) {
  %97 = fn () -> (Tensor[(14, 7, 3), float64], Tensor[(14, 7, 3), float32]) {
    %88 = @func_4375() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32]) */;
    %89 = %88.1;
    %90 = cast(meta[relay.Constant][5] /* ty=Tensor[(14, 7, 3), float32] */, dtype="float64") /* ty=Tensor[(14, 7, 3), float64] */;
    %91 = shape_of(%89, dtype="int32") /* ty=Tensor[(3), int32] */;
    %92 = cast(%89, dtype="float64") /* ty=Tensor[(14, 7, 3), float64] */;
    %93 = dyn.reshape(%90, %91, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %94 = cast(%89, dtype="float32") /* ty=Tensor[(14, 7, 3), float32] */;
    %95 = power(%92, %93) /* ty=Tensor[(14, 7, 3), float64] */;
    %96 = asin(%94) /* ty=Tensor[(14, 7, 3), float32] */;
    (%95, %96)
  };
  %97() /* ty=(Tensor[(14, 7, 3), float64], Tensor[(14, 7, 3), float32]) */
}

def @func_8510(%var_8503: Tensor[(10, 8, 9), int32], %var_8504: Tensor[(10, 8, 9), int32]) -> Tensor[(10, 8, 9), int32] {
  %98 = cast(%var_8504, dtype="int32") /* ty=Tensor[(10, 8, 9), int32] */;
  %99 = shape_of(%var_8503, dtype="int32") /* ty=Tensor[(3), int32] */;
  %100 = cast(%var_8503, dtype="int32") /* ty=Tensor[(10, 8, 9), int32] */;
  %101 = dyn.reshape(%98, %99, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  bitwise_and(%100, %101) /* ty=Tensor[(10, 8, 9), int32] */
}

def @func_10706(%var_10702: Tensor[(2, 6, 14), int32], %var_10703: Tensor[(108), float64], %var_10704: int8, %var_10705: Tensor[(154), float32]) -> (Tensor[(2, 6, 14), float64], Tensor[(2, 6, 9), float64], Tensor[(108), float64], Tensor[(16, 12, 12), float64], Tensor[(16, 12, 12), float64], int8, Tensor[(154), float32]) {
  @func_10700(%var_10702, %var_10703, %var_10704, %var_10705) /* ty=(Tensor[(2, 6, 14), float64], Tensor[(2, 6, 9), float64], Tensor[(108), float64], Tensor[(16, 12, 12), float64], Tensor[(16, 12, 12), float64], int8, Tensor[(154), float32]) */
}

def @func_9373() -> (Tensor[(14, 7, 3), float32],) {
  @func_9371() /* ty=(Tensor[(14, 7, 3), float32],) */
}

def @func_7229() -> Tensor[(14, 7, 3), float32] {
  %102 = @func_4375() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32]) */;
  %102.1
}

def @func_10391() -> (Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) {
  %108 = fn () -> (Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) {
    %103 = @func_5161() /* ty=(Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) */;
    %104 = @func_4212() /* ty=(Tensor[(14, 7, 3), float32],) */;
    %105 = %103.0;
    %106 = %104.0;
    %107 = @func_8107() /* ty=Tensor[(14, 7, 3), float32] */;
    (%105, %106, %107)
  };
  %108() /* ty=(Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) */
}

def @func_5612(%var_5602: Tensor[(6, 10, 12), float64], %var_5603: Tensor[(6, 10, 12), float64], %var_5610: int8) -> (Tensor[(6, 10, 12), float64], Tensor[(180), uint16], Tensor[(2816), float64], Tensor[(180, 1), uint16], int8) {
  %109 = cast(%var_5603, dtype="float64") /* ty=Tensor[(6, 10, 12), float64] */;
  %110 = shape_of(%var_5602, dtype="int32") /* ty=Tensor[(3), int32] */;
  %111 = cast(%var_5602, dtype="float64") /* ty=Tensor[(6, 10, 12), float64] */;
  %112 = dyn.reshape(%109, %110, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %113 = cast(meta[relay.Constant][6] /* ty=Tensor[(2816), float64] */, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %114 = cast(meta[relay.Constant][7] /* ty=Tensor[(180, 1), uint16] */, dtype="uint16") /* ty=Tensor[(180, 1), uint16] */;
  %115 = cast(%var_5610, dtype="int8") /* ty=int8 */;
  %116 = reshape(%113, newshape=[16, 16, 11]) /* ty=Tensor[(16, 16, 11), float64] */;
  %117 = reshape(%114, newshape=[180]) /* ty=Tensor[(180), uint16] */;
  %118 = reshape(%115, newshape=[]) /* ty=int8 */;
  %119 = @func_1938(%116, %117, %118) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(12, 11, 4), float32], Tensor[(180), uint16], int8) */;
  %120 = maximum(%111, %112) /* ty=Tensor[(6, 10, 12), float64] */;
  %121 = %119.2;
  (%120, %121, meta[relay.Constant][6] /* ty=Tensor[(2816), float64] */, meta[relay.Constant][7] /* ty=Tensor[(180, 1), uint16] */, %var_5610)
}

def @func_8109() -> Tensor[(14, 7, 3), float32] {
  @func_8107() /* ty=Tensor[(14, 7, 3), float32] */
}

def @func_4110(%var_4105: Tensor[(2816), float64], %var_4106: Tensor[(180), uint16], %var_4107: Tensor[(60), float64], %var_4108: Tensor[(154), float32], %var_4109: Tensor[(1664), uint64]) -> (Tensor[(14, 7, 3), float32], Tensor[(16, 16, 11), float64], Tensor[(5), int32], Tensor[(2816), float64], Tensor[(180), uint16], Tensor[(12, 11, 4), float32], Tensor[(60), float64], Tensor[(154), float32], Tensor[(16, 16, 11), float64], Tensor[(1664), int64]) {
  @func_4103(%var_4105, %var_4106, %var_4107, %var_4108, %var_4109) /* ty=(Tensor[(14, 7, 3), float32], Tensor[(16, 16, 11), float64], Tensor[(5), int32], Tensor[(2816), float64], Tensor[(180), uint16], Tensor[(12, 11, 4), float32], Tensor[(60), float64], Tensor[(154), float32], Tensor[(16, 16, 11), float64], Tensor[(1664), int64]) */
}

def @func_9222(%var_9210: Tensor[(3, 4, 11), float32], %var_9219: Tensor[(528), float32]) -> (Tensor[(3, 4, 11), float32], Tensor[(3, 4, 11), float32], Tensor[(12, 11, 4), float32], Tensor[(528), float32]) {
  %122 = cast(%var_9210, dtype="float32") /* ty=Tensor[(3, 4, 11), float32] */;
  %123 = cast(%var_9210, dtype="float32") /* ty=Tensor[(3, 4, 11), float32] */;
  %124 = cast(%var_9219, dtype="float32") /* ty=Tensor[(528), float32] */;
  %125 = reshape(%124, newshape=[12, 11, 4]) /* ty=Tensor[(12, 11, 4), float32] */;
  %126 = asin(%122) /* ty=Tensor[(3, 4, 11), float32] */;
  %127 = rsqrt(%123) /* ty=Tensor[(3, 4, 11), float32] */;
  %128 = @func_339(%125) /* ty=Tensor[(12, 11, 4), float32] */;
  (%126, %127, %128, %var_9219)
}

def @func_6388(%var_6385: Tensor[(648), int32], %var_6386: Tensor[(60), float64], %var_6387: Tensor[(1, 154), float32]) -> (Tensor[(14, 7, 3), float32], int8, Tensor[(648), int32], Tensor[(60), float64], int8, Tensor[(1, 154), float32], Tensor[(70), float32]) {
  %145 = fn (%var_6360: Tensor[(648), int32], %var_6361: Tensor[(60), float64], %var_6363: Tensor[(1, 154), float32]) -> (Tensor[(14, 7, 3), float32], int8, Tensor[(648), int32], Tensor[(60), float64], int8, Tensor[(1, 154), float32], Tensor[(70), float32]) {
    %129 = @func_5698() /* ty=(Tensor[(14, 7, 3), float64], Tensor[(14, 7, 3), float32]) */;
    %130 = cast(%var_6360, dtype="int32") /* ty=Tensor[(648), int32] */;
    %131 = cast(%var_6360, dtype="int32") /* ty=Tensor[(648), int32] */;
    %132 = cast(%var_6361, dtype="float64") /* ty=Tensor[(60), float64] */;
    %133 = cast(meta[relay.Constant][8] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %134 = cast(%var_6363, dtype="float32") /* ty=Tensor[(1, 154), float32] */;
    %135 = reshape(%130, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), int32] */;
    %136 = reshape(%131, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), int32] */;
    %137 = reshape(%132, newshape=[60]) /* ty=Tensor[(60), float64] */;
    %138 = reshape(%133, newshape=[]) /* ty=int8 */;
    %139 = reshape(%134, newshape=[154]) /* ty=Tensor[(154), float32] */;
    %140 = @func_1737(%135, %136, %137, %138, %139) /* ty=(Tensor[(6, 9, 12), int32], Tensor[(60), float64], int8, Tensor[(154), bool]) */;
    %141 = @func_5676() /* ty=(Tensor[(14, 7, 3), float32], Tensor[(5, 1, 14), float32], Tensor[(70), float32]) */;
    %142 = %129.1;
    %143 = %140.2;
    %144 = %141.2;
    (%142, %143, %var_6360, %var_6361, meta[relay.Constant][8] /* ty=int8 */, %var_6363, %144)
  };
  %145(%var_6385, %var_6386, %var_6387) /* ty=(Tensor[(14, 7, 3), float32], int8, Tensor[(648), int32], Tensor[(60), float64], int8, Tensor[(1, 154), float32], Tensor[(70), float32]) */
}

def @func_4016() -> (Tensor[(14, 7, 3), float32],) {
  %146 = cast(meta[relay.Constant][9] /* ty=Tensor[(14, 7, 3), float32] */, dtype="float32") /* ty=Tensor[(14, 7, 3), float32] */;
  %147 = tan(%146) /* ty=Tensor[(14, 7, 3), float32] */;
  %148 = cast(%147, dtype="float32") /* ty=Tensor[(14, 7, 3), float32] */;
  %149 = sqrt(%148) /* ty=Tensor[(14, 7, 3), float32] */;
  (%149,)
}

def @func_8410() -> (Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) {
  @func_8408() /* ty=(Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) */
}

def @func_5989(%var_5982: Tensor[(8, 12, 16), uint8], %var_5983: Tensor[(8, 12, 16), uint8], %var_5984: Tensor[(252), uint8], %var_5985: Tensor[(60), float64], %var_5986: Tensor[(154), float32], %var_5987: Tensor[(1, 1664), uint64], %var_5988: Tensor[(5), int32]) -> (Tensor[(8, 12, 16), uint8], Tensor[(180), uint16], Tensor[(252), uint8], Tensor[(60), float64], Tensor[(154), float32], Tensor[(1, 1664), uint64], Tensor[(5), int32], Tensor[(180), uint16], Tensor[(1664), uint64], int8) {
  @func_5980(%var_5982, %var_5983, %var_5984, %var_5985, %var_5986, %var_5987, %var_5988) /* ty=(Tensor[(8, 12, 16), uint8], Tensor[(180), uint16], Tensor[(252), uint8], Tensor[(60), float64], Tensor[(154), float32], Tensor[(1, 1664), uint64], Tensor[(5), int32], Tensor[(180), uint16], Tensor[(1664), uint64], int8) */
}

def @func_1877(%var_1873: Tensor[(60), float64], %var_1874: int8, %var_1875: Tensor[(154), float32], %var_1876: Tensor[(1664), uint64]) -> (Tensor[(9, 10), float64], Tensor[(6, 9, 12), int32], Tensor[(648), int32], Tensor[(60), float64], int8, Tensor[(154), float32], Tensor[(12, 11, 4), float32], Tensor[(180, 1), uint16], Tensor[(12, 11, 4), float32], Tensor[(10, 11, 5), int8], Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(13, 16, 8), uint64], Tensor[(1664), uint64], Tensor[(154), int8]) {
  %201 = fn (%var_1830: Tensor[(60), float64], %var_1831: int8, %var_1832: Tensor[(154), float32], %var_1857: Tensor[(1664), uint64]) -> (Tensor[(9, 10), float64], Tensor[(6, 9, 12), int32], Tensor[(648), int32], Tensor[(60), float64], int8, Tensor[(154), float32], Tensor[(12, 11, 4), float32], Tensor[(180, 1), uint16], Tensor[(12, 11, 4), float32], Tensor[(10, 11, 5), int8], Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(13, 16, 8), uint64], Tensor[(1664), uint64], Tensor[(154), int8]) {
    %150 = cast(meta[relay.Constant][10] /* ty=Tensor[(9, 10), float64] */, dtype="float64") /* ty=Tensor[(9, 10), float64] */;
    %151 = cast(meta[relay.Constant][11] /* ty=Tensor[(648), int32] */, dtype="int32") /* ty=Tensor[(648), int32] */;
    %152 = cast(meta[relay.Constant][11] /* ty=Tensor[(648), int32] */, dtype="int32") /* ty=Tensor[(648), int32] */;
    %153 = cast(%var_1830, dtype="float64") /* ty=Tensor[(60), float64] */;
    %154 = cast(%var_1831, dtype="int8") /* ty=int8 */;
    %155 = cast(%var_1832, dtype="float32") /* ty=Tensor[(154), float32] */;
    %156 = reshape(%151, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), int32] */;
    %157 = reshape(%152, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), int32] */;
    %158 = reshape(%153, newshape=[60]) /* ty=Tensor[(60), float64] */;
    %159 = reshape(%154, newshape=[]) /* ty=int8 */;
    %160 = reshape(%155, newshape=[154]) /* ty=Tensor[(154), float32] */;
    %161 = @func_1737(%156, %157, %158, %159, %160) /* ty=(Tensor[(6, 9, 12), int32], Tensor[(60), float64], int8, Tensor[(154), bool]) */;
    %162 = cast(meta[relay.Constant][12] /* ty=Tensor[(180, 1), uint16] */, dtype="uint16") /* ty=Tensor[(180, 1), uint16] */;
    %163 = cast(meta[relay.Constant][12] /* ty=Tensor[(180, 1), uint16] */, dtype="uint16") /* ty=Tensor[(180, 1), uint16] */;
    %164 = reshape(%162, newshape=[5, 4, 9]) /* ty=Tensor[(5, 4, 9), uint16] */;
    %165 = reshape(%163, newshape=[5, 4, 9]) /* ty=Tensor[(5, 4, 9), uint16] */;
    %166 = @func_666(%164, %165) /* ty=(Tensor[(5, 4, 9), uint16], Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(12, 11, 4), float32], Tensor[(12, 11, 4), float32]) */;
    %167 = %166.3;
    %168 = cast(%167, dtype="float32") /* ty=Tensor[(12, 11, 4), float32] */;
    %169 = reshape(%168, newshape=[12, 11, 4]) /* ty=Tensor[(12, 11, 4), float32] */;
    %170 = cast(%var_1831, dtype="int8") /* ty=int8 */;
    %171 = reshape(%170, newshape=[]) /* ty=int8 */;
    %172 = @func_1574(%171) /* ty=(Tensor[(10, 11, 5), int8],) */;
    %173 = cast(meta[relay.Constant][12] /* ty=Tensor[(180, 1), uint16] */, dtype="uint16") /* ty=Tensor[(180, 1), uint16] */;
    %174 = cast(%var_1831, dtype="int8") /* ty=int8 */;
    %175 = reshape(%173, newshape=[180]) /* ty=Tensor[(180), uint16] */;
    %176 = reshape(%174, newshape=[]) /* ty=int8 */;
    %177 = @func_897(%175, %176) /* ty=(Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(528), float32], Tensor[(180), uint16], Tensor[(14, 1, 11), int8], int8, Tensor[(154), int8], Tensor[(12, 11, 4), float32], Tensor[(14, 14, 10), float32]) */;
    %178 = cast(meta[relay.Constant][12] /* ty=Tensor[(180, 1), uint16] */, dtype="uint16") /* ty=Tensor[(180, 1), uint16] */;
    %179 = cast(meta[relay.Constant][12] /* ty=Tensor[(180, 1), uint16] */, dtype="uint16") /* ty=Tensor[(180, 1), uint16] */;
    %180 = reshape(%178, newshape=[5, 4, 9]) /* ty=Tensor[(5, 4, 9), uint16] */;
    %181 = reshape(%179, newshape=[5, 4, 9]) /* ty=Tensor[(5, 4, 9), uint16] */;
    %182 = @func_666(%180, %181) /* ty=(Tensor[(5, 4, 9), uint16], Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(12, 11, 4), float32], Tensor[(12, 11, 4), float32]) */;
    %183 = cast(%var_1857, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
    %184 = cast(%var_1857, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
    %185 = reshape(%183, newshape=[13, 16, 8]) /* ty=Tensor[(13, 16, 8), uint64] */;
    %186 = reshape(%184, newshape=[13, 16, 8]) /* ty=Tensor[(13, 16, 8), uint64] */;
    %187 = @func_1758(%185, %186) /* ty=(Tensor[(13, 16, 8), uint64],) */;
    %188 = cast(%var_1830, dtype="float64") /* ty=Tensor[(60), float64] */;
    %189 = cast(%var_1831, dtype="int8") /* ty=int8 */;
    %190 = reshape(%188, newshape=[10, 2, 3]) /* ty=Tensor[(10, 2, 3), float64] */;
    %191 = reshape(%189, newshape=[]) /* ty=int8 */;
    %192 = @func_403(%190, %191) /* ty=(Tensor[(10, 2, 3), float64], Tensor[(14, 1, 11), int8], int8, Tensor[(154), int8]) */;
    %193 = exp(%150) /* ty=Tensor[(9, 10), float64] */;
    %194 = %161.0;
    %195 = @func_339(%169) /* ty=Tensor[(12, 11, 4), float32] */;
    %196 = %172.0;
    %197 = %177.0;
    %198 = %182.2;
    %199 = %187.0;
    %200 = %192.3;
    (%193, %194, meta[relay.Constant][11] /* ty=Tensor[(648), int32] */, %var_1830, %var_1831, %var_1832, %167, meta[relay.Constant][12] /* ty=Tensor[(180, 1), uint16] */, %195, %196, %197, %198, %199, %var_1857, %200)
  };
  %201(%var_1873, %var_1874, %var_1875, %var_1876) /* ty=(Tensor[(9, 10), float64], Tensor[(6, 9, 12), int32], Tensor[(648), int32], Tensor[(60), float64], int8, Tensor[(154), float32], Tensor[(12, 11, 4), float32], Tensor[(180, 1), uint16], Tensor[(12, 11, 4), float32], Tensor[(10, 11, 5), int8], Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(13, 16, 8), uint64], Tensor[(1664), uint64], Tensor[(154), int8]) */
}

def @func_2129(%var_2125: int32, %var_2126: Tensor[(1, 1, 5), int32], %var_2127: Tensor[(2816), float64], %var_2128: Tensor[(180), uint16]) -> (Tensor[(1, 1, 5), int32], Tensor[(1, 1, 5), uint32], Tensor[(60), float64], Tensor[(16, 16, 11), float64], Tensor[(180), uint16], Tensor[(10, 2, 3), float64], Tensor[(2816), float32]) {
  %226 = fn (%var_2058: int32, %var_2059: Tensor[(1, 1, 5), int32], %var_2111: Tensor[(2816), float64], %var_2112: Tensor[(180), uint16]) -> (Tensor[(1, 1, 5), int32], Tensor[(1, 1, 5), uint32], Tensor[(60), float64], Tensor[(16, 16, 11), float64], Tensor[(180), uint16], Tensor[(10, 2, 3), float64], Tensor[(2816), float32]) {
    %202 = cast(%var_2058, dtype="int32") /* ty=int32 */;
    %203 = cast(%var_2059, dtype="int32") /* ty=Tensor[(1, 1, 5), int32] */;
    %204 = cast(%var_2058, dtype="uint32") /* ty=uint32 */;
    %205 = cast(%var_2059, dtype="uint32") /* ty=Tensor[(1, 1, 5), uint32] */;
    %206 = cast(%var_2111, dtype="float64") /* ty=Tensor[(2816), float64] */;
    %207 = cast(%var_2112, dtype="uint16") /* ty=Tensor[(180), uint16] */;
    %208 = cast(%var_2058, dtype="int8") /* ty=int8 */;
    %209 = reshape(%206, newshape=[16, 16, 11]) /* ty=Tensor[(16, 16, 11), float64] */;
    %210 = reshape(%207, newshape=[180]) /* ty=Tensor[(180), uint16] */;
    %211 = reshape(%208, newshape=[]) /* ty=int8 */;
    %212 = @func_1938(%209, %210, %211) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(12, 11, 4), float32], Tensor[(180), uint16], int8) */;
    %213 = cast(meta[relay.Constant][13] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
    %214 = cast(%var_2058, dtype="int8") /* ty=int8 */;
    %215 = reshape(%213, newshape=[10, 2, 3]) /* ty=Tensor[(10, 2, 3), float64] */;
    %216 = reshape(%214, newshape=[]) /* ty=int8 */;
    %217 = @func_403(%215, %216) /* ty=(Tensor[(10, 2, 3), float64], Tensor[(14, 1, 11), int8], int8, Tensor[(154), int8]) */;
    %218 = %217.0;
    %219 = cast(%218, dtype="float64") /* ty=Tensor[(10, 2, 3), float64] */;
    %220 = cast(%var_2111, dtype="float32") /* ty=Tensor[(2816), float32] */;
    %221 = bitwise_or(%202, %203) /* ty=Tensor[(1, 1, 5), int32] */;
    %222 = minimum(%204, %205) /* ty=Tensor[(1, 1, 5), uint32] */;
    %223 = %212.0;
    %224 = sinh(%219) /* ty=Tensor[(10, 2, 3), float64] */;
    %225 = sinh(%220) /* ty=Tensor[(2816), float32] */;
    (%221, %222, meta[relay.Constant][13] /* ty=Tensor[(60), float64] */, %223, %var_2112, %224, %225)
  };
  %226(%var_2125, %var_2126, %var_2127, %var_2128) /* ty=(Tensor[(1, 1, 5), int32], Tensor[(1, 1, 5), uint32], Tensor[(60), float64], Tensor[(16, 16, 11), float64], Tensor[(180), uint16], Tensor[(10, 2, 3), float64], Tensor[(2816), float32]) */
}

def @func_8208(%var_8206: Tensor[(7, 4, 16), float64]) -> (Tensor[(7, 4, 16), float64], Tensor[(14, 7, 3), float64]) {
  @func_8205(%var_8206) /* ty=(Tensor[(7, 4, 16), float64], Tensor[(14, 7, 3), float64]) */
}

def @func_10851() -> Tensor[(16, 12, 12), float64] {
  @func_6784() /* ty=Tensor[(16, 12, 12), float64] */
}

def @func_10796() -> (Tensor[(14, 7, 3), float64],) {
  %229 = fn () -> (Tensor[(14, 7, 3), float64],) {
    %227 = @func_7558() /* ty=(Tensor[(14, 7, 3), float64],) */;
    %228 = %227.0;
    (%228,)
  };
  %229() /* ty=(Tensor[(14, 7, 3), float64],) */
}

def @func_5399(%var_5397: Tensor[(5, 1, 14), float32]) -> Tensor[(5, 1, 14), float32] {
  @func_5396(%var_5397) /* ty=Tensor[(5, 1, 14), float32] */
}

def @func_9581(%var_9573: Tensor[(60), float64], %var_9574: Tensor[(22, 7), float32], %var_9575: Tensor[(1664), uint64]) -> (Tensor[(14, 7, 3), float32], Tensor[(154), float32], Tensor[(2816), float64], Tensor[(60), float64], Tensor[(22, 7), float32], Tensor[(1664), uint64]) {
  %230 = @func_8920() /* ty=(Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) */;
  %231 = cast(meta[relay.Constant][14] /* ty=Tensor[(2816), float64] */, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %232 = cast(%var_9573, dtype="float64") /* ty=Tensor[(60), float64] */;
  %233 = cast(%var_9574, dtype="float32") /* ty=Tensor[(22, 7), float32] */;
  %234 = cast(%var_9575, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
  %235 = reshape(%231, newshape=[2816]) /* ty=Tensor[(2816), float64] */;
  %236 = reshape(%232, newshape=[60, 1]) /* ty=Tensor[(60, 1), float64] */;
  %237 = reshape(%233, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %238 = reshape(%234, newshape=[104, 16]) /* ty=Tensor[(104, 16), uint64] */;
  %239 = @func_6539(%235, %236, %237, %238) /* ty=(Tensor[(14, 7, 3), float32], Tensor[(12, 11, 4), float32], Tensor[(2816), float64], Tensor[(6, 30), uint16], Tensor[(60, 1), float64], Tensor[(154), float32], Tensor[(104, 16), uint64]) */;
  %240 = %230.0;
  %241 = %239.5;
  (%240, %241, meta[relay.Constant][14] /* ty=Tensor[(2816), float64] */, %var_9573, %var_9574, %var_9575)
}

def @func_7514(%var_7510: int8, %var_7511: Tensor[(154, 1), float32], %var_7512: Tensor[(180), uint16], %var_7513: Tensor[(528), float32]) -> (Tensor[(14, 7, 3), uint32], Tensor[(5, 1, 14), float32], int8, Tensor[(154, 1), float32], Tensor[(14, 1, 11), int8], Tensor[(360), float64], Tensor[(180), uint16], Tensor[(528), float32]) {
  @func_7508(%var_7510, %var_7511, %var_7512, %var_7513) /* ty=(Tensor[(14, 7, 3), uint32], Tensor[(5, 1, 14), float32], int8, Tensor[(154, 1), float32], Tensor[(14, 1, 11), int8], Tensor[(360), float64], Tensor[(180), uint16], Tensor[(528), float32]) */
}

def @func_6468() -> (Tensor[(16, 12, 12), float64], Tensor[(70), float32]) {
  %245 = fn () -> (Tensor[(16, 12, 12), float64], Tensor[(70), float32]) {
    %242 = @func_5676() /* ty=(Tensor[(14, 7, 3), float32], Tensor[(5, 1, 14), float32], Tensor[(70), float32]) */;
    %243 = @func_4613() /* ty=Tensor[(16, 12, 12), float64] */;
    %244 = %242.2;
    (%243, %244)
  };
  %245() /* ty=(Tensor[(16, 12, 12), float64], Tensor[(70), float32]) */
}

def @func_10519(%var_10518: int8) -> (Tensor[(14, 7, 3), bool], Tensor[(10, 11, 5), int8], int8, Tensor[(14, 7, 3), float32]) {
  %254 = fn (%var_10502: int8) -> (Tensor[(14, 7, 3), bool], Tensor[(10, 11, 5), int8], int8, Tensor[(14, 7, 3), float32]) {
    %246 = @func_8754() /* ty=(Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), bool], Tensor[(33, 4), uint64], Tensor[(16, 12, 12), float64]) */;
    %247 = cast(%var_10502, dtype="int8") /* ty=int8 */;
    %248 = reshape(%247, newshape=[]) /* ty=int8 */;
    %249 = @func_6642(%248) /* ty=(Tensor[(14, 7, 3), float32], Tensor[(10, 11, 5), int8], int8) */;
    %250 = @func_10335() /* ty=(Tensor[(14, 7, 3), float32],) */;
    %251 = %246.2;
    %252 = %249.1;
    %253 = %250.0;
    (%251, %252, %var_10502, %253)
  };
  %254(%var_10518) /* ty=(Tensor[(14, 7, 3), bool], Tensor[(10, 11, 5), int8], int8, Tensor[(14, 7, 3), float32]) */
}

def @func_4551(%var_4532: Tensor[(5, 9, 1), float64]) -> (Tensor[(5, 9, 4), float64], Tensor[(5, 9, 4), float64]) {
  %255 = cast(%var_4532, dtype="float64") /* ty=Tensor[(5, 9, 1), float64] */;
  %256 = cast(meta[relay.Constant][15] /* ty=Tensor[(5, 9, 4), float64] */, dtype="float64") /* ty=Tensor[(5, 9, 4), float64] */;
  %257 = cast(meta[relay.Constant][15] /* ty=Tensor[(5, 9, 4), float64] */, dtype="float32") /* ty=Tensor[(5, 9, 4), float32] */;
  %258 = atan(%257) /* ty=Tensor[(5, 9, 4), float32] */;
  %259 = cast(%258, dtype="float64") /* ty=Tensor[(5, 9, 4), float64] */;
  %260 = floor_divide(%255, %256) /* ty=Tensor[(5, 9, 4), float64] */;
  %261 = sin(%259) /* ty=Tensor[(5, 9, 4), float64] */;
  (%260, %261)
}

def @func_2634(%var_2632: Tensor[(8, 12, 16), float64]) -> Tensor[(8, 12, 16), float64] {
  @func_2631(%var_2632) /* ty=Tensor[(8, 12, 16), float64] */
}

def @func_5772(%var_5770: Tensor[(8, 4, 5), float64]) -> (Tensor[(8, 4, 5), float64],) {
  @func_5769(%var_5770) /* ty=(Tensor[(8, 4, 5), float64],) */
}

def @func_8066() -> (Tensor[(14, 7, 3), float32],) {
  %264 = fn () -> (Tensor[(14, 7, 3), float32],) {
    %262 = @func_4375() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32]) */;
    %263 = %262.1;
    (%263,)
  };
  %264() /* ty=(Tensor[(14, 7, 3), float32],) */
}

def @func_6553() -> (Tensor[(70), float32],) {
  %265 = @func_6467() /* ty=(Tensor[(16, 12, 12), float64], Tensor[(70), float32]) */;
  %266 = %265.1;
  (%266,)
}

def @func_9685() -> (Tensor[(16, 12, 12), float64],) {
  %267 = @func_5650() /* ty=Tensor[(16, 12, 12), float64] */;
  (%267,)
}

def @func_9879() -> (Tensor[(14, 7, 3), float32],) {
  %268 = @func_5655() /* ty=Tensor[(14, 7, 3), float32] */;
  (%268,)
}

def @func_137(%var_135: int8, %var_136: Tensor[(14, 1, 11), int8]) -> (Tensor[(14, 1, 11), int8],) {
  %272 = fn (%var_125: int8, %var_126: Tensor[(14, 1, 11), int8]) -> (Tensor[(14, 1, 11), int8],) {
    %269 = cast(%var_125, dtype="int8") /* ty=int8 */;
    %270 = cast(%var_126, dtype="int8") /* ty=Tensor[(14, 1, 11), int8] */;
    %271 = logical_xor(%269, %270) /* ty=Tensor[(14, 1, 11), int8] */;
    (%271,)
  };
  %272(%var_135, %var_136) /* ty=(Tensor[(14, 1, 11), int8],) */
}

def @func_4294(%var_4254: Tensor[(6, 16, 1), uint8], %var_4255: Tensor[(6, 16, 2), uint8], %var_4279: int8, %var_4280: Tensor[(154), int8], %var_4288: Tensor[(132), uint64]) -> (Tensor[(6, 16, 2), float64], Tensor[(6, 16, 2), float64], Tensor[(14, 1, 11), int8], int8, Tensor[(154), int8], Tensor[(1, 11, 12), uint64], Tensor[(132), uint64]) {
  %273 = cast(%var_4254, dtype="uint8") /* ty=Tensor[(6, 16, 1), uint8] */;
  %274 = cast(%var_4255, dtype="uint8") /* ty=Tensor[(6, 16, 2), uint8] */;
  %275 = left_shift(%273, %274) /* ty=Tensor[(6, 16, 2), uint8] */;
  %276 = cast(%275, dtype="float64") /* ty=Tensor[(6, 16, 2), float64] */;
  %277 = cast(%var_4255, dtype="float64") /* ty=Tensor[(6, 16, 2), float64] */;
  %278 = cast(%var_4279, dtype="int8") /* ty=int8 */;
  %279 = cast(%var_4280, dtype="int8") /* ty=Tensor[(154), int8] */;
  %280 = reshape(%278, newshape=[]) /* ty=int8 */;
  %281 = reshape(%279, newshape=[14, 1, 11]) /* ty=Tensor[(14, 1, 11), int8] */;
  %282 = @func_134(%280, %281) /* ty=(Tensor[(14, 1, 11), int8],) */;
  %283 = cast(%var_4288, dtype="uint64") /* ty=Tensor[(132), uint64] */;
  %284 = reshape(%283, newshape=[1, 11, 12]) /* ty=Tensor[(1, 11, 12), uint64] */;
  %285 = @func_2237(%284) /* ty=(Tensor[(1, 11, 12), uint64],) */;
  %286 = tan(%276) /* ty=Tensor[(6, 16, 2), float64] */;
  %287 = acos(%277) /* ty=Tensor[(6, 16, 2), float64] */;
  %288 = %282.0;
  %289 = %285.0;
  (%286, %287, %288, %var_4279, %var_4280, %289, %var_4288)
}

def @func_5473(%var_5471: Tensor[(648), int32]) -> Tensor[(648), bool] {
  @func_5470(%var_5471) /* ty=Tensor[(648), bool] */
}

def @func_10245(%var_10217: Tensor[(70), float32], %var_10218: Tensor[(324, 2), int32]) -> (Tensor[(16, 12, 12), float64], Tensor[(14, 7, 3), float32], Tensor[(70), float32], Tensor[(324, 2), int32], Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32]) {
  %290 = @func_6467() /* ty=(Tensor[(16, 12, 12), float64], Tensor[(70), float32]) */;
  %291 = cast(%var_10217, dtype="float32") /* ty=Tensor[(70), float32] */;
  %292 = cast(%var_10218, dtype="int32") /* ty=Tensor[(324, 2), int32] */;
  %293 = reshape(%291, newshape=[70]) /* ty=Tensor[(70), float32] */;
  %294 = reshape(%292, newshape=[648]) /* ty=Tensor[(648), int32] */;
  %295 = @func_7790(%293, %294) /* ty=(Tensor[(14, 7, 3), float32], Tensor[(70), float32], Tensor[(70), float32], Tensor[(648), bool], Tensor[(648), int32]) */;
  %296 = @func_7702() /* ty=(Tensor[(14, 7, 3), bool],) */;
  %297 = @func_8065() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %298 = %290.0;
  %299 = %295.0;
  %300 = %296.0;
  %301 = %297.0;
  (%298, %299, %var_10217, %var_10218, %300, %301)
}

def @func_8634(%var_8611: Tensor[(14, 7, 3), float32]) -> (Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) {
  %302 = @func_6604() /* ty=Tensor[(14, 7, 3), float32] */;
  %303 = cast(%var_8611, dtype="float32") /* ty=Tensor[(14, 7, 3), float32] */;
  %304 = shape_of(%302, dtype="int32") /* ty=Tensor[(3), int32] */;
  %305 = cast(%302, dtype="float32") /* ty=Tensor[(14, 7, 3), float32] */;
  %306 = dyn.reshape(%303, %304, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %307 = @func_4775() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %308 = divide(%305, %306) /* ty=Tensor[(14, 7, 3), float32] */;
  %309 = %307.0;
  (%308, %309)
}

def @func_7702() -> (Tensor[(14, 7, 3), bool],) {
  %310 = @func_4375() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32]) */;
  %311 = %310.0;
  (%311,)
}

def @func_9226(%var_9224: Tensor[(3, 4, 11), float32], %var_9225: Tensor[(528), float32]) -> (Tensor[(3, 4, 11), float32], Tensor[(3, 4, 11), float32], Tensor[(12, 11, 4), float32], Tensor[(528), float32]) {
  @func_9222(%var_9224, %var_9225) /* ty=(Tensor[(3, 4, 11), float32], Tensor[(3, 4, 11), float32], Tensor[(12, 11, 4), float32], Tensor[(528), float32]) */
}

def @func_10875() -> Tensor[(14, 7, 3), float32] {
  @func_5261() /* ty=Tensor[(14, 7, 3), float32] */
}

def @func_10877() -> Tensor[(14, 7, 3), float32] {
  @func_10875() /* ty=Tensor[(14, 7, 3), float32] */
}

def @func_10195() -> Tensor[(14, 7, 3), float32] {
  %312 = @func_4016() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %312.0
}

def @func_6700() -> (Tensor[(16, 12, 12), float64], Tensor[(14, 7, 3), float32]) {
  @func_6698() /* ty=(Tensor[(16, 12, 12), float64], Tensor[(14, 7, 3), float32]) */
}

def @func_8637(%var_8635: Tensor[(14, 7, 3), float32]) -> (Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) {
  @func_8634(%var_8635) /* ty=(Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) */
}

def @func_4463(%var_4461: Tensor[(14, 7, 3), float32]) -> Tensor[(14, 7, 3), uint32] {
  @func_4460(%var_4461) /* ty=Tensor[(14, 7, 3), uint32] */
}

def @func_897(%var_869: Tensor[(180), uint16], %var_876: int8) -> (Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(528), float32], Tensor[(180), uint16], Tensor[(14, 1, 11), int8], int8, Tensor[(154), int8], Tensor[(12, 11, 4), float32], Tensor[(14, 14, 10), float32]) {
  %313 = cast(meta[relay.Constant][16] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %314 = reshape(%313, newshape=[12, 11, 4]) /* ty=Tensor[(12, 11, 4), float32] */;
  %315 = cast(%var_869, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %316 = cast(%var_869, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %317 = reshape(%315, newshape=[5, 4, 9]) /* ty=Tensor[(5, 4, 9), uint16] */;
  %318 = reshape(%316, newshape=[5, 4, 9]) /* ty=Tensor[(5, 4, 9), uint16] */;
  %319 = @func_666(%317, %318) /* ty=(Tensor[(5, 4, 9), uint16], Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(12, 11, 4), float32], Tensor[(12, 11, 4), float32]) */;
  %320 = cast(%var_876, dtype="int8") /* ty=int8 */;
  %321 = cast(meta[relay.Constant][17] /* ty=Tensor[(154), int8] */, dtype="int8") /* ty=Tensor[(154), int8] */;
  %322 = reshape(%320, newshape=[]) /* ty=int8 */;
  %323 = reshape(%321, newshape=[14, 1, 11]) /* ty=Tensor[(14, 1, 11), int8] */;
  %324 = @func_134(%322, %323) /* ty=(Tensor[(14, 1, 11), int8],) */;
  %325 = cast(%var_869, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %326 = cast(%var_869, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %327 = reshape(%325, newshape=[5, 4, 9]) /* ty=Tensor[(5, 4, 9), uint16] */;
  %328 = reshape(%326, newshape=[5, 4, 9]) /* ty=Tensor[(5, 4, 9), uint16] */;
  %329 = @func_666(%327, %328) /* ty=(Tensor[(5, 4, 9), uint16], Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(12, 11, 4), float32], Tensor[(12, 11, 4), float32]) */;
  %330 = cast(meta[relay.Constant][18] /* ty=Tensor[(14, 14, 10), float64] */, dtype="float64") /* ty=Tensor[(14, 14, 10), float64] */;
  %331 = log(%330) /* ty=Tensor[(14, 14, 10), float64] */;
  %332 = cast(meta[relay.Constant][19] /* ty=Tensor[(14, 14, 10), float64] */, dtype="float32") /* ty=Tensor[(14, 14, 10), float32] */;
  %333 = shape_of(%331, dtype="int32") /* ty=Tensor[(3), int32] */;
  %334 = cast(%331, dtype="float32") /* ty=Tensor[(14, 14, 10), float32] */;
  %335 = dyn.reshape(%332, %333, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %336 = @func_339(%314) /* ty=Tensor[(12, 11, 4), float32] */;
  %337 = %319.2;
  %338 = %324.0;
  %339 = %329.1;
  %340 = divide(%334, %335) /* ty=Tensor[(14, 14, 10), float32] */;
  (%336, meta[relay.Constant][16] /* ty=Tensor[(528), float32] */, %337, %var_869, %338, %var_876, meta[relay.Constant][17] /* ty=Tensor[(154), int8] */, %339, %340)
}

def @func_2631(%var_2623: Tensor[(8, 12, 16), float64]) -> Tensor[(8, 12, 16), float64] {
  %341 = cast(%var_2623, dtype="float64") /* ty=Tensor[(8, 12, 16), float64] */;
  atan(%341) /* ty=Tensor[(8, 12, 16), float64] */
}

def @func_4005(%var_4002: Tensor[(11, 13, 14), float32], %var_4003: int8, %var_4004: Tensor[(154), float32]) -> (Tensor[(11, 13, 14), float32], Tensor[(60), float64], Tensor[(648), int32], Tensor[(60), float64], int8, Tensor[(154), float32]) {
  %356 = fn (%var_3980: Tensor[(11, 13, 14), float32], %var_3986: int8, %var_3987: Tensor[(154), float32]) -> (Tensor[(11, 13, 14), float32], Tensor[(60), float64], Tensor[(648), int32], Tensor[(60), float64], int8, Tensor[(154), float32]) {
    %342 = cast(%var_3980, dtype="float32") /* ty=Tensor[(11, 13, 14), float32] */;
    %343 = cast(meta[relay.Constant][20] /* ty=Tensor[(648), int32] */, dtype="int32") /* ty=Tensor[(648), int32] */;
    %344 = cast(meta[relay.Constant][20] /* ty=Tensor[(648), int32] */, dtype="int32") /* ty=Tensor[(648), int32] */;
    %345 = cast(meta[relay.Constant][21] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
    %346 = cast(%var_3986, dtype="int8") /* ty=int8 */;
    %347 = cast(%var_3987, dtype="float32") /* ty=Tensor[(154), float32] */;
    %348 = reshape(%343, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), int32] */;
    %349 = reshape(%344, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), int32] */;
    %350 = reshape(%345, newshape=[60]) /* ty=Tensor[(60), float64] */;
    %351 = reshape(%346, newshape=[]) /* ty=int8 */;
    %352 = reshape(%347, newshape=[154]) /* ty=Tensor[(154), float32] */;
    %353 = @func_1737(%348, %349, %350, %351, %352) /* ty=(Tensor[(6, 9, 12), int32], Tensor[(60), float64], int8, Tensor[(154), bool]) */;
    %354 = erf(%342) /* ty=Tensor[(11, 13, 14), float32] */;
    %355 = %353.1;
    (%354, %355, meta[relay.Constant][20] /* ty=Tensor[(648), int32] */, meta[relay.Constant][21] /* ty=Tensor[(60), float64] */, %var_3986, %var_3987)
  };
  %356(%var_4002, %var_4003, %var_4004) /* ty=(Tensor[(11, 13, 14), float32], Tensor[(60), float64], Tensor[(648), int32], Tensor[(60), float64], int8, Tensor[(154), float32]) */
}

def @func_407(%var_405: Tensor[(10, 2, 3), float64], %var_406: int8) -> (Tensor[(10, 2, 3), float64], Tensor[(14, 1, 11), int8], int8, Tensor[(154), int8]) {
  @func_403(%var_405, %var_406) /* ty=(Tensor[(10, 2, 3), float64], Tensor[(14, 1, 11), int8], int8, Tensor[(154), int8]) */
}

def @func_3702(%var_3698: Tensor[(12, 8, 6), int8], %var_3699: Tensor[(12, 8, 6), int8], %var_3700: Tensor[(154), int8], %var_3701: Tensor[(2816), float64]) -> (Tensor[(12, 8, 6), int8], Tensor[(12, 8, 6), float32], Tensor[(60), float64], int8, Tensor[(154), int8], Tensor[(2816), float64]) {
  %372 = fn (%var_3671: Tensor[(12, 8, 6), int8], %var_3672: Tensor[(12, 8, 6), int8], %var_3689: Tensor[(154), int8], %var_3690: Tensor[(2816), float64]) -> (Tensor[(12, 8, 6), int8], Tensor[(12, 8, 6), float32], Tensor[(60), float64], int8, Tensor[(154), int8], Tensor[(2816), float64]) {
    %357 = cast(%var_3672, dtype="int8") /* ty=Tensor[(12, 8, 6), int8] */;
    %358 = shape_of(%var_3671, dtype="int32") /* ty=Tensor[(3), int32] */;
    %359 = cast(%var_3671, dtype="int8") /* ty=Tensor[(12, 8, 6), int8] */;
    %360 = dyn.reshape(%357, %358, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %361 = cast(%var_3671, dtype="float32") /* ty=Tensor[(12, 8, 6), float32] */;
    %362 = cast(meta[relay.Constant][22] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %363 = cast(%var_3689, dtype="int8") /* ty=Tensor[(154), int8] */;
    %364 = cast(%var_3690, dtype="float64") /* ty=Tensor[(2816), float64] */;
    %365 = reshape(%362, newshape=[]) /* ty=int8 */;
    %366 = reshape(%363, newshape=[154]) /* ty=Tensor[(154), int8] */;
    %367 = reshape(%364, newshape=[2816]) /* ty=Tensor[(2816), float64] */;
    %368 = @func_2571(%365, %366, %367) /* ty=(Tensor[(154), int8], Tensor[(60), float64], Tensor[(5), int32], Tensor[(2816), float64], Tensor[(3, 60), uint16], Tensor[(11, 8, 10), int64], Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(14, 1, 11), uint8]) */;
    %369 = left_shift(%359, %360) /* ty=Tensor[(12, 8, 6), int8] */;
    %370 = erf(%361) /* ty=Tensor[(12, 8, 6), float32] */;
    %371 = %368.1;
    (%369, %370, %371, meta[relay.Constant][22] /* ty=int8 */, %var_3689, %var_3690)
  };
  %372(%var_3698, %var_3699, %var_3700, %var_3701) /* ty=(Tensor[(12, 8, 6), int8], Tensor[(12, 8, 6), float32], Tensor[(60), float64], int8, Tensor[(154), int8], Tensor[(2816), float64]) */
}

def @func_7508(%var_7469: int8, %var_7470: Tensor[(154, 1), float32], %var_7482: Tensor[(180), uint16], %var_7483: Tensor[(528), float32]) -> (Tensor[(14, 7, 3), uint32], Tensor[(5, 1, 14), float32], int8, Tensor[(154, 1), float32], Tensor[(14, 1, 11), int8], Tensor[(360), float64], Tensor[(180), uint16], Tensor[(528), float32]) {
  %373 = @func_5273() /* ty=(Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), uint32]) */;
  %374 = cast(%var_7469, dtype="int8") /* ty=int8 */;
  %375 = cast(%var_7470, dtype="float32") /* ty=Tensor[(154, 1), float32] */;
  %376 = reshape(%374, newshape=[]) /* ty=int8 */;
  %377 = reshape(%375, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %378 = @func_5913(%376, %377) /* ty=(Tensor[(14, 7, 3), float32], Tensor[(16, 12, 12), float64], Tensor[(5, 1, 14), float32], Tensor[(70), float32], Tensor[(10, 11, 5), int8], Tensor[(1, 60), float64], int8, Tensor[(154), float32], Tensor[(1664), uint64], Tensor[(6, 9, 12), int32]) */;
  %379 = cast(meta[relay.Constant][23] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %380 = cast(meta[relay.Constant][23] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %381 = cast(%var_7482, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %382 = cast(%var_7470, dtype="int8") /* ty=Tensor[(154, 1), int8] */;
  %383 = cast(%var_7483, dtype="float32") /* ty=Tensor[(528), float32] */;
  %384 = reshape(%379, newshape=[6, 15, 4]) /* ty=Tensor[(6, 15, 4), float64] */;
  %385 = reshape(%380, newshape=[6, 15, 4]) /* ty=Tensor[(6, 15, 4), float64] */;
  %386 = reshape(%381, newshape=[180]) /* ty=Tensor[(180), uint16] */;
  %387 = reshape(%382, newshape=[11, 14]) /* ty=Tensor[(11, 14), int8] */;
  %388 = reshape(%383, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %389 = @func_3269(%384, %385, %386, %387, %388) /* ty=(Tensor[(5, 4, 9), uint16], Tensor[(180), uint16], Tensor[(14, 1, 11), int8], int8, Tensor[(11, 14), int8], Tensor[(14, 1, 11), int8], Tensor[(1, 11, 12), uint64], Tensor[(3, 44), uint64], Tensor[(6, 15, 4), uint64], Tensor[(12, 11, 4), float32], Tensor[(528), float32]) */;
  %390 = %373.1;
  %391 = %378.2;
  %392 = %389.2;
  (%390, %391, %var_7469, %var_7470, %392, meta[relay.Constant][23] /* ty=Tensor[(360), float64] */, %var_7482, %var_7483)
}

def @func_5617(%var_5614: Tensor[(6, 10, 12), float64], %var_5615: Tensor[(6, 10, 12), float64], %var_5616: int8) -> (Tensor[(6, 10, 12), float64], Tensor[(180), uint16], Tensor[(2816), float64], Tensor[(180, 1), uint16], int8) {
  @func_5612(%var_5614, %var_5615, %var_5616) /* ty=(Tensor[(6, 10, 12), float64], Tensor[(180), uint16], Tensor[(2816), float64], Tensor[(180, 1), uint16], int8) */
}

def @func_7231() -> Tensor[(14, 7, 3), float32] {
  @func_7229() /* ty=Tensor[(14, 7, 3), float32] */
}

def @func_10449(%var_10440: int8) -> (Tensor[(14, 7, 3), float32], Tensor[(10, 11, 5), float64], Tensor[(10, 11, 5), float32]) {
  %393 = @func_9859() /* ty=(Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) */;
  %394 = cast(%var_10440, dtype="int8") /* ty=int8 */;
  %395 = reshape(%394, newshape=[]) /* ty=int8 */;
  %396 = @func_1574(%395) /* ty=(Tensor[(10, 11, 5), int8],) */;
  %397 = %396.0;
  %398 = cast(%397, dtype="float64") /* ty=Tensor[(10, 11, 5), float64] */;
  %399 = cast(%var_10440, dtype="float64") /* ty=float64 */;
  %400 = cast(%397, dtype="float32") /* ty=Tensor[(10, 11, 5), float32] */;
  %401 = %393.1;
  %402 = divide(%398, %399) /* ty=Tensor[(10, 11, 5), float64] */;
  %403 = atan(%400) /* ty=Tensor[(10, 11, 5), float32] */;
  (%401, %402, %403)
}

def @func_1574(%var_1560: int8) -> (Tensor[(10, 11, 5), int8],) {
  %404 = cast(%var_1560, dtype="int8") /* ty=int8 */;
  %405 = cast(meta[relay.Constant][24] /* ty=Tensor[(10, 11, 5), int8] */, dtype="int8") /* ty=Tensor[(10, 11, 5), int8] */;
  %406 = subtract(%404, %405) /* ty=Tensor[(10, 11, 5), int8] */;
  (%406,)
}

def @func_10365() -> Tensor[(14, 7, 3), bool] {
  @func_10363() /* ty=Tensor[(14, 7, 3), bool] */
}

def @func_10452(%var_10450: int8) -> (Tensor[(14, 7, 3), float32], Tensor[(10, 11, 5), float64], Tensor[(10, 11, 5), float32]) {
  @func_10449(%var_10450) /* ty=(Tensor[(14, 7, 3), float32], Tensor[(10, 11, 5), float64], Tensor[(10, 11, 5), float32]) */
}

def @func_7874() -> (Tensor[(14, 7, 3), float32],) {
  %409 = fn () -> (Tensor[(14, 7, 3), float32],) {
    %407 = @func_4775() /* ty=(Tensor[(14, 7, 3), float32],) */;
    %408 = %407.0;
    (%408,)
  };
  %409() /* ty=(Tensor[(14, 7, 3), float32],) */
}

def @func_7653() -> Tensor[(14, 7, 3), float32] {
  %411 = fn () -> Tensor[(14, 7, 3), float32] {
    %410 = @func_4775() /* ty=(Tensor[(14, 7, 3), float32],) */;
    %410.0
  };
  %411() /* ty=Tensor[(14, 7, 3), float32] */
}

def @func_9005() -> (Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32]) {
  %416 = fn () -> (Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32]) {
    %412 = @func_7702() /* ty=(Tensor[(14, 7, 3), bool],) */;
    %413 = @func_5161() /* ty=(Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) */;
    %414 = %412.0;
    %415 = %413.1;
    (%414, %415)
  };
  %416() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32]) */
}

def @func_6764(%var_6760: Tensor[(70), float32]) -> (Tensor[(14, 7, 3), bool], Tensor[(5, 1, 14), float32], Tensor[(70), float32]) {
  %417 = @func_4375() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32]) */;
  %418 = cast(%var_6760, dtype="float32") /* ty=Tensor[(70), float32] */;
  %419 = reshape(%418, newshape=[5, 1, 14]) /* ty=Tensor[(5, 1, 14), float32] */;
  %420 = %417.0;
  %421 = @func_5396(%419) /* ty=Tensor[(5, 1, 14), float32] */;
  (%420, %421, %var_6760)
}

def @func_9861() -> (Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) {
  @func_9859() /* ty=(Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) */
}

def @func_10197() -> Tensor[(14, 7, 3), float32] {
  @func_10195() /* ty=Tensor[(14, 7, 3), float32] */
}

def @func_2421(%var_2415: Tensor[(3, 6, 14), uint8], %var_2416: Tensor[(60), float64], %var_2417: Tensor[(154), float32], %var_2418: Tensor[(1664), uint64], %var_2419: Tensor[(5), int32], %var_2420: Tensor[(180), uint16]) -> (Tensor[(3, 6, 14), bool], int8, Tensor[(60), float64], Tensor[(154), float32], Tensor[(1664), uint64], Tensor[(180), uint16], Tensor[(5), int32], Tensor[(180), uint16], Tensor[(2816), uint64]) {
  %450 = fn (%var_2339: Tensor[(3, 6, 14), uint8], %var_2358: Tensor[(60), float64], %var_2360: Tensor[(154), float32], %var_2361: Tensor[(1664), uint64], %var_2378: Tensor[(5), int32], %var_2380: Tensor[(180), uint16]) -> (Tensor[(3, 6, 14), bool], int8, Tensor[(60), float64], Tensor[(154), float32], Tensor[(1664), uint64], Tensor[(180), uint16], Tensor[(5), int32], Tensor[(180), uint16], Tensor[(2816), uint64]) {
    %422 = cast(meta[relay.Constant][25] /* ty=Tensor[(3, 6, 14), uint8] */, dtype="bool") /* ty=Tensor[(3, 6, 14), bool] */;
    %423 = shape_of(%var_2339, dtype="int32") /* ty=Tensor[(3), int32] */;
    %424 = cast(%var_2339, dtype="bool") /* ty=Tensor[(3, 6, 14), bool] */;
    %425 = dyn.reshape(%422, %423, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %426 = cast(%var_2358, dtype="float64") /* ty=Tensor[(60), float64] */;
    %427 = cast(meta[relay.Constant][26] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %428 = cast(%var_2360, dtype="float32") /* ty=Tensor[(154), float32] */;
    %429 = cast(%var_2361, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
    %430 = reshape(%426, newshape=[60]) /* ty=Tensor[(60), float64] */;
    %431 = reshape(%427, newshape=[]) /* ty=int8 */;
    %432 = reshape(%428, newshape=[154]) /* ty=Tensor[(154), float32] */;
    %433 = reshape(%429, newshape=[1664]) /* ty=Tensor[(1664), uint64] */;
    %434 = @func_1872(%430, %431, %432, %433) /* ty=(Tensor[(9, 10), float64], Tensor[(6, 9, 12), int32], Tensor[(648), int32], Tensor[(60), float64], int8, Tensor[(154), float32], Tensor[(12, 11, 4), float32], Tensor[(180, 1), uint16], Tensor[(12, 11, 4), float32], Tensor[(10, 11, 5), int8], Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(13, 16, 8), uint64], Tensor[(1664), uint64], Tensor[(154), int8]) */;
    %435 = cast(meta[relay.Constant][26] /* ty=int8 */, dtype="int32") /* ty=int32 */;
    %436 = cast(%var_2378, dtype="int32") /* ty=Tensor[(5), int32] */;
    %437 = cast(meta[relay.Constant][27] /* ty=Tensor[(2816), float64] */, dtype="float64") /* ty=Tensor[(2816), float64] */;
    %438 = cast(%var_2380, dtype="uint16") /* ty=Tensor[(180), uint16] */;
    %439 = reshape(%435, newshape=[]) /* ty=int32 */;
    %440 = reshape(%436, newshape=[1, 1, 5]) /* ty=Tensor[(1, 1, 5), int32] */;
    %441 = reshape(%437, newshape=[2816]) /* ty=Tensor[(2816), float64] */;
    %442 = reshape(%438, newshape=[180]) /* ty=Tensor[(180), uint16] */;
    %443 = @func_2124(%439, %440, %441, %442) /* ty=(Tensor[(1, 1, 5), int32], Tensor[(1, 1, 5), uint32], Tensor[(60), float64], Tensor[(16, 16, 11), float64], Tensor[(180), uint16], Tensor[(10, 2, 3), float64], Tensor[(2816), float32]) */;
    %444 = cast(meta[relay.Constant][27] /* ty=Tensor[(2816), float64] */, dtype="uint64") /* ty=Tensor[(2816), uint64] */;
    %445 = cast(meta[relay.Constant][26] /* ty=int8 */, dtype="uint64") /* ty=uint64 */;
    %446 = less_equal(%424, %425) /* ty=Tensor[(3, 6, 14), bool] */;
    %447 = %434.4;
    %448 = %443.4;
    %449 = multiply(%444, %445) /* ty=Tensor[(2816), uint64] */;
    (%446, %447, %var_2358, %var_2360, %var_2361, %448, %var_2378, %var_2380, %449)
  };
  %450(%var_2415, %var_2416, %var_2417, %var_2418, %var_2419, %var_2420) /* ty=(Tensor[(3, 6, 14), bool], int8, Tensor[(60), float64], Tensor[(154), float32], Tensor[(1664), uint64], Tensor[(180), uint16], Tensor[(5), int32], Tensor[(180), uint16], Tensor[(2816), uint64]) */
}

def @func_6604() -> Tensor[(14, 7, 3), float32] {
  %451 = @func_4375() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32]) */;
  %451.1
}

def @func_2730(%var_2723: Tensor[(11, 7, 3), float32], %var_2724: Tensor[(11, 7, 3), float32], %var_2725: Tensor[(528), float32], %var_2726: int8, %var_2727: Tensor[(2816), float64], %var_2728: Tensor[(15, 4), float64], %var_2729: Tensor[(416, 4), uint64]) -> (Tensor[(11, 7, 3), float32], Tensor[(8, 12, 16), float64], Tensor[(1536), float64], Tensor[(12, 11, 4), float32], Tensor[(528), float32], int8, Tensor[(6, 30), uint16], int8, Tensor[(154), int8], Tensor[(11, 14), int8], Tensor[(2816), float64], Tensor[(8, 12, 16), float64], Tensor[(60), float64], Tensor[(15, 4), float64], Tensor[(416, 4), uint64]) {
  %490 = fn (%var_2650: Tensor[(11, 7, 3), float32], %var_2651: Tensor[(11, 7, 3), float32], %var_2674: Tensor[(528), float32], %var_2689: int8, %var_2693: Tensor[(2816), float64], %var_2717: Tensor[(15, 4), float64], %var_2718: Tensor[(416, 4), uint64]) -> (Tensor[(11, 7, 3), float32], Tensor[(8, 12, 16), float64], Tensor[(1536), float64], Tensor[(12, 11, 4), float32], Tensor[(528), float32], int8, Tensor[(6, 30), uint16], int8, Tensor[(154), int8], Tensor[(11, 14), int8], Tensor[(2816), float64], Tensor[(8, 12, 16), float64], Tensor[(60), float64], Tensor[(15, 4), float64], Tensor[(416, 4), uint64]) {
    %452 = cast(%var_2651, dtype="float32") /* ty=Tensor[(11, 7, 3), float32] */;
    %453 = shape_of(%var_2650, dtype="int32") /* ty=Tensor[(3), int32] */;
    %454 = cast(%var_2650, dtype="float32") /* ty=Tensor[(11, 7, 3), float32] */;
    %455 = dyn.reshape(%452, %453, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %456 = cast(meta[relay.Constant][28] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
    %457 = reshape(%456, newshape=[8, 12, 16]) /* ty=Tensor[(8, 12, 16), float64] */;
    %458 = cast(%var_2674, dtype="float32") /* ty=Tensor[(528), float32] */;
    %459 = reshape(%458, newshape=[12, 11, 4]) /* ty=Tensor[(12, 11, 4), float32] */;
    %460 = cast(meta[relay.Constant][29] /* ty=Tensor[(6, 30), uint16] */, dtype="uint16") /* ty=Tensor[(6, 30), uint16] */;
    %461 = cast(%var_2689, dtype="int8") /* ty=int8 */;
    %462 = reshape(%460, newshape=[180]) /* ty=Tensor[(180), uint16] */;
    %463 = reshape(%461, newshape=[]) /* ty=int8 */;
    %464 = @func_897(%462, %463) /* ty=(Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(528), float32], Tensor[(180), uint16], Tensor[(14, 1, 11), int8], int8, Tensor[(154), int8], Tensor[(12, 11, 4), float32], Tensor[(14, 14, 10), float32]) */;
    %465 = cast(%var_2689, dtype="int8") /* ty=int8 */;
    %466 = cast(meta[relay.Constant][30] /* ty=Tensor[(11, 14), int8] */, dtype="int8") /* ty=Tensor[(11, 14), int8] */;
    %467 = cast(%var_2693, dtype="float64") /* ty=Tensor[(2816), float64] */;
    %468 = reshape(%465, newshape=[]) /* ty=int8 */;
    %469 = reshape(%466, newshape=[154]) /* ty=Tensor[(154), int8] */;
    %470 = reshape(%467, newshape=[2816]) /* ty=Tensor[(2816), float64] */;
    %471 = @func_2571(%468, %469, %470) /* ty=(Tensor[(154), int8], Tensor[(60), float64], Tensor[(5), int32], Tensor[(2816), float64], Tensor[(3, 60), uint16], Tensor[(11, 8, 10), int64], Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(14, 1, 11), uint8]) */;
    %472 = cast(meta[relay.Constant][28] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
    %473 = reshape(%472, newshape=[8, 12, 16]) /* ty=Tensor[(8, 12, 16), float64] */;
    %474 = cast(%var_2717, dtype="float64") /* ty=Tensor[(15, 4), float64] */;
    %475 = %464.5;
    %476 = cast(%475, dtype="int8") /* ty=int8 */;
    %477 = cast(meta[relay.Constant][30] /* ty=Tensor[(11, 14), int8] */, dtype="float32") /* ty=Tensor[(11, 14), float32] */;
    %478 = cast(%var_2718, dtype="uint64") /* ty=Tensor[(416, 4), uint64] */;
    %479 = reshape(%474, newshape=[60]) /* ty=Tensor[(60), float64] */;
    %480 = reshape(%476, newshape=[]) /* ty=int8 */;
    %481 = reshape(%477, newshape=[154]) /* ty=Tensor[(154), float32] */;
    %482 = reshape(%478, newshape=[1664]) /* ty=Tensor[(1664), uint64] */;
    %483 = @func_1872(%479, %480, %481, %482) /* ty=(Tensor[(9, 10), float64], Tensor[(6, 9, 12), int32], Tensor[(648), int32], Tensor[(60), float64], int8, Tensor[(154), float32], Tensor[(12, 11, 4), float32], Tensor[(180, 1), uint16], Tensor[(12, 11, 4), float32], Tensor[(10, 11, 5), int8], Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(13, 16, 8), uint64], Tensor[(1664), uint64], Tensor[(154), int8]) */;
    %484 = floor_mod(%454, %455) /* ty=Tensor[(11, 7, 3), float32] */;
    %485 = @func_2631(%457) /* ty=Tensor[(8, 12, 16), float64] */;
    %486 = @func_339(%459) /* ty=Tensor[(12, 11, 4), float32] */;
    %487 = %471.0;
    %488 = @func_2631(%473) /* ty=Tensor[(8, 12, 16), float64] */;
    %489 = %483.3;
    (%484, %485, meta[relay.Constant][28] /* ty=Tensor[(1536), float64] */, %486, %var_2674, %475, meta[relay.Constant][29] /* ty=Tensor[(6, 30), uint16] */, %var_2689, %487, meta[relay.Constant][30] /* ty=Tensor[(11, 14), int8] */, %var_2693, %488, %489, %var_2717, %var_2718)
  };
  %490(%var_2723, %var_2724, %var_2725, %var_2726, %var_2727, %var_2728, %var_2729) /* ty=(Tensor[(11, 7, 3), float32], Tensor[(8, 12, 16), float64], Tensor[(1536), float64], Tensor[(12, 11, 4), float32], Tensor[(528), float32], int8, Tensor[(6, 30), uint16], int8, Tensor[(154), int8], Tensor[(11, 14), int8], Tensor[(2816), float64], Tensor[(8, 12, 16), float64], Tensor[(60), float64], Tensor[(15, 4), float64], Tensor[(416, 4), uint64]) */
}

def @func_5917(%var_5915: int8, %var_5916: Tensor[(154), float32]) -> (Tensor[(14, 7, 3), float32], Tensor[(16, 12, 12), float64], Tensor[(5, 1, 14), float32], Tensor[(70), float32], Tensor[(10, 11, 5), int8], Tensor[(1, 60), float64], int8, Tensor[(154), float32], Tensor[(1664), uint64], Tensor[(6, 9, 12), int32]) {
  @func_5913(%var_5915, %var_5916) /* ty=(Tensor[(14, 7, 3), float32], Tensor[(16, 12, 12), float64], Tensor[(5, 1, 14), float32], Tensor[(70), float32], Tensor[(10, 11, 5), int8], Tensor[(1, 60), float64], int8, Tensor[(154), float32], Tensor[(1664), uint64], Tensor[(6, 9, 12), int32]) */
}

def @func_6911() -> Tensor[(14, 7, 3), float64] {
  %492 = fn () -> Tensor[(14, 7, 3), float64] {
    %491 = @func_5938() /* ty=(Tensor[(14, 7, 3), float64],) */;
    %491.0
  };
  %492() /* ty=Tensor[(14, 7, 3), float64] */
}

def @func_5940() -> (Tensor[(14, 7, 3), float64],) {
  @func_5938() /* ty=(Tensor[(14, 7, 3), float64],) */
}

def @func_8026(%var_7973: Tensor[(5, 1, 14), float32]) -> (Tensor[(14, 7, 3), float64], Tensor[(5, ?, 14), bool]) {
  %493 = @func_5938() /* ty=(Tensor[(14, 7, 3), float64],) */;
  %494 = cast(%var_7973, dtype="float64") /* ty=Tensor[(5, 1, 14), float64] */;
  %495 = log(%494) /* ty=Tensor[(5, 1, 14), float64] */;
  %496 = @func_7879() /* ty=(Tensor[(5, 1, 14), float32],) */;
  %497 = %496.0;
  %498 = cast(%var_7973, dtype="int16") /* ty=Tensor[(5, 1, 14), int16] */;
  %499 = shape_of(%497, dtype="int32") /* ty=Tensor[(3), int32] */;
  %500 = cast(%497, dtype="int16") /* ty=Tensor[(5, 1, 14), int16] */;
  %501 = dyn.reshape(%498, %499, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %502 = logical_xor(%500, %501) /* ty=Tensor[(5, ?, 14), int16] */;
  %503 = cast(%502, dtype="bool") /* ty=Tensor[(5, ?, 14), bool] */;
  %504 = shape_of(%495, dtype="int32") /* ty=Tensor[(3), int32] */;
  %505 = cast(%495, dtype="bool") /* ty=Tensor[(5, 1, 14), bool] */;
  %506 = dyn.reshape(%503, %504, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %507 = %493.0;
  %508 = equal(%505, %506) /* ty=Tensor[(5, ?, 14), bool] */;
  (%507, %508)
}

def @func_8205(%var_8191: Tensor[(7, 4, 16), float64]) -> (Tensor[(7, 4, 16), float64], Tensor[(14, 7, 3), float64]) {
  %509 = cast(%var_8191, dtype="float64") /* ty=Tensor[(7, 4, 16), float64] */;
  %510 = rsqrt(%509) /* ty=Tensor[(7, 4, 16), float64] */;
  %511 = @func_6910() /* ty=Tensor[(14, 7, 3), float64] */;
  (%510, %511)
}

def @func_8779() -> Tensor[(14, 7, 3), float32] {
  %512 = @func_8065() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %512.0
}

def @func_8776() -> (Tensor[(14, 7, 3), float32],) {
  %515 = fn () -> (Tensor[(14, 7, 3), float32],) {
    %513 = @func_7291() /* ty=(Tensor[(14, 7, 3), float32],) */;
    %514 = %513.0;
    (%514,)
  };
  %515() /* ty=(Tensor[(14, 7, 3), float32],) */
}

def @func_6192() -> (Tensor[(12, 13, 16), float32],) {
  %518 = fn () -> (Tensor[(12, 13, 16), float32],) {
    %516 = cast(meta[relay.Constant][31] /* ty=Tensor[(12, 13, 16), float32] */, dtype="float32") /* ty=Tensor[(12, 13, 16), float32] */;
    %517 = asin(%516) /* ty=Tensor[(12, 13, 16), float32] */;
    (%517,)
  };
  %518() /* ty=(Tensor[(12, 13, 16), float32],) */
}

def @func_9236() -> (Tensor[(14, 7, 3), float32],) {
  %521 = fn () -> (Tensor[(14, 7, 3), float32],) {
    %519 = @func_4212() /* ty=(Tensor[(14, 7, 3), float32],) */;
    %520 = %519.0;
    (%520,)
  };
  %521() /* ty=(Tensor[(14, 7, 3), float32],) */
}

def @func_10249(%var_10247: Tensor[(70), float32], %var_10248: Tensor[(324, 2), int32]) -> (Tensor[(16, 12, 12), float64], Tensor[(14, 7, 3), float32], Tensor[(70), float32], Tensor[(324, 2), int32], Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32]) {
  @func_10245(%var_10247, %var_10248) /* ty=(Tensor[(16, 12, 12), float64], Tensor[(14, 7, 3), float32], Tensor[(70), float32], Tensor[(324, 2), int32], Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32]) */
}

def @func_10594(%var_10593: bool) -> (Tensor[(14, 7, 3), float32], Tensor[(14, 1, 8), bool], Tensor[(180), uint16], Tensor[(180), uint16], Tensor[(16, 12, 12), float64]) {
  %535 = fn (%var_10554: bool) -> (Tensor[(14, 7, 3), float32], Tensor[(14, 1, 8), bool], Tensor[(180), uint16], Tensor[(180), uint16], Tensor[(16, 12, 12), float64]) {
    %522 = @func_7291() /* ty=(Tensor[(14, 7, 3), float32],) */;
    %523 = cast(%var_10554, dtype="bool") /* ty=bool */;
    %524 = reshape(%523, newshape=[]) /* ty=bool */;
    %525 = @func_5526(%524) /* ty=Tensor[(14, 1, 8), bool] */;
    %526 = cast(%525, dtype="bool") /* ty=Tensor[(14, 1, 8), bool] */;
    %527 = cast(%var_10554, dtype="bool") /* ty=bool */;
    %528 = cast(meta[relay.Constant][32] /* ty=Tensor[(180), uint16] */, dtype="uint16") /* ty=Tensor[(180), uint16] */;
    %529 = reshape(%528, newshape=[180]) /* ty=Tensor[(180), uint16] */;
    %530 = @func_6929(%529) /* ty=(Tensor[(14, 7, 3), float32], Tensor[(5, 14, 6), int8], Tensor[(420, 1), int8], Tensor[(2816), float64], Tensor[(180), uint16]) */;
    %531 = %522.0;
    %532 = logical_and(%526, %527) /* ty=Tensor[(14, 1, 8), bool] */;
    %533 = %530.4;
    %534 = @func_4613() /* ty=Tensor[(16, 12, 12), float64] */;
    (%531, %532, %533, meta[relay.Constant][32] /* ty=Tensor[(180), uint16] */, %534)
  };
  %535(%var_10593) /* ty=(Tensor[(14, 7, 3), float32], Tensor[(14, 1, 8), bool], Tensor[(180), uint16], Tensor[(180), uint16], Tensor[(16, 12, 12), float64]) */
}

def @main(%var_10901: Tensor[(10, 1, 16), bool], %var_10902: Tensor[(10, 12, 16), bool]) -> Tensor[(10, 12, 16), bool] {
  %536 = cast(%var_10901, dtype="bool") /* ty=Tensor[(10, 1, 16), bool] */;
  %537 = cast(%var_10902, dtype="bool") /* ty=Tensor[(10, 12, 16), bool] */;
  logical_and(%536, %537) /* ty=Tensor[(10, 12, 16), bool] */
}

def @func_5338(%var_5336: Tensor[(4, 10, 9), float32]) -> (Tensor[(6, 9, 12), int32], Tensor[(4, 10, 9), float32]) {
  @func_5335(%var_5336) /* ty=(Tensor[(6, 9, 12), int32], Tensor[(4, 10, 9), float32]) */
}

def @func_403(%var_371: Tensor[(10, 2, 3), float64], %var_397: int8) -> (Tensor[(10, 2, 3), float64], Tensor[(14, 1, 11), int8], int8, Tensor[(154), int8]) {
  %538 = cast(%var_371, dtype="float64") /* ty=Tensor[(10, 2, 3), float64] */;
  %539 = cast(%var_397, dtype="int8") /* ty=int8 */;
  %540 = cast(meta[relay.Constant][33] /* ty=Tensor[(154), int8] */, dtype="int8") /* ty=Tensor[(154), int8] */;
  %541 = reshape(%539, newshape=[]) /* ty=int8 */;
  %542 = reshape(%540, newshape=[14, 1, 11]) /* ty=Tensor[(14, 1, 11), int8] */;
  %543 = @func_134(%541, %542) /* ty=(Tensor[(14, 1, 11), int8],) */;
  %544 = rsqrt(%538) /* ty=Tensor[(10, 2, 3), float64] */;
  %545 = %543.0;
  (%544, %545, %var_397, meta[relay.Constant][33] /* ty=Tensor[(154), int8] */)
}

def @func_4590(%var_4582: Tensor[(648), int32], %var_4584: int8) -> (Tensor[(14, 7, 3), float32], Tensor[(6, 9, 12), int32], Tensor[(648), int32], Tensor[(60), float64], int8, Tensor[(11, 14), float32], Tensor[(14, 7, 3), float32]) {
  %546 = @func_4212() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %547 = cast(%var_4582, dtype="int32") /* ty=Tensor[(648), int32] */;
  %548 = cast(%var_4582, dtype="int32") /* ty=Tensor[(648), int32] */;
  %549 = cast(meta[relay.Constant][34] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %550 = cast(%var_4584, dtype="int8") /* ty=int8 */;
  %551 = cast(meta[relay.Constant][35] /* ty=Tensor[(11, 14), float32] */, dtype="float32") /* ty=Tensor[(11, 14), float32] */;
  %552 = reshape(%547, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), int32] */;
  %553 = reshape(%548, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), int32] */;
  %554 = reshape(%549, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %555 = reshape(%550, newshape=[]) /* ty=int8 */;
  %556 = reshape(%551, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %557 = @func_1737(%552, %553, %554, %555, %556) /* ty=(Tensor[(6, 9, 12), int32], Tensor[(60), float64], int8, Tensor[(154), bool]) */;
  %558 = @func_4016() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %559 = %546.0;
  %560 = %557.0;
  %561 = %558.0;
  (%559, %560, %var_4582, meta[relay.Constant][34] /* ty=Tensor[(60), float64] */, %var_4584, meta[relay.Constant][35] /* ty=Tensor[(11, 14), float32] */, %561)
}

def @func_6851() -> (int8, Tensor[(14, 7, 3), float32]) {
  %562 = @func_4637() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32], Tensor[(6, 9, 12), int32], Tensor[(648), int32], int8) */;
  %563 = %562.4;
  %564 = cast(%563, dtype="int8") /* ty=int8 */;
  %565 = reshape(%564, newshape=[]) /* ty=int8 */;
  %566 = @func_6642(%565) /* ty=(Tensor[(14, 7, 3), float32], Tensor[(10, 11, 5), int8], int8) */;
  %567 = %566.0;
  (%563, %567)
}

def @func_10492(%var_10491: Tensor[(315), float32]) -> (Tensor[(6, 9, 12), int32], Tensor[(14, 1, 11), int8], Tensor[(315), float32], Tensor[(192), uint8], int8, Tensor[(154), int8], Tensor[(132), uint64]) {
  %581 = fn (%var_10479: Tensor[(315), float32]) -> (Tensor[(6, 9, 12), int32], Tensor[(14, 1, 11), int8], Tensor[(315), float32], Tensor[(192), uint8], int8, Tensor[(154), int8], Tensor[(132), uint64]) {
    %568 = cast(%var_10479, dtype="float32") /* ty=Tensor[(315), float32] */;
    %569 = cast(meta[relay.Constant][36] /* ty=Tensor[(192), uint8] */, dtype="uint8") /* ty=Tensor[(192), uint8] */;
    %570 = cast(meta[relay.Constant][37] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %571 = cast(meta[relay.Constant][38] /* ty=Tensor[(154), int8] */, dtype="int8") /* ty=Tensor[(154), int8] */;
    %572 = cast(meta[relay.Constant][39] /* ty=Tensor[(132), uint64] */, dtype="uint64") /* ty=Tensor[(132), uint64] */;
    %573 = reshape(%568, newshape=[15, 7, 3]) /* ty=Tensor[(15, 7, 3), float32] */;
    %574 = reshape(%569, newshape=[8, 24]) /* ty=Tensor[(8, 24), uint8] */;
    %575 = reshape(%570, newshape=[]) /* ty=int8 */;
    %576 = reshape(%571, newshape=[154]) /* ty=Tensor[(154), int8] */;
    %577 = reshape(%572, newshape=[132]) /* ty=Tensor[(132), uint64] */;
    %578 = @func_4411(%573, %574, %575, %576, %577) /* ty=(Tensor[(15, 7, 3), float32], Tensor[(14, 1, 11), int8], Tensor[(96), uint8], Tensor[(8, 24), uint8], int8, Tensor[(154), int8], Tensor[(132), uint64], Tensor[(14, 1, 11), int8]) */;
    %579 = @func_5549() /* ty=Tensor[(6, 9, 12), int32] */;
    %580 = %578.1;
    (%579, %580, %var_10479, meta[relay.Constant][36] /* ty=Tensor[(192), uint8] */, meta[relay.Constant][37] /* ty=int8 */, meta[relay.Constant][38] /* ty=Tensor[(154), int8] */, meta[relay.Constant][39] /* ty=Tensor[(132), uint64] */)
  };
  %581(%var_10491) /* ty=(Tensor[(6, 9, 12), int32], Tensor[(14, 1, 11), int8], Tensor[(315), float32], Tensor[(192), uint8], int8, Tensor[(154), int8], Tensor[(132), uint64]) */
}

def @func_5699() -> (Tensor[(14, 7, 3), float64], Tensor[(14, 7, 3), float32]) {
  %585 = fn () -> (Tensor[(14, 7, 3), float64], Tensor[(14, 7, 3), float32]) {
    %582 = @func_5050() /* ty=(Tensor[(14, 7, 3), float64], Tensor[(14, 7, 3), float32]) */;
    %583 = %582.0;
    %584 = @func_5655() /* ty=Tensor[(14, 7, 3), float32] */;
    (%583, %584)
  };
  %585() /* ty=(Tensor[(14, 7, 3), float64], Tensor[(14, 7, 3), float32]) */
}

def @func_901(%var_899: Tensor[(180), uint16], %var_900: int8) -> (Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(528), float32], Tensor[(180), uint16], Tensor[(14, 1, 11), int8], int8, Tensor[(154), int8], Tensor[(12, 11, 4), float32], Tensor[(14, 14, 10), float32]) {
  @func_897(%var_899, %var_900) /* ty=(Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(528), float32], Tensor[(180), uint16], Tensor[(14, 1, 11), int8], int8, Tensor[(154), int8], Tensor[(12, 11, 4), float32], Tensor[(14, 14, 10), float32]) */
}

def @func_7390(%var_7389: Tensor[(3, 14, 7), int64]) -> (Tensor[(5, 1, 14), float32], Tensor[(70), float32], Tensor[(3, 14, 7), float64]) {
  %599 = fn (%var_7365: Tensor[(3, 14, 7), int64]) -> (Tensor[(5, 1, 14), float32], Tensor[(70), float32], Tensor[(3, 14, 7), float64]) {
    %586 = cast(meta[relay.Constant][40] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
    %587 = reshape(%586, newshape=[70]) /* ty=Tensor[(70), float32] */;
    %588 = @func_6764(%587) /* ty=(Tensor[(14, 7, 3), bool], Tensor[(5, 1, 14), float32], Tensor[(70), float32]) */;
    %589 = cast(meta[relay.Constant][41] /* ty=Tensor[(3, 14, 7), int64] */, dtype="int64") /* ty=Tensor[(3, 14, 7), int64] */;
    %590 = shape_of(%var_7365, dtype="int32") /* ty=Tensor[(3), int32] */;
    %591 = cast(%var_7365, dtype="int64") /* ty=Tensor[(3, 14, 7), int64] */;
    %592 = dyn.reshape(%589, %590, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %593 = multiply(%591, %592) /* ty=Tensor[(3, 14, 7), int64] */;
    %594 = cast(%593, dtype="float64") /* ty=Tensor[(3, 14, 7), float64] */;
    %595 = sinh(%594) /* ty=Tensor[(3, 14, 7), float64] */;
    %596 = cast(%595, dtype="float64") /* ty=Tensor[(3, 14, 7), float64] */;
    %597 = %588.1;
    %598 = log10(%596) /* ty=Tensor[(3, 14, 7), float64] */;
    (%597, meta[relay.Constant][40] /* ty=Tensor[(70), float32] */, %598)
  };
  %599(%var_7389) /* ty=(Tensor[(5, 1, 14), float32], Tensor[(70), float32], Tensor[(3, 14, 7), float64]) */
}

def @func_4614() -> Tensor[(16, 12, 12), float64] {
  %601 = fn () -> Tensor[(16, 12, 12), float64] {
    %600 = cast(meta[relay.Constant][42] /* ty=Tensor[(16, 12, 12), float64] */, dtype="float64") /* ty=Tensor[(16, 12, 12), float64] */;
    asin(%600) /* ty=Tensor[(16, 12, 12), float64] */
  };
  %601() /* ty=Tensor[(16, 12, 12), float64] */
}

def @func_4987(%var_4984: Tensor[(132), uint64], %var_4985: Tensor[(60), float64], %var_4986: Tensor[(5), int32]) -> (Tensor[(16, 12, 12), float64], Tensor[(?, 11, 12), float32], Tensor[(154), float32], Tensor[(252), uint8], Tensor[(60), float64], Tensor[(154, 1), float32], Tensor[(1664), uint64], Tensor[(5), int32], Tensor[(6, 30), uint16]) {
  %626 = fn (%var_4932: Tensor[(132), uint64], %var_4969: Tensor[(60), float64], %var_4972: Tensor[(5), int32]) -> (Tensor[(16, 12, 12), float64], Tensor[(?, 11, 12), float32], Tensor[(154), float32], Tensor[(252), uint8], Tensor[(60), float64], Tensor[(154, 1), float32], Tensor[(1664), uint64], Tensor[(5), int32], Tensor[(6, 30), uint16]) {
    %602 = cast(%var_4932, dtype="uint64") /* ty=Tensor[(132), uint64] */;
    %603 = reshape(%602, newshape=[1, 11, 12]) /* ty=Tensor[(1, 11, 12), uint64] */;
    %604 = @func_2237(%603) /* ty=(Tensor[(1, 11, 12), uint64],) */;
    %605 = %604.0;
    %606 = cast(%var_4932, dtype="float32") /* ty=Tensor[(132), float32] */;
    %607 = shape_of(%605, dtype="int32") /* ty=Tensor[(3), int32] */;
    %608 = cast(%605, dtype="float32") /* ty=Tensor[(1, 11, 12), float32] */;
    %609 = dyn.reshape(%606, %607, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %610 = cast(meta[relay.Constant][43] /* ty=Tensor[(252), uint8] */, dtype="uint8") /* ty=Tensor[(252), uint8] */;
    %611 = cast(%var_4969, dtype="float64") /* ty=Tensor[(60), float64] */;
    %612 = cast(meta[relay.Constant][44] /* ty=Tensor[(154, 1), float32] */, dtype="float32") /* ty=Tensor[(154, 1), float32] */;
    %613 = cast(meta[relay.Constant][45] /* ty=Tensor[(1664), uint64] */, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
    %614 = cast(%var_4972, dtype="int32") /* ty=Tensor[(5), int32] */;
    %615 = cast(meta[relay.Constant][46] /* ty=Tensor[(6, 30), uint16] */, dtype="uint16") /* ty=Tensor[(6, 30), uint16] */;
    %616 = reshape(%610, newshape=[3, 6, 14]) /* ty=Tensor[(3, 6, 14), uint8] */;
    %617 = reshape(%611, newshape=[60]) /* ty=Tensor[(60), float64] */;
    %618 = reshape(%612, newshape=[154]) /* ty=Tensor[(154), float32] */;
    %619 = reshape(%613, newshape=[1664]) /* ty=Tensor[(1664), uint64] */;
    %620 = reshape(%614, newshape=[5]) /* ty=Tensor[(5), int32] */;
    %621 = reshape(%615, newshape=[180]) /* ty=Tensor[(180), uint16] */;
    %622 = @func_2414(%616, %617, %618, %619, %620, %621) /* ty=(Tensor[(3, 6, 14), bool], int8, Tensor[(60), float64], Tensor[(154), float32], Tensor[(1664), uint64], Tensor[(180), uint16], Tensor[(5), int32], Tensor[(180), uint16], Tensor[(2816), uint64]) */;
    %623 = @func_4613() /* ty=Tensor[(16, 12, 12), float64] */;
    %624 = floor_mod(%608, %609) /* ty=Tensor[(?, 11, 12), float32] */;
    %625 = %622.3;
    (%623, %624, %625, meta[relay.Constant][43] /* ty=Tensor[(252), uint8] */, %var_4969, meta[relay.Constant][44] /* ty=Tensor[(154, 1), float32] */, meta[relay.Constant][45] /* ty=Tensor[(1664), uint64] */, %var_4972, meta[relay.Constant][46] /* ty=Tensor[(6, 30), uint16] */)
  };
  %626(%var_4984, %var_4985, %var_4986) /* ty=(Tensor[(16, 12, 12), float64], Tensor[(?, 11, 12), float32], Tensor[(154), float32], Tensor[(252), uint8], Tensor[(60), float64], Tensor[(154, 1), float32], Tensor[(1664), uint64], Tensor[(5), int32], Tensor[(6, 30), uint16]) */
}

def @func_9633() -> (Tensor[(14, 7, 3), float32],) {
  %627 = @func_8775() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %628 = %627.0;
  (%628,)
}

def @func_9635() -> (Tensor[(14, 7, 3), float32],) {
  @func_9633() /* ty=(Tensor[(14, 7, 3), float32],) */
}

def @func_10356(%var_10354: bool, %var_10355: Tensor[(16, 15, 10), bool]) -> Tensor[(16, 15, 10), bool] {
  %631 = fn (%var_10340: bool, %var_10341: Tensor[(16, 15, 10), bool]) -> Tensor[(16, 15, 10), bool] {
    %629 = cast(%var_10340, dtype="bool") /* ty=bool */;
    %630 = cast(%var_10341, dtype="bool") /* ty=Tensor[(16, 15, 10), bool] */;
    logical_and(%629, %630) /* ty=Tensor[(16, 15, 10), bool] */
  };
  %631(%var_10354, %var_10355) /* ty=Tensor[(16, 15, 10), bool] */
}

def @func_6698() -> (Tensor[(16, 12, 12), float64], Tensor[(14, 7, 3), float32]) {
  %632 = @func_5748() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(16, 12, 12), float64]) */;
  %633 = %632.1;
  %634 = @func_5261() /* ty=Tensor[(14, 7, 3), float32] */;
  (%633, %634)
}

def @func_1943(%var_1940: Tensor[(16, 16, 11), float64], %var_1941: Tensor[(180), uint16], %var_1942: int8) -> (Tensor[(16, 16, 11), float64], Tensor[(12, 11, 4), float32], Tensor[(180), uint16], int8) {
  @func_1938(%var_1940, %var_1941, %var_1942) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(12, 11, 4), float32], Tensor[(180), uint16], int8) */
}

def @func_5263() -> Tensor[(14, 7, 3), float32] {
  @func_5261() /* ty=Tensor[(14, 7, 3), float32] */
}

def @func_8675(%var_8673: Tensor[(2, 9, 6), bool]) -> (Tensor[(2, 9, 6), bool],) {
  @func_8672(%var_8673) /* ty=(Tensor[(2, 9, 6), bool],) */
}

def @func_9952(%var_9931: Tensor[(70), float32], %var_9939: Tensor[(528), float32]) -> (Tensor[(14, 7, 3), float32], Tensor[(16, 12, 12), float64], Tensor[(5, 1, 14), float32], Tensor[(70), float32], Tensor[(3, 4, 11), float32], Tensor[(132), float32], Tensor[(528), float32]) {
  %635 = cast(%var_9931, dtype="float32") /* ty=Tensor[(70), float32] */;
  %636 = reshape(%635, newshape=[70]) /* ty=Tensor[(70), float32] */;
  %637 = @func_6764(%636) /* ty=(Tensor[(14, 7, 3), bool], Tensor[(5, 1, 14), float32], Tensor[(70), float32]) */;
  %638 = cast(meta[relay.Constant][47] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
  %639 = cast(%var_9939, dtype="float32") /* ty=Tensor[(528), float32] */;
  %640 = reshape(%638, newshape=[3, 4, 11]) /* ty=Tensor[(3, 4, 11), float32] */;
  %641 = reshape(%639, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %642 = @func_9222(%640, %641) /* ty=(Tensor[(3, 4, 11), float32], Tensor[(3, 4, 11), float32], Tensor[(12, 11, 4), float32], Tensor[(528), float32]) */;
  %643 = @func_5655() /* ty=Tensor[(14, 7, 3), float32] */;
  %644 = @func_5650() /* ty=Tensor[(16, 12, 12), float64] */;
  %645 = %637.1;
  %646 = %642.1;
  (%643, %644, %645, %var_9931, %646, meta[relay.Constant][47] /* ty=Tensor[(132), float32] */, %var_9939)
}

def @func_4376() -> (Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32]) {
  %658 = fn () -> (Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32]) {
    %647 = @func_4016() /* ty=(Tensor[(14, 7, 3), float32],) */;
    %648 = %647.0;
    %649 = @func_4016() /* ty=(Tensor[(14, 7, 3), float32],) */;
    %650 = %649.0;
    %651 = cast(%650, dtype="bool") /* ty=Tensor[(14, 7, 3), bool] */;
    %652 = shape_of(%648, dtype="int32") /* ty=Tensor[(3), int32] */;
    %653 = cast(%648, dtype="bool") /* ty=Tensor[(14, 7, 3), bool] */;
    %654 = dyn.reshape(%651, %652, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %655 = @func_4212() /* ty=(Tensor[(14, 7, 3), float32],) */;
    %656 = greater_equal(%653, %654) /* ty=Tensor[(14, 7, 3), bool] */;
    %657 = %655.0;
    (%656, %657)
  };
  %658() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32]) */
}

def @func_7112(%var_7111: Tensor[(2, 11, 5), float64]) -> (Tensor[(264, 2), float32], Tensor[(2, 264), float32], Tensor[(2, 11, 5), uint32], Tensor[(14, 7, 3), float64], Tensor[(2, 11, 5), float32], Tensor[(14, 7, 3), float32]) {
  %679 = fn (%var_7066: Tensor[(2, 11, 5), float64]) -> (Tensor[(264, 2), float32], Tensor[(2, 264), float32], Tensor[(2, 11, 5), uint32], Tensor[(14, 7, 3), float64], Tensor[(2, 11, 5), float32], Tensor[(14, 7, 3), float32]) {
    %659 = cast(meta[relay.Constant][48] /* ty=Tensor[(2, 264), float32] */, dtype="float32") /* ty=Tensor[(2, 264), float32] */;
    %660 = reshape(%659, newshape=[264, 2]) /* ty=Tensor[(264, 2), float32] */;
    %661 = @func_4156(%660) /* ty=(Tensor[(14, 7, 3), float32], Tensor[(2816), float64], Tensor[(144, 4), int8], Tensor[(154), int8], Tensor[(2, 1408), float64], Tensor[(12, 11, 4), float32], Tensor[(264, 2), float32]) */;
    %662 = cast(%var_7066, dtype="float64") /* ty=Tensor[(2, 11, 5), float64] */;
    %663 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(2, 11, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %664 = cast(meta[relay.Constant][49] /* ty=Tensor[(2, 11, 5), float64] */, dtype="float64") /* ty=Tensor[(2, 11, 5), float64] */;
    %665 = dyn.reshape(%662, %663, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %666 = floor_divide(%664, %665) /* ty=Tensor[(2, 11, 5), float64] */;
    %667 = cast(%666, dtype="uint32") /* ty=Tensor[(2, 11, 5), uint32] */;
    %668 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(2, 11, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %669 = cast(meta[relay.Constant][49] /* ty=Tensor[(2, 11, 5), float64] */, dtype="uint32") /* ty=Tensor[(2, 11, 5), uint32] */;
    %670 = dyn.reshape(%667, %668, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %671 = @func_5938() /* ty=(Tensor[(14, 7, 3), float64],) */;
    %672 = cast(%var_7066, dtype="float32") /* ty=Tensor[(2, 11, 5), float32] */;
    %673 = @func_7040() /* ty=(Tensor[(14, 7, 3), float32],) */;
    %674 = %661.6;
    %675 = subtract(%669, %670) /* ty=Tensor[(2, 11, 5), uint32] */;
    %676 = %671.0;
    %677 = log10(%672) /* ty=Tensor[(2, 11, 5), float32] */;
    %678 = %673.0;
    (%674, meta[relay.Constant][48] /* ty=Tensor[(2, 264), float32] */, %675, %676, %677, %678)
  };
  %679(%var_7111) /* ty=(Tensor[(264, 2), float32], Tensor[(2, 264), float32], Tensor[(2, 11, 5), uint32], Tensor[(14, 7, 3), float64], Tensor[(2, 11, 5), float32], Tensor[(14, 7, 3), float32]) */
}

def @func_9776(%var_9774: Tensor[(14, 7, 3), float32]) -> Tensor[(14, 7, 3), int16] {
  @func_9773(%var_9774) /* ty=Tensor[(14, 7, 3), int16] */
}

def @func_4103(%var_4067: Tensor[(2816), float64], %var_4068: Tensor[(180), uint16], %var_4074: Tensor[(60), float64], %var_4075: Tensor[(154), float32], %var_4076: Tensor[(1664), uint64]) -> (Tensor[(14, 7, 3), float32], Tensor[(16, 16, 11), float64], Tensor[(5), int32], Tensor[(2816), float64], Tensor[(180), uint16], Tensor[(12, 11, 4), float32], Tensor[(60), float64], Tensor[(154), float32], Tensor[(16, 16, 11), float64], Tensor[(1664), int64]) {
  %680 = @func_4016() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %681 = cast(-5 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %682 = cast(meta[relay.Constant][50] /* ty=Tensor[(5), int32] */, dtype="int32") /* ty=Tensor[(5), int32] */;
  %683 = cast(%var_4067, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %684 = cast(%var_4068, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %685 = reshape(%681, newshape=[]) /* ty=int32 */;
  %686 = reshape(%682, newshape=[1, 1, 5]) /* ty=Tensor[(1, 1, 5), int32] */;
  %687 = reshape(%683, newshape=[2816]) /* ty=Tensor[(2816), float64] */;
  %688 = reshape(%684, newshape=[180]) /* ty=Tensor[(180), uint16] */;
  %689 = @func_2124(%685, %686, %687, %688) /* ty=(Tensor[(1, 1, 5), int32], Tensor[(1, 1, 5), uint32], Tensor[(60), float64], Tensor[(16, 16, 11), float64], Tensor[(180), uint16], Tensor[(10, 2, 3), float64], Tensor[(2816), float32]) */;
  %690 = cast(%var_4074, dtype="float64") /* ty=Tensor[(60), float64] */;
  %691 = cast(-5 /* ty=int32 */, dtype="int8") /* ty=int8 */;
  %692 = cast(%var_4075, dtype="float32") /* ty=Tensor[(154), float32] */;
  %693 = cast(%var_4076, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
  %694 = reshape(%690, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %695 = reshape(%691, newshape=[]) /* ty=int8 */;
  %696 = reshape(%692, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %697 = reshape(%693, newshape=[1664]) /* ty=Tensor[(1664), uint64] */;
  %698 = @func_1872(%694, %695, %696, %697) /* ty=(Tensor[(9, 10), float64], Tensor[(6, 9, 12), int32], Tensor[(648), int32], Tensor[(60), float64], int8, Tensor[(154), float32], Tensor[(12, 11, 4), float32], Tensor[(180, 1), uint16], Tensor[(12, 11, 4), float32], Tensor[(10, 11, 5), int8], Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(13, 16, 8), uint64], Tensor[(1664), uint64], Tensor[(154), int8]) */;
  %699 = cast(-5 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %700 = cast(meta[relay.Constant][50] /* ty=Tensor[(5), int32] */, dtype="int32") /* ty=Tensor[(5), int32] */;
  %701 = cast(%var_4067, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %702 = cast(%var_4068, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %703 = reshape(%699, newshape=[]) /* ty=int32 */;
  %704 = reshape(%700, newshape=[1, 1, 5]) /* ty=Tensor[(1, 1, 5), int32] */;
  %705 = reshape(%701, newshape=[2816]) /* ty=Tensor[(2816), float64] */;
  %706 = reshape(%702, newshape=[180]) /* ty=Tensor[(180), uint16] */;
  %707 = @func_2124(%703, %704, %705, %706) /* ty=(Tensor[(1, 1, 5), int32], Tensor[(1, 1, 5), uint32], Tensor[(60), float64], Tensor[(16, 16, 11), float64], Tensor[(180), uint16], Tensor[(10, 2, 3), float64], Tensor[(2816), float32]) */;
  %708 = cast(%var_4076, dtype="int64") /* ty=Tensor[(1664), int64] */;
  %709 = cast(-5 /* ty=int32 */, dtype="int64") /* ty=int64 */;
  %710 = %680.0;
  %711 = %689.3;
  %712 = %698.8;
  %713 = %707.3;
  %714 = minimum(%708, %709) /* ty=Tensor[(1664), int64] */;
  (%710, %711, meta[relay.Constant][50] /* ty=Tensor[(5), int32] */, %var_4067, %var_4068, %712, %var_4074, %var_4075, %713, %714)
}

def @func_6544(%var_6540: Tensor[(2816), float64], %var_6541: Tensor[(60, 1), float64], %var_6542: Tensor[(154), float32], %var_6543: Tensor[(104, 16), uint64]) -> (Tensor[(14, 7, 3), float32], Tensor[(12, 11, 4), float32], Tensor[(2816), float64], Tensor[(6, 30), uint16], Tensor[(60, 1), float64], Tensor[(154), float32], Tensor[(104, 16), uint64]) {
  %729 = fn (%var_6515: Tensor[(2816), float64], %var_6517: Tensor[(60, 1), float64], %var_6518: Tensor[(154), float32], %var_6519: Tensor[(104, 16), uint64]) -> (Tensor[(14, 7, 3), float32], Tensor[(12, 11, 4), float32], Tensor[(2816), float64], Tensor[(6, 30), uint16], Tensor[(60, 1), float64], Tensor[(154), float32], Tensor[(104, 16), uint64]) {
    %715 = @func_4212() /* ty=(Tensor[(14, 7, 3), float32],) */;
    %716 = cast(%var_6515, dtype="float64") /* ty=Tensor[(2816), float64] */;
    %717 = cast(meta[relay.Constant][51] /* ty=Tensor[(6, 30), uint16] */, dtype="uint16") /* ty=Tensor[(6, 30), uint16] */;
    %718 = cast(%var_6517, dtype="float64") /* ty=Tensor[(60, 1), float64] */;
    %719 = cast(%var_6518, dtype="float32") /* ty=Tensor[(154), float32] */;
    %720 = cast(%var_6519, dtype="uint64") /* ty=Tensor[(104, 16), uint64] */;
    %721 = reshape(%716, newshape=[2816]) /* ty=Tensor[(2816), float64] */;
    %722 = reshape(%717, newshape=[180]) /* ty=Tensor[(180), uint16] */;
    %723 = reshape(%718, newshape=[60]) /* ty=Tensor[(60), float64] */;
    %724 = reshape(%719, newshape=[154]) /* ty=Tensor[(154), float32] */;
    %725 = reshape(%720, newshape=[1664]) /* ty=Tensor[(1664), uint64] */;
    %726 = @func_4103(%721, %722, %723, %724, %725) /* ty=(Tensor[(14, 7, 3), float32], Tensor[(16, 16, 11), float64], Tensor[(5), int32], Tensor[(2816), float64], Tensor[(180), uint16], Tensor[(12, 11, 4), float32], Tensor[(60), float64], Tensor[(154), float32], Tensor[(16, 16, 11), float64], Tensor[(1664), int64]) */;
    %727 = %715.0;
    %728 = %726.5;
    (%727, %728, %var_6515, meta[relay.Constant][51] /* ty=Tensor[(6, 30), uint16] */, %var_6517, %var_6518, %var_6519)
  };
  %729(%var_6540, %var_6541, %var_6542, %var_6543) /* ty=(Tensor[(14, 7, 3), float32], Tensor[(12, 11, 4), float32], Tensor[(2816), float64], Tensor[(6, 30), uint16], Tensor[(60, 1), float64], Tensor[(154), float32], Tensor[(104, 16), uint64]) */
}

def @func_1577(%var_1575: int8) -> (Tensor[(10, 11, 5), int8],) {
  @func_1574(%var_1575) /* ty=(Tensor[(10, 11, 5), int8],) */
}

def @func_5526(%var_5505: bool) -> Tensor[(14, 1, 8), bool] {
  %730 = cast(%var_5505, dtype="bool") /* ty=bool */;
  %731 = cast(meta[relay.Constant][52] /* ty=Tensor[(14, 1, 8), bool] */, dtype="bool") /* ty=Tensor[(14, 1, 8), bool] */;
  logical_or(%730, %731) /* ty=Tensor[(14, 1, 8), bool] */
}

def @func_7406() -> (Tensor[(14, 7, 3), bool],) {
  %734 = fn () -> (Tensor[(14, 7, 3), bool],) {
    %732 = @func_4375() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32]) */;
    %733 = %732.0;
    (%733,)
  };
  %734() /* ty=(Tensor[(14, 7, 3), bool],) */
}

def @func_6046(%var_6044: Tensor[(60), float64], %var_6045: Tensor[(1664), uint64]) -> (Tensor[(14, 7, 3), float32], int8, Tensor[(648), int32], Tensor[(60), float64], int8, Tensor[(154), float32], Tensor[(1664), int64], Tensor[(2816), float64], Tensor[(180), uint16], Tensor[(1664), uint64], Tensor[(10, 11, 5), int8]) {
  @func_6042(%var_6044, %var_6045) /* ty=(Tensor[(14, 7, 3), float32], int8, Tensor[(648), int32], Tensor[(60), float64], int8, Tensor[(154), float32], Tensor[(1664), int64], Tensor[(2816), float64], Tensor[(180), uint16], Tensor[(1664), uint64], Tensor[(10, 11, 5), int8]) */
}

def @func_4594(%var_4592: Tensor[(648), int32], %var_4593: int8) -> (Tensor[(14, 7, 3), float32], Tensor[(6, 9, 12), int32], Tensor[(648), int32], Tensor[(60), float64], int8, Tensor[(11, 14), float32], Tensor[(14, 7, 3), float32]) {
  @func_4590(%var_4592, %var_4593) /* ty=(Tensor[(14, 7, 3), float32], Tensor[(6, 9, 12), int32], Tensor[(648), int32], Tensor[(60), float64], int8, Tensor[(11, 14), float32], Tensor[(14, 7, 3), float32]) */
}

def @func_9586(%var_9583: Tensor[(60), float64], %var_9584: Tensor[(22, 7), float32], %var_9585: Tensor[(1664), uint64]) -> (Tensor[(14, 7, 3), float32], Tensor[(154), float32], Tensor[(2816), float64], Tensor[(60), float64], Tensor[(22, 7), float32], Tensor[(1664), uint64]) {
  @func_9581(%var_9583, %var_9584, %var_9585) /* ty=(Tensor[(14, 7, 3), float32], Tensor[(154), float32], Tensor[(2816), float64], Tensor[(60), float64], Tensor[(22, 7), float32], Tensor[(1664), uint64]) */
}

def @func_10308() -> (Tensor[(14, 7, 3), float32],) {
  %736 = fn () -> (Tensor[(14, 7, 3), float32],) {
    %735 = @func_5261() /* ty=Tensor[(14, 7, 3), float32] */;
    (%735,)
  };
  %736() /* ty=(Tensor[(14, 7, 3), float32],) */
}

def @func_9956(%var_9954: Tensor[(70), float32], %var_9955: Tensor[(528), float32]) -> (Tensor[(14, 7, 3), float32], Tensor[(16, 12, 12), float64], Tensor[(5, 1, 14), float32], Tensor[(70), float32], Tensor[(3, 4, 11), float32], Tensor[(132), float32], Tensor[(528), float32]) {
  @func_9952(%var_9954, %var_9955) /* ty=(Tensor[(14, 7, 3), float32], Tensor[(16, 12, 12), float64], Tensor[(5, 1, 14), float32], Tensor[(70), float32], Tensor[(3, 4, 11), float32], Tensor[(132), float32], Tensor[(528), float32]) */
}

def @func_670(%var_668: Tensor[(5, 4, 9), uint16], %var_669: Tensor[(5, 4, 9), uint16]) -> (Tensor[(5, 4, 9), uint16], Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(12, 11, 4), float32], Tensor[(12, 11, 4), float32]) {
  @func_666(%var_668, %var_669) /* ty=(Tensor[(5, 4, 9), uint16], Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(12, 11, 4), float32], Tensor[(12, 11, 4), float32]) */
}

def @func_4880() -> (Tensor[(14, 7, 3), float32],) {
  %737 = @func_4775() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %738 = %737.0;
  (%738,)
}

def @func_10729(%var_10723: Tensor[(576, 1), int8]) -> (Tensor[(14, 7, 3), uint32], Tensor[(12, 8, 6), int8], Tensor[(576, 1), int8], Tensor[(11, 14), int8], Tensor[(2816), float64]) {
  %739 = @func_5273() /* ty=(Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), uint32]) */;
  %740 = cast(%var_10723, dtype="int8") /* ty=Tensor[(576, 1), int8] */;
  %741 = cast(%var_10723, dtype="int8") /* ty=Tensor[(576, 1), int8] */;
  %742 = cast(meta[relay.Constant][53] /* ty=Tensor[(11, 14), int8] */, dtype="int8") /* ty=Tensor[(11, 14), int8] */;
  %743 = cast(meta[relay.Constant][54] /* ty=Tensor[(2816), float64] */, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %744 = reshape(%740, newshape=[12, 8, 6]) /* ty=Tensor[(12, 8, 6), int8] */;
  %745 = reshape(%741, newshape=[12, 8, 6]) /* ty=Tensor[(12, 8, 6), int8] */;
  %746 = reshape(%742, newshape=[154]) /* ty=Tensor[(154), int8] */;
  %747 = reshape(%743, newshape=[2816]) /* ty=Tensor[(2816), float64] */;
  %748 = @func_3697(%744, %745, %746, %747) /* ty=(Tensor[(12, 8, 6), int8], Tensor[(12, 8, 6), float32], Tensor[(60), float64], int8, Tensor[(154), int8], Tensor[(2816), float64]) */;
  %749 = %739.1;
  %750 = %748.0;
  (%749, %750, %var_10723, meta[relay.Constant][53] /* ty=Tensor[(11, 14), int8] */, meta[relay.Constant][54] /* ty=Tensor[(2816), float64] */)
}

def @func_7793(%var_7791: Tensor[(70), float32], %var_7792: Tensor[(648), int32]) -> (Tensor[(14, 7, 3), float32], Tensor[(70), float32], Tensor[(70), float32], Tensor[(648), bool], Tensor[(648), int32]) {
  %759 = fn (%var_7768: Tensor[(70), float32], %var_7778: Tensor[(648), int32]) -> (Tensor[(14, 7, 3), float32], Tensor[(70), float32], Tensor[(70), float32], Tensor[(648), bool], Tensor[(648), int32]) {
    %751 = cast(%var_7768, dtype="float32") /* ty=Tensor[(70), float32] */;
    %752 = reshape(%751, newshape=[70]) /* ty=Tensor[(70), float32] */;
    %753 = @func_6764(%752) /* ty=(Tensor[(14, 7, 3), bool], Tensor[(5, 1, 14), float32], Tensor[(70), float32]) */;
    %754 = cast(%var_7778, dtype="int32") /* ty=Tensor[(648), int32] */;
    %755 = reshape(%754, newshape=[648]) /* ty=Tensor[(648), int32] */;
    %756 = @func_5655() /* ty=Tensor[(14, 7, 3), float32] */;
    %757 = %753.2;
    %758 = @func_5470(%755) /* ty=Tensor[(648), bool] */;
    (%756, %757, %var_7768, %758, %var_7778)
  };
  %759(%var_7791, %var_7792) /* ty=(Tensor[(14, 7, 3), float32], Tensor[(70), float32], Tensor[(70), float32], Tensor[(648), bool], Tensor[(648), int32]) */
}

def @func_10732(%var_10730: Tensor[(576, 1), int8]) -> (Tensor[(14, 7, 3), uint32], Tensor[(12, 8, 6), int8], Tensor[(576, 1), int8], Tensor[(11, 14), int8], Tensor[(2816), float64]) {
  @func_10729(%var_10730) /* ty=(Tensor[(14, 7, 3), uint32], Tensor[(12, 8, 6), int8], Tensor[(576, 1), int8], Tensor[(11, 14), int8], Tensor[(2816), float64]) */
}

def @func_8495() -> (Tensor[(14, 7, 3), uint8],) {
  %760 = @func_8065() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %761 = %760.0;
  %762 = cast(meta[relay.Constant][55] /* ty=Tensor[(14, 7, 3), float32] */, dtype="uint8") /* ty=Tensor[(14, 7, 3), uint8] */;
  %763 = shape_of(%761, dtype="int32") /* ty=Tensor[(3), int32] */;
  %764 = cast(%761, dtype="uint8") /* ty=Tensor[(14, 7, 3), uint8] */;
  %765 = dyn.reshape(%762, %763, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %766 = multiply(%764, %765) /* ty=Tensor[(14, 7, 3), uint8] */;
  (%766,)
}

def @func_6644(%var_6643: int8) -> (Tensor[(14, 7, 3), float32], Tensor[(10, 11, 5), int8], int8) {
  %772 = fn (%var_6640: int8) -> (Tensor[(14, 7, 3), float32], Tensor[(10, 11, 5), int8], int8) {
    %767 = cast(%var_6640, dtype="int8") /* ty=int8 */;
    %768 = reshape(%767, newshape=[]) /* ty=int8 */;
    %769 = @func_1574(%768) /* ty=(Tensor[(10, 11, 5), int8],) */;
    %770 = @func_6604() /* ty=Tensor[(14, 7, 3), float32] */;
    %771 = %769.0;
    (%770, %771, %var_6640)
  };
  %772(%var_6643) /* ty=(Tensor[(14, 7, 3), float32], Tensor[(10, 11, 5), int8], int8) */
}

def @func_5652() -> Tensor[(16, 12, 12), float64] {
  @func_5650() /* ty=Tensor[(16, 12, 12), float64] */
}

def @func_4156(%var_4154: Tensor[(264, 2), float32]) -> (Tensor[(14, 7, 3), float32], Tensor[(2816), float64], Tensor[(144, 4), int8], Tensor[(154), int8], Tensor[(2, 1408), float64], Tensor[(12, 11, 4), float32], Tensor[(264, 2), float32]) {
  %773 = @func_4016() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %774 = cast(meta[relay.Constant][56] /* ty=Tensor[(144, 4), int8] */, dtype="int8") /* ty=Tensor[(144, 4), int8] */;
  %775 = cast(meta[relay.Constant][56] /* ty=Tensor[(144, 4), int8] */, dtype="int8") /* ty=Tensor[(144, 4), int8] */;
  %776 = cast(meta[relay.Constant][57] /* ty=Tensor[(154), int8] */, dtype="int8") /* ty=Tensor[(154), int8] */;
  %777 = cast(meta[relay.Constant][58] /* ty=Tensor[(2, 1408), float64] */, dtype="float64") /* ty=Tensor[(2, 1408), float64] */;
  %778 = reshape(%774, newshape=[12, 8, 6]) /* ty=Tensor[(12, 8, 6), int8] */;
  %779 = reshape(%775, newshape=[12, 8, 6]) /* ty=Tensor[(12, 8, 6), int8] */;
  %780 = reshape(%776, newshape=[154]) /* ty=Tensor[(154), int8] */;
  %781 = reshape(%777, newshape=[2816]) /* ty=Tensor[(2816), float64] */;
  %782 = @func_3697(%778, %779, %780, %781) /* ty=(Tensor[(12, 8, 6), int8], Tensor[(12, 8, 6), float32], Tensor[(60), float64], int8, Tensor[(154), int8], Tensor[(2816), float64]) */;
  %783 = cast(%var_4154, dtype="float32") /* ty=Tensor[(264, 2), float32] */;
  %784 = reshape(%783, newshape=[12, 11, 4]) /* ty=Tensor[(12, 11, 4), float32] */;
  %785 = %773.0;
  %786 = %782.5;
  %787 = @func_339(%784) /* ty=Tensor[(12, 11, 4), float32] */;
  (%785, %786, meta[relay.Constant][56] /* ty=Tensor[(144, 4), int8] */, meta[relay.Constant][57] /* ty=Tensor[(154), int8] */, meta[relay.Constant][58] /* ty=Tensor[(2, 1408), float64] */, %787, %var_4154)
}

def @func_5549() -> Tensor[(6, 9, 12), int32] {
  %788 = @func_4637() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32], Tensor[(6, 9, 12), int32], Tensor[(648), int32], int8) */;
  %788.2
}

def @func_10700(%var_10664: Tensor[(2, 6, 14), int32], %var_10676: Tensor[(108), float64], %var_10685: int8, %var_10686: Tensor[(154), float32]) -> (Tensor[(2, 6, 14), float64], Tensor[(2, 6, 9), float64], Tensor[(108), float64], Tensor[(16, 12, 12), float64], Tensor[(16, 12, 12), float64], int8, Tensor[(154), float32]) {
  %789 = cast(%var_10664, dtype="int32") /* ty=Tensor[(2, 6, 14), int32] */;
  %790 = shape_of(meta[relay.Constant][59] /* ty=Tensor[(2, 6, 14), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %791 = cast(meta[relay.Constant][59] /* ty=Tensor[(2, 6, 14), int32] */, dtype="int32") /* ty=Tensor[(2, 6, 14), int32] */;
  %792 = dyn.reshape(%789, %790, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %793 = logical_xor(%791, %792) /* ty=Tensor[(2, 6, 14), int32] */;
  %794 = cast(%793, dtype="float64") /* ty=Tensor[(2, 6, 14), float64] */;
  %795 = cast(%var_10676, dtype="float64") /* ty=Tensor[(108), float64] */;
  %796 = reshape(%795, newshape=[2, 6, 9]) /* ty=Tensor[(2, 6, 9), float64] */;
  %797 = @func_9324(%796) /* ty=(Tensor[(2, 6, 9), float64], Tensor[(10, 11, 5), int8], int8) */;
  %798 = cast(%var_10685, dtype="int8") /* ty=int8 */;
  %799 = cast(%var_10686, dtype="float32") /* ty=Tensor[(154), float32] */;
  %800 = reshape(%798, newshape=[]) /* ty=int8 */;
  %801 = reshape(%799, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %802 = @func_5913(%800, %801) /* ty=(Tensor[(14, 7, 3), float32], Tensor[(16, 12, 12), float64], Tensor[(5, 1, 14), float32], Tensor[(70), float32], Tensor[(10, 11, 5), int8], Tensor[(1, 60), float64], int8, Tensor[(154), float32], Tensor[(1664), uint64], Tensor[(6, 9, 12), int32]) */;
  %803 = acos(%794) /* ty=Tensor[(2, 6, 14), float64] */;
  %804 = %797.0;
  %805 = @func_5650() /* ty=Tensor[(16, 12, 12), float64] */;
  %806 = %802.1;
  (%803, %804, %var_10676, %805, %806, %var_10685, %var_10686)
}

def @func_6853() -> (int8, Tensor[(14, 7, 3), float32]) {
  @func_6851() /* ty=(int8, Tensor[(14, 7, 3), float32]) */
}

def @func_5261() -> Tensor[(14, 7, 3), float32] {
  %807 = @func_4212() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %807.0
}

def @func_7879() -> (Tensor[(5, 1, 14), float32],) {
  %808 = @func_5676() /* ty=(Tensor[(14, 7, 3), float32], Tensor[(5, 1, 14), float32], Tensor[(70), float32]) */;
  %809 = %808.1;
  (%809,)
}

def @func_8755() -> (Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), bool], Tensor[(33, 4), uint64], Tensor[(16, 12, 12), float64]) {
  %824 = fn () -> (Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), bool], Tensor[(33, 4), uint64], Tensor[(16, 12, 12), float64]) {
    %810 = @func_6698() /* ty=(Tensor[(16, 12, 12), float64], Tensor[(14, 7, 3), float32]) */;
    %811 = %810.1;
    %812 = cast(%811, dtype="float32") /* ty=Tensor[(14, 7, 3), float32] */;
    %813 = reshape(%812, newshape=[14, 7, 3]) /* ty=Tensor[(14, 7, 3), float32] */;
    %814 = @func_8634(%813) /* ty=(Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) */;
    %815 = cast(%811, dtype="bool") /* ty=Tensor[(14, 7, 3), bool] */;
    %816 = cast(meta[relay.Constant][60] /* ty=Tensor[(33, 4), uint64] */, dtype="uint64") /* ty=Tensor[(33, 4), uint64] */;
    %817 = reshape(%815, newshape=[14, 7, 3]) /* ty=Tensor[(14, 7, 3), bool] */;
    %818 = reshape(%816, newshape=[33, 4]) /* ty=Tensor[(33, 4), uint64] */;
    %819 = @func_5138(%817, %818) /* ty=(Tensor[(14, 7, 3), bool], Tensor[(1, 11, 12), uint64], Tensor[(33, 4), uint64], Tensor[(14, 7, 3), float64], Tensor[(154), int8], Tensor[(180), uint16], int8) */;
    %820 = @func_5748() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(16, 12, 12), float64]) */;
    %821 = %814.1;
    %822 = %819.0;
    %823 = %820.1;
    (%811, %821, %822, meta[relay.Constant][60] /* ty=Tensor[(33, 4), uint64] */, %823)
  };
  %824() /* ty=(Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), bool], Tensor[(33, 4), uint64], Tensor[(16, 12, 12), float64]) */
}

def @func_9326(%var_9325: Tensor[(2, 6, 9), float64]) -> (Tensor[(2, 6, 9), float64], Tensor[(10, 11, 5), int8], int8) {
  %831 = fn (%var_9311: Tensor[(2, 6, 9), float64]) -> (Tensor[(2, 6, 9), float64], Tensor[(10, 11, 5), int8], int8) {
    %825 = cast(%var_9311, dtype="float64") /* ty=Tensor[(2, 6, 9), float64] */;
    %826 = cast(meta[relay.Constant][61] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %827 = reshape(%826, newshape=[]) /* ty=int8 */;
    %828 = @func_1574(%827) /* ty=(Tensor[(10, 11, 5), int8],) */;
    %829 = atanh(%825) /* ty=Tensor[(2, 6, 9), float64] */;
    %830 = %828.0;
    (%829, %830, meta[relay.Constant][61] /* ty=int8 */)
  };
  %831(%var_9325) /* ty=(Tensor[(2, 6, 9), float64], Tensor[(10, 11, 5), int8], int8) */
}

def @func_7704() -> (Tensor[(14, 7, 3), bool],) {
  @func_7702() /* ty=(Tensor[(14, 7, 3), bool],) */
}

def @func_7881() -> (Tensor[(5, 1, 14), float32],) {
  @func_7879() /* ty=(Tensor[(5, 1, 14), float32],) */
}

def @func_10749() -> (Tensor[(14, 7, 3), float32],) {
  %834 = fn () -> (Tensor[(14, 7, 3), float32],) {
    %832 = @func_4212() /* ty=(Tensor[(14, 7, 3), float32],) */;
    %833 = %832.0;
    (%833,)
  };
  %834() /* ty=(Tensor[(14, 7, 3), float32],) */
}

def @func_339(%var_324: Tensor[(12, 11, 4), float32]) -> Tensor[(12, 11, 4), float32] {
  %835 = cast(%var_324, dtype="float32") /* ty=Tensor[(12, 11, 4), float32] */;
  %836 = shape_of(meta[relay.Constant][62] /* ty=Tensor[(12, 11, 4), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %837 = cast(meta[relay.Constant][62] /* ty=Tensor[(12, 11, 4), float32] */, dtype="float32") /* ty=Tensor[(12, 11, 4), float32] */;
  %838 = dyn.reshape(%835, %836, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%837, %838) /* ty=Tensor[(12, 11, 4), float32] */
}

def @func_5980(%var_5952: Tensor[(8, 12, 16), uint8], %var_5953: Tensor[(8, 12, 16), uint8], %var_5962: Tensor[(252), uint8], %var_5963: Tensor[(60), float64], %var_5964: Tensor[(154), float32], %var_5965: Tensor[(1, 1664), uint64], %var_5966: Tensor[(5), int32]) -> (Tensor[(8, 12, 16), uint8], Tensor[(180), uint16], Tensor[(252), uint8], Tensor[(60), float64], Tensor[(154), float32], Tensor[(1, 1664), uint64], Tensor[(5), int32], Tensor[(180), uint16], Tensor[(1664), uint64], int8) {
  %839 = cast(%var_5953, dtype="uint8") /* ty=Tensor[(8, 12, 16), uint8] */;
  %840 = shape_of(%var_5952, dtype="int32") /* ty=Tensor[(3), int32] */;
  %841 = cast(%var_5952, dtype="uint8") /* ty=Tensor[(8, 12, 16), uint8] */;
  %842 = dyn.reshape(%839, %840, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %843 = cast(%var_5962, dtype="uint8") /* ty=Tensor[(252), uint8] */;
  %844 = cast(%var_5963, dtype="float64") /* ty=Tensor[(60), float64] */;
  %845 = cast(%var_5964, dtype="float32") /* ty=Tensor[(154), float32] */;
  %846 = cast(%var_5965, dtype="uint64") /* ty=Tensor[(1, 1664), uint64] */;
  %847 = cast(%var_5966, dtype="int32") /* ty=Tensor[(5), int32] */;
  %848 = cast(meta[relay.Constant][63] /* ty=Tensor[(180), uint16] */, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %849 = reshape(%843, newshape=[3, 6, 14]) /* ty=Tensor[(3, 6, 14), uint8] */;
  %850 = reshape(%844, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %851 = reshape(%845, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %852 = reshape(%846, newshape=[1664]) /* ty=Tensor[(1664), uint64] */;
  %853 = reshape(%847, newshape=[5]) /* ty=Tensor[(5), int32] */;
  %854 = reshape(%848, newshape=[180]) /* ty=Tensor[(180), uint16] */;
  %855 = @func_2414(%849, %850, %851, %852, %853, %854) /* ty=(Tensor[(3, 6, 14), bool], int8, Tensor[(60), float64], Tensor[(154), float32], Tensor[(1664), uint64], Tensor[(180), uint16], Tensor[(5), int32], Tensor[(180), uint16], Tensor[(2816), uint64]) */;
  %856 = cast(meta[relay.Constant][64] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %857 = cast(%var_5964, dtype="float32") /* ty=Tensor[(154), float32] */;
  %858 = cast(%var_5965, dtype="uint64") /* ty=Tensor[(1, 1664), uint64] */;
  %859 = reshape(%856, newshape=[]) /* ty=int8 */;
  %860 = reshape(%857, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %861 = reshape(%858, newshape=[1664]) /* ty=Tensor[(1664), uint64] */;
  %862 = @func_4858(%859, %860, %861) /* ty=(int8, Tensor[(60), float64], Tensor[(154), float32], Tensor[(1664), uint64], Tensor[(648), uint16]) */;
  %863 = maximum(%841, %842) /* ty=Tensor[(8, 12, 16), uint8] */;
  %864 = %855.7;
  %865 = %862.3;
  (%863, %864, %var_5962, %var_5963, %var_5964, %var_5965, %var_5966, meta[relay.Constant][63] /* ty=Tensor[(180), uint16] */, %865, meta[relay.Constant][64] /* ty=int8 */)
}

def @func_10832() -> Tensor[(14, 7, 3), float32] {
  %866 = @func_9235() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %866.0
}

def @func_10834() -> Tensor[(14, 7, 3), float32] {
  @func_10832() /* ty=Tensor[(14, 7, 3), float32] */
}

def @func_8818(%var_8816: Tensor[(8, 10, 16), float64]) -> Tensor[(8, 10, 16), float64] {
  @func_8815(%var_8816) /* ty=Tensor[(8, 10, 16), float64] */
}

def @func_9371() -> (Tensor[(14, 7, 3), float32],) {
  %867 = @func_8775() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %868 = %867.0;
  (%868,)
}

def @func_10056() -> (Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) {
  %872 = fn () -> (Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) {
    %869 = @func_4775() /* ty=(Tensor[(14, 7, 3), float32],) */;
    %870 = %869.0;
    %871 = @func_6604() /* ty=Tensor[(14, 7, 3), float32] */;
    (%870, %871)
  };
  %872() /* ty=(Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) */
}

def @func_9538() -> (Tensor[(14, 7, 3), float32],) {
  %875 = fn () -> (Tensor[(14, 7, 3), float32],) {
    %873 = @func_4212() /* ty=(Tensor[(14, 7, 3), float32],) */;
    %874 = %873.0;
    (%874,)
  };
  %875() /* ty=(Tensor[(14, 7, 3), float32],) */
}

def @func_9040(%var_9039: Tensor[(11, 3, 16), float32]) -> (Tensor[(11, 3, 16), float32],) {
  %878 = fn (%var_9015: Tensor[(11, 3, 16), float32]) -> (Tensor[(11, 3, 16), float32],) {
    %876 = cast(%var_9015, dtype="float32") /* ty=Tensor[(11, 3, 16), float32] */;
    %877 = sqrt(%876) /* ty=Tensor[(11, 3, 16), float32] */;
    (%877,)
  };
  %878(%var_9039) /* ty=(Tensor[(11, 3, 16), float32],) */
}

def @func_6555() -> (Tensor[(70), float32],) {
  @func_6553() /* ty=(Tensor[(70), float32],) */
}

def @func_6042(%var_6012: Tensor[(60), float64], %var_6027: Tensor[(1664), uint64]) -> (Tensor[(14, 7, 3), float32], int8, Tensor[(648), int32], Tensor[(60), float64], int8, Tensor[(154), float32], Tensor[(1664), int64], Tensor[(2816), float64], Tensor[(180), uint16], Tensor[(1664), uint64], Tensor[(10, 11, 5), int8]) {
  %879 = @func_5050() /* ty=(Tensor[(14, 7, 3), float64], Tensor[(14, 7, 3), float32]) */;
  %880 = cast(meta[relay.Constant][65] /* ty=Tensor[(648), int32] */, dtype="int32") /* ty=Tensor[(648), int32] */;
  %881 = cast(meta[relay.Constant][65] /* ty=Tensor[(648), int32] */, dtype="int32") /* ty=Tensor[(648), int32] */;
  %882 = cast(%var_6012, dtype="float64") /* ty=Tensor[(60), float64] */;
  %883 = cast(meta[relay.Constant][66] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %884 = cast(meta[relay.Constant][67] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
  %885 = reshape(%880, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), int32] */;
  %886 = reshape(%881, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), int32] */;
  %887 = reshape(%882, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %888 = reshape(%883, newshape=[]) /* ty=int8 */;
  %889 = reshape(%884, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %890 = @func_1737(%885, %886, %887, %888, %889) /* ty=(Tensor[(6, 9, 12), int32], Tensor[(60), float64], int8, Tensor[(154), bool]) */;
  %891 = cast(meta[relay.Constant][68] /* ty=Tensor[(2816), float64] */, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %892 = cast(meta[relay.Constant][69] /* ty=Tensor[(180), uint16] */, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %893 = cast(%var_6012, dtype="float64") /* ty=Tensor[(60), float64] */;
  %894 = cast(meta[relay.Constant][67] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
  %895 = cast(%var_6027, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
  %896 = reshape(%891, newshape=[2816]) /* ty=Tensor[(2816), float64] */;
  %897 = reshape(%892, newshape=[180]) /* ty=Tensor[(180), uint16] */;
  %898 = reshape(%893, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %899 = reshape(%894, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %900 = reshape(%895, newshape=[1664]) /* ty=Tensor[(1664), uint64] */;
  %901 = @func_4103(%896, %897, %898, %899, %900) /* ty=(Tensor[(14, 7, 3), float32], Tensor[(16, 16, 11), float64], Tensor[(5), int32], Tensor[(2816), float64], Tensor[(180), uint16], Tensor[(12, 11, 4), float32], Tensor[(60), float64], Tensor[(154), float32], Tensor[(16, 16, 11), float64], Tensor[(1664), int64]) */;
  %902 = %890.2;
  %903 = cast(%902, dtype="int8") /* ty=int8 */;
  %904 = reshape(%903, newshape=[]) /* ty=int8 */;
  %905 = @func_1574(%904) /* ty=(Tensor[(10, 11, 5), int8],) */;
  %906 = %879.1;
  %907 = %901.9;
  %908 = %905.0;
  (%906, %902, meta[relay.Constant][65] /* ty=Tensor[(648), int32] */, %var_6012, meta[relay.Constant][66] /* ty=int8 */, meta[relay.Constant][67] /* ty=Tensor[(154), float32] */, %907, meta[relay.Constant][68] /* ty=Tensor[(2816), float64] */, meta[relay.Constant][69] /* ty=Tensor[(180), uint16] */, %var_6027, %908)
}

def @func_4638() -> (Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32], Tensor[(6, 9, 12), int32], Tensor[(648), int32], int8) {
  %919 = fn () -> (Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32], Tensor[(6, 9, 12), int32], Tensor[(648), int32], int8) {
    %909 = @func_4375() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32]) */;
    %910 = @func_4016() /* ty=(Tensor[(14, 7, 3), float32],) */;
    %911 = cast(meta[relay.Constant][70] /* ty=Tensor[(648), int32] */, dtype="int32") /* ty=Tensor[(648), int32] */;
    %912 = cast(meta[relay.Constant][71] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %913 = reshape(%911, newshape=[648]) /* ty=Tensor[(648), int32] */;
    %914 = reshape(%912, newshape=[]) /* ty=int8 */;
    %915 = @func_4590(%913, %914) /* ty=(Tensor[(14, 7, 3), float32], Tensor[(6, 9, 12), int32], Tensor[(648), int32], Tensor[(60), float64], int8, Tensor[(11, 14), float32], Tensor[(14, 7, 3), float32]) */;
    %916 = %909.0;
    %917 = %910.0;
    %918 = %915.1;
    (%916, %917, %918, meta[relay.Constant][70] /* ty=Tensor[(648), int32] */, meta[relay.Constant][71] /* ty=int8 */)
  };
  %919() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32], Tensor[(6, 9, 12), int32], Tensor[(648), int32], int8) */
}

def @func_5913(%var_5907: int8, %var_5908: Tensor[(154), float32]) -> (Tensor[(14, 7, 3), float32], Tensor[(16, 12, 12), float64], Tensor[(5, 1, 14), float32], Tensor[(70), float32], Tensor[(10, 11, 5), int8], Tensor[(1, 60), float64], int8, Tensor[(154), float32], Tensor[(1664), uint64], Tensor[(6, 9, 12), int32]) {
  %920 = @func_5273() /* ty=(Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), uint32]) */;
  %921 = cast(meta[relay.Constant][72] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
  %922 = reshape(%921, newshape=[5, 1, 14]) /* ty=Tensor[(5, 1, 14), float32] */;
  %923 = cast(meta[relay.Constant][73] /* ty=Tensor[(1, 60), float64] */, dtype="float64") /* ty=Tensor[(1, 60), float64] */;
  %924 = cast(%var_5907, dtype="int8") /* ty=int8 */;
  %925 = cast(%var_5908, dtype="float32") /* ty=Tensor[(154), float32] */;
  %926 = cast(meta[relay.Constant][74] /* ty=Tensor[(1664), uint64] */, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
  %927 = reshape(%923, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %928 = reshape(%924, newshape=[]) /* ty=int8 */;
  %929 = reshape(%925, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %930 = reshape(%926, newshape=[1664]) /* ty=Tensor[(1664), uint64] */;
  %931 = @func_1872(%927, %928, %929, %930) /* ty=(Tensor[(9, 10), float64], Tensor[(6, 9, 12), int32], Tensor[(648), int32], Tensor[(60), float64], int8, Tensor[(154), float32], Tensor[(12, 11, 4), float32], Tensor[(180, 1), uint16], Tensor[(12, 11, 4), float32], Tensor[(10, 11, 5), int8], Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(13, 16, 8), uint64], Tensor[(1664), uint64], Tensor[(154), int8]) */;
  %932 = cast(meta[relay.Constant][73] /* ty=Tensor[(1, 60), float64] */, dtype="float64") /* ty=Tensor[(1, 60), float64] */;
  %933 = cast(%var_5907, dtype="int8") /* ty=int8 */;
  %934 = cast(%var_5908, dtype="float32") /* ty=Tensor[(154), float32] */;
  %935 = cast(meta[relay.Constant][74] /* ty=Tensor[(1664), uint64] */, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
  %936 = reshape(%932, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %937 = reshape(%933, newshape=[]) /* ty=int8 */;
  %938 = reshape(%934, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %939 = reshape(%935, newshape=[1664]) /* ty=Tensor[(1664), uint64] */;
  %940 = @func_1872(%936, %937, %938, %939) /* ty=(Tensor[(9, 10), float64], Tensor[(6, 9, 12), int32], Tensor[(648), int32], Tensor[(60), float64], int8, Tensor[(154), float32], Tensor[(12, 11, 4), float32], Tensor[(180, 1), uint16], Tensor[(12, 11, 4), float32], Tensor[(10, 11, 5), int8], Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(13, 16, 8), uint64], Tensor[(1664), uint64], Tensor[(154), int8]) */;
  %941 = %920.0;
  %942 = @func_5650() /* ty=Tensor[(16, 12, 12), float64] */;
  %943 = @func_5396(%922) /* ty=Tensor[(5, 1, 14), float32] */;
  %944 = %931.9;
  %945 = %940.1;
  (%941, %942, %943, meta[relay.Constant][72] /* ty=Tensor[(70), float32] */, %944, meta[relay.Constant][73] /* ty=Tensor[(1, 60), float64] */, %var_5907, %var_5908, meta[relay.Constant][74] /* ty=Tensor[(1664), uint64] */, %945)
}

def @func_5138(%var_5097: Tensor[(14, 7, 3), bool], %var_5113: Tensor[(33, 4), uint64]) -> (Tensor[(14, 7, 3), bool], Tensor[(1, 11, 12), uint64], Tensor[(33, 4), uint64], Tensor[(14, 7, 3), float64], Tensor[(154), int8], Tensor[(180), uint16], int8) {
  %946 = @func_4637() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32], Tensor[(6, 9, 12), int32], Tensor[(648), int32], int8) */;
  %947 = %946.0;
  %948 = cast(%var_5097, dtype="bool") /* ty=Tensor[(14, 7, 3), bool] */;
  %949 = shape_of(%947, dtype="int32") /* ty=Tensor[(3), int32] */;
  %950 = cast(%947, dtype="bool") /* ty=Tensor[(14, 7, 3), bool] */;
  %951 = dyn.reshape(%948, %949, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %952 = cast(%var_5113, dtype="uint64") /* ty=Tensor[(33, 4), uint64] */;
  %953 = reshape(%952, newshape=[1, 11, 12]) /* ty=Tensor[(1, 11, 12), uint64] */;
  %954 = @func_2237(%953) /* ty=(Tensor[(1, 11, 12), uint64],) */;
  %955 = @func_5050() /* ty=(Tensor[(14, 7, 3), float64], Tensor[(14, 7, 3), float32]) */;
  %956 = %955.0;
  %957 = cast(%956, dtype="float64") /* ty=Tensor[(14, 7, 3), float64] */;
  %958 = cast(meta[relay.Constant][75] /* ty=Tensor[(180), uint16] */, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %959 = cast(meta[relay.Constant][76] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %960 = reshape(%958, newshape=[180]) /* ty=Tensor[(180), uint16] */;
  %961 = reshape(%959, newshape=[]) /* ty=int8 */;
  %962 = @func_897(%960, %961) /* ty=(Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(528), float32], Tensor[(180), uint16], Tensor[(14, 1, 11), int8], int8, Tensor[(154), int8], Tensor[(12, 11, 4), float32], Tensor[(14, 14, 10), float32]) */;
  %963 = equal(%950, %951) /* ty=Tensor[(14, 7, 3), bool] */;
  %964 = %954.0;
  %965 = sigmoid(%957) /* ty=Tensor[(14, 7, 3), float64] */;
  %966 = %962.6;
  (%963, %964, %var_5113, %965, %966, meta[relay.Constant][75] /* ty=Tensor[(180), uint16] */, meta[relay.Constant][76] /* ty=int8 */)
}

def @func_4777() -> (Tensor[(14, 7, 3), float32],) {
  @func_4775() /* ty=(Tensor[(14, 7, 3), float32],) */
}

def @func_5748() -> (Tensor[(14, 7, 3), bool], Tensor[(16, 12, 12), float64]) {
  %967 = @func_4016() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %968 = %967.0;
  %969 = cast(meta[relay.Constant][77] /* ty=Tensor[(14, 7, 3), float32] */, dtype="bool") /* ty=Tensor[(14, 7, 3), bool] */;
  %970 = shape_of(%968, dtype="int32") /* ty=Tensor[(3), int32] */;
  %971 = cast(%968, dtype="bool") /* ty=Tensor[(14, 7, 3), bool] */;
  %972 = dyn.reshape(%969, %970, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %973 = not_equal(%971, %972) /* ty=Tensor[(14, 7, 3), bool] */;
  %974 = @func_4613() /* ty=Tensor[(16, 12, 12), float64] */;
  (%973, %974)
}

def @func_2239(%var_2238: Tensor[(1, 11, 12), uint64]) -> (Tensor[(1, 11, 12), uint64],) {
  %978 = fn (%var_2220: Tensor[(1, 11, 12), uint64]) -> (Tensor[(1, 11, 12), uint64],) {
    %975 = cast(meta[relay.Constant][78] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %976 = cast(%var_2220, dtype="uint64") /* ty=Tensor[(1, 11, 12), uint64] */;
    %977 = left_shift(%975, %976) /* ty=Tensor[(1, 11, 12), uint64] */;
    (%977,)
  };
  %978(%var_2238) /* ty=(Tensor[(1, 11, 12), uint64],) */
}

def @func_6606() -> Tensor[(14, 7, 3), float32] {
  @func_6604() /* ty=Tensor[(14, 7, 3), float32] */
}

def @func_5396(%var_5383: Tensor[(5, 1, 14), float32]) -> Tensor[(5, 1, 14), float32] {
  %979 = cast(%var_5383, dtype="float32") /* ty=Tensor[(5, 1, 14), float32] */;
  log10(%979) /* ty=Tensor[(5, 1, 14), float32] */
}

def @func_4862(%var_4859: int8, %var_4860: Tensor[(154), float32], %var_4861: Tensor[(1664), uint64]) -> (int8, Tensor[(60), float64], Tensor[(154), float32], Tensor[(1664), uint64], Tensor[(648), uint16]) {
  %997 = fn (%var_4838: int8, %var_4839: Tensor[(154), float32], %var_4840: Tensor[(1664), uint64]) -> (int8, Tensor[(60), float64], Tensor[(154), float32], Tensor[(1664), uint64], Tensor[(648), uint16]) {
    %980 = cast(meta[relay.Constant][79] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
    %981 = cast(%var_4838, dtype="int8") /* ty=int8 */;
    %982 = cast(%var_4839, dtype="float32") /* ty=Tensor[(154), float32] */;
    %983 = cast(%var_4840, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
    %984 = reshape(%980, newshape=[60]) /* ty=Tensor[(60), float64] */;
    %985 = reshape(%981, newshape=[]) /* ty=int8 */;
    %986 = reshape(%982, newshape=[154]) /* ty=Tensor[(154), float32] */;
    %987 = reshape(%983, newshape=[1664]) /* ty=Tensor[(1664), uint64] */;
    %988 = @func_1872(%984, %985, %986, %987) /* ty=(Tensor[(9, 10), float64], Tensor[(6, 9, 12), int32], Tensor[(648), int32], Tensor[(60), float64], int8, Tensor[(154), float32], Tensor[(12, 11, 4), float32], Tensor[(180, 1), uint16], Tensor[(12, 11, 4), float32], Tensor[(10, 11, 5), int8], Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(13, 16, 8), uint64], Tensor[(1664), uint64], Tensor[(154), int8]) */;
    %989 = @func_4637() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32], Tensor[(6, 9, 12), int32], Tensor[(648), int32], int8) */;
    %990 = %989.3;
    %991 = cast(%990, dtype="float64") /* ty=Tensor[(648), float64] */;
    %992 = acos(%991) /* ty=Tensor[(648), float64] */;
    %993 = cast(%992, dtype="uint16") /* ty=Tensor[(648), uint16] */;
    %994 = cast(%var_4838, dtype="uint16") /* ty=uint16 */;
    %995 = %988.4;
    %996 = left_shift(%993, %994) /* ty=Tensor[(648), uint16] */;
    (%995, meta[relay.Constant][79] /* ty=Tensor[(60), float64] */, %var_4839, %var_4840, %996)
  };
  %997(%var_4859, %var_4860, %var_4861) /* ty=(int8, Tensor[(60), float64], Tensor[(154), float32], Tensor[(1664), uint64], Tensor[(648), uint16]) */
}

def @func_7606() -> (Tensor[(16, 12, 12), float64], Tensor[(154), int8], Tensor[(49, 6), bool], Tensor[(132), uint64]) {
  %1006 = fn () -> (Tensor[(16, 12, 12), float64], Tensor[(154), int8], Tensor[(49, 6), bool], Tensor[(132), uint64]) {
    %998 = @func_6698() /* ty=(Tensor[(16, 12, 12), float64], Tensor[(14, 7, 3), float32]) */;
    %999 = cast(meta[relay.Constant][80] /* ty=Tensor[(49, 6), bool] */, dtype="bool") /* ty=Tensor[(49, 6), bool] */;
    %1000 = cast(meta[relay.Constant][81] /* ty=Tensor[(132), uint64] */, dtype="uint64") /* ty=Tensor[(132), uint64] */;
    %1001 = reshape(%999, newshape=[14, 7, 3]) /* ty=Tensor[(14, 7, 3), bool] */;
    %1002 = reshape(%1000, newshape=[33, 4]) /* ty=Tensor[(33, 4), uint64] */;
    %1003 = @func_5138(%1001, %1002) /* ty=(Tensor[(14, 7, 3), bool], Tensor[(1, 11, 12), uint64], Tensor[(33, 4), uint64], Tensor[(14, 7, 3), float64], Tensor[(154), int8], Tensor[(180), uint16], int8) */;
    %1004 = %998.0;
    %1005 = %1003.4;
    (%1004, %1005, meta[relay.Constant][80] /* ty=Tensor[(49, 6), bool] */, meta[relay.Constant][81] /* ty=Tensor[(132), uint64] */)
  };
  %1006() /* ty=(Tensor[(16, 12, 12), float64], Tensor[(154), int8], Tensor[(49, 6), bool], Tensor[(132), uint64]) */
}

def @func_9150() -> (Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) {
  %1011 = fn () -> (Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) {
    %1007 = @func_7040() /* ty=(Tensor[(14, 7, 3), float32],) */;
    %1008 = @func_8065() /* ty=(Tensor[(14, 7, 3), float32],) */;
    %1009 = %1007.0;
    %1010 = %1008.0;
    (%1009, %1010)
  };
  %1011() /* ty=(Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) */
}

def @func_342(%var_340: Tensor[(12, 11, 4), float32]) -> Tensor[(12, 11, 4), float32] {
  @func_339(%var_340) /* ty=Tensor[(12, 11, 4), float32] */
}

def @func_8408() -> (Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) {
  %1012 = @func_4212() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %1013 = %1012.0;
  %1014 = @func_6604() /* ty=Tensor[(14, 7, 3), float32] */;
  (%1013, %1014)
}

def @func_8815(%var_8801: Tensor[(8, 10, 16), float64]) -> Tensor[(8, 10, 16), float64] {
  %1015 = cast(%var_8801, dtype="float64") /* ty=Tensor[(8, 10, 16), float64] */;
  exp(%1015) /* ty=Tensor[(8, 10, 16), float64] */
}

def @func_4720(%var_4718: Tensor[(154), float32], %var_4719: Tensor[(180), uint16]) -> (Tensor[(14, 7, 3), float32], Tensor[(252), uint8], Tensor[(1, 60), float64], Tensor[(5), int32], Tensor[(180), uint16], Tensor[(1664), uint16], Tensor[(154), float32]) {
  @func_4716(%var_4718, %var_4719) /* ty=(Tensor[(14, 7, 3), float32], Tensor[(252), uint8], Tensor[(1, 60), float64], Tensor[(5), int32], Tensor[(180), uint16], Tensor[(1664), uint16], Tensor[(154), float32]) */
}

def @func_9687() -> (Tensor[(16, 12, 12), float64],) {
  @func_9685() /* ty=(Tensor[(16, 12, 12), float64],) */
}

def @func_10853() -> Tensor[(16, 12, 12), float64] {
  @func_10851() /* ty=Tensor[(16, 12, 12), float64] */
}

def @func_1743(%var_1738: Tensor[(6, 9, 12), int32], %var_1739: Tensor[(6, 9, 12), int32], %var_1740: Tensor[(60), float64], %var_1741: int8, %var_1742: Tensor[(154), float32]) -> (Tensor[(6, 9, 12), int32], Tensor[(60), float64], int8, Tensor[(154), bool]) {
  %1034 = fn (%var_1692: Tensor[(6, 9, 12), int32], %var_1693: Tensor[(6, 9, 12), int32], %var_1721: Tensor[(60), float64], %var_1722: int8, %var_1729: Tensor[(154), float32]) -> (Tensor[(6, 9, 12), int32], Tensor[(60), float64], int8, Tensor[(154), bool]) {
    %1016 = cast(%var_1693, dtype="int32") /* ty=Tensor[(6, 9, 12), int32] */;
    %1017 = shape_of(%var_1692, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1018 = cast(%var_1692, dtype="int32") /* ty=Tensor[(6, 9, 12), int32] */;
    %1019 = dyn.reshape(%1016, %1017, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %1020 = cast(%var_1721, dtype="float64") /* ty=Tensor[(60), float64] */;
    %1021 = cast(%var_1722, dtype="int8") /* ty=int8 */;
    %1022 = reshape(%1020, newshape=[10, 2, 3]) /* ty=Tensor[(10, 2, 3), float64] */;
    %1023 = reshape(%1021, newshape=[]) /* ty=int8 */;
    %1024 = @func_403(%1022, %1023) /* ty=(Tensor[(10, 2, 3), float64], Tensor[(14, 1, 11), int8], int8, Tensor[(154), int8]) */;
    %1025 = %1024.3;
    %1026 = cast(%1025, dtype="float32") /* ty=Tensor[(154), float32] */;
    %1027 = acos(%1026) /* ty=Tensor[(154), float32] */;
    %1028 = cast(%var_1729, dtype="bool") /* ty=Tensor[(154), bool] */;
    %1029 = shape_of(%1027, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1030 = cast(%1027, dtype="bool") /* ty=Tensor[(154), bool] */;
    %1031 = dyn.reshape(%1028, %1029, newshape=[]) /* ty=Tensor[(?), bool] */;
    %1032 = bitwise_and(%1018, %1019) /* ty=Tensor[(6, 9, 12), int32] */;
    %1033 = greater_equal(%1030, %1031) /* ty=Tensor[(154), bool] */;
    (%1032, %var_1721, %var_1722, %1033)
  };
  %1034(%var_1738, %var_1739, %var_1740, %var_1741, %var_1742) /* ty=(Tensor[(6, 9, 12), int32], Tensor[(60), float64], int8, Tensor[(154), bool]) */
}

def @func_1938(%var_1924: Tensor[(16, 16, 11), float64], %var_1934: Tensor[(180), uint16], %var_1935: int8) -> (Tensor[(16, 16, 11), float64], Tensor[(12, 11, 4), float32], Tensor[(180), uint16], int8) {
  %1035 = cast(%var_1924, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
  %1036 = cast(%var_1934, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %1037 = cast(%var_1935, dtype="int8") /* ty=int8 */;
  %1038 = reshape(%1036, newshape=[180]) /* ty=Tensor[(180), uint16] */;
  %1039 = reshape(%1037, newshape=[]) /* ty=int8 */;
  %1040 = @func_897(%1038, %1039) /* ty=(Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(528), float32], Tensor[(180), uint16], Tensor[(14, 1, 11), int8], int8, Tensor[(154), int8], Tensor[(12, 11, 4), float32], Tensor[(14, 14, 10), float32]) */;
  %1041 = tan(%1035) /* ty=Tensor[(16, 16, 11), float64] */;
  %1042 = %1040.7;
  (%1041, %1042, %var_1934, %var_1935)
}

def @func_5656() -> Tensor[(14, 7, 3), float32] {
  %1044 = fn () -> Tensor[(14, 7, 3), float32] {
    %1043 = @func_5050() /* ty=(Tensor[(14, 7, 3), float64], Tensor[(14, 7, 3), float32]) */;
    %1043.1
  };
  %1044() /* ty=Tensor[(14, 7, 3), float32] */
}

def @func_5082(%var_5067: Tensor[(1, 5), int32], %var_5068: Tensor[(64, 44), float64], %var_5069: Tensor[(180), uint16], %var_5080: Tensor[(154), int8]) -> (Tensor[(14, 7, 3), float32], Tensor[(1, 1, 5), uint32], Tensor[(1, 5), int32], Tensor[(180), uint16], Tensor[(64, 44), bool], Tensor[(12, 8, 6), int8], Tensor[(144, 4), int8], Tensor[(154), int8]) {
  %1045 = @func_4212() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %1046 = cast(-2 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %1047 = cast(%var_5067, dtype="int32") /* ty=Tensor[(1, 5), int32] */;
  %1048 = cast(%var_5068, dtype="float64") /* ty=Tensor[(64, 44), float64] */;
  %1049 = cast(%var_5069, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %1050 = reshape(%1046, newshape=[]) /* ty=int32 */;
  %1051 = reshape(%1047, newshape=[1, 1, 5]) /* ty=Tensor[(1, 1, 5), int32] */;
  %1052 = reshape(%1048, newshape=[2816]) /* ty=Tensor[(2816), float64] */;
  %1053 = reshape(%1049, newshape=[180]) /* ty=Tensor[(180), uint16] */;
  %1054 = @func_2124(%1050, %1051, %1052, %1053) /* ty=(Tensor[(1, 1, 5), int32], Tensor[(1, 1, 5), uint32], Tensor[(60), float64], Tensor[(16, 16, 11), float64], Tensor[(180), uint16], Tensor[(10, 2, 3), float64], Tensor[(2816), float32]) */;
  %1055 = cast(%var_5068, dtype="bool") /* ty=Tensor[(64, 44), bool] */;
  %1056 = cast(-2 /* ty=int32 */, dtype="bool") /* ty=bool */;
  %1057 = cast(meta[relay.Constant][82] /* ty=Tensor[(144, 4), int8] */, dtype="int8") /* ty=Tensor[(144, 4), int8] */;
  %1058 = cast(meta[relay.Constant][82] /* ty=Tensor[(144, 4), int8] */, dtype="int8") /* ty=Tensor[(144, 4), int8] */;
  %1059 = cast(%var_5080, dtype="int8") /* ty=Tensor[(154), int8] */;
  %1060 = cast(%var_5068, dtype="float64") /* ty=Tensor[(64, 44), float64] */;
  %1061 = reshape(%1057, newshape=[12, 8, 6]) /* ty=Tensor[(12, 8, 6), int8] */;
  %1062 = reshape(%1058, newshape=[12, 8, 6]) /* ty=Tensor[(12, 8, 6), int8] */;
  %1063 = reshape(%1059, newshape=[154]) /* ty=Tensor[(154), int8] */;
  %1064 = reshape(%1060, newshape=[2816]) /* ty=Tensor[(2816), float64] */;
  %1065 = @func_3697(%1061, %1062, %1063, %1064) /* ty=(Tensor[(12, 8, 6), int8], Tensor[(12, 8, 6), float32], Tensor[(60), float64], int8, Tensor[(154), int8], Tensor[(2816), float64]) */;
  %1066 = %1045.0;
  %1067 = %1054.1;
  %1068 = less(%1055, %1056) /* ty=Tensor[(64, 44), bool] */;
  %1069 = %1065.0;
  (%1066, %1067, %var_5067, %var_5069, %1068, %1069, meta[relay.Constant][82] /* ty=Tensor[(144, 4), int8] */, %var_5080)
}

def @func_4554(%var_4552: Tensor[(5, 9, 1), float64]) -> (Tensor[(5, 9, 4), float64], Tensor[(5, 9, 4), float64]) {
  @func_4551(%var_4552) /* ty=(Tensor[(5, 9, 4), float64], Tensor[(5, 9, 4), float64]) */
}

def @func_8107() -> Tensor[(14, 7, 3), float32] {
  %1070 = @func_7873() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %1070.0
}

def @func_5551() -> Tensor[(6, 9, 12), int32] {
  @func_5549() /* ty=Tensor[(6, 9, 12), int32] */
}

def @func_5938() -> (Tensor[(14, 7, 3), float64],) {
  %1071 = @func_5050() /* ty=(Tensor[(14, 7, 3), float64], Tensor[(14, 7, 3), float32]) */;
  %1072 = %1071.0;
  (%1072,)
}

def @func_5142(%var_5140: Tensor[(14, 7, 3), bool], %var_5141: Tensor[(33, 4), uint64]) -> (Tensor[(14, 7, 3), bool], Tensor[(1, 11, 12), uint64], Tensor[(33, 4), uint64], Tensor[(14, 7, 3), float64], Tensor[(154), int8], Tensor[(180), uint16], int8) {
  @func_5138(%var_5140, %var_5141) /* ty=(Tensor[(14, 7, 3), bool], Tensor[(1, 11, 12), uint64], Tensor[(33, 4), uint64], Tensor[(14, 7, 3), float64], Tensor[(154), int8], Tensor[(180), uint16], int8) */
}

def @func_6767(%var_6765: Tensor[(70), float32]) -> (Tensor[(14, 7, 3), bool], Tensor[(5, 1, 14), float32], Tensor[(70), float32]) {
  @func_6764(%var_6765) /* ty=(Tensor[(14, 7, 3), bool], Tensor[(5, 1, 14), float32], Tensor[(70), float32]) */
}

def @func_6315(%var_6313: int8) -> (Tensor[(14, 7, 3), bool], Tensor[(180), uint16], Tensor[(720), float64], int8, Tensor[(14, 7, 3), float64], Tensor[(14, 7, 3), uint32]) {
  @func_6312(%var_6313) /* ty=(Tensor[(14, 7, 3), bool], Tensor[(180), uint16], Tensor[(720), float64], int8, Tensor[(14, 7, 3), float64], Tensor[(14, 7, 3), uint32]) */
}

def @func_4301(%var_4296: Tensor[(6, 16, 1), uint8], %var_4297: Tensor[(6, 16, 2), uint8], %var_4298: int8, %var_4299: Tensor[(154), int8], %var_4300: Tensor[(132), uint64]) -> (Tensor[(6, 16, 2), float64], Tensor[(6, 16, 2), float64], Tensor[(14, 1, 11), int8], int8, Tensor[(154), int8], Tensor[(1, 11, 12), uint64], Tensor[(132), uint64]) {
  @func_4294(%var_4296, %var_4297, %var_4298, %var_4299, %var_4300) /* ty=(Tensor[(6, 16, 2), float64], Tensor[(6, 16, 2), float64], Tensor[(14, 1, 11), int8], int8, Tensor[(154), int8], Tensor[(1, 11, 12), uint64], Tensor[(132), uint64]) */
}

def @func_1762(%var_1760: Tensor[(13, 16, 8), uint64], %var_1761: Tensor[(13, 16, 8), uint64]) -> (Tensor[(13, 16, 8), uint64],) {
  @func_1758(%var_1760, %var_1761) /* ty=(Tensor[(13, 16, 8), uint64],) */
}

def @func_5335(%var_5308: Tensor[(4, 10, 9), float32]) -> (Tensor[(6, 9, 12), int32], Tensor[(4, 10, 9), float32]) {
  %1073 = @func_4637() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32], Tensor[(6, 9, 12), int32], Tensor[(648), int32], int8) */;
  %1074 = cast(%var_5308, dtype="float32") /* ty=Tensor[(4, 10, 9), float32] */;
  %1075 = cos(%1074) /* ty=Tensor[(4, 10, 9), float32] */;
  %1076 = cast(%1075, dtype="float32") /* ty=Tensor[(4, 10, 9), float32] */;
  %1077 = %1073.2;
  %1078 = atanh(%1076) /* ty=Tensor[(4, 10, 9), float32] */;
  (%1077, %1078)
}

def @func_666(%var_614: Tensor[(5, 4, 9), uint16], %var_615: Tensor[(5, 4, 9), uint16]) -> (Tensor[(5, 4, 9), uint16], Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(12, 11, 4), float32], Tensor[(12, 11, 4), float32]) {
  %1079 = cast(%var_615, dtype="uint16") /* ty=Tensor[(5, 4, 9), uint16] */;
  %1080 = shape_of(%var_614, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1081 = cast(%var_614, dtype="uint16") /* ty=Tensor[(5, 4, 9), uint16] */;
  %1082 = dyn.reshape(%1079, %1080, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1083 = cast(meta[relay.Constant][83] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %1084 = reshape(%1083, newshape=[12, 11, 4]) /* ty=Tensor[(12, 11, 4), float32] */;
  %1085 = cast(meta[relay.Constant][83] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %1086 = reshape(%1085, newshape=[12, 11, 4]) /* ty=Tensor[(12, 11, 4), float32] */;
  %1087 = @func_339(%1084) /* ty=Tensor[(12, 11, 4), float32] */;
  %1088 = cast(%1087, dtype="float32") /* ty=Tensor[(12, 11, 4), float32] */;
  %1089 = reshape(%1088, newshape=[12, 11, 4]) /* ty=Tensor[(12, 11, 4), float32] */;
  %1090 = maximum(%1081, %1082) /* ty=Tensor[(5, 4, 9), uint16] */;
  %1091 = @func_339(%1086) /* ty=Tensor[(12, 11, 4), float32] */;
  %1092 = @func_339(%1089) /* ty=Tensor[(12, 11, 4), float32] */;
  (%1090, %1087, meta[relay.Constant][83] /* ty=Tensor[(528), float32] */, %1091, %1092)
}

def @func_7257(%var_7255: Tensor[(7, 10, 13), uint16], %var_7256: Tensor[(7, 10, 13), uint16]) -> (Tensor[(7, 10, 13), uint16], Tensor[(16, 12, 12), float64], Tensor[(5, 9, 4), float64], Tensor[(1, 45), float64]) {
  %1103 = fn (%var_7232: Tensor[(7, 10, 13), uint16], %var_7233: Tensor[(7, 10, 13), uint16]) -> (Tensor[(7, 10, 13), uint16], Tensor[(16, 12, 12), float64], Tensor[(5, 9, 4), float64], Tensor[(1, 45), float64]) {
    %1093 = cast(%var_7233, dtype="uint16") /* ty=Tensor[(7, 10, 13), uint16] */;
    %1094 = shape_of(%var_7232, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1095 = cast(%var_7232, dtype="uint16") /* ty=Tensor[(7, 10, 13), uint16] */;
    %1096 = dyn.reshape(%1093, %1094, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1097 = cast(meta[relay.Constant][84] /* ty=Tensor[(1, 45), float64] */, dtype="float64") /* ty=Tensor[(1, 45), float64] */;
    %1098 = reshape(%1097, newshape=[5, 9, 1]) /* ty=Tensor[(5, 9, 1), float64] */;
    %1099 = @func_4551(%1098) /* ty=(Tensor[(5, 9, 4), float64], Tensor[(5, 9, 4), float64]) */;
    %1100 = left_shift(%1095, %1096) /* ty=Tensor[(7, 10, 13), uint16] */;
    %1101 = @func_5650() /* ty=Tensor[(16, 12, 12), float64] */;
    %1102 = %1099.0;
    (%1100, %1101, %1102, meta[relay.Constant][84] /* ty=Tensor[(1, 45), float64] */)
  };
  %1103(%var_7255, %var_7256) /* ty=(Tensor[(7, 10, 13), uint16], Tensor[(16, 12, 12), float64], Tensor[(5, 9, 4), float64], Tensor[(1, 45), float64]) */
}

def @func_5750() -> (Tensor[(14, 7, 3), bool], Tensor[(16, 12, 12), float64]) {
  @func_5748() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(16, 12, 12), float64]) */
}

def @func_3635(%var_3631: Tensor[(5, 14, 6), int8], %var_3632: Tensor[(5, 14, 6), int8], %var_3633: Tensor[(64, 44), float64], %var_3634: Tensor[(180), uint16]) -> (Tensor[(5, 14, 6), int8], Tensor[(5), int32], Tensor[(64, 44), float64], Tensor[(180), uint16], Tensor[(1, 1, 5), bool], Tensor[(12, 11, 4), float32]) {
  @func_3629(%var_3631, %var_3632, %var_3633, %var_3634) /* ty=(Tensor[(5, 14, 6), int8], Tensor[(5), int32], Tensor[(64, 44), float64], Tensor[(180), uint16], Tensor[(1, 1, 5), bool], Tensor[(12, 11, 4), float32]) */
}

def @func_8295(%var_8294: int8) -> (Tensor[(70), float32], Tensor[(5, 1, 14), float32], Tensor[(10, 11, 5), int8], int8) {
  %1114 = fn (%var_8288: int8) -> (Tensor[(70), float32], Tensor[(5, 1, 14), float32], Tensor[(10, 11, 5), int8], int8) {
    %1104 = @func_6553() /* ty=(Tensor[(70), float32],) */;
    %1105 = %1104.0;
    %1106 = cast(%1105, dtype="float32") /* ty=Tensor[(70), float32] */;
    %1107 = reshape(%1106, newshape=[70]) /* ty=Tensor[(70), float32] */;
    %1108 = @func_6764(%1107) /* ty=(Tensor[(14, 7, 3), bool], Tensor[(5, 1, 14), float32], Tensor[(70), float32]) */;
    %1109 = cast(%var_8288, dtype="int8") /* ty=int8 */;
    %1110 = reshape(%1109, newshape=[]) /* ty=int8 */;
    %1111 = @func_1574(%1110) /* ty=(Tensor[(10, 11, 5), int8],) */;
    %1112 = %1108.1;
    %1113 = %1111.0;
    (%1105, %1112, %1113, %var_8288)
  };
  %1114(%var_8294) /* ty=(Tensor[(70), float32], Tensor[(5, 1, 14), float32], Tensor[(10, 11, 5), int8], int8) */
}

def @func_4460(%var_4451: Tensor[(14, 7, 3), float32]) -> Tensor[(14, 7, 3), uint32] {
  %1115 = @func_4375() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32]) */;
  %1116 = %1115.1;
  %1117 = cast(%var_4451, dtype="uint32") /* ty=Tensor[(14, 7, 3), uint32] */;
  %1118 = shape_of(%1116, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1119 = cast(%1116, dtype="uint32") /* ty=Tensor[(14, 7, 3), uint32] */;
  %1120 = dyn.reshape(%1117, %1118, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  subtract(%1119, %1120) /* ty=Tensor[(14, 7, 3), uint32] */
}

def @func_6081(%var_6076: Tensor[(1, 231), float32], %var_6077: Tensor[(528), float32], %var_6078: Tensor[(2816), float64], %var_6079: Tensor[(60), float64], %var_6080: Tensor[(1664), uint64]) -> (Tensor[(14, 7, 3), float32], Tensor[(528), float32], Tensor[(528), float32], Tensor[(2816), float64], Tensor[(60), float64], Tensor[(1664), uint64], Tensor[(?, 231), float64]) {
  @func_6074(%var_6076, %var_6077, %var_6078, %var_6079, %var_6080) /* ty=(Tensor[(14, 7, 3), float32], Tensor[(528), float32], Tensor[(528), float32], Tensor[(2816), float64], Tensor[(60), float64], Tensor[(1664), uint64], Tensor[(?, 231), float64]) */
}

def @func_8557() -> Tensor[(14, 7, 3), float64] {
  %1122 = fn () -> Tensor[(14, 7, 3), float64] {
    %1121 = @func_7558() /* ty=(Tensor[(14, 7, 3), float64],) */;
    %1121.0
  };
  %1122() /* ty=Tensor[(14, 7, 3), float64] */
}

def @func_6074(%var_6052: Tensor[(1, 231), float32], %var_6053: Tensor[(528), float32], %var_6055: Tensor[(2816), float64], %var_6056: Tensor[(60), float64], %var_6057: Tensor[(1664), uint64]) -> (Tensor[(14, 7, 3), float32], Tensor[(528), float32], Tensor[(528), float32], Tensor[(2816), float64], Tensor[(60), float64], Tensor[(1664), uint64], Tensor[(?, 231), float64]) {
  %1123 = @func_4775() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %1124 = cast(%var_6052, dtype="float32") /* ty=Tensor[(1, 231), float32] */;
  %1125 = cast(%var_6052, dtype="float32") /* ty=Tensor[(1, 231), float32] */;
  %1126 = cast(%var_6053, dtype="float32") /* ty=Tensor[(528), float32] */;
  %1127 = cast(meta[relay.Constant][85] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %1128 = cast(%var_6055, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %1129 = cast(%var_6056, dtype="float64") /* ty=Tensor[(60), float64] */;
  %1130 = cast(%var_6057, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
  %1131 = reshape(%1124, newshape=[11, 7, 3]) /* ty=Tensor[(11, 7, 3), float32] */;
  %1132 = reshape(%1125, newshape=[11, 7, 3]) /* ty=Tensor[(11, 7, 3), float32] */;
  %1133 = reshape(%1126, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %1134 = reshape(%1127, newshape=[]) /* ty=int8 */;
  %1135 = reshape(%1128, newshape=[2816]) /* ty=Tensor[(2816), float64] */;
  %1136 = reshape(%1129, newshape=[15, 4]) /* ty=Tensor[(15, 4), float64] */;
  %1137 = reshape(%1130, newshape=[416, 4]) /* ty=Tensor[(416, 4), uint64] */;
  %1138 = @func_2722(%1131, %1132, %1133, %1134, %1135, %1136, %1137) /* ty=(Tensor[(11, 7, 3), float32], Tensor[(8, 12, 16), float64], Tensor[(1536), float64], Tensor[(12, 11, 4), float32], Tensor[(528), float32], int8, Tensor[(6, 30), uint16], int8, Tensor[(154), int8], Tensor[(11, 14), int8], Tensor[(2816), float64], Tensor[(8, 12, 16), float64], Tensor[(60), float64], Tensor[(15, 4), float64], Tensor[(416, 4), uint64]) */;
  %1139 = cast(meta[relay.Constant][85] /* ty=int8 */, dtype="float32") /* ty=float32 */;
  %1140 = cast(%var_6052, dtype="float32") /* ty=Tensor[(1, 231), float32] */;
  %1141 = divide(%1139, %1140) /* ty=Tensor[(1, 231), float32] */;
  %1142 = cast(%1141, dtype="float64") /* ty=Tensor[(1, 231), float64] */;
  %1143 = shape_of(%var_6052, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1144 = cast(%var_6052, dtype="float64") /* ty=Tensor[(1, 231), float64] */;
  %1145 = dyn.reshape(%1142, %1143, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1146 = %1123.0;
  %1147 = %1138.4;
  %1148 = maximum(%1144, %1145) /* ty=Tensor[(?, 231), float64] */;
  (%1146, %1147, %var_6053, %var_6055, %var_6056, %var_6057, %1148)
}

def @func_9906(%var_9904: Tensor[(4, 2, 16), uint64]) -> (Tensor[(4, 2, 16), bool],) {
  @func_9903(%var_9904) /* ty=(Tensor[(4, 2, 16), bool],) */
}

def @func_9859() -> (Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) {
  %1149 = @func_8065() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %1150 = @func_4016() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %1151 = %1149.0;
  %1152 = %1150.0;
  (%1151, %1152)
}

def @func_9773(%var_9761: Tensor[(14, 7, 3), float32]) -> Tensor[(14, 7, 3), int16] {
  %1153 = @func_4016() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %1154 = %1153.0;
  %1155 = cast(%var_9761, dtype="int16") /* ty=Tensor[(14, 7, 3), int16] */;
  %1156 = shape_of(%1154, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1157 = cast(%1154, dtype="int16") /* ty=Tensor[(14, 7, 3), int16] */;
  %1158 = dyn.reshape(%1155, %1156, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_xor(%1157, %1158) /* ty=Tensor[(14, 7, 3), int16] */
}

def @func_10178(%var_10176: Tensor[(1664), uint64], %var_10177: int8) -> (Tensor[(16, 12, 12), float64], Tensor[(13, 16, 8), uint64], Tensor[(1664), uint64], Tensor[(648), bool], Tensor[(648), int32], Tensor[(14, 7, 3), float32], int8) {
  %1175 = fn (%var_10115: Tensor[(1664), uint64], %var_10154: int8) -> (Tensor[(16, 12, 12), float64], Tensor[(13, 16, 8), uint64], Tensor[(1664), uint64], Tensor[(648), bool], Tensor[(648), int32], Tensor[(14, 7, 3), float32], int8) {
    %1159 = cast(%var_10115, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
    %1160 = cast(%var_10115, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
    %1161 = reshape(%1159, newshape=[13, 16, 8]) /* ty=Tensor[(13, 16, 8), uint64] */;
    %1162 = reshape(%1160, newshape=[13, 16, 8]) /* ty=Tensor[(13, 16, 8), uint64] */;
    %1163 = @func_1758(%1161, %1162) /* ty=(Tensor[(13, 16, 8), uint64],) */;
    %1164 = cast(meta[relay.Constant][86] /* ty=Tensor[(648), int32] */, dtype="int32") /* ty=Tensor[(648), int32] */;
    %1165 = reshape(%1164, newshape=[648]) /* ty=Tensor[(648), int32] */;
    %1166 = @func_5470(%1165) /* ty=Tensor[(648), bool] */;
    %1167 = cast(%1166, dtype="int32") /* ty=Tensor[(648), int32] */;
    %1168 = cast(%var_10154, dtype="int8") /* ty=int8 */;
    %1169 = reshape(%1167, newshape=[648]) /* ty=Tensor[(648), int32] */;
    %1170 = reshape(%1168, newshape=[]) /* ty=int8 */;
    %1171 = @func_4590(%1169, %1170) /* ty=(Tensor[(14, 7, 3), float32], Tensor[(6, 9, 12), int32], Tensor[(648), int32], Tensor[(60), float64], int8, Tensor[(11, 14), float32], Tensor[(14, 7, 3), float32]) */;
    %1172 = @func_5650() /* ty=Tensor[(16, 12, 12), float64] */;
    %1173 = %1163.0;
    %1174 = %1171.6;
    (%1172, %1173, %var_10115, %1166, meta[relay.Constant][86] /* ty=Tensor[(648), int32] */, %1174, %var_10154)
  };
  %1175(%var_10176, %var_10177) /* ty=(Tensor[(16, 12, 12), float64], Tensor[(13, 16, 8), uint64], Tensor[(1664), uint64], Tensor[(648), bool], Tensor[(648), int32], Tensor[(14, 7, 3), float32], int8) */
}

def @func_8672(%var_8654: Tensor[(2, 9, 6), bool]) -> (Tensor[(2, 9, 6), bool],) {
  %1176 = cast(meta[relay.Constant][87] /* ty=Tensor[(2, 9, 6), bool] */, dtype="bool") /* ty=Tensor[(2, 9, 6), bool] */;
  %1177 = shape_of(%var_8654, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1178 = cast(%var_8654, dtype="bool") /* ty=Tensor[(2, 9, 6), bool] */;
  %1179 = dyn.reshape(%1176, %1177, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1180 = logical_and(%1178, %1179) /* ty=Tensor[(2, 9, 6), bool] */;
  (%1180,)
}

def @func_2575(%var_2572: int8, %var_2573: Tensor[(154), int8], %var_2574: Tensor[(2816), float64]) -> (Tensor[(154), int8], Tensor[(60), float64], Tensor[(5), int32], Tensor[(2816), float64], Tensor[(3, 60), uint16], Tensor[(11, 8, 10), int64], Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(14, 1, 11), uint8]) {
  %1210 = fn (%var_2509: int8, %var_2510: Tensor[(154), int8], %var_2521: Tensor[(2816), float64]) -> (Tensor[(154), int8], Tensor[(60), float64], Tensor[(5), int32], Tensor[(2816), float64], Tensor[(3, 60), uint16], Tensor[(11, 8, 10), int64], Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(14, 1, 11), uint8]) {
    %1181 = cast(%var_2509, dtype="int32") /* ty=int32 */;
    %1182 = cast(meta[relay.Constant][88] /* ty=Tensor[(5), int32] */, dtype="int32") /* ty=Tensor[(5), int32] */;
    %1183 = cast(%var_2521, dtype="float64") /* ty=Tensor[(2816), float64] */;
    %1184 = cast(meta[relay.Constant][89] /* ty=Tensor[(3, 60), uint16] */, dtype="uint16") /* ty=Tensor[(3, 60), uint16] */;
    %1185 = reshape(%1181, newshape=[]) /* ty=int32 */;
    %1186 = reshape(%1182, newshape=[1, 1, 5]) /* ty=Tensor[(1, 1, 5), int32] */;
    %1187 = reshape(%1183, newshape=[2816]) /* ty=Tensor[(2816), float64] */;
    %1188 = reshape(%1184, newshape=[180]) /* ty=Tensor[(180), uint16] */;
    %1189 = @func_2124(%1185, %1186, %1187, %1188) /* ty=(Tensor[(1, 1, 5), int32], Tensor[(1, 1, 5), uint32], Tensor[(60), float64], Tensor[(16, 16, 11), float64], Tensor[(180), uint16], Tensor[(10, 2, 3), float64], Tensor[(2816), float32]) */;
    %1190 = cast(meta[relay.Constant][90] /* ty=Tensor[(11, 8, 10), float32] */, dtype="float32") /* ty=Tensor[(11, 8, 10), float32] */;
    %1191 = cos(%1190) /* ty=Tensor[(11, 8, 10), float32] */;
    %1192 = cast(meta[relay.Constant][90] /* ty=Tensor[(11, 8, 10), float32] */, dtype="int64") /* ty=Tensor[(11, 8, 10), int64] */;
    %1193 = shape_of(%1191, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1194 = cast(%1191, dtype="int64") /* ty=Tensor[(11, 8, 10), int64] */;
    %1195 = dyn.reshape(%1192, %1193, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1196 = cast(meta[relay.Constant][91] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
    %1197 = reshape(%1196, newshape=[12, 11, 4]) /* ty=Tensor[(12, 11, 4), float32] */;
    %1198 = cast(%var_2509, dtype="int8") /* ty=int8 */;
    %1199 = cast(%var_2510, dtype="int8") /* ty=Tensor[(154), int8] */;
    %1200 = reshape(%1198, newshape=[]) /* ty=int8 */;
    %1201 = reshape(%1199, newshape=[14, 1, 11]) /* ty=Tensor[(14, 1, 11), int8] */;
    %1202 = @func_134(%1200, %1201) /* ty=(Tensor[(14, 1, 11), int8],) */;
    %1203 = %1202.0;
    %1204 = cast(%1203, dtype="uint8") /* ty=Tensor[(14, 1, 11), uint8] */;
    %1205 = cast(%var_2509, dtype="uint8") /* ty=uint8 */;
    %1206 = %1189.2;
    %1207 = multiply(%1194, %1195) /* ty=Tensor[(11, 8, 10), int64] */;
    %1208 = @func_339(%1197) /* ty=Tensor[(12, 11, 4), float32] */;
    %1209 = bitwise_and(%1204, %1205) /* ty=Tensor[(14, 1, 11), uint8] */;
    (%var_2510, %1206, meta[relay.Constant][88] /* ty=Tensor[(5), int32] */, %var_2521, meta[relay.Constant][89] /* ty=Tensor[(3, 60), uint16] */, %1207, %1208, meta[relay.Constant][91] /* ty=Tensor[(528), float32] */, %1209)
  };
  %1210(%var_2572, %var_2573, %var_2574) /* ty=(Tensor[(154), int8], Tensor[(60), float64], Tensor[(5), int32], Tensor[(2816), float64], Tensor[(3, 60), uint16], Tensor[(11, 8, 10), int64], Tensor[(12, 11, 4), float32], Tensor[(528), float32], Tensor[(14, 1, 11), uint8]) */
}

def @func_4417(%var_4412: Tensor[(15, 7, 3), float32], %var_4413: Tensor[(8, 24), uint8], %var_4414: int8, %var_4415: Tensor[(154), int8], %var_4416: Tensor[(132), uint64]) -> (Tensor[(15, 7, 3), float32], Tensor[(14, 1, 11), int8], Tensor[(96), uint8], Tensor[(8, 24), uint8], int8, Tensor[(154), int8], Tensor[(132), uint64], Tensor[(14, 1, 11), int8]) {
  %1231 = fn (%var_4386: Tensor[(15, 7, 3), float32], %var_4392: Tensor[(8, 24), uint8], %var_4393: int8, %var_4394: Tensor[(154), int8], %var_4395: Tensor[(132), uint64]) -> (Tensor[(15, 7, 3), float32], Tensor[(14, 1, 11), int8], Tensor[(96), uint8], Tensor[(8, 24), uint8], int8, Tensor[(154), int8], Tensor[(132), uint64], Tensor[(14, 1, 11), int8]) {
    %1211 = cast(%var_4386, dtype="float32") /* ty=Tensor[(15, 7, 3), float32] */;
    %1212 = cast(meta[relay.Constant][92] /* ty=Tensor[(96), uint8] */, dtype="uint8") /* ty=Tensor[(96), uint8] */;
    %1213 = cast(%var_4392, dtype="uint8") /* ty=Tensor[(8, 24), uint8] */;
    %1214 = cast(%var_4393, dtype="int8") /* ty=int8 */;
    %1215 = cast(%var_4394, dtype="int8") /* ty=Tensor[(154), int8] */;
    %1216 = cast(%var_4395, dtype="uint64") /* ty=Tensor[(132), uint64] */;
    %1217 = reshape(%1212, newshape=[6, 16, 1]) /* ty=Tensor[(6, 16, 1), uint8] */;
    %1218 = reshape(%1213, newshape=[6, 16, 2]) /* ty=Tensor[(6, 16, 2), uint8] */;
    %1219 = reshape(%1214, newshape=[]) /* ty=int8 */;
    %1220 = reshape(%1215, newshape=[154]) /* ty=Tensor[(154), int8] */;
    %1221 = reshape(%1216, newshape=[132]) /* ty=Tensor[(132), uint64] */;
    %1222 = @func_4294(%1217, %1218, %1219, %1220, %1221) /* ty=(Tensor[(6, 16, 2), float64], Tensor[(6, 16, 2), float64], Tensor[(14, 1, 11), int8], int8, Tensor[(154), int8], Tensor[(1, 11, 12), uint64], Tensor[(132), uint64]) */;
    %1223 = cast(%var_4393, dtype="int8") /* ty=int8 */;
    %1224 = %1222.2;
    %1225 = cast(%1224, dtype="int8") /* ty=Tensor[(14, 1, 11), int8] */;
    %1226 = reshape(%1223, newshape=[]) /* ty=int8 */;
    %1227 = reshape(%1225, newshape=[14, 1, 11]) /* ty=Tensor[(14, 1, 11), int8] */;
    %1228 = @func_134(%1226, %1227) /* ty=(Tensor[(14, 1, 11), int8],) */;
    %1229 = sin(%1211) /* ty=Tensor[(15, 7, 3), float32] */;
    %1230 = %1228.0;
    (%1229, %1224, meta[relay.Constant][92] /* ty=Tensor[(96), uint8] */, %var_4392, %var_4393, %var_4394, %var_4395, %1230)
  };
  %1231(%var_4412, %var_4413, %var_4414, %var_4415, %var_4416) /* ty=(Tensor[(15, 7, 3), float32], Tensor[(14, 1, 11), int8], Tensor[(96), uint8], Tensor[(8, 24), uint8], int8, Tensor[(154), int8], Tensor[(132), uint64], Tensor[(14, 1, 11), int8]) */
}

def @func_4716(%var_4661: Tensor[(154), float32], %var_4664: Tensor[(180), uint16]) -> (Tensor[(14, 7, 3), float32], Tensor[(252), uint8], Tensor[(1, 60), float64], Tensor[(5), int32], Tensor[(180), uint16], Tensor[(1664), uint16], Tensor[(154), float32]) {
  %1232 = @func_4375() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32]) */;
  %1233 = cast(meta[relay.Constant][93] /* ty=Tensor[(252), uint8] */, dtype="uint8") /* ty=Tensor[(252), uint8] */;
  %1234 = cast(meta[relay.Constant][94] /* ty=Tensor[(1, 60), float64] */, dtype="float64") /* ty=Tensor[(1, 60), float64] */;
  %1235 = cast(%var_4661, dtype="float32") /* ty=Tensor[(154), float32] */;
  %1236 = cast(meta[relay.Constant][96] /* ty=Tensor[(1664), uint64] */, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
  %1237 = cast(meta[relay.Constant][95] /* ty=Tensor[(5), int32] */, dtype="int32") /* ty=Tensor[(5), int32] */;
  %1238 = cast(%var_4664, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %1239 = reshape(%1233, newshape=[3, 6, 14]) /* ty=Tensor[(3, 6, 14), uint8] */;
  %1240 = reshape(%1234, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %1241 = reshape(%1235, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %1242 = reshape(%1236, newshape=[1664]) /* ty=Tensor[(1664), uint64] */;
  %1243 = reshape(%1237, newshape=[5]) /* ty=Tensor[(5), int32] */;
  %1244 = reshape(%1238, newshape=[180]) /* ty=Tensor[(180), uint16] */;
  %1245 = @func_2414(%1239, %1240, %1241, %1242, %1243, %1244) /* ty=(Tensor[(3, 6, 14), bool], int8, Tensor[(60), float64], Tensor[(154), float32], Tensor[(1664), uint64], Tensor[(180), uint16], Tensor[(5), int32], Tensor[(180), uint16], Tensor[(2816), uint64]) */;
  %1246 = %1245.4;
  %1247 = cast(%1246, dtype="uint16") /* ty=Tensor[(1664), uint16] */;
  %1248 = shape_of(meta[relay.Constant][96] /* ty=Tensor[(1664), uint64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1249 = cast(meta[relay.Constant][96] /* ty=Tensor[(1664), uint64] */, dtype="uint16") /* ty=Tensor[(1664), uint16] */;
  %1250 = dyn.reshape(%1247, %1248, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %1251 = cast(%var_4661, dtype="float64") /* ty=Tensor[(154), float64] */;
  %1252 = sqrt(%1251) /* ty=Tensor[(154), float64] */;
  %1253 = cast(%1252, dtype="float32") /* ty=Tensor[(154), float32] */;
  %1254 = cosh(%1253) /* ty=Tensor[(154), float32] */;
  %1255 = cast(%1254, dtype="float32") /* ty=Tensor[(154), float32] */;
  %1256 = %1232.1;
  %1257 = subtract(%1249, %1250) /* ty=Tensor[(1664), uint16] */;
  %1258 = asin(%1255) /* ty=Tensor[(154), float32] */;
  (%1256, meta[relay.Constant][93] /* ty=Tensor[(252), uint8] */, meta[relay.Constant][94] /* ty=Tensor[(1, 60), float64] */, meta[relay.Constant][95] /* ty=Tensor[(5), int32] */, %var_4664, %1257, %1258)
}

def @func_10336() -> (Tensor[(14, 7, 3), float32],) {
  %1261 = fn () -> (Tensor[(14, 7, 3), float32],) {
    %1259 = @func_5050() /* ty=(Tensor[(14, 7, 3), float64], Tensor[(14, 7, 3), float32]) */;
    %1260 = %1259.1;
    (%1260,)
  };
  %1261() /* ty=(Tensor[(14, 7, 3), float32],) */
}

def @func_4159(%var_4157: Tensor[(264, 2), float32]) -> (Tensor[(14, 7, 3), float32], Tensor[(2816), float64], Tensor[(144, 4), int8], Tensor[(154), int8], Tensor[(2, 1408), float64], Tensor[(12, 11, 4), float32], Tensor[(264, 2), float32]) {
  @func_4156(%var_4157) /* ty=(Tensor[(14, 7, 3), float32], Tensor[(2816), float64], Tensor[(144, 4), int8], Tensor[(154), int8], Tensor[(2, 1408), float64], Tensor[(12, 11, 4), float32], Tensor[(264, 2), float32]) */
}

def @func_9881() -> (Tensor[(14, 7, 3), float32],) {
  @func_9879() /* ty=(Tensor[(14, 7, 3), float32],) */
}

def @func_5088(%var_5084: Tensor[(1, 5), int32], %var_5085: Tensor[(64, 44), float64], %var_5086: Tensor[(180), uint16], %var_5087: Tensor[(154), int8]) -> (Tensor[(14, 7, 3), float32], Tensor[(1, 1, 5), uint32], Tensor[(1, 5), int32], Tensor[(180), uint16], Tensor[(64, 44), bool], Tensor[(12, 8, 6), int8], Tensor[(144, 4), int8], Tensor[(154), int8]) {
  @func_5082(%var_5084, %var_5085, %var_5086, %var_5087) /* ty=(Tensor[(14, 7, 3), float32], Tensor[(1, 1, 5), uint32], Tensor[(1, 5), int32], Tensor[(180), uint16], Tensor[(64, 44), bool], Tensor[(12, 8, 6), int8], Tensor[(144, 4), int8], Tensor[(154), int8]) */
}

def @func_5529(%var_5527: bool) -> Tensor[(14, 1, 8), bool] {
  @func_5526(%var_5527) /* ty=Tensor[(14, 1, 8), bool] */
}

def @func_5677() -> (Tensor[(14, 7, 3), float32], Tensor[(5, 1, 14), float32], Tensor[(70), float32]) {
  %1267 = fn () -> (Tensor[(14, 7, 3), float32], Tensor[(5, 1, 14), float32], Tensor[(70), float32]) {
    %1262 = @func_4775() /* ty=(Tensor[(14, 7, 3), float32],) */;
    %1263 = cast(meta[relay.Constant][97] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
    %1264 = reshape(%1263, newshape=[5, 1, 14]) /* ty=Tensor[(5, 1, 14), float32] */;
    %1265 = %1262.0;
    %1266 = @func_5396(%1264) /* ty=Tensor[(5, 1, 14), float32] */;
    (%1265, %1266, meta[relay.Constant][97] /* ty=Tensor[(70), float32] */)
  };
  %1267() /* ty=(Tensor[(14, 7, 3), float32], Tensor[(5, 1, 14), float32], Tensor[(70), float32]) */
}

def @func_5769(%var_5751: Tensor[(8, 4, 5), float64]) -> (Tensor[(8, 4, 5), float64],) {
  %1268 = cast(%var_5751, dtype="float64") /* ty=Tensor[(8, 4, 5), float64] */;
  %1269 = sqrt(%1268) /* ty=Tensor[(8, 4, 5), float64] */;
  (%1269,)
}

def @func_7041() -> (Tensor[(14, 7, 3), float32],) {
  %1272 = fn () -> (Tensor[(14, 7, 3), float32],) {
    %1270 = @func_4880() /* ty=(Tensor[(14, 7, 3), float32],) */;
    %1271 = %1270.0;
    (%1271,)
  };
  %1272() /* ty=(Tensor[(14, 7, 3), float32],) */
}

def @func_3629(%var_3567: Tensor[(5, 14, 6), int8], %var_3568: Tensor[(5, 14, 6), int8], %var_3582: Tensor[(64, 44), float64], %var_3583: Tensor[(180), uint16]) -> (Tensor[(5, 14, 6), int8], Tensor[(5), int32], Tensor[(64, 44), float64], Tensor[(180), uint16], Tensor[(1, 1, 5), bool], Tensor[(12, 11, 4), float32]) {
  %1273 = cast(%var_3568, dtype="int8") /* ty=Tensor[(5, 14, 6), int8] */;
  %1274 = shape_of(%var_3567, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1275 = cast(%var_3567, dtype="int8") /* ty=Tensor[(5, 14, 6), int8] */;
  %1276 = dyn.reshape(%1273, %1274, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1277 = cast(-7 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %1278 = cast(meta[relay.Constant][98] /* ty=Tensor[(5), int32] */, dtype="int32") /* ty=Tensor[(5), int32] */;
  %1279 = cast(%var_3582, dtype="float64") /* ty=Tensor[(64, 44), float64] */;
  %1280 = cast(%var_3583, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %1281 = reshape(%1277, newshape=[]) /* ty=int32 */;
  %1282 = reshape(%1278, newshape=[1, 1, 5]) /* ty=Tensor[(1, 1, 5), int32] */;
  %1283 = reshape(%1279, newshape=[2816]) /* ty=Tensor[(2816), float64] */;
  %1284 = reshape(%1280, newshape=[180]) /* ty=Tensor[(180), uint16] */;
  %1285 = @func_2124(%1281, %1282, %1283, %1284) /* ty=(Tensor[(1, 1, 5), int32], Tensor[(1, 1, 5), uint32], Tensor[(60), float64], Tensor[(16, 16, 11), float64], Tensor[(180), uint16], Tensor[(10, 2, 3), float64], Tensor[(2816), float32]) */;
  %1286 = %1285.0;
  %1287 = cast(%1286, dtype="bool") /* ty=Tensor[(1, 1, 5), bool] */;
  %1288 = cast(-7 /* ty=int32 */, dtype="bool") /* ty=bool */;
  %1289 = cast(%var_3582, dtype="float64") /* ty=Tensor[(64, 44), float64] */;
  %1290 = cast(%var_3583, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %1291 = cast(-7 /* ty=int32 */, dtype="int8") /* ty=int8 */;
  %1292 = reshape(%1289, newshape=[16, 16, 11]) /* ty=Tensor[(16, 16, 11), float64] */;
  %1293 = reshape(%1290, newshape=[180]) /* ty=Tensor[(180), uint16] */;
  %1294 = reshape(%1291, newshape=[]) /* ty=int8 */;
  %1295 = @func_1938(%1292, %1293, %1294) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(12, 11, 4), float32], Tensor[(180), uint16], int8) */;
  %1296 = add(%1275, %1276) /* ty=Tensor[(5, 14, 6), int8] */;
  %1297 = greater_equal(%1287, %1288) /* ty=Tensor[(1, 1, 5), bool] */;
  %1298 = %1295.1;
  (%1296, meta[relay.Constant][98] /* ty=Tensor[(5), int32] */, %var_3582, %var_3583, %1297, %1298)
}

def @func_4775() -> (Tensor[(14, 7, 3), float32],) {
  %1299 = @func_4016() /* ty=(Tensor[(14, 7, 3), float32],) */;
  %1300 = %1299.0;
  (%1300,)
}

def @func_8581() -> (Tensor[(5, 1, 14), float32],) {
  %1303 = fn () -> (Tensor[(5, 1, 14), float32],) {
    %1301 = @func_5676() /* ty=(Tensor[(14, 7, 3), float32], Tensor[(5, 1, 14), float32], Tensor[(70), float32]) */;
    %1302 = %1301.1;
    (%1302,)
  };
  %1303() /* ty=(Tensor[(5, 1, 14), float32],) */
}

def @func_8497() -> (Tensor[(14, 7, 3), uint8],) {
  @func_8495() /* ty=(Tensor[(14, 7, 3), uint8],) */
}

def @func_6312(%var_6271: int8) -> (Tensor[(14, 7, 3), bool], Tensor[(180), uint16], Tensor[(720), float64], int8, Tensor[(14, 7, 3), float64], Tensor[(14, 7, 3), uint32]) {
  %1304 = @func_4375() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32]) */;
  %1305 = cast(meta[relay.Constant][99] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %1306 = cast(meta[relay.Constant][99] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %1307 = cast(%var_6271, dtype="int8") /* ty=int8 */;
  %1308 = reshape(%1305, newshape=[6, 10, 12]) /* ty=Tensor[(6, 10, 12), float64] */;
  %1309 = reshape(%1306, newshape=[6, 10, 12]) /* ty=Tensor[(6, 10, 12), float64] */;
  %1310 = reshape(%1307, newshape=[]) /* ty=int8 */;
  %1311 = @func_5612(%1308, %1309, %1310) /* ty=(Tensor[(6, 10, 12), float64], Tensor[(180), uint16], Tensor[(2816), float64], Tensor[(180, 1), uint16], int8) */;
  %1312 = @func_5050() /* ty=(Tensor[(14, 7, 3), float64], Tensor[(14, 7, 3), float32]) */;
  %1313 = %1312.0;
  %1314 = cast(%1313, dtype="float32") /* ty=Tensor[(14, 7, 3), float32] */;
  %1315 = reshape(%1314, newshape=[14, 7, 3]) /* ty=Tensor[(14, 7, 3), float32] */;
  %1316 = %1304.0;
  %1317 = %1311.1;
  %1318 = @func_4460(%1315) /* ty=Tensor[(14, 7, 3), uint32] */;
  (%1316, %1317, meta[relay.Constant][99] /* ty=Tensor[(720), float64] */, %var_6271, %1313, %1318)
}

def @func_6931(%var_6930: Tensor[(180), uint16]) -> (Tensor[(14, 7, 3), float32], Tensor[(5, 14, 6), int8], Tensor[(420, 1), int8], Tensor[(2816), float64], Tensor[(180), uint16]) {
  %1331 = fn (%var_6921: Tensor[(180), uint16]) -> (Tensor[(14, 7, 3), float32], Tensor[(5, 14, 6), int8], Tensor[(420, 1), int8], Tensor[(2816), float64], Tensor[(180), uint16]) {
    %1319 = @func_4880() /* ty=(Tensor[(14, 7, 3), float32],) */;
    %1320 = cast(meta[relay.Constant][100] /* ty=Tensor[(420, 1), int8] */, dtype="int8") /* ty=Tensor[(420, 1), int8] */;
    %1321 = cast(meta[relay.Constant][100] /* ty=Tensor[(420, 1), int8] */, dtype="int8") /* ty=Tensor[(420, 1), int8] */;
    %1322 = cast(meta[relay.Constant][101] /* ty=Tensor[(2816), float64] */, dtype="float64") /* ty=Tensor[(2816), float64] */;
    %1323 = cast(%var_6921, dtype="uint16") /* ty=Tensor[(180), uint16] */;
    %1324 = reshape(%1320, newshape=[5, 14, 6]) /* ty=Tensor[(5, 14, 6), int8] */;
    %1325 = reshape(%1321, newshape=[5, 14, 6]) /* ty=Tensor[(5, 14, 6), int8] */;
    %1326 = reshape(%1322, newshape=[64, 44]) /* ty=Tensor[(64, 44), float64] */;
    %1327 = reshape(%1323, newshape=[180]) /* ty=Tensor[(180), uint16] */;
    %1328 = @func_3629(%1324, %1325, %1326, %1327) /* ty=(Tensor[(5, 14, 6), int8], Tensor[(5), int32], Tensor[(64, 44), float64], Tensor[(180), uint16], Tensor[(1, 1, 5), bool], Tensor[(12, 11, 4), float32]) */;
    %1329 = %1319.0;
    %1330 = %1328.0;
    (%1329, %1330, meta[relay.Constant][100] /* ty=Tensor[(420, 1), int8] */, meta[relay.Constant][101] /* ty=Tensor[(2816), float64] */, %var_6921)
  };
  %1331(%var_6930) /* ty=(Tensor[(14, 7, 3), float32], Tensor[(5, 14, 6), int8], Tensor[(420, 1), int8], Tensor[(2816), float64], Tensor[(180), uint16]) */
}

def @func_8781() -> Tensor[(14, 7, 3), float32] {
  @func_8779() /* ty=Tensor[(14, 7, 3), float32] */
}

def @func_8514(%var_8512: Tensor[(10, 8, 9), int32], %var_8513: Tensor[(10, 8, 9), int32]) -> Tensor[(10, 8, 9), int32] {
  @func_8510(%var_8512, %var_8513) /* ty=Tensor[(10, 8, 9), int32] */
}

def @func_8029(%var_8027: Tensor[(5, 1, 14), float32]) -> (Tensor[(14, 7, 3), float64], Tensor[(5, ?, 14), bool]) {
  @func_8026(%var_8027) /* ty=(Tensor[(14, 7, 3), float64], Tensor[(5, ?, 14), bool]) */
}

def @func_5274() -> (Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), uint32]) {
  %1337 = fn () -> (Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), uint32]) {
    %1332 = @func_4880() /* ty=(Tensor[(14, 7, 3), float32],) */;
    %1333 = %1332.0;
    %1334 = cast(%1333, dtype="float32") /* ty=Tensor[(14, 7, 3), float32] */;
    %1335 = reshape(%1334, newshape=[14, 7, 3]) /* ty=Tensor[(14, 7, 3), float32] */;
    %1336 = @func_4460(%1335) /* ty=Tensor[(14, 7, 3), uint32] */;
    (%1333, %1336)
  };
  %1337() /* ty=(Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), uint32]) */
}

def @func_10363() -> Tensor[(14, 7, 3), bool] {
  %1338 = @func_9004() /* ty=(Tensor[(14, 7, 3), bool], Tensor[(14, 7, 3), float32]) */;
  %1338.0
}

def @func_5162() -> (Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) {
  %1343 = fn () -> (Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) {
    %1339 = @func_4016() /* ty=(Tensor[(14, 7, 3), float32],) */;
    %1340 = @func_4212() /* ty=(Tensor[(14, 7, 3), float32],) */;
    %1341 = %1339.0;
    %1342 = %1340.0;
    (%1341, %1342)
  };
  %1343() /* ty=(Tensor[(14, 7, 3), float32], Tensor[(14, 7, 3), float32]) */
}

def @func_6785() -> Tensor[(16, 12, 12), float64] {
  %1344 = fn () -> Tensor[(16, 12, 12), float64] {
    @func_4613() /* ty=Tensor[(16, 12, 12), float64] */
  };
  %1344() /* ty=Tensor[(16, 12, 12), float64] */
}

def @func_9903(%var_9883: Tensor[(4, 2, 16), uint64]) -> (Tensor[(4, 2, 16), bool],) {
  %1345 = cast(%var_9883, dtype="bool") /* ty=Tensor[(4, 2, 16), bool] */;
  %1346 = shape_of(meta[relay.Constant][102] /* ty=Tensor[(4, 2, 16), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1347 = cast(meta[relay.Constant][102] /* ty=Tensor[(4, 2, 16), uint64] */, dtype="bool") /* ty=Tensor[(4, 2, 16), bool] */;
  %1348 = dyn.reshape(%1345, %1346, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1349 = not_equal(%1347, %1348) /* ty=Tensor[(4, 2, 16), bool] */;
  (%1349,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen349/build/output.py:3185: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen349/build/output.py", line 3190, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(1024) tvmgen_default_fused_logical_and_kernel0(signed char* __restrict__ T_logical_and, signed char* __restrict__ placeholder, signed char* __restrict__ placeholder1) {
  if (((((int)blockIdx.x) * 64) + (((int)threadIdx.x) >> 4)) < 120) {
    if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 1920) {
      T_logical_and[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = ((signed char)(((bool)placeholder[((((((((int)blockIdx.x) * 64) + (((int)threadIdx.x) >> 4)) / 12) * 16) + (((int)threadIdx.x) & 15)))]) && ((bool)placeholder1[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))])));
    }
  }
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


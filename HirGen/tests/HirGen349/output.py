import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_125 = relay.var("var_125", dtype = "int8", shape = ())#candidate|125|()|var|int8
var_126 = relay.var("var_126", dtype = "int8", shape = (14, 1, 11))#candidate|126|(14, 1, 11)|var|int8
bop_127 = relay.logical_xor(var_125.astype('int8'), var_126.astype('int8')) # shape=(14, 1, 11)
output = relay.Tuple([bop_127,])
output2 = relay.Tuple([bop_127,])
func_134 = relay.Function([var_125,var_126,], output)
mod['func_134'] = func_134
mod = relay.transform.InferType()(mod)
var_135 = relay.var("var_135", dtype = "int8", shape = ())#candidate|135|()|var|int8
var_136 = relay.var("var_136", dtype = "int8", shape = (14, 1, 11))#candidate|136|(14, 1, 11)|var|int8
output = func_134(var_135,var_136,)
func_137 = relay.Function([var_135,var_136,], output)
mutated_mod['func_137'] = func_137
mutated_mod = relay.transform.InferType()(mutated_mod)
const_323 = relay.const([[[3.727259,7.971915,-9.864808,-6.589257],[4.132863,-7.813076,3.730421,3.099219],[9.403083,7.772354,-6.735008,5.273979],[9.032043,-5.891401,-4.337034,-2.355843],[8.680071,9.968209,6.855272,-6.860416],[-0.134757,0.495958,7.363770,7.742336],[4.296146,-2.325553,-2.881430,-6.557567],[-9.544358,-1.346467,7.484009,7.358503],[-4.690198,-2.114697,-0.625876,-0.031397],[2.293702,-2.081585,-7.797251,8.290793],[-4.057264,4.420401,0.659718,4.608648]],[[3.063426,6.910353,-4.932965,8.677888],[7.753783,-5.324486,-4.587227,-0.504408],[-9.826545,-3.238973,-6.746556,3.507754],[-4.799998,-4.902151,-6.465221,1.994522],[1.450856,-1.070028,0.091314,-9.625584],[-9.243479,2.721670,5.685719,-3.295404],[-8.182053,-9.860321,0.949568,-4.202853],[-5.982579,2.256804,-8.919580,-0.114694],[9.220313,8.141649,4.583032,5.166860],[-6.520954,-8.128543,-4.868056,-1.981989],[-9.266375,-4.289771,-8.248606,5.055045]],[[5.333535,4.355940,8.864894,3.214350],[9.506796,-0.897795,-4.442192,-2.638567],[-2.713571,-5.275394,5.428203,3.032303],[0.131314,6.430897,-4.131213,-1.809907],[-8.387619,9.399758,-5.011721,-5.344009],[1.744991,-3.584847,1.486021,4.923518],[9.387023,-5.675716,-9.097174,-5.291537],[3.974826,3.817599,-6.056263,9.028924],[6.658126,1.937927,6.002043,7.194392],[-8.705947,-5.413185,-0.805133,7.463785],[8.382858,6.692557,7.267559,5.814865]],[[6.618003,3.135747,9.729649,-7.099578],[7.292142,-8.352619,-3.223002,-5.230876],[7.998659,-1.604337,-8.709997,8.462531],[6.381370,7.628163,9.432615,-9.719159],[5.197979,-2.915123,-3.730989,3.052658],[-9.819794,6.012057,-2.537580,5.823788],[-8.517773,2.187855,0.558022,5.764838],[9.955809,-7.171101,9.453236,-2.799588],[-4.344186,5.172741,4.109462,-6.665579],[-6.026901,-1.967122,1.975226,-2.666795],[3.831597,-9.415870,8.206756,-4.739961]],[[-1.845863,1.355865,3.084351,-2.788111],[-3.687716,-5.302204,3.068395,-4.444257],[-7.799785,-8.852255,-0.731094,-8.327471],[-7.971768,5.694334,-2.059769,0.562682],[-0.447550,-4.551987,-9.072749,8.268914],[3.705819,-4.620850,-9.781032,-4.427420],[-1.103000,5.551768,-6.201013,-9.473381],[-6.815198,-3.366257,6.752357,-0.439275],[-9.274829,1.461006,7.651287,9.769846],[2.489538,1.238475,-6.990144,-2.587356],[-8.278113,-1.812024,5.808146,-4.911652]],[[-5.816524,-9.267180,-2.902968,4.221281],[-2.942624,7.310484,4.510327,-7.037663],[-1.055064,-0.948347,9.425231,7.970845],[-1.984298,-9.066383,0.298752,-1.825124],[8.421314,0.197533,1.115312,-1.509807],[-5.209577,1.504771,5.722698,-8.472087],[-7.635720,-9.012114,9.985280,0.291120],[1.256480,-8.257353,-7.867470,-1.528433],[9.161420,7.367852,-4.882343,-1.385490],[7.463888,-5.189565,4.315334,4.890537],[-6.958598,-9.761105,1.534457,4.495719]],[[0.614156,1.502364,-6.894997,-6.707272],[-7.670905,-5.138848,0.270868,2.925295],[3.360463,9.338922,-3.819435,-1.941436],[3.692932,-8.904856,-9.462612,8.536290],[4.307572,-6.309318,9.013992,-5.677639],[-4.152559,-8.697464,8.855018,9.172963],[-6.292795,-3.998007,7.795202,6.132923],[8.794741,8.394667,3.579147,9.022656],[-0.485129,4.523920,-7.957001,2.242147],[-7.036255,3.094478,4.474034,-6.431093],[5.610520,-4.338714,1.389383,4.253559]],[[7.187358,5.782305,-5.959079,-2.518144],[-4.201678,-7.321844,5.914473,9.955233],[7.405233,8.765215,5.083353,-5.238715],[-2.748238,3.981675,-7.803340,-0.674742],[-8.402793,8.359341,9.069531,0.643867],[9.342396,-2.727167,7.005255,-7.640148],[-5.861958,2.331700,-3.435813,5.216317],[-6.931048,-0.012366,1.509534,-1.068217],[-5.925680,-6.419594,7.639093,4.282688],[8.559394,7.395298,-9.108177,-8.836152],[-5.831659,-9.799579,9.471816,0.300253]],[[9.326607,5.025113,4.579236,-9.755673],[6.385540,7.712506,-5.136405,6.281966],[-1.136643,-0.013536,-3.746059,-2.705032],[-1.069173,1.117538,-8.174261,8.393818],[6.590564,-5.756200,-9.106073,-5.618923],[-7.371323,7.942167,4.727896,-3.954091],[3.357703,-1.845398,8.808086,-3.140769],[6.625499,-7.314159,8.417903,9.908073],[-2.016420,0.261586,-3.463470,-5.797986],[2.733388,6.125138,-5.128353,-7.829992],[-3.409435,5.881867,8.247066,2.123824]],[[-7.616153,-4.811397,5.900725,-9.095056],[-2.142897,7.703646,7.471742,2.774288],[3.102360,2.746912,-9.891796,2.898235],[-3.777601,8.225232,6.016618,8.585518],[-9.920958,4.681332,4.091101,5.987849],[6.381634,3.177146,-7.206836,3.954712],[3.840641,3.502463,-4.733236,1.949420],[2.764006,9.754487,5.670373,-1.722023],[-4.794173,-0.654974,7.680552,8.232520],[-3.631739,-0.226556,2.505618,-6.289257],[-5.218959,8.654928,-3.535967,-7.721760]],[[6.091435,-0.768085,-9.072482,-5.330499],[-0.564503,-4.495833,-6.473981,-9.817496],[-2.543158,9.363253,-2.062391,8.562386],[0.856091,-6.884060,3.842953,8.987197],[-0.956698,4.896694,9.785228,8.714074],[-7.910955,8.378665,-0.303986,8.122500],[-2.756201,-3.663820,-4.710772,-2.768140],[-2.776035,-9.449645,4.451101,-3.848521],[4.246223,-0.882601,4.327128,8.743903],[0.401650,-3.084639,-4.107080,7.092184],[-3.488726,-4.146899,8.327957,-3.692052]],[[0.076533,7.935775,5.787053,-6.452031],[9.104766,8.513144,-8.933530,0.243391],[6.295227,0.400771,8.924919,3.788672],[4.999742,5.050079,-7.642516,-5.537362],[-4.469493,-5.045172,-6.555799,-3.555906],[9.729303,-1.330907,-8.933432,5.701303],[-7.104633,-3.298535,8.698298,5.940058],[3.246032,7.310361,8.884206,0.793059],[3.136571,6.855860,-1.359960,-2.763240],[6.189240,7.274515,-2.676996,1.402592],[-3.164268,-4.142523,0.971008,-0.625749]]], dtype = "float32")#candidate|323|(12, 11, 4)|const|float32
var_324 = relay.var("var_324", dtype = "float32", shape = (12, 11, 4))#candidate|324|(12, 11, 4)|var|float32
bop_325 = relay.floor_divide(const_323.astype('float32'), relay.reshape(var_324.astype('float32'), relay.shape_of(const_323))) # shape=(12, 11, 4)
output = bop_325
output2 = bop_325
func_339 = relay.Function([var_324,], output)
mod['func_339'] = func_339
mod = relay.transform.InferType()(mod)
mutated_mod['func_339'] = func_339
mutated_mod = relay.transform.InferType()(mutated_mod)
var_340 = relay.var("var_340", dtype = "float32", shape = (12, 11, 4))#candidate|340|(12, 11, 4)|var|float32
func_339_call = mutated_mod.get_global_var('func_339')
call_341 = func_339_call(var_340)
output = call_341
func_342 = relay.Function([var_340], output)
mutated_mod['func_342'] = func_342
mutated_mod = relay.transform.InferType()(mutated_mod)
var_371 = relay.var("var_371", dtype = "float64", shape = (10, 2, 3))#candidate|371|(10, 2, 3)|var|float64
uop_372 = relay.rsqrt(var_371.astype('float64')) # shape=(10, 2, 3)
func_134_call = mod.get_global_var('func_134')
func_137_call = mutated_mod.get_global_var('func_137')
var_397 = relay.var("var_397", dtype = "int8", shape = ())#candidate|397|()|var|int8
const_398 = relay.const([4,-10,10,-10,4,6,-4,-3,-4,-7,-10,-2,9,-6,-8,9,-10,5,-8,-10,-10,-4,-5,5,9,6,-8,4,4,8,-4,3,7,5,-2,-8,1,-7,8,-6,3,-8,10,8,3,-7,-4,8,-8,-5,-8,-3,4,3,-1,8,-5,-4,-10,1,8,-8,-8,-4,-1,-7,3,-6,-9,8,10,-1,-2,-1,7,6,2,2,10,8,-6,-8,4,-5,-5,-10,-6,-1,8,-3,-4,4,2,-5,1,-4,8,-5,8,-5,10,-7,10,9,9,-5,-10,6,5,4,7,-3,2,7,-8,2,-10,8,-6,-8,-8,8,1,2,7,2,-4,9,4,3,-10,2,5,-2,7,-7,-4,-7,-1,3,-2,4,-1,-1,10,-7,-10,-2,10,-5,-3,-4,-5,2], dtype = "int8")#candidate|398|(154,)|const|int8
call_396 = relay.TupleGetItem(func_134_call(relay.reshape(var_397.astype('int8'), []), relay.reshape(const_398.astype('int8'), [14, 1, 11]), ), 0)
call_399 = relay.TupleGetItem(func_137_call(relay.reshape(var_397.astype('int8'), []), relay.reshape(const_398.astype('int8'), [14, 1, 11]), ), 0)
output = relay.Tuple([uop_372,call_396,var_397,const_398,])
output2 = relay.Tuple([uop_372,call_399,var_397,const_398,])
func_403 = relay.Function([var_371,var_397,], output)
mod['func_403'] = func_403
mod = relay.transform.InferType()(mod)
mutated_mod['func_403'] = func_403
mutated_mod = relay.transform.InferType()(mutated_mod)
func_403_call = mutated_mod.get_global_var('func_403')
var_405 = relay.var("var_405", dtype = "float64", shape = (10, 2, 3))#candidate|405|(10, 2, 3)|var|float64
var_406 = relay.var("var_406", dtype = "int8", shape = ())#candidate|406|()|var|int8
call_404 = func_403_call(var_405,var_406,)
output = call_404
func_407 = relay.Function([var_405,var_406,], output)
mutated_mod['func_407'] = func_407
mutated_mod = relay.transform.InferType()(mutated_mod)
var_614 = relay.var("var_614", dtype = "uint16", shape = (5, 4, 9))#candidate|614|(5, 4, 9)|var|uint16
var_615 = relay.var("var_615", dtype = "uint16", shape = (5, 4, 9))#candidate|615|(5, 4, 9)|var|uint16
bop_616 = relay.maximum(var_614.astype('uint16'), relay.reshape(var_615.astype('uint16'), relay.shape_of(var_614))) # shape=(5, 4, 9)
func_339_call = mod.get_global_var('func_339')
func_342_call = mutated_mod.get_global_var('func_342')
const_627 = relay.const([1.474161,-1.862890,7.358393,6.822339,7.619661,9.380457,7.045991,-5.786388,6.805068,-6.038158,-6.016435,4.957943,-4.134032,-0.628764,5.762238,5.465819,-0.922402,-8.884431,5.913564,-1.417664,6.906573,6.957407,4.176397,9.418913,0.617415,-2.885788,-0.563235,-8.404621,3.998027,-9.946117,7.980162,4.354097,-8.690839,8.053817,-8.833978,-7.476524,-7.769021,-2.805554,8.487804,-7.350617,3.089784,-3.742115,-1.576070,-0.697124,-1.258514,4.534105,7.883892,5.007930,-7.940669,2.406169,-1.383451,-9.215010,4.106912,-2.944207,0.523148,3.015112,0.734280,-7.051459,-3.927353,2.663896,-2.496559,-3.424059,-1.647057,3.861286,5.052984,6.718753,-1.090130,-4.887236,-4.666393,-4.317648,1.987867,-9.121084,-4.672653,-4.657330,6.217893,3.553706,-0.159452,9.879498,8.610320,8.867995,-7.647790,8.685405,5.339732,-4.314815,-5.617775,6.997942,2.638973,8.033891,-8.508771,-0.875083,3.352039,2.640399,-7.430527,-4.128561,7.177126,-8.448664,-3.722867,-6.870421,6.000346,2.144405,-6.898787,2.348713,-2.383949,9.397874,-0.222819,9.925517,9.610700,-1.704979,9.783643,4.098835,-1.266981,-1.933208,4.508200,-4.085456,-0.800512,5.176441,-4.292575,-7.905320,0.922651,-2.744511,7.952188,3.306433,-4.969820,-6.029001,0.611790,5.127318,4.700583,-9.716405,-8.493305,2.946577,4.689405,1.578262,6.553681,-2.801054,3.190495,7.084898,-5.050289,0.017795,-1.555511,3.526696,-1.251916,1.098897,-3.546069,-6.069851,1.370141,6.845852,-1.820710,-2.040568,-3.847415,-6.603817,1.186259,1.837828,6.455825,0.712406,-8.590756,4.765398,0.481450,3.708580,-1.045602,-6.423718,4.424651,-5.296620,8.816118,-1.168244,-4.899613,0.860466,-2.442238,1.784557,-2.422785,8.204775,1.466089,7.626485,0.908793,2.961755,-0.353088,5.954721,0.888777,-5.964207,2.892421,9.442278,9.167882,6.858180,1.787417,5.893864,8.162440,-6.493342,0.449131,1.916067,-7.306662,9.070706,6.687378,4.526889,-7.539636,8.949822,-3.962662,7.633674,7.067985,8.561737,-2.335972,-0.963064,8.259304,-0.916494,-3.163741,6.050186,-8.919977,-5.438076,-5.399940,3.798535,7.387888,-9.469267,2.617661,4.912501,-6.476265,7.503709,-0.507812,6.102988,-8.035784,-6.651793,1.926137,-9.762990,-2.999104,9.359840,-1.767841,-2.584924,5.891935,1.807893,-5.134727,-8.350093,0.282296,7.986851,1.751359,5.471897,5.681211,0.057315,4.796521,-6.366893,-4.143955,-4.477758,-8.127361,-3.700653,1.601023,-2.943173,-0.456482,5.872895,-7.955936,7.004263,6.805800,-2.403107,4.951199,1.749725,1.437200,-1.640376,-5.420070,-1.622160,3.706665,-1.195899,-1.354036,9.646011,7.036799,-4.042608,2.862874,-9.406925,-6.953393,3.587182,-6.094434,-2.727470,6.881051,8.222180,-6.481896,-5.251303,-9.866340,-8.076288,-7.609803,8.435308,-2.493449,8.611921,-0.932129,-1.872625,-7.549343,-6.124972,7.839101,-4.774250,7.534722,-1.293577,0.125999,-2.223670,6.945836,-5.442313,-3.829689,-8.462089,6.569028,-3.011354,2.868537,-9.313468,6.917740,-8.615993,-7.719526,9.394617,-0.505499,8.422288,-6.800100,0.823441,-1.557367,1.523979,6.013947,-9.943536,-6.764818,-1.376145,3.553255,6.526108,3.004613,2.359475,5.065944,-5.436433,-5.190502,4.733757,8.474986,8.190006,1.323574,-3.795577,-9.656732,7.904746,4.636172,-2.057060,6.255811,6.553706,0.043163,-2.148326,3.053853,-1.163486,-8.746193,6.265396,-2.689149,1.928238,9.231621,-3.990528,-8.966794,-7.988586,-4.144416,0.825372,9.802317,-0.399430,8.175851,9.217445,8.870438,1.336605,9.223903,0.110771,3.948951,8.249061,-2.759441,-2.793052,-9.631449,9.838821,9.887576,-7.121355,6.723317,7.542661,6.625889,-2.830632,-7.352048,-8.443704,-2.574704,1.517011,-6.499270,-9.002065,-1.091405,-1.679238,-8.452390,1.151764,-5.179246,-1.949485,8.572377,-7.537395,-3.632735,9.565680,-4.078392,-9.116329,-7.416551,-0.126519,6.098606,3.156001,2.145449,-2.643292,2.377029,9.735275,4.080670,-7.900603,3.621598,5.422987,1.343815,-8.745265,-4.833976,-1.013671,-5.200303,9.955626,9.348977,-5.093690,-4.609113,-3.013451,-0.625487,8.611744,4.054687,-2.460490,0.460975,-7.032588,8.205474,-1.020203,-7.849303,-8.187901,-2.552734,-7.087292,-0.711291,-4.664518,5.511617,5.169355,0.475961,4.301370,-7.649987,9.057256,1.639963,-3.211324,1.294244,-7.422311,2.431731,-1.865142,-8.075546,5.613122,4.039816,-6.558589,1.246657,1.757864,-4.266618,2.374694,-0.834392,-4.560743,4.016208,-0.988428,-0.535974,-3.707247,5.787081,1.697963,5.610729,9.053031,-4.005519,9.784244,0.570512,-0.489245,9.762399,-1.080875,4.150408,3.588258,3.168614,4.052167,-7.273869,8.117469,-2.823629,6.998072,7.001088,1.515904,-3.706651,2.229682,1.507488,-1.369693,-5.536207,-3.064685,6.896087,-9.105203,-9.376909,-0.049997,8.686065,-1.570710,-2.189354,9.167183,-5.362433,-7.199382,8.975855,-3.326540,9.421207,3.937016,2.250235,3.693061,3.120310,5.291505,6.780321,-0.619636,4.891887,1.612558,-4.518880,-9.731894,5.165755,-9.760569,-5.324159,6.181599,1.444374,1.443001,-6.829032,4.950639,-9.374789,1.817444,1.151598,-0.588268,7.296893,-1.795730,-1.553629,-7.003612,0.170962,-8.617772,-0.390126,-6.681676,-7.713841,-0.783847,-6.828568,-5.764706,9.648738,9.502571,6.780114,4.749691,5.573452,8.799048,-8.114072,6.364457,-1.570050,-5.541125,2.160549,-5.491935,-6.144149,-8.514984], dtype = "float32")#candidate|627|(528,)|const|float32
call_626 = func_339_call(relay.reshape(const_627.astype('float32'), [12, 11, 4]))
call_628 = func_339_call(relay.reshape(const_627.astype('float32'), [12, 11, 4]))
func_339_call = mod.get_global_var('func_339')
func_342_call = mutated_mod.get_global_var('func_342')
call_635 = func_339_call(relay.reshape(const_627.astype('float32'), [12, 11, 4]))
call_636 = func_339_call(relay.reshape(const_627.astype('float32'), [12, 11, 4]))
func_339_call = mod.get_global_var('func_339')
func_342_call = mutated_mod.get_global_var('func_342')
call_655 = func_339_call(relay.reshape(call_626.astype('float32'), [12, 11, 4]))
call_656 = func_339_call(relay.reshape(call_626.astype('float32'), [12, 11, 4]))
output = relay.Tuple([bop_616,call_626,const_627,call_635,call_655,])
output2 = relay.Tuple([bop_616,call_628,const_627,call_636,call_656,])
func_666 = relay.Function([var_614,var_615,], output)
mod['func_666'] = func_666
mod = relay.transform.InferType()(mod)
mutated_mod['func_666'] = func_666
mutated_mod = relay.transform.InferType()(mutated_mod)
func_666_call = mutated_mod.get_global_var('func_666')
var_668 = relay.var("var_668", dtype = "uint16", shape = (5, 4, 9))#candidate|668|(5, 4, 9)|var|uint16
var_669 = relay.var("var_669", dtype = "uint16", shape = (5, 4, 9))#candidate|669|(5, 4, 9)|var|uint16
call_667 = func_666_call(var_668,var_669,)
output = call_667
func_670 = relay.Function([var_668,var_669,], output)
mutated_mod['func_670'] = func_670
mutated_mod = relay.transform.InferType()(mutated_mod)
const_851 = relay.const([[[2.166455,9.950467,5.728160,5.129297,0.353249,-1.437783,-6.338499,-5.297662,0.127507,2.908424],[-7.481122,8.337896,-1.792723,-9.170537,6.306647,-3.409964,6.913124,-9.733450,-8.644733,-4.444928],[-6.199503,-5.204999,-9.222358,-9.174364,-5.544767,-5.804538,1.890029,8.166713,1.096985,-5.578285],[4.003252,-6.979005,6.209836,5.472414,-8.680597,1.932877,8.946506,2.969838,-6.154308,5.458918],[1.468981,7.969364,7.297909,-9.607813,6.560994,9.807907,-2.924447,0.289302,-2.777285,1.085082],[-0.652401,5.843298,8.788636,-4.836285,5.028672,-4.677600,4.195346,2.033439,-8.900015,-1.604879],[1.351750,1.950011,0.541480,5.078438,9.076013,-2.282986,2.883947,1.237968,-0.506859,1.122230],[8.842827,-4.420622,4.060131,7.697620,8.813442,3.925031,0.018911,-4.710564,-0.738419,6.130561],[1.561279,2.165945,4.141582,9.948414,-6.339798,8.602576,-3.956764,3.343940,-7.930157,3.881389],[-4.617249,-5.768687,6.617270,-4.591253,-3.672351,-6.411448,7.024251,-8.058494,-1.708080,-1.567073],[-8.545959,0.675154,9.849800,5.199295,3.828024,7.090945,0.050985,-2.574777,9.206450,-1.952949],[-6.613004,1.680166,5.879035,-9.111601,3.170210,-4.216048,1.479444,-6.052598,-4.687891,-8.137198],[-1.088140,5.143524,5.569106,1.410462,-5.686646,-9.740283,-4.391045,-4.006677,8.808925,2.781147],[2.793663,2.919683,7.702576,9.122792,7.286803,-8.704453,-3.343112,4.422525,1.935886,-8.845260]],[[2.529663,-9.656770,-1.544670,8.167351,2.571423,-4.765576,-1.853265,2.465657,6.109146,-0.909151],[-6.379599,-9.828678,-3.210243,-4.157069,-2.269336,-5.905911,4.667294,0.388965,1.486481,-7.090953],[-6.289444,-4.844985,-9.701797,-0.157442,-3.842870,-3.556659,3.790360,4.401510,-2.891555,9.816487],[-0.439064,-4.795203,-8.455282,9.693127,-4.102552,9.310650,-3.762131,-3.103026,0.387120,-1.370352],[5.170869,7.954731,-5.579697,-4.357074,-1.394072,2.230393,7.927675,0.737176,-0.379932,-6.531649],[-0.053566,7.713402,0.069226,1.270485,-6.344885,-9.102374,-7.035527,9.383561,6.791833,6.969826],[4.191444,-0.155525,4.291637,2.218500,5.975291,-8.076122,9.816449,-1.008679,4.203647,7.907040],[-0.988312,4.779426,2.009243,6.654216,3.510967,5.034602,2.330448,0.476375,2.353805,-0.337712],[-8.734454,-7.241630,-1.174581,-9.302386,-0.948317,-7.017061,-3.890626,5.046432,-4.790681,-8.563948],[9.906715,-8.271257,3.848901,7.611167,-8.360571,2.859458,1.083328,-8.810246,6.828830,7.341776],[5.038867,-6.375776,-1.575820,2.476436,-2.009368,-5.496938,4.490574,-3.695829,-7.980032,7.484127],[-4.746377,-9.323253,-1.546465,2.740300,8.437133,8.873543,-0.845763,-7.754977,2.702757,9.758630],[2.159276,-9.360026,0.341553,-7.424868,-0.936728,-7.475749,-6.098539,-6.154270,-3.859820,-4.770838],[6.559015,-5.957447,0.659675,-5.368237,-8.860647,-4.706898,6.734155,3.719648,-5.214691,-2.306694]],[[8.118827,5.020990,1.542261,3.257635,6.224112,-5.289267,4.206742,5.658475,4.258013,-2.530197],[4.829349,-5.013617,9.379258,2.790057,1.873991,-5.057173,7.151700,-0.094480,-2.111725,-2.911671],[-7.285056,-9.223840,5.534996,-4.792431,6.768695,-0.130398,-9.621774,0.788110,-0.806436,7.147297],[-4.956134,1.097873,7.210614,3.737301,1.549786,9.665289,-3.596249,2.752344,8.520419,-5.107148],[-9.282307,-8.466674,4.731316,-7.811039,-1.971199,9.881538,-0.854417,-5.823979,8.727479,9.541692],[5.803588,-7.313844,-1.415582,5.583393,2.107585,-1.505500,6.633936,-6.101499,-2.972901,-1.440969],[-0.409747,1.870983,-0.149598,-7.572838,2.283675,-6.151630,3.755336,-7.937780,5.254217,1.943554],[-7.942955,-5.242019,-5.817915,-9.327677,-4.569417,-1.270512,6.571378,8.378424,8.996818,4.797285],[0.985089,-3.126294,-9.611112,-1.624642,-6.756860,-3.316737,2.370894,-9.603086,-7.623632,-8.341113],[-3.120242,1.747225,-7.543072,3.577470,3.601181,3.175997,6.776999,3.019113,-4.367123,2.708177],[8.542215,1.858661,-2.649243,2.726103,0.939341,3.257782,-0.486243,5.202762,1.367762,-4.844872],[5.448555,5.353209,4.147689,-8.195754,-0.099824,4.616115,9.309766,-9.194677,-7.873446,-5.234166],[1.995206,8.851507,8.532527,7.910148,-7.909985,5.581985,4.452643,-1.076511,5.194334,-4.220729],[-3.136466,1.876787,7.797825,9.237366,3.580856,9.629890,-0.359101,-2.491964,6.489398,-5.973928]],[[-9.274622,1.101948,2.680450,-8.644482,-1.896917,-3.194844,-7.047635,-6.617606,-0.001748,-8.149339],[-7.354262,-6.988014,-1.223149,-3.307479,-1.659664,5.524064,-1.959447,-4.776537,-4.649527,-6.608802],[-2.997931,1.289382,-3.123814,-1.920078,-5.171497,9.340145,-7.414905,9.111874,-8.149848,-2.404922],[-2.446286,9.949082,-5.515929,-6.739941,4.261465,4.421137,-4.160537,-1.761494,-0.977569,4.703643],[1.709411,7.117207,-4.894881,9.522685,-0.512522,-0.594820,3.690871,0.228472,6.648047,1.363280],[-9.891196,-1.151796,6.828690,-5.537865,2.148001,-6.396669,-1.028378,-3.749543,-5.174123,0.947523],[0.570335,-4.551765,-5.981286,-0.553778,6.009148,-4.911632,-0.330496,-6.482482,9.650352,-3.959709],[-8.766058,-4.527737,-3.979357,-2.929707,-0.197974,-3.222809,6.234276,-5.675917,-4.476441,9.135097],[-0.078915,-3.721340,0.830197,3.904523,1.866292,9.469545,-5.058804,-0.367763,4.802545,-8.008557],[-9.184805,9.648884,9.143765,1.345528,7.790754,3.733516,-4.202588,-1.259569,5.011740,4.991122],[5.064825,-8.655856,-3.305064,8.186529,4.617425,0.408527,-4.549287,6.421092,-5.307798,4.742882],[-1.157001,-3.720772,-5.091179,-2.630702,-9.013795,-3.076620,-7.944463,1.962900,9.473013,-4.078560],[-9.882068,6.852795,4.866854,-4.296299,8.558462,8.353338,4.061845,5.779773,-5.278951,1.851813],[9.063448,2.459156,-6.287739,-9.121573,1.925665,5.590242,-1.222755,-6.639909,0.727816,5.879711]],[[-3.787509,-3.545932,-9.734148,-5.515364,2.569573,6.711181,3.268300,5.731455,-7.304202,-9.867884],[-0.927643,1.115523,-5.590959,-2.350040,2.563537,-8.679844,-7.539994,3.663481,-8.377398,-6.520600],[5.946302,-0.761524,-6.377460,-1.028400,8.237237,-2.011177,-4.688417,-2.156490,4.027485,1.432158],[7.389458,-1.548914,-3.401970,-5.289036,2.034279,0.151673,4.277226,-0.073468,2.146797,-2.588563],[4.900534,-5.493442,-3.730078,-0.714711,-7.392467,-2.715686,1.003475,1.249454,-5.940744,7.545477],[-3.726334,-8.018572,-3.821108,9.291351,-3.581791,1.631293,-8.356009,9.519146,-3.001752,-2.479594],[6.196262,-4.131083,-5.697940,4.108238,-7.353919,-9.968136,3.138096,-4.573433,9.346952,3.026186],[6.545606,0.259650,-7.457984,-9.012104,-9.386633,3.670051,-6.500413,2.597730,-7.917325,0.612732],[0.796302,3.337016,7.897263,-9.242231,-5.493536,-0.941238,-2.783654,5.204530,-0.266873,-2.526481],[5.390808,3.555592,4.953924,-9.488556,0.283573,-0.958290,4.273327,4.472334,3.469532,-7.602479],[3.790636,1.709949,-7.370845,-3.509690,2.749219,-1.910563,8.974105,-4.653483,-5.914959,-2.441927],[-4.984256,-6.956435,-5.539628,-9.346666,1.597023,8.798497,5.757752,7.560727,-5.186244,5.484984],[-3.158240,-6.409316,1.096221,-1.890906,6.445118,7.092979,-2.455952,1.599726,4.043254,-7.589956],[-1.244969,7.665949,7.501018,-1.445285,-2.791858,7.303412,2.832292,-3.573758,-6.969539,-5.098247]],[[1.659556,6.706045,7.461487,6.928029,2.659424,9.095756,7.518891,4.558789,5.926059,-3.765058],[9.469846,-1.384107,5.440688,9.817708,-4.985156,4.225664,4.706265,8.742806,-5.603529,9.648633],[-8.155746,3.641747,2.664872,-3.466987,-1.466113,5.975645,-0.675067,-8.397610,-1.865109,8.030285],[7.585827,4.110812,-6.233993,4.528558,4.108949,-7.090280,-2.018384,9.068820,-0.404737,-9.672900],[4.626579,1.399155,-1.938586,9.925257,4.326114,6.119155,-1.781179,-1.709501,1.839223,4.721770],[-5.548954,-7.299946,6.444268,4.755382,-1.906841,1.550436,9.707547,6.261605,-0.678348,-5.245669],[-0.008377,5.706938,-0.525162,9.946462,4.948043,-7.775234,-7.058987,-6.220126,5.198914,6.092009],[-2.093881,9.690730,7.597961,5.611046,8.864946,-0.093565,7.081538,-1.104502,5.970541,1.160338],[-7.660322,-8.635644,-6.275394,4.282799,-4.658568,3.668520,7.717687,-1.973401,-8.372699,-1.185994],[-7.630396,6.393369,-8.712800,1.862789,1.771985,3.439716,1.112569,-5.826095,-7.436961,3.991619],[-1.408912,4.110471,9.217824,1.096306,1.533498,6.089977,-1.130466,8.981781,0.863183,-6.981668],[4.352438,-5.991812,4.873343,5.844366,-2.140060,9.658851,4.949252,-7.247123,-4.732906,-6.450783],[-7.281312,3.218271,-1.273372,9.806341,-0.627678,-6.035194,1.154876,-1.175809,6.241272,2.694071],[-1.663698,2.160378,0.068496,-6.317838,9.254474,-9.094858,-3.068167,-6.817513,-0.029567,-4.873423]],[[6.163669,3.862637,-2.247598,5.789954,4.746206,3.962015,4.102577,8.963944,5.438446,1.878469],[1.645211,-8.810318,1.250969,-1.496204,-8.189308,-7.090799,-7.227172,0.458965,8.669456,-8.866989],[3.788808,-8.791179,-8.088585,8.810113,5.831626,-0.001954,-1.114655,1.902073,0.289067,-8.405155],[-1.035402,4.295473,-5.420764,2.420561,-5.262978,-1.337523,-7.679327,-9.907239,-8.969380,-1.953489],[-7.670425,-0.664907,6.481613,8.093433,-1.966916,-1.624810,-7.849095,6.660078,-5.455136,3.916641],[-2.682433,-1.961389,-6.870548,-0.711343,5.272351,4.040129,9.923422,-1.954364,6.150681,-7.871638],[3.839830,-4.655768,-2.176453,-5.372661,6.585309,0.349638,2.801472,-3.868141,8.819812,2.425162],[0.639998,-6.132863,-7.142154,7.545735,-4.794513,6.228868,-8.785609,-0.183285,9.927509,-9.250487],[-1.568248,8.035199,3.495356,2.280927,-3.413029,2.233450,2.845575,-9.865103,7.746548,3.135853],[5.314811,5.339954,0.209312,8.922528,2.810953,3.757189,5.775630,8.833810,-7.297602,0.861141],[7.633958,-1.807929,9.536957,5.208237,-3.414633,-2.164962,6.197944,3.963073,6.106891,-7.048114],[-1.801484,-3.428774,-0.621919,5.078890,6.104693,6.894823,3.851728,5.356064,-8.646530,1.481782],[-0.044237,0.862573,-4.705338,-4.669703,8.460282,-0.127127,-3.934124,9.873512,-3.689859,6.851629],[-2.898312,9.441002,-7.627157,-5.843483,1.147185,0.267272,6.146161,7.416400,6.736744,-6.850494]],[[-4.145743,5.609334,3.590662,2.298444,4.147231,3.920937,2.377794,2.913769,-7.684920,9.032712],[-1.153524,5.083604,5.754859,9.674520,-7.173651,3.188706,-0.667582,0.284335,0.135649,7.769906],[4.138154,-3.167223,8.248569,-7.204152,4.796175,5.916874,-7.755466,-8.632075,-9.035083,-0.993808],[4.086866,4.286519,-2.124497,5.893141,-5.161621,-0.503783,-5.871694,-8.048656,5.074583,0.525276],[-5.245609,-5.254669,0.209243,-7.369483,-4.710691,-6.734578,-3.895195,6.851245,-1.067747,0.872570],[1.233547,-6.401775,-1.724364,-0.670688,9.130479,4.243000,-8.221115,-8.760533,-4.222861,5.663899],[8.819827,-1.104276,-2.356030,9.883476,-6.029870,1.548463,-3.621759,9.409497,-9.188498,-9.436729],[3.836142,-2.199374,3.192546,8.342381,8.282745,-1.351325,-1.083186,1.893606,-7.259559,3.075761],[5.330149,8.728657,-8.717192,-7.319826,-5.817352,-4.835455,-8.945607,9.096573,0.808903,9.316090],[-9.987005,-5.681524,-8.573812,8.406286,-0.397628,-0.184800,0.827503,3.792014,-8.616513,-1.608494],[1.298069,3.597409,8.756193,2.748294,3.257155,-7.241013,4.839816,6.627436,-0.842145,-0.820874],[5.651132,-8.179448,-0.406252,4.100231,3.877808,9.894028,-3.186155,7.808139,-6.644017,7.689906],[7.888707,6.705282,-2.216482,0.313288,5.655227,4.489328,-3.394402,1.662072,5.635338,3.411755],[-9.746123,8.041771,7.415617,4.276512,-8.472225,-7.767759,-2.422938,-4.419607,-9.951035,5.458919]],[[3.723499,-6.229383,-5.848623,0.593327,-3.147636,-0.169278,4.946719,-4.120279,-3.679292,-4.554546],[-8.482427,9.775626,-1.913863,0.753855,3.000623,-6.955024,2.005306,-0.280045,-8.519463,5.562204],[-5.061865,-3.247181,-4.697827,7.945315,-7.552438,9.167138,-9.768259,9.474305,-1.682366,3.099489],[5.899330,-9.274779,-3.204969,-5.649472,-4.468459,-0.265801,9.962477,7.567687,1.956673,5.860867],[-6.294798,-7.276165,1.826186,-9.332062,-7.412094,3.473195,7.174146,-3.053738,-7.097901,3.282704],[-6.283260,6.586627,-0.280719,8.244188,8.005637,0.753376,7.908569,-4.195855,9.373515,-8.861693],[-6.231947,2.534003,-2.506285,-7.779812,-2.053724,2.881413,8.855966,-8.715844,7.782231,2.807524],[-7.430648,4.822713,-9.944960,-4.965639,-9.122567,9.917879,-5.522757,-9.244202,-7.495228,0.811004],[-1.929791,3.064335,-8.615578,1.791851,-5.408970,-2.357995,0.881185,-2.929563,-5.883278,7.289068],[-1.561595,5.045286,1.097580,0.480675,-5.671109,-1.608336,3.559071,-5.982368,-2.280929,-4.606470],[-2.243099,6.156541,-4.761923,4.536018,7.354503,9.845180,9.165360,-7.174858,-1.044278,-7.012649],[1.669931,-3.314585,7.435508,-9.803580,-4.253053,-1.000020,6.559989,2.477712,1.176664,-3.064102],[9.905061,-6.853462,6.529742,-3.939130,-9.333718,-2.081303,8.071842,7.812373,-0.632890,-8.894404],[-9.530387,2.886609,2.902281,3.651650,-3.654309,4.265769,2.791696,-7.086784,-4.687477,-9.882891]],[[-1.788710,-2.645457,8.325647,-5.875989,8.003404,4.562677,8.832129,-8.160427,7.313736,6.515027],[0.517705,5.965841,1.951232,3.222796,-0.064649,-7.178722,6.596143,0.071524,-5.733883,-1.674437],[-3.653732,3.764555,-3.907788,-2.214560,1.472064,1.787088,-8.839795,4.490898,8.026101,-9.510871],[2.246610,-6.464436,1.939165,3.588470,6.219236,-5.136914,6.981916,3.259311,4.563862,7.986769],[5.977413,0.213951,-9.094008,2.682960,-0.018501,3.262834,0.317070,-5.372298,7.604302,-6.604570],[7.582291,4.537891,8.160817,-5.819374,-1.222839,7.720868,8.640534,-3.003943,-1.159394,4.078038],[3.132561,-6.714700,-6.810609,7.916629,-0.638648,-2.396096,-5.912742,0.976609,-4.288900,-1.569959],[1.775718,-8.995791,9.777704,-1.980175,4.493367,-7.697787,9.364075,2.813916,9.023967,7.689610],[-2.171980,1.633331,8.344403,-0.852293,-8.364101,8.004527,8.042664,-9.849113,-1.813116,-8.062880],[-2.606714,-3.122397,5.784353,6.691156,-0.949816,-9.243654,-3.753073,-6.035579,-9.289366,3.609871],[1.340093,4.750866,7.887495,8.342940,-0.442116,4.685450,-4.635363,-0.244775,6.678721,-2.976276],[7.582081,-1.769916,-8.748840,6.030056,-7.866656,-8.074593,3.580383,-4.774426,3.746043,-5.615855],[1.077735,6.816088,1.623246,6.336111,3.188192,6.828210,-9.133583,0.280964,-5.922266,-1.907667],[5.691825,-1.070990,-5.820568,4.498876,7.073313,4.898766,6.894641,-9.730761,5.941868,0.791196]],[[-0.189100,1.639298,8.240150,6.328285,5.471131,-7.826906,-9.372393,-0.593754,7.987632,2.074724],[5.147174,5.149502,4.518623,-5.129561,4.533199,5.770205,-0.825889,-2.480160,9.269144,6.714936],[9.516282,-7.757430,-1.689586,-3.608478,-1.396433,-0.398099,2.328373,9.417289,-8.581917,0.226071],[3.743440,1.833256,2.519724,8.906308,3.518084,9.286334,-6.863612,8.377167,-8.432860,-7.172930],[1.529484,2.298121,-3.272722,9.459775,-4.968564,-9.453430,5.307135,1.493636,-5.412012,-4.954071],[1.962471,-9.411304,6.976233,-4.593912,-8.712373,-6.530765,-8.536174,-8.048066,-7.778987,8.112271],[-9.972720,7.821953,6.917279,-1.277332,1.729557,1.607939,-3.664314,5.968469,6.499971,-4.939749],[-0.474352,1.234433,-1.546761,-6.161823,1.171705,6.518716,8.810321,-0.118928,5.935266,-2.208217],[1.915180,9.485968,-7.484686,6.436497,-4.672030,7.761166,-9.564808,7.250127,-5.593989,-6.375409],[7.088034,2.867819,-6.854009,0.700203,-4.234736,-2.815397,-9.010329,7.445955,-6.567146,-1.645296],[-0.360177,-3.011756,9.835955,4.590610,0.120366,0.923791,9.273201,5.004956,-1.871949,5.744751],[2.649632,-4.270615,7.364238,-7.365121,-6.994429,0.926127,-6.484138,-3.056835,3.197123,9.605772],[1.088600,-2.685438,1.768212,-4.183697,-5.779509,-3.306511,5.129886,3.054247,-1.097254,8.235645],[3.104229,-3.265291,-8.814238,8.710815,-8.307810,-1.071727,6.301870,2.923200,-0.190010,0.201784]],[[0.330839,-7.962542,-5.924007,-8.336316,2.167726,-9.018723,-1.938571,-3.005708,4.020865,-4.682030],[-4.627184,6.644559,5.036950,-0.546821,-6.302675,9.385724,0.582100,-4.880953,8.630140,5.914571],[-9.698886,4.660313,-7.652920,4.293040,0.237610,5.904938,-9.571648,-4.937298,3.776817,-5.765022],[-1.448760,-2.976571,7.255567,1.890982,3.217298,-0.367308,-0.621609,-0.211116,7.590253,-4.861684],[2.408436,9.289818,-8.281001,-2.876668,-3.040338,0.067974,-1.306518,3.178210,2.934946,-1.898821],[8.418698,-2.483314,0.040218,-0.716172,2.599396,6.367364,-6.459568,-7.267306,-3.519681,5.694449],[3.762789,3.103706,-9.564402,-7.644583,-4.206654,-6.184348,2.261976,7.779246,1.431622,0.605031],[0.799799,1.394465,3.450084,-5.311020,-3.813655,0.628099,2.056907,1.850082,4.932149,4.412223],[2.759901,5.443762,-1.776415,8.901654,-0.097471,-3.750893,6.776822,7.519804,-9.834405,6.318898],[3.515634,-5.191447,6.810697,-6.734513,9.693407,-6.764820,2.199451,6.243219,8.167676,7.953115],[-4.099808,9.179977,-9.014629,-0.534143,-8.914157,8.516748,-9.375342,-0.807914,-6.303253,-9.180955],[-9.408028,-5.334774,-6.595607,-9.131029,-7.923831,8.930390,3.011624,-9.967883,-7.195423,-1.577652],[-9.132714,-2.467695,-4.880439,1.560269,-9.434145,-2.554454,-0.337250,-8.707542,8.461765,-3.162039],[4.201336,-7.539671,-4.717568,-0.379980,3.903772,-4.400800,-9.786047,9.727942,2.463907,2.020695]],[[-6.336271,9.311864,-9.343660,-9.072006,-5.815669,7.319020,-8.729863,-2.137366,9.230393,7.534740],[-8.436107,-6.715341,8.701031,2.159628,-5.901036,-2.044781,-5.443988,-3.805280,1.284365,-6.676329],[8.401241,0.743916,9.809675,1.924342,-6.086389,-8.217282,-0.702286,-8.059044,-7.551002,-5.596883],[-4.724117,8.004009,-2.513593,-1.386257,-1.865022,7.223875,-9.578823,-3.965064,2.420265,-6.005137],[-8.856641,-1.754087,-1.093395,-9.094342,-0.767828,3.401835,3.650904,8.235427,-0.355033,-9.512726],[9.347482,2.229923,-7.947364,5.454006,2.961933,-9.965923,-4.168077,-4.251479,5.345190,9.071664],[8.542489,-2.783735,-4.058447,4.880796,7.045751,8.239944,4.562998,7.376717,-4.298584,5.278063],[-7.273954,-3.760865,-1.929848,8.596481,1.397786,9.930246,-1.900383,-6.422571,-2.150327,6.147893],[7.570070,-4.082818,6.260634,-5.057996,-9.750527,8.725875,0.250515,-1.833781,-4.577125,2.275878],[-6.194645,2.257245,4.920411,6.962264,9.548292,3.503013,-7.350633,8.637639,8.291198,1.304018],[-5.201108,7.713124,-3.668100,4.909406,6.648305,4.678365,-7.545826,-6.496109,-1.191618,6.629519],[8.465171,-2.204412,-4.395991,9.870982,2.295786,3.454214,-1.703618,-9.306576,-7.109715,2.395169],[-4.152171,-0.732944,7.626313,-6.335483,-7.877153,8.723846,2.909057,0.419394,-4.048585,4.614244],[-0.471547,7.929561,4.918098,4.320877,8.194177,-0.539607,4.222239,-3.105430,7.942456,-4.474011]],[[-4.133144,8.037122,6.457734,1.620506,-7.237019,-9.178059,-9.740344,7.418794,7.426119,2.920070],[7.526925,-0.604722,-9.647304,-1.095816,-0.237927,-5.689664,-3.309347,-5.998762,-7.649545,3.391999],[-0.426545,6.243145,2.468398,5.891280,-6.041488,-5.656815,-7.667295,-3.988421,4.564611,-6.984160],[-6.869381,4.304434,3.849880,-5.358051,9.689273,-4.569077,6.695606,-6.076507,-1.503906,8.239970],[6.775314,-2.841084,9.832030,-5.290596,4.332203,-3.579893,4.825122,6.605188,8.721269,7.900647],[5.213697,-2.744985,6.918126,-0.880257,-1.544039,-3.420551,6.772929,3.984285,-0.808769,7.481671],[8.834846,5.498779,2.951027,3.547245,-9.294714,-8.264102,-1.567548,2.839984,3.447398,3.439243],[9.278329,6.839162,-1.311634,6.359122,2.308250,1.764048,-5.146156,1.524039,4.709750,-2.040626],[8.377000,6.198651,-5.859579,-5.521994,-2.516340,4.688603,6.606456,-1.207605,-9.305105,-5.695690],[6.476690,-6.629890,-8.696179,5.402582,-1.796337,-3.401164,-6.644169,1.887997,-6.350626,0.631842],[9.811872,-3.235916,2.603975,-6.076700,4.835894,7.146989,-2.202883,-5.550258,-6.387022,-3.682852],[-0.507871,-9.946557,0.349347,6.637245,7.232396,-8.070792,2.504824,-7.167953,-4.411367,-1.061321],[4.744897,-8.883470,9.373783,1.447554,-9.539804,-9.338333,-8.945242,-5.516700,-5.266188,2.818876],[-1.900725,-5.118067,-1.451151,-9.591976,-5.597240,-5.337613,7.836292,2.953604,-1.785745,-6.611419]]], dtype = "float64")#candidate|851|(14, 14, 10)|const|float64
uop_852 = relay.log(const_851.astype('float64')) # shape=(14, 14, 10)
func_339_call = mod.get_global_var('func_339')
func_342_call = mutated_mod.get_global_var('func_342')
const_864 = relay.const([-8.003630,7.328738,0.369600,1.485017,-4.161703,3.393544,-6.761352,-5.230297,5.247198,-2.895300,0.523645,-4.029203,6.981754,9.402027,-7.839192,6.622647,-0.926567,-1.178281,4.940088,6.965233,4.161843,-6.173441,5.561003,4.157338,-5.823578,-0.197515,4.949822,-6.648882,2.638423,-9.774989,-8.613087,9.689294,-7.881348,-0.367528,1.635162,6.051560,8.188627,-6.767911,-2.651323,1.325043,0.803453,-3.079603,-4.993858,7.406943,-2.452633,7.350246,-4.510021,1.628436,-9.813885,-8.598187,-3.315263,-5.881494,8.523590,-5.179067,9.995090,-0.392179,-2.488449,7.523844,6.218548,-6.499156,-7.269747,-2.343675,-2.533709,6.298862,-1.415333,-3.914063,3.395524,-4.136510,-7.698900,-6.518150,-7.410395,-2.526009,7.775662,1.510485,3.537845,3.168512,1.054412,-5.110053,5.880319,-0.874953,8.364455,-0.098520,-9.438104,9.854412,-3.250319,-1.695347,5.372176,8.544287,-1.761025,4.172417,-1.022682,-2.314173,6.404129,-3.028080,-3.510117,-2.447348,2.307957,2.159902,1.066050,-1.830580,-6.753307,-3.471198,-8.132162,1.662910,-9.865577,-7.512239,5.507396,-6.694672,8.625904,3.705638,5.087987,4.247643,6.499163,-9.971885,9.897233,-1.258694,6.262969,6.485255,-9.101801,9.137962,-2.731259,0.268071,-7.621314,-8.496673,-0.975966,6.748236,5.949981,8.221119,7.665636,5.189579,-5.450682,2.662979,-0.687532,7.787550,9.205985,8.497140,-0.968975,9.601113,-0.816403,-9.386053,1.937919,-4.699208,-0.167580,7.202988,-3.367764,8.146282,-0.646232,-3.934637,3.305059,7.903824,-0.989097,-4.570172,-0.193730,2.876377,5.287219,9.513871,-6.358940,4.259614,6.832328,-8.771380,6.473397,8.560425,-3.624269,-9.026697,9.893556,-3.675566,-2.474400,3.842125,-5.572195,2.827798,-3.328207,2.732405,8.942586,-9.036522,4.466900,-7.929782,-0.215220,9.007649,4.276975,-7.293899,3.976820,7.513888,-2.410841,-0.774508,1.095014,-6.084775,8.738790,-7.239730,1.876468,9.989869,-4.202893,1.338986,1.938573,6.241758,1.343119,-3.053360,8.267020,-7.137042,-5.278853,-6.624012,2.788177,6.029447,-0.937898,9.745250,-7.967776,0.557722,-3.122263,9.499923,9.580007,-5.727388,7.142355,5.166862,-4.307290,-5.578900,8.692403,5.866236,0.744942,7.360965,-8.195377,0.777003,3.501017,2.079052,-5.129468,-4.113182,-1.559462,-2.572777,7.061980,-8.288902,5.998950,-7.477719,3.029090,0.495630,-0.771177,7.406939,5.235300,-5.402696,1.252120,-4.940360,-4.786225,0.399435,-3.192646,-8.003467,5.789186,2.914927,5.589162,1.985486,5.331887,-2.597419,3.177264,5.883675,-5.363492,-8.579377,7.669892,4.539280,8.964202,-3.421307,-5.940540,1.874686,9.934454,4.249994,-1.380832,-2.729740,0.241219,8.227218,-4.073588,-3.346123,-2.564842,-9.361545,0.216184,-6.414822,-9.525784,-8.837627,8.002268,-1.604523,6.833264,-9.644441,5.937943,7.543610,5.033982,8.899865,1.217091,-9.168281,-2.611804,-7.348007,7.932312,-1.979570,2.700617,-9.958027,-4.670705,-9.870401,-2.810874,3.159907,2.678940,3.123179,-1.948779,-5.071627,-0.071006,7.150836,3.690001,-4.796866,-6.574829,-6.477671,-1.263057,6.531440,7.288383,-4.254188,-1.166772,3.959480,-5.529281,-2.424535,-5.836670,8.907728,6.791241,2.875034,-9.540392,6.574167,3.378627,-6.805084,1.704862,-7.319833,0.847029,-7.364811,4.745147,2.144816,-8.956451,-4.696784,-1.265285,3.627713,-2.613333,-2.806376,9.962994,-8.743498,2.583198,-4.208621,-1.504432,-7.320774,0.476569,7.010485,-6.341271,-0.476019,-4.150059,0.942799,-8.225244,-9.040981,-1.650865,8.615224,9.778637,-6.951401,5.760993,9.571426,5.383567,3.348244,-4.809201,6.719196,-4.721383,-8.918548,-6.632911,0.827734,-5.832894,-7.023859,5.071916,-8.118470,3.840469,2.649705,5.257267,-0.142574,-8.059082,2.050979,-8.561018,-0.472602,5.845000,2.477682,-9.984174,-3.981486,-8.641295,2.852116,7.729110,-0.965238,-1.413291,2.296915,-6.907051,7.047569,3.545654,-2.161809,4.541146,-5.594297,2.272874,9.940150,7.788288,-0.277801,-4.855525,7.046783,-8.745636,-9.019557,6.553086,-0.788396,8.961967,1.380534,3.553247,-2.793856,-0.377886,2.236543,-6.084913,2.372363,-3.442053,6.924545,-0.238786,-6.236374,9.331578,4.875959,-7.598142,-1.741439,3.016710,4.802149,8.893255,-2.933787,-6.631981,8.999235,-7.954583,-9.975581,4.263876,3.958095,-3.124267,-7.253677,-6.812087,5.969881,2.735175,-0.708643,7.712441,5.821805,7.882562,-6.942249,5.852193,-6.791057,-0.706021,6.145912,-4.448045,8.745465,-5.491006,-0.540052,-5.482602,-7.546877,-6.211842,-2.291147,-7.338491,-0.813402,7.480029,2.137459,7.352306,-9.178770,5.271405,7.396973,-9.250002,-7.858667,-6.326955,1.148478,-9.793243,-9.068196,-1.589117,-5.485724,4.220239,-1.614283,1.763000,8.232007,6.020927,9.836438,5.470540,2.417089,8.499833,7.738468,-1.872506,-4.716568,-5.270719,6.495153,-2.372150,2.906644,7.946240,-7.048776,4.937606,9.072004,-2.805415,8.691694,2.372471,5.602320,3.316584,-5.529638,-5.761139,-7.171108,0.493243,6.500029,-6.328119,6.077345,8.012415,-8.211821,-3.116597,8.351987,-0.617543,-0.837132,0.215677,0.574241,-4.525698,3.741608,-6.676640,5.472024,9.026015,1.739172,7.585023,8.649709,1.805415,-7.837524,6.979061,-2.396438,-1.791141,7.954362,-4.333843,-2.102803,-0.345143,7.125978,-4.234645,3.476297,-9.896305,6.192713,1.306559,-0.874383,-7.830365,-5.155240,-9.124413,-5.102711], dtype = "float32")#candidate|864|(528,)|const|float32
call_863 = func_339_call(relay.reshape(const_864.astype('float32'), [12, 11, 4]))
call_865 = func_339_call(relay.reshape(const_864.astype('float32'), [12, 11, 4]))
func_666_call = mod.get_global_var('func_666')
func_670_call = mutated_mod.get_global_var('func_670')
var_869 = relay.var("var_869", dtype = "uint16", shape = (180,))#candidate|869|(180,)|var|uint16
call_868 = relay.TupleGetItem(func_666_call(relay.reshape(var_869.astype('uint16'), [5, 4, 9]), relay.reshape(var_869.astype('uint16'), [5, 4, 9]), ), 2)
call_870 = relay.TupleGetItem(func_670_call(relay.reshape(var_869.astype('uint16'), [5, 4, 9]), relay.reshape(var_869.astype('uint16'), [5, 4, 9]), ), 2)
func_134_call = mod.get_global_var('func_134')
func_137_call = mutated_mod.get_global_var('func_137')
var_876 = relay.var("var_876", dtype = "int8", shape = ())#candidate|876|()|var|int8
const_877 = relay.const([-1,-10,3,3,1,-3,9,-1,2,-8,-7,-5,4,10,10,-3,2,3,-9,9,8,-2,-7,-8,9,1,-8,-1,-6,2,2,-9,1,2,-8,-1,-3,3,-6,-1,9,-2,-10,3,4,4,-1,2,6,-5,7,3,8,3,9,10,-6,6,7,-2,5,9,-10,1,7,10,-1,-5,9,3,-2,5,-9,-5,-4,-7,4,6,-7,10,2,-9,3,2,-9,-9,9,-10,8,-3,2,-1,8,-10,4,-10,-10,-1,-2,-4,-7,-4,8,5,9,6,9,-10,5,-3,-2,9,-3,-4,1,-8,10,7,7,-1,1,2,7,9,3,-4,5,6,4,-5,-7,-3,6,-4,1,1,-5,4,-6,5,-4,-6,-2,9,2,9,6,8,-4,-4,8,-9,-10,-6], dtype = "int8")#candidate|877|(154,)|const|int8
call_875 = relay.TupleGetItem(func_134_call(relay.reshape(var_876.astype('int8'), []), relay.reshape(const_877.astype('int8'), [14, 1, 11]), ), 0)
call_878 = relay.TupleGetItem(func_137_call(relay.reshape(var_876.astype('int8'), []), relay.reshape(const_877.astype('int8'), [14, 1, 11]), ), 0)
func_666_call = mod.get_global_var('func_666')
func_670_call = mutated_mod.get_global_var('func_670')
call_883 = relay.TupleGetItem(func_666_call(relay.reshape(var_869.astype('uint16'), [5, 4, 9]), relay.reshape(var_869.astype('uint16'), [5, 4, 9]), ), 1)
call_884 = relay.TupleGetItem(func_670_call(relay.reshape(var_869.astype('uint16'), [5, 4, 9]), relay.reshape(var_869.astype('uint16'), [5, 4, 9]), ), 1)
const_887 = relay.const([[[9.799391,-1.819278,-5.592434,-0.744523,-6.461861,2.766084,-0.762928,-9.024817,6.582553,-1.887819],[9.860888,-4.351473,-1.766193,9.443825,-3.371001,-2.303596,-1.418499,-4.250802,-0.425855,-7.803051],[9.291058,-7.314049,5.014133,8.364646,-0.255040,-2.029956,-4.756506,-9.816974,1.688080,-8.894242],[-7.223495,7.929632,6.177326,2.552945,-2.730789,-3.327722,1.408324,-9.761266,7.940069,9.381173],[6.361773,1.461661,5.675073,-2.600956,9.626017,-7.147370,6.858634,-8.982181,4.148532,8.380130],[2.057631,3.998802,-6.861407,6.310502,1.291661,4.986903,4.071801,-0.173536,-3.785015,3.819845],[3.606772,7.620560,-6.033223,1.404227,-6.960818,5.929213,-7.292531,-4.284360,-6.247576,-5.130924],[5.258160,-3.114924,6.894323,8.414524,-6.433544,7.800929,-3.381890,-7.709955,2.387059,-8.110184],[-3.152605,8.618047,6.107156,1.673711,-7.898528,8.388083,2.098640,-8.886059,4.029872,-2.432679],[-7.534595,6.146004,7.977665,4.573283,-1.649644,-5.619664,-8.566543,9.254285,1.707569,1.491109],[6.223706,7.702368,9.843539,6.478684,3.773094,-7.116549,6.058275,-0.197751,6.524435,0.788742],[-8.957987,9.781295,-4.972251,-0.027460,0.416276,3.741577,-9.791080,-2.890293,-6.249251,-0.363926],[4.635883,9.361636,8.519157,2.066715,-0.968326,-0.121199,-3.724810,1.206803,-1.060704,9.724887],[3.608108,-5.520900,3.398068,3.236917,-9.817926,-5.226276,-9.146260,4.786545,7.166550,6.864990]],[[2.006411,-9.989299,6.314939,-3.058469,4.880393,7.377835,-4.964495,1.672699,-8.777536,6.503891],[-0.774781,4.891401,-1.149692,-7.144402,7.320912,9.034307,8.934725,6.256152,1.826388,2.480552],[3.513206,7.883322,-4.402323,2.060744,-3.159746,-7.182579,-6.696415,5.652613,-4.921471,4.576073],[2.610256,-8.504109,-6.880749,5.439357,-6.730320,6.375046,-3.957062,2.804121,7.654647,3.699267],[-6.208653,-3.083158,2.865758,6.201474,-9.950400,-9.435310,3.008656,-9.000417,-4.179449,1.415202],[-6.469364,-1.904294,5.661051,-4.517217,-9.859173,-4.970570,2.697970,-0.847412,0.485374,-3.335771],[-9.871232,8.658396,6.587346,5.286656,-2.393696,-6.307145,0.028233,7.396771,3.721148,9.172468],[9.580933,-0.901341,4.546676,-6.671236,-8.603022,-4.614199,3.359988,-4.275693,2.773387,-8.615828],[-4.543397,0.664701,1.973008,-0.613898,-5.794074,-0.522605,-5.149287,-9.076282,5.407848,-8.721010],[8.536203,-0.205073,-4.648018,3.009534,9.217112,2.240240,8.736104,2.249543,7.735741,9.519558],[-2.194748,-5.202511,-4.950099,-6.824325,8.572229,9.165360,5.858063,1.111603,-6.144705,6.313478],[-1.208724,2.687659,7.554877,-2.774247,-7.779705,-4.994802,6.217534,8.282048,9.940865,-2.837206],[-4.726092,0.103360,6.276241,-1.725753,-3.089885,0.970875,-7.139475,-5.429419,-5.433511,1.478239],[-4.628228,5.506998,-8.806071,3.774405,-0.294866,-8.190935,3.819872,-0.718164,-4.869935,-4.885542]],[[-2.067549,6.565898,-2.455617,1.445577,-2.841884,8.830419,-5.681387,-2.402296,-4.607308,7.970419],[7.872130,3.950362,0.349842,-2.999339,-5.848185,-7.466430,-7.480557,-8.239424,0.668548,7.248332],[-8.154623,-2.098544,9.935537,8.586731,-1.995450,-2.465019,-7.287737,-4.036511,0.404313,0.286571],[1.465761,8.741918,3.593892,-6.885764,6.118613,-1.937073,5.516460,-6.673261,4.425574,-4.205106],[-4.241374,-0.275575,-5.115969,4.473139,4.858288,-0.499539,-0.312748,-6.829826,4.653217,0.361319],[6.918374,-5.637892,-8.998316,9.134415,-3.591993,-5.868540,8.847548,3.495639,5.396992,3.621836],[5.075702,-8.840081,6.906995,8.227860,3.146747,2.729745,-3.260804,4.918782,2.275370,-6.770000],[-7.616761,-4.820531,9.989361,-7.335452,-0.770120,3.456606,7.853817,-9.838161,4.458954,3.405281],[-5.472487,9.567630,-5.908497,3.282975,4.006355,9.900762,-6.254258,6.263531,5.835630,9.384160],[-6.181020,4.857758,-3.613903,-4.840565,6.151966,-4.834721,4.548515,-4.702248,8.961772,1.159299],[0.323696,-2.547846,-2.735881,-7.750028,6.537738,-8.781269,-9.432383,1.590502,0.160381,-3.683484],[8.251227,-4.618157,-0.509956,-7.594338,-3.404123,6.299185,-7.787943,-3.820315,0.955279,-5.690852],[-3.506733,-1.097916,-3.421678,2.497477,-5.528587,-0.681935,-7.294700,-9.655822,9.679448,-1.480857],[-6.527705,-4.132933,-0.743530,1.223636,6.652162,-1.629562,-4.432663,-2.854666,8.210200,-0.379298]],[[-1.885934,3.721507,1.207760,7.873979,6.726827,1.640689,0.029322,-1.216005,-9.350518,-0.763456],[-6.358389,8.115461,6.568072,7.408842,2.715820,-1.435315,7.538727,-4.427158,9.885854,6.091619],[-6.674673,-9.561902,-4.400556,1.598637,6.646068,-6.610849,-1.741018,-3.856848,-1.069545,-2.800482],[-2.856677,4.479448,6.254639,-2.596462,1.830473,5.651440,-8.514487,-7.173765,-6.122283,2.930074],[1.198892,3.123363,3.576424,3.680840,-4.385668,0.526458,1.316031,-3.876973,9.836030,1.512197],[-8.549340,-3.950022,9.139953,-4.761221,-9.304003,1.553996,6.153683,7.039912,-6.561565,-2.878847],[1.808669,6.638265,-0.749980,2.491594,0.801881,3.161079,8.196057,-3.916661,-1.928922,-9.702921],[3.096808,-8.216364,9.956000,2.120631,-4.384561,-4.615837,-9.962122,-0.438957,1.379431,-3.795603],[9.120138,-6.213167,5.458387,0.820145,3.451017,-0.081877,4.071112,-7.303055,-6.907521,-4.547322],[8.154690,-1.204023,7.154922,8.831484,-7.829321,6.605529,2.275326,-9.713475,-0.812801,-9.096395],[-6.435956,-4.481834,5.094751,-9.529007,8.943116,-5.237188,0.803444,-5.994573,-1.688367,4.215272],[4.799506,-7.315579,-6.098310,5.284332,-3.256062,1.408701,-0.745815,-7.793493,-8.848164,4.447153],[6.685777,-5.010030,3.018605,8.907611,-0.568021,-3.471821,1.066983,-7.124056,-8.819312,5.561977],[0.034962,5.455379,-1.205992,3.715104,-7.322163,-7.829555,5.374891,-7.248668,2.312610,-1.864217]],[[-5.024903,2.404009,0.975721,6.645635,8.240104,-6.576143,1.303989,-1.528539,0.794501,-4.672131],[3.906241,0.400318,-3.403700,8.851528,-3.257131,7.280316,-9.112391,-3.865292,5.600401,5.116142],[-0.262464,1.035115,0.800358,-2.235425,-8.796805,-0.021445,7.403530,-2.184008,7.758335,-9.580585],[4.719540,-3.223548,-5.921998,8.888081,4.058337,2.343313,-8.201272,5.063853,-3.397986,-9.748416],[3.624726,-1.410526,-7.608796,-5.872474,-8.494270,9.905245,-2.273397,-8.281378,1.356977,-1.136304],[-9.943304,-8.459147,9.810206,8.981365,4.214530,-4.870707,-7.218922,-3.360986,7.867349,4.267095],[8.904225,9.224172,-5.834563,-5.365896,2.394656,-3.041680,-8.773175,-1.785506,1.699621,-6.062200],[7.789365,4.927890,4.731377,-1.380588,-4.780155,4.850599,0.130982,1.979808,-8.435199,6.516397],[7.434218,6.677792,-1.652343,6.573879,8.400401,3.996011,-7.213316,8.246399,-0.772722,-5.456596],[8.703970,-1.477990,-2.315265,-7.062958,4.267869,-0.937368,-0.724468,9.841586,7.166811,-5.977896],[-6.916029,9.293611,-5.780650,-7.949342,-3.113388,5.509638,-9.387000,-8.589513,7.929368,7.373832],[-7.579292,2.439056,-1.151700,-1.720959,0.489221,-7.618206,-2.007391,-3.744346,-6.341338,1.728788],[9.259348,-6.035048,-9.910024,-0.694852,-1.795908,-0.552557,7.973199,9.468509,-6.473878,2.212545],[-5.346350,3.928812,9.340379,2.092236,6.563230,0.749871,4.564101,-4.474633,-4.147779,5.895277]],[[1.915134,-1.214796,-9.540999,-9.295379,9.807418,-3.373837,6.564456,-6.227883,-2.386343,1.351008],[-0.274750,-8.898151,-0.990372,7.023435,-4.260886,9.464586,-5.950598,-5.892805,4.737919,-8.976596],[1.710665,-2.252269,-8.684341,7.221888,-9.348799,-7.211708,9.915798,-2.906743,-7.977429,0.131894],[5.555297,-3.820860,-9.582486,-8.055287,2.182379,-3.963557,5.689750,1.444634,1.088078,-9.611526],[3.610812,-3.888809,-1.479852,9.593415,-2.890112,4.427410,6.762135,5.481773,-2.883821,-0.138891],[-5.102020,-8.645302,3.708341,-5.009126,8.431148,2.946073,0.628688,2.251955,-0.272299,-1.543662],[3.295505,-8.135297,1.809908,-6.267548,7.665633,2.280131,7.403075,-2.154249,-9.024187,8.531114],[8.893182,-8.775279,-2.057745,-1.379887,-2.304269,2.303393,-0.986556,2.078986,-2.226104,-6.175552],[-4.554744,6.783979,7.386982,-4.301704,-2.517653,0.525977,-3.096503,9.361281,-3.531726,-0.551451],[-0.672129,-8.642160,4.933766,2.294116,-8.470439,-0.782062,1.715940,-2.635614,8.778945,-1.112691],[5.619281,3.370186,-4.507562,-3.245105,5.175656,1.065132,0.119061,-4.345761,3.089112,-8.872365],[3.810461,-7.890642,-8.929595,-1.061306,-9.207893,-7.094249,-7.126096,5.274743,-0.005536,1.829812],[-6.179312,7.181347,7.350628,0.799621,7.699700,-4.168094,-4.416154,-0.539825,8.764663,-2.373899],[6.665781,2.348942,-4.659470,-8.759374,2.734960,-0.970708,5.346074,2.000468,-8.635877,4.984419]],[[-2.148645,-0.698800,4.351757,2.399560,2.708952,-8.600541,-9.305907,0.848651,-6.518368,8.326943],[9.197001,-2.329928,-1.051766,6.238526,-8.778291,-4.751126,-1.665377,7.256559,0.781863,4.315419],[-3.946177,-6.383134,2.778390,9.713599,0.996807,6.990201,8.255144,9.807311,4.520356,-4.642966],[-4.922252,-5.395797,0.279183,-5.947141,4.088646,-9.905714,7.622366,-7.809561,-6.019038,-6.934047],[8.767160,-3.269423,2.670362,-5.403393,6.565346,-5.801099,7.221288,-5.943577,-5.723529,-4.089232],[-8.931700,5.073419,9.865664,9.230677,-0.706234,3.630498,7.977693,-8.275805,-0.053035,-8.981366],[7.483736,1.475281,8.262095,1.289268,-1.436466,4.240752,-7.006702,-8.368948,2.978249,0.091184],[9.821883,4.991906,8.716536,-9.876868,-6.857054,4.598034,2.925061,-2.372141,-0.134135,5.399907],[0.375643,-9.185460,8.545102,4.137984,-8.832845,-0.027085,-0.462985,-2.872616,0.115777,7.705091],[6.707001,0.413033,6.080268,-0.116490,-5.527522,-3.031995,-3.962420,5.629358,3.348197,-9.945440],[-4.909706,3.347058,-9.011760,-0.695162,-8.070486,2.656227,-1.777465,2.238976,9.053879,7.704132],[9.037877,6.614018,-0.294185,5.968383,-5.547185,1.790040,4.600019,2.437604,3.491498,5.843425],[3.177345,2.397988,-6.810895,7.265716,-6.659710,7.777419,-1.740449,-9.210468,6.204432,-6.656952],[9.123001,-6.340824,-7.414740,3.892405,8.515043,-5.669305,8.404099,-7.719630,-5.040467,7.648496]],[[2.433134,-7.988887,-9.208076,-5.481017,-2.450025,7.489190,8.937965,-5.670661,7.921863,9.154853],[4.659039,6.620206,9.102322,-1.390697,2.594365,0.941333,-6.369395,-6.955341,-7.585644,-6.744389],[3.011629,-1.715545,-4.672769,-2.310997,-9.964640,-0.495188,1.470187,1.079009,-5.708831,-3.462088],[2.972327,-7.430249,2.349992,-4.709663,0.556884,2.664107,-0.429902,9.037112,-3.671674,-1.867558],[3.564644,-0.189053,-4.523944,-8.548426,9.277698,-9.199908,-8.314515,-8.391944,4.851571,2.045298],[-7.920723,5.041181,-7.059048,9.041874,6.452275,-4.104289,-0.388326,6.846707,-1.373896,8.576276],[6.214551,-9.890110,-2.789538,5.495390,-4.338539,6.946839,2.130259,5.722310,4.664783,6.451738],[5.451642,-8.223255,-0.358710,-6.860836,3.674371,7.194613,-6.025165,-7.038666,-2.686137,-4.681182],[-5.702645,5.030482,9.333700,7.175067,3.233512,5.892380,-1.721452,9.927247,0.980700,7.790476],[2.803242,0.837011,5.721706,5.965382,-7.463509,-1.582965,0.313573,-0.655064,-7.697375,4.976219],[-4.415105,-1.226859,-6.612004,-8.193489,-9.073635,-0.098926,-3.568791,2.302368,4.525701,2.235568],[-2.367376,-4.926104,-2.361129,-5.951478,2.672209,-1.102526,-9.211735,-6.040965,-7.795505,2.332672],[8.937917,0.953886,5.006985,6.789912,2.575256,-1.200971,-8.867552,2.100696,-4.993973,9.847164],[6.326784,6.979071,3.159783,1.842446,-8.440223,-3.908371,-4.177580,8.086017,-2.866972,2.196167]],[[-7.909277,6.546667,-6.788816,3.193416,1.015977,-4.825727,-8.719619,-0.505566,-1.631145,-8.366171],[-6.143137,-4.304619,-0.963883,9.920015,-5.779318,-3.670083,-8.904251,7.578874,-2.255010,3.024847],[1.347097,-8.457752,-9.689932,4.651456,-9.646169,2.557447,-3.251189,-0.669854,-7.442774,8.145482],[-7.356747,3.498117,-3.566480,5.672979,5.962252,-1.219679,9.025595,-3.277392,9.228040,-2.021124],[7.495192,5.285385,3.976064,-7.995104,5.918673,-6.295663,7.653248,-3.077791,-4.219232,-4.013958],[8.915732,-8.398531,-1.792688,-3.304315,5.871495,4.016077,-7.904080,-0.334056,-9.074196,6.634291],[5.666591,3.495910,0.387228,-2.342478,-7.509713,5.209959,1.493952,-1.428246,6.219459,1.808150],[3.095482,4.958506,0.868208,7.387494,2.690958,8.679589,-2.254477,4.521158,4.764949,3.375378],[0.605884,5.253691,-9.424043,-3.940717,-8.046872,-5.973241,-0.636188,3.231210,-3.589970,-3.791971],[-3.207958,-6.773499,-5.011726,-4.960975,6.156850,2.765006,9.625272,1.360352,-1.857670,1.220003],[0.378086,-7.480231,1.564091,-0.277527,-5.057328,3.095106,-7.540202,9.283182,-8.576411,-3.084541],[2.695609,-7.157447,-0.090919,2.929687,8.332121,4.963284,-2.488986,-0.275492,-3.164757,0.328290],[1.016722,5.180370,-6.536339,9.006789,-6.032492,-6.203653,1.457630,-9.483331,-8.384487,5.452700],[-6.034228,7.754265,-9.686337,6.659024,-5.768084,-7.475213,2.188004,1.246019,-3.031273,-7.266681]],[[7.049833,9.801616,5.428511,-0.867029,8.817053,1.934470,6.646921,-9.949718,3.433453,-4.076199],[1.547730,2.030739,-7.253812,-5.678986,9.620305,7.419365,-5.930405,-0.576239,7.771377,9.533803],[-1.972091,-2.776326,7.650581,3.524745,-8.760758,-0.788107,-7.584584,2.088561,5.741320,-8.420960],[-6.647185,9.103694,-7.039233,7.462204,-5.760735,-0.133151,3.695480,-4.956006,1.446879,8.104884],[5.493788,7.710242,-2.223475,-5.579738,7.349594,-6.846259,7.047101,-8.139647,6.350779,9.382170],[-6.555846,-9.488894,-3.625118,9.801960,1.199281,-6.495264,-6.912823,-7.805298,-8.526001,-6.208879],[4.171479,0.925391,-0.865511,-6.900323,7.286554,-3.874593,0.690999,-4.808072,5.572638,-2.674309],[-7.464846,-9.939119,-5.457387,7.470590,1.481179,-8.703836,6.130451,9.927770,7.186338,8.082186],[6.397877,0.049525,4.313298,4.265889,5.549192,8.775843,-1.856675,-5.345551,-5.371003,4.655136],[-4.001149,0.380738,5.463731,7.318999,-1.884103,-5.543319,-2.782827,2.226756,4.584595,9.171064],[-3.764787,-8.159801,-8.614185,5.577449,6.956256,-1.415388,1.312745,9.564064,2.838708,5.971880],[8.605753,2.046006,6.605914,8.601613,3.745301,2.113506,8.743888,-6.724365,6.521697,7.247504],[-3.971737,-6.815662,9.029170,6.227062,-9.220358,-5.089088,-5.214460,-4.298285,-9.542243,-1.662046],[-3.572679,2.126871,0.408204,9.927407,-4.583123,2.350086,-8.149184,-0.826692,1.221101,-3.678605]],[[-6.244780,-8.049957,1.518823,4.646736,-0.306978,0.300932,2.418546,5.601169,1.698449,8.610148],[3.036682,-4.663341,-5.057995,9.606611,-1.801087,-7.655996,-4.009747,4.079777,2.825017,-4.296715],[-6.289456,-5.553157,-4.834907,7.527538,-7.650344,0.194107,9.861749,0.544605,-1.572002,-6.219581],[9.474170,-1.123176,7.229993,0.367892,-3.081774,-3.968770,3.416712,-9.658510,-3.146077,1.044735],[2.986489,-5.373405,4.662444,-0.409294,-6.809235,-0.567218,7.628799,-5.393618,1.432638,7.173084],[5.582725,-5.875618,-6.881884,-2.320571,-5.586052,6.825497,2.287999,2.281621,-7.426387,-6.645345],[-8.076451,-3.720767,0.072845,-0.760920,-4.371243,-6.614626,1.094901,-9.479575,-5.649547,6.283391],[0.848689,-0.242455,-2.825784,3.156351,8.152942,-7.778181,-7.133510,-7.277613,2.288506,-3.125500],[-1.603772,8.274672,-6.020812,-6.656016,-5.324044,4.870458,-6.505524,-4.779256,4.006057,2.042012],[-7.089762,-4.205255,-0.669046,-9.141416,3.016591,5.344381,-1.179515,-7.665202,7.177389,5.914380],[-8.542285,7.973135,-4.348621,3.742259,7.009489,-1.417070,-2.001331,-2.070275,4.425919,-0.966626],[-3.657254,0.692020,-2.121853,3.718718,-1.405517,-7.500273,5.041031,1.540993,4.222930,-6.315872],[-8.042889,-6.267862,6.010559,2.614653,-7.318126,-8.063657,-4.733288,9.152508,0.738799,-5.728836],[0.508775,-0.861916,-3.874912,-9.211157,-1.334398,-1.593486,7.553033,-3.523056,9.009630,-7.063735]],[[5.895329,-0.668091,-9.248273,1.392561,-5.701155,3.921689,-3.263660,4.830488,5.830329,-9.166742],[-3.885395,-9.487666,-5.116548,-3.259956,6.374793,9.955630,8.571879,-9.022880,6.835653,7.973511],[0.018843,0.410816,-3.926750,-3.288684,-1.426915,-1.741432,6.909788,-5.265575,2.718686,3.204670],[1.364048,6.173613,6.649358,-8.689089,0.425352,-8.366999,-5.780660,-1.652022,-4.507828,9.788965],[-0.678947,7.316378,-1.851629,7.791601,0.236647,-0.615769,0.366931,7.033399,5.001009,3.335458],[-3.195600,9.001247,4.023712,3.062274,-1.601158,-1.051224,-5.943993,-6.218976,8.828263,-9.233795],[4.808661,-7.228638,1.113928,5.980300,2.625171,3.136249,-3.697229,0.530466,3.005494,-0.718406],[8.550464,-8.687210,-3.387481,-1.967448,-8.902310,-4.663279,-0.348452,-0.347250,9.807004,-5.346206],[-8.566315,-3.991957,0.013443,-5.893539,-1.096061,-6.596434,1.421606,-4.655811,-2.925910,5.154724],[9.786773,-5.872935,-5.551349,7.996100,-9.682665,1.396727,-5.420497,7.633145,3.686462,-7.344082],[-2.590764,6.487931,6.373400,-3.190593,-3.862595,-3.908083,0.212971,3.930845,8.632565,9.719105],[1.026639,-2.088500,-1.552619,2.961768,4.815871,-1.352715,-4.043709,9.632933,0.973202,1.736266],[6.540014,0.131389,-3.718935,4.444644,-1.697253,9.456179,9.037582,1.872373,-5.391391,0.787091],[-2.076891,0.219133,6.525017,-0.967760,-0.985125,-4.193712,5.559895,9.981852,5.518896,5.239450]],[[2.202374,1.731901,-8.176225,8.273706,0.445627,-6.051433,-1.297474,-2.225649,-1.874414,-3.728520],[1.755211,-7.513816,-9.616272,-4.180741,-9.355177,0.593695,5.667611,-0.281629,3.038608,-5.586580],[-9.585218,-1.999018,-9.395489,-5.410263,5.959351,-9.319277,-5.785012,0.231194,-8.811037,-3.293724],[8.183238,-4.261698,-9.255415,-8.724327,-3.499131,-9.468570,4.425330,1.204381,2.894837,-2.899628],[-1.062283,1.682545,-6.792940,-4.060287,9.487484,8.331114,-8.502387,4.622249,8.309084,9.913597],[-5.537140,-3.799794,-1.640857,2.646244,-0.300502,3.711213,-6.967648,8.870780,6.062336,0.163536],[-1.812273,-6.709828,8.833733,0.870302,5.983058,-7.251164,-1.907444,-1.013946,1.270202,-4.955862],[1.558796,-3.910713,3.532245,-3.075960,6.697414,9.722640,6.817657,1.313526,0.955250,3.749057],[8.982213,-3.347626,-8.840919,-0.967101,-4.276945,7.774224,-3.017608,-6.903442,7.638751,0.009641],[-7.200506,-0.869150,-9.367747,-5.657086,-0.731661,-7.495754,-1.408899,5.730247,8.826702,-9.589495],[8.450583,-2.650879,3.717741,4.700074,2.564135,-0.533046,5.033872,1.961718,-8.459883,7.158253],[0.594483,-0.637300,-8.068828,3.267938,8.222428,2.266986,8.109806,4.428088,-9.566178,-3.844928],[2.910442,-0.901837,0.011227,-4.499024,6.525988,9.934159,8.547750,-4.472046,3.478917,-0.620269],[2.602050,6.736233,8.576342,-2.893730,6.294294,0.707131,1.997187,5.153697,-8.430414,-6.041990]],[[9.342092,-2.337336,3.255000,-9.154896,-5.383515,6.229948,8.481592,6.312484,0.103755,-1.906050],[-1.530719,4.724391,9.623248,-6.567891,-3.246323,-0.602202,-2.250344,8.923006,2.666038,5.645361],[-2.306227,-4.960424,1.888565,-8.605733,2.828607,-7.887311,-9.460204,7.089539,-8.264187,1.208155],[-6.170605,3.215815,1.135861,-1.784697,-2.696539,-7.230661,-6.121116,-7.649111,-3.839547,6.097164],[-0.539547,7.713468,9.840745,-0.468543,5.138336,5.517461,0.686127,-5.820922,4.083531,-9.945253],[-6.173832,-9.124207,4.235152,4.900966,7.486890,4.882926,-1.763854,-3.256993,6.178499,7.913407],[8.742720,-7.610643,1.804453,5.884604,5.810650,2.125363,-9.557999,-2.954644,-7.796326,-2.172953],[-3.758944,0.583318,-9.271533,3.672159,1.737707,-2.595932,8.724535,0.784718,-4.922159,9.922583],[-4.600050,1.120496,-6.898553,-0.509706,6.078433,-8.025527,-4.591613,-2.736031,8.828419,-8.517052],[9.768792,3.909891,4.490950,2.291155,0.381847,1.628595,7.978842,3.620262,9.936698,2.273589],[-5.504863,-9.588364,0.334679,6.399675,-4.670899,4.523651,2.913104,-4.741520,-2.427736,-9.230490],[-4.775667,6.574166,-6.823082,9.198222,7.300629,5.645937,-9.653920,-7.702156,-9.365838,9.361239],[-7.147268,-2.578755,6.770538,-2.114134,4.356732,-4.244279,3.194170,8.144207,-8.145492,5.566919],[3.854927,7.810830,-4.275038,-7.032608,6.836976,-3.537096,-8.727422,6.038480,6.131521,9.610193]]], dtype = "float64")#candidate|887|(14, 14, 10)|const|float64
bop_888 = relay.divide(uop_852.astype('float32'), relay.reshape(const_887.astype('float32'), relay.shape_of(uop_852))) # shape=(14, 14, 10)
output = relay.Tuple([call_863,const_864,call_868,var_869,call_875,var_876,const_877,call_883,bop_888,])
output2 = relay.Tuple([call_865,const_864,call_870,var_869,call_878,var_876,const_877,call_884,bop_888,])
func_897 = relay.Function([var_869,var_876,], output)
mod['func_897'] = func_897
mod = relay.transform.InferType()(mod)
mutated_mod['func_897'] = func_897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_897_call = mutated_mod.get_global_var('func_897')
var_899 = relay.var("var_899", dtype = "uint16", shape = (180,))#candidate|899|(180,)|var|uint16
var_900 = relay.var("var_900", dtype = "int8", shape = ())#candidate|900|()|var|int8
call_898 = func_897_call(var_899,var_900,)
output = call_898
func_901 = relay.Function([var_899,var_900,], output)
mutated_mod['func_901'] = func_901
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1560 = relay.var("var_1560", dtype = "int8", shape = ())#candidate|1560|()|var|int8
const_1561 = relay.const([[[-3,2,-3,-3,-6],[-7,5,1,-3,5],[-10,-6,6,7,-5],[7,-9,7,-4,6],[-7,6,-10,1,-5],[-3,-1,-5,8,-7],[6,-2,5,-6,-2],[-6,5,2,-8,-3],[9,9,7,-9,7],[8,9,10,-1,-2],[1,3,-1,-5,8]],[[-3,6,-7,9,-7],[-1,2,5,6,10],[-1,6,-9,9,-8],[-2,5,7,10,-9],[2,2,-2,8,2],[-5,-9,7,10,1],[-2,-2,-10,9,5],[-7,-8,3,-5,-7],[8,-2,-5,-6,4],[4,8,-4,-5,10],[-3,-6,-7,10,-7]],[[1,-8,-4,-3,-9],[-6,4,9,4,-3],[1,-3,-8,4,-4],[-6,8,-7,9,3],[-6,1,4,-10,-3],[7,8,10,2,-3],[-9,-1,-4,-9,10],[-9,2,-8,9,7],[10,5,-5,3,1],[4,-6,-6,3,1],[7,10,1,8,-4]],[[1,10,-2,-1,2],[3,-1,-9,9,-2],[5,-2,1,-3,-3],[-5,-2,10,-9,3],[4,-7,4,2,10],[-4,5,2,-9,-6],[-3,-9,-7,-3,2],[8,-1,-1,-5,-8],[6,1,-10,-9,7],[3,8,9,3,-2],[5,10,-6,-10,-1]],[[5,-2,1,9,-1],[5,8,-8,-9,-8],[-5,-10,8,-4,-7],[7,-6,-8,1,7],[6,7,-7,3,-5],[6,6,5,-4,-2],[-5,2,-10,-8,-10],[4,-1,1,4,-6],[7,-9,8,4,-2],[-2,9,-8,-8,1],[-3,5,-4,4,2]],[[-8,-1,-9,2,10],[2,-3,-8,2,-9],[-4,-6,8,7,9],[-9,-6,6,9,1],[-4,-1,-5,-7,-5],[-8,1,-9,-3,1],[4,8,10,5,2],[9,10,2,-1,10],[5,4,-3,7,9],[-7,7,3,9,-7],[6,6,9,1,7]],[[5,-1,-10,-4,-10],[2,-4,-5,6,-8],[5,-10,2,-1,9],[-4,9,-3,-10,5],[-10,7,6,2,6],[-7,-6,5,8,2],[-3,-2,-2,3,-4],[1,-5,-7,-10,3],[10,8,8,-5,9],[-4,4,7,2,7],[6,9,6,-4,-4]],[[-4,-8,-2,6,-3],[-7,-9,6,8,-6],[4,-10,-5,9,-3],[-6,-7,9,-1,1],[4,-4,10,1,-7],[-2,8,4,-8,-5],[-5,-10,-5,6,-6],[3,-4,2,-6,1],[-9,6,4,-3,2],[7,-8,4,6,1],[-4,1,-3,3,6]],[[-7,-6,2,-3,-6],[2,-6,8,4,-7],[-5,3,-10,-9,-8],[-8,9,7,8,6],[-7,-5,7,-1,9],[-9,-1,-2,-9,-6],[5,-1,10,6,8],[-1,-8,-7,2,-9],[-10,-7,9,3,-2],[6,-7,-2,6,4],[-7,10,1,-2,7]],[[-6,-10,-9,-4,-8],[3,4,10,6,5],[10,7,9,7,-1],[-5,-3,-1,5,-5],[4,6,10,7,3],[-8,-3,-5,2,-6],[-8,1,-7,4,-10],[2,6,3,5,2],[1,3,4,8,9],[1,6,-9,-4,4],[9,-9,5,1,-3]]], dtype = "int8")#candidate|1561|(10, 11, 5)|const|int8
bop_1562 = relay.subtract(var_1560.astype('int8'), const_1561.astype('int8')) # shape=(10, 11, 5)
output = relay.Tuple([bop_1562,])
output2 = relay.Tuple([bop_1562,])
func_1574 = relay.Function([var_1560,], output)
mod['func_1574'] = func_1574
mod = relay.transform.InferType()(mod)
mutated_mod['func_1574'] = func_1574
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1575 = relay.var("var_1575", dtype = "int8", shape = ())#candidate|1575|()|var|int8
func_1574_call = mutated_mod.get_global_var('func_1574')
call_1576 = func_1574_call(var_1575)
output = call_1576
func_1577 = relay.Function([var_1575], output)
mutated_mod['func_1577'] = func_1577
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1692 = relay.var("var_1692", dtype = "int32", shape = (6, 9, 12))#candidate|1692|(6, 9, 12)|var|int32
var_1693 = relay.var("var_1693", dtype = "int32", shape = (6, 9, 12))#candidate|1693|(6, 9, 12)|var|int32
bop_1694 = relay.bitwise_and(var_1692.astype('int32'), relay.reshape(var_1693.astype('int32'), relay.shape_of(var_1692))) # shape=(6, 9, 12)
func_403_call = mod.get_global_var('func_403')
func_407_call = mutated_mod.get_global_var('func_407')
var_1721 = relay.var("var_1721", dtype = "float64", shape = (60,))#candidate|1721|(60,)|var|float64
var_1722 = relay.var("var_1722", dtype = "int8", shape = ())#candidate|1722|()|var|int8
call_1720 = relay.TupleGetItem(func_403_call(relay.reshape(var_1721.astype('float64'), [10, 2, 3]), relay.reshape(var_1722.astype('int8'), []), ), 3)
call_1723 = relay.TupleGetItem(func_407_call(relay.reshape(var_1721.astype('float64'), [10, 2, 3]), relay.reshape(var_1722.astype('int8'), []), ), 3)
uop_1725 = relay.acos(call_1720.astype('float32')) # shape=(154,)
uop_1727 = relay.acos(call_1723.astype('float32')) # shape=(154,)
var_1729 = relay.var("var_1729", dtype = "float32", shape = (154,))#candidate|1729|(154,)|var|float32
bop_1730 = relay.greater_equal(uop_1725.astype('bool'), relay.reshape(var_1729.astype('bool'), relay.shape_of(uop_1725))) # shape=(154,)
bop_1733 = relay.greater_equal(uop_1727.astype('bool'), relay.reshape(var_1729.astype('bool'), relay.shape_of(uop_1727))) # shape=(154,)
output = relay.Tuple([bop_1694,var_1721,var_1722,bop_1730,])
output2 = relay.Tuple([bop_1694,var_1721,var_1722,bop_1733,])
func_1737 = relay.Function([var_1692,var_1693,var_1721,var_1722,var_1729,], output)
mod['func_1737'] = func_1737
mod = relay.transform.InferType()(mod)
var_1738 = relay.var("var_1738", dtype = "int32", shape = (6, 9, 12))#candidate|1738|(6, 9, 12)|var|int32
var_1739 = relay.var("var_1739", dtype = "int32", shape = (6, 9, 12))#candidate|1739|(6, 9, 12)|var|int32
var_1740 = relay.var("var_1740", dtype = "float64", shape = (60,))#candidate|1740|(60,)|var|float64
var_1741 = relay.var("var_1741", dtype = "int8", shape = ())#candidate|1741|()|var|int8
var_1742 = relay.var("var_1742", dtype = "float32", shape = (154,))#candidate|1742|(154,)|var|float32
output = func_1737(var_1738,var_1739,var_1740,var_1741,var_1742,)
func_1743 = relay.Function([var_1738,var_1739,var_1740,var_1741,var_1742,], output)
mutated_mod['func_1743'] = func_1743
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1747 = relay.var("var_1747", dtype = "uint64", shape = (13, 16, 8))#candidate|1747|(13, 16, 8)|var|uint64
var_1748 = relay.var("var_1748", dtype = "uint64", shape = (13, 16, 8))#candidate|1748|(13, 16, 8)|var|uint64
bop_1749 = relay.bitwise_xor(var_1747.astype('uint64'), relay.reshape(var_1748.astype('uint64'), relay.shape_of(var_1747))) # shape=(13, 16, 8)
output = relay.Tuple([bop_1749,])
output2 = relay.Tuple([bop_1749,])
func_1758 = relay.Function([var_1747,var_1748,], output)
mod['func_1758'] = func_1758
mod = relay.transform.InferType()(mod)
mutated_mod['func_1758'] = func_1758
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1758_call = mutated_mod.get_global_var('func_1758')
var_1760 = relay.var("var_1760", dtype = "uint64", shape = (13, 16, 8))#candidate|1760|(13, 16, 8)|var|uint64
var_1761 = relay.var("var_1761", dtype = "uint64", shape = (13, 16, 8))#candidate|1761|(13, 16, 8)|var|uint64
call_1759 = func_1758_call(var_1760,var_1761,)
output = call_1759
func_1762 = relay.Function([var_1760,var_1761,], output)
mutated_mod['func_1762'] = func_1762
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1825 = relay.const([[-5.952711,-7.807043,-2.524647,-2.233750,-6.088945,-0.400948,-6.820311,-8.155319,3.342866,7.955640],[-9.585547,6.901908,9.279671,-9.315956,-3.531085,-3.214439,-7.088718,-6.309060,4.559522,-6.805564],[6.623570,-1.934574,1.750560,9.592268,5.729680,3.113247,-0.901724,-3.074118,0.751703,1.837597],[-4.735716,-1.874158,-6.380410,-4.663626,9.954260,2.680395,6.973880,4.583822,-8.770778,7.102099],[4.706322,-0.077800,-0.949520,2.157096,8.425349,3.241075,2.874520,-8.869181,-3.877738,7.869668],[-9.405809,-8.966324,4.889127,-5.456756,-0.151762,5.145073,2.566419,6.247266,-9.920694,7.169693],[2.485921,-5.620833,7.056372,6.770142,2.965360,5.273183,6.338348,1.683738,8.351167,8.191072],[-5.476918,2.147950,-4.544863,6.482403,-4.504034,-8.962009,6.175560,-4.118697,-5.256698,-2.607390],[-0.331939,4.706561,5.180498,-6.836317,-7.925472,-1.015194,1.500482,-9.113453,4.316958,-6.289154]], dtype = "float64")#candidate|1825|(9, 10)|const|float64
uop_1826 = relay.exp(const_1825.astype('float64')) # shape=(9, 10)
func_1737_call = mod.get_global_var('func_1737')
func_1743_call = mutated_mod.get_global_var('func_1743')
const_1829 = relay.const([-7,-8,2,6,5,4,4,-10,-5,1,1,2,-3,6,-4,10,1,-6,5,6,-2,9,-4,8,5,5,-7,6,8,8,2,3,-5,8,-9,-1,5,-8,-8,-8,-6,-10,8,5,-9,7,-2,-7,-7,10,-9,8,-10,1,-5,-2,4,5,10,-7,2,2,-6,4,4,-1,2,7,10,-3,-8,5,9,-3,10,9,8,10,2,7,-6,9,2,2,-3,-6,-2,-5,10,9,10,4,9,1,-5,-7,9,-1,-3,2,9,-1,8,1,3,-10,8,-10,7,10,2,-5,5,-3,-8,-6,-2,10,-2,9,-1,-8,-10,-7,2,1,5,8,-9,-10,-9,-7,-3,2,-8,-1,-8,7,9,-7,3,6,1,8,8,-10,-4,7,-4,5,8,10,-4,3,2,6,-5,3,-8,-7,-7,-1,-4,8,-5,-9,-10,-8,5,-8,3,-2,6,-6,4,-1,2,2,2,5,7,-2,-10,-1,-6,-10,5,-9,7,5,1,-2,10,3,8,-9,10,1,-4,5,-1,8,6,7,3,5,-10,8,-5,-3,-9,-7,6,8,-10,9,-7,7,4,-9,8,10,-2,-9,1,1,4,10,-8,1,1,-9,-9,-4,-2,8,8,5,10,9,6,3,8,4,-2,-3,-7,3,-1,-6,1,-1,6,1,2,9,-9,-1,-6,2,10,-4,2,-10,6,5,4,8,-6,5,-8,7,7,-4,-1,-2,4,7,-5,8,-6,1,-1,-9,-10,4,-7,5,6,-8,6,9,7,-7,-4,-4,-7,10,5,-4,2,-3,6,-4,7,-9,-3,4,-4,-2,3,-9,-2,10,-6,2,-10,-8,3,9,5,3,-6,-10,8,-1,2,3,8,-3,8,2,-2,-4,-6,7,1,-1,-6,9,7,-7,9,2,5,-2,3,-9,-8,-4,-6,-6,-10,5,-2,-2,-6,5,-10,3,-4,-6,-10,-6,8,3,-8,10,-7,-5,-9,5,5,1,9,-1,-8,2,2,8,-5,-5,-9,-2,-9,-7,-4,-4,-2,-6,-10,6,4,7,3,7,6,4,6,-4,-4,3,-3,9,-3,-8,2,2,9,1,7,-3,-9,-8,2,-9,-5,4,-3,-5,8,1,7,-5,3,2,5,2,-10,-8,-6,-9,-1,-9,8,1,7,-7,5,3,-1,9,8,-9,-4,3,5,-1,6,3,1,-3,7,-3,5,4,10,-9,5,-7,6,10,-3,-10,-8,5,8,-10,-10,-9,10,9,7,8,-8,2,6,-5,-3,-10,-7,-2,4,10,-8,9,2,-8,7,-10,3,-7,6,-10,7,9,2,9,-5,2,-7,3,-8,-8,-9,10,-2,2,10,-4,9,-1,5,9,-8,-5,-1,-2,-9,5,-9,-1,3,9,-3,-2,-4,-3,4,1,2,-7,-4,1,-9,3,-1,-1,6,-10,10,-1,-9,-5,8,-5,10,5,-2,7,-3,1,5,-2,9,9,-6,-4,-9,-7,5,-9,-7,10,3,1,10,-3,2,-3,7,-10,4,-9,-7,2,-2,8,7,7,5,-7,-9,-9,4,-2,6,6,-10,-5,-1,8,7,-1,3,-4,7,3,-2,7,-6,8,2,4,-9,10,5,3,3,-8,-5,5,4,6,-2,-3,-1,-8,7,7,-10,-7,-5,9,-8,4,-9,-3,-9,-10,-1,9,8,-5,1,2,-10,-8,-1,5,-4,-3,10,-6,7,1,-1,-10], dtype = "int32")#candidate|1829|(648,)|const|int32
var_1830 = relay.var("var_1830", dtype = "float64", shape = (60,))#candidate|1830|(60,)|var|float64
var_1831 = relay.var("var_1831", dtype = "int8", shape = ())#candidate|1831|()|var|int8
var_1832 = relay.var("var_1832", dtype = "float32", shape = (154,))#candidate|1832|(154,)|var|float32
call_1828 = relay.TupleGetItem(func_1737_call(relay.reshape(const_1829.astype('int32'), [6, 9, 12]), relay.reshape(const_1829.astype('int32'), [6, 9, 12]), relay.reshape(var_1830.astype('float64'), [60,]), relay.reshape(var_1831.astype('int8'), []), relay.reshape(var_1832.astype('float32'), [154,]), ), 0)
call_1833 = relay.TupleGetItem(func_1743_call(relay.reshape(const_1829.astype('int32'), [6, 9, 12]), relay.reshape(const_1829.astype('int32'), [6, 9, 12]), relay.reshape(var_1830.astype('float64'), [60,]), relay.reshape(var_1831.astype('int8'), []), relay.reshape(var_1832.astype('float32'), [154,]), ), 0)
func_666_call = mod.get_global_var('func_666')
func_670_call = mutated_mod.get_global_var('func_670')
const_1836 = relay.const([[-2],[4],[8],[-2],[5],[3],[-4],[4],[-1],[-6],[-1],[-8],[-3],[3],[-6],[-5],[-1],[-2],[-10],[-4],[-8],[3],[-3],[7],[-6],[-2],[1],[3],[7],[-6],[-6],[-3],[9],[-4],[8],[3],[8],[-7],[3],[-2],[6],[5],[-5],[3],[-6],[-5],[9],[7],[-3],[-6],[2],[8],[-5],[8],[10],[-8],[5],[-6],[-4],[2],[-8],[-10],[7],[5],[-10],[-3],[-10],[10],[-8],[5],[10],[6],[9],[-6],[1],[-10],[-5],[9],[8],[1],[5],[-10],[-5],[-2],[1],[-10],[-3],[8],[8],[-4],[4],[-1],[-4],[10],[-2],[-2],[5],[6],[2],[-2],[9],[8],[8],[-3],[-2],[5],[-1],[-4],[5],[-7],[-4],[-8],[10],[-10],[3],[-9],[-6],[4],[3],[-10],[4],[-2],[2],[-10],[-1],[-7],[-5],[-6],[8],[9],[-8],[2],[5],[5],[3],[4],[1],[-4],[3],[3],[10],[-7],[-5],[-10],[-8],[6],[7],[-7],[-6],[-10],[-10],[-8],[-2],[7],[6],[-7],[9],[3],[-6],[-1],[-4],[-10],[5],[-3],[4],[1],[10],[6],[-4],[5],[-4],[-6],[6],[-9],[4],[9],[-4],[-9],[8],[1]], dtype = "uint16")#candidate|1836|(180, 1)|const|uint16
call_1835 = relay.TupleGetItem(func_666_call(relay.reshape(const_1836.astype('uint16'), [5, 4, 9]), relay.reshape(const_1836.astype('uint16'), [5, 4, 9]), ), 3)
call_1837 = relay.TupleGetItem(func_670_call(relay.reshape(const_1836.astype('uint16'), [5, 4, 9]), relay.reshape(const_1836.astype('uint16'), [5, 4, 9]), ), 3)
func_339_call = mod.get_global_var('func_339')
func_342_call = mutated_mod.get_global_var('func_342')
call_1842 = func_339_call(relay.reshape(call_1835.astype('float32'), [12, 11, 4]))
call_1843 = func_339_call(relay.reshape(call_1835.astype('float32'), [12, 11, 4]))
func_1574_call = mod.get_global_var('func_1574')
func_1577_call = mutated_mod.get_global_var('func_1577')
call_1847 = relay.TupleGetItem(func_1574_call(relay.reshape(var_1831.astype('int8'), [])), 0)
call_1848 = relay.TupleGetItem(func_1577_call(relay.reshape(var_1831.astype('int8'), [])), 0)
func_897_call = mod.get_global_var('func_897')
func_901_call = mutated_mod.get_global_var('func_901')
call_1851 = relay.TupleGetItem(func_897_call(relay.reshape(const_1836.astype('uint16'), [180,]), relay.reshape(var_1831.astype('int8'), []), ), 0)
call_1852 = relay.TupleGetItem(func_901_call(relay.reshape(const_1836.astype('uint16'), [180,]), relay.reshape(var_1831.astype('int8'), []), ), 0)
func_666_call = mod.get_global_var('func_666')
func_670_call = mutated_mod.get_global_var('func_670')
call_1854 = relay.TupleGetItem(func_666_call(relay.reshape(const_1836.astype('uint16'), [5, 4, 9]), relay.reshape(const_1836.astype('uint16'), [5, 4, 9]), ), 2)
call_1855 = relay.TupleGetItem(func_670_call(relay.reshape(const_1836.astype('uint16'), [5, 4, 9]), relay.reshape(const_1836.astype('uint16'), [5, 4, 9]), ), 2)
func_1758_call = mod.get_global_var('func_1758')
func_1762_call = mutated_mod.get_global_var('func_1762')
var_1857 = relay.var("var_1857", dtype = "uint64", shape = (1664,))#candidate|1857|(1664,)|var|uint64
call_1856 = relay.TupleGetItem(func_1758_call(relay.reshape(var_1857.astype('uint64'), [13, 16, 8]), relay.reshape(var_1857.astype('uint64'), [13, 16, 8]), ), 0)
call_1858 = relay.TupleGetItem(func_1762_call(relay.reshape(var_1857.astype('uint64'), [13, 16, 8]), relay.reshape(var_1857.astype('uint64'), [13, 16, 8]), ), 0)
func_403_call = mod.get_global_var('func_403')
func_407_call = mutated_mod.get_global_var('func_407')
call_1864 = relay.TupleGetItem(func_403_call(relay.reshape(var_1830.astype('float64'), [10, 2, 3]), relay.reshape(var_1831.astype('int8'), []), ), 3)
call_1865 = relay.TupleGetItem(func_407_call(relay.reshape(var_1830.astype('float64'), [10, 2, 3]), relay.reshape(var_1831.astype('int8'), []), ), 3)
output = relay.Tuple([uop_1826,call_1828,const_1829,var_1830,var_1831,var_1832,call_1835,const_1836,call_1842,call_1847,call_1851,call_1854,call_1856,var_1857,call_1864,])
output2 = relay.Tuple([uop_1826,call_1833,const_1829,var_1830,var_1831,var_1832,call_1837,const_1836,call_1843,call_1848,call_1852,call_1855,call_1858,var_1857,call_1865,])
func_1872 = relay.Function([var_1830,var_1831,var_1832,var_1857,], output)
mod['func_1872'] = func_1872
mod = relay.transform.InferType()(mod)
var_1873 = relay.var("var_1873", dtype = "float64", shape = (60,))#candidate|1873|(60,)|var|float64
var_1874 = relay.var("var_1874", dtype = "int8", shape = ())#candidate|1874|()|var|int8
var_1875 = relay.var("var_1875", dtype = "float32", shape = (154,))#candidate|1875|(154,)|var|float32
var_1876 = relay.var("var_1876", dtype = "uint64", shape = (1664,))#candidate|1876|(1664,)|var|uint64
output = func_1872(var_1873,var_1874,var_1875,var_1876,)
func_1877 = relay.Function([var_1873,var_1874,var_1875,var_1876,], output)
mutated_mod['func_1877'] = func_1877
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1924 = relay.var("var_1924", dtype = "float64", shape = (16, 16, 11))#candidate|1924|(16, 16, 11)|var|float64
uop_1925 = relay.tan(var_1924.astype('float64')) # shape=(16, 16, 11)
func_897_call = mod.get_global_var('func_897')
func_901_call = mutated_mod.get_global_var('func_901')
var_1934 = relay.var("var_1934", dtype = "uint16", shape = (180,))#candidate|1934|(180,)|var|uint16
var_1935 = relay.var("var_1935", dtype = "int8", shape = ())#candidate|1935|()|var|int8
call_1933 = relay.TupleGetItem(func_897_call(relay.reshape(var_1934.astype('uint16'), [180,]), relay.reshape(var_1935.astype('int8'), []), ), 7)
call_1936 = relay.TupleGetItem(func_901_call(relay.reshape(var_1934.astype('uint16'), [180,]), relay.reshape(var_1935.astype('int8'), []), ), 7)
output = relay.Tuple([uop_1925,call_1933,var_1934,var_1935,])
output2 = relay.Tuple([uop_1925,call_1936,var_1934,var_1935,])
func_1938 = relay.Function([var_1924,var_1934,var_1935,], output)
mod['func_1938'] = func_1938
mod = relay.transform.InferType()(mod)
mutated_mod['func_1938'] = func_1938
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1938_call = mutated_mod.get_global_var('func_1938')
var_1940 = relay.var("var_1940", dtype = "float64", shape = (16, 16, 11))#candidate|1940|(16, 16, 11)|var|float64
var_1941 = relay.var("var_1941", dtype = "uint16", shape = (180,))#candidate|1941|(180,)|var|uint16
var_1942 = relay.var("var_1942", dtype = "int8", shape = ())#candidate|1942|()|var|int8
call_1939 = func_1938_call(var_1940,var_1941,var_1942,)
output = call_1939
func_1943 = relay.Function([var_1940,var_1941,var_1942,], output)
mutated_mod['func_1943'] = func_1943
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2058 = relay.var("var_2058", dtype = "int32", shape = ())#candidate|2058|()|var|int32
var_2059 = relay.var("var_2059", dtype = "int32", shape = (1, 1, 5))#candidate|2059|(1, 1, 5)|var|int32
bop_2060 = relay.bitwise_or(var_2058.astype('int32'), var_2059.astype('int32')) # shape=(1, 1, 5)
bop_2092 = relay.minimum(var_2058.astype('uint32'), var_2059.astype('uint32')) # shape=(1, 1, 5)
func_403_call = mod.get_global_var('func_403')
func_407_call = mutated_mod.get_global_var('func_407')
const_2102 = relay.const([-2.354785,1.634237,6.036889,-4.057647,-0.847899,-9.663856,8.789766,-6.534367,0.308854,2.364836,-9.435152,-5.202862,-9.416483,7.370262,3.695506,-4.184136,-1.397953,7.315731,-6.811305,7.459015,-5.393334,9.761824,-6.405248,-0.646092,9.924549,1.709468,-6.334243,6.014499,-7.576113,-7.367731,-2.722517,8.607324,-0.734064,-2.675197,-9.198479,4.825575,9.216441,9.702745,-0.232715,-3.345988,8.345785,-3.663656,3.336697,-9.743310,-3.724717,6.765522,4.669456,-4.202138,1.584795,5.333091,-2.293227,-5.184643,7.703376,-4.993769,-9.236184,9.174699,-4.323978,3.632429,-9.257279,6.875845], dtype = "float64")#candidate|2102|(60,)|const|float64
call_2101 = relay.TupleGetItem(func_403_call(relay.reshape(const_2102.astype('float64'), [10, 2, 3]), relay.reshape(var_2058.astype('int8'), []), ), 0)
call_2103 = relay.TupleGetItem(func_407_call(relay.reshape(const_2102.astype('float64'), [10, 2, 3]), relay.reshape(var_2058.astype('int8'), []), ), 0)
func_1938_call = mod.get_global_var('func_1938')
func_1943_call = mutated_mod.get_global_var('func_1943')
var_2111 = relay.var("var_2111", dtype = "float64", shape = (2816,))#candidate|2111|(2816,)|var|float64
var_2112 = relay.var("var_2112", dtype = "uint16", shape = (180,))#candidate|2112|(180,)|var|uint16
call_2110 = relay.TupleGetItem(func_1938_call(relay.reshape(var_2111.astype('float64'), [16, 16, 11]), relay.reshape(var_2112.astype('uint16'), [180,]), relay.reshape(var_2058.astype('int8'), []), ), 0)
call_2113 = relay.TupleGetItem(func_1943_call(relay.reshape(var_2111.astype('float64'), [16, 16, 11]), relay.reshape(var_2112.astype('uint16'), [180,]), relay.reshape(var_2058.astype('int8'), []), ), 0)
uop_2115 = relay.sinh(call_2101.astype('float64')) # shape=(10, 2, 3)
uop_2117 = relay.sinh(call_2103.astype('float64')) # shape=(10, 2, 3)
uop_2118 = relay.sinh(var_2111.astype('float32')) # shape=(2816,)
output = relay.Tuple([bop_2060,bop_2092,const_2102,call_2110,var_2112,uop_2115,uop_2118,])
output2 = relay.Tuple([bop_2060,bop_2092,const_2102,call_2113,var_2112,uop_2117,uop_2118,])
func_2124 = relay.Function([var_2058,var_2059,var_2111,var_2112,], output)
mod['func_2124'] = func_2124
mod = relay.transform.InferType()(mod)
var_2125 = relay.var("var_2125", dtype = "int32", shape = ())#candidate|2125|()|var|int32
var_2126 = relay.var("var_2126", dtype = "int32", shape = (1, 1, 5))#candidate|2126|(1, 1, 5)|var|int32
var_2127 = relay.var("var_2127", dtype = "float64", shape = (2816,))#candidate|2127|(2816,)|var|float64
var_2128 = relay.var("var_2128", dtype = "uint16", shape = (180,))#candidate|2128|(180,)|var|uint16
output = func_2124(var_2125,var_2126,var_2127,var_2128,)
func_2129 = relay.Function([var_2125,var_2126,var_2127,var_2128,], output)
mutated_mod['func_2129'] = func_2129
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2219 = relay.const(-3, dtype = "uint64")#candidate|2219|()|const|uint64
var_2220 = relay.var("var_2220", dtype = "uint64", shape = (1, 11, 12))#candidate|2220|(1, 11, 12)|var|uint64
bop_2221 = relay.left_shift(const_2219.astype('uint64'), var_2220.astype('uint64')) # shape=(1, 11, 12)
output = relay.Tuple([bop_2221,])
output2 = relay.Tuple([bop_2221,])
func_2237 = relay.Function([var_2220,], output)
mod['func_2237'] = func_2237
mod = relay.transform.InferType()(mod)
var_2238 = relay.var("var_2238", dtype = "uint64", shape = (1, 11, 12))#candidate|2238|(1, 11, 12)|var|uint64
output = func_2237(var_2238)
func_2239 = relay.Function([var_2238], output)
mutated_mod['func_2239'] = func_2239
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2339 = relay.var("var_2339", dtype = "uint8", shape = (3, 6, 14))#candidate|2339|(3, 6, 14)|var|uint8
const_2340 = relay.const([[[-8,-10,8,-6,-1,2,4,9,9,9,-5,-7,-10,2],[4,5,-9,-8,8,-7,-2,-8,4,2,-9,7,-10,8],[-7,-9,4,-2,2,9,4,2,8,-4,5,8,-9,-10],[1,-8,-8,-9,2,5,-3,-5,-4,-5,-4,5,-7,7],[-9,-4,5,-1,8,7,-1,-5,7,-3,6,3,9,3],[-2,1,-7,4,-6,7,4,5,6,-2,-1,-6,-1,10]],[[7,-5,4,-2,10,5,10,-1,5,10,7,4,4,-8],[9,6,-3,-6,-8,10,-4,-5,6,-9,-3,10,-2,9],[-2,-3,-7,8,-4,7,-3,-2,-1,-3,3,7,2,6],[-2,10,-6,-7,-5,-10,-7,3,-5,9,1,4,6,2],[9,-4,4,6,-10,-2,-8,-4,-1,-7,1,4,-9,-8],[10,-5,-9,-1,-4,5,-2,8,9,-6,-10,-9,-10,5]],[[-9,-4,-4,-9,1,-7,9,-8,-9,10,2,-10,-9,-3],[2,-8,-2,10,-5,-10,9,1,1,8,10,10,5,4],[1,-5,-5,3,-7,-5,4,-1,5,10,3,-8,7,7],[-9,6,-8,10,5,-1,8,7,3,4,9,-4,3,7],[1,4,5,-10,10,-6,-5,7,5,3,1,-6,1,-5],[3,8,8,-1,-1,-5,1,8,-8,-7,-1,1,-8,-2]]], dtype = "uint8")#candidate|2340|(3, 6, 14)|const|uint8
bop_2341 = relay.less_equal(var_2339.astype('bool'), relay.reshape(const_2340.astype('bool'), relay.shape_of(var_2339))) # shape=(3, 6, 14)
func_1872_call = mod.get_global_var('func_1872')
func_1877_call = mutated_mod.get_global_var('func_1877')
var_2358 = relay.var("var_2358", dtype = "float64", shape = (60,))#candidate|2358|(60,)|var|float64
const_2359 = relay.const(-2, dtype = "int8")#candidate|2359|()|const|int8
var_2360 = relay.var("var_2360", dtype = "float32", shape = (154,))#candidate|2360|(154,)|var|float32
var_2361 = relay.var("var_2361", dtype = "uint64", shape = (1664,))#candidate|2361|(1664,)|var|uint64
call_2357 = relay.TupleGetItem(func_1872_call(relay.reshape(var_2358.astype('float64'), [60,]), relay.reshape(const_2359.astype('int8'), []), relay.reshape(var_2360.astype('float32'), [154,]), relay.reshape(var_2361.astype('uint64'), [1664,]), ), 4)
call_2362 = relay.TupleGetItem(func_1877_call(relay.reshape(var_2358.astype('float64'), [60,]), relay.reshape(const_2359.astype('int8'), []), relay.reshape(var_2360.astype('float32'), [154,]), relay.reshape(var_2361.astype('uint64'), [1664,]), ), 4)
func_2124_call = mod.get_global_var('func_2124')
func_2129_call = mutated_mod.get_global_var('func_2129')
var_2378 = relay.var("var_2378", dtype = "int32", shape = (5,))#candidate|2378|(5,)|var|int32
const_2379 = relay.const([-4.661523,9.291425,-2.766311,-4.916022,-0.695655,-0.412267,5.791849,3.604115,-1.429804,-5.508332,-8.490404,-9.113441,-2.440405,-4.564018,5.070549,2.625431,7.403624,-4.828451,8.961108,-8.964041,1.262624,-6.779353,-6.353670,-5.537780,-3.555681,6.664446,-4.056077,9.515216,6.194857,-8.832425,-9.138336,-2.751629,-0.796076,2.836483,5.032033,2.665462,5.453841,4.384705,5.816074,-9.860347,5.663688,8.884419,5.555151,-9.618810,-5.776908,1.090053,-6.726873,-3.021718,-3.891147,-1.631416,0.020960,6.045615,2.816034,-5.094675,-2.279869,-8.607533,-3.996482,5.332678,-2.124039,1.162546,-3.612146,5.789537,-3.129431,3.688054,2.151109,7.522703,-1.661726,7.963315,4.615066,-6.802177,-2.452243,5.168395,-1.778845,-4.734606,-3.511099,9.431805,-3.995955,5.129441,-5.019258,-5.887169,-5.745553,1.787985,-5.062105,-6.300676,-8.205360,3.236518,3.621966,-5.359163,2.789415,-2.030037,-2.380033,-4.255026,-7.424088,0.051265,-1.011052,3.635893,1.135795,6.294974,0.348190,-7.257232,6.206400,1.760409,-5.786665,-6.809403,-4.480689,-3.770934,2.653171,-6.684575,-5.039016,-7.117626,3.903387,-0.797672,-0.983027,-6.137426,0.222501,-5.212998,-3.448553,-6.855763,0.662843,-4.740289,4.091585,-3.801615,3.948506,2.319702,-2.487876,-6.560212,3.204446,9.355895,7.162413,5.272330,-8.415824,8.725299,6.053357,1.190341,-4.077602,7.757251,-5.505056,-8.925446,-4.260651,-3.085616,-5.996711,-1.593778,5.082647,0.279361,1.683055,1.296334,-4.555349,-9.901633,-7.066533,-7.187703,8.819970,8.551256,6.659847,0.127656,0.773302,7.402844,-8.133230,3.458025,2.252303,-4.550986,0.106202,-3.946668,-9.748087,-4.273628,-7.526833,-9.364409,-0.359941,-1.736754,3.942469,6.373154,9.789442,-2.605144,-0.785446,5.386103,0.857696,-2.875592,7.613028,-0.406367,3.375656,1.085826,-4.117512,4.077501,0.683373,-4.138266,2.509370,8.130634,-6.967110,-4.505163,4.346021,-7.514606,-5.557216,0.257426,6.010216,9.780794,-7.633975,1.423307,-9.023229,1.779135,-8.207402,1.316736,9.520463,-2.108246,-9.920872,-4.474938,-4.716628,-2.899737,4.538414,-2.079689,-3.589604,7.773404,-7.050076,2.745618,9.543387,-3.193943,-9.629408,3.801180,-0.368397,-3.418004,6.863441,-0.119185,1.377184,-3.909056,5.990177,-5.028557,-5.302530,-9.424501,-2.427281,-1.282434,9.280866,3.325079,-5.335147,4.313132,-9.868297,5.366364,7.126288,3.270369,4.808584,6.508338,-1.851534,-4.364618,-5.545878,-0.413412,-9.678845,-9.191859,2.775106,7.162582,5.130749,5.075128,-6.516053,1.489683,-3.329881,6.034062,-7.855696,-5.347693,-7.831076,2.086635,-8.804761,2.755767,-3.443187,-4.734397,6.367409,7.018255,-9.092444,-9.594619,-6.425684,-5.846098,-9.472703,-5.250057,3.072101,2.888315,5.015927,-2.395292,-8.080379,-7.810955,5.122290,7.910219,-4.948741,3.397272,7.414959,-3.110462,2.457756,-1.513447,-7.255940,-5.978019,-0.856538,6.648999,3.237408,2.250633,1.304917,-4.638219,-6.812166,0.908037,8.137991,3.605726,-7.596507,-2.516260,1.034074,8.110890,9.710126,9.067619,8.401330,3.733489,-5.297233,6.626583,-7.673082,-3.223272,5.427775,7.698109,2.279131,2.934250,-9.851335,6.723042,-1.330987,2.173304,1.775249,2.052391,2.454621,5.008495,9.425746,3.417428,-1.630700,-4.050241,4.242178,-4.686343,2.620152,-1.054081,6.317064,6.448025,-5.991627,9.326184,3.392551,5.188401,2.542786,-8.749310,0.831749,-7.727902,0.396661,4.975935,8.688778,8.056106,9.601946,-7.600377,-4.449282,-0.370894,7.573875,-4.980067,5.326867,8.616786,-5.580438,5.411052,-9.147811,1.240446,7.649816,-8.802683,8.907223,3.365332,-6.415877,8.303446,7.957918,3.540624,-5.410320,5.265882,2.407712,-1.818958,-3.081646,3.686249,-4.862184,-9.930544,2.471389,-7.422641,0.191239,9.916213,1.222429,-1.676546,6.624762,3.297162,6.744953,2.866817,-2.075666,-6.034776,0.771509,6.080793,-3.863401,5.522667,-9.933730,-0.480661,2.833804,5.717088,7.569126,4.469681,-2.945857,-9.765074,6.472006,-7.124085,4.442580,-8.016642,0.493386,-7.891498,-5.080968,7.376327,3.976080,-9.055270,-0.428813,-7.369012,3.594971,-7.865179,-4.489006,6.418663,-4.328855,1.608524,-9.146082,-5.422312,4.416932,1.384493,8.224195,8.089488,2.834821,3.209296,3.467235,4.807904,-0.873869,-4.211593,-7.267747,-8.696564,-2.624614,-8.450069,-5.416547,-5.886399,-0.895160,0.487920,-2.289304,-2.261750,-7.298246,9.993905,4.307397,-4.726808,-7.738508,2.921384,-8.727584,5.549331,0.624129,6.335398,0.316639,-4.518181,2.694853,7.052570,-2.337331,4.111936,8.002849,-1.104992,7.559489,-1.465880,-2.200290,-6.292313,-9.335559,7.219444,-8.280332,3.477424,-9.174791,4.642678,6.612110,3.027841,-8.164244,-7.197718,-2.651218,2.524724,2.699008,2.768747,5.433082,-1.192581,-5.301486,6.132231,-3.338791,-8.717040,-5.276116,-0.112665,-1.783247,2.598427,7.396235,-6.955947,3.656156,0.897366,-8.576830,-7.549862,5.530592,1.011182,-7.073008,-9.837840,8.909411,1.361446,-0.241736,8.678383,3.356165,5.648285,-6.271071,-4.943499,1.580428,-6.699962,3.967670,1.170721,4.788926,-1.009480,-0.446511,-6.999914,4.064080,7.810260,3.901386,-3.702361,-6.021829,4.171719,7.124735,-5.757937,-9.526181,-7.830460,2.194431,-2.226955,-2.696719,-2.932062,7.588519,-6.020076,-4.793164,-4.581619,-5.656300,-5.777021,-6.637009,8.629752,-0.205704,9.286974,-7.390319,-5.886411,4.156433,-1.307488,3.584949,-6.335400,6.056526,9.047023,2.278542,-6.814318,-5.127696,-5.805725,-5.658306,-9.461556,1.946566,3.378598,-2.342113,5.082658,-9.936874,2.397641,-8.926389,-4.294108,8.003170,5.620114,8.701423,-4.476726,-0.645134,5.450909,9.770802,6.869466,6.885912,-3.232955,-7.479557,1.027839,-5.958324,-4.259547,3.944907,-6.355239,-5.333659,8.621185,0.871357,5.066320,-9.551558,6.259994,2.778700,-8.880136,4.471036,-0.276780,-2.172580,9.234659,-4.113962,5.831366,-7.447778,-2.181660,0.038005,8.114807,-4.318860,-4.212215,2.221623,-3.290679,9.752474,5.980870,4.022211,-4.773195,2.809559,-6.425922,-0.549098,3.269099,-2.535235,8.133095,1.557166,-4.227782,-8.457865,-8.816228,-8.569170,-0.838613,5.132586,7.929794,6.850425,-9.479309,9.033429,-9.704145,-1.854412,-5.466623,-1.943991,-6.833645,-0.219440,1.265544,-0.004454,-7.699391,-7.130605,-8.966431,-5.795728,-2.247278,2.619067,9.024008,-5.593640,-9.262440,6.141024,6.582187,4.084909,-3.372352,-1.849498,-5.348976,0.210867,-6.928553,2.563505,-6.917672,-0.034367,9.384729,0.525103,-7.410180,-0.111951,7.005979,2.992312,9.329149,-8.421606,7.951282,4.588494,6.107284,-9.836705,-5.249414,-8.447711,-4.056254,-7.414596,4.565692,-1.282651,5.330693,-6.571971,-3.378176,2.301065,-9.473627,3.265114,-9.259420,2.102694,-9.786189,0.970870,4.467269,5.801157,-7.498012,5.913380,5.992819,1.443262,5.170590,5.126629,-9.127058,8.755140,4.888123,-4.440791,-6.615891,3.128028,7.156530,7.499152,4.591044,-0.258475,-0.892165,3.771891,7.906497,-3.881294,-3.990031,4.889618,-0.812291,-8.022887,5.374716,-3.393984,-5.553753,-5.393446,-4.568223,6.412664,-5.163726,-4.271864,1.484299,8.352566,-0.696968,6.345911,9.577415,3.505470,-7.186740,8.143270,-7.276707,7.749298,-6.937469,8.878366,6.196097,-5.629716,-5.854614,6.371650,-4.236611,7.027859,-2.833593,7.989121,0.444813,-3.352328,-8.976558,5.315623,6.138153,-0.002172,1.519738,-9.128539,-5.941362,-0.622001,3.112789,-1.292898,-5.969464,6.741337,4.082971,1.463081,7.117567,-5.281804,6.877432,2.477631,-9.547996,-3.806421,3.856298,-0.590018,1.641870,-2.877521,-9.272488,-0.048217,-5.698877,-4.177021,4.311285,-8.315977,6.624617,-8.361746,4.571893,8.090667,3.927717,7.461200,-1.142860,-5.680039,-2.387546,5.571559,-1.168263,-2.151381,4.188297,-7.502400,-8.397425,7.076256,9.685046,-7.457979,0.386471,-7.130067,-1.518560,6.022371,0.781554,-7.158966,7.841928,4.692163,-5.896692,-6.889009,-9.646477,-6.833351,-0.172178,-6.149074,9.272727,-0.359578,-9.656435,-9.584574,-2.782142,6.339343,3.815699,6.949569,6.502025,-4.515544,-7.042559,0.451201,3.298422,8.449083,-8.471170,3.165200,5.037339,-4.617478,-4.360550,-4.814115,4.872450,6.769468,0.459778,8.288612,2.731741,-0.733806,-0.486459,-2.257787,4.635451,3.284524,5.799499,-2.234791,-0.320299,-6.406253,5.444168,6.466820,-8.906315,8.106408,-3.506084,6.337011,8.321482,1.786474,9.753138,7.581989,-3.686396,-8.237935,-2.421299,-8.607145,-9.405408,0.829662,1.935547,-7.745892,6.940494,9.518092,-0.613607,4.888587,6.061387,1.392764,-3.707877,6.453886,-6.128935,-9.524042,-0.298445,9.253955,7.991476,-7.300377,-9.633583,5.765435,2.858742,8.638999,2.064289,6.545931,7.649439,7.542422,7.406224,-2.696200,6.047248,-5.351380,7.876933,-1.817233,3.061848,4.055621,2.886197,6.938855,-8.897024,-7.015233,-9.469482,-6.563595,-1.452811,7.384820,-4.961095,2.392534,7.784181,-7.104224,-5.248311,3.060975,0.231559,1.482005,2.998935,6.369977,9.543986,8.690530,2.657455,5.867625,-1.957795,-5.707721,3.042654,-4.238205,2.918829,9.137353,1.265628,8.823012,-3.372492,5.258403,-7.397838,6.499407,-7.903338,2.238424,-5.635615,4.787233,7.740046,9.520701,-2.895752,9.097286,-4.172752,0.237897,-3.244216,8.116360,8.637105,-3.838071,0.485051,2.960303,4.229795,-0.333181,3.818362,-8.851881,6.900646,0.532521,9.258452,1.717460,-8.783423,8.101802,-9.980577,6.178725,7.851020,0.979563,4.430346,-5.730730,7.229094,-0.989747,-5.697571,0.906993,-4.245299,5.479926,-2.461937,-0.697197,2.769238,5.125094,-7.141809,8.605607,-0.067757,-1.149947,6.935811,-9.249451,7.708670,-5.854417,8.153457,6.378829,-2.649526,6.913307,-9.053289,7.031365,9.168936,5.209806,6.370967,4.076336,1.350101,8.632681,-7.163649,9.472074,-9.035046,-3.923665,5.246321,-6.990510,-1.755879,-4.061678,1.146882,5.167361,-6.735546,-6.201569,2.497620,-3.831005,2.962209,-4.761125,6.085011,-8.623525,4.212534,-6.742937,-6.580642,-8.627731,-1.249267,2.221809,6.164021,3.929463,9.344423,3.474306,0.529364,9.392301,-1.586895,3.760997,2.008767,4.593317,-6.341650,-8.415668,-3.175026,5.135492,1.248871,-5.718604,2.020578,7.683542,3.787940,-1.686163,-9.292253,-8.394051,0.253883,-2.656404,0.632367,7.558512,5.834825,-7.761656,-0.853915,8.463814,3.334908,-9.501393,9.624331,1.621409,9.858280,2.486643,-0.739409,-7.567974,3.274449,-1.912520,-4.037449,-7.518675,9.726611,-4.455295,0.978346,-5.965959,1.510646,6.810885,-8.091165,-9.960239,-7.206798,7.823736,6.466324,-3.107562,-9.549327,2.385550,-5.829481,9.438147,-7.881772,-1.809571,8.929281,-3.906411,0.813795,7.633846,1.929107,5.637642,3.635240,-6.185836,-7.649638,-3.452877,1.917338,-1.381158,8.341954,-9.394945,8.109253,6.713523,8.320909,8.944757,-4.589004,-5.881882,-8.131422,8.324082,-1.395635,-1.853166,4.274047,9.818414,-7.454135,-6.653286,3.901830,-0.681563,8.693588,0.156149,1.802651,-3.004950,4.057898,0.036136,-8.654776,-7.874453,-0.571204,-1.638774,7.316463,2.164468,6.924105,4.657899,-5.501985,9.593535,-7.255464,-5.718103,8.839946,4.332021,4.980017,8.907432,1.291077,-4.225506,-7.376603,8.681752,-8.200802,-2.272902,2.222845,2.897294,1.223770,1.584587,1.552774,9.133435,-1.060685,-7.878606,-9.960123,-9.422931,4.146387,7.963241,1.752481,2.401354,2.602506,3.263616,1.922340,-8.348363,3.804643,-7.912755,0.332766,4.487835,-4.526042,9.049715,4.849974,2.528855,-2.181108,2.604174,9.970811,-0.249984,-8.576833,1.959950,-5.761917,-5.947847,-3.808511,-4.122764,-6.448955,1.076333,6.972888,7.903147,-1.392606,3.574608,-4.134783,-4.282884,1.426096,-4.133920,-3.715906,-5.559926,-2.431211,-5.433489,1.705527,-5.491572,5.520800,1.749998,5.374155,2.038683,6.928973,-4.049046,7.623056,6.373740,9.811859,-3.154219,-7.761325,-2.851309,5.108359,1.713314,-0.703997,2.578850,0.244857,-4.662775,6.926553,7.005032,3.725830,-5.949991,-2.817707,6.478232,-5.453938,-8.969128,-0.677575,6.653861,6.537511,7.528048,-8.392979,0.570738,4.801824,-0.109150,-9.138177,1.256376,-5.097515,-2.919724,4.551506,-9.101149,-3.226524,-3.638781,-8.952037,-7.215917,-2.246702,0.846161,-1.717682,2.499751,-8.011555,6.703140,1.906151,-6.498147,-3.421249,-5.787988,0.502048,6.054722,6.377077,-6.516980,9.251293,-2.991595,-1.228195,4.075949,-8.281775,-4.113411,-1.933386,8.999089,-9.181778,4.048088,5.745449,9.133807,8.499164,-3.314151,-5.519675,-4.954374,2.728769,-9.062909,-4.498432,9.941949,-4.761801,0.139320,8.560277,-4.636550,8.451567,-1.315254,9.318022,2.591743,9.840641,-1.675463,-1.126076,4.254264,4.529174,-8.204859,4.577757,-1.518020,7.949521,6.727455,3.471540,9.911971,6.678266,8.373948,5.800316,9.286753,-4.394589,-5.723476,-2.525565,-0.037332,4.141779,8.459241,-5.320270,-2.836599,-6.619705,-6.522172,8.669213,-8.948481,-6.374106,-2.673710,-3.394763,-2.802586,9.937896,7.396891,-7.051249,1.996906,-3.060494,1.708006,-6.572558,0.828285,8.744042,-8.401444,5.309759,5.921122,-1.758984,9.310671,-2.077769,9.602587,-9.284580,1.416502,7.343715,2.199220,-6.784057,-1.046893,-3.071286,0.299893,-1.031594,5.339793,-4.001055,1.940870,-4.618846,6.458910,-7.964275,-3.851955,4.842036,5.448848,-9.190018,4.059084,9.919571,4.206927,4.681826,6.265136,3.137582,2.111621,-8.839926,-5.353305,2.704647,3.670186,6.466865,-8.314698,0.008483,4.481554,-3.846014,-7.233956,-0.504109,-8.636868,-3.050690,3.587969,-9.007619,2.008324,9.221562,4.251823,1.289788,-1.670920,-6.635014,-4.620689,2.606528,1.808830,-1.353855,3.907759,2.628876,-5.844137,-3.866780,2.364563,-6.917083,4.832698,4.682873,-8.286235,2.022815,6.066769,3.614661,2.979669,3.267871,5.139871,8.646879,-3.914461,-9.499807,-6.803528,7.935035,6.800968,7.135962,7.322667,4.959104,7.084289,4.053191,-6.860986,-8.901316,2.688359,-2.805959,3.920168,2.952152,-1.818311,-2.502452,-3.740620,5.417482,5.573698,-9.220690,9.270407,-0.083117,-9.748970,8.580156,0.067863,1.588025,0.635631,1.146275,5.755032,-8.245067,-4.360425,-5.796510,-7.980374,-2.169424,-8.636502,8.980910,-6.211143,1.072621,1.391331,1.389727,-6.865468,1.361801,-7.796496,7.626918,5.736418,7.397576,-1.647414,8.874406,2.338608,7.229638,-7.931460,5.396231,-1.908431,-8.504646,4.449077,-3.252184,-3.742160,5.658427,-5.063894,-5.321853,2.822461,9.597421,0.043242,-8.343778,-4.171744,4.065975,-3.253747,3.976042,2.239272,-8.851993,3.610728,-8.142393,-9.731785,-4.771521,-9.681827,3.228465,2.614486,-8.379558,6.971795,3.343082,-5.607932,-3.970182,-4.961785,2.168681,5.988465,-9.644561,3.160705,-7.675480,9.002782,-0.191546,3.592766,0.582757,4.602722,-2.009926,-6.874546,-3.719450,-0.046379,-9.887568,4.145550,-4.359519,1.020597,8.581008,5.997765,7.325590,3.935475,1.825024,1.041467,2.854079,-7.710880,2.339075,6.533914,1.961201,-7.407287,-3.512896,6.528313,0.235597,-5.945698,0.518032,-6.847364,-6.054619,1.869328,8.751192,-2.959149,6.342463,-6.931531,7.910175,-9.498329,5.123708,-7.300522,-5.894869,-4.406290,5.286463,7.623092,-9.619334,4.323849,0.077309,-1.605863,7.231851,9.738147,9.891096,0.501475,0.146770,5.505212,-7.405080,0.361967,-0.525773,-8.282779,-7.678581,-9.349349,-0.930031,3.465862,-3.283664,-4.970186,-7.403458,-2.538078,9.300606,-2.491531,-2.942568,4.044226,-8.998196,6.161178,-3.389923,-6.292573,6.535237,7.166749,-9.876257,1.625557,1.935255,-3.646837,1.027489,6.884577,-2.278107,-2.542226,-4.174337,6.272215,-7.014378,3.341591,5.087684,7.522416,-6.504137,-0.521818,5.074219,-7.519670,8.898806,-1.909885,2.783383,7.160409,1.357199,-2.302052,2.793812,-5.496094,3.521305,-7.619092,2.022048,6.485554,-2.865814,-9.084330,-9.595943,-8.789133,9.492688,-9.818261,4.774327,-8.349592,3.789396,-6.669529,3.229388,-2.548918,-7.368386,0.987706,-2.574469,0.325699,-9.618178,-0.018640,-5.625942,-2.266976,0.327287,6.341710,-1.958909,-5.782110,-2.650543,-1.964259,6.613924,-1.003135,0.122832,-2.240001,3.379468,-4.467015,8.778942,-5.082122,-9.447155,-9.127307,1.222387,-5.424303,4.287687,-4.533765,2.639875,1.458417,2.926943,-6.929160,8.879712,0.161157,-8.201786,-4.270318,-2.237745,-8.277325,1.797737,0.817164,-5.989225,-1.546611,-8.442885,8.135239,9.234489,-1.780419,0.683206,8.119698,1.014393,7.836336,2.004914,-0.664660,-9.533864,-8.468353,3.489798,-7.609705,4.295759,6.412331,9.218730,3.189629,-3.940245,-3.710016,-8.486019,-4.380400,-4.139810,6.365441,-2.692968,9.985917,-4.212541,-6.481500,9.474572,6.909082,-8.559974,-0.696511,-3.740017,-9.576649,-8.243066,-0.566136,9.517258,-7.774190,-0.354582,9.086128,7.234197,3.977123,-1.609193,1.445289,-9.486310,-8.311813,-6.744398,2.754155,-2.224956,6.629109,-2.022042,1.789038,-1.090790,2.367603,3.106479,8.646768,3.086116,3.514161,6.238509,-6.967309,3.886607,-4.306977,3.555661,-5.668725,1.545893,-8.364247,3.512123,1.401542,-2.835015,-5.405670,8.136985,-4.067654,-3.905791,-5.850766,6.410304,-3.155445,6.506822,-0.022481,-3.733617,-6.624031,-8.318230,9.196526,-7.963611,1.110279,4.051071,1.898874,-8.818454,5.886726,7.085489,-7.208692,-3.755372,1.955018,9.121595,0.021764,9.275529,0.581143,-0.425765,6.210067,-6.135401,9.126774,1.948032,-6.675791,8.611032,-8.769261,-1.169834,5.445808,1.849662,-7.472316,-9.432333,-3.986230,-8.778235,1.419010,-4.521898,8.063365,1.530569,-2.107765,4.514208,-1.890347,8.111487,5.975907,6.026098,-4.397573,-8.086256,8.856521,-4.010229,-9.469789,-6.292071,-5.226354,-9.442656,6.542875,-2.492058,-9.311427,-2.328781,-9.548790,-5.652712,1.998275,-8.192496,-6.464111,9.210003,3.328321,-8.177268,-0.073010,5.825916,5.592722,-6.222127,-7.770300,8.095427,9.804672,7.382176,1.220486,6.258855,-3.813974,-1.665460,-9.094193,-0.268106,-0.985911,9.334993,7.103432,1.071149,4.574704,3.327831,-1.579853,-7.162526,5.716237,-7.600645,2.298420,6.305671,1.284195,3.422423,1.331650,-1.747923,-7.854405,-5.245134,-9.471980,-2.974466,-6.972584,4.108757,-8.623502,-9.832097,-3.166778,-6.759479,-2.877777,6.303140,-6.107961,-2.393269,-0.922740,2.593661,-4.442043,4.491998,4.246273,-8.232612,2.034169,-9.811425,-0.052230,8.221183,9.853372,-2.770697,-1.661499,-2.634296,-3.548603,-0.874439,4.117850,2.204649,-0.314446,-6.229534,0.714525,3.128596,3.916043,-0.825919,-4.539878,-5.973149,-6.887816,1.463762,-4.615029,0.190979,-2.018784,1.573372,6.837770,-5.063702,9.702920,9.407591,0.542119,-8.241871,-8.048267,-6.318224,-0.178513,0.301147,-7.545392,7.392285,-8.464031,4.261622,1.407459,-6.205788,-5.523618,-6.576282,2.221548,-9.788900,-0.033972,0.187524,4.656957,0.650333,-1.537623,-7.884251,4.752952,7.646297,-7.913193,0.612914,-8.378940,-2.711768,-6.261036,-6.801924,-0.473826,-8.458607,4.993847,-5.323665,-7.809083,6.468643,-6.901841,7.799215,3.202796,9.146637,6.066192,4.986654,-1.699798,-1.324687,-4.461789,-7.663153,2.648588,8.638458,4.517535,-4.735382,8.300953,-4.465174,0.773359,-4.445533,7.078517,5.623370,-1.402906,-8.607185,-7.519268,7.041464,9.064076,-9.262826,-0.141351,-2.484833,6.798384,7.778373,-6.082241,-3.212276,4.355630,-3.207832,-7.886912,-5.854607,9.263145,6.292749,0.343568,-9.013533,-4.787262,-9.448849,8.822373,-1.292645,7.121227,3.736932,-8.122188,8.448948,-1.404519,-7.895054,9.412722,8.577363,4.306693,6.823072,7.039517,4.660494,-5.845053,7.153368,-0.125942,-2.511389,2.542788,4.834130,3.658747,-3.024631,5.596047,-2.659934,7.231159,2.801899,-0.188558,7.939383,-7.046748,0.247793,-1.445990,-5.135898,5.296737,-1.892354,5.482504,-0.910631,1.319109,-5.338856,9.873607,4.557516,1.724032,5.282285,1.986164,1.613254,8.362343,-9.092072,8.435338,3.907066,9.740094,-7.055107,8.057650,1.120507,1.995019,0.645255,-0.608304,8.694395,5.671137,6.887383,5.557120,3.360434,-9.898558,0.416125,-0.039832,-1.575422,-5.996936,-5.752514,6.521055,-6.692795,-3.380871,0.120981,0.845873,-6.146308,0.261765,5.486223,-6.110775,0.250361,4.286548,7.804784,6.230640,4.930679,-3.099741,-8.014501,-9.127691,-0.070133,-9.765133,6.609313,-7.886178,2.519028,-7.339720,-2.241090,4.260960,6.277281,-8.177666,-4.153642,-8.219199,-0.176799,-4.835317,-1.118885,0.667270,2.092172,-7.841185,7.185681,-3.979590,-6.451292,-8.155253,2.314202,-7.886296,-2.306579,0.650158,8.141856,-1.624982,-8.906171,-2.638038,3.045059,1.767440,4.254811,-3.867494,-9.381015,7.470054,9.786985,-4.980901,3.878323,2.152652,7.383658,5.714032,-1.981417,-6.655869,-3.085353,7.163348,3.447187,-5.754105,-7.751743,9.716439,6.182027,2.786720,-5.147314,5.695061,-9.356153,4.191761,-5.929599,-0.464884,7.270455,2.511094,0.093628,2.298844,-8.436034,-8.872643,-4.842533,7.636682,-4.299288,-3.588168,-3.438808,8.197854,-6.239764,7.104117,0.460243,1.994891,-8.809608,-6.971383,6.941594,-8.159491,7.037343,-2.458037,0.281021,8.633335,-8.508239,-6.414401,4.071055,-4.776407,3.407342,-7.243538,8.261345,2.377088,7.511485,-5.117699,3.910254,-0.907842,3.580052,6.223125,-9.173630,-7.355026,-7.722145,-8.835522,-8.252258,-3.762678,-1.263899,-4.140543,-9.290454,7.382342,7.897481,8.748034,5.887193,8.982622,-7.469972,9.254245,4.190279,-4.021353,-0.845112,-8.599523,1.658275,-5.655623,7.064237,2.206498,-5.095573,0.260514,-9.828384,4.244511,-3.675861,-5.749339,4.139628,-4.544009,-5.144171,-3.478573,4.167166,3.384972,4.039302,-3.575267,9.405153,3.512061,-2.886981,7.011390,9.968581,-5.265028,-7.883423,-1.816596,-2.597474,-8.038165,0.467762,-1.770695,0.457714,5.988084,2.491657,-0.191105,-8.091637,7.623167,-4.064886,9.251643,6.196249,-6.490400,1.621269,9.588637,2.365926,-1.977929,-3.660939,7.806101,-4.767672,7.648743,-6.865599,-3.656707,8.635587,4.320457,9.934173,3.908790,7.723123,-4.190652,-0.892712,-1.417685,5.553661,5.835420,6.514161,-1.239116,0.711383,-9.629974,8.637735,-3.774096,-4.453145,-7.041396,1.470149,-3.945248,1.535539,4.780737,-9.830241,2.297353,-8.908625,3.899865,0.047038,4.225464,7.203515,-2.341690,8.805022,8.154082,7.845743,9.683243,6.825380,7.795620,-2.575474,8.134294,-3.782369,-2.175378,3.596931,5.999803,9.332634,8.408698,-0.355269,8.074827,1.968728,8.256933,2.952339,8.373048,-4.022917,2.507546,9.302129,1.968457,-5.090692,-7.465265,6.665998,-0.854957,-6.074301,-1.105439,-1.779770,-3.366668,-6.502462,-4.739176,-0.746163,9.867740,-9.881570,4.595440,8.176784,3.986310,6.176849,7.835366,0.221166,7.222115,6.359840,-4.766639,-0.885611,9.081379,-7.330759,-7.990325,7.148014,1.791789,-9.683264,6.851450,1.306963,8.951010,-0.810987,-8.441363,5.565117,-0.734023,5.442090,-2.871691,9.269035,-6.117575,5.127953,7.855553,-0.418734,-0.225122,3.930566,-6.546687,-7.841932,9.059998,-1.492441,5.006406,-4.874103,5.975418,-0.890921,2.567655,1.262161,-6.240421,-8.088381,-2.608459,-7.146093,6.656640,-1.200003,0.453616,-1.029767,-7.977536,-1.971479,-1.098717,6.285664,-6.265065,9.543620,2.977647,4.809818,5.544739,1.923088,4.781266,-4.179750,-2.963723,-0.285278,2.035734,-8.481899,-8.556424,9.059691,5.452518,-6.101781,6.958120,9.146187,-9.239298,-4.760839,-5.656509,1.996009,9.278342,6.819841,9.125957,1.633668,-7.236878,-7.076790,-9.967779,5.605222,-6.281271,7.590879,2.386611,-3.467299,-1.033430,3.445516,0.644429,-1.089138,-2.528562,-4.249004,7.641187,-6.981740,7.456633,-5.979763,7.659695,-2.706020,8.265804,3.479659,-5.967657,8.250447,-6.981477,-2.709623,4.221491,-3.281452,-4.749949,4.772197,6.832795,2.513500,-3.288803,-9.287354,8.428924,6.940915,4.677852,7.027324,1.173525,-2.151815,3.665993,6.012093,7.364569,-9.971339,-1.308654,5.286184,3.601987,-0.455059,4.817506,4.672306,1.729840,4.450904,0.662784,0.955297,8.485111,-4.445794,-1.575867,-9.174313,-9.271203,6.077040,-5.797409,-8.478428,8.076251,-8.506658,9.077916,4.317886,-0.268305,8.322841,0.797307,-9.815373,-9.074011,9.347431,-6.900557,-9.097749,-9.686574,4.004401,8.822345,-7.140049,2.229549,6.169218,3.169231,1.741445,5.519131,5.744253,0.426823,-4.669484,2.704062,-1.320415,2.470623,-0.031027,-5.442452,-8.748971,2.314695,-8.136818,2.436398,9.026616,-5.102049,3.080375,-9.337534,-9.198928,-1.600856,2.357874,-8.688925,-4.565218,6.329024,9.485750,-3.509656,5.236919,8.505804,-5.761050,9.943205,8.673193,3.155630,3.942967,5.300404,5.696346,-0.328906,9.664699,9.276446,-4.388852,-5.217269,-9.271260,-8.173425,-5.190947,-4.867942,-6.002289,4.206229,9.865288,-6.435802,-1.172392,5.606843,-1.436932,-6.231017,-2.491805,6.937052,-7.880851,4.949132,-5.344421,-8.245406,9.000614,-6.296998,-8.649691,6.228548,-5.506422,6.751204,5.722127,-9.787343,-3.827032,-7.575517,-8.401230,-1.602643,4.798278,-7.062149,0.338058,2.161498,4.062448,-7.746787,7.431407,2.898135,-6.689555,-9.470160,2.112585,7.776113,9.827293,4.122503,4.755484,0.943010,2.565027,-2.769546,-9.929233,4.567503,0.865041,-4.188494,5.998371,-4.134004,-4.494913,1.023494,-6.471516,2.293376,-6.732937,1.293603,-2.832770,2.370310,-1.940696,-1.063031,7.998610,-9.766758,-9.236740,3.600663,2.173520,2.980650,-2.753441,0.935799,9.046637,-2.472099,5.793669,8.696347,-8.335020,9.517602,-8.682435,-2.176641,8.896913,3.150228,2.597589,7.595337,-4.399855,-8.585561,-1.947674,7.034711,-9.301532,5.802144,-7.454997,-4.818233,4.847396,3.161177,8.989026,6.324027,0.513216,-6.589348,5.499086,8.247309,-2.586829,-4.810741,1.044449,-4.179513,-2.613586,-5.204807,-5.583601,8.473871,-1.075173,-5.289453,-8.495525,7.001797,-8.336995,-7.591136,4.891780,2.865573,3.138654,-4.823171,-9.699270,5.132590,4.386448,7.798249,-4.640015,5.958475,6.511845,-3.219940,-0.161649,5.544065,-0.505893,-0.582470,8.686694,6.307680,-6.143064,-2.997950,1.248484,1.356120,3.666989,-3.610115,6.678090,-9.067530,2.579302,8.982160,-0.148530,-5.847670,-4.247532,1.692928,3.276079,5.877151,-6.192613,-0.388365,8.183811,-8.494455,-0.949212,-3.415558,9.384795,-5.964385,1.266497,-8.917451,7.638645,-7.656929,3.267224,6.431458,2.829056,-3.930481,-1.727699,3.383757,-9.160936,-8.132544,-2.909907,2.048578,-6.681168,4.559951,1.542437,8.608456,-8.174264,-3.895278,8.060197,-4.227007,-2.072329,2.670648,1.172375,-0.866853,-5.012168,-3.059646,1.562193,-2.488647,-3.636385,-7.746982,6.830691,-2.260422,8.610115,-6.396759,-6.132333,7.717185,0.419785,-7.039384,3.391933,5.940186,5.856667,1.087001,0.515370,-6.521934,9.145784,0.186656,6.009149,-8.887511,-7.615724,7.934653,-3.647926,-2.487265,7.883180,-7.805042,8.345463,3.883533,-9.015387,-2.059595,-6.210067,7.746888,2.821198,3.853716,-6.972033,3.086599,-1.868777,4.184855,-2.780821,-6.247068,-4.789238,-3.122879,-8.953284,6.275830,-7.372603,-3.209871,-8.558501,-6.800915,-6.303602,-2.512360,-1.370357,-0.022320,6.003256,3.150140,0.943317,4.776081,-6.893539,8.974869,8.311130,0.951629,-4.121926,6.236542,4.172941,-4.976876,2.914552,-5.385420,1.804086,-6.339148,9.499307,-1.811471,7.261079,-6.962438,5.806558,7.595533,-6.492863,2.657518,-9.207708,-0.236518,-9.635863,-7.802793,7.970694,6.481832,7.911204,2.897914,9.336267,4.813300,-7.643767,0.603704,8.117702,-2.611867,9.336724,1.858616,-2.201899,-9.652760,-6.322582,-5.042480,9.256964,-3.798331,6.592372,3.975793,6.968441,-0.311283,7.805752,-2.309398,-5.886724,-1.878005,-3.502196,6.250524,6.172117,4.974505,-8.508988,-6.228840,-2.038554,-3.272880,-9.983100,-4.706049,-4.938557,1.490894,-9.631399,1.281534,9.816801,0.485821,0.093792,-7.767573,-2.655248,-6.291849,-8.251658,-5.809346,-1.667154,-1.928809,2.014048,-7.250927,0.402894,2.147485,4.386744,-1.074905,-0.609422,-3.495464,8.401164,7.405434,8.583946,-3.606899,-4.339269,-3.948070,-3.487195,5.349775,8.702312,4.599024,-3.530207,2.689773,0.534493,-0.895729,0.428505,3.919503,5.313283,-8.090877,1.715791,-4.917780,7.215392,-1.325608,-9.859824,7.785357,4.943776,-4.271618,7.327467,-2.436106,-5.860590,2.717565,7.394184,-5.704485,3.780763,0.558922,5.958070,-1.778005,-1.744429,-3.049166,-3.174140,4.112823,9.726466,0.390572,5.589899,6.934915,-5.043193,6.589802,-5.030565,8.938147,-6.659145,-2.649786,-2.726062,-7.826026,7.304932,3.643809,6.936031,2.869876,1.992196,3.995604,-9.666919,-9.606621,5.025539,0.724875,4.607034,0.087864,9.511577,3.418909,-4.184634,8.704676,0.532771], dtype = "float64")#candidate|2379|(2816,)|const|float64
var_2380 = relay.var("var_2380", dtype = "uint16", shape = (180,))#candidate|2380|(180,)|var|uint16
call_2377 = relay.TupleGetItem(func_2124_call(relay.reshape(const_2359.astype('int32'), []), relay.reshape(var_2378.astype('int32'), [1, 1, 5]), relay.reshape(const_2379.astype('float64'), [2816,]), relay.reshape(var_2380.astype('uint16'), [180,]), ), 4)
call_2381 = relay.TupleGetItem(func_2129_call(relay.reshape(const_2359.astype('int32'), []), relay.reshape(var_2378.astype('int32'), [1, 1, 5]), relay.reshape(const_2379.astype('float64'), [2816,]), relay.reshape(var_2380.astype('uint16'), [180,]), ), 4)
bop_2388 = relay.multiply(const_2379.astype('uint64'), const_2359.astype('uint64')) # shape=(2816,)
output = relay.Tuple([bop_2341,call_2357,var_2358,var_2360,var_2361,call_2377,var_2378,var_2380,bop_2388,])
output2 = relay.Tuple([bop_2341,call_2362,var_2358,var_2360,var_2361,call_2381,var_2378,var_2380,bop_2388,])
func_2414 = relay.Function([var_2339,var_2358,var_2360,var_2361,var_2378,var_2380,], output)
mod['func_2414'] = func_2414
mod = relay.transform.InferType()(mod)
var_2415 = relay.var("var_2415", dtype = "uint8", shape = (3, 6, 14))#candidate|2415|(3, 6, 14)|var|uint8
var_2416 = relay.var("var_2416", dtype = "float64", shape = (60,))#candidate|2416|(60,)|var|float64
var_2417 = relay.var("var_2417", dtype = "float32", shape = (154,))#candidate|2417|(154,)|var|float32
var_2418 = relay.var("var_2418", dtype = "uint64", shape = (1664,))#candidate|2418|(1664,)|var|uint64
var_2419 = relay.var("var_2419", dtype = "int32", shape = (5,))#candidate|2419|(5,)|var|int32
var_2420 = relay.var("var_2420", dtype = "uint16", shape = (180,))#candidate|2420|(180,)|var|uint16
output = func_2414(var_2415,var_2416,var_2417,var_2418,var_2419,var_2420,)
func_2421 = relay.Function([var_2415,var_2416,var_2417,var_2418,var_2419,var_2420,], output)
mutated_mod['func_2421'] = func_2421
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2500 = relay.const([[[-0.151658,5.968477,1.996372,7.224837,0.266617,-0.257225,7.469566,-6.292741,-0.198125,7.626079],[-1.917126,-8.216761,-3.327161,6.869220,4.782420,2.255880,-7.401668,0.679581,2.109264,3.931060],[9.305325,3.958319,-8.261096,9.457130,-2.018469,-9.207836,-4.635196,-8.616712,6.990939,-8.038444],[9.792789,-3.354989,-9.984984,1.782499,-5.050410,-8.143510,-0.447681,-1.775786,3.690461,8.525055],[-7.964315,-9.508670,6.715880,5.278209,-9.418087,5.738159,-0.386860,1.810250,5.049665,-7.801256],[-0.630439,9.499887,5.851163,6.065344,5.939552,-7.561021,-7.493749,-9.897926,-0.098589,-0.949903],[8.777006,-9.461853,6.711646,-1.534915,-3.929424,4.568540,-7.525456,0.596424,-8.931569,-1.716417],[0.005053,-4.994668,-4.087091,5.214009,-7.816493,8.131576,3.327904,6.813346,-1.800906,2.828664]],[[7.883407,2.857835,6.818958,2.816267,2.481340,4.887648,-1.110306,5.045773,3.636042,5.268488],[-2.501274,0.756103,-6.329162,0.581250,1.469674,4.730371,4.979677,-0.011772,1.863749,-3.464795],[7.668909,-8.288859,6.592004,-1.051746,-8.165299,3.788272,9.145563,9.828012,4.010491,-2.330334],[4.557342,3.777653,-6.372851,-9.902025,6.842098,-3.620599,-0.355130,4.535707,-1.909809,-9.232037],[1.812890,-8.248169,7.110596,0.689150,-4.226956,8.936283,6.452777,-5.950510,-0.211654,-4.165878],[7.163779,-5.856740,3.418122,-5.434452,-4.341592,-4.655357,-4.920827,-1.954718,-8.463004,-7.228537],[9.196740,8.858726,2.979466,-3.850902,-8.264492,6.380502,4.643706,9.938281,0.793314,9.018323],[1.584403,-4.261136,-5.772813,0.759691,-2.383117,9.619619,8.085720,-3.699614,-1.548413,-2.526350]],[[2.248234,-2.409440,5.343559,1.454474,7.483817,-8.941851,9.549603,-3.770286,5.680471,-5.830468],[-3.206518,0.925762,-3.614817,-3.500067,-8.530186,9.838536,-0.660008,9.311573,-9.299613,3.617590],[3.786908,-4.734278,-1.504305,-7.990826,-6.509530,1.438326,-8.029102,-4.456627,-5.752130,3.617140],[6.409552,8.145494,-2.267275,0.261297,3.634493,1.905414,7.928248,6.108513,-7.491556,6.428755],[8.072587,9.291135,-3.348823,-2.883308,-7.894869,0.200025,1.438161,-2.861147,8.310928,-4.800030],[-7.636267,8.876313,7.789648,7.413505,-3.051914,-3.709089,1.398931,8.975223,4.542601,-9.243243],[1.401759,1.510188,-8.175333,4.512400,2.924061,8.462861,6.928058,7.439317,6.226901,-1.841012],[-9.650948,6.437985,7.278208,6.196436,8.667145,-5.450641,7.672773,8.662818,9.014060,-7.289762]],[[-0.889971,-7.543068,-2.446207,-4.503366,-0.828501,-9.372946,8.513319,-8.077592,-3.426943,8.368344],[-4.929128,3.937141,2.836572,1.963501,6.997462,4.903265,8.096447,0.796072,-2.712444,-6.082991],[-0.878815,8.716542,-3.422056,-2.982314,7.346597,-5.037025,-1.487979,5.867920,-8.906973,-7.711197],[-9.350303,0.880512,-3.980200,-3.142213,-7.183802,6.241616,0.089087,-5.680443,3.209424,-3.787926],[-4.166524,-9.334800,-3.730626,-4.665170,-2.150712,-0.167398,2.222096,1.816082,-5.439351,-8.486738],[-0.144509,-0.143513,-2.384020,0.828987,7.476961,-1.365181,2.980868,-6.320190,-2.858061,-8.395033],[-2.662661,-6.561739,4.093556,3.002221,3.401796,-5.919977,3.578059,0.304475,-5.847919,6.870702],[-3.706344,3.329981,-0.364339,-5.980577,4.574016,-2.337081,6.863535,2.545454,-5.591935,5.173490]],[[-5.913618,7.880651,-0.312647,1.668092,5.044299,-1.231191,-4.357806,5.539144,-0.068036,8.058604],[1.383264,4.333154,-3.128308,1.068144,8.158795,-4.918049,-4.142748,3.190062,-3.864223,6.125494],[-7.078298,-1.817510,-1.985833,0.196059,5.527851,-5.918550,-7.894270,3.231441,-3.879904,9.478828],[6.998892,2.432185,5.971319,-8.101534,7.193793,-7.487455,-2.855331,-7.097018,-7.027988,9.981861],[-9.087444,-1.096000,3.604843,-7.653867,-4.884620,1.044188,9.844407,-9.875929,4.831860,4.966384],[-4.728177,-2.824437,-1.878787,4.755796,0.684150,-6.823567,-8.458545,-9.721151,-3.811592,0.750272],[1.566337,1.636956,5.330734,8.134324,-6.361373,5.302698,-9.538169,2.738684,-0.177068,-7.891248],[4.532700,-0.284156,5.441835,1.007117,4.316438,0.562942,0.974542,2.324935,-4.884503,-7.365633]],[[9.392989,2.596650,6.058655,-9.263036,-4.769401,7.227103,7.329564,7.991872,9.850185,0.333885],[-6.305926,4.674402,3.837919,-4.472530,5.148236,-0.971358,3.125681,8.994619,5.744769,-4.441173],[-7.445724,8.305738,7.791671,-7.100993,-8.600913,0.559672,-0.222927,-0.749763,-6.577808,0.648653],[1.367673,-9.681569,-4.241086,-1.512184,-2.182455,7.882932,-2.478282,-8.516808,0.357827,-9.319888],[-3.637156,-4.018369,-5.244953,-9.259601,-8.084770,0.540785,-0.569722,-7.397165,0.184827,-7.501756],[2.979965,-8.882866,-9.534894,-5.964695,0.380167,8.500429,-9.499360,1.562074,9.506803,6.837687],[8.570105,7.723751,7.501127,-4.511273,-2.306569,-8.053065,-3.625619,-9.676562,0.728748,6.196217],[4.928321,7.386943,-6.586347,5.864353,-5.636995,3.551785,8.774744,0.581895,-4.983536,2.102235]],[[-3.886227,7.422089,-8.994426,-8.221195,-2.493617,-4.822963,-0.479533,0.250301,-6.899693,-9.110417],[-7.279737,9.154048,9.031124,-3.885218,-2.486355,-3.948061,7.092375,-4.667407,9.085613,3.640874],[-6.321863,-3.823004,3.586413,2.335167,-6.426283,6.707623,-4.795584,-5.812067,1.436850,3.814344],[-8.226854,1.589888,9.536725,8.297561,-6.645339,-0.368788,-3.907615,8.529287,6.167501,-2.771481],[7.539955,-2.547111,-3.770374,6.249500,2.992476,8.471280,-4.682861,8.351716,-2.155944,8.407970],[3.784619,8.991375,-1.359210,-4.882878,-1.507911,2.835209,-7.695981,7.631348,-0.377838,-5.856497],[3.257810,7.030963,-2.822017,-8.210892,2.768386,4.776508,8.067460,-9.446001,-1.759987,2.477310],[1.043104,-1.896904,-2.010506,-7.176524,-5.263379,-9.782703,2.885430,5.340523,-5.299509,-7.941730]],[[4.016250,0.100818,6.817526,-3.508092,-6.959503,-4.353800,-2.536313,9.453331,-4.135150,5.560270],[-3.921523,-3.100518,6.066659,-1.568998,3.104182,4.795277,-4.198749,-1.772117,2.721353,7.162581],[-2.372734,8.069155,-9.341642,-5.391151,4.575604,3.699295,8.334113,4.443017,-2.700960,5.313137],[-8.144473,-4.552350,4.494965,-3.832757,-0.264056,-7.293454,9.550216,4.047896,-3.826411,-7.110855],[-9.150549,8.372926,-0.973129,-1.951174,-6.342724,-6.905761,5.223022,-9.074596,5.550489,6.453367],[-8.686014,4.336791,8.678296,-8.696521,-6.249444,8.938419,-4.364806,-8.151199,0.791227,9.681774],[-6.026073,8.094710,8.950834,-1.711337,-2.238974,-3.182296,8.366867,0.058607,-3.149629,-5.105284],[-1.094898,4.741496,5.451927,1.491360,9.999014,-6.458864,5.700914,7.357490,6.882552,6.366876]],[[4.877116,0.965727,8.790299,6.896403,-3.751997,-6.161316,-6.117998,5.558932,-8.217676,-0.601111],[-0.684725,9.116464,-9.199945,-5.296069,6.465302,-9.580242,2.223816,6.685002,-7.628244,-4.872921],[1.955424,9.830395,9.564956,5.561830,-4.594628,0.333799,-0.901623,-3.439113,2.132817,2.863252],[-4.923087,2.214108,1.192027,6.770734,1.021835,-9.467360,-8.864526,-6.089499,-3.282531,8.693058],[-8.069915,6.667658,-0.276326,9.532729,-6.063841,-0.041797,-4.886189,-1.922743,-8.280171,9.889049],[-0.853973,-3.018358,-8.433124,-3.602190,-7.609521,8.286287,-7.429549,-9.964222,-6.378173,-2.843405],[-6.846839,2.952558,-8.524751,-4.225893,7.818940,-4.975006,4.419995,5.032107,-3.416167,-1.740830],[5.919958,6.173112,7.310371,-9.773832,2.697689,-7.656467,3.557901,5.564562,-1.027699,5.190024]],[[6.915573,4.619251,-9.219413,-7.762691,-6.782719,-6.848573,-4.078739,1.813044,7.146628,9.433857],[-7.306779,-6.382407,-4.205483,5.328343,9.434192,-6.073152,-2.319263,4.891699,-7.222587,1.988217],[-3.624459,7.928509,1.351215,-8.268027,-0.692893,-8.434704,-4.154031,5.821408,-4.086415,2.174158],[7.407217,-7.611523,3.304897,-7.248710,-3.487171,-0.504640,5.898908,2.576881,-4.397943,1.680589],[-5.147524,1.016425,-6.753161,1.099960,8.444730,-8.152110,-0.482634,-8.434862,-9.289401,-1.375457],[8.208258,-1.894934,-0.916297,2.779633,5.640236,6.206626,-2.080232,-1.295718,4.273852,7.757221],[-5.572828,2.218784,0.163061,-6.272388,8.771295,-9.898688,7.705847,4.971381,-2.012324,-8.863386],[-7.996001,6.196702,-5.393023,6.530184,9.423448,-8.662866,0.020781,3.123014,-2.051342,-1.127034]],[[-8.023927,-1.250462,1.046469,1.102061,-0.091550,-7.290969,2.483965,-2.729338,4.845604,-5.962015],[-4.503193,9.828628,-4.306066,-8.008913,-8.727449,-2.803225,0.543205,4.371444,1.160775,0.882934],[-1.059488,-9.101337,3.113360,-3.572997,-9.179854,-9.265799,9.920067,-5.466678,-0.129974,-2.075657],[-1.786841,3.145905,3.325821,-1.084561,7.308232,5.532562,8.160067,9.019251,-4.935085,-4.873580],[-8.772893,0.556433,-8.248413,-3.759718,6.604008,0.132037,2.486801,5.420904,3.728598,4.118677],[3.324533,2.704489,-6.331144,-7.089104,-5.521522,-9.613987,4.333247,-6.718737,0.879180,-7.981228],[-3.171832,-7.448376,-0.023171,-3.774719,-6.463802,-7.363658,-5.427695,-9.771667,-8.365184,4.798460],[8.763497,-8.000195,-4.557373,-1.891874,1.219189,-0.322715,6.919880,7.100133,-4.789458,8.816179]]], dtype = "float32")#candidate|2500|(11, 8, 10)|const|float32
uop_2501 = relay.cos(const_2500.astype('float32')) # shape=(11, 8, 10)
func_134_call = mod.get_global_var('func_134')
func_137_call = mutated_mod.get_global_var('func_137')
var_2509 = relay.var("var_2509", dtype = "int8", shape = ())#candidate|2509|()|var|int8
var_2510 = relay.var("var_2510", dtype = "int8", shape = (154,))#candidate|2510|(154,)|var|int8
call_2508 = relay.TupleGetItem(func_134_call(relay.reshape(var_2509.astype('int8'), []), relay.reshape(var_2510.astype('int8'), [14, 1, 11]), ), 0)
call_2511 = relay.TupleGetItem(func_137_call(relay.reshape(var_2509.astype('int8'), []), relay.reshape(var_2510.astype('int8'), [14, 1, 11]), ), 0)
func_2124_call = mod.get_global_var('func_2124')
func_2129_call = mutated_mod.get_global_var('func_2129')
const_2520 = relay.const([3,1,-3,-4,2], dtype = "int32")#candidate|2520|(5,)|const|int32
var_2521 = relay.var("var_2521", dtype = "float64", shape = (2816,))#candidate|2521|(2816,)|var|float64
const_2522 = relay.const([[5,2,-9,-6,10,3,2,-9,3,4,-9,7,1,4,-10,-8,4,-8,4,7,3,2,-9,-10,9,4,-4,7,1,-9,-8,5,-8,4,8,8,3,-9,-4,-5,-6,-1,10,-8,-9,-5,5,-8,-4,4,6,-7,3,1,8,-10,-5,-5,-9,7],[1,5,-1,-6,5,-10,2,-10,-3,4,-5,6,-7,4,-5,4,-4,-9,-1,-1,-4,7,-6,1,-8,-1,-9,-4,7,2,10,7,6,8,-4,4,-9,4,-10,7,1,-2,6,-9,-3,-6,-7,-4,2,10,2,-3,-5,-6,-5,-2,10,9,7,10],[8,-2,8,10,1,-5,-4,-1,7,-3,-10,-7,8,-8,-3,-6,4,-8,5,4,7,-8,-10,-9,6,-7,6,1,-1,10,9,7,-3,10,2,-5,-5,-10,-2,4,-1,-8,-7,1,-10,-6,-7,4,7,-10,-10,-7,-10,2,6,-1,6,-3,10,3]], dtype = "uint16")#candidate|2522|(3, 60)|const|uint16
call_2519 = relay.TupleGetItem(func_2124_call(relay.reshape(var_2509.astype('int32'), []), relay.reshape(const_2520.astype('int32'), [1, 1, 5]), relay.reshape(var_2521.astype('float64'), [2816,]), relay.reshape(const_2522.astype('uint16'), [180,]), ), 2)
call_2523 = relay.TupleGetItem(func_2129_call(relay.reshape(var_2509.astype('int32'), []), relay.reshape(const_2520.astype('int32'), [1, 1, 5]), relay.reshape(var_2521.astype('float64'), [2816,]), relay.reshape(const_2522.astype('uint16'), [180,]), ), 2)
bop_2531 = relay.multiply(uop_2501.astype('int64'), relay.reshape(const_2500.astype('int64'), relay.shape_of(uop_2501))) # shape=(11, 8, 10)
func_339_call = mod.get_global_var('func_339')
func_342_call = mutated_mod.get_global_var('func_342')
const_2537 = relay.const([-8.492003,3.481071,5.891553,-3.234857,0.162640,-3.877299,-2.447061,-5.297364,-5.290409,2.904053,-5.919950,-8.953555,5.584733,-4.258050,2.391206,-3.157534,-0.158171,-6.046877,8.536613,4.059635,0.489265,-7.885893,-1.830532,-3.712933,0.972194,-2.473454,6.561467,6.845339,-2.954189,9.719615,0.228855,8.144427,-9.080528,-9.945661,1.988888,-4.673165,7.719216,-0.391708,4.383763,-6.498018,-2.396895,-3.336895,3.732798,-5.513487,-2.011404,1.611732,2.019634,1.939462,-5.819686,8.847747,-6.683413,5.181921,-9.165114,8.536894,-8.298146,0.699914,0.856515,-9.490954,1.017320,-1.296216,3.857011,-8.748126,-6.528754,-9.348998,2.549476,-4.500061,8.459860,2.351951,-6.615602,7.035988,-3.038503,0.894018,4.792148,-4.827890,9.902925,-1.986568,-5.439265,9.844868,-3.792999,7.275129,-2.057933,4.705570,5.187411,6.220690,-8.506586,-6.127768,3.551648,-0.036755,-0.704349,-6.299980,4.654563,-0.067119,4.455730,-2.343784,3.810707,2.145425,-6.152521,2.134935,5.566355,9.037236,1.419948,-5.350482,7.164006,9.268217,9.120234,8.125895,-5.585204,-2.608000,-3.496278,-8.563902,-0.413334,7.344547,-4.745749,3.699173,4.149039,5.645796,-4.773494,-0.611722,-7.615846,2.743973,8.012836,-4.876354,-5.464597,4.591082,-5.011089,-4.465445,1.007554,2.023059,-9.084255,9.240512,1.926346,0.360106,-4.548541,8.607014,4.805070,-8.862013,-9.425822,1.056354,0.947792,8.645432,-7.331026,-8.534662,3.531288,9.399561,-5.051507,1.228344,-5.190678,-2.868911,-2.969865,5.565327,-8.634880,-1.719815,7.462073,-4.768458,-6.498684,-6.046919,8.299235,-1.916795,-7.394738,9.380030,-3.648728,-5.778969,6.650536,8.394722,-4.861304,4.836204,-6.443147,7.312613,3.398729,-0.974370,8.903075,-3.418718,-5.662487,3.714888,3.124616,8.807906,-6.478994,-8.173534,-3.755991,1.778357,-1.419723,-5.705883,9.197958,-4.375034,7.275679,-0.508408,3.586804,4.796580,-6.501993,-3.302190,3.204911,5.470794,6.717796,1.536116,-6.214801,5.449377,-9.948233,5.140734,6.181571,-9.313307,7.583940,-4.563731,-9.887352,-2.214153,-5.908809,-3.011265,-1.031594,3.624536,1.137352,-5.759514,-1.783426,-0.973105,0.637125,-2.998398,-7.941107,1.156181,0.378567,-3.807913,8.306326,-0.043925,-0.947931,-3.398590,3.216237,-4.643505,-5.580687,-0.096554,-0.787894,7.994219,-1.748397,8.968780,6.944466,-7.266917,-1.748284,-5.785341,6.426030,9.291896,0.549235,6.429573,-6.270457,7.282249,-2.973125,3.303829,-4.222338,-3.600856,-7.802394,5.151210,-2.950332,-8.618527,5.627929,-5.502132,-5.487594,-6.743746,2.576293,-2.925848,2.920435,1.078512,2.451182,1.458198,1.468223,-1.735255,7.138235,3.127654,-3.543084,-0.366178,-7.936082,-6.034539,-8.012053,-9.559707,-1.311289,8.787131,-7.249163,5.111678,7.001604,-7.540639,-0.412167,-3.690187,-5.402853,5.693943,-9.462068,-1.226799,2.475742,1.163656,9.593082,0.469668,-5.017658,-1.578010,0.015210,-0.476656,-0.795233,-4.996471,5.557759,-1.487426,-3.513844,-1.335643,0.048142,-6.592145,-5.323388,-6.110838,5.152944,0.806207,0.780998,6.463150,-8.725840,0.763845,-4.412668,8.249371,8.192390,3.135219,-8.802165,-5.349997,6.914016,-3.220468,-7.556833,8.102246,-5.281737,5.592061,-8.522487,2.134890,-4.425961,0.536884,-4.067361,-0.500059,-9.937913,5.919657,-3.537701,-1.886184,-4.278553,4.985065,-3.340170,3.694947,2.846123,-0.851902,2.628649,-9.238728,-2.421390,-3.856915,4.926662,-5.171124,-8.154145,-8.579558,2.638014,-8.250045,9.916772,-5.353490,2.400193,-7.746016,-2.149976,-0.970762,-6.988927,2.537294,2.904998,2.366641,3.541206,-7.960893,-0.991433,-0.723612,-3.655395,7.379588,-3.024544,7.275252,4.926379,-8.589011,-7.513655,5.022706,-1.869396,4.949835,-8.963930,-8.236219,4.722247,-5.224746,6.795686,1.918646,8.168597,6.022629,4.604916,1.744417,-7.011909,-1.885066,3.114375,-1.568459,1.744521,3.514470,-9.403192,0.973757,-3.135201,7.486256,-3.638055,1.473999,-2.818085,6.618180,9.285652,-2.593276,-4.579508,-1.462059,2.594317,8.831895,4.694026,-4.960655,-1.059315,7.854581,5.324889,-1.914390,0.002398,-1.995502,-3.824477,2.442088,-0.020614,-2.860619,5.061168,-1.754015,4.777163,3.796050,-4.992723,-6.929433,0.202782,-5.800832,8.630590,-3.675021,-7.576045,-5.684718,-5.745731,9.117500,2.460219,9.867422,-7.762497,7.112075,-0.103151,-4.032151,9.789531,4.525379,-4.252671,3.111786,6.340199,4.529676,-8.328670,-7.030879,8.525377,-3.306600,2.797358,7.920377,2.658183,4.606227,6.726897,5.433007,5.380816,4.215582,-3.612492,7.295158,-7.165175,7.388647,-7.790336,8.183320,0.186328,-6.186889,-3.195789,9.672095,4.313642,7.792969,-9.441034,7.815630,4.366685,-0.250841,0.791278,1.414725,-2.114432,9.685031,1.981402,-3.367346,-0.041629,2.300720,6.780879,-4.675921,-4.720419,1.287371,-3.155668,-2.257598,-7.988394,5.463432,-1.515106,1.208074,-0.833460,6.863406,-2.412232,-5.361159,-6.731995,4.849537,-6.576554,-7.492440,2.272399,-9.082886,-9.876755,0.432978,2.513385,5.755520,-9.176497,-1.764240,6.852768,-4.343568,0.548989,-9.119776,-8.742381,3.873558,8.603953,2.766004,-9.995197,7.973113,-1.708010,2.963475,7.312128,7.535507,1.739979,-7.377268,6.327453,-2.060387,-3.958706,9.584916,-8.126451,5.582813,-4.000347,-1.805379,-7.925819,-4.874388,4.759976,-0.067336,-0.001027,-4.776132,4.507294,-4.691346], dtype = "float32")#candidate|2537|(528,)|const|float32
call_2536 = func_339_call(relay.reshape(const_2537.astype('float32'), [12, 11, 4]))
call_2538 = func_339_call(relay.reshape(const_2537.astype('float32'), [12, 11, 4]))
bop_2567 = relay.bitwise_and(call_2508.astype('uint8'), var_2509.astype('uint8')) # shape=(14, 1, 11)
bop_2570 = relay.bitwise_and(call_2511.astype('uint8'), var_2509.astype('uint8')) # shape=(14, 1, 11)
output = relay.Tuple([var_2510,call_2519,const_2520,var_2521,const_2522,bop_2531,call_2536,const_2537,bop_2567,])
output2 = relay.Tuple([var_2510,call_2523,const_2520,var_2521,const_2522,bop_2531,call_2538,const_2537,bop_2570,])
func_2571 = relay.Function([var_2509,var_2510,var_2521,], output)
mod['func_2571'] = func_2571
mod = relay.transform.InferType()(mod)
var_2572 = relay.var("var_2572", dtype = "int8", shape = ())#candidate|2572|()|var|int8
var_2573 = relay.var("var_2573", dtype = "int8", shape = (154,))#candidate|2573|(154,)|var|int8
var_2574 = relay.var("var_2574", dtype = "float64", shape = (2816,))#candidate|2574|(2816,)|var|float64
output = func_2571(var_2572,var_2573,var_2574,)
func_2575 = relay.Function([var_2572,var_2573,var_2574,], output)
mutated_mod['func_2575'] = func_2575
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2623 = relay.var("var_2623", dtype = "float64", shape = (8, 12, 16))#candidate|2623|(8, 12, 16)|var|float64
uop_2624 = relay.atan(var_2623.astype('float64')) # shape=(8, 12, 16)
output = uop_2624
output2 = uop_2624
func_2631 = relay.Function([var_2623,], output)
mod['func_2631'] = func_2631
mod = relay.transform.InferType()(mod)
mutated_mod['func_2631'] = func_2631
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2632 = relay.var("var_2632", dtype = "float64", shape = (8, 12, 16))#candidate|2632|(8, 12, 16)|var|float64
func_2631_call = mutated_mod.get_global_var('func_2631')
call_2633 = func_2631_call(var_2632)
output = call_2633
func_2634 = relay.Function([var_2632], output)
mutated_mod['func_2634'] = func_2634
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2650 = relay.var("var_2650", dtype = "float32", shape = (11, 7, 3))#candidate|2650|(11, 7, 3)|var|float32
var_2651 = relay.var("var_2651", dtype = "float32", shape = (11, 7, 3))#candidate|2651|(11, 7, 3)|var|float32
bop_2652 = relay.floor_mod(var_2650.astype('float32'), relay.reshape(var_2651.astype('float32'), relay.shape_of(var_2650))) # shape=(11, 7, 3)
func_2631_call = mod.get_global_var('func_2631')
func_2634_call = mutated_mod.get_global_var('func_2634')
const_2659 = relay.const([9.522724,-5.893975,-5.331270,-0.709832,-9.593557,4.756385,7.601681,2.309816,3.780224,3.792670,9.173498,0.493380,-1.616152,-1.463612,4.282666,5.452153,0.457213,4.861217,-0.883791,1.358546,5.089251,-0.578436,-1.881038,1.567011,7.087637,-3.656131,-0.810602,9.589011,-4.136881,-6.359638,3.343693,0.257476,7.336086,-8.408147,-5.564835,-0.081153,-5.946892,-7.372641,-0.115640,7.561411,-3.239592,-8.222840,7.107571,-9.949425,5.726574,7.157596,-6.454127,6.218938,-8.416516,-1.405337,0.938469,-0.119194,3.407811,-7.490709,9.838006,1.870270,-7.789924,-8.953036,4.779247,9.688858,0.792264,-9.799380,2.650928,3.857874,5.677907,-7.433685,-3.085631,1.662064,4.377954,0.400613,8.522255,7.459437,-8.479111,4.428138,-4.761145,-2.673455,-2.501360,8.328147,-5.960570,7.352899,-4.376522,9.705188,-4.678651,4.389540,-9.681256,-3.338199,3.287720,2.586304,1.136315,-7.452002,-0.859618,2.562158,1.658789,-7.454752,5.951266,2.953983,-9.464293,-6.735954,2.977079,-6.138887,-9.941821,1.942421,-7.441287,1.535378,-1.154523,0.300333,-2.843738,6.411511,-3.219245,-9.612444,5.763535,2.600438,-6.913159,-6.341453,2.962049,1.686424,-8.984188,-9.997947,-6.442697,-7.409706,1.954109,6.505492,2.597124,2.485397,-2.975819,3.481262,3.814976,8.505377,3.215745,-5.268980,4.851737,-9.981917,-2.948233,-4.337920,0.181876,7.541524,3.905595,-4.779746,7.754779,-5.733610,5.339405,7.126386,-9.766581,-4.137247,5.279020,4.305962,4.525035,-6.942602,-9.338282,-0.355513,7.998523,-4.252468,-6.132107,5.639044,-0.764392,5.126250,-7.342712,-5.805962,-3.914505,-7.867968,9.375175,-0.247699,9.278027,2.061769,0.257604,9.493069,0.719328,5.019369,6.684455,-3.413230,-7.679062,5.188207,-1.653451,-2.255650,7.247054,-4.141127,-6.341728,4.292989,2.696209,8.457705,-6.419042,-7.254982,-7.478639,7.018148,-9.519459,8.009344,0.497798,7.117037,-7.493212,-3.777030,-8.632621,5.115446,0.880899,0.087435,7.696924,-5.048363,3.198782,4.865266,-5.762006,9.082664,-8.307314,-6.324807,-4.466453,-4.053599,7.080719,-3.921196,9.783108,-0.655160,-0.248906,-2.064823,-6.627700,6.147130,9.076703,4.882974,6.402551,-8.040670,9.075966,1.484892,7.624379,-1.742269,3.811557,-2.652530,-7.948403,6.017478,-3.754181,-5.061522,-9.427460,8.398206,3.932331,-3.521174,7.783172,-7.889824,3.279216,-4.756841,4.299487,0.583212,3.651863,-9.651945,-9.021183,-9.460746,8.136232,0.506565,-4.378685,1.609733,0.656327,-0.470381,-4.391838,1.954179,6.652161,-5.452408,-7.608176,9.854310,-9.481953,-7.474519,7.415443,8.314980,2.708877,7.581956,6.020282,3.582735,-3.376233,-7.116747,2.031537,-3.598304,8.572345,6.834796,-3.844356,-9.074198,-6.365851,7.151162,5.935672,-6.933325,7.934876,9.490215,-7.336574,5.706126,-0.828068,-9.909096,9.314522,-0.217587,1.964103,-2.532044,-9.937833,-4.780984,2.763427,9.798142,4.996463,-6.723395,0.269381,8.766014,-0.585652,-1.157480,-1.575892,-2.900617,5.910183,5.625395,2.956993,-6.874619,-1.676291,-8.327266,-0.657420,-1.186659,-4.671073,-3.116447,-4.127059,8.646287,-6.288526,-9.964434,-1.396708,-5.548226,4.889064,9.837799,7.535045,4.244553,-0.230254,-4.748749,4.520494,-4.001989,5.875855,5.751158,7.533167,-0.152190,-4.644659,-6.679931,-7.231781,-9.557803,-4.665764,-8.254071,7.076618,3.828481,8.357207,-0.845982,7.256152,-5.061444,5.622164,-8.966365,6.652968,-0.900366,7.176927,-0.503270,8.976687,-5.462952,-7.770643,9.626160,-7.388938,-6.308044,-3.600244,-0.963118,8.936578,-7.296908,-1.523670,5.003082,-4.027033,1.123862,1.653845,5.638820,-3.147753,-1.256949,-9.930070,-2.136582,2.316146,-3.531091,0.496672,6.893281,-6.798661,8.314633,-6.102778,-1.949586,-7.154154,1.089755,7.652980,-7.231551,-7.705244,7.741681,-8.985464,9.297609,-7.855871,-2.399511,-1.659075,-5.705709,2.950028,8.937094,0.335483,-3.873290,3.957624,2.750927,-3.579323,-2.255533,-7.198785,4.456427,2.865232,-3.477033,2.554596,7.731063,-8.419735,-8.854366,4.076468,-8.808550,1.501613,-2.985905,-6.318083,0.103398,6.551180,7.712961,7.563698,-4.936162,7.679399,-0.061396,4.411327,-9.172862,-9.034055,-9.982116,-3.738388,-4.767285,6.155250,-4.331023,-1.610956,7.009858,1.404037,5.022214,8.397796,9.969850,4.763133,1.795896,4.877346,-9.103090,-7.183899,9.130576,8.661802,-9.558299,-3.049291,-1.841283,7.473681,-8.326500,-0.618608,2.776879,7.760865,-5.870741,1.964462,-7.182259,5.934613,-1.700052,2.633355,-4.997005,5.628228,3.534327,9.787889,-3.383489,4.442206,4.686215,-6.871115,-4.725643,1.022480,-1.233809,-2.338803,2.165116,-4.529014,-1.316367,3.366034,-6.400516,8.471692,-9.978772,-7.449507,1.260647,7.617175,9.321763,-7.016675,-2.947064,0.703776,-7.757971,8.989485,9.210340,4.416229,5.621741,5.535070,3.168042,2.878300,7.243915,-9.757978,-7.450210,-2.591878,5.399079,6.216453,-5.044366,0.205530,-9.122691,5.409793,-8.702552,5.452244,8.843688,6.265296,-1.669437,9.772800,-9.437909,-0.465207,1.997083,8.194104,7.031602,-2.806634,6.236216,-5.668377,-4.247779,5.008538,-4.445647,-0.039311,8.028376,-5.993912,6.321244,-9.676161,2.089086,-2.655427,7.237862,-8.466137,-5.883904,-6.446064,-0.454269,1.932071,-8.950006,4.584842,-0.406615,6.513103,4.424893,4.486302,4.963044,0.645604,-6.963638,0.283100,0.415032,9.210265,3.930241,5.225782,-5.766079,-0.370043,5.496138,-5.768625,-2.800218,-7.239074,6.685773,-0.081035,7.232103,-5.371138,6.172952,3.999033,6.103003,-9.618820,-2.441221,-1.342415,-2.885000,-0.626949,-5.924694,9.351570,-5.263945,-8.440685,5.169185,-8.943794,-2.161370,8.491652,-8.558538,-1.149829,1.075863,-8.153300,-2.811061,-9.816602,-1.076618,9.016460,6.873849,2.253707,-1.274021,-3.611280,-8.952118,-4.019145,8.189985,-1.182406,-9.964181,1.607765,0.575931,9.705731,-7.444397,-5.875964,-5.384234,3.627263,4.697857,5.698877,-2.977144,3.224542,-6.458270,-1.345530,3.136921,-3.490184,4.864016,9.872041,6.335922,9.629115,1.080870,-1.447201,0.140268,9.489236,-3.532687,-8.737383,-7.814995,1.901615,2.973106,-3.462356,-4.372784,-8.892145,-4.758407,-0.822542,-6.172053,6.307623,-9.193429,-7.880752,3.135647,-0.939035,-8.639307,1.486539,-4.082222,-7.235082,-1.301804,5.742419,6.163659,-0.146592,4.433968,7.597336,-1.852162,3.843459,3.015675,-5.621777,-4.621998,-2.139400,4.710668,9.901171,4.774526,7.692386,1.410405,-4.153637,-8.594341,-1.293162,-7.544759,-4.531073,4.555434,0.750692,4.823905,6.236934,-7.782425,-2.523521,0.075089,5.334381,0.224473,-0.687145,4.265171,5.872366,-8.337058,-5.893015,-0.489452,1.528165,-8.657590,-9.329090,9.208684,8.592068,4.447773,7.677732,-8.820477,1.275758,-4.174126,-2.883508,4.784377,4.995845,6.557558,-0.362341,-9.115344,3.192998,-7.053985,-0.903192,-8.757843,5.175399,-9.392463,-6.581662,8.851959,-2.912372,-3.561960,-7.550648,1.308686,6.456802,6.942358,-7.132261,6.703387,-1.816816,4.000291,1.080032,4.776838,5.554124,-8.321225,-0.151917,-8.166436,9.298137,9.425794,-5.743231,5.669081,9.520700,7.601493,3.510939,-6.012265,-6.372495,-4.725870,9.875954,-9.566720,8.070564,-7.592475,-9.650211,6.984279,6.434105,5.679688,9.136522,4.849231,1.478355,-4.109298,-8.595048,9.933360,-8.157247,-6.731899,6.443886,-5.880574,0.925308,-1.378383,6.061282,5.572093,-2.360754,-9.404657,-0.460705,-4.107384,-7.425863,-2.289983,9.357732,4.595139,6.540570,0.388383,-8.959201,-9.890390,2.809896,-5.719330,-8.809438,1.217270,-2.214881,-1.646105,-9.336211,1.267583,5.137428,8.003810,6.421856,-6.799537,-3.651601,5.840071,9.993993,9.209802,-7.810312,-1.863169,2.111451,1.089864,9.092025,-7.665978,-6.856072,7.069844,2.031565,0.367466,4.709661,-7.095130,3.074913,7.643302,1.760210,4.825876,-0.565945,-2.662504,-5.037924,7.854448,0.084114,2.562335,8.871834,5.054476,0.022410,7.223096,-6.245345,-6.134414,6.717971,-8.917246,-0.276659,-4.720008,5.176399,8.007186,-1.127790,-3.466002,-6.161323,-3.817765,-4.901837,6.788050,-6.718177,-4.833434,-5.202132,-7.214335,-5.674257,-7.099510,2.536314,9.607676,6.398707,-0.349137,-3.093761,1.043024,-0.632068,-1.896194,8.581915,-2.072992,4.790670,-3.955134,6.681879,9.021533,7.891670,9.316375,2.579844,-8.272584,4.204040,-8.149634,6.387081,-1.792687,3.614801,-5.699494,-3.528779,-1.708947,4.234764,1.865028,-2.116385,9.155899,-0.255009,-3.757604,0.702724,-8.798517,0.343414,-3.033668,-0.820954,-0.834190,-2.398645,-0.056437,7.873256,-0.548678,0.641811,7.976780,-1.055191,-3.168416,5.562824,-1.185431,6.165446,5.045614,-9.997331,2.957831,6.628135,-8.359256,-2.621583,-7.133104,-5.249545,-8.232552,1.317003,3.891860,-4.387313,-0.431582,-7.984069,4.565050,-4.990741,-6.006607,-1.954795,4.422844,5.646831,3.023730,7.724750,7.328548,-2.884961,7.179659,1.660452,-4.195799,-6.603146,-1.073637,0.268629,-7.009599,-3.190668,-0.756061,-4.788542,-5.585524,-3.815326,4.268467,-7.738226,9.472752,5.303637,-4.988027,2.991994,-4.178248,3.276589,-1.899052,-7.288789,-6.213441,5.801407,-5.412438,0.698173,9.483335,-0.733651,2.935254,8.796026,-6.175645,9.410908,2.728976,9.275876,7.699485,-3.293770,4.063718,-1.188906,-9.469090,6.150097,-5.049151,1.752798,-8.017148,-0.085719,-5.712164,-7.890344,-2.761501,2.803227,-0.923503,-0.364436,-4.607647,1.979566,3.649123,2.028769,2.258892,-0.741629,2.665698,7.296474,-9.867794,8.706693,9.735731,1.561143,-3.720572,3.672342,9.684079,-2.009450,8.024277,5.834155,7.530474,-4.791300,3.000641,-1.317990,-3.933006,-9.706574,-6.573853,-0.901359,5.630866,4.757459,-5.963174,-1.123932,-6.880822,1.934768,-4.329553,6.049169,-1.599407,-1.311791,-1.029426,-1.161748,-0.933052,9.324914,1.918147,-0.755447,0.147749,-8.081951,9.524372,5.963154,7.053966,4.932397,-3.461761,6.882494,-5.280611,-4.573657,0.298690,5.819658,-4.753901,-6.194540,-8.701309,-8.684229,-6.840119,-0.531598,-9.531687,-0.839269,-4.878095,8.425830,-6.687718,4.038063,7.893988,8.689000,8.454559,-3.161636,-4.890951,4.142876,-6.301730,-1.854470,-5.137567,-7.822869,0.779006,-4.338320,-7.760169,-8.298832,-2.805236,0.872830,8.217147,-0.547276,1.013353,-4.605518,3.827683,3.550500,-1.137864,5.348858,-9.874988,3.429413,-6.899281,7.704438,7.196560,6.873438,-6.157961,9.927594,5.126329,-0.859734,5.803099,-7.294818,-8.777194,-4.740569,-0.532689,5.153434,1.404069,-8.247119,-9.832534,-7.529758,9.479377,5.001179,-7.092210,8.269109,6.162878,-8.863764,8.997993,4.233502,-3.285926,-9.635187,1.446611,8.862324,-3.698993,-6.723528,-7.384251,-1.184208,-4.307444,0.905519,0.960679,0.234089,-6.234787,0.792637,-0.875821,4.453526,-2.403449,2.068431,9.285037,-1.189285,-8.275491,-9.872185,4.442691,-5.309520,-3.056621,-5.275414,5.022548,-0.337499,0.976442,5.453560,2.995791,6.044060,-4.067587,0.169234,6.975051,7.464353,0.842299,-5.410057,-9.979072,-8.489445,-0.232626,-8.791259,-8.898553,6.608266,-7.300407,-9.956365,2.697819,1.450005,-3.800939,4.960298,-4.011236,-1.818988,-0.373695,-0.294830,7.189135,-2.724586,0.308426,6.458308,4.552592,-2.977979,4.142974,8.040000,-8.295549,-2.602857,-0.986882,-5.876586,-0.400508,-7.267694,-5.682843,-7.440117,3.616874,6.440746,5.075214,4.115661,-2.440261,3.945130,-3.341581,-4.853851,7.693449,5.774060,9.541696,4.685262,-5.366045,-4.610680,-4.912645,0.060993,3.292654,0.959768,1.432402,-3.129440,-6.534033,-9.613378,-0.022959,3.751791,4.247653,5.134456,-3.309016,7.960172,-6.093000,1.275837,-6.559106,8.238672,-8.562162,-4.918335,2.528188,9.560216,-5.044150,-3.314789,-9.759753,7.916902,-8.394839,-2.463136,6.747799,-9.636334,-6.128359,-9.166999,-5.043010,-3.059842,-9.239572,-8.957266,2.179351,8.475699,2.043913,1.868939,8.315808,-0.040888,2.077100,1.190013,-8.296120,4.517841,6.152799,9.033330,6.539823,-1.299838,-3.268581,2.867552,-6.853443,-1.207110,-8.152703,-9.193053,-7.799681,1.949335,7.409943,-4.140268,-7.228214,-2.730660,3.623788,7.231764,-7.315649,7.127199,8.281396,-8.294931,2.557642,5.505799,-2.687285,-6.595085,-6.542625,2.739671,-0.566804,4.832163,3.729163,-1.197763,6.781737,8.019917,-1.487059,7.170119,8.246419,8.805119,-9.769887,-8.770432,-3.512231,4.775345,-1.385572,3.193176,-1.466882,-8.742805,-2.474686,-4.208142,-6.102143,5.287380,-7.573110,-7.759392,2.487131,9.720695,0.893160,-9.056522,-4.050761,-0.666101,-5.137107,0.386665,2.013808,-0.141648,-4.357630,1.764718,-8.549644,4.105317,5.646082,-8.238406,-1.999725,-1.367997,3.383081,4.179047,-7.350675,2.526853,9.157311,0.482065,-1.180449,0.938482,3.931414,4.345313,9.883822,-4.866859,5.039435,1.593695,-9.715446,0.338558,8.730398,3.499760,-2.406918,-1.322856,9.701184,-8.475739,-8.050362,0.315801,3.848738,7.394971,9.161079,7.721036,6.786668,-9.517461,2.084647,4.879136,7.808317,-1.019748,6.286397,4.249920,5.368938,-2.212839,5.094114,8.933448,7.467862,-6.366422,-1.512918,8.337318,-1.173488,-3.475751,4.139915,-2.667701,-6.274309,-6.961995,-7.516159,3.615618,-1.035646,5.402125,0.130143,-9.690523,2.600509,7.791735,-4.362752,9.790717,0.632507,-8.215514,-4.979309,5.465787,-9.879270,-4.385073,2.128255,-1.001397,-5.173933,-7.284081,-8.836236,-0.378160,8.646385,8.533981,-8.381919,-7.362510,-0.189488,-1.466510,-3.511917,-6.853522,7.835562,5.251093,-6.889291,-4.222412,7.087111,-4.439606,7.986452,7.496053,-4.052177,9.280809,-6.256550,-0.179345,-6.138575,1.850545,-4.817381,9.246247,-3.554418,9.246130,-8.615662,5.609139,-1.165548,5.247901,-0.773068,-9.141926,-8.075605,9.382947,2.000979,3.170380,-1.830320,-3.435485,-5.837365,6.023029,-5.183766,0.170931,-9.414529,-0.818865,-4.335916,4.121683,0.180022,-6.357871,8.669820,-0.984695,6.797691,-4.680961,-5.974461,0.922550,5.040712,0.102516,1.327163,-7.849995,-3.599076,-2.836755,1.245471,1.891216,9.973328,-6.985409,-6.843478,0.595494,-8.561374,5.909574,0.603418,-2.097519,4.515546,-8.717767,-1.051330,4.035484,-9.217713,-8.453381,0.241012,-3.944374,6.501965,9.351179,6.309766,6.631005,-5.321466,-8.293756,9.840072,-1.790023,-4.791060,3.942696,-1.439990,6.477842,-4.878822,-8.904064,-8.953567,-2.869127,6.363826,4.684015,5.657507,-8.494337,9.726958,9.097249,9.862793,-4.990791,-9.730488,4.730074,-7.509872,0.841004,-6.001623,-6.096833,-7.588731,-6.923887,-7.546572,-1.129712,-9.291935,5.287123,6.777587,9.799131,5.028209,7.328601,7.019569,-8.853122,7.578793,1.534289,9.047728,-2.491966,-5.746507,3.186607,-3.036364,-5.786936,-1.120888,2.012269,-3.758046,7.908672,-6.441982,-6.408712,1.105627,5.640628,-5.191752,-9.500565,-0.261761,-8.666847,3.126460,5.049954,9.567062,-8.999253,3.895359,-5.276519,-7.789467,3.920921,-4.439040,3.951814,-2.394000,-7.980317,9.810274,-0.654263,-0.484087,-9.732151,-5.581280,3.026876,-8.599657,-4.966999,7.534704,6.544134,-9.737147,-8.565857,-5.908711,-1.591828,-9.408377,-2.926717,5.305668,1.192207,0.548118,4.436116,8.422737,8.423986,-9.159699,-3.714155,-6.654440,-0.712026,-1.533458,2.883564,-9.053976,-7.923452,2.771142,-4.995302,7.245703,-0.172877,8.677630,8.668726,-8.214217,-4.188627,-6.790683,7.556721,1.350171,3.077237,-6.770102,-3.412692,-7.087778,-1.668325,2.120715,-5.622403,-3.103752,6.054369,-1.383699,5.611749,-6.821819,5.239518,-3.606179,0.609041,-1.595555,3.746081,-0.376173,1.753079,-1.941453,-5.475483,-5.547254,0.333474,3.427901,0.839561,2.815421,-0.280287,-7.499410,-0.464627,-8.515546], dtype = "float64")#candidate|2659|(1536,)|const|float64
call_2658 = func_2631_call(relay.reshape(const_2659.astype('float64'), [8, 12, 16]))
call_2660 = func_2631_call(relay.reshape(const_2659.astype('float64'), [8, 12, 16]))
func_339_call = mod.get_global_var('func_339')
func_342_call = mutated_mod.get_global_var('func_342')
var_2674 = relay.var("var_2674", dtype = "float32", shape = (528,))#candidate|2674|(528,)|var|float32
call_2673 = func_339_call(relay.reshape(var_2674.astype('float32'), [12, 11, 4]))
call_2675 = func_339_call(relay.reshape(var_2674.astype('float32'), [12, 11, 4]))
func_897_call = mod.get_global_var('func_897')
func_901_call = mutated_mod.get_global_var('func_901')
const_2688 = relay.const([[1,-2,-4,-1,-3,8,1,-1,-8,1,7,10,-6,-8,6,-9,-8,1,-10,-10,7,10,-3,-6,-7,-7,-7,-6,-7,-4],[-8,9,-1,-1,-5,7,10,7,-8,4,-9,4,7,9,-4,-6,5,10,8,-1,2,-4,-5,6,5,3,-1,10,-4,-4],[1,3,-5,-3,6,-7,-4,-3,-3,4,-10,-2,1,1,-8,-6,-2,6,-3,2,7,-10,-2,7,3,-3,-10,4,-4,9],[-7,-4,5,8,-3,1,-4,8,-5,1,-8,-1,-9,2,-9,9,7,6,-3,3,-9,-3,-5,-8,8,10,-4,-6,7,10],[8,-3,1,6,8,-10,-4,-9,-4,3,6,9,6,5,-5,1,-2,-6,-8,7,-4,2,-9,-8,7,6,5,-3,5,6],[5,-1,6,2,-2,9,-5,5,-1,9,-4,-9,-4,-4,2,-9,1,-4,9,-10,-6,-8,-1,6,-8,10,-2,5,-3,5]], dtype = "uint16")#candidate|2688|(6, 30)|const|uint16
var_2689 = relay.var("var_2689", dtype = "int8", shape = ())#candidate|2689|()|var|int8
call_2687 = relay.TupleGetItem(func_897_call(relay.reshape(const_2688.astype('uint16'), [180,]), relay.reshape(var_2689.astype('int8'), []), ), 5)
call_2690 = relay.TupleGetItem(func_901_call(relay.reshape(const_2688.astype('uint16'), [180,]), relay.reshape(var_2689.astype('int8'), []), ), 5)
func_2571_call = mod.get_global_var('func_2571')
func_2575_call = mutated_mod.get_global_var('func_2575')
const_2692 = relay.const([[-5,-5,9,-1,8,2,2,10,-1,10,-3,-1,10,-2],[-5,-7,-1,1,-6,2,-10,10,6,-8,4,-3,6,7],[1,-10,2,-7,8,4,-2,7,-1,-8,8,6,-5,-8],[4,6,7,-4,-1,-3,-10,-4,5,8,2,-5,-1,10],[-1,-6,4,-4,10,-3,10,-4,4,5,-1,5,9,2],[2,-8,2,2,8,8,-4,10,8,-4,-2,-2,-2,-6],[7,-2,2,4,6,10,1,-3,-1,-9,-7,-1,-2,3],[10,-8,7,-7,-10,3,-8,9,2,-4,-4,-4,-6,3],[-8,5,-6,-8,-10,4,-8,5,1,-5,5,8,4,4],[6,9,2,1,-4,-2,6,6,4,-9,-7,-8,6,4],[7,-10,-5,-5,3,-6,-7,-3,4,-6,-3,3,-1,-4]], dtype = "int8")#candidate|2692|(11, 14)|const|int8
var_2693 = relay.var("var_2693", dtype = "float64", shape = (2816,))#candidate|2693|(2816,)|var|float64
call_2691 = relay.TupleGetItem(func_2571_call(relay.reshape(var_2689.astype('int8'), []), relay.reshape(const_2692.astype('int8'), [154,]), relay.reshape(var_2693.astype('float64'), [2816,]), ), 0)
call_2694 = relay.TupleGetItem(func_2575_call(relay.reshape(var_2689.astype('int8'), []), relay.reshape(const_2692.astype('int8'), [154,]), relay.reshape(var_2693.astype('float64'), [2816,]), ), 0)
func_2631_call = mod.get_global_var('func_2631')
func_2634_call = mutated_mod.get_global_var('func_2634')
call_2704 = func_2631_call(relay.reshape(const_2659.astype('float64'), [8, 12, 16]))
call_2705 = func_2631_call(relay.reshape(const_2659.astype('float64'), [8, 12, 16]))
func_1872_call = mod.get_global_var('func_1872')
func_1877_call = mutated_mod.get_global_var('func_1877')
var_2717 = relay.var("var_2717", dtype = "float64", shape = (15, 4))#candidate|2717|(15, 4)|var|float64
var_2718 = relay.var("var_2718", dtype = "uint64", shape = (416, 4))#candidate|2718|(416, 4)|var|uint64
call_2716 = relay.TupleGetItem(func_1872_call(relay.reshape(var_2717.astype('float64'), [60,]), relay.reshape(call_2687.astype('int8'), []), relay.reshape(const_2692.astype('float32'), [154,]), relay.reshape(var_2718.astype('uint64'), [1664,]), ), 3)
call_2719 = relay.TupleGetItem(func_1877_call(relay.reshape(var_2717.astype('float64'), [60,]), relay.reshape(call_2687.astype('int8'), []), relay.reshape(const_2692.astype('float32'), [154,]), relay.reshape(var_2718.astype('uint64'), [1664,]), ), 3)
output = relay.Tuple([bop_2652,call_2658,const_2659,call_2673,var_2674,call_2687,const_2688,var_2689,call_2691,const_2692,var_2693,call_2704,call_2716,var_2717,var_2718,])
output2 = relay.Tuple([bop_2652,call_2660,const_2659,call_2675,var_2674,call_2690,const_2688,var_2689,call_2694,const_2692,var_2693,call_2705,call_2719,var_2717,var_2718,])
func_2722 = relay.Function([var_2650,var_2651,var_2674,var_2689,var_2693,var_2717,var_2718,], output)
mod['func_2722'] = func_2722
mod = relay.transform.InferType()(mod)
var_2723 = relay.var("var_2723", dtype = "float32", shape = (11, 7, 3))#candidate|2723|(11, 7, 3)|var|float32
var_2724 = relay.var("var_2724", dtype = "float32", shape = (11, 7, 3))#candidate|2724|(11, 7, 3)|var|float32
var_2725 = relay.var("var_2725", dtype = "float32", shape = (528,))#candidate|2725|(528,)|var|float32
var_2726 = relay.var("var_2726", dtype = "int8", shape = ())#candidate|2726|()|var|int8
var_2727 = relay.var("var_2727", dtype = "float64", shape = (2816,))#candidate|2727|(2816,)|var|float64
var_2728 = relay.var("var_2728", dtype = "float64", shape = (15, 4))#candidate|2728|(15, 4)|var|float64
var_2729 = relay.var("var_2729", dtype = "uint64", shape = (416, 4))#candidate|2729|(416, 4)|var|uint64
output = func_2722(var_2723,var_2724,var_2725,var_2726,var_2727,var_2728,var_2729,)
func_2730 = relay.Function([var_2723,var_2724,var_2725,var_2726,var_2727,var_2728,var_2729,], output)
mutated_mod['func_2730'] = func_2730
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3179 = relay.var("var_3179", dtype = "float64", shape = (6, 15, 4))#candidate|3179|(6, 15, 4)|var|float64
var_3180 = relay.var("var_3180", dtype = "float64", shape = (6, 15, 4))#candidate|3180|(6, 15, 4)|var|float64
bop_3181 = relay.subtract(var_3179.astype('float64'), relay.reshape(var_3180.astype('float64'), relay.shape_of(var_3179))) # shape=(6, 15, 4)
func_666_call = mod.get_global_var('func_666')
func_670_call = mutated_mod.get_global_var('func_670')
var_3210 = relay.var("var_3210", dtype = "uint16", shape = (180,))#candidate|3210|(180,)|var|uint16
call_3209 = relay.TupleGetItem(func_666_call(relay.reshape(var_3210.astype('uint16'), [5, 4, 9]), relay.reshape(var_3210.astype('uint16'), [5, 4, 9]), ), 0)
call_3211 = relay.TupleGetItem(func_670_call(relay.reshape(var_3210.astype('uint16'), [5, 4, 9]), relay.reshape(var_3210.astype('uint16'), [5, 4, 9]), ), 0)
func_134_call = mod.get_global_var('func_134')
func_137_call = mutated_mod.get_global_var('func_137')
const_3226 = relay.const(7, dtype = "int8")#candidate|3226|()|const|int8
var_3227 = relay.var("var_3227", dtype = "int8", shape = (11, 14))#candidate|3227|(11, 14)|var|int8
call_3225 = relay.TupleGetItem(func_134_call(relay.reshape(const_3226.astype('int8'), []), relay.reshape(var_3227.astype('int8'), [14, 1, 11]), ), 0)
call_3228 = relay.TupleGetItem(func_137_call(relay.reshape(const_3226.astype('int8'), []), relay.reshape(var_3227.astype('int8'), [14, 1, 11]), ), 0)
uop_3232 = relay.asinh(bop_3181.astype('float32')) # shape=(6, 15, 4)
func_134_call = mod.get_global_var('func_134')
func_137_call = mutated_mod.get_global_var('func_137')
call_3235 = relay.TupleGetItem(func_134_call(relay.reshape(const_3226.astype('int8'), []), relay.reshape(call_3225.astype('int8'), [14, 1, 11]), ), 0)
call_3236 = relay.TupleGetItem(func_137_call(relay.reshape(const_3226.astype('int8'), []), relay.reshape(call_3225.astype('int8'), [14, 1, 11]), ), 0)
bop_3246 = relay.power(uop_3232.astype('float64'), relay.reshape(bop_3181.astype('float64'), relay.shape_of(uop_3232))) # shape=(6, 15, 4)
func_2237_call = mod.get_global_var('func_2237')
func_2239_call = mutated_mod.get_global_var('func_2239')
const_3259 = relay.const([[7,5,9,-1,-5,2,-9,5,9,3,3,8,-5,9,-1,7,-8,-9,-4,2,9,7,10,4,-9,5,-2,-8,-9,6,5,-7,-8,2,9,3,-9,6,6,1,8,-9,-8,-7],[1,9,9,-1,-4,-10,6,-5,-6,4,-2,7,-10,8,3,-7,9,10,-1,6,3,-2,-3,-4,7,-1,3,-9,-4,1,2,-2,3,8,5,1,2,-5,-10,4,-8,-8,-4,-6],[-2,6,4,-5,-1,2,9,-4,-9,-7,-9,-8,-7,10,3,-2,2,1,7,4,10,-6,1,3,-10,-1,-3,-5,-7,-4,2,7,3,3,-5,9,-3,8,4,4,-2,-2,3,-7]], dtype = "uint64")#candidate|3259|(3, 44)|const|uint64
call_3258 = relay.TupleGetItem(func_2237_call(relay.reshape(const_3259.astype('uint64'), [1, 11, 12])), 0)
call_3260 = relay.TupleGetItem(func_2239_call(relay.reshape(const_3259.astype('uint64'), [1, 11, 12])), 0)
bop_3263 = relay.bitwise_or(bop_3246.astype('uint64'), relay.reshape(var_3180.astype('uint64'), relay.shape_of(bop_3246))) # shape=(6, 15, 4)
func_339_call = mod.get_global_var('func_339')
func_342_call = mutated_mod.get_global_var('func_342')
var_3267 = relay.var("var_3267", dtype = "float32", shape = (528,))#candidate|3267|(528,)|var|float32
call_3266 = func_339_call(relay.reshape(var_3267.astype('float32'), [12, 11, 4]))
call_3268 = func_339_call(relay.reshape(var_3267.astype('float32'), [12, 11, 4]))
output = relay.Tuple([call_3209,var_3210,call_3225,const_3226,var_3227,call_3235,call_3258,const_3259,bop_3263,call_3266,var_3267,])
output2 = relay.Tuple([call_3211,var_3210,call_3228,const_3226,var_3227,call_3236,call_3260,const_3259,bop_3263,call_3268,var_3267,])
func_3269 = relay.Function([var_3179,var_3180,var_3210,var_3227,var_3267,], output)
mod['func_3269'] = func_3269
mod = relay.transform.InferType()(mod)
var_3270 = relay.var("var_3270", dtype = "float64", shape = (6, 15, 4))#candidate|3270|(6, 15, 4)|var|float64
var_3271 = relay.var("var_3271", dtype = "float64", shape = (6, 15, 4))#candidate|3271|(6, 15, 4)|var|float64
var_3272 = relay.var("var_3272", dtype = "uint16", shape = (180,))#candidate|3272|(180,)|var|uint16
var_3273 = relay.var("var_3273", dtype = "int8", shape = (11, 14))#candidate|3273|(11, 14)|var|int8
var_3274 = relay.var("var_3274", dtype = "float32", shape = (528,))#candidate|3274|(528,)|var|float32
output = func_3269(var_3270,var_3271,var_3272,var_3273,var_3274,)
func_3275 = relay.Function([var_3270,var_3271,var_3272,var_3273,var_3274,], output)
mutated_mod['func_3275'] = func_3275
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3567 = relay.var("var_3567", dtype = "int8", shape = (5, 14, 6))#candidate|3567|(5, 14, 6)|var|int8
var_3568 = relay.var("var_3568", dtype = "int8", shape = (5, 14, 6))#candidate|3568|(5, 14, 6)|var|int8
bop_3569 = relay.add(var_3567.astype('int8'), relay.reshape(var_3568.astype('int8'), relay.shape_of(var_3567))) # shape=(5, 14, 6)
func_2124_call = mod.get_global_var('func_2124')
func_2129_call = mutated_mod.get_global_var('func_2129')
const_3580 = relay.const(-7, dtype = "int32")#candidate|3580|()|const|int32
const_3581 = relay.const([-8,6,5,-6,9], dtype = "int32")#candidate|3581|(5,)|const|int32
var_3582 = relay.var("var_3582", dtype = "float64", shape = (64, 44))#candidate|3582|(64, 44)|var|float64
var_3583 = relay.var("var_3583", dtype = "uint16", shape = (180,))#candidate|3583|(180,)|var|uint16
call_3579 = relay.TupleGetItem(func_2124_call(relay.reshape(const_3580.astype('int32'), []), relay.reshape(const_3581.astype('int32'), [1, 1, 5]), relay.reshape(var_3582.astype('float64'), [2816,]), relay.reshape(var_3583.astype('uint16'), [180,]), ), 0)
call_3584 = relay.TupleGetItem(func_2129_call(relay.reshape(const_3580.astype('int32'), []), relay.reshape(const_3581.astype('int32'), [1, 1, 5]), relay.reshape(var_3582.astype('float64'), [2816,]), relay.reshape(var_3583.astype('uint16'), [180,]), ), 0)
bop_3598 = relay.greater_equal(call_3579.astype('bool'), const_3580.astype('bool')) # shape=(1, 1, 5)
bop_3601 = relay.greater_equal(call_3584.astype('bool'), const_3580.astype('bool')) # shape=(1, 1, 5)
func_1938_call = mod.get_global_var('func_1938')
func_1943_call = mutated_mod.get_global_var('func_1943')
call_3614 = relay.TupleGetItem(func_1938_call(relay.reshape(var_3582.astype('float64'), [16, 16, 11]), relay.reshape(var_3583.astype('uint16'), [180,]), relay.reshape(const_3580.astype('int8'), []), ), 1)
call_3615 = relay.TupleGetItem(func_1943_call(relay.reshape(var_3582.astype('float64'), [16, 16, 11]), relay.reshape(var_3583.astype('uint16'), [180,]), relay.reshape(const_3580.astype('int8'), []), ), 1)
output = relay.Tuple([bop_3569,const_3581,var_3582,var_3583,bop_3598,call_3614,])
output2 = relay.Tuple([bop_3569,const_3581,var_3582,var_3583,bop_3601,call_3615,])
func_3629 = relay.Function([var_3567,var_3568,var_3582,var_3583,], output)
mod['func_3629'] = func_3629
mod = relay.transform.InferType()(mod)
mutated_mod['func_3629'] = func_3629
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3629_call = mutated_mod.get_global_var('func_3629')
var_3631 = relay.var("var_3631", dtype = "int8", shape = (5, 14, 6))#candidate|3631|(5, 14, 6)|var|int8
var_3632 = relay.var("var_3632", dtype = "int8", shape = (5, 14, 6))#candidate|3632|(5, 14, 6)|var|int8
var_3633 = relay.var("var_3633", dtype = "float64", shape = (64, 44))#candidate|3633|(64, 44)|var|float64
var_3634 = relay.var("var_3634", dtype = "uint16", shape = (180,))#candidate|3634|(180,)|var|uint16
call_3630 = func_3629_call(var_3631,var_3632,var_3633,var_3634,)
output = call_3630
func_3635 = relay.Function([var_3631,var_3632,var_3633,var_3634,], output)
mutated_mod['func_3635'] = func_3635
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3671 = relay.var("var_3671", dtype = "int8", shape = (12, 8, 6))#candidate|3671|(12, 8, 6)|var|int8
var_3672 = relay.var("var_3672", dtype = "int8", shape = (12, 8, 6))#candidate|3672|(12, 8, 6)|var|int8
bop_3673 = relay.left_shift(var_3671.astype('int8'), relay.reshape(var_3672.astype('int8'), relay.shape_of(var_3671))) # shape=(12, 8, 6)
uop_3678 = relay.erf(var_3671.astype('float32')) # shape=(12, 8, 6)
func_2571_call = mod.get_global_var('func_2571')
func_2575_call = mutated_mod.get_global_var('func_2575')
const_3688 = relay.const(9, dtype = "int8")#candidate|3688|()|const|int8
var_3689 = relay.var("var_3689", dtype = "int8", shape = (154,))#candidate|3689|(154,)|var|int8
var_3690 = relay.var("var_3690", dtype = "float64", shape = (2816,))#candidate|3690|(2816,)|var|float64
call_3687 = relay.TupleGetItem(func_2571_call(relay.reshape(const_3688.astype('int8'), []), relay.reshape(var_3689.astype('int8'), [154,]), relay.reshape(var_3690.astype('float64'), [2816,]), ), 1)
call_3691 = relay.TupleGetItem(func_2575_call(relay.reshape(const_3688.astype('int8'), []), relay.reshape(var_3689.astype('int8'), [154,]), relay.reshape(var_3690.astype('float64'), [2816,]), ), 1)
output = relay.Tuple([bop_3673,uop_3678,call_3687,const_3688,var_3689,var_3690,])
output2 = relay.Tuple([bop_3673,uop_3678,call_3691,const_3688,var_3689,var_3690,])
func_3697 = relay.Function([var_3671,var_3672,var_3689,var_3690,], output)
mod['func_3697'] = func_3697
mod = relay.transform.InferType()(mod)
var_3698 = relay.var("var_3698", dtype = "int8", shape = (12, 8, 6))#candidate|3698|(12, 8, 6)|var|int8
var_3699 = relay.var("var_3699", dtype = "int8", shape = (12, 8, 6))#candidate|3699|(12, 8, 6)|var|int8
var_3700 = relay.var("var_3700", dtype = "int8", shape = (154,))#candidate|3700|(154,)|var|int8
var_3701 = relay.var("var_3701", dtype = "float64", shape = (2816,))#candidate|3701|(2816,)|var|float64
output = func_3697(var_3698,var_3699,var_3700,var_3701,)
func_3702 = relay.Function([var_3698,var_3699,var_3700,var_3701,], output)
mutated_mod['func_3702'] = func_3702
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3980 = relay.var("var_3980", dtype = "float32", shape = (11, 13, 14))#candidate|3980|(11, 13, 14)|var|float32
uop_3981 = relay.erf(var_3980.astype('float32')) # shape=(11, 13, 14)
func_1737_call = mod.get_global_var('func_1737')
func_1743_call = mutated_mod.get_global_var('func_1743')
const_3984 = relay.const([-9,1,-4,-2,-2,4,10,-8,9,-6,-2,10,-10,1,4,-2,2,-6,8,5,1,-3,-3,-9,6,1,2,-10,-10,8,-1,-6,6,9,-4,-3,6,-5,7,-3,-1,3,-4,8,3,8,8,7,10,5,2,6,-6,-7,8,5,2,5,-10,2,10,-7,5,-2,2,6,7,-10,-6,-5,-8,-6,-2,-8,7,-6,-9,-7,9,-9,9,2,9,1,10,-2,10,-1,-10,-5,-9,3,-5,4,10,-2,-1,8,-8,-7,-7,-9,8,9,10,-4,4,9,-8,3,8,-8,10,3,5,8,-1,-8,6,-7,-1,5,8,5,9,-5,-3,-10,-9,1,-2,-7,-4,2,-4,8,9,3,7,3,-5,-7,-1,1,7,-5,1,-2,7,-8,-2,-6,-8,-8,6,5,2,-2,-8,-3,9,5,-10,-6,2,9,10,7,-6,-7,8,6,3,-3,4,-5,3,-2,9,-9,-4,7,6,6,-10,-4,4,-8,-9,7,6,4,-3,2,8,5,2,8,5,-7,6,3,1,-4,-2,-2,2,-10,6,-9,5,-6,3,2,7,-2,3,2,7,-2,6,9,-2,5,1,2,-7,3,-2,9,-6,-4,-8,-3,-2,-6,-1,-8,-6,-2,-10,-4,-3,-8,-2,6,-10,7,7,-5,-4,-9,7,-9,4,-3,6,-1,2,5,8,2,-2,-6,-10,9,-1,1,8,3,1,-6,3,7,-9,-9,-4,5,-3,-8,-1,7,7,-1,9,-9,-2,-9,-6,-10,1,-10,-4,4,7,10,-10,1,6,4,-10,6,-2,6,-5,1,-8,2,7,7,7,1,4,-5,-7,-6,4,10,-10,1,3,-1,4,-2,1,-4,-9,-6,-10,5,-1,-4,-4,-10,1,10,-5,6,6,10,-1,6,1,5,4,-9,-3,-10,9,1,-3,-5,-2,8,1,5,-4,4,-4,9,10,-3,-2,2,-4,1,-4,6,5,5,-1,2,1,3,6,3,1,-1,-10,-4,5,-4,10,-8,3,3,-4,-9,2,8,3,5,9,7,-10,6,4,6,-1,9,8,5,-8,4,-8,7,6,-5,10,6,3,-5,3,1,8,5,-3,-7,-9,-2,-5,-8,2,10,7,2,-8,-7,2,5,9,5,4,-6,3,10,8,3,-3,-4,6,2,-4,-7,8,-4,3,2,1,10,5,-2,-8,-3,-5,-3,2,7,6,-2,-5,3,8,-3,1,-1,-3,-9,7,2,-10,4,-2,-8,4,-3,10,7,1,-7,3,-1,2,-7,-4,2,8,6,9,-6,-7,4,-5,5,10,10,-9,-2,-5,-9,-10,2,7,5,3,-10,10,-6,-2,-5,-3,8,8,-3,8,1,-3,5,-1,7,-2,4,9,-1,3,7,-10,7,4,-10,-4,-10,4,-8,-4,8,-9,1,2,-3,7,10,3,-5,1,-9,8,3,-3,-8,-5,-6,-1,-6,-9,10,7,3,-9,-8,6,5,-7,6,9,-10,2,-1,-2,-6,6,-7,5,-4,8,3,9,8,4,7,-9,10,-2,-4,7,-5,7,-5,-2,5,1,6,7,10,-1,7,-6,3,5,2,1,-5,1,-9,9,5,-5,1,-6,-3,8,8,6,-1,1,5,3,8,-9,7,2,-5,-4,9,7,-8,2,6,7,9,1,10,3,7,7,-8,-9,-6,-1,-4,6,3,10,-6,-7,5,-8,-1], dtype = "int32")#candidate|3984|(648,)|const|int32
const_3985 = relay.const([-2.087131,-7.027687,7.043217,-8.326812,-8.996668,1.092931,4.773681,-5.773426,0.772671,-9.131927,3.270916,-6.240717,9.983091,-3.029719,0.556548,-4.225082,9.414732,8.540827,6.579892,-3.443590,2.064740,-9.217697,-8.204249,2.686896,6.523327,3.606058,4.755536,-4.259506,6.754066,1.120001,9.591184,-6.507142,-4.308225,-1.577522,0.277680,-4.968792,-2.908007,4.726287,6.449403,-0.101229,-0.590366,9.328377,-2.125383,6.864106,-5.645310,-0.610875,-1.091632,-5.066656,-4.758194,-9.483823,-2.327263,-1.212531,5.649905,1.598962,-7.944538,7.982346,-2.388711,-5.320964,-0.292116,-9.683090], dtype = "float64")#candidate|3985|(60,)|const|float64
var_3986 = relay.var("var_3986", dtype = "int8", shape = ())#candidate|3986|()|var|int8
var_3987 = relay.var("var_3987", dtype = "float32", shape = (154,))#candidate|3987|(154,)|var|float32
call_3983 = relay.TupleGetItem(func_1737_call(relay.reshape(const_3984.astype('int32'), [6, 9, 12]), relay.reshape(const_3984.astype('int32'), [6, 9, 12]), relay.reshape(const_3985.astype('float64'), [60,]), relay.reshape(var_3986.astype('int8'), []), relay.reshape(var_3987.astype('float32'), [154,]), ), 1)
call_3988 = relay.TupleGetItem(func_1743_call(relay.reshape(const_3984.astype('int32'), [6, 9, 12]), relay.reshape(const_3984.astype('int32'), [6, 9, 12]), relay.reshape(const_3985.astype('float64'), [60,]), relay.reshape(var_3986.astype('int8'), []), relay.reshape(var_3987.astype('float32'), [154,]), ), 1)
output = relay.Tuple([uop_3981,call_3983,const_3984,const_3985,var_3986,var_3987,])
output2 = relay.Tuple([uop_3981,call_3988,const_3984,const_3985,var_3986,var_3987,])
func_4001 = relay.Function([var_3980,var_3986,var_3987,], output)
mod['func_4001'] = func_4001
mod = relay.transform.InferType()(mod)
var_4002 = relay.var("var_4002", dtype = "float32", shape = (11, 13, 14))#candidate|4002|(11, 13, 14)|var|float32
var_4003 = relay.var("var_4003", dtype = "int8", shape = ())#candidate|4003|()|var|int8
var_4004 = relay.var("var_4004", dtype = "float32", shape = (154,))#candidate|4004|(154,)|var|float32
output = func_4001(var_4002,var_4003,var_4004,)
func_4005 = relay.Function([var_4002,var_4003,var_4004,], output)
mutated_mod['func_4005'] = func_4005
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4010 = relay.const([[[-2.276177,-8.087162,1.165607],[6.184561,-5.990757,8.203249],[6.239059,9.947605,1.844383],[-1.454888,0.613536,-0.799109],[-1.400460,3.131305,7.410650],[-0.987752,9.798504,1.811481],[8.348613,9.919855,3.536911]],[[3.822346,-2.311491,-9.017485],[-7.788085,5.211102,1.407694],[0.981159,0.213472,3.059223],[9.164182,-4.071255,9.079736],[-9.689294,-0.277983,-0.051804],[-6.530008,-9.584679,-0.625702],[-9.887046,1.492727,1.129160]],[[0.090824,-8.917531,8.523194],[-7.582278,5.179389,4.609279],[-9.691711,5.168301,9.821676],[-6.803990,7.834227,-7.990323],[7.208454,-6.933354,-7.608983],[-8.689198,-7.407273,-6.590875],[-3.770427,7.459826,-7.102471]],[[-3.253800,-2.621525,2.785022],[3.304823,1.656982,1.990122],[1.138149,-8.394851,0.464861],[7.308583,9.514846,5.039927],[7.165050,-4.904152,2.407050],[-7.874757,2.062707,-2.151560],[-5.647970,-5.182248,-4.293024]],[[-3.117985,0.138663,-2.097513],[7.519972,-7.234774,2.699279],[6.806895,3.516471,0.077999],[-2.984270,3.919621,-0.468419],[-5.008671,1.407080,-4.981714],[-0.818379,4.402673,-6.013791],[2.855360,7.121907,-5.622774]],[[7.974988,-8.683152,7.663384],[4.027196,5.653968,0.748044],[-4.473474,-1.560030,-1.530164],[-4.160784,1.895934,-9.663299],[3.485330,-9.253822,7.053115],[2.437447,-1.985966,-0.250589],[-7.883571,8.080708,-1.923200]],[[0.349073,-0.408378,-9.089797],[4.899877,-3.507533,8.935406],[-4.932262,-5.658632,0.989612],[4.545166,-2.049417,-7.126077],[4.528747,-2.631987,-0.754083],[9.766669,-8.077659,-1.869052],[-9.496952,8.338752,-2.902387]],[[-9.169450,2.730426,2.024601],[-1.513700,7.774308,-8.167020],[9.639402,-6.515133,-6.548637],[-0.727924,6.245097,-3.872992],[-7.861156,1.570118,6.153428],[-6.647363,-9.232776,-7.612069],[-4.502183,-0.610868,4.358219]],[[-7.204135,-5.932553,-4.776520],[7.702429,-3.827897,3.868555],[-7.207758,0.879144,2.910015],[-1.793544,-3.713130,1.650912],[-7.423432,-0.896171,-8.312793],[-0.756234,-8.522981,9.721584],[2.705024,-9.631467,6.116306]],[[-0.666742,8.259814,3.117725],[-1.245165,-5.912213,-8.679693],[4.812796,6.055823,5.458251],[0.295491,-2.253649,-2.115426],[0.600762,9.959879,9.703344],[1.473123,-5.204969,-0.989302],[-4.782570,0.261111,0.120990]],[[-0.332527,6.301367,-3.637263],[0.299205,-6.783107,-1.105777],[-8.283451,-7.473238,0.993777],[-0.098831,-4.774554,5.287131],[6.587149,4.234671,-4.374632],[-0.854737,-1.869335,-5.700085],[3.236731,-8.652212,-8.463778]],[[-7.895988,-6.151941,-1.466407],[0.788462,9.604276,9.626924],[-0.740460,-9.497149,-3.330648],[-3.876268,1.997949,-8.456877],[-4.302326,-4.027924,1.879400],[9.762230,0.841613,-3.314328],[4.708453,-2.553155,7.436851]],[[1.340405,-9.323935,-6.447824],[-0.050429,-8.875378,6.587478],[5.737134,-5.933200,-2.856801],[-1.225584,5.589548,-2.486237],[6.053674,6.323623,-9.976227],[-3.863658,-3.634338,5.608079],[3.698793,-4.196433,6.593857]],[[-5.120442,2.507725,-7.109546],[-8.733546,0.170330,-7.640917],[5.240142,0.615838,-3.094717],[-7.843859,9.309033,9.775057],[1.150345,-1.245643,-4.752049],[2.254218,-7.488506,6.484215],[-4.026609,-3.456279,-8.735069]]], dtype = "float32")#candidate|4010|(14, 7, 3)|const|float32
uop_4011 = relay.tan(const_4010.astype('float32')) # shape=(14, 7, 3)
uop_4013 = relay.sqrt(uop_4011.astype('float32')) # shape=(14, 7, 3)
output = relay.Tuple([uop_4013,])
output2 = relay.Tuple([uop_4013,])
func_4016 = relay.Function([], output)
mod['func_4016'] = func_4016
mod = relay.transform.InferType()(mod)
mutated_mod['func_4016'] = func_4016
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4016_call = mutated_mod.get_global_var('func_4016')
call_4017 = func_4016_call()
output = call_4017
func_4018 = relay.Function([], output)
mutated_mod['func_4018'] = func_4018
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4016_call = mod.get_global_var('func_4016')
func_4018_call = mutated_mod.get_global_var('func_4018')
call_4062 = relay.TupleGetItem(func_4016_call(), 0)
call_4063 = relay.TupleGetItem(func_4018_call(), 0)
func_2124_call = mod.get_global_var('func_2124')
func_2129_call = mutated_mod.get_global_var('func_2129')
const_4065 = relay.const(-5, dtype = "int32")#candidate|4065|()|const|int32
const_4066 = relay.const([4,8,10,2,6], dtype = "int32")#candidate|4066|(5,)|const|int32
var_4067 = relay.var("var_4067", dtype = "float64", shape = (2816,))#candidate|4067|(2816,)|var|float64
var_4068 = relay.var("var_4068", dtype = "uint16", shape = (180,))#candidate|4068|(180,)|var|uint16
call_4064 = relay.TupleGetItem(func_2124_call(relay.reshape(const_4065.astype('int32'), []), relay.reshape(const_4066.astype('int32'), [1, 1, 5]), relay.reshape(var_4067.astype('float64'), [2816,]), relay.reshape(var_4068.astype('uint16'), [180,]), ), 3)
call_4069 = relay.TupleGetItem(func_2129_call(relay.reshape(const_4065.astype('int32'), []), relay.reshape(const_4066.astype('int32'), [1, 1, 5]), relay.reshape(var_4067.astype('float64'), [2816,]), relay.reshape(var_4068.astype('uint16'), [180,]), ), 3)
func_1872_call = mod.get_global_var('func_1872')
func_1877_call = mutated_mod.get_global_var('func_1877')
var_4074 = relay.var("var_4074", dtype = "float64", shape = (60,))#candidate|4074|(60,)|var|float64
var_4075 = relay.var("var_4075", dtype = "float32", shape = (154,))#candidate|4075|(154,)|var|float32
var_4076 = relay.var("var_4076", dtype = "uint64", shape = (1664,))#candidate|4076|(1664,)|var|uint64
call_4073 = relay.TupleGetItem(func_1872_call(relay.reshape(var_4074.astype('float64'), [60,]), relay.reshape(const_4065.astype('int8'), []), relay.reshape(var_4075.astype('float32'), [154,]), relay.reshape(var_4076.astype('uint64'), [1664,]), ), 8)
call_4077 = relay.TupleGetItem(func_1877_call(relay.reshape(var_4074.astype('float64'), [60,]), relay.reshape(const_4065.astype('int8'), []), relay.reshape(var_4075.astype('float32'), [154,]), relay.reshape(var_4076.astype('uint64'), [1664,]), ), 8)
func_2124_call = mod.get_global_var('func_2124')
func_2129_call = mutated_mod.get_global_var('func_2129')
call_4080 = relay.TupleGetItem(func_2124_call(relay.reshape(const_4065.astype('int32'), []), relay.reshape(const_4066.astype('int32'), [1, 1, 5]), relay.reshape(var_4067.astype('float64'), [2816,]), relay.reshape(var_4068.astype('uint16'), [180,]), ), 3)
call_4081 = relay.TupleGetItem(func_2129_call(relay.reshape(const_4065.astype('int32'), []), relay.reshape(const_4066.astype('int32'), [1, 1, 5]), relay.reshape(var_4067.astype('float64'), [2816,]), relay.reshape(var_4068.astype('uint16'), [180,]), ), 3)
bop_4095 = relay.minimum(var_4076.astype('int64'), const_4065.astype('int64')) # shape=(1664,)
output = relay.Tuple([call_4062,call_4064,const_4066,var_4067,var_4068,call_4073,var_4074,var_4075,call_4080,bop_4095,])
output2 = relay.Tuple([call_4063,call_4069,const_4066,var_4067,var_4068,call_4077,var_4074,var_4075,call_4081,bop_4095,])
func_4103 = relay.Function([var_4067,var_4068,var_4074,var_4075,var_4076,], output)
mod['func_4103'] = func_4103
mod = relay.transform.InferType()(mod)
mutated_mod['func_4103'] = func_4103
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4103_call = mutated_mod.get_global_var('func_4103')
var_4105 = relay.var("var_4105", dtype = "float64", shape = (2816,))#candidate|4105|(2816,)|var|float64
var_4106 = relay.var("var_4106", dtype = "uint16", shape = (180,))#candidate|4106|(180,)|var|uint16
var_4107 = relay.var("var_4107", dtype = "float64", shape = (60,))#candidate|4107|(60,)|var|float64
var_4108 = relay.var("var_4108", dtype = "float32", shape = (154,))#candidate|4108|(154,)|var|float32
var_4109 = relay.var("var_4109", dtype = "uint64", shape = (1664,))#candidate|4109|(1664,)|var|uint64
call_4104 = func_4103_call(var_4105,var_4106,var_4107,var_4108,var_4109,)
output = call_4104
func_4110 = relay.Function([var_4105,var_4106,var_4107,var_4108,var_4109,], output)
mutated_mod['func_4110'] = func_4110
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4016_call = mod.get_global_var('func_4016')
func_4018_call = mutated_mod.get_global_var('func_4018')
call_4120 = relay.TupleGetItem(func_4016_call(), 0)
call_4121 = relay.TupleGetItem(func_4018_call(), 0)
func_3697_call = mod.get_global_var('func_3697')
func_3702_call = mutated_mod.get_global_var('func_3702')
const_4143 = relay.const([[-5,6,8,-1],[-8,7,6,-4],[9,-9,-7,-2],[7,-2,3,6],[9,-9,8,9],[1,-6,1,8],[-10,-8,-9,7],[-2,2,-4,-7],[-10,3,6,-4],[9,-4,9,-10],[-2,5,9,-7],[4,-10,8,5],[-6,6,10,1],[-9,10,8,7],[8,-9,-6,2],[8,10,1,-5],[-2,9,10,-3],[-2,9,3,-9],[-7,-2,9,-5],[-5,-2,-10,3],[8,6,-9,-9],[2,-2,3,7],[-4,-7,2,9],[-8,-4,-9,-10],[7,7,5,-9],[-7,3,4,1],[7,-8,-1,8],[9,-8,9,7],[4,-3,1,7],[3,-7,-7,3],[-10,5,-10,-1],[-5,7,-6,1],[8,10,-8,-9],[-4,7,9,-9],[3,-10,-7,1],[-9,7,3,-7],[5,-2,2,-3],[-10,-2,-10,-7],[5,3,-8,5],[3,5,3,6],[-7,1,10,8],[2,-8,-10,-3],[-2,-8,-3,8],[-8,-1,-2,9],[7,-1,-3,8],[8,8,-3,-5],[-9,3,-6,7],[3,5,9,7],[3,5,-4,1],[-1,1,2,-8],[9,-5,4,8],[-4,-5,8,-8],[-9,-9,8,-6],[-9,-4,3,3],[7,6,2,1],[9,-6,9,10],[-1,-2,8,-9],[-6,-9,-8,2],[2,7,4,-9],[-7,1,-1,5],[-9,10,-4,6],[5,-1,-10,8],[-1,-8,-4,-9],[2,-6,-1,4],[7,-7,6,-3],[9,-3,6,-2],[6,-3,7,-1],[10,-9,-8,10],[8,6,-1,4],[-2,-2,8,-7],[-6,-5,10,9],[3,2,-2,5],[-10,-3,-2,4],[3,4,1,-6],[-2,9,6,4],[7,-9,6,8],[-8,10,9,-6],[1,-4,3,-1],[-10,7,-8,5],[6,-6,-1,2],[-7,-9,-8,9],[-9,6,-10,7],[7,7,-6,3],[-8,6,-3,-9],[1,-9,5,10],[10,5,3,1],[9,-5,10,-9],[-7,6,-1,2],[-2,-3,-10,2],[9,9,1,-1],[-8,7,4,-6],[9,3,-6,-4],[-8,7,1,8],[-9,3,-7,-10],[1,-4,-3,8],[-10,-4,7,-7],[6,-3,-3,9],[7,2,6,-10],[-1,-4,3,-4],[4,-1,7,-6],[-2,-10,-1,7],[-2,-6,10,7],[-10,-4,2,10],[-8,-7,-9,-8],[5,5,8,7],[-10,-10,9,-2],[6,-6,5,-8],[-6,-8,9,7],[-5,-1,-4,-4],[-1,5,-2,1],[-2,-8,-10,2],[1,-3,7,6],[4,-8,8,-3],[8,9,4,8],[6,6,4,3],[7,8,8,9],[-3,-10,-1,-2],[-2,9,-2,5],[4,-5,9,-4],[6,2,7,-7],[10,-3,-2,-2],[-7,-4,9,-6],[-1,1,-9,-6],[-10,8,-4,10],[-4,-7,-10,-3],[-9,6,6,-10],[3,7,-10,-6],[3,-8,10,-3],[10,9,6,-7],[-8,-2,4,-1],[7,8,1,6],[7,3,1,-10],[-5,-1,4,5],[-10,6,10,3],[-5,3,-5,2],[-4,-9,-2,-5],[1,-5,1,-7],[-8,7,10,5],[8,-1,-8,7],[9,-6,7,7],[7,-5,3,-1],[6,-9,5,2],[-4,10,-8,-8],[3,8,-7,-9]], dtype = "int8")#candidate|4143|(144, 4)|const|int8
const_4144 = relay.const([1,3,-3,-3,8,-1,-2,4,1,4,-1,8,5,-2,-1,-10,-5,6,-5,8,-8,-6,3,-6,8,-6,6,-3,-5,-9,-3,7,-4,-5,-3,-2,-3,-1,-10,3,-6,-9,10,-5,-6,-1,7,-7,2,-10,7,6,-4,-6,-6,10,-7,-6,2,4,-10,-7,3,-6,7,2,1,4,6,8,9,4,1,-3,-3,-1,9,8,3,9,-3,6,8,9,-9,4,7,4,-7,-10,-5,3,-10,-8,-6,-5,-5,-5,2,-6,3,1,-9,-9,-3,7,10,3,-3,-3,7,8,-8,6,-8,-2,-4,10,-7,10,-8,9,-8,-5,5,-10,5,-6,-2,4,-7,-1,-9,-6,10,6,2,-5,8,-3,-2,-5,4,2,8,-8,-2,7,9,-8,9,8,-1,-4], dtype = "int8")#candidate|4144|(154,)|const|int8
const_4145 = relay.const([[-9.356765,-8.369518,-9.310225,9.947946,2.658741,-3.478773,-5.328934,-5.384459,3.613791,4.679514,0.108752,-2.562150,-9.580425,-6.922799,5.773569,-1.532311,-2.532636,1.537756,3.507005,-5.915958,5.649045,-7.601006,3.946244,0.220417,-7.315342,6.089051,-5.038495,-0.766259,0.145575,-1.725097,9.513957,-6.576444,2.723753,-7.445640,-5.618498,3.842066,-1.821750,-3.016263,-9.405316,-6.276856,-2.091073,-5.077838,-2.454988,0.599990,3.483629,-7.093228,0.113859,7.316152,-2.610706,6.104713,-8.258532,-2.928719,-4.398317,-4.062385,6.646625,-1.556770,-3.998200,-1.524269,8.405651,-7.432117,2.391646,2.365400,1.646086,4.834911,-3.747865,8.662572,-8.950852,8.328376,-3.334746,3.203837,9.691322,5.098187,6.130614,-1.482766,5.487390,5.109546,8.687387,4.170493,4.990305,-5.698537,-8.100574,-3.845296,1.728231,0.818708,-5.413347,5.772468,-7.524202,9.974205,1.908370,-4.305653,0.014763,1.690084,-6.632467,5.943673,-3.891036,-0.922770,7.985621,5.588121,-2.020532,-2.303938,5.514615,-6.872926,-3.376037,3.578274,1.610836,5.861909,-2.183177,8.420463,7.139663,-7.573588,-2.478562,-4.102421,-6.498185,9.644086,7.963337,1.725842,6.506731,-9.634948,3.910135,1.723462,-5.314784,5.408446,-2.120127,4.230481,-0.800558,2.585279,-9.614002,-8.991824,5.793493,-5.016673,-8.806133,6.060565,7.699546,7.734093,-1.205491,-4.477846,1.628525,7.026686,-8.609661,-8.211129,-9.268076,-4.713298,5.897677,8.006957,-2.133904,9.433090,8.542890,-7.547035,0.214545,-9.838295,7.973885,-9.599719,-3.997401,-9.298178,-4.707928,9.640066,-7.537304,-4.485162,1.650469,-6.987024,2.578004,-0.621685,-4.098467,7.940775,-9.816591,3.763423,-1.774967,5.335988,6.966776,-0.140036,-9.317861,8.739780,6.458366,-7.163829,1.763396,-6.251181,2.010289,-0.003733,4.834694,8.833613,0.124176,6.858690,-1.342295,-5.803668,-9.816900,4.720892,1.950765,2.241164,-7.673292,0.846688,-2.642070,-2.252319,-0.933125,-7.547053,6.354287,1.922642,-2.106198,-3.042044,2.135362,1.731300,0.201735,-0.724822,7.107385,4.665972,-5.603716,6.541843,-4.067390,-1.264338,-2.441720,3.449951,-2.504074,-5.613455,2.207085,5.947485,-5.026025,5.750960,8.682449,-6.732362,3.154337,3.694063,-0.019292,9.791647,-7.459581,0.895900,-8.450453,-0.628761,9.837048,2.527595,-8.276133,-9.011233,8.106713,-7.000261,8.572892,6.520254,9.267387,-8.362600,-5.264032,-9.647084,4.307689,7.544311,-5.812731,-4.677649,2.960731,4.034565,-3.959025,-1.258957,1.600841,4.517498,3.929554,8.400594,6.630938,-1.953789,4.359345,-8.090209,-8.028879,-4.789296,-4.551635,-8.476492,3.908000,5.803416,0.056699,5.986081,-0.628281,-0.655608,-3.022580,-9.818697,9.553670,2.593625,-8.600757,-4.810619,0.119007,2.034690,0.789204,9.088546,3.487528,4.476991,-4.142100,9.007009,0.379577,-3.443705,-8.693576,6.372403,8.656493,-0.856649,-3.613193,-8.734526,-7.442201,2.237706,-7.790413,-0.452817,6.878103,-5.043160,-3.114469,1.976178,1.951027,5.839255,-7.609532,-8.987594,2.187788,8.704421,1.693227,-0.672208,-1.642338,7.303272,-1.724142,-9.768066,9.025831,-1.674769,2.043829,9.120465,6.557310,-3.081438,1.296552,-5.899598,9.813353,0.806912,4.661030,-5.926708,3.958173,-7.303743,4.508900,-9.456562,-0.991164,1.135629,-7.173243,-8.839638,7.661903,6.076855,6.926197,-4.201403,-3.543775,7.499794,1.000235,7.308056,-0.406399,-9.606729,-9.584387,-5.950551,3.416189,-6.404897,8.042550,-3.544141,9.247655,3.644123,0.428021,-8.871889,1.585493,6.496821,6.345013,-6.044963,9.339657,-6.052153,6.607683,-3.188798,-9.493062,-3.510938,7.083487,-2.841265,-7.409803,-6.797829,9.816291,9.178117,-0.403775,5.724899,7.656567,4.184492,7.152752,4.754990,5.060366,5.087985,-0.897332,6.382225,-6.134052,1.167019,7.590202,-1.873048,-6.366220,-6.511767,3.681335,-3.041387,4.850369,4.738012,6.411057,5.044784,-0.588914,-4.189185,-0.295510,-2.822175,-1.583313,7.184538,4.084557,-0.990934,-5.214667,5.626595,1.723030,-3.249424,7.089810,3.204579,-2.529151,6.671088,8.655920,-4.487818,0.434800,4.281012,-9.980552,-3.311596,-8.725301,5.923178,9.574145,-6.082609,-3.486268,6.261140,-2.062421,9.737409,8.873861,7.724628,-6.383219,-4.790312,7.100908,4.916240,-2.286156,6.967056,1.726746,2.673099,9.749320,3.665109,5.303780,-9.023059,9.973363,-5.783510,-3.838767,0.663901,9.602011,8.278730,8.991283,-8.016095,-6.253237,1.663793,-4.695866,-6.737437,-8.686729,-6.769742,-5.171883,-0.681180,-6.649814,-0.002117,-0.929143,9.119810,9.065668,-3.341186,-7.962085,-2.376532,1.827557,-2.246489,3.030014,5.273278,-4.243760,5.601415,-5.199440,-5.836104,-1.601924,-9.601914,-8.359755,6.521633,-0.490823,1.362850,-6.314768,8.398457,3.626301,-1.130814,-1.237636,-4.587540,3.469337,7.170016,9.745267,-9.394919,-0.324507,0.327262,-4.844938,-0.555858,-7.120191,9.031523,8.347899,-9.243999,-9.225989,1.022409,3.264095,4.817734,1.027775,-3.881326,-1.450776,0.579658,1.100062,-0.408360,3.417720,-9.455484,-8.271286,-8.835321,-7.504820,-1.302158,8.345091,1.572866,2.361734,1.326859,0.707046,-5.014096,-8.963426,-9.091976,-9.934223,-0.925165,5.149105,9.238204,-6.743570,-1.937815,7.335824,-5.501780,-7.758423,1.435915,-6.513497,7.399435,-2.312242,-3.414526,1.783390,5.145303,6.378241,9.501911,-2.063315,-4.767299,-3.922963,-8.107724,2.210477,2.047075,-8.952486,2.982700,4.048627,9.051044,-4.047371,7.989995,-3.683125,1.825915,-4.137774,4.724301,-9.160998,5.727879,-7.500625,-7.278465,-8.733601,1.937931,-8.646607,-7.056546,8.926853,3.355779,9.978289,0.567814,1.430641,7.786072,8.861689,6.794419,-1.766060,7.790349,-4.280853,-9.104234,2.623993,4.485279,-9.901833,6.213042,6.300742,-7.560973,0.648784,1.211318,-7.780722,-6.206888,6.764391,8.757907,3.432894,-3.192668,-7.550837,-0.785419,-9.055238,7.589090,7.791078,4.847870,-0.851782,6.398639,5.990349,-9.781380,3.094041,-0.473395,-2.599920,-2.572783,-5.245211,0.165710,0.641161,-7.270924,-5.080352,5.654758,-1.840261,-1.093851,-4.219378,0.033707,-8.023706,1.730253,-1.467234,-4.751357,-1.815218,-1.142785,8.533847,7.227689,-2.933820,0.020510,-4.373753,-4.699153,7.163454,1.743496,9.208219,4.841955,-4.551055,5.534749,-3.992333,-7.787598,5.497688,2.514855,-3.431048,0.108108,-8.134439,8.469166,2.687982,-2.477371,6.965326,-1.749015,-4.615285,-2.613096,8.174392,6.902770,-7.339751,-1.759225,1.653350,-3.656762,-4.037113,-8.589017,-4.474310,9.562647,0.578075,-6.860417,8.093215,3.035227,9.243792,6.083277,-7.551840,-8.848160,-0.060670,-9.171359,0.891688,2.878244,-7.058040,-3.691662,-5.590671,2.283364,4.784540,-3.243896,-1.324254,-9.480216,6.972981,-7.287184,1.299869,-0.318735,4.151075,5.668069,-8.907037,1.984641,-2.889265,0.380610,8.293966,-5.431798,9.050826,-8.004997,0.036474,9.292030,-1.292491,-1.172320,-2.658799,2.596658,6.165844,-1.423051,5.880006,-1.894325,-2.467958,-0.621200,-8.055141,-8.983489,7.176089,-0.971493,-5.592645,-2.505925,9.429391,-6.746339,5.258374,-3.633560,-4.673864,-9.128723,-1.129744,0.032608,8.824568,-4.127026,-4.368917,9.730095,9.025369,-7.275669,8.948185,-7.232420,5.565457,-3.054007,-4.983987,5.714294,-7.290456,5.279274,1.457602,9.662283,-1.375317,-5.561463,-7.890793,8.061816,2.367038,6.208573,-9.758062,-9.874976,-2.196175,-6.929709,2.203894,8.464308,-1.593329,-0.505060,5.381485,-5.757674,5.613765,1.954911,-3.667745,-4.195600,-2.430433,-9.285434,5.284602,8.897537,0.167229,8.425784,2.750057,-3.876466,5.271777,7.285553,-3.057817,-2.509099,4.634779,-9.439760,-0.209558,5.308148,-9.293858,3.743375,-0.602261,-6.033079,8.263654,-9.662996,-7.574200,-5.832246,4.958538,4.014001,8.383895,-7.079670,0.751057,-9.867196,8.146929,-5.634818,5.011307,0.210856,-3.932267,1.749109,0.963695,4.645272,4.641951,9.133926,2.397792,-3.328938,2.190988,1.703290,9.796200,-8.674541,-4.425228,6.149074,7.414088,8.328554,-5.610767,7.841449,8.330343,5.967855,-7.658758,3.134837,3.350828,-8.689044,-6.268352,4.493001,1.287570,-4.389117,4.251661,0.341030,4.954350,-6.626333,0.425935,8.009261,-8.892810,9.263762,-4.985496,6.201290,3.357067,-4.622287,9.255390,0.714387,6.414437,-3.105920,3.316554,5.148002,3.601686,-0.010484,8.553979,8.954074,9.376256,-9.775726,7.300112,2.464176,0.311169,2.594081,-5.951353,5.716694,-5.395213,-1.769083,2.097519,-1.872774,3.029047,-6.609687,2.678379,9.117877,-8.079216,-4.689576,9.786860,-1.182123,1.503170,7.748852,4.672506,6.352726,1.730012,5.532088,-1.886126,4.909740,5.708979,-4.482090,2.047175,2.077257,-5.564539,4.853158,8.044414,-4.407556,8.125494,-3.544015,3.468212,0.901206,1.385174,9.631794,-7.002691,-1.709075,-1.415808,-7.661543,-2.060471,-8.429760,5.671236,-9.839157,2.393710,9.710605,-6.531330,7.034059,-8.965790,-5.560737,-8.766110,0.721876,-3.910977,-5.048627,-6.109303,-8.801987,-4.062912,9.904625,3.111326,-5.208483,5.854009,7.699642,-8.945830,2.456002,5.035599,-0.462108,2.680397,7.175990,0.843619,4.866560,-9.887821,-3.964644,-4.196016,2.901425,9.496148,-4.202007,7.775612,4.633651,1.094512,-8.915699,-8.928308,-1.560947,-7.719804,-5.506602,1.054127,-0.435294,2.645397,-3.165759,-9.855201,2.371960,5.067742,-8.034834,-2.542885,-0.576979,-9.535743,-3.970461,-6.192653,9.346694,-2.462467,-3.968728,2.101674,-5.949048,-5.046679,-2.920437,-0.641647,-1.468304,0.960820,-4.791932,-0.933809,1.577225,-0.503150,-2.125794,-5.375866,5.652798,4.406742,-9.229031,-3.684834,2.606660,2.486018,-1.123916,-5.332277,-7.083645,7.383225,3.466460,0.800618,9.422868,-1.499134,-5.073142,5.778690,-0.300330,-7.346957,4.407308,7.603281,3.602492,-2.603312,-8.319731,-7.809834,-0.617199,8.349122,-3.551522,3.526765,-5.346592,2.737765,-6.572660,2.154487,9.427644,-6.861238,-1.952012,5.639816,-1.025394,4.500977,-0.533999,5.083105,-9.876731,-5.034569,-9.526492,-5.408926,-5.350329,5.396925,-1.515864,5.776589,-1.378340,-6.864164,5.654751,-5.261096,4.401437,-1.823463,-1.002904,-7.663077,-3.898151,8.837571,-2.866243,-3.261790,1.288788,-9.280012,-1.188652,0.194442,5.542907,0.525312,0.433575,-4.269564,-7.310118,7.386436,8.812691,0.902210,-1.535485,-4.552251,-5.898346,7.114339,-7.818395,5.605832,2.914302,-0.874393,-3.513053,2.400279,4.733355,-5.099113,-1.599684,-4.312576,9.588547,-3.662329,-4.370554,6.281446,3.860524,-8.268502,-2.132290,-7.547788,-9.125410,-9.333480,-3.427694,3.199634,6.017245,8.410015,5.421171,7.111140,6.725445,-0.654416,-8.330682,-5.212459,9.068191,-3.346880,-3.501600,4.145025,6.470666,8.611415,-9.115067,9.063723,-4.691361,8.930679,7.353097,3.002354,-4.735941,-0.957061,3.517739,-7.931738,-4.306914,-8.729065,4.790247,9.621971,1.925642,0.580767,6.551782,4.751572,1.898971,2.102476,-8.164263,-5.569212,3.185988,3.478353,1.207212,1.255075,-1.358671,5.304144,6.807103,-7.717820,6.139855,-6.514358,6.784237,3.075483,1.515840,9.579906,7.916204,-4.127131,-5.929561,1.860350,-5.771487,5.282018,-9.658637,-0.070217,-4.084964,-7.245438,-0.529090,-7.168473,-1.365284,8.062803,4.804179,1.585697,-4.576995,0.647764,-8.270638,-6.002435,8.364756,4.491931,-5.587070,2.052329,5.503802,4.092414,1.055057,6.228222,1.959487,5.342226,3.865448,4.248689,-5.023428,-3.197937,5.153916,0.809653,6.911512,-0.726794,5.881875,-7.161621,1.907978,-9.502595,6.392205,-2.326759,-6.728456,9.909943,0.248634,5.668717,6.752526,-1.716963,3.583842,6.023981,-4.526112,-8.221412,-7.387771,-2.589407,-2.986012,-0.115751,-9.277921,-9.060889,-0.859215,-4.732368,-9.586496,1.807729,-0.531222,-9.725872,-0.063867,-8.401864,8.264225,-4.748793,8.966853,1.689037,4.973488,3.050541,4.236713,5.250393,-2.979369,8.756461,8.727620,-3.103040,-2.985659,1.613514,7.508422,7.665773,3.902520,-3.346034,6.582312,-3.607001,2.189496,-4.792960,-2.227916,-5.605767,-0.582586,6.985517,-2.603566,4.977500,6.586485,8.112500,-4.833730,0.369199,-7.293296,-3.700850,-3.275209,1.630774,-5.473159,-8.984124,5.135317,4.235528,-3.346378,8.187989,5.370415,3.019716,-3.983195,6.732027,4.628515,-8.782486,-1.736103,5.328276,2.418693,-8.252408,1.249455,-4.100090,8.219995,-7.689830,3.434231,-9.503117,-2.156256,3.606233,0.987409,1.806936,1.266335,-6.521326,-8.225247,-9.864243,-6.602875,2.454002,7.215312,-0.077060,-2.711211,-3.133697,3.607933,-0.026564,-9.776107,-5.185717,-6.088967,8.196111,6.558598,6.647098,5.169708,8.927436,-1.237226,6.869749,8.523731,-7.050374,-6.600094,6.668319,1.883316,7.195502,6.075587,0.481385,9.907980,3.335942,4.742894,-1.165642,4.567685,-3.511297,9.340692,2.306473,-6.213514,-5.417182,7.578802,-4.919862,3.757685,-3.558890,2.804940,-1.486845,-6.167509,1.936111,-0.612645,2.463678,8.224174,2.691542,7.275789,1.817950,-9.027139,5.048930,9.316410,-1.340526,7.473958,1.778081,7.459170,-8.493576,-0.436266,9.303804,7.502905,-9.703815,-3.526680,4.121398,-4.409872,4.052652,-7.531067,-2.526923,-0.095468,-3.445843,-0.188605,-6.931922,0.595178,2.472729,-0.740737,-3.073807,8.806824,2.136481,-5.660290,-2.412843,3.418666,3.321196,-7.085674,-2.391065,6.814892,-4.821148,-7.400373,8.004499,3.036730,1.578102,4.045544,-1.666017,-7.370812,-9.318346,-9.074047,-2.926187,8.572313,-5.142106,6.789705,-9.118718,1.146534,-7.514737,-3.913582,-5.743142,8.266854,0.770681,6.387429,3.358255,0.036419,5.682805,-0.894464,-6.185900,1.000297,4.415514,4.787118,3.767813,3.153791,-2.012717,7.463305,2.822583,6.165542,3.856743,-6.869732,-0.186299,5.675444,-2.067866,9.034225,8.958849,6.885299,-3.311129,-4.526538,2.772687,3.223810,7.163357,-3.051361,5.158255,-1.713272,0.081224,-0.609335,-1.858164,8.282583,3.673588,1.609748,6.093355,-1.530962,2.321616,-1.392584,-7.652366,0.754588,-4.435279,-3.916266,3.882775,3.602477,-1.523213,-8.385007,9.527308,1.556151,4.436234,6.736501,1.259525,-2.859434,-5.095180,0.305445,-8.036959,1.688940,3.973467,8.852300,-0.178629,7.434422,-6.614543,0.620740,7.851159,-3.861462,-3.722186,0.721775,7.329878,-4.881348,-2.471282,-5.976614,-5.809214,-1.347860,-6.596003,-6.832126,-4.453487,6.559476],[-2.537698,-4.983574,1.791431,-1.788592,-2.719333,3.704735,8.650698,8.328121,0.068795,-5.632517,4.579521,7.383732,-5.365006,-7.749593,4.347595,1.482336,6.862924,6.723113,2.358014,-5.955938,-9.112807,4.658061,4.718568,9.014766,9.883099,5.586212,-6.919478,-7.410838,-2.675039,6.657131,-4.684381,4.413907,-7.005829,-0.214381,-9.421789,7.134856,-2.125581,-8.676849,-7.715731,-1.106240,-2.329349,-4.822783,5.671904,9.363302,-9.863956,6.439926,-4.426108,-1.765996,-2.673578,-3.134402,1.224033,5.353647,-0.833551,1.901070,9.741200,-5.293462,3.761959,7.621031,1.637337,1.511863,2.675348,-4.522748,8.580820,5.004691,1.411312,8.333018,4.533419,-3.623256,-9.767645,-6.848609,-6.034523,4.470270,-0.870316,-2.839553,-8.113961,2.585598,-6.376655,8.293280,-0.082944,2.500624,-2.493106,-3.847832,0.247095,5.895732,-3.396293,-2.676449,9.318287,2.359484,-6.814938,8.416567,4.467133,-4.611716,2.016876,4.541840,-7.563473,1.412401,7.477709,0.532439,3.299116,2.930736,-2.094476,-5.459994,8.776885,2.688661,5.222923,-4.726464,9.331974,-2.883455,-4.087478,-6.533449,3.899738,2.606973,3.758896,6.964788,-1.669307,7.098108,-0.156235,-2.570956,7.818837,9.741793,-7.751291,0.385548,9.839203,-3.956339,1.288295,-1.108052,7.792361,-8.402654,-2.626833,2.027943,-2.068918,-9.258067,-0.815362,-5.695327,-1.817181,-7.881225,-9.768988,3.682998,6.705528,7.195613,-4.058089,3.480515,-0.194356,1.274221,-6.756466,8.851844,6.590781,1.047080,-5.872156,8.659337,-6.302009,4.048310,7.998649,-6.167033,5.452971,6.251229,0.704960,3.834157,-2.681264,8.521231,1.599406,9.416198,-7.092738,-5.434128,7.244271,6.617307,2.795682,-1.030997,4.220048,5.680872,-3.839240,5.942374,-7.426535,9.603772,4.956198,8.946191,1.089427,9.447789,9.797342,-9.161422,4.168996,-4.623977,3.679482,6.749303,9.507007,1.845005,3.740122,-3.224110,4.335700,7.868908,-6.520892,4.646002,6.065356,6.812461,-4.032010,2.484626,5.324208,-5.114191,-8.132056,-7.007088,-0.346425,-3.977125,-8.723439,9.660361,-8.713272,-7.090421,9.280957,8.729597,-1.892521,-7.272657,-6.924859,-7.234803,7.570232,-3.620591,-1.744925,-6.040846,-9.119126,-3.960428,4.752008,-3.294680,-8.562920,-8.338975,-1.416728,2.939026,-8.026042,1.175960,2.308626,-3.402322,-3.808567,9.358347,1.752630,-7.681321,-8.960744,-1.743248,-9.975982,4.835437,5.984889,5.623692,0.825328,-2.422082,-6.200965,9.138143,6.862237,-6.367924,-4.493646,-1.791262,3.751260,-7.623808,-8.395642,9.459142,9.751333,2.562575,-3.968013,2.812060,7.475316,5.654118,0.405102,-7.184270,7.399561,2.999676,-0.888636,3.196968,-0.949799,2.357554,6.953555,9.195722,3.929811,4.402814,5.659245,-8.175670,4.323531,-4.277302,-6.077551,8.075178,-8.219689,5.334610,5.471346,-3.442707,-0.493562,-3.337347,4.852883,2.850938,-9.727397,-5.575708,1.152130,9.791230,9.699037,4.943948,-9.254625,8.688008,8.195421,7.430878,1.370109,-5.246900,8.245967,8.403435,5.314604,0.568820,-6.393503,3.777531,-7.569799,-5.485854,9.638444,5.092282,-3.344479,-8.365981,-9.378791,-2.849196,0.955657,5.425160,3.224918,9.785583,1.872103,9.364051,0.958920,0.267716,0.935952,8.268540,-3.770837,-0.192400,7.490157,-6.168352,-4.433878,0.276207,-6.999485,-7.180621,-2.601354,-1.726496,-9.686122,6.566106,-3.966997,-6.573938,-9.662754,-3.644955,-1.803599,3.800449,8.490008,7.080911,2.393275,-8.171918,-0.981508,5.437296,-4.040153,-0.594258,7.800994,-7.272406,2.801735,1.348577,-3.329673,-6.404187,-6.805919,-5.989351,0.938184,8.773886,1.808423,-0.377544,-0.244445,-2.550309,3.525615,-3.673925,-6.461015,9.488417,1.762779,2.253911,-7.083908,-6.714125,5.316346,0.062723,4.964109,0.767217,-6.615054,-5.987853,-9.035667,1.198555,8.336667,-1.798634,5.333293,7.163066,0.133960,-9.016149,-6.108718,-7.357173,-4.051801,1.262799,4.615695,-8.133085,-5.625088,-8.620634,2.773478,0.001969,4.024805,-1.147418,5.631249,3.111941,-0.532970,-8.802252,7.834155,-7.612934,-7.615853,1.092651,2.003433,7.529396,-1.592691,-2.507810,-1.862094,-9.745824,6.163495,-2.698004,6.441232,8.740959,0.095251,-1.638490,5.751197,-1.963937,-1.540042,0.997221,7.806905,-4.791223,-5.460953,9.913162,-5.323673,3.682269,-8.776910,-2.293532,5.229936,2.463382,0.511572,3.451088,4.564438,9.630972,4.046165,5.950265,3.407410,-4.543028,-0.443548,-8.354462,-8.666998,-8.960573,9.872339,-2.141783,4.770880,-6.324208,0.417650,3.875862,8.237615,0.525903,6.011346,-8.167328,-1.992379,-3.497260,-2.497411,4.847953,-6.306275,-8.878233,-8.103946,8.739894,-6.966584,-4.152202,8.101407,-0.921257,-7.827474,-5.891078,-0.687807,5.563665,2.500676,9.467028,-6.444247,-8.405674,1.243288,7.102768,7.824305,2.101516,-8.275839,-5.703475,0.283281,-6.279231,-6.453060,1.270538,5.178155,8.392108,-1.763500,2.156111,6.318410,-5.769949,-8.826782,-4.519235,-6.682046,5.058656,7.273085,-4.210083,9.521154,7.977798,5.180201,-7.396250,8.179507,-5.533887,6.465653,-1.052012,2.898313,4.574520,-1.095341,-9.411887,6.592208,1.566285,2.654560,6.704371,8.787215,-8.347816,5.629252,1.924795,-2.813240,-1.097817,6.202552,-0.512888,9.208916,-2.929234,2.258119,-6.503382,4.131086,9.838059,-8.270569,9.979671,1.367231,-8.206659,-8.521993,3.528841,1.948172,-6.615976,7.261016,-3.462950,-0.889943,-9.030647,0.298398,-9.098052,2.404236,9.737947,-5.184169,4.944694,-0.550032,-6.620026,8.750122,8.110968,-6.469277,-4.349593,-6.595553,-4.300075,2.047379,-3.877355,-5.680095,8.007724,-1.118961,4.398159,1.364809,5.474414,-4.163518,5.620784,7.138261,4.336316,-1.443982,3.676222,-6.131504,-0.005009,7.808552,-3.095785,4.193138,0.491079,-6.768493,3.002444,2.192035,3.045503,-5.933450,1.030148,6.736854,0.846730,-9.474699,-9.958388,7.545862,2.205237,1.261512,-7.116777,3.724689,-2.306922,-6.070942,-8.528834,-2.017417,0.281613,-5.879274,6.715209,9.117673,4.872781,0.161135,-3.623827,-0.338066,1.431480,4.141151,2.448187,3.399816,-8.880634,3.263810,5.179494,-8.764139,-2.673267,-7.735118,-0.444750,1.240289,0.854257,9.521323,2.397790,9.423771,6.444348,-9.835079,-0.650358,9.060740,5.657185,3.693032,-2.182787,1.324906,-7.413755,-8.068452,-3.593060,-7.904375,8.699091,8.307897,-2.723873,8.984165,-9.788160,-3.184113,-0.569812,5.429539,-2.034383,-0.840423,1.089931,0.141638,4.024017,-8.133076,7.079595,-5.115756,4.221349,3.291454,-5.810366,3.253814,-5.467337,4.394288,8.455224,-8.075125,5.644138,5.617586,6.006486,-3.654912,-9.780859,-7.839561,-1.279620,-6.495084,-8.891379,8.244616,6.548878,9.571397,-2.729804,-4.690647,-5.012694,2.415715,0.159874,-6.217436,5.050882,-1.224190,1.570956,-6.753461,8.375580,4.919060,-9.683228,-9.167258,-0.732163,-8.412660,7.049438,-6.115746,7.389373,3.434029,-3.818297,2.936967,0.828584,-4.926820,-4.187157,-1.759532,0.127490,-3.060179,-7.090237,2.340905,-0.615081,2.762293,-3.822269,5.815822,6.099975,5.276492,-0.738940,1.862678,-0.145600,9.059668,-0.382350,-1.578194,6.749717,-4.581656,0.656475,-2.872570,6.424760,4.021845,-0.845072,3.259367,-0.622135,0.092630,-4.244731,-0.897604,-9.078852,3.321738,1.699523,3.912293,-5.754907,-8.346594,4.248149,-7.965356,-8.755633,6.813407,-9.525503,-5.114991,2.359965,-8.816499,-6.287517,-9.228961,-5.665392,-5.879634,6.087940,-1.773150,8.783207,5.977348,-4.075872,3.267033,-9.872821,9.462728,1.917861,2.860206,8.177091,-3.819300,-1.869686,4.683877,6.105519,-8.989561,2.001985,-8.853313,4.598157,7.200108,1.470984,-7.423896,8.379291,0.727128,7.107096,4.864666,-0.040869,-2.557378,-9.090878,4.212120,8.283806,-4.504211,-0.443964,7.793518,1.295273,0.802994,6.082816,-2.686526,2.234145,-3.196050,-3.207047,-9.165989,8.521619,5.587214,-2.200994,9.223707,-5.734376,-1.275568,5.953728,-9.773878,-2.371700,3.729947,1.182997,8.634462,2.323452,1.367386,9.184536,-0.114453,-5.694936,3.577368,-3.578417,5.980214,-9.472154,-7.163069,4.701270,-6.891721,-7.315601,-3.727631,0.658946,0.795213,3.326051,-2.239108,-0.395257,0.518480,-4.377762,1.909418,-1.058958,5.372344,-5.192594,-4.859315,-3.618570,5.312021,-2.335821,-1.572596,9.219792,6.025931,-1.305875,-0.561912,-4.111523,-6.405264,-2.919710,-6.616542,-8.635182,2.689097,0.804929,-9.077498,1.964261,-2.310031,5.240803,7.196810,-4.677849,4.208963,3.942128,1.496317,-3.116070,-0.609707,4.551236,0.401979,3.993292,-3.409118,-7.927482,-9.436308,5.856588,9.980271,-7.126153,3.508377,9.192526,7.378955,-7.359714,3.201214,-4.506946,5.780961,-0.513880,7.730706,-0.937375,-0.446569,6.587938,-4.100928,7.888506,4.933346,-0.585185,3.984029,-2.163555,-0.439625,9.222266,4.768648,-8.204891,-4.006583,9.435692,-2.622030,1.402958,-7.980317,9.214449,7.678813,-6.982349,-2.939088,-4.512976,3.362445,3.483035,7.862025,6.172519,-9.951744,-7.812111,-8.301219,5.396554,4.633418,7.188083,5.599856,-7.234260,8.860613,8.408679,8.004154,4.971987,-9.815887,9.103556,-6.305401,-1.472893,-5.295325,6.230283,-7.271802,7.229148,3.482220,6.671650,8.337490,-1.014952,3.217541,9.645202,5.696671,3.158344,2.046642,0.054749,9.503918,-5.979491,-9.198407,-2.392999,-8.853510,-4.219445,-6.200768,-5.049127,7.140532,-8.133333,1.803143,-1.017115,1.534322,-7.028053,-9.735876,-4.175236,-6.239696,3.962084,-9.969669,3.529455,0.222438,-4.478123,-2.118997,5.013997,3.876236,-5.686385,1.235633,5.962727,-5.459249,7.442575,-2.718487,-2.426009,5.726152,5.261302,8.362584,-6.696457,0.890841,-4.971029,-6.383822,1.436071,9.815831,-8.942090,-9.658931,9.766262,5.436612,1.144379,-9.120712,-3.578337,3.522974,8.326798,2.404511,9.477394,1.340520,-3.081796,-4.929886,3.598431,8.289222,-6.645419,-3.778634,-4.502324,6.110661,4.246731,9.228041,2.521878,0.109404,3.019293,-0.079004,8.986170,-0.428572,6.314869,-4.401970,-1.012625,-4.646104,0.238769,3.695713,1.947054,-6.460565,-6.615349,-3.202067,-3.189354,3.601891,-7.431583,4.242196,2.126195,9.801544,-7.993028,9.325092,3.801286,9.809932,-9.077740,-5.064833,6.865910,-4.808323,-9.971528,9.344244,9.544569,-2.699668,6.629755,0.774161,3.458178,7.203778,-2.247136,7.122682,6.063403,8.313150,1.667891,8.702154,-9.708699,-0.186257,-4.038974,0.162396,-0.537343,-0.321600,1.110025,-4.781033,-8.464337,-4.354140,5.592388,4.087376,7.046102,-3.011422,-2.556899,3.251462,-7.922503,-3.732402,-8.201557,-0.510809,5.714239,-7.259422,-5.569260,-1.860085,-8.153317,-2.161281,-5.657523,-9.839359,-2.672391,-0.194944,-1.286335,0.054897,7.007092,-8.435312,8.252787,7.784695,2.369196,-2.352840,-4.859384,-3.417027,2.410899,-6.274188,-5.563955,7.131602,-1.347499,-4.739509,-4.598263,3.841727,9.136311,7.415166,-1.656304,7.318386,-2.341074,4.642400,-0.450775,3.588286,-4.605783,0.001071,6.831614,7.827793,-4.229237,-1.128477,2.434513,1.112784,2.911192,-8.117938,6.510821,5.417767,9.032243,-5.998403,2.912394,4.366216,-0.124685,-5.964904,-4.912375,9.202575,6.938871,8.827339,7.594515,3.464111,1.289044,-1.298533,-2.024240,-4.569700,-4.109655,7.047045,-9.443490,-1.212113,-3.424595,-6.888646,-7.348051,1.042578,-5.197607,6.326883,7.433119,-0.509425,-7.842003,0.263682,0.508137,-2.664177,7.037524,4.691445,-3.013494,-4.132555,-9.067447,8.626604,-8.836709,8.902373,8.097601,-9.824433,8.977540,3.535504,7.003283,-3.464261,-8.529241,-4.870528,5.688648,-3.197356,2.848147,-3.928351,2.510852,6.005726,-0.165858,-3.656445,4.512279,5.609676,-8.788670,-0.007492,2.263381,-3.574699,7.892492,7.447003,-4.166912,-8.912832,-1.422011,9.514065,9.493252,3.754349,4.396297,8.827051,-6.135271,-0.554527,-4.923789,-2.140825,6.151900,7.236413,-2.412885,2.092973,-8.563564,-8.877795,-7.386409,9.646973,-8.812860,-8.734576,-6.735225,-8.987483,-4.377274,1.325312,2.157134,-9.179018,-3.977410,5.374845,3.305541,6.041675,6.404410,-8.453937,-3.098982,5.613121,1.609341,-3.574684,8.834485,-9.542238,5.752237,-9.738457,-2.719313,-2.484098,4.695785,9.394810,-3.126630,-5.990708,-8.412266,-7.237200,-2.009832,-7.184825,2.734664,-7.835859,6.517177,-5.417885,-3.953690,-9.681745,8.422552,-2.706493,-4.505457,3.633345,-3.976970,-1.147762,4.418734,0.255318,-6.816976,6.306291,1.512282,0.986139,-2.163949,4.193269,-1.838650,5.774794,-0.185066,-7.960936,3.357475,-9.806536,-0.127310,3.905368,8.001468,6.823638,-4.283877,6.873255,-5.308745,-7.877749,-8.017767,-9.454257,0.605297,-9.894977,9.392937,3.171451,1.161457,-9.527040,-2.607273,2.325486,0.909864,-4.272458,1.855101,7.171784,-9.452936,-7.092781,3.447960,7.847695,6.951504,6.809140,7.878010,7.224634,-3.920695,-2.638743,8.357958,-1.243092,-4.690324,-0.029486,-9.555389,-0.683527,-9.408043,9.656054,1.551610,-2.939371,-3.156349,6.669396,-2.430718,-1.799879,-1.636531,-1.657375,-8.734577,-9.867324,3.524761,-7.252875,-5.960453,-6.932873,-2.945178,6.603972,-3.349073,-8.961970,5.312065,-5.771476,-5.798153,-1.083745,3.043074,8.031844,6.561410,8.277087,-3.311278,-3.721810,-8.043171,5.695108,-7.527377,-7.222755,1.228777,5.052515,-3.886315,-4.244543,0.376459,9.721916,6.777344,-2.618164,1.111002,3.493369,-5.033532,-7.877093,-3.899859,8.717810,-1.978020,-0.380290,-5.166266,-8.095305,3.644712,1.435321,7.958697,-2.695199,2.518411,6.361631,-9.819840,8.438397,-6.945470,1.277624,5.861753,6.437853,-2.619250,4.967575,-5.363643,4.997836,9.605817,-6.243240,0.762852,4.486502,3.202615,0.765872,-8.475986,-5.922523,0.121389,8.851691,-0.691329,-0.756064,-2.927521,3.518837,-3.568679,9.872862,-7.235745,-2.170372,-0.313345,-0.313015,9.673084,9.708172,-1.894508,-6.281701,3.065396,8.442081,6.260018,-1.624889,9.759312,-5.952647,-8.196895,9.575614,8.819791,-9.214463,-1.958224,2.920499,2.294365,1.463061,1.332120,5.355349,5.775479,-9.837471,-0.771551,9.285312,2.765091,9.205722,7.442745,-3.880796,7.605028,-0.510465,3.071830,2.118652,-3.079832,5.236439,-4.620631,-6.841817,1.779745,-6.544146,5.734091,3.208690,4.329729,-1.519899,-1.180911,7.744079,3.108997,4.190748,-9.292891,5.648356,1.430767,-5.593708,3.824360,8.926888,6.482071,3.252620,7.391134]], dtype = "float64")#candidate|4145|(2, 1408)|const|float64
call_4142 = relay.TupleGetItem(func_3697_call(relay.reshape(const_4143.astype('int8'), [12, 8, 6]), relay.reshape(const_4143.astype('int8'), [12, 8, 6]), relay.reshape(const_4144.astype('int8'), [154,]), relay.reshape(const_4145.astype('float64'), [2816,]), ), 5)
call_4146 = relay.TupleGetItem(func_3702_call(relay.reshape(const_4143.astype('int8'), [12, 8, 6]), relay.reshape(const_4143.astype('int8'), [12, 8, 6]), relay.reshape(const_4144.astype('int8'), [154,]), relay.reshape(const_4145.astype('float64'), [2816,]), ), 5)
func_339_call = mod.get_global_var('func_339')
func_342_call = mutated_mod.get_global_var('func_342')
var_4154 = relay.var("var_4154", dtype = "float32", shape = (264, 2))#candidate|4154|(264, 2)|var|float32
call_4153 = func_339_call(relay.reshape(var_4154.astype('float32'), [12, 11, 4]))
call_4155 = func_339_call(relay.reshape(var_4154.astype('float32'), [12, 11, 4]))
output = relay.Tuple([call_4120,call_4142,const_4143,const_4144,const_4145,call_4153,var_4154,])
output2 = relay.Tuple([call_4121,call_4146,const_4143,const_4144,const_4145,call_4155,var_4154,])
func_4156 = relay.Function([var_4154,], output)
mod['func_4156'] = func_4156
mod = relay.transform.InferType()(mod)
mutated_mod['func_4156'] = func_4156
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4157 = relay.var("var_4157", dtype = "float32", shape = (264, 2))#candidate|4157|(264, 2)|var|float32
func_4156_call = mutated_mod.get_global_var('func_4156')
call_4158 = func_4156_call(var_4157)
output = call_4158
func_4159 = relay.Function([var_4157], output)
mutated_mod['func_4159'] = func_4159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4016_call = mod.get_global_var('func_4016')
func_4018_call = mutated_mod.get_global_var('func_4018')
call_4206 = relay.TupleGetItem(func_4016_call(), 0)
call_4207 = relay.TupleGetItem(func_4018_call(), 0)
output = relay.Tuple([call_4206,])
output2 = relay.Tuple([call_4207,])
func_4212 = relay.Function([], output)
mod['func_4212'] = func_4212
mod = relay.transform.InferType()(mod)
output = func_4212()
func_4213 = relay.Function([], output)
mutated_mod['func_4213'] = func_4213
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4254 = relay.var("var_4254", dtype = "uint8", shape = (6, 16, 1))#candidate|4254|(6, 16, 1)|var|uint8
var_4255 = relay.var("var_4255", dtype = "uint8", shape = (6, 16, 2))#candidate|4255|(6, 16, 2)|var|uint8
bop_4256 = relay.left_shift(var_4254.astype('uint8'), var_4255.astype('uint8')) # shape=(6, 16, 2)
uop_4273 = relay.tan(bop_4256.astype('float64')) # shape=(6, 16, 2)
uop_4275 = relay.acos(var_4255.astype('float64')) # shape=(6, 16, 2)
func_134_call = mod.get_global_var('func_134')
func_137_call = mutated_mod.get_global_var('func_137')
var_4279 = relay.var("var_4279", dtype = "int8", shape = ())#candidate|4279|()|var|int8
var_4280 = relay.var("var_4280", dtype = "int8", shape = (154,))#candidate|4280|(154,)|var|int8
call_4278 = relay.TupleGetItem(func_134_call(relay.reshape(var_4279.astype('int8'), []), relay.reshape(var_4280.astype('int8'), [14, 1, 11]), ), 0)
call_4281 = relay.TupleGetItem(func_137_call(relay.reshape(var_4279.astype('int8'), []), relay.reshape(var_4280.astype('int8'), [14, 1, 11]), ), 0)
func_2237_call = mod.get_global_var('func_2237')
func_2239_call = mutated_mod.get_global_var('func_2239')
var_4288 = relay.var("var_4288", dtype = "uint64", shape = (132,))#candidate|4288|(132,)|var|uint64
call_4287 = relay.TupleGetItem(func_2237_call(relay.reshape(var_4288.astype('uint64'), [1, 11, 12])), 0)
call_4289 = relay.TupleGetItem(func_2239_call(relay.reshape(var_4288.astype('uint64'), [1, 11, 12])), 0)
output = relay.Tuple([uop_4273,uop_4275,call_4278,var_4279,var_4280,call_4287,var_4288,])
output2 = relay.Tuple([uop_4273,uop_4275,call_4281,var_4279,var_4280,call_4289,var_4288,])
func_4294 = relay.Function([var_4254,var_4255,var_4279,var_4280,var_4288,], output)
mod['func_4294'] = func_4294
mod = relay.transform.InferType()(mod)
mutated_mod['func_4294'] = func_4294
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4294_call = mutated_mod.get_global_var('func_4294')
var_4296 = relay.var("var_4296", dtype = "uint8", shape = (6, 16, 1))#candidate|4296|(6, 16, 1)|var|uint8
var_4297 = relay.var("var_4297", dtype = "uint8", shape = (6, 16, 2))#candidate|4297|(6, 16, 2)|var|uint8
var_4298 = relay.var("var_4298", dtype = "int8", shape = ())#candidate|4298|()|var|int8
var_4299 = relay.var("var_4299", dtype = "int8", shape = (154,))#candidate|4299|(154,)|var|int8
var_4300 = relay.var("var_4300", dtype = "uint64", shape = (132,))#candidate|4300|(132,)|var|uint64
call_4295 = func_4294_call(var_4296,var_4297,var_4298,var_4299,var_4300,)
output = call_4295
func_4301 = relay.Function([var_4296,var_4297,var_4298,var_4299,var_4300,], output)
mutated_mod['func_4301'] = func_4301
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4016_call = mod.get_global_var('func_4016')
func_4018_call = mutated_mod.get_global_var('func_4018')
call_4334 = relay.TupleGetItem(func_4016_call(), 0)
call_4335 = relay.TupleGetItem(func_4018_call(), 0)
func_4016_call = mod.get_global_var('func_4016')
func_4018_call = mutated_mod.get_global_var('func_4018')
call_4350 = relay.TupleGetItem(func_4016_call(), 0)
call_4351 = relay.TupleGetItem(func_4018_call(), 0)
bop_4357 = relay.greater_equal(call_4334.astype('bool'), relay.reshape(call_4350.astype('bool'), relay.shape_of(call_4334))) # shape=(14, 7, 3)
bop_4360 = relay.greater_equal(call_4335.astype('bool'), relay.reshape(call_4351.astype('bool'), relay.shape_of(call_4335))) # shape=(14, 7, 3)
func_4212_call = mod.get_global_var('func_4212')
func_4213_call = mutated_mod.get_global_var('func_4213')
call_4371 = relay.TupleGetItem(func_4212_call(), 0)
call_4372 = relay.TupleGetItem(func_4213_call(), 0)
output = relay.Tuple([bop_4357,call_4371,])
output2 = relay.Tuple([bop_4360,call_4372,])
func_4375 = relay.Function([], output)
mod['func_4375'] = func_4375
mod = relay.transform.InferType()(mod)
output = func_4375()
func_4376 = relay.Function([], output)
mutated_mod['func_4376'] = func_4376
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4386 = relay.var("var_4386", dtype = "float32", shape = (15, 7, 3))#candidate|4386|(15, 7, 3)|var|float32
uop_4387 = relay.sin(var_4386.astype('float32')) # shape=(15, 7, 3)
func_4294_call = mod.get_global_var('func_4294')
func_4301_call = mutated_mod.get_global_var('func_4301')
const_4391 = relay.const([-2,8,3,4,-6,10,6,-2,-9,6,-10,9,-4,-1,2,6,2,-2,2,5,-10,-5,-2,-5,-1,7,9,-5,4,7,-10,10,6,5,7,-5,4,5,6,7,8,-9,9,9,1,-1,-10,-3,2,-4,9,-6,-9,8,-1,-5,10,8,-9,5,5,-3,7,-1,3,10,5,4,8,-1,9,-8,9,10,-2,-8,-1,2,-6,-6,6,-10,1,5,7,8,2,-7,-3,9,-2,-2,9,-10,7,-3], dtype = "uint8")#candidate|4391|(96,)|const|uint8
var_4392 = relay.var("var_4392", dtype = "uint8", shape = (8, 24))#candidate|4392|(8, 24)|var|uint8
var_4393 = relay.var("var_4393", dtype = "int8", shape = ())#candidate|4393|()|var|int8
var_4394 = relay.var("var_4394", dtype = "int8", shape = (154,))#candidate|4394|(154,)|var|int8
var_4395 = relay.var("var_4395", dtype = "uint64", shape = (132,))#candidate|4395|(132,)|var|uint64
call_4390 = relay.TupleGetItem(func_4294_call(relay.reshape(const_4391.astype('uint8'), [6, 16, 1]), relay.reshape(var_4392.astype('uint8'), [6, 16, 2]), relay.reshape(var_4393.astype('int8'), []), relay.reshape(var_4394.astype('int8'), [154,]), relay.reshape(var_4395.astype('uint64'), [132,]), ), 2)
call_4396 = relay.TupleGetItem(func_4301_call(relay.reshape(const_4391.astype('uint8'), [6, 16, 1]), relay.reshape(var_4392.astype('uint8'), [6, 16, 2]), relay.reshape(var_4393.astype('int8'), []), relay.reshape(var_4394.astype('int8'), [154,]), relay.reshape(var_4395.astype('uint64'), [132,]), ), 2)
func_134_call = mod.get_global_var('func_134')
func_137_call = mutated_mod.get_global_var('func_137')
call_4400 = relay.TupleGetItem(func_134_call(relay.reshape(var_4393.astype('int8'), []), relay.reshape(call_4390.astype('int8'), [14, 1, 11]), ), 0)
call_4401 = relay.TupleGetItem(func_137_call(relay.reshape(var_4393.astype('int8'), []), relay.reshape(call_4390.astype('int8'), [14, 1, 11]), ), 0)
output = relay.Tuple([uop_4387,call_4390,const_4391,var_4392,var_4393,var_4394,var_4395,call_4400,])
output2 = relay.Tuple([uop_4387,call_4396,const_4391,var_4392,var_4393,var_4394,var_4395,call_4401,])
func_4411 = relay.Function([var_4386,var_4392,var_4393,var_4394,var_4395,], output)
mod['func_4411'] = func_4411
mod = relay.transform.InferType()(mod)
var_4412 = relay.var("var_4412", dtype = "float32", shape = (15, 7, 3))#candidate|4412|(15, 7, 3)|var|float32
var_4413 = relay.var("var_4413", dtype = "uint8", shape = (8, 24))#candidate|4413|(8, 24)|var|uint8
var_4414 = relay.var("var_4414", dtype = "int8", shape = ())#candidate|4414|()|var|int8
var_4415 = relay.var("var_4415", dtype = "int8", shape = (154,))#candidate|4415|(154,)|var|int8
var_4416 = relay.var("var_4416", dtype = "uint64", shape = (132,))#candidate|4416|(132,)|var|uint64
output = func_4411(var_4412,var_4413,var_4414,var_4415,var_4416,)
func_4417 = relay.Function([var_4412,var_4413,var_4414,var_4415,var_4416,], output)
mutated_mod['func_4417'] = func_4417
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4375_call = mod.get_global_var('func_4375')
func_4376_call = mutated_mod.get_global_var('func_4376')
call_4448 = relay.TupleGetItem(func_4375_call(), 1)
call_4449 = relay.TupleGetItem(func_4376_call(), 1)
var_4451 = relay.var("var_4451", dtype = "float32", shape = (14, 7, 3))#candidate|4451|(14, 7, 3)|var|float32
bop_4452 = relay.subtract(call_4448.astype('uint32'), relay.reshape(var_4451.astype('uint32'), relay.shape_of(call_4448))) # shape=(14, 7, 3)
bop_4455 = relay.subtract(call_4449.astype('uint32'), relay.reshape(var_4451.astype('uint32'), relay.shape_of(call_4449))) # shape=(14, 7, 3)
output = bop_4452
output2 = bop_4455
func_4460 = relay.Function([var_4451,], output)
mod['func_4460'] = func_4460
mod = relay.transform.InferType()(mod)
mutated_mod['func_4460'] = func_4460
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4461 = relay.var("var_4461", dtype = "float32", shape = (14, 7, 3))#candidate|4461|(14, 7, 3)|var|float32
func_4460_call = mutated_mod.get_global_var('func_4460')
call_4462 = func_4460_call(var_4461)
output = call_4462
func_4463 = relay.Function([var_4461], output)
mutated_mod['func_4463'] = func_4463
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4532 = relay.var("var_4532", dtype = "float64", shape = (5, 9, 1))#candidate|4532|(5, 9, 1)|var|float64
const_4533 = relay.const([[[-9.896916,-6.785942,-3.304998,3.769311],[4.874645,-1.841567,-7.857564,-9.223985],[-4.416041,-1.579237,4.056990,6.813294],[-4.835262,3.112049,9.671665,-2.524745],[-2.497025,0.366067,9.695748,4.562531],[-3.325133,-4.515920,-3.129635,-7.154612],[5.640658,-5.165826,-2.545928,7.587298],[-8.968343,6.315516,-6.813622,9.750124],[3.717175,6.133912,3.710780,3.342327]],[[-2.777606,9.453736,-5.066445,6.627893],[-7.697144,-0.130211,-9.017895,6.495655],[4.484779,-8.422398,-1.017746,-1.819566],[-1.128632,-1.121478,-6.502188,6.668233],[3.128666,-5.242274,2.232087,-9.087452],[7.564234,-3.327587,-4.281836,-9.792334],[3.960370,7.547046,-7.483963,1.442741],[-8.799647,8.082005,1.051981,2.950458],[3.078103,-2.109481,-4.601102,-7.704287]],[[-0.902122,1.159895,-2.838368,-4.031386],[-6.860164,7.730285,5.725013,8.589894],[3.272626,8.108675,-0.585157,2.196877],[-5.812067,-2.794659,-6.200552,-7.199130],[7.246570,-4.859929,-2.587062,3.383397],[-1.605663,6.793902,4.415037,8.149241],[1.717893,7.101316,-0.508472,6.935747],[6.440308,3.577304,-3.430715,-1.889129],[7.938925,7.072068,9.205300,-9.790153]],[[-3.416992,2.655357,-5.690239,-5.837552],[1.430049,4.370297,-4.682933,-9.599074],[-5.445276,-4.736609,-0.653122,2.419538],[8.396876,7.389221,9.839394,-0.764032],[0.233377,-4.711390,7.769074,-6.576919],[-8.398668,-6.151291,-9.603027,-5.921993],[-5.918382,-5.848579,9.074870,-6.061075],[-3.099346,2.696563,7.043534,7.452260],[-4.426954,-5.959425,-4.903106,-6.056945]],[[8.451807,-6.280765,-1.668214,-1.518467],[0.426253,8.525928,-2.431297,9.798228],[9.250718,7.691457,-2.970569,6.361953],[-7.084961,-5.119717,-5.149035,0.117658],[3.008016,-0.003023,7.346535,-2.509355],[0.829138,6.657733,6.207983,-4.164947],[-9.710874,5.739029,5.607724,0.700251],[8.133131,-2.221302,-1.875557,6.399976],[0.773893,7.439264,-9.249524,8.204697]]], dtype = "float64")#candidate|4533|(5, 9, 4)|const|float64
bop_4534 = relay.floor_divide(var_4532.astype('float64'), const_4533.astype('float64')) # shape=(5, 9, 4)
uop_4539 = relay.atan(const_4533.astype('float32')) # shape=(5, 9, 4)
uop_4541 = relay.sin(uop_4539.astype('float64')) # shape=(5, 9, 4)
output = relay.Tuple([bop_4534,uop_4541,])
output2 = relay.Tuple([bop_4534,uop_4541,])
func_4551 = relay.Function([var_4532,], output)
mod['func_4551'] = func_4551
mod = relay.transform.InferType()(mod)
mutated_mod['func_4551'] = func_4551
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4552 = relay.var("var_4552", dtype = "float64", shape = (5, 9, 1))#candidate|4552|(5, 9, 1)|var|float64
func_4551_call = mutated_mod.get_global_var('func_4551')
call_4553 = func_4551_call(var_4552)
output = call_4553
func_4554 = relay.Function([var_4552], output)
mutated_mod['func_4554'] = func_4554
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4212_call = mod.get_global_var('func_4212')
func_4213_call = mutated_mod.get_global_var('func_4213')
call_4577 = relay.TupleGetItem(func_4212_call(), 0)
call_4578 = relay.TupleGetItem(func_4213_call(), 0)
func_1737_call = mod.get_global_var('func_1737')
func_1743_call = mutated_mod.get_global_var('func_1743')
var_4582 = relay.var("var_4582", dtype = "int32", shape = (648,))#candidate|4582|(648,)|var|int32
const_4583 = relay.const([3.392479,7.924368,1.497541,-1.522198,2.863123,-9.691340,-6.187084,-5.196784,-8.783908,-2.960587,1.940573,5.985031,5.336744,0.496719,9.109327,-0.645951,4.802035,3.565661,3.705080,4.553365,-0.851476,3.661077,-6.960909,9.338237,-8.774296,-0.118076,-2.702246,6.946999,-2.299628,-4.995198,-0.503818,-3.452617,-5.960310,-0.710489,-8.416239,5.115527,8.071603,4.188430,-6.465606,-5.830440,-6.289852,6.339130,-1.747452,-1.572692,0.018729,0.113454,-3.829170,4.008882,8.832046,-6.588886,7.686436,-7.950737,-9.538484,-1.629634,-6.009232,-1.962409,2.435667,9.509421,-9.069624,2.702845], dtype = "float64")#candidate|4583|(60,)|const|float64
var_4584 = relay.var("var_4584", dtype = "int8", shape = ())#candidate|4584|()|var|int8
const_4585 = relay.const([[-1.040276,1.302638,-8.447218,-2.847938,9.702431,2.357148,1.364664,9.173636,7.145050,7.238813,-5.290703,2.591997,2.301521,5.672200],[2.615110,8.842083,1.588359,-6.430483,-2.239582,-1.101683,4.629492,0.540434,9.874381,-1.604392,1.002170,3.968203,-7.856652,-5.157331],[4.938493,8.615117,1.165419,0.642885,-2.811430,-1.475525,-9.561110,-7.401805,7.733924,8.616317,-3.411001,7.155915,5.773498,-2.546715],[-7.978261,9.470720,-5.441264,-2.804982,9.081257,-8.001499,5.689623,-5.289833,-5.976567,-4.700262,-1.313995,-5.680187,0.679380,-9.061445],[-0.576356,-7.578977,3.860554,8.036731,-2.282456,-6.547076,0.463445,4.726460,2.074705,-2.993199,0.339267,9.126211,-6.064379,-0.352952],[-5.427729,-7.900485,8.738508,0.099627,-6.170566,4.472736,-6.232904,-4.473064,-6.704891,5.450960,6.274361,7.583134,-2.864714,-2.743388],[4.007459,-6.153710,9.855474,-8.516537,2.274609,-8.559672,-5.893974,-3.806544,8.142534,-2.330730,4.915093,0.302518,-2.650591,7.458605],[-6.532596,2.328673,-0.258896,9.195845,0.398740,0.477540,4.482760,-1.893623,3.819426,-5.772557,-8.285095,-6.851873,-3.391696,-6.925026],[2.266262,7.736568,-0.683822,9.602447,-4.497855,-5.934502,-7.950546,-7.191148,3.832054,-0.607339,-6.842468,4.526537,1.895643,-3.605735],[-9.746664,-9.627652,-3.366268,9.922342,7.994191,6.198257,0.148730,9.764023,9.463995,7.247606,-2.055574,5.786987,-8.795511,7.226566],[0.225127,-2.923589,1.233419,3.624760,-8.697130,-5.490510,4.016018,-2.834430,1.210163,-2.722346,1.469850,-4.637786,6.529029,-6.448767]], dtype = "float32")#candidate|4585|(11, 14)|const|float32
call_4581 = relay.TupleGetItem(func_1737_call(relay.reshape(var_4582.astype('int32'), [6, 9, 12]), relay.reshape(var_4582.astype('int32'), [6, 9, 12]), relay.reshape(const_4583.astype('float64'), [60,]), relay.reshape(var_4584.astype('int8'), []), relay.reshape(const_4585.astype('float32'), [154,]), ), 0)
call_4586 = relay.TupleGetItem(func_1743_call(relay.reshape(var_4582.astype('int32'), [6, 9, 12]), relay.reshape(var_4582.astype('int32'), [6, 9, 12]), relay.reshape(const_4583.astype('float64'), [60,]), relay.reshape(var_4584.astype('int8'), []), relay.reshape(const_4585.astype('float32'), [154,]), ), 0)
func_4016_call = mod.get_global_var('func_4016')
func_4018_call = mutated_mod.get_global_var('func_4018')
call_4588 = relay.TupleGetItem(func_4016_call(), 0)
call_4589 = relay.TupleGetItem(func_4018_call(), 0)
output = relay.Tuple([call_4577,call_4581,var_4582,const_4583,var_4584,const_4585,call_4588,])
output2 = relay.Tuple([call_4578,call_4586,var_4582,const_4583,var_4584,const_4585,call_4589,])
func_4590 = relay.Function([var_4582,var_4584,], output)
mod['func_4590'] = func_4590
mod = relay.transform.InferType()(mod)
mutated_mod['func_4590'] = func_4590
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4590_call = mutated_mod.get_global_var('func_4590')
var_4592 = relay.var("var_4592", dtype = "int32", shape = (648,))#candidate|4592|(648,)|var|int32
var_4593 = relay.var("var_4593", dtype = "int8", shape = ())#candidate|4593|()|var|int8
call_4591 = func_4590_call(var_4592,var_4593,)
output = call_4591
func_4594 = relay.Function([var_4592,var_4593,], output)
mutated_mod['func_4594'] = func_4594
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4605 = relay.constdtype = "float64")#candidate|4605|(16, 12, 12)|const|float64
uop_4606 = relay.asin(const_4605.astype('float64')) # shape=(16, 12, 12)
output = uop_4606
output2 = uop_4606
func_4613 = relay.Function([], output)
mod['func_4613'] = func_4613
mod = relay.transform.InferType()(mod)
output = func_4613()
func_4614 = relay.Function([], output)
mutated_mod['func_4614'] = func_4614
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4375_call = mod.get_global_var('func_4375')
func_4376_call = mutated_mod.get_global_var('func_4376')
call_4615 = relay.TupleGetItem(func_4375_call(), 0)
call_4616 = relay.TupleGetItem(func_4376_call(), 0)
func_4016_call = mod.get_global_var('func_4016')
func_4018_call = mutated_mod.get_global_var('func_4018')
call_4619 = relay.TupleGetItem(func_4016_call(), 0)
call_4620 = relay.TupleGetItem(func_4018_call(), 0)
func_4590_call = mod.get_global_var('func_4590')
func_4594_call = mutated_mod.get_global_var('func_4594')
const_4624 = relay.const([10,7,10,1,-9,3,-9,4,10,-5,-2,-5,-1,6,-1,6,6,-3,5,-6,-4,-2,-1,-8,-10,-3,1,1,-8,7,4,5,5,4,9,-6,-1,7,3,-5,10,7,6,3,-5,-5,2,-6,-7,10,-2,-10,3,5,3,-10,9,-4,5,1,8,6,-8,-10,3,-1,-6,-10,-10,-6,-6,-8,4,-10,-1,-7,-8,2,5,9,4,7,-4,-1,-9,-9,-3,-9,-1,6,-9,5,-7,-3,1,-4,-5,4,-5,6,-2,-10,4,-2,8,8,-2,-7,10,-1,2,-5,-6,6,4,5,7,-10,5,-5,-1,-4,-6,10,-1,-8,-8,-1,3,-6,-9,4,-4,-6,-8,4,6,10,9,9,-5,-2,-1,7,-2,3,-2,9,3,7,-8,1,-8,-7,3,6,4,-10,3,-1,10,8,2,2,-5,-9,1,-9,10,-6,2,10,-2,-3,8,9,9,-4,7,10,-6,-6,-8,-5,-1,-3,5,-10,-4,1,8,-1,-9,10,2,9,9,-2,2,-5,-2,-7,2,3,2,-7,8,-7,-5,-5,7,5,-1,2,6,-8,6,5,-5,-3,4,9,-9,1,3,3,9,-7,4,-4,9,-9,9,4,-2,-1,8,-10,-6,5,4,3,-7,-6,2,-3,3,-9,-4,6,-1,-4,-7,-7,5,4,1,5,-10,1,2,-4,-4,9,5,7,2,-4,-6,-4,7,2,-7,-8,-9,-8,10,8,-2,-5,-10,-2,4,3,-9,2,-7,3,-1,-1,-9,3,-1,-7,-8,2,5,-2,10,-10,2,-6,-6,5,10,-10,-6,-10,4,2,10,-9,7,-3,-7,-9,-2,-10,-4,8,10,4,-10,3,-4,5,-8,-10,-8,-2,-3,-7,-6,5,-1,-5,-2,-7,5,-8,4,6,10,6,6,-4,-9,-6,-8,-4,-6,2,-7,-2,-8,5,4,5,-7,1,-9,4,7,-2,1,-6,6,-4,-6,7,-7,-7,6,-4,-2,-6,-9,8,8,-3,-7,-5,6,6,-8,-7,7,-5,-7,-6,3,10,4,-9,2,-3,-8,2,10,7,4,2,-9,6,7,7,-8,3,6,4,2,7,-8,8,-10,3,-9,7,3,4,-7,-9,7,-5,-1,-3,8,7,-10,1,7,3,-10,-4,2,-10,-8,-4,-10,1,9,6,-1,-3,-5,-10,10,-10,2,1,1,-4,2,-5,-8,4,10,5,3,4,-2,-2,-8,3,6,5,-7,8,9,-2,2,6,-5,5,9,-8,4,5,4,-1,2,-10,6,-10,3,-6,9,-9,3,2,1,-4,2,6,-7,-6,4,-10,4,-9,-4,-4,-5,7,4,1,-1,-2,-4,7,-5,2,7,-2,-2,9,-6,-6,3,2,-5,5,-7,7,3,-3,-6,-2,7,-7,-6,6,7,-6,7,8,-8,6,-9,-7,8,3,-6,-9,10,1,-2,10,1,10,2,8,2,-7,8,3,3,9,10,2,6,6,2,-7,-1,-1,-6,7,2,7,8,-5,8,10,-6,10,8,9,-3,5,3,9,2,7,7,-5,6,6,7,-1,-10,4,8,-10,-2,-5,8,6,7,7,9,-9,-3,10,2,-3,-4,-4,10,3,8,7,-9,9,8,2,-5,4,-7,-8,-8,3,7,6,1,1,5,-7,-3,-2,10,10,-4,-5,-1,-10,-5,-2,-2,2,-8,-5,3,9,8,-8,-3,8], dtype = "int32")#candidate|4624|(648,)|const|int32
const_4625 = relay.const(-4, dtype = "int8")#candidate|4625|()|const|int8
call_4623 = relay.TupleGetItem(func_4590_call(relay.reshape(const_4624.astype('int32'), [648,]), relay.reshape(const_4625.astype('int8'), []), ), 1)
call_4626 = relay.TupleGetItem(func_4594_call(relay.reshape(const_4624.astype('int32'), [648,]), relay.reshape(const_4625.astype('int8'), []), ), 1)
output = relay.Tuple([call_4615,call_4619,call_4623,const_4624,const_4625,])
output2 = relay.Tuple([call_4616,call_4620,call_4626,const_4624,const_4625,])
func_4637 = relay.Function([], output)
mod['func_4637'] = func_4637
mod = relay.transform.InferType()(mod)
output = func_4637()
func_4638 = relay.Function([], output)
mutated_mod['func_4638'] = func_4638
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4375_call = mod.get_global_var('func_4375')
func_4376_call = mutated_mod.get_global_var('func_4376')
call_4656 = relay.TupleGetItem(func_4375_call(), 1)
call_4657 = relay.TupleGetItem(func_4376_call(), 1)
func_2414_call = mod.get_global_var('func_2414')
func_2421_call = mutated_mod.get_global_var('func_2421')
const_4659 = relay.const([4,4,-4,10,-8,-10,-9,-5,-9,7,-10,-9,-5,8,-6,8,3,-5,6,-9,-6,-3,3,5,4,3,8,-10,5,-7,-5,2,-6,-4,-2,9,1,4,1,-7,-9,8,2,-2,-7,7,-3,9,8,2,-8,2,2,-5,-5,-7,-5,-4,4,-6,-5,3,4,7,-7,3,-1,-5,1,7,4,-10,10,8,2,-3,6,4,9,-3,-2,4,-3,8,10,-10,9,5,-6,3,8,-4,3,-6,9,3,-10,-5,-5,-9,-8,9,-10,7,9,5,-6,-4,5,3,1,-5,2,-8,-3,-10,-7,-8,-5,-5,5,-2,7,1,-5,-7,-2,-9,-4,-9,-3,8,8,-7,1,7,-9,8,-2,9,-7,6,-1,-2,-4,-2,2,7,7,2,5,5,-8,-2,-4,-10,9,10,2,7,-5,-3,10,-8,3,5,1,1,-3,-2,6,-9,9,-7,3,9,2,6,1,6,-6,-9,9,6,5,-2,-9,5,10,3,3,-3,3,4,-7,-7,1,8,7,3,-2,-2,8,1,9,-3,-7,7,10,-5,4,-8,1,7,1,-2,7,-4,-1,-2,2,-3,6,8,-5,-10,6,-6,-5,-4,6,-9,-8,-9,1,-9,9,-9,-6,-8,1,-2,10,-1,2,1,-1,-3,5,-10,-3,9], dtype = "uint8")#candidate|4659|(252,)|const|uint8
const_4660 = relay.const([[-2.871869,9.001035,5.822519,1.542102,-4.146807,-7.959961,-5.407173,7.741577,8.667669,-4.287282,-9.209895,-4.183548,6.019893,-0.873621,2.177283,-8.748390,-2.949064,-8.383658,-5.289238,-2.518607,-6.311447,-1.954864,7.049093,8.093742,4.728767,-8.279845,-4.395059,4.054503,-9.917998,1.366841,7.356803,9.642261,8.969139,3.229316,-2.030428,-7.037652,-8.495639,2.572171,1.457925,-6.144524,8.059357,-1.480604,-9.956781,7.903188,6.172794,-4.416938,-7.471437,-2.981343,6.824858,1.810624,6.835992,-8.350367,5.735389,7.301961,0.112884,7.869637,9.743039,-6.934905,1.863005,-4.270436]], dtype = "float64")#candidate|4660|(1, 60)|const|float64
var_4661 = relay.var("var_4661", dtype = "float32", shape = (154,))#candidate|4661|(154,)|var|float32
const_4662 = relay.const([-4,4,-2,-9,-9,1,-3,2,9,4,-3,7,7,-9,10,4,8,1,6,-5,2,-10,8,-4,-9,-2,-5,-4,-5,-9,-4,8,-2,2,-1,-4,2,10,6,-9,-10,7,2,-8,-6,-1,-4,4,9,6,2,5,-6,6,-6,-8,9,-2,9,-9,10,5,10,10,5,9,9,-3,-8,-8,-7,-3,-4,-7,-6,5,-6,-10,2,-6,-7,6,9,-1,-2,3,7,-6,-10,1,-1,4,1,-6,3,1,8,-3,9,-4,-3,10,3,-1,1,3,-10,-1,-10,-3,-10,-2,-4,-5,-1,3,8,-5,3,7,8,8,-6,1,8,10,10,4,7,6,8,3,7,8,4,6,5,3,6,9,10,2,1,6,7,7,5,3,8,4,7,5,5,-5,-2,3,-4,-3,-2,5,3,5,4,10,9,3,3,10,-3,-6,-1,-8,7,2,-10,-9,10,3,-1,-5,4,-10,3,-4,7,3,3,5,-1,-7,5,-8,-9,-1,1,-5,-4,-3,-7,5,-8,-3,8,-9,4,-3,-4,-8,-9,7,6,6,-7,7,7,9,10,4,-8,8,1,-5,-2,9,-3,-3,8,-9,10,8,-9,1,-9,-9,10,-10,-1,-7,7,4,2,-7,9,-5,3,6,-2,-3,-4,7,10,-6,-10,3,10,-7,5,5,1,2,-5,8,-5,-8,3,-4,3,-5,-4,-2,6,-9,3,-4,5,-10,6,8,7,2,-3,5,6,-1,-6,7,2,4,3,2,6,8,10,-3,4,-6,-2,7,1,-10,-2,-1,-6,-2,3,-7,-5,-10,1,-1,1,-3,8,-2,-9,6,-3,6,1,10,-1,4,-10,-1,2,-5,9,7,-8,-8,3,-8,2,8,1,9,3,-8,-2,3,2,6,-5,-1,-1,-10,3,-3,-2,-8,8,-3,-1,-5,1,-6,3,-4,-6,-1,-4,-3,9,-9,8,-3,5,9,-8,-10,10,4,7,-2,-3,-1,-6,-3,10,-5,1,7,6,3,-10,-5,-10,-6,6,-1,-2,5,7,-2,-2,-7,7,-1,2,8,-9,-4,1,6,-7,6,9,7,1,-3,8,-6,-6,7,10,-9,8,8,3,-7,-2,2,-4,9,10,-10,4,1,-2,-7,4,3,-9,-1,6,-5,-9,-2,-5,2,-5,-2,-8,-8,-5,-7,2,1,1,-6,-10,-7,-5,3,2,-7,-10,5,-4,-10,-9,-8,-7,4,2,6,10,-10,2,7,1,-2,-3,-8,-1,7,-5,3,-5,1,9,-7,9,-4,-1,7,-4,-2,6,-5,-10,9,7,-9,-10,-10,-8,-6,4,-9,10,10,5,-1,2,7,8,9,-9,8,9,-8,6,-5,5,-7,10,-9,9,-5,7,5,10,-1,-2,-10,-8,9,2,4,8,2,-9,4,-4,3,2,5,1,3,-4,6,1,3,9,-3,-1,6,10,9,8,-3,9,-4,-3,-6,2,-8,7,-6,-1,5,6,1,1,7,-2,-2,8,1,-5,-8,-9,9,2,-4,6,6,-3,9,-8,5,-9,-1,5,8,-9,8,-7,-5,4,-1,-9,4,5,-7,-10,-3,1,5,9,7,-4,-7,-2,9,10,-8,-8,-2,-8,5,3,-8,-3,-10,8,10,4,2,-8,4,2,10,6,2,2,1,-5,-10,2,1,-9,2,10,9,-7,-9,-5,-9,-10,-5,8,8,5,-4,-9,-6,7,2,-4,-7,-4,-9,3,9,9,-8,10,-2,3,1,-10,10,7,-7,1,-1,10,3,6,-9,-8,1,10,-4,-9,4,-3,1,4,-8,-3,1,7,-7,8,9,10,5,-5,-4,3,6,-4,-4,6,-5,-3,10,-2,6,-2,5,6,3,-8,-8,9,-7,-2,3,-6,-4,-5,-10,3,7,2,-7,-2,10,9,3,5,-1,2,4,2,-7,-6,6,-5,-3,6,5,-4,10,-4,-3,2,5,-8,1,9,-9,-9,4,-9,-2,9,-5,-2,-8,7,-7,-5,-4,-3,5,7,9,-2,-1,-10,-5,8,-5,6,-1,5,3,-10,3,4,-7,3,-8,-1,-5,1,1,2,2,-9,1,10,-4,-1,-6,-6,-9,-3,5,5,4,-1,-7,-2,1,3,5,-5,6,5,-4,-6,-9,9,2,3,-2,-10,-9,10,-4,-1,-6,6,-4,-5,2,-1,-10,-7,6,8,-6,9,-1,-3,-3,3,-3,-3,-10,5,-10,2,-9,-2,-9,-5,1,10,4,-8,-10,-6,10,9,-8,1,-3,7,2,-8,-2,-5,6,6,1,-7,-2,5,4,3,10,-9,-7,-6,-10,1,7,6,3,3,3,-6,-5,-9,5,-1,6,-10,10,5,10,1,-3,-1,8,-2,-6,-6,-1,7,8,3,-2,10,-8,-2,-8,4,-2,10,10,1,-10,6,3,-9,3,-7,-4,-7,-2,1,-3,-3,-1,-5,3,-9,-4,-6,8,9,9,8,-3,-8,-3,-4,5,1,10,-8,-1,-8,2,1,-1,-3,6,-4,8,5,2,-10,-7,-2,7,10,9,-3,3,-10,6,-5,-5,-3,-4,6,8,-2,7,3,-5,3,2,2,-2,2,-6,-10,7,-5,2,6,7,4,-1,1,-2,8,2,9,-4,4,7,10,7,-4,9,10,7,2,-3,-4,7,6,3,5,-6,7,3,7,5,1,-3,-9,-5,8,4,-10,5,-2,3,6,-4,-3,2,-9,3,-8,10,-7,-10,2,7,7,-10,-2,6,-2,-3,-9,7,10,5,4,-7,10,-8,-3,8,6,-9,-3,-6,-5,-2,-4,2,6,-5,-3,-3,-2,-9,5,3,5,2,8,5,-9,-10,5,-8,-9,3,-7,-9,9,-2,-3,-8,8,8,-9,9,-9,2,1,5,5,4,-6,9,-8,10,7,-4,9,10,3,10,10,-6,-6,-1,-10,-2,-5,-2,3,8,1,6,-2,-1,-8,8,3,-9,6,-9,-2,-3,-4,-1,8,-1,-9,-10,-3,-9,10,-9,5,3,7,-8,-4,5,7,-7,5,-3,-4,7,-3,-10,-8,-9,8,-4,3,3,2,-5,4,-3,1,3,-10,5,-1,-8,6,9,9,-9,5,10,-10,8,1,4,9,9,2,-5,-1,-1,2,2,-3,-4,5,-8,10,-10,7,-5,1,-10,-10,-5,9,9,-6,-3,-4,-9,-10,3,-3,3,4,8,9,-8,4,1,7,-5,3,-2,-4,5,8,-5,10,2,-5,-1,10,-5,-5,8,-6,-7,-2,7,1,-1,3,-1,4,-9,8,5,-3,2,7,-10,-4,4,-7,1,5,7,8,1,3,-2,1,-7,-8,-2,1,-7,-10,-1,2,-3,4,4,-7,-5,-6,1,6,2,9,6,10,6,-4,7,1,-4,-1,6,-3,10,9,7,-9,9,4,9,9,-4,-2,-1,-10,-7,-3,-10,-5,-6,-2,-10,-1,-9,4,-1,-3,10,-5,-10,5,-9,-10,5,-1,-10,3,2,-8,-10,-8,7,-7,7,-7,-10,-4,-1,8,-2,6,-10,3,-2,6,3,-7,5,9,-8,1,-9,5,-3,-7,-3,-6,-1,-8,10,-8,-6,-7,-9,-5,1,2,-4,1,3,-2,-10,-9,9,-7,-9,-6,-10,-10,-7,5,-2,1,8,-3,9,-7,-6,-1,4,-6,5,-2,2,5,6,1,-10,5,-6,9,6,4,4,8,5,5,-5,6,-8,1,2,-5,6,-10,-10,6,7,-9,9,-1,1,-4,-2,6,-3,5,8,-8,7,5,-7,5,-4,6,-2,-8,10,1,-4,1,3,1,-3,-4,-6,-10,-3,-8,-9,-10,1,8,-2,1,-8,-3,8,10,4,-2,6,-5,6,8,10,-10,8,10,9,-7,-6,7,6,-5,-3,3,8,-10,3,-4,8,4,4,-5,9,-9,2,-1,5,-9,3,-10,9,-7,-8,7,-7,-1,7,5,9,1,1,-2,-7,5,-4,-1,6,7,-3,9,5,2,-7,-8,-2,-8,2,-9,2,9,10,-8,1,10,10,-3,-1,-9,-3,-3,-9,-8,-10,1,3,-7,-3,-9,10,8,1,9,8,8,-8,-6,3,-9,3,6,-4,-10,8,1,1,10,-3,-1,8,4,-10,2,-4,-8,-2,4,-5,-5,4,-1,-7,6,-1,-3,-4,-2,5,10,6,8,-10,6,-9,-8,-8,9,-1,5,9,8,5,10,5,-3,7,1,-6,-5,-9,-9,4,-2,10,-7,-7,4,9,6,-7,-7,10,2,-6,-2,-1,-9,8,10,-9,9,-1,10,9,4,-2,-10,10,2,-10,8,-7,6,8,-3,2,5,-5,5,-10,1,1,-6,-5,4,5,9,-1,-7,-1,-6,-2,-8,5,-2,4,6,-5,8,-3,5,6,-9,-9,6,7,-4,-2,-6,8,9,-1,1,9,4,-4], dtype = "uint64")#candidate|4662|(1664,)|const|uint64
const_4663 = relay.const([-5,7,-7,3,-4], dtype = "int32")#candidate|4663|(5,)|const|int32
var_4664 = relay.var("var_4664", dtype = "uint16", shape = (180,))#candidate|4664|(180,)|var|uint16
call_4658 = relay.TupleGetItem(func_2414_call(relay.reshape(const_4659.astype('uint8'), [3, 6, 14]), relay.reshape(const_4660.astype('float64'), [60,]), relay.reshape(var_4661.astype('float32'), [154,]), relay.reshape(const_4662.astype('uint64'), [1664,]), relay.reshape(const_4663.astype('int32'), [5,]), relay.reshape(var_4664.astype('uint16'), [180,]), ), 4)
call_4665 = relay.TupleGetItem(func_2421_call(relay.reshape(const_4659.astype('uint8'), [3, 6, 14]), relay.reshape(const_4660.astype('float64'), [60,]), relay.reshape(var_4661.astype('float32'), [154,]), relay.reshape(const_4662.astype('uint64'), [1664,]), relay.reshape(const_4663.astype('int32'), [5,]), relay.reshape(var_4664.astype('uint16'), [180,]), ), 4)
bop_4674 = relay.subtract(const_4662.astype('uint16'), relay.reshape(call_4658.astype('uint16'), relay.shape_of(const_4662))) # shape=(1664,)
bop_4677 = relay.subtract(const_4662.astype('uint16'), relay.reshape(call_4665.astype('uint16'), relay.shape_of(const_4662))) # shape=(1664,)
uop_4698 = relay.sqrt(var_4661.astype('float64')) # shape=(154,)
uop_4702 = relay.cosh(uop_4698.astype('float32')) # shape=(154,)
uop_4709 = relay.asin(uop_4702.astype('float32')) # shape=(154,)
output = relay.Tuple([call_4656,const_4659,const_4660,const_4663,var_4664,bop_4674,uop_4709,])
output2 = relay.Tuple([call_4657,const_4659,const_4660,const_4663,var_4664,bop_4677,uop_4709,])
func_4716 = relay.Function([var_4661,var_4664,], output)
mod['func_4716'] = func_4716
mod = relay.transform.InferType()(mod)
mutated_mod['func_4716'] = func_4716
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4716_call = mutated_mod.get_global_var('func_4716')
var_4718 = relay.var("var_4718", dtype = "float32", shape = (154,))#candidate|4718|(154,)|var|float32
var_4719 = relay.var("var_4719", dtype = "uint16", shape = (180,))#candidate|4719|(180,)|var|uint16
call_4717 = func_4716_call(var_4718,var_4719,)
output = call_4717
func_4720 = relay.Function([var_4718,var_4719,], output)
mutated_mod['func_4720'] = func_4720
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4016_call = mod.get_global_var('func_4016')
func_4018_call = mutated_mod.get_global_var('func_4018')
call_4767 = relay.TupleGetItem(func_4016_call(), 0)
call_4768 = relay.TupleGetItem(func_4018_call(), 0)
output = relay.Tuple([call_4767,])
output2 = relay.Tuple([call_4768,])
func_4775 = relay.Function([], output)
mod['func_4775'] = func_4775
mod = relay.transform.InferType()(mod)
mutated_mod['func_4775'] = func_4775
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4775_call = mutated_mod.get_global_var('func_4775')
call_4776 = func_4775_call()
output = call_4776
func_4777 = relay.Function([], output)
mutated_mod['func_4777'] = func_4777
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4637_call = mod.get_global_var('func_4637')
func_4638_call = mutated_mod.get_global_var('func_4638')
call_4821 = relay.TupleGetItem(func_4637_call(), 3)
call_4822 = relay.TupleGetItem(func_4638_call(), 3)
uop_4825 = relay.acos(call_4821.astype('float64')) # shape=(648,)
uop_4827 = relay.acos(call_4822.astype('float64')) # shape=(648,)
func_1872_call = mod.get_global_var('func_1872')
func_1877_call = mutated_mod.get_global_var('func_1877')
const_4837 = relay.const([7.496908,-7.095380,8.928199,1.749434,-8.436539,8.193034,-4.087562,3.152113,-1.639339,-8.779620,-6.574393,-6.735837,8.820882,-9.970418,-6.559013,-1.422473,-7.189164,-4.459621,-8.384634,-2.353744,3.164995,-7.557560,0.502743,1.241512,4.006468,9.683815,-7.355503,8.186945,-9.737104,-8.302618,-4.396802,-7.830528,1.659500,-4.948336,3.626458,2.200082,9.896316,-8.192254,9.644549,-3.192257,8.619152,-6.582246,9.016417,3.915202,-2.388826,3.786775,3.673633,3.890526,-1.661308,-8.619126,-7.097703,7.083218,3.122551,-1.665366,8.408147,-0.032367,-9.254759,-8.330740,-0.068155,-5.426216], dtype = "float64")#candidate|4837|(60,)|const|float64
var_4838 = relay.var("var_4838", dtype = "int8", shape = ())#candidate|4838|()|var|int8
var_4839 = relay.var("var_4839", dtype = "float32", shape = (154,))#candidate|4839|(154,)|var|float32
var_4840 = relay.var("var_4840", dtype = "uint64", shape = (1664,))#candidate|4840|(1664,)|var|uint64
call_4836 = relay.TupleGetItem(func_1872_call(relay.reshape(const_4837.astype('float64'), [60,]), relay.reshape(var_4838.astype('int8'), []), relay.reshape(var_4839.astype('float32'), [154,]), relay.reshape(var_4840.astype('uint64'), [1664,]), ), 4)
call_4841 = relay.TupleGetItem(func_1877_call(relay.reshape(const_4837.astype('float64'), [60,]), relay.reshape(var_4838.astype('int8'), []), relay.reshape(var_4839.astype('float32'), [154,]), relay.reshape(var_4840.astype('uint64'), [1664,]), ), 4)
bop_4854 = relay.left_shift(uop_4825.astype('uint16'), var_4838.astype('uint16')) # shape=(648,)
bop_4857 = relay.left_shift(uop_4827.astype('uint16'), var_4838.astype('uint16')) # shape=(648,)
output = relay.Tuple([call_4836,const_4837,var_4839,var_4840,bop_4854,])
output2 = relay.Tuple([call_4841,const_4837,var_4839,var_4840,bop_4857,])
func_4858 = relay.Function([var_4838,var_4839,var_4840,], output)
mod['func_4858'] = func_4858
mod = relay.transform.InferType()(mod)
var_4859 = relay.var("var_4859", dtype = "int8", shape = ())#candidate|4859|()|var|int8
var_4860 = relay.var("var_4860", dtype = "float32", shape = (154,))#candidate|4860|(154,)|var|float32
var_4861 = relay.var("var_4861", dtype = "uint64", shape = (1664,))#candidate|4861|(1664,)|var|uint64
output = func_4858(var_4859,var_4860,var_4861,)
func_4862 = relay.Function([var_4859,var_4860,var_4861,], output)
mutated_mod['func_4862'] = func_4862
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4775_call = mod.get_global_var('func_4775')
func_4777_call = mutated_mod.get_global_var('func_4777')
call_4872 = relay.TupleGetItem(func_4775_call(), 0)
call_4873 = relay.TupleGetItem(func_4777_call(), 0)
output = relay.Tuple([call_4872,])
output2 = relay.Tuple([call_4873,])
func_4880 = relay.Function([], output)
mod['func_4880'] = func_4880
mod = relay.transform.InferType()(mod)
mutated_mod['func_4880'] = func_4880
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4880_call = mutated_mod.get_global_var('func_4880')
call_4881 = func_4880_call()
output = call_4881
func_4882 = relay.Function([], output)
mutated_mod['func_4882'] = func_4882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4613_call = mod.get_global_var('func_4613')
func_4614_call = mutated_mod.get_global_var('func_4614')
call_4914 = func_4613_call()
call_4915 = func_4613_call()
func_2237_call = mod.get_global_var('func_2237')
func_2239_call = mutated_mod.get_global_var('func_2239')
var_4932 = relay.var("var_4932", dtype = "uint64", shape = (132,))#candidate|4932|(132,)|var|uint64
call_4931 = relay.TupleGetItem(func_2237_call(relay.reshape(var_4932.astype('uint64'), [1, 11, 12])), 0)
call_4933 = relay.TupleGetItem(func_2239_call(relay.reshape(var_4932.astype('uint64'), [1, 11, 12])), 0)
bop_4950 = relay.floor_mod(call_4931.astype('float32'), relay.reshape(var_4932.astype('float32'), relay.shape_of(call_4931))) # shape=(1, 11, 12)
bop_4953 = relay.floor_mod(call_4933.astype('float32'), relay.reshape(var_4932.astype('float32'), relay.shape_of(call_4933))) # shape=(1, 11, 12)
func_2414_call = mod.get_global_var('func_2414')
func_2421_call = mutated_mod.get_global_var('func_2421')
const_4968 = relay.const([6,-3,-8,-8,-6,-1,-7,8,-2,-5,7,10,-7,6,-1,-10,5,-9,-4,-4,-5,-1,3,4,10,6,1,5,-4,-7,-6,-1,4,-3,-4,1,2,-6,1,4,9,9,5,-1,6,5,7,-2,5,1,4,3,-4,-3,-8,6,-7,9,-10,-3,10,-8,-6,-8,-8,4,-1,-8,-7,7,7,3,10,-6,-2,-7,-10,9,-5,-1,-8,-3,-4,-1,3,4,-3,4,1,-4,-2,7,-5,-8,-5,-1,5,-9,6,-10,8,-9,-3,6,4,6,10,7,-10,-6,-5,-8,-3,-9,-7,-8,-3,9,1,-9,-7,10,-8,5,-4,-5,-7,9,-9,1,-7,2,5,7,7,10,3,-1,6,1,6,9,8,-3,6,5,-2,-3,-10,-4,8,-3,3,4,-2,1,2,1,-10,10,-10,-9,-4,1,5,-3,9,-6,1,-6,-8,1,9,-1,-8,-4,6,1,6,-5,7,-5,-5,-1,-4,1,3,1,6,10,-5,-2,-8,2,-5,8,-5,10,-6,8,7,-2,-3,-4,-9,3,-1,-4,10,-4,2,-8,-4,1,-7,-2,10,5,-8,-10,-5,10,10,4,1,2,1,4,-8,7,-4,10,-4,-7,5,-1,10,6,-7,-7,-2,4,1,-1,3,-4,9,-2,10,7,-7,-8], dtype = "uint8")#candidate|4968|(252,)|const|uint8
var_4969 = relay.var("var_4969", dtype = "float64", shape = (60,))#candidate|4969|(60,)|var|float64
const_4970 = relay.const([[7.401879],[4.234264],[-9.539659],[4.520044],[-4.553031],[-2.433230],[8.172150],[6.661228],[-8.308377],[-6.706044],[5.831980],[-3.363648],[-0.042934],[-5.340655],[-2.955876],[-4.247926],[8.763937],[-8.877158],[-7.758784],[9.967524],[-6.652447],[-0.651561],[1.886899],[3.973207],[5.868444],[7.400338],[-6.765026],[8.972722],[3.506280],[-8.820000],[5.216943],[9.279670],[-8.057387],[-4.678051],[5.532019],[-7.480178],[7.716839],[9.711989],[-8.886131],[-7.214331],[5.865455],[-6.110858],[1.190049],[-6.668023],[9.590707],[1.164448],[9.608317],[7.546803],[-9.722608],[-2.486920],[-4.054949],[7.404205],[6.294734],[-9.251086],[-9.764354],[9.283016],[-3.516206],[4.807345],[-1.124445],[-3.214291],[-8.950884],[-2.668260],[8.312799],[-2.611457],[2.524655],[1.954099],[0.379908],[2.022615],[-5.652866],[-6.934597],[-3.548366],[-0.056754],[2.516774],[-7.757753],[1.452723],[6.905504],[-0.061749],[6.350998],[5.116939],[7.242083],[9.125807],[-9.132170],[-3.150109],[4.419305],[-3.016189],[0.281545],[-0.587799],[0.646528],[1.169916],[5.303120],[9.219030],[9.117787],[-4.936065],[5.371173],[-1.645137],[-9.237356],[2.528185],[-0.960933],[-5.539214],[-4.560453],[6.750455],[0.208531],[2.605009],[4.878565],[-3.868163],[8.860590],[2.181682],[-3.978108],[-9.821523],[7.990129],[-4.765104],[-8.350872],[3.100050],[9.956609],[-9.186709],[-0.006174],[7.206321],[9.474936],[-3.111894],[-2.773408],[4.612112],[-2.081597],[-3.292619],[-3.328084],[-7.419947],[8.663706],[5.159412],[5.469337],[-8.017159],[-3.722188],[-1.140837],[-7.385612],[-4.174913],[1.855320],[-5.333862],[-8.069605],[9.612965],[-3.404698],[8.702386],[-3.645935],[-8.390046],[-1.196653],[1.375805],[-7.007390],[3.319966],[3.660264],[8.005029],[9.533078],[4.027686],[1.603077],[-3.749595],[-2.805173],[-9.761661],[9.617924]], dtype = "float32")#candidate|4970|(154, 1)|const|float32
const_4971 = relay.const([-5,-8,9,9,-3,-2,-3,1,-9,8,6,-6,7,-1,-8,-9,-9,10,-3,7,-6,-4,7,-8,-6,8,4,-6,2,5,-10,-4,1,6,3,-2,2,5,1,-8,10,2,-10,6,-8,3,-5,-6,1,4,5,2,-4,-7,-2,4,10,5,-6,5,2,-1,-5,5,9,1,-7,-1,9,6,2,-3,-7,6,1,-5,-9,2,-3,1,8,6,-2,6,3,-3,1,-1,4,2,-9,10,5,-2,-9,-2,3,-2,-3,6,-8,4,3,-10,5,4,-10,3,-6,-6,8,-2,4,-5,2,-6,10,-4,5,2,7,-5,-4,-4,3,-5,-8,1,-1,-10,8,5,-5,-1,-2,-2,2,-8,8,-7,2,10,-9,1,-7,-4,6,-3,10,-1,10,3,-3,-10,-1,-1,-9,2,-4,-9,-3,-8,-6,-7,-6,1,2,-1,5,7,10,-10,9,-6,-4,-5,-2,3,3,-6,-10,6,3,8,-1,-7,-3,10,10,4,-3,-2,-2,-4,-6,-4,7,8,-9,9,1,3,-2,5,-8,-7,-10,7,3,4,4,-6,10,-3,10,1,8,7,-6,4,-3,-7,10,-4,-7,-4,8,4,-6,9,6,9,-3,-4,9,2,-10,5,-7,7,-9,7,-1,-7,5,-2,5,5,-8,-8,-8,8,-1,8,-4,-4,-5,2,9,4,-5,-4,-10,10,-7,-6,9,3,-9,-10,5,5,4,-10,7,6,10,2,-9,9,-1,1,1,3,-4,-10,-8,2,4,-2,6,3,-8,-8,-1,2,-4,-3,-8,4,3,4,-10,-3,8,5,3,-10,5,9,6,8,-6,-6,1,-6,-3,6,-7,-8,-4,7,-3,10,6,3,-1,-4,6,-9,2,-1,-6,-10,8,7,3,9,2,3,9,2,1,-6,7,-3,-3,-6,3,-3,4,-3,6,2,-3,8,2,-1,7,7,-3,7,-7,4,-6,3,8,6,7,-2,2,-4,1,5,-5,5,5,3,-2,-3,7,-8,-9,-7,-2,-9,-10,-7,10,-2,-4,-2,-1,-2,3,3,9,-3,6,9,2,10,-2,-6,1,-5,4,-6,4,10,-1,-7,4,1,3,-8,9,-6,7,3,-9,2,8,10,6,-9,-3,-9,10,5,-1,8,-2,-3,8,8,-6,3,-10,8,-5,5,5,2,-4,-7,-1,7,1,6,-7,7,9,-1,-6,-7,6,-6,-3,-4,-7,-6,-8,-4,4,-10,-6,-8,8,-4,-8,3,2,-3,-10,-4,2,7,-4,10,-3,-10,-7,6,10,8,-2,10,-4,10,3,-3,5,-2,-3,6,-3,8,9,-3,-5,-4,6,10,-10,4,-6,6,-8,-10,-3,8,-7,3,-10,2,9,-2,-2,3,-5,-5,5,-2,-2,-4,1,10,-10,-1,-1,-8,10,5,4,-6,-6,-2,2,4,8,-8,3,6,-3,6,1,2,3,5,-7,8,2,4,4,10,9,-3,-6,-6,8,-2,-5,2,4,-7,10,4,-5,-8,8,3,5,-2,4,1,9,1,-8,3,-4,-10,-6,-8,5,-10,-5,-2,8,5,-1,2,-10,5,-9,9,-9,-10,3,5,-8,-3,-7,-5,-7,7,-7,-10,-5,4,-3,7,-1,-6,7,-4,-6,7,-2,-10,-5,6,7,8,1,6,-4,-6,2,-9,3,5,2,5,-6,-10,-4,-4,4,-1,-3,-7,-1,-2,-6,3,8,-9,10,2,-10,9,-1,-3,5,10,-2,-7,-1,-8,-1,6,-9,-10,10,-6,-4,-2,-10,-2,10,4,-8,-9,-9,-5,7,10,6,-4,-1,5,-9,-2,4,5,5,-8,-8,3,-3,8,10,6,9,2,-4,7,6,4,5,-5,-9,-5,-1,4,7,-4,1,2,-1,10,-5,-9,-6,2,4,-2,-2,10,5,7,-8,-8,-10,1,-7,7,7,3,-2,-7,-2,-7,-7,-8,-3,-4,-4,9,5,7,2,3,1,5,3,-10,-4,-9,-4,-3,10,7,2,-9,-8,8,-2,9,7,7,-9,-4,5,-4,-2,5,6,7,-10,2,5,-7,-1,10,-4,7,-5,-8,8,-9,-9,-2,8,3,-6,-7,-7,7,5,-7,4,6,-6,-10,-6,-5,-3,2,-4,3,-3,2,7,7,5,-2,-9,10,3,-10,-7,4,1,3,-2,-9,7,5,1,7,-8,-6,-9,2,6,-1,-8,5,2,7,6,-6,-7,8,-5,-5,6,-7,10,7,1,9,2,9,3,5,-1,-10,-6,-6,3,-1,5,-4,-7,-8,-6,8,-2,1,2,-3,-10,3,3,-4,-3,5,-5,2,9,-2,9,-4,-8,6,-2,-5,4,-8,-9,5,-9,9,-1,-8,3,7,2,2,-8,-10,-9,-5,-2,2,-7,-3,-9,-4,5,1,2,9,9,1,-2,-8,-5,4,7,-9,2,3,-6,4,-9,-1,-4,6,-2,1,-10,-4,3,2,-3,6,-3,-9,-6,-2,7,-7,-4,6,-1,-1,-7,6,3,2,9,3,7,-4,-6,-9,10,6,10,-1,9,4,6,-8,9,7,9,3,4,10,-4,5,-6,1,2,-9,-3,-9,-2,-6,-8,-1,2,3,-1,-8,-2,10,-5,-4,-2,-10,-7,-2,5,-1,2,7,6,-4,5,-4,6,-4,7,-9,-4,-4,5,9,-5,-10,2,2,1,7,-9,-2,-6,-7,-6,-10,3,-9,-9,10,-9,-2,10,-1,2,-7,-10,8,-5,7,-9,-2,-10,-3,-1,4,3,-5,3,-6,-5,-8,9,-10,-8,6,3,-2,-10,5,-7,-3,6,5,-3,4,1,-2,-5,5,-9,-3,-8,7,-7,9,-1,6,10,7,-10,1,5,4,-6,-5,1,-7,-10,-8,7,3,-2,7,10,-5,-7,4,10,1,-8,-10,4,-9,-2,-3,4,8,7,-8,-7,9,-9,-5,-2,4,-5,-10,-2,5,-4,4,6,-6,5,-10,-8,10,4,6,-4,-10,7,-7,-7,-6,1,-2,1,-10,1,3,-10,7,-6,2,5,8,1,2,2,-2,-7,-1,-10,7,10,-3,10,-6,4,8,-9,-3,6,10,-3,-10,-7,-1,2,10,-5,-4,-2,-3,8,6,-10,10,4,5,-4,-10,-5,-10,8,-1,-5,-9,-5,5,-6,3,-10,5,2,-3,-4,-9,-3,-6,-9,3,-3,-2,7,-2,-8,2,-5,-6,-6,7,-4,-8,5,8,-2,7,7,4,9,-8,8,-7,-8,3,-1,-3,7,2,7,6,-4,5,-4,-5,4,10,-5,6,-9,9,-1,7,-4,-10,10,2,-10,-5,-5,-5,-4,-10,3,4,9,4,-6,8,1,-2,-5,-6,1,-7,-10,7,1,-6,-5,6,6,4,2,-3,-1,3,9,-8,9,-9,2,-6,3,-5,2,4,1,1,1,6,9,7,1,10,-3,-10,5,5,-9,8,-4,-1,-10,10,-4,-3,-8,-3,-6,-8,4,-3,5,10,-10,7,-1,-1,-9,-4,5,-8,-8,1,-5,-2,-8,-9,4,-7,8,-10,-2,-3,10,-6,5,-10,-8,-6,10,4,-4,1,2,4,-3,10,3,-6,1,10,9,-10,2,10,5,-2,-6,-8,-2,-10,-9,10,-6,-7,-2,4,8,8,9,4,1,6,10,10,8,-6,-4,9,5,-6,2,8,-3,1,-4,5,-10,7,-5,-1,8,-10,-6,-10,-4,7,8,7,2,1,-3,-1,9,5,4,-9,-3,-3,-9,-9,-3,10,-4,1,4,-9,-2,2,-8,-7,10,5,8,-4,2,9,-4,5,3,1,9,6,2,-5,4,-5,10,10,7,-5,9,-2,-1,8,-4,3,1,-7,7,7,5,-6,3,3,9,-1,-1,1,2,8,-8,-1,2,6,-1,-3,-7,3,4,-10,-5,-3,-3,-10,4,3,1,-3,-4,-4,-1,5,-5,-8,4,4,-8,-8,1,-10,-6,-7,6,1,10,-9,2,9,-2,-8,6,8,1,8,3,-9,8,-7,-5,-8,-6,5,3,-9,2,1,-1,3,6,6,-9,10,8,-4,10,9,1,5,-2,6,2,-4,-10,-5,-8,8,3,-5,-9,-7,2,-4,3,-4,-6,9,-2,10,-1,8,5,9,6,-2,-4,4,6,9,-7,-4,-5,-10,-7,-9,-5,-8,-3,-10,-10,3,-3,9,5,9,-3,5,-8,-7,7,-3,-2,-5,-9,-3,-9,-4,3,4,-5,10,-7,-6,-1,-10,-8,3,6,-5,4,8,6,8,7,-7,-4,-10,3,-4,10,3,8,8,-3,-3,-10,-2,2,4,-9,-4,10,-4,10,7,3,-8,7,7,6,9,-10,2,9,1,-9,-3,-9,-9,-4,-8,6,7,1,-3,5,-3,-3,5,1,9,5,8,-8,2,3,8,8,-5,1,-4,-2,-1,1,6,-6,-3,-7,-2], dtype = "uint64")#candidate|4971|(1664,)|const|uint64
var_4972 = relay.var("var_4972", dtype = "int32", shape = (5,))#candidate|4972|(5,)|var|int32
const_4973 = relay.const([[-4,-2,-10,5,-5,-2,4,4,2,6,3,3,8,-4,5,-10,-5,-4,-5,6,1,-4,3,-4,7,-1,7,-6,3,1],[9,1,-4,-1,-5,10,5,10,-3,-3,6,3,-1,-2,10,-6,-3,-5,3,7,-4,-3,2,-7,8,7,7,9,10,2],[-5,9,5,-6,-1,-6,9,-4,-3,-7,-2,-6,4,-8,-7,4,-9,9,-8,-6,-7,4,4,-6,-8,7,-7,2,8,-8],[10,-8,-5,-7,-1,2,5,-3,-3,-5,4,-4,5,-4,5,10,4,-4,-7,9,-4,-8,-8,-8,-4,3,-5,10,-4,2],[8,3,-2,-8,8,8,10,-2,9,-1,-3,2,3,5,-8,-5,1,-6,-6,5,-4,7,1,4,9,2,10,-7,5,2],[-1,10,4,-6,-10,4,3,10,1,5,-9,-10,-10,6,9,1,-5,-3,-4,-9,1,10,7,10,-4,-7,-2,4,4,-9]], dtype = "uint16")#candidate|4973|(6, 30)|const|uint16
call_4967 = relay.TupleGetItem(func_2414_call(relay.reshape(const_4968.astype('uint8'), [3, 6, 14]), relay.reshape(var_4969.astype('float64'), [60,]), relay.reshape(const_4970.astype('float32'), [154,]), relay.reshape(const_4971.astype('uint64'), [1664,]), relay.reshape(var_4972.astype('int32'), [5,]), relay.reshape(const_4973.astype('uint16'), [180,]), ), 3)
call_4974 = relay.TupleGetItem(func_2421_call(relay.reshape(const_4968.astype('uint8'), [3, 6, 14]), relay.reshape(var_4969.astype('float64'), [60,]), relay.reshape(const_4970.astype('float32'), [154,]), relay.reshape(const_4971.astype('uint64'), [1664,]), relay.reshape(var_4972.astype('int32'), [5,]), relay.reshape(const_4973.astype('uint16'), [180,]), ), 3)
output = relay.Tuple([call_4914,bop_4950,call_4967,const_4968,var_4969,const_4970,const_4971,var_4972,const_4973,])
output2 = relay.Tuple([call_4915,bop_4953,call_4974,const_4968,var_4969,const_4970,const_4971,var_4972,const_4973,])
func_4983 = relay.Function([var_4932,var_4969,var_4972,], output)
mod['func_4983'] = func_4983
mod = relay.transform.InferType()(mod)
var_4984 = relay.var("var_4984", dtype = "uint64", shape = (132,))#candidate|4984|(132,)|var|uint64
var_4985 = relay.var("var_4985", dtype = "float64", shape = (60,))#candidate|4985|(60,)|var|float64
var_4986 = relay.var("var_4986", dtype = "int32", shape = (5,))#candidate|4986|(5,)|var|int32
output = func_4983(var_4984,var_4985,var_4986,)
func_4987 = relay.Function([var_4984,var_4985,var_4986,], output)
mutated_mod['func_4987'] = func_4987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4375_call = mod.get_global_var('func_4375')
func_4376_call = mutated_mod.get_global_var('func_4376')
call_4995 = relay.TupleGetItem(func_4375_call(), 1)
call_4996 = relay.TupleGetItem(func_4376_call(), 1)
const_5008 = relay.const([[[4.522132,-4.531767,-1.966322],[8.351752,7.471282,-8.527545],[2.718683,-7.596066,1.882264],[-4.201174,-1.656890,2.061118],[6.280604,-4.198522,4.271641],[-5.460381,-1.422543,-0.041401],[-6.965779,-3.922475,-3.269358]],[[4.142783,6.738403,9.332811],[-9.030096,-5.374404,7.376943],[4.412303,4.620237,8.714336],[2.750199,8.040506,-6.570251],[5.449334,-1.955762,1.876048],[-6.899131,-2.552947,-3.520982],[-3.082516,-9.196278,-6.285407]],[[0.011599,-3.871242,2.273489],[9.630979,-5.643631,-5.723739],[8.639692,8.415289,6.719231],[-1.129673,0.193127,5.186777],[-0.727158,-6.999883,-2.576146],[-5.501931,-6.391344,7.366730],[9.951318,8.581915,9.692493]],[[-3.195901,0.047652,-2.472376],[-9.100260,-7.747394,-1.608082],[-2.926461,-4.787201,6.757984],[1.189010,-2.796868,-5.159712],[2.799886,-0.828172,7.940389],[-7.606548,-0.620091,-0.605048],[2.505659,7.455900,-1.262924]],[[1.926628,-2.486484,-1.792481],[9.952713,-6.100826,2.270334],[3.604935,-4.251980,5.401780],[5.017280,3.974424,7.879415],[0.916454,7.065938,5.083306],[-2.305782,-2.739684,-7.185433],[-0.084910,-4.515794,6.548986]],[[1.016151,-4.175501,-0.670601],[-3.078747,1.808099,-8.767647],[5.078817,5.274121,-7.757624],[-8.002206,-3.526284,-3.220389],[6.631667,-6.429285,7.292923],[-2.523507,-8.373093,-4.546719],[-4.469719,-7.220617,-2.320698]],[[5.950922,-3.018901,-9.958871],[2.409930,1.539877,3.208159],[-4.232744,-8.893664,-5.324116],[-7.090281,8.103985,2.237350],[2.586643,-9.442117,-6.042822],[-0.351748,-8.233060,-3.469485],[-0.617676,6.784411,8.323312]],[[1.398610,-9.966449,-6.271407],[8.435739,2.382547,0.836845],[-9.963322,-8.039052,7.319143],[9.974321,-2.648830,-8.708750],[4.018662,-0.830873,4.181971],[5.551341,6.893235,-9.599832],[9.825394,-0.482309,-2.842344]],[[2.714083,3.947040,7.165760],[-9.522687,-5.308994,-5.440628],[-7.181890,2.788393,0.900606],[-8.381534,5.723716,-9.262762],[-0.637379,8.261224,-6.106333],[-5.997648,-5.069502,7.143078],[-6.268691,0.132250,5.818597]],[[-2.810445,7.176036,-9.496221],[-9.779236,9.976439,3.659030],[2.324451,0.898385,-0.587923],[5.706456,-4.821306,-9.898263],[0.823176,3.884113,-7.962460],[3.083658,-1.410029,-8.294981],[5.391333,-9.052375,0.505856]],[[-0.915367,1.843663,4.255902],[1.710178,-4.484417,2.251595],[7.056403,-2.599345,9.035985],[2.350849,5.996696,5.853944],[8.148333,-0.755885,8.274326],[0.644844,-0.548171,-8.730640],[-6.328117,-8.920160,7.629545]],[[-1.747975,9.792977,2.126869],[3.580748,0.254429,7.964223],[-5.913022,4.362432,-1.834849],[-4.118620,-8.621616,-9.546017],[1.121296,-5.867079,5.387304],[2.351422,-5.735406,-8.825477],[8.736727,9.129315,-6.915863]],[[7.945417,9.020578,3.357521],[2.482996,2.919214,9.306240],[-3.112567,-0.961467,-3.963553],[-7.178277,0.015247,-6.488454],[9.150616,1.565631,-7.817447],[5.263969,7.805287,-8.242309],[-1.990132,-8.035612,4.643091]],[[4.331656,-5.822477,-7.262606],[4.128609,-1.778761,-2.504991],[9.059961,-1.162868,-8.974911],[-2.696675,-8.915569,-6.049107],[2.717736,0.244741,-1.150776],[9.013262,-7.669923,3.642841],[-2.822756,-4.590406,-2.743335]]], dtype = "float32")#candidate|5008|(14, 7, 3)|const|float32
bop_5009 = relay.power(call_4995.astype('float64'), relay.reshape(const_5008.astype('float64'), relay.shape_of(call_4995))) # shape=(14, 7, 3)
bop_5012 = relay.power(call_4996.astype('float64'), relay.reshape(const_5008.astype('float64'), relay.shape_of(call_4996))) # shape=(14, 7, 3)
uop_5040 = relay.asin(call_4995.astype('float32')) # shape=(14, 7, 3)
uop_5042 = relay.asin(call_4996.astype('float32')) # shape=(14, 7, 3)
output = relay.Tuple([bop_5009,uop_5040,])
output2 = relay.Tuple([bop_5012,uop_5042,])
func_5050 = relay.Function([], output)
mod['func_5050'] = func_5050
mod = relay.transform.InferType()(mod)
output = func_5050()
func_5051 = relay.Function([], output)
mutated_mod['func_5051'] = func_5051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4212_call = mod.get_global_var('func_4212')
func_4213_call = mutated_mod.get_global_var('func_4213')
call_5059 = relay.TupleGetItem(func_4212_call(), 0)
call_5060 = relay.TupleGetItem(func_4213_call(), 0)
func_2124_call = mod.get_global_var('func_2124')
func_2129_call = mutated_mod.get_global_var('func_2129')
const_5066 = relay.const(-2, dtype = "int32")#candidate|5066|()|const|int32
var_5067 = relay.var("var_5067", dtype = "int32", shape = (1, 5))#candidate|5067|(1, 5)|var|int32
var_5068 = relay.var("var_5068", dtype = "float64", shape = (64, 44))#candidate|5068|(64, 44)|var|float64
var_5069 = relay.var("var_5069", dtype = "uint16", shape = (180,))#candidate|5069|(180,)|var|uint16
call_5065 = relay.TupleGetItem(func_2124_call(relay.reshape(const_5066.astype('int32'), []), relay.reshape(var_5067.astype('int32'), [1, 1, 5]), relay.reshape(var_5068.astype('float64'), [2816,]), relay.reshape(var_5069.astype('uint16'), [180,]), ), 1)
call_5070 = relay.TupleGetItem(func_2129_call(relay.reshape(const_5066.astype('int32'), []), relay.reshape(var_5067.astype('int32'), [1, 1, 5]), relay.reshape(var_5068.astype('float64'), [2816,]), relay.reshape(var_5069.astype('uint16'), [180,]), ), 1)
bop_5071 = relay.less(var_5068.astype('bool'), const_5066.astype('bool')) # shape=(64, 44)
func_3697_call = mod.get_global_var('func_3697')
func_3702_call = mutated_mod.get_global_var('func_3702')
const_5079 = relay.const([[7,5,3,5],[4,-4,10,1],[1,-1,3,7],[8,-7,1,2],[-5,9,-7,-7],[-10,8,-2,-1],[10,-8,-1,-6],[2,-4,3,2],[4,-7,6,2],[7,-9,10,4],[3,-6,6,-5],[-7,3,6,-9],[7,-1,-4,-2],[-6,9,-10,-5],[-6,-7,-3,1],[3,10,-9,10],[-9,-8,8,1],[10,8,-3,-3],[6,-1,4,10],[8,-9,-3,1],[-3,-2,-1,-3],[-2,-1,5,-6],[-5,1,3,-9],[3,7,8,-5],[-9,10,-9,2],[-5,10,8,1],[7,5,5,-10],[-3,-4,5,3],[-6,5,-7,1],[-10,2,-9,3],[8,5,-3,2],[3,8,3,3],[6,7,5,-5],[-10,-4,1,4],[-5,-3,-5,-6],[-8,6,10,5],[7,9,-1,-8],[-3,-8,10,-4],[-3,5,1,-6],[-10,4,-2,-3],[-10,-1,-9,10],[1,-6,1,8],[-10,-2,6,2],[10,3,-5,-1],[1,6,4,1],[5,8,1,10],[9,-2,1,9],[10,-7,10,-9],[-1,2,10,-1],[-5,1,-5,9],[6,-6,-7,-10],[9,-3,-5,-2],[7,4,-9,2],[-5,2,-5,-3],[4,8,8,-2],[7,-8,10,-1],[-5,-6,-1,10],[3,-8,-5,-9],[-4,-4,-5,9],[-4,4,-4,4],[-1,4,1,10],[8,-4,10,-3],[10,-5,6,9],[-9,-5,-10,-4],[1,3,-4,8],[10,6,-5,4],[-8,2,-3,3],[4,6,-9,2],[-2,2,7,-9],[-3,-9,-6,4],[2,-8,-5,-8],[1,2,6,-7],[-9,4,10,5],[10,2,6,2],[3,2,2,-8],[6,2,4,-2],[-2,-10,-2,6],[10,-10,5,4],[-1,-8,8,6],[4,8,9,10],[6,4,7,-2],[9,3,1,3],[-4,4,5,-6],[8,-8,3,8],[9,9,-1,3],[4,-3,-3,-8],[-7,1,-2,4],[10,-7,-9,-4],[7,6,-6,-6],[-7,5,9,-9],[6,2,-6,8],[-8,8,-1,8],[8,6,5,2],[4,1,3,-10],[9,-6,8,-10],[-10,4,3,-1],[-5,2,-10,-1],[-6,-8,4,5],[-1,10,-5,-6],[9,8,3,2],[8,-10,-2,3],[-5,6,-10,-5],[-2,-10,5,3],[9,7,-3,-10],[5,-9,2,5],[-2,7,2,3],[-6,2,-1,7],[-6,-2,3,10],[-3,-7,1,-2],[-2,7,2,-9],[-2,-2,-6,3],[-1,-3,-10,-4],[-3,7,2,-9],[8,-10,5,-9],[-10,10,-9,-2],[-9,-7,-1,1],[2,10,-9,8],[-6,-8,-10,7],[-9,8,9,10],[-8,-6,-8,2],[5,5,2,1],[-4,8,9,3],[-2,8,4,1],[5,-8,-4,-6],[-4,-5,6,4],[-9,3,-10,10],[1,5,-5,7],[4,6,8,1],[1,-8,-3,9],[9,-2,2,2],[9,9,6,8],[1,-9,4,-1],[-5,-3,5,2],[6,2,-7,1],[6,4,4,-1],[3,-6,-10,-1],[-7,-5,8,6],[-3,-4,-5,-8],[3,-2,-3,-3],[-2,3,-7,-5],[1,-7,-7,-7],[-1,3,-3,8],[5,4,2,-4],[8,4,-2,-8]], dtype = "int8")#candidate|5079|(144, 4)|const|int8
var_5080 = relay.var("var_5080", dtype = "int8", shape = (154,))#candidate|5080|(154,)|var|int8
call_5078 = relay.TupleGetItem(func_3697_call(relay.reshape(const_5079.astype('int8'), [12, 8, 6]), relay.reshape(const_5079.astype('int8'), [12, 8, 6]), relay.reshape(var_5080.astype('int8'), [154,]), relay.reshape(var_5068.astype('float64'), [2816,]), ), 0)
call_5081 = relay.TupleGetItem(func_3702_call(relay.reshape(const_5079.astype('int8'), [12, 8, 6]), relay.reshape(const_5079.astype('int8'), [12, 8, 6]), relay.reshape(var_5080.astype('int8'), [154,]), relay.reshape(var_5068.astype('float64'), [2816,]), ), 0)
output = relay.Tuple([call_5059,call_5065,var_5067,var_5069,bop_5071,call_5078,const_5079,var_5080,])
output2 = relay.Tuple([call_5060,call_5070,var_5067,var_5069,bop_5071,call_5081,const_5079,var_5080,])
func_5082 = relay.Function([var_5067,var_5068,var_5069,var_5080,], output)
mod['func_5082'] = func_5082
mod = relay.transform.InferType()(mod)
mutated_mod['func_5082'] = func_5082
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5082_call = mutated_mod.get_global_var('func_5082')
var_5084 = relay.var("var_5084", dtype = "int32", shape = (1, 5))#candidate|5084|(1, 5)|var|int32
var_5085 = relay.var("var_5085", dtype = "float64", shape = (64, 44))#candidate|5085|(64, 44)|var|float64
var_5086 = relay.var("var_5086", dtype = "uint16", shape = (180,))#candidate|5086|(180,)|var|uint16
var_5087 = relay.var("var_5087", dtype = "int8", shape = (154,))#candidate|5087|(154,)|var|int8
call_5083 = func_5082_call(var_5084,var_5085,var_5086,var_5087,)
output = call_5083
func_5088 = relay.Function([var_5084,var_5085,var_5086,var_5087,], output)
mutated_mod['func_5088'] = func_5088
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4637_call = mod.get_global_var('func_4637')
func_4638_call = mutated_mod.get_global_var('func_4638')
call_5095 = relay.TupleGetItem(func_4637_call(), 0)
call_5096 = relay.TupleGetItem(func_4638_call(), 0)
var_5097 = relay.var("var_5097", dtype = "bool", shape = (14, 7, 3))#candidate|5097|(14, 7, 3)|var|bool
bop_5098 = relay.equal(call_5095.astype('bool'), relay.reshape(var_5097.astype('bool'), relay.shape_of(call_5095))) # shape=(14, 7, 3)
bop_5101 = relay.equal(call_5096.astype('bool'), relay.reshape(var_5097.astype('bool'), relay.shape_of(call_5096))) # shape=(14, 7, 3)
func_5050_call = mod.get_global_var('func_5050')
func_5051_call = mutated_mod.get_global_var('func_5051')
call_5102 = relay.TupleGetItem(func_5050_call(), 0)
call_5103 = relay.TupleGetItem(func_5051_call(), 0)
func_2237_call = mod.get_global_var('func_2237')
func_2239_call = mutated_mod.get_global_var('func_2239')
var_5113 = relay.var("var_5113", dtype = "uint64", shape = (33, 4))#candidate|5113|(33, 4)|var|uint64
call_5112 = relay.TupleGetItem(func_2237_call(relay.reshape(var_5113.astype('uint64'), [1, 11, 12])), 0)
call_5114 = relay.TupleGetItem(func_2239_call(relay.reshape(var_5113.astype('uint64'), [1, 11, 12])), 0)
uop_5125 = relay.sigmoid(call_5102.astype('float64')) # shape=(14, 7, 3)
uop_5127 = relay.sigmoid(call_5103.astype('float64')) # shape=(14, 7, 3)
func_897_call = mod.get_global_var('func_897')
func_901_call = mutated_mod.get_global_var('func_901')
const_5135 = relay.const([-5,4,3,-7,3,10,-2,-4,-8,1,10,8,6,9,3,5,-6,5,2,-10,7,-6,4,6,-10,-9,8,2,-5,7,9,-7,2,6,1,-10,5,-1,-5,2,5,6,9,1,-1,3,2,-4,-1,10,-6,4,8,2,-2,1,-6,-3,6,-10,-2,-6,-4,-1,-3,-8,-3,10,-8,7,7,-9,6,7,-8,9,-1,-6,-7,9,-8,-9,-9,-4,-3,7,10,2,-10,10,-7,9,5,-2,-2,4,-8,-3,-4,-4,-10,9,-8,6,2,-7,-4,-9,-2,3,2,2,-2,8,1,-5,2,-1,-6,10,4,7,4,8,6,7,-9,-9,5,-7,9,9,7,-4,6,1,3,-7,3,-2,7,9,2,6,-7,-6,-6,-8,3,-8,-7,-1,6,-7,5,1,3,-7,10,-2,6,-1,-3,7,-10,6,-3,-8,-9,1,-6,-6,-2,4,6,-7,4,-9,7,-2], dtype = "uint16")#candidate|5135|(180,)|const|uint16
const_5136 = relay.const(-9, dtype = "int8")#candidate|5136|()|const|int8
call_5134 = relay.TupleGetItem(func_897_call(relay.reshape(const_5135.astype('uint16'), [180,]), relay.reshape(const_5136.astype('int8'), []), ), 6)
call_5137 = relay.TupleGetItem(func_901_call(relay.reshape(const_5135.astype('uint16'), [180,]), relay.reshape(const_5136.astype('int8'), []), ), 6)
output = relay.Tuple([bop_5098,call_5112,var_5113,uop_5125,call_5134,const_5135,const_5136,])
output2 = relay.Tuple([bop_5101,call_5114,var_5113,uop_5127,call_5137,const_5135,const_5136,])
func_5138 = relay.Function([var_5097,var_5113,], output)
mod['func_5138'] = func_5138
mod = relay.transform.InferType()(mod)
mutated_mod['func_5138'] = func_5138
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5138_call = mutated_mod.get_global_var('func_5138')
var_5140 = relay.var("var_5140", dtype = "bool", shape = (14, 7, 3))#candidate|5140|(14, 7, 3)|var|bool
var_5141 = relay.var("var_5141", dtype = "uint64", shape = (33, 4))#candidate|5141|(33, 4)|var|uint64
call_5139 = func_5138_call(var_5140,var_5141,)
output = call_5139
func_5142 = relay.Function([var_5140,var_5141,], output)
mutated_mod['func_5142'] = func_5142
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4016_call = mod.get_global_var('func_4016')
func_4018_call = mutated_mod.get_global_var('func_4018')
call_5153 = relay.TupleGetItem(func_4016_call(), 0)
call_5154 = relay.TupleGetItem(func_4018_call(), 0)
func_4212_call = mod.get_global_var('func_4212')
func_4213_call = mutated_mod.get_global_var('func_4213')
call_5157 = relay.TupleGetItem(func_4212_call(), 0)
call_5158 = relay.TupleGetItem(func_4213_call(), 0)
output = relay.Tuple([call_5153,call_5157,])
output2 = relay.Tuple([call_5154,call_5158,])
func_5161 = relay.Function([], output)
mod['func_5161'] = func_5161
mod = relay.transform.InferType()(mod)
output = func_5161()
func_5162 = relay.Function([], output)
mutated_mod['func_5162'] = func_5162
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4212_call = mod.get_global_var('func_4212')
func_4213_call = mutated_mod.get_global_var('func_4213')
call_5252 = relay.TupleGetItem(func_4212_call(), 0)
call_5253 = relay.TupleGetItem(func_4213_call(), 0)
output = call_5252
output2 = call_5253
func_5261 = relay.Function([], output)
mod['func_5261'] = func_5261
mod = relay.transform.InferType()(mod)
mutated_mod['func_5261'] = func_5261
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5261_call = mutated_mod.get_global_var('func_5261')
call_5262 = func_5261_call()
output = call_5262
func_5263 = relay.Function([], output)
mutated_mod['func_5263'] = func_5263
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4880_call = mod.get_global_var('func_4880')
func_4882_call = mutated_mod.get_global_var('func_4882')
call_5268 = relay.TupleGetItem(func_4880_call(), 0)
call_5269 = relay.TupleGetItem(func_4882_call(), 0)
func_4460_call = mod.get_global_var('func_4460')
func_4463_call = mutated_mod.get_global_var('func_4463')
call_5270 = func_4460_call(relay.reshape(call_5268.astype('float32'), [14, 7, 3]))
call_5271 = func_4460_call(relay.reshape(call_5268.astype('float32'), [14, 7, 3]))
output = relay.Tuple([call_5268,call_5270,])
output2 = relay.Tuple([call_5269,call_5271,])
func_5273 = relay.Function([], output)
mod['func_5273'] = func_5273
mod = relay.transform.InferType()(mod)
output = func_5273()
func_5274 = relay.Function([], output)
mutated_mod['func_5274'] = func_5274
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5308 = relay.var("var_5308", dtype = "float32", shape = (4, 10, 9))#candidate|5308|(4, 10, 9)|var|float32
uop_5309 = relay.cos(var_5308.astype('float32')) # shape=(4, 10, 9)
func_4637_call = mod.get_global_var('func_4637')
func_4638_call = mutated_mod.get_global_var('func_4638')
call_5313 = relay.TupleGetItem(func_4637_call(), 2)
call_5314 = relay.TupleGetItem(func_4638_call(), 2)
uop_5327 = relay.atanh(uop_5309.astype('float32')) # shape=(4, 10, 9)
output = relay.Tuple([call_5313,uop_5327,])
output2 = relay.Tuple([call_5314,uop_5327,])
func_5335 = relay.Function([var_5308,], output)
mod['func_5335'] = func_5335
mod = relay.transform.InferType()(mod)
mutated_mod['func_5335'] = func_5335
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5336 = relay.var("var_5336", dtype = "float32", shape = (4, 10, 9))#candidate|5336|(4, 10, 9)|var|float32
func_5335_call = mutated_mod.get_global_var('func_5335')
call_5337 = func_5335_call(var_5336)
output = call_5337
func_5338 = relay.Function([var_5336], output)
mutated_mod['func_5338'] = func_5338
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5383 = relay.var("var_5383", dtype = "float32", shape = (5, 1, 14))#candidate|5383|(5, 1, 14)|var|float32
uop_5384 = relay.log10(var_5383.astype('float32')) # shape=(5, 1, 14)
output = uop_5384
output2 = uop_5384
func_5396 = relay.Function([var_5383,], output)
mod['func_5396'] = func_5396
mod = relay.transform.InferType()(mod)
mutated_mod['func_5396'] = func_5396
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5397 = relay.var("var_5397", dtype = "float32", shape = (5, 1, 14))#candidate|5397|(5, 1, 14)|var|float32
func_5396_call = mutated_mod.get_global_var('func_5396')
call_5398 = func_5396_call(var_5397)
output = call_5398
func_5399 = relay.Function([var_5397], output)
mutated_mod['func_5399'] = func_5399
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4637_call = mod.get_global_var('func_4637')
func_4638_call = mutated_mod.get_global_var('func_4638')
call_5415 = relay.TupleGetItem(func_4637_call(), 3)
call_5416 = relay.TupleGetItem(func_4638_call(), 3)
var_5458 = relay.var("var_5458", dtype = "int32", shape = (648,))#candidate|5458|(648,)|var|int32
bop_5459 = relay.equal(call_5415.astype('bool'), relay.reshape(var_5458.astype('bool'), relay.shape_of(call_5415))) # shape=(648,)
bop_5462 = relay.equal(call_5416.astype('bool'), relay.reshape(var_5458.astype('bool'), relay.shape_of(call_5416))) # shape=(648,)
output = bop_5459
output2 = bop_5462
func_5470 = relay.Function([var_5458,], output)
mod['func_5470'] = func_5470
mod = relay.transform.InferType()(mod)
mutated_mod['func_5470'] = func_5470
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5471 = relay.var("var_5471", dtype = "int32", shape = (648,))#candidate|5471|(648,)|var|int32
func_5470_call = mutated_mod.get_global_var('func_5470')
call_5472 = func_5470_call(var_5471)
output = call_5472
func_5473 = relay.Function([var_5471], output)
mutated_mod['func_5473'] = func_5473
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5505 = relay.var("var_5505", dtype = "bool", shape = ())#candidate|5505|()|var|bool
const_5506 = relay.const([[[True,True,False,True,False,True,True,False]],[[False,False,False,False,False,False,False,True]],[[False,True,True,True,False,False,True,True]],[[False,False,True,True,False,False,False,True]],[[True,False,False,True,True,False,False,True]],[[False,False,False,False,True,False,True,True]],[[True,False,False,True,False,True,True,False]],[[True,False,False,False,False,False,True,True]],[[False,False,False,False,False,False,True,False]],[[True,True,True,False,True,False,True,True]],[[True,True,False,True,True,True,False,False]],[[True,False,False,True,False,False,False,False]],[[False,True,False,False,True,False,False,False]],[[True,True,False,True,False,True,False,True]]], dtype = "bool")#candidate|5506|(14, 1, 8)|const|bool
bop_5507 = relay.logical_or(var_5505.astype('bool'), const_5506.astype('bool')) # shape=(14, 1, 8)
output = bop_5507
output2 = bop_5507
func_5526 = relay.Function([var_5505,], output)
mod['func_5526'] = func_5526
mod = relay.transform.InferType()(mod)
mutated_mod['func_5526'] = func_5526
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5527 = relay.var("var_5527", dtype = "bool", shape = ())#candidate|5527|()|var|bool
func_5526_call = mutated_mod.get_global_var('func_5526')
call_5528 = func_5526_call(var_5527)
output = call_5528
func_5529 = relay.Function([var_5527], output)
mutated_mod['func_5529'] = func_5529
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4637_call = mod.get_global_var('func_4637')
func_4638_call = mutated_mod.get_global_var('func_4638')
call_5546 = relay.TupleGetItem(func_4637_call(), 2)
call_5547 = relay.TupleGetItem(func_4638_call(), 2)
output = call_5546
output2 = call_5547
func_5549 = relay.Function([], output)
mod['func_5549'] = func_5549
mod = relay.transform.InferType()(mod)
mutated_mod['func_5549'] = func_5549
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5549_call = mutated_mod.get_global_var('func_5549')
call_5550 = func_5549_call()
output = call_5550
func_5551 = relay.Function([], output)
mutated_mod['func_5551'] = func_5551
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5602 = relay.var("var_5602", dtype = "float64", shape = (6, 10, 12))#candidate|5602|(6, 10, 12)|var|float64
var_5603 = relay.var("var_5603", dtype = "float64", shape = (6, 10, 12))#candidate|5603|(6, 10, 12)|var|float64
bop_5604 = relay.maximum(var_5602.astype('float64'), relay.reshape(var_5603.astype('float64'), relay.shape_of(var_5602))) # shape=(6, 10, 12)
func_1938_call = mod.get_global_var('func_1938')
func_1943_call = mutated_mod.get_global_var('func_1943')
const_5608 = relay.const([8.672600,4.057928,3.339302,-5.526694,-8.834384,-3.577850,-9.511511,5.235397,9.673341,-3.318211,-8.762254,-9.075712,2.038656,-6.800044,-0.992013,-4.898356,-9.637115,-9.436432,-8.331573,-6.851630,7.104508,9.607968,7.303685,0.775414,1.936228,6.820835,4.135187,-1.959187,-2.329768,-3.986819,3.703662,-5.383401,-3.232210,0.480553,8.623605,4.017697,-8.694174,-7.173330,9.811159,-4.713235,-8.346486,-8.033747,0.651415,-4.886703,-6.264332,-2.328827,6.801761,2.121477,0.748473,3.305614,-3.132440,-1.872173,1.976445,3.236600,-2.441940,-0.290545,4.612465,8.085280,9.277874,-5.086187,-9.934771,7.944255,9.581474,7.841382,2.944016,1.588936,-4.843628,5.845244,2.657613,-7.524373,-0.966724,-0.716775,-2.965381,8.831037,2.947639,6.962407,-1.305345,-1.310447,6.513505,9.848210,-4.365932,4.945772,-9.251731,-0.615781,3.539259,2.886793,6.862646,6.243242,5.809563,-6.732348,4.823611,-9.498543,-8.317736,0.456919,2.128268,2.228011,-9.668993,-0.788506,6.036060,-9.082331,1.748351,-0.316492,5.818647,-5.187848,-6.042042,9.673423,-6.571932,-2.590171,-4.227509,8.593384,-6.851081,1.188559,6.126541,1.687654,5.666565,9.201128,6.842857,2.756847,4.990226,-6.028263,-8.535603,3.323191,4.733083,-9.817491,-8.822019,4.866785,-6.771648,1.981768,-6.794220,-4.848930,-4.318966,5.469553,5.773877,-3.996180,-7.842918,2.642981,-2.134289,-3.531947,-5.727088,-8.847765,-4.772705,1.721690,-1.673335,-6.808248,0.724599,-0.087555,-1.692159,4.226089,3.046445,-5.039899,-8.132072,-8.906959,2.332489,8.848947,0.525414,-1.059455,1.230270,-1.942707,-1.950117,3.083470,0.830157,1.246114,5.541791,-7.710144,-8.870986,-1.895899,-1.480076,4.388361,0.535537,3.159623,-0.246593,-0.824617,0.127337,-8.159594,8.244333,0.773284,6.818983,-4.993552,8.599689,3.331018,-2.162843,7.443747,2.084684,-9.516694,7.275164,5.998516,1.693337,8.348962,9.421178,-0.031063,3.113160,1.981766,-5.868054,7.922498,-7.103937,2.040040,3.877172,7.837801,9.778767,2.912397,0.712527,2.942734,1.653691,4.671546,-4.775276,3.642395,4.869935,-8.292714,8.442406,-8.767408,8.762275,-0.560394,-0.850387,2.691136,7.340408,-8.117468,8.185865,3.138769,-6.370994,5.991410,-0.570997,8.257722,-5.479812,9.831708,2.579237,3.654772,4.898143,3.936457,-1.437912,5.898403,-8.988402,-3.856705,1.289686,-3.917555,8.197364,-8.259383,-2.246185,1.342446,-8.451859,-6.977651,-9.686833,-6.001592,6.290409,9.039427,-0.735817,1.915406,-1.100436,-6.934239,9.815809,-1.635991,6.201823,-5.017078,-4.298863,-5.723959,-1.820801,-4.353161,-7.804435,-4.577759,3.607141,5.213198,9.776475,-4.254303,1.626127,6.050130,7.028794,2.208549,2.271990,-9.665918,3.707835,-0.001011,-9.807359,3.445331,2.689437,-5.611440,0.364384,-0.381293,5.866104,4.495789,0.313998,6.841502,-9.407194,7.242882,3.891102,7.710818,-2.182260,-9.823980,-9.467194,-5.675692,-5.188598,-2.816181,-2.846432,-2.325081,4.769685,-7.689127,-9.758297,5.409444,-7.402577,-9.714303,8.237139,6.126299,8.636768,-1.863606,2.432243,5.537344,2.490410,5.415299,-3.369410,7.712070,1.877005,2.719622,-5.520675,-1.115774,1.788544,-1.443732,-1.847100,7.796449,8.923160,-2.618463,-8.933645,-2.683483,0.601484,8.029625,5.696367,-7.862959,8.286337,0.961816,-8.690184,-6.493110,-6.004591,-7.209680,-0.048201,8.151739,5.917133,-7.538026,0.012311,-4.019819,9.682723,3.377071,-3.855219,0.945401,3.901264,9.264071,0.033140,0.925922,-1.895954,-1.598062,2.026852,4.795460,5.605366,-7.216933,-4.263601,-2.977180,6.131643,4.172905,3.612341,6.015536,9.578825,-5.014104,-2.722460,-7.140629,-3.537788,-2.650501,-7.955814,-0.313333,4.311990,1.382318,0.469259,9.598227,4.966233,3.113409,-4.314215,5.466135,4.865719,-2.636375,1.281719,7.115309,8.485507,-3.390999,6.985661,-1.514335,1.426246,-0.265994,2.514738,9.114838,-7.374188,0.396360,4.517878,-2.918645,-2.254170,5.607301,-3.187923,1.477017,-2.312191,3.566773,5.666529,-6.973916,9.198942,2.977201,3.325627,3.641753,6.974548,-5.300004,6.812967,-6.066018,5.375979,-2.342557,-9.830147,3.184473,5.754304,-7.157911,-1.790761,6.058473,2.237727,-5.674467,-8.271882,0.291878,-5.530092,-5.349102,-4.059379,-3.725312,-9.229011,1.641558,-5.856238,1.582563,-2.309666,-8.168935,1.103784,-2.422230,3.624259,6.238908,4.739137,9.667928,-8.225815,3.600879,-7.342163,-8.030767,-1.634527,3.509036,-4.992601,-7.635787,-5.225998,-3.876573,7.069967,9.085642,7.737133,-8.839118,2.087880,2.655454,0.500683,-7.397600,-7.860909,6.131121,2.573739,1.099169,9.465432,-0.650985,9.165190,1.977560,1.362372,4.993463,9.493030,2.847155,8.119284,-0.782687,-2.724813,7.969291,4.169359,5.463649,4.997645,5.629227,1.555852,4.469370,-8.257071,7.900257,7.750866,-3.721117,-1.122831,2.195139,-2.716692,-7.122240,-4.148276,2.101922,-2.015768,-6.312623,-8.080506,7.848514,9.202276,-8.372129,8.511974,-8.318525,-0.495100,-7.497064,-3.281298,-3.849823,1.007305,0.502585,-5.835533,-6.674032,-3.155802,7.717268,-7.718292,-2.242779,4.842056,9.008243,-3.739471,6.469248,-0.294243,6.664385,5.525491,-9.340472,-1.677257,-3.474987,-8.431700,-1.882595,-0.230491,8.990881,-2.943691,-2.950816,-4.126426,-6.877327,6.070645,8.205803,6.701082,4.522526,2.394093,-9.655816,6.361651,-3.751387,8.858408,-9.478238,-0.895450,-8.209074,2.595282,-9.719352,-0.596760,-1.239080,-2.700136,2.561644,-2.419532,-9.279109,-1.890348,-4.955325,-7.748362,-3.562862,5.369253,7.019899,-1.246186,-5.283559,-5.871187,-2.163629,3.079979,8.324659,-3.370096,-7.501439,7.316145,-8.462325,5.905452,0.287922,-6.841874,8.774406,4.661650,5.743605,-3.716360,4.631258,3.158414,9.126108,3.393463,-1.109111,4.432094,-0.144352,-5.927433,7.819940,0.496429,6.521077,-9.456085,0.434932,4.164907,5.402716,-2.530905,-8.412896,-1.800853,0.194223,-5.158847,-3.076601,-9.367619,-1.469448,5.267028,-5.685092,2.737361,-8.130786,-9.351993,1.764060,8.244875,1.050337,1.215991,1.387991,9.974021,2.919607,-8.044471,7.856563,2.291498,6.397912,6.372603,1.763652,8.197313,-2.488179,-7.894233,6.728516,7.158044,3.294051,8.843239,-0.120770,8.440062,-3.613567,5.876761,-3.258190,-6.400849,-1.187464,5.083811,-4.851268,0.895437,-7.406757,-3.739994,4.398148,-5.328400,-5.823830,7.456954,-0.742904,5.107466,4.428146,6.615675,6.460856,4.661284,5.335991,8.577673,-8.162701,3.880062,-1.448954,-3.070187,4.662496,3.943796,-3.887995,-1.631743,9.242725,-8.153138,8.442185,2.234862,8.718298,-3.256289,8.369388,-4.375299,-7.982625,7.932495,6.667696,3.300084,-0.740686,-5.239560,2.048393,-1.946653,-5.022170,6.514836,-2.510184,-1.498107,-1.690539,-0.374720,8.459807,5.339512,-7.511448,-6.899455,-4.899742,-5.207481,-3.641514,-8.162163,-6.421094,2.026328,3.364504,-8.391005,0.208147,4.571151,0.709747,6.679304,-8.043898,-7.439948,3.768081,-1.096452,-1.448922,1.706917,3.193980,9.600901,-5.538607,6.301045,9.765176,4.814447,-6.781929,-6.889271,-4.882104,-7.942883,-9.090193,-4.276699,-8.046701,-8.986386,4.420076,9.980964,3.522045,-0.037267,6.547749,1.328805,1.238932,5.275885,8.178868,1.165000,-5.812384,-3.528397,8.286087,-8.990899,7.549473,-5.723212,-5.683533,8.197447,-2.107075,4.962436,3.366022,6.463525,4.328069,9.724446,-0.703902,1.294439,-0.322947,-6.201151,-5.908939,5.761989,0.481478,-0.773259,-8.022865,4.723996,-0.304576,-5.032201,7.126751,-6.649666,9.724528,1.062358,7.396530,-5.355714,-9.586194,1.285981,3.722548,-3.560234,-7.123448,9.194015,-4.480004,-9.027557,6.841389,0.072953,-5.730233,-5.294623,6.547555,6.935744,-2.895902,-5.389554,-2.766716,8.606598,4.911815,-0.691304,-4.147555,-7.823292,-2.181905,5.886728,2.505238,-7.728024,1.986727,2.129032,-9.978858,5.394989,-3.304907,5.572659,5.051308,1.237204,-9.789734,-5.829083,4.780779,-1.262178,0.777843,6.664406,-9.490607,-4.911834,-8.100951,-4.800734,0.574723,8.875367,0.476722,-0.322868,9.543568,6.095829,-1.604199,5.446877,-9.178942,6.230262,4.470849,9.626332,4.542627,9.056116,5.777285,-0.388073,2.062620,7.464476,3.803125,5.703253,5.748104,-7.550720,7.977352,6.734023,5.362130,2.611207,7.804361,-4.864826,1.823841,6.228805,5.225958,2.668116,9.304904,-4.006305,-3.417633,-4.388198,-8.667102,5.949580,-4.511221,-3.985041,-7.134075,-0.780511,-5.984288,-3.155109,5.785728,-6.080013,0.025238,9.347699,-0.554936,1.827809,-1.854383,-7.068930,4.973718,-5.221046,-0.856242,6.505110,-7.598513,9.553455,6.097370,-4.407264,9.100445,3.810409,-9.631211,8.513771,-2.674890,-2.044019,-1.854026,-2.394369,-6.635335,5.165385,1.600369,8.293687,0.779880,-4.013881,-7.765916,8.730298,2.245456,3.698029,8.558832,5.738245,9.729428,-2.277718,-5.148727,5.102382,4.062028,-9.861045,-3.609274,2.212171,-8.229388,-7.747101,-8.627693,-9.193597,-3.307829,-3.803075,-9.271890,-2.909841,6.157226,-7.981404,4.988443,-0.164447,-3.804826,5.064789,9.434186,-5.883560,-5.811209,-4.232000,-0.235151,-5.156966,-0.930845,6.342166,-1.484246,5.508986,-5.940056,-4.786620,0.247893,0.637970,7.283764,-1.637113,0.006020,-8.612642,8.832084,-5.394955,8.379609,7.448660,5.798185,-7.803217,-1.748824,1.026638,1.422875,-7.812709,8.380581,4.730119,-2.701781,3.734291,-4.198946,9.614363,-4.481057,-0.403108,-8.716922,-8.606476,-6.637183,-7.022682,-7.765488,9.734212,7.448328,-8.907842,6.774727,8.704457,-2.899365,9.821210,-2.922989,-1.851325,8.587567,-8.890174,-4.772685,1.092043,5.817429,2.303463,-1.911340,-4.547678,-8.860114,-3.841906,-1.645497,6.531733,-7.667951,2.932397,1.285196,7.902290,-1.411436,5.585462,-0.927649,9.336350,-2.031575,6.733526,-7.547239,-2.297198,7.488172,-1.415406,-5.329646,-9.793441,4.597327,6.838167,0.011415,6.697917,-1.609402,9.997318,6.957738,-2.210105,6.701250,-5.292161,3.268608,1.943111,2.776448,-1.090856,7.848519,-3.457522,7.927976,-2.580383,7.456877,-1.633984,-2.161131,-0.144694,0.886310,7.713955,4.691800,-0.305716,-0.566398,8.433262,7.467959,2.535061,-2.357395,7.075708,3.607857,-5.973062,7.634512,-0.213671,-8.158033,-3.528167,9.353859,5.895483,3.227463,-5.102166,0.319000,-9.988260,7.416446,2.237247,2.176868,9.658732,-3.456174,5.997431,4.737658,5.660208,8.711934,7.045685,6.355134,1.715579,-8.965534,-6.200496,4.678135,-4.219279,-4.848667,-1.125579,5.146827,-7.951281,5.297915,9.064427,9.466728,3.700797,-7.449533,-9.948734,7.690018,6.829915,3.738191,5.140201,-4.915082,8.205167,1.445628,-5.185866,-6.108847,5.009331,9.278477,-1.420399,3.876800,2.015185,-6.847543,-8.301878,0.554903,2.570475,7.237408,0.534218,-3.421452,0.270685,-4.134555,-5.094356,-2.966575,-2.458816,3.298304,7.348309,-1.551973,-6.190296,-1.566180,-3.874239,-1.307922,-6.450155,-5.066342,6.894638,-8.167730,7.424923,1.850093,6.118644,6.183138,5.685465,-1.395281,8.193407,2.042877,2.407191,-9.180619,2.321334,3.529625,8.743920,9.251748,0.720086,7.134763,-5.503849,-1.254873,-6.242294,9.341500,-6.305798,-6.287953,6.588618,-2.392168,4.201304,-9.655886,0.790956,-4.939607,-4.054778,-2.758194,-3.944669,-6.580084,-1.158675,-0.549958,-3.997714,-9.251457,-4.003808,-5.157959,-4.170305,-7.440461,-7.647187,-8.470184,0.167599,-9.120824,-8.852420,5.823717,-1.129457,8.863305,-5.439523,9.652664,0.260175,-2.877721,3.057742,2.006215,3.002996,9.952343,0.273450,5.570814,6.287876,-0.615963,-5.297700,-6.111542,8.852008,4.676249,6.265441,-3.321945,-5.690487,-3.372817,4.149480,6.867505,-7.074370,-1.450907,-8.477447,-6.124569,6.969948,2.256249,-0.237569,-0.898426,4.029907,8.813638,0.347638,-7.853293,-1.225371,0.169332,-6.341827,-3.204157,6.628502,-5.580610,1.510642,9.727824,3.429643,-1.961212,-7.404880,8.897036,4.590353,0.615698,-8.030046,-7.997242,-5.674950,5.425280,5.438355,7.855586,-1.995214,-1.781358,-5.997997,6.719854,0.609835,4.546286,-0.865825,2.765643,-5.738885,-8.866843,-1.736277,2.046332,-2.648779,-3.794956,6.311673,9.837989,7.261882,9.993779,9.562502,-7.315758,-1.853142,6.380703,-5.177027,-1.857987,2.551348,-4.040264,-7.928816,-1.765384,-5.371374,-6.931760,4.122433,4.712702,1.648551,-5.671513,8.108033,8.910278,8.046076,7.638963,-9.443709,-3.988989,-0.412429,4.884113,-6.723064,-4.271874,-1.146505,-8.481958,-3.410637,2.274263,-8.578031,-0.489896,-1.165188,-2.282193,-9.347068,7.026150,8.587388,-5.839421,-3.971306,-0.381893,-3.262712,0.389799,9.608604,-6.981609,-2.619457,-0.854700,9.226593,-7.249333,-9.741818,3.171068,-1.380814,1.071619,-5.636293,-5.539878,-8.357139,-2.168873,0.964644,0.523362,0.802425,-8.323250,3.983000,2.603354,9.352548,-8.794351,-3.033424,8.041225,4.737670,-1.252037,-2.722643,-1.649055,-2.619450,7.802141,0.453846,-3.975921,-0.002242,-0.537637,6.459810,8.915525,9.460238,9.626460,5.327500,0.005141,5.558928,0.853103,-8.834989,-9.363473,-1.203174,-2.143017,0.219996,-2.461078,1.348346,1.564281,-8.688804,5.010512,3.110879,5.632680,5.187866,6.142974,3.649517,3.296404,-1.489904,-1.031397,9.856194,-0.009161,1.760196,6.813613,4.708944,-3.388504,0.610529,-9.985437,-3.750145,6.861871,-1.253246,-2.916150,6.142896,2.557520,-8.928991,-4.033205,-1.019337,-0.877799,-8.970890,-6.442397,-6.241388,5.503310,-9.823860,-6.931753,-7.195237,3.270848,-2.023579,-0.035635,5.298491,-1.723331,2.329769,6.149481,5.517846,5.559155,7.368402,-7.734799,-2.514303,2.382236,4.366538,4.813901,-2.422649,-7.313385,5.070316,-8.435037,-6.398702,-9.510632,-9.515910,3.228895,2.387795,4.780015,-8.709672,-6.371277,5.111674,4.989855,-4.075974,-6.595862,7.272263,1.011123,2.534449,8.305177,-7.995258,9.266457,-9.922237,0.663932,-8.752732,-1.619349,-1.047004,6.735870,2.029266,-0.290258,-7.313995,-9.105354,6.410233,-1.917729,9.694629,-6.962532,2.256038,-3.479486,-4.293440,7.094914,-2.172914,6.329782,-7.406851,9.670675,4.659622,5.726265,-8.567919,-4.485329,-3.870861,5.709059,-9.805634,5.606010,3.633653,3.826759,3.832913,-4.950792,9.681869,-8.889797,5.027443,8.470182,9.377002,-7.427762,-6.158968,6.880773,4.776548,-1.680693,-4.892805,1.462097,-7.145547,2.169672,8.041236,8.861119,4.625820,-7.969497,6.007470,-9.596907,9.363725,0.461674,4.368353,-7.552425,0.793044,-9.840194,-0.740201,8.145380,0.894212,7.462115,0.222389,2.005046,-0.960762,7.618983,3.062101,1.247895,-1.166390,-0.906802,1.459307,-4.553840,6.998377,3.539058,-7.318315,-8.530086,7.008485,-7.872177,6.758640,-8.629495,9.692866,6.285370,7.939493,9.680922,8.216229,8.451939,-8.606434,7.022999,-4.607511,-9.900277,-1.115183,-3.099171,-6.064083,-3.469776,-0.646108,9.553698,-0.437957,-7.199047,7.183482,9.352315,9.322395,-3.584318,-9.597561,-1.510395,-7.409366,1.214680,6.164632,-2.011639,-4.821563,2.511013,4.607195,-3.304865,-8.245950,1.888569,8.895748,-0.525681,4.111832,-7.066272,5.416755,6.068173,9.384107,-5.235503,-7.612763,-7.391496,4.075631,-7.328473,1.711965,-7.291998,8.048369,1.383969,-5.153215,-6.840208,-4.429106,1.902834,1.236650,5.880725,2.938002,4.047352,2.197457,-7.041709,-8.466888,0.342584,5.395960,1.521289,-8.373314,6.701137,-2.086429,-7.010749,6.529391,-0.647325,-7.868085,7.261379,1.045536,-5.342293,6.102521,3.395571,0.422972,4.664125,-7.764996,4.386615,6.163874,4.086949,-3.708314,2.667717,3.487547,-2.612081,6.783803,1.889970,9.232075,0.356703,-3.278251,-8.127780,-1.630627,7.734767,-1.578922,2.865567,8.382308,4.243212,-5.173982,9.801219,4.417066,-9.017638,-9.488095,2.575291,9.457178,-6.504608,-9.387250,2.111519,-0.252503,3.880674,8.637398,-9.379781,-9.276598,0.264204,-8.847318,-1.804494,-5.235154,8.577119,6.143937,-2.737583,5.011742,-0.338362,4.766016,-8.444153,-9.535084,-3.242628,-4.169867,7.877143,3.081739,-7.852517,5.667880,0.515100,4.503265,-1.320380,3.568612,5.476900,0.184871,-0.021877,8.154470,-7.922093,3.892681,2.687095,-2.775271,-3.541772,2.258378,7.244366,1.534181,8.485884,6.090319,8.136925,-2.061773,-3.334255,9.491413,2.365680,8.504513,-1.816516,-9.187365,8.167511,-8.879942,-2.794845,-4.930855,5.614247,-4.484906,-2.710317,-9.626083,9.488641,-9.462399,6.363146,-0.897370,-8.469100,-6.759564,-0.896503,-7.047300,0.387394,5.772760,6.789515,-6.779205,-3.472775,4.270563,-6.352122,-6.570912,-2.687260,4.056174,-4.014542,-2.576046,-1.337723,-4.892393,-7.847789,-9.191719,1.813855,9.263960,0.392552,5.032943,7.823033,-0.532136,3.182965,2.630199,4.780361,5.702922,-4.582871,-5.475419,-8.438874,-5.448260,7.885713,0.074587,-4.708571,2.954295,-3.159746,5.486304,9.433571,6.945420,4.952058,4.231211,-0.619792,-2.730585,-8.931067,7.301934,2.431736,2.822150,-3.160702,-0.676469,-3.396109,-1.385683,-7.492447,-4.459787,2.386682,-8.738447,-6.967419,5.769709,-2.742843,6.748577,-4.653230,-4.642243,-4.431465,-1.271411,-3.892959,-3.116072,8.057845,0.952910,-2.171941,3.309318,3.748842,-4.952504,1.112196,-3.684388,-1.262645,2.585094,-3.997145,-8.184061,9.112095,5.703560,6.667358,-7.900239,-8.549160,1.496613,7.091857,-4.918236,-1.286527,-8.452057,-3.512308,-4.004069,7.208777,0.011432,5.327522,-2.273534,7.112246,-4.406974,3.083895,1.959225,-5.782014,0.698545,1.803909,-2.133143,-6.431031,-4.719528,-0.805381,3.247797,-2.399306,8.386963,3.321157,-0.138468,-2.109249,6.408946,-7.770811,9.425695,3.413719,-0.176605,4.202246,1.790233,-7.228446,-4.689645,-8.626715,-6.891915,7.672209,-8.806106,2.250242,2.378077,8.111088,-2.996971,1.008008,-6.682309,-4.902845,6.207439,7.059201,9.666460,-3.755972,-3.691701,-9.435532,3.239907,8.136237,-5.240624,1.294085,-3.520671,-0.911768,-6.114146,-4.324566,2.179152,5.694142,-3.698248,0.213041,-2.326251,-6.720019,-3.153853,6.823604,-9.141329,4.538006,-8.604578,-1.254400,8.701208,7.846459,-6.650460,-6.607413,-1.223980,-4.141184,-1.208014,-7.437595,-0.345679,-7.491753,3.214686,-8.578919,-0.292168,-2.936692,-1.031681,0.088069,-8.740579,3.012062,-8.924986,-1.057154,-0.090324,-6.561625,-8.284553,0.210622,6.596063,4.437543,-4.066924,-7.088845,8.026290,6.140990,1.738171,6.799680,1.585618,-3.467857,-2.807130,-2.830407,9.096982,1.472199,2.227157,-0.391755,-7.008301,-6.410178,-5.184703,9.585695,1.078520,6.126146,8.133810,-9.311843,-7.846331,9.018834,9.139409,4.240021,-5.853503,-0.874218,9.340509,-5.185114,-8.432241,-8.744074,7.176745,-9.136899,-5.674520,8.201658,-7.232655,-5.699158,-1.678627,0.992899,1.351113,-4.314967,-7.956456,-5.976920,-2.260653,4.171029,6.806318,4.284217,-3.381409,2.062500,2.923878,-1.148844,4.491411,-4.027642,-6.566636,9.622807,-2.384261,6.888824,4.788503,1.391892,-1.702295,-4.592335,-3.536153,-1.763698,-1.255879,-6.272704,-5.153197,8.148979,7.576019,1.811982,-1.341697,-4.107105,7.649604,5.638420,4.993208,-1.659066,1.689727,4.993472,-7.954536,-2.167349,9.969624,-3.205296,-1.469229,3.911620,-2.721817,9.146787,-7.503349,5.851792,-4.924108,-3.774033,9.527133,6.123125,1.725310,1.167196,0.597493,-4.174254,-2.543877,-2.622440,1.138227,-3.238668,0.847935,-3.526430,4.021569,1.793967,-3.366758,7.976017,-1.062480,-9.477280,2.631909,6.221444,-7.190057,-1.654138,-7.988586,1.636054,-0.335248,2.164497,0.692852,9.015562,-6.469710,-1.119929,-7.755007,-5.456934,4.260675,5.310296,-3.429931,7.596319,-3.232505,5.780572,-4.597878,-3.444051,9.707152,-9.911069,9.219698,3.037281,-9.601469,-2.292015,-2.345853,1.011213,-6.443412,-7.401942,1.106704,8.959020,5.208126,1.401819,8.819136,4.967940,7.980332,5.074305,3.039042,-9.753079,8.573897,5.807638,-0.774325,1.280192,8.109300,2.566368,6.751966,-7.762618,-9.478673,-9.876939,-1.994994,-8.052670,-3.809643,-1.402732,-7.799058,4.387873,-6.895895,4.125125,-9.688127,8.913061,0.344994,-4.711923,5.414785,8.315547,-9.767206,4.782000,6.236012,8.843950,5.563456,-9.671956,-9.522559,7.120638,-7.182681,0.113819,3.564852,-9.669923,-5.738181,3.336699,5.181664,6.793297,7.364240,-4.502387,-0.721826,-9.439585,-9.667329,6.294542,-4.648670,4.119320,-6.198744,9.857824,8.969824,-0.807918,7.857042,8.722211,-9.482632,-5.358226,3.543732,0.362870,-8.987054,8.758011,-1.910334,-0.829072,-3.895428,5.651694,-3.554454,-5.489366,-0.609966,8.171796,6.038936,-9.229946,2.574045,0.593197,-2.942477,-9.238117,-8.520445,1.592493,9.394862,2.122762,9.801402,-2.174671,-2.107481,7.545439,4.955322,-8.564006,0.316547,-2.610318,2.631079,5.804719,-1.533829,8.581455,8.634604,0.084087,-4.697827,-7.496101,8.107986,1.465100,-5.162088,-5.335530,-7.924673,-3.262555,-0.008418,-4.740488,-5.215876,6.734540,-7.790925,0.861428,9.461396,-2.734015,6.436162,9.247288,4.108497,-4.747994,7.068849,0.335402,1.103401,6.152206,-6.785823,-9.881366,5.052363,-5.354930,-5.395483,3.407354,-8.003579,6.327991,0.456029,6.116173,9.824782,-2.059823,-2.323313,-8.312643,0.092647,8.642502,-1.897034,-6.078605,5.924178,7.746424,-8.164041,0.231571,-2.564813,-9.365286,6.707887,-8.757504,-1.784370,5.961271,-6.365248,-4.221173,6.032906,1.447617,0.894890,0.709248,-1.205483,-0.572191,-2.727053,-2.505330,-1.972362,-0.751655,-4.943008,1.591175,6.213093,4.920136,-1.087864,4.440678,-8.986472,3.533833,-5.925051,-5.606109,8.320641,7.514543,5.923312,-1.512006,-9.758070,6.174910,5.506753,9.632897,-8.529971,-2.239615,6.503310,-7.816407,4.688552,0.046781,4.790652,-3.389832,5.144564,-6.883404,2.165818,-7.598920,5.506042,-5.734473,-2.942909,6.107402,5.047727,-8.955048,7.000750,-7.323404,-7.028046,-8.768847,5.878702,5.772145,-3.949274,3.921547,-3.877498,4.675813,-8.751057,8.851977,-0.694040,7.355329,-8.191537,-2.982966,-2.626826,-8.708708,-2.355154,-6.424408,-0.921199,-3.225208,5.833937,-2.012085,-2.426789,4.610766,-2.096152,2.627083,1.119811,-7.291033,-2.719725,1.518571,9.131355,-4.949038,-2.098416,3.094105,-0.743693,2.317664,-9.122788,6.045904,-2.772157,2.914126,7.007755,2.580458,6.919596,3.294861,-6.372739,-7.856311,-9.383097,3.831326,-1.951922,9.567642,3.782641,-2.064287,6.181481,-7.059678,2.277618,-5.586415,-3.231352,0.697692,6.581233,-4.712267,-0.592365,7.857609,3.152228,4.089042,8.368532,-5.410303,-1.485098,-7.540544,-5.309791,5.878517,-2.930629,4.428117,9.518161,-3.669795,1.373435,-6.093711,-9.209387,-4.636006,-0.033641,4.221954,9.212403,-4.179139,-7.258564,0.548870,3.992201,-8.876215,-1.359086,4.419748,5.438799,-1.337957,-0.710047,-2.713578,-5.783875,-3.513801,-6.182498,-7.783963,7.229982,6.756759,-8.687394,-2.572661,8.376378,4.090540,-1.805455,3.700171,0.415760,-0.254354,-9.885833,-7.159192,-7.298782,-4.593664,-1.100093,-6.934896,5.395041,5.697406,-0.344452,-1.309207,0.903429,3.675825,-7.850888,6.390027,-2.824927,3.802227,-8.142697,7.912515,-7.663559,8.370955,-6.870670,-0.954669,-6.669397,6.653489,5.020449,-3.843615,-9.860010,0.387005,2.172581,-0.339833,-1.569838,-5.131342,2.282348,1.858283,2.936826,-7.199116,-9.622304,-5.813625,-6.368961,8.985201,0.899409,-5.529559,6.451507,-7.942984,-3.663718,-6.337091,-2.776035,9.066467,-2.523413,2.759167,-6.238356,-7.777384,-0.194451,5.727991,-5.217131,-0.006819,-1.836277,8.341568,-7.005587,-9.245360,-7.895044,-5.053709,-4.408343,-5.897277,-3.456365,-4.548863,3.268971,-9.015122,2.051928,4.689772,-7.055265,2.683068,-6.968851,4.927523,-3.323189,-8.814505,-9.012160,1.656518,-5.484418,-2.066210,1.489352,4.759965,9.102447,-0.042138,8.892319,-1.568835,-4.587897,1.468148,0.387179,0.191186,-0.111965,-8.857576,-4.156244,5.748067,-6.484570,-2.049053,9.717501,-6.197406,0.338790,2.020055,-1.015119,-7.229346,-3.336262,-1.761069,-6.206248,2.857110,8.477864,-9.453425,-6.896640,-5.755732,2.857246,-6.282445,5.486866,4.581068,-9.342946,0.298087,-2.877858,4.108564,7.398571,-6.201856,4.057771,0.736257,-6.231616,4.269422,9.877654,2.542133,-1.889451,1.084324,-0.333716,-7.248467,-5.373485,-0.917496,6.925228,0.008392,6.266448,2.005837,7.275389,9.328311,-6.111442,-2.948506,-3.578275,-4.064472,-6.778852,-5.537968,-7.715476,9.342905,1.004951,0.406982,3.022346,1.430116,2.346676,9.310211,3.708488,-8.726990,9.396102,-7.323938,-6.887846,-8.837393,-0.530015,5.532494,1.758472,3.381015,-2.274995,-6.668556,6.575854,-5.308113,-8.913615,-2.543645,-4.772203,4.612029,3.670333,-2.945104,-4.047996,-7.363861,2.663318,4.676912,-6.768851,0.769947,9.453121,-4.903990,-5.012344,8.863029,3.883163,-1.168245,-3.897420,7.539164,8.582127,4.700861,9.765493,7.292347,-7.709200,0.806334,6.813282,1.904077,-0.768094,-4.971067,4.111016,0.638322,4.581151,-6.310326,7.304460,1.621153,7.123413,-9.687915,1.391384,-2.271280,-1.387863,-0.321615,-8.883451,7.879950,-6.766801,7.248548,0.548874,-4.119650,9.781552,0.917451,-9.928283,9.641725,3.232777,-8.557169,1.866084,-1.826773,1.319625,-0.075640,9.652370,-6.846705,0.896287,9.901604,6.673313,1.737322,-9.135360,8.036995,3.013707,0.716784,4.572137,2.715208,-6.544532,-4.473869,3.050498,3.087584,-0.126799,-8.626153,-7.201214,2.395872,1.572659,-9.012118,6.861193,-2.798575,-1.932790,0.395225,-6.191577,2.583160,5.483389,-6.161583,-4.048392,1.885133,4.338584,-2.236496,4.939483,7.717836,-3.365055,-0.984559,-3.140492,-1.661226,-9.805963,-7.009845,6.273009,4.707317,8.490460,6.077008,-0.738412,8.731234,-2.055672,7.401102,0.149683,-7.375813,-0.358517,6.009286,1.505155,3.791124,8.652956,-6.568118,0.692240,5.869224,6.643143,-9.624546,1.856511,-6.166704,3.936900,1.002438,-8.075566,-1.526685,8.363618,0.074079,-2.999699,-7.732243,-3.462355,-7.942125,5.597593,4.065300,-7.755694,-3.835574,8.957698,6.803809,-2.912182,6.328705,-6.410980,4.072762,7.911205,-9.644961,6.546505,0.191296,-1.584371,-8.543624,-6.258618,-6.188155,3.020211,-5.153801,4.563509,-5.139929,9.946931,7.585081,3.244632,7.784501,1.836198,-0.405539,-7.684768,4.620846,9.018307,-9.495266,8.631622,-4.722911,6.735598,0.256456,-6.183697,-7.528482,8.968838,6.610233,-3.348661,2.468743,5.129363,1.258496,7.087759,-5.204558,-2.694659,-4.303000,7.451209,-5.637432,-8.729895,-7.437615,7.034327,-7.938511,-5.006522,-9.522559,-7.604957,-4.999832,0.852603,2.575520,-4.148645,-1.382997,7.641013,-1.012273,9.895634,5.794394,-5.025806,2.253249,7.459948,-9.498162,5.839575,-5.272810,-5.706739,4.075992,-9.602172,2.253506,-5.873941,4.924401,-9.204957,8.388610,6.477890,6.436569,-9.464199,1.659830,-1.575231,9.435234,-6.026847,3.801578,-0.765117,2.614919,-5.992545,-7.410278,-4.223534,-3.510542,1.210573,-9.014056,-2.536137,5.193760,-3.429345,-6.854283,-2.774250,4.550891,-3.751903,-8.155130,9.680098,8.365101,-6.133280,0.344428,-2.033360,3.374818,6.628351,-6.106213,-5.640315,-6.303181,-5.800843,1.022392,-0.626183,-0.724387,-2.859401,7.398276,-9.488328,3.114745,-1.055247,5.530015,-5.621582,3.285782,-6.671263,0.302781,7.137424,-7.699671,9.520093,-4.341951,-9.188493,-8.074971,6.397870,-3.924422,-4.991504,-3.364030,-8.653295,4.548581,9.056012,-9.564385,-6.493298,-5.495192,9.389596,-2.857384,-5.304312,-5.386228,8.205850,9.539737,9.226233,-8.094502,1.950648,-3.896850,-0.166597,-4.846155,-8.699993,9.691542,2.149416,-6.184388,-5.361080,8.393264,-3.792466,1.122126,-1.862642,-9.727041,2.540293,0.123794,-1.567067,-8.367987,-6.609132,-2.360357,-6.077383,6.420777,5.161104,-7.491147,-5.165800,-2.222000,-0.362681,-6.324576,7.874861,-5.532757,6.374179,1.771042,5.753017,-3.896295,8.795514,8.159873,6.365221,9.782570,-1.073437,-6.843186,6.720691,5.867405,5.874528,-8.250796,9.945264,9.593541,-2.374878,-7.609780,-1.669394,1.595826,3.674501,6.018066,-4.900894,9.876055,2.776234,2.913242,-1.902296,-5.468072,6.684914,-6.211868,9.770243,9.943395,4.367188,9.982982,1.830463,8.456268,7.294996,6.166907,4.034442,1.203441,-4.265210,2.324603,3.703828,-4.090449,-5.812336,3.960038,-1.748637,3.997796,-7.521727,-9.237197,-1.561184,-3.490125,-3.578618,7.609547,-7.204419,-9.045796,3.148722,-5.908765,9.233528,0.891805,2.109454,6.875419,-0.853901,8.628325,-6.091053,-4.981825,3.618346,-4.548259,-4.306361,1.460674,-0.530083,9.756214,6.345723,8.952318,8.029017,-5.031255,6.206200,-0.185297,2.282200,2.277970,6.156208,-0.703837,-4.924300,5.932667,-9.246583,-5.418121,-5.697756,-6.446010,9.446650,6.279005,2.209643,4.983455], dtype = "float64")#candidate|5608|(2816,)|const|float64
const_5609 = relay.const([[8],[-10],[8],[-3],[9],[4],[-8],[-7],[-6],[-5],[-3],[-6],[-2],[2],[10],[-6],[5],[-1],[3],[-6],[10],[6],[-6],[-6],[-9],[3],[-8],[6],[-3],[1],[-6],[4],[-3],[4],[8],[2],[8],[5],[-2],[-6],[2],[4],[-6],[1],[-9],[-3],[-9],[6],[-3],[-2],[8],[7],[2],[10],[5],[-5],[-5],[8],[-9],[3],[3],[-3],[-4],[-6],[9],[7],[2],[3],[-8],[-5],[9],[9],[-9],[7],[7],[-6],[-5],[-5],[-9],[-5],[-1],[-8],[-6],[6],[-4],[-6],[-3],[8],[5],[-7],[-3],[-3],[3],[-9],[-10],[-1],[-7],[-3],[-9],[-9],[-2],[-7],[4],[-6],[-9],[1],[6],[-4],[3],[1],[8],[-6],[2],[9],[10],[6],[5],[-8],[9],[7],[-7],[-3],[6],[3],[-9],[-5],[-6],[-1],[10],[-2],[8],[-4],[-3],[1],[4],[-3],[-10],[-5],[-4],[-6],[-1],[-9],[9],[9],[-1],[-4],[9],[1],[10],[-6],[-2],[7],[-5],[-6],[9],[1],[2],[10],[1],[-3],[-10],[-1],[-4],[-3],[-4],[1],[9],[-10],[10],[-1],[-8],[2],[-4],[3],[2],[8],[-4],[-3],[1],[5]], dtype = "uint16")#candidate|5609|(180, 1)|const|uint16
var_5610 = relay.var("var_5610", dtype = "int8", shape = ())#candidate|5610|()|var|int8
call_5607 = relay.TupleGetItem(func_1938_call(relay.reshape(const_5608.astype('float64'), [16, 16, 11]), relay.reshape(const_5609.astype('uint16'), [180,]), relay.reshape(var_5610.astype('int8'), []), ), 2)
call_5611 = relay.TupleGetItem(func_1943_call(relay.reshape(const_5608.astype('float64'), [16, 16, 11]), relay.reshape(const_5609.astype('uint16'), [180,]), relay.reshape(var_5610.astype('int8'), []), ), 2)
output = relay.Tuple([bop_5604,call_5607,const_5608,const_5609,var_5610,])
output2 = relay.Tuple([bop_5604,call_5611,const_5608,const_5609,var_5610,])
func_5612 = relay.Function([var_5602,var_5603,var_5610,], output)
mod['func_5612'] = func_5612
mod = relay.transform.InferType()(mod)
mutated_mod['func_5612'] = func_5612
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5612_call = mutated_mod.get_global_var('func_5612')
var_5614 = relay.var("var_5614", dtype = "float64", shape = (6, 10, 12))#candidate|5614|(6, 10, 12)|var|float64
var_5615 = relay.var("var_5615", dtype = "float64", shape = (6, 10, 12))#candidate|5615|(6, 10, 12)|var|float64
var_5616 = relay.var("var_5616", dtype = "int8", shape = ())#candidate|5616|()|var|int8
call_5613 = func_5612_call(var_5614,var_5615,var_5616,)
output = call_5613
func_5617 = relay.Function([var_5614,var_5615,var_5616,], output)
mutated_mod['func_5617'] = func_5617
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4613_call = mod.get_global_var('func_4613')
func_4614_call = mutated_mod.get_global_var('func_4614')
call_5640 = func_4613_call()
call_5641 = func_4613_call()
output = call_5640
output2 = call_5641
func_5650 = relay.Function([], output)
mod['func_5650'] = func_5650
mod = relay.transform.InferType()(mod)
mutated_mod['func_5650'] = func_5650
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5650_call = mutated_mod.get_global_var('func_5650')
call_5651 = func_5650_call()
output = call_5651
func_5652 = relay.Function([], output)
mutated_mod['func_5652'] = func_5652
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5050_call = mod.get_global_var('func_5050')
func_5051_call = mutated_mod.get_global_var('func_5051')
call_5653 = relay.TupleGetItem(func_5050_call(), 1)
call_5654 = relay.TupleGetItem(func_5051_call(), 1)
output = call_5653
output2 = call_5654
func_5655 = relay.Function([], output)
mod['func_5655'] = func_5655
mod = relay.transform.InferType()(mod)
output = func_5655()
func_5656 = relay.Function([], output)
mutated_mod['func_5656'] = func_5656
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4775_call = mod.get_global_var('func_4775')
func_4777_call = mutated_mod.get_global_var('func_4777')
call_5668 = relay.TupleGetItem(func_4775_call(), 0)
call_5669 = relay.TupleGetItem(func_4777_call(), 0)
func_5396_call = mod.get_global_var('func_5396')
func_5399_call = mutated_mod.get_global_var('func_5399')
const_5672 = relay.const([5.930349,-3.022397,5.767006,-0.995128,3.543026,-4.209400,-9.223462,9.623785,0.932651,5.949195,-5.125481,-8.895220,2.162403,9.109682,-5.952603,1.821448,-3.852353,-8.275249,7.958844,3.412900,1.732459,-3.829417,4.573682,-0.082566,-9.796205,-6.776959,-4.417361,4.304469,-6.654118,-0.926427,0.421254,-1.060438,-2.781989,0.907823,-9.199613,-3.560174,-7.249890,2.912545,0.563000,-9.017839,-2.068858,-1.907187,8.604956,-1.364498,-8.406994,0.966970,-8.938892,7.407877,-3.508551,-7.488200,5.593524,-1.140856,9.808612,-4.906424,3.950627,0.728693,1.702021,-9.202774,7.145841,-8.940897,-6.129912,7.031893,-5.317606,5.892578,-4.227413,1.409366,-8.321000,7.043928,3.340733,-9.020527], dtype = "float32")#candidate|5672|(70,)|const|float32
call_5671 = func_5396_call(relay.reshape(const_5672.astype('float32'), [5, 1, 14]))
call_5673 = func_5396_call(relay.reshape(const_5672.astype('float32'), [5, 1, 14]))
output = relay.Tuple([call_5668,call_5671,const_5672,])
output2 = relay.Tuple([call_5669,call_5673,const_5672,])
func_5676 = relay.Function([], output)
mod['func_5676'] = func_5676
mod = relay.transform.InferType()(mod)
output = func_5676()
func_5677 = relay.Function([], output)
mutated_mod['func_5677'] = func_5677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5050_call = mod.get_global_var('func_5050')
func_5051_call = mutated_mod.get_global_var('func_5051')
call_5680 = relay.TupleGetItem(func_5050_call(), 0)
call_5681 = relay.TupleGetItem(func_5051_call(), 0)
func_5655_call = mod.get_global_var('func_5655')
func_5656_call = mutated_mod.get_global_var('func_5656')
call_5691 = func_5655_call()
call_5692 = func_5655_call()
output = relay.Tuple([call_5680,call_5691,])
output2 = relay.Tuple([call_5681,call_5692,])
func_5698 = relay.Function([], output)
mod['func_5698'] = func_5698
mod = relay.transform.InferType()(mod)
output = func_5698()
func_5699 = relay.Function([], output)
mutated_mod['func_5699'] = func_5699
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4016_call = mod.get_global_var('func_4016')
func_4018_call = mutated_mod.get_global_var('func_4018')
call_5719 = relay.TupleGetItem(func_4016_call(), 0)
call_5720 = relay.TupleGetItem(func_4018_call(), 0)
const_5728 = relay.const([[[1.296483,-7.852625,-2.341876],[4.070765,-0.107977,-5.795495],[-7.422507,6.991077,1.591253],[-0.660798,-9.380617,-2.455368],[-7.216658,-1.564324,-7.198899],[2.173416,-3.969432,-9.217240],[-5.397624,8.848660,-7.550516]],[[7.965491,-5.447163,6.459272],[4.506611,-2.840156,9.510869],[-6.601512,7.100014,-0.815405],[-4.765273,2.538135,6.841562],[0.396749,2.999063,-7.241452],[-7.286200,-4.352618,-3.545090],[0.772689,2.939465,9.664781]],[[-2.020488,-1.672506,2.757155],[3.341129,4.987027,-8.042054],[5.694277,-7.486545,-6.979189],[-4.615637,-1.504341,-5.036298],[-8.358033,-2.008724,8.227385],[9.765245,4.997039,0.769469],[-5.263777,3.030725,3.765411]],[[-2.358531,3.819276,3.615503],[-2.062784,3.636517,2.290590],[4.873038,3.346912,1.363875],[-3.745025,-8.522390,8.241204],[-6.306717,8.937653,1.648524],[5.017740,1.308147,-6.092461],[-5.136733,-2.933821,7.158835]],[[4.404064,-1.390754,3.402482],[-6.819825,-6.560636,4.741579],[-3.786887,4.051408,3.020224],[7.183679,-4.119925,-9.848684],[5.522049,5.479420,-0.462173],[2.442455,-0.663760,-5.908812],[-6.601052,5.003650,0.723682]],[[-2.904487,-1.893639,3.163755],[-0.167152,-2.508957,0.807548],[7.696945,3.737460,2.526645],[4.869588,-0.164827,-6.645306],[3.346316,3.378644,7.572664],[-0.808678,-5.615644,6.319608],[-8.551038,-7.953986,-0.803694]],[[3.627967,6.717561,9.483941],[-1.474608,4.789199,-0.021430],[9.549610,-0.806131,-0.445957],[-0.467824,5.068887,1.652350],[-7.050106,-3.074854,-8.706580],[5.145403,-6.230617,-1.459517],[8.716336,6.965789,0.910585]],[[-2.398827,5.646636,8.390073],[-3.624728,-5.122105,2.863688],[-1.953497,-4.149357,-5.356109],[3.769632,-9.162373,-6.195949],[2.780443,-9.826403,6.657002],[-8.285843,-2.625631,-2.195924],[6.593695,1.046080,3.307972]],[[6.268828,3.081232,-6.087313],[-7.542830,9.945483,-3.515927],[-5.643820,0.719655,-5.100884],[-1.540479,-6.827854,-4.220417],[2.015703,4.645546,-0.553870],[5.604445,-9.027065,7.204455],[-8.796300,-4.835737,-9.418118]],[[-1.683987,8.533203,8.129487],[-6.961873,-7.432055,1.686367],[9.135939,6.203939,9.740682],[5.420660,2.096543,0.095301],[0.944560,0.441773,6.304164],[-1.463689,-0.830104,7.724630],[0.074245,3.051351,-7.628575]],[[-6.818713,5.509489,-7.281267],[3.059200,9.827646,9.106448],[8.550768,6.836395,4.609907],[0.648672,-4.492432,3.561824],[3.158256,5.971998,-3.932490],[1.221316,5.482729,-9.206441],[-6.831651,-0.031219,2.265280]],[[-5.138550,-7.758857,1.121430],[9.369689,7.155082,-2.645349],[0.737088,2.064535,-0.094366],[4.253014,-9.036746,4.471486],[-9.328156,9.932294,8.863438],[8.304800,2.186697,9.802188],[5.314930,6.294144,-7.900356]],[[5.806356,-3.593553,-0.198275],[-9.268604,-3.489970,2.175254],[-5.023363,8.666019,-2.571514],[-4.546130,3.333419,7.713825],[-4.815412,5.769748,8.122046],[9.007387,5.744851,6.985885],[-4.409673,0.840577,-2.165860]],[[-6.743747,8.364160,-5.696692],[0.552853,3.338661,8.709476],[2.680446,6.190780,0.812609],[3.469944,8.625442,-2.364342],[-6.738465,-2.651091,-2.022094],[-5.676965,6.368587,-4.674587],[4.931576,-3.217008,-5.809569]]], dtype = "float32")#candidate|5728|(14, 7, 3)|const|float32
bop_5729 = relay.not_equal(call_5719.astype('bool'), relay.reshape(const_5728.astype('bool'), relay.shape_of(call_5719))) # shape=(14, 7, 3)
bop_5732 = relay.not_equal(call_5720.astype('bool'), relay.reshape(const_5728.astype('bool'), relay.shape_of(call_5720))) # shape=(14, 7, 3)
func_4613_call = mod.get_global_var('func_4613')
func_4614_call = mutated_mod.get_global_var('func_4614')
call_5742 = func_4613_call()
call_5743 = func_4613_call()
output = relay.Tuple([bop_5729,call_5742,])
output2 = relay.Tuple([bop_5732,call_5743,])
func_5748 = relay.Function([], output)
mod['func_5748'] = func_5748
mod = relay.transform.InferType()(mod)
mutated_mod['func_5748'] = func_5748
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5748_call = mutated_mod.get_global_var('func_5748')
call_5749 = func_5748_call()
output = call_5749
func_5750 = relay.Function([], output)
mutated_mod['func_5750'] = func_5750
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5751 = relay.var("var_5751", dtype = "float64", shape = (8, 4, 5))#candidate|5751|(8, 4, 5)|var|float64
uop_5752 = relay.sqrt(var_5751.astype('float64')) # shape=(8, 4, 5)
output = relay.Tuple([uop_5752,])
output2 = relay.Tuple([uop_5752,])
func_5769 = relay.Function([var_5751,], output)
mod['func_5769'] = func_5769
mod = relay.transform.InferType()(mod)
mutated_mod['func_5769'] = func_5769
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5770 = relay.var("var_5770", dtype = "float64", shape = (8, 4, 5))#candidate|5770|(8, 4, 5)|var|float64
func_5769_call = mutated_mod.get_global_var('func_5769')
call_5771 = func_5769_call(var_5770)
output = call_5771
func_5772 = relay.Function([var_5770], output)
mutated_mod['func_5772'] = func_5772
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5273_call = mod.get_global_var('func_5273')
func_5274_call = mutated_mod.get_global_var('func_5274')
call_5874 = relay.TupleGetItem(func_5273_call(), 0)
call_5875 = relay.TupleGetItem(func_5274_call(), 0)
func_5650_call = mod.get_global_var('func_5650')
func_5652_call = mutated_mod.get_global_var('func_5652')
call_5898 = func_5650_call()
call_5899 = func_5650_call()
func_5396_call = mod.get_global_var('func_5396')
func_5399_call = mutated_mod.get_global_var('func_5399')
const_5903 = relay.const([2.757361,-3.127187,9.876695,8.275912,2.075841,8.557951,4.084239,8.220755,0.101444,5.860707,-5.844834,5.289142,8.186591,9.589413,-1.292811,4.513496,-8.204717,5.875913,9.547438,-3.153628,-0.035206,0.835727,-2.292645,-7.217152,-4.626692,7.342388,9.202315,-0.199424,4.971374,8.066898,3.699496,9.682046,-9.295359,1.120151,7.302843,-0.385396,4.259825,-9.316332,-6.257603,-8.620888,-7.663813,-7.085596,-9.396213,-3.548625,-9.139773,-7.803536,-3.224005,9.876461,-3.066269,-1.544948,6.016346,0.859773,-7.157102,-1.935234,8.452504,5.402161,-0.313595,2.529928,-5.526258,-8.433070,-8.022041,-9.127301,-3.400459,7.132031,-0.323480,1.366348,6.658954,5.067926,-2.630822,-8.131572], dtype = "float32")#candidate|5903|(70,)|const|float32
call_5902 = func_5396_call(relay.reshape(const_5903.astype('float32'), [5, 1, 14]))
call_5904 = func_5396_call(relay.reshape(const_5903.astype('float32'), [5, 1, 14]))
func_1872_call = mod.get_global_var('func_1872')
func_1877_call = mutated_mod.get_global_var('func_1877')
const_5906 = relay.const([[-3.802095,7.860667,7.355084,-2.932845,0.488990,0.628896,-4.156299,-0.086211,-5.155252,-5.154087,4.949055,-5.268537,0.012282,-2.676573,8.590595,-8.853014,-6.482281,3.088397,-1.517680,0.917944,1.406934,-1.064749,2.140407,-7.331223,-7.042056,-5.028008,-6.555344,-7.048562,2.095731,4.640018,-2.607023,-0.345509,9.294194,0.082529,0.896851,6.464708,8.555475,6.713184,8.275308,7.712764,-6.041180,4.226583,-9.747079,-9.524810,-7.936350,-3.927814,3.805311,9.807451,-3.531655,5.701232,-6.133705,-0.788416,-2.652319,-0.563384,3.222054,7.094899,-4.912244,-0.163852,4.920490,-8.401448]], dtype = "float64")#candidate|5906|(1, 60)|const|float64
var_5907 = relay.var("var_5907", dtype = "int8", shape = ())#candidate|5907|()|var|int8
var_5908 = relay.var("var_5908", dtype = "float32", shape = (154,))#candidate|5908|(154,)|var|float32
const_5909 = relay.const([2,-1,3,5,8,9,5,1,-4,-1,3,-5,-9,2,-6,10,-10,2,2,7,1,10,-6,10,-5,8,-6,7,-1,3,-9,-5,6,4,5,6,9,-3,-10,-5,-5,5,8,-9,2,-8,6,1,1,8,9,3,3,-3,1,7,2,7,5,-1,-9,9,-2,-5,-8,-10,-10,-4,-3,3,-6,-9,-4,8,-4,6,10,7,6,7,-7,-10,2,-10,-5,-8,-5,9,3,9,-8,1,2,10,-1,1,-3,-5,-9,7,-9,-4,2,-4,-1,-4,-9,5,-2,9,-1,1,5,7,2,7,1,-6,3,7,6,-2,-6,-8,3,2,-10,-6,-1,-9,8,-6,5,1,-5,-3,2,8,6,8,3,-3,-5,10,-3,2,-4,10,2,1,-2,8,2,1,2,-7,-1,2,9,-5,2,4,4,7,-5,-3,5,-8,7,-4,1,6,10,-10,-9,-1,-2,6,9,4,-6,-9,-10,7,-8,-8,2,5,-9,3,1,8,-9,9,-10,9,10,4,-7,-9,1,6,-9,-7,7,6,-4,-9,-9,-10,-9,-4,9,1,10,-10,5,-6,6,-5,-3,-9,7,9,-6,6,10,-8,-9,-2,7,4,8,8,-5,-7,6,-3,-5,9,-1,-1,-5,9,-6,-7,-3,-6,-2,6,-9,-4,-10,8,-1,-9,3,5,-8,4,-5,8,-3,-8,-1,2,7,5,-5,5,1,2,5,-4,2,-7,-10,-7,-1,7,9,-10,-7,6,-9,10,6,-5,-9,-1,6,10,-5,8,1,-8,5,9,-4,-4,7,-2,-5,-3,6,5,-4,-6,1,-4,9,5,9,-6,10,-5,-5,1,4,4,7,-1,-6,9,3,2,-7,-6,10,1,-5,10,-5,-9,2,-10,7,-10,-8,-2,4,3,-2,10,-2,-3,-9,-6,-1,-3,10,-4,3,-10,2,-2,-8,10,3,-2,-10,3,-8,-2,-7,6,8,-4,1,-4,8,9,-10,-5,-8,-1,4,8,4,-2,6,-10,-5,7,-10,1,6,5,-1,-2,-9,-9,-6,6,-10,-3,-6,3,7,9,1,-7,-10,-5,-7,1,-8,1,-9,6,-5,6,-1,-3,8,-8,-10,6,-1,2,-5,-6,-3,-9,-5,-10,5,10,-4,6,4,1,-1,5,-5,10,10,-3,4,-7,-8,-9,-4,8,-1,10,-8,-9,-7,1,-1,-1,8,6,-7,-10,2,5,8,6,8,7,6,-5,10,4,-8,2,9,7,-3,-9,6,-10,7,-6,-1,-1,8,-1,-1,-8,10,-2,-2,-2,-7,1,-5,8,7,7,6,9,3,10,5,-2,2,3,-4,-8,-6,-2,9,2,-3,-8,-6,-3,-6,-2,3,-7,7,-8,5,-10,6,-1,-4,-5,-2,8,-9,-5,-5,8,-1,4,7,9,-9,-4,-4,2,-7,-7,-9,7,7,2,10,-10,9,9,6,-9,-8,2,7,10,-2,-1,5,8,9,-3,-2,-10,-9,-6,-6,3,-7,7,-10,7,5,4,7,1,-4,7,-9,8,5,-4,10,-8,-2,-2,-2,-8,-1,9,6,4,-6,7,-9,7,10,6,9,-10,8,7,3,1,8,1,-1,4,-7,5,6,9,-3,8,10,-7,2,-2,-9,-10,-4,1,-8,-3,3,-1,1,-7,-9,-10,-4,9,1,4,6,-7,7,-8,-10,-9,10,-4,-2,-7,7,-9,-4,-9,-4,5,9,2,7,-8,-10,3,-9,-3,9,3,7,9,2,6,-2,-8,2,-4,2,7,-1,4,-7,-2,-8,4,-6,-9,-2,-6,8,5,6,9,5,1,-6,7,-3,10,3,1,7,-8,6,5,-8,2,-2,-1,6,-5,7,6,1,3,9,1,-3,7,3,-3,-2,4,-7,3,4,-6,9,3,7,2,-8,-4,-4,-2,2,-7,-2,10,-5,-5,-10,2,-10,-9,-8,2,6,9,-6,-8,-8,-3,-5,2,-6,8,7,-7,-2,-5,-9,-8,-3,-4,10,7,6,-8,3,-2,-8,-6,10,-3,2,-7,-7,6,2,10,2,9,7,1,-9,10,-3,4,2,10,-7,2,1,-5,8,6,5,9,3,4,5,9,10,3,-1,3,9,-2,-3,-3,2,-2,3,9,-3,9,-6,-8,-4,-10,4,-2,1,1,-3,-7,-4,-2,-2,4,-5,-5,-3,-9,4,1,3,10,9,7,6,7,-3,-6,3,2,4,10,2,4,9,3,3,5,5,-4,-8,-10,3,7,7,-3,-9,-10,-2,-7,2,-2,-3,6,3,-8,4,-1,7,2,-7,7,-8,7,3,-9,-5,-1,2,-6,-1,3,6,4,-1,-7,1,-6,-3,7,6,3,10,10,3,-6,-2,-2,4,2,-2,6,3,2,-5,-1,6,-2,10,-10,-10,9,-9,2,7,-3,-3,10,-10,-1,3,8,8,8,4,2,8,5,4,-3,1,10,6,1,4,3,-6,7,-2,5,-6,-7,-10,-2,-10,-7,-2,7,9,-5,10,2,-10,-1,5,8,2,-6,10,9,4,2,-5,7,7,-8,-2,4,-9,-6,-2,8,4,8,-1,-5,-5,4,-6,-3,-2,1,-9,-10,9,-7,-2,6,-6,-9,1,5,-1,-3,9,-1,7,9,-6,-6,-4,-7,-7,-2,7,-1,3,6,6,-2,-7,8,-6,10,5,-8,-1,5,10,-3,9,9,2,8,5,3,-5,-6,7,5,-5,10,2,8,-3,10,4,3,-5,6,-1,3,-9,8,-8,9,-6,3,-6,-9,-9,2,10,-3,-8,-4,7,6,-8,-1,7,-2,-3,-10,-4,-10,10,10,7,5,-2,4,-8,-5,-5,7,-8,-7,-3,-10,8,2,9,-9,9,2,7,-1,8,-5,2,-5,8,3,-10,8,2,7,-6,-10,4,-6,-9,8,-3,-10,-3,-9,-8,-2,-5,8,4,1,-6,5,-4,-1,-10,-10,-1,9,-9,5,-1,8,9,5,1,-5,8,7,3,-7,-8,-5,9,-5,10,-6,6,7,9,-1,8,9,8,-8,-5,-3,3,-6,-9,1,-8,10,-2,-3,9,-1,-2,4,6,8,-8,8,8,-4,-4,8,-3,-8,-7,5,-5,-6,-7,-6,2,-8,-6,2,10,-10,-2,-6,9,1,5,6,4,-8,2,-8,7,-7,-2,-6,6,7,-8,-4,-9,7,-2,-7,-4,-7,-8,-1,1,-9,-8,5,2,-3,-7,9,3,-1,8,-1,-2,9,5,4,-9,-9,7,-4,-6,-1,-5,10,-6,-4,6,7,4,-7,-7,5,3,4,7,-10,6,-7,-2,2,7,-4,-9,-2,-8,-4,-9,10,2,-1,3,-2,-3,-1,-6,-6,-9,8,3,3,-9,4,-5,-10,-10,3,-4,-4,4,5,8,-4,4,-5,2,-6,-4,-10,7,-5,5,-10,-3,-8,-10,8,4,7,6,3,-1,-10,1,5,4,-7,-7,5,-3,-8,6,3,2,10,-3,7,-3,-10,-8,4,-4,-8,10,-3,-10,6,-9,-8,8,-8,-10,-6,1,-9,10,1,-6,4,-6,-7,-10,-2,1,-9,-7,-1,-9,2,-2,8,-6,-5,-10,8,-8,2,-9,6,-6,10,-9,2,9,-7,-7,-10,-6,7,6,3,4,1,-2,5,1,3,6,7,1,6,-8,3,3,-9,-7,4,-10,5,3,3,-5,1,4,-9,-1,5,3,-3,-7,-5,7,-6,-6,2,-10,1,-1,-9,2,2,-10,3,4,-10,-2,-5,-8,-7,-1,4,-2,-9,9,10,3,-5,6,8,5,10,7,-6,6,7,-2,1,6,-9,-5,6,-10,2,-6,7,-10,-9,-2,-10,-10,-8,-10,8,-8,-10,-7,-2,5,4,-4,-7,8,1,-2,-2,10,5,-10,5,-2,-2,3,-6,8,4,-1,-8,6,10,-10,8,-2,-9,8,10,-1,10,6,4,8,-10,8,9,-9,10,3,1,-5,-10,6,-4,4,-3,-4,8,5,-2,-8,-7,-1,-6,6,-4,10,5,-3,5,7,-10,6,-2,6,6,-6,-10,-1,-3,-6,10,-10,5,4,-5,-9,1,-4,6,8,3,6,-2,2,4,4,-7,6,10,-2,-2,-9,-4,-7,-3,4,-10,-3,-7,-2,4,-2,-10,3,-2,-6,-3,7,-10,-10,1,10,6,6,10,-4,-3,7,9,-5,4,5,-8,7,-9,10,-4,-3,-6,4,8,2,6,-7,9,4,-5,5,1,1,2,2,-4,6,6,5,8,5,7,1,-4,-3,5,-4,9,-8,7,-7,-5,-10,-1,-6,2,-6,-3,-5,1,-10,6,-3,-7,8,-1,4,5,8,9,-8,-5,-8,-9,-7,-2,7,1,5,-10,-4,5,6,2,-10,8,-9,-2,1,-3,4,-7,3,8,8,10,-7,-9,-7,-9,-1,-4,-9,-1,-10,1], dtype = "uint64")#candidate|5909|(1664,)|const|uint64
call_5905 = relay.TupleGetItem(func_1872_call(relay.reshape(const_5906.astype('float64'), [60,]), relay.reshape(var_5907.astype('int8'), []), relay.reshape(var_5908.astype('float32'), [154,]), relay.reshape(const_5909.astype('uint64'), [1664,]), ), 9)
call_5910 = relay.TupleGetItem(func_1877_call(relay.reshape(const_5906.astype('float64'), [60,]), relay.reshape(var_5907.astype('int8'), []), relay.reshape(var_5908.astype('float32'), [154,]), relay.reshape(const_5909.astype('uint64'), [1664,]), ), 9)
func_1872_call = mod.get_global_var('func_1872')
func_1877_call = mutated_mod.get_global_var('func_1877')
call_5911 = relay.TupleGetItem(func_1872_call(relay.reshape(const_5906.astype('float64'), [60,]), relay.reshape(var_5907.astype('int8'), []), relay.reshape(var_5908.astype('float32'), [154,]), relay.reshape(const_5909.astype('uint64'), [1664,]), ), 1)
call_5912 = relay.TupleGetItem(func_1877_call(relay.reshape(const_5906.astype('float64'), [60,]), relay.reshape(var_5907.astype('int8'), []), relay.reshape(var_5908.astype('float32'), [154,]), relay.reshape(const_5909.astype('uint64'), [1664,]), ), 1)
output = relay.Tuple([call_5874,call_5898,call_5902,const_5903,call_5905,const_5906,var_5907,var_5908,const_5909,call_5911,])
output2 = relay.Tuple([call_5875,call_5899,call_5904,const_5903,call_5910,const_5906,var_5907,var_5908,const_5909,call_5912,])
func_5913 = relay.Function([var_5907,var_5908,], output)
mod['func_5913'] = func_5913
mod = relay.transform.InferType()(mod)
mutated_mod['func_5913'] = func_5913
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5913_call = mutated_mod.get_global_var('func_5913')
var_5915 = relay.var("var_5915", dtype = "int8", shape = ())#candidate|5915|()|var|int8
var_5916 = relay.var("var_5916", dtype = "float32", shape = (154,))#candidate|5916|(154,)|var|float32
call_5914 = func_5913_call(var_5915,var_5916,)
output = call_5914
func_5917 = relay.Function([var_5915,var_5916,], output)
mutated_mod['func_5917'] = func_5917
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5050_call = mod.get_global_var('func_5050')
func_5051_call = mutated_mod.get_global_var('func_5051')
call_5919 = relay.TupleGetItem(func_5050_call(), 0)
call_5920 = relay.TupleGetItem(func_5051_call(), 0)
output = relay.Tuple([call_5919,])
output2 = relay.Tuple([call_5920,])
func_5938 = relay.Function([], output)
mod['func_5938'] = func_5938
mod = relay.transform.InferType()(mod)
mutated_mod['func_5938'] = func_5938
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5938_call = mutated_mod.get_global_var('func_5938')
call_5939 = func_5938_call()
output = call_5939
func_5940 = relay.Function([], output)
mutated_mod['func_5940'] = func_5940
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5952 = relay.var("var_5952", dtype = "uint8", shape = (8, 12, 16))#candidate|5952|(8, 12, 16)|var|uint8
var_5953 = relay.var("var_5953", dtype = "uint8", shape = (8, 12, 16))#candidate|5953|(8, 12, 16)|var|uint8
bop_5954 = relay.maximum(var_5952.astype('uint8'), relay.reshape(var_5953.astype('uint8'), relay.shape_of(var_5952))) # shape=(8, 12, 16)
func_2414_call = mod.get_global_var('func_2414')
func_2421_call = mutated_mod.get_global_var('func_2421')
var_5962 = relay.var("var_5962", dtype = "uint8", shape = (252,))#candidate|5962|(252,)|var|uint8
var_5963 = relay.var("var_5963", dtype = "float64", shape = (60,))#candidate|5963|(60,)|var|float64
var_5964 = relay.var("var_5964", dtype = "float32", shape = (154,))#candidate|5964|(154,)|var|float32
var_5965 = relay.var("var_5965", dtype = "uint64", shape = (1, 1664))#candidate|5965|(1, 1664)|var|uint64
var_5966 = relay.var("var_5966", dtype = "int32", shape = (5,))#candidate|5966|(5,)|var|int32
const_5967 = relay.const([1,-5,5,-2,2,-3,9,-8,-1,7,-3,-2,1,-2,-6,9,-9,2,10,8,-2,-8,10,5,4,1,6,4,-9,10,7,3,-6,4,8,7,-3,-10,-4,4,10,-5,3,6,8,-9,5,-3,-4,-6,-6,-2,-9,-2,9,1,3,8,7,-10,-9,-10,-1,-7,9,-7,8,6,2,-2,-5,-10,1,6,1,-3,-5,9,7,2,1,2,1,-1,-5,-5,6,-9,-3,-4,-3,9,1,5,-3,-3,6,-8,-3,-9,-1,-9,10,-1,4,-1,2,4,-7,-3,-6,7,-2,-1,3,5,4,1,1,9,9,10,-10,-7,5,-7,6,5,10,-7,3,9,4,-3,3,-10,-4,4,-7,10,2,-5,3,10,-3,6,-9,-7,-6,7,4,2,10,-1,10,10,-9,2,-6,-5,9,7,10,-10,4,-6,5,-6,7,-3,-7,8,-2,9,-3,7,10,10,9,6], dtype = "uint16")#candidate|5967|(180,)|const|uint16
call_5961 = relay.TupleGetItem(func_2414_call(relay.reshape(var_5962.astype('uint8'), [3, 6, 14]), relay.reshape(var_5963.astype('float64'), [60,]), relay.reshape(var_5964.astype('float32'), [154,]), relay.reshape(var_5965.astype('uint64'), [1664,]), relay.reshape(var_5966.astype('int32'), [5,]), relay.reshape(const_5967.astype('uint16'), [180,]), ), 7)
call_5968 = relay.TupleGetItem(func_2421_call(relay.reshape(var_5962.astype('uint8'), [3, 6, 14]), relay.reshape(var_5963.astype('float64'), [60,]), relay.reshape(var_5964.astype('float32'), [154,]), relay.reshape(var_5965.astype('uint64'), [1664,]), relay.reshape(var_5966.astype('int32'), [5,]), relay.reshape(const_5967.astype('uint16'), [180,]), ), 7)
func_4858_call = mod.get_global_var('func_4858')
func_4862_call = mutated_mod.get_global_var('func_4862')
const_5974 = relay.const(-1, dtype = "int8")#candidate|5974|()|const|int8
call_5973 = relay.TupleGetItem(func_4858_call(relay.reshape(const_5974.astype('int8'), []), relay.reshape(var_5964.astype('float32'), [154,]), relay.reshape(var_5965.astype('uint64'), [1664,]), ), 3)
call_5975 = relay.TupleGetItem(func_4862_call(relay.reshape(const_5974.astype('int8'), []), relay.reshape(var_5964.astype('float32'), [154,]), relay.reshape(var_5965.astype('uint64'), [1664,]), ), 3)
output = relay.Tuple([bop_5954,call_5961,var_5962,var_5963,var_5964,var_5965,var_5966,const_5967,call_5973,const_5974,])
output2 = relay.Tuple([bop_5954,call_5968,var_5962,var_5963,var_5964,var_5965,var_5966,const_5967,call_5975,const_5974,])
func_5980 = relay.Function([var_5952,var_5953,var_5962,var_5963,var_5964,var_5965,var_5966,], output)
mod['func_5980'] = func_5980
mod = relay.transform.InferType()(mod)
mutated_mod['func_5980'] = func_5980
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5980_call = mutated_mod.get_global_var('func_5980')
var_5982 = relay.var("var_5982", dtype = "uint8", shape = (8, 12, 16))#candidate|5982|(8, 12, 16)|var|uint8
var_5983 = relay.var("var_5983", dtype = "uint8", shape = (8, 12, 16))#candidate|5983|(8, 12, 16)|var|uint8
var_5984 = relay.var("var_5984", dtype = "uint8", shape = (252,))#candidate|5984|(252,)|var|uint8
var_5985 = relay.var("var_5985", dtype = "float64", shape = (60,))#candidate|5985|(60,)|var|float64
var_5986 = relay.var("var_5986", dtype = "float32", shape = (154,))#candidate|5986|(154,)|var|float32
var_5987 = relay.var("var_5987", dtype = "uint64", shape = (1, 1664))#candidate|5987|(1, 1664)|var|uint64
var_5988 = relay.var("var_5988", dtype = "int32", shape = (5,))#candidate|5988|(5,)|var|int32
call_5981 = func_5980_call(var_5982,var_5983,var_5984,var_5985,var_5986,var_5987,var_5988,)
output = call_5981
func_5989 = relay.Function([var_5982,var_5983,var_5984,var_5985,var_5986,var_5987,var_5988,], output)
mutated_mod['func_5989'] = func_5989
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5050_call = mod.get_global_var('func_5050')
func_5051_call = mutated_mod.get_global_var('func_5051')
call_6003 = relay.TupleGetItem(func_5050_call(), 1)
call_6004 = relay.TupleGetItem(func_5051_call(), 1)
func_1737_call = mod.get_global_var('func_1737')
func_1743_call = mutated_mod.get_global_var('func_1743')
const_6011 = relay.const([-9,-2,6,4,3,-10,-3,-10,-9,8,5,4,-10,-4,-2,-1,-8,7,-2,-5,-10,2,9,-4,-6,-10,2,-10,-4,-5,3,-7,-10,6,-5,7,-6,-9,-2,5,5,9,-9,2,-7,-10,-3,-1,3,-7,8,4,-4,1,5,-1,1,-10,3,4,8,-10,4,4,-1,-6,4,5,4,-3,1,-1,-6,-1,-2,-10,-2,1,-4,-3,-5,-5,10,8,-7,-5,5,-9,7,-3,-6,1,-3,-3,-7,-3,-7,5,10,3,4,-6,-4,-1,6,3,-7,9,7,1,10,10,4,-5,1,-4,6,4,-4,4,-9,1,1,7,3,6,4,9,1,4,1,-7,-5,-10,7,8,-1,3,-8,2,10,5,3,-2,9,8,-2,-1,-7,-10,3,2,5,-7,-10,6,-8,6,6,-10,3,-7,5,6,8,-8,-1,6,8,1,-6,-9,-10,10,10,1,9,10,5,-10,9,-6,10,8,-7,7,-8,10,9,1,1,5,-9,6,1,9,-3,2,-6,1,-1,-9,-3,6,10,-5,1,-10,7,6,-1,-7,9,8,-10,-9,7,10,8,4,-3,-8,1,5,-4,-5,6,-9,-3,-10,-6,-4,8,3,-9,-5,-7,9,1,-5,8,9,-4,-1,-5,-2,2,2,-1,8,-5,6,-6,-2,-2,-3,9,-4,-10,1,-6,6,10,-7,-4,-3,-6,3,-6,10,-1,8,-4,-4,7,-2,8,-10,8,9,10,3,3,-1,-10,-8,-1,3,-9,2,2,-7,-3,-7,4,-5,10,-2,5,-3,-4,7,7,3,-5,-10,-10,-7,5,6,-2,4,10,-6,-9,9,1,-1,4,-2,10,7,-8,2,10,3,-8,7,-2,2,-3,-7,7,-3,-1,-1,5,-10,6,-8,-2,2,5,10,2,1,3,2,-7,8,-7,10,10,-9,-5,-3,-6,-9,-4,-2,-10,-6,2,-10,2,-8,8,-5,9,-7,8,3,4,-9,-10,-7,-4,1,10,9,-1,2,-7,10,-8,-2,6,2,-7,2,-2,8,-1,-5,10,2,-1,3,-1,3,9,-10,1,8,-5,-5,-9,-4,-10,3,3,5,2,-1,10,-6,9,7,8,-8,-8,-9,-4,9,-3,7,-10,1,10,-6,-4,-9,-8,5,-4,8,-5,-8,3,-4,10,4,6,1,-5,-4,1,6,-2,5,3,5,-10,1,-10,10,8,9,9,-8,1,5,-7,-1,-1,6,-8,6,-4,1,-1,6,-7,3,-7,2,5,9,-10,3,-5,-7,-10,2,7,-1,-6,-8,-2,-3,-4,-8,-4,-10,-9,6,-2,8,-6,-7,4,3,-3,-7,4,7,-4,-6,3,-1,-9,-6,-7,-2,-5,-8,-6,-2,-4,5,8,-5,-4,9,8,-10,6,-5,-2,-8,7,9,6,10,10,-7,7,1,6,-1,-9,-9,-8,-7,-3,-9,-10,-4,8,8,9,-6,-1,10,-8,-10,-1,-1,-5,-1,-5,1,-7,-4,8,2,-9,-6,9,6,6,-2,6,7,-4,-4,-9,6,1,-10,4,-8,2,3,-1,-9,-6,-7,-6,6,5,9,-8,-7,-7,-7,8,-3,-3,-4,-5,3,-5,4,7,1,3,-3,7,9,6,4,-3,-6,3,-1,4,8,6,-1,5,2,-4,-8,-6,4,2,6,6,2,-4,6,8,-7,9,7,10,3,-6,-4,7,-4,7,-4,6,10,10,-9], dtype = "int32")#candidate|6011|(648,)|const|int32
var_6012 = relay.var("var_6012", dtype = "float64", shape = (60,))#candidate|6012|(60,)|var|float64
const_6013 = relay.const(4, dtype = "int8")#candidate|6013|()|const|int8
const_6014 = relay.const([2.904784,2.575712,5.865505,3.332556,-2.258750,-6.633765,-6.267768,-0.096702,-8.672562,4.322743,-7.034058,-5.363262,-1.304751,7.490409,-8.085913,5.804713,-7.897168,9.323467,0.693076,0.011548,-4.519030,9.550289,-0.030049,-0.796205,-5.741040,-0.471761,8.685152,-8.017765,8.451668,2.243167,-5.122449,4.636708,-3.669090,8.378051,2.204604,4.495936,-8.341267,-5.276353,1.295176,-8.589913,3.065226,-9.295515,8.730449,-4.991369,-2.039588,-0.031821,-2.555416,0.671810,9.202966,-8.344658,-5.717606,-4.986808,-6.211750,7.736761,4.329324,-0.118405,9.969462,1.296880,0.458006,3.402361,-8.656284,-7.527627,0.015847,3.219690,-2.494307,-2.070716,0.881627,-7.903255,4.479116,2.551455,0.088699,1.067096,-2.272594,3.334660,-2.082269,-7.303126,1.353964,1.920599,-9.855627,4.686452,-9.441447,5.114148,-9.643740,-9.238324,-8.342321,-8.688705,6.185390,-4.550599,8.972085,4.397707,-5.757850,-6.106220,-1.958054,-0.104630,-5.568475,-3.906430,1.949786,-8.125360,2.637452,-6.786729,5.293908,5.025924,-2.264067,-2.904963,8.524035,-6.897053,9.956145,0.941623,-5.457006,0.037524,3.053029,-6.093805,2.900164,-6.084855,7.948406,-8.811552,-9.888884,9.464934,5.239552,-2.367907,8.089027,-7.436524,3.205456,-1.632102,-6.112138,-4.211119,0.808172,-5.465516,9.709106,5.209606,2.371084,8.081950,0.263223,6.775212,7.980466,-4.059244,-9.178423,9.405757,-0.546929,1.572103,1.445264,2.596653,-1.853676,-9.124832,-9.960197,-1.793379,6.555950,4.951162,-4.872681,-1.875473,-3.019371,-7.511826,0.726999,-1.595746], dtype = "float32")#candidate|6014|(154,)|const|float32
call_6010 = relay.TupleGetItem(func_1737_call(relay.reshape(const_6011.astype('int32'), [6, 9, 12]), relay.reshape(const_6011.astype('int32'), [6, 9, 12]), relay.reshape(var_6012.astype('float64'), [60,]), relay.reshape(const_6013.astype('int8'), []), relay.reshape(const_6014.astype('float32'), [154,]), ), 2)
call_6015 = relay.TupleGetItem(func_1743_call(relay.reshape(const_6011.astype('int32'), [6, 9, 12]), relay.reshape(const_6011.astype('int32'), [6, 9, 12]), relay.reshape(var_6012.astype('float64'), [60,]), relay.reshape(const_6013.astype('int8'), []), relay.reshape(const_6014.astype('float32'), [154,]), ), 2)
func_4103_call = mod.get_global_var('func_4103')
func_4110_call = mutated_mod.get_global_var('func_4110')
const_6025 = relay.const([7.248383,-7.743260,-8.203406,4.457508,5.080291,5.402624,-4.936491,-0.502242,-0.754382,3.698819,3.209003,-4.338521,3.147478,-7.158295,7.567801,-4.225797,-9.885467,-4.774988,-0.791439,-2.312419,-9.344548,1.054533,3.088355,-5.249513,9.397677,-9.239070,4.914848,-0.879119,9.780046,5.878041,0.784852,-1.133969,6.239512,4.504947,-4.914510,3.863157,2.809505,7.539318,6.141009,-3.216899,-9.623103,6.786754,7.956665,-3.450946,-9.940185,-8.895631,-4.864031,3.806089,5.066579,2.633974,2.649165,3.986130,2.822462,3.020440,-2.213757,5.912730,-3.064444,-6.236403,-7.599097,2.806635,8.280873,4.260841,-9.402728,0.735400,5.277360,5.229414,2.423912,6.149611,-3.012818,8.372867,7.157789,3.716732,6.841046,7.743780,-3.001746,-6.794464,-0.389917,8.244888,5.159082,4.873349,7.111618,5.306999,3.906009,2.060473,4.610597,-4.411181,4.049768,-8.782759,8.039666,2.732251,-4.892570,8.524129,9.164032,3.805349,3.208702,3.735016,-6.772773,-5.426515,6.264829,1.035601,-7.570786,0.034576,6.605655,6.558591,-4.727617,-8.399540,-0.447444,0.712306,1.959045,-0.752793,9.982877,3.991379,-5.509827,5.796441,-6.067107,-5.435690,-1.580722,-0.135385,-3.724075,9.146437,-8.508884,7.609544,0.552034,-0.227542,-5.816843,-8.708652,-8.700336,8.684209,2.633100,2.650835,4.118287,-4.283317,4.445104,9.017904,-4.200984,-6.282408,-2.641759,-2.930928,9.724710,-2.797775,9.437714,5.907696,5.897270,7.215740,-3.220613,-3.320128,-9.604668,2.511006,4.108474,3.760227,0.108345,9.184040,-3.621148,-6.950473,-8.448967,0.088424,3.426266,-5.315688,2.138984,7.000719,-1.938167,2.676176,-6.426446,-1.632961,0.342831,-5.700255,-7.061775,-5.609405,2.771838,-0.460662,-4.685804,5.674894,-6.351460,-2.984474,7.115159,5.269601,5.595524,0.108463,-4.156370,5.392092,9.586421,-9.977618,6.417977,-4.054938,6.920337,8.787130,-2.209218,1.111305,-1.571563,-3.350209,8.182392,3.965265,-5.263975,3.512162,-9.156185,-3.485804,-7.337733,3.932764,-8.110850,-4.112001,-8.423076,5.999408,-9.009782,-3.342171,-9.994245,6.995263,-7.466982,-5.768981,9.835200,0.335024,-9.710640,6.349678,1.164090,6.323226,2.234747,6.125460,7.133470,-4.972774,-9.182618,-0.840362,-6.898280,-9.326776,-7.781074,2.579827,-8.476709,0.405442,6.988801,9.317282,-4.587971,-1.839280,-3.976211,0.919606,-4.191914,-7.980941,-5.754404,1.581099,-3.686305,-5.821807,-3.846106,-5.537101,-8.230874,9.910040,-4.670159,-6.655310,8.045748,-0.474818,3.949515,1.059525,-9.353803,-7.756245,-2.495878,4.147017,5.729910,8.804623,8.971501,4.352416,-1.439731,2.867959,2.150272,2.279438,-1.408042,5.625132,1.597063,0.452233,-0.083524,4.485045,9.433068,9.121372,-1.347222,-1.302618,-9.878749,1.865795,5.624542,1.211507,3.433012,9.595808,1.717357,1.976573,-1.460515,-9.004605,-7.553453,3.535399,-8.752051,-8.477908,-5.716342,-8.456879,-4.980351,6.544078,3.135130,1.052297,0.560544,-5.362424,0.751997,5.974223,4.521165,-3.322807,8.775569,0.384066,-8.438267,-1.427731,9.082906,7.646592,7.841665,2.121531,7.352253,2.898867,1.385186,3.261223,7.818268,-2.392088,-2.877944,-6.835133,1.921180,4.117232,2.257406,-7.348440,6.084886,2.447390,-1.960379,0.529022,8.767783,-6.906193,-9.419698,9.595712,-2.684023,-5.756893,-1.362176,8.234653,0.623713,1.199973,-9.760517,2.338403,8.551738,-4.372681,7.149514,6.016247,-0.668240,3.101363,-3.962073,-4.859363,7.660091,9.057364,3.291252,0.221037,-9.911555,-0.783075,-5.508728,-0.899256,-4.561795,2.195377,-7.132425,-6.432014,-1.655036,8.606168,-8.342899,1.590024,4.679538,9.231990,9.988777,0.739335,5.692270,0.941235,1.487860,7.516189,-8.311683,4.046803,6.833225,-8.216478,3.888790,-3.258676,4.770263,7.806735,3.576822,-8.024355,8.393714,-0.119060,8.226535,-0.861469,7.263629,-2.642846,-7.672162,-7.732204,2.214328,5.941170,-6.719583,-9.509128,-0.871116,-6.454058,-4.765058,-3.142717,-5.514864,-0.675128,-4.637861,-3.638050,-3.501433,-2.310733,-9.151790,-3.874115,7.792263,6.923593,-1.923486,9.521804,4.906519,-0.686868,-3.174028,-0.028659,6.547039,-4.842406,0.253070,1.965645,0.864884,2.161965,-9.871071,2.514150,5.065542,2.594392,-7.783191,-1.945585,7.632618,8.826473,-5.526409,-4.870943,-2.356101,6.414980,-0.064868,4.513746,-4.395544,9.299413,1.488060,-2.987928,0.717597,-7.625899,0.980080,-0.102843,2.396163,-2.753255,6.909259,1.374447,-7.131938,8.555819,6.713910,-3.170196,5.791470,-0.859279,9.431051,-0.357629,-5.685201,-4.667978,0.742576,-9.319725,0.928337,-9.017679,-0.222465,-4.535529,7.865853,0.040633,1.787594,-3.888122,6.886636,1.783755,-0.612655,-6.247414,-9.234628,-2.886507,6.158390,-7.647993,4.625327,8.389921,-5.911229,-5.996429,3.053712,-2.511346,-1.080060,-3.293712,4.295065,-7.229943,3.171015,-8.944866,5.947107,7.664470,-4.051988,8.481080,1.018923,0.265629,9.334460,6.830145,5.832595,1.700578,-1.070152,4.466068,7.929624,6.948469,-0.818703,-7.873463,-7.892945,-8.749855,9.534214,4.116089,-7.206614,-9.032512,-4.719839,6.292735,9.659382,0.242622,-6.827122,1.346027,-2.454763,-6.114057,-2.843109,0.740497,-6.931973,7.317105,1.001318,-8.773279,1.638176,1.469383,-6.019778,2.818815,5.572595,-1.868789,-9.937630,0.254359,-4.103384,1.337165,-6.485484,-0.620576,6.764169,-3.728300,-7.190507,-6.186985,1.808369,4.535866,-7.186020,2.839934,-8.758537,8.139650,3.020280,8.521173,-1.006316,3.734245,0.513303,-7.581960,6.342267,-8.154218,5.485431,-7.577026,-6.607037,7.084390,-0.491869,2.419310,-2.021495,9.221234,8.265379,0.423545,-9.236122,6.875286,-5.631317,-3.234593,-5.763738,3.592137,1.984511,6.740587,-0.120987,1.550089,2.905417,1.798949,1.949845,-5.720305,6.049258,8.228179,-2.964818,-4.799336,-0.706117,-4.367360,5.764351,-4.738907,6.214775,-6.056764,-0.409387,5.650865,-5.571216,2.602649,2.552724,3.966032,-1.053496,-9.347568,0.532827,5.396452,5.662739,-7.176391,-6.424754,-7.272235,-1.596940,4.414488,-7.304949,8.475760,5.114096,-4.699580,-6.550915,9.005594,-8.076002,5.385065,-1.661959,7.340725,-7.422136,-9.756184,2.870926,3.616998,-0.906139,-1.072325,3.427001,5.322635,8.597842,7.944397,1.042540,-2.603972,1.585611,5.290868,-2.244891,2.965789,6.050922,8.721980,-3.018752,-8.972666,4.461340,6.824176,-5.082202,1.043034,2.489855,3.531381,-0.366723,-4.874407,8.939387,5.651335,0.005794,8.317520,1.910358,0.870401,2.378652,-3.223114,-6.540289,8.466523,-7.734016,-0.417536,0.730849,2.707098,2.221350,0.476721,0.822084,7.540034,-3.582941,3.450770,9.093337,4.193372,5.680568,-4.563597,-7.500291,-1.205122,-8.454736,-0.431914,9.366659,3.743451,6.684643,1.017795,-1.776329,4.025754,1.858322,-1.208994,7.874618,4.769831,4.248362,0.679494,9.052092,-3.814745,-7.225682,-8.576586,-7.998472,5.946520,-0.126164,7.998402,8.697587,5.589025,8.270966,0.421636,-8.883997,6.183610,-0.906145,3.146862,1.733920,-7.260187,-0.017761,7.532706,-8.554160,-6.884044,7.380576,8.725696,6.130859,-4.831579,-0.371269,3.586678,-6.930207,-1.995481,3.330274,5.847800,-0.612382,6.902182,-8.236910,8.768369,9.514962,0.993579,8.581647,1.785264,-4.461683,-8.066431,5.441959,9.642282,-0.494822,7.758565,6.741902,-3.959205,-5.888664,-7.011582,-4.191559,1.373085,5.124783,4.521634,-5.304861,5.172671,-0.928276,6.116568,-0.273318,4.746335,3.418637,-9.973278,8.355283,-5.036509,-9.497662,-6.418956,-1.455643,-1.467601,0.263101,1.187861,-8.979844,-2.799980,-4.882180,1.056439,-6.369562,8.317371,9.071735,-7.454884,7.573060,-1.687299,6.790230,-4.029703,-0.580611,0.528987,-9.255351,3.895009,-5.337516,2.426743,-2.783524,2.380193,-8.330242,-2.266573,-6.896785,-0.281512,5.822426,-3.069246,-8.755144,-1.740033,6.423088,-3.228751,-8.089550,4.705979,8.532185,8.894320,7.765284,-4.116593,-4.859554,1.758413,3.686514,-2.417380,-8.270284,2.639916,4.209052,5.698327,6.537499,2.487017,-4.890423,-8.182973,0.626225,9.529064,-8.794234,-7.826822,-3.820160,-6.664066,-3.435417,-4.583984,3.349427,8.848367,5.469249,3.935159,-9.002081,1.986236,5.877754,-7.911842,1.387924,2.224644,3.566771,-7.321614,8.691007,2.578413,1.010557,-5.310064,3.698490,-4.006174,4.866236,5.473860,-9.065571,-7.014162,5.984915,-3.835569,-4.076728,-5.278375,-3.963774,1.964766,9.860282,8.065563,-7.897683,4.808119,2.134605,-7.037627,-1.825946,-3.805223,-6.848348,-6.360692,3.409619,8.426510,2.834094,5.911559,-0.093890,9.491192,8.199359,8.373375,8.600949,4.786085,-9.648484,1.932169,6.742262,6.928733,-0.376017,4.356833,-8.835450,2.956795,2.379210,4.659696,5.328154,4.356357,3.704845,-9.853295,-6.504445,4.510096,8.403239,0.350979,-0.705183,1.868788,-6.720617,-4.398930,6.840997,-2.346744,-4.011334,-4.862927,8.547543,-8.921229,-3.502337,9.820950,-7.512582,3.643659,7.019337,1.396712,6.765948,-5.178131,9.850232,8.835978,-4.194488,4.177586,3.806473,-4.659833,-0.149484,-2.537021,4.863366,2.361303,-2.813313,5.819849,4.609214,-1.877812,3.756687,-0.781818,0.138443,3.424976,-4.579496,9.209294,4.732203,-9.354475,-0.134213,-4.048225,-9.423628,-8.898019,9.986572,-0.463734,-5.232062,3.269271,6.820398,-4.533692,6.312809,-7.601685,2.272792,-3.653056,8.531294,-1.406310,3.492925,6.141387,-2.496795,-8.557979,7.583916,-4.384165,4.348385,-3.225378,7.640239,-3.980872,-1.312361,-1.256025,-8.250627,-1.114038,8.394173,6.553425,-2.702262,-2.047963,-6.654423,-8.037974,7.077215,5.916072,-7.174540,4.111986,0.627827,2.451915,-2.265186,9.554423,-5.702953,-6.372058,-8.697106,-4.909142,-2.935260,6.166320,9.187954,6.844223,-6.237014,-7.897801,-0.376623,-4.883162,3.971902,7.150794,-7.995209,-2.871019,3.333615,-7.279362,-0.948336,-7.140639,-6.932176,-6.211318,4.885806,-7.750638,-9.535281,-3.620260,9.073003,-7.877146,-8.528606,-3.947291,-7.774255,3.387869,-9.056352,4.043944,-8.556321,9.496264,7.874680,0.731739,6.990584,-5.820716,-8.422604,-6.214440,-0.658519,-8.610486,0.242019,0.423473,2.012744,5.255345,-2.088282,-4.683068,-8.334277,9.930500,0.099759,-1.900015,5.051265,6.196864,0.850429,1.375185,-2.855771,8.058383,-4.981450,-7.452966,4.376799,8.321700,-7.915237,7.694485,-6.144995,0.728908,3.147053,-8.547542,-1.079440,-0.029678,-9.000086,9.623715,3.860297,-2.236475,3.834616,2.519231,-4.835927,5.557804,-9.939571,3.965148,9.038750,6.090537,-6.844143,4.407195,3.540799,-1.894416,7.062148,-6.841929,-6.855894,2.903199,8.395906,5.461951,5.576287,4.818300,2.456866,-0.185610,3.129802,0.246568,-4.985631,-4.161707,-9.202356,5.366151,6.256993,-4.503802,-1.802855,0.384403,-3.053482,1.205271,0.385001,3.346235,4.382374,-5.206754,0.856880,-4.415758,-6.195347,7.484601,4.460796,6.466197,5.251050,8.916481,8.603497,6.068559,5.136202,7.283861,1.352040,1.268833,0.645625,5.891169,1.174710,-4.734057,7.998097,-4.548767,-4.284246,5.835687,1.333001,7.313591,8.112160,-1.494408,0.623805,-3.365467,-4.558873,0.469172,2.836941,9.412775,-4.376733,-1.155621,6.982276,-3.575150,-7.655740,5.868671,-2.014775,-4.320657,-7.074402,-6.108176,2.243990,-4.251022,-5.831865,3.471725,1.443475,-2.149723,-9.231390,2.686970,1.399736,4.671697,3.681077,8.453399,8.806089,0.777567,-6.989611,6.023662,-0.591790,-5.418496,2.160249,-3.440363,-5.377251,-7.355766,-3.124034,-6.152572,7.045014,3.175752,5.024774,2.739589,3.958307,-8.044709,-4.232851,8.494422,5.300008,-0.791649,0.609880,0.185727,1.444028,-1.018024,5.553878,-3.058808,-5.549422,1.627345,-7.715384,-5.307623,-2.418330,-6.967054,-0.820509,3.197096,5.899208,-2.581493,1.202960,-6.096937,5.511327,-9.477976,3.869809,7.409058,-0.434030,6.091419,1.694596,-4.639825,-7.242371,6.071771,-5.092600,2.436819,-2.109541,-2.480302,5.056728,-3.998271,4.790914,-6.642920,7.709720,-6.700698,-8.890403,3.929190,6.400019,8.112903,-6.676811,-2.444690,-3.549450,-1.137009,9.819090,-6.117590,6.604683,6.970702,4.001237,3.587269,-5.452728,-6.230505,-7.871337,-2.709801,-6.036971,5.932258,-1.426429,4.793336,9.514597,9.023469,0.540011,-6.714805,1.414580,4.149962,9.525102,6.292044,6.253526,-9.024891,1.955087,3.204930,5.020643,-9.005816,3.448161,-3.930353,9.125391,0.992059,1.042871,8.277642,-6.972679,8.054458,-3.049983,5.270344,-3.476545,8.257939,-9.272630,3.353473,4.122869,-3.149631,-2.732418,-3.188611,-6.688988,-9.752518,3.462901,-0.151112,-4.606501,9.551213,9.150606,-5.926584,-2.983896,1.477247,3.076820,-0.383273,4.093310,8.159468,5.179442,7.709100,8.029552,2.251033,-7.658857,-6.114171,9.198281,0.635294,-6.003497,0.053112,5.988792,-1.470321,9.490314,3.382357,0.851438,-1.108016,-1.951914,-4.583194,8.592847,-3.378862,-6.800499,0.628457,-1.155141,-3.234552,-6.067067,-6.338531,-7.925079,-1.935711,1.573346,-0.834256,-2.553078,-6.841587,4.681466,8.908673,-0.550150,-8.588408,-2.328599,1.802625,-3.024231,-1.414454,2.095447,-5.317441,4.432577,1.579462,-7.192818,7.888220,9.391359,-9.170880,-9.642365,6.899713,7.734124,0.592573,0.850373,4.121677,-6.219220,3.961665,-1.006337,-5.019645,-6.348780,-5.828142,8.922985,-4.974597,6.684182,4.883048,-3.000477,9.589609,-6.653720,1.865588,4.480477,7.032646,-5.366991,5.847589,-1.451594,-3.405332,5.491143,-6.636026,-1.245511,8.691564,2.866769,-8.172333,-8.278395,2.695521,-8.602616,-9.875103,1.582922,-0.768668,-9.961998,-9.071381,9.743796,-8.163094,-2.785354,7.103797,3.422797,-6.178826,-2.057813,-5.188997,-6.979086,2.200713,-7.416348,-4.323586,-3.536426,-2.260406,-0.106138,1.965481,5.044876,7.762236,-1.973272,5.705770,6.536977,-4.272616,-1.184533,-6.828001,8.862928,5.428242,-9.758286,1.273899,-7.240480,3.674527,7.666440,-1.779543,-9.559447,-5.632086,2.161120,-8.997415,7.298965,-2.920463,8.835943,7.811362,-8.370387,7.578103,-1.030377,6.509337,-9.898933,-2.065442,-0.143216,-2.568856,-9.278761,5.665128,-3.367417,-9.673773,5.218077,4.544872,-5.606789,5.618884,-7.821655,0.129839,1.365091,7.582920,7.922899,6.901115,4.753733,7.671039,-6.040260,1.986571,-7.705602,9.161520,-9.384612,4.125016,3.509415,4.199032,3.647259,-3.775821,-2.990835,-3.290045,4.999253,2.474019,5.455094,-8.134460,3.295713,0.408685,-9.036262,1.935755,0.974377,0.676635,2.594460,-6.286943,1.088275,-6.807201,9.998467,6.005498,-9.338407,4.174291,0.865807,-2.804886,2.988888,1.009814,-0.848855,-6.746626,6.412333,-8.427861,-6.495845,8.869490,0.949258,1.568698,-3.219993,-2.169849,4.162337,-1.805747,5.966713,-0.062317,-3.571537,-9.153637,-1.052044,9.936611,-0.258056,0.320573,-7.955164,-6.447243,-5.179309,-3.240004,7.380123,3.221145,-0.819256,8.508600,-5.393894,-1.787408,1.420723,3.784541,7.178485,0.673504,-9.283783,5.947209,4.601594,2.376681,2.065970,-7.851076,-7.447036,-0.539673,-2.199635,-3.485527,7.842932,5.401003,-9.858762,-3.420467,4.961083,0.571678,-7.558247,0.574084,6.011209,1.485812,-1.947296,8.553628,-4.417256,-7.877703,6.250337,7.393658,1.946812,-6.003418,-2.567163,-7.544390,-8.145780,0.083197,-3.535928,3.492655,1.057891,-3.814413,-7.459616,-3.380882,2.193922,2.460499,-6.412126,5.997998,-2.207304,3.781764,2.257702,-9.367088,0.073221,-2.191607,-7.966817,7.148946,6.509817,-8.113448,9.776205,-8.804453,3.581875,-6.638712,-6.842538,8.630729,3.762907,8.071501,-6.571761,-6.591736,-5.823686,0.406744,-6.500740,-6.242077,3.045163,-7.451930,-0.495952,3.616409,-2.473148,8.707638,-5.217384,7.947020,0.848040,-4.535739,4.265884,8.422724,2.577094,-4.011078,-3.345285,5.439308,8.392467,-6.014047,-6.597355,1.065884,9.137437,-8.251590,-9.140895,4.308017,-2.901272,5.933524,0.909313,5.817528,-7.974029,-4.549423,5.101872,-1.937673,7.798722,-1.530187,-2.115014,2.607997,-4.914873,7.653415,0.680946,-5.270091,-8.048763,2.704254,-0.225534,4.551291,7.731662,0.661506,3.888239,2.069659,9.797127,5.725045,-9.195879,0.945401,-5.499298,0.402349,-9.453336,0.409408,9.964020,-7.840824,-9.820759,-3.357118,3.104978,-4.354787,9.487897,-3.841428,8.786215,6.324812,-8.460586,-3.742921,3.321664,-2.039224,6.032712,9.133199,6.144341,-3.164145,1.345893,5.805810,1.217620,1.282018,9.305735,9.298924,9.489349,-9.965738,6.320826,-5.939370,-4.486285,-3.314388,2.822994,8.690076,5.845738,-3.132953,-4.546093,-1.362366,7.456966,0.900540,3.917538,7.183943,6.302034,-7.480434,-7.200445,6.033849,5.955609,-1.113951,3.664581,8.723119,9.015454,1.333724,7.213071,9.060216,-8.683829,-7.108438,0.934717,-2.657904,1.859855,-2.612912,-3.378465,3.251920,5.849643,-5.185980,4.971062,-8.974108,4.716732,-8.733783,8.447947,2.203035,-6.838179,7.802945,0.922628,-0.757177,-8.863157,-3.180673,1.287775,-9.092121,6.483200,7.715974,9.131028,5.023619,-4.272275,9.935801,-0.963518,1.303810,-8.233859,-5.744946,-7.514211,5.924890,3.895468,9.559889,7.557182,-1.962905,-2.307701,8.801170,3.861065,-7.754509,-8.921877,0.510431,-4.568727,-1.265911,4.641611,-6.123868,1.626856,-3.212686,3.641792,8.356423,8.768621,7.976148,-1.762994,2.025612,-1.083898,2.393091,-1.140825,8.594165,4.375834,0.308022,-7.913495,-2.378984,4.635605,0.599520,3.488480,6.943941,-7.977398,-7.702436,4.026305,-3.709617,-6.546789,7.779197,-3.434145,0.887027,-9.501072,-1.486014,9.400079,-3.364417,1.787210,2.875752,7.855108,6.553523,-2.210446,-6.482554,-0.192628,7.400720,-6.825316,2.380766,3.986304,-2.099672,0.048479,-6.212267,3.183407,-9.523461,-9.886201,4.538623,-0.969680,5.665592,5.214719,6.949820,-5.850793,-6.373041,6.465219,5.306948,-2.049337,-5.897498,-5.618369,-5.434464,6.716842,-0.890740,2.075201,4.910913,5.578843,-2.061235,-0.525439,-1.098389,-9.649240,3.218900,-7.325408,-0.511910,-8.031217,-9.900323,2.589130,1.924301,7.134757,8.815655,9.693219,3.518191,8.417196,3.190198,4.491028,3.545783,-8.466349,7.473139,2.055680,-0.149877,-7.706043,0.294438,9.848198,-1.680668,-2.190649,9.419779,4.192331,-5.130356,-6.183478,-7.486006,2.272282,5.601217,8.873783,-2.681767,-5.624771,-9.445644,-2.636054,3.423245,-0.425262,-3.324480,5.958906,8.554168,-6.139552,3.314909,6.271362,-9.040639,8.700364,0.855843,-5.047843,-6.793810,-3.046549,3.065466,-6.197212,-7.198905,8.287808,7.584111,2.381708,5.412806,1.073798,-9.938355,-8.220829,7.161852,6.905606,-5.242378,6.895311,-9.355874,-6.662435,-4.216807,-0.811346,7.699236,9.205143,-5.794547,1.618869,2.294685,4.026110,-3.101534,-7.974588,4.956033,-9.643882,-4.491220,-6.500623,8.987469,-7.201365,2.496486,-6.449083,-1.487085,-8.033720,-5.077340,-5.243724,-2.406735,-0.417705,-1.472464,-6.447052,-9.074923,5.530963,-9.141867,3.791877,-3.022183,7.458376,1.593652,5.352112,-6.841987,-9.146428,2.480856,-9.783346,-4.635730,-6.567039,4.899696,6.597635,2.432587,-1.455847,-0.484429,2.811929,-3.640751,3.310436,8.437352,1.408715,-4.229424,-0.461998,2.379572,3.558220,6.806337,-5.172704,-7.788621,-8.407113,-4.878082,-8.268375,4.436853,-5.067617,-3.817747,9.848736,-7.399952,1.550574,-1.086969,-9.432505,-7.198764,-1.400440,-3.463027,8.880123,-9.373898,-3.717739,-7.740337,3.220315,9.846674,3.303384,9.748719,3.003241,-8.843050,-6.707722,-3.985183,-0.187631,-2.382778,7.789335,4.473831,-9.827181,-6.207363,-5.212823,7.250671,-9.686633,5.566039,-0.803611,-9.866366,-7.794912,1.018690,-7.806910,-8.110720,-3.717342,6.852853,4.965488,-3.380589,-1.253909,-5.788488,-9.734740,-2.505501,-0.847050,-5.410732,2.115615,-2.876701,3.217788,-0.882405,-7.763578,-1.573421,-7.490510,-3.053638,-9.425121,5.507031,8.302139,-2.019658,1.136348,1.819169,-9.615323,-4.324083,-3.903883,-3.407377,-4.541736,8.986336,7.674942,-2.218453,6.875794,1.148973,1.899255,-5.534369,-9.906769,-5.032070,-6.633033,-0.887001,-5.447981,-3.770184,2.870520,-3.293314,3.862295,-7.946888,-4.998957,-4.100794,0.860069,2.326060,-4.459149,-8.467074,-1.411369,-9.614754,-7.458318,-4.277171,-6.337142,3.532884,1.158351,7.073282,-1.413740,0.104855,-9.541285,-4.265778,0.125174,6.600196,-7.529114,-4.394837,-8.358705,0.467215,3.288197,0.074071,-5.410679,-9.384729,3.561808,-0.214547,3.759247,-1.608957,-0.846434,-2.515056,-0.435551,5.302174,6.807825,-8.407642,1.894748,-7.872863,6.029716,-9.282856,-4.702507,5.477818,-7.794774,4.648472,5.527994,-1.910012,4.238558,1.194429,-1.385374,-5.306267,-7.277824,5.012755,-4.730851,3.483294,-6.747375,5.329333,-9.419286,-8.323798,-3.837951,-2.766865,9.152667,9.255688,5.017196,-0.902143,-0.444038,9.388700,3.652931,-7.363376,-1.579606,7.131251,7.574682,-1.897419,0.106975,-0.685450,-5.451106,9.918365,8.508709,-9.426384,8.942305,-4.279142,0.779793,8.027179,6.086915,-0.110048,3.880615,-7.387820,-8.563405,-0.492097,5.742991,-3.417915,0.634455,4.330028,-0.421045,-6.020249,-1.368413,4.943886,-9.907874,6.459246,-3.004478,-5.539415,0.417080,-0.133163,4.950323,-8.418361,-5.250626,-7.071131,-5.003321,-3.633222,-3.802731,8.105854,-5.290282,-2.670556,1.191290,-8.010328,-9.002964,4.649138,1.214594,0.134527,-1.470558,8.451332,-3.322256,-8.776952,1.584532,-8.874030,1.617705,-0.515914,-1.268871,6.881965,-4.008598,-0.777410,-8.309131,4.517974,5.229160,-6.996270,-0.395036,-8.812791,2.007863,0.940212,-2.710884,-3.987291,5.911451,8.754232,-0.290432,2.743946,-7.455885,8.930390,4.459263,-6.243296,9.331896,-0.904440,-3.633041,2.538339,-8.857294,-9.203418,-7.911354,-0.380046,9.025605,7.292872,-7.711824,2.245612,-0.375072,8.413499,0.850468,6.611650,-6.256298,-9.961883,-3.512205,8.350314,-4.747980,4.843456,-6.631519,4.658462,7.802719,8.101184,9.568049,-0.701417,6.831569,-7.532915,5.932612,-4.863685,5.035704,-1.222566,-6.401593,-9.581137,9.355896,7.485370,-3.508482,-5.695518,1.966731,9.067210,-8.681534,4.941176,-9.829160,-4.684114,9.212641,5.965678,6.027053,-4.625728,6.115528,-7.602237,6.077638,2.846946,-0.547119,3.803577,2.822059,7.052387,6.766009,-7.977989,-9.187372,4.030095,6.892301,-2.877784,8.957589,-4.107478,-3.714263,2.515672,-1.429226,9.113389,-2.853857,-0.601687,3.463383,8.374311,-6.587459,-4.345797,-2.190752,-0.712978,0.398300,-9.056397,-4.807381,3.057985,-7.974762,-2.962779,5.083585,5.178103,-3.768775,-9.452818,9.968441,-0.740435,5.149177,-5.728257,4.987395,4.755359,-6.395125,4.610399,-0.788145,3.906708,7.100353,9.261943,7.114130,0.631328,-4.789383,1.650118,8.947610,-6.402182,0.546978,2.033463,8.405328,4.249579,-2.644120,-9.280632,9.596879,3.321149,1.540898,-3.549180,-5.917584,6.040418,8.241062,-7.482472,-3.826375,8.721902,-7.124010,-7.979840,8.903686,8.447739,-9.760182,-1.193026,9.751079,9.064029,-0.922389,6.808269,8.331303,1.516536,3.850538,6.959213,-0.118679,8.000447,0.989618,3.423579,1.713122,6.216180,-3.565113,-7.441220,4.763359,9.396189,7.072835,-0.612384,8.398053,8.935129,-5.531649,-6.674618,0.223439,9.517379,-8.781918,7.579767,3.851116,8.018606,-7.554366,2.148699,4.038860,5.939291,6.121342,7.844511,2.692222,0.868129,-6.319047,4.429559,-3.024071,-2.152815,8.268856,-1.357694,-4.146212,-6.473921,4.642154,4.181914,-6.050817,6.758552,-9.344298,-4.370796,4.148465,8.900883,-0.501574,9.691056,4.729434,4.251542,3.798569,4.969409,5.986826,-6.087693,1.472572,-1.354932,-1.974327,6.014486,-8.527836,9.608000,-9.820979,0.243591,3.630711,4.844410,3.107481,7.180203,-4.983404,-1.181396,-1.522236,0.765240,-7.047424,-4.183272,6.245464,-2.770725,8.247708,-4.733820,-7.406034,-8.567241,-6.573707,2.135106,-7.575709,1.579857,0.954507,5.529164,-5.186143,-1.354700,-1.505455,-2.059086,-0.800633,0.920392,-9.478707,4.895415,-1.550521,-9.598974,1.969799,-5.962752,-3.541128,7.995906,2.993701,4.951588,0.546155,7.397919,-5.639360,1.309206,-9.588972,7.289586,-5.815197,5.287561,-1.993956,-8.692049,8.896765,-6.560148,-0.163303,-0.014485,-0.158571,9.743094,9.578045,0.675774,-9.555816,-5.310574,7.710633,6.412499,6.281781,-9.951842,-4.631958,0.427612,9.042574,1.717620,0.329254,-7.368688,-8.276416,1.158502,-7.649169,0.119485,-9.385215,8.996187,4.709981,1.269194,6.387246,5.085906,-4.183289,-6.552350,-9.652202,7.798609,6.675718,6.088252,-0.038787,7.241617,9.707329,5.977700,-7.334172,2.338641,-7.585092,-7.881041,5.810829,6.859518,0.097331,6.883491,-7.642053,4.817746,-5.863138,4.939170,-6.397515,2.454256,0.532678,1.984206,5.195651,-9.953136,9.465206,-1.200056,-4.722915,4.659928,3.717377,5.689040,6.178543,9.443670,9.263895,-6.342855,5.301294,1.857751,6.211790,-0.780088,0.205991,-6.212149,-2.248059,6.168428,-6.646022,-9.317797,-1.736204,6.353037,-5.504146,6.211673,7.918452,1.501892,-3.778666,-6.452445,8.504660,-5.816800,6.571134,-3.973074,0.352538,-9.525937,-8.995230,0.744305,-0.348161,-9.901319,0.435344,-1.934300,-1.100187,6.893213,-2.069919,-5.800390,9.446853,-7.818303,6.278651,-3.409760,2.310916,-3.662877,2.389589,-6.184368,9.088232,-3.888920,-0.683404,4.358491,0.405416,0.107099,-1.172829,1.377730,7.396269,-7.471707,-7.102031,6.242790,1.223963,3.518228,-5.347643,-0.217469,9.839686,-5.485966,4.207295,-1.560301,6.562225,-0.817835,2.890080,3.388184,-8.109400,2.023069,-9.059904,-0.077884,-9.489297,-3.715032,7.514468,-3.206383,1.666891,-5.210728,9.476908,2.224624,0.307166,-2.572434,-6.048348,3.773460,-7.177102,1.279524,1.822778,-2.315682,-0.611322,-9.782118,-1.309950,-7.157065,-3.849387,-1.225482,5.968347,-5.863839,-5.857482,1.998505,-6.371339,7.097898,6.972628,4.170584,-5.734633,-6.704494,-6.327974,-9.529658,-2.358315,-5.744312,2.957343,-8.240635,7.892825,0.994396,4.599093,-0.794919,5.800266,-0.247476,-9.889289,-6.340539,-8.484044,4.760525,3.244079,9.933821,-7.804744,-8.124352,-5.971590,-8.397766,3.501146,1.994078,-0.081732,-5.329478,9.877829,-9.076503,-5.785538,-7.088545,-9.889214,3.377802,0.086281,2.047049,5.367622,-9.725076,-5.669926,3.714556,-7.025063,-9.115719,-1.389010,6.572946,-6.478944,6.170360,-5.604907,4.510244,-4.126885,-6.077679,1.052917,9.421920,-4.390651,-8.879735,6.599688,-9.689966,5.909750,-5.531214,-8.085278,5.714937,-4.827197,9.739764,0.320479,3.949190,-1.233817,1.289552,7.559722,-9.699939,-2.044817,-2.181093,-7.783116,-7.349901,6.516354,4.719620,-3.054171,-0.062699,1.331958,6.816913,-4.851123,-6.318992,-9.475012,-4.834819,3.137271,5.408872,-5.822617,7.443538,3.678639,-5.522747,-8.803828,-5.707155,-4.168933,9.734228,-8.961259,-0.116213,7.152417,9.708594,1.149658,6.246485,-7.991115,-6.549371,-0.406012,7.512387,1.228182,4.173132,1.738951,-1.273888,-6.450830,-9.632996,-9.052200,-1.005361,7.224868,-4.929374,0.860772,6.142206,-6.285506,-8.429915,7.325086,-2.685050,1.705293,4.575632,9.273674,4.875600,4.330253,5.942685,-8.230721,-1.232073,5.677839,-0.091214,-2.184583,0.752981,-3.023609,-2.854541,4.527771,-7.739420,-3.835797,-2.852526,-7.347685,9.107043,9.417549,2.198042,-9.505642,8.006781,-6.857180,0.131568,-2.296470,-7.851032,-0.159762,-7.599083,8.929706,5.070180,-3.178468,-9.695346,2.532535,6.138049,-8.771494,-5.864387,-8.378460,-5.582168,-3.631153,7.146152,-0.999247,5.345443,-9.408158,3.313007,-0.399680,3.208240,-8.157522,0.973762,-8.793424,-1.452390,-3.679005,4.914636,-8.006857,7.251504,7.569431,2.160082,-9.560069,9.562824,8.968218,5.755766,7.766612,-8.409639,-7.694705,0.992947,-1.203499,3.433093,-0.214875,0.853850,-1.003695,4.439413,-9.014295,-7.428074,8.970749,8.238416,-0.319096,7.429949,-3.619943,6.875819,8.944898,4.113272,-2.129115,-2.745858,8.806991,0.432053,3.144457,-1.069928,-6.330463,-4.129694,-1.476280,-8.365229,-7.930638,-8.964240,6.686643,0.744997,-7.753393,1.162522,0.431408,1.117025,0.835675,9.203325,-8.314849,-3.529324,-4.528515,-1.517005,7.400401,9.454846,-8.911289,-4.442184,3.794087,6.068101,-7.396246,-3.060820,-1.631091,-5.524467,-5.303746,-0.045481,9.998837,3.884453,-3.600225,-3.172907,-5.394924,5.428384,9.958723,5.852771,-8.925289,-6.429316,3.372035,-5.569444,3.808746,8.279126,-8.328919,-8.204346,4.833151,2.027602,0.397429,9.791958,6.018257,2.336142,-6.512360,3.002661,2.719056,5.452190,-2.837396,-8.713163,-5.574678,-5.786810,-9.688316,2.673089,-0.368106,6.687910,-1.332805,-7.077432,9.971743,9.583107,-9.187148,-7.725956,-4.138721,-6.934886,-0.479963,-6.434449,-7.727722,2.298926], dtype = "float64")#candidate|6025|(2816,)|const|float64
const_6026 = relay.const([-6,-10,10,-9,-1,1,-3,7,-10,6,4,-10,2,3,-6,1,-5,-10,-5,3,4,-5,1,-2,3,-2,-9,-1,-6,3,5,3,6,-6,-2,5,4,-5,-2,-6,9,3,-8,-7,1,6,3,-7,-3,-8,-1,-1,4,2,4,-4,3,9,6,-8,5,4,-5,6,3,3,10,-10,1,-2,-7,-6,-6,6,10,-8,1,-2,2,-4,-6,8,2,-10,-8,-8,1,-9,-8,6,10,2,7,-8,3,-3,-1,-5,-6,10,7,3,1,-4,7,-8,5,8,3,10,-10,-7,3,7,-4,5,2,-1,8,-3,-7,-3,10,-6,-1,-1,1,-1,-7,-4,-5,6,7,-2,5,1,6,-6,-7,-9,3,9,-7,8,1,7,-3,5,2,-4,-3,-1,-10,5,-1,6,-6,8,7,9,2,-6,-1,-4,8,-10,-4,2,-7,-9,-3,2,2,-1,10,7,-6,-6,3,9], dtype = "uint16")#candidate|6026|(180,)|const|uint16
var_6027 = relay.var("var_6027", dtype = "uint64", shape = (1664,))#candidate|6027|(1664,)|var|uint64
call_6024 = relay.TupleGetItem(func_4103_call(relay.reshape(const_6025.astype('float64'), [2816,]), relay.reshape(const_6026.astype('uint16'), [180,]), relay.reshape(var_6012.astype('float64'), [60,]), relay.reshape(const_6014.astype('float32'), [154,]), relay.reshape(var_6027.astype('uint64'), [1664,]), ), 9)
call_6028 = relay.TupleGetItem(func_4110_call(relay.reshape(const_6025.astype('float64'), [2816,]), relay.reshape(const_6026.astype('uint16'), [180,]), relay.reshape(var_6012.astype('float64'), [60,]), relay.reshape(const_6014.astype('float32'), [154,]), relay.reshape(var_6027.astype('uint64'), [1664,]), ), 9)
func_1574_call = mod.get_global_var('func_1574')
func_1577_call = mutated_mod.get_global_var('func_1577')
call_6032 = relay.TupleGetItem(func_1574_call(relay.reshape(call_6010.astype('int8'), [])), 0)
call_6033 = relay.TupleGetItem(func_1577_call(relay.reshape(call_6010.astype('int8'), [])), 0)
output = relay.Tuple([call_6003,call_6010,const_6011,var_6012,const_6013,const_6014,call_6024,const_6025,const_6026,var_6027,call_6032,])
output2 = relay.Tuple([call_6004,call_6015,const_6011,var_6012,const_6013,const_6014,call_6028,const_6025,const_6026,var_6027,call_6033,])
func_6042 = relay.Function([var_6012,var_6027,], output)
mod['func_6042'] = func_6042
mod = relay.transform.InferType()(mod)
mutated_mod['func_6042'] = func_6042
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6042_call = mutated_mod.get_global_var('func_6042')
var_6044 = relay.var("var_6044", dtype = "float64", shape = (60,))#candidate|6044|(60,)|var|float64
var_6045 = relay.var("var_6045", dtype = "uint64", shape = (1664,))#candidate|6045|(1664,)|var|uint64
call_6043 = func_6042_call(var_6044,var_6045,)
output = call_6043
func_6046 = relay.Function([var_6044,var_6045,], output)
mutated_mod['func_6046'] = func_6046
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4775_call = mod.get_global_var('func_4775')
func_4777_call = mutated_mod.get_global_var('func_4777')
call_6048 = relay.TupleGetItem(func_4775_call(), 0)
call_6049 = relay.TupleGetItem(func_4777_call(), 0)
func_2722_call = mod.get_global_var('func_2722')
func_2730_call = mutated_mod.get_global_var('func_2730')
var_6052 = relay.var("var_6052", dtype = "float32", shape = (1, 231))#candidate|6052|(1, 231)|var|float32
var_6053 = relay.var("var_6053", dtype = "float32", shape = (528,))#candidate|6053|(528,)|var|float32
const_6054 = relay.const(9, dtype = "int8")#candidate|6054|()|const|int8
var_6055 = relay.var("var_6055", dtype = "float64", shape = (2816,))#candidate|6055|(2816,)|var|float64
var_6056 = relay.var("var_6056", dtype = "float64", shape = (60,))#candidate|6056|(60,)|var|float64
var_6057 = relay.var("var_6057", dtype = "uint64", shape = (1664,))#candidate|6057|(1664,)|var|uint64
call_6051 = relay.TupleGetItem(func_2722_call(relay.reshape(var_6052.astype('float32'), [11, 7, 3]), relay.reshape(var_6052.astype('float32'), [11, 7, 3]), relay.reshape(var_6053.astype('float32'), [528,]), relay.reshape(const_6054.astype('int8'), []), relay.reshape(var_6055.astype('float64'), [2816,]), relay.reshape(var_6056.astype('float64'), [15, 4]), relay.reshape(var_6057.astype('uint64'), [416, 4]), ), 4)
call_6058 = relay.TupleGetItem(func_2730_call(relay.reshape(var_6052.astype('float32'), [11, 7, 3]), relay.reshape(var_6052.astype('float32'), [11, 7, 3]), relay.reshape(var_6053.astype('float32'), [528,]), relay.reshape(const_6054.astype('int8'), []), relay.reshape(var_6055.astype('float64'), [2816,]), relay.reshape(var_6056.astype('float64'), [15, 4]), relay.reshape(var_6057.astype('uint64'), [416, 4]), ), 4)
bop_6063 = relay.divide(const_6054.astype('float32'), var_6052.astype('float32')) # shape=(1, 231)
bop_6068 = relay.maximum(var_6052.astype('float64'), relay.reshape(bop_6063.astype('float64'), relay.shape_of(var_6052))) # shape=(1, 231)
output = relay.Tuple([call_6048,call_6051,var_6053,var_6055,var_6056,var_6057,bop_6068,])
output2 = relay.Tuple([call_6049,call_6058,var_6053,var_6055,var_6056,var_6057,bop_6068,])
func_6074 = relay.Function([var_6052,var_6053,var_6055,var_6056,var_6057,], output)
mod['func_6074'] = func_6074
mod = relay.transform.InferType()(mod)
mutated_mod['func_6074'] = func_6074
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6074_call = mutated_mod.get_global_var('func_6074')
var_6076 = relay.var("var_6076", dtype = "float32", shape = (1, 231))#candidate|6076|(1, 231)|var|float32
var_6077 = relay.var("var_6077", dtype = "float32", shape = (528,))#candidate|6077|(528,)|var|float32
var_6078 = relay.var("var_6078", dtype = "float64", shape = (2816,))#candidate|6078|(2816,)|var|float64
var_6079 = relay.var("var_6079", dtype = "float64", shape = (60,))#candidate|6079|(60,)|var|float64
var_6080 = relay.var("var_6080", dtype = "uint64", shape = (1664,))#candidate|6080|(1664,)|var|uint64
call_6075 = func_6074_call(var_6076,var_6077,var_6078,var_6079,var_6080,)
output = call_6075
func_6081 = relay.Function([var_6076,var_6077,var_6078,var_6079,var_6080,], output)
mutated_mod['func_6081'] = func_6081
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6188 = relay.constdtype = "float32")#candidate|6188|(12, 13, 16)|const|float32
uop_6189 = relay.asin(const_6188.astype('float32')) # shape=(12, 13, 16)
output = relay.Tuple([uop_6189,])
output2 = relay.Tuple([uop_6189,])
func_6191 = relay.Function([], output)
mod['func_6191'] = func_6191
mod = relay.transform.InferType()(mod)
output = func_6191()
func_6192 = relay.Function([], output)
mutated_mod['func_6192'] = func_6192
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4375_call = mod.get_global_var('func_4375')
func_4376_call = mutated_mod.get_global_var('func_4376')
call_6263 = relay.TupleGetItem(func_4375_call(), 0)
call_6264 = relay.TupleGetItem(func_4376_call(), 0)
func_5612_call = mod.get_global_var('func_5612')
func_5617_call = mutated_mod.get_global_var('func_5617')
const_6270 = relay.const([4.474876,-8.150184,0.927698,6.267979,8.568096,8.488953,7.101753,-2.674491,-7.878373,0.375218,2.569807,9.541730,5.335342,-9.784583,-3.139034,-4.936419,0.665093,1.389271,-4.597686,1.413850,-8.219906,8.787836,7.596140,-5.875852,-2.683176,0.352543,7.259742,-3.274723,3.190018,8.551925,-3.136501,2.842905,-8.370022,-6.759272,7.478934,9.090823,5.480119,5.095999,-9.927388,-4.447486,1.042011,7.259412,-2.853326,3.683513,-5.681744,8.552708,5.769797,-8.025149,-6.111413,-3.595195,-3.511979,7.274060,-2.944094,-7.816669,-8.100243,3.723611,-0.109581,-4.468047,7.997755,-6.017550,6.058819,-6.664499,-3.522016,-3.424167,-3.984957,-0.027379,-6.236388,-9.260265,-7.388833,-5.050603,0.848625,2.943019,-0.529828,4.847116,5.234155,1.332393,3.844947,1.495091,-9.764828,-2.676054,-8.724742,9.651955,-4.526847,-1.618249,2.312316,-0.889244,-7.457130,-6.654730,9.169643,-5.972412,-1.501212,7.801763,-2.844510,4.500491,5.816885,9.899747,7.838993,-0.848426,-0.666888,-3.216073,0.465343,-2.806499,-1.955367,-9.477274,-3.192122,5.010276,-8.752681,7.681048,8.420680,7.583399,-1.135493,1.811747,-2.637487,-1.492489,-0.618882,-3.912745,5.834275,7.231802,6.343937,1.520286,5.788939,-7.548706,-9.872612,-4.750281,7.681549,-8.978701,-4.550082,5.264336,0.688910,5.936913,-0.499109,-8.350631,-3.057784,-7.112990,2.021639,-9.029240,-1.184555,6.885840,-9.377508,-0.275062,9.826015,8.661628,-2.824258,-2.866373,-5.349229,3.670136,4.706158,-1.115672,-7.184198,-2.425777,7.125575,-2.567385,7.020944,-9.372661,2.771283,4.991050,4.756714,-5.820743,8.700150,9.244481,-7.561080,7.612704,-5.107914,0.665587,-0.495196,9.890551,-4.471815,8.670852,5.344403,9.430900,-2.232082,7.838123,-4.692558,-2.134344,9.524523,9.532111,-5.680797,7.937072,0.472310,4.816065,-6.458350,5.851133,-7.838344,0.670974,-2.906233,-0.656236,0.067371,-3.998969,4.643817,-6.151355,-6.783141,-5.652269,-4.830813,-7.049992,0.952703,9.110857,-5.693392,-8.241151,2.432806,-0.968854,9.974070,-5.557309,-9.906546,-4.182639,1.719289,-2.570603,-9.620434,3.380812,3.069439,-7.296217,6.944023,-3.401355,-2.233350,5.726199,-9.109919,4.125746,-4.303214,6.698554,-6.466459,7.767667,-4.446593,-2.435051,-8.141773,8.257810,5.013102,-9.375544,4.021570,-0.997606,-7.879827,1.206929,7.782659,-4.744106,-8.851079,-8.508551,8.117143,3.062858,-8.066266,-4.899843,5.700063,-7.317322,-3.337533,1.957164,1.089136,5.015693,1.512485,7.691421,-9.858079,1.215455,7.314417,3.237730,3.207035,-8.021541,-8.937472,-7.204568,-8.369379,-7.427172,-9.612774,-0.341686,2.558733,3.058076,-0.526019,2.697008,-1.771827,2.036300,9.863889,-9.462356,1.563191,-7.143533,5.730589,1.627129,5.056021,-4.226437,-4.877661,2.055105,1.553228,-8.067623,1.014123,-6.118874,-2.496753,7.946193,-6.664610,-8.589747,-2.164852,-8.997694,-8.716046,0.394539,9.073073,9.549802,-4.903884,-2.812130,9.292057,7.318033,-2.165881,-8.152009,-7.051129,-3.293786,9.039410,-8.324459,2.014582,0.218515,4.631722,2.166628,6.658172,-6.806960,-1.918028,3.695804,8.771646,-6.532641,-8.828327,7.606196,7.293690,2.395761,-6.635199,-0.155745,-4.030099,2.623346,0.349622,3.670262,9.713486,-5.430281,-5.758362,1.952779,0.702997,4.246251,-1.779488,-3.762030,0.619929,-5.157380,1.386350,9.610214,1.330505,7.222885,-7.360342,8.352139,-0.647388,6.908444,0.275672,1.180705,-0.606515,-6.957786,2.456426,-0.863679,-6.795801,-9.200580,-1.818990,-4.264107,4.357789,-4.150360,-3.965789,3.176540,3.742285,1.894085,-4.894781,3.439769,1.833494,5.018945,-9.936047,1.976758,9.219308,1.323274,-1.224924,6.247294,6.625736,7.781619,2.667362,0.201399,3.300475,6.836366,4.996583,-4.070040,-4.175306,7.485200,-4.052750,1.387062,-3.611387,0.353269,-9.565769,-6.098254,-6.033043,4.289779,1.281985,-9.623035,2.252413,-6.689577,6.279852,-2.985279,-8.583155,-1.557284,-7.605722,-8.511616,-4.097541,1.408968,-8.817260,0.570706,0.431632,-4.657830,1.885682,2.300847,-3.168070,2.869006,9.992972,1.526539,2.202694,-9.537948,-1.978728,-0.952864,-2.376852,2.751988,-5.734082,0.490720,-5.932571,-2.418441,-5.343378,-0.521479,1.209396,-6.320192,3.666051,-7.503619,-0.593886,2.841695,-8.014454,8.922629,8.098088,2.156277,0.156153,-2.726985,7.347417,8.147784,-8.502086,-8.731722,9.401295,-6.554353,2.964071,9.874252,1.146494,-1.864596,5.886050,-7.402728,-7.135088,-8.197340,-5.732999,6.434324,5.209441,-8.437036,7.068299,1.992993,8.326580,7.917487,-1.067383,-3.182250,8.334833,7.582089,1.207114,-1.226581,-7.566052,7.545654,8.666745,-9.222046,-8.780389,-3.305488,9.960294,-2.579472,-2.876789,9.653788,2.382557,-3.390251,-7.972455,1.402903,-9.980145,-4.251858,-1.619328,8.691886,-9.588436,-3.818558,-8.347763,-3.730676,-1.761883,9.190679,2.675166,5.648082,-3.675740,2.055505,-4.374949,-1.131195,-5.505045,9.466340,9.889686,-6.043597,-1.504655,-6.820299,-7.116627,-4.606386,9.078445,8.509269,4.916885,3.366928,-6.820391,-2.392442,4.729567,0.855261,4.939314,-5.475011,-1.643144,0.972937,9.836465,7.535805,-9.398279,-6.430054,1.437897,-5.853669,4.247427,7.241935,2.431924,-5.125842,-4.460834,-0.049449,-1.399650,-9.464554,-6.436365,0.383291,0.165543,0.158316,-1.167333,-2.560054,2.805807,-8.095008,-4.676135,-6.162568,-5.743688,4.721710,3.845199,-2.437677,-2.302689,-8.683318,-3.464051,3.471679,-6.538750,-3.998815,-4.443639,5.017100,1.870739,-6.988698,1.610266,8.381078,4.687398,-7.886324,9.321661,-7.558420,-7.354403,-0.803429,-5.590509,-4.568483,-2.354919,-0.006629,0.619364,-4.662286,6.302614,7.630653,6.679971,-1.541693,6.075867,4.305492,-8.408793,-2.893365,-1.797753,8.085865,-8.115116,-3.840320,-2.350256,-5.671875,-2.178535,6.585520,2.752131,-0.385847,5.286072,-5.128990,2.219871,2.733091,9.372927,-2.138850,-5.007801,3.767284,-0.155782,3.180641,-7.693361,-6.604523,-4.030068,-7.150184,-2.819433,5.826209,-8.565452,-5.691372,4.325954,0.294823,-9.254876,4.002245,2.476459,8.125481,-8.114898,3.938433,-5.772192,6.040418,7.331680,2.802879,-5.589325,7.455189,-9.742466,-2.649070,-0.374347,-1.743443,-5.977046,4.505727,-3.173032,5.034661,-8.930911,2.539087,-9.051654,2.153109,7.038121,-8.716061,6.425833,-1.633210,6.180962,-4.744225,-4.260777,-8.215086,-8.722443,-5.355288,1.108403,5.068639,-7.274298,-7.057549,8.218988,-2.052261,-3.963996,-2.622131,1.134460,3.407640,6.094849,-4.860640,6.114554,-3.381309,-2.321217,-5.238465,-2.877711,0.830996,4.389348,-7.658092,-9.621217,1.929855,1.646100,-0.899524,-6.753967,2.825321,2.109177,9.693221,3.966517,-9.045988,-1.952033,2.882798,-2.654925,-6.786357,-9.436130,-4.708839,6.120281,-8.073733,7.929543,3.405626,-7.203199,-5.174845,-6.246437,-7.626480,6.044565,-0.417764,-2.052883,6.461186,-4.983455,-5.668726,-8.478364,9.477012,-1.587369,-9.770182,9.531130,4.139743,-3.132138,7.026132,7.518317,-4.739539,5.586325,-7.422511,-8.185532,-4.328481,6.116405,-0.556495,-2.633910,-5.651003,9.740308,-7.473128,-8.812857,-7.262013,4.536055,-8.045910,-0.955408,-8.458861,7.545351,4.735058,-3.857809,-7.632215,-6.376956,3.113094,5.941782,8.048843,-1.574272,4.526138,1.912938,8.566435,8.921140,7.656413,9.774623,4.227846], dtype = "float64")#candidate|6270|(720,)|const|float64
var_6271 = relay.var("var_6271", dtype = "int8", shape = ())#candidate|6271|()|var|int8
call_6269 = relay.TupleGetItem(func_5612_call(relay.reshape(const_6270.astype('float64'), [6, 10, 12]), relay.reshape(const_6270.astype('float64'), [6, 10, 12]), relay.reshape(var_6271.astype('int8'), []), ), 1)
call_6272 = relay.TupleGetItem(func_5617_call(relay.reshape(const_6270.astype('float64'), [6, 10, 12]), relay.reshape(const_6270.astype('float64'), [6, 10, 12]), relay.reshape(var_6271.astype('int8'), []), ), 1)
func_5050_call = mod.get_global_var('func_5050')
func_5051_call = mutated_mod.get_global_var('func_5051')
call_6302 = relay.TupleGetItem(func_5050_call(), 0)
call_6303 = relay.TupleGetItem(func_5051_call(), 0)
func_4460_call = mod.get_global_var('func_4460')
func_4463_call = mutated_mod.get_global_var('func_4463')
call_6310 = func_4460_call(relay.reshape(call_6302.astype('float32'), [14, 7, 3]))
call_6311 = func_4460_call(relay.reshape(call_6302.astype('float32'), [14, 7, 3]))
output = relay.Tuple([call_6263,call_6269,const_6270,var_6271,call_6302,call_6310,])
output2 = relay.Tuple([call_6264,call_6272,const_6270,var_6271,call_6303,call_6311,])
func_6312 = relay.Function([var_6271,], output)
mod['func_6312'] = func_6312
mod = relay.transform.InferType()(mod)
mutated_mod['func_6312'] = func_6312
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6313 = relay.var("var_6313", dtype = "int8", shape = ())#candidate|6313|()|var|int8
func_6312_call = mutated_mod.get_global_var('func_6312')
call_6314 = func_6312_call(var_6313)
output = call_6314
func_6315 = relay.Function([var_6313], output)
mutated_mod['func_6315'] = func_6315
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5698_call = mod.get_global_var('func_5698')
func_5699_call = mutated_mod.get_global_var('func_5699')
call_6357 = relay.TupleGetItem(func_5698_call(), 1)
call_6358 = relay.TupleGetItem(func_5699_call(), 1)
func_1737_call = mod.get_global_var('func_1737')
func_1743_call = mutated_mod.get_global_var('func_1743')
var_6360 = relay.var("var_6360", dtype = "int32", shape = (648,))#candidate|6360|(648,)|var|int32
var_6361 = relay.var("var_6361", dtype = "float64", shape = (60,))#candidate|6361|(60,)|var|float64
const_6362 = relay.const(-7, dtype = "int8")#candidate|6362|()|const|int8
var_6363 = relay.var("var_6363", dtype = "float32", shape = (1, 154))#candidate|6363|(1, 154)|var|float32
call_6359 = relay.TupleGetItem(func_1737_call(relay.reshape(var_6360.astype('int32'), [6, 9, 12]), relay.reshape(var_6360.astype('int32'), [6, 9, 12]), relay.reshape(var_6361.astype('float64'), [60,]), relay.reshape(const_6362.astype('int8'), []), relay.reshape(var_6363.astype('float32'), [154,]), ), 2)
call_6364 = relay.TupleGetItem(func_1743_call(relay.reshape(var_6360.astype('int32'), [6, 9, 12]), relay.reshape(var_6360.astype('int32'), [6, 9, 12]), relay.reshape(var_6361.astype('float64'), [60,]), relay.reshape(const_6362.astype('int8'), []), relay.reshape(var_6363.astype('float32'), [154,]), ), 2)
func_5676_call = mod.get_global_var('func_5676')
func_5677_call = mutated_mod.get_global_var('func_5677')
call_6382 = relay.TupleGetItem(func_5676_call(), 2)
call_6383 = relay.TupleGetItem(func_5677_call(), 2)
output = relay.Tuple([call_6357,call_6359,var_6360,var_6361,const_6362,var_6363,call_6382,])
output2 = relay.Tuple([call_6358,call_6364,var_6360,var_6361,const_6362,var_6363,call_6383,])
func_6384 = relay.Function([var_6360,var_6361,var_6363,], output)
mod['func_6384'] = func_6384
mod = relay.transform.InferType()(mod)
var_6385 = relay.var("var_6385", dtype = "int32", shape = (648,))#candidate|6385|(648,)|var|int32
var_6386 = relay.var("var_6386", dtype = "float64", shape = (60,))#candidate|6386|(60,)|var|float64
var_6387 = relay.var("var_6387", dtype = "float32", shape = (1, 154))#candidate|6387|(1, 154)|var|float32
output = func_6384(var_6385,var_6386,var_6387,)
func_6388 = relay.Function([var_6385,var_6386,var_6387,], output)
mutated_mod['func_6388'] = func_6388
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4613_call = mod.get_global_var('func_4613')
func_4614_call = mutated_mod.get_global_var('func_4614')
call_6456 = func_4613_call()
call_6457 = func_4613_call()
func_5676_call = mod.get_global_var('func_5676')
func_5677_call = mutated_mod.get_global_var('func_5677')
call_6464 = relay.TupleGetItem(func_5676_call(), 2)
call_6465 = relay.TupleGetItem(func_5677_call(), 2)
output = relay.Tuple([call_6456,call_6464,])
output2 = relay.Tuple([call_6457,call_6465,])
func_6467 = relay.Function([], output)
mod['func_6467'] = func_6467
mod = relay.transform.InferType()(mod)
output = func_6467()
func_6468 = relay.Function([], output)
mutated_mod['func_6468'] = func_6468
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4212_call = mod.get_global_var('func_4212')
func_4213_call = mutated_mod.get_global_var('func_4213')
call_6512 = relay.TupleGetItem(func_4212_call(), 0)
call_6513 = relay.TupleGetItem(func_4213_call(), 0)
func_4103_call = mod.get_global_var('func_4103')
func_4110_call = mutated_mod.get_global_var('func_4110')
var_6515 = relay.var("var_6515", dtype = "float64", shape = (2816,))#candidate|6515|(2816,)|var|float64
const_6516 = relay.const([[-4,8,4,3,-9,4,7,9,4,3,-5,2,8,10,-1,4,5,-1,-8,-2,-5,10,-6,3,-8,-7,9,-3,-9,-3],[-3,-6,-6,9,1,1,-10,8,-2,9,5,-5,7,-9,8,5,-10,-4,-9,-2,-6,4,8,3,3,9,8,-2,1,1],[5,3,-8,4,1,8,1,-5,-6,-8,-10,4,-3,5,10,-3,6,10,6,3,-10,-5,3,-9,-8,-7,-5,8,-9,-2],[-3,-4,5,-2,8,6,-4,-10,-9,-7,5,7,7,6,10,-7,-4,-1,4,8,9,-1,-5,2,-7,2,5,2,5,-9],[7,-10,-6,-10,6,-2,3,8,2,3,10,-3,-5,8,4,-6,5,4,1,-2,3,10,7,4,-9,-9,10,-6,9,-4],[-1,-4,10,-8,3,6,3,-9,-5,8,-8,4,10,-5,-2,-2,3,1,-3,2,8,1,7,10,3,-7,8,2,-1,-7]], dtype = "uint16")#candidate|6516|(6, 30)|const|uint16
var_6517 = relay.var("var_6517", dtype = "float64", shape = (60, 1))#candidate|6517|(60, 1)|var|float64
var_6518 = relay.var("var_6518", dtype = "float32", shape = (154,))#candidate|6518|(154,)|var|float32
var_6519 = relay.var("var_6519", dtype = "uint64", shape = (104, 16))#candidate|6519|(104, 16)|var|uint64
call_6514 = relay.TupleGetItem(func_4103_call(relay.reshape(var_6515.astype('float64'), [2816,]), relay.reshape(const_6516.astype('uint16'), [180,]), relay.reshape(var_6517.astype('float64'), [60,]), relay.reshape(var_6518.astype('float32'), [154,]), relay.reshape(var_6519.astype('uint64'), [1664,]), ), 5)
call_6520 = relay.TupleGetItem(func_4110_call(relay.reshape(var_6515.astype('float64'), [2816,]), relay.reshape(const_6516.astype('uint16'), [180,]), relay.reshape(var_6517.astype('float64'), [60,]), relay.reshape(var_6518.astype('float32'), [154,]), relay.reshape(var_6519.astype('uint64'), [1664,]), ), 5)
output = relay.Tuple([call_6512,call_6514,var_6515,const_6516,var_6517,var_6518,var_6519,])
output2 = relay.Tuple([call_6513,call_6520,var_6515,const_6516,var_6517,var_6518,var_6519,])
func_6539 = relay.Function([var_6515,var_6517,var_6518,var_6519,], output)
mod['func_6539'] = func_6539
mod = relay.transform.InferType()(mod)
var_6540 = relay.var("var_6540", dtype = "float64", shape = (2816,))#candidate|6540|(2816,)|var|float64
var_6541 = relay.var("var_6541", dtype = "float64", shape = (60, 1))#candidate|6541|(60, 1)|var|float64
var_6542 = relay.var("var_6542", dtype = "float32", shape = (154,))#candidate|6542|(154,)|var|float32
var_6543 = relay.var("var_6543", dtype = "uint64", shape = (104, 16))#candidate|6543|(104, 16)|var|uint64
output = func_6539(var_6540,var_6541,var_6542,var_6543,)
func_6544 = relay.Function([var_6540,var_6541,var_6542,var_6543,], output)
mutated_mod['func_6544'] = func_6544
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6467_call = mod.get_global_var('func_6467')
func_6468_call = mutated_mod.get_global_var('func_6468')
call_6551 = relay.TupleGetItem(func_6467_call(), 1)
call_6552 = relay.TupleGetItem(func_6468_call(), 1)
output = relay.Tuple([call_6551,])
output2 = relay.Tuple([call_6552,])
func_6553 = relay.Function([], output)
mod['func_6553'] = func_6553
mod = relay.transform.InferType()(mod)
mutated_mod['func_6553'] = func_6553
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6553_call = mutated_mod.get_global_var('func_6553')
call_6554 = func_6553_call()
output = call_6554
func_6555 = relay.Function([], output)
mutated_mod['func_6555'] = func_6555
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4375_call = mod.get_global_var('func_4375')
func_4376_call = mutated_mod.get_global_var('func_4376')
call_6601 = relay.TupleGetItem(func_4375_call(), 1)
call_6602 = relay.TupleGetItem(func_4376_call(), 1)
output = call_6601
output2 = call_6602
func_6604 = relay.Function([], output)
mod['func_6604'] = func_6604
mod = relay.transform.InferType()(mod)
mutated_mod['func_6604'] = func_6604
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6604_call = mutated_mod.get_global_var('func_6604')
call_6605 = func_6604_call()
output = call_6605
func_6606 = relay.Function([], output)
mutated_mod['func_6606'] = func_6606
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6604_call = mod.get_global_var('func_6604')
func_6606_call = mutated_mod.get_global_var('func_6606')
call_6634 = func_6604_call()
call_6635 = func_6604_call()
func_1574_call = mod.get_global_var('func_1574')
func_1577_call = mutated_mod.get_global_var('func_1577')
var_6640 = relay.var("var_6640", dtype = "int8", shape = ())#candidate|6640|()|var|int8
call_6639 = relay.TupleGetItem(func_1574_call(relay.reshape(var_6640.astype('int8'), [])), 0)
call_6641 = relay.TupleGetItem(func_1577_call(relay.reshape(var_6640.astype('int8'), [])), 0)
output = relay.Tuple([call_6634,call_6639,var_6640,])
output2 = relay.Tuple([call_6635,call_6641,var_6640,])
func_6642 = relay.Function([var_6640,], output)
mod['func_6642'] = func_6642
mod = relay.transform.InferType()(mod)
var_6643 = relay.var("var_6643", dtype = "int8", shape = ())#candidate|6643|()|var|int8
output = func_6642(var_6643)
func_6644 = relay.Function([var_6643], output)
mutated_mod['func_6644'] = func_6644
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5748_call = mod.get_global_var('func_5748')
func_5750_call = mutated_mod.get_global_var('func_5750')
call_6675 = relay.TupleGetItem(func_5748_call(), 1)
call_6676 = relay.TupleGetItem(func_5750_call(), 1)
func_5261_call = mod.get_global_var('func_5261')
func_5263_call = mutated_mod.get_global_var('func_5263')
call_6696 = func_5261_call()
call_6697 = func_5261_call()
output = relay.Tuple([call_6675,call_6696,])
output2 = relay.Tuple([call_6676,call_6697,])
func_6698 = relay.Function([], output)
mod['func_6698'] = func_6698
mod = relay.transform.InferType()(mod)
mutated_mod['func_6698'] = func_6698
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6698_call = mutated_mod.get_global_var('func_6698')
call_6699 = func_6698_call()
output = call_6699
func_6700 = relay.Function([], output)
mutated_mod['func_6700'] = func_6700
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4375_call = mod.get_global_var('func_4375')
func_4376_call = mutated_mod.get_global_var('func_4376')
call_6751 = relay.TupleGetItem(func_4375_call(), 0)
call_6752 = relay.TupleGetItem(func_4376_call(), 0)
func_5396_call = mod.get_global_var('func_5396')
func_5399_call = mutated_mod.get_global_var('func_5399')
var_6760 = relay.var("var_6760", dtype = "float32", shape = (70,))#candidate|6760|(70,)|var|float32
call_6759 = func_5396_call(relay.reshape(var_6760.astype('float32'), [5, 1, 14]))
call_6761 = func_5396_call(relay.reshape(var_6760.astype('float32'), [5, 1, 14]))
output = relay.Tuple([call_6751,call_6759,var_6760,])
output2 = relay.Tuple([call_6752,call_6761,var_6760,])
func_6764 = relay.Function([var_6760,], output)
mod['func_6764'] = func_6764
mod = relay.transform.InferType()(mod)
mutated_mod['func_6764'] = func_6764
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6765 = relay.var("var_6765", dtype = "float32", shape = (70,))#candidate|6765|(70,)|var|float32
func_6764_call = mutated_mod.get_global_var('func_6764')
call_6766 = func_6764_call(var_6765)
output = call_6766
func_6767 = relay.Function([var_6765], output)
mutated_mod['func_6767'] = func_6767
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4613_call = mod.get_global_var('func_4613')
func_4614_call = mutated_mod.get_global_var('func_4614')
call_6774 = func_4613_call()
call_6775 = func_4613_call()
output = call_6774
output2 = call_6775
func_6784 = relay.Function([], output)
mod['func_6784'] = func_6784
mod = relay.transform.InferType()(mod)
output = func_6784()
func_6785 = relay.Function([], output)
mutated_mod['func_6785'] = func_6785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4637_call = mod.get_global_var('func_4637')
func_4638_call = mutated_mod.get_global_var('func_4638')
call_6825 = relay.TupleGetItem(func_4637_call(), 4)
call_6826 = relay.TupleGetItem(func_4638_call(), 4)
func_6642_call = mod.get_global_var('func_6642')
func_6644_call = mutated_mod.get_global_var('func_6644')
call_6838 = relay.TupleGetItem(func_6642_call(relay.reshape(call_6825.astype('int8'), [])), 0)
call_6839 = relay.TupleGetItem(func_6644_call(relay.reshape(call_6825.astype('int8'), [])), 0)
output = relay.Tuple([call_6825,call_6838,])
output2 = relay.Tuple([call_6826,call_6839,])
func_6851 = relay.Function([], output)
mod['func_6851'] = func_6851
mod = relay.transform.InferType()(mod)
mutated_mod['func_6851'] = func_6851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6851_call = mutated_mod.get_global_var('func_6851')
call_6852 = func_6851_call()
output = call_6852
func_6853 = relay.Function([], output)
mutated_mod['func_6853'] = func_6853
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5938_call = mod.get_global_var('func_5938')
func_5940_call = mutated_mod.get_global_var('func_5940')
call_6887 = relay.TupleGetItem(func_5938_call(), 0)
call_6888 = relay.TupleGetItem(func_5940_call(), 0)
output = call_6887
output2 = call_6888
func_6910 = relay.Function([], output)
mod['func_6910'] = func_6910
mod = relay.transform.InferType()(mod)
output = func_6910()
func_6911 = relay.Function([], output)
mutated_mod['func_6911'] = func_6911
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4880_call = mod.get_global_var('func_4880')
func_4882_call = mutated_mod.get_global_var('func_4882')
call_6915 = relay.TupleGetItem(func_4880_call(), 0)
call_6916 = relay.TupleGetItem(func_4882_call(), 0)
func_3629_call = mod.get_global_var('func_3629')
func_3635_call = mutated_mod.get_global_var('func_3635')
const_6919 = relay.const([[-8],[9],[-10],[6],[-2],[8],[-5],[3],[-6],[-6],[1],[9],[9],[4],[-1],[-4],[-7],[10],[9],[5],[-8],[-3],[-9],[-8],[1],[-1],[9],[8],[-5],[7],[-9],[2],[-3],[-3],[10],[-4],[-2],[3],[7],[-6],[5],[-9],[-7],[-4],[9],[6],[-2],[6],[-3],[-8],[9],[-3],[-2],[4],[-10],[-6],[-10],[-3],[1],[-9],[1],[-2],[6],[-10],[5],[3],[-1],[6],[-7],[-3],[-3],[-3],[-5],[9],[-4],[-10],[-6],[9],[8],[-2],[-9],[-8],[-3],[6],[-7],[6],[9],[10],[-6],[1],[9],[-6],[-2],[6],[6],[5],[-3],[10],[9],[8],[6],[-5],[-5],[-8],[-6],[-2],[8],[8],[5],[-2],[-2],[-10],[1],[-4],[3],[-6],[8],[-3],[-6],[6],[10],[7],[-8],[-10],[10],[7],[10],[-8],[-5],[-1],[4],[9],[-7],[-9],[-3],[-5],[4],[1],[-8],[6],[6],[10],[1],[6],[10],[-6],[3],[10],[-8],[-4],[-3],[4],[-2],[9],[7],[-10],[1],[8],[9],[7],[1],[6],[1],[-5],[5],[9],[-10],[-5],[-7],[6],[10],[-8],[7],[-2],[-2],[-8],[6],[-7],[9],[5],[-3],[2],[-7],[-8],[1],[-2],[-2],[-3],[-8],[7],[-8],[1],[8],[9],[1],[-3],[-10],[10],[2],[-4],[1],[-4],[-8],[-4],[-4],[4],[-6],[3],[4],[5],[-8],[2],[3],[-5],[-9],[8],[7],[-5],[-8],[1],[9],[-1],[-2],[-3],[8],[4],[4],[4],[-9],[2],[10],[-9],[1],[1],[-4],[1],[-8],[10],[-7],[-6],[9],[-3],[-7],[2],[-7],[-3],[-6],[5],[-8],[-7],[9],[-6],[10],[-8],[-7],[6],[-6],[10],[-5],[1],[-1],[-9],[7],[-6],[-10],[-5],[-3],[-9],[7],[4],[4],[1],[-6],[-5],[-7],[10],[-1],[7],[-3],[-2],[6],[-6],[-10],[-1],[-10],[2],[-2],[4],[-8],[-8],[-5],[3],[9],[1],[2],[7],[-3],[-6],[5],[10],[2],[-1],[-7],[-4],[-4],[-9],[1],[3],[3],[2],[-9],[3],[9],[5],[-7],[-1],[-10],[-5],[5],[-1],[-4],[-8],[-2],[4],[8],[1],[4],[-1],[1],[7],[4],[-9],[10],[1],[-5],[-6],[3],[-3],[6],[-10],[-3],[4],[-5],[10],[-1],[-6],[-7],[-7],[-10],[2],[-1],[6],[4],[-8],[-9],[7],[-9],[9],[5],[10],[10],[-1],[2],[4],[8],[-7],[4],[-10],[-5],[1],[9],[5],[-8],[-4],[6],[9],[1],[-3],[-9],[2],[2],[-6],[-5],[7],[7],[3],[5],[-5],[-4],[7],[2],[-6],[-9],[-3],[5],[-6],[9],[3],[8],[-5],[9],[10],[7],[10],[4],[-1],[-5],[-9],[-7],[3],[-2],[-7],[8],[-4],[-2],[-1],[8],[-7],[-9],[-8]], dtype = "int8")#candidate|6919|(420, 1)|const|int8
const_6920 = relay.const([0.287622,-3.137898,-7.031444,-7.313907,5.938219,5.979873,-6.346845,9.362983,-0.394881,0.083223,9.525692,8.951803,-0.383797,-7.582217,-1.844352,5.625071,2.239163,1.233191,-9.639790,-2.133805,-2.113781,-7.414968,-4.912746,6.452187,-5.904676,-1.004091,8.159158,3.640465,8.216957,5.226710,-3.461424,8.727840,-2.402047,2.338707,-1.917439,-7.493559,0.822270,4.450857,1.280602,-8.302940,9.962089,6.405399,-1.115059,8.919009,-5.770724,1.944614,1.921835,-4.473229,5.514347,-9.293969,-0.038009,-0.673045,7.389211,0.008810,-0.394538,-7.184955,-5.234704,-7.989100,6.355922,1.211242,-5.826596,-3.106147,8.556970,-1.261372,-5.848577,3.229649,9.893970,-3.517616,2.309168,0.730394,9.692727,-4.645498,-0.847466,-6.051069,-5.830003,1.797530,-9.290715,-6.935998,8.484280,-5.363663,-7.327382,-2.210490,8.053480,-6.649131,-3.797495,-8.401426,-3.155324,-3.682713,-8.627995,-1.284722,-0.851910,6.189377,9.395161,-7.034500,-3.989378,-6.145765,-0.208594,9.064561,1.043334,7.329127,8.184775,6.005787,-2.536727,-5.355787,-3.119876,6.774705,5.689951,1.103309,-8.541775,0.543706,-0.528632,9.565972,-0.436991,-7.300354,6.891528,4.813472,0.848388,-3.141554,-9.018921,-3.404931,0.776575,4.788302,5.951520,8.184064,0.256744,-7.917021,-5.698377,-4.514066,-0.903363,-8.914891,-0.278160,8.171783,-1.303142,5.811609,-9.807166,7.971868,4.118283,-0.502257,9.607457,3.698724,-6.059118,-9.355016,0.018344,3.332913,9.610420,0.978139,-1.278437,7.497455,-4.871671,0.287787,9.652260,-0.208205,-8.699616,5.659083,-9.744575,-1.004513,-2.775451,1.950300,7.937019,-7.205937,-8.399492,0.534059,-6.963539,5.531694,9.777330,0.989201,1.948939,-6.373239,9.397356,1.160730,-7.001369,-7.238538,-8.424639,-1.590875,4.820910,-7.272438,8.634436,-4.027737,8.663102,-2.894083,-9.558667,5.796586,-0.803726,5.022684,9.851678,9.373988,-7.766889,-9.816856,-8.265624,1.456088,8.756179,5.167536,0.643703,-1.311037,-2.820729,4.902128,6.207663,-8.614840,-6.668051,8.059638,8.056830,6.217484,-6.350861,-3.322222,4.317948,-8.431369,-7.631337,9.786648,7.498915,-0.706939,-0.535853,2.359310,-1.174259,2.153551,2.862902,-8.195461,-1.442579,4.233595,0.017530,4.906614,6.482067,-2.903318,0.802920,3.173554,8.623241,-5.946971,3.014569,7.167066,-1.269904,3.179705,3.198608,-2.824512,4.516493,4.860298,1.077393,5.374909,-7.882035,-7.342517,7.458328,8.742469,8.235394,0.096302,9.422152,-2.775848,6.380604,3.984923,9.237354,-1.638716,4.227874,-2.783073,-8.306086,3.046856,2.000181,3.324968,9.558514,1.496913,-1.475373,-7.333043,-8.873485,1.268165,-7.716941,-0.401448,-4.021510,-0.115178,-0.904670,6.548479,6.876644,-2.132025,-5.755197,5.845976,-3.827825,4.126026,3.927963,-8.992377,-5.819084,-6.564329,-0.212384,5.108425,0.556330,2.718873,-0.765505,0.929142,3.224976,-0.648351,3.331281,-2.814870,-6.780204,-7.878350,9.427348,1.964437,3.235581,-6.910461,1.428514,-6.532743,7.176198,-4.962811,-6.228163,8.824588,6.210311,-1.850611,-6.843524,-6.148095,-5.420695,-3.649362,0.512568,1.768850,8.759423,1.363195,8.522943,-9.157590,5.522483,-6.453453,-5.503752,4.548007,3.959303,-3.139303,-6.574108,3.081285,7.281960,-8.175580,7.405750,3.934783,6.451079,8.222231,8.358083,-9.464610,4.409465,-3.368580,-0.628517,4.969393,0.724498,6.034574,0.166750,-1.992760,8.940108,9.182091,1.828343,7.205279,9.246097,0.635419,-3.492970,4.467579,3.717895,9.411578,-1.911878,7.878817,-5.908699,9.771332,6.261602,4.972847,1.604328,-4.530568,3.425163,3.949970,-7.638382,0.089550,-4.855755,-6.572113,9.494380,-9.164828,8.969602,6.948911,-8.217588,4.998117,2.856612,-9.839510,6.421033,8.414017,3.518347,-5.098657,3.341490,-2.080718,-0.252305,6.815890,5.154140,6.479367,-8.916396,-7.979751,-1.885866,-8.222042,-2.314509,-4.737779,0.346699,5.194984,-4.105493,5.440031,3.166309,-3.024380,-4.577785,9.381076,3.874492,-4.855453,-7.008197,-3.191056,-6.721827,-2.851681,-4.138114,4.923915,-5.603297,-3.219811,-8.954625,-5.732654,7.888046,1.684888,2.387129,9.258302,-4.966700,-5.681932,9.571186,8.764278,0.122644,-6.695464,-5.904277,-1.846798,-1.532649,7.066855,-9.525001,2.280955,-0.157377,7.369178,5.904965,-2.022184,7.114799,-8.915760,-8.746929,-9.070823,7.288461,2.844028,-9.678179,-7.489877,-6.077897,9.802967,-4.785044,-4.937029,-5.323240,-2.322884,8.785172,7.281203,0.621928,3.921998,4.312628,7.991297,-9.525516,-4.303034,-2.464291,-8.809898,-0.975089,7.143814,-4.019366,-7.828926,-8.582487,-4.828035,8.423133,-6.565626,-4.104433,-0.551479,9.825472,-6.182919,-5.125363,0.768698,-3.535952,8.256643,5.308079,4.715473,2.132607,-2.476323,-6.868766,9.037748,-2.800570,-4.380986,8.035364,-6.201347,-4.563556,-7.686704,5.603505,-7.159029,2.347610,9.335117,-9.867418,-3.985360,-3.559077,2.926490,-8.575324,-7.782157,-1.097405,5.902134,-2.410931,1.307139,-5.627807,0.408085,6.996129,7.733402,-5.256098,5.138135,7.846836,-0.336978,5.341985,-1.667033,-6.074781,-7.315755,1.218554,-3.188101,-8.669285,2.371458,1.125203,-5.188543,-2.307050,-0.005643,-6.230445,2.354438,0.120202,7.763211,-6.328282,-6.090135,7.029698,8.547678,-9.372492,-2.448457,5.322374,-0.098779,-7.323006,8.243706,-5.616662,0.817763,-8.251840,5.970289,-0.417993,-2.394488,-5.061602,0.400701,3.260202,0.745210,-4.633862,-3.736272,2.919278,9.070442,-6.420781,-2.329634,-4.418239,6.251458,-9.857048,-0.794574,-9.523422,8.458183,-2.159773,-8.775216,-6.306930,9.789024,8.336644,-7.937952,-4.750421,-0.813027,5.930327,-3.444285,1.280807,-4.254219,-8.595384,-1.053825,5.617684,7.236803,6.962152,6.738809,8.843218,-8.076564,6.923472,5.964977,-9.581622,-1.488158,-0.909185,6.244165,-4.002225,-0.009353,8.917610,5.581466,-3.067677,-9.321071,-5.231775,2.330471,-9.863014,-5.157925,7.605949,-1.262039,-7.295709,7.783080,9.902450,-0.320725,-2.415603,-0.088957,5.745684,-6.421934,-8.566986,9.535518,-3.142036,5.546718,6.986175,-2.054147,5.565263,-4.831275,9.695106,8.836597,3.803677,8.048859,-9.956154,4.468725,3.143314,7.274231,-7.902721,6.936268,-4.554967,5.188686,-4.183247,-7.346335,-3.832027,5.779183,-2.030044,-4.913727,-5.823907,6.375710,2.081544,4.759012,-5.240859,3.131112,6.510675,0.868057,7.068049,3.307292,2.077786,0.034945,4.982077,8.270134,7.363971,6.225473,8.644814,-1.155454,0.961817,-3.823997,2.636961,-9.003192,-6.460917,-6.700123,-7.745577,7.925314,2.958342,-3.759355,-2.354737,-6.873687,8.786799,1.554920,-0.196660,-1.500997,8.032561,3.822175,-4.875450,-8.732858,4.905801,-7.877813,-3.092730,6.433118,-7.807928,-2.170152,-5.510092,3.402609,-3.695648,-8.698580,-6.347211,-3.323484,6.515207,-4.738066,8.069919,-6.068995,0.952564,0.681932,0.577300,2.644147,-9.677582,-3.493007,-0.238103,-5.931900,-4.258796,3.260878,0.815436,5.145170,1.273312,-5.372516,-4.081379,-5.117881,6.720695,3.570086,-5.795852,7.267693,5.028706,5.701689,1.849346,-5.759834,5.937785,-8.484599,-9.360620,0.515405,-2.054094,-6.575470,7.148774,-5.470737,-9.369989,0.651738,7.296164,7.552508,-5.198025,-3.117575,9.237228,2.922566,2.544938,7.299798,9.624489,5.324013,1.619274,-6.287968,-1.236902,8.196403,1.488272,-7.986037,0.204140,2.975564,-8.425243,0.607426,-3.519561,-2.317630,9.052537,8.999279,6.206954,-4.682010,6.255862,4.773270,3.367528,-6.595159,1.563136,0.560999,7.577556,-8.164485,3.122014,8.578321,-8.317923,2.729359,4.550366,7.720348,1.250804,0.489754,-8.490853,2.193958,-7.465377,-1.070582,-7.898031,-8.412002,-0.852369,6.147642,1.727138,-7.740106,6.837434,0.085776,-9.054316,1.054958,-7.799091,-5.359743,3.046929,-8.526404,-9.187483,8.300922,9.191855,-8.773186,-8.226417,6.280474,-1.866622,5.668470,9.139137,-2.820533,5.175650,7.012739,5.527450,4.767132,4.402443,-3.421003,-7.744213,-7.270429,8.496279,-4.865339,8.543205,4.209406,0.091427,7.304821,4.153316,-8.766932,1.807150,-5.773897,-3.114180,7.530388,-5.970689,0.723307,4.013401,-7.923276,-2.914528,-1.963316,-1.312661,1.097171,-0.904041,-7.132196,-4.338589,3.089075,-2.760511,-7.665901,4.126466,0.921541,9.724836,-7.777025,-9.271149,-1.811999,6.128449,-3.794966,-1.044025,2.684350,-1.371116,5.596329,0.954666,-9.304144,-9.609454,-5.160398,-4.790291,3.953773,-5.446077,-4.906047,-7.438344,1.995001,0.687209,9.098078,4.497761,2.175250,-1.720205,-9.031015,9.839500,-2.569862,-0.314489,8.167210,-2.693307,-5.524576,-5.363337,7.229947,5.186214,1.555344,0.676772,4.659798,9.557984,-9.806091,0.248882,8.020059,-3.552513,-6.898525,-2.788672,2.727322,0.328950,0.101544,0.766363,-1.308963,2.728614,9.556414,5.471251,4.584749,4.019130,-1.422856,4.797994,5.291799,1.825815,-6.742256,5.062756,-0.093793,2.886059,4.491927,0.180418,-3.020184,6.267525,8.785333,-2.261497,6.525236,-2.421962,-1.969411,-7.567199,0.854885,3.259513,3.096953,-6.011642,4.017792,-6.970964,-3.205098,7.682446,-0.724383,-8.733710,1.187730,6.913393,8.926381,-3.573803,0.654451,2.190133,6.253498,-9.553942,-6.876674,-9.229751,-0.986314,-6.078833,-5.547965,4.900294,-5.270789,-9.131416,-6.809888,-2.443902,-7.287597,3.325657,3.378174,-2.909501,-2.507485,-2.654941,8.682408,-7.292680,6.254691,-8.072644,-6.842205,-6.961972,-9.570148,-4.045700,-9.651124,-5.483791,-4.325549,-2.877195,-1.357536,-4.096173,2.867365,1.847373,6.506780,6.517138,-7.448325,1.806217,2.491606,9.306433,-9.002255,1.110254,1.666669,6.660319,3.938555,2.448260,9.205355,-0.828730,-2.944595,9.577981,-9.709148,-4.222765,5.020376,8.755409,-0.163233,-7.477874,2.019970,4.529899,2.610903,-9.527653,2.932993,-3.375094,0.735016,7.236329,3.881898,6.961015,5.216204,-7.815792,5.951197,-3.406161,4.268347,6.510386,-2.744961,9.389381,2.255179,-7.436980,3.999663,9.325017,-9.543743,1.987831,-3.681116,8.376795,-7.084919,-5.340481,9.012716,4.719644,2.900227,3.137945,-4.905257,1.933587,-7.102071,-6.201198,-1.900348,-3.647637,-3.753408,-8.209466,2.145042,9.575448,-5.301904,7.655736,-5.041438,-6.437175,7.335881,2.160755,-5.143191,-1.561615,-6.180746,-0.113000,-3.357188,6.840466,-0.204681,5.173581,3.735617,-6.540671,-5.252393,-1.774243,-0.011173,-0.457754,-6.288596,6.723146,-8.580944,-7.209488,-3.144747,-6.048378,1.231984,-0.867054,1.220545,7.493352,-3.411003,-6.937791,-6.783685,3.508535,5.377451,-8.095538,9.806417,-5.059616,0.794813,-1.498360,-3.342895,7.395001,8.475321,1.575422,9.560268,5.304411,-8.689097,7.938444,-1.865408,-3.180144,-0.211275,-3.926269,-2.476158,-7.073511,3.911638,-1.315322,1.206832,5.472921,6.908193,1.936639,-3.795578,-0.885735,2.812518,1.655214,-5.370696,4.613315,-8.811131,-5.890780,4.077837,0.912983,6.179540,-2.285955,8.403591,8.197940,-5.720568,6.483191,-5.760082,-5.833087,4.916068,1.128888,9.839338,2.102171,-8.762625,-7.523982,-6.374845,-2.307388,7.009058,-0.224907,6.148996,1.080220,-1.667765,-4.497514,-9.915418,-3.959985,-0.754988,1.810527,5.425871,1.975568,-4.078782,5.147254,7.565016,6.925514,-1.656679,0.827893,9.882323,0.623656,-8.645489,-0.689759,-5.344924,-5.770551,4.880003,-5.294146,-1.029096,-8.555558,-1.894731,7.910145,-7.622257,-6.628895,-7.696294,-9.075243,3.452589,-0.995414,8.664029,-8.189619,1.195699,-2.303203,1.923109,0.199692,-2.892912,-5.061575,9.157312,4.418109,-0.380275,-6.745591,0.028888,2.591234,1.305583,-4.443808,-3.939703,-0.280788,-9.565657,-6.755423,-4.414090,5.727235,-8.285632,6.679074,-9.467760,9.209596,-2.755623,6.135802,-1.685967,-2.917602,-0.854872,-0.193458,-8.098759,1.357557,1.231763,-2.108767,0.900655,-5.427629,7.121798,-4.561611,-6.353671,7.885139,1.235810,8.197054,7.514507,4.404192,-3.283597,-9.088005,8.119055,1.667950,-4.637722,-9.521183,-8.241970,4.415346,-0.038504,8.311606,8.859476,1.777878,3.459298,-8.298153,5.151150,8.731554,2.313456,-8.007787,1.616391,3.952113,0.928501,8.956670,-6.029396,9.296257,-6.729401,-2.402795,1.409133,1.741937,-6.282398,5.901361,0.863022,4.950503,6.959261,5.472054,-9.216531,-9.264568,-3.495387,2.352567,-2.469557,9.520239,5.743754,-8.179982,-8.847841,6.514710,5.934813,-5.026354,9.136849,4.639338,4.677137,5.054516,7.996125,4.739153,-9.082571,-6.603901,1.108905,0.955058,9.791810,-6.710511,3.608125,-4.491961,-1.762429,-7.238129,9.185929,-0.282540,-1.879615,-4.218725,4.568060,-1.041769,-1.821876,-9.078990,-1.796351,-8.886078,8.062891,5.169149,-7.384958,1.492556,-2.479753,2.680044,4.164972,-3.235845,2.760049,3.752793,-6.155580,-8.986268,1.429596,0.596772,9.505447,1.027156,-6.765647,6.278787,5.282548,8.867029,-0.629419,2.021043,5.839652,-4.149889,-7.088720,2.981518,2.415316,0.450138,7.104146,-7.595808,-1.090610,3.322847,3.900362,3.691908,-9.352469,-5.395034,0.215680,-3.248774,-2.500473,-1.266095,0.913343,6.210078,9.439359,2.274436,8.034908,2.458490,7.191925,-2.523761,-1.178991,9.730670,7.306293,6.036651,0.416032,9.963181,-0.879605,-9.171019,2.034559,-2.532547,-6.174937,7.527295,-8.862779,6.565829,-8.379685,-0.039598,-2.046510,7.867426,1.921177,-2.006327,-6.895711,-7.430341,6.240285,-0.288002,1.068147,-9.781301,-8.984561,9.986672,-8.467660,2.204233,2.524193,6.447275,3.838362,6.685594,-9.653249,-5.124242,4.215448,1.843322,2.764814,8.623481,6.602569,3.180319,-0.546198,-7.815560,4.838721,4.224331,7.750184,-8.700397,8.057912,3.201336,-9.028397,-6.703493,7.127773,-0.580432,-3.515804,1.540735,0.846943,4.208111,1.096933,8.610841,6.969555,7.899834,7.225077,-9.192322,4.369258,-9.213505,0.583993,1.142658,7.913938,6.469012,-4.418762,4.488523,0.075194,0.408492,-4.735311,-1.250117,9.168814,-7.261136,2.401405,3.698696,-7.019517,-9.773879,-8.608277,-2.059950,-7.716394,3.235222,-3.713624,-2.723553,-0.731040,9.829337,-4.560184,-6.325995,0.904004,7.006226,4.970870,-6.239609,-5.432910,2.576163,-1.393050,-4.007086,-6.314760,0.948075,-5.383496,-5.810553,7.192214,1.552240,0.618192,7.973959,-3.257484,-2.000079,2.129832,-1.798442,1.687916,5.729061,6.037518,-6.089261,6.046768,6.236358,-0.867947,-0.784220,6.747118,9.047043,-9.533174,1.315399,3.536819,-9.453026,-1.643681,3.738570,0.575578,-8.197219,-7.529876,-9.730470,-1.967939,-8.580221,3.230286,9.270494,-5.772406,-0.963241,4.397146,-6.644466,8.265568,-6.889546,8.250046,0.620064,-9.747115,4.017283,1.326852,-2.055681,2.954733,-0.494894,-9.768013,9.568604,-2.461654,4.084553,-3.892663,8.546465,-1.387231,9.902092,5.719452,-1.699938,-5.891999,-3.715881,1.579043,-4.884591,1.311629,-5.793905,-7.972582,5.065024,5.625490,-5.332393,-5.262000,3.050677,9.756448,-6.676726,5.137783,-4.012840,-5.800207,8.898856,-9.293895,5.403885,-8.311152,5.113944,2.405620,-9.989074,4.710341,-0.261029,-7.594012,-9.111477,5.376745,-8.984761,-3.965919,-2.201373,1.771266,-3.745901,2.901877,-6.807100,9.379703,-4.663083,-5.686717,9.245884,-7.729441,8.693289,9.011749,-5.322804,-9.564321,-3.249953,-3.655833,6.282717,-4.373612,6.466780,4.161534,-2.316298,7.393066,-3.392749,3.063071,9.941346,8.410226,-0.937956,-3.366260,2.743685,5.253990,6.750493,1.500390,6.916336,9.993554,7.159405,-3.411597,8.789299,5.120458,5.149927,-5.134036,-4.801273,2.016061,-7.832664,6.212486,-4.886598,2.357180,-3.146060,8.191659,5.376089,-4.663438,6.937931,-7.983884,-1.330874,-9.874551,-7.815973,-6.873648,5.247462,6.632512,-5.421709,0.116197,1.720912,-6.411216,5.318190,8.307103,-7.664587,-1.228406,3.509809,4.000282,-8.642081,9.176997,-8.497131,5.163857,-1.539114,1.317459,0.964338,7.766332,-7.575641,3.289068,1.953577,-0.645432,-9.338118,-5.824919,7.968115,-3.669371,3.751321,-5.821125,6.756221,1.191401,-5.317516,-3.800942,-4.184084,-0.500311,-8.531071,-3.823872,-6.140925,1.434401,0.219440,-9.034326,9.151423,-9.223953,4.090967,-9.089642,-0.756731,-1.738948,8.792260,3.879077,-4.403712,-8.535506,4.329923,0.611140,6.010184,-9.616059,-1.548194,2.200662,4.146334,-9.351500,-8.701676,-2.317781,8.302982,5.436075,4.014924,-8.130100,-0.127277,-7.047376,9.189823,0.646226,3.289465,-7.344465,8.398666,7.372530,1.383736,0.705349,2.755056,6.312253,-2.853131,8.995685,3.905501,6.389230,-9.819348,3.140068,0.790999,-8.097504,-5.193928,-0.503687,-6.969729,4.771424,-4.125798,9.407453,-6.686717,-5.072549,9.334375,-1.166324,2.960508,-1.987907,-3.564490,8.842853,-5.310992,-2.786230,-2.672017,-1.194193,-6.461868,7.152953,-1.723966,-4.677309,5.441548,3.265594,-2.955833,3.182944,-2.299645,7.749184,9.151036,-1.268767,-9.219763,-0.448484,-2.518299,5.994320,-0.564163,3.411880,4.628942,6.493120,-9.802365,3.701656,9.610139,-7.807759,-1.738665,-8.351814,-2.567258,-3.432065,5.922888,-6.520894,4.796545,-4.465406,-8.025935,1.854680,-8.717907,-7.523466,1.981534,7.590900,-3.975415,-7.131460,-3.924146,-7.610849,-5.889651,2.178591,7.072012,0.847812,-8.750948,4.925627,4.073581,-3.814594,0.894517,-7.941476,0.566372,3.034767,8.604013,-4.684961,-9.774181,-0.348578,8.592331,-1.994188,9.597997,-4.341005,-6.216007,-0.855697,-0.782932,8.165123,3.946883,-4.938010,3.396771,-7.546156,-1.457530,-3.740947,1.256792,5.969583,1.408751,-4.197154,1.280104,-2.343562,-5.129008,4.430734,7.932558,-1.742400,-4.124295,5.054550,5.116580,-5.147404,1.247721,-8.575476,0.720237,4.149026,-1.864037,-0.798931,-6.017895,1.642443,9.176780,6.362530,9.473232,-2.354633,2.044304,1.424303,2.648143,-2.149097,4.034093,-6.777686,-4.695956,6.659482,4.981313,-0.550902,-9.281888,-8.376751,-2.480127,-3.169679,4.847844,1.779589,4.970889,5.107859,-2.493580,1.056434,6.456265,-3.615879,0.915254,-3.891433,0.629461,0.828888,-4.036811,-2.292516,6.927844,-9.102386,6.705428,8.129615,-1.858098,8.690067,-7.960004,-0.920860,-6.814896,2.271675,-6.435423,-5.695567,-4.293139,1.370175,3.545271,0.673051,0.892851,-3.626865,5.475274,3.492250,-5.719502,-1.085208,5.671389,-2.727546,-5.837252,7.055183,6.005450,-8.631274,2.577099,-7.867919,8.686066,-6.612868,0.632915,0.789971,-5.455563,9.357686,-8.066716,-2.905274,-4.363299,2.497086,-1.137530,-2.631147,1.069636,-4.115596,-5.946351,0.157913,-0.334032,-0.727741,-7.116479,1.534390,-2.276361,-9.463628,-1.335553,-5.318292,0.026802,3.869672,4.627218,-5.005934,3.998063,0.434421,1.095643,0.695613,-8.724869,-0.986558,-4.320236,-9.240889,-2.117621,2.057897,8.142947,0.305311,0.072644,-7.942978,-5.347355,2.487606,0.983753,-3.351790,-5.089707,8.587055,4.961416,2.325961,5.993014,7.852200,-1.558731,-0.575073,-2.563431,0.183664,7.154920,-6.600774,-7.261178,2.898827,3.279037,-5.819378,8.800876,-3.847565,8.001947,-5.504685,5.166497,-1.368391,-3.217155,9.383131,8.119089,5.586996,1.584125,-9.779816,2.972086,8.372121,3.281067,-5.571576,6.595641,-7.188446,3.907356,4.739055,-1.678517,-5.693894,4.291070,5.085045,-3.090108,3.757457,8.690926,1.652554,9.319314,8.909305,0.407608,3.458316,-1.320771,8.095149,1.073693,9.813800,4.087046,-4.667069,3.781424,5.993068,-5.461649,6.151524,-0.622527,2.429030,-3.327026,4.178065,-7.411942,-1.957961,-0.976853,-3.596919,9.785938,1.739751,-6.150163,0.093438,3.085368,9.103570,1.381307,8.170613,-5.470822,8.005994,4.386965,-5.900920,9.134064,2.781086,-6.637138,8.766108,9.191437,-6.719274,9.025826,4.545583,-8.106840,-0.051422,-4.101967,-5.632667,-9.826794,7.775907,-3.419733,-0.124531,-2.474284,7.666441,6.923585,-8.856398,8.802916,-2.967144,-3.263535,5.096856,2.210303,-9.051300,-7.090316,-8.451892,-1.235419,-8.370758,8.940283,3.846794,-2.981695,-3.825154,2.012936,-8.747732,-0.851444,0.395631,0.553885,9.640640,3.312004,-2.215023,-3.681924,-5.013715,-9.875420,2.127301,0.924051,9.939499,0.171809,-1.944528,5.089980,2.258242,8.640187,-8.045598,-8.237989,6.811431,-3.973573,6.782170,-4.031871,9.240036,-6.575995,-2.964915,9.933275,-6.004685,-9.596952,-5.031596,6.632316,8.920452,-8.758829,3.999175,0.895949,-6.976939,-5.709850,0.914152,-7.207778,9.582575,1.990752,-0.664968,-7.893614,-7.092340,7.799484,-6.102622,-3.601433,-1.231604,4.334461,3.933177,-2.374591,-7.599475,3.375023,-3.112571,6.781238,8.856502,1.321766,9.298262,-5.382384,-6.287314,-1.615842,-4.407901,-5.665833,-9.491244,1.242270,6.295554,4.677494,-6.928644,7.758384,-1.930414,1.459854,3.730473,-5.558301,-0.972310,-6.548077,-8.557075,4.065369,-4.246938,3.445858,5.696038,-8.648611,9.612417,7.114191,1.699915,-5.701752,6.078325,6.669826,-9.784850,5.958240,-2.858234,-9.902276,4.073128,7.849580,0.536429,-9.580937,1.019292,8.310904,-6.005658,2.688005,1.635458,-0.692233,4.479398,-3.399883,1.499147,-6.715398,8.097395,-8.070875,-5.801737,-4.052265,4.255498,-0.243914,-6.071627,1.196952,-0.368037,-7.352647,-3.925149,-6.696639,-6.607924,4.664835,4.018130,7.574605,-1.054990,4.676530,3.288091,8.970605,-6.925671,-4.955412,6.043492,2.839527,-3.472220,-0.339613,-7.873157,-7.465176,7.200172,-7.391375,0.599540,7.365474,-5.911392,-7.083164,9.481262,-8.092004,0.599682,-7.181166,-2.731823,7.561113,6.103410,8.607840,-7.096900,-2.349981,0.259300,-8.177815,-2.636007,4.790978,-5.119930,-4.578739,5.194825,6.137596,3.057838,8.220030,-7.879478,-8.475489,-0.624309,0.271576,7.528537,-9.691525,3.934322,5.807446,7.496593,-2.920019,-0.795941,0.758451,7.980608,8.942388,-0.997310,-1.405345,6.634694,-6.666942,-0.328078,-3.931768,1.690642,-5.871047,-3.646944,-9.968498,-2.399875,3.640297,2.619872,-9.273690,-1.268843,-9.159008,6.085684,3.611623,0.398233,-9.941635,8.478061,-1.141029,-6.181056,0.452227,-2.304036,-8.057406,-2.911857,-0.593691,-8.312712,-3.370761,-2.689372,1.844064,9.148763,-5.451132,-8.504797,-4.278991,0.970260,-5.535962,-5.161122,-6.399106,1.017127,8.643986,0.809637,9.202391,3.391750,-1.763520,-5.735773,4.344078,-9.697231,7.241425,-2.729868,-0.643280,-3.512195,9.288139,4.326532,6.849370,-8.194572,-7.391026,-2.184266,4.603903,-4.047022,7.026589,3.154144,-1.772728,-7.576189,-0.672038,-6.183942,7.414378,0.130842,3.304275,-3.500672,9.349362,7.012093,-7.978174,-6.314919,2.971581,5.092108,9.039545,3.585931,-8.577365,9.305536,7.798569,-2.623198,-1.363643,8.627525,-3.205279,4.891228,7.108964,3.360332,-4.044669,2.423195,-4.756817,8.459587,-3.563591,-3.967940,-2.114545,3.246219,6.896562,-2.454547,-5.103124,7.919238,-1.595313,-8.339969,9.858563,9.203404,7.312911,-4.053093,-1.234623,-5.923076,-2.990340,3.724129,-5.197580,-8.299168,-9.751696,-5.170124,7.309253,0.347421,-1.589244,0.349967,-3.224637,9.163730,2.398400,0.020861,4.699186,-9.131081,-0.756414,1.164084,2.519455,-7.546248,-4.603869,-1.332185,-0.875040,9.787599,0.241304,0.418859,-6.910463,-8.963697,-5.087827,2.879993,9.678553,1.191818,3.127568,-3.372185,6.806438,0.973920,7.110012,1.259551,4.610942,-6.759146,4.284730,-5.355284,1.084528,7.283346,9.606013,8.326332,7.989529,-9.137169,3.373706,4.384353,-1.157701,5.582307,-3.668375,5.653459,5.063984,-3.491560,9.374841,-5.206040,9.592729,-5.094648,-8.886657,7.096889,5.838382,1.183546,8.571760,7.745037,7.220737,0.366125,4.178786,5.013112,6.486821,3.229397,4.864410,5.435866,5.349206,4.765141,0.962879,4.405803,-2.301758,-4.846966,3.512211,6.808575,-6.821695,-9.437472,-9.539953,-8.211660,-9.342228,-6.151663,-5.403013,-8.882139,-3.194117,5.934396,7.642590,-3.758156,0.569042,7.415447,-5.202011,4.686350,5.538535,-5.607278,-1.468064,4.048372,-8.606283,-3.795182,1.021532,-7.769976,-4.966866,-5.370354,6.217725,1.376044,1.187724,5.651560,-6.203142,-4.473586,0.943526,0.948044,5.444463,-8.070523,-4.518821,-5.883022,9.983799,4.683027,6.149034,1.297003,-3.039111,3.038536,5.435100,0.660546,-0.450599,-8.035311,-3.586592,4.548113,-8.344146,4.265396,-5.128198,1.243531,4.208459,3.324839,-6.124793,9.646742,2.242933,-0.013146,1.454905,-3.565301,7.708533,1.501690,-4.382722,2.909702,-8.674711,-5.344543,7.499448,9.476151,-6.792153,3.920848,2.559677,-9.971206,2.410210,-2.507412,-3.449406,-3.346062,1.101434,-0.700977,-5.914878,-4.086297,-7.230780,7.980010,-5.943823,-7.793505,1.954482,3.511689,-7.311007,-3.128057,-0.515840,6.301888,9.651737,-0.585175,7.516308,2.464262,2.148550,5.002572,-2.761274,9.427190,8.094046,4.666690,6.408583,4.032179,-0.815089,1.544538,-4.778586,-9.119281,5.359821,-3.574554,4.813468,-3.915614,-4.155866,-5.753327,9.724900,7.984783,-0.015919,2.465418,-9.271874,8.765727,-4.781974,5.709703,6.394630,0.462343,8.000426,-6.477030,2.288909,4.841016,-6.200085,-6.210492,9.098608,-1.465012,-4.424984,7.708252,-7.929577,-5.434939,1.359473,-4.789633,7.168362,0.667682,0.233067,4.510739,6.982347,-4.864573,-5.634753,3.165396,3.342602,7.591243,8.113422,-6.890917,-8.579715,9.085217,-6.738183,-2.307463,5.651845,-0.638822,0.228573,3.309723,-6.665644,-5.000595,-5.783122,-7.375874,2.702907,5.113786,-8.418632,6.160284,-2.716726,6.438667,-4.764176,-8.254542,6.904904,-6.533600,-2.131235,7.643316,-1.530395,-3.213893,2.245996,-2.704631,-2.750863,-3.015387,6.682902,3.212490,-7.604930,-3.605582,7.159108,-2.908927,-3.308130,3.403618,-3.530649,3.437686,0.183203,4.029655,6.283162,3.555237,2.461674,-3.001765,4.297362,5.860789,-9.143721,-8.055721,-2.203109,1.140620,-3.305508,-8.571780,2.425352,5.774384,0.294603,-6.637248,-8.218655,-6.837270,7.065577,-8.176234,7.021179,-0.011369,9.713575,1.325114,7.792260,-3.002701,0.840573,-9.525000,3.350198,3.997763,-9.428202,3.298571,-9.578679,-4.654569,-9.406485,-5.698789,-0.040142,-5.802902,-3.271205,-9.681109,-6.471420,0.006336,2.175668,-2.811858,0.318876,1.530909,0.393748,-1.326669,-2.459934,4.155449,2.086423,-3.885416,-6.468326,8.023435,-5.937545,-1.705000,2.953426,4.780942,5.940042,0.741568,2.807999,-4.877148,5.460360,-1.197220,-1.723722,-0.476956,-1.895427,8.603921,8.169738,6.146967,-1.739193,-7.429789,8.448801,-8.298382,-4.889219,5.324790,-7.711023,-4.487923,-4.272836,-2.147142,4.401399,-5.274199,6.225628,-9.926068,-4.372252,1.970357,-2.216744,-6.763039,0.740999,-7.476906,-3.032445,0.332666,-1.560655,-4.083130,2.818857,9.746458,-4.583527,-6.619186,4.939434,-8.949989,-6.434111,9.505220,-3.519457,-0.537995,-4.253169,3.877717,-1.394425,-4.873011,-5.198001,3.226399,2.785827,-0.875289,-0.084313,1.742612,-2.016519,1.262066,2.862678,3.818493,2.512417,7.283667,-1.735929,-9.741613,-0.253887,6.883794,-3.111157,-7.796512,4.372726,9.975286,5.353359,-5.536778,-2.909329,-0.937783,-0.904813,4.457260,6.029352,9.228899,2.906145,-6.133649,-7.197878,8.692581,-1.482024,-8.160782,-1.186230,9.453111,4.460711,3.732889,0.759630,6.670540,3.041371,7.125557,-4.987672,5.138989,7.111402,5.554985,3.875205,-7.569454,-2.696887,-1.295963,-1.804794,-0.547799,4.671261,4.158995,6.373542,-7.781152,-1.554232,6.358408,-8.733526,-4.553307,-7.810604,-7.507978,-8.033411,9.713587,7.620362,-6.846962,6.250009,5.734075,-9.025043,0.573121,-1.501271,6.795478,-8.675838,6.770756,6.787807,-3.198980,3.235267,5.977021,0.044075,-2.531639,-2.884016,-1.522858,6.130646,-4.124993,-1.834076,9.417708,5.378943,7.038740,1.041869,2.679965,2.141151,-4.913410,-4.992483,-2.779021,-1.031149,-0.299679,8.525105,-0.557284,2.996119,4.423271,-4.635178,-6.937959,0.833047,6.409876,-8.705283,2.943628,-6.207763,-5.694922,2.640236,-0.952446,7.201456,7.218243,6.365673,8.841010,-3.777858,6.130820,7.191201,6.965644,4.854044,5.699299,5.744484,0.610233,-0.201227,-7.800732,1.331626,2.311639,1.927581,2.172822,-2.588637,0.046179,9.881161,3.648067,-0.449911,5.576674,-0.581857,2.717909,9.376880,9.899035,-9.293535,-8.169702,8.895614,-9.688083,-8.490030,8.945310,-9.708272,2.004546,6.591844,-0.176997,1.912842,-5.006067,-3.354053,7.367635,-6.905165,4.439125,-5.520489,-7.572430,5.590302,2.876904,0.223280,-4.385338,3.143613,0.427022,2.675488,3.086140,-4.113783,-1.197792,5.209661,-1.198227,-8.854238,0.061063,8.933663,-4.641979,-2.969893,-0.305618,1.652458,-0.921225,9.889574,0.602177,3.296816,5.236709,-3.391927,2.047530,-2.430702,-5.210514,6.962694,0.776283,4.487335,-8.606109,0.478300,8.334478,8.994432,-5.699661,-9.501468,5.988290,-7.788717,8.146189,-8.634160,-4.412541,-3.877050,-5.060408], dtype = "float64")#candidate|6920|(2816,)|const|float64
var_6921 = relay.var("var_6921", dtype = "uint16", shape = (180,))#candidate|6921|(180,)|var|uint16
call_6918 = relay.TupleGetItem(func_3629_call(relay.reshape(const_6919.astype('int8'), [5, 14, 6]), relay.reshape(const_6919.astype('int8'), [5, 14, 6]), relay.reshape(const_6920.astype('float64'), [64, 44]), relay.reshape(var_6921.astype('uint16'), [180,]), ), 0)
call_6922 = relay.TupleGetItem(func_3635_call(relay.reshape(const_6919.astype('int8'), [5, 14, 6]), relay.reshape(const_6919.astype('int8'), [5, 14, 6]), relay.reshape(const_6920.astype('float64'), [64, 44]), relay.reshape(var_6921.astype('uint16'), [180,]), ), 0)
output = relay.Tuple([call_6915,call_6918,const_6919,const_6920,var_6921,])
output2 = relay.Tuple([call_6916,call_6922,const_6919,const_6920,var_6921,])
func_6929 = relay.Function([var_6921,], output)
mod['func_6929'] = func_6929
mod = relay.transform.InferType()(mod)
var_6930 = relay.var("var_6930", dtype = "uint16", shape = (180,))#candidate|6930|(180,)|var|uint16
output = func_6929(var_6930)
func_6931 = relay.Function([var_6930], output)
mutated_mod['func_6931'] = func_6931
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4880_call = mod.get_global_var('func_4880')
func_4882_call = mutated_mod.get_global_var('func_4882')
call_7028 = relay.TupleGetItem(func_4880_call(), 0)
call_7029 = relay.TupleGetItem(func_4882_call(), 0)
output = relay.Tuple([call_7028,])
output2 = relay.Tuple([call_7029,])
func_7040 = relay.Function([], output)
mod['func_7040'] = func_7040
mod = relay.transform.InferType()(mod)
output = func_7040()
func_7041 = relay.Function([], output)
mutated_mod['func_7041'] = func_7041
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7065 = relay.const([[[0.873839,-9.544973,-3.785355,5.415586,1.975865],[-1.400096,4.750999,-1.561440,-4.386712,-3.255774],[7.804867,0.445022,5.599174,-2.895766,2.211615],[-4.350012,1.462848,9.542173,-8.466053,-3.446730],[-3.701764,-3.850579,-4.855202,0.504016,3.601562],[-3.250490,-4.436162,-9.966201,8.351688,-7.414365],[-5.753280,1.062954,4.595358,6.924527,6.756101],[-5.854745,-3.888296,1.148407,8.663867,6.058044],[6.496802,-3.666016,1.354222,6.955255,7.373137],[-5.022022,-9.992043,7.333512,-9.260383,7.465232],[-7.220799,5.336381,-8.867782,3.826441,8.428688]],[[-3.941284,9.113544,-0.215270,9.668513,6.272790],[0.671486,-4.383462,2.477833,5.822003,-9.487920],[1.408647,-3.468661,-6.498894,-5.816917,6.729016],[-1.696453,-5.254242,-1.545178,8.446763,-0.171466],[-6.139251,-4.448538,7.945863,7.580636,8.058454],[2.918709,-5.755065,2.598223,3.397936,7.480865],[2.917802,-8.298868,5.342662,-3.241001,4.211398],[3.973540,-4.511957,-6.644771,4.537487,-8.305602],[-9.062433,0.091738,-8.882917,1.980076,-7.429181],[-6.140267,-6.120402,7.841646,9.073893,-3.948523],[-6.805196,-1.892859,5.623009,-0.316351,-0.660725]]], dtype = "float64")#candidate|7065|(2, 11, 5)|const|float64
var_7066 = relay.var("var_7066", dtype = "float64", shape = (2, 11, 5))#candidate|7066|(2, 11, 5)|var|float64
bop_7067 = relay.floor_divide(const_7065.astype('float64'), relay.reshape(var_7066.astype('float64'), relay.shape_of(const_7065))) # shape=(2, 11, 5)
func_4156_call = mod.get_global_var('func_4156')
func_4159_call = mutated_mod.get_global_var('func_4159')
const_7074 = relay.const([[-3.838989,-0.069541,0.105880,-2.413885,3.509651,8.031740,0.211428,9.643407,9.673403,-2.412045,-5.790364,4.567620,0.283725,7.209891,-3.969178,-0.692585,-4.473260,6.426658,2.578977,-7.056381,7.880071,-8.991338,0.133107,6.964805,7.678966,1.608903,1.625683,6.465590,7.720829,-3.232534,-6.606370,-0.572958,7.473482,-1.499081,0.181095,1.614749,7.930123,8.566959,-4.960847,6.200692,-9.799756,6.728202,8.707341,-1.755929,1.839518,5.413718,9.739445,-2.553573,3.990414,9.755283,9.641195,-3.301945,0.135692,6.906739,-2.106402,8.796174,5.979752,-0.109229,4.116432,4.079161,6.808350,-5.800850,5.320905,-1.522473,-3.087659,1.537983,-9.594440,-2.116725,-7.244234,6.284748,-9.750048,7.171982,8.200962,6.688877,0.944261,-3.364295,1.425326,6.010952,6.257800,7.258827,-0.312544,-6.913365,-3.428331,-2.529048,-4.122571,-4.435497,-6.172751,0.721120,4.203515,5.761702,8.553986,-9.636292,-6.176843,5.650280,0.633520,0.085587,-7.783910,-7.374973,-9.639088,3.718973,3.482331,-6.615656,1.238861,5.832765,-1.454847,4.661149,-1.738190,-3.261817,-6.540762,0.074029,-0.272760,3.552783,-3.684378,-3.384903,-1.170246,7.133027,2.970379,7.544664,7.530048,1.354371,2.848155,-6.891894,-3.077686,4.718190,-3.405208,-1.058193,5.440024,1.540568,-4.485190,6.496433,2.648954,-6.744406,-4.784184,-6.503316,-7.774891,5.091015,-0.110073,-7.096772,-8.609577,0.934776,-0.812862,2.075291,2.326039,7.954981,-2.771213,-4.774475,9.947330,-1.424535,8.203304,-6.273772,1.766424,7.922181,8.097679,-0.876745,3.411757,-8.202574,-5.890940,-8.296467,7.207389,7.672805,-4.876149,7.559359,-5.253802,7.251901,-3.978023,5.838071,2.183672,-1.713926,-4.805859,-4.552044,-4.636426,7.943870,-4.818047,8.399275,6.954897,-6.741197,-3.443743,-4.068440,4.599628,-7.150103,5.041431,2.429589,6.059279,5.238913,6.431691,2.636476,-2.001935,-1.383514,-2.315139,-2.971478,-4.459031,4.054872,0.599201,5.915116,0.256666,-8.421423,7.742255,1.203415,2.108347,2.424733,-1.765663,5.712071,8.488302,-6.568257,9.161791,-1.074490,8.221626,-9.635007,8.960771,3.795235,-0.265001,4.377373,-4.501658,-4.669136,5.341193,-2.789164,-1.462389,-5.256154,6.258265,-1.038029,-7.462005,-6.374672,-4.209557,-0.409848,-6.890461,3.357449,1.393467,-2.490804,0.263373,-1.153109,-2.630026,1.169009,-8.411476,5.791430,-7.433460,-0.018760,-7.770024,-2.344020,0.567061,-0.815579,-2.902622,-1.603212,-3.236763,1.525317,2.976234,-7.355688,-4.892987,1.004090,5.830466,-1.053778,-3.303827,-4.576545,0.675239,8.025224,4.427109,-7.540326,6.960460,-8.751787,-3.422622,-2.809964,9.169989,0.165848,-7.355015,-5.580526],[3.032581,6.080522,9.509561,-6.774516,-9.091266,4.822778,3.181166,1.385843,1.208851,-6.711805,-8.786390,0.042062,2.217793,7.393736,2.674264,-3.719507,3.235828,-6.500743,9.078736,4.679912,0.151726,-8.417057,2.503440,5.030108,3.537492,-6.233950,-0.658409,1.954257,-1.800953,2.771979,-6.773148,7.525875,8.185736,-7.769227,-2.373824,-6.320215,-3.638487,0.688516,8.303317,-9.660606,-6.260793,-2.495373,2.164282,5.707219,-9.923642,5.384067,-2.855890,-5.835138,9.796739,-3.047400,3.049326,4.535334,1.626712,0.380849,5.698902,8.561062,-6.454672,0.971040,9.257208,7.187811,9.601211,-8.342250,1.074472,-5.033920,4.107370,1.888634,5.302635,1.395441,5.760234,7.916817,-8.242701,-2.357983,-8.227635,-9.299864,-3.672298,-7.550078,8.899595,9.961136,8.020497,9.979466,4.691254,7.043757,9.357124,3.855686,8.723603,2.289621,-4.291428,-2.189228,1.257881,-0.835827,5.616412,-0.565256,-6.358263,4.681624,4.042522,-2.324253,5.659850,8.714880,-2.162379,1.311170,-2.579088,-9.016056,0.895558,5.298787,6.245460,-7.834110,-7.969113,6.235321,4.383964,0.990506,1.116952,9.116129,2.852415,2.331232,8.753674,-1.853482,-4.217474,-3.686470,9.934400,-2.889618,-8.998372,9.997454,9.618306,1.594131,-9.590085,3.158186,-9.912051,-8.017011,-2.650594,-3.307488,5.614787,3.772735,4.098466,0.417282,6.795594,7.496527,-8.175215,4.837685,-6.732027,-1.743397,0.436524,-5.930597,-8.073557,8.754113,1.765221,3.947941,-9.694997,-2.504014,-6.553359,6.985865,1.413849,3.527922,2.766801,-4.719409,0.895827,-9.163152,-8.936030,5.803475,-0.192271,3.643647,-2.428573,-3.281664,0.785395,-4.140159,-0.148902,-7.692859,-7.905628,2.976767,-4.318724,2.752727,6.788788,-1.270807,5.285345,-1.726826,-0.721235,1.035033,-9.561892,-7.818119,-4.238327,-0.935241,-3.249392,-5.196931,-1.480318,-2.543479,1.816249,0.761347,-1.609661,5.446226,1.093254,2.746972,0.185982,-2.746546,-7.692801,-4.271508,2.714372,0.675170,0.057980,-6.670816,6.246637,-3.657572,2.302829,8.324211,8.107748,9.813421,8.233077,-7.617882,3.958360,-6.317514,3.543534,-2.244834,0.626531,-3.959810,0.957888,3.972811,-6.920562,-8.792345,5.650869,5.412820,-5.192148,0.276082,0.587933,-0.773700,-6.558788,-9.144607,2.397125,-7.370723,-6.321590,6.979752,9.318573,-4.071001,-8.478895,0.166271,3.633404,-1.401929,6.704488,1.160115,-8.111315,6.009219,-2.211392,-1.896649,-3.999492,1.132447,-1.951959,9.133353,9.153533,7.095602,-5.283265,5.818958,5.843473,5.724042,8.017176,4.590116,-9.339274,-8.624096,-6.863633,7.834244,3.414851,6.141878,8.691779,6.672517,-2.505721,4.290398,-4.949511,-3.132956]], dtype = "float32")#candidate|7074|(2, 264)|const|float32
call_7073 = relay.TupleGetItem(func_4156_call(relay.reshape(const_7074.astype('float32'), [264, 2])), 6)
call_7075 = relay.TupleGetItem(func_4159_call(relay.reshape(const_7074.astype('float32'), [264, 2])), 6)
bop_7083 = relay.subtract(const_7065.astype('uint32'), relay.reshape(bop_7067.astype('uint32'), relay.shape_of(const_7065))) # shape=(2, 11, 5)
func_5938_call = mod.get_global_var('func_5938')
func_5940_call = mutated_mod.get_global_var('func_5940')
call_7091 = relay.TupleGetItem(func_5938_call(), 0)
call_7092 = relay.TupleGetItem(func_5940_call(), 0)
uop_7096 = relay.log10(var_7066.astype('float32')) # shape=(2, 11, 5)
func_7040_call = mod.get_global_var('func_7040')
func_7041_call = mutated_mod.get_global_var('func_7041')
call_7104 = relay.TupleGetItem(func_7040_call(), 0)
call_7105 = relay.TupleGetItem(func_7041_call(), 0)
output = relay.Tuple([call_7073,const_7074,bop_7083,call_7091,uop_7096,call_7104,])
output2 = relay.Tuple([call_7075,const_7074,bop_7083,call_7092,uop_7096,call_7105,])
func_7110 = relay.Function([var_7066,], output)
mod['func_7110'] = func_7110
mod = relay.transform.InferType()(mod)
var_7111 = relay.var("var_7111", dtype = "float64", shape = (2, 11, 5))#candidate|7111|(2, 11, 5)|var|float64
output = func_7110(var_7111)
func_7112 = relay.Function([var_7111], output)
mutated_mod['func_7112'] = func_7112
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4375_call = mod.get_global_var('func_4375')
func_4376_call = mutated_mod.get_global_var('func_4376')
call_7220 = relay.TupleGetItem(func_4375_call(), 1)
call_7221 = relay.TupleGetItem(func_4376_call(), 1)
output = call_7220
output2 = call_7221
func_7229 = relay.Function([], output)
mod['func_7229'] = func_7229
mod = relay.transform.InferType()(mod)
mutated_mod['func_7229'] = func_7229
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7229_call = mutated_mod.get_global_var('func_7229')
call_7230 = func_7229_call()
output = call_7230
func_7231 = relay.Function([], output)
mutated_mod['func_7231'] = func_7231
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7232 = relay.var("var_7232", dtype = "uint16", shape = (7, 10, 13))#candidate|7232|(7, 10, 13)|var|uint16
var_7233 = relay.var("var_7233", dtype = "uint16", shape = (7, 10, 13))#candidate|7233|(7, 10, 13)|var|uint16
bop_7234 = relay.left_shift(var_7232.astype('uint16'), relay.reshape(var_7233.astype('uint16'), relay.shape_of(var_7232))) # shape=(7, 10, 13)
func_5650_call = mod.get_global_var('func_5650')
func_5652_call = mutated_mod.get_global_var('func_5652')
call_7241 = func_5650_call()
call_7242 = func_5650_call()
func_4551_call = mod.get_global_var('func_4551')
func_4554_call = mutated_mod.get_global_var('func_4554')
const_7252 = relay.const([[-1.635872,-2.619631,5.848280,-2.211287,-8.368931,6.149651,7.877003,7.312408,-6.222002,6.162890,-3.281730,7.338162,4.148923,0.515303,-5.996985,5.985423,-8.571805,-8.396122,-5.673940,-1.905032,8.052331,2.781735,0.676582,8.712047,-1.268615,-3.385705,2.896423,9.577217,-4.947577,-1.966408,3.413197,-3.645020,8.205241,-5.497554,0.494660,5.708814,-6.939752,8.952057,2.384912,6.823941,-1.169690,0.045046,7.219846,-5.802162,1.268619]], dtype = "float64")#candidate|7252|(1, 45)|const|float64
call_7251 = relay.TupleGetItem(func_4551_call(relay.reshape(const_7252.astype('float64'), [5, 9, 1])), 0)
call_7253 = relay.TupleGetItem(func_4554_call(relay.reshape(const_7252.astype('float64'), [5, 9, 1])), 0)
output = relay.Tuple([bop_7234,call_7241,call_7251,const_7252,])
output2 = relay.Tuple([bop_7234,call_7242,call_7253,const_7252,])
func_7254 = relay.Function([var_7232,var_7233,], output)
mod['func_7254'] = func_7254
mod = relay.transform.InferType()(mod)
var_7255 = relay.var("var_7255", dtype = "uint16", shape = (7, 10, 13))#candidate|7255|(7, 10, 13)|var|uint16
var_7256 = relay.var("var_7256", dtype = "uint16", shape = (7, 10, 13))#candidate|7256|(7, 10, 13)|var|uint16
output = func_7254(var_7255,var_7256,)
func_7257 = relay.Function([var_7255,var_7256,], output)
mutated_mod['func_7257'] = func_7257
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4212_call = mod.get_global_var('func_4212')
func_4213_call = mutated_mod.get_global_var('func_4213')
call_7267 = relay.TupleGetItem(func_4212_call(), 0)
call_7268 = relay.TupleGetItem(func_4213_call(), 0)
output = relay.Tuple([call_7267,])
output2 = relay.Tuple([call_7268,])
func_7291 = relay.Function([], output)
mod['func_7291'] = func_7291
mod = relay.transform.InferType()(mod)
output = func_7291()
func_7292 = relay.Function([], output)
mutated_mod['func_7292'] = func_7292
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7365 = relay.var("var_7365", dtype = "int64", shape = (3, 14, 7))#candidate|7365|(3, 14, 7)|var|int64
const_7366 = relay.const([[[10,-8,9,1,-3,1,-7],[-6,2,1,-1,-10,-10,-3],[10,8,-2,-10,-10,-2,-5],[8,5,1,1,7,-10,-1],[3,-1,-9,-2,7,-3,-2],[9,-7,-1,10,10,-5,3],[3,-8,-9,-1,7,-7,-7],[1,-5,-9,7,5,-2,-7],[1,4,4,-2,2,1,-9],[6,-1,7,9,-8,-8,4],[-7,8,-2,2,6,-1,7],[10,10,-2,-6,7,-7,-4],[8,-6,10,3,-8,-10,-8],[5,-2,-1,-2,5,6,-3]],[[-7,-7,-4,9,6,-6,6],[-9,8,10,-10,6,6,1],[-3,4,-3,6,5,-1,-9],[5,4,10,9,-4,2,2],[1,-1,-10,-4,-7,10,8],[-3,10,-2,4,-8,1,4],[4,-3,-1,-9,1,-2,8],[2,-3,10,-5,-10,4,3],[-2,1,3,2,10,3,-9],[-2,6,10,9,3,-4,-2],[-10,4,-2,-9,10,-8,-3],[2,9,8,9,5,9,1],[-2,2,8,4,-10,4,4],[-10,7,10,9,-1,5,-4]],[[5,-8,8,7,-5,-5,-3],[6,-1,4,-10,3,-2,6],[8,6,9,10,-3,5,-7],[-4,7,10,6,-5,-8,-6],[1,-2,5,-4,-1,2,-1],[-3,-5,-1,-6,-2,4,-9],[-6,-5,-6,-9,4,-5,-8],[-8,-2,-9,7,-9,10,-7],[9,-9,10,5,10,9,9],[-6,9,-10,-4,-9,-9,-5],[-10,-5,8,-7,7,-6,-9],[-10,7,7,-9,-8,-6,-7],[-5,-5,-7,-7,6,3,7],[-8,-2,-5,4,6,1,-10]]], dtype = "int64")#candidate|7366|(3, 14, 7)|const|int64
bop_7367 = relay.multiply(var_7365.astype('int64'), relay.reshape(const_7366.astype('int64'), relay.shape_of(var_7365))) # shape=(3, 14, 7)
uop_7370 = relay.sinh(bop_7367.astype('float64')) # shape=(3, 14, 7)
func_6764_call = mod.get_global_var('func_6764')
func_6767_call = mutated_mod.get_global_var('func_6767')
const_7380 = relay.const([-7.212922,-5.758626,4.527257,5.220327,-2.851015,7.973432,6.515718,-4.452039,-1.764749,-5.518001,-4.275905,2.927343,4.520861,-8.924151,7.542472,0.676437,-7.062769,-3.926597,2.534000,-1.655713,4.428046,-5.292647,0.680413,-6.800207,-3.865989,-4.427268,5.629157,6.131100,-7.007393,3.301491,4.248354,7.452097,-8.203099,5.191957,2.783215,6.348117,7.886053,-7.589600,7.900564,-9.372708,0.414270,-1.313113,-8.347771,-9.708082,2.802438,3.877051,-2.124702,-2.323471,-2.825697,7.534562,7.075361,-5.798412,-0.758913,1.736822,1.938716,1.903595,-7.385012,0.270400,1.410301,8.849938,4.388748,5.087470,-2.814487,-2.947314,6.873184,-0.537612,6.846538,-4.525269,3.570190,7.069263], dtype = "float32")#candidate|7380|(70,)|const|float32
call_7379 = relay.TupleGetItem(func_6764_call(relay.reshape(const_7380.astype('float32'), [70,])), 1)
call_7381 = relay.TupleGetItem(func_6767_call(relay.reshape(const_7380.astype('float32'), [70,])), 1)
uop_7384 = relay.log10(uop_7370.astype('float64')) # shape=(3, 14, 7)
output = relay.Tuple([call_7379,const_7380,uop_7384,])
output2 = relay.Tuple([call_7381,const_7380,uop_7384,])
func_7388 = relay.Function([var_7365,], output)
mod['func_7388'] = func_7388
mod = relay.transform.InferType()(mod)
var_7389 = relay.var("var_7389", dtype = "int64", shape = (3, 14, 7))#candidate|7389|(3, 14, 7)|var|int64
output = func_7388(var_7389)
func_7390 = relay.Function([var_7389], output)
mutated_mod['func_7390'] = func_7390
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4375_call = mod.get_global_var('func_4375')
func_4376_call = mutated_mod.get_global_var('func_4376')
call_7403 = relay.TupleGetItem(func_4375_call(), 0)
call_7404 = relay.TupleGetItem(func_4376_call(), 0)
output = relay.Tuple([call_7403,])
output2 = relay.Tuple([call_7404,])
func_7405 = relay.Function([], output)
mod['func_7405'] = func_7405
mod = relay.transform.InferType()(mod)
output = func_7405()
func_7406 = relay.Function([], output)
mutated_mod['func_7406'] = func_7406
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5273_call = mod.get_global_var('func_5273')
func_5274_call = mutated_mod.get_global_var('func_5274')
call_7457 = relay.TupleGetItem(func_5273_call(), 1)
call_7458 = relay.TupleGetItem(func_5274_call(), 1)
func_5913_call = mod.get_global_var('func_5913')
func_5917_call = mutated_mod.get_global_var('func_5917')
var_7469 = relay.var("var_7469", dtype = "int8", shape = ())#candidate|7469|()|var|int8
var_7470 = relay.var("var_7470", dtype = "float32", shape = (154, 1))#candidate|7470|(154, 1)|var|float32
call_7468 = relay.TupleGetItem(func_5913_call(relay.reshape(var_7469.astype('int8'), []), relay.reshape(var_7470.astype('float32'), [154,]), ), 2)
call_7471 = relay.TupleGetItem(func_5917_call(relay.reshape(var_7469.astype('int8'), []), relay.reshape(var_7470.astype('float32'), [154,]), ), 2)
func_3269_call = mod.get_global_var('func_3269')
func_3275_call = mutated_mod.get_global_var('func_3275')
const_7481 = relay.const([-6.694754,-8.164287,1.053665,7.387455,-6.647105,-6.636451,-5.157681,3.693068,9.864255,-6.447227,-8.555820,5.710025,5.025467,3.551368,9.609781,8.008261,-9.459165,-5.342484,-6.021187,9.642687,-2.152144,8.929671,9.248997,-2.835359,-7.762047,4.567234,1.344795,-6.558088,4.345168,7.488216,5.181581,9.367001,8.043388,4.679297,2.850483,-3.078572,-6.453489,-2.901027,-1.247693,-0.283341,-3.327785,5.217307,8.015131,-8.488793,-1.841672,2.900335,8.985842,5.517880,-1.986649,-7.677656,1.429027,5.018047,6.488394,-0.815973,-5.179498,-8.513076,-1.868220,-1.820201,6.467389,-9.424165,0.882603,3.098951,-1.348549,5.624728,1.923217,-3.816311,-9.158130,4.086227,-7.291037,5.469217,-2.223450,2.278000,1.750757,-3.863944,-6.862054,-8.056892,-9.932126,-5.680512,-3.928139,-5.044207,-7.683264,6.663508,-4.414837,-8.198892,-8.709209,-0.675138,3.244801,1.464771,1.764161,1.702832,-9.117514,7.749966,2.748080,-0.220760,5.433349,7.319110,3.634768,-5.915448,0.899494,-3.254957,-9.233374,3.823508,-9.985450,1.380856,-1.648616,-0.374713,-2.810271,-1.580051,6.044741,-5.076649,9.575133,-5.515672,-0.016760,-8.242444,0.786493,2.217780,9.529825,8.602365,3.203198,-9.171552,9.030286,-6.850329,-4.977924,2.127104,0.146480,0.707011,-0.666280,-1.407311,-6.467571,-2.438893,5.615354,-0.442393,-5.302287,3.194231,-4.684481,-5.887250,-4.525063,9.212897,0.336236,-6.378094,-2.172010,7.671511,-0.305880,9.942903,-0.746513,-1.532806,1.110017,5.704769,0.932535,7.646773,-5.740031,1.261632,0.320795,3.106647,-6.708802,9.671337,6.121732,9.155982,-7.127338,9.918158,-0.037171,2.227373,-8.940832,-3.892745,5.459709,6.681603,7.871423,-9.259415,8.332217,1.569214,6.504031,4.540739,5.250115,-1.207447,3.555525,-1.842854,-8.483228,-8.814170,-2.954853,-1.144221,-8.743777,1.147420,-3.899466,-1.537584,-9.924225,3.537951,1.514092,-4.783570,4.458113,-4.662374,-6.561497,4.552762,-8.825709,3.593862,-2.430267,-5.741900,4.649381,-7.080658,0.718804,-6.894456,-3.596158,-9.224251,-4.230615,-2.140309,4.350332,-3.472663,4.778197,-7.857073,3.487877,7.622079,6.686612,3.331233,3.365076,9.952807,-8.641897,-3.234934,2.793546,-7.390846,-6.812154,-3.412350,-1.828029,6.373748,-9.876870,7.746921,-9.809552,4.048659,9.696684,-3.542855,-6.056963,6.964463,0.684916,6.448355,-3.356942,-6.495766,-0.433724,0.256252,-9.432671,-4.727194,-2.591463,-8.084873,-0.271605,0.316849,-0.599739,9.226243,9.125657,-7.326139,-1.172519,9.352404,4.019096,9.430010,-7.587834,-5.146189,-2.988277,4.073464,2.170932,5.492240,1.822909,5.442189,-9.788411,-7.615704,0.921301,6.217776,-7.492845,3.471728,-6.875741,5.281462,9.873662,3.837136,3.697405,-0.130097,7.388281,-1.207698,-9.365125,-4.955668,-5.617489,-9.581339,4.911586,-8.769285,9.744575,-4.964195,-0.221030,-8.155884,1.323424,4.773229,5.560434,2.013186,9.238548,2.630145,9.753294,1.416369,7.772301,-3.710943,4.240011,-1.051666,-3.776918,-5.596712,2.074609,-1.350567,1.443232,4.954687,8.909895,7.616455,-8.436459,4.746799,-0.587997,-5.043845,-2.314293,6.597351,4.207087,-7.486083,-1.194176,-4.380551,-0.490822,-3.910294,3.326248,-5.509704,3.464574,3.007759,-8.425111,0.960334,9.674478,-5.349121,-8.612889,5.327806,-3.950815,5.106051,4.240075,-0.436828,-6.867799,8.206013,-6.511869,7.535889,7.131262,3.697786,1.653305,-3.631253,-5.027155,-3.210239,-1.770413,-1.189311,-1.799698,7.091492,-8.966053,4.787366,2.354884,-4.947035,-0.053803,9.343805,-2.298075,0.899355,7.703245,5.266193,0.011720,8.325759,5.716372,-6.025947,1.002314,6.835884,3.770852,3.498684], dtype = "float64")#candidate|7481|(360,)|const|float64
var_7482 = relay.var("var_7482", dtype = "uint16", shape = (180,))#candidate|7482|(180,)|var|uint16
var_7483 = relay.var("var_7483", dtype = "float32", shape = (528,))#candidate|7483|(528,)|var|float32
call_7480 = relay.TupleGetItem(func_3269_call(relay.reshape(const_7481.astype('float64'), [6, 15, 4]), relay.reshape(const_7481.astype('float64'), [6, 15, 4]), relay.reshape(var_7482.astype('uint16'), [180,]), relay.reshape(var_7470.astype('int8'), [11, 14]), relay.reshape(var_7483.astype('float32'), [528,]), ), 2)
call_7484 = relay.TupleGetItem(func_3275_call(relay.reshape(const_7481.astype('float64'), [6, 15, 4]), relay.reshape(const_7481.astype('float64'), [6, 15, 4]), relay.reshape(var_7482.astype('uint16'), [180,]), relay.reshape(var_7470.astype('int8'), [11, 14]), relay.reshape(var_7483.astype('float32'), [528,]), ), 2)
output = relay.Tuple([call_7457,call_7468,var_7469,var_7470,call_7480,const_7481,var_7482,var_7483,])
output2 = relay.Tuple([call_7458,call_7471,var_7469,var_7470,call_7484,const_7481,var_7482,var_7483,])
func_7508 = relay.Function([var_7469,var_7470,var_7482,var_7483,], output)
mod['func_7508'] = func_7508
mod = relay.transform.InferType()(mod)
mutated_mod['func_7508'] = func_7508
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7508_call = mutated_mod.get_global_var('func_7508')
var_7510 = relay.var("var_7510", dtype = "int8", shape = ())#candidate|7510|()|var|int8
var_7511 = relay.var("var_7511", dtype = "float32", shape = (154, 1))#candidate|7511|(154, 1)|var|float32
var_7512 = relay.var("var_7512", dtype = "uint16", shape = (180,))#candidate|7512|(180,)|var|uint16
var_7513 = relay.var("var_7513", dtype = "float32", shape = (528,))#candidate|7513|(528,)|var|float32
call_7509 = func_7508_call(var_7510,var_7511,var_7512,var_7513,)
output = call_7509
func_7514 = relay.Function([var_7510,var_7511,var_7512,var_7513,], output)
mutated_mod['func_7514'] = func_7514
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5938_call = mod.get_global_var('func_5938')
func_5940_call = mutated_mod.get_global_var('func_5940')
call_7552 = relay.TupleGetItem(func_5938_call(), 0)
call_7553 = relay.TupleGetItem(func_5940_call(), 0)
output = relay.Tuple([call_7552,])
output2 = relay.Tuple([call_7553,])
func_7558 = relay.Function([], output)
mod['func_7558'] = func_7558
mod = relay.transform.InferType()(mod)
output = func_7558()
func_7559 = relay.Function([], output)
mutated_mod['func_7559'] = func_7559
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6698_call = mod.get_global_var('func_6698')
func_6700_call = mutated_mod.get_global_var('func_6700')
call_7563 = relay.TupleGetItem(func_6698_call(), 0)
call_7564 = relay.TupleGetItem(func_6700_call(), 0)
func_5138_call = mod.get_global_var('func_5138')
func_5142_call = mutated_mod.get_global_var('func_5142')
const_7587 = relay.const([[True,True,False,False,False,True],[False,False,True,True,True,True],[False,True,True,True,False,True],[False,True,True,False,True,False],[True,True,True,True,True,False],[True,False,False,False,True,False],[True,True,False,False,False,True],[True,False,True,True,True,True],[False,True,False,True,True,True],[True,True,False,True,False,True],[True,False,True,True,False,False],[True,True,True,False,True,True],[True,False,True,False,True,False],[True,False,False,True,True,True],[False,True,False,False,False,True],[True,True,True,True,True,True],[True,False,False,True,False,True],[False,False,True,False,False,True],[False,False,True,False,True,False],[False,False,True,False,False,True],[True,False,True,False,True,False],[True,False,False,True,True,True],[False,False,True,False,False,True],[True,False,True,False,True,True],[False,True,True,False,True,True],[True,True,True,False,True,False],[False,True,True,True,False,False],[False,True,False,True,True,False],[False,False,True,False,False,False],[True,False,True,False,False,False],[True,False,True,True,False,True],[True,True,False,False,False,False],[True,False,True,True,True,False],[False,True,False,True,True,False],[True,False,True,False,False,True],[False,False,True,False,True,False],[True,False,True,True,True,True],[True,False,True,True,True,False],[True,True,True,False,False,True],[False,True,True,True,True,False],[True,False,False,False,False,True],[False,True,True,True,False,False],[False,True,False,True,False,False],[True,False,True,True,False,False],[False,False,True,True,False,True],[True,True,True,True,True,True],[False,False,False,False,True,False],[False,False,True,True,True,False],[True,True,False,False,False,False]], dtype = "bool")#candidate|7587|(49, 6)|const|bool
const_7588 = relay.const([3,6,-2,4,-1,-6,-4,2,-6,3,1,-9,4,-5,7,-4,1,-4,-6,4,1,-6,8,4,4,8,-7,-6,-1,7,-7,8,-2,-1,-3,8,7,-2,3,-1,-3,2,-5,10,-9,6,9,6,-6,-10,3,6,3,7,4,-10,-4,-7,-1,7,-6,-6,4,-6,8,-1,3,1,5,-9,5,-10,-4,-9,5,-4,8,-8,1,-5,8,-2,-5,-7,2,-3,-7,-3,9,-5,8,7,-9,-10,-9,-1,-3,9,5,-10,4,-3,6,4,-10,2,-8,5,6,-8,-2,-1,10,-5,-8,4,-8,-4,5,-2,9,-2,-4,4,2,-6,-9,-9,7,-7,-9,-6], dtype = "uint64")#candidate|7588|(132,)|const|uint64
call_7586 = relay.TupleGetItem(func_5138_call(relay.reshape(const_7587.astype('bool'), [14, 7, 3]), relay.reshape(const_7588.astype('uint64'), [33, 4]), ), 4)
call_7589 = relay.TupleGetItem(func_5142_call(relay.reshape(const_7587.astype('bool'), [14, 7, 3]), relay.reshape(const_7588.astype('uint64'), [33, 4]), ), 4)
output = relay.Tuple([call_7563,call_7586,const_7587,const_7588,])
output2 = relay.Tuple([call_7564,call_7589,const_7587,const_7588,])
func_7605 = relay.Function([], output)
mod['func_7605'] = func_7605
mod = relay.transform.InferType()(mod)
output = func_7605()
func_7606 = relay.Function([], output)
mutated_mod['func_7606'] = func_7606
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4775_call = mod.get_global_var('func_4775')
func_4777_call = mutated_mod.get_global_var('func_4777')
call_7636 = relay.TupleGetItem(func_4775_call(), 0)
call_7637 = relay.TupleGetItem(func_4777_call(), 0)
output = call_7636
output2 = call_7637
func_7652 = relay.Function([], output)
mod['func_7652'] = func_7652
mod = relay.transform.InferType()(mod)
output = func_7652()
func_7653 = relay.Function([], output)
mutated_mod['func_7653'] = func_7653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4375_call = mod.get_global_var('func_4375')
func_4376_call = mutated_mod.get_global_var('func_4376')
call_7695 = relay.TupleGetItem(func_4375_call(), 0)
call_7696 = relay.TupleGetItem(func_4376_call(), 0)
output = relay.Tuple([call_7695,])
output2 = relay.Tuple([call_7696,])
func_7702 = relay.Function([], output)
mod['func_7702'] = func_7702
mod = relay.transform.InferType()(mod)
mutated_mod['func_7702'] = func_7702
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7702_call = mutated_mod.get_global_var('func_7702')
call_7703 = func_7702_call()
output = call_7703
func_7704 = relay.Function([], output)
mutated_mod['func_7704'] = func_7704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5655_call = mod.get_global_var('func_5655')
func_5656_call = mutated_mod.get_global_var('func_5656')
call_7760 = func_5655_call()
call_7761 = func_5655_call()
func_6764_call = mod.get_global_var('func_6764')
func_6767_call = mutated_mod.get_global_var('func_6767')
var_7768 = relay.var("var_7768", dtype = "float32", shape = (70,))#candidate|7768|(70,)|var|float32
call_7767 = relay.TupleGetItem(func_6764_call(relay.reshape(var_7768.astype('float32'), [70,])), 2)
call_7769 = relay.TupleGetItem(func_6767_call(relay.reshape(var_7768.astype('float32'), [70,])), 2)
func_5470_call = mod.get_global_var('func_5470')
func_5473_call = mutated_mod.get_global_var('func_5473')
var_7778 = relay.var("var_7778", dtype = "int32", shape = (648,))#candidate|7778|(648,)|var|int32
call_7777 = func_5470_call(relay.reshape(var_7778.astype('int32'), [648,]))
call_7779 = func_5470_call(relay.reshape(var_7778.astype('int32'), [648,]))
output = relay.Tuple([call_7760,call_7767,var_7768,call_7777,var_7778,])
output2 = relay.Tuple([call_7761,call_7769,var_7768,call_7779,var_7778,])
func_7790 = relay.Function([var_7768,var_7778,], output)
mod['func_7790'] = func_7790
mod = relay.transform.InferType()(mod)
var_7791 = relay.var("var_7791", dtype = "float32", shape = (70,))#candidate|7791|(70,)|var|float32
var_7792 = relay.var("var_7792", dtype = "int32", shape = (648,))#candidate|7792|(648,)|var|int32
output = func_7790(var_7791,var_7792,)
func_7793 = relay.Function([var_7791,var_7792,], output)
mutated_mod['func_7793'] = func_7793
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4775_call = mod.get_global_var('func_4775')
func_4777_call = mutated_mod.get_global_var('func_4777')
call_7810 = relay.TupleGetItem(func_4775_call(), 0)
call_7811 = relay.TupleGetItem(func_4777_call(), 0)
output = relay.Tuple([call_7810,])
output2 = relay.Tuple([call_7811,])
func_7873 = relay.Function([], output)
mod['func_7873'] = func_7873
mod = relay.transform.InferType()(mod)
output = func_7873()
func_7874 = relay.Function([], output)
mutated_mod['func_7874'] = func_7874
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5676_call = mod.get_global_var('func_5676')
func_5677_call = mutated_mod.get_global_var('func_5677')
call_7875 = relay.TupleGetItem(func_5676_call(), 1)
call_7876 = relay.TupleGetItem(func_5677_call(), 1)
output = relay.Tuple([call_7875,])
output2 = relay.Tuple([call_7876,])
func_7879 = relay.Function([], output)
mod['func_7879'] = func_7879
mod = relay.transform.InferType()(mod)
mutated_mod['func_7879'] = func_7879
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7879_call = mutated_mod.get_global_var('func_7879')
call_7880 = func_7879_call()
output = call_7880
func_7881 = relay.Function([], output)
mutated_mod['func_7881'] = func_7881
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7879_call = mod.get_global_var('func_7879')
func_7881_call = mutated_mod.get_global_var('func_7881')
call_7967 = relay.TupleGetItem(func_7879_call(), 0)
call_7968 = relay.TupleGetItem(func_7881_call(), 0)
var_7973 = relay.var("var_7973", dtype = "float32", shape = (5, 1, 14))#candidate|7973|(5, 1, 14)|var|float32
bop_7974 = relay.logical_xor(call_7967.astype('int16'), relay.reshape(var_7973.astype('int16'), relay.shape_of(call_7967))) # shape=(5, 1, 14)
bop_7977 = relay.logical_xor(call_7968.astype('int16'), relay.reshape(var_7973.astype('int16'), relay.shape_of(call_7968))) # shape=(5, 1, 14)
func_5938_call = mod.get_global_var('func_5938')
func_5940_call = mutated_mod.get_global_var('func_5940')
call_7983 = relay.TupleGetItem(func_5938_call(), 0)
call_7984 = relay.TupleGetItem(func_5940_call(), 0)
uop_8000 = relay.log(var_7973.astype('float64')) # shape=(5, 1, 14)
bop_8006 = relay.equal(uop_8000.astype('bool'), relay.reshape(bop_7974.astype('bool'), relay.shape_of(uop_8000))) # shape=(5, 1, 14)
bop_8009 = relay.equal(uop_8000.astype('bool'), relay.reshape(bop_7977.astype('bool'), relay.shape_of(uop_8000))) # shape=(5, 1, 14)
output = relay.Tuple([call_7983,bop_8006,])
output2 = relay.Tuple([call_7984,bop_8009,])
func_8026 = relay.Function([var_7973,], output)
mod['func_8026'] = func_8026
mod = relay.transform.InferType()(mod)
mutated_mod['func_8026'] = func_8026
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8027 = relay.var("var_8027", dtype = "float32", shape = (5, 1, 14))#candidate|8027|(5, 1, 14)|var|float32
func_8026_call = mutated_mod.get_global_var('func_8026')
call_8028 = func_8026_call(var_8027)
output = call_8028
func_8029 = relay.Function([var_8027], output)
mutated_mod['func_8029'] = func_8029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4375_call = mod.get_global_var('func_4375')
func_4376_call = mutated_mod.get_global_var('func_4376')
call_8040 = relay.TupleGetItem(func_4375_call(), 1)
call_8041 = relay.TupleGetItem(func_4376_call(), 1)
output = relay.Tuple([call_8040,])
output2 = relay.Tuple([call_8041,])
func_8065 = relay.Function([], output)
mod['func_8065'] = func_8065
mod = relay.transform.InferType()(mod)
output = func_8065()
func_8066 = relay.Function([], output)
mutated_mod['func_8066'] = func_8066
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7873_call = mod.get_global_var('func_7873')
func_7874_call = mutated_mod.get_global_var('func_7874')
call_8103 = relay.TupleGetItem(func_7873_call(), 0)
call_8104 = relay.TupleGetItem(func_7874_call(), 0)
output = call_8103
output2 = call_8104
func_8107 = relay.Function([], output)
mod['func_8107'] = func_8107
mod = relay.transform.InferType()(mod)
mutated_mod['func_8107'] = func_8107
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8107_call = mutated_mod.get_global_var('func_8107')
call_8108 = func_8107_call()
output = call_8108
func_8109 = relay.Function([], output)
mutated_mod['func_8109'] = func_8109
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8191 = relay.var("var_8191", dtype = "float64", shape = (7, 4, 16))#candidate|8191|(7, 4, 16)|var|float64
uop_8192 = relay.rsqrt(var_8191.astype('float64')) # shape=(7, 4, 16)
func_6910_call = mod.get_global_var('func_6910')
func_6911_call = mutated_mod.get_global_var('func_6911')
call_8203 = func_6910_call()
call_8204 = func_6910_call()
output = relay.Tuple([uop_8192,call_8203,])
output2 = relay.Tuple([uop_8192,call_8204,])
func_8205 = relay.Function([var_8191,], output)
mod['func_8205'] = func_8205
mod = relay.transform.InferType()(mod)
mutated_mod['func_8205'] = func_8205
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8206 = relay.var("var_8206", dtype = "float64", shape = (7, 4, 16))#candidate|8206|(7, 4, 16)|var|float64
func_8205_call = mutated_mod.get_global_var('func_8205')
call_8207 = func_8205_call(var_8206)
output = call_8207
func_8208 = relay.Function([var_8206], output)
mutated_mod['func_8208'] = func_8208
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6553_call = mod.get_global_var('func_6553')
func_6555_call = mutated_mod.get_global_var('func_6555')
call_8242 = relay.TupleGetItem(func_6553_call(), 0)
call_8243 = relay.TupleGetItem(func_6555_call(), 0)
func_6764_call = mod.get_global_var('func_6764')
func_6767_call = mutated_mod.get_global_var('func_6767')
call_8285 = relay.TupleGetItem(func_6764_call(relay.reshape(call_8242.astype('float32'), [70,])), 1)
call_8286 = relay.TupleGetItem(func_6767_call(relay.reshape(call_8242.astype('float32'), [70,])), 1)
func_1574_call = mod.get_global_var('func_1574')
func_1577_call = mutated_mod.get_global_var('func_1577')
var_8288 = relay.var("var_8288", dtype = "int8", shape = ())#candidate|8288|()|var|int8
call_8287 = relay.TupleGetItem(func_1574_call(relay.reshape(var_8288.astype('int8'), [])), 0)
call_8289 = relay.TupleGetItem(func_1577_call(relay.reshape(var_8288.astype('int8'), [])), 0)
output = relay.Tuple([call_8242,call_8285,call_8287,var_8288,])
output2 = relay.Tuple([call_8243,call_8286,call_8289,var_8288,])
func_8293 = relay.Function([var_8288,], output)
mod['func_8293'] = func_8293
mod = relay.transform.InferType()(mod)
var_8294 = relay.var("var_8294", dtype = "int8", shape = ())#candidate|8294|()|var|int8
output = func_8293(var_8294)
func_8295 = relay.Function([var_8294], output)
mutated_mod['func_8295'] = func_8295
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4212_call = mod.get_global_var('func_4212')
func_4213_call = mutated_mod.get_global_var('func_4213')
call_8395 = relay.TupleGetItem(func_4212_call(), 0)
call_8396 = relay.TupleGetItem(func_4213_call(), 0)
func_6604_call = mod.get_global_var('func_6604')
func_6606_call = mutated_mod.get_global_var('func_6606')
call_8400 = func_6604_call()
call_8401 = func_6604_call()
output = relay.Tuple([call_8395,call_8400,])
output2 = relay.Tuple([call_8396,call_8401,])
func_8408 = relay.Function([], output)
mod['func_8408'] = func_8408
mod = relay.transform.InferType()(mod)
mutated_mod['func_8408'] = func_8408
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8408_call = mutated_mod.get_global_var('func_8408')
call_8409 = func_8408_call()
output = call_8409
func_8410 = relay.Function([], output)
mutated_mod['func_8410'] = func_8410
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8065_call = mod.get_global_var('func_8065')
func_8066_call = mutated_mod.get_global_var('func_8066')
call_8456 = relay.TupleGetItem(func_8065_call(), 0)
call_8457 = relay.TupleGetItem(func_8066_call(), 0)
const_8483 = relay.const([[[-0.051719,-1.103200,6.228227],[5.792583,-7.410460,-1.477463],[-0.046960,3.074311,5.940595],[-5.184511,8.221692,-4.174182],[3.256500,-5.247405,4.882461],[-4.996059,-3.075835,-3.983051],[-7.557446,-7.318908,-2.434659]],[[-0.143642,-6.557046,-7.575186],[1.195301,2.306307,-9.223414],[-4.683425,4.537853,-9.173172],[7.316038,-5.131265,4.155375],[7.553510,6.880485,-2.495528],[-0.411352,-3.325235,-2.925343],[-3.805266,5.978822,-2.079746]],[[4.062233,-2.050938,-7.052109],[-9.286170,7.934509,6.533798],[0.313880,-4.444447,-5.236581],[-7.544252,2.060295,3.933326],[-9.808630,9.208670,8.548722],[5.390824,7.889366,0.967686],[-9.228059,6.279094,1.855099]],[[-6.672279,8.203710,6.446627],[-1.477486,-5.542881,-4.563397],[2.235503,5.689417,-7.348926],[2.013692,0.044775,7.174805],[-1.970140,-1.780749,0.266969],[-4.417941,-3.214534,-2.496476],[7.742323,-7.907847,0.134245]],[[-5.830198,9.199997,6.230590],[-6.542025,6.351088,8.392557],[3.341242,-1.364528,6.774655],[5.070432,6.571103,0.459575],[5.491408,-7.176495,-3.839858],[-8.739108,9.928464,-7.715816],[2.907735,9.036311,0.646356]],[[-1.228792,-0.106583,-7.452576],[-3.877997,4.011115,-5.863688],[-2.463297,0.089008,9.889464],[-9.234679,-3.243102,8.943363],[-8.932918,-3.731322,5.710828],[5.991358,-2.149106,-1.854416],[5.007061,-4.164761,-5.580312]],[[-5.971059,-5.143068,-6.183590],[2.218403,3.990776,-2.435610],[8.437425,7.509565,-1.570308],[7.180518,-2.081797,8.389348],[-0.621000,-8.036994,7.263363],[8.758532,5.176298,5.025853],[0.599524,-7.428077,0.165935]],[[7.055540,7.721909,-8.259640],[5.176019,5.943203,3.354841],[-1.751989,-9.063983,-8.131052],[-4.881783,2.367419,9.436058],[4.658389,2.021472,0.247473],[-7.735979,5.836914,1.706056],[4.662465,8.762000,2.631627]],[[0.220361,4.607800,-5.134616],[7.973328,4.975775,-9.266377],[8.008318,-3.373701,3.554367],[8.218474,-6.906741,0.785988],[-0.394002,1.824991,-7.529720],[-7.839862,-8.103788,6.073539],[4.721001,2.118618,4.439797]],[[0.170991,1.683053,9.893252],[9.419622,-8.101109,-2.618617],[-4.213154,-6.993615,-1.962957],[-5.571810,-7.388769,-0.939609],[2.044297,-7.991784,0.981768],[-5.164108,8.740526,-1.144351],[-1.721753,9.651058,8.451571]],[[-9.695469,4.104100,5.895815],[4.303164,-2.469521,2.539136],[2.899163,0.505139,3.344916],[5.593109,9.531913,-2.727696],[-7.103676,-1.985073,3.412384],[1.193378,0.307909,8.691242],[-4.712796,-9.226897,-1.979024]],[[-7.862278,-6.474892,-9.190491],[-7.096935,5.013818,-3.709072],[5.824554,-7.079946,-2.285158],[7.201465,7.554123,-1.203764],[-1.238632,-9.994622,-6.316777],[-5.856543,-5.636454,-0.639662],[-0.475124,3.860661,-8.944051]],[[5.505103,-8.415208,9.796774],[-5.488101,-4.409675,6.908097],[-4.808184,1.638017,-6.619518],[9.129928,-1.363308,9.491129],[-8.470100,6.880045,1.254796],[6.049046,5.498743,-7.525722],[2.457423,-4.364286,3.304157]],[[-4.233943,1.797284,-2.298243],[3.831216,-8.538663,6.081179],[-1.556378,6.030257,4.117099],[-6.703373,-6.807452,-9.724401],[-9.499213,8.072200,6.639427],[7.926997,-2.375380,-7.004543],[-5.577999,-2.894875,4.999824]]], dtype = "float32")#candidate|8483|(14, 7, 3)|const|float32
bop_8484 = relay.multiply(call_8456.astype('uint8'), relay.reshape(const_8483.astype('uint8'), relay.shape_of(call_8456))) # shape=(14, 7, 3)
bop_8487 = relay.multiply(call_8457.astype('uint8'), relay.reshape(const_8483.astype('uint8'), relay.shape_of(call_8457))) # shape=(14, 7, 3)
output = relay.Tuple([bop_8484,])
output2 = relay.Tuple([bop_8487,])
func_8495 = relay.Function([], output)
mod['func_8495'] = func_8495
mod = relay.transform.InferType()(mod)
mutated_mod['func_8495'] = func_8495
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8495_call = mutated_mod.get_global_var('func_8495')
call_8496 = func_8495_call()
output = call_8496
func_8497 = relay.Function([], output)
mutated_mod['func_8497'] = func_8497
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8503 = relay.var("var_8503", dtype = "int32", shape = (10, 8, 9))#candidate|8503|(10, 8, 9)|var|int32
var_8504 = relay.var("var_8504", dtype = "int32", shape = (10, 8, 9))#candidate|8504|(10, 8, 9)|var|int32
bop_8505 = relay.bitwise_and(var_8503.astype('int32'), relay.reshape(var_8504.astype('int32'), relay.shape_of(var_8503))) # shape=(10, 8, 9)
output = bop_8505
output2 = bop_8505
func_8510 = relay.Function([var_8503,var_8504,], output)
mod['func_8510'] = func_8510
mod = relay.transform.InferType()(mod)
mutated_mod['func_8510'] = func_8510
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8510_call = mutated_mod.get_global_var('func_8510')
var_8512 = relay.var("var_8512", dtype = "int32", shape = (10, 8, 9))#candidate|8512|(10, 8, 9)|var|int32
var_8513 = relay.var("var_8513", dtype = "int32", shape = (10, 8, 9))#candidate|8513|(10, 8, 9)|var|int32
call_8511 = func_8510_call(var_8512,var_8513,)
output = call_8511
func_8514 = relay.Function([var_8512,var_8513,], output)
mutated_mod['func_8514'] = func_8514
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7558_call = mod.get_global_var('func_7558')
func_7559_call = mutated_mod.get_global_var('func_7559')
call_8538 = relay.TupleGetItem(func_7558_call(), 0)
call_8539 = relay.TupleGetItem(func_7559_call(), 0)
output = call_8538
output2 = call_8539
func_8556 = relay.Function([], output)
mod['func_8556'] = func_8556
mod = relay.transform.InferType()(mod)
output = func_8556()
func_8557 = relay.Function([], output)
mutated_mod['func_8557'] = func_8557
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5676_call = mod.get_global_var('func_5676')
func_5677_call = mutated_mod.get_global_var('func_5677')
call_8563 = relay.TupleGetItem(func_5676_call(), 1)
call_8564 = relay.TupleGetItem(func_5677_call(), 1)
output = relay.Tuple([call_8563,])
output2 = relay.Tuple([call_8564,])
func_8580 = relay.Function([], output)
mod['func_8580'] = func_8580
mod = relay.transform.InferType()(mod)
output = func_8580()
func_8581 = relay.Function([], output)
mutated_mod['func_8581'] = func_8581
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6604_call = mod.get_global_var('func_6604')
func_6606_call = mutated_mod.get_global_var('func_6606')
call_8606 = func_6604_call()
call_8607 = func_6604_call()
var_8611 = relay.var("var_8611", dtype = "float32", shape = (14, 7, 3))#candidate|8611|(14, 7, 3)|var|float32
bop_8612 = relay.divide(call_8606.astype('float32'), relay.reshape(var_8611.astype('float32'), relay.shape_of(call_8606))) # shape=(14, 7, 3)
bop_8615 = relay.divide(call_8607.astype('float32'), relay.reshape(var_8611.astype('float32'), relay.shape_of(call_8607))) # shape=(14, 7, 3)
func_4775_call = mod.get_global_var('func_4775')
func_4777_call = mutated_mod.get_global_var('func_4777')
call_8629 = relay.TupleGetItem(func_4775_call(), 0)
call_8630 = relay.TupleGetItem(func_4777_call(), 0)
output = relay.Tuple([bop_8612,call_8629,])
output2 = relay.Tuple([bop_8615,call_8630,])
func_8634 = relay.Function([var_8611,], output)
mod['func_8634'] = func_8634
mod = relay.transform.InferType()(mod)
mutated_mod['func_8634'] = func_8634
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8635 = relay.var("var_8635", dtype = "float32", shape = (14, 7, 3))#candidate|8635|(14, 7, 3)|var|float32
func_8634_call = mutated_mod.get_global_var('func_8634')
call_8636 = func_8634_call(var_8635)
output = call_8636
func_8637 = relay.Function([var_8635], output)
mutated_mod['func_8637'] = func_8637
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8654 = relay.var("var_8654", dtype = "bool", shape = (2, 9, 6))#candidate|8654|(2, 9, 6)|var|bool
const_8655 = relay.const([[[False,True,False,False,False,False],[True,False,False,True,True,False],[True,True,False,False,True,False],[False,True,False,True,True,True],[True,False,False,False,True,True],[False,True,False,True,False,False],[True,True,True,False,True,False],[False,False,True,True,True,True],[True,True,False,True,False,True]],[[False,False,True,True,False,False],[False,False,False,True,True,False],[True,True,True,False,True,False],[True,True,True,False,False,False],[True,True,True,False,False,False],[True,True,False,True,False,False],[True,False,False,True,True,False],[True,True,True,True,True,False],[True,False,True,False,True,False]]], dtype = "bool")#candidate|8655|(2, 9, 6)|const|bool
bop_8656 = relay.logical_and(var_8654.astype('bool'), relay.reshape(const_8655.astype('bool'), relay.shape_of(var_8654))) # shape=(2, 9, 6)
output = relay.Tuple([bop_8656,])
output2 = relay.Tuple([bop_8656,])
func_8672 = relay.Function([var_8654,], output)
mod['func_8672'] = func_8672
mod = relay.transform.InferType()(mod)
mutated_mod['func_8672'] = func_8672
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8673 = relay.var("var_8673", dtype = "bool", shape = (2, 9, 6))#candidate|8673|(2, 9, 6)|var|bool
func_8672_call = mutated_mod.get_global_var('func_8672')
call_8674 = func_8672_call(var_8673)
output = call_8674
func_8675 = relay.Function([var_8673], output)
mutated_mod['func_8675'] = func_8675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6698_call = mod.get_global_var('func_6698')
func_6700_call = mutated_mod.get_global_var('func_6700')
call_8695 = relay.TupleGetItem(func_6698_call(), 1)
call_8696 = relay.TupleGetItem(func_6700_call(), 1)
func_8634_call = mod.get_global_var('func_8634')
func_8637_call = mutated_mod.get_global_var('func_8637')
call_8716 = relay.TupleGetItem(func_8634_call(relay.reshape(call_8695.astype('float32'), [14, 7, 3])), 1)
call_8717 = relay.TupleGetItem(func_8637_call(relay.reshape(call_8695.astype('float32'), [14, 7, 3])), 1)
func_5138_call = mod.get_global_var('func_5138')
func_5142_call = mutated_mod.get_global_var('func_5142')
const_8727 = relay.const([[5,-5,-8,-5],[-8,2,1,10],[-2,1,-6,9],[8,-1,-3,-7],[-4,-1,7,9],[-3,7,-10,3],[3,-6,-8,-1],[4,-7,-10,5],[-9,6,-2,-3],[3,-8,-6,9],[-7,-10,-3,-3],[-4,1,-7,8],[5,-1,-9,2],[2,-7,3,8],[2,-6,9,-9],[10,-9,-8,-10],[-10,-2,3,1],[3,6,3,-7],[1,9,3,-7],[7,9,-2,2],[9,-1,7,-10],[9,6,1,8],[-7,4,-4,-2],[-6,10,-9,9],[6,2,1,4],[9,5,-5,2],[9,-3,-6,6],[7,7,8,-6],[6,-6,2,-9],[9,-1,-9,8],[8,3,-6,5],[4,-9,-7,-5],[-3,-2,-2,-5]], dtype = "uint64")#candidate|8727|(33, 4)|const|uint64
call_8726 = relay.TupleGetItem(func_5138_call(relay.reshape(call_8695.astype('bool'), [14, 7, 3]), relay.reshape(const_8727.astype('uint64'), [33, 4]), ), 0)
call_8728 = relay.TupleGetItem(func_5142_call(relay.reshape(call_8695.astype('bool'), [14, 7, 3]), relay.reshape(const_8727.astype('uint64'), [33, 4]), ), 0)
func_5748_call = mod.get_global_var('func_5748')
func_5750_call = mutated_mod.get_global_var('func_5750')
call_8739 = relay.TupleGetItem(func_5748_call(), 1)
call_8740 = relay.TupleGetItem(func_5750_call(), 1)
output = relay.Tuple([call_8695,call_8716,call_8726,const_8727,call_8739,])
output2 = relay.Tuple([call_8696,call_8717,call_8728,const_8727,call_8740,])
func_8754 = relay.Function([], output)
mod['func_8754'] = func_8754
mod = relay.transform.InferType()(mod)
output = func_8754()
func_8755 = relay.Function([], output)
mutated_mod['func_8755'] = func_8755
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7291_call = mod.get_global_var('func_7291')
func_7292_call = mutated_mod.get_global_var('func_7292')
call_8767 = relay.TupleGetItem(func_7291_call(), 0)
call_8768 = relay.TupleGetItem(func_7292_call(), 0)
output = relay.Tuple([call_8767,])
output2 = relay.Tuple([call_8768,])
func_8775 = relay.Function([], output)
mod['func_8775'] = func_8775
mod = relay.transform.InferType()(mod)
output = func_8775()
func_8776 = relay.Function([], output)
mutated_mod['func_8776'] = func_8776
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8065_call = mod.get_global_var('func_8065')
func_8066_call = mutated_mod.get_global_var('func_8066')
call_8777 = relay.TupleGetItem(func_8065_call(), 0)
call_8778 = relay.TupleGetItem(func_8066_call(), 0)
output = call_8777
output2 = call_8778
func_8779 = relay.Function([], output)
mod['func_8779'] = func_8779
mod = relay.transform.InferType()(mod)
mutated_mod['func_8779'] = func_8779
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8779_call = mutated_mod.get_global_var('func_8779')
call_8780 = func_8779_call()
output = call_8780
func_8781 = relay.Function([], output)
mutated_mod['func_8781'] = func_8781
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8801 = relay.var("var_8801", dtype = "float64", shape = (8, 10, 16))#candidate|8801|(8, 10, 16)|var|float64
uop_8802 = relay.exp(var_8801.astype('float64')) # shape=(8, 10, 16)
output = uop_8802
output2 = uop_8802
func_8815 = relay.Function([var_8801,], output)
mod['func_8815'] = func_8815
mod = relay.transform.InferType()(mod)
mutated_mod['func_8815'] = func_8815
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8816 = relay.var("var_8816", dtype = "float64", shape = (8, 10, 16))#candidate|8816|(8, 10, 16)|var|float64
func_8815_call = mutated_mod.get_global_var('func_8815')
call_8817 = func_8815_call(var_8816)
output = call_8817
func_8818 = relay.Function([var_8816], output)
mutated_mod['func_8818'] = func_8818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5273_call = mod.get_global_var('func_5273')
func_5274_call = mutated_mod.get_global_var('func_5274')
call_8888 = relay.TupleGetItem(func_5273_call(), 0)
call_8889 = relay.TupleGetItem(func_5274_call(), 0)
func_5161_call = mod.get_global_var('func_5161')
func_5162_call = mutated_mod.get_global_var('func_5162')
call_8901 = relay.TupleGetItem(func_5161_call(), 1)
call_8902 = relay.TupleGetItem(func_5162_call(), 1)
output = relay.Tuple([call_8888,call_8901,])
output2 = relay.Tuple([call_8889,call_8902,])
func_8920 = relay.Function([], output)
mod['func_8920'] = func_8920
mod = relay.transform.InferType()(mod)
output = func_8920()
func_8921 = relay.Function([], output)
mutated_mod['func_8921'] = func_8921
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7702_call = mod.get_global_var('func_7702')
func_7704_call = mutated_mod.get_global_var('func_7704')
call_8969 = relay.TupleGetItem(func_7702_call(), 0)
call_8970 = relay.TupleGetItem(func_7704_call(), 0)
func_5161_call = mod.get_global_var('func_5161')
func_5162_call = mutated_mod.get_global_var('func_5162')
call_8971 = relay.TupleGetItem(func_5161_call(), 1)
call_8972 = relay.TupleGetItem(func_5162_call(), 1)
output = relay.Tuple([call_8969,call_8971,])
output2 = relay.Tuple([call_8970,call_8972,])
func_9004 = relay.Function([], output)
mod['func_9004'] = func_9004
mod = relay.transform.InferType()(mod)
output = func_9004()
func_9005 = relay.Function([], output)
mutated_mod['func_9005'] = func_9005
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9015 = relay.var("var_9015", dtype = "float32", shape = (11, 3, 16))#candidate|9015|(11, 3, 16)|var|float32
uop_9016 = relay.sqrt(var_9015.astype('float32')) # shape=(11, 3, 16)
output = relay.Tuple([uop_9016,])
output2 = relay.Tuple([uop_9016,])
func_9038 = relay.Function([var_9015,], output)
mod['func_9038'] = func_9038
mod = relay.transform.InferType()(mod)
var_9039 = relay.var("var_9039", dtype = "float32", shape = (11, 3, 16))#candidate|9039|(11, 3, 16)|var|float32
output = func_9038(var_9039)
func_9040 = relay.Function([var_9039], output)
mutated_mod['func_9040'] = func_9040
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7040_call = mod.get_global_var('func_7040')
func_7041_call = mutated_mod.get_global_var('func_7041')
call_9130 = relay.TupleGetItem(func_7040_call(), 0)
call_9131 = relay.TupleGetItem(func_7041_call(), 0)
func_8065_call = mod.get_global_var('func_8065')
func_8066_call = mutated_mod.get_global_var('func_8066')
call_9140 = relay.TupleGetItem(func_8065_call(), 0)
call_9141 = relay.TupleGetItem(func_8066_call(), 0)
output = relay.Tuple([call_9130,call_9140,])
output2 = relay.Tuple([call_9131,call_9141,])
func_9149 = relay.Function([], output)
mod['func_9149'] = func_9149
mod = relay.transform.InferType()(mod)
output = func_9149()
func_9150 = relay.Function([], output)
mutated_mod['func_9150'] = func_9150
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8779_call = mod.get_global_var('func_8779')
func_8781_call = mutated_mod.get_global_var('func_8781')
call_9160 = func_8779_call()
call_9161 = func_8779_call()
func_6604_call = mod.get_global_var('func_6604')
func_6606_call = mutated_mod.get_global_var('func_6606')
call_9168 = func_6604_call()
call_9169 = func_6604_call()
func_1872_call = mod.get_global_var('func_1872')
func_1877_call = mutated_mod.get_global_var('func_1877')
var_9185 = relay.var("var_9185", dtype = "float64", shape = (60,))#candidate|9185|(60,)|var|float64
var_9186 = relay.var("var_9186", dtype = "int8", shape = ())#candidate|9186|()|var|int8
const_9187 = relay.const([-7.480315,4.645191,5.664469,1.906438,-3.044890,3.828629,8.460930,-8.267405,6.857669,-0.670827,-7.202237,0.001222,2.479805,1.169472,2.700199,3.571306,-9.623361,-2.680749,2.938029,-5.981262,-1.198314,6.111133,-0.303639,-0.359366,2.458482,-2.726935,2.174669,5.614395,6.680386,1.296837,-9.695575,-4.078239,9.768275,-7.681998,9.646769,6.924685,-4.585463,4.891233,-4.534686,-8.767381,-2.032881,6.982945,5.556457,-3.406342,2.234239,7.615279,-3.413419,-2.008785,-5.289718,-6.266382,6.323565,0.506217,2.502411,1.921298,-8.655665,6.019151,-8.471475,-6.794410,6.659788,3.143262,-3.815296,-9.390472,-5.005076,8.975818,-6.913960,-1.038343,7.384624,4.927152,-8.410243,-9.711087,0.557184,9.287312,2.557671,8.753440,-0.158518,5.924128,3.729056,-4.341859,0.589370,9.980154,0.922000,2.179154,8.918131,4.117728,5.113326,2.227346,6.177022,5.182988,-3.901410,7.027988,8.052585,-9.180908,5.479083,-2.630280,-1.860312,-7.043317,-8.051160,-9.931887,-0.223850,8.384484,5.272304,-6.459598,-0.441880,8.305003,-9.512470,4.583215,-2.503586,7.745062,-6.576786,-4.915203,4.050049,4.328311,-6.855605,4.071111,8.580633,5.673102,1.991622,-6.026039,5.642822,7.588716,-4.828059,8.890834,-2.113574,-6.933391,-3.411145,0.389743,2.478536,6.415880,-5.223325,0.110894,-8.896703,-9.758801,-9.326748,0.847635,8.611743,-8.059782,6.726021,-8.276887,-9.029846,3.644465,7.168732,-1.639777,7.130106,-2.013447,-1.749523,8.258789,-2.269972,5.740131,-5.791931,-7.236179,8.397295,-3.812654,-9.907150,-1.771031], dtype = "float32")#candidate|9187|(154,)|const|float32
const_9188 = relay.const([-2,10,10,10,-9,-6,5,4,-8,-5,-2,-8,-4,3,9,-2,-10,6,8,10,1,10,8,8,-4,2,3,-4,-10,-1,-9,-9,-5,1,-1,3,-4,9,-6,10,9,-5,2,7,10,-1,1,8,-5,9,7,-7,6,5,-3,3,-6,2,2,2,-9,1,-2,-8,-9,2,-3,-8,-5,3,7,9,6,5,-5,10,-7,6,9,6,-4,-3,-9,4,-6,-3,-2,-8,6,-6,10,4,6,-9,-7,2,-5,-6,10,8,8,-8,-4,1,-10,10,5,-7,8,-6,1,6,-5,-10,-6,-8,10,9,2,5,-10,-2,-10,4,5,5,-7,1,7,8,10,10,-4,5,10,10,4,3,-10,-2,-8,-10,9,-1,-3,-10,7,-4,-8,6,6,7,7,3,-8,10,-3,-3,4,-1,-10,-1,-10,7,3,-7,1,-10,-4,6,2,-8,-8,9,4,10,-10,3,7,7,5,-10,8,5,-7,-5,-10,-3,-5,-2,-2,-3,3,-2,5,-2,-3,-7,4,-2,4,7,-10,2,-3,-4,-7,7,4,2,-9,10,-7,-5,-8,2,-4,-5,1,4,4,-1,7,-2,-9,10,7,2,-6,4,3,7,-9,6,4,4,-5,8,4,3,-2,-1,-3,-4,-7,-5,6,-10,6,5,-3,5,-5,-2,-3,-10,7,8,2,1,10,-2,7,3,7,1,-6,-1,-1,8,7,-3,-9,8,-10,-5,-4,9,10,-3,10,10,-10,7,-2,-7,4,5,8,-9,2,-3,10,6,-3,-10,4,-1,8,8,-6,1,3,-5,1,3,7,-10,7,-8,6,5,5,4,5,-5,5,1,4,-2,10,-8,1,-4,5,-1,10,-9,-4,-10,5,10,-1,-9,-8,2,8,5,-10,-8,-4,4,-4,1,-7,7,-8,1,9,-6,3,-7,10,2,4,2,10,-2,-10,2,-5,9,-9,5,-10,-7,1,-6,7,-10,8,6,10,2,-2,9,-7,-1,9,-6,-6,-4,8,-9,-7,-5,1,-5,-1,2,3,-1,10,-9,-7,-9,-8,2,-4,3,10,-8,-9,-1,-10,-4,-6,5,4,-6,7,-5,-10,-2,-8,6,3,8,-9,-4,5,3,-10,9,10,-6,3,-3,10,7,-2,-5,-9,9,-3,-6,-9,-10,-5,7,-4,-4,4,-10,-5,-2,10,-2,-2,6,1,6,10,1,4,-3,-10,-9,-4,-1,-8,6,4,-8,8,-4,5,-3,7,-2,-3,-1,-2,9,1,-7,-7,-6,2,7,-5,10,-10,-5,-6,-10,-4,2,-1,-3,5,1,2,10,9,-3,8,-6,-6,-7,-10,3,-10,-9,8,-5,-4,4,2,-2,-1,7,10,-2,-6,3,8,1,1,-8,4,1,-8,5,-8,2,2,1,-5,-2,-3,-9,9,8,-10,10,-10,1,5,-9,-3,-2,-2,-10,-7,-10,-5,1,8,7,-8,1,5,7,10,-1,-8,-1,-8,-9,-3,-5,-9,6,8,5,-8,3,2,3,5,-6,-1,-3,-10,-1,-3,-3,5,-10,-3,-8,-3,6,10,-7,7,5,-2,4,5,7,6,-10,1,3,-7,7,-1,-5,-4,5,6,9,10,-4,-3,-3,-2,7,5,9,2,-1,-3,-3,7,-8,7,4,3,2,-8,-2,-10,-6,-10,4,-5,4,-9,4,-4,-2,-10,-10,-4,-8,7,-5,-10,1,-7,1,-10,-7,3,-9,-4,7,7,6,10,-4,-3,-6,-9,2,-4,6,-9,4,-6,8,-4,-3,-4,2,2,-1,-6,-7,-5,-9,-3,2,-9,5,-1,-5,-10,8,7,8,-6,6,9,7,4,3,-2,-1,-5,-8,3,-1,-2,-7,-9,-8,-5,8,-10,7,2,1,-7,7,-1,8,8,7,10,-9,-10,-5,3,-10,-8,-7,7,6,-10,-5,8,5,3,-8,-7,-2,-3,-5,-10,-1,1,1,-4,3,-10,7,2,-5,-5,7,-9,-10,-6,1,9,6,-10,10,-4,9,1,-1,9,9,-9,7,-7,-2,-3,9,-5,-4,4,8,-6,1,3,4,9,6,-2,-8,2,-2,-3,7,-7,-2,6,6,-4,-1,10,1,-9,-9,-9,-9,-5,6,-1,-5,-5,-9,4,2,4,-9,9,4,-6,-8,-10,-6,8,-4,-8,-9,-3,-5,-6,8,-2,-6,4,10,5,-5,-7,-9,-4,5,-9,6,-5,-2,9,2,-5,-2,-8,-9,10,-7,6,3,-8,-3,-5,10,9,2,2,-9,2,-7,4,5,-9,-3,8,-4,-6,-3,5,2,7,-4,-10,7,-6,4,8,6,-2,2,-6,-4,5,-3,3,6,3,-1,5,-7,-2,-1,-2,10,5,-4,10,3,-7,8,4,-2,-4,-2,-2,-9,1,5,-6,-7,-8,-2,-1,6,3,-10,5,-6,6,7,-8,-2,-6,-2,1,3,-2,-10,2,-3,-7,4,4,1,9,-9,6,-3,10,3,9,-3,-3,-6,-6,-1,-1,-4,-4,-6,-5,-7,-6,-1,10,-10,-4,-9,-5,-3,5,3,-7,-10,2,-4,-1,-7,-3,-5,-6,1,-7,6,-9,-10,-3,10,-10,2,8,-10,-7,8,-7,5,8,-3,8,5,-8,-2,8,2,-2,-1,-8,-1,-9,-7,2,10,-7,2,-2,-3,-2,1,4,-9,8,9,2,-3,9,-7,-1,10,10,3,9,-2,10,-2,-7,-3,2,10,-3,4,2,-4,10,1,6,-10,2,5,-5,6,-7,-8,-2,2,3,9,7,10,-9,-7,-5,-7,9,8,-8,-10,3,1,-8,3,9,1,-7,-5,-2,-9,-9,5,-10,-4,7,-5,-1,6,-9,5,10,6,-6,2,-3,-4,-9,10,2,-2,-7,-9,-3,-10,-5,2,2,3,-9,4,7,-2,-7,-10,6,5,-6,2,1,-2,8,10,-2,-7,-9,4,-9,6,9,-4,-7,8,5,-5,-3,-1,-2,2,7,6,-2,-3,7,8,5,-2,-1,10,-2,10,-1,-10,-3,9,-4,5,-5,7,-10,-9,5,9,-4,1,3,3,4,9,6,7,-2,5,3,-1,-7,7,-4,1,5,-5,-5,2,-2,7,8,-9,10,-2,-8,-5,-7,-8,-1,10,10,6,-4,5,1,5,9,4,9,-2,10,1,-2,-8,-9,2,-4,7,9,7,5,3,-7,3,4,-1,3,-2,1,1,-2,1,5,5,9,6,-3,8,-6,4,-6,-4,6,-5,10,7,3,8,-6,-2,7,1,-6,10,1,4,8,6,6,1,1,9,-7,-10,2,-10,-9,-8,9,1,-3,-7,2,7,7,7,-7,2,3,-9,-5,5,9,10,-3,-9,-5,7,2,-9,-1,8,1,4,-3,3,1,1,1,-9,6,9,6,1,10,-6,-6,-1,-4,3,9,5,-3,-1,2,9,7,9,5,-9,2,10,-2,5,7,5,-5,5,9,-2,-5,10,10,3,-1,-4,10,1,4,-9,-5,6,-7,5,6,-8,10,-1,7,-8,10,3,6,3,-9,1,-7,3,-8,9,-6,5,4,6,1,2,-10,1,-9,7,7,2,-5,-7,3,-8,-2,7,-8,1,-9,-1,10,-4,-6,-8,9,6,-5,10,8,9,9,-10,-8,-6,-6,5,-1,-6,2,-2,4,-6,3,-8,-3,3,-4,-9,-5,-9,-4,-6,5,-1,-6,9,-1,10,10,4,-7,-5,9,-3,-1,-5,9,7,5,-3,1,2,7,-5,-2,-2,6,-1,-3,1,-9,6,-2,-3,3,2,10,-5,8,5,10,10,-7,3,7,4,2,3,-5,3,-4,1,8,10,7,-7,-5,3,10,-9,-1,3,3,9,6,-5,8,-6,-3,4,4,-8,-10,8,-8,9,10,-3,9,2,-8,8,4,-4,-10,8,2,2,7,-4,-7,-4,-6,-3,-3,-2,1,-4,-2,3,-7,-8,6,-10,8,-10,6,5,3,7,-2,-6,7,-9,8,-4,2,5,10,1,-9,4,-6,-7,8,6,3,4,-4,10,4,9,4,1,7,-3,-6,-2,-9,-5,3,4,5,-5,-10,1,10,9,3,-9,4,9,-10,-4,9,5,-3,7,8,7,8,-1,9,2,10,4,-5,5,3,-6,9,6,10,-9,7,6,5,4,5,-6,9,-10,3,10,5,2,-7,7,4,-6,4,-6,9,-3,-8,-1,8,-1,-5,9,-7,3,9,-3,-7,-4,1,10,-2,4,1,-6,5,2,-8,-9,9,-1,3,1,-3,1,-7,-3,5,10,3,6,5,9,8,10,-3,8,-7,7,6,-5,8,-5,-5,10,-10,7,4,-9,-5,2,2,-5,-8,10,-8,-8,-2,1,7,7,-10,5,2,8,4,7,-9,4,3,-3,8,-9,-6,10,-6,3,3,1,1,-3,1,-3,-2,-10], dtype = "uint64")#candidate|9188|(1664,)|const|uint64
call_9184 = relay.TupleGetItem(func_1872_call(relay.reshape(var_9185.astype('float64'), [60,]), relay.reshape(var_9186.astype('int8'), []), relay.reshape(const_9187.astype('float32'), [154,]), relay.reshape(const_9188.astype('uint64'), [1664,]), ), 8)
call_9189 = relay.TupleGetItem(func_1877_call(relay.reshape(var_9185.astype('float64'), [60,]), relay.reshape(var_9186.astype('int8'), []), relay.reshape(const_9187.astype('float32'), [154,]), relay.reshape(const_9188.astype('uint64'), [1664,]), ), 8)
output = relay.Tuple([call_9160,call_9168,call_9184,var_9185,var_9186,const_9187,const_9188,])
output2 = relay.Tuple([call_9161,call_9169,call_9189,var_9185,var_9186,const_9187,const_9188,])
func_9203 = relay.Function([var_9185,var_9186,], output)
mod['func_9203'] = func_9203
mod = relay.transform.InferType()(mod)
var_9204 = relay.var("var_9204", dtype = "float64", shape = (60,))#candidate|9204|(60,)|var|float64
var_9205 = relay.var("var_9205", dtype = "int8", shape = ())#candidate|9205|()|var|int8
output = func_9203(var_9204,var_9205,)
func_9206 = relay.Function([var_9204,var_9205,], output)
mutated_mod['func_9206'] = func_9206
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9210 = relay.var("var_9210", dtype = "float32", shape = (3, 4, 11))#candidate|9210|(3, 4, 11)|var|float32
uop_9211 = relay.asin(var_9210.astype('float32')) # shape=(3, 4, 11)
uop_9216 = relay.rsqrt(var_9210.astype('float32')) # shape=(3, 4, 11)
func_339_call = mod.get_global_var('func_339')
func_342_call = mutated_mod.get_global_var('func_342')
var_9219 = relay.var("var_9219", dtype = "float32", shape = (528,))#candidate|9219|(528,)|var|float32
call_9218 = func_339_call(relay.reshape(var_9219.astype('float32'), [12, 11, 4]))
call_9220 = func_339_call(relay.reshape(var_9219.astype('float32'), [12, 11, 4]))
output = relay.Tuple([uop_9211,uop_9216,call_9218,var_9219,])
output2 = relay.Tuple([uop_9211,uop_9216,call_9220,var_9219,])
func_9222 = relay.Function([var_9210,var_9219,], output)
mod['func_9222'] = func_9222
mod = relay.transform.InferType()(mod)
mutated_mod['func_9222'] = func_9222
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9222_call = mutated_mod.get_global_var('func_9222')
var_9224 = relay.var("var_9224", dtype = "float32", shape = (3, 4, 11))#candidate|9224|(3, 4, 11)|var|float32
var_9225 = relay.var("var_9225", dtype = "float32", shape = (528,))#candidate|9225|(528,)|var|float32
call_9223 = func_9222_call(var_9224,var_9225,)
output = call_9223
func_9226 = relay.Function([var_9224,var_9225,], output)
mutated_mod['func_9226'] = func_9226
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4212_call = mod.get_global_var('func_4212')
func_4213_call = mutated_mod.get_global_var('func_4213')
call_9231 = relay.TupleGetItem(func_4212_call(), 0)
call_9232 = relay.TupleGetItem(func_4213_call(), 0)
output = relay.Tuple([call_9231,])
output2 = relay.Tuple([call_9232,])
func_9235 = relay.Function([], output)
mod['func_9235'] = func_9235
mod = relay.transform.InferType()(mod)
output = func_9235()
func_9236 = relay.Function([], output)
mutated_mod['func_9236'] = func_9236
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9311 = relay.var("var_9311", dtype = "float64", shape = (2, 6, 9))#candidate|9311|(2, 6, 9)|var|float64
uop_9312 = relay.atanh(var_9311.astype('float64')) # shape=(2, 6, 9)
func_1574_call = mod.get_global_var('func_1574')
func_1577_call = mutated_mod.get_global_var('func_1577')
const_9320 = relay.const(10, dtype = "int8")#candidate|9320|()|const|int8
call_9319 = relay.TupleGetItem(func_1574_call(relay.reshape(const_9320.astype('int8'), [])), 0)
call_9321 = relay.TupleGetItem(func_1577_call(relay.reshape(const_9320.astype('int8'), [])), 0)
output = relay.Tuple([uop_9312,call_9319,const_9320,])
output2 = relay.Tuple([uop_9312,call_9321,const_9320,])
func_9324 = relay.Function([var_9311,], output)
mod['func_9324'] = func_9324
mod = relay.transform.InferType()(mod)
var_9325 = relay.var("var_9325", dtype = "float64", shape = (2, 6, 9))#candidate|9325|(2, 6, 9)|var|float64
output = func_9324(var_9325)
func_9326 = relay.Function([var_9325], output)
mutated_mod['func_9326'] = func_9326
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8775_call = mod.get_global_var('func_8775')
func_8776_call = mutated_mod.get_global_var('func_8776')
call_9368 = relay.TupleGetItem(func_8775_call(), 0)
call_9369 = relay.TupleGetItem(func_8776_call(), 0)
output = relay.Tuple([call_9368,])
output2 = relay.Tuple([call_9369,])
func_9371 = relay.Function([], output)
mod['func_9371'] = func_9371
mod = relay.transform.InferType()(mod)
mutated_mod['func_9371'] = func_9371
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9371_call = mutated_mod.get_global_var('func_9371')
call_9372 = func_9371_call()
output = call_9372
func_9373 = relay.Function([], output)
mutated_mod['func_9373'] = func_9373
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4212_call = mod.get_global_var('func_4212')
func_4213_call = mutated_mod.get_global_var('func_4213')
call_9535 = relay.TupleGetItem(func_4212_call(), 0)
call_9536 = relay.TupleGetItem(func_4213_call(), 0)
output = relay.Tuple([call_9535,])
output2 = relay.Tuple([call_9536,])
func_9537 = relay.Function([], output)
mod['func_9537'] = func_9537
mod = relay.transform.InferType()(mod)
output = func_9537()
func_9538 = relay.Function([], output)
mutated_mod['func_9538'] = func_9538
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8920_call = mod.get_global_var('func_8920')
func_8921_call = mutated_mod.get_global_var('func_8921')
call_9567 = relay.TupleGetItem(func_8920_call(), 0)
call_9568 = relay.TupleGetItem(func_8921_call(), 0)
func_6539_call = mod.get_global_var('func_6539')
func_6544_call = mutated_mod.get_global_var('func_6544')
const_9572 = relay.const([5.675173,1.297883,8.433031,5.293914,7.904178,4.015394,-4.264538,-4.261826,-5.786592,6.372958,6.483432,-9.275192,-3.926245,0.642539,7.627791,-6.672572,-1.534153,-6.006288,9.424727,3.043919,0.738250,8.537258,8.340653,8.854784,-8.966887,-2.163930,-6.166871,-4.277733,-7.315341,-3.348328,9.267144,0.655412,-2.583725,9.701688,6.000617,-2.550177,8.066682,-9.873033,-8.480775,6.272062,1.524762,-9.614501,-0.472394,-3.343254,-4.876080,-1.531084,6.842481,-6.994712,3.731157,-1.342558,-5.682896,-7.492816,-4.584796,-1.438211,-9.906941,5.783999,3.728271,2.944569,5.569008,3.325038,-4.889274,7.182314,2.319680,-8.337302,3.329342,9.011953,1.955632,-4.841708,-2.834941,-4.624654,-1.436265,-6.365404,-6.816858,2.468672,-1.308005,9.684475,1.492192,-5.967575,-4.291247,1.301606,6.366309,0.408193,-0.579511,4.658344,-5.851756,0.207344,1.123087,7.552029,8.081158,1.201880,8.693867,6.482964,4.454098,0.246841,-9.512047,-0.940133,9.918928,-0.037475,7.783513,-4.110127,-8.923236,-7.185899,-2.370741,8.655286,-5.572098,7.287678,9.980273,-1.823302,-6.781661,2.253488,5.179376,0.156270,2.114420,-8.545217,3.967142,7.293538,4.986150,5.571887,5.069575,6.924257,-7.090387,8.057715,2.286665,-5.584974,6.260972,-1.376934,4.113665,9.933214,-7.993250,9.666519,-7.652818,7.609138,-9.339512,3.165813,1.357799,-1.092809,3.251395,6.337219,5.389980,7.155691,8.766762,4.713330,1.441805,-8.559116,4.334060,1.411995,-1.839317,4.633717,5.165338,-9.969905,9.814334,-3.543624,-1.823458,-9.867486,-2.815929,-1.939243,1.507469,-2.240844,-9.619249,-0.751583,7.299645,5.648589,-0.186261,-2.411321,-7.448648,-5.606096,6.792719,-2.511967,0.099380,-4.692158,-7.082897,8.371686,-3.538923,-1.590504,-3.468600,-3.989290,-9.522974,4.871427,-4.256501,5.540113,-1.514773,2.825131,-4.951506,1.365405,-1.116499,1.763640,-2.061866,-5.505152,1.386279,2.118322,-6.677463,2.646371,-3.446266,5.615202,-2.211146,0.493211,8.085713,5.264181,-2.406973,4.765674,-8.021339,-0.256004,8.642379,4.076916,4.068112,0.573983,0.833114,9.385732,2.735770,-3.993509,3.368532,2.159625,-8.924420,-0.959773,3.369765,5.417630,7.144791,5.935641,9.079370,8.991414,0.944621,-3.866890,5.171649,-7.461527,-6.202438,-6.618760,-3.429196,-9.786934,-8.171193,-8.333441,-6.184570,1.267159,2.797315,5.057462,-4.649740,4.229960,4.824559,-7.757778,8.603113,3.523905,0.105513,6.585998,0.911039,2.512572,5.906710,-4.956370,9.816842,7.470312,-3.684867,9.894013,6.042364,-7.154285,-7.203407,5.686659,-8.774973,-0.054214,-9.785571,5.953878,9.400480,-7.418529,-1.917791,2.505264,-9.260501,-2.177155,4.474996,4.023374,5.277441,6.531167,-3.915782,3.911416,0.998298,5.731827,-8.444379,-9.139143,3.123015,-1.117806,2.000724,3.777231,-9.977394,-6.201698,-3.865786,-6.798801,9.289625,0.559870,-7.411349,-9.761378,-4.446636,6.025924,6.013279,7.695320,-7.059873,-7.035471,3.484720,-0.398116,-9.007873,7.667086,-2.074799,-7.276880,2.121511,-9.523319,-0.396470,0.442833,-9.824587,5.981081,-1.829223,-5.758865,-1.270380,-5.898147,-5.480276,9.746567,0.395956,0.008349,-8.443666,-2.945613,-1.402506,7.864488,1.506066,5.180395,-1.581843,8.047599,2.190473,3.195615,5.195758,8.964838,-9.171020,-1.435125,2.064376,-8.770630,0.017423,2.551500,2.423502,-1.300447,-9.885134,-3.200245,1.086933,2.595427,6.668773,-8.086526,3.331102,-4.199397,8.600966,5.993423,0.204830,-8.527621,-0.318000,-2.149515,4.278101,0.398344,-5.196880,-4.692346,6.847228,7.740511,-6.617340,7.914569,7.908373,-4.320178,-8.995305,-4.011899,6.725177,-9.980793,-5.119167,2.321272,-6.372948,5.472904,-9.783312,-7.393590,-3.795045,-8.672828,3.347474,-3.829709,8.828574,4.034721,-6.658550,0.086882,5.946265,-0.777694,-7.074177,0.148951,-4.287446,-0.615997,-7.656411,-8.072381,-2.049829,4.941017,6.957836,-5.593551,-0.286368,-9.629514,0.526362,-2.703825,-5.360211,0.343291,-2.127073,3.243093,8.050660,5.601137,-4.776256,-3.275996,-6.890282,-4.891676,2.318380,6.252435,8.439243,7.657053,2.586612,9.774152,-7.433148,2.618543,2.493871,5.453185,-3.112530,-6.614811,-2.874821,5.204411,-6.094324,-4.224458,-0.216262,-1.614359,-1.466430,6.066950,1.162856,4.509632,5.490352,8.357498,2.501533,1.130227,1.330485,-3.883067,5.313149,4.321961,3.867277,6.034294,3.232497,9.957327,1.789368,9.023033,7.306308,-3.329140,3.548697,0.300046,-7.595550,-1.912940,-6.851582,-2.314457,-3.875102,-3.028451,1.347341,-2.350613,2.006059,-9.987239,-9.227937,2.175454,-5.754287,-2.119863,4.954773,-8.920346,-5.527877,-5.073803,6.584712,-6.342669,-4.733499,-6.227048,1.927591,-1.586802,-7.471593,8.067737,-8.779491,4.700233,9.098942,9.845128,3.835083,-0.195737,-1.415889,7.674408,4.408866,-0.595805,-4.417972,-4.433763,7.107776,-2.285006,6.358487,-9.498271,-2.904088,0.966595,7.540440,4.470668,-8.123895,-7.609143,-6.590176,7.449887,-8.760387,7.807479,-0.862759,-7.850460,-3.773009,5.444665,-5.115264,6.688072,3.873831,-1.913589,3.379685,-6.038272,-4.545559,2.058232,-2.767379,-3.475591,-3.068796,7.953292,4.601112,-3.157183,-0.093105,-1.121278,5.679875,1.122306,-8.421217,1.646415,0.049720,5.017643,-9.540402,-7.042801,2.237625,5.029706,-8.711504,-4.799693,-7.252889,9.611338,5.273912,-8.529924,-5.347891,7.065556,6.999756,-2.076343,-5.901458,-1.310144,-4.616893,2.424824,-8.634703,1.276984,2.692923,-6.212690,-6.104224,-2.795829,0.652944,-1.310893,8.631940,-7.486048,-5.364551,1.128009,6.476899,-8.523317,7.546000,9.809442,-3.937002,-8.591718,0.115732,-4.759585,6.275037,4.613102,5.603442,-6.463787,4.489414,4.997491,2.615604,2.087558,5.373980,7.690138,1.337338,-1.647516,7.073523,-6.265643,1.682790,3.974092,2.653432,-0.868858,-6.360097,1.673012,1.963594,-4.152149,-2.173181,6.169423,6.427986,-2.641792,-6.284247,-2.008067,4.082968,-7.974588,5.942497,2.126672,-8.194277,1.663694,-7.858028,-3.412573,-7.478043,6.839277,-6.626792,-8.287234,4.726103,6.610225,8.785552,9.679170,-3.043858,9.656176,2.708102,-8.002200,-5.538374,5.911094,2.553181,3.125771,-9.128310,-1.915692,4.561320,-2.392680,7.831805,-2.347818,9.907450,2.293595,9.279957,-5.230751,-0.236706,-0.185183,-8.006159,6.474496,-6.867339,0.532048,3.024703,4.379689,-3.371846,6.891368,1.162111,-2.883209,-5.164130,-7.658794,9.883652,-6.769985,-3.806474,-0.836480,-0.800527,-1.949347,-7.377668,6.632583,8.148099,3.700059,-5.273418,4.304957,-0.030182,0.055819,4.202175,8.691409,-8.736053,-7.987462,-4.480101,8.761171,8.539038,8.722643,-7.258305,8.489095,-8.311920,9.656994,-7.845029,-4.299910,3.885793,0.127978,-0.337469,1.006821,-4.871675,4.619300,-7.152401,-9.652888,-9.750388,-3.567663,-1.717817,-4.981402,-5.626910,-2.383338,-0.687314,3.673138,-8.333077,-3.549190,5.834296,4.304714,-0.393744,8.141462,5.828992,-2.948553,2.185522,-1.511969,-5.817997,-3.831867,8.496725,9.273831,-6.838457,4.792191,8.963402,7.827083,0.637938,6.323495,8.624486,-1.852843,-5.933576,-6.674149,7.465469,0.728426,5.258201,-9.672481,-8.035113,-2.988243,3.219610,4.433605,7.093941,0.034518,2.968379,-5.403270,4.227423,-2.195002,1.883609,-9.714528,1.050160,9.009963,3.819205,5.129494,4.505816,-5.740135,2.755687,-1.708728,-8.148485,7.263519,-8.409732,-6.843824,8.570514,8.174100,6.270243,9.173412,8.651890,6.989645,5.988753,3.356153,-5.954639,5.293394,9.772550,3.909864,9.922116,-8.627762,-9.440229,-2.751727,8.293076,9.438769,3.994569,9.576930,3.557376,7.087479,-2.996223,2.372410,8.680369,-3.181740,-0.891805,-4.466818,6.187488,8.279011,-0.858975,5.248261,7.332152,-2.003339,3.170669,-4.640368,0.998762,0.560802,-7.022879,-1.715267,5.906718,-2.580534,-3.621732,-8.464707,8.803606,-4.624719,7.983657,1.344435,-9.156789,5.725694,-0.507782,-6.906940,5.708578,8.121467,-9.245660,7.528704,-2.565316,-3.191912,7.254682,-7.584286,-6.360789,-2.959973,-5.698033,2.681731,1.867739,7.840846,-8.340610,8.821125,2.151037,1.742003,7.319711,-9.744060,-4.980741,-4.860292,1.252236,6.932064,1.925617,8.432305,7.680627,-5.619992,9.792912,-2.513467,9.175265,8.239948,-3.749824,1.381542,-2.869946,-0.843439,-2.850989,-2.324592,1.535580,3.232313,4.392721,8.727880,2.890204,8.267283,6.355042,-8.995486,-4.359559,0.562203,-2.943577,-3.826356,-8.446007,-2.296895,9.104948,-3.783992,-0.796223,-4.210651,-3.502522,-6.267537,5.818163,-9.787069,-6.257850,-4.604749,0.210260,6.015932,-1.896972,-6.820126,-8.009389,1.155312,1.000439,7.283805,7.417634,6.716002,5.672740,-5.907839,1.287206,9.563654,5.664171,-3.995383,8.814652,5.096457,6.961333,1.961138,-0.135072,-7.677820,-4.273951,1.910551,2.704146,-5.932646,-3.993407,5.091355,0.469137,8.674173,-5.907482,3.030916,-3.626060,0.569280,-7.256502,9.280455,9.775529,-9.733855,8.819898,-6.860639,-7.801274,1.805970,2.557500,0.350027,1.913410,4.396593,-2.023688,-8.540251,3.350667,6.016368,-2.382898,-2.999122,-1.944076,3.821495,-2.248935,-3.998590,-8.957572,-5.892225,-1.049165,8.599809,-0.312132,-2.731583,6.386990,8.774960,-3.383622,6.730717,-7.378487,4.015504,-7.511052,-9.125757,-1.912341,-9.751544,7.585197,-4.770198,-8.558635,8.851611,-0.119513,3.398385,-1.411450,5.978719,4.866585,7.176657,-5.465042,-1.482774,-4.690966,-0.216753,3.285155,8.422899,1.701212,4.591098,3.517306,-3.690660,-7.572837,-4.209391,8.723576,4.587121,-2.476640,-3.708328,1.790923,7.536016,0.532535,-2.231483,-0.032160,0.104062,3.127620,6.422014,-2.774202,5.151649,-0.621633,8.848965,4.229030,-0.235413,-5.086490,-3.797988,-0.895769,3.186541,6.774853,-9.351374,4.308054,5.058052,-9.031410,-8.832326,4.481960,7.659004,7.719263,5.202379,-3.649097,-4.017039,-8.612248,-7.066274,-7.232343,-8.063363,-1.818575,-9.762029,3.795362,-0.571931,-9.452479,-8.923645,-9.768381,7.926108,-3.759862,-9.046154,0.452125,1.425071,-8.556688,-3.061778,2.061692,-9.785299,1.662357,-2.609564,0.354458,3.427526,7.890715,4.744591,7.070678,8.108983,1.495129,-2.840391,-4.947322,-0.023756,-6.226537,2.176758,0.689442,7.570324,-2.648105,2.529617,-0.343552,-5.577936,-1.230857,-3.122704,-1.047194,-7.354929,1.703836,-2.142404,-6.634091,-1.998465,4.158433,3.565765,-4.531413,-7.878365,-3.451287,-3.145080,-0.339853,-2.950658,-9.638969,-4.092972,-2.459089,-1.245731,-4.536885,7.067994,7.163980,2.851194,5.731777,7.678341,2.315262,8.659731,-1.618149,-6.082207,-1.122279,9.704011,7.782227,4.328641,-3.155348,-3.653624,0.308911,-8.666237,8.271555,3.558182,-0.871066,-0.767119,-4.936013,7.292372,2.534728,9.164613,-6.211574,-6.724191,1.498508,3.435612,7.091993,-9.237052,8.394300,5.634696,-3.555556,0.964087,-6.291860,-9.612785,7.343178,8.908970,6.838010,-3.718892,7.928907,-6.542975,5.397352,2.176204,3.930460,4.028701,-0.158213,4.640110,3.415059,2.118162,5.418899,1.568327,4.964812,3.088927,0.046771,-6.464126,7.073725,6.605825,-6.915764,6.736720,-3.400165,-5.988775,-0.510292,5.099753,-2.068018,4.297012,-9.319709,3.509305,4.704910,7.629147,-1.341189,4.477190,-9.608772,-3.771618,0.329092,-7.750067,-5.851884,-8.398932,-7.100770,7.385574,-8.914320,-7.538745,5.603913,-7.093918,3.877060,4.380017,4.901940,0.937639,-6.993745,-3.367979,1.226025,3.948741,7.439425,-5.719071,-2.189254,4.791630,-9.853174,4.635829,8.289092,-6.734692,7.391915,-9.409169,7.589052,-8.428617,-7.625039,7.589935,4.447112,2.247378,9.939445,2.630725,4.160033,-0.909632,-8.362622,3.581557,-2.006289,-3.073882,-5.507186,-3.807300,-0.278688,1.921443,-9.294562,6.592098,0.072339,-6.141008,-6.619511,-8.504072,-9.081110,-6.265326,6.289122,-2.109261,0.026902,8.889482,-7.644324,3.172240,8.801908,1.923547,-6.892592,9.469516,3.067708,-7.647546,1.592282,-4.563801,9.240667,3.584849,-2.565024,-6.431173,-6.908590,5.173885,-7.594899,-9.475138,7.243958,9.262653,-6.731011,-3.710080,-8.949487,0.875425,8.319370,-2.567408,-6.734999,4.020216,5.365804,9.342897,-6.126442,-5.123505,7.485369,-6.605445,-0.170001,-1.568002,-7.760383,6.688994,5.420911,5.867989,-6.468706,-5.243214,1.724595,6.459208,0.787571,-2.310093,-2.687062,-1.783424,5.587312,-7.939539,-0.587239,-9.823361,4.100237,-1.274412,1.719155,-0.844817,6.181680,-9.915568,-7.089638,7.713307,-5.983931,8.262398,7.060337,3.204086,-3.157847,-6.428372,-8.739330,-6.892942,-8.510501,0.405870,-3.449434,7.501507,-5.469852,-1.390793,-2.201888,-7.655365,0.285755,7.743719,-9.189149,-8.562960,-1.357468,1.978868,6.889207,1.406671,-8.105028,7.231124,-4.906644,-4.957999,2.034094,1.542926,3.522236,-4.780656,-0.628284,7.353408,-7.666029,0.581883,-9.422659,-8.004457,-0.688076,-8.183019,-3.345111,4.632522,-4.340341,9.256922,-8.126188,4.157684,-8.406281,9.477876,0.204487,8.552736,-2.443845,6.234274,-1.731256,-5.384414,5.933088,4.961997,8.714433,-1.558456,9.215431,1.506123,-8.430195,8.433994,-1.593210,2.546537,5.985564,-6.123011,-9.718443,-5.520882,7.421987,1.092204,4.144010,-4.639152,-5.615343,5.141330,-0.960263,9.245955,8.457948,5.577065,3.512103,-3.614075,-8.568314,-7.724940,-5.286690,3.642615,-3.440672,-4.934497,6.768487,-8.958099,0.667984,5.643622,-5.498970,-3.454325,1.860329,3.192513,0.352514,7.043616,-1.515985,-3.753604,6.211562,-4.579868,-5.879467,7.659431,8.266507,8.641621,6.760800,-6.034509,-5.345410,-3.866662,4.763523,-0.176076,3.830353,-0.462362,-0.910983,-3.519910,-6.820209,8.496628,5.403322,-7.988208,-1.881174,1.677754,7.798737,6.341710,-0.841010,7.912877,9.940601,-0.454243,-3.032683,1.522028,4.423195,-5.202300,-9.495631,0.674194,-5.174544,5.038411,8.677372,4.405445,-7.722209,-3.684610,-3.868779,-7.910538,-8.315662,-8.466927,9.250693,3.502981,8.571778,-4.717407,7.582154,3.428004,-6.890021,-4.090284,6.000169,-7.983635,-3.525282,-3.951420,-6.181112,-3.723284,-3.030522,9.175233,-9.576509,-3.302265,-2.018139,-0.407370,-0.621556,-7.126136,-9.442101,2.864532,-6.052433,9.532988,-5.067287,9.467466,9.227969,4.268485,-3.207484,3.845273,1.867305,-2.878638,4.313452,2.673115,-2.961189,-9.200352,-7.700657,-4.213402,1.902915,9.698038,9.658770,-2.714893,1.653159,-7.341515,0.643174,-7.919907,-4.864918,-5.267434,5.546027,5.927168,6.360258,-8.019884,7.464229,-3.980695,2.784954,1.687067,-0.950288,3.200811,5.605070,1.713386,1.661261,-1.920083,-4.436538,0.395882,-7.639719,4.893731,-7.283247,-9.562552,-6.388326,-9.834021,-3.207321,1.247789,-4.951557,-4.753779,-9.047254,-7.455612,-9.986798,9.767221,1.233819,-6.120715,-6.253982,-4.805640,-4.252336,-8.162214,8.378767,-7.280463,-0.618693,2.063408,-8.789220,4.412826,4.775033,-3.849552,-2.563047,5.165895,0.927504,8.054168,8.068807,-0.166912,-8.988035,1.183179,-0.367709,-2.445960,1.026619,7.215311,5.804392,-9.190721,-9.992362,-5.762439,1.855269,-1.578171,-2.848493,-0.965137,6.786892,1.242847,0.123991,-2.804293,-3.142721,4.228792,-5.679745,0.035697,1.620103,-8.222926,-9.710626,-0.340041,-7.386068,-2.326684,-7.402021,2.663523,-2.748727,-4.871200,1.312844,3.272769,0.547690,7.826208,1.422126,4.618744,-4.272351,-3.998014,9.902380,-6.914697,2.551881,-5.210086,2.602079,-0.442540,-1.961609,-1.637898,4.458700,8.880815,-3.687080,-1.472558,9.136292,-5.266806,5.461937,-9.653308,4.855794,5.597570,-4.356835,-1.329700,5.328375,2.419623,5.531609,1.110572,1.955425,5.059828,4.140400,6.292091,-8.050184,-6.002666,-8.359171,-8.716320,-7.855454,-3.541814,3.993865,-5.503676,1.652723,-9.691403,8.258427,3.063331,-5.961048,-9.782490,-1.212260,-6.418723,4.868406,1.852357,6.310904,1.487353,6.699451,-4.399475,9.907335,7.337695,-5.051273,7.631523,6.632462,-4.721658,-7.911720,3.143847,-3.834002,6.235677,-4.509742,7.113987,-6.844611,3.100315,9.675833,-6.720799,6.517776,3.875385,5.752711,2.818780,-7.563964,-2.725674,0.046274,1.786034,9.530619,0.915070,6.550345,8.147270,-7.747646,8.203507,4.440239,-6.611457,7.361494,-2.202278,-3.216719,0.572991,-6.906756,7.168940,6.479721,8.953516,5.874520,2.029919,-4.929557,-9.474299,0.406958,-2.372985,9.205198,5.040712,-7.821207,4.090554,-1.487068,7.608327,-2.788146,-3.474439,-3.092345,-8.779208,-6.049542,-2.101742,2.218310,4.003310,4.598740,2.416959,-3.753792,4.368440,-6.250995,-5.987106,-4.925335,9.325953,-7.137276,-2.564122,-9.576018,2.513880,-9.094515,3.392549,-0.022840,3.297884,-2.750648,7.816117,2.441284,4.768273,9.711084,-7.437568,-8.767232,1.287866,5.318887,0.522995,-5.709340,6.931938,-7.211809,-1.022043,4.080221,-7.238081,-0.554975,3.217069,6.521428,-7.539230,-6.426695,-5.879614,-7.778165,1.058662,2.886826,4.587884,4.439656,3.680749,7.833725,9.629750,3.128135,-8.539559,3.044130,6.449589,8.689493,3.288066,8.672069,-0.536621,4.925541,1.778896,-0.999724,6.063908,1.752826,4.935564,-0.077862,-1.388694,7.409042,-1.190910,-6.318478,5.820313,4.262637,0.133589,-7.344843,-6.249487,8.990961,-0.818741,4.589562,-7.392288,-6.606009,8.566440,-4.699247,-7.544386,3.722860,-4.602660,8.057864,3.978183,-1.792003,9.980758,-7.649194,8.099950,8.344265,7.746795,9.880519,-7.970464,5.067407,-0.261194,0.253403,1.804486,6.940466,-2.364703,5.599654,0.403730,-6.469946,-2.412573,6.057938,-5.993986,-9.299466,8.790943,3.524695,9.950245,1.173430,-5.590323,8.479465,6.693934,7.461304,5.108211,1.684081,1.725077,6.022233,-1.183343,7.331999,0.479799,-2.626839,7.140596,-3.578138,7.732539,-2.287046,-8.318542,5.290729,2.774070,4.778876,-7.093762,6.576126,-0.252025,3.881878,2.665682,-8.440462,-6.091503,4.481668,-6.219743,6.933033,-7.282995,-2.281572,4.146138,-3.262910,-4.259794,5.158534,7.213679,-8.287272,1.545665,-8.499625,-0.676800,5.193519,-7.125457,-7.162316,8.897602,-3.336296,-6.195173,-3.529112,-2.908820,-2.507450,9.003759,1.260506,-0.265701,-7.696663,-5.147999,8.195229,8.257855,3.204527,8.697358,8.022092,2.619979,-4.457480,-1.606323,5.396382,-6.779623,8.246937,4.531450,-4.588937,0.157872,1.025934,9.020203,-1.249360,-5.228408,-5.122545,-3.804761,-8.171701,8.193443,5.444271,1.054569,3.379459,-5.421261,3.000991,1.041600,5.702490,7.883887,-1.274483,2.568937,6.579394,9.850851,-3.942968,8.241782,6.259470,9.339781,-8.569385,-6.889439,-6.688117,9.617393,-2.937141,8.494731,6.613196,5.858209,-4.964626,-7.327461,-3.922100,6.462198,8.428180,8.520093,-0.383139,9.596075,9.250709,-1.768931,-5.189935,-1.408841,-3.219716,2.233270,-1.662413,-0.367277,8.066947,-7.789517,-2.379433,-8.864851,0.163202,-9.380840,5.940055,-6.903029,5.857337,-8.551402,-2.880783,9.020764,9.595980,-6.491201,5.754257,-0.182161,-7.940011,-2.079053,-8.050547,-1.665831,-8.524013,5.110999,6.185035,-1.495713,-5.875691,-4.629252,3.590331,-4.127519,-0.877866,-1.217165,8.100866,7.672525,-5.215385,-0.930756,-3.135376,-2.235988,9.396401,-0.370205,1.925826,-6.540601,-7.680313,5.953533,-3.936077,-4.299295,-5.697924,-4.351096,6.125980,0.244654,1.682694,-9.967870,1.020960,-4.314637,0.039202,3.338547,6.220849,-3.001639,-8.436966,-1.760513,5.774929,-0.193067,5.231685,6.284391,-1.162715,-3.918886,-1.351110,5.044770,3.903778,9.431973,3.568871,-3.366341,-5.518480,-3.592962,-7.450253,7.274155,1.295002,5.402383,-5.020376,1.975888,-5.840153,-4.609327,-0.174319,-9.497815,2.081770,-7.344124,-5.889486,2.145565,-4.093151,0.254564,-9.668493,-7.685038,-1.997185,7.555895,3.835955,3.508932,-5.890440,-3.527734,-0.588120,2.592931,-4.427681,-4.666093,-6.476777,9.528625,9.492400,4.096108,3.012070,4.978971,4.764072,-6.852564,7.028490,-9.299549,6.057951,-6.156955,9.642657,4.620643,-3.106655,-4.661870,-1.014927,0.562434,9.501698,8.650605,-0.331036,-0.166398,2.804142,-5.242299,0.035143,0.207361,-5.310244,-1.918062,4.828736,3.971737,4.765527,-8.942325,-8.803418,6.891603,-3.404039,-0.418743,5.527603,-8.106029,-3.475185,5.304428,-8.575920,-5.394882,-5.335395,-2.634588,2.971022,9.734674,-5.151364,-6.377319,9.121931,-0.358754,-0.846317,1.549533,3.465853,4.833332,-3.195696,2.160341,5.768049,9.805252,-3.759204,4.522297,-1.456998,-6.786078,-6.426145,2.139509,-7.239427,8.571645,-6.065742,-4.790486,-8.513845,2.520527,-0.684803,9.307085,3.511839,-8.995067,4.303827,3.951218,-8.780735,-9.292544,-1.439211,8.366007,5.474681,0.525888,3.445401,7.837213,8.077249,-9.563739,-5.465328,7.863535,0.838780,5.065943,7.529565,-7.103923,9.379191,-5.846716,-7.831356,-0.770151,-0.214358,3.018246,-3.038571,-3.494189,-5.367676,6.233633,-7.420663,-6.883855,-1.852517,-6.730443,-0.347052,-5.427271,4.683173,1.946205,-8.333685,4.925625,4.337613,-1.593938,-4.140417,-2.035883,2.067560,9.369775,-8.749737,4.519202,8.851074,2.445796,-7.264504,3.064831,-8.487652,6.384722,8.476130,-6.554583,-9.044340,-8.043972,7.462663,1.985835,-4.442705,-6.530395,-5.454362,-9.656133,-7.010011,2.636440,8.498914,-7.141194,3.454764,-0.468781,9.552762,2.894535,3.021026,-2.636510,-9.490145,9.858934,-9.116835,-1.592514,-3.626993,-6.470284,-5.346435,2.028315,6.489923,5.319807,-8.871140,2.122688,-5.480124,4.702336,-3.462888,-7.638614,4.266418,8.676470,-9.327982,-4.879809,-9.585861,4.494438,-2.684066,-6.892259,-5.375254,-7.290767,9.389726,-7.109458,-9.650668,0.148881,7.907737,-1.921696,-6.250471,-9.660233,4.528154,8.209570,-5.045189,-1.428548,4.715014,-8.594259,-5.849348,-0.793908,-4.141642,-2.593826,-7.331889,9.766470,8.555377,-9.383633,5.288851,-4.048226,1.060673,6.988426,-7.369961,-9.334864,-5.456848,-7.326137,6.107038,9.303732,1.037433,6.450975,0.267343,-4.464684,-5.711164,-2.018661,3.041534,-4.840133,-9.477322,-5.258276,5.226070,0.208003,3.296801,-0.885302,-9.776251,-9.856586,3.906322,-8.684325,-0.694408,-0.787633,2.957146,2.031645,9.440112,-7.718076,5.133592,8.737782,1.580886,-6.987282,-6.415976,-7.858648,-2.640595,-5.666238,-1.615123,8.967711,2.485012,6.404051,-1.704472,-9.155412,-2.756367,-6.385244,8.096286,-4.003419,-6.147190,-9.292058,1.056121,7.662530,6.601162,-5.862983,-2.890643,6.146197,9.984358,3.043484,9.192913,3.463633,-9.355513,8.348976,0.301664,-3.617769,-8.859006,-6.821740,8.934819,-1.307924,-0.643788,-3.200045,-9.230731,-4.216619,-4.982073,0.284204,2.005516,4.675803,-5.897272,-9.442508,-2.956813,6.466346,6.210042,8.366664,-0.005155,7.563716,-6.812264,4.789168,2.885924,-4.785246,3.334102,2.173803,-4.071266,-6.354471,9.306874,9.630678,-3.004368,2.463917,-2.048476,-9.742603,-3.229466,1.758801,-5.294403,8.749797,5.272363,6.317405,6.722491,8.604459,-9.467293,2.782386,-5.851349,5.522462,0.919864,-0.560158,4.216209,-9.847660,1.622715,-8.215912,1.006555,8.590053,0.836209,2.051519,-9.164177,0.570889,4.943835,-6.325768,3.124761,-0.664093,-5.892992,-0.803234,4.497478,4.679085,6.269874,-7.135053,7.751491,5.317701,9.138404,-7.536274,2.798170,-7.264809,-1.261299,9.808973,-0.947077,-0.693954,-0.742090,2.292266,-7.919824,-1.529653,-4.759340,-1.712099,3.637263,0.177221,-1.710552,-9.641861,3.625933,-5.957521,5.808609,5.755035,5.378542,5.845964,-4.752389,-6.414350,7.703772,-1.498156,8.689416,-7.511769,-1.252615,7.247333,5.408516,2.026971,-4.843029,-1.825599,9.417821,-6.900175,4.217830,-2.564150,-3.045686,-5.999932,-0.749231,7.404900,3.050833,-9.935913,5.033297,8.589672,5.962149,4.651406,-9.862645,1.625317,9.588787,6.575091,1.813822,2.148837,-1.048326,-8.269439,-5.809346,-2.924939,0.519970,-6.759152,0.976748,3.898191,-9.816979,-6.462936,-7.999256,-1.650104,9.543233,-6.730224,9.337309,-0.944792,-1.249253,-6.602980,3.110722,-8.274353,4.828860,5.152783,-5.272580,3.658916,-7.079748,-7.894860,-9.196849,-0.571803,-4.693903,-6.650131,-9.057389,7.554908,1.744796,-9.249529,-1.392252,7.362593,5.708220,-4.313218,9.879504,-4.557261,-1.157591,-7.868571,0.123600,-1.030195,-4.037776,2.795700,-9.131183,3.900430,5.621400,-9.713692,-7.377650,9.545485,-2.083196,-1.814220,-4.704431,9.670315,0.293197,8.243954,7.903152,-2.336177,-9.593321,-7.298332,-5.565661,6.053679,1.004676,8.659097,6.225027,4.996423,6.859025,-9.132985,-5.409010,-1.510236,0.312235,-7.951671,4.230841,-4.872940,9.349462,-0.561415,-8.069374,4.187163,5.222055,-8.260265,2.042894,2.469788,9.700094,-7.678877,0.964177,9.557892,-5.835930,3.950097,-8.816852,-4.114205,1.280902,0.557515,-9.236596,0.775948,2.696114,-2.671752,-2.553622,8.063948,7.765079,9.793980,-3.296876,-5.668151,2.359618,9.156795,9.420882,1.805668,-3.893317,5.882749,6.881965,8.495772,-9.741248,3.719813,5.677955,-7.866961,5.207208,7.837718,-2.162100,-3.326333,-8.339267,1.922997,3.361114,-5.206437,5.732739,-0.544665,-6.181633,1.730133,-2.286917,8.672904,-8.389008,-9.439047,-4.207338,0.793337,3.234860,-1.402814,2.598745,-0.996778,-8.604143,0.829461,-0.346764,-3.825457,9.063512,1.642028,-2.296774,3.210297,-3.624536,-1.642925,9.013068,8.848905,-5.783315,-1.534314,8.991314,-5.827125,0.080355,2.356338,-0.876382,8.603432,9.544733,4.086000,1.338384,-9.534720,-5.031061,-3.817976,5.371797,9.011586,3.899011,3.412534,-2.536550,-4.930302,9.047925,9.293676,4.193333,7.378686,1.603752,3.312233,4.472687,-2.844257,-7.173142,-7.982129,-4.020806,9.036720,3.957357,-5.676462,5.594939,-1.849144,-6.862437,-7.736105,-2.062360,-4.154941,-0.409566,-1.830377,-1.860854,2.761400,-3.400836,-2.499051,7.946587,-1.216962,-9.948287,-0.779450,-9.321009,9.707068,-6.969480,-8.348792,9.406902,-1.341830,-0.985602,-2.426486,7.392469,-0.812614,2.752737,-8.557431,-2.391558,5.288468,9.187363,-8.476203,-6.003639,-3.664509,5.122196,6.042025,-9.910576,-2.445688,0.748723,1.860645,1.466769,-7.454829,-6.445500,3.695545,1.797675,9.528832,5.761225,-3.236266,9.268771,-9.562080,-4.112278,-0.712243,-8.325388,7.059010,3.375188,-8.028713,-7.397768,5.945816,-7.930404,-2.115741,3.970749,-7.600735,9.141937,5.372097,-8.661970,-4.638602,7.164997,7.910487,6.700141,6.701604,7.421983,2.669048,-2.715592,-5.808771,-6.426880,4.629561,-7.928276,-1.868925,-3.127336,9.576155,8.138439,1.535211,-0.384929,-3.925645,-3.518066,-8.333047,-4.735124,7.824898,-2.474721,0.187811,-7.745341,-7.389112,-9.113247,2.582815,-1.425231,9.943265,-4.850436,4.364221,3.058348,-8.815887,0.109631,5.790718,3.487077,0.053915,-1.624563,-6.572571,1.978454,-8.104037,6.876814,-6.410626,-9.736802,9.947414,8.316168,4.381435,9.823512,-7.607961,-7.660077,-1.530299,-2.555925,4.142821,-3.366328,-0.878763,-2.082045,5.650015,-8.995321,-3.368473,-1.036164,9.586675,-5.069273,-6.080678,-3.199578,-5.923331,7.626438,-2.013220,-4.684214,-9.822043,1.736169,-3.031411,4.369018,7.297767,-1.049163,-8.334963,-0.550170,-4.266873,-2.726835,-3.510648,5.164582,3.182901,4.016514,-8.055918,6.733821,-2.592948,0.351847,5.109958,-6.645162,-2.408012,-7.600724,2.732092,-7.743454,9.434175,0.588247,-7.425356,-1.525001,9.035839,1.648530,-1.557063,-4.916992,-8.211927,1.103732,5.362827,-3.377240,-6.288758,-7.077442,3.141559,4.008518,-8.175283,-3.912676,7.293721,-4.247752,-2.015737,8.920450,6.406220,8.023483,5.296527,9.644198,2.467849,3.934395,-4.347859,0.857699,-7.485696,-4.465924,5.660786,6.771243,5.959187,0.036409,-3.176390,-6.969863,0.840146,8.076896,8.084586,1.160303,-4.337179,-6.255296,-6.283693,1.490789,2.340972,4.033032,-4.252779,7.866898,2.637523,-2.017233,3.463152,3.600798,-7.835193,-6.714756,4.716989,-7.940771,-1.200067,-0.556467,1.660156,0.339987,7.096400,6.624040,-5.596192,8.319851,-8.580175,9.801931,5.912794,-2.552566,9.941373,7.739922,-7.363056,-8.732806,-3.239431,1.841145,-4.954571,-0.285733,-2.405408,-4.384670,0.481401,-2.989132,9.813627,0.418028,-6.934127,-4.069489,-0.890022,-4.687477,-1.885142,8.828263,1.197531,-6.765297,-7.555956,2.047746,-2.246177,4.620641,9.943324,7.480908,4.869534,8.637117,-4.353233,9.211950,3.045912,5.694848,-5.351110,6.883008,-3.156540,-2.899480,-5.571120,5.122666,4.053233,-0.566556,-4.628608,7.906291,5.470090,7.699176,-4.074386,-3.195676,-8.732976,0.665451,8.232926,-6.169925,-4.205635,-9.952598,-5.013771,-4.180929,-3.293477,-7.662224,-9.052606,-8.282650,9.868303,-7.836121,-9.567499,0.173121,-7.284164,2.054730,8.929259,3.341152,-5.049502,5.312723,2.686431,-9.717905,-3.669345,-6.753566,-0.053457], dtype = "float64")#candidate|9572|(2816,)|const|float64
var_9573 = relay.var("var_9573", dtype = "float64", shape = (60,))#candidate|9573|(60,)|var|float64
var_9574 = relay.var("var_9574", dtype = "float32", shape = (22, 7))#candidate|9574|(22, 7)|var|float32
var_9575 = relay.var("var_9575", dtype = "uint64", shape = (1664,))#candidate|9575|(1664,)|var|uint64
call_9571 = relay.TupleGetItem(func_6539_call(relay.reshape(const_9572.astype('float64'), [2816,]), relay.reshape(var_9573.astype('float64'), [60, 1]), relay.reshape(var_9574.astype('float32'), [154,]), relay.reshape(var_9575.astype('uint64'), [104, 16]), ), 5)
call_9576 = relay.TupleGetItem(func_6544_call(relay.reshape(const_9572.astype('float64'), [2816,]), relay.reshape(var_9573.astype('float64'), [60, 1]), relay.reshape(var_9574.astype('float32'), [154,]), relay.reshape(var_9575.astype('uint64'), [104, 16]), ), 5)
output = relay.Tuple([call_9567,call_9571,const_9572,var_9573,var_9574,var_9575,])
output2 = relay.Tuple([call_9568,call_9576,const_9572,var_9573,var_9574,var_9575,])
func_9581 = relay.Function([var_9573,var_9574,var_9575,], output)
mod['func_9581'] = func_9581
mod = relay.transform.InferType()(mod)
mutated_mod['func_9581'] = func_9581
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9581_call = mutated_mod.get_global_var('func_9581')
var_9583 = relay.var("var_9583", dtype = "float64", shape = (60,))#candidate|9583|(60,)|var|float64
var_9584 = relay.var("var_9584", dtype = "float32", shape = (22, 7))#candidate|9584|(22, 7)|var|float32
var_9585 = relay.var("var_9585", dtype = "uint64", shape = (1664,))#candidate|9585|(1664,)|var|uint64
call_9582 = func_9581_call(var_9583,var_9584,var_9585,)
output = call_9582
func_9586 = relay.Function([var_9583,var_9584,var_9585,], output)
mutated_mod['func_9586'] = func_9586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8775_call = mod.get_global_var('func_8775')
func_8776_call = mutated_mod.get_global_var('func_8776')
call_9631 = relay.TupleGetItem(func_8775_call(), 0)
call_9632 = relay.TupleGetItem(func_8776_call(), 0)
output = relay.Tuple([call_9631,])
output2 = relay.Tuple([call_9632,])
func_9633 = relay.Function([], output)
mod['func_9633'] = func_9633
mod = relay.transform.InferType()(mod)
mutated_mod['func_9633'] = func_9633
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9633_call = mutated_mod.get_global_var('func_9633')
call_9634 = func_9633_call()
output = call_9634
func_9635 = relay.Function([], output)
mutated_mod['func_9635'] = func_9635
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5650_call = mod.get_global_var('func_5650')
func_5652_call = mutated_mod.get_global_var('func_5652')
call_9683 = func_5650_call()
call_9684 = func_5650_call()
output = relay.Tuple([call_9683,])
output2 = relay.Tuple([call_9684,])
func_9685 = relay.Function([], output)
mod['func_9685'] = func_9685
mod = relay.transform.InferType()(mod)
mutated_mod['func_9685'] = func_9685
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9685_call = mutated_mod.get_global_var('func_9685')
call_9686 = func_9685_call()
output = call_9686
func_9687 = relay.Function([], output)
mutated_mod['func_9687'] = func_9687
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4016_call = mod.get_global_var('func_4016')
func_4018_call = mutated_mod.get_global_var('func_4018')
call_9754 = relay.TupleGetItem(func_4016_call(), 0)
call_9755 = relay.TupleGetItem(func_4018_call(), 0)
var_9761 = relay.var("var_9761", dtype = "float32", shape = (14, 7, 3))#candidate|9761|(14, 7, 3)|var|float32
bop_9762 = relay.bitwise_xor(call_9754.astype('int16'), relay.reshape(var_9761.astype('int16'), relay.shape_of(call_9754))) # shape=(14, 7, 3)
bop_9765 = relay.bitwise_xor(call_9755.astype('int16'), relay.reshape(var_9761.astype('int16'), relay.shape_of(call_9755))) # shape=(14, 7, 3)
output = bop_9762
output2 = bop_9765
func_9773 = relay.Function([var_9761,], output)
mod['func_9773'] = func_9773
mod = relay.transform.InferType()(mod)
mutated_mod['func_9773'] = func_9773
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9774 = relay.var("var_9774", dtype = "float32", shape = (14, 7, 3))#candidate|9774|(14, 7, 3)|var|float32
func_9773_call = mutated_mod.get_global_var('func_9773')
call_9775 = func_9773_call(var_9774)
output = call_9775
func_9776 = relay.Function([var_9774], output)
mutated_mod['func_9776'] = func_9776
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8065_call = mod.get_global_var('func_8065')
func_8066_call = mutated_mod.get_global_var('func_8066')
call_9787 = relay.TupleGetItem(func_8065_call(), 0)
call_9788 = relay.TupleGetItem(func_8066_call(), 0)
func_4016_call = mod.get_global_var('func_4016')
func_4018_call = mutated_mod.get_global_var('func_4018')
call_9856 = relay.TupleGetItem(func_4016_call(), 0)
call_9857 = relay.TupleGetItem(func_4018_call(), 0)
output = relay.Tuple([call_9787,call_9856,])
output2 = relay.Tuple([call_9788,call_9857,])
func_9859 = relay.Function([], output)
mod['func_9859'] = func_9859
mod = relay.transform.InferType()(mod)
mutated_mod['func_9859'] = func_9859
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9859_call = mutated_mod.get_global_var('func_9859')
call_9860 = func_9859_call()
output = call_9860
func_9861 = relay.Function([], output)
mutated_mod['func_9861'] = func_9861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5655_call = mod.get_global_var('func_5655')
func_5656_call = mutated_mod.get_global_var('func_5656')
call_9869 = func_5655_call()
call_9870 = func_5655_call()
output = relay.Tuple([call_9869,])
output2 = relay.Tuple([call_9870,])
func_9879 = relay.Function([], output)
mod['func_9879'] = func_9879
mod = relay.transform.InferType()(mod)
mutated_mod['func_9879'] = func_9879
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9879_call = mutated_mod.get_global_var('func_9879')
call_9880 = func_9879_call()
output = call_9880
func_9881 = relay.Function([], output)
mutated_mod['func_9881'] = func_9881
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9882 = relay.const([[[4,-4,3,-8,-3,7,2,-2,-1,-10,2,-7,-1,1,4,7],[-9,-2,-8,-3,7,-4,7,9,-7,-10,-9,9,6,1,9,-9]],[[-8,-1,1,-7,3,9,-7,10,9,2,-7,-2,-1,6,-9,-8],[-7,-3,-10,-9,4,-5,-10,5,-4,-9,-10,-7,-4,-2,-7,-9]],[[-7,3,3,-4,-3,7,3,3,3,-10,3,-3,-10,9,3,-2],[-10,-2,8,-9,-5,4,-10,-7,1,5,7,-2,-3,4,8,-8]],[[10,1,-6,-1,-9,-10,4,-2,-9,10,5,4,-10,5,6,-6],[5,-6,-10,-3,4,7,-3,2,6,-9,-1,-10,-1,2,-10,4]]], dtype = "uint64")#candidate|9882|(4, 2, 16)|const|uint64
var_9883 = relay.var("var_9883", dtype = "uint64", shape = (4, 2, 16))#candidate|9883|(4, 2, 16)|var|uint64
bop_9884 = relay.not_equal(const_9882.astype('bool'), relay.reshape(var_9883.astype('bool'), relay.shape_of(const_9882))) # shape=(4, 2, 16)
output = relay.Tuple([bop_9884,])
output2 = relay.Tuple([bop_9884,])
func_9903 = relay.Function([var_9883,], output)
mod['func_9903'] = func_9903
mod = relay.transform.InferType()(mod)
mutated_mod['func_9903'] = func_9903
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9904 = relay.var("var_9904", dtype = "uint64", shape = (4, 2, 16))#candidate|9904|(4, 2, 16)|var|uint64
func_9903_call = mutated_mod.get_global_var('func_9903')
call_9905 = func_9903_call(var_9904)
output = call_9905
func_9906 = relay.Function([var_9904], output)
mutated_mod['func_9906'] = func_9906
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5655_call = mod.get_global_var('func_5655')
func_5656_call = mutated_mod.get_global_var('func_5656')
call_9910 = func_5655_call()
call_9911 = func_5655_call()
func_5650_call = mod.get_global_var('func_5650')
func_5652_call = mutated_mod.get_global_var('func_5652')
call_9916 = func_5650_call()
call_9917 = func_5650_call()
func_6764_call = mod.get_global_var('func_6764')
func_6767_call = mutated_mod.get_global_var('func_6767')
var_9931 = relay.var("var_9931", dtype = "float32", shape = (70,))#candidate|9931|(70,)|var|float32
call_9930 = relay.TupleGetItem(func_6764_call(relay.reshape(var_9931.astype('float32'), [70,])), 1)
call_9932 = relay.TupleGetItem(func_6767_call(relay.reshape(var_9931.astype('float32'), [70,])), 1)
func_9222_call = mod.get_global_var('func_9222')
func_9226_call = mutated_mod.get_global_var('func_9226')
const_9938 = relay.const([-1.382880,-7.993288,9.919328,-5.416096,6.884084,6.771810,5.209119,-9.207465,4.284098,3.220142,2.532419,-4.856485,1.177583,5.861720,4.074091,-5.398722,3.658471,-0.623981,1.257110,-1.585977,-3.064253,4.321050,-5.359968,8.085537,-0.155738,7.593041,-0.126313,-1.676974,-9.570818,-9.021023,-1.654675,-8.252351,0.433453,-2.375571,7.761084,-0.671247,9.596164,1.449832,5.057506,7.731741,-5.720082,2.006977,6.889601,-2.877787,-5.599562,1.917151,-6.998344,-1.255067,-6.645208,-3.697489,-7.116636,3.590304,-9.014810,3.591662,-3.128967,3.785583,9.373504,8.903428,-1.085280,-2.404102,8.868410,-9.879435,6.411842,8.974947,1.379259,8.923720,-7.122358,8.290698,-8.075479,2.336789,-0.495658,7.309448,2.890846,-3.585616,-7.231342,-6.336598,-7.876992,2.837954,-3.484618,8.303844,-3.333012,4.345560,-1.855964,0.757295,7.307156,8.507694,5.871026,3.782544,3.251706,6.721737,-9.835301,0.481619,-0.953285,3.264995,-5.874152,-6.011172,1.465434,6.487511,7.100875,-7.429224,0.817421,-9.806851,-1.676487,-3.835555,4.898080,-5.418610,4.653414,-5.227119,-9.694036,-4.383273,-3.128348,-8.042849,-7.109586,1.723716,-5.005901,-7.592640,0.075876,5.489265,-1.325252,-7.219211,1.284973,-2.407830,-1.399011,-5.985462,-8.590591,8.086382,0.343676,-8.031972,-1.034872,9.384487,-4.763287,-1.838019], dtype = "float32")#candidate|9938|(132,)|const|float32
var_9939 = relay.var("var_9939", dtype = "float32", shape = (528,))#candidate|9939|(528,)|var|float32
call_9937 = relay.TupleGetItem(func_9222_call(relay.reshape(const_9938.astype('float32'), [3, 4, 11]), relay.reshape(var_9939.astype('float32'), [528,]), ), 1)
call_9940 = relay.TupleGetItem(func_9226_call(relay.reshape(const_9938.astype('float32'), [3, 4, 11]), relay.reshape(var_9939.astype('float32'), [528,]), ), 1)
output = relay.Tuple([call_9910,call_9916,call_9930,var_9931,call_9937,const_9938,var_9939,])
output2 = relay.Tuple([call_9911,call_9917,call_9932,var_9931,call_9940,const_9938,var_9939,])
func_9952 = relay.Function([var_9931,var_9939,], output)
mod['func_9952'] = func_9952
mod = relay.transform.InferType()(mod)
mutated_mod['func_9952'] = func_9952
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9952_call = mutated_mod.get_global_var('func_9952')
var_9954 = relay.var("var_9954", dtype = "float32", shape = (70,))#candidate|9954|(70,)|var|float32
var_9955 = relay.var("var_9955", dtype = "float32", shape = (528,))#candidate|9955|(528,)|var|float32
call_9953 = func_9952_call(var_9954,var_9955,)
output = call_9953
func_9956 = relay.Function([var_9954,var_9955,], output)
mutated_mod['func_9956'] = func_9956
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4775_call = mod.get_global_var('func_4775')
func_4777_call = mutated_mod.get_global_var('func_4777')
call_10032 = relay.TupleGetItem(func_4775_call(), 0)
call_10033 = relay.TupleGetItem(func_4777_call(), 0)
func_6604_call = mod.get_global_var('func_6604')
func_6606_call = mutated_mod.get_global_var('func_6606')
call_10039 = func_6604_call()
call_10040 = func_6604_call()
output = relay.Tuple([call_10032,call_10039,])
output2 = relay.Tuple([call_10033,call_10040,])
func_10055 = relay.Function([], output)
mod['func_10055'] = func_10055
mod = relay.transform.InferType()(mod)
output = func_10055()
func_10056 = relay.Function([], output)
mutated_mod['func_10056'] = func_10056
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5650_call = mod.get_global_var('func_5650')
func_5652_call = mutated_mod.get_global_var('func_5652')
call_10093 = func_5650_call()
call_10094 = func_5650_call()
func_1758_call = mod.get_global_var('func_1758')
func_1762_call = mutated_mod.get_global_var('func_1762')
var_10115 = relay.var("var_10115", dtype = "uint64", shape = (1664,))#candidate|10115|(1664,)|var|uint64
call_10114 = relay.TupleGetItem(func_1758_call(relay.reshape(var_10115.astype('uint64'), [13, 16, 8]), relay.reshape(var_10115.astype('uint64'), [13, 16, 8]), ), 0)
call_10116 = relay.TupleGetItem(func_1762_call(relay.reshape(var_10115.astype('uint64'), [13, 16, 8]), relay.reshape(var_10115.astype('uint64'), [13, 16, 8]), ), 0)
func_5470_call = mod.get_global_var('func_5470')
func_5473_call = mutated_mod.get_global_var('func_5473')
const_10147 = relay.const([2,3,-4,-9,-9,-1,1,2,6,10,-2,6,7,7,6,5,9,3,10,-8,-8,-4,6,-8,9,2,5,1,3,-10,-6,-8,-3,-6,4,2,7,-2,9,5,-10,-1,-5,6,2,9,-3,3,-10,10,7,8,5,4,2,4,-8,-6,9,3,10,-9,2,10,3,8,10,-1,-9,-3,-8,-2,3,-9,2,4,-7,4,7,1,-3,-1,6,10,-8,-8,-9,3,10,4,8,-3,-3,2,2,3,4,-10,5,-8,2,-1,6,-5,-8,10,9,10,-2,-5,8,2,9,2,10,8,6,5,3,-10,-10,-8,-4,2,-1,-10,2,-10,-4,6,-4,7,4,-4,1,8,2,10,-4,-2,9,3,8,4,-8,5,5,-4,4,-5,-1,6,-9,-1,-1,8,-9,-3,4,8,-8,-4,6,3,5,7,-3,1,-1,4,5,2,-3,-10,2,1,-2,-6,-4,-8,-9,4,8,-3,-8,-1,-1,9,-9,4,-9,-5,9,-9,10,-9,10,2,-1,-7,6,-1,4,-2,3,6,1,2,3,-1,9,-4,7,7,3,-4,5,-7,-9,1,4,-3,1,5,9,6,7,-6,-8,-2,-10,-1,4,-3,-6,5,4,-7,5,8,9,1,8,10,-4,-8,-1,-9,-6,9,7,-3,2,-7,-3,9,10,8,9,3,-2,-6,-1,-7,-7,8,10,8,-3,-9,1,8,9,-7,-6,10,1,-3,2,9,6,-7,1,8,-10,10,-6,3,6,2,10,2,-9,-6,-6,-10,4,-9,-3,-1,-6,6,-3,7,-9,-1,-10,-4,9,10,7,-10,-9,8,-7,-9,-3,-7,4,-4,-5,-5,2,-6,7,8,7,-7,-6,10,-5,10,-4,4,3,2,-5,-4,4,7,5,-7,3,7,-8,-5,-6,1,-2,-7,-3,2,3,4,-6,-3,8,1,4,1,7,-7,10,2,-4,-8,5,6,8,9,5,-4,2,4,-5,9,2,-6,5,4,-4,-10,-4,1,8,-5,2,6,5,9,7,-4,6,-1,6,4,-10,1,1,-6,-3,-4,8,-8,-1,5,-9,-9,6,7,7,-4,-4,-1,-10,-5,-7,8,10,10,-7,1,3,10,-10,-3,-6,4,-5,-6,1,8,2,-3,3,4,-8,5,-5,-3,2,1,-5,10,7,5,-7,4,-10,-2,2,-5,10,-4,-7,-9,-4,-4,3,-1,10,-8,10,6,1,-4,-5,3,-1,2,3,4,2,-6,-2,9,2,10,-9,1,6,3,4,-7,-3,2,2,3,6,3,6,-1,-7,-10,7,8,-7,-5,9,8,2,-9,-8,10,-2,1,5,8,-10,10,-10,-1,3,1,-1,-5,-1,-9,7,-2,-2,-8,-4,1,-3,-3,1,-3,1,6,3,5,6,-4,3,1,-10,4,-3,7,-4,-2,-4,1,9,7,9,-7,-4,-7,8,4,-6,9,1,-9,6,-2,-6,-6,-10,-8,-5,-3,9,-7,7,4,-10,-3,1,-6,3,9,-10,-6,-10,-9,-3,-5,4,9,5,-5,6,-4,1,-6,-7,-6,10,9,-10,6,-3,-6,-2,8,-8,-10,2,3,-5,10,2,1,9,3,-8,-3,-9,-8,5,8,-3,-8,-4,10,10,1,5,-5,10,4,-6,-9,-7,5,6,-5,-2,6,4,5,-4,-5,6,3,-9,-6,-3,1,5,-10,-9,-10,8,9], dtype = "int32")#candidate|10147|(648,)|const|int32
call_10146 = func_5470_call(relay.reshape(const_10147.astype('int32'), [648,]))
call_10148 = func_5470_call(relay.reshape(const_10147.astype('int32'), [648,]))
func_4590_call = mod.get_global_var('func_4590')
func_4594_call = mutated_mod.get_global_var('func_4594')
var_10154 = relay.var("var_10154", dtype = "int8", shape = ())#candidate|10154|()|var|int8
call_10153 = relay.TupleGetItem(func_4590_call(relay.reshape(call_10146.astype('int32'), [648,]), relay.reshape(var_10154.astype('int8'), []), ), 6)
call_10155 = relay.TupleGetItem(func_4594_call(relay.reshape(call_10146.astype('int32'), [648,]), relay.reshape(var_10154.astype('int8'), []), ), 6)
output = relay.Tuple([call_10093,call_10114,var_10115,call_10146,const_10147,call_10153,var_10154,])
output2 = relay.Tuple([call_10094,call_10116,var_10115,call_10148,const_10147,call_10155,var_10154,])
func_10175 = relay.Function([var_10115,var_10154,], output)
mod['func_10175'] = func_10175
mod = relay.transform.InferType()(mod)
var_10176 = relay.var("var_10176", dtype = "uint64", shape = (1664,))#candidate|10176|(1664,)|var|uint64
var_10177 = relay.var("var_10177", dtype = "int8", shape = ())#candidate|10177|()|var|int8
output = func_10175(var_10176,var_10177,)
func_10178 = relay.Function([var_10176,var_10177,], output)
mutated_mod['func_10178'] = func_10178
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4016_call = mod.get_global_var('func_4016')
func_4018_call = mutated_mod.get_global_var('func_4018')
call_10187 = relay.TupleGetItem(func_4016_call(), 0)
call_10188 = relay.TupleGetItem(func_4018_call(), 0)
output = call_10187
output2 = call_10188
func_10195 = relay.Function([], output)
mod['func_10195'] = func_10195
mod = relay.transform.InferType()(mod)
mutated_mod['func_10195'] = func_10195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10195_call = mutated_mod.get_global_var('func_10195')
call_10196 = func_10195_call()
output = call_10196
func_10197 = relay.Function([], output)
mutated_mod['func_10197'] = func_10197
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6467_call = mod.get_global_var('func_6467')
func_6468_call = mutated_mod.get_global_var('func_6468')
call_10201 = relay.TupleGetItem(func_6467_call(), 0)
call_10202 = relay.TupleGetItem(func_6468_call(), 0)
func_7790_call = mod.get_global_var('func_7790')
func_7793_call = mutated_mod.get_global_var('func_7793')
var_10217 = relay.var("var_10217", dtype = "float32", shape = (70,))#candidate|10217|(70,)|var|float32
var_10218 = relay.var("var_10218", dtype = "int32", shape = (324, 2))#candidate|10218|(324, 2)|var|int32
call_10216 = relay.TupleGetItem(func_7790_call(relay.reshape(var_10217.astype('float32'), [70,]), relay.reshape(var_10218.astype('int32'), [648,]), ), 0)
call_10219 = relay.TupleGetItem(func_7793_call(relay.reshape(var_10217.astype('float32'), [70,]), relay.reshape(var_10218.astype('int32'), [648,]), ), 0)
func_7702_call = mod.get_global_var('func_7702')
func_7704_call = mutated_mod.get_global_var('func_7704')
call_10223 = relay.TupleGetItem(func_7702_call(), 0)
call_10224 = relay.TupleGetItem(func_7704_call(), 0)
func_8065_call = mod.get_global_var('func_8065')
func_8066_call = mutated_mod.get_global_var('func_8066')
call_10231 = relay.TupleGetItem(func_8065_call(), 0)
call_10232 = relay.TupleGetItem(func_8066_call(), 0)
output = relay.Tuple([call_10201,call_10216,var_10217,var_10218,call_10223,call_10231,])
output2 = relay.Tuple([call_10202,call_10219,var_10217,var_10218,call_10224,call_10232,])
func_10245 = relay.Function([var_10217,var_10218,], output)
mod['func_10245'] = func_10245
mod = relay.transform.InferType()(mod)
mutated_mod['func_10245'] = func_10245
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10245_call = mutated_mod.get_global_var('func_10245')
var_10247 = relay.var("var_10247", dtype = "float32", shape = (70,))#candidate|10247|(70,)|var|float32
var_10248 = relay.var("var_10248", dtype = "int32", shape = (324, 2))#candidate|10248|(324, 2)|var|int32
call_10246 = func_10245_call(var_10247,var_10248,)
output = call_10246
func_10249 = relay.Function([var_10247,var_10248,], output)
mutated_mod['func_10249'] = func_10249
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5261_call = mod.get_global_var('func_5261')
func_5263_call = mutated_mod.get_global_var('func_5263')
call_10290 = func_5261_call()
call_10291 = func_5261_call()
output = relay.Tuple([call_10290,])
output2 = relay.Tuple([call_10291,])
func_10307 = relay.Function([], output)
mod['func_10307'] = func_10307
mod = relay.transform.InferType()(mod)
output = func_10307()
func_10308 = relay.Function([], output)
mutated_mod['func_10308'] = func_10308
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5050_call = mod.get_global_var('func_5050')
func_5051_call = mutated_mod.get_global_var('func_5051')
call_10332 = relay.TupleGetItem(func_5050_call(), 1)
call_10333 = relay.TupleGetItem(func_5051_call(), 1)
output = relay.Tuple([call_10332,])
output2 = relay.Tuple([call_10333,])
func_10335 = relay.Function([], output)
mod['func_10335'] = func_10335
mod = relay.transform.InferType()(mod)
output = func_10335()
func_10336 = relay.Function([], output)
mutated_mod['func_10336'] = func_10336
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10340 = relay.var("var_10340", dtype = "bool", shape = ())#candidate|10340|()|var|bool
var_10341 = relay.var("var_10341", dtype = "bool", shape = (16, 15, 10))#candidate|10341|(16, 15, 10)|var|bool
bop_10342 = relay.logical_and(var_10340.astype('bool'), var_10341.astype('bool')) # shape=(16, 15, 10)
output = bop_10342
output2 = bop_10342
func_10353 = relay.Function([var_10340,var_10341,], output)
mod['func_10353'] = func_10353
mod = relay.transform.InferType()(mod)
var_10354 = relay.var("var_10354", dtype = "bool", shape = ())#candidate|10354|()|var|bool
var_10355 = relay.var("var_10355", dtype = "bool", shape = (16, 15, 10))#candidate|10355|(16, 15, 10)|var|bool
output = func_10353(var_10354,var_10355,)
func_10356 = relay.Function([var_10354,var_10355,], output)
mutated_mod['func_10356'] = func_10356
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9004_call = mod.get_global_var('func_9004')
func_9005_call = mutated_mod.get_global_var('func_9005')
call_10361 = relay.TupleGetItem(func_9004_call(), 0)
call_10362 = relay.TupleGetItem(func_9005_call(), 0)
output = call_10361
output2 = call_10362
func_10363 = relay.Function([], output)
mod['func_10363'] = func_10363
mod = relay.transform.InferType()(mod)
mutated_mod['func_10363'] = func_10363
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10363_call = mutated_mod.get_global_var('func_10363')
call_10364 = func_10363_call()
output = call_10364
func_10365 = relay.Function([], output)
mutated_mod['func_10365'] = func_10365
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5161_call = mod.get_global_var('func_5161')
func_5162_call = mutated_mod.get_global_var('func_5162')
call_10372 = relay.TupleGetItem(func_5161_call(), 0)
call_10373 = relay.TupleGetItem(func_5162_call(), 0)
func_4212_call = mod.get_global_var('func_4212')
func_4213_call = mutated_mod.get_global_var('func_4213')
call_10374 = relay.TupleGetItem(func_4212_call(), 0)
call_10375 = relay.TupleGetItem(func_4213_call(), 0)
func_8107_call = mod.get_global_var('func_8107')
func_8109_call = mutated_mod.get_global_var('func_8109')
call_10383 = func_8107_call()
call_10384 = func_8107_call()
output = relay.Tuple([call_10372,call_10374,call_10383,])
output2 = relay.Tuple([call_10373,call_10375,call_10384,])
func_10390 = relay.Function([], output)
mod['func_10390'] = func_10390
mod = relay.transform.InferType()(mod)
output = func_10390()
func_10391 = relay.Function([], output)
mutated_mod['func_10391'] = func_10391
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9859_call = mod.get_global_var('func_9859')
func_9861_call = mutated_mod.get_global_var('func_9861')
call_10428 = relay.TupleGetItem(func_9859_call(), 1)
call_10429 = relay.TupleGetItem(func_9861_call(), 1)
func_1574_call = mod.get_global_var('func_1574')
func_1577_call = mutated_mod.get_global_var('func_1577')
var_10440 = relay.var("var_10440", dtype = "int8", shape = ())#candidate|10440|()|var|int8
call_10439 = relay.TupleGetItem(func_1574_call(relay.reshape(var_10440.astype('int8'), [])), 0)
call_10441 = relay.TupleGetItem(func_1577_call(relay.reshape(var_10440.astype('int8'), [])), 0)
bop_10442 = relay.divide(call_10439.astype('float64'), var_10440.astype('float64')) # shape=(10, 11, 5)
bop_10445 = relay.divide(call_10441.astype('float64'), var_10440.astype('float64')) # shape=(10, 11, 5)
uop_10446 = relay.atan(call_10439.astype('float32')) # shape=(10, 11, 5)
uop_10448 = relay.atan(call_10441.astype('float32')) # shape=(10, 11, 5)
output = relay.Tuple([call_10428,bop_10442,uop_10446,])
output2 = relay.Tuple([call_10429,bop_10445,uop_10448,])
func_10449 = relay.Function([var_10440,], output)
mod['func_10449'] = func_10449
mod = relay.transform.InferType()(mod)
mutated_mod['func_10449'] = func_10449
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10450 = relay.var("var_10450", dtype = "int8", shape = ())#candidate|10450|()|var|int8
func_10449_call = mutated_mod.get_global_var('func_10449')
call_10451 = func_10449_call(var_10450)
output = call_10451
func_10452 = relay.Function([var_10450], output)
mutated_mod['func_10452'] = func_10452
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5549_call = mod.get_global_var('func_5549')
func_5551_call = mutated_mod.get_global_var('func_5551')
call_10468 = func_5549_call()
call_10469 = func_5549_call()
func_4411_call = mod.get_global_var('func_4411')
func_4417_call = mutated_mod.get_global_var('func_4417')
var_10479 = relay.var("var_10479", dtype = "float32", shape = (315,))#candidate|10479|(315,)|var|float32
const_10480 = relay.const([-1,7,-8,7,-9,1,-4,10,-3,-5,3,6,6,5,8,-7,8,-9,4,-10,-10,4,-8,-9,7,1,-3,-5,6,6,-2,7,8,4,3,-5,-7,-6,-5,5,10,-1,-4,5,-8,5,3,-2,9,10,-10,-4,4,-1,8,1,3,-2,-10,-6,-7,10,5,2,-8,6,9,-6,-4,4,-4,-2,8,-5,-3,7,-3,2,1,-4,6,10,3,-8,4,9,-8,-6,-4,-5,1,9,-10,-6,4,-1,-1,8,6,9,10,7,-8,2,-5,1,10,-2,10,1,-7,6,3,1,10,7,-9,-5,9,-1,8,-10,1,-7,1,4,-2,7,-4,3,8,3,-6,4,-10,8,6,-4,-2,-9,3,-1,6,10,-6,-6,-5,-4,7,-6,5,-5,-4,10,-2,-6,-2,9,7,-10,2,-9,-2,8,1,8,-10,6,4,9,-5,-10,-4,-7,-8,-5,-10,9,-7,3,3,-1,6,6,-5,9,-1,-9,8,7,-10,8], dtype = "uint8")#candidate|10480|(192,)|const|uint8
const_10481 = relay.const(7, dtype = "int8")#candidate|10481|()|const|int8
const_10482 = relay.const([-4,-6,4,-5,-6,9,4,-2,7,3,6,10,-9,7,1,-10,-4,-1,6,-1,2,-2,10,-3,2,7,-5,9,6,-1,9,1,8,2,-9,6,-5,-10,-4,9,8,-5,5,-1,1,-7,1,-4,1,3,-10,-3,-9,9,-7,-9,-8,-10,-10,3,2,2,9,4,-1,-2,-8,-6,-10,-10,5,2,6,4,2,9,-9,-9,6,-2,10,8,1,-5,-8,5,-4,7,-8,8,-2,6,-8,4,8,-1,-2,-6,-2,3,4,5,5,-10,7,-3,-6,2,5,10,-2,10,1,-6,-7,-6,6,-10,7,4,-9,5,-7,3,-3,-3,-5,10,1,10,-6,8,10,-3,-10,-1,3,8,2,-1,-4,1,-1,7,8,9,-6,8,-7,-10,-7,7,4,-1], dtype = "int8")#candidate|10482|(154,)|const|int8
const_10483 = relay.const([-1,-10,8,7,3,-5,-1,-1,4,9,4,5,-5,5,5,-10,10,-3,1,-6,-3,-7,9,-3,-6,8,-8,9,2,-1,-5,5,1,4,8,-4,-8,-7,-1,-1,-3,-6,4,4,1,-4,6,-2,7,-7,-5,-6,-4,-1,3,1,-2,7,-4,1,6,-4,5,7,1,9,-7,-10,-9,-5,4,10,-4,-2,-10,6,8,-8,5,7,1,3,-2,-8,-3,-3,10,-2,10,7,-1,-6,2,-4,-1,-6,-8,2,-1,8,5,10,5,-2,-8,-3,-1,-9,-2,1,-5,-8,5,2,-10,9,-4,-1,-2,1,1,10,4,-6,-2,2,5,2,-9,7,7,-5], dtype = "uint64")#candidate|10483|(132,)|const|uint64
call_10478 = relay.TupleGetItem(func_4411_call(relay.reshape(var_10479.astype('float32'), [15, 7, 3]), relay.reshape(const_10480.astype('uint8'), [8, 24]), relay.reshape(const_10481.astype('int8'), []), relay.reshape(const_10482.astype('int8'), [154,]), relay.reshape(const_10483.astype('uint64'), [132,]), ), 1)
call_10484 = relay.TupleGetItem(func_4417_call(relay.reshape(var_10479.astype('float32'), [15, 7, 3]), relay.reshape(const_10480.astype('uint8'), [8, 24]), relay.reshape(const_10481.astype('int8'), []), relay.reshape(const_10482.astype('int8'), [154,]), relay.reshape(const_10483.astype('uint64'), [132,]), ), 1)
output = relay.Tuple([call_10468,call_10478,var_10479,const_10480,const_10481,const_10482,const_10483,])
output2 = relay.Tuple([call_10469,call_10484,var_10479,const_10480,const_10481,const_10482,const_10483,])
func_10490 = relay.Function([var_10479,], output)
mod['func_10490'] = func_10490
mod = relay.transform.InferType()(mod)
var_10491 = relay.var("var_10491", dtype = "float32", shape = (315,))#candidate|10491|(315,)|var|float32
output = func_10490(var_10491)
func_10492 = relay.Function([var_10491], output)
mutated_mod['func_10492'] = func_10492
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8754_call = mod.get_global_var('func_8754')
func_8755_call = mutated_mod.get_global_var('func_8755')
call_10496 = relay.TupleGetItem(func_8754_call(), 2)
call_10497 = relay.TupleGetItem(func_8755_call(), 2)
func_6642_call = mod.get_global_var('func_6642')
func_6644_call = mutated_mod.get_global_var('func_6644')
var_10502 = relay.var("var_10502", dtype = "int8", shape = ())#candidate|10502|()|var|int8
call_10501 = relay.TupleGetItem(func_6642_call(relay.reshape(var_10502.astype('int8'), [])), 1)
call_10503 = relay.TupleGetItem(func_6644_call(relay.reshape(var_10502.astype('int8'), [])), 1)
func_10335_call = mod.get_global_var('func_10335')
func_10336_call = mutated_mod.get_global_var('func_10336')
call_10506 = relay.TupleGetItem(func_10335_call(), 0)
call_10507 = relay.TupleGetItem(func_10336_call(), 0)
output = relay.Tuple([call_10496,call_10501,var_10502,call_10506,])
output2 = relay.Tuple([call_10497,call_10503,var_10502,call_10507,])
func_10517 = relay.Function([var_10502,], output)
mod['func_10517'] = func_10517
mod = relay.transform.InferType()(mod)
var_10518 = relay.var("var_10518", dtype = "int8", shape = ())#candidate|10518|()|var|int8
output = func_10517(var_10518)
func_10519 = relay.Function([var_10518], output)
mutated_mod['func_10519'] = func_10519
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7291_call = mod.get_global_var('func_7291')
func_7292_call = mutated_mod.get_global_var('func_7292')
call_10551 = relay.TupleGetItem(func_7291_call(), 0)
call_10552 = relay.TupleGetItem(func_7292_call(), 0)
func_5526_call = mod.get_global_var('func_5526')
func_5529_call = mutated_mod.get_global_var('func_5529')
var_10554 = relay.var("var_10554", dtype = "bool", shape = ())#candidate|10554|()|var|bool
call_10553 = func_5526_call(relay.reshape(var_10554.astype('bool'), []))
call_10555 = func_5526_call(relay.reshape(var_10554.astype('bool'), []))
bop_10571 = relay.logical_and(call_10553.astype('bool'), var_10554.astype('bool')) # shape=(14, 1, 8)
bop_10574 = relay.logical_and(call_10555.astype('bool'), var_10554.astype('bool')) # shape=(14, 1, 8)
func_6929_call = mod.get_global_var('func_6929')
func_6931_call = mutated_mod.get_global_var('func_6931')
const_10576 = relay.const([-2,4,-9,-8,6,-3,-9,-10,-8,10,2,-10,10,6,-8,10,9,8,8,7,6,-4,4,-7,-4,2,4,-8,2,10,2,2,3,-9,7,-4,6,1,3,-2,7,-2,10,7,3,3,-5,-7,4,9,2,6,3,-9,5,3,9,-3,5,-10,7,-4,-10,-3,6,8,7,-7,-3,-7,8,-10,-5,-6,5,9,-1,4,-3,-8,9,9,1,-6,-2,3,-5,9,-8,-2,-2,2,-5,7,-3,9,2,-8,3,7,9,5,5,-5,8,-7,-10,8,-7,-3,1,-2,1,-7,-8,-10,-6,-2,-1,-5,8,-3,-3,4,-5,2,-1,8,8,8,10,4,5,9,5,-4,8,-1,-8,2,-2,-9,9,-8,-3,-3,-4,-2,-3,2,-7,-2,6,7,-8,7,-3,6,-4,-1,9,-3,-10,-2,6,-2,-4,9,8,4,-6,10,9,-3,10,-1,7,4,9,-10], dtype = "uint16")#candidate|10576|(180,)|const|uint16
call_10575 = relay.TupleGetItem(func_6929_call(relay.reshape(const_10576.astype('uint16'), [180,])), 4)
call_10577 = relay.TupleGetItem(func_6931_call(relay.reshape(const_10576.astype('uint16'), [180,])), 4)
func_4613_call = mod.get_global_var('func_4613')
func_4614_call = mutated_mod.get_global_var('func_4614')
call_10590 = func_4613_call()
call_10591 = func_4613_call()
output = relay.Tuple([call_10551,bop_10571,call_10575,const_10576,call_10590,])
output2 = relay.Tuple([call_10552,bop_10574,call_10577,const_10576,call_10591,])
func_10592 = relay.Function([var_10554,], output)
mod['func_10592'] = func_10592
mod = relay.transform.InferType()(mod)
var_10593 = relay.var("var_10593", dtype = "bool", shape = ())#candidate|10593|()|var|bool
output = func_10592(var_10593)
func_10594 = relay.Function([var_10593], output)
mutated_mod['func_10594'] = func_10594
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10663 = relay.const([[[5,-6,-3,6,-2,6,6,-6,8,3,-2,10,4,-2],[4,-10,-6,-5,-1,-7,-3,-7,-6,-5,6,6,-2,-5],[6,7,-3,-10,-3,8,-9,7,1,1,6,10,4,4],[-6,4,-8,3,-8,-8,9,7,4,8,-7,-1,-4,6],[8,-6,9,-6,1,-6,-4,9,4,-9,-9,2,-7,2],[-5,-9,-8,-7,5,6,5,-6,-8,-10,3,1,-8,2]],[[5,7,2,-2,3,9,-5,7,-7,-10,-7,9,2,4],[2,-7,7,6,-4,-2,-8,-6,-6,-4,5,1,-4,4],[8,-8,-3,7,3,-1,-2,3,-4,2,5,6,-9,3],[-5,9,-6,-6,-4,-3,6,3,7,-7,-8,-2,6,2],[-4,9,4,5,-9,-1,1,9,5,5,-9,-4,3,9],[-3,7,5,-7,5,9,2,-6,-1,10,6,-10,10,-3]]], dtype = "int32")#candidate|10663|(2, 6, 14)|const|int32
var_10664 = relay.var("var_10664", dtype = "int32", shape = (2, 6, 14))#candidate|10664|(2, 6, 14)|var|int32
bop_10665 = relay.logical_xor(const_10663.astype('int32'), relay.reshape(var_10664.astype('int32'), relay.shape_of(const_10663))) # shape=(2, 6, 14)
uop_10673 = relay.acos(bop_10665.astype('float64')) # shape=(2, 6, 14)
func_9324_call = mod.get_global_var('func_9324')
func_9326_call = mutated_mod.get_global_var('func_9326')
var_10676 = relay.var("var_10676", dtype = "float64", shape = (108,))#candidate|10676|(108,)|var|float64
call_10675 = relay.TupleGetItem(func_9324_call(relay.reshape(var_10676.astype('float64'), [2, 6, 9])), 0)
call_10677 = relay.TupleGetItem(func_9326_call(relay.reshape(var_10676.astype('float64'), [2, 6, 9])), 0)
func_5650_call = mod.get_global_var('func_5650')
func_5652_call = mutated_mod.get_global_var('func_5652')
call_10678 = func_5650_call()
call_10679 = func_5650_call()
func_5913_call = mod.get_global_var('func_5913')
func_5917_call = mutated_mod.get_global_var('func_5917')
var_10685 = relay.var("var_10685", dtype = "int8", shape = ())#candidate|10685|()|var|int8
var_10686 = relay.var("var_10686", dtype = "float32", shape = (154,))#candidate|10686|(154,)|var|float32
call_10684 = relay.TupleGetItem(func_5913_call(relay.reshape(var_10685.astype('int8'), []), relay.reshape(var_10686.astype('float32'), [154,]), ), 1)
call_10687 = relay.TupleGetItem(func_5917_call(relay.reshape(var_10685.astype('int8'), []), relay.reshape(var_10686.astype('float32'), [154,]), ), 1)
output = relay.Tuple([uop_10673,call_10675,var_10676,call_10678,call_10684,var_10685,var_10686,])
output2 = relay.Tuple([uop_10673,call_10677,var_10676,call_10679,call_10687,var_10685,var_10686,])
func_10700 = relay.Function([var_10664,var_10676,var_10685,var_10686,], output)
mod['func_10700'] = func_10700
mod = relay.transform.InferType()(mod)
mutated_mod['func_10700'] = func_10700
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10700_call = mutated_mod.get_global_var('func_10700')
var_10702 = relay.var("var_10702", dtype = "int32", shape = (2, 6, 14))#candidate|10702|(2, 6, 14)|var|int32
var_10703 = relay.var("var_10703", dtype = "float64", shape = (108,))#candidate|10703|(108,)|var|float64
var_10704 = relay.var("var_10704", dtype = "int8", shape = ())#candidate|10704|()|var|int8
var_10705 = relay.var("var_10705", dtype = "float32", shape = (154,))#candidate|10705|(154,)|var|float32
call_10701 = func_10700_call(var_10702,var_10703,var_10704,var_10705,)
output = call_10701
func_10706 = relay.Function([var_10702,var_10703,var_10704,var_10705,], output)
mutated_mod['func_10706'] = func_10706
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5273_call = mod.get_global_var('func_5273')
func_5274_call = mutated_mod.get_global_var('func_5274')
call_10714 = relay.TupleGetItem(func_5273_call(), 1)
call_10715 = relay.TupleGetItem(func_5274_call(), 1)
func_3697_call = mod.get_global_var('func_3697')
func_3702_call = mutated_mod.get_global_var('func_3702')
var_10723 = relay.var("var_10723", dtype = "int8", shape = (576, 1))#candidate|10723|(576, 1)|var|int8
const_10724 = relay.const([[-4,4,8,10,10,-8,-3,8,6,3,-4,6,-7,1],[-2,8,-9,3,-2,-3,9,5,8,9,1,-2,6,10],[-8,3,-8,-5,5,4,3,10,-1,-3,8,-5,-5,2],[4,-5,3,-2,10,1,7,3,-5,3,9,6,-9,-4],[7,4,-10,-6,8,5,7,-3,1,4,10,3,5,-5],[-2,7,-5,-5,-3,-7,10,8,9,-2,7,8,5,-5],[5,-3,10,-8,-4,-1,5,5,-1,-3,-4,3,-2,7],[4,-8,-3,-6,2,8,-7,2,-9,5,9,2,-4,-5],[6,4,5,9,-2,2,6,-1,-1,5,9,1,10,1],[6,8,9,2,-5,-5,3,-2,-9,4,-3,9,-8,10],[-4,2,9,4,6,-4,-6,-6,6,1,-1,5,-3,8]], dtype = "int8")#candidate|10724|(11, 14)|const|int8
const_10725 = relay.const([4.391439,-7.476246,-4.623800,-5.444742,-3.102825,-8.763189,8.265604,3.782368,0.020282,-3.137637,0.657714,-6.920416,1.595920,-6.909185,2.581407,-6.579883,0.932554,0.153744,4.755224,-1.803278,9.841961,5.197054,2.048116,7.603813,2.351343,-1.481605,-0.159220,-1.309136,-3.929491,-9.847063,-2.154049,-7.915946,6.258520,-5.659489,-0.820733,9.215185,3.843340,-3.946304,4.434536,0.856817,5.663141,-0.848033,-5.340850,0.442604,4.620881,0.846359,8.440113,-9.014803,1.054873,5.963814,8.799203,6.647644,1.876518,6.886377,6.478949,9.646079,-3.668510,9.917038,9.479919,5.974601,-3.487322,-3.814453,2.418313,6.695568,7.961991,-7.201184,5.174337,-6.315074,6.484012,4.121296,-2.574003,9.687773,-0.050326,-0.194727,2.724791,0.634714,-7.951975,4.920120,-3.173176,-4.421670,3.694425,-8.962925,-6.987296,1.087164,-2.135566,-9.289395,-9.373446,-7.919087,-7.736828,-9.642341,-4.783900,-9.778920,8.851903,-2.332193,-0.142130,-5.019574,4.341777,-0.028163,9.508800,4.414232,-5.427955,-3.348136,0.893230,-7.879521,2.181165,-9.901186,-7.168074,-1.473754,-6.392640,6.446049,5.035469,8.467923,-2.557208,-8.127123,4.160071,3.019679,-8.043613,-8.214972,-2.154381,0.257293,4.828410,-7.735081,-1.268229,-0.873592,5.204467,0.364640,3.960481,-0.511689,-8.408207,9.211254,-6.193236,-4.368907,-3.036269,2.829882,4.230651,7.224376,-0.118207,-3.299976,-5.352223,6.765037,-1.230961,5.970218,6.102809,4.805559,-9.068536,-8.733790,6.254494,5.049011,4.818705,7.226112,-0.921235,-7.620054,-6.036102,9.407917,5.370021,-6.069483,-8.331651,7.448856,7.264676,4.160002,6.364184,9.482229,-2.445765,-8.421857,3.723380,-6.134787,-7.228376,-8.673790,7.899007,-5.305955,-1.542873,-0.393866,-5.559092,6.448727,-5.323794,1.028045,-4.404035,9.781145,-1.640157,-6.493681,4.935202,7.689071,5.886426,-0.258124,4.879644,9.023004,8.790279,-2.713648,4.104409,-6.712219,5.859659,3.714825,-5.639674,-6.323321,2.264917,-7.682969,-8.048721,-5.954373,1.862722,-9.801742,5.621532,-5.925925,-9.698033,-6.055492,-2.247430,0.208300,5.026551,3.877023,8.307963,-1.550224,2.186793,4.645565,-6.139479,2.818038,-4.039962,-3.886132,-9.100588,2.637220,-5.013802,-1.602839,-1.298380,-6.667890,6.136767,9.607274,9.165907,2.660739,-1.519377,-5.012142,-5.601369,-1.668725,-1.773724,2.479441,5.078976,1.925220,-7.285392,1.663222,1.726871,-6.495138,1.340522,-3.561170,5.856034,1.756250,-4.228053,-2.472869,-5.417736,-4.769203,-0.369020,8.073460,-1.084402,1.349780,-0.552248,5.601032,-9.256776,-4.071304,4.436213,-7.539811,-0.170507,-7.450038,-1.190658,-1.679572,5.160370,4.944273,-1.291376,0.659769,3.237212,6.661945,6.323176,0.979775,1.390784,-6.763193,-7.402569,7.364928,-3.633893,-7.016227,1.557743,8.203778,5.334673,-9.096039,9.153734,-0.748412,-9.320421,2.002819,-0.197125,8.150283,-7.005918,-5.857272,-7.926520,-3.489837,3.144569,7.669577,1.685783,2.764462,1.341411,-1.538303,5.190188,6.493886,-8.747644,-6.584084,-4.862394,-2.713321,7.168583,3.183337,9.980246,-3.369748,-5.162687,5.918662,1.646790,-9.373356,-9.783925,3.200818,4.328025,0.901415,1.454579,-6.158142,0.282400,2.525992,5.371072,-2.697469,-7.512786,8.438257,4.650187,-5.814857,8.663291,9.526310,0.306664,-0.530867,-3.404768,-8.202760,6.714342,9.367292,-9.627547,9.994797,0.014840,-0.667729,-3.907005,3.469207,-4.065341,-8.934451,-8.713090,9.588180,8.730452,5.893230,8.517488,8.719650,-3.948945,1.211736,4.513685,2.165325,-8.978520,-6.242144,1.121545,-7.013838,7.804333,-2.245871,4.443023,6.320053,6.517955,-0.951589,5.266665,1.625538,-5.756254,-3.756312,9.806154,-7.568729,2.991796,-0.637714,-5.177164,-3.973103,-4.207588,-1.901473,-5.288424,-5.461324,-9.556624,-2.909136,-8.602915,7.596959,-4.491653,0.883462,4.247379,1.497818,-9.292978,-9.480319,0.007932,9.879574,8.272033,0.345802,6.451562,9.847929,-8.281053,7.738355,5.243904,7.060549,-7.788318,8.877973,-7.232817,-8.606068,-1.499923,-2.835648,0.118569,6.080808,4.318139,-0.589205,-0.432128,-4.560623,2.806501,-6.285237,-9.169958,-2.206663,-1.858543,1.525257,3.402124,1.854500,-4.323093,8.621417,8.395578,-2.177011,9.787210,-0.372837,-6.643514,-1.230212,-0.026637,-7.253452,-4.605509,-0.591362,-6.330200,2.746981,4.613357,7.387002,-2.681938,-4.938723,-6.419642,-9.986078,8.121546,9.364151,2.981643,-8.626541,-1.633826,0.231678,6.262227,2.271931,7.288537,1.171444,-4.952602,-0.927234,2.102885,-3.710402,4.583119,0.444328,9.574965,-5.018414,-0.300576,3.722111,6.289345,2.410725,-3.294092,-3.567904,-4.999713,-8.090749,-1.963890,3.056950,6.229324,1.302930,0.303252,-7.750866,-6.071783,3.310917,2.550187,1.863169,9.661073,0.681184,-2.317302,7.185374,-9.225661,9.031739,-0.020721,-7.677365,-7.569398,-9.973443,0.249973,4.740643,2.009248,-4.127136,2.361928,9.836627,1.787771,-4.651103,-8.318031,-0.547719,2.068186,-0.307384,-5.271724,-3.567862,-2.309766,-4.090382,9.033443,5.888729,7.937215,3.937359,-6.243752,1.411741,6.112230,8.019749,-1.473666,-6.210385,9.488652,0.727853,-9.685839,-3.483754,6.165810,-5.085480,-4.886488,3.626190,0.416131,-1.607083,-8.550262,3.241885,9.103485,4.797584,-3.994836,-2.782409,-8.079382,-7.377852,4.352166,-5.208926,5.646321,1.181063,-8.110107,6.782374,5.912967,1.055431,-6.366804,6.087714,9.486508,8.830510,8.718721,2.868903,4.462929,-5.984293,3.248981,4.986060,8.516666,-6.375350,-7.911044,8.345555,-0.759704,8.632825,-6.579390,-6.561837,4.782858,2.532432,8.381603,6.313635,-2.620351,1.137582,-5.126314,3.309212,7.876179,4.203982,9.578028,5.864581,-1.327453,-2.139185,-9.735420,-4.957243,-1.820710,-8.365421,6.329687,5.924834,9.153885,0.950727,9.670926,1.177052,-8.891113,-3.490594,0.892398,6.984475,-1.360753,-2.016605,5.243572,1.257266,9.407100,6.851010,3.638026,-3.706406,-4.774411,-3.518811,-2.119455,-1.410511,-6.883436,3.575156,7.178207,2.255257,-6.255845,-7.923815,0.471875,-6.450348,2.076506,0.758551,-1.198830,7.856833,8.199981,-3.027459,8.387876,-1.585655,-4.047563,3.024828,4.041080,5.726154,6.948599,1.389609,6.632452,4.566830,9.013281,4.390710,-7.790378,-8.412803,-2.696275,-5.470097,-9.856101,-8.666370,-3.002780,-0.863801,-1.915846,3.090338,5.465567,-7.089155,-3.548432,3.613736,-5.904926,8.889026,8.819614,-5.997209,6.573405,9.456100,-1.202778,-4.486861,8.911231,-7.347427,-5.967777,4.237003,-1.810907,2.186185,9.579606,-8.670442,6.750028,6.734695,-1.812616,8.559903,-0.956796,2.908607,-1.310969,0.171688,-8.742689,1.427410,5.626426,-4.858923,3.266083,1.988137,-6.493391,-1.495546,7.377734,-9.126181,-3.440699,7.564865,-9.918542,1.665937,-5.026765,-8.915555,-4.363542,-2.795115,8.483039,2.742029,-2.566290,1.029360,-7.035757,-6.699240,3.138290,7.326832,-3.974561,-7.090728,2.196939,2.208050,-9.756114,-4.893613,-9.345681,1.589427,8.633385,-1.601115,5.096334,-9.820876,7.287856,4.071844,7.775254,-3.529947,-7.837026,-9.684493,-9.392332,2.118583,-9.834339,1.098120,-1.620822,-0.901924,0.934864,9.611998,-4.348187,1.887987,5.413828,3.745970,5.093736,-4.465943,-8.940610,-5.115842,5.623029,-1.143449,5.023608,-3.841805,-8.734344,-0.728580,0.892625,-2.456250,8.561443,1.508851,-5.272440,-3.748460,9.426782,1.251883,6.435111,-9.642409,-2.703319,-8.567249,7.938382,5.299966,1.570777,8.901610,-7.571269,5.846390,8.628598,-1.053376,9.590791,-0.528522,4.677529,-8.360942,9.100690,4.849488,2.308326,6.880382,-1.039836,-3.249867,-9.185074,-4.578907,2.102693,1.894967,3.832715,4.710982,-7.125357,2.754988,9.203907,-0.303598,-3.746648,-0.627741,-4.279816,-6.241409,0.215282,-2.616714,6.933250,-8.898933,-7.918943,9.525226,4.051401,-8.136710,-8.423277,6.146472,-6.651619,-6.936568,-7.428052,-3.011837,8.638347,7.463568,-5.152251,-9.170795,0.451770,-3.540426,-3.891470,0.132891,-4.001184,6.919881,0.927262,1.167921,2.245021,-8.074312,-6.931036,-7.597678,-3.069913,-1.542900,4.829957,-7.809189,2.427275,2.566875,-0.625034,7.087338,-2.337563,-0.200434,-5.893609,7.338520,2.173134,2.212912,1.153758,2.262987,9.025811,-4.487150,4.198707,1.762800,9.339705,-5.238285,8.893508,6.674898,3.388466,5.387190,5.298627,5.902548,5.795406,-2.250646,-8.517539,-5.000229,-6.316564,-0.702991,3.427697,-1.761104,-3.424034,-9.534408,6.222885,-7.261388,6.860697,-4.978526,-1.748123,-6.579754,-7.077621,-0.053260,-6.674923,-2.848954,8.754889,-6.951377,6.335014,-8.634234,-5.846010,8.101490,-9.369218,-3.185201,-3.413357,-2.342268,-1.925057,-9.693661,8.326715,1.159412,2.458536,-0.714533,-6.613778,0.998272,-8.542040,-6.744011,-5.138791,-1.826422,4.953893,7.259452,5.794806,-4.028809,-3.875954,-8.969433,-5.822601,5.171617,5.096238,-5.106057,8.342005,9.152878,4.625712,-6.588210,-8.601105,-1.515146,4.598521,1.663438,7.258900,-4.110781,-6.445659,-9.058020,-2.966991,-5.710637,8.726354,4.229937,-6.401637,-6.974650,-1.525537,9.620221,8.908711,-0.196743,5.443529,8.342053,-4.605944,-2.843673,-7.256823,9.492750,4.662122,7.502175,-8.676449,1.191469,5.333950,1.946167,-4.523436,-1.449445,-3.544277,-2.049236,-8.681423,3.532814,0.794550,9.333142,-4.140526,-1.743499,-3.058582,-8.260273,-2.244784,8.244013,-4.049908,-1.052790,-9.708332,-4.247093,7.610920,-7.719066,9.617597,-0.110563,-1.747278,-9.050111,-1.782946,-5.036199,-5.276820,-2.563948,-8.089105,1.205098,-1.594646,7.497424,-0.466611,9.608451,-3.608229,-8.206001,0.315552,-2.730415,-2.281450,-5.443535,6.348400,-5.828378,-0.215048,-8.820795,-3.046220,4.193246,2.385453,7.574131,-6.874013,-8.803447,4.575066,-1.098234,7.421318,-4.185014,-8.950243,8.711394,4.408500,6.614422,-8.522440,-7.070860,5.064195,8.470429,-9.265501,1.775987,4.478354,7.153025,-1.957198,-3.879061,-7.584931,1.437290,9.349913,-5.330031,-6.328858,-1.813947,2.911120,-3.919614,-3.133254,-9.432492,-0.424498,-0.113629,8.998493,-3.453378,8.137912,5.684234,2.973746,-8.161663,7.255000,1.157347,8.745504,-7.275863,-5.625556,4.112658,-1.344000,6.800636,3.805417,5.178966,5.110467,-3.131393,-2.290411,-2.771541,5.295168,-3.188750,8.457654,-4.018812,-7.307094,-9.894840,7.825159,7.617608,5.987568,9.291372,-3.498153,0.338133,-1.715364,8.840736,8.097512,0.433804,-2.891043,-3.721635,6.072817,-6.359900,6.634780,7.402967,3.141932,8.741163,9.113070,2.067627,9.450355,-0.439659,2.465775,-6.429570,5.174090,1.905697,1.041387,-2.823140,-1.460749,-1.485550,2.988371,3.569344,6.336477,3.290219,9.896381,-7.266420,4.539879,-5.158647,-3.221523,6.888799,-4.060037,-9.618656,-1.708970,6.787532,5.665757,7.337113,0.805679,1.594794,9.849148,2.814090,-7.115129,4.954103,-1.043474,-8.279440,-5.711290,5.769133,-2.340167,-6.443488,-3.395477,6.937718,-0.100938,-7.958800,5.599346,-0.551155,-0.487521,4.360085,8.497393,-3.621399,7.839787,5.191719,-3.049459,-6.211025,-9.493984,-9.416710,-9.776039,-4.509187,-2.604318,-0.601348,4.444654,-6.227044,1.271191,-2.495207,-4.617041,-8.927950,7.071324,6.311308,-3.722701,-8.415518,-2.319941,5.310537,-6.210455,1.811642,-8.265473,2.525715,-3.417099,3.078949,8.665504,5.840361,-7.632797,1.731458,9.325935,-5.634733,7.403275,-1.395131,7.298252,-9.938047,5.571241,-2.452914,-8.512715,5.501058,0.780375,-1.926095,-2.850349,-0.012411,1.508856,-3.944882,-7.909374,6.050732,0.956511,5.637894,1.973199,5.849614,-2.556308,9.934938,0.484575,2.574198,3.694594,3.189613,6.683891,6.890838,-0.831085,4.993009,-5.937362,-1.925685,-8.265538,-6.378755,4.679704,1.376139,4.258390,-5.768426,8.518403,2.654965,3.186202,2.465271,-7.732593,-3.505118,-7.384473,6.075930,-5.283124,1.909266,2.418228,-6.994281,9.732327,-8.735437,-6.011858,6.441308,2.687652,8.305826,9.727890,7.823598,3.393692,-5.373269,-8.101212,-2.712057,8.527597,4.076440,1.938345,-6.372584,2.306452,4.123720,3.692124,-0.644384,6.892779,-5.830237,-2.138695,-4.484104,0.161421,9.942706,-4.473721,-7.776883,5.271389,-0.789369,9.322430,7.999543,-5.347848,0.170551,4.000992,-4.015408,0.459663,-5.613034,-8.260395,7.482717,1.281959,2.073474,-4.286530,-0.248189,-4.746761,-7.892149,5.963211,-9.002325,-8.864352,4.542427,3.772956,-5.731799,-1.062212,-8.457834,9.190180,-8.920707,4.470213,-5.305879,1.010778,5.333824,9.304917,-3.107180,-6.842538,-3.704479,-5.757406,-0.146827,6.598871,-7.758280,0.532733,2.326808,-1.624721,-7.300490,1.541102,6.599892,6.542986,-0.480933,-4.649444,8.105260,-6.566339,3.686308,0.020348,-7.094170,-6.498511,6.397739,-8.743981,-4.273024,-4.058950,-4.289933,2.727849,6.094713,-1.804067,7.311786,-6.427082,7.853426,4.171153,5.198903,2.065228,3.865715,-9.616314,3.965173,3.421926,9.547162,-4.691733,-2.843750,3.757978,-8.437027,1.329457,-4.893346,-3.830440,-4.685275,-6.994716,6.975605,-4.766941,9.322721,7.774776,9.979388,-6.341540,-6.704602,-7.255518,-5.993891,-2.871554,5.552388,-3.490886,6.050760,-1.915508,-9.937753,1.942443,-8.760615,1.698483,-1.914778,-1.575075,3.912609,-0.512653,-2.836015,-6.141680,-1.929717,4.084902,9.781259,4.561394,1.506676,-1.724035,-4.814032,8.581267,9.234314,-3.436107,2.793000,6.841078,7.983620,-8.106952,-5.920902,-8.778814,-0.341328,2.537571,-9.134106,-6.512660,-9.416534,6.370852,3.269848,4.622137,9.862532,-9.960684,-3.934833,-6.600913,-7.879549,2.111860,9.405789,4.154087,-4.894044,8.258698,-9.369917,-2.487623,0.127859,0.774132,-4.049684,5.219068,3.066601,-8.802482,-7.664540,6.013336,4.892317,7.013599,1.760011,-0.803475,2.938835,-6.535525,-2.999262,-9.090581,-9.582132,-8.313645,-5.909955,4.966677,4.781562,-5.486824,-2.784323,-6.349469,-7.970229,-7.361386,5.846358,2.436816,8.495777,-3.703640,-2.790561,3.982270,-5.219787,6.009336,1.236364,-8.893212,-0.471215,-4.689736,9.652441,5.248495,9.943484,2.711237,-4.028944,7.759808,-2.017658,6.648360,0.368154,4.673757,-3.125570,-0.755349,3.295752,4.553563,4.265588,-1.300323,-6.889908,2.836222,-6.682481,-7.735680,6.647505,-8.526755,1.443073,3.540326,-3.616869,9.187361,8.334438,-0.788663,-5.653922,1.347608,-9.673506,-8.179039,4.638832,-1.018231,-1.095860,-5.175657,-0.604423,6.316316,8.723380,-1.266185,-8.784374,-2.142697,-0.429401,-8.453917,-9.985567,-5.847339,-3.364606,-1.450895,-9.102622,4.364912,2.970669,6.892395,-1.752477,-4.968700,2.121988,6.866475,-6.047344,6.808665,-2.482692,5.439391,5.344957,7.524534,0.969418,2.588522,-3.728808,-6.718791,6.511820,-7.993303,2.960495,0.056576,2.014282,-1.139357,-5.084022,-7.548379,8.739527,-5.697094,-8.248976,-7.605969,2.791034,2.484310,-6.722657,3.781165,3.833627,8.931906,-3.139467,9.392309,9.090170,2.613332,-8.257338,3.781435,-6.732250,-3.978991,2.305833,-8.126645,9.636027,5.828865,7.056970,0.339901,-2.029036,0.913606,2.631201,-5.308974,-0.606851,-2.743845,-5.373549,2.512211,7.781889,2.755940,-0.554060,9.197907,0.913502,-1.343469,-1.260911,-5.783001,-8.053324,0.096011,-1.879888,3.295909,-7.917433,6.328083,1.503684,5.737408,2.324662,5.630437,-2.635179,1.527949,7.420941,-8.008301,7.964259,-6.520412,3.398029,9.240319,-8.963802,-2.018548,-2.325729,4.851522,-4.963643,1.999795,1.968644,-0.720287,1.342059,5.386764,5.515579,-0.205077,-4.167997,-8.947628,2.085675,-3.854495,-6.031415,-1.207442,-4.231658,-0.783603,-7.223225,-3.330660,0.246424,8.894499,-1.322914,4.627478,-3.323541,-3.062924,8.334975,-4.671711,-7.884411,-3.846204,-2.974468,-9.325190,-9.301233,9.818140,-2.515511,-9.694025,-2.159499,-7.617007,-0.016159,-7.776022,-5.852788,-1.182765,-6.970124,-3.763021,0.373368,5.632423,1.986298,-5.066883,9.703605,-2.242592,-4.963797,4.872607,-2.511959,5.776995,1.559688,9.249566,6.439312,6.117852,8.512999,-7.772065,-3.750097,-7.985209,8.309695,1.941996,-0.954004,-2.702091,-9.184883,-1.000937,-9.823458,-1.454891,3.526378,5.812695,7.231739,-6.595688,-7.348987,3.707807,7.367670,-9.524333,-2.839545,1.834110,5.239420,3.915678,5.455334,-9.618119,-4.832080,1.651225,-2.616673,-5.401434,-7.190625,-0.627236,2.866326,1.696571,2.656436,-6.076717,-7.689386,1.326024,7.787648,7.974175,-1.129387,-4.946283,-4.098473,-9.710577,-9.424507,-7.039106,-4.324571,8.779900,-8.176906,-0.562594,-0.678952,-1.967011,-5.491094,-4.163430,-8.706629,-5.833548,5.910347,3.840782,-6.249674,9.272178,-1.343482,7.594544,-6.678177,7.546893,-4.789354,6.601786,-1.196377,4.470088,0.968760,-5.243547,8.365580,-0.918836,-3.961340,4.153176,9.638617,1.367757,-1.423820,-0.746815,-3.099444,-4.908389,5.635788,1.816042,7.823029,-8.105243,5.249773,-6.017199,0.393725,7.432524,4.268277,3.820761,7.688211,-5.919629,6.538956,4.746759,-8.439721,-7.868298,1.159806,3.018234,-9.114442,0.035115,8.014412,7.955213,-9.325208,-8.859767,4.224678,-5.909448,-2.199297,-8.813445,-4.368833,4.453976,6.984491,-9.394208,-0.367544,0.993858,-3.349233,-6.444667,0.920458,-7.423698,-7.267978,2.488856,-4.420557,0.096482,-6.575497,6.633040,9.110740,-7.254958,-7.885758,3.820074,-9.274636,-4.062020,2.501213,-2.632536,-4.525594,-7.956289,3.629976,-7.013471,9.515211,1.376737,5.786693,-9.787458,7.558064,-0.090820,-4.656670,-7.313926,-8.010342,8.815887,1.720205,-1.561921,-8.419983,4.232101,-8.066123,-3.566448,3.586787,-2.598013,-8.950166,1.512564,8.461135,3.748117,4.418742,-2.950070,-9.505466,0.292473,-7.316027,1.870228,-4.601389,-9.601366,-5.234304,-6.792665,-3.741652,7.840085,-8.220525,4.649304,-7.148595,9.859048,-7.903209,6.617764,1.723543,7.533316,1.579039,-2.358127,5.736293,-2.980873,9.927898,0.766277,3.955998,-0.454685,5.588600,9.637869,6.779967,5.551015,0.034300,-0.089440,6.848766,-0.133133,9.150953,-9.652313,0.597294,-6.124087,3.953352,8.067735,-6.177744,-0.908590,3.900668,9.062846,-3.676438,-0.171369,-8.388584,-7.527123,-8.391137,-5.722973,-5.182790,-3.008758,4.153752,-7.023954,-3.279342,-9.189618,-9.571772,-8.253784,-0.290262,-6.626230,-5.473710,-1.331349,3.623435,-7.876936,3.575943,9.051319,6.719945,-1.441603,1.778978,-5.668082,-6.076910,-0.564384,4.738614,-9.429313,1.299208,7.433238,9.269519,-7.157071,-3.588999,4.271977,0.845438,3.588037,-0.402213,7.139543,6.914981,-4.655287,-8.848632,-7.441109,9.960240,-6.051209,6.160041,6.452461,4.153771,5.389967,-3.031868,-6.374823,-6.284038,0.346566,2.283635,-7.544025,-3.746920,-2.807371,6.731501,-9.968258,5.776041,9.179765,-8.633092,7.056356,-4.162227,-0.205161,5.857378,-0.166976,-2.101550,3.930314,4.299871,-7.901356,-0.072022,-4.311936,6.198950,-5.519101,0.165588,8.428822,-7.415593,-7.399163,-7.812504,-3.614165,2.503929,6.819390,-6.903514,2.655224,-9.724364,2.579716,-9.306594,-0.070177,-5.096058,-6.786660,6.196689,-3.458659,-3.867068,-3.113643,1.088446,7.297761,-8.203198,-9.980466,0.894439,-0.797076,-2.511222,-3.631878,6.659437,-2.768049,9.366325,-7.998245,6.795043,9.593280,9.078143,-8.646319,-0.971537,6.889819,-8.884180,1.688236,0.234972,7.455118,9.068801,-1.658557,-4.688331,-4.694134,8.826660,-7.188196,4.279758,-2.996726,-5.898913,4.516905,-4.794135,6.023941,0.806127,-5.237070,-4.699195,-0.166979,1.356179,-3.792233,8.705134,-1.732509,6.096121,9.440357,-7.444779,4.842876,-2.694374,3.783474,5.424129,9.245352,3.786566,2.522560,6.900515,1.001779,-7.680331,9.762278,-6.671914,-0.383482,-6.994514,2.936534,-2.256641,0.812731,7.335089,3.990075,1.016043,1.593837,7.544256,-7.411899,-9.176399,3.390557,-1.482831,2.636225,-3.260938,-1.985260,5.437407,4.261375,6.487340,9.482283,4.194010,4.145744,9.706745,8.770146,-5.291654,-2.265706,6.938175,7.628747,-1.055867,6.094575,2.031796,4.650817,3.905667,-5.051183,-7.069245,9.617938,-1.963915,-5.192013,-9.885371,-2.088587,-4.288304,6.240167,3.978635,1.122661,4.735769,-4.917229,-6.899587,-1.573239,8.293423,-6.834531,-8.017844,1.526156,0.430567,-1.762374,-8.673225,-6.185181,3.122643,-8.082920,-5.626803,-2.832928,-4.389017,-1.685796,1.238712,-3.377337,2.553170,-4.391778,2.087895,2.852214,9.616692,-1.959100,-1.026016,-5.086945,-3.069256,-3.585231,-2.019690,4.966020,-3.135748,-3.445211,-7.494855,-2.376521,2.277423,7.186821,-3.239212,9.894126,-1.276965,5.822001,-6.204029,8.032882,8.522141,-5.691378,-5.675618,-9.782401,0.486294,-8.534628,-2.231475,-1.305793,5.794097,-5.663348,-6.924304,-1.366063,4.883109,2.641711,4.161954,-9.597946,4.577483,8.174940,-5.300146,-1.914372,-1.741370,7.501768,0.275681,-8.166185,2.601635,-6.465555,6.973167,2.634003,5.688022,-2.216384,1.027940,1.739205,3.744593,-7.012116,-4.225668,-2.725874,-5.311162,5.169944,3.456358,-1.835760,-5.248392,-1.276941,1.150437,-0.320387,-2.679952,-8.243152,-0.730071,-4.103985,-7.596952,5.123917,8.364165,2.166121,-4.250024,2.403389,-6.727016,-3.625615,9.517798,-0.776611,-3.616801,3.345805,-3.715118,-2.542656,3.814285,-2.501711,-2.032548,-5.673400,7.434920,6.989248,1.968492,3.649165,-1.931205,-2.867380,-2.372202,0.602504,-2.362226,-3.627483,-1.577797,2.057111,8.440256,4.130608,2.841597,-3.910990,2.709710,-7.609948,-5.489035,-9.353211,-0.251268,-3.673890,-6.785381,8.314447,-0.060947,7.559117,3.556810,-7.666130,-3.837897,-7.232232,-6.537697,6.776983,-9.803874,-1.023862,7.046952,0.789332,7.494352,8.592455,4.759076,-5.618496,-8.900833,-0.329549,-8.782865,-2.335995,-0.439128,3.250154,2.324828,-7.006068,-7.908581,4.335970,-2.351902,3.679351,-3.032071,2.472326,-9.821489,-6.528997,9.101796,-5.318242,0.349174,-8.493720,5.667802,-9.964596,-1.169776,-4.798190,2.052503,0.657053,-9.630863,-6.875818,1.662491,9.080608,9.149722,-1.602301,-3.825604,8.896253,9.827963,-2.743053,1.447007,-1.262159,0.291996,-0.750071,-2.201332,-5.478643,9.697606,6.093218,-1.583736,-8.058699,-4.068684,-7.112210,7.719533,3.557738,-9.978734,2.271270,-0.154208,9.676843,-1.925306,0.127280,2.386165,9.926615,-5.113787,5.651502,9.292034,-9.810073,-3.584714,3.001354,-8.826265,0.861458,-4.095991,-0.614382,-9.912524,-7.825647,-1.490259,6.420435,-2.876086,-6.694887,4.986419,8.935623,5.458971,8.315250,8.025712,4.099862,9.519723,-4.798024,8.159090,-3.704486,-0.099923,-1.495791,-3.013928,8.499893,-2.932904,3.771454,7.392278,1.973638,6.000938,8.808110,5.779351,-1.271054,9.559506,-7.829194,-2.184825,-1.181538,2.652467,1.417256,-6.884670,-1.736706,-4.119739,-7.921816,6.071992,-8.204406,-7.484757,1.017041,-1.072753,-1.591100,-2.417742,-0.780510,-6.914918,6.993829,1.521934,9.780582,8.624632,-1.906560,-6.801578,-2.036299,-9.215837,-1.665441,-3.655335,-8.109289,3.843499,-1.333769,8.820505,-0.401460,3.264658,-0.839681,-7.642398,-0.136299,2.189039,6.601380,6.955528,4.870532,-0.629119,1.634993,8.850184,7.375106,-3.014302,-9.549116,-5.684216,4.885339,4.247338,-0.517957,-5.299412,3.468238,-0.300044,8.021773,-7.480901,3.140760,-7.486504,4.894303,5.719331,-0.371755,-6.438948,2.649478,-9.268834,-6.274585,-7.309851,5.418240,2.503717,8.678889,-8.024525,-5.023219,3.226264,2.631468,-1.485371,-6.865735,-7.952485,8.619255,1.541210,2.777187,-6.882369,6.264420,1.678375,6.513207,-4.293396,-2.697838,3.873167,3.052106,-3.108734,-2.583070,-5.874533,-3.583182,9.614021,4.196560,2.040142,-7.706854,1.236266,-3.323346,7.868965,2.069048,-0.945035,-1.776076,-1.364754,7.147265,-0.832092,3.646722,-2.464547,5.437861,-9.865265,-3.681055,-2.270911,8.843320,4.821778,-7.660557,3.839340,-3.426116,9.836515,6.742239,-8.810429,-2.673547,-0.895938,9.266691,-3.514624,-6.825095,-8.631124,-8.730018,-1.655816,-3.793052,6.062702,-2.066471,-6.634097,6.179873,5.269827,-1.815296,4.858382,-3.952936,-1.472873,-8.323702,2.271337,5.555665,0.086138,-1.979564,7.488698,6.177686,3.104290,9.285547,-6.979308,8.881205,6.690457,-9.598085,-0.721267,-0.138795,-3.101065,0.882133,-4.268411,8.783138,-3.692595,8.384348,-5.874779,9.527707,-3.575931,-0.828981,2.145325,-2.989370,6.513934,8.151308,2.569128,-6.424938,-9.900634,9.125837,1.465133,-1.519066,-3.157660,8.624570,2.775022,-2.039570,-8.249614,-7.873668,-6.521772,-1.702124,4.376012,-1.199108,-1.429515,8.760721,-3.403946,0.595760,4.561504,-0.632208,0.872531,5.458329,-2.102445,-6.880554,-8.561229,-4.700468,7.641085,-3.783600,-3.138589,3.421183,9.570276,7.526474,-3.442426,9.072499,-3.721407,9.766135,-5.038679,-2.924462,4.530356,1.620346,-3.100423,-8.096123,-3.037646,-1.568125,9.520013,6.213638,-1.720896,5.972291,7.105143,1.812032,-5.385413,9.759462,1.165141,2.471323,-0.990887,-2.542024,-0.927991,-2.406756,8.177015,4.604274,2.048212,6.782772,4.571536,-4.605416,-5.770037,-1.328404,-5.567677,1.229288,-1.471494,-3.573081,6.023979,5.886357,-2.805581,-7.680754,-6.105311,-2.164779,6.880326,-2.994606,-5.133022,3.114208,-1.855578,3.355985,-6.869802,-5.349892,0.189231,3.006993,4.410899,-9.351965,7.135178,8.441356,-3.622449,3.428142,6.672870,-3.673534,-8.880512,-7.118185,-2.100737,0.409545,-7.821528,4.381607,1.469185,-4.020564,5.366834,-5.593326,-7.786167,-7.218402,5.146529,-6.182847,4.783727,3.917241,-0.593358,-1.680450,6.946198,7.082906,0.139091,-7.313602,-0.944249,6.516863,4.453982,-6.564291,2.496056,1.084817,-6.869341,-8.029983,-7.042954,3.289808,7.842368,2.432018,3.246020,4.313549,6.328567,5.846964,-2.644716,1.871822,-7.740309,3.236226,5.755794,2.387229,-9.777100,7.731949,2.951673,-6.672168,9.123170,7.111361,-9.101451,2.632413,-5.159330,8.872139,-8.590079,4.412325,-8.608744,-3.272115,4.021037,8.857897,9.742748,-8.620053,0.717716,-5.810544,8.168220,-6.988089,-0.549629,1.028953,-7.810160,9.325721,-4.956842,-0.289089,-9.110746,-3.515691,-4.007801,2.374828,-9.906099,-8.849649,-1.468272,-4.889529,-8.691208,-0.805870,5.509439,-5.191232,-6.774166,-1.611148,-7.777120,-9.492442,5.296618,-2.921869,-7.221395,-3.052280,0.655072,4.157121,9.641029,0.499501,-8.893005,-4.712128,-0.877833,1.468875,-4.469187,4.284504,-0.759399,1.729778,-7.110707,8.493145,-4.251194,6.778949,-0.207048,9.039122,8.697553,-2.213137,-3.290753,7.115914,6.894676,-3.815645,-9.376759,-2.782393,3.498051,-7.871313,2.576199,-2.518429,9.488925,4.963158,-9.860798,4.250693,-7.044303,9.674641,-9.161932,7.404562,-4.101232,-7.604648,9.805263,2.851316,-7.966218,-1.615139,-0.600963,6.261576,-2.952932,4.609825,-3.017384,-2.846855,-1.097257,3.564279,-8.136408,-5.705847,-2.223436,9.769305,1.016543,-8.360567,8.200019,8.968022,-7.571420,5.495721,-6.861891,7.913099,-1.585098,5.044769,-9.607481,0.203314,3.908230,3.366099,-1.218966,4.196809,6.430553,-6.719652,-5.728627,-3.127241,-4.750539,3.088866,4.493144,7.892719,9.280591,-8.873576,-2.939885,-5.451993,-3.124472,8.656063,4.435312,-9.031198,2.341015,0.601571,7.612143,-4.263975,4.656444,-0.256189,-2.298722,-8.946359,-1.569972,4.208379,5.385626,-5.839119,6.263652,-5.756902,-9.959998,-8.880003,2.562853,0.347594,6.153860,3.502566,8.346682,8.339410,1.414977,4.606860,1.048746,-4.780110,7.447439,-1.838364,3.835458,1.955733,5.043113,1.896431,7.809831,0.197429,-4.896403,7.720112,-9.676382,5.909158,2.237284,7.557417,-6.588845,3.653019,-5.202482,-3.370884,-0.157766,2.864406,4.159410,7.063092,7.619288,-2.608698,7.948160,-9.293903,-6.220221,5.633646,-2.324701,-4.976644,8.638883,-4.801903,1.619114,8.817155,-4.361455,-6.560231,4.471459,-5.016480,-7.092923,-3.311924,6.730230,-3.131661,-8.095415,1.524451,-9.331646,9.673825,8.617253,-4.625482,8.402391,-8.876983,-5.747953,7.489542,-4.549928,2.820883,-5.945342,-3.441786,-9.156686,-0.271734,1.460941,7.899011,5.983062,1.830135,0.166292,-1.853975,3.979856,-6.246712,3.692743,5.869312,-3.335597,-4.248742,-5.101528,-0.629217,1.492231,2.251021,-0.946240,7.585012,-8.296089,-5.024289,-6.469820,-4.807041,7.130636,8.048628,-0.550201,8.126393,7.525385,-3.024166,-8.903555,-7.510579,0.812472,-7.643922,0.755965,2.278896,-6.231209,7.432503,-4.121704,-6.291788,-6.010744,-6.034889,-3.227548,9.420471,-1.008101,5.581684,-8.925434,-2.873796,-7.251818,5.831048,-4.494303,1.963459,-0.670637,8.981176,-0.630183,0.306063,-3.524397,2.227392,8.891745,-9.552433,-9.275819,-2.898457,-4.129868,-2.723390,-9.620167,-5.435753,5.734641,9.114493,-3.918928,-4.942503,7.724944,8.792257,-9.419863,-8.230022,-3.960799,8.449545,3.413360,1.395003,-6.912806], dtype = "float64")#candidate|10725|(2816,)|const|float64
call_10722 = relay.TupleGetItem(func_3697_call(relay.reshape(var_10723.astype('int8'), [12, 8, 6]), relay.reshape(var_10723.astype('int8'), [12, 8, 6]), relay.reshape(const_10724.astype('int8'), [154,]), relay.reshape(const_10725.astype('float64'), [2816,]), ), 0)
call_10726 = relay.TupleGetItem(func_3702_call(relay.reshape(var_10723.astype('int8'), [12, 8, 6]), relay.reshape(var_10723.astype('int8'), [12, 8, 6]), relay.reshape(const_10724.astype('int8'), [154,]), relay.reshape(const_10725.astype('float64'), [2816,]), ), 0)
output = relay.Tuple([call_10714,call_10722,var_10723,const_10724,const_10725,])
output2 = relay.Tuple([call_10715,call_10726,var_10723,const_10724,const_10725,])
func_10729 = relay.Function([var_10723,], output)
mod['func_10729'] = func_10729
mod = relay.transform.InferType()(mod)
mutated_mod['func_10729'] = func_10729
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10730 = relay.var("var_10730", dtype = "int8", shape = (576, 1))#candidate|10730|(576, 1)|var|int8
func_10729_call = mutated_mod.get_global_var('func_10729')
call_10731 = func_10729_call(var_10730)
output = call_10731
func_10732 = relay.Function([var_10730], output)
mutated_mod['func_10732'] = func_10732
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4212_call = mod.get_global_var('func_4212')
func_4213_call = mutated_mod.get_global_var('func_4213')
call_10736 = relay.TupleGetItem(func_4212_call(), 0)
call_10737 = relay.TupleGetItem(func_4213_call(), 0)
output = relay.Tuple([call_10736,])
output2 = relay.Tuple([call_10737,])
func_10748 = relay.Function([], output)
mod['func_10748'] = func_10748
mod = relay.transform.InferType()(mod)
output = func_10748()
func_10749 = relay.Function([], output)
mutated_mod['func_10749'] = func_10749
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7558_call = mod.get_global_var('func_7558')
func_7559_call = mutated_mod.get_global_var('func_7559')
call_10790 = relay.TupleGetItem(func_7558_call(), 0)
call_10791 = relay.TupleGetItem(func_7559_call(), 0)
output = relay.Tuple([call_10790,])
output2 = relay.Tuple([call_10791,])
func_10795 = relay.Function([], output)
mod['func_10795'] = func_10795
mod = relay.transform.InferType()(mod)
output = func_10795()
func_10796 = relay.Function([], output)
mutated_mod['func_10796'] = func_10796
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9235_call = mod.get_global_var('func_9235')
func_9236_call = mutated_mod.get_global_var('func_9236')
call_10806 = relay.TupleGetItem(func_9235_call(), 0)
call_10807 = relay.TupleGetItem(func_9236_call(), 0)
output = call_10806
output2 = call_10807
func_10832 = relay.Function([], output)
mod['func_10832'] = func_10832
mod = relay.transform.InferType()(mod)
mutated_mod['func_10832'] = func_10832
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10832_call = mutated_mod.get_global_var('func_10832')
call_10833 = func_10832_call()
output = call_10833
func_10834 = relay.Function([], output)
mutated_mod['func_10834'] = func_10834
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6784_call = mod.get_global_var('func_6784')
func_6785_call = mutated_mod.get_global_var('func_6785')
call_10837 = func_6784_call()
call_10838 = func_6784_call()
output = call_10837
output2 = call_10838
func_10851 = relay.Function([], output)
mod['func_10851'] = func_10851
mod = relay.transform.InferType()(mod)
mutated_mod['func_10851'] = func_10851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10851_call = mutated_mod.get_global_var('func_10851')
call_10852 = func_10851_call()
output = call_10852
func_10853 = relay.Function([], output)
mutated_mod['func_10853'] = func_10853
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5261_call = mod.get_global_var('func_5261')
func_5263_call = mutated_mod.get_global_var('func_5263')
call_10871 = func_5261_call()
call_10872 = func_5261_call()
output = call_10871
output2 = call_10872
func_10875 = relay.Function([], output)
mod['func_10875'] = func_10875
mod = relay.transform.InferType()(mod)
mutated_mod['func_10875'] = func_10875
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10875_call = mutated_mod.get_global_var('func_10875')
call_10876 = func_10875_call()
output = call_10876
func_10877 = relay.Function([], output)
mutated_mod['func_10877'] = func_10877
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7558_call = mod.get_global_var('func_7558')
func_7559_call = mutated_mod.get_global_var('func_7559')
call_10883 = relay.TupleGetItem(func_7558_call(), 0)
call_10884 = relay.TupleGetItem(func_7559_call(), 0)
func_5335_call = mod.get_global_var('func_5335')
func_5338_call = mutated_mod.get_global_var('func_5338')
const_10887 = relay.const([-6.547752,1.769656,-3.200735,4.599467,-1.832946,2.961594,2.393450,-7.579585,-6.994672,2.109652,9.707237,4.546932,-5.435580,-4.235905,-9.797814,8.642614,-7.858055,8.824020,5.214843,-9.970968,8.957908,1.927145,-6.540941,1.238267,-4.819260,9.969754,0.153792,-2.429515,1.478336,-6.885516,8.051069,-2.565438,-7.253721,-6.633027,-3.969023,-0.850546,2.363427,-9.020140,6.372275,-0.176523,2.206427,8.291360,-5.722104,-9.236513,-9.235496,-2.269391,-3.384110,-3.052407,-4.511073,-3.384460,1.833230,3.589407,3.507940,8.773139,5.761119,-4.436157,1.741640,-2.832834,4.514955,5.857660,9.305279,-5.331011,-2.701697,-4.650427,1.002079,-2.655472,1.320065,3.667782,9.040954,5.441196,9.219778,7.027418,4.080577,-2.467588,5.522135,1.860677,7.214462,-2.221943,-8.590659,5.668772,-0.047898,-2.269123,0.640123,-3.225690,-4.095481,7.350494,3.552958,6.144461,-9.436341,-1.607993,3.289809,-3.736052,0.885271,8.605503,-9.411158,9.240026,-2.735046,-0.434330,-9.774298,-4.018453,5.765838,-0.199288,4.191796,3.063540,4.177625,5.905015,2.858863,-2.036695,-5.816071,-3.691553,-6.364418,7.298517,-2.208159,-2.180156,-1.189718,2.614691,-3.304547,3.697746,2.763194,-6.974264,-8.059527,-6.170388,8.002475,-3.230622,-8.524287,-9.879353,-5.008425,7.886063,-7.339948,7.866056,-4.348086,-8.322530,-5.498244,-9.252164,-5.151399,1.985833,-1.583653,1.592685,-9.382290,-3.915668,-0.794113,5.314086,-7.372569,6.668576,-2.639809,-0.487722,-3.360059,9.399392,-9.209175,-8.724840,-2.645739,3.799839,5.329481,8.108575,-2.588824,-3.337724,-3.820964,6.633735,-0.312140,1.421575,-5.860010,-0.012071,-1.152537,4.620982,1.055218,-6.345150,5.105387,6.974841,-2.301647,-4.008973,-3.288087,3.958044,-7.609483,1.300728,-7.808151,9.418618,-0.299527,5.356691,-6.704233,5.434821,-6.196718,2.063063,6.160478,0.474940,8.990620,-6.796239,-5.649276,4.848899,6.034704,-3.748524,7.804446,-7.161253,9.023170,8.001856,-0.306757,2.235080,-5.352005,9.790005,0.028136,8.656488,-0.876188,-4.506455,0.663708,-8.187266,0.676750,-2.912761,-7.065186,-3.844919,-5.856732,7.376749,6.763582,-1.554414,-5.182514,5.172005,-1.308904,-8.749512,6.291655,5.981781,-1.324168,9.043387,-2.437932,3.617531,-5.110262,-2.777157,9.612129,8.242568,7.192659,-3.581171,3.529443,8.027395,-8.251524,7.845094,3.780537,-0.816284,-8.129153,8.912747,-2.402960,3.043844,-8.623315,1.681973,-5.880869,-4.924747,-0.106951,5.087510,9.142132,6.676876,-8.046108,7.731668,-9.841427,-8.763535,2.867391,8.002476,-5.539812,-1.375486,9.338786,-3.557330,-3.226028,5.404007,3.917051,2.173943,0.910052,-0.115275,9.805867,0.276604,5.216272,-2.657835,6.934538,-5.336990,-5.888303,0.914600,7.787608,6.689338,-5.998134,-9.540732,3.512577,-2.923951,3.963132,3.470005,-3.682416,-3.937284,-9.682731,-7.161305,-4.226532,9.870037,2.379743,-1.788906,-5.077125,8.385814,-6.898251,-8.952515,6.025523,8.329476,9.841859,9.024226,4.766260,4.474828,-8.975978,-8.299009,6.326386,4.748211,-8.290213,9.796037,-6.198997,9.872437,-6.406838,-5.320585,7.780076,-8.458302,-4.293370,-1.175243,2.664062,6.520548,-1.365934,1.459552,3.781440,-5.910886,-4.316950,-8.573388,-4.937181,-0.282179,2.522218,-4.612509,-9.426382,4.960826,-4.879445,-6.313993,-5.478063,1.444393,2.822800,-2.858816,-1.283235,-6.549227,-6.151202,7.647524,2.187905,6.200660,-6.545592,2.056681,6.785624,-0.413419,-9.876218,3.355173,-9.880187,9.812132,1.595145,7.750255,5.523830,6.682369,-3.855427,-9.435233,-7.354784,1.239218,-2.242381,1.155792,2.792342,8.514267,-2.725225,-2.798337,-8.603717,5.762623], dtype = "float32")#candidate|10887|(360,)|const|float32
call_10886 = relay.TupleGetItem(func_5335_call(relay.reshape(const_10887.astype('float32'), [4, 10, 9])), 1)
call_10888 = relay.TupleGetItem(func_5338_call(relay.reshape(const_10887.astype('float32'), [4, 10, 9])), 1)
output = relay.Tuple([call_10883,call_10886,const_10887,])
output2 = relay.Tuple([call_10884,call_10888,const_10887,])
func_10899 = relay.Function([], output)
mod['func_10899'] = func_10899
mod = relay.transform.InferType()(mod)
output = func_10899()
func_10900 = relay.Function([], output)
mutated_mod['func_10900'] = func_10900
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10901 = relay.var("var_10901", dtype = "bool", shape = (10, 1, 16))#candidate|10901|(10, 1, 16)|var|bool
var_10902 = relay.var("var_10902", dtype = "bool", shape = (10, 12, 16))#candidate|10902|(10, 12, 16)|var|bool
bop_10903 = relay.logical_and(var_10901.astype('bool'), var_10902.astype('bool')) # shape=(10, 12, 16)
output = bop_10903
output2 = bop_10903
F = relay.Function([var_10901,var_10902,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_10901,var_10902,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
	relay.transform.DefuseOps(),
	relay.transform.SimplifyExpr(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

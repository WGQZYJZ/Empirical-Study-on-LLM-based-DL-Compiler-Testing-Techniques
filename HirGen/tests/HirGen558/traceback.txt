==========mod==========
#[version = "0.0.5"]
def @func_12671(%var_12662: Tensor[(13, 7, 8), float64], %var_12663: Tensor[(13, 7, 8), float64]) -> (Tensor[(13, 7, 8), float64], Tensor[(13, 7, 8), int8]) {
  %0 = cast(%var_12663, dtype="float64") /* ty=Tensor[(13, 7, 8), float64] */;
  %1 = shape_of(%var_12662, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_12662, dtype="float64") /* ty=Tensor[(13, 7, 8), float64] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %4 = cast(%var_12662, dtype="int8") /* ty=Tensor[(13, 7, 8), int8] */;
  %5 = shape_of(%var_12663, dtype="int32") /* ty=Tensor[(3), int32] */;
  %6 = cast(%var_12663, dtype="int8") /* ty=Tensor[(13, 7, 8), int8] */;
  %7 = dyn.reshape(%4, %5, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %8 = mod(%2, %3) /* ty=Tensor[(13, 7, 8), float64] */;
  %9 = right_shift(%6, %7) /* ty=Tensor[(13, 7, 8), int8] */;
  (%8, %9)
}

def @func_10663(%var_10651: Tensor[(14, 1), float64], %var_10652: Tensor[(96), float64]) -> (Tensor[(8, 3, 3), float32], Tensor[(96), float64], Tensor[(286), float64], Tensor[(14, 504), uint16]) {
  %10 = @func_9123() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %11 = cast(%var_10651, dtype="float64") /* ty=Tensor[(14, 1), float64] */;
  %12 = cast(%var_10652, dtype="float64") /* ty=Tensor[(96), float64] */;
  %13 = cast(meta[relay.Constant][0] /* ty=Tensor[(286), float64] */, dtype="float64") /* ty=Tensor[(286), float64] */;
  %14 = reshape(%11, newshape=[1, 1, 14]) /* ty=Tensor[(1, 1, 14), float64] */;
  %15 = reshape(%12, newshape=[96, 1]) /* ty=Tensor[(96, 1), float64] */;
  %16 = reshape(%13, newshape=[286]) /* ty=Tensor[(286), float64] */;
  %17 = @func_6204(%14, %15, %16) /* ty=(Tensor[(8, 7, 9), float32], Tensor[(504), float32], Tensor[(864), float64], Tensor[(2, 11, 13), float64], Tensor[(286), float64], Tensor[(1, 11, 9), int8], Tensor[(1, 96, 14), uint32]) */;
  %18 = %17.1;
  %19 = cast(%18, dtype="uint16") /* ty=Tensor[(504), uint16] */;
  %20 = cast(%var_10651, dtype="uint16") /* ty=Tensor[(14, 1), uint16] */;
  %21 = %10.0;
  %22 = bitwise_xor(%19, %20) /* ty=Tensor[(14, 504), uint16] */;
  (%21, %var_10652, meta[relay.Constant][0] /* ty=Tensor[(286), float64] */, %22)
}

def @func_12072(%var_12026: Tensor[(1, 8, 16), float64], %var_12035: Tensor[(1056), float64], %var_12064: Tensor[(117), bool], %var_12069: Tensor[(2, 300), uint8]) -> (Tensor[(16, 11, 6), float64], Tensor[(1056), float64], Tensor[(8, 3, 3), float32], Tensor[(70), float32], Tensor[(1, 8, 16), float64], Tensor[(70), float32], Tensor[(117), bool], Tensor[(84), float32], uint32, Tensor[(616), float64], Tensor[(2, 300), uint8]) {
  %23 = cast(%var_12035, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %24 = reshape(%23, newshape=[16, 11, 6]) /* ty=Tensor[(16, 11, 6), float64] */;
  %25 = @func_11129() /* ty=(Tensor[(8, 3, 3), float32], Tensor[(8, 7, 9), float32], Tensor[(504), float32]) */;
  %26 = @func_10466() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(70), float32], Tensor[(8, 3, 3), float64]) */;
  %27 = cast(%var_12026, dtype="float64") /* ty=Tensor[(1, 8, 16), float64] */;
  %28 = atanh(%27) /* ty=Tensor[(1, 8, 16), float64] */;
  %29 = cast(%28, dtype="float64") /* ty=Tensor[(1, 8, 16), float64] */;
  %30 = %26.1;
  %31 = cast(%30, dtype="float32") /* ty=Tensor[(70), float32] */;
  %32 = cast(%var_12064, dtype="bool") /* ty=Tensor[(117), bool] */;
  %33 = cast(meta[relay.Constant][1] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
  %34 = cast(meta[relay.Constant][2] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %35 = reshape(%31, newshape=[70]) /* ty=Tensor[(70), float32] */;
  %36 = reshape(%32, newshape=[117]) /* ty=Tensor[(117), bool] */;
  %37 = reshape(%33, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %38 = reshape(%34, newshape=[]) /* ty=uint32 */;
  %39 = @func_10543(%35, %36, %37, %38) /* ty=(Tensor[(8, 3, 3), float32], Tensor[(8, 3, 3), float64], Tensor[(7, 2, 5), float32], Tensor[(70), float32], Tensor[(600), uint8], Tensor[(117), bool], Tensor[(84), float32], uint32) */;
  %40 = cast(meta[relay.Constant][1] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
  %41 = cast(meta[relay.Constant][2] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %42 = cast(%var_12069, dtype="uint8") /* ty=Tensor[(2, 300), uint8] */;
  %43 = reshape(%40, newshape=[6, 14, 1]) /* ty=Tensor[(6, 14, 1), float32] */;
  %44 = reshape(%41, newshape=[]) /* ty=uint32 */;
  %45 = reshape(%42, newshape=[600]) /* ty=Tensor[(600), uint8] */;
  %46 = @func_1633(%43, %44, %45) /* ty=(Tensor[(6, 13, 5), bool], Tensor[(6, 13, 5), bool], Tensor[(11, 2, 4), float64], Tensor[(616), float64], Tensor[(11, 2, 4), int32], Tensor[(6, 14, 1), float64], Tensor[(11, 2, 4), bool], Tensor[(600), uint8]) */;
  %47 = @func_6085(%24) /* ty=Tensor[(16, 11, 6), float64] */;
  %48 = %25.0;
  %49 = log(%29) /* ty=Tensor[(1, 8, 16), float64] */;
  %50 = %39.3;
  %51 = %46.3;
  (%47, %var_12035, %48, %30, %49, %50, %var_12064, meta[relay.Constant][1] /* ty=Tensor[(84), float32] */, meta[relay.Constant][2] /* ty=uint32 */, %51, %var_12069)
}

def @func_9154() -> (Tensor[(8, 3, 3), float32], Tensor[(15, 4, 10), bool], Tensor[(600), uint8], Tensor[(8, 3, 3), float32]) {
  %52 = @func_8639() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %53 = cast(meta[relay.Constant][3] /* ty=Tensor[(600), uint8] */, dtype="uint8") /* ty=Tensor[(600), uint8] */;
  %54 = reshape(%53, newshape=[15, 4, 10]) /* ty=Tensor[(15, 4, 10), uint8] */;
  %55 = @func_167(%54) /* ty=(Tensor[(15, 4, 10), bool], Tensor[(11, 2, 4), bool], Tensor[(44, 2), float64]) */;
  %56 = @func_9123() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %57 = %52.0;
  %58 = %55.0;
  %59 = %56.0;
  (%57, %58, meta[relay.Constant][3] /* ty=Tensor[(600), uint8] */, %59)
}

def @func_10208(%var_10149: Tensor[(546, 2), float64], %var_10173: Tensor[(14), float64], %var_10174: Tensor[(96, 1), float64], %var_10175: Tensor[(286), float64], %var_10176: Tensor[(192), float64]) -> (Tensor[(8, 3, 3), float32], Tensor[(16, 11, 6), float64], Tensor[(8, 132), float64], Tensor[(7, 12, 13), int8], Tensor[(546, 2), float64], Tensor[(600), uint8], Tensor[(8, 3, 3), float32], Tensor[(8, 3, 3), float32], Tensor[(14), float64], Tensor[(96, 1), float64], Tensor[(286), float64], Tensor[(192), float64]) {
  %60 = @func_9123() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %61 = %60.0;
  %62 = cast(%61, dtype="float32") /* ty=Tensor[(8, 3, 3), float32] */;
  %63 = cast(meta[relay.Constant][4] /* ty=Tensor[(8, 132), float64] */, dtype="float64") /* ty=Tensor[(8, 132), float64] */;
  %64 = reshape(%63, newshape=[16, 11, 6]) /* ty=Tensor[(16, 11, 6), float64] */;
  %65 = cast(meta[relay.Constant][4] /* ty=Tensor[(8, 132), float64] */, dtype="float64") /* ty=Tensor[(8, 132), float64] */;
  %66 = cast(%var_10149, dtype="float64") /* ty=Tensor[(546, 2), float64] */;
  %67 = cast(%var_10149, dtype="float64") /* ty=Tensor[(546, 2), float64] */;
  %68 = reshape(%66, newshape=[7, 12, 13]) /* ty=Tensor[(7, 12, 13), float64] */;
  %69 = reshape(%67, newshape=[7, 12, 13]) /* ty=Tensor[(7, 12, 13), float64] */;
  %70 = @func_9654(%68, %69) /* ty=(Tensor[(7, 12, 13), int8],) */;
  %71 = @func_9154() /* ty=(Tensor[(8, 3, 3), float32], Tensor[(15, 4, 10), bool], Tensor[(600), uint8], Tensor[(8, 3, 3), float32]) */;
  %72 = @func_9154() /* ty=(Tensor[(8, 3, 3), float32], Tensor[(15, 4, 10), bool], Tensor[(600), uint8], Tensor[(8, 3, 3), float32]) */;
  %73 = cast(%var_10173, dtype="float64") /* ty=Tensor[(14), float64] */;
  %74 = cast(%var_10174, dtype="float64") /* ty=Tensor[(96, 1), float64] */;
  %75 = cast(%var_10175, dtype="float64") /* ty=Tensor[(286), float64] */;
  %76 = cast(%var_10176, dtype="float64") /* ty=Tensor[(192), float64] */;
  %77 = reshape(%73, newshape=[14]) /* ty=Tensor[(14), float64] */;
  %78 = reshape(%74, newshape=[1, 96]) /* ty=Tensor[(1, 96), float64] */;
  %79 = reshape(%75, newshape=[286]) /* ty=Tensor[(286), float64] */;
  %80 = reshape(%76, newshape=[2, 96]) /* ty=Tensor[(2, 96), float64] */;
  %81 = @func_9188(%77, %78, %79, %80) /* ty=(Tensor[(8, 3, 3), float32], Tensor[(8, 3, 3), float32], Tensor[(504), float32], Tensor[(14), float64], Tensor[(286), float64], Tensor[(2, 96), bool]) */;
  %82 = sigmoid(%62) /* ty=Tensor[(8, 3, 3), float32] */;
  %83 = @func_6085(%64) /* ty=Tensor[(16, 11, 6), float64] */;
  %84 = sinh(%65) /* ty=Tensor[(8, 132), float64] */;
  %85 = %70.0;
  %86 = %71.2;
  %87 = %72.0;
  %88 = %81.1;
  (%82, %83, %84, %85, %var_10149, %86, %87, %88, %var_10173, %var_10174, %var_10175, %var_10176)
}

def @func_11323(%var_11312: Tensor[(12, 8, 2), bool]) -> (Tensor[(12, 8, 2), bool],) {
  %89 = cast(%var_11312, dtype="bool") /* ty=Tensor[(12, 8, 2), bool] */;
  %90 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(12, 8, 2), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %91 = cast(meta[relay.Constant][5] /* ty=Tensor[(12, 8, 2), bool] */, dtype="bool") /* ty=Tensor[(12, 8, 2), bool] */;
  %92 = dyn.reshape(%89, %90, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %93 = logical_or(%91, %92) /* ty=Tensor[(12, 8, 2), bool] */;
  (%93,)
}

def @func_2269(%var_2259: Tensor[(2, 11, 13), float64]) -> Tensor[(2, 11, 13), float64] {
  %94 = cast(%var_2259, dtype="float64") /* ty=Tensor[(2, 11, 13), float64] */;
  sigmoid(%94) /* ty=Tensor[(2, 11, 13), float64] */
}

def @func_5215(%var_5198: Tensor[(3, 10, 16), int32], %var_5199: Tensor[(3, 10, 16), int32]) -> Tensor[(3, 10, 16), int32] {
  %95 = cast(%var_5199, dtype="int32") /* ty=Tensor[(3, 10, 16), int32] */;
  %96 = shape_of(%var_5198, dtype="int32") /* ty=Tensor[(3), int32] */;
  %97 = cast(%var_5198, dtype="int32") /* ty=Tensor[(3, 10, 16), int32] */;
  %98 = dyn.reshape(%95, %96, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  logical_xor(%97, %98) /* ty=Tensor[(3, 10, 16), int32] */
}

def @func_1961(%var_1947: Tensor[(8, 9, 12), float64]) -> (Tensor[(8, 9, 12), float64], Tensor[(1, 11, 9), int8], Tensor[(1, 99), int8]) {
  %99 = cast(%var_1947, dtype="float64") /* ty=Tensor[(8, 9, 12), float64] */;
  %100 = cast(meta[relay.Constant][6] /* ty=Tensor[(1, 99), int8] */, dtype="int8") /* ty=Tensor[(1, 99), int8] */;
  %101 = reshape(%100, newshape=[1, 11, 9]) /* ty=Tensor[(1, 11, 9), int8] */;
  %102 = tan(%99) /* ty=Tensor[(8, 9, 12), float64] */;
  %103 = @func_1876(%101) /* ty=Tensor[(1, 11, 9), int8] */;
  (%102, %103, meta[relay.Constant][6] /* ty=Tensor[(1, 99), int8] */)
}

def @func_3648(%var_3636: Tensor[(8, 7, 9), float64]) -> Tensor[(8, 7, 9), float64] {
  %104 = cast(%var_3636, dtype="float64") /* ty=Tensor[(8, 7, 9), float64] */;
  rsqrt(%104) /* ty=Tensor[(8, 7, 9), float64] */
}

def @func_11854() -> (Tensor[(8, 3, 3), float32],) {
  %105 = @func_10075() /* ty=(Tensor[(8, 3, 3), float32], Tensor[(8, 3, 3), float64]) */;
  %106 = %105.0;
  (%106,)
}

def @func_9811(%var_9761: Tensor[(360), float32], %var_9762: uint32, %var_9778: Tensor[(1152), uint8]) -> (Tensor[(8, 3, 3), float32], Tensor[(360), float32], uint32, Tensor[(112), int64], Tensor[(1152), uint8], Tensor[(7, 12, 13), int8], uint32, Tensor[(728), uint16], Tensor[(1092), uint64]) {
  %107 = @func_8639() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %108 = cast(%var_9762, dtype="uint8") /* ty=uint8 */;
  %109 = cast(%var_9778, dtype="uint8") /* ty=Tensor[(1152), uint8] */;
  %110 = reshape(%108, newshape=[]) /* ty=uint8 */;
  %111 = reshape(%109, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), uint8] */;
  %112 = @func_7071(%110, %111) /* ty=(Tensor[(16, 6, 12), uint8], Tensor[(8, 2, 7), int64], Tensor[(112), int64]) */;
  %113 = cast(meta[relay.Constant][7] /* ty=Tensor[(1092), float64] */, dtype="float64") /* ty=Tensor[(1092), float64] */;
  %114 = cast(meta[relay.Constant][7] /* ty=Tensor[(1092), float64] */, dtype="float64") /* ty=Tensor[(1092), float64] */;
  %115 = reshape(%113, newshape=[7, 12, 13]) /* ty=Tensor[(7, 12, 13), float64] */;
  %116 = reshape(%114, newshape=[7, 12, 13]) /* ty=Tensor[(7, 12, 13), float64] */;
  %117 = @func_9654(%115, %116) /* ty=(Tensor[(7, 12, 13), int8],) */;
  %118 = cast(meta[relay.Constant][8] /* ty=Tensor[(728), uint16] */, dtype="uint16") /* ty=Tensor[(728), uint16] */;
  %119 = reshape(%118, newshape=[13, 14, 4]) /* ty=Tensor[(13, 14, 4), uint16] */;
  %120 = @func_8574(%119) /* ty=(Tensor[(13, 14, 4), uint16], Tensor[(6, 13, 5), bool], uint32) */;
  %121 = cast(%var_9761, dtype="float32") /* ty=Tensor[(360), float32] */;
  %122 = cast(%var_9762, dtype="uint32") /* ty=uint32 */;
  %123 = reshape(%121, newshape=[3, 10, 12]) /* ty=Tensor[(3, 10, 12), float32] */;
  %124 = reshape(%122, newshape=[]) /* ty=uint32 */;
  %125 = @func_5993(%123, %124) /* ty=(Tensor[(3, 10, 12), float32], Tensor[(3, 10, 12), float32], Tensor[(11, 2, 4), int32], Tensor[(84), float32], uint32, Tensor[(12, 50), uint8]) */;
  %126 = %125.4;
  %127 = cast(meta[relay.Constant][7] /* ty=Tensor[(1092), float64] */, dtype="uint64") /* ty=Tensor[(1092), uint64] */;
  %128 = cast(%126, dtype="uint64") /* ty=uint64 */;
  %129 = %107.0;
  %130 = %112.2;
  %131 = %117.0;
  %132 = %120.2;
  %133 = bitwise_or(%127, %128) /* ty=Tensor[(1092), uint64] */;
  (%129, %var_9761, %var_9762, %130, %var_9778, %131, %132, meta[relay.Constant][8] /* ty=Tensor[(728), uint16] */, %133)
}

def @func_2316(%var_2295: int32, %var_2296: Tensor[(1, 3, 7), int32]) -> (Tensor[(1, 3, 7), int32], Tensor[(1, 3, 7), float32], Tensor[(600), uint8], Tensor[(44, 2), int32]) {
  %134 = cast(%var_2295, dtype="int32") /* ty=int32 */;
  %135 = cast(%var_2296, dtype="int32") /* ty=Tensor[(1, 3, 7), int32] */;
  %136 = cast(%var_2296, dtype="float32") /* ty=Tensor[(1, 3, 7), float32] */;
  %137 = cast(meta[relay.Constant][9] /* ty=Tensor[(600), uint8] */, dtype="uint8") /* ty=Tensor[(600), uint8] */;
  %138 = reshape(%137, newshape=[15, 4, 10]) /* ty=Tensor[(15, 4, 10), uint8] */;
  %139 = @func_167(%138) /* ty=(Tensor[(15, 4, 10), bool], Tensor[(11, 2, 4), bool], Tensor[(44, 2), float64]) */;
  %140 = %139.2;
  %141 = cast(%140, dtype="int32") /* ty=Tensor[(44, 2), int32] */;
  %142 = cast(%var_2295, dtype="int32") /* ty=int32 */;
  %143 = minimum(%134, %135) /* ty=Tensor[(1, 3, 7), int32] */;
  %144 = asinh(%136) /* ty=Tensor[(1, 3, 7), float32] */;
  %145 = bitwise_xor(%141, %142) /* ty=Tensor[(44, 2), int32] */;
  (%143, %144, meta[relay.Constant][9] /* ty=Tensor[(600), uint8] */, %145)
}

def @func_11289(%var_11271: Tensor[(2, 7, 7), uint64], %var_11279: Tensor[(6, 78), float32]) -> (Tensor[(2, 7, 7), uint64], Tensor[(4, 9, 13), float32], Tensor[(6, 78), float32]) {
  %146 = cast(meta[relay.Constant][10] /* ty=Tensor[(2, 7, 7), uint64] */, dtype="uint64") /* ty=Tensor[(2, 7, 7), uint64] */;
  %147 = shape_of(%var_11271, dtype="int32") /* ty=Tensor[(3), int32] */;
  %148 = cast(%var_11271, dtype="uint64") /* ty=Tensor[(2, 7, 7), uint64] */;
  %149 = dyn.reshape(%146, %147, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %150 = cast(%var_11279, dtype="float32") /* ty=Tensor[(6, 78), float32] */;
  %151 = reshape(%150, newshape=[4, 9, 13]) /* ty=Tensor[(4, 9, 13), float32] */;
  %152 = minimum(%148, %149) /* ty=Tensor[(2, 7, 7), uint64] */;
  %153 = @func_8475(%151) /* ty=Tensor[(4, 9, 13), float32] */;
  (%152, %153, %var_11279)
}

def @func_5993(%var_5973: Tensor[(3, 10, 12), float32], %var_5990: uint32) -> (Tensor[(3, 10, 12), float32], Tensor[(3, 10, 12), float32], Tensor[(11, 2, 4), int32], Tensor[(84), float32], uint32, Tensor[(12, 50), uint8]) {
  %154 = cast(meta[relay.Constant][11] /* ty=Tensor[(3, 10, 12), float32] */, dtype="float32") /* ty=Tensor[(3, 10, 12), float32] */;
  %155 = shape_of(%var_5973, dtype="int32") /* ty=Tensor[(3), int32] */;
  %156 = cast(%var_5973, dtype="float32") /* ty=Tensor[(3, 10, 12), float32] */;
  %157 = dyn.reshape(%154, %155, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %158 = cast(%var_5973, dtype="float32") /* ty=Tensor[(3, 10, 12), float32] */;
  %159 = cast(meta[relay.Constant][12] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
  %160 = cast(%var_5990, dtype="uint32") /* ty=uint32 */;
  %161 = cast(meta[relay.Constant][13] /* ty=Tensor[(12, 50), uint8] */, dtype="uint8") /* ty=Tensor[(12, 50), uint8] */;
  %162 = reshape(%159, newshape=[6, 14, 1]) /* ty=Tensor[(6, 14, 1), float32] */;
  %163 = reshape(%160, newshape=[]) /* ty=uint32 */;
  %164 = reshape(%161, newshape=[600]) /* ty=Tensor[(600), uint8] */;
  %165 = @func_1633(%162, %163, %164) /* ty=(Tensor[(6, 13, 5), bool], Tensor[(6, 13, 5), bool], Tensor[(11, 2, 4), float64], Tensor[(616), float64], Tensor[(11, 2, 4), int32], Tensor[(6, 14, 1), float64], Tensor[(11, 2, 4), bool], Tensor[(600), uint8]) */;
  %166 = power(%156, %157) /* ty=Tensor[(3, 10, 12), float32] */;
  %167 = sigmoid(%158) /* ty=Tensor[(3, 10, 12), float32] */;
  %168 = %165.4;
  (%166, %167, %168, meta[relay.Constant][12] /* ty=Tensor[(84), float32] */, %var_5990, meta[relay.Constant][13] /* ty=Tensor[(12, 50), uint8] */)
}

def @func_9077(%var_8920: Tensor[(14, 15, 7), float64], %var_8936: Tensor[(14, 15, 7), float64], %var_8950: Tensor[(1008), float32], %var_8974: Tensor[(130, 9), uint32], %var_9021: Tensor[(14, 15, 7), uint8]) -> (Tensor[(8, 3, 3), float32], Tensor[(4, 1, 6), float64], Tensor[(24), float64], Tensor[(3, 10, 16), int32], Tensor[(88, 20), float32], Tensor[(14, 15, 7), float64], Tensor[(14, 15, 7), uint32], Tensor[(1, 1008), float32], int32, Tensor[(16, 1), int32], Tensor[(1008), float32], Tensor[(8, 9, 12), float64], Tensor[(864), float64], Tensor[(6, 13, 15), bool], Tensor[(130, 9), uint32], Tensor[(8, 3, 3), float64], Tensor[(8, 7, 9), float64], Tensor[(504), float64], Tensor[(14, 15, 7), float64], Tensor[(8, 3, 3), float64], Tensor[(6, 13, 5), bool], Tensor[(8, 3, 3), float64], Tensor[(3, 10, 16), int32]) {
  %169 = @func_8639() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %170 = cast(meta[relay.Constant][14] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
  %171 = reshape(%170, newshape=[4, 1, 6]) /* ty=Tensor[(4, 1, 6), float64] */;
  %172 = @func_8160(%171) /* ty=(Tensor[(4, 1, 6), float64],) */;
  %173 = cast(meta[relay.Constant][15] /* ty=Tensor[(88, 20), float32] */, dtype="float32") /* ty=Tensor[(88, 20), float32] */;
  %174 = reshape(%173, newshape=[16, 10, 11]) /* ty=Tensor[(16, 10, 11), float32] */;
  %175 = @func_8355(%174) /* ty=(Tensor[(16, 10, 11), float32], Tensor[(3, 10, 16), int32], Tensor[(480), int32]) */;
  %176 = cast(meta[relay.Constant][16] /* ty=Tensor[(1470), float64] */, dtype="float64") /* ty=Tensor[(1470), float64] */;
  %177 = reshape(%176, newshape=[14, 15, 7]) /* ty=Tensor[(14, 15, 7), float64] */;
  %178 = @func_2922(%177) /* ty=Tensor[(14, 15, 7), float64] */;
  %179 = cast(%var_8920, dtype="float64") /* ty=Tensor[(14, 15, 7), float64] */;
  %180 = shape_of(%178, dtype="int32") /* ty=Tensor[(3), int32] */;
  %181 = cast(%178, dtype="float64") /* ty=Tensor[(14, 15, 7), float64] */;
  %182 = dyn.reshape(%179, %180, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %183 = cast(%var_8936, dtype="uint32") /* ty=Tensor[(14, 15, 7), uint32] */;
  %184 = shape_of(%178, dtype="int32") /* ty=Tensor[(3), int32] */;
  %185 = cast(%178, dtype="uint32") /* ty=Tensor[(14, 15, 7), uint32] */;
  %186 = dyn.reshape(%183, %184, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %187 = cast(-6 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %188 = cast(meta[relay.Constant][17] /* ty=Tensor[(16, 1), int32] */, dtype="int32") /* ty=Tensor[(16, 1), int32] */;
  %189 = cast(%var_8950, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %190 = reshape(%187, newshape=[]) /* ty=int32 */;
  %191 = reshape(%188, newshape=[16, 1]) /* ty=Tensor[(16, 1), int32] */;
  %192 = reshape(%189, newshape=[1, 1008]) /* ty=Tensor[(1, 1008), float32] */;
  %193 = @func_5317(%190, %191, %192) /* ty=(Tensor[(16, 1), int32], Tensor[(8, 14, 9), float32], Tensor[(1, 1008), float32]) */;
  %194 = cast(meta[relay.Constant][18] /* ty=Tensor[(864), float64] */, dtype="float64") /* ty=Tensor[(864), float64] */;
  %195 = reshape(%194, newshape=[8, 9, 12]) /* ty=Tensor[(8, 9, 12), float64] */;
  %196 = @func_1961(%195) /* ty=(Tensor[(8, 9, 12), float64], Tensor[(1, 11, 9), int8], Tensor[(1, 99), int8]) */;
  %197 = cast(%var_8974, dtype="uint32") /* ty=Tensor[(130, 9), uint32] */;
  %198 = cast(%var_8974, dtype="uint32") /* ty=Tensor[(130, 9), uint32] */;
  %199 = reshape(%197, newshape=[6, 13, 15]) /* ty=Tensor[(6, 13, 15), uint32] */;
  %200 = reshape(%198, newshape=[6, 13, 15]) /* ty=Tensor[(6, 13, 15), uint32] */;
  %201 = @func_8717() /* ty=(Tensor[(8, 3, 3), float64],) */;
  %202 = cast(meta[relay.Constant][19] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %203 = reshape(%202, newshape=[8, 7, 9]) /* ty=Tensor[(8, 7, 9), float64] */;
  %204 = cast(meta[relay.Constant][16] /* ty=Tensor[(1470), float64] */, dtype="int32") /* ty=Tensor[(1470), int32] */;
  %205 = shape_of(%var_8920, dtype="int32") /* ty=Tensor[(3), int32] */;
  %206 = cast(%var_8920, dtype="int32") /* ty=Tensor[(14, 15, 7), int32] */;
  %207 = dyn.reshape(%204, %205, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %208 = right_shift(%206, %207) /* ty=Tensor[(14, 15, 7), int32] */;
  %209 = cast(%178, dtype="uint8") /* ty=Tensor[(14, 15, 7), uint8] */;
  %210 = shape_of(%208, dtype="int32") /* ty=Tensor[(3), int32] */;
  %211 = cast(%208, dtype="uint8") /* ty=Tensor[(14, 15, 7), uint8] */;
  %212 = dyn.reshape(%209, %210, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %213 = multiply(%211, %212) /* ty=Tensor[(14, 15, 7), uint8] */;
  %214 = cast(%var_9021, dtype="float64") /* ty=Tensor[(14, 15, 7), float64] */;
  %215 = shape_of(%213, dtype="int32") /* ty=Tensor[(3), int32] */;
  %216 = cast(%213, dtype="float64") /* ty=Tensor[(14, 15, 7), float64] */;
  %217 = dyn.reshape(%214, %215, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %218 = @func_8717() /* ty=(Tensor[(8, 3, 3), float64],) */;
  %219 = cast(-6 /* ty=int32 */, dtype="uint32") /* ty=uint32 */;
  %220 = reshape(%219, newshape=[]) /* ty=uint32 */;
  %221 = @func_8717() /* ty=(Tensor[(8, 3, 3), float64],) */;
  %222 = cast(meta[relay.Constant][15] /* ty=Tensor[(88, 20), float32] */, dtype="float32") /* ty=Tensor[(88, 20), float32] */;
  %223 = reshape(%222, newshape=[16, 10, 11]) /* ty=Tensor[(16, 10, 11), float32] */;
  %224 = @func_8355(%223) /* ty=(Tensor[(16, 10, 11), float32], Tensor[(3, 10, 16), int32], Tensor[(480), int32]) */;
  %225 = %169.0;
  %226 = %172.0;
  %227 = %175.1;
  %228 = mod(%181, %182) /* ty=Tensor[(14, 15, 7), float64] */;
  %229 = bitwise_xor(%185, %186) /* ty=Tensor[(14, 15, 7), uint32] */;
  %230 = %193.2;
  %231 = %196.0;
  %232 = @func_4089(%199, %200) /* ty=Tensor[(6, 13, 15), bool] */;
  %233 = %201.0;
  %234 = @func_3648(%203) /* ty=Tensor[(8, 7, 9), float64] */;
  %235 = divide(%216, %217) /* ty=Tensor[(14, 15, 7), float64] */;
  %236 = %218.0;
  %237 = @func_1402(%220) /* ty=Tensor[(6, 13, 5), bool] */;
  %238 = %221.0;
  %239 = %224.1;
  (%225, %226, meta[relay.Constant][14] /* ty=Tensor[(24), float64] */, %227, meta[relay.Constant][15] /* ty=Tensor[(88, 20), float32] */, %228, %229, %230, -6 /* ty=int32 */, meta[relay.Constant][17] /* ty=Tensor[(16, 1), int32] */, %var_8950, %231, meta[relay.Constant][18] /* ty=Tensor[(864), float64] */, %232, %var_8974, %233, %234, meta[relay.Constant][19] /* ty=Tensor[(504), float64] */, %235, %236, %237, %238, %239)
}

def @func_9271() -> (Tensor[(1, 11, 9), int8], Tensor[(99), int8], Tensor[(8, 3, 3), float64]) {
  %240 = cast(meta[relay.Constant][20] /* ty=Tensor[(99), int8] */, dtype="int8") /* ty=Tensor[(99), int8] */;
  %241 = reshape(%240, newshape=[1, 11, 9]) /* ty=Tensor[(1, 11, 9), int8] */;
  %242 = @func_8717() /* ty=(Tensor[(8, 3, 3), float64],) */;
  %243 = %242.0;
  %244 = cast(meta[relay.Constant][21] /* ty=Tensor[(8, 3, 3), float64] */, dtype="float64") /* ty=Tensor[(8, 3, 3), float64] */;
  %245 = shape_of(%243, dtype="int32") /* ty=Tensor[(3), int32] */;
  %246 = cast(%243, dtype="float64") /* ty=Tensor[(8, 3, 3), float64] */;
  %247 = dyn.reshape(%244, %245, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %248 = @func_1876(%241) /* ty=Tensor[(1, 11, 9), int8] */;
  %249 = floor_divide(%246, %247) /* ty=Tensor[(8, 3, 3), float64] */;
  (%248, meta[relay.Constant][20] /* ty=Tensor[(99), int8] */, %249)
}

def @func_9590(%var_9587: uint32) -> (Tensor[(8, 3, 3), float32], Tensor[(6, 13, 5), bool], uint32) {
  %250 = cast(%var_9587, dtype="uint32") /* ty=uint32 */;
  %251 = reshape(%250, newshape=[]) /* ty=uint32 */;
  %252 = @func_8681() /* ty=Tensor[(8, 3, 3), float32] */;
  %253 = @func_1402(%251) /* ty=Tensor[(6, 13, 5), bool] */;
  (%252, %253, %var_9587)
}

def @func_4391(%var_4323: Tensor[(1, 13, 9), bool], %var_4375: Tensor[(84), float32], %var_4376: uint32) -> (Tensor[(2, 13, 9), bool], Tensor[(1, 13, 9), float32], Tensor[(616), float64], Tensor[(84), float32], uint32, Tensor[(600), uint8]) {
  %254 = cast(%var_4323, dtype="bool") /* ty=Tensor[(1, 13, 9), bool] */;
  %255 = cast(meta[relay.Constant][22] /* ty=Tensor[(2, 13, 9), bool] */, dtype="bool") /* ty=Tensor[(2, 13, 9), bool] */;
  %256 = cast(%var_4323, dtype="float32") /* ty=Tensor[(1, 13, 9), float32] */;
  %257 = cast(%var_4375, dtype="float32") /* ty=Tensor[(84), float32] */;
  %258 = cast(%var_4376, dtype="uint32") /* ty=uint32 */;
  %259 = cast(meta[relay.Constant][23] /* ty=Tensor[(600), uint8] */, dtype="uint8") /* ty=Tensor[(600), uint8] */;
  %260 = reshape(%257, newshape=[6, 14, 1]) /* ty=Tensor[(6, 14, 1), float32] */;
  %261 = reshape(%258, newshape=[]) /* ty=uint32 */;
  %262 = reshape(%259, newshape=[600]) /* ty=Tensor[(600), uint8] */;
  %263 = @func_1633(%260, %261, %262) /* ty=(Tensor[(6, 13, 5), bool], Tensor[(6, 13, 5), bool], Tensor[(11, 2, 4), float64], Tensor[(616), float64], Tensor[(11, 2, 4), int32], Tensor[(6, 14, 1), float64], Tensor[(11, 2, 4), bool], Tensor[(600), uint8]) */;
  %264 = logical_and(%254, %255) /* ty=Tensor[(2, 13, 9), bool] */;
  %265 = log(%256) /* ty=Tensor[(1, 13, 9), float32] */;
  %266 = %263.3;
  (%264, %265, %266, %var_4375, %var_4376, meta[relay.Constant][23] /* ty=Tensor[(600), uint8] */)
}

def @func_12565(%var_12548: Tensor[(8, 3, 3), float32]) -> Tensor[(8, 3, 3), int64] {
  %267 = @func_11403() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %268 = %267.0;
  %269 = cast(%var_12548, dtype="int64") /* ty=Tensor[(8, 3, 3), int64] */;
  %270 = shape_of(%268, dtype="int32") /* ty=Tensor[(3), int32] */;
  %271 = cast(%268, dtype="int64") /* ty=Tensor[(8, 3, 3), int64] */;
  %272 = dyn.reshape(%269, %270, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  bitwise_xor(%271, %272) /* ty=Tensor[(8, 3, 3), int64] */
}

def @func_1876(%var_1872: Tensor[(1, 11, 9), int8]) -> Tensor[(1, 11, 9), int8] {
  %273 = cast(meta[relay.Constant][24] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %274 = cast(%var_1872, dtype="int8") /* ty=Tensor[(1, 11, 9), int8] */;
  logical_xor(%273, %274) /* ty=Tensor[(1, 11, 9), int8] */
}

def @func_2922(%var_2915: Tensor[(14, 15, 7), float64]) -> Tensor[(14, 15, 7), float64] {
  %275 = cast(%var_2915, dtype="float64") /* ty=Tensor[(14, 15, 7), float64] */;
  sinh(%275) /* ty=Tensor[(14, 15, 7), float64] */
}

def @func_8355(%var_8342: Tensor[(16, 10, 11), float32]) -> (Tensor[(16, 10, 11), float32], Tensor[(3, 10, 16), int32], Tensor[(480), int32]) {
  %276 = cast(%var_8342, dtype="float32") /* ty=Tensor[(16, 10, 11), float32] */;
  %277 = sigmoid(%276) /* ty=Tensor[(16, 10, 11), float32] */;
  %278 = cast(%277, dtype="float32") /* ty=Tensor[(16, 10, 11), float32] */;
  %279 = cast(meta[relay.Constant][25] /* ty=Tensor[(480), int32] */, dtype="int32") /* ty=Tensor[(480), int32] */;
  %280 = cast(meta[relay.Constant][25] /* ty=Tensor[(480), int32] */, dtype="int32") /* ty=Tensor[(480), int32] */;
  %281 = reshape(%279, newshape=[3, 10, 16]) /* ty=Tensor[(3, 10, 16), int32] */;
  %282 = reshape(%280, newshape=[3, 10, 16]) /* ty=Tensor[(3, 10, 16), int32] */;
  %283 = log(%278) /* ty=Tensor[(16, 10, 11), float32] */;
  %284 = @func_5215(%281, %282) /* ty=Tensor[(3, 10, 16), int32] */;
  (%283, %284, meta[relay.Constant][25] /* ty=Tensor[(480), int32] */)
}

def @func_5261(%var_5244: Tensor[(12, 3, 15), uint32]) -> Tensor[(12, 3, 15), uint32] {
  %285 = cast(meta[relay.Constant][26] /* ty=Tensor[(12, 3, 15), uint32] */, dtype="uint32") /* ty=Tensor[(12, 3, 15), uint32] */;
  %286 = shape_of(%var_5244, dtype="int32") /* ty=Tensor[(3), int32] */;
  %287 = cast(%var_5244, dtype="uint32") /* ty=Tensor[(12, 3, 15), uint32] */;
  %288 = dyn.reshape(%285, %286, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  bitwise_or(%287, %288) /* ty=Tensor[(12, 3, 15), uint32] */
}

def @func_10693(%var_10679: uint32, %var_10680: Tensor[(1152), uint8], %var_10690: Tensor[(864), float64]) -> (Tensor[(8, 3, 3), float32], uint32, Tensor[(360), float32], uint32, Tensor[(1152), uint8], Tensor[(1, 11, 9), int8], Tensor[(864), float64]) {
  %289 = cast(meta[relay.Constant][27] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %290 = cast(%var_10679, dtype="uint32") /* ty=uint32 */;
  %291 = cast(%var_10680, dtype="uint8") /* ty=Tensor[(1152), uint8] */;
  %292 = reshape(%289, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %293 = reshape(%290, newshape=[]) /* ty=uint32 */;
  %294 = reshape(%291, newshape=[1152]) /* ty=Tensor[(1152), uint8] */;
  %295 = @func_9811(%292, %293, %294) /* ty=(Tensor[(8, 3, 3), float32], Tensor[(360), float32], uint32, Tensor[(112), int64], Tensor[(1152), uint8], Tensor[(7, 12, 13), int8], uint32, Tensor[(728), uint16], Tensor[(1092), uint64]) */;
  %296 = cast(%var_10690, dtype="float64") /* ty=Tensor[(864), float64] */;
  %297 = reshape(%296, newshape=[8, 9, 12]) /* ty=Tensor[(8, 9, 12), float64] */;
  %298 = @func_1961(%297) /* ty=(Tensor[(8, 9, 12), float64], Tensor[(1, 11, 9), int8], Tensor[(1, 99), int8]) */;
  %299 = @func_10420() /* ty=Tensor[(8, 3, 3), float32] */;
  %300 = %295.6;
  %301 = %298.1;
  (%299, %300, meta[relay.Constant][27] /* ty=Tensor[(360), float32] */, %var_10679, %var_10680, %301, %var_10690)
}

def @func_3598(%var_3588: Tensor[(8, 7, 9), float32]) -> Tensor[(8, 7, 9), float32] {
  %302 = cast(%var_3588, dtype="float32") /* ty=Tensor[(8, 7, 9), float32] */;
  %303 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(8, 7, 9), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %304 = cast(meta[relay.Constant][28] /* ty=Tensor[(8, 7, 9), float32] */, dtype="float32") /* ty=Tensor[(8, 7, 9), float32] */;
  %305 = dyn.reshape(%302, %303, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%304, %305) /* ty=Tensor[(8, 7, 9), float32] */
}

def @func_10075() -> (Tensor[(8, 3, 3), float32], Tensor[(8, 3, 3), float64]) {
  %306 = @func_8639() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %307 = %306.0;
  %308 = @func_9906() /* ty=Tensor[(8, 3, 3), float64] */;
  (%307, %308)
}

def @func_1402(%var_1384: uint32) -> Tensor[(6, 13, 5), bool] {
  %309 = cast(%var_1384, dtype="bool") /* ty=bool */;
  %310 = cast(meta[relay.Constant][29] /* ty=Tensor[(6, 13, 5), uint32] */, dtype="bool") /* ty=Tensor[(6, 13, 5), bool] */;
  less_equal(%309, %310) /* ty=Tensor[(6, 13, 5), bool] */
}

def @func_8681() -> Tensor[(8, 3, 3), float32] {
  %311 = @func_8639() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %312 = %311.0;
  %313 = cast(%312, dtype="float32") /* ty=Tensor[(8, 3, 3), float32] */;
  tan(%313) /* ty=Tensor[(8, 3, 3), float32] */
}

def @func_7739(%var_7736: Tensor[(7, 2, 5), float32]) -> Tensor[(7, 2, 5), float32] {
  %314 = cast(%var_7736, dtype="float32") /* ty=Tensor[(7, 2, 5), float32] */;
  sigmoid(%314) /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_7071(%var_7042: uint8, %var_7043: Tensor[(16, 6, 12), uint8]) -> (Tensor[(16, 6, 12), uint8], Tensor[(8, 2, 7), int64], Tensor[(112), int64]) {
  %315 = cast(%var_7042, dtype="uint8") /* ty=uint8 */;
  %316 = cast(%var_7043, dtype="uint8") /* ty=Tensor[(16, 6, 12), uint8] */;
  %317 = cast(meta[relay.Constant][30] /* ty=Tensor[(112), int64] */, dtype="int64") /* ty=Tensor[(112), int64] */;
  %318 = cast(meta[relay.Constant][30] /* ty=Tensor[(112), int64] */, dtype="int64") /* ty=Tensor[(112), int64] */;
  %319 = reshape(%317, newshape=[8, 2, 7]) /* ty=Tensor[(8, 2, 7), int64] */;
  %320 = reshape(%318, newshape=[8, 2, 7]) /* ty=Tensor[(8, 2, 7), int64] */;
  %321 = left_shift(%315, %316) /* ty=Tensor[(16, 6, 12), uint8] */;
  %322 = @func_1450(%319, %320) /* ty=Tensor[(8, 2, 7), int64] */;
  (%321, %322, meta[relay.Constant][30] /* ty=Tensor[(112), int64] */)
}

def @func_4857(%var_4831: Tensor[(8, 1, 12), float64], %var_4842: Tensor[(504), float32], %var_4855: Tensor[(864), float64]) -> (Tensor[(8, 11, 12), float64], Tensor[(8, 7, 9), float32], Tensor[(504), float32], Tensor[(1, 11, 9), int8], Tensor[(864), float64]) {
  %323 = cast(%var_4831, dtype="float64") /* ty=Tensor[(8, 1, 12), float64] */;
  %324 = cast(meta[relay.Constant][31] /* ty=Tensor[(8, 11, 12), float64] */, dtype="float64") /* ty=Tensor[(8, 11, 12), float64] */;
  %325 = cast(%var_4842, dtype="float32") /* ty=Tensor[(504), float32] */;
  %326 = reshape(%325, newshape=[8, 7, 9]) /* ty=Tensor[(8, 7, 9), float32] */;
  %327 = cast(%var_4855, dtype="float64") /* ty=Tensor[(864), float64] */;
  %328 = reshape(%327, newshape=[8, 9, 12]) /* ty=Tensor[(8, 9, 12), float64] */;
  %329 = @func_1961(%328) /* ty=(Tensor[(8, 9, 12), float64], Tensor[(1, 11, 9), int8], Tensor[(1, 99), int8]) */;
  %330 = power(%323, %324) /* ty=Tensor[(8, 11, 12), float64] */;
  %331 = @func_3598(%326) /* ty=Tensor[(8, 7, 9), float32] */;
  %332 = %329.1;
  (%330, %331, %var_4842, %332, %var_4855)
}

def @func_8639() -> (Tensor[(8, 3, 3), float32],) {
  %333 = cast(meta[relay.Constant][32] /* ty=Tensor[(8, 3, 3), float32] */, dtype="float32") /* ty=Tensor[(8, 3, 3), float32] */;
  %334 = rsqrt(%333) /* ty=Tensor[(8, 3, 3), float32] */;
  (%334,)
}

def @func_10866(%var_10729: Tensor[(1008), float32], %var_10740: uint32, %var_10742: Tensor[(36, 24), float64], %var_10774: Tensor[(462, 3), bool], %var_10790: Tensor[(15), float64], %var_10793: Tensor[(504, 7), float32], %var_10801: Tensor[(36, 24), float32]) -> (Tensor[(8, 3, 3), float32], Tensor[(9, 16, 7), float32], Tensor[(1008), float32], uint32, uint32, Tensor[(1152), uint8], uint32, Tensor[(6, 13, 5), bool], Tensor[(1, 1008), float32], Tensor[(16), int32], Tensor[(9, 11, 14), bool], Tensor[(462, 3), bool], Tensor[(15), float64], Tensor[(600), uint8], Tensor[(504, 7), bool], Tensor[(11, 2, 4), bool], Tensor[(36, 24), bool], Tensor[(36, 24), float64], Tensor[(36, 24), bool]) {
  %335 = cast(%var_10729, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %336 = reshape(%335, newshape=[9, 16, 7]) /* ty=Tensor[(9, 16, 7), float32] */;
  %337 = @func_10246(%336) /* ty=(Tensor[(9, 16, 7), float32],) */;
  %338 = cast(%var_10740, dtype="uint32") /* ty=uint32 */;
  %339 = cast(meta[relay.Constant][33] /* ty=Tensor[(1152), uint8] */, dtype="uint8") /* ty=Tensor[(1152), uint8] */;
  %340 = cast(%var_10742, dtype="float64") /* ty=Tensor[(36, 24), float64] */;
  %341 = reshape(%338, newshape=[]) /* ty=uint32 */;
  %342 = reshape(%339, newshape=[1152]) /* ty=Tensor[(1152), uint8] */;
  %343 = reshape(%340, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %344 = @func_10693(%341, %342, %343) /* ty=(Tensor[(8, 3, 3), float32], uint32, Tensor[(360), float32], uint32, Tensor[(1152), uint8], Tensor[(1, 11, 9), int8], Tensor[(864), float64]) */;
  %345 = cast(%var_10740, dtype="uint32") /* ty=uint32 */;
  %346 = reshape(%345, newshape=[]) /* ty=uint32 */;
  %347 = @func_9866(%346) /* ty=(Tensor[(8, 3, 3), float64], Tensor[(8, 7, 9), float64], Tensor[(1, 504), float64], Tensor[(6, 13, 5), bool], uint32) */;
  %348 = %347.4;
  %349 = cast(%348, dtype="uint32") /* ty=uint32 */;
  %350 = reshape(%349, newshape=[]) /* ty=uint32 */;
  %351 = %344.1;
  %352 = cast(%351, dtype="int32") /* ty=int32 */;
  %353 = cast(meta[relay.Constant][34] /* ty=Tensor[(16), int32] */, dtype="int32") /* ty=Tensor[(16), int32] */;
  %354 = cast(%var_10729, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %355 = reshape(%352, newshape=[]) /* ty=int32 */;
  %356 = reshape(%353, newshape=[16, 1]) /* ty=Tensor[(16, 1), int32] */;
  %357 = reshape(%354, newshape=[1, 1008]) /* ty=Tensor[(1, 1008), float32] */;
  %358 = @func_5317(%355, %356, %357) /* ty=(Tensor[(16, 1), int32], Tensor[(8, 14, 9), float32], Tensor[(1, 1008), float32]) */;
  %359 = cast(%348, dtype="bool") /* ty=bool */;
  %360 = cast(%var_10774, dtype="bool") /* ty=Tensor[(462, 3), bool] */;
  %361 = reshape(%359, newshape=[]) /* ty=bool */;
  %362 = reshape(%360, newshape=[9, 11, 14]) /* ty=Tensor[(9, 11, 14), bool] */;
  %363 = @func_7372(%361, %362) /* ty=(Tensor[(9, 11, 14), bool],) */;
  %364 = cast(%var_10790, dtype="float64") /* ty=Tensor[(15), float64] */;
  %365 = cast(meta[relay.Constant][35] /* ty=Tensor[(600), uint8] */, dtype="uint8") /* ty=Tensor[(600), uint8] */;
  %366 = reshape(%364, newshape=[1, 3, 5]) /* ty=Tensor[(1, 3, 5), float64] */;
  %367 = reshape(%365, newshape=[600]) /* ty=Tensor[(600), uint8] */;
  %368 = @func_7194(%366, %367) /* ty=(Tensor[(?, 3, 5), bool], Tensor[(15, 4, 10), bool], Tensor[(600), uint8], Tensor[(8, 7, 9), float32], Tensor[(504, 1), float32]) */;
  %369 = %368.4;
  %370 = cast(%369, dtype="bool") /* ty=Tensor[(504, 1), bool] */;
  %371 = cast(%var_10793, dtype="bool") /* ty=Tensor[(504, 7), bool] */;
  %372 = cast(meta[relay.Constant][35] /* ty=Tensor[(600), uint8] */, dtype="uint8") /* ty=Tensor[(600), uint8] */;
  %373 = reshape(%372, newshape=[15, 4, 10]) /* ty=Tensor[(15, 4, 10), uint8] */;
  %374 = @func_167(%373) /* ty=(Tensor[(15, 4, 10), bool], Tensor[(11, 2, 4), bool], Tensor[(44, 2), float64]) */;
  %375 = cast(%var_10742, dtype="float64") /* ty=Tensor[(36, 24), float64] */;
  %376 = erf(%375) /* ty=Tensor[(36, 24), float64] */;
  %377 = cast(%376, dtype="float32") /* ty=Tensor[(36, 24), float32] */;
  %378 = atanh(%377) /* ty=Tensor[(36, 24), float32] */;
  %379 = cast(%378, dtype="float32") /* ty=Tensor[(36, 24), float32] */;
  %380 = exp(%379) /* ty=Tensor[(36, 24), float32] */;
  %381 = cast(%var_10801, dtype="int64") /* ty=Tensor[(36, 24), int64] */;
  %382 = shape_of(%380, dtype="int32") /* ty=Tensor[(2), int32] */;
  %383 = cast(%380, dtype="int64") /* ty=Tensor[(36, 24), int64] */;
  %384 = dyn.reshape(%381, %382, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %385 = left_shift(%383, %384) /* ty=Tensor[(36, 24), int64] */;
  %386 = cast(%385, dtype="int8") /* ty=Tensor[(36, 24), int8] */;
  %387 = shape_of(%380, dtype="int32") /* ty=Tensor[(2), int32] */;
  %388 = cast(%380, dtype="int8") /* ty=Tensor[(36, 24), int8] */;
  %389 = dyn.reshape(%386, %387, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %390 = maximum(%388, %389) /* ty=Tensor[(36, 24), int8] */;
  %391 = cast(%390, dtype="bool") /* ty=Tensor[(36, 24), bool] */;
  %392 = shape_of(%385, dtype="int32") /* ty=Tensor[(2), int32] */;
  %393 = cast(%385, dtype="bool") /* ty=Tensor[(36, 24), bool] */;
  %394 = dyn.reshape(%391, %392, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %395 = cast(%385, dtype="float32") /* ty=Tensor[(36, 24), float32] */;
  %396 = sinh(%395) /* ty=Tensor[(36, 24), float32] */;
  %397 = cast(%396, dtype="float64") /* ty=Tensor[(36, 24), float64] */;
  %398 = cast(%378, dtype="bool") /* ty=Tensor[(36, 24), bool] */;
  %399 = shape_of(%396, dtype="int32") /* ty=Tensor[(2), int32] */;
  %400 = cast(%396, dtype="bool") /* ty=Tensor[(36, 24), bool] */;
  %401 = dyn.reshape(%398, %399, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %402 = @func_10420() /* ty=Tensor[(8, 3, 3), float32] */;
  %403 = %337.0;
  %404 = @func_1402(%350) /* ty=Tensor[(6, 13, 5), bool] */;
  %405 = %358.2;
  %406 = %363.0;
  %407 = logical_or(%370, %371) /* ty=Tensor[(504, 7), bool] */;
  %408 = %374.1;
  %409 = not_equal(%393, %394) /* ty=Tensor[(36, 24), bool] */;
  %410 = atan(%397) /* ty=Tensor[(36, 24), float64] */;
  %411 = greater(%400, %401) /* ty=Tensor[(36, 24), bool] */;
  (%402, %403, %var_10729, %351, %var_10740, meta[relay.Constant][33] /* ty=Tensor[(1152), uint8] */, %348, %404, %405, meta[relay.Constant][34] /* ty=Tensor[(16), int32] */, %406, %var_10774, %var_10790, meta[relay.Constant][35] /* ty=Tensor[(600), uint8] */, %407, %408, %409, %410, %411)
}

def @func_10543(%var_10530: Tensor[(70), float32], %var_10538: Tensor[(117), bool], %var_10539: Tensor[(84), float32], %var_10540: uint32) -> (Tensor[(8, 3, 3), float32], Tensor[(8, 3, 3), float64], Tensor[(7, 2, 5), float32], Tensor[(70), float32], Tensor[(600), uint8], Tensor[(117), bool], Tensor[(84), float32], uint32) {
  %412 = @func_9123() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %413 = cast(%var_10530, dtype="float32") /* ty=Tensor[(70), float32] */;
  %414 = reshape(%413, newshape=[7, 2, 5]) /* ty=Tensor[(7, 2, 5), float32] */;
  %415 = cast(%var_10538, dtype="bool") /* ty=Tensor[(117), bool] */;
  %416 = cast(%var_10539, dtype="float32") /* ty=Tensor[(84), float32] */;
  %417 = cast(%var_10540, dtype="uint32") /* ty=uint32 */;
  %418 = reshape(%415, newshape=[1, 13, 9]) /* ty=Tensor[(1, 13, 9), bool] */;
  %419 = reshape(%416, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %420 = reshape(%417, newshape=[]) /* ty=uint32 */;
  %421 = @func_4391(%418, %419, %420) /* ty=(Tensor[(2, 13, 9), bool], Tensor[(1, 13, 9), float32], Tensor[(616), float64], Tensor[(84), float32], uint32, Tensor[(600), uint8]) */;
  %422 = %412.0;
  %423 = @func_9906() /* ty=Tensor[(8, 3, 3), float64] */;
  %424 = @func_7739(%414) /* ty=Tensor[(7, 2, 5), float32] */;
  %425 = %421.5;
  (%422, %423, %424, %var_10530, %425, %var_10538, %var_10539, %var_10540)
}

def @func_6085(%var_6080: Tensor[(16, 11, 6), float64]) -> Tensor[(16, 11, 6), float64] {
  %426 = cast(%var_6080, dtype="float64") /* ty=Tensor[(16, 11, 6), float64] */;
  sigmoid(%426) /* ty=Tensor[(16, 11, 6), float64] */
}

def @func_12660() -> (Tensor[(8, 3, 3), float32],) {
  %427 = @func_11403() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %428 = %427.0;
  (%428,)
}

def @func_12692() -> Tensor[(8, 3, 3), float32] {
  %429 = @func_11403() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %429.0
}

def @func_11190(%var_11182: Tensor[(84), float32], %var_11183: uint32, %var_11184: Tensor[(600), uint8]) -> (Tensor[(8, 3, 3), float32], Tensor[(11, 2, 4), float64], Tensor[(84), float32], uint32, Tensor[(600), uint8]) {
  %430 = @func_11091() /* ty=(Tensor[(8, 3, 3), float32], Tensor[(6, 13, 5), bool], Tensor[(1008), float32], uint32) */;
  %431 = cast(%var_11182, dtype="float32") /* ty=Tensor[(84), float32] */;
  %432 = cast(%var_11183, dtype="uint32") /* ty=uint32 */;
  %433 = cast(%var_11184, dtype="uint8") /* ty=Tensor[(600), uint8] */;
  %434 = reshape(%431, newshape=[6, 14, 1]) /* ty=Tensor[(6, 14, 1), float32] */;
  %435 = reshape(%432, newshape=[]) /* ty=uint32 */;
  %436 = reshape(%433, newshape=[600]) /* ty=Tensor[(600), uint8] */;
  %437 = @func_1633(%434, %435, %436) /* ty=(Tensor[(6, 13, 5), bool], Tensor[(6, 13, 5), bool], Tensor[(11, 2, 4), float64], Tensor[(616), float64], Tensor[(11, 2, 4), int32], Tensor[(6, 14, 1), float64], Tensor[(11, 2, 4), bool], Tensor[(600), uint8]) */;
  %438 = %430.0;
  %439 = %437.2;
  (%438, %439, %var_11182, %var_11183, %var_11184)
}

def @func_12169(%var_12161: uint32) -> (Tensor[(8, 3, 3), float32], Tensor[(8, 3, 3), float32], uint32, uint32) {
  %440 = @func_10894() /* ty=(Tensor[(8, 3, 3), float32], Tensor[(8, 9, 12), float64], Tensor[(864), float64]) */;
  %441 = cast(%var_12161, dtype="uint32") /* ty=uint32 */;
  %442 = reshape(%441, newshape=[]) /* ty=uint32 */;
  %443 = @func_9866(%442) /* ty=(Tensor[(8, 3, 3), float64], Tensor[(8, 7, 9), float64], Tensor[(1, 504), float64], Tensor[(6, 13, 5), bool], uint32) */;
  %444 = @func_10420() /* ty=Tensor[(8, 3, 3), float32] */;
  %445 = %440.0;
  %446 = %443.4;
  (%444, %445, %446, %var_12161)
}

def @func_5317(%var_5277: int32, %var_5278: Tensor[(16, 1), int32], %var_5297: Tensor[(1, 1008), float32]) -> (Tensor[(16, 1), int32], Tensor[(8, 14, 9), float32], Tensor[(1, 1008), float32]) {
  %447 = cast(%var_5277, dtype="int32") /* ty=int32 */;
  %448 = cast(%var_5278, dtype="int32") /* ty=Tensor[(16, 1), int32] */;
  %449 = cast(%var_5297, dtype="float32") /* ty=Tensor[(1, 1008), float32] */;
  %450 = cast(%var_5277, dtype="uint32") /* ty=uint32 */;
  %451 = reshape(%449, newshape=[8, 14, 9]) /* ty=Tensor[(8, 14, 9), float32] */;
  %452 = reshape(%450, newshape=[]) /* ty=uint32 */;
  %453 = @func_4277(%451, %452) /* ty=(Tensor[(8, 14, 9), float32], Tensor[(6, 13, 5), bool], uint32) */;
  %454 = left_shift(%447, %448) /* ty=Tensor[(16, 1), int32] */;
  %455 = %453.0;
  (%454, %455, %var_5297)
}

def @func_8475(%var_8468: Tensor[(4, 9, 13), float32]) -> Tensor[(4, 9, 13), float32] {
  %456 = cast(%var_8468, dtype="float32") /* ty=Tensor[(4, 9, 13), float32] */;
  rsqrt(%456) /* ty=Tensor[(4, 9, 13), float32] */
}

def @func_8574(%var_8555: Tensor[(13, 14, 4), uint16]) -> (Tensor[(13, 14, 4), uint16], Tensor[(6, 13, 5), bool], uint32) {
  %457 = cast(%var_8555, dtype="uint16") /* ty=Tensor[(13, 14, 4), uint16] */;
  %458 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(13, 14, 4), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %459 = cast(meta[relay.Constant][36] /* ty=Tensor[(13, 14, 4), uint16] */, dtype="uint16") /* ty=Tensor[(13, 14, 4), uint16] */;
  %460 = dyn.reshape(%457, %458, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %461 = cast(meta[relay.Constant][37] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %462 = reshape(%461, newshape=[]) /* ty=uint32 */;
  %463 = bitwise_or(%459, %460) /* ty=Tensor[(13, 14, 4), uint16] */;
  %464 = @func_1402(%462) /* ty=Tensor[(6, 13, 5), bool] */;
  (%463, %464, meta[relay.Constant][37] /* ty=uint32 */)
}

def @func_2550(%var_2526: Tensor[(7, 1, 15), float32], %var_2530: Tensor[(864), float64], %var_2542: Tensor[(864), float64]) -> (Tensor[(7, 1, 15), float32], Tensor[(1, 99), int8], Tensor[(864), float32], Tensor[(4, 14, 11), float64], Tensor[(616), float64]) {
  %465 = cast(%var_2526, dtype="float32") /* ty=Tensor[(7, 1, 15), float32] */;
  %466 = cast(%var_2530, dtype="float64") /* ty=Tensor[(864), float64] */;
  %467 = reshape(%466, newshape=[8, 9, 12]) /* ty=Tensor[(8, 9, 12), float64] */;
  %468 = @func_1961(%467) /* ty=(Tensor[(8, 9, 12), float64], Tensor[(1, 11, 9), int8], Tensor[(1, 99), int8]) */;
  %469 = cast(%var_2542, dtype="float32") /* ty=Tensor[(864), float32] */;
  %470 = shape_of(%var_2530, dtype="int32") /* ty=Tensor[(1), int32] */;
  %471 = cast(%var_2530, dtype="float32") /* ty=Tensor[(864), float32] */;
  %472 = dyn.reshape(%469, %470, newshape=[]) /* ty=Tensor[(?), float32] */;
  %473 = cast(meta[relay.Constant][38] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %474 = reshape(%473, newshape=[4, 14, 11]) /* ty=Tensor[(4, 14, 11), float64] */;
  %475 = @func_558(%474) /* ty=(Tensor[(4, 14, 11), float64], Tensor[(11, 2, 4), float64], Tensor[(88, 1), float64]) */;
  %476 = cosh(%465) /* ty=Tensor[(7, 1, 15), float32] */;
  %477 = %468.2;
  %478 = mod(%471, %472) /* ty=Tensor[(864), float32] */;
  %479 = %475.0;
  (%476, %477, %478, %479, meta[relay.Constant][38] /* ty=Tensor[(616), float64] */)
}

def @func_9700(%var_9689: uint32) -> (Tensor[(8, 3, 3), float32], uint32, uint32) {
  %480 = @func_9123() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %481 = %480.0;
  %482 = cast(%481, dtype="float32") /* ty=Tensor[(8, 3, 3), float32] */;
  %483 = cast(%var_9689, dtype="uint32") /* ty=uint32 */;
  %484 = reshape(%483, newshape=[]) /* ty=uint32 */;
  %485 = @func_9590(%484) /* ty=(Tensor[(8, 3, 3), float32], Tensor[(6, 13, 5), bool], uint32) */;
  %486 = cosh(%482) /* ty=Tensor[(8, 3, 3), float32] */;
  %487 = %485.2;
  (%486, %487, %var_9689)
}

def @func_10894() -> (Tensor[(8, 3, 3), float32], Tensor[(8, 9, 12), float64], Tensor[(864), float64]) {
  %488 = @func_8639() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %489 = cast(meta[relay.Constant][39] /* ty=Tensor[(864), float64] */, dtype="float64") /* ty=Tensor[(864), float64] */;
  %490 = reshape(%489, newshape=[8, 9, 12]) /* ty=Tensor[(8, 9, 12), float64] */;
  %491 = @func_1961(%490) /* ty=(Tensor[(8, 9, 12), float64], Tensor[(1, 11, 9), int8], Tensor[(1, 99), int8]) */;
  %492 = %488.0;
  %493 = %491.0;
  (%492, %493, meta[relay.Constant][39] /* ty=Tensor[(864), float64] */)
}

def @func_10466() -> (Tensor[(7, 2, 5), float32], Tensor[(70), float32], Tensor[(8, 3, 3), float64]) {
  %494 = cast(meta[relay.Constant][40] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
  %495 = reshape(%494, newshape=[7, 2, 5]) /* ty=Tensor[(7, 2, 5), float32] */;
  %496 = @func_8681() /* ty=Tensor[(8, 3, 3), float32] */;
  %497 = cast(%496, dtype="float64") /* ty=Tensor[(8, 3, 3), float64] */;
  %498 = asinh(%497) /* ty=Tensor[(8, 3, 3), float64] */;
  %499 = cast(%498, dtype="float64") /* ty=Tensor[(8, 3, 3), float64] */;
  %500 = @func_7739(%495) /* ty=Tensor[(7, 2, 5), float32] */;
  %501 = acos(%499) /* ty=Tensor[(8, 3, 3), float64] */;
  (%500, meta[relay.Constant][40] /* ty=Tensor[(70), float32] */, %501)
}

def @func_11531(%var_11528: Tensor[(286), float64]) -> (Tensor[(8, 3, 3), float32], Tensor[(98), uint64], Tensor[(6, 78), bool], Tensor[(2, 11, 13), float64], Tensor[(286), float64]) {
  %502 = cast(meta[relay.Constant][41] /* ty=Tensor[(98), uint64] */, dtype="uint64") /* ty=Tensor[(98), uint64] */;
  %503 = cast(meta[relay.Constant][42] /* ty=Tensor[(234, 2), float32] */, dtype="float32") /* ty=Tensor[(234, 2), float32] */;
  %504 = reshape(%502, newshape=[2, 7, 7]) /* ty=Tensor[(2, 7, 7), uint64] */;
  %505 = reshape(%503, newshape=[6, 78]) /* ty=Tensor[(6, 78), float32] */;
  %506 = @func_11289(%504, %505) /* ty=(Tensor[(2, 7, 7), uint64], Tensor[(4, 9, 13), float32], Tensor[(6, 78), float32]) */;
  %507 = %506.2;
  %508 = cast(%507, dtype="float32") /* ty=Tensor[(6, 78), float32] */;
  %509 = asinh(%508) /* ty=Tensor[(6, 78), float32] */;
  %510 = cast(meta[relay.Constant][42] /* ty=Tensor[(234, 2), float32] */, dtype="bool") /* ty=Tensor[(234, 2), bool] */;
  %511 = shape_of(%509, dtype="int32") /* ty=Tensor[(2), int32] */;
  %512 = cast(%509, dtype="bool") /* ty=Tensor[(6, 78), bool] */;
  %513 = dyn.reshape(%510, %511, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %514 = cast(%var_11528, dtype="float64") /* ty=Tensor[(286), float64] */;
  %515 = reshape(%514, newshape=[2, 11, 13]) /* ty=Tensor[(2, 11, 13), float64] */;
  %516 = @func_8681() /* ty=Tensor[(8, 3, 3), float32] */;
  %517 = equal(%512, %513) /* ty=Tensor[(6, 78), bool] */;
  %518 = @func_2269(%515) /* ty=Tensor[(2, 11, 13), float64] */;
  (%516, meta[relay.Constant][41] /* ty=Tensor[(98), uint64] */, %517, %518, %var_11528)
}

def @func_558(%var_543: Tensor[(4, 14, 11), float64]) -> (Tensor[(4, 14, 11), float64], Tensor[(11, 2, 4), float64], Tensor[(88, 1), float64]) {
  %519 = cast(%var_543, dtype="float64") /* ty=Tensor[(4, 14, 11), float64] */;
  %520 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(4, 14, 11), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %521 = cast(meta[relay.Constant][43] /* ty=Tensor[(4, 14, 11), float64] */, dtype="float64") /* ty=Tensor[(4, 14, 11), float64] */;
  %522 = dyn.reshape(%519, %520, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %523 = cast(meta[relay.Constant][44] /* ty=Tensor[(88, 1), float64] */, dtype="float64") /* ty=Tensor[(88, 1), float64] */;
  %524 = reshape(%523, newshape=[11, 2, 4]) /* ty=Tensor[(11, 2, 4), float64] */;
  %525 = @func_34(%524) /* ty=(Tensor[(11, 2, 4), bool], Tensor[(11, 2, 4), float64]) */;
  %526 = divide(%521, %522) /* ty=Tensor[(4, 14, 11), float64] */;
  %527 = %525.1;
  (%526, %527, meta[relay.Constant][44] /* ty=Tensor[(88, 1), float64] */)
}

def @func_9654(%var_9638: Tensor[(7, 12, 13), float64], %var_9643: Tensor[(7, 12, 13), float64]) -> (Tensor[(7, 12, 13), int8],) {
  %528 = cast(%var_9638, dtype="float64") /* ty=Tensor[(7, 12, 13), float64] */;
  %529 = log(%528) /* ty=Tensor[(7, 12, 13), float64] */;
  %530 = cast(%var_9643, dtype="int8") /* ty=Tensor[(7, 12, 13), int8] */;
  %531 = shape_of(%529, dtype="int32") /* ty=Tensor[(3), int32] */;
  %532 = cast(%529, dtype="int8") /* ty=Tensor[(7, 12, 13), int8] */;
  %533 = dyn.reshape(%530, %531, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %534 = subtract(%532, %533) /* ty=Tensor[(7, 12, 13), int8] */;
  (%534,)
}

def @func_8717() -> (Tensor[(8, 3, 3), float64],) {
  %535 = @func_8681() /* ty=Tensor[(8, 3, 3), float32] */;
  %536 = cast(meta[relay.Constant][45] /* ty=Tensor[(8, 3, 3), float32] */, dtype="float64") /* ty=Tensor[(8, 3, 3), float64] */;
  %537 = shape_of(%535, dtype="int32") /* ty=Tensor[(3), int32] */;
  %538 = cast(%535, dtype="float64") /* ty=Tensor[(8, 3, 3), float64] */;
  %539 = dyn.reshape(%536, %537, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %540 = floor_mod(%538, %539) /* ty=Tensor[(8, 3, 3), float64] */;
  (%540,)
}

def @func_10330(%var_10315: Tensor[(8, 3, 3), float32], %var_10321: Tensor[(616), float64]) -> (Tensor[(8, 3, 3), bool], Tensor[(4, 14, 11), float64], Tensor[(616), float64]) {
  %541 = @func_9123() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %542 = %541.0;
  %543 = cast(%var_10315, dtype="bool") /* ty=Tensor[(8, 3, 3), bool] */;
  %544 = shape_of(%542, dtype="int32") /* ty=Tensor[(3), int32] */;
  %545 = cast(%542, dtype="bool") /* ty=Tensor[(8, 3, 3), bool] */;
  %546 = dyn.reshape(%543, %544, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %547 = cast(%var_10321, dtype="float64") /* ty=Tensor[(616), float64] */;
  %548 = reshape(%547, newshape=[4, 14, 11]) /* ty=Tensor[(4, 14, 11), float64] */;
  %549 = @func_558(%548) /* ty=(Tensor[(4, 14, 11), float64], Tensor[(11, 2, 4), float64], Tensor[(88, 1), float64]) */;
  %550 = logical_and(%545, %546) /* ty=Tensor[(8, 3, 3), bool] */;
  %551 = %549.0;
  (%550, %551, %var_10321)
}

def @func_9359(%var_9336: Tensor[(8, 3, 3), float32]) -> (Tensor[(8, 3, 3), uint16], Tensor[(112), int64], uint8, Tensor[(1152), uint8], Tensor[(1, 11, 9), int8], Tensor[(99), int8]) {
  %552 = @func_8639() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %553 = %552.0;
  %554 = cast(%var_9336, dtype="uint16") /* ty=Tensor[(8, 3, 3), uint16] */;
  %555 = shape_of(%553, dtype="int32") /* ty=Tensor[(3), int32] */;
  %556 = cast(%553, dtype="uint16") /* ty=Tensor[(8, 3, 3), uint16] */;
  %557 = dyn.reshape(%554, %555, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %558 = cast(meta[relay.Constant][46] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %559 = cast(meta[relay.Constant][47] /* ty=Tensor[(1152), uint8] */, dtype="uint8") /* ty=Tensor[(1152), uint8] */;
  %560 = reshape(%558, newshape=[]) /* ty=uint8 */;
  %561 = reshape(%559, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), uint8] */;
  %562 = @func_7071(%560, %561) /* ty=(Tensor[(16, 6, 12), uint8], Tensor[(8, 2, 7), int64], Tensor[(112), int64]) */;
  %563 = cast(meta[relay.Constant][48] /* ty=Tensor[(99), int8] */, dtype="int8") /* ty=Tensor[(99), int8] */;
  %564 = reshape(%563, newshape=[1, 11, 9]) /* ty=Tensor[(1, 11, 9), int8] */;
  %565 = bitwise_and(%556, %557) /* ty=Tensor[(8, 3, 3), uint16] */;
  %566 = %562.2;
  %567 = @func_1876(%564) /* ty=Tensor[(1, 11, 9), int8] */;
  (%565, %566, meta[relay.Constant][46] /* ty=uint8 */, meta[relay.Constant][47] /* ty=Tensor[(1152), uint8] */, %567, meta[relay.Constant][48] /* ty=Tensor[(99), int8] */)
}

def @func_3177(%var_3152: Tensor[(16, 9, 1), float64]) -> (Tensor[(16, 9, 1), float64], Tensor[(14, 15, 7), float64], Tensor[(1470), float64], Tensor[(14, 15, 7), float64]) {
  %568 = cast(%var_3152, dtype="float64") /* ty=Tensor[(16, 9, 1), float64] */;
  %569 = cast(meta[relay.Constant][49] /* ty=Tensor[(1470), float64] */, dtype="float64") /* ty=Tensor[(1470), float64] */;
  %570 = reshape(%569, newshape=[14, 15, 7]) /* ty=Tensor[(14, 15, 7), float64] */;
  %571 = cast(meta[relay.Constant][49] /* ty=Tensor[(1470), float64] */, dtype="float64") /* ty=Tensor[(1470), float64] */;
  %572 = reshape(%571, newshape=[14, 15, 7]) /* ty=Tensor[(14, 15, 7), float64] */;
  %573 = sigmoid(%568) /* ty=Tensor[(16, 9, 1), float64] */;
  %574 = @func_2922(%570) /* ty=Tensor[(14, 15, 7), float64] */;
  %575 = @func_2922(%572) /* ty=Tensor[(14, 15, 7), float64] */;
  (%573, %574, meta[relay.Constant][49] /* ty=Tensor[(1470), float64] */, %575)
}

def @func_9626(%var_9606: Tensor[(864), float64]) -> (Tensor[(8, 3, 3), float32], uint32, uint32, Tensor[(105), float32], Tensor[(864), float64], Tensor[(?, 99), bool]) {
  %576 = @func_9135() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %577 = cast(meta[relay.Constant][50] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %578 = reshape(%577, newshape=[]) /* ty=uint32 */;
  %579 = @func_9590(%578) /* ty=(Tensor[(8, 3, 3), float32], Tensor[(6, 13, 5), bool], uint32) */;
  %580 = cast(meta[relay.Constant][51] /* ty=Tensor[(105), float32] */, dtype="float32") /* ty=Tensor[(105), float32] */;
  %581 = cast(%var_9606, dtype="float64") /* ty=Tensor[(864), float64] */;
  %582 = cast(%var_9606, dtype="float64") /* ty=Tensor[(864), float64] */;
  %583 = reshape(%580, newshape=[7, 1, 15]) /* ty=Tensor[(7, 1, 15), float32] */;
  %584 = reshape(%581, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %585 = reshape(%582, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %586 = @func_2550(%583, %584, %585) /* ty=(Tensor[(7, 1, 15), float32], Tensor[(1, 99), int8], Tensor[(864), float32], Tensor[(4, 14, 11), float64], Tensor[(616), float64]) */;
  %587 = %586.1;
  %588 = cast(%587, dtype="float32") /* ty=Tensor[(1, 99), float32] */;
  %589 = sinh(%588) /* ty=Tensor[(1, 99), float32] */;
  %590 = cast(%587, dtype="bool") /* ty=Tensor[(1, 99), bool] */;
  %591 = shape_of(%589, dtype="int32") /* ty=Tensor[(2), int32] */;
  %592 = cast(%589, dtype="bool") /* ty=Tensor[(1, 99), bool] */;
  %593 = dyn.reshape(%590, %591, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %594 = %576.0;
  %595 = %579.2;
  %596 = logical_or(%592, %593) /* ty=Tensor[(?, 99), bool] */;
  (%594, %595, meta[relay.Constant][50] /* ty=uint32 */, meta[relay.Constant][51] /* ty=Tensor[(105), float32] */, %var_9606, %596)
}

def @func_4089(%var_4083: Tensor[(6, 13, 15), uint32], %var_4084: Tensor[(6, 13, 15), uint32]) -> Tensor[(6, 13, 15), bool] {
  %597 = cast(%var_4084, dtype="bool") /* ty=Tensor[(6, 13, 15), bool] */;
  %598 = shape_of(%var_4083, dtype="int32") /* ty=Tensor[(3), int32] */;
  %599 = cast(%var_4083, dtype="bool") /* ty=Tensor[(6, 13, 15), bool] */;
  %600 = dyn.reshape(%597, %598, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%599, %600) /* ty=Tensor[(6, 13, 15), bool] */
}

def @func_7194(%var_7145: Tensor[(1, 3, 5), float64], %var_7168: Tensor[(600), uint8]) -> (Tensor[(?, 3, 5), bool], Tensor[(15, 4, 10), bool], Tensor[(600), uint8], Tensor[(8, 7, 9), float32], Tensor[(504, 1), float32]) {
  %601 = cast(8.59185f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %602 = cast(%var_7145, dtype="float64") /* ty=Tensor[(1, 3, 5), float64] */;
  %603 = power(%601, %602) /* ty=Tensor[(1, 3, 5), float64] */;
  %604 = cast(%603, dtype="bool") /* ty=Tensor[(1, 3, 5), bool] */;
  %605 = shape_of(%var_7145, dtype="int32") /* ty=Tensor[(3), int32] */;
  %606 = cast(%var_7145, dtype="bool") /* ty=Tensor[(1, 3, 5), bool] */;
  %607 = dyn.reshape(%604, %605, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %608 = cast(%var_7168, dtype="uint8") /* ty=Tensor[(600), uint8] */;
  %609 = reshape(%608, newshape=[15, 4, 10]) /* ty=Tensor[(15, 4, 10), uint8] */;
  %610 = @func_167(%609) /* ty=(Tensor[(15, 4, 10), bool], Tensor[(11, 2, 4), bool], Tensor[(44, 2), float64]) */;
  %611 = cast(meta[relay.Constant][52] /* ty=Tensor[(504, 1), float32] */, dtype="float32") /* ty=Tensor[(504, 1), float32] */;
  %612 = reshape(%611, newshape=[8, 7, 9]) /* ty=Tensor[(8, 7, 9), float32] */;
  %613 = less(%606, %607) /* ty=Tensor[(?, 3, 5), bool] */;
  %614 = %610.0;
  %615 = @func_3598(%612) /* ty=Tensor[(8, 7, 9), float32] */;
  (%613, %614, %var_7168, %615, meta[relay.Constant][52] /* ty=Tensor[(504, 1), float32] */)
}

def @func_9123() -> (Tensor[(8, 3, 3), float32],) {
  %616 = @func_8639() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %617 = %616.0;
  (%617,)
}

def @func_10003() -> Tensor[(8, 3, 3), float32] {
  %618 = @func_9670() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %618.0
}

def @func_11403() -> (Tensor[(8, 3, 3), float32],) {
  %619 = @func_8639() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %620 = %619.0;
  (%620,)
}

def @func_12297() -> (Tensor[(8, 3, 3), float32],) {
  %621 = @func_9123() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %622 = %621.0;
  (%622,)
}

def @func_1450(%var_1430: Tensor[(8, 2, 7), int64], %var_1431: Tensor[(8, 2, 7), int64]) -> Tensor[(8, 2, 7), int64] {
  %623 = cast(%var_1431, dtype="int64") /* ty=Tensor[(8, 2, 7), int64] */;
  %624 = shape_of(%var_1430, dtype="int32") /* ty=Tensor[(3), int32] */;
  %625 = cast(%var_1430, dtype="int64") /* ty=Tensor[(8, 2, 7), int64] */;
  %626 = dyn.reshape(%623, %624, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  bitwise_or(%625, %626) /* ty=Tensor[(8, 2, 7), int64] */
}

def @func_9438(%var_9419: Tensor[(16, 16, 5), float32]) -> (Tensor[(16, 16, 5), float32],) {
  %627 = cast(%var_9419, dtype="float32") /* ty=Tensor[(16, 16, 5), float32] */;
  %628 = cos(%627) /* ty=Tensor[(16, 16, 5), float32] */;
  (%628,)
}

def @func_11091() -> (Tensor[(8, 3, 3), float32], Tensor[(6, 13, 5), bool], Tensor[(1008), float32], uint32) {
  %629 = @func_9123() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %630 = cast(meta[relay.Constant][53] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %631 = cast(meta[relay.Constant][54] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %632 = reshape(%630, newshape=[8, 14, 9]) /* ty=Tensor[(8, 14, 9), float32] */;
  %633 = reshape(%631, newshape=[]) /* ty=uint32 */;
  %634 = @func_4277(%632, %633) /* ty=(Tensor[(8, 14, 9), float32], Tensor[(6, 13, 5), bool], uint32) */;
  %635 = %629.0;
  %636 = %634.1;
  (%635, %636, meta[relay.Constant][53] /* ty=Tensor[(1008), float32] */, meta[relay.Constant][54] /* ty=uint32 */)
}

def @func_9866(%var_9861: uint32) -> (Tensor[(8, 3, 3), float64], Tensor[(8, 7, 9), float64], Tensor[(1, 504), float64], Tensor[(6, 13, 5), bool], uint32) {
  %637 = @func_9271() /* ty=(Tensor[(1, 11, 9), int8], Tensor[(99), int8], Tensor[(8, 3, 3), float64]) */;
  %638 = cast(meta[relay.Constant][55] /* ty=Tensor[(1, 504), float64] */, dtype="float64") /* ty=Tensor[(1, 504), float64] */;
  %639 = reshape(%638, newshape=[8, 7, 9]) /* ty=Tensor[(8, 7, 9), float64] */;
  %640 = cast(%var_9861, dtype="uint32") /* ty=uint32 */;
  %641 = reshape(%640, newshape=[]) /* ty=uint32 */;
  %642 = %637.2;
  %643 = @func_3648(%639) /* ty=Tensor[(8, 7, 9), float64] */;
  %644 = @func_1402(%641) /* ty=Tensor[(6, 13, 5), bool] */;
  (%642, %643, meta[relay.Constant][55] /* ty=Tensor[(1, 504), float64] */, %644, %var_9861)
}

def @func_12627(%var_12615: Tensor[(1008), float32]) -> (Tensor[(1, 11, 9), int8], Tensor[(8, 9, 12), float64], Tensor[(14, 105), float64], Tensor[(1008), float32], Tensor[(1170), uint32]) {
  %645 = @func_9271() /* ty=(Tensor[(1, 11, 9), int8], Tensor[(99), int8], Tensor[(8, 3, 3), float64]) */;
  %646 = cast(meta[relay.Constant][56] /* ty=Tensor[(14, 105), float64] */, dtype="float64") /* ty=Tensor[(14, 105), float64] */;
  %647 = cast(meta[relay.Constant][56] /* ty=Tensor[(14, 105), float64] */, dtype="float64") /* ty=Tensor[(14, 105), float64] */;
  %648 = cast(%var_12615, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %649 = cast(meta[relay.Constant][57] /* ty=Tensor[(1170), uint32] */, dtype="uint32") /* ty=Tensor[(1170), uint32] */;
  %650 = cast(meta[relay.Constant][56] /* ty=Tensor[(14, 105), float64] */, dtype="uint8") /* ty=Tensor[(14, 105), uint8] */;
  %651 = reshape(%646, newshape=[14, 15, 7]) /* ty=Tensor[(14, 15, 7), float64] */;
  %652 = reshape(%647, newshape=[14, 15, 7]) /* ty=Tensor[(14, 15, 7), float64] */;
  %653 = reshape(%648, newshape=[1008]) /* ty=Tensor[(1008), float32] */;
  %654 = reshape(%649, newshape=[130, 9]) /* ty=Tensor[(130, 9), uint32] */;
  %655 = reshape(%650, newshape=[14, 15, 7]) /* ty=Tensor[(14, 15, 7), uint8] */;
  %656 = @func_9077(%651, %652, %653, %654, %655) /* ty=(Tensor[(8, 3, 3), float32], Tensor[(4, 1, 6), float64], Tensor[(24), float64], Tensor[(3, 10, 16), int32], Tensor[(88, 20), float32], Tensor[(14, 15, 7), float64], Tensor[(14, 15, 7), uint32], Tensor[(1, 1008), float32], int32, Tensor[(16, 1), int32], Tensor[(1008), float32], Tensor[(8, 9, 12), float64], Tensor[(864), float64], Tensor[(6, 13, 15), bool], Tensor[(130, 9), uint32], Tensor[(8, 3, 3), float64], Tensor[(8, 7, 9), float64], Tensor[(504), float64], Tensor[(14, 15, 7), float64], Tensor[(8, 3, 3), float64], Tensor[(6, 13, 5), bool], Tensor[(8, 3, 3), float64], Tensor[(3, 10, 16), int32]) */;
  %657 = %645.0;
  %658 = %656.11;
  (%657, %658, meta[relay.Constant][56] /* ty=Tensor[(14, 105), float64] */, %var_12615, meta[relay.Constant][57] /* ty=Tensor[(1170), uint32] */)
}

def @func_11211() -> Tensor[(8, 7, 9), float32] {
  %659 = @func_11129() /* ty=(Tensor[(8, 3, 3), float32], Tensor[(8, 7, 9), float32], Tensor[(504), float32]) */;
  %659.1
}

def @func_11129() -> (Tensor[(8, 3, 3), float32], Tensor[(8, 7, 9), float32], Tensor[(504), float32]) {
  %660 = @func_9135() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %661 = cast(meta[relay.Constant][58] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %662 = reshape(%661, newshape=[8, 7, 9]) /* ty=Tensor[(8, 7, 9), float32] */;
  %663 = %660.0;
  %664 = @func_3598(%662) /* ty=Tensor[(8, 7, 9), float32] */;
  (%663, %664, meta[relay.Constant][58] /* ty=Tensor[(504), float32] */)
}

def @func_12357() -> Tensor[(7, 2, 5), float32] {
  %665 = @func_10466() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(70), float32], Tensor[(8, 3, 3), float64]) */;
  %665.0
}

def @func_12735(%var_12728: Tensor[(72), float32]) -> (Tensor[(1008), float32], Tensor[(8, 3, 3), int64], Tensor[(72), float32], Tensor[(6, 78), bool], Tensor[(286), float64]) {
  %666 = @func_11091() /* ty=(Tensor[(8, 3, 3), float32], Tensor[(6, 13, 5), bool], Tensor[(1008), float32], uint32) */;
  %667 = cast(%var_12728, dtype="float32") /* ty=Tensor[(72), float32] */;
  %668 = reshape(%667, newshape=[8, 3, 3]) /* ty=Tensor[(8, 3, 3), float32] */;
  %669 = cast(meta[relay.Constant][59] /* ty=Tensor[(286), float64] */, dtype="float64") /* ty=Tensor[(286), float64] */;
  %670 = reshape(%669, newshape=[286]) /* ty=Tensor[(286), float64] */;
  %671 = @func_11531(%670) /* ty=(Tensor[(8, 3, 3), float32], Tensor[(98), uint64], Tensor[(6, 78), bool], Tensor[(2, 11, 13), float64], Tensor[(286), float64]) */;
  %672 = %666.2;
  %673 = @func_12565(%668) /* ty=Tensor[(8, 3, 3), int64] */;
  %674 = %671.2;
  (%672, %673, %var_12728, %674, meta[relay.Constant][59] /* ty=Tensor[(286), float64] */)
}

def @func_12844() -> (Tensor[(8, 3, 3), float32], Tensor[(504), float32]) {
  %675 = @func_8681() /* ty=Tensor[(8, 3, 3), float32] */;
  %676 = @func_11773() /* ty=Tensor[(504), float32] */;
  (%675, %676)
}

def @func_12502(%var_12470: Tensor[(84), float32], %var_12471: uint32, %var_12472: Tensor[(600), uint8]) -> (Tensor[(7, 2, 5), float32], Tensor[(11, 2, 4), bool], Tensor[(84), float32], uint32, Tensor[(600), uint8]) {
  %677 = @func_10466() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(70), float32], Tensor[(8, 3, 3), float64]) */;
  %678 = cast(%var_12470, dtype="float32") /* ty=Tensor[(84), float32] */;
  %679 = cast(%var_12471, dtype="uint32") /* ty=uint32 */;
  %680 = cast(%var_12472, dtype="uint8") /* ty=Tensor[(600), uint8] */;
  %681 = reshape(%678, newshape=[6, 14, 1]) /* ty=Tensor[(6, 14, 1), float32] */;
  %682 = reshape(%679, newshape=[]) /* ty=uint32 */;
  %683 = reshape(%680, newshape=[600]) /* ty=Tensor[(600), uint8] */;
  %684 = @func_1633(%681, %682, %683) /* ty=(Tensor[(6, 13, 5), bool], Tensor[(6, 13, 5), bool], Tensor[(11, 2, 4), float64], Tensor[(616), float64], Tensor[(11, 2, 4), int32], Tensor[(6, 14, 1), float64], Tensor[(11, 2, 4), bool], Tensor[(600), uint8]) */;
  %685 = %677.0;
  %686 = %684.6;
  (%685, %686, %var_12470, %var_12471, %var_12472)
}

def @func_12990(%var_12957: int64, %var_12958: Tensor[(4, 11, 7), int64]) -> (Tensor[(4, 11, 7), int64], Tensor[(8, 3, 3), int64], Tensor[(72), float32]) {
  %687 = cast(%var_12957, dtype="int64") /* ty=int64 */;
  %688 = cast(%var_12958, dtype="int64") /* ty=Tensor[(4, 11, 7), int64] */;
  %689 = cast(meta[relay.Constant][60] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %690 = reshape(%689, newshape=[8, 3, 3]) /* ty=Tensor[(8, 3, 3), float32] */;
  %691 = bitwise_and(%687, %688) /* ty=Tensor[(4, 11, 7), int64] */;
  %692 = @func_12565(%690) /* ty=Tensor[(8, 3, 3), int64] */;
  (%691, %692, meta[relay.Constant][60] /* ty=Tensor[(72), float32] */)
}

def @func_8160(%var_8151: Tensor[(4, 1, 6), float64]) -> (Tensor[(4, 1, 6), float64],) {
  %693 = cast(%var_8151, dtype="float64") /* ty=Tensor[(4, 1, 6), float64] */;
  %694 = log(%693) /* ty=Tensor[(4, 1, 6), float64] */;
  (%694,)
}

def @func_13012() -> (Tensor[(8, 3, 3), float32],) {
  %695 = @func_12008() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %696 = %695.0;
  (%696,)
}

def @func_13085() -> Tensor[(8, 3, 3), float32] {
  %697 = @func_8639() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %697.0
}

def @func_13071(%var_13036: float32, %var_13037: Tensor[(16, 8, 1), float32]) -> (Tensor[(16, 8, ?), bool],) {
  %698 = cast(%var_13036, dtype="bool") /* ty=bool */;
  %699 = cast(%var_13037, dtype="bool") /* ty=Tensor[(16, 8, 1), bool] */;
  %700 = less_equal(%698, %699) /* ty=Tensor[(16, 8, 1), bool] */;
  %701 = cast(%var_13037, dtype="bool") /* ty=Tensor[(16, 8, 1), bool] */;
  %702 = shape_of(%700, dtype="int32") /* ty=Tensor[(3), int32] */;
  %703 = cast(%700, dtype="bool") /* ty=Tensor[(16, 8, 1), bool] */;
  %704 = dyn.reshape(%701, %702, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %705 = logical_and(%703, %704) /* ty=Tensor[(16, 8, ?), bool] */;
  (%705,)
}

def @func_11717(%var_11680: uint8, %var_11681: Tensor[(4, 288), uint8], %var_11699: Tensor[(8, 3, 3), float32], %var_11711: Tensor[(864), float64]) -> (Tensor[(8, 2, 7), int64], uint8, Tensor[(4, 288), uint8], Tensor[(8, 3, 3), bool], Tensor[(4, 14, 11), float64], Tensor[(21, 5), float32], Tensor[(864), float64]) {
  %706 = cast(%var_11680, dtype="uint8") /* ty=uint8 */;
  %707 = cast(%var_11681, dtype="uint8") /* ty=Tensor[(4, 288), uint8] */;
  %708 = reshape(%706, newshape=[]) /* ty=uint8 */;
  %709 = reshape(%707, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), uint8] */;
  %710 = @func_7071(%708, %709) /* ty=(Tensor[(16, 6, 12), uint8], Tensor[(8, 2, 7), int64], Tensor[(112), int64]) */;
  %711 = @func_10003() /* ty=Tensor[(8, 3, 3), float32] */;
  %712 = cast(%var_11699, dtype="bool") /* ty=Tensor[(8, 3, 3), bool] */;
  %713 = shape_of(%711, dtype="int32") /* ty=Tensor[(3), int32] */;
  %714 = cast(%711, dtype="bool") /* ty=Tensor[(8, 3, 3), bool] */;
  %715 = dyn.reshape(%712, %713, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %716 = cast(meta[relay.Constant][61] /* ty=Tensor[(21, 5), float32] */, dtype="float32") /* ty=Tensor[(21, 5), float32] */;
  %717 = cast(%var_11711, dtype="float64") /* ty=Tensor[(864), float64] */;
  %718 = cast(%var_11711, dtype="float64") /* ty=Tensor[(864), float64] */;
  %719 = reshape(%716, newshape=[7, 1, 15]) /* ty=Tensor[(7, 1, 15), float32] */;
  %720 = reshape(%717, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %721 = reshape(%718, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %722 = @func_2550(%719, %720, %721) /* ty=(Tensor[(7, 1, 15), float32], Tensor[(1, 99), int8], Tensor[(864), float32], Tensor[(4, 14, 11), float64], Tensor[(616), float64]) */;
  %723 = %710.1;
  %724 = greater(%714, %715) /* ty=Tensor[(8, 3, 3), bool] */;
  %725 = %722.3;
  (%723, %var_11680, %var_11681, %724, %725, meta[relay.Constant][61] /* ty=Tensor[(21, 5), float32] */, %var_11711)
}

def @func_9399(%var_9384: float32, %var_9385: Tensor[(1, 10, 10), float32]) -> (Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), int16]) {
  %726 = cast(%var_9384, dtype="float32") /* ty=float32 */;
  %727 = cast(%var_9385, dtype="float32") /* ty=Tensor[(1, 10, 10), float32] */;
  %728 = cast(%var_9384, dtype="int16") /* ty=int16 */;
  %729 = cast(%var_9385, dtype="int16") /* ty=Tensor[(1, 10, 10), int16] */;
  %730 = floor_mod(%726, %727) /* ty=Tensor[(1, 10, 10), float32] */;
  %731 = multiply(%728, %729) /* ty=Tensor[(1, 10, 10), int16] */;
  (%730, %731)
}

def @func_10420() -> Tensor[(8, 3, 3), float32] {
  %732 = @func_9123() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %732.0
}

def @func_12910() -> (Tensor[(8, 3, 3), float32], Tensor[(9, 16, 7), float32], Tensor[(1008), float32]) {
  %733 = @func_12660() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %734 = cast(meta[relay.Constant][62] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %735 = reshape(%734, newshape=[9, 16, 7]) /* ty=Tensor[(9, 16, 7), float32] */;
  %736 = @func_10246(%735) /* ty=(Tensor[(9, 16, 7), float32],) */;
  %737 = %733.0;
  %738 = %736.0;
  (%737, %738, meta[relay.Constant][62] /* ty=Tensor[(1008), float32] */)
}

def @func_1633(%var_1533: Tensor[(6, 14, 1), float32], %var_1551: uint32, %var_1629: Tensor[(600), uint8]) -> (Tensor[(6, 13, 5), bool], Tensor[(6, 13, 5), bool], Tensor[(11, 2, 4), float64], Tensor[(616), float64], Tensor[(11, 2, 4), int32], Tensor[(6, 14, 1), float64], Tensor[(11, 2, 4), bool], Tensor[(600), uint8]) {
  %739 = cast(%var_1551, dtype="uint32") /* ty=uint32 */;
  %740 = reshape(%739, newshape=[]) /* ty=uint32 */;
  %741 = cast(%var_1551, dtype="uint32") /* ty=uint32 */;
  %742 = reshape(%741, newshape=[]) /* ty=uint32 */;
  %743 = cast(meta[relay.Constant][63] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %744 = reshape(%743, newshape=[4, 14, 11]) /* ty=Tensor[(4, 14, 11), float64] */;
  %745 = @func_558(%744) /* ty=(Tensor[(4, 14, 11), float64], Tensor[(11, 2, 4), float64], Tensor[(88, 1), float64]) */;
  %746 = cast(meta[relay.Constant][63] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %747 = reshape(%746, newshape=[4, 14, 11]) /* ty=Tensor[(4, 14, 11), float64] */;
  %748 = @func_558(%747) /* ty=(Tensor[(4, 14, 11), float64], Tensor[(11, 2, 4), float64], Tensor[(88, 1), float64]) */;
  %749 = %748.1;
  %750 = cast(%var_1551, dtype="int32") /* ty=int32 */;
  %751 = cast(%749, dtype="int32") /* ty=Tensor[(11, 2, 4), int32] */;
  %752 = cast(%var_1533, dtype="float32") /* ty=Tensor[(6, 14, 1), float32] */;
  %753 = atanh(%752) /* ty=Tensor[(6, 14, 1), float32] */;
  %754 = cast(%753, dtype="float64") /* ty=Tensor[(6, 14, 1), float64] */;
  %755 = cast(%var_1629, dtype="uint8") /* ty=Tensor[(600), uint8] */;
  %756 = reshape(%755, newshape=[15, 4, 10]) /* ty=Tensor[(15, 4, 10), uint8] */;
  %757 = @func_167(%756) /* ty=(Tensor[(15, 4, 10), bool], Tensor[(11, 2, 4), bool], Tensor[(44, 2), float64]) */;
  %758 = @func_1402(%740) /* ty=Tensor[(6, 13, 5), bool] */;
  %759 = @func_1402(%742) /* ty=Tensor[(6, 13, 5), bool] */;
  %760 = %745.1;
  %761 = bitwise_xor(%750, %751) /* ty=Tensor[(11, 2, 4), int32] */;
  %762 = cos(%754) /* ty=Tensor[(6, 14, 1), float64] */;
  %763 = %757.1;
  (%758, %759, %760, meta[relay.Constant][63] /* ty=Tensor[(616), float64] */, %761, %762, %763, %var_1629)
}

def @func_6204(%var_6144: Tensor[(1, 1, 14), float64], %var_6174: Tensor[(96, 1), float64], %var_6183: Tensor[(286), float64]) -> (Tensor[(8, 7, 9), float32], Tensor[(504), float32], Tensor[(864), float64], Tensor[(2, 11, 13), float64], Tensor[(286), float64], Tensor[(1, 11, 9), int8], Tensor[(1, 96, 14), uint32]) {
  %764 = cast(%var_6174, dtype="float64") /* ty=Tensor[(96, 1), float64] */;
  %765 = cast(meta[relay.Constant][64] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %766 = cast(meta[relay.Constant][65] /* ty=Tensor[(864), float64] */, dtype="float64") /* ty=Tensor[(864), float64] */;
  %767 = reshape(%764, newshape=[8, 1, 12]) /* ty=Tensor[(8, 1, 12), float64] */;
  %768 = reshape(%765, newshape=[504]) /* ty=Tensor[(504), float32] */;
  %769 = reshape(%766, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %770 = @func_4857(%767, %768, %769) /* ty=(Tensor[(8, 11, 12), float64], Tensor[(8, 7, 9), float32], Tensor[(504), float32], Tensor[(1, 11, 9), int8], Tensor[(864), float64]) */;
  %771 = cast(%var_6183, dtype="float64") /* ty=Tensor[(286), float64] */;
  %772 = reshape(%771, newshape=[2, 11, 13]) /* ty=Tensor[(2, 11, 13), float64] */;
  %773 = cast(meta[relay.Constant][65] /* ty=Tensor[(864), float64] */, dtype="float64") /* ty=Tensor[(864), float64] */;
  %774 = reshape(%773, newshape=[8, 9, 12]) /* ty=Tensor[(8, 9, 12), float64] */;
  %775 = @func_1961(%774) /* ty=(Tensor[(8, 9, 12), float64], Tensor[(1, 11, 9), int8], Tensor[(1, 99), int8]) */;
  %776 = cast(%var_6144, dtype="float64") /* ty=Tensor[(1, 1, 14), float64] */;
  %777 = sinh(%776) /* ty=Tensor[(1, 1, 14), float64] */;
  %778 = cast(%777, dtype="float64") /* ty=Tensor[(1, 1, 14), float64] */;
  %779 = asin(%778) /* ty=Tensor[(1, 1, 14), float64] */;
  %780 = cast(%779, dtype="float64") /* ty=Tensor[(1, 1, 14), float64] */;
  %781 = sin(%780) /* ty=Tensor[(1, 1, 14), float64] */;
  %782 = cast(%781, dtype="uint32") /* ty=Tensor[(1, 1, 14), uint32] */;
  %783 = cast(%var_6174, dtype="uint32") /* ty=Tensor[(96, 1), uint32] */;
  %784 = %770.1;
  %785 = @func_2269(%772) /* ty=Tensor[(2, 11, 13), float64] */;
  %786 = %775.1;
  %787 = bitwise_xor(%782, %783) /* ty=Tensor[(1, 96, 14), uint32] */;
  (%784, meta[relay.Constant][64] /* ty=Tensor[(504), float32] */, meta[relay.Constant][65] /* ty=Tensor[(864), float64] */, %785, %var_6183, %786, %787)
}

def @func_10571(%var_10564: uint32) -> (Tensor[(8, 3, 3), float32], Tensor[(6, 13, 5), bool], uint32) {
  %788 = @func_8639() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %789 = cast(%var_10564, dtype="uint32") /* ty=uint32 */;
  %790 = reshape(%789, newshape=[]) /* ty=uint32 */;
  %791 = %788.0;
  %792 = @func_1402(%790) /* ty=Tensor[(6, 13, 5), bool] */;
  (%791, %792, %var_10564)
}

def @func_9135() -> (Tensor[(8, 3, 3), float32],) {
  %793 = @func_8681() /* ty=Tensor[(8, 3, 3), float32] */;
  (%793,)
}

def @func_12008() -> (Tensor[(8, 3, 3), float32],) {
  %794 = @func_10003() /* ty=Tensor[(8, 3, 3), float32] */;
  (%794,)
}

def @func_12387(%var_12369: uint8, %var_12370: Tensor[(1, 2, 7), uint8]) -> (Tensor[(1, 2, 7), uint8],) {
  %795 = cast(%var_12369, dtype="uint8") /* ty=uint8 */;
  %796 = cast(%var_12370, dtype="uint8") /* ty=Tensor[(1, 2, 7), uint8] */;
  %797 = right_shift(%795, %796) /* ty=Tensor[(1, 2, 7), uint8] */;
  (%797,)
}

def @func_11043(%var_11030: Tensor[(88, 16), float64], %var_11036: Tensor[(504), float32]) -> (Tensor[(8, 3, 3), float32], Tensor[(616), float64], Tensor[(15, 4, 10), bool], Tensor[(88, 16), bool], Tensor[(8, 7, 9), float32], Tensor[(504), float32]) {
  %798 = @func_9123() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %799 = @func_9154() /* ty=(Tensor[(8, 3, 3), float32], Tensor[(15, 4, 10), bool], Tensor[(600), uint8], Tensor[(8, 3, 3), float32]) */;
  %800 = cast(meta[relay.Constant][66] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %801 = reshape(%800, newshape=[4, 14, 11]) /* ty=Tensor[(4, 14, 11), float64] */;
  %802 = @func_558(%801) /* ty=(Tensor[(4, 14, 11), float64], Tensor[(11, 2, 4), float64], Tensor[(88, 1), float64]) */;
  %803 = %802.2;
  %804 = cast(%803, dtype="bool") /* ty=Tensor[(88, 1), bool] */;
  %805 = cast(%var_11030, dtype="bool") /* ty=Tensor[(88, 16), bool] */;
  %806 = cast(%var_11036, dtype="float32") /* ty=Tensor[(504), float32] */;
  %807 = reshape(%806, newshape=[8, 7, 9]) /* ty=Tensor[(8, 7, 9), float32] */;
  %808 = %798.0;
  %809 = %799.1;
  %810 = logical_and(%804, %805) /* ty=Tensor[(88, 16), bool] */;
  %811 = @func_3598(%807) /* ty=Tensor[(8, 7, 9), float32] */;
  (%808, meta[relay.Constant][66] /* ty=Tensor[(616), float64] */, %809, %810, %811, %var_11036)
}

def @func_7372(%var_7366: bool, %var_7367: Tensor[(9, 11, 14), bool]) -> (Tensor[(9, 11, 14), bool],) {
  %812 = cast(%var_7366, dtype="bool") /* ty=bool */;
  %813 = cast(%var_7367, dtype="bool") /* ty=Tensor[(9, 11, 14), bool] */;
  %814 = logical_or(%812, %813) /* ty=Tensor[(9, 11, 14), bool] */;
  (%814,)
}

def @func_10246(%var_10228: Tensor[(9, 16, 7), float32]) -> (Tensor[(9, 16, 7), float32],) {
  %815 = cast(%var_10228, dtype="float32") /* ty=Tensor[(9, 16, 7), float32] */;
  %816 = acosh(%815) /* ty=Tensor[(9, 16, 7), float32] */;
  (%816,)
}

def @func_12447() -> Tensor[(504), float32] {
  @func_11773() /* ty=Tensor[(504), float32] */
}

def @func_4277(%var_4270: Tensor[(8, 14, 9), float32], %var_4275: uint32) -> (Tensor[(8, 14, 9), float32], Tensor[(6, 13, 5), bool], uint32) {
  %817 = cast(%var_4270, dtype="float32") /* ty=Tensor[(8, 14, 9), float32] */;
  %818 = cast(%var_4275, dtype="uint32") /* ty=uint32 */;
  %819 = reshape(%818, newshape=[]) /* ty=uint32 */;
  %820 = log2(%817) /* ty=Tensor[(8, 14, 9), float32] */;
  %821 = @func_1402(%819) /* ty=Tensor[(6, 13, 5), bool] */;
  (%820, %821, %var_4275)
}

def @func_11773() -> Tensor[(504), float32] {
  %822 = @func_11129() /* ty=(Tensor[(8, 3, 3), float32], Tensor[(8, 7, 9), float32], Tensor[(504), float32]) */;
  %822.2
}

def @func_11977(%var_11969: uint32) -> (Tensor[(8, 3, 3), float32], Tensor[(84), float32], Tensor[(70), float32], Tensor[(117), bool], Tensor[(84), float32], uint32) {
  %823 = @func_10894() /* ty=(Tensor[(8, 3, 3), float32], Tensor[(8, 9, 12), float64], Tensor[(864), float64]) */;
  %824 = cast(meta[relay.Constant][67] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
  %825 = cast(meta[relay.Constant][68] /* ty=Tensor[(117), bool] */, dtype="bool") /* ty=Tensor[(117), bool] */;
  %826 = cast(meta[relay.Constant][69] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
  %827 = cast(%var_11969, dtype="uint32") /* ty=uint32 */;
  %828 = reshape(%824, newshape=[70]) /* ty=Tensor[(70), float32] */;
  %829 = reshape(%825, newshape=[117]) /* ty=Tensor[(117), bool] */;
  %830 = reshape(%826, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %831 = reshape(%827, newshape=[]) /* ty=uint32 */;
  %832 = @func_10543(%828, %829, %830, %831) /* ty=(Tensor[(8, 3, 3), float32], Tensor[(8, 3, 3), float64], Tensor[(7, 2, 5), float32], Tensor[(70), float32], Tensor[(600), uint8], Tensor[(117), bool], Tensor[(84), float32], uint32) */;
  %833 = %823.0;
  %834 = %832.6;
  (%833, %834, meta[relay.Constant][67] /* ty=Tensor[(70), float32] */, meta[relay.Constant][68] /* ty=Tensor[(117), bool] */, meta[relay.Constant][69] /* ty=Tensor[(84), float32] */, %var_11969)
}

def @func_12711() -> (Tensor[(8, 3, 3), float32],) {
  %835 = @func_10075() /* ty=(Tensor[(8, 3, 3), float32], Tensor[(8, 3, 3), float64]) */;
  %836 = %835.0;
  (%836,)
}

def @func_167(%var_153: Tensor[(15, 4, 10), uint8]) -> (Tensor[(15, 4, 10), bool], Tensor[(11, 2, 4), bool], Tensor[(44, 2), float64]) {
  %837 = cast(meta[relay.Constant][70] /* ty=Tensor[(15, 4, 10), uint8] */, dtype="bool") /* ty=Tensor[(15, 4, 10), bool] */;
  %838 = shape_of(%var_153, dtype="int32") /* ty=Tensor[(3), int32] */;
  %839 = cast(%var_153, dtype="bool") /* ty=Tensor[(15, 4, 10), bool] */;
  %840 = dyn.reshape(%837, %838, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %841 = cast(meta[relay.Constant][71] /* ty=Tensor[(44, 2), float64] */, dtype="float64") /* ty=Tensor[(44, 2), float64] */;
  %842 = reshape(%841, newshape=[11, 2, 4]) /* ty=Tensor[(11, 2, 4), float64] */;
  %843 = @func_34(%842) /* ty=(Tensor[(11, 2, 4), bool], Tensor[(11, 2, 4), float64]) */;
  %844 = equal(%839, %840) /* ty=Tensor[(15, 4, 10), bool] */;
  %845 = %843.0;
  (%844, %845, meta[relay.Constant][71] /* ty=Tensor[(44, 2), float64] */)
}

def @func_34(%var_16: Tensor[(11, 2, 4), float64]) -> (Tensor[(11, 2, 4), bool], Tensor[(11, 2, 4), float64]) {
  %846 = cast(-2.98854f64 /* ty=float64 */, dtype="bool") /* ty=bool */;
  %847 = cast(%var_16, dtype="bool") /* ty=Tensor[(11, 2, 4), bool] */;
  %848 = cast(-2.98854f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %849 = cast(%var_16, dtype="float64") /* ty=Tensor[(11, 2, 4), float64] */;
  %850 = less(%846, %847) /* ty=Tensor[(11, 2, 4), bool] */;
  %851 = floor_mod(%848, %849) /* ty=Tensor[(11, 2, 4), float64] */;
  (%850, %851)
}

def @main(%var_13115: Tensor[(504), float32]) -> (Tensor[(504), bool],) {
  %852 = @func_12447() /* ty=Tensor[(504), float32] */;
  %853 = cast(%var_13115, dtype="bool") /* ty=Tensor[(504), bool] */;
  %854 = shape_of(%852, dtype="int32") /* ty=Tensor[(1), int32] */;
  %855 = cast(%852, dtype="bool") /* ty=Tensor[(504), bool] */;
  %856 = dyn.reshape(%853, %854, newshape=[]) /* ty=Tensor[(?), bool] */;
  %857 = greater(%855, %856) /* ty=Tensor[(504), bool] */;
  (%857,)
}

def @func_11427() -> Tensor[(8, 3, 3), float64] {
  %858 = @func_11091() /* ty=(Tensor[(8, 3, 3), float32], Tensor[(6, 13, 5), bool], Tensor[(1008), float32], uint32) */;
  %859 = %858.0;
  %860 = cast(%859, dtype="float64") /* ty=Tensor[(8, 3, 3), float64] */;
  atan(%860) /* ty=Tensor[(8, 3, 3), float64] */
}

def @func_12430() -> Tensor[(8, 3, 3), float64] {
  @func_11427() /* ty=Tensor[(8, 3, 3), float64] */
}

def @func_9906() -> Tensor[(8, 3, 3), float64] {
  %861 = @func_8717() /* ty=(Tensor[(8, 3, 3), float64],) */;
  %861.0
}

def @func_9884(%var_9876: Tensor[(24, 6), float64]) -> (Tensor[(8, 3, 3), float64], Tensor[(14, 15, 7), float64], Tensor[(24, 6), float64]) {
  %862 = @func_8717() /* ty=(Tensor[(8, 3, 3), float64],) */;
  %863 = cast(%var_9876, dtype="float64") /* ty=Tensor[(24, 6), float64] */;
  %864 = reshape(%863, newshape=[16, 9, 1]) /* ty=Tensor[(16, 9, 1), float64] */;
  %865 = @func_3177(%864) /* ty=(Tensor[(16, 9, 1), float64], Tensor[(14, 15, 7), float64], Tensor[(1470), float64], Tensor[(14, 15, 7), float64]) */;
  %866 = %862.0;
  %867 = %865.3;
  (%866, %867, %var_9876)
}

def @func_9188(%var_9173: Tensor[(14), float64], %var_9174: Tensor[(1, 96), float64], %var_9175: Tensor[(286), float64], %var_9180: Tensor[(2, 96), float64]) -> (Tensor[(8, 3, 3), float32], Tensor[(8, 3, 3), float32], Tensor[(504), float32], Tensor[(14), float64], Tensor[(286), float64], Tensor[(2, 96), bool]) {
  %868 = @func_9135() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %869 = cast(%var_9173, dtype="float64") /* ty=Tensor[(14), float64] */;
  %870 = cast(%var_9174, dtype="float64") /* ty=Tensor[(1, 96), float64] */;
  %871 = cast(%var_9175, dtype="float64") /* ty=Tensor[(286), float64] */;
  %872 = reshape(%869, newshape=[1, 1, 14]) /* ty=Tensor[(1, 1, 14), float64] */;
  %873 = reshape(%870, newshape=[96, 1]) /* ty=Tensor[(96, 1), float64] */;
  %874 = reshape(%871, newshape=[286]) /* ty=Tensor[(286), float64] */;
  %875 = @func_6204(%872, %873, %874) /* ty=(Tensor[(8, 7, 9), float32], Tensor[(504), float32], Tensor[(864), float64], Tensor[(2, 11, 13), float64], Tensor[(286), float64], Tensor[(1, 11, 9), int8], Tensor[(1, 96, 14), uint32]) */;
  %876 = cast(%var_9174, dtype="bool") /* ty=Tensor[(1, 96), bool] */;
  %877 = cast(%var_9180, dtype="bool") /* ty=Tensor[(2, 96), bool] */;
  %878 = @func_8681() /* ty=Tensor[(8, 3, 3), float32] */;
  %879 = %868.0;
  %880 = %875.1;
  %881 = logical_or(%876, %877) /* ty=Tensor[(2, 96), bool] */;
  (%878, %879, %880, %var_9173, %var_9175, %881)
}

def @func_9670() -> (Tensor[(8, 3, 3), float32],) {
  %882 = @func_9154() /* ty=(Tensor[(8, 3, 3), float32], Tensor[(15, 4, 10), bool], Tensor[(600), uint8], Tensor[(8, 3, 3), float32]) */;
  %883 = %882.3;
  (%883,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_6204(%var_6144: Tensor[(1, 1, 14), float64], %var_6174: Tensor[(96, 1), float64], %var_6183: Tensor[(286), float64]) -> (Tensor[(8, 7, 9), float32], Tensor[(504), float32], Tensor[(864), float64], Tensor[(2, 11, 13), float64], Tensor[(286), float64], Tensor[(1, 11, 9), int8], Tensor[(1, 96, 14), uint32]) {
  %0 = cast(%var_6174, dtype="float64") /* ty=Tensor[(96, 1), float64] */;
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %2 = cast(meta[relay.Constant][1] /* ty=Tensor[(864), float64] */, dtype="float64") /* ty=Tensor[(864), float64] */;
  %3 = reshape(%0, newshape=[8, 1, 12]) /* ty=Tensor[(8, 1, 12), float64] */;
  %4 = reshape(%1, newshape=[504]) /* ty=Tensor[(504), float32] */;
  %5 = reshape(%2, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %6 = @func_4857(%3, %4, %5) /* ty=(Tensor[(8, 11, 12), float64], Tensor[(8, 7, 9), float32], Tensor[(504), float32], Tensor[(1, 11, 9), int8], Tensor[(864), float64]) */;
  %7 = cast(%var_6183, dtype="float64") /* ty=Tensor[(286), float64] */;
  %8 = reshape(%7, newshape=[2, 11, 13]) /* ty=Tensor[(2, 11, 13), float64] */;
  %9 = cast(meta[relay.Constant][1] /* ty=Tensor[(864), float64] */, dtype="float64") /* ty=Tensor[(864), float64] */;
  %10 = reshape(%9, newshape=[8, 9, 12]) /* ty=Tensor[(8, 9, 12), float64] */;
  %11 = @func_1961(%10) /* ty=(Tensor[(8, 9, 12), float64], Tensor[(1, 11, 9), int8], Tensor[(1, 99), int8]) */;
  %12 = cast(%var_6144, dtype="float64") /* ty=Tensor[(1, 1, 14), float64] */;
  %13 = sinh(%12) /* ty=Tensor[(1, 1, 14), float64] */;
  %14 = cast(%13, dtype="float64") /* ty=Tensor[(1, 1, 14), float64] */;
  %15 = asin(%14) /* ty=Tensor[(1, 1, 14), float64] */;
  %16 = cast(%15, dtype="float64") /* ty=Tensor[(1, 1, 14), float64] */;
  %17 = sin(%16) /* ty=Tensor[(1, 1, 14), float64] */;
  %18 = cast(%17, dtype="uint32") /* ty=Tensor[(1, 1, 14), uint32] */;
  %19 = cast(%var_6174, dtype="uint32") /* ty=Tensor[(96, 1), uint32] */;
  %20 = %6.1;
  %21 = @func_2269(%8) /* ty=Tensor[(2, 11, 13), float64] */;
  %22 = %11.1;
  %23 = bitwise_xor(%18, %19) /* ty=Tensor[(1, 96, 14), uint32] */;
  (%20, meta[relay.Constant][0] /* ty=Tensor[(504), float32] */, meta[relay.Constant][1] /* ty=Tensor[(864), float64] */, %21, %var_6183, %22, %23)
}

def @func_1402(%var_1384: uint32) -> Tensor[(6, 13, 5), bool] {
  %24 = cast(%var_1384, dtype="bool") /* ty=bool */;
  %25 = cast(meta[relay.Constant][2] /* ty=Tensor[(6, 13, 5), uint32] */, dtype="bool") /* ty=Tensor[(6, 13, 5), bool] */;
  less_equal(%24, %25) /* ty=Tensor[(6, 13, 5), bool] */
}

def @func_9194(%var_9190: Tensor[(14), float64], %var_9191: Tensor[(1, 96), float64], %var_9192: Tensor[(286), float64], %var_9193: Tensor[(2, 96), float64]) -> (Tensor[(8, 3, 3), float32], Tensor[(8, 3, 3), float32], Tensor[(504), float32], Tensor[(14), float64], Tensor[(286), float64], Tensor[(2, 96), bool]) {
  @func_9188(%var_9190, %var_9191, %var_9192, %var_9193) /* ty=(Tensor[(8, 3, 3), float32], Tensor[(8, 3, 3), float32], Tensor[(504), float32], Tensor[(14), float64], Tensor[(286), float64], Tensor[(2, 96), bool]) */
}

def @func_10571(%var_10564: uint32) -> (Tensor[(8, 3, 3), float32], Tensor[(6, 13, 5), bool], uint32) {
  %26 = @func_8639() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %27 = cast(%var_10564, dtype="uint32") /* ty=uint32 */;
  %28 = reshape(%27, newshape=[]) /* ty=uint32 */;
  %29 = %26.0;
  %30 = @func_1402(%28) /* ty=Tensor[(6, 13, 5), bool] */;
  (%29, %30, %var_10564)
}

def @func_12008() -> (Tensor[(8, 3, 3), float32],) {
  %31 = @func_10003() /* ty=Tensor[(8, 3, 3), float32] */;
  (%31,)
}

def @func_12448() -> Tensor[(504), float32] {
  %32 = fn () -> Tensor[(504), float32] {
    @func_11773() /* ty=Tensor[(504), float32] */
  };
  %32() /* ty=Tensor[(504), float32] */
}

def @func_13071(%var_13036: float32, %var_13037: Tensor[(16, 8, 1), float32]) -> (Tensor[(16, 8, ?), bool],) {
  %33 = cast(%var_13036, dtype="bool") /* ty=bool */;
  %34 = cast(%var_13037, dtype="bool") /* ty=Tensor[(16, 8, 1), bool] */;
  %35 = less_equal(%33, %34) /* ty=Tensor[(16, 8, 1), bool] */;
  %36 = cast(%var_13037, dtype="bool") /* ty=Tensor[(16, 8, 1), bool] */;
  %37 = shape_of(%35, dtype="int32") /* ty=Tensor[(3), int32] */;
  %38 = cast(%35, dtype="bool") /* ty=Tensor[(16, 8, 1), bool] */;
  %39 = dyn.reshape(%36, %37, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %40 = logical_and(%38, %39) /* ty=Tensor[(16, 8, ?), bool] */;
  (%40,)
}

def @func_9123() -> (Tensor[(8, 3, 3), float32],) {
  %41 = @func_8639() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %42 = %41.0;
  (%42,)
}

def @func_9402(%var_9400: float32, %var_9401: Tensor[(1, 10, 10), float32]) -> (Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), int16]) {
  %49 = fn (%var_9384: float32, %var_9385: Tensor[(1, 10, 10), float32]) -> (Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), int16]) {
    %43 = cast(%var_9384, dtype="float32") /* ty=float32 */;
    %44 = cast(%var_9385, dtype="float32") /* ty=Tensor[(1, 10, 10), float32] */;
    %45 = cast(%var_9384, dtype="int16") /* ty=int16 */;
    %46 = cast(%var_9385, dtype="int16") /* ty=Tensor[(1, 10, 10), int16] */;
    %47 = floor_mod(%43, %44) /* ty=Tensor[(1, 10, 10), float32] */;
    %48 = multiply(%45, %46) /* ty=Tensor[(1, 10, 10), int16] */;
    (%47, %48)
  };
  %49(%var_9400, %var_9401) /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), int16]) */
}

def @func_11404() -> (Tensor[(8, 3, 3), float32],) {
  %52 = fn () -> (Tensor[(8, 3, 3), float32],) {
    %50 = @func_8639() /* ty=(Tensor[(8, 3, 3), float32],) */;
    %51 = %50.0;
    (%51,)
  };
  %52() /* ty=(Tensor[(8, 3, 3), float32],) */
}

def @func_13014() -> (Tensor[(8, 3, 3), float32],) {
  @func_13012() /* ty=(Tensor[(8, 3, 3), float32],) */
}

def @func_11289(%var_11271: Tensor[(2, 7, 7), uint64], %var_11279: Tensor[(6, 78), float32]) -> (Tensor[(2, 7, 7), uint64], Tensor[(4, 9, 13), float32], Tensor[(6, 78), float32]) {
  %53 = cast(meta[relay.Constant][3] /* ty=Tensor[(2, 7, 7), uint64] */, dtype="uint64") /* ty=Tensor[(2, 7, 7), uint64] */;
  %54 = shape_of(%var_11271, dtype="int32") /* ty=Tensor[(3), int32] */;
  %55 = cast(%var_11271, dtype="uint64") /* ty=Tensor[(2, 7, 7), uint64] */;
  %56 = dyn.reshape(%53, %54, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %57 = cast(%var_11279, dtype="float32") /* ty=Tensor[(6, 78), float32] */;
  %58 = reshape(%57, newshape=[4, 9, 13]) /* ty=Tensor[(4, 9, 13), float32] */;
  %59 = minimum(%55, %56) /* ty=Tensor[(2, 7, 7), uint64] */;
  %60 = @func_8475(%58) /* ty=Tensor[(4, 9, 13), float32] */;
  (%59, %60, %var_11279)
}

def @func_11428() -> Tensor[(8, 3, 3), float64] {
  %64 = fn () -> Tensor[(8, 3, 3), float64] {
    %61 = @func_11091() /* ty=(Tensor[(8, 3, 3), float32], Tensor[(6, 13, 5), bool], Tensor[(1008), float32], uint32) */;
    %62 = %61.0;
    %63 = cast(%62, dtype="float64") /* ty=Tensor[(8, 3, 3), float64] */;
    atan(%63) /* ty=Tensor[(8, 3, 3), float64] */
  };
  %64() /* ty=Tensor[(8, 3, 3), float64] */
}

def @func_12712() -> (Tensor[(8, 3, 3), float32],) {
  %67 = fn () -> (Tensor[(8, 3, 3), float32],) {
    %65 = @func_10075() /* ty=(Tensor[(8, 3, 3), float32], Tensor[(8, 3, 3), float64]) */;
    %66 = %65.0;
    (%66,)
  };
  %67() /* ty=(Tensor[(8, 3, 3), float32],) */
}

def @func_12990(%var_12957: int64, %var_12958: Tensor[(4, 11, 7), int64]) -> (Tensor[(4, 11, 7), int64], Tensor[(8, 3, 3), int64], Tensor[(72), float32]) {
  %68 = cast(%var_12957, dtype="int64") /* ty=int64 */;
  %69 = cast(%var_12958, dtype="int64") /* ty=Tensor[(4, 11, 7), int64] */;
  %70 = cast(meta[relay.Constant][4] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %71 = reshape(%70, newshape=[8, 3, 3]) /* ty=Tensor[(8, 3, 3), float32] */;
  %72 = bitwise_and(%68, %69) /* ty=Tensor[(4, 11, 7), int64] */;
  %73 = @func_12565(%71) /* ty=Tensor[(8, 3, 3), int64] */;
  (%72, %73, meta[relay.Constant][4] /* ty=Tensor[(72), float32] */)
}

def @func_7071(%var_7042: uint8, %var_7043: Tensor[(16, 6, 12), uint8]) -> (Tensor[(16, 6, 12), uint8], Tensor[(8, 2, 7), int64], Tensor[(112), int64]) {
  %74 = cast(%var_7042, dtype="uint8") /* ty=uint8 */;
  %75 = cast(%var_7043, dtype="uint8") /* ty=Tensor[(16, 6, 12), uint8] */;
  %76 = cast(meta[relay.Constant][5] /* ty=Tensor[(112), int64] */, dtype="int64") /* ty=Tensor[(112), int64] */;
  %77 = cast(meta[relay.Constant][5] /* ty=Tensor[(112), int64] */, dtype="int64") /* ty=Tensor[(112), int64] */;
  %78 = reshape(%76, newshape=[8, 2, 7]) /* ty=Tensor[(8, 2, 7), int64] */;
  %79 = reshape(%77, newshape=[8, 2, 7]) /* ty=Tensor[(8, 2, 7), int64] */;
  %80 = left_shift(%74, %75) /* ty=Tensor[(16, 6, 12), uint8] */;
  %81 = @func_1450(%78, %79) /* ty=Tensor[(8, 2, 7), int64] */;
  (%80, %81, meta[relay.Constant][5] /* ty=Tensor[(112), int64] */)
}

def @func_10214(%var_10209: Tensor[(546, 2), float64], %var_10210: Tensor[(14), float64], %var_10211: Tensor[(96, 1), float64], %var_10212: Tensor[(286), float64], %var_10213: Tensor[(192), float64]) -> (Tensor[(8, 3, 3), float32], Tensor[(16, 11, 6), float64], Tensor[(8, 132), float64], Tensor[(7, 12, 13), int8], Tensor[(546, 2), float64], Tensor[(600), uint8], Tensor[(8, 3, 3), float32], Tensor[(8, 3, 3), float32], Tensor[(14), float64], Tensor[(96, 1), float64], Tensor[(286), float64], Tensor[(192), float64]) {
  %111 = fn (%var_10149: Tensor[(546, 2), float64], %var_10173: Tensor[(14), float64], %var_10174: Tensor[(96, 1), float64], %var_10175: Tensor[(286), float64], %var_10176: Tensor[(192), float64]) -> (Tensor[(8, 3, 3), float32], Tensor[(16, 11, 6), float64], Tensor[(8, 132), float64], Tensor[(7, 12, 13), int8], Tensor[(546, 2), float64], Tensor[(600), uint8], Tensor[(8, 3, 3), float32], Tensor[(8, 3, 3), float32], Tensor[(14), float64], Tensor[(96, 1), float64], Tensor[(286), float64], Tensor[(192), float64]) {
    %82 = @func_9123() /* ty=(Tensor[(8, 3, 3), float32],) */;
    %83 = %82.0;
    %84 = cast(%83, dtype="float32") /* ty=Tensor[(8, 3, 3), float32] */;
    %85 = cast(meta[relay.Constant][6] /* ty=Tensor[(8, 132), float64] */, dtype="float64") /* ty=Tensor[(8, 132), float64] */;
    %86 = reshape(%85, newshape=[16, 11, 6]) /* ty=Tensor[(16, 11, 6), float64] */;
    %87 = cast(meta[relay.Constant][6] /* ty=Tensor[(8, 132), float64] */, dtype="float64") /* ty=Tensor[(8, 132), float64] */;
    %88 = cast(%var_10149, dtype="float64") /* ty=Tensor[(546, 2), float64] */;
    %89 = cast(%var_10149, dtype="float64") /* ty=Tensor[(546, 2), float64] */;
    %90 = reshape(%88, newshape=[7, 12, 13]) /* ty=Tensor[(7, 12, 13), float64] */;
    %91 = reshape(%89, newshape=[7, 12, 13]) /* ty=Tensor[(7, 12, 13), float64] */;
    %92 = @func_9654(%90, %91) /* ty=(Tensor[(7, 12, 13), int8],) */;
    %93 = @func_9154() /* ty=(Tensor[(8, 3, 3), float32], Tensor[(15, 4, 10), bool], Tensor[(600), uint8], Tensor[(8, 3, 3), float32]) */;
    %94 = @func_9154() /* ty=(Tensor[(8, 3, 3), float32], Tensor[(15, 4, 10), bool], Tensor[(600), uint8], Tensor[(8, 3, 3), float32]) */;
    %95 = cast(%var_10173, dtype="float64") /* ty=Tensor[(14), float64] */;
    %96 = cast(%var_10174, dtype="float64") /* ty=Tensor[(96, 1), float64] */;
    %97 = cast(%var_10175, dtype="float64") /* ty=Tensor[(286), float64] */;
    %98 = cast(%var_10176, dtype="float64") /* ty=Tensor[(192), float64] */;
    %99 = reshape(%95, newshape=[14]) /* ty=Tensor[(14), float64] */;
    %100 = reshape(%96, newshape=[1, 96]) /* ty=Tensor[(1, 96), float64] */;
    %101 = reshape(%97, newshape=[286]) /* ty=Tensor[(286), float64] */;
    %102 = reshape(%98, newshape=[2, 96]) /* ty=Tensor[(2, 96), float64] */;
    %103 = @func_9188(%99, %100, %101, %102) /* ty=(Tensor[(8, 3, 3), float32], Tensor[(8, 3, 3), float32], Tensor[(504), float32], Tensor[(14), float64], Tensor[(286), float64], Tensor[(2, 96), bool]) */;
    %104 = sigmoid(%84) /* ty=Tensor[(8, 3, 3), float32] */;
    %105 = @func_6085(%86) /* ty=Tensor[(16, 11, 6), float64] */;
    %106 = sinh(%87) /* ty=Tensor[(8, 132), float64] */;
    %107 = %92.0;
    %108 = %93.2;
    %109 = %94.0;
    %110 = %103.1;
    (%104, %105, %106, %107, %var_10149, %108, %109, %110, %var_10173, %var_10174, %var_10175, %var_10176)
  };
  %111(%var_10209, %var_10210, %var_10211, %var_10212, %var_10213) /* ty=(Tensor[(8, 3, 3), float32], Tensor[(16, 11, 6), float64], Tensor[(8, 132), float64], Tensor[(7, 12, 13), int8], Tensor[(546, 2), float64], Tensor[(600), uint8], Tensor[(8, 3, 3), float32], Tensor[(8, 3, 3), float32], Tensor[(14), float64], Tensor[(96, 1), float64], Tensor[(286), float64], Tensor[(192), float64]) */
}

def @func_9869(%var_9867: uint32) -> (Tensor[(8, 3, 3), float64], Tensor[(8, 7, 9), float64], Tensor[(1, 504), float64], Tensor[(6, 13, 5), bool], uint32) {
  @func_9866(%var_9867) /* ty=(Tensor[(8, 3, 3), float64], Tensor[(8, 7, 9), float64], Tensor[(1, 504), float64], Tensor[(6, 13, 5), bool], uint32) */
}

def @func_12844() -> (Tensor[(8, 3, 3), float32], Tensor[(504), float32]) {
  %112 = @func_8681() /* ty=Tensor[(8, 3, 3), float32] */;
  %113 = @func_11773() /* ty=Tensor[(504), float32] */;
  (%112, %113)
}

def @func_10549(%var_10545: Tensor[(70), float32], %var_10546: Tensor[(117), bool], %var_10547: Tensor[(84), float32], %var_10548: uint32) -> (Tensor[(8, 3, 3), float32], Tensor[(8, 3, 3), float64], Tensor[(7, 2, 5), float32], Tensor[(70), float32], Tensor[(600), uint8], Tensor[(117), bool], Tensor[(84), float32], uint32) {
  @func_10543(%var_10545, %var_10546, %var_10547, %var_10548) /* ty=(Tensor[(8, 3, 3), float32], Tensor[(8, 3, 3), float64], Tensor[(7, 2, 5), float32], Tensor[(70), float32], Tensor[(600), uint8], Tensor[(117), bool], Tensor[(84), float32], uint32) */
}

def @func_8718() -> (Tensor[(8, 3, 3), float64],) {
  %120 = fn () -> (Tensor[(8, 3, 3), float64],) {
    %114 = @func_8681() /* ty=Tensor[(8, 3, 3), float32] */;
    %115 = cast(meta[relay.Constant][7] /* ty=Tensor[(8, 3, 3), float32] */, dtype="float64") /* ty=Tensor[(8, 3, 3), float64] */;
    %116 = shape_of(%114, dtype="int32") /* ty=Tensor[(3), int32] */;
    %117 = cast(%114, dtype="float64") /* ty=Tensor[(8, 3, 3), float64] */;
    %118 = dyn.reshape(%115, %116, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %119 = floor_mod(%117, %118) /* ty=Tensor[(8, 3, 3), float64] */;
    (%119,)
  };
  %120() /* ty=(Tensor[(8, 3, 3), float64],) */
}

def @func_12629(%var_12628: Tensor[(1008), float32]) -> (Tensor[(1, 11, 9), int8], Tensor[(8, 9, 12), float64], Tensor[(14, 105), float64], Tensor[(1008), float32], Tensor[(1170), uint32]) {
  %135 = fn (%var_12615: Tensor[(1008), float32]) -> (Tensor[(1, 11, 9), int8], Tensor[(8, 9, 12), float64], Tensor[(14, 105), float64], Tensor[(1008), float32], Tensor[(1170), uint32]) {
    %121 = @func_9271() /* ty=(Tensor[(1, 11, 9), int8], Tensor[(99), int8], Tensor[(8, 3, 3), float64]) */;
    %122 = cast(meta[relay.Constant][8] /* ty=Tensor[(14, 105), float64] */, dtype="float64") /* ty=Tensor[(14, 105), float64] */;
    %123 = cast(meta[relay.Constant][8] /* ty=Tensor[(14, 105), float64] */, dtype="float64") /* ty=Tensor[(14, 105), float64] */;
    %124 = cast(%var_12615, dtype="float32") /* ty=Tensor[(1008), float32] */;
    %125 = cast(meta[relay.Constant][9] /* ty=Tensor[(1170), uint32] */, dtype="uint32") /* ty=Tensor[(1170), uint32] */;
    %126 = cast(meta[relay.Constant][8] /* ty=Tensor[(14, 105), float64] */, dtype="uint8") /* ty=Tensor[(14, 105), uint8] */;
    %127 = reshape(%122, newshape=[14, 15, 7]) /* ty=Tensor[(14, 15, 7), float64] */;
    %128 = reshape(%123, newshape=[14, 15, 7]) /* ty=Tensor[(14, 15, 7), float64] */;
    %129 = reshape(%124, newshape=[1008]) /* ty=Tensor[(1008), float32] */;
    %130 = reshape(%125, newshape=[130, 9]) /* ty=Tensor[(130, 9), uint32] */;
    %131 = reshape(%126, newshape=[14, 15, 7]) /* ty=Tensor[(14, 15, 7), uint8] */;
    %132 = @func_9077(%127, %128, %129, %130, %131) /* ty=(Tensor[(8, 3, 3), float32], Tensor[(4, 1, 6), float64], Tensor[(24), float64], Tensor[(3, 10, 16), int32], Tensor[(88, 20), float32], Tensor[(14, 15, 7), float64], Tensor[(14, 15, 7), uint32], Tensor[(1, 1008), float32], int32, Tensor[(16, 1), int32], Tensor[(1008), float32], Tensor[(8, 9, 12), float64], Tensor[(864), float64], Tensor[(6, 13, 15), bool], Tensor[(130, 9), uint32], Tensor[(8, 3, 3), float64], Tensor[(8, 7, 9), float64], Tensor[(504), float64], Tensor[(14, 15, 7), float64], Tensor[(8, 3, 3), float64], Tensor[(6, 13, 5), bool], Tensor[(8, 3, 3), float64], Tensor[(3, 10, 16), int32]) */;
    %133 = %121.0;
    %134 = %132.11;
    (%133, %134, meta[relay.Constant][8] /* ty=Tensor[(14, 105), float64] */, %var_12615, meta[relay.Constant][9] /* ty=Tensor[(1170), uint32] */)
  };
  %135(%var_12628) /* ty=(Tensor[(1, 11, 9), int8], Tensor[(8, 9, 12), float64], Tensor[(14, 105), float64], Tensor[(1008), float32], Tensor[(1170), uint32]) */
}

def @func_10246(%var_10228: Tensor[(9, 16, 7), float32]) -> (Tensor[(9, 16, 7), float32],) {
  %136 = cast(%var_10228, dtype="float32") /* ty=Tensor[(9, 16, 7), float32] */;
  %137 = acosh(%136) /* ty=Tensor[(9, 16, 7), float32] */;
  (%137,)
}

def @func_5218(%var_5216: Tensor[(3, 10, 16), int32], %var_5217: Tensor[(3, 10, 16), int32]) -> Tensor[(3, 10, 16), int32] {
  %142 = fn (%var_5198: Tensor[(3, 10, 16), int32], %var_5199: Tensor[(3, 10, 16), int32]) -> Tensor[(3, 10, 16), int32] {
    %138 = cast(%var_5199, dtype="int32") /* ty=Tensor[(3, 10, 16), int32] */;
    %139 = shape_of(%var_5198, dtype="int32") /* ty=Tensor[(3), int32] */;
    %140 = cast(%var_5198, dtype="int32") /* ty=Tensor[(3, 10, 16), int32] */;
    %141 = dyn.reshape(%138, %139, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    logical_xor(%140, %141) /* ty=Tensor[(3, 10, 16), int32] */
  };
  %142(%var_5216, %var_5217) /* ty=Tensor[(3, 10, 16), int32] */
}

def @func_8358(%var_8356: Tensor[(16, 10, 11), float32]) -> (Tensor[(16, 10, 11), float32], Tensor[(3, 10, 16), int32], Tensor[(480), int32]) {
  @func_8355(%var_8356) /* ty=(Tensor[(16, 10, 11), float32], Tensor[(3, 10, 16), int32], Tensor[(480), int32]) */
}

def @func_9125() -> (Tensor[(8, 3, 3), float32],) {
  @func_9123() /* ty=(Tensor[(8, 3, 3), float32],) */
}

def @func_9815(%var_9812: Tensor[(360), float32], %var_9813: uint32, %var_9814: Tensor[(1152), uint8]) -> (Tensor[(8, 3, 3), float32], Tensor[(360), float32], uint32, Tensor[(112), int64], Tensor[(1152), uint8], Tensor[(7, 12, 13), int8], uint32, Tensor[(728), uint16], Tensor[(1092), uint64]) {
  %170 = fn (%var_9761: Tensor[(360), float32], %var_9762: uint32, %var_9778: Tensor[(1152), uint8]) -> (Tensor[(8, 3, 3), float32], Tensor[(360), float32], uint32, Tensor[(112), int64], Tensor[(1152), uint8], Tensor[(7, 12, 13), int8], uint32, Tensor[(728), uint16], Tensor[(1092), uint64]) {
    %143 = @func_8639() /* ty=(Tensor[(8, 3, 3), float32],) */;
    %144 = cast(%var_9762, dtype="uint8") /* ty=uint8 */;
    %145 = cast(%var_9778, dtype="uint8") /* ty=Tensor[(1152), uint8] */;
    %146 = reshape(%144, newshape=[]) /* ty=uint8 */;
    %147 = reshape(%145, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), uint8] */;
    %148 = @func_7071(%146, %147) /* ty=(Tensor[(16, 6, 12), uint8], Tensor[(8, 2, 7), int64], Tensor[(112), int64]) */;
    %149 = cast(meta[relay.Constant][10] /* ty=Tensor[(1092), float64] */, dtype="float64") /* ty=Tensor[(1092), float64] */;
    %150 = cast(meta[relay.Constant][10] /* ty=Tensor[(1092), float64] */, dtype="float64") /* ty=Tensor[(1092), float64] */;
    %151 = reshape(%149, newshape=[7, 12, 13]) /* ty=Tensor[(7, 12, 13), float64] */;
    %152 = reshape(%150, newshape=[7, 12, 13]) /* ty=Tensor[(7, 12, 13), float64] */;
    %153 = @func_9654(%151, %152) /* ty=(Tensor[(7, 12, 13), int8],) */;
    %154 = cast(meta[relay.Constant][11] /* ty=Tensor[(728), uint16] */, dtype="uint16") /* ty=Tensor[(728), uint16] */;
    %155 = reshape(%154, newshape=[13, 14, 4]) /* ty=Tensor[(13, 14, 4), uint16] */;
    %156 = @func_8574(%155) /* ty=(Tensor[(13, 14, 4), uint16], Tensor[(6, 13, 5), bool], uint32) */;
    %157 = cast(%var_9761, dtype="float32") /* ty=Tensor[(360), float32] */;
    %158 = cast(%var_9762, dtype="uint32") /* ty=uint32 */;
    %159 = reshape(%157, newshape=[3, 10, 12]) /* ty=Tensor[(3, 10, 12), float32] */;
    %160 = reshape(%158, newshape=[]) /* ty=uint32 */;
    %161 = @func_5993(%159, %160) /* ty=(Tensor[(3, 10, 12), float32], Tensor[(3, 10, 12), float32], Tensor[(11, 2, 4), int32], Tensor[(84), float32], uint32, Tensor[(12, 50), uint8]) */;
    %162 = %161.4;
    %163 = cast(meta[relay.Constant][10] /* ty=Tensor[(1092), float64] */, dtype="uint64") /* ty=Tensor[(1092), uint64] */;
    %164 = cast(%162, dtype="uint64") /* ty=uint64 */;
    %165 = %143.0;
    %166 = %148.2;
    %167 = %153.0;
    %168 = %156.2;
    %169 = bitwise_or(%163, %164) /* ty=Tensor[(1092), uint64] */;
    (%165, %var_9761, %var_9762, %166, %var_9778, %167, %168, meta[relay.Constant][11] /* ty=Tensor[(728), uint16] */, %169)
  };
  %170(%var_9812, %var_9813, %var_9814) /* ty=(Tensor[(8, 3, 3), float32], Tensor[(360), float32], uint32, Tensor[(112), int64], Tensor[(1152), uint8], Tensor[(7, 12, 13), int8], uint32, Tensor[(728), uint16], Tensor[(1092), uint64]) */
}

def @func_12692() -> Tensor[(8, 3, 3), float32] {
  %171 = @func_11403() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %171.0
}

def @func_11323(%var_11312: Tensor[(12, 8, 2), bool]) -> (Tensor[(12, 8, 2), bool],) {
  %172 = cast(%var_11312, dtype="bool") /* ty=Tensor[(12, 8, 2), bool] */;
  %173 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(12, 8, 2), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %174 = cast(meta[relay.Constant][12] /* ty=Tensor[(12, 8, 2), bool] */, dtype="bool") /* ty=Tensor[(12, 8, 2), bool] */;
  %175 = dyn.reshape(%172, %173, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %176 = logical_or(%174, %175) /* ty=Tensor[(12, 8, 2), bool] */;
  (%176,)
}

def @func_1405(%var_1403: uint32) -> Tensor[(6, 13, 5), bool] {
  @func_1402(%var_1403) /* ty=Tensor[(6, 13, 5), bool] */
}

def @func_4089(%var_4083: Tensor[(6, 13, 15), uint32], %var_4084: Tensor[(6, 13, 15), uint32]) -> Tensor[(6, 13, 15), bool] {
  %177 = cast(%var_4084, dtype="bool") /* ty=Tensor[(6, 13, 15), bool] */;
  %178 = shape_of(%var_4083, dtype="int32") /* ty=Tensor[(3), int32] */;
  %179 = cast(%var_4083, dtype="bool") /* ty=Tensor[(6, 13, 15), bool] */;
  %180 = dyn.reshape(%177, %178, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%179, %180) /* ty=Tensor[(6, 13, 15), bool] */
}

def @func_9361(%var_9360: Tensor[(8, 3, 3), float32]) -> (Tensor[(8, 3, 3), uint16], Tensor[(112), int64], uint8, Tensor[(1152), uint8], Tensor[(1, 11, 9), int8], Tensor[(99), int8]) {
  %197 = fn (%var_9336: Tensor[(8, 3, 3), float32]) -> (Tensor[(8, 3, 3), uint16], Tensor[(112), int64], uint8, Tensor[(1152), uint8], Tensor[(1, 11, 9), int8], Tensor[(99), int8]) {
    %181 = @func_8639() /* ty=(Tensor[(8, 3, 3), float32],) */;
    %182 = %181.0;
    %183 = cast(%var_9336, dtype="uint16") /* ty=Tensor[(8, 3, 3), uint16] */;
    %184 = shape_of(%182, dtype="int32") /* ty=Tensor[(3), int32] */;
    %185 = cast(%182, dtype="uint16") /* ty=Tensor[(8, 3, 3), uint16] */;
    %186 = dyn.reshape(%183, %184, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %187 = cast(meta[relay.Constant][13] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %188 = cast(meta[relay.Constant][14] /* ty=Tensor[(1152), uint8] */, dtype="uint8") /* ty=Tensor[(1152), uint8] */;
    %189 = reshape(%187, newshape=[]) /* ty=uint8 */;
    %190 = reshape(%188, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), uint8] */;
    %191 = @func_7071(%189, %190) /* ty=(Tensor[(16, 6, 12), uint8], Tensor[(8, 2, 7), int64], Tensor[(112), int64]) */;
    %192 = cast(meta[relay.Constant][15] /* ty=Tensor[(99), int8] */, dtype="int8") /* ty=Tensor[(99), int8] */;
    %193 = reshape(%192, newshape=[1, 11, 9]) /* ty=Tensor[(1, 11, 9), int8] */;
    %194 = bitwise_and(%185, %186) /* ty=Tensor[(8, 3, 3), uint16] */;
    %195 = %191.2;
    %196 = @func_1876(%193) /* ty=Tensor[(1, 11, 9), int8] */;
    (%194, %195, meta[relay.Constant][13] /* ty=uint8 */, meta[relay.Constant][14] /* ty=Tensor[(1152), uint8] */, %196, meta[relay.Constant][15] /* ty=Tensor[(99), int8] */)
  };
  %197(%var_9360) /* ty=(Tensor[(8, 3, 3), uint16], Tensor[(112), int64], uint8, Tensor[(1152), uint8], Tensor[(1, 11, 9), int8], Tensor[(99), int8]) */
}

def @func_36(%var_35: Tensor[(11, 2, 4), float64]) -> (Tensor[(11, 2, 4), bool], Tensor[(11, 2, 4), float64]) {
  %204 = fn (%var_16: Tensor[(11, 2, 4), float64]) -> (Tensor[(11, 2, 4), bool], Tensor[(11, 2, 4), float64]) {
    %198 = cast(-2.98854f64 /* ty=float64 */, dtype="bool") /* ty=bool */;
    %199 = cast(%var_16, dtype="bool") /* ty=Tensor[(11, 2, 4), bool] */;
    %200 = cast(-2.98854f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %201 = cast(%var_16, dtype="float64") /* ty=Tensor[(11, 2, 4), float64] */;
    %202 = less(%198, %199) /* ty=Tensor[(11, 2, 4), bool] */;
    %203 = floor_mod(%200, %201) /* ty=Tensor[(11, 2, 4), float64] */;
    (%202, %203)
  };
  %204(%var_35) /* ty=(Tensor[(11, 2, 4), bool], Tensor[(11, 2, 4), float64]) */
}

def @func_8477(%var_8476: Tensor[(4, 9, 13), float32]) -> Tensor[(4, 9, 13), float32] {
  %206 = fn (%var_8468: Tensor[(4, 9, 13), float32]) -> Tensor[(4, 9, 13), float32] {
    %205 = cast(%var_8468, dtype="float32") /* ty=Tensor[(4, 9, 13), float32] */;
    rsqrt(%205) /* ty=Tensor[(4, 9, 13), float32] */
  };
  %206(%var_8476) /* ty=Tensor[(4, 9, 13), float32] */
}

def @func_9271() -> (Tensor[(1, 11, 9), int8], Tensor[(99), int8], Tensor[(8, 3, 3), float64]) {
  %207 = cast(meta[relay.Constant][16] /* ty=Tensor[(99), int8] */, dtype="int8") /* ty=Tensor[(99), int8] */;
  %208 = reshape(%207, newshape=[1, 11, 9]) /* ty=Tensor[(1, 11, 9), int8] */;
  %209 = @func_8717() /* ty=(Tensor[(8, 3, 3), float64],) */;
  %210 = %209.0;
  %211 = cast(meta[relay.Constant][17] /* ty=Tensor[(8, 3, 3), float64] */, dtype="float64") /* ty=Tensor[(8, 3, 3), float64] */;
  %212 = shape_of(%210, dtype="int32") /* ty=Tensor[(3), int32] */;
  %213 = cast(%210, dtype="float64") /* ty=Tensor[(8, 3, 3), float64] */;
  %214 = dyn.reshape(%211, %212, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %215 = @func_1876(%208) /* ty=Tensor[(1, 11, 9), int8] */;
  %216 = floor_divide(%213, %214) /* ty=Tensor[(8, 3, 3), float64] */;
  (%215, meta[relay.Constant][16] /* ty=Tensor[(99), int8] */, %216)
}

def @func_5264(%var_5262: Tensor[(12, 3, 15), uint32]) -> Tensor[(12, 3, 15), uint32] {
  @func_5261(%var_5262) /* ty=Tensor[(12, 3, 15), uint32] */
}

def @func_10896() -> (Tensor[(8, 3, 3), float32], Tensor[(8, 9, 12), float64], Tensor[(864), float64]) {
  @func_10894() /* ty=(Tensor[(8, 3, 3), float32], Tensor[(8, 9, 12), float64], Tensor[(864), float64]) */
}

def @func_10667(%var_10665: Tensor[(14, 1), float64], %var_10666: Tensor[(96), float64]) -> (Tensor[(8, 3, 3), float32], Tensor[(96), float64], Tensor[(286), float64], Tensor[(14, 504), uint16]) {
  @func_10663(%var_10665, %var_10666) /* ty=(Tensor[(8, 3, 3), float32], Tensor[(96), float64], Tensor[(286), float64], Tensor[(14, 504), uint16]) */
}

def @func_7198(%var_7196: Tensor[(1, 3, 5), float64], %var_7197: Tensor[(600), uint8]) -> (Tensor[(?, 3, 5), bool], Tensor[(15, 4, 10), bool], Tensor[(600), uint8], Tensor[(8, 7, 9), float32], Tensor[(504, 1), float32]) {
  @func_7194(%var_7196, %var_7197) /* ty=(Tensor[(?, 3, 5), bool], Tensor[(15, 4, 10), bool], Tensor[(600), uint8], Tensor[(8, 7, 9), float32], Tensor[(504, 1), float32]) */
}

def @func_11091() -> (Tensor[(8, 3, 3), float32], Tensor[(6, 13, 5), bool], Tensor[(1008), float32], uint32) {
  %217 = @func_9123() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %218 = cast(meta[relay.Constant][18] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %219 = cast(meta[relay.Constant][19] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %220 = reshape(%218, newshape=[8, 14, 9]) /* ty=Tensor[(8, 14, 9), float32] */;
  %221 = reshape(%219, newshape=[]) /* ty=uint32 */;
  %222 = @func_4277(%220, %221) /* ty=(Tensor[(8, 14, 9), float32], Tensor[(6, 13, 5), bool], uint32) */;
  %223 = %217.0;
  %224 = %222.1;
  (%223, %224, meta[relay.Constant][18] /* ty=Tensor[(1008), float32] */, meta[relay.Constant][19] /* ty=uint32 */)
}

def @func_169(%var_168: Tensor[(15, 4, 10), uint8]) -> (Tensor[(15, 4, 10), bool], Tensor[(11, 2, 4), bool], Tensor[(44, 2), float64]) {
  %234 = fn (%var_153: Tensor[(15, 4, 10), uint8]) -> (Tensor[(15, 4, 10), bool], Tensor[(11, 2, 4), bool], Tensor[(44, 2), float64]) {
    %225 = cast(meta[relay.Constant][20] /* ty=Tensor[(15, 4, 10), uint8] */, dtype="bool") /* ty=Tensor[(15, 4, 10), bool] */;
    %226 = shape_of(%var_153, dtype="int32") /* ty=Tensor[(3), int32] */;
    %227 = cast(%var_153, dtype="bool") /* ty=Tensor[(15, 4, 10), bool] */;
    %228 = dyn.reshape(%225, %226, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %229 = cast(meta[relay.Constant][21] /* ty=Tensor[(44, 2), float64] */, dtype="float64") /* ty=Tensor[(44, 2), float64] */;
    %230 = reshape(%229, newshape=[11, 2, 4]) /* ty=Tensor[(11, 2, 4), float64] */;
    %231 = @func_34(%230) /* ty=(Tensor[(11, 2, 4), bool], Tensor[(11, 2, 4), float64]) */;
    %232 = equal(%227, %228) /* ty=Tensor[(15, 4, 10), bool] */;
    %233 = %231.0;
    (%232, %233, meta[relay.Constant][21] /* ty=Tensor[(44, 2), float64] */)
  };
  %234(%var_168) /* ty=(Tensor[(15, 4, 10), bool], Tensor[(11, 2, 4), bool], Tensor[(44, 2), float64]) */
}

def @func_12846() -> (Tensor[(8, 3, 3), float32], Tensor[(504), float32]) {
  @func_12844() /* ty=(Tensor[(8, 3, 3), float32], Tensor[(504), float32]) */
}

def @func_11195(%var_11192: Tensor[(84), float32], %var_11193: uint32, %var_11194: Tensor[(600), uint8]) -> (Tensor[(8, 3, 3), float32], Tensor[(11, 2, 4), float64], Tensor[(84), float32], uint32, Tensor[(600), uint8]) {
  @func_11190(%var_11192, %var_11193, %var_11194) /* ty=(Tensor[(8, 3, 3), float32], Tensor[(11, 2, 4), float64], Tensor[(84), float32], uint32, Tensor[(600), uint8]) */
}

def @func_11775() -> Tensor[(504), float32] {
  @func_11773() /* ty=Tensor[(504), float32] */
}

def @func_10894() -> (Tensor[(8, 3, 3), float32], Tensor[(8, 9, 12), float64], Tensor[(864), float64]) {
  %235 = @func_8639() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %236 = cast(meta[relay.Constant][22] /* ty=Tensor[(864), float64] */, dtype="float64") /* ty=Tensor[(864), float64] */;
  %237 = reshape(%236, newshape=[8, 9, 12]) /* ty=Tensor[(8, 9, 12), float64] */;
  %238 = @func_1961(%237) /* ty=(Tensor[(8, 9, 12), float64], Tensor[(1, 11, 9), int8], Tensor[(1, 99), int8]) */;
  %239 = %235.0;
  %240 = %238.0;
  (%239, %240, meta[relay.Constant][22] /* ty=Tensor[(864), float64] */)
}

def @func_1454(%var_1452: Tensor[(8, 2, 7), int64], %var_1453: Tensor[(8, 2, 7), int64]) -> Tensor[(8, 2, 7), int64] {
  @func_1450(%var_1452, %var_1453) /* ty=Tensor[(8, 2, 7), int64] */
}

def @func_11212() -> Tensor[(8, 7, 9), float32] {
  %242 = fn () -> Tensor[(8, 7, 9), float32] {
    %241 = @func_11129() /* ty=(Tensor[(8, 3, 3), float32], Tensor[(8, 7, 9), float32], Tensor[(504), float32]) */;
    %241.1
  };
  %242() /* ty=Tensor[(8, 7, 9), float32] */
}

def @func_10077() -> (Tensor[(8, 3, 3), float32], Tensor[(8, 3, 3), float64]) {
  @func_10075() /* ty=(Tensor[(8, 3, 3), float32], Tensor[(8, 3, 3), float64]) */
}

def @func_3650(%var_3649: Tensor[(8, 7, 9), float64]) -> Tensor[(8, 7, 9), float64] {
  %244 = fn (%var_3636: Tensor[(8, 7, 9), float64]) -> Tensor[(8, 7, 9), float64] {
    %243 = cast(%var_3636, dtype="float64") /* ty=Tensor[(8, 7, 9), float64] */;
    rsqrt(%243) /* ty=Tensor[(8, 7, 9), float64] */
  };
  %244(%var_3649) /* ty=Tensor[(8, 7, 9), float64] */
}

def @func_8162(%var_8161: Tensor[(4, 1, 6), float64]) -> (Tensor[(4, 1, 6), float64],) {
  %247 = fn (%var_8151: Tensor[(4, 1, 6), float64]) -> (Tensor[(4, 1, 6), float64],) {
    %245 = cast(%var_8151, dtype="float64") /* ty=Tensor[(4, 1, 6), float64] */;
    %246 = log(%245) /* ty=Tensor[(4, 1, 6), float64] */;
    (%246,)
  };
  %247(%var_8161) /* ty=(Tensor[(4, 1, 6), float64],) */
}

def @func_4396(%var_4393: Tensor[(1, 13, 9), bool], %var_4394: Tensor[(84), float32], %var_4395: uint32) -> (Tensor[(2, 13, 9), bool], Tensor[(1, 13, 9), float32], Tensor[(616), float64], Tensor[(84), float32], uint32, Tensor[(600), uint8]) {
  @func_4391(%var_4393, %var_4394, %var_4395) /* ty=(Tensor[(2, 13, 9), bool], Tensor[(1, 13, 9), float32], Tensor[(616), float64], Tensor[(84), float32], uint32, Tensor[(600), uint8]) */
}

def @func_12171(%var_12170: uint32) -> (Tensor[(8, 3, 3), float32], Tensor[(8, 3, 3), float32], uint32, uint32) {
  %255 = fn (%var_12161: uint32) -> (Tensor[(8, 3, 3), float32], Tensor[(8, 3, 3), float32], uint32, uint32) {
    %248 = @func_10894() /* ty=(Tensor[(8, 3, 3), float32], Tensor[(8, 9, 12), float64], Tensor[(864), float64]) */;
    %249 = cast(%var_12161, dtype="uint32") /* ty=uint32 */;
    %250 = reshape(%249, newshape=[]) /* ty=uint32 */;
    %251 = @func_9866(%250) /* ty=(Tensor[(8, 3, 3), float64], Tensor[(8, 7, 9), float64], Tensor[(1, 504), float64], Tensor[(6, 13, 5), bool], uint32) */;
    %252 = @func_10420() /* ty=Tensor[(8, 3, 3), float32] */;
    %253 = %248.0;
    %254 = %251.4;
    (%252, %253, %254, %var_12161)
  };
  %255(%var_12170) /* ty=(Tensor[(8, 3, 3), float32], Tensor[(8, 3, 3), float32], uint32, uint32) */
}

def @func_9084(%var_9079: Tensor[(14, 15, 7), float64], %var_9080: Tensor[(14, 15, 7), float64], %var_9081: Tensor[(1008), float32], %var_9082: Tensor[(130, 9), uint32], %var_9083: Tensor[(14, 15, 7), uint8]) -> (Tensor[(8, 3, 3), float32], Tensor[(4, 1, 6), float64], Tensor[(24), float64], Tensor[(3, 10, 16), int32], Tensor[(88, 20), float32], Tensor[(14, 15, 7), float64], Tensor[(14, 15, 7), uint32], Tensor[(1, 1008), float32], int32, Tensor[(16, 1), int32], Tensor[(1008), float32], Tensor[(8, 9, 12), float64], Tensor[(864), float64], Tensor[(6, 13, 15), bool], Tensor[(130, 9), uint32], Tensor[(8, 3, 3), float64], Tensor[(8, 7, 9), float64], Tensor[(504), float64], Tensor[(14, 15, 7), float64], Tensor[(8, 3, 3), float64], Tensor[(6, 13, 5), bool], Tensor[(8, 3, 3), float64], Tensor[(3, 10, 16), int32]) {
  @func_9077(%var_9079, %var_9080, %var_9081, %var_9082, %var_9083) /* ty=(Tensor[(8, 3, 3), float32], Tensor[(4, 1, 6), float64], Tensor[(24), float64], Tensor[(3, 10, 16), int32], Tensor[(88, 20), float32], Tensor[(14, 15, 7), float64], Tensor[(14, 15, 7), uint32], Tensor[(1, 1008), float32], int32, Tensor[(16, 1), int32], Tensor[(1008), float32], Tensor[(8, 9, 12), float64], Tensor[(864), float64], Tensor[(6, 13, 15), bool], Tensor[(130, 9), uint32], Tensor[(8, 3, 3), float64], Tensor[(8, 7, 9), float64], Tensor[(504), float64], Tensor[(14, 15, 7), float64], Tensor[(8, 3, 3), float64], Tensor[(6, 13, 5), bool], Tensor[(8, 3, 3), float64], Tensor[(3, 10, 16), int32]) */
}

def @func_6209(%var_6206: Tensor[(1, 1, 14), float64], %var_6207: Tensor[(96, 1), float64], %var_6208: Tensor[(286), float64]) -> (Tensor[(8, 7, 9), float32], Tensor[(504), float32], Tensor[(864), float64], Tensor[(2, 11, 13), float64], Tensor[(286), float64], Tensor[(1, 11, 9), int8], Tensor[(1, 96, 14), uint32]) {
  @func_6204(%var_6206, %var_6207, %var_6208) /* ty=(Tensor[(8, 7, 9), float32], Tensor[(504), float32], Tensor[(864), float64], Tensor[(2, 11, 13), float64], Tensor[(286), float64], Tensor[(1, 11, 9), int8], Tensor[(1, 96, 14), uint32]) */
}

def @func_1876(%var_1872: Tensor[(1, 11, 9), int8]) -> Tensor[(1, 11, 9), int8] {
  %256 = cast(meta[relay.Constant][23] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %257 = cast(%var_1872, dtype="int8") /* ty=Tensor[(1, 11, 9), int8] */;
  logical_xor(%256, %257) /* ty=Tensor[(1, 11, 9), int8] */
}

def @func_4861(%var_4858: Tensor[(8, 1, 12), float64], %var_4859: Tensor[(504), float32], %var_4860: Tensor[(864), float64]) -> (Tensor[(8, 11, 12), float64], Tensor[(8, 7, 9), float32], Tensor[(504), float32], Tensor[(1, 11, 9), int8], Tensor[(864), float64]) {
  %268 = fn (%var_4831: Tensor[(8, 1, 12), float64], %var_4842: Tensor[(504), float32], %var_4855: Tensor[(864), float64]) -> (Tensor[(8, 11, 12), float64], Tensor[(8, 7, 9), float32], Tensor[(504), float32], Tensor[(1, 11, 9), int8], Tensor[(864), float64]) {
    %258 = cast(%var_4831, dtype="float64") /* ty=Tensor[(8, 1, 12), float64] */;
    %259 = cast(meta[relay.Constant][24] /* ty=Tensor[(8, 11, 12), float64] */, dtype="float64") /* ty=Tensor[(8, 11, 12), float64] */;
    %260 = cast(%var_4842, dtype="float32") /* ty=Tensor[(504), float32] */;
    %261 = reshape(%260, newshape=[8, 7, 9]) /* ty=Tensor[(8, 7, 9), float32] */;
    %262 = cast(%var_4855, dtype="float64") /* ty=Tensor[(864), float64] */;
    %263 = reshape(%262, newshape=[8, 9, 12]) /* ty=Tensor[(8, 9, 12), float64] */;
    %264 = @func_1961(%263) /* ty=(Tensor[(8, 9, 12), float64], Tensor[(1, 11, 9), int8], Tensor[(1, 99), int8]) */;
    %265 = power(%258, %259) /* ty=Tensor[(8, 11, 12), float64] */;
    %266 = @func_3598(%261) /* ty=Tensor[(8, 7, 9), float32] */;
    %267 = %264.1;
    (%265, %266, %var_4842, %267, %var_4855)
  };
  %268(%var_4858, %var_4859, %var_4860) /* ty=(Tensor[(8, 11, 12), float64], Tensor[(8, 7, 9), float32], Tensor[(504), float32], Tensor[(1, 11, 9), int8], Tensor[(864), float64]) */
}

def @func_9866(%var_9861: uint32) -> (Tensor[(8, 3, 3), float64], Tensor[(8, 7, 9), float64], Tensor[(1, 504), float64], Tensor[(6, 13, 5), bool], uint32) {
  %269 = @func_9271() /* ty=(Tensor[(1, 11, 9), int8], Tensor[(99), int8], Tensor[(8, 3, 3), float64]) */;
  %270 = cast(meta[relay.Constant][25] /* ty=Tensor[(1, 504), float64] */, dtype="float64") /* ty=Tensor[(1, 504), float64] */;
  %271 = reshape(%270, newshape=[8, 7, 9]) /* ty=Tensor[(8, 7, 9), float64] */;
  %272 = cast(%var_9861, dtype="uint32") /* ty=uint32 */;
  %273 = reshape(%272, newshape=[]) /* ty=uint32 */;
  %274 = %269.2;
  %275 = @func_3648(%271) /* ty=Tensor[(8, 7, 9), float64] */;
  %276 = @func_1402(%273) /* ty=Tensor[(6, 13, 5), bool] */;
  (%274, %275, meta[relay.Constant][25] /* ty=Tensor[(1, 504), float64] */, %276, %var_9861)
}

def @func_10075() -> (Tensor[(8, 3, 3), float32], Tensor[(8, 3, 3), float64]) {
  %277 = @func_8639() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %278 = %277.0;
  %279 = @func_9906() /* ty=Tensor[(8, 3, 3), float64] */;
  (%278, %279)
}

def @func_12694() -> Tensor[(8, 3, 3), float32] {
  @func_12692() /* ty=Tensor[(8, 3, 3), float32] */
}

def @func_561(%var_559: Tensor[(4, 14, 11), float64]) -> (Tensor[(4, 14, 11), float64], Tensor[(11, 2, 4), float64], Tensor[(88, 1), float64]) {
  @func_558(%var_559) /* ty=(Tensor[(4, 14, 11), float64], Tensor[(11, 2, 4), float64], Tensor[(88, 1), float64]) */
}

def @func_13086() -> Tensor[(8, 3, 3), float32] {
  %281 = fn () -> Tensor[(8, 3, 3), float32] {
    %280 = @func_8639() /* ty=(Tensor[(8, 3, 3), float32],) */;
    %280.0
  };
  %281() /* ty=Tensor[(8, 3, 3), float32] */
}

def @func_10866(%var_10729: Tensor[(1008), float32], %var_10740: uint32, %var_10742: Tensor[(36, 24), float64], %var_10774: Tensor[(462, 3), bool], %var_10790: Tensor[(15), float64], %var_10793: Tensor[(504, 7), float32], %var_10801: Tensor[(36, 24), float32]) -> (Tensor[(8, 3, 3), float32], Tensor[(9, 16, 7), float32], Tensor[(1008), float32], uint32, uint32, Tensor[(1152), uint8], uint32, Tensor[(6, 13, 5), bool], Tensor[(1, 1008), float32], Tensor[(16), int32], Tensor[(9, 11, 14), bool], Tensor[(462, 3), bool], Tensor[(15), float64], Tensor[(600), uint8], Tensor[(504, 7), bool], Tensor[(11, 2, 4), bool], Tensor[(36, 24), bool], Tensor[(36, 24), float64], Tensor[(36, 24), bool]) {
  %282 = cast(%var_10729, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %283 = reshape(%282, newshape=[9, 16, 7]) /* ty=Tensor[(9, 16, 7), float32] */;
  %284 = @func_10246(%283) /* ty=(Tensor[(9, 16, 7), float32],) */;
  %285 = cast(%var_10740, dtype="uint32") /* ty=uint32 */;
  %286 = cast(meta[relay.Constant][26] /* ty=Tensor[(1152), uint8] */, dtype="uint8") /* ty=Tensor[(1152), uint8] */;
  %287 = cast(%var_10742, dtype="float64") /* ty=Tensor[(36, 24), float64] */;
  %288 = reshape(%285, newshape=[]) /* ty=uint32 */;
  %289 = reshape(%286, newshape=[1152]) /* ty=Tensor[(1152), uint8] */;
  %290 = reshape(%287, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %291 = @func_10693(%288, %289, %290) /* ty=(Tensor[(8, 3, 3), float32], uint32, Tensor[(360), float32], uint32, Tensor[(1152), uint8], Tensor[(1, 11, 9), int8], Tensor[(864), float64]) */;
  %292 = cast(%var_10740, dtype="uint32") /* ty=uint32 */;
  %293 = reshape(%292, newshape=[]) /* ty=uint32 */;
  %294 = @func_9866(%293) /* ty=(Tensor[(8, 3, 3), float64], Tensor[(8, 7, 9), float64], Tensor[(1, 504), float64], Tensor[(6, 13, 5), bool], uint32) */;
  %295 = %294.4;
  %296 = cast(%295, dtype="uint32") /* ty=uint32 */;
  %297 = reshape(%296, newshape=[]) /* ty=uint32 */;
  %298 = %291.1;
  %299 = cast(%298, dtype="int32") /* ty=int32 */;
  %300 = cast(meta[relay.Constant][27] /* ty=Tensor[(16), int32] */, dtype="int32") /* ty=Tensor[(16), int32] */;
  %301 = cast(%var_10729, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %302 = reshape(%299, newshape=[]) /* ty=int32 */;
  %303 = reshape(%300, newshape=[16, 1]) /* ty=Tensor[(16, 1), int32] */;
  %304 = reshape(%301, newshape=[1, 1008]) /* ty=Tensor[(1, 1008), float32] */;
  %305 = @func_5317(%302, %303, %304) /* ty=(Tensor[(16, 1), int32], Tensor[(8, 14, 9), float32], Tensor[(1, 1008), float32]) */;
  %306 = cast(%295, dtype="bool") /* ty=bool */;
  %307 = cast(%var_10774, dtype="bool") /* ty=Tensor[(462, 3), bool] */;
  %308 = reshape(%306, newshape=[]) /* ty=bool */;
  %309 = reshape(%307, newshape=[9, 11, 14]) /* ty=Tensor[(9, 11, 14), bool] */;
  %310 = @func_7372(%308, %309) /* ty=(Tensor[(9, 11, 14), bool],) */;
  %311 = cast(%var_10790, dtype="float64") /* ty=Tensor[(15), float64] */;
  %312 = cast(meta[relay.Constant][28] /* ty=Tensor[(600), uint8] */, dtype="uint8") /* ty=Tensor[(600), uint8] */;
  %313 = reshape(%311, newshape=[1, 3, 5]) /* ty=Tensor[(1, 3, 5), float64] */;
  %314 = reshape(%312, newshape=[600]) /* ty=Tensor[(600), uint8] */;
  %315 = @func_7194(%313, %314) /* ty=(Tensor[(?, 3, 5), bool], Tensor[(15, 4, 10), bool], Tensor[(600), uint8], Tensor[(8, 7, 9), float32], Tensor[(504, 1), float32]) */;
  %316 = %315.4;
  %317 = cast(%316, dtype="bool") /* ty=Tensor[(504, 1), bool] */;
  %318 = cast(%var_10793, dtype="bool") /* ty=Tensor[(504, 7), bool] */;
  %319 = cast(meta[relay.Constant][28] /* ty=Tensor[(600), uint8] */, dtype="uint8") /* ty=Tensor[(600), uint8] */;
  %320 = reshape(%319, newshape=[15, 4, 10]) /* ty=Tensor[(15, 4, 10), uint8] */;
  %321 = @func_167(%320) /* ty=(Tensor[(15, 4, 10), bool], Tensor[(11, 2, 4), bool], Tensor[(44, 2), float64]) */;
  %322 = cast(%var_10742, dtype="float64") /* ty=Tensor[(36, 24), float64] */;
  %323 = erf(%322) /* ty=Tensor[(36, 24), float64] */;
  %324 = cast(%323, dtype="float32") /* ty=Tensor[(36, 24), float32] */;
  %325 = atanh(%324) /* ty=Tensor[(36, 24), float32] */;
  %326 = cast(%325, dtype="float32") /* ty=Tensor[(36, 24), float32] */;
  %327 = exp(%326) /* ty=Tensor[(36, 24), float32] */;
  %328 = cast(%var_10801, dtype="int64") /* ty=Tensor[(36, 24), int64] */;
  %329 = shape_of(%327, dtype="int32") /* ty=Tensor[(2), int32] */;
  %330 = cast(%327, dtype="int64") /* ty=Tensor[(36, 24), int64] */;
  %331 = dyn.reshape(%328, %329, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %332 = left_shift(%330, %331) /* ty=Tensor[(36, 24), int64] */;
  %333 = cast(%332, dtype="int8") /* ty=Tensor[(36, 24), int8] */;
  %334 = shape_of(%327, dtype="int32") /* ty=Tensor[(2), int32] */;
  %335 = cast(%327, dtype="int8") /* ty=Tensor[(36, 24), int8] */;
  %336 = dyn.reshape(%333, %334, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %337 = maximum(%335, %336) /* ty=Tensor[(36, 24), int8] */;
  %338 = cast(%337, dtype="bool") /* ty=Tensor[(36, 24), bool] */;
  %339 = shape_of(%332, dtype="int32") /* ty=Tensor[(2), int32] */;
  %340 = cast(%332, dtype="bool") /* ty=Tensor[(36, 24), bool] */;
  %341 = dyn.reshape(%338, %339, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %342 = cast(%332, dtype="float32") /* ty=Tensor[(36, 24), float32] */;
  %343 = sinh(%342) /* ty=Tensor[(36, 24), float32] */;
  %344 = cast(%343, dtype="float64") /* ty=Tensor[(36, 24), float64] */;
  %345 = cast(%325, dtype="bool") /* ty=Tensor[(36, 24), bool] */;
  %346 = shape_of(%343, dtype="int32") /* ty=Tensor[(2), int32] */;
  %347 = cast(%343, dtype="bool") /* ty=Tensor[(36, 24), bool] */;
  %348 = dyn.reshape(%345, %346, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %349 = @func_10420() /* ty=Tensor[(8, 3, 3), float32] */;
  %350 = %284.0;
  %351 = @func_1402(%297) /* ty=Tensor[(6, 13, 5), bool] */;
  %352 = %305.2;
  %353 = %310.0;
  %354 = logical_or(%317, %318) /* ty=Tensor[(504, 7), bool] */;
  %355 = %321.1;
  %356 = not_equal(%340, %341) /* ty=Tensor[(36, 24), bool] */;
  %357 = atan(%344) /* ty=Tensor[(36, 24), float64] */;
  %358 = greater(%347, %348) /* ty=Tensor[(36, 24), bool] */;
  (%349, %350, %var_10729, %298, %var_10740, meta[relay.Constant][26] /* ty=Tensor[(1152), uint8] */, %295, %351, %352, meta[relay.Constant][27] /* ty=Tensor[(16), int32] */, %353, %var_10774, %var_10790, meta[relay.Constant][28] /* ty=Tensor[(600), uint8] */, %354, %355, %356, %357, %358)
}

def @func_8576(%var_8575: Tensor[(13, 14, 4), uint16]) -> (Tensor[(13, 14, 4), uint16], Tensor[(6, 13, 5), bool], uint32) {
  %367 = fn (%var_8555: Tensor[(13, 14, 4), uint16]) -> (Tensor[(13, 14, 4), uint16], Tensor[(6, 13, 5), bool], uint32) {
    %359 = cast(%var_8555, dtype="uint16") /* ty=Tensor[(13, 14, 4), uint16] */;
    %360 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(13, 14, 4), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %361 = cast(meta[relay.Constant][29] /* ty=Tensor[(13, 14, 4), uint16] */, dtype="uint16") /* ty=Tensor[(13, 14, 4), uint16] */;
    %362 = dyn.reshape(%359, %360, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %363 = cast(meta[relay.Constant][30] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %364 = reshape(%363, newshape=[]) /* ty=uint32 */;
    %365 = bitwise_or(%361, %362) /* ty=Tensor[(13, 14, 4), uint16] */;
    %366 = @func_1402(%364) /* ty=Tensor[(6, 13, 5), bool] */;
    (%365, %366, meta[relay.Constant][30] /* ty=uint32 */)
  };
  %367(%var_8575) /* ty=(Tensor[(13, 14, 4), uint16], Tensor[(6, 13, 5), bool], uint32) */
}

def @func_7194(%var_7145: Tensor[(1, 3, 5), float64], %var_7168: Tensor[(600), uint8]) -> (Tensor[(?, 3, 5), bool], Tensor[(15, 4, 10), bool], Tensor[(600), uint8], Tensor[(8, 7, 9), float32], Tensor[(504, 1), float32]) {
  %368 = cast(8.59185f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %369 = cast(%var_7145, dtype="float64") /* ty=Tensor[(1, 3, 5), float64] */;
  %370 = power(%368, %369) /* ty=Tensor[(1, 3, 5), float64] */;
  %371 = cast(%370, dtype="bool") /* ty=Tensor[(1, 3, 5), bool] */;
  %372 = shape_of(%var_7145, dtype="int32") /* ty=Tensor[(3), int32] */;
  %373 = cast(%var_7145, dtype="bool") /* ty=Tensor[(1, 3, 5), bool] */;
  %374 = dyn.reshape(%371, %372, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %375 = cast(%var_7168, dtype="uint8") /* ty=Tensor[(600), uint8] */;
  %376 = reshape(%375, newshape=[15, 4, 10]) /* ty=Tensor[(15, 4, 10), uint8] */;
  %377 = @func_167(%376) /* ty=(Tensor[(15, 4, 10), bool], Tensor[(11, 2, 4), bool], Tensor[(44, 2), float64]) */;
  %378 = cast(meta[relay.Constant][31] /* ty=Tensor[(504, 1), float32] */, dtype="float32") /* ty=Tensor[(504, 1), float32] */;
  %379 = reshape(%378, newshape=[8, 7, 9]) /* ty=Tensor[(8, 7, 9), float32] */;
  %380 = less(%373, %374) /* ty=Tensor[(?, 3, 5), bool] */;
  %381 = %377.0;
  %382 = @func_3598(%379) /* ty=Tensor[(8, 7, 9), float32] */;
  (%380, %381, %var_7168, %382, meta[relay.Constant][31] /* ty=Tensor[(504, 1), float32] */)
}

def @func_12994(%var_12992: int64, %var_12993: Tensor[(4, 11, 7), int64]) -> (Tensor[(4, 11, 7), int64], Tensor[(8, 3, 3), int64], Tensor[(72), float32]) {
  @func_12990(%var_12992, %var_12993) /* ty=(Tensor[(4, 11, 7), int64], Tensor[(8, 3, 3), int64], Tensor[(72), float32]) */
}

def @func_10574(%var_10572: uint32) -> (Tensor[(8, 3, 3), float32], Tensor[(6, 13, 5), bool], uint32) {
  @func_10571(%var_10572) /* ty=(Tensor[(8, 3, 3), float32], Tensor[(6, 13, 5), bool], uint32) */
}

def @func_12297() -> (Tensor[(8, 3, 3), float32],) {
  %383 = @func_9123() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %384 = %383.0;
  (%384,)
}

def @func_5321(%var_5318: int32, %var_5319: Tensor[(16, 1), int32], %var_5320: Tensor[(1, 1008), float32]) -> (Tensor[(16, 1), int32], Tensor[(8, 14, 9), float32], Tensor[(1, 1008), float32]) {
  %394 = fn (%var_5277: int32, %var_5278: Tensor[(16, 1), int32], %var_5297: Tensor[(1, 1008), float32]) -> (Tensor[(16, 1), int32], Tensor[(8, 14, 9), float32], Tensor[(1, 1008), float32]) {
    %385 = cast(%var_5277, dtype="int32") /* ty=int32 */;
    %386 = cast(%var_5278, dtype="int32") /* ty=Tensor[(16, 1), int32] */;
    %387 = cast(%var_5297, dtype="float32") /* ty=Tensor[(1, 1008), float32] */;
    %388 = cast(%var_5277, dtype="uint32") /* ty=uint32 */;
    %389 = reshape(%387, newshape=[8, 14, 9]) /* ty=Tensor[(8, 14, 9), float32] */;
    %390 = reshape(%388, newshape=[]) /* ty=uint32 */;
    %391 = @func_4277(%389, %390) /* ty=(Tensor[(8, 14, 9), float32], Tensor[(6, 13, 5), bool], uint32) */;
    %392 = left_shift(%385, %386) /* ty=Tensor[(16, 1), int32] */;
    %393 = %391.0;
    (%392, %393, %var_5297)
  };
  %394(%var_5318, %var_5319, %var_5320) /* ty=(Tensor[(16, 1), int32], Tensor[(8, 14, 9), float32], Tensor[(1, 1008), float32]) */
}

def @func_5996(%var_5994: Tensor[(3, 10, 12), float32], %var_5995: uint32) -> (Tensor[(3, 10, 12), float32], Tensor[(3, 10, 12), float32], Tensor[(11, 2, 4), int32], Tensor[(84), float32], uint32, Tensor[(12, 50), uint8]) {
  %410 = fn (%var_5973: Tensor[(3, 10, 12), float32], %var_5990: uint32) -> (Tensor[(3, 10, 12), float32], Tensor[(3, 10, 12), float32], Tensor[(11, 2, 4), int32], Tensor[(84), float32], uint32, Tensor[(12, 50), uint8]) {
    %395 = cast(meta[relay.Constant][32] /* ty=Tensor[(3, 10, 12), float32] */, dtype="float32") /* ty=Tensor[(3, 10, 12), float32] */;
    %396 = shape_of(%var_5973, dtype="int32") /* ty=Tensor[(3), int32] */;
    %397 = cast(%var_5973, dtype="float32") /* ty=Tensor[(3, 10, 12), float32] */;
    %398 = dyn.reshape(%395, %396, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %399 = cast(%var_5973, dtype="float32") /* ty=Tensor[(3, 10, 12), float32] */;
    %400 = cast(meta[relay.Constant][33] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
    %401 = cast(%var_5990, dtype="uint32") /* ty=uint32 */;
    %402 = cast(meta[relay.Constant][34] /* ty=Tensor[(12, 50), uint8] */, dtype="uint8") /* ty=Tensor[(12, 50), uint8] */;
    %403 = reshape(%400, newshape=[6, 14, 1]) /* ty=Tensor[(6, 14, 1), float32] */;
    %404 = reshape(%401, newshape=[]) /* ty=uint32 */;
    %405 = reshape(%402, newshape=[600]) /* ty=Tensor[(600), uint8] */;
    %406 = @func_1633(%403, %404, %405) /* ty=(Tensor[(6, 13, 5), bool], Tensor[(6, 13, 5), bool], Tensor[(11, 2, 4), float64], Tensor[(616), float64], Tensor[(11, 2, 4), int32], Tensor[(6, 14, 1), float64], Tensor[(11, 2, 4), bool], Tensor[(600), uint8]) */;
    %407 = power(%397, %398) /* ty=Tensor[(3, 10, 12), float32] */;
    %408 = sigmoid(%399) /* ty=Tensor[(3, 10, 12), float32] */;
    %409 = %406.4;
    (%407, %408, %409, meta[relay.Constant][33] /* ty=Tensor[(84), float32] */, %var_5990, meta[relay.Constant][34] /* ty=Tensor[(12, 50), uint8] */)
  };
  %410(%var_5994, %var_5995) /* ty=(Tensor[(3, 10, 12), float32], Tensor[(3, 10, 12), float32], Tensor[(11, 2, 4), int32], Tensor[(84), float32], uint32, Tensor[(12, 50), uint8]) */
}

def @func_12391(%var_12389: uint8, %var_12390: Tensor[(1, 2, 7), uint8]) -> (Tensor[(1, 2, 7), uint8],) {
  @func_12387(%var_12389, %var_12390) /* ty=(Tensor[(1, 2, 7), uint8],) */
}

def @func_11855() -> (Tensor[(8, 3, 3), float32],) {
  %413 = fn () -> (Tensor[(8, 3, 3), float32],) {
    %411 = @func_10075() /* ty=(Tensor[(8, 3, 3), float32], Tensor[(8, 3, 3), float64]) */;
    %412 = %411.0;
    (%412,)
  };
  %413() /* ty=(Tensor[(8, 3, 3), float32],) */
}

def @func_11129() -> (Tensor[(8, 3, 3), float32], Tensor[(8, 7, 9), float32], Tensor[(504), float32]) {
  %414 = @func_9135() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %415 = cast(meta[relay.Constant][35] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %416 = reshape(%415, newshape=[8, 7, 9]) /* ty=Tensor[(8, 7, 9), float32] */;
  %417 = %414.0;
  %418 = @func_3598(%416) /* ty=Tensor[(8, 7, 9), float32] */;
  (%417, %418, meta[relay.Constant][35] /* ty=Tensor[(504), float32] */)
}

def @func_10543(%var_10530: Tensor[(70), float32], %var_10538: Tensor[(117), bool], %var_10539: Tensor[(84), float32], %var_10540: uint32) -> (Tensor[(8, 3, 3), float32], Tensor[(8, 3, 3), float64], Tensor[(7, 2, 5), float32], Tensor[(70), float32], Tensor[(600), uint8], Tensor[(117), bool], Tensor[(84), float32], uint32) {
  %419 = @func_9123() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %420 = cast(%var_10530, dtype="float32") /* ty=Tensor[(70), float32] */;
  %421 = reshape(%420, newshape=[7, 2, 5]) /* ty=Tensor[(7, 2, 5), float32] */;
  %422 = cast(%var_10538, dtype="bool") /* ty=Tensor[(117), bool] */;
  %423 = cast(%var_10539, dtype="float32") /* ty=Tensor[(84), float32] */;
  %424 = cast(%var_10540, dtype="uint32") /* ty=uint32 */;
  %425 = reshape(%422, newshape=[1, 13, 9]) /* ty=Tensor[(1, 13, 9), bool] */;
  %426 = reshape(%423, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %427 = reshape(%424, newshape=[]) /* ty=uint32 */;
  %428 = @func_4391(%425, %426, %427) /* ty=(Tensor[(2, 13, 9), bool], Tensor[(1, 13, 9), float32], Tensor[(616), float64], Tensor[(84), float32], uint32, Tensor[(600), uint8]) */;
  %429 = %419.0;
  %430 = @func_9906() /* ty=Tensor[(8, 3, 3), float64] */;
  %431 = @func_7739(%421) /* ty=Tensor[(7, 2, 5), float32] */;
  %432 = %428.5;
  (%429, %430, %431, %var_10530, %432, %var_10538, %var_10539, %var_10540)
}

def @func_9593(%var_9591: uint32) -> (Tensor[(8, 3, 3), float32], Tensor[(6, 13, 5), bool], uint32) {
  @func_9590(%var_9591) /* ty=(Tensor[(8, 3, 3), float32], Tensor[(6, 13, 5), bool], uint32) */
}

def @func_10004() -> Tensor[(8, 3, 3), float32] {
  %434 = fn () -> Tensor[(8, 3, 3), float32] {
    %433 = @func_9670() /* ty=(Tensor[(8, 3, 3), float32],) */;
    %433.0
  };
  %434() /* ty=Tensor[(8, 3, 3), float32] */
}

def @func_11773() -> Tensor[(504), float32] {
  %435 = @func_11129() /* ty=(Tensor[(8, 3, 3), float32], Tensor[(8, 7, 9), float32], Tensor[(504), float32]) */;
  %435.2
}

def @func_12078(%var_12074: Tensor[(1, 8, 16), float64], %var_12075: Tensor[(1056), float64], %var_12076: Tensor[(117), bool], %var_12077: Tensor[(2, 300), uint8]) -> (Tensor[(16, 11, 6), float64], Tensor[(1056), float64], Tensor[(8, 3, 3), float32], Tensor[(70), float32], Tensor[(1, 8, 16), float64], Tensor[(70), float32], Tensor[(117), bool], Tensor[(84), float32], uint32, Tensor[(616), float64], Tensor[(2, 300), uint8]) {
  @func_12072(%var_12074, %var_12075, %var_12076, %var_12077) /* ty=(Tensor[(16, 11, 6), float64], Tensor[(1056), float64], Tensor[(8, 3, 3), float32], Tensor[(70), float32], Tensor[(1, 8, 16), float64], Tensor[(70), float32], Tensor[(117), bool], Tensor[(84), float32], uint32, Tensor[(616), float64], Tensor[(2, 300), uint8]) */
}

def @func_9188(%var_9173: Tensor[(14), float64], %var_9174: Tensor[(1, 96), float64], %var_9175: Tensor[(286), float64], %var_9180: Tensor[(2, 96), float64]) -> (Tensor[(8, 3, 3), float32], Tensor[(8, 3, 3), float32], Tensor[(504), float32], Tensor[(14), float64], Tensor[(286), float64], Tensor[(2, 96), bool]) {
  %436 = @func_9135() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %437 = cast(%var_9173, dtype="float64") /* ty=Tensor[(14), float64] */;
  %438 = cast(%var_9174, dtype="float64") /* ty=Tensor[(1, 96), float64] */;
  %439 = cast(%var_9175, dtype="float64") /* ty=Tensor[(286), float64] */;
  %440 = reshape(%437, newshape=[1, 1, 14]) /* ty=Tensor[(1, 1, 14), float64] */;
  %441 = reshape(%438, newshape=[96, 1]) /* ty=Tensor[(96, 1), float64] */;
  %442 = reshape(%439, newshape=[286]) /* ty=Tensor[(286), float64] */;
  %443 = @func_6204(%440, %441, %442) /* ty=(Tensor[(8, 7, 9), float32], Tensor[(504), float32], Tensor[(864), float64], Tensor[(2, 11, 13), float64], Tensor[(286), float64], Tensor[(1, 11, 9), int8], Tensor[(1, 96, 14), uint32]) */;
  %444 = cast(%var_9174, dtype="bool") /* ty=Tensor[(1, 96), bool] */;
  %445 = cast(%var_9180, dtype="bool") /* ty=Tensor[(2, 96), bool] */;
  %446 = @func_8681() /* ty=Tensor[(8, 3, 3), float32] */;
  %447 = %436.0;
  %448 = %443.1;
  %449 = logical_or(%444, %445) /* ty=Tensor[(2, 96), bool] */;
  (%446, %447, %448, %var_9173, %var_9175, %449)
}

def @func_10663(%var_10651: Tensor[(14, 1), float64], %var_10652: Tensor[(96), float64]) -> (Tensor[(8, 3, 3), float32], Tensor[(96), float64], Tensor[(286), float64], Tensor[(14, 504), uint16]) {
  %450 = @func_9123() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %451 = cast(%var_10651, dtype="float64") /* ty=Tensor[(14, 1), float64] */;
  %452 = cast(%var_10652, dtype="float64") /* ty=Tensor[(96), float64] */;
  %453 = cast(meta[relay.Constant][36] /* ty=Tensor[(286), float64] */, dtype="float64") /* ty=Tensor[(286), float64] */;
  %454 = reshape(%451, newshape=[1, 1, 14]) /* ty=Tensor[(1, 1, 14), float64] */;
  %455 = reshape(%452, newshape=[96, 1]) /* ty=Tensor[(96, 1), float64] */;
  %456 = reshape(%453, newshape=[286]) /* ty=Tensor[(286), float64] */;
  %457 = @func_6204(%454, %455, %456) /* ty=(Tensor[(8, 7, 9), float32], Tensor[(504), float32], Tensor[(864), float64], Tensor[(2, 11, 13), float64], Tensor[(286), float64], Tensor[(1, 11, 9), int8], Tensor[(1, 96, 14), uint32]) */;
  %458 = %457.1;
  %459 = cast(%458, dtype="uint16") /* ty=Tensor[(504), uint16] */;
  %460 = cast(%var_10651, dtype="uint16") /* ty=Tensor[(14, 1), uint16] */;
  %461 = %450.0;
  %462 = bitwise_xor(%459, %460) /* ty=Tensor[(14, 504), uint16] */;
  (%461, %var_10652, meta[relay.Constant][36] /* ty=Tensor[(286), float64] */, %462)
}

def @func_11979(%var_11978: uint32) -> (Tensor[(8, 3, 3), float32], Tensor[(84), float32], Tensor[(70), float32], Tensor[(117), bool], Tensor[(84), float32], uint32) {
  %475 = fn (%var_11969: uint32) -> (Tensor[(8, 3, 3), float32], Tensor[(84), float32], Tensor[(70), float32], Tensor[(117), bool], Tensor[(84), float32], uint32) {
    %463 = @func_10894() /* ty=(Tensor[(8, 3, 3), float32], Tensor[(8, 9, 12), float64], Tensor[(864), float64]) */;
    %464 = cast(meta[relay.Constant][37] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
    %465 = cast(meta[relay.Constant][38] /* ty=Tensor[(117), bool] */, dtype="bool") /* ty=Tensor[(117), bool] */;
    %466 = cast(meta[relay.Constant][39] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
    %467 = cast(%var_11969, dtype="uint32") /* ty=uint32 */;
    %468 = reshape(%464, newshape=[70]) /* ty=Tensor[(70), float32] */;
    %469 = reshape(%465, newshape=[117]) /* ty=Tensor[(117), bool] */;
    %470 = reshape(%466, newshape=[84]) /* ty=Tensor[(84), float32] */;
    %471 = reshape(%467, newshape=[]) /* ty=uint32 */;
    %472 = @func_10543(%468, %469, %470, %471) /* ty=(Tensor[(8, 3, 3), float32], Tensor[(8, 3, 3), float64], Tensor[(7, 2, 5), float32], Tensor[(70), float32], Tensor[(600), uint8], Tensor[(117), bool], Tensor[(84), float32], uint32) */;
    %473 = %463.0;
    %474 = %472.6;
    (%473, %474, meta[relay.Constant][37] /* ty=Tensor[(70), float32] */, meta[relay.Constant][38] /* ty=Tensor[(117), bool] */, meta[relay.Constant][39] /* ty=Tensor[(84), float32] */, %var_11969)
  };
  %475(%var_11978) /* ty=(Tensor[(8, 3, 3), float32], Tensor[(84), float32], Tensor[(70), float32], Tensor[(117), bool], Tensor[(84), float32], uint32) */
}

def @func_3601(%var_3599: Tensor[(8, 7, 9), float32]) -> Tensor[(8, 7, 9), float32] {
  @func_3598(%var_3599) /* ty=Tensor[(8, 7, 9), float32] */
}

def @func_9629(%var_9627: Tensor[(864), float64]) -> (Tensor[(8, 3, 3), float32], uint32, uint32, Tensor[(105), float32], Tensor[(864), float64], Tensor[(?, 99), bool]) {
  @func_9626(%var_9627) /* ty=(Tensor[(8, 3, 3), float32], uint32, uint32, Tensor[(105), float32], Tensor[(864), float64], Tensor[(?, 99), bool]) */
}

def @func_12507(%var_12504: Tensor[(84), float32], %var_12505: uint32, %var_12506: Tensor[(600), uint8]) -> (Tensor[(7, 2, 5), float32], Tensor[(11, 2, 4), bool], Tensor[(84), float32], uint32, Tensor[(600), uint8]) {
  @func_12502(%var_12504, %var_12505, %var_12506) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(11, 2, 4), bool], Tensor[(84), float32], uint32, Tensor[(600), uint8]) */
}

def @func_11046(%var_11044: Tensor[(88, 16), float64], %var_11045: Tensor[(504), float32]) -> (Tensor[(8, 3, 3), float32], Tensor[(616), float64], Tensor[(15, 4, 10), bool], Tensor[(88, 16), bool], Tensor[(8, 7, 9), float32], Tensor[(504), float32]) {
  %490 = fn (%var_11030: Tensor[(88, 16), float64], %var_11036: Tensor[(504), float32]) -> (Tensor[(8, 3, 3), float32], Tensor[(616), float64], Tensor[(15, 4, 10), bool], Tensor[(88, 16), bool], Tensor[(8, 7, 9), float32], Tensor[(504), float32]) {
    %476 = @func_9123() /* ty=(Tensor[(8, 3, 3), float32],) */;
    %477 = @func_9154() /* ty=(Tensor[(8, 3, 3), float32], Tensor[(15, 4, 10), bool], Tensor[(600), uint8], Tensor[(8, 3, 3), float32]) */;
    %478 = cast(meta[relay.Constant][40] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
    %479 = reshape(%478, newshape=[4, 14, 11]) /* ty=Tensor[(4, 14, 11), float64] */;
    %480 = @func_558(%479) /* ty=(Tensor[(4, 14, 11), float64], Tensor[(11, 2, 4), float64], Tensor[(88, 1), float64]) */;
    %481 = %480.2;
    %482 = cast(%481, dtype="bool") /* ty=Tensor[(88, 1), bool] */;
    %483 = cast(%var_11030, dtype="bool") /* ty=Tensor[(88, 16), bool] */;
    %484 = cast(%var_11036, dtype="float32") /* ty=Tensor[(504), float32] */;
    %485 = reshape(%484, newshape=[8, 7, 9]) /* ty=Tensor[(8, 7, 9), float32] */;
    %486 = %476.0;
    %487 = %477.1;
    %488 = logical_and(%482, %483) /* ty=Tensor[(88, 16), bool] */;
    %489 = @func_3598(%485) /* ty=Tensor[(8, 7, 9), float32] */;
    (%486, meta[relay.Constant][40] /* ty=Tensor[(616), float64] */, %487, %488, %489, %var_11036)
  };
  %490(%var_11044, %var_11045) /* ty=(Tensor[(8, 3, 3), float32], Tensor[(616), float64], Tensor[(15, 4, 10), bool], Tensor[(88, 16), bool], Tensor[(8, 7, 9), float32], Tensor[(504), float32]) */
}

def @func_12358() -> Tensor[(7, 2, 5), float32] {
  %492 = fn () -> Tensor[(7, 2, 5), float32] {
    %491 = @func_10466() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(70), float32], Tensor[(8, 3, 3), float64]) */;
    %491.0
  };
  %492() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_1879(%var_1877: Tensor[(1, 11, 9), int8]) -> Tensor[(1, 11, 9), int8] {
  @func_1876(%var_1877) /* ty=Tensor[(1, 11, 9), int8] */
}

def @func_12430() -> Tensor[(8, 3, 3), float64] {
  @func_11427() /* ty=Tensor[(8, 3, 3), float64] */
}

def @func_3598(%var_3588: Tensor[(8, 7, 9), float32]) -> Tensor[(8, 7, 9), float32] {
  %493 = cast(%var_3588, dtype="float32") /* ty=Tensor[(8, 7, 9), float32] */;
  %494 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(8, 7, 9), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %495 = cast(meta[relay.Constant][41] /* ty=Tensor[(8, 7, 9), float32] */, dtype="float32") /* ty=Tensor[(8, 7, 9), float32] */;
  %496 = dyn.reshape(%493, %494, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%495, %496) /* ty=Tensor[(8, 7, 9), float32] */
}

def @func_9658(%var_9656: Tensor[(7, 12, 13), float64], %var_9657: Tensor[(7, 12, 13), float64]) -> (Tensor[(7, 12, 13), int8],) {
  @func_9654(%var_9656, %var_9657) /* ty=(Tensor[(7, 12, 13), int8],) */
}

def @func_10693(%var_10679: uint32, %var_10680: Tensor[(1152), uint8], %var_10690: Tensor[(864), float64]) -> (Tensor[(8, 3, 3), float32], uint32, Tensor[(360), float32], uint32, Tensor[(1152), uint8], Tensor[(1, 11, 9), int8], Tensor[(864), float64]) {
  %497 = cast(meta[relay.Constant][42] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %498 = cast(%var_10679, dtype="uint32") /* ty=uint32 */;
  %499 = cast(%var_10680, dtype="uint8") /* ty=Tensor[(1152), uint8] */;
  %500 = reshape(%497, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %501 = reshape(%498, newshape=[]) /* ty=uint32 */;
  %502 = reshape(%499, newshape=[1152]) /* ty=Tensor[(1152), uint8] */;
  %503 = @func_9811(%500, %501, %502) /* ty=(Tensor[(8, 3, 3), float32], Tensor[(360), float32], uint32, Tensor[(112), int64], Tensor[(1152), uint8], Tensor[(7, 12, 13), int8], uint32, Tensor[(728), uint16], Tensor[(1092), uint64]) */;
  %504 = cast(%var_10690, dtype="float64") /* ty=Tensor[(864), float64] */;
  %505 = reshape(%504, newshape=[8, 9, 12]) /* ty=Tensor[(8, 9, 12), float64] */;
  %506 = @func_1961(%505) /* ty=(Tensor[(8, 9, 12), float64], Tensor[(1, 11, 9), int8], Tensor[(1, 99), int8]) */;
  %507 = @func_10420() /* ty=Tensor[(8, 3, 3), float32] */;
  %508 = %503.6;
  %509 = %506.1;
  (%507, %508, meta[relay.Constant][42] /* ty=Tensor[(360), float32] */, %var_10679, %var_10680, %509, %var_10690)
}

def @func_5261(%var_5244: Tensor[(12, 3, 15), uint32]) -> Tensor[(12, 3, 15), uint32] {
  %510 = cast(meta[relay.Constant][43] /* ty=Tensor[(12, 3, 15), uint32] */, dtype="uint32") /* ty=Tensor[(12, 3, 15), uint32] */;
  %511 = shape_of(%var_5244, dtype="int32") /* ty=Tensor[(3), int32] */;
  %512 = cast(%var_5244, dtype="uint32") /* ty=Tensor[(12, 3, 15), uint32] */;
  %513 = dyn.reshape(%510, %511, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  bitwise_or(%512, %513) /* ty=Tensor[(12, 3, 15), uint32] */
}

def @func_11131() -> (Tensor[(8, 3, 3), float32], Tensor[(8, 7, 9), float32], Tensor[(504), float32]) {
  @func_11129() /* ty=(Tensor[(8, 3, 3), float32], Tensor[(8, 7, 9), float32], Tensor[(504), float32]) */
}

def @func_9887(%var_9885: Tensor[(24, 6), float64]) -> (Tensor[(8, 3, 3), float64], Tensor[(14, 15, 7), float64], Tensor[(24, 6), float64]) {
  @func_9884(%var_9885) /* ty=(Tensor[(8, 3, 3), float64], Tensor[(14, 15, 7), float64], Tensor[(24, 6), float64]) */
}

def @func_9137() -> (Tensor[(8, 3, 3), float32],) {
  @func_9135() /* ty=(Tensor[(8, 3, 3), float32],) */
}

def @func_9440(%var_9439: Tensor[(16, 16, 5), float32]) -> (Tensor[(16, 16, 5), float32],) {
  %516 = fn (%var_9419: Tensor[(16, 16, 5), float32]) -> (Tensor[(16, 16, 5), float32],) {
    %514 = cast(%var_9419, dtype="float32") /* ty=Tensor[(16, 16, 5), float32] */;
    %515 = cos(%514) /* ty=Tensor[(16, 16, 5), float32] */;
    (%515,)
  };
  %516(%var_9439) /* ty=(Tensor[(16, 16, 5), float32],) */
}

def @func_1638(%var_1635: Tensor[(6, 14, 1), float32], %var_1636: uint32, %var_1637: Tensor[(600), uint8]) -> (Tensor[(6, 13, 5), bool], Tensor[(6, 13, 5), bool], Tensor[(11, 2, 4), float64], Tensor[(616), float64], Tensor[(11, 2, 4), int32], Tensor[(6, 14, 1), float64], Tensor[(11, 2, 4), bool], Tensor[(600), uint8]) {
  @func_1633(%var_1635, %var_1636, %var_1637) /* ty=(Tensor[(6, 13, 5), bool], Tensor[(6, 13, 5), bool], Tensor[(11, 2, 4), float64], Tensor[(616), float64], Tensor[(11, 2, 4), int32], Tensor[(6, 14, 1), float64], Tensor[(11, 2, 4), bool], Tensor[(600), uint8]) */
}

def @func_8683() -> Tensor[(8, 3, 3), float32] {
  @func_8681() /* ty=Tensor[(8, 3, 3), float32] */
}

def @func_11723(%var_11719: uint8, %var_11720: Tensor[(4, 288), uint8], %var_11721: Tensor[(8, 3, 3), float32], %var_11722: Tensor[(864), float64]) -> (Tensor[(8, 2, 7), int64], uint8, Tensor[(4, 288), uint8], Tensor[(8, 3, 3), bool], Tensor[(4, 14, 11), float64], Tensor[(21, 5), float32], Tensor[(864), float64]) {
  @func_11717(%var_11719, %var_11720, %var_11721, %var_11722) /* ty=(Tensor[(8, 2, 7), int64], uint8, Tensor[(4, 288), uint8], Tensor[(8, 3, 3), bool], Tensor[(4, 14, 11), float64], Tensor[(21, 5), float32], Tensor[(864), float64]) */
}

def @func_2554(%var_2551: Tensor[(7, 1, 15), float32], %var_2552: Tensor[(864), float64], %var_2553: Tensor[(864), float64]) -> (Tensor[(7, 1, 15), float32], Tensor[(1, 99), int8], Tensor[(864), float32], Tensor[(4, 14, 11), float64], Tensor[(616), float64]) {
  %532 = fn (%var_2526: Tensor[(7, 1, 15), float32], %var_2530: Tensor[(864), float64], %var_2542: Tensor[(864), float64]) -> (Tensor[(7, 1, 15), float32], Tensor[(1, 99), int8], Tensor[(864), float32], Tensor[(4, 14, 11), float64], Tensor[(616), float64]) {
    %517 = cast(%var_2526, dtype="float32") /* ty=Tensor[(7, 1, 15), float32] */;
    %518 = cast(%var_2530, dtype="float64") /* ty=Tensor[(864), float64] */;
    %519 = reshape(%518, newshape=[8, 9, 12]) /* ty=Tensor[(8, 9, 12), float64] */;
    %520 = @func_1961(%519) /* ty=(Tensor[(8, 9, 12), float64], Tensor[(1, 11, 9), int8], Tensor[(1, 99), int8]) */;
    %521 = cast(%var_2542, dtype="float32") /* ty=Tensor[(864), float32] */;
    %522 = shape_of(%var_2530, dtype="int32") /* ty=Tensor[(1), int32] */;
    %523 = cast(%var_2530, dtype="float32") /* ty=Tensor[(864), float32] */;
    %524 = dyn.reshape(%521, %522, newshape=[]) /* ty=Tensor[(?), float32] */;
    %525 = cast(meta[relay.Constant][44] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
    %526 = reshape(%525, newshape=[4, 14, 11]) /* ty=Tensor[(4, 14, 11), float64] */;
    %527 = @func_558(%526) /* ty=(Tensor[(4, 14, 11), float64], Tensor[(11, 2, 4), float64], Tensor[(88, 1), float64]) */;
    %528 = cosh(%517) /* ty=Tensor[(7, 1, 15), float32] */;
    %529 = %520.2;
    %530 = mod(%523, %524) /* ty=Tensor[(864), float32] */;
    %531 = %527.0;
    (%528, %529, %530, %531, meta[relay.Constant][44] /* ty=Tensor[(616), float64] */)
  };
  %532(%var_2551, %var_2552, %var_2553) /* ty=(Tensor[(7, 1, 15), float32], Tensor[(1, 99), int8], Tensor[(864), float32], Tensor[(4, 14, 11), float64], Tensor[(616), float64]) */
}

def @func_2269(%var_2259: Tensor[(2, 11, 13), float64]) -> Tensor[(2, 11, 13), float64] {
  %533 = cast(%var_2259, dtype="float64") /* ty=Tensor[(2, 11, 13), float64] */;
  sigmoid(%533) /* ty=Tensor[(2, 11, 13), float64] */
}

def @func_9626(%var_9606: Tensor[(864), float64]) -> (Tensor[(8, 3, 3), float32], uint32, uint32, Tensor[(105), float32], Tensor[(864), float64], Tensor[(?, 99), bool]) {
  %534 = @func_9135() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %535 = cast(meta[relay.Constant][45] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %536 = reshape(%535, newshape=[]) /* ty=uint32 */;
  %537 = @func_9590(%536) /* ty=(Tensor[(8, 3, 3), float32], Tensor[(6, 13, 5), bool], uint32) */;
  %538 = cast(meta[relay.Constant][46] /* ty=Tensor[(105), float32] */, dtype="float32") /* ty=Tensor[(105), float32] */;
  %539 = cast(%var_9606, dtype="float64") /* ty=Tensor[(864), float64] */;
  %540 = cast(%var_9606, dtype="float64") /* ty=Tensor[(864), float64] */;
  %541 = reshape(%538, newshape=[7, 1, 15]) /* ty=Tensor[(7, 1, 15), float32] */;
  %542 = reshape(%539, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %543 = reshape(%540, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %544 = @func_2550(%541, %542, %543) /* ty=(Tensor[(7, 1, 15), float32], Tensor[(1, 99), int8], Tensor[(864), float32], Tensor[(4, 14, 11), float64], Tensor[(616), float64]) */;
  %545 = %544.1;
  %546 = cast(%545, dtype="float32") /* ty=Tensor[(1, 99), float32] */;
  %547 = sinh(%546) /* ty=Tensor[(1, 99), float32] */;
  %548 = cast(%545, dtype="bool") /* ty=Tensor[(1, 99), bool] */;
  %549 = shape_of(%547, dtype="int32") /* ty=Tensor[(2), int32] */;
  %550 = cast(%547, dtype="bool") /* ty=Tensor[(1, 99), bool] */;
  %551 = dyn.reshape(%548, %549, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %552 = %534.0;
  %553 = %537.2;
  %554 = logical_or(%550, %551) /* ty=Tensor[(?, 99), bool] */;
  (%552, %553, meta[relay.Constant][45] /* ty=uint32 */, meta[relay.Constant][46] /* ty=Tensor[(105), float32] */, %var_9606, %554)
}

def @func_12432() -> Tensor[(8, 3, 3), float64] {
  @func_12430() /* ty=Tensor[(8, 3, 3), float64] */
}

def @func_10467() -> (Tensor[(7, 2, 5), float32], Tensor[(70), float32], Tensor[(8, 3, 3), float64]) {
  %563 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(70), float32], Tensor[(8, 3, 3), float64]) {
    %555 = cast(meta[relay.Constant][47] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
    %556 = reshape(%555, newshape=[7, 2, 5]) /* ty=Tensor[(7, 2, 5), float32] */;
    %557 = @func_8681() /* ty=Tensor[(8, 3, 3), float32] */;
    %558 = cast(%557, dtype="float64") /* ty=Tensor[(8, 3, 3), float64] */;
    %559 = asinh(%558) /* ty=Tensor[(8, 3, 3), float64] */;
    %560 = cast(%559, dtype="float64") /* ty=Tensor[(8, 3, 3), float64] */;
    %561 = @func_7739(%556) /* ty=Tensor[(7, 2, 5), float32] */;
    %562 = acos(%560) /* ty=Tensor[(8, 3, 3), float64] */;
    (%561, meta[relay.Constant][47] /* ty=Tensor[(70), float32] */, %562)
  };
  %563() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(70), float32], Tensor[(8, 3, 3), float64]) */
}

def @func_1450(%var_1430: Tensor[(8, 2, 7), int64], %var_1431: Tensor[(8, 2, 7), int64]) -> Tensor[(8, 2, 7), int64] {
  %564 = cast(%var_1431, dtype="int64") /* ty=Tensor[(8, 2, 7), int64] */;
  %565 = shape_of(%var_1430, dtype="int32") /* ty=Tensor[(3), int32] */;
  %566 = cast(%var_1430, dtype="int64") /* ty=Tensor[(8, 2, 7), int64] */;
  %567 = dyn.reshape(%564, %565, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  bitwise_or(%566, %567) /* ty=Tensor[(8, 2, 7), int64] */
}

def @func_11533(%var_11532: Tensor[(286), float64]) -> (Tensor[(8, 3, 3), float32], Tensor[(98), uint64], Tensor[(6, 78), bool], Tensor[(2, 11, 13), float64], Tensor[(286), float64]) {
  %585 = fn (%var_11528: Tensor[(286), float64]) -> (Tensor[(8, 3, 3), float32], Tensor[(98), uint64], Tensor[(6, 78), bool], Tensor[(2, 11, 13), float64], Tensor[(286), float64]) {
    %568 = cast(meta[relay.Constant][48] /* ty=Tensor[(98), uint64] */, dtype="uint64") /* ty=Tensor[(98), uint64] */;
    %569 = cast(meta[relay.Constant][49] /* ty=Tensor[(234, 2), float32] */, dtype="float32") /* ty=Tensor[(234, 2), float32] */;
    %570 = reshape(%568, newshape=[2, 7, 7]) /* ty=Tensor[(2, 7, 7), uint64] */;
    %571 = reshape(%569, newshape=[6, 78]) /* ty=Tensor[(6, 78), float32] */;
    %572 = @func_11289(%570, %571) /* ty=(Tensor[(2, 7, 7), uint64], Tensor[(4, 9, 13), float32], Tensor[(6, 78), float32]) */;
    %573 = %572.2;
    %574 = cast(%573, dtype="float32") /* ty=Tensor[(6, 78), float32] */;
    %575 = asinh(%574) /* ty=Tensor[(6, 78), float32] */;
    %576 = cast(meta[relay.Constant][49] /* ty=Tensor[(234, 2), float32] */, dtype="bool") /* ty=Tensor[(234, 2), bool] */;
    %577 = shape_of(%575, dtype="int32") /* ty=Tensor[(2), int32] */;
    %578 = cast(%575, dtype="bool") /* ty=Tensor[(6, 78), bool] */;
    %579 = dyn.reshape(%576, %577, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %580 = cast(%var_11528, dtype="float64") /* ty=Tensor[(286), float64] */;
    %581 = reshape(%580, newshape=[2, 11, 13]) /* ty=Tensor[(2, 11, 13), float64] */;
    %582 = @func_8681() /* ty=Tensor[(8, 3, 3), float32] */;
    %583 = equal(%578, %579) /* ty=Tensor[(6, 78), bool] */;
    %584 = @func_2269(%581) /* ty=Tensor[(2, 11, 13), float64] */;
    (%582, meta[relay.Constant][48] /* ty=Tensor[(98), uint64] */, %583, %584, %var_11528)
  };
  %585(%var_11532) /* ty=(Tensor[(8, 3, 3), float32], Tensor[(98), uint64], Tensor[(6, 78), bool], Tensor[(2, 11, 13), float64], Tensor[(286), float64]) */
}

def @func_12072(%var_12026: Tensor[(1, 8, 16), float64], %var_12035: Tensor[(1056), float64], %var_12064: Tensor[(117), bool], %var_12069: Tensor[(2, 300), uint8]) -> (Tensor[(16, 11, 6), float64], Tensor[(1056), float64], Tensor[(8, 3, 3), float32], Tensor[(70), float32], Tensor[(1, 8, 16), float64], Tensor[(70), float32], Tensor[(117), bool], Tensor[(84), float32], uint32, Tensor[(616), float64], Tensor[(2, 300), uint8]) {
  %586 = cast(%var_12035, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %587 = reshape(%586, newshape=[16, 11, 6]) /* ty=Tensor[(16, 11, 6), float64] */;
  %588 = @func_11129() /* ty=(Tensor[(8, 3, 3), float32], Tensor[(8, 7, 9), float32], Tensor[(504), float32]) */;
  %589 = @func_10466() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(70), float32], Tensor[(8, 3, 3), float64]) */;
  %590 = cast(%var_12026, dtype="float64") /* ty=Tensor[(1, 8, 16), float64] */;
  %591 = atanh(%590) /* ty=Tensor[(1, 8, 16), float64] */;
  %592 = cast(%591, dtype="float64") /* ty=Tensor[(1, 8, 16), float64] */;
  %593 = %589.1;
  %594 = cast(%593, dtype="float32") /* ty=Tensor[(70), float32] */;
  %595 = cast(%var_12064, dtype="bool") /* ty=Tensor[(117), bool] */;
  %596 = cast(meta[relay.Constant][50] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
  %597 = cast(meta[relay.Constant][51] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %598 = reshape(%594, newshape=[70]) /* ty=Tensor[(70), float32] */;
  %599 = reshape(%595, newshape=[117]) /* ty=Tensor[(117), bool] */;
  %600 = reshape(%596, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %601 = reshape(%597, newshape=[]) /* ty=uint32 */;
  %602 = @func_10543(%598, %599, %600, %601) /* ty=(Tensor[(8, 3, 3), float32], Tensor[(8, 3, 3), float64], Tensor[(7, 2, 5), float32], Tensor[(70), float32], Tensor[(600), uint8], Tensor[(117), bool], Tensor[(84), float32], uint32) */;
  %603 = cast(meta[relay.Constant][50] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
  %604 = cast(meta[relay.Constant][51] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %605 = cast(%var_12069, dtype="uint8") /* ty=Tensor[(2, 300), uint8] */;
  %606 = reshape(%603, newshape=[6, 14, 1]) /* ty=Tensor[(6, 14, 1), float32] */;
  %607 = reshape(%604, newshape=[]) /* ty=uint32 */;
  %608 = reshape(%605, newshape=[600]) /* ty=Tensor[(600), uint8] */;
  %609 = @func_1633(%606, %607, %608) /* ty=(Tensor[(6, 13, 5), bool], Tensor[(6, 13, 5), bool], Tensor[(11, 2, 4), float64], Tensor[(616), float64], Tensor[(11, 2, 4), int32], Tensor[(6, 14, 1), float64], Tensor[(11, 2, 4), bool], Tensor[(600), uint8]) */;
  %610 = @func_6085(%587) /* ty=Tensor[(16, 11, 6), float64] */;
  %611 = %588.0;
  %612 = log(%592) /* ty=Tensor[(1, 8, 16), float64] */;
  %613 = %602.3;
  %614 = %609.3;
  (%610, %var_12035, %611, %593, %612, %613, %var_12064, meta[relay.Constant][50] /* ty=Tensor[(84), float32] */, meta[relay.Constant][51] /* ty=uint32 */, %614, %var_12069)
}

def @func_12737(%var_12736: Tensor[(72), float32]) -> (Tensor[(1008), float32], Tensor[(8, 3, 3), int64], Tensor[(72), float32], Tensor[(6, 78), bool], Tensor[(286), float64]) {
  %624 = fn (%var_12728: Tensor[(72), float32]) -> (Tensor[(1008), float32], Tensor[(8, 3, 3), int64], Tensor[(72), float32], Tensor[(6, 78), bool], Tensor[(286), float64]) {
    %615 = @func_11091() /* ty=(Tensor[(8, 3, 3), float32], Tensor[(6, 13, 5), bool], Tensor[(1008), float32], uint32) */;
    %616 = cast(%var_12728, dtype="float32") /* ty=Tensor[(72), float32] */;
    %617 = reshape(%616, newshape=[8, 3, 3]) /* ty=Tensor[(8, 3, 3), float32] */;
    %618 = cast(meta[relay.Constant][52] /* ty=Tensor[(286), float64] */, dtype="float64") /* ty=Tensor[(286), float64] */;
    %619 = reshape(%618, newshape=[286]) /* ty=Tensor[(286), float64] */;
    %620 = @func_11531(%619) /* ty=(Tensor[(8, 3, 3), float32], Tensor[(98), uint64], Tensor[(6, 78), bool], Tensor[(2, 11, 13), float64], Tensor[(286), float64]) */;
    %621 = %615.2;
    %622 = @func_12565(%617) /* ty=Tensor[(8, 3, 3), int64] */;
    %623 = %620.2;
    (%621, %622, %var_12728, %623, meta[relay.Constant][52] /* ty=Tensor[(286), float64] */)
  };
  %624(%var_12736) /* ty=(Tensor[(1008), float32], Tensor[(8, 3, 3), int64], Tensor[(72), float32], Tensor[(6, 78), bool], Tensor[(286), float64]) */
}

def @func_12912() -> (Tensor[(8, 3, 3), float32], Tensor[(9, 16, 7), float32], Tensor[(1008), float32]) {
  @func_12910() /* ty=(Tensor[(8, 3, 3), float32], Tensor[(9, 16, 7), float32], Tensor[(1008), float32]) */
}

def @func_9907() -> Tensor[(8, 3, 3), float64] {
  %626 = fn () -> Tensor[(8, 3, 3), float64] {
    %625 = @func_8717() /* ty=(Tensor[(8, 3, 3), float64],) */;
    %625.0
  };
  %626() /* ty=Tensor[(8, 3, 3), float64] */
}

def @func_2272(%var_2270: Tensor[(2, 11, 13), float64]) -> Tensor[(2, 11, 13), float64] {
  @func_2269(%var_2270) /* ty=Tensor[(2, 11, 13), float64] */
}

def @func_9671() -> (Tensor[(8, 3, 3), float32],) {
  %629 = fn () -> (Tensor[(8, 3, 3), float32],) {
    %627 = @func_9154() /* ty=(Tensor[(8, 3, 3), float32], Tensor[(15, 4, 10), bool], Tensor[(600), uint8], Tensor[(8, 3, 3), float32]) */;
    %628 = %627.3;
    (%628,)
  };
  %629() /* ty=(Tensor[(8, 3, 3), float32],) */
}

def @func_9884(%var_9876: Tensor[(24, 6), float64]) -> (Tensor[(8, 3, 3), float64], Tensor[(14, 15, 7), float64], Tensor[(24, 6), float64]) {
  %630 = @func_8717() /* ty=(Tensor[(8, 3, 3), float64],) */;
  %631 = cast(%var_9876, dtype="float64") /* ty=Tensor[(24, 6), float64] */;
  %632 = reshape(%631, newshape=[16, 9, 1]) /* ty=Tensor[(16, 9, 1), float64] */;
  %633 = @func_3177(%632) /* ty=(Tensor[(16, 9, 1), float64], Tensor[(14, 15, 7), float64], Tensor[(1470), float64], Tensor[(14, 15, 7), float64]) */;
  %634 = %630.0;
  %635 = %633.3;
  (%634, %635, %var_9876)
}

def @func_11326(%var_11324: Tensor[(12, 8, 2), bool]) -> (Tensor[(12, 8, 2), bool],) {
  @func_11323(%var_11324) /* ty=(Tensor[(12, 8, 2), bool],) */
}

def @func_12910() -> (Tensor[(8, 3, 3), float32], Tensor[(9, 16, 7), float32], Tensor[(1008), float32]) {
  %636 = @func_12660() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %637 = cast(meta[relay.Constant][53] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %638 = reshape(%637, newshape=[9, 16, 7]) /* ty=Tensor[(9, 16, 7), float32] */;
  %639 = @func_10246(%638) /* ty=(Tensor[(9, 16, 7), float32],) */;
  %640 = %636.0;
  %641 = %639.0;
  (%640, %641, meta[relay.Constant][53] /* ty=Tensor[(1008), float32] */)
}

def @func_12567(%var_12566: Tensor[(8, 3, 3), float32]) -> Tensor[(8, 3, 3), int64] {
  %648 = fn (%var_12548: Tensor[(8, 3, 3), float32]) -> Tensor[(8, 3, 3), int64] {
    %642 = @func_11403() /* ty=(Tensor[(8, 3, 3), float32],) */;
    %643 = %642.0;
    %644 = cast(%var_12548, dtype="int64") /* ty=Tensor[(8, 3, 3), int64] */;
    %645 = shape_of(%643, dtype="int32") /* ty=Tensor[(3), int32] */;
    %646 = cast(%643, dtype="int64") /* ty=Tensor[(8, 3, 3), int64] */;
    %647 = dyn.reshape(%644, %645, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    bitwise_xor(%646, %647) /* ty=Tensor[(8, 3, 3), int64] */
  };
  %648(%var_12566) /* ty=Tensor[(8, 3, 3), int64] */
}

def @func_9154() -> (Tensor[(8, 3, 3), float32], Tensor[(15, 4, 10), bool], Tensor[(600), uint8], Tensor[(8, 3, 3), float32]) {
  %649 = @func_8639() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %650 = cast(meta[relay.Constant][54] /* ty=Tensor[(600), uint8] */, dtype="uint8") /* ty=Tensor[(600), uint8] */;
  %651 = reshape(%650, newshape=[15, 4, 10]) /* ty=Tensor[(15, 4, 10), uint8] */;
  %652 = @func_167(%651) /* ty=(Tensor[(15, 4, 10), bool], Tensor[(11, 2, 4), bool], Tensor[(44, 2), float64]) */;
  %653 = @func_9123() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %654 = %649.0;
  %655 = %652.0;
  %656 = %653.0;
  (%654, %655, meta[relay.Constant][54] /* ty=Tensor[(600), uint8] */, %656)
}

def @func_10249(%var_10247: Tensor[(9, 16, 7), float32]) -> (Tensor[(9, 16, 7), float32],) {
  @func_10246(%var_10247) /* ty=(Tensor[(9, 16, 7), float32],) */
}

def @func_9702(%var_9701: uint32) -> (Tensor[(8, 3, 3), float32], uint32, uint32) {
  %665 = fn (%var_9689: uint32) -> (Tensor[(8, 3, 3), float32], uint32, uint32) {
    %657 = @func_9123() /* ty=(Tensor[(8, 3, 3), float32],) */;
    %658 = %657.0;
    %659 = cast(%658, dtype="float32") /* ty=Tensor[(8, 3, 3), float32] */;
    %660 = cast(%var_9689, dtype="uint32") /* ty=uint32 */;
    %661 = reshape(%660, newshape=[]) /* ty=uint32 */;
    %662 = @func_9590(%661) /* ty=(Tensor[(8, 3, 3), float32], Tensor[(6, 13, 5), bool], uint32) */;
    %663 = cosh(%659) /* ty=Tensor[(8, 3, 3), float32] */;
    %664 = %662.2;
    (%663, %664, %var_9689)
  };
  %665(%var_9701) /* ty=(Tensor[(8, 3, 3), float32], uint32, uint32) */
}

def @func_12299() -> (Tensor[(8, 3, 3), float32],) {
  @func_12297() /* ty=(Tensor[(8, 3, 3), float32],) */
}

def @func_11190(%var_11182: Tensor[(84), float32], %var_11183: uint32, %var_11184: Tensor[(600), uint8]) -> (Tensor[(8, 3, 3), float32], Tensor[(11, 2, 4), float64], Tensor[(84), float32], uint32, Tensor[(600), uint8]) {
  %666 = @func_11091() /* ty=(Tensor[(8, 3, 3), float32], Tensor[(6, 13, 5), bool], Tensor[(1008), float32], uint32) */;
  %667 = cast(%var_11182, dtype="float32") /* ty=Tensor[(84), float32] */;
  %668 = cast(%var_11183, dtype="uint32") /* ty=uint32 */;
  %669 = cast(%var_11184, dtype="uint8") /* ty=Tensor[(600), uint8] */;
  %670 = reshape(%667, newshape=[6, 14, 1]) /* ty=Tensor[(6, 14, 1), float32] */;
  %671 = reshape(%668, newshape=[]) /* ty=uint32 */;
  %672 = reshape(%669, newshape=[600]) /* ty=Tensor[(600), uint8] */;
  %673 = @func_1633(%670, %671, %672) /* ty=(Tensor[(6, 13, 5), bool], Tensor[(6, 13, 5), bool], Tensor[(11, 2, 4), float64], Tensor[(616), float64], Tensor[(11, 2, 4), int32], Tensor[(6, 14, 1), float64], Tensor[(11, 2, 4), bool], Tensor[(600), uint8]) */;
  %674 = %666.0;
  %675 = %673.2;
  (%674, %675, %var_11182, %var_11183, %var_11184)
}

def @func_11293(%var_11291: Tensor[(2, 7, 7), uint64], %var_11292: Tensor[(6, 78), float32]) -> (Tensor[(2, 7, 7), uint64], Tensor[(4, 9, 13), float32], Tensor[(6, 78), float32]) {
  @func_11289(%var_11291, %var_11292) /* ty=(Tensor[(2, 7, 7), uint64], Tensor[(4, 9, 13), float32], Tensor[(6, 78), float32]) */
}

def @func_1963(%var_1962: Tensor[(8, 9, 12), float64]) -> (Tensor[(8, 9, 12), float64], Tensor[(1, 11, 9), int8], Tensor[(1, 99), int8]) {
  %681 = fn (%var_1947: Tensor[(8, 9, 12), float64]) -> (Tensor[(8, 9, 12), float64], Tensor[(1, 11, 9), int8], Tensor[(1, 99), int8]) {
    %676 = cast(%var_1947, dtype="float64") /* ty=Tensor[(8, 9, 12), float64] */;
    %677 = cast(meta[relay.Constant][55] /* ty=Tensor[(1, 99), int8] */, dtype="int8") /* ty=Tensor[(1, 99), int8] */;
    %678 = reshape(%677, newshape=[1, 11, 9]) /* ty=Tensor[(1, 11, 9), int8] */;
    %679 = tan(%676) /* ty=Tensor[(8, 9, 12), float64] */;
    %680 = @func_1876(%678) /* ty=Tensor[(1, 11, 9), int8] */;
    (%679, %680, meta[relay.Constant][55] /* ty=Tensor[(1, 99), int8] */)
  };
  %681(%var_1962) /* ty=(Tensor[(8, 9, 12), float64], Tensor[(1, 11, 9), int8], Tensor[(1, 99), int8]) */
}

def @func_2319(%var_2317: int32, %var_2318: Tensor[(1, 3, 7), int32]) -> (Tensor[(1, 3, 7), int32], Tensor[(1, 3, 7), float32], Tensor[(600), uint8], Tensor[(44, 2), int32]) {
  %694 = fn (%var_2295: int32, %var_2296: Tensor[(1, 3, 7), int32]) -> (Tensor[(1, 3, 7), int32], Tensor[(1, 3, 7), float32], Tensor[(600), uint8], Tensor[(44, 2), int32]) {
    %682 = cast(%var_2295, dtype="int32") /* ty=int32 */;
    %683 = cast(%var_2296, dtype="int32") /* ty=Tensor[(1, 3, 7), int32] */;
    %684 = cast(%var_2296, dtype="float32") /* ty=Tensor[(1, 3, 7), float32] */;
    %685 = cast(meta[relay.Constant][56] /* ty=Tensor[(600), uint8] */, dtype="uint8") /* ty=Tensor[(600), uint8] */;
    %686 = reshape(%685, newshape=[15, 4, 10]) /* ty=Tensor[(15, 4, 10), uint8] */;
    %687 = @func_167(%686) /* ty=(Tensor[(15, 4, 10), bool], Tensor[(11, 2, 4), bool], Tensor[(44, 2), float64]) */;
    %688 = %687.2;
    %689 = cast(%688, dtype="int32") /* ty=Tensor[(44, 2), int32] */;
    %690 = cast(%var_2295, dtype="int32") /* ty=int32 */;
    %691 = minimum(%682, %683) /* ty=Tensor[(1, 3, 7), int32] */;
    %692 = asinh(%684) /* ty=Tensor[(1, 3, 7), float32] */;
    %693 = bitwise_xor(%689, %690) /* ty=Tensor[(44, 2), int32] */;
    (%691, %692, meta[relay.Constant][56] /* ty=Tensor[(600), uint8] */, %693)
  };
  %694(%var_2317, %var_2318) /* ty=(Tensor[(1, 3, 7), int32], Tensor[(1, 3, 7), float32], Tensor[(600), uint8], Tensor[(44, 2), int32]) */
}

def @func_6087(%var_6086: Tensor[(16, 11, 6), float64]) -> Tensor[(16, 11, 6), float64] {
  %696 = fn (%var_6080: Tensor[(16, 11, 6), float64]) -> Tensor[(16, 11, 6), float64] {
    %695 = cast(%var_6080, dtype="float64") /* ty=Tensor[(16, 11, 6), float64] */;
    sigmoid(%695) /* ty=Tensor[(16, 11, 6), float64] */
  };
  %696(%var_6086) /* ty=Tensor[(16, 11, 6), float64] */
}

def @func_13012() -> (Tensor[(8, 3, 3), float32],) {
  %697 = @func_12008() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %698 = %697.0;
  (%698,)
}

def @func_3179(%var_3178: Tensor[(16, 9, 1), float64]) -> (Tensor[(16, 9, 1), float64], Tensor[(14, 15, 7), float64], Tensor[(1470), float64], Tensor[(14, 15, 7), float64]) {
  %707 = fn (%var_3152: Tensor[(16, 9, 1), float64]) -> (Tensor[(16, 9, 1), float64], Tensor[(14, 15, 7), float64], Tensor[(1470), float64], Tensor[(14, 15, 7), float64]) {
    %699 = cast(%var_3152, dtype="float64") /* ty=Tensor[(16, 9, 1), float64] */;
    %700 = cast(meta[relay.Constant][57] /* ty=Tensor[(1470), float64] */, dtype="float64") /* ty=Tensor[(1470), float64] */;
    %701 = reshape(%700, newshape=[14, 15, 7]) /* ty=Tensor[(14, 15, 7), float64] */;
    %702 = cast(meta[relay.Constant][57] /* ty=Tensor[(1470), float64] */, dtype="float64") /* ty=Tensor[(1470), float64] */;
    %703 = reshape(%702, newshape=[14, 15, 7]) /* ty=Tensor[(14, 15, 7), float64] */;
    %704 = sigmoid(%699) /* ty=Tensor[(16, 9, 1), float64] */;
    %705 = @func_2922(%701) /* ty=Tensor[(14, 15, 7), float64] */;
    %706 = @func_2922(%703) /* ty=Tensor[(14, 15, 7), float64] */;
    (%704, %705, meta[relay.Constant][57] /* ty=Tensor[(1470), float64] */, %706)
  };
  %707(%var_3178) /* ty=(Tensor[(16, 9, 1), float64], Tensor[(14, 15, 7), float64], Tensor[(1470), float64], Tensor[(14, 15, 7), float64]) */
}

def @func_9156() -> (Tensor[(8, 3, 3), float32], Tensor[(15, 4, 10), bool], Tensor[(600), uint8], Tensor[(8, 3, 3), float32]) {
  @func_9154() /* ty=(Tensor[(8, 3, 3), float32], Tensor[(15, 4, 10), bool], Tensor[(600), uint8], Tensor[(8, 3, 3), float32]) */
}

def @func_4093(%var_4091: Tensor[(6, 13, 15), uint32], %var_4092: Tensor[(6, 13, 15), uint32]) -> Tensor[(6, 13, 15), bool] {
  @func_4089(%var_4091, %var_4092) /* ty=Tensor[(6, 13, 15), bool] */
}

def @main(%var_13115: Tensor[(504), float32]) -> (Tensor[(504), bool],) {
  %708 = @func_12447() /* ty=Tensor[(504), float32] */;
  %709 = cast(%var_13115, dtype="bool") /* ty=Tensor[(504), bool] */;
  %710 = shape_of(%708, dtype="int32") /* ty=Tensor[(1), int32] */;
  %711 = cast(%708, dtype="bool") /* ty=Tensor[(504), bool] */;
  %712 = dyn.reshape(%709, %710, newshape=[]) /* ty=Tensor[(?), bool] */;
  %713 = greater(%711, %712) /* ty=Tensor[(504), bool] */;
  (%713,)
}

def @func_11093() -> (Tensor[(8, 3, 3), float32], Tensor[(6, 13, 5), bool], Tensor[(1008), float32], uint32) {
  @func_11091() /* ty=(Tensor[(8, 3, 3), float32], Tensor[(6, 13, 5), bool], Tensor[(1008), float32], uint32) */
}

def @func_9135() -> (Tensor[(8, 3, 3), float32],) {
  %714 = @func_8681() /* ty=Tensor[(8, 3, 3), float32] */;
  (%714,)
}

def @func_12387(%var_12369: uint8, %var_12370: Tensor[(1, 2, 7), uint8]) -> (Tensor[(1, 2, 7), uint8],) {
  %715 = cast(%var_12369, dtype="uint8") /* ty=uint8 */;
  %716 = cast(%var_12370, dtype="uint8") /* ty=Tensor[(1, 2, 7), uint8] */;
  %717 = right_shift(%715, %716) /* ty=Tensor[(1, 2, 7), uint8] */;
  (%717,)
}

def @func_9654(%var_9638: Tensor[(7, 12, 13), float64], %var_9643: Tensor[(7, 12, 13), float64]) -> (Tensor[(7, 12, 13), int8],) {
  %718 = cast(%var_9638, dtype="float64") /* ty=Tensor[(7, 12, 13), float64] */;
  %719 = log(%718) /* ty=Tensor[(7, 12, 13), float64] */;
  %720 = cast(%var_9643, dtype="int8") /* ty=Tensor[(7, 12, 13), int8] */;
  %721 = shape_of(%719, dtype="int32") /* ty=Tensor[(3), int32] */;
  %722 = cast(%719, dtype="int8") /* ty=Tensor[(7, 12, 13), int8] */;
  %723 = dyn.reshape(%720, %721, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %724 = subtract(%722, %723) /* ty=Tensor[(7, 12, 13), int8] */;
  (%724,)
}

def @func_558(%var_543: Tensor[(4, 14, 11), float64]) -> (Tensor[(4, 14, 11), float64], Tensor[(11, 2, 4), float64], Tensor[(88, 1), float64]) {
  %725 = cast(%var_543, dtype="float64") /* ty=Tensor[(4, 14, 11), float64] */;
  %726 = shape_of(meta[relay.Constant][58] /* ty=Tensor[(4, 14, 11), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %727 = cast(meta[relay.Constant][58] /* ty=Tensor[(4, 14, 11), float64] */, dtype="float64") /* ty=Tensor[(4, 14, 11), float64] */;
  %728 = dyn.reshape(%725, %726, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %729 = cast(meta[relay.Constant][59] /* ty=Tensor[(88, 1), float64] */, dtype="float64") /* ty=Tensor[(88, 1), float64] */;
  %730 = reshape(%729, newshape=[11, 2, 4]) /* ty=Tensor[(11, 2, 4), float64] */;
  %731 = @func_34(%730) /* ty=(Tensor[(11, 2, 4), bool], Tensor[(11, 2, 4), float64]) */;
  %732 = divide(%727, %728) /* ty=Tensor[(4, 14, 11), float64] */;
  %733 = %731.1;
  (%732, %733, meta[relay.Constant][59] /* ty=Tensor[(88, 1), float64] */)
}

def @func_9273() -> (Tensor[(1, 11, 9), int8], Tensor[(99), int8], Tensor[(8, 3, 3), float64]) {
  @func_9271() /* ty=(Tensor[(1, 11, 9), int8], Tensor[(99), int8], Tensor[(8, 3, 3), float64]) */
}

def @func_12674(%var_12672: Tensor[(13, 7, 8), float64], %var_12673: Tensor[(13, 7, 8), float64]) -> (Tensor[(13, 7, 8), float64], Tensor[(13, 7, 8), int8]) {
  %744 = fn (%var_12662: Tensor[(13, 7, 8), float64], %var_12663: Tensor[(13, 7, 8), float64]) -> (Tensor[(13, 7, 8), float64], Tensor[(13, 7, 8), int8]) {
    %734 = cast(%var_12663, dtype="float64") /* ty=Tensor[(13, 7, 8), float64] */;
    %735 = shape_of(%var_12662, dtype="int32") /* ty=Tensor[(3), int32] */;
    %736 = cast(%var_12662, dtype="float64") /* ty=Tensor[(13, 7, 8), float64] */;
    %737 = dyn.reshape(%734, %735, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %738 = cast(%var_12662, dtype="int8") /* ty=Tensor[(13, 7, 8), int8] */;
    %739 = shape_of(%var_12663, dtype="int32") /* ty=Tensor[(3), int32] */;
    %740 = cast(%var_12663, dtype="int8") /* ty=Tensor[(13, 7, 8), int8] */;
    %741 = dyn.reshape(%738, %739, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %742 = mod(%736, %737) /* ty=Tensor[(13, 7, 8), float64] */;
    %743 = right_shift(%740, %741) /* ty=Tensor[(13, 7, 8), int8] */;
    (%742, %743)
  };
  %744(%var_12672, %var_12673) /* ty=(Tensor[(13, 7, 8), float64], Tensor[(13, 7, 8), int8]) */
}

def @func_11717(%var_11680: uint8, %var_11681: Tensor[(4, 288), uint8], %var_11699: Tensor[(8, 3, 3), float32], %var_11711: Tensor[(864), float64]) -> (Tensor[(8, 2, 7), int64], uint8, Tensor[(4, 288), uint8], Tensor[(8, 3, 3), bool], Tensor[(4, 14, 11), float64], Tensor[(21, 5), float32], Tensor[(864), float64]) {
  %745 = cast(%var_11680, dtype="uint8") /* ty=uint8 */;
  %746 = cast(%var_11681, dtype="uint8") /* ty=Tensor[(4, 288), uint8] */;
  %747 = reshape(%745, newshape=[]) /* ty=uint8 */;
  %748 = reshape(%746, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), uint8] */;
  %749 = @func_7071(%747, %748) /* ty=(Tensor[(16, 6, 12), uint8], Tensor[(8, 2, 7), int64], Tensor[(112), int64]) */;
  %750 = @func_10003() /* ty=Tensor[(8, 3, 3), float32] */;
  %751 = cast(%var_11699, dtype="bool") /* ty=Tensor[(8, 3, 3), bool] */;
  %752 = shape_of(%750, dtype="int32") /* ty=Tensor[(3), int32] */;
  %753 = cast(%750, dtype="bool") /* ty=Tensor[(8, 3, 3), bool] */;
  %754 = dyn.reshape(%751, %752, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %755 = cast(meta[relay.Constant][60] /* ty=Tensor[(21, 5), float32] */, dtype="float32") /* ty=Tensor[(21, 5), float32] */;
  %756 = cast(%var_11711, dtype="float64") /* ty=Tensor[(864), float64] */;
  %757 = cast(%var_11711, dtype="float64") /* ty=Tensor[(864), float64] */;
  %758 = reshape(%755, newshape=[7, 1, 15]) /* ty=Tensor[(7, 1, 15), float32] */;
  %759 = reshape(%756, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %760 = reshape(%757, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %761 = @func_2550(%758, %759, %760) /* ty=(Tensor[(7, 1, 15), float32], Tensor[(1, 99), int8], Tensor[(864), float32], Tensor[(4, 14, 11), float64], Tensor[(616), float64]) */;
  %762 = %749.1;
  %763 = greater(%753, %754) /* ty=Tensor[(8, 3, 3), bool] */;
  %764 = %761.3;
  (%762, %var_11680, %var_11681, %763, %764, meta[relay.Constant][60] /* ty=Tensor[(21, 5), float32] */, %var_11711)
}

def @func_7075(%var_7073: uint8, %var_7074: Tensor[(16, 6, 12), uint8]) -> (Tensor[(16, 6, 12), uint8], Tensor[(8, 2, 7), int64], Tensor[(112), int64]) {
  @func_7071(%var_7073, %var_7074) /* ty=(Tensor[(16, 6, 12), uint8], Tensor[(8, 2, 7), int64], Tensor[(112), int64]) */
}

def @func_8681() -> Tensor[(8, 3, 3), float32] {
  %765 = @func_8639() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %766 = %765.0;
  %767 = cast(%766, dtype="float32") /* ty=Tensor[(8, 3, 3), float32] */;
  tan(%767) /* ty=Tensor[(8, 3, 3), float32] */
}

def @func_10333(%var_10331: Tensor[(8, 3, 3), float32], %var_10332: Tensor[(616), float64]) -> (Tensor[(8, 3, 3), bool], Tensor[(4, 14, 11), float64], Tensor[(616), float64]) {
  %779 = fn (%var_10315: Tensor[(8, 3, 3), float32], %var_10321: Tensor[(616), float64]) -> (Tensor[(8, 3, 3), bool], Tensor[(4, 14, 11), float64], Tensor[(616), float64]) {
    %768 = @func_9123() /* ty=(Tensor[(8, 3, 3), float32],) */;
    %769 = %768.0;
    %770 = cast(%var_10315, dtype="bool") /* ty=Tensor[(8, 3, 3), bool] */;
    %771 = shape_of(%769, dtype="int32") /* ty=Tensor[(3), int32] */;
    %772 = cast(%769, dtype="bool") /* ty=Tensor[(8, 3, 3), bool] */;
    %773 = dyn.reshape(%770, %771, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %774 = cast(%var_10321, dtype="float64") /* ty=Tensor[(616), float64] */;
    %775 = reshape(%774, newshape=[4, 14, 11]) /* ty=Tensor[(4, 14, 11), float64] */;
    %776 = @func_558(%775) /* ty=(Tensor[(4, 14, 11), float64], Tensor[(11, 2, 4), float64], Tensor[(88, 1), float64]) */;
    %777 = logical_and(%772, %773) /* ty=Tensor[(8, 3, 3), bool] */;
    %778 = %776.0;
    (%777, %778, %var_10321)
  };
  %779(%var_10331, %var_10332) /* ty=(Tensor[(8, 3, 3), bool], Tensor[(4, 14, 11), float64], Tensor[(616), float64]) */
}

def @func_8640() -> (Tensor[(8, 3, 3), float32],) {
  %782 = fn () -> (Tensor[(8, 3, 3), float32],) {
    %780 = cast(meta[relay.Constant][61] /* ty=Tensor[(8, 3, 3), float32] */, dtype="float32") /* ty=Tensor[(8, 3, 3), float32] */;
    %781 = rsqrt(%780) /* ty=Tensor[(8, 3, 3), float32] */;
    (%781,)
  };
  %782() /* ty=(Tensor[(8, 3, 3), float32],) */
}

def @func_2924(%var_2923: Tensor[(14, 15, 7), float64]) -> Tensor[(14, 15, 7), float64] {
  %784 = fn (%var_2915: Tensor[(14, 15, 7), float64]) -> Tensor[(14, 15, 7), float64] {
    %783 = cast(%var_2915, dtype="float64") /* ty=Tensor[(14, 15, 7), float64] */;
    sinh(%783) /* ty=Tensor[(14, 15, 7), float64] */
  };
  %784(%var_2923) /* ty=Tensor[(14, 15, 7), float64] */
}

def @func_7741(%var_7740: Tensor[(7, 2, 5), float32]) -> Tensor[(7, 2, 5), float32] {
  %786 = fn (%var_7736: Tensor[(7, 2, 5), float32]) -> Tensor[(7, 2, 5), float32] {
    %785 = cast(%var_7736, dtype="float32") /* ty=Tensor[(7, 2, 5), float32] */;
    sigmoid(%785) /* ty=Tensor[(7, 2, 5), float32] */
  };
  %786(%var_7740) /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_7375(%var_7373: bool, %var_7374: Tensor[(9, 11, 14), bool]) -> (Tensor[(9, 11, 14), bool],) {
  %790 = fn (%var_7366: bool, %var_7367: Tensor[(9, 11, 14), bool]) -> (Tensor[(9, 11, 14), bool],) {
    %787 = cast(%var_7366, dtype="bool") /* ty=bool */;
    %788 = cast(%var_7367, dtype="bool") /* ty=Tensor[(9, 11, 14), bool] */;
    %789 = logical_or(%787, %788) /* ty=Tensor[(9, 11, 14), bool] */;
    (%789,)
  };
  %790(%var_7373, %var_7374) /* ty=(Tensor[(9, 11, 14), bool],) */
}

def @func_1633(%var_1533: Tensor[(6, 14, 1), float32], %var_1551: uint32, %var_1629: Tensor[(600), uint8]) -> (Tensor[(6, 13, 5), bool], Tensor[(6, 13, 5), bool], Tensor[(11, 2, 4), float64], Tensor[(616), float64], Tensor[(11, 2, 4), int32], Tensor[(6, 14, 1), float64], Tensor[(11, 2, 4), bool], Tensor[(600), uint8]) {
  %791 = cast(%var_1551, dtype="uint32") /* ty=uint32 */;
  %792 = reshape(%791, newshape=[]) /* ty=uint32 */;
  %793 = cast(%var_1551, dtype="uint32") /* ty=uint32 */;
  %794 = reshape(%793, newshape=[]) /* ty=uint32 */;
  %795 = cast(meta[relay.Constant][62] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %796 = reshape(%795, newshape=[4, 14, 11]) /* ty=Tensor[(4, 14, 11), float64] */;
  %797 = @func_558(%796) /* ty=(Tensor[(4, 14, 11), float64], Tensor[(11, 2, 4), float64], Tensor[(88, 1), float64]) */;
  %798 = cast(meta[relay.Constant][62] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %799 = reshape(%798, newshape=[4, 14, 11]) /* ty=Tensor[(4, 14, 11), float64] */;
  %800 = @func_558(%799) /* ty=(Tensor[(4, 14, 11), float64], Tensor[(11, 2, 4), float64], Tensor[(88, 1), float64]) */;
  %801 = %800.1;
  %802 = cast(%var_1551, dtype="int32") /* ty=int32 */;
  %803 = cast(%801, dtype="int32") /* ty=Tensor[(11, 2, 4), int32] */;
  %804 = cast(%var_1533, dtype="float32") /* ty=Tensor[(6, 14, 1), float32] */;
  %805 = atanh(%804) /* ty=Tensor[(6, 14, 1), float32] */;
  %806 = cast(%805, dtype="float64") /* ty=Tensor[(6, 14, 1), float64] */;
  %807 = cast(%var_1629, dtype="uint8") /* ty=Tensor[(600), uint8] */;
  %808 = reshape(%807, newshape=[15, 4, 10]) /* ty=Tensor[(15, 4, 10), uint8] */;
  %809 = @func_167(%808) /* ty=(Tensor[(15, 4, 10), bool], Tensor[(11, 2, 4), bool], Tensor[(44, 2), float64]) */;
  %810 = @func_1402(%792) /* ty=Tensor[(6, 13, 5), bool] */;
  %811 = @func_1402(%794) /* ty=Tensor[(6, 13, 5), bool] */;
  %812 = %797.1;
  %813 = bitwise_xor(%802, %803) /* ty=Tensor[(11, 2, 4), int32] */;
  %814 = cos(%806) /* ty=Tensor[(6, 14, 1), float64] */;
  %815 = %809.1;
  (%810, %811, %812, meta[relay.Constant][62] /* ty=Tensor[(616), float64] */, %813, %814, %815, %var_1629)
}

def @func_9077(%var_8920: Tensor[(14, 15, 7), float64], %var_8936: Tensor[(14, 15, 7), float64], %var_8950: Tensor[(1008), float32], %var_8974: Tensor[(130, 9), uint32], %var_9021: Tensor[(14, 15, 7), uint8]) -> (Tensor[(8, 3, 3), float32], Tensor[(4, 1, 6), float64], Tensor[(24), float64], Tensor[(3, 10, 16), int32], Tensor[(88, 20), float32], Tensor[(14, 15, 7), float64], Tensor[(14, 15, 7), uint32], Tensor[(1, 1008), float32], int32, Tensor[(16, 1), int32], Tensor[(1008), float32], Tensor[(8, 9, 12), float64], Tensor[(864), float64], Tensor[(6, 13, 15), bool], Tensor[(130, 9), uint32], Tensor[(8, 3, 3), float64], Tensor[(8, 7, 9), float64], Tensor[(504), float64], Tensor[(14, 15, 7), float64], Tensor[(8, 3, 3), float64], Tensor[(6, 13, 5), bool], Tensor[(8, 3, 3), float64], Tensor[(3, 10, 16), int32]) {
  %816 = @func_8639() /* ty=(Tensor[(8, 3, 3), float32],) */;
  %817 = cast(meta[relay.Constant][63] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
  %818 = reshape(%817, newshape=[4, 1, 6]) /* ty=Tensor[(4, 1, 6), float64] */;
  %819 = @func_8160(%818) /* ty=(Tensor[(4, 1, 6), float64],) */;
  %820 = cast(meta[relay.Constant][64] /* ty=Tensor[(88, 20), float32] */, dtype="float32") /* ty=Tensor[(88, 20), float32] */;
  %821 = reshape(%820, newshape=[16, 10, 11]) /* ty=Tensor[(16, 10, 11), float32] */;
  %822 = @func_8355(%821) /* ty=(Tensor[(16, 10, 11), float32], Tensor[(3, 10, 16), int32], Tensor[(480), int32]) */;
  %823 = cast(meta[relay.Constant][65] /* ty=Tensor[(1470), float64] */, dtype="float64") /* ty=Tensor[(1470), float64] */;
  %824 = reshape(%823, newshape=[14, 15, 7]) /* ty=Tensor[(14, 15, 7), float64] */;
  %825 = @func_2922(%824) /* ty=Tensor[(14, 15, 7), float64] */;
  %826 = cast(%var_8920, dtype="float64") /* ty=Tensor[(14, 15, 7), float64] */;
  %827 = shape_of(%825, dtype="int32") /* ty=Tensor[(3), int32] */;
  %828 = cast(%825, dtype="float64") /* ty=Tensor[(14, 15, 7), float64] */;
  %829 = dyn.reshape(%826, %827, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %830 = cast(%var_8936, dtype="uint32") /* ty=Tensor[(14, 15, 7), uint32] */;
  %831 = shape_of(%825, dtype="int32") /* ty=Tensor[(3), int32] */;
  %832 = cast(%825, dtype="uint32") /* ty=Tensor[(14, 15, 7), uint32] */;
  %833 = dyn.reshape(%830, %831, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %834 = cast(-6 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %835 = cast(meta[relay.Constant][66] /* ty=Tensor[(16, 1), int32] */, dtype="int32") /* ty=Tensor[(16, 1), int32] */;
  %836 = cast(%var_8950, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %837 = reshape(%834, newshape=[]) /* ty=int32 */;
  %838 = reshape(%835, newshape=[16, 1]) /* ty=Tensor[(16, 1), int32] */;
  %839 = reshape(%836, newshape=[1, 1008]) /* ty=Tensor[(1, 1008), float32] */;
  %840 = @func_5317(%837, %838, %839) /* ty=(Tensor[(16, 1), int32], Tensor[(8, 14, 9), float32], Tensor[(1, 1008), float32]) */;
  %841 = cast(meta[relay.Constant][67] /* ty=Tensor[(864), float64] */, dtype="float64") /* ty=Tensor[(864), float64] */;
  %842 = reshape(%841, newshape=[8, 9, 12]) /* ty=Tensor[(8, 9, 12), float64] */;
  %843 = @func_1961(%842) /* ty=(Tensor[(8, 9, 12), float64], Tensor[(1, 11, 9), int8], Tensor[(1, 99), int8]) */;
  %844 = cast(%var_8974, dtype="uint32") /* ty=Tensor[(130, 9), uint32] */;
  %845 = cast(%var_8974, dtype="uint32") /* ty=Tensor[(130, 9), uint32] */;
  %846 = reshape(%844, newshape=[6, 13, 15]) /* ty=Tensor[(6, 13, 15), uint32] */;
  %847 = reshape(%845, newshape=[6, 13, 15]) /* ty=Tensor[(6, 13, 15), uint32] */;
  %848 = @func_8717() /* ty=(Tensor[(8, 3, 3), float64],) */;
  %849 = cast(meta[relay.Constant][68] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %850 = reshape(%849, newshape=[8, 7, 9]) /* ty=Tensor[(8, 7, 9), float64] */;
  %851 = cast(meta[relay.Constant][65] /* ty=Tensor[(1470), float64] */, dtype="int32") /* ty=Tensor[(1470), int32] */;
  %852 = shape_of(%var_8920, dtype="int32") /* ty=Tensor[(3), int32] */;
  %853 = cast(%var_8920, dtype="int32") /* ty=Tensor[(14, 15, 7), int32] */;
  %854 = dyn.reshape(%851, %852, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %855 = right_shift(%853, %854) /* ty=Tensor[(14, 15, 7), int32] */;
  %856 = cast(%825, dtype="uint8") /* ty=Tensor[(14, 15, 7), uint8] */;
  %857 = shape_of(%855, dtype="int32") /* ty=Tensor[(3), int32] */;
  %858 = cast(%855, dtype="uint8") /* ty=Tensor[(14, 15, 7), uint8] */;
  %859 = dyn.reshape(%856, %857, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %860 = multiply(%858, %859) /* ty=Tensor[(14, 15, 7), uint8] */;
  %861 = cast(%var_9021, dtype="float64") /* ty=Tensor[(14, 15, 7), float64] */;
  %862 = shape_of(%860, dtype="int32") /* ty=Tensor[(3), int32] */;
  %863 = cast(%860, dtype="float64") /* ty=Tensor[(14, 15, 7), float64] */;
  %864 = dyn.reshape(%861, %862, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %865 = @func_8717() /* ty=(Tensor[(8, 3, 3), float64],) */;
  %866 = cast(-6 /* ty=int32 */, dtype="uint32") /* ty=uint32 */;
  %867 = reshape(%866, newshape=[]) /* ty=uint32 */;
  %868 = @func_8717() /* ty=(Tensor[(8, 3, 3), float64],) */;
  %869 = cast(meta[relay.Constant][64] /* ty=Tensor[(88, 20), float32] */, dtype="float32") /* ty=Tensor[(88, 20), float32] */;
  %870 = reshape(%869, newshape=[16, 10, 11]) /* ty=Tensor[(16, 10, 11), float32] */;
  %871 = @func_8355(%870) /* ty=(Tensor[(16, 10, 11), float32], Tensor[(3, 10, 16), int32], Tensor[(480), int32]) */;
  %872 = %816.0;
  %873 = %819.0;
  %874 = %822.1;
  %875 = mod(%828, %829) /* ty=Tensor[(14, 15, 7), float64] */;
  %876 = bitwise_xor(%832, %833) /* ty=Tensor[(14, 15, 7), uint32] */;
  %877 = %840.2;
  %878 = %843.0;
  %879 = @func_4089(%846, %847) /* ty=Tensor[(6, 13, 15), bool] */;
  %880 = %848.0;
  %881 = @func_3648(%850) /* ty=Tensor[(8, 7, 9), float64] */;
  %882 = divide(%863, %864) /* ty=Tensor[(14, 15, 7), float64] */;
  %883 = %865.0;
  %884 = @func_1402(%867) /* ty=Tensor[(6, 13, 5), bool] */;
  %885 = %868.0;
  %886 = %871.1;
  (%872, %873, meta[relay.Constant][63] /* ty=Tensor[(24), float64] */, %874, meta[relay.Constant][64] /* ty=Tensor[(88, 20), float32] */, %875, %876, %877, -6 /* ty=int32 */, meta[relay.Constant][66] /* ty=Tensor[(16, 1), int32] */, %var_8950, %878, meta[relay.Constant][67] /* ty=Tensor[(864), float64] */, %879, %var_8974, %880, %881, meta[relay.Constant][68] /* ty=Tensor[(504), float64] */, %882, %883, %884, %885, %886)
}

def @func_13075(%var_13073: float32, %var_13074: Tensor[(16, 8, 1), float32]) -> (Tensor[(16, 8, ?), bool],) {
  @func_13071(%var_13073, %var_13074) /* ty=(Tensor[(16, 8, ?), bool],) */
}

def @func_4280(%var_4278: Tensor[(8, 14, 9), float32], %var_4279: uint32) -> (Tensor[(8, 14, 9), float32], Tensor[(6, 13, 5), bool], uint32) {
  %892 = fn (%var_4270: Tensor[(8, 14, 9), float32], %var_4275: uint32) -> (Tensor[(8, 14, 9), float32], Tensor[(6, 13, 5), bool], uint32) {
    %887 = cast(%var_4270, dtype="float32") /* ty=Tensor[(8, 14, 9), float32] */;
    %888 = cast(%var_4275, dtype="uint32") /* ty=uint32 */;
    %889 = reshape(%888, newshape=[]) /* ty=uint32 */;
    %890 = log2(%887) /* ty=Tensor[(8, 14, 9), float32] */;
    %891 = @func_1402(%889) /* ty=Tensor[(6, 13, 5), bool] */;
    (%890, %891, %var_4275)
  };
  %892(%var_4278, %var_4279) /* ty=(Tensor[(8, 14, 9), float32], Tensor[(6, 13, 5), bool], uint32) */
}

def @func_10875(%var_10868: Tensor[(1008), float32], %var_10869: uint32, %var_10870: Tensor[(36, 24), float64], %var_10871: Tensor[(462, 3), bool], %var_10872: Tensor[(15), float64], %var_10873: Tensor[(504, 7), float32], %var_10874: Tensor[(36, 24), float32]) -> (Tensor[(8, 3, 3), float32], Tensor[(9, 16, 7), float32], Tensor[(1008), float32], uint32, uint32, Tensor[(1152), uint8], uint32, Tensor[(6, 13, 5), bool], Tensor[(1, 1008), float32], Tensor[(16), int32], Tensor[(9, 11, 14), bool], Tensor[(462, 3), bool], Tensor[(15), float64], Tensor[(600), uint8], Tensor[(504, 7), bool], Tensor[(11, 2, 4), bool], Tensor[(36, 24), bool], Tensor[(36, 24), float64], Tensor[(36, 24), bool]) {
  @func_10866(%var_10868, %var_10869, %var_10870, %var_10871, %var_10872, %var_10873, %var_10874) /* ty=(Tensor[(8, 3, 3), float32], Tensor[(9, 16, 7), float32], Tensor[(1008), float32], uint32, uint32, Tensor[(1152), uint8], uint32, Tensor[(6, 13, 5), bool], Tensor[(1, 1008), float32], Tensor[(16), int32], Tensor[(9, 11, 14), bool], Tensor[(462, 3), bool], Tensor[(15), float64], Tensor[(600), uint8], Tensor[(504, 7), bool], Tensor[(11, 2, 4), bool], Tensor[(36, 24), bool], Tensor[(36, 24), float64], Tensor[(36, 24), bool]) */
}

def @func_12661() -> (Tensor[(8, 3, 3), float32],) {
  %895 = fn () -> (Tensor[(8, 3, 3), float32],) {
    %893 = @func_11403() /* ty=(Tensor[(8, 3, 3), float32],) */;
    %894 = %893.0;
    (%894,)
  };
  %895() /* ty=(Tensor[(8, 3, 3), float32],) */
}

def @func_12010() -> (Tensor[(8, 3, 3), float32],) {
  @func_12008() /* ty=(Tensor[(8, 3, 3), float32],) */
}

def @func_8355(%var_8342: Tensor[(16, 10, 11), float32]) -> (Tensor[(16, 10, 11), float32], Tensor[(3, 10, 16), int32], Tensor[(480), int32]) {
  %896 = cast(%var_8342, dtype="float32") /* ty=Tensor[(16, 10, 11), float32] */;
  %897 = sigmoid(%896) /* ty=Tensor[(16, 10, 11), float32] */;
  %898 = cast(%897, dtype="float32") /* ty=Tensor[(16, 10, 11), float32] */;
  %899 = cast(meta[relay.Constant][69] /* ty=Tensor[(480), int32] */, dtype="int32") /* ty=Tensor[(480), int32] */;
  %900 = cast(meta[relay.Constant][69] /* ty=Tensor[(480), int32] */, dtype="int32") /* ty=Tensor[(480), int32] */;
  %901 = reshape(%899, newshape=[3, 10, 16]) /* ty=Tensor[(3, 10, 16), int32] */;
  %902 = reshape(%900, newshape=[3, 10, 16]) /* ty=Tensor[(3, 10, 16), int32] */;
  %903 = log(%898) /* ty=Tensor[(16, 10, 11), float32] */;
  %904 = @func_5215(%901, %902) /* ty=Tensor[(3, 10, 16), int32] */;
  (%903, %904, meta[relay.Constant][69] /* ty=Tensor[(480), int32] */)
}

def @func_10421() -> Tensor[(8, 3, 3), float32] {
  %906 = fn () -> Tensor[(8, 3, 3), float32] {
    %905 = @func_9123() /* ty=(Tensor[(8, 3, 3), float32],) */;
    %905.0
  };
  %906() /* ty=Tensor[(8, 3, 3), float32] */
}

def @func_4391(%var_4323: Tensor[(1, 13, 9), bool], %var_4375: Tensor[(84), float32], %var_4376: uint32) -> (Tensor[(2, 13, 9), bool], Tensor[(1, 13, 9), float32], Tensor[(616), float64], Tensor[(84), float32], uint32, Tensor[(600), uint8]) {
  %907 = cast(%var_4323, dtype="bool") /* ty=Tensor[(1, 13, 9), bool] */;
  %908 = cast(meta[relay.Constant][70] /* ty=Tensor[(2, 13, 9), bool] */, dtype="bool") /* ty=Tensor[(2, 13, 9), bool] */;
  %909 = cast(%var_4323, dtype="float32") /* ty=Tensor[(1, 13, 9), float32] */;
  %910 = cast(%var_4375, dtype="float32") /* ty=Tensor[(84), float32] */;
  %911 = cast(%var_4376, dtype="uint32") /* ty=uint32 */;
  %912 = cast(meta[relay.Constant][71] /* ty=Tensor[(600), uint8] */, dtype="uint8") /* ty=Tensor[(600), uint8] */;
  %913 = reshape(%910, newshape=[6, 14, 1]) /* ty=Tensor[(6, 14, 1), float32] */;
  %914 = reshape(%911, newshape=[]) /* ty=uint32 */;
  %915 = reshape(%912, newshape=[600]) /* ty=Tensor[(600), uint8] */;
  %916 = @func_1633(%913, %914, %915) /* ty=(Tensor[(6, 13, 5), bool], Tensor[(6, 13, 5), bool], Tensor[(11, 2, 4), float64], Tensor[(616), float64], Tensor[(11, 2, 4), int32], Tensor[(6, 14, 1), float64], Tensor[(11, 2, 4), bool], Tensor[(600), uint8]) */;
  %917 = logical_and(%907, %908) /* ty=Tensor[(2, 13, 9), bool] */;
  %918 = log(%909) /* ty=Tensor[(1, 13, 9), float32] */;
  %919 = %916.3;
  (%917, %918, %919, %var_4375, %var_4376, meta[relay.Constant][71] /* ty=Tensor[(600), uint8] */)
}

def @func_10698(%var_10695: uint32, %var_10696: Tensor[(1152), uint8], %var_10697: Tensor[(864), float64]) -> (Tensor[(8, 3, 3), float32], uint32, Tensor[(360), float32], uint32, Tensor[(1152), uint8], Tensor[(1, 11, 9), int8], Tensor[(864), float64]) {
  @func_10693(%var_10695, %var_10696, %var_10697) /* ty=(Tensor[(8, 3, 3), float32], uint32, Tensor[(360), float32], uint32, Tensor[(1152), uint8], Tensor[(1, 11, 9), int8], Tensor[(864), float64]) */
}

def @func_12502(%var_12470: Tensor[(84), float32], %var_12471: uint32, %var_12472: Tensor[(600), uint8]) -> (Tensor[(7, 2, 5), float32], Tensor[(11, 2, 4), bool], Tensor[(84), float32], uint32, Tensor[(600), uint8]) {
  %920 = @func_10466() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(70), float32], Tensor[(8, 3, 3), float64]) */;
  %921 = cast(%var_12470, dtype="float32") /* ty=Tensor[(84), float32] */;
  %922 = cast(%var_12471, dtype="uint32") /* ty=uint32 */;
  %923 = cast(%var_12472, dtype="uint8") /* ty=Tensor[(600), uint8] */;
  %924 = reshape(%921, newshape=[6, 14, 1]) /* ty=Tensor[(6, 14, 1), float32] */;
  %925 = reshape(%922, newshape=[]) /* ty=uint32 */;
  %926 = reshape(%923, newshape=[600]) /* ty=Tensor[(600), uint8] */;
  %927 = @func_1633(%924, %925, %926) /* ty=(Tensor[(6, 13, 5), bool], Tensor[(6, 13, 5), bool], Tensor[(11, 2, 4), float64], Tensor[(616), float64], Tensor[(11, 2, 4), int32], Tensor[(6, 14, 1), float64], Tensor[(11, 2, 4), bool], Tensor[(600), uint8]) */;
  %928 = %920.0;
  %929 = %927.6;
  (%928, %929, %var_12470, %var_12471, %var_12472)
}

def @func_9590(%var_9587: uint32) -> (Tensor[(8, 3, 3), float32], Tensor[(6, 13, 5), bool], uint32) {
  %930 = cast(%var_9587, dtype="uint32") /* ty=uint32 */;
  %931 = reshape(%930, newshape=[]) /* ty=uint32 */;
  %932 = @func_8681() /* ty=Tensor[(8, 3, 3), float32] */;
  %933 = @func_1402(%931) /* ty=Tensor[(6, 13, 5), bool] */;
  (%932, %933, %var_9587)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */the function is provided too many arguments expected 0, found 1

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
const_15 = relay.const(-2.988540, dtype = "float64")#candidate|15|()|const|float64
var_16 = relay.var("var_16", dtype = "float64", shape = (11, 2, 4))#candidate|16|(11, 2, 4)|var|float64
bop_17 = relay.less(const_15.astype('bool'), var_16.astype('bool')) # shape=(11, 2, 4)
bop_22 = relay.floor_mod(const_15.astype('float64'), var_16.astype('float64')) # shape=(11, 2, 4)
output = relay.Tuple([bop_17,bop_22,])
output2 = relay.Tuple([bop_17,bop_22,])
func_34 = relay.Function([var_16,], output)
mod['func_34'] = func_34
mod = relay.transform.InferType()(mod)
var_35 = relay.var("var_35", dtype = "float64", shape = (11, 2, 4))#candidate|35|(11, 2, 4)|var|float64
output = func_34(var_35)
func_36 = relay.Function([var_35], output)
mutated_mod['func_36'] = func_36
mutated_mod = relay.transform.InferType()(mutated_mod)
var_153 = relay.var("var_153", dtype = "uint8", shape = (15, 4, 10))#candidate|153|(15, 4, 10)|var|uint8
const_154 = relay.const([[[-7,-6,7,6,-7,-8,-8,8,7,3],[8,-6,3,-9,2,-4,2,2,4,-3],[-4,-9,-9,4,-10,5,6,-8,-3,9],[-4,-2,3,-8,-3,9,3,10,6,9]],[[8,5,-7,-5,10,6,9,2,4,-10],[-2,-4,8,6,-9,-1,3,5,10,10],[5,8,6,5,-2,8,-5,-9,-8,8],[-2,-4,-4,-4,-8,6,2,7,-4,7]],[[9,-9,8,7,3,-3,2,-9,-8,-3],[-9,2,-5,-7,-3,-6,-10,7,3,3],[-7,2,-4,10,-5,-10,5,4,-1,8],[7,-4,-9,2,5,9,-2,5,-1,1]],[[9,-8,1,2,-5,4,4,-7,-1,4],[-6,7,-3,7,-7,-10,8,-1,-2,-3],[-5,8,-6,-10,-8,2,7,-4,-4,-6],[9,-1,6,8,-7,6,7,-9,1,-2]],[[8,-2,7,-7,9,6,-9,-5,-9,2],[3,7,-6,-4,10,7,-4,-2,7,6],[1,1,8,-5,-10,-4,7,-2,-10,1],[6,5,-6,-3,-6,-6,10,7,7,7]],[[-10,-10,-2,1,1,-1,7,9,5,-4],[-10,10,-2,-7,8,4,-5,-5,9,1],[8,-8,-10,-6,-8,7,-3,-9,-3,-3],[2,-9,4,-6,-1,-2,10,2,7,-6]],[[10,-3,2,7,-8,-8,-10,9,-2,6],[3,2,7,3,4,7,7,-7,3,6],[-6,4,-3,1,-8,-9,-4,4,7,-3],[9,4,-1,-4,-7,-8,7,9,4,3]],[[7,-5,-7,2,6,-4,7,-10,-1,5],[-7,10,-4,1,-1,2,-10,-8,-5,10],[6,-4,-4,-1,1,2,10,3,1,6],[2,-7,-4,-9,5,-10,-3,-4,-1,1]],[[-5,-3,5,1,-1,5,4,6,-8,8],[-4,8,5,6,9,9,2,-10,-9,10],[-9,-1,-10,-4,-10,4,1,3,4,-3],[9,-10,5,6,3,3,-3,-5,-1,-3]],[[-1,7,9,-1,9,9,-7,9,-10,-7],[-2,-5,5,10,-10,7,10,-5,-3,-5],[10,2,-4,9,-5,7,7,4,1,-7],[7,-2,7,-5,4,7,-5,-1,-8,-10]],[[-9,10,-8,-7,8,-2,8,-9,3,-9],[7,1,3,-8,-4,-5,7,10,-10,8],[3,-3,4,-9,-8,-4,-4,-7,-8,-9],[-5,-9,10,2,8,-7,10,3,-2,10]],[[9,-6,-10,-10,-8,-3,3,-9,-1,10],[1,-10,7,-4,4,-8,-8,7,-7,-8],[-8,-10,-5,2,10,-7,1,-1,-1,-7],[8,9,10,-6,5,-2,5,3,-10,7]],[[-1,8,-2,-10,3,7,5,-7,-3,3],[-7,4,6,-3,4,-6,-4,7,-5,-8],[-6,-10,-2,7,-2,-7,5,2,-7,-10],[4,-6,-10,2,-1,4,5,8,4,5]],[[6,-6,1,4,2,-1,-10,5,-1,5],[-9,-9,6,-2,-3,-8,-6,9,2,-7],[5,-3,6,-7,4,9,3,-8,3,1],[6,4,4,1,-5,4,-8,-7,2,-1]],[[7,10,6,-1,7,-7,-1,-6,4,-3],[-8,3,4,2,5,2,5,-2,-9,2],[-4,8,-1,2,-4,6,-2,9,8,-1],[7,5,-5,-3,-9,-2,-5,8,-5,-9]]], dtype = "uint8")#candidate|154|(15, 4, 10)|const|uint8
bop_155 = relay.equal(var_153.astype('bool'), relay.reshape(const_154.astype('bool'), relay.shape_of(var_153))) # shape=(15, 4, 10)
func_34_call = mod.get_global_var('func_34')
func_36_call = mutated_mod.get_global_var('func_36')
const_160 = relay.const([[8.261436,7.020500],[1.187377,-9.963111],[1.134115,-9.541280],[-0.091865,-6.365276],[-5.174339,-4.375049],[-4.995077,6.761628],[1.955642,-8.569719],[2.390431,-4.330312],[5.008921,-8.598316],[8.108673,5.820515],[6.450950,-5.519976],[-2.948768,-6.005024],[-7.179694,1.041552],[-3.472112,-7.216270],[-7.057959,7.592722],[-7.383988,-3.755382],[7.940270,-1.092669],[-5.499870,8.213053],[-0.277706,9.201938],[-5.450905,7.952405],[-9.677322,2.094190],[4.147953,3.324075],[6.298665,3.242546],[-3.237640,9.245607],[-8.292374,-0.008550],[7.598025,-6.633657],[-0.073924,-9.384083],[5.336589,9.572212],[2.838722,-4.834361],[-1.227435,-2.501216],[1.198030,7.460952],[8.843723,0.395544],[-4.160819,-6.077949],[-7.580260,1.799456],[0.493522,4.240682],[6.953717,-7.878764],[-1.702679,8.530695],[-5.976032,-2.097166],[2.149020,-5.694235],[-8.565080,-2.017751],[0.508693,-9.383145],[7.885033,-8.539458],[3.713134,-9.026583],[-6.559831,5.540397]], dtype = "float64")#candidate|160|(44, 2)|const|float64
call_159 = relay.TupleGetItem(func_34_call(relay.reshape(const_160.astype('float64'), [11, 2, 4])), 0)
call_161 = relay.TupleGetItem(func_36_call(relay.reshape(const_160.astype('float64'), [11, 2, 4])), 0)
output = relay.Tuple([bop_155,call_159,const_160,])
output2 = relay.Tuple([bop_155,call_161,const_160,])
func_167 = relay.Function([var_153,], output)
mod['func_167'] = func_167
mod = relay.transform.InferType()(mod)
var_168 = relay.var("var_168", dtype = "uint8", shape = (15, 4, 10))#candidate|168|(15, 4, 10)|var|uint8
output = func_167(var_168)
func_169 = relay.Function([var_168], output)
mutated_mod['func_169'] = func_169
mutated_mod = relay.transform.InferType()(mutated_mod)
const_542 = relay.const([[[-7.447507,2.329246,1.248827,-5.988546,6.149304,4.499247,6.446119,8.174233,-7.056852,6.575762,5.307925],[7.373317,-6.644361,8.071442,7.664175,6.909028,-3.246307,7.909562,2.405232,-5.934557,1.083063,-4.552675],[6.058713,9.796909,6.334374,9.405666,1.789681,7.516221,5.431606,3.946842,1.811328,-4.467845,6.686972],[-3.649253,4.200888,-1.090420,-9.248762,3.904260,-7.949637,4.588376,7.181821,-7.108052,-1.550448,-3.133747],[-1.005706,-8.000113,1.518855,1.088504,7.948068,6.822536,3.504897,9.044850,-9.060352,8.445677,7.611436],[9.752513,4.120202,3.493920,1.418894,2.911024,9.568440,1.676857,6.765437,-5.525348,-8.372741,4.374038],[6.938799,-5.107835,-6.711641,-9.852519,-7.595900,-1.020074,8.963453,1.625814,-3.771932,-2.424809,7.833239],[-2.330361,-9.082115,4.178006,-7.600810,-6.250295,7.179348,-9.118677,-6.048947,9.324007,-7.969978,7.755262],[-2.096521,-5.913256,8.691870,-1.598966,-8.886504,7.534802,1.494912,-1.040418,-5.242030,8.352881,5.629454],[9.191439,-7.540349,-9.120994,-5.124261,-5.855561,9.208555,7.221806,7.611529,2.612501,-6.019905,0.012194],[9.485361,-6.728761,-4.303627,8.159623,9.845447,-1.104406,0.558168,-1.590203,-3.524117,-7.616891,6.963522],[-8.068606,-3.517097,-3.718495,4.047225,-6.266699,8.495629,-2.100784,1.431538,5.944272,-7.819888,-0.109614],[9.828190,5.768640,-5.570959,2.364886,-9.251142,-4.609896,2.618899,9.487454,-8.346343,1.786675,-6.269211],[-1.636896,6.479080,-2.195265,9.475305,6.876674,3.649938,-2.587479,7.122611,1.959530,3.379694,-1.139798]],[[4.808433,5.311609,3.793532,5.346364,-0.326358,6.646900,-6.759751,5.320043,3.293280,-0.219955,-5.802117],[-0.777599,-8.903672,1.818899,4.787024,-1.097281,7.847503,2.804517,-3.927718,0.234865,-6.963316,-1.107177],[-4.525575,-1.733775,-3.896817,9.893853,5.231185,-3.670566,0.837259,3.222299,7.855042,0.991657,-2.208176],[-9.292003,-7.200354,0.538081,-9.033079,1.736909,-8.425012,-4.264265,-9.178714,3.328797,6.596627,4.784187],[0.771101,-2.628155,-5.347374,4.431200,-5.104083,9.972611,6.139950,1.625563,-0.006788,3.779747,-8.272447],[0.669946,8.569407,-6.923196,1.623814,9.115120,-7.269889,9.831884,-0.652065,1.142163,-2.493919,6.759387],[-0.282895,-2.214283,1.522502,7.643853,6.763754,-8.217083,6.156911,-6.732296,-7.720645,5.810529,8.455333],[3.347841,5.002113,-6.243594,8.821096,-5.283502,-7.607362,-3.332795,-8.268581,1.050100,-7.954818,-1.840145],[-5.070058,-6.716942,-5.920977,2.790488,5.349168,2.266523,-7.805564,-7.887458,8.760286,6.116574,6.100300],[6.225256,0.346155,-3.703945,-9.195356,3.655295,6.168806,1.283570,8.093025,0.096201,9.801970,9.817074],[-5.060151,8.094373,-9.507996,1.204230,-5.610434,9.620548,2.232170,-6.775508,-9.052650,-2.524426,2.933857],[-7.099094,-7.453936,1.911656,-6.283333,8.422729,6.193221,4.159480,3.880933,3.963173,8.112012,2.524714],[-6.631270,4.924851,6.971488,-9.855421,8.060797,1.367758,-4.314789,-5.781830,-3.234499,1.619365,-4.413825],[7.444394,9.617267,-9.521499,-9.664174,0.881133,3.174176,7.250301,-1.613675,0.251424,-0.404418,-3.255901]],[[-3.456908,-8.531183,-6.236456,-1.205481,-1.675858,6.933441,-1.230380,-2.533317,5.068042,-2.030773,-6.306216],[-9.106897,5.043835,4.520740,-6.226523,6.470185,-1.616445,6.424987,6.289170,3.057508,-2.599608,-2.950972],[-1.213136,6.508299,-8.277367,-9.565979,2.145187,-3.348008,8.909170,3.232117,5.813839,-1.083011,-8.403786],[-2.836570,6.551757,9.862360,-5.607870,-2.011687,-7.420096,1.121034,9.922975,-6.904265,-3.209262,-8.574416],[-1.725340,5.426371,-6.529776,9.491728,-8.497891,-7.391986,8.192701,4.748794,5.034791,0.722025,9.059219],[1.908693,-5.284620,5.369200,-5.676583,-4.321286,6.780181,-5.405215,8.013524,-0.095659,0.559785,0.442593],[-6.144801,5.779281,9.815642,-1.771773,4.361175,3.442871,3.942139,-8.337675,-5.899480,-2.634530,-2.613837],[9.459775,-8.544388,8.996067,6.328348,-2.083231,6.648030,6.353011,-5.387261,1.736135,5.220682,-1.662536],[-4.369104,-6.280559,4.824519,-0.674335,8.134024,-6.659421,-5.473076,-1.373511,-0.719634,7.114724,-6.555297],[-6.783125,-5.919207,-4.891689,6.421869,-3.397974,4.228641,-3.918536,3.493640,-2.855462,6.436481,-8.648041],[3.061165,2.931266,-9.994865,3.271226,5.089687,4.647924,-6.205868,-0.933860,-2.613286,1.297412,9.375790],[9.042922,-0.078067,-4.650706,-6.303993,9.141281,1.676501,8.473318,-3.849610,-9.852116,5.659078,1.979021],[2.061633,5.026504,2.772483,3.118941,-8.067587,1.566123,-8.280634,-1.300096,3.077841,-8.424272,-6.691605],[-3.348999,5.860798,8.110693,-4.513471,-1.424504,-2.154488,-8.859929,-3.318715,-8.941838,-4.178864,4.699158]],[[0.674932,3.050118,-3.708410,7.650232,6.695137,0.930351,-7.016962,0.036112,1.033367,-1.787430,9.722374],[3.460144,-1.926039,3.956955,-8.697045,-4.332682,-3.263321,-3.663038,1.990263,-4.475160,4.176868,4.226735],[-0.939257,-4.482637,-9.464949,8.629893,1.579975,3.558932,-5.194436,-0.285852,-9.595158,5.166065,-9.209441],[4.995244,7.277661,3.262149,6.744001,7.271632,4.938563,4.826197,-5.948397,-3.367139,-4.931355,-5.300735],[-7.517072,5.798950,3.092101,5.922676,-1.195946,8.907269,-0.686825,-0.239602,-7.907021,0.315057,4.698510],[0.323772,3.921245,-5.544013,-3.317493,3.372520,5.467587,5.426355,9.884250,9.386513,9.589188,8.832704],[5.137862,2.409320,5.616068,7.454048,7.456654,3.492207,-9.512983,-9.071191,-9.075254,8.765699,-3.756227],[-3.851368,-0.744405,5.051910,-3.368145,0.916432,-3.614940,6.865366,-7.854443,2.371445,-2.089576,-3.989153],[-5.479375,5.825332,-7.544837,-9.857801,2.517896,-8.562452,-8.669380,6.200794,7.545373,-7.173499,5.254226],[9.035781,3.165001,6.386963,1.865054,-5.885675,1.863888,-6.487708,8.055187,-3.183626,0.221455,-7.177510],[7.859833,7.265216,-4.247955,-2.289760,6.395897,1.588675,-0.201188,-3.393082,1.889182,9.953300,-5.345577],[-2.803285,5.592184,-4.099828,-0.659043,-5.606492,-3.632482,-6.243904,-1.205350,-5.136818,-1.058113,-5.754211],[6.592456,3.493382,8.939500,8.205792,-6.969363,0.616176,-0.334368,6.361752,-2.005765,-9.295436,6.648471],[-2.096376,-7.878021,0.824378,-0.526783,0.158329,9.378643,-1.609001,-1.153203,-5.861908,-4.709286,-9.094680]]], dtype = "float64")#candidate|542|(4, 14, 11)|const|float64
var_543 = relay.var("var_543", dtype = "float64", shape = (4, 14, 11))#candidate|543|(4, 14, 11)|var|float64
bop_544 = relay.divide(const_542.astype('float64'), relay.reshape(var_543.astype('float64'), relay.shape_of(const_542))) # shape=(4, 14, 11)
func_34_call = mod.get_global_var('func_34')
func_36_call = mutated_mod.get_global_var('func_36')
const_553 = relay.const([[-8.152297],[4.143262],[-0.243889],[-5.031493],[-6.777093],[-3.367938],[6.323540],[3.038371],[-6.405096],[3.104131],[-5.070993],[-6.540182],[5.961777],[3.159958],[1.980096],[1.843356],[7.130678],[4.457755],[5.301681],[2.453755],[4.103340],[-5.916477],[-1.574500],[9.554012],[-2.656491],[-8.029384],[5.735425],[2.220609],[-0.197955],[-5.217736],[-0.266217],[9.658333],[6.112163],[-2.697660],[-3.037109],[-7.845982],[1.232941],[-0.329612],[-6.656554],[8.603785],[-6.573655],[3.483640],[-2.577099],[-6.419857],[-6.377763],[-2.134973],[-5.798349],[-9.965249],[-0.334345],[2.451302],[-5.672999],[-7.912524],[-2.770675],[6.835635],[-5.523221],[8.674050],[-9.979817],[8.420274],[1.991005],[0.669520],[-7.894467],[-2.235874],[0.039290],[-0.288848],[9.022515],[2.366935],[7.083148],[-6.816672],[-4.560038],[-1.478325],[-5.045660],[-7.629424],[4.842996],[9.825370],[0.076798],[-9.988735],[-7.308022],[6.837747],[0.218497],[2.069224],[6.245931],[8.188896],[-1.175360],[-1.487254],[9.978217],[-0.888103],[-5.954220],[9.183404]], dtype = "float64")#candidate|553|(88, 1)|const|float64
call_552 = relay.TupleGetItem(func_34_call(relay.reshape(const_553.astype('float64'), [11, 2, 4])), 1)
call_554 = relay.TupleGetItem(func_36_call(relay.reshape(const_553.astype('float64'), [11, 2, 4])), 1)
output = relay.Tuple([bop_544,call_552,const_553,])
output2 = relay.Tuple([bop_544,call_554,const_553,])
func_558 = relay.Function([var_543,], output)
mod['func_558'] = func_558
mod = relay.transform.InferType()(mod)
mutated_mod['func_558'] = func_558
mutated_mod = relay.transform.InferType()(mutated_mod)
var_559 = relay.var("var_559", dtype = "float64", shape = (4, 14, 11))#candidate|559|(4, 14, 11)|var|float64
func_558_call = mutated_mod.get_global_var('func_558')
call_560 = func_558_call(var_559)
output = call_560
func_561 = relay.Function([var_559], output)
mutated_mod['func_561'] = func_561
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1384 = relay.var("var_1384", dtype = "uint32", shape = ())#candidate|1384|()|var|uint32
const_1385 = relay.const([[[7,2,-2,-4,10],[-1,6,9,-5,-5],[-3,1,-4,4,8],[-10,9,-10,6,7],[-10,5,4,-2,-9],[6,-9,-10,5,-5],[-5,-5,-8,5,-1],[-2,-5,-6,2,-10],[6,-5,-4,-2,-10],[1,1,-2,-2,-2],[1,5,10,-5,-1],[5,2,4,8,-4],[-10,-6,2,9,2]],[[9,7,7,7,-2],[-8,8,1,-7,-6],[7,-7,-9,8,-3],[3,-4,-7,-10,7],[-5,-2,-7,4,2],[-7,10,-10,3,8],[10,9,2,9,2],[-5,-10,-1,2,1],[9,-10,9,9,10],[7,9,-6,-4,2],[-8,7,5,-5,7],[-10,-1,7,-10,4],[-2,-10,9,-1,-10]],[[2,-3,7,9,7],[-7,2,5,2,6],[7,-8,-10,-4,3],[5,3,-4,-5,2],[9,-7,1,-2,9],[-8,-5,-5,5,-5],[5,-4,7,-9,-1],[4,-4,2,-5,8],[-2,2,5,4,9],[8,1,-2,-10,-9],[-4,4,4,-3,10],[-2,-10,-2,4,-6],[-7,-8,-8,5,3]],[[-10,8,7,10,10],[-1,-4,9,-7,4],[-5,-10,9,5,-6],[9,7,10,9,4],[-1,4,-8,-1,-7],[10,8,-6,8,1],[10,-9,-7,-1,-8],[8,1,-5,6,-8],[3,-4,10,7,1],[-1,8,-10,-7,-1],[-7,4,-2,9,-7],[10,4,2,-8,-1],[5,-2,2,-7,-4]],[[-5,7,10,-10,-9],[7,8,7,-7,-7],[4,10,6,-9,-10],[3,-7,-7,-2,-8],[-6,2,6,2,-4],[4,4,5,6,6],[8,-3,10,4,9],[-4,-6,-6,6,8],[10,10,-5,-5,1],[-1,1,-6,6,-4],[1,-7,-4,9,-3],[-4,8,9,8,-8],[-7,10,5,-8,5]],[[5,10,10,6,-8],[6,-6,-3,-2,10],[2,9,7,9,4],[-9,-9,-2,5,-10],[-9,-2,-3,-9,-9],[-4,-8,4,-6,1],[6,-10,9,6,2],[-6,2,-5,6,-1],[4,-6,8,-6,-5],[-6,-6,-8,8,8],[9,10,-3,-10,2],[-2,9,-9,-1,3],[3,-9,-8,4,2]]], dtype = "uint32")#candidate|1385|(6, 13, 5)|const|uint32
bop_1386 = relay.less_equal(var_1384.astype('bool'), const_1385.astype('bool')) # shape=(6, 13, 5)
output = bop_1386
output2 = bop_1386
func_1402 = relay.Function([var_1384,], output)
mod['func_1402'] = func_1402
mod = relay.transform.InferType()(mod)
mutated_mod['func_1402'] = func_1402
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1403 = relay.var("var_1403", dtype = "uint32", shape = ())#candidate|1403|()|var|uint32
func_1402_call = mutated_mod.get_global_var('func_1402')
call_1404 = func_1402_call(var_1403)
output = call_1404
func_1405 = relay.Function([var_1403], output)
mutated_mod['func_1405'] = func_1405
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1430 = relay.var("var_1430", dtype = "int64", shape = (8, 2, 7))#candidate|1430|(8, 2, 7)|var|int64
var_1431 = relay.var("var_1431", dtype = "int64", shape = (8, 2, 7))#candidate|1431|(8, 2, 7)|var|int64
bop_1432 = relay.bitwise_or(var_1430.astype('int64'), relay.reshape(var_1431.astype('int64'), relay.shape_of(var_1430))) # shape=(8, 2, 7)
output = bop_1432
output2 = bop_1432
func_1450 = relay.Function([var_1430,var_1431,], output)
mod['func_1450'] = func_1450
mod = relay.transform.InferType()(mod)
mutated_mod['func_1450'] = func_1450
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1450_call = mutated_mod.get_global_var('func_1450')
var_1452 = relay.var("var_1452", dtype = "int64", shape = (8, 2, 7))#candidate|1452|(8, 2, 7)|var|int64
var_1453 = relay.var("var_1453", dtype = "int64", shape = (8, 2, 7))#candidate|1453|(8, 2, 7)|var|int64
call_1451 = func_1450_call(var_1452,var_1453,)
output = call_1451
func_1454 = relay.Function([var_1452,var_1453,], output)
mutated_mod['func_1454'] = func_1454
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1533 = relay.var("var_1533", dtype = "float32", shape = (6, 14, 1))#candidate|1533|(6, 14, 1)|var|float32
uop_1534 = relay.atanh(var_1533.astype('float32')) # shape=(6, 14, 1)
func_1402_call = mod.get_global_var('func_1402')
func_1405_call = mutated_mod.get_global_var('func_1405')
var_1551 = relay.var("var_1551", dtype = "uint32", shape = ())#candidate|1551|()|var|uint32
call_1550 = func_1402_call(relay.reshape(var_1551.astype('uint32'), []))
call_1552 = func_1402_call(relay.reshape(var_1551.astype('uint32'), []))
func_1402_call = mod.get_global_var('func_1402')
func_1405_call = mutated_mod.get_global_var('func_1405')
call_1558 = func_1402_call(relay.reshape(var_1551.astype('uint32'), []))
call_1559 = func_1402_call(relay.reshape(var_1551.astype('uint32'), []))
func_558_call = mod.get_global_var('func_558')
func_561_call = mutated_mod.get_global_var('func_561')
const_1573 = relay.const([7.101645,-7.365633,9.188102,-6.492573,1.001921,-0.934594,6.084559,5.157782,-0.079866,0.708279,-7.327890,5.630611,4.919217,8.502466,9.562393,-9.811270,-8.021209,4.033323,-3.726438,-4.661980,-9.066583,-9.722368,-7.971784,-1.847056,9.703892,9.903491,-9.876575,-4.181158,6.500946,-6.898748,0.548258,-1.725291,-1.184465,-6.318500,0.043036,-6.153806,7.765070,2.537614,-5.884295,4.545727,5.328267,3.109885,5.796765,-8.570927,0.843775,0.181701,0.693375,-4.434348,9.020085,-5.692645,6.228522,7.207699,2.098691,5.423307,-3.333921,8.448511,5.291693,3.377724,1.185540,-2.420186,6.307419,7.160839,7.425608,-9.871864,-8.594331,7.281049,8.530413,3.918182,-6.381274,-7.635756,1.110194,-0.193265,-3.991874,0.315708,4.439137,-9.058717,1.397885,6.722009,4.881299,6.395345,-8.287503,5.292050,3.121619,-9.124501,9.517063,9.054600,9.431020,-8.277214,0.163577,5.759055,6.553737,1.861084,4.111793,1.778587,-2.045593,6.556118,8.477926,-8.974891,3.430819,-9.744977,1.437540,7.047877,-8.029895,-7.952848,5.547279,-2.628999,3.295488,7.081287,1.459754,0.731181,0.831155,-6.434837,-4.301767,-4.659273,-5.738587,-9.102148,-1.329903,-2.034915,2.198158,-7.224857,-2.410299,5.432141,7.525231,-4.443398,1.947528,-8.134731,-7.495791,-1.029175,-3.481526,-2.943860,7.907751,-7.611291,-8.563224,-5.124282,-4.703152,-6.713623,-4.009419,-2.672621,-9.156124,-5.498299,5.592420,5.903188,4.282818,-1.849005,-1.437961,-4.253289,5.720260,7.264507,0.877141,-7.915414,-7.877817,-2.864731,-9.869443,-6.360116,-2.156832,5.665754,-9.546920,0.898527,-7.943000,7.921678,9.010600,-3.014228,-2.843165,-6.497043,-1.584968,9.794714,-1.286239,6.758733,4.427020,8.509075,-2.188598,8.929055,6.903455,-1.763732,-6.884223,-3.550632,-9.637999,-1.156547,-9.667834,-6.923191,2.688292,-0.041889,-0.173016,2.071059,8.730561,9.440159,1.708029,-6.805990,0.435689,-9.757040,-5.870583,1.868869,7.035300,-1.904105,2.784659,-1.368598,-3.620325,-1.115962,-9.153356,-7.531049,-5.536395,5.961174,-7.528241,6.213629,9.761574,7.594597,-0.995738,-4.241230,3.968808,-3.916971,9.684456,4.455984,0.881516,-5.529003,8.639825,9.667440,-9.504727,0.493600,3.940991,9.648591,-9.574480,-9.181019,8.776166,0.639024,3.476408,6.304705,-1.505159,5.441374,-0.242035,-5.316615,-8.364346,-6.988766,-1.852581,-9.573998,-8.254312,-5.718629,-8.546421,9.801689,1.551562,-7.588331,-0.568058,-5.946496,2.847774,-5.277596,2.022302,2.674582,9.399121,5.407845,-3.690319,5.894410,4.166048,9.312365,-8.134471,1.006562,2.790463,7.365104,-7.119956,1.903608,8.116212,6.941721,-1.146490,-6.542798,-6.264827,5.385993,8.239975,7.161279,2.319365,5.005005,-1.488769,5.165281,-0.465017,7.031609,-5.730213,-4.113732,4.191801,9.429171,1.165785,7.231503,5.050824,-7.475506,7.579802,8.287432,-8.003103,-3.573799,4.481387,1.898530,-9.510866,-2.337506,3.884426,-1.858678,8.657332,-4.338076,-6.476307,-2.756419,-5.454508,-2.002084,9.973051,-6.788460,-8.851860,-8.772541,5.305855,-0.738767,-2.976913,-1.950422,0.203451,-1.262482,-6.067147,3.072634,-7.386283,-4.803447,-3.796936,-1.000349,-1.953108,-0.907236,-1.187000,9.109104,-7.568103,3.680534,-1.739024,-2.283338,1.067405,-2.169279,6.903164,-6.496921,-2.361926,-4.228067,7.847632,-3.589497,-9.872082,3.679424,2.921671,-5.324802,-3.371939,-9.243835,2.199804,-7.296827,-3.464742,1.686181,5.904323,9.075998,-4.638572,-7.253253,6.514536,-1.300902,6.874956,-1.114493,-9.955229,-4.149449,-9.519939,2.556868,5.253724,-5.848970,3.972125,0.503155,7.717661,-2.212278,8.329040,-7.951665,6.109904,-0.817381,-4.133040,6.063239,3.195241,5.260403,-5.671576,4.020368,-0.703220,3.752657,3.835038,-9.133418,-0.058371,7.600654,-8.486513,-8.507944,-4.707040,-7.741616,2.507276,2.663226,-0.119087,-4.699030,7.496229,-7.824283,-2.555723,3.847446,5.407563,-4.286292,-4.335223,5.313648,4.811591,-2.309324,-8.265570,-2.005541,-0.117705,-2.497514,-5.003678,-1.199916,-3.877476,-1.927725,-9.723996,9.667983,5.778618,6.622081,2.482765,-2.244026,-3.981089,-1.954629,-5.937819,-7.002957,-4.243249,7.376845,-1.502845,-4.206133,-0.809522,6.741594,3.065892,-2.007077,-1.553415,-9.706349,-6.033729,6.754090,-5.809946,7.081126,-8.517375,7.042346,-8.065187,-0.370427,-2.927387,-8.992040,8.344113,-0.254701,-3.334397,8.608272,-5.081203,-2.658746,7.390908,-8.331908,3.462799,-7.275963,7.830549,-0.064674,-1.592044,-3.223448,6.276906,3.152967,-1.125927,9.842911,0.715032,-4.240589,2.737142,-6.999965,-3.794551,-9.243748,1.313262,5.831382,-9.840878,-2.566516,-1.230808,-7.393441,3.150553,-8.279418,1.868143,-7.847100,5.939469,-1.782073,9.789509,6.168900,1.463233,3.986960,-3.541298,-2.990135,-1.895807,1.845313,4.215498,6.254419,8.057192,6.517796,3.349225,8.248977,-8.242370,5.839009,2.337873,3.753900,-1.282535,8.011452,4.952890,-4.619860,-8.977771,8.491517,7.617031,3.390989,-9.825791,1.560064,-5.290228,-5.807764,-1.091533,6.357922,-1.141123,0.243323,3.626102,3.171613,-2.940647,0.965454,4.854595,-9.299510,2.913204,-7.555104,-9.892529,0.071777,-2.609633,3.186346,-4.461334,-6.741094,7.368305,3.893396,-1.595188,-1.888683,-6.341301,-9.575492,-0.732012,-7.502759,-0.385007,6.284807,-0.849210,8.801119,6.250379,-3.399592,0.794979,-7.736715,-9.802059,-4.510957,4.618706,8.661066,-5.705950,0.689912,-7.566537,-0.955806,-2.137498,-8.165479,-2.081210,-9.700895,-1.218447,8.942238,0.901991,9.233605,-6.829867,9.743710,-8.767221,7.582083,-2.312747,4.352418,8.327066,8.941589,0.674681,-1.482263,3.125265,8.492646,1.737570,-6.751664,9.471000,-6.160124,4.554787,2.737423,-5.302541,-5.398574,0.624695,-6.967067,4.079124,2.128468,9.561634,-0.321674,-5.436040,-6.623963,1.804130,-8.116569,-3.770353,-8.063793,-2.079688,2.304416,-5.309912,0.463347,9.863585,-1.532962,9.007799,-9.240158,-2.347334,-4.655556,-2.009300,-6.634724,6.573501,-2.916557,-6.001898,5.263588,-6.231303,4.049236,-4.041227,1.977100,-4.504194,-5.447505,9.205180,-4.224529,8.397981,-3.067657,-8.792058,1.875477,1.560986,4.692586,-6.861800,9.244905,-1.159954,-2.373203,9.983346,-2.848366,9.856451,-6.362981,4.538936,-5.688940], dtype = "float64")#candidate|1573|(616,)|const|float64
call_1572 = relay.TupleGetItem(func_558_call(relay.reshape(const_1573.astype('float64'), [4, 14, 11])), 1)
call_1574 = relay.TupleGetItem(func_561_call(relay.reshape(const_1573.astype('float64'), [4, 14, 11])), 1)
func_558_call = mod.get_global_var('func_558')
func_561_call = mutated_mod.get_global_var('func_561')
call_1596 = relay.TupleGetItem(func_558_call(relay.reshape(const_1573.astype('float64'), [4, 14, 11])), 1)
call_1597 = relay.TupleGetItem(func_561_call(relay.reshape(const_1573.astype('float64'), [4, 14, 11])), 1)
bop_1605 = relay.bitwise_xor(var_1551.astype('int32'), call_1596.astype('int32')) # shape=(11, 2, 4)
bop_1608 = relay.bitwise_xor(var_1551.astype('int32'), call_1597.astype('int32')) # shape=(11, 2, 4)
uop_1615 = relay.cos(uop_1534.astype('float64')) # shape=(6, 14, 1)
func_167_call = mod.get_global_var('func_167')
func_169_call = mutated_mod.get_global_var('func_169')
var_1629 = relay.var("var_1629", dtype = "uint8", shape = (600,))#candidate|1629|(600,)|var|uint8
call_1628 = relay.TupleGetItem(func_167_call(relay.reshape(var_1629.astype('uint8'), [15, 4, 10])), 1)
call_1630 = relay.TupleGetItem(func_169_call(relay.reshape(var_1629.astype('uint8'), [15, 4, 10])), 1)
output = relay.Tuple([call_1550,call_1558,call_1572,const_1573,bop_1605,uop_1615,call_1628,var_1629,])
output2 = relay.Tuple([call_1552,call_1559,call_1574,const_1573,bop_1608,uop_1615,call_1630,var_1629,])
func_1633 = relay.Function([var_1533,var_1551,var_1629,], output)
mod['func_1633'] = func_1633
mod = relay.transform.InferType()(mod)
mutated_mod['func_1633'] = func_1633
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1633_call = mutated_mod.get_global_var('func_1633')
var_1635 = relay.var("var_1635", dtype = "float32", shape = (6, 14, 1))#candidate|1635|(6, 14, 1)|var|float32
var_1636 = relay.var("var_1636", dtype = "uint32", shape = ())#candidate|1636|()|var|uint32
var_1637 = relay.var("var_1637", dtype = "uint8", shape = (600,))#candidate|1637|(600,)|var|uint8
call_1634 = func_1633_call(var_1635,var_1636,var_1637,)
output = call_1634
func_1638 = relay.Function([var_1635,var_1636,var_1637,], output)
mutated_mod['func_1638'] = func_1638
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1871 = relay.const(-7, dtype = "int8")#candidate|1871|()|const|int8
var_1872 = relay.var("var_1872", dtype = "int8", shape = (1, 11, 9))#candidate|1872|(1, 11, 9)|var|int8
bop_1873 = relay.logical_xor(const_1871.astype('int8'), var_1872.astype('int8')) # shape=(1, 11, 9)
output = bop_1873
output2 = bop_1873
func_1876 = relay.Function([var_1872,], output)
mod['func_1876'] = func_1876
mod = relay.transform.InferType()(mod)
mutated_mod['func_1876'] = func_1876
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1877 = relay.var("var_1877", dtype = "int8", shape = (1, 11, 9))#candidate|1877|(1, 11, 9)|var|int8
func_1876_call = mutated_mod.get_global_var('func_1876')
call_1878 = func_1876_call(var_1877)
output = call_1878
func_1879 = relay.Function([var_1877], output)
mutated_mod['func_1879'] = func_1879
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1947 = relay.var("var_1947", dtype = "float64", shape = (8, 9, 12))#candidate|1947|(8, 9, 12)|var|float64
uop_1948 = relay.tan(var_1947.astype('float64')) # shape=(8, 9, 12)
func_1876_call = mod.get_global_var('func_1876')
func_1879_call = mutated_mod.get_global_var('func_1879')
const_1958 = relay.const([[-3,4,-6,10,-9,4,-4,7,-6,4,8,-8,-5,-2,2,-7,-10,10,-5,-8,5,-6,-4,9,-5,7,6,-8,4,6,-7,5,-3,-5,-3,5,-6,9,4,-2,-2,4,-8,1,-4,10,-9,9,7,-2,-9,-2,-8,7,-10,2,-9,10,-1,-7,-7,6,-1,-7,9,1,-6,2,-6,5,7,-8,6,-4,-10,-9,10,-10,-10,-9,6,-8,-5,-8,1,-6,3,-7,-3,-3,3,-9,-9,4,-8,2,-5,8,-3]], dtype = "int8")#candidate|1958|(1, 99)|const|int8
call_1957 = func_1876_call(relay.reshape(const_1958.astype('int8'), [1, 11, 9]))
call_1959 = func_1876_call(relay.reshape(const_1958.astype('int8'), [1, 11, 9]))
output = relay.Tuple([uop_1948,call_1957,const_1958,])
output2 = relay.Tuple([uop_1948,call_1959,const_1958,])
func_1961 = relay.Function([var_1947,], output)
mod['func_1961'] = func_1961
mod = relay.transform.InferType()(mod)
var_1962 = relay.var("var_1962", dtype = "float64", shape = (8, 9, 12))#candidate|1962|(8, 9, 12)|var|float64
output = func_1961(var_1962)
func_1963 = relay.Function([var_1962], output)
mutated_mod['func_1963'] = func_1963
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2259 = relay.var("var_2259", dtype = "float64", shape = (2, 11, 13))#candidate|2259|(2, 11, 13)|var|float64
uop_2260 = relay.sigmoid(var_2259.astype('float64')) # shape=(2, 11, 13)
output = uop_2260
output2 = uop_2260
func_2269 = relay.Function([var_2259,], output)
mod['func_2269'] = func_2269
mod = relay.transform.InferType()(mod)
mutated_mod['func_2269'] = func_2269
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2270 = relay.var("var_2270", dtype = "float64", shape = (2, 11, 13))#candidate|2270|(2, 11, 13)|var|float64
func_2269_call = mutated_mod.get_global_var('func_2269')
call_2271 = func_2269_call(var_2270)
output = call_2271
func_2272 = relay.Function([var_2270], output)
mutated_mod['func_2272'] = func_2272
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2295 = relay.var("var_2295", dtype = "int32", shape = ())#candidate|2295|()|var|int32
var_2296 = relay.var("var_2296", dtype = "int32", shape = (1, 3, 7))#candidate|2296|(1, 3, 7)|var|int32
bop_2297 = relay.minimum(var_2295.astype('int32'), var_2296.astype('int32')) # shape=(1, 3, 7)
uop_2305 = relay.asinh(var_2296.astype('float32')) # shape=(1, 3, 7)
func_167_call = mod.get_global_var('func_167')
func_169_call = mutated_mod.get_global_var('func_169')
const_2308 = relay.const([-8,7,-3,7,-3,7,-5,-9,7,-7,-3,6,-2,4,6,1,-4,-9,1,2,-2,-3,7,-7,1,-5,-7,-4,-2,4,4,3,8,-4,7,-2,-8,-7,8,-7,-8,-5,3,-5,10,6,-7,-1,-10,-5,-2,5,3,-2,6,1,-4,-10,-8,4,4,-3,9,-9,10,6,-10,-9,-3,-3,-2,2,3,-3,-8,-10,-6,-5,-8,4,8,-7,10,-3,-8,-1,-3,4,-6,-4,3,7,8,4,8,-1,9,9,5,-2,8,-1,10,-6,10,1,5,-3,-3,6,-7,10,-4,-5,10,-2,-5,-9,8,-1,5,-4,-1,-3,3,6,6,-8,-6,9,-2,-4,4,10,-1,10,3,8,10,8,9,-5,-1,-5,-6,3,-7,-3,-2,-5,-3,9,-9,-8,8,-4,10,-4,-2,8,-5,-6,-7,5,3,2,-5,10,8,4,-3,-5,-10,4,7,-2,4,-7,8,-10,-4,-6,3,-4,3,-9,8,9,-4,-10,8,5,3,-3,-6,1,-5,-10,3,1,1,2,5,-7,-8,-10,-10,-6,-7,-3,10,-4,3,3,-7,3,4,7,-9,-8,3,1,1,8,6,2,7,3,9,7,-10,-3,-6,-6,7,1,-10,-5,10,10,5,4,-7,4,-4,-1,9,-1,-6,-9,-10,5,1,-4,3,8,5,2,10,-7,6,9,2,10,8,1,10,-2,5,-3,-10,-10,5,-9,9,9,6,3,-9,-5,4,5,-3,-4,-2,9,-10,-9,3,9,-5,-7,4,8,5,-10,-1,-3,-3,5,6,9,4,-8,-5,-9,5,1,8,-5,-3,1,2,-8,-3,-2,6,-4,9,-5,10,5,10,5,5,10,-4,10,7,3,-1,-8,6,7,-3,-10,-8,8,-10,7,-2,-3,-10,-6,-3,8,6,10,7,7,-2,2,-3,10,-3,1,4,4,7,10,1,-1,-3,8,10,9,-6,4,3,-5,8,2,9,5,-7,3,4,-4,-9,-8,-10,3,-10,-5,10,7,-7,-2,-8,10,4,5,9,9,-4,9,2,9,-8,2,8,5,-10,-10,6,4,-5,-1,8,2,-5,-5,-2,10,3,-7,-3,4,3,-4,4,-8,8,-3,9,10,8,-10,2,-10,4,-5,4,-2,5,-6,5,8,-5,-10,8,-8,-7,-7,-10,5,-8,1,-2,-9,-9,6,10,7,-6,-2,9,3,10,-7,8,-6,-4,6,-2,-3,-3,6,2,1,-10,-4,-4,-7,8,-9,-5,1,-4,5,4,-6,6,10,-5,8,5,4,-1,-6,-4,3,9,-1,3,-8,4,3,6,-8,8,6,-9,3,-3,9,5,9,8,-7,-5,-9,9,-9,-7,5,4,-9,2,-3,4,-4,-7,-2,-2,7,4,-6,-8,-7,1,-2,-3,-8,-6,2,4,-6,-9,-8,-7,-6,-3,-3,7,-7,2,-3,-2,-2,3,-6,-9,10,1,9,-6,-1,9,-7,-2,7,4,8,3,4,-3,-3,-3,2,-2,5,8,-5,8,3,8,5,-10,-10,5,6,-4,-4,-1,-4,7,-1,3,-10,-1,2,-3,-3,-4,-3,-9,-8,-10,-2], dtype = "uint8")#candidate|2308|(600,)|const|uint8
call_2307 = relay.TupleGetItem(func_167_call(relay.reshape(const_2308.astype('uint8'), [15, 4, 10])), 2)
call_2309 = relay.TupleGetItem(func_169_call(relay.reshape(const_2308.astype('uint8'), [15, 4, 10])), 2)
bop_2310 = relay.bitwise_xor(call_2307.astype('int32'), var_2295.astype('int32')) # shape=(44, 2)
bop_2313 = relay.bitwise_xor(call_2309.astype('int32'), var_2295.astype('int32')) # shape=(44, 2)
output = relay.Tuple([bop_2297,uop_2305,const_2308,bop_2310,])
output2 = relay.Tuple([bop_2297,uop_2305,const_2308,bop_2313,])
func_2316 = relay.Function([var_2295,var_2296,], output)
mod['func_2316'] = func_2316
mod = relay.transform.InferType()(mod)
var_2317 = relay.var("var_2317", dtype = "int32", shape = ())#candidate|2317|()|var|int32
var_2318 = relay.var("var_2318", dtype = "int32", shape = (1, 3, 7))#candidate|2318|(1, 3, 7)|var|int32
output = func_2316(var_2317,var_2318,)
func_2319 = relay.Function([var_2317,var_2318,], output)
mutated_mod['func_2319'] = func_2319
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2526 = relay.var("var_2526", dtype = "float32", shape = (7, 1, 15))#candidate|2526|(7, 1, 15)|var|float32
uop_2527 = relay.cosh(var_2526.astype('float32')) # shape=(7, 1, 15)
func_1961_call = mod.get_global_var('func_1961')
func_1963_call = mutated_mod.get_global_var('func_1963')
var_2530 = relay.var("var_2530", dtype = "float64", shape = (864,))#candidate|2530|(864,)|var|float64
call_2529 = relay.TupleGetItem(func_1961_call(relay.reshape(var_2530.astype('float64'), [8, 9, 12])), 2)
call_2531 = relay.TupleGetItem(func_1963_call(relay.reshape(var_2530.astype('float64'), [8, 9, 12])), 2)
var_2542 = relay.var("var_2542", dtype = "float64", shape = (864,))#candidate|2542|(864,)|var|float64
bop_2543 = relay.mod(var_2530.astype('float32'), relay.reshape(var_2542.astype('float32'), relay.shape_of(var_2530))) # shape=(864,)
func_558_call = mod.get_global_var('func_558')
func_561_call = mutated_mod.get_global_var('func_561')
const_2548 = relay.const([5.045667,2.021219,-0.922576,2.122214,-5.954949,8.575259,5.553024,-5.977312,-4.663295,6.321459,8.915268,8.796213,-2.557843,-7.629727,3.276828,7.079424,3.661723,-8.284770,-3.071571,-9.605322,6.997776,-7.262382,4.139439,-8.598202,9.363031,5.992683,-5.684562,2.672978,-2.998848,-9.758918,-0.014622,-6.722201,-5.567361,-1.872053,7.670687,5.671361,-8.879978,4.681816,-5.437699,9.754644,8.952406,4.948834,-0.834493,-0.912936,-0.328345,-5.822961,-4.196333,2.461191,-9.012945,2.009407,-6.999315,-5.395772,5.484764,-1.502743,-3.650533,5.404110,-0.857707,7.635301,8.022569,3.535828,-3.356961,-1.324288,-7.884841,2.315689,1.998660,-6.082971,7.458586,-5.877615,-2.927455,-4.489918,0.898307,-8.316605,-7.298686,-7.095341,8.093516,-9.431565,1.094615,1.177831,-7.288106,-7.310485,1.273459,6.119102,-6.912186,0.945326,-9.040454,7.714310,1.657886,7.975873,4.707993,4.346109,2.511070,-1.729961,6.462050,-7.143144,-4.949174,5.490441,-2.026972,-7.878883,9.134602,0.369872,1.500006,4.246495,2.622931,5.503200,-0.395340,1.850430,-8.106563,-3.812819,4.576112,3.931564,-5.053497,-9.479809,7.588383,5.007634,-6.545003,-5.668424,4.624315,3.668885,-0.307884,3.049623,9.803501,-0.056354,-0.593001,0.907422,0.265027,8.018424,-4.564839,-8.662173,-1.821689,-3.761625,4.621593,-8.697726,-0.248341,7.499370,-2.053046,3.936428,8.167457,1.117578,-6.437454,-6.536136,7.967459,3.601727,3.483889,2.841627,9.614847,-8.255787,-1.769270,4.577045,-2.878038,0.251877,3.672391,2.466419,-1.605010,-1.434286,0.729015,7.674502,-8.486574,-9.660001,-2.157567,7.190253,0.479253,-9.871230,1.073634,-6.006323,-8.795178,-9.880949,-3.297472,3.606464,6.828320,-7.912509,-3.482029,7.208215,-7.930248,-1.675789,-6.389053,1.903203,8.907438,1.756437,8.578469,7.895346,-1.456898,-7.661237,1.795846,8.810366,6.413197,8.726240,8.214363,4.853539,6.110373,3.506692,3.487066,5.839745,-1.795778,9.552082,2.366438,-7.832095,9.687543,-0.849039,-4.473926,3.424618,6.016663,2.556285,6.965193,0.126085,-7.626488,-7.796941,9.546287,-0.722340,9.645777,5.321059,-6.292594,-4.426282,-0.251680,-3.354670,-0.056971,3.492772,3.415862,7.670496,3.972716,9.323278,2.665641,4.513850,0.080502,-2.188696,-5.602144,5.400974,4.140726,-9.843823,1.429779,-7.683432,-1.708041,9.948353,-2.567565,-4.544900,2.152475,2.006581,-6.579009,1.435155,9.285429,-2.243632,-7.658943,-8.928831,6.871836,0.043088,-6.309075,-1.260319,1.442085,-1.622293,-6.809615,1.822873,-4.132121,-0.942236,-5.411995,-2.483346,-6.042607,8.460626,7.218658,-3.968265,-9.565537,9.735957,-7.022851,9.799921,0.342884,6.275754,-4.482781,-2.098482,-5.508569,7.988049,-1.990477,-3.425443,-5.032798,1.302057,2.514923,-1.057552,-0.522844,-8.545995,-9.712868,-2.455247,9.628460,4.289806,3.192778,-0.605940,5.710695,-5.014987,-5.374383,-5.011775,-4.619366,-4.597367,8.346102,0.439414,-9.944649,-4.424244,7.079476,-1.966345,3.694679,-7.579507,2.631571,-0.715009,7.364307,2.736930,7.433723,-4.204289,3.914695,8.486274,-4.673525,-2.828058,9.152787,7.883079,-9.718544,0.243392,9.942307,-4.490639,1.038210,5.034934,6.854026,-2.844027,-4.570514,-0.177547,9.920444,9.726464,-4.312451,-1.224274,-6.252323,-7.093149,2.719858,-5.881836,1.346924,-1.605218,4.434064,9.128916,-8.765113,6.532370,3.781921,-7.208735,-0.866624,-4.001516,-3.018867,-6.475477,-3.997402,2.472117,-4.484563,-7.165362,-3.907211,-6.847274,5.650528,-0.189066,4.663954,-0.513256,8.422857,0.444932,-4.852051,-6.113902,-8.271879,-2.273085,4.882966,8.308081,0.041746,6.482405,-1.637041,-8.181088,-1.114892,4.562572,-7.882361,-2.786757,-4.374955,7.992882,0.577288,6.002057,-0.522667,-9.118356,3.312601,-4.886129,3.578216,-3.807829,7.756183,1.427478,9.567222,-7.623947,6.992535,1.826123,-9.145027,-3.390715,-5.595867,-6.605210,4.093265,-4.286486,-4.148077,-6.533602,4.274023,5.947969,4.518328,-1.735293,9.225276,-2.706857,8.605256,-1.530424,7.127611,8.374973,4.512820,-6.263082,-8.453621,2.868783,6.374366,-0.785747,4.682881,-7.620918,1.318258,2.882103,0.665239,6.786917,-7.610603,-7.207330,-2.421932,2.040533,7.289373,3.897164,3.899298,-0.876392,-3.235891,4.549073,-1.118373,-2.481406,-9.533241,-3.953387,6.955543,-5.469841,-0.632572,2.129548,-9.181158,-4.848249,3.125198,6.566449,-6.426478,1.680186,-8.797983,-9.774292,-4.394032,-9.765344,2.929754,-7.204691,-2.711350,-7.844589,-5.783907,-7.609870,-9.936306,-5.639635,-0.045956,-2.467545,-3.427811,2.916470,-5.404794,6.425659,-8.730702,7.043119,7.299129,-3.108696,-4.529662,-2.384882,1.101144,2.671457,1.106815,4.348262,2.979449,-2.259111,6.921926,8.418098,-3.326765,2.957325,-6.622667,-8.337795,-3.518277,-0.366565,7.965112,6.498986,5.798860,-0.146280,5.537490,-8.339889,-4.827937,-6.820615,-1.195669,2.050257,-6.948423,0.413838,-5.763752,-7.987594,-8.636395,6.188158,4.869135,-2.393417,-4.129982,9.637098,-5.288557,-3.156258,4.585728,8.441133,-9.818648,-0.312785,3.140213,-7.504204,5.235982,-1.426667,6.198059,4.497254,3.117319,8.940089,-0.999706,8.076952,-4.862093,4.289568,-4.503493,3.772575,-6.670328,7.492720,1.308545,6.788003,7.088073,-4.987071,1.085592,5.294454,-4.796937,-1.380058,-8.412585,6.796623,-5.823305,-2.783135,2.532558,2.693769,2.678050,3.742052,-5.713571,7.189020,4.683585,-8.422892,1.034333,0.918704,-6.663532,-3.604756,0.198792,1.448551,6.835917,-0.662821,8.533587,-4.031687,-2.705571,8.030181,-8.069107,-7.671014,1.332787,-5.648382,2.148574,-2.887700,-0.350965,-1.155305,-9.391231,1.061936,7.415965,2.880118,3.671157,4.520557,1.063445,5.681178,6.149895,5.652234,-5.501459,0.778053,5.813496,-8.028493,-3.617124,8.706618,-5.917596,-1.098820,-9.627502,3.898675,2.212370,-2.945843,7.321674,-8.497784,1.606906,2.839800,-6.583934,0.712969,-0.895480,8.164238,-2.889766,-9.317465,0.989921,-9.265859,-3.662831,5.711662,-3.426517,-1.744313,3.856786,-4.776024,5.585661,5.284868,-4.620159,1.412382,-0.110113,-5.959215,-1.144249,4.070837,8.642507,8.737709,3.040128,-5.591599,-9.070166,-8.370719,7.886711,2.834558,-1.101632,-0.248133,7.749476,-6.783880,-9.962603,9.260004], dtype = "float64")#candidate|2548|(616,)|const|float64
call_2547 = relay.TupleGetItem(func_558_call(relay.reshape(const_2548.astype('float64'), [4, 14, 11])), 0)
call_2549 = relay.TupleGetItem(func_561_call(relay.reshape(const_2548.astype('float64'), [4, 14, 11])), 0)
output = relay.Tuple([uop_2527,call_2529,bop_2543,call_2547,const_2548,])
output2 = relay.Tuple([uop_2527,call_2531,bop_2543,call_2549,const_2548,])
func_2550 = relay.Function([var_2526,var_2530,var_2542,], output)
mod['func_2550'] = func_2550
mod = relay.transform.InferType()(mod)
var_2551 = relay.var("var_2551", dtype = "float32", shape = (7, 1, 15))#candidate|2551|(7, 1, 15)|var|float32
var_2552 = relay.var("var_2552", dtype = "float64", shape = (864,))#candidate|2552|(864,)|var|float64
var_2553 = relay.var("var_2553", dtype = "float64", shape = (864,))#candidate|2553|(864,)|var|float64
output = func_2550(var_2551,var_2552,var_2553,)
func_2554 = relay.Function([var_2551,var_2552,var_2553,], output)
mutated_mod['func_2554'] = func_2554
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2915 = relay.var("var_2915", dtype = "float64", shape = (14, 15, 7))#candidate|2915|(14, 15, 7)|var|float64
uop_2916 = relay.sinh(var_2915.astype('float64')) # shape=(14, 15, 7)
output = uop_2916
output2 = uop_2916
func_2922 = relay.Function([var_2915,], output)
mod['func_2922'] = func_2922
mod = relay.transform.InferType()(mod)
var_2923 = relay.var("var_2923", dtype = "float64", shape = (14, 15, 7))#candidate|2923|(14, 15, 7)|var|float64
output = func_2922(var_2923)
func_2924 = relay.Function([var_2923], output)
mutated_mod['func_2924'] = func_2924
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3152 = relay.var("var_3152", dtype = "float64", shape = (16, 9, 1))#candidate|3152|(16, 9, 1)|var|float64
uop_3153 = relay.sigmoid(var_3152.astype('float64')) # shape=(16, 9, 1)
func_2922_call = mod.get_global_var('func_2922')
func_2924_call = mutated_mod.get_global_var('func_2924')
const_3168 = relay.const([0.456440,-4.711083,-6.732485,4.199747,-3.090598,7.497892,7.424322,5.727442,-9.808430,7.704331,-4.016048,5.691045,3.967341,2.922103,5.077748,-6.759310,-8.794399,6.413990,5.011783,5.016352,-1.238306,7.797704,0.407752,8.536405,-6.526681,1.644893,9.147963,-1.127102,-2.834934,9.944936,-2.343730,9.327750,5.923074,2.724865,3.313611,-3.452312,-6.302614,8.108032,3.841507,0.268083,2.856627,-9.509701,3.434940,-8.226431,-3.233297,8.788860,8.295131,-8.592669,-3.773854,6.965944,-0.742586,2.418664,-3.934092,-3.963031,-4.173819,9.494739,-7.023568,-6.926252,-1.404700,2.270099,-9.848861,0.653338,5.187907,-4.870871,-9.155064,0.753882,-6.750296,8.404397,0.828798,-1.029648,2.649531,-8.184651,8.242796,9.900574,2.552655,5.252327,-8.622611,5.905766,-9.526423,4.723074,-9.776036,2.625410,8.219946,1.749445,-8.847530,-7.137006,0.834645,8.321487,6.436091,-6.347460,9.973329,6.088093,9.410785,-6.103857,-8.876441,-3.883283,-7.212639,7.169895,-5.427266,8.305952,-5.244242,-2.131276,-1.760261,7.735687,-7.382038,-3.987098,8.590096,3.628183,-0.621810,-8.207845,7.963767,3.543473,-3.303955,-8.637856,0.143837,4.452943,5.939143,4.338528,0.587132,-8.226956,7.004853,2.955329,-1.423715,3.430195,-5.856146,2.310346,-8.475437,-1.548439,-1.566719,6.666758,-8.623238,6.665236,-6.702572,7.408103,9.855207,3.144603,-4.102922,5.869185,-9.111005,9.764182,-9.265830,-5.508707,-6.062744,5.964073,9.504446,-0.015417,5.301082,-4.763492,7.520097,1.007054,7.049893,0.234580,-5.044499,-6.607891,3.807827,2.971677,-0.942281,-1.766387,-7.274207,3.232513,-0.272485,6.851015,-9.121594,5.759435,5.842136,-4.093059,1.725363,-7.362951,7.574329,-3.085212,9.438850,-8.392989,-7.785488,-9.702650,7.946476,-8.283846,8.412831,0.685874,5.674437,4.749668,-9.584562,0.229233,0.949055,0.696303,-1.755174,8.905284,7.894850,-1.441059,-1.097931,3.880032,-6.348504,1.057943,7.358293,8.040988,7.334647,-7.662590,7.859068,-1.830076,0.895710,8.001091,5.563385,6.739328,-9.569284,-4.702953,-6.569400,-4.727413,-0.637323,1.013912,7.951608,-3.460201,8.354361,-9.403540,1.602715,-4.324906,-4.555420,-0.566188,-1.224488,-2.758452,3.184956,-4.082383,-1.803680,6.752068,-1.017293,9.972332,3.730668,3.513458,-7.800356,6.604738,-3.189090,-0.757752,0.805237,-1.367572,1.772803,7.832433,-1.401218,-7.445775,-4.076532,4.332442,-8.577848,-1.818045,-5.739658,6.072978,2.139111,-3.276913,-1.869300,-5.623735,-7.271647,8.896938,-2.080498,-3.133355,-8.978489,7.410978,-8.352899,-1.259999,6.351669,3.285615,-4.737114,-1.501562,0.294643,1.811838,-3.611633,-4.122473,-4.642993,-5.145213,-1.354840,3.661183,4.614020,2.415341,3.095745,2.745940,6.791585,0.572463,9.387065,6.217111,-4.969715,-2.131619,4.711829,8.027580,-9.951707,-4.647240,6.741118,-5.480062,-1.686202,-1.373435,9.689752,0.952722,-5.903959,-8.722264,-9.716125,6.469660,-6.644527,0.694594,-1.685879,6.175548,-9.039353,7.925934,-6.514849,9.595553,8.686293,-8.278612,2.457519,6.198618,-2.851968,6.431383,-8.418496,-9.600001,-7.404798,-2.496085,-9.088126,8.371118,7.313322,-6.108604,-1.814157,-1.532357,-0.048386,-1.929762,-3.492428,2.539472,4.341277,-4.592721,8.271661,-8.847946,-0.580551,-9.707081,6.385264,-0.297299,-2.645170,-4.415254,-4.141812,0.779910,2.883706,-1.913498,2.047352,5.501893,-2.058701,-0.100130,-7.063381,1.467211,5.913768,9.391798,7.005901,9.653561,1.017987,6.529155,5.047378,-8.685484,-8.512527,-5.275626,-6.166031,6.189672,5.407503,9.946885,-2.016192,6.346364,-0.009135,-3.593269,-8.987495,-4.578174,2.078242,3.205201,-7.129019,-9.150825,-3.323147,-7.540674,-1.171987,7.321200,-7.284218,9.043372,6.412306,-0.514682,9.834078,4.552934,7.292708,7.442258,9.339891,1.181292,-1.600878,7.190560,-7.553287,-8.662424,1.427615,2.968863,-6.009706,-9.310624,8.194403,7.130612,-6.319161,-7.653840,-1.104357,-9.856425,-5.814185,6.326148,0.365450,1.030319,7.900154,-0.943449,2.215075,-0.854891,-3.455171,3.565584,7.718858,8.056385,7.858405,9.753647,4.447595,-9.797626,3.235502,0.274679,-4.417191,3.598782,-4.540371,-8.408312,1.961365,5.559753,7.292043,2.439801,8.544004,-6.967642,-2.467455,9.860043,-9.629156,3.726859,4.259361,-1.116339,0.533437,4.161929,-4.779205,1.479142,-9.311310,7.711062,6.131123,0.210143,1.120618,8.281222,6.294742,-9.983420,-9.114750,-1.386960,-6.563412,9.142536,-7.093606,0.671192,-3.485595,-2.760309,5.944595,1.607105,-0.296383,6.351661,-3.126489,7.440837,9.768712,1.778400,7.427380,-8.313487,3.459139,8.025730,-7.500833,-0.819286,9.446347,-6.171340,-9.736651,0.828346,-0.566209,6.078127,7.685507,-1.725220,-5.775649,4.814953,7.680326,0.781467,8.106253,-9.539733,0.065675,6.276647,4.602649,4.218569,6.552569,-8.732876,4.313377,-8.769807,-1.648934,-1.217883,8.059257,-2.689180,2.046053,3.982964,-5.521859,-1.840198,-0.151128,-9.937486,8.543573,3.218400,-2.046931,-0.602459,6.405030,9.703695,-7.490666,-6.707958,9.017598,-6.378516,-6.071735,8.285819,-9.345890,-3.735144,0.392019,-1.644565,-3.813296,1.613898,-5.570574,2.210896,4.536531,0.787992,-0.661884,6.421938,3.609020,-4.256479,7.933011,-4.701064,7.308557,-5.734664,-9.900213,-7.779074,-3.404814,0.123823,2.652621,7.173004,9.316461,-7.173413,-6.747001,4.832020,-6.854641,-3.654143,-1.419398,7.295652,5.568687,-2.009855,-4.083818,5.920509,2.402585,5.319101,2.178767,5.494330,-5.430195,-9.164329,4.179753,-0.986301,8.319663,6.344018,4.422236,5.608543,-3.092584,-3.351320,-6.212516,6.209701,4.720005,6.745384,0.455013,9.451881,-7.152408,1.148639,-0.278869,3.815031,-5.512186,8.179125,6.924486,-0.326338,-4.714831,6.742092,-2.298850,-6.193243,8.136717,-2.963845,-3.356224,-7.714924,9.865216,-1.497704,9.581039,7.924118,-2.946340,-3.992517,-8.330935,9.322312,4.669491,9.125025,-6.734363,0.865075,4.132261,-3.774793,-0.835674,4.722247,-5.944291,0.476475,3.639339,1.734396,7.186052,-3.177526,0.288566,-0.546218,-8.320525,-8.194848,-4.933619,-5.123805,-1.024113,7.224718,-8.895929,-6.143470,4.803982,-1.441500,3.892920,-2.140748,6.253264,-8.919781,3.332935,-2.955170,-2.921145,-3.646397,-8.827268,5.997312,8.565403,1.454640,8.796096,0.344390,8.276127,5.684888,1.351133,1.318983,-2.641702,5.072356,3.190051,1.963460,8.228921,-3.491093,3.939807,-1.066627,-6.329552,-7.183632,8.694513,-0.257929,1.342791,4.004365,-2.996651,-3.586999,-1.413069,-5.331256,4.982795,-5.920718,7.932427,-3.106205,-5.423547,6.525428,4.144918,-4.388256,4.625309,5.375602,-5.503540,-6.390835,-6.076908,-1.152852,-3.435865,-2.074636,-2.883913,-5.981067,2.606571,-4.790929,5.019601,-1.126604,9.011132,-0.569661,-1.757614,-8.715149,-8.541067,2.173859,9.287721,-3.509489,-0.588628,2.969313,6.675544,-5.823542,-7.477437,-3.140964,-4.484060,-7.137949,7.076005,9.739975,3.238597,-5.213460,-3.217320,-6.031285,2.869561,4.011935,2.174446,8.354641,5.154953,5.908946,-9.648710,3.088069,-2.829652,6.908057,-8.058989,0.976535,-0.851455,-5.084977,2.468298,-6.595041,6.303256,-8.693684,-5.762202,1.429043,1.654183,2.024943,-1.096320,0.049971,3.235712,-4.846618,6.191020,3.792972,6.707445,-5.711138,-6.524930,-5.594613,-6.975344,-3.436236,-3.304347,-8.007924,-1.844899,0.510130,5.788665,1.522858,0.722226,-7.393362,-3.104743,-6.876611,0.310217,-1.208978,7.689578,1.565776,-4.017856,-7.579464,8.045427,-0.015285,6.522078,-5.854823,-0.464568,1.460164,2.923325,-4.847172,4.833079,-4.185064,2.597942,-3.061136,5.292691,3.486122,6.952052,-4.479978,-8.151475,-7.184006,-0.684711,-0.500616,-6.870729,7.096216,-5.064225,0.916363,-1.795194,-1.236164,9.367573,1.734728,3.939893,-1.205741,-2.548792,8.056592,9.721636,-9.295439,8.545378,6.641561,-6.535475,1.725404,-5.754723,-4.025159,-4.379384,9.305237,8.125776,-7.705941,2.443580,6.100544,3.842451,-2.489188,-7.082205,6.691185,-4.315179,-5.127682,9.112882,5.910407,-9.449892,-9.883824,-4.241258,-3.317738,-9.260364,-5.865697,5.711422,-6.200015,4.215759,-4.630761,5.062545,5.498565,-7.080461,7.847839,0.921889,1.601102,-0.551419,6.827990,9.146038,2.676608,-2.421629,2.715683,8.132290,0.610425,5.977313,3.644331,6.505080,-2.268275,-3.335465,8.895884,-1.626740,5.513317,-9.306552,2.167475,6.988427,-0.160679,9.301831,3.655506,0.019120,5.170039,-9.278218,5.179892,0.222114,3.635556,8.557371,6.093944,-0.915072,4.748846,6.926167,-7.637337,4.453367,6.276751,4.769894,2.925376,6.749485,3.763344,0.350502,4.706060,-8.219984,-7.496559,4.580320,0.330615,8.887767,-2.009219,2.308417,9.941358,6.906131,5.195770,3.168237,6.485550,7.589790,3.867121,-4.875647,8.189981,8.757998,-7.439799,-6.919823,-2.366993,-1.805907,-1.705291,-2.218047,-7.074646,-4.757747,-1.573233,9.312140,-0.390580,-4.031796,9.658851,-6.014453,8.229492,6.937108,-8.508738,2.132935,3.550252,-3.487056,5.627590,2.074877,-1.396991,-8.018298,7.858604,6.427640,-0.876832,7.346740,-4.322731,3.348649,-8.644179,2.096551,-3.580476,2.359848,4.434331,2.256492,-6.130355,-3.248002,0.222859,5.538139,-2.935404,-6.058561,-0.803236,8.787137,-5.797556,-2.293443,7.252013,1.251347,-5.975834,3.577080,-3.962055,2.816910,6.663275,-3.479837,-3.165582,3.957816,-8.494759,9.270113,-5.254760,3.656178,8.319269,3.839898,0.947575,-9.524919,9.701675,0.605557,6.025491,6.842330,6.250001,4.014154,1.922036,-8.758966,-5.206618,7.583747,-2.411621,6.849137,-4.432893,-3.683022,-2.828061,-7.587870,-4.998732,2.336789,-8.258514,-5.622474,-2.957569,9.695411,3.646938,7.016545,2.375564,-3.075517,3.050380,-4.811861,-3.112560,-6.908558,4.882894,-8.949627,-4.911982,6.262083,-9.763255,-4.456715,2.160528,0.068701,-6.931777,3.423820,7.165352,7.999626,9.041784,-7.704386,2.197034,-5.031758,8.323757,-2.505837,4.390456,-2.326886,-7.316950,-8.271361,-6.416908,-3.528387,8.322014,4.289573,6.030130,9.558206,-1.318580,-8.513230,-8.639987,-9.230163,7.870782,-0.526939,7.287010,7.005120,1.202998,6.804258,1.931763,-3.093916,1.096877,8.497307,8.112791,-0.164050,-0.343414,1.250815,4.932924,8.303183,-4.041889,2.532349,-0.709951,4.300680,3.332596,-5.445051,-4.251136,1.450503,-9.980004,-6.822938,6.817610,9.405012,4.023055,4.290402,-6.306808,-3.974845,-7.848915,-0.783259,-9.714209,-6.346335,0.985932,-7.400853,-4.036000,2.622727,-2.054881,-6.519774,-7.692993,1.966988,-8.585709,7.137921,4.109514,9.253897,4.551518,9.651899,-9.466530,3.755362,-9.284134,3.677499,5.323870,6.712980,4.414882,-8.347778,1.745178,3.223697,-3.854474,-9.050899,-0.016783,4.339076,-9.969911,1.906325,-3.584548,-3.726991,-7.504267,2.826964,-7.086534,3.466043,-3.675144,-4.936200,-5.750685,6.415762,-1.025484,-1.856072,-0.515463,-1.200902,-0.911942,1.765480,0.932965,0.813807,1.300203,8.379708,0.434182,7.401305,-5.801423,8.239374,-1.959233,4.891888,3.307871,1.769279,0.820318,-0.297843,-3.881317,9.146315,3.853199,4.498208,4.130748,-7.094746,-6.325625,8.562114,0.252834,1.030104,6.917456,-9.650312,-5.600459,-9.766060,-0.761965,-0.608678,-5.227332,-5.637617,-5.544898,8.654850,-8.033134,5.221720,9.553182,-1.212067,5.984184,-6.688076,-7.795568,5.745839,9.797211,9.649108,-0.880419,-6.609801,1.807182,-1.623744,-7.208291,1.671194,-7.250539,2.157563,2.432082,-4.997609,6.260534,-2.240904,-7.360325,8.283646,2.065241,2.835965,-9.228325,9.348661,-2.714864,2.384335,5.588371,2.012206,8.780464,8.398714,-1.438565,-8.903450,9.378139,-4.972250,-0.355898,2.783473,-8.236536,-0.273851,-5.266919,-8.508726,4.322996,0.127855,-8.835799,-8.045557,-4.405034,1.308298,-8.949124,-3.170248,-4.554806,4.302313,-5.057823,-9.638151,0.725641,6.712145,-5.908583,-0.642182,-2.310576,-5.968441,-5.724287,-8.829474,7.728105,-7.969344,3.290757,3.675036,7.352721,1.738339,1.865220,-4.387651,-0.524393,-0.882139,1.609265,-0.927512,-6.468468,-0.333866,-3.175018,1.514001,-5.629586,6.650407,1.422032,4.492646,6.654183,-9.083636,6.337192,0.155040,9.175056,-2.989304,-7.208000,-9.770462,-7.273345,8.732669,2.279506,-2.133028,-7.588539,-0.764044,-3.483400,-7.265813,-4.085570,-9.179531,8.488355,2.754254,7.884963,9.539403,-7.201320,-0.678024,2.541231,9.549730,4.243510,-8.578560,6.601869,7.931413,1.930222,0.709873,-0.912106,0.266652,0.521582,-7.591996,-6.219006,-6.916142,4.901880,4.529553,6.676936,-5.897490,-0.111614,-9.151865,7.144212,3.326436,-5.865989,-3.044639,-6.635848,-4.531400,-3.491652,-7.342012,6.434310,8.834258,-8.981182,1.586635,-3.120946,-6.556952,-3.719492,-9.443025,-0.079026,-8.373971,2.773760,7.564096,-7.068344,0.780837,2.453664,-0.732118,0.431113,7.375649,-3.278898,1.028553,-3.546224,-3.591987,-7.050049,-3.763980,-2.508748,2.706257,2.184447,-1.115151,7.675380,-1.826612,3.705190,8.908703,6.173538,-9.472758,9.817269,-9.866393,8.261181,-6.521989,1.584108,-7.453933,-7.952200,7.596940,6.535047,8.275656,-7.496181,4.767869,-7.308551,-5.959854,3.548542,-6.239937,-8.852468,9.703976,8.770303,2.829141,-0.267189,-7.353429,-5.092654,9.162383,7.457299,-4.882879,-2.638601,-3.921925,-5.923919,-6.010929,9.408763,-9.734503,1.168260,-4.155792,8.724066,-4.152616,2.261099,-5.674186,-6.082131,2.584502,5.519860,0.063023,1.077673,-3.795071,-8.646605,-5.223454,2.424470,0.106710,-6.381578,3.979654,-5.965848,3.078032,7.757096,3.385185,9.471452,8.693003,-3.677793,6.614423,-9.932954,0.147770,-0.559166,7.900523,-1.711355,4.227585,-0.102422,-2.675913,-2.175134,-0.776424,-2.594544,5.996681,2.780418,-3.771368,-2.049281,0.535975,7.504797,9.384790,-7.621583,-8.728303,-9.813846,4.134055,-7.655836,7.386387,-2.765204,-5.496790,3.243353,-8.275909,7.373173,-3.125256,-8.634421,-1.351903,-4.578013,-2.479174,-7.149571,3.644402,-7.780144,5.711556,-6.546233,0.491702,5.152786,0.982249,8.037978,5.881379,-7.442297,-8.465613,8.762327,6.324734,4.718909,4.000097,-4.553891,-9.544417,8.105200,5.901824,-3.532867,-7.234930,6.024747,-4.995757,-8.439253,3.025527,8.158735,9.805051,-8.247794,-1.460902,-9.185865,-7.647481,-0.557470,0.793515,-1.647860,6.175672,7.433679,-1.526926,-8.457748,-6.622691,-4.649775,1.272482,3.086217,9.625776,1.097010,7.593686,2.659079,-3.425740,-8.272896,3.334356,0.615754,3.671469,1.223667,4.546406,-9.708621,-5.762409,3.950448,-4.197072,-8.619742,-4.700485,3.912552,-8.397060,8.053276,-3.144574,-8.001569,1.689670,9.485958,1.332150,-1.177620,-0.695524,-2.200755,-4.092575,-2.376620,-2.585974,-5.701456,0.989097,8.947921,-5.866771,-4.722048,-1.906872,-2.061946,-3.772099,7.533560,-8.828584,-9.775614,-7.333582,1.950980,-8.116930,-8.941198,1.687390,-8.762959,-3.286915,-2.266841,-5.192324,-1.536209,8.516288,-1.041900,-4.244491,2.720982], dtype = "float64")#candidate|3168|(1470,)|const|float64
call_3167 = func_2922_call(relay.reshape(const_3168.astype('float64'), [14, 15, 7]))
call_3169 = func_2922_call(relay.reshape(const_3168.astype('float64'), [14, 15, 7]))
func_2922_call = mod.get_global_var('func_2922')
func_2924_call = mutated_mod.get_global_var('func_2924')
call_3172 = func_2922_call(relay.reshape(const_3168.astype('float64'), [14, 15, 7]))
call_3173 = func_2922_call(relay.reshape(const_3168.astype('float64'), [14, 15, 7]))
output = relay.Tuple([uop_3153,call_3167,const_3168,call_3172,])
output2 = relay.Tuple([uop_3153,call_3169,const_3168,call_3173,])
func_3177 = relay.Function([var_3152,], output)
mod['func_3177'] = func_3177
mod = relay.transform.InferType()(mod)
var_3178 = relay.var("var_3178", dtype = "float64", shape = (16, 9, 1))#candidate|3178|(16, 9, 1)|var|float64
output = func_3177(var_3178)
func_3179 = relay.Function([var_3178], output)
mutated_mod['func_3179'] = func_3179
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3587 = relay.const([[[6.361817,-0.855427,-4.167307,-6.959181,-5.876366,-4.840718,3.582574,4.008283,-2.582695],[-3.694079,0.939572,1.906690,-8.727092,5.486317,-1.124699,-1.819344,7.960192,-0.085347],[4.853295,-0.514513,8.036621,3.362488,-5.493496,0.804633,-3.064328,-4.407617,-5.115936],[3.082050,-1.033425,3.662886,5.761906,-2.581656,-1.693674,-1.425848,-0.640961,-9.142091],[-0.132517,-0.190605,-4.611528,6.436125,8.818969,-8.514505,6.698530,-4.160901,-5.369123],[-1.154537,-8.958206,5.127213,8.914302,-4.200614,-4.349546,8.611015,7.529544,-7.385902],[-6.688580,-4.594286,5.539468,5.774077,-0.462357,-5.931284,2.504191,-8.394320,-7.975690]],[[5.982959,-5.867662,3.867963,-2.867356,7.803251,-4.349570,3.758575,1.937553,7.373418],[-4.407886,-6.454993,-9.012158,5.127214,6.136097,3.030630,6.284924,-8.307376,0.768002],[9.980289,-7.879604,7.310987,-0.928251,8.570541,-9.080069,-4.034898,-5.203934,3.202782],[2.142350,-3.296071,-1.363371,-3.126199,-4.438556,7.397136,-6.485015,8.353148,6.928146],[-8.299371,5.300458,-3.881075,-1.734395,-6.132265,7.342450,2.978637,6.564896,0.829673],[-0.725148,6.352093,-7.680905,-2.512686,4.989471,-0.671079,-6.239495,-5.168004,-7.179059],[8.965065,1.318420,2.372552,9.711667,-8.362426,2.451243,-4.174818,1.445411,-6.420077]],[[9.599004,5.670490,6.101022,8.184895,-6.713513,2.803121,-9.465400,0.685985,4.423646],[-1.730142,4.625568,7.000202,1.109757,-7.895149,1.742880,-0.642901,9.678433,-7.061170],[8.721742,-0.978295,1.742490,2.125109,-9.100564,-7.624547,9.503330,-0.707264,3.565746],[3.682279,-5.056376,9.078695,8.988421,-1.539838,8.057198,4.610262,-0.282105,-8.539212],[7.085322,-9.031403,-7.257858,2.571534,8.922291,7.870937,1.745276,4.008488,-9.698731],[-5.748927,4.732010,4.865125,5.536279,8.492643,-0.665067,3.764199,4.786972,-0.127499],[-5.053203,-1.720823,7.840237,-3.725638,-6.437903,-4.472248,6.309383,-1.320902,7.349453]],[[8.845339,-0.913723,6.982774,0.956510,9.184983,-6.411033,-7.641477,2.344186,-0.517317],[-6.448213,-8.858219,6.850169,-8.850326,5.134702,7.796569,-3.536583,6.714515,8.125700],[9.957054,5.250238,-0.966303,-1.398269,5.406564,6.746472,2.751503,-4.785643,-8.581882],[-0.604216,-1.272810,-4.795918,5.899398,7.953999,1.108404,9.613917,3.366798,0.268965],[-4.416819,-8.085698,-6.052087,8.281631,-4.550233,5.988258,1.842920,2.974717,6.012935],[6.384828,-3.150752,8.504660,-6.072339,-4.238300,0.202842,9.849471,-9.001397,1.200944],[8.188971,-1.563389,3.620422,-1.326473,4.102241,-0.964934,1.058477,8.305424,-9.541566]],[[-1.752876,2.434382,-2.683242,-8.173264,-2.762775,-6.397774,1.997261,6.780503,9.176533],[9.058671,3.168824,2.845638,8.974542,-1.245441,-1.299665,5.693269,1.393823,3.436242],[-3.332162,0.688786,-0.141841,-1.629412,0.565711,2.959289,-4.590558,-9.330951,-3.232111],[-4.598740,8.849686,-1.808687,1.979910,-7.573859,8.854309,9.126785,6.916097,-0.989546],[-9.257650,-7.922035,-4.447442,-2.082902,-0.403564,0.726206,-5.148025,2.348615,-8.438023],[8.137751,5.687538,-7.734132,6.646379,-8.335689,-5.616364,7.736774,-7.771173,-5.989299],[4.543626,0.249564,5.880885,-9.818914,-7.281312,5.057497,-1.069211,6.775139,-2.973805]],[[-9.353396,9.892702,4.948146,9.739128,-1.104833,-0.692466,0.623508,2.167195,7.339671],[4.280289,-8.984121,9.022005,-3.192169,-6.931174,-1.328324,2.911502,-4.087334,6.530011],[-1.393983,-6.719606,-1.019745,5.828465,2.640714,5.311040,2.694431,-7.707205,-2.411710],[-4.463332,4.989637,-0.492325,0.620480,-2.317524,-2.702535,9.992507,4.157569,2.128842],[-9.267455,8.338783,3.943996,7.612950,5.858076,-1.954407,1.321677,-7.925509,9.622208],[-1.852748,-2.544069,6.609388,8.688351,7.752540,-3.525012,-4.913111,4.384799,-1.593254],[-8.095344,9.243239,-8.988847,-2.820601,-6.032779,-1.990104,1.407036,7.001181,-9.757963]],[[3.596638,3.225565,-4.723642,1.862366,7.103933,-9.697595,-9.245136,6.474004,-5.184689],[7.622914,9.537430,3.520736,-5.120442,4.115207,-0.640033,-9.209512,8.698080,-2.773340],[3.248568,-4.484195,-5.932671,4.211343,-6.367557,-6.286242,-9.153082,7.869134,-2.091622],[5.766045,6.796731,-7.250120,-8.942941,9.910254,-1.844350,8.779098,-5.396122,-5.486937],[-4.175931,1.200863,-4.491992,0.683066,4.498523,5.043500,4.875165,-8.420228,2.842498],[-3.120689,2.436999,8.356260,2.280203,-8.180185,-6.132950,-1.261982,-4.464132,0.019326],[-7.535609,1.156285,9.804402,9.412167,5.597128,-4.107472,-3.502155,4.848704,-6.048936]],[[7.340430,4.182116,3.364382,7.799790,7.611258,1.823397,-7.064442,3.515762,-3.745924],[-5.587147,-1.209219,1.874116,-7.612195,3.451026,-7.441133,-0.274941,-5.934819,8.847517],[-3.810859,2.971852,-8.214775,-0.979742,-5.519481,-7.621281,9.322333,-7.648696,-2.162565],[-9.550214,0.498366,-4.069270,0.787334,-9.525988,4.659124,-6.767132,-6.147858,2.486170],[-6.907165,3.685719,1.783733,9.911085,7.752254,-1.153625,-3.165870,-2.673673,7.573552],[3.658269,-1.647392,-4.867214,4.285928,2.706600,-9.634235,-5.109186,-9.096267,-2.410782],[0.227486,-1.370699,4.547766,-6.683379,9.775318,-0.012814,-6.083001,-5.319259,3.606643]]], dtype = "float32")#candidate|3587|(8, 7, 9)|const|float32
var_3588 = relay.var("var_3588", dtype = "float32", shape = (8, 7, 9))#candidate|3588|(8, 7, 9)|var|float32
bop_3589 = relay.mod(const_3587.astype('float32'), relay.reshape(var_3588.astype('float32'), relay.shape_of(const_3587))) # shape=(8, 7, 9)
output = bop_3589
output2 = bop_3589
func_3598 = relay.Function([var_3588,], output)
mod['func_3598'] = func_3598
mod = relay.transform.InferType()(mod)
mutated_mod['func_3598'] = func_3598
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3599 = relay.var("var_3599", dtype = "float32", shape = (8, 7, 9))#candidate|3599|(8, 7, 9)|var|float32
func_3598_call = mutated_mod.get_global_var('func_3598')
call_3600 = func_3598_call(var_3599)
output = call_3600
func_3601 = relay.Function([var_3599], output)
mutated_mod['func_3601'] = func_3601
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3636 = relay.var("var_3636", dtype = "float64", shape = (8, 7, 9))#candidate|3636|(8, 7, 9)|var|float64
uop_3637 = relay.rsqrt(var_3636.astype('float64')) # shape=(8, 7, 9)
output = uop_3637
output2 = uop_3637
func_3648 = relay.Function([var_3636,], output)
mod['func_3648'] = func_3648
mod = relay.transform.InferType()(mod)
var_3649 = relay.var("var_3649", dtype = "float64", shape = (8, 7, 9))#candidate|3649|(8, 7, 9)|var|float64
output = func_3648(var_3649)
func_3650 = relay.Function([var_3649], output)
mutated_mod['func_3650'] = func_3650
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4083 = relay.var("var_4083", dtype = "uint32", shape = (6, 13, 15))#candidate|4083|(6, 13, 15)|var|uint32
var_4084 = relay.var("var_4084", dtype = "uint32", shape = (6, 13, 15))#candidate|4084|(6, 13, 15)|var|uint32
bop_4085 = relay.equal(var_4083.astype('bool'), relay.reshape(var_4084.astype('bool'), relay.shape_of(var_4083))) # shape=(6, 13, 15)
output = bop_4085
output2 = bop_4085
func_4089 = relay.Function([var_4083,var_4084,], output)
mod['func_4089'] = func_4089
mod = relay.transform.InferType()(mod)
mutated_mod['func_4089'] = func_4089
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4089_call = mutated_mod.get_global_var('func_4089')
var_4091 = relay.var("var_4091", dtype = "uint32", shape = (6, 13, 15))#candidate|4091|(6, 13, 15)|var|uint32
var_4092 = relay.var("var_4092", dtype = "uint32", shape = (6, 13, 15))#candidate|4092|(6, 13, 15)|var|uint32
call_4090 = func_4089_call(var_4091,var_4092,)
output = call_4090
func_4093 = relay.Function([var_4091,var_4092,], output)
mutated_mod['func_4093'] = func_4093
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4270 = relay.var("var_4270", dtype = "float32", shape = (8, 14, 9))#candidate|4270|(8, 14, 9)|var|float32
uop_4271 = relay.log2(var_4270.astype('float32')) # shape=(8, 14, 9)
func_1402_call = mod.get_global_var('func_1402')
func_1405_call = mutated_mod.get_global_var('func_1405')
var_4275 = relay.var("var_4275", dtype = "uint32", shape = ())#candidate|4275|()|var|uint32
call_4274 = func_1402_call(relay.reshape(var_4275.astype('uint32'), []))
call_4276 = func_1402_call(relay.reshape(var_4275.astype('uint32'), []))
output = relay.Tuple([uop_4271,call_4274,var_4275,])
output2 = relay.Tuple([uop_4271,call_4276,var_4275,])
func_4277 = relay.Function([var_4270,var_4275,], output)
mod['func_4277'] = func_4277
mod = relay.transform.InferType()(mod)
var_4278 = relay.var("var_4278", dtype = "float32", shape = (8, 14, 9))#candidate|4278|(8, 14, 9)|var|float32
var_4279 = relay.var("var_4279", dtype = "uint32", shape = ())#candidate|4279|()|var|uint32
output = func_4277(var_4278,var_4279,)
func_4280 = relay.Function([var_4278,var_4279,], output)
mutated_mod['func_4280'] = func_4280
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4323 = relay.var("var_4323", dtype = "bool", shape = (1, 13, 9))#candidate|4323|(1, 13, 9)|var|bool
const_4324 = relay.const([[[True,True,True,True,True,False,True,False,True],[False,False,False,True,False,False,True,False,True],[False,True,True,True,False,False,True,True,False],[True,False,True,False,True,False,True,False,False],[True,True,False,False,True,True,False,False,True],[False,True,True,False,False,False,True,True,True],[True,False,False,True,False,False,True,False,True],[True,True,True,True,False,False,False,True,False],[True,True,False,False,False,False,True,False,False],[False,True,True,True,False,False,True,True,False],[True,False,False,False,False,True,True,True,True],[True,True,False,True,False,False,False,False,False],[False,False,False,False,False,True,True,True,True]],[[True,False,False,True,True,True,True,True,True],[False,False,False,False,True,False,False,True,False],[False,True,True,False,True,True,False,True,True],[True,False,False,False,False,False,True,True,True],[False,True,False,True,True,False,True,True,True],[True,False,False,False,False,True,True,True,False],[False,True,True,True,True,False,True,True,False],[True,False,True,False,False,False,False,True,False],[False,True,True,True,False,True,False,False,False],[True,True,True,False,True,False,True,False,True],[True,True,True,True,False,True,True,False,False],[True,False,True,True,False,False,True,False,True],[False,False,True,False,True,True,True,True,False]]], dtype = "bool")#candidate|4324|(2, 13, 9)|const|bool
bop_4325 = relay.logical_and(var_4323.astype('bool'), const_4324.astype('bool')) # shape=(2, 13, 9)
uop_4363 = relay.log(var_4323.astype('float32')) # shape=(1, 13, 9)
func_1633_call = mod.get_global_var('func_1633')
func_1638_call = mutated_mod.get_global_var('func_1638')
var_4375 = relay.var("var_4375", dtype = "float32", shape = (84,))#candidate|4375|(84,)|var|float32
var_4376 = relay.var("var_4376", dtype = "uint32", shape = ())#candidate|4376|()|var|uint32
const_4377 = relay.const([-10,10,-1,8,-7,-6,1,-10,2,5,-2,-2,8,-8,-8,3,-9,-6,7,2,6,-7,-3,-8,-9,-10,5,-5,-4,3,3,-10,7,7,-1,-8,-1,1,-9,7,-1,10,1,-9,10,6,6,-10,-5,8,7,10,10,2,-2,9,7,9,7,-4,-10,2,10,2,8,9,8,5,-5,-7,-5,-2,8,-4,-9,-5,1,-6,9,6,8,7,7,3,-9,10,-9,-10,-4,-3,3,4,5,-6,-8,4,-10,-3,2,-10,6,-7,-2,3,1,9,-6,-9,2,7,-10,7,1,8,8,6,-9,1,10,-5,10,7,6,-6,3,-10,4,4,9,-9,-1,-3,8,2,-5,-8,-3,-10,-1,7,10,9,-7,7,7,3,1,-8,7,6,7,9,-1,8,5,-7,5,7,9,5,2,-3,3,3,-9,4,-4,-5,1,-6,9,1,9,3,4,5,-8,-10,-8,-1,-3,-5,7,2,3,4,3,-5,5,-10,10,8,4,8,-2,-2,-3,2,9,10,3,-4,-1,-9,-1,-9,6,6,7,1,3,4,2,-8,1,-3,-3,-1,7,3,10,-6,9,-4,8,-6,3,-8,8,-4,-5,-5,3,3,7,8,9,-4,8,7,-7,6,2,3,-2,-3,3,5,6,-5,-5,-2,9,-5,6,-2,4,3,3,-10,-4,-4,-10,2,-7,1,-2,-6,-1,-7,-2,1,8,-4,9,-10,4,9,-10,-2,-10,9,-7,2,-8,4,9,-8,9,-9,-5,-1,-2,-4,3,-9,10,4,3,-5,4,-10,7,9,-1,6,7,6,-10,-2,-8,-6,7,6,-4,2,4,-9,2,-7,-6,7,-2,5,-5,5,-7,4,8,5,-2,-8,-9,-7,6,-1,9,-10,-3,3,3,3,-6,4,-6,-4,8,-7,2,7,10,-2,10,-9,6,-2,9,-9,-4,-9,-3,-3,8,7,3,-9,6,1,-5,8,4,2,-9,10,-5,-6,-5,-9,-6,-2,4,2,-5,5,-5,1,5,5,-4,7,-6,-8,-9,-4,5,4,1,9,-6,6,-7,1,10,-6,-2,2,6,-1,-6,10,2,1,9,-9,-4,8,-2,5,-6,-4,6,10,-7,8,7,7,3,5,9,9,-9,-7,8,10,-5,-6,-4,4,9,-5,2,-8,-9,9,6,-3,4,5,4,-8,2,1,-2,7,6,8,3,3,10,10,-9,-1,5,-7,-1,-7,10,-1,2,2,10,-6,-7,-5,-2,-2,-9,5,9,10,-8,-7,6,1,-5,-6,4,-6,-4,9,-7,8,-4,-8,7,-6,-7,-5,10,1,-8,10,10,4,-8,-9,-4,9,-9,2,4,-3,1,-6,-2,6,-3,-2,4,-4,-9,-7,9,10,2,-4,-1,9,-2,3,-1,4,7,6,3,6,-4,-6,7,-3,-1,-7,-5,-4,-3,-3,-10,-2,-6,-10,2,-3,-7,1,9,4,10,-2,-10,-4,-5,-1,3,-4,2,7,10,-10,3,2,5,3,9,-2,4,-6,-2,-4,10,5,-3,-8,6,-9,-1,-2,9,6,1,-1,-6,1,-3,5,4,9,-6,-10,5,1], dtype = "uint8")#candidate|4377|(600,)|const|uint8
call_4374 = relay.TupleGetItem(func_1633_call(relay.reshape(var_4375.astype('float32'), [6, 14, 1]), relay.reshape(var_4376.astype('uint32'), []), relay.reshape(const_4377.astype('uint8'), [600,]), ), 3)
call_4378 = relay.TupleGetItem(func_1638_call(relay.reshape(var_4375.astype('float32'), [6, 14, 1]), relay.reshape(var_4376.astype('uint32'), []), relay.reshape(const_4377.astype('uint8'), [600,]), ), 3)
output = relay.Tuple([bop_4325,uop_4363,call_4374,var_4375,var_4376,const_4377,])
output2 = relay.Tuple([bop_4325,uop_4363,call_4378,var_4375,var_4376,const_4377,])
func_4391 = relay.Function([var_4323,var_4375,var_4376,], output)
mod['func_4391'] = func_4391
mod = relay.transform.InferType()(mod)
mutated_mod['func_4391'] = func_4391
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4391_call = mutated_mod.get_global_var('func_4391')
var_4393 = relay.var("var_4393", dtype = "bool", shape = (1, 13, 9))#candidate|4393|(1, 13, 9)|var|bool
var_4394 = relay.var("var_4394", dtype = "float32", shape = (84,))#candidate|4394|(84,)|var|float32
var_4395 = relay.var("var_4395", dtype = "uint32", shape = ())#candidate|4395|()|var|uint32
call_4392 = func_4391_call(var_4393,var_4394,var_4395,)
output = call_4392
func_4396 = relay.Function([var_4393,var_4394,var_4395,], output)
mutated_mod['func_4396'] = func_4396
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4831 = relay.var("var_4831", dtype = "float64", shape = (8, 1, 12))#candidate|4831|(8, 1, 12)|var|float64
const_4832 = relay.const([[[7.594543,-3.824134,7.224917,8.763146,-9.953765,-0.086544,9.351593,5.141100,4.849267,9.235477,-5.776413,1.888610],[-2.770196,8.702059,-6.110775,-2.964405,-9.414481,3.266178,-0.890420,5.767280,-9.329608,-0.175495,-6.485850,-6.502439],[7.573823,-3.561207,-1.784761,-5.355482,8.425415,-0.460164,1.026256,8.809934,8.274007,3.246131,9.970899,0.770628],[-2.391366,6.206531,5.830005,8.646839,3.748573,1.832489,4.309804,6.873883,6.552079,-0.354602,-2.508284,-2.374665],[1.225455,-2.540592,0.109311,-8.167448,8.191170,-3.722909,7.059717,3.720247,5.843911,-3.040031,7.484014,4.913804],[7.791182,2.203934,0.751285,-6.300349,9.209298,5.327458,-8.903937,-9.662199,9.993519,-3.840830,-8.541123,-6.856384],[-3.468245,-7.311011,-3.083337,0.169719,-3.580686,8.586446,-4.505621,-7.182336,-2.120954,-1.902700,8.948623,-3.346415],[-4.718550,6.021196,9.150306,-3.001576,-1.654961,5.965482,9.098286,-3.211189,2.972337,4.789709,3.317895,6.526416],[-4.982819,-3.646274,-1.959008,-8.516631,-4.033893,-9.360281,8.344766,9.017354,2.570948,-5.603780,2.520362,-6.915772],[5.165576,6.210596,6.232847,-0.811463,-4.315173,4.877671,-3.161800,0.403162,2.775932,-0.103805,7.820833,-6.125795],[-6.654766,4.562395,-4.420133,-9.251129,7.968265,-3.501474,-5.732087,-4.693823,-0.306266,0.206028,-9.153947,0.202250]],[[-3.377672,-5.705501,1.585551,3.688945,-2.209943,-2.057376,-2.969089,-7.727801,-8.937113,4.473897,2.820328,5.805856],[9.668916,-0.483340,-8.882479,-8.822620,7.807774,-6.112439,9.877662,-1.428883,-0.398456,-7.999612,3.893515,-0.512012],[-7.821953,-2.032942,-4.176425,5.103335,0.874379,9.557981,1.978405,-5.733687,-6.749747,0.815358,-1.311886,5.051218],[-0.461004,-3.784478,-4.363051,1.517960,-8.559807,8.987605,-1.013534,-7.059752,-6.430842,8.832534,6.345319,7.283284],[-4.124821,-3.136735,-3.117674,7.668043,3.275661,4.356658,-5.910417,-3.230184,-1.101541,5.402587,-8.637138,-1.236025],[0.599892,-9.093091,-6.099608,7.260021,6.274982,0.174322,6.409373,-8.831702,-4.058544,1.855995,6.492063,4.346373],[3.143592,-8.499721,4.573146,-9.672698,-6.902506,0.923494,-3.692529,9.111867,-0.464974,-7.666117,4.246494,9.529683],[-2.017005,-4.677723,-7.024534,6.043583,5.275184,-7.780653,4.036909,5.174557,4.972219,-2.632469,2.308730,9.413047],[-8.753896,-9.122235,1.778239,-0.193049,-3.323849,7.018593,-2.189337,-8.825035,-1.883231,-4.190834,7.311469,7.480481],[2.358239,9.467446,7.931309,-7.258110,-7.976474,1.279298,-9.389011,6.272565,-3.442098,-9.452467,1.062325,-6.315490],[0.102299,8.571909,3.672976,1.062892,-3.266665,4.080861,-7.194388,-4.379750,-7.427547,-5.571880,7.925986,5.309978]],[[-6.384759,-9.811273,-1.337848,2.524218,-2.079062,8.711287,1.995804,-3.380902,7.128231,5.010782,4.107541,-4.624911],[7.112016,6.967435,-9.290129,-7.516907,-3.626404,-9.145960,-6.698003,-6.446733,4.407959,-3.031481,-9.847051,-6.790803],[-0.126689,2.909240,1.768744,-9.030193,-9.798677,1.422143,-2.155221,9.475784,9.486042,-3.102086,1.805491,-5.030499],[-6.889852,2.587073,0.745813,-4.082217,9.828844,7.963981,7.548324,3.679702,5.408309,-7.467594,5.189259,-0.594476],[8.049320,-7.168528,0.662863,5.651699,6.329004,7.152713,7.930182,-1.535005,5.382512,5.153904,5.246929,9.498417],[-5.477678,5.935461,8.858339,-5.493433,-4.004136,-8.584849,0.608786,9.254766,-9.289856,1.456468,-8.961601,1.841552],[5.166015,-0.536691,3.067087,-0.724122,0.956186,3.072021,1.293980,9.308937,-2.208599,-2.299029,-2.632688,-5.926989],[-4.207934,-9.840158,-2.557305,-2.756473,-1.377178,-8.633073,-8.386592,5.480313,-4.124866,4.101944,-6.747189,5.334049],[-6.038118,-3.153582,0.082300,4.423552,-8.903090,-1.126390,1.573996,0.545541,3.227673,-5.826141,-7.622407,3.005603],[-6.966080,-8.229247,-1.893254,-4.956998,4.815826,3.165662,5.165167,-0.144213,-6.240642,-6.905346,-7.279772,5.021523],[-8.129272,1.435027,-5.798035,2.107526,7.573303,8.355144,-7.402713,-1.870963,0.519958,-0.964215,0.793784,-8.330577]],[[-8.283505,1.957177,-5.108312,-0.737835,-4.985399,1.797779,3.962679,-9.783304,5.214310,-5.889535,9.617062,1.133602],[-9.620007,1.201576,3.373578,7.686777,8.817519,-2.137005,6.720226,-7.120827,-5.212133,-7.319607,-3.478067,7.306670],[7.694816,3.643549,-9.117940,1.194849,7.061881,-6.862794,-2.747905,-9.772927,2.297886,-7.848380,8.140275,-9.617839],[-2.660798,7.545079,7.525880,-4.412012,-5.199989,9.047743,6.471793,6.684295,-3.387481,7.245143,0.348150,-6.884123],[-6.313727,-0.500101,7.757458,0.290353,2.714007,-5.334127,2.620884,8.222007,9.552104,5.929788,6.942623,4.110809],[-6.406883,3.179662,-5.876107,-5.196664,-8.133053,-9.713137,-9.175347,1.593074,0.172578,-2.895001,8.505759,-3.997810],[8.767176,0.061612,4.525901,-4.204365,3.971094,1.657159,3.251145,-3.107517,-1.290587,9.245862,-5.457250,6.357573],[-2.801670,5.829744,6.083578,-5.425312,4.870369,-1.843383,-4.511692,-9.691065,-6.852584,7.365057,-3.214084,6.685275],[5.379361,3.452203,8.549311,1.135235,-9.700843,8.645073,-2.116319,-8.893412,4.891263,-1.023715,3.309367,7.835474],[7.563810,4.746404,-7.930487,-2.386232,7.019822,-9.302515,-6.264604,6.128390,-7.005155,3.790167,-1.213487,-1.151027],[-0.722791,-2.021335,3.804542,8.848083,-8.856642,-7.645785,5.472582,-1.578726,-7.633834,2.245963,-8.962447,-2.497757]],[[-6.423115,-5.500003,0.952595,-9.040719,9.418950,-0.460761,5.861820,6.060381,-5.815538,-3.780744,1.094974,5.457116],[1.114448,-9.381474,1.942108,-3.763319,-3.386961,-5.749000,0.268687,1.028630,1.452026,-1.264494,8.796743,3.085626],[2.714026,0.432101,-6.931590,8.237356,-6.892262,-9.160459,-5.812981,5.823704,2.033393,-0.060194,-5.573195,5.111134],[9.650365,-1.829176,-0.030211,7.229277,-4.892181,-6.175371,0.882067,-3.883650,4.092793,8.843260,-7.904075,8.120718],[-8.022888,-0.935851,6.594303,6.040453,1.798325,-3.671991,3.479681,-4.182598,-7.865560,-3.369097,-3.945636,5.173221],[5.058479,8.800590,8.455633,8.443481,-1.374248,5.522316,-6.044275,0.210728,-5.703636,8.429594,7.438343,6.061672],[-6.228318,9.011561,6.880541,-8.534434,8.568610,-3.888280,-5.750643,-8.969578,4.211613,8.468126,-7.573280,-9.258821],[-4.326331,-0.952773,6.759569,5.471567,-9.364730,-2.072851,-2.620914,-0.570259,-5.496115,-3.955568,3.139879,4.883256],[-8.497503,-6.111685,0.841126,-6.885150,-3.089436,5.967817,-7.851712,6.362816,4.825908,-0.179148,-9.544480,8.392194],[5.823378,-3.282941,2.960779,-0.012511,-8.983510,-4.503344,1.727945,4.657678,-3.807000,2.406278,3.741957,7.323102],[-8.517366,-1.885999,-0.202041,2.381400,-2.357993,-0.780870,8.325929,7.784545,3.917588,-6.062785,-1.787831,-9.902058]],[[-0.498875,-0.251035,-0.824620,7.792442,2.148525,-9.342858,7.164948,-1.702634,3.941786,4.198907,2.287856,-1.664754],[1.353598,7.571265,-5.569244,-3.526916,3.508880,-2.125437,-2.218107,-0.600239,-3.378519,3.622354,-5.594190,2.079652],[8.604174,-5.030792,8.258498,6.968159,5.908377,0.457732,3.183510,6.246707,-0.472048,-7.977900,6.719129,-3.793947],[8.698944,0.332865,7.564817,1.067760,-5.479964,8.436178,-1.232942,-0.921667,4.252949,1.414649,7.132665,8.320859],[0.017748,-5.411479,-7.457070,-7.596188,-6.608617,5.668977,-3.424585,-8.469699,1.231838,-7.334302,6.859667,2.823277],[-3.445122,9.231878,9.585816,3.415558,-5.191847,2.289951,1.206282,7.809044,-8.671968,7.618936,6.574788,9.877753],[-6.729071,8.498933,-6.959065,-1.285452,7.417428,-7.126571,8.484474,9.551260,8.855838,-4.877393,-1.862540,-2.335198],[3.363073,7.466288,-4.543206,3.885713,7.102229,-6.948889,0.147360,-8.669734,-5.262223,-1.905954,5.799737,4.751246],[-6.034670,3.607297,7.507960,0.504959,2.353693,-1.538561,9.311435,-6.004524,-9.972437,-4.037795,-1.832318,-0.786435],[6.673902,-9.971054,7.412296,4.773422,0.849651,-0.130260,5.778462,5.449780,2.631663,-7.982224,2.098774,9.861730],[7.964711,-2.912694,-4.536107,-2.334998,3.041897,-1.153580,-2.212003,-4.412278,-0.335238,7.441228,4.453548,6.880725]],[[-6.605981,7.729463,-5.670573,2.515586,3.932840,6.933098,-6.415304,4.872391,-3.163719,-5.061182,-1.565426,3.300504],[-8.903004,-6.765092,3.322997,-7.572983,2.001702,-5.798960,-7.215799,9.347910,7.754962,3.482202,-9.470235,3.111909],[3.898500,5.785394,-2.894525,-2.938438,4.383928,-8.823309,-3.986881,-1.718610,7.163258,-4.255810,-5.289061,8.321638],[-3.682866,-0.833128,1.911351,-8.124785,1.687615,-9.406372,-8.099393,-2.150531,0.994926,-3.257260,7.765334,0.786936],[4.599222,-8.857730,4.076783,3.769667,8.364611,-3.384298,4.566345,3.571712,3.663733,4.552709,-6.673069,5.392342],[-6.671465,-3.184162,1.617381,-8.170256,3.177076,-8.725731,-8.223251,-6.380701,9.580620,3.426704,2.043414,-0.516455],[-9.794941,-5.415028,8.889891,2.336722,-4.896655,-2.959185,0.010577,-3.917605,1.039768,-0.896930,2.919328,8.338604],[4.095590,4.982925,7.081183,0.453275,4.444338,7.924134,-1.312366,7.503595,-2.414442,-5.454930,-8.245143,-8.235441],[7.426678,-9.896590,8.312637,-4.541962,-8.929282,-3.074862,0.653289,2.291469,1.528689,4.263853,9.808724,-5.644755],[-7.053915,-5.122000,-8.623753,9.031883,1.538556,-3.347239,7.955027,4.608862,-2.325114,-8.998298,-0.635034,8.106065],[-4.409626,4.493613,6.875624,2.114717,-0.842272,-8.282788,-3.022432,-8.254128,8.847373,-7.766087,1.095762,-8.749588]],[[3.860382,6.898078,9.552525,-3.517203,-6.220003,1.960410,1.012802,1.444042,-3.504646,-2.674178,4.628147,-9.468746],[2.165845,-5.588957,7.140777,1.748003,0.102044,-9.835247,3.430851,-1.957057,-7.415035,8.905376,-4.214788,4.385196],[-1.394111,6.712564,-4.856292,8.122434,-8.123263,0.492695,-0.400977,0.708666,1.089276,-9.333084,-3.690888,-5.811526],[8.873239,-9.746664,5.662506,-2.668430,-2.603910,3.751158,-3.644420,-3.648558,-1.830347,-3.925522,-0.105612,-4.147225],[6.175323,-4.266686,5.915272,-1.205060,-8.305500,-1.565083,-1.667896,-8.870685,-2.754828,9.680574,-7.534030,-2.709791],[7.560292,4.242293,-9.550062,-3.072052,4.173568,2.112097,8.065852,4.125758,-3.448390,7.485386,-4.499927,5.133822],[-5.725968,1.611811,3.304168,6.765018,-2.628374,-8.530141,8.772407,-7.926598,-8.315709,5.931116,9.138946,1.306698],[6.982552,-3.019803,-7.966584,-3.146738,5.541549,8.546266,4.829132,0.637933,-1.235260,-2.914002,-3.548408,-2.808271],[-5.264165,7.654440,-5.487131,-6.211049,4.550950,5.450356,-8.883221,-4.745483,-1.435974,-6.949829,0.793728,4.217901],[-9.369463,5.886967,8.652042,3.622317,9.118430,9.823204,6.747062,1.423331,4.721711,0.464093,1.099763,3.719143],[2.737935,1.164977,5.345271,-4.160734,7.164180,8.615217,2.345381,-5.986075,9.595824,-3.126389,1.473076,2.392728]]], dtype = "float64")#candidate|4832|(8, 11, 12)|const|float64
bop_4833 = relay.power(var_4831.astype('float64'), const_4832.astype('float64')) # shape=(8, 11, 12)
func_3598_call = mod.get_global_var('func_3598')
func_3601_call = mutated_mod.get_global_var('func_3601')
var_4842 = relay.var("var_4842", dtype = "float32", shape = (504,))#candidate|4842|(504,)|var|float32
call_4841 = func_3598_call(relay.reshape(var_4842.astype('float32'), [8, 7, 9]))
call_4843 = func_3598_call(relay.reshape(var_4842.astype('float32'), [8, 7, 9]))
func_1961_call = mod.get_global_var('func_1961')
func_1963_call = mutated_mod.get_global_var('func_1963')
var_4855 = relay.var("var_4855", dtype = "float64", shape = (864,))#candidate|4855|(864,)|var|float64
call_4854 = relay.TupleGetItem(func_1961_call(relay.reshape(var_4855.astype('float64'), [8, 9, 12])), 1)
call_4856 = relay.TupleGetItem(func_1963_call(relay.reshape(var_4855.astype('float64'), [8, 9, 12])), 1)
output = relay.Tuple([bop_4833,call_4841,var_4842,call_4854,var_4855,])
output2 = relay.Tuple([bop_4833,call_4843,var_4842,call_4856,var_4855,])
func_4857 = relay.Function([var_4831,var_4842,var_4855,], output)
mod['func_4857'] = func_4857
mod = relay.transform.InferType()(mod)
var_4858 = relay.var("var_4858", dtype = "float64", shape = (8, 1, 12))#candidate|4858|(8, 1, 12)|var|float64
var_4859 = relay.var("var_4859", dtype = "float32", shape = (504,))#candidate|4859|(504,)|var|float32
var_4860 = relay.var("var_4860", dtype = "float64", shape = (864,))#candidate|4860|(864,)|var|float64
output = func_4857(var_4858,var_4859,var_4860,)
func_4861 = relay.Function([var_4858,var_4859,var_4860,], output)
mutated_mod['func_4861'] = func_4861
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5198 = relay.var("var_5198", dtype = "int32", shape = (3, 10, 16))#candidate|5198|(3, 10, 16)|var|int32
var_5199 = relay.var("var_5199", dtype = "int32", shape = (3, 10, 16))#candidate|5199|(3, 10, 16)|var|int32
bop_5200 = relay.logical_xor(var_5198.astype('int32'), relay.reshape(var_5199.astype('int32'), relay.shape_of(var_5198))) # shape=(3, 10, 16)
output = bop_5200
output2 = bop_5200
func_5215 = relay.Function([var_5198,var_5199,], output)
mod['func_5215'] = func_5215
mod = relay.transform.InferType()(mod)
var_5216 = relay.var("var_5216", dtype = "int32", shape = (3, 10, 16))#candidate|5216|(3, 10, 16)|var|int32
var_5217 = relay.var("var_5217", dtype = "int32", shape = (3, 10, 16))#candidate|5217|(3, 10, 16)|var|int32
output = func_5215(var_5216,var_5217,)
func_5218 = relay.Function([var_5216,var_5217,], output)
mutated_mod['func_5218'] = func_5218
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5244 = relay.var("var_5244", dtype = "uint32", shape = (12, 3, 15))#candidate|5244|(12, 3, 15)|var|uint32
const_5245 = relay.const([[[10,-10,7,8,8,4,-5,10,-2,-3,2,-5,-1,4,-8],[3,-6,-2,-4,-8,-4,-8,-5,9,5,2,-9,6,3,-7],[10,1,-5,-10,-3,-1,3,6,-10,-5,6,-2,-4,7,8]],[[-8,-4,-6,-2,-7,-5,2,10,7,-10,6,-10,4,-7,-3],[5,-5,10,7,8,-5,-4,2,-4,5,1,-1,-10,-9,6],[-3,-1,9,10,3,1,2,6,1,-4,3,10,10,-1,-8]],[[-9,5,7,-3,-9,6,8,-7,-3,6,7,-5,-5,8,2],[-2,-6,2,10,-4,-6,1,8,10,-8,-9,6,-5,-10,9],[-10,-4,-10,4,4,9,6,-3,7,6,-10,2,10,8,-10]],[[-4,10,7,-6,9,6,-9,-7,-9,-6,10,9,-1,-9,10],[8,8,-4,9,7,-8,-6,-7,1,-7,-10,-2,-9,1,4],[5,-7,-3,1,9,-9,-3,7,-8,-8,5,10,-7,2,6]],[[9,-1,6,7,5,-5,6,7,-10,10,-8,3,4,-8,10],[-6,7,7,-1,-3,2,-9,8,2,1,-3,6,-10,8,9],[-3,-6,2,6,-8,10,-8,10,4,-1,1,7,-10,10,-4]],[[5,-5,8,2,1,-6,2,9,-10,-2,-10,-5,-2,2,4],[-2,3,-9,5,8,3,-6,-8,9,-9,-8,-5,6,9,-1],[5,-1,-3,3,2,-5,-5,-2,-7,10,-1,5,-1,-5,-2]],[[-5,-2,-7,-7,-4,-4,-5,-3,4,7,5,2,4,-4,6],[-5,-3,9,3,-10,6,7,3,-10,9,-10,-7,-8,-8,2],[-8,-6,6,-1,-3,8,-7,5,-7,8,4,2,-10,6,5]],[[-3,5,-4,-7,1,-7,3,6,-5,-3,-8,-1,-2,-5,3],[6,-10,7,3,-8,6,-3,-1,-5,1,1,8,-4,-5,9],[-6,3,-6,-2,4,3,-7,-7,7,-7,3,-2,10,-3,4]],[[2,-7,-7,-5,3,-1,7,5,6,-7,2,1,-1,1,-5],[-6,-4,3,-7,2,-6,-6,-1,-7,3,-2,-4,-3,5,10],[9,-8,-10,-6,-9,-5,-1,8,-2,-9,-8,1,5,6,-8]],[[-1,-2,-9,1,-7,4,-5,-3,-7,7,1,6,-7,8,8],[-2,2,-9,8,8,8,9,9,6,8,-1,-9,1,-5,-3],[-4,3,1,-6,-1,4,8,-5,-7,10,-4,-4,-7,3,3]],[[-6,-1,2,-10,10,-5,-3,10,-8,8,-4,-1,7,3,-8],[8,-3,5,-2,8,-8,-8,5,-8,-5,-3,9,7,-1,-8],[9,5,4,9,-6,-7,9,-5,3,9,8,-9,7,-4,6]],[[-9,9,-7,5,8,5,6,-1,10,4,2,-3,-10,-6,-1],[8,9,6,-10,-4,-4,4,-2,-3,-6,2,-9,-10,-5,3],[9,8,9,-4,8,-7,-6,2,-3,2,2,-9,9,7,-6]]], dtype = "uint32")#candidate|5245|(12, 3, 15)|const|uint32
bop_5246 = relay.bitwise_or(var_5244.astype('uint32'), relay.reshape(const_5245.astype('uint32'), relay.shape_of(var_5244))) # shape=(12, 3, 15)
output = bop_5246
output2 = bop_5246
func_5261 = relay.Function([var_5244,], output)
mod['func_5261'] = func_5261
mod = relay.transform.InferType()(mod)
mutated_mod['func_5261'] = func_5261
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5262 = relay.var("var_5262", dtype = "uint32", shape = (12, 3, 15))#candidate|5262|(12, 3, 15)|var|uint32
func_5261_call = mutated_mod.get_global_var('func_5261')
call_5263 = func_5261_call(var_5262)
output = call_5263
func_5264 = relay.Function([var_5262], output)
mutated_mod['func_5264'] = func_5264
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5277 = relay.var("var_5277", dtype = "int32", shape = ())#candidate|5277|()|var|int32
var_5278 = relay.var("var_5278", dtype = "int32", shape = (16, 1))#candidate|5278|(16, 1)|var|int32
bop_5279 = relay.left_shift(var_5277.astype('int32'), var_5278.astype('int32')) # shape=(16, 1)
func_4277_call = mod.get_global_var('func_4277')
func_4280_call = mutated_mod.get_global_var('func_4280')
var_5297 = relay.var("var_5297", dtype = "float32", shape = (1, 1008))#candidate|5297|(1, 1008)|var|float32
call_5296 = relay.TupleGetItem(func_4277_call(relay.reshape(var_5297.astype('float32'), [8, 14, 9]), relay.reshape(var_5277.astype('uint32'), []), ), 0)
call_5298 = relay.TupleGetItem(func_4280_call(relay.reshape(var_5297.astype('float32'), [8, 14, 9]), relay.reshape(var_5277.astype('uint32'), []), ), 0)
output = relay.Tuple([bop_5279,call_5296,var_5297,])
output2 = relay.Tuple([bop_5279,call_5298,var_5297,])
func_5317 = relay.Function([var_5277,var_5278,var_5297,], output)
mod['func_5317'] = func_5317
mod = relay.transform.InferType()(mod)
var_5318 = relay.var("var_5318", dtype = "int32", shape = ())#candidate|5318|()|var|int32
var_5319 = relay.var("var_5319", dtype = "int32", shape = (16, 1))#candidate|5319|(16, 1)|var|int32
var_5320 = relay.var("var_5320", dtype = "float32", shape = (1, 1008))#candidate|5320|(1, 1008)|var|float32
output = func_5317(var_5318,var_5319,var_5320,)
func_5321 = relay.Function([var_5318,var_5319,var_5320,], output)
mutated_mod['func_5321'] = func_5321
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5973 = relay.var("var_5973", dtype = "float32", shape = (3, 10, 12))#candidate|5973|(3, 10, 12)|var|float32
const_5974 = relay.const([[[-0.623308,-6.796530,-1.841520,1.676807,-2.216150,8.805379,-1.423647,-7.555204,5.390099,-8.251872,-1.592896,7.272237],[-7.217689,1.098832,9.429285,-9.240988,-0.294865,-2.159379,8.272169,6.139866,0.762835,-5.793417,-4.680391,-9.520512],[-3.142801,-8.811741,-1.085425,5.604837,5.584188,-4.922184,1.850389,-9.784871,0.046667,-9.465345,-5.255047,-6.324949],[-2.215530,3.147306,3.523136,-4.621369,-3.154348,7.904977,8.272267,-2.962035,7.416105,4.650653,3.826083,-5.411219],[8.455017,2.642260,-7.463492,1.819237,4.017041,-8.121329,-3.756159,-1.190681,3.357612,-9.920552,-6.497735,2.763971],[2.131387,-8.728674,6.555610,9.494588,1.500234,-4.119740,-7.911867,7.536533,3.750580,2.400816,-3.686975,-1.211118],[1.778203,-0.117080,3.709039,2.827449,7.951482,3.379362,-5.021964,1.349297,-0.322855,-9.337090,0.427447,-6.407569],[0.208259,1.507873,5.218068,1.748243,-5.287955,-5.399326,9.715166,-3.218306,3.627493,5.290306,-1.286463,9.287268],[9.612429,2.077379,4.121423,2.448232,4.938139,2.690957,-4.006762,5.197977,-7.077358,0.441855,1.380363,-7.494726],[9.226086,5.921615,-9.969297,-8.273401,-9.552762,9.859326,4.682592,-9.724782,8.252381,6.454556,-9.276135,-9.306486]],[[-2.502263,-1.862392,7.936959,-0.622596,0.910297,-2.329063,4.570962,2.487431,-8.362378,6.077826,9.265181,6.852182],[1.836620,-9.876952,9.511027,2.102958,-0.833382,-0.768758,-6.942049,6.781253,-2.704462,-8.579891,-7.528504,8.889028],[-5.321551,5.260548,-9.039308,-3.465695,9.389917,5.580684,6.883341,8.631260,-3.073625,0.758475,-6.967957,-5.304573],[-6.136829,-2.495990,-4.745991,0.596409,2.001805,-1.958894,3.633481,4.711722,-9.615924,-0.452993,4.079999,3.632272],[2.270732,6.607266,1.409044,-4.492137,-9.287599,8.087720,-5.257121,4.160151,0.293130,6.169926,-5.300683,6.034422],[0.260995,-7.380142,9.872472,-0.470769,-0.825665,0.751239,-5.853785,2.664342,-2.911754,1.100522,8.323485,-4.902292],[0.475263,-3.910902,6.105214,-9.211789,0.027608,1.676610,-9.729763,1.938615,8.247962,7.414330,-1.695317,-7.530213],[9.081068,8.788711,-1.375714,6.742657,4.610440,7.438950,0.856398,7.964080,-8.253891,-7.395517,-7.482962,4.778112],[-7.185076,8.150398,3.290006,3.061310,-1.589206,-2.666125,8.531363,-4.665522,5.776121,5.835066,3.898793,0.131513],[5.962693,-9.701670,5.489649,-1.099083,-4.583229,-2.863557,9.470135,-0.953916,-1.275381,0.197463,-0.766683,-9.915448]],[[7.082281,4.332094,-0.144535,9.776562,-8.257713,8.733681,1.722829,6.968719,-9.724903,-9.548782,7.493255,8.781465],[8.796322,8.871601,-7.998820,3.884543,1.882934,-8.253755,9.873348,-8.407525,4.384210,6.584242,9.916817,5.522630],[-8.063894,8.655387,-1.317526,6.639594,3.181795,-3.967284,-6.432749,-5.354516,-4.585427,5.290988,-8.335873,9.582403],[2.382242,-4.276497,1.590098,-0.205048,6.328099,6.442270,-9.090461,4.823976,-9.370010,1.435849,4.197180,-5.841901],[-3.278002,2.976203,9.413642,1.435770,3.382310,4.402322,1.984774,-2.995379,-7.295203,-0.472371,-2.962122,-5.624266],[6.117406,2.432850,5.809202,-6.769013,0.172521,-3.173279,-5.951251,-4.853386,-1.571946,-5.326286,0.907960,-6.032824],[6.284260,4.545966,4.347078,-9.225610,9.132084,8.230652,5.125612,9.914215,-6.766756,-6.345790,4.430117,-0.191342],[-5.831042,2.322269,-8.941853,0.086563,-2.783323,1.553564,6.712588,1.411711,-7.525787,5.295871,-8.317664,-9.454542],[6.350562,-9.271578,1.462941,-1.665614,5.890863,-0.828509,1.783729,0.279224,-8.435479,9.001161,-5.858738,-3.695428],[-7.513279,6.088467,-5.534850,7.717286,-1.099597,-5.466195,-3.247268,6.582162,-1.785511,3.136711,-1.527104,-9.895485]]], dtype = "float32")#candidate|5974|(3, 10, 12)|const|float32
bop_5975 = relay.power(var_5973.astype('float32'), relay.reshape(const_5974.astype('float32'), relay.shape_of(var_5973))) # shape=(3, 10, 12)
uop_5985 = relay.sigmoid(var_5973.astype('float32')) # shape=(3, 10, 12)
func_1633_call = mod.get_global_var('func_1633')
func_1638_call = mutated_mod.get_global_var('func_1638')
const_5989 = relay.const([1.150915,8.926183,-1.061023,5.758048,-2.435670,4.684479,7.228324,8.608510,4.772883,-9.704952,-2.992464,1.478121,-3.159499,-0.531793,-2.703474,-4.753539,9.046852,9.483917,-1.605470,8.438011,6.013609,7.283890,4.776727,-8.521852,7.675634,0.615365,3.651236,-5.097336,2.588884,8.529349,-7.180190,-9.007474,7.508579,-2.532087,-3.070099,-0.263333,-1.025696,3.860693,6.707490,-1.504250,-8.694270,-2.911648,4.767931,2.353425,0.646521,-0.346332,2.369628,9.693254,-7.218153,-5.835397,5.460564,-8.304393,-1.026534,2.875010,4.552159,-8.555767,-0.759571,2.440360,-2.948999,-4.088449,4.986085,7.327774,2.939874,7.327806,-4.348313,9.484306,9.951474,2.349863,0.219281,4.284665,8.220741,-9.127136,-5.751674,4.294705,8.835288,-3.946347,-8.704626,9.962920,-8.863651,7.770797,-0.272687,-6.270990,7.216085,4.524123], dtype = "float32")#candidate|5989|(84,)|const|float32
var_5990 = relay.var("var_5990", dtype = "uint32", shape = ())#candidate|5990|()|var|uint32
const_5991 = relay.const([[4,-9,4,3,7,6,-7,-9,2,5,-7,-9,7,-10,4,9,4,8,-1,-1,-4,-2,-1,-7,6,-8,2,-9,-5,-2,-7,-8,-10,-8,-7,1,6,-4,6,-10,1,5,-9,-4,3,5,6,2,10,-7],[9,-8,-1,3,-2,-10,-3,8,-1,-6,8,-6,-5,-10,-8,-1,7,3,-10,7,-9,6,-4,-6,1,-1,5,5,8,4,4,-5,5,-9,4,8,5,-7,-10,-5,-5,10,-8,2,2,-1,1,7,4,10],[4,-1,-2,7,1,3,-2,8,9,5,-3,-10,-4,10,-7,-8,-8,9,7,-2,-9,4,1,1,-1,-3,-5,-1,-4,-9,-3,9,7,-1,-5,3,-9,7,-9,10,-7,4,-8,2,-6,-2,-9,-10,8,-1],[4,8,10,-3,-4,-9,-8,2,10,9,-7,6,-9,-4,-8,1,-10,-5,-4,1,1,-8,5,-6,-6,-10,3,2,-10,2,-5,10,-4,6,-5,-4,9,7,4,6,8,6,1,5,4,1,-2,5,-8,-2],[9,9,-1,-1,-10,6,2,9,-8,5,4,3,9,-10,10,9,-9,7,-5,-5,-5,2,3,-1,6,4,3,5,-7,8,8,-9,6,-9,6,5,-4,-1,8,7,9,5,-1,4,5,7,9,-10,-4,5],[2,-1,9,-3,-3,3,4,-6,8,4,3,-7,-7,-7,-6,1,4,-6,6,-10,-2,3,-10,-2,2,-2,-7,-9,-5,-5,1,-9,-8,6,4,2,-10,3,-7,-8,1,4,-8,10,9,4,-1,-5,-10,2],[-6,10,-1,-5,8,-7,-5,4,-4,-9,-10,-3,10,10,8,1,-8,1,6,10,-1,-2,8,4,-2,4,-7,-3,-2,6,6,-5,10,4,4,-1,-10,3,-9,-9,1,-3,8,-7,2,2,1,-2,5,-9],[1,4,-3,1,-6,-2,-4,5,-4,6,-6,-4,8,-9,4,-2,10,-8,2,4,2,5,3,-9,2,3,-4,6,4,6,5,-5,-3,7,-4,3,7,3,-8,6,-8,2,5,5,-5,-9,7,7,-7,-5],[-3,1,8,9,8,10,2,7,9,-1,3,7,2,-9,-10,3,7,-5,-8,3,-8,2,-4,-1,3,7,10,5,2,4,-10,-5,-3,-4,-3,-8,9,-4,1,3,-7,-9,8,10,9,2,-3,8,5,6],[8,-10,-4,-7,-10,-8,-5,-4,2,-3,-10,-4,-1,-10,6,-8,-9,-1,-3,-7,-1,1,-1,-8,-1,-6,7,-5,-4,-7,-10,-5,3,2,-6,-2,4,-2,-8,-2,3,-9,9,1,10,2,-2,1,-2,-3],[1,-5,9,-2,10,-4,-1,7,1,-3,-7,3,1,7,8,-4,-7,4,8,1,-1,5,1,1,-10,-5,9,-6,-3,-8,5,9,-2,-6,-10,-2,-5,4,1,-10,-10,-7,4,-1,-8,-7,2,-5,-1,-7],[-1,4,8,-3,-3,-9,7,-2,-3,7,4,6,-10,-10,-3,3,-8,9,-5,4,-3,-9,-8,3,-5,-3,-4,5,-10,-6,4,7,6,-9,-8,9,3,-6,-10,-4,-7,6,-8,7,7,-2,-5,-4,-9,-2]], dtype = "uint8")#candidate|5991|(12, 50)|const|uint8
call_5988 = relay.TupleGetItem(func_1633_call(relay.reshape(const_5989.astype('float32'), [6, 14, 1]), relay.reshape(var_5990.astype('uint32'), []), relay.reshape(const_5991.astype('uint8'), [600,]), ), 4)
call_5992 = relay.TupleGetItem(func_1638_call(relay.reshape(const_5989.astype('float32'), [6, 14, 1]), relay.reshape(var_5990.astype('uint32'), []), relay.reshape(const_5991.astype('uint8'), [600,]), ), 4)
output = relay.Tuple([bop_5975,uop_5985,call_5988,const_5989,var_5990,const_5991,])
output2 = relay.Tuple([bop_5975,uop_5985,call_5992,const_5989,var_5990,const_5991,])
func_5993 = relay.Function([var_5973,var_5990,], output)
mod['func_5993'] = func_5993
mod = relay.transform.InferType()(mod)
var_5994 = relay.var("var_5994", dtype = "float32", shape = (3, 10, 12))#candidate|5994|(3, 10, 12)|var|float32
var_5995 = relay.var("var_5995", dtype = "uint32", shape = ())#candidate|5995|()|var|uint32
output = func_5993(var_5994,var_5995,)
func_5996 = relay.Function([var_5994,var_5995,], output)
mutated_mod['func_5996'] = func_5996
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6080 = relay.var("var_6080", dtype = "float64", shape = (16, 11, 6))#candidate|6080|(16, 11, 6)|var|float64
uop_6081 = relay.sigmoid(var_6080.astype('float64')) # shape=(16, 11, 6)
output = uop_6081
output2 = uop_6081
func_6085 = relay.Function([var_6080,], output)
mod['func_6085'] = func_6085
mod = relay.transform.InferType()(mod)
var_6086 = relay.var("var_6086", dtype = "float64", shape = (16, 11, 6))#candidate|6086|(16, 11, 6)|var|float64
output = func_6085(var_6086)
func_6087 = relay.Function([var_6086], output)
mutated_mod['func_6087'] = func_6087
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6144 = relay.var("var_6144", dtype = "float64", shape = (1, 1, 14))#candidate|6144|(1, 1, 14)|var|float64
uop_6145 = relay.sinh(var_6144.astype('float64')) # shape=(1, 1, 14)
func_4857_call = mod.get_global_var('func_4857')
func_4861_call = mutated_mod.get_global_var('func_4861')
var_6174 = relay.var("var_6174", dtype = "float64", shape = (96, 1))#candidate|6174|(96, 1)|var|float64
const_6175 = relay.const([9.708820,3.782610,-6.856329,-6.421539,9.120828,-6.241714,2.427679,0.924717,-7.874442,-3.836722,-6.751700,5.331131,6.460976,-9.620429,5.132437,6.942443,-5.209945,-2.495441,8.906433,3.340521,1.562876,-4.749012,-7.991476,-9.836354,3.049196,-3.816770,9.447098,-0.660768,-8.200566,9.933703,7.879632,-0.001906,-9.524273,-1.835756,-4.418886,-8.135955,-4.593848,-3.041226,-8.026823,3.168724,7.224731,7.971471,8.504155,1.195893,-9.652624,2.723461,7.340798,-0.055301,-6.064330,0.408336,-6.096918,-7.082174,9.486514,-3.604697,0.113727,4.969436,4.145193,-2.209856,-8.534595,-2.119791,-0.005420,-0.191957,8.287033,8.259026,-6.785406,-6.243036,-4.413000,7.086688,8.097589,4.736320,5.302628,9.052330,9.218968,4.064062,2.688369,8.815157,0.072569,-4.720812,-3.138219,-7.720355,-3.670437,0.975787,0.885655,-5.126103,-7.020697,0.789295,-9.674654,-3.383284,-2.829063,-6.889999,4.734710,-5.851040,6.751610,-1.125194,-9.733023,-9.985749,1.511804,-6.939823,-5.925548,-6.659488,-3.485842,-5.150757,-7.678999,7.348146,-2.798140,4.901037,6.012791,-4.816044,-1.130441,-0.591101,7.336060,7.434743,-2.445891,7.619864,9.233047,-3.575537,-4.704911,-2.924863,1.897970,6.412212,2.903616,-1.904982,-0.140959,-1.115273,1.049770,-5.692976,6.611834,2.470287,1.158181,8.140691,-8.612555,-1.277424,-4.994281,-7.248943,-2.172634,-0.718175,-6.637139,-9.761114,0.753939,8.303272,4.699695,-6.356381,4.419842,0.427677,-3.831823,7.426552,-3.165403,3.340252,5.656500,-5.256739,-1.170064,1.248982,3.606656,9.389672,-8.052321,5.884078,-7.236690,9.968124,-6.751616,-1.098618,9.517478,9.966448,-7.921349,-6.744773,-9.739305,4.111551,4.200479,1.493226,9.249083,-6.864373,4.291190,4.120428,8.069736,-0.267931,9.322084,-2.837864,-7.060858,-4.356251,5.054350,-9.578107,-5.025120,-5.263839,5.712613,-5.572280,-0.209238,-0.808611,2.481655,-0.655024,-1.318292,-5.076101,5.583260,-9.102246,-6.295626,-3.560506,-8.848596,-0.255879,8.140976,-9.031615,-3.344366,2.332616,0.013567,8.116645,3.020430,2.373500,-7.272433,-2.305675,6.049420,0.851358,4.437378,3.787400,0.369276,-6.863003,-5.792513,7.121704,-8.788714,2.252527,-4.313162,-7.091663,-7.414391,-3.019005,1.892663,0.541507,0.883873,-6.778590,-1.497075,-9.075111,1.555096,-4.095623,-1.337211,1.894257,-4.533595,-8.032821,4.197897,8.848567,2.339905,-1.845116,-3.532558,1.493320,-7.427919,-1.649767,1.072365,-2.079047,-4.296679,-4.117670,-5.070146,0.709524,-9.570186,-1.054331,-9.894379,-7.239497,9.117819,-3.578328,-4.823857,6.155453,5.193625,5.337452,4.438072,-5.338734,7.890214,-2.582487,-7.464436,-7.855517,3.151199,-7.040165,-0.269658,5.623893,2.874813,5.930430,0.023986,-8.912263,7.352072,9.351795,-8.687943,-9.331979,-8.417955,6.500205,-5.155503,-7.907464,-8.434387,8.583771,5.407204,-7.062819,-7.499441,-2.136159,7.923545,-4.166532,-1.861542,3.933572,5.757080,-0.698356,-6.745578,-7.198953,-4.339468,-3.338309,4.270303,4.502334,6.298104,3.197872,-3.271306,7.613564,5.280402,-7.957164,-4.888202,-0.766483,8.132836,2.131488,-1.882944,-7.296206,-4.978356,-4.483575,-6.596716,-2.789951,0.506488,4.320768,1.309235,1.982417,-1.333763,1.710712,1.491060,0.810334,-1.799344,-1.854875,-8.200331,4.917043,-9.636912,1.826027,-4.159189,-3.741976,0.252883,7.232426,-1.790467,7.980183,-0.060278,5.525862,-7.087597,-7.004971,-7.314424,-3.242454,4.304811,2.253715,9.826624,-3.979359,3.824102,9.080800,-0.916132,4.365977,-0.482230,1.803254,7.019090,-0.437041,6.271269,2.012405,-1.723412,7.976213,6.889057,6.357724,5.761754,-6.985218,-7.809219,5.486355,-6.225876,4.431070,-4.652278,6.994695,-5.535533,2.433167,-9.844901,4.775334,-1.829558,-0.235191,4.878956,-9.461681,3.784036,3.576300,9.118033,-1.743810,-6.847562,-4.576310,1.110998,-3.642066,1.489516,2.549575,-3.187937,-1.031877,8.879641,2.127394,-9.049253,2.320713,-1.461553,3.684267,-2.198681,-9.674558,-0.850378,9.665648,-1.398242,5.155773,3.050260,-3.679193,6.254558,4.185946,7.057744,8.530790,-0.564368,-7.817824,-1.035060,-1.086392,2.362967,6.003703,0.958355,0.525089,-1.547643,-1.361897,-3.285599,-8.051997,9.325784,-3.119106,-1.933175,6.319012,7.141696,1.036788,5.018457,-7.413433,-2.267759,-4.398538,-5.931387,-1.365883,-2.021646,-9.225828,1.107499,-0.537402,-5.682732,0.372273,9.670838,-9.742643,-8.046644,-3.222774,6.389946,5.584593,-8.696069,-5.210798,5.485770,5.466908,8.420227,-4.116945,-3.811292,0.043082,-2.002810,8.402204,0.911524,-1.792985,-1.007220,-9.702175,9.129707,6.042326,3.109451,-3.775306,-6.896207,3.996010,9.079159,-7.836962,-0.016925,1.912648,0.437797,-7.486480,-4.736141,-7.042804,3.728945,-2.195391,-2.438246,-4.387059,0.646242,2.109433,5.301777,0.105864,-6.720546,-8.548900,-6.585695,0.120698,1.335848,-1.626547,-0.493944,-4.727067,8.663967,-0.244811,-1.554931,-8.097504,3.467848,-3.327348,-6.225257,-4.900887,3.687232,1.334239,-5.701433,7.764455,9.684566,1.574075,2.669328,5.840776,-9.254989,-2.699635,5.200431,7.389146,-2.374043,7.934006], dtype = "float32")#candidate|6175|(504,)|const|float32
const_6176 = relay.const([-8.208134,-6.286260,-2.886769,-5.393267,-4.340104,-9.547352,7.247105,-0.070126,8.136290,6.273007,3.517182,-1.150915,-9.604893,-9.201171,7.640773,-6.409964,4.263722,-6.539735,5.468594,5.031225,-6.533688,3.913515,5.674019,4.825011,-9.119986,1.040186,7.929173,-5.636871,7.655454,-6.659916,7.323056,1.255854,6.560528,-0.529291,-5.118534,-4.662445,6.949301,8.490467,-8.583451,-0.054500,9.102446,-8.987912,7.413294,-6.477341,-6.332613,3.015421,8.469057,-8.728343,-4.748096,8.662798,-8.484767,1.906756,6.021657,-2.021116,6.279218,7.264795,5.932036,-0.935003,-6.587478,3.062128,4.684604,-4.314664,6.115269,8.583864,6.955537,2.166279,0.853967,-3.010272,3.539710,-4.804217,0.079513,2.507285,6.007492,4.842569,-8.646200,-8.033487,4.364725,-1.895234,2.991068,-1.707690,3.314940,-4.552741,-8.483586,5.065948,-6.740246,-4.990067,0.377706,-8.270730,7.179682,-4.458351,-7.586091,3.923719,6.932923,7.676869,-9.969593,-4.118145,2.204216,-0.977280,3.831230,3.004611,8.618601,0.025128,8.324275,1.252797,9.308542,-4.706324,6.004519,5.522598,9.072372,3.593733,-2.890026,7.957292,9.434035,9.485295,-9.216550,-5.022577,-7.764735,-8.211578,2.974671,8.971856,-0.758747,-3.979717,7.032392,-9.785762,-9.274923,-1.678446,2.103785,-4.158015,5.486079,7.244703,-0.124412,8.511545,7.183934,-8.349134,-4.634039,6.813197,2.825388,-7.901279,5.468231,-8.952742,-5.767953,-7.703906,-2.484407,-9.893090,-1.130250,2.541979,9.117936,-7.493385,2.803880,1.378859,-6.889232,-1.734648,8.643869,-3.538946,9.752658,-4.332620,-7.722274,-4.230735,-0.482180,-8.997646,-5.082778,0.483236,2.098652,8.694324,5.562042,-2.844414,6.259092,0.207922,3.077745,-7.041129,-3.948089,-6.070585,9.208789,-7.688457,-5.251356,3.727880,-9.609732,-3.681271,-0.315602,-2.739227,0.464908,7.676641,0.788989,6.769114,-0.311874,-1.221449,-7.342864,4.290044,4.368632,0.830375,3.755430,-0.951749,-8.795714,1.650528,-1.102522,-5.463914,-3.041994,2.781342,-3.738318,-9.646500,-4.532362,-4.556059,4.219887,-0.125801,4.128358,-0.152532,-6.248822,-2.307434,-4.125119,4.256322,-9.186690,-8.036623,9.463441,-7.095309,-1.539523,5.526857,9.857562,8.799192,2.835433,1.129879,-1.096250,2.779125,1.625980,6.440496,3.800513,-7.359039,-1.674179,-7.061751,-2.593390,5.414599,6.912303,8.897129,-5.180998,-1.533315,2.700921,-7.651307,1.457661,-2.473732,-0.043415,-5.304583,2.019573,7.057151,6.538084,0.369957,-0.406341,-6.407247,1.342951,9.059567,5.834121,-3.344395,0.522316,-7.929065,-1.985311,8.836749,-2.583297,5.696008,0.614792,9.286381,-1.775245,-2.008008,2.450373,5.469004,5.243862,6.906824,-4.749587,3.981230,-4.673738,-8.740626,-3.741075,4.107295,-4.569836,-4.950672,9.239425,-0.166009,2.752560,5.560411,-1.244565,7.793292,0.148521,-5.153556,-9.433297,2.634257,7.822201,-9.433123,-6.143394,-7.021337,-4.046508,-3.587837,-6.907971,9.933211,4.026477,-0.905667,1.410166,9.947839,-2.933130,-7.020579,8.478323,-7.078594,-0.119623,4.242028,-2.529169,4.468075,-5.052025,6.164439,-3.269664,-8.445502,4.720276,4.980740,0.578938,9.812735,-8.527053,-1.837033,3.692675,-9.706566,8.833768,-8.810403,2.175104,-7.276928,4.142281,-9.921690,6.454690,-5.253233,-0.379529,4.066621,-5.074615,1.076414,3.576755,5.614401,-5.490324,-5.176252,4.086421,-4.837080,-5.126850,-3.022699,-5.105044,0.136182,-3.221287,-4.069913,-1.236845,-5.569999,-9.986554,8.287474,7.130472,-3.265130,2.068701,-3.512350,-7.622600,3.144535,5.514127,-7.272352,5.144248,6.735580,5.058576,-9.661332,-1.403369,5.375328,-7.719406,-4.933391,7.561051,-1.668921,2.967229,9.076926,7.010799,-5.416680,-8.216661,-6.367234,-1.085979,8.879480,2.256759,4.842572,-8.053053,-1.868212,-4.718831,6.590323,9.617175,-2.950521,-3.695480,-2.379182,-8.773273,-5.185943,-3.884652,-8.799017,5.540649,-1.103309,3.499530,-2.382016,-2.809806,0.394022,1.146071,-2.137684,-9.219099,0.942744,-1.244262,-4.611628,-2.591868,-3.863784,1.565745,1.296686,-6.374067,4.005535,-2.772368,-4.331094,-8.375996,2.775669,-9.955650,-4.701803,-2.252136,2.395155,-4.659710,7.509034,-9.309676,2.080822,7.438683,-0.155200,-1.353598,2.096519,2.266624,-6.028508,3.637472,1.976618,3.966880,-5.850356,6.876321,9.625893,3.711360,-2.817260,-4.092374,4.979939,1.851262,5.207770,0.411894,-8.360480,-1.200604,-9.123967,-7.741695,4.768208,-9.657031,7.829774,8.191481,2.314305,2.155430,7.615771,8.834869,0.467047,-7.738613,-4.866829,-4.624934,1.087522,3.066881,-9.445520,0.481966,-5.572652,-6.290924,-6.680718,-1.460427,-4.923516,5.256448,6.719070,2.604241,2.426571,8.032073,7.186923,-6.960890,0.300639,2.809860,4.489174,8.711596,-8.810841,2.820566,-8.380763,-6.280943,-7.866306,-0.840265,-6.133425,-3.470173,8.077535,8.058041,1.892215,5.559265,-6.064619,3.283654,-3.092851,5.540135,-6.342377,0.616719,-0.293823,9.039826,3.498745,-4.818694,6.891137,-0.052369,-0.077057,-5.868859,9.777238,-6.288962,-6.091011,-4.391313,7.432443,5.309042,-5.718897,-7.964963,-9.307628,3.274827,5.200700,7.560762,5.517821,5.382021,8.975615,3.796149,-3.340516,-4.024224,9.041531,1.890836,-5.402125,-6.735630,2.313756,6.338605,8.117683,7.613641,-8.110682,1.793354,-4.946825,-6.040416,-8.306785,4.045751,4.850795,5.373353,-4.916657,6.201065,1.066157,4.433598,-8.622794,-5.067558,-2.769608,-3.199760,-7.333882,-2.234244,4.442215,7.597755,-2.129382,-7.459396,-0.718647,4.491068,-4.183490,-8.168912,-5.758588,-2.376273,-6.435859,-9.942611,-8.774701,-1.319219,1.502131,-4.365658,7.230591,-3.110734,-2.507471,9.472064,1.320919,2.267513,-9.172994,7.154353,4.683845,3.087368,9.404869,-1.015418,4.836899,-6.184427,7.105806,5.396007,-0.845861,7.854129,-0.187565,-3.521469,5.579411,1.986663,0.273449,-3.290714,-4.183878,-6.158980,-0.744872,9.219793,8.229838,-9.082386,-1.728668,1.145327,1.312411,5.697218,-0.907443,8.641570,6.114370,7.210640,-1.221741,-3.378124,6.821071,-5.726533,9.896042,3.848764,9.674362,-8.632242,6.223157,5.977076,-5.896935,-9.936703,-7.077718,-6.384454,-2.321358,-2.973628,0.366041,5.676438,3.103170,-6.061393,-0.546083,-9.250071,1.668039,4.520276,-2.672684,-3.298049,-3.740379,8.606037,-6.012676,-1.200150,4.670505,1.987988,9.923389,-2.270103,-8.775678,-8.297099,-5.994767,7.215479,6.737748,1.467727,8.795250,-1.565558,-8.533063,-1.255875,9.528091,-7.909976,8.216428,5.680449,-4.049740,5.743608,0.731342,5.846975,-7.576090,8.004082,-0.209816,-8.738747,-3.204175,4.875681,-4.909314,-2.570148,-0.963459,4.824661,-9.012830,7.623753,-2.844025,-5.760797,-9.828577,2.240710,-3.158379,-9.373418,5.127455,-0.475954,1.666345,5.828680,3.159985,9.577465,-7.870962,2.555373,4.800288,6.774341,2.495414,5.186717,-1.629681,4.567540,-1.907278,9.109370,-9.724558,5.672205,5.227154,3.251054,-7.077558,-9.563969,7.252523,-9.121974,-1.490646,-4.666801,3.514977,8.260263,6.871539,-1.565679,-4.341947,6.132224,0.233523,-9.497686,1.643501,8.676124,-4.521645,-8.558940,4.130926,4.071879,9.452002,4.891827,7.096859,-0.407535,4.236584,-6.645464,-0.969573,-3.791793,4.437171,-2.971764,2.851583,-2.177082,7.154396,1.248137,7.408534,3.682120,1.946523,3.560986,9.810289,0.672516,-0.595870,9.277375,3.850614,-3.502427,-2.958274,-9.514940,-4.008894,-1.214414,3.238454,-7.555059,-2.723096,7.534333,6.011827,-4.333417,-2.227524,9.069757,-6.446224,9.960096,8.055408,-4.211180,-3.626432,4.324843,9.128894,4.877272,3.638932,-2.357767,9.515460,7.285189,-5.420976,0.240502,4.187449,-2.348188,5.504337,-6.505762,6.788853,1.613044,9.601153,1.077694,-8.833528,0.612577,-3.835499,4.648806,-1.400018,-5.834659,-1.804592,3.511341,0.824943,1.303234,-7.672885,0.396655,-3.410365,2.553466,0.747967,0.882054,6.734436,5.715717,-8.946728,3.363742,-2.631213,4.280122,-3.338470,-7.908482,-8.209525,-2.000769,8.667931,7.600853,-3.282120,7.174632,9.624173,3.215895,-0.040348,-0.055436,1.319814,8.433747,-7.425518,4.091293,0.178722,-0.409303,6.562160,-0.616364,-0.328488,1.345443,9.649085,-8.643015,2.679868,8.258393,-9.765415,-0.207557,-8.077679,5.407914,-6.213130,4.330576,8.936304,-6.996766,-7.061708,3.157564,-3.784849,-9.914752,-5.223793,-1.398822,-9.600163,6.965550,6.604593,6.480359,5.458541,-0.168996,3.181913,9.064441,9.706224,1.262414,3.826803,-8.857332,7.140723,0.788010,0.897004,2.243451,3.604843,6.491256,-2.079330,-0.891206,4.933647,-7.693270,-3.031345,8.960031,0.046527,-6.145170,-7.952393,-9.049952,5.891357,7.939047,7.617980,-4.948683,4.843817,9.749928,-5.517304,0.303825,2.932990,-5.670547,6.687325,5.793687,9.108122,4.826770,8.276516], dtype = "float64")#candidate|6176|(864,)|const|float64
call_6173 = relay.TupleGetItem(func_4857_call(relay.reshape(var_6174.astype('float64'), [8, 1, 12]), relay.reshape(const_6175.astype('float32'), [504,]), relay.reshape(const_6176.astype('float64'), [864,]), ), 1)
call_6177 = relay.TupleGetItem(func_4861_call(relay.reshape(var_6174.astype('float64'), [8, 1, 12]), relay.reshape(const_6175.astype('float32'), [504,]), relay.reshape(const_6176.astype('float64'), [864,]), ), 1)
uop_6178 = relay.asin(uop_6145.astype('float64')) # shape=(1, 1, 14)
func_2269_call = mod.get_global_var('func_2269')
func_2272_call = mutated_mod.get_global_var('func_2272')
var_6183 = relay.var("var_6183", dtype = "float64", shape = (286,))#candidate|6183|(286,)|var|float64
call_6182 = func_2269_call(relay.reshape(var_6183.astype('float64'), [2, 11, 13]))
call_6184 = func_2269_call(relay.reshape(var_6183.astype('float64'), [2, 11, 13]))
func_1961_call = mod.get_global_var('func_1961')
func_1963_call = mutated_mod.get_global_var('func_1963')
call_6189 = relay.TupleGetItem(func_1961_call(relay.reshape(const_6176.astype('float64'), [8, 9, 12])), 1)
call_6190 = relay.TupleGetItem(func_1963_call(relay.reshape(const_6176.astype('float64'), [8, 9, 12])), 1)
uop_6194 = relay.sin(uop_6178.astype('float64')) # shape=(1, 1, 14)
bop_6199 = relay.bitwise_xor(uop_6194.astype('uint32'), var_6174.astype('uint32')) # shape=(1, 96, 14)
output = relay.Tuple([call_6173,const_6175,const_6176,call_6182,var_6183,call_6189,bop_6199,])
output2 = relay.Tuple([call_6177,const_6175,const_6176,call_6184,var_6183,call_6190,bop_6199,])
func_6204 = relay.Function([var_6144,var_6174,var_6183,], output)
mod['func_6204'] = func_6204
mod = relay.transform.InferType()(mod)
mutated_mod['func_6204'] = func_6204
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6204_call = mutated_mod.get_global_var('func_6204')
var_6206 = relay.var("var_6206", dtype = "float64", shape = (1, 1, 14))#candidate|6206|(1, 1, 14)|var|float64
var_6207 = relay.var("var_6207", dtype = "float64", shape = (96, 1))#candidate|6207|(96, 1)|var|float64
var_6208 = relay.var("var_6208", dtype = "float64", shape = (286,))#candidate|6208|(286,)|var|float64
call_6205 = func_6204_call(var_6206,var_6207,var_6208,)
output = call_6205
func_6209 = relay.Function([var_6206,var_6207,var_6208,], output)
mutated_mod['func_6209'] = func_6209
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7042 = relay.var("var_7042", dtype = "uint8", shape = ())#candidate|7042|()|var|uint8
var_7043 = relay.var("var_7043", dtype = "uint8", shape = (16, 6, 12))#candidate|7043|(16, 6, 12)|var|uint8
bop_7044 = relay.left_shift(var_7042.astype('uint8'), var_7043.astype('uint8')) # shape=(16, 6, 12)
func_1450_call = mod.get_global_var('func_1450')
func_1454_call = mutated_mod.get_global_var('func_1454')
const_7050 = relay.const([-1,-8,8,1,9,-8,4,-4,-2,2,7,-6,-3,1,3,2,1,-2,10,-2,1,-9,4,8,8,-3,-7,1,1,7,-10,-1,3,-1,7,9,-7,-5,-4,8,4,8,-8,3,-2,7,-1,2,10,-6,9,6,-4,9,-3,1,-6,-9,7,-6,-4,1,-9,-9,8,-7,1,-5,2,4,-8,-3,3,9,-5,10,-7,-5,4,7,-1,9,8,8,7,-7,10,-1,3,-4,-6,6,-3,-10,-6,9,1,-1,3,1,5,6,8,-8,-9,7,-5,9,-7,7,5,-1], dtype = "int64")#candidate|7050|(112,)|const|int64
call_7049 = func_1450_call(relay.reshape(const_7050.astype('int64'), [8, 2, 7]), relay.reshape(const_7050.astype('int64'), [8, 2, 7]), )
call_7051 = func_1450_call(relay.reshape(const_7050.astype('int64'), [8, 2, 7]), relay.reshape(const_7050.astype('int64'), [8, 2, 7]), )
output = relay.Tuple([bop_7044,call_7049,const_7050,])
output2 = relay.Tuple([bop_7044,call_7051,const_7050,])
func_7071 = relay.Function([var_7042,var_7043,], output)
mod['func_7071'] = func_7071
mod = relay.transform.InferType()(mod)
mutated_mod['func_7071'] = func_7071
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7071_call = mutated_mod.get_global_var('func_7071')
var_7073 = relay.var("var_7073", dtype = "uint8", shape = ())#candidate|7073|()|var|uint8
var_7074 = relay.var("var_7074", dtype = "uint8", shape = (16, 6, 12))#candidate|7074|(16, 6, 12)|var|uint8
call_7072 = func_7071_call(var_7073,var_7074,)
output = call_7072
func_7075 = relay.Function([var_7073,var_7074,], output)
mutated_mod['func_7075'] = func_7075
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7144 = relay.const(8.591851, dtype = "float64")#candidate|7144|()|const|float64
var_7145 = relay.var("var_7145", dtype = "float64", shape = (1, 3, 5))#candidate|7145|(1, 3, 5)|var|float64
bop_7146 = relay.power(const_7144.astype('float64'), var_7145.astype('float64')) # shape=(1, 3, 5)
bop_7161 = relay.less(var_7145.astype('bool'), relay.reshape(bop_7146.astype('bool'), relay.shape_of(var_7145))) # shape=(1, 3, 5)
func_167_call = mod.get_global_var('func_167')
func_169_call = mutated_mod.get_global_var('func_169')
var_7168 = relay.var("var_7168", dtype = "uint8", shape = (600,))#candidate|7168|(600,)|var|uint8
call_7167 = relay.TupleGetItem(func_167_call(relay.reshape(var_7168.astype('uint8'), [15, 4, 10])), 0)
call_7169 = relay.TupleGetItem(func_169_call(relay.reshape(var_7168.astype('uint8'), [15, 4, 10])), 0)
func_3598_call = mod.get_global_var('func_3598')
func_3601_call = mutated_mod.get_global_var('func_3601')
const_7189 = relay.const([[-5.020247],[9.248560],[8.516140],[-4.325458],[8.401658],[-0.771766],[-2.373811],[5.818048],[3.866017],[2.095965],[9.996804],[-2.604227],[8.753335],[-9.282088],[-2.205835],[-6.970478],[-4.710177],[5.246766],[5.405501],[9.304651],[9.916596],[-0.651251],[-2.510853],[-3.529631],[-9.435094],[-9.932743],[7.284957],[-4.948306],[-4.204866],[-5.821812],[-8.578040],[0.636082],[-3.562871],[5.796288],[2.920997],[-6.673676],[-3.965476],[-0.095541],[-9.080993],[-0.025885],[7.023358],[8.731533],[7.504858],[5.528475],[-8.198083],[-4.435333],[-3.614297],[6.466987],[9.670975],[-3.245529],[2.040337],[2.495600],[-1.979965],[-0.924671],[-6.532307],[2.814370],[3.917986],[-0.726563],[-5.265081],[-8.573491],[-1.676010],[-3.875030],[0.418018],[7.827294],[-6.596966],[6.838297],[6.115083],[8.861001],[-2.496135],[-9.388205],[-9.193307],[-0.841412],[-0.418563],[-7.737666],[-0.990381],[9.946128],[-1.910501],[-8.399397],[-8.249428],[-8.220052],[1.915121],[-6.672233],[-1.459729],[-2.499591],[-3.683455],[4.616691],[5.652936],[-6.218395],[1.663522],[-3.529067],[-4.728673],[-5.868044],[2.291053],[-8.456368],[-8.756358],[-5.073367],[-9.334394],[-2.494282],[-5.120117],[4.977055],[-4.162476],[4.997515],[3.663367],[4.825250],[4.508318],[-0.852761],[-4.366557],[-3.860259],[7.111753],[4.129998],[1.135075],[-5.232459],[-6.814062],[-9.458150],[1.625048],[2.672347],[-0.390047],[0.072549],[2.877950],[-7.772904],[6.412057],[-9.088911],[5.439505],[3.086613],[7.651854],[2.918188],[7.096626],[-6.261370],[-8.099813],[-0.522281],[-9.503103],[9.222324],[4.968727],[-9.757884],[-2.408755],[9.176433],[-5.775443],[8.010152],[-8.387801],[-1.483677],[0.793381],[-6.509240],[2.039456],[-2.779013],[7.095749],[-0.847400],[1.197327],[-2.423562],[-4.342696],[1.652929],[-0.673539],[-1.554728],[-0.616343],[-6.244847],[5.126343],[-5.689821],[-4.068807],[1.187402],[5.427024],[-5.756822],[-4.914268],[-1.049328],[-7.630337],[-7.131919],[-4.735533],[6.697637],[-5.333152],[5.725656],[5.702308],[0.376550],[-8.649570],[7.354289],[-4.903841],[2.944813],[0.270845],[-9.162511],[-3.388034],[9.108639],[-7.399762],[8.913290],[6.938388],[1.836041],[0.893837],[-1.813215],[-7.715026],[9.647705],[6.131039],[-8.119544],[2.332488],[9.325953],[3.295234],[-2.592874],[-9.267302],[-3.703302],[-8.278633],[0.617151],[8.128882],[0.237108],[4.296750],[1.826975],[-5.882774],[1.783461],[-6.824125],[8.540215],[9.147321],[-1.217315],[7.237758],[-2.816341],[-8.351810],[-3.461055],[-6.123316],[-7.832496],[-6.956566],[-6.536697],[5.883623],[8.085791],[-1.940174],[4.302425],[-0.771735],[-7.686905],[3.647652],[-8.691999],[-8.056373],[-6.765384],[-1.044434],[3.640606],[4.484609],[-7.767070],[7.745034],[2.220920],[-3.414807],[-0.389040],[2.759803],[2.480492],[2.711079],[3.383327],[-9.986591],[8.530161],[-8.934243],[7.680680],[-4.037961],[-9.199571],[-7.037754],[0.304998],[9.772132],[-1.958465],[6.233253],[8.940465],[-0.530896],[2.614665],[-1.919988],[-1.387747],[-7.351913],[5.703834],[-9.717191],[0.510929],[7.070096],[-0.835740],[-2.865009],[-4.354534],[-7.819650],[-5.274830],[3.193579],[1.816259],[-5.729501],[6.756003],[5.978445],[-2.231234],[0.780187],[9.605372],[-2.860708],[-4.838723],[-6.780916],[-9.419110],[-9.867975],[-8.597171],[4.476897],[9.825535],[-8.132049],[3.089755],[6.704882],[-5.340793],[-2.590048],[-4.898830],[-2.321762],[6.915938],[2.126322],[1.074394],[-7.570781],[-7.845382],[-1.357023],[-8.040288],[6.863091],[-2.295860],[-0.385976],[5.934226],[0.802779],[-5.380098],[-4.715721],[8.809394],[-4.757943],[8.897755],[6.131284],[5.277776],[-3.506090],[-7.361058],[4.559227],[2.283283],[-2.786472],[-1.505565],[3.998779],[-5.238133],[2.525048],[-9.356557],[-5.884518],[9.372164],[6.549207],[-4.200151],[8.039355],[-7.644059],[9.184276],[-2.781705],[6.599617],[-2.337676],[7.311414],[-9.364485],[-8.715466],[0.634754],[-5.885145],[9.770571],[-7.550608],[5.723231],[5.973686],[-8.141450],[-8.981391],[2.950575],[5.310288],[-9.431963],[8.288362],[6.020364],[5.339339],[7.626509],[-0.469015],[-6.308842],[-5.700227],[5.353540],[-0.127473],[-1.029205],[-0.794436],[-9.187846],[-9.756376],[3.107083],[6.705102],[-3.932509],[-8.455869],[9.220317],[-0.951763],[8.541063],[-5.551362],[0.175011],[3.372257],[6.790752],[6.826624],[2.530724],[-9.117851],[-1.725517],[5.703871],[-6.133758],[4.455090],[6.421497],[-7.749574],[-9.888602],[4.530955],[-1.074356],[9.788567],[4.129846],[-9.601860],[-6.539957],[-9.274701],[-0.509795],[9.918659],[3.687246],[-2.981782],[8.487195],[4.065307],[5.827463],[4.212389],[-7.174529],[4.703089],[-0.761910],[-5.744671],[1.538448],[-2.220688],[-9.860371],[5.500720],[7.494482],[-5.211737],[-9.475000],[2.567265],[-8.612365],[-3.686520],[-8.393042],[3.766137],[3.735509],[6.410227],[5.606741],[1.056706],[3.985091],[-4.859135],[-0.619385],[-9.727368],[-1.884787],[2.452277],[1.687386],[-3.475110],[5.846686],[8.417794],[2.972287],[-2.352167],[2.974220],[-4.829327],[2.658900],[3.971409],[-8.797701],[-1.565729],[2.310642],[-4.241146],[4.877564],[-0.498636],[-7.900475],[2.993465],[-0.486930],[-9.756469],[8.734094],[-5.752507],[-4.101386],[-7.902345],[-6.733159],[-4.639280],[0.740872],[9.637191],[7.133841],[2.604447],[3.754634],[8.901560],[-2.622288],[8.359429],[8.706460],[-8.649842],[-4.728788],[9.471186],[-2.638656],[-8.136358],[1.374746],[0.772798],[-9.817833],[-9.168091],[-4.638508],[-6.587381],[6.171573],[-2.902582],[-5.229017],[-2.604208],[1.515457],[4.859264],[6.838478],[-8.947929],[-5.713548],[-7.164719],[-2.352813],[-0.773133],[0.464099],[-0.658631],[-6.917741],[9.448499],[2.968613],[-2.641844],[-5.130743],[5.456494],[4.497186],[9.984846],[-3.841405],[-1.551682],[5.184573],[-2.451666],[-7.140102],[-0.156266],[2.239256],[-0.343349],[2.253484],[-1.119941],[6.855140],[1.549198],[2.468794],[7.068543],[0.368495],[-6.445352],[-5.541450],[-5.077713],[3.486341],[0.173987],[4.946447],[3.902464],[3.998381]], dtype = "float32")#candidate|7189|(504, 1)|const|float32
call_7188 = func_3598_call(relay.reshape(const_7189.astype('float32'), [8, 7, 9]))
call_7190 = func_3598_call(relay.reshape(const_7189.astype('float32'), [8, 7, 9]))
output = relay.Tuple([bop_7161,call_7167,var_7168,call_7188,const_7189,])
output2 = relay.Tuple([bop_7161,call_7169,var_7168,call_7190,const_7189,])
func_7194 = relay.Function([var_7145,var_7168,], output)
mod['func_7194'] = func_7194
mod = relay.transform.InferType()(mod)
mutated_mod['func_7194'] = func_7194
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7194_call = mutated_mod.get_global_var('func_7194')
var_7196 = relay.var("var_7196", dtype = "float64", shape = (1, 3, 5))#candidate|7196|(1, 3, 5)|var|float64
var_7197 = relay.var("var_7197", dtype = "uint8", shape = (600,))#candidate|7197|(600,)|var|uint8
call_7195 = func_7194_call(var_7196,var_7197,)
output = call_7195
func_7198 = relay.Function([var_7196,var_7197,], output)
mutated_mod['func_7198'] = func_7198
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7366 = relay.var("var_7366", dtype = "bool", shape = ())#candidate|7366|()|var|bool
var_7367 = relay.var("var_7367", dtype = "bool", shape = (9, 11, 14))#candidate|7367|(9, 11, 14)|var|bool
bop_7368 = relay.logical_or(var_7366.astype('bool'), var_7367.astype('bool')) # shape=(9, 11, 14)
output = relay.Tuple([bop_7368,])
output2 = relay.Tuple([bop_7368,])
func_7372 = relay.Function([var_7366,var_7367,], output)
mod['func_7372'] = func_7372
mod = relay.transform.InferType()(mod)
var_7373 = relay.var("var_7373", dtype = "bool", shape = ())#candidate|7373|()|var|bool
var_7374 = relay.var("var_7374", dtype = "bool", shape = (9, 11, 14))#candidate|7374|(9, 11, 14)|var|bool
output = func_7372(var_7373,var_7374,)
func_7375 = relay.Function([var_7373,var_7374,], output)
mutated_mod['func_7375'] = func_7375
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7736 = relay.var("var_7736", dtype = "float32", shape = (7, 2, 5))#candidate|7736|(7, 2, 5)|var|float32
uop_7737 = relay.sigmoid(var_7736.astype('float32')) # shape=(7, 2, 5)
output = uop_7737
output2 = uop_7737
func_7739 = relay.Function([var_7736,], output)
mod['func_7739'] = func_7739
mod = relay.transform.InferType()(mod)
var_7740 = relay.var("var_7740", dtype = "float32", shape = (7, 2, 5))#candidate|7740|(7, 2, 5)|var|float32
output = func_7739(var_7740)
func_7741 = relay.Function([var_7740], output)
mutated_mod['func_7741'] = func_7741
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8151 = relay.var("var_8151", dtype = "float64", shape = (4, 1, 6))#candidate|8151|(4, 1, 6)|var|float64
uop_8152 = relay.log(var_8151.astype('float64')) # shape=(4, 1, 6)
output = relay.Tuple([uop_8152,])
output2 = relay.Tuple([uop_8152,])
func_8160 = relay.Function([var_8151,], output)
mod['func_8160'] = func_8160
mod = relay.transform.InferType()(mod)
var_8161 = relay.var("var_8161", dtype = "float64", shape = (4, 1, 6))#candidate|8161|(4, 1, 6)|var|float64
output = func_8160(var_8161)
func_8162 = relay.Function([var_8161], output)
mutated_mod['func_8162'] = func_8162
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8342 = relay.var("var_8342", dtype = "float32", shape = (16, 10, 11))#candidate|8342|(16, 10, 11)|var|float32
uop_8343 = relay.sigmoid(var_8342.astype('float32')) # shape=(16, 10, 11)
uop_8349 = relay.log(uop_8343.astype('float32')) # shape=(16, 10, 11)
func_5215_call = mod.get_global_var('func_5215')
func_5218_call = mutated_mod.get_global_var('func_5218')
const_8352 = relay.const([2,-7,-3,-5,8,-6,-9,-5,6,2,-6,5,-7,-8,7,-2,-9,8,-9,-9,-10,7,3,6,-3,3,9,-7,6,-7,3,3,-8,4,-5,4,5,5,-5,-9,1,-8,-1,-9,10,-9,-7,3,-5,-5,-9,8,-10,1,-5,-6,4,7,8,-10,5,-9,4,-10,-10,-1,-3,2,1,-1,-6,3,8,3,9,4,7,-6,9,1,-2,10,-9,-9,8,7,6,1,-1,1,2,-3,1,9,7,1,10,5,6,2,-3,-5,10,-2,-2,10,-10,-2,-2,3,9,-9,7,-10,7,6,-8,8,9,-8,4,-7,-1,-7,10,-4,-8,-7,6,-10,7,4,7,5,5,6,-3,6,-2,9,-5,-10,-6,7,-4,5,-1,1,3,5,-1,-7,-6,8,-6,-9,-2,3,5,9,7,5,5,7,1,-5,-2,7,-5,-5,6,1,2,3,4,-1,6,-10,-1,8,-8,6,-5,-10,-2,1,-1,-3,8,2,-7,-4,8,-5,-10,3,-8,-10,4,3,-8,-1,9,-2,9,9,-9,-1,7,-8,-1,-5,-1,-1,-8,10,-1,5,-6,-4,-2,-3,6,-2,1,9,2,-10,10,10,10,-4,-3,-8,5,-6,-7,-10,4,-5,1,-7,-8,7,-10,8,7,8,8,-8,2,-1,-4,1,2,-3,9,-7,-6,-7,-9,4,-6,5,2,8,-1,10,-10,5,8,7,7,6,-8,10,7,-5,-10,-6,8,-6,-3,-4,9,6,-9,-7,-9,-2,6,-8,9,6,6,2,6,-2,-6,1,-8,-5,2,-3,-4,1,8,3,-3,-7,-10,2,6,-4,-10,10,-4,5,6,10,-5,-10,-8,-10,-3,-1,-5,9,-9,-6,8,9,2,9,-1,9,-7,9,-3,10,6,-9,6,-4,10,8,-7,-9,10,-8,6,1,6,3,-10,7,4,-9,-5,9,-5,5,-5,-3,-4,-10,-8,-6,-10,6,-3,8,-3,10,-9,5,-8,-8,-5,-8,1,9,-8,4,5,-7,-4,-6,1,-5,6,6,10,-7,-4,2,-4,3,-10,-1,6,3,-3,7,8,-6,-3,10,-6,-6,3,-6,-3,-2,-7,-7,-9,4,-3,7,4,6,8,3,-3,6,9,7,-10,-4,-10,-1,3,-4,-8,-8,6,2,-9,10,3,2,-8,5,-7,-5,2,-7,-1,3,-4,2,6,6,8,-1,-1,-5,1,-7,1,-7,-9,-9,-7,-10,5,3,-7,-9,6,-7,3,6,-2,-4,6,-5,8,-5], dtype = "int32")#candidate|8352|(480,)|const|int32
call_8351 = func_5215_call(relay.reshape(const_8352.astype('int32'), [3, 10, 16]), relay.reshape(const_8352.astype('int32'), [3, 10, 16]), )
call_8353 = func_5215_call(relay.reshape(const_8352.astype('int32'), [3, 10, 16]), relay.reshape(const_8352.astype('int32'), [3, 10, 16]), )
output = relay.Tuple([uop_8349,call_8351,const_8352,])
output2 = relay.Tuple([uop_8349,call_8353,const_8352,])
func_8355 = relay.Function([var_8342,], output)
mod['func_8355'] = func_8355
mod = relay.transform.InferType()(mod)
mutated_mod['func_8355'] = func_8355
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8356 = relay.var("var_8356", dtype = "float32", shape = (16, 10, 11))#candidate|8356|(16, 10, 11)|var|float32
func_8355_call = mutated_mod.get_global_var('func_8355')
call_8357 = func_8355_call(var_8356)
output = call_8357
func_8358 = relay.Function([var_8356], output)
mutated_mod['func_8358'] = func_8358
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8468 = relay.var("var_8468", dtype = "float32", shape = (4, 9, 13))#candidate|8468|(4, 9, 13)|var|float32
uop_8469 = relay.rsqrt(var_8468.astype('float32')) # shape=(4, 9, 13)
output = uop_8469
output2 = uop_8469
func_8475 = relay.Function([var_8468,], output)
mod['func_8475'] = func_8475
mod = relay.transform.InferType()(mod)
var_8476 = relay.var("var_8476", dtype = "float32", shape = (4, 9, 13))#candidate|8476|(4, 9, 13)|var|float32
output = func_8475(var_8476)
func_8477 = relay.Function([var_8476], output)
mutated_mod['func_8477'] = func_8477
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8554 = relay.const([[[3,8,-7,-6],[-3,-6,10,-10],[9,9,7,5],[-3,7,-10,-2],[4,-10,10,7],[-7,-10,6,-2],[-3,4,-6,6],[-6,3,-1,-2],[6,-7,7,2],[8,3,-1,10],[-9,-6,1,-2],[6,-6,4,-5],[9,-7,-7,-4],[-2,-10,3,8]],[[2,7,-7,-4],[-6,-3,8,1],[9,8,8,10],[9,4,2,4],[-8,-9,1,2],[-4,10,-1,3],[-10,6,3,9],[-10,3,-6,5],[-7,-3,-2,8],[9,9,-8,10],[5,9,5,-7],[-2,6,7,-4],[-8,7,-1,7],[2,10,10,9]],[[9,1,-5,-7],[-1,4,4,6],[-6,-3,5,-7],[-8,6,-8,-3],[-2,-8,-5,3],[10,5,7,8],[-4,10,-5,-8],[-3,-10,1,7],[10,-10,2,10],[-3,6,8,-3],[8,-4,10,5],[8,4,9,-3],[-9,-3,-8,-3],[-9,1,4,2]],[[5,5,7,9],[-5,5,6,-2],[-2,-4,-7,-1],[5,-6,4,-2],[-5,6,-9,7],[10,10,9,9],[-7,10,-9,2],[3,-4,9,9],[7,4,-10,1],[-3,4,-5,3],[-7,7,6,-1],[-9,-7,2,-2],[3,6,9,3],[-10,-5,-3,6]],[[1,-3,3,7],[10,-2,-2,-1],[2,-8,7,-4],[2,10,8,-3],[-7,8,-2,-4],[1,-5,2,-9],[5,5,3,-7],[-9,-10,4,7],[-4,3,-4,-8],[-5,-1,1,1],[-9,8,-8,-7],[-3,-5,4,8],[1,-4,8,-9],[5,10,-9,-1]],[[-9,-10,-3,3],[8,1,-4,-8],[10,-9,3,5],[-9,3,-8,-6],[-1,-4,-7,-10],[-7,-7,-2,7],[6,-4,3,9],[4,1,4,9],[-6,-2,9,8],[-3,-10,-9,-8],[-10,-5,10,6],[6,6,-7,-7],[-5,5,-1,4],[9,10,9,-4]],[[10,4,5,-4],[9,1,2,-8],[9,4,10,5],[-10,-9,2,-9],[-5,4,7,1],[7,-4,1,9],[7,1,9,-7],[10,-9,-1,7],[-3,8,-1,8],[10,-9,3,-3],[9,-8,-2,1],[-10,6,-1,9],[-8,-6,5,-4],[-5,8,-1,6]],[[6,2,8,-10],[4,-2,-3,-6],[8,-7,-5,10],[8,-8,10,10],[-10,6,6,8],[3,2,3,-8],[-2,-5,-10,1],[-4,6,4,10],[8,2,1,3],[-10,-4,7,-7],[9,-7,9,-4],[6,-7,-5,2],[2,-9,-4,10],[1,10,-8,-6]],[[10,-5,-1,2],[-8,-8,5,-8],[6,3,-4,-5],[-9,-1,-3,-3],[10,2,6,9],[-2,-8,-8,7],[6,5,4,-2],[-8,-1,10,2],[1,-9,7,-2],[-8,-7,7,-2],[3,-2,1,2],[-9,-8,7,6],[5,7,-7,10],[-7,2,10,-8]],[[3,-2,6,-4],[8,-1,-4,-3],[4,1,-6,5],[-10,9,2,5],[-9,-10,2,9],[7,-5,9,-10],[-7,-4,-1,-10],[7,1,9,5],[-6,3,8,-7],[4,-6,1,3],[6,-3,-6,10],[-4,-1,8,1],[10,1,7,-2],[4,-3,-3,-5]],[[4,10,2,-3],[10,7,1,-3],[3,-10,-5,-3],[-2,4,-3,-6],[6,8,5,-2],[7,-4,-9,-1],[4,7,6,6],[6,-5,8,7],[7,-10,7,9],[3,-4,2,-9],[9,-6,5,2],[2,10,1,4],[1,2,7,-3],[5,-5,7,5]],[[-9,2,3,-3],[3,4,1,2],[3,-1,5,1],[3,9,1,7],[-5,1,-3,2],[8,-10,4,-2],[-5,-7,8,2],[-5,1,-5,3],[-7,7,-9,-8],[4,5,-1,7],[9,-10,-2,-8],[3,1,10,-9],[8,-9,-4,-3],[6,-8,-4,-6]],[[-7,-10,7,5],[9,-10,-4,6],[-7,-9,3,-1],[2,7,-4,-1],[-9,1,-10,8],[6,8,8,-2],[-10,-8,-4,5],[8,-6,-7,7],[-7,-4,7,-8],[-9,-3,-2,-4],[7,-7,-10,-1],[-4,-5,1,7],[-10,-8,-2,-2],[-1,-9,-1,7]]], dtype = "uint16")#candidate|8554|(13, 14, 4)|const|uint16
var_8555 = relay.var("var_8555", dtype = "uint16", shape = (13, 14, 4))#candidate|8555|(13, 14, 4)|var|uint16
bop_8556 = relay.bitwise_or(const_8554.astype('uint16'), relay.reshape(var_8555.astype('uint16'), relay.shape_of(const_8554))) # shape=(13, 14, 4)
func_1402_call = mod.get_global_var('func_1402')
func_1405_call = mutated_mod.get_global_var('func_1405')
const_8560 = relay.const(10, dtype = "uint32")#candidate|8560|()|const|uint32
call_8559 = func_1402_call(relay.reshape(const_8560.astype('uint32'), []))
call_8561 = func_1402_call(relay.reshape(const_8560.astype('uint32'), []))
output = relay.Tuple([bop_8556,call_8559,const_8560,])
output2 = relay.Tuple([bop_8556,call_8561,const_8560,])
func_8574 = relay.Function([var_8555,], output)
mod['func_8574'] = func_8574
mod = relay.transform.InferType()(mod)
var_8575 = relay.var("var_8575", dtype = "uint16", shape = (13, 14, 4))#candidate|8575|(13, 14, 4)|var|uint16
output = func_8574(var_8575)
func_8576 = relay.Function([var_8575], output)
mutated_mod['func_8576'] = func_8576
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8607 = relay.const([[[-7.166039,-3.164645,-5.375019],[-9.762545,-1.402668,5.164692],[-2.761953,-6.447620,-3.046035]],[[7.351129,-9.445860,-9.009451],[-8.488355,3.515356,3.016204],[4.930847,-7.994399,-2.307026]],[[-1.253870,5.351168,4.343800],[-1.665679,0.777149,0.297606],[-5.298234,-1.421541,-2.732413]],[[-9.688385,6.157001,-4.887257],[-1.360842,-3.244282,2.938460],[5.763462,9.066239,-0.990344]],[[3.363834,4.018047,-4.815574],[7.972323,7.475528,2.400776],[-0.101551,-7.651730,-9.667765]],[[7.834422,-2.833741,4.352081],[-5.436700,0.277260,-8.626557],[-8.751359,-4.937290,-3.331511]],[[-2.684042,6.886077,-5.986227],[0.111847,-5.279600,-1.707096],[-0.539570,7.567427,3.756380]],[[-3.327479,-4.872822,-8.856342],[-9.475961,-7.882524,-1.447382],[8.271116,-9.250587,-8.995583]]], dtype = "float32")#candidate|8607|(8, 3, 3)|const|float32
uop_8608 = relay.rsqrt(const_8607.astype('float32')) # shape=(8, 3, 3)
output = relay.Tuple([uop_8608,])
output2 = relay.Tuple([uop_8608,])
func_8639 = relay.Function([], output)
mod['func_8639'] = func_8639
mod = relay.transform.InferType()(mod)
output = func_8639()
func_8640 = relay.Function([], output)
mutated_mod['func_8640'] = func_8640
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8639_call = mod.get_global_var('func_8639')
func_8640_call = mutated_mod.get_global_var('func_8640')
call_8665 = relay.TupleGetItem(func_8639_call(), 0)
call_8666 = relay.TupleGetItem(func_8640_call(), 0)
uop_8669 = relay.tan(call_8665.astype('float32')) # shape=(8, 3, 3)
uop_8671 = relay.tan(call_8666.astype('float32')) # shape=(8, 3, 3)
output = uop_8669
output2 = uop_8671
func_8681 = relay.Function([], output)
mod['func_8681'] = func_8681
mod = relay.transform.InferType()(mod)
mutated_mod['func_8681'] = func_8681
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8681_call = mutated_mod.get_global_var('func_8681')
call_8682 = func_8681_call()
output = call_8682
func_8683 = relay.Function([], output)
mutated_mod['func_8683'] = func_8683
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8681_call = mod.get_global_var('func_8681')
func_8683_call = mutated_mod.get_global_var('func_8683')
call_8704 = func_8681_call()
call_8705 = func_8681_call()
const_8711 = relay.const([[[3.113077,1.112404,-9.230398],[3.762213,-5.357260,1.585459],[5.134689,3.797349,6.794682]],[[-9.680454,7.975471,-4.301370],[3.694614,-7.905188,-2.161808],[-2.217489,-3.443507,-1.700106]],[[4.902468,1.925560,7.605857],[5.686764,8.560038,-8.823048],[-0.981199,9.815403,-2.490490]],[[-7.321933,7.541474,-2.221168],[-1.111541,3.604877,-4.118744],[2.514597,6.250672,-1.942381]],[[-7.310463,-4.132677,-8.327562],[-1.784843,5.398372,2.090768],[1.502113,7.392634,-2.605305]],[[-6.663366,-7.980611,6.476589],[9.604137,-9.501247,6.030674],[-4.164499,-5.023707,-0.789696]],[[0.775834,-6.098148,-3.445994],[1.409621,0.809594,2.544713],[-3.810557,-4.495914,2.609705]],[[4.143173,7.903669,-3.346337],[-8.614408,-4.475771,7.626221],[-7.472754,9.277077,5.310321]]], dtype = "float32")#candidate|8711|(8, 3, 3)|const|float32
bop_8712 = relay.floor_mod(call_8704.astype('float64'), relay.reshape(const_8711.astype('float64'), relay.shape_of(call_8704))) # shape=(8, 3, 3)
bop_8715 = relay.floor_mod(call_8705.astype('float64'), relay.reshape(const_8711.astype('float64'), relay.shape_of(call_8705))) # shape=(8, 3, 3)
output = relay.Tuple([bop_8712,])
output2 = relay.Tuple([bop_8715,])
func_8717 = relay.Function([], output)
mod['func_8717'] = func_8717
mod = relay.transform.InferType()(mod)
output = func_8717()
func_8718 = relay.Function([], output)
mutated_mod['func_8718'] = func_8718
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8639_call = mod.get_global_var('func_8639')
func_8640_call = mutated_mod.get_global_var('func_8640')
call_8904 = relay.TupleGetItem(func_8639_call(), 0)
call_8905 = relay.TupleGetItem(func_8640_call(), 0)
func_8160_call = mod.get_global_var('func_8160')
func_8162_call = mutated_mod.get_global_var('func_8162')
const_8909 = relay.const([0.222311,6.777425,-7.445636,-3.519452,-7.300768,-3.645657,-7.521516,6.063852,9.685596,-5.546123,-4.786000,2.378415,0.033815,9.525282,-8.219759,8.815557,7.387837,2.318578,1.086088,3.160237,3.753038,-7.882444,-9.199810,-8.979431], dtype = "float64")#candidate|8909|(24,)|const|float64
call_8908 = relay.TupleGetItem(func_8160_call(relay.reshape(const_8909.astype('float64'), [4, 1, 6])), 0)
call_8910 = relay.TupleGetItem(func_8162_call(relay.reshape(const_8909.astype('float64'), [4, 1, 6])), 0)
func_2922_call = mod.get_global_var('func_2922')
func_2924_call = mutated_mod.get_global_var('func_2924')
const_8912 = relay.const([5.738773,4.448749,8.054331,5.801399,1.160072,-4.947935,-0.470708,1.649262,6.643746,3.718467,8.588012,0.654431,-5.097555,-2.473505,9.868699,-3.530736,-1.906279,0.587342,2.644498,-3.730905,2.527883,0.401258,-0.472534,-4.809699,-8.594408,0.666087,2.670828,-5.077970,-4.903830,-5.926659,-7.263609,4.317409,-5.095171,6.899325,6.713833,4.501549,-7.131870,5.039774,7.109223,4.855460,2.471852,0.553927,4.094993,7.775937,-0.222873,-5.243809,-9.948028,5.971903,-9.709401,-6.536047,-5.435765,-6.939679,-7.064652,7.222589,5.595628,3.631114,-0.555824,-6.268166,5.708704,1.941882,9.017589,-6.526527,2.194526,-2.093797,-7.120974,-5.560855,-7.142426,-0.944335,-3.777448,-4.690641,-2.337785,-1.101354,-1.959178,-1.533947,-7.506692,0.893782,0.818511,-3.332331,5.848740,-4.717642,0.330571,-6.160214,-9.283872,9.766307,3.270912,-8.371210,2.555883,-9.984301,8.187891,1.502088,-2.930482,9.192905,4.689980,4.719197,4.472399,-6.958551,-8.921991,-8.937059,2.956180,8.243452,-2.352447,-6.998270,-0.679744,9.060557,-3.578462,-6.508830,-3.865444,-0.566721,6.033251,-6.054825,-4.516978,3.352213,-0.605704,1.867947,9.844688,-0.041120,-9.803298,-0.294967,4.512975,3.633077,-5.134676,-0.860611,0.013251,-9.747221,-7.844529,8.158740,-7.536727,0.652190,4.075232,-2.080963,8.945871,-4.699330,-1.251594,1.134116,-6.774560,2.051999,-9.449547,8.094488,-2.336451,-2.618839,5.302232,3.806363,-2.798604,-7.823132,7.087672,1.904922,3.598749,7.816263,-1.649334,9.120175,4.222037,9.820522,-9.503094,2.084120,8.332459,-5.122673,-2.009226,-1.350612,-2.858414,-2.030483,4.172694,9.346570,1.712801,-3.182484,1.859303,-3.684789,-2.388657,-1.458159,6.472111,-4.316547,5.333947,9.836898,-6.360346,-5.137681,-2.503357,9.198591,-7.451268,-4.900809,0.390685,1.769160,-5.387785,7.583639,-4.361228,4.312244,1.698669,-3.377154,-7.113294,-4.324500,9.137106,-1.425359,5.856581,0.306727,-9.923531,1.389069,5.501630,-6.195957,4.193842,-5.517296,9.726175,6.153220,2.872919,3.822391,1.851663,6.466285,-5.805346,-7.312311,6.679067,-8.308043,4.626753,5.120777,-6.781770,-3.123232,2.405228,1.694960,-2.956523,9.007892,-9.121067,-2.928100,6.365643,-7.137848,4.704314,0.270757,9.730304,-0.608779,-0.767572,8.532215,9.448437,-9.103929,-7.340889,2.541771,-3.020104,0.932968,1.809075,-4.795095,1.372877,-4.837869,4.457188,3.119482,4.911770,1.028584,4.206304,2.307219,-4.010560,8.656279,7.169205,7.992895,6.833615,0.212113,-0.933410,2.455423,-6.383655,-1.128018,-3.600363,-5.976120,3.290584,6.696040,-1.324105,4.682334,-3.060921,-6.695826,8.084908,7.181490,-7.676953,3.342777,-0.738131,-0.208782,1.333427,-3.098333,-0.378634,4.238314,-4.509293,-8.830458,0.964053,5.707097,-6.132097,-1.474202,5.194811,-8.284859,-3.674146,7.372841,3.690223,2.095319,-7.577496,-1.313897,4.750380,5.857534,-9.713016,-9.290852,7.537977,1.649743,0.564942,-4.980159,8.789804,-7.817784,-9.342580,-0.269981,3.323677,-0.968701,6.409778,-1.294499,4.106585,-3.285014,4.890362,7.111095,-7.227876,-1.235759,-8.327136,-4.264260,-0.405591,8.581701,-2.974093,-4.102530,-9.443679,-5.658647,8.936958,-2.814912,-9.534023,-7.016365,5.187819,-9.508600,-2.658337,-5.974027,7.543005,-2.580841,4.447025,0.944006,8.899074,-8.240726,-0.024897,1.466315,8.607178,-3.052121,-3.801725,-8.323063,0.520299,8.233114,8.791028,-3.102905,-7.974422,-4.205118,9.528130,-5.936922,4.745413,-0.671672,3.934377,1.959057,7.620237,-2.685187,-2.818478,6.141288,7.680105,8.133785,-2.787805,-0.319366,-2.010352,0.248396,-9.922899,-8.063999,-4.235299,9.079284,-6.564975,-8.860372,9.492321,1.722677,9.536336,5.678149,5.453224,-6.404020,-8.284588,7.506184,7.419370,-7.030120,-9.565899,-4.004972,8.759250,-6.168724,-4.373484,9.811731,0.258569,-9.537643,-1.332240,9.211921,-9.688412,8.616840,-2.839965,-8.568064,0.296673,7.563534,2.468985,-5.249501,-3.162391,5.097765,-7.827282,-5.609495,8.607763,-5.084882,-5.483969,-6.368902,6.660149,5.069205,-2.281102,-5.541814,2.713868,3.784111,2.317871,7.845136,-7.039627,-6.568716,-6.571052,-6.352356,7.444365,0.615068,-9.336189,8.948099,6.352052,-1.799520,-5.770950,-2.332471,-0.776778,-6.045109,5.792495,9.564056,-9.344044,-6.285340,-9.749494,6.198605,-4.608284,1.703995,-9.085606,-0.468786,-5.077627,5.814636,1.248426,-4.271228,9.490170,1.435832,-1.155505,-8.807455,9.987159,2.365026,3.030070,6.160216,0.319924,-5.981828,0.439320,-3.789115,4.221139,-6.581041,0.156458,5.269382,-8.274435,9.842370,0.100551,3.803810,2.970870,6.823634,4.877223,-1.594951,5.828031,-0.831431,0.006257,-1.396484,-1.980757,-1.979588,9.670058,-4.749472,-3.922822,3.614112,0.024886,-0.904576,0.750978,0.228057,0.010050,-6.850043,1.531819,8.043302,3.381712,1.783110,7.968780,7.945512,2.686252,-6.085367,3.467812,-8.169844,-7.686470,8.333455,-3.320435,3.321497,-1.765537,-9.615490,-4.761026,3.704002,-1.160258,-0.288816,-0.527243,-0.531199,5.137659,7.158672,-4.963325,-4.268966,2.239170,3.196751,-6.250599,6.958737,-8.718500,-4.081403,8.911362,-4.909904,3.168320,4.279622,-8.642929,5.416590,-2.732132,-1.273444,-8.011579,-4.099007,9.937287,8.542070,-3.850903,-7.605311,1.683359,9.612303,-8.502915,-0.271419,-6.671927,2.945049,1.449731,5.291286,-4.884338,6.496975,-2.338184,-5.055632,8.976369,6.412614,-8.745237,-0.573705,5.546775,-1.698573,7.973948,8.716186,0.301546,-9.057531,4.527622,-5.366328,0.828333,8.776167,3.769075,8.039953,8.737668,-5.558501,8.506492,2.905454,8.635958,-1.943240,-1.083766,-1.823453,8.836735,0.838261,-6.512836,-8.579421,2.118145,1.113235,3.028263,2.950154,-2.775336,-6.787596,-3.895304,-1.438301,7.465605,-4.398592,-0.373998,2.429985,9.497304,-3.647448,2.858193,8.649653,-7.129527,9.730231,-5.474126,2.854257,1.787895,-0.309784,2.990393,1.606059,4.953286,9.959239,-4.680454,9.932433,8.195338,-5.167788,-5.004396,9.981583,-2.574041,-8.511191,8.323237,9.458799,0.146676,-2.913034,-3.674211,-7.545421,4.879809,9.857173,-1.584447,5.181920,9.839673,-3.408022,8.320836,-8.842621,0.456568,-1.954648,-1.946214,9.282574,2.335420,5.381539,3.951910,-6.659053,8.366330,-0.175058,-4.662241,0.172183,4.817345,-5.166632,0.505446,6.440058,6.805961,2.186871,9.281901,-6.351548,-8.655151,5.811556,6.637267,-6.744767,1.801341,-4.242202,-8.617278,3.900010,-4.830820,-8.119428,7.255508,-1.487801,-7.799913,-2.760981,-6.878649,-3.064501,-6.230367,-4.252095,7.935058,-1.410111,0.123824,3.416465,-0.089105,-7.216946,-0.570468,-8.746883,-5.528370,-7.653598,-4.016424,-3.429359,1.384262,6.435917,-4.165855,0.462794,-0.171135,6.032181,0.593917,0.529307,0.722010,-7.571884,1.626980,9.850799,7.634769,-9.084536,2.352209,-0.707129,7.053817,-0.263416,3.714065,-3.237203,-5.829080,3.493317,-5.397472,2.158631,-2.238746,7.939122,0.148019,9.809799,-5.435096,-7.567677,2.585955,6.051163,3.605189,-9.049014,3.781585,-6.675412,-0.378260,1.107139,9.219124,0.912568,-0.273341,8.639266,3.038138,-3.393989,-8.906406,3.407943,5.137611,-7.600518,2.935684,2.048837,3.764587,-4.245114,-7.841689,-3.643830,-4.672414,5.347575,-3.932708,-8.789277,-5.065312,-8.441656,-3.638883,-8.997343,-7.788031,-7.101881,8.119174,-3.729881,5.194918,2.651368,0.281616,6.166719,1.335080,-8.221458,0.006184,0.780544,-2.985010,-5.568620,-7.232961,-1.021031,-3.377066,-5.790423,9.623098,-7.825548,1.527085,-1.271034,-9.559959,-0.256424,-0.838541,4.164999,-7.639242,1.741252,-0.122428,4.735891,-8.514544,4.476742,-0.882615,8.935662,0.481801,-9.395818,4.771771,8.787779,7.039723,7.264226,-9.753688,0.051215,3.254422,5.056024,9.773754,-7.891844,1.988156,-9.942442,2.776028,5.900904,2.247852,6.855748,-2.032968,-2.057762,9.169238,5.728399,6.322988,-0.734914,-5.883007,-5.069831,-4.871144,6.120016,1.504201,0.879275,0.340909,3.008823,-3.903996,6.157140,8.548718,-0.738695,0.390182,-1.386680,7.231244,-6.772322,6.973410,6.508238,0.617245,7.244237,-5.684023,-3.291534,0.092660,-0.764848,-2.656968,-6.824600,-1.632585,-3.568351,-1.444855,-6.928874,3.313267,2.956910,4.792600,-3.050819,-4.683161,0.127386,-0.509442,-3.376282,1.824439,-7.324051,8.621914,4.936685,4.639353,4.067302,1.007899,0.695011,-0.352510,4.726431,8.984282,7.604366,4.399636,-5.350023,-1.659935,0.267658,-6.314197,6.099255,-2.294763,2.258851,1.670379,6.508093,-6.226100,2.519496,-0.528303,-3.269845,5.871178,1.722855,5.401102,-4.118473,-5.065434,5.593695,4.226000,-5.585166,-1.971117,-4.477674,2.177251,-1.220126,-1.552639,-2.963175,-0.066066,2.113994,-2.761935,-8.594740,-5.707291,1.715901,-8.496117,4.581885,-8.764966,7.021912,5.908453,-5.169931,4.837402,-3.964124,-1.659285,-0.647206,-0.531035,-5.517101,-7.303616,-4.686311,-1.412361,-6.102002,-3.438140,-5.298215,8.315983,1.476995,6.528866,7.954991,-4.068780,9.341770,7.474389,1.118516,8.781110,-9.758326,-7.668921,-0.282210,1.549222,8.172328,6.922693,-3.109010,8.830547,8.495419,3.360147,-1.771353,8.857748,-0.588039,0.907721,-4.510488,-6.321644,7.442252,2.335566,8.994819,-6.705765,-8.782410,-0.842447,-5.890818,8.592438,5.586862,2.257142,-7.920078,2.061801,5.829189,3.176160,8.675928,-0.602430,-1.499224,-3.310105,-8.692181,5.260358,-1.454481,3.125387,7.143387,6.028472,1.812553,-3.142018,2.807140,5.108566,9.590209,-5.954529,-9.783948,7.074889,-7.444110,-1.123215,-4.529056,5.972244,4.112493,7.734110,5.078789,1.127888,7.961749,2.402738,0.876330,8.606750,6.009369,7.819669,3.514590,-2.190311,5.358099,-3.784022,-7.789438,-6.024555,6.762950,4.176843,-4.241918,5.367313,-8.394688,-9.592468,7.614031,-7.799381,9.916438,-9.654449,-9.564269,-1.751957,4.150610,0.671759,2.321473,-1.420349,-9.263506,5.602195,-6.505903,-2.304092,1.690491,2.875717,4.160016,5.677490,8.731702,8.101980,3.136406,8.555421,-0.323174,-5.564282,7.756234,-7.872452,-9.728816,-3.999644,1.336885,-7.882285,-0.176926,9.368626,1.418234,-4.445886,9.423525,5.208525,-2.840851,6.944070,6.581644,-5.129801,-3.985308,-2.987835,-1.912562,-7.628713,-0.751554,5.249708,-1.413831,-3.095330,3.193828,-1.564410,-8.633574,1.976710,9.632502,1.802971,1.850883,7.452658,6.729532,-2.429467,-5.352250,1.255515,7.340857,2.342040,1.996576,-3.198118,6.460838,0.822767,-6.173269,-7.386481,-7.655859,-9.505198,8.837633,0.589239,-2.324707,-4.682350,-1.994242,2.383511,-7.624799,3.116699,-7.870399,1.915409,3.946204,5.064430,5.268201,1.998759,4.638887,8.762542,0.988143,8.071251,7.610950,-3.830072,4.806285,4.166835,0.563998,-2.294345,-1.902367,9.418899,-7.979550,3.129309,-9.883444,9.106853,3.998829,-5.658700,-5.886824,-9.613617,5.277163,7.303736,-4.496352,8.778465,-0.735923,7.577012,3.678418,-0.007358,0.608509,6.072693,-1.936265,3.553461,-7.167119,-6.364641,-6.247591,-9.536076,6.178283,-8.156013,-1.582249,2.525703,1.569757,-0.172832,4.458597,0.560168,-6.952343,-5.205848,9.787777,-6.294120,7.542975,-6.352904,5.755458,-8.641329,8.008880,-5.621710,-5.595536,-3.572554,-3.691620,-5.558638,0.908020,-2.855472,-4.750157,-5.151130,1.982932,7.834145,9.889241,-4.360282,-0.340272,5.860667,8.789721,-1.608912,-0.076798,-6.455623,3.547672,-9.113181,-0.542490,-6.118976,-9.726188,-0.090959,-3.791614,-9.932192,-1.447572,-0.814313,2.728959,-1.814393,-1.545932,-3.582212,0.059663,7.317326,0.108198,9.916147,2.423876,1.091428,-4.087910,2.901365,9.986341,-1.976897,-6.244914,6.635734,-4.703770,-1.085086,-2.474460,6.837895,7.003544,-0.469524,2.372810,-6.382733,2.969983,-2.812828,-7.125490,-4.583583,0.357525,3.149747,-6.714371,-9.755259,-0.030983,4.608238,4.951745,-1.629613,5.296692,-2.742735,-8.266666,2.660968,-6.872800,0.866933,2.658212,-4.714462,-6.269016,-1.038806,-9.596322,4.694926,-8.127574,2.398693,-7.987317,-5.694842,-6.060211,-8.700212,-8.464589,4.296922,0.980360,6.031761,-3.079551,6.574857,1.922536,2.614696,-9.942217,-8.018379,8.194234,7.854036,9.466014,-4.971395,-8.857263,-7.992779,-4.753592,3.158081,-2.244054,0.070175,-4.070755,0.004711,-0.784602,-8.848741,8.630683,5.979535,-4.589101,-1.665870,2.337939,-9.436904,6.049673,-4.433391,-6.061769,5.153629,-8.048255,6.783668,-5.251745,-9.849347,-7.056101,0.138740,3.991946,-3.691790,9.059490,2.698308,9.943442,-0.352653,-0.483633,6.233104,-5.826605,4.391055,3.704094,-2.157883,3.634587,-1.381793,9.793322,6.121242,8.165784,-2.293102,8.206884,7.111928,2.063518,2.045867,-9.733145,-1.354414,-2.826509,4.724786,3.708324,1.900496,-9.907893,-7.621356,4.423102,-1.515734,6.012009,-5.436922,-5.679581,-3.099378,9.640405,2.564826,-3.024034,6.769353,6.841516,-4.191561,-9.591497,8.478544,4.136689,-6.201856,8.181039,0.421116,9.290173,1.140666,5.468991,-8.746936,-5.301684,-9.630814,1.021697,6.369555,-7.277586,0.899390,6.146217,5.910657,-7.615725,3.364056,-7.385660,5.778465,-5.479627,5.746188,-3.427331,0.238836,2.988184,7.546396,0.802333,5.279268,-9.210496,-1.789709,3.690861,-2.436246,0.049243,-6.920716,2.668737,3.406984,-1.761016,0.690138,-3.993498,8.810897,5.470492,5.277094,9.474503,-6.577976,2.565514,5.482391,7.837465,0.488380,-3.487110,-2.271099,0.605079,9.412365,9.157640,-4.035572,4.828335,0.683117,-4.890866,5.268505,-0.890691,2.919514,-9.158336,-6.265710,-0.492566,-3.457043,7.137456,-4.519359,8.591318,4.178799,0.660487,-4.849207,6.300667,5.282374,-9.032860,-5.151025,-1.595712,1.330297,-7.513440,-7.906790,9.223323,0.256733,-7.110616,1.915482,-7.816983,-8.373800,-3.259464,-6.629447,-6.123075,6.814989,2.419497,4.945810,1.718124,-9.194481,0.434417,-5.170333,-4.034492,5.185641,-9.549977,-0.447247,8.871498,-3.817355,3.078664,-0.317232,-9.946671,5.530564,0.366457,3.207772,4.402878,-6.172204,9.780156,9.920460,9.036673,-4.817067,8.316724,-7.139949,9.987923,-6.516850,5.989469,-6.723013,-7.749668,4.796821,5.624024,-3.800217,6.630201,8.628409,6.890892,-8.850623,5.463242,-4.886438,9.793166,-7.741480,3.950891,5.374672,8.633052,-0.577870,8.928867,7.145838,5.385850,9.225190,-9.351648,8.682699,3.387673,-5.532446,-9.833695,9.544395,2.241569,-1.185196,-2.309665,-8.979366,8.602042,1.153606,-3.479797,7.193849,-3.451938,-1.066717,0.829233,0.033281,4.932587,-3.622311,-7.636215,4.368675,8.692690,1.490144,-0.596695,1.539408,-5.698515,-6.316503,4.869031,-2.754929,8.059275,-2.530299,-4.954591,3.174042,-8.917693,2.478511,-0.507258,-6.634221,-9.766496,0.011555,1.234821,6.486653,-8.645156,2.256738,0.636798,5.879749,-7.056317,-1.808359,5.430039,3.428981,7.362145,4.173470,9.658929,2.833890,2.583333,-2.440883,0.536948,-7.005136,-4.435244,7.224546,-4.934499,-0.293532,-0.032648,6.303290,-8.146395], dtype = "float64")#candidate|8912|(1470,)|const|float64
call_8911 = func_2922_call(relay.reshape(const_8912.astype('float64'), [14, 15, 7]))
call_8913 = func_2922_call(relay.reshape(const_8912.astype('float64'), [14, 15, 7]))
func_8355_call = mod.get_global_var('func_8355')
func_8358_call = mutated_mod.get_global_var('func_8358')
const_8916 = relay.constdtype = "float32")#candidate|8916|(88, 20)|const|float32
call_8915 = relay.TupleGetItem(func_8355_call(relay.reshape(const_8916.astype('float32'), [16, 10, 11])), 1)
call_8917 = relay.TupleGetItem(func_8358_call(relay.reshape(const_8916.astype('float32'), [16, 10, 11])), 1)
var_8920 = relay.var("var_8920", dtype = "float64", shape = (14, 15, 7))#candidate|8920|(14, 15, 7)|var|float64
bop_8921 = relay.mod(call_8911.astype('float64'), relay.reshape(var_8920.astype('float64'), relay.shape_of(call_8911))) # shape=(14, 15, 7)
bop_8924 = relay.mod(call_8913.astype('float64'), relay.reshape(var_8920.astype('float64'), relay.shape_of(call_8913))) # shape=(14, 15, 7)
bop_8928 = relay.right_shift(var_8920.astype('int32'), relay.reshape(const_8912.astype('int32'), relay.shape_of(var_8920))) # shape=(14, 15, 7)
bop_8931 = relay.multiply(bop_8928.astype('uint8'), relay.reshape(call_8911.astype('uint8'), relay.shape_of(bop_8928))) # shape=(14, 15, 7)
bop_8934 = relay.multiply(bop_8928.astype('uint8'), relay.reshape(call_8913.astype('uint8'), relay.shape_of(bop_8928))) # shape=(14, 15, 7)
var_8936 = relay.var("var_8936", dtype = "float64", shape = (14, 15, 7))#candidate|8936|(14, 15, 7)|var|float64
bop_8937 = relay.bitwise_xor(call_8911.astype('uint32'), relay.reshape(var_8936.astype('uint32'), relay.shape_of(call_8911))) # shape=(14, 15, 7)
bop_8940 = relay.bitwise_xor(call_8913.astype('uint32'), relay.reshape(var_8936.astype('uint32'), relay.shape_of(call_8913))) # shape=(14, 15, 7)
func_5317_call = mod.get_global_var('func_5317')
func_5321_call = mutated_mod.get_global_var('func_5321')
const_8948 = relay.const(-6, dtype = "int32")#candidate|8948|()|const|int32
const_8949 = relay.const([[-6],[-4],[2],[-5],[6],[-7],[-10],[6],[-5],[2],[-3],[-5],[-2],[8],[10],[3]], dtype = "int32")#candidate|8949|(16, 1)|const|int32
var_8950 = relay.var("var_8950", dtype = "float32", shape = (1008,))#candidate|8950|(1008,)|var|float32
call_8947 = relay.TupleGetItem(func_5317_call(relay.reshape(const_8948.astype('int32'), []), relay.reshape(const_8949.astype('int32'), [16, 1]), relay.reshape(var_8950.astype('float32'), [1, 1008]), ), 2)
call_8951 = relay.TupleGetItem(func_5321_call(relay.reshape(const_8948.astype('int32'), []), relay.reshape(const_8949.astype('int32'), [16, 1]), relay.reshape(var_8950.astype('float32'), [1, 1008]), ), 2)
func_1961_call = mod.get_global_var('func_1961')
func_1963_call = mutated_mod.get_global_var('func_1963')
const_8957 = relay.const([1.741413,9.016989,-1.642554,5.245174,3.251818,9.964259,1.693137,5.116618,-1.714946,-2.013384,-1.819411,-3.983838,0.256634,1.649361,-8.666463,6.965114,-6.925699,2.266455,6.746989,1.139275,-2.517375,6.117490,-8.680600,4.773585,0.267317,8.945666,3.601984,-5.514504,-8.440771,-6.302238,-4.663554,-3.773717,-0.520729,5.792975,-8.735150,-1.358452,5.532903,8.228557,-6.772634,6.223455,-2.522911,-5.259507,-2.745469,-6.937429,-5.270040,7.301221,5.427258,9.884854,3.991521,7.059469,1.228900,0.472681,1.673608,-8.059694,2.955436,9.348590,-6.563884,-5.123814,1.977157,-4.521641,6.729981,-7.654804,4.673515,-5.755755,-3.781218,1.448845,8.221105,-8.617620,6.627355,3.857331,-5.758894,-2.181972,-9.468995,-6.801413,2.585401,5.202670,-9.356457,8.330768,6.142734,9.292192,3.533720,6.154867,2.963015,-5.322285,-5.846831,8.296558,-6.237157,-3.890592,-5.015954,-9.432198,8.265634,-2.123983,2.141458,2.998820,0.245008,-5.737279,7.231295,-0.438601,-4.395219,0.419832,-6.503255,0.973612,-3.440139,3.738579,-2.087317,7.794051,3.405466,-5.427845,1.152682,6.293640,-3.737528,-1.453336,9.900616,-4.661101,1.845617,-6.319631,-3.448068,-6.665769,5.906143,-2.074693,-2.571182,7.275291,0.520361,-1.183956,-9.513941,-5.696935,-9.757096,-2.616859,5.913830,2.599360,6.632963,-6.821518,0.428228,-5.739735,-1.653770,0.856992,-7.663698,-4.529204,-0.567731,9.617814,-6.915722,9.286453,-8.168639,-8.434403,-6.490665,-9.353434,2.994333,1.586891,2.371737,-4.017952,-8.957431,-5.081806,-6.041356,6.225326,-9.309805,8.440593,-1.875880,4.455701,0.492816,-3.263648,8.452433,2.137001,4.098783,7.442522,-9.665825,-2.357270,5.100792,-3.357355,9.198932,-0.977237,-4.937730,-9.579578,-1.154596,2.385205,2.827599,0.819913,-8.621999,5.088966,-7.300611,-0.104950,-2.497637,9.752276,-0.456727,-6.066548,5.942879,9.845790,-3.254200,-7.550629,8.418730,-2.598305,8.211857,0.270291,-8.628929,5.654608,7.884726,-3.722988,-0.980762,-9.510184,6.060850,-7.310148,3.304314,-3.804300,5.875827,2.450153,-6.537753,2.115401,6.918302,8.584067,-7.165903,-2.592924,-8.178885,0.406335,0.276822,5.789618,-5.003659,5.532896,7.617432,-0.142831,5.589565,5.800903,5.501286,2.420066,2.893610,0.355524,-2.902206,-1.810193,-4.158196,4.856166,7.670064,-6.945365,4.250779,1.346951,8.759973,3.574560,9.821219,-2.852031,-3.074917,-7.872181,-7.525688,4.101262,4.827814,2.164527,1.384211,0.308145,-2.108518,4.214069,-4.249148,-8.983031,-9.578580,-9.007288,6.364700,-6.617396,-3.232296,1.315081,-0.544432,3.772385,-0.752183,6.300504,-6.604397,-7.310346,-4.767209,-2.034723,7.597237,-7.586781,-4.346517,3.339767,2.289626,9.062466,-5.591256,-5.763835,3.769573,0.746589,7.140325,-7.591661,2.216745,-0.608013,-6.770365,-0.385801,4.110210,7.670809,5.993850,1.261984,-3.431340,0.442508,-4.845029,-8.155987,9.268206,5.956929,-8.899049,-0.404545,7.047417,-8.972778,6.042224,4.753593,5.318023,4.585682,2.443301,-1.307420,5.457464,7.927568,7.228541,-7.450328,3.195599,8.679905,9.248988,2.539800,-0.409885,-9.510812,6.318688,5.184340,-5.822250,8.927564,6.705021,0.631104,5.114638,-6.704096,-4.647737,-3.465946,2.887795,-2.466780,1.602485,1.071576,6.568326,-5.773837,9.093309,8.003197,-9.853292,6.208648,-7.415630,-6.400707,2.612374,1.183563,4.327879,7.605702,8.658962,0.124143,-1.983569,2.728893,-6.326674,-0.727810,8.793640,4.694149,-5.826281,5.324172,-0.366942,2.979684,5.354261,4.516737,-3.066936,9.503735,-0.446780,-1.530374,9.857589,-9.633480,3.592423,8.230654,6.222978,-5.314309,5.385754,-5.514407,-1.423243,-3.318112,-9.425133,-2.572692,-6.996518,0.905078,7.905965,9.057109,2.973156,-7.055835,-4.606240,7.094454,5.477878,-7.570211,6.920838,-4.284844,-9.870626,8.283231,-4.698238,3.306339,5.437594,-5.670156,-6.242764,1.428852,8.933457,5.871989,2.738896,5.591229,-4.583829,-7.746539,7.253875,2.043559,5.973794,-8.527998,7.738811,-4.132809,-1.103900,1.586912,9.143216,-2.742165,-8.059870,-0.199571,-7.409215,-5.204621,5.496950,6.572411,9.057415,-9.699576,0.476733,8.916431,-7.097200,-7.422921,-7.425298,-1.947500,-3.292389,-6.667721,-7.843622,3.119949,6.280409,9.909774,-7.146864,4.535061,-2.910756,-7.594357,-3.906082,-5.972724,0.205648,-4.010310,-3.971645,0.985468,8.903900,7.768697,1.348951,1.899487,1.045639,0.213144,3.537062,3.492609,2.212543,3.943900,5.118027,-5.498052,-6.368503,-1.256610,0.916602,-9.310206,-8.974043,-6.676803,-7.940454,-9.990275,3.651913,7.303431,-4.288763,-4.927428,-5.791622,1.182324,5.638045,-0.940643,-6.825664,-0.332841,5.105738,0.529775,-1.071864,2.565671,8.253233,-5.722400,1.143543,6.845867,0.717895,7.761250,7.561891,8.090651,1.332680,8.910942,7.896105,3.121811,-4.641494,-9.748130,9.665400,6.850705,8.326435,1.455705,3.077960,-7.484326,-1.421597,-0.274355,-1.175517,-6.538882,4.761722,-6.374311,1.900710,2.816954,-9.343353,-6.529073,4.291268,-4.310162,-4.159959,-1.335455,-0.499412,-0.010022,-0.066710,-2.194244,-9.922423,-1.196409,-2.180630,-0.961983,2.219029,0.648923,3.596297,3.427228,6.282473,8.740996,0.558030,0.788924,-1.434009,-0.041599,-6.468849,-0.162512,0.041863,0.947186,2.181882,9.413985,5.331399,-3.608213,-1.590420,-1.410866,3.402304,8.487033,5.492633,-6.973631,-4.981608,-7.939823,2.491211,-1.990411,-2.283305,1.490319,3.149460,-4.682512,5.267849,-8.648459,-6.137568,-9.340766,-9.769111,-0.417561,-3.797857,-4.858029,0.690185,-4.158826,9.735323,7.341525,-1.646970,2.209217,8.366044,-9.514806,-4.502464,-4.347703,3.254277,-9.589815,4.146876,1.331330,8.320028,-2.315805,0.393548,0.887935,1.091527,-5.666121,3.347148,-2.359757,3.659883,-3.593643,1.080240,-2.389896,8.229115,-6.868129,9.566486,-9.199989,0.153521,1.179631,1.191463,6.572004,1.534542,-4.827734,7.550778,1.350478,-1.714794,-6.875121,-4.832219,-7.432652,3.995851,-1.837809,5.670120,6.675778,-0.508056,0.834531,-0.830905,-4.105337,-3.073870,-3.520541,8.886735,-1.720058,9.274615,8.109836,5.722098,6.989283,4.544397,7.899647,7.427379,3.963955,6.242376,6.914091,-6.750991,6.922322,3.652628,-7.833297,0.624074,-3.750987,-9.334817,-9.370786,0.258014,-7.004897,-6.318274,6.617804,9.559918,2.921244,1.010533,-2.945678,-2.664594,-5.664998,4.913271,7.598175,3.525221,-8.173749,3.156894,7.774968,-8.687787,8.444237,7.202528,-9.506973,-7.937279,7.935711,5.481520,0.359643,4.199617,2.831138,-5.211829,3.457165,-5.949680,7.493505,0.430520,-9.045019,1.144020,-4.150471,8.863749,9.402423,-0.449643,6.830064,-7.211427,8.367767,4.850784,-1.214577,5.419152,7.975116,9.854350,-2.701516,-7.147453,1.443862,-3.173307,-3.720639,-5.925244,4.103562,0.022572,-3.365853,6.357370,1.061774,-0.473096,9.894820,-8.865417,1.248783,6.537782,-5.634248,2.313033,1.451130,2.292818,1.551297,4.391493,-5.858118,4.501811,-2.502318,-4.601757,4.756247,-0.954257,7.484626,-0.013517,-9.555565,-2.548472,5.441060,-7.233469,5.608076,-1.131779,-8.725714,-7.167511,-3.942378,9.709465,-2.371566,9.628365,6.170137,-9.475449,-6.335521,2.893261,3.204019,2.784475,6.615885,8.753890,2.051225,1.699502,-4.765261,-5.715438,-3.831283,7.975037,8.235927,-3.461253,-6.044355,7.860064,2.202604,-1.769548,-7.802195,7.126643,4.585363,7.536034,3.988691,-6.294953,-4.853738,-8.206651,3.581677,4.156221,-7.110907,8.871945,7.678297,4.027204,1.352959,9.015313,4.720973,-8.020092,7.878667,0.032019,-7.498379,-8.150170,-2.286557,3.664019,7.826887,8.782597,1.004072,-3.451817,9.489826,1.507005,2.152544,2.805866,-0.837406,-0.142569,2.324545,-0.646609,9.575967,-5.566796,7.063754,6.375588,-5.810375,2.242572,3.785634,-1.468168,9.370857,-6.086148,-9.276813,-7.400094,8.648023,6.594949,-8.300182,-1.317439,-7.258078,-0.684775,6.485365,-5.693010,-6.845374,5.380154,-2.299275,-1.964699,7.269149,-9.603245,-5.174847,-7.734441,5.589498,-6.511345,7.606788,-5.037965,5.058488,-4.389950,-3.695968,6.921537,-3.322849,0.918660,-1.718760,-3.441231,-9.108364,-3.917228,3.360591,-3.312343,-5.109693,3.253845,6.873046,8.164892,-7.063215,2.903786,1.662222,8.843775,2.336043,-4.759090,-7.560859,-8.910701,2.639479,-5.264008,8.553044,-3.160068,7.795768,-4.139809,6.009893,-9.850825,0.726587,-7.449096,-2.147438,-5.393624,-6.487074,7.439477,1.824266,7.090575,-8.219141,-8.699447,-8.765262,2.816196,-3.849704,5.583104,-7.432376,1.427051,8.986692,-5.611345,7.707271,-2.676937,5.915427,-4.104491,5.146508,1.755444,8.074830,3.950089,-0.410954,-5.013714,-7.110302,-3.235554,9.883601,-9.644633,-5.765911,-4.912203,9.650887,1.822207,-5.404416,-1.825761,-2.085941], dtype = "float64")#candidate|8957|(864,)|const|float64
call_8956 = relay.TupleGetItem(func_1961_call(relay.reshape(const_8957.astype('float64'), [8, 9, 12])), 0)
call_8958 = relay.TupleGetItem(func_1963_call(relay.reshape(const_8957.astype('float64'), [8, 9, 12])), 0)
func_4089_call = mod.get_global_var('func_4089')
func_4093_call = mutated_mod.get_global_var('func_4093')
var_8974 = relay.var("var_8974", dtype = "uint32", shape = (130, 9))#candidate|8974|(130, 9)|var|uint32
call_8973 = func_4089_call(relay.reshape(var_8974.astype('uint32'), [6, 13, 15]), relay.reshape(var_8974.astype('uint32'), [6, 13, 15]), )
call_8975 = func_4089_call(relay.reshape(var_8974.astype('uint32'), [6, 13, 15]), relay.reshape(var_8974.astype('uint32'), [6, 13, 15]), )
func_8717_call = mod.get_global_var('func_8717')
func_8718_call = mutated_mod.get_global_var('func_8718')
call_8977 = relay.TupleGetItem(func_8717_call(), 0)
call_8978 = relay.TupleGetItem(func_8718_call(), 0)
func_3648_call = mod.get_global_var('func_3648')
func_3650_call = mutated_mod.get_global_var('func_3650')
const_8995 = relay.const([-6.972734,0.644616,-7.826551,-7.395109,-4.287639,-3.002815,2.180470,-8.763886,6.349582,1.649336,-0.877108,7.840892,-9.239711,-5.706011,5.946408,-6.468212,1.964575,-8.892267,1.195930,3.106376,8.248401,-1.673114,9.629061,7.086696,-0.679427,-4.704975,9.587416,-1.621740,-0.453690,4.993128,4.141856,6.499103,1.369673,9.513851,-3.845969,-7.777162,-6.610752,4.110977,-2.900063,-9.855627,9.243476,6.442871,-2.983732,1.380441,-6.568240,3.192461,-0.017402,-6.883165,-6.132892,-1.157994,-9.331952,-6.093138,2.738893,-3.336245,2.021507,2.995003,-4.802951,9.663472,-4.566990,5.864213,-4.013626,-9.426149,-4.613971,-0.706421,-0.902993,8.899685,-6.950147,-9.329262,9.819544,0.727821,6.921896,-7.984078,2.998491,0.451647,-1.099253,0.098579,6.485585,2.572493,-4.962020,-3.001482,4.523448,-4.809549,-6.140592,4.827717,6.714719,-9.856165,9.455429,-2.001177,-7.491073,-5.148642,6.375136,0.785710,-5.968908,-5.820593,2.872444,1.361676,-1.462683,-2.206143,-6.264832,4.872911,-9.197842,1.468805,-9.858531,-3.923938,9.686403,5.296229,-9.685989,7.861547,7.668970,-6.378495,-1.258751,8.505676,9.791340,4.573402,-9.091360,1.379739,-0.815721,-3.395191,4.729574,-4.948129,-3.148093,6.878560,-0.095187,3.684424,-1.847094,-4.631072,8.559910,4.853608,3.420016,9.143156,9.105728,-4.598944,1.256977,-4.018605,-2.819264,6.118432,-1.769794,9.297884,8.681186,7.825705,-1.739681,-4.071974,1.771005,-5.467807,8.191887,-3.685257,2.933222,-9.415645,-7.422498,0.029335,0.743543,3.876067,7.341272,8.412929,7.078960,-4.494009,-1.566793,0.750989,-6.013003,6.165012,8.071839,9.351924,-6.177773,3.347748,-1.384602,1.505417,8.253548,-5.240696,-1.129400,9.460035,-3.827405,6.249265,7.614593,-7.068737,7.504565,7.179597,-4.628285,5.343031,-2.753660,5.555068,0.281524,6.503337,7.584289,8.576008,9.403848,3.853140,-3.562065,-4.567797,0.356870,1.188005,-3.310155,-5.626844,6.520474,-3.374256,-9.787797,9.329715,-5.402263,1.164850,-0.636287,2.119610,0.008754,9.846154,-4.787556,2.219085,-9.283412,-5.942788,3.571817,8.704520,-9.567277,5.404493,0.223608,-2.247530,9.064731,3.621635,-9.843234,0.270258,9.281597,4.123074,-4.351433,-6.693775,8.845603,-0.499457,3.986842,-0.987329,4.452683,-5.271740,-7.150578,-0.699365,-8.920302,3.793890,5.834783,4.516139,0.680593,-0.865201,5.910808,-9.006392,0.499785,-9.587980,1.260074,-9.144814,-3.689082,7.358980,2.241728,-3.374691,-3.894734,-3.713834,-0.826537,-6.293877,-2.321483,0.127910,4.764591,-6.451425,-3.170131,8.352192,7.101924,-3.095392,8.399678,-6.131832,-1.862096,-8.423757,-5.612855,-5.834534,-0.615119,-7.811578,3.757716,2.842632,-0.501414,1.245663,-6.135747,-5.895916,-3.197469,8.826940,-6.390727,-7.579169,-1.660031,5.824182,0.016373,0.049841,4.161040,-0.951618,2.807883,3.279402,3.511129,1.497062,-1.361543,-9.353225,-2.972117,-3.956628,0.924082,5.705814,3.438675,6.573308,-4.263427,8.369302,-5.186372,-0.533057,1.804767,4.263135,-6.023242,-8.866363,-8.674286,2.884398,-8.213543,-7.203597,-2.160240,3.856768,-5.315177,-8.237016,3.784581,-8.583204,1.971318,0.873134,3.864954,-3.824150,8.770575,-7.063180,3.555186,7.287628,2.149376,8.003573,5.985592,4.810002,9.901738,9.903295,1.683052,7.428395,-5.692971,3.338398,5.225758,-1.515137,-9.234059,4.645020,-7.008269,9.335409,-9.710484,-7.186473,3.584571,7.533492,9.152690,5.434786,0.757051,-3.471326,-4.601086,9.929096,3.759382,-5.777489,-0.971139,1.514977,-4.793907,-3.433572,6.479691,2.161224,-3.525977,-1.903830,1.452994,0.940595,-1.012652,-9.936081,9.622882,-3.424665,3.663576,2.419657,-9.461963,2.431866,6.931194,3.150168,-3.738013,-5.361675,-9.740381,-4.638549,-9.740946,-6.358465,1.062639,0.356425,-1.357361,0.442725,0.444860,6.596874,5.292345,-8.086637,-4.171195,-1.776646,-3.384883,3.542241,9.399405,-5.827591,4.116713,-9.863659,-4.245797,-8.049497,5.360376,-3.109153,-9.426304,8.383387,-9.154058,-1.035791,8.986998,8.414044,0.391061,-5.090459,8.154498,8.207136,6.705387,2.326712,9.383748,-9.224309,-4.206802,8.322860,-1.523311,-3.886940,4.834014,0.729555,9.356365,-7.103440,-5.187359,6.618423,-1.376563,-5.657136,-3.395019,9.316514,7.062440,6.899253,-4.466173,-2.518933,2.129802,-4.793864,-8.794185,0.808570,-9.192048,-4.104199,1.334665,-9.428897,-2.637346,3.868813,9.343832,7.390921,1.275929,-8.439434,6.917418,-0.475893,4.746728,6.410565,2.699035,-2.042855,3.209364,-4.553431,-8.892791,-1.448787,3.791876,-8.768187,-9.049252,-3.611630,-4.107821,7.640050,9.186135,-9.581510,-8.229712,-3.250435,-2.099461,-1.970427,-4.697018,-2.034084,3.114126,9.174407,8.683280,8.993788,2.871823,6.235954,-0.705772,-8.436460,-8.350138,1.620627,-5.392973,-9.414575,-1.340275,-1.297072,3.303335,1.452164,2.262718,-8.747991,-2.086044,-2.218158,1.254866,7.074354,5.451848,0.327914,-8.153616,-4.859382,3.817224,-8.277645,7.289608,-4.744629,4.245497,-4.181711,-0.785045,4.997838,-6.923006,7.490440,5.597137,-6.642159,-1.629296,6.187406,-0.544251,7.572780], dtype = "float64")#candidate|8995|(504,)|const|float64
call_8994 = func_3648_call(relay.reshape(const_8995.astype('float64'), [8, 7, 9]))
call_8996 = func_3648_call(relay.reshape(const_8995.astype('float64'), [8, 7, 9]))
var_9021 = relay.var("var_9021", dtype = "uint8", shape = (14, 15, 7))#candidate|9021|(14, 15, 7)|var|uint8
bop_9022 = relay.divide(bop_8931.astype('float64'), relay.reshape(var_9021.astype('float64'), relay.shape_of(bop_8931))) # shape=(14, 15, 7)
bop_9025 = relay.divide(bop_8934.astype('float64'), relay.reshape(var_9021.astype('float64'), relay.shape_of(bop_8934))) # shape=(14, 15, 7)
func_8717_call = mod.get_global_var('func_8717')
func_8718_call = mutated_mod.get_global_var('func_8718')
call_9027 = relay.TupleGetItem(func_8717_call(), 0)
call_9028 = relay.TupleGetItem(func_8718_call(), 0)
func_1402_call = mod.get_global_var('func_1402')
func_1405_call = mutated_mod.get_global_var('func_1405')
call_9042 = func_1402_call(relay.reshape(const_8948.astype('uint32'), []))
call_9043 = func_1402_call(relay.reshape(const_8948.astype('uint32'), []))
func_8717_call = mod.get_global_var('func_8717')
func_8718_call = mutated_mod.get_global_var('func_8718')
call_9047 = relay.TupleGetItem(func_8717_call(), 0)
call_9048 = relay.TupleGetItem(func_8718_call(), 0)
func_8355_call = mod.get_global_var('func_8355')
func_8358_call = mutated_mod.get_global_var('func_8358')
call_9066 = relay.TupleGetItem(func_8355_call(relay.reshape(const_8916.astype('float32'), [16, 10, 11])), 1)
call_9067 = relay.TupleGetItem(func_8358_call(relay.reshape(const_8916.astype('float32'), [16, 10, 11])), 1)
output = relay.Tuple([call_8904,call_8908,const_8909,call_8915,const_8916,bop_8921,bop_8937,call_8947,const_8948,const_8949,var_8950,call_8956,const_8957,call_8973,var_8974,call_8977,call_8994,const_8995,bop_9022,call_9027,call_9042,call_9047,call_9066,])
output2 = relay.Tuple([call_8905,call_8910,const_8909,call_8917,const_8916,bop_8924,bop_8940,call_8951,const_8948,const_8949,var_8950,call_8958,const_8957,call_8975,var_8974,call_8978,call_8996,const_8995,bop_9025,call_9028,call_9043,call_9048,call_9067,])
func_9077 = relay.Function([var_8920,var_8936,var_8950,var_8974,var_9021,], output)
mod['func_9077'] = func_9077
mod = relay.transform.InferType()(mod)
mutated_mod['func_9077'] = func_9077
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9077_call = mutated_mod.get_global_var('func_9077')
var_9079 = relay.var("var_9079", dtype = "float64", shape = (14, 15, 7))#candidate|9079|(14, 15, 7)|var|float64
var_9080 = relay.var("var_9080", dtype = "float64", shape = (14, 15, 7))#candidate|9080|(14, 15, 7)|var|float64
var_9081 = relay.var("var_9081", dtype = "float32", shape = (1008,))#candidate|9081|(1008,)|var|float32
var_9082 = relay.var("var_9082", dtype = "uint32", shape = (130, 9))#candidate|9082|(130, 9)|var|uint32
var_9083 = relay.var("var_9083", dtype = "uint8", shape = (14, 15, 7))#candidate|9083|(14, 15, 7)|var|uint8
call_9078 = func_9077_call(var_9079,var_9080,var_9081,var_9082,var_9083,)
output = call_9078
func_9084 = relay.Function([var_9079,var_9080,var_9081,var_9082,var_9083,], output)
mutated_mod['func_9084'] = func_9084
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8639_call = mod.get_global_var('func_8639')
func_8640_call = mutated_mod.get_global_var('func_8640')
call_9109 = relay.TupleGetItem(func_8639_call(), 0)
call_9110 = relay.TupleGetItem(func_8640_call(), 0)
output = relay.Tuple([call_9109,])
output2 = relay.Tuple([call_9110,])
func_9123 = relay.Function([], output)
mod['func_9123'] = func_9123
mod = relay.transform.InferType()(mod)
mutated_mod['func_9123'] = func_9123
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9123_call = mutated_mod.get_global_var('func_9123')
call_9124 = func_9123_call()
output = call_9124
func_9125 = relay.Function([], output)
mutated_mod['func_9125'] = func_9125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8681_call = mod.get_global_var('func_8681')
func_8683_call = mutated_mod.get_global_var('func_8683')
call_9129 = func_8681_call()
call_9130 = func_8681_call()
output = relay.Tuple([call_9129,])
output2 = relay.Tuple([call_9130,])
func_9135 = relay.Function([], output)
mod['func_9135'] = func_9135
mod = relay.transform.InferType()(mod)
mutated_mod['func_9135'] = func_9135
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9135_call = mutated_mod.get_global_var('func_9135')
call_9136 = func_9135_call()
output = call_9136
func_9137 = relay.Function([], output)
mutated_mod['func_9137'] = func_9137
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8639_call = mod.get_global_var('func_8639')
func_8640_call = mutated_mod.get_global_var('func_8640')
call_9141 = relay.TupleGetItem(func_8639_call(), 0)
call_9142 = relay.TupleGetItem(func_8640_call(), 0)
func_167_call = mod.get_global_var('func_167')
func_169_call = mutated_mod.get_global_var('func_169')
const_9145 = relay.const([-8,-8,-4,-6,-5,9,-10,-10,3,-3,-3,8,4,7,6,-5,10,5,-6,7,3,9,-4,-10,2,-5,10,3,1,7,-7,-2,-6,1,9,-5,-5,-8,7,8,-3,-4,-8,9,6,-7,-10,10,-5,10,-2,-8,1,-7,-6,-6,8,4,-9,-5,10,-10,10,-8,10,9,-5,8,-5,-4,10,1,-2,-3,-1,7,-10,-2,4,5,2,-7,-3,4,-2,8,-10,9,6,-4,2,-8,8,-3,4,10,4,-2,4,4,6,-9,2,10,-2,5,-6,6,-5,-6,-9,-4,4,1,-3,6,-6,6,3,-6,-10,8,-7,10,5,2,4,8,-3,-8,3,-8,10,-9,-1,7,9,7,-10,-10,7,-9,-8,-9,-6,-1,-2,2,-4,5,9,5,9,-3,-1,6,-5,-8,-3,-7,-5,-2,9,9,6,-7,7,-2,-7,5,-10,-7,5,-1,4,9,-8,8,-4,9,2,4,1,6,-3,-6,-2,-1,10,-7,-9,4,7,3,1,-1,1,2,1,9,-9,-8,-10,9,-10,2,3,7,8,-3,-5,1,10,-7,1,7,-1,-10,4,8,-6,-3,6,10,9,4,8,9,9,8,-10,-10,10,1,-1,-5,-9,5,8,1,9,-3,-1,4,8,1,-7,-10,-3,10,-10,-1,5,6,3,1,5,8,6,-7,4,-2,-1,9,-3,-9,3,-2,8,-2,-5,3,-6,-5,3,-9,-2,-7,3,-8,-4,-9,-7,-5,-7,5,9,2,-9,10,-9,-8,-9,-3,-10,1,7,2,1,10,4,3,-5,9,-2,-5,-5,1,7,-6,-6,-2,-9,9,-2,1,6,9,7,-7,-6,-9,5,-5,-7,-1,10,-7,8,8,-7,-7,-10,-6,4,-5,4,-3,5,1,-1,-6,6,7,-1,7,1,-1,-10,-8,-10,7,9,7,6,-8,10,7,9,-3,6,-8,-4,9,-8,8,-4,-6,-3,-8,10,-7,2,-8,7,-1,3,-3,8,1,-1,-6,4,-7,-4,9,1,-4,-1,5,-6,-2,-4,6,-6,-10,7,-1,7,-9,1,4,-5,6,-3,-5,-7,-9,-9,5,-3,-2,2,-1,-1,1,-2,5,-7,5,-4,-10,7,-2,-6,2,1,-10,-7,-3,3,2,8,5,10,5,2,3,-7,-4,1,2,9,-6,-3,5,-2,3,4,-5,-10,6,-10,-9,-3,9,10,7,-1,6,-1,-10,-7,3,3,-6,2,4,3,8,8,-2,-9,8,4,-4,4,-6,-8,-2,8,-3,2,-2,-1,-2,8,-7,-5,-6,6,3,-5,1,-7,6,3,-8,7,9,-10,6,7,4,-6,-8,-2,2,-10,-1,-8,-6,6,-5,2,10,-4,-10,8,2,6,-6,-3,-6,-3,-1,5,3,1,-4,-3,7,-9,-10,-2,-2,-2,-7,-9,9,-9,7,10,-5,8,-4,-4,-8,-7,-3,-1,-7,5,10,-6,-8,-9,-1,4,8,5,-3,-2,-3,9,9,-1,3,-10,-10,1,-3,4,9,-2,-10,-10,8,-5,-4,7,4,-10,5,-1,-10,4,5,9,-6,3,-6,10,-7,-4,-9,4,2,2,8], dtype = "uint8")#candidate|9145|(600,)|const|uint8
call_9144 = relay.TupleGetItem(func_167_call(relay.reshape(const_9145.astype('uint8'), [15, 4, 10])), 0)
call_9146 = relay.TupleGetItem(func_169_call(relay.reshape(const_9145.astype('uint8'), [15, 4, 10])), 0)
func_9123_call = mod.get_global_var('func_9123')
func_9125_call = mutated_mod.get_global_var('func_9125')
call_9147 = relay.TupleGetItem(func_9123_call(), 0)
call_9148 = relay.TupleGetItem(func_9125_call(), 0)
output = relay.Tuple([call_9141,call_9144,const_9145,call_9147,])
output2 = relay.Tuple([call_9142,call_9146,const_9145,call_9148,])
func_9154 = relay.Function([], output)
mod['func_9154'] = func_9154
mod = relay.transform.InferType()(mod)
mutated_mod['func_9154'] = func_9154
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9154_call = mutated_mod.get_global_var('func_9154')
call_9155 = func_9154_call()
output = call_9155
func_9156 = relay.Function([], output)
mutated_mod['func_9156'] = func_9156
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8681_call = mod.get_global_var('func_8681')
func_8683_call = mutated_mod.get_global_var('func_8683')
call_9157 = func_8681_call()
call_9158 = func_8681_call()
func_9135_call = mod.get_global_var('func_9135')
func_9137_call = mutated_mod.get_global_var('func_9137')
call_9165 = relay.TupleGetItem(func_9135_call(), 0)
call_9166 = relay.TupleGetItem(func_9137_call(), 0)
func_6204_call = mod.get_global_var('func_6204')
func_6209_call = mutated_mod.get_global_var('func_6209')
var_9173 = relay.var("var_9173", dtype = "float64", shape = (14,))#candidate|9173|(14,)|var|float64
var_9174 = relay.var("var_9174", dtype = "float64", shape = (1, 96))#candidate|9174|(1, 96)|var|float64
var_9175 = relay.var("var_9175", dtype = "float64", shape = (286,))#candidate|9175|(286,)|var|float64
call_9172 = relay.TupleGetItem(func_6204_call(relay.reshape(var_9173.astype('float64'), [1, 1, 14]), relay.reshape(var_9174.astype('float64'), [96, 1]), relay.reshape(var_9175.astype('float64'), [286,]), ), 1)
call_9176 = relay.TupleGetItem(func_6209_call(relay.reshape(var_9173.astype('float64'), [1, 1, 14]), relay.reshape(var_9174.astype('float64'), [96, 1]), relay.reshape(var_9175.astype('float64'), [286,]), ), 1)
var_9180 = relay.var("var_9180", dtype = "float64", shape = (2, 96))#candidate|9180|(2, 96)|var|float64
bop_9181 = relay.logical_or(var_9174.astype('bool'), var_9180.astype('bool')) # shape=(2, 96)
output = relay.Tuple([call_9157,call_9165,call_9172,var_9173,var_9175,bop_9181,])
output2 = relay.Tuple([call_9158,call_9166,call_9176,var_9173,var_9175,bop_9181,])
func_9188 = relay.Function([var_9173,var_9174,var_9175,var_9180,], output)
mod['func_9188'] = func_9188
mod = relay.transform.InferType()(mod)
mutated_mod['func_9188'] = func_9188
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9188_call = mutated_mod.get_global_var('func_9188')
var_9190 = relay.var("var_9190", dtype = "float64", shape = (14,))#candidate|9190|(14,)|var|float64
var_9191 = relay.var("var_9191", dtype = "float64", shape = (1, 96))#candidate|9191|(1, 96)|var|float64
var_9192 = relay.var("var_9192", dtype = "float64", shape = (286,))#candidate|9192|(286,)|var|float64
var_9193 = relay.var("var_9193", dtype = "float64", shape = (2, 96))#candidate|9193|(2, 96)|var|float64
call_9189 = func_9188_call(var_9190,var_9191,var_9192,var_9193,)
output = call_9189
func_9194 = relay.Function([var_9190,var_9191,var_9192,var_9193,], output)
mutated_mod['func_9194'] = func_9194
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8717_call = mod.get_global_var('func_8717')
func_8718_call = mutated_mod.get_global_var('func_8718')
call_9226 = relay.TupleGetItem(func_8717_call(), 0)
call_9227 = relay.TupleGetItem(func_8718_call(), 0)
func_1876_call = mod.get_global_var('func_1876')
func_1879_call = mutated_mod.get_global_var('func_1879')
const_9251 = relay.const([-7,6,-7,-1,-4,-9,-2,10,5,-4,2,7,7,10,7,2,4,3,-8,4,7,8,8,-3,7,-1,7,3,-8,-8,6,-1,9,-6,6,10,3,-3,7,-1,-5,1,2,8,7,-7,9,7,-1,6,3,3,3,5,3,-2,2,-2,9,6,-9,1,2,7,-1,3,6,-9,1,9,-2,6,-6,8,-10,1,7,7,-10,-5,7,4,-3,4,-7,-9,6,2,-4,5,-5,5,-8,3,9,8,5,9,3], dtype = "int8")#candidate|9251|(99,)|const|int8
call_9250 = func_1876_call(relay.reshape(const_9251.astype('int8'), [1, 11, 9]))
call_9252 = func_1876_call(relay.reshape(const_9251.astype('int8'), [1, 11, 9]))
const_9263 = relay.const([[[9.467272,5.383250,0.201508],[3.422474,-3.456987,-2.183756],[2.253056,-8.397109,4.982806]],[[2.737084,9.898505,-9.263415],[0.458424,-7.359885,2.288092],[1.405001,-4.922868,5.777040]],[[-2.076514,-4.916323,-5.730656],[0.468330,7.486661,-0.876211],[9.431805,-7.690678,-0.820041]],[[9.488434,3.600745,8.598321],[6.599255,-0.426802,9.634677],[6.743697,-0.601317,-6.772426]],[[8.453072,-7.790901,-5.689037],[4.204688,-6.046733,-3.142419],[-3.365341,-3.929104,1.821331]],[[-9.117927,8.286074,4.431910],[-9.050381,-6.158720,-3.857670],[-8.861609,-9.341613,-9.882898]],[[9.494817,-4.505457,0.320370],[5.127040,-5.714644,7.430830],[8.665819,-6.061386,-4.816761]],[[0.436938,-2.641276,0.203864],[3.678633,-5.846347,-9.581933],[-5.934159,2.977072,-0.348458]]], dtype = "float64")#candidate|9263|(8, 3, 3)|const|float64
bop_9264 = relay.floor_divide(call_9226.astype('float64'), relay.reshape(const_9263.astype('float64'), relay.shape_of(call_9226))) # shape=(8, 3, 3)
bop_9267 = relay.floor_divide(call_9227.astype('float64'), relay.reshape(const_9263.astype('float64'), relay.shape_of(call_9227))) # shape=(8, 3, 3)
output = relay.Tuple([call_9250,const_9251,bop_9264,])
output2 = relay.Tuple([call_9252,const_9251,bop_9267,])
func_9271 = relay.Function([], output)
mod['func_9271'] = func_9271
mod = relay.transform.InferType()(mod)
mutated_mod['func_9271'] = func_9271
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9271_call = mutated_mod.get_global_var('func_9271')
call_9272 = func_9271_call()
output = call_9272
func_9273 = relay.Function([], output)
mutated_mod['func_9273'] = func_9273
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8639_call = mod.get_global_var('func_8639')
func_8640_call = mutated_mod.get_global_var('func_8640')
call_9332 = relay.TupleGetItem(func_8639_call(), 0)
call_9333 = relay.TupleGetItem(func_8640_call(), 0)
var_9336 = relay.var("var_9336", dtype = "float32", shape = (8, 3, 3))#candidate|9336|(8, 3, 3)|var|float32
bop_9337 = relay.bitwise_and(call_9332.astype('uint16'), relay.reshape(var_9336.astype('uint16'), relay.shape_of(call_9332))) # shape=(8, 3, 3)
bop_9340 = relay.bitwise_and(call_9333.astype('uint16'), relay.reshape(var_9336.astype('uint16'), relay.shape_of(call_9333))) # shape=(8, 3, 3)
func_7071_call = mod.get_global_var('func_7071')
func_7075_call = mutated_mod.get_global_var('func_7075')
const_9347 = relay.const(-4, dtype = "uint8")#candidate|9347|()|const|uint8
const_9348 = relay.const([4,-5,1,2,-6,-5,1,-1,5,-7,5,-5,2,10,10,3,9,4,-5,-7,5,7,2,-7,9,-5,-5,-1,-2,3,4,8,5,7,-8,-2,-8,1,6,-6,1,9,2,4,-3,-5,-2,-4,7,-6,4,10,-8,4,6,-9,1,-6,10,-8,7,-1,8,-6,5,-10,4,2,8,6,-6,-4,2,4,9,6,3,7,-3,6,6,10,7,-2,10,10,10,4,3,-8,10,-8,-1,6,-7,3,-10,5,-5,-4,-2,10,10,8,4,8,9,-6,-1,4,7,-5,-8,-4,-9,7,-3,-7,-5,-6,10,2,10,-8,4,-2,9,6,10,-2,8,-10,8,-6,2,-3,-8,2,7,-10,3,-10,1,-10,7,2,1,10,1,4,8,8,4,-3,-3,10,6,8,7,10,2,-1,6,-6,-7,-10,8,10,-7,3,-7,6,4,-5,-6,4,9,-2,-9,9,9,-3,-5,-10,-8,-2,5,-10,-6,9,2,-9,-1,3,9,7,9,-6,-5,-9,-9,-9,3,-3,-6,8,-6,-8,-7,-10,-3,4,-9,10,-7,8,-2,-2,6,-3,-8,2,-7,2,1,2,-8,-8,9,2,7,-3,5,-5,9,-5,8,-2,6,-10,-7,-3,-9,4,8,-3,4,-3,9,1,-5,-8,4,7,5,8,-10,-9,-9,6,-6,2,6,10,3,-5,8,1,-3,-1,-8,2,-10,-8,3,6,-4,1,6,-5,-3,-7,-6,-2,-1,-9,1,-6,2,2,9,-5,8,2,9,3,2,4,10,-8,10,9,-9,-4,2,-6,-4,3,9,6,-5,-2,8,-6,4,1,-9,5,9,1,-5,-2,2,-1,-1,10,5,-6,10,5,-3,-7,-9,2,-2,-1,4,6,-9,8,5,9,-2,4,4,-7,6,-9,6,6,6,5,-9,7,-9,9,5,-3,-10,10,-6,8,10,-10,-1,-4,-2,-1,9,10,-3,1,4,4,3,-7,-10,3,-4,-6,-7,-6,-7,-1,-4,-6,9,-4,1,6,-1,-5,10,3,-10,1,-7,-8,5,-3,-2,10,4,4,-4,-3,3,-8,-5,9,7,-5,-8,-1,4,-5,-10,-6,9,-4,-10,7,-3,8,-7,-3,6,9,1,-10,3,-1,-8,-1,-7,-9,-2,-4,-3,-4,1,5,7,3,5,5,9,-2,3,4,-8,8,-1,-6,-7,5,8,-5,-5,5,4,-7,-5,9,-2,-7,6,-2,-10,-3,7,-4,7,1,10,1,7,-6,-9,-8,8,5,1,-2,6,-7,-3,-9,10,4,10,-1,-5,7,2,7,1,3,-9,-2,-10,7,9,4,10,7,-3,-4,7,-4,-7,8,-5,1,-8,9,3,1,-4,1,-5,3,-9,8,-8,-5,-5,4,-6,2,-9,1,-8,4,-9,7,5,6,5,-2,-8,8,1,-1,-9,10,7,10,4,-9,-10,9,-4,-1,-8,-4,1,-10,-5,9,8,-10,1,-10,5,-7,4,2,2,-1,-6,9,-8,-2,-3,-7,-2,-4,8,-7,-3,-7,4,-9,3,-7,4,10,6,-2,-5,-10,7,-2,-9,-7,-5,3,6,-6,-1,-1,10,4,-3,6,7,-7,-1,-9,-7,-5,3,-4,10,-9,4,6,3,-3,-10,4,-7,4,-9,-10,-1,9,-7,-6,-2,9,-7,1,7,-6,-2,-6,1,-9,-5,5,8,-4,8,1,5,5,5,1,9,-10,-8,-2,-6,-9,1,-9,-1,-1,2,-8,-2,-10,10,-8,1,-10,4,-7,-2,-5,4,2,-8,-2,-9,-9,5,7,-3,4,4,-2,-7,-3,7,4,4,7,-2,-4,1,-9,5,2,2,-1,-2,-7,1,-8,7,-10,-7,-5,-7,-10,-2,-5,-5,-4,-4,5,5,-5,-1,-5,-4,-1,3,1,-3,-6,-8,-2,1,1,-9,1,8,10,-8,10,-1,2,7,2,4,4,3,6,2,-9,-6,6,-6,-5,-3,-6,-6,-8,2,2,10,-10,4,6,5,-8,6,7,10,8,-7,-8,3,-3,-6,2,10,10,8,-9,-3,-6,-1,-3,-6,-4,3,3,8,2,-2,-3,-4,6,10,5,-4,-2,-5,-6,6,-2,-4,7,-5,-7,1,9,4,7,3,-7,4,-4,4,10,1,-1,8,-6,-4,8,-6,3,2,-6,-6,4,2,-9,-7,8,-2,3,-6,-3,-6,8,-9,2,4,8,10,-10,-9,3,-9,-4,-2,10,-9,-10,3,-7,-8,-6,8,2,6,-2,-2,-1,-10,9,3,9,2,7,7,10,4,10,7,-9,4,8,-10,5,5,9,-5,1,8,-5,-1,-2,10,-8,4,10,1,-3,8,-1,6,-2,-10,10,-1,5,-9,-9,-9,-6,6,-10,-7,-10,-3,-7,-2,-9,1,2,-4,6,-6,-4,3,9,-9,8,3,10,-8,-2,7,-5,-1,-2,6,2,-4,8,-8,9,-7,1,7,-6,8,7,1,6,9,-9,-6,8,9,9,4,-5,7,2,7,8,6,-3,-7,1,4,2,2,2,-7,-1,3,3,1,-3,-3,-6,-10,8,-5,-5,10,3,-9,-5,7,9,-9,-1,8,-9,-7,-4,3,6,10,8,-1,3,-5,-6,2,4,8,4,-9,10,7,5,-5,-9,-4,-6,10,-5,-8,1,8,3,-1,3,9,10,-5,-9,7,7,7,-6,-3,-5,-4,10,2,-8,-10,6,4,9,-2,2,-6,-1,-2,-1,-10,5,1,-7,-9,-9,-6,2,1,-1,-8,2,-2,7,2,7,4,-9,7,9,1,-9,-3,6,2,4,-10,6,-1,-4,-2,-6,-4,3,-1,9,2,-8,9,-8,-1,3,-1,5,-1,-5,-1,9,-4,-9,5,-6,8,-2,7,-9,2,-2,-8,-5,8,-2,-10,6,-5,10,5,-7,-9,-9,10,-5,-10,7,5,-7,-1,2,1,-7,3,6,-3,-10,-5,7,8,8,-2,-6,-7,2,3,1,-1,2,-6,-3,-3,-1,1,2,1,-7,-6,-2,5,3,9,4,6,6,-6,1,2,-8,2,-4], dtype = "uint8")#candidate|9348|(1152,)|const|uint8
call_9346 = relay.TupleGetItem(func_7071_call(relay.reshape(const_9347.astype('uint8'), []), relay.reshape(const_9348.astype('uint8'), [16, 6, 12]), ), 2)
call_9349 = relay.TupleGetItem(func_7075_call(relay.reshape(const_9347.astype('uint8'), []), relay.reshape(const_9348.astype('uint8'), [16, 6, 12]), ), 2)
func_1876_call = mod.get_global_var('func_1876')
func_1879_call = mutated_mod.get_global_var('func_1879')
const_9356 = relay.const([4,2,-3,4,-9,10,10,-8,4,9,-5,9,-1,8,4,5,-5,-6,1,10,7,-10,5,-2,-1,-3,1,-8,2,-10,-7,-4,3,1,-4,-6,2,-9,-3,9,3,-10,3,1,-4,-4,8,-3,10,7,-6,6,-8,-4,8,-6,-5,-7,6,6,9,-1,7,-5,10,2,6,2,3,-6,-9,-1,-9,-3,-6,-7,8,-9,-1,-4,10,-7,-4,-8,-4,1,7,10,-2,-2,-3,-3,-6,3,-9,-8,-3,-3,3], dtype = "int8")#candidate|9356|(99,)|const|int8
call_9355 = func_1876_call(relay.reshape(const_9356.astype('int8'), [1, 11, 9]))
call_9357 = func_1876_call(relay.reshape(const_9356.astype('int8'), [1, 11, 9]))
output = relay.Tuple([bop_9337,call_9346,const_9347,const_9348,call_9355,const_9356,])
output2 = relay.Tuple([bop_9340,call_9349,const_9347,const_9348,call_9357,const_9356,])
func_9359 = relay.Function([var_9336,], output)
mod['func_9359'] = func_9359
mod = relay.transform.InferType()(mod)
var_9360 = relay.var("var_9360", dtype = "float32", shape = (8, 3, 3))#candidate|9360|(8, 3, 3)|var|float32
output = func_9359(var_9360)
func_9361 = relay.Function([var_9360], output)
mutated_mod['func_9361'] = func_9361
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9384 = relay.var("var_9384", dtype = "float32", shape = ())#candidate|9384|()|var|float32
var_9385 = relay.var("var_9385", dtype = "float32", shape = (1, 10, 10))#candidate|9385|(1, 10, 10)|var|float32
bop_9386 = relay.floor_mod(var_9384.astype('float32'), var_9385.astype('float32')) # shape=(1, 10, 10)
bop_9389 = relay.multiply(var_9384.astype('int16'), var_9385.astype('int16')) # shape=(1, 10, 10)
output = relay.Tuple([bop_9386,bop_9389,])
output2 = relay.Tuple([bop_9386,bop_9389,])
func_9399 = relay.Function([var_9384,var_9385,], output)
mod['func_9399'] = func_9399
mod = relay.transform.InferType()(mod)
var_9400 = relay.var("var_9400", dtype = "float32", shape = ())#candidate|9400|()|var|float32
var_9401 = relay.var("var_9401", dtype = "float32", shape = (1, 10, 10))#candidate|9401|(1, 10, 10)|var|float32
output = func_9399(var_9400,var_9401,)
func_9402 = relay.Function([var_9400,var_9401,], output)
mutated_mod['func_9402'] = func_9402
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9419 = relay.var("var_9419", dtype = "float32", shape = (16, 16, 5))#candidate|9419|(16, 16, 5)|var|float32
uop_9420 = relay.cos(var_9419.astype('float32')) # shape=(16, 16, 5)
output = relay.Tuple([uop_9420,])
output2 = relay.Tuple([uop_9420,])
func_9438 = relay.Function([var_9419,], output)
mod['func_9438'] = func_9438
mod = relay.transform.InferType()(mod)
var_9439 = relay.var("var_9439", dtype = "float32", shape = (16, 16, 5))#candidate|9439|(16, 16, 5)|var|float32
output = func_9438(var_9439)
func_9440 = relay.Function([var_9439], output)
mutated_mod['func_9440'] = func_9440
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8681_call = mod.get_global_var('func_8681')
func_8683_call = mutated_mod.get_global_var('func_8683')
call_9554 = func_8681_call()
call_9555 = func_8681_call()
func_1402_call = mod.get_global_var('func_1402')
func_1405_call = mutated_mod.get_global_var('func_1405')
var_9587 = relay.var("var_9587", dtype = "uint32", shape = ())#candidate|9587|()|var|uint32
call_9586 = func_1402_call(relay.reshape(var_9587.astype('uint32'), []))
call_9588 = func_1402_call(relay.reshape(var_9587.astype('uint32'), []))
output = relay.Tuple([call_9554,call_9586,var_9587,])
output2 = relay.Tuple([call_9555,call_9588,var_9587,])
func_9590 = relay.Function([var_9587,], output)
mod['func_9590'] = func_9590
mod = relay.transform.InferType()(mod)
mutated_mod['func_9590'] = func_9590
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9591 = relay.var("var_9591", dtype = "uint32", shape = ())#candidate|9591|()|var|uint32
func_9590_call = mutated_mod.get_global_var('func_9590')
call_9592 = func_9590_call(var_9591)
output = call_9592
func_9593 = relay.Function([var_9591], output)
mutated_mod['func_9593'] = func_9593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9135_call = mod.get_global_var('func_9135')
func_9137_call = mutated_mod.get_global_var('func_9137')
call_9598 = relay.TupleGetItem(func_9135_call(), 0)
call_9599 = relay.TupleGetItem(func_9137_call(), 0)
func_9590_call = mod.get_global_var('func_9590')
func_9593_call = mutated_mod.get_global_var('func_9593')
const_9601 = relay.const(5, dtype = "uint32")#candidate|9601|()|const|uint32
call_9600 = relay.TupleGetItem(func_9590_call(relay.reshape(const_9601.astype('uint32'), [])), 2)
call_9602 = relay.TupleGetItem(func_9593_call(relay.reshape(const_9601.astype('uint32'), [])), 2)
func_2550_call = mod.get_global_var('func_2550')
func_2554_call = mutated_mod.get_global_var('func_2554')
const_9605 = relay.const([2.863342,-8.473134,-5.407282,8.564348,-1.821938,-7.292569,-9.352937,-4.997994,-1.787918,3.219912,2.231179,6.685944,-1.907227,8.472443,-6.003480,1.525587,8.302363,3.229603,8.083052,-9.693544,-0.293399,8.869317,-4.920000,2.174728,-2.593837,-2.485053,-0.208988,-2.611766,-1.024830,-8.443766,-8.439880,-6.382689,6.264599,5.547769,-0.423182,-9.695620,-5.110239,5.969159,9.982570,4.868768,9.981578,1.513382,-7.729664,-5.097278,-3.992285,9.092065,-7.140086,-6.926212,8.796851,9.815145,0.956065,-2.135960,5.516381,-2.677260,-7.571746,-6.340618,-4.755888,-7.425190,0.714576,4.386076,1.859780,6.286806,0.361883,-7.240081,1.029427,-0.802894,0.015791,9.199232,4.708172,-3.525721,5.187266,0.537775,-1.445920,-5.405575,9.017399,6.435211,8.284740,-6.327000,9.852605,9.380668,-6.801638,6.581669,0.491575,-7.507536,2.965599,-0.449898,4.707056,-7.899134,1.882623,-0.304155,-6.463331,-5.294873,-5.912618,-8.433319,0.485364,-6.496917,-2.858119,9.928873,-3.121551,-8.476452,-0.801105,3.149279,-8.385087,-2.144725,-7.560973], dtype = "float32")#candidate|9605|(105,)|const|float32
var_9606 = relay.var("var_9606", dtype = "float64", shape = (864,))#candidate|9606|(864,)|var|float64
call_9604 = relay.TupleGetItem(func_2550_call(relay.reshape(const_9605.astype('float32'), [7, 1, 15]), relay.reshape(var_9606.astype('float64'), [864,]), relay.reshape(var_9606.astype('float64'), [864,]), ), 1)
call_9607 = relay.TupleGetItem(func_2554_call(relay.reshape(const_9605.astype('float32'), [7, 1, 15]), relay.reshape(var_9606.astype('float64'), [864,]), relay.reshape(var_9606.astype('float64'), [864,]), ), 1)
uop_9615 = relay.sinh(call_9604.astype('float32')) # shape=(1, 99)
uop_9617 = relay.sinh(call_9607.astype('float32')) # shape=(1, 99)
bop_9618 = relay.logical_or(uop_9615.astype('bool'), relay.reshape(call_9604.astype('bool'), relay.shape_of(uop_9615))) # shape=(1, 99)
bop_9621 = relay.logical_or(uop_9617.astype('bool'), relay.reshape(call_9607.astype('bool'), relay.shape_of(uop_9617))) # shape=(1, 99)
output = relay.Tuple([call_9598,call_9600,const_9601,const_9605,var_9606,bop_9618,])
output2 = relay.Tuple([call_9599,call_9602,const_9601,const_9605,var_9606,bop_9621,])
func_9626 = relay.Function([var_9606,], output)
mod['func_9626'] = func_9626
mod = relay.transform.InferType()(mod)
mutated_mod['func_9626'] = func_9626
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9627 = relay.var("var_9627", dtype = "float64", shape = (864,))#candidate|9627|(864,)|var|float64
func_9626_call = mutated_mod.get_global_var('func_9626')
call_9628 = func_9626_call(var_9627)
output = call_9628
func_9629 = relay.Function([var_9627], output)
mutated_mod['func_9629'] = func_9629
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9638 = relay.var("var_9638", dtype = "float64", shape = (7, 12, 13))#candidate|9638|(7, 12, 13)|var|float64
uop_9639 = relay.log(var_9638.astype('float64')) # shape=(7, 12, 13)
var_9643 = relay.var("var_9643", dtype = "float64", shape = (7, 12, 13))#candidate|9643|(7, 12, 13)|var|float64
bop_9644 = relay.subtract(uop_9639.astype('int8'), relay.reshape(var_9643.astype('int8'), relay.shape_of(uop_9639))) # shape=(7, 12, 13)
output = relay.Tuple([bop_9644,])
output2 = relay.Tuple([bop_9644,])
func_9654 = relay.Function([var_9638,var_9643,], output)
mod['func_9654'] = func_9654
mod = relay.transform.InferType()(mod)
mutated_mod['func_9654'] = func_9654
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9654_call = mutated_mod.get_global_var('func_9654')
var_9656 = relay.var("var_9656", dtype = "float64", shape = (7, 12, 13))#candidate|9656|(7, 12, 13)|var|float64
var_9657 = relay.var("var_9657", dtype = "float64", shape = (7, 12, 13))#candidate|9657|(7, 12, 13)|var|float64
call_9655 = func_9654_call(var_9656,var_9657,)
output = call_9655
func_9658 = relay.Function([var_9656,var_9657,], output)
mutated_mod['func_9658'] = func_9658
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9154_call = mod.get_global_var('func_9154')
func_9156_call = mutated_mod.get_global_var('func_9156')
call_9660 = relay.TupleGetItem(func_9154_call(), 3)
call_9661 = relay.TupleGetItem(func_9156_call(), 3)
output = relay.Tuple([call_9660,])
output2 = relay.Tuple([call_9661,])
func_9670 = relay.Function([], output)
mod['func_9670'] = func_9670
mod = relay.transform.InferType()(mod)
output = func_9670()
func_9671 = relay.Function([], output)
mutated_mod['func_9671'] = func_9671
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9123_call = mod.get_global_var('func_9123')
func_9125_call = mutated_mod.get_global_var('func_9125')
call_9672 = relay.TupleGetItem(func_9123_call(), 0)
call_9673 = relay.TupleGetItem(func_9125_call(), 0)
uop_9685 = relay.cosh(call_9672.astype('float32')) # shape=(8, 3, 3)
uop_9687 = relay.cosh(call_9673.astype('float32')) # shape=(8, 3, 3)
func_9590_call = mod.get_global_var('func_9590')
func_9593_call = mutated_mod.get_global_var('func_9593')
var_9689 = relay.var("var_9689", dtype = "uint32", shape = ())#candidate|9689|()|var|uint32
call_9688 = relay.TupleGetItem(func_9590_call(relay.reshape(var_9689.astype('uint32'), [])), 2)
call_9690 = relay.TupleGetItem(func_9593_call(relay.reshape(var_9689.astype('uint32'), [])), 2)
output = relay.Tuple([uop_9685,call_9688,var_9689,])
output2 = relay.Tuple([uop_9687,call_9690,var_9689,])
func_9700 = relay.Function([var_9689,], output)
mod['func_9700'] = func_9700
mod = relay.transform.InferType()(mod)
var_9701 = relay.var("var_9701", dtype = "uint32", shape = ())#candidate|9701|()|var|uint32
output = func_9700(var_9701)
func_9702 = relay.Function([var_9701], output)
mutated_mod['func_9702'] = func_9702
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8639_call = mod.get_global_var('func_8639')
func_8640_call = mutated_mod.get_global_var('func_8640')
call_9734 = relay.TupleGetItem(func_8639_call(), 0)
call_9735 = relay.TupleGetItem(func_8640_call(), 0)
func_5993_call = mod.get_global_var('func_5993')
func_5996_call = mutated_mod.get_global_var('func_5996')
var_9761 = relay.var("var_9761", dtype = "float32", shape = (360,))#candidate|9761|(360,)|var|float32
var_9762 = relay.var("var_9762", dtype = "uint32", shape = ())#candidate|9762|()|var|uint32
call_9760 = relay.TupleGetItem(func_5993_call(relay.reshape(var_9761.astype('float32'), [3, 10, 12]), relay.reshape(var_9762.astype('uint32'), []), ), 4)
call_9763 = relay.TupleGetItem(func_5996_call(relay.reshape(var_9761.astype('float32'), [3, 10, 12]), relay.reshape(var_9762.astype('uint32'), []), ), 4)
func_7071_call = mod.get_global_var('func_7071')
func_7075_call = mutated_mod.get_global_var('func_7075')
var_9778 = relay.var("var_9778", dtype = "uint8", shape = (1152,))#candidate|9778|(1152,)|var|uint8
call_9777 = relay.TupleGetItem(func_7071_call(relay.reshape(var_9762.astype('uint8'), []), relay.reshape(var_9778.astype('uint8'), [16, 6, 12]), ), 2)
call_9779 = relay.TupleGetItem(func_7075_call(relay.reshape(var_9762.astype('uint8'), []), relay.reshape(var_9778.astype('uint8'), [16, 6, 12]), ), 2)
func_9654_call = mod.get_global_var('func_9654')
func_9658_call = mutated_mod.get_global_var('func_9658')
const_9791 = relay.const([-4.122866,-9.663465,-5.843637,4.404372,0.561917,1.546323,-4.791065,-7.101421,7.095750,-6.145170,-0.821126,3.744889,2.827850,-5.072563,-4.539796,3.295708,-8.386248,-4.528041,4.648285,4.426132,-9.334891,-3.733214,-0.046634,-2.038746,-5.058934,7.836329,5.566488,7.128487,-9.883545,6.522072,2.247446,8.793513,8.869495,-9.432741,-9.853515,2.455904,3.146983,2.942517,4.646455,1.165722,-1.060207,-2.910926,1.482264,-5.774614,4.319364,-5.253301,-7.667508,9.924061,8.005027,-9.743140,5.766446,5.902415,-6.245740,-8.546388,-8.457050,6.494924,-5.200474,5.203138,-2.406871,-2.861984,0.958818,-6.269479,-6.185489,1.427664,4.167694,4.351335,-9.801326,4.131972,1.600065,-8.420473,-8.056424,3.222461,0.615972,-8.459751,-0.956087,1.127384,-1.024951,-0.883445,8.242995,-0.489521,9.007022,1.855947,-8.951675,-8.423825,-5.110759,-2.290010,4.971596,-5.700693,-5.923934,-4.255798,0.672215,-8.383165,2.582145,-1.417516,4.302056,7.567814,3.663446,-9.936307,-0.136561,3.567032,4.748318,8.850890,4.743970,2.608585,-4.681602,4.100900,2.769994,2.321570,-4.486403,-6.702941,2.507916,-0.415590,-3.531766,-1.332410,-4.582088,-1.206043,4.195886,-0.667990,8.712007,-9.840102,6.926008,8.776246,-7.049847,6.391950,-9.751852,-0.685230,5.795269,-7.032852,5.509957,-0.340251,9.112945,6.502479,-4.129185,2.565517,7.321899,-5.086763,5.340770,6.195324,-3.196990,-9.388267,-5.678095,-2.151405,-1.432548,-7.585322,-6.751269,3.829489,8.513986,-9.301905,-1.168673,8.354834,-5.519490,-0.098482,5.463805,1.525004,-5.834735,-0.976460,-0.696372,-6.632605,-7.001234,-4.258051,-6.001362,-2.578956,-3.501009,8.714927,-3.976997,-5.014429,-7.563174,8.450740,-4.405743,-6.083973,-9.733491,-1.280760,4.168881,4.113268,3.239895,-0.908546,1.562463,5.478306,-7.886505,-5.217680,4.445790,6.400093,3.834186,5.494480,1.254140,-4.398347,-6.866760,-1.924458,-2.409331,7.904839,5.284547,6.716625,-3.522950,-1.605595,3.270078,-9.867317,3.673164,3.922609,-1.499563,-3.210593,-7.083449,3.347019,5.035997,-2.414363,-0.285490,6.432779,-8.623037,-7.829760,4.005975,2.819051,-2.090018,0.376440,8.362228,-5.762677,1.927291,9.355699,-5.387735,2.167516,-7.354469,3.520323,8.194082,-6.163863,0.651980,9.568029,9.233843,4.351141,-6.703674,7.497838,8.147562,2.457077,-3.187548,-3.560676,5.458860,9.139969,-3.037589,-1.219969,5.923768,4.418394,-8.493961,-0.754000,7.520603,1.918361,-8.738496,8.560831,-2.172868,6.166939,1.936472,6.240377,5.702726,-6.631460,8.635469,1.835364,2.180012,7.079897,8.066839,7.391718,-5.958516,-7.851689,1.543238,-6.366363,-3.243363,-7.067117,-9.288316,2.663643,-0.286669,3.874914,-3.351875,7.276888,2.696787,4.134982,-1.187063,0.631188,5.266999,8.367830,3.517591,1.023824,9.938134,3.336281,2.269275,9.554425,-3.892546,-3.394657,-1.531514,-5.242993,-8.822823,-0.037553,-8.388034,2.941964,-5.445369,-0.035016,2.684119,0.543177,7.253873,-4.241804,1.064848,6.797162,-5.253026,5.464698,7.978899,-3.701681,7.545021,-9.495615,-5.946111,-2.124880,-9.094462,-9.058542,-0.622768,8.836470,-8.572896,-4.370667,5.639040,0.015872,3.084706,-4.982110,-9.009282,9.018895,-5.124508,3.888641,7.023956,3.285090,-9.596129,4.797721,9.709922,-0.846872,-6.437826,-5.731250,-1.274624,6.709984,-5.696727,-0.952980,-8.574546,-8.472034,7.141355,2.651822,8.473010,8.011566,-2.138587,-6.703475,2.847360,0.968449,-6.058859,5.774817,9.691008,-6.469645,7.774277,-0.444165,-1.209758,-6.389881,-1.034103,0.714390,-5.540057,0.903993,8.630947,-8.356951,9.919240,7.918700,2.518188,-0.520252,6.080796,-3.390519,-6.643845,8.601837,-0.618574,-0.523845,3.823234,-8.497487,-3.850289,2.151465,-7.605331,-2.824688,0.421542,4.721036,1.880068,-1.683060,-9.900926,2.845135,4.759032,-9.501140,-3.034617,9.473840,-8.691622,6.794190,0.485566,-4.281492,-8.350162,0.677510,-0.282953,2.363143,3.717813,6.387873,-1.938374,-3.619099,6.304686,2.177328,1.239015,6.193646,9.406328,7.217742,4.666740,-7.914862,-5.760352,-9.508583,-6.713438,-7.640665,4.214110,4.939492,-5.854275,9.234596,-7.544717,0.493624,1.805813,0.588139,3.462852,-3.187893,0.267870,1.062888,-7.121639,-2.708018,1.654025,-3.764604,-3.664634,-9.867554,7.739556,-0.073594,9.037829,-6.961348,5.680602,8.283955,-9.065901,3.040777,-5.675941,6.530597,-7.914923,5.692825,7.177362,-8.672956,3.835618,-3.793415,3.453208,5.636620,7.480649,9.101920,1.815124,4.025143,-5.820563,1.585474,6.528810,-8.356267,1.203679,0.187519,8.491350,-9.610557,4.849035,-2.512326,-7.422680,9.557877,6.126864,-7.522951,7.098422,-4.703891,-8.786863,-5.198031,-3.943193,-3.708615,-6.436872,-7.116736,4.643905,-0.287090,-3.880735,5.522054,-9.392471,-9.083294,-1.659395,6.173972,-4.561170,8.663414,8.637530,2.964419,-4.405279,6.776774,6.609367,8.314820,0.911053,1.183594,-1.730413,-6.932106,5.213962,-9.479215,9.139609,7.874488,8.291709,-1.610605,-1.029624,-9.779434,8.272080,0.370293,-7.329328,-0.362702,4.550514,5.799162,-0.907527,-1.111043,-8.063992,2.448351,-4.149190,7.036438,-6.136469,4.735421,3.172422,5.897096,8.536544,-9.575140,6.472949,4.686947,-2.670910,-5.367860,-2.396203,0.107534,3.534034,-8.100873,8.815430,3.850811,-6.982815,7.827695,0.245266,-0.388608,3.502473,-9.428814,7.120982,9.244900,-8.771444,3.802188,6.597238,0.358492,8.415348,-6.866949,8.584340,-2.366796,-5.571466,-1.470867,1.913022,8.819108,2.149668,6.026945,4.392024,-8.275606,1.442935,4.950317,-2.285482,0.111501,-4.963573,0.664067,-9.766137,7.073158,8.840327,-0.075121,6.926016,4.301189,7.438892,9.973226,-0.561946,-1.388646,1.844573,-0.106750,-2.605547,-9.877979,7.964940,-9.580630,9.267485,9.677526,9.451481,3.067941,5.374575,8.937297,-0.298300,9.465720,5.816294,-8.217885,5.109270,-8.853446,-6.366985,1.604795,-2.955616,4.232125,3.249030,-1.495274,-9.881443,1.539908,1.366226,-9.700620,-3.236684,-4.015093,5.817805,-5.161298,3.302912,-7.017309,2.106643,1.735626,-2.699460,-1.490202,9.844447,-8.078444,-4.571572,9.229927,2.220211,9.742282,-5.840962,1.189134,-7.077304,-5.730375,-8.589902,-2.702890,-1.489768,-5.653872,-3.602128,7.467946,5.257577,-5.447966,6.432873,7.180093,0.358578,-9.356721,-7.441758,-9.022615,-7.187468,-0.485749,6.012251,-0.891519,8.260271,-8.606715,0.296485,8.137625,-7.376235,6.018038,-6.430988,-3.593677,0.545526,5.487099,-0.163723,9.996091,-5.702544,0.630030,-6.514536,-6.395260,-2.001820,8.172514,-3.725190,2.790507,-9.635796,-3.972364,6.129369,9.115537,-7.243670,0.052514,-1.319033,4.647799,-0.882599,-1.451238,-1.273340,-4.881118,-0.252386,4.567407,7.807715,2.183449,8.108285,-5.702645,-7.167714,6.436500,-3.408018,7.019592,3.011132,1.954822,5.629490,-2.915841,-9.082560,5.975130,0.624751,0.756880,7.404353,-2.845232,1.180801,7.989267,-6.607041,-9.878869,0.912131,0.173804,-6.663617,1.203930,9.035207,5.704140,-4.956453,-9.398877,2.737992,-6.604419,-6.455164,2.465400,6.487410,0.509245,-6.497378,-3.111186,4.327878,-4.179647,5.236560,9.146560,-7.123144,-6.609722,1.400555,-0.292749,7.354655,1.069283,5.943165,6.357885,-0.740751,7.632378,-4.538428,-6.550662,3.286643,3.400670,-9.069488,4.311909,1.721429,-5.503641,-0.793232,-8.137798,8.650387,6.604491,-6.839652,-2.084265,9.055588,9.476886,2.597438,7.210855,6.280133,9.324500,-7.239146,-6.917039,5.788174,-6.179986,6.363521,7.072792,5.735203,5.831366,2.865699,-8.255313,2.109191,-1.520417,2.544692,-5.242282,-3.350081,0.030564,-8.319075,-1.406324,-5.673258,-6.871811,6.082415,-7.924767,-6.896027,2.790467,0.026648,4.332256,8.580945,-9.742238,0.005621,0.560006,-2.023890,-4.939626,-6.435337,-9.417166,-6.900089,-5.900048,-1.087960,-6.714558,7.901256,-3.623147,6.572907,9.265734,1.801363,2.861375,-5.770539,-5.147910,2.306467,-0.600441,-1.152248,-5.705750,7.335102,-8.330775,-5.851939,-9.520071,-3.555112,-6.459383,-2.838119,7.202928,0.608182,2.820731,8.946983,0.003744,-9.767325,7.198976,-6.941017,1.366088,-9.417981,-2.859096,-6.951301,-3.488223,9.542401,-6.757760,2.306327,-4.887492,8.900427,-4.148224,8.824503,7.469123,2.846493,-8.795080,6.804039,9.615024,-9.223346,-6.340143,4.635948,2.784058,6.231875,-7.184406,5.179632,-5.483796,-1.312536,-9.943802,-4.053049,-6.060358,-6.983623,3.010598,-3.091824,7.955760,-6.782903,-6.710126,5.212094,2.587539,2.346527,2.099631,-3.843888,5.726462,-5.417255,-6.178239,-0.027290,8.863772,-5.744118,-2.139197,1.694923,9.293011,1.797614,7.395081,7.478626,5.632227,0.129921,-8.356724,-8.714485,-3.256854,8.901504,2.167234,0.099008,-9.177789,-8.205139,7.159309,-8.325143,0.049194,-0.342442,-9.318225,2.297192,-5.269993,-7.221048,-7.743393,7.486960,-4.843858,-6.060108,-3.716434,-8.982675,0.881673,8.688276,-0.788374,3.610323,8.938763,9.667729,0.720293,3.374179,2.970182,-1.463193,1.436233,-8.810045,-5.468673,0.825097,3.106875,9.197833,-5.616501,0.398972,4.899233,8.394179,-5.123238,-2.611345,4.983359,8.042619,-2.362945,3.061102,6.801687,9.405904,-3.551796,-7.115241,-5.809189,-7.499810,-4.776707,3.078774,-9.165840,-9.204708,8.762337,-7.252968,9.958935,8.126198,-9.817336,0.202108,3.412411,5.262888,7.920837,0.513617,-3.597331,6.556335,9.338393,-3.582324,1.923505,-1.428113,9.545098,7.739334,-6.784521,-1.592789,3.874189,4.845778,-9.349791,-3.339496,-1.302123,5.048331,5.916728,-6.586928,-1.668404,-7.530724,4.367393,-8.085821,-7.076356,8.840917,0.180835,9.524364,7.977813,1.517947,1.703722,-9.320906,3.826661,-0.648509,-8.756082,7.844228,6.410771,-9.111975,-5.986394,-6.596148,-1.487715,3.371141,6.541702,2.852036,8.927376,6.214990,-8.254601,5.480270,0.918536,6.610807,-6.602126,-7.864763,-7.881230,-2.391235,-8.217820,0.017062,0.662026,-2.239392,6.501103,2.635925,-8.201270,-7.803992,-7.235613,-5.002035,3.069251,8.358511,-7.835142,-4.772149,-2.363358,8.662012,3.248306,-9.623997,5.268116,9.375233,-8.061540,-6.934042,6.868060,6.065236,-6.334994,-8.254921,0.596749,2.758802,8.656912,7.020566,-2.694519,-7.921626,6.081526,-5.816194,2.144308,-3.592525,9.354244,-2.138418,0.194215,-8.252636,6.211615,4.079522,5.094565,-1.918026,-1.311699,-8.307525,-5.896593,-8.976965,3.157866,1.246375,4.480214,-7.052113,-3.005096,9.122374,5.805385,7.343047,-4.475435,9.336357,7.710896,4.967303,1.572983,-4.550050,-5.302838,-8.768940,-2.608181,0.761862,7.636770,-9.115581,-0.588079,3.219903,9.687919,1.767213,9.264722,5.112190,-6.735981,5.143728,8.648980,-0.375605,-1.270412,8.023169,-7.193234,-1.215636,3.681704,0.684330,8.730202,9.255480,3.446671,-4.474888,5.763031,2.845328,-4.548516,-4.090074,-9.212294,-9.175268,1.110972,0.414653,-6.010274,1.530101,-1.488252,8.312417,9.534081,7.898033,8.774451,7.452533,8.784484,2.205494,5.177516,1.285859,-3.214179,7.838395,-3.596918,7.176475,-4.315053,-3.592724,5.499233,-3.388293,-4.365109,7.057177,-9.818333], dtype = "float64")#candidate|9791|(1092,)|const|float64
call_9790 = relay.TupleGetItem(func_9654_call(relay.reshape(const_9791.astype('float64'), [7, 12, 13]), relay.reshape(const_9791.astype('float64'), [7, 12, 13]), ), 0)
call_9792 = relay.TupleGetItem(func_9658_call(relay.reshape(const_9791.astype('float64'), [7, 12, 13]), relay.reshape(const_9791.astype('float64'), [7, 12, 13]), ), 0)
func_8574_call = mod.get_global_var('func_8574')
func_8576_call = mutated_mod.get_global_var('func_8576')
const_9802 = relay.const([-6,-8,7,6,-6,-7,-8,-3,2,6,7,9,2,-2,-5,5,-1,-4,2,6,-6,2,-5,9,-5,9,10,1,-2,-9,10,-10,8,1,-3,7,8,-5,6,-10,-2,4,-9,-4,-10,1,8,10,5,-7,8,2,-7,9,-3,-6,-10,-7,-5,-3,5,-4,-3,-2,-4,1,-6,8,-9,7,-9,-7,5,-9,4,-5,6,-5,-2,9,9,-9,-2,8,-7,-3,10,-5,-3,-5,-6,9,10,3,2,-9,4,6,7,9,-9,-8,4,3,-10,6,9,-10,-9,10,-4,4,6,-6,-2,-9,-7,9,2,9,-10,-10,10,7,-2,3,-5,4,7,-6,-4,1,4,5,1,2,8,-2,1,-10,-6,10,1,5,-3,8,-8,9,6,1,-7,-3,-2,-5,-4,-7,7,-4,-1,-8,-1,-4,-3,2,8,-1,4,-1,-8,-3,-1,-5,-10,-9,-9,7,-1,-9,-5,-6,-4,-9,-8,9,7,8,-4,6,-5,5,10,-4,-5,7,-5,3,7,-10,-10,-3,-10,-5,-6,-8,-6,5,-5,8,3,9,6,9,-2,2,-9,3,6,4,8,2,-5,1,7,9,3,-8,-10,6,-6,-7,1,-4,5,10,-2,-9,-1,-8,-8,-6,6,1,1,-7,-6,-1,4,6,3,-5,10,3,-2,10,7,10,2,-9,-1,-1,3,-3,-7,-6,-7,-7,-5,-8,1,-7,-6,4,-2,-10,-1,9,-2,9,-3,2,-8,-7,-1,-9,7,-3,-7,-10,1,-2,-2,4,-1,-5,-10,4,-6,-2,-10,-1,1,9,-10,4,8,4,7,3,-1,-2,-5,-2,1,-10,-4,-9,5,-2,-4,6,4,-1,-8,-9,-5,1,-1,-3,-6,5,-3,7,-2,-3,-5,10,1,-10,-10,-7,2,-4,-2,5,-9,-9,5,-10,-5,5,4,-9,9,-3,8,3,-1,-3,4,-10,-8,-9,5,2,-4,9,-2,-2,-2,1,6,-2,-1,-9,-10,-1,-10,-1,-10,6,-10,2,7,-5,9,-9,-10,-2,-3,-7,10,3,-6,6,9,-8,6,1,3,2,-3,-7,-1,5,9,-9,8,8,6,10,5,4,-7,7,-2,4,-10,-10,1,5,7,-1,-5,1,-3,7,-10,-1,6,8,7,-5,2,-7,3,3,5,-7,4,-2,-10,5,9,-8,4,-5,8,7,7,5,6,-2,-3,-1,-8,4,-1,-7,-6,5,2,10,-2,-2,-9,-9,-4,-5,-9,-3,-1,-4,-5,5,7,-1,2,9,-6,-2,-7,-9,-3,9,3,8,9,8,-4,-5,-5,-10,-8,10,1,9,5,10,-4,-10,10,-3,-2,3,6,-9,-6,7,-1,8,-2,-9,-6,-5,-5,-1,4,4,-5,-6,-8,-3,5,10,8,5,6,-9,2,-7,8,3,-10,-2,5,9,2,-10,1,-2,-10,10,-2,10,-2,10,-5,-4,10,-3,5,-10,1,3,-10,2,1,-5,9,-6,4,-1,-10,3,4,-7,-5,3,5,-9,-10,-4,-1,5,-4,-2,-8,5,-9,-8,-4,9,1,7,-9,-10,7,3,3,-9,8,5,-4,4,1,-8,6,-6,1,-3,-2,-3,-7,5,4,-6,5,8,4,-5,-3,-1,10,4,-3,-4,-9,1,3,5,2,-2,5,-6,-2,-5,4,2,5,7,-2,-10,10,-9,9,-2,7,8,4,4,-7,-10,7,6,1,-10,4,6,-5,-7,-8,5,-1,-1,1,2,6,-10,6,-7,-7,2,10,5,2,10,-1,7,-10,-8,4,8,3,-3,1,-8,8,2,-7,-1,-1,8,6,5,-6,6,2,-1,9,6,3,-10,5,9,1,8,1,-3,3,-4,10,8,1,8,3,-1,9,1,3,5,-10,-5,1,1,-5,-3,-4,-6,-2,6,-10,4,-8,5,-5,-7,-1,9], dtype = "uint16")#candidate|9802|(728,)|const|uint16
call_9801 = relay.TupleGetItem(func_8574_call(relay.reshape(const_9802.astype('uint16'), [13, 14, 4])), 2)
call_9803 = relay.TupleGetItem(func_8576_call(relay.reshape(const_9802.astype('uint16'), [13, 14, 4])), 2)
bop_9805 = relay.bitwise_or(const_9791.astype('uint64'), call_9760.astype('uint64')) # shape=(1092,)
bop_9808 = relay.bitwise_or(const_9791.astype('uint64'), call_9763.astype('uint64')) # shape=(1092,)
output = relay.Tuple([call_9734,var_9761,var_9762,call_9777,var_9778,call_9790,call_9801,const_9802,bop_9805,])
output2 = relay.Tuple([call_9735,var_9761,var_9762,call_9779,var_9778,call_9792,call_9803,const_9802,bop_9808,])
func_9811 = relay.Function([var_9761,var_9762,var_9778,], output)
mod['func_9811'] = func_9811
mod = relay.transform.InferType()(mod)
var_9812 = relay.var("var_9812", dtype = "float32", shape = (360,))#candidate|9812|(360,)|var|float32
var_9813 = relay.var("var_9813", dtype = "uint32", shape = ())#candidate|9813|()|var|uint32
var_9814 = relay.var("var_9814", dtype = "uint8", shape = (1152,))#candidate|9814|(1152,)|var|uint8
output = func_9811(var_9812,var_9813,var_9814,)
func_9815 = relay.Function([var_9812,var_9813,var_9814,], output)
mutated_mod['func_9815'] = func_9815
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9271_call = mod.get_global_var('func_9271')
func_9273_call = mutated_mod.get_global_var('func_9273')
call_9854 = relay.TupleGetItem(func_9271_call(), 2)
call_9855 = relay.TupleGetItem(func_9273_call(), 2)
func_3648_call = mod.get_global_var('func_3648')
func_3650_call = mutated_mod.get_global_var('func_3650')
const_9857 = relay.const([[1.685262,-7.984879,-3.925118,-3.869791,7.126972,-9.533430,-4.781333,-4.550379,-6.581343,-2.831105,2.933594,1.030045,-1.688369,-7.254380,5.610196,6.262177,5.532583,4.000819,1.904390,-6.562518,4.440506,-4.561897,2.173629,3.290495,-6.214171,6.751793,3.628087,5.172798,8.871588,-3.646546,2.849236,8.276938,4.083192,-3.847491,-5.561060,6.749346,8.615222,4.734211,6.873142,8.137181,7.893142,6.770607,0.046239,-9.626292,-5.103629,2.133685,3.701547,-1.373624,7.912578,0.760522,1.475612,2.994956,-3.044547,-6.693230,5.030467,1.646860,-9.069996,8.712548,-1.336029,-5.268962,-5.699461,-6.103813,-2.566862,-1.935586,-3.800218,1.809352,9.901365,-6.854303,-2.831647,0.468766,-9.084133,-3.971702,7.805337,0.176049,2.010932,-0.460144,0.911356,6.422228,1.063395,-4.804566,3.252588,-4.664859,-9.503199,-1.440605,7.383833,9.985960,8.562133,-9.262926,5.703169,-5.769967,0.170490,5.371525,3.113461,-0.757182,-1.279659,-4.714182,-1.843493,-5.786640,-3.834070,9.843524,-1.581182,7.387680,-4.535205,-4.015179,2.001006,1.728963,6.587155,-9.620442,7.244614,-1.529662,4.635418,-3.215735,6.673728,-3.370050,4.732645,8.089689,-1.789560,9.162226,-6.216721,7.887579,-6.099271,-2.039890,1.798349,7.798983,8.294990,-2.471090,-2.166426,-3.428238,-6.939730,2.354825,6.638074,3.549958,-5.650537,-3.296162,7.488635,-1.727599,-2.806859,7.981389,1.701382,3.875832,-3.247552,8.986619,-2.496358,-6.067813,1.548189,-9.287784,-1.327856,-5.784288,9.542560,2.141333,-0.656470,-8.702657,-7.510419,-5.674512,-0.513630,-0.802876,-9.448925,-5.468511,-6.363835,9.577660,-7.841932,-6.716202,2.918881,6.104362,2.822678,6.308082,5.318453,8.702196,-9.610072,8.452000,0.106585,3.087423,-5.570106,-1.577561,9.011777,-3.474700,7.815245,-0.011138,6.983654,6.952874,1.063065,9.716895,3.185949,-3.906327,-9.877712,-6.757524,-3.004271,7.142997,1.742126,1.385473,7.314677,3.367344,-6.085060,-8.089622,0.021105,-4.782241,-0.337453,3.516504,-0.135298,4.845175,-2.776151,-7.381809,-1.123943,5.331163,4.934155,-4.363984,-2.237617,-8.682470,6.404155,-7.435286,-7.123372,3.743622,-0.220685,-9.675218,9.136770,-1.842464,-4.229132,-6.284352,-5.215091,-8.767068,-7.887573,7.026949,-9.691595,0.882298,-0.440644,9.428905,-3.000333,8.388369,3.637037,-1.656501,-1.483017,-7.625970,4.972320,3.915131,-5.269131,-8.965553,-2.672820,9.388585,4.093611,-2.058070,8.146856,-9.018361,7.757506,-9.255898,-1.280997,3.256638,7.479049,5.229942,-9.658227,9.453069,-1.738508,4.931364,1.873712,-9.427395,4.033154,-3.056085,-0.414269,-9.473852,-7.408202,-8.193219,8.011367,6.994832,-6.562193,-9.427578,4.734051,4.385886,4.240604,-1.020161,-4.392961,7.929884,-1.663179,-0.260501,-5.899181,-5.779123,5.450233,4.460515,-5.611886,-3.212246,8.859224,3.130630,-3.365882,5.840848,2.323801,-3.390325,-4.884962,6.164639,8.826588,3.169322,-6.035409,-8.742837,-2.977264,3.483474,7.964265,4.677731,-5.780373,9.106481,-7.768226,-7.688579,8.214073,1.259829,-4.431922,-3.765091,-8.954034,3.940536,7.806278,-6.713056,-1.959093,-8.815356,9.778184,-5.475868,-1.045100,-3.618524,-6.619227,-4.154197,8.140262,5.052463,-5.038734,1.664235,1.390988,5.129810,6.126164,6.919205,1.642924,4.740131,3.154336,-0.603631,5.226452,-6.904236,8.770071,7.651074,-2.337425,-2.108434,-4.583018,0.981775,8.255482,-7.408176,8.704311,-6.049045,9.866769,1.536201,9.158879,-0.576013,4.214748,2.233677,8.071324,8.406514,5.574047,-3.573790,-7.397396,-0.083835,1.093370,-3.322182,-6.352368,8.149253,-8.358558,-9.498083,7.791614,-6.210329,-6.412451,1.779538,4.467088,6.382596,6.997198,-9.260221,-4.199466,3.072413,-9.535545,-2.701783,-0.925613,-6.953161,-0.692665,-3.889013,-5.723539,-5.890304,-3.710151,-6.509002,9.441957,5.208973,-2.572803,-2.496786,-0.888702,-4.963281,6.304973,3.313710,-2.777981,-1.802995,-7.297314,-7.409593,3.166803,1.874508,6.704263,6.856633,-0.343220,6.981538,6.403695,8.545483,4.605560,-2.152079,-5.738972,-1.727552,6.705909,1.102315,5.753049,-7.122302,3.769343,8.781098,-9.583900,4.527408,0.848739,8.121945,-4.829250,-2.718091,-1.711938,-7.346157,-3.931311,9.247874,6.176040,7.050281,6.754826,3.203565,-8.677990,3.938734,-0.219812,0.361750,0.450214,-0.873850,8.751408,0.960070,8.001624,-2.466864,-1.644579,3.868369,-2.116846,-4.262299,9.479209,-3.608993,-3.208106,-5.626188,-2.314354,-7.964138,-6.977178,0.041994,2.720845,6.932799,-5.510308,-6.471673,0.975942,-4.298891,8.260284,6.749339,0.548684,-5.367769,9.078069,-9.726673,-4.670088,5.973655,0.211982,-4.998932,8.073778,8.058122,1.931801,-0.049108,5.684632,-6.538108,-5.991525,3.041762,-4.361026,9.022824,-8.953439,7.973001,7.807766,1.985979,-1.879100,0.907419,2.007749,0.968168,1.550180,-1.794004,6.011792,5.723265,-1.034189,0.665257,-8.130893,0.988308,-1.161115,0.597014,5.770699,-7.776088,-8.331078,-4.614768,-7.017929,-9.761811,9.791781,-0.517514,5.526690,-9.888774,0.377613,-3.464795,1.310664,-6.256585,7.183969,5.888835,9.031202,-7.348029]], dtype = "float64")#candidate|9857|(1, 504)|const|float64
call_9856 = func_3648_call(relay.reshape(const_9857.astype('float64'), [8, 7, 9]))
call_9858 = func_3648_call(relay.reshape(const_9857.astype('float64'), [8, 7, 9]))
func_1402_call = mod.get_global_var('func_1402')
func_1405_call = mutated_mod.get_global_var('func_1405')
var_9861 = relay.var("var_9861", dtype = "uint32", shape = ())#candidate|9861|()|var|uint32
call_9860 = func_1402_call(relay.reshape(var_9861.astype('uint32'), []))
call_9862 = func_1402_call(relay.reshape(var_9861.astype('uint32'), []))
output = relay.Tuple([call_9854,call_9856,const_9857,call_9860,var_9861,])
output2 = relay.Tuple([call_9855,call_9858,const_9857,call_9862,var_9861,])
func_9866 = relay.Function([var_9861,], output)
mod['func_9866'] = func_9866
mod = relay.transform.InferType()(mod)
mutated_mod['func_9866'] = func_9866
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9867 = relay.var("var_9867", dtype = "uint32", shape = ())#candidate|9867|()|var|uint32
func_9866_call = mutated_mod.get_global_var('func_9866')
call_9868 = func_9866_call(var_9867)
output = call_9868
func_9869 = relay.Function([var_9867], output)
mutated_mod['func_9869'] = func_9869
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8717_call = mod.get_global_var('func_8717')
func_8718_call = mutated_mod.get_global_var('func_8718')
call_9873 = relay.TupleGetItem(func_8717_call(), 0)
call_9874 = relay.TupleGetItem(func_8718_call(), 0)
func_3177_call = mod.get_global_var('func_3177')
func_3179_call = mutated_mod.get_global_var('func_3179')
var_9876 = relay.var("var_9876", dtype = "float64", shape = (24, 6))#candidate|9876|(24, 6)|var|float64
call_9875 = relay.TupleGetItem(func_3177_call(relay.reshape(var_9876.astype('float64'), [16, 9, 1])), 3)
call_9877 = relay.TupleGetItem(func_3179_call(relay.reshape(var_9876.astype('float64'), [16, 9, 1])), 3)
output = relay.Tuple([call_9873,call_9875,var_9876,])
output2 = relay.Tuple([call_9874,call_9877,var_9876,])
func_9884 = relay.Function([var_9876,], output)
mod['func_9884'] = func_9884
mod = relay.transform.InferType()(mod)
mutated_mod['func_9884'] = func_9884
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9885 = relay.var("var_9885", dtype = "float64", shape = (24, 6))#candidate|9885|(24, 6)|var|float64
func_9884_call = mutated_mod.get_global_var('func_9884')
call_9886 = func_9884_call(var_9885)
output = call_9886
func_9887 = relay.Function([var_9885], output)
mutated_mod['func_9887'] = func_9887
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8717_call = mod.get_global_var('func_8717')
func_8718_call = mutated_mod.get_global_var('func_8718')
call_9892 = relay.TupleGetItem(func_8717_call(), 0)
call_9893 = relay.TupleGetItem(func_8718_call(), 0)
output = call_9892
output2 = call_9893
func_9906 = relay.Function([], output)
mod['func_9906'] = func_9906
mod = relay.transform.InferType()(mod)
output = func_9906()
func_9907 = relay.Function([], output)
mutated_mod['func_9907'] = func_9907
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9670_call = mod.get_global_var('func_9670')
func_9671_call = mutated_mod.get_global_var('func_9671')
call_9964 = relay.TupleGetItem(func_9670_call(), 0)
call_9965 = relay.TupleGetItem(func_9671_call(), 0)
output = call_9964
output2 = call_9965
func_10003 = relay.Function([], output)
mod['func_10003'] = func_10003
mod = relay.transform.InferType()(mod)
output = func_10003()
func_10004 = relay.Function([], output)
mutated_mod['func_10004'] = func_10004
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8639_call = mod.get_global_var('func_8639')
func_8640_call = mutated_mod.get_global_var('func_8640')
call_10052 = relay.TupleGetItem(func_8639_call(), 0)
call_10053 = relay.TupleGetItem(func_8640_call(), 0)
func_9906_call = mod.get_global_var('func_9906')
func_9907_call = mutated_mod.get_global_var('func_9907')
call_10057 = func_9906_call()
call_10058 = func_9906_call()
output = relay.Tuple([call_10052,call_10057,])
output2 = relay.Tuple([call_10053,call_10058,])
func_10075 = relay.Function([], output)
mod['func_10075'] = func_10075
mod = relay.transform.InferType()(mod)
mutated_mod['func_10075'] = func_10075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10075_call = mutated_mod.get_global_var('func_10075')
call_10076 = func_10075_call()
output = call_10076
func_10077 = relay.Function([], output)
mutated_mod['func_10077'] = func_10077
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9123_call = mod.get_global_var('func_9123')
func_9125_call = mutated_mod.get_global_var('func_9125')
call_10099 = relay.TupleGetItem(func_9123_call(), 0)
call_10100 = relay.TupleGetItem(func_9125_call(), 0)
uop_10108 = relay.sigmoid(call_10099.astype('float32')) # shape=(8, 3, 3)
uop_10110 = relay.sigmoid(call_10100.astype('float32')) # shape=(8, 3, 3)
func_6085_call = mod.get_global_var('func_6085')
func_6087_call = mutated_mod.get_global_var('func_6087')
const_10123 = relay.const([[0.180043,-7.863570,-9.025430,-4.368204,-3.205661,-2.669910,-5.059821,-2.638082,3.990976,-1.217254,-6.378055,8.663505,-2.138916,6.423784,3.051520,5.598882,-7.673646,4.997416,-9.017116,7.934365,5.662066,6.551040,5.940644,-6.797345,8.930811,0.406359,3.721962,-8.846400,5.310309,-5.835522,3.210954,0.960485,3.831919,-7.653130,-1.079867,-6.354843,5.801025,-5.335345,-0.193057,-1.303820,8.482311,0.054516,-3.411803,8.527323,-6.161664,-4.368540,9.870200,2.322701,4.996083,-5.411314,9.980571,5.201204,8.185837,3.803873,-3.800330,9.595371,1.440270,7.171009,-1.220146,-7.271230,-4.822789,-0.706322,-6.048269,1.405755,-4.986067,-6.237081,-8.581214,-7.589701,9.748431,2.815646,7.972230,6.324984,-6.844958,-1.669612,4.693809,4.763448,-0.887821,-3.878303,7.805323,-2.968329,6.147366,6.455388,-7.016098,1.854598,2.779826,-5.374368,2.142997,-1.727921,-5.399682,-8.977123,8.604313,2.017191,-5.129178,-4.942425,8.442567,5.262670,5.709202,8.851612,-1.960544,4.751672,5.457237,3.932073,-7.870112,-4.877663,-0.559180,-3.925236,-4.150643,9.961309,9.380320,-6.769782,-5.399844,-5.983462,-0.581381,-3.777669,-2.086529,4.140129,6.689336,2.246906,-4.015220,-1.569514,-9.318691,-2.034402,-4.497309,0.779850,4.141592,5.747966,9.506699,-8.139822,9.892319,0.952988,-1.400760,3.753833],[1.167437,0.871317,9.948501,-5.695866,3.086680,-3.858449,4.950437,0.671905,-6.508609,-0.364572,-0.507043,8.585745,8.091470,-2.297284,6.565259,5.454932,-5.772417,-8.208597,-1.143425,8.556951,5.832654,-3.098191,-5.251304,-0.170584,-7.829865,-1.899111,2.689260,-0.051169,-7.631224,-3.390089,-8.287792,-1.557801,4.440265,-5.446461,-4.924798,3.603971,-9.311693,-6.871821,8.020095,7.341242,5.790286,2.115142,7.113453,-8.548708,-6.348899,-4.580813,-5.745283,4.696113,0.274936,-4.089110,1.793460,-9.473697,0.292090,-4.609989,0.051933,-2.542646,-1.016684,8.146650,7.522199,4.331229,-2.217292,-3.327136,2.105569,-9.305641,-0.489087,-4.389477,-1.944086,4.681331,9.650191,2.189358,0.996228,2.715854,8.190887,3.857365,-0.956817,-6.202370,-8.870033,-3.459938,-4.812677,3.821861,2.379776,-3.643080,-8.777909,7.604009,-1.280188,-6.527251,-9.872997,0.825803,-0.146116,-7.234090,9.221443,4.433011,4.392311,1.429902,6.822742,-2.890423,-5.709067,-9.145208,-3.271041,-2.442235,-0.194540,-6.893653,0.013042,-8.920305,2.271261,-3.066021,8.042824,-6.478558,6.807108,-5.279167,-4.224321,3.383514,-4.916477,3.752612,2.305148,9.800329,-9.616288,-7.719965,9.187610,4.669105,6.147948,3.996883,-5.260792,-1.596948,-6.496057,-3.774727,0.108249,8.806151,3.252889,4.270032,4.001777,9.146560],[-2.615130,0.133812,-9.628832,-7.372801,-0.712011,4.807467,-4.047942,2.064873,-7.696937,5.589070,4.061100,1.158838,-2.581895,-2.210788,8.245829,9.526334,4.046774,6.577512,-5.443442,-2.064408,-1.219997,9.281846,5.892868,9.153389,-4.871012,7.645000,0.676861,-5.057167,2.568358,3.557555,-0.444442,2.496901,3.418867,-6.865371,-7.724723,4.557876,-2.610951,9.961905,9.899674,6.316722,-2.050716,3.040948,-6.703055,8.056747,-6.895449,-6.346456,0.519741,9.382447,4.499396,-4.326208,-8.550366,-8.568024,-4.070793,-3.805095,-6.577333,2.097329,-1.971573,-2.813060,1.956483,6.519332,2.931178,-3.671575,5.236664,8.892144,7.546193,-3.750606,2.735835,-7.937258,8.464775,2.888201,9.269180,-5.006446,-4.786610,-1.012857,-5.320434,0.212594,3.950222,-4.424225,2.476923,4.292993,-4.951436,-8.598375,-2.119662,5.210378,2.274659,4.990637,-5.073753,3.503470,2.103614,-6.006235,4.570367,7.134382,5.914790,1.728117,2.183623,-0.342731,-8.398869,-2.675084,2.826918,-1.650972,-6.582767,8.858804,5.981391,9.143910,-4.040928,-1.136153,-9.305839,0.719143,-2.240849,-8.318757,2.337367,8.590684,-7.935904,2.605854,2.024718,-0.735417,1.235047,-7.576666,-0.887667,9.620452,0.391278,-1.073416,1.619922,-9.365637,-2.401822,-2.818530,1.947530,-3.253538,5.184423,1.479007,9.365841,-7.488604],[-7.115862,-6.048608,8.035803,7.950507,5.003713,-2.997050,0.332262,-1.012066,0.723078,-7.471278,-3.822442,-5.492449,-4.621538,4.316546,-2.160412,-0.170454,-2.916769,5.467446,6.847119,8.640804,6.365578,6.959321,-3.388211,-7.549440,-1.499818,-5.404277,6.287319,-9.439791,-8.564462,-5.836480,-3.015778,6.438363,3.552416,-1.846695,-4.817130,9.670705,3.750352,-8.311173,6.311010,3.642174,6.173093,-2.507583,6.804708,-5.642670,-0.919079,-9.401586,-5.593237,-2.794111,-0.375669,-8.706394,-4.413429,-9.742338,-1.190059,5.915718,-4.553435,-6.696013,-7.644343,-0.925219,6.058935,5.989938,6.694822,-9.517387,-0.786842,2.170837,5.241200,2.367178,-7.809305,4.988778,-8.840220,-7.600371,-0.903575,3.597506,1.718533,-4.522181,-1.998407,5.700848,2.705470,0.745814,-6.063124,-5.327975,-2.731720,2.515824,-1.530845,-5.436674,8.029458,9.835885,0.382868,-6.429319,-6.081668,1.850226,-5.755321,0.699326,6.716635,4.537226,5.612308,8.749877,7.875281,-4.041502,-8.687374,8.977628,6.817096,1.397816,5.473786,-6.920014,-8.965347,-5.761238,-1.192703,-2.052757,3.518155,9.191937,1.977048,-7.963544,4.508935,-1.484102,5.322699,9.590863,-6.844859,0.405246,-9.457102,-5.003112,-2.633656,0.221958,-1.164816,-6.566059,-5.060968,-8.649413,-3.077419,-5.124942,-6.707084,8.372707,-5.324952,-3.574320],[6.234621,-3.460718,9.358854,-4.968001,-5.857621,-0.962758,7.204318,-8.848422,-6.260878,-8.215131,5.290200,-1.954108,0.112329,-2.060188,-2.448718,4.475967,-5.534642,5.231081,-9.855042,1.096156,-1.302798,9.385411,-9.558609,4.883491,-7.519660,-7.239265,-5.314238,7.786378,-0.667695,-0.274118,3.390054,9.936732,9.135423,3.306416,-4.134673,-3.124667,0.479223,0.838962,1.370022,-6.096909,-8.511219,-6.720511,-2.580990,-1.535420,5.944674,6.416464,-7.213663,-4.977618,-1.187275,9.335037,7.032549,0.684458,4.884271,-9.499593,0.181375,1.644206,9.264360,-7.276175,5.082183,9.148943,8.245976,0.134465,0.421408,-4.589868,-7.318658,-3.951234,1.626036,-6.394655,-5.011831,-7.351419,2.826386,2.616601,5.239367,-9.452270,5.636848,5.422422,8.799024,-0.987840,-7.267976,-4.414704,3.749564,-5.282262,-5.064426,4.856318,-6.185979,-6.749722,8.307302,-8.678995,5.912465,-7.519658,-8.270236,-8.478737,-1.323173,-3.746199,9.915568,4.597461,-1.892244,4.645429,-5.971342,7.441762,-0.626714,1.631405,-4.012118,-6.648588,-7.934806,-9.677845,-6.099008,-5.901080,5.354643,-7.701973,6.634963,8.814700,1.574840,-3.587796,-6.857739,-3.158601,1.785487,-8.085908,-6.920419,-3.286087,1.276969,1.897998,0.221959,9.238245,0.429725,8.759808,1.214411,-0.067589,0.515117,0.072500,-5.182992,5.609455],[3.971466,3.064468,-1.582085,-8.350717,-3.293901,-0.293839,-2.298286,4.026259,9.307885,-6.828603,6.556202,8.134695,-4.194729,-2.682992,1.227730,-2.705963,-9.144854,-4.627022,9.874139,-4.105276,-1.849022,6.859358,-6.018458,-3.610279,7.156379,1.518769,7.661935,-4.425632,4.563116,9.088417,-9.224501,3.487651,4.882409,8.817466,-5.014923,6.363717,-7.573523,3.547063,8.162092,-2.254593,4.635850,5.247046,6.107887,-8.011053,7.734650,7.994816,2.993815,-4.960286,-8.323138,-5.224323,5.608296,3.624739,-0.510753,6.480675,4.224679,5.938932,4.712245,6.394366,-5.367184,6.840740,5.933335,8.525782,9.837044,-6.706932,1.184187,-6.070495,-8.775714,1.360797,3.432854,-9.767508,-8.028002,3.415359,-7.141293,-2.292483,-5.658893,-0.711984,-2.221487,-5.198159,7.765194,4.357151,4.243237,-8.890237,-4.044141,7.407883,-5.352497,-1.668493,6.369993,-1.068248,-4.012890,-1.239010,-1.414082,7.314657,-0.619619,-7.700059,-5.643689,-2.291184,0.606151,0.383262,-2.471597,2.781394,-7.309402,-6.660140,6.241185,9.977881,6.993836,-1.571421,4.282371,2.399758,-8.597261,5.819873,8.883391,-7.037545,-2.370968,-2.634545,-4.180209,2.727441,0.635087,-6.250604,-3.070392,3.758974,3.941649,1.969153,7.874026,-3.250344,-0.838492,-5.291335,-8.405991,0.602424,-5.997194,9.170880,2.573744,6.335785],[-2.897180,-8.151423,9.108669,2.657828,7.957538,8.262036,4.864053,-3.019461,-8.221584,7.320941,-1.711002,3.488464,0.368858,5.125390,-2.098579,3.229307,4.966010,3.911515,2.358999,0.687236,-8.679586,9.495421,3.028278,4.871229,-2.695660,-1.955296,6.712084,2.855578,-3.363590,-9.457312,1.220666,-1.558922,1.442161,-8.221926,-1.809395,6.931290,-9.777266,-3.086604,5.394704,0.560719,-1.672208,-8.633688,-3.990675,-6.092677,-3.097993,2.622724,8.477903,-5.341714,0.678044,1.964239,3.473942,-6.772752,-4.777456,5.109761,7.538458,3.966552,-7.080639,5.550394,-6.389594,3.812138,-0.904432,-3.325393,-3.496681,-6.799155,4.671814,5.120953,3.467321,5.977774,-2.323870,5.451565,4.396903,-4.719169,-2.182054,-8.623886,9.688534,8.393732,-3.300147,3.634447,6.832260,3.532508,-5.288736,3.863563,-1.206125,5.683393,6.101960,-8.532524,7.038454,-6.598409,2.838984,-9.271878,-9.033931,-2.853617,-0.368155,-4.466815,-6.115558,-9.170838,-6.498337,-8.074219,-0.975836,-2.740598,-5.758586,7.074564,3.311478,7.370389,-2.298137,4.022032,4.211485,-6.764830,-2.328583,1.086303,-7.698725,4.849867,0.363478,6.188606,9.879593,6.262541,7.584649,3.802096,-2.966931,4.233003,8.518566,-9.007294,-3.630721,-3.103137,7.216861,9.193898,9.300031,-3.521123,-0.073519,6.389789,2.267487,5.579741],[3.366635,0.721985,0.057362,-4.903191,-8.196186,-5.583581,8.451423,3.444132,-0.241887,-2.760139,1.316412,6.603595,7.695719,8.345781,8.430406,1.343690,6.970077,5.015709,1.053995,0.643284,-3.410838,-7.325806,-5.353354,-0.037276,4.723500,5.643911,0.246126,-9.780710,2.841035,-5.157911,8.648262,6.064206,-1.099456,0.608480,-0.665592,0.492149,-3.541557,8.842932,1.745311,-4.804693,-0.394243,7.070225,-2.386326,-5.081948,1.088631,-0.428546,-3.944657,-3.947530,-6.270479,-9.771907,-9.055265,5.878762,-1.322523,-6.743522,-3.054746,-8.314623,-5.784694,8.415697,0.290889,-3.388422,-4.273885,2.442003,-2.338165,9.342984,-6.755556,4.876296,-2.659121,0.042436,4.369465,-2.254900,-0.859947,8.776768,2.190729,9.975340,-8.200584,5.325303,2.469755,-0.840313,-4.355796,-6.577004,8.169545,-7.367381,0.309103,-2.800144,8.958345,-6.112681,8.600897,-7.759650,-1.726739,-3.058386,0.332960,2.547275,-3.572179,-3.157506,-1.258215,2.883892,-2.693798,0.388286,-5.311455,8.474124,-4.856706,2.294132,5.270646,-2.121556,-7.664431,-8.950587,7.328362,-8.997592,8.980699,-9.665869,3.295641,-6.593295,3.600688,6.537382,5.715029,8.026950,1.439925,-6.612610,-9.519778,-9.744254,3.479180,-3.973203,6.684985,-0.580000,0.217248,-7.792914,3.203770,2.400847,-6.020988,-7.674816,0.387974,5.344318]], dtype = "float64")#candidate|10123|(8, 132)|const|float64
call_10122 = func_6085_call(relay.reshape(const_10123.astype('float64'), [16, 11, 6]))
call_10124 = func_6085_call(relay.reshape(const_10123.astype('float64'), [16, 11, 6]))
uop_10136 = relay.sinh(const_10123.astype('float64')) # shape=(8, 132)
func_9654_call = mod.get_global_var('func_9654')
func_9658_call = mutated_mod.get_global_var('func_9658')
var_10149 = relay.var("var_10149", dtype = "float64", shape = (546, 2))#candidate|10149|(546, 2)|var|float64
call_10148 = relay.TupleGetItem(func_9654_call(relay.reshape(var_10149.astype('float64'), [7, 12, 13]), relay.reshape(var_10149.astype('float64'), [7, 12, 13]), ), 0)
call_10150 = relay.TupleGetItem(func_9658_call(relay.reshape(var_10149.astype('float64'), [7, 12, 13]), relay.reshape(var_10149.astype('float64'), [7, 12, 13]), ), 0)
func_9154_call = mod.get_global_var('func_9154')
func_9156_call = mutated_mod.get_global_var('func_9156')
call_10153 = relay.TupleGetItem(func_9154_call(), 2)
call_10154 = relay.TupleGetItem(func_9156_call(), 2)
func_9154_call = mod.get_global_var('func_9154')
func_9156_call = mutated_mod.get_global_var('func_9156')
call_10159 = relay.TupleGetItem(func_9154_call(), 0)
call_10160 = relay.TupleGetItem(func_9156_call(), 0)
func_9188_call = mod.get_global_var('func_9188')
func_9194_call = mutated_mod.get_global_var('func_9194')
var_10173 = relay.var("var_10173", dtype = "float64", shape = (14,))#candidate|10173|(14,)|var|float64
var_10174 = relay.var("var_10174", dtype = "float64", shape = (96, 1))#candidate|10174|(96, 1)|var|float64
var_10175 = relay.var("var_10175", dtype = "float64", shape = (286,))#candidate|10175|(286,)|var|float64
var_10176 = relay.var("var_10176", dtype = "float64", shape = (192,))#candidate|10176|(192,)|var|float64
call_10172 = relay.TupleGetItem(func_9188_call(relay.reshape(var_10173.astype('float64'), [14,]), relay.reshape(var_10174.astype('float64'), [1, 96]), relay.reshape(var_10175.astype('float64'), [286,]), relay.reshape(var_10176.astype('float64'), [2, 96]), ), 1)
call_10177 = relay.TupleGetItem(func_9194_call(relay.reshape(var_10173.astype('float64'), [14,]), relay.reshape(var_10174.astype('float64'), [1, 96]), relay.reshape(var_10175.astype('float64'), [286,]), relay.reshape(var_10176.astype('float64'), [2, 96]), ), 1)
output = relay.Tuple([uop_10108,call_10122,uop_10136,call_10148,var_10149,call_10153,call_10159,call_10172,var_10173,var_10174,var_10175,var_10176,])
output2 = relay.Tuple([uop_10110,call_10124,uop_10136,call_10150,var_10149,call_10154,call_10160,call_10177,var_10173,var_10174,var_10175,var_10176,])
func_10208 = relay.Function([var_10149,var_10173,var_10174,var_10175,var_10176,], output)
mod['func_10208'] = func_10208
mod = relay.transform.InferType()(mod)
var_10209 = relay.var("var_10209", dtype = "float64", shape = (546, 2))#candidate|10209|(546, 2)|var|float64
var_10210 = relay.var("var_10210", dtype = "float64", shape = (14,))#candidate|10210|(14,)|var|float64
var_10211 = relay.var("var_10211", dtype = "float64", shape = (96, 1))#candidate|10211|(96, 1)|var|float64
var_10212 = relay.var("var_10212", dtype = "float64", shape = (286,))#candidate|10212|(286,)|var|float64
var_10213 = relay.var("var_10213", dtype = "float64", shape = (192,))#candidate|10213|(192,)|var|float64
output = func_10208(var_10209,var_10210,var_10211,var_10212,var_10213,)
func_10214 = relay.Function([var_10209,var_10210,var_10211,var_10212,var_10213,], output)
mutated_mod['func_10214'] = func_10214
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10228 = relay.var("var_10228", dtype = "float32", shape = (9, 16, 7))#candidate|10228|(9, 16, 7)|var|float32
uop_10229 = relay.acosh(var_10228.astype('float32')) # shape=(9, 16, 7)
output = relay.Tuple([uop_10229,])
output2 = relay.Tuple([uop_10229,])
func_10246 = relay.Function([var_10228,], output)
mod['func_10246'] = func_10246
mod = relay.transform.InferType()(mod)
mutated_mod['func_10246'] = func_10246
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10247 = relay.var("var_10247", dtype = "float32", shape = (9, 16, 7))#candidate|10247|(9, 16, 7)|var|float32
func_10246_call = mutated_mod.get_global_var('func_10246')
call_10248 = func_10246_call(var_10247)
output = call_10248
func_10249 = relay.Function([var_10247], output)
mutated_mod['func_10249'] = func_10249
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9123_call = mod.get_global_var('func_9123')
func_9125_call = mutated_mod.get_global_var('func_9125')
call_10303 = relay.TupleGetItem(func_9123_call(), 0)
call_10304 = relay.TupleGetItem(func_9125_call(), 0)
var_10315 = relay.var("var_10315", dtype = "float32", shape = (8, 3, 3))#candidate|10315|(8, 3, 3)|var|float32
bop_10316 = relay.logical_and(call_10303.astype('bool'), relay.reshape(var_10315.astype('bool'), relay.shape_of(call_10303))) # shape=(8, 3, 3)
bop_10319 = relay.logical_and(call_10304.astype('bool'), relay.reshape(var_10315.astype('bool'), relay.shape_of(call_10304))) # shape=(8, 3, 3)
func_558_call = mod.get_global_var('func_558')
func_561_call = mutated_mod.get_global_var('func_561')
var_10321 = relay.var("var_10321", dtype = "float64", shape = (616,))#candidate|10321|(616,)|var|float64
call_10320 = relay.TupleGetItem(func_558_call(relay.reshape(var_10321.astype('float64'), [4, 14, 11])), 0)
call_10322 = relay.TupleGetItem(func_561_call(relay.reshape(var_10321.astype('float64'), [4, 14, 11])), 0)
output = relay.Tuple([bop_10316,call_10320,var_10321,])
output2 = relay.Tuple([bop_10319,call_10322,var_10321,])
func_10330 = relay.Function([var_10315,var_10321,], output)
mod['func_10330'] = func_10330
mod = relay.transform.InferType()(mod)
var_10331 = relay.var("var_10331", dtype = "float32", shape = (8, 3, 3))#candidate|10331|(8, 3, 3)|var|float32
var_10332 = relay.var("var_10332", dtype = "float64", shape = (616,))#candidate|10332|(616,)|var|float64
output = func_10330(var_10331,var_10332,)
func_10333 = relay.Function([var_10331,var_10332,], output)
mutated_mod['func_10333'] = func_10333
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9123_call = mod.get_global_var('func_9123')
func_9125_call = mutated_mod.get_global_var('func_9125')
call_10396 = relay.TupleGetItem(func_9123_call(), 0)
call_10397 = relay.TupleGetItem(func_9125_call(), 0)
output = call_10396
output2 = call_10397
func_10420 = relay.Function([], output)
mod['func_10420'] = func_10420
mod = relay.transform.InferType()(mod)
output = func_10420()
func_10421 = relay.Function([], output)
mutated_mod['func_10421'] = func_10421
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8681_call = mod.get_global_var('func_8681')
func_8683_call = mutated_mod.get_global_var('func_8683')
call_10428 = func_8681_call()
call_10429 = func_8681_call()
uop_10437 = relay.asinh(call_10428.astype('float64')) # shape=(8, 3, 3)
uop_10439 = relay.asinh(call_10429.astype('float64')) # shape=(8, 3, 3)
func_7739_call = mod.get_global_var('func_7739')
func_7741_call = mutated_mod.get_global_var('func_7741')
const_10452 = relay.const([-9.306607,4.195665,0.312959,-7.194632,-2.668384,-0.729891,-2.437658,1.452335,-1.017173,8.768608,-9.582853,0.674072,-4.205421,1.580087,5.445967,-4.058085,5.404321,-3.074310,-2.171267,6.448326,-6.957574,9.851848,-3.815565,8.960723,4.483775,9.960338,-0.098530,4.431449,-1.823094,-2.839282,-0.041725,2.210269,-6.830132,-7.097091,8.337105,7.373901,0.656622,-3.864393,4.613936,-1.684226,-5.145238,-9.869945,-5.976575,1.040160,2.940344,-6.010758,-9.196674,5.513991,-5.136367,-3.753367,-2.222309,7.064375,-8.038335,6.951808,3.244246,6.597189,-2.396540,-0.835219,0.567617,0.561026,-0.006286,-1.076042,6.986867,8.602331,8.987475,4.242732,-4.543012,5.500985,-0.248100,-3.908511], dtype = "float32")#candidate|10452|(70,)|const|float32
call_10451 = func_7739_call(relay.reshape(const_10452.astype('float32'), [7, 2, 5]))
call_10453 = func_7739_call(relay.reshape(const_10452.astype('float32'), [7, 2, 5]))
uop_10462 = relay.acos(uop_10437.astype('float64')) # shape=(8, 3, 3)
uop_10464 = relay.acos(uop_10439.astype('float64')) # shape=(8, 3, 3)
output = relay.Tuple([call_10451,const_10452,uop_10462,])
output2 = relay.Tuple([call_10453,const_10452,uop_10464,])
func_10466 = relay.Function([], output)
mod['func_10466'] = func_10466
mod = relay.transform.InferType()(mod)
output = func_10466()
func_10467 = relay.Function([], output)
mutated_mod['func_10467'] = func_10467
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9123_call = mod.get_global_var('func_9123')
func_9125_call = mutated_mod.get_global_var('func_9125')
call_10492 = relay.TupleGetItem(func_9123_call(), 0)
call_10493 = relay.TupleGetItem(func_9125_call(), 0)
func_9906_call = mod.get_global_var('func_9906')
func_9907_call = mutated_mod.get_global_var('func_9907')
call_10524 = func_9906_call()
call_10525 = func_9906_call()
func_7739_call = mod.get_global_var('func_7739')
func_7741_call = mutated_mod.get_global_var('func_7741')
var_10530 = relay.var("var_10530", dtype = "float32", shape = (70,))#candidate|10530|(70,)|var|float32
call_10529 = func_7739_call(relay.reshape(var_10530.astype('float32'), [7, 2, 5]))
call_10531 = func_7739_call(relay.reshape(var_10530.astype('float32'), [7, 2, 5]))
func_4391_call = mod.get_global_var('func_4391')
func_4396_call = mutated_mod.get_global_var('func_4396')
var_10538 = relay.var("var_10538", dtype = "bool", shape = (117,))#candidate|10538|(117,)|var|bool
var_10539 = relay.var("var_10539", dtype = "float32", shape = (84,))#candidate|10539|(84,)|var|float32
var_10540 = relay.var("var_10540", dtype = "uint32", shape = ())#candidate|10540|()|var|uint32
call_10537 = relay.TupleGetItem(func_4391_call(relay.reshape(var_10538.astype('bool'), [1, 13, 9]), relay.reshape(var_10539.astype('float32'), [84,]), relay.reshape(var_10540.astype('uint32'), []), ), 5)
call_10541 = relay.TupleGetItem(func_4396_call(relay.reshape(var_10538.astype('bool'), [1, 13, 9]), relay.reshape(var_10539.astype('float32'), [84,]), relay.reshape(var_10540.astype('uint32'), []), ), 5)
output = relay.Tuple([call_10492,call_10524,call_10529,var_10530,call_10537,var_10538,var_10539,var_10540,])
output2 = relay.Tuple([call_10493,call_10525,call_10531,var_10530,call_10541,var_10538,var_10539,var_10540,])
func_10543 = relay.Function([var_10530,var_10538,var_10539,var_10540,], output)
mod['func_10543'] = func_10543
mod = relay.transform.InferType()(mod)
mutated_mod['func_10543'] = func_10543
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10543_call = mutated_mod.get_global_var('func_10543')
var_10545 = relay.var("var_10545", dtype = "float32", shape = (70,))#candidate|10545|(70,)|var|float32
var_10546 = relay.var("var_10546", dtype = "bool", shape = (117,))#candidate|10546|(117,)|var|bool
var_10547 = relay.var("var_10547", dtype = "float32", shape = (84,))#candidate|10547|(84,)|var|float32
var_10548 = relay.var("var_10548", dtype = "uint32", shape = ())#candidate|10548|()|var|uint32
call_10544 = func_10543_call(var_10545,var_10546,var_10547,var_10548,)
output = call_10544
func_10549 = relay.Function([var_10545,var_10546,var_10547,var_10548,], output)
mutated_mod['func_10549'] = func_10549
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8639_call = mod.get_global_var('func_8639')
func_8640_call = mutated_mod.get_global_var('func_8640')
call_10556 = relay.TupleGetItem(func_8639_call(), 0)
call_10557 = relay.TupleGetItem(func_8640_call(), 0)
func_1402_call = mod.get_global_var('func_1402')
func_1405_call = mutated_mod.get_global_var('func_1405')
var_10564 = relay.var("var_10564", dtype = "uint32", shape = ())#candidate|10564|()|var|uint32
call_10563 = func_1402_call(relay.reshape(var_10564.astype('uint32'), []))
call_10565 = func_1402_call(relay.reshape(var_10564.astype('uint32'), []))
output = relay.Tuple([call_10556,call_10563,var_10564,])
output2 = relay.Tuple([call_10557,call_10565,var_10564,])
func_10571 = relay.Function([var_10564,], output)
mod['func_10571'] = func_10571
mod = relay.transform.InferType()(mod)
mutated_mod['func_10571'] = func_10571
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10572 = relay.var("var_10572", dtype = "uint32", shape = ())#candidate|10572|()|var|uint32
func_10571_call = mutated_mod.get_global_var('func_10571')
call_10573 = func_10571_call(var_10572)
output = call_10573
func_10574 = relay.Function([var_10572], output)
mutated_mod['func_10574'] = func_10574
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9123_call = mod.get_global_var('func_9123')
func_9125_call = mutated_mod.get_global_var('func_9125')
call_10648 = relay.TupleGetItem(func_9123_call(), 0)
call_10649 = relay.TupleGetItem(func_9125_call(), 0)
func_6204_call = mod.get_global_var('func_6204')
func_6209_call = mutated_mod.get_global_var('func_6209')
var_10651 = relay.var("var_10651", dtype = "float64", shape = (14, 1))#candidate|10651|(14, 1)|var|float64
var_10652 = relay.var("var_10652", dtype = "float64", shape = (96,))#candidate|10652|(96,)|var|float64
const_10653 = relay.const([-6.129249,-5.489532,4.481018,-5.628499,4.020102,-3.432018,-5.426006,1.683126,-0.323922,7.907261,3.681532,3.216230,-0.950132,1.211800,4.156401,4.775266,-3.949207,0.386685,2.845366,-9.786426,-4.955283,-3.475604,4.225931,3.005824,-7.519888,2.105197,-3.032065,5.385381,9.049151,-5.134418,-7.888782,-4.962011,9.507461,-2.304592,-1.293560,1.427913,1.024935,4.785404,8.263889,9.077094,2.560566,9.782763,7.711792,-4.908097,2.914365,-0.927215,2.638244,1.938123,-4.608169,8.555530,-4.053042,6.398896,-5.771979,0.180430,6.160466,0.062117,9.654719,-9.122778,-6.397107,0.392558,5.304206,9.090920,6.908008,4.868383,-6.946054,-9.127685,-5.468063,-6.062199,-2.043561,-5.550864,-4.716058,-9.011522,9.157850,0.318947,6.780565,1.380251,-3.987048,3.136405,9.267412,9.670787,8.778176,0.230020,5.626132,7.522382,0.400746,9.791695,9.619238,9.423625,-9.769435,-2.498989,0.940090,-0.355877,-7.369380,3.964677,-2.364253,8.849020,-6.486091,8.588631,4.226483,5.036859,2.289957,-9.960238,-1.977340,1.693084,-2.432103,8.634091,7.133453,6.876864,1.624957,-8.714060,2.009870,-1.905355,-5.480554,5.222026,-8.841809,-4.843337,7.582765,-7.404295,-5.954302,-4.356714,-5.514339,-6.120505,9.246837,1.420800,8.452920,8.954583,-6.004105,-1.253049,7.344974,-6.797670,4.457538,2.548207,7.086316,-9.543590,8.300096,9.774184,-0.168228,-1.800997,5.778616,0.249696,3.162461,-0.971578,-5.776768,-8.514627,-5.334346,5.946037,4.709692,1.786618,-4.420849,-6.512209,-0.738184,3.282997,0.476616,0.529429,-4.852149,5.484941,1.036331,0.624385,8.968353,5.465611,-4.511422,7.486588,-9.232438,-9.702974,-8.712437,-3.681514,-6.697598,-1.037186,6.378560,0.279427,-8.118031,2.775358,-8.496499,1.426034,-4.181309,9.889084,4.922659,-7.008251,1.659903,-1.629811,0.404843,1.504336,7.343670,-1.340561,4.679677,-7.106614,-0.953785,1.460675,-4.306369,-3.448616,4.231087,2.806080,-5.054019,-2.514027,-7.433215,-8.217594,-1.269944,-1.447388,7.128664,-5.641968,-6.957450,-3.870659,0.385339,3.126627,-1.261446,-5.628440,2.818768,-0.475380,-4.698288,-6.714712,6.765418,-7.876453,-0.514735,4.611289,7.837004,-8.701114,-8.963600,1.312516,-7.521465,9.798486,-5.769794,-5.920850,8.783393,-6.487910,-8.422115,6.404372,1.170838,1.825342,-6.642293,8.052952,-9.549535,6.993018,-6.686544,-9.378274,5.395502,9.864876,-5.590215,2.121489,-0.689881,2.564204,-2.487650,-6.216727,-1.982501,0.654236,4.350824,3.919619,-4.601808,-1.724267,3.209510,6.462433,6.550503,-1.754834,5.556293,6.833360,8.679289,-4.849967,3.829793,2.971122,-6.191074,-4.740937,9.564229,5.042246,-6.584220,-7.354844,6.063536,-1.220045,-8.332344,-7.222946,5.309196,8.842464,-2.726382,-1.866440,1.547957,3.520507,2.206324,8.364105,6.457455,-7.825897,-2.908318,6.735886,7.908175,-0.450646,3.147273,2.080622,7.752402,9.527581], dtype = "float64")#candidate|10653|(286,)|const|float64
call_10650 = relay.TupleGetItem(func_6204_call(relay.reshape(var_10651.astype('float64'), [1, 1, 14]), relay.reshape(var_10652.astype('float64'), [96, 1]), relay.reshape(const_10653.astype('float64'), [286,]), ), 1)
call_10654 = relay.TupleGetItem(func_6209_call(relay.reshape(var_10651.astype('float64'), [1, 1, 14]), relay.reshape(var_10652.astype('float64'), [96, 1]), relay.reshape(const_10653.astype('float64'), [286,]), ), 1)
bop_10656 = relay.bitwise_xor(call_10650.astype('uint16'), var_10651.astype('uint16')) # shape=(14, 504)
bop_10659 = relay.bitwise_xor(call_10654.astype('uint16'), var_10651.astype('uint16')) # shape=(14, 504)
output = relay.Tuple([call_10648,var_10652,const_10653,bop_10656,])
output2 = relay.Tuple([call_10649,var_10652,const_10653,bop_10659,])
func_10663 = relay.Function([var_10651,var_10652,], output)
mod['func_10663'] = func_10663
mod = relay.transform.InferType()(mod)
mutated_mod['func_10663'] = func_10663
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10663_call = mutated_mod.get_global_var('func_10663')
var_10665 = relay.var("var_10665", dtype = "float64", shape = (14, 1))#candidate|10665|(14, 1)|var|float64
var_10666 = relay.var("var_10666", dtype = "float64", shape = (96,))#candidate|10666|(96,)|var|float64
call_10664 = func_10663_call(var_10665,var_10666,)
output = call_10664
func_10667 = relay.Function([var_10665,var_10666,], output)
mutated_mod['func_10667'] = func_10667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10420_call = mod.get_global_var('func_10420')
func_10421_call = mutated_mod.get_global_var('func_10421')
call_10675 = func_10420_call()
call_10676 = func_10420_call()
func_9811_call = mod.get_global_var('func_9811')
func_9815_call = mutated_mod.get_global_var('func_9815')
const_10678 = relay.const([0.830029,-9.730011,-0.433953,-1.361809,2.437550,8.039161,-7.609377,2.441579,6.764963,9.695133,-9.723167,0.156512,-9.026605,4.021140,-9.542518,0.406669,9.585141,-5.604836,-4.564856,4.254905,7.508050,9.893792,-6.335649,5.545135,-2.415030,-4.016346,-4.731572,1.228686,4.149342,7.206459,8.294092,8.296656,-1.303270,-4.548030,-8.283029,8.001167,-5.720014,-3.649802,8.156455,-9.788890,-2.520149,-2.126652,-7.261465,3.854207,-2.467718,-3.033863,3.198571,-5.831611,2.908803,0.766813,-9.581886,4.166782,0.428001,4.232585,5.694900,0.201978,-9.309651,8.637346,9.413242,-5.756569,0.893632,6.632993,4.742711,-7.699882,-6.261960,-3.514854,-4.281619,-1.747390,3.351415,-3.857858,9.554168,-7.366009,8.184937,0.616898,5.869840,-1.179695,-3.082394,3.219626,4.348634,-4.128612,4.343838,-1.758830,-3.096947,-5.436302,8.570124,0.969984,-5.119870,-5.591821,7.057050,-6.090290,-6.704668,1.797317,-0.536242,-0.932291,-0.216176,4.194461,9.600751,-8.402502,-5.766014,-8.830947,1.833034,3.246655,1.926158,-5.671525,1.379406,6.494863,1.051736,-8.847004,-2.993119,-1.085327,6.633989,-8.239360,9.497677,-2.590728,6.142752,2.524087,-4.043920,-0.688800,2.360446,-4.911295,8.858388,-8.362884,-9.852084,-4.867355,5.294766,-2.063151,0.196592,6.617963,0.239139,-8.268513,-7.231684,2.927103,-9.402719,7.094675,-5.024609,-6.062249,4.996072,7.563206,0.982373,-5.762243,-3.925583,6.725831,-1.731755,-7.381579,1.122772,-8.677842,3.635313,-9.068121,-4.546752,4.063805,-1.049285,-6.817900,-4.111220,5.742989,-4.188904,-6.454904,-5.595144,-4.474665,-5.138621,-7.297666,9.586961,-0.484364,0.141881,7.614180,-7.723605,-4.235121,-3.300335,-3.737930,-5.104528,4.261352,-3.711270,1.870507,7.282988,2.757292,0.455746,8.889961,-9.285305,4.972089,5.962038,3.989399,0.935340,-9.904433,5.500868,-3.210756,-5.760075,-8.502657,9.340970,-2.028583,4.336421,-3.794038,6.393928,9.819923,9.908221,5.645274,2.188798,-9.709114,7.889898,3.983364,-1.684929,-8.823300,4.308099,3.866430,5.059264,5.613170,9.161808,0.733063,-6.319233,-5.144245,6.415071,-9.026948,0.682476,8.768801,4.879882,0.515700,-5.886826,-6.994523,-7.801678,-1.273717,0.654648,-4.314960,3.149089,-5.906716,-6.658235,-8.676133,-4.988843,7.317209,7.146048,-9.469880,5.131103,-5.326028,-6.544532,4.976700,-4.382674,-9.151760,9.043427,-7.440697,-1.791423,-5.879483,-0.180656,-0.613219,7.958984,-4.794508,-3.923198,0.804112,-7.017042,5.317069,8.699753,0.699362,-8.429119,1.747468,-5.385073,-2.926329,-8.003839,7.540142,8.805387,-1.457210,3.726000,-9.394590,0.287283,1.041091,7.356268,-6.005565,1.444591,4.405800,1.266551,-1.308350,-5.448283,-9.926186,6.315142,7.997434,7.314452,-9.866269,-7.981485,-0.989732,-0.288911,7.271564,-2.027147,-4.606437,0.267665,9.852889,7.175200,-4.625766,4.350898,-7.590652,1.757704,3.692868,4.119288,3.782999,-4.220206,-1.166574,-5.503731,0.414120,9.441722,-4.064483,9.873896,-3.130690,6.947554,-4.379250,0.863570,-5.351993,2.701044,-3.893964,8.602963,-7.277400,0.380116,-3.818172,8.697837,6.147442,-2.472123,4.607349,4.903087,-4.998886,3.396927,3.729104,3.406601,0.814273,-6.487596,-0.041420,4.727890,7.362728,4.434731,-3.693488,4.454049,2.020595,-6.065494,3.383265,-0.629518,-2.937453,3.186564,5.262407,2.299617,2.808534,-8.962645,9.702341,-1.587519,-9.173775,2.390246,-1.600146,-0.048793,-4.185285,1.463656,5.819066,0.477597,1.006814,2.687264,6.923712,6.601758,-1.787181,-6.074408,2.013173,2.256750,-0.976680,9.151436,8.659804,1.130516,-3.169801,-3.152706,-7.139033,5.481008,-2.923445], dtype = "float32")#candidate|10678|(360,)|const|float32
var_10679 = relay.var("var_10679", dtype = "uint32", shape = ())#candidate|10679|()|var|uint32
var_10680 = relay.var("var_10680", dtype = "uint8", shape = (1152,))#candidate|10680|(1152,)|var|uint8
call_10677 = relay.TupleGetItem(func_9811_call(relay.reshape(const_10678.astype('float32'), [360,]), relay.reshape(var_10679.astype('uint32'), []), relay.reshape(var_10680.astype('uint8'), [1152,]), ), 6)
call_10681 = relay.TupleGetItem(func_9815_call(relay.reshape(const_10678.astype('float32'), [360,]), relay.reshape(var_10679.astype('uint32'), []), relay.reshape(var_10680.astype('uint8'), [1152,]), ), 6)
func_1961_call = mod.get_global_var('func_1961')
func_1963_call = mutated_mod.get_global_var('func_1963')
var_10690 = relay.var("var_10690", dtype = "float64", shape = (864,))#candidate|10690|(864,)|var|float64
call_10689 = relay.TupleGetItem(func_1961_call(relay.reshape(var_10690.astype('float64'), [8, 9, 12])), 1)
call_10691 = relay.TupleGetItem(func_1963_call(relay.reshape(var_10690.astype('float64'), [8, 9, 12])), 1)
output = relay.Tuple([call_10675,call_10677,const_10678,var_10679,var_10680,call_10689,var_10690,])
output2 = relay.Tuple([call_10676,call_10681,const_10678,var_10679,var_10680,call_10691,var_10690,])
func_10693 = relay.Function([var_10679,var_10680,var_10690,], output)
mod['func_10693'] = func_10693
mod = relay.transform.InferType()(mod)
mutated_mod['func_10693'] = func_10693
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10693_call = mutated_mod.get_global_var('func_10693')
var_10695 = relay.var("var_10695", dtype = "uint32", shape = ())#candidate|10695|()|var|uint32
var_10696 = relay.var("var_10696", dtype = "uint8", shape = (1152,))#candidate|10696|(1152,)|var|uint8
var_10697 = relay.var("var_10697", dtype = "float64", shape = (864,))#candidate|10697|(864,)|var|float64
call_10694 = func_10693_call(var_10695,var_10696,var_10697,)
output = call_10694
func_10698 = relay.Function([var_10695,var_10696,var_10697,], output)
mutated_mod['func_10698'] = func_10698
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10420_call = mod.get_global_var('func_10420')
func_10421_call = mutated_mod.get_global_var('func_10421')
call_10723 = func_10420_call()
call_10724 = func_10420_call()
func_10246_call = mod.get_global_var('func_10246')
func_10249_call = mutated_mod.get_global_var('func_10249')
var_10729 = relay.var("var_10729", dtype = "float32", shape = (1008,))#candidate|10729|(1008,)|var|float32
call_10728 = relay.TupleGetItem(func_10246_call(relay.reshape(var_10729.astype('float32'), [9, 16, 7])), 0)
call_10730 = relay.TupleGetItem(func_10249_call(relay.reshape(var_10729.astype('float32'), [9, 16, 7])), 0)
func_10693_call = mod.get_global_var('func_10693')
func_10698_call = mutated_mod.get_global_var('func_10698')
var_10740 = relay.var("var_10740", dtype = "uint32", shape = ())#candidate|10740|()|var|uint32
const_10741 = relay.const([8,-8,-7,6,2,-10,-2,-9,3,-9,-8,-7,-2,9,7,-6,-4,-6,5,-9,-7,-10,-7,5,-4,2,9,-10,-2,-10,-5,-3,-3,9,1,4,9,9,6,6,8,1,-9,-8,-2,-1,-9,5,1,9,-4,-2,-1,-10,4,-7,6,-2,1,-8,-10,-9,3,-10,-9,-10,4,-9,4,-1,5,-1,-8,-8,2,-3,6,3,5,6,2,9,8,2,7,-8,-3,-3,-1,1,10,-6,-5,8,2,-6,-9,-4,-2,9,-2,-10,-8,-8,-8,2,5,8,9,-2,1,-9,2,9,10,1,-7,-6,8,5,7,5,7,3,-1,-1,2,5,1,-6,-2,-2,-10,5,6,-3,7,-4,3,-4,-2,-9,3,6,7,-7,-9,-9,9,6,-6,-6,-8,9,10,8,-8,-6,-8,-9,6,-6,-4,5,-1,-9,-1,1,-7,-3,-6,9,-5,-9,1,9,-3,-4,10,-2,-2,9,6,-3,2,10,-6,-6,-5,-5,2,-4,7,-3,7,1,6,3,1,5,-3,-3,-5,9,1,-8,7,9,-2,-2,-10,8,-2,8,-6,-7,9,7,7,3,1,-3,5,-2,-6,6,7,2,5,-5,4,-2,-1,6,-7,8,-2,4,-6,-4,1,8,4,-9,1,-9,-5,-7,-2,-4,2,4,-6,-3,5,5,-5,-5,-5,7,-10,3,9,-2,3,-7,2,10,2,-10,-1,6,-10,-7,7,4,-2,3,-7,2,4,8,5,-4,1,5,-1,-10,-1,-9,-10,-6,-10,-4,5,-10,7,5,-5,-8,-4,-10,5,-9,6,-7,-1,-1,-3,9,-2,8,-4,-1,3,7,4,2,9,8,-9,2,-9,2,-9,-3,-9,-10,4,-6,-3,-2,-10,8,8,-5,-2,-1,-1,4,-4,-10,-8,10,2,-6,-8,-5,7,-10,-1,5,5,6,-9,-5,-7,-9,-5,-6,-4,-5,-3,3,-4,-6,-9,10,-7,9,7,10,-10,1,-8,6,1,4,-2,5,-9,10,-4,-1,5,8,5,9,6,5,-7,6,2,4,-7,7,2,6,-8,-8,9,6,-7,-1,5,9,-5,-1,-4,-1,2,1,-7,-1,-5,7,-8,-10,-8,-7,5,6,-10,-8,-10,7,9,9,4,1,8,5,-1,-10,-6,-3,-3,-2,5,-7,-1,10,-2,-5,8,10,-4,-1,-10,5,8,-6,8,-3,-7,10,5,-5,-9,-5,-8,3,2,6,-5,-5,-2,3,8,-3,-6,-1,4,-10,-8,-2,-2,8,-8,-5,7,7,2,9,6,4,-6,-5,-3,-7,-1,-9,1,6,-2,-4,10,10,1,-1,3,3,10,-4,-2,-6,-8,-6,10,10,-3,-5,-6,-5,6,6,-1,3,-6,4,5,-2,3,-4,10,-9,8,7,8,-3,-8,-6,-9,-10,-5,4,4,-5,-4,2,-4,-8,-4,8,-7,-10,3,5,4,-8,10,1,10,1,-4,9,-5,-2,-3,4,-3,-6,10,-8,-7,-5,8,2,-9,-3,7,3,-10,2,-7,-5,1,-7,-5,7,-1,2,6,9,-9,2,-2,-10,2,-8,-8,-9,6,-10,-3,4,9,3,-10,-3,-3,-4,2,9,-6,2,2,5,-9,1,-3,-4,-3,-8,-1,3,-9,-1,1,-4,-9,-4,-10,-10,-5,-1,-10,-1,-3,-7,3,8,-6,-3,-1,7,5,-2,10,6,-7,-6,-3,9,7,2,-3,-1,1,8,-1,3,-6,-3,-9,4,7,2,-8,-7,4,-4,-10,-7,-9,3,2,7,1,6,2,-7,-3,-8,7,-3,-5,-9,4,-7,1,-2,-6,-2,-1,-8,-2,2,3,4,7,2,-6,8,6,-2,5,-1,3,9,-2,6,1,7,10,-5,-1,-1,-5,7,-4,8,3,10,3,-9,-6,10,7,-3,-1,5,5,-10,-5,-4,8,-8,-3,6,-8,4,-3,3,-4,-6,7,8,9,6,9,-5,-4,-7,-3,-7,-1,5,7,-4,6,-7,-3,-9,-5,8,-5,-10,-6,-9,3,10,-7,5,-4,-5,9,7,9,4,-1,7,-3,-6,-7,10,1,1,6,3,7,2,10,-7,5,2,-4,-3,-9,8,6,-5,9,-6,-3,6,-9,-3,-10,-9,-2,3,1,2,5,-5,1,9,-5,6,-3,6,-3,-2,-1,-9,1,10,-10,-1,4,7,5,5,8,-8,4,-5,-6,1,6,-2,-4,9,7,-8,-6,-6,8,1,-3,-8,-6,5,10,9,5,-2,-6,-10,1,-3,2,7,3,7,8,4,-2,6,-4,-9,8,8,4,-8,10,1,-3,4,-6,-1,-10,-8,3,-2,9,-7,-5,-5,-5,-4,-6,-6,1,2,-3,-4,9,3,6,-10,9,5,2,-2,5,-3,9,10,1,9,-7,7,5,-8,9,5,5,3,10,-6,1,5,-3,2,-7,10,-6,-9,-10,1,5,7,-7,-7,6,-3,-5,9,-5,1,-3,-7,-9,1,5,9,1,-10,-6,9,-10,-1,3,2,10,-2,-6,4,-5,-7,1,10,3,2,7,-3,4,-2,1,-4,9,4,5,3,6,-2,-7,9,-4,-1,-2,8,8,4,-5,-10,4,-2,-5,9,-6,-6,-5,2,8,10,10,8,9,-7,10,-9,-5,-3,5,-10,5,1,-3,-9,8,2,9,-6,-10,1,4,4,10,-10,9,3,9,6,-8,-4,-6,6,6,4,-9,-8,4,2,9,-8,-5,-6,6,6,-9,-2,-7,-2,10,-9,-10,2,8,1,-10,-8,9,-9,6,-9,-6,-1,9,3,1,10,10,-9,-8,8,9,-10,1,-3,5,-3,-3,1,10,-1,8,4,3,-6,4,-8,-1,-1,-10,-9,-6,-3,7,-1,9,-9,5,-7,-9,-9,9,3,-6,10,9,-10,-2,-4,-8,-7,8,8,-1,4,-7,2,10,4,2,-1,-5,-5,-3,-7,5,10,4,-9,-2,-7,-5,5,-6,1,-4,8,3,-8,4,7,-3,-7,6,4,-10,-7,9,10,10,3,6,-5,7,-5,-1,2,-1,3,-4,7,5,9,-5,-1], dtype = "uint8")#candidate|10741|(1152,)|const|uint8
var_10742 = relay.var("var_10742", dtype = "float64", shape = (36, 24))#candidate|10742|(36, 24)|var|float64
call_10739 = relay.TupleGetItem(func_10693_call(relay.reshape(var_10740.astype('uint32'), []), relay.reshape(const_10741.astype('uint8'), [1152,]), relay.reshape(var_10742.astype('float64'), [864,]), ), 1)
call_10743 = relay.TupleGetItem(func_10698_call(relay.reshape(var_10740.astype('uint32'), []), relay.reshape(const_10741.astype('uint8'), [1152,]), relay.reshape(var_10742.astype('float64'), [864,]), ), 1)
uop_10750 = relay.erf(var_10742.astype('float64')) # shape=(36, 24)
func_9866_call = mod.get_global_var('func_9866')
func_9869_call = mutated_mod.get_global_var('func_9869')
call_10752 = relay.TupleGetItem(func_9866_call(relay.reshape(var_10740.astype('uint32'), [])), 4)
call_10753 = relay.TupleGetItem(func_9869_call(relay.reshape(var_10740.astype('uint32'), [])), 4)
func_1402_call = mod.get_global_var('func_1402')
func_1405_call = mutated_mod.get_global_var('func_1405')
call_10754 = func_1402_call(relay.reshape(call_10752.astype('uint32'), []))
call_10755 = func_1402_call(relay.reshape(call_10752.astype('uint32'), []))
uop_10766 = relay.atanh(uop_10750.astype('float32')) # shape=(36, 24)
func_5317_call = mod.get_global_var('func_5317')
func_5321_call = mutated_mod.get_global_var('func_5321')
const_10771 = relay.const([3,-6,-3,-8,-1,6,9,6,-4,-8,4,2,-9,6,9,5], dtype = "int32")#candidate|10771|(16,)|const|int32
call_10770 = relay.TupleGetItem(func_5317_call(relay.reshape(call_10739.astype('int32'), []), relay.reshape(const_10771.astype('int32'), [16, 1]), relay.reshape(var_10729.astype('float32'), [1, 1008]), ), 2)
call_10772 = relay.TupleGetItem(func_5321_call(relay.reshape(call_10739.astype('int32'), []), relay.reshape(const_10771.astype('int32'), [16, 1]), relay.reshape(var_10729.astype('float32'), [1, 1008]), ), 2)
func_7372_call = mod.get_global_var('func_7372')
func_7375_call = mutated_mod.get_global_var('func_7375')
var_10774 = relay.var("var_10774", dtype = "bool", shape = (462, 3))#candidate|10774|(462, 3)|var|bool
call_10773 = relay.TupleGetItem(func_7372_call(relay.reshape(call_10752.astype('bool'), []), relay.reshape(var_10774.astype('bool'), [9, 11, 14]), ), 0)
call_10775 = relay.TupleGetItem(func_7375_call(relay.reshape(call_10752.astype('bool'), []), relay.reshape(var_10774.astype('bool'), [9, 11, 14]), ), 0)
uop_10777 = relay.exp(uop_10766.astype('float32')) # shape=(36, 24)
func_7194_call = mod.get_global_var('func_7194')
func_7198_call = mutated_mod.get_global_var('func_7198')
var_10790 = relay.var("var_10790", dtype = "float64", shape = (15,))#candidate|10790|(15,)|var|float64
const_10791 = relay.const([1,-2,-9,-6,-9,-7,2,9,-10,7,6,3,-4,10,7,-8,3,-9,-7,1,3,-3,6,3,6,2,-7,-3,9,-7,-7,3,7,2,7,1,9,-5,7,3,-7,-7,-9,3,4,-2,-5,2,-7,5,8,-3,10,-4,-5,-2,3,7,2,9,2,-8,8,-8,-2,8,8,9,-9,-7,-1,7,2,5,7,-9,-5,5,-7,-8,-7,1,10,-5,4,-3,3,-8,-7,-1,8,3,-9,9,-1,-4,-5,-4,-4,4,-1,4,1,10,-6,-2,1,8,-4,-5,-3,-5,-4,3,-8,-10,4,-6,6,4,-7,6,2,9,2,2,4,4,-4,10,4,4,1,-4,6,-1,-2,2,-3,-1,6,8,9,-10,9,-9,-9,10,1,-7,9,9,-4,-9,-3,-2,2,-10,4,-5,1,5,-7,10,-10,-4,-6,2,3,9,-2,6,10,6,-8,-6,-5,9,-7,-1,-7,-6,5,4,-9,-5,-1,4,8,5,1,7,4,1,4,-8,4,-3,-4,-8,-10,-6,5,-4,10,-1,3,-10,-3,-8,-10,9,2,4,8,1,-6,-9,-6,5,4,-10,1,2,10,10,-8,-3,-10,-6,-10,8,-1,8,2,5,9,-3,-5,6,-6,-5,-7,5,-7,10,8,-3,7,-8,7,6,-1,8,-5,3,-3,8,-9,9,-5,-1,-7,2,8,-4,5,10,-9,4,-3,5,-7,5,-5,-10,-3,3,-9,-5,-7,9,9,2,8,-1,-4,6,-1,-5,-5,-7,8,-2,7,4,-6,-7,-4,4,4,-2,4,-8,-7,1,8,4,-10,-4,4,10,-1,-7,-4,5,-8,6,5,9,9,-5,10,4,4,6,4,-7,2,9,7,-6,3,9,8,-9,7,-3,-1,-8,4,2,1,4,5,1,-1,5,1,-1,1,5,6,-9,-6,4,3,10,7,-9,-9,-4,-9,6,4,-10,-9,-5,4,4,10,-10,5,-9,3,-5,-10,5,-10,1,8,7,8,-2,5,-2,3,-10,-1,-1,8,-9,6,8,-2,-8,-2,-8,10,-3,-6,-1,-9,7,1,4,-5,8,6,-7,-6,-9,-3,-9,4,7,-8,-1,9,-7,-6,-2,6,2,5,-2,-6,1,5,2,3,1,10,-8,-10,9,-10,6,-10,-9,10,10,-2,7,1,9,1,-3,4,9,-10,9,-1,5,-5,-10,6,3,9,7,3,3,-8,6,10,5,6,-10,-8,2,-1,-10,-10,-7,7,8,10,4,10,7,7,-9,-5,-2,4,-6,-4,-4,-1,5,2,8,7,-9,3,-6,-7,3,-4,5,-9,-4,9,-9,-6,-10,8,-2,1,-1,-7,-3,1,-4,-1,4,-2,-2,6,-3,6,3,-3,-10,-8,9,9,10,9,9,-3,-9,1,5,-5,-10,-2,-6,9,9,8,-1,-9,-10,-4,-8,2,-3,-1,10,9,-6,4,5,-9,-1,2,5,-4,10,4,7,7,10,-2,-1,-4,-1,-10,-4,-3,-5,8,6,7,-9,4,-8,8,9,2,-1,9,-5,-8,-8,-3,-6,5,10,-8,4,7,-4,-3,6,-3,2,-9,-2], dtype = "uint8")#candidate|10791|(600,)|const|uint8
call_10789 = relay.TupleGetItem(func_7194_call(relay.reshape(var_10790.astype('float64'), [1, 3, 5]), relay.reshape(const_10791.astype('uint8'), [600,]), ), 4)
call_10792 = relay.TupleGetItem(func_7198_call(relay.reshape(var_10790.astype('float64'), [1, 3, 5]), relay.reshape(const_10791.astype('uint8'), [600,]), ), 4)
var_10793 = relay.var("var_10793", dtype = "float32", shape = (504, 7))#candidate|10793|(504, 7)|var|float32
bop_10794 = relay.logical_or(call_10789.astype('bool'), var_10793.astype('bool')) # shape=(504, 7)
bop_10797 = relay.logical_or(call_10792.astype('bool'), var_10793.astype('bool')) # shape=(504, 7)
var_10801 = relay.var("var_10801", dtype = "float32", shape = (36, 24))#candidate|10801|(36, 24)|var|float32
bop_10802 = relay.left_shift(uop_10777.astype('int64'), relay.reshape(var_10801.astype('int64'), relay.shape_of(uop_10777))) # shape=(36, 24)
func_167_call = mod.get_global_var('func_167')
func_169_call = mutated_mod.get_global_var('func_169')
call_10808 = relay.TupleGetItem(func_167_call(relay.reshape(const_10791.astype('uint8'), [15, 4, 10])), 1)
call_10809 = relay.TupleGetItem(func_169_call(relay.reshape(const_10791.astype('uint8'), [15, 4, 10])), 1)
bop_10828 = relay.maximum(uop_10777.astype('int8'), relay.reshape(bop_10802.astype('int8'), relay.shape_of(uop_10777))) # shape=(36, 24)
bop_10838 = relay.not_equal(bop_10802.astype('bool'), relay.reshape(bop_10828.astype('bool'), relay.shape_of(bop_10802))) # shape=(36, 24)
uop_10849 = relay.sinh(bop_10802.astype('float32')) # shape=(36, 24)
uop_10855 = relay.atan(uop_10849.astype('float64')) # shape=(36, 24)
bop_10860 = relay.greater(uop_10849.astype('bool'), relay.reshape(uop_10766.astype('bool'), relay.shape_of(uop_10849))) # shape=(36, 24)
output = relay.Tuple([call_10723,call_10728,var_10729,call_10739,var_10740,const_10741,call_10752,call_10754,call_10770,const_10771,call_10773,var_10774,var_10790,const_10791,bop_10794,call_10808,bop_10838,uop_10855,bop_10860,])
output2 = relay.Tuple([call_10724,call_10730,var_10729,call_10743,var_10740,const_10741,call_10753,call_10755,call_10772,const_10771,call_10775,var_10774,var_10790,const_10791,bop_10797,call_10809,bop_10838,uop_10855,bop_10860,])
func_10866 = relay.Function([var_10729,var_10740,var_10742,var_10774,var_10790,var_10793,var_10801,], output)
mod['func_10866'] = func_10866
mod = relay.transform.InferType()(mod)
mutated_mod['func_10866'] = func_10866
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10866_call = mutated_mod.get_global_var('func_10866')
var_10868 = relay.var("var_10868", dtype = "float32", shape = (1008,))#candidate|10868|(1008,)|var|float32
var_10869 = relay.var("var_10869", dtype = "uint32", shape = ())#candidate|10869|()|var|uint32
var_10870 = relay.var("var_10870", dtype = "float64", shape = (36, 24))#candidate|10870|(36, 24)|var|float64
var_10871 = relay.var("var_10871", dtype = "bool", shape = (462, 3))#candidate|10871|(462, 3)|var|bool
var_10872 = relay.var("var_10872", dtype = "float64", shape = (15,))#candidate|10872|(15,)|var|float64
var_10873 = relay.var("var_10873", dtype = "float32", shape = (504, 7))#candidate|10873|(504, 7)|var|float32
var_10874 = relay.var("var_10874", dtype = "float32", shape = (36, 24))#candidate|10874|(36, 24)|var|float32
call_10867 = func_10866_call(var_10868,var_10869,var_10870,var_10871,var_10872,var_10873,var_10874,)
output = call_10867
func_10875 = relay.Function([var_10868,var_10869,var_10870,var_10871,var_10872,var_10873,var_10874,], output)
mutated_mod['func_10875'] = func_10875
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8639_call = mod.get_global_var('func_8639')
func_8640_call = mutated_mod.get_global_var('func_8640')
call_10889 = relay.TupleGetItem(func_8639_call(), 0)
call_10890 = relay.TupleGetItem(func_8640_call(), 0)
func_1961_call = mod.get_global_var('func_1961')
func_1963_call = mutated_mod.get_global_var('func_1963')
const_10892 = relay.const([1.761372,4.285534,4.157428,-1.371404,-8.327010,-7.389149,6.265874,8.082051,-0.924714,-2.688810,1.159417,5.559177,-8.653075,3.169663,8.793477,0.267594,-5.608737,7.956355,-3.988171,-9.329907,-4.739794,-3.125563,7.504027,1.265854,3.072271,8.019769,2.961902,-5.441395,5.895425,7.606157,2.245078,-2.990606,-7.300874,1.983377,1.679267,4.620013,-3.204261,-6.319888,4.408595,2.976215,2.843816,7.765208,-1.212151,2.351121,4.528071,-0.277824,7.605313,-5.632795,-5.303981,-8.583886,-7.065905,-0.905050,0.110549,-4.054120,-8.091154,0.687484,-4.655666,-9.510540,-0.739148,1.566387,8.482801,-7.733353,-2.160822,-3.870859,-2.713568,-0.785679,-2.739082,4.427635,8.545329,-3.812074,-8.092679,-0.346022,-3.405884,0.788546,-6.332287,0.282837,-1.956003,-6.284622,-2.130509,3.362498,9.071316,9.974919,-6.957191,9.910775,8.256429,9.078711,7.006014,-4.659213,1.624217,-2.131671,-4.902326,0.336535,3.409566,8.759631,-4.954735,-1.248095,8.447616,0.270899,-9.862653,7.410272,-4.665297,3.391998,-5.107295,8.332282,8.676182,5.035481,9.032495,-2.381237,-7.900535,9.630084,9.967169,-0.029119,3.548394,-0.706404,-7.422897,9.930267,7.806808,-1.010005,8.129827,9.517472,0.962862,-5.136886,6.404479,8.255219,2.620675,-6.120322,-3.035028,5.646534,-6.766525,-0.639814,2.984046,8.361322,-1.091957,7.084565,2.919572,0.106833,2.044111,-0.479142,-8.173213,7.522330,-7.234206,-5.528182,-7.433397,-9.209528,-3.832498,-4.891237,8.701876,-4.280477,1.190021,1.183321,-6.284484,-7.398856,-9.578698,-8.177485,-8.351745,-6.231749,2.837531,-4.381249,-2.759894,-2.088922,3.157115,8.528083,-4.635733,-3.303225,7.070640,-2.951212,-6.647132,4.287603,4.697108,-8.125789,9.494217,-4.608977,3.513720,4.709393,-6.908093,-1.566130,-6.976649,-5.534311,2.357057,-2.682816,-3.597055,-0.656187,6.580063,9.210278,0.801599,6.975462,0.908854,6.217331,-2.760465,-4.197314,-3.270845,-6.667432,-3.654439,1.110309,7.608598,-1.715073,5.312645,6.838743,8.565597,5.727644,-7.110889,2.897031,9.608009,-5.167250,4.478285,-0.283933,-5.344666,-3.999868,8.120467,-0.711095,-2.361744,-9.119030,-8.684798,-2.352490,-4.529588,-1.143665,-3.460309,-5.872630,4.093910,6.968188,-1.992092,-0.459245,-2.700769,5.413970,2.242245,4.370268,0.092857,6.427347,0.828520,4.652193,3.740279,-8.181699,6.290991,2.810358,9.232846,-5.714341,-1.962429,-3.957676,0.585544,-1.674501,-4.300657,-2.685286,9.916246,2.574241,-0.742063,5.967776,-4.252423,2.850029,-8.492955,-1.608412,-3.855467,5.150297,-6.676833,2.616321,-9.568506,-7.022283,8.760952,-1.228064,-3.218752,0.802504,-1.281321,-4.007914,-2.680617,-2.773542,0.273519,8.823791,7.704631,-2.159885,-3.081419,-3.871973,-0.351293,1.505370,5.612970,-5.216384,1.873413,-9.105771,-1.983160,0.629536,3.733248,-3.295881,-1.914840,-6.456023,-5.020133,9.672769,-2.274959,2.249860,-0.105570,5.966543,-9.745017,4.174164,1.009659,4.970459,6.258460,1.234971,6.956729,4.939511,8.184051,0.083898,-9.194456,-6.497150,-2.405192,7.071976,2.030604,6.852269,2.249186,2.713838,-5.008936,-3.272472,0.268823,-4.678103,2.880117,5.675355,7.082553,9.850025,1.106300,3.691575,3.498760,4.119596,0.832194,1.421957,4.640487,6.995394,8.075048,8.122488,2.766430,8.489217,3.537871,6.029990,-8.344510,7.878534,3.211377,6.656416,5.508851,2.929052,0.455521,2.025626,2.686063,8.589897,7.603485,-5.623585,-3.180178,3.901016,-7.514016,9.355871,5.025796,-8.515962,4.192779,-4.312723,-2.777496,2.752272,-9.662146,6.409815,9.893054,-2.249051,9.627877,-9.357404,9.452619,-2.121942,-7.827390,-4.626469,-1.071032,-7.051675,-4.037559,-6.654984,-9.176860,3.954073,3.671064,7.825150,5.736975,9.859737,-0.592047,-8.284988,9.490450,0.241505,-9.435474,-2.872282,-9.383500,-5.395195,9.299860,-5.158546,-1.030942,-0.478870,-8.284403,0.071590,2.182799,-9.273489,-8.415320,4.981300,0.824184,7.527207,-4.432237,-1.582994,9.019451,-1.778396,-9.929816,-1.957212,-6.093718,-0.473851,-7.339609,-2.276726,-1.780485,5.164943,9.352703,-1.513504,0.151034,9.860017,1.509179,7.535462,-1.666590,3.667640,-6.507893,-5.184020,-4.486757,2.308776,-1.888958,9.328650,-1.535458,5.142237,5.218313,2.670719,0.442793,0.104707,-9.401368,6.010756,-1.069884,2.875633,7.980417,8.549628,-9.138153,-2.902264,-8.729094,8.915363,0.858403,-7.526084,6.674059,5.713219,-2.400039,1.852922,0.698546,-6.589175,-0.579833,-1.236987,2.053846,3.143015,-2.360998,-4.859144,6.919108,-7.314382,-7.357615,-3.253395,-3.171086,-5.703060,-3.990493,4.464081,5.981969,5.022796,-0.078119,5.217024,6.853540,3.732330,-7.878467,-8.257912,-3.208941,-4.031460,6.342062,-0.010640,2.939816,7.103617,-1.355985,9.871097,-3.703918,5.463457,5.140320,-8.112414,-5.580756,-3.964326,9.348584,-5.100372,8.045208,-6.203632,9.780603,-7.460434,7.868673,-1.718491,8.199337,5.907099,-8.594972,-3.759380,7.831726,-0.910825,-8.979129,3.226016,2.565309,2.857643,-2.030217,-0.520710,-9.049297,-5.441421,-0.096503,-1.573425,4.025011,0.801534,-9.280779,2.100145,-7.440267,2.728021,-3.974627,-7.679591,3.027607,4.290669,8.644356,2.662101,-2.767005,6.901851,8.551643,-1.465843,-7.629172,-7.164162,9.933142,-4.439703,-7.620784,4.326031,-2.731609,-6.119845,8.935971,-4.557641,9.954597,0.519808,1.972152,-7.385984,-8.175581,0.473284,-7.803274,4.169581,2.386491,0.091768,-9.004258,8.075414,-2.757352,-1.473369,4.220280,-1.555961,-0.506107,-7.167911,1.299774,-0.203825,-4.185335,-9.064847,-6.486154,-3.905277,0.375024,7.747706,-7.004929,1.839568,-3.701673,2.335784,-2.153848,4.972710,9.607423,-3.550388,-5.078845,-7.234807,9.898360,-8.261705,-8.914488,2.634502,-3.227397,0.159711,5.823122,-8.168906,-9.337302,9.254374,6.507534,-3.250265,6.031031,7.274279,0.491102,-9.147890,-2.669661,-8.836975,4.455255,6.318617,-5.453742,1.804838,1.256626,-3.913401,0.499275,-5.945833,-6.007382,4.883090,8.647553,7.786152,-2.395335,8.621559,-8.131960,0.481026,-7.238439,-7.761954,-6.866632,-1.276085,2.185843,9.775921,2.582024,0.146359,-8.710080,4.604740,-5.836636,6.727359,-3.001645,5.737215,-2.533611,-6.569783,1.442534,-2.971967,-2.867921,9.501523,4.432229,-6.312568,-1.574253,-1.056807,-5.753359,3.253622,-0.128765,5.512213,2.716198,-5.543102,-5.230632,-1.181782,1.201531,0.667090,-6.538718,2.899135,8.853715,-3.429059,5.567841,6.078484,-4.899554,-7.498988,4.197910,1.206454,0.381454,-5.285811,-1.952381,9.014083,6.647811,-8.460039,-0.051570,8.727471,8.408522,7.757355,-9.905703,9.879479,7.341138,-1.501203,3.738851,-5.041686,4.672669,-1.773684,3.791253,7.991942,-5.977724,-0.144173,5.147070,9.056400,5.477440,1.221397,6.161749,-2.888375,7.126087,2.610245,-7.895395,7.458743,-8.199540,-3.505398,7.950460,4.334436,7.377805,-5.474702,8.167869,1.271303,9.645770,6.368775,2.880136,6.207022,-7.840394,-6.410246,-3.162531,-8.006420,0.095538,8.628589,-7.438682,7.820355,-9.890109,-3.718839,3.923555,9.760210,-9.560483,9.865603,-5.911110,-4.444710,5.569501,-7.410014,-4.754113,-8.339393,6.791656,8.939290,-5.423250,9.906403,-4.667418,7.181809,8.707847,-7.215665,7.078059,-7.662147,2.446469,-1.979746,1.082452,-5.205544,2.089524,3.847237,-6.079558,-6.994680,9.560901,-2.894065,4.218808,3.650484,-5.222429,-9.136564,7.789120,1.802923,-1.159224,5.181775,-6.732394,8.648580,8.530172,-7.168586,6.018820,-3.376872,-1.903059,8.961303,-8.392041,7.594789,-0.918850,-5.649532,-2.150865,-4.490453,8.208526,-9.818617,-7.950240,8.864648,-0.818906,6.701970,-7.141782,3.832016,-3.193441,-9.013973,4.938541,6.846204,-9.545541,-3.752378,-6.581550,1.584801,-7.802717,4.414430,2.133080,-7.916068,4.059460,-1.487466,-5.098938,-0.127656,-4.088954,6.745870,-9.005116,9.446885,5.990621,9.280154,3.748355,7.118728,-9.042294,-9.537176,-8.586750,-2.732610,-6.558859,1.066309,-1.206934,-5.606221,6.357470,-4.367669,-4.388442,-8.128229,7.725111,4.994563,-8.827097,0.270881,-0.892841,-5.170473,-5.241829,-1.882689,3.122084,8.558817,4.005184,-9.963176,-8.626840,0.847200,9.553164,-2.546926,3.928799,3.607107,-2.134542,6.235050,-0.529467,6.511250,-2.930570,3.563827,-6.534555,0.478437,-1.258003,-5.487731,-8.064972,-8.664685,3.617124,1.172084,-6.121472,-9.489540,6.211514,8.801525,0.864317,-8.445111,-1.224254,-5.589461,3.320134,1.627548,8.160941,-6.407399,4.070733,6.985069,8.525082,3.261977,1.551192,-1.163362,7.246988,-4.098712,6.133225,-6.908790,9.214165,-6.833247,-0.482524,-1.288136,3.518068,-4.606016,4.541171,4.417136,-2.777886,1.173847,-2.182036,-0.280145,1.970237,-8.870633,5.283114,2.041485,5.410233,1.174838,8.108258,-3.657661], dtype = "float64")#candidate|10892|(864,)|const|float64
call_10891 = relay.TupleGetItem(func_1961_call(relay.reshape(const_10892.astype('float64'), [8, 9, 12])), 0)
call_10893 = relay.TupleGetItem(func_1963_call(relay.reshape(const_10892.astype('float64'), [8, 9, 12])), 0)
output = relay.Tuple([call_10889,call_10891,const_10892,])
output2 = relay.Tuple([call_10890,call_10893,const_10892,])
func_10894 = relay.Function([], output)
mod['func_10894'] = func_10894
mod = relay.transform.InferType()(mod)
mutated_mod['func_10894'] = func_10894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10894_call = mutated_mod.get_global_var('func_10894')
call_10895 = func_10894_call()
output = call_10895
func_10896 = relay.Function([], output)
mutated_mod['func_10896'] = func_10896
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9123_call = mod.get_global_var('func_9123')
func_9125_call = mutated_mod.get_global_var('func_9125')
call_10999 = relay.TupleGetItem(func_9123_call(), 0)
call_11000 = relay.TupleGetItem(func_9125_call(), 0)
func_558_call = mod.get_global_var('func_558')
func_561_call = mutated_mod.get_global_var('func_561')
const_11016 = relay.const([9.418591,9.262440,9.524455,9.659001,-1.428142,8.437809,4.798152,6.566236,5.934001,-4.128642,9.200619,-3.764654,3.525932,8.838881,-5.442624,-0.930568,4.512512,-6.579751,-2.342781,-7.148921,-2.922037,-8.522582,-1.525792,-8.061800,-4.901032,-3.952261,-0.432559,-7.214142,-2.990396,-0.046425,-7.206362,-9.200659,-6.099950,-9.667918,-7.879863,3.778388,-8.023941,1.314299,-9.883650,-0.762586,-1.403834,-3.206553,-3.004270,-9.880173,-5.659086,9.593718,-9.962963,-1.380056,-7.994783,3.852637,7.125050,-0.612893,8.839082,-4.756214,2.550903,-2.858374,4.091911,7.019326,6.630492,-8.875674,-8.375166,-0.950247,9.971418,-6.655538,-0.121272,8.209248,-0.159347,5.318327,9.783333,1.301667,7.764759,-0.550406,-1.978212,-4.481452,0.040014,3.246273,-0.294241,-2.788773,-9.697759,1.556522,3.427020,-3.712403,-4.491362,9.798246,0.055699,3.846309,-1.863532,0.836086,8.744982,-6.078167,-7.192433,-3.966597,6.914518,4.303236,1.536833,-2.195934,6.337390,3.223626,5.707235,1.304811,6.879900,1.572733,-5.883985,0.432795,-6.086620,-7.448205,0.961200,1.256202,-7.459695,2.352529,6.111670,-3.987944,-7.174023,6.037718,-8.212643,3.350706,4.963896,7.635492,0.752131,8.827558,-2.885268,2.893901,-3.999995,-2.209647,2.972277,4.305926,-0.981366,3.951978,2.784465,-4.684245,9.223779,3.640841,-9.439205,-8.797669,8.251730,6.504349,8.869231,-7.813550,6.999381,-9.642003,-3.602381,1.027875,3.335895,6.803701,5.697272,-9.939913,6.188253,3.346445,-0.703866,-0.713058,3.274087,2.256047,-1.452914,5.035522,4.889801,-2.437069,0.622510,-2.251301,-2.960860,4.411358,4.041172,-8.750388,4.917931,-6.415410,2.763511,-7.123153,-6.071495,2.984047,5.903974,-2.783483,8.407862,-3.829671,-3.783926,5.320116,-8.173070,7.584073,7.062123,2.752438,2.979889,-2.616019,-4.986440,-7.791283,6.017851,6.482151,-5.665404,9.483287,-0.083380,-5.016916,-6.981463,5.398642,-1.618618,-3.774276,-8.022259,-5.532950,3.667797,-0.616443,3.996833,-6.273787,-1.588654,9.620917,6.403432,-1.156590,-1.940963,-7.815167,7.587026,-7.552982,-1.354992,1.875128,-7.781868,1.787664,-5.206747,1.814929,-2.820144,-8.330468,0.018970,0.301010,-3.120173,-4.406805,-0.389556,6.456786,-0.707935,8.264199,-8.159246,6.564676,-7.315679,-8.036582,-8.559396,0.756492,5.872883,5.721872,5.935332,9.313672,6.951509,6.973485,9.385143,7.556889,-9.187790,-6.270435,3.365492,6.210431,-8.041421,-1.462631,0.188326,0.873754,-9.828448,0.639592,8.632736,1.025177,-7.209292,-5.130517,-6.975856,6.363042,-0.086392,9.908136,4.981926,-4.925308,1.129150,-0.809546,-8.375701,0.616977,-2.286580,-9.421280,-5.794002,-2.771352,-9.250604,-6.873293,-0.555864,6.572827,4.950910,-1.165894,3.517534,8.378804,-7.990935,7.426648,2.881027,7.743840,3.711880,-0.976428,1.210588,-0.630089,7.461909,-0.067947,-1.174481,6.728124,5.141130,-9.246790,-0.557725,6.185542,0.176486,7.462828,2.212429,1.310287,-2.975623,-7.784272,-0.737414,-6.110592,6.288334,-2.042025,-3.514727,-8.633482,8.566088,7.353600,-5.954725,-3.595224,2.730476,-2.282517,-2.450062,-2.083620,1.939710,4.475173,5.363347,-3.922928,-7.877897,1.832009,-2.431522,-4.136346,-4.705097,5.996579,-7.234571,9.092778,3.550117,0.836916,5.514552,-6.682802,-4.199337,-2.004222,1.468744,4.707569,6.644805,5.059584,-8.537686,-2.530619,7.842907,4.663841,2.972868,4.901292,-0.846462,9.941232,-6.153655,5.596690,7.922629,7.428140,-5.244698,-3.271909,1.833937,5.450284,-5.183356,-6.928325,0.668999,0.031069,-9.406656,1.577598,2.825399,-8.421805,-2.058873,1.773163,-4.542034,1.175412,0.170609,-1.258792,3.787457,-6.336910,0.158685,9.633740,-4.769585,-3.268989,5.190576,3.814367,-6.327004,6.694899,1.396828,-0.309151,7.015408,-6.751409,5.495189,1.536721,-6.825313,-3.854092,-3.541045,-9.795947,7.691615,-4.913728,-5.691710,8.449789,5.641465,-9.697541,6.670613,-5.208687,-5.779061,9.896688,-3.652362,-1.840477,-8.557051,-2.946057,-5.839957,1.873917,8.620976,-5.916355,-4.936685,-1.387096,-3.067129,-3.404032,3.516107,-0.937147,-0.946218,-3.535031,-4.849922,8.429812,6.999764,-6.028759,4.050042,1.808524,8.599897,-9.815482,-4.971032,8.740996,3.476222,-4.845541,1.707022,-2.143945,6.593551,-4.833992,9.790077,-9.816832,4.304811,-9.620850,7.713865,-5.181041,-6.896682,-3.657296,9.176785,0.871543,9.859581,-6.827657,4.874627,-0.969539,5.749244,-6.177502,8.688857,3.893610,4.250833,0.421345,-7.721665,1.120125,-6.890743,7.217570,-7.974893,9.983350,-6.204965,-6.583169,-3.748508,-4.470382,2.464828,4.091998,-1.114124,9.525138,-0.316052,-0.219761,-4.692529,3.974158,1.579411,1.811142,-7.809704,8.291212,-1.121181,-7.012759,8.414429,-8.343692,5.456485,1.619387,-7.590916,-3.643232,0.961280,1.516785,-1.967789,-0.177365,7.289043,9.195322,-7.920067,9.302302,-9.877557,-5.782107,-5.911084,-0.686765,-0.243973,8.873746,0.326435,2.511630,-9.559747,-5.120934,-0.808533,-9.925601,-0.737978,8.795220,0.288650,5.066722,-0.977736,6.248769,-5.310236,-1.062862,3.042998,-8.321911,1.808787,3.731371,-6.928111,2.666324,-5.755054,3.061445,4.183307,-3.611209,0.373264,1.567831,1.324801,-0.122644,-9.194265,-2.996887,0.964624,-4.850938,-2.735411,-7.697214,-1.881353,1.097501,-5.182010,4.958267,5.942841,-4.048272,-0.167330,-7.524527,-1.430968,9.207215,-1.828400,-4.819631,-0.584372,-9.680197,-8.660679,-2.957909,-1.097007,6.293749,-0.476642,8.759078,-9.382217,-2.055927,4.035969,-3.686451,5.098456,-3.341077,5.143769,4.638590,-8.385645,1.335626,9.476547,6.298165,4.352035,-3.669385,9.953941,-4.428248,6.543373,-9.727158,6.053913,-7.186240,8.329698,-9.177359,2.518458,-9.455862,-1.325689,-0.564702,2.216719,7.703051,-5.602830,-1.764154,8.432491,-7.532832,0.568482,3.684453,2.122024,-7.559575,6.188920,-5.066026,-5.672383,-1.470604,-4.407900,-4.497313,-4.811878,-2.233317,9.715600,-4.448799,0.407715,0.224865,-0.381206,-9.145641,-4.939948,-2.869941,7.545187,-9.740244,9.154838,-1.038609,3.287165,-7.582168,3.361025,3.138289,5.328529,8.387237,-3.394801,-1.187692,-2.806600,-3.076392,5.029654,-1.880009,7.398294,-5.000060,0.628599,-9.013413,-1.194423,-2.268688,-1.382547,-7.147165], dtype = "float64")#candidate|11016|(616,)|const|float64
call_11015 = relay.TupleGetItem(func_558_call(relay.reshape(const_11016.astype('float64'), [4, 14, 11])), 2)
call_11017 = relay.TupleGetItem(func_561_call(relay.reshape(const_11016.astype('float64'), [4, 14, 11])), 2)
func_9154_call = mod.get_global_var('func_9154')
func_9156_call = mutated_mod.get_global_var('func_9156')
call_11022 = relay.TupleGetItem(func_9154_call(), 1)
call_11023 = relay.TupleGetItem(func_9156_call(), 1)
var_11030 = relay.var("var_11030", dtype = "float64", shape = (88, 16))#candidate|11030|(88, 16)|var|float64
bop_11031 = relay.logical_and(call_11015.astype('bool'), var_11030.astype('bool')) # shape=(88, 16)
bop_11034 = relay.logical_and(call_11017.astype('bool'), var_11030.astype('bool')) # shape=(88, 16)
func_3598_call = mod.get_global_var('func_3598')
func_3601_call = mutated_mod.get_global_var('func_3601')
var_11036 = relay.var("var_11036", dtype = "float32", shape = (504,))#candidate|11036|(504,)|var|float32
call_11035 = func_3598_call(relay.reshape(var_11036.astype('float32'), [8, 7, 9]))
call_11037 = func_3598_call(relay.reshape(var_11036.astype('float32'), [8, 7, 9]))
output = relay.Tuple([call_10999,const_11016,call_11022,bop_11031,call_11035,var_11036,])
output2 = relay.Tuple([call_11000,const_11016,call_11023,bop_11034,call_11037,var_11036,])
func_11043 = relay.Function([var_11030,var_11036,], output)
mod['func_11043'] = func_11043
mod = relay.transform.InferType()(mod)
var_11044 = relay.var("var_11044", dtype = "float64", shape = (88, 16))#candidate|11044|(88, 16)|var|float64
var_11045 = relay.var("var_11045", dtype = "float32", shape = (504,))#candidate|11045|(504,)|var|float32
output = func_11043(var_11044,var_11045,)
func_11046 = relay.Function([var_11044,var_11045,], output)
mutated_mod['func_11046'] = func_11046
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9123_call = mod.get_global_var('func_9123')
func_9125_call = mutated_mod.get_global_var('func_9125')
call_11077 = relay.TupleGetItem(func_9123_call(), 0)
call_11078 = relay.TupleGetItem(func_9125_call(), 0)
func_4277_call = mod.get_global_var('func_4277')
func_4280_call = mutated_mod.get_global_var('func_4280')
const_11088 = relay.const([4.142083,5.340007,-6.387510,-8.289988,2.925085,5.646168,7.861237,-3.860380,-1.415489,-6.813339,1.194935,3.120943,4.508283,-4.302118,-9.912228,-7.212492,6.832921,5.216248,-7.867537,3.740937,0.106540,8.439548,-3.101879,1.047853,-2.524415,-7.603429,-8.642931,-0.745472,9.850379,-8.568913,-1.568660,6.469717,-8.425202,-0.845482,-7.087571,-4.224615,-5.720342,-2.064156,2.135551,6.267756,6.999471,7.684134,-7.691720,9.137322,5.940730,8.585736,-8.610247,5.831743,3.339294,6.497697,7.807883,6.563707,7.295338,6.070309,9.926517,-5.009150,-4.838809,-4.855741,-2.560885,-1.533935,1.542719,3.552499,-2.618150,-4.699256,-6.546985,3.613348,7.995704,-4.729549,-0.387925,2.816240,-3.786484,-1.232008,0.774285,7.492981,-0.783921,7.270092,6.252492,2.905396,-4.358284,6.557130,1.580732,-0.982179,5.065559,-7.767951,-4.073079,6.745986,3.628458,3.500793,-2.323651,-5.176859,-3.534833,-3.617942,4.758140,5.775623,3.695209,-2.888641,5.182592,7.545827,3.756585,-7.404483,1.298660,4.340366,3.689288,-8.727552,8.499763,-5.559854,-0.552602,-2.321083,-0.569356,4.772127,-3.517093,5.643376,0.044134,3.013937,-2.261207,-9.012111,7.530482,-2.385738,2.896195,9.187282,-4.888828,-5.741288,-2.628664,-9.337456,5.823832,7.621906,2.692208,8.226651,3.714130,-3.392572,4.938683,-2.767390,-1.139066,4.844266,8.789672,-3.041898,4.446238,-4.457636,1.385999,-9.910047,0.159957,9.370970,-9.008127,2.570953,2.634717,5.932100,-9.245746,1.065461,3.867071,-3.796549,8.481751,-1.125765,-2.717041,4.508623,2.397796,-6.332901,1.952093,1.154537,-2.510231,4.257164,-9.603189,-6.950919,-6.076251,3.694326,2.327253,-7.366595,0.189158,6.039668,-1.156466,9.509227,-1.709664,-2.161793,7.666969,-8.100393,-3.196971,8.222016,-5.974372,7.461386,-7.168936,-3.063663,2.461063,-2.566901,2.254865,-3.981402,-2.895653,8.160939,8.791823,-5.124917,-8.815280,-0.838861,1.002020,2.429806,-1.114088,-1.290965,-3.821579,-9.373091,-6.801755,-7.386705,-7.401164,3.048444,-6.141932,0.593047,-6.962056,3.268788,-9.862585,3.305981,4.062231,-9.093789,7.796985,-2.006894,9.642445,2.985598,-7.943956,-9.498542,-2.068647,9.997997,-9.419225,-2.899137,0.530178,4.663241,-7.636950,5.662490,-4.495954,7.683768,-6.202809,6.448051,-5.574165,3.487900,-7.958291,7.599419,6.959283,1.826600,9.108154,-1.360781,7.342986,1.613892,-9.892730,-3.428391,-0.514703,8.630042,1.802546,-1.854606,4.447161,-7.123868,6.607995,3.644354,8.521691,8.813155,-1.703294,0.843905,3.375906,1.312932,5.199988,-4.559843,1.914702,-9.268529,-2.484181,-9.958378,4.386583,0.196828,-3.048174,6.014987,-9.863228,7.583744,8.947480,-8.304360,7.955607,-7.288510,4.571083,-6.957293,-3.671143,-1.309198,0.027810,9.492185,6.545473,-2.095282,7.041563,1.393971,-5.762687,-5.194471,7.053779,-2.869751,8.049829,4.845723,-7.542381,8.071841,2.012230,6.549042,3.912343,8.342908,-2.137156,-4.580850,9.226857,6.957550,-8.493137,0.969995,-8.589657,-6.020528,0.509160,7.044088,7.974550,-7.373013,-6.718506,-5.937490,-8.503785,-4.774215,1.099202,-0.968336,0.872743,-3.200535,-8.790339,6.246167,2.279770,-2.917731,-9.262859,-2.682812,-3.878018,-9.709867,0.748439,-8.435377,-2.354013,-6.042349,-9.522846,-6.669722,-7.457523,5.066871,8.997457,6.315999,8.847750,6.477665,1.935581,7.232232,-8.056082,-1.953579,-2.357847,-1.002009,-0.933948,-3.338815,8.254610,-5.489212,4.796667,-1.856658,-2.121437,-0.312423,5.258705,2.376128,5.773999,9.056658,-4.795706,1.515854,-6.340670,1.424209,-3.967391,2.922105,2.004083,1.299331,-6.948781,8.390288,-8.604876,-7.531395,4.347753,-5.549646,-7.135138,-7.850040,-2.227027,-7.544865,5.889101,5.856039,9.574888,-1.775829,-6.659770,-4.170763,9.065833,9.493873,5.336972,-8.083202,-2.307410,4.304730,-1.508884,6.612228,-7.442888,1.784604,-3.890437,9.507510,-7.351139,-2.821743,-5.386222,6.296218,-1.540595,5.339317,-6.180817,-4.429857,-9.089857,1.347257,3.869020,3.409399,-9.874341,-0.915915,5.833062,2.959696,9.036384,-6.258566,-2.458777,1.912398,6.344006,-2.841150,-7.536844,-3.830686,-8.454421,8.741618,-5.404315,6.952963,-1.617267,2.544237,-1.287645,4.097971,-1.699176,9.447615,2.166073,4.811765,8.470940,-4.714208,-3.286587,-7.331090,-0.594659,6.954157,3.823692,-9.154488,-7.734941,7.357185,-1.593836,-7.324509,5.431987,7.900124,-2.767600,4.964170,-7.894606,-3.069302,-4.417600,4.353543,-7.807131,8.077340,-9.134270,1.752379,-2.901630,1.202647,5.019560,4.149195,7.818811,2.144281,-2.417932,3.548947,-9.204431,1.843291,-1.437232,-0.761448,8.739109,-5.529944,7.933355,-0.352425,8.483279,-3.086357,5.602507,2.314024,-1.810997,5.205191,8.330855,2.659763,-8.470971,-5.046381,9.517433,2.462582,-6.744825,-2.545811,-3.747660,1.720941,-0.695902,-3.371857,-7.439258,-6.724397,7.227072,0.525706,-9.001558,-7.920325,4.434994,-7.232345,4.240317,-2.682844,5.851838,3.074711,5.613457,3.062943,-1.689471,-1.300942,7.276493,9.007775,-6.222892,9.483554,1.365542,5.724789,-9.080047,-9.200157,2.176410,-0.690342,3.687071,-3.513922,-1.215329,4.563389,-1.070144,7.909958,-9.884000,-5.539659,5.607545,-9.740133,8.090421,-7.981034,5.382973,-5.713761,6.361043,1.520689,-3.815318,1.311050,-2.521438,-5.757320,-4.398072,-4.393604,-4.427052,1.820173,8.197880,8.730622,0.191518,-4.895409,-3.686619,-3.214260,9.457565,-8.764310,1.301452,0.956084,-2.730951,-1.326415,5.280876,-9.928190,7.606922,-0.676219,5.109191,-0.586839,5.758918,0.949612,6.874029,3.173714,0.025641,-9.842124,3.330300,-4.666259,5.072541,7.807923,-1.635652,9.580029,4.594781,-6.463441,0.165652,-4.658747,8.949614,-6.644041,5.674685,-4.932019,8.087076,1.318752,-8.018096,7.704306,7.813124,-6.125831,-1.768868,2.958270,4.045259,-9.119286,-5.031526,4.435152,-1.090925,-3.764666,1.948323,-2.860740,-0.515805,-6.044091,-0.216146,-4.088031,-7.993425,0.649370,-3.206631,-4.498841,-5.602903,-4.033689,9.213383,-0.767540,0.367585,9.834288,3.854052,-6.757119,-3.759853,-0.027283,-5.858952,-6.072027,-2.375719,8.793166,-2.488762,-3.472642,-6.754852,-1.532861,6.511088,4.031641,1.675865,0.145821,-6.283304,-4.920098,-1.118994,9.664600,-0.681568,8.795146,1.707447,0.964167,7.500358,-3.204830,4.296385,6.615557,-5.726913,7.053370,-7.334218,-8.334495,-7.589916,9.433464,-1.503522,7.672993,-8.095296,6.684015,7.832310,8.456071,-4.121541,-7.953152,-1.059697,-5.745313,-3.576414,7.998664,2.086623,-0.966743,-8.328013,-6.330264,-2.304833,5.756427,5.990600,3.240942,-8.406162,9.762461,-8.410886,-1.030180,7.136330,0.123796,-1.090250,-4.671310,3.277131,-9.300858,-9.794836,-5.755169,-8.466446,6.829457,-3.468054,9.145873,-0.686139,1.863743,-9.379934,3.912398,8.142632,-9.948634,7.295587,6.970894,3.485462,8.076269,-7.557238,-2.341234,1.854563,-8.503856,-1.146748,-2.864184,-8.994320,-7.324372,7.726118,1.737447,-3.896327,7.732469,-2.135507,-2.918914,-8.131142,-9.012339,5.659052,2.415272,-7.326102,-8.361725,6.524584,8.153589,4.752517,8.512169,-8.354387,9.734801,-2.392355,-2.473376,6.291088,-6.061399,-5.771216,-2.119170,3.526299,9.519384,-1.306562,9.480259,-1.341284,6.420346,-5.759751,3.688576,7.849573,4.435186,9.592576,3.736008,5.241218,-3.542209,-1.717389,2.049614,-0.675993,8.053914,2.556667,9.592409,-6.580229,9.736199,2.771295,8.086177,4.339403,-8.490847,-9.905449,9.432003,8.108110,-0.975478,-9.235519,5.116152,-8.728087,8.875238,9.871619,5.829268,-3.722407,-4.398749,1.084243,-9.152787,8.256215,1.817356,-2.148157,6.684083,-9.206385,8.942246,3.885105,-8.107590,-2.240655,0.703825,-5.842367,6.279382,7.067218,-0.302731,8.461605,2.274811,8.957433,-9.717470,2.189040,2.894753,9.484493,6.909149,7.711255,-7.111660,0.116353,-9.082234,2.812723,-9.138289,5.309363,9.821933,-2.576298,6.679879,-6.055457,6.035081,6.994081,6.031683,-0.647155,-6.637457,-2.239074,0.818260,-1.008639,8.476411,6.131459,7.833236,-2.465944,7.279732,4.006978,-3.487916,-3.291415,-5.362568,-3.317013,2.865214,-9.620932,1.514314,-3.223056,-9.342501,-7.253684,-4.913473,-8.159460,-9.656086,9.618606,1.728472,9.812486,-6.898340,5.584510,8.675018,-5.246897,-0.230630,-3.740721,-0.783896,-5.984198,-3.197663,-7.575648,-0.425529,-6.892588,-2.293229,-8.990218,-3.718380,5.844569,-8.525275,8.686198,1.910278,-5.133312,-5.650373,8.203747,3.992186,-5.094951,-3.775502,8.920167,4.728010,4.337571,2.826152,7.115149,5.915633,-1.175583,4.033818,-0.867874,4.657622,4.460686,2.453042,-8.191848,-0.696977,-9.631269,-7.856001,-7.304797,7.494471,6.748813,6.889575,6.022006,3.045170,-4.221704,8.572585,8.457188,9.491298,1.675026,3.635242,-5.577009,-9.474963,-7.317227,-2.423033,-7.277160,9.644471,-9.154890,-4.448915,2.475182,7.517446,-7.553017,-7.196795,9.385424,-2.291306,3.717351,2.457758,-1.118613,-4.493137,-2.363540,7.230789,4.484059,-3.236093,7.256433,7.358558,-4.622674,2.817222,9.122442,1.197986,0.753579,7.471566,3.341907,-5.205657,-6.353921,3.213373,4.864070,5.002587,1.205183,-2.111644,-3.798480,4.154069,-5.333616,-3.122720,0.716843,8.427849,3.378268,0.929136,3.144221,-3.579926,-9.321032,-2.859571,-8.467123,-5.784341,1.536107,8.703576,-6.774612,-1.708609,2.828707,6.860447,-3.504706,5.107188,8.564284,7.682547,6.934698,7.394783,0.313767,7.674288,1.610124,1.756496,2.786207,3.010821,8.712549,-8.438301,-2.193891,8.713455,-6.199031,-3.442195,1.108106,-1.850254,-2.829207,3.630200,5.643796,3.967810,-4.704374,1.209156,7.229100,-0.049499,7.608859,5.728187,-2.569553,-5.810596,-0.824673,-0.691304,-3.281327,-3.378050,-6.503369,-6.602091,-9.066757,6.934679,-4.257788,-8.787475,6.890714,5.145120,-0.903097,-8.508383,8.247589,3.177581,5.811630,-7.939286,8.762934,-5.000206,-0.834935,7.480201,3.289969,6.308936,-0.706849,8.025004,-5.309315,-7.184097,-9.816750,5.875716,8.636853,2.681804,6.599397,8.626306,-2.028838,-7.435322,-0.665150,8.298650,-1.752380,-3.018063,7.167785,-4.501896,-3.926714,-6.580667,6.343872,-3.632898,-2.733580,-2.964653,1.900847,-5.704251,0.660999,-1.837614,2.592979,0.530202], dtype = "float32")#candidate|11088|(1008,)|const|float32
const_11089 = relay.const(-6, dtype = "uint32")#candidate|11089|()|const|uint32
call_11087 = relay.TupleGetItem(func_4277_call(relay.reshape(const_11088.astype('float32'), [8, 14, 9]), relay.reshape(const_11089.astype('uint32'), []), ), 1)
call_11090 = relay.TupleGetItem(func_4280_call(relay.reshape(const_11088.astype('float32'), [8, 14, 9]), relay.reshape(const_11089.astype('uint32'), []), ), 1)
output = relay.Tuple([call_11077,call_11087,const_11088,const_11089,])
output2 = relay.Tuple([call_11078,call_11090,const_11088,const_11089,])
func_11091 = relay.Function([], output)
mod['func_11091'] = func_11091
mod = relay.transform.InferType()(mod)
mutated_mod['func_11091'] = func_11091
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11091_call = mutated_mod.get_global_var('func_11091')
call_11092 = func_11091_call()
output = call_11092
func_11093 = relay.Function([], output)
mutated_mod['func_11093'] = func_11093
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9135_call = mod.get_global_var('func_9135')
func_9137_call = mutated_mod.get_global_var('func_9137')
call_11118 = relay.TupleGetItem(func_9135_call(), 0)
call_11119 = relay.TupleGetItem(func_9137_call(), 0)
func_3598_call = mod.get_global_var('func_3598')
func_3601_call = mutated_mod.get_global_var('func_3601')
const_11121 = relay.const([-9.425550,-7.945081,4.406605,2.502832,4.499425,2.530355,6.034166,6.402535,9.429934,-7.909389,-6.171545,-2.698262,8.456988,8.477162,-0.642560,2.392313,6.681901,7.163593,-0.175790,2.444622,9.035169,4.896999,-2.050708,3.535055,3.181259,-6.890650,-0.875194,-9.620518,4.978050,-5.697875,-0.521919,-8.103622,7.292161,-7.277583,-3.092694,5.469209,4.542019,-8.576205,5.742320,5.609042,1.744771,2.578657,-6.828071,8.392783,4.644356,-3.042564,0.359197,2.231734,-9.535954,-3.493682,8.922781,1.018711,1.642974,1.741093,3.273930,1.546920,-4.277759,-3.767902,-0.614328,-1.154124,3.588863,2.456600,9.657919,5.561954,-0.478875,-6.377657,-4.700281,-3.697033,8.222537,-2.330102,4.727861,3.268645,-5.704027,-1.503001,5.469191,-8.972413,9.076798,-4.515983,-1.828242,6.549769,7.963442,3.023772,6.097505,1.971349,9.204516,8.536872,1.108180,-4.955821,-4.970968,-6.032098,6.514338,-1.480837,-3.509550,7.582552,-2.731347,-8.194987,-7.339457,0.043622,3.519197,-1.451114,7.030988,4.915547,-8.538286,-4.753656,2.670296,-6.309440,-8.738654,8.636268,6.888432,6.171176,8.670925,-3.235612,9.896981,9.387332,-1.279054,4.633950,6.011077,6.668287,-2.198422,-2.456084,-3.864983,-1.282035,9.693074,-8.082351,-1.713028,2.937896,9.597971,4.488323,3.793367,4.387727,-6.765426,9.733709,-3.983604,3.900145,9.565978,-1.069558,4.995901,-3.884133,-7.445324,6.882246,-4.545160,3.379952,-3.872878,4.133199,5.803973,-7.483689,3.160647,-7.738145,-0.803228,3.723545,6.592292,3.572702,-9.755292,-9.097842,-2.674156,-2.387351,-7.480039,-6.663082,-0.628824,-1.455093,4.678485,-7.107782,5.709950,-8.658646,-7.971841,7.844489,5.489394,-2.875350,-3.834995,-8.558956,0.913359,0.576023,-8.437915,-5.199154,8.783457,4.620312,1.052067,-4.530305,-5.663266,-9.707394,-1.337421,-0.948335,3.602827,1.408677,6.253515,-3.730659,-5.261024,-9.783997,-9.571460,-3.570645,-9.227877,-5.547063,7.641565,-5.659692,8.735956,-9.528210,-8.030626,8.080551,-4.312423,8.135072,-1.296119,-1.270976,3.570130,-9.947069,0.910981,-0.974744,-5.678749,-0.488801,0.541916,1.489010,2.542260,-1.056004,-8.461450,9.534406,-2.363309,1.417815,9.902049,-9.948183,-5.324992,-7.684568,5.100858,6.263113,4.615025,5.082354,-9.005030,2.277399,-9.665100,2.676561,7.343675,4.191004,2.075174,-5.540083,-2.883124,-4.885408,4.672590,8.400077,0.982958,-9.099910,-5.036664,0.191220,-2.254129,-3.026916,-9.177999,-4.609738,6.217575,5.424530,-8.546368,6.596327,-0.240936,7.662354,-8.694486,-4.925476,-5.648128,-8.148762,-8.786240,7.487597,-7.759620,-0.537558,-9.379382,-1.657746,-7.807471,-7.156167,7.581258,-6.748674,5.532148,-4.502125,-1.584022,0.968010,8.730714,7.653048,6.953572,5.273457,-0.051523,-0.635211,-1.878057,-3.744734,0.544272,2.384724,-0.059071,-3.835442,3.662933,5.421513,-7.625450,-9.678167,-5.801895,5.549071,1.530417,0.507643,-2.505350,-6.548002,-7.662288,-9.107968,6.442519,0.429964,6.934797,-2.755483,-5.413559,-2.075861,-5.146408,-6.585130,-5.648932,6.019253,-9.089645,2.099379,-1.377734,5.901094,9.072058,-4.785663,3.211360,-4.238828,-0.437240,-9.437281,0.845390,4.254746,7.284349,-3.283751,7.199375,6.508723,4.093655,7.093070,-2.280610,-4.724328,-6.526418,4.790732,-9.458015,-6.109059,-6.640766,3.991556,4.845829,7.430762,9.565182,-3.724080,0.703187,-6.596358,-4.222405,5.177546,9.170886,-3.244187,-4.873677,4.344837,-2.852234,4.375704,-5.889186,-6.347279,2.673270,1.125992,2.248326,-3.583939,8.370006,3.612048,-4.386093,9.761460,5.907920,8.884861,0.666909,-9.944113,-5.806932,-8.754367,5.539487,-9.951441,-8.763848,7.851126,9.137980,0.390205,-6.257860,-5.748891,0.487617,-3.460021,-9.070764,-3.897247,4.919557,9.580584,7.239602,-5.080904,-6.894583,8.341467,-5.689788,-8.000801,-2.173660,2.202909,1.957819,0.976499,4.049595,1.486029,0.441089,6.413926,-6.617692,-7.456536,-3.914942,-5.297089,9.808951,4.637747,-7.333335,9.976279,7.618162,-4.115697,5.789248,8.074568,6.379139,-4.819687,5.685457,0.720773,-8.344001,6.195525,0.297276,6.388331,7.685009,-9.135973,-6.618640,7.194922,-7.174252,-2.513866,3.087957,-0.595961,-0.315176,-0.086932,-9.199278,-6.172398,9.582356,3.019795,9.801707,-8.511678,-4.243746,1.630360,-7.393753,-9.468283,-8.552209,-8.235754,5.482867,-7.306926,7.483187,0.875170,2.379775,-7.366938,2.915569,5.664030,-8.606549,1.101641,-2.532862,-8.358468,0.511251,-1.620128,3.522434,-6.960664,5.246767,1.214020,1.824099,8.244707,-9.100645,4.012506,5.101458,-5.761537,-1.680225,-3.587719,-3.865449,-2.501104,-3.592760,8.236301,5.503289,-2.183868,2.741623,-7.621994,-1.735695,8.591493,0.518198,-2.183856,0.298964,1.073968,-2.649664,-1.867219,-9.273333,6.186630,3.288129,-6.917008,-6.792010,-2.549737,-1.229822,-5.310585,-7.513043,5.479184,-1.605522,-9.192487,2.837430,-0.048617,-9.872898,-4.736941,0.372165,2.565812,2.530548,1.442661,-4.647867,0.970591,-2.473196,5.133786,1.071756,7.288198,-3.712677,9.413287,6.576311,4.423927,-2.454428,-5.229758,5.698112,4.511367], dtype = "float32")#candidate|11121|(504,)|const|float32
call_11120 = func_3598_call(relay.reshape(const_11121.astype('float32'), [8, 7, 9]))
call_11122 = func_3598_call(relay.reshape(const_11121.astype('float32'), [8, 7, 9]))
output = relay.Tuple([call_11118,call_11120,const_11121,])
output2 = relay.Tuple([call_11119,call_11122,const_11121,])
func_11129 = relay.Function([], output)
mod['func_11129'] = func_11129
mod = relay.transform.InferType()(mod)
mutated_mod['func_11129'] = func_11129
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11129_call = mutated_mod.get_global_var('func_11129')
call_11130 = func_11129_call()
output = call_11130
func_11131 = relay.Function([], output)
mutated_mod['func_11131'] = func_11131
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11091_call = mod.get_global_var('func_11091')
func_11093_call = mutated_mod.get_global_var('func_11093')
call_11168 = relay.TupleGetItem(func_11091_call(), 0)
call_11169 = relay.TupleGetItem(func_11093_call(), 0)
func_1633_call = mod.get_global_var('func_1633')
func_1638_call = mutated_mod.get_global_var('func_1638')
var_11182 = relay.var("var_11182", dtype = "float32", shape = (84,))#candidate|11182|(84,)|var|float32
var_11183 = relay.var("var_11183", dtype = "uint32", shape = ())#candidate|11183|()|var|uint32
var_11184 = relay.var("var_11184", dtype = "uint8", shape = (600,))#candidate|11184|(600,)|var|uint8
call_11181 = relay.TupleGetItem(func_1633_call(relay.reshape(var_11182.astype('float32'), [6, 14, 1]), relay.reshape(var_11183.astype('uint32'), []), relay.reshape(var_11184.astype('uint8'), [600,]), ), 2)
call_11185 = relay.TupleGetItem(func_1638_call(relay.reshape(var_11182.astype('float32'), [6, 14, 1]), relay.reshape(var_11183.astype('uint32'), []), relay.reshape(var_11184.astype('uint8'), [600,]), ), 2)
output = relay.Tuple([call_11168,call_11181,var_11182,var_11183,var_11184,])
output2 = relay.Tuple([call_11169,call_11185,var_11182,var_11183,var_11184,])
func_11190 = relay.Function([var_11182,var_11183,var_11184,], output)
mod['func_11190'] = func_11190
mod = relay.transform.InferType()(mod)
mutated_mod['func_11190'] = func_11190
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11190_call = mutated_mod.get_global_var('func_11190')
var_11192 = relay.var("var_11192", dtype = "float32", shape = (84,))#candidate|11192|(84,)|var|float32
var_11193 = relay.var("var_11193", dtype = "uint32", shape = ())#candidate|11193|()|var|uint32
var_11194 = relay.var("var_11194", dtype = "uint8", shape = (600,))#candidate|11194|(600,)|var|uint8
call_11191 = func_11190_call(var_11192,var_11193,var_11194,)
output = call_11191
func_11195 = relay.Function([var_11192,var_11193,var_11194,], output)
mutated_mod['func_11195'] = func_11195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11129_call = mod.get_global_var('func_11129')
func_11131_call = mutated_mod.get_global_var('func_11131')
call_11202 = relay.TupleGetItem(func_11129_call(), 1)
call_11203 = relay.TupleGetItem(func_11131_call(), 1)
output = call_11202
output2 = call_11203
func_11211 = relay.Function([], output)
mod['func_11211'] = func_11211
mod = relay.transform.InferType()(mod)
output = func_11211()
func_11212 = relay.Function([], output)
mutated_mod['func_11212'] = func_11212
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11271 = relay.var("var_11271", dtype = "uint64", shape = (2, 7, 7))#candidate|11271|(2, 7, 7)|var|uint64
const_11272 = relay.const([[[6,-9,5,9,-5,9,5],[4,1,-1,-3,10,-3,10],[2,7,5,2,4,-8,-10],[-7,-2,-10,3,3,2,-7],[2,10,-7,1,2,4,7],[-5,8,1,-2,-2,2,1],[9,-10,5,6,-6,-6,2]],[[-6,-1,-5,4,-8,5,-1],[5,3,-2,-6,3,-1,-9],[-9,6,-2,-8,-3,-3,1],[2,6,-6,3,2,-4,-1],[5,-3,-5,-2,3,3,4],[-10,-3,7,-2,-8,10,4],[6,3,9,6,5,10,9]]], dtype = "uint64")#candidate|11272|(2, 7, 7)|const|uint64
bop_11273 = relay.minimum(var_11271.astype('uint64'), relay.reshape(const_11272.astype('uint64'), relay.shape_of(var_11271))) # shape=(2, 7, 7)
func_8475_call = mod.get_global_var('func_8475')
func_8477_call = mutated_mod.get_global_var('func_8477')
var_11279 = relay.var("var_11279", dtype = "float32", shape = (6, 78))#candidate|11279|(6, 78)|var|float32
call_11278 = func_8475_call(relay.reshape(var_11279.astype('float32'), [4, 9, 13]))
call_11280 = func_8475_call(relay.reshape(var_11279.astype('float32'), [4, 9, 13]))
output = relay.Tuple([bop_11273,call_11278,var_11279,])
output2 = relay.Tuple([bop_11273,call_11280,var_11279,])
func_11289 = relay.Function([var_11271,var_11279,], output)
mod['func_11289'] = func_11289
mod = relay.transform.InferType()(mod)
mutated_mod['func_11289'] = func_11289
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11289_call = mutated_mod.get_global_var('func_11289')
var_11291 = relay.var("var_11291", dtype = "uint64", shape = (2, 7, 7))#candidate|11291|(2, 7, 7)|var|uint64
var_11292 = relay.var("var_11292", dtype = "float32", shape = (6, 78))#candidate|11292|(6, 78)|var|float32
call_11290 = func_11289_call(var_11291,var_11292,)
output = call_11290
func_11293 = relay.Function([var_11291,var_11292,], output)
mutated_mod['func_11293'] = func_11293
mutated_mod = relay.transform.InferType()(mutated_mod)
const_11311 = relay.const([[[True,False],[True,False],[False,True],[False,True],[False,True],[True,True],[True,False],[False,True]],[[False,True],[True,False],[False,True],[True,False],[False,True],[True,True],[False,False],[True,True]],[[True,True],[True,True],[False,True],[False,True],[False,False],[False,False],[False,False],[True,False]],[[False,False],[False,False],[True,True],[False,True],[False,False],[False,False],[False,True],[True,True]],[[False,False],[True,True],[True,True],[False,False],[True,False],[False,False],[False,True],[False,False]],[[True,True],[False,False],[False,True],[True,True],[True,True],[True,True],[False,True],[True,True]],[[True,False],[False,True],[True,False],[True,True],[False,True],[True,False],[False,True],[True,True]],[[False,True],[True,True],[False,False],[False,True],[True,True],[True,True],[False,False],[False,False]],[[False,False],[True,True],[False,False],[False,False],[True,True],[True,True],[True,False],[False,True]],[[True,True],[False,False],[True,False],[True,False],[False,False],[True,False],[False,False],[False,False]],[[False,True],[False,True],[True,False],[True,False],[False,False],[True,True],[False,True],[False,False]],[[False,True],[False,True],[True,True],[True,True],[False,True],[False,False],[True,False],[True,True]]], dtype = "bool")#candidate|11311|(12, 8, 2)|const|bool
var_11312 = relay.var("var_11312", dtype = "bool", shape = (12, 8, 2))#candidate|11312|(12, 8, 2)|var|bool
bop_11313 = relay.logical_or(const_11311.astype('bool'), relay.reshape(var_11312.astype('bool'), relay.shape_of(const_11311))) # shape=(12, 8, 2)
output = relay.Tuple([bop_11313,])
output2 = relay.Tuple([bop_11313,])
func_11323 = relay.Function([var_11312,], output)
mod['func_11323'] = func_11323
mod = relay.transform.InferType()(mod)
mutated_mod['func_11323'] = func_11323
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11324 = relay.var("var_11324", dtype = "bool", shape = (12, 8, 2))#candidate|11324|(12, 8, 2)|var|bool
func_11323_call = mutated_mod.get_global_var('func_11323')
call_11325 = func_11323_call(var_11324)
output = call_11325
func_11326 = relay.Function([var_11324], output)
mutated_mod['func_11326'] = func_11326
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8639_call = mod.get_global_var('func_8639')
func_8640_call = mutated_mod.get_global_var('func_8640')
call_11369 = relay.TupleGetItem(func_8639_call(), 0)
call_11370 = relay.TupleGetItem(func_8640_call(), 0)
output = relay.Tuple([call_11369,])
output2 = relay.Tuple([call_11370,])
func_11403 = relay.Function([], output)
mod['func_11403'] = func_11403
mod = relay.transform.InferType()(mod)
output = func_11403()
func_11404 = relay.Function([], output)
mutated_mod['func_11404'] = func_11404
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11091_call = mod.get_global_var('func_11091')
func_11093_call = mutated_mod.get_global_var('func_11093')
call_11409 = relay.TupleGetItem(func_11091_call(), 0)
call_11410 = relay.TupleGetItem(func_11093_call(), 0)
uop_11419 = relay.atan(call_11409.astype('float64')) # shape=(8, 3, 3)
uop_11421 = relay.atan(call_11410.astype('float64')) # shape=(8, 3, 3)
output = uop_11419
output2 = uop_11421
func_11427 = relay.Function([], output)
mod['func_11427'] = func_11427
mod = relay.transform.InferType()(mod)
output = func_11427()
func_11428 = relay.Function([], output)
mutated_mod['func_11428'] = func_11428
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8681_call = mod.get_global_var('func_8681')
func_8683_call = mutated_mod.get_global_var('func_8683')
call_11470 = func_8681_call()
call_11471 = func_8681_call()
func_11289_call = mod.get_global_var('func_11289')
func_11293_call = mutated_mod.get_global_var('func_11293')
const_11487 = relay.const([-9,7,-7,2,6,-3,4,6,-5,3,-4,-3,5,5,7,9,2,-10,8,10,-3,-4,-7,4,-7,-9,9,7,9,6,-1,-2,8,-1,-3,10,-4,-7,-7,2,10,-4,-5,-5,-2,-10,5,-7,5,1,10,8,-8,-4,-5,-8,8,-4,-2,7,1,10,-3,-10,4,8,5,-8,8,7,-8,6,8,9,8,-7,-7,-4,-1,-1,-8,-2,3,-5,4,6,-10,8,-2,-7,4,1,10,-4,-2,9,-3,10], dtype = "uint64")#candidate|11487|(98,)|const|uint64
const_11488 = relay.const([[-5.963985,-2.168385],[-7.151641,-0.246814],[2.413362,4.450447],[9.621837,8.327342],[2.194548,-0.797714],[7.375548,-4.760911],[-2.129659,5.244925],[-0.050607,-0.138095],[-8.341377,-4.529470],[5.272505,3.751692],[4.903856,-3.752777],[9.247872,4.578122],[-8.139441,-3.211562],[-0.817069,2.696855],[-6.655812,2.755016],[8.228061,5.684989],[-7.087910,-1.866554],[0.246503,-4.129718],[9.339246,7.818055],[-5.350711,7.630860],[8.582697,-2.326979],[-9.808950,-3.470805],[-1.597894,7.565050],[4.477920,3.099236],[7.035982,2.732180],[3.880843,9.473522],[-2.686187,6.655524],[-3.262684,9.280619],[7.544572,3.903360],[9.773612,-5.748890],[-4.456495,7.761380],[6.960160,7.329691],[7.117505,0.099076],[3.852255,8.017894],[8.224446,-1.501418],[5.700467,4.910130],[-5.148354,-5.859266],[-9.919852,5.977046],[-1.105430,-8.574204],[-9.499316,-9.300920],[-8.702428,-9.855504],[7.295552,9.647569],[1.516345,-7.554853],[-6.098062,2.688256],[-1.923153,-8.171294],[-8.244538,4.232284],[1.583993,-3.368290],[-7.387745,9.201540],[-3.939021,-9.729920],[8.807998,1.993600],[1.071407,8.951173],[9.214545,-3.816398],[-0.692160,7.298776],[3.497038,9.981025],[-8.834820,-3.833428],[5.765233,-4.278517],[2.572519,5.821900],[-1.496673,8.621298],[-2.863692,7.591029],[9.604624,8.881340],[4.906982,7.102350],[-1.863741,0.621432],[-7.948115,9.267309],[9.403198,-9.555361],[-8.929169,6.511320],[-4.891927,-6.994567],[5.443879,-7.741712],[-8.092130,-5.290351],[-0.287799,-9.048149],[-6.211685,-3.080003],[9.053411,-3.812530],[6.536177,1.476825],[-0.920067,-6.330358],[-3.743819,6.282962],[3.704647,-6.163141],[-2.716899,1.590343],[-3.835048,7.031422],[4.115879,-4.375577],[0.044916,4.475445],[7.368256,-3.437787],[2.589975,-2.415431],[9.074548,1.632971],[0.323154,-2.082129],[-9.063306,3.538749],[5.805542,6.288245],[-0.197780,8.494907],[6.830265,-5.975729],[-5.100318,-9.357697],[1.665433,4.131464],[7.150469,3.114753],[-6.867491,-3.120851],[9.997043,-1.976033],[-6.079962,6.335895],[0.055861,-7.912464],[3.100074,6.595516],[7.340288,3.228971],[-1.676066,3.210710],[7.698602,-2.496995],[5.424695,-6.498854],[-1.281683,2.855524],[0.462832,1.424807],[-3.948468,4.096763],[-2.465057,9.114521],[-8.497823,1.916081],[9.219939,-3.845198],[7.284514,-8.925817],[4.034684,-1.962712],[5.745890,-0.333212],[-7.646758,4.755145],[5.513547,0.743237],[5.073880,7.948415],[2.061838,-7.082841],[-2.224447,-8.784644],[-5.172035,-8.544194],[9.173057,1.509764],[-1.415825,5.086656],[-7.298371,1.023410],[1.197169,9.056951],[2.524062,1.524974],[9.202180,5.915396],[-0.800346,-5.626261],[5.745811,9.113430],[6.752042,0.754634],[-2.113040,-7.931507],[-6.944918,3.110773],[-0.264989,-9.991703],[8.877491,9.800188],[-6.413400,-5.343900],[-8.067890,1.085471],[3.967027,-0.572993],[2.647346,1.792970],[5.059741,-6.996717],[4.906814,4.881818],[6.241402,-8.580877],[7.687772,2.745532],[-1.314435,4.396903],[-2.010718,-0.923642],[8.862818,-6.580480],[1.873296,-4.094027],[-0.968181,-2.018922],[-5.703864,5.380975],[9.114701,3.070701],[6.202586,-9.020973],[-4.267757,-9.821742],[-1.947325,3.780783],[-7.699543,1.040758],[9.947642,-8.955875],[-6.954128,6.482551],[-1.761456,-9.528738],[-0.419981,9.385647],[7.461670,-4.392086],[5.365282,-0.329131],[3.440101,7.138246],[-8.411664,8.231583],[-7.508202,5.758983],[-3.272170,-4.004376],[0.066695,1.677845],[-2.292175,-5.786060],[-6.397115,9.064974],[1.194406,-7.035127],[7.983644,-8.794455],[-1.464245,4.834809],[1.725740,2.883279],[-5.114953,5.474919],[9.368604,2.313750],[0.307095,1.691403],[-5.045882,3.063114],[-0.295012,1.867094],[3.934382,9.921370],[3.797101,-9.048914],[6.580540,2.962407],[6.514451,-6.348510],[9.482611,-3.731429],[9.031843,-0.758149],[4.281729,0.302741],[7.421311,9.811850],[4.841817,-9.905802],[-3.599071,6.557842],[5.165124,8.372936],[6.527513,7.921576],[9.112887,1.392115],[8.078679,2.751049],[8.164283,-3.957348],[0.694363,8.516019],[1.952647,1.605566],[0.449095,9.177043],[9.850267,6.268504],[-9.228552,7.400087],[1.424060,-0.275944],[5.323084,2.745988],[0.277270,1.942522],[0.712775,7.203153],[4.434778,-5.831913],[4.443499,2.179006],[-1.821178,-1.549660],[6.824676,9.849497],[-7.281599,0.874287],[8.236436,3.717209],[-1.276637,4.038414],[8.204004,-0.723167],[6.004437,6.353755],[3.504182,-1.381300],[-6.885182,-6.622662],[-9.475408,-3.886196],[-1.044362,-8.668355],[-7.640199,-6.923890],[6.699812,-7.893229],[-3.685595,5.898436],[-8.562055,-1.042040],[9.332554,8.642161],[0.863336,3.799402],[7.804339,9.216666],[0.362397,4.266902],[6.240831,-5.763652],[3.488041,0.230414],[-0.286709,-7.534423],[-5.826032,-2.347695],[1.988689,9.694379],[8.732567,-7.574706],[-8.479359,-6.033338],[-2.485345,2.679925],[2.826415,-6.485143],[-0.622043,-1.777996],[-5.005726,2.228531],[-0.902656,-3.246251],[-4.892846,-1.437610],[-4.221333,-3.283449],[-2.252717,-8.002011],[3.930460,-9.861718],[2.269838,0.515244],[2.972519,-6.645750],[-3.303023,-7.814921],[6.574157,-9.223816],[-7.261601,-9.067972]], dtype = "float32")#candidate|11488|(234, 2)|const|float32
call_11486 = relay.TupleGetItem(func_11289_call(relay.reshape(const_11487.astype('uint64'), [2, 7, 7]), relay.reshape(const_11488.astype('float32'), [6, 78]), ), 2)
call_11489 = relay.TupleGetItem(func_11293_call(relay.reshape(const_11487.astype('uint64'), [2, 7, 7]), relay.reshape(const_11488.astype('float32'), [6, 78]), ), 2)
uop_11497 = relay.asinh(call_11486.astype('float32')) # shape=(6, 78)
uop_11499 = relay.asinh(call_11489.astype('float32')) # shape=(6, 78)
bop_11503 = relay.equal(uop_11497.astype('bool'), relay.reshape(const_11488.astype('bool'), relay.shape_of(uop_11497))) # shape=(6, 78)
bop_11506 = relay.equal(uop_11499.astype('bool'), relay.reshape(const_11488.astype('bool'), relay.shape_of(uop_11499))) # shape=(6, 78)
func_2269_call = mod.get_global_var('func_2269')
func_2272_call = mutated_mod.get_global_var('func_2272')
var_11528 = relay.var("var_11528", dtype = "float64", shape = (286,))#candidate|11528|(286,)|var|float64
call_11527 = func_2269_call(relay.reshape(var_11528.astype('float64'), [2, 11, 13]))
call_11529 = func_2269_call(relay.reshape(var_11528.astype('float64'), [2, 11, 13]))
output = relay.Tuple([call_11470,const_11487,bop_11503,call_11527,var_11528,])
output2 = relay.Tuple([call_11471,const_11487,bop_11506,call_11529,var_11528,])
func_11531 = relay.Function([var_11528,], output)
mod['func_11531'] = func_11531
mod = relay.transform.InferType()(mod)
var_11532 = relay.var("var_11532", dtype = "float64", shape = (286,))#candidate|11532|(286,)|var|float64
output = func_11531(var_11532)
func_11533 = relay.Function([var_11532], output)
mutated_mod['func_11533'] = func_11533
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10003_call = mod.get_global_var('func_10003')
func_10004_call = mutated_mod.get_global_var('func_10004')
call_11675 = func_10003_call()
call_11676 = func_10003_call()
func_7071_call = mod.get_global_var('func_7071')
func_7075_call = mutated_mod.get_global_var('func_7075')
var_11680 = relay.var("var_11680", dtype = "uint8", shape = ())#candidate|11680|()|var|uint8
var_11681 = relay.var("var_11681", dtype = "uint8", shape = (4, 288))#candidate|11681|(4, 288)|var|uint8
call_11679 = relay.TupleGetItem(func_7071_call(relay.reshape(var_11680.astype('uint8'), []), relay.reshape(var_11681.astype('uint8'), [16, 6, 12]), ), 1)
call_11682 = relay.TupleGetItem(func_7075_call(relay.reshape(var_11680.astype('uint8'), []), relay.reshape(var_11681.astype('uint8'), [16, 6, 12]), ), 1)
var_11699 = relay.var("var_11699", dtype = "float32", shape = (8, 3, 3))#candidate|11699|(8, 3, 3)|var|float32
bop_11700 = relay.greater(call_11675.astype('bool'), relay.reshape(var_11699.astype('bool'), relay.shape_of(call_11675))) # shape=(8, 3, 3)
bop_11703 = relay.greater(call_11676.astype('bool'), relay.reshape(var_11699.astype('bool'), relay.shape_of(call_11676))) # shape=(8, 3, 3)
func_2550_call = mod.get_global_var('func_2550')
func_2554_call = mutated_mod.get_global_var('func_2554')
const_11710 = relay.const([[-5.152285,-0.849296,-8.344369,8.914368,-0.775636],[0.538908,-0.988279,-8.860539,-0.234782,-1.094286],[-1.317157,-4.890855,4.004730,0.392342,-9.407709],[-0.912902,-9.934489,-3.351321,7.074187,-2.609462],[-2.311848,8.683895,-4.624872,1.546030,-7.784821],[3.920558,-5.986824,-5.231799,4.316537,5.949165],[9.734392,-7.183352,-0.814620,-7.787376,-0.645759],[0.928187,-0.815614,0.997224,5.295366,0.196001],[7.717342,-0.888313,7.175166,2.881493,-2.496877],[-9.765682,0.927476,2.410038,-5.590383,1.402624],[-4.296704,3.237109,4.992592,-8.225803,4.369616],[-9.999603,-7.119724,2.551947,-7.394147,-1.307823],[7.024347,-5.921752,-0.777753,1.739067,0.896236],[9.890466,4.004016,-8.350826,-9.993021,2.476116],[-9.213587,-3.538421,-7.732335,-9.130791,-3.563489],[-1.684508,-2.711981,-8.729651,-9.281329,5.134761],[-6.203544,-5.599923,2.538251,-0.931310,0.931149],[9.941106,-3.072249,-7.359254,0.607986,0.940298],[3.925513,-2.215154,-9.684987,-0.319467,-1.344810],[-2.715429,7.392466,-8.690976,9.691771,-8.931477],[3.177663,-4.569645,3.828394,-6.569257,-1.763443]], dtype = "float32")#candidate|11710|(21, 5)|const|float32
var_11711 = relay.var("var_11711", dtype = "float64", shape = (864,))#candidate|11711|(864,)|var|float64
call_11709 = relay.TupleGetItem(func_2550_call(relay.reshape(const_11710.astype('float32'), [7, 1, 15]), relay.reshape(var_11711.astype('float64'), [864,]), relay.reshape(var_11711.astype('float64'), [864,]), ), 3)
call_11712 = relay.TupleGetItem(func_2554_call(relay.reshape(const_11710.astype('float32'), [7, 1, 15]), relay.reshape(var_11711.astype('float64'), [864,]), relay.reshape(var_11711.astype('float64'), [864,]), ), 3)
output = relay.Tuple([call_11679,var_11680,var_11681,bop_11700,call_11709,const_11710,var_11711,])
output2 = relay.Tuple([call_11682,var_11680,var_11681,bop_11703,call_11712,const_11710,var_11711,])
func_11717 = relay.Function([var_11680,var_11681,var_11699,var_11711,], output)
mod['func_11717'] = func_11717
mod = relay.transform.InferType()(mod)
mutated_mod['func_11717'] = func_11717
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11717_call = mutated_mod.get_global_var('func_11717')
var_11719 = relay.var("var_11719", dtype = "uint8", shape = ())#candidate|11719|()|var|uint8
var_11720 = relay.var("var_11720", dtype = "uint8", shape = (4, 288))#candidate|11720|(4, 288)|var|uint8
var_11721 = relay.var("var_11721", dtype = "float32", shape = (8, 3, 3))#candidate|11721|(8, 3, 3)|var|float32
var_11722 = relay.var("var_11722", dtype = "float64", shape = (864,))#candidate|11722|(864,)|var|float64
call_11718 = func_11717_call(var_11719,var_11720,var_11721,var_11722,)
output = call_11718
func_11723 = relay.Function([var_11719,var_11720,var_11721,var_11722,], output)
mutated_mod['func_11723'] = func_11723
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11129_call = mod.get_global_var('func_11129')
func_11131_call = mutated_mod.get_global_var('func_11131')
call_11732 = relay.TupleGetItem(func_11129_call(), 2)
call_11733 = relay.TupleGetItem(func_11131_call(), 2)
output = call_11732
output2 = call_11733
func_11773 = relay.Function([], output)
mod['func_11773'] = func_11773
mod = relay.transform.InferType()(mod)
mutated_mod['func_11773'] = func_11773
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11773_call = mutated_mod.get_global_var('func_11773')
call_11774 = func_11773_call()
output = call_11774
func_11775 = relay.Function([], output)
mutated_mod['func_11775'] = func_11775
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10075_call = mod.get_global_var('func_10075')
func_10077_call = mutated_mod.get_global_var('func_10077')
call_11825 = relay.TupleGetItem(func_10075_call(), 0)
call_11826 = relay.TupleGetItem(func_10077_call(), 0)
output = relay.Tuple([call_11825,])
output2 = relay.Tuple([call_11826,])
func_11854 = relay.Function([], output)
mod['func_11854'] = func_11854
mod = relay.transform.InferType()(mod)
output = func_11854()
func_11855 = relay.Function([], output)
mutated_mod['func_11855'] = func_11855
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10894_call = mod.get_global_var('func_10894')
func_10896_call = mutated_mod.get_global_var('func_10896')
call_11948 = relay.TupleGetItem(func_10894_call(), 0)
call_11949 = relay.TupleGetItem(func_10896_call(), 0)
func_10543_call = mod.get_global_var('func_10543')
func_10549_call = mutated_mod.get_global_var('func_10549')
const_11966 = relay.const([9.776861,-5.357938,7.576221,-9.727764,6.160076,8.755896,5.109275,4.119077,4.550168,0.996843,-4.541093,4.410232,-8.380000,8.123295,4.617842,6.134253,4.361859,-7.867080,4.660507,-6.724674,2.762741,-9.322009,-4.722791,3.509990,-4.510409,-9.556291,-4.578443,-4.196047,-2.472078,-7.493340,0.245110,9.821358,1.294247,7.748983,-4.278133,6.588477,2.303473,-2.662904,-8.234734,-2.382043,7.403487,0.192686,-3.439835,-8.830456,-0.210711,9.833189,-2.362799,-2.564863,-1.465805,0.764248,0.505063,-3.654339,-6.742251,1.123466,-5.527616,-3.212860,-2.182790,9.549225,4.122639,5.107551,-6.551953,7.876115,5.375827,6.211636,-0.578899,0.793349,0.089558,-2.759210,-7.612128,-1.980256], dtype = "float32")#candidate|11966|(70,)|const|float32
const_11967 = relay.const([False,False,True,True,False,False,False,True,False,False,False,False,False,False,True,True,False,True,False,False,True,False,False,False,False,False,False,False,False,False,True,False,False,False,True,False,True,True,True,True,True,False,True,False,False,False,True,False,True,True,False,True,False,False,True,False,True,True,False,True,False,False,True,False,False,False,True,True,True,False,True,False,False,False,False,False,True,False,True,False,True,True,True,True,False,True,False,True,False,False,False,False,False,True,True,True,True,False,False,False,False,True,False,True,False,True,True,True,True,False,True,False,False,True,False,False,False], dtype = "bool")#candidate|11967|(117,)|const|bool
const_11968 = relay.const([9.747388,1.273088,-7.326441,-8.650353,-4.603162,7.210280,8.221666,3.577007,-7.133493,0.985552,7.681400,-6.577877,0.835169,7.302798,-8.274252,-0.065995,9.012422,9.620392,-2.486506,-6.527904,-9.865667,-1.832253,9.540350,1.428399,-1.044720,-7.336968,3.334244,-3.320774,-1.260565,5.168125,1.687209,2.368186,3.208384,-7.509707,-1.043362,-6.616217,-0.042228,-1.183187,-9.398826,4.008342,-8.950967,1.460681,-9.046898,-5.810605,5.578367,-0.178893,-5.405344,9.140684,-1.970240,3.697545,-0.167201,-3.642112,-1.730330,-6.581673,-7.911867,-4.962262,-9.046935,-3.620832,2.128570,8.607634,-9.460296,-2.517625,8.863381,-8.274266,3.572232,-2.883689,-2.740607,6.108109,5.512396,1.367173,4.665645,-1.088690,1.045965,9.410421,-0.285721,6.200753,-0.265292,1.894847,9.178166,4.608163,5.078672,-1.244458,-0.684576,-5.646397], dtype = "float32")#candidate|11968|(84,)|const|float32
var_11969 = relay.var("var_11969", dtype = "uint32", shape = ())#candidate|11969|()|var|uint32
call_11965 = relay.TupleGetItem(func_10543_call(relay.reshape(const_11966.astype('float32'), [70,]), relay.reshape(const_11967.astype('bool'), [117,]), relay.reshape(const_11968.astype('float32'), [84,]), relay.reshape(var_11969.astype('uint32'), []), ), 6)
call_11970 = relay.TupleGetItem(func_10549_call(relay.reshape(const_11966.astype('float32'), [70,]), relay.reshape(const_11967.astype('bool'), [117,]), relay.reshape(const_11968.astype('float32'), [84,]), relay.reshape(var_11969.astype('uint32'), []), ), 6)
output = relay.Tuple([call_11948,call_11965,const_11966,const_11967,const_11968,var_11969,])
output2 = relay.Tuple([call_11949,call_11970,const_11966,const_11967,const_11968,var_11969,])
func_11977 = relay.Function([var_11969,], output)
mod['func_11977'] = func_11977
mod = relay.transform.InferType()(mod)
var_11978 = relay.var("var_11978", dtype = "uint32", shape = ())#candidate|11978|()|var|uint32
output = func_11977(var_11978)
func_11979 = relay.Function([var_11978], output)
mutated_mod['func_11979'] = func_11979
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10003_call = mod.get_global_var('func_10003')
func_10004_call = mutated_mod.get_global_var('func_10004')
call_11981 = func_10003_call()
call_11982 = func_10003_call()
output = relay.Tuple([call_11981,])
output2 = relay.Tuple([call_11982,])
func_12008 = relay.Function([], output)
mod['func_12008'] = func_12008
mod = relay.transform.InferType()(mod)
mutated_mod['func_12008'] = func_12008
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12008_call = mutated_mod.get_global_var('func_12008')
call_12009 = func_12008_call()
output = call_12009
func_12010 = relay.Function([], output)
mutated_mod['func_12010'] = func_12010
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12026 = relay.var("var_12026", dtype = "float64", shape = (1, 8, 16))#candidate|12026|(1, 8, 16)|var|float64
uop_12027 = relay.atanh(var_12026.astype('float64')) # shape=(1, 8, 16)
func_6085_call = mod.get_global_var('func_6085')
func_6087_call = mutated_mod.get_global_var('func_6087')
var_12035 = relay.var("var_12035", dtype = "float64", shape = (1056,))#candidate|12035|(1056,)|var|float64
call_12034 = func_6085_call(relay.reshape(var_12035.astype('float64'), [16, 11, 6]))
call_12036 = func_6085_call(relay.reshape(var_12035.astype('float64'), [16, 11, 6]))
func_11129_call = mod.get_global_var('func_11129')
func_11131_call = mutated_mod.get_global_var('func_11131')
call_12041 = relay.TupleGetItem(func_11129_call(), 0)
call_12042 = relay.TupleGetItem(func_11131_call(), 0)
func_10466_call = mod.get_global_var('func_10466')
func_10467_call = mutated_mod.get_global_var('func_10467')
call_12043 = relay.TupleGetItem(func_10466_call(), 1)
call_12044 = relay.TupleGetItem(func_10467_call(), 1)
uop_12056 = relay.log(uop_12027.astype('float64')) # shape=(1, 8, 16)
func_10543_call = mod.get_global_var('func_10543')
func_10549_call = mutated_mod.get_global_var('func_10549')
var_12064 = relay.var("var_12064", dtype = "bool", shape = (117,))#candidate|12064|(117,)|var|bool
const_12065 = relay.const([9.667727,1.196888,-8.040844,-2.198551,7.277623,-7.184784,7.390075,4.948486,7.978360,-2.903305,7.265182,-8.632607,-9.661059,-0.131703,7.900367,8.466489,4.719077,0.805511,-5.324579,-7.281949,0.472391,-2.350416,2.838547,4.966982,4.038779,6.666645,4.494891,0.385095,6.626400,3.151567,-5.144271,2.765491,-7.881184,-4.187774,-3.724770,-8.976874,4.722560,-6.337147,-0.119859,7.184764,7.394368,-0.964853,3.754953,7.876272,5.870951,7.561486,3.541973,-6.015937,-5.617992,-9.234012,6.099341,-0.503169,8.970838,-8.784035,-5.746045,3.936321,-8.824399,-6.661608,4.875539,-4.518840,0.636541,0.820339,-6.261404,-0.959968,-7.597550,-7.927673,8.434247,-8.612504,0.667517,-4.920726,2.653778,-5.362252,-8.346558,5.110910,-9.717973,-0.877153,7.909964,-0.063635,3.622482,-7.283834,4.544412,-5.747416,6.279357,5.952859], dtype = "float32")#candidate|12065|(84,)|const|float32
const_12066 = relay.const(9, dtype = "uint32")#candidate|12066|()|const|uint32
call_12063 = relay.TupleGetItem(func_10543_call(relay.reshape(call_12043.astype('float32'), [70,]), relay.reshape(var_12064.astype('bool'), [117,]), relay.reshape(const_12065.astype('float32'), [84,]), relay.reshape(const_12066.astype('uint32'), []), ), 3)
call_12067 = relay.TupleGetItem(func_10549_call(relay.reshape(call_12043.astype('float32'), [70,]), relay.reshape(var_12064.astype('bool'), [117,]), relay.reshape(const_12065.astype('float32'), [84,]), relay.reshape(const_12066.astype('uint32'), []), ), 3)
func_1633_call = mod.get_global_var('func_1633')
func_1638_call = mutated_mod.get_global_var('func_1638')
var_12069 = relay.var("var_12069", dtype = "uint8", shape = (2, 300))#candidate|12069|(2, 300)|var|uint8
call_12068 = relay.TupleGetItem(func_1633_call(relay.reshape(const_12065.astype('float32'), [6, 14, 1]), relay.reshape(const_12066.astype('uint32'), []), relay.reshape(var_12069.astype('uint8'), [600,]), ), 3)
call_12070 = relay.TupleGetItem(func_1638_call(relay.reshape(const_12065.astype('float32'), [6, 14, 1]), relay.reshape(const_12066.astype('uint32'), []), relay.reshape(var_12069.astype('uint8'), [600,]), ), 3)
output = relay.Tuple([call_12034,var_12035,call_12041,call_12043,uop_12056,call_12063,var_12064,const_12065,const_12066,call_12068,var_12069,])
output2 = relay.Tuple([call_12036,var_12035,call_12042,call_12044,uop_12056,call_12067,var_12064,const_12065,const_12066,call_12070,var_12069,])
func_12072 = relay.Function([var_12026,var_12035,var_12064,var_12069,], output)
mod['func_12072'] = func_12072
mod = relay.transform.InferType()(mod)
mutated_mod['func_12072'] = func_12072
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12072_call = mutated_mod.get_global_var('func_12072')
var_12074 = relay.var("var_12074", dtype = "float64", shape = (1, 8, 16))#candidate|12074|(1, 8, 16)|var|float64
var_12075 = relay.var("var_12075", dtype = "float64", shape = (1056,))#candidate|12075|(1056,)|var|float64
var_12076 = relay.var("var_12076", dtype = "bool", shape = (117,))#candidate|12076|(117,)|var|bool
var_12077 = relay.var("var_12077", dtype = "uint8", shape = (2, 300))#candidate|12077|(2, 300)|var|uint8
call_12073 = func_12072_call(var_12074,var_12075,var_12076,var_12077,)
output = call_12073
func_12078 = relay.Function([var_12074,var_12075,var_12076,var_12077,], output)
mutated_mod['func_12078'] = func_12078
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10420_call = mod.get_global_var('func_10420')
func_10421_call = mutated_mod.get_global_var('func_10421')
call_12140 = func_10420_call()
call_12141 = func_10420_call()
func_10894_call = mod.get_global_var('func_10894')
func_10896_call = mutated_mod.get_global_var('func_10896')
call_12142 = relay.TupleGetItem(func_10894_call(), 0)
call_12143 = relay.TupleGetItem(func_10896_call(), 0)
func_9866_call = mod.get_global_var('func_9866')
func_9869_call = mutated_mod.get_global_var('func_9869')
var_12161 = relay.var("var_12161", dtype = "uint32", shape = ())#candidate|12161|()|var|uint32
call_12160 = relay.TupleGetItem(func_9866_call(relay.reshape(var_12161.astype('uint32'), [])), 4)
call_12162 = relay.TupleGetItem(func_9869_call(relay.reshape(var_12161.astype('uint32'), [])), 4)
output = relay.Tuple([call_12140,call_12142,call_12160,var_12161,])
output2 = relay.Tuple([call_12141,call_12143,call_12162,var_12161,])
func_12169 = relay.Function([var_12161,], output)
mod['func_12169'] = func_12169
mod = relay.transform.InferType()(mod)
var_12170 = relay.var("var_12170", dtype = "uint32", shape = ())#candidate|12170|()|var|uint32
output = func_12169(var_12170)
func_12171 = relay.Function([var_12170], output)
mutated_mod['func_12171'] = func_12171
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9123_call = mod.get_global_var('func_9123')
func_9125_call = mutated_mod.get_global_var('func_9125')
call_12257 = relay.TupleGetItem(func_9123_call(), 0)
call_12258 = relay.TupleGetItem(func_9125_call(), 0)
output = relay.Tuple([call_12257,])
output2 = relay.Tuple([call_12258,])
func_12297 = relay.Function([], output)
mod['func_12297'] = func_12297
mod = relay.transform.InferType()(mod)
mutated_mod['func_12297'] = func_12297
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12297_call = mutated_mod.get_global_var('func_12297')
call_12298 = func_12297_call()
output = call_12298
func_12299 = relay.Function([], output)
mutated_mod['func_12299'] = func_12299
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10466_call = mod.get_global_var('func_10466')
func_10467_call = mutated_mod.get_global_var('func_10467')
call_12326 = relay.TupleGetItem(func_10466_call(), 0)
call_12327 = relay.TupleGetItem(func_10467_call(), 0)
output = call_12326
output2 = call_12327
func_12357 = relay.Function([], output)
mod['func_12357'] = func_12357
mod = relay.transform.InferType()(mod)
output = func_12357()
func_12358 = relay.Function([], output)
mutated_mod['func_12358'] = func_12358
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12369 = relay.var("var_12369", dtype = "uint8", shape = ())#candidate|12369|()|var|uint8
var_12370 = relay.var("var_12370", dtype = "uint8", shape = (1, 2, 7))#candidate|12370|(1, 2, 7)|var|uint8
bop_12371 = relay.right_shift(var_12369.astype('uint8'), var_12370.astype('uint8')) # shape=(1, 2, 7)
output = relay.Tuple([bop_12371,])
output2 = relay.Tuple([bop_12371,])
func_12387 = relay.Function([var_12369,var_12370,], output)
mod['func_12387'] = func_12387
mod = relay.transform.InferType()(mod)
mutated_mod['func_12387'] = func_12387
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12387_call = mutated_mod.get_global_var('func_12387')
var_12389 = relay.var("var_12389", dtype = "uint8", shape = ())#candidate|12389|()|var|uint8
var_12390 = relay.var("var_12390", dtype = "uint8", shape = (1, 2, 7))#candidate|12390|(1, 2, 7)|var|uint8
call_12388 = func_12387_call(var_12389,var_12390,)
output = call_12388
func_12391 = relay.Function([var_12389,var_12390,], output)
mutated_mod['func_12391'] = func_12391
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11427_call = mod.get_global_var('func_11427')
func_11428_call = mutated_mod.get_global_var('func_11428')
call_12425 = func_11427_call()
call_12426 = func_11427_call()
output = call_12425
output2 = call_12426
func_12430 = relay.Function([], output)
mod['func_12430'] = func_12430
mod = relay.transform.InferType()(mod)
mutated_mod['func_12430'] = func_12430
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12430_call = mutated_mod.get_global_var('func_12430')
call_12431 = func_12430_call()
output = call_12431
func_12432 = relay.Function([], output)
mutated_mod['func_12432'] = func_12432
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11773_call = mod.get_global_var('func_11773')
func_11775_call = mutated_mod.get_global_var('func_11775')
call_12444 = func_11773_call()
call_12445 = func_11773_call()
output = call_12444
output2 = call_12445
func_12447 = relay.Function([], output)
mod['func_12447'] = func_12447
mod = relay.transform.InferType()(mod)
output = func_12447()
func_12448 = relay.Function([], output)
mutated_mod['func_12448'] = func_12448
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10466_call = mod.get_global_var('func_10466')
func_10467_call = mutated_mod.get_global_var('func_10467')
call_12463 = relay.TupleGetItem(func_10466_call(), 0)
call_12464 = relay.TupleGetItem(func_10467_call(), 0)
func_1633_call = mod.get_global_var('func_1633')
func_1638_call = mutated_mod.get_global_var('func_1638')
var_12470 = relay.var("var_12470", dtype = "float32", shape = (84,))#candidate|12470|(84,)|var|float32
var_12471 = relay.var("var_12471", dtype = "uint32", shape = ())#candidate|12471|()|var|uint32
var_12472 = relay.var("var_12472", dtype = "uint8", shape = (600,))#candidate|12472|(600,)|var|uint8
call_12469 = relay.TupleGetItem(func_1633_call(relay.reshape(var_12470.astype('float32'), [6, 14, 1]), relay.reshape(var_12471.astype('uint32'), []), relay.reshape(var_12472.astype('uint8'), [600,]), ), 6)
call_12473 = relay.TupleGetItem(func_1638_call(relay.reshape(var_12470.astype('float32'), [6, 14, 1]), relay.reshape(var_12471.astype('uint32'), []), relay.reshape(var_12472.astype('uint8'), [600,]), ), 6)
output = relay.Tuple([call_12463,call_12469,var_12470,var_12471,var_12472,])
output2 = relay.Tuple([call_12464,call_12473,var_12470,var_12471,var_12472,])
func_12502 = relay.Function([var_12470,var_12471,var_12472,], output)
mod['func_12502'] = func_12502
mod = relay.transform.InferType()(mod)
mutated_mod['func_12502'] = func_12502
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12502_call = mutated_mod.get_global_var('func_12502')
var_12504 = relay.var("var_12504", dtype = "float32", shape = (84,))#candidate|12504|(84,)|var|float32
var_12505 = relay.var("var_12505", dtype = "uint32", shape = ())#candidate|12505|()|var|uint32
var_12506 = relay.var("var_12506", dtype = "uint8", shape = (600,))#candidate|12506|(600,)|var|uint8
call_12503 = func_12502_call(var_12504,var_12505,var_12506,)
output = call_12503
func_12507 = relay.Function([var_12504,var_12505,var_12506,], output)
mutated_mod['func_12507'] = func_12507
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11403_call = mod.get_global_var('func_11403')
func_11404_call = mutated_mod.get_global_var('func_11404')
call_12539 = relay.TupleGetItem(func_11403_call(), 0)
call_12540 = relay.TupleGetItem(func_11404_call(), 0)
var_12548 = relay.var("var_12548", dtype = "float32", shape = (8, 3, 3))#candidate|12548|(8, 3, 3)|var|float32
bop_12549 = relay.bitwise_xor(call_12539.astype('int64'), relay.reshape(var_12548.astype('int64'), relay.shape_of(call_12539))) # shape=(8, 3, 3)
bop_12552 = relay.bitwise_xor(call_12540.astype('int64'), relay.reshape(var_12548.astype('int64'), relay.shape_of(call_12540))) # shape=(8, 3, 3)
output = bop_12549
output2 = bop_12552
func_12565 = relay.Function([var_12548,], output)
mod['func_12565'] = func_12565
mod = relay.transform.InferType()(mod)
var_12566 = relay.var("var_12566", dtype = "float32", shape = (8, 3, 3))#candidate|12566|(8, 3, 3)|var|float32
output = func_12565(var_12566)
func_12567 = relay.Function([var_12566], output)
mutated_mod['func_12567'] = func_12567
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9271_call = mod.get_global_var('func_9271')
func_9273_call = mutated_mod.get_global_var('func_9273')
call_12611 = relay.TupleGetItem(func_9271_call(), 0)
call_12612 = relay.TupleGetItem(func_9273_call(), 0)
func_9077_call = mod.get_global_var('func_9077')
func_9084_call = mutated_mod.get_global_var('func_9084')
const_12614 = relay.const([[8.915903,2.586663,4.918513,-2.486739,-7.710672,-4.958183,-5.816988,-1.277351,1.048239,-5.518082,9.441775,3.775049,-6.931163,-2.803895,2.751246,0.988394,-6.639837,-4.895475,7.658061,-5.495428,3.211992,6.122839,3.961161,5.847986,1.187697,-3.055944,3.535486,-3.752590,-5.705053,-1.935214,-5.325729,-4.944069,-0.171357,-3.406980,4.043822,-8.521104,-8.479605,-3.080571,1.339290,-1.857730,-3.079157,-1.230121,4.660324,2.728709,4.684869,7.558547,-8.401772,-9.164742,-3.779647,-5.585497,0.491049,-4.630029,-9.329247,-2.307063,9.353130,5.152272,3.494696,0.577360,-0.959981,-2.122031,6.956515,-4.020170,-7.523717,-4.143473,0.804606,-1.696691,8.566919,-0.439884,-9.100442,-5.240387,-1.912260,3.475820,9.310270,-5.641501,2.066965,6.328696,-8.771310,-2.816029,-1.431476,7.701501,-0.062636,-2.178514,-8.774152,3.380314,9.751484,-6.770260,5.526569,7.915249,2.894528,1.139927,4.288675,3.811646,-4.892755,-8.292647,-4.303290,-1.546803,9.643118,7.695955,-4.108574,-7.802529,-4.855963,3.249744,-8.497694,-6.870770,-6.370228],[5.743862,-5.587842,5.510219,-6.053217,4.207180,3.442693,6.092463,-6.088597,-5.032412,-8.348187,9.899866,-9.620726,-0.146214,0.508837,-9.620000,-0.655357,8.532871,-2.690623,9.683200,-8.648703,2.841741,1.802751,6.527130,8.407262,-7.345529,-8.346244,-4.244912,-5.991437,-7.346090,3.054482,0.465558,-6.050444,-2.141625,2.208268,5.981241,-5.478566,2.951648,-0.992613,-7.086572,-0.037834,2.337844,-6.223557,0.937851,-0.358593,-7.670530,-7.905037,-7.853200,0.279252,0.342396,-0.160980,-0.631921,-7.264988,-5.019741,-4.837036,-8.746207,9.361931,-6.344528,-0.070486,-1.093901,5.205126,-1.723738,-1.828841,-3.244096,-6.812640,-1.076859,-3.142430,5.526650,-0.749467,6.865929,-6.052076,-6.730219,3.546333,9.782132,-5.006133,7.009210,4.269120,-5.632015,-5.372291,3.496073,-0.340937,4.160349,-8.094615,8.693250,4.638537,-8.400199,5.141476,5.469679,0.789736,-0.619525,8.681589,7.751515,1.031782,-6.449453,-9.440870,-7.967651,-0.634536,6.968738,0.459288,3.627471,-3.684888,-9.976234,-6.580609,-8.857423,1.937287,-5.236888],[-3.417358,4.689075,6.073585,9.580742,3.482037,-2.808934,-7.601816,-7.507651,4.344889,-7.690953,0.901798,3.320514,-7.618634,8.561242,-2.589207,-5.324441,8.700119,-1.240607,-6.418813,-7.124756,-0.211372,7.824240,9.217276,-0.567170,3.618155,-9.852513,8.895268,0.185375,1.705745,3.360813,-5.458083,7.713139,5.994945,-0.893294,1.054836,3.818509,2.790189,-9.545507,1.461317,1.960725,5.667801,7.030663,8.034629,4.648641,-7.777429,-7.201111,-9.794745,-6.045834,-1.676225,6.850270,-9.099659,6.499994,8.113008,-5.369412,-9.281529,-2.837727,3.274410,-2.647609,-0.674537,3.167276,0.684823,0.597114,0.990782,9.503689,-9.082169,-0.859787,-7.735527,-4.173234,7.325185,-0.438751,4.336811,-0.896219,-6.561119,8.460952,-8.353537,7.655290,5.215171,0.857589,7.284905,-9.275884,-1.073109,-9.365990,-1.693306,-1.856941,5.157489,6.781449,4.133091,1.681588,-5.751854,-8.872603,4.954740,-9.801563,-9.448799,-3.900385,8.815716,0.130603,7.005426,-0.821488,9.930592,7.946221,0.727738,3.545962,-4.644989,-7.317576,4.795809],[4.689811,4.463657,8.644340,-5.593403,8.780380,-8.544399,6.262967,-6.747360,7.781239,-0.685754,-2.293831,2.269636,5.469007,-4.471922,7.910363,-2.233514,-5.145204,-2.504826,-8.454678,7.368026,-5.895363,-5.897858,0.492459,0.272052,-7.948981,-2.504011,6.150425,-8.563607,4.558340,1.763833,4.997820,-4.867777,6.174568,8.280002,4.209211,0.996757,5.656914,6.092103,-5.860057,1.046726,-3.757337,9.023328,-6.578613,-2.986344,-5.537804,-3.730415,-3.124693,7.994622,2.784393,2.176411,-5.521910,5.778243,-6.014912,-9.025785,2.393369,-0.559099,1.525762,-1.192252,6.254555,-5.798981,-4.449000,3.049557,1.494584,-2.777663,-8.451380,3.294416,-5.255666,-8.971109,2.624303,8.715361,-4.873400,-2.171249,1.641824,8.885866,-9.969650,-5.016438,-2.813475,5.521078,-5.425784,1.248099,2.620572,0.075182,1.507426,-5.148961,7.515152,2.362025,0.922349,6.101545,-2.325021,-5.573798,-3.526950,5.208911,-5.007371,-3.279370,-7.352856,8.288401,-7.494985,8.340842,-3.947545,-8.167719,1.999993,-8.062181,-6.444957,2.949012,-1.442018],[2.975409,-5.456671,-9.571134,2.486754,-1.624233,-3.302880,9.457499,-2.183275,-5.110649,-8.766872,-3.841361,-4.743759,9.987499,6.189154,-1.143260,-7.458850,-0.190057,-5.602417,1.630369,-7.364624,-2.913437,-2.113146,4.841849,-9.959648,1.123999,8.853147,3.507298,-4.474580,-5.282647,6.771797,-2.785733,-7.311911,7.017499,2.529142,-1.767632,-5.563196,-2.406886,-2.519382,7.111750,0.395093,6.013081,3.910041,-4.131433,3.737119,5.101760,0.836950,-1.634701,-0.738775,5.394882,7.204857,0.940767,-1.878650,-9.961218,-2.255337,8.149496,-4.520888,-7.439943,3.962262,-5.237564,1.995006,-6.871069,2.198100,-1.682695,-0.491410,6.128716,2.822471,6.968064,-7.314729,-6.333171,0.617256,-8.884101,-9.191008,2.068929,7.351103,3.558410,3.841457,-7.899599,-0.497317,9.233417,-5.866695,-0.113052,2.798684,8.146326,0.527943,-6.984304,7.531418,3.059104,5.815565,-8.223787,-9.329945,0.541437,2.495819,-2.954301,-4.886435,-2.427317,-3.471097,-7.184881,-1.131735,6.655613,4.018484,-0.567657,-9.279928,7.610393,2.103405,-8.792600],[7.509408,6.243623,2.368352,-6.417192,1.870432,-6.432763,-9.949476,-7.249254,-8.710598,-7.546600,4.475350,3.992320,-3.251476,-9.175815,-0.132052,3.707842,-8.748822,-0.682964,-8.102484,-7.881769,3.126251,1.741545,1.280263,-5.935296,8.391017,-8.469126,7.364411,-0.291457,-1.465319,0.223899,-3.318817,-1.086882,-4.554787,-4.276357,1.731395,-7.690657,-9.607728,-4.240648,0.006163,6.781979,-2.866393,-4.240439,2.353243,4.174783,6.259166,-4.876950,-5.725791,-4.060390,3.111883,8.897435,6.313652,3.140070,-6.953535,-6.347981,-2.314547,-3.517718,7.140803,7.525840,-4.548292,-3.665659,5.854655,3.879531,4.404266,-9.910758,-0.293077,4.819936,-8.676164,9.576853,3.820138,-8.233785,-7.050430,-4.711295,4.644258,-4.334424,-3.546011,8.132565,-0.871467,0.615193,5.880292,-1.598953,-3.877634,1.339124,6.980382,6.621747,-3.698227,-0.894746,-0.494528,-0.177930,-0.129070,9.752532,0.779295,1.789558,9.763811,4.593282,-4.521676,1.680394,-2.035106,5.262058,0.791179,-8.763182,5.639000,-7.227922,5.659628,7.249795,-1.760348],[-3.620492,-5.489675,2.855719,1.168068,-2.348232,-4.833739,-5.126055,-9.050656,-3.225877,-3.034377,-0.902448,-5.889286,9.108826,7.896138,5.763192,-3.841521,-9.857812,9.541685,-1.745273,-6.953141,4.883820,-0.284174,6.368420,2.972317,1.512281,-5.226055,6.701068,-8.371256,-3.348633,-0.112854,0.597577,-1.573564,1.149036,9.050817,-3.089639,-5.918543,3.919849,8.974113,3.898754,-3.227738,-3.318027,-8.932309,6.985375,-7.079555,9.753607,-3.242174,4.506054,-5.718462,-4.416768,9.602634,6.643131,-5.068382,-4.830636,-2.591707,7.215161,-0.152400,9.882728,3.729419,-5.169017,6.005853,-4.810920,-7.983538,-1.934140,-5.240340,1.086293,7.310172,3.459607,8.220720,7.441818,-5.015793,-4.081443,-1.675137,7.844192,5.112879,6.266031,2.375070,-3.698698,-3.751679,-6.152562,3.727649,-7.394134,1.454118,0.289657,5.886646,-7.313462,8.768411,7.506739,-1.237885,3.003892,-5.282070,-3.688717,8.659603,9.254043,4.259305,-6.512919,1.530588,5.701668,1.999140,7.321166,1.370433,-6.272390,3.152847,-9.438938,-3.792480,5.863151],[1.719313,0.634985,-3.744923,-3.007619,-6.520643,-5.361360,3.966195,-5.968144,-8.057796,7.915223,3.572504,-8.944390,1.578129,3.890550,4.862966,-2.981430,-2.297667,7.197540,6.002467,2.421885,-7.402189,5.842894,7.579950,-2.546998,-2.080545,-7.368537,7.521398,-2.861978,0.712964,0.780353,-3.556067,9.663579,5.868828,1.391769,-8.052161,-2.020667,-3.082600,-5.076451,-7.221857,-7.076789,6.897794,-1.829471,5.126684,7.974281,-2.703078,0.496941,3.364263,-6.683544,8.067941,8.973018,-4.136552,0.493214,0.231201,-8.817682,-2.574406,-5.358122,6.114004,1.035522,0.876447,-3.633380,8.232804,-7.694740,-4.845789,9.132427,-6.111808,-5.671865,-8.908623,-8.257283,8.548793,9.499556,0.594460,9.594183,1.480259,2.622078,-3.453959,-6.234590,-4.743918,-0.609745,7.686522,-7.900498,-0.699498,-2.014988,-6.929611,-1.526399,-4.081062,-9.779177,-0.326569,-6.455228,-2.530058,-2.008653,4.561646,-2.656108,-3.509159,9.294902,-9.780439,0.097360,-4.227339,3.358619,-4.254073,-8.001300,-0.107562,-9.870688,3.913806,-3.461332,0.995557],[-7.034309,9.548217,-1.856893,3.813333,-4.873938,6.613723,-7.743603,0.592801,1.552422,9.946771,-7.561240,-4.680928,-6.924365,-4.995967,1.795006,-1.289324,-6.205089,-8.775159,8.978998,-9.372993,0.254290,7.524693,8.448172,7.883394,2.095881,5.748723,-5.991702,-2.933331,4.185088,0.123588,-3.319281,-8.928560,-7.103056,6.468676,-0.639633,6.198671,-9.580151,6.525370,9.026024,-1.338771,6.232048,8.151209,1.908829,1.222697,-1.884656,1.689859,-6.557270,6.489671,-2.971638,-2.061659,6.999482,-5.470680,-2.226622,0.690262,-6.356991,-6.516322,1.746153,-7.489367,-8.987168,5.093761,-7.241026,4.294801,-8.715649,2.261216,-2.023413,6.723424,8.831019,9.406108,4.170114,-9.524523,-9.140362,-6.986059,-9.495712,-8.397370,-9.781972,7.948694,-0.460905,0.606244,7.347755,5.200385,-5.525307,7.411838,-7.259346,0.137640,-9.685235,0.916176,8.084951,-0.602130,-4.341370,-8.787150,3.346607,-0.170740,-7.973801,-7.969397,-6.017311,4.913561,8.596200,1.427489,7.483425,7.850048,-6.545196,-9.562905,-2.422256,4.829046,3.485631],[3.518039,0.660413,-8.828818,9.778481,8.918466,-7.597547,-8.522970,-4.145277,5.064970,1.248061,9.205089,-1.390847,5.623898,-4.955658,6.858584,-9.016241,-7.112459,-6.811332,1.917828,-9.088630,-2.936696,-0.431091,-1.243027,-9.553709,-9.146928,-7.153613,6.642936,-2.131101,-5.302855,8.128488,-5.211066,-3.445730,5.130137,-3.687598,4.495058,2.535515,7.396308,-9.314804,-5.859727,-8.395877,-8.028553,-5.978958,0.939783,-5.133274,-8.305006,7.046853,4.516334,3.416676,5.375567,-8.583719,-4.183550,-5.821877,4.071986,4.730009,8.705061,-3.654684,2.093048,9.129924,8.616360,-6.176539,0.916588,5.282224,0.242777,5.784819,-4.870587,0.301648,7.214917,-1.238445,0.698507,1.339956,5.801980,-0.734525,-3.657683,2.388202,-4.634260,1.479910,-4.806334,-4.957455,-8.003990,-8.645138,8.082247,7.940085,2.102567,6.820101,-8.224212,0.413931,5.122259,-1.941881,7.021496,9.575437,3.745472,4.345722,3.472700,0.692889,3.163260,-8.105582,-6.414078,9.878952,-7.641790,-7.966204,3.586006,-2.812544,3.877346,7.722382,6.303616],[-9.894619,4.229914,-2.448911,-2.004292,-7.647158,2.120360,-1.708632,7.929181,9.237884,7.647900,-5.675914,7.411240,3.067106,3.976457,2.242582,9.714160,6.095077,0.627429,-2.956429,2.353779,4.404685,6.553322,-7.950772,0.597565,-8.612521,0.633983,-6.769155,-0.237259,-4.332804,-3.269673,-8.746309,7.661525,-1.544476,8.592724,-6.125064,-3.430163,2.805564,-7.851543,-3.228352,6.573665,-8.784880,8.474488,3.647259,-3.464123,4.307049,2.342573,-8.624141,5.017689,7.374929,0.191891,7.545041,1.248777,-3.022138,7.345996,4.164771,9.003967,0.960570,-9.505959,-6.860399,-1.876178,0.672913,3.030681,6.912591,5.954507,2.994734,-0.101311,-0.470992,5.306252,7.826269,0.088461,3.050534,-9.770762,6.758499,9.029884,5.558245,7.988105,9.843346,1.750874,7.637407,9.079856,4.452067,4.314431,8.498950,-7.627959,8.490873,-4.315666,6.955938,-7.388190,7.314019,-6.554094,4.232930,-2.524469,7.049496,1.425863,-0.095399,7.019171,6.788709,1.786381,-5.031649,1.645632,3.133629,-0.399868,2.412041,6.661324,7.569602],[7.163101,2.762357,0.366199,8.661335,1.320685,-5.241861,-4.519680,3.389776,-3.885061,6.928302,-3.495130,1.656256,3.612056,9.177216,-9.312896,6.355435,7.200798,7.671331,8.839340,-4.674437,-5.086601,6.955037,-7.209750,-4.134824,-4.350749,-2.812446,-0.709460,-0.041912,-8.003122,-1.248232,-9.852843,9.058809,-3.711843,-4.871874,1.772594,-1.334108,3.920566,-4.379619,-0.265002,0.119706,5.802611,6.340925,6.399717,6.223149,9.126313,-5.503010,1.469013,-4.313924,-8.826492,9.688259,6.588588,7.566094,-4.512733,-5.155394,-6.854615,2.451435,7.444401,2.940566,-6.039234,5.382153,-3.541782,7.841653,8.270292,9.131984,3.632604,3.774199,-0.374484,3.474826,5.449793,-9.274457,0.658102,4.859322,-9.578053,-1.732671,6.506486,0.988959,3.255724,-9.342527,-8.601618,9.680995,-3.032861,-0.612578,3.015656,3.199855,7.791411,3.447877,-0.135126,5.914789,7.445745,3.764340,6.257588,7.544104,-2.264320,9.290194,3.226559,-6.486256,-3.320538,6.949676,-2.895887,-0.766346,-8.070177,4.344945,-6.870669,0.064473,-6.579690],[-6.882021,7.391763,-1.603795,8.931473,-9.717564,-4.635678,7.873277,8.259270,1.889787,0.720343,9.981680,4.606801,-1.608159,-9.854167,4.249746,1.910014,-6.247592,7.628343,-4.430924,1.002991,-3.775614,6.246288,-7.370703,-0.397190,-3.152738,3.162985,1.635078,-7.374171,-3.477047,0.100062,2.781796,8.395407,-3.371168,4.326651,-0.241526,6.133718,-7.258528,-9.106482,-6.718519,-7.007556,-7.695370,-0.596997,-4.934492,-1.048695,4.779539,5.625323,-0.463594,7.860033,2.523398,3.739053,1.965901,-0.527871,6.631010,-5.553503,4.261546,-9.911326,-9.459648,3.667685,-4.681254,6.971933,-0.105523,-2.761934,9.966711,4.659375,-8.459504,-8.312243,0.349085,-6.932249,4.093073,-4.825907,9.165203,9.247083,-8.479218,7.019859,-7.075170,-8.229522,8.060924,8.360605,-4.232565,5.330053,8.939765,-2.461806,0.410597,0.787998,7.584341,3.485188,-9.886613,-6.349477,-7.142805,4.024865,-9.214026,0.317057,2.340178,7.924244,1.381585,-3.010492,-5.781027,9.197475,5.401550,9.621865,2.594011,-6.385632,0.812215,-8.362685,-9.384810],[-7.752185,8.579513,-0.058418,-3.999807,2.856462,-7.844631,-7.381917,-7.846326,-7.470517,-6.527364,9.550469,4.165599,2.730692,-8.681716,-8.203038,-6.589928,-1.360473,-4.982257,-6.800588,-5.212932,-5.399814,0.712633,3.549413,-1.023320,-7.944161,0.277612,-5.283092,7.598100,8.606256,6.219267,-8.787264,-0.618721,-2.523591,3.242198,5.934722,-9.847319,-0.808764,-6.525437,3.558315,-7.677198,3.590754,5.933530,-5.742809,-9.531055,4.139563,0.658530,1.222756,-7.847910,-6.285308,-4.342762,7.850988,9.621504,-1.376001,9.933400,-3.235356,7.515349,-7.312392,-7.748166,4.470849,-4.598004,-8.120394,-3.481418,-4.420775,3.402074,-5.022137,-7.451117,-6.290612,-7.107048,-1.990235,5.767664,8.547534,-1.583915,7.628823,-6.992261,9.834965,8.960806,-2.245347,6.236979,-7.284546,0.893308,-6.058015,-1.831195,8.084097,-4.784246,5.609951,-8.645895,-1.776577,-4.035240,8.912417,3.314730,3.724913,9.245449,-0.178548,-8.512373,8.891755,-2.213305,-3.642095,1.319826,8.244016,8.840812,5.454130,4.601405,-3.097476,3.040847,-0.753802]], dtype = "float64")#candidate|12614|(14, 105)|const|float64
var_12615 = relay.var("var_12615", dtype = "float32", shape = (1008,))#candidate|12615|(1008,)|var|float32
const_12616 = relay.const([9,9,4,10,10,-7,9,8,8,-7,7,-8,2,2,3,3,1,-3,-1,-10,4,-6,9,-7,7,3,-10,2,-8,-3,6,-4,-10,-1,-9,4,10,-6,-5,5,9,-5,-10,2,-3,-10,4,7,2,7,-9,-7,-2,-8,-6,-10,-3,-5,-3,-1,-3,-7,-7,-3,2,-10,-2,2,10,10,4,-10,-4,-10,-1,5,-3,10,-9,-1,-4,6,10,9,-9,-5,-8,10,7,1,2,-1,-2,-7,8,4,10,8,-9,9,6,8,6,-10,-9,-2,-8,-8,-8,3,-4,7,-8,-4,-2,4,-7,-3,-2,10,5,10,7,-6,-4,10,-10,2,10,5,-10,-1,1,4,1,3,-5,9,-3,-6,6,5,-3,-5,4,6,-9,3,-4,-5,2,-9,3,9,-5,-4,-3,8,-5,-8,5,5,2,5,-6,1,8,-4,-9,8,-10,-6,1,-8,9,7,1,-5,1,-10,-10,-4,-10,1,3,-5,4,-7,-5,3,-4,-5,4,9,4,4,-2,-4,9,4,-5,-9,8,3,-3,-7,-9,-4,-6,2,-4,-4,7,1,-3,1,1,8,6,-5,10,-7,-8,-5,8,4,4,-10,-6,-10,-3,-9,-1,-8,-8,5,6,-6,7,-9,-9,-6,-1,-5,-7,-7,5,7,-1,-2,-7,-7,-3,7,4,-2,1,5,6,10,-6,4,-3,7,7,4,-8,-6,4,10,1,3,2,5,-10,1,-4,-7,-9,4,8,9,9,-9,-1,2,-1,-8,-5,-4,8,2,2,10,8,7,-1,1,2,-4,-7,8,5,4,9,-6,-5,2,2,9,7,3,2,10,4,-10,-4,2,6,-9,5,-5,-8,8,-10,-7,2,-5,-5,-10,-10,-3,-1,-2,-2,4,-10,8,6,5,2,1,3,-10,-2,9,-3,4,7,10,1,-7,-3,-7,2,2,-4,-9,10,5,-2,-2,7,8,6,-3,4,-7,6,5,-6,1,-4,6,10,6,8,-8,7,-8,5,-9,-3,7,10,9,-1,-5,1,-8,7,-6,5,-1,-1,5,-2,7,1,-7,8,-7,8,-5,-7,1,-9,8,-10,-6,8,9,4,-5,9,-5,10,7,4,-7,5,5,-9,-9,2,2,-5,-9,-4,-5,10,2,-10,10,-9,6,-6,-1,4,4,3,7,6,8,-2,-4,1,-4,3,8,10,-7,3,-3,-7,-4,-4,10,-8,-9,1,5,-7,6,3,-3,6,-1,-9,-9,-1,7,-3,-5,-7,-3,6,-4,-9,5,4,6,8,-10,-2,-3,1,8,9,5,8,6,-6,-8,-1,-6,1,-5,-9,-7,-4,-4,2,-1,7,-1,-5,-2,-9,7,-3,7,5,4,8,5,-4,9,10,9,5,6,-6,1,7,7,1,8,5,1,5,-9,2,-7,7,4,5,-4,-6,-8,4,-7,-9,-2,8,2,-7,2,-9,6,4,-10,9,2,10,10,-7,-9,-1,5,-4,3,-5,5,-4,10,10,-7,-3,-4,-2,6,-1,-8,-8,2,-9,5,9,-8,10,1,7,7,-8,4,7,-9,-7,-3,-1,6,9,6,3,3,3,1,1,-1,-1,10,6,-6,-8,7,3,1,-7,4,-10,-1,-10,-4,-2,-1,-1,3,-10,-10,10,-10,-1,7,-6,7,-7,-1,-3,-7,10,-10,-10,-10,-3,-1,-6,-8,-9,-4,-5,3,1,6,-8,3,-2,1,-7,2,-9,-5,-1,-1,-7,7,10,-3,-3,7,3,-9,4,-6,-1,2,-3,-7,7,7,5,-5,4,-5,6,-10,3,-3,1,7,2,-4,-6,9,8,-7,-10,9,-10,-4,-8,5,-4,-10,10,7,-7,-6,9,-6,9,-2,-8,6,-7,2,3,-9,-8,1,8,-9,-6,-8,10,4,9,-2,-8,3,-7,1,4,8,-2,-9,5,-5,-5,-10,1,6,-1,-7,5,4,-6,-3,-8,-2,9,9,1,7,-1,1,-2,-1,3,3,9,1,4,-6,4,3,1,-9,7,8,-4,1,-6,-8,10,9,9,-5,-6,5,10,5,-1,-4,2,-8,1,-2,-10,9,4,-9,10,5,-4,-7,-10,6,7,-10,9,7,5,-8,2,7,5,-8,-10,2,5,8,2,-7,-1,-1,-4,2,-6,8,-10,-3,-3,-2,3,-8,-3,-6,-2,7,-1,-8,5,-8,-2,2,-3,9,-5,10,-4,8,7,-6,8,-4,2,-4,2,1,-8,8,-7,7,5,-9,6,-8,-1,3,8,8,9,-8,-6,5,-1,5,-7,7,2,2,-5,-2,-5,-6,10,2,6,10,-8,-7,-9,4,-7,-9,10,6,4,-2,2,-3,-1,-2,6,10,9,2,10,-6,-10,7,-8,3,-2,4,-4,6,3,-4,-2,-2,4,10,3,-2,-3,-3,3,-5,-3,-6,-6,-2,-2,8,3,-8,-8,-2,6,-2,-4,-10,-10,-1,-3,-8,1,10,8,-9,1,-7,-6,8,6,9,-4,6,-3,7,-6,-9,-6,-2,10,-5,-9,-10,5,8,-9,-1,7,8,-6,8,-3,3,-9,-4,-8,-9,-5,-3,8,-10,-10,9,10,-7,-4,10,-3,7,-10,10,1,-5,10,-7,-1,5,-9,9,4,8,1,7,3,-8,6,8,-9,6,-5,10,-1,7,1,-3,-2,-5,9,10,4,2,8,-7,-7,10,7,7,-5,10,-10,1,4,-8,-5,-4,6,1,9,5,-3,5,-5,10,7,-3,4,3,-9,-10,7,5,3,-1,6,-8,1,8,8,-5,7,3,4,-9,5,7,-5,-9,-8,3,-6,-2,-8,6,-8,10,1,-7,1,7,-5,-10,-7,-3,1,9,-8,-6,-1,2,-3,5,8,-10,7,-5,-4,-5,5,-7,3,-4,7,7,4,7,6,3,3,-2,-1,-3,3,-9,5,7,-4,-10,4,-8,9,-6,-9,-8,4,-3,9,1,5,4,-6,9,-1,10,6,-4,5,-1,-10,-7,9,9,-5,1,2,1,6,7,-8,-5,-7,1,-10,6,-1,4,2,-9,-8,8,-8,8,-10,-3,2,-5,6,2,-10,6,3,3,-5,-6,-5,-3,-5,6,5,-6,-7,9,6,-9], dtype = "uint32")#candidate|12616|(1170,)|const|uint32
call_12613 = relay.TupleGetItem(func_9077_call(relay.reshape(const_12614.astype('float64'), [14, 15, 7]), relay.reshape(const_12614.astype('float64'), [14, 15, 7]), relay.reshape(var_12615.astype('float32'), [1008,]), relay.reshape(const_12616.astype('uint32'), [130, 9]), relay.reshape(const_12614.astype('uint8'), [14, 15, 7]), ), 11)
call_12617 = relay.TupleGetItem(func_9084_call(relay.reshape(const_12614.astype('float64'), [14, 15, 7]), relay.reshape(const_12614.astype('float64'), [14, 15, 7]), relay.reshape(var_12615.astype('float32'), [1008,]), relay.reshape(const_12616.astype('uint32'), [130, 9]), relay.reshape(const_12614.astype('uint8'), [14, 15, 7]), ), 11)
output = relay.Tuple([call_12611,call_12613,const_12614,var_12615,const_12616,])
output2 = relay.Tuple([call_12612,call_12617,const_12614,var_12615,const_12616,])
func_12627 = relay.Function([var_12615,], output)
mod['func_12627'] = func_12627
mod = relay.transform.InferType()(mod)
var_12628 = relay.var("var_12628", dtype = "float32", shape = (1008,))#candidate|12628|(1008,)|var|float32
output = func_12627(var_12628)
func_12629 = relay.Function([var_12628], output)
mutated_mod['func_12629'] = func_12629
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11403_call = mod.get_global_var('func_11403')
func_11404_call = mutated_mod.get_global_var('func_11404')
call_12652 = relay.TupleGetItem(func_11403_call(), 0)
call_12653 = relay.TupleGetItem(func_11404_call(), 0)
output = relay.Tuple([call_12652,])
output2 = relay.Tuple([call_12653,])
func_12660 = relay.Function([], output)
mod['func_12660'] = func_12660
mod = relay.transform.InferType()(mod)
output = func_12660()
func_12661 = relay.Function([], output)
mutated_mod['func_12661'] = func_12661
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12662 = relay.var("var_12662", dtype = "float64", shape = (13, 7, 8))#candidate|12662|(13, 7, 8)|var|float64
var_12663 = relay.var("var_12663", dtype = "float64", shape = (13, 7, 8))#candidate|12663|(13, 7, 8)|var|float64
bop_12664 = relay.mod(var_12662.astype('float64'), relay.reshape(var_12663.astype('float64'), relay.shape_of(var_12662))) # shape=(13, 7, 8)
bop_12668 = relay.right_shift(var_12663.astype('int8'), relay.reshape(var_12662.astype('int8'), relay.shape_of(var_12663))) # shape=(13, 7, 8)
output = relay.Tuple([bop_12664,bop_12668,])
output2 = relay.Tuple([bop_12664,bop_12668,])
func_12671 = relay.Function([var_12662,var_12663,], output)
mod['func_12671'] = func_12671
mod = relay.transform.InferType()(mod)
var_12672 = relay.var("var_12672", dtype = "float64", shape = (13, 7, 8))#candidate|12672|(13, 7, 8)|var|float64
var_12673 = relay.var("var_12673", dtype = "float64", shape = (13, 7, 8))#candidate|12673|(13, 7, 8)|var|float64
output = func_12671(var_12672,var_12673,)
func_12674 = relay.Function([var_12672,var_12673,], output)
mutated_mod['func_12674'] = func_12674
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11403_call = mod.get_global_var('func_11403')
func_11404_call = mutated_mod.get_global_var('func_11404')
call_12684 = relay.TupleGetItem(func_11403_call(), 0)
call_12685 = relay.TupleGetItem(func_11404_call(), 0)
output = call_12684
output2 = call_12685
func_12692 = relay.Function([], output)
mod['func_12692'] = func_12692
mod = relay.transform.InferType()(mod)
mutated_mod['func_12692'] = func_12692
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12692_call = mutated_mod.get_global_var('func_12692')
call_12693 = func_12692_call()
output = call_12693
func_12694 = relay.Function([], output)
mutated_mod['func_12694'] = func_12694
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10075_call = mod.get_global_var('func_10075')
func_10077_call = mutated_mod.get_global_var('func_10077')
call_12703 = relay.TupleGetItem(func_10075_call(), 0)
call_12704 = relay.TupleGetItem(func_10077_call(), 0)
output = relay.Tuple([call_12703,])
output2 = relay.Tuple([call_12704,])
func_12711 = relay.Function([], output)
mod['func_12711'] = func_12711
mod = relay.transform.InferType()(mod)
output = func_12711()
func_12712 = relay.Function([], output)
mutated_mod['func_12712'] = func_12712
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11091_call = mod.get_global_var('func_11091')
func_11093_call = mutated_mod.get_global_var('func_11093')
call_12720 = relay.TupleGetItem(func_11091_call(), 2)
call_12721 = relay.TupleGetItem(func_11093_call(), 2)
func_12565_call = mod.get_global_var('func_12565')
func_12567_call = mutated_mod.get_global_var('func_12567')
var_12728 = relay.var("var_12728", dtype = "float32", shape = (72,))#candidate|12728|(72,)|var|float32
call_12727 = func_12565_call(relay.reshape(var_12728.astype('float32'), [8, 3, 3]))
call_12729 = func_12565_call(relay.reshape(var_12728.astype('float32'), [8, 3, 3]))
func_11531_call = mod.get_global_var('func_11531')
func_11533_call = mutated_mod.get_global_var('func_11533')
const_12731 = relay.const([-9.442316,0.992351,5.664861,-0.094143,3.376581,4.993630,1.290553,2.561880,-8.484947,2.447709,-9.821888,-6.145959,3.093768,-5.180322,-0.856766,-8.567275,7.810049,-6.811552,-8.110853,3.211443,7.428260,-1.155338,0.991184,3.375059,-3.841435,-7.265552,-1.213321,-9.849569,6.470906,-6.267239,-8.219020,8.779470,2.545713,-7.485171,-1.897288,9.553786,-7.642157,7.567489,0.494368,7.859706,8.824288,9.039465,-3.134713,6.496924,-8.295074,4.033402,-8.210293,-1.254052,-8.249933,-6.351980,-2.055272,-3.843386,9.149699,-4.527771,9.423401,-8.433060,5.279327,-3.532704,3.753109,-3.524790,6.818795,-2.621703,-0.544431,5.014109,6.778867,3.354578,6.969699,-4.783238,1.030888,-9.553975,-0.784552,-9.159534,-3.404935,8.140265,-2.376568,0.725543,-5.032761,-7.068593,-5.793704,4.385258,6.999149,-1.619804,9.150865,3.851478,0.665388,4.320989,6.980905,-0.477462,-3.468029,3.635818,8.325683,-4.017482,1.493664,-1.155783,9.296817,5.583396,-7.447671,1.700036,7.046080,2.935923,-4.542987,-2.332355,-3.381402,1.526541,0.948948,7.937520,2.936592,-3.883860,-7.480529,0.671911,-3.893984,-7.390131,-9.592488,-7.606913,7.248452,-9.577233,-5.769037,8.240752,1.667535,4.989043,0.633773,1.936921,8.760985,8.660714,-0.368366,2.726877,-1.474082,-6.389955,6.206762,-1.598095,-9.207397,6.894629,1.069910,6.733662,9.081409,8.326020,4.865107,-6.259287,-3.285095,8.761877,-6.073605,-8.380670,-1.061586,9.868078,1.520898,-8.087879,-3.121129,1.309412,-6.307011,8.050180,0.437291,7.877685,7.659469,4.689539,9.352648,5.340508,3.329392,-2.382482,-2.258571,-6.513293,5.890748,6.771999,-7.725412,-9.047343,4.276462,-7.036154,-7.810583,2.885254,9.918994,-4.111702,9.606796,-2.146659,1.885096,0.398629,-4.618337,5.601096,-3.997687,-0.311652,3.531124,-2.832198,-0.864571,-5.430864,-4.962005,-3.290657,-9.704372,-9.486613,-0.320837,9.013548,-1.637859,6.413919,-3.507263,-3.415543,5.645732,4.564395,0.970300,5.476293,-3.610703,6.862513,-9.324467,3.480764,-9.516055,-5.312909,-1.159737,-4.126878,-5.682761,-5.432922,-9.758664,-4.994695,8.243062,4.915805,4.760850,-0.367230,-0.932542,-0.111117,8.400982,2.171055,9.899482,2.637386,5.516436,-2.184711,4.223978,-9.127728,-9.398816,-0.794461,-2.113247,-8.341105,-1.266494,-7.751593,-9.210294,5.293653,-0.034715,9.785849,7.536495,0.187228,-6.274442,-4.339435,-2.212472,-2.541438,4.830199,-5.509214,-3.339202,4.303368,6.009639,8.841805,-6.274035,-0.165881,3.190390,0.691705,-3.611704,-9.398996,-9.317925,-6.470380,4.899944,2.134138,1.479956,9.971422,4.984566,3.118707,-9.285084,-3.520622,8.321720,5.381663,2.622281,7.653786,1.935216,-5.595524,8.208960,5.574585,6.473236,1.621179,-8.897787,-6.578697,-4.455315,7.833817,-9.255261,5.750380,-3.881504,0.214783,6.644573,7.927829,-8.726822,8.550239,-0.020890,-7.217388,0.281635,8.718257], dtype = "float64")#candidate|12731|(286,)|const|float64
call_12730 = relay.TupleGetItem(func_11531_call(relay.reshape(const_12731.astype('float64'), [286,])), 2)
call_12732 = relay.TupleGetItem(func_11533_call(relay.reshape(const_12731.astype('float64'), [286,])), 2)
output = relay.Tuple([call_12720,call_12727,var_12728,call_12730,const_12731,])
output2 = relay.Tuple([call_12721,call_12729,var_12728,call_12732,const_12731,])
func_12735 = relay.Function([var_12728,], output)
mod['func_12735'] = func_12735
mod = relay.transform.InferType()(mod)
var_12736 = relay.var("var_12736", dtype = "float32", shape = (72,))#candidate|12736|(72,)|var|float32
output = func_12735(var_12736)
func_12737 = relay.Function([var_12736], output)
mutated_mod['func_12737'] = func_12737
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8681_call = mod.get_global_var('func_8681')
func_8683_call = mutated_mod.get_global_var('func_8683')
call_12836 = func_8681_call()
call_12837 = func_8681_call()
func_11773_call = mod.get_global_var('func_11773')
func_11775_call = mutated_mod.get_global_var('func_11775')
call_12839 = func_11773_call()
call_12840 = func_11773_call()
output = relay.Tuple([call_12836,call_12839,])
output2 = relay.Tuple([call_12837,call_12840,])
func_12844 = relay.Function([], output)
mod['func_12844'] = func_12844
mod = relay.transform.InferType()(mod)
mutated_mod['func_12844'] = func_12844
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12844_call = mutated_mod.get_global_var('func_12844')
call_12845 = func_12844_call()
output = call_12845
func_12846 = relay.Function([], output)
mutated_mod['func_12846'] = func_12846
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12660_call = mod.get_global_var('func_12660')
func_12661_call = mutated_mod.get_global_var('func_12661')
call_12905 = relay.TupleGetItem(func_12660_call(), 0)
call_12906 = relay.TupleGetItem(func_12661_call(), 0)
func_10246_call = mod.get_global_var('func_10246')
func_10249_call = mutated_mod.get_global_var('func_10249')
const_12908 = relay.const([-3.522845,-5.026991,3.813541,7.641426,-6.242959,-2.936743,-1.615584,3.837098,-5.758591,9.728570,-7.354503,-1.470943,-1.913571,-6.099509,0.917800,-2.668626,8.948496,3.205154,-9.516988,5.174148,0.886951,2.715316,-3.422425,3.268335,1.952174,-0.837751,9.499160,4.790781,9.842041,-9.468545,9.721099,6.753783,5.897939,6.425653,1.366215,-8.086407,3.664741,-9.341384,-0.184695,-9.176525,4.452275,-1.004467,2.169228,-3.750767,7.001940,9.444928,5.881119,0.769285,7.411840,-9.166041,4.972597,-4.975914,-2.727668,-5.681887,-4.147412,-5.894633,-0.294730,8.887459,-2.811084,-4.940691,-3.014839,3.304925,-1.483169,-3.485266,2.339850,-0.275247,6.214787,9.584014,-7.143875,2.383052,-7.593107,-2.836763,-9.121718,2.597311,9.000035,-7.835661,3.496225,6.744067,-1.767790,-4.748725,-6.881037,-8.118408,8.143663,1.314364,8.761574,-1.367621,-2.433973,-0.615465,-7.376875,-4.287973,-7.135004,3.032695,-2.108762,6.219245,-4.844849,-3.917873,6.088714,6.350915,6.492204,-3.884363,4.312815,-0.123418,3.328804,-6.955378,-3.414579,9.339708,2.092693,1.476278,6.208800,-1.869154,-4.943146,-0.190602,3.942849,-3.827855,-0.216090,1.488786,6.190457,9.518852,7.411412,4.587055,-0.400168,-7.205845,4.540132,5.001372,-7.012242,1.636522,2.949666,-2.708609,0.418191,6.669388,2.900219,6.993924,-6.392641,1.670281,-6.725041,-4.017969,7.865485,-0.822206,-0.138437,9.799498,6.029807,0.067349,-7.680685,3.574623,-9.708749,4.989579,1.040474,-8.078160,-7.597073,7.727259,-2.264538,3.877173,-9.783801,1.615229,-3.022607,-6.928098,9.280420,-8.864978,9.907607,6.698285,-4.012984,-9.025947,9.521671,6.242658,-0.551153,-9.070891,-0.357363,1.709961,0.296099,4.354843,4.002987,6.656606,5.159373,5.349323,9.510410,-3.199034,1.512784,4.330837,-7.894893,-5.071296,-9.523522,0.806260,2.534938,7.101315,7.698185,-6.881284,-6.128593,8.408220,9.164330,9.767828,7.909917,-1.659112,-5.274416,1.103381,-3.120534,3.212271,-9.525699,-9.133999,3.524596,-5.151413,-7.068064,-6.613860,-7.800797,5.908566,-5.227475,-1.140058,-0.708815,-8.323028,6.364273,5.460972,-1.920121,-2.524871,-7.389420,-2.359676,-5.465073,-5.558083,3.175993,-8.494564,2.353998,3.212640,-4.192309,0.598087,-3.883669,5.558448,-0.324846,2.829492,2.291756,2.109385,-0.485824,-7.017806,3.624947,-5.504598,8.093884,-0.071447,-6.057639,-1.479760,-2.253038,6.567043,4.086154,-2.383151,-2.625992,-6.011648,7.870927,6.055335,5.784018,-8.374751,-6.698270,6.684139,6.861597,-4.072505,7.986088,-7.766426,3.461362,-6.893370,-3.310474,-3.067891,8.413067,0.652144,-1.239606,-3.848297,-7.652971,-0.132000,0.534035,-6.791602,-2.879828,-4.398407,9.779888,6.169702,9.825337,0.049054,-9.307021,-5.031200,7.345938,-9.153333,-0.970286,0.268406,1.837006,1.126240,-5.747999,-9.732769,4.380804,-2.169383,5.438544,3.145617,-7.585227,0.453054,-1.769817,-7.353378,2.500498,1.014224,9.411486,-1.866385,9.824329,-9.720872,6.876976,-5.396084,1.901581,7.363124,-6.354169,8.366016,2.872566,7.471564,-3.952133,3.511425,-9.346901,1.682337,-6.588229,-2.280944,-6.876993,9.463252,3.737415,-4.908943,-5.124010,-0.864601,-7.175243,3.489347,-9.961899,5.907835,-6.187410,-2.862743,8.858602,8.634135,3.918573,1.846727,-8.384256,6.333305,-3.375775,-0.291741,0.282025,5.794694,7.714711,8.866809,9.566240,-6.104161,-5.837428,-8.645118,7.923258,2.366305,-3.124967,-0.717190,1.486914,-6.828093,9.355086,-2.987927,6.972489,-5.464120,3.267186,-0.734792,-3.768942,-6.124409,3.295163,-2.656833,-5.526617,7.923357,9.604662,3.663354,9.409195,-0.239866,5.962796,6.239026,7.395893,3.240592,-9.389866,3.026232,-7.064358,1.669022,6.704063,-7.172851,7.916657,-3.936990,7.082113,4.296038,9.972102,6.087476,-9.629931,-9.749580,-6.122730,-5.194582,6.204226,8.381252,-6.888812,-3.363497,9.704531,1.075772,-5.567301,4.891931,-5.488640,6.235745,-2.528384,-9.472086,6.574978,-8.171090,-2.452956,-0.733092,4.947971,4.868789,-2.949865,0.996974,8.612194,-6.589896,-9.295466,4.306467,-9.139757,-5.873009,-3.785349,-4.599329,5.416940,9.128166,8.795526,-8.999352,-7.461697,-4.371082,8.150321,-2.060381,7.667914,-0.931695,-9.839365,-6.086729,-9.086906,2.953631,7.254307,9.595399,6.742735,-8.965911,-3.203363,4.347660,-0.069954,-6.989982,1.974992,-7.599104,1.918645,-8.890997,5.734738,4.170387,6.822089,-3.078349,-4.011642,-3.565650,-4.894777,-7.791257,3.532020,1.294203,-5.718793,3.405953,-9.138952,-6.569324,-2.285670,4.588752,0.250851,-0.226546,-4.711831,0.788041,-1.854671,-4.492929,-9.172176,7.682038,-7.456108,9.043062,-2.019091,-7.068370,8.211667,6.619719,4.563522,7.115333,3.212179,6.241303,-0.244657,-6.556381,-4.893438,2.411767,2.244991,-4.118967,-8.815031,-3.573561,-3.744872,5.036325,1.694403,-2.252863,-4.143747,7.495277,5.154753,9.288292,6.305520,-2.201618,-6.563160,-8.974765,-9.371630,3.934511,5.964124,-2.058431,-9.427906,4.331298,-8.446259,-7.401131,5.320074,-0.485102,-8.590824,-7.642112,3.906257,-1.193259,-0.303774,8.097269,5.721410,9.318581,8.947906,4.304307,-3.381661,4.728678,-4.797207,8.970290,-5.010970,-5.267496,8.843801,-7.272104,9.023707,-1.786831,-4.921960,-0.143974,-0.038556,-5.615095,2.093559,5.537576,-9.537466,-0.460789,-8.005295,-0.092696,9.501891,7.759807,7.410492,7.449098,-0.920170,-4.158010,-2.300427,5.698715,3.501017,-3.268888,8.515384,-3.185814,-2.683111,-7.278746,-8.315537,2.172028,6.058266,-3.490403,1.833952,0.063535,6.064279,-4.813615,-4.658684,-5.962715,5.307591,7.827685,-3.014510,-7.952962,-9.781167,8.561381,1.884599,5.997469,8.506294,2.300644,5.154127,0.571342,-1.121594,-3.495597,5.673568,-7.220941,6.875009,9.927263,9.959699,2.289631,-1.581163,-7.787744,7.790005,-7.138759,0.677794,5.117731,-2.959058,0.251876,-7.125201,4.314845,-1.604452,-7.729996,5.465564,0.072043,0.518693,1.791435,5.152640,9.690198,3.641190,-7.629693,8.045786,2.416472,-9.934118,0.248352,5.392476,-2.495715,-3.513987,0.504607,-9.078839,2.820728,0.839853,1.049677,-8.737216,-5.571351,-2.029028,1.412164,-6.925659,5.725956,6.110965,-9.866376,8.184654,1.420546,3.606173,-2.241681,2.823336,-9.576479,-3.809889,-5.074299,-6.530004,-2.415822,4.600361,5.732892,-1.894010,-7.395441,1.608664,-2.434404,6.298781,-9.552551,6.168586,-0.885471,-9.949694,7.225672,-3.239996,-4.580857,-7.687583,6.986461,-9.404642,-4.845281,7.178855,-6.174566,3.973409,9.828117,-0.650176,1.808642,-0.924469,9.645998,-5.696131,0.843209,-3.325192,-4.045199,-9.938412,-1.586461,-3.295330,-3.644426,9.175586,-0.050716,2.624535,8.622034,9.512913,5.879857,-2.437028,8.901311,-6.253129,3.149453,-7.212328,9.379883,0.271887,7.462112,-6.052285,3.236831,-0.813587,-8.598306,6.834149,-4.627113,1.686591,7.980305,-8.037787,-6.723739,9.629183,9.568780,5.800748,9.710151,-2.035805,-4.517511,-3.320370,-1.000940,7.235935,-3.068167,-0.230710,-5.869312,5.237238,0.052296,-0.820342,-4.214827,8.320206,9.601081,-6.338718,1.265682,1.399261,-3.590253,6.408791,-3.007019,3.897047,9.729419,9.985754,5.609291,6.155036,-7.452610,3.527477,-8.510032,-8.256186,7.882070,-2.180073,3.199275,1.846134,2.330260,-2.415475,1.099451,-6.053286,7.051374,-8.408340,-2.605678,7.575133,6.636289,6.194434,1.934049,1.534130,9.254488,4.925711,2.793678,-3.498735,8.913762,3.091822,-0.613993,-1.911865,5.780969,6.806880,-2.330699,2.873938,6.722641,6.774147,-9.419964,1.424505,-6.232259,2.794159,4.072191,-4.330515,-2.082658,-6.134240,-6.292260,8.781716,5.017275,2.338202,9.119804,-9.987930,-1.783960,-4.754204,-8.622760,-5.739465,-8.215786,4.833680,1.001547,0.803129,1.117661,-8.293350,-6.531702,4.460103,-2.383931,5.748961,7.566114,-7.512328,-7.891760,2.010680,6.166974,5.335987,6.502453,7.477899,0.792070,-4.859126,-4.048964,-1.353852,-1.268812,8.401928,-1.781372,7.050039,-2.260852,8.230119,-2.388370,7.016524,-8.789157,1.112854,6.619828,-4.745326,1.411658,1.569281,-1.439523,-1.487988,-7.672955,9.376341,0.601065,-9.709919,6.636176,-4.390455,-9.286342,4.594692,-2.051776,-0.673103,6.737024,-7.600545,-6.547880,5.426485,0.103545,9.339914,7.807066,9.040905,5.681306,-9.581646,3.864893,-9.606978,-6.822397,6.241638,1.899411,5.147040,-1.560269,3.380482,7.558075,5.240709,6.908632,-8.526723,-1.731137,2.944151,-2.379941,-6.310603,-5.396501,9.414860,-8.427153,4.871646,0.278293,-9.615316,1.941979,-9.429540,-7.758387,1.660876,-6.674762,-0.846175,0.121761,3.472029,1.235812,-0.023364,-2.216135,3.268509,-9.127702,-0.458958,2.506418,0.426097,1.803575,8.139987,-2.255468,3.150798,4.332058,0.730902,5.233836,-6.894604,-6.954899,-5.090944,-6.448987,2.962341,-4.306041,-7.251214,-2.794706,-2.451586,0.586271,-3.537769,0.907923,6.811943,0.664333,8.264969,6.239012,-3.096939,-8.220571,-3.472382,-6.401482,8.835106,-0.985430,-3.898689,-2.092354,-0.741329,-1.846714,6.923847,-2.517122,-1.388139,2.096639,-3.844380,8.751026,-8.716491,6.835936,6.742707,-7.848185,-6.666747,-4.153972,6.403759,-5.884180,2.115269,-0.220627,-6.202835,7.544136,0.717393,-0.819196,4.024662,-3.717846,-5.925376,-5.410004,5.943968,-1.990987,7.333253,-7.341796,4.153680,-6.945168,9.337436,0.998756,1.879547,3.713324,4.057128,-6.157811,2.094482,-3.799823,-8.905145,6.778063,9.332688,-4.112017,3.413738,-5.824846,4.924257,7.433998,4.554153,-4.988478,7.198168,1.519356,5.500142,3.247871,-3.569309,-9.340505,-4.331776,-3.546103,-3.644418,8.059189,5.712242,-9.575713,-8.274860,-2.664207,6.843934,5.710494,-3.709426,6.682101,-7.138887,-2.696341,5.715604,-2.892535,3.505113,0.719526,7.996334,1.941474,-0.540956,0.754781,0.848123,1.242484,-0.160799,6.457876,8.814557,-6.433085,3.489482,2.206921,-1.928260,-3.138047,-9.526397,4.735403,-4.906864,3.753984,-0.632322,-6.836086,-0.374555,-3.937406,-0.409127,3.751190,0.206930,7.728043,-0.952737,8.418549,-7.689984,-9.761765,6.514985,-9.088050,-3.080837,7.507478,-5.241969,-3.248765,9.470542,4.388986,-0.442623,9.703422,9.946413,-7.636254,2.569981,-5.406482,-2.354181,9.564065,-6.896178,8.103627], dtype = "float32")#candidate|12908|(1008,)|const|float32
call_12907 = relay.TupleGetItem(func_10246_call(relay.reshape(const_12908.astype('float32'), [9, 16, 7])), 0)
call_12909 = relay.TupleGetItem(func_10249_call(relay.reshape(const_12908.astype('float32'), [9, 16, 7])), 0)
output = relay.Tuple([call_12905,call_12907,const_12908,])
output2 = relay.Tuple([call_12906,call_12909,const_12908,])
func_12910 = relay.Function([], output)
mod['func_12910'] = func_12910
mod = relay.transform.InferType()(mod)
mutated_mod['func_12910'] = func_12910
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12910_call = mutated_mod.get_global_var('func_12910')
call_12911 = func_12910_call()
output = call_12911
func_12912 = relay.Function([], output)
mutated_mod['func_12912'] = func_12912
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12957 = relay.var("var_12957", dtype = "int64", shape = ())#candidate|12957|()|var|int64
var_12958 = relay.var("var_12958", dtype = "int64", shape = (4, 11, 7))#candidate|12958|(4, 11, 7)|var|int64
bop_12959 = relay.bitwise_and(var_12957.astype('int64'), var_12958.astype('int64')) # shape=(4, 11, 7)
func_12565_call = mod.get_global_var('func_12565')
func_12567_call = mutated_mod.get_global_var('func_12567')
const_12988 = relay.const([-0.845663,7.274234,1.365809,-4.403652,0.530441,5.507139,2.252954,-9.931833,3.960010,-0.472076,-3.831922,3.198637,6.672210,5.094970,6.614155,1.921700,3.933606,6.692257,1.609419,-6.247775,7.927430,1.281197,-2.338608,-4.156890,5.937527,-4.750247,-0.779643,6.579237,4.049315,-4.281695,-2.526159,-9.912140,1.926348,-1.491115,9.589531,6.540127,8.248313,3.234451,-0.890868,6.808505,3.547287,8.504317,4.554701,1.321670,9.277226,8.377947,-8.594404,3.369776,6.440959,-9.822120,-6.955978,7.065239,-1.970376,2.001352,3.578516,-6.256532,-5.822077,-2.469901,-1.723765,9.910071,-5.012135,0.901161,-0.802762,-5.879121,6.004969,9.020446,-6.914758,8.141672,1.264963,-0.319931,7.823205,8.858652], dtype = "float32")#candidate|12988|(72,)|const|float32
call_12987 = func_12565_call(relay.reshape(const_12988.astype('float32'), [8, 3, 3]))
call_12989 = func_12565_call(relay.reshape(const_12988.astype('float32'), [8, 3, 3]))
output = relay.Tuple([bop_12959,call_12987,const_12988,])
output2 = relay.Tuple([bop_12959,call_12989,const_12988,])
func_12990 = relay.Function([var_12957,var_12958,], output)
mod['func_12990'] = func_12990
mod = relay.transform.InferType()(mod)
mutated_mod['func_12990'] = func_12990
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12990_call = mutated_mod.get_global_var('func_12990')
var_12992 = relay.var("var_12992", dtype = "int64", shape = ())#candidate|12992|()|var|int64
var_12993 = relay.var("var_12993", dtype = "int64", shape = (4, 11, 7))#candidate|12993|(4, 11, 7)|var|int64
call_12991 = func_12990_call(var_12992,var_12993,)
output = call_12991
func_12994 = relay.Function([var_12992,var_12993,], output)
mutated_mod['func_12994'] = func_12994
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12008_call = mod.get_global_var('func_12008')
func_12010_call = mutated_mod.get_global_var('func_12010')
call_12999 = relay.TupleGetItem(func_12008_call(), 0)
call_13000 = relay.TupleGetItem(func_12010_call(), 0)
output = relay.Tuple([call_12999,])
output2 = relay.Tuple([call_13000,])
func_13012 = relay.Function([], output)
mod['func_13012'] = func_13012
mod = relay.transform.InferType()(mod)
mutated_mod['func_13012'] = func_13012
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13012_call = mutated_mod.get_global_var('func_13012')
call_13013 = func_13012_call()
output = call_13013
func_13014 = relay.Function([], output)
mutated_mod['func_13014'] = func_13014
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13036 = relay.var("var_13036", dtype = "float32", shape = ())#candidate|13036|()|var|float32
var_13037 = relay.var("var_13037", dtype = "float32", shape = (16, 8, 1))#candidate|13037|(16, 8, 1)|var|float32
bop_13038 = relay.less_equal(var_13036.astype('bool'), var_13037.astype('bool')) # shape=(16, 8, 1)
bop_13048 = relay.logical_and(bop_13038.astype('bool'), relay.reshape(var_13037.astype('bool'), relay.shape_of(bop_13038))) # shape=(16, 8, 1)
output = relay.Tuple([bop_13048,])
output2 = relay.Tuple([bop_13048,])
func_13071 = relay.Function([var_13036,var_13037,], output)
mod['func_13071'] = func_13071
mod = relay.transform.InferType()(mod)
mutated_mod['func_13071'] = func_13071
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13071_call = mutated_mod.get_global_var('func_13071')
var_13073 = relay.var("var_13073", dtype = "float32", shape = ())#candidate|13073|()|var|float32
var_13074 = relay.var("var_13074", dtype = "float32", shape = (16, 8, 1))#candidate|13074|(16, 8, 1)|var|float32
call_13072 = func_13071_call(var_13073,var_13074,)
output = call_13072
func_13075 = relay.Function([var_13073,var_13074,], output)
mutated_mod['func_13075'] = func_13075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8639_call = mod.get_global_var('func_8639')
func_8640_call = mutated_mod.get_global_var('func_8640')
call_13077 = relay.TupleGetItem(func_8639_call(), 0)
call_13078 = relay.TupleGetItem(func_8640_call(), 0)
output = call_13077
output2 = call_13078
func_13085 = relay.Function([], output)
mod['func_13085'] = func_13085
mod = relay.transform.InferType()(mod)
output = func_13085()
func_13086 = relay.Function([], output)
mutated_mod['func_13086'] = func_13086
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12447_call = mod.get_global_var('func_12447')
func_12448_call = mutated_mod.get_global_var('func_12448')
call_13110 = func_12447_call()
call_13111 = func_12447_call()
var_13115 = relay.var("var_13115", dtype = "float32", shape = (504,))#candidate|13115|(504,)|var|float32
bop_13116 = relay.greater(call_13110.astype('bool'), relay.reshape(var_13115.astype('bool'), relay.shape_of(call_13110))) # shape=(504,)
bop_13119 = relay.greater(call_13111.astype('bool'), relay.reshape(var_13115.astype('bool'), relay.shape_of(call_13111))) # shape=(504,)
output = relay.Tuple([bop_13116,])
output2 = relay.Tuple([bop_13119,])
F = relay.Function([var_13115,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_13115,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
	relay.transform.DefuseOps(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

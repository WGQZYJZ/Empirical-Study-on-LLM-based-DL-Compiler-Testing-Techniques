import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_708 = relay.var("var_708", dtype = "float32", shape = (8, 7, 15))#candidate|708|(8, 7, 15)|var|float32
uop_709 = relay.sigmoid(var_708.astype('float32')) # shape=(8, 7, 15)
output = uop_709
output2 = uop_709
func_718 = relay.Function([var_708,], output)
mod['func_718'] = func_718
mod = relay.transform.InferType()(mod)
mutated_mod['func_718'] = func_718
mutated_mod = relay.transform.InferType()(mutated_mod)
var_719 = relay.var("var_719", dtype = "float32", shape = (8, 7, 15))#candidate|719|(8, 7, 15)|var|float32
func_718_call = mutated_mod.get_global_var('func_718')
call_720 = func_718_call(var_719)
output = call_720
func_721 = relay.Function([var_719], output)
mutated_mod['func_721'] = func_721
mutated_mod = relay.transform.InferType()(mutated_mod)
const_767 = relay.const([[[-8,3,7,3,5,10,9,-10],[4,10,-8,-3,2,9,1,-3],[-2,-8,4,10,3,3,-1,4],[4,1,4,5,1,6,-9,3],[-5,2,-4,-9,4,8,8,-1],[8,6,-5,-8,5,10,-2,7],[6,7,2,7,-1,-1,9,-1],[3,-8,8,-7,-7,9,2,7],[3,-9,3,1,3,2,4,-8]],[[1,-9,10,-4,-5,-8,-8,6],[-10,-8,-1,6,-1,-5,-4,-5],[-8,5,-10,-9,-1,3,-4,3],[-4,-9,-10,-10,-5,-9,7,-5],[-8,-7,1,-5,-2,4,-7,-2],[-7,-7,-9,-1,1,5,-4,5],[5,2,9,-10,6,-9,-2,4],[-5,8,8,-8,9,-7,6,-9],[-5,6,-10,6,-2,-1,-9,6]],[[5,-6,3,-2,-9,-7,2,-5],[9,-10,2,5,3,10,10,-6],[10,-10,7,-7,-10,1,-2,-8],[10,10,-7,5,2,2,1,-10],[1,6,-3,-4,9,4,2,2],[1,-3,10,8,5,-7,9,9],[-9,-8,10,-5,7,-10,-3,-2],[-8,-5,-5,2,7,8,7,8],[6,8,7,-5,-5,1,1,4]],[[-10,-8,6,-7,-9,10,4,-2],[3,-8,-3,3,10,-6,9,8],[1,-4,-8,-1,-6,3,-9,2],[-4,10,-3,-5,-9,4,1,7],[10,10,-2,4,-3,8,5,4],[2,9,9,8,3,7,-4,9],[-8,3,-1,8,6,-6,9,10],[-3,5,-3,1,-7,-1,5,-6],[-8,-4,5,-2,9,-4,7,-10]],[[-3,4,9,1,4,-6,3,-1],[-10,9,-9,8,1,8,6,-2],[-2,4,-10,5,8,-2,-3,1],[9,1,-2,-6,1,-5,-2,5],[-1,-3,-5,-6,2,-3,2,10],[-3,-9,-10,-2,-9,-9,3,-4],[2,-9,8,9,5,6,-7,1],[5,-6,5,7,6,4,9,-4],[-5,-9,10,4,-1,5,5,7]],[[3,7,3,3,-10,-9,-5,2],[-7,7,-9,3,9,6,-3,6],[-6,6,-10,7,6,-1,-8,-2],[-3,2,-8,-10,2,-3,-6,-1],[-5,-2,-5,-5,4,1,8,-8],[-2,1,-5,9,8,2,-4,-8],[9,-3,8,5,-5,-5,10,4],[-4,-4,-9,-4,-6,10,-9,-10],[-6,-5,3,8,6,3,-5,-10]],[[5,7,6,8,8,-5,-4,-7],[9,7,-10,2,-8,-4,3,3],[-7,-9,-2,6,-4,-6,5,1],[5,-6,2,-3,-2,-5,-10,-10],[-7,-1,-5,-8,7,7,9,-5],[-7,9,8,2,-10,4,3,8],[-4,-8,5,8,-10,-5,-5,3],[-9,1,-6,-7,10,-6,-7,3],[-5,-10,7,-4,3,7,-8,-9]],[[-5,-6,5,-9,5,10,-2,-1],[5,7,9,2,1,-9,-2,-7],[3,9,-7,5,-6,3,-7,6],[8,-4,7,9,5,-8,-10,-5],[-8,-1,5,-6,8,-10,6,4],[1,10,-6,-5,-1,-8,-10,2],[-1,5,-6,8,2,8,6,-3],[4,5,6,-10,5,-6,3,4],[-10,10,2,3,-8,6,-4,8]]], dtype = "int32")#candidate|767|(8, 9, 8)|const|int32
var_768 = relay.var("var_768", dtype = "int32", shape = (8, 9, 8))#candidate|768|(8, 9, 8)|var|int32
bop_769 = relay.subtract(const_767.astype('int32'), relay.reshape(var_768.astype('int32'), relay.shape_of(const_767))) # shape=(8, 9, 8)
output = bop_769
output2 = bop_769
func_779 = relay.Function([var_768,], output)
mod['func_779'] = func_779
mod = relay.transform.InferType()(mod)
mutated_mod['func_779'] = func_779
mutated_mod = relay.transform.InferType()(mutated_mod)
var_780 = relay.var("var_780", dtype = "int32", shape = (8, 9, 8))#candidate|780|(8, 9, 8)|var|int32
func_779_call = mutated_mod.get_global_var('func_779')
call_781 = func_779_call(var_780)
output = call_781
func_782 = relay.Function([var_780], output)
mutated_mod['func_782'] = func_782
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1046 = relay.var("var_1046", dtype = "float32", shape = (8, 16, 4))#candidate|1046|(8, 16, 4)|var|float32
uop_1047 = relay.cosh(var_1046.astype('float32')) # shape=(8, 16, 4)
bop_1049 = relay.logical_xor(uop_1047.astype('uint64'), relay.reshape(var_1046.astype('uint64'), relay.shape_of(uop_1047))) # shape=(8, 16, 4)
uop_1052 = relay.acos(var_1046.astype('float32')) # shape=(8, 16, 4)
func_718_call = mod.get_global_var('func_718')
func_721_call = mutated_mod.get_global_var('func_721')
var_1057 = relay.var("var_1057", dtype = "float32", shape = (840,))#candidate|1057|(840,)|var|float32
call_1056 = func_718_call(relay.reshape(var_1057.astype('float32'), [8, 7, 15]))
call_1058 = func_718_call(relay.reshape(var_1057.astype('float32'), [8, 7, 15]))
var_1060 = relay.var("var_1060", dtype = "uint64", shape = (8, 16, 4))#candidate|1060|(8, 16, 4)|var|uint64
bop_1061 = relay.not_equal(bop_1049.astype('bool'), relay.reshape(var_1060.astype('bool'), relay.shape_of(bop_1049))) # shape=(8, 16, 4)
output = relay.Tuple([uop_1052,call_1056,var_1057,bop_1061,])
output2 = relay.Tuple([uop_1052,call_1058,var_1057,bop_1061,])
func_1071 = relay.Function([var_1046,var_1057,var_1060,], output)
mod['func_1071'] = func_1071
mod = relay.transform.InferType()(mod)
var_1072 = relay.var("var_1072", dtype = "float32", shape = (8, 16, 4))#candidate|1072|(8, 16, 4)|var|float32
var_1073 = relay.var("var_1073", dtype = "float32", shape = (840,))#candidate|1073|(840,)|var|float32
var_1074 = relay.var("var_1074", dtype = "uint64", shape = (8, 16, 4))#candidate|1074|(8, 16, 4)|var|uint64
output = func_1071(var_1072,var_1073,var_1074,)
func_1075 = relay.Function([var_1072,var_1073,var_1074,], output)
mutated_mod['func_1075'] = func_1075
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1181 = relay.var("var_1181", dtype = "float32", shape = (5, 6, 4))#candidate|1181|(5, 6, 4)|var|float32
var_1182 = relay.var("var_1182", dtype = "float32", shape = (5, 6, 4))#candidate|1182|(5, 6, 4)|var|float32
bop_1183 = relay.floor_mod(var_1181.astype('float32'), relay.reshape(var_1182.astype('float32'), relay.shape_of(var_1181))) # shape=(5, 6, 4)
func_718_call = mod.get_global_var('func_718')
func_721_call = mutated_mod.get_global_var('func_721')
var_1190 = relay.var("var_1190", dtype = "float32", shape = (840,))#candidate|1190|(840,)|var|float32
call_1189 = func_718_call(relay.reshape(var_1190.astype('float32'), [8, 7, 15]))
call_1191 = func_718_call(relay.reshape(var_1190.astype('float32'), [8, 7, 15]))
output = relay.Tuple([bop_1183,call_1189,var_1190,])
output2 = relay.Tuple([bop_1183,call_1191,var_1190,])
func_1192 = relay.Function([var_1181,var_1182,var_1190,], output)
mod['func_1192'] = func_1192
mod = relay.transform.InferType()(mod)
mutated_mod['func_1192'] = func_1192
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1192_call = mutated_mod.get_global_var('func_1192')
var_1194 = relay.var("var_1194", dtype = "float32", shape = (5, 6, 4))#candidate|1194|(5, 6, 4)|var|float32
var_1195 = relay.var("var_1195", dtype = "float32", shape = (5, 6, 4))#candidate|1195|(5, 6, 4)|var|float32
var_1196 = relay.var("var_1196", dtype = "float32", shape = (840,))#candidate|1196|(840,)|var|float32
call_1193 = func_1192_call(var_1194,var_1195,var_1196,)
output = call_1193
func_1197 = relay.Function([var_1194,var_1195,var_1196,], output)
mutated_mod['func_1197'] = func_1197
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1219 = relay.var("var_1219", dtype = "uint32", shape = (9, 16, 16))#candidate|1219|(9, 16, 16)|var|uint32
var_1220 = relay.var("var_1220", dtype = "uint32", shape = (9, 16, 16))#candidate|1220|(9, 16, 16)|var|uint32
bop_1221 = relay.bitwise_or(var_1219.astype('uint32'), relay.reshape(var_1220.astype('uint32'), relay.shape_of(var_1219))) # shape=(9, 16, 16)
output = relay.Tuple([bop_1221,])
output2 = relay.Tuple([bop_1221,])
func_1225 = relay.Function([var_1219,var_1220,], output)
mod['func_1225'] = func_1225
mod = relay.transform.InferType()(mod)
mutated_mod['func_1225'] = func_1225
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1225_call = mutated_mod.get_global_var('func_1225')
var_1227 = relay.var("var_1227", dtype = "uint32", shape = (9, 16, 16))#candidate|1227|(9, 16, 16)|var|uint32
var_1228 = relay.var("var_1228", dtype = "uint32", shape = (9, 16, 16))#candidate|1228|(9, 16, 16)|var|uint32
call_1226 = func_1225_call(var_1227,var_1228,)
output = call_1226
func_1229 = relay.Function([var_1227,var_1228,], output)
mutated_mod['func_1229'] = func_1229
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1290 = relay.var("var_1290", dtype = "uint8", shape = (15, 1, 14))#candidate|1290|(15, 1, 14)|var|uint8
var_1291 = relay.var("var_1291", dtype = "uint8", shape = (15, 6, 14))#candidate|1291|(15, 6, 14)|var|uint8
bop_1292 = relay.right_shift(var_1290.astype('uint8'), var_1291.astype('uint8')) # shape=(15, 6, 14)
uop_1295 = relay.asinh(var_1290.astype('float32')) # shape=(15, 1, 14)
output = relay.Tuple([bop_1292,uop_1295,])
output2 = relay.Tuple([bop_1292,uop_1295,])
func_1299 = relay.Function([var_1290,var_1291,], output)
mod['func_1299'] = func_1299
mod = relay.transform.InferType()(mod)
var_1300 = relay.var("var_1300", dtype = "uint8", shape = (15, 1, 14))#candidate|1300|(15, 1, 14)|var|uint8
var_1301 = relay.var("var_1301", dtype = "uint8", shape = (15, 6, 14))#candidate|1301|(15, 6, 14)|var|uint8
output = func_1299(var_1300,var_1301,)
func_1302 = relay.Function([var_1300,var_1301,], output)
mutated_mod['func_1302'] = func_1302
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1642 = relay.var("var_1642", dtype = "float32", shape = (1, 11, 16))#candidate|1642|(1, 11, 16)|var|float32
uop_1643 = relay.asinh(var_1642.astype('float32')) # shape=(1, 11, 16)
output = uop_1643
output2 = uop_1643
func_1645 = relay.Function([var_1642,], output)
mod['func_1645'] = func_1645
mod = relay.transform.InferType()(mod)
var_1646 = relay.var("var_1646", dtype = "float32", shape = (1, 11, 16))#candidate|1646|(1, 11, 16)|var|float32
output = func_1645(var_1646)
func_1647 = relay.Function([var_1646], output)
mutated_mod['func_1647'] = func_1647
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2469 = relay.var("var_2469", dtype = "float32", shape = (11, 9, 5))#candidate|2469|(11, 9, 5)|var|float32
uop_2470 = relay.exp(var_2469.astype('float32')) # shape=(11, 9, 5)
uop_2476 = relay.erf(uop_2470.astype('float32')) # shape=(11, 9, 5)
output = uop_2476
output2 = uop_2476
func_2479 = relay.Function([var_2469,], output)
mod['func_2479'] = func_2479
mod = relay.transform.InferType()(mod)
mutated_mod['func_2479'] = func_2479
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2480 = relay.var("var_2480", dtype = "float32", shape = (11, 9, 5))#candidate|2480|(11, 9, 5)|var|float32
func_2479_call = mutated_mod.get_global_var('func_2479')
call_2481 = func_2479_call(var_2480)
output = call_2481
func_2482 = relay.Function([var_2480], output)
mutated_mod['func_2482'] = func_2482
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2776 = relay.const(6, dtype = "int16")#candidate|2776|()|const|int16
var_2777 = relay.var("var_2777", dtype = "int16", shape = (10, 1, 5))#candidate|2777|(10, 1, 5)|var|int16
bop_2778 = relay.less_equal(const_2776.astype('bool'), var_2777.astype('bool')) # shape=(10, 1, 5)
func_1071_call = mod.get_global_var('func_1071')
func_1075_call = mutated_mod.get_global_var('func_1075')
const_2785 = relay.const([4.729273,5.557850,4.592127,2.816986,3.136447,-2.850938,-5.545366,-8.592981,0.119088,5.805135,-4.042682,5.901807,5.790946,6.238831,4.993287,-8.049575,9.720765,5.907745,-6.017893,-2.061172,-0.557009,7.451969,-7.549612,4.210617,4.952171,-8.052102,9.400175,6.408114,-1.079948,-1.115643,5.623284,-7.231302,-1.466348,4.713486,-1.960520,-6.111710,7.807865,9.048657,-7.422924,2.602071,-8.805668,4.110721,9.481405,-7.789122,-4.078488,-7.950977,6.412829,-8.974993,-2.134453,-0.648376,-9.677397,0.316102,0.024870,3.848238,-7.169655,3.840541,-3.201029,-6.844919,-2.740377,8.416895,1.456823,-4.393080,-7.174400,-1.493980,-5.138493,-8.152399,-5.729205,-4.285459,-4.461989,9.073358,6.796407,2.437762,8.756158,2.434295,9.324991,-5.788337,-9.766885,7.452168,-7.869880,-9.265910,0.800813,8.309355,-7.474446,5.777876,3.538196,9.419407,0.239844,4.999247,7.879314,-3.673709,1.952776,8.872579,7.862720,0.157682,2.592887,3.092525,-7.936926,-8.239427,-9.456399,0.059763,-8.993659,-2.619003,-7.667330,-4.818845,7.779577,-8.794391,-3.318593,-1.727439,-7.880756,3.182184,3.155459,-1.909600,2.810570,5.053155,-4.649240,7.046064,1.237334,0.881731,0.261130,8.723029,-2.187467,-0.308879,-4.522283,1.844517,-5.920382,-6.922911,9.805157,3.350057,7.062855,-4.039244,4.872932,-2.562442,-6.937560,-6.965818,3.314044,-2.497975,1.476423,-7.544738,7.906632,5.248539,-3.444800,-0.801668,-8.339426,-3.056072,-7.068115,-7.844944,0.998340,-0.408248,-0.091280,4.644279,4.402701,6.881381,-1.130469,-9.194100,6.442619,9.318360,0.230139,2.767411,0.150152,3.303854,6.724241,-2.136228,-9.346492,-5.237597,4.346817,-3.573955,9.280139,-3.502050,-1.060012,0.229991,-6.288989,8.338880,-2.800247,2.408845,0.046722,1.322181,-6.847160,2.598453,6.824842,2.016004,1.692700,6.544597,-6.102883,0.026607,-7.061190,-7.715019,7.555735,-3.733819,1.565772,-0.171524,-1.491926,8.313863,5.586432,0.402958,-9.571096,4.768139,-6.390541,-3.500769,-6.638114,5.915719,-4.531429,7.892464,-6.893259,-5.721491,-7.862962,-7.985080,-9.544341,9.602197,-0.133766,-0.195706,-8.606920,-6.697337,-6.365971,5.666644,-7.456366,8.531164,-4.448669,6.768306,-9.549831,-5.860220,-1.309495,9.638269,-5.165603,-6.855235,5.192119,1.259409,-9.455436,1.975798,-0.804131,-5.687174,4.370243,-3.665386,-9.559424,-3.501566,4.423159,7.398234,1.292029,-0.326462,-3.956281,-7.442383,-3.280089,8.906356,-5.222326,5.353373,4.511520,3.876115,-9.594384,-9.775455,7.255666,6.675961,-7.423102,-3.544246,-2.537882,9.673358,2.438050,-5.000037,-8.184007,7.174318,-5.952262,2.016662,-3.383864,5.510037,-2.381515,6.663133,-3.435145,-5.247827,-9.304842,6.060585,-9.116035,3.862334,-2.092154,7.853003,9.895345,6.246038,3.963506,4.445660,-7.554949,-3.356623,-9.413879,-7.795264,5.215024,9.855075,-1.477234,-7.151488,-0.543055,-3.012222,5.257974,5.746163,-5.001223,9.645011,3.718050,7.056235,9.666998,1.605695,-6.114134,-7.289239,-9.711011,3.074217,-4.683354,6.495601,6.824038,-3.665951,2.278414,5.661505,-6.417427,-7.299453,8.755110,0.868501,9.432584,-0.627377,8.390210,6.064180,7.047913,-9.512628,-9.745192,-9.077251,9.939628,7.925946,-6.573914,6.218158,9.002337,-6.419702,5.120579,1.978148,-8.801752,-7.234771,-0.375919,-5.470795,-7.962886,-7.932285,-1.870642,-9.488376,6.201660,9.805819,-5.608337,-0.972055,-4.276148,-7.297514,3.750186,-7.018154,-5.857738,9.394056,5.810316,-6.406930,-9.419638,-2.663231,9.403295,-3.939950,-6.064214,-0.672687,-1.105256,-0.706757,7.592652,0.225443,-3.584910,6.546790,-4.455697,-9.609133,-6.460150,-1.602561,6.276841,7.556434,2.643564,6.938927,7.982070,9.406360,-7.740859,-7.455838,-2.344586,-6.505360,-9.713096,9.554160,-4.251702,-1.601618,-8.274111,5.939074,5.454961,-3.729418,8.380762,8.656668,4.216026,-2.315303,-6.263576,-4.117209,-6.250705,-1.912993,-5.527771,-7.515859,9.365486,6.172374,4.962683,9.604717,9.925059,3.546445,4.274546,-2.929195,1.397251,-8.658327,4.376010,0.864901,-7.901726,-3.858068,4.732460,0.988817,9.737076,7.325271,-9.475045,-5.304987,-9.383142,-9.307600,-3.873096,4.234351,2.187112,6.125472,-8.730242,1.765988,-4.144672,2.670015,-4.695605,-6.649123,2.860829,-3.663651,-5.720099,6.588934,-4.358010,-7.246911,-8.930010,0.336052,-8.184470,9.220444,9.339828,9.855488,-7.623820,5.163995,4.268855,8.276359,9.569164,-2.965365,-2.571309,8.905392,0.084807,8.925092,0.938285,-9.314734,2.607204,-9.302645,-9.256826,5.502348,-3.243890,5.933353,-4.996576,-5.961368,-9.322404,-0.162204,-5.018228,0.550250,4.295870,-1.633955,4.836523,-6.492116,-9.450992,9.130773,-6.473992,1.123707,-8.947779,5.767142,0.249711,-6.996733,-5.861042,-4.236425,-9.026750,4.482412,-7.901329,-8.916521,-6.995307,2.785415,7.690471,9.418592,6.457089,-0.610135,8.184075,-6.365849,7.730738,-8.665509,4.753884,2.378448,-3.168764,-9.351320,-5.918944,7.644238,1.723070,2.714373,0.125942,9.803869,9.425893,-7.531537,0.683650,-8.885909,-6.928106,-8.347451,1.395291,4.237225,-4.681151,3.956449,9.764160,4.168332,6.942773,9.538478,7.912767,5.075070,6.495755,0.309273], dtype = "float32")#candidate|2785|(512,)|const|float32
var_2786 = relay.var("var_2786", dtype = "float32", shape = (840,))#candidate|2786|(840,)|var|float32
call_2784 = relay.TupleGetItem(func_1071_call(relay.reshape(const_2785.astype('float32'), [8, 16, 4]), relay.reshape(var_2786.astype('float32'), [840,]), relay.reshape(const_2785.astype('uint64'), [8, 16, 4]), ), 0)
call_2787 = relay.TupleGetItem(func_1075_call(relay.reshape(const_2785.astype('float32'), [8, 16, 4]), relay.reshape(var_2786.astype('float32'), [840,]), relay.reshape(const_2785.astype('uint64'), [8, 16, 4]), ), 0)
func_718_call = mod.get_global_var('func_718')
func_721_call = mutated_mod.get_global_var('func_721')
call_2811 = func_718_call(relay.reshape(var_2786.astype('float32'), [8, 7, 15]))
call_2812 = func_718_call(relay.reshape(var_2786.astype('float32'), [8, 7, 15]))
bop_2818 = relay.not_equal(var_2777.astype('bool'), const_2776.astype('bool')) # shape=(10, 1, 5)
output = relay.Tuple([bop_2778,call_2784,const_2785,var_2786,call_2811,bop_2818,])
output2 = relay.Tuple([bop_2778,call_2787,const_2785,var_2786,call_2812,bop_2818,])
func_2823 = relay.Function([var_2777,var_2786,], output)
mod['func_2823'] = func_2823
mod = relay.transform.InferType()(mod)
mutated_mod['func_2823'] = func_2823
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2823_call = mutated_mod.get_global_var('func_2823')
var_2825 = relay.var("var_2825", dtype = "int16", shape = (10, 1, 5))#candidate|2825|(10, 1, 5)|var|int16
var_2826 = relay.var("var_2826", dtype = "float32", shape = (840,))#candidate|2826|(840,)|var|float32
call_2824 = func_2823_call(var_2825,var_2826,)
output = call_2824
func_2827 = relay.Function([var_2825,var_2826,], output)
mutated_mod['func_2827'] = func_2827
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2975 = relay.var("var_2975", dtype = "uint8", shape = (14, 15, 7))#candidate|2975|(14, 15, 7)|var|uint8
const_2976 = relay.const([[[-2,10,7,-4,-7,10,-7],[1,6,-3,1,7,2,-4],[-3,-8,9,3,-2,-4,7],[2,3,-5,5,4,-9,9],[8,8,-2,4,-4,5,7],[-6,-5,8,2,-7,-1,-2],[-1,4,4,-1,-10,-8,-4],[-10,-4,5,5,-7,7,5],[-2,10,7,3,6,10,10],[10,-2,-5,7,6,-1,10],[-5,-6,1,2,-10,3,-2],[-3,10,-4,-6,-9,-9,6],[9,10,10,-3,-3,-2,4],[10,8,-6,-9,-3,1,7],[-8,-2,8,1,9,10,10]],[[7,-7,8,4,-4,-6,5],[8,9,-4,2,-4,-1,-6],[-7,3,10,4,-3,-4,9],[-3,-1,-10,-6,-1,6,3],[10,-8,-8,2,-1,8,3],[1,5,-10,-5,-7,5,-3],[-3,10,-8,10,-9,5,-9],[4,-6,7,8,-8,-8,-6],[-4,5,5,-1,-4,-8,5],[5,-8,-5,-3,-8,10,6],[2,2,-2,3,2,10,-7],[3,4,6,-6,-8,5,-3],[-3,-4,2,-1,5,-2,8],[-5,10,8,3,-8,7,9],[2,-9,-1,-10,-3,7,-4]],[[4,-1,-8,-6,-7,-2,-9],[10,3,10,-7,-6,-5,-7],[-4,-1,3,-7,3,9,4],[6,10,-3,-2,-4,-5,-7],[9,5,4,-4,-10,-10,-6],[-4,2,-6,-9,-7,2,-9],[4,-1,7,8,4,10,5],[-6,1,-1,-1,9,-6,1],[10,6,4,-8,-3,-2,-10],[-8,4,-6,-5,10,-6,8],[-3,-9,-6,8,-4,3,-7],[-4,-9,2,8,6,8,3],[-5,5,9,3,-9,-7,9],[10,-5,3,-7,-7,6,10],[9,8,-4,4,-7,3,9]],[[-10,-2,-6,-7,10,5,-10],[-1,7,-6,6,9,5,8],[-5,8,5,8,-6,10,8],[5,8,-8,10,1,-6,-7],[-8,9,-9,-1,-8,6,3],[-3,-1,8,-6,6,2,3],[2,9,6,5,6,2,4],[-9,3,-9,10,-8,6,2],[3,-8,-7,5,6,9,-6],[5,8,-7,5,7,-5,-2],[1,3,-1,-9,9,-2,-5],[-6,-3,-1,4,-1,-7,-4],[5,3,2,-10,-6,-1,-6],[-7,-5,2,-5,-6,4,-10],[10,-1,-2,3,-10,-4,5]],[[-1,-8,9,-3,-1,5,-7],[-9,-10,-3,-5,5,6,4],[-4,-7,9,-5,-1,1,-7],[1,5,-5,8,6,-2,3],[10,7,-6,9,2,-6,-4],[-4,3,-9,3,5,-9,-9],[4,8,-1,8,-1,-5,-2],[-3,5,-7,3,9,9,9],[7,-8,10,-6,3,10,-2],[-5,5,-1,7,1,6,-6],[-5,3,-3,-4,-9,7,6],[-5,2,3,10,-10,-3,-7],[-2,-4,-7,1,-9,6,7],[1,-1,-2,-8,2,8,-7],[4,8,6,-5,10,-5,-2]],[[7,2,-3,-4,-8,7,-2],[-4,5,-2,6,-6,1,10],[3,4,-1,7,3,-6,-6],[1,-9,-7,-4,9,7,4],[1,3,-4,-5,-5,-9,-6],[9,2,-7,8,-5,-5,4],[-10,-9,2,7,8,3,4],[4,-10,1,-5,-3,4,-5],[4,2,-10,7,2,-8,-5],[8,6,1,-6,-8,-3,-4],[-2,-8,8,2,-3,-10,2],[9,-10,9,8,-3,-2,-5],[-3,6,8,2,5,4,3],[-3,3,-2,-9,-10,-1,-3],[-4,-2,5,-2,1,9,-10]],[[-4,-8,-9,8,-3,-2,-4],[-5,-10,5,-6,7,5,4],[3,-8,8,-3,4,-8,-8],[9,-5,-1,3,-6,-6,7],[-2,5,8,2,9,2,-7],[-10,1,9,4,-3,-3,6],[-2,3,5,-9,1,-8,7],[4,10,-10,-5,-1,6,6],[2,1,4,-10,-1,-3,-10],[-5,-2,-4,-2,5,3,6],[9,1,3,-7,-7,7,6],[2,-10,-7,-5,5,3,-5],[-6,-8,-3,10,2,-5,6],[6,-2,10,-7,-4,-7,-10],[-1,-9,-5,3,3,-6,-1]],[[-3,-2,1,-9,-6,7,9],[-1,6,-3,8,-9,6,6],[-8,-2,6,-2,-8,7,7],[3,9,4,-5,-8,5,-6],[1,4,9,-10,1,-1,3],[2,3,6,9,-7,7,7],[-5,4,5,7,3,10,-9],[3,-10,-2,10,6,1,6],[-1,9,-6,-3,-10,-4,10],[-9,6,1,-6,-2,4,-10],[3,3,8,9,-7,-4,7],[-2,-3,-5,2,6,2,8],[8,-1,1,3,7,3,8],[-3,-5,-1,-5,-7,4,-8],[-3,-2,-4,2,-6,5,10]],[[-9,5,-3,-6,-9,3,-9],[9,-3,4,5,-8,-5,1],[10,-10,-10,-3,-7,9,10],[-10,-1,8,3,-7,2,-3],[-2,7,-6,2,-3,-10,4],[6,5,4,-7,10,-6,8],[4,5,8,7,10,-1,-6],[5,4,5,7,5,-4,2],[2,6,-3,-2,-4,4,-10],[-8,10,8,5,3,-3,-6],[5,-6,9,-3,-4,1,3],[3,4,2,7,8,-1,5],[-1,-2,-8,5,2,-8,-2],[4,8,-1,-9,6,2,9],[5,9,5,-6,2,10,7]],[[10,-9,-7,2,-9,2,8],[-9,7,-10,-4,10,6,9],[-5,6,-8,-10,3,-4,10],[10,-9,-4,3,-3,-9,-6],[4,-2,2,6,2,8,5],[-10,9,4,6,-2,-2,-7],[7,-5,-9,-2,5,-2,2],[-2,3,4,1,9,6,10],[6,6,-3,6,9,2,6],[1,-7,6,7,1,8,7],[9,9,-7,9,-9,9,-3],[-2,-8,-10,5,4,-6,2],[-4,7,8,-1,4,-2,-6],[-10,3,-9,-4,5,-5,-3],[-3,6,-6,1,10,7,-1]],[[-6,10,-6,-8,6,-6,-1],[-10,-3,-1,-10,-3,-9,2],[-8,4,2,1,-9,-4,1],[7,-10,-6,4,1,4,-5],[-6,8,-2,9,-6,-1,-7],[3,-5,-2,1,-6,-7,9],[1,-4,-10,3,5,-5,2],[8,-1,9,-3,-8,9,9],[3,7,1,4,-2,-3,-1],[-7,-4,-2,8,-8,-2,-5],[-2,-7,2,10,-3,-5,1],[1,-8,-5,-5,-7,10,-4],[-4,3,3,3,-4,-9,7],[-4,-1,2,-7,-2,-6,5],[-6,8,10,-10,-1,-10,-5]],[[-6,2,5,-8,5,-6,8],[-7,7,4,7,-5,8,-7],[-5,-7,9,2,5,2,3],[-8,-9,-4,2,10,-3,-4],[4,-7,-8,-9,-6,-2,1],[2,4,-5,-8,-9,-10,-10],[7,3,-7,-10,7,-3,-2],[-5,-9,-7,8,5,-4,6],[5,-6,-10,-4,9,4,-5],[10,-2,-2,-1,-3,2,7],[-4,1,-1,-4,6,-9,-3],[-3,-8,8,8,-10,-9,-10],[-2,-1,1,8,1,-2,1],[3,2,2,1,-9,-10,-9],[-3,1,5,-2,4,-8,-5]],[[1,10,9,2,-4,-3,-3],[2,-1,-1,10,4,2,-3],[10,-9,-3,-7,-2,6,-5],[9,-2,-9,5,5,4,7],[-7,6,-10,10,-7,8,7],[5,4,9,-4,9,6,5],[5,-8,4,-10,1,8,7],[7,-9,-6,-6,-9,3,2],[-3,-1,-8,-3,-5,7,-2],[-5,-10,-5,-7,-1,7,-5],[-9,-4,-3,3,6,-6,-8],[8,-7,-9,5,5,4,-7],[6,-3,-1,9,2,7,-9],[-10,5,7,10,6,-9,-9],[7,-5,-8,-9,-5,-2,2]],[[6,2,6,-3,9,8,-9],[8,-1,-4,7,-5,2,7],[-9,-5,8,-1,7,9,7],[3,4,4,6,2,-9,-2],[-6,-4,5,2,-9,10,-6],[3,-8,-9,-8,10,10,-7],[-6,9,9,-9,-5,10,3],[-9,10,-4,8,3,-8,-10],[-2,7,-10,-3,10,-3,-4],[-8,-4,-8,8,-5,7,4],[8,4,-3,-9,7,-1,-6],[1,-7,5,-5,8,-6,2],[8,9,-10,-7,5,-7,9],[-9,-4,3,1,-5,-2,2],[5,-1,1,-2,-6,5,4]]], dtype = "uint8")#candidate|2976|(14, 15, 7)|const|uint8
bop_2977 = relay.subtract(var_2975.astype('uint8'), relay.reshape(const_2976.astype('uint8'), relay.shape_of(var_2975))) # shape=(14, 15, 7)
func_1071_call = mod.get_global_var('func_1071')
func_1075_call = mutated_mod.get_global_var('func_1075')
var_3017 = relay.var("var_3017", dtype = "float32", shape = (1, 512))#candidate|3017|(1, 512)|var|float32
var_3018 = relay.var("var_3018", dtype = "float32", shape = (840,))#candidate|3018|(840,)|var|float32
call_3016 = relay.TupleGetItem(func_1071_call(relay.reshape(var_3017.astype('float32'), [8, 16, 4]), relay.reshape(var_3018.astype('float32'), [840,]), relay.reshape(var_3017.astype('uint64'), [8, 16, 4]), ), 2)
call_3019 = relay.TupleGetItem(func_1075_call(relay.reshape(var_3017.astype('float32'), [8, 16, 4]), relay.reshape(var_3018.astype('float32'), [840,]), relay.reshape(var_3017.astype('uint64'), [8, 16, 4]), ), 2)
func_1071_call = mod.get_global_var('func_1071')
func_1075_call = mutated_mod.get_global_var('func_1075')
call_3020 = relay.TupleGetItem(func_1071_call(relay.reshape(var_3017.astype('float32'), [8, 16, 4]), relay.reshape(call_3016.astype('float32'), [840,]), relay.reshape(var_3017.astype('uint64'), [8, 16, 4]), ), 1)
call_3021 = relay.TupleGetItem(func_1075_call(relay.reshape(var_3017.astype('float32'), [8, 16, 4]), relay.reshape(call_3016.astype('float32'), [840,]), relay.reshape(var_3017.astype('uint64'), [8, 16, 4]), ), 1)
output = relay.Tuple([bop_2977,call_3016,var_3017,var_3018,call_3020,])
output2 = relay.Tuple([bop_2977,call_3019,var_3017,var_3018,call_3021,])
func_3022 = relay.Function([var_2975,var_3017,var_3018,], output)
mod['func_3022'] = func_3022
mod = relay.transform.InferType()(mod)
var_3023 = relay.var("var_3023", dtype = "uint8", shape = (14, 15, 7))#candidate|3023|(14, 15, 7)|var|uint8
var_3024 = relay.var("var_3024", dtype = "float32", shape = (1, 512))#candidate|3024|(1, 512)|var|float32
var_3025 = relay.var("var_3025", dtype = "float32", shape = (840,))#candidate|3025|(840,)|var|float32
output = func_3022(var_3023,var_3024,var_3025,)
func_3026 = relay.Function([var_3023,var_3024,var_3025,], output)
mutated_mod['func_3026'] = func_3026
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3028 = relay.var("var_3028", dtype = "float32", shape = (5, 15, 4))#candidate|3028|(5, 15, 4)|var|float32
uop_3029 = relay.cos(var_3028.astype('float32')) # shape=(5, 15, 4)
func_2823_call = mod.get_global_var('func_2823')
func_2827_call = mutated_mod.get_global_var('func_2827')
var_3048 = relay.var("var_3048", dtype = "int16", shape = (50,))#candidate|3048|(50,)|var|int16
const_3049 = relay.const([2.030937,3.943908,9.926018,3.173103,6.687656,7.862103,-6.533286,-7.746247,8.358214,6.512831,-6.384778,3.158182,-8.201455,6.853087,4.294871,4.765498,-1.675943,-9.772590,7.152002,-0.817057,6.518942,1.143632,3.942912,1.625317,9.192255,9.856455,-5.907759,-8.177670,2.090295,-1.774812,3.837136,-5.382161,-5.659432,-4.169975,-6.238364,-5.338472,-7.718352,3.825158,9.799675,-9.385011,-8.756438,-5.571650,-4.461073,5.352781,0.330100,-7.261204,6.053471,-7.555068,-6.806498,2.611543,9.056511,-4.050260,3.511768,3.226033,-8.725685,-9.459696,5.852292,3.558677,5.676624,-9.449381,-5.254932,-6.374053,0.499063,5.206939,9.322418,-7.747814,7.585594,-3.700484,2.570069,1.425356,8.168331,-4.327939,1.991933,-3.168275,-3.216366,8.388371,0.220121,3.230169,-5.368711,-4.615364,7.461187,-6.207064,-6.219325,-7.065902,-9.590011,9.930738,8.350709,-1.569298,-1.117471,8.783384,4.673949,7.905371,-7.566800,1.792599,-7.220804,-6.842285,9.113096,-9.202223,2.795781,0.475228,-6.135221,9.425857,-2.398763,-2.466266,-5.261510,0.689136,-9.919796,8.947382,8.055375,7.077293,-7.427978,-8.501986,-9.129197,0.858097,5.526529,8.718450,-1.781312,0.086004,2.677872,6.234639,4.397403,7.881641,5.486396,2.498935,-2.758742,-7.832641,-2.653755,-1.929942,1.986043,4.151880,-0.846427,8.591383,9.294889,6.229000,-2.767380,4.635268,6.135930,-5.806601,5.453690,-7.949830,-3.537621,-8.924125,1.300635,-2.256827,8.974642,5.260062,-5.876459,-4.761930,3.393766,-3.943850,-3.803112,6.384380,2.647560,-3.223633,5.835016,-3.723904,-9.241996,6.922601,2.414425,-6.411374,0.582267,-5.565738,-5.276161,0.162771,-7.681110,-2.523204,0.876874,-0.249623,5.774652,9.604743,1.148301,-3.226225,0.263756,7.785085,9.253931,3.031131,3.569328,5.426823,-8.683509,3.154500,-0.853913,4.579039,-3.789416,-1.574307,-3.529234,-8.176407,2.388758,1.981602,-6.918631,2.330536,7.049511,-4.625208,-8.837550,-1.150091,7.673441,4.484653,4.731490,4.679131,3.098462,4.656714,-2.681453,5.477942,0.006138,-7.145891,-1.433974,0.997882,-8.253204,-8.168748,5.041267,0.340308,5.540809,2.781433,5.600458,-1.093147,-5.276723,-9.956447,7.687596,7.668808,3.845652,1.426267,6.057378,9.362504,-5.922586,3.831036,-2.925564,-7.143108,3.892964,0.355242,8.908763,7.279312,3.917712,-0.135031,-8.969319,2.879342,6.646462,8.221653,-1.676822,-9.558608,-7.813911,-8.776015,-5.624654,-1.605799,-3.754902,-9.894413,5.351988,-0.806862,3.646443,-0.904404,-4.087037,6.945948,-5.558987,-5.476628,5.688365,7.026898,-0.182707,9.606048,9.333847,4.996452,9.463247,9.825841,4.903981,3.126756,-1.313913,-0.321354,-4.015191,-2.384066,-2.746857,9.578716,0.917111,-9.966940,-3.456477,-7.124028,4.265337,-3.047100,7.957412,-2.796714,1.354850,0.339472,7.258890,-0.347873,-0.782137,-2.308219,6.267801,-4.417426,-8.811946,4.789105,-8.227571,-7.331232,2.789073,-0.960646,-5.839103,4.143094,2.285149,1.039177,3.490555,-2.337693,-5.526300,-6.219067,-1.973848,-8.942133,4.417698,5.884894,7.841193,-1.751523,-5.965263,2.785221,2.385564,-3.419768,-1.744341,5.954604,3.688638,1.344061,-8.836667,-4.476686,-3.520770,9.857843,-7.898640,-8.096019,0.684161,-6.919593,7.524046,-5.383248,-8.231017,1.978408,3.453093,-9.549500,-5.435745,-5.351394,-7.152197,9.156508,-1.245973,-7.009873,-8.681476,-0.442146,4.052601,6.321016,2.035941,7.709960,6.374393,-4.476221,2.074951,7.359689,-4.118039,-0.230244,-4.207052,5.843442,4.694158,4.303484,-8.369768,6.763961,-9.809978,5.391727,-4.988652,-4.201144,8.461826,-7.062989,7.938701,3.044677,-5.708156,-9.426275,7.352027,2.802320,-3.506656,-3.885922,-3.862080,-0.078116,8.984221,-8.721600,5.900859,4.855175,0.832145,7.805891,4.459523,-4.605196,4.654144,6.420755,2.311298,8.743058,2.642742,-9.809902,1.232963,3.848482,-9.806116,-9.039357,-7.847956,6.148183,-0.029533,-4.030441,9.363372,7.329303,-9.727405,4.015361,6.315572,7.310874,8.816281,-6.990500,-8.712115,5.016565,-2.763932,-9.649489,1.390274,-1.710212,3.376289,7.164645,-2.611742,9.709931,9.421223,-2.168365,4.729912,-2.258061,7.448239,8.097195,-4.000584,1.483852,-8.316680,9.086131,9.652054,4.947917,-7.954411,1.466976,7.801173,9.337157,5.697489,5.345802,1.614522,9.500188,6.992254,1.846471,0.600189,-5.830866,-9.569430,7.539994,4.098000,-6.759222,-9.930256,-6.704130,-2.096043,-2.701560,6.016498,-7.525955,9.363777,-9.183325,-9.730475,-3.502408,-5.663816,-9.446322,-8.329402,-7.648779,-3.840471,-4.618442,-7.279000,9.992613,-1.274882,-1.620396,1.398600,1.715406,3.648674,6.678753,1.596229,5.420405,-5.731985,-4.531246,-1.766198,3.120529,-2.090832,7.396454,-3.801213,5.454263,-6.004766,2.164950,4.498174,7.029809,-6.844576,-0.893902,-4.410015,7.748041,0.112662,-1.305011,-2.811927,1.587418,9.181952,9.135282,5.280858,-7.311382,-0.520177,9.839914,-7.768645,-1.747380,-6.381003,-7.870858,9.437499,5.194248,-7.551453,-1.820750,0.264852,7.367923,-5.627519,3.885633,6.553797,9.717683,4.686468,1.078075,4.846410,-6.341556,5.901422,1.403609,-8.631686,2.893930,-6.795337,0.861131,9.944692,-4.887642,5.299069,1.077819,0.131420,-0.576137,-8.945198,1.766521,-0.257252,1.974379,-8.016158,-9.060528,3.574891,7.103717,4.993427,-9.309281,9.173332,-9.703022,-5.890184,-6.825890,-5.171964,-4.182867,-3.768613,7.271218,1.520791,-5.035492,0.159023,-0.797289,7.384204,-9.831884,-2.482426,2.215278,8.609010,-4.678761,-1.803674,2.409434,0.603259,5.968863,7.607754,-4.628299,8.027207,5.020852,9.758190,1.101599,7.415688,4.841011,-7.491442,-1.907001,-3.797445,5.527427,1.987729,-3.579648,-6.549732,-4.898944,-0.639797,-8.950976,-9.933302,-2.223818,8.860284,-8.466514,0.970936,-3.505609,-0.656199,4.816483,4.498662,7.223640,0.497252,-3.663685,3.864559,-2.342375,1.857434,1.952311,-9.949979,-3.475034,-5.201040,-7.653299,-7.269349,6.088628,8.737833,-0.704173,-3.299288,1.753885,9.997835,5.742434,0.716992,-8.981628,7.843942,-0.722985,4.581546,4.174840,1.544288,5.695188,2.647382,-4.750033,4.349203,4.827125,6.359593,5.845702,-7.201429,9.936390,-4.726284,2.713020,-9.989354,3.526570,-6.338001,5.159455,5.395144,8.269567,2.985719,1.013149,-9.490944,-8.607988,-6.248613,-9.596152,7.777112,-2.974572,3.539720,6.252805,5.571255,1.887743,3.280115,2.830260,2.063327,8.069029,-7.375587,8.990776,-7.905853,-0.611898,-7.594166,9.027196,2.086153,1.431787,2.489833,-5.798096,-6.587575,-3.435545,-9.238101,-9.562923,4.254223,-7.993223,-0.399026,-5.090698,-7.895584,7.749730,-9.993039,-2.571094,-0.087731,-4.074130,-8.091279,-1.291582,4.161356,-7.513627,-8.192155,6.890759,9.820503,-5.855909,-7.281923,-6.096552,0.665412,5.919348,-2.098450,2.081765,2.705347,2.646690,-3.543750,-8.370545,-8.177229,6.294043,3.642187,-6.160747,4.420819,2.805966,-0.833277,-9.946984,5.940653,5.719809,3.760736,3.620870,-9.054807,-8.875269,-8.640234,-5.633657,8.334007,-5.044613,4.402122,2.621837,3.912145,-9.622993,-1.632783,2.470662,-4.450531,-6.266065,-6.473288,-8.625952,-0.160913,5.092188,-6.353651,4.694092,-5.445993,-2.686778,3.071247,-4.279567,-1.131039,-3.648885,8.548249,0.090880,-4.896899,3.968587,9.832815,0.129847,-0.753545,-0.395822,4.710416,-2.662541,0.575088,2.964967,2.385535,3.867789,-4.152025,-6.431731,-8.405280,5.347110,9.351377,0.440203,-7.078792,-0.661391,5.125418,7.947965,9.661569,-6.440937,5.396351,2.034353,5.683617,-0.931632,-7.672730,9.300735,-7.872818,3.316390,9.897994,-6.302787,2.224303,-8.261017,-3.165828,6.490536,-8.898354,-2.180432,9.792916,-9.908235,6.597027,-3.616894,3.776694,-1.393855,-5.513219,-3.003297,-1.803881,-0.824367,4.620222,-5.003757,-8.649124,5.016497,-0.415534,-8.397527,4.211091,-7.440250,-2.227689,-4.546188,4.597213,2.053249,-2.691045,2.045273,7.179996,4.876244,6.847500,-9.634325,7.116754,-7.988145,6.562172,-1.344730,7.299823,3.604912,6.808091,4.030841,-4.314285,1.285549,-1.433809,0.020676,-0.477565,4.704805,6.927765,4.309290,4.886875,-4.104658,8.330247,-3.722766,6.684638,-2.153372,4.140670,9.340009,-9.462162,7.087303,-5.097028,-0.329224,8.768366,-1.639881,3.540367,1.917309,4.420573,-8.069278,-5.943884,0.804354,-8.405817,8.698658,7.306339,-5.272539,5.473083,7.083411,-5.125970,-4.851072,6.290492,-3.475612,-8.493629,9.367970,4.361745,-0.088531,-9.113236,-4.353031,7.995277,3.277871,-7.925143,9.674572], dtype = "float32")#candidate|3049|(840,)|const|float32
call_3047 = relay.TupleGetItem(func_2823_call(relay.reshape(var_3048.astype('int16'), [10, 1, 5]), relay.reshape(const_3049.astype('float32'), [840,]), ), 5)
call_3050 = relay.TupleGetItem(func_2827_call(relay.reshape(var_3048.astype('int16'), [10, 1, 5]), relay.reshape(const_3049.astype('float32'), [840,]), ), 5)
output = relay.Tuple([uop_3029,call_3047,var_3048,const_3049,])
output2 = relay.Tuple([uop_3029,call_3050,var_3048,const_3049,])
func_3051 = relay.Function([var_3028,var_3048,], output)
mod['func_3051'] = func_3051
mod = relay.transform.InferType()(mod)
mutated_mod['func_3051'] = func_3051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3051_call = mutated_mod.get_global_var('func_3051')
var_3053 = relay.var("var_3053", dtype = "float32", shape = (5, 15, 4))#candidate|3053|(5, 15, 4)|var|float32
var_3054 = relay.var("var_3054", dtype = "int16", shape = (50,))#candidate|3054|(50,)|var|int16
call_3052 = func_3051_call(var_3053,var_3054,)
output = call_3052
func_3055 = relay.Function([var_3053,var_3054,], output)
mutated_mod['func_3055'] = func_3055
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3160 = relay.const([[[6.235117,-2.184956,9.046266,3.310563,-7.814895,7.347752,-5.336465,0.604831,-3.949019,2.604183,-3.989728,8.864495],[-9.877529,1.503198,5.161377,-8.178217,6.264651,-4.460766,-4.003612,5.598836,-2.929135,-7.386945,1.946770,4.627698],[8.290734,9.529185,-8.815314,0.910194,6.191600,0.116388,7.172771,7.106340,3.821395,-4.230292,1.173393,-3.158196],[-3.619937,4.123529,4.636470,6.848084,6.174802,-0.181229,-0.534400,4.278408,-1.131769,-2.096826,-3.599641,9.743301],[7.872474,4.909285,3.080941,4.680223,6.900448,2.050412,7.674786,6.916530,-7.469998,1.306919,2.950208,-2.104883],[8.678897,8.495238,0.209314,0.936733,-3.598012,9.658329,1.216101,-9.281836,5.639570,5.027273,-0.481427,-6.005664],[-9.165452,3.365161,-5.845007,-5.035442,6.003447,8.517037,-3.875964,2.192894,-3.319618,-0.928911,9.550806,-1.180676],[-5.165349,-5.390598,-6.017804,5.973475,-8.583928,-6.178895,4.861534,-7.754027,-1.608344,3.105360,7.269707,-9.175674],[0.974253,3.942163,4.330432,-8.355523,5.249980,-4.594193,7.270158,-9.904685,5.825078,-3.490658,5.609727,8.682943],[-9.430256,-8.133683,3.489366,0.948644,9.721641,-4.555332,-2.395296,7.395829,5.693282,7.545803,7.557882,-4.720603],[-8.656595,1.585360,6.972175,-0.155415,6.578885,7.534833,0.842919,-2.678635,2.844821,4.375775,0.799381,4.991842],[-3.403470,5.180328,2.378160,-6.966809,-1.791104,5.839351,-0.906717,0.684550,4.587527,3.875696,-6.859270,1.519263],[-1.545812,2.230988,4.473628,-7.412243,-3.727045,-4.446613,4.272152,7.721438,-6.458901,8.695867,-1.238095,6.145141],[-0.097032,-8.957428,-6.746961,-1.712078,-8.588873,-6.601494,3.000238,-7.516054,-9.693552,1.049923,8.658838,2.335541],[7.193973,2.351463,6.883207,7.975254,7.757124,-4.960545,-7.418366,-8.689152,2.021405,-4.523464,0.262209,-8.436632]],[[3.040993,9.508729,-5.686544,6.465545,6.906828,-6.343732,4.081709,-2.983863,8.381708,-5.293923,-3.435461,3.695954],[4.008699,-6.026650,-5.424141,-2.575839,-5.406414,-9.631715,-1.127331,-0.334459,-8.828957,-7.336454,3.533664,-8.177711],[-7.805593,-8.788970,0.477102,-6.373637,3.464070,4.712260,0.144879,-8.259989,2.983023,-9.151219,-0.118594,-5.615579],[2.833566,-5.865495,0.705470,-9.883248,6.332099,-5.818974,-7.361447,6.854833,6.197062,0.539858,-9.337948,-6.854261],[-0.248234,1.908160,-2.198882,-1.144164,-2.258655,-9.398450,0.391619,5.808310,5.397056,-6.573695,-1.455589,0.083596],[-9.128706,-4.686313,-4.415838,1.538109,-7.034978,8.001458,-4.245258,-0.555261,-1.111760,-2.663730,6.588029,-0.698450],[-0.877209,-5.189580,-7.294056,-3.153467,-8.585215,0.610028,-8.071828,-8.316353,6.397615,2.556107,9.422869,8.059624],[-6.469268,2.600047,7.351554,-1.378578,-1.577160,7.832178,-8.269038,-6.695705,-2.235315,-2.710424,-7.669482,6.874406],[-4.115854,9.508458,4.052405,-3.566827,-8.749693,1.332361,9.429078,4.963010,2.259812,7.385945,4.755515,-8.947279],[2.489037,-2.747454,0.927598,-9.952221,-8.710100,9.039406,-6.419798,1.967204,-4.535369,-8.382975,-3.996851,7.789269],[-2.169399,5.456006,-8.457460,-0.736922,-1.865836,8.990125,-3.916353,-4.125758,6.435164,-1.952168,5.812224,3.087503],[3.506197,5.054047,7.924783,1.997728,7.694030,5.039691,-8.542971,-1.386607,-3.372516,0.482213,6.391871,3.242222],[2.669705,-8.581116,5.474213,-9.891367,7.899308,-1.699443,9.749118,8.699286,2.843888,-3.895349,-8.646960,-1.350589],[2.868557,4.470538,1.146249,6.994364,8.584524,6.854625,0.921282,9.973918,-9.724914,-0.974162,0.636987,-9.072676],[-1.961124,-4.679212,2.150872,-3.390822,-1.874545,9.596894,-5.833156,6.911329,-6.736345,4.102295,-3.452582,2.772836]],[[-7.844745,-9.669209,0.892504,-3.630085,-5.275281,-5.142039,-6.692210,-0.886667,-5.449769,-2.139138,-1.017850,-0.277834],[9.382193,5.534824,-8.260804,-6.190388,-8.622983,-2.629720,3.852162,0.055725,-3.280140,-6.371571,-3.492468,2.889069],[-6.690463,-1.145224,3.667909,-8.547530,-9.273114,2.119547,-8.248030,2.771793,-8.785167,-5.382801,2.331923,3.975317],[6.464102,-6.441790,-6.622409,-8.893773,4.899442,-9.008889,-6.912206,2.374305,-6.227778,1.601440,-5.089543,2.444998],[7.510497,0.886404,2.553675,-9.366569,-5.308469,3.168295,-1.989450,5.338026,-2.784304,6.103889,-1.402171,9.264803],[1.396144,8.770008,4.375380,-3.529668,-5.742847,2.120477,3.152887,-7.440639,-3.876589,-6.061678,-2.482225,4.392711],[1.269441,5.490419,7.351231,-6.291644,2.082622,9.837696,-0.287069,5.238161,1.464248,4.180193,-2.172301,-3.826229],[6.408732,-1.844345,-6.095315,-5.283222,-4.207707,-0.034025,-0.883590,-8.371525,-1.828239,-5.532565,2.140168,-8.825710],[4.097758,8.356530,0.674509,-1.131054,1.601288,-0.248955,-6.852314,1.891508,-4.759372,1.469815,9.407038,3.816031],[2.377587,-3.486071,0.949952,9.166423,-4.638746,1.905181,-7.973794,-6.877389,-3.041944,0.947951,9.542243,5.641330],[-5.184884,-7.779890,-1.316925,-5.145202,-3.113224,-1.594803,5.024034,-4.269552,7.396006,0.506497,1.503106,3.564781],[3.967079,5.551786,3.025915,-4.741944,8.888362,1.305016,-5.067862,2.267813,8.357705,0.966560,0.030027,-6.731732],[1.932335,-9.818923,-3.867062,-1.080400,-6.881415,-8.651910,-5.506838,-7.748173,-6.577208,9.358642,9.807244,5.263876],[-2.488250,1.475424,-6.212928,-3.450010,3.101130,-8.474187,-2.483183,7.204235,-8.154281,1.012417,8.190521,-2.329819],[1.281781,-2.858088,-6.996532,9.521519,-0.643948,-0.534489,5.910358,-3.761146,2.908647,-7.481356,5.880011,8.508221]],[[1.727081,-4.170867,-6.515926,-5.082777,-5.327588,-2.407833,-2.615891,-4.595637,-2.303450,1.647984,6.973281,-5.165197],[2.357359,0.419687,3.820873,-0.975357,7.569552,9.554376,-4.762758,5.848504,-8.409914,5.824216,-8.732813,-3.986771],[7.001468,-3.702874,5.857056,5.584685,1.111835,-1.923684,2.035012,2.502962,8.817978,-2.847725,7.374603,5.966860],[8.667975,-9.875697,-2.774240,-5.654951,7.537164,-0.587351,-4.805003,5.027999,-9.114744,-9.330262,-9.420346,-1.661542],[-6.675672,4.275750,7.143574,0.185286,-9.422804,-3.396480,-5.319090,-2.623854,6.302063,7.770368,-0.321896,2.538038],[-8.688643,9.448527,6.889337,-8.922239,-4.292679,9.152453,-8.552045,4.782407,4.319294,6.256799,-0.276594,6.873016],[7.967475,3.329592,3.484983,-1.343459,-6.633296,-3.413287,-6.424267,2.330199,1.856681,-1.688760,-5.488160,-2.069228],[3.175427,9.045127,8.671302,3.439881,4.660018,-9.677562,2.871492,-0.801591,-3.842078,9.868659,-2.650179,-6.132796],[-3.100458,6.812594,-5.161980,-9.489033,-9.380952,4.742441,-5.420897,-1.587913,-6.588221,-2.439036,3.188349,2.463455],[5.395963,-8.470007,-8.210441,8.091184,4.828961,3.015570,-9.047032,8.372045,5.788663,-9.507570,0.139248,-3.253827],[-5.439182,5.753762,1.416634,6.197047,-8.187970,-3.344765,-5.624137,3.859775,4.660245,6.963404,-3.495579,-2.102065],[-8.670628,2.486009,0.378876,8.095967,-1.153991,6.544751,0.702952,-7.301441,0.533600,-1.658276,1.237904,7.817787],[-8.628650,-6.280579,-6.822030,9.725735,-4.783165,-2.491131,-0.837838,5.327960,5.782115,-7.446258,9.966080,-7.302796],[-2.320195,6.350699,-4.015658,-0.691851,2.848520,9.851121,7.709528,-2.431712,8.593084,2.147865,-1.073406,-4.952879],[9.987318,2.071811,5.311244,1.798227,-4.570439,1.730941,-0.889295,-7.835646,7.543728,0.314996,-7.288137,-0.068527]],[[-4.499298,9.766894,-7.334393,-7.517660,-3.538192,-2.228271,6.694826,0.435040,-7.354381,-5.655663,-7.672599,0.417902],[-3.959937,-5.251337,-2.257028,-9.953171,-6.275897,-6.345364,5.258320,5.686539,-5.915119,-1.787341,2.290367,5.689402],[-3.227695,-0.031545,-2.318142,-7.484784,-6.375897,2.456107,5.192358,-2.030986,8.415365,-0.031301,2.565199,9.003912],[-3.476563,-7.832722,8.292737,2.575766,8.190099,4.058088,4.995310,9.232428,-5.903670,8.351659,-5.067709,-4.614848],[-4.652866,1.077589,-1.923849,5.773791,-4.269527,-0.695347,0.447851,6.594625,-6.297714,6.398499,0.931521,5.206589],[6.294624,2.560870,-2.345478,-1.551526,4.031478,3.328951,-9.963300,-7.031416,-6.633997,-8.303650,-1.022857,-5.454457],[-8.762389,3.747118,-1.737105,-1.146757,5.200059,-4.925443,9.530329,-5.964684,-5.735057,-7.415431,-4.460968,5.214318],[8.875739,-9.541754,9.824425,-5.801623,-7.513416,2.975727,0.595515,1.365633,-7.180326,-2.889286,-9.780130,-8.761383],[-2.121113,1.306669,6.096496,4.625027,-1.270912,-1.242021,2.270275,-0.811616,-0.967537,-3.024589,0.276762,-1.202939],[8.063636,7.002087,4.471315,-3.217086,-9.900356,-7.041359,-0.102229,-2.185547,-6.805700,9.604308,-3.979900,9.672709],[5.665804,-3.512299,5.392859,-4.369218,8.886706,-8.521927,3.467003,0.365746,-6.626915,9.739363,3.833574,-8.505185],[3.727778,9.797422,8.053208,-7.955224,1.267030,2.355786,-0.162146,7.024075,5.683660,-4.600995,2.581858,-7.647174],[-9.019626,-4.308945,3.587396,5.617966,-7.748652,-6.249723,3.466796,0.214357,1.363479,-7.156821,-3.826696,-6.158450],[5.310840,4.704300,-6.985801,4.504623,1.022662,-6.856984,-1.607627,8.684037,8.573264,-6.776662,1.154834,2.071763],[-7.023657,-6.063901,6.407880,-7.220258,0.431387,7.502272,0.977335,-3.175128,5.781533,6.204898,-2.973137,-1.638264]]], dtype = "float64")#candidate|3160|(5, 15, 12)|const|float64
uop_3161 = relay.cosh(const_3160.astype('float64')) # shape=(5, 15, 12)
output = uop_3161
output2 = uop_3161
func_3171 = relay.Function([], output)
mod['func_3171'] = func_3171
mod = relay.transform.InferType()(mod)
mutated_mod['func_3171'] = func_3171
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3171_call = mutated_mod.get_global_var('func_3171')
call_3172 = func_3171_call()
output = call_3172
func_3173 = relay.Function([], output)
mutated_mod['func_3173'] = func_3173
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3171_call = mod.get_global_var('func_3171')
func_3173_call = mutated_mod.get_global_var('func_3173')
call_3234 = func_3171_call()
call_3235 = func_3171_call()
uop_3236 = relay.asin(call_3234.astype('float64')) # shape=(5, 15, 12)
uop_3238 = relay.asin(call_3235.astype('float64')) # shape=(5, 15, 12)
output = uop_3236
output2 = uop_3238
func_3249 = relay.Function([], output)
mod['func_3249'] = func_3249
mod = relay.transform.InferType()(mod)
output = func_3249()
func_3250 = relay.Function([], output)
mutated_mod['func_3250'] = func_3250
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3171_call = mod.get_global_var('func_3171')
func_3173_call = mutated_mod.get_global_var('func_3173')
call_3256 = func_3171_call()
call_3257 = func_3171_call()
uop_3281 = relay.rsqrt(call_3256.astype('float32')) # shape=(5, 15, 12)
uop_3283 = relay.rsqrt(call_3257.astype('float32')) # shape=(5, 15, 12)
output = relay.Tuple([uop_3281,])
output2 = relay.Tuple([uop_3283,])
func_3285 = relay.Function([], output)
mod['func_3285'] = func_3285
mod = relay.transform.InferType()(mod)
mutated_mod['func_3285'] = func_3285
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3285_call = mutated_mod.get_global_var('func_3285')
call_3286 = func_3285_call()
output = call_3286
func_3287 = relay.Function([], output)
mutated_mod['func_3287'] = func_3287
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3332 = relay.var("var_3332", dtype = "float32", shape = (2, 5, 9))#candidate|3332|(2, 5, 9)|var|float32
uop_3333 = relay.tan(var_3332.astype('float32')) # shape=(2, 5, 9)
func_718_call = mod.get_global_var('func_718')
func_721_call = mutated_mod.get_global_var('func_721')
var_3336 = relay.var("var_3336", dtype = "float32", shape = (6, 140))#candidate|3336|(6, 140)|var|float32
call_3335 = func_718_call(relay.reshape(var_3336.astype('float32'), [8, 7, 15]))
call_3337 = func_718_call(relay.reshape(var_3336.astype('float32'), [8, 7, 15]))
bop_3343 = relay.subtract(uop_3333.astype('uint64'), relay.reshape(var_3332.astype('uint64'), relay.shape_of(uop_3333))) # shape=(2, 5, 9)
func_3171_call = mod.get_global_var('func_3171')
func_3173_call = mutated_mod.get_global_var('func_3173')
call_3353 = func_3171_call()
call_3354 = func_3171_call()
func_1299_call = mod.get_global_var('func_1299')
func_1302_call = mutated_mod.get_global_var('func_1302')
const_3359 = relay.const([2,7,-2,5,-10,3,-7,-2,-8,-3,-8,4,9,-3,1,-4,8,4,10,2,-4,4,3,8,10,-6,4,-6,-5,5,-1,-6,-10,-8,4,2,5,9,3,1,-9,-2,8,-7,6,-8,-10,-7,7,-5,-7,6,5,4,-3,1,-2,6,-10,-5,-4,7,-7,6,-2,-2,-8,-5,-6,-10,3,-2,6,-7,10,5,4,7,6,5,4,1,8,6,-2,-2,2,10,-3,-4,-2,6,-1,-7,-8,-9,2,6,-3,-5,-1,-1,-2,-10,-9,-7,-3,7,7,5,8,10,3,1,2,-2,-4,5,4,-10,-10,-4,-7,-1,6,-2,9,8,9,7,-5,4,9,-5,5,-6,10,1,2,4,7,6,-7,7,4,-7,2,10,1,4,9,-2,-1,-8,7,3,-9,2,-3,-2,-3,-8,8,-6,-1,6,8,3,-3,2,-5,3,-6,-10,2,-6,10,-1,9,-9,6,2,-3,5,8,-5,-4,8,1,-7,-9,9,-6,-10,-6,7,6,7,-6,7,-2,8,-1,4,-4,7,5,-5,-8,9], dtype = "uint8")#candidate|3359|(210,)|const|uint8
const_3360 = relay.const([[-1,6,5,-9,-8,-9,-2,9,-2,-1,6,10,7,8,9,8,2,-3,-1,-9,-3,5,-5,-9,5,1,-9,1,-6,6,4,9,-9,5,5,10,-2,3,9,-4,3,-6,-8,-10,6,2,-1,10,-3,1,-8,-6,-8,-10,1,9,-9,8,-2,2,4,1,-6,7,-5,7,-1,-6,2,-4],[-9,-6,-10,6,5,-3,1,-8,5,8,4,-5,-8,4,6,10,-2,6,5,7,9,2,-6,-8,-6,10,2,6,6,-10,9,10,8,-5,-7,4,-4,7,-7,-10,-3,-4,6,5,-10,-4,4,-10,1,7,10,5,10,-4,1,1,-4,9,4,2,6,1,-2,-4,8,1,7,-4,2,-5],[1,4,-10,7,-6,8,-5,-4,1,7,1,9,-6,4,-10,10,6,1,7,-10,5,5,-6,-4,-6,8,3,-5,10,-6,10,-6,-9,2,2,-1,9,-6,6,6,5,1,-3,6,8,6,7,4,-6,4,-10,7,-10,8,5,7,-10,-7,-5,-6,4,-10,-3,-8,5,-9,8,8,-10,-5],[-10,4,-3,3,-5,-10,1,9,8,-5,3,8,9,-1,-2,-4,3,4,-1,3,-4,-5,6,-8,-5,-5,-6,-10,-9,-6,9,5,9,7,4,8,-6,-4,-8,7,7,2,7,2,4,8,7,-5,-1,-10,4,-5,-2,-3,3,-6,1,4,9,-5,4,-6,7,1,6,6,-1,2,-10,-6],[4,3,-1,5,-5,-4,-4,-1,-4,2,4,-1,9,-10,8,-3,-9,8,-5,1,3,-10,6,1,-4,3,1,2,-7,2,-10,10,1,-1,-10,8,-10,2,8,7,8,-9,-3,-10,7,10,7,9,7,-6,-4,10,-1,-1,8,10,-7,-5,-3,-5,-9,8,-2,-5,6,-5,4,-6,2,1],[-5,-5,3,5,9,6,4,3,10,-6,-9,-9,-8,5,2,1,-10,-2,-8,-9,-8,4,-9,-1,-7,7,9,9,3,-9,-2,4,7,-5,2,2,6,-3,5,6,-10,9,1,7,2,10,-6,-5,10,-8,3,4,5,4,1,3,-5,3,10,1,-7,7,-5,8,2,8,3,-5,-9,-10],[1,6,-8,3,10,-2,-2,2,-3,3,-6,3,2,10,8,-4,5,-6,-10,3,-2,-6,-5,-4,-1,-6,-7,-6,6,2,6,-7,-7,-4,-4,4,-1,10,1,6,10,-6,-2,6,8,4,-4,-5,-5,-6,5,5,-2,-3,1,-4,-3,8,5,-3,-1,-7,9,-6,8,-5,3,8,-7,6],[-2,8,3,1,1,-10,-5,7,-8,2,6,8,7,3,-1,-3,1,10,-7,-1,9,1,8,-9,3,-2,-7,8,-10,-10,-2,-6,4,9,9,2,-5,1,2,-2,1,4,6,-4,5,-1,-6,-3,3,6,6,-9,10,4,9,-7,-10,8,6,-4,5,9,-2,-6,4,8,-9,-1,-6,10],[-1,-6,1,6,-6,-8,8,4,10,7,-1,6,-2,8,-1,1,-9,-10,-1,-8,9,-9,5,-8,-3,-1,-10,4,-3,9,-3,4,9,2,2,-8,6,-1,1,6,-6,10,-3,9,-9,9,-9,1,9,-8,3,-6,-1,2,8,-6,6,-2,2,-6,-8,-10,8,-6,7,1,-10,-1,-6,5],[-10,8,-8,-6,4,9,6,10,5,2,10,1,2,2,-2,2,9,9,-2,8,-6,-9,-8,-6,-5,-4,6,6,9,6,7,5,-9,3,-9,9,-10,6,7,3,-4,6,6,6,10,-7,1,2,6,5,-8,3,-3,10,-2,-2,1,4,10,3,3,4,1,6,-3,5,5,3,-6,10],[5,-4,-9,-4,-2,8,6,-1,-10,-6,-8,-8,8,3,-2,4,4,-6,8,-2,6,6,-2,10,-4,6,-5,4,-4,7,-7,-5,-9,-4,10,7,-5,-1,10,8,-6,-5,-9,-6,6,-10,4,-6,6,-2,-9,6,4,1,-9,-9,5,5,4,6,-5,-7,-4,6,6,-10,-8,8,-4,-9],[10,-7,3,9,-3,9,3,-9,-10,9,-2,10,-7,-6,-5,-5,3,10,-4,-5,-7,-5,2,-9,8,8,-9,3,-7,9,4,-9,-6,4,1,6,-6,8,4,10,-7,3,-1,6,-5,-9,8,7,8,-1,3,-7,-10,-6,-4,6,9,1,-6,-7,9,10,-6,1,-8,-3,2,9,6,-6],[-6,-4,-4,4,-10,-10,6,8,9,-6,-4,10,-10,7,6,6,6,6,5,-1,-2,-5,3,10,3,-8,6,2,-9,-4,2,7,-2,-9,7,-1,1,7,9,5,-3,6,5,5,-7,-8,-1,-7,10,-9,4,-5,-5,-10,-10,-6,-1,4,2,-7,10,-6,-10,3,8,6,1,-10,6,1],[-4,10,-9,1,-4,10,2,5,10,-2,10,-4,-3,-7,4,-6,-5,6,-1,-7,3,-10,-5,9,-1,-6,10,1,-6,-2,-6,-1,-5,7,1,-4,1,-3,7,10,2,-10,-7,6,9,4,-8,-8,-1,10,7,8,8,-2,3,6,1,-8,6,2,5,3,-10,-6,-4,-2,-2,8,-2,-6],[6,10,7,6,3,-1,3,-10,4,5,-4,-10,-7,-6,-3,-4,2,4,2,-3,9,3,-7,-6,-1,-9,-8,-9,9,6,8,9,-3,-1,7,10,-7,8,6,-5,5,-1,-4,9,-6,5,4,5,-1,2,10,1,-7,-3,5,9,3,4,-10,3,8,3,-2,-9,7,-10,-5,6,2,-4],[-9,-6,5,-10,-2,5,10,4,-6,-6,6,10,9,-3,7,-9,-2,-9,-4,4,-1,-8,6,-5,-4,-5,-9,2,-5,10,-10,-6,-3,-9,-3,4,1,9,5,10,-4,-10,4,-10,6,-10,-8,-1,3,-7,3,2,-5,-1,-4,-10,8,3,3,-10,3,7,8,2,8,-10,1,4,5,-8],[6,7,-9,7,-4,-3,9,-10,-8,10,10,-4,2,-8,-3,5,-6,5,-5,-9,9,7,4,7,-8,7,-7,-10,10,5,6,-5,2,-8,-2,5,-3,-1,8,10,-5,5,-9,-10,-4,-6,-2,-3,-1,-1,-9,6,9,-8,5,4,-4,-1,-3,-4,3,7,1,2,-10,6,-1,3,2,-8],[9,9,8,-8,1,8,-2,-3,-5,-6,10,-8,6,1,-3,7,1,-7,7,10,9,-4,-2,-5,-2,2,5,-4,-1,1,6,-8,-3,3,-2,8,10,-2,10,9,-8,-5,3,6,-4,8,4,-6,10,-8,2,-4,9,5,3,3,-7,6,8,3,-6,4,6,-8,-9,1,-2,6,-10,3]], dtype = "uint8")#candidate|3360|(18, 70)|const|uint8
call_3358 = relay.TupleGetItem(func_1299_call(relay.reshape(const_3359.astype('uint8'), [15, 1, 14]), relay.reshape(const_3360.astype('uint8'), [15, 6, 14]), ), 0)
call_3361 = relay.TupleGetItem(func_1302_call(relay.reshape(const_3359.astype('uint8'), [15, 1, 14]), relay.reshape(const_3360.astype('uint8'), [15, 6, 14]), ), 0)
bop_3366 = relay.minimum(uop_3333.astype('uint16'), relay.reshape(bop_3343.astype('uint16'), relay.shape_of(uop_3333))) # shape=(2, 5, 9)
output = relay.Tuple([call_3335,var_3336,call_3353,call_3358,const_3359,const_3360,bop_3366,])
output2 = relay.Tuple([call_3337,var_3336,call_3354,call_3361,const_3359,const_3360,bop_3366,])
func_3370 = relay.Function([var_3332,var_3336,], output)
mod['func_3370'] = func_3370
mod = relay.transform.InferType()(mod)
mutated_mod['func_3370'] = func_3370
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3370_call = mutated_mod.get_global_var('func_3370')
var_3372 = relay.var("var_3372", dtype = "float32", shape = (2, 5, 9))#candidate|3372|(2, 5, 9)|var|float32
var_3373 = relay.var("var_3373", dtype = "float32", shape = (6, 140))#candidate|3373|(6, 140)|var|float32
call_3371 = func_3370_call(var_3372,var_3373,)
output = call_3371
func_3374 = relay.Function([var_3372,var_3373,], output)
mutated_mod['func_3374'] = func_3374
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3399 = relay.var("var_3399", dtype = "bool", shape = (6, 4, 9))#candidate|3399|(6, 4, 9)|var|bool
const_3400 = relay.const([[[True,False,False,False,True,False,False,False,True],[True,False,True,True,False,True,True,True,False],[True,False,True,True,True,False,True,True,True],[True,True,False,True,False,False,True,False,True]],[[False,False,True,True,False,True,False,True,True],[True,True,True,False,False,True,True,False,True],[True,True,False,False,False,True,False,True,True],[False,True,True,False,True,False,True,False,False]],[[True,True,True,False,False,False,True,False,True],[True,True,True,False,False,False,False,True,True],[True,True,False,False,False,True,True,False,False],[True,True,True,True,False,False,True,True,False]],[[True,False,True,False,True,False,True,True,True],[False,True,False,True,False,True,True,False,True],[True,False,True,True,True,True,False,True,True],[False,False,False,True,True,True,False,False,False]],[[False,True,False,True,True,True,True,False,False],[True,False,False,False,True,False,False,False,False],[True,True,True,False,True,True,True,False,False],[False,False,False,False,True,False,False,False,True]],[[False,False,False,False,True,False,False,True,True],[True,True,True,True,False,False,False,True,False],[True,False,False,True,False,True,False,False,False],[False,True,False,True,True,False,True,True,True]]], dtype = "bool")#candidate|3400|(6, 4, 9)|const|bool
bop_3401 = relay.logical_and(var_3399.astype('bool'), relay.reshape(const_3400.astype('bool'), relay.shape_of(var_3399))) # shape=(6, 4, 9)
output = relay.Tuple([bop_3401,])
output2 = relay.Tuple([bop_3401,])
func_3409 = relay.Function([var_3399,], output)
mod['func_3409'] = func_3409
mod = relay.transform.InferType()(mod)
var_3410 = relay.var("var_3410", dtype = "bool", shape = (6, 4, 9))#candidate|3410|(6, 4, 9)|var|bool
output = func_3409(var_3410)
func_3411 = relay.Function([var_3410], output)
mutated_mod['func_3411'] = func_3411
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3171_call = mod.get_global_var('func_3171')
func_3173_call = mutated_mod.get_global_var('func_3173')
call_3432 = func_3171_call()
call_3433 = func_3171_call()
func_779_call = mod.get_global_var('func_779')
func_782_call = mutated_mod.get_global_var('func_782')
var_3437 = relay.var("var_3437", dtype = "int32", shape = (36, 16))#candidate|3437|(36, 16)|var|int32
call_3436 = func_779_call(relay.reshape(var_3437.astype('int32'), [8, 9, 8]))
call_3438 = func_779_call(relay.reshape(var_3437.astype('int32'), [8, 9, 8]))
func_1192_call = mod.get_global_var('func_1192')
func_1197_call = mutated_mod.get_global_var('func_1197')
const_3446 = relay.const([-4.855456,9.061667,-2.162005,-7.400461,-5.336974,0.292388,9.106787,8.704712,9.450291,3.616808,-5.028164,-4.480980,-9.142518,4.594536,5.940474,9.964521,2.491097,3.763082,1.750557,-3.965080,0.216573,0.401354,8.143753,-5.319275,-5.389081,-2.818498,-2.258705,1.995684,6.093399,-7.633006,-2.768272,-3.018949,-6.530509,1.322999,9.681293,5.787603,1.086687,7.766310,-4.951837,8.246568,-3.034336,8.666217,9.545764,0.275080,9.103758,7.858513,7.543266,2.162987,8.210603,1.230184,4.084042,9.112259,8.853651,2.813908,-2.755106,4.531691,-1.418075,2.278945,0.962864,-5.397053,4.636729,-4.896975,-0.097372,-6.682511,5.598932,-6.566729,0.670231,6.095015,0.833936,-8.805008,-6.166052,-0.963255,-6.744055,-6.102461,-6.809513,3.535527,-6.213451,6.567846,7.667902,-0.660238,1.209972,0.621328,-1.695511,-6.597953,-4.856448,4.626746,-8.258980,7.302669,-9.076498,-3.859548,5.165508,-1.963315,-9.598646,-2.002729,3.624161,-0.737269,5.955198,6.853535,-2.065900,1.745797,-9.291220,1.606044,-3.442203,-4.046892,-1.219245,-4.487294,-8.126837,6.097090,-3.189599,-4.155367,-8.423718,-0.171658,6.853962,7.864747,4.379036,-5.985604,-4.312631,-3.284408,-0.961161,7.003249], dtype = "float32")#candidate|3446|(120,)|const|float32
var_3447 = relay.var("var_3447", dtype = "float32", shape = (840,))#candidate|3447|(840,)|var|float32
call_3445 = relay.TupleGetItem(func_1192_call(relay.reshape(const_3446.astype('float32'), [5, 6, 4]), relay.reshape(const_3446.astype('float32'), [5, 6, 4]), relay.reshape(var_3447.astype('float32'), [840,]), ), 2)
call_3448 = relay.TupleGetItem(func_1197_call(relay.reshape(const_3446.astype('float32'), [5, 6, 4]), relay.reshape(const_3446.astype('float32'), [5, 6, 4]), relay.reshape(var_3447.astype('float32'), [840,]), ), 2)
func_3285_call = mod.get_global_var('func_3285')
func_3287_call = mutated_mod.get_global_var('func_3287')
call_3450 = relay.TupleGetItem(func_3285_call(), 0)
call_3451 = relay.TupleGetItem(func_3287_call(), 0)
func_1299_call = mod.get_global_var('func_1299')
func_1302_call = mutated_mod.get_global_var('func_1302')
const_3465 = relay.const([2,-7,-3,5,4,-6,6,6,7,-7,-5,3,1,-3,1,-2,7,-5,-4,4,-4,6,-4,4,-10,8,-6,-5,9,10,6,-6,-1,-1,9,2,-4,3,-1,-1,-2,6,10,-6,1,-2,8,-8,-6,4,4,1,4,-8,-5,-8,6,6,7,-6,8,3,-5,-4,2,10,-4,4,7,5,-8,10,8,9,-9,-6,-4,-4,-2,2,6,9,-3,10,-2,-5,-9,-6,2,-4,2,-10,1,-5,-2,-6,-9,8,6,3,4,-10,-2,10,2,6,4,-10,10,7,-4,-10,-9,-4,-10,-5,-6,5,-3,-3,9,-1,-7,-9,6,-1,-10,-3,3,4,-6,-8,-5,-10,8,-3,5,1,5,-1,7,-3,-6,5,-4,3,-7,-10,-3,-3,4,-9,2,-2,-9,9,-6,-2,9,-4,-6,2,-9,8,-5,-3,8,9,-2,-8,4,9,-10,-4,8,-9,-4,-8,3,5,10,6,-1,-10,6,6,-5,-1,5,1,3,8,3,2,-3,-4,6,2,7,-10,10,-4,-10,10,-2,1,-5,5,-6,-3], dtype = "uint8")#candidate|3465|(210,)|const|uint8
var_3466 = relay.var("var_3466", dtype = "uint8", shape = (90, 14))#candidate|3466|(90, 14)|var|uint8
call_3464 = relay.TupleGetItem(func_1299_call(relay.reshape(const_3465.astype('uint8'), [15, 1, 14]), relay.reshape(var_3466.astype('uint8'), [15, 6, 14]), ), 1)
call_3467 = relay.TupleGetItem(func_1302_call(relay.reshape(const_3465.astype('uint8'), [15, 1, 14]), relay.reshape(var_3466.astype('uint8'), [15, 6, 14]), ), 1)
output = relay.Tuple([call_3432,call_3436,var_3437,call_3445,const_3446,var_3447,call_3450,call_3464,const_3465,var_3466,])
output2 = relay.Tuple([call_3433,call_3438,var_3437,call_3448,const_3446,var_3447,call_3451,call_3467,const_3465,var_3466,])
func_3479 = relay.Function([var_3437,var_3447,var_3466,], output)
mod['func_3479'] = func_3479
mod = relay.transform.InferType()(mod)
mutated_mod['func_3479'] = func_3479
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3479_call = mutated_mod.get_global_var('func_3479')
var_3481 = relay.var("var_3481", dtype = "int32", shape = (36, 16))#candidate|3481|(36, 16)|var|int32
var_3482 = relay.var("var_3482", dtype = "float32", shape = (840,))#candidate|3482|(840,)|var|float32
var_3483 = relay.var("var_3483", dtype = "uint8", shape = (90, 14))#candidate|3483|(90, 14)|var|uint8
call_3480 = func_3479_call(var_3481,var_3482,var_3483,)
output = call_3480
func_3484 = relay.Function([var_3481,var_3482,var_3483,], output)
mutated_mod['func_3484'] = func_3484
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3486 = relay.var("var_3486", dtype = "uint8", shape = (4, 1, 13))#candidate|3486|(4, 1, 13)|var|uint8
var_3487 = relay.var("var_3487", dtype = "uint8", shape = (4, 2, 13))#candidate|3487|(4, 2, 13)|var|uint8
bop_3488 = relay.left_shift(var_3486.astype('uint8'), var_3487.astype('uint8')) # shape=(4, 2, 13)
output = bop_3488
output2 = bop_3488
func_3492 = relay.Function([var_3486,var_3487,], output)
mod['func_3492'] = func_3492
mod = relay.transform.InferType()(mod)
var_3493 = relay.var("var_3493", dtype = "uint8", shape = (4, 1, 13))#candidate|3493|(4, 1, 13)|var|uint8
var_3494 = relay.var("var_3494", dtype = "uint8", shape = (4, 2, 13))#candidate|3494|(4, 2, 13)|var|uint8
output = func_3492(var_3493,var_3494,)
func_3495 = relay.Function([var_3493,var_3494,], output)
mutated_mod['func_3495'] = func_3495
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3171_call = mod.get_global_var('func_3171')
func_3173_call = mutated_mod.get_global_var('func_3173')
call_3502 = func_3171_call()
call_3503 = func_3171_call()
uop_3530 = relay.atanh(call_3502.astype('float32')) # shape=(5, 15, 12)
uop_3532 = relay.atanh(call_3503.astype('float32')) # shape=(5, 15, 12)
uop_3548 = relay.tan(call_3502.astype('float64')) # shape=(5, 15, 12)
uop_3550 = relay.tan(call_3503.astype('float64')) # shape=(5, 15, 12)
bop_3551 = relay.logical_xor(uop_3548.astype('uint32'), relay.reshape(call_3502.astype('uint32'), relay.shape_of(uop_3548))) # shape=(5, 15, 12)
bop_3554 = relay.logical_xor(uop_3550.astype('uint32'), relay.reshape(call_3503.astype('uint32'), relay.shape_of(uop_3550))) # shape=(5, 15, 12)
func_718_call = mod.get_global_var('func_718')
func_721_call = mutated_mod.get_global_var('func_721')
const_3559 = relay.const([-6.347715,-3.283057,-5.813201,5.912420,-6.698522,4.527746,5.202353,-4.130348,-0.263348,1.370100,-8.457509,6.681652,6.351913,-0.516403,2.160637,7.071526,-2.815218,5.495436,-2.690281,-3.093347,-0.739614,3.869630,-2.680463,8.242707,-3.641129,9.112115,3.207616,9.329318,3.683586,8.358048,-7.390778,0.567994,-4.892537,0.983630,3.418934,7.869471,3.903939,1.140226,-4.469803,-8.140404,8.396900,1.360372,-9.766566,2.217980,-5.345971,-8.225877,-1.017661,-7.858315,-3.234713,5.010945,1.683773,5.052404,6.927765,-5.005715,-0.505986,-2.359914,-8.046104,-8.884403,3.030053,-5.175798,-0.617956,-7.534121,-2.534928,9.123284,-8.180842,-7.239329,4.794755,-5.345659,8.162585,-8.176359,-4.817405,3.274323,8.282089,2.330762,-0.645608,-4.279784,2.693123,7.011512,7.892339,-2.155186,0.470727,8.241813,9.460374,3.191480,-0.220404,-1.715832,-1.039786,7.344444,8.493330,-6.293674,4.498971,-9.706280,1.841706,-2.116054,-1.460485,-5.506216,-4.737088,-1.915748,-8.140301,-0.973679,1.124305,6.223224,-9.927242,8.695407,1.120190,5.220055,4.180818,1.031951,0.908300,5.852497,4.195933,1.040408,-3.806479,6.967077,2.598117,0.774913,-0.691780,7.114252,-6.484758,-0.442212,-8.178977,-6.005350,6.047522,8.960572,4.157586,-6.258092,-2.607027,-2.382449,4.608518,9.689140,3.896983,2.765331,6.078793,9.719777,-1.185723,-3.838462,9.196545,-7.359581,-5.351616,-2.376397,-1.895070,-9.776439,-8.442806,1.250065,-3.778858,9.427251,-9.787419,4.227182,5.177685,6.580625,-0.558873,-0.422761,-5.802963,-1.414533,-9.564842,-8.254189,1.813431,-9.383331,-0.908291,1.614816,-6.767681,-9.865108,-8.780446,9.375360,-3.373184,0.921168,-4.603662,4.526264,-1.950814,4.483077,-8.026983,7.217474,6.447152,5.547236,-8.206768,-4.881592,1.142694,8.708853,9.986898,6.994402,6.737250,-0.263205,2.407003,-7.322306,-5.225396,-3.840253,0.427316,-8.647805,4.950481,-0.029866,3.922984,8.209974,-4.724351,-3.744449,9.708215,3.879664,-8.542156,-0.399754,4.839247,9.337342,-0.125975,-5.714300,2.245855,-6.074262,9.520532,-5.141623,-0.490555,4.860126,-3.968080,-7.735382,-3.513183,-7.229304,1.514254,-9.395084,5.574438,-8.666770,9.369466,-7.256701,-1.179906,-2.033077,8.110481,-7.592437,-8.951816,-3.434677,6.907788,-1.059750,5.733353,-3.221107,2.363198,4.580890,-3.879972,-2.964109,7.871171,-0.574101,-3.685093,8.419584,-8.558875,5.939626,0.861678,5.969642,-8.381361,-2.468764,3.876422,-9.463748,5.351562,1.630352,-3.200479,-0.431685,-0.489293,6.625376,8.262937,0.860011,-1.920011,-0.444439,-4.231274,-2.116991,9.971032,-8.165465,5.754069,5.415150,8.521113,-3.982869,-9.605212,8.486780,1.497840,0.876389,6.180293,-5.352227,1.888011,1.418718,7.673255,-9.644778,1.723555,1.953309,-8.888132,9.778447,5.892294,8.457091,-9.380840,6.035006,5.781871,-3.137894,5.708869,-8.153722,0.958244,-5.905754,2.315488,0.187205,-2.454193,1.819998,2.762621,-5.466880,-4.282047,0.132150,-5.975421,-9.614348,7.282168,-7.500665,-0.925760,-9.542617,-7.040667,-8.529068,9.729397,-0.994648,-5.071205,-6.159983,8.456618,-2.241356,-3.564790,-4.076179,-1.216698,-7.480850,-3.907908,-8.463389,5.449087,-4.295832,-6.029802,5.005786,8.355215,5.407571,7.231045,3.674091,-7.231177,-1.662608,7.072055,3.633753,-8.084942,-9.400107,-5.217704,6.837344,9.919451,9.152164,-1.823880,0.454785,6.527933,6.078921,2.015874,4.680289,-2.987790,-8.924517,-8.881472,-0.232941,-2.940657,4.944852,0.205829,-7.453619,2.706664,-1.763122,2.087266,8.074016,-5.765912,4.540258,3.234212,4.115194,9.255451,-5.677546,2.958268,-5.381768,5.954365,-6.356990,-8.388727,8.660656,9.171538,7.205806,5.192119,5.567499,6.759497,8.640871,0.575797,-9.099050,2.186884,-2.458894,0.843939,-2.610683,8.993587,-5.642110,9.583470,6.815153,4.494412,8.398665,6.700556,9.546661,-1.046837,6.301905,5.368574,-1.968787,-2.220147,-6.816252,8.835789,-5.341449,9.223138,-7.610057,-4.233145,4.449046,-7.215190,3.970787,0.627674,-6.532392,8.523963,7.752322,9.299735,0.928587,4.482194,-9.578921,-5.535576,6.156842,8.641562,3.481833,8.171526,5.142369,2.539936,3.200284,1.506514,-4.875533,6.227469,-3.611892,7.837428,3.575765,2.509567,6.880060,-1.692203,0.269229,-1.190451,-5.474617,-5.011389,1.783510,-9.787346,-3.921464,-2.049904,-2.684554,0.092505,8.622263,6.365451,2.013532,-7.955435,-8.890448,2.292421,-6.696587,-1.870976,4.808918,-9.947059,1.832956,9.569779,0.063151,-8.814132,3.627136,-2.105568,7.868501,6.336142,-8.982888,9.197479,1.361481,-6.000930,7.408834,-7.347686,0.333170,8.789942,1.601347,1.028231,5.398670,-1.614691,7.934294,8.008918,-5.015261,5.556567,-9.821457,-4.576765,8.423347,5.931801,3.051779,2.353236,-3.813130,6.184406,1.211759,-2.510543,4.823235,0.192515,9.981626,9.611144,-3.543819,-4.739917,7.225080,-7.049179,-6.156860,6.949582,1.497998,-3.017299,-9.749379,1.270814,-7.705736,-8.498307,-7.184908,-2.251678,-0.810286,-9.398287,-8.365047,5.072465,2.526014,-6.744997,4.724383,7.919235,-7.931653,-2.878671,-0.823426,-1.407095,-8.844039,-1.781636,2.233844,-1.844000,-0.721953,-2.859853,-4.554998,-6.325879,0.845410,8.305215,3.372612,7.419337,-8.616293,-0.211401,1.834446,-1.414396,2.095235,-7.989884,8.907986,-5.891883,9.308747,6.546576,-1.044437,8.286492,-3.851279,-7.914918,-2.262576,-1.076393,5.678748,7.432767,3.917971,-6.937372,-5.172628,3.878335,-8.098957,2.251518,-1.937540,2.197002,-9.417890,-4.249599,5.747430,-6.097591,-3.049208,-1.178334,3.314567,-2.781157,9.577208,6.073151,-3.284055,-8.204560,-8.752575,-4.557302,-1.492014,9.356473,8.316942,0.682752,-3.906280,-7.949305,-9.967362,8.017237,-2.106225,8.627759,-6.258257,5.544345,6.083458,2.837739,5.859554,0.199153,7.876708,-5.005147,-9.950943,3.553181,-9.481351,-4.328734,4.589778,-4.062605,6.676768,7.441417,8.972997,-8.735904,-2.547958,-0.285923,-1.487503,3.603144,3.712792,-3.769747,-6.592121,-8.193352,4.103327,9.398592,-0.992682,-7.016227,4.938120,-1.398749,-7.002173,-1.860337,-3.916387,-3.224657,-2.842819,3.702616,3.646572,7.110295,5.248488,-9.371668,-2.171454,5.980134,-0.981226,9.476821,-6.109409,-3.003923,-8.787590,7.564529,2.007663,1.436975,-5.829891,8.409287,-0.293909,6.703335,9.990327,-2.128851,4.994360,-9.193992,5.888829,-4.057190,2.898608,-4.886843,3.282946,5.430956,9.849189,-6.123954,3.503312,-7.991212,-2.496670,7.131568,4.392558,-1.760492,-7.807961,-2.553955,-0.507985,3.125783,9.826114,2.847337,4.724258,-2.437119,-7.510107,-5.126351,-5.718834,8.108239,-8.515822,-9.145918,1.940246,0.286905,-2.989008,5.005340,-0.385669,-2.668013,5.544261,-7.485912,-5.006444,4.588490,7.043451,-5.024049,-4.582007,-2.450779,6.924925,5.959070,0.623087,-0.159178,-4.065771,-9.868378,-5.957866,1.718050,3.004828,-1.084888,-5.165842,-5.550357,-8.196785,5.513994,-6.972061,7.808357,3.375888,-1.538932,3.466808,-2.879192,1.444410,-3.405225,6.712832,1.801410,7.444142,7.337366,8.723352,2.760806,-6.331485,5.822461,0.277652,-3.920985,4.128990,7.784603,9.908048,-5.566881,9.305184,-5.884556,-4.938863,2.183488,-4.073168,4.802715,-3.126091,2.964151,-4.257296,2.339411,6.336903,-8.743685,3.306344,-7.518529,1.034547,6.294010,8.157726,9.959006,8.125609,-0.694328,0.946493,5.707642,-4.565727,6.860686,1.164105,-3.195384,-1.979085,9.684682,0.439496,8.606537,9.852451,2.533727,-6.080103,-1.899656,7.855368,1.648920,6.376237,-7.971488,2.678964,-2.404747,-4.198486,-9.505532,3.381528,-1.217342,0.443025,0.749774,-9.077491,1.422813,7.239527,-4.963600,-6.570853,-9.334876,6.127683,-2.405990,-7.369756,4.245159,6.419810,2.624161,-4.570315,4.709635,4.762032,-8.680013,0.018329,0.612250,9.156635,6.620117,5.282218,0.660605,-9.588037,-7.749156,-4.427278,-5.965901,7.783307,-9.903887,6.173146,0.434461,-5.459536,9.411753,1.427290,7.643512,-8.410955,6.043342,-8.961774,-7.565355,-9.749003,4.107095,2.239087,-6.353297,2.170846,-6.250582,6.825847,-0.166838,4.969617,7.420042,-4.567096,5.046164,-7.879367,-7.218224,-9.976704,3.380350,9.266598,4.817955,-5.881808,5.360452,5.696856,8.972924,5.867114,-6.193169,1.390712,-9.652807,-8.018637,-0.154537,-6.498262,9.312732,-9.350027,4.666589,6.989455,-2.921546,-2.951516,-3.729130,6.050665,-7.484771,8.009257,9.780605,0.552917,-2.760166,1.860122,-7.595602,6.298495,-1.140818,-4.447245,-3.350635,3.888314,-5.678715,-8.808350], dtype = "float32")#candidate|3559|(840,)|const|float32
call_3558 = func_718_call(relay.reshape(const_3559.astype('float32'), [8, 7, 15]))
call_3560 = func_718_call(relay.reshape(const_3559.astype('float32'), [8, 7, 15]))
output = relay.Tuple([uop_3530,bop_3551,call_3558,const_3559,])
output2 = relay.Tuple([uop_3532,bop_3554,call_3560,const_3559,])
func_3564 = relay.Function([], output)
mod['func_3564'] = func_3564
mod = relay.transform.InferType()(mod)
output = func_3564()
func_3565 = relay.Function([], output)
mutated_mod['func_3565'] = func_3565
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3171_call = mod.get_global_var('func_3171')
func_3173_call = mutated_mod.get_global_var('func_3173')
call_3573 = func_3171_call()
call_3574 = func_3171_call()
output = relay.Tuple([call_3573,])
output2 = relay.Tuple([call_3574,])
func_3589 = relay.Function([], output)
mod['func_3589'] = func_3589
mod = relay.transform.InferType()(mod)
output = func_3589()
func_3590 = relay.Function([], output)
mutated_mod['func_3590'] = func_3590
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3249_call = mod.get_global_var('func_3249')
func_3250_call = mutated_mod.get_global_var('func_3250')
call_3617 = func_3249_call()
call_3618 = func_3249_call()
uop_3619 = relay.log(call_3617.astype('float64')) # shape=(5, 15, 12)
uop_3621 = relay.log(call_3618.astype('float64')) # shape=(5, 15, 12)
output = uop_3619
output2 = uop_3621
func_3640 = relay.Function([], output)
mod['func_3640'] = func_3640
mod = relay.transform.InferType()(mod)
output = func_3640()
func_3641 = relay.Function([], output)
mutated_mod['func_3641'] = func_3641
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3249_call = mod.get_global_var('func_3249')
func_3250_call = mutated_mod.get_global_var('func_3250')
call_3734 = func_3249_call()
call_3735 = func_3249_call()
func_2479_call = mod.get_global_var('func_2479')
func_2482_call = mutated_mod.get_global_var('func_2482')
var_3738 = relay.var("var_3738", dtype = "float32", shape = (495,))#candidate|3738|(495,)|var|float32
call_3737 = func_2479_call(relay.reshape(var_3738.astype('float32'), [11, 9, 5]))
call_3739 = func_2479_call(relay.reshape(var_3738.astype('float32'), [11, 9, 5]))
func_3640_call = mod.get_global_var('func_3640')
func_3641_call = mutated_mod.get_global_var('func_3641')
call_3740 = func_3640_call()
call_3741 = func_3640_call()
bop_3744 = relay.left_shift(var_3738.astype('int16'), relay.reshape(call_3737.astype('int16'), relay.shape_of(var_3738))) # shape=(495,)
bop_3747 = relay.left_shift(var_3738.astype('int16'), relay.reshape(call_3739.astype('int16'), relay.shape_of(var_3738))) # shape=(495,)
output = relay.Tuple([call_3734,call_3740,bop_3744,])
output2 = relay.Tuple([call_3735,call_3741,bop_3747,])
func_3748 = relay.Function([var_3738,], output)
mod['func_3748'] = func_3748
mod = relay.transform.InferType()(mod)
mutated_mod['func_3748'] = func_3748
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3749 = relay.var("var_3749", dtype = "float32", shape = (495,))#candidate|3749|(495,)|var|float32
func_3748_call = mutated_mod.get_global_var('func_3748')
call_3750 = func_3748_call(var_3749)
output = call_3750
func_3751 = relay.Function([var_3749], output)
mutated_mod['func_3751'] = func_3751
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3171_call = mod.get_global_var('func_3171')
func_3173_call = mutated_mod.get_global_var('func_3173')
call_3772 = func_3171_call()
call_3773 = func_3171_call()
func_3748_call = mod.get_global_var('func_3748')
func_3751_call = mutated_mod.get_global_var('func_3751')
var_3776 = relay.var("var_3776", dtype = "float32", shape = (495,))#candidate|3776|(495,)|var|float32
call_3775 = relay.TupleGetItem(func_3748_call(relay.reshape(var_3776.astype('float32'), [495,])), 2)
call_3777 = relay.TupleGetItem(func_3751_call(relay.reshape(var_3776.astype('float32'), [495,])), 2)
func_3492_call = mod.get_global_var('func_3492')
func_3495_call = mutated_mod.get_global_var('func_3495')
var_3780 = relay.var("var_3780", dtype = "uint8", shape = (52,))#candidate|3780|(52,)|var|uint8
var_3781 = relay.var("var_3781", dtype = "uint8", shape = (104,))#candidate|3781|(104,)|var|uint8
call_3779 = func_3492_call(relay.reshape(var_3780.astype('uint8'), [4, 1, 13]), relay.reshape(var_3781.astype('uint8'), [4, 2, 13]), )
call_3782 = func_3492_call(relay.reshape(var_3780.astype('uint8'), [4, 1, 13]), relay.reshape(var_3781.astype('uint8'), [4, 2, 13]), )
output = relay.Tuple([call_3772,call_3775,var_3776,call_3779,var_3780,var_3781,])
output2 = relay.Tuple([call_3773,call_3777,var_3776,call_3782,var_3780,var_3781,])
func_3803 = relay.Function([var_3776,var_3780,var_3781,], output)
mod['func_3803'] = func_3803
mod = relay.transform.InferType()(mod)
mutated_mod['func_3803'] = func_3803
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3803_call = mutated_mod.get_global_var('func_3803')
var_3805 = relay.var("var_3805", dtype = "float32", shape = (495,))#candidate|3805|(495,)|var|float32
var_3806 = relay.var("var_3806", dtype = "uint8", shape = (52,))#candidate|3806|(52,)|var|uint8
var_3807 = relay.var("var_3807", dtype = "uint8", shape = (104,))#candidate|3807|(104,)|var|uint8
call_3804 = func_3803_call(var_3805,var_3806,var_3807,)
output = call_3804
func_3808 = relay.Function([var_3805,var_3806,var_3807,], output)
mutated_mod['func_3808'] = func_3808
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3589_call = mod.get_global_var('func_3589')
func_3590_call = mutated_mod.get_global_var('func_3590')
call_3837 = relay.TupleGetItem(func_3589_call(), 0)
call_3838 = relay.TupleGetItem(func_3590_call(), 0)
func_1071_call = mod.get_global_var('func_1071')
func_1075_call = mutated_mod.get_global_var('func_1075')
const_3842 = relay.const([-6.620614,-2.701088,-0.243141,9.781835,-6.179761,-8.042065,-6.812595,3.942483,1.752741,-5.614265,8.216289,-4.318505,3.242014,5.322068,-6.801876,1.093950,5.066573,9.392385,7.106443,-1.578798,-6.083889,7.111158,4.807149,5.408942,1.781050,-4.426094,-4.389013,-8.741836,-0.429146,-8.531245,-4.501072,6.158543,1.437863,3.625557,9.300274,-4.320340,-0.348695,8.586160,-9.531230,0.435291,-2.141169,-9.606633,-5.282110,-0.414913,9.902802,4.729285,-3.295740,2.538501,9.107327,7.662805,-4.868224,0.409055,5.045830,-3.839848,1.245051,-4.231248,4.083184,-2.643638,6.968760,-8.045991,2.527619,-7.064843,8.254769,-8.655675,-0.120723,8.015579,9.067135,0.828547,2.423225,5.976520,6.039104,-5.117081,-8.991316,-6.666509,7.097402,-0.293177,0.568221,6.629657,-8.508340,9.231223,1.429549,-0.879255,3.154354,4.541524,9.912465,6.548658,-4.811995,-2.444061,-4.898025,-1.124392,5.079606,8.629137,2.474787,8.280639,-1.591768,-5.865788,-0.094098,-1.555534,5.954973,-4.862997,-9.810889,3.708754,-1.239515,-6.954896,7.257993,-3.173722,6.499420,6.680612,-1.965026,8.551457,5.991548,-1.705583,-3.216226,-5.238311,6.996681,-4.181895,-1.772879,-8.266632,8.644907,-2.298412,-3.225306,-9.831348,-4.954034,-4.783049,-5.410559,3.940179,-8.453565,4.161864,-8.177402,-5.333751,4.817039,-5.356428,-6.085128,-5.829468,1.531965,-4.498224,0.679639,8.602968,-0.455551,4.533855,2.560532,8.886560,-1.766976,-8.993571,-6.242834,-2.340868,-5.671934,2.149227,-3.481148,-9.502284,-5.999132,3.644207,8.783000,7.853405,-6.336116,1.446129,8.813239,7.222741,9.156769,5.417074,-7.214998,6.170159,-8.477891,-8.046950,-2.822951,-1.813136,8.804658,9.502641,-0.750151,4.628013,0.327648,0.383864,4.351652,-4.734279,-6.002231,-4.207189,-9.292850,8.939650,-7.564783,9.814554,6.323662,-6.893082,7.564850,3.411544,-3.024435,-2.407008,4.572928,6.118638,8.797025,-4.025080,8.907776,-6.963197,-8.197112,-5.353035,9.976452,-8.747531,0.064532,-4.430108,-0.481008,-6.613837,-8.809303,-7.018013,-3.619037,-0.202564,7.739470,-0.036464,0.504874,-5.078537,-3.468717,-3.856332,-9.554426,-2.698473,0.986754,-4.169937,6.661995,4.300587,-0.212420,9.328220,9.914567,-1.102534,-0.336897,0.791504,7.192303,-7.492169,-9.814170,-5.996599,2.304516,-1.741342,6.697333,-3.903831,2.371435,-1.932900,8.916091,1.057384,4.486454,9.460244,-4.876146,8.029334,6.990211,5.039129,-6.439766,-0.349873,2.598546,6.800429,-0.193528,0.809036,6.543140,1.169741,3.929518,0.977004,-9.367760,3.352363,5.632235,-9.225806,-9.505399,-7.751752,0.034918,-1.319993,4.568398,4.019275,7.079858,5.163752,-7.634211,3.919433,4.767611,-6.919816,4.945330,-9.700832,-1.035035,1.102457,8.382550,-5.505470,6.679697,0.188019,-8.641072,-7.176927,9.684915,-3.087531,-7.731013,2.226380,-2.385923,4.283039,0.153283,-8.137534,-7.364484,-1.217273,4.430092,0.166254,3.794198,7.947175,7.382427,9.065816,3.984132,9.467740,6.562171,-4.680055,-9.387931,-7.722137,9.875510,-8.305856,-6.390957,9.012663,0.448609,-4.338748,6.261281,-2.743913,8.349059,4.913196,3.429071,-6.531698,-5.827615,-3.423977,-9.181251,-4.647088,4.963900,-5.119805,-6.179231,5.433062,-1.786390,-0.715654,2.120331,-1.668992,9.657151,3.850914,-1.905636,1.944074,-9.264984,-4.173315,-4.339200,8.085799,2.802432,-6.631733,4.283117,7.697795,0.861868,-3.531655,-0.587891,-3.926295,-5.537716,-7.049448,8.437633,9.347576,9.735392,3.835767,9.283264,6.508128,-7.000903,-3.630890,5.175368,5.437569,5.886258,4.244989,-6.246298,0.440820,8.165200,-2.344456,-1.011066,3.880457,1.750231,1.870176,4.413054,5.932310,-5.835411,1.868643,1.238246,4.315449,-4.873550,-6.030635,-6.888103,-0.409963,6.973443,-0.436425,-0.719448,2.142584,-1.684805,-7.923872,2.493335,8.523874,4.453250,6.861998,5.984594,-7.553864,5.943302,2.672457,-7.667579,3.201125,-2.999124,8.693799,3.654496,-3.871067,-7.287343,2.080122,-4.771624,7.489898,-0.256479,-5.748245,2.313298,6.772380,5.708065,-6.421170,-5.219303,7.596149,-9.267715,-1.176318,4.168305,5.936250,5.118181,7.205646,-8.922719,-2.514420,5.026563,-8.821160,3.618970,5.764895,-7.223139,-9.062945,5.927208,5.074719,1.770645,-6.855386,-5.669084,-8.710972,-8.865772,7.018468,-2.089740,1.244290,-1.495419,0.953427,-0.927796,-7.707435,-2.309571,6.525151,-5.815299,5.855066,-6.812819,-3.621733,-5.392363,0.821512,-4.165490,8.989456,-5.694122,-8.700439,-4.803223,-2.794780,-9.758548,-2.165639,5.577314,0.686936,-0.471505,2.518422,-0.180181,-9.319987,-1.363992,2.122532,-8.172028,-5.952549,-5.357223,-6.008443,-1.290307,8.595738,2.758325,3.139010,8.895900,9.461809,-3.198875,0.504923,-7.255550,6.995176,5.219571,-9.087596,3.120330,-5.891615,3.980094,-2.690195,4.756337,7.039735,8.192966,3.031553,0.007715,5.153738,-5.244885,-3.283364,-1.795035,4.612505,-1.070056,7.627644,-8.565045,3.303896,-3.886108,7.945223,2.362339,9.317236,-5.981144,-6.350411,9.258260,7.664747,-8.366279,-1.538792,5.780057,-2.000453,2.757872,4.786744,9.938591,-4.796550,-0.069843,9.532719,-8.771019,6.128915,8.690018,-1.375347,2.475498,-7.610692], dtype = "float32")#candidate|3842|(512,)|const|float32
const_3843 = relay.const([0.164086,-3.593949,-3.754766,-1.011418,3.935468,-4.479772,5.523482,1.422297,-7.080130,-0.406110,-1.712047,-9.529744,-9.201589,0.197257,5.179881,-5.221435,-2.408743,-7.556858,-7.889155,-4.421424,2.117251,7.192934,-5.054765,-8.934207,1.849777,3.538544,4.185741,2.395359,-8.032238,2.745143,-0.436817,-0.285479,-8.491631,-0.640259,-9.405694,-6.947179,5.062532,-3.109072,2.649113,-7.621501,2.713919,-8.866989,9.137316,-8.247301,7.071678,4.298254,0.480741,-2.083260,-3.407090,-2.464230,-3.844907,-5.794422,-7.187556,5.374465,5.137352,6.623192,0.713298,4.761169,8.025664,1.650776,7.028503,4.838137,-8.232579,7.881034,-6.000602,2.246221,-2.370812,-1.028506,-9.462621,-1.266517,9.952777,-1.732147,-8.386644,0.719326,3.022514,-3.784123,5.002581,0.280453,4.649511,6.240442,-1.796374,-4.424748,-7.955918,-0.429800,2.376337,6.844354,-3.966426,2.020130,4.251765,-2.171786,1.087104,-9.818984,-6.127033,7.491152,-4.702805,0.652729,2.170870,8.305633,-2.048763,5.366321,8.630340,-0.532577,-8.800404,-0.531405,-9.845154,0.890903,3.687555,2.838486,2.038312,7.523922,5.842950,6.608552,9.501516,-5.081468,-1.140655,7.016232,-4.968698,3.150748,5.539560,7.370103,-1.981231,-2.184766,-0.694205,-9.043594,-8.387626,8.825499,-5.539378,-4.276941,9.096694,-2.941058,-5.004853,5.773660,5.532552,-0.888376,-4.803679,8.586908,-2.117736,-6.460828,2.616252,-7.790335,1.473045,1.480298,-8.844909,5.611823,-6.867338,7.165332,4.265762,-9.760908,4.346639,4.794391,-6.918078,2.362382,-1.513965,7.545087,-9.898429,8.642143,6.176852,1.667759,3.296931,5.856135,-8.974966,-7.460803,-3.076837,7.860787,1.205224,7.526273,4.068159,-2.549983,5.904583,2.932874,-1.601444,7.125503,1.329390,9.303939,2.664614,-7.938439,-2.713611,7.598765,4.667958,-6.023096,1.622779,-3.283853,-6.097850,2.798115,-3.545784,3.885658,2.742602,-3.545879,-7.557522,3.162768,5.478718,0.933737,9.228773,-5.267433,8.181161,2.409215,-5.399037,7.157797,1.422821,-3.743839,4.929389,-5.731038,-4.084764,8.557617,-7.544648,-2.190480,6.642341,1.581905,-3.120579,1.908189,1.624220,8.842343,7.895367,-4.100146,6.402002,-8.187572,2.137957,1.396887,-5.593849,-8.988272,-8.685343,-7.684985,-8.445190,-9.728508,2.927186,5.851473,-8.780141,-8.293253,8.610267,-1.267206,-0.280253,-6.954125,7.563819,4.895825,-7.502170,0.215602,7.980047,-0.198116,9.281552,-9.782030,7.421215,4.114803,-8.235243,0.699440,2.619613,-3.502939,-6.060724,7.674708,2.327386,5.091713,-5.363075,-6.657120,-7.969900,9.930151,6.387422,-5.196616,9.484859,-5.319432,-1.689375,-5.414346,-1.059427,5.030128,2.600292,-8.023139,0.425731,-5.810908,-7.484311,8.600936,-1.749364,2.788395,3.905669,-9.923095,1.931669,-9.506036,-2.352351,5.933341,-4.858123,8.218255,5.695973,-8.653472,-3.526530,-2.927104,2.579164,1.581468,8.089763,1.403007,5.050866,7.333784,-3.796399,-4.279287,-9.130550,9.495581,-1.154065,-8.267166,3.051928,-8.780728,-5.037314,-3.981381,1.854025,7.740681,-5.564896,1.735042,-6.697305,2.644162,-4.172349,9.736900,7.980468,4.679603,5.048734,-4.127240,-9.294681,-4.048979,8.230028,-5.665152,7.081016,6.613720,-6.509025,6.587430,-2.935373,-7.237397,-4.472924,2.446489,-8.348789,8.056288,4.067908,-5.545156,-8.576913,-1.683054,-3.459877,-3.474866,-2.657017,7.786652,-3.853001,3.560257,2.213862,-6.414567,0.553014,-6.059650,-2.423650,7.826009,2.541823,-4.356253,1.765451,9.384726,3.904386,8.396781,-8.098208,5.000661,1.346387,0.038512,-6.582895,-0.274801,6.705791,1.707969,-6.116248,6.993284,7.590098,4.771845,-0.361793,-1.175606,9.780615,2.769376,-9.140480,-9.899785,6.371027,3.319224,6.496215,8.035796,-2.455162,5.576049,-6.490261,-0.001107,-5.454682,-0.906175,-0.437135,-2.045355,-8.849916,4.164632,-6.857413,-1.396473,0.969462,6.260036,6.244479,-5.746837,-6.124989,-0.109961,-6.854560,-6.754098,-9.643592,-5.757414,7.458843,-9.823747,-8.175043,-3.543732,-3.087995,9.296478,-0.124772,-4.441168,6.368351,6.649709,-0.825391,-6.076491,-5.021677,1.617584,3.053736,-0.084217,8.572897,-8.917057,-5.739158,-9.670258,1.768976,5.363776,3.135949,5.108990,-0.430227,-0.289762,-5.291436,5.945360,3.099678,-4.825798,-3.195932,1.579464,8.126768,-4.768481,-1.364553,-6.243672,-1.442653,-8.050836,-9.151590,-3.000769,-1.044780,7.947419,-0.794540,-4.478584,-4.036749,-9.290950,9.759166,-1.653388,-5.565678,-0.728011,0.853864,-6.872087,-5.597662,2.760798,4.622218,1.015352,-4.544264,-0.497560,-3.620362,-6.449421,0.587066,0.439858,-2.632512,-5.738169,-0.759791,-3.576173,8.606132,0.282007,1.695123,-9.137135,4.141074,-6.192992,7.170755,-5.777147,0.253125,-3.455286,5.689544,7.430973,7.094478,-9.632875,6.317411,1.540280,-7.925230,-6.572537,-2.485183,-8.455491,8.760090,9.594169,7.828500,-8.053885,9.436426,-8.007711,-0.047309,-4.464454,0.744588,-5.203997,4.337212,7.160071,-0.563413,8.599411,9.711189,-6.466298,2.659013,4.686518,9.140070,7.874722,-6.940393,-3.891698,-6.903959,-5.265654,8.531130,-3.056149,-2.994575,-5.531229,5.192742,4.037770,6.227464,9.220594,-0.449743,-6.208217,-7.260151,-9.713759,2.766858,-6.743095,3.669631,6.769509,5.421695,-9.823987,4.239536,-8.015525,-7.683065,0.886289,-6.444410,-1.586002,7.666292,-4.195324,6.294567,-3.263291,7.361924,-2.716463,0.327700,-9.061224,0.124869,4.827132,6.317309,7.349742,4.123822,-8.732506,-4.547318,-6.977096,3.130826,4.675290,5.070204,2.495362,-4.949599,-4.346366,7.318998,-1.983848,3.409266,4.673674,-7.914527,-4.588729,-3.753256,0.655640,-9.973149,-0.457753,-0.784982,-9.484111,-0.929573,4.383912,2.398696,-0.538344,-8.049888,7.631415,-4.706360,-3.778180,0.351743,4.993980,1.878064,-7.755121,-6.474727,5.208259,7.151451,0.636644,2.130323,-2.403930,-0.070326,6.383338,-8.879033,-6.249108,-4.851306,3.022802,4.617318,2.729773,1.604394,-3.358876,-0.246064,-6.365040,0.552546,2.783918,-9.337525,1.756504,8.130551,6.860664,1.660784,-4.882065,7.954068,-5.078102,-9.789854,9.343632,1.263431,-5.094667,-7.268097,4.552027,-9.475704,-5.031520,1.581760,4.217226,5.714646,-9.624513,-3.188191,-4.490492,-6.621657,-8.413070,-9.785335,-1.295298,-1.629565,0.401659,0.695115,-0.528213,-1.915148,2.578013,0.794077,-5.132723,9.562442,8.391017,9.257049,6.637865,-8.623022,1.714824,-8.910334,1.991822,-7.414313,6.494671,3.128014,2.912020,-0.466304,6.148157,1.500996,-3.280262,-8.556787,-2.698002,3.085953,8.707228,2.764230,-7.679299,-2.383889,-1.836149,4.413005,2.025749,-7.314449,-3.469245,5.765705,-8.193284,4.499231,3.890502,-1.118724,1.596243,-9.356894,-5.414884,2.809660,1.029350,-4.362387,-1.324771,2.003907,-3.335800,-5.016798,-5.837828,9.304776,-4.892129,-8.619450,-6.714031,4.327004,-1.631719,0.206884,-2.196667,-9.768619,-0.989677,2.848878,-0.803405,-9.365111,-7.230851,6.478572,-9.415308,3.043648,6.448905,9.536278,4.732192,2.127581,-6.933562,-2.599707,-7.522352,-7.536385,6.433687,8.640717,-1.915031,-5.511497,7.298602,1.160447,-8.998570,-4.937757,-6.776261,-9.375415,2.062673,-6.708358,-8.149466,-8.581143,0.809239,8.235846,-9.887503,-7.330537,9.932046,-3.283841,-6.905489,-5.571590,-3.202660,-8.016193,-9.347214,-3.800371,-6.068424,4.456492,8.836677,2.149367,-2.947608,3.207153,-6.895113,0.009187,1.960309,-1.284355,-2.440855,-9.327206,1.985067,3.559711,7.347649,0.825906,-9.186301,-5.722190,-6.292658,-2.656388,2.285062,-9.826892,7.472357,8.965273,0.742387,-8.197013,-9.890191,-4.178852,5.400966,-4.944666,-4.304415,1.508099,-8.054297,-0.297059,0.971872,-0.856106,3.495689,-1.873119,-3.148699,2.652909,6.364630,9.944545,-7.278298,-9.142088,-9.363309,8.980491,-4.123710,6.050234,-0.726703,-0.800801,5.417527,-0.042146,3.784014,2.231777,-9.267989,8.208808,7.102041,-0.886640,-8.329177,6.890276,5.998619,1.747720,6.320523,-5.828838,7.658526,-9.461061,1.378246,6.285425,4.731839,0.657353,1.464795,-6.013348,0.672443,-0.853745,8.687879,-2.095510,-1.925880,-0.037218,9.075441,-1.086088,1.200205,0.105093,6.941391,7.863599,0.717266,1.051066,2.326051,5.455955,-5.838288,3.006359,-4.497206,-2.085885,3.607433,-8.157252,8.257843,3.993908,2.174666,-7.560761,5.006370,-2.043692,-8.101407,0.114446,0.696657,-2.204125,1.685786,3.754134,-2.209155,-9.333618,-4.322833,-1.759105,7.831171,5.660792,-2.739949,-7.873689,4.263711,-7.250283,-9.568565,-5.207697,4.388680,8.938053,-9.581544], dtype = "float32")#candidate|3843|(840,)|const|float32
call_3841 = relay.TupleGetItem(func_1071_call(relay.reshape(const_3842.astype('float32'), [8, 16, 4]), relay.reshape(const_3843.astype('float32'), [840,]), relay.reshape(const_3842.astype('uint64'), [8, 16, 4]), ), 2)
call_3844 = relay.TupleGetItem(func_1075_call(relay.reshape(const_3842.astype('float32'), [8, 16, 4]), relay.reshape(const_3843.astype('float32'), [840,]), relay.reshape(const_3842.astype('uint64'), [8, 16, 4]), ), 2)
func_3564_call = mod.get_global_var('func_3564')
func_3565_call = mutated_mod.get_global_var('func_3565')
call_3846 = relay.TupleGetItem(func_3564_call(), 2)
call_3847 = relay.TupleGetItem(func_3565_call(), 2)
uop_3855 = relay.asinh(const_3842.astype('float32')) # shape=(512,)
uop_3857 = relay.acosh(const_3843.astype('float64')) # shape=(840,)
bop_3860 = relay.power(uop_3855.astype('float32'), relay.reshape(const_3842.astype('float32'), relay.shape_of(uop_3855))) # shape=(512,)
uop_3863 = relay.sqrt(uop_3855.astype('float32')) # shape=(512,)
func_3249_call = mod.get_global_var('func_3249')
func_3250_call = mutated_mod.get_global_var('func_3250')
call_3865 = func_3249_call()
call_3866 = func_3249_call()
func_3748_call = mod.get_global_var('func_3748')
func_3751_call = mutated_mod.get_global_var('func_3751')
const_3869 = relay.const([[-1.770181,-5.419224,6.370622,0.955966,4.905805,-1.273670,-7.483138,-9.687908,4.206990,-0.945314,2.951695,-2.475952,-0.628769,-4.004808,-2.622089,-7.136847,-1.240755,9.711864,2.781462,-1.755867,-8.010123,-4.740791,-2.949568,-8.243042,-6.863762,-0.885170,3.135163,-2.488052,-1.825701,7.536473,-5.107651,4.888315,-2.309894,-7.508702,-2.964122,-4.967794,-5.186152,9.170536,-4.018696,-0.428840,8.423527,-1.678594,9.670182,-5.757184,3.466435,-5.227865,5.016507,-8.554723,-3.434317,4.244507,0.891745,8.468783,-3.890279,-6.801998,3.045819,9.595278,2.656020,8.024097,-2.156216,-6.566589,4.435503,-4.308135,-1.953132,-4.181761,6.114807,3.665168,-5.573705,-1.959665,-2.535636,2.666884,9.261405,-9.603836,-1.412200,-2.369010,4.722468,-3.052936,1.205643,-6.068776,3.299916,9.409199,-2.847288,5.436980,5.493952,-7.020197,-8.678572,4.484967,-6.583097,-8.620215,-4.823881,-3.210108,1.690711,-1.216954,7.984338,-7.357504,-1.210224,5.568255,9.069098,3.970730,9.917716,-6.795333,0.885900,6.822017,4.561581,-0.446505,-7.533852,6.340665,4.087869,3.555129,-9.108554,1.911501,5.994963,-1.075747,2.721424,8.454586,5.696711,-4.418059,-6.325804,-3.788449,6.051997,2.414241,7.643533,9.819530,-1.992938,9.774940,-3.625964,5.698776,-8.075297,-8.449822,6.211209,-7.771796,6.892564,9.409860,-7.954855,4.344687,-0.879680,-4.358628,-3.027002,-0.545457,-4.313810,7.942871,-9.006853,-6.137653,-4.042205,-8.595419,-3.644042,-7.280375,5.833746,4.218029,-5.178106,0.308436,7.072695,-8.801034,0.597620,2.813895,2.247188,7.660667,4.253673,-0.840740,-7.790590,-4.256216,2.177561,9.742136,-3.814889,-4.020701,4.500300,-7.165203,3.208520,-2.506732,8.027060,-3.030295,5.146338,4.956034,6.053689,-5.363369,-5.336843,3.516764,-7.150790,1.951408,3.077238,7.238968,0.969433,-2.229145,-4.764819,-6.343186,-7.425038,-0.673243,-8.105519,-0.059685,6.274745,7.187633,1.695869,2.214763,5.082318,3.731888,5.083935,-0.270074,-5.903396,6.554091,4.017279,-2.629765,2.843752,1.367817,-7.906717,9.917532,4.934626,-7.837807,4.168139,-7.824207,-1.441093,-8.705106,-0.285876,-5.136520,7.084153,5.925630,8.018608,-4.112188,2.641902,-8.166362,7.063743,0.677273,5.792233,-0.545246,-4.490598,8.970852,-5.061475,-5.930982,-0.968392,8.465148,-4.456164,2.878014,-0.370109,-0.013728,1.887082,-5.007668,7.109413,0.328922,6.249056,7.131207,-8.989853,-6.140153,-5.048005,0.112823,6.284398,-3.053979,-2.114335,-9.266015,7.764011,-7.774750,3.409767,-4.905769,-1.919865,0.808675,0.198062,8.703698,-0.045387,-1.963918,-9.183711,6.478516,-8.512407,-9.516240,9.608601,1.848271,8.210644,-0.177634,-2.282626,0.116087,-9.228991,-5.325538,-2.347134,-8.783950,6.840092,2.381554,-6.401598,-2.306208,2.772074,0.178638,6.746757,3.969426,-9.386792,9.890235,-3.311055,-0.524979,-8.574001,-8.047305,-1.756268,1.069162,3.353979,-8.323784,1.643211,-4.727188,2.805530,-0.022740,1.898095,5.636173,7.608646,-1.815182,-9.156353,-4.339593,-8.006359,7.680925,5.912527,-4.443016,6.158734,2.661956,2.458740,4.604537,3.658626,8.141992,-1.994518,1.677503,-8.314402,9.278458,-8.040288,8.300996,3.729469,2.002742,0.377068,7.627521,-7.277284,6.022511,1.289864,-9.743209,-8.441525,9.692371,6.088168,-8.339067,-8.068233,-1.225012,-0.136460,1.008534,-6.360997,-1.648188,0.232462,-1.488182,-0.984375,5.695443,5.568141,4.930635,-0.408511,-7.951712,7.616779,3.891451,-9.425185,-2.692899,0.559497,-5.333980,-0.300652,0.921279,3.695318,-6.031944,9.785761,4.792488,8.270306,4.699994,7.825478,0.154280,-9.194928,-7.563811,-9.437251,2.339077,4.982022,7.411072,7.576591,6.625939,8.729870,-2.554822,0.144459,3.220772,-7.972698,-0.199408,-4.629109,-2.002683,-8.759125,9.737276,2.796563,-1.020484,6.801196,6.821236,-1.102186,6.712624,-1.638106,1.255857,8.673265,-8.339977,9.290856,0.547672,8.078036,-9.762640,-4.183726,-6.505362,1.021190,-8.407324,8.378748,7.368892,-7.191553,5.654925,-9.300086,4.557015,8.697814,-5.584588,-3.973431,-9.503223,4.405196,-1.376315,-0.935488,-5.074110,4.169189,-2.753081,-1.718271,0.149668,-7.000515,6.623275,8.979718,-2.652956,-6.228609,0.425248,-1.158317,-2.823737,-7.998886,-3.897600,-9.636237,-5.885049,6.658855,-9.654878,-8.157917,2.688282,-4.820053,-7.009219,4.981985,-7.855559,2.908549,-2.155833,3.866207,5.238356,0.558810,-4.955451,-4.406581,-3.785181,-5.201555,2.234461,-9.767068,9.374575,3.977380,-6.116147,3.321106,9.430773,-9.609563,-6.772442,-6.376909,4.133554,5.408558,9.481712,6.072019,-8.698705,-0.775306,-3.104083,-5.099155,0.099565,1.878556,-0.403025,-4.422312,7.822780,3.448989,-1.473010,-6.332527,-8.525343,-8.732057,2.342291,2.992856,4.704608,-8.892629,-2.603879,6.540679,-3.198965,1.562455,0.336562,-3.474574,-3.101172,7.894265,-3.818425,-5.285617,2.519725,-8.175286,-3.200818,-4.760153,-8.500716,-2.936824,4.992201,-5.123647,-8.629934,-8.712993,-7.362734,5.106033,8.352621,6.728702]], dtype = "float32")#candidate|3869|(1, 495)|const|float32
call_3868 = relay.TupleGetItem(func_3748_call(relay.reshape(const_3869.astype('float32'), [495,])), 0)
call_3870 = relay.TupleGetItem(func_3751_call(relay.reshape(const_3869.astype('float32'), [495,])), 0)
bop_3871 = relay.floor_divide(uop_3863.astype('float32'), relay.reshape(bop_3860.astype('float32'), relay.shape_of(uop_3863))) # shape=(512,)
bop_3876 = relay.less(bop_3871.astype('bool'), relay.reshape(bop_3860.astype('bool'), relay.shape_of(bop_3871))) # shape=(512,)
bop_3888 = relay.subtract(bop_3871.astype('uint8'), relay.reshape(uop_3863.astype('uint8'), relay.shape_of(bop_3871))) # shape=(512,)
bop_3909 = relay.divide(bop_3876.astype('float32'), relay.reshape(uop_3863.astype('float32'), relay.shape_of(bop_3876))) # shape=(512,)
func_3285_call = mod.get_global_var('func_3285')
func_3287_call = mutated_mod.get_global_var('func_3287')
call_3915 = relay.TupleGetItem(func_3285_call(), 0)
call_3916 = relay.TupleGetItem(func_3287_call(), 0)
func_3803_call = mod.get_global_var('func_3803')
func_3808_call = mutated_mod.get_global_var('func_3808')
var_3923 = relay.var("var_3923", dtype = "uint8", shape = (52,))#candidate|3923|(52,)|var|uint8
var_3924 = relay.var("var_3924", dtype = "uint8", shape = (104,))#candidate|3924|(104,)|var|uint8
call_3922 = relay.TupleGetItem(func_3803_call(relay.reshape(const_3869.astype('float32'), [495,]), relay.reshape(var_3923.astype('uint8'), [52,]), relay.reshape(var_3924.astype('uint8'), [104,]), ), 2)
call_3925 = relay.TupleGetItem(func_3808_call(relay.reshape(const_3869.astype('float32'), [495,]), relay.reshape(var_3923.astype('uint8'), [52,]), relay.reshape(var_3924.astype('uint8'), [104,]), ), 2)
output = relay.Tuple([call_3837,call_3841,call_3846,uop_3857,call_3865,call_3868,const_3869,bop_3888,bop_3909,call_3915,call_3922,var_3923,var_3924,])
output2 = relay.Tuple([call_3838,call_3844,call_3847,uop_3857,call_3866,call_3870,const_3869,bop_3888,bop_3909,call_3916,call_3925,var_3923,var_3924,])
func_3936 = relay.Function([var_3923,var_3924,], output)
mod['func_3936'] = func_3936
mod = relay.transform.InferType()(mod)
var_3937 = relay.var("var_3937", dtype = "uint8", shape = (52,))#candidate|3937|(52,)|var|uint8
var_3938 = relay.var("var_3938", dtype = "uint8", shape = (104,))#candidate|3938|(104,)|var|uint8
output = func_3936(var_3937,var_3938,)
func_3939 = relay.Function([var_3937,var_3938,], output)
mutated_mod['func_3939'] = func_3939
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3949 = relay.var("var_3949", dtype = "uint16", shape = (10, 14, 16))#candidate|3949|(10, 14, 16)|var|uint16
var_3950 = relay.var("var_3950", dtype = "uint16", shape = (10, 14, 16))#candidate|3950|(10, 14, 16)|var|uint16
bop_3951 = relay.bitwise_xor(var_3949.astype('uint16'), relay.reshape(var_3950.astype('uint16'), relay.shape_of(var_3949))) # shape=(10, 14, 16)
func_3285_call = mod.get_global_var('func_3285')
func_3287_call = mutated_mod.get_global_var('func_3287')
call_3955 = relay.TupleGetItem(func_3285_call(), 0)
call_3956 = relay.TupleGetItem(func_3287_call(), 0)
uop_3967 = relay.log(var_3949.astype('float64')) # shape=(10, 14, 16)
uop_3974 = relay.exp(uop_3967.astype('float32')) # shape=(10, 14, 16)
func_3589_call = mod.get_global_var('func_3589')
func_3590_call = mutated_mod.get_global_var('func_3590')
call_3982 = relay.TupleGetItem(func_3589_call(), 0)
call_3983 = relay.TupleGetItem(func_3590_call(), 0)
output = relay.Tuple([bop_3951,call_3955,uop_3974,call_3982,])
output2 = relay.Tuple([bop_3951,call_3956,uop_3974,call_3983,])
func_3992 = relay.Function([var_3949,var_3950,], output)
mod['func_3992'] = func_3992
mod = relay.transform.InferType()(mod)
mutated_mod['func_3992'] = func_3992
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3992_call = mutated_mod.get_global_var('func_3992')
var_3994 = relay.var("var_3994", dtype = "uint16", shape = (10, 14, 16))#candidate|3994|(10, 14, 16)|var|uint16
var_3995 = relay.var("var_3995", dtype = "uint16", shape = (10, 14, 16))#candidate|3995|(10, 14, 16)|var|uint16
call_3993 = func_3992_call(var_3994,var_3995,)
output = call_3993
func_3996 = relay.Function([var_3994,var_3995,], output)
mutated_mod['func_3996'] = func_3996
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3589_call = mod.get_global_var('func_3589')
func_3590_call = mutated_mod.get_global_var('func_3590')
call_4003 = relay.TupleGetItem(func_3589_call(), 0)
call_4004 = relay.TupleGetItem(func_3590_call(), 0)
output = call_4003
output2 = call_4004
func_4018 = relay.Function([], output)
mod['func_4018'] = func_4018
mod = relay.transform.InferType()(mod)
output = func_4018()
func_4019 = relay.Function([], output)
mutated_mod['func_4019'] = func_4019
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3171_call = mod.get_global_var('func_3171')
func_3173_call = mutated_mod.get_global_var('func_3173')
call_4038 = func_3171_call()
call_4039 = func_3171_call()
var_4041 = relay.var("var_4041", dtype = "float64", shape = (5, 15, 12))#candidate|4041|(5, 15, 12)|var|float64
bop_4042 = relay.greater(call_4038.astype('bool'), relay.reshape(var_4041.astype('bool'), relay.shape_of(call_4038))) # shape=(5, 15, 12)
bop_4045 = relay.greater(call_4039.astype('bool'), relay.reshape(var_4041.astype('bool'), relay.shape_of(call_4039))) # shape=(5, 15, 12)
func_3748_call = mod.get_global_var('func_3748')
func_3751_call = mutated_mod.get_global_var('func_3751')
var_4047 = relay.var("var_4047", dtype = "float32", shape = (495,))#candidate|4047|(495,)|var|float32
call_4046 = relay.TupleGetItem(func_3748_call(relay.reshape(var_4047.astype('float32'), [495,])), 0)
call_4048 = relay.TupleGetItem(func_3751_call(relay.reshape(var_4047.astype('float32'), [495,])), 0)
func_1071_call = mod.get_global_var('func_1071')
func_1075_call = mutated_mod.get_global_var('func_1075')
const_4053 = relay.const([0.967156,6.275793,-4.622725,9.425723,-7.192627,-5.615127,3.528144,5.887495,5.917603,-5.833633,4.682595,-8.483973,-5.004673,9.121794,1.892364,-2.284997,0.320955,6.880457,-7.759584,-7.591914,-4.701629,-3.690410,-9.139313,1.669706,-8.614525,7.779837,1.770810,-1.645153,9.432584,2.871895,1.164197,-7.508804,6.048336,-2.899268,-8.656971,-2.583344,7.122897,-9.186545,-8.597309,4.857484,2.229403,1.969939,-7.638724,-5.853928,2.149938,5.930224,0.783485,7.941221,8.860072,4.717691,-9.124234,-6.642459,-8.203310,2.249288,-3.669625,2.432497,-4.199787,0.070248,-5.367179,-5.954508,6.233788,-4.429993,4.085036,-7.487247,8.612345,-0.286289,3.546184,-0.942638,3.721482,1.310144,-7.524730,0.740897,0.719348,-1.794476,-6.566158,8.521349,-7.750551,7.606332,0.770269,-3.985610,0.074323,-1.628296,-9.000223,-6.981176,-5.983871,2.143467,2.020232,2.377824,6.303270,-2.926938,4.649305,-5.114959,-3.043336,9.788122,5.431709,-8.742971,7.854132,7.563235,3.852349,9.958352,3.366624,7.496917,-1.392876,5.349207,-3.419996,6.482377,9.960472,9.121770,4.232684,4.549584,-9.062511,9.285488,-5.466300,3.922263,9.182250,-7.658003,-8.951196,1.679550,-8.384888,-9.638608,-5.376296,-1.805683,6.966429,7.966317,1.632332,1.975194,7.135330,5.617377,-8.494062,8.020905,1.412347,-8.725556,7.250129,-3.855176,2.778226,-7.591285,6.339470,4.154387,-6.444381,1.228169,-5.808749,-1.888537,-0.329335,3.500998,-1.780007,-8.134060,-8.560988,9.790213,-0.947102,-9.728305,1.277830,3.528358,8.477977,8.310984,-9.278410,0.289294,-9.378072,-6.265435,7.992755,1.765355,-3.206631,-1.985085,-0.862101,3.786502,9.905710,-0.363566,-1.841613,6.847558,5.115748,-5.296104,-5.586778,-5.267982,5.231017,9.068229,-2.145930,-9.288572,-1.787537,-8.919874,8.022713,0.948620,6.876619,9.291249,6.980457,0.103790,9.753481,-8.343081,-8.458536,-4.633403,8.780511,-9.666213,-8.833310,6.588901,4.135825,-7.993390,7.901040,-7.526615,6.895486,-3.196059,-7.885780,1.739421,0.793548,1.464847,-3.740442,5.508471,1.681760,-0.932987,5.975253,-6.389243,6.480526,4.014560,-6.529346,3.202550,3.188599,3.953374,9.503311,6.020969,-3.856953,-1.013803,0.872803,2.695841,-2.257565,-1.767109,7.859528,-4.853631,3.370353,5.191226,8.691915,-6.218500,-2.847065,1.674285,-9.910327,2.642994,8.137476,-6.249039,5.419473,-9.172666,0.073164,9.868701,3.709266,3.537737,8.737879,2.240337,7.243889,7.364964,2.366991,3.634147,-4.901311,-0.505823,7.211330,-0.774656,-9.998223,-1.376556,4.177845,-7.487444,9.485141,-4.533044,-4.579456,-2.808572,6.646918,-1.011177,-1.058636,-6.898663,-3.108291,-0.390711,3.286147,-2.600964,9.422091,4.404139,3.585936,-4.244202,3.548106,4.018120,-3.586116,1.339871,-1.918572,-6.483962,-6.277380,0.579038,2.017798,-7.670146,-7.972136,1.446670,3.779238,-7.884763,-8.519449,8.942705,2.382624,-6.507101,-9.676972,2.254461,0.239918,9.139177,4.108737,-1.292467,2.203793,3.471955,5.057374,5.315180,-3.763720,8.335640,-7.634997,-1.238915,-6.189360,6.098628,8.821865,3.665425,-6.573641,-3.562457,4.722272,9.166070,9.700989,-7.240767,2.506427,3.154226,9.423510,-2.470319,2.858276,-6.877088,4.914019,4.040267,-8.700656,5.832837,0.932088,-0.406963,-5.544574,2.653653,6.968101,3.097259,-8.174035,-6.931798,6.278642,1.991297,7.344646,-9.620546,-9.321906,0.515480,-5.770895,2.428250,-9.455151,-5.727350,3.467006,-8.177806,2.153985,6.917828,-3.137189,-3.823781,5.829815,7.825621,1.099304,8.290477,5.948186,-9.266277,-9.527840,9.789826,-1.445236,6.447339,-1.542583,-1.720897,3.853020,3.125445,0.570552,-0.349691,3.202875,9.135285,9.739169,-5.243886,-4.462102,2.163364,5.047093,1.046522,-2.996971,1.574731,0.618170,7.548710,-3.937100,-2.756180,-8.040533,-3.573413,-5.185703,-1.294787,-0.178998,-6.609758,9.950833,9.364151,6.768483,-1.454386,-5.969431,-8.781285,7.669114,-6.216796,-8.121564,5.413159,0.661194,-3.273397,-2.641902,-9.812276,-1.076684,8.416327,-6.387625,-0.360354,2.344394,8.069528,-7.458927,8.377226,9.558606,1.155649,0.123660,-2.430031,-8.698528,-3.293629,3.643361,-8.141263,-2.879108,-5.767686,-7.499300,-0.919021,8.118926,5.840169,9.443663,-1.458914,7.285563,-1.385943,-4.498916,7.023471,8.149075,0.864354,-9.149457,-0.033767,6.800454,8.162098,8.495206,-6.947865,-7.698370,5.503230,-6.070636,-5.992747,4.566181,-9.906452,-1.571396,5.138957,-7.028131,-0.070786,-6.084457,6.642259,7.038998,4.429813,-7.349988,-0.472809,-0.653752,-2.678187,2.822480,-0.123092,2.543746,-3.115703,-1.134847,6.601552,0.925798,-5.058775,8.983254,6.319968,-7.685165,6.328462,-2.314619,6.963262,1.059004,-2.811720,4.833263,-8.758913,8.201746,-4.122773,-1.624055,-4.300697,4.212072,4.794702,-1.982068,-6.815194,4.384251,3.427837,4.955457,-7.687593,-0.922843,2.844453,8.266712,-8.589010,-3.516310,2.090568,8.932863,-1.628000,-7.135773,3.818126,0.793465,7.719959,9.681560,-8.861260,-9.199248,-9.625164,6.843942,-5.212296,4.906598,-8.354601,3.156883,-1.604016,6.847470,4.402671,-6.489341,9.429218,-4.040557,-4.982077,0.908641,-0.191537,-1.451132,6.035971], dtype = "float32")#candidate|4053|(512,)|const|float32
var_4054 = relay.var("var_4054", dtype = "float32", shape = (840,))#candidate|4054|(840,)|var|float32
call_4052 = relay.TupleGetItem(func_1071_call(relay.reshape(const_4053.astype('float32'), [8, 16, 4]), relay.reshape(var_4054.astype('float32'), [840,]), relay.reshape(const_4053.astype('uint64'), [8, 16, 4]), ), 0)
call_4055 = relay.TupleGetItem(func_1075_call(relay.reshape(const_4053.astype('float32'), [8, 16, 4]), relay.reshape(var_4054.astype('float32'), [840,]), relay.reshape(const_4053.astype('uint64'), [8, 16, 4]), ), 0)
func_3492_call = mod.get_global_var('func_3492')
func_3495_call = mutated_mod.get_global_var('func_3495')
const_4062 = relay.const([-9,5,4,4,-2,-4,5,2,3,-7,8,-7,-3,1,1,-1,-1,-2,10,2,4,-4,3,10,7,-4,-9,1,4,-9,4,-7,-10,9,-4,-2,9,7,2,-10,9,6,-5,-1,9,-5,-3,7,1,3,-6,-4], dtype = "uint8")#candidate|4062|(52,)|const|uint8
const_4063 = relay.const([[-6,8],[-10,-10],[-8,2],[-8,2],[5,7],[5,1],[8,-4],[-9,-4],[9,10],[-4,-10],[-7,-10],[5,6],[-7,-7],[-2,4],[-6,-4],[7,1],[-9,5],[1,8],[8,-4],[10,-3],[10,9],[10,6],[2,-2],[-8,-4],[6,-2],[5,-7],[-8,5],[1,-4],[8,7],[-7,-4],[2,9],[-3,-9],[-2,-5],[3,-9],[-5,8],[2,10],[-5,10],[9,2],[-3,3],[4,2],[5,3],[1,6],[8,-1],[5,-4],[10,2],[-7,-3],[7,-6],[-10,-7],[6,-10],[5,3],[1,6],[7,4]], dtype = "uint8")#candidate|4063|(52, 2)|const|uint8
call_4061 = func_3492_call(relay.reshape(const_4062.astype('uint8'), [4, 1, 13]), relay.reshape(const_4063.astype('uint8'), [4, 2, 13]), )
call_4064 = func_3492_call(relay.reshape(const_4062.astype('uint8'), [4, 1, 13]), relay.reshape(const_4063.astype('uint8'), [4, 2, 13]), )
const_4073 = relay.const([-6,-5,-3,2,6,-6,-6,-8,6,-7,-3,-7,-5,-5,5,-6,-8,7,-3,-7,-10,-1,8,9,-3,6,-3,6,-1,2,1,-6,-8,-10,-2,10,-10,2,2,-1,-8,-1,-10,-10,8,-9,-9,-7,8,7,-4,5], dtype = "uint8")#candidate|4073|(52,)|const|uint8
bop_4074 = relay.minimum(const_4062.astype('float32'), relay.reshape(const_4073.astype('float32'), relay.shape_of(const_4062))) # shape=(52,)
output = relay.Tuple([bop_4042,call_4046,var_4047,call_4052,const_4053,var_4054,call_4061,const_4063,bop_4074,])
output2 = relay.Tuple([bop_4045,call_4048,var_4047,call_4055,const_4053,var_4054,call_4064,const_4063,bop_4074,])
func_4077 = relay.Function([var_4041,var_4047,var_4054,], output)
mod['func_4077'] = func_4077
mod = relay.transform.InferType()(mod)
mutated_mod['func_4077'] = func_4077
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4077_call = mutated_mod.get_global_var('func_4077')
var_4079 = relay.var("var_4079", dtype = "float64", shape = (5, 15, 12))#candidate|4079|(5, 15, 12)|var|float64
var_4080 = relay.var("var_4080", dtype = "float32", shape = (495,))#candidate|4080|(495,)|var|float32
var_4081 = relay.var("var_4081", dtype = "float32", shape = (840,))#candidate|4081|(840,)|var|float32
call_4078 = func_4077_call(var_4079,var_4080,var_4081,)
output = call_4078
func_4082 = relay.Function([var_4079,var_4080,var_4081,], output)
mutated_mod['func_4082'] = func_4082
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3285_call = mod.get_global_var('func_3285')
func_3287_call = mutated_mod.get_global_var('func_3287')
call_4120 = relay.TupleGetItem(func_3285_call(), 0)
call_4121 = relay.TupleGetItem(func_3287_call(), 0)
var_4129 = relay.var("var_4129", dtype = "float32", shape = (5, 15, 12))#candidate|4129|(5, 15, 12)|var|float32
bop_4130 = relay.minimum(call_4120.astype('float64'), relay.reshape(var_4129.astype('float64'), relay.shape_of(call_4120))) # shape=(5, 15, 12)
bop_4133 = relay.minimum(call_4121.astype('float64'), relay.reshape(var_4129.astype('float64'), relay.shape_of(call_4121))) # shape=(5, 15, 12)
var_4135 = relay.var("var_4135", dtype = "float64", shape = (5, 15, 12))#candidate|4135|(5, 15, 12)|var|float64
bop_4136 = relay.less_equal(bop_4130.astype('bool'), relay.reshape(var_4135.astype('bool'), relay.shape_of(bop_4130))) # shape=(5, 15, 12)
bop_4139 = relay.less_equal(bop_4133.astype('bool'), relay.reshape(var_4135.astype('bool'), relay.shape_of(bop_4133))) # shape=(5, 15, 12)
func_3803_call = mod.get_global_var('func_3803')
func_3808_call = mutated_mod.get_global_var('func_3808')
const_4166 = relay.const([9.133807,-5.201027,8.679695,2.311770,5.277432,0.894013,9.178213,-5.865512,6.377454,-9.560247,6.767872,1.023086,-4.552099,8.998561,-4.056763,7.079384,-3.631006,-3.589329,8.268210,9.355950,-2.776347,-7.810472,-6.482278,-4.564833,6.875437,6.340535,-0.808319,4.447364,-2.433015,-2.236379,-8.198390,1.362261,2.577574,-8.090909,2.576838,1.195539,-5.859852,7.844615,9.820671,-5.280522,-0.121949,4.967175,-9.509353,6.743089,9.510742,-0.806827,9.910844,8.868724,8.733789,8.156884,7.749773,-5.489829,0.050781,0.462828,6.684362,0.451492,3.264596,5.759456,-2.433788,-9.263065,-9.410420,8.165546,-6.352511,3.959045,-5.435352,3.495815,2.418849,2.571172,3.566736,9.243820,-0.209204,9.562688,-5.237227,4.456033,2.797161,-8.090144,-3.551131,-4.672315,-9.050246,-6.258669,-0.098335,0.320635,9.051205,-4.167964,8.246341,-5.570167,7.435321,4.343811,-2.922079,-9.191487,-2.696439,5.363355,-6.092767,-2.023562,9.179611,3.196178,-0.603748,-0.390247,0.586462,-6.704759,-7.475708,-9.603054,-7.227919,9.812893,-1.791482,8.684331,4.254953,-2.292696,-3.007801,-5.655350,1.196909,1.386500,-3.177965,-2.620488,5.343317,-4.921434,9.376723,0.442156,-1.899902,-1.281948,-9.952003,-7.116743,-0.896229,4.027366,5.325507,8.763885,0.744775,-6.854023,-5.827110,2.576935,4.238720,6.076107,-2.124622,7.744458,-8.082788,5.160162,6.093936,-3.762214,-9.158947,-9.613613,6.771398,5.742067,-9.403467,3.343687,-6.436329,-3.254769,-3.460511,-4.452581,-3.096424,-2.630081,0.848373,5.214225,8.953953,-2.983289,5.851549,6.505920,-6.312730,3.981312,-3.139215,8.637791,8.375582,-4.236183,-3.290337,-8.117548,-7.297304,5.346245,5.169243,-4.933859,-1.521798,-2.494619,1.014415,-5.057871,-7.370499,9.860959,-2.973990,4.554727,-1.188175,-7.943539,-9.921098,-9.358574,5.505290,-8.642440,-3.800014,7.087183,-6.740207,9.382215,4.957264,7.196351,7.580218,-7.807956,-0.247114,-7.446510,4.867105,5.296294,7.383037,9.797622,9.988962,4.173703,-4.760996,-4.130991,2.850593,6.835524,5.619273,-7.357610,3.335946,2.141011,6.020418,-8.497562,-6.037896,-4.854204,0.319366,-4.238153,-4.724489,1.357471,-9.622405,2.170826,2.130978,-1.090893,3.207351,9.235564,9.757639,-1.393308,-8.295356,5.424482,-4.321712,9.266420,4.853037,-7.625805,7.648263,2.674111,6.521615,9.945796,4.217657,-0.483275,0.999184,7.262188,-3.240465,3.287233,-0.439878,2.699867,-9.979589,5.164900,-5.625436,6.485999,6.146765,7.215176,8.968596,4.743975,-6.613371,-5.222002,3.487276,-1.190621,5.935910,1.093228,-8.332730,5.273299,3.066217,2.742371,-3.292216,8.464463,6.394701,2.586179,-3.780061,7.945682,-4.303855,-7.170497,4.351754,7.480800,-0.883744,-7.674984,3.671230,2.116617,-0.438130,-7.805473,-7.521286,-4.213318,-5.026538,-0.757765,-8.523707,9.542771,4.174228,9.576027,-1.034854,-0.948148,3.793783,9.808700,-3.692769,0.830730,1.111837,2.043863,2.003674,7.328523,2.048358,-8.215517,8.325831,-2.328179,2.572246,4.752089,-9.021543,-9.352796,7.060582,-6.694466,4.808178,-7.663236,0.068547,-5.133600,-7.421713,-3.302449,0.133596,9.071830,-0.983799,-7.882896,7.551719,3.279850,2.471543,9.394889,-8.720038,-7.086039,0.073324,-5.703798,-5.372689,-7.990522,2.233961,6.138690,9.937889,8.710998,-7.916547,-0.421688,-5.545996,-9.147823,4.020393,-8.526065,0.738350,0.603237,5.927348,-1.003100,-4.902854,-3.373842,2.122091,6.214626,9.334901,2.754231,-3.400407,0.702673,2.362818,-5.592459,-3.393515,-8.252557,8.709472,-6.226270,-2.192541,-6.614423,9.809925,-4.246058,-8.101485,-5.202066,-7.176019,-3.150184,3.851998,4.865263,9.684230,3.940255,-0.622331,8.341052,-4.059648,1.243616,-3.453471,1.380377,-5.844450,2.184301,0.566859,-3.141633,2.199406,-0.701323,4.139000,6.971533,5.343659,-6.503147,7.330391,1.152947,9.624516,-4.415110,8.083670,-4.327605,4.137376,-8.237306,4.931237,-0.125817,8.338674,3.759668,5.336624,2.455471,3.702700,-3.893639,-9.538136,-5.609468,-0.871082,4.139427,0.728851,-4.428605,9.154467,3.981042,7.258364,2.773917,6.904373,3.677612,-1.639090,0.584063,-2.531843,-9.794397,-0.233369,0.934808,0.679369,-8.703142,-6.383590,3.354792,7.146439,-5.621720,-9.442195,-4.291327,-0.287154,-1.975142,-6.643162,-9.993976,-9.058488,3.835929,-6.250397,9.625152,-7.693460,-8.477583,-8.604624,-0.610464,-0.039051,5.302132,3.157327,-1.640948,9.936929,-4.248757,4.964496,6.981404,8.341119,-7.374363,6.938049,2.735299,2.970678,-0.348492,5.739894,9.415005,8.060166,-5.016181,-6.038681,-5.702299,-7.128540,-7.373484,6.749177,0.216971,-4.250858,-3.457873,6.070760,2.815213,6.891112,5.685143,0.950358,7.976663,8.420393,7.171021,-1.414320,0.504050,-6.676833,-1.461481,7.298498,-6.245307,4.006812,4.768558,-9.508364,4.207253,-2.516372,-0.973619,-3.659250,-8.889214,8.611790,5.861240,8.820194,-2.233471,-4.005007,-2.817934,-0.992315,-0.423965,6.466835,1.527228,-8.081953,-5.284696,0.362166,-9.865542,-3.630030], dtype = "float32")#candidate|4166|(495,)|const|float32
const_4167 = relay.const([9,1,-8,-3,-3,-6,7,9,-10,7,-2,-3,-7,6,-9,-4,8,10,-6,3,-5,8,-4,8,-10,9,-5,10,3,-3,2,5,-3,-8,-9,-8,-1,-6,3,-9,10,-6,2,7,3,-10,-9,5,-9,1,-3,2], dtype = "uint8")#candidate|4167|(52,)|const|uint8
const_4168 = relay.const([-8,-2,-1,9,-9,5,-8,8,-3,4,-7,8,-3,-4,4,-3,8,-1,10,-8,3,-3,-4,-3,-7,3,-2,-9,4,9,-5,-10,8,3,5,6,-5,-1,9,-5,8,10,1,-4,7,2,-8,4,-8,-5,-8,-1,10,-3,-3,-7,6,-3,-9,3,4,7,-10,7,9,10,-3,-2,10,-1,-4,6,-6,-9,9,10,-7,-3,-9,4,-4,-7,5,7,-5,-10,9,-8,-6,9,-9,7,9,3,-2,-5,-1,-3,-2,-4,1,5,-2,4], dtype = "uint8")#candidate|4168|(104,)|const|uint8
call_4165 = relay.TupleGetItem(func_3803_call(relay.reshape(const_4166.astype('float32'), [495,]), relay.reshape(const_4167.astype('uint8'), [52,]), relay.reshape(const_4168.astype('uint8'), [104,]), ), 5)
call_4169 = relay.TupleGetItem(func_3808_call(relay.reshape(const_4166.astype('float32'), [495,]), relay.reshape(const_4167.astype('uint8'), [52,]), relay.reshape(const_4168.astype('uint8'), [104,]), ), 5)
func_3171_call = mod.get_global_var('func_3171')
func_3173_call = mutated_mod.get_global_var('func_3173')
call_4204 = func_3171_call()
call_4205 = func_3171_call()
func_3022_call = mod.get_global_var('func_3022')
func_3026_call = mutated_mod.get_global_var('func_3026')
const_4208 = relay.const([-7,4,1,-4,2,5,2,-1,5,-3,-2,1,6,1,1,1,-6,-3,-5,-9,8,6,-7,-10,6,5,-10,5,2,-9,-5,-2,-5,9,4,6,10,-2,8,3,-9,3,-5,-7,-6,1,-5,4,9,-10,9,-7,-8,8,-10,2,-7,9,3,2,-2,-1,-7,-9,-8,9,4,6,4,-8,3,6,-4,4,2,-7,1,1,4,-4,8,-8,1,4,8,-10,3,10,2,5,2,-8,1,-8,-9,7,-8,-2,1,-2,8,-7,-9,-8,-3,-5,-6,-7,-2,4,-9,-3,-8,-4,10,7,10,-1,-2,-2,-2,9,1,5,-3,7,9,-7,-4,5,8,2,-5,9,-1,-2,9,1,9,3,4,-2,-9,-2,-1,-7,-9,7,9,1,8,-3,5,4,1,-6,9,-1,-6,-3,10,-5,6,-2,7,-7,7,1,5,7,-5,2,-10,2,4,4,3,2,3,-6,-7,5,-4,-7,-4,-4,9,10,-9,-7,8,-6,1,2,-9,-4,3,2,8,6,-6,-10,6,-4,2,5,-3,1,-8,9,3,-6,7,-4,9,-8,8,-2,7,7,-9,9,5,7,-5,5,-2,-4,10,3,-6,8,8,-10,8,-4,2,-9,7,2,-2,2,9,10,-4,1,-5,-5,9,-8,3,-3,7,-3,6,6,4,2,4,1,7,9,10,-7,-1,7,-8,10,10,10,1,-6,4,6,-9,7,10,-2,-3,-1,-3,-10,-9,-6,6,-7,-2,9,2,-7,4,-1,-3,5,9,10,-4,-4,-3,-2,-6,5,5,-5,9,9,7,8,-10,-6,8,-2,-6,-7,-7,-7,9,9,6,-10,8,-10,9,5,-10,-10,-6,-3,9,3,-1,6,-2,6,3,-5,-5,-5,1,-4,10,-1,6,-9,6,-2,-2,-8,5,4,-10,-8,4,-9,-5,7,-9,-2,-4,2,4,-8,-2,3,-10,7,8,5,1,8,-9,1,-7,4,5,3,10,6,-10,1,-7,-10,-8,-8,8,-4,5,6,-10,3,-6,3,-2,10,-9,1,-3,-1,-5,9,9,2,-3,-7,-9,-8,-9,-3,-1,4,-7,-6,-6,-1,-9,4,-6,-3,-5,1,3,10,-2,4,7,-5,-2,5,9,-9,-6,6,7,10,2,-5,3,-6,10,2,5,-4,-8,5,6,-6,6,6,-3,-5,-10,-7,-8,9,2,-7,-1,-6,-1,6,6,10,6,-5,-2,4,-3,-6,6,8,9,7,-8,8,-5,-7,-8,4,4,-3,-2,-10,-9,-5,-4,-1,10,-2,10,-8,-4,-7,-3,-8,-10,5,7,-6,-4,9,6,10,9,-4,1,5,6,-10,3,-8,-9,3,-8,2,10,9,-5,-1,10,5,-7,9,-2,-4,6,-8,-3,-1,-1,-3,6,8,3,-6,-5,6,-1,7,7,8,1,10,-6,5,6,8,-1,5,-6,-9,-4,-4,2,-10,-1,4,-4,-6,-7,-8,10,-7,4,7,5,-2,-10,5,10,-3,-4,2,1,-8,10,1,4,3,2,-10,3,-7,10,7,7,-10,-4,7,-2,-4,-3,-4,-3,-6,6,-1,10,4,-7,-10,8,5,4,-9,-7,1,-6,-8,4,3,10,1,-9,9,-3,-2,1,-4,9,3,6,7,-1,-2,-9,-6,-6,-8,-3,3,-8,-8,-2,3,-6,7,-10,-6,9,7,1,-8,10,4,-3,-1,3,9,2,7,6,-1,-10,7,-5,9,8,4,3,1,-6,6,-2,5,7,-3,7,9,-3,1,9,-5,-9,-4,9,-8,-10,4,-3,7,10,1,5,7,6,-7,7,-1,1,9,-3,-4,-5,-6,-7,6,-2,-5,9,-7,9,10,-4,-4,-6,-8,4,-1,-2,7,9,-7,2,-10,-3,6,8,1,6,-10,10,1,-10,3,1,-1,5,3,-9,10,9,5,-1,3,4,10,-1,-8,-5,-5,10,9,2,-5,-5,5,1,3,-8,1,-10,-8,6,-4,-8,7,4,5,10,-9,3,10,3,9,-2,3,-3,-2,6,10,-4,-2,-7,-6,-7,1,-6,5,6,9,4,9,3,-8,7,3,-7,2,1,10,-1,-9,1,4,-8,5,-7,1,4,-8,-9,6,5,-9,-6,-6,9,-3,7,-8,-2,-9,5,-8,-1,-4,7,-6,8,1,-6,8,-10,6,10,-4,-6,3,5,2,10,-4,-6,1,8,7,-7,-9,-7,6,-8,-2,-5,8,6,6,8,5,2,9,8,-4,-10,-3,6,6,2,-10,1,-7,-10,5,4,-1,7,-8,5,-3,-3,-3,8,6,-5,4,-4,5,5,9,3,6,1,9,4,-4,10,9,-7,7,1,2,-4,9,-8,-7,-2,10,-6,1,1,-10,-3,9,4,-5,-7,10,3,-3,10,1,4,5,-10,-2,4,-2,-1,-8,-6,1,2,-7,3,-6,-9,-6,8,-2,10,1,-6,-10,1,3,4,1,5,9,-7,2,-3,8,10,4,-4,5,-6,-10,-4,4,-6,2,-4,-1,9,6,2,7,-6,3,4,3,-4,8,-3,-5,-9,2,1,6,-9,-2,-8,4,-10,5,6,3,-8,-7,5,-2,1,2,1,2,2,-2,4,6,6,7,9,1,3,10,2,-4,10,-4,4,1,-1,6,-9,-9,-4,-7,6,-10,-8,9,-4,2,9,-3,4,-8,-6,-8,9,-10,-4,7,6,1,8,3,-4,-4,-3,-7,10,9,2,-1,-7,-5,7,-10,-9,-7,2,-9,-7,3,-1,-6,-8,8,-6,-2,-9,1,8,9,4,-4,-7,7,9,3,-10,10,-6,7,-7,-5,5,2,-9,1,-8,4,-10,-7,-8,-9,-9,-6,9,-7,2,3,-7,-9,6,2,4,9,-6,3,7,4,-2,3,4,6,-1,1,3,-6,9,5,5,-7,10,-7,-3,3,9,-5,-7,7,1,7,8,-5,5,-10,5,1,9,-2,-7,8,-2,-9,3,4,5,-9,7,10,5,-2,1,-6,1,5,-3,-6,-3,4,2,-1,1,10,6,-2,3,-1,-7,-5,5,6,2,-4,6,2,-6,-5,-4,7,-6,-1,10,1,1,6,7,-5,-4,3,-7,-10,-9,9,1,-1,2,-5,-6,-10,4,2,-9,-10,5,5,-10,4,1,3,9,8,-6,4,9,8,1,7,-8,-3,2,-7,-4,-2,-4,4,8,5,-4,7,-6,-7,6,6,-2,-7,6,7,-4,-2,5,-4,-9,9,9,-7,5,-1,-9,-3,6,5,3,-2,2,-5,-4,-10,-7,6,-8,-2,-8,-2,-2,10,-8,-9,-5,-9,-7,-4,3,-3,4,10,-4,-5,-9,-1,-3,-6,6,-3,8,-9,-6,5,-6,4,6,4,-8,4,5,6,-8,10,-2,4,2,-5,6,-10,6,4,7,6,4,-3,-5,8,3,-7,2,-5,5,-5,-1,3,6,-1,-3,8,-7,10,-10,-5,-8,-10,-6,-5,6,-1,-4,4,2,-2,-2,-6,-1,-3,5,-6,2,3,2,8,9,-2,-4,2,-4,4,-7,7,7,1,-7,4,2,7,9,-1,-5,-1,1,-6,10,-3,10,-4,-9,8,-1,-5,-4,-8,-8,-1,-2,-3,-8,10,-10,-2,2,-9,1,6,2,5,-6,6,10,8,-10,8,3,-5,-2,5,-2,-6,-2,5,4,7,-10,5,-2,5,5,1,1,10,2,-9,8,9,6,3,1,1,4,-3,-8,-10,2,-10,7,8,3,-8,-1,-2,-1,8,-4,-7,-2,7,-1,-2,8,7,1,-9,-1,9,3,8,6,-10,-4,9,9,5,-2,-2,10,-8,-3,7,-1,5,-8,2,8,4,-8,9,10,-7,2,3,-9,4,5,7,10,3,-6,9,6,-7], dtype = "uint8")#candidate|4208|(1470,)|const|uint8
var_4209 = relay.var("var_4209", dtype = "float32", shape = (512,))#candidate|4209|(512,)|var|float32
var_4210 = relay.var("var_4210", dtype = "float32", shape = (840,))#candidate|4210|(840,)|var|float32
call_4207 = relay.TupleGetItem(func_3022_call(relay.reshape(const_4208.astype('uint8'), [14, 15, 7]), relay.reshape(var_4209.astype('float32'), [1, 512]), relay.reshape(var_4210.astype('float32'), [840,]), ), 1)
call_4211 = relay.TupleGetItem(func_3026_call(relay.reshape(const_4208.astype('uint8'), [14, 15, 7]), relay.reshape(var_4209.astype('float32'), [1, 512]), relay.reshape(var_4210.astype('float32'), [840,]), ), 1)
output = relay.Tuple([bop_4136,call_4165,const_4166,const_4167,const_4168,call_4204,call_4207,const_4208,var_4209,var_4210,])
output2 = relay.Tuple([bop_4139,call_4169,const_4166,const_4167,const_4168,call_4205,call_4211,const_4208,var_4209,var_4210,])
func_4212 = relay.Function([var_4129,var_4135,var_4209,var_4210,], output)
mod['func_4212'] = func_4212
mod = relay.transform.InferType()(mod)
var_4213 = relay.var("var_4213", dtype = "float32", shape = (5, 15, 12))#candidate|4213|(5, 15, 12)|var|float32
var_4214 = relay.var("var_4214", dtype = "float64", shape = (5, 15, 12))#candidate|4214|(5, 15, 12)|var|float64
var_4215 = relay.var("var_4215", dtype = "float32", shape = (512,))#candidate|4215|(512,)|var|float32
var_4216 = relay.var("var_4216", dtype = "float32", shape = (840,))#candidate|4216|(840,)|var|float32
output = func_4212(var_4213,var_4214,var_4215,var_4216,)
func_4217 = relay.Function([var_4213,var_4214,var_4215,var_4216,], output)
mutated_mod['func_4217'] = func_4217
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3171_call = mod.get_global_var('func_3171')
func_3173_call = mutated_mod.get_global_var('func_3173')
call_4232 = func_3171_call()
call_4233 = func_3171_call()
func_3249_call = mod.get_global_var('func_3249')
func_3250_call = mutated_mod.get_global_var('func_3250')
call_4236 = func_3249_call()
call_4237 = func_3249_call()
func_4212_call = mod.get_global_var('func_4212')
func_4217_call = mutated_mod.get_global_var('func_4217')
const_4260 = relay.const([2.476206,-7.990734,-5.291439,-6.450291,2.329810,-9.210340,7.860817,-1.860656,-6.317979,3.802016,-8.964500,-6.658968,-5.087599,9.642575,-1.877005,-8.108038,1.098232,2.745103,4.300197,-6.668215,0.132486,-9.851308,-8.467329,-5.228233,-4.335583,4.306916,4.887859,0.483051,7.892642,-8.235524,4.424148,-4.232025,0.521247,-1.985460,1.182920,2.119128,2.493785,9.832105,9.726396,-4.250788,3.974662,-9.386353,-9.349228,-4.515166,-0.899184,5.908820,4.878232,-3.084281,5.235799,-7.799505,6.934650,9.257873,0.562051,3.835691,7.454241,7.128461,7.994227,3.099400,9.436143,-8.336921,-0.276111,1.654182,8.763972,-0.175707,-3.640840,3.540681,9.649844,5.376762,3.522168,9.220830,-9.586469,3.571925,-0.815531,6.852096,-4.461241,4.541695,6.917905,-7.748471,3.654781,8.591797,0.452917,5.427234,-8.314185,-2.632995,4.474472,-0.078197,-8.796455,-6.095492,-8.606818,-0.004224,9.072389,-7.977316,-2.345909,0.486186,1.641851,8.732467,0.556964,7.214819,9.682517,9.741842,3.409026,5.826582,6.437535,-6.616906,0.149568,-3.573577,3.938747,-3.609970,0.774944,6.833278,-0.350091,-0.198425,7.835540,3.528028,8.269101,-6.010234,-2.988758,-0.888950,7.771370,-9.536372,1.848534,3.416658,9.861395,-2.523767,2.058098,6.007710,-3.621290,4.642740,-2.840423,9.398582,8.906020,-2.743778,8.068175,7.212629,-9.771400,7.671273,-4.813482,-1.512921,-1.117872,-5.245705,-2.258861,-6.170146,6.265428,-4.918872,-7.093448,6.750772,2.545582,-9.121232,-0.933394,8.829334,1.987050,-8.936078,5.217221,7.312686,7.480914,1.632540,5.319397,5.681727,6.613319,-4.274629,7.677645,3.887503,-6.463031,1.846516,5.604053,5.777594,1.490854,-0.511754,-4.481662,7.973154,-1.831755,0.042070,-2.098208,-4.423303,-7.515702,6.387464,0.364618,8.610481,-6.868216,-3.529279,7.074439,-2.840467,-1.228505,-6.505610,-5.942305,-5.399019,-5.001224,4.820126,-5.746162,5.028773,-6.770951,-2.041723,5.459195,4.822632,-4.003929,-1.335469,5.036761,5.153749,8.644745,-9.725959,4.411139,-3.384062,-2.770758,-7.838075,-0.779158,-9.982749,-9.387554,-2.557476,-1.468936,-5.748693,0.406713,-5.518669,2.683452,-8.553339,8.496139,5.458374,-2.253341,6.958788,8.934655,3.016106,5.745820,-7.247584,1.228045,6.132981,7.346367,-7.246231,-5.328849,8.086432,-4.687218,5.118705,1.460270,-0.078180,-3.021880,-7.291081,7.556220,3.135624,4.819544,7.576048,-0.310164,-7.762611,-4.249251,7.452140,-8.088696,-1.478933,-3.932112,-1.159594,-3.526960,7.194634,-9.755088,-1.576460,-2.352102,-9.712271,-1.315291,-4.735830,0.587800,-8.388493,0.159750,-4.810771,-8.660891,8.454151,-6.156408,-0.780937,-7.889780,-8.416810,-2.697267,8.960725,-6.191336,-0.710298,3.831844,-5.023493,-3.078152,-1.872217,-2.132810,9.764072,6.585983,8.985222,-8.131575,0.527534,-9.928551,-0.988486,-6.008500,0.505702,0.318294,4.905621,-4.309635,7.370515,-8.353680,-3.685965,5.404359,-2.437159,-1.166049,-0.829551,7.051915,-4.655443,7.378758,-5.238932,-8.672093,5.234323,-1.235079,-6.763704,-8.238593,4.124928,0.665482,1.110755,3.403968,3.037323,0.215059,-4.454161,3.998566,-4.183980,3.305017,6.597805,-7.188869,-4.367451,9.899991,9.644477,-6.160682,0.857797,5.541503,-1.307021,-0.254700,-5.285890,-8.047015,-9.506300,6.778355,-2.082578,-8.919852,-9.387339,-0.145170,3.617213,8.323752,9.174622,3.191082,4.419389,3.764834,2.794876,-3.091229,-2.519549,-4.368390,-1.708029,0.008183,8.654578,-8.599649,3.333431,-3.654707,1.702723,3.725712,8.894940,5.091336,2.964159,3.321053,-8.676709,8.333085,-6.678186,8.567063,6.752095,7.018988,-2.195265,6.754226,4.579542,-2.276142,0.171788,7.744801,-5.077512,-5.635279,-6.467062,-6.431595,3.455613,5.981345,-8.050412,-3.095173,8.212072,-0.029287,-0.110007,1.653754,4.641642,-4.768495,-4.259192,4.934632,-9.202361,-6.590767,4.204000,4.257923,-1.320058,-7.715339,9.699918,9.292190,6.683783,4.535707,4.753892,4.183954,-8.644185,2.645521,4.112562,-3.611247,-9.765505,-1.822522,3.325977,-1.947431,-3.282432,-5.253589,-8.858489,3.002073,8.110243,3.309837,9.965986,1.554982,-7.103126,-7.262604,-8.689809,2.571797,-7.626136,-0.305711,3.981411,1.841642,-0.836586,4.683967,2.764079,-5.857505,7.781075,9.284887,-1.461430,3.349280,-5.152834,-1.049471,-4.321680,4.970887,-4.396399,-7.836114,7.662430,2.660896,-7.390332,-2.362246,2.137169,-6.084953,-8.029160,-0.214242,3.896044,9.556691,0.839035,-6.249755,7.022365,-3.521364,7.817216,3.036614,4.019511,-1.038183,9.887819,2.898795,9.701836,-2.550987,-1.917235,-0.304881,-6.799089,3.455598,-2.374645,3.150951,8.016585,5.944169,-5.351505,4.358645,4.928166,6.618855,-6.394928,-9.989096,7.857993,8.259728,6.166393,9.518774,3.672309,5.770025,-6.779888,8.629001,9.755535,-1.165114,2.303165,6.564488,-9.000364,-7.343688,4.990586,-4.719959,2.398650,-2.834604,-1.165274,-9.962960,-4.977326,0.896104,-2.555246,5.946360,8.926850,0.361761,2.222581,3.594938,-9.010389,2.396392,-6.879777,-6.964743,9.229002,-5.122595,-6.612085,-1.072154,4.538492,8.076742,-2.569477,1.589691,-6.567108,9.809201,7.497807,6.095417,-0.463431,3.934583,0.550295], dtype = "float32")#candidate|4260|(512,)|const|float32
var_4261 = relay.var("var_4261", dtype = "float32", shape = (840,))#candidate|4261|(840,)|var|float32
call_4259 = relay.TupleGetItem(func_4212_call(relay.reshape(call_4232.astype('float32'), [5, 15, 12]), relay.reshape(call_4232.astype('float64'), [5, 15, 12]), relay.reshape(const_4260.astype('float32'), [512,]), relay.reshape(var_4261.astype('float32'), [840,]), ), 7)
call_4262 = relay.TupleGetItem(func_4217_call(relay.reshape(call_4232.astype('float32'), [5, 15, 12]), relay.reshape(call_4232.astype('float64'), [5, 15, 12]), relay.reshape(const_4260.astype('float32'), [512,]), relay.reshape(var_4261.astype('float32'), [840,]), ), 7)
output = relay.Tuple([call_4232,call_4236,call_4259,const_4260,var_4261,])
output2 = relay.Tuple([call_4233,call_4237,call_4262,const_4260,var_4261,])
func_4263 = relay.Function([var_4261,], output)
mod['func_4263'] = func_4263
mod = relay.transform.InferType()(mod)
mutated_mod['func_4263'] = func_4263
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4264 = relay.var("var_4264", dtype = "float32", shape = (840,))#candidate|4264|(840,)|var|float32
func_4263_call = mutated_mod.get_global_var('func_4263')
call_4265 = func_4263_call(var_4264)
output = call_4265
func_4266 = relay.Function([var_4264], output)
mutated_mod['func_4266'] = func_4266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3589_call = mod.get_global_var('func_3589')
func_3590_call = mutated_mod.get_global_var('func_3590')
call_4308 = relay.TupleGetItem(func_3589_call(), 0)
call_4309 = relay.TupleGetItem(func_3590_call(), 0)
output = call_4308
output2 = call_4309
func_4310 = relay.Function([], output)
mod['func_4310'] = func_4310
mod = relay.transform.InferType()(mod)
mutated_mod['func_4310'] = func_4310
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4310_call = mutated_mod.get_global_var('func_4310')
call_4311 = func_4310_call()
output = call_4311
func_4312 = relay.Function([], output)
mutated_mod['func_4312'] = func_4312
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3564_call = mod.get_global_var('func_3564')
func_3565_call = mutated_mod.get_global_var('func_3565')
call_4329 = relay.TupleGetItem(func_3564_call(), 1)
call_4330 = relay.TupleGetItem(func_3565_call(), 1)
uop_4335 = relay.asinh(call_4329.astype('float32')) # shape=(5, 15, 12)
uop_4337 = relay.asinh(call_4330.astype('float32')) # shape=(5, 15, 12)
output = uop_4335
output2 = uop_4337
func_4338 = relay.Function([], output)
mod['func_4338'] = func_4338
mod = relay.transform.InferType()(mod)
output = func_4338()
func_4339 = relay.Function([], output)
mutated_mod['func_4339'] = func_4339
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4338_call = mod.get_global_var('func_4338')
func_4339_call = mutated_mod.get_global_var('func_4339')
call_4349 = func_4338_call()
call_4350 = func_4338_call()
output = relay.Tuple([call_4349,])
output2 = relay.Tuple([call_4350,])
func_4351 = relay.Function([], output)
mod['func_4351'] = func_4351
mod = relay.transform.InferType()(mod)
mutated_mod['func_4351'] = func_4351
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4351_call = mutated_mod.get_global_var('func_4351')
call_4352 = func_4351_call()
output = call_4352
func_4353 = relay.Function([], output)
mutated_mod['func_4353'] = func_4353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4351_call = mod.get_global_var('func_4351')
func_4353_call = mutated_mod.get_global_var('func_4353')
call_4383 = relay.TupleGetItem(func_4351_call(), 0)
call_4384 = relay.TupleGetItem(func_4353_call(), 0)
output = relay.Tuple([call_4383,])
output2 = relay.Tuple([call_4384,])
func_4387 = relay.Function([], output)
mod['func_4387'] = func_4387
mod = relay.transform.InferType()(mod)
mutated_mod['func_4387'] = func_4387
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4387_call = mutated_mod.get_global_var('func_4387')
call_4388 = func_4387_call()
output = call_4388
func_4389 = relay.Function([], output)
mutated_mod['func_4389'] = func_4389
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3589_call = mod.get_global_var('func_3589')
func_3590_call = mutated_mod.get_global_var('func_3590')
call_4400 = relay.TupleGetItem(func_3589_call(), 0)
call_4401 = relay.TupleGetItem(func_3590_call(), 0)
func_4212_call = mod.get_global_var('func_4212')
func_4217_call = mutated_mod.get_global_var('func_4217')
const_4413 = relay.const([-6.458437,-7.268077,6.066271,9.135028,-9.740729,-4.883547,-9.198854,-7.891545,-7.237520,-6.435640,2.084763,-7.873845,-1.238106,7.404006,-2.006097,-3.666677,-3.276205,-9.806637,7.644429,6.563979,5.495429,-4.479308,0.567100,-7.209819,-3.564511,6.294367,9.156449,4.074824,-4.457279,7.435852,3.805770,4.031348,-2.112370,1.732390,-8.640910,5.492565,6.808536,0.698724,1.622688,-7.775998,-5.106664,6.826612,-1.100923,5.661412,5.272034,8.802823,9.784915,1.523077,-0.718587,7.230015,2.013052,-4.218534,-3.241328,3.472686,-2.612919,-2.427168,-7.726567,-2.161629,-5.157840,3.018800,-7.169951,6.919599,7.568631,-1.212750,3.375426,-9.288629,-0.971244,7.108205,-5.083414,-9.857597,7.714865,-0.253381,2.161044,-3.223726,-5.584839,1.593222,-9.330481,-2.899743,2.655333,5.272091,4.910872,1.720713,6.201720,-8.647134,-6.260850,-8.637438,5.296702,6.359552,8.145229,9.368815,5.937278,-8.936111,0.596485,2.750676,3.522560,6.095941,3.344001,5.223726,-7.880958,-4.546411,-6.018259,-1.054957,9.385092,-3.342033,9.353141,6.507200,4.730054,-6.512488,-0.459384,1.539317,-3.225495,-9.511546,-5.263590,-2.466997,-9.529523,8.522174,1.971219,-9.321411,6.012901,1.191867,-4.423428,4.255016,8.493672,-7.222916,6.356976,4.735295,8.235023,6.618532,7.994579,-1.881833,1.136352,1.155226,0.352740,0.948473,-4.962667,0.792864,5.873214,-8.210698,-7.627518,2.517069,7.738370,5.862874,-5.333993,-1.293893,0.419163,7.278117,-3.765153,1.550124,1.788817,-6.578297,-6.054114,-3.255499,-3.480008,-4.062547,-6.586714,-3.183049,-2.247203,-3.076636,2.746289,9.679661,1.448948,0.004148,6.346636,6.313313,8.962602,-7.657519,5.044677,-6.453457,-9.813765,-7.278961,-1.726999,-4.953869,-0.876219,5.857238,3.769155,-0.588486,-3.603316,-0.461387,6.875130,-3.286392,3.410600,-6.125544,4.081065,-5.765405,5.350457,-3.404577,5.774749,-1.799468,7.750843,6.979965,-6.039976,7.699835,2.208608,-7.770257,4.818956,-5.861146,-2.150312,4.756381,6.640593,0.956495,-7.484088,-7.452013,-0.489301,-3.199728,-5.599997,-5.650966,8.714615,2.058553,6.911720,5.457339,-3.937246,5.582516,-4.864637,9.375516,-9.343592,-4.988448,-2.005161,-3.418559,-5.794747,0.519319,7.287043,8.473053,7.388674,5.222762,2.135729,-3.577806,-3.275104,-1.415176,-9.410829,-7.266458,-9.527281,-7.493942,8.861458,7.985969,7.526922,1.562412,-1.892637,6.360421,0.443023,-8.234783,-6.350551,7.619227,-2.644552,7.855057,2.852189,7.561869,0.947327,-2.200224,-9.137860,-3.821799,-1.988715,-5.669837,-3.450078,1.439662,2.750052,-6.681843,-2.566827,-3.871426,6.407416,5.942346,-2.347463,-2.537740,-5.572531,-2.851230,-0.986753,-5.549880,-7.058266,6.203703,7.548136,9.117606,-3.768190,-6.236229,2.308508,8.239852,-9.969136,9.154128,4.271512,-5.265746,-5.165416,3.475864,9.756410,-0.065523,-1.890353,8.571704,-5.076643,-1.726293,-6.479608,4.745731,-6.897043,1.108727,5.049039,0.212854,-7.936581,6.339874,-2.302737,-3.116944,-9.694162,-6.216885,-3.364772,-7.245869,-7.260551,-9.293391,8.961863,-0.191493,-6.629684,0.485491,-9.954312,9.637262,-8.426827,9.107548,5.286912,4.168962,-3.088127,-5.314848,2.339808,9.080122,-2.175772,-6.527893,9.503949,1.256140,-6.085050,-0.224389,4.766913,-2.417975,-2.840487,-2.405740,5.497506,1.538337,9.794927,-4.240155,3.098578,-7.542959,5.958743,2.372857,9.803854,2.007415,1.596790,-3.293945,8.540907,6.511275,7.228553,2.868180,8.458827,-6.745895,-9.762448,1.295999,3.007242,7.161822,-9.217058,7.155683,6.397619,-7.627129,-7.368528,5.336341,7.121196,8.338806,1.681367,9.295183,-8.417164,7.488972,-3.124163,-3.400524,2.360811,4.659635,-3.239879,1.204628,1.374757,2.675451,9.064627,3.120993,8.233260,3.006946,0.065018,3.306936,-1.516612,-3.890280,8.986123,-9.018454,0.679928,-0.493246,1.497196,2.736808,7.809156,-0.325600,-0.337027,3.381795,2.903955,-5.356382,2.648859,-4.075005,-4.651436,5.230475,4.338516,-3.347805,4.199979,-2.634059,3.526318,5.067703,-2.718115,1.313816,5.971802,-4.822670,8.478365,5.426732,-7.840750,-6.264450,-0.004051,-2.174987,-7.113409,-5.053450,-7.354915,-8.283944,5.805221,-7.357488,5.950223,-4.127542,2.748151,1.852603,4.331599,0.851418,-6.992339,-0.005497,2.413230,-9.316427,-5.215709,5.474691,-4.385080,-9.243178,2.217164,4.300416,-1.191955,4.677060,7.236365,-8.064710,7.417881,-8.732222,5.970792,5.484491,-8.604902,-0.761681,-7.928255,6.939389,6.891459,-0.068197,-8.213965,-6.888770,0.480266,-2.490558,-8.418932,3.979183,7.961001,-3.781079,0.649444,8.944671,2.821205,-9.749589,-8.807807,-7.688801,6.731722,-2.427438,7.471907,-6.768734,8.990120,6.701963,5.563105,6.317524,-1.977793,5.436353,6.501165,3.500693,0.175779,1.465440,3.898631,7.108637,-5.939226,3.018578,-3.332149,5.561431,-1.279033,-3.224791,6.637608,-0.392992,3.297520,3.091785,6.184554,5.694367,-7.709904,-9.905442,1.294441,-0.385724,0.228102,9.389887,7.626848,8.481801,8.464439,5.496471,-8.737547,-6.025523,-7.845698,-0.121071,0.265799,-9.550983,-5.797236,7.106837,-6.457641,-6.352302,4.289928,-2.478311,-9.621502,7.054343,2.493565,-3.875903], dtype = "float32")#candidate|4413|(512,)|const|float32
var_4414 = relay.var("var_4414", dtype = "float32", shape = (840,))#candidate|4414|(840,)|var|float32
call_4412 = relay.TupleGetItem(func_4212_call(relay.reshape(call_4400.astype('float32'), [5, 15, 12]), relay.reshape(call_4400.astype('float64'), [5, 15, 12]), relay.reshape(const_4413.astype('float32'), [512,]), relay.reshape(var_4414.astype('float32'), [840,]), ), 2)
call_4415 = relay.TupleGetItem(func_4217_call(relay.reshape(call_4400.astype('float32'), [5, 15, 12]), relay.reshape(call_4400.astype('float64'), [5, 15, 12]), relay.reshape(const_4413.astype('float32'), [512,]), relay.reshape(var_4414.astype('float32'), [840,]), ), 2)
func_3936_call = mod.get_global_var('func_3936')
func_3939_call = mutated_mod.get_global_var('func_3939')
var_4421 = relay.var("var_4421", dtype = "uint8", shape = (52,))#candidate|4421|(52,)|var|uint8
var_4422 = relay.var("var_4422", dtype = "uint8", shape = (104,))#candidate|4422|(104,)|var|uint8
call_4420 = relay.TupleGetItem(func_3936_call(relay.reshape(var_4421.astype('uint8'), [52,]), relay.reshape(var_4422.astype('uint8'), [104,]), ), 2)
call_4423 = relay.TupleGetItem(func_3939_call(relay.reshape(var_4421.astype('uint8'), [52,]), relay.reshape(var_4422.astype('uint8'), [104,]), ), 2)
output = relay.Tuple([call_4400,call_4412,const_4413,var_4414,call_4420,var_4421,var_4422,])
output2 = relay.Tuple([call_4401,call_4415,const_4413,var_4414,call_4423,var_4421,var_4422,])
func_4434 = relay.Function([var_4414,var_4421,var_4422,], output)
mod['func_4434'] = func_4434
mod = relay.transform.InferType()(mod)
mutated_mod['func_4434'] = func_4434
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4434_call = mutated_mod.get_global_var('func_4434')
var_4436 = relay.var("var_4436", dtype = "float32", shape = (840,))#candidate|4436|(840,)|var|float32
var_4437 = relay.var("var_4437", dtype = "uint8", shape = (52,))#candidate|4437|(52,)|var|uint8
var_4438 = relay.var("var_4438", dtype = "uint8", shape = (104,))#candidate|4438|(104,)|var|uint8
call_4435 = func_4434_call(var_4436,var_4437,var_4438,)
output = call_4435
func_4439 = relay.Function([var_4436,var_4437,var_4438,], output)
mutated_mod['func_4439'] = func_4439
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4387_call = mod.get_global_var('func_4387')
func_4389_call = mutated_mod.get_global_var('func_4389')
call_4448 = relay.TupleGetItem(func_4387_call(), 0)
call_4449 = relay.TupleGetItem(func_4389_call(), 0)
var_4482 = relay.var("var_4482", dtype = "float32", shape = (5, 15, 12))#candidate|4482|(5, 15, 12)|var|float32
bop_4483 = relay.maximum(call_4448.astype('int32'), relay.reshape(var_4482.astype('int32'), relay.shape_of(call_4448))) # shape=(5, 15, 12)
bop_4486 = relay.maximum(call_4449.astype('int32'), relay.reshape(var_4482.astype('int32'), relay.shape_of(call_4449))) # shape=(5, 15, 12)
func_4018_call = mod.get_global_var('func_4018')
func_4019_call = mutated_mod.get_global_var('func_4019')
call_4489 = func_4018_call()
call_4490 = func_4018_call()
func_3022_call = mod.get_global_var('func_3022')
func_3026_call = mutated_mod.get_global_var('func_3026')
var_4501 = relay.var("var_4501", dtype = "uint8", shape = (1470,))#candidate|4501|(1470,)|var|uint8
const_4502 = relay.const([-5.210163,-5.905753,-4.288227,9.692423,-0.922798,3.498998,-3.120195,-6.020632,-8.762834,0.352004,-2.605257,3.003960,2.436782,2.019586,-3.107136,0.753328,2.972170,-5.050434,9.315708,4.856182,-9.648828,-4.553102,-6.766509,7.998785,6.384898,2.377872,-1.014190,-3.267611,-7.712632,5.338652,9.951450,2.157620,-7.241665,8.857994,8.587623,9.309167,1.633321,-3.076493,-9.756129,-0.592280,-9.285331,-4.282100,0.181907,-7.028073,-3.617362,-4.730081,1.027496,-7.799421,-4.742220,2.141226,9.792356,4.198912,-2.106278,-7.580837,-5.061369,-6.941459,-5.183884,4.919886,-5.363973,1.221769,5.411216,-7.705537,8.408939,-7.439408,-6.935947,0.571666,-9.361932,-0.961325,-9.303108,-6.597029,-7.430293,-4.275431,1.066856,-8.183034,8.200186,-9.067200,9.513063,8.158876,-5.319374,-5.112165,2.759962,-0.957942,3.749507,-1.155897,0.052167,-0.393235,-0.620087,-2.631749,-7.780123,1.246656,7.378739,2.623762,-5.029845,6.183547,-6.057370,-1.745859,-7.406238,-7.325104,1.741665,7.664551,5.860185,-9.108402,-4.132796,1.984633,7.984689,4.295829,-9.973326,-3.029040,6.467575,4.118967,3.127811,-5.669033,-4.026173,7.579599,8.377313,-9.693654,-0.576768,-9.158779,-6.759008,-9.645875,-8.059068,-6.611414,-7.642679,-5.468879,-1.900459,2.968711,5.924143,3.281336,-9.991866,1.134867,-9.223510,-2.709666,8.549138,1.697626,-0.828369,4.518087,0.710485,-0.929938,-1.406054,-7.492148,-8.112177,0.974162,0.023914,-1.264051,9.584855,8.456907,5.963760,2.994946,0.117188,-6.881494,-5.538481,-9.475989,9.782058,9.274815,2.307146,6.083166,5.531473,6.024605,2.206219,5.691167,-9.449046,-9.406306,-5.634778,-6.059446,4.169984,-8.094633,-7.487031,9.899931,9.543284,-1.264088,-0.687140,-6.330190,-0.893977,-5.148171,1.780930,-9.205588,6.280945,-8.853058,-2.068611,8.286317,2.691651,9.884676,-1.053245,-0.730325,5.313558,9.108710,-8.490061,-2.009233,5.951638,-5.401797,-3.954413,-0.866673,-6.161147,5.164494,3.820933,-4.387311,-6.276346,4.897722,-4.591271,-3.330108,-8.620360,-3.945472,-5.135741,2.031371,2.116028,-6.488657,-7.976985,7.749223,5.504571,-9.997869,7.614416,-2.068547,-2.932775,6.747569,3.990333,2.660615,6.974097,-4.879532,-2.242245,3.139181,3.751615,8.250580,3.712061,-7.173763,0.889910,5.284752,6.589887,9.921161,0.312286,7.652822,-7.089559,-3.539498,-3.072457,3.205338,-6.632052,-1.583484,9.597514,-1.473557,3.033848,2.662061,5.229034,5.677558,-4.849144,-3.489075,4.530968,-9.984931,-5.774668,9.139050,1.105592,6.091542,-9.685903,-0.691023,0.381972,-9.959129,6.682961,-4.096540,-2.220094,-9.392396,-7.851137,4.345579,-3.918147,6.321701,-5.994235,8.449423,-3.784173,-0.033043,-1.451911,-9.473581,0.616949,-0.015882,-5.846549,4.857048,4.547303,-6.510432,-6.728431,8.009500,5.409877,-3.013712,-6.282957,-1.828441,-7.052582,9.004113,5.865310,9.563134,-1.974770,8.030900,-1.119589,6.883873,-8.377089,1.146806,1.595265,3.329814,5.176935,5.131130,4.675393,-4.787248,-1.836698,5.038577,1.686515,-4.362577,-8.380404,0.722100,-4.224223,-5.111841,-2.072837,4.851587,9.865218,-1.477435,-2.231551,-4.434262,7.102032,-1.737122,-0.556918,7.527600,-1.946252,9.243701,-1.839827,4.119955,3.347571,7.018658,8.687828,-9.141687,-6.723773,9.035625,-1.062606,-1.857281,4.100674,2.504895,-5.400760,2.282504,-6.930941,-0.679417,1.522884,0.313311,1.427006,-4.640345,6.973503,8.331421,-7.837437,1.648206,-9.764174,-0.695087,-7.128048,4.099228,2.125157,6.010571,6.898955,-0.029782,5.345870,-1.355355,-6.495143,1.401957,9.195520,3.124400,7.805622,-1.681186,7.811468,3.044447,-4.860971,-5.078561,-5.683286,2.163370,6.903010,-7.082036,7.146376,-5.992650,-4.589747,6.626992,-4.286585,8.029603,6.449290,-6.050948,-2.145609,-9.613256,-9.242879,-4.368070,-7.859321,8.656327,5.720715,-7.117705,-4.987384,8.224141,-2.740706,-9.842232,7.755615,2.490111,2.600229,8.869285,3.604820,-2.369556,1.356041,-0.053644,-8.524833,8.236165,-1.787277,-4.978658,-9.750300,3.003862,-4.947987,-6.781728,4.477672,4.455533,7.764557,-3.337775,-3.413982,-6.462228,-5.380140,-4.800424,-6.164290,-3.086423,2.096895,1.537183,-3.512650,7.605842,-8.501308,8.245792,2.795900,-3.412574,4.714334,1.504323,3.497381,2.699444,6.489485,-3.217189,-5.239599,-4.414937,6.936650,2.171127,-9.475372,1.980281,-0.227069,-9.534897,6.534774,-7.551653,0.397023,-6.062863,-1.086811,-7.206553,7.942266,1.298524,-8.707252,-3.750989,-0.559510,4.650530,-6.817736,6.954470,5.986684,-7.814812,6.798947,-6.812354,-5.383179,7.611594,-3.942787,-0.909549,8.979627,6.457522,6.859265,6.761019,-9.051878,-3.495890,9.013537,7.542654,1.860234,7.344399,2.819924,-1.706704,4.710097,-3.968072,1.584438,5.375491,-9.697714,-7.415092,-4.741859,3.357189,0.113505,7.554085,-4.889311,0.344017,-8.056970,-7.532069,-5.484175,-2.918126,-6.832955,-8.709795,9.920612,-6.398764,-2.491211,-9.162354,6.618629,3.533182,3.766527,6.697170,-9.471845,-2.239941,-1.385197,-3.351676,2.027271,-2.774263,1.833058,2.944141,-0.568061,-5.876205,8.506543,-8.798047,4.677141,6.683589,-0.387132,-4.495904,9.944976,-1.314623,3.209719,2.472786], dtype = "float32")#candidate|4502|(512,)|const|float32
const_4503 = relay.const([-7.890549,4.006098,-0.235265,3.983616,-2.300444,-4.878730,-4.004621,6.600303,-8.022760,7.829157,-4.039424,2.768862,-4.364240,-5.847786,-8.218456,-5.541926,-5.461907,-8.903526,2.306769,-8.329981,8.091323,5.687524,-8.641067,-9.938192,-4.323563,1.268251,4.312823,-0.401607,9.416235,7.714856,-6.974043,-6.049390,-1.958957,6.071988,-8.239254,6.331066,-4.668023,7.509167,0.389219,7.149974,7.425203,-7.185577,-0.063892,-3.025139,8.641868,3.345017,4.125565,2.088661,-9.782096,-3.904927,-9.721886,-8.023269,-7.603687,-4.054591,-4.507155,-6.298328,-9.831941,-6.296462,6.581939,-1.999201,1.610370,-2.895060,4.405317,-2.036098,-2.850678,-4.732097,-6.827050,6.073014,3.537692,9.773202,-7.329614,5.968505,-9.776772,9.282770,3.669160,9.749640,6.878213,7.717771,2.229573,2.890144,-5.670373,-8.663452,-7.318125,-8.057395,7.297653,4.539877,7.836315,-9.927274,5.110145,3.396833,6.259641,4.395273,1.465146,8.435375,-0.025296,-8.967060,3.100614,0.655973,2.583223,9.577598,7.366375,-1.475650,7.641863,9.791143,-3.324729,9.563066,7.431712,-7.320648,-2.159802,2.538822,-8.104672,6.002721,-5.918363,-0.127925,-8.580416,4.810287,-2.673460,-0.682572,-6.718504,-8.336900,0.230867,5.327615,-3.655436,9.947672,2.376170,4.116065,-1.985835,3.658275,-8.935390,-5.245460,1.134977,-6.283658,1.081294,-5.088913,-4.254355,-0.443709,-4.793527,-0.495612,-8.063099,0.266339,-9.759654,5.733743,-4.508595,-6.688488,-2.721223,8.668968,-7.581017,-8.024329,4.059039,8.824760,4.487806,3.107215,3.052871,4.282414,2.312437,-5.026084,6.403464,-8.900347,-0.625254,-6.978785,-5.249016,4.514974,-3.414653,-0.696336,-8.708515,5.244654,-5.478903,8.699495,0.014348,1.235296,-9.062801,-9.373668,5.025618,0.334672,4.195906,6.040651,9.046458,-7.297613,-2.019257,1.346087,2.256059,-9.363916,0.221175,9.262496,-1.834648,2.054804,-7.821748,3.228552,4.707305,-0.038843,-1.633791,-0.006460,-3.876106,1.724707,9.491796,3.475864,-8.823213,-3.151595,5.990506,-2.530073,-0.340125,-8.825823,3.867922,9.468537,-8.981793,-2.329929,8.481731,4.663033,7.061138,-5.296202,8.604005,8.749947,2.621342,-1.477882,-1.758426,0.254135,-7.666470,0.922357,1.023409,-4.573754,-3.202620,-4.340161,2.547715,2.856562,0.028817,-4.161779,1.654095,-2.969776,8.112215,-1.067667,4.632670,3.993659,3.523528,0.581315,0.685705,1.361366,-6.624029,1.568619,8.876636,1.213760,-9.482323,3.829003,7.436770,-5.664465,-3.391871,-8.654285,-0.081611,-9.066836,4.738290,-4.200139,8.541727,-1.968995,-1.034520,-4.286927,7.934935,-1.342931,4.282398,2.062214,1.173032,1.219286,-9.200539,3.989476,0.589720,5.124841,6.647759,2.215528,9.439758,8.285060,2.189987,2.083196,7.318921,-6.180394,0.410555,3.686283,-8.330740,4.196294,7.380336,3.369700,-6.390478,4.433580,3.207557,-4.713935,-9.657344,-1.683984,9.063095,-5.330226,0.934772,7.367883,4.689266,4.598265,-3.870084,-6.292920,5.474246,-5.727978,-2.854120,2.349883,9.669848,-2.791824,4.234151,3.462318,-2.532648,3.073599,1.116389,2.454111,-9.600081,-7.210572,5.829996,-4.842931,-5.021153,-6.448205,-2.058257,-5.558306,2.749087,2.866662,4.445874,-5.339371,3.961207,5.325336,-3.440333,8.982878,1.514664,8.558240,-7.839334,0.372193,9.308241,-3.487494,-3.796629,5.539258,9.480327,-8.286724,9.695355,2.566898,6.288593,0.332334,8.521946,-5.691230,-3.833160,1.467390,0.516372,-0.030744,-8.646993,-7.067703,7.182973,-4.929410,-5.167332,-3.131753,3.244140,-6.014032,-6.352389,1.936702,-9.952311,7.842646,9.417519,-6.638377,2.728921,9.497754,1.496086,-6.510910,7.533615,0.941556,-7.451396,-5.091812,3.552123,-8.028090,-5.248813,8.758782,3.658746,-5.088475,4.636029,2.751927,6.623426,-2.077651,-7.416211,9.591071,-0.891820,0.325601,-7.446862,-0.031485,7.947413,-3.430762,-1.142858,-9.039112,-7.265242,5.598488,0.644056,-9.459643,7.631978,4.408720,-6.759682,-5.489638,-3.996953,4.478625,9.994131,-8.207744,-8.065902,-9.620996,7.422331,-8.735457,4.395443,4.592846,-7.311229,4.099232,2.537221,6.129371,-7.941553,-4.571054,9.556659,6.390862,6.932241,0.927767,-2.274577,1.382872,9.008087,3.509053,8.528460,5.985784,4.193561,0.127046,-0.415733,-6.434330,-5.177206,1.851830,-5.293339,-0.668623,-1.859406,5.333272,-3.989887,-1.999048,-5.894269,-7.751136,9.952435,3.320359,0.343666,0.628729,6.724932,-9.763622,-4.829031,6.768737,-3.368795,-3.509226,-5.691588,-3.913116,-1.009316,-7.410497,-4.515709,-4.132896,-6.426402,-0.922658,0.282813,2.229860,1.641052,-9.170319,1.719002,-8.819459,-6.756379,2.007747,-1.004780,6.081733,-2.390923,3.410011,-8.434697,-8.138618,7.977238,-3.541261,-9.337627,7.399964,7.075853,1.076845,-5.489792,6.177029,3.856540,5.769808,-4.237965,-9.303876,-2.311715,2.527783,-0.435881,8.266157,3.583750,-6.886665,-1.511074,2.534644,7.048688,-5.854926,1.099445,-6.422685,-0.286083,-7.611521,-3.076155,-1.999472,1.492462,-3.365031,9.327532,3.054351,6.473862,6.988449,-2.116691,-3.566997,2.806888,6.102926,-8.458219,6.003450,3.472342,6.448526,7.687006,-6.939439,5.011228,-0.728024,-1.690778,1.393160,7.020694,3.665907,-6.995064,9.226624,7.919806,-7.303011,3.775373,-5.096597,9.363745,-3.627559,1.961600,0.946168,0.123997,-5.185495,-7.713700,-3.877079,-1.728633,5.158775,1.028363,-5.663011,6.747124,-4.078604,3.520660,4.067908,-8.314980,6.625208,-3.191878,-4.981147,-0.467909,8.938717,5.517478,-4.787754,-6.510206,-8.509448,-6.913941,-0.594338,2.386021,-1.912375,8.334911,5.953789,-7.994969,-0.685480,-2.424465,-9.947822,1.957050,6.504999,7.508867,-9.636962,1.944787,6.112425,8.494837,1.991082,-4.682006,9.265097,3.824140,9.889008,1.207649,-5.414823,5.004331,-8.886297,-7.753269,2.106123,4.074093,4.524508,-9.711385,1.553197,-1.573527,-2.941414,-2.592672,0.351957,-1.935419,8.817746,-9.229606,6.671826,0.795621,-7.932837,3.806277,9.231477,7.242489,4.431352,-2.095257,7.419960,7.227706,0.371784,-8.342644,9.897093,-2.459235,-8.321934,-3.768565,-7.686302,-5.803997,-1.446245,-4.357917,-1.900349,-3.296482,9.135095,-4.726315,-5.035896,-6.474247,-1.924940,-9.050377,4.572140,-6.374274,8.771303,-9.447400,-0.172580,-8.065005,-7.364427,8.844697,-9.988843,1.387434,-1.636747,-6.545265,7.345056,-7.803303,9.089196,-3.419396,3.606047,7.774500,2.658082,-1.858419,-6.627103,-8.220548,4.890873,6.106783,-3.749306,6.705972,4.521348,7.305320,-6.207727,-8.848305,-9.422249,0.626227,5.199759,-4.853067,-3.310998,4.082427,8.652372,4.158537,8.887601,-8.473611,1.461962,-0.651514,3.176929,-4.089102,5.983067,-3.214150,0.121147,-3.870069,-4.680875,5.237803,1.576713,5.385863,6.442700,-2.384735,8.445645,-2.164948,-3.517090,8.271294,-4.316242,-8.897800,-4.269068,3.565096,-4.450305,0.835649,-7.953068,9.896235,8.563765,-3.249934,3.066257,6.262438,0.960267,-9.546736,-9.189461,2.126607,7.618295,-2.413724,-8.362846,0.113180,2.855123,3.283077,7.769543,-8.726835,9.526147,1.088022,5.559083,-5.992476,-6.035718,-0.370612,-5.525262,0.693029,4.409735,-5.604108,8.286866,-9.131940,-3.877426,-9.870797,-5.120837,-0.143364,0.784043,8.243968,-0.562929,7.934094,-4.036627,4.953112,-5.247522,-6.160911,-1.529904,8.984159,-0.938716,3.498974,-4.813523,-1.998444,-4.534212,-5.029695,4.256453,-6.373425,9.392052,-6.853790,9.251517,5.927699,1.390452,-6.956404,-8.455045,5.379507,8.577498,8.713898,2.691664,2.445582,-3.494785,0.837362,2.044676,2.877221,-0.319934,-4.014014,1.842575,1.185503,7.755490,-7.211237,6.064996,-6.704535,-2.938784,-0.288383,7.058599,6.512663,-5.920936,9.868342,-5.943426,-9.640672,2.320930,6.390854,-5.395992,0.894830,-4.900971,6.711526,1.971156,-3.793764,6.338876,8.172455,-0.396959,-8.488202,-5.187243,-8.260026,-5.456357,4.854210,2.634192,-2.495185,8.138846,1.815952,-6.438336,9.802026,-1.076830,0.117135,1.002249,7.910361,-4.884417,-5.444115,3.378397,6.753506,3.055219,7.088040,6.324968,2.196881,9.928403,-8.008817,1.037785,-7.157647,-9.701277,-6.441290,-6.702393,4.312093,7.181871,2.516180,6.642958,3.757871,6.203419,9.084540,-4.662213,3.569246,-4.163195,1.561874,-9.069916,7.875572,-8.324292,-0.583920,3.628280,2.756832,5.209235,-3.905422,9.837515,9.135318,-6.861204,-2.737948,7.872202,2.177030,1.305508,-3.846862,-0.412234,-0.701849,5.108929,4.284440,8.037092,6.394481,-3.932902,1.382462,2.089981,-9.639546,4.375092,2.020972,5.699570], dtype = "float32")#candidate|4503|(840,)|const|float32
call_4500 = relay.TupleGetItem(func_3022_call(relay.reshape(var_4501.astype('uint8'), [14, 15, 7]), relay.reshape(const_4502.astype('float32'), [1, 512]), relay.reshape(const_4503.astype('float32'), [840,]), ), 3)
call_4504 = relay.TupleGetItem(func_3026_call(relay.reshape(var_4501.astype('uint8'), [14, 15, 7]), relay.reshape(const_4502.astype('float32'), [1, 512]), relay.reshape(const_4503.astype('float32'), [840,]), ), 3)
func_3992_call = mod.get_global_var('func_3992')
func_3996_call = mutated_mod.get_global_var('func_3996')
var_4507 = relay.var("var_4507", dtype = "uint16", shape = (2240,))#candidate|4507|(2240,)|var|uint16
call_4506 = relay.TupleGetItem(func_3992_call(relay.reshape(var_4507.astype('uint16'), [10, 14, 16]), relay.reshape(var_4507.astype('uint16'), [10, 14, 16]), ), 0)
call_4508 = relay.TupleGetItem(func_3996_call(relay.reshape(var_4507.astype('uint16'), [10, 14, 16]), relay.reshape(var_4507.astype('uint16'), [10, 14, 16]), ), 0)
bop_4509 = relay.not_equal(call_4489.astype('bool'), relay.reshape(bop_4483.astype('bool'), relay.shape_of(call_4489))) # shape=(5, 15, 12)
bop_4512 = relay.not_equal(call_4490.astype('bool'), relay.reshape(bop_4486.astype('bool'), relay.shape_of(call_4490))) # shape=(5, 15, 12)
output = relay.Tuple([call_4500,var_4501,const_4502,const_4503,call_4506,var_4507,bop_4509,])
output2 = relay.Tuple([call_4504,var_4501,const_4502,const_4503,call_4508,var_4507,bop_4512,])
func_4514 = relay.Function([var_4482,var_4501,var_4507,], output)
mod['func_4514'] = func_4514
mod = relay.transform.InferType()(mod)
var_4515 = relay.var("var_4515", dtype = "float32", shape = (5, 15, 12))#candidate|4515|(5, 15, 12)|var|float32
var_4516 = relay.var("var_4516", dtype = "uint8", shape = (1470,))#candidate|4516|(1470,)|var|uint8
var_4517 = relay.var("var_4517", dtype = "uint16", shape = (2240,))#candidate|4517|(2240,)|var|uint16
output = func_4514(var_4515,var_4516,var_4517,)
func_4518 = relay.Function([var_4515,var_4516,var_4517,], output)
mutated_mod['func_4518'] = func_4518
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4528 = relay.var("var_4528", dtype = "float32", shape = (8, 6, 12))#candidate|4528|(8, 6, 12)|var|float32
var_4529 = relay.var("var_4529", dtype = "float32", shape = (8, 6, 12))#candidate|4529|(8, 6, 12)|var|float32
bop_4530 = relay.less(var_4528.astype('bool'), relay.reshape(var_4529.astype('bool'), relay.shape_of(var_4528))) # shape=(8, 6, 12)
output = relay.Tuple([bop_4530,])
output2 = relay.Tuple([bop_4530,])
func_4535 = relay.Function([var_4528,var_4529,], output)
mod['func_4535'] = func_4535
mod = relay.transform.InferType()(mod)
mutated_mod['func_4535'] = func_4535
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4535_call = mutated_mod.get_global_var('func_4535')
var_4537 = relay.var("var_4537", dtype = "float32", shape = (8, 6, 12))#candidate|4537|(8, 6, 12)|var|float32
var_4538 = relay.var("var_4538", dtype = "float32", shape = (8, 6, 12))#candidate|4538|(8, 6, 12)|var|float32
call_4536 = func_4535_call(var_4537,var_4538,)
output = call_4536
func_4539 = relay.Function([var_4537,var_4538,], output)
mutated_mod['func_4539'] = func_4539
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4018_call = mod.get_global_var('func_4018')
func_4019_call = mutated_mod.get_global_var('func_4019')
call_4562 = func_4018_call()
call_4563 = func_4018_call()
output = relay.Tuple([call_4562,])
output2 = relay.Tuple([call_4563,])
func_4567 = relay.Function([], output)
mod['func_4567'] = func_4567
mod = relay.transform.InferType()(mod)
output = func_4567()
func_4568 = relay.Function([], output)
mutated_mod['func_4568'] = func_4568
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3285_call = mod.get_global_var('func_3285')
func_3287_call = mutated_mod.get_global_var('func_3287')
call_4584 = relay.TupleGetItem(func_3285_call(), 0)
call_4585 = relay.TupleGetItem(func_3287_call(), 0)
output = call_4584
output2 = call_4585
func_4606 = relay.Function([], output)
mod['func_4606'] = func_4606
mod = relay.transform.InferType()(mod)
output = func_4606()
func_4607 = relay.Function([], output)
mutated_mod['func_4607'] = func_4607
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4695 = relay.var("var_4695", dtype = "float64", shape = (8, 6, 13))#candidate|4695|(8, 6, 13)|var|float64
var_4696 = relay.var("var_4696", dtype = "float64", shape = (8, 6, 13))#candidate|4696|(8, 6, 13)|var|float64
bop_4697 = relay.less_equal(var_4695.astype('bool'), relay.reshape(var_4696.astype('bool'), relay.shape_of(var_4695))) # shape=(8, 6, 13)
bop_4710 = relay.equal(var_4696.astype('bool'), relay.reshape(var_4695.astype('bool'), relay.shape_of(var_4696))) # shape=(8, 6, 13)
func_3051_call = mod.get_global_var('func_3051')
func_3055_call = mutated_mod.get_global_var('func_3055')
const_4718 = relay.const([-1.563687,-7.138406,8.918763,-1.292902,-1.672979,-1.853628,-6.325531,0.531276,-6.939131,8.133671,5.128825,3.979932,0.730453,0.438337,-2.622111,-8.294810,1.748255,-1.043779,-1.855391,-2.246485,7.717117,-5.504178,6.286200,4.714721,8.741799,4.901134,0.521605,6.154770,-1.018029,7.285149,4.822692,7.406117,-6.075087,3.306073,9.613919,-7.334572,7.209733,-7.684202,-9.192018,-3.093572,4.937163,-7.336499,-0.483716,1.399977,-1.919569,2.084741,-5.690665,-5.857201,-9.050267,-7.515063,6.369606,0.297306,3.696557,-7.877415,6.727021,1.927236,-8.374480,2.507483,0.421694,-7.150013,-0.128017,4.504772,-7.602314,0.925990,-0.339161,-2.566694,-1.621387,-4.073350,-8.672756,0.062976,5.969896,-6.513334,9.969163,-4.580100,-4.483068,-9.658529,2.480088,5.197705,-3.799172,-5.860798,-9.489304,-1.449652,-7.417428,-8.005111,4.440339,-9.434002,-0.224525,3.987046,8.939915,-8.517545,-7.930719,-9.939293,2.289866,6.406584,-5.279412,-0.322994,2.284342,-6.004826,1.396213,-4.766133,-1.451726,3.836005,0.894430,-8.980092,-6.718428,-1.969389,-8.561040,-9.454392,-7.408063,6.098700,-7.651386,-9.413718,-3.015832,9.455246,6.436427,3.192758,9.029311,6.355470,6.495069,9.944117,-9.296252,-7.494779,-8.718627,-3.394329,-4.729764,9.727929,6.768477,-2.347670,-1.975980,1.666024,2.395573,-4.089763,0.138009,2.019631,2.734601,8.677320,-5.233973,-5.688306,-7.921777,-9.238312,-8.308452,0.042910,6.459195,-3.893654,-5.227416,7.038720,-3.353323,-5.922570,6.877307,-8.164701,-4.388976,2.237144,7.379279,6.179756,-3.975665,-7.667647,6.242413,8.468575,-6.485973,1.645373,7.789679,-3.026522,-0.553191,-0.347052,7.550807,-4.769569,-6.213421,-9.930743,-3.733643,2.039373,5.074627,1.035347,-4.019781,7.354981,-4.089504,7.455277,-7.512948,7.167443,-7.459311,-8.201178,-4.542688,2.337493,-6.250161,-0.063117,1.754835,-8.447739,-5.649624,4.236225,-2.456153,4.154133,5.597212,-7.767307,-3.192695,-0.980013,5.256763,-6.682591,-6.948280,-7.947226,-3.945017,6.366767,0.345735,-8.170059,0.868232,-6.927024,3.998126,6.954040,-0.918024,-3.796599,4.654327,3.806920,7.742900,1.560694,0.986140,8.622767,-9.717159,2.789693,-3.099229,4.579191,4.858444,1.930903,5.632405,-8.167697,-2.880615,6.167014,9.417377,0.344263,-2.299110,-4.336583,-2.918309,5.430142,-5.611707,-5.916970,1.911866,6.279184,0.980508,9.849537,8.536870,-4.990936,-1.186709,2.965122,-9.911770,-3.892647,6.454875,-3.288509,-3.111929,0.175951,-9.374510,5.193571,8.204360,0.087737,2.850235,-1.952672,-6.690033,8.856642,-4.147374,-0.715391,3.695808,6.904321,-5.638357,-9.292362,-4.513616,7.913122,-2.445023,-5.068384,3.165129,-4.917050,-3.196065,2.724535,-2.542730,6.979375,-6.348088,5.302534,-0.928140,-7.824468,8.474551,-0.525399,-1.267148,-6.206252,-0.513311,5.284113,-8.646297,1.259039,-1.419866,8.724585,8.848575,5.513552,9.230029,4.127117,6.697952,-6.351481,-6.706198,-7.926444,-6.489565,8.204493,1.893919,4.172552,0.009919,-2.170764,0.128523,-9.694001], dtype = "float32")#candidate|4718|(300,)|const|float32
var_4719 = relay.var("var_4719", dtype = "int16", shape = (50,))#candidate|4719|(50,)|var|int16
call_4717 = relay.TupleGetItem(func_3051_call(relay.reshape(const_4718.astype('float32'), [5, 15, 4]), relay.reshape(var_4719.astype('int16'), [50,]), ), 1)
call_4720 = relay.TupleGetItem(func_3055_call(relay.reshape(const_4718.astype('float32'), [5, 15, 4]), relay.reshape(var_4719.astype('int16'), [50,]), ), 1)
func_779_call = mod.get_global_var('func_779')
func_782_call = mutated_mod.get_global_var('func_782')
var_4722 = relay.var("var_4722", dtype = "int32", shape = (288, 2))#candidate|4722|(288, 2)|var|int32
call_4721 = func_779_call(relay.reshape(var_4722.astype('int32'), [8, 9, 8]))
call_4723 = func_779_call(relay.reshape(var_4722.astype('int32'), [8, 9, 8]))
bop_4726 = relay.minimum(var_4722.astype('int64'), relay.reshape(call_4721.astype('int64'), relay.shape_of(var_4722))) # shape=(288, 2)
bop_4729 = relay.minimum(var_4722.astype('int64'), relay.reshape(call_4723.astype('int64'), relay.shape_of(var_4722))) # shape=(288, 2)
uop_4733 = relay.cos(var_4695.astype('float32')) # shape=(8, 6, 13)
bop_4737 = relay.multiply(uop_4733.astype('int64'), relay.reshape(var_4696.astype('int64'), relay.shape_of(uop_4733))) # shape=(8, 6, 13)
bop_4749 = relay.power(bop_4737.astype('float64'), relay.reshape(bop_4697.astype('float64'), relay.shape_of(bop_4737))) # shape=(8, 6, 13)
output = relay.Tuple([bop_4710,call_4717,const_4718,var_4719,bop_4726,bop_4749,])
output2 = relay.Tuple([bop_4710,call_4720,const_4718,var_4719,bop_4729,bop_4749,])
func_4752 = relay.Function([var_4695,var_4696,var_4719,var_4722,], output)
mod['func_4752'] = func_4752
mod = relay.transform.InferType()(mod)
mutated_mod['func_4752'] = func_4752
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4752_call = mutated_mod.get_global_var('func_4752')
var_4754 = relay.var("var_4754", dtype = "float64", shape = (8, 6, 13))#candidate|4754|(8, 6, 13)|var|float64
var_4755 = relay.var("var_4755", dtype = "float64", shape = (8, 6, 13))#candidate|4755|(8, 6, 13)|var|float64
var_4756 = relay.var("var_4756", dtype = "int16", shape = (50,))#candidate|4756|(50,)|var|int16
var_4757 = relay.var("var_4757", dtype = "int32", shape = (288, 2))#candidate|4757|(288, 2)|var|int32
call_4753 = func_4752_call(var_4754,var_4755,var_4756,var_4757,)
output = call_4753
func_4758 = relay.Function([var_4754,var_4755,var_4756,var_4757,], output)
mutated_mod['func_4758'] = func_4758
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4606_call = mod.get_global_var('func_4606')
func_4607_call = mutated_mod.get_global_var('func_4607')
call_4775 = func_4606_call()
call_4776 = func_4606_call()
func_4338_call = mod.get_global_var('func_4338')
func_4339_call = mutated_mod.get_global_var('func_4339')
call_4777 = func_4338_call()
call_4778 = func_4338_call()
output = relay.Tuple([call_4775,call_4777,])
output2 = relay.Tuple([call_4776,call_4778,])
func_4791 = relay.Function([], output)
mod['func_4791'] = func_4791
mod = relay.transform.InferType()(mod)
mutated_mod['func_4791'] = func_4791
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4791_call = mutated_mod.get_global_var('func_4791')
call_4792 = func_4791_call()
output = call_4792
func_4793 = relay.Function([], output)
mutated_mod['func_4793'] = func_4793
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3589_call = mod.get_global_var('func_3589')
func_3590_call = mutated_mod.get_global_var('func_3590')
call_4811 = relay.TupleGetItem(func_3589_call(), 0)
call_4812 = relay.TupleGetItem(func_3590_call(), 0)
func_3748_call = mod.get_global_var('func_3748')
func_3751_call = mutated_mod.get_global_var('func_3751')
const_4818 = relay.const([3.840549,-3.783003,6.754112,0.080941,-4.582255,7.639081,-2.850573,0.225838,5.543430,3.881243,3.460510,6.743555,3.529154,-1.414286,0.040375,2.312864,-2.303350,8.271189,-2.515818,-3.412838,-1.795587,-9.778732,-5.192449,-2.706706,6.089557,5.522851,-9.013019,-7.804559,5.368524,-9.447072,7.977059,4.014839,-5.472564,-4.862947,-7.083717,1.022338,-6.040734,6.829206,8.450427,-8.922580,8.659035,-3.791254,-9.475154,5.747705,2.780206,-6.508446,-0.871030,-1.095098,7.138771,2.442588,1.271444,-7.439114,-2.897100,-9.631251,5.616751,-1.316044,-3.927312,5.222031,-4.149456,-8.133128,-0.918313,-2.633769,8.390152,2.512271,1.898557,-4.036031,0.440959,7.407345,-4.862706,-2.295760,-6.978034,-0.951130,0.018011,-2.429055,-1.996892,8.101083,8.287801,0.671816,1.209838,5.467276,-5.689932,0.011741,6.821439,2.585321,7.050505,1.585357,8.063439,-0.344897,2.696227,-5.216590,-9.471079,3.474771,7.548770,-2.535781,8.711626,-2.198972,4.139787,-2.496513,-3.656613,-2.551290,8.104309,9.043515,9.016897,1.745474,-8.399182,-7.122462,2.276245,9.819439,1.233901,9.751502,2.687682,-6.622404,-0.472146,3.301641,-8.512064,-1.947876,-7.143698,-4.337767,1.641326,-2.012602,8.680866,-4.403632,-5.980186,-2.347234,6.399038,1.279749,7.813740,4.624981,-7.993980,-9.778034,-6.326452,-6.128540,-4.304041,-3.561719,-1.708092,-2.846622,-7.507461,-1.421499,-4.614050,-4.419746,5.868285,-4.851679,0.012124,-2.603337,5.398734,-7.904832,9.181877,-4.274532,-0.865079,6.213355,6.413935,-4.950083,7.124403,8.466237,7.266691,1.597941,1.816197,2.911702,-7.795072,-8.972396,-0.012485,8.490334,1.668984,-3.588275,5.879208,-0.911751,2.890324,-8.753049,9.465579,-2.176139,2.748377,4.974252,0.990226,5.077921,-7.439747,3.684700,-6.828325,-7.849312,-7.710179,2.310947,5.634749,2.372945,8.703339,4.969370,7.177839,7.592832,3.271771,5.867914,-6.309402,-5.399559,-2.204122,1.028582,4.801538,-7.569113,-7.601263,6.320159,5.746973,-7.919263,-5.375202,6.247999,2.858587,-3.314524,-0.378090,-3.891671,-7.476937,9.726266,-1.276581,6.604745,8.289924,-8.674250,-8.892234,2.514939,-6.219500,-1.062567,6.405785,-6.287516,-1.923319,6.633632,-2.826961,8.760221,3.206200,8.798845,-6.674419,9.156126,-2.034214,1.661814,6.819505,-5.945605,9.314283,-9.307586,-0.723851,6.654290,0.804404,3.291641,-0.472280,-3.374991,-8.994022,-0.158529,-9.036982,-6.207450,6.867935,9.103971,-5.384450,-3.151786,-9.417786,-8.679846,8.115739,-7.941206,-5.205816,-7.901000,-3.453303,-6.394170,-8.745969,0.100124,-5.926923,1.036817,-1.718559,-4.290664,-9.526555,-1.269248,2.191082,9.563938,-0.895907,1.279660,-6.405530,-0.016318,-3.107447,2.395643,4.767255,-1.050299,-3.918999,9.879914,-9.002192,5.054352,-1.018638,-5.243158,-8.645148,-7.755683,7.334127,6.203640,5.391128,-9.953714,4.816051,-3.057436,6.165623,-8.414620,-8.204484,-3.655821,-0.044769,3.200270,5.526731,-4.173694,4.086944,-5.521738,7.033781,-8.781306,2.452583,-0.138309,-5.358061,7.650366,2.778885,7.474760,0.697250,0.864821,2.854908,-1.693348,-6.016454,-3.837133,7.642918,-8.978939,4.151627,6.581112,1.924190,1.942972,-7.243854,1.398652,-6.870774,2.689172,-5.474745,7.519466,6.397848,-5.257177,9.693831,-9.103863,-3.299416,8.655234,9.785195,-3.830306,-1.763103,0.012819,6.653592,6.528479,4.250273,2.095161,8.278383,-1.747440,9.744184,-8.118076,3.746711,1.195282,3.365830,2.375578,-2.275496,5.985560,6.283893,7.585226,-3.342683,2.231829,-0.581030,1.829503,8.367759,-8.342697,6.980223,6.899811,9.975188,-9.222572,8.807150,-4.842759,8.165562,4.504177,-0.927710,8.280721,5.252863,-4.447210,-7.660337,5.381159,8.995114,-0.376677,-6.162985,-6.058794,-4.925987,-3.263733,-4.581284,9.974691,-1.155341,9.767697,-6.767110,0.961331,8.217714,5.747220,-2.362416,8.910302,-0.243202,-2.336529,-8.306215,5.081426,0.035251,-1.140831,-9.955526,9.397962,-8.774687,8.867999,-4.317777,-3.682407,-2.332981,7.278843,-3.293815,1.115991,-2.047911,7.277035,-3.376850,1.836918,-9.585155,9.023214,-0.590859,-4.461579,1.272733,3.807443,-8.182733,8.568762,1.694783,0.467037,-8.666270,-3.221554,-0.273302,8.391822,-9.653021,-3.221402,-0.663774,1.526985,7.170620,-3.978344,4.633184,-6.603209,9.552247,2.099916,-7.512009,5.817656,1.800490,6.453180,6.975798,-2.580771,8.379014,8.015164,-0.629435,-1.979794,-7.499635,6.273037,-0.716525,1.953005,1.084761,-8.325363,-0.234585,-0.836634,-3.826529,2.856723,-7.260120,2.295235,7.194366,-3.095523,-7.506983,4.425324,7.242144,-4.838864,-6.731076,6.693095,-4.339818,6.981722,6.320250,-4.127800,2.895652,-6.625365,2.524528,8.701290,-5.919406,1.204623,2.555158,9.043661,2.275393,-9.653863,7.594327,7.703462,-9.710748,-7.121052,8.830881,3.900165,8.933048,-5.585009,7.198894,0.515454,3.492679,-6.637895,0.824624,5.139670,-6.108824,-8.594014,-4.615618,6.639977,-1.346748,-0.986556,5.685381,-1.368552,3.115510,6.735244,-3.291025], dtype = "float32")#candidate|4818|(495,)|const|float32
call_4817 = relay.TupleGetItem(func_3748_call(relay.reshape(const_4818.astype('float32'), [495,])), 1)
call_4819 = relay.TupleGetItem(func_3751_call(relay.reshape(const_4818.astype('float32'), [495,])), 1)
output = relay.Tuple([call_4811,call_4817,const_4818,])
output2 = relay.Tuple([call_4812,call_4819,const_4818,])
func_4845 = relay.Function([], output)
mod['func_4845'] = func_4845
mod = relay.transform.InferType()(mod)
mutated_mod['func_4845'] = func_4845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4845_call = mutated_mod.get_global_var('func_4845')
call_4846 = func_4845_call()
output = call_4846
func_4847 = relay.Function([], output)
mutated_mod['func_4847'] = func_4847
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4351_call = mod.get_global_var('func_4351')
func_4353_call = mutated_mod.get_global_var('func_4353')
call_4870 = relay.TupleGetItem(func_4351_call(), 0)
call_4871 = relay.TupleGetItem(func_4353_call(), 0)
output = call_4870
output2 = call_4871
func_4890 = relay.Function([], output)
mod['func_4890'] = func_4890
mod = relay.transform.InferType()(mod)
output = func_4890()
func_4891 = relay.Function([], output)
mutated_mod['func_4891'] = func_4891
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3171_call = mod.get_global_var('func_3171')
func_3173_call = mutated_mod.get_global_var('func_3173')
call_4907 = func_3171_call()
call_4908 = func_3171_call()
output = relay.Tuple([call_4907,])
output2 = relay.Tuple([call_4908,])
func_4913 = relay.Function([], output)
mod['func_4913'] = func_4913
mod = relay.transform.InferType()(mod)
output = func_4913()
func_4914 = relay.Function([], output)
mutated_mod['func_4914'] = func_4914
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4018_call = mod.get_global_var('func_4018')
func_4019_call = mutated_mod.get_global_var('func_4019')
call_4953 = func_4018_call()
call_4954 = func_4018_call()
func_4263_call = mod.get_global_var('func_4263')
func_4266_call = mutated_mod.get_global_var('func_4266')
const_4956 = relay.const([5.299770,3.351919,-5.201761,3.239626,9.805729,-7.280299,7.224903,-6.863391,-2.122424,3.391667,0.610136,-5.103853,-0.662620,6.623170,-5.401301,-0.469735,-3.518896,0.646993,2.324238,7.421897,-7.852470,-1.974846,-2.625323,-7.789314,6.247487,-6.801797,-9.600420,0.153989,9.313795,-1.435254,-1.292332,1.106505,-7.329189,-2.095302,8.179416,-0.024098,0.606661,1.737104,-6.783978,5.297001,8.982177,-5.711186,-3.828332,-4.540139,4.448056,0.372681,-8.417846,-7.082787,3.398814,-5.217144,-2.725936,8.654107,1.412092,-7.686784,-7.645069,3.145264,4.676259,4.080328,1.385993,3.396922,-7.198980,9.587721,-6.043747,8.908272,-0.701841,-1.637028,-5.623406,-9.304703,8.871514,5.394293,-9.705384,2.894326,3.041774,-7.754607,5.447647,3.925248,-9.642601,-4.678455,-6.611223,2.806146,6.329390,-0.389683,0.916801,-5.246260,3.825779,-2.170105,-4.595700,4.919916,-8.485765,1.453742,-7.293024,8.851926,4.967176,1.693078,7.402138,-5.748910,-4.348082,-2.021675,5.103953,-5.775057,9.544788,2.016400,4.531410,5.707087,-9.653210,0.197106,8.816459,4.841382,-9.713041,-4.764416,5.171156,-7.113786,0.713741,0.258726,7.661097,6.350910,-6.393911,0.135697,-9.865629,9.303615,6.348371,9.463276,8.527480,6.701170,3.998836,4.404811,-7.639483,-9.850351,9.159438,-5.669710,-1.840959,7.981847,-1.538658,-2.903291,0.714176,6.744016,-0.427892,3.134401,-5.485562,3.103581,-0.702565,-1.720147,-1.380932,9.630930,9.680792,1.053289,4.215929,-9.269975,3.170198,-4.484942,9.661987,1.496126,-2.416043,3.055955,1.463851,-2.949321,-8.548121,-9.505583,-6.013623,-1.014828,2.528305,9.139897,-3.309974,7.965330,-8.122477,-6.265000,8.711141,3.327761,-7.033878,-3.257313,6.071625,8.025221,-9.767605,-1.476523,3.533250,-1.720905,-9.696006,-5.893239,3.670047,-3.162018,1.486683,5.332937,-2.846914,2.479795,-3.432815,-8.732834,-7.432919,9.000870,8.870038,8.004818,-0.972234,-8.797456,5.832670,2.845202,-6.533749,-8.726359,-2.585355,-5.346994,-5.043381,6.120086,-6.831538,-8.124496,4.855892,4.281717,-6.221181,-0.617325,-4.037229,3.363938,7.425827,-7.842415,8.429282,5.008771,5.625839,-6.325581,9.323630,-2.627060,-1.552512,8.633706,-6.125376,-4.887664,0.978353,7.108147,2.043926,-3.902616,2.574414,-5.672824,6.319814,-1.352152,-1.199941,2.679157,-1.721729,2.694021,-6.586176,-7.246746,2.601549,1.222804,9.505694,-9.042620,-0.603135,3.076951,0.127379,-8.248342,-3.489815,8.168338,8.023644,-4.772537,-6.558014,-7.762877,-7.163184,7.165814,-9.481323,9.562522,7.671648,-0.742625,-4.681063,4.588175,-1.289824,-7.203981,-4.626466,1.308237,-4.804182,9.626673,0.827465,-5.414486,4.079507,8.567599,-7.986280,9.674305,-0.386538,2.428030,-0.956504,-6.131658,-0.539016,0.192693,7.105653,9.827611,-6.546151,-1.767849,-9.167526,-7.194647,6.501628,2.580362,-2.256489,2.476056,3.556688,2.408847,-9.724292,-3.286625,-3.677510,1.365591,-9.898342,-3.439535,-3.670244,-5.727534,3.200063,-6.508617,-0.225465,-5.054499,-7.307152,7.968819,1.959515,6.906586,-5.715788,-8.170478,7.753564,-6.791213,-6.872255,8.346396,-2.497156,-2.653435,-4.847960,-9.699458,-2.654223,0.301296,-9.153136,-9.025074,5.580370,0.752045,0.875365,-1.100586,-1.738968,-1.346281,6.937751,5.972105,7.960408,1.809111,-8.757662,-8.848454,9.785677,2.050571,-6.034156,0.822386,-0.909215,-4.228694,-3.159205,-0.330437,0.836082,-0.308408,-0.049925,-9.241491,2.175143,2.826230,8.708391,-9.539143,1.326092,0.131072,-3.739793,1.805126,5.218712,-3.303459,5.803094,-6.242345,-1.986858,6.318102,-8.433112,-4.693465,-6.738664,1.074998,-6.810634,-8.640428,-9.620129,9.994267,-4.261619,1.152618,-6.384370,5.353157,-6.324074,4.788690,-0.885738,-0.283263,-0.488541,-5.757580,-4.171480,3.894424,-0.782193,1.114478,6.254309,1.972203,5.314979,7.763905,-3.426944,5.529625,6.903537,3.196323,-5.093217,-2.886695,9.910913,6.815804,8.372346,-6.658302,-4.411926,-3.075264,-3.798434,8.518367,-7.304149,-2.280659,1.645478,6.833714,-6.851489,1.244421,-1.081608,9.843969,-1.143883,-7.194941,2.333565,7.458856,-4.878585,9.060203,0.259486,-2.767521,-3.747689,9.839199,2.291755,-0.836321,3.915336,-3.744494,8.023114,6.668212,-6.437845,6.972728,-5.917950,7.065365,-1.518802,-3.175216,5.098017,1.885362,9.570640,4.069265,-3.613388,-0.211462,1.009558,7.368453,-6.552533,9.680995,-9.868694,7.916051,6.149159,9.918835,0.258990,-9.495903,6.322859,-4.949532,-6.175746,0.089214,8.991372,-7.514111,-6.560899,-2.709187,7.160948,1.602765,-3.830983,-3.759844,4.099055,-9.368684,3.319901,7.172305,-3.166108,4.882674,5.695207,4.917181,-5.919778,-6.629521,-5.284903,-0.512590,-7.995675,1.293694,-2.234938,-7.838453,-5.278695,-1.581276,9.875601,-2.815722,-7.981023,-0.115852,-0.019713,-2.558100,-4.599564,3.328948,6.376292,-9.899567,8.882342,9.882186,6.921982,6.932267,-8.730587,-8.246759,7.915694,9.738771,-0.539439,8.894097,-1.660048,-1.903619,-1.628890,2.163850,0.739103,7.115335,4.411612,-1.032694,7.120381,-3.973713,0.019312,9.093279,0.170267,-6.418071,3.196223,-0.347645,-8.081809,-0.893131,-9.121954,-0.781215,3.275589,-8.208609,-5.251534,9.462271,-5.517158,3.254161,-1.754730,-6.441864,-5.033863,-3.369425,7.164312,2.651909,6.573633,-4.880933,5.029395,2.896733,8.295689,3.522214,-5.744702,5.358602,1.818663,-4.816049,4.145578,3.891602,-5.841948,2.674683,7.389566,3.500908,-0.787335,-2.616633,-5.912783,-6.272599,-3.877938,-5.179433,8.555745,6.670342,-1.925525,-4.409763,9.876557,7.372995,8.818426,3.899829,8.619252,7.769940,-9.678663,1.904084,4.645094,-7.899705,-8.183369,-2.641236,-6.847971,-9.635459,-6.790431,6.742024,-9.593122,8.896131,8.576769,-6.483428,3.839125,3.908801,-2.401829,-7.849216,-5.224306,1.896040,8.454809,-6.712138,0.762020,9.466607,-9.716639,0.404498,9.983030,-5.440133,8.197484,-6.084935,0.129476,4.525304,-0.333614,5.521283,-7.806886,7.561809,5.046584,-0.673251,-9.129905,-8.980479,-8.860947,-3.915825,-7.930872,-8.854796,5.262105,-7.934171,-5.272390,-7.800124,9.379365,-8.620297,-3.992391,-7.999987,9.005412,4.513382,-9.427616,-0.026772,3.860348,-0.705829,-4.811279,-0.802594,0.795033,-6.629418,-5.395477,9.244501,-1.872249,8.816801,6.329467,-7.830363,-6.819429,1.144113,4.817230,7.674362,-4.636479,-6.300868,5.213228,-3.996057,3.152798,-0.662187,-4.111706,-2.379515,9.542576,1.665270,0.476327,-1.358212,4.729012,-5.333795,3.427281,-9.284321,4.910721,-7.616785,8.691376,-0.405895,9.699423,-0.087305,-7.722553,5.033031,-0.995992,-1.121651,-7.184672,-7.947958,-2.375928,7.791322,-1.566725,0.260972,-2.239884,-8.151096,5.851508,6.465605,-8.900039,-3.649951,-5.523446,-3.604528,-2.563610,-8.623306,2.403302,6.640769,3.433651,-0.978653,-4.351700,4.316062,2.301169,-1.349814,-4.061933,-8.832552,8.941764,4.127333,-6.537407,-2.803881,2.644254,5.024859,4.125297,-3.743649,7.020612,7.462171,6.549423,4.464923,-2.482879,1.211752,0.521274,5.109366,-6.069791,-1.483559,4.896617,5.694873,4.783104,2.859670,6.130795,1.514068,-3.114698,-0.618100,4.103426,9.243518,7.623250,7.803984,-0.558197,1.304314,9.376978,1.645441,2.060372,0.598559,9.505355,0.443935,3.410774,-4.297825,7.775633,8.635243,-8.461090,6.741458,2.794518,-1.290674,8.106685,-0.254898,9.270176,0.638273,-5.825922,8.145345,-9.429087,6.201720,0.367896,0.182219,-6.308243,6.297401,2.852397,0.088579,5.440718,-4.392576,9.271599,-1.625953,-4.472741,0.232279,-0.237972,9.175241,-6.536756,-9.329448,-4.063912,-9.231871,-7.819184,4.393058,-3.549030,-6.689150,-5.165166,0.406534,4.546566,-9.491953,1.655907,9.410540,-7.171397,-2.909146,8.155607,-0.223959,7.793505,-7.557031,-1.108662,1.576791,-1.800792,4.378294,0.935473,2.314331,-7.903109,-5.994717,3.784202,8.566880,-8.206058,-7.242404,0.152835,2.593481,-5.128329,-9.328205,4.330983,4.968233,-2.653453,-6.494070,5.005483,-5.530167,6.169336,-7.771709,-5.785225,-6.696857,9.617276,-4.383478,7.264135,7.612688,-8.769607,3.066892,-3.362279,4.810448,1.053433,-3.365349,1.087978,-5.355608,3.836056,-9.010105,-3.578635,7.478301,8.376217,-1.325813,4.045426,-5.845215,-7.441762,-1.217275,4.432909,0.587476,4.793598,1.884749,-8.492736,-9.823517,-7.641252,-2.282977,9.166095,1.622597,7.280800,-3.237106,4.040860,-0.333997,-3.360329,-9.440037,4.964790,-7.146371,7.029524,7.058375,5.280275,-3.907097,-1.039452,-0.798316,-6.269708,7.133910], dtype = "float32")#candidate|4956|(840,)|const|float32
call_4955 = relay.TupleGetItem(func_4263_call(relay.reshape(const_4956.astype('float32'), [840,])), 2)
call_4957 = relay.TupleGetItem(func_4266_call(relay.reshape(const_4956.astype('float32'), [840,])), 2)
output = relay.Tuple([call_4953,call_4955,const_4956,])
output2 = relay.Tuple([call_4954,call_4957,const_4956,])
func_4960 = relay.Function([], output)
mod['func_4960'] = func_4960
mod = relay.transform.InferType()(mod)
output = func_4960()
func_4961 = relay.Function([], output)
mutated_mod['func_4961'] = func_4961
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4018_call = mod.get_global_var('func_4018')
func_4019_call = mutated_mod.get_global_var('func_4019')
call_5006 = func_4018_call()
call_5007 = func_4018_call()
output = call_5006
output2 = call_5007
func_5031 = relay.Function([], output)
mod['func_5031'] = func_5031
mod = relay.transform.InferType()(mod)
output = func_5031()
func_5032 = relay.Function([], output)
mutated_mod['func_5032'] = func_5032
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5033 = relay.var("var_5033", dtype = "float64", shape = (9, 2, 7))#candidate|5033|(9, 2, 7)|var|float64
var_5034 = relay.var("var_5034", dtype = "float64", shape = (9, 2, 7))#candidate|5034|(9, 2, 7)|var|float64
bop_5035 = relay.mod(var_5033.astype('float64'), relay.reshape(var_5034.astype('float64'), relay.shape_of(var_5033))) # shape=(9, 2, 7)
func_2479_call = mod.get_global_var('func_2479')
func_2482_call = mutated_mod.get_global_var('func_2482')
var_5039 = relay.var("var_5039", dtype = "float32", shape = (495,))#candidate|5039|(495,)|var|float32
call_5038 = func_2479_call(relay.reshape(var_5039.astype('float32'), [11, 9, 5]))
call_5040 = func_2479_call(relay.reshape(var_5039.astype('float32'), [11, 9, 5]))
func_4310_call = mod.get_global_var('func_4310')
func_4312_call = mutated_mod.get_global_var('func_4312')
call_5046 = func_4310_call()
call_5047 = func_4310_call()
output = relay.Tuple([bop_5035,call_5038,var_5039,call_5046,])
output2 = relay.Tuple([bop_5035,call_5040,var_5039,call_5047,])
func_5053 = relay.Function([var_5033,var_5034,var_5039,], output)
mod['func_5053'] = func_5053
mod = relay.transform.InferType()(mod)
mutated_mod['func_5053'] = func_5053
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5053_call = mutated_mod.get_global_var('func_5053')
var_5055 = relay.var("var_5055", dtype = "float64", shape = (9, 2, 7))#candidate|5055|(9, 2, 7)|var|float64
var_5056 = relay.var("var_5056", dtype = "float64", shape = (9, 2, 7))#candidate|5056|(9, 2, 7)|var|float64
var_5057 = relay.var("var_5057", dtype = "float32", shape = (495,))#candidate|5057|(495,)|var|float32
call_5054 = func_5053_call(var_5055,var_5056,var_5057,)
output = call_5054
func_5058 = relay.Function([var_5055,var_5056,var_5057,], output)
mutated_mod['func_5058'] = func_5058
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5079 = relay.const([[[8.534757,0.195093,-4.355160,-1.758532,9.458831,8.596983],[5.245695,1.993347,7.629977,-8.813371,-4.504647,6.859884],[-5.864858,-1.088317,2.301664,5.211185,2.716798,-1.952359],[4.506342,-0.371192,3.573897,-4.932685,2.165163,-5.807673],[-0.040687,6.736257,9.753095,1.179331,6.099274,-0.594391],[7.587045,3.671990,3.967921,-8.499890,7.865488,1.424205],[-8.197983,7.019212,7.308802,3.807953,-5.551639,-1.334479],[4.049032,-6.844861,-9.596734,4.497948,-3.694701,-7.511327],[-2.561032,-7.169112,6.340085,-1.929157,-7.162709,-8.224787]],[[-2.381658,7.372982,-8.652172,-2.610198,2.530987,4.969406],[-5.937787,-2.881770,9.372552,-0.140281,8.321500,8.824086],[-2.656389,9.863460,-1.217725,-2.789623,8.401085,8.713176],[-2.763720,0.531341,-4.194711,4.367625,8.817458,2.237567],[-8.980535,-5.702657,1.231345,0.583612,-5.922472,-5.326650],[-9.098829,0.143191,-6.384376,1.308144,-8.557598,4.602523],[0.643572,0.746761,-8.570949,-3.798577,-6.890486,-2.170266],[-0.642650,2.561812,-5.210904,9.874050,6.587478,-0.591885],[-7.833404,-3.387678,-3.521725,7.688161,-0.457946,-9.447465]],[[-5.064967,8.320585,-8.330580,-6.791034,4.939956,2.838700],[7.814766,-2.613944,8.224410,-7.516752,5.754624,-9.373832],[-0.621707,5.254408,1.532890,3.592003,-3.919331,-2.194783],[4.741065,-0.685331,2.050379,-2.271434,-1.381547,4.024927],[-3.093782,1.867315,-2.677899,5.241679,-4.257611,9.683061],[1.496324,9.567518,7.781519,-0.981617,-5.072896,-4.648084],[-9.048488,-4.292585,2.071887,-4.270223,6.948330,5.182339],[5.224809,8.731726,-9.618702,4.315356,1.225755,2.712481],[6.888429,0.209391,-9.166663,4.751426,2.234632,-7.956056]],[[3.669868,-5.577132,-8.246863,-5.769040,-8.137477,2.091913],[-0.008484,-9.820293,2.130563,-1.618880,9.943293,-2.116283],[5.940756,-7.087391,9.945056,-9.561903,6.835463,-1.659945],[-1.367179,-5.587298,-2.336252,2.855900,-2.347447,-5.915065],[-0.999919,-9.860438,8.430246,0.492184,-7.858993,7.577761],[-3.062476,-8.383035,-1.992460,-0.688947,8.793857,0.240741],[-8.845087,-4.099387,3.805022,1.500327,-0.826898,7.362695],[-5.784602,-9.566138,7.706669,6.697852,2.944380,6.340671],[-4.362729,8.886798,-9.994395,6.289615,3.317492,-8.605065]],[[-7.349892,-8.096947,9.322199,-9.093806,7.140491,3.519387],[-3.452137,-9.120077,-1.338298,3.815744,8.357257,3.495108],[-7.587862,6.465462,-5.296607,-9.873005,2.514751,7.855932],[-6.621151,-6.958727,1.485316,-1.109979,-5.531038,5.940564],[0.474092,4.878455,1.639809,-3.155025,4.052939,-3.787214],[2.960295,6.021050,4.812615,-5.947302,-5.959866,7.062878],[-8.210513,-8.486984,6.039960,2.798366,-5.253040,6.651406],[8.856173,7.776615,3.768875,0.928449,-0.536064,7.848675],[4.822428,-7.288839,4.078594,1.012894,5.217166,-7.172279]],[[-9.806517,3.063297,5.881797,-9.598723,0.343530,3.046519],[8.028104,5.274115,9.112389,-4.444876,-7.327073,8.387667],[-6.158341,0.311630,-6.918542,-7.668206,-9.614978,3.363141],[1.594677,-5.826118,-2.586489,4.329789,-8.136047,4.794452],[-4.023924,5.646036,-1.693322,-0.811389,9.996869,4.977275],[8.638500,-4.877333,8.744500,3.862238,-2.817867,9.690910],[-1.572311,-3.049748,-6.104824,-3.465223,8.594639,0.296352],[-1.968739,5.559866,-0.541177,5.694732,-5.816200,4.880054],[-9.302280,-8.438967,-4.820089,1.396618,1.515493,-8.588174]],[[0.629414,-0.138961,-0.725770,1.855229,3.291006,-5.587487],[3.642254,5.608043,-4.726818,5.449322,-0.351555,8.518174],[-6.231079,3.950962,-6.843717,8.443685,-3.126046,4.965870],[7.617119,-4.425347,1.596206,-1.053898,-3.361566,-5.014598],[-5.816389,4.019629,-3.930009,-4.322744,6.082936,-9.208787],[7.522606,-7.859161,4.993164,-5.623804,-7.530848,0.909986],[8.888440,-4.708205,8.992655,-3.113353,-6.749356,-7.525446],[-8.526979,6.544241,-2.572067,-5.983700,2.150583,-5.848292],[-9.117460,-8.410585,9.919200,-3.691198,6.558267,-8.592361]]], dtype = "float64")#candidate|5079|(7, 9, 6)|const|float64
uop_5080 = relay.cosh(const_5079.astype('float64')) # shape=(7, 9, 6)
output = relay.Tuple([uop_5080,])
output2 = relay.Tuple([uop_5080,])
func_5083 = relay.Function([], output)
mod['func_5083'] = func_5083
mod = relay.transform.InferType()(mod)
output = func_5083()
func_5084 = relay.Function([], output)
mutated_mod['func_5084'] = func_5084
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5106 = relay.var("var_5106", dtype = "float64", shape = (2, 15, 12))#candidate|5106|(2, 15, 12)|var|float64
uop_5107 = relay.asin(var_5106.astype('float64')) # shape=(2, 15, 12)
uop_5118 = relay.asinh(uop_5107.astype('float32')) # shape=(2, 15, 12)
bop_5126 = relay.less_equal(var_5106.astype('bool'), relay.reshape(uop_5107.astype('bool'), relay.shape_of(var_5106))) # shape=(2, 15, 12)
bop_5134 = relay.mod(uop_5118.astype('float32'), relay.reshape(bop_5126.astype('float32'), relay.shape_of(uop_5118))) # shape=(2, 15, 12)
func_4351_call = mod.get_global_var('func_4351')
func_4353_call = mutated_mod.get_global_var('func_4353')
call_5137 = relay.TupleGetItem(func_4351_call(), 0)
call_5138 = relay.TupleGetItem(func_4353_call(), 0)
bop_5140 = relay.floor_mod(uop_5118.astype('float64'), relay.reshape(bop_5134.astype('float64'), relay.shape_of(uop_5118))) # shape=(2, 15, 12)
output = relay.Tuple([call_5137,bop_5140,])
output2 = relay.Tuple([call_5138,bop_5140,])
func_5143 = relay.Function([var_5106,], output)
mod['func_5143'] = func_5143
mod = relay.transform.InferType()(mod)
var_5144 = relay.var("var_5144", dtype = "float64", shape = (2, 15, 12))#candidate|5144|(2, 15, 12)|var|float64
output = func_5143(var_5144)
func_5145 = relay.Function([var_5144], output)
mutated_mod['func_5145'] = func_5145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4890_call = mod.get_global_var('func_4890')
func_4891_call = mutated_mod.get_global_var('func_4891')
call_5154 = func_4890_call()
call_5155 = func_4890_call()
func_5053_call = mod.get_global_var('func_5053')
func_5058_call = mutated_mod.get_global_var('func_5058')
var_5172 = relay.var("var_5172", dtype = "float64", shape = (126,))#candidate|5172|(126,)|var|float64
var_5173 = relay.var("var_5173", dtype = "float32", shape = (495,))#candidate|5173|(495,)|var|float32
call_5171 = relay.TupleGetItem(func_5053_call(relay.reshape(var_5172.astype('float64'), [9, 2, 7]), relay.reshape(var_5172.astype('float64'), [9, 2, 7]), relay.reshape(var_5173.astype('float32'), [495,]), ), 0)
call_5174 = relay.TupleGetItem(func_5058_call(relay.reshape(var_5172.astype('float64'), [9, 2, 7]), relay.reshape(var_5172.astype('float64'), [9, 2, 7]), relay.reshape(var_5173.astype('float32'), [495,]), ), 0)
func_5053_call = mod.get_global_var('func_5053')
func_5058_call = mutated_mod.get_global_var('func_5058')
call_5182 = relay.TupleGetItem(func_5053_call(relay.reshape(var_5172.astype('float64'), [9, 2, 7]), relay.reshape(call_5171.astype('float64'), [9, 2, 7]), relay.reshape(var_5173.astype('float32'), [495,]), ), 3)
call_5183 = relay.TupleGetItem(func_5058_call(relay.reshape(var_5172.astype('float64'), [9, 2, 7]), relay.reshape(call_5171.astype('float64'), [9, 2, 7]), relay.reshape(var_5173.astype('float32'), [495,]), ), 3)
output = relay.Tuple([call_5154,call_5171,var_5172,var_5173,call_5182,])
output2 = relay.Tuple([call_5155,call_5174,var_5172,var_5173,call_5183,])
func_5185 = relay.Function([var_5172,var_5173,], output)
mod['func_5185'] = func_5185
mod = relay.transform.InferType()(mod)
var_5186 = relay.var("var_5186", dtype = "float64", shape = (126,))#candidate|5186|(126,)|var|float64
var_5187 = relay.var("var_5187", dtype = "float32", shape = (495,))#candidate|5187|(495,)|var|float32
output = func_5185(var_5186,var_5187,)
func_5188 = relay.Function([var_5186,var_5187,], output)
mutated_mod['func_5188'] = func_5188
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5193 = relay.var("var_5193", dtype = "uint16", shape = (4, 15, 5))#candidate|5193|(4, 15, 5)|var|uint16
var_5194 = relay.var("var_5194", dtype = "uint16", shape = (4, 15, 5))#candidate|5194|(4, 15, 5)|var|uint16
bop_5195 = relay.maximum(var_5193.astype('uint16'), relay.reshape(var_5194.astype('uint16'), relay.shape_of(var_5193))) # shape=(4, 15, 5)
var_5206 = relay.var("var_5206", dtype = "uint16", shape = (4, 15, 5))#candidate|5206|(4, 15, 5)|var|uint16
bop_5207 = relay.add(var_5194.astype('uint8'), relay.reshape(var_5206.astype('uint8'), relay.shape_of(var_5194))) # shape=(4, 15, 5)
func_4351_call = mod.get_global_var('func_4351')
func_4353_call = mutated_mod.get_global_var('func_4353')
call_5232 = relay.TupleGetItem(func_4351_call(), 0)
call_5233 = relay.TupleGetItem(func_4353_call(), 0)
uop_5238 = relay.sin(bop_5195.astype('float64')) # shape=(4, 15, 5)
func_4018_call = mod.get_global_var('func_4018')
func_4019_call = mutated_mod.get_global_var('func_4019')
call_5253 = func_4018_call()
call_5254 = func_4018_call()
func_1071_call = mod.get_global_var('func_1071')
func_1075_call = mutated_mod.get_global_var('func_1075')
var_5257 = relay.var("var_5257", dtype = "float32", shape = (64, 8))#candidate|5257|(64, 8)|var|float32
var_5258 = relay.var("var_5258", dtype = "float32", shape = (840,))#candidate|5258|(840,)|var|float32
call_5256 = relay.TupleGetItem(func_1071_call(relay.reshape(var_5257.astype('float32'), [8, 16, 4]), relay.reshape(var_5258.astype('float32'), [840,]), relay.reshape(var_5257.astype('uint64'), [8, 16, 4]), ), 0)
call_5259 = relay.TupleGetItem(func_1075_call(relay.reshape(var_5257.astype('float32'), [8, 16, 4]), relay.reshape(var_5258.astype('float32'), [840,]), relay.reshape(var_5257.astype('uint64'), [8, 16, 4]), ), 0)
func_3492_call = mod.get_global_var('func_3492')
func_3495_call = mutated_mod.get_global_var('func_3495')
const_5265 = relay.const([[-7,10],[5,3],[9,-4],[-7,-5],[-3,-8],[-8,-3],[1,8],[9,-5],[-4,-6],[-10,8],[10,-8],[-10,-2],[3,-1],[3,4],[8,-1],[-9,-3],[-1,2],[1,-1],[-2,8],[1,7],[3,5],[-6,9],[-10,-10],[9,1],[-6,1],[1,-8]], dtype = "uint8")#candidate|5265|(26, 2)|const|uint8
var_5266 = relay.var("var_5266", dtype = "uint8", shape = (104,))#candidate|5266|(104,)|var|uint8
call_5264 = func_3492_call(relay.reshape(const_5265.astype('uint8'), [4, 1, 13]), relay.reshape(var_5266.astype('uint8'), [4, 2, 13]), )
call_5267 = func_3492_call(relay.reshape(const_5265.astype('uint8'), [4, 1, 13]), relay.reshape(var_5266.astype('uint8'), [4, 2, 13]), )
func_4514_call = mod.get_global_var('func_4514')
func_4518_call = mutated_mod.get_global_var('func_4518')
var_5271 = relay.var("var_5271", dtype = "uint8", shape = (1470,))#candidate|5271|(1470,)|var|uint8
var_5272 = relay.var("var_5272", dtype = "uint16", shape = (2240,))#candidate|5272|(2240,)|var|uint16
call_5270 = relay.TupleGetItem(func_4514_call(relay.reshape(call_5232.astype('float32'), [5, 15, 12]), relay.reshape(var_5271.astype('uint8'), [1470,]), relay.reshape(var_5272.astype('uint16'), [2240,]), ), 5)
call_5273 = relay.TupleGetItem(func_4518_call(relay.reshape(call_5232.astype('float32'), [5, 15, 12]), relay.reshape(var_5271.astype('uint8'), [1470,]), relay.reshape(var_5272.astype('uint16'), [2240,]), ), 5)
output = relay.Tuple([bop_5207,call_5232,uop_5238,call_5253,call_5256,var_5257,var_5258,call_5264,const_5265,var_5266,call_5270,var_5271,var_5272,])
output2 = relay.Tuple([bop_5207,call_5233,uop_5238,call_5254,call_5259,var_5257,var_5258,call_5267,const_5265,var_5266,call_5273,var_5271,var_5272,])
func_5274 = relay.Function([var_5193,var_5194,var_5206,var_5257,var_5258,var_5266,var_5271,var_5272,], output)
mod['func_5274'] = func_5274
mod = relay.transform.InferType()(mod)
var_5275 = relay.var("var_5275", dtype = "uint16", shape = (4, 15, 5))#candidate|5275|(4, 15, 5)|var|uint16
var_5276 = relay.var("var_5276", dtype = "uint16", shape = (4, 15, 5))#candidate|5276|(4, 15, 5)|var|uint16
var_5277 = relay.var("var_5277", dtype = "uint16", shape = (4, 15, 5))#candidate|5277|(4, 15, 5)|var|uint16
var_5278 = relay.var("var_5278", dtype = "float32", shape = (64, 8))#candidate|5278|(64, 8)|var|float32
var_5279 = relay.var("var_5279", dtype = "float32", shape = (840,))#candidate|5279|(840,)|var|float32
var_5280 = relay.var("var_5280", dtype = "uint8", shape = (104,))#candidate|5280|(104,)|var|uint8
var_5281 = relay.var("var_5281", dtype = "uint8", shape = (1470,))#candidate|5281|(1470,)|var|uint8
var_5282 = relay.var("var_5282", dtype = "uint16", shape = (2240,))#candidate|5282|(2240,)|var|uint16
output = func_5274(var_5275,var_5276,var_5277,var_5278,var_5279,var_5280,var_5281,var_5282,)
func_5283 = relay.Function([var_5275,var_5276,var_5277,var_5278,var_5279,var_5280,var_5281,var_5282,], output)
mutated_mod['func_5283'] = func_5283
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5333 = relay.const([[[-7.930417,8.645158,3.113536,-7.604564,9.072232,7.712994,-6.214688,2.974214,-1.507866,-1.975331,9.994267,4.296627],[0.612054,-0.492272,-4.377125,5.812840,6.692699,-1.289577,-6.819281,3.657043,-3.445952,0.418757,-7.417631,9.153711],[6.391017,8.522873,-7.406483,-7.786406,-9.467044,5.074674,6.898686,3.641258,5.755017,0.303259,-3.649407,0.224538],[4.904319,7.395414,8.470851,-8.119192,-2.506230,9.695160,4.883919,5.081743,-1.051249,-9.207939,9.185190,-7.460046],[2.586412,-4.062408,-4.374704,-7.984959,-3.756738,-6.372939,-3.415111,-4.267748,-1.954469,6.038854,-0.412942,5.402679]],[[7.820993,-4.750780,8.400256,1.503232,-6.477311,-9.021939,7.878172,6.881047,-5.317732,-8.520366,-1.252191,-3.980612],[-7.396606,-5.994078,-7.403486,-5.415698,9.146954,-4.712156,3.410753,-7.802118,8.433398,1.530122,0.989413,-6.242319],[-5.942410,9.941259,-0.686401,8.986139,6.920091,0.870514,-1.712305,-9.397433,-5.100940,-8.657204,-9.843964,2.550241],[-3.664250,7.825660,7.266857,8.194506,-4.896842,5.069231,-6.292257,9.311259,-2.160466,3.838387,-2.943846,2.437928],[-6.954322,8.935436,-9.530687,-5.874569,6.421196,-3.192606,-8.608793,-7.263591,-7.064389,3.415739,-2.642355,4.457042]]], dtype = "float32")#candidate|5333|(2, 5, 12)|const|float32
uop_5334 = relay.atan(const_5333.astype('float32')) # shape=(2, 5, 12)
func_3640_call = mod.get_global_var('func_3640')
func_3641_call = mutated_mod.get_global_var('func_3641')
call_5339 = func_3640_call()
call_5340 = func_3640_call()
bop_5342 = relay.bitwise_or(uop_5334.astype('int32'), relay.reshape(const_5333.astype('int32'), relay.shape_of(uop_5334))) # shape=(2, 5, 12)
output = relay.Tuple([call_5339,bop_5342,])
output2 = relay.Tuple([call_5340,bop_5342,])
func_5348 = relay.Function([], output)
mod['func_5348'] = func_5348
mod = relay.transform.InferType()(mod)
mutated_mod['func_5348'] = func_5348
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5348_call = mutated_mod.get_global_var('func_5348')
call_5349 = func_5348_call()
output = call_5349
func_5350 = relay.Function([], output)
mutated_mod['func_5350'] = func_5350
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3564_call = mod.get_global_var('func_3564')
func_3565_call = mutated_mod.get_global_var('func_3565')
call_5357 = relay.TupleGetItem(func_3564_call(), 2)
call_5358 = relay.TupleGetItem(func_3565_call(), 2)
uop_5363 = relay.asin(call_5357.astype('float32')) # shape=(8, 7, 15)
uop_5365 = relay.asin(call_5358.astype('float32')) # shape=(8, 7, 15)
output = uop_5363
output2 = uop_5365
func_5367 = relay.Function([], output)
mod['func_5367'] = func_5367
mod = relay.transform.InferType()(mod)
mutated_mod['func_5367'] = func_5367
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5367_call = mutated_mod.get_global_var('func_5367')
call_5368 = func_5367_call()
output = call_5368
func_5369 = relay.Function([], output)
mutated_mod['func_5369'] = func_5369
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4845_call = mod.get_global_var('func_4845')
func_4847_call = mutated_mod.get_global_var('func_4847')
call_5426 = relay.TupleGetItem(func_4845_call(), 0)
call_5427 = relay.TupleGetItem(func_4847_call(), 0)
uop_5430 = relay.exp(call_5426.astype('float64')) # shape=(5, 15, 12)
uop_5432 = relay.exp(call_5427.astype('float64')) # shape=(5, 15, 12)
func_1225_call = mod.get_global_var('func_1225')
func_1229_call = mutated_mod.get_global_var('func_1229')
var_5440 = relay.var("var_5440", dtype = "uint32", shape = (2304,))#candidate|5440|(2304,)|var|uint32
call_5439 = relay.TupleGetItem(func_1225_call(relay.reshape(var_5440.astype('uint32'), [9, 16, 16]), relay.reshape(var_5440.astype('uint32'), [9, 16, 16]), ), 0)
call_5441 = relay.TupleGetItem(func_1229_call(relay.reshape(var_5440.astype('uint32'), [9, 16, 16]), relay.reshape(var_5440.astype('uint32'), [9, 16, 16]), ), 0)
var_5465 = relay.var("var_5465", dtype = "float64", shape = (5, 15, 12))#candidate|5465|(5, 15, 12)|var|float64
bop_5466 = relay.bitwise_or(uop_5430.astype('int8'), relay.reshape(var_5465.astype('int8'), relay.shape_of(uop_5430))) # shape=(5, 15, 12)
bop_5469 = relay.bitwise_or(uop_5432.astype('int8'), relay.reshape(var_5465.astype('int8'), relay.shape_of(uop_5432))) # shape=(5, 15, 12)
output = relay.Tuple([call_5439,var_5440,bop_5466,])
output2 = relay.Tuple([call_5441,var_5440,bop_5469,])
func_5476 = relay.Function([var_5440,var_5465,], output)
mod['func_5476'] = func_5476
mod = relay.transform.InferType()(mod)
var_5477 = relay.var("var_5477", dtype = "uint32", shape = (2304,))#candidate|5477|(2304,)|var|uint32
var_5478 = relay.var("var_5478", dtype = "float64", shape = (5, 15, 12))#candidate|5478|(5, 15, 12)|var|float64
output = func_5476(var_5477,var_5478,)
func_5479 = relay.Function([var_5477,var_5478,], output)
mutated_mod['func_5479'] = func_5479
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4018_call = mod.get_global_var('func_4018')
func_4019_call = mutated_mod.get_global_var('func_4019')
call_5512 = func_4018_call()
call_5513 = func_4018_call()
output = relay.Tuple([call_5512,])
output2 = relay.Tuple([call_5513,])
func_5514 = relay.Function([], output)
mod['func_5514'] = func_5514
mod = relay.transform.InferType()(mod)
output = func_5514()
func_5515 = relay.Function([], output)
mutated_mod['func_5515'] = func_5515
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3171_call = mod.get_global_var('func_3171')
func_3173_call = mutated_mod.get_global_var('func_3173')
call_5527 = func_3171_call()
call_5528 = func_3171_call()
output = relay.Tuple([call_5527,])
output2 = relay.Tuple([call_5528,])
func_5536 = relay.Function([], output)
mod['func_5536'] = func_5536
mod = relay.transform.InferType()(mod)
mutated_mod['func_5536'] = func_5536
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5536_call = mutated_mod.get_global_var('func_5536')
call_5537 = func_5536_call()
output = call_5537
func_5538 = relay.Function([], output)
mutated_mod['func_5538'] = func_5538
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4387_call = mod.get_global_var('func_4387')
func_4389_call = mutated_mod.get_global_var('func_4389')
call_5606 = relay.TupleGetItem(func_4387_call(), 0)
call_5607 = relay.TupleGetItem(func_4389_call(), 0)
output = call_5606
output2 = call_5607
func_5611 = relay.Function([], output)
mod['func_5611'] = func_5611
mod = relay.transform.InferType()(mod)
output = func_5611()
func_5612 = relay.Function([], output)
mutated_mod['func_5612'] = func_5612
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3171_call = mod.get_global_var('func_3171')
func_3173_call = mutated_mod.get_global_var('func_3173')
call_5662 = func_3171_call()
call_5663 = func_3171_call()
output = relay.Tuple([call_5662,])
output2 = relay.Tuple([call_5663,])
func_5665 = relay.Function([], output)
mod['func_5665'] = func_5665
mod = relay.transform.InferType()(mod)
mutated_mod['func_5665'] = func_5665
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5665_call = mutated_mod.get_global_var('func_5665')
call_5666 = func_5665_call()
output = call_5666
func_5667 = relay.Function([], output)
mutated_mod['func_5667'] = func_5667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5031_call = mod.get_global_var('func_5031')
func_5032_call = mutated_mod.get_global_var('func_5032')
call_5693 = func_5031_call()
call_5694 = func_5031_call()
func_4514_call = mod.get_global_var('func_4514')
func_4518_call = mutated_mod.get_global_var('func_4518')
var_5704 = relay.var("var_5704", dtype = "uint8", shape = (490, 3))#candidate|5704|(490, 3)|var|uint8
const_5705 = relay.const([[-1],[3],[1],[-7],[4],[2],[-5],[-2],[-4],[3],[5],[-8],[10],[-10],[4],[-7],[2],[-10],[1],[7],[3],[9],[-4],[5],[10],[-5],[-8],[4],[7],[-6],[-5],[-7],[-10],[2],[-4],[-1],[10],[7],[10],[5],[9],[-5],[-3],[6],[-10],[-2],[-5],[3],[-3],[1],[6],[6],[-1],[-2],[-4],[1],[5],[10],[-4],[9],[-1],[10],[-7],[3],[10],[9],[5],[1],[-8],[-9],[10],[-6],[9],[-4],[-4],[-8],[1],[1],[2],[1],[-8],[-7],[-8],[1],[1],[-8],[1],[5],[-2],[2],[9],[1],[9],[-9],[-3],[-3],[1],[-4],[-8],[4],[-4],[-8],[8],[4],[2],[6],[-7],[1],[-6],[-6],[-3],[10],[1],[-2],[8],[8],[-8],[-6],[2],[6],[7],[3],[-8],[9],[-9],[3],[-8],[-5],[-8],[9],[4],[-7],[-6],[9],[-2],[-9],[-9],[-4],[-9],[1],[1],[-1],[8],[7],[-2],[1],[4],[8],[-8],[7],[6],[-10],[8],[-9],[8],[-8],[-5],[-8],[-2],[8],[-3],[-2],[6],[8],[-9],[-5],[-1],[-7],[8],[8],[8],[-5],[-3],[-6],[7],[-1],[-5],[-7],[2],[-5],[10],[-3],[5],[-10],[8],[9],[3],[10],[6],[-1],[2],[-1],[-4],[7],[6],[7],[2],[-7],[-2],[9],[4],[-7],[-3],[-3],[5],[-2],[-7],[-5],[3],[-8],[-6],[7],[5],[-4],[-8],[6],[-3],[8],[-9],[7],[-4],[-10],[-3],[-3],[9],[-7],[6],[-10],[5],[-7],[-6],[-6],[-5],[-7],[7],[6],[-2],[-4],[3],[3],[-9],[-4],[4],[8],[-9],[4],[-8],[-6],[-9],[7],[8],[7],[2],[-7],[1],[7],[-2],[-6],[7],[6],[9],[-3],[4],[-9],[-4],[-9],[10],[6],[-9],[8],[-5],[-9],[6],[-3],[-9],[8],[3],[-4],[3],[-10],[-10],[1],[6],[3],[-2],[-5],[-6],[6],[-2],[-4],[10],[-1],[-5],[1],[-10],[7],[1],[1],[7],[3],[7],[-8],[2],[2],[3],[-7],[9],[-7],[4],[-2],[-1],[6],[9],[7],[3],[7],[8],[2],[1],[4],[-1],[-10],[-10],[3],[-5],[8],[-8],[-7],[-4],[-4],[6],[9],[-9],[4],[5],[6],[10],[6],[-1],[5],[6],[3],[10],[10],[6],[-10],[-5],[6],[10],[-6],[1],[-2],[-5],[2],[7],[-3],[1],[-8],[8],[4],[2],[-8],[-5],[-3],[-8],[1],[-8],[-10],[-1],[-1],[2],[-3],[2],[3],[-9],[-7],[2],[-10],[-2],[1],[1],[-7],[5],[3],[2],[4],[10],[6],[-7],[5],[7],[-7],[-7],[-6],[-9],[1],[9],[2],[-7],[-9],[1],[-4],[1],[4],[-10],[-5],[10],[6],[8],[-8],[-8],[-10],[7],[10],[7],[5],[-5],[8],[1],[-7],[8],[10],[6],[5],[1],[-3],[-4],[-6],[5],[5],[7],[9],[-2],[-9],[8],[6],[8],[3],[-5],[9],[6],[4],[7],[9],[6],[-3],[7],[-5],[10],[2],[10],[3],[7],[3],[8],[9],[-4],[-2],[-3],[-10],[-8],[-3],[6],[3],[-4],[3],[6],[-3],[3],[6],[-7],[-3],[-8],[-9],[-7],[-1],[5],[-9],[-2],[6],[-9],[1],[6],[10],[-1],[1],[1],[-7],[1],[9],[7],[3],[2],[3],[-6],[1],[2],[1],[-7],[9],[7],[-3],[4],[-5],[-8],[-2],[-2],[8],[-9],[-9],[4],[10],[-3],[3],[-4],[-5],[-2],[9],[-2],[10],[-9],[-8],[-9],[9],[9],[-1],[-8],[-8],[4],[1],[6],[8],[8],[-6],[2],[-10],[-10],[3],[5],[5],[10],[9],[-9],[-10],[-10],[10],[9],[-6],[3],[-7],[7],[5],[-8],[-7],[2],[8],[-10],[-3],[6],[1],[-6],[-4],[6],[4],[-3],[4],[10],[9],[2],[4],[-8],[8],[-1],[-4],[-8],[-5],[-5],[-1],[-10],[-2],[-8],[4],[8],[10],[9],[-3],[-6],[2],[6],[4],[-10],[-8],[7],[-8],[6],[1],[6],[6],[9],[5],[-7],[3],[-1],[-1],[-1],[-1],[-4],[-8],[10],[-10],[-7],[2],[4],[-9],[-1],[-1],[3],[2],[-8],[-5],[9],[-2],[6],[-6],[7],[3],[-6],[-9],[-3],[5],[3],[4],[9],[3],[10],[6],[3],[4],[7],[4],[-5],[8],[-3],[2],[-5],[2],[1],[5],[-2],[7],[6],[3],[9],[-7],[-7],[-10],[9],[2],[7],[10],[8],[-2],[-5],[-1],[7],[1],[1],[-3],[1],[-5],[-2],[-1],[-5],[4],[6],[3],[-3],[-5],[2],[-9],[5],[-2],[-6],[-5],[4],[7],[6],[-6],[-10],[2],[4],[10],[-10],[8],[-2],[-3],[-7],[-1],[10],[9],[-7],[10],[4],[-6],[-6],[-8],[6],[10],[4],[10],[-4],[-1],[9],[-3],[-8],[-3],[-1],[-10],[-8],[-9],[5],[-5],[-7],[8],[2],[5],[2],[7],[10],[8],[-2],[-4],[-3],[8],[-1],[6],[-6],[8],[7],[-3],[6],[4],[-6],[7],[1],[-3],[-8],[6],[3],[5],[-2],[-1],[-3],[10],[-5],[-8],[2],[8],[5],[5],[5],[-10],[7],[6],[-1],[4],[-1],[2],[2],[-3],[-8],[1],[-5],[10],[-6],[-7],[-3],[4],[3],[9],[-1],[9],[-6],[6],[-4],[8],[-10],[-2],[7],[6],[-6],[-4],[1],[6],[10],[-10],[-8],[2],[2],[1],[-5],[-10],[7],[-1],[-3],[-6],[3],[8],[10],[8],[1],[2],[10],[3],[-2],[-10],[3],[-3],[1],[5],[-2],[-4],[2],[8],[6],[-1],[-7],[6],[7],[-7],[-4],[-7],[6],[-9],[5],[-2],[-4],[-3],[-8],[10],[9],[1],[-6],[-1],[-4],[3],[7],[7],[1],[2],[-10],[6],[-1],[-10],[-2],[-3],[4],[4],[8],[-3],[6],[-2],[-8],[-8],[-5],[-7],[-7],[8],[-4],[6],[-1],[-4],[10],[-4],[-7],[-3],[-3],[-8],[6],[-9],[8],[-5],[-9],[-2],[-3],[8],[7],[8],[-1],[-8],[-9],[1],[-9],[-2],[7],[-5],[7],[10],[5],[8],[2],[2],[7],[-9],[-4],[7],[1],[7],[7],[3],[9],[8],[10],[-4],[4],[10],[10],[-7],[6],[5],[6],[-5],[-10],[-7],[10],[-10],[9],[-6],[8],[1],[4],[7],[-7],[-10],[2],[-3],[9],[-5],[8],[5],[-3],[-10],[-1],[-1],[-8],[10],[-6],[-3],[3],[6],[-1],[6],[-8],[-7],[3],[6],[-7],[8],[3],[-8],[4],[3],[6],[4],[1],[7],[-10],[-2],[-1],[7],[-2],[-4],[9],[8],[3],[-5],[3],[8],[-5],[-1],[4],[-8],[8],[-3],[10],[-7],[-2],[3],[2],[7],[5],[-2],[-9],[-2],[-1],[-1],[-10],[9],[1],[-8],[-3],[7],[-3],[1],[2],[-1],[-8],[-7],[-3],[3],[1],[-1],[5],[8],[-6],[-8],[9],[-6],[-6],[10],[-3],[-4],[5],[-1],[-10],[4],[-8],[-2],[-7],[-10],[-5],[1],[6],[10],[4],[-1],[-4],[9],[-8],[-8],[5],[-2],[9],[8],[4],[-6],[-8],[5],[-4],[-7],[7],[-5],[-5],[-10],[7],[1],[-2],[-6],[7],[-6],[6],[2],[-10],[-10],[-3],[3],[5],[1],[-4],[-2],[9],[-4],[-8],[-3],[-8],[8],[2],[8],[6],[-6],[-2],[-9],[9],[-8],[-8],[-4],[6],[9],[10],[-9],[-10],[2],[4],[4],[5],[10],[-9],[8],[-6],[-10],[7],[-3],[-6],[4],[-6],[-4],[-9],[-8],[4],[4],[-2],[-9],[-3],[8],[3],[6],[-6],[4],[-5],[5],[3],[-8],[6],[7],[8],[3],[8],[-10],[1],[2],[7],[-8],[9],[4],[2],[5],[-1],[-8],[-1],[-8],[8],[10],[5],[9],[-9],[2],[9],[1],[-1],[1],[-4],[-7],[-1],[1],[1],[10],[3],[7],[9],[4],[7],[6],[-5],[5],[1],[9],[4],[8],[4],[5],[9],[7],[5],[-9],[-2],[-4],[10],[-6],[-6],[3],[6],[-3],[-10],[4],[-2],[-9],[4],[2],[10],[4],[4],[-10],[8],[1],[6],[3],[8],[10],[7],[-1],[-3],[-10],[6],[6],[3],[9],[-10],[4],[-6],[3],[-1],[-2],[10],[-6],[-6],[-8],[7],[5],[9],[-3],[-3],[-4],[3],[2],[4],[-1],[-10],[1],[-7],[-9],[-4],[-3],[4],[-6],[9],[-7],[-2],[-7],[8],[-4],[3],[-7],[-10],[-2],[-7],[-1],[7],[-4],[2],[-6],[-1],[-5],[-4],[8],[2],[-6],[9],[9],[-4],[-6],[4],[-4],[1],[-4],[9],[-4],[-2],[3],[-3],[-8],[3],[1],[9],[-9],[3],[-6],[5],[9],[-9],[9],[-2],[-8],[1],[-2],[10],[-9],[-6],[-5],[10],[-8],[3],[9],[-3],[4],[-1],[1],[3],[10],[1],[-10],[4],[6],[-10],[2],[8],[5],[3],[9],[-4],[9],[-3],[1],[-10],[-2],[4],[3],[-1],[-5],[1],[5],[9],[-1],[5],[10],[3],[5],[2],[4],[8],[4],[-7],[-8],[-8],[-3],[2],[10],[-7],[-6],[3],[2],[-7],[-9],[-4],[2],[8],[1],[-7],[-8],[-4],[5],[9],[9],[-8],[-8],[3],[4],[8],[9],[-6],[-3],[-9],[4],[5],[-10],[-2],[-7],[10],[-7],[-3],[9],[7],[-5],[7],[-9],[7],[1],[-6],[3],[-4],[-10],[-9],[7],[7],[8],[-1],[7],[10],[-4],[-6],[-4],[-5],[-10],[-8],[2],[-7],[10],[1],[3],[-3],[9],[10],[1],[8],[9],[-10],[-8],[5],[-6],[10],[-9],[-10],[10],[10],[3],[-8],[7],[-8],[8],[-6],[1],[-9],[9],[-6],[1],[2],[-2],[-10],[-8],[-8],[4],[-3],[4],[9],[-9],[-2],[-1],[9],[6],[-6],[9],[8],[-4],[6],[9],[-3],[9],[-5],[-1],[-6],[9],[1],[8],[-9],[-5],[-3],[5],[-8],[8],[-1],[5],[3],[3],[-9],[-10],[5],[3],[-1],[-7],[-7],[-7],[5],[-10],[1],[6],[-8],[-7],[6],[-6],[-4],[-10],[-8],[-6],[5],[-9],[-4],[-3],[-8],[-3],[-4],[2],[-1],[-2],[9],[-10],[6],[6],[4],[-3],[5],[-1],[10],[-1],[8],[7],[4],[-1],[-8],[-2],[1],[-2],[3],[-1],[9],[-5],[-7],[5],[-2],[-6],[-2],[-2],[2],[-1],[-8],[-9],[-6],[-6],[-8],[5],[-2],[-4],[-7],[-6],[7],[9],[5],[-6],[-7],[-9],[-10],[4],[9],[5],[8],[7],[-8],[-10],[-1],[-6],[-10],[-6],[6],[-6],[-10],[8],[1],[-8],[-3],[-10],[-10],[-4],[7],[5],[-2],[-4],[8],[1],[-3],[9],[-2],[-5],[-10],[-5],[-3],[7],[-9],[4],[-4],[-2],[2],[3],[10],[-5],[1],[-8],[2],[7],[-6],[6],[-5],[-5],[-3],[10],[9],[-6],[-2],[2],[4],[-4],[-3],[7],[-6],[7],[7],[1],[8],[6],[-4],[1],[-2],[8],[-7],[-5],[10],[-6],[-2],[8],[7],[1],[-1],[-6],[8],[-10],[-10],[-10],[7],[4],[8],[5],[-9],[-9],[-1],[-2],[-4],[-4],[7],[4],[10],[10],[5],[2],[-7],[6],[-8],[-1],[9],[1],[-9],[-2],[-5],[-8],[4],[10],[5],[6],[1],[4],[4],[1],[-2],[-10],[-6],[-4],[-1],[-10],[3],[-1],[-9],[3],[-10],[-6],[8],[-8],[1],[-6],[-4],[3],[-5],[-7],[-1],[5],[2],[-3],[6],[6],[6],[8],[3],[8],[-7],[-4],[-1],[3],[2],[-6],[-4],[9],[8],[10],[7],[-1],[-10],[-8],[-7],[5],[-1],[9],[6],[1],[1],[-4],[-8],[-2],[6],[-10],[7],[-7],[4],[-10],[-2],[-7],[3],[-8],[-7],[8],[-4],[-2],[5],[9],[-5],[4],[2],[-3],[-7],[-9],[7],[3],[-3],[3],[-7],[7],[-3],[-4],[-2],[-10],[1],[1],[5],[10],[-6],[-10],[-7],[6],[-3],[-10],[-10],[-2],[6],[1],[-8],[-5],[5],[2],[1],[-2],[3],[1],[-7],[9],[-8],[8],[6],[8],[7],[-1],[10],[-4],[3],[5],[-10],[-2],[-10],[-4],[-4],[7],[-4],[7],[-7],[3],[6],[-7],[-10],[-1],[8],[9],[-4],[-2],[8],[1],[9],[-3],[3],[4],[-8],[-1],[8],[3],[2],[-3],[2],[8],[-6],[10],[8],[-7],[9],[9],[-3],[1],[-9],[8],[-2],[-7],[4],[5],[-1],[10],[5],[3],[-1],[-10],[2],[2],[4],[9],[-6],[1],[7],[-2],[-8],[-9],[-2],[-8],[10],[10],[-2],[2],[4],[1],[5],[-1],[8],[-9],[-8],[8],[-10],[4],[-7],[-8],[-4],[8],[3],[-3],[-4],[-2],[6],[-2],[-5],[-9],[-3],[-10],[-5],[2],[-9],[-9],[-3],[10],[-7],[-2],[7],[1],[-9],[-8],[-5],[-7],[6],[-9],[4],[-5],[4],[-5],[-10],[-2],[7],[-9],[-9],[-8],[5],[-3],[2],[7],[9],[-1],[9],[-5],[7],[-1],[-4],[6],[-8],[6],[7],[-6],[-9],[-5],[8],[1],[9],[-10],[7],[3],[-3],[2],[9],[9],[-5],[5],[-10],[-8],[-9],[-1],[6],[4],[-5],[4],[-8],[-7],[1],[-10],[-7],[8],[-7],[-8],[3],[7],[-9],[-8],[-4],[10],[5],[-1],[-1],[5],[8],[-10],[8],[9],[-10],[-4],[2],[-4],[-2],[6],[5],[5],[-10],[-4],[-5],[-2],[-6],[-7],[10],[-2],[4],[-7],[7],[-9],[-6],[-7],[1],[-10],[10],[-1],[-2],[-7],[-5],[7],[-2],[-10],[-4],[5],[8],[2],[-9],[2],[1],[-10],[-5],[4],[-3],[-10],[-7],[6],[5],[-8],[-2],[-10],[-4],[-2],[-9],[2],[10],[1],[-4],[5],[-7],[-8],[1],[6],[9],[-4],[-4],[1],[7],[3],[-2],[8],[-1],[-7],[5],[4],[6],[-8],[7],[4],[-5],[-9],[5],[1],[3],[-7],[-10],[-7],[3],[6],[4],[2],[2],[-1],[-2],[-7],[3],[10],[-5],[-9],[-4],[5],[3],[-5],[-4],[6],[10],[1],[6],[3],[7],[8],[5],[8],[-6],[8],[3],[-2],[-3],[-3],[-7],[-6],[7],[-9],[7],[4],[1],[4],[8],[5],[10],[4],[5],[2],[-4],[-7],[-5],[7],[10],[4],[7],[1],[-10],[5],[-10],[-3],[-2],[-4],[4],[6],[-10],[-6],[6],[7],[-9],[-3],[-1],[-8],[3],[10],[-4],[2],[10],[4],[1],[-10],[3],[-7],[1],[-6],[5],[9],[-8],[-6],[10],[4],[8],[9],[-3],[10],[3],[8],[7],[-6],[7],[9],[1],[-7],[-6],[-10],[10],[-2],[2],[-4],[6],[-1],[-5],[-6],[2],[1],[4],[-3],[-7],[-6],[5],[1],[1],[-4],[5],[-10],[-4],[-10],[9],[3],[10],[3],[3],[2],[4],[5],[5],[-5],[-1],[1],[-6],[9],[-1],[-1],[6],[2],[-8],[-1],[10],[-3],[1],[-6],[-5],[-7],[9],[-2],[-9],[9],[9],[2],[3],[-3],[-8],[-2],[-8],[-5],[-2],[-9],[1],[3],[4],[-8],[-6],[4],[-4],[3],[2],[-10],[10],[9],[6],[9],[4],[-7],[2],[6],[7],[10],[1],[-1],[2],[-4],[-9],[5],[6],[-9],[9],[-2],[-4],[9],[-1],[3]], dtype = "uint16")#candidate|5705|(2240, 1)|const|uint16
call_5703 = relay.TupleGetItem(func_4514_call(relay.reshape(call_5693.astype('float32'), [5, 15, 12]), relay.reshape(var_5704.astype('uint8'), [1470,]), relay.reshape(const_5705.astype('uint16'), [2240,]), ), 1)
call_5706 = relay.TupleGetItem(func_4518_call(relay.reshape(call_5693.astype('float32'), [5, 15, 12]), relay.reshape(var_5704.astype('uint8'), [1470,]), relay.reshape(const_5705.astype('uint16'), [2240,]), ), 1)
func_2823_call = mod.get_global_var('func_2823')
func_2827_call = mutated_mod.get_global_var('func_2827')
const_5712 = relay.const([[8],[-4],[-5],[7],[6],[-4],[-3],[8],[-5],[-8],[7],[-3],[-3],[8],[7],[-6],[-9],[4],[-5],[-3],[2],[-1],[2],[-10],[8],[-9],[3],[-10],[3],[10],[-4],[-6],[5],[7],[2],[2],[7],[-8],[3],[-7],[-5],[-7],[-10],[-7],[-5],[-4],[-3],[3],[2],[-9]], dtype = "int16")#candidate|5712|(50, 1)|const|int16
var_5713 = relay.var("var_5713", dtype = "float32", shape = (840,))#candidate|5713|(840,)|var|float32
call_5711 = relay.TupleGetItem(func_2823_call(relay.reshape(const_5712.astype('int16'), [10, 1, 5]), relay.reshape(var_5713.astype('float32'), [840,]), ), 0)
call_5714 = relay.TupleGetItem(func_2827_call(relay.reshape(const_5712.astype('int16'), [10, 1, 5]), relay.reshape(var_5713.astype('float32'), [840,]), ), 0)
uop_5731 = relay.erf(var_5704.astype('float32')) # shape=(490, 3)
bop_5741 = relay.bitwise_or(const_5705.astype('int8'), call_5711.astype('int8')) # shape=(10, 2240, 5)
bop_5744 = relay.bitwise_or(const_5705.astype('int8'), call_5714.astype('int8')) # shape=(10, 2240, 5)
var_5750 = relay.var("var_5750", dtype = "float32", shape = (490, 3))#candidate|5750|(490, 3)|var|float32
bop_5751 = relay.subtract(uop_5731.astype('float32'), relay.reshape(var_5750.astype('float32'), relay.shape_of(uop_5731))) # shape=(490, 3)
var_5754 = relay.var("var_5754", dtype = "float32", shape = (490, 3))#candidate|5754|(490, 3)|var|float32
bop_5755 = relay.bitwise_and(uop_5731.astype('int32'), relay.reshape(var_5754.astype('int32'), relay.shape_of(uop_5731))) # shape=(490, 3)
output = relay.Tuple([call_5693,call_5703,const_5712,var_5713,bop_5741,bop_5751,bop_5755,])
output2 = relay.Tuple([call_5694,call_5706,const_5712,var_5713,bop_5744,bop_5751,bop_5755,])
func_5766 = relay.Function([var_5704,var_5713,var_5750,var_5754,], output)
mod['func_5766'] = func_5766
mod = relay.transform.InferType()(mod)
var_5767 = relay.var("var_5767", dtype = "uint8", shape = (490, 3))#candidate|5767|(490, 3)|var|uint8
var_5768 = relay.var("var_5768", dtype = "float32", shape = (840,))#candidate|5768|(840,)|var|float32
var_5769 = relay.var("var_5769", dtype = "float32", shape = (490, 3))#candidate|5769|(490, 3)|var|float32
var_5770 = relay.var("var_5770", dtype = "float32", shape = (490, 3))#candidate|5770|(490, 3)|var|float32
output = func_5766(var_5767,var_5768,var_5769,var_5770,)
func_5771 = relay.Function([var_5767,var_5768,var_5769,var_5770,], output)
mutated_mod['func_5771'] = func_5771
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5665_call = mod.get_global_var('func_5665')
func_5667_call = mutated_mod.get_global_var('func_5667')
call_5782 = relay.TupleGetItem(func_5665_call(), 0)
call_5783 = relay.TupleGetItem(func_5667_call(), 0)
output = relay.Tuple([call_5782,])
output2 = relay.Tuple([call_5783,])
func_5792 = relay.Function([], output)
mod['func_5792'] = func_5792
mod = relay.transform.InferType()(mod)
mutated_mod['func_5792'] = func_5792
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5792_call = mutated_mod.get_global_var('func_5792')
call_5793 = func_5792_call()
output = call_5793
func_5794 = relay.Function([], output)
mutated_mod['func_5794'] = func_5794
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5854 = relay.var("var_5854", dtype = "int32", shape = (1, 15, 5))#candidate|5854|(1, 15, 5)|var|int32
var_5855 = relay.var("var_5855", dtype = "int32", shape = (2, 15, 5))#candidate|5855|(2, 15, 5)|var|int32
bop_5856 = relay.logical_xor(var_5854.astype('int32'), var_5855.astype('int32')) # shape=(2, 15, 5)
func_5083_call = mod.get_global_var('func_5083')
func_5084_call = mutated_mod.get_global_var('func_5084')
call_5880 = relay.TupleGetItem(func_5083_call(), 0)
call_5881 = relay.TupleGetItem(func_5084_call(), 0)
output = relay.Tuple([bop_5856,call_5880,])
output2 = relay.Tuple([bop_5856,call_5881,])
func_5894 = relay.Function([var_5854,var_5855,], output)
mod['func_5894'] = func_5894
mod = relay.transform.InferType()(mod)
var_5895 = relay.var("var_5895", dtype = "int32", shape = (1, 15, 5))#candidate|5895|(1, 15, 5)|var|int32
var_5896 = relay.var("var_5896", dtype = "int32", shape = (2, 15, 5))#candidate|5896|(2, 15, 5)|var|int32
output = func_5894(var_5895,var_5896,)
func_5897 = relay.Function([var_5895,var_5896,], output)
mutated_mod['func_5897'] = func_5897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4960_call = mod.get_global_var('func_4960')
func_4961_call = mutated_mod.get_global_var('func_4961')
call_5899 = relay.TupleGetItem(func_4960_call(), 1)
call_5900 = relay.TupleGetItem(func_4961_call(), 1)
var_5901 = relay.var("var_5901", dtype = "uint8", shape = (1470,))#candidate|5901|(1470,)|var|uint8
bop_5902 = relay.bitwise_xor(call_5899.astype('uint16'), relay.reshape(var_5901.astype('uint16'), relay.shape_of(call_5899))) # shape=(1470,)
bop_5905 = relay.bitwise_xor(call_5900.astype('uint16'), relay.reshape(var_5901.astype('uint16'), relay.shape_of(call_5900))) # shape=(1470,)
bop_5907 = relay.greater_equal(call_5899.astype('bool'), relay.reshape(bop_5902.astype('bool'), relay.shape_of(call_5899))) # shape=(1470,)
bop_5910 = relay.greater_equal(call_5900.astype('bool'), relay.reshape(bop_5905.astype('bool'), relay.shape_of(call_5900))) # shape=(1470,)
var_5912 = relay.var("var_5912", dtype = "uint8", shape = (1470,))#candidate|5912|(1470,)|var|uint8
bop_5913 = relay.right_shift(call_5899.astype('int64'), relay.reshape(var_5912.astype('int64'), relay.shape_of(call_5899))) # shape=(1470,)
bop_5916 = relay.right_shift(call_5900.astype('int64'), relay.reshape(var_5912.astype('int64'), relay.shape_of(call_5900))) # shape=(1470,)
func_4845_call = mod.get_global_var('func_4845')
func_4847_call = mutated_mod.get_global_var('func_4847')
call_5939 = relay.TupleGetItem(func_4845_call(), 1)
call_5940 = relay.TupleGetItem(func_4847_call(), 1)
output = relay.Tuple([bop_5907,bop_5913,call_5939,])
output2 = relay.Tuple([bop_5910,bop_5916,call_5940,])
func_5957 = relay.Function([var_5901,var_5912,], output)
mod['func_5957'] = func_5957
mod = relay.transform.InferType()(mod)
mutated_mod['func_5957'] = func_5957
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5957_call = mutated_mod.get_global_var('func_5957')
var_5959 = relay.var("var_5959", dtype = "uint8", shape = (1470,))#candidate|5959|(1470,)|var|uint8
var_5960 = relay.var("var_5960", dtype = "uint8", shape = (1470,))#candidate|5960|(1470,)|var|uint8
call_5958 = func_5957_call(var_5959,var_5960,)
output = call_5958
func_5961 = relay.Function([var_5959,var_5960,], output)
mutated_mod['func_5961'] = func_5961
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4018_call = mod.get_global_var('func_4018')
func_4019_call = mutated_mod.get_global_var('func_4019')
call_5983 = func_4018_call()
call_5984 = func_4018_call()
func_1225_call = mod.get_global_var('func_1225')
func_1229_call = mutated_mod.get_global_var('func_1229')
const_5989 = relay.const([-7,4,5,9,2,-2,-6,6,-7,-2,-2,-3,-4,-8,-2,-1,-4,-6,-8,7,-7,-1,-3,8,7,-9,4,-3,-2,-1,8,3,10,10,-8,-7,7,5,6,2,-7,4,10,-10,-6,7,4,5,3,1,4,6,6,3,-9,5,5,7,-7,-10,-7,-7,8,2,-9,3,-1,-7,10,-8,7,5,3,7,-9,10,-3,7,-3,3,2,-7,4,-9,-6,-5,8,-4,2,-10,-8,6,-9,3,2,4,-1,-6,-7,-9,-1,7,-4,2,-2,-6,-3,2,-5,-6,10,-10,2,-3,-10,5,9,-1,-3,-1,-5,7,-1,-4,3,-3,1,-1,-7,6,-1,9,1,4,-4,10,4,-9,-4,1,-2,-10,8,-10,8,-4,-4,-10,4,-8,-9,-8,-6,9,-10,7,7,-9,-9,-9,2,7,-6,-1,-8,-7,-9,-3,-1,-5,3,5,9,4,-10,8,-4,-7,9,1,9,8,2,-3,4,-4,-1,-8,2,2,-4,-3,3,-9,10,-2,9,-8,-1,-5,-10,3,-9,-4,2,-2,-4,5,5,-2,5,5,-3,-4,-6,9,-8,-7,-3,8,9,-2,-5,2,2,-6,-7,-2,3,-5,6,5,6,1,-7,7,-8,-8,-7,-2,6,9,-8,6,-8,2,-4,-8,-1,4,-9,-3,-9,10,3,6,-2,5,-5,-3,3,-4,4,-9,-10,-4,-3,6,10,-7,-7,-4,-7,9,1,4,-9,3,2,-8,-7,1,-9,-2,-4,2,6,-2,-7,5,-5,4,-9,7,10,-4,-6,-5,-6,4,9,-1,1,8,-4,-8,3,-5,10,4,5,-5,6,8,10,-10,-7,4,4,-8,6,-9,9,-3,-6,-8,-8,-4,6,6,3,7,-9,-7,-4,5,-2,-10,10,1,4,-7,-4,-9,-2,-6,-3,6,-5,-6,10,8,-8,5,6,2,-5,4,-9,-2,8,-9,-3,2,9,-5,-1,-3,5,-5,-3,-3,-7,10,2,6,-9,10,9,10,-3,-9,1,-3,9,9,6,-10,9,-8,1,-10,8,-4,5,7,2,2,9,10,-3,9,1,2,-1,-10,4,-3,-9,3,1,-1,7,6,7,3,-7,1,6,-7,-4,7,6,-4,7,10,-7,-2,-4,-10,6,-3,8,2,-9,-10,5,-5,-9,9,-6,5,10,8,8,7,3,-9,-5,-6,-10,-7,4,-8,-1,-1,6,8,3,-9,6,-7,5,-10,4,5,10,9,-4,-9,3,-1,5,-6,7,-1,1,-10,3,9,5,1,5,-1,8,5,-3,-2,-6,-9,4,-4,8,-5,3,8,7,-5,-1,1,-10,3,-3,-10,-3,-9,-10,6,-6,-1,-5,9,10,4,2,-3,4,-4,10,3,4,4,7,-4,-3,4,-5,1,8,-1,3,-3,-9,-3,2,4,-1,3,-10,-1,-3,-10,9,-6,-7,9,10,-8,-10,9,10,-1,-4,7,1,-9,-2,-5,-2,-1,-9,-10,4,-9,2,10,1,-3,6,-1,9,-3,10,-3,2,-1,6,-1,3,7,-6,-9,8,2,-3,3,2,2,-8,4,9,-1,9,5,2,9,-9,-6,10,1,4,3,1,-8,10,-7,9,6,-1,-2,-3,4,-9,10,-10,-1,6,10,1,4,-2,-2,2,9,-9,8,-1,-5,-5,-10,-8,1,6,9,1,-9,-8,-4,-9,6,5,1,8,-8,2,10,-10,-4,-4,6,-8,-10,5,9,-8,-1,10,-1,-9,3,-7,-3,-4,5,-8,3,5,-6,-9,4,9,10,-9,-10,-10,-2,-6,5,-10,9,-3,-7,6,-9,-6,2,-2,9,-3,-2,1,-9,-8,8,7,7,-10,8,-6,4,-4,9,9,7,-6,5,2,-8,-10,-8,4,7,-8,3,-6,7,-3,5,-6,-6,-1,2,6,-2,6,5,5,-7,9,-6,9,2,-10,6,9,-8,2,2,2,6,5,-10,-3,3,9,6,3,-9,-7,8,-6,6,8,8,3,-8,5,-9,6,-2,-1,2,10,-6,-8,-3,-3,-2,9,1,-4,-2,-8,9,5,1,-4,10,8,-1,10,-1,-2,-4,-5,-3,-5,-9,-8,-10,-4,8,4,1,4,8,-5,7,-6,-8,-7,1,6,8,2,8,7,-3,-4,2,-8,3,1,-1,-2,-7,8,4,10,9,-10,-8,-2,9,-7,5,-3,-9,2,-1,-6,5,8,9,9,-8,6,-7,6,4,9,9,2,8,7,-8,10,9,1,6,10,1,1,-4,-6,-2,-10,8,-10,-5,6,2,-7,7,-2,9,8,-8,2,10,10,2,7,-3,-4,6,4,-9,-2,10,-9,6,3,-10,7,2,6,-9,-1,1,-3,-9,-6,9,-7,2,7,5,3,4,7,-9,-7,-5,-3,8,-3,4,-7,7,-1,10,-8,-8,2,3,6,-2,10,-3,-4,-8,10,-8,6,-9,-4,-5,-5,3,6,7,-6,7,8,9,-3,-1,-3,-9,4,-6,-8,9,5,-1,6,3,8,-9,1,10,-7,8,10,6,7,10,-2,-9,1,-8,-9,-2,-10,-3,9,7,-6,7,-2,10,7,-5,1,6,5,2,4,2,4,-6,-1,-10,-8,3,-2,-9,2,-7,-9,6,6,9,1,5,9,10,-6,6,-9,-6,-1,7,-9,8,-7,4,-4,7,-4,-3,-6,2,-7,-6,7,-7,-6,-2,9,7,-6,-1,-3,8,-3,-2,-5,-10,3,9,9,6,10,-4,-10,7,9,-6,8,-2,6,1,8,-6,-9,-9,-10,-6,5,-9,1,10,-4,4,10,-5,10,10,7,-7,10,7,-4,-10,4,-3,7,-7,-2,5,7,-10,5,-4,-5,-1,8,-7,-4,1,-8,5,10,8,-10,-5,4,3,5,-4,-8,-9,4,1,5,-7,8,8,-3,1,-9,2,10,-3,-5,-9,-1,-1,2,-4,-4,10,5,2,-6,3,7,-1,3,4,-10,-10,1,7,-3,-2,3,9,-2,8,-1,-5,6,-7,-1,-4,-6,-3,6,-10,-2,6,-4,7,-5,6,-4,6,7,9,-6,9,7,-9,-4,10,1,3,-10,-3,-5,-4,-10,-1,6,6,-2,6,-7,-10,3,-8,5,-4,-4,-3,8,10,-8,6,10,7,-7,1,7,-8,1,-7,-7,-5,-9,-2,4,4,2,7,4,-5,-7,6,10,-6,-9,-1,-5,-9,-3,-1,2,10,-5,-7,-10,-9,-3,-3,-10,3,-2,-6,-1,9,-6,2,6,-2,-10,10,-3,9,6,8,8,7,-8,-7,10,2,6,3,-7,-5,-6,-6,-5,-7,-6,-9,8,6,-1,-4,9,-8,-9,7,6,10,-8,-2,-3,4,-2,6,2,-6,5,5,-4,-8,-4,9,-8,3,-7,-9,-4,2,9,-7,-1,4,-1,-1,2,1,6,-7,9,2,-6,8,7,5,-9,-7,-5,6,1,-4,7,-10,-3,9,8,-2,6,4,2,-7,2,-1,6,5,-5,8,-2,6,5,1,-1,-10,3,-8,5,-5,-1,6,-6,-5,-9,4,1,-7,9,2,1,9,-7,-2,-4,9,-3,-5,5,-1,-2,6,-9,4,2,-10,-9,8,5,6,7,9,2,1,3,-4,9,10,2,5,-9,9,-3,-4,9,10,-7,7,10,-9,-2,-9,2,10,-3,-7,10,-2,3,1,-6,-7,9,-4,-4,3,-5,-8,4,-2,2,1,5,7,7,-1,9,8,6,7,5,7,-4,1,-4,5,2,10,-9,-9,-4,-1,-10,1,3,5,7,1,8,9,3,-8,10,-2,4,7,-4,1,1,10,-9,1,-9,-9,-2,-1,-2,10,6,3,5,-7,10,3,-9,5,-1,6,-9,-1,3,10,10,9,5,-7,4,9,2,-7,-8,1,-9,3,1,-2,3,-2,-3,-8,-3,-9,9,-2,2,3,4,-3,-10,4,8,6,10,-4,-8,-1,9,9,8,10,3,-3,-1,1,-1,-3,-10,2,-8,3,3,9,4,10,1,5,7,-2,-4,-10,-7,6,5,-7,4,-8,-4,9,-5,1,2,2,1,8,9,10,2,-3,-4,9,-8,5,4,-9,4,4,5,-7,-4,-2,4,6,8,4,-10,1,10,10,-1,-2,1,3,6,2,7,-10,8,9,-7,-9,6,5,-6,-7,-5,4,-6,2,8,-9,-8,6,-7,3,7,-1,9,-6,-2,-2,3,5,-2,3,-10,5,-3,5,5,4,-9,-3,-10,5,-4,-8,-2,8,1,6,-6,-1,-1,9,-6,7,9,-6,-1,-2,8,3,7,6,3,-9,-4,-7,9,-2,-10,-2,1,9,-7,-8,-5,4,10,-7,-3,-1,-9,3,-4,-2,-6,-3,-2,-10,7,3,6,-1,-9,-3,-7,1,-5,-3,-9,-3,-1,1,-3,2,10,-10,-3,5,3,6,4,-3,4,-6,-3,8,-7,5,2,8,3,8,-2,9,3,-5,-5,-6,6,-1,-2,1,10,9,-5,3,6,-3,-8,-4,-10,-10,7,5,7,-2,-7,-10,3,10,-8,-6,-6,-5,-3,-7,-7,-1,2,-10,4,-10,7,9,-9,7,-1,2,-2,-4,-7,10,-8,10,7,-1,-6,-3,10,4,-8,-9,-4,6,9,2,1,-9,3,8,-1,-10,-9,1,-2,1,6,8,-2,-9,-4,-6,-3,3,6,5,-10,6,7,-9,10,10,1,-9,2,-5,-9,3,-7,7,10,1,-8,-1,2,-7,-1,2,4,-8,-7,5,5,-7,6,4,-7,-8,-1,3,9,10,6,-6,3,-9,7,6,3,4,9,-7,-2,3,-4,-9,-6,-4,2,5,4,-6,7,4,-7,-1,-6,-5,3,-4,-6,-1,3,-7,7,-10,5,3,10,-1,-8,5,1,2,2,1,10,-4,-7,-10,2,-7,-6,8,10,4,4,-1,1,-8,-1,3,-3,8,8,6,8,9,-6,9,-8,5,4,8,-9,-8,-9,6,6,2,4,5,3,-5,1,-4,-8,-3,-5,8,1,-8,7,-10,10,6,-10,-3,5,2,3,-4,-7,5,-2,-5,7,3,9,-8,5,-10,-4,-10,4,-4,-7,10,-9,-5,-8,-6,-6,-10,10,2,1,-2,9,-6,3,-10,2,4,4,4,10,6,7,-10,1,4,-8,-9,-8,9,-4,-2,10,-8,5,-6,-10,-4,-10,5,8,5,6,2,6,-3,-2,-9,-1,7,-8,5,-9,6,3,3,1,-7,2,10,3,-10,-8,-7,5,7,9,3,10,7,3,5,8,2,1,7,5,9,8,2,-2,-9,2,-10,3,8,-9,-3,-4,6,9,1,3,-7,8,4,-10,-10,7,7,-9,-8,-7,-5,8,-8,5,10,3,-8,-9,-10,7,3,2,-6,6,-9,-6,6,6,-2,-5,-10,10,-9,2,9,-9,-3,-4,-2,-4,-3,-5,-4,-3,1,-9,-6,1,-9,3,2,2,-5,-6,-7,7,-1,-9,5,-3,1,9,10,-3,1,-9,-9,10,-5,2,7,4,-4,-2,6,-5,-7,4,-4,-10,-2,8,8,-7,4,-7,-9,-8,-5,-1,-8,-7,1,-6,-8,-10,3,-4,-7,4,-2,-4,-3,5,-5,-8,-3,9,4,-8,10,-5,-5,-6,3,6,2,-8,2,-2,10,-1,-2,-8,6,3,4,-10,8,-3,-7,-6,-7,-3,-10,8,-4,-2,9,-7,5,-2,-7,-10,-10,5,2,-6,8,7,-6,-7,-4,-9,10,-8,5,4,2,-4,-4,2,2,4,7,7,8,4,-2,3,-8,-7,-10,-2,2,9,-6,-4,6,8,1,7,-9,1,3,-3,6,-3,-8,3,2,10,10,8,-1,-1,4,-4,-10,-4,3,-5,7,7,2,7,-1,-6,10,1,2,6,2,7,-6,-7,8,8,-10,1,7,8,7,-1,7,10,3,-5,7,7,1,-4,5,-4,-9,9,-5,3,2,-8,-5,-8,6,5,5,1,-7,-7,-7,9,6,-3,4,2,2,-7,-10,-7,-10,2,-4,3,9,6,-1,-3,3,-7,-2,5,8,-10,8,-7,-10,4,-3,7,-7,8,-10,-4,-7,-1,1,-2,7,9,1,-4,4,-7,2,-1,-9], dtype = "uint32")#candidate|5989|(2304,)|const|uint32
call_5988 = relay.TupleGetItem(func_1225_call(relay.reshape(const_5989.astype('uint32'), [9, 16, 16]), relay.reshape(const_5989.astype('uint32'), [9, 16, 16]), ), 0)
call_5990 = relay.TupleGetItem(func_1229_call(relay.reshape(const_5989.astype('uint32'), [9, 16, 16]), relay.reshape(const_5989.astype('uint32'), [9, 16, 16]), ), 0)
output = relay.Tuple([call_5983,call_5988,const_5989,])
output2 = relay.Tuple([call_5984,call_5990,const_5989,])
func_5998 = relay.Function([], output)
mod['func_5998'] = func_5998
mod = relay.transform.InferType()(mod)
output = func_5998()
func_5999 = relay.Function([], output)
mutated_mod['func_5999'] = func_5999
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5367_call = mod.get_global_var('func_5367')
func_5369_call = mutated_mod.get_global_var('func_5369')
call_6002 = func_5367_call()
call_6003 = func_5367_call()
uop_6004 = relay.tan(call_6002.astype('float32')) # shape=(8, 7, 15)
uop_6006 = relay.tan(call_6003.astype('float32')) # shape=(8, 7, 15)
output = uop_6004
output2 = uop_6006
func_6010 = relay.Function([], output)
mod['func_6010'] = func_6010
mod = relay.transform.InferType()(mod)
output = func_6010()
func_6011 = relay.Function([], output)
mutated_mod['func_6011'] = func_6011
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3249_call = mod.get_global_var('func_3249')
func_3250_call = mutated_mod.get_global_var('func_3250')
call_6062 = func_3249_call()
call_6063 = func_3249_call()
output = call_6062
output2 = call_6063
func_6083 = relay.Function([], output)
mod['func_6083'] = func_6083
mod = relay.transform.InferType()(mod)
output = func_6083()
func_6084 = relay.Function([], output)
mutated_mod['func_6084'] = func_6084
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3564_call = mod.get_global_var('func_3564')
func_3565_call = mutated_mod.get_global_var('func_3565')
call_6087 = relay.TupleGetItem(func_3564_call(), 2)
call_6088 = relay.TupleGetItem(func_3565_call(), 2)
output = call_6087
output2 = call_6088
func_6117 = relay.Function([], output)
mod['func_6117'] = func_6117
mod = relay.transform.InferType()(mod)
mutated_mod['func_6117'] = func_6117
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6117_call = mutated_mod.get_global_var('func_6117')
call_6118 = func_6117_call()
output = call_6118
func_6119 = relay.Function([], output)
mutated_mod['func_6119'] = func_6119
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5536_call = mod.get_global_var('func_5536')
func_5538_call = mutated_mod.get_global_var('func_5538')
call_6120 = relay.TupleGetItem(func_5536_call(), 0)
call_6121 = relay.TupleGetItem(func_5538_call(), 0)
var_6122 = relay.var("var_6122", dtype = "float64", shape = (5, 15, 12))#candidate|6122|(5, 15, 12)|var|float64
bop_6123 = relay.left_shift(call_6120.astype('uint64'), relay.reshape(var_6122.astype('uint64'), relay.shape_of(call_6120))) # shape=(5, 15, 12)
bop_6126 = relay.left_shift(call_6121.astype('uint64'), relay.reshape(var_6122.astype('uint64'), relay.shape_of(call_6121))) # shape=(5, 15, 12)
func_3748_call = mod.get_global_var('func_3748')
func_3751_call = mutated_mod.get_global_var('func_3751')
const_6135 = relay.const([2.097164,-2.686626,-6.253473,-4.300698,-1.719997,-4.218783,-0.385921,9.620862,-2.472085,0.857426,-9.853942,4.798767,7.308333,-7.691442,-6.268544,4.551025,-3.871608,2.367936,-3.136645,-1.365570,-7.728588,8.943854,6.348791,-8.440857,4.676422,4.695260,-4.172079,6.941557,4.562869,-4.370471,5.111207,6.599268,-3.033609,-8.436529,0.870610,6.466943,5.259901,-4.814412,7.847576,-3.966468,-9.615851,-7.779364,-4.085839,-0.543529,-7.889162,8.211213,-7.936930,1.044183,9.400327,-6.812911,-0.189420,4.963801,-7.483925,2.900055,-4.922491,-4.059463,9.912250,7.658807,-5.304422,6.447198,3.753948,-6.850701,-9.491557,-6.171260,8.698222,-9.953051,-6.778040,8.715239,5.280803,-6.589424,-1.276071,-2.238928,-3.827613,0.543251,1.343238,4.226925,-4.320468,-1.877970,3.680070,-5.886026,2.971198,0.552619,-2.653788,8.947433,3.641173,-0.104233,-2.277816,2.974545,-4.977640,-4.639069,3.775817,-5.089532,9.273903,-5.688490,0.896870,-8.879697,0.343099,-3.574782,-4.414619,9.636989,-7.722962,-3.280177,-1.221994,3.029413,-7.170825,-1.447796,4.156287,0.893560,-8.482430,2.982275,1.205711,-3.655040,1.127008,-0.423050,-5.418407,2.491089,6.374902,-8.907961,0.409497,6.296464,2.006253,-8.059895,-3.358207,8.139771,8.737863,5.116913,-1.559914,-5.378456,-0.952491,-5.389737,-1.395792,7.960624,4.800574,-0.415153,9.105392,-1.239029,6.416581,1.590812,9.310947,-2.904635,-1.127686,1.467953,-2.595499,-0.537604,-2.116521,5.405449,4.337501,5.705395,-6.748725,2.899858,2.818769,-7.447533,-2.164818,-5.268067,9.038289,3.437383,-8.257763,-9.495672,-6.452355,-1.177845,0.908377,2.355424,-4.345411,4.130954,-1.485488,2.987480,5.563956,0.070410,5.411300,5.718251,-8.930434,-1.476224,2.727581,7.797009,-2.673449,-1.965401,-3.334401,-2.665155,-8.619301,2.809399,-9.510001,-2.590404,1.270662,-4.407115,-0.550773,4.549559,-4.710457,7.587001,-2.358341,7.321983,-1.457967,6.360621,7.515115,-4.234700,5.057481,7.090143,-5.294231,4.078183,7.324646,-6.464179,4.252095,-2.333924,-7.163539,3.080618,9.685226,8.886682,0.964711,-4.387256,-8.041950,-6.346466,-9.980100,8.009948,-3.150924,-0.152642,-0.655976,3.741557,-5.983024,3.559350,4.940073,-2.994707,3.593298,2.756955,-5.167040,-6.742961,-9.609000,-2.328406,-4.764858,7.807163,5.527273,-0.906635,-3.265583,7.528916,5.165421,0.312318,-7.041010,4.473219,0.460536,-6.019822,-0.756717,-0.675752,1.905665,-6.069441,7.015740,-1.136629,9.049893,-5.907586,-8.568138,7.921710,7.423201,2.396662,-0.694894,7.720387,9.491362,9.760770,-2.665855,-0.176686,-5.218523,4.903680,-3.193206,-5.140431,-2.533099,1.672782,3.630206,9.105050,-7.793377,-8.216912,4.160443,-5.327990,6.102246,8.148525,-5.412281,0.506254,-0.995084,-5.484934,9.668947,-5.040078,6.699334,-5.317690,-5.621841,4.645866,-5.714946,6.559109,-2.587692,-6.567297,6.283005,8.845862,1.892125,4.909440,-1.485883,-0.149895,-7.285159,1.096545,8.344283,-4.331243,0.377357,-8.605746,3.847944,-0.883332,8.720166,5.570531,-9.511008,-7.797198,-9.445911,8.788787,2.236887,-4.322288,-8.888291,-3.079442,5.573984,-2.242642,-7.072682,7.771566,-5.971664,8.093253,-5.132841,7.082427,-3.652834,7.660684,2.199911,5.575157,-8.762045,-9.486585,7.530472,-4.413272,-3.884697,-7.512395,2.550671,-9.475627,9.338905,-4.686499,6.125534,-1.259223,8.018321,-3.391706,-6.662948,-2.413136,1.044862,1.217305,2.171384,9.983026,-6.538279,-2.427495,5.769978,-7.421024,7.590268,0.613055,-3.016727,-5.243483,1.667057,-7.810388,-9.332261,-9.805287,3.447881,-5.720241,-7.446220,-0.725785,6.753513,-3.334411,-6.267293,3.932766,8.291303,-2.811190,-1.344226,-2.600469,6.408984,2.032933,4.798370,9.486815,-5.781740,4.502234,3.866367,7.217485,-5.279420,-9.440471,-6.584461,-8.071241,-8.002632,4.444473,8.498078,-7.295504,-8.297863,-3.298725,0.683897,4.203820,-4.972713,-2.277520,-6.473817,-9.212109,-6.129549,9.962997,6.353769,-0.504250,-6.339479,-2.907558,7.043412,-6.690346,3.797695,9.730619,-0.021445,-5.441463,0.263114,3.253894,-8.497983,3.327714,-0.662290,-7.594004,-3.930033,7.850201,-2.387344,8.752041,-5.961129,-4.014692,-3.533967,-2.733835,-7.267758,3.912904,-2.810807,1.819465,1.940407,8.253145,-5.647845,2.446386,-9.468368,9.705493,-3.339457,7.299374,8.103609,-6.180554,1.383576,-5.118800,1.604745,-0.185197,-9.185842,3.304352,-1.696431,7.658091,-2.767422,4.892133,9.776189,8.995367,7.218731,-6.933605,-2.088467,6.961424,-7.555989,3.973051,5.656995,6.712034,-7.154548,9.018070,6.117699,7.209832,9.796169,-1.159335,5.389195,0.217510,-0.914365,8.328064,-5.338360,5.816806,7.485820,7.802210,-9.946812,-9.752564,0.157243,8.802691,9.150504,-3.670947,3.590294,9.019918,-0.544591,-4.009522,2.668772,-5.746868,-1.290363,-6.013968,-9.222835,-1.077217,-1.092013,4.187937,3.904784,-0.908735,7.505855,0.595191,5.761594,-0.571036,5.554935,0.347276,-6.641804,4.825133,6.025912,-1.016233,2.076815,-3.509190,-8.324656], dtype = "float32")#candidate|6135|(495,)|const|float32
call_6134 = relay.TupleGetItem(func_3748_call(relay.reshape(const_6135.astype('float32'), [495,])), 1)
call_6136 = relay.TupleGetItem(func_3751_call(relay.reshape(const_6135.astype('float32'), [495,])), 1)
func_5053_call = mod.get_global_var('func_5053')
func_5058_call = mutated_mod.get_global_var('func_5058')
const_6139 = relay.const([-5.273307,-8.641712,6.904653,-7.589633,-5.651682,-4.199294,-0.235395,-8.258254,8.368456,5.132400,-6.114956,-6.256716,-0.442573,7.950347,-9.959329,2.186655,0.222401,-5.981181,8.845286,8.694284,8.505012,-3.241381,8.118171,-1.919523,9.951293,-2.332787,8.766604,-5.438257,-4.909504,-7.442690,-5.792522,-7.908309,6.369661,-0.716856,9.329123,-4.599394,-9.611216,-6.797962,9.927818,-9.137703,-8.596559,2.602646,8.774808,9.678220,5.813418,-0.035824,-5.804657,0.390888,7.457493,-0.410397,3.125718,5.881191,1.343943,2.240656,-1.668530,1.833151,-0.506117,0.307241,-3.407890,5.853771,-7.878991,5.054932,-2.882794,-8.162773,5.323975,-8.742196,-8.058362,-4.343814,-4.528001,-9.543334,1.458427,5.177895,-1.293665,-1.891388,-3.923154,-9.706052,1.276494,4.754685,-4.688892,-7.977265,-5.941461,-6.836649,-3.666980,-7.673421,-9.081578,-2.115200,-5.176119,4.048847,-8.948251,1.758380,-4.339955,7.899112,-5.972883,2.344914,-6.976067,-1.469124,0.276108,7.939423,7.216595,-0.203352,7.015605,8.527984,-5.859761,-2.505732,-4.421390,9.698216,-1.309344,8.115353,6.393541,4.498771,-4.182669,-1.852337,9.784993,7.846605,3.927530,-4.827444,-8.615775,-1.484447,7.057880,3.213955,7.342692,-4.928068,9.276130,-2.141048,-0.344143,7.474180], dtype = "float64")#candidate|6139|(126,)|const|float64
call_6138 = relay.TupleGetItem(func_5053_call(relay.reshape(const_6139.astype('float64'), [9, 2, 7]), relay.reshape(const_6139.astype('float64'), [9, 2, 7]), relay.reshape(const_6135.astype('float32'), [495,]), ), 2)
call_6140 = relay.TupleGetItem(func_5058_call(relay.reshape(const_6139.astype('float64'), [9, 2, 7]), relay.reshape(const_6139.astype('float64'), [9, 2, 7]), relay.reshape(const_6135.astype('float32'), [495,]), ), 2)
output = relay.Tuple([bop_6123,call_6134,const_6135,call_6138,const_6139,])
output2 = relay.Tuple([bop_6126,call_6136,const_6135,call_6140,const_6139,])
func_6144 = relay.Function([var_6122,], output)
mod['func_6144'] = func_6144
mod = relay.transform.InferType()(mod)
var_6145 = relay.var("var_6145", dtype = "float64", shape = (5, 15, 12))#candidate|6145|(5, 15, 12)|var|float64
output = func_6144(var_6145)
func_6146 = relay.Function([var_6145], output)
mutated_mod['func_6146'] = func_6146
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5611_call = mod.get_global_var('func_5611')
func_5612_call = mutated_mod.get_global_var('func_5612')
call_6156 = func_5611_call()
call_6157 = func_5611_call()
output = call_6156
output2 = call_6157
func_6175 = relay.Function([], output)
mod['func_6175'] = func_6175
mod = relay.transform.InferType()(mod)
mutated_mod['func_6175'] = func_6175
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6175_call = mutated_mod.get_global_var('func_6175')
call_6176 = func_6175_call()
output = call_6176
func_6177 = relay.Function([], output)
mutated_mod['func_6177'] = func_6177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4960_call = mod.get_global_var('func_4960')
func_4961_call = mutated_mod.get_global_var('func_4961')
call_6231 = relay.TupleGetItem(func_4960_call(), 0)
call_6232 = relay.TupleGetItem(func_4961_call(), 0)
func_5083_call = mod.get_global_var('func_5083')
func_5084_call = mutated_mod.get_global_var('func_5084')
call_6262 = relay.TupleGetItem(func_5083_call(), 0)
call_6263 = relay.TupleGetItem(func_5084_call(), 0)
func_1071_call = mod.get_global_var('func_1071')
func_1075_call = mutated_mod.get_global_var('func_1075')
const_6282 = relay.const([-8.492144,-6.071422,-7.865547,-9.513712,-3.080742,-7.058078,6.530826,2.943337,-5.357554,5.160509,6.237832,9.761601,6.847731,3.052978,-7.323617,-3.910252,7.066905,-8.509746,-8.555558,-2.815228,-7.895209,0.133775,9.797769,4.009263,-2.341196,-6.686561,1.128819,-0.270089,-7.047184,-5.214098,6.993914,-5.006229,9.178384,-8.892592,0.694888,-6.816134,-6.511054,7.651273,0.724446,1.295416,-7.770860,1.146288,7.137649,-6.264893,1.337555,-4.377295,2.006945,3.257562,-7.108224,-3.878055,-5.868341,9.585544,-6.448756,5.886484,5.184432,-1.120959,-3.108520,4.632244,3.034338,6.073533,-8.253866,1.826390,-9.959413,1.376890,1.351515,4.965692,-9.313495,-2.173542,0.729370,-9.707714,-9.705234,-2.588897,-3.191305,2.867563,1.578173,-8.517012,-0.125326,4.759702,1.704430,4.711876,-9.011841,-1.572677,2.754085,-8.843037,-7.552043,5.906854,6.153443,3.740101,-1.003386,6.267463,-8.933519,1.596495,1.404856,3.297233,0.309320,2.457885,3.099920,5.862593,-4.993737,-2.682274,-9.443208,-7.903876,1.728274,-9.883140,-2.016318,-2.480843,7.540771,0.337897,-8.656699,7.603842,-0.812392,-4.999065,6.594913,-3.197405,2.613748,-3.108127,2.197979,3.696979,9.866879,-2.437323,0.201058,-9.333015,-8.448892,0.362305,-9.193940,1.783326,-7.568299,8.851914,9.875489,9.916373,-5.295827,-0.544167,-9.010186,-4.310395,8.830238,3.968477,0.028523,-3.718365,-0.081959,5.580819,-8.494044,0.312242,-6.881151,-7.353326,-4.742764,-0.945276,-4.840372,-7.230511,-9.533115,-3.251878,4.640802,-6.903155,3.559172,8.206906,-1.393972,-2.505593,4.708024,7.792478,-1.628831,7.795924,-5.023760,5.480333,-1.397257,4.683497,2.514884,6.674136,-1.852631,4.193637,-6.129767,2.981589,0.146806,9.879305,4.572098,-8.540291,8.436675,-9.047918,5.824003,-7.443601,-5.296324,-1.103492,5.360965,-1.761037,5.154407,0.113233,-6.242157,2.497767,-4.799660,-9.680090,0.815586,-0.454707,-6.367426,-4.931532,-3.643999,-4.371139,4.794060,-5.402674,-7.670721,-0.309940,9.899732,2.767270,-7.712657,5.451946,4.646444,-7.135027,8.548403,6.659814,4.687360,2.846334,-6.266244,-9.862371,0.714788,-5.102321,-3.676057,6.309212,-4.967643,8.949975,9.656255,-3.647051,5.937451,-3.632477,6.906674,-2.903576,7.948150,-1.906900,9.768791,8.425259,-4.934524,-5.279290,-4.458901,-7.692968,-3.855124,3.103656,-7.912173,9.192642,-3.207197,-9.332518,5.101627,0.453045,5.469128,0.591949,-8.367693,5.637444,-3.950404,2.099801,2.652024,-0.939283,-1.752883,-7.405558,4.017688,-6.139199,9.316631,2.844574,5.099395,8.040518,-6.611025,-2.089595,-5.043676,3.314297,3.144850,4.268883,-7.542052,5.007578,-5.703706,-1.500690,4.652493,0.149595,5.268301,4.431177,1.601778,0.288375,2.886411,5.196105,8.057228,7.545004,9.241161,-3.194622,-9.579242,-4.300904,4.007334,-2.546499,6.327013,0.227085,-6.126800,-0.154590,6.200926,5.984029,9.134074,-6.514765,-1.815504,0.841824,1.927721,7.182573,6.481760,-4.871772,-6.089000,2.028709,-5.299077,0.381167,-8.588606,6.921325,3.444775,-6.366965,1.273211,-9.300694,-9.077304,8.025981,1.675733,7.570815,9.631882,0.882334,-9.104688,8.874042,7.147867,4.962142,-6.484996,5.833173,-0.281626,-3.364027,2.376225,2.201745,7.546709,5.952717,4.096049,1.658675,-6.955754,2.345583,-4.820855,9.874888,2.283592,2.358348,0.924532,4.812897,-7.811585,2.077683,-9.785619,-9.862505,-2.249787,-3.499406,-7.068441,-2.193713,-9.610877,-9.627854,-3.700217,-2.883973,-0.089221,-5.538243,5.467244,2.363347,0.334318,9.808480,7.059215,1.958675,3.693265,-0.163847,-3.687684,-2.956247,-7.957980,0.287298,-1.308609,-3.149748,0.183938,0.966579,-1.872950,-3.796333,8.980269,-0.037314,5.885037,-2.906828,3.941495,1.473880,9.040187,2.043245,-6.070383,0.393816,-8.856922,4.300668,-7.520031,-5.395168,-8.838255,-7.276117,-5.378110,-1.894623,1.539014,-3.886812,8.295812,-1.160263,8.721907,-8.181592,-4.792845,1.711366,0.430860,-5.983192,1.274669,5.895231,7.162386,2.820056,-7.287883,-9.206893,4.313728,-0.007583,-2.662702,2.482485,-9.048425,8.629189,6.731963,-9.889431,9.769264,-2.970927,4.788911,-7.236653,-2.905986,8.689303,-5.822836,-4.348899,-5.083376,-1.357799,7.575676,3.819010,-9.680319,-8.416689,1.452355,-8.785080,9.204457,8.409402,-7.407704,6.861742,4.718347,8.106614,-9.851767,7.136591,4.339760,8.612792,-8.166040,-0.599220,6.912410,-3.100269,2.466014,-5.307318,-1.208739,-8.225807,1.603415,6.691659,-5.180196,-3.204097,-2.181293,9.718570,-4.854591,-3.812582,2.766729,7.867396,2.610085,2.263689,-2.710429,5.879592,7.257061,-7.569399,4.762015,-8.155048,-6.234750,9.513917,-3.294748,-0.422522,2.887986,4.117256,-0.877732,-5.801125,4.512959,-5.192366,7.947098,-4.836343,2.219232,4.874103,-7.424837,-6.422435,3.708607,5.924536,1.122601,-0.411598,-3.960958,6.458646,-9.098902,-6.352361,-9.913097,3.696674,-1.556926,-4.020968,-1.511177,-7.827529,8.483826,-7.928253,-2.020186,0.454416,0.339084,0.544197,4.866800,-4.700767,-9.900818,6.898572,-7.265713,-7.726268,-2.195018,-0.600823,-4.769362,9.067741,-8.283838,-2.235781,9.020547,-2.190849,9.010596,-9.359444,-4.783476,-5.704667], dtype = "float32")#candidate|6282|(512,)|const|float32
const_6283 = relay.const([5.604269,-3.812740,6.492679,-5.535450,-2.826051,2.029467,1.154624,9.226346,3.725529,-6.151297,8.471556,-2.100233,1.753258,-4.854454,-9.241147,-9.339798,1.606683,-9.089652,-4.319177,1.610096,-2.801307,6.086439,-1.834656,8.344120,-7.344956,4.238389,-8.113594,9.890952,-3.438328,3.054758,-9.790665,-7.833170,-5.491795,-8.668964,-4.307978,3.358998,-5.478994,-1.562818,-7.791761,3.784401,5.940081,-3.167342,-3.936357,-4.655391,-8.002764,6.245635,6.520723,-3.879326,-0.454333,-9.430693,-5.513968,-4.792939,-2.018580,-5.519249,-8.629399,0.514539,-8.305099,0.246996,-0.201970,4.381755,9.917081,6.536683,8.957205,4.865552,-5.996144,-0.257785,4.591048,1.589672,5.630882,-3.024253,1.804410,-9.509612,-5.177979,-6.319663,4.548156,2.556041,4.156152,6.671928,-0.988020,-7.310102,9.390649,-1.551904,0.791155,-1.490468,3.715168,-7.286583,7.329594,-5.241935,1.858217,-9.190633,-3.771613,8.505092,-0.723859,-5.196208,6.660309,8.721795,9.763964,-4.129174,1.575510,-9.331842,4.912917,-5.360837,3.774447,-3.220195,3.700356,9.143411,-3.314935,0.134662,2.535385,-3.239806,3.087439,8.864259,6.355919,3.014972,8.329224,8.782930,6.069783,9.874672,-5.905023,9.331923,-6.735192,0.835728,8.856544,1.855177,7.239484,-9.070823,0.584978,2.996169,2.009495,4.613746,-6.531822,4.508096,-0.973690,-7.935227,0.948692,6.186148,-4.931055,-7.428925,6.017071,5.791693,3.043903,3.027951,8.525609,7.782322,-5.360820,2.536026,4.014707,-2.855325,5.879779,-9.880368,-3.734551,-4.413053,7.337721,-7.768176,-8.386406,1.368196,2.102241,-2.153518,3.028096,8.299663,7.465107,7.543498,-0.576209,-8.750554,-7.463552,-0.854701,-2.058955,-2.305182,2.033664,0.232485,-2.095080,-6.448556,8.849220,-9.221450,-1.071965,-3.070046,8.642978,0.731937,9.735415,2.780807,-6.656578,-0.886987,9.541225,-0.573077,-7.517165,-3.711149,-3.005069,-3.418146,-1.047541,1.626074,7.693880,-7.299624,3.430181,-9.003318,5.136322,-2.575803,0.330021,2.425943,1.836104,0.730413,4.473817,-1.779143,-5.744357,7.819041,-1.777404,-1.309759,2.171942,-6.256847,-1.079171,3.566751,-8.921873,2.921698,0.676311,-5.480796,8.749471,-3.079419,-3.807889,-0.858460,7.881267,3.484065,-1.586373,8.000758,-8.191413,-9.811387,-8.759635,-1.873383,-2.853587,-1.933113,-7.355253,-1.880375,9.239359,-3.148652,-7.187675,-6.703546,0.897322,2.429382,6.734719,0.809618,-8.310927,-5.367012,0.914534,4.816137,7.330781,4.224656,2.006777,1.418548,-5.700018,-4.241875,-1.768008,1.814204,-1.103231,-1.734977,3.605711,1.031732,9.064931,7.469915,-6.747871,-3.080715,-7.038279,-5.378875,-9.821033,-9.273243,0.106149,7.489318,-3.434501,9.853780,6.612382,-3.054558,3.615010,-9.480765,-0.947452,-8.054274,-8.133040,-4.326776,-5.790404,-0.425272,-3.109689,-9.760107,0.211160,8.077199,-8.899534,-1.142055,-4.614290,-4.630741,-6.572175,1.008081,-3.920723,-4.885256,-9.538022,-1.063493,9.928140,2.671819,3.732794,8.476400,6.677145,-0.778149,-8.247575,9.634652,-1.651571,-1.403666,-2.855615,8.925129,2.192169,-7.206930,-5.461205,3.015268,1.486677,7.027701,-5.393595,-4.304504,4.458178,2.634627,4.180149,6.850708,-8.649391,6.513388,7.865429,-8.120566,-7.991527,-5.162278,1.861361,-8.708953,1.057568,7.209019,-4.079957,6.763783,3.847664,9.623389,-6.842925,-8.523858,2.217480,0.719551,-9.940215,1.522774,-4.285634,6.294326,4.267504,5.427545,4.564875,-5.027612,-1.805267,2.717242,-8.349098,-3.574414,5.492348,-5.316386,-4.230869,4.460593,2.697326,8.517022,3.526352,5.139030,-7.730761,4.245156,0.314621,-8.100786,0.518688,7.339897,-0.922091,-1.356130,-6.659196,-4.639841,3.697814,7.195072,8.170924,-0.556130,4.306023,8.211699,-6.040291,5.615889,5.149959,4.341784,-7.507957,-0.861508,5.966838,-0.556727,4.142955,-5.474334,1.291200,8.368491,5.259057,0.909989,8.668074,-5.601732,8.650679,-5.147328,0.447201,4.203896,-8.957414,9.104340,5.404721,-8.795146,-1.169083,9.988562,-4.693234,-4.539735,-4.874167,8.199020,1.023108,-9.857823,7.081259,7.610513,-4.002239,-0.369200,-8.110574,-5.110123,-4.991324,7.451401,-2.318998,-6.667128,4.406594,-1.543979,-9.243471,-8.380782,8.169669,-4.895395,2.297128,-0.753917,-6.127771,-7.430718,-6.237909,-8.394178,5.306501,1.350483,-2.292895,9.153211,7.538267,-7.799373,1.802522,6.099533,0.562972,8.534583,7.764053,-5.631973,1.310274,-1.497152,-0.468185,-2.921786,-7.558949,0.778911,9.335253,7.926110,-2.708211,-9.293815,-0.772023,-8.047651,8.487609,-8.404618,7.609895,-7.828058,0.982815,-1.040247,-5.928483,-3.781214,7.463692,9.401397,-1.664737,1.053694,-5.358026,-5.940895,6.061212,-5.948650,-0.826201,7.489558,-5.647987,-6.906273,-1.263173,1.222374,7.394102,-0.041663,5.208070,2.491709,-4.462599,-4.510838,-5.206816,0.202924,1.102071,-1.312878,-9.810085,-2.637651,-9.075028,-5.798608,9.604751,9.153761,3.679868,8.037557,0.381684,-2.980476,8.697641,6.767038,4.857713,0.199896,-9.987457,0.963604,7.461076,8.420489,-5.870395,4.402711,0.227809,5.163846,-8.810449,5.062626,1.950833,7.341019,-2.702577,8.327607,2.083112,8.190510,-4.236403,-5.603818,-1.311961,4.270145,3.628098,-5.021268,3.977889,-0.713570,0.232360,-6.468405,3.129354,1.145035,-8.866435,-8.967013,-2.342243,0.168362,-8.820177,-9.393985,-0.447995,3.680224,-5.166150,-8.099933,0.310533,9.905053,0.493381,-6.481289,5.045685,-7.686528,-6.819992,0.686751,-5.879155,5.996576,-2.116520,8.461454,-0.573418,4.010958,7.257581,-2.072234,-2.414070,0.500138,4.996079,-2.820927,2.977056,-5.732754,7.432661,-8.640266,4.045998,-9.548634,-1.148877,-0.768556,4.062309,5.944351,6.549081,1.925671,-6.057178,7.792090,-2.415510,-4.046051,9.480208,0.405280,8.155852,-3.454550,-1.575911,-4.056638,1.852853,0.164299,-4.604316,6.765207,-2.859552,9.912201,6.125917,5.813195,1.288018,8.984555,-4.624772,0.468547,3.855350,-5.483579,4.270609,-0.212965,6.783464,2.022637,-5.328085,-0.318675,8.228907,2.089887,-2.448393,6.274881,1.096119,-5.154919,1.942248,0.197538,-4.674910,-2.825711,-8.727789,-4.604305,-5.663562,-1.212223,-3.346407,-2.586284,-6.302984,-7.398453,-8.320320,-9.507135,-8.377024,0.045500,0.694763,-6.505419,5.997486,8.966963,2.143215,6.463114,4.311917,9.826056,-8.690885,4.132168,0.046479,-5.595664,2.041676,4.666014,3.106174,-5.789519,5.284283,-6.764342,7.211046,4.383751,3.996005,3.853775,-7.860152,-8.313627,-5.800281,5.218394,4.056970,6.309805,7.851738,3.711725,1.126859,9.086980,-0.207655,7.036112,6.331639,6.964952,-1.203410,5.147769,3.784207,0.299203,1.645743,3.941558,-6.037633,-9.695202,-3.937329,8.332370,9.623169,-7.742940,-0.942300,0.487709,-7.111141,2.897625,9.540818,2.560298,-6.926587,-5.766838,-7.945944,7.570597,-4.497483,-1.701037,6.209868,1.670190,-9.673470,-4.865608,1.012406,-1.911412,-1.679344,-8.473548,-8.631089,-1.475876,4.113476,-1.022145,2.800445,-1.334081,1.320310,-7.606219,-8.461019,6.199145,6.777954,-3.500835,-3.632505,5.933248,-5.262476,-0.613309,0.599357,0.984792,-3.786181,-9.811412,1.932523,4.737519,0.252415,7.288664,5.268528,-0.873643,4.111934,-2.440900,8.462024,-8.561451,4.451513,-0.349293,-1.998263,1.838418,-6.958117,-5.047020,1.147858,-8.779320,7.204003,-0.923385,9.299592,9.072960,6.013231,-2.044342,8.537396,-5.161187,5.040091,-3.718247,9.083420,-0.413789,1.294219,1.457007,1.546306,-0.747973,-7.808458,4.904657,9.296762,-5.287322,-7.160133,-3.495855,9.109449,2.603972,1.783104,-8.713900,1.163808,-2.453000,0.838370,1.368998,-1.807123,1.703497,9.836823,-8.317771,-6.985554,3.559763,1.156839,-8.939392,6.367315,0.740251,5.876240,6.309108,5.358199,-0.570076,4.824921,8.120197,8.582845,-5.698429,6.784839,8.610695,9.299291,4.855598,-0.200395,-5.825474,3.642550,8.962076,9.986594,1.568385,-7.250277,-0.930968,-4.788945,9.500806,-5.240577,-7.949900,-9.561079,9.468440,-6.004223,-9.619951,3.153447,-8.843473,8.137933,7.284686,-3.286230,6.310920,-0.447502,6.611774,2.521306,-8.631136,-0.684143,8.367775,3.631454,0.569282,7.134184,-8.300300,-7.267140,2.290979,-8.022977,-4.867365,-8.170340,-9.644637,3.966212,0.850892,-4.157653,9.323775,-2.568049,-3.723587,9.258918,5.143397,8.560733,2.694155,0.437003,8.047740,-3.516849,-8.498581,1.270287,3.789927,-7.081779,4.362747,0.103441,-0.562137,-7.432842,3.252154,-9.873067,-3.599004,-0.938609,8.172640,1.817340,-2.733480,-5.249594,-5.242762], dtype = "float32")#candidate|6283|(840,)|const|float32
call_6281 = relay.TupleGetItem(func_1071_call(relay.reshape(const_6282.astype('float32'), [8, 16, 4]), relay.reshape(const_6283.astype('float32'), [840,]), relay.reshape(const_6282.astype('uint64'), [8, 16, 4]), ), 0)
call_6284 = relay.TupleGetItem(func_1075_call(relay.reshape(const_6282.astype('float32'), [8, 16, 4]), relay.reshape(const_6283.astype('float32'), [840,]), relay.reshape(const_6282.astype('uint64'), [8, 16, 4]), ), 0)
uop_6285 = relay.log2(call_6281.astype('float32')) # shape=(8, 16, 4)
uop_6287 = relay.log2(call_6284.astype('float32')) # shape=(8, 16, 4)
output = relay.Tuple([call_6231,call_6262,const_6282,const_6283,uop_6285,])
output2 = relay.Tuple([call_6232,call_6263,const_6282,const_6283,uop_6287,])
func_6288 = relay.Function([], output)
mod['func_6288'] = func_6288
mod = relay.transform.InferType()(mod)
mutated_mod['func_6288'] = func_6288
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6288_call = mutated_mod.get_global_var('func_6288')
call_6289 = func_6288_call()
output = call_6289
func_6290 = relay.Function([], output)
mutated_mod['func_6290'] = func_6290
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6175_call = mod.get_global_var('func_6175')
func_6177_call = mutated_mod.get_global_var('func_6177')
call_6307 = func_6175_call()
call_6308 = func_6175_call()
output = relay.Tuple([call_6307,])
output2 = relay.Tuple([call_6308,])
func_6309 = relay.Function([], output)
mod['func_6309'] = func_6309
mod = relay.transform.InferType()(mod)
mutated_mod['func_6309'] = func_6309
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6309_call = mutated_mod.get_global_var('func_6309')
call_6310 = func_6309_call()
output = call_6310
func_6311 = relay.Function([], output)
mutated_mod['func_6311'] = func_6311
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3589_call = mod.get_global_var('func_3589')
func_3590_call = mutated_mod.get_global_var('func_3590')
call_6327 = relay.TupleGetItem(func_3589_call(), 0)
call_6328 = relay.TupleGetItem(func_3590_call(), 0)
func_3992_call = mod.get_global_var('func_3992')
func_3996_call = mutated_mod.get_global_var('func_3996')
const_6348 = relay.const([2,10,-3,10,-7,-2,-6,3,-3,-1,8,-3,-4,-7,2,6,-2,-5,9,10,-10,3,1,9,-4,1,8,4,8,9,-7,-6,-3,4,6,10,-8,-3,-8,5,7,-5,-9,-6,-2,8,2,-10,7,-9,-10,3,1,-9,2,-2,-9,3,5,4,4,9,-10,-1,3,-1,8,-2,-2,9,-4,-3,7,10,5,1,10,5,7,6,-7,-6,1,-5,9,-6,-4,-8,3,3,4,7,-4,-3,-10,4,5,4,5,10,-5,9,-5,4,-4,6,-3,-1,7,7,-10,7,-10,-5,2,1,2,-1,-8,5,-2,-2,-3,-1,5,-8,-8,4,5,2,-5,-7,6,3,2,8,8,10,-10,-2,6,2,6,-3,5,8,-10,-6,4,-2,7,2,-7,7,-3,4,10,5,-2,-6,-6,9,-1,4,-4,4,6,9,10,1,-8,5,1,-5,-10,1,7,-4,5,-6,6,-2,-9,6,-10,5,1,7,9,6,3,7,-7,8,1,-3,-5,-9,-8,6,-1,-6,-10,-6,-3,10,2,-5,8,-3,9,-6,-10,1,-8,-6,9,-3,4,-7,2,4,5,-2,-7,2,10,-2,-2,8,3,9,5,10,1,-8,-7,6,-6,-4,5,10,-3,6,9,-5,6,-2,-8,-2,-10,-2,7,-8,10,7,-10,-1,-1,-8,10,1,-1,-9,-7,-8,5,5,-1,6,-7,-7,10,-9,8,9,3,4,-5,3,-7,-1,2,-4,-1,4,-1,-4,-10,2,-10,-6,1,7,4,-9,8,1,10,-2,-6,-8,7,10,4,-5,-2,-7,10,10,1,-5,3,-10,-3,-3,-7,6,2,-1,-7,-1,9,2,2,-5,3,-4,8,-7,-6,-10,3,9,3,4,-8,8,4,9,4,-9,-6,3,-8,-4,3,1,1,1,-2,3,1,9,5,-9,2,6,-2,-1,-1,9,9,10,-8,4,-8,-9,-2,2,6,6,1,7,3,8,-5,8,4,3,-8,1,-8,5,-1,-7,10,7,5,7,-4,-10,9,-2,-5,-7,4,1,10,-1,-4,-10,-2,-4,-2,3,-5,6,2,-6,-3,-3,1,-10,-1,4,1,-8,2,8,-2,-2,5,-2,6,-3,3,7,-10,-6,9,-6,3,-3,-5,-1,-3,7,-10,2,-7,4,-3,-3,-9,-5,9,1,5,-9,7,1,-2,8,7,6,7,3,1,4,-7,10,-2,9,7,2,-7,-5,-1,-1,-3,2,6,-3,-5,1,-7,7,-2,-7,-6,4,-1,-4,-10,-3,-1,6,-2,8,-5,9,-8,9,5,-10,6,6,-10,2,-3,-6,9,4,10,-1,9,-7,6,-8,4,2,1,-9,-8,3,-3,-10,3,-6,-5,10,-6,-2,4,3,-9,10,-5,-3,10,-8,6,-7,-9,-4,9,10,-2,8,-4,4,8,-3,2,7,3,5,3,-10,5,9,-9,-1,-1,7,-10,9,2,2,-8,-6,-4,10,-2,-2,-6,3,7,-8,-3,-4,-3,-2,2,1,-4,-3,-9,-8,5,2,-8,-9,-10,-5,-2,-7,-9,2,-4,-5,3,9,-3,6,4,1,4,-8,1,-7,-2,9,-5,7,5,10,-10,-1,3,-2,7,8,7,4,-9,10,7,-5,10,2,1,-5,-8,-5,8,-7,-3,4,10,8,1,3,5,10,9,3,3,-3,8,3,5,9,-6,-8,5,8,-3,-3,10,-6,-5,-8,-8,-3,-9,2,-8,-4,6,-3,-7,8,-3,-10,6,1,-4,-2,-10,-9,-1,2,2,4,-9,10,7,8,10,-2,-2,8,1,-8,-4,9,8,5,-9,-9,-5,4,8,1,-8,4,5,7,1,7,4,3,7,-3,6,-5,-2,2,-1,-10,3,10,-6,-3,4,-2,-6,-2,2,1,9,10,5,3,-4,-4,7,-6,10,-9,1,-7,-6,-2,-6,10,-9,9,2,-7,-7,5,4,6,-3,2,-6,-3,-8,5,-9,1,5,1,2,-8,-10,2,6,-2,2,-5,3,-5,4,-6,4,3,7,-1,-4,9,-1,10,8,-6,-5,3,2,10,-7,-9,6,-2,-5,-4,-9,-5,-2,8,8,-4,-9,-3,-4,-5,9,-2,7,10,5,5,4,6,6,10,10,-6,-1,-7,2,-8,9,10,3,10,-3,-4,4,5,-4,3,-10,-2,-10,8,1,4,3,8,3,6,2,3,9,-7,4,8,10,7,-9,3,10,-1,-3,-10,6,2,-5,-5,4,9,1,4,-7,1,-5,-5,-2,-9,-5,1,5,1,-8,-6,8,4,5,3,8,-8,-10,9,3,-9,7,10,-3,1,9,8,3,9,10,1,-7,3,6,-9,2,-7,-8,-10,-10,-6,8,-8,-4,10,10,1,2,5,8,5,4,8,9,-6,-10,-9,6,1,4,-5,-5,-2,-2,5,4,9,-1,1,6,-10,10,5,5,-8,-9,3,-9,3,3,1,-5,5,-9,8,6,2,-5,5,-4,9,4,-9,7,4,7,9,-8,-10,3,-2,3,-8,-10,-8,-4,8,-1,4,-1,9,-6,2,3,10,-1,6,8,-4,-6,3,-1,9,1,9,-2,10,7,1,-5,9,-5,1,8,2,-10,-6,-9,3,10,2,2,-9,5,2,-3,7,5,-9,-3,-9,-7,4,-1,4,10,-3,-9,3,6,-5,4,5,9,-2,-7,7,-7,-8,7,10,-9,8,-9,1,6,-2,-7,10,3,10,5,3,-8,10,2,-1,-5,10,-1,7,6,-10,8,-1,-3,2,10,-10,6,-4,-10,-1,5,8,2,-7,-5,-3,6,6,7,-5,-3,5,-7,-8,-3,3,-10,-6,-6,-5,10,6,4,-3,-9,-7,-5,10,9,-8,-6,-10,2,1,1,-9,-5,-4,6,-9,-6,-7,-9,3,-4,-2,-2,9,10,-1,5,1,4,9,3,-7,4,-9,1,-3,-3,-7,7,6,-5,10,7,-10,-7,5,4,-8,-5,3,1,3,9,6,6,-5,10,-1,-7,10,-9,-3,-6,-3,-9,7,2,-1,-1,-9,10,-8,-1,9,-1,9,5,-4,2,2,-6,9,-2,-9,9,10,3,-10,-8,-10,10,-8,3,8,1,-9,10,3,10,6,1,9,-5,-8,-9,-3,-2,-8,5,2,-5,-3,1,-8,9,10,-10,-5,9,-10,-4,9,-8,-2,-2,-8,-7,5,-8,-9,-7,-6,8,-3,-7,-5,-8,8,3,8,4,6,7,-9,2,-2,7,-5,-1,1,-3,-8,3,6,4,5,10,-1,-1,-3,-10,-2,-3,1,-9,-2,9,3,6,1,-5,-9,-6,-3,-3,-9,-1,10,-2,-10,3,1,-1,-7,-6,-6,3,-8,-8,-7,9,-3,-7,-8,4,-9,-9,-1,7,-7,4,-3,-1,-7,2,-1,10,-3,9,-7,9,-9,4,-1,6,3,-3,9,7,-4,-10,2,-1,8,-6,2,-8,-4,-9,-5,-2,4,-5,1,9,-3,-4,-10,1,6,2,5,-7,4,3,-10,8,-4,7,6,-3,-8,7,-4,7,-6,-6,-10,-1,10,4,10,-5,8,10,-9,-5,1,-4,-10,5,-1,8,-5,-6,2,-6,-5,-7,-3,6,-1,7,-3,-9,4,-1,-6,-6,10,7,-3,6,-3,8,-9,6,-5,4,-5,-3,6,4,6,6,-2,-8,7,3,-7,6,5,-8,6,-10,-4,2,8,-5,-5,-8,3,2,-10,-9,-5,-4,6,3,-5,-5,-6,2,-2,-8,-5,4,4,5,-10,-2,-9,9,10,9,5,-8,-2,4,-5,-9,-9,-8,8,9,-10,-6,7,6,7,7,-3,4,-3,-7,3,1,-10,6,-2,9,6,-1,-3,2,-4,6,4,-3,10,-9,8,6,-9,-10,-9,-5,8,-8,4,-5,-1,-6,-10,-5,-8,3,4,-8,4,-6,-8,-8,8,7,7,2,2,-4,8,-3,4,4,7,-3,-1,4,1,-6,-7,2,-7,-2,4,-1,7,-1,-10,-1,9,8,4,-9,-5,5,-10,-7,-3,7,-7,2,-2,5,7,9,-1,-6,-10,-1,10,8,-4,10,-4,-5,-5,4,-9,9,4,-2,4,9,2,10,5,3,-1,-7,10,-5,-10,-10,8,2,7,9,9,7,10,-3,-5,4,-1,-2,-4,6,4,10,-7,-5,6,6,-2,9,2,6,-2,7,3,6,6,1,10,-3,-6,1,-10,9,2,3,2,5,-2,-9,2,4,9,-8,-7,-4,-7,6,2,1,-5,-9,-6,3,7,-4,-9,-6,4,-5,-7,3,-6,3,-6,5,1,-8,-10,-8,7,7,2,4,9,6,-10,2,-10,7,9,7,6,10,8,-3,10,1,-5,-8,4,-2,5,-4,9,10,3,-10,5,-5,8,10,-1,-9,-5,3,-1,6,9,2,3,-5,-9,5,7,-9,-1,-10,-7,9,6,-3,-6,-4,1,2,7,-8,4,-2,-7,-5,-7,3,4,8,-3,-10,2,-6,9,4,-7,6,-10,-4,1,-7,4,4,1,9,-5,-5,-2,-9,-6,1,-7,-7,-7,-6,-8,-7,-3,10,5,10,-10,-6,-3,-5,9,-4,-5,5,-2,8,-6,-4,-6,-2,6,10,6,-8,4,-10,1,1,-7,-6,9,-2,-1,-3,1,-9,-9,2,-6,6,6,-4,2,-1,-4,-9,-4,-8,-7,3,6,4,-10,1,-7,-7,3,-9,7,-5,8,-3,-4,9,-2,9,2,-5,2,-10,5,1,9,4,-2,6,-2,4,10,9,-6,9,-4,2,-10,-6,-10,-4,8,4,4,2,8,6,-9,-9,-5,-5,-3,-6,7,-10,8,-5,-2,8,8,-4,6,-6,4,2,-4,-10,-3,-3,-8,-9,-9,-5,-3,8,3,-10,1,3,-1,-9,-1,-5,-7,5,3,4,-8,2,-3,3,-2,4,10,3,2,8,10,8,-10,-3,-6,-5,-9,6,-7,8,3,-5,1,4,-7,-7,-4,4,-9,-6,-7,9,-10,-10,3,8,-1,-9,-10,-6,-5,-6,9,2,-9,2,3,-4,4,2,1,3,3,-4,5,2,4,-9,-7,10,-3,-4,4,9,-1,5,-1,5,2,-8,1,7,5,-8,-8,8,9,-8,-9,10,8,-3,-6,2,8,-5,10,-4,-9,-7,9,10,9,-2,5,-10,1,-1,-2,7,2,10,-7,7,7,4,-1,-7,-2,-3,-4,9,6,2,-2,-7,2,-6,-2,-4,-9,8,-5,-2,-3,-6,-10,2,-5,-4,-5,3,10,6,-2,-4,3,1,-4,-4,10,6,5,5,-2,8,4,5,-1,-10,5,6,-6,5,1,-9,-9,2,2,-5,10,2,-5,10,1,-10,3,-4,4,9,1,10,-2,6,-2,8,4,-6,10,4,-5,10,2,-9,7,4,5,-8,4,2,-4,-8,2,-7,9,8,6,3,3,-4,7,8,10,10,-9,2,3,-2,-3,1,-10,5,6,6,10,-10,6,1,-4,-1,-3,6,4,-5,9,-6,-5,-7,-9,-2,2,5,2,5,-9,8,-3,10,-6,-2,-10,-6,-9,6,7,-6,10,9,9,7,-2,10,3,1,-4,6,1,-7,-6,-8,-10,2,-8,-9,4,-7,-3,10,-6,5,3,-3,3,5,-4,-2,1,-2,4,-8,-9,5,-1,-10,-7,10,-6,6,-5,-9,-8,-3,7,-10,9,1,4,-4,4,-5,-8,-3,-7,4,-4,1,5,10,1,3,9,-2,2,9,7,-7,6,9,-2,7,5,-7,4,-2,-9,-7,-1,-3,-2,-10,-4,-5,-8,-8,-9,-6,3,-5,-3,1,4,-2,6,9,-6,6,6,4,8,-6,-7,1,6,-6,-5,-10,-7,-5,8,1,-2,5,10,2,1,5,10,7,-2,-6,-4,-7,1,-3,5,-2,-3,-5,-8,1,6,-9,-1,-4,-3], dtype = "uint16")#candidate|6348|(2240,)|const|uint16
call_6347 = relay.TupleGetItem(func_3992_call(relay.reshape(const_6348.astype('uint16'), [10, 14, 16]), relay.reshape(const_6348.astype('uint16'), [10, 14, 16]), ), 0)
call_6349 = relay.TupleGetItem(func_3996_call(relay.reshape(const_6348.astype('uint16'), [10, 14, 16]), relay.reshape(const_6348.astype('uint16'), [10, 14, 16]), ), 0)
func_4212_call = mod.get_global_var('func_4212')
func_4217_call = mutated_mod.get_global_var('func_4217')
const_6351 = relay.const([-4.754518,4.474902,-0.767614,7.277602,9.073197,-4.186447,-5.899004,8.901133,-0.632759,-0.390037,-4.498755,-3.846389,-0.269769,2.138351,-7.493929,-7.169240,-6.772405,-9.712730,1.690539,-2.901173,-7.670806,-5.605188,2.714090,-7.465740,4.485734,5.153830,8.781526,-1.022531,6.071357,3.688724,4.695573,-1.215665,-5.210421,-7.534186,-0.329388,-3.684150,-1.087425,5.607412,-2.318150,6.999882,-9.642667,9.842724,-2.542467,9.231397,0.086189,7.401577,4.010234,5.167818,-8.550830,6.562765,-8.577266,0.297643,-8.721654,-7.560284,6.419970,7.251913,-4.452999,3.828433,-9.137715,-1.321867,4.200469,-2.245018,7.301981,-3.578214,0.694999,-9.164769,9.433116,-0.493336,-6.069320,-9.655956,-7.388534,-1.101502,-7.232233,0.257566,-3.222281,1.573073,2.254998,-0.650214,6.787960,5.935494,7.833656,-6.028509,1.265556,-5.620735,6.180327,1.148343,-3.818924,-2.136296,3.257726,0.160085,4.542030,-2.820495,-3.795172,4.229679,5.724138,0.401563,-1.884379,-6.476603,-9.586512,4.630850,7.248313,-9.875154,-9.430556,7.305726,-2.226890,-5.253338,7.592151,8.908732,9.600556,8.875469,2.288103,4.207667,-0.952855,6.422146,6.659933,-6.176676,-0.502583,-8.564956,6.275740,-4.676606,4.649600,1.170264,3.052777,-2.336965,4.473367,-4.270902,-2.569078,-6.014541,4.092440,-8.681172,-0.196034,5.982032,8.161415,-4.838645,9.868119,-5.044040,7.004513,7.220403,-8.946426,4.929932,6.836461,-8.657057,-8.519809,-6.038433,7.660281,-8.748907,3.913324,-6.042313,4.760688,7.886247,3.178673,3.228770,4.766743,-8.118155,7.363214,6.808644,5.038104,-9.715697,-1.297725,4.575257,9.347193,-2.082958,1.709636,8.494035,5.827328,-9.746789,8.020478,8.045345,-8.955581,-5.821103,3.497321,2.753241,-0.439114,-6.806599,-9.321266,-8.159614,4.669507,6.857064,4.045355,-1.579206,3.034148,5.336727,-3.698707,-4.930684,-3.607952,-7.454323,-5.449267,-2.299026,-1.712234,-4.452630,-1.863743,-3.294966,7.478153,6.678958,8.191325,3.604067,-5.536436,9.870310,2.663227,1.989531,-6.228334,3.754312,2.251177,4.156541,5.013523,5.695646,-6.937104,2.265482,5.754642,-4.666011,-1.235041,2.398480,4.039669,-6.354557,-2.434631,-2.612336,9.340422,-5.101880,-3.873248,-5.455514,3.833601,8.077881,-4.147040,7.794899,2.628015,-9.045273,9.872707,-7.149697,-4.224892,9.844681,4.902075,1.239163,2.563648,0.863270,-0.300020,2.082105,8.040707,1.561225,-6.889461,7.426071,7.648728,0.120914,-3.994837,5.058292,-9.483980,2.758013,-9.800916,3.424399,-6.846439,6.666733,-1.590722,-6.110253,-3.457691,3.524837,-4.483131,-6.615665,-1.497596,-0.314810,-3.070398,5.814644,-7.830586,-9.092823,-2.519113,7.624405,-7.373190,8.468540,6.119983,9.371168,2.119386,-4.155279,5.595089,8.229807,4.690586,-8.672595,7.350369,-1.191216,6.056979,0.712848,-5.343261,-3.898024,9.909142,-7.517635,-5.758795,-5.694482,-4.928008,8.708200,-6.463242,-3.234090,7.177098,2.343068,-5.779761,-0.980817,-7.269467,6.791605,-4.578035,8.503489,7.009403,0.413425,3.859729,-2.144836,-1.667122,-3.686628,-2.280580,-8.050848,8.104626,4.772955,-3.065857,3.378929,1.953456,3.048874,7.563010,0.126625,-8.758989,-1.765321,2.572219,-0.157980,-3.079983,-3.434341,9.082168,-7.566144,-2.639817,-2.287075,-9.871303,9.726481,8.413327,9.540034,3.927480,0.550626,0.849220,-6.710294,-5.967974,4.915471,9.597141,-9.107067,-2.897984,0.060389,-4.964523,6.358697,-4.202644,-1.942120,-5.262857,-6.293395,-5.474744,2.442352,4.404330,-4.730980,-5.125873,-7.451447,2.158995,-6.184374,-9.177611,-3.092501,-9.306839,1.046324,-4.182092,-7.911113,7.733714,8.660151,-2.368698,-8.594905,-9.353859,-7.307004,-3.444979,-2.864613,4.637886,3.476476,-5.861432,-3.225808,-4.308206,4.102472,4.825075,7.670135,-5.554339,-2.856570,8.048193,-1.322309,-4.982214,9.026006,-1.908767,-2.498575,-8.342429,6.115281,-5.053545,5.047594,7.411482,2.438546,-0.914527,5.589416,7.294984,-1.260673,-5.150482,-8.282468,6.130358,5.083005,2.673049,7.464834,-4.021045,2.355827,-7.195386,8.017125,6.979886,-9.076911,0.450078,0.932073,5.011230,3.628506,-5.134309,-8.992253,7.370238,4.358119,-4.582945,4.097437,1.420858,9.360742,4.107750,3.918901,0.024847,9.301941,-6.389414,-3.845831,-6.351571,7.219061,1.165562,-0.230098,-7.940751,-8.639853,-9.670875,9.668595,-6.378275,2.771624,6.243979,-2.157472,-4.984915,9.365094,-4.854146,-2.501894,4.925159,-7.740944,-5.705855,-3.268625,-3.614071,3.460628,-8.331569,1.972654,3.724771,-9.989622,7.241290,7.490103,-9.554606,-5.581387,-3.925013,0.611592,9.847918,5.624216,-2.174095,-2.543168,-4.357519,9.129443,-3.492926,7.143936,3.451649,-5.744868,-8.865587,-0.331272,-2.966219,-8.560774,-6.404424,-8.843092,4.139532,4.945085,7.911115,-8.364282,1.613193,-6.003141,-5.842612,4.223438,-2.422665,6.721465,0.379717,6.867146,-8.591235,3.805343,-5.568373,-4.493102,8.486304,5.375272,6.430576,-6.995919,-7.285996,-2.046953,-4.266496,-6.591066,1.762111,9.691173,-1.104079,-7.554150,-9.418636,5.345154,-5.399607,-9.027639,5.771670,-8.382487,-9.388378,1.202006,-1.047776,3.471535,8.495156,1.980466,5.001332,8.530963,3.376852,4.790475], dtype = "float32")#candidate|6351|(512,)|const|float32
const_6352 = relay.const([-5.244975,6.696091,2.650667,6.201338,-2.794849,-4.962632,-6.494408,9.233566,9.295015,0.057861,-0.688178,-7.194337,-8.853783,1.287360,-5.244325,2.911393,2.019075,-5.020689,5.465890,-6.572828,-0.651180,-9.873435,-3.337600,-0.048567,-1.692108,1.851177,7.298534,-5.274378,6.022713,5.203611,-9.895446,-5.500202,-0.365352,-7.108233,-2.809059,9.970431,1.775032,-3.042120,-2.096083,1.751770,-9.587151,0.494583,8.199350,8.132624,4.279571,-0.425065,-9.336954,6.369693,-9.054499,-9.983797,-2.725183,3.696765,9.507157,-5.949464,9.632578,-8.972386,-6.958121,5.141445,2.544987,-2.384765,1.314713,-9.332130,9.585700,-4.113123,7.159140,1.798131,7.110092,0.914465,-2.250006,-1.864617,-8.092422,6.260708,-6.475618,-0.538372,5.411378,-3.570593,5.485028,-5.454468,1.336803,-1.143382,6.061552,-8.791897,0.712486,0.326430,7.926664,9.715765,-0.543885,-4.058782,9.450534,9.222614,4.002794,4.278727,-7.741500,-6.021863,6.178977,7.536877,-3.026334,5.596173,1.318673,8.404009,-4.739693,-3.201866,8.716795,2.846730,1.018049,6.622084,-1.351202,-9.782973,3.563256,-7.968692,1.876868,7.560180,-3.424895,1.194313,-6.717333,-4.857713,6.888211,0.726256,-0.153237,5.536424,8.807290,-8.658560,-7.912987,6.743827,5.177051,-4.940976,6.275737,-0.008956,-1.693960,2.556077,-1.622118,5.941245,0.576217,-3.708233,8.280917,1.877286,7.801592,-5.246704,-6.571992,0.857149,-8.228131,1.354613,7.494220,0.374849,9.552598,-3.276582,-2.980737,-0.952816,2.270992,1.338250,-7.766090,5.569394,7.893720,4.665694,7.072199,2.326297,-4.071928,7.005509,3.884740,7.240505,-7.362969,-1.786296,0.486510,-8.866295,-0.475630,3.943239,-8.486492,-3.686524,0.559241,-5.907137,-2.767860,-1.098005,-9.018462,-3.901369,-0.716814,-3.144948,-6.483196,5.751181,1.284769,-6.578851,-0.250795,8.513579,-6.217393,-0.961367,1.003076,3.368981,-6.986662,0.013394,2.322467,-5.538655,7.634609,-0.412367,-6.044413,-4.756348,4.340871,8.314838,-3.976601,4.200403,-4.113221,-7.862997,-3.845987,9.772672,9.678328,8.545213,-4.112877,-4.694294,-0.984979,0.293284,3.051786,7.555190,-7.105496,-6.686325,9.654918,-7.952335,6.314613,8.658126,-1.930708,-9.635379,6.641927,-3.571329,-0.058521,-0.374610,-7.522836,5.428183,2.201468,-0.204983,3.863778,-8.838535,-3.902845,-1.637764,-0.860254,6.442808,-4.548645,-8.933225,7.958780,9.911616,-0.291345,4.822239,-9.749934,-2.423630,9.297835,7.540915,5.884374,6.075735,-7.895085,3.521508,8.158605,5.383216,-6.495726,-2.871671,7.776031,3.025695,0.236415,-3.352178,6.711823,3.935989,6.923804,3.466383,-4.007277,5.941923,-2.017870,0.984064,8.676356,0.088237,6.253609,-9.218300,-3.249257,-8.181984,-8.147717,3.021594,2.863455,-3.362259,4.764272,3.613447,-7.823464,4.419105,9.545347,-2.857599,3.776487,-0.717162,1.015075,2.524504,0.241406,1.998782,-4.175514,6.758440,5.823942,0.515738,-0.926218,6.075567,6.380251,9.458396,8.474852,3.136926,-1.222074,2.825352,-4.460380,1.410484,-3.762192,2.452129,7.327392,-4.650996,-7.495029,7.154649,-4.337949,6.525183,5.677417,-9.002031,0.461009,-1.856231,-3.849786,4.290912,-4.211987,-2.758477,-9.477431,-3.038577,-8.012593,-0.963787,-4.299071,1.077849,-8.623361,-9.704280,-2.331966,8.277567,-0.467222,1.634162,0.558534,-4.649490,4.439144,6.354264,-1.633084,6.906002,-6.065671,-9.322382,5.082618,-8.844534,-7.988514,-1.119781,4.915266,-2.808513,5.256721,-4.314028,9.365152,-7.351517,2.851293,-2.294077,2.174555,0.138903,7.989508,-8.458090,0.737982,2.396322,3.285564,-0.786813,1.436676,5.530085,-8.105757,4.781829,-3.761050,-7.192515,9.098259,2.298485,-4.816724,9.334660,-2.602849,9.853429,-4.013454,-8.173011,-3.254571,-0.419862,3.997232,-9.468700,-7.051398,1.857206,7.495673,-1.322082,-5.076444,-5.359909,-3.800596,8.952329,7.609674,9.210773,2.318877,-0.421980,-8.639767,1.420268,-1.413792,-1.568007,2.208369,9.126509,1.875131,-3.182648,2.966568,3.613645,-8.015748,8.726831,5.512873,4.192055,-6.154082,-2.623478,-8.151520,-8.945759,2.375828,2.473840,4.634683,6.707301,4.764276,-2.979997,-9.253192,-4.498541,-9.691561,6.920354,-3.557044,-3.868132,-8.732178,-0.897090,-0.338476,6.259196,9.009681,8.126849,1.044033,7.152871,-8.237010,0.064736,7.563313,1.279082,4.442207,2.901600,9.834626,-7.035229,-5.042046,-9.109401,-5.358377,-8.920553,6.966215,-7.466545,3.639760,5.400429,6.632906,-7.212056,-2.939593,3.417167,-9.355373,-2.848539,-0.637590,4.499919,4.974877,-4.687472,6.196518,5.804742,-3.524851,6.098555,7.572716,8.097885,-5.915730,-1.008662,9.365539,-7.477861,-5.839595,4.649014,-0.020397,-1.062989,-8.423708,7.443138,8.144278,-3.270183,-7.896797,9.428259,-5.921353,-1.208783,6.507514,-7.470752,-5.270788,-9.312027,6.470464,-6.664708,1.382605,8.119129,4.223971,1.791096,5.498224,-1.438731,-7.586584,3.530634,-0.373794,1.645632,-3.401841,-8.717662,-5.668171,-0.387966,-1.630663,0.395178,5.338358,7.977845,6.634002,6.702596,0.433204,-3.326808,-5.485637,-8.164270,-1.311180,-8.727067,6.453694,3.244678,2.225093,8.989620,-1.521161,8.362453,2.562204,-3.030248,-5.514560,6.227073,3.649657,7.163103,-1.753280,-8.088278,3.715819,7.282699,6.702709,-1.001121,-8.718772,-0.263334,9.578594,-3.103072,2.657838,5.315469,3.721343,1.405632,5.495349,-7.131308,-0.478376,-7.119163,1.293661,4.887100,-3.105894,9.361914,4.663509,-4.787152,-3.432370,-7.415486,1.283006,5.541858,-2.245031,-1.669160,3.637978,9.581235,8.540596,5.494702,-9.299428,-5.741840,-1.334074,7.038437,2.223809,-5.338425,9.499853,1.321812,1.444112,7.215605,6.851549,0.920523,-4.535918,3.298815,-9.923286,-1.673919,0.553698,3.155816,-4.427139,5.916748,-5.732803,2.282142,-9.413579,5.262025,8.975576,-3.684845,-6.657779,1.035313,-8.221156,-0.871551,0.164449,9.701197,6.196615,0.322658,-2.044322,-7.085759,-2.280994,-7.393543,-5.506714,-0.756246,-6.444406,1.592216,-4.460961,5.494239,6.239357,1.560764,-7.127408,3.703394,-7.240563,2.372227,7.309609,9.849719,-6.977946,3.656984,0.424261,-2.843794,-3.813348,-4.208785,1.873857,5.715255,-4.203334,8.508217,-4.551799,-4.973330,1.084550,2.822589,9.340838,0.657403,-8.089323,6.748826,-5.767661,0.657649,2.416033,-5.752512,5.908389,4.886523,-7.961497,-0.403607,8.043999,5.323994,-4.610290,7.173762,-0.853364,7.659934,2.228216,-9.087527,5.034771,-1.113030,-0.575109,4.203512,4.401953,7.789240,0.534423,-2.883453,-7.697473,-0.964132,-7.831660,9.979950,-6.283322,9.182317,4.016220,8.259212,1.258191,9.235262,-7.697961,3.279181,5.371672,-5.158151,-8.351605,5.519553,-5.663425,8.603822,1.819194,9.631793,-1.427685,-0.617282,7.404769,-7.771127,4.154827,-8.102223,-9.769125,7.065970,-1.873891,-2.504404,-7.321989,2.633588,4.940161,8.625032,5.373197,-7.593542,6.282471,7.792289,2.281842,5.526609,0.162098,-4.101932,5.154588,5.437580,4.892182,-9.352283,1.600379,7.603469,4.911875,-6.802851,4.725988,-6.086574,7.638471,0.843896,6.572199,7.325130,-0.367595,-3.708169,-3.895267,6.960015,7.203789,2.688987,-8.681492,-4.008042,-8.320774,-9.724629,0.637923,-0.144822,3.067776,7.972849,9.715846,9.236935,0.218145,0.049535,-6.771300,5.671812,7.450505,-3.825318,1.925063,2.698037,1.398180,-6.998946,-7.769620,0.908132,-5.199488,-2.820156,-2.375172,-3.314343,0.983071,9.515768,-3.617969,0.771761,8.655340,8.219209,-2.723795,-4.301184,7.434035,9.250706,-6.655355,6.073506,8.477437,-1.215223,5.273974,9.012469,-9.802563,-2.760674,-5.145993,-1.626573,-7.817105,-4.380729,-3.433351,-8.459106,4.585675,3.940372,2.187411,9.088253,-7.300234,-8.118727,-4.349046,-8.907650,-0.724561,1.494676,8.610180,-2.352350,-7.990269,-6.570816,-8.472666,-7.378619,-3.016802,2.632580,-1.128788,3.903080,-3.028898,-7.531253,0.628034,6.010072,-2.316230,-8.051540,3.866000,4.546441,-1.206681,-2.759423,-7.056733,-7.850657,5.962366,-6.340654,-8.156214,-8.235515,9.765797,6.122769,-9.152479,-8.581725,-9.697785,-4.852412,-7.681660,7.566492,6.509305,9.099680,-5.445156,5.114230,7.635602,0.383618,2.642869,-7.518107,-5.366966,4.272852,-1.311705,3.796689,9.231741,-9.851255,1.618109,-3.123189,-4.857269,2.745278,0.457808,-6.724354,-8.147650,1.456624,0.834566,1.508380,2.329589,-3.231951,-9.519835,-2.245437,1.833522,5.261917,-6.411521,-1.402470,0.755973,9.785608,-6.892336,6.409439,1.972973,-9.481921,-4.357946,9.126161,-4.181697,-7.109541], dtype = "float32")#candidate|6352|(840,)|const|float32
call_6350 = relay.TupleGetItem(func_4212_call(relay.reshape(call_6327.astype('float32'), [5, 15, 12]), relay.reshape(call_6327.astype('float64'), [5, 15, 12]), relay.reshape(const_6351.astype('float32'), [512,]), relay.reshape(const_6352.astype('float32'), [840,]), ), 8)
call_6353 = relay.TupleGetItem(func_4217_call(relay.reshape(call_6327.astype('float32'), [5, 15, 12]), relay.reshape(call_6327.astype('float64'), [5, 15, 12]), relay.reshape(const_6351.astype('float32'), [512,]), relay.reshape(const_6352.astype('float32'), [840,]), ), 8)
uop_6360 = relay.rsqrt(call_6350.astype('float32')) # shape=(512,)
uop_6362 = relay.rsqrt(call_6353.astype('float32')) # shape=(512,)
uop_6364 = relay.acosh(uop_6360.astype('float64')) # shape=(512,)
uop_6366 = relay.acosh(uop_6362.astype('float64')) # shape=(512,)
bop_6381 = relay.bitwise_or(uop_6364.astype('int32'), relay.reshape(uop_6360.astype('int32'), relay.shape_of(uop_6364))) # shape=(512,)
bop_6384 = relay.bitwise_or(uop_6366.astype('int32'), relay.reshape(uop_6362.astype('int32'), relay.shape_of(uop_6366))) # shape=(512,)
func_5766_call = mod.get_global_var('func_5766')
func_5771_call = mutated_mod.get_global_var('func_5771')
var_6388 = relay.var("var_6388", dtype = "uint8", shape = (490, 3))#candidate|6388|(490, 3)|var|uint8
call_6387 = relay.TupleGetItem(func_5766_call(relay.reshape(var_6388.astype('uint8'), [490, 3]), relay.reshape(const_6352.astype('float32'), [840,]), relay.reshape(var_6388.astype('float32'), [490, 3]), relay.reshape(var_6388.astype('float32'), [490, 3]), ), 6)
call_6389 = relay.TupleGetItem(func_5771_call(relay.reshape(var_6388.astype('uint8'), [490, 3]), relay.reshape(const_6352.astype('float32'), [840,]), relay.reshape(var_6388.astype('float32'), [490, 3]), relay.reshape(var_6388.astype('float32'), [490, 3]), ), 6)
func_3285_call = mod.get_global_var('func_3285')
func_3287_call = mutated_mod.get_global_var('func_3287')
call_6396 = relay.TupleGetItem(func_3285_call(), 0)
call_6397 = relay.TupleGetItem(func_3287_call(), 0)
bop_6406 = relay.greater_equal(uop_6360.astype('bool'), relay.reshape(bop_6381.astype('bool'), relay.shape_of(uop_6360))) # shape=(512,)
bop_6409 = relay.greater_equal(uop_6362.astype('bool'), relay.reshape(bop_6384.astype('bool'), relay.shape_of(uop_6362))) # shape=(512,)
func_779_call = mod.get_global_var('func_779')
func_782_call = mutated_mod.get_global_var('func_782')
const_6422 = relay.const([6,5,-7,6,-10,9,-10,3,-3,-6,-3,10,-4,2,-8,7,6,-6,3,-8,-3,-2,5,6,10,-1,-3,-7,-1,-6,-3,-1,-4,-1,-10,-1,7,7,9,-4,-7,9,5,8,6,-3,8,-7,2,1,-10,-5,4,-1,-5,-1,7,2,-8,7,8,-5,3,-1,4,5,2,1,1,-10,-6,-7,-3,-6,-3,6,-3,8,-5,-1,10,-10,-5,10,-4,2,-3,2,10,-8,-1,2,5,9,10,-8,-5,3,-3,8,7,-5,7,-8,-9,9,1,3,-3,6,4,6,-6,1,-3,-5,7,1,-1,-2,-5,10,4,10,8,3,-3,1,-9,7,9,2,-3,-1,-2,-3,-6,1,-6,9,10,-6,-2,-10,-9,-1,-10,4,6,10,-8,4,-7,4,-7,-1,-7,-10,6,-8,-7,-3,3,-4,3,-8,-10,7,-9,-3,5,5,-3,-9,-3,1,-9,10,-4,-3,-2,-9,5,-10,-8,3,8,-3,3,7,-10,-9,-5,-3,5,5,8,10,4,8,-4,5,-10,-3,4,-10,-10,-5,8,-3,3,2,6,5,-3,-1,-5,-9,9,-10,1,7,-7,-6,10,9,1,-5,5,-6,2,-5,6,-3,-5,-7,-1,8,9,-4,-5,-4,-8,3,6,2,-9,-6,1,1,2,-2,6,-2,4,-6,3,-5,-7,-4,10,-3,-3,5,2,-9,7,9,1,-8,9,6,-2,-5,-9,-1,5,9,7,-1,1,-3,-3,-10,4,-1,-10,9,6,-10,-10,-6,-9,2,-9,4,3,8,8,2,6,8,-10,7,-8,-3,-9,3,5,3,6,-4,5,-7,-10,6,2,-1,9,-10,-8,-7,-3,-7,4,2,7,3,10,6,10,-7,6,-7,-7,-3,-2,-3,1,-3,10,-8,-3,-1,-2,-4,-9,-7,8,-1,2,9,-6,-9,2,3,7,-1,2,-5,6,-9,8,-9,1,-1,-6,7,5,-9,7,-9,3,7,9,-2,-9,2,-8,-2,-1,-1,5,8,-5,-7,7,9,5,7,-5,-2,9,-2,5,3,-8,2,6,3,5,6,-7,3,-10,-7,7,-1,-3,3,-8,-3,-3,-2,-3,2,7,1,4,6,-4,1,4,10,-7,-5,-9,1,-3,5,-8,-5,7,-6,10,7,9,-7,-1,2,10,-3,8,-5,5,-7,6,-7,-8,6,-9,1,-4,-10,-7,-3,2,6,-7,2,-10,6,-1,-9,-10,-8,-1,-6,9,-7,10,1,-5,-3,9,-8,-6,-5,9,-7,-10,-7,-4,-3,1,-7,-2,-5,7,-1,5,5,6,-8,3,-4,-8,3,6,-3,10,9,10,10,4,-6,-3,-10,-9,3,-4,7,2,4,-10,6,-10,-3,-9,-8,8,-3,4,-9,-2,7,3,-7,-5,-2,9,4,-5,10,10,8,-3,-9,2,10,-4,9,-2,-2,-9,-4,4,-8,5,-4,7,4,-3,-4,3,-1,2,6,-8,3,-5,-4,4,-10,1,5,6,-5,-2,-5,3,-4,8,9,8,-1], dtype = "int32")#candidate|6422|(576,)|const|int32
call_6421 = func_779_call(relay.reshape(const_6422.astype('int32'), [8, 9, 8]))
call_6423 = func_779_call(relay.reshape(const_6422.astype('int32'), [8, 9, 8]))
func_4018_call = mod.get_global_var('func_4018')
func_4019_call = mutated_mod.get_global_var('func_4019')
call_6428 = func_4018_call()
call_6429 = func_4018_call()
func_4338_call = mod.get_global_var('func_4338')
func_4339_call = mutated_mod.get_global_var('func_4339')
call_6437 = func_4338_call()
call_6438 = func_4338_call()
func_4018_call = mod.get_global_var('func_4018')
func_4019_call = mutated_mod.get_global_var('func_4019')
call_6441 = func_4018_call()
call_6442 = func_4018_call()
func_3409_call = mod.get_global_var('func_3409')
func_3411_call = mutated_mod.get_global_var('func_3411')
var_6449 = relay.var("var_6449", dtype = "bool", shape = (216,))#candidate|6449|(216,)|var|bool
call_6448 = relay.TupleGetItem(func_3409_call(relay.reshape(var_6449.astype('bool'), [6, 4, 9])), 0)
call_6450 = relay.TupleGetItem(func_3411_call(relay.reshape(var_6449.astype('bool'), [6, 4, 9])), 0)
output = relay.Tuple([call_6327,call_6347,const_6348,const_6351,const_6352,call_6387,var_6388,call_6396,bop_6406,call_6421,const_6422,call_6428,call_6437,call_6441,call_6448,var_6449,])
output2 = relay.Tuple([call_6328,call_6349,const_6348,const_6351,const_6352,call_6389,var_6388,call_6397,bop_6409,call_6423,const_6422,call_6429,call_6438,call_6442,call_6450,var_6449,])
func_6452 = relay.Function([var_6388,var_6449,], output)
mod['func_6452'] = func_6452
mod = relay.transform.InferType()(mod)
mutated_mod['func_6452'] = func_6452
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6452_call = mutated_mod.get_global_var('func_6452')
var_6454 = relay.var("var_6454", dtype = "uint8", shape = (490, 3))#candidate|6454|(490, 3)|var|uint8
var_6455 = relay.var("var_6455", dtype = "bool", shape = (216,))#candidate|6455|(216,)|var|bool
call_6453 = func_6452_call(var_6454,var_6455,)
output = call_6453
func_6456 = relay.Function([var_6454,var_6455,], output)
mutated_mod['func_6456'] = func_6456
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6494 = relay.var("var_6494", dtype = "uint64", shape = ())#candidate|6494|()|var|uint64
var_6495 = relay.var("var_6495", dtype = "uint64", shape = (1, 4))#candidate|6495|(1, 4)|var|uint64
bop_6496 = relay.bitwise_xor(var_6494.astype('uint64'), var_6495.astype('uint64')) # shape=(1, 4)
output = relay.Tuple([bop_6496,])
output2 = relay.Tuple([bop_6496,])
func_6519 = relay.Function([var_6494,var_6495,], output)
mod['func_6519'] = func_6519
mod = relay.transform.InferType()(mod)
mutated_mod['func_6519'] = func_6519
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6519_call = mutated_mod.get_global_var('func_6519')
var_6521 = relay.var("var_6521", dtype = "uint64", shape = ())#candidate|6521|()|var|uint64
var_6522 = relay.var("var_6522", dtype = "uint64", shape = (1, 4))#candidate|6522|(1, 4)|var|uint64
call_6520 = func_6519_call(var_6521,var_6522,)
output = call_6520
func_6523 = relay.Function([var_6521,var_6522,], output)
mutated_mod['func_6523'] = func_6523
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3249_call = mod.get_global_var('func_3249')
func_3250_call = mutated_mod.get_global_var('func_3250')
call_6546 = func_3249_call()
call_6547 = func_3249_call()
output = call_6546
output2 = call_6547
func_6551 = relay.Function([], output)
mod['func_6551'] = func_6551
mod = relay.transform.InferType()(mod)
output = func_6551()
func_6552 = relay.Function([], output)
mutated_mod['func_6552'] = func_6552
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6572 = relay.var("var_6572", dtype = "float64", shape = (7, 14, 6))#candidate|6572|(7, 14, 6)|var|float64
uop_6573 = relay.cosh(var_6572.astype('float64')) # shape=(7, 14, 6)
func_5031_call = mod.get_global_var('func_5031')
func_5032_call = mutated_mod.get_global_var('func_5032')
call_6575 = func_5031_call()
call_6576 = func_5031_call()
bop_6580 = relay.left_shift(uop_6573.astype('int16'), relay.reshape(var_6572.astype('int16'), relay.shape_of(uop_6573))) # shape=(7, 14, 6)
output = relay.Tuple([call_6575,bop_6580,])
output2 = relay.Tuple([call_6576,bop_6580,])
func_6594 = relay.Function([var_6572,], output)
mod['func_6594'] = func_6594
mod = relay.transform.InferType()(mod)
mutated_mod['func_6594'] = func_6594
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6595 = relay.var("var_6595", dtype = "float64", shape = (7, 14, 6))#candidate|6595|(7, 14, 6)|var|float64
func_6594_call = mutated_mod.get_global_var('func_6594')
call_6596 = func_6594_call(var_6595)
output = call_6596
func_6597 = relay.Function([var_6595], output)
mutated_mod['func_6597'] = func_6597
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6599 = relay.var("var_6599", dtype = "int64", shape = (3, 4, 6))#candidate|6599|(3, 4, 6)|var|int64
const_6600 = relay.const([[[4,9,4,8,3,2],[10,-6,5,9,9,9],[-3,7,-7,-5,10,3],[-2,-7,-2,-7,-10,-1]],[[8,-2,-1,-8,-5,2],[-3,-3,10,6,-8,-1],[2,3,10,9,-1,-4],[-10,-7,-9,-9,5,-3]],[[9,-9,6,7,7,-2],[-3,-4,9,-7,2,8],[-2,-2,-10,-3,8,-5],[-1,4,2,4,4,10]]], dtype = "int64")#candidate|6600|(3, 4, 6)|const|int64
bop_6601 = relay.minimum(var_6599.astype('int64'), relay.reshape(const_6600.astype('int64'), relay.shape_of(var_6599))) # shape=(3, 4, 6)
output = bop_6601
output2 = bop_6601
func_6618 = relay.Function([var_6599,], output)
mod['func_6618'] = func_6618
mod = relay.transform.InferType()(mod)
var_6619 = relay.var("var_6619", dtype = "int64", shape = (3, 4, 6))#candidate|6619|(3, 4, 6)|var|int64
output = func_6618(var_6619)
func_6620 = relay.Function([var_6619], output)
mutated_mod['func_6620'] = func_6620
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4913_call = mod.get_global_var('func_4913')
func_4914_call = mutated_mod.get_global_var('func_4914')
call_6685 = relay.TupleGetItem(func_4913_call(), 0)
call_6686 = relay.TupleGetItem(func_4914_call(), 0)
func_6519_call = mod.get_global_var('func_6519')
func_6523_call = mutated_mod.get_global_var('func_6523')
const_6689 = relay.const(-9, dtype = "uint64")#candidate|6689|()|const|uint64
var_6690 = relay.var("var_6690", dtype = "uint64", shape = (4, 1))#candidate|6690|(4, 1)|var|uint64
call_6688 = relay.TupleGetItem(func_6519_call(relay.reshape(const_6689.astype('uint64'), []), relay.reshape(var_6690.astype('uint64'), [1, 4]), ), 0)
call_6691 = relay.TupleGetItem(func_6523_call(relay.reshape(const_6689.astype('uint64'), []), relay.reshape(var_6690.astype('uint64'), [1, 4]), ), 0)
func_4263_call = mod.get_global_var('func_4263')
func_4266_call = mutated_mod.get_global_var('func_4266')
const_6705 = relay.const([-9.095588,-8.609984,-3.491959,2.134661,2.995993,-2.729987,-0.322606,-8.946002,-3.434546,-8.434723,0.005898,7.104583,9.168694,-5.357476,-7.627436,-4.666752,-3.815835,4.112366,-2.771611,-6.578849,-3.582635,9.741929,-3.635420,-3.719614,6.586225,0.356833,-8.031160,-3.801835,-0.845940,-4.386621,4.764953,-0.059587,1.371053,6.667057,-2.322802,-3.701958,-4.884227,1.522395,9.474122,0.541857,0.541699,8.973954,2.566695,5.722312,-3.839341,-9.946199,-9.291978,0.673344,-8.924382,8.062447,5.410147,0.563049,-5.826874,-5.128161,-5.057192,-3.109225,-3.135236,-5.085999,5.580727,-8.245201,4.862180,-3.397022,3.578657,-9.192751,-6.868607,-6.345224,7.619666,5.557555,-0.044393,3.713589,1.417093,-0.562164,3.234200,1.467719,3.871303,3.354038,-9.661633,-2.645655,5.533315,1.838875,1.207642,9.470902,9.658372,-6.261036,6.255567,6.977427,7.751196,-1.344776,-9.736917,-0.643892,6.781575,-6.913705,3.158215,9.995820,7.109150,-5.288033,-4.932397,4.404646,-7.914880,-7.357885,4.670239,-0.752243,3.439164,-6.826226,-2.991109,6.768416,-2.851738,8.009308,3.585213,-4.741888,1.715229,0.227495,2.133256,6.317755,-1.905171,9.055594,2.371452,-1.469908,-8.272616,-4.301994,8.742895,1.804254,-2.461578,3.164570,9.938381,-0.533676,-7.780182,8.646109,2.625949,5.593488,-0.195520,9.313124,-5.021362,-4.450316,-3.655558,3.939055,8.005845,4.194674,1.626613,9.758535,8.678935,1.015683,7.650253,9.117857,-0.887166,-6.835971,1.023765,-7.252439,1.784658,-8.934533,-8.369633,-8.721071,-2.197651,5.068534,-7.365091,4.313582,-7.881664,-8.388852,9.551474,-8.502788,-6.775461,-0.922858,4.076646,-7.103519,3.952924,-2.591396,-2.492071,1.667881,6.309232,6.597414,8.045439,7.614499,6.811512,5.970707,8.603969,-0.124093,-6.649241,3.392161,-4.412246,1.696251,-9.470167,1.392981,-7.457163,-6.344703,7.442874,0.432630,-1.794675,-7.091210,-3.548589,-6.956350,-5.208047,-3.369346,7.779100,-5.595145,2.312600,9.560472,0.895665,-1.070362,-9.994252,4.068357,-6.248336,-3.967359,6.192366,3.792081,1.597769,0.559793,-1.790324,-0.922515,6.661433,4.419316,-6.863302,3.074562,3.747333,4.864230,-3.998947,7.041220,-5.702452,7.106783,2.139826,8.397623,-5.639276,-2.462553,-3.636300,-2.250949,8.184222,-7.345812,-2.299511,0.998682,-2.965375,5.296333,-6.148319,2.205804,1.859760,-3.972923,8.860306,5.014874,3.296763,6.357444,-2.594017,8.539783,1.361967,-9.362049,3.903989,-5.879318,-2.677210,-8.034107,-1.156021,5.932689,-7.694362,-1.450599,-2.870409,7.671476,6.821677,1.685868,-0.405099,9.688527,3.048868,-4.210669,-3.898034,-5.716685,-7.826236,6.474868,-6.208354,-7.451373,-7.695744,2.097683,-3.866556,-4.706854,8.621750,-4.768047,7.847227,1.112191,8.882918,6.209495,-0.839625,-4.918784,8.676143,-1.432123,2.649763,-5.952889,3.575836,-3.101036,3.532649,-4.681120,-1.660792,-5.952264,-5.038158,-9.246816,6.147492,0.710347,8.613137,3.636324,1.428058,3.525656,-5.365113,8.567398,7.118003,-6.693235,-0.277984,6.387569,8.060145,-4.088658,8.623413,0.696475,5.865205,0.112893,-7.469819,3.457605,-8.655141,-8.351437,-3.420859,-6.512601,8.430235,-0.660102,9.273876,2.385401,-8.496098,5.419879,-8.478965,-0.205687,6.177636,2.876793,-4.475286,-5.376428,6.304923,-9.841115,-2.019452,0.848603,0.589962,0.919713,4.080410,1.248653,6.826541,6.619374,4.551317,7.135588,7.744584,-6.706956,3.191521,-3.866737,-5.131930,-6.025870,-6.261810,-8.563636,-6.895040,-7.809603,-9.197959,0.818479,-9.460248,-0.137564,-1.059698,9.628555,-3.496802,-0.071603,-7.090524,-7.382665,0.013518,4.135951,-2.849327,9.366723,6.134592,-2.495908,0.150624,5.697630,-1.073882,7.019149,4.337058,7.690182,-8.630420,9.933529,-1.755094,5.856233,3.486658,4.074316,3.978220,-3.461976,5.393815,-6.347992,-8.293498,-1.216313,9.256692,8.886138,-0.701170,-7.158857,-7.026634,4.041616,2.205131,-8.070338,9.040797,-3.344171,-3.434736,-1.126268,9.936778,-1.287240,-5.216781,9.229650,-1.531666,8.928331,5.876362,-1.841135,8.885469,-5.292148,-0.496885,9.041927,5.084030,-0.502001,-0.600102,7.278912,-5.086808,4.396545,-2.111553,-7.323414,-0.965482,-4.356773,-0.072570,6.264471,-5.363738,-0.829498,2.038390,9.421896,-7.429324,-1.062969,-8.519180,-3.954152,-4.752597,0.509342,-2.910401,1.736098,0.312010,-5.992196,-9.270493,-9.579677,-5.045017,-3.342368,-1.085620,-8.778655,3.657522,-3.352318,-0.026022,-0.147662,-8.924103,8.087064,-6.040628,6.066455,-6.289033,0.624986,-5.599563,-7.061809,-3.465363,-9.417639,-9.470713,5.651325,1.980986,9.629764,2.866367,-1.187187,6.345224,-2.815239,9.585807,-6.268359,-1.141351,-2.133150,4.516678,1.634600,8.611531,-0.451412,-6.683348,-1.998922,2.846878,4.843525,5.468940,5.837816,5.381013,-4.046572,5.425945,7.257657,-3.359365,-1.621619,-9.576401,-5.151088,0.794311,4.068878,-8.822519,-9.570023,1.568577,-1.949841,0.364852,8.800065,-3.555939,6.267421,-2.231666,3.491992,4.237904,-4.075511,4.712027,9.614905,-7.809646,-6.005765,-7.659960,-8.234883,-0.234936,6.085097,-3.755098,-6.932312,-9.127224,4.383802,-4.618508,-5.625318,-1.528870,2.228501,9.717390,9.285711,1.477614,-1.897434,-4.495428,3.097524,-2.431814,-3.328725,-1.679631,5.609016,9.950775,2.141125,2.371774,1.904797,8.143536,2.481287,0.444050,-9.513432,-7.701970,4.558734,2.909877,7.227972,1.067817,9.135453,-1.794263,-5.909792,5.551575,-5.764292,6.768439,-5.918082,-3.106355,4.662077,-2.983010,6.360003,4.402486,3.071605,2.855579,-8.682239,4.980609,-6.350179,-2.605202,9.496940,7.388566,-3.300498,6.715191,3.766763,-5.753582,0.246915,-6.960680,4.927334,1.003277,-8.839760,3.223644,2.104167,-5.042093,-7.652025,9.669259,-4.060362,2.167403,7.964128,-3.098320,9.951593,-3.657948,7.065694,8.313210,-1.011919,-5.858522,8.378573,3.849633,-5.180765,5.978827,-3.683218,-8.266131,8.909679,4.488186,-3.791238,5.550101,-0.919190,-5.331439,-3.330575,-9.670261,1.703707,4.282790,-3.629902,7.759656,6.190914,9.341691,1.594376,-8.413457,-3.609487,-6.438734,9.453616,-8.423334,8.656126,-2.508496,-5.561929,-4.860237,1.455862,-8.211213,-3.082237,-0.362949,-5.265210,3.202702,2.504982,-8.850155,2.387665,-6.589020,-0.763749,-2.207163,5.966793,9.037620,6.880944,0.144502,-9.416045,-6.042036,-4.321725,-3.296374,-6.543405,-8.808042,2.767162,1.121018,1.286728,-8.476839,-5.450959,7.386186,5.967793,4.058844,-2.740129,3.591727,1.363184,8.915640,-3.107836,-9.578715,7.968348,-5.705799,-7.377900,5.583537,1.734487,5.618037,-7.112057,2.790498,-8.712021,-5.183510,-8.343120,9.330763,7.620357,3.855657,-2.634211,9.943244,-6.303457,-4.056445,2.028219,7.759283,1.665667,9.529593,6.931011,7.328476,4.248721,8.161690,6.820769,9.564122,9.393705,-9.646445,8.311603,-4.718144,6.658341,-1.429205,-9.902543,8.061078,-7.236767,-6.816590,-1.794792,9.316359,3.883094,7.938794,8.032261,-0.811883,7.068980,-3.956345,-0.114585,-3.873830,-4.304489,-5.454499,-8.104520,-3.170713,-6.997659,9.805249,0.562025,0.965143,8.434193,1.940055,4.195139,6.769252,6.873356,3.990068,-6.607905,0.122710,-7.489904,-6.576462,-9.552712,-8.891765,1.834010,5.382593,-4.048809,5.564517,9.819478,5.037528,-4.756639,9.492738,-9.422303,9.177005,-6.447257,9.471611,9.264009,-2.011215,9.567932,-3.271867,-4.704330,7.550741,-8.148478,-2.972514,6.832335,6.277434,-6.487038,7.143782,8.476991,-2.491197,-6.724942,6.426350,7.983890,2.553985,-6.480597,0.807381,3.696687,2.599428,9.261025,5.395235,1.680369,5.839306,8.413852,1.750899,2.029670,-5.683225,4.879226,3.292009,2.469309,0.294070,0.284540,-5.540626,7.880949,-9.497477,1.794151,-5.124819,-7.559148,1.161395,-8.015132,4.279420,-7.733047,3.001704,8.611405,-2.327087,1.741339,-1.941555,-5.704784,6.852907,-7.270396,-7.598977,1.217763,6.839441,-5.562778,6.214259,2.702291,3.788469,9.821130,4.910209,8.390080,8.680960,-9.875631,6.576223,1.698909,-8.225820,3.260430,6.629499,1.234314,-2.429920,1.134539,2.165763,-4.241643,-8.109396,4.494623,-1.071674,5.364990,-8.967682,7.147446,-4.873971,-5.335620,0.323878,-6.607387,4.959276,5.362608,9.454480,9.052025,7.282536,2.818058,6.834923,4.265562,-8.498400,-9.278434,-7.806285,-5.627786,-3.858045,-2.754647,-3.097138,-0.752190,-7.255328,-2.457521,3.688429,-5.822806,9.506186,-1.557665,5.478738,7.542828,6.757345,-0.120857,2.082144,-3.892738,1.848464,3.255586,1.360719,5.912576], dtype = "float32")#candidate|6705|(840,)|const|float32
call_6704 = relay.TupleGetItem(func_4263_call(relay.reshape(const_6705.astype('float32'), [840,])), 3)
call_6706 = relay.TupleGetItem(func_4266_call(relay.reshape(const_6705.astype('float32'), [840,])), 3)
func_5514_call = mod.get_global_var('func_5514')
func_5515_call = mutated_mod.get_global_var('func_5515')
call_6709 = relay.TupleGetItem(func_5514_call(), 0)
call_6710 = relay.TupleGetItem(func_5515_call(), 0)
func_3936_call = mod.get_global_var('func_3936')
func_3939_call = mutated_mod.get_global_var('func_3939')
var_6719 = relay.var("var_6719", dtype = "uint8", shape = (52,))#candidate|6719|(52,)|var|uint8
const_6720 = relay.const([-7,-5,8,-8,5,10,2,8,5,-7,-7,-6,6,5,-4,-2,-1,-6,6,5,5,1,-1,-7,4,-1,-2,9,-6,3,5,3,-6,-5,10,2,-5,-5,5,-5,8,2,-6,8,-5,3,8,-4,-2,-5,-10,2,-3,2,-8,8,6,6,1,3,6,-6,2,9,10,10,4,-3,-8,-6,3,-2,4,-10,-3,8,1,-6,-3,-8,-10,3,10,-10,3,3,-9,-7,-7,5,10,-1,-9,-3,-1,-7,9,6,6,-8,-1,-6,-7,3], dtype = "uint8")#candidate|6720|(104,)|const|uint8
call_6718 = relay.TupleGetItem(func_3936_call(relay.reshape(var_6719.astype('uint8'), [52,]), relay.reshape(const_6720.astype('uint8'), [104,]), ), 5)
call_6721 = relay.TupleGetItem(func_3939_call(relay.reshape(var_6719.astype('uint8'), [52,]), relay.reshape(const_6720.astype('uint8'), [104,]), ), 5)
func_6083_call = mod.get_global_var('func_6083')
func_6084_call = mutated_mod.get_global_var('func_6084')
call_6723 = func_6083_call()
call_6724 = func_6083_call()
var_6726 = relay.var("var_6726", dtype = "float64", shape = (5, 15, 12))#candidate|6726|(5, 15, 12)|var|float64
bop_6727 = relay.add(call_6709.astype('uint32'), relay.reshape(var_6726.astype('uint32'), relay.shape_of(call_6709))) # shape=(5, 15, 12)
bop_6730 = relay.add(call_6710.astype('uint32'), relay.reshape(var_6726.astype('uint32'), relay.shape_of(call_6710))) # shape=(5, 15, 12)
output = relay.Tuple([call_6685,call_6688,const_6689,var_6690,call_6704,const_6705,call_6718,var_6719,const_6720,call_6723,bop_6727,])
output2 = relay.Tuple([call_6686,call_6691,const_6689,var_6690,call_6706,const_6705,call_6721,var_6719,const_6720,call_6724,bop_6730,])
func_6733 = relay.Function([var_6690,var_6719,var_6726,], output)
mod['func_6733'] = func_6733
mod = relay.transform.InferType()(mod)
mutated_mod['func_6733'] = func_6733
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6733_call = mutated_mod.get_global_var('func_6733')
var_6735 = relay.var("var_6735", dtype = "uint64", shape = (4, 1))#candidate|6735|(4, 1)|var|uint64
var_6736 = relay.var("var_6736", dtype = "uint8", shape = (52,))#candidate|6736|(52,)|var|uint8
var_6737 = relay.var("var_6737", dtype = "float64", shape = (5, 15, 12))#candidate|6737|(5, 15, 12)|var|float64
call_6734 = func_6733_call(var_6735,var_6736,var_6737,)
output = call_6734
func_6738 = relay.Function([var_6735,var_6736,var_6737,], output)
mutated_mod['func_6738'] = func_6738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6309_call = mod.get_global_var('func_6309')
func_6311_call = mutated_mod.get_global_var('func_6311')
call_6744 = relay.TupleGetItem(func_6309_call(), 0)
call_6745 = relay.TupleGetItem(func_6311_call(), 0)
func_4960_call = mod.get_global_var('func_4960')
func_4961_call = mutated_mod.get_global_var('func_4961')
call_6749 = relay.TupleGetItem(func_4960_call(), 2)
call_6750 = relay.TupleGetItem(func_4961_call(), 2)
func_5348_call = mod.get_global_var('func_5348')
func_5350_call = mutated_mod.get_global_var('func_5350')
call_6753 = relay.TupleGetItem(func_5348_call(), 1)
call_6754 = relay.TupleGetItem(func_5350_call(), 1)
output = relay.Tuple([call_6744,call_6749,call_6753,])
output2 = relay.Tuple([call_6745,call_6750,call_6754,])
func_6761 = relay.Function([], output)
mod['func_6761'] = func_6761
mod = relay.transform.InferType()(mod)
output = func_6761()
func_6762 = relay.Function([], output)
mutated_mod['func_6762'] = func_6762
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6309_call = mod.get_global_var('func_6309')
func_6311_call = mutated_mod.get_global_var('func_6311')
call_6803 = relay.TupleGetItem(func_6309_call(), 0)
call_6804 = relay.TupleGetItem(func_6311_call(), 0)
func_718_call = mod.get_global_var('func_718')
func_721_call = mutated_mod.get_global_var('func_721')
var_6806 = relay.var("var_6806", dtype = "float32", shape = (840,))#candidate|6806|(840,)|var|float32
call_6805 = func_718_call(relay.reshape(var_6806.astype('float32'), [8, 7, 15]))
call_6807 = func_718_call(relay.reshape(var_6806.astype('float32'), [8, 7, 15]))
func_3492_call = mod.get_global_var('func_3492')
func_3495_call = mutated_mod.get_global_var('func_3495')
const_6811 = relay.const([-4,2,-9,1,-8,9,-3,-9,-2,9,-10,9,9,3,-8,7,5,9,6,1,3,3,-5,-2,9,-10,-6,-6,2,-4,8,-2,1,-6,-3,1,6,-3,6,-10,1,-5,1,-1,-1,-3,6,-3,-7,4,-3,-8], dtype = "uint8")#candidate|6811|(52,)|const|uint8
var_6812 = relay.var("var_6812", dtype = "uint8", shape = (104,))#candidate|6812|(104,)|var|uint8
call_6810 = func_3492_call(relay.reshape(const_6811.astype('uint8'), [4, 1, 13]), relay.reshape(var_6812.astype('uint8'), [4, 2, 13]), )
call_6813 = func_3492_call(relay.reshape(const_6811.astype('uint8'), [4, 1, 13]), relay.reshape(var_6812.astype('uint8'), [4, 2, 13]), )
output = relay.Tuple([call_6803,call_6805,var_6806,call_6810,const_6811,var_6812,])
output2 = relay.Tuple([call_6804,call_6807,var_6806,call_6813,const_6811,var_6812,])
func_6822 = relay.Function([var_6806,var_6812,], output)
mod['func_6822'] = func_6822
mod = relay.transform.InferType()(mod)
var_6823 = relay.var("var_6823", dtype = "float32", shape = (840,))#candidate|6823|(840,)|var|float32
var_6824 = relay.var("var_6824", dtype = "uint8", shape = (104,))#candidate|6824|(104,)|var|uint8
output = func_6822(var_6823,var_6824,)
func_6825 = relay.Function([var_6823,var_6824,], output)
mutated_mod['func_6825'] = func_6825
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6761_call = mod.get_global_var('func_6761')
func_6762_call = mutated_mod.get_global_var('func_6762')
call_6827 = relay.TupleGetItem(func_6761_call(), 0)
call_6828 = relay.TupleGetItem(func_6762_call(), 0)
func_3492_call = mod.get_global_var('func_3492')
func_3495_call = mutated_mod.get_global_var('func_3495')
const_6836 = relay.const([8,3,-8,2,2,-7,-9,-10,4,-3,9,1,3,8,-10,7,4,3,10,1,1,1,-3,-1,6,-1,1,6,8,1,-2,5,6,-7,5,-8,-10,-8,-1,-1,4,-2,6,10,4,9,8,2,-5,-10,-1,-7], dtype = "uint8")#candidate|6836|(52,)|const|uint8
const_6837 = relay.const([-3,4,9,-7,-3,-1,-6,-4,2,10,8,5,4,-8,6,-5,-2,-4,-7,4,-4,4,-1,-5,-2,7,2,8,7,-8,5,-1,-2,-10,7,-2,-10,-3,7,-3,4,-9,-3,4,-2,4,-4,8,1,-9,-3,-1,9,3,-1,5,8,4,10,3,10,3,2,2,-9,-2,-3,-5,-5,8,-5,-5,-8,4,9,-4,-5,-3,-8,10,9,2,-5,4,-5,9,-7,1,-5,3,-2,-3,4,6,4,-1,-10,-2,-10,-6,-9,5,9,-1], dtype = "uint8")#candidate|6837|(104,)|const|uint8
call_6835 = func_3492_call(relay.reshape(const_6836.astype('uint8'), [4, 1, 13]), relay.reshape(const_6837.astype('uint8'), [4, 2, 13]), )
call_6838 = func_3492_call(relay.reshape(const_6836.astype('uint8'), [4, 1, 13]), relay.reshape(const_6837.astype('uint8'), [4, 2, 13]), )
output = relay.Tuple([call_6827,call_6835,const_6836,const_6837,])
output2 = relay.Tuple([call_6828,call_6838,const_6836,const_6837,])
func_6855 = relay.Function([], output)
mod['func_6855'] = func_6855
mod = relay.transform.InferType()(mod)
mutated_mod['func_6855'] = func_6855
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6855_call = mutated_mod.get_global_var('func_6855')
call_6856 = func_6855_call()
output = call_6856
func_6857 = relay.Function([], output)
mutated_mod['func_6857'] = func_6857
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5998_call = mod.get_global_var('func_5998')
func_5999_call = mutated_mod.get_global_var('func_5999')
call_6882 = relay.TupleGetItem(func_5998_call(), 0)
call_6883 = relay.TupleGetItem(func_5999_call(), 0)
var_6892 = relay.var("var_6892", dtype = "float64", shape = (5, 15, 12))#candidate|6892|(5, 15, 12)|var|float64
bop_6893 = relay.greater_equal(call_6882.astype('bool'), relay.reshape(var_6892.astype('bool'), relay.shape_of(call_6882))) # shape=(5, 15, 12)
bop_6896 = relay.greater_equal(call_6883.astype('bool'), relay.reshape(var_6892.astype('bool'), relay.shape_of(call_6883))) # shape=(5, 15, 12)
output = bop_6893
output2 = bop_6896
func_6897 = relay.Function([var_6892,], output)
mod['func_6897'] = func_6897
mod = relay.transform.InferType()(mod)
mutated_mod['func_6897'] = func_6897
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6898 = relay.var("var_6898", dtype = "float64", shape = (5, 15, 12))#candidate|6898|(5, 15, 12)|var|float64
func_6897_call = mutated_mod.get_global_var('func_6897')
call_6899 = func_6897_call(var_6898)
output = call_6899
func_6900 = relay.Function([var_6898], output)
mutated_mod['func_6900'] = func_6900
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5031_call = mod.get_global_var('func_5031')
func_5032_call = mutated_mod.get_global_var('func_5032')
call_6902 = func_5031_call()
call_6903 = func_5031_call()
output = call_6902
output2 = call_6903
func_6930 = relay.Function([], output)
mod['func_6930'] = func_6930
mod = relay.transform.InferType()(mod)
output = func_6930()
func_6931 = relay.Function([], output)
mutated_mod['func_6931'] = func_6931
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4913_call = mod.get_global_var('func_4913')
func_4914_call = mutated_mod.get_global_var('func_4914')
call_6978 = relay.TupleGetItem(func_4913_call(), 0)
call_6979 = relay.TupleGetItem(func_4914_call(), 0)
output = call_6978
output2 = call_6979
func_6982 = relay.Function([], output)
mod['func_6982'] = func_6982
mod = relay.transform.InferType()(mod)
output = func_6982()
func_6983 = relay.Function([], output)
mutated_mod['func_6983'] = func_6983
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5998_call = mod.get_global_var('func_5998')
func_5999_call = mutated_mod.get_global_var('func_5999')
call_6986 = relay.TupleGetItem(func_5998_call(), 1)
call_6987 = relay.TupleGetItem(func_5999_call(), 1)
func_6855_call = mod.get_global_var('func_6855')
func_6857_call = mutated_mod.get_global_var('func_6857')
call_6992 = relay.TupleGetItem(func_6855_call(), 0)
call_6993 = relay.TupleGetItem(func_6857_call(), 0)
output = relay.Tuple([call_6986,call_6992,])
output2 = relay.Tuple([call_6987,call_6993,])
func_7001 = relay.Function([], output)
mod['func_7001'] = func_7001
mod = relay.transform.InferType()(mod)
mutated_mod['func_7001'] = func_7001
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7001_call = mutated_mod.get_global_var('func_7001')
call_7002 = func_7001_call()
output = call_7002
func_7003 = relay.Function([], output)
mutated_mod['func_7003'] = func_7003
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4351_call = mod.get_global_var('func_4351')
func_4353_call = mutated_mod.get_global_var('func_4353')
call_7015 = relay.TupleGetItem(func_4351_call(), 0)
call_7016 = relay.TupleGetItem(func_4353_call(), 0)
output = call_7015
output2 = call_7016
func_7022 = relay.Function([], output)
mod['func_7022'] = func_7022
mod = relay.transform.InferType()(mod)
mutated_mod['func_7022'] = func_7022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7022_call = mutated_mod.get_global_var('func_7022')
call_7023 = func_7022_call()
output = call_7023
func_7024 = relay.Function([], output)
mutated_mod['func_7024'] = func_7024
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3589_call = mod.get_global_var('func_3589')
func_3590_call = mutated_mod.get_global_var('func_3590')
call_7057 = relay.TupleGetItem(func_3589_call(), 0)
call_7058 = relay.TupleGetItem(func_3590_call(), 0)
func_4434_call = mod.get_global_var('func_4434')
func_4439_call = mutated_mod.get_global_var('func_4439')
const_7060 = relay.const([5.975380,-3.636655,-0.778873,8.635779,5.816341,3.789513,-5.333504,4.142194,-1.693870,1.237319,-3.227971,0.085650,-8.109970,5.040325,3.711841,-0.293773,-2.190405,-7.896557,-9.391341,-4.505702,2.660691,-2.027433,0.042557,4.124890,-1.534926,6.016070,-9.177794,-9.121460,-4.735456,1.394643,4.503036,-7.506087,-5.097412,-6.282107,5.172268,-2.908566,-1.084377,-3.232964,-8.816547,-4.743091,-0.039530,-2.696482,-4.801228,9.666021,-5.207674,3.687915,-8.209939,-3.275152,-7.114507,7.026293,1.877418,3.170864,-7.696320,9.660982,9.782385,2.305714,-5.874216,6.805815,7.755568,5.441393,1.149580,9.218875,-9.982826,-4.266957,-0.156016,-2.554676,9.955772,-1.116730,3.634854,-3.727164,4.952599,-7.678602,2.047467,-6.229603,-4.020896,0.456206,-0.278018,-5.529117,-5.626345,-3.869663,-3.587739,-5.175137,-3.373927,-0.733919,6.419611,-4.140579,-7.341709,-2.043474,-2.735363,-9.176165,-5.878920,-9.928824,-5.692276,1.452960,0.727436,-8.945242,7.771727,0.261661,0.966278,5.914070,0.898358,1.894330,1.765813,1.757693,-9.443626,-1.069097,1.061331,-7.508661,8.051809,-3.206311,6.466900,1.355900,-6.041368,-3.562676,-3.281112,-1.953969,1.095549,1.986319,9.361442,5.588724,3.607023,-7.370936,-4.921484,-9.858546,-4.982188,3.306556,9.514084,-3.495714,5.972201,0.081234,4.111230,2.690435,4.477751,8.806649,-7.312257,0.326030,-2.324560,-6.617746,-3.368291,8.996117,-9.038791,-2.994215,3.105227,9.080322,6.690156,-8.672885,-4.333160,7.757245,-0.879062,-1.820894,8.315718,-7.737293,3.768892,0.519620,-3.555963,-4.159408,7.968960,-7.339531,-9.100927,3.556627,4.899685,-1.631605,-3.888025,1.229677,-0.367775,8.094141,5.802094,9.785624,-8.008968,-3.165388,8.970690,0.523794,4.947263,6.422610,7.734531,5.504763,-2.122119,-6.964150,-4.073562,-9.209712,6.079871,-2.745232,0.589579,3.564207,-3.999996,-3.163428,4.425483,-1.733741,-3.492573,-2.575909,7.301945,-3.403344,4.254296,-2.714167,-2.635111,-4.939577,-2.370104,0.201785,-2.330346,9.497156,-9.508518,7.194201,-5.234724,9.900468,5.934901,-0.255827,9.151856,0.524914,-3.781384,-6.222612,-6.475706,-1.440141,-5.099801,-7.685560,3.102153,3.335802,-3.377139,2.948461,4.530137,7.504985,-1.614224,5.079782,-9.911455,-2.738923,-4.485156,7.368196,0.764398,5.252669,3.476154,-8.229632,3.958428,1.618822,-1.242751,-0.245992,8.358662,6.577894,-1.511454,7.200860,4.725397,0.019795,0.883024,-6.437731,-4.604302,-3.297413,4.027977,-3.874968,-9.432282,-5.450742,-2.910745,-3.250859,-9.365253,2.098184,-0.886331,2.480895,-9.460726,5.316307,-8.524916,-8.068919,3.887740,-6.030640,-8.053158,-1.926416,-3.784720,7.357947,2.957150,-5.329712,0.887124,-4.298612,8.590996,8.012648,-9.952506,3.730073,-9.995683,-7.913101,-8.827224,2.181784,7.867138,9.010907,-0.115931,2.667660,1.163696,-6.229478,1.566782,-4.173670,-5.391491,8.645979,3.364841,4.120054,-2.573770,5.223377,8.106688,0.294717,-8.882035,-7.000543,-1.175199,5.510434,-0.273784,-0.165638,-5.919731,-5.148904,0.684602,-9.258706,-0.621423,-2.796668,9.516738,6.498574,-5.174269,3.729091,7.798197,-7.945307,6.735253,6.465629,7.264237,-8.068708,1.392231,-0.951069,-4.895175,1.291823,2.183162,6.641124,3.464904,1.050645,-9.903163,3.822576,-1.683874,8.532073,5.571684,9.335397,-5.980102,-1.559158,-8.016044,-0.210505,6.158371,0.182276,-5.592510,2.924777,1.154358,0.324710,-6.700485,-6.175111,-1.666017,-8.339465,-8.653846,-4.437430,0.695501,-0.150129,-9.764969,-3.918423,-6.648926,-9.760943,6.471575,2.941602,-2.618890,-0.722000,2.451802,3.691281,-0.619619,5.319072,-1.741224,0.471109,-6.776873,1.627797,1.054499,9.310602,-4.227146,-2.267518,4.716127,-0.942584,-8.876836,-1.920420,7.366241,-2.385079,-5.144494,2.847008,3.880754,-1.356680,-6.265112,-7.350809,-8.228441,-2.062304,0.777724,-8.480297,-1.097105,-2.352351,7.806626,-3.280252,8.737673,-0.802724,-7.855710,-9.109433,-3.616470,6.754141,-4.012752,-7.388576,7.240834,1.029328,9.673998,-5.987379,9.104842,5.211745,2.635514,6.953373,-1.861131,-3.372122,4.243278,-4.066914,-5.355359,2.749493,-3.590548,4.208678,-2.849538,-6.482574,-0.076979,1.353056,-3.124152,-6.445032,-8.162972,-9.892844,1.728386,3.199586,2.861495,-8.177310,5.838736,-6.056656,-6.484115,-2.496572,1.839856,-1.459416,2.968888,1.382680,-3.707160,5.567840,3.626235,8.292440,7.849346,-5.969153,6.878062,-6.686812,-7.051579,-2.737558,-8.923553,3.503797,4.908358,7.014314,2.278190,-4.024661,-3.003025,-7.161410,9.617023,-2.905002,-5.713072,4.857569,6.189673,-6.593345,8.930814,-5.246271,9.650429,8.406701,-4.893420,9.977670,3.997372,6.426843,-8.177262,9.061109,-3.476454,-2.570518,-7.152000,-9.630547,9.779085,3.211922,8.609291,-0.496003,4.574705,8.118230,-6.002818,1.078483,5.769388,2.434483,-5.629646,6.781460,-1.756069,6.110566,-0.675721,-5.158712,4.073716,-2.149092,-7.828089,0.911618,-6.995677,4.742683,-5.358716,-7.620991,6.398476,0.790143,-0.398357,-2.347877,-0.471412,-4.955322,7.853646,-8.693040,-9.283759,1.815454,6.364532,1.076686,-5.914662,-4.135156,3.966919,-9.000948,-5.841953,5.660133,-8.812164,3.542106,8.343578,8.475286,-9.534394,9.446264,-5.156789,7.940029,-1.333009,7.892778,3.810830,5.305490,-4.885623,-3.250399,4.013325,-4.716830,5.702851,-1.994565,9.941842,-9.568839,4.990437,-4.309795,-7.869344,2.685322,-9.794255,5.902743,-6.886309,3.280808,-4.797530,5.822310,2.089725,-1.685949,4.389531,3.192026,-9.642127,-5.518255,-9.178691,-7.694543,6.547573,2.204593,-9.339962,6.675355,3.713212,-4.113521,-5.767548,6.997976,7.827341,9.050534,-8.157059,5.927914,-1.494214,-2.113999,-6.257531,2.277295,-4.988546,-4.616842,-2.792012,7.987918,-5.294644,4.665534,8.056257,-1.606483,-9.544781,1.849472,-5.969827,-3.744133,-8.166502,7.859770,7.841961,-8.394370,2.365264,-6.007096,8.739481,3.216412,8.327298,-8.646478,9.246075,7.698616,-8.781767,-5.801504,7.222296,1.813672,4.122125,0.889625,-7.680316,-7.004581,-9.323806,8.993887,-8.335024,3.109972,2.602576,-4.514672,-2.606942,3.679219,-8.106892,9.527145,-6.457465,-2.201879,-2.366731,-4.730112,7.895676,-0.055303,8.552463,4.629552,1.623344,-7.044015,5.467207,1.314924,-2.343926,-8.791127,6.416137,5.767386,9.878549,4.923961,2.582073,-2.985613,1.426594,-8.301216,-6.024608,-6.307125,-9.848795,-5.525965,-0.925531,1.876213,-5.851391,9.197699,8.157330,4.772802,-9.154974,-5.844304,-8.398789,8.259748,-2.703634,9.862283,9.545742,-1.181088,-3.487248,6.145687,-0.471755,2.252376,7.209833,-8.292943,4.607212,1.388689,6.599710,1.347246,-5.774600,3.799692,-8.283188,9.639185,-6.871184,2.600481,-9.739421,1.468006,3.154941,-2.153739,-2.108521,-8.377705,-9.963179,7.193466,1.538603,-6.453047,6.327754,-1.337722,-4.929249,-0.058228,8.453236,2.406096,-9.117596,3.951085,7.333139,-2.145910,-4.282725,-7.410368,-4.457666,-8.877350,-6.893667,3.053002,-5.466269,-0.681458,3.524297,-0.813761,-4.100251,7.501567,-9.993068,0.814880,-1.697725,1.320863,-4.093354,6.317465,-0.252775,-6.484504,-6.823844,-8.223779,-4.978207,1.791434,7.053333,-6.557733,0.416607,0.616267,-3.945688,-0.779472,-5.284391,-7.175421,3.203516,-1.738234,9.817231,-4.366945,-4.090688,1.163969,7.443531,4.819126,-7.351282,1.089062,1.753476,6.524854,4.401015,-4.656243,-4.275305,-8.065485,-0.967765,6.199410,8.851448,-7.687653,-5.099611,-2.440764,-5.441627,9.794422,-7.470535,3.401287,0.229198,3.232369,-0.007506,-1.557505,-0.951214,-3.844890,0.823832,0.967302,9.880775,3.221490,3.740111,-1.938190,7.003244,-0.486770,-4.041617,8.211857,-6.204539,-6.985257,-8.717602,2.516064,1.166126,2.839616,1.709534,2.880954,-1.219749,2.897612,2.655148,-4.391470,3.130731,-0.354143,-0.560169,3.760585,-1.697787,9.522652,-6.344522,-9.017097,-2.872444,9.171690,-1.045346,-6.733623,2.165969,-3.999562,9.370108,5.274694,4.317240,-8.589721,1.221329,-9.515737,5.364500,-2.006486,2.719447,1.865924,-6.620512,0.642034,-3.717712,-6.896283,2.966411,-8.550702,8.362729,9.175314,9.153878,-0.593051,9.180960,-0.166428,-4.319880,9.026792,4.644381,8.252475,5.004089,-2.317433,-7.535476,3.752668,6.140106,4.561720,7.970448,9.893226,-1.994440,6.545620,6.257391,5.007050,-6.726163,4.333532,2.338434,5.666751,6.763425,-1.406510,-4.609244,-1.000857,4.342302,-0.965659,-5.255212,9.342867,1.033042,3.479210,1.268900,-1.441293,9.852903,8.281039,-9.722269,3.500396], dtype = "float32")#candidate|7060|(840,)|const|float32
const_7061 = relay.const([3,8,6,-1,-3,-6,-10,-7,-3,9,-6,-5,3,1,5,2,1,-7,5,-5,-8,3,4,-4,4,-6,-4,-7,10,-4,7,-4,-5,-9,-6,1,5,-4,5,6,1,-2,-3,-4,7,10,4,-4,5,-9,8,-7], dtype = "uint8")#candidate|7061|(52,)|const|uint8
const_7062 = relay.const([-2,8,2,9,6,2,-7,-8,3,-10,-10,10,6,-3,-1,-5,-3,-2,-4,-8,3,10,7,6,1,8,-1,-5,6,-9,10,-1,-6,-7,-4,-1,-7,6,1,5,-7,5,1,4,-10,6,6,-3,10,3,9,2,4,-9,1,-7,6,6,-4,5,-3,3,10,-10,-10,-6,-6,2,-6,7,6,6,7,-7,4,4,3,-5,-7,-3,9,-5,-8,6,-9,-3,-6,5,5,-6,-4,-4,-2,-1,-3,6,-4,6,-10,-9,-5,4,-3,7], dtype = "uint8")#candidate|7062|(104,)|const|uint8
call_7059 = relay.TupleGetItem(func_4434_call(relay.reshape(const_7060.astype('float32'), [840,]), relay.reshape(const_7061.astype('uint8'), [52,]), relay.reshape(const_7062.astype('uint8'), [104,]), ), 1)
call_7063 = relay.TupleGetItem(func_4439_call(relay.reshape(const_7060.astype('float32'), [840,]), relay.reshape(const_7061.astype('uint8'), [52,]), relay.reshape(const_7062.astype('uint8'), [104,]), ), 1)
var_7072 = relay.var("var_7072", dtype = "uint8", shape = (104,))#candidate|7072|(104,)|var|uint8
bop_7073 = relay.multiply(const_7062.astype('int32'), relay.reshape(var_7072.astype('int32'), relay.shape_of(const_7062))) # shape=(104,)
output = relay.Tuple([call_7057,call_7059,const_7060,const_7061,bop_7073,])
output2 = relay.Tuple([call_7058,call_7063,const_7060,const_7061,bop_7073,])
func_7107 = relay.Function([var_7072,], output)
mod['func_7107'] = func_7107
mod = relay.transform.InferType()(mod)
mutated_mod['func_7107'] = func_7107
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7108 = relay.var("var_7108", dtype = "uint8", shape = (104,))#candidate|7108|(104,)|var|uint8
func_7107_call = mutated_mod.get_global_var('func_7107')
call_7109 = func_7107_call(var_7108)
output = call_7109
func_7110 = relay.Function([var_7108], output)
mutated_mod['func_7110'] = func_7110
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4890_call = mod.get_global_var('func_4890')
func_4891_call = mutated_mod.get_global_var('func_4891')
call_7112 = func_4890_call()
call_7113 = func_4890_call()
output = call_7112
output2 = call_7113
func_7122 = relay.Function([], output)
mod['func_7122'] = func_7122
mod = relay.transform.InferType()(mod)
output = func_7122()
func_7123 = relay.Function([], output)
mutated_mod['func_7123'] = func_7123
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5031_call = mod.get_global_var('func_5031')
func_5032_call = mutated_mod.get_global_var('func_5032')
call_7187 = func_5031_call()
call_7188 = func_5031_call()
output = relay.Tuple([call_7187,])
output2 = relay.Tuple([call_7188,])
func_7194 = relay.Function([], output)
mod['func_7194'] = func_7194
mod = relay.transform.InferType()(mod)
output = func_7194()
func_7195 = relay.Function([], output)
mutated_mod['func_7195'] = func_7195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4567_call = mod.get_global_var('func_4567')
func_4568_call = mutated_mod.get_global_var('func_4568')
call_7227 = relay.TupleGetItem(func_4567_call(), 0)
call_7228 = relay.TupleGetItem(func_4568_call(), 0)
func_4845_call = mod.get_global_var('func_4845')
func_4847_call = mutated_mod.get_global_var('func_4847')
call_7255 = relay.TupleGetItem(func_4845_call(), 2)
call_7256 = relay.TupleGetItem(func_4847_call(), 2)
output = relay.Tuple([call_7227,call_7255,])
output2 = relay.Tuple([call_7228,call_7256,])
func_7259 = relay.Function([], output)
mod['func_7259'] = func_7259
mod = relay.transform.InferType()(mod)
output = func_7259()
func_7260 = relay.Function([], output)
mutated_mod['func_7260'] = func_7260
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4845_call = mod.get_global_var('func_4845')
func_4847_call = mutated_mod.get_global_var('func_4847')
call_7296 = relay.TupleGetItem(func_4845_call(), 0)
call_7297 = relay.TupleGetItem(func_4847_call(), 0)
func_6288_call = mod.get_global_var('func_6288')
func_6290_call = mutated_mod.get_global_var('func_6290')
call_7298 = relay.TupleGetItem(func_6288_call(), 4)
call_7299 = relay.TupleGetItem(func_6290_call(), 4)
func_6010_call = mod.get_global_var('func_6010')
func_6011_call = mutated_mod.get_global_var('func_6011')
call_7305 = func_6010_call()
call_7306 = func_6010_call()
const_7322 = relay.const([[[9.597376,-9.258022,-3.972494,-8.364164],[-2.049750,9.766713,7.105024,-6.676356],[-3.503666,1.157229,5.815833,0.950552],[3.089472,-7.181120,-9.931788,-2.010611],[-5.951328,4.588082,-7.963645,0.944177],[-3.117684,-4.764881,1.875418,-2.725469],[-5.113331,5.071977,5.544618,-4.792849],[0.551353,8.194108,-3.512815,-1.479510],[-1.245481,2.430849,2.046936,-8.949599],[4.492739,6.418463,0.453479,-5.844832],[-8.369258,-3.663647,-5.378380,-6.581390],[5.840801,-0.209291,5.433604,-5.725822],[-1.050687,-7.328194,-0.572414,8.357276],[3.739040,-0.850415,6.363741,-2.212739],[-3.527879,6.678806,-2.265666,-8.439779],[6.746721,0.065855,9.098417,-6.836064]],[[-6.296065,-9.258673,1.807470,-8.940307],[-7.934331,-0.621568,-0.344012,0.730168],[6.930574,5.472327,-6.934523,0.719920],[-5.954423,8.005552,-8.724881,-2.723154],[-5.764205,3.918118,-0.972342,1.346723],[-8.055460,-6.416483,-1.260440,8.855495],[-0.829898,5.082918,-3.413421,-8.758071],[-3.186837,8.860676,-6.832801,8.698479],[-3.536552,-7.025543,-1.627040,6.519999],[0.196044,1.019634,-3.687465,6.800882],[-4.112376,4.005685,7.083354,9.537516],[7.576247,-2.847096,-5.317299,2.503922],[-4.015377,-9.059223,6.414004,8.281004],[7.047866,-9.767340,2.024324,9.147964],[1.221712,4.251499,-2.160081,-3.518628],[0.075591,5.172542,-9.536121,-0.645634]],[[0.365175,3.309083,-0.617469,8.940127],[-0.119714,6.110226,-0.435667,9.202999],[-6.046435,-5.267922,8.907480,-0.425086],[-0.385194,8.119038,-8.416644,1.899121],[-0.473397,-7.965357,-0.377223,-0.929265],[-8.450902,-9.400538,-3.873435,-0.647222],[-3.418100,-8.538976,5.689321,-5.248095],[-4.482582,-9.870548,0.978732,-4.886204],[-6.498082,0.537212,0.830201,3.027453],[3.432806,-0.054631,1.415340,-5.174359],[4.514499,-0.095260,-4.624310,-0.276221],[-3.220985,2.387108,3.280448,7.997196],[6.168047,-1.840521,-0.811585,-1.434927],[6.600206,-3.871545,5.261574,7.822476],[7.325182,3.656674,-2.154709,-1.243343],[-5.628677,2.584697,-6.058051,6.931535]],[[7.465451,-0.890476,-4.054083,1.273971],[2.955683,-8.704559,7.924113,8.136970],[0.313614,-4.513867,1.668874,-6.631574],[-7.984994,1.649259,-5.408051,-9.633771],[-1.705933,-4.340559,2.815852,-3.804162],[3.131436,4.116823,-9.378672,9.066633],[5.698662,-3.379587,-9.356323,-3.705265],[-7.415627,6.903788,6.683919,-9.133365],[-1.505362,-6.909464,-3.530514,-9.148600],[5.460466,-1.016923,6.215185,-0.550218],[5.010946,5.723210,1.616463,9.150331],[1.875392,4.299432,-1.386113,-4.089643],[-3.631024,8.413042,2.775300,-1.081150],[0.373137,8.324303,-4.449037,-6.972097],[-1.122249,8.978964,9.720413,3.445521],[-5.164358,5.874990,-6.548345,3.920857]],[[-1.947070,5.175139,7.755285,8.444114],[4.536847,8.017228,-1.664226,8.039088],[9.772273,-5.475151,2.080894,7.478423],[-0.606910,1.966228,-9.560900,6.395825],[8.810616,-5.578821,-1.261050,0.896042],[-5.700198,6.462314,-8.931560,5.188901],[-6.804781,6.293980,8.821638,0.705193],[6.802747,-2.331605,4.487907,8.805358],[2.492023,8.602148,5.217950,8.048247],[1.983394,-9.088254,5.803684,3.289627],[6.030318,-8.585224,9.388047,6.836274],[-8.109763,-1.438750,9.272161,-7.916842],[-6.733609,1.725172,-1.646162,4.413694],[9.115565,-6.045860,-7.077977,-1.821367],[-1.813366,-7.934623,-6.218042,-2.662474],[-7.367073,4.639527,-0.741626,-3.190871]],[[9.789703,-2.682058,-5.441234,-0.423057],[0.438441,-7.767652,-4.546642,-6.459705],[5.732286,9.353368,-5.444878,-6.390197],[-3.785971,-4.822734,6.085738,7.689848],[-3.503347,3.678361,-2.055792,1.101425],[-1.846852,4.335058,-5.884250,7.443549],[-9.712258,-9.249054,-4.462117,9.948889],[-1.222534,-1.164791,-1.542820,-9.055903],[8.202940,6.086994,9.127161,-2.686217],[8.869741,2.792039,6.058008,2.539837],[4.141544,-5.558262,1.362756,-5.527575],[0.840112,6.978588,1.564002,5.422112],[3.879937,-5.922573,7.058284,-8.221213],[-8.859185,-7.946042,-4.899352,0.451963],[6.709022,-4.770820,-1.371690,-1.216165],[3.855053,7.047139,-7.519865,9.436697]],[[-8.046718,-2.079028,-7.651238,-4.508072],[-1.727513,-5.666562,-7.446184,-1.081194],[3.357635,-4.045303,-2.627358,-2.224614],[0.770010,-2.487597,-5.111740,3.942979],[2.200017,-1.456910,1.304956,-8.513243],[0.113301,-5.892064,-0.383296,-5.280659],[8.452866,1.072680,7.642379,4.834368],[-7.416279,-6.382438,-9.529441,7.849081],[-1.197056,3.665775,-2.271957,1.866083],[9.747634,3.527485,2.698213,0.166813],[8.685913,-2.211709,-7.704371,1.315135],[3.890143,1.299641,8.700230,4.620827],[-0.952114,9.583848,-2.680846,4.704058],[3.908609,6.347744,-1.584471,7.168325],[-1.487933,-2.140304,-0.214092,8.977707],[-9.100551,2.374826,1.128188,8.542832]],[[0.957410,-2.117275,4.928476,7.549079],[-9.041219,8.117616,-8.859537,-9.680200],[-4.482531,5.969943,-5.286872,-7.758082],[-7.973597,8.405964,-8.970418,6.836283],[9.273737,3.316805,8.700241,8.282247],[-8.270838,-2.203389,-9.376203,0.038869],[-5.919914,5.982087,2.170325,3.126126],[5.827558,6.956491,5.768644,9.135852],[-7.221766,3.877263,-9.599801,6.780065],[-4.019968,3.262420,6.548751,8.633787],[7.391641,-5.619505,9.415628,-1.781259],[-3.444127,-6.704060,1.648082,0.636591],[6.555852,0.120057,3.874007,-4.913598],[1.225673,-2.090639,-1.146657,-0.322503],[-1.588126,-0.847330,-7.119457,-5.026687],[-7.323434,-4.611871,0.776252,5.778132]]], dtype = "float32")#candidate|7322|(8, 16, 4)|const|float32
bop_7323 = relay.maximum(call_7298.astype('int16'), relay.reshape(const_7322.astype('int16'), relay.shape_of(call_7298))) # shape=(8, 16, 4)
bop_7326 = relay.maximum(call_7299.astype('int16'), relay.reshape(const_7322.astype('int16'), relay.shape_of(call_7299))) # shape=(8, 16, 4)
uop_7338 = relay.log10(bop_7323.astype('float32')) # shape=(8, 16, 4)
uop_7340 = relay.log10(bop_7326.astype('float32')) # shape=(8, 16, 4)
uop_7341 = relay.sin(uop_7338.astype('float64')) # shape=(8, 16, 4)
uop_7343 = relay.sin(uop_7340.astype('float64')) # shape=(8, 16, 4)
uop_7348 = relay.asin(uop_7338.astype('float64')) # shape=(8, 16, 4)
uop_7350 = relay.asin(uop_7340.astype('float64')) # shape=(8, 16, 4)
uop_7351 = relay.exp(uop_7338.astype('float32')) # shape=(8, 16, 4)
uop_7353 = relay.exp(uop_7340.astype('float32')) # shape=(8, 16, 4)
output = relay.Tuple([call_7296,call_7305,uop_7341,uop_7348,uop_7351,])
output2 = relay.Tuple([call_7297,call_7306,uop_7343,uop_7350,uop_7353,])
func_7361 = relay.Function([], output)
mod['func_7361'] = func_7361
mod = relay.transform.InferType()(mod)
output = func_7361()
func_7362 = relay.Function([], output)
mutated_mod['func_7362'] = func_7362
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7361_call = mod.get_global_var('func_7361')
func_7362_call = mutated_mod.get_global_var('func_7362')
call_7419 = relay.TupleGetItem(func_7361_call(), 1)
call_7420 = relay.TupleGetItem(func_7362_call(), 1)
output = call_7419
output2 = call_7420
func_7422 = relay.Function([], output)
mod['func_7422'] = func_7422
mod = relay.transform.InferType()(mod)
output = func_7422()
func_7423 = relay.Function([], output)
mutated_mod['func_7423'] = func_7423
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6761_call = mod.get_global_var('func_6761')
func_6762_call = mutated_mod.get_global_var('func_6762')
call_7438 = relay.TupleGetItem(func_6761_call(), 2)
call_7439 = relay.TupleGetItem(func_6762_call(), 2)
func_6761_call = mod.get_global_var('func_6761')
func_6762_call = mutated_mod.get_global_var('func_6762')
call_7451 = relay.TupleGetItem(func_6761_call(), 2)
call_7452 = relay.TupleGetItem(func_6762_call(), 2)
bop_7453 = relay.bitwise_and(call_7451.astype('uint64'), relay.reshape(call_7438.astype('uint64'), relay.shape_of(call_7451))) # shape=(2, 5, 12)
bop_7456 = relay.bitwise_and(call_7452.astype('uint64'), relay.reshape(call_7439.astype('uint64'), relay.shape_of(call_7452))) # shape=(2, 5, 12)
output = bop_7453
output2 = bop_7456
func_7457 = relay.Function([], output)
mod['func_7457'] = func_7457
mod = relay.transform.InferType()(mod)
mutated_mod['func_7457'] = func_7457
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7457_call = mutated_mod.get_global_var('func_7457')
call_7458 = func_7457_call()
output = call_7458
func_7459 = relay.Function([], output)
mutated_mod['func_7459'] = func_7459
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7470 = relay.var("var_7470", dtype = "bool", shape = (13, 2, 5))#candidate|7470|(13, 2, 5)|var|bool
var_7471 = relay.var("var_7471", dtype = "bool", shape = (13, 2, 5))#candidate|7471|(13, 2, 5)|var|bool
bop_7472 = relay.logical_or(var_7470.astype('bool'), relay.reshape(var_7471.astype('bool'), relay.shape_of(var_7470))) # shape=(13, 2, 5)
bop_7500 = relay.logical_xor(var_7471.astype('int16'), relay.reshape(var_7470.astype('int16'), relay.shape_of(var_7471))) # shape=(13, 2, 5)
output = relay.Tuple([bop_7472,bop_7500,])
output2 = relay.Tuple([bop_7472,bop_7500,])
F = relay.Function([var_7470,var_7471,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_7470,var_7471,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

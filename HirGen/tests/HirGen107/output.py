import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_98 = relay.var("var_98", dtype = "float32", shape = (3, 1, 13))#candidate|98|(3, 1, 13)|var|float32
uop_99 = relay.tan(var_98.astype('float32')) # shape=(3, 1, 13)
var_102 = relay.var("var_102", dtype = "float32", shape = (3, 16, 13))#candidate|102|(3, 16, 13)|var|float32
bop_103 = relay.power(uop_99.astype('float32'), var_102.astype('float32')) # shape=(3, 16, 13)
bop_110 = relay.greater_equal(var_98.astype('bool'), relay.reshape(uop_99.astype('bool'), relay.shape_of(var_98))) # shape=(3, 1, 13)
output = relay.Tuple([bop_103,bop_110,])
output2 = relay.Tuple([bop_103,bop_110,])
func_114 = relay.Function([var_98,var_102,], output)
mod['func_114'] = func_114
mod = relay.transform.InferType()(mod)
mutated_mod['func_114'] = func_114
mutated_mod = relay.transform.InferType()(mutated_mod)
func_114_call = mutated_mod.get_global_var('func_114')
var_116 = relay.var("var_116", dtype = "float32", shape = (3, 1, 13))#candidate|116|(3, 1, 13)|var|float32
var_117 = relay.var("var_117", dtype = "float32", shape = (3, 16, 13))#candidate|117|(3, 16, 13)|var|float32
call_115 = func_114_call(var_116,var_117,)
output = call_115
func_118 = relay.Function([var_116,var_117,], output)
mutated_mod['func_118'] = func_118
mutated_mod = relay.transform.InferType()(mutated_mod)
const_579 = relay.const([[[-2,-9,9],[3,-2,8],[10,6,-4],[-7,8,5],[4,-1,3],[-8,-7,1],[2,3,-4],[5,6,2],[-8,-6,-10],[8,-4,-3],[-7,3,10],[9,7,6],[-5,-7,-2]]], dtype = "int32")#candidate|579|(1, 13, 3)|const|int32
var_580 = relay.var("var_580", dtype = "int32", shape = (5, 13, 3))#candidate|580|(5, 13, 3)|var|int32
bop_581 = relay.right_shift(const_579.astype('int32'), var_580.astype('int32')) # shape=(5, 13, 3)
output = bop_581
output2 = bop_581
func_585 = relay.Function([var_580,], output)
mod['func_585'] = func_585
mod = relay.transform.InferType()(mod)
mutated_mod['func_585'] = func_585
mutated_mod = relay.transform.InferType()(mutated_mod)
var_586 = relay.var("var_586", dtype = "int32", shape = (5, 13, 3))#candidate|586|(5, 13, 3)|var|int32
func_585_call = mutated_mod.get_global_var('func_585')
call_587 = func_585_call(var_586)
output = call_587
func_588 = relay.Function([var_586], output)
mutated_mod['func_588'] = func_588
mutated_mod = relay.transform.InferType()(mutated_mod)
const_708 = relay.const([[[-5.875397,-3.032330,4.347887,-4.254695,4.857745,-0.730654,4.077965],[0.539393,-6.926921,-4.940804,-2.033968,6.894548,0.537243,3.286424],[-1.489422,7.946918,5.179591,4.510501,-1.022282,-7.349666,-0.325612],[-9.694590,4.318262,9.041148,1.865391,-8.680610,1.509092,5.913179],[-5.732260,7.109110,5.030967,4.212765,-1.239223,5.185376,-0.348697],[6.539803,-6.975610,-5.174961,7.011540,-7.688899,-1.345845,-3.955083],[-3.072163,-1.594048,-6.645541,-8.067424,-9.575647,-1.048007,-7.841719],[4.138827,-2.551018,3.853177,3.763059,-9.807891,-0.085972,4.938558],[2.648189,-5.309778,-4.411641,-6.032435,-5.054958,-4.935451,-4.255053]],[[2.333051,7.169053,0.028946,3.194124,-3.276818,-4.135570,3.111133],[1.720236,7.549354,1.464496,8.144626,-4.596158,-6.485796,-4.680540],[-7.109119,-2.593629,5.909022,-3.779297,9.677433,-4.546557,-8.998536],[-5.520944,1.355845,6.770214,-4.945592,-4.274814,-5.811859,4.126936],[6.630792,9.767045,-9.231207,2.994010,5.277806,-0.103429,-6.154751],[4.034601,2.362193,-3.477899,2.198502,-8.629019,-4.090658,6.836591],[5.784125,-1.767492,-9.388633,-5.254123,0.077319,9.914296,-6.497093],[9.233691,-9.704381,6.268219,-6.210966,-6.201392,3.726499,6.083315],[3.420986,-8.347894,6.690834,5.057765,5.555148,-4.762679,4.995970]],[[8.646120,7.821094,-8.778918,0.193535,8.194413,-8.223671,-6.679325],[-4.157356,5.097513,-0.751321,4.109404,-1.388680,-0.970746,-0.917252],[-6.700346,-8.312470,9.232875,-3.214798,4.680396,-2.707127,5.321800],[-8.818036,-3.404453,6.792147,-3.133045,-1.281056,4.741322,-6.132690],[-5.194915,-8.749329,-8.072329,-0.333363,-2.663124,-1.037244,2.941518],[9.586559,2.980144,-4.345396,-6.124127,2.743836,2.080321,-1.189768],[2.279018,-5.806079,-7.060398,-6.707042,1.558009,-3.767559,-7.293971],[2.940600,4.589385,-3.040251,-0.554389,4.768691,1.900906,5.694028],[-9.284815,5.516817,-2.560640,5.320556,1.213786,-6.431900,-9.265880]]], dtype = "float32")#candidate|708|(3, 9, 7)|const|float32
uop_709 = relay.sqrt(const_708.astype('float32')) # shape=(3, 9, 7)
func_585_call = mod.get_global_var('func_585')
func_588_call = mutated_mod.get_global_var('func_588')
var_716 = relay.var("var_716", dtype = "int32", shape = (195,))#candidate|716|(195,)|var|int32
call_715 = func_585_call(relay.reshape(var_716.astype('int32'), [5, 13, 3]))
call_717 = func_585_call(relay.reshape(var_716.astype('int32'), [5, 13, 3]))
var_718 = relay.var("var_718", dtype = "int32", shape = (195,))#candidate|718|(195,)|var|int32
bop_719 = relay.logical_or(var_716.astype('bool'), relay.reshape(var_718.astype('bool'), relay.shape_of(var_716))) # shape=(195,)
output = relay.Tuple([uop_709,call_715,bop_719,])
output2 = relay.Tuple([uop_709,call_717,bop_719,])
func_723 = relay.Function([var_716,var_718,], output)
mod['func_723'] = func_723
mod = relay.transform.InferType()(mod)
var_724 = relay.var("var_724", dtype = "int32", shape = (195,))#candidate|724|(195,)|var|int32
var_725 = relay.var("var_725", dtype = "int32", shape = (195,))#candidate|725|(195,)|var|int32
output = func_723(var_724,var_725,)
func_726 = relay.Function([var_724,var_725,], output)
mutated_mod['func_726'] = func_726
mutated_mod = relay.transform.InferType()(mutated_mod)
var_934 = relay.var("var_934", dtype = "float32", shape = ())#candidate|934|()|var|float32
var_935 = relay.var("var_935", dtype = "float32", shape = (5, 11, 15))#candidate|935|(5, 11, 15)|var|float32
bop_936 = relay.divide(var_934.astype('float32'), var_935.astype('float32')) # shape=(5, 11, 15)
output = bop_936
output2 = bop_936
func_946 = relay.Function([var_934,var_935,], output)
mod['func_946'] = func_946
mod = relay.transform.InferType()(mod)
var_947 = relay.var("var_947", dtype = "float32", shape = ())#candidate|947|()|var|float32
var_948 = relay.var("var_948", dtype = "float32", shape = (5, 11, 15))#candidate|948|(5, 11, 15)|var|float32
output = func_946(var_947,var_948,)
func_949 = relay.Function([var_947,var_948,], output)
mutated_mod['func_949'] = func_949
mutated_mod = relay.transform.InferType()(mutated_mod)
const_956 = relay.const([[[True,False,False,False,False,False,True,False,True,False,True,False,True,False],[False,False,True,True,False,False,False,True,True,False,True,True,True,False],[False,True,True,True,True,True,True,False,False,True,False,True,True,True],[True,False,False,True,True,True,False,True,True,False,False,False,False,True],[False,False,False,False,True,True,False,False,False,True,False,False,False,True],[False,False,False,True,False,False,True,True,False,True,False,True,False,False],[False,False,False,False,False,False,False,True,True,False,False,True,False,False],[False,False,True,False,False,False,True,True,False,False,False,False,False,True],[False,False,True,False,False,True,False,True,True,False,False,False,True,False],[False,True,True,False,True,False,False,False,False,True,True,True,False,True],[True,False,False,True,False,False,True,False,True,True,True,True,False,False],[True,True,False,True,False,True,True,True,False,True,True,False,True,False],[True,True,False,True,True,False,False,True,False,False,True,False,True,True],[True,True,True,False,False,True,False,False,True,True,False,True,True,True],[True,False,False,True,True,False,False,False,False,False,True,True,False,False],[True,False,True,False,True,False,False,False,False,False,False,True,False,False]],[[False,True,False,True,True,False,False,False,False,False,False,False,True,True],[True,True,True,False,True,True,False,True,True,True,True,True,True,True],[False,True,False,False,False,False,False,True,False,False,True,False,True,True],[False,False,False,False,True,False,False,True,True,True,False,False,False,True],[False,True,False,False,True,False,True,True,False,True,True,False,True,False],[False,False,False,True,False,False,True,False,False,True,True,True,False,True],[False,False,False,False,False,False,False,True,True,True,False,True,False,True],[False,False,False,False,False,False,True,True,False,False,True,True,False,False],[False,False,True,False,True,True,False,True,True,True,False,False,False,False],[False,True,False,False,True,False,False,True,False,False,False,False,False,True],[True,False,True,False,True,False,False,False,True,True,True,True,False,True],[True,False,True,True,True,True,True,False,True,False,False,True,False,False],[False,False,False,True,True,True,True,False,False,False,False,True,True,True],[False,True,False,False,True,True,True,True,True,True,True,False,True,True],[False,True,False,False,True,False,True,False,True,True,False,True,True,False],[True,False,True,True,True,True,True,False,True,True,True,False,False,True]],[[False,True,False,False,False,False,False,True,False,False,False,False,True,False],[True,False,True,False,False,False,False,True,False,True,True,True,False,True],[True,False,False,True,True,False,False,True,True,False,True,True,False,True],[True,True,True,True,True,False,True,True,True,True,False,True,True,False],[False,True,True,True,False,True,False,True,True,False,True,False,True,False],[False,True,True,True,True,False,False,False,True,False,False,False,True,False],[True,False,False,True,False,True,False,False,False,False,True,False,True,False],[False,False,False,False,True,True,False,False,False,False,True,True,False,True],[True,False,True,False,False,False,True,False,True,True,False,False,True,False],[False,False,False,False,False,True,True,False,False,True,False,False,True,True],[True,False,False,False,False,False,False,False,False,True,True,True,False,True],[True,False,True,True,False,False,False,True,True,True,True,True,False,True],[False,True,True,True,True,True,False,True,True,False,False,True,False,True],[True,False,False,False,False,False,False,True,False,False,False,True,True,True],[False,True,False,False,False,True,False,False,True,False,True,False,False,True],[False,False,False,True,True,True,True,True,True,True,False,True,True,False]],[[False,False,True,False,True,False,True,False,True,True,False,False,True,True],[True,True,True,True,False,True,False,True,False,True,False,True,True,True],[False,False,True,False,True,True,True,False,True,False,False,False,True,False],[True,False,False,False,True,True,True,True,False,True,False,True,False,True],[False,True,False,True,False,True,True,True,False,False,True,True,False,False],[False,True,False,True,True,False,True,True,True,False,False,False,True,True],[True,True,False,True,True,False,False,True,True,False,False,False,False,True],[True,True,True,True,False,False,False,False,False,True,True,False,True,True],[False,False,False,True,False,False,False,True,False,True,False,False,True,False],[False,True,True,True,False,True,True,True,True,True,True,True,True,False],[True,False,True,True,True,False,False,True,False,True,False,True,False,False],[True,True,False,True,False,True,False,True,False,True,False,True,True,True],[True,False,True,False,False,False,False,True,False,False,False,True,True,False],[False,True,False,True,False,False,False,True,False,False,False,False,False,False],[False,True,True,True,True,False,True,True,False,True,True,True,False,True],[False,True,False,False,True,False,True,True,True,True,False,True,True,False]],[[True,True,False,True,False,True,False,True,True,False,True,False,True,False],[True,True,True,True,True,True,True,False,False,False,True,True,True,False],[False,False,False,True,False,True,True,False,False,True,False,False,True,True],[False,True,True,True,False,False,False,True,False,True,True,False,True,True],[True,False,True,True,False,True,False,False,False,True,True,True,True,True],[True,False,False,True,True,True,False,False,True,False,True,True,True,True],[True,False,False,False,False,True,True,False,False,False,True,True,True,False],[False,False,True,True,True,True,False,False,False,False,False,True,False,False],[True,True,True,False,True,True,True,True,False,False,True,False,False,False],[True,False,False,True,False,True,False,True,False,False,False,False,False,False],[False,False,False,True,True,True,True,False,False,False,True,False,True,True],[True,True,True,False,True,False,False,False,True,False,True,False,True,True],[False,True,False,False,False,False,True,True,False,True,False,False,True,True],[True,False,False,False,False,False,False,True,False,False,True,True,True,True],[True,False,False,False,True,False,False,True,True,False,True,True,True,True],[True,False,False,False,True,True,False,True,True,True,False,True,True,False]],[[False,False,True,False,False,True,False,False,False,False,True,True,False,False],[False,True,True,True,False,False,False,True,True,False,False,False,True,False],[True,True,False,True,True,True,True,False,True,True,False,True,False,True],[False,False,False,False,False,True,True,False,True,True,True,False,False,True],[False,True,True,True,False,False,True,False,True,False,False,False,False,False],[True,False,True,True,False,True,True,False,True,True,False,False,False,True],[True,False,False,True,False,False,True,False,False,False,False,True,False,False],[False,False,False,True,False,False,True,True,True,False,True,False,True,False],[True,False,True,False,False,False,True,False,False,False,True,False,False,True],[True,True,False,True,True,False,True,False,False,False,True,False,False,False],[False,False,False,True,False,False,True,False,False,True,True,False,True,False],[False,False,True,True,True,True,True,False,False,False,False,False,False,True],[False,False,False,True,False,False,False,False,False,False,True,False,True,False],[False,False,False,False,False,True,False,True,True,True,False,True,True,False],[True,True,False,False,True,False,True,False,False,True,False,True,True,True],[True,False,True,False,True,True,False,True,True,False,True,False,True,True]],[[True,False,True,False,True,True,False,True,True,True,True,False,True,True],[True,False,True,False,True,False,False,False,False,True,True,True,True,False],[True,True,True,False,True,True,False,True,False,True,False,False,False,True],[False,True,False,True,False,True,True,True,False,False,True,False,True,False],[True,False,True,False,True,False,False,True,True,False,False,False,True,False],[False,False,True,False,True,True,True,True,True,False,False,True,False,True],[True,True,False,False,False,True,False,True,True,False,False,True,False,False],[True,False,False,True,False,True,True,True,True,False,True,False,False,True],[True,True,True,False,False,True,False,False,False,False,False,True,False,False],[False,False,True,True,False,True,False,False,True,True,False,False,True,True],[False,False,False,True,True,True,True,True,False,True,False,False,True,False],[False,True,False,False,True,True,False,False,True,False,False,False,False,False],[False,True,True,False,True,False,True,False,True,False,False,False,True,False],[False,False,False,False,True,False,True,False,False,True,False,True,True,True],[True,True,True,True,True,True,True,False,True,False,True,False,False,True],[False,True,True,True,True,True,True,False,True,False,False,True,True,True]],[[False,True,False,True,False,True,False,True,False,True,False,True,True,True],[False,True,False,False,False,True,True,True,False,True,True,True,True,False],[True,True,True,True,False,True,True,False,False,True,False,True,True,False],[False,False,True,False,False,True,True,False,False,False,False,False,True,True],[True,True,True,False,False,False,False,False,True,True,False,False,False,False],[True,True,False,True,False,True,False,False,False,True,False,False,True,False],[False,True,False,False,False,True,False,False,False,False,False,True,True,False],[True,False,True,False,True,True,False,True,True,False,True,True,True,False],[False,False,False,False,True,False,False,True,False,True,True,False,True,True],[True,True,False,True,True,True,True,False,False,True,False,True,True,True],[True,False,True,True,True,False,True,False,False,False,False,False,True,True],[False,False,True,False,True,True,True,False,False,False,True,False,False,True],[False,True,False,True,False,False,False,True,False,True,True,False,True,True],[True,False,True,True,True,False,True,False,True,False,True,True,True,False],[True,True,True,True,False,True,False,False,True,False,True,True,False,True],[False,True,False,True,False,True,False,True,True,False,True,False,False,False]]], dtype = "bool")#candidate|956|(8, 16, 14)|const|bool
var_957 = relay.var("var_957", dtype = "bool", shape = (8, 16, 14))#candidate|957|(8, 16, 14)|var|bool
bop_958 = relay.logical_and(const_956.astype('bool'), relay.reshape(var_957.astype('bool'), relay.shape_of(const_956))) # shape=(8, 16, 14)
output = relay.Tuple([bop_958,])
output2 = relay.Tuple([bop_958,])
func_961 = relay.Function([var_957,], output)
mod['func_961'] = func_961
mod = relay.transform.InferType()(mod)
mutated_mod['func_961'] = func_961
mutated_mod = relay.transform.InferType()(mutated_mod)
var_962 = relay.var("var_962", dtype = "bool", shape = (8, 16, 14))#candidate|962|(8, 16, 14)|var|bool
func_961_call = mutated_mod.get_global_var('func_961')
call_963 = func_961_call(var_962)
output = call_963
func_964 = relay.Function([var_962], output)
mutated_mod['func_964'] = func_964
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1020 = relay.var("var_1020", dtype = "uint8", shape = (10, 3, 13))#candidate|1020|(10, 3, 13)|var|uint8
var_1021 = relay.var("var_1021", dtype = "uint8", shape = (10, 3, 13))#candidate|1021|(10, 3, 13)|var|uint8
bop_1022 = relay.less(var_1020.astype('bool'), relay.reshape(var_1021.astype('bool'), relay.shape_of(var_1020))) # shape=(10, 3, 13)
output = bop_1022
output2 = bop_1022
func_1033 = relay.Function([var_1020,var_1021,], output)
mod['func_1033'] = func_1033
mod = relay.transform.InferType()(mod)
var_1034 = relay.var("var_1034", dtype = "uint8", shape = (10, 3, 13))#candidate|1034|(10, 3, 13)|var|uint8
var_1035 = relay.var("var_1035", dtype = "uint8", shape = (10, 3, 13))#candidate|1035|(10, 3, 13)|var|uint8
output = func_1033(var_1034,var_1035,)
func_1036 = relay.Function([var_1034,var_1035,], output)
mutated_mod['func_1036'] = func_1036
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1103 = relay.var("var_1103", dtype = "bool", shape = (3, 11, 8))#candidate|1103|(3, 11, 8)|var|bool
var_1104 = relay.var("var_1104", dtype = "bool", shape = (3, 11, 8))#candidate|1104|(3, 11, 8)|var|bool
bop_1105 = relay.logical_or(var_1103.astype('bool'), relay.reshape(var_1104.astype('bool'), relay.shape_of(var_1103))) # shape=(3, 11, 8)
bop_1121 = relay.not_equal(bop_1105.astype('bool'), relay.reshape(var_1104.astype('bool'), relay.shape_of(bop_1105))) # shape=(3, 11, 8)
uop_1130 = relay.acos(var_1103.astype('float64')) # shape=(3, 11, 8)
func_1033_call = mod.get_global_var('func_1033')
func_1036_call = mutated_mod.get_global_var('func_1036')
var_1149 = relay.var("var_1149", dtype = "uint8", shape = (390,))#candidate|1149|(390,)|var|uint8
call_1148 = func_1033_call(relay.reshape(var_1149.astype('uint8'), [10, 3, 13]), relay.reshape(var_1149.astype('uint8'), [10, 3, 13]), )
call_1150 = func_1033_call(relay.reshape(var_1149.astype('uint8'), [10, 3, 13]), relay.reshape(var_1149.astype('uint8'), [10, 3, 13]), )
uop_1155 = relay.cos(bop_1105.astype('float64')) # shape=(3, 11, 8)
func_946_call = mod.get_global_var('func_946')
func_949_call = mutated_mod.get_global_var('func_949')
const_1160 = relay.const(-2.750354, dtype = "float32")#candidate|1160|()|const|float32
var_1161 = relay.var("var_1161", dtype = "float32", shape = (825,))#candidate|1161|(825,)|var|float32
call_1159 = func_946_call(relay.reshape(const_1160.astype('float32'), []), relay.reshape(var_1161.astype('float32'), [5, 11, 15]), )
call_1162 = func_946_call(relay.reshape(const_1160.astype('float32'), []), relay.reshape(var_1161.astype('float32'), [5, 11, 15]), )
output = relay.Tuple([bop_1121,uop_1130,call_1148,var_1149,uop_1155,call_1159,const_1160,var_1161,])
output2 = relay.Tuple([bop_1121,uop_1130,call_1150,var_1149,uop_1155,call_1162,const_1160,var_1161,])
func_1176 = relay.Function([var_1103,var_1104,var_1149,var_1161,], output)
mod['func_1176'] = func_1176
mod = relay.transform.InferType()(mod)
mutated_mod['func_1176'] = func_1176
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1176_call = mutated_mod.get_global_var('func_1176')
var_1178 = relay.var("var_1178", dtype = "bool", shape = (3, 11, 8))#candidate|1178|(3, 11, 8)|var|bool
var_1179 = relay.var("var_1179", dtype = "bool", shape = (3, 11, 8))#candidate|1179|(3, 11, 8)|var|bool
var_1180 = relay.var("var_1180", dtype = "uint8", shape = (390,))#candidate|1180|(390,)|var|uint8
var_1181 = relay.var("var_1181", dtype = "float32", shape = (825,))#candidate|1181|(825,)|var|float32
call_1177 = func_1176_call(var_1178,var_1179,var_1180,var_1181,)
output = call_1177
func_1182 = relay.Function([var_1178,var_1179,var_1180,var_1181,], output)
mutated_mod['func_1182'] = func_1182
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1400 = relay.const([[[-7.162570,-9.377143,-7.397063,-0.222513,-6.154000,0.657421,-0.791318],[-4.577266,0.113375,5.963670,2.546382,4.494150,-2.209131,7.889696],[6.307990,-5.144267,-1.418808,5.526867,-6.494519,-2.309450,-7.579238],[7.784199,7.086746,3.279531,-8.273938,-7.949310,-4.021847,4.317846],[7.438753,-3.639934,-8.994584,-8.689682,-7.047432,7.047640,-6.609628],[9.890863,-5.180393,5.658959,-8.983677,-0.141508,3.586019,2.785451],[-0.042827,-7.418765,0.401155,-2.660943,-9.229059,-0.870098,7.548657],[9.700338,1.823178,-3.641734,9.269596,7.970221,-2.234703,-0.206610],[-2.556268,0.168088,2.734422,-2.456730,7.471647,-7.942008,-7.062974],[-5.798224,-7.096923,4.842710,-5.765631,4.498933,5.736686,-6.840332],[1.673494,-7.011075,-3.055857,-6.921244,0.456350,-3.473067,-5.865786],[-7.909609,-5.920448,-9.948792,-5.342824,-2.689029,0.514624,5.252962]],[[4.730601,-0.360261,-0.453574,-5.444119,-4.083630,-5.632713,-9.807349],[-9.040801,6.527480,9.612240,4.663141,9.689169,4.343407,7.508650],[6.706279,9.941306,-2.860384,8.865019,-2.382324,8.034378,6.190745],[4.459715,-1.271338,-6.984392,-1.140784,3.753444,8.701944,-8.213072],[7.495879,1.401043,-7.823409,0.290491,-4.808253,8.099506,-3.970263],[5.893355,2.878689,7.699666,3.188736,9.543939,2.999213,9.999881],[9.055466,4.237208,3.500884,-5.456075,-9.968946,-8.236620,-2.729722],[4.045369,-5.934364,-9.217110,6.581452,-2.871058,5.281123,5.612457],[-8.843479,5.659460,-1.560082,-9.694001,3.179278,7.457192,-2.453482],[-5.775030,8.501198,-6.614891,3.019749,3.165503,-6.183113,2.102198],[-6.446310,0.310269,7.516737,-1.529365,6.569831,-5.034487,7.753461],[-9.036860,2.954917,5.217067,4.022932,8.823369,-6.938662,7.560805]],[[-1.573558,5.963298,1.604069,7.601534,0.745374,-1.812785,5.527304],[-8.823589,-0.741735,-1.017445,0.095937,9.543044,6.193847,4.103908],[6.132837,2.960647,3.184142,-9.763451,9.296614,-5.339475,-7.570148],[7.548157,9.806581,-1.483325,5.529052,1.768882,-9.859930,1.397401],[7.240917,-8.380623,1.815856,-2.082041,-1.535874,-0.907287,5.915423],[-6.769813,6.375900,1.640148,5.785939,4.854366,-0.410513,-3.955807],[5.141926,7.058316,-2.769099,4.152031,6.830456,1.440035,9.138467],[4.862990,-5.578497,-8.083720,9.690639,-8.255965,7.020572,7.154167],[-3.577316,8.920810,4.811303,6.971426,-5.433320,-2.786016,-0.742929],[1.852691,6.820010,-1.144142,-2.776755,0.139785,-4.994707,3.878562],[3.711915,-2.477946,-0.740920,0.488100,-1.635542,4.187202,-6.248294],[-1.462004,7.450356,-4.298001,-4.187942,-7.605094,9.241062,-0.941282]],[[7.571115,3.174239,1.020845,7.910973,7.663180,0.387898,3.060209],[-3.035196,-3.997050,-3.822206,-6.925237,-3.920926,-0.227020,-2.212457],[8.588465,8.877454,-1.888825,6.601567,-1.364771,6.949938,-0.067972],[6.589135,0.179882,3.700240,-6.512502,-4.105785,-4.405319,5.416289],[7.829269,-6.071956,0.984791,-8.755402,-4.699335,3.390078,-2.728617],[1.142050,3.663088,-5.770359,-5.783932,4.631025,5.185593,-9.186785],[-9.465725,-6.693346,7.088927,-4.957951,7.919397,-5.491688,9.289812],[-8.608152,-3.897162,-1.292425,5.015807,-2.305935,-9.346378,-6.427878],[1.783830,7.942102,9.570639,-0.669768,-9.058513,8.711075,4.475527],[1.715798,2.711564,-8.387908,9.801428,5.204823,4.751190,1.306984],[2.051177,5.966341,-6.502880,0.552537,6.428292,-7.292122,-9.851137],[3.015940,2.809958,-5.587539,-5.136712,-3.330025,8.084408,-3.683632]],[[9.686880,-8.400112,-4.971794,-8.014846,-9.551141,-0.531559,1.770116],[5.055993,-7.767640,0.267170,-5.380222,-1.816981,-2.036082,-1.122132],[-5.199782,-6.505412,-7.374925,8.806283,-0.521632,5.790910,0.532582],[-7.779570,-5.507286,-2.076278,-9.021272,-7.632250,-0.510288,-8.594743],[3.414737,-5.786943,5.168637,-6.544712,-6.330942,-2.408429,8.850965],[4.656133,2.748158,6.447426,-4.656081,-8.227368,3.222304,6.586322],[8.771848,-8.972450,-6.230599,5.443647,0.841648,-8.510182,9.860427],[-1.689119,-2.318619,3.082276,-9.789420,-9.825664,-4.187877,0.434207],[4.407613,8.483609,-0.919153,-4.751141,5.152216,6.426638,1.644843],[-4.319297,-5.931146,4.206027,-9.663144,6.750746,6.849446,5.068459],[-5.695662,5.648428,6.884884,1.047311,-0.843955,5.933804,3.184522],[-7.309002,-5.366854,5.491309,8.363564,1.321048,1.588330,-8.378247]],[[-0.615263,-2.134712,6.600537,0.244367,1.046382,-5.465404,-6.667101],[4.888026,-2.601276,-1.416486,-7.276234,-3.621083,-4.850274,2.299536],[-4.352095,-7.997295,-9.335169,4.362913,-6.274276,-8.271293,0.081939],[1.113199,-3.273861,0.852942,-1.661635,5.319494,4.301286,-0.671956],[-5.917813,6.837177,-8.490728,7.252259,8.545533,-6.608413,0.858012],[5.744908,5.720188,-0.482738,2.736014,4.134345,2.482714,-5.027124],[-5.624192,-4.869346,-3.784049,8.850430,3.722666,7.360666,1.341852],[-8.457776,2.444026,-2.384122,-8.705052,-3.729199,-0.071661,9.328096],[0.313719,9.930595,4.371908,-5.568755,9.660215,-2.091978,-7.928886],[6.855518,4.624015,8.410215,7.055721,0.468016,-7.283313,0.014756],[1.856558,0.392738,-7.433775,-1.844610,-6.458418,-1.635223,-3.727620],[4.979161,-9.741407,9.042463,-2.343874,-1.115250,-8.319157,-2.606560]],[[-8.683091,4.336914,-6.638865,-9.657336,4.981520,-6.823496,1.775686],[-7.176546,0.216849,-0.694425,-5.041996,2.944065,-8.490106,4.493184],[-2.905013,-2.443462,1.196280,-0.277991,-6.100837,3.648465,-9.688384],[1.026429,-1.148724,0.459108,0.133076,7.235436,6.322093,4.889876],[6.807065,-5.448483,-0.693640,-0.484341,6.379178,2.950283,1.279765],[8.817407,7.760406,5.979606,-5.960981,2.328633,-3.093494,-3.136093],[-2.965706,-5.314361,-8.847307,6.752524,0.651494,-3.190374,-0.741905],[-6.743036,-7.973435,6.337607,-5.736860,3.683248,-7.048024,2.969481],[-3.871475,-2.164419,7.822984,-8.744270,-0.091468,-7.285337,7.539197],[-9.025014,-8.892913,7.331700,-8.607219,-9.505126,9.494384,-0.168982],[2.313501,-4.280062,0.092224,-3.888839,2.982759,-2.928949,-4.943017],[6.952217,9.255044,2.239372,-6.387107,3.690320,-1.166675,-4.047007]],[[0.853330,9.759124,-8.620790,-3.142178,-7.962469,-8.527651,1.190222],[1.381851,3.536135,7.231964,-1.195293,-2.019147,2.026469,-7.850394],[-8.740512,8.718599,8.767879,-8.722402,9.621610,1.821290,9.534862],[2.237666,-2.963200,-1.190054,-9.293681,-9.896655,-5.496391,2.098241],[-7.465079,3.468917,-1.912115,0.737154,0.427048,9.974176,-1.604437],[8.637758,-3.980560,6.817809,3.971527,-8.782769,3.303119,2.709328],[-2.014125,-3.598368,-4.493494,9.399521,-2.284648,-6.694306,-6.004531],[-4.485917,-5.809537,-5.480542,2.045448,3.341040,7.794588,-9.065940],[-0.689423,-4.242354,-9.112396,-5.295882,9.685992,-0.872920,-6.547711],[0.001478,-6.445473,2.011539,7.391557,-8.897004,8.739181,-6.946916],[5.065334,-3.073546,-7.490366,-0.793800,0.757552,2.410950,-5.256171],[-2.798192,-7.814147,7.866898,-8.980077,5.682444,-5.458043,-9.429090]],[[8.279259,-2.321383,8.138433,-2.028222,-8.659904,-6.049512,0.861841],[-8.310427,0.683102,-4.012152,-5.347443,8.996480,3.083794,8.281430],[-1.016873,3.231803,-2.769554,-9.186898,-5.850136,4.386550,-5.466424],[-2.396173,0.303444,6.671272,-1.522823,-1.489735,-4.850433,7.522260],[-8.472818,0.409819,-8.048904,-0.832301,0.321216,-1.725934,8.095772],[-9.172767,7.719578,-4.171168,9.058130,-5.748446,4.739498,-6.216859],[-6.000532,4.291991,-2.247224,0.204916,-9.003290,0.913215,-1.964733],[5.751828,4.848038,8.257949,4.183979,2.007260,-2.905915,-8.510107],[-3.243323,8.999141,-2.459655,2.805410,3.452842,7.474246,-4.201291],[4.693153,-0.237489,1.677292,-2.715379,-6.036251,-5.169217,-0.650709],[9.865321,-2.867037,-1.485326,-5.873074,4.713788,9.471639,-2.914525],[-7.210384,-2.987286,-0.184785,-8.647147,-7.670990,-7.289090,-7.795741]],[[0.257301,6.516045,3.342497,-4.695223,9.471444,-4.156823,7.770819],[-8.760939,-9.278162,-9.912999,-5.174591,9.894330,-9.417288,-9.560360],[9.558926,6.534611,1.734731,5.143044,4.522338,-3.504878,7.905422],[4.697362,5.703582,-6.988419,-4.200258,-1.410001,6.293482,8.431143],[2.489806,4.027593,8.078993,4.769432,3.605021,2.952185,0.470284],[-9.179190,9.885092,9.776602,2.926172,-9.344620,-8.120735,-4.051406],[9.994717,-7.876465,7.277569,1.531836,-6.038021,-3.621517,4.427773],[-2.444447,7.786729,4.120789,-6.584348,9.527113,3.714165,5.041927],[-0.629353,8.307380,-6.639634,9.765997,4.985477,-5.429759,6.563101],[-0.782630,-0.328736,6.311341,7.866160,-2.430525,8.747590,9.496212],[-8.913997,1.093591,-4.789310,-3.817330,-6.388969,2.325482,-2.587419],[1.675617,-7.512828,-7.301634,9.649482,-9.980175,4.745169,-2.469927]]], dtype = "float32")#candidate|1400|(10, 12, 7)|const|float32
uop_1401 = relay.erf(const_1400.astype('float32')) # shape=(10, 12, 7)
func_946_call = mod.get_global_var('func_946')
func_949_call = mutated_mod.get_global_var('func_949')
var_1413 = relay.var("var_1413", dtype = "float32", shape = ())#candidate|1413|()|var|float32
var_1414 = relay.var("var_1414", dtype = "float32", shape = (5, 165))#candidate|1414|(5, 165)|var|float32
call_1412 = func_946_call(relay.reshape(var_1413.astype('float32'), []), relay.reshape(var_1414.astype('float32'), [5, 11, 15]), )
call_1415 = func_946_call(relay.reshape(var_1413.astype('float32'), []), relay.reshape(var_1414.astype('float32'), [5, 11, 15]), )
func_723_call = mod.get_global_var('func_723')
func_726_call = mutated_mod.get_global_var('func_726')
var_1425 = relay.var("var_1425", dtype = "int32", shape = (195,))#candidate|1425|(195,)|var|int32
call_1424 = relay.TupleGetItem(func_723_call(relay.reshape(var_1425.astype('int32'), [195,]), relay.reshape(var_1425.astype('int32'), [195,]), ), 1)
call_1426 = relay.TupleGetItem(func_726_call(relay.reshape(var_1425.astype('int32'), [195,]), relay.reshape(var_1425.astype('int32'), [195,]), ), 1)
uop_1429 = relay.sigmoid(uop_1401.astype('float64')) # shape=(10, 12, 7)
func_585_call = mod.get_global_var('func_585')
func_588_call = mutated_mod.get_global_var('func_588')
call_1433 = func_585_call(relay.reshape(call_1424.astype('int32'), [5, 13, 3]))
call_1434 = func_585_call(relay.reshape(call_1424.astype('int32'), [5, 13, 3]))
bop_1451 = relay.floor_divide(uop_1429.astype('float64'), var_1413.astype('float64')) # shape=(10, 12, 7)
func_946_call = mod.get_global_var('func_946')
func_949_call = mutated_mod.get_global_var('func_949')
call_1461 = func_946_call(relay.reshape(var_1413.astype('float32'), []), relay.reshape(call_1412.astype('float32'), [5, 11, 15]), )
call_1462 = func_946_call(relay.reshape(var_1413.astype('float32'), []), relay.reshape(call_1412.astype('float32'), [5, 11, 15]), )
uop_1469 = relay.log(uop_1429.astype('float32')) # shape=(10, 12, 7)
func_1033_call = mod.get_global_var('func_1033')
func_1036_call = mutated_mod.get_global_var('func_1036')
var_1472 = relay.var("var_1472", dtype = "uint8", shape = (5, 78))#candidate|1472|(5, 78)|var|uint8
call_1471 = func_1033_call(relay.reshape(var_1472.astype('uint8'), [10, 3, 13]), relay.reshape(var_1472.astype('uint8'), [10, 3, 13]), )
call_1473 = func_1033_call(relay.reshape(var_1472.astype('uint8'), [10, 3, 13]), relay.reshape(var_1472.astype('uint8'), [10, 3, 13]), )
uop_1480 = relay.sqrt(uop_1469.astype('float64')) # shape=(10, 12, 7)
func_1176_call = mod.get_global_var('func_1176')
func_1182_call = mutated_mod.get_global_var('func_1182')
const_1488 = relay.const([False,False,True,False,False,True,False,True,True,True,False,True,True,False,True,True,True,True,False,False,True,False,True,False,True,False,True,False,True,True,False,True,True,False,False,True,True,False,True,False,True,True,True,False,True,True,True,False,False,True,False,True,True,False,False,False,False,True,True,True,False,True,True,True,True,True,True,False,True,False,False,False,True,False,False,False,True,False,True,True,True,True,False,True,True,False,True,True,True,False,True,True,False,False,True,True,True,False,False,False,False,False,False,True,False,False,True,True,False,False,False,False,False,True,True,True,True,False,True,True,True,False,False,True,False,True,False,True,True,False,True,True,True,True,False,True,True,False,True,False,False,True,False,False,False,True,False,False,True,True,True,False,True,True,True,True,True,False,False,False,False,True,False,True,False,False,True,True,False,False,True,True,True,True,True,False,False,True,False,False,False,True,False,True,False,False,False,True,False,False,False,False,True,False,False,True,False,True,True,True,True,False,False,False,False,True,False,False,True,False,False,True,True,True,True,False,True,True,True,True,False,True,True,True,True,True,True,False,False,False,True,True,False,True,False,False,False,False,True,True,True,True,True,False,False,False,False,True,True,False,False,True,True,False,True,True,True,False,True,False,False,False,True,False], dtype = "bool")#candidate|1488|(264,)|const|bool
call_1487 = relay.TupleGetItem(func_1176_call(relay.reshape(const_1488.astype('bool'), [3, 11, 8]), relay.reshape(const_1488.astype('bool'), [3, 11, 8]), relay.reshape(call_1471.astype('uint8'), [390,]), relay.reshape(call_1412.astype('float32'), [825,]), ), 7)
call_1489 = relay.TupleGetItem(func_1182_call(relay.reshape(const_1488.astype('bool'), [3, 11, 8]), relay.reshape(const_1488.astype('bool'), [3, 11, 8]), relay.reshape(call_1471.astype('uint8'), [390,]), relay.reshape(call_1412.astype('float32'), [825,]), ), 7)
bop_1491 = relay.left_shift(uop_1480.astype('uint8'), var_1413.astype('uint8')) # shape=(10, 12, 7)
bop_1497 = relay.greater(bop_1491.astype('bool'), relay.reshape(bop_1451.astype('bool'), relay.shape_of(bop_1491))) # shape=(10, 12, 7)
bop_1500 = relay.power(uop_1401.astype('float32'), relay.reshape(bop_1491.astype('float32'), relay.shape_of(uop_1401))) # shape=(10, 12, 7)
output = relay.Tuple([call_1412,var_1414,call_1424,var_1425,call_1433,call_1461,call_1471,var_1472,call_1487,const_1488,bop_1497,bop_1500,])
output2 = relay.Tuple([call_1415,var_1414,call_1426,var_1425,call_1434,call_1462,call_1473,var_1472,call_1489,const_1488,bop_1497,bop_1500,])
func_1505 = relay.Function([var_1413,var_1414,var_1425,var_1472,], output)
mod['func_1505'] = func_1505
mod = relay.transform.InferType()(mod)
var_1506 = relay.var("var_1506", dtype = "float32", shape = ())#candidate|1506|()|var|float32
var_1507 = relay.var("var_1507", dtype = "float32", shape = (5, 165))#candidate|1507|(5, 165)|var|float32
var_1508 = relay.var("var_1508", dtype = "int32", shape = (195,))#candidate|1508|(195,)|var|int32
var_1509 = relay.var("var_1509", dtype = "uint8", shape = (5, 78))#candidate|1509|(5, 78)|var|uint8
output = func_1505(var_1506,var_1507,var_1508,var_1509,)
func_1510 = relay.Function([var_1506,var_1507,var_1508,var_1509,], output)
mutated_mod['func_1510'] = func_1510
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1748 = relay.var("var_1748", dtype = "float32", shape = (9, 1, 14))#candidate|1748|(9, 1, 14)|var|float32
uop_1749 = relay.sin(var_1748.astype('float32')) # shape=(9, 1, 14)
func_961_call = mod.get_global_var('func_961')
func_964_call = mutated_mod.get_global_var('func_964')
var_1753 = relay.var("var_1753", dtype = "bool", shape = (64, 28))#candidate|1753|(64, 28)|var|bool
call_1752 = relay.TupleGetItem(func_961_call(relay.reshape(var_1753.astype('bool'), [8, 16, 14])), 0)
call_1754 = relay.TupleGetItem(func_964_call(relay.reshape(var_1753.astype('bool'), [8, 16, 14])), 0)
output = relay.Tuple([uop_1749,call_1752,var_1753,])
output2 = relay.Tuple([uop_1749,call_1754,var_1753,])
func_1757 = relay.Function([var_1748,var_1753,], output)
mod['func_1757'] = func_1757
mod = relay.transform.InferType()(mod)
var_1758 = relay.var("var_1758", dtype = "float32", shape = (9, 1, 14))#candidate|1758|(9, 1, 14)|var|float32
var_1759 = relay.var("var_1759", dtype = "bool", shape = (64, 28))#candidate|1759|(64, 28)|var|bool
output = func_1757(var_1758,var_1759,)
func_1760 = relay.Function([var_1758,var_1759,], output)
mutated_mod['func_1760'] = func_1760
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1794 = relay.var("var_1794", dtype = "uint16", shape = (10, 5, 2))#candidate|1794|(10, 5, 2)|var|uint16
var_1795 = relay.var("var_1795", dtype = "uint16", shape = (10, 5, 2))#candidate|1795|(10, 5, 2)|var|uint16
bop_1796 = relay.bitwise_and(var_1794.astype('uint16'), relay.reshape(var_1795.astype('uint16'), relay.shape_of(var_1794))) # shape=(10, 5, 2)
output = bop_1796
output2 = bop_1796
func_1817 = relay.Function([var_1794,var_1795,], output)
mod['func_1817'] = func_1817
mod = relay.transform.InferType()(mod)
mutated_mod['func_1817'] = func_1817
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1817_call = mutated_mod.get_global_var('func_1817')
var_1819 = relay.var("var_1819", dtype = "uint16", shape = (10, 5, 2))#candidate|1819|(10, 5, 2)|var|uint16
var_1820 = relay.var("var_1820", dtype = "uint16", shape = (10, 5, 2))#candidate|1820|(10, 5, 2)|var|uint16
call_1818 = func_1817_call(var_1819,var_1820,)
output = call_1818
func_1821 = relay.Function([var_1819,var_1820,], output)
mutated_mod['func_1821'] = func_1821
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1841 = relay.const([[[0.598378,-4.500152,-0.084488,7.363680,2.244697,2.857391,1.618067,-0.099327,-3.226853,-7.555824,-3.387449,-4.269361],[0.377147,-1.058627,-2.027212,1.749091,2.748839,-1.004340,1.662094,5.989519,7.831653,5.989420,7.395978,-9.590815],[4.544309,0.748249,-7.306452,9.100358,6.759087,6.626383,1.305506,0.075598,-9.782012,-1.474087,5.197515,7.057729],[-2.819759,-8.926308,-1.063666,8.736993,7.226122,-6.973118,7.794543,8.615941,3.158089,-0.998361,6.281389,8.971564],[6.916190,-4.994207,-7.553166,0.976215,-4.034732,-8.548144,0.365569,-7.084412,-8.209077,-1.751124,-2.577002,2.755620],[-7.872094,-3.171045,3.348341,-5.765885,0.083203,-6.514222,-2.994459,-5.439979,9.296919,9.604065,6.220024,2.937893],[-8.484442,8.555834,8.188815,-6.768229,-9.591042,-0.082153,7.417644,3.551468,0.567892,-4.963148,5.128118,-4.235991],[3.059864,5.157448,-1.103659,-6.366995,-3.890367,9.878416,-8.643148,-2.117920,2.932548,7.894358,0.777553,4.041401],[-3.123333,-3.147822,7.969587,-3.424171,-1.586061,6.520438,-3.996901,-9.148111,8.493424,-1.861095,5.801563,-0.783146],[3.198678,5.428191,-3.924566,1.558573,-9.280207,7.360271,5.232162,-8.129834,4.659554,-3.559374,-2.753971,0.034185],[-8.417815,5.057090,-0.926300,-5.410590,5.588439,-2.412979,0.846889,-4.413025,7.967677,7.523826,1.978408,-7.604518],[6.280970,-1.510685,6.177041,3.361801,-8.072450,-0.522882,-5.574727,-6.588032,-2.394973,-1.502456,9.944803,-3.245066],[-7.043000,2.869868,5.953607,-2.782479,-8.552062,-4.722671,-4.143145,2.956566,1.386509,9.462946,2.213883,5.331084],[-9.134982,4.414819,4.124590,-4.180075,3.686306,2.780749,-3.281619,1.468771,7.195280,-4.207660,1.237768,-4.617969],[2.604392,-9.381713,1.837891,3.676738,2.779202,7.638803,-6.916418,-3.585882,8.823118,-6.778733,-1.554109,-6.387279]],[[-4.345588,6.960391,1.543344,-3.621782,-0.268788,8.734936,-8.403092,8.204268,0.145089,-6.966634,1.816038,8.369598],[4.676353,-2.605170,5.365784,3.963154,3.856825,0.843627,-8.286899,-7.840921,-9.618072,-8.939410,-2.323047,0.295046],[2.143192,6.850732,-4.456251,7.076248,-2.620375,2.040990,8.709345,2.418588,-0.767380,5.366170,-1.053618,2.544003],[0.704276,-0.299096,3.004488,2.732573,9.772818,4.871057,9.553057,9.152031,-9.571958,7.728256,3.103579,9.482041],[0.017208,-8.511484,-6.374757,-0.615364,-0.531154,4.604480,-0.778838,-9.871841,4.200269,-2.752017,-0.768192,-1.438742],[-9.312105,-6.557637,1.479888,0.782097,-1.648025,-8.284516,8.453626,-7.161828,9.577529,-0.365288,-0.810097,-2.044354],[-8.149497,-1.279134,-2.843730,-9.362936,-2.829163,6.756088,-2.338954,-1.803086,-5.658694,5.028955,-5.016018,6.203773],[9.964076,5.652146,-2.949286,7.256490,-6.613357,-7.574934,-2.432225,-6.542918,3.047904,-1.208022,-5.031373,7.054806],[-4.293246,6.848822,-4.821375,-9.200940,-0.255395,-9.051327,2.388344,6.124776,7.166248,1.509041,-6.715702,9.269339],[7.268920,4.302627,-2.781805,-0.192786,5.973167,3.592944,2.519478,2.029903,-4.443612,-2.010029,2.233532,4.042668],[0.662468,1.926634,-3.252047,-4.262427,-2.460734,-3.594887,-0.561589,4.094065,-6.917460,9.890676,2.611560,9.794198],[-5.427662,5.351273,8.142738,5.016256,0.411382,5.415185,3.226057,7.144952,6.237585,-0.592901,2.106929,-4.888978],[0.036450,7.644590,-4.470651,-7.923331,-8.248088,9.745017,-9.683001,1.909174,8.433210,-7.815470,-7.988924,-6.421877],[5.693389,6.332083,8.023976,-9.065695,7.387699,3.205550,-9.916254,4.055485,7.405597,-6.175853,9.129645,-2.452636],[-0.205499,7.483018,-5.737682,7.587692,-6.807650,-0.478420,-8.512934,-3.360121,-8.377734,6.943535,0.925264,-7.309814]],[[4.226717,8.817669,-4.787291,4.384333,-4.552316,5.025157,9.323208,-6.336162,9.163867,1.834706,6.026706,6.408278],[5.728479,-3.621917,6.563901,5.461735,4.271776,4.471265,-4.459178,2.488437,0.799451,-6.467126,9.462307,5.236244],[3.772169,-0.155039,-0.834809,6.394538,-7.256371,2.902300,-6.916335,1.486809,5.958138,3.947308,2.844156,-5.636437],[8.807644,1.518310,7.393540,5.415445,0.512934,3.320262,5.061172,0.030072,-2.439948,-5.019338,-8.860934,-8.435933],[-4.637987,8.251628,-4.938727,1.918401,-7.003305,-6.177193,5.140347,7.561687,1.696551,-7.823679,9.053133,6.514715],[-6.591113,-1.670247,9.411105,-9.198361,-2.002021,8.116562,6.452894,-1.033527,-7.053443,7.367638,-9.084675,-6.400627],[6.934197,-2.385962,1.491593,-1.242464,7.743054,-4.370027,-6.994481,5.550260,-7.054505,8.956934,6.344373,-4.829596],[2.097038,6.489847,-5.990781,6.431619,-7.890825,-6.347920,1.558632,-4.929963,8.828767,0.018165,2.718257,-8.426212],[-7.139172,-4.363507,0.911708,5.639951,-4.849212,-5.549616,-3.538819,5.084579,5.905424,-3.059636,-2.677905,-0.130475],[4.079735,5.028493,-5.516442,1.675171,-4.627120,-5.526065,-4.745617,-8.855898,-1.675277,7.321588,-9.469683,4.310500],[-9.922409,3.807473,-6.546771,-8.507441,6.132313,0.318455,3.694886,-8.019504,-4.639328,9.190664,-4.771782,3.859717],[-1.126450,-0.531194,2.767486,-6.675053,3.002043,3.439981,2.719608,-5.043040,6.492566,-6.188328,-6.440858,-5.623208],[3.395826,5.004338,2.605128,-6.054331,3.222581,5.356389,2.045635,-7.219087,7.331226,-9.773629,7.120589,6.096127],[-6.570105,9.404577,1.442838,7.748832,4.118965,-2.879118,-4.485655,-8.654083,9.394335,-0.876916,2.246847,-4.098468],[-2.065533,-6.604884,6.066694,4.723740,7.777265,-9.422059,-5.335720,-1.259889,-8.922186,2.561102,1.928464,-5.272344]],[[2.723036,7.827299,7.483614,1.355163,0.478956,9.294121,8.983100,-1.718724,1.526203,9.415751,2.143048,3.818756],[9.531413,-3.510341,-0.718285,6.368203,4.492215,-9.308767,-6.325321,8.443304,4.848755,-2.817450,8.651192,-1.752539],[0.915759,-1.562552,3.169596,-9.946897,-7.691049,8.818947,0.228399,-1.483875,-8.262979,7.501757,-9.113085,-5.096906],[6.637920,5.696936,6.837860,7.482418,6.104637,1.072472,5.918122,6.630420,-6.125882,-8.259777,-7.752985,5.467070],[-4.451087,0.917225,1.579355,-9.026195,1.992822,9.341618,8.371309,0.289402,-9.622595,2.062836,1.865295,-0.333636],[-9.730935,6.487227,7.853985,9.349280,-2.772753,7.899807,-0.476400,-1.838615,4.144187,-4.872538,1.765355,9.781575],[2.179029,6.311063,-1.208222,-6.258403,4.371091,9.557501,-8.686463,-2.547543,0.771698,-8.084100,1.236812,2.514772],[-6.498689,-6.652186,-9.077827,-3.589428,-1.583264,-8.841479,9.422885,3.048726,-7.232173,7.583074,1.609068,8.436145],[3.644702,-3.082727,7.962984,3.044984,-7.298547,3.065040,-5.886207,-2.805163,0.861048,7.381342,9.100841,6.203632],[1.467322,0.151616,-4.763325,9.073082,-6.061383,9.349818,-3.043332,-6.239818,-6.322756,8.587454,6.255100,4.531755],[-2.806892,4.844657,-8.443951,2.720547,1.551825,-3.733694,-6.975958,-4.022284,-3.793449,-3.896131,-8.920824,5.521996],[-4.081092,8.534397,-6.586637,-0.144017,5.809998,-4.783148,4.070143,0.148471,-7.819804,-8.262797,-8.246028,-5.255284],[-6.622423,4.779080,0.941471,7.364598,7.193026,3.850139,-2.682258,-3.847552,5.656038,1.948594,-0.480055,7.421201],[-0.239736,0.554032,-3.317669,6.763919,-5.307694,-0.411146,0.646948,2.020874,-3.319319,-5.954307,1.696868,1.733430],[-0.265715,9.564320,8.153696,6.631174,-9.206147,-7.903050,-2.496191,-5.231277,-6.104654,-6.568263,-1.425126,-9.537609]],[[-4.999187,9.436839,1.073695,-3.409107,0.967952,4.808201,8.525687,0.062207,8.235515,-3.001646,9.376247,3.859611],[8.836629,-4.548989,7.930769,4.333855,8.588660,2.258530,7.316837,-7.368007,0.617138,5.003378,5.301731,8.896894],[8.883999,-6.190111,-1.955112,-5.385939,-5.911464,7.751979,-2.857797,6.988721,-8.408528,-9.052323,1.966871,-5.889903],[-4.846795,1.728133,-0.415079,6.697720,-0.298583,0.709939,9.882093,5.613124,-3.328078,6.062031,0.705626,-2.876824],[-2.029387,4.139721,-6.217356,-3.639501,8.534666,-0.952649,-6.008038,5.915779,7.641906,0.666580,2.240574,-6.330055],[-2.037141,-6.890436,6.681170,2.094485,4.072090,1.175524,-7.537994,3.405067,9.886345,-3.676740,9.466756,-5.587198],[-3.871351,5.703843,-0.108624,3.467422,8.798925,-0.379467,-2.627809,-9.392557,-7.350761,1.122851,-1.503907,4.089656],[-9.970565,1.217186,8.794387,9.289564,-2.757852,8.141840,-2.847184,6.952446,-0.118350,-0.789542,5.341566,2.774232],[-9.036231,-5.008007,7.620524,-7.433362,4.192593,8.378029,-9.194313,-7.531155,8.458669,5.302842,-2.437823,6.886723],[6.624861,-2.541581,1.216812,-5.323055,-3.796564,-0.413844,-4.902888,-0.945562,-3.421573,9.460828,-1.739414,3.945827],[7.362171,4.715123,6.446475,8.218348,4.967234,0.091896,6.311893,-5.962132,2.813284,0.101941,-2.773858,4.021423],[5.337370,7.831343,0.709005,5.477689,6.209902,-9.118881,9.000885,6.298830,6.441666,5.967750,9.059858,4.377712],[-1.779106,-0.686996,-1.941549,-7.969483,-7.402982,4.853867,-1.755567,8.054859,0.918517,0.551728,2.867165,9.596695],[0.388473,8.538367,3.385397,9.746317,6.836430,-3.599501,-3.312052,0.541960,-6.654698,-8.145543,7.367784,-6.443378],[2.038942,6.454189,3.984441,-6.504989,-2.921178,8.679261,-5.983196,9.339726,-0.844539,6.171135,-7.259183,-5.422141]],[[6.234893,-9.499067,-8.238585,9.513872,-7.351587,-2.646529,-1.409080,-3.847418,-4.150266,-7.307091,1.474179,-6.180678],[1.217140,-0.187609,-5.793205,-6.725408,6.041944,-8.041031,3.959883,0.639005,-7.289390,5.432075,-7.677859,8.358330],[0.199648,3.939266,-1.877420,3.797968,5.077305,4.980740,-4.076586,5.194225,-2.812332,5.359823,-5.456881,7.618752],[-4.044959,2.591115,4.419142,7.893048,-1.902154,7.066013,-0.129867,-6.559793,-8.237924,0.598912,2.304521,-2.239373],[-5.578282,4.613542,-1.995270,1.414259,-1.679681,-6.429330,-3.546917,-3.918941,-6.905721,2.538384,-0.635359,9.755991],[4.834516,6.902815,5.873303,2.433142,7.387030,-6.873803,6.460916,-6.573054,-1.411667,3.650994,-1.492459,7.064539],[6.002113,7.525472,-3.554960,-5.026021,8.841140,-5.788252,1.359601,-7.791412,8.635209,3.647509,8.817971,-6.401089],[-9.928126,-2.487184,4.284384,2.491478,-2.710974,2.052992,7.014255,-9.398605,7.817874,-5.223673,-3.468900,-7.976174],[9.982868,3.955067,0.046081,9.266166,8.569243,4.403458,9.709656,-9.422148,5.771482,4.412931,0.469083,-1.191202],[-4.040956,-4.211849,7.346231,-4.165039,-6.126585,8.461511,6.424118,1.547880,-7.162995,-4.258976,6.902145,1.943479],[-2.433716,-6.094776,8.578343,-9.487485,8.861104,-4.299301,1.682837,8.925004,-9.122478,-1.647999,7.234041,3.492821],[-1.213384,-1.804330,-1.542027,-2.080906,-7.237387,-7.239646,6.733259,9.258109,8.397392,-6.199828,1.665974,-0.447167],[-0.080819,0.164346,-1.795797,-2.576437,-6.725317,2.244136,-6.076326,2.051639,-0.992055,-4.009722,2.351190,-2.726824],[-8.178678,6.969182,-0.608857,6.705810,-2.118729,8.644341,3.225906,9.359716,-0.957928,-7.499440,5.310296,7.630869],[-7.770547,2.551766,4.180753,-1.842019,-9.702237,8.786404,-6.408973,-6.882998,-8.616075,4.695721,5.048072,5.435298]],[[2.624366,-2.416291,-0.790168,-4.839119,-4.622566,-5.246665,9.854883,0.904610,-9.730899,7.363437,6.620258,-3.733423],[0.997209,-8.877273,-1.211100,-9.352983,0.458200,-8.624792,-3.734290,-3.490139,6.253896,-9.884999,-5.214660,-7.215034],[3.302897,8.650706,1.909424,-7.803353,0.611012,0.889041,-8.803668,-9.531908,0.704806,7.829761,0.753559,-0.272852],[-8.176247,-3.958518,-5.337554,-3.716054,-8.064467,-8.232137,3.526165,-9.007755,7.977395,-2.016218,6.205353,-3.887503],[-1.032872,-0.173018,3.028177,-7.159991,3.905368,-0.519497,3.409805,0.970124,-0.179265,-5.202544,-5.729774,6.305276],[-5.499398,-3.848366,-0.185955,-2.101675,-5.596599,-5.705768,8.354610,-0.284691,7.156482,-2.099725,3.665663,-7.021287],[-8.421734,8.703407,4.175472,-8.376854,-9.504505,5.475520,6.923544,8.396283,-7.817350,-8.969150,-0.252062,8.201117],[5.345416,7.413254,9.353423,6.744628,-2.799191,7.278471,4.971626,7.174947,-9.860018,-5.247373,1.730203,2.266093],[0.683801,8.102201,-9.567727,-3.470013,6.990461,-6.337955,3.178277,-6.310180,-6.808437,-9.334913,3.626769,-4.232043],[-5.823598,-3.930099,-9.455421,-0.034593,5.023250,-9.766364,-1.941660,2.348849,-0.812516,-5.698795,5.908618,2.160871],[-4.482589,3.188573,1.277701,9.701981,-3.673031,7.297581,-7.029697,4.319285,-5.566532,0.998904,-6.032729,-4.657178],[4.270099,-1.765464,8.409694,-8.544865,4.619006,5.142117,8.855853,4.072560,-6.963132,2.036924,-1.403882,-6.836394],[-0.648048,6.328859,0.610279,3.121867,-2.590370,5.311879,8.587911,-7.806366,-8.635370,1.134774,-7.812064,4.060419],[-7.542109,1.565219,5.739173,9.361522,-9.321254,-3.197159,-3.893874,-0.474427,-3.494405,-3.585391,1.194412,-3.081061],[-2.276147,-7.675665,-6.213894,-7.634676,-0.148491,8.976148,9.960758,0.324700,5.386600,1.797350,6.445483,6.379622]],[[-3.242354,2.667743,-4.964724,9.172094,6.965520,5.780056,8.447170,-0.304834,-5.942512,-7.500680,-0.088196,9.710030],[6.611912,2.397232,-0.189748,-0.339566,-1.518863,-1.560430,-3.842963,-5.891262,7.126139,2.191286,1.682225,-8.077871],[-1.709008,1.577489,-1.155822,-5.024241,-7.599657,-0.687253,-6.741888,9.254638,-8.266504,1.359832,7.131693,2.294238],[-7.909632,7.190999,-0.596768,2.268011,-3.655088,-1.863783,4.546786,2.156513,-4.963699,-8.927359,-2.959947,-1.364214],[7.860505,0.439527,3.971964,-1.229527,-7.016707,4.077960,7.213361,7.106164,4.660018,3.389449,-9.455586,-3.384392],[-3.013638,-7.210996,-3.918892,-4.990647,-4.506362,-2.939432,-1.005555,9.295734,6.242515,5.469379,9.310214,-7.982557],[-8.067316,7.643338,-1.464859,-2.422161,-1.269527,-4.243303,0.288424,1.113228,-6.311862,9.908903,-0.790309,2.834558],[4.971129,-6.676492,6.814796,4.558729,-4.677889,9.485053,3.441873,-4.620530,-7.924535,-7.855455,1.574070,3.644509],[-9.988034,-6.398612,-7.549585,-1.701957,-6.657281,-6.081923,5.693280,-3.850243,6.307692,0.180106,9.810663,-9.393681],[-3.967574,2.436182,-6.902993,5.741561,8.930860,1.633640,-6.926834,3.217981,6.022688,-3.601510,5.352790,-3.247787],[-5.940040,9.880760,7.464088,4.905585,9.272792,6.209026,-5.136720,-0.348315,-5.402595,2.204094,2.396312,-0.906635],[-3.124684,6.468466,5.436927,-4.211994,5.248693,8.107079,-0.782367,-6.903829,4.068360,1.375091,4.182473,8.253130],[-7.116964,-6.601827,2.910948,-3.124144,7.395480,6.298965,1.242504,3.853236,-9.333745,-1.351112,7.479535,-7.418943],[-3.572838,-3.628398,7.118632,-5.395246,-8.827787,4.548029,6.652553,-8.494679,4.361018,6.062129,3.770712,-0.388618],[7.372877,-8.989563,0.685698,3.158912,0.775421,4.512755,5.405811,-1.299533,-0.634036,7.928467,3.738834,8.846115]],[[9.317719,6.536611,4.588951,-0.231229,-8.959028,6.760385,3.299556,-3.806835,0.975631,3.428736,4.850139,-3.170453],[4.638168,0.329135,2.711117,-5.465879,9.376746,-0.412119,8.287703,1.252763,0.510312,4.791512,3.052570,3.342246],[-4.429632,9.773220,-1.504681,4.661918,6.303024,-0.145743,5.236580,3.175683,0.332577,2.506720,1.291226,-7.151995],[-7.517455,2.589484,1.946738,-6.185278,-2.372642,0.473454,1.100408,-7.719754,2.815025,-2.596266,4.503033,5.929954],[6.049431,8.141938,8.940102,5.757830,-5.580579,5.533084,-5.021468,4.290504,1.714181,8.232229,0.740028,3.679776],[4.174983,-2.211315,-8.261105,3.220611,-3.022767,-8.627019,-0.291994,8.047902,-3.540930,9.052803,-2.209869,3.945571],[8.434006,7.556738,3.417744,-6.990308,-9.881345,0.097825,-8.407458,-9.364353,-2.092457,2.189415,-9.761587,7.346428],[5.687850,7.103369,0.733813,-8.074415,-8.918192,1.742543,-3.631960,-7.980963,-4.987441,8.499599,-9.652554,-9.117798],[-7.112657,7.227229,-9.307314,-1.374611,9.362172,-7.351471,-5.466230,-0.600668,-2.235442,-4.580175,3.995047,8.320842],[8.683703,-8.572390,-1.505165,-2.606707,-3.372808,5.655087,-0.917944,8.758691,-5.522697,-1.892032,-2.544692,1.703634],[-5.011743,3.297143,-6.249599,-6.658174,-1.375689,1.382422,6.578454,6.206630,9.412492,-3.628298,-6.041779,-6.247246],[8.688576,-2.873376,7.349216,-0.268438,4.339427,0.270655,-2.812218,0.743004,-3.344392,3.171533,-2.497777,-8.539388],[-1.963294,6.705215,-8.502848,6.360119,-8.357232,4.932381,7.623517,-2.497727,3.291058,-8.588205,9.835290,-1.380913],[-2.042653,4.913942,6.847013,-6.368377,-3.509677,-8.525412,5.319404,4.701346,6.018237,3.312134,-7.872793,-3.172007],[0.038416,-2.910655,-6.118519,1.845418,-5.748219,-5.380823,-7.996204,8.179481,-5.389746,7.543916,1.990752,-2.916769]],[[7.986869,7.744260,4.189720,6.210524,-1.907735,9.185066,7.742559,2.714917,4.719201,9.521186,0.750630,-1.013514],[-2.106848,1.056337,-7.462468,5.845643,-1.775792,-5.119890,-6.464645,-4.466334,0.430336,9.165235,-5.010952,-9.819329],[-0.226050,5.842497,5.658601,-0.099972,9.765488,6.063326,1.736993,5.857822,-3.853891,3.232601,-8.188623,3.861513],[9.100390,-1.391393,-7.834200,5.347721,-3.399916,-9.822141,-1.144693,6.772265,-7.147965,-2.161311,3.890597,6.731417],[6.691471,-2.220022,9.578863,9.396587,6.816985,-6.791847,-9.630140,-0.389989,7.257713,-2.749222,8.078342,0.038056],[5.069225,5.049949,-9.911860,-2.505590,2.868620,4.078808,-3.068448,1.862115,-8.041111,7.958064,2.065706,2.082557],[-8.145056,1.788788,4.410326,-6.366550,-1.162833,-6.121686,-6.233608,-7.681286,0.888508,-2.771836,-3.841811,7.896417],[-8.346128,6.926136,6.962941,-9.534581,4.482463,2.715449,-5.772404,7.019829,-3.208588,4.450754,-8.648474,-2.628103],[1.987058,0.676591,4.218660,-6.061648,-5.746475,7.583998,-2.368079,7.357425,1.557935,1.081597,-1.497149,-3.174409],[-5.888782,-5.670465,3.973669,-4.207857,2.343831,-1.251834,9.622924,-5.042616,0.976453,0.298272,4.010255,0.337545],[8.765077,3.964362,5.850227,-6.773089,8.065522,-0.747498,-5.446721,-5.047903,-0.465352,-3.855051,5.533921,6.551653],[-7.977699,7.396718,-0.278655,4.554093,9.825258,0.688082,-1.078027,-5.740574,-4.806910,5.520378,8.358705,0.996360],[-3.732586,1.973194,-5.434624,-2.510237,8.092721,2.046476,-3.259926,-9.531267,4.461437,-3.388845,6.822285,1.334962],[4.749830,-9.058460,-7.083025,2.663184,0.519856,0.314450,5.396231,1.207172,0.970294,-3.708303,7.309032,4.816573],[3.221077,-1.276028,-1.669501,-9.909983,-9.861864,-9.488456,-4.656780,-3.848341,6.735868,-5.978139,2.091211,4.169452]],[[-8.308102,2.900732,-3.861733,-3.768790,-5.025961,6.946886,-4.977959,7.138012,-0.982551,-3.669320,7.669174,6.025143],[-7.286163,4.250299,6.590345,-8.257727,6.603776,9.766625,-4.225111,9.495951,-7.188874,4.715910,-1.849582,-5.914666],[-4.144037,-8.053894,8.198655,-0.051369,8.217859,0.150284,7.444590,-4.240251,8.135404,-5.305600,4.017459,0.637217],[-4.142625,-1.095357,9.172408,-1.974240,4.179536,5.290701,-0.251607,-6.464427,6.042084,-9.138820,0.108774,0.520874],[-8.541526,-8.348289,1.310780,7.753271,-6.617802,6.024374,-8.873922,-9.948495,-0.807494,-7.690066,7.322738,-5.377488],[8.343459,2.790831,5.242668,0.701913,5.769373,8.740422,0.914686,-4.171680,-5.890204,5.756134,9.521010,9.142891],[5.357849,-9.690998,-0.877491,-4.476497,7.867527,1.682566,-8.968408,-0.900635,-5.499978,8.906894,0.770116,-0.746540],[8.428065,-9.435482,0.328009,-0.595107,-6.563414,0.031758,9.597075,-0.262949,-7.480924,4.504774,-7.692858,-7.951198],[6.564797,6.720781,2.811735,-3.796687,4.154795,-8.938527,-3.282809,-2.231502,3.634043,-1.780721,9.660778,-2.284111],[-2.300903,-4.937831,6.241509,8.689715,-1.281130,1.217985,-2.627586,-1.005964,8.575121,-7.719699,1.462911,-2.222479],[3.419701,7.223694,9.607205,-1.071689,3.847852,-6.846434,7.055656,7.170231,-7.647410,7.310257,4.707267,4.517570],[-6.815098,-5.901884,-0.468165,5.046713,8.043713,-9.860374,-2.991984,-0.183265,1.559868,-1.933851,7.750463,0.824316],[9.052402,-8.753233,-8.161379,3.823298,-4.577604,7.213945,-4.127321,-2.509717,6.449503,-4.770577,2.763374,-5.513504],[2.284431,6.038931,-9.435510,1.536344,8.149379,-1.064316,1.984919,6.794878,-4.313014,-4.000940,9.333486,-3.514335],[4.882023,-7.412835,-9.244671,1.085144,3.559214,-4.485882,2.276916,6.497266,0.714222,6.124906,2.239137,-2.431093]]], dtype = "float64")#candidate|1841|(11, 15, 12)|const|float64
uop_1842 = relay.cosh(const_1841.astype('float64')) # shape=(11, 15, 12)
output = uop_1842
output2 = uop_1842
func_1844 = relay.Function([], output)
mod['func_1844'] = func_1844
mod = relay.transform.InferType()(mod)
mutated_mod['func_1844'] = func_1844
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1844_call = mutated_mod.get_global_var('func_1844')
call_1845 = func_1844_call()
output = call_1845
func_1846 = relay.Function([], output)
mutated_mod['func_1846'] = func_1846
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1844_call = mod.get_global_var('func_1844')
func_1846_call = mutated_mod.get_global_var('func_1846')
call_1851 = func_1844_call()
call_1852 = func_1844_call()
output = relay.Tuple([call_1851,])
output2 = relay.Tuple([call_1852,])
func_1857 = relay.Function([], output)
mod['func_1857'] = func_1857
mod = relay.transform.InferType()(mod)
mutated_mod['func_1857'] = func_1857
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1857_call = mutated_mod.get_global_var('func_1857')
call_1858 = func_1857_call()
output = call_1858
func_1859 = relay.Function([], output)
mutated_mod['func_1859'] = func_1859
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1857_call = mod.get_global_var('func_1857')
func_1859_call = mutated_mod.get_global_var('func_1859')
call_1927 = relay.TupleGetItem(func_1857_call(), 0)
call_1928 = relay.TupleGetItem(func_1859_call(), 0)
const_1932 = relay.const([[[-4.510652,4.804694,-0.819254,-7.904117,-9.324329,-0.631572,8.789859,9.784609,2.853221,5.669783,-5.147437,2.448653],[-1.379180,-7.518232,7.170639,-2.368182,-4.123365,-0.245957,1.404932,-0.431823,-6.895498,2.396462,-4.252321,7.430040],[-3.799343,3.875532,-2.483171,-9.174636,0.013778,7.362647,-8.232864,-6.329216,6.169973,4.889420,8.463569,-0.900284],[-5.327445,5.319252,-9.182128,-2.768701,6.376147,4.495291,6.778721,8.511276,-4.891655,2.753600,-9.867644,-4.269523],[-4.654077,-7.617749,4.600372,0.516749,-8.904969,-7.840350,8.329710,1.739291,-3.485550,4.588915,-2.988111,-4.172761],[0.431780,9.309805,6.715436,1.266740,1.306442,2.754841,4.990094,-3.061996,-6.122700,-5.101778,-3.863429,-4.128529],[0.858126,-3.943175,-0.505846,-9.890191,-7.528470,8.482491,3.280351,-5.507668,3.892362,2.285517,-6.786905,-7.537665],[-9.779644,0.985823,0.366101,3.595760,4.606587,-3.189761,-6.981236,4.981619,5.618704,-8.419451,3.272732,9.182662],[4.569852,7.858452,2.938011,-1.684013,6.925764,-6.957366,7.405504,3.128072,7.292124,8.779543,-9.647842,-0.443289],[4.203389,6.181927,1.890425,0.684248,9.238354,9.445109,4.603218,8.412586,4.766292,5.611530,0.915748,1.281187],[-4.525655,3.184826,2.401769,-3.594330,-3.641537,1.506937,9.763807,-3.798823,-1.736954,2.162588,6.604407,-0.134685],[-8.504227,-4.797239,-8.667961,-4.940608,-1.593402,4.435381,9.119234,-7.791796,7.038666,-9.459379,5.238100,-7.283574],[-3.792178,9.606810,-0.908958,-7.915581,7.463677,-8.089034,-8.214962,-3.020011,-5.461199,-4.778648,-2.461258,-0.674728],[-5.786593,-3.673609,0.595256,8.621146,-9.629016,-5.938952,-5.552706,0.627616,7.565792,2.801601,-9.991201,-4.715166],[-0.909372,-4.210092,0.537741,-5.733209,2.002071,3.692735,2.641325,-1.356912,1.198942,-5.399649,2.584527,7.910294]],[[-4.418430,-7.977589,4.170752,2.325710,6.460705,-6.528355,-3.616571,1.722103,4.125768,2.259868,7.212725,-1.211312],[-5.825657,8.217967,-9.073528,-6.862201,0.276300,0.810480,6.072004,-4.948188,-3.430012,2.729742,-5.944152,3.015131],[-1.264811,-0.723197,-8.881915,-3.523025,-1.825573,8.248002,0.993520,0.597576,-5.990281,8.534524,8.554547,5.054938],[-5.212657,3.552746,9.098866,-4.291520,9.630751,8.910373,2.750036,-6.479870,0.688284,-8.862219,1.103268,-8.712933],[-6.625779,0.630113,9.797541,4.212354,8.305176,-8.372638,3.135720,-2.485305,-0.119459,0.791281,-6.649694,3.214059],[4.243643,-0.443035,1.476994,-6.532102,-6.951324,2.826600,-1.804906,9.087560,3.084024,-8.385392,-2.945474,0.632939],[5.685434,-4.971785,-1.028037,2.783414,1.616222,-6.027869,-1.224175,-9.325835,-4.789704,0.964950,-5.138440,7.719184],[-9.249741,7.095066,-0.884340,6.877931,8.251801,8.780172,7.730168,4.430258,-5.888802,9.121405,-4.269462,0.940425],[-7.056295,-8.594924,6.388825,-3.937611,2.991012,-0.028028,9.291226,0.633800,5.560714,-5.337895,-7.995212,9.779363],[-3.335972,9.383198,-6.446779,9.288405,5.251340,-4.021448,2.821631,2.545949,-6.780539,8.552565,6.894860,-8.620466],[9.248381,-3.655992,-4.642943,2.493718,-6.766512,9.660296,9.235022,5.772258,-7.980496,-5.345670,5.743266,0.794783],[8.982943,9.526878,0.336968,-6.742137,-9.556523,-7.480818,-3.986411,1.670045,7.217251,-9.625073,-9.422414,4.730737],[6.869381,-1.750282,0.819620,-2.004151,-7.147912,-9.374202,9.829713,4.057924,9.879357,-8.510789,7.436792,-7.346743],[-9.756825,3.595848,6.743846,-7.849295,-5.298331,1.714826,-3.584809,7.489331,6.059662,-8.483025,-3.367081,-1.185950],[-3.815682,5.763894,8.793728,-9.815004,-2.182749,-2.556203,-4.593914,-1.512305,9.412467,0.171465,0.952073,0.002497]],[[-4.668760,2.201742,2.070933,-2.071804,-0.712971,4.067063,1.093486,-4.143296,0.506983,6.805077,9.834480,5.780477],[2.630913,-1.023337,0.109822,1.896074,3.682054,-6.582280,9.057758,-5.068387,-2.471200,6.028680,0.489031,-6.436089],[-3.942171,5.948201,9.352470,-3.870369,6.224529,-4.534231,-7.444924,-9.855513,-2.395285,-6.401904,1.612904,-9.141177],[-9.695311,4.348835,1.830135,4.756376,-9.493251,0.791801,2.927773,-1.905707,-9.429918,0.374786,4.857419,-1.269649],[-6.930284,6.403257,-7.564175,5.976174,7.565217,-4.009638,-7.931033,-1.660117,-3.886267,7.743942,4.152125,-0.192513],[-5.384862,9.887741,7.729238,9.845685,-9.528407,6.347428,-0.877493,-8.131765,-5.590598,-1.598007,-1.877392,6.653539],[-4.830879,-3.775530,-2.261696,5.350767,-5.289161,-7.052201,2.647942,4.590459,-1.500636,-2.788136,9.338687,-2.468055],[8.394033,6.949282,9.918049,1.031558,1.878715,-6.429023,-6.215331,-0.200910,-2.251227,5.775594,-4.032028,7.777062],[1.132729,-4.404679,-3.583010,-2.731292,1.321640,9.083315,-1.837242,8.036644,-5.001172,-4.093001,9.101171,2.130749],[1.982379,4.023675,1.805722,1.712597,-7.507199,-6.824028,-8.568598,3.036268,-0.831657,5.432853,0.651384,-1.124102],[-2.967561,-8.838019,7.150444,1.410784,-8.846229,-5.862232,0.779815,5.479688,6.899536,5.382322,-0.003093,-0.634170],[6.633148,-3.263321,-4.988821,9.774570,5.317791,-0.893257,6.421052,7.134859,5.116531,-6.247756,4.201501,-9.800069],[1.115968,0.457256,-5.112585,-1.353507,8.099424,-9.499559,5.862143,-8.890128,-5.365051,2.635157,-8.361039,0.570341],[-4.527072,-7.776871,2.624466,5.746481,-8.346804,8.878224,-8.578915,6.562526,-4.105639,2.411722,4.412861,-2.718016],[-8.206269,7.065318,-2.127076,-8.840184,-0.692043,1.061396,-9.949827,-1.781384,5.515281,9.028150,4.096078,7.559708]],[[4.764976,8.271601,-3.666049,-5.583092,8.590827,4.697522,-5.247731,5.957464,-5.231433,9.403433,0.867594,-5.238577],[8.934174,-1.377378,-0.558320,-7.735151,-8.133365,-3.324505,1.579523,4.688224,-1.052524,-5.186383,7.240265,-1.752435],[-2.770885,-0.521053,8.056516,-4.322393,-4.787179,-8.264759,-4.471726,-9.030618,-4.958628,7.433252,6.302570,7.267339],[6.576647,1.418013,4.877460,2.822926,6.020675,2.798466,-5.466712,0.148522,-5.566969,1.692696,-0.493616,4.367265],[-9.035993,-1.564748,5.051061,5.306129,5.962141,6.315758,-7.695534,0.169617,-1.322195,1.673183,-8.439501,-7.678408],[-0.719409,-8.499011,3.108993,2.234510,-2.099368,-6.734387,7.260223,2.569572,-9.185211,1.847393,5.216342,-0.007952],[6.614912,-4.724292,-7.469013,-9.188095,-8.325095,5.386157,-4.522115,7.071737,-3.818716,4.485853,0.887924,-8.086521],[9.505502,8.710941,-0.504268,3.791379,9.582898,-1.186071,-9.994684,-3.603814,8.173423,-4.321233,-5.794005,-1.453944],[8.758175,6.121431,-2.426671,-7.217548,1.356637,-8.759252,9.932962,-5.485925,3.767871,-4.865277,3.778547,-8.408306],[-2.651202,7.936229,-0.032429,3.083231,9.225431,6.019716,0.861101,6.302438,5.585266,-6.381498,9.351330,1.433303],[1.734654,-1.805544,-5.070878,5.886383,-4.473968,4.273110,5.361401,-6.370399,3.892251,-1.769260,-6.989234,-5.031671],[-6.881452,-4.620736,3.622730,-5.949767,-4.368856,1.512774,-5.602765,4.799850,7.717222,0.930052,-9.701783,6.446978],[8.044231,-9.901448,-1.500280,2.989472,0.242027,-0.837230,6.332012,-4.368124,-3.261494,-2.233845,-7.783455,0.466919],[1.333241,-3.649098,-8.054218,0.559012,-4.335182,4.983277,-4.950640,3.405649,2.396980,-1.320639,-5.184449,-4.687116],[4.367307,8.153219,-9.799311,4.163375,-7.141989,1.069437,-3.357701,-9.128430,-0.165385,9.079377,4.726364,3.627156]],[[-5.902103,0.086975,-6.416026,8.771243,9.800146,5.383695,3.387313,7.357064,5.082297,8.016205,3.924951,-2.494435],[6.842344,0.710582,-2.655439,3.399437,-6.713800,6.491598,-3.975593,-1.080420,-4.583461,-1.381761,9.329781,8.749381],[-3.595752,-6.849828,-7.956217,-4.470247,-2.226204,-5.343754,-2.546999,5.975401,6.446841,0.991857,-6.538588,4.928024],[7.668779,-5.530908,1.985133,0.901319,-5.373610,5.097933,-1.026191,7.888139,1.472794,4.073526,0.510349,4.330408],[-2.441798,3.782115,-1.698838,5.865184,-2.880571,-9.110509,5.645108,2.117130,1.681171,-5.717912,-4.166816,-8.294950],[-4.229217,1.925321,4.250281,-7.398447,7.463480,-5.324483,-1.409648,-3.072036,9.990622,-5.003798,-2.983261,5.828640],[-0.873825,-7.725033,0.124243,4.423633,-5.090705,8.677427,5.769399,0.082395,5.559050,-2.479958,7.981647,-2.838555],[-3.126360,6.225309,8.524152,-4.948912,4.482166,-0.863979,-7.285766,-5.388857,2.719850,-6.062291,0.949852,2.667601],[1.595193,-3.171023,-9.352620,3.362398,2.161596,-3.344084,1.653219,-4.557160,6.625739,1.276906,-8.446385,-1.689859],[-3.848795,-7.683762,7.470884,-1.831695,-0.411753,7.372129,-5.935624,5.320387,-3.177907,-8.455208,-4.530707,-3.894851],[4.206765,2.564728,6.110384,5.311365,-3.900558,7.674268,-1.721215,-3.527587,-6.690737,0.868998,6.836393,-9.741277],[-9.759273,9.075846,2.122739,-5.978978,-2.704039,7.099513,-8.217063,1.536454,-6.606456,-4.463218,-9.658651,1.349173],[-8.981702,8.827207,7.317930,8.813639,-3.276297,5.213219,-2.947861,2.883945,8.406672,-2.891738,8.206877,9.375651],[-1.071358,-0.324351,-9.344778,1.492801,1.916482,-7.769526,-0.503205,-5.187680,1.422910,7.176245,-8.345698,-6.648283],[0.921528,5.410725,-1.830345,-1.235090,-9.042657,7.864176,1.002238,8.538751,-3.589209,7.118305,-1.834701,5.078243]],[[1.691723,0.338807,9.979947,-0.476522,6.292676,-7.414287,-8.089018,-2.363708,4.686425,2.452633,2.906098,2.234179],[4.819449,-6.190092,9.380976,6.149590,-0.772853,-1.585410,-0.786745,-8.532831,-2.601259,6.361374,-2.063810,0.594342],[3.791835,-6.220095,2.939325,-3.099135,-2.031024,-2.690699,0.186145,5.050640,8.383325,8.745221,-6.055022,6.403851],[-9.514583,8.575774,-6.958630,9.592084,2.675804,-1.340727,7.764143,9.399377,-7.929108,4.916812,9.875574,9.979758],[-2.250281,-4.187526,5.711002,5.588565,-2.887511,-2.374180,1.606056,3.860370,3.796555,-7.869465,-0.136816,-7.009650],[7.104465,-9.689886,-5.707234,3.838784,8.302987,2.947930,0.481218,-6.760252,5.386492,9.457192,-9.881566,-6.528735],[-7.775001,4.997300,-2.901184,8.111077,1.072579,7.865081,-3.310330,5.682681,-6.763943,-8.489191,5.426630,-4.907059],[0.586314,-3.195287,-3.964297,3.677260,0.098857,9.011187,-1.556392,9.307929,2.484815,-7.551003,-8.560752,1.680390],[-1.443026,-9.825623,-0.011517,9.697405,-8.583130,-4.641155,-7.883735,-9.634374,-6.273647,5.199597,-2.796753,-7.471390],[8.247377,9.517768,-3.339867,6.769070,-0.785261,4.086917,-9.964775,-9.575550,-0.264412,1.568887,-2.306687,-6.624299],[3.456972,-0.872718,-9.170360,3.520305,5.190258,6.223236,3.195989,-3.746379,2.446783,9.155314,-3.674333,-8.174460],[-8.678249,8.164702,8.434727,2.231816,-4.949836,5.722127,-1.557569,-0.912951,7.275256,-5.587554,-5.998500,0.540941],[-4.025609,6.875826,-0.796460,9.493565,1.281152,-0.050212,-1.203517,-0.675096,4.495833,7.720575,-3.913657,8.936751],[-7.430165,6.580418,-3.144785,-0.353634,7.988716,-4.601187,6.419587,-0.682210,-8.810116,-1.921587,-8.430660,3.794686],[-4.323332,4.925186,1.235031,-9.897453,-0.112137,-4.666420,-9.421933,1.336550,5.766759,-0.799316,2.422375,0.069417]],[[7.892328,-4.571534,-7.778092,3.700984,8.100488,-2.278627,5.708782,-7.326866,-6.271750,-1.203471,2.295192,-8.412310],[7.398212,1.203339,3.459218,5.247451,-2.679545,-4.934187,8.312548,0.926411,-2.032047,2.642401,4.609568,-1.516017],[3.102665,-0.983660,-3.724017,7.235494,7.370113,0.784468,3.701133,9.092436,-3.199108,4.183093,0.558838,-0.979636],[-0.339140,0.906140,7.544297,1.402347,4.021341,7.895107,-7.977281,3.961626,-6.071037,-8.316736,3.806858,5.294091],[0.243495,-1.006168,-4.768121,-8.859110,-3.414222,-1.176138,8.563083,-7.566044,5.246928,3.143655,-1.888929,-4.405876],[9.750554,3.345726,-6.637389,-2.611071,3.914894,4.589599,-3.029094,-5.724463,4.341062,-0.532665,-9.698121,7.252202],[8.410127,2.996717,-6.506393,-9.782321,-6.017937,-1.703087,-3.288313,-0.182222,9.684412,4.397950,9.074484,7.078349],[-0.224026,-0.692100,-8.830774,9.668903,-8.526621,-1.219418,-3.904520,-9.358442,-1.353002,4.881603,4.871058,-1.025064],[3.545182,-3.990773,8.756964,-0.979981,-8.205087,-3.504342,-9.377610,-2.653282,-5.431201,0.122694,7.924390,7.370943],[3.357095,-3.119259,-3.410628,5.138569,1.072803,-4.023245,1.967437,-5.143740,7.463116,7.833990,-6.178373,-8.908455],[-8.911671,0.505529,9.890215,3.955828,-7.702549,-3.897875,-6.325848,-4.877708,8.814163,-5.655682,8.120350,-0.536148],[5.428662,7.440350,2.152098,-2.694166,1.283675,8.706944,-5.676185,7.009477,0.440639,4.996370,-9.994197,6.499560],[-0.988677,-3.986741,-5.287645,7.383653,-4.973029,-3.247150,-6.193648,5.895843,-0.398265,3.407537,2.410669,4.034320],[-0.942663,-4.435497,1.829708,-4.308140,0.619709,9.693153,-7.860767,7.617673,2.415983,-8.552010,-3.047507,-6.451119],[8.852524,0.856076,-5.732830,2.368749,7.724827,8.081080,3.660402,0.242931,4.056356,-7.360659,9.526235,-7.911588]],[[8.866611,-5.346913,7.455375,1.370545,-7.691918,2.623554,1.143731,1.727425,6.944062,7.406924,6.266151,0.340488],[-5.629347,-4.143022,-6.152377,-2.676897,1.591005,1.500006,1.209670,2.971869,-1.249065,1.659466,1.865351,-5.616131],[5.345648,1.727966,-2.520080,0.583947,8.030168,-4.203095,2.119253,5.578407,-2.642691,5.032681,2.899402,7.043393],[5.439753,-5.334236,-2.373739,0.039917,-5.534947,-4.758902,-3.206997,7.999348,4.987846,5.700842,1.176755,7.555550],[3.624018,5.185471,-2.908695,-7.515672,4.255648,-6.017609,-0.794609,-7.134402,4.384141,7.878115,-9.857510,4.696282],[3.872726,-5.264599,3.657069,-1.040769,-7.802179,-6.234400,-3.627291,0.968427,3.578506,3.442302,8.274943,-7.787861],[-5.893554,-6.041741,8.252478,-3.631118,-2.961287,6.172816,1.892199,2.212617,5.162706,-1.019818,-8.669640,-4.594029],[3.423298,8.460370,2.285371,2.395976,-5.719660,-9.466013,2.539799,-8.771586,-6.901151,-4.376734,9.976662,9.710707],[6.084585,-9.443688,2.553708,2.472834,5.619515,-3.339194,-0.879933,-4.336877,7.787774,-2.730340,-1.820119,6.526251],[-0.977469,-7.356245,7.003467,2.511482,3.862119,-3.793397,-0.736946,5.331253,1.019278,-8.175588,-2.880480,-0.298340],[6.290760,-8.456753,2.615800,-9.900901,6.203829,3.321317,6.371341,7.818356,-5.218363,9.317667,8.478734,-2.280075],[-2.112936,0.126811,-8.494491,0.854818,-8.934006,8.431184,4.837285,-6.662156,-1.349345,5.812113,-2.222090,-3.810729],[-6.145719,6.760438,-1.902288,-8.392065,-8.321485,4.502707,3.128607,-3.356270,0.661069,7.946478,-6.920696,4.789364],[4.381894,-1.013432,-4.863072,8.196713,-8.420061,-1.519172,-0.076758,-7.364459,-1.250318,6.402575,-3.106002,-5.550524],[7.579772,-3.814940,6.558595,-7.100385,-3.481483,-0.248317,5.326557,9.209104,-4.431847,8.682499,3.406487,2.249148]],[[4.774710,4.924612,-1.229622,2.387653,-3.694971,5.344417,-1.913845,-1.673050,-2.766747,3.078344,-7.380222,-4.765146],[-6.211678,-8.696671,2.289242,-5.547508,-7.864677,-8.795418,0.540425,6.956677,4.493052,8.248211,-0.796275,-3.249882],[-9.043768,0.248407,-9.670388,1.922008,3.369553,-2.539649,1.068237,5.085285,4.251771,-2.761340,-7.067889,-2.802765],[6.808350,9.819540,3.022715,-9.809619,9.667680,7.061449,6.639496,-6.953744,-7.782362,3.587120,7.469753,1.437176],[-7.697749,5.785508,1.501190,-4.376624,7.948492,1.378021,2.538067,-8.598266,9.682320,2.287947,-0.490850,9.561891],[-8.314507,-8.490560,4.050042,-2.026800,-9.613230,-7.058939,5.228055,-8.975522,-9.978452,-6.068512,1.667762,-2.046636],[-6.010936,-0.246061,-0.184617,9.077605,-2.781374,-7.551774,6.449352,-4.007510,7.631655,-7.939432,4.340787,0.469252],[-1.153301,-9.984095,3.817404,-2.880486,-1.955229,-5.716758,-3.835069,3.201300,-6.420349,-3.920923,5.827235,6.246282],[-1.142575,7.002067,-7.887993,0.332445,-1.132559,-9.379071,6.127015,6.641597,1.854903,-7.418628,5.446938,1.828460],[2.701392,-5.369453,-5.121327,1.380421,1.655280,-5.959197,-0.002699,-2.259979,1.761316,-7.225902,4.090044,-7.987033],[9.731478,-1.495233,1.648992,-6.763393,9.042718,8.160985,-6.538350,-2.359063,4.510247,3.154587,2.122394,8.662422],[5.566956,3.378120,7.739775,6.484721,-5.981227,-8.067146,3.744844,-5.172615,5.725254,-8.512349,6.753828,1.971033],[-5.458488,-5.290370,-3.049913,-8.061278,7.523440,-1.394626,-1.223865,9.529139,7.808511,-2.483470,2.841423,1.747138],[-2.189063,-9.001703,0.462597,-4.727045,7.427775,6.209573,-7.097251,3.557914,9.989452,2.512869,9.044984,-7.012503],[-4.962159,-4.224359,9.479069,-1.299389,8.417324,2.402053,-1.058517,-4.462117,-5.683965,8.202603,-3.484592,-6.996236]],[[-7.025456,3.855202,5.850722,-6.029876,-7.152232,6.059434,-4.767497,4.316887,-7.401195,-6.994777,-8.266966,-0.613644],[-5.400485,-7.924210,-7.275171,-8.403518,-5.014886,5.374315,5.792608,6.659613,-6.934674,-3.101746,-6.616431,-9.694701],[-3.996496,6.703142,-1.261560,-5.030258,4.142882,0.567595,5.021409,-2.504815,4.525363,0.253039,2.959419,-1.881151],[4.850522,-1.052854,-2.205436,7.392904,-8.709060,5.042165,-3.043057,0.984421,-6.414231,-5.075694,2.640616,5.365822],[-6.868177,5.108657,9.083655,7.913140,-6.554224,-7.667569,-9.965531,-5.331436,-8.803976,5.447346,6.740878,-8.318176],[3.979853,4.290942,6.148888,9.620547,-0.021052,6.731326,-8.779074,-5.594335,0.170288,8.848010,-8.237177,-2.877131],[-0.874920,-2.879892,-9.577144,7.652799,0.131119,-3.213396,-9.857115,-7.145877,3.527885,-9.224140,-7.073821,-0.968929],[-7.410852,9.243983,7.409954,8.900365,-2.639913,1.303365,5.723809,-6.225708,-1.140726,4.287643,4.086624,7.496873],[-3.087745,-2.257027,-1.843875,-2.664611,0.624851,-5.608321,3.712762,-5.491558,9.300447,-2.572030,-2.471579,7.756156],[-5.684056,0.397761,-5.990749,-6.550340,9.998190,3.739566,2.550336,-3.567429,8.842427,-6.067092,-0.547907,-2.384618],[-0.597244,-8.451091,-7.068429,6.851629,3.595082,-0.862272,5.909888,-4.370833,0.791999,8.532295,6.067134,5.488416],[-8.865037,7.069008,-9.079673,-6.019011,-6.561622,-0.186429,-4.397799,5.558045,-9.706177,4.717310,-3.569170,-9.456407],[3.021564,4.171788,4.584557,2.821784,-7.757754,3.193080,2.872390,8.150875,-0.562474,-8.292888,-4.345707,-2.986260],[1.620661,-3.189116,3.833504,9.089038,-1.606989,5.193941,-7.762540,4.688369,8.253517,4.599267,-5.128442,2.522825],[-5.067566,3.692953,6.114911,-3.067480,2.500148,3.263937,9.921061,0.621319,0.942179,-0.472995,-8.492800,-1.596449]],[[-0.646321,-7.936071,-1.359103,9.060997,3.427867,3.932923,0.312001,4.062879,5.986336,5.339742,8.843045,-9.333923],[-8.721221,-8.374232,3.678764,-2.808163,6.871416,-8.014727,-6.735467,-9.880194,1.466110,8.536425,0.476006,3.745509],[9.302958,-2.182752,-3.700688,4.563377,1.270197,2.218534,-5.186161,-2.293807,-2.339154,2.662024,-2.987725,-7.815182],[-6.155263,-7.880928,-9.967126,-6.195692,8.795229,-4.758983,2.048446,-4.079639,-6.926223,2.126337,2.438483,-1.283413],[5.588300,9.772279,2.140144,7.548645,3.252503,-0.929483,3.857897,3.941064,9.753561,-5.844404,4.933266,2.757138],[-8.596120,-4.082776,-4.455884,2.445495,-6.808283,4.525909,-1.754462,8.032846,2.432648,0.520679,-0.481953,9.071447],[3.400664,5.142098,-6.652088,-2.693723,3.544237,-2.248319,5.540032,8.105829,-6.419297,7.107976,4.918948,-6.817867],[-9.968760,-0.301384,-8.202046,-0.708832,7.296951,-8.763787,-3.484771,1.957384,0.526499,7.609221,8.636229,2.321268],[-2.155436,4.809320,7.189450,-7.061805,9.470074,5.456222,-5.185881,4.088616,2.701096,5.048382,-7.663568,2.739156],[-4.005160,-9.814086,-1.160566,-6.195434,2.230376,-4.489244,8.248563,-7.300446,0.302030,1.194093,-2.467025,-0.201888],[-1.876401,4.956284,-7.760928,9.073775,-8.556095,-1.310792,9.330088,3.481113,-9.787615,7.878919,-3.188720,9.792268],[7.969675,4.238608,3.472878,3.484836,4.881712,0.975191,-5.600762,-5.897466,-9.311271,3.825794,0.036496,-0.450760],[-6.448653,-6.585322,-7.344071,2.745001,-9.363248,5.089509,-9.759318,0.554868,1.694278,1.253848,1.723836,-8.230519],[-8.799016,0.386607,-8.408109,-0.793921,-9.709567,1.148293,-9.345064,-9.302320,4.965410,-7.358315,7.564615,2.842477],[-4.191569,-9.851364,8.287091,-7.083222,-7.819745,0.462054,1.883146,7.409481,-1.697598,-7.849760,4.777083,5.334349]]], dtype = "float64")#candidate|1932|(11, 15, 12)|const|float64
bop_1933 = relay.bitwise_and(call_1927.astype('uint64'), relay.reshape(const_1932.astype('uint64'), relay.shape_of(call_1927))) # shape=(11, 15, 12)
bop_1936 = relay.bitwise_and(call_1928.astype('uint64'), relay.reshape(const_1932.astype('uint64'), relay.shape_of(call_1928))) # shape=(11, 15, 12)
output = relay.Tuple([bop_1933,])
output2 = relay.Tuple([bop_1936,])
func_1938 = relay.Function([], output)
mod['func_1938'] = func_1938
mod = relay.transform.InferType()(mod)
mutated_mod['func_1938'] = func_1938
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1938_call = mutated_mod.get_global_var('func_1938')
call_1939 = func_1938_call()
output = call_1939
func_1940 = relay.Function([], output)
mutated_mod['func_1940'] = func_1940
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1844_call = mod.get_global_var('func_1844')
func_1846_call = mutated_mod.get_global_var('func_1846')
call_1943 = func_1844_call()
call_1944 = func_1844_call()
func_946_call = mod.get_global_var('func_946')
func_949_call = mutated_mod.get_global_var('func_949')
const_1946 = relay.const(2.722386, dtype = "float32")#candidate|1946|()|const|float32
var_1947 = relay.var("var_1947", dtype = "float32", shape = (825,))#candidate|1947|(825,)|var|float32
call_1945 = func_946_call(relay.reshape(const_1946.astype('float32'), []), relay.reshape(var_1947.astype('float32'), [5, 11, 15]), )
call_1948 = func_946_call(relay.reshape(const_1946.astype('float32'), []), relay.reshape(var_1947.astype('float32'), [5, 11, 15]), )
output = relay.Tuple([call_1943,call_1945,const_1946,var_1947,])
output2 = relay.Tuple([call_1944,call_1948,const_1946,var_1947,])
func_1951 = relay.Function([var_1947,], output)
mod['func_1951'] = func_1951
mod = relay.transform.InferType()(mod)
var_1952 = relay.var("var_1952", dtype = "float32", shape = (825,))#candidate|1952|(825,)|var|float32
output = func_1951(var_1952)
func_1953 = relay.Function([var_1952], output)
mutated_mod['func_1953'] = func_1953
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1971 = relay.var("var_1971", dtype = "uint64", shape = (3, 4, 7))#candidate|1971|(3, 4, 7)|var|uint64
var_1972 = relay.var("var_1972", dtype = "uint64", shape = (3, 4, 7))#candidate|1972|(3, 4, 7)|var|uint64
bop_1973 = relay.logical_xor(var_1971.astype('uint64'), relay.reshape(var_1972.astype('uint64'), relay.shape_of(var_1971))) # shape=(3, 4, 7)
func_1817_call = mod.get_global_var('func_1817')
func_1821_call = mutated_mod.get_global_var('func_1821')
var_1979 = relay.var("var_1979", dtype = "uint16", shape = (100,))#candidate|1979|(100,)|var|uint16
call_1978 = func_1817_call(relay.reshape(var_1979.astype('uint16'), [10, 5, 2]), relay.reshape(var_1979.astype('uint16'), [10, 5, 2]), )
call_1980 = func_1817_call(relay.reshape(var_1979.astype('uint16'), [10, 5, 2]), relay.reshape(var_1979.astype('uint16'), [10, 5, 2]), )
output = relay.Tuple([bop_1973,call_1978,var_1979,])
output2 = relay.Tuple([bop_1973,call_1980,var_1979,])
func_1988 = relay.Function([var_1971,var_1972,var_1979,], output)
mod['func_1988'] = func_1988
mod = relay.transform.InferType()(mod)
mutated_mod['func_1988'] = func_1988
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1988_call = mutated_mod.get_global_var('func_1988')
var_1990 = relay.var("var_1990", dtype = "uint64", shape = (3, 4, 7))#candidate|1990|(3, 4, 7)|var|uint64
var_1991 = relay.var("var_1991", dtype = "uint64", shape = (3, 4, 7))#candidate|1991|(3, 4, 7)|var|uint64
var_1992 = relay.var("var_1992", dtype = "uint16", shape = (100,))#candidate|1992|(100,)|var|uint16
call_1989 = func_1988_call(var_1990,var_1991,var_1992,)
output = call_1989
func_1993 = relay.Function([var_1990,var_1991,var_1992,], output)
mutated_mod['func_1993'] = func_1993
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1938_call = mod.get_global_var('func_1938')
func_1940_call = mutated_mod.get_global_var('func_1940')
call_2024 = relay.TupleGetItem(func_1938_call(), 0)
call_2025 = relay.TupleGetItem(func_1940_call(), 0)
uop_2030 = relay.log2(call_2024.astype('float64')) # shape=(11, 15, 12)
uop_2032 = relay.log2(call_2025.astype('float64')) # shape=(11, 15, 12)
func_1757_call = mod.get_global_var('func_1757')
func_1760_call = mutated_mod.get_global_var('func_1760')
const_2040 = relay.const([6.316231,1.573338,2.145215,-1.809446,-7.322212,9.969215,5.822099,-3.293558,-3.052335,-9.752148,5.811548,-4.570553,8.580348,4.609364,6.125925,4.022126,3.767293,-7.536225,9.007607,3.064654,-0.304869,-2.959021,-2.525041,3.246906,-6.671461,5.267357,6.406604,2.445558,-2.489717,1.085195,-9.176283,-7.499814,1.565614,-4.343423,5.335637,-0.282375,6.544470,2.698341,6.585812,-7.104579,-7.539232,8.747377,-8.303878,8.308056,8.218743,-0.402093,5.202894,-1.303763,7.257443,9.146524,-4.654472,-2.476313,5.079653,-4.504373,-8.640838,-1.815795,-0.484043,-7.922016,-3.939572,9.322897,-5.168543,2.947022,8.532359,-4.598466,9.553200,5.985311,0.147097,4.925929,-3.521030,4.495861,-4.496611,8.620923,5.949984,2.459602,9.855202,-3.950262,-9.788334,8.602105,2.379796,-8.106975,-0.599384,-4.375495,-5.738190,-3.391096,7.450982,6.665107,5.799725,-6.626167,2.180758,-5.647168,6.666865,-0.535733,5.839320,7.512464,-8.041443,3.486096,1.484640,-6.250389,2.077553,-0.821546,8.863640,-3.744417,4.186994,8.486376,2.819411,1.867055,-2.171782,-8.742382,-3.966122,-5.633317,-8.669468,0.678547,-2.404522,7.535084,-9.835286,-4.301088,6.738647,-7.709905,-0.246016,1.166640,5.447852,-9.380795,0.107379,7.183329,-1.659068,-7.040656], dtype = "float32")#candidate|2040|(126,)|const|float32
const_2041 = relay.const([[False,True,False,False,True,True,False,True,False,True,False,False,False,False,True,False,True,False,True,False,True,True,True,False,True,True,True,False,False,True,True,False,False,True,False,True,False,False,False,True,False,True,True,False,True,False,True,True,False,False,True,False,True,False,False,True,False,False,True,False,True,False,False,True,False,True,False,False,True,False,True,True,True,False,False,True,False,True,False,True,True,True,True,False,False,True,True,False,True,True,False,False,True,False,True,True,True,True,False,True,False,True,False,True,False,False,False,False,True,False,True,False],[False,False,True,False,False,False,False,True,True,False,False,True,False,True,False,False,True,False,True,True,False,True,False,False,False,True,False,True,True,False,False,True,False,True,True,False,True,True,False,True,True,False,False,False,True,False,False,False,True,True,True,True,False,False,True,False,True,True,False,False,True,False,False,False,True,True,False,False,True,False,True,False,False,True,False,False,False,False,False,True,True,False,False,False,False,True,False,True,False,False,True,False,False,True,False,True,True,False,False,False,True,True,False,True,True,True,True,True,True,False,False,True],[False,False,True,False,True,True,True,True,False,False,True,False,False,True,False,True,False,False,True,True,True,True,False,False,False,False,True,False,False,True,True,False,True,False,False,False,True,True,False,True,True,True,False,True,True,False,False,True,False,True,False,True,True,False,False,True,False,True,True,False,True,False,False,False,False,False,True,False,True,True,True,True,False,True,False,True,True,True,False,True,False,False,True,True,True,True,True,True,False,False,False,True,True,False,False,True,True,True,True,False,False,True,True,False,False,False,False,False,True,False,True,True],[True,False,True,False,True,False,True,False,False,True,True,True,False,True,True,True,False,False,True,False,True,True,True,False,True,True,False,False,True,True,True,False,False,False,False,True,False,False,True,True,True,True,False,True,False,True,False,True,False,False,True,True,True,False,True,False,True,True,False,True,True,True,True,True,False,False,False,False,False,False,True,True,True,False,True,True,True,True,False,True,True,False,True,False,False,False,False,False,False,False,True,True,False,False,False,False,False,False,False,False,False,False,False,True,False,True,True,True,False,True,True,False],[True,False,False,False,False,True,False,False,True,True,True,True,True,True,True,False,False,False,False,False,False,False,False,False,True,True,True,False,False,False,False,False,False,False,False,True,True,False,True,True,True,True,False,False,False,False,False,False,False,True,True,False,True,True,False,True,False,True,True,False,False,True,False,False,True,False,True,True,False,True,False,True,False,False,False,False,False,False,True,False,True,False,False,True,True,False,False,True,False,True,True,False,False,False,False,True,False,False,False,True,True,False,False,True,True,False,True,True,True,False,False,False],[False,False,True,True,True,True,False,True,False,False,True,False,False,True,False,False,True,False,True,False,True,False,True,False,False,True,True,True,True,True,False,False,False,True,True,True,True,False,False,True,False,True,False,False,False,False,False,False,False,False,False,True,False,False,True,False,True,True,False,False,False,False,False,False,True,False,True,False,False,True,False,False,False,False,False,True,False,False,True,False,False,True,False,False,True,True,True,False,False,True,True,True,True,True,True,False,True,True,True,True,False,True,True,True,True,True,False,True,False,True,True,False],[False,True,True,False,True,False,False,True,True,True,False,False,True,False,False,False,True,True,False,True,False,True,False,True,True,False,False,True,True,False,True,False,True,False,False,False,False,False,False,True,False,False,True,True,False,False,True,True,True,True,True,False,True,True,True,False,False,False,True,True,False,False,True,True,True,True,False,True,False,False,True,False,False,False,True,True,False,False,False,False,False,True,False,True,True,True,True,True,True,False,False,True,False,False,True,True,True,True,True,True,True,False,True,True,False,False,False,True,True,True,True,True],[False,True,False,True,False,True,False,False,True,True,True,True,True,False,True,False,True,False,False,False,False,True,False,False,False,False,True,True,True,False,False,False,True,False,True,False,True,False,False,False,True,True,True,False,False,False,False,True,False,False,False,False,False,False,True,False,False,False,True,False,True,True,False,False,True,True,False,False,True,False,False,False,False,True,False,False,False,True,True,False,True,True,True,True,True,False,True,False,False,False,False,True,True,False,False,False,True,False,False,True,True,False,True,True,False,False,True,False,True,False,False,False],[False,True,False,True,True,True,True,False,False,True,True,True,True,True,False,True,False,False,False,True,True,True,False,True,True,True,True,False,True,True,True,True,True,True,True,False,False,False,False,False,False,False,False,True,True,False,False,True,False,False,False,True,False,False,False,True,True,True,False,True,True,True,False,False,False,True,False,False,False,True,True,False,True,True,True,False,True,False,False,True,False,False,True,False,True,True,False,False,True,False,True,False,True,False,False,True,True,False,True,True,True,False,True,False,True,True,True,False,True,True,False,True],[True,True,False,False,False,False,True,True,False,False,True,True,False,True,False,False,False,True,True,True,False,True,False,True,False,True,False,True,False,False,False,True,True,False,False,True,False,True,True,False,True,False,True,False,False,True,False,False,True,True,True,True,False,True,False,False,False,False,True,False,False,False,False,True,False,False,True,True,True,False,True,False,False,True,False,False,False,False,False,True,False,False,False,False,True,True,True,False,True,False,False,False,False,False,True,True,False,False,False,True,False,True,False,True,False,False,True,True,True,False,False,True],[False,True,True,True,False,False,True,True,True,False,True,True,False,True,False,True,True,False,False,False,False,False,True,False,True,False,True,False,False,False,True,False,True,False,False,True,True,True,False,False,True,False,True,False,True,False,True,False,False,True,False,False,False,True,True,True,False,False,True,False,False,False,True,True,False,True,False,True,False,True,True,False,True,True,False,False,True,True,False,True,False,True,False,False,False,True,True,False,True,False,True,False,False,False,True,True,True,False,False,True,True,False,True,False,True,True,False,False,False,False,True,True],[True,True,True,False,False,True,False,False,True,True,False,False,True,True,True,False,True,True,False,False,True,True,False,False,True,False,False,True,True,False,False,False,True,False,False,False,True,True,False,False,False,False,False,False,True,True,False,True,True,False,True,False,False,False,True,True,False,True,False,True,True,True,False,True,True,False,True,False,True,True,False,False,True,True,False,False,False,False,True,True,True,True,False,True,True,True,False,True,False,False,True,False,True,True,True,False,True,False,False,True,True,True,True,False,False,True,False,False,True,False,False,False],[True,False,True,False,True,True,True,True,False,False,True,True,True,False,False,True,False,False,False,True,True,True,True,True,False,False,False,True,False,False,False,True,False,True,True,True,True,False,False,True,True,False,False,False,False,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,False,False,True,False,True,False,True,False,False,True,True,True,True,False,False,False,False,True,True,True,True,True,False,True,True,False,False,True,False,False,True,False,False,False,False,True,False,True,False,True,False,True,False,False,True,False,False,False,False,True,True,True],[False,True,False,False,True,False,True,True,False,True,True,False,True,True,False,False,False,False,True,True,True,True,True,True,False,True,True,False,False,False,True,False,False,True,False,True,False,False,True,False,True,False,True,False,False,True,False,False,True,True,True,False,True,False,True,True,True,False,True,True,True,False,False,True,True,False,False,True,False,True,False,True,False,True,False,False,False,False,False,True,False,False,True,True,False,True,False,False,True,True,True,False,True,True,True,False,False,False,False,False,True,False,False,True,True,False,True,True,False,False,False,False],[False,True,True,False,False,True,False,False,False,False,False,True,True,False,False,True,False,False,False,True,False,False,True,True,False,False,False,False,False,False,True,False,True,False,True,False,False,True,False,False,True,False,False,True,False,False,False,False,False,False,False,False,False,True,True,False,True,True,True,False,True,False,False,False,False,True,False,False,True,False,True,False,True,True,True,True,True,False,False,True,False,False,True,True,True,False,True,False,True,False,False,False,False,True,False,True,False,True,True,True,True,False,False,False,True,True,False,False,True,False,True,False],[False,False,True,True,False,False,True,True,True,False,True,True,True,False,False,True,True,False,True,False,False,True,True,False,False,True,False,False,True,False,False,True,False,True,False,True,True,True,False,False,True,False,False,False,False,False,False,True,False,True,True,True,False,False,True,False,True,True,False,False,True,False,True,False,True,True,True,True,True,True,True,False,True,True,True,True,False,True,False,False,False,False,True,False,False,False,False,False,False,True,False,True,True,False,True,True,True,False,False,False,False,True,True,True,True,False,True,True,True,True,True,True]], dtype = "bool")#candidate|2041|(16, 112)|const|bool
call_2039 = relay.TupleGetItem(func_1757_call(relay.reshape(const_2040.astype('float32'), [9, 1, 14]), relay.reshape(const_2041.astype('bool'), [64, 28]), ), 2)
call_2042 = relay.TupleGetItem(func_1760_call(relay.reshape(const_2040.astype('float32'), [9, 1, 14]), relay.reshape(const_2041.astype('bool'), [64, 28]), ), 2)
output = relay.Tuple([uop_2030,call_2039,const_2040,const_2041,])
output2 = relay.Tuple([uop_2032,call_2042,const_2040,const_2041,])
func_2044 = relay.Function([], output)
mod['func_2044'] = func_2044
mod = relay.transform.InferType()(mod)
output = func_2044()
func_2045 = relay.Function([], output)
mutated_mod['func_2045'] = func_2045
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2101 = relay.var("var_2101", dtype = "uint16", shape = ())#candidate|2101|()|var|uint16
var_2102 = relay.var("var_2102", dtype = "uint16", shape = (15, 8, 11))#candidate|2102|(15, 8, 11)|var|uint16
bop_2103 = relay.equal(var_2101.astype('bool'), var_2102.astype('bool')) # shape=(15, 8, 11)
uop_2112 = relay.acos(bop_2103.astype('float32')) # shape=(15, 8, 11)
output = relay.Tuple([uop_2112,])
output2 = relay.Tuple([uop_2112,])
func_2114 = relay.Function([var_2101,var_2102,], output)
mod['func_2114'] = func_2114
mod = relay.transform.InferType()(mod)
var_2115 = relay.var("var_2115", dtype = "uint16", shape = ())#candidate|2115|()|var|uint16
var_2116 = relay.var("var_2116", dtype = "uint16", shape = (15, 8, 11))#candidate|2116|(15, 8, 11)|var|uint16
output = func_2114(var_2115,var_2116,)
func_2117 = relay.Function([var_2115,var_2116,], output)
mutated_mod['func_2117'] = func_2117
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2121 = relay.var("var_2121", dtype = "float32", shape = (16, 4, 8))#candidate|2121|(16, 4, 8)|var|float32
uop_2122 = relay.log10(var_2121.astype('float32')) # shape=(16, 4, 8)
uop_2133 = relay.asinh(uop_2122.astype('float64')) # shape=(16, 4, 8)
func_114_call = mod.get_global_var('func_114')
func_118_call = mutated_mod.get_global_var('func_118')
var_2143 = relay.var("var_2143", dtype = "float32", shape = (13, 3))#candidate|2143|(13, 3)|var|float32
const_2144 = relay.const([0.613975,-0.829345,-7.594954,-0.163836,-1.721922,-5.271639,3.590985,-2.313593,4.850613,-6.363161,-6.407168,0.564832,5.303895,4.928839,3.191637,6.255898,-1.548510,9.273228,-8.431016,2.941814,-1.146791,9.584365,-9.935148,-6.980022,0.534135,-4.122126,1.526954,-2.216837,0.892789,5.090402,4.340730,7.364690,-2.829693,-2.094214,-6.693353,6.049387,6.600135,-8.215248,-6.627401,-3.165456,-3.631237,3.726962,-7.508825,-5.256533,-9.499107,-4.518477,0.035335,8.210892,-9.900247,-8.209960,6.311604,5.560710,-5.099940,-2.410616,-1.490995,-0.205661,-9.671723,-1.286812,7.203058,-6.289126,-8.376161,9.008315,2.930413,8.463666,0.499242,-5.318040,2.451560,7.927311,-3.777770,-2.860615,-9.855582,2.244694,2.561720,3.346765,-0.261535,-9.070974,-0.098008,-3.690457,-8.811262,1.124494,-6.052772,-2.448360,-5.859620,2.180048,-9.638181,5.528168,7.092252,8.458795,4.900986,2.247879,-4.666795,-7.853426,-3.463066,-8.971984,2.647787,-1.387770,-9.084215,3.446745,-3.354679,2.922484,3.740146,-4.683573,0.162505,1.296738,-4.322042,-2.585810,-9.006717,-8.957230,-6.683420,9.910632,-9.712398,3.614018,-2.979696,5.565440,6.712352,6.844210,-7.604466,8.589154,0.301825,-7.143832,-6.089750,1.180876,2.196679,2.847436,-4.236005,8.952893,-0.865658,5.525525,-8.882539,3.382103,7.144563,-4.022173,-0.194951,7.959509,-8.442025,-9.030913,2.327057,7.077669,5.507940,-1.810164,2.312024,-5.007702,-1.651439,-7.822611,3.422749,-2.933078,5.053483,-9.570876,7.751944,4.585206,0.018520,-3.204696,9.815070,5.872698,-6.254611,4.688219,-3.363364,6.857050,0.832774,5.468394,8.500606,-2.727662,-4.129185,2.584607,-6.514414,1.580645,-9.473911,-2.241560,6.452986,-4.163120,4.739695,6.651815,0.685296,-0.838045,-5.943712,0.409385,-4.029020,-0.989400,-7.280640,-3.843841,6.820814,-8.649687,0.350978,9.638337,9.156320,-9.870802,4.870056,-9.647497,-1.879616,-4.191567,-9.255072,-9.909982,9.796712,5.462582,-2.687337,-8.566970,8.954134,5.736708,-5.368114,9.832324,-4.701227,-7.246647,8.981310,2.426269,-2.644504,-1.172886,0.781144,1.840769,-2.654378,4.651053,-3.744304,-4.600881,-6.798927,-9.202530,-2.368039,-7.648852,2.787174,6.088173,9.216540,-3.298388,-6.381628,-4.776694,5.738799,-4.337600,-3.104332,4.855610,4.833969,-9.242979,4.952052,-5.227373,-7.286826,6.507704,-9.882808,-2.169694,0.842650,4.831134,-9.241194,3.684522,3.318739,0.016618,8.904826,-2.445708,-9.187915,1.453579,8.381643,6.529157,-9.048519,0.304139,1.568854,1.416099,-2.553330,-6.748115,-3.866615,-2.347123,2.194058,-3.719348,-6.544740,-3.087873,9.036475,5.841963,5.261437,2.740544,5.990945,-5.142685,-3.939966,2.911464,-1.422340,5.952583,7.121102,-3.971635,7.767486,-7.755707,5.793547,-3.348753,-2.495921,8.141344,9.463291,0.074519,7.180434,5.121924,6.914327,-9.857874,0.515257,1.850540,-0.466477,6.049133,-5.140226,3.594567,-8.143350,-8.757928,0.636493,3.029517,-9.301675,0.855741,-0.884778,-6.560642,4.038337,-6.579049,-8.249961,-6.337816,1.247382,3.632302,3.013905,-6.557992,-6.855520,-1.015424,-4.116187,-7.017610,-1.398483,2.757011,5.572494,5.535033,-7.501491,7.479214,2.773805,1.713523,7.175733,-6.428159,-1.259586,9.255848,4.187557,-3.986286,2.714390,5.465120,1.275348,-1.911041,-5.638890,5.422202,2.420237,3.325170,-7.173364,-9.714668,8.904212,-0.597196,4.770079,7.947762,5.488127,-2.187648,-5.378474,5.279035,-3.358963,-3.770430,8.160658,-3.505850,-2.859119,8.828394,-8.517217,6.015379,-7.070590,3.115563,5.297105,-5.814302,9.805588,3.099549,-3.402752,9.614341,-6.285291,4.249431,9.707450,1.820752,-9.877692,8.211240,-9.961327,-6.748292,-4.943387,-9.489930,-3.970657,8.032829,1.261656,-3.817471,8.007419,9.563868,7.623272,8.088720,-9.135129,9.877488,0.922901,1.778900,0.965712,-5.185158,-1.127720,1.385411,4.441855,-3.453718,3.752739,0.259834,-9.240180,-0.531876,7.986886,-6.832202,-2.096861,-1.397346,-0.780682,4.000852,-6.542168,-2.002288,-3.809730,9.124775,-0.026626,7.733137,-9.542040,-3.462241,4.945787,3.262919,-9.138511,-3.395430,9.004862,-1.931400,-6.745692,5.683210,1.545107,7.399600,0.136605,5.502756,-4.260041,6.321120,3.536319,1.872421,-3.223226,-7.490483,4.123750,-6.369525,1.583180,-3.415493,-0.836049,-4.634801,9.728559,-6.878541,1.077827,-1.035720,-2.891362,-2.285219,5.479942,-6.627181,-4.672721,-9.565750,5.832109,-9.000515,9.678056,-9.595087,-6.295689,5.489049,4.196019,-5.195122,-6.749772,-4.067805,-8.986206,-7.981617,7.208230,-7.365413,5.357270,3.005161,4.056748,-3.565652,-4.422896,-5.269010,9.446723,0.165931,3.623054,7.999596,-5.719704,-7.175030,5.864926,1.895026,8.476450,-6.968563,-1.809103,4.642882,-4.671929,2.281805,7.454611,0.659025,3.719766,6.886856,5.550739,-6.364462,-3.623669,-8.276129,-2.383372,-1.204448,3.869438,-8.397331,-9.705997,6.825793,6.751703,-3.618699,1.030053,-3.026891,-8.749772,6.422620,-1.264686,4.524578,3.905565,-1.340931,6.624030,3.302727,-8.031857,6.833804,-2.984536,0.247049,5.719011,-0.912675,4.579632,5.987377,-6.858971,5.414123,2.262807,4.941021,7.975113,-1.104305,5.048581,1.009229,7.111198,-3.164839,-7.454291,-6.728111,0.198266,-7.703796,7.078284,-2.498207,-4.366951,-0.591047,7.047811,-0.858131,-2.286155,4.001242,4.959871,9.184617,8.908954,-4.851096,8.027952,5.858545,9.515318,0.725644,-6.494763,-0.232811,-4.653655,-2.067867,-2.217517,-3.177404,8.582634,-0.116689,-6.751215,5.137207,-3.693730,3.855924,-7.716891,-0.123004,-3.306095,-8.288105,-3.527970,-7.963390,-8.265931,-7.629910,5.028978,1.235939,-5.398381,9.238121,5.510263,8.828664,-6.555329,0.294349,8.996027,-0.518654,8.055795,-3.057717,9.761156,-3.601836,7.521222,5.638092,8.864476,3.200578,-8.514692,3.590247,-4.670169,7.006846,8.333505,5.320481,8.190719,1.616126,7.326834,-1.511060,-4.047838,-0.305621,0.043489,-1.086971,-1.709674,-3.996169,7.887187,-1.755801,-7.844446,-5.933291,-8.926021,3.627003,-6.375264,-7.773789,-1.637657,-9.579132,-8.264971,8.788143,-0.131891,-0.469996,7.681373,-9.360118,-4.985396,-5.911002,-9.560807,5.797140,2.042585,-0.295031,5.525345,8.102825,6.208463,-4.868636,-4.352605,4.347747,0.286755,3.167560,2.693167,9.464228,-1.629647,-1.540849,2.356723,0.764332], dtype = "float32")#candidate|2144|(624,)|const|float32
call_2142 = relay.TupleGetItem(func_114_call(relay.reshape(var_2143.astype('float32'), [3, 1, 13]), relay.reshape(const_2144.astype('float32'), [3, 16, 13]), ), 0)
call_2145 = relay.TupleGetItem(func_118_call(relay.reshape(var_2143.astype('float32'), [3, 1, 13]), relay.reshape(const_2144.astype('float32'), [3, 16, 13]), ), 0)
uop_2146 = relay.sin(uop_2133.astype('float32')) # shape=(16, 4, 8)
uop_2152 = relay.acosh(uop_2146.astype('float64')) # shape=(16, 4, 8)
func_1817_call = mod.get_global_var('func_1817')
func_1821_call = mutated_mod.get_global_var('func_1821')
var_2155 = relay.var("var_2155", dtype = "uint16", shape = (25, 4))#candidate|2155|(25, 4)|var|uint16
call_2154 = func_1817_call(relay.reshape(var_2155.astype('uint16'), [10, 5, 2]), relay.reshape(var_2155.astype('uint16'), [10, 5, 2]), )
call_2156 = func_1817_call(relay.reshape(var_2155.astype('uint16'), [10, 5, 2]), relay.reshape(var_2155.astype('uint16'), [10, 5, 2]), )
bop_2159 = relay.add(uop_2146.astype('int64'), relay.reshape(var_2121.astype('int64'), relay.shape_of(uop_2146))) # shape=(16, 4, 8)
output = relay.Tuple([call_2142,var_2143,const_2144,uop_2152,call_2154,var_2155,bop_2159,])
output2 = relay.Tuple([call_2145,var_2143,const_2144,uop_2152,call_2156,var_2155,bop_2159,])
func_2162 = relay.Function([var_2121,var_2143,var_2155,], output)
mod['func_2162'] = func_2162
mod = relay.transform.InferType()(mod)
var_2163 = relay.var("var_2163", dtype = "float32", shape = (16, 4, 8))#candidate|2163|(16, 4, 8)|var|float32
var_2164 = relay.var("var_2164", dtype = "float32", shape = (13, 3))#candidate|2164|(13, 3)|var|float32
var_2165 = relay.var("var_2165", dtype = "uint16", shape = (25, 4))#candidate|2165|(25, 4)|var|uint16
output = func_2162(var_2163,var_2164,var_2165,)
func_2166 = relay.Function([var_2163,var_2164,var_2165,], output)
mutated_mod['func_2166'] = func_2166
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2171 = relay.var("var_2171", dtype = "float64", shape = (1, 14, 11))#candidate|2171|(1, 14, 11)|var|float64
uop_2172 = relay.sigmoid(var_2171.astype('float64')) # shape=(1, 14, 11)
uop_2180 = relay.cosh(uop_2172.astype('float64')) # shape=(1, 14, 11)
func_1951_call = mod.get_global_var('func_1951')
func_1953_call = mutated_mod.get_global_var('func_1953')
const_2183 = relay.const([[5.914589,-7.325064,-3.422463,-6.510882,5.376964,-2.158220,-9.272692,1.218012,-6.855923,-9.423393,7.664602,4.068647,-8.886865,-5.918557,-0.736971,8.056800,-2.126194,5.481212,-2.629623,8.466989,-0.152955,3.959069,-5.377756,-1.108236,-8.439623,-6.133218,-0.380235,5.014935,1.323892,5.281147,2.410407,7.539141,-1.195101,-6.667910,-4.437182,1.057693,7.777555,-8.948237,2.290655,-6.616007,0.615786,9.427646,-6.200928,-0.581027,-9.653870,3.290987,-3.696854,5.715752,2.700278,8.406493,2.689919,-0.045869,1.830134,-6.133976,2.052915,-0.245920,-0.767678,-5.771661,-9.888995,-9.958347,4.188088,-6.777871,-1.293803,-8.039156,1.384673,1.742996,-6.135106,9.793082,-4.627181,-0.952638,-9.226284,-5.513966,-7.464395,6.175038,5.343402,2.752697,3.933375,-3.886467,8.201731,2.937856,3.327014,-6.497454,-8.605258,1.962758,0.953436,4.588915,1.423165,-6.484045,-9.796823,-6.355491,3.003404,-5.550170,-2.756043,-0.757037,-1.432891,-5.284536,2.605558,7.024289,5.812424,-7.172171,4.289145,-3.517749,-1.591541,-0.025400,5.498261,-2.652403,0.017193,5.496440,-5.523963,5.130660,-9.798603,-3.000847,-3.953810,0.017219,-8.723419,5.616296,2.516540,-3.661554,-3.334575,0.853696,-2.411965,1.368669,-3.856540,6.916591,-7.000260,5.165036,-4.721002,-7.894601,-6.668921,-3.559463,-5.455137,-5.030490,-8.807259,8.467051,0.059543,-4.331240,-4.073278,2.666078,-0.487952,3.269178,-2.397085,8.085861,-3.590010,6.575923,-9.215685,-4.958581,2.717759,-5.142356,8.822818,4.162891,-6.134094,-1.678933,5.593987,-7.858308,-2.561596,-5.643648,-2.021808,-9.589176,-3.099028,1.525143,8.664430,4.336199,-5.594836,-4.263020,8.603348,2.199729,6.820316,-9.469108,7.341759,5.461900,2.442380,-1.398588,8.569914,-1.703673,5.456559,-0.073099,6.931847,4.064524,-5.859544,-2.354760,9.860702,3.679076,9.002658,3.915840,-4.659751,9.982980,2.962366,-9.038127,-7.782999,-9.983788,-6.466433,-2.261983,-1.491863,-8.958122,-0.902854,-7.354194,-7.480014,-0.167180,7.497544,-8.303885,-5.544666,3.640761,-6.401116,4.273315,0.806647,-9.104796,-7.159144,6.099326,-4.429494,4.137570,-3.842026,9.055226,-2.917865,6.213474,6.512360,6.176698,8.909818,2.875026,-2.113023,-9.657107,-7.365081,-2.943597,1.993923,4.104849,0.800324,-2.251535,-5.345962,-8.601765,-9.357652,6.463521,0.371913,6.678247,6.564104,-8.517512,8.070006,0.400055,0.584638,5.911758,-6.358996,5.398355,0.059973,8.692452,5.699582,-2.645441,9.217594,5.320264,1.984274,8.263235,-7.383820,-4.938074,-0.746139,8.647439,3.676702,7.060779,-5.675209,9.720384,-7.040370,2.196715,-2.103899,3.817901,6.730856,3.645611,-5.903306,-8.296684,-2.612643,-1.387900,-1.541386,9.873304,-0.419405,7.415165,2.293093,6.500374,-1.011250,7.809709,-7.889705,-4.377404,4.729681,-9.396062,8.902423,-6.149184,-4.980375,-3.610851,0.763474,-2.098421,-1.624280,-1.673606,7.026715,-0.410978,-1.765609,-5.999952,-9.116676,1.395764,-7.873712,2.137449,-8.182929,-0.384030,3.150693,0.680615,-2.103294,-8.393653,-9.586164,-3.224579,-9.267669,7.464756,-7.117205,-7.200303,-0.727095,-5.428220,4.844236,-9.385534,-6.554027,-9.929870,-7.140076,-7.573980,-3.371131,1.566713,4.287690,-4.139571,-6.715539,-2.938040,9.054128,-8.396248,-0.122052,5.847499,-5.180482,2.448212,-5.447975,-7.670190,-5.219040,6.802612,-3.957054,8.281963,-0.937904,9.210936,7.919210,0.211853,-8.978489,-6.066242,-3.141152,9.958438,-0.576069,7.720071,-0.629225,0.599294,-8.001845,7.437070,4.557957,-1.072128,-2.371386,4.242915,-8.083173,3.656912,-7.230923,0.961572,3.062279,2.163486,-4.531922,-7.708100,6.405444,1.690094,-3.449666,-3.221723,5.416662,2.056528,-2.503396,6.804953,6.400450,-5.416141,-8.795916,-6.210659,-9.364275,7.356037,8.535732,7.191215,9.292490,-8.393205,-1.794059,-8.412873,-0.729367,2.731157,-7.157790,9.083470,2.794024,3.489142,9.880155,2.930946,2.399344,-5.940393,-4.708414,6.050481,-3.227288,6.474590,-9.404306,-8.905111,7.067578,-6.334219,-6.757341,2.833160,0.037290,-6.389472,5.496020,-5.205952,-6.451412,3.252862,-4.337078,3.036736,-5.327799,2.227621,-1.792238,6.499038,-8.669791,5.605663,7.057762,-7.661128,2.389782,-3.344308,3.777084,5.974568,5.392729,-2.926747,-9.057394,8.157087,9.046103,5.869537,-3.940917,9.619992,-4.463487,-5.424958,-5.030830,-5.727701,5.249077,-0.564544,4.666105,-8.164057,-3.562697,4.459594,-8.798003,2.485685,4.520923,2.664425,-9.673187,-5.179554,9.307449,-1.246612,-6.618268,4.266495,0.829423,-6.767508,-5.129983,-4.803867,9.378607,0.035227,-5.953267,2.074907,5.076959,0.892816,-1.810097,5.172329,-7.301390,9.757585,-2.036945,-1.335665,-1.821100,4.735120,-9.491966,3.729170,4.483275,0.037014,0.081210,7.240531,-0.889874,-0.479746,4.491752,-9.230471,-0.867595,-9.115259,5.278614,-6.570471,6.336304,-6.581800,6.393065,0.098451,-2.914331,-5.798663,-8.589687,-2.320520,8.424590,2.793732,-6.810697,-7.102750,7.003094,-9.820546,-5.949821,-7.560204,-1.775416,5.550722,-5.342629,-9.641377,4.248558,-0.431312,-4.699479,-3.012883,-4.244689,-8.168025,-7.119070,7.138111,1.945339,-9.837500,-5.303740,6.796632,6.521955,0.623398,-8.509388,-8.593421,-8.785571,5.893492,5.590037,-8.949841,5.342433,7.459462,-5.988132,9.524507,-4.313654,2.469285,-2.292940,5.316392,0.860430,4.982077,-5.402504,2.939122,-2.837815,9.316171,9.215376,9.591686,4.162524,-6.475226,1.368746,1.715789,9.093032,7.988318,-4.908436,7.232837,2.903183,7.815978,-0.530435,-4.243442,7.028682,-3.079800,-3.093260,0.764994,-7.253657,9.217236,5.529660,6.183555,0.416237,-6.918061,6.448103,6.016657,-3.894581,-2.149029,7.762870,1.444003,7.401760,6.492884,-5.819799,2.842046,-0.662003,-2.409969,5.220006,-8.100998,-6.109668,-3.184603,-2.013389,-3.870167,-9.830090,4.482493,-7.619500,-9.602665,7.217567,1.491200,-3.464328,-6.089503,9.636135,-2.940481,1.829846,3.432022,1.793044,3.696094,4.346322,-3.694527,7.647591,5.718692,0.881198,1.096407,-0.840317,-2.199371,7.165447,2.549097,5.692555,3.087206,2.091691,6.318597,2.531976,-1.485889,-9.322323,-8.743980,2.649345,0.242347,-3.528454,0.447103,7.966732,0.962089,-7.159562,2.630038,8.775069,-6.676873,2.421678,8.143694,8.028067,2.698458,9.098110,2.488267,-0.119599,8.546689,5.200122,9.953447,-6.122386,7.993122,7.237563,-5.534509,0.796582,1.522610,-4.924698,6.744552,2.406002,-7.682188,9.417518,9.720805,-2.066245,-7.325898,8.113070,9.565705,-9.160080,-6.653099,2.603524,-6.843919,-8.807646,-0.816213,0.683150,-6.362308,-2.731510,5.410257,-5.700160,3.905635,2.137593,-3.198180,8.337922,-1.076190,-4.941271,-3.979060,6.925276,-4.380695,-8.462329,2.170078,5.792233,-1.156357,-9.515163,5.447772,-2.284702,1.094516,-2.025488,-7.787873,4.836970,7.817972,-4.766323,-1.500321,8.673865,8.506709,8.708175,3.184496,-4.922222,-8.306312,8.191639,4.127093,7.051008,2.732102,-4.308244,3.125263,-7.689188,0.854112,-6.548078,-3.910576,-3.654095,-3.124831,-9.220045,-3.339045,6.546426,8.337662,-0.932470,4.053130,-4.899843,3.319996,-9.428947,-8.283536,-4.205672,4.736352,1.823257,-6.997124,7.062169,7.147949,-9.321203,-7.622000,7.384389,-3.192379,-6.823109,4.706609,-5.199967,6.654761,6.017474,9.984830,0.523443,3.832371,-9.405583,1.623182,-7.043272,-5.361744,-7.871476,-7.386270,-9.425175,-4.887942,-8.192722,2.211225,-1.500537,-5.119945,0.318154,8.860736,-1.196675,3.219299,-9.215990,6.880185,-2.476101,1.364953,-0.382439,-4.065953,-7.315787,-8.958689,-5.569299,1.781490,-3.053692,-2.467214,3.245974,1.813374,-4.242675,3.387537,8.938678,3.198265,-9.240608,-4.660566,4.031597,1.868766,1.930369,-1.813083,-9.377144,6.219945,3.331056,-4.044506,3.340276,5.740898,-0.929472,2.388646,6.660503,2.600711,5.443022,-1.048818,-3.382441,7.991364,9.873255,4.112050,8.675343,2.164077,6.877742,-2.588586,0.327153,-2.468615,-3.737232,0.356516,6.274470,5.503637,-4.880317,8.649273,1.184737,4.166466,-5.851550,-9.595112,3.491722,1.524110,9.254305,8.193742,2.668984,6.411189,7.941412,7.813005,1.308779,-8.801612,-6.940600,8.143768,-6.523536,2.303186,8.776704,-0.543231,3.126067,0.031885,4.231206,5.202298,6.546165,-4.386059,8.752583,4.619930,-5.261018,-5.977674,5.238052,7.229114,-4.952106,-4.650954,-9.712001]], dtype = "float32")#candidate|2183|(1, 825)|const|float32
call_2182 = relay.TupleGetItem(func_1951_call(relay.reshape(const_2183.astype('float32'), [825,])), 3)
call_2184 = relay.TupleGetItem(func_1953_call(relay.reshape(const_2183.astype('float32'), [825,])), 3)
output = relay.Tuple([uop_2180,call_2182,const_2183,])
output2 = relay.Tuple([uop_2180,call_2184,const_2183,])
func_2190 = relay.Function([var_2171,], output)
mod['func_2190'] = func_2190
mod = relay.transform.InferType()(mod)
var_2191 = relay.var("var_2191", dtype = "float64", shape = (1, 14, 11))#candidate|2191|(1, 14, 11)|var|float64
output = func_2190(var_2191)
func_2192 = relay.Function([var_2191], output)
mutated_mod['func_2192'] = func_2192
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2228 = relay.var("var_2228", dtype = "float32", shape = (15, 8, 9))#candidate|2228|(15, 8, 9)|var|float32
uop_2229 = relay.atan(var_2228.astype('float32')) # shape=(15, 8, 9)
func_1817_call = mod.get_global_var('func_1817')
func_1821_call = mutated_mod.get_global_var('func_1821')
const_2238 = relay.const([3,2,7,3,-4,-3,-7,8,-2,4,3,4,2,9,10,-3,7,10,9,9,4,-10,8,-2,7,4,4,7,3,7,-3,4,-6,-1,-8,8,-2,-4,8,-3,-5,-8,5,4,3,-9,2,4,8,10,-8,1,-9,-10,-10,-6,2,-4,9,-4,9,-7,-9,-8,-8,6,-9,8,9,-8,5,-5,-8,-5,-7,7,4,-9,-7,-3,-5,3,-5,3,10,-4,5,-1,8,-8,-5,-3,9,4,-6,2,-4,-7,-7,3], dtype = "uint16")#candidate|2238|(100,)|const|uint16
call_2237 = func_1817_call(relay.reshape(const_2238.astype('uint16'), [10, 5, 2]), relay.reshape(const_2238.astype('uint16'), [10, 5, 2]), )
call_2239 = func_1817_call(relay.reshape(const_2238.astype('uint16'), [10, 5, 2]), relay.reshape(const_2238.astype('uint16'), [10, 5, 2]), )
output = relay.Tuple([uop_2229,call_2237,const_2238,])
output2 = relay.Tuple([uop_2229,call_2239,const_2238,])
func_2240 = relay.Function([var_2228,], output)
mod['func_2240'] = func_2240
mod = relay.transform.InferType()(mod)
var_2241 = relay.var("var_2241", dtype = "float32", shape = (15, 8, 9))#candidate|2241|(15, 8, 9)|var|float32
output = func_2240(var_2241)
func_2242 = relay.Function([var_2241], output)
mutated_mod['func_2242'] = func_2242
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2044_call = mod.get_global_var('func_2044')
func_2045_call = mutated_mod.get_global_var('func_2045')
call_2259 = relay.TupleGetItem(func_2044_call(), 0)
call_2260 = relay.TupleGetItem(func_2045_call(), 0)
output = call_2259
output2 = call_2260
func_2261 = relay.Function([], output)
mod['func_2261'] = func_2261
mod = relay.transform.InferType()(mod)
output = func_2261()
func_2262 = relay.Function([], output)
mutated_mod['func_2262'] = func_2262
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2261_call = mod.get_global_var('func_2261')
func_2262_call = mutated_mod.get_global_var('func_2262')
call_2367 = func_2261_call()
call_2368 = func_2261_call()
uop_2369 = relay.acos(call_2367.astype('float32')) # shape=(11, 15, 12)
uop_2371 = relay.acos(call_2368.astype('float32')) # shape=(11, 15, 12)
func_1817_call = mod.get_global_var('func_1817')
func_1821_call = mutated_mod.get_global_var('func_1821')
var_2399 = relay.var("var_2399", dtype = "uint16", shape = (100,))#candidate|2399|(100,)|var|uint16
call_2398 = func_1817_call(relay.reshape(var_2399.astype('uint16'), [10, 5, 2]), relay.reshape(var_2399.astype('uint16'), [10, 5, 2]), )
call_2400 = func_1817_call(relay.reshape(var_2399.astype('uint16'), [10, 5, 2]), relay.reshape(var_2399.astype('uint16'), [10, 5, 2]), )
output = relay.Tuple([uop_2369,call_2398,var_2399,])
output2 = relay.Tuple([uop_2371,call_2400,var_2399,])
func_2402 = relay.Function([var_2399,], output)
mod['func_2402'] = func_2402
mod = relay.transform.InferType()(mod)
mutated_mod['func_2402'] = func_2402
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2403 = relay.var("var_2403", dtype = "uint16", shape = (100,))#candidate|2403|(100,)|var|uint16
func_2402_call = mutated_mod.get_global_var('func_2402')
call_2404 = func_2402_call(var_2403)
output = call_2404
func_2405 = relay.Function([var_2403], output)
mutated_mod['func_2405'] = func_2405
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1857_call = mod.get_global_var('func_1857')
func_1859_call = mutated_mod.get_global_var('func_1859')
call_2515 = relay.TupleGetItem(func_1857_call(), 0)
call_2516 = relay.TupleGetItem(func_1859_call(), 0)
func_1988_call = mod.get_global_var('func_1988')
func_1993_call = mutated_mod.get_global_var('func_1993')
var_2528 = relay.var("var_2528", dtype = "uint64", shape = (84,))#candidate|2528|(84,)|var|uint64
const_2529 = relay.const([2,4,4,-1,5,6,9,4,-7,2,6,5,-6,2,-5,-4,4,7,10,-3,-5,7,-4,7,-2,1,5,-6,4,8,5,-8,-9,-9,2,-4,-10,-10,1,-8,-6,-3,-6,-3,-10,-10,2,6,-3,-2,6,2,8,10,9,4,-8,-8,9,7,-2,-4,4,-8,2,4,8,4,7,-7,4,4,10,8,-3,9,-3,2,3,-6,9,-5,-5,-3,4,1,-3,10,6,3,3,5,-6,-5,6,-4,-1,-4,-7,-9], dtype = "uint16")#candidate|2529|(100,)|const|uint16
call_2527 = relay.TupleGetItem(func_1988_call(relay.reshape(var_2528.astype('uint64'), [3, 4, 7]), relay.reshape(var_2528.astype('uint64'), [3, 4, 7]), relay.reshape(const_2529.astype('uint16'), [100,]), ), 2)
call_2530 = relay.TupleGetItem(func_1993_call(relay.reshape(var_2528.astype('uint64'), [3, 4, 7]), relay.reshape(var_2528.astype('uint64'), [3, 4, 7]), relay.reshape(const_2529.astype('uint16'), [100,]), ), 2)
func_2162_call = mod.get_global_var('func_2162')
func_2166_call = mutated_mod.get_global_var('func_2166')
const_2538 = relay.const([6.892661,-8.122248,-1.540749,6.830411,-6.203923,-2.235030,3.127061,-4.823348,-9.528511,-4.696520,6.090219,-9.400270,5.192122,-2.239348,-3.828711,9.784742,8.989189,5.098552,8.638242,0.648694,5.354961,9.211343,8.788431,3.917847,9.303671,0.352488,-2.530954,7.204329,-0.321315,-5.133284,-5.364073,8.948476,-1.112487,-1.409198,2.312477,1.417340,9.210848,0.982485,-1.862389,-1.076984,-6.478012,-3.305616,1.449058,-9.497690,2.415663,-9.591474,4.503221,4.408979,-0.258036,1.422672,0.827205,-2.606792,4.809538,8.807026,-0.632213,8.016286,4.431123,5.176352,2.635262,0.088087,5.894010,1.674226,8.571625,-8.245667,-2.974942,8.735861,-4.025904,-2.777437,7.922513,2.909380,3.679477,-3.388917,-5.278486,9.485469,-3.017318,-3.742698,-7.243417,-9.602514,5.672745,-5.307931,-9.267969,6.464321,6.382549,-8.415051,-2.713989,3.665278,-1.590785,-2.542063,8.814040,6.002163,-4.847586,1.337439,4.926810,-5.336986,-8.704703,-9.982568,-9.278160,5.252244,6.788236,-7.311533,9.708070,3.410267,-4.960351,-2.264501,7.374006,4.805466,-4.984162,-0.383234,-4.764121,-0.054814,0.490286,4.440504,-6.460765,-4.312372,-7.963191,2.188919,-0.251991,0.499863,7.616215,-2.877277,2.527534,-5.983460,0.861560,5.935045,-8.890747,-2.122965,-1.992778,5.122156,6.043883,-7.036540,0.864339,2.712040,-4.440435,-7.533482,1.143140,-7.259098,-8.806591,-8.259078,-0.658989,3.684393,3.477773,-5.593805,0.931440,-4.673450,0.801646,-0.754431,7.256709,-5.585071,-8.107427,0.268253,-3.819553,1.200493,-4.871664,-7.396969,6.661221,8.092943,7.305282,5.465972,-5.398038,6.134843,-4.414924,-7.482322,-8.932159,-1.813004,2.457118,-3.127748,3.842338,-0.321384,6.565536,-8.185103,-9.400565,3.522551,-6.404653,-9.746146,-5.924646,-2.673684,3.236153,-8.478885,-0.654032,-8.661022,-6.313474,2.398372,-8.416247,-9.966744,-7.562939,2.783767,-4.478123,-4.122559,3.816513,5.502300,1.342139,-6.208228,-6.626971,-3.486692,8.684245,-0.028005,7.397485,-4.080092,9.795400,5.168453,5.259799,-2.522591,0.520980,-8.807649,3.242701,-2.620336,-1.732873,4.425462,-1.210019,5.205719,3.493086,5.690467,7.285176,-4.384059,-9.704079,-5.197305,-4.120598,-3.631694,2.932091,-8.195241,-8.356620,0.594161,-7.271859,-7.605907,-5.404907,-5.146756,1.011232,-9.638139,9.045364,-8.706379,-2.821537,-4.919976,7.921909,-8.898615,5.437232,-3.824902,-3.128721,-1.870406,-7.085625,8.702447,-3.175985,-9.215449,8.277389,-2.978235,-3.259064,8.373700,4.132304,3.915559,-2.817621,-4.279711,3.679593,9.557119,-6.404679,-1.517725,-1.496994,-2.812517,8.456612,1.041672,8.281354,-0.419238,-5.317181,4.355024,1.566393,-7.463783,-5.074049,1.907042,3.902757,4.466742,7.827315,6.209201,1.157033,-0.457639,-7.097610,-5.994712,-6.337637,2.203843,-8.147180,-8.031934,-9.530849,5.985135,4.451958,-4.183847,0.817966,7.339717,7.151926,0.501681,-8.787573,0.700791,7.487368,-0.480243,-3.951710,-2.207749,-9.725337,-6.763633,3.187613,-6.086584,9.687511,-3.822740,-9.815524,6.946690,-5.027697,1.408719,-0.038754,2.683052,-2.596812,5.104858,-4.813825,9.700544,5.519471,6.199347,8.752847,1.082833,-9.226253,7.436381,5.632935,-8.207441,6.101435,-1.874164,-3.546757,8.692250,-2.800100,-5.117884,-0.941117,2.327770,4.656996,9.093493,-1.808798,2.209127,-0.686804,-0.055741,7.208419,4.445284,-4.139205,8.902453,7.737341,9.869026,4.744606,-7.601288,1.533291,0.876156,-1.419087,2.925081,-4.395901,7.193161,4.070070,-1.404646,-9.103470,-1.521148,-3.908772,-1.399199,-4.325059,5.592333,5.066848,-8.286235,6.440742,7.410591,-7.468875,8.765296,-5.603765,8.319693,-8.217136,-5.816139,9.191610,1.294856,-2.862291,5.388949,3.873523,9.981761,2.157852,8.571369,8.220764,-5.222187,5.383592,-5.349410,9.086752,6.157551,-3.897179,-8.074106,-6.178600,4.601369,1.547534,-8.592527,0.937852,2.019252,7.154970,7.467815,-9.377032,-6.974434,0.308996,2.890493,-4.084034,-8.255246,-0.992259,-2.423958,-6.551297,-6.793795,-2.957578,-8.724119,-8.556069,-7.216805,-0.974416,-9.621510,-6.382828,-3.000335,-9.557674,-0.157903,0.438665,8.696291,9.296714,-7.659034,8.831821,-0.354685,5.406255,1.278470,-3.593925,5.597849,6.690643,1.093919,-3.215285,-2.776179,7.349211,5.505466,4.204947,0.834136,-6.233809,9.985748,-2.004256,-6.689075,-4.476545,6.491481,8.984655,-3.931740,-6.535044,-4.366567,9.270231,2.028336,6.223501,3.903918,2.282432,-1.382624,0.546614,5.478675,7.275733,4.130136,5.957450,-3.094011,-4.037355,-6.529913,8.478827,3.874271,6.432939,1.196982,-5.913622,4.339713,3.890916,9.064095,4.646645,-2.730990,-8.071088,5.524890,-6.450080,4.644085,-1.145771,-0.039787,-5.037883,-0.059900,-3.488307,7.280902,1.775326,2.938106,-0.537219,9.969434,3.802849,-9.999311,3.178177,-9.245916,4.728753,-6.546017,0.849440,4.737372,7.387035,2.928547,-7.624845,-4.276469,5.642818,-9.796771,-6.196152,-1.697215,-5.277065,-6.033069,-0.803285,7.608201,-1.079509,9.976086,-5.763254,5.625539,-8.992994,-6.458849,2.378224,-0.409610,-1.193783,-3.560362,-3.529412,-0.114871,3.903225,0.178343,5.852939,-1.852026,-6.509623,1.220601,-0.708117,-5.864387], dtype = "float32")#candidate|2538|(512,)|const|float32
const_2539 = relay.const([5.000708,-4.860253,1.982246,1.814904,3.905206,-3.980520,-5.974890,-6.693332,-0.185247,3.331964,-3.304024,-8.840218,9.008603,3.983590,3.386138,-6.765880,0.569589,-3.314136,1.818825,-6.948002,9.454697,-3.345252,-9.798053,-9.844316,9.007524,-3.216397,-4.430559,-8.736486,5.755242,8.027745,1.102757,-1.487071,-1.016136,0.650250,-1.285357,-3.305991,-3.125986,5.828296,4.839601], dtype = "float32")#candidate|2539|(39,)|const|float32
call_2537 = relay.TupleGetItem(func_2162_call(relay.reshape(const_2538.astype('float32'), [16, 4, 8]), relay.reshape(const_2539.astype('float32'), [13, 3]), relay.reshape(const_2529.astype('uint16'), [25, 4]), ), 4)
call_2540 = relay.TupleGetItem(func_2166_call(relay.reshape(const_2538.astype('float32'), [16, 4, 8]), relay.reshape(const_2539.astype('float32'), [13, 3]), relay.reshape(const_2529.astype('uint16'), [25, 4]), ), 4)
func_1033_call = mod.get_global_var('func_1033')
func_1036_call = mutated_mod.get_global_var('func_1036')
var_2542 = relay.var("var_2542", dtype = "uint8", shape = (390,))#candidate|2542|(390,)|var|uint8
call_2541 = func_1033_call(relay.reshape(var_2542.astype('uint8'), [10, 3, 13]), relay.reshape(var_2542.astype('uint8'), [10, 3, 13]), )
call_2543 = func_1033_call(relay.reshape(var_2542.astype('uint8'), [10, 3, 13]), relay.reshape(var_2542.astype('uint8'), [10, 3, 13]), )
func_2240_call = mod.get_global_var('func_2240')
func_2242_call = mutated_mod.get_global_var('func_2242')
const_2545 = relay.const([-9.259649,-5.460024,-7.103174,3.065558,2.180217,-9.128960,-0.774111,-8.365789,1.478076,6.217848,-3.822423,3.095916,-1.611466,1.986379,9.924792,0.882902,-9.951002,-9.059305,7.202179,-1.537066,2.846101,1.314539,9.236679,-1.594686,8.291812,7.725893,-3.704276,9.796238,-6.733388,-4.030789,4.530315,5.777844,3.581878,-7.619310,-0.819123,8.889207,2.506266,7.945172,7.018887,1.288747,4.928574,-9.123505,-7.380987,-1.730252,4.253358,-7.150908,-9.316385,-4.629753,-7.192309,-6.459322,-4.177784,-6.113485,-3.576273,-7.305590,0.349827,6.416448,-3.215440,-2.911703,0.614575,-1.494541,-5.463149,1.662620,-4.974766,-7.155893,-6.154518,3.785755,8.371485,-3.278955,-3.802422,0.967213,-0.830402,-8.906002,-8.162820,7.106851,-8.801424,-1.163857,5.667115,1.753409,-3.299979,-3.011577,1.530865,4.973405,2.271642,-9.513434,-7.729728,2.862993,-3.448242,-1.158381,0.009779,-8.949911,8.802713,-7.418673,-6.821483,-0.197629,4.673501,8.036588,5.639521,7.036678,-2.931330,-2.726984,9.663273,-5.491198,2.304867,1.134022,-9.431411,-5.262324,-4.259195,-5.851782,8.484736,6.753076,4.565843,3.699501,9.521526,9.340491,-1.851661,7.872518,-6.352339,-7.936377,-4.699065,-5.589065,5.723209,-3.831540,5.733820,5.287186,2.722182,1.546452,7.207361,3.332951,-4.993466,3.552765,-5.975047,-6.321265,-0.082522,1.338238,-4.882831,0.546503,-1.870006,-6.435212,1.191125,-5.291261,-6.944670,6.429752,-6.286553,7.988509,-7.227730,-0.013161,9.369893,1.231056,5.845567,-0.931146,-2.137557,4.292070,9.876856,-0.788276,4.893184,0.025235,-9.971214,-2.072281,-7.483800,6.610914,-5.216234,4.961635,6.356765,6.762488,4.679407,-5.410775,6.979152,7.141454,0.504960,2.219722,-6.036968,5.124885,-5.627560,-2.289309,7.873328,8.100745,0.165259,8.081449,7.748983,0.680322,-6.306897,-7.734322,6.699591,-7.890792,7.291088,-4.572236,-8.638168,-8.726167,0.733257,2.845092,2.688141,-3.762042,-7.560942,9.031624,-9.510831,-4.305267,-3.318509,-8.482805,-5.206613,6.053040,6.458489,-6.250608,4.351879,-8.935324,9.596331,7.304669,-2.751466,0.674036,5.876481,-0.388206,9.247920,-5.202940,1.446751,3.008838,0.224650,5.792026,-0.215229,-7.608432,-8.156588,-0.478310,4.528797,-9.411135,7.871995,-4.717439,-4.543223,-9.588648,4.987612,-0.005944,-6.429060,9.959803,-0.261305,-7.643623,-3.498292,-1.529651,9.335122,-8.634171,-1.836054,-0.556832,-3.054358,-6.281423,1.596631,-2.681252,9.387377,5.990668,-9.540870,5.080069,5.840452,-9.059780,-6.281117,-7.892325,7.457146,-4.074321,-4.111744,-8.767282,4.194049,3.115491,8.261632,-4.245707,-2.483029,-7.773332,-0.294623,4.046831,2.050286,0.773620,-1.159750,6.483462,-7.868908,4.650747,-0.019236,2.462404,-3.332645,-7.813185,-9.729396,-1.246866,-2.804884,2.321625,-4.570306,-0.584939,-3.205823,-0.277154,-6.615680,9.819112,4.488119,4.190704,-5.982962,-0.597579,0.030252,-9.221059,1.548799,9.804749,-0.359237,-0.885465,1.699122,-0.407064,-2.326147,6.752672,7.208022,1.709863,8.555842,-6.914909,1.075716,4.090440,-7.967033,-7.182653,-6.451958,5.885938,-3.195630,-7.435494,1.474496,-1.831793,2.711633,-3.013469,-9.146566,4.692250,-8.293199,9.708018,-8.938029,-7.415423,-9.647944,-3.865719,-2.202547,3.448538,0.089858,7.381243,1.335182,-6.609687,7.320635,3.917936,-8.066656,1.563992,-7.510867,-9.781459,0.847493,4.839643,6.943832,5.975090,-6.225924,2.207455,-5.171656,-9.203557,-0.816858,-2.451259,0.559715,4.933649,-5.964791,-0.001152,9.909887,-0.130009,6.751293,-5.475891,1.079261,3.629933,4.892170,-5.865208,6.294832,2.294089,1.295555,9.084688,2.915559,1.952015,3.304254,-4.210117,-5.947612,-9.499845,4.745866,6.131342,-2.790483,-1.979067,6.771848,1.273669,3.957013,-5.437082,-2.448403,5.991143,-2.402847,6.939021,-0.444989,-5.680588,-6.940654,-0.675314,9.537304,5.793526,-1.686756,1.537064,-6.134112,-0.186396,4.395112,-8.682547,-8.907238,5.484931,-7.255396,0.058851,4.927242,-2.386555,-4.344486,5.566290,-6.669602,0.177138,-5.692608,-5.899804,9.418049,-9.114860,5.961395,-8.065638,-4.039630,-9.625532,-6.274837,8.838624,6.106248,-6.548008,-3.749802,8.835237,-0.821095,-1.866303,-5.538397,0.577685,2.169649,-7.805434,-9.576567,0.181468,4.481932,-7.438532,6.546799,2.575656,2.468656,-1.403144,9.751319,-1.288478,-0.871900,-5.664832,1.827520,-9.895110,1.325983,1.457416,5.770771,-4.931024,-5.729127,-4.575825,-6.975364,-4.189388,6.680418,1.721090,-4.339573,-7.844814,-0.748552,2.384160,-6.663949,6.452935,7.510714,-7.341192,0.961200,4.593159,0.289730,7.276100,3.351491,0.553226,-4.862547,2.569894,-9.759084,6.614759,-6.648559,-9.895105,-9.752759,-8.715981,-1.560965,-8.231424,1.612112,9.885624,3.362410,-9.955194,-6.297135,-7.591675,-3.414471,6.374576,4.807003,-5.698419,-5.639111,8.256322,-0.031881,-0.976651,-5.040832,-9.676785,-8.397780,-6.298022,-1.724695,-3.184626,-1.013037,8.597946,-5.330794,6.586716,1.784348,8.921175,-5.390819,-4.277666,-9.792784,3.975073,0.246486,-0.583686,1.417806,9.637098,1.531773,-8.350043,-8.064685,-8.157899,-5.222366,4.785159,7.271027,2.362781,1.482354,-1.151205,-0.591345,-2.940827,5.164817,8.863164,4.276521,-9.999775,-4.116028,-8.749809,-3.546202,0.121267,-0.536287,-4.770333,9.680656,9.454548,9.520508,-6.181305,7.357068,3.783733,3.952764,5.731851,-8.790976,5.532579,-4.994430,5.063042,6.136709,9.527765,0.836914,3.540431,-9.544661,3.589736,6.044675,6.203425,-5.137525,3.927927,-7.179169,-7.517254,1.662496,2.503742,0.059252,-6.905428,-9.054731,-6.882591,-6.905570,-3.664989,-9.099844,-0.042668,-0.032625,-5.095913,0.511662,-3.331104,-8.182908,-6.209390,8.510860,8.946787,-7.118592,9.264586,-8.560508,7.499643,5.979616,4.702990,1.863470,9.692013,7.266773,2.043905,-9.072148,-3.660912,-8.665027,-4.021890,3.327773,3.137431,2.480058,-1.271111,-7.887634,-6.304272,4.641348,-7.939571,-2.913448,-2.613626,6.380200,-4.939751,-4.991252,4.709380,3.416707,-8.979203,3.848030,-6.690325,-0.259574,-7.675609,-6.452725,-2.949803,-5.908381,5.192571,0.792680,2.198974,5.321993,-7.290570,-5.637137,-7.849368,2.514926,-3.518211,-0.077915,7.279419,5.119547,-8.204166,0.059736,-4.230153,7.918379,-1.999586,1.512672,8.264855,2.940176,-8.997394,8.847112,6.926817,7.905906,-4.753543,-2.364153,-3.537166,1.139354,-7.106337,-0.208372,0.263076,-2.050615,-8.605212,7.075225,-3.584834,3.082743,-1.067317,3.796377,9.608146,-9.888495,7.640594,1.919885,-6.061438,-1.650856,3.730585,4.805243,-5.818850,-4.267008,-1.853446,-8.752843,-9.198193,4.462749,2.546691,-9.818746,-2.932797,-6.320877,-1.100820,0.644617,-4.360481,1.510062,-8.348678,-7.094430,-1.178019,5.237612,-4.392206,4.170123,5.023846,-0.697946,9.492471,9.101426,5.650121,2.936260,-1.612988,-6.647294,-5.412163,-5.787153,3.915104,7.036056,-4.121294,-3.890498,0.456298,0.982034,-6.763282,7.591773,9.804969,0.924033,-1.293001,-4.315656,-8.472580,6.607500,-8.062274,3.230367,3.586345,0.404691,-9.454152,-6.084931,7.638618,-5.956208,9.150715,1.320074,4.593715,0.110243,-5.029664,-3.999774,5.021784,7.984740,1.363219,6.240840,-9.057586,-3.269176,-6.467723,-4.749950,6.264820,2.488338,-7.709204,5.397294,-4.682833,2.682001,-5.723871,5.664475,6.353162,2.147058,7.481914,4.008222,7.680653,-4.148962,2.323691,6.713756,-1.523535,8.784642,1.234778,-5.271776,-8.664061,-8.372929,8.403377,-8.656210,5.103758,6.759680,-3.543889,-5.132283,0.439864,5.267297,7.419320,7.562423,0.435909,-4.433109,1.097036,-5.524463,-7.873078,-6.323470,-0.737158,-1.277560,-3.892523,6.909033,4.201408,-5.042937,-9.450024,0.220955,-3.224826,5.880843,2.816416,-7.776768,-6.316342,-3.838313,-6.288305,-6.346736,8.545111,-6.620616,7.485492,-3.623659,6.252589,7.817262,-7.180845,5.522021,9.234021,7.122277,-8.115406,3.192153,-1.032314,8.908083,-0.175132,-4.856176,-2.649412,0.987024,-3.712381,-2.260639,-5.178786,5.951259,-3.295549,0.201825,-4.992048,8.644373,-0.727428,0.496796,-7.606727,9.154513,4.791691,0.691447,-8.634002,4.931256,-3.992222,-0.832445,1.380837,-6.328930,-2.287814,2.314512,-6.600147,3.728727,4.342787,7.204071,2.121515,-4.092533,-8.272158,0.406471,-2.035613,3.875662,-1.857861,6.071423,-9.622058,-8.272138,4.880054,1.328549,-2.388559,-0.288587,4.333608,6.045306,1.245301,0.896161,4.186362,-9.149092,1.622789,5.842436,-6.035349,0.139719,-0.508018,2.315906,4.083302,5.890271,-0.011892,7.590294,7.976460,-2.125809,-4.154976,2.774173,-6.970005,7.946369,7.876496,-1.269096,5.093913,-7.462243,1.626356,7.649182,-1.340430,-0.479927,4.615169,7.989148,-3.535912,4.599043,3.776305,0.966940,-8.358182,-9.862816,1.646445,4.297952,-7.268343,-6.907322,-9.046687,5.572771,-2.893685,7.456705,4.565871,-6.193045,-8.915519,7.437509,-0.928299,-7.595037,4.750999,6.331854,5.847155,-2.131197,-2.157961,6.726185,-9.214348,-5.087891,-2.173111,-1.983299,-1.276640,1.287013,-4.324489,-3.190634,8.605098,-1.074071,8.306134,4.205827,-0.069416,4.093264,-0.728153,4.846041,9.180257,7.689238,6.365732,6.706545,2.053637,7.762104,9.536997,-5.933547,-1.341507,-4.006576,-0.881517,-8.055094,3.369745,-4.405812,-1.423484,-4.158926,9.931276,7.445769,-7.367845,-1.638300,3.792369,8.159168,4.988239,-6.395766,-5.368447,-7.527161,-7.335723,-9.799292,-8.082830,-4.257896,-2.603878,-9.021890,-1.891796,2.973910,-4.092769,-8.299413,1.512830,5.619917,-3.794675,-5.691346,-1.765936,6.635213,1.918416,-7.343318,-6.411362,-6.894819,9.996519,-2.441852,-6.860471,-1.178874,3.531240,-3.107212,8.719673,-2.367094,6.762625,-4.085350,1.403911,1.673726,9.410764,-9.391293,-4.515600,1.469403,4.109741,7.373098,4.948677,-1.111530,9.791409,7.524255,-0.872448,-1.402548,-8.652176,0.894481,-9.402772,-7.506047,-6.961325,-4.416339,0.303597,1.033768,2.845888,-3.618510,-3.851032,-8.306265,9.324251,-2.115112,6.224497,-7.899730,-0.673497,2.246163,-4.880276,-6.203476,-7.664526,3.296377,-7.369302,-5.153236,7.389727,-1.596899,9.852135,3.925436,-1.908842,7.840175,-4.670114,8.712776,2.697645,-7.430109,-0.841256,8.718626,5.964570,-1.849528,3.858777,9.132289,1.671016,-6.740674,-2.974423,-3.201608,-6.093598,-9.561796,8.878270,4.606562,-6.541048,-9.596290,-2.134330,6.471697,-5.281390,-9.965625,-8.037187,-8.362346,1.720557,6.193738,3.135470,1.495123,8.343242,-6.127371,8.057816,7.719865,7.843595,8.202064,6.312583,8.963443,-0.003880,3.079676,-9.954433,1.849127,2.561050,1.920447,-3.809293,-3.830771,2.648740,-1.812974,-6.846736,-1.175702,9.216389,7.985424,8.990220,-2.653424,-3.488992,-6.368600,7.644023,2.130826,-4.523612,4.934236,9.474815,-1.541599,6.062238,3.070785,9.122425,8.535081,4.219530,4.340379,-3.438925,7.182998,-8.635423,7.441845,6.732147,-2.283062,7.755897,-5.734493,6.256944,7.723022,2.641558,-2.338530,7.545081], dtype = "float32")#candidate|2545|(1080,)|const|float32
call_2544 = relay.TupleGetItem(func_2240_call(relay.reshape(const_2545.astype('float32'), [15, 8, 9])), 2)
call_2546 = relay.TupleGetItem(func_2242_call(relay.reshape(const_2545.astype('float32'), [15, 8, 9])), 2)
var_2553 = relay.var("var_2553", dtype = "uint16", shape = (10, 5, 2))#candidate|2553|(10, 5, 2)|var|uint16
bop_2554 = relay.not_equal(call_2537.astype('bool'), relay.reshape(var_2553.astype('bool'), relay.shape_of(call_2537))) # shape=(10, 5, 2)
bop_2557 = relay.not_equal(call_2540.astype('bool'), relay.reshape(var_2553.astype('bool'), relay.shape_of(call_2540))) # shape=(10, 5, 2)
func_1176_call = mod.get_global_var('func_1176')
func_1182_call = mutated_mod.get_global_var('func_1182')
const_2585 = relay.const([[False,False,False,True],[False,False,True,True],[False,True,False,True],[False,True,False,True],[False,False,True,True],[True,False,True,False],[True,False,False,True],[False,False,True,False],[False,True,False,False],[True,True,True,True],[True,True,False,True],[True,True,False,True],[True,False,False,False],[False,True,True,False],[True,True,True,True],[True,False,False,True],[False,False,True,True],[True,True,True,False],[False,True,True,True],[False,False,False,False],[False,False,False,False],[False,True,False,True],[True,False,True,False],[False,True,False,False],[True,True,False,False],[False,True,True,True],[False,False,False,True],[False,True,True,False],[True,True,True,True],[True,True,True,False],[True,False,False,False],[True,False,False,False],[False,False,False,False],[True,True,True,False],[False,False,True,False],[True,False,True,False],[True,False,False,False],[True,True,False,True],[True,True,True,False],[True,True,False,True],[False,False,False,True],[False,True,True,False],[True,False,False,False],[False,True,True,False],[True,True,False,True],[False,True,False,True],[False,True,True,True],[False,True,True,False],[True,True,False,True],[False,True,True,False],[False,False,False,False],[True,True,False,True],[False,True,False,False],[False,False,True,False],[True,False,True,True],[True,False,False,True],[True,False,False,False],[True,False,False,True],[False,False,False,True],[False,False,False,False],[True,False,True,True],[False,False,True,True],[True,True,True,False],[True,True,True,True],[True,False,True,False],[False,True,False,False]], dtype = "bool")#candidate|2585|(66, 4)|const|bool
var_2586 = relay.var("var_2586", dtype = "float32", shape = (5, 165))#candidate|2586|(5, 165)|var|float32
call_2584 = relay.TupleGetItem(func_1176_call(relay.reshape(const_2585.astype('bool'), [3, 11, 8]), relay.reshape(const_2585.astype('bool'), [3, 11, 8]), relay.reshape(var_2542.astype('uint8'), [390,]), relay.reshape(var_2586.astype('float32'), [825,]), ), 4)
call_2587 = relay.TupleGetItem(func_1182_call(relay.reshape(const_2585.astype('bool'), [3, 11, 8]), relay.reshape(const_2585.astype('bool'), [3, 11, 8]), relay.reshape(var_2542.astype('uint8'), [390,]), relay.reshape(var_2586.astype('float32'), [825,]), ), 4)
output = relay.Tuple([call_2515,call_2527,var_2528,const_2529,const_2538,const_2539,call_2541,var_2542,call_2544,const_2545,bop_2554,call_2584,const_2585,var_2586,])
output2 = relay.Tuple([call_2516,call_2530,var_2528,const_2529,const_2538,const_2539,call_2543,var_2542,call_2546,const_2545,bop_2557,call_2587,const_2585,var_2586,])
func_2589 = relay.Function([var_2528,var_2542,var_2553,var_2586,], output)
mod['func_2589'] = func_2589
mod = relay.transform.InferType()(mod)
var_2590 = relay.var("var_2590", dtype = "uint64", shape = (84,))#candidate|2590|(84,)|var|uint64
var_2591 = relay.var("var_2591", dtype = "uint8", shape = (390,))#candidate|2591|(390,)|var|uint8
var_2592 = relay.var("var_2592", dtype = "uint16", shape = (10, 5, 2))#candidate|2592|(10, 5, 2)|var|uint16
var_2593 = relay.var("var_2593", dtype = "float32", shape = (5, 165))#candidate|2593|(5, 165)|var|float32
output = func_2589(var_2590,var_2591,var_2592,var_2593,)
func_2594 = relay.Function([var_2590,var_2591,var_2592,var_2593,], output)
mutated_mod['func_2594'] = func_2594
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1844_call = mod.get_global_var('func_1844')
func_1846_call = mutated_mod.get_global_var('func_1846')
call_2596 = func_1844_call()
call_2597 = func_1844_call()
output = call_2596
output2 = call_2597
func_2598 = relay.Function([], output)
mod['func_2598'] = func_2598
mod = relay.transform.InferType()(mod)
mutated_mod['func_2598'] = func_2598
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2598_call = mutated_mod.get_global_var('func_2598')
call_2599 = func_2598_call()
output = call_2599
func_2600 = relay.Function([], output)
mutated_mod['func_2600'] = func_2600
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2044_call = mod.get_global_var('func_2044')
func_2045_call = mutated_mod.get_global_var('func_2045')
call_2698 = relay.TupleGetItem(func_2044_call(), 3)
call_2699 = relay.TupleGetItem(func_2045_call(), 3)
const_2713 = relay.const([[False,False,True,True,False,True,False,False,False,True,True,True,True,True,False,False,False,True,False,False,False,True,True,True,True,True,True,True,False,False,True,False,True,False,True,True,False,True,True,False,False,True,True,True,False,True,True,False,False,False,False,False,True,False,False,False,True,True,True,True,False,True,True,True,True,True,False,True,False,True,True,True,False,False,False,False,True,False,True,True,False,True,False,True,True,False,True,True,True,True,False,True,False,False,False,True,True,False,True,True,False,False,False,False,True,True,True,False,True,False,False,True],[True,False,False,True,False,True,False,True,False,False,True,False,False,True,False,True,False,True,True,False,True,True,False,False,False,True,True,True,True,True,False,True,True,False,False,True,False,False,False,False,False,True,True,True,True,True,False,True,False,True,True,True,True,True,False,True,True,True,True,False,False,True,True,True,False,True,False,False,True,False,False,False,False,True,True,True,False,True,False,False,True,True,False,False,False,False,True,True,True,False,False,True,False,True,False,False,True,False,False,False,False,False,False,False,False,True,True,False,True,True,True,False],[False,True,False,True,True,True,False,False,False,False,True,False,False,True,False,True,True,False,True,True,False,False,False,False,True,True,True,False,True,False,False,True,True,False,False,False,False,True,False,False,True,True,False,True,False,False,False,True,False,False,False,False,False,False,True,True,False,False,False,True,False,False,False,True,True,True,True,True,False,True,True,True,False,True,True,False,True,True,True,True,True,True,True,True,False,False,True,False,False,True,True,False,True,True,True,False,False,False,True,False,True,False,False,True,True,True,True,False,False,False,True,False],[False,True,True,False,True,False,False,False,True,True,False,True,False,False,True,True,False,True,True,False,True,True,True,True,False,True,True,True,True,True,True,True,False,False,True,True,True,True,True,False,False,False,True,True,False,True,False,False,False,True,False,True,True,False,False,True,True,False,False,False,True,True,False,True,False,True,False,True,True,False,True,True,False,True,False,False,False,False,False,False,False,True,True,True,True,False,False,False,False,True,False,True,False,False,False,False,False,False,True,True,False,True,False,False,False,True,False,False,True,True,False,True],[False,True,False,True,True,True,True,True,False,True,False,False,False,False,True,False,True,False,True,True,True,True,False,True,False,False,True,False,True,True,True,True,True,False,False,False,True,True,False,True,True,False,True,True,True,False,True,False,True,False,True,False,True,True,False,False,False,True,False,True,True,True,True,False,True,True,False,False,True,False,True,False,True,True,True,False,True,False,False,False,False,True,True,True,True,True,True,True,False,True,False,True,True,True,True,False,True,False,True,False,False,False,False,True,True,True,True,True,True,True,True,True],[True,False,False,False,True,False,True,False,True,True,True,False,True,True,True,False,True,False,False,True,False,False,True,False,True,False,True,False,False,False,True,True,True,True,True,False,True,False,False,True,True,False,True,False,True,False,False,False,False,False,True,True,False,False,True,True,True,False,True,True,False,False,False,True,False,True,False,True,True,False,False,False,False,False,True,True,False,True,True,True,False,True,False,False,True,True,False,False,True,True,True,True,False,True,True,False,False,True,True,True,True,False,False,False,False,True,True,False,False,True,True,False],[False,True,True,True,False,True,False,True,False,True,True,False,True,False,False,True,True,False,True,False,False,True,False,False,False,False,False,False,True,False,True,True,True,False,False,False,True,False,True,True,False,False,False,True,False,False,False,True,False,True,False,False,False,False,False,False,False,True,True,True,True,False,False,False,False,True,False,True,True,False,False,True,False,False,False,True,True,True,False,True,False,False,False,True,True,False,True,True,True,False,True,False,False,True,True,False,False,True,True,False,True,False,True,False,False,False,True,True,True,True,True,True],[False,True,False,True,True,False,False,True,False,True,True,True,True,False,True,True,False,True,True,True,True,True,True,True,True,False,True,False,False,False,True,False,True,False,True,False,False,True,True,False,True,True,True,False,True,True,True,True,False,True,True,True,False,False,False,True,True,True,True,True,True,False,True,False,False,False,True,False,True,False,True,False,True,False,False,True,True,False,False,True,True,True,False,True,False,True,False,True,False,True,False,False,True,True,False,False,True,True,False,False,False,True,True,True,False,True,False,True,True,True,True,False],[False,True,True,False,False,True,True,True,False,True,True,False,False,True,False,True,True,False,False,True,False,True,False,False,False,True,True,False,False,False,False,False,False,False,True,False,True,False,True,False,False,False,False,False,False,False,False,True,False,False,False,False,True,False,False,True,True,False,True,True,False,False,False,False,False,True,True,True,True,False,True,True,True,True,False,True,True,False,False,False,False,False,False,True,False,True,False,False,True,False,True,True,False,True,False,False,False,True,True,False,True,True,True,False,False,True,True,False,True,True,False,True],[True,False,False,False,True,True,False,False,True,True,False,True,True,False,True,True,True,False,True,False,True,True,True,False,False,False,False,False,False,False,True,True,False,False,True,False,True,True,False,False,True,False,True,False,False,False,True,True,False,True,False,False,False,True,False,False,True,False,False,True,False,False,True,False,False,False,False,True,False,True,True,True,True,False,True,False,False,False,True,False,True,True,False,True,False,False,False,False,False,False,True,False,False,False,True,False,True,True,True,True,False,False,False,False,False,True,False,False,True,True,True,True],[True,True,False,True,False,False,True,False,True,True,True,True,True,False,False,False,True,True,True,False,False,True,False,False,False,False,True,False,True,False,True,False,True,True,False,True,False,True,False,True,False,True,False,False,True,False,False,False,False,False,False,False,True,False,False,False,False,True,False,False,True,True,False,True,False,False,False,False,False,False,True,False,True,False,False,False,False,True,True,False,True,True,False,False,False,True,False,False,False,False,False,False,True,True,True,False,True,True,False,True,False,False,False,True,False,False,False,False,True,True,True,False],[False,True,True,False,False,True,True,True,False,True,True,True,False,False,True,False,True,False,True,True,False,True,True,False,False,True,False,True,False,True,False,False,True,True,True,True,False,False,False,False,True,True,False,False,True,True,False,True,True,True,False,True,True,True,True,True,False,False,False,False,True,False,True,False,True,False,False,False,False,False,False,True,False,False,True,True,False,True,False,True,True,True,True,False,False,False,True,True,False,True,True,False,False,False,False,True,False,False,True,False,True,False,False,True,False,True,False,False,True,True,False,False],[False,True,False,False,True,True,True,False,False,True,False,False,True,False,False,False,True,True,False,False,True,False,True,False,False,True,False,True,False,False,True,False,True,True,True,True,False,False,True,False,True,True,True,True,True,True,True,False,False,True,False,False,False,True,False,False,True,False,True,True,True,False,False,False,True,True,True,True,True,False,True,True,True,False,False,True,True,True,True,False,False,False,False,False,True,False,False,False,False,True,False,True,True,False,False,False,True,True,True,False,False,True,True,True,True,True,False,True,False,False,True,True],[False,True,True,True,True,False,False,True,True,False,True,True,False,True,True,True,False,True,True,False,False,True,False,True,False,False,False,True,False,True,False,False,False,True,False,True,True,False,True,True,False,False,False,False,True,True,True,True,False,False,False,False,True,False,False,False,False,False,True,True,False,True,True,False,False,True,False,False,True,True,True,True,True,True,True,False,False,False,True,True,True,True,True,False,True,True,False,False,False,True,True,False,False,False,False,True,False,False,True,True,True,False,True,False,True,False,False,True,True,False,False,False],[True,False,False,True,True,True,True,True,False,False,True,True,False,False,False,False,False,True,False,False,True,True,False,False,True,True,True,False,True,False,False,False,False,True,True,True,False,False,True,False,False,False,True,True,False,True,True,True,False,True,True,True,False,True,True,False,False,True,False,True,True,True,False,True,False,True,False,False,False,True,False,False,False,False,True,False,True,True,True,False,False,False,True,True,False,True,True,False,False,True,False,True,False,False,False,False,True,False,False,True,False,True,False,False,True,True,False,False,False,False,False,True],[False,False,False,False,True,True,True,True,False,True,False,True,True,False,True,False,False,False,False,False,True,False,False,False,True,True,False,False,True,True,True,True,True,True,False,False,False,True,True,False,False,True,True,True,True,True,True,True,True,True,False,False,True,False,False,True,True,False,True,False,True,False,False,False,True,False,False,True,True,True,True,True,False,True,False,True,False,True,True,True,True,True,True,False,True,True,True,True,True,False,True,True,False,True,True,True,True,False,False,False,True,False,True,False,True,True,True,True,True,False,False,False]], dtype = "bool")#candidate|2713|(16, 112)|const|bool
bop_2714 = relay.bitwise_xor(call_2698.astype('int16'), relay.reshape(const_2713.astype('int16'), relay.shape_of(call_2698))) # shape=(16, 112)
bop_2717 = relay.bitwise_xor(call_2699.astype('int16'), relay.reshape(const_2713.astype('int16'), relay.shape_of(call_2699))) # shape=(16, 112)
uop_2718 = relay.acos(bop_2714.astype('float64')) # shape=(16, 112)
uop_2720 = relay.acos(bop_2717.astype('float64')) # shape=(16, 112)
output = relay.Tuple([uop_2718,])
output2 = relay.Tuple([uop_2720,])
func_2725 = relay.Function([], output)
mod['func_2725'] = func_2725
mod = relay.transform.InferType()(mod)
mutated_mod['func_2725'] = func_2725
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2725_call = mutated_mod.get_global_var('func_2725')
call_2726 = func_2725_call()
output = call_2726
func_2727 = relay.Function([], output)
mutated_mod['func_2727'] = func_2727
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1844_call = mod.get_global_var('func_1844')
func_1846_call = mutated_mod.get_global_var('func_1846')
call_2760 = func_1844_call()
call_2761 = func_1844_call()
output = relay.Tuple([call_2760,])
output2 = relay.Tuple([call_2761,])
func_2780 = relay.Function([], output)
mod['func_2780'] = func_2780
mod = relay.transform.InferType()(mod)
output = func_2780()
func_2781 = relay.Function([], output)
mutated_mod['func_2781'] = func_2781
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1857_call = mod.get_global_var('func_1857')
func_1859_call = mutated_mod.get_global_var('func_1859')
call_2782 = relay.TupleGetItem(func_1857_call(), 0)
call_2783 = relay.TupleGetItem(func_1859_call(), 0)
func_1505_call = mod.get_global_var('func_1505')
func_1510_call = mutated_mod.get_global_var('func_1510')
const_2798 = relay.const(9.215826, dtype = "float32")#candidate|2798|()|const|float32
const_2799 = relay.const([[-5.521798,-3.413382,-1.067985,2.479487,-8.237999,-4.362188,-6.018587,-7.613568,8.058703,3.251593,0.322491,-6.265762,2.930396,3.379739,5.158282],[-8.173929,8.408649,4.000804,0.117191,8.848897,3.753853,-4.761752,-2.184596,1.253946,-0.408226,-3.911138,8.023278,-2.597548,-3.154478,9.453432],[-6.033706,1.947309,-3.137024,-0.509367,1.479150,0.519124,0.338597,9.633898,-1.451629,9.056767,1.976152,-0.067974,-9.915860,-4.206979,-6.231328],[-6.900160,5.009203,-7.557338,1.766861,9.203712,-0.225041,2.178701,-8.781269,-1.875737,3.186151,4.103804,7.112872,3.841661,-4.416503,-6.342761],[4.530199,-8.717734,-5.964394,-7.395567,2.123658,0.805112,8.985384,3.223963,9.111293,-6.729343,-7.544720,1.279215,-1.066366,4.596354,-6.698818],[6.757653,0.919790,-0.961474,4.731945,4.450997,-2.974772,-1.961757,2.795602,-4.190340,9.209032,5.946348,-1.244679,8.431811,0.622760,-4.315822],[-8.890409,-6.095811,9.611317,-4.942691,2.832771,2.938138,-8.993643,5.093031,7.359023,-8.878766,1.827415,-7.997064,-7.645299,-6.071189,1.115225],[-3.272106,-4.099046,3.609639,4.185130,-4.288745,1.361660,4.439149,-9.271837,8.841622,-6.615452,-4.668216,3.039363,3.859032,0.173685,4.781158],[-0.582546,-5.856883,-0.567000,-3.101799,3.454165,0.673400,-2.127474,-0.324207,7.064345,2.155337,4.415534,5.098378,-5.343597,9.370432,-9.733794],[-1.348522,-8.474889,-9.512465,-4.500192,-6.227362,6.466832,-3.737709,-0.418375,-7.739183,-8.192460,0.551016,-4.754981,-1.497364,-5.056188,-6.500880],[8.395671,0.621330,2.066867,-3.493837,3.760936,-9.732497,-2.280441,-0.314976,6.254080,3.319320,-3.347621,-8.732717,2.410979,-9.167136,-3.528217],[5.454688,4.550256,6.439752,-2.006357,0.879399,-3.510828,-0.872861,-4.576405,-3.701862,-2.203532,-1.843188,-7.102972,5.566581,7.074099,2.783612],[-8.902970,6.630156,-5.028081,-4.786331,6.850622,-9.973869,6.865431,-7.220932,5.285341,-9.947180,-9.396746,5.605882,9.938338,6.647044,-1.643842],[-0.210009,4.480941,-7.160292,-6.198559,-4.127490,-1.891358,3.279424,9.399928,-5.908276,-3.168192,-1.530048,6.995163,-7.554049,-0.635831,3.028158],[-0.490231,1.370926,-2.794134,8.991392,1.879017,-9.664279,-7.696237,1.792530,5.691218,4.138826,-1.769226,4.657103,6.931262,-8.600785,1.678304],[-8.925622,3.827862,5.585554,8.978191,-1.635316,-7.504744,5.293275,7.022550,-6.089749,-8.670228,-9.085277,-1.553779,-3.558095,0.766402,1.181446],[-2.392599,1.161175,-7.850523,4.933376,6.863352,-4.678895,-7.169906,5.340821,-4.229142,8.445924,9.073753,-6.934549,9.316332,0.631292,7.485533],[6.436056,-6.927530,-2.227209,5.938934,-1.100830,4.348469,-8.498508,-5.180075,4.003814,1.886542,7.310433,0.606395,-1.263510,-7.552839,0.439723],[1.994003,-0.984774,7.895087,-5.917850,-5.728396,-1.359824,7.895900,-9.891179,-4.270725,-9.409742,-7.450454,-1.995286,8.344761,-4.985083,-2.524679],[-4.420237,-6.398483,8.495723,3.637670,-0.143624,-8.062056,4.900311,5.488434,-7.668297,-0.710272,2.259264,-8.149471,-6.153472,5.043754,-4.424047],[-4.953971,5.118541,4.168718,5.449353,-5.371681,-8.790374,-3.532364,-4.270986,6.901413,5.968256,0.072021,-6.118452,-1.022311,-5.119083,7.894235],[6.787164,7.799154,-2.734854,5.544329,7.427853,5.131714,-9.754962,6.099055,9.269912,0.386037,-8.773372,-7.627213,4.583973,4.046321,-9.605012],[-1.900304,3.991033,-1.504737,-3.723343,7.684023,0.850390,1.071027,-3.936015,-6.092167,-2.807941,-9.718755,-3.793239,2.302326,1.413770,7.499701],[-1.332945,6.659251,5.700674,5.889267,7.968425,4.958393,-3.490424,-2.881391,-0.338125,-9.382732,2.853651,8.273953,3.173701,4.481331,-9.970777],[-0.468112,-0.233488,-4.580609,9.652240,0.565221,-3.263512,0.109496,1.293120,4.384929,-8.416355,-7.719943,-3.958819,-2.327194,1.932800,-9.553203],[-2.926830,-5.097115,-8.890733,6.610367,-1.939096,-2.192936,4.800416,8.106267,4.993920,-4.361100,2.889390,9.354868,2.624330,6.422330,4.099814],[-0.073192,8.176140,-9.105481,4.001003,1.913739,-8.257813,-0.110824,-9.609121,4.548198,-7.180795,3.712809,-6.751736,1.653901,-4.893024,-0.409319],[-4.680127,-1.263250,7.440427,5.378842,-2.222106,1.096276,-7.593766,-0.446470,3.545531,-7.738843,-4.403861,8.705254,1.741492,-6.011976,-4.940869],[4.878921,8.704632,-4.861019,2.077271,9.927237,-3.415326,-1.740532,-8.216942,3.982403,-3.205997,9.285951,-7.904465,-0.642429,8.299999,3.993465],[2.523991,-8.928043,-4.251306,-3.367783,-5.043493,6.783472,-1.647817,5.779157,7.256267,-3.336842,-6.529599,-0.246247,6.629139,-5.397300,9.443665],[-7.871912,2.835885,7.877976,4.894384,8.687035,7.526967,-9.166960,-9.819900,-6.854555,9.132889,-7.530835,-7.510466,-5.962635,6.948159,-1.669478],[-5.217138,3.963180,8.060757,-9.916797,-4.785366,-1.318328,-3.086813,9.452195,-5.676581,-2.977594,7.336924,5.176123,3.119642,3.393091,0.411030],[9.070892,-9.499705,3.759628,6.237281,-3.401433,2.218787,1.230600,4.700028,-3.857139,-7.872877,4.432336,6.221599,3.350144,-9.719906,1.314487],[-5.298373,-8.279766,-6.975380,-7.483846,9.728282,7.105128,9.711465,-9.075596,-8.318133,-5.384111,-4.248724,-8.477265,0.166403,-4.967242,-0.886266],[4.892516,7.961612,4.969568,9.518352,7.524600,-0.986803,9.418242,-1.975807,-0.766533,-7.144482,7.414605,9.761587,2.116887,-2.988079,-1.543618],[2.286451,6.878018,0.361266,-9.619680,8.463293,9.694300,7.719831,3.795977,3.585659,-2.505677,7.902335,-5.605795,8.244715,5.549032,1.609523],[-0.365582,2.838581,0.037030,-4.626819,0.117452,-1.189043,1.488944,0.185846,2.430645,-7.378823,-0.229340,9.742747,-1.964212,-5.151828,-4.225369],[-8.835362,5.308292,0.883283,-1.260274,-6.188524,9.796299,7.905714,-4.947971,3.591289,6.717973,4.324890,1.344458,-0.316125,8.865137,5.439235],[-3.695759,-1.687603,1.967823,5.307452,4.025782,2.539467,-3.661969,5.452188,1.132303,-9.644000,7.925428,5.140422,-3.112985,-4.431102,-1.786321],[-9.169722,6.161201,-1.394797,-8.056361,2.689952,-2.120034,-6.008974,0.740824,0.500130,-3.221852,4.114485,-3.860440,9.296834,-1.457396,-1.640040],[9.519750,7.702442,-5.130927,-9.377729,0.691262,-1.758809,-9.790965,-0.656738,2.220180,7.393918,0.064371,5.872613,8.984521,3.110721,-3.719703],[-9.452158,-1.389624,7.003772,-6.711586,7.624927,9.037302,0.426075,-8.054809,8.527061,4.648187,9.274679,5.532751,-9.104902,8.737588,-5.945005],[-8.670211,-7.613368,-8.725708,6.718903,2.200909,6.355301,-1.832609,-3.119378,-0.054276,-2.869631,-5.894951,9.354043,-8.949867,-9.109665,4.727683],[-2.134326,-6.740474,-4.306616,-0.314826,9.993842,-7.304077,-8.033063,5.672691,8.690286,-4.233077,2.628091,3.793404,-4.079461,3.302385,-3.532650],[4.544152,-5.583565,8.673729,-7.173931,-3.294168,1.347067,-3.160607,2.223258,-1.123799,-6.229395,9.624721,-0.489416,-6.066231,-0.203173,9.432184],[-6.315264,8.875964,-6.724493,6.492563,-8.587137,-7.879118,-1.970270,9.971045,-4.703707,-0.826552,-3.220256,7.993513,-9.659763,8.920785,8.195518],[5.985163,4.052083,-0.080299,7.582746,5.012584,6.890615,5.594380,-1.341849,0.526194,6.448341,9.932147,6.662006,-6.138454,-0.542904,4.701733],[-2.123585,1.983869,6.678320,-6.970360,3.975314,7.648564,2.061808,-9.335500,9.984668,5.101966,2.763479,9.573076,1.533936,2.906295,6.635317],[5.211432,3.233062,-8.980342,-5.404322,-3.664489,-6.322313,-8.290269,-4.047948,2.697870,-1.405279,-6.165294,-2.686061,4.860698,6.238820,8.645976],[8.815193,5.356024,-0.238300,9.264109,-0.050442,-5.480210,1.161338,-9.427018,-7.326224,-1.490728,-6.155155,-1.627467,-4.306822,-8.932259,-9.030987],[-7.319550,-7.147052,7.303512,6.318626,5.280209,-9.352922,-5.999806,-6.902706,3.532628,7.420530,-4.893689,4.817286,-5.238408,-2.132206,5.279206],[-2.512771,-6.885927,0.388876,9.749734,-9.955711,-2.887556,5.497575,0.920662,-5.410247,-1.883971,-1.718416,2.952665,6.765531,1.800522,4.040533],[6.963674,-7.675735,-1.733307,7.989405,6.077556,6.430058,-6.092625,-1.360197,-5.925032,-3.576529,-6.419219,7.105716,-4.351086,8.462746,-2.090315],[7.996227,8.438760,5.554523,4.569121,4.163869,4.706562,5.503636,2.868137,5.004151,-1.596463,-5.993167,-1.457487,-8.088733,3.033129,-0.049153],[-2.152079,0.551753,6.749035,-7.987913,8.077756,3.447159,-4.279149,-5.270331,3.024042,3.667128,2.969279,-9.370784,-5.157095,6.643622,0.495741]], dtype = "float32")#candidate|2799|(55, 15)|const|float32
const_2800 = relay.const([-3,7,6,-8,10,-1,-7,5,-2,9,-7,-3,-3,1,10,-7,4,7,-8,6,-10,8,3,5,-8,3,5,2,-2,-5,8,-3,8,2,-6,-3,7,-4,-5,-6,-5,-8,6,6,10,-8,5,-1,-3,8,3,-8,5,9,-10,2,-5,-6,10,-8,-5,-3,10,-3,6,4,3,10,-3,7,-5,9,-3,2,8,6,-6,4,-2,1,-8,-9,-7,10,-7,5,10,-1,-10,-8,3,-10,2,5,10,-4,-10,-3,2,-9,4,1,8,9,-7,6,1,-10,-9,9,-2,-2,-5,-1,10,-8,-4,8,-2,-1,4,-10,-3,-7,5,6,6,10,-2,-10,1,-7,-8,-8,-4,9,6,2,-8,-4,3,-10,7,-4,-9,3,4,-4,7,-3,10,-10,3,-8,2,-6,3,8,4,-8,6,-4,1,3,1,-2,9,-9,-5,3,-10,-4,3,-2,-2,1,-4,-10,-4,-5,-10,5,-9,2,-3,3,2,-8,-9,-3,3,-1,-10,1,6], dtype = "int32")#candidate|2800|(195,)|const|int32
var_2801 = relay.var("var_2801", dtype = "uint8", shape = (390,))#candidate|2801|(390,)|var|uint8
call_2797 = relay.TupleGetItem(func_1505_call(relay.reshape(const_2798.astype('float32'), []), relay.reshape(const_2799.astype('float32'), [5, 165]), relay.reshape(const_2800.astype('int32'), [195,]), relay.reshape(var_2801.astype('uint8'), [5, 78]), ), 3)
call_2802 = relay.TupleGetItem(func_1510_call(relay.reshape(const_2798.astype('float32'), []), relay.reshape(const_2799.astype('float32'), [5, 165]), relay.reshape(const_2800.astype('int32'), [195,]), relay.reshape(var_2801.astype('uint8'), [5, 78]), ), 3)
output = relay.Tuple([call_2782,call_2797,const_2798,const_2799,const_2800,var_2801,])
output2 = relay.Tuple([call_2783,call_2802,const_2798,const_2799,const_2800,var_2801,])
func_2803 = relay.Function([var_2801,], output)
mod['func_2803'] = func_2803
mod = relay.transform.InferType()(mod)
var_2804 = relay.var("var_2804", dtype = "uint8", shape = (390,))#candidate|2804|(390,)|var|uint8
output = func_2803(var_2804)
func_2805 = relay.Function([var_2804], output)
mutated_mod['func_2805'] = func_2805
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2780_call = mod.get_global_var('func_2780')
func_2781_call = mutated_mod.get_global_var('func_2781')
call_2816 = relay.TupleGetItem(func_2780_call(), 0)
call_2817 = relay.TupleGetItem(func_2781_call(), 0)
func_723_call = mod.get_global_var('func_723')
func_726_call = mutated_mod.get_global_var('func_726')
var_2835 = relay.var("var_2835", dtype = "int32", shape = (195,))#candidate|2835|(195,)|var|int32
call_2834 = relay.TupleGetItem(func_723_call(relay.reshape(var_2835.astype('int32'), [195,]), relay.reshape(var_2835.astype('int32'), [195,]), ), 2)
call_2836 = relay.TupleGetItem(func_726_call(relay.reshape(var_2835.astype('int32'), [195,]), relay.reshape(var_2835.astype('int32'), [195,]), ), 2)
func_1505_call = mod.get_global_var('func_1505')
func_1510_call = mutated_mod.get_global_var('func_1510')
const_2840 = relay.const(0.785548, dtype = "float32")#candidate|2840|()|const|float32
const_2841 = relay.const([[-5.695793],[4.112714],[3.905646],[4.188385],[1.748994],[-1.079166],[-8.466593],[1.454390],[-0.061868],[8.087342],[0.829494],[-8.958981],[-1.287163],[-1.746115],[2.235609],[-0.478573],[-8.061754],[-2.163731],[-1.435069],[-2.246850],[-9.776327],[3.643920],[0.348466],[8.047254],[-3.756680],[7.194311],[7.939578],[-7.740950],[6.133479],[-5.457394],[5.148819],[-0.710159],[-9.354684],[5.662583],[0.932021],[1.255960],[-5.694387],[-3.535805],[4.241873],[0.732966],[-6.143275],[4.144902],[-7.678556],[2.954753],[-6.853792],[-5.701603],[5.958391],[1.313285],[3.258728],[-5.725931],[7.611027],[-7.788095],[-2.652625],[3.908635],[-7.440865],[8.128519],[4.865315],[1.352734],[-2.852913],[1.408465],[-3.724023],[-7.197556],[7.401851],[-1.968285],[-3.350418],[1.577136],[-4.442429],[0.064014],[-7.856704],[-4.008300],[1.711566],[-0.498072],[-3.478215],[-9.329808],[-5.321448],[4.342559],[-2.018311],[-9.589492],[-7.622254],[-0.349133],[5.878654],[-0.616195],[-1.630904],[5.206805],[-3.799937],[6.299473],[0.304873],[2.733999],[6.199235],[7.856778],[9.510778],[3.858874],[-8.072718],[8.384818],[-3.134377],[-6.553762],[5.786063],[7.982289],[-9.806048],[8.151306],[-5.475479],[5.912524],[-3.280107],[1.524253],[-1.148179],[2.626351],[6.681264],[0.103221],[1.034466],[-3.811899],[1.917353],[2.126117],[0.086856],[-2.805975],[5.763220],[8.343071],[-3.822182],[-5.881074],[2.755912],[4.254789],[-6.179454],[2.075654],[9.933569],[4.943242],[-9.341842],[-0.991803],[-0.237444],[-0.138144],[-4.419289],[-2.252802],[-8.599102],[8.201216],[-7.384754],[6.633013],[0.735290],[1.908725],[-6.106832],[2.870098],[-1.403695],[-0.435879],[0.664040],[-5.140498],[-8.484308],[4.365590],[7.283429],[4.757144],[2.508831],[-2.194448],[-2.433395],[1.099812],[-3.998069],[5.352296],[-5.299704],[-7.424928],[5.301859],[2.360807],[4.517483],[4.126189],[-6.851863],[-8.971468],[-2.231432],[-6.715731],[-5.977215],[1.591807],[-7.391913],[-2.046568],[4.388985],[1.384537],[8.761289],[-1.345345],[-7.466612],[8.931847],[2.492902],[-7.474083],[4.907533],[9.934464],[-5.877276],[-5.830155],[4.144264],[2.102648],[-0.257069],[-6.251712],[6.970336],[0.369911],[-2.356663],[8.133426],[4.308343],[-8.529010],[9.292305],[6.795132],[-0.051027],[-5.646137],[-4.525329],[8.212053],[-4.219456],[6.212790],[8.423681],[4.878195],[-0.196036],[0.324895],[-4.990225],[1.113687],[1.721640],[7.372088],[-6.765871],[3.966834],[3.532647],[7.848563],[-3.430194],[8.896493],[7.168123],[-7.125368],[8.240428],[1.067088],[-8.000663],[-5.167975],[-8.200175],[6.307801],[6.571812],[-8.469992],[7.832703],[-6.148056],[-9.034638],[-0.181384],[4.117019],[6.310393],[-4.031121],[2.153808],[8.272519],[2.650826],[7.197534],[9.743761],[-1.623941],[0.942829],[3.983982],[1.161244],[8.606639],[2.398879],[-3.683053],[8.080877],[-8.194073],[-7.154242],[-9.326596],[-6.117525],[0.382030],[9.665055],[4.351980],[-2.487006],[6.360644],[1.355875],[2.064713],[0.852773],[6.764502],[-4.548569],[-6.073689],[4.268134],[9.068476],[-3.675857],[3.702927],[7.393187],[-3.590710],[5.497637],[6.869514],[6.933204],[9.740892],[7.897532],[-1.189944],[6.936537],[-9.537755],[2.836921],[5.225155],[8.021075],[-6.198161],[-5.697756],[-4.366564],[-8.791227],[4.170962],[-9.675810],[8.263539],[5.395465],[-6.136403],[-7.065139],[-9.191161],[-2.538427],[8.689274],[3.560222],[-2.806008],[3.393548],[-6.745514],[-7.460853],[-9.792619],[-0.662675],[-9.318796],[-6.287652],[-1.356071],[-0.530237],[8.037235],[0.548990],[1.146833],[-5.491780],[3.606455],[4.578462],[-6.748156],[1.254639],[6.983389],[4.567005],[-5.498402],[0.554046],[-9.631808],[9.374869],[1.606199],[7.166718],[-2.202322],[-2.662388],[7.823404],[-0.451750],[4.264807],[-7.346390],[4.265523],[-2.155318],[-2.427439],[-1.664989],[9.675923],[4.035614],[0.615041],[9.307502],[1.971210],[3.863501],[9.431079],[8.254196],[-9.461237],[-9.203018],[5.644151],[8.448332],[-7.976341],[1.480136],[3.753299],[6.124921],[2.873782],[-0.051507],[9.134129],[-0.327043],[6.394329],[-0.024378],[8.366828],[5.259063],[-3.807737],[9.943181],[-7.082030],[-2.848799],[9.295943],[2.922687],[0.076082],[9.709940],[-7.076971],[6.518900],[8.217325],[-9.186157],[-9.931182],[-4.342224],[-3.312588],[2.837028],[3.542164],[-8.293510],[-8.521942],[-2.095876],[1.251341],[-6.232402],[-3.909103],[6.770546],[-3.653475],[3.031816],[-4.740386],[-0.062913],[-0.846839],[0.535266],[-3.878052],[0.043285],[3.431921],[7.303545],[-0.394643],[1.869387],[-2.109132],[-2.640536],[-6.091781],[5.186519],[7.759475],[-0.232094],[-5.212333],[-1.657754],[0.372023],[5.859982],[-3.812366],[5.912324],[-6.653223],[8.138066],[-1.590532],[-4.200803],[8.426728],[-4.392386],[1.746599],[-9.409395],[-3.495059],[-0.645566],[8.176751],[9.122595],[-4.778387],[-8.703898],[-8.975636],[7.267924],[-6.470511],[8.339120],[6.110804],[7.027652],[0.466580],[-6.079552],[2.026611],[9.808945],[-6.853752],[-4.612639],[-4.645682],[-1.712596],[-1.784811],[2.597063],[2.966467],[-1.002860],[-8.484218],[-9.419667],[5.107300],[-2.493704],[5.420464],[0.823292],[0.324056],[-6.477706],[3.384517],[9.502986],[3.403581],[-7.608907],[-1.601646],[-6.821324],[-4.975653],[4.651371],[-7.818232],[5.316877],[-5.686585],[-3.974542],[-2.956742],[-7.430444],[-7.603899],[6.093872],[-0.004598],[1.893391],[2.616944],[3.464667],[-0.287199],[6.934460],[-7.743440],[7.878455],[-1.790772],[9.433611],[-7.746356],[6.439107],[8.923957],[-4.363088],[-0.902456],[3.925747],[-0.756536],[-6.956957],[4.550925],[8.383427],[5.530517],[-6.894509],[9.971496],[4.148181],[-7.472580],[-6.057715],[-2.507806],[-8.637509],[-2.001715],[-4.690729],[-5.231804],[5.644121],[-2.285679],[-7.845029],[4.099014],[9.302520],[-4.588630],[1.908516],[7.405000],[-1.083362],[3.549452],[-4.738412],[-3.105385],[2.823266],[7.026834],[9.082794],[-4.269586],[-8.582592],[8.411177],[-2.788101],[-5.222016],[4.981512],[6.797748],[7.420011],[4.225833],[5.299980],[-0.820402],[5.641299],[-5.380172],[6.268091],[-2.321915],[8.914690],[4.888675],[8.884191],[6.018514],[-0.523966],[-7.232175],[-9.381247],[-3.710264],[-4.537531],[6.804754],[-3.256450],[-7.565804],[-6.021986],[-9.042382],[-1.321897],[4.330124],[8.397387],[-1.523630],[7.176367],[-0.123238],[2.980996],[2.632027],[6.811289],[5.980660],[-6.253082],[8.943226],[7.130519],[-3.093612],[-6.254885],[1.288641],[0.594020],[-9.838283],[-4.334629],[9.169005],[-6.509160],[7.459189],[-1.246863],[-3.484287],[-9.074664],[-3.245027],[-8.552857],[2.222280],[6.282757],[-8.646373],[-2.324812],[-8.533833],[-1.307056],[3.151251],[2.222090],[-3.539635],[-3.724387],[-8.053272],[-6.754865],[-9.061011],[-0.068295],[5.802232],[-0.010436],[-0.688933],[-6.369450],[1.873775],[4.339377],[-5.457247],[2.818539],[-6.579971],[4.291753],[-1.887797],[-2.846615],[-4.132399],[1.891250],[3.263327],[4.889231],[7.802170],[2.218689],[7.646686],[-7.122208],[-9.022362],[8.495528],[5.585168],[-2.062848],[1.593762],[-1.013174],[-9.004668],[-8.122405],[0.674146],[6.222768],[-9.826792],[-7.973383],[2.149481],[2.988841],[5.300157],[1.776874],[7.382967],[3.174681],[2.928908],[-3.431950],[2.295132],[8.608505],[2.576915],[-1.229499],[8.647565],[5.899662],[5.499314],[6.676531],[5.531637],[5.939838],[-8.131437],[9.503816],[2.944632],[-0.789079],[-5.770350],[-1.865163],[6.288150],[8.455059],[9.604155],[-9.325834],[-5.689161],[-8.854979],[4.434526],[-8.652462],[8.361050],[8.438524],[-2.392820],[4.084300],[4.629168],[9.282699],[4.013272],[9.556960],[7.869924],[0.946088],[2.040541],[3.777481],[-2.046009],[0.238510],[-4.376509],[-7.294416],[3.219859],[5.476318],[-1.101949],[-3.370685],[0.715454],[-2.911364],[3.478198],[2.595348],[-8.146226],[1.046261],[-9.648399],[3.491024],[5.509110],[-8.826503],[-7.421301],[2.747396],[0.419141],[-8.243620],[7.956024],[5.563077],[-8.740141],[1.700643],[-9.575259],[-9.421580],[-5.117938],[-6.181928],[-1.361054],[3.611551],[-0.647445],[3.462897],[-7.007946],[-7.594344],[-7.117275],[-9.666602],[1.870508],[-0.601663],[9.293570],[6.014936],[-1.765028],[-6.622187],[-9.178676],[-9.980530],[4.810749],[-3.487238],[9.879547],[-4.743739],[-9.688147],[7.796601],[1.477880],[-3.239353],[-6.290894],[-4.152190],[1.278813],[1.061238],[0.066074],[-7.523216],[-2.121114],[1.251112],[-7.719996],[3.366089],[9.457496],[5.797427],[-7.636562],[-0.060993],[-1.109932],[9.604126],[8.733718],[-0.994203],[5.595438],[3.318169],[-6.281926],[-1.097389],[-2.135688],[-5.597435],[4.983832],[-0.110423],[5.406791],[-2.601838],[8.596352],[-2.672679],[-0.105843],[-6.697488],[2.150641],[-4.549522],[-8.749265],[-0.942302],[3.730640],[5.687353],[-3.211771],[-7.547025],[7.388828],[-0.420779],[-3.285638],[-1.911033],[-9.925051],[-4.577403],[-2.096711],[-7.709605],[3.099068],[8.286125],[-5.822391],[-8.054867],[-2.980333],[9.432758],[1.127673],[5.633346],[7.183024],[-8.349854],[-8.766403],[6.794321],[3.908283],[5.020191],[-6.255568],[9.055518],[-9.134229],[9.495055],[-1.524708],[-2.655681],[9.192441],[4.150817],[6.895021],[2.326700],[7.327884],[9.375969],[-2.549541],[-0.713634],[-5.992051],[-6.763072],[8.429985],[-5.536444],[-6.903902],[8.565118],[-2.117471],[3.576530],[2.040862],[-2.509600],[7.417149],[4.251349],[4.174467],[7.809505],[3.755071],[4.871778],[4.990225],[-9.420615],[-8.199175],[5.443637],[-6.708459],[4.622775],[-5.213448],[-6.886432],[-0.290530],[1.821883],[-3.548094],[-0.878633],[5.672891],[-3.166681],[9.119355],[-3.040824],[7.344101],[0.646456],[6.700504],[-0.796975],[3.560560],[-1.420229],[-3.008776],[-7.356604],[-9.183436],[6.208815],[-2.352302],[-0.976552],[5.911031],[5.938249],[4.972508],[8.268780],[-6.930073],[-3.644221],[5.614949],[-9.466810],[-9.963026]], dtype = "float32")#candidate|2841|(825, 1)|const|float32
const_2842 = relay.const([7,4,-4,-6,-7,9,-2,8,-8,-2,-8,1,3,8,3,5,1,-3,-8,-1,2,9,-6,-1,-9,-5,6,-1,-4,-2,2,-9,9,-5,1,-2,-7,8,-9,-8,-1,-5,9,-4,5,-9,7,8,-10,-3,-9,5,-7,7,-9,4,10,-7,-5,3,8,7,-10,1,5,2,-10,-10,-7,3,-6,5,8,6,-2,-3,10,4,-4,3,-1,-5,-1,8,-4,5,-9,5,-2,-3,7,-5,-8,1,5,3,-7,7,-3,-8,-7,6,-3,5,9,10,-6,7,5,5,-9,6,-5,6,9,7,-4,3,-4,-3,-8,3,9,5,-5,5,-7,2,7,3,1,-1,-5,-4,-7,-3,1,9,5,5,-4,-6,3,-6,5,6,1,10,-6,-4,1,-7,5,-2,10,10,10,-5,-3,5,10,3,1,-7,10,-9,3,5,2,8,-7,-5,4,9,-3,-5,-6,-6,4,3,9,6,9,-9,9,2,6,2,-7,9,-5,-5,-5,-9,6,-4,5,-8,3,5,5,-7,-3,2,10,-2,-6,-8,-9,1,-1,2,-8,10,6,-3,-3,3,-9,-7,-6,6,9,-4,-10,-4,1,7,-6,1,2,-4,-4,2,2,4,2,10,3,10,9,4,-9,1,10,7,6,9,-8,7,2,-10,1,-4,3,8,7,4,-5,-1,-9,-8,-2,6,8,2,5,4,1,10,1,8,10,-4,-8,-1,-5,-1,8,9,-3,7,10,-3,9,-6,9,-6,5,7,7,8,1,-1,7,6,-8,7,4,2,3,-2,10,-5,-10,-6,-2,-10,-4,-1,-10,2,-2,9,-10,9,-7,-10,-1,-1,7,9,-2,2,10,8,10,10,-10,8,-10,-5,-8,-3,10,-1,3,-6,-10,10,2,2,9,-4,10,9,6,4,-9,-2,-3,5,4,-1,-10,4,1,3,-5,9,6,-3,1,6,-8,-8,3,7,7,-2,8,-8,-10,-9,8,2,5,6,-5,-6,3,4,-1,5,-8,4,3,-7,3,-9], dtype = "uint8")#candidate|2842|(390,)|const|uint8
call_2839 = relay.TupleGetItem(func_1505_call(relay.reshape(const_2840.astype('float32'), []), relay.reshape(const_2841.astype('float32'), [5, 165]), relay.reshape(var_2835.astype('int32'), [195,]), relay.reshape(const_2842.astype('uint8'), [5, 78]), ), 5)
call_2843 = relay.TupleGetItem(func_1510_call(relay.reshape(const_2840.astype('float32'), []), relay.reshape(const_2841.astype('float32'), [5, 165]), relay.reshape(var_2835.astype('int32'), [195,]), relay.reshape(const_2842.astype('uint8'), [5, 78]), ), 5)
output = relay.Tuple([call_2816,call_2834,var_2835,call_2839,const_2840,const_2841,const_2842,])
output2 = relay.Tuple([call_2817,call_2836,var_2835,call_2843,const_2840,const_2841,const_2842,])
func_2846 = relay.Function([var_2835,], output)
mod['func_2846'] = func_2846
mod = relay.transform.InferType()(mod)
mutated_mod['func_2846'] = func_2846
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2847 = relay.var("var_2847", dtype = "int32", shape = (195,))#candidate|2847|(195,)|var|int32
func_2846_call = mutated_mod.get_global_var('func_2846')
call_2848 = func_2846_call(var_2847)
output = call_2848
func_2849 = relay.Function([var_2847], output)
mutated_mod['func_2849'] = func_2849
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2926 = relay.var("var_2926", dtype = "float64", shape = (10, 16, 11))#candidate|2926|(10, 16, 11)|var|float64
uop_2927 = relay.tan(var_2926.astype('float64')) # shape=(10, 16, 11)
func_2846_call = mod.get_global_var('func_2846')
func_2849_call = mutated_mod.get_global_var('func_2849')
var_2935 = relay.var("var_2935", dtype = "int32", shape = (195,))#candidate|2935|(195,)|var|int32
call_2934 = relay.TupleGetItem(func_2846_call(relay.reshape(var_2935.astype('int32'), [195,])), 6)
call_2936 = relay.TupleGetItem(func_2849_call(relay.reshape(var_2935.astype('int32'), [195,])), 6)
output = relay.Tuple([uop_2927,call_2934,var_2935,])
output2 = relay.Tuple([uop_2927,call_2936,var_2935,])
func_2941 = relay.Function([var_2926,var_2935,], output)
mod['func_2941'] = func_2941
mod = relay.transform.InferType()(mod)
mutated_mod['func_2941'] = func_2941
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2941_call = mutated_mod.get_global_var('func_2941')
var_2943 = relay.var("var_2943", dtype = "float64", shape = (10, 16, 11))#candidate|2943|(10, 16, 11)|var|float64
var_2944 = relay.var("var_2944", dtype = "int32", shape = (195,))#candidate|2944|(195,)|var|int32
call_2942 = func_2941_call(var_2943,var_2944,)
output = call_2942
func_2945 = relay.Function([var_2943,var_2944,], output)
mutated_mod['func_2945'] = func_2945
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2725_call = mod.get_global_var('func_2725')
func_2727_call = mutated_mod.get_global_var('func_2727')
call_2992 = relay.TupleGetItem(func_2725_call(), 0)
call_2993 = relay.TupleGetItem(func_2727_call(), 0)
output = relay.Tuple([call_2992,])
output2 = relay.Tuple([call_2993,])
func_2998 = relay.Function([], output)
mod['func_2998'] = func_2998
mod = relay.transform.InferType()(mod)
mutated_mod['func_2998'] = func_2998
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2998_call = mutated_mod.get_global_var('func_2998')
call_2999 = func_2998_call()
output = call_2999
func_3000 = relay.Function([], output)
mutated_mod['func_3000'] = func_3000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2261_call = mod.get_global_var('func_2261')
func_2262_call = mutated_mod.get_global_var('func_2262')
call_3072 = func_2261_call()
call_3073 = func_2261_call()
func_1817_call = mod.get_global_var('func_1817')
func_1821_call = mutated_mod.get_global_var('func_1821')
const_3079 = relay.const([-6,-10,4,4,-4,-9,7,-4,6,-5,-7,-10,9,-3,4,-10,6,-9,10,4,-4,-4,6,9,8,-10,5,3,-4,4,2,-8,6,9,-3,-1,-9,-7,-5,-9,-8,-1,9,-6,10,-10,-6,1,8,-9,4,-7,4,-9,8,-5,7,9,10,8,5,-2,-8,4,-4,8,-2,-2,9,-7,-9,3,-10,1,-10,-10,7,-8,7,-3,-5,-3,-6,-3,-6,1,-7,-3,-9,-7,-5,3,-10,-9,3,10,-4,4,7,4], dtype = "uint16")#candidate|3079|(100,)|const|uint16
call_3078 = func_1817_call(relay.reshape(const_3079.astype('uint16'), [10, 5, 2]), relay.reshape(const_3079.astype('uint16'), [10, 5, 2]), )
call_3080 = func_1817_call(relay.reshape(const_3079.astype('uint16'), [10, 5, 2]), relay.reshape(const_3079.astype('uint16'), [10, 5, 2]), )
output = relay.Tuple([call_3072,call_3078,const_3079,])
output2 = relay.Tuple([call_3073,call_3080,const_3079,])
func_3083 = relay.Function([], output)
mod['func_3083'] = func_3083
mod = relay.transform.InferType()(mod)
output = func_3083()
func_3084 = relay.Function([], output)
mutated_mod['func_3084'] = func_3084
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2998_call = mod.get_global_var('func_2998')
func_3000_call = mutated_mod.get_global_var('func_3000')
call_3130 = relay.TupleGetItem(func_2998_call(), 0)
call_3131 = relay.TupleGetItem(func_3000_call(), 0)
output = call_3130
output2 = call_3131
func_3132 = relay.Function([], output)
mod['func_3132'] = func_3132
mod = relay.transform.InferType()(mod)
output = func_3132()
func_3133 = relay.Function([], output)
mutated_mod['func_3133'] = func_3133
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2725_call = mod.get_global_var('func_2725')
func_2727_call = mutated_mod.get_global_var('func_2727')
call_3164 = relay.TupleGetItem(func_2725_call(), 0)
call_3165 = relay.TupleGetItem(func_2727_call(), 0)
output = call_3164
output2 = call_3165
func_3191 = relay.Function([], output)
mod['func_3191'] = func_3191
mod = relay.transform.InferType()(mod)
output = func_3191()
func_3192 = relay.Function([], output)
mutated_mod['func_3192'] = func_3192
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3191_call = mod.get_global_var('func_3191')
func_3192_call = mutated_mod.get_global_var('func_3192')
call_3212 = func_3191_call()
call_3213 = func_3191_call()
var_3218 = relay.var("var_3218", dtype = "float64", shape = (16, 112))#candidate|3218|(16, 112)|var|float64
bop_3219 = relay.subtract(call_3212.astype('int8'), relay.reshape(var_3218.astype('int8'), relay.shape_of(call_3212))) # shape=(16, 112)
bop_3222 = relay.subtract(call_3213.astype('int8'), relay.reshape(var_3218.astype('int8'), relay.shape_of(call_3213))) # shape=(16, 112)
uop_3230 = relay.cos(call_3212.astype('float32')) # shape=(16, 112)
uop_3232 = relay.cos(call_3213.astype('float32')) # shape=(16, 112)
func_2941_call = mod.get_global_var('func_2941')
func_2945_call = mutated_mod.get_global_var('func_2945')
const_3246 = relay.const([-9.147599,3.317846,6.056354,-9.112146,6.914759,-5.403898,-3.805542,3.770027,-2.793907,5.528342,9.963470,-3.008760,-4.862925,9.071363,8.669668,5.453600,-9.609891,-4.625822,-3.954460,2.236713,-7.190733,-2.742357,1.184751,-7.713914,-4.064148,6.482071,7.501358,-5.687345,-0.263855,-6.982354,-0.248665,3.737583,-1.880978,8.076636,-5.656824,8.703490,-7.022106,3.837397,5.246415,9.229043,1.396383,-2.162211,-1.669283,6.932875,-2.625144,6.689497,3.047550,7.394497,-6.150931,-6.895569,-1.915950,-3.005628,-4.523980,-5.944249,2.776205,2.081367,-7.873241,-0.634975,7.504342,9.482023,5.852491,-6.212619,9.215275,-7.920095,-5.833028,-3.910764,-7.946249,0.219946,-5.976800,8.245327,-6.892471,8.399117,-1.297624,2.370997,5.340442,5.377538,0.807658,4.651067,2.388836,3.588967,1.640078,-5.452415,-5.793259,-6.027427,-5.273765,-3.642359,-4.538849,2.008436,0.720548,-2.427906,-9.142847,1.103508,-8.422250,-0.704834,1.274178,8.428714,-9.134804,-9.828093,-9.986696,0.749882,-7.625229,9.099945,9.551772,9.295551,1.644176,4.166288,2.619929,-8.320248,-2.437048,-5.775578,-1.607371,-5.313328,9.518693,3.433729,0.966531,-3.829105,-7.427488,-1.876475,6.790926,3.260538,-8.321632,-3.497493,4.706096,1.819169,7.498729,0.782062,1.644028,-8.927224,6.837244,-3.421742,9.975890,-5.127194,-0.854917,7.373884,6.699046,3.126714,-0.086569,9.705398,-2.473337,7.865502,-9.444584,8.278458,-5.691239,3.841494,9.203847,-6.862243,-4.821952,-1.782882,1.257307,-2.293229,-3.753713,-1.565268,8.049723,8.789891,-4.686448,-1.077399,3.584099,7.554956,6.250815,6.731359,-7.788837,5.095931,0.862074,-6.638190,-3.688135,7.292820,-3.180503,6.952401,1.998690,8.906004,2.655774,1.865949,1.309378,-9.669737,5.456044,0.189777,2.679246,-4.245690,-3.259797,0.519501,-0.346270,-3.404936,1.899071,-3.934698,-3.911584,-2.517510,6.034949,-6.805266,-0.150052,-1.907975,2.497943,-9.711864,-1.291750,3.004571,7.129546,2.207365,5.898799,-3.728982,3.509563,0.344610,-3.724599,0.046354,4.236215,-5.025975,-9.403054,2.762660,-9.731178,-8.031218,8.693804,4.543038,9.819915,-6.517025,-9.386793,0.762295,7.801141,6.618101,-1.535198,-2.562139,2.094178,-0.250751,7.916337,5.644594,5.758974,-0.737554,4.717358,3.952485,4.117425,1.364379,-4.483410,0.098406,5.399362,0.866258,-2.960992,-6.913066,-2.156370,7.688288,-3.615232,2.082495,4.902521,-1.153457,9.769272,5.357726,1.736884,6.682710,1.842862,-0.178482,4.588060,-1.339553,4.343206,1.912981,1.954098,2.958732,7.552612,0.059551,-8.857562,1.361788,8.975180,-0.318984,0.711125,-5.922185,9.589103,-4.843350,-3.384813,-7.011362,8.926881,6.646373,-4.917283,-0.591026,5.632055,-2.501815,-5.386742,-3.574271,-1.891676,-2.106897,-8.778524,-7.364720,8.634284,-0.416527,-5.793910,2.167352,4.695207,-8.656654,7.552046,8.932175,6.697463,7.690642,-7.616149,6.721490,-5.271201,-8.559086,9.334975,-1.378006,2.729018,-2.003661,4.954087,7.064529,9.526824,1.728979,1.413149,2.428463,-2.240063,-7.771244,-5.885309,-5.486965,8.171873,8.660963,7.459679,-5.212945,4.568053,-9.520219,-9.174725,1.570255,-8.289601,6.352049,6.610750,-5.254681,2.911256,-5.032212,-3.382781,-7.783066,-1.855397,-9.614456,-8.673553,-9.923476,-8.502516,-2.798239,5.755798,-5.708279,-2.341608,9.190381,-0.270463,-3.490154,-2.224483,-1.813594,6.209592,-9.032644,-5.866503,6.638322,9.170325,-6.474945,5.746493,5.087798,-9.070866,-5.723597,2.714603,1.645420,3.335398,0.221731,-4.851866,-1.665727,-5.242308,8.711505,-0.892887,3.670204,3.053259,3.240941,5.920553,6.642834,-8.643587,-5.799573,0.776054,2.033188,8.702742,-8.253739,-9.596223,1.676621,6.922532,-7.744450,-7.412394,-3.068847,5.576865,-2.779397,-9.349284,5.191418,1.335702,-3.616183,7.824398,8.922006,-3.465863,-9.225639,-1.544344,4.921383,4.526384,9.116232,-9.090098,1.412460,4.379816,-1.614237,3.509949,-9.359000,4.647252,3.993432,2.325141,-4.344530,-4.654207,-2.429471,-2.617388,-1.717654,8.615164,2.558117,5.915636,-3.609314,-5.268160,-9.714137,-3.695142,-8.364729,3.749564,-9.394439,-2.135006,-2.880973,5.893688,-3.711857,7.723451,3.772895,-4.015959,-7.142408,5.827974,2.807101,7.334220,1.077020,-7.737068,1.969386,7.360687,-6.012916,-1.869779,-5.345910,-7.113910,-7.525164,-2.272564,-6.967606,-0.541403,-2.643011,4.465700,-7.976375,-2.951431,-1.423844,2.265773,-6.623550,8.823602,9.602683,-8.107554,-6.168143,-6.500670,-0.491727,-6.432628,2.526651,1.004497,0.676370,6.084865,6.371960,6.224650,7.911362,0.482794,-2.256021,-6.579510,5.730900,1.446061,2.651975,-4.988195,-9.966566,9.237936,0.212712,-2.442148,1.850145,-4.831749,4.578350,2.809456,3.349269,-7.614229,6.907773,7.169373,7.191346,-1.155244,-7.494543,-9.949939,-2.119130,-6.864444,-8.959751,-4.816549,8.040272,-6.026737,-9.793316,1.549074,3.026289,7.437625,-1.159670,9.500481,-5.964487,0.831897,-3.147091,1.386081,0.943809,-2.286474,-7.282090,7.118724,-0.944485,-1.132404,3.594381,-8.861354,-9.947048,-6.160996,-8.506989,-2.276238,8.973950,4.768860,-5.870921,-9.471416,-8.079620,8.790455,4.066306,-6.873096,6.030660,9.812273,-0.255732,6.037768,4.332337,-8.539312,1.437237,-0.728614,-4.673771,-2.623292,4.620198,-8.240720,5.382351,-7.926343,-5.679475,-6.151341,-6.444081,0.184032,8.453277,6.656323,-5.751739,-2.674154,-9.179458,-6.349068,-5.334750,1.283801,-1.250918,-7.056497,-6.503653,-9.028516,4.625396,-8.457575,-7.137665,1.886788,-0.261540,9.363481,-1.930324,-1.589020,-7.975364,0.351731,7.797790,-9.674916,-4.197578,9.104011,-1.022626,0.447174,9.951940,0.713108,3.921506,5.925904,0.689031,-1.607412,0.990053,-7.645739,-9.643084,-1.441181,2.896609,1.167302,4.276381,-8.579762,-3.066674,-0.012978,5.876267,-8.672361,-0.344922,-5.409168,-7.013171,9.215630,1.715664,4.183656,4.299872,8.651158,3.338785,-4.627014,9.462544,-5.103199,-5.323920,4.429728,-2.483663,1.574608,-0.618950,-9.445432,-8.335661,-5.304378,4.730314,3.162382,2.167284,9.278402,5.442589,-8.639299,-1.068385,3.957387,2.018785,-3.810126,-6.437497,-2.164199,7.553497,4.355903,-2.257255,0.804770,5.449304,-4.860116,2.213933,7.970658,5.843413,-9.931192,-1.679814,-9.697337,-1.210885,0.122757,-7.554033,4.092023,-9.832840,-2.121201,-0.086365,0.306960,-1.026043,9.909626,9.660656,9.527840,-2.180004,0.386816,3.984908,-9.553750,-3.191862,-1.726895,4.335449,2.918381,-0.264687,-7.592005,7.671901,-3.880867,4.435583,-3.447814,8.764518,2.930341,0.438810,-4.112564,-0.710372,-2.494126,4.247433,-6.131824,1.305757,-5.880443,3.165661,-8.798428,-8.275288,-8.616592,-1.515961,2.241464,-5.836425,2.483742,9.528971,-0.063383,-4.257403,-4.113214,6.501740,-9.680907,-5.381169,-8.733058,8.970965,1.630354,-1.780506,5.051948,-0.578707,-3.639651,3.185382,-1.059908,3.230157,6.345424,6.296620,7.522150,-1.845461,8.458154,7.608020,-5.787928,3.177487,-6.284492,6.188090,-7.850828,-0.840036,8.925758,7.150983,-4.993343,-6.666368,-4.435580,-4.215497,5.848376,-1.743892,3.832146,-4.242355,-7.752449,3.064714,3.678596,7.584320,-8.969808,-5.328355,4.487130,0.989954,4.894204,8.122273,-9.365938,3.970755,-5.176010,-6.702754,9.034268,6.587080,-6.784239,7.233093,-1.593560,-7.920860,-0.761977,-7.112541,-5.919386,-5.214808,3.503610,6.674987,0.918110,8.325248,-6.162892,7.823631,2.256405,-8.055807,-0.277838,8.945647,-8.990367,5.096990,4.271127,-2.028787,-6.083296,3.720897,6.505990,7.210788,8.466776,-8.175644,-8.681414,-6.673773,1.673010,-1.026112,-5.120007,-1.201419,8.678317,4.655644,1.448856,-5.117224,-2.151024,0.833130,-5.162370,-8.673945,-6.390448,-4.527636,1.402534,-8.235286,1.081262,-8.010543,-8.125775,-7.003064,-9.430935,-7.163247,8.585842,7.394205,-9.105777,2.120231,6.787092,3.060754,5.014410,9.616953,-5.242985,7.558751,-7.606711,4.794693,-1.474258,-5.344446,9.246848,-9.426232,2.060935,9.021451,-8.667628,-2.998678,-6.273520,2.106508,9.527123,-2.362745,-9.457697,6.446819,2.973626,-4.863691,-3.552497,9.848914,7.241206,7.834113,1.951807,7.328905,7.481109,-4.186549,4.928387,1.019716,-0.016824,-5.362044,2.630153,2.268986,-4.150249,-0.155110,-6.467662,-2.841260,0.789851,-1.831064,-2.141927,0.798857,3.321506,-7.215064,9.618546,-9.203137,5.707175,7.120323,-0.757683,-3.109586,-0.005457,-3.369509,-5.808302,-8.993463,-5.904307,-3.160529,-5.455917,-3.324628,0.974386,-2.262394,4.398910,-6.860584,4.884869,6.287882,-8.523643,-7.274224,2.405514,2.959719,-9.838726,7.289809,-3.705248,6.805147,8.050411,1.438620,-5.982785,-4.941919,-5.577858,2.844680,-4.519393,7.078711,-4.112447,3.789376,-4.192431,5.721408,-5.279600,8.787418,-0.186089,-8.101343,2.088596,6.271061,1.782179,5.235297,-8.082212,-9.925005,6.548217,-1.971890,5.255562,7.730467,-9.095577,-4.804545,-8.842173,-1.094465,6.433042,-0.716473,-9.280673,-4.858073,6.054216,6.957781,-6.456589,-9.047934,4.947960,2.109222,-0.958519,5.204864,0.315738,-0.467263,7.083385,6.536056,8.022246,8.115270,9.049389,4.657351,7.957109,-7.443823,-9.866840,-5.289573,7.377011,3.012965,-0.502736,2.941031,-7.576801,5.192819,-1.760701,-1.041710,0.244067,8.419790,-7.685442,0.750123,4.460574,9.027622,6.743123,9.812631,-7.075733,-9.212457,5.434687,-5.673510,5.478303,-5.986039,-1.629087,9.822238,-4.877633,-1.320437,-8.162436,6.671236,-5.443225,8.868917,-8.355416,-5.030409,7.761089,9.816706,-0.126311,2.531653,-6.761417,3.274892,-9.092869,-3.682617,0.143222,6.584048,-2.921636,0.264338,-5.523853,-5.767768,-3.137742,8.911365,-9.793464,-0.001248,-0.986936,-1.678495,7.066930,-1.918093,9.264492,0.140392,2.629528,-3.163582,7.393716,-9.096965,-8.768158,-6.885857,-8.038259,5.212782,-8.314014,6.114811,0.827845,8.056042,-1.756738,-0.936514,-3.369047,-9.535171,3.627065,-5.385595,4.116460,-5.576503,2.132597,-8.067512,-1.323439,-6.374587,8.085223,8.040241,-6.063196,-1.763307,-2.534035,-7.565381,-5.362044,3.743995,8.466909,-0.350875,-2.890314,-9.102742,6.589517,5.685547,-2.083650,-0.820730,-5.738351,-6.325497,6.650831,2.257208,-7.249529,-0.246426,-6.416867,-6.433663,0.306407,-0.917529,7.856570,-1.799109,0.120810,-9.294149,2.436919,-1.595037,-8.877638,-1.818650,3.841875,-1.664699,1.059696,-8.518398,-4.773462,0.137583,2.406041,4.025012,3.052197,2.142170,-8.408692,-5.047425,-1.197416,3.458179,-2.253219,-4.567723,8.802364,0.302703,-7.948269,-4.485778,-4.362614,-2.086218,-6.629767,-9.187735,4.753773,-7.489946,9.946725,-7.695606,1.978979,-7.166698,8.642173,0.979494,0.492571,-1.443718,-6.290109,-9.910879,-6.733939,-1.568066,7.844322,-4.726559,-0.174976,-7.893552,-4.226725,-5.771043,-9.116401,9.255461,5.815598,-6.826368,2.080696,-2.793820,6.176243,-8.059678,-4.426795,-8.156532,9.398375,-7.760202,-7.479628,8.392262,5.641930,-6.960404,-7.883130,-5.423549,6.853684,6.725862,1.108617,-6.124781,-6.989943,-3.038090,-9.927815,-6.823703,-4.603112,1.173273,8.869350,2.366397,-7.616772,-7.025134,1.968353,1.737547,7.710238,1.107218,-6.164452,-6.174197,-8.824432,0.901265,2.971613,-9.271283,7.421397,-9.009597,-0.803223,2.052422,-7.460029,1.841466,-2.394335,-9.651022,0.483761,-6.280927,2.812836,0.625777,-8.246395,-5.848422,-9.746176,2.048111,7.310404,7.762897,9.351251,-3.525403,-3.168570,5.855515,-3.585660,2.942485,0.457424,-1.060808,-3.301920,-1.288442,-6.372225,-1.398455,5.762976,-7.288115,-6.252194,-9.460796,7.969342,2.841283,-2.576397,-2.700952,-4.940812,2.120480,-7.050997,-8.410228,1.737720,0.684866,-0.060727,-9.845302,5.786152,-3.381653,-6.964823,9.137854,3.845572,-5.437464,8.108527,4.938150,-2.171875,7.372106,-5.749025,9.827762,-0.745804,7.149356,-7.975171,-7.789455,6.338086,2.044014,5.830890,7.108763,9.249602,-8.062594,-4.402503,-8.922824,-7.984074,3.213261,-6.297530,-1.659158,2.784239,8.395651,-8.403864,8.751320,-8.889036,0.588568,2.180680,-7.536156,-0.059122,9.060818,-5.262349,0.016548,0.292912,5.178089,1.214824,-8.324785,-7.078929,2.293851,4.959405,-1.493266,5.976747,8.350800,-2.332851,-2.404384,0.886473,6.626003,9.689342,-3.983416,-9.034218,-3.662715,-5.541625,-6.666921,-9.490519,6.755180,0.770850,7.442249,7.260272,2.193247,3.345551,0.134262,-4.254064,-0.723492,4.062256,-2.854630,0.327585,-6.412238,-1.390698,-6.327298,-6.243668,-5.306160,2.416865,-8.471584,9.634167,-4.478671,1.107764,8.083259,-9.242399,-4.762094,-2.322372,3.070532,1.700448,4.122750,7.379824,3.583223,1.289831,3.199288,6.061747,-9.360978,8.472331,6.232242,-8.437588,-7.338391,4.180263,-1.380821,-7.898386,7.883532,6.616903,0.514784,-6.994831,-2.234600,-6.204585,-5.470277,-2.996909,-8.231313,4.386983,-4.730381,-3.995137,-3.358918,0.835218,-1.513596,1.139741,-9.259051,-0.888010,9.073535,-3.483301,4.627399,5.783137,-9.943619,-4.710252,8.536864,0.160550,6.292010,4.606925,2.375157,-0.849931,-9.912934,2.964061,6.892463,-9.496618,-9.892117,-4.089274,5.112328,3.760393,8.365326,5.145888,8.265818,8.506758,-0.172048,-4.105521,3.667282,5.946724,-3.420744,-7.545255,1.639148,-1.583596,0.647797,0.953391,-6.493488,5.954633,-6.210253,0.139615,2.170911,-7.455425,5.746096,8.000690,2.534359,-1.062131,3.297900,0.164406,3.870053,-6.204051,3.844989,5.028241,-2.846990,2.177531,7.762650,-1.649183,6.741981,3.654810,7.339851,-8.358706,9.034455,4.041521,3.112523,4.374544,-7.121101,-8.649451,5.161714,-4.210630,-0.848148,-2.393825,-3.184192,-7.592227,0.434435,-2.007268,-3.669290,-7.747942,9.456463,-1.332217,-8.363623,4.808603,5.917548,-8.878605,1.643403,-1.138276,6.313889,-8.882898,0.155832,0.012293,-6.446719,3.646479,-5.726926,-1.043388,5.324369,7.980823,0.266307,2.328681,-2.751297,5.745046,-8.019449,7.182957,3.646332,2.693833,-2.613634,3.276673,-9.596073,2.109373,-2.956230,-4.171919,-4.795714,-1.091754,-6.103190,-9.894183,0.012158,-5.433912,5.811025,0.614518,2.632458,7.447216,-3.996751,-9.965985,0.702090,8.873064,-0.203229,-5.130132,6.466939,-4.297980,-6.672139,-9.413699,-7.686022,3.579687,-9.125971,-2.331540,3.676259,6.102078,1.398316,-0.262323,8.023595,-9.068356,4.245037,-7.080811,8.696649,-1.250439,5.576978,-7.752949,3.139965,2.840605,-4.889660,-4.231072,0.249440,8.284093,7.113892,-0.862869,-5.189598,-3.725600,6.145192,-7.063565,0.983227,-4.132597,-1.726432,7.465620,-7.371198,5.248893,-4.466977,-2.960857,-8.009503,-5.428053,7.719368,-9.247911,-8.436066,5.250299,-6.191916,-7.760980,-9.820562,-9.570556,8.781111,-0.681846,0.663599,1.366995,3.021597,3.370029,4.137013,-1.689497,-0.372810,-7.680288,8.814471,-0.730909,-6.743377,-9.343160,1.752934,0.240193,-9.588087,-0.533583,3.896630,1.429320,3.394740,-4.363741,3.556138,0.110812,-5.540109,-2.102092,9.707552,5.743732,3.468292,-3.379667,-3.753905,-2.421910,-8.766492,-0.697356,-7.866801,-7.314080,1.913122,-6.630299,8.698051,-2.417662,-0.906367,-3.689341,-0.858948,6.539454,1.478764,-0.051501,7.461325,-8.183166,-7.053987,9.001047,-8.195028,-6.998976,8.751375,-7.537098,4.254409,-3.485317,7.497433,6.485311,-3.083747,-2.502253,3.984805,2.471539,8.044751,-1.432859,8.605162,-9.128895,1.618476,3.466294,4.082886,-2.383353,-4.799690,-5.134033,9.136419,0.044592,-4.882434,6.472000,5.879896,-0.081751,-8.205330,-1.966120,9.178054,9.068666,6.888025,5.496800,0.760319,6.860168,-7.388659,8.867687,-3.151127,8.690513,-3.400404,-9.568733,3.443049,-8.798477,1.616645,2.289414,5.941785,1.022213,3.524964,-1.499269,-3.212545,8.566624,9.172079,-4.927087,9.776761,2.069771,-4.068734,4.643128,-1.416725,9.526853,-3.980043,-1.699462,-3.310299,8.268875,-5.858996,-3.950491,1.081514,3.826390,-3.707973,-1.422715,9.279345,-0.775660,5.682065,-8.076256,9.381970,8.395520,-8.228148,-3.945240,-9.740347,1.308504,4.755519,1.731905,2.788815,3.858523,5.460149,2.610223,6.828886,-0.866116,-3.040723,3.371232,3.881825,7.535297,-3.025445,-2.811605,1.557358,-8.979551,2.536689,-7.535348,-0.506070,-2.576720,7.460127,3.896516,9.416337,-7.649452,-8.738174,-6.457348,-7.052892,5.786743,1.948191,1.943154,4.391750,8.320791,-8.268094,8.714175,3.663788,-9.383799,-2.910913,-8.641932,1.546367,9.406771,-6.126366,9.590871,8.242933,1.639104,-6.665191,-0.916930,-3.763706,-9.088326,0.476801,-7.719085,-9.957820,6.265617,-2.426504,-8.701450,-9.321971,4.552111,9.203420,-5.018665,6.771006,3.651289,-4.014514,-7.478270,6.912528,2.114954,-2.433345,-0.490834,-8.594370,0.948273,9.162478,4.054211,4.930009,-4.616873,7.477048,-4.199635,-6.531290,3.883534,3.978723,-0.918517,-1.793541,2.280586,7.541941,0.470639,9.760095,-2.587160,6.104355,6.672118,-1.873438,1.724246,-6.213229,-5.911943,-2.616603,0.297950,6.412199,-5.426039,-3.856988,5.894381,0.774994,9.338306,4.728337,0.952168,4.307003,-5.631569,-0.343996,-5.029648,5.069155,-4.945513,-5.255488,8.996597,1.096053,6.437303,7.880392,4.456736,-0.342811,1.372919,-5.661466,-6.191663,9.763853,7.051105,-9.177775,-6.226512,-7.125650,5.870887,6.354502,7.448576,9.180827,-9.404817,4.482699,5.611580,-5.852433,1.151147,-1.358110,4.042523,-7.268035,1.024484,-3.469102,-7.024330,-9.880531,9.500303,-7.093647,-9.658242,7.360601,-7.972333,-0.325000,-8.304548,1.440947,0.618118,2.535096,9.563282,5.369993,6.604277,1.008602,2.286304,0.698959,3.590618,4.185350,7.630317,-6.112016,4.785460,-4.389753,3.514160,2.395114,6.260700,6.938436,3.252647,2.334793,-1.489700,-6.292252,3.362303,-9.650343,-9.258183,-1.504570,4.177194,9.442907,-5.206289,-4.475473,1.149125,-5.220981,4.631642,-2.465914,3.993386,2.631529,-1.720657,8.114802,1.446556,-6.785959,5.231575,-1.307138], dtype = "float64")#candidate|3246|(1760,)|const|float64
const_3247 = relay.const([9,9,2,5,1,-3,9,-4,6,-5,2,2,5,2,-4,-5,-4,6,-2,-8,-3,1,2,4,-5,-9,-7,10,8,6,-2,2,7,6,1,2,4,7,-1,3,9,4,1,-10,7,-3,-6,6,5,3,-5,-1,10,-6,8,-6,3,5,-3,5,10,10,-4,-1,10,6,-1,-6,-6,2,4,-3,10,-3,2,5,-5,-9,-1,8,6,-7,-1,-10,7,-1,1,-10,-1,-6,-10,-6,-5,-5,-7,10,-9,2,1,-8,-5,-1,-4,-9,-3,-9,-5,-9,-10,-7,-7,2,-5,5,8,6,4,-2,-8,3,-6,-6,9,-1,8,-8,6,-3,4,-9,-3,6,2,-6,-8,4,5,-9,5,-3,-10,10,-1,-1,2,7,-2,-3,-10,-7,-1,-6,-10,9,5,-10,5,4,-4,-10,4,-2,-2,-1,7,3,-8,2,-4,-5,5,5,-7,3,-4,8,4,-4,-8,-9,4,10,-8,2,-5,10,-2,7,4,1,-7,-5,10,5,4], dtype = "int32")#candidate|3247|(195,)|const|int32
call_3245 = relay.TupleGetItem(func_2941_call(relay.reshape(const_3246.astype('float64'), [10, 16, 11]), relay.reshape(const_3247.astype('int32'), [195,]), ), 0)
call_3248 = relay.TupleGetItem(func_2945_call(relay.reshape(const_3246.astype('float64'), [10, 16, 11]), relay.reshape(const_3247.astype('int32'), [195,]), ), 0)
func_2162_call = mod.get_global_var('func_2162')
func_2166_call = mutated_mod.get_global_var('func_2166')
var_3253 = relay.var("var_3253", dtype = "float32", shape = (1, 512))#candidate|3253|(1, 512)|var|float32
const_3254 = relay.const([[-0.709158,-4.352502,-6.496160,9.426039,1.307420,5.068642,-2.357551,6.786498,9.381545,-8.494415,-4.410775,-4.514342,0.488526,7.954213,2.886804,-5.220524,1.690417,-7.920624,-3.675680,0.489002,6.712446,5.487347,5.623608,5.479803,0.586276,-9.334978,-5.307971,1.110240,8.982599,-3.145357,-7.513363,-8.870234,1.804127,5.311913,3.398473,1.130197,2.075343,-3.286991,-6.533864]], dtype = "float32")#candidate|3254|(1, 39)|const|float32
var_3255 = relay.var("var_3255", dtype = "uint16", shape = (100,))#candidate|3255|(100,)|var|uint16
call_3252 = relay.TupleGetItem(func_2162_call(relay.reshape(var_3253.astype('float32'), [16, 4, 8]), relay.reshape(const_3254.astype('float32'), [13, 3]), relay.reshape(var_3255.astype('uint16'), [25, 4]), ), 1)
call_3256 = relay.TupleGetItem(func_2166_call(relay.reshape(var_3253.astype('float32'), [16, 4, 8]), relay.reshape(const_3254.astype('float32'), [13, 3]), relay.reshape(var_3255.astype('uint16'), [25, 4]), ), 1)
func_1844_call = mod.get_global_var('func_1844')
func_1846_call = mutated_mod.get_global_var('func_1846')
call_3272 = func_1844_call()
call_3273 = func_1844_call()
output = relay.Tuple([bop_3219,uop_3230,call_3245,const_3246,const_3247,call_3252,var_3253,const_3254,var_3255,call_3272,])
output2 = relay.Tuple([bop_3222,uop_3232,call_3248,const_3246,const_3247,call_3256,var_3253,const_3254,var_3255,call_3273,])
func_3290 = relay.Function([var_3218,var_3253,var_3255,], output)
mod['func_3290'] = func_3290
mod = relay.transform.InferType()(mod)
var_3291 = relay.var("var_3291", dtype = "float64", shape = (16, 112))#candidate|3291|(16, 112)|var|float64
var_3292 = relay.var("var_3292", dtype = "float32", shape = (1, 512))#candidate|3292|(1, 512)|var|float32
var_3293 = relay.var("var_3293", dtype = "uint16", shape = (100,))#candidate|3293|(100,)|var|uint16
output = func_3290(var_3291,var_3292,var_3293,)
func_3294 = relay.Function([var_3291,var_3292,var_3293,], output)
mutated_mod['func_3294'] = func_3294
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2598_call = mod.get_global_var('func_2598')
func_2600_call = mutated_mod.get_global_var('func_2600')
call_3309 = func_2598_call()
call_3310 = func_2598_call()
output = relay.Tuple([call_3309,])
output2 = relay.Tuple([call_3310,])
func_3311 = relay.Function([], output)
mod['func_3311'] = func_3311
mod = relay.transform.InferType()(mod)
output = func_3311()
func_3312 = relay.Function([], output)
mutated_mod['func_3312'] = func_3312
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1844_call = mod.get_global_var('func_1844')
func_1846_call = mutated_mod.get_global_var('func_1846')
call_3322 = func_1844_call()
call_3323 = func_1844_call()
output = relay.Tuple([call_3322,])
output2 = relay.Tuple([call_3323,])
func_3328 = relay.Function([], output)
mod['func_3328'] = func_3328
mod = relay.transform.InferType()(mod)
mutated_mod['func_3328'] = func_3328
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3328_call = mutated_mod.get_global_var('func_3328')
call_3329 = func_3328_call()
output = call_3329
func_3330 = relay.Function([], output)
mutated_mod['func_3330'] = func_3330
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2261_call = mod.get_global_var('func_2261')
func_2262_call = mutated_mod.get_global_var('func_2262')
call_3486 = func_2261_call()
call_3487 = func_2261_call()
func_2589_call = mod.get_global_var('func_2589')
func_2594_call = mutated_mod.get_global_var('func_2594')
var_3490 = relay.var("var_3490", dtype = "uint64", shape = (84, 1))#candidate|3490|(84, 1)|var|uint64
var_3491 = relay.var("var_3491", dtype = "uint8", shape = (390,))#candidate|3491|(390,)|var|uint8
const_3492 = relay.const([-10,-6,6,-10,5,-10,-2,-5,-5,-7,-2,-6,-7,10,4,9,-8,-8,5,9,-7,7,9,6,-10,-3,-3,-9,-9,-2,-2,-8,5,7,5,-2,-6,-2,10,-3,10,-3,4,5,-10,-8,-9,-7,2,4,1,-10,4,-5,9,-5,3,5,-1,-3,-9,-5,9,3,-7,1,-3,-4,4,-1,7,-5,5,8,-2,9,3,-10,-8,-6,-9,3,-9,-1,8,7,10,-6,3,3,6,-7,-7,-1,-1,2,-3,4,-1,6], dtype = "uint16")#candidate|3492|(100,)|const|uint16
var_3493 = relay.var("var_3493", dtype = "float32", shape = (825, 1))#candidate|3493|(825, 1)|var|float32
call_3489 = relay.TupleGetItem(func_2589_call(relay.reshape(var_3490.astype('uint64'), [84,]), relay.reshape(var_3491.astype('uint8'), [390,]), relay.reshape(const_3492.astype('uint16'), [10, 5, 2]), relay.reshape(var_3493.astype('float32'), [5, 165]), ), 7)
call_3494 = relay.TupleGetItem(func_2594_call(relay.reshape(var_3490.astype('uint64'), [84,]), relay.reshape(var_3491.astype('uint8'), [390,]), relay.reshape(const_3492.astype('uint16'), [10, 5, 2]), relay.reshape(var_3493.astype('float32'), [5, 165]), ), 7)
uop_3501 = relay.exp(var_3490.astype('float32')) # shape=(84, 1)
output = relay.Tuple([call_3486,call_3489,var_3491,const_3492,var_3493,uop_3501,])
output2 = relay.Tuple([call_3487,call_3494,var_3491,const_3492,var_3493,uop_3501,])
func_3512 = relay.Function([var_3490,var_3491,var_3493,], output)
mod['func_3512'] = func_3512
mod = relay.transform.InferType()(mod)
var_3513 = relay.var("var_3513", dtype = "uint64", shape = (84, 1))#candidate|3513|(84, 1)|var|uint64
var_3514 = relay.var("var_3514", dtype = "uint8", shape = (390,))#candidate|3514|(390,)|var|uint8
var_3515 = relay.var("var_3515", dtype = "float32", shape = (825, 1))#candidate|3515|(825, 1)|var|float32
output = func_3512(var_3513,var_3514,var_3515,)
func_3516 = relay.Function([var_3513,var_3514,var_3515,], output)
mutated_mod['func_3516'] = func_3516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3191_call = mod.get_global_var('func_3191')
func_3192_call = mutated_mod.get_global_var('func_3192')
call_3535 = func_3191_call()
call_3536 = func_3191_call()
uop_3539 = relay.atanh(call_3535.astype('float32')) # shape=(16, 112)
uop_3541 = relay.atanh(call_3536.astype('float32')) # shape=(16, 112)
bop_3542 = relay.greater_equal(uop_3539.astype('bool'), relay.reshape(call_3535.astype('bool'), relay.shape_of(uop_3539))) # shape=(16, 112)
bop_3545 = relay.greater_equal(uop_3541.astype('bool'), relay.reshape(call_3536.astype('bool'), relay.shape_of(uop_3541))) # shape=(16, 112)
output = relay.Tuple([bop_3542,])
output2 = relay.Tuple([bop_3545,])
func_3547 = relay.Function([], output)
mod['func_3547'] = func_3547
mod = relay.transform.InferType()(mod)
mutated_mod['func_3547'] = func_3547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3547_call = mutated_mod.get_global_var('func_3547')
call_3548 = func_3547_call()
output = call_3548
func_3549 = relay.Function([], output)
mutated_mod['func_3549'] = func_3549
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2998_call = mod.get_global_var('func_2998')
func_3000_call = mutated_mod.get_global_var('func_3000')
call_3553 = relay.TupleGetItem(func_2998_call(), 0)
call_3554 = relay.TupleGetItem(func_3000_call(), 0)
func_1757_call = mod.get_global_var('func_1757')
func_1760_call = mutated_mod.get_global_var('func_1760')
var_3563 = relay.var("var_3563", dtype = "float32", shape = (126,))#candidate|3563|(126,)|var|float32
call_3562 = relay.TupleGetItem(func_1757_call(relay.reshape(var_3563.astype('float32'), [9, 1, 14]), relay.reshape(call_3553.astype('bool'), [64, 28]), ), 2)
call_3564 = relay.TupleGetItem(func_1760_call(relay.reshape(var_3563.astype('float32'), [9, 1, 14]), relay.reshape(call_3553.astype('bool'), [64, 28]), ), 2)
output = relay.Tuple([call_3553,call_3562,var_3563,])
output2 = relay.Tuple([call_3554,call_3564,var_3563,])
func_3575 = relay.Function([var_3563,], output)
mod['func_3575'] = func_3575
mod = relay.transform.InferType()(mod)
var_3576 = relay.var("var_3576", dtype = "float32", shape = (126,))#candidate|3576|(126,)|var|float32
output = func_3575(var_3576)
func_3577 = relay.Function([var_3576], output)
mutated_mod['func_3577'] = func_3577
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1938_call = mod.get_global_var('func_1938')
func_1940_call = mutated_mod.get_global_var('func_1940')
call_3591 = relay.TupleGetItem(func_1938_call(), 0)
call_3592 = relay.TupleGetItem(func_1940_call(), 0)
func_2598_call = mod.get_global_var('func_2598')
func_2600_call = mutated_mod.get_global_var('func_2600')
call_3595 = func_2598_call()
call_3596 = func_2598_call()
output = relay.Tuple([call_3591,call_3595,])
output2 = relay.Tuple([call_3592,call_3596,])
func_3602 = relay.Function([], output)
mod['func_3602'] = func_3602
mod = relay.transform.InferType()(mod)
mutated_mod['func_3602'] = func_3602
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3602_call = mutated_mod.get_global_var('func_3602')
call_3603 = func_3602_call()
output = call_3603
func_3604 = relay.Function([], output)
mutated_mod['func_3604'] = func_3604
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2725_call = mod.get_global_var('func_2725')
func_2727_call = mutated_mod.get_global_var('func_2727')
call_3615 = relay.TupleGetItem(func_2725_call(), 0)
call_3616 = relay.TupleGetItem(func_2727_call(), 0)
uop_3619 = relay.erf(call_3615.astype('float64')) # shape=(16, 112)
uop_3621 = relay.erf(call_3616.astype('float64')) # shape=(16, 112)
func_3575_call = mod.get_global_var('func_3575')
func_3577_call = mutated_mod.get_global_var('func_3577')
var_3623 = relay.var("var_3623", dtype = "float32", shape = (21, 6))#candidate|3623|(21, 6)|var|float32
call_3622 = relay.TupleGetItem(func_3575_call(relay.reshape(var_3623.astype('float32'), [126,])), 2)
call_3624 = relay.TupleGetItem(func_3577_call(relay.reshape(var_3623.astype('float32'), [126,])), 2)
output = relay.Tuple([uop_3619,call_3622,var_3623,])
output2 = relay.Tuple([uop_3621,call_3624,var_3623,])
func_3625 = relay.Function([var_3623,], output)
mod['func_3625'] = func_3625
mod = relay.transform.InferType()(mod)
mutated_mod['func_3625'] = func_3625
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3626 = relay.var("var_3626", dtype = "float32", shape = (21, 6))#candidate|3626|(21, 6)|var|float32
func_3625_call = mutated_mod.get_global_var('func_3625')
call_3627 = func_3625_call(var_3626)
output = call_3627
func_3628 = relay.Function([var_3626], output)
mutated_mod['func_3628'] = func_3628
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3191_call = mod.get_global_var('func_3191')
func_3192_call = mutated_mod.get_global_var('func_3192')
call_3656 = func_3191_call()
call_3657 = func_3191_call()
uop_3677 = relay.asin(call_3656.astype('float64')) # shape=(16, 112)
uop_3679 = relay.asin(call_3657.astype('float64')) # shape=(16, 112)
func_2114_call = mod.get_global_var('func_2114')
func_2117_call = mutated_mod.get_global_var('func_2117')
const_3682 = relay.const(2, dtype = "uint16")#candidate|3682|()|const|uint16
const_3683 = relay.const([4,-3,8,-3,7,9,9,9,-7,-7,6,8,7,-3,9,-1,10,8,-5,5,1,6,-1,7,7,6,2,-9,-5,5,10,7,-1,2,-3,7,-2,-6,-8,-1,-5,-8,5,5,2,4,-7,2,3,5,2,2,7,-8,-10,-9,8,-3,7,-2,7,10,6,-3,7,-7,-10,-4,-6,1,1,-3,7,1,2,-2,-9,5,4,6,-6,10,-1,-2,-7,3,4,5,9,-5,1,-2,-8,8,4,5,9,5,-2,-9,1,4,-9,7,7,1,-7,-10,1,-9,4,-7,9,-4,-9,7,6,-7,2,-3,4,-9,-10,-6,-7,-7,8,3,-6,-8,2,6,9,-3,7,-2,-3,-2,9,3,4,6,-4,9,8,4,5,9,5,-6,9,3,-10,2,-4,7,7,-10,-2,10,4,-1,-5,-4,-2,5,10,-3,5,-2,-2,-9,-4,-9,-5,8,2,10,-8,10,-5,-1,-4,-5,-10,10,-8,3,7,10,-1,-5,6,2,10,-3,-6,-9,-9,-1,-5,-4,-1,7,-7,2,-3,-10,-2,6,4,-8,6,-3,4,-7,-7,2,-6,-6,5,-2,4,-1,6,-2,-7,-3,8,7,1,2,4,6,4,4,7,-8,-10,9,6,-8,-2,3,8,3,-5,9,-1,-9,4,-2,1,-4,-1,-7,-4,10,-6,5,5,7,-5,9,-1,10,-4,-6,4,-6,-3,-4,9,-1,6,-1,4,-1,4,6,10,1,-8,-9,-7,9,-9,4,-6,-5,1,-3,5,5,-6,5,6,-2,-2,-7,9,8,-1,-7,9,7,-9,-6,-6,4,-3,8,6,4,-4,-9,-6,-10,-3,-4,-9,4,-3,10,5,-9,-4,8,10,10,-2,4,9,-7,-1,7,-1,-7,3,-2,-3,7,-2,9,-8,4,1,-9,6,-5,6,8,-2,2,2,6,-6,5,9,-10,5,8,-5,-8,-5,-7,-6,-8,10,6,5,9,4,-1,-2,-9,-4,4,-5,10,7,9,-2,2,9,6,-9,-7,-3,-5,9,1,-2,-5,-7,-5,2,-8,2,-6,7,5,9,8,-10,4,-6,3,9,-4,-2,-3,-4,-9,-2,-7,7,6,4,7,-6,3,3,9,-5,10,-2,2,-3,-4,7,3,-3,-9,2,3,6,-9,4,-3,-3,-8,4,-2,-2,2,-8,-3,-6,2,-10,-6,-2,5,7,7,-1,-6,7,-1,-6,8,2,7,-4,5,-3,-10,8,-3,3,4,6,-8,9,2,6,9,1,-3,-4,-9,-1,-4,-6,5,-8,5,10,9,-5,-5,10,7,10,6,-10,1,-6,2,1,-3,-6,-4,-2,-8,-3,5,6,3,-2,8,-6,5,3,3,-3,-4,7,-5,-1,3,5,7,10,7,-1,-5,-5,8,-6,-3,-9,7,-3,4,-7,-9,-5,-6,-6,-8,-2,-3,-3,-7,2,-7,-5,9,-1,3,10,-2,8,-9,-3,-3,-9,-1,7,-1,-6,-2,-5,10,-3,-5,6,-7,5,9,2,10,6,4,-9,-4,3,9,-8,5,-3,4,8,-2,-7,1,-2,-9,-4,4,7,-10,4,10,10,3,8,3,-9,8,-7,-3,2,1,-4,9,5,-2,1,-2,9,-4,-3,4,-1,7,-3,-9,4,-9,7,10,9,10,3,-9,-7,1,10,-3,-8,-1,3,-6,-1,5,-4,9,-6,3,3,2,-7,-2,-8,9,7,9,-9,-7,3,-8,7,-2,6,-10,7,1,-7,-2,9,-3,1,-8,-10,-3,-7,1,8,-6,-7,5,10,-10,10,2,-3,-6,6,7,9,8,-10,-9,-10,-5,1,5,-8,8,8,9,-4,8,-1,5,-4,5,10,4,-10,9,1,-5,-8,8,1,-7,-2,-5,9,-2,-3,-7,-4,-4,-10,-6,-6,1,-3,2,-8,-9,4,-5,5,6,-6,-10,-3,-5,-7,5,3,9,-7,-10,-10,9,-4,-8,4,7,-6,10,-9,-2,7,2,-3,4,2,9,4,7,-2,6,-7,-6,10,-2,-3,7,-2,-10,2,9,1,-5,5,2,4,-1,-1,-6,3,1,-2,7,-9,-3,2,-4,-1,7,-10,-3,-7,7,-3,10,-1,-3,-1,-1,7,1,7,4,2,-5,-10,-9,5,4,9,4,-7,6,-7,-8,2,-6,3,-10,1,9,4,-8,-4,-4,8,-4,5,3,-9,-6,8,-4,2,-10,-9,-4,-7,-9,5,-3,-3,8,-8,-2,1,10,2,4,7,-6,-3,7,-3,2,-2,-2,3,-5,-2,10,6,3,-3,1,1,6,10,-7,-2,10,3,10,-4,8,3,7,7,9,-9,2,10,7,1,-10,10,-8,-3,-2,1,-1,8,-6,-2,-9,-5,-2,-8,2,10,4,-5,-6,9,5,5,-6,8,2,-5,10,9,-5,-2,8,-1,3,-3,4,4,-3,7,-6,1,4,8,-6,-7,-5,7,10,-6,-2,3,-2,-5,-10,4,9,3,-3,-7,-9,9,-3,7,-4,8,3,-4,-10,10,5,-5,1,-6,-8,-3,-7,-1,1,-6,3,5,-7,1,-1,-7,-6,9,-10,-2,-9,-5,1,9,-4,-9,8,10,-4,-3,1,1,2,-7,-8,1,7,-4,-10,10,-7,-10,6,10,-1,5,5,-3,8,9,8,3,-6,4,1,9,-7,-5,-10,-3,10,-7,5,-1,-8,1,2,5,-3,3,5,6,-2,-2,-5,-5,4,1,-10,4,-5,-7,-3,5,1,1,-2,5,7,-8,4,-9,-5,-8,3,6,1,4,-6,-9,9,-3,9,8,-7,8,2,-10,8,-2,3,8,1,-7,3,4,-8,-4,4,2,-8,3,-8,7,-2,-4,8,1,5,8,6,1,-8,-10,7,-6,-2,7,3,-3,-2,1,10,1,10,3,-1,9,-9,6,10,-3,2,-2,1,-3,4,-4,8,10,-5,5,9,-7,-4,4,-4,8,-4,-2,-6,1,9,-6,3,6,-1,3,-4,6,-3,1,7,3,8,10,10,-5,7,7,-7,7,3,-8,10,2,6,3,3,-7,-3,6,-10,-4,2,8,-4,7,-5,-2,-9,-2,-8,-10,-1,1,-6,7,9,5,-3,-5,8,-2,-9,1,1,-4,-8,-1,1,-3,10,-3,9,4,-10,9,-1,2,7,7,-9,-8,-3,-6,-10,1,6,1,-3,7,4,-3,9,4,-3,6,1,-6,3,-9,8,-5,6,-2,-2,4,7,10,7,1,-6,9,-3,10,-7,-10,-10,9,-2,-7,-2,-2,-8,-2,-8,-4,-4,-10,8,-4,10,9,-1,-6,-1,-7,3,9,-4,8,-8,6,5,-8,7,-7,-5,7,-7,9,7,1,7,-3,3,-1,-6,-4,3,6,-5,7,1,6,-10,-8,-2,8,10,-8,-3,-5,-8,-9,-2,-2,-10,-7,-4,9,-9,-2,-5,-10,-10,-8,-9,-3,4,9,9,-3,2,-9,4,-10,-4,-3,1,-6,2,-7,10,8,-3,10,-10], dtype = "uint16")#candidate|3683|(1320,)|const|uint16
call_3681 = relay.TupleGetItem(func_2114_call(relay.reshape(const_3682.astype('uint16'), []), relay.reshape(const_3683.astype('uint16'), [15, 8, 11]), ), 0)
call_3684 = relay.TupleGetItem(func_2117_call(relay.reshape(const_3682.astype('uint16'), []), relay.reshape(const_3683.astype('uint16'), [15, 8, 11]), ), 0)
func_1033_call = mod.get_global_var('func_1033')
func_1036_call = mutated_mod.get_global_var('func_1036')
var_3690 = relay.var("var_3690", dtype = "uint8", shape = (195, 2))#candidate|3690|(195, 2)|var|uint8
call_3689 = func_1033_call(relay.reshape(var_3690.astype('uint8'), [10, 3, 13]), relay.reshape(var_3690.astype('uint8'), [10, 3, 13]), )
call_3691 = func_1033_call(relay.reshape(var_3690.astype('uint8'), [10, 3, 13]), relay.reshape(var_3690.astype('uint8'), [10, 3, 13]), )
output = relay.Tuple([uop_3677,call_3681,const_3682,const_3683,call_3689,var_3690,])
output2 = relay.Tuple([uop_3679,call_3684,const_3682,const_3683,call_3691,var_3690,])
func_3697 = relay.Function([var_3690,], output)
mod['func_3697'] = func_3697
mod = relay.transform.InferType()(mod)
var_3698 = relay.var("var_3698", dtype = "uint8", shape = (195, 2))#candidate|3698|(195, 2)|var|uint8
output = func_3697(var_3698)
func_3699 = relay.Function([var_3698], output)
mutated_mod['func_3699'] = func_3699
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2044_call = mod.get_global_var('func_2044')
func_2045_call = mutated_mod.get_global_var('func_2045')
call_3778 = relay.TupleGetItem(func_2044_call(), 0)
call_3779 = relay.TupleGetItem(func_2045_call(), 0)
func_3132_call = mod.get_global_var('func_3132')
func_3133_call = mutated_mod.get_global_var('func_3133')
call_3789 = func_3132_call()
call_3790 = func_3132_call()
output = relay.Tuple([call_3778,call_3789,])
output2 = relay.Tuple([call_3779,call_3790,])
func_3796 = relay.Function([], output)
mod['func_3796'] = func_3796
mod = relay.transform.InferType()(mod)
output = func_3796()
func_3797 = relay.Function([], output)
mutated_mod['func_3797'] = func_3797
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1857_call = mod.get_global_var('func_1857')
func_1859_call = mutated_mod.get_global_var('func_1859')
call_3819 = relay.TupleGetItem(func_1857_call(), 0)
call_3820 = relay.TupleGetItem(func_1859_call(), 0)
output = relay.Tuple([call_3819,])
output2 = relay.Tuple([call_3820,])
func_3828 = relay.Function([], output)
mod['func_3828'] = func_3828
mod = relay.transform.InferType()(mod)
output = func_3828()
func_3829 = relay.Function([], output)
mutated_mod['func_3829'] = func_3829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2725_call = mod.get_global_var('func_2725')
func_2727_call = mutated_mod.get_global_var('func_2727')
call_3873 = relay.TupleGetItem(func_2725_call(), 0)
call_3874 = relay.TupleGetItem(func_2727_call(), 0)
uop_3879 = relay.sqrt(call_3873.astype('float32')) # shape=(16, 112)
uop_3881 = relay.sqrt(call_3874.astype('float32')) # shape=(16, 112)
const_3883 = relay.const([[5.839879,1.783332,-3.170397,-6.947313,-7.092019,8.702583,1.215125,-6.012934,1.956710,5.335265,-1.375180,1.946640,6.135075,1.833933,-2.903254,8.452450,-0.984265,-1.286667,5.683736,1.470123,-6.228234,7.755909,5.770209,-6.771043,4.577472,2.517381,-5.639304,-0.145190,6.815182,4.032581,-1.809796,1.399049,8.742745,-4.909438,0.577780,-4.065451,-1.059021,2.062930,1.793174,6.098933,7.580427,6.181250,2.191975,-5.801016,0.541614,-6.661796,-9.838068,-6.235031,8.022770,6.885449,-4.467732,4.140401,9.358739,-2.968161,-2.755790,9.668681,1.509603,4.135472,-1.518339,7.851422,5.457081,-1.568079,1.119939,7.172669,4.278085,3.216438,-3.928869,-6.694575,2.588757,8.033513,-9.206543,-0.716540,5.741436,-5.611900,6.386864,6.432713,0.966782,-6.952045,6.847867,-9.931632,-4.244564,-3.781887,-6.406103,2.525586,-1.515839,7.062780,0.415431,-1.657896,1.272010,9.070003,-7.285576,-3.116040,-5.381360,-7.725341,-0.767041,-6.616987,6.316933,-5.378685,1.664207,2.538088,-8.581301,7.259715,-4.300338,-6.866434,-3.096602,-9.681176,-2.664509,8.884913,-9.269374,-7.019543,-0.883054,9.018008],[-7.331340,1.101977,4.246717,8.601122,8.749431,-1.956982,-0.143321,3.822704,-1.710854,7.090091,-2.703864,6.320462,-0.882318,-0.114460,-6.357152,-9.188883,2.416294,-6.043879,4.183832,-6.211205,-9.401251,-4.042206,7.859054,-4.112532,-0.360547,-0.227401,-9.454224,4.213744,-3.499047,5.792621,1.449467,9.297597,5.813272,-2.998219,5.489185,6.629229,6.539918,-5.174779,5.557154,-7.048001,-4.485336,5.637905,-6.179083,5.402113,-9.406194,4.055777,3.190170,-4.922731,-3.893892,9.621925,8.017728,-2.552966,-6.014198,7.564993,7.722490,7.749753,-6.293937,-8.489507,9.124263,7.874789,-6.072053,-3.612131,1.097856,-6.276047,5.012729,6.507908,-5.181500,8.445431,-4.299271,-5.037101,-7.016472,8.048265,-0.066072,9.822291,-6.523649,2.299470,5.727981,-8.758814,-6.981703,-8.863873,-6.294083,-6.187329,6.741194,0.471356,-4.543680,9.666635,-6.019131,-0.123551,-2.656832,-7.197217,-8.758608,7.505799,6.590833,5.489127,-6.868008,7.592412,1.673330,6.581313,1.085955,6.589956,7.050788,-1.851315,5.982244,-8.491378,-2.970578,-4.459021,4.131027,-5.919639,9.878356,-6.193459,-8.558769,-8.010098],[-1.217930,-6.897704,7.736774,7.306411,6.022765,-7.917576,-2.396115,-5.916915,7.789107,-8.530622,8.086825,-8.488768,-1.359384,-4.128841,-4.405848,-9.113839,7.959971,9.867890,-8.216839,0.606786,-0.656965,8.242946,-1.904164,-5.059874,-6.985796,-1.168928,8.757661,6.265211,-7.968791,-5.432655,-5.677771,1.060500,-7.574481,-7.119032,2.776892,-9.406571,4.326172,3.535584,8.267637,-3.864488,-1.143765,6.569061,8.654823,5.987506,8.613523,-2.808005,-7.365175,3.286852,-8.372156,-5.733726,3.170106,-5.733854,-0.345660,-4.026997,8.807941,1.016080,-4.537552,4.571990,3.638562,7.013015,9.103702,8.468931,9.820474,-2.644062,-2.286929,4.916749,5.105473,1.535657,5.895346,2.243573,-8.185680,-6.623002,-4.894409,-2.530824,-6.103491,-1.742140,6.238780,-6.326222,-1.624030,2.168485,9.041062,-1.539070,-8.885148,-6.169776,5.668327,-2.929389,-4.093970,-1.479987,-4.462663,1.532288,-5.022031,-8.623912,7.012959,-8.335276,7.414907,-7.821523,8.248023,1.617523,-6.555363,2.831827,-9.694281,5.007819,0.885535,2.955487,-1.986284,-9.328491,-9.411927,8.410132,3.299144,8.278976,7.614781,7.889001],[-4.552274,-4.266214,-9.013559,-6.585808,6.336804,-9.890095,-5.419846,-3.179116,-0.111807,0.500405,-4.606900,-5.821758,5.695794,-3.160058,6.332635,3.197610,1.300791,6.404715,0.986977,-8.495790,7.743525,2.604986,-6.479208,9.840300,0.383676,3.018687,0.190124,8.506271,5.941250,9.831420,-4.751804,-6.184444,-3.856889,5.223827,0.372481,-5.231299,-2.169352,-9.177696,4.432499,3.538171,5.637112,-6.937753,-6.000789,8.147881,-4.482383,0.430365,7.296685,-8.166815,7.225904,5.470501,4.199871,9.827122,-0.636253,-9.051709,2.889967,-9.473966,-8.310814,9.263414,-8.501009,-9.633998,7.724693,0.787361,1.338750,-3.071528,-4.224157,4.608543,9.885613,8.623651,1.250809,-8.508783,-1.314509,4.946844,7.437771,4.260691,9.777543,-4.781568,8.942209,8.593865,5.748408,1.882070,5.580936,9.692604,-5.883330,-1.964146,-6.651090,-4.949260,4.873232,4.164844,1.603161,9.718985,-3.826724,8.617480,3.225759,-0.615252,9.017077,-4.293247,0.124547,9.263097,8.141672,0.486844,-0.422805,-6.011371,6.368353,1.794872,-4.935772,7.431858,-6.390678,1.620129,2.498683,7.394458,2.080858,5.825788],[0.458024,-2.035138,2.834566,8.360030,-3.679081,8.143053,2.204226,-8.940114,8.189647,1.422874,-5.822012,-8.003568,-4.334983,-8.486897,1.483755,-1.984363,0.683413,1.259269,-1.519350,-6.903516,-9.056665,-0.429879,-7.927458,-5.694653,-5.280498,-8.619330,-4.773292,-6.393904,-7.888855,-4.536369,9.105820,-9.322899,-2.340206,7.831253,-5.816324,3.247622,9.758109,5.879554,-7.456371,-3.599613,7.004492,0.519068,2.061297,-3.960078,1.457336,1.032606,-3.619548,7.392743,-7.848196,1.091160,-4.909370,5.031266,3.264233,-5.292760,-8.594467,-7.459599,3.500764,8.919020,-9.905172,-3.348679,5.342466,-6.434841,0.665086,-4.766625,-3.131387,3.726425,-3.171072,-1.583340,7.352732,6.716464,7.082531,2.505913,7.369974,3.035795,-7.301901,0.417865,-6.897086,3.839924,0.207580,7.805103,-0.104398,8.300290,1.995532,-1.441594,-3.287070,0.854960,5.965652,-6.014091,8.699848,-5.160311,9.071105,1.281999,8.196272,2.647729,-3.954773,-2.522478,7.071780,6.725110,-7.869470,3.156867,9.810415,-9.899205,4.027250,-0.220645,0.322820,4.489899,-8.369049,-9.384437,3.034074,1.487876,-2.480868,-8.693396],[9.015286,-0.997048,1.457575,-0.562334,-4.452679,-1.114255,2.203558,6.812858,6.757029,4.148836,6.842246,-1.039635,2.089370,9.511953,9.536090,-6.776848,0.757227,-4.194390,-8.269716,-1.250607,-3.223128,0.545099,4.477617,-2.216146,0.868980,-6.211205,2.640032,6.011027,-6.951067,-8.356061,3.305486,-6.878618,5.122624,4.520758,7.281802,3.572265,-7.626627,3.580339,0.535622,9.279618,0.524746,4.128416,-1.805705,-8.085391,1.236574,-8.787085,1.766507,-9.226016,-8.327639,-2.658724,8.006826,6.821628,-3.216325,8.691658,-8.176917,-1.890559,-3.062698,-1.960761,3.819166,-4.044009,0.640450,0.332739,3.001472,7.599369,2.702359,-3.375500,7.724621,5.521110,-1.709285,3.884600,0.580540,2.823267,-9.361050,-2.003505,-0.001107,-7.452091,4.274200,-7.516251,6.476339,-3.266767,2.565813,9.346421,-8.149343,5.878307,1.009987,4.136912,-0.648010,6.392960,-1.217589,-7.337742,-1.679407,-2.217107,-3.124183,-1.369005,9.896905,5.032009,2.004187,4.250917,8.943769,3.631430,-4.862242,6.830597,8.183310,3.137219,-0.418871,-9.954689,-1.634447,-7.374139,0.613142,2.730297,-6.456767,4.688566],[4.904406,2.508494,6.702491,-4.882905,-6.366753,3.938937,-6.729542,0.664603,-3.401825,0.757743,1.502757,-7.083271,-2.242733,3.832509,-9.442997,8.995115,5.193923,-3.033757,6.305082,-1.225450,-1.572088,2.592318,-5.483740,5.366538,-2.329368,-7.239912,-9.864127,-0.095511,-3.291225,8.522072,-9.489321,-1.516441,-2.705953,0.663427,4.575925,9.043398,6.013604,-3.386567,2.065832,-3.027014,-0.064051,8.887172,4.746461,-5.068689,4.272470,-0.432988,-9.736663,-6.235117,1.422858,-4.884649,4.722894,-9.882740,-1.879790,0.464087,-9.833924,6.150682,-5.529420,-8.234126,-8.686191,0.629758,-6.859840,3.305978,-1.318976,8.323132,6.967342,8.690404,5.061818,1.665884,-8.947887,-0.995197,4.544300,-7.496214,-7.191675,5.057448,8.163311,6.647614,9.058245,-0.662955,-5.635341,7.586534,7.291401,-2.532183,0.130159,-1.611756,-9.006778,-0.735583,-4.430260,6.573321,5.089025,3.197665,0.042269,8.246247,8.227791,7.387835,0.244043,-1.351293,7.985107,-7.551394,-4.634016,-4.197361,7.197195,-6.185181,8.291981,-7.054207,4.752007,2.583588,-9.467683,4.435098,-7.324687,1.115824,1.368882,-1.761527],[1.598193,4.290522,9.913504,-5.545281,5.657196,-5.207087,2.998754,0.827278,-8.091686,9.414872,3.825626,1.837418,1.820568,-0.663244,-9.442584,0.152277,3.872703,4.771931,8.750934,8.122936,1.343135,3.043842,-7.816137,3.714780,-3.719932,-9.293572,0.953357,6.337305,-3.211902,1.448360,2.963064,-0.052444,-4.747202,1.334197,-8.280129,-8.897666,9.896569,-6.008871,-5.671428,-0.958227,-9.797021,8.844376,-1.297922,0.071431,-1.900078,3.196841,1.203224,-4.855975,-4.646875,7.425874,-7.035227,-5.498387,-9.737787,1.498337,-9.393848,9.037622,-0.968109,-7.580235,2.771430,-5.614469,-9.604867,0.457009,9.183519,5.170693,-7.903355,-2.116857,-0.349749,-2.048096,1.201472,-5.172092,3.212153,1.430617,-3.708104,9.051655,5.768156,2.422215,6.340488,7.999925,-1.442745,-8.135224,-5.101247,4.265896,9.539795,3.769017,2.892459,-3.245726,4.080821,0.665410,9.737418,0.607355,-7.091289,3.531552,-9.608713,-8.365580,4.865670,0.016353,-4.675753,5.992160,-7.655355,-5.776552,-6.604324,-5.754529,-3.552667,8.312285,-5.055174,-8.907025,7.749656,4.389289,7.390471,-6.360025,-6.488284,-4.577425],[-0.570488,6.302103,-3.761056,-0.200603,-0.022987,-7.063609,-3.295545,2.870915,-1.212188,1.643932,0.057049,3.138238,7.115382,3.547359,8.987924,-8.075808,6.968086,-2.304235,0.815523,-6.492761,-1.743792,3.378441,-6.387461,9.369285,-5.326050,-5.064474,5.378709,-0.709854,0.122216,3.850830,2.519801,-5.707636,3.843369,-6.610962,-1.940824,-7.899000,5.556385,1.958697,-4.334320,7.037931,-0.070631,-7.116544,0.067100,-9.435241,9.116827,-2.689092,4.658796,2.496180,2.812634,6.725802,1.618305,-0.845199,3.824534,-8.111595,8.564959,9.443996,-4.356968,5.040275,-0.822656,-1.658604,8.442651,5.020093,-5.637513,8.022914,-3.074056,0.701964,6.274491,9.799920,8.392998,-5.901488,4.621134,-7.076139,-6.537657,2.883535,2.613491,-3.826511,-5.909820,9.852265,-0.412536,7.286905,-6.561781,-9.222289,-1.786530,-7.315122,-9.831769,-2.451763,-7.331762,0.727200,4.313223,-7.408737,-3.934555,9.476093,-6.505912,3.057182,-6.357028,0.544634,7.722400,-9.874068,3.832970,-0.598222,9.183765,0.718136,7.806335,-8.316004,-5.907183,-4.398420,2.836192,6.302413,-3.826157,2.334900,8.729083,7.737690],[-8.987303,9.587336,2.036220,1.592419,-2.511662,-5.254633,1.484542,-5.962645,5.469011,8.919413,4.705286,-2.787543,9.411767,-2.298729,3.155563,-1.652408,5.877571,5.616533,6.126232,5.796410,-7.455335,1.816700,4.782598,5.276796,-7.017287,4.015694,3.296203,-4.930719,8.021455,-0.292366,-4.348905,4.819045,-0.965805,-1.391449,9.606524,2.008173,-9.880939,-4.068365,9.370535,-5.440336,-4.397581,6.124251,-5.229589,-6.832135,-8.442136,-4.639072,6.995843,-9.599344,-5.294052,7.320710,-4.260165,4.064275,-4.038909,-7.419175,5.074251,0.952842,4.357974,-6.319613,-5.910411,4.500352,1.206161,-4.902119,1.289294,-8.567452,3.739781,-6.518129,-7.903080,-0.339512,7.707433,-3.651336,-6.125550,-3.822723,-6.420450,8.824256,2.123195,7.471279,-7.876708,-6.478215,-1.254786,1.461294,-0.412281,-1.413707,-6.615849,8.187443,7.309708,-6.053198,-2.652983,7.271267,4.961458,9.187692,-0.389597,2.263824,-1.796429,-0.674515,-6.032035,1.221154,4.153044,-0.464855,-1.440023,0.045038,0.094167,7.071211,-1.220867,7.527220,7.150137,5.864066,7.251922,-1.540532,-7.698165,8.269197,8.564820,2.507862],[-6.629686,-8.184604,-4.331997,-0.392966,8.211839,4.579149,1.724443,-0.158334,7.929239,-5.256646,-2.341833,5.331738,6.895560,-0.599588,2.318218,-9.119348,2.317760,-3.571175,-4.713611,4.958601,1.070423,-3.832879,0.004379,9.439127,-1.695222,-7.241958,2.917669,9.406194,-6.750430,3.909506,6.360959,0.429804,-5.514959,-4.890072,-2.838187,-1.420972,-1.959277,-2.549200,7.436693,4.236267,6.684873,7.269462,1.406833,-7.108356,-6.384856,7.999411,1.406359,-9.783723,-8.187005,-2.768493,-7.780201,-9.904836,8.235860,4.260286,8.551283,-8.957109,-0.997999,3.243345,-9.038176,4.342694,4.866696,9.072813,0.318197,-8.414318,-2.409248,-1.961480,9.604780,-3.141957,-1.600799,-6.738924,-5.889188,-0.803459,-0.082964,-8.090915,8.910695,8.317809,-3.522363,0.097643,-5.601789,6.032124,4.415422,9.993963,0.143047,9.270714,3.441329,9.374479,5.598187,-9.503527,7.717603,-4.867149,-5.252807,6.949888,-0.928974,-7.717860,-5.095985,-2.307653,-9.617982,-1.618544,8.535319,1.966030,6.190983,-8.339208,-2.164458,-8.310613,9.067353,1.852306,-8.827833,-6.995525,4.911990,7.462872,-9.109483,1.904766],[-7.541645,-0.811593,-3.960724,-6.428468,-6.402021,-6.592784,-4.300372,-3.829843,6.567639,3.190881,-2.928841,3.900047,7.829457,7.535795,-7.969827,-7.690514,1.787104,-3.806228,-6.325908,6.660516,7.069678,1.364747,8.413339,8.070190,9.302739,-8.683068,-3.439647,-3.045041,7.950519,2.982513,-1.354250,-3.385382,6.697589,7.040860,2.805278,-6.849298,-8.691066,-2.473576,-4.573311,7.616797,3.288409,7.114508,3.538123,3.992784,-0.406811,-0.807106,-3.423029,-6.487783,5.800062,3.244122,-3.486483,4.635674,8.280263,-3.970505,0.304604,-9.620849,-7.129257,-0.863057,7.051425,-9.455718,-4.955801,-5.638625,4.125853,-8.579220,6.365059,7.735374,-4.562423,-5.062318,3.560682,0.048881,-9.259036,9.552955,9.823517,-6.105623,0.460126,-1.221047,4.880184,-9.933988,8.307158,9.190781,-2.507753,1.792618,4.149196,-5.377750,-5.460687,1.941794,7.514044,2.748332,-3.072146,7.066440,-8.979640,-3.050859,0.342304,-8.379739,1.692489,1.145281,1.949046,-1.638961,-6.283966,7.755271,-2.202614,-8.685013,1.362168,6.120137,7.708785,7.242103,-5.483136,-6.355739,-9.599873,4.377211,-9.123111,4.370627],[2.615883,0.060752,-0.111288,-8.836716,0.423615,7.606209,3.722322,6.184372,8.972330,-6.555085,-0.965531,2.872748,-2.134115,-5.730314,2.386738,-0.470952,-9.780766,8.016035,-4.102537,3.216660,-4.057460,-6.660896,4.772815,-6.414891,-0.835173,6.144614,1.557821,3.893823,6.179628,0.994224,8.329370,6.277048,3.703159,-6.164302,-5.604688,1.928963,-4.674153,-9.368953,4.195028,7.360449,-7.065028,-7.320430,1.506483,8.792164,-8.951520,-1.965278,-0.665169,7.772561,-2.929731,2.825051,9.110445,1.020543,-2.681700,-7.067692,-2.564270,5.700016,-6.412011,6.321283,2.335217,-1.607846,3.540076,9.599363,-0.690451,9.836526,-7.684963,0.936024,3.702774,-5.266311,6.852671,-1.946937,-5.592323,-7.241773,9.885107,-1.761132,-2.335089,-1.503062,4.881421,0.500153,-4.135468,-3.098086,9.910369,3.928561,-2.177429,-7.062741,-4.837467,-5.848937,-3.717190,1.781546,-1.791454,-6.372020,-4.334473,-1.107395,-9.480319,2.936030,-4.719417,2.012229,5.176470,-2.427961,-9.497202,3.409969,0.316317,1.613830,-9.639707,-2.778571,0.586455,6.629279,3.063826,8.474869,8.726457,4.644879,1.940685,7.565075],[0.779613,-1.099933,-6.494945,-9.867171,3.434878,7.707640,-4.887614,-2.249256,-7.959232,0.153955,6.845509,9.621978,8.114721,-7.363084,-9.765006,5.134132,-8.845767,0.550135,-1.932525,-2.730964,-0.065276,2.609559,3.928788,-3.909789,-7.523060,-7.760286,-0.580593,-5.472501,-5.940208,-5.460804,8.969883,-3.202134,-6.661785,-8.355859,5.658791,-4.339640,3.668090,-0.022804,-2.597325,-0.536308,-6.249600,-9.521364,1.523545,-5.495699,-2.748064,-5.869892,-3.161748,2.079935,-2.569434,9.052207,-7.100111,0.933342,-6.257928,4.417353,-8.785336,6.835214,-6.152319,-7.668048,-4.432058,9.185040,5.951623,-8.775701,-9.836472,-4.468931,-0.787385,-6.161432,-5.726852,-4.780858,1.768620,9.858688,8.443099,-5.103884,-5.621254,5.475303,0.152818,3.520328,-2.567773,-4.687305,2.569298,-0.181153,9.659222,7.213139,-8.421040,-9.715392,8.356888,-6.212769,-3.907763,-0.656781,0.719568,3.467437,-1.107699,9.268816,9.159440,7.430829,4.892733,-1.384735,-0.244905,-7.746378,3.087446,-0.880001,-3.491382,4.971468,1.690405,6.159263,-5.765792,7.413408,-1.829718,6.447195,-7.203489,-1.249706,-4.814511,-6.784929],[-1.129596,-2.854255,8.644330,-9.100359,4.699596,-5.972329,8.811533,6.998193,2.953836,-0.336943,0.354570,3.635567,-1.236054,7.649287,-2.562505,1.565093,-9.764944,-6.341001,-0.435619,6.392272,-9.410108,-4.885735,-4.447739,7.112285,-2.325199,6.207654,-9.147379,-6.194462,-0.892467,9.685971,9.197275,-4.388117,-5.011043,-1.540152,0.348872,-4.020253,9.576408,-1.919539,-6.056258,5.018606,0.691987,9.394657,4.927003,6.125823,9.199775,-8.617920,1.004749,8.874850,2.726150,0.996898,8.081741,7.369218,-0.393919,-7.310806,1.685488,-0.374135,-7.729074,-4.470588,5.425857,-6.669564,6.621843,4.246797,2.954010,-2.598418,-3.218771,2.856842,-4.064672,1.166271,-9.550203,1.953191,9.226128,1.625450,5.720529,-2.480865,7.904053,-5.951546,0.063351,2.839283,-1.282969,-3.993892,0.879537,-5.425228,-3.196229,0.915514,-2.182927,-9.227121,-5.043084,6.346034,-5.081387,-9.720292,-9.055206,-7.000280,-7.428426,-1.527940,8.811359,-6.185724,5.534458,-1.959670,-3.209324,-0.051435,4.760957,-6.176720,-2.919206,0.993302,2.063879,-5.065724,-3.224986,-7.121664,6.051458,8.612151,2.012927,2.288125],[8.710957,-6.290051,7.373609,-8.363713,9.691249,-6.475543,-0.252088,-3.355689,7.963233,-5.568288,1.892806,7.669802,3.071116,-1.948543,-9.630332,3.393897,3.363711,2.165259,4.598070,7.052920,-7.823861,-8.971962,-8.809958,4.090795,-3.417526,4.295961,-4.231886,-5.389101,-7.040140,-7.446600,-2.975776,-9.829417,4.303747,4.562645,5.974330,8.859493,-2.691340,-6.818335,0.767136,7.291166,8.235110,3.008366,9.286874,-2.742536,-3.423786,-1.678551,-4.161618,0.225799,-1.575982,-8.690438,0.741467,2.668464,-6.145083,-3.525432,3.497177,9.887935,0.017159,-1.386848,-4.493294,-4.993579,5.962364,9.031070,4.415368,2.779114,1.755400,8.168747,-8.555062,6.408723,-1.694031,-4.420191,3.757843,6.018049,-0.574951,7.332351,-2.932751,-8.781224,-8.385241,7.233648,-5.463617,8.782044,3.812659,-1.984336,1.099776,-8.889440,-7.035338,-3.363892,-9.998194,-5.993770,8.848979,6.550326,1.349268,-0.254644,7.542037,1.877541,-8.272635,-2.184863,4.093906,6.384010,-9.372071,-0.404783,-5.743628,-1.101166,-3.917336,-0.818515,-4.939976,8.797837,2.190358,7.796602,-1.505873,-1.262155,2.853294,-8.407944]], dtype = "float32")#candidate|3883|(16, 112)|const|float32
bop_3884 = relay.power(uop_3879.astype('float64'), relay.reshape(const_3883.astype('float64'), relay.shape_of(uop_3879))) # shape=(16, 112)
bop_3887 = relay.power(uop_3881.astype('float64'), relay.reshape(const_3883.astype('float64'), relay.shape_of(uop_3881))) # shape=(16, 112)
output = bop_3884
output2 = bop_3887
func_3892 = relay.Function([], output)
mod['func_3892'] = func_3892
mod = relay.transform.InferType()(mod)
mutated_mod['func_3892'] = func_3892
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3892_call = mutated_mod.get_global_var('func_3892')
call_3893 = func_3892_call()
output = call_3893
func_3894 = relay.Function([], output)
mutated_mod['func_3894'] = func_3894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1844_call = mod.get_global_var('func_1844')
func_1846_call = mutated_mod.get_global_var('func_1846')
call_3897 = func_1844_call()
call_3898 = func_1844_call()
func_2846_call = mod.get_global_var('func_2846')
func_2849_call = mutated_mod.get_global_var('func_2849')
var_3904 = relay.var("var_3904", dtype = "int32", shape = (195,))#candidate|3904|(195,)|var|int32
call_3903 = relay.TupleGetItem(func_2846_call(relay.reshape(var_3904.astype('int32'), [195,])), 0)
call_3905 = relay.TupleGetItem(func_2849_call(relay.reshape(var_3904.astype('int32'), [195,])), 0)
output = relay.Tuple([call_3897,call_3903,var_3904,])
output2 = relay.Tuple([call_3898,call_3905,var_3904,])
func_3906 = relay.Function([var_3904,], output)
mod['func_3906'] = func_3906
mod = relay.transform.InferType()(mod)
mutated_mod['func_3906'] = func_3906
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3907 = relay.var("var_3907", dtype = "int32", shape = (195,))#candidate|3907|(195,)|var|int32
func_3906_call = mutated_mod.get_global_var('func_3906')
call_3908 = func_3906_call(var_3907)
output = call_3908
func_3909 = relay.Function([var_3907], output)
mutated_mod['func_3909'] = func_3909
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1857_call = mod.get_global_var('func_1857')
func_1859_call = mutated_mod.get_global_var('func_1859')
call_3980 = relay.TupleGetItem(func_1857_call(), 0)
call_3981 = relay.TupleGetItem(func_1859_call(), 0)
func_1938_call = mod.get_global_var('func_1938')
func_1940_call = mutated_mod.get_global_var('func_1940')
call_3982 = relay.TupleGetItem(func_1938_call(), 0)
call_3983 = relay.TupleGetItem(func_1940_call(), 0)
output = relay.Tuple([call_3980,call_3982,])
output2 = relay.Tuple([call_3981,call_3983,])
func_3984 = relay.Function([], output)
mod['func_3984'] = func_3984
mod = relay.transform.InferType()(mod)
output = func_3984()
func_3985 = relay.Function([], output)
mutated_mod['func_3985'] = func_3985
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3828_call = mod.get_global_var('func_3828')
func_3829_call = mutated_mod.get_global_var('func_3829')
call_3998 = relay.TupleGetItem(func_3828_call(), 0)
call_3999 = relay.TupleGetItem(func_3829_call(), 0)
func_1505_call = mod.get_global_var('func_1505')
func_1510_call = mutated_mod.get_global_var('func_1510')
const_4001 = relay.const(8.370471, dtype = "float32")#candidate|4001|()|const|float32
const_4002 = relay.const([[-1.877387],[-0.096544],[-5.479433],[9.387994],[8.437919],[8.125090],[3.973897],[-0.214841],[1.664461],[-9.442304],[-3.786745],[7.030031],[3.736712],[5.415850],[-0.838803],[-0.926740],[-0.453333],[-5.829437],[0.540767],[6.710169],[7.712266],[-2.379680],[8.198101],[-0.831386],[-0.436728],[8.863032],[-6.092772],[-1.112363],[7.268209],[-2.632319],[8.314980],[-9.040550],[0.473083],[-3.282861],[-9.299138],[6.764481],[2.099496],[-2.789665],[-0.791605],[4.420210],[1.158764],[-1.865832],[7.737085],[7.464760],[-3.472402],[-9.879616],[-9.542024],[-6.465347],[5.918029],[-9.692346],[-3.225310],[6.815066],[-3.617727],[-4.744036],[-0.181867],[6.417744],[3.096715],[-1.825799],[-8.759581],[7.538256],[0.248262],[-7.882671],[7.584488],[0.878408],[7.155567],[-7.509991],[4.842548],[4.083599],[-0.912143],[5.409069],[1.733689],[-7.429739],[-9.268374],[-3.935849],[8.046013],[4.980788],[8.402098],[-7.340445],[-3.828042],[-2.420544],[-7.511666],[-4.141206],[-2.719069],[1.515286],[8.466432],[-3.834156],[9.573841],[3.265942],[0.197197],[-7.967366],[-0.058672],[1.427026],[0.223650],[-1.759558],[6.068515],[1.011300],[7.956154],[4.521113],[-8.890213],[-6.314939],[6.018806],[-2.032232],[-9.133508],[-4.751660],[4.256426],[-4.960929],[5.949383],[-5.315936],[9.320460],[-8.007070],[4.098268],[-8.116508],[7.819572],[-6.266825],[-2.164494],[-1.592302],[5.458457],[-8.509519],[-9.189213],[5.386108],[7.311209],[2.079858],[1.154456],[5.431521],[-7.897044],[7.707719],[-1.303577],[0.264302],[-0.170268],[2.784647],[-1.930429],[-3.513353],[-9.660857],[2.403706],[-6.984461],[0.673816],[-8.366416],[-1.411744],[-3.665482],[1.355740],[8.599204],[-3.499217],[-0.041588],[-6.487944],[3.908222],[-2.306966],[3.421908],[-3.611436],[6.739524],[-7.070685],[-2.214975],[-7.992411],[0.605976],[2.109741],[-0.175271],[-4.749851],[1.856605],[1.528785],[-9.691088],[-5.659444],[4.508328],[-2.295997],[-2.930323],[2.860073],[-4.892671],[0.640828],[2.417740],[-0.891230],[-8.334334],[-9.657325],[-9.319252],[-0.524918],[6.585414],[9.783374],[0.991444],[2.243556],[-6.135812],[6.626468],[-6.685636],[9.546921],[4.729161],[-5.547493],[-9.698843],[2.584514],[-9.883778],[9.722852],[-7.803535],[-2.321495],[-9.096848],[-5.930075],[-6.964369],[-0.209548],[9.130568],[2.591364],[-7.341034],[-9.184843],[7.361973],[-7.839914],[8.385947],[-1.406219],[9.258377],[-3.405815],[4.989206],[8.045439],[8.372981],[-6.257059],[-4.120206],[-1.498423],[-1.445635],[1.726828],[-0.060225],[-5.759409],[-6.318593],[1.959009],[-0.837266],[2.185078],[-6.687472],[-2.794705],[5.003059],[6.849415],[3.173483],[-4.493641],[-3.465143],[6.695061],[-0.485989],[-6.664887],[-1.459386],[-2.373456],[0.288647],[3.716250],[9.982765],[-7.881429],[-6.390874],[2.471473],[-3.031561],[-9.918452],[-7.772341],[4.327733],[-3.030273],[-7.896344],[-8.320429],[9.844486],[2.404875],[2.187637],[-4.253605],[6.605787],[-4.642438],[3.223644],[-0.238735],[-3.042342],[5.339910],[-9.414966],[6.160123],[-1.328159],[-5.086649],[-2.543994],[9.705721],[2.720594],[6.384292],[-1.935254],[5.410565],[5.302457],[8.998660],[5.563988],[3.368029],[-5.196019],[-9.432907],[3.230634],[1.715520],[6.144530],[-2.951457],[-1.232402],[-2.515532],[-2.149990],[-9.907751],[6.190946],[-1.724058],[3.972875],[4.010554],[7.079365],[-9.978950],[5.201888],[-1.286749],[-9.687447],[-8.785106],[5.361092],[9.345360],[4.449918],[-7.434855],[2.369470],[-3.508124],[-9.017769],[5.855527],[-4.515118],[-0.643302],[-4.139598],[8.403894],[-5.414050],[-5.105750],[6.574760],[-9.919296],[5.642396],[-5.217871],[2.159114],[-1.476865],[-5.001280],[9.358538],[-0.257115],[-8.206737],[8.763720],[-7.380842],[-7.211190],[6.748896],[-5.500240],[9.000364],[9.956588],[-5.376417],[-7.130454],[1.625411],[7.101733],[-7.219077],[-2.510183],[5.430395],[7.909599],[2.585767],[-9.271380],[-0.319947],[6.003977],[9.717246],[3.876536],[-9.043359],[8.683121],[1.767054],[3.357081],[6.651145],[-4.568775],[-6.358459],[-3.658554],[7.097073],[-7.616663],[-6.003711],[9.686423],[9.528329],[3.893728],[-2.867578],[2.280758],[4.133476],[3.191938],[-5.280885],[7.943610],[-1.359638],[-8.289995],[-5.733694],[-5.229317],[-5.973198],[-4.313656],[1.395832],[1.145743],[-1.789581],[-6.234777],[6.261547],[2.663901],[-0.324927],[0.276567],[-3.582302],[-7.916917],[-5.774775],[4.188592],[6.750327],[1.878143],[-0.548198],[4.962240],[2.948336],[-8.540204],[2.192759],[-9.959380],[9.356454],[8.413389],[-5.869219],[-2.017162],[7.886383],[0.593363],[3.507354],[-4.048465],[-5.049635],[-5.959278],[4.338766],[7.715801],[-5.965753],[-0.202473],[-3.456504],[-1.769909],[5.663231],[1.110006],[-6.719465],[-3.955736],[-5.339891],[-7.122289],[-9.808087],[9.242767],[-1.686149],[-6.132752],[8.532064],[-9.503757],[5.421145],[6.649507],[4.704658],[4.366639],[9.508741],[-3.858629],[2.861017],[3.781541],[1.232961],[2.669806],[-7.610240],[-1.986347],[0.404140],[-1.150567],[-4.339290],[-5.768304],[4.904708],[6.913231],[-6.825387],[7.048401],[2.878090],[4.722596],[-2.906513],[8.212737],[-3.593253],[-6.004470],[9.496768],[4.749955],[2.355855],[7.913077],[-1.953887],[6.139014],[6.379657],[-6.633660],[-7.889625],[2.078013],[-3.329234],[-8.253380],[3.486359],[-2.449575],[-8.528274],[-3.256312],[8.068661],[-5.906151],[5.847301],[8.095040],[-7.591154],[1.988308],[0.074683],[8.354819],[-7.446875],[-7.756982],[1.233645],[7.026570],[-1.327376],[0.256333],[-5.343902],[-8.318619],[8.464033],[-5.214167],[-7.659476],[7.950691],[3.039846],[-5.081921],[-1.873808],[-9.633137],[-8.611693],[3.364156],[2.932426],[-1.624428],[-8.966199],[-2.869558],[8.575600],[7.208584],[-9.826134],[5.474365],[1.319435],[2.394983],[0.616221],[2.129424],[9.966852],[-9.595549],[-6.337346],[3.354151],[7.185754],[3.092336],[1.950144],[-4.661469],[-3.444845],[-2.667897],[-3.390642],[7.363314],[-5.504260],[-8.187362],[-5.785253],[8.762759],[2.769178],[8.269617],[-0.083503],[3.758798],[-0.197281],[5.527016],[-6.027021],[-8.420455],[0.402017],[7.585771],[-2.722879],[6.133484],[4.503401],[2.103749],[-8.724723],[2.703499],[-1.806235],[3.289014],[-0.252423],[-4.710639],[-8.713071],[-6.551478],[-6.064607],[5.084695],[6.801136],[4.216172],[-8.835783],[-0.439048],[-1.375186],[1.755706],[4.232978],[-9.356788],[-9.683761],[-6.020536],[-3.833187],[9.117724],[-4.257152],[2.351098],[4.495373],[7.976194],[-0.972344],[-3.609131],[3.688927],[-1.733301],[-8.155381],[-1.975886],[9.672534],[-4.082793],[3.672976],[-2.781994],[0.186197],[-4.957159],[6.878223],[-5.890076],[-4.519932],[-6.076934],[-9.765952],[7.846097],[4.621256],[8.405647],[-0.566306],[5.113255],[-3.291415],[4.257508],[-9.002986],[9.441641],[3.235106],[-9.883884],[-9.573229],[4.504594],[-1.708459],[9.771629],[4.273372],[-0.448167],[-7.350094],[-6.001274],[-3.966193],[-3.457735],[6.182838],[-2.227283],[2.702360],[-9.635889],[1.871354],[-4.273881],[8.172384],[-9.642577],[7.115978],[8.499792],[0.784137],[8.718313],[8.674242],[-5.996370],[-7.382387],[9.369868],[-0.471252],[1.107582],[6.230781],[-9.947325],[-1.342779],[-9.714028],[6.222900],[4.934153],[-6.915238],[8.369301],[2.984122],[-7.270211],[-7.470099],[-2.532882],[2.032956],[8.326679],[5.866261],[-7.666109],[-2.611447],[1.074197],[1.145921],[-8.925202],[-0.988696],[1.952053],[-9.054008],[-4.788489],[2.611474],[4.379755],[5.273115],[-0.727639],[4.827147],[-8.133378],[1.230447],[6.429213],[-8.555877],[-0.906440],[1.097003],[-0.783076],[4.902919],[-8.332904],[-2.029545],[6.891273],[4.443188],[0.894487],[-9.286764],[-1.971106],[6.459566],[-8.811467],[1.010279],[-6.417414],[-9.978243],[6.441702],[-5.580502],[1.296485],[3.132058],[5.402798],[9.893463],[7.665146],[9.284474],[5.060331],[6.090038],[2.219800],[6.335245],[5.341166],[-7.860035],[-6.222059],[-5.265089],[-5.778060],[1.791258],[-2.989100],[8.853789],[-4.768920],[-4.598660],[-9.295037],[-3.940142],[5.012127],[9.634882],[4.971870],[-7.733993],[2.217414],[-7.302143],[7.376322],[8.500307],[9.540996],[-6.538928],[3.289133],[-0.546348],[-3.693936],[3.460775],[-4.581381],[-6.590357],[1.934331],[9.376966],[-7.157062],[4.117931],[-0.728550],[4.916747],[6.398760],[7.584608],[5.673052],[-8.401001],[3.520218],[-2.781028],[-6.640133],[-3.222575],[-3.839069],[-1.763284],[-5.906565],[-6.167328],[-2.759978],[-4.774125],[8.161114],[-6.102476],[-1.137944],[-9.225636],[0.659853],[-5.169074],[8.505048],[-2.051178],[3.826629],[-2.066678],[-5.879483],[2.051681],[-8.244451],[4.112655],[-6.611911],[9.393001],[-0.774017],[-9.959772],[2.191563],[-2.451936],[9.679359],[-7.776131],[-3.559135],[-6.845445],[7.283344],[9.741487],[-0.617760],[1.609211],[-1.086921],[9.608254],[-3.528382],[-8.404088],[-6.377384],[-8.225645],[1.821248],[9.135154],[0.368432],[5.698117],[-8.118980],[3.828155],[2.308786],[5.715722],[-1.839457],[-4.171721],[-4.462075],[9.116446],[8.304491],[7.086095],[-0.211382],[8.169225],[-0.711330],[-4.482094],[-7.255761],[4.224526],[-3.830832],[9.267767],[3.420652],[9.661069],[0.154326],[-0.275957],[7.771918],[-0.684065],[-9.839751],[-4.852249],[0.164355],[-6.788772],[-2.103513],[-8.640638],[8.146421],[-2.812773],[-9.729241],[7.610937],[-9.701038],[5.107148],[-2.281180],[6.301058],[2.668512],[-0.171409],[5.121406],[-2.071729],[7.017039],[0.279582],[-7.320542],[-8.024196],[4.868532],[8.473664],[-8.460522],[-0.343326],[6.005499],[-7.604981],[4.787376],[0.843982],[-0.910768],[-5.293005],[-2.867115],[-9.738397],[-7.216741],[-1.690587],[9.220483],[-6.628364],[7.391755],[9.667834],[-3.674908],[-7.456692],[8.523837],[5.638684],[2.971142],[-5.346220],[2.371374],[4.062831],[4.257734],[6.410853],[7.007500],[-1.431577],[-3.140608],[-6.102365],[-6.696445],[-8.527717],[8.646608],[-4.428935]], dtype = "float32")#candidate|4002|(825, 1)|const|float32
const_4003 = relay.const([-4,-5,-6,-9,3,-6,10,-8,-10,-1,8,-6,10,-5,9,-5,7,-1,4,-5,9,5,-7,-4,-2,3,-9,-6,-9,4,-5,10,2,4,-3,-4,-2,-2,1,-5,-3,3,-7,10,4,-5,6,10,9,3,-4,-6,5,-5,-4,-1,9,10,7,-4,-4,7,-4,-8,-2,7,-8,-2,1,-3,-8,-5,-10,-4,2,5,5,-8,10,4,-6,8,5,1,9,-4,-8,-3,3,3,-3,3,-2,-9,-6,-6,5,10,-6,-6,7,-2,-9,1,-2,7,-7,-5,3,3,8,-6,7,-1,-9,8,10,-10,6,-1,8,-6,-2,5,-7,-7,-10,-8,-8,-10,9,-4,-9,-8,-6,3,-8,-10,-2,-8,-3,-5,-7,-10,3,4,9,9,-2,2,5,-3,-6,5,-6,-8,7,4,10,1,-5,5,6,-1,-10,-6,10,-10,-2,4,-10,-9,-10,5,8,-1,-2,8,-10,-6,-3,7,-2,10,4,4,-8,4,-7,-8,-4,1,-7,6,9], dtype = "int32")#candidate|4003|(195,)|const|int32
var_4004 = relay.var("var_4004", dtype = "uint8", shape = (390,))#candidate|4004|(390,)|var|uint8
call_4000 = relay.TupleGetItem(func_1505_call(relay.reshape(const_4001.astype('float32'), []), relay.reshape(const_4002.astype('float32'), [5, 165]), relay.reshape(const_4003.astype('int32'), [195,]), relay.reshape(var_4004.astype('uint8'), [5, 78]), ), 6)
call_4005 = relay.TupleGetItem(func_1510_call(relay.reshape(const_4001.astype('float32'), []), relay.reshape(const_4002.astype('float32'), [5, 165]), relay.reshape(const_4003.astype('int32'), [195,]), relay.reshape(var_4004.astype('uint8'), [5, 78]), ), 6)
output = relay.Tuple([call_3998,call_4000,const_4001,const_4002,const_4003,var_4004,])
output2 = relay.Tuple([call_3999,call_4005,const_4001,const_4002,const_4003,var_4004,])
func_4008 = relay.Function([var_4004,], output)
mod['func_4008'] = func_4008
mod = relay.transform.InferType()(mod)
var_4009 = relay.var("var_4009", dtype = "uint8", shape = (390,))#candidate|4009|(390,)|var|uint8
output = func_4008(var_4009)
func_4010 = relay.Function([var_4009], output)
mutated_mod['func_4010'] = func_4010
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3132_call = mod.get_global_var('func_3132')
func_3133_call = mutated_mod.get_global_var('func_3133')
call_4019 = func_3132_call()
call_4020 = func_3132_call()
uop_4040 = relay.log10(call_4019.astype('float32')) # shape=(16, 112)
uop_4042 = relay.log10(call_4020.astype('float32')) # shape=(16, 112)
output = uop_4040
output2 = uop_4042
func_4051 = relay.Function([], output)
mod['func_4051'] = func_4051
mod = relay.transform.InferType()(mod)
mutated_mod['func_4051'] = func_4051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4051_call = mutated_mod.get_global_var('func_4051')
call_4052 = func_4051_call()
output = call_4052
func_4053 = relay.Function([], output)
mutated_mod['func_4053'] = func_4053
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1938_call = mod.get_global_var('func_1938')
func_1940_call = mutated_mod.get_global_var('func_1940')
call_4108 = relay.TupleGetItem(func_1938_call(), 0)
call_4109 = relay.TupleGetItem(func_1940_call(), 0)
var_4110 = relay.var("var_4110", dtype = "uint64", shape = (11, 15, 12))#candidate|4110|(11, 15, 12)|var|uint64
bop_4111 = relay.minimum(call_4108.astype('uint64'), relay.reshape(var_4110.astype('uint64'), relay.shape_of(call_4108))) # shape=(11, 15, 12)
bop_4114 = relay.minimum(call_4109.astype('uint64'), relay.reshape(var_4110.astype('uint64'), relay.shape_of(call_4109))) # shape=(11, 15, 12)
uop_4127 = relay.tan(var_4110.astype('float64')) # shape=(11, 15, 12)
func_3328_call = mod.get_global_var('func_3328')
func_3330_call = mutated_mod.get_global_var('func_3330')
call_4130 = relay.TupleGetItem(func_3328_call(), 0)
call_4131 = relay.TupleGetItem(func_3330_call(), 0)
func_3575_call = mod.get_global_var('func_3575')
func_3577_call = mutated_mod.get_global_var('func_3577')
var_4140 = relay.var("var_4140", dtype = "float32", shape = (126,))#candidate|4140|(126,)|var|float32
call_4139 = relay.TupleGetItem(func_3575_call(relay.reshape(var_4140.astype('float32'), [126,])), 1)
call_4141 = relay.TupleGetItem(func_3577_call(relay.reshape(var_4140.astype('float32'), [126,])), 1)
bop_4146 = relay.less_equal(uop_4127.astype('bool'), relay.reshape(bop_4111.astype('bool'), relay.shape_of(uop_4127))) # shape=(11, 15, 12)
bop_4149 = relay.less_equal(uop_4127.astype('bool'), relay.reshape(bop_4114.astype('bool'), relay.shape_of(uop_4127))) # shape=(11, 15, 12)
output = relay.Tuple([call_4130,call_4139,var_4140,bop_4146,])
output2 = relay.Tuple([call_4131,call_4141,var_4140,bop_4149,])
func_4162 = relay.Function([var_4110,var_4140,], output)
mod['func_4162'] = func_4162
mod = relay.transform.InferType()(mod)
var_4163 = relay.var("var_4163", dtype = "uint64", shape = (11, 15, 12))#candidate|4163|(11, 15, 12)|var|uint64
var_4164 = relay.var("var_4164", dtype = "float32", shape = (126,))#candidate|4164|(126,)|var|float32
output = func_4162(var_4163,var_4164,)
func_4165 = relay.Function([var_4163,var_4164,], output)
mutated_mod['func_4165'] = func_4165
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1844_call = mod.get_global_var('func_1844')
func_1846_call = mutated_mod.get_global_var('func_1846')
call_4173 = func_1844_call()
call_4174 = func_1844_call()
func_2598_call = mod.get_global_var('func_2598')
func_2600_call = mutated_mod.get_global_var('func_2600')
call_4180 = func_2598_call()
call_4181 = func_2598_call()
output = relay.Tuple([call_4173,call_4180,])
output2 = relay.Tuple([call_4174,call_4181,])
func_4182 = relay.Function([], output)
mod['func_4182'] = func_4182
mod = relay.transform.InferType()(mod)
output = func_4182()
func_4183 = relay.Function([], output)
mutated_mod['func_4183'] = func_4183
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3311_call = mod.get_global_var('func_3311')
func_3312_call = mutated_mod.get_global_var('func_3312')
call_4228 = relay.TupleGetItem(func_3311_call(), 0)
call_4229 = relay.TupleGetItem(func_3312_call(), 0)
output = call_4228
output2 = call_4229
func_4232 = relay.Function([], output)
mod['func_4232'] = func_4232
mod = relay.transform.InferType()(mod)
mutated_mod['func_4232'] = func_4232
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4232_call = mutated_mod.get_global_var('func_4232')
call_4233 = func_4232_call()
output = call_4233
func_4234 = relay.Function([], output)
mutated_mod['func_4234'] = func_4234
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4271 = relay.const([[[-0.944242,6.537026,-8.013560,9.638405,-4.159805,4.872897],[8.140422,5.639515,-4.105352,-9.173655,-2.736203,-5.109354],[9.751276,4.269754,9.124519,-1.146334,-6.497103,-1.292463],[6.049623,4.673472,1.293020,9.186117,4.151219,7.131318],[-9.772821,5.398179,6.331262,8.127249,9.047980,-4.214725],[5.633529,-8.474089,6.717981,-5.522670,3.607924,-6.671136],[8.455886,1.518055,5.340516,-6.315085,-3.052814,-2.517864],[4.812559,-1.247494,-1.067652,3.102274,7.509268,-0.144263],[-5.380279,6.181003,-0.202167,1.837477,7.443897,-2.766129],[9.645601,-1.956816,-0.828850,3.479530,5.445326,2.583443],[6.880424,1.416062,-2.655719,0.012164,6.907944,-3.712986],[-9.398430,3.853371,-9.437219,-2.602078,-9.669461,6.678175],[0.222787,-8.408054,-3.155814,2.416655,-8.384478,-3.946288],[-3.143332,-6.737890,-8.204788,7.540106,-2.295815,-5.440655],[-8.176063,-4.470936,-5.725087,-4.925924,1.744508,-9.147519]],[[-3.153067,0.638201,-3.979971,2.098261,0.382499,-7.060151],[8.385292,-0.160141,-3.888801,-4.610291,-6.447878,3.390960],[9.081355,-4.843588,-0.644686,-3.143696,-7.955233,-0.976580],[-4.933491,3.198216,3.232187,3.691990,8.760327,-8.462347],[0.009748,7.138496,5.742900,-3.935149,-1.016215,9.202749],[9.501815,9.962840,5.592319,-9.255516,3.999668,1.865185],[-0.739531,0.111318,6.021853,0.229180,7.368386,-6.889772],[-0.427975,3.641216,2.861911,0.971273,-3.858148,3.209487],[-2.051881,5.030931,3.155292,-2.964847,-7.910781,-7.165761],[3.759854,-0.111355,-3.611676,-2.299784,3.624930,5.731092],[-2.561639,0.391972,1.646596,8.740404,-0.618221,9.788825],[4.001304,0.665669,-3.603965,4.304834,-0.619269,-2.731508],[-4.325601,5.735568,-4.874737,8.288758,0.671153,5.701814],[0.004091,1.486855,-9.609511,0.374166,-3.409434,5.026109],[-7.043695,7.365011,-4.961512,3.668731,-1.800519,-5.761065]],[[0.156096,0.524422,-5.094541,6.763897,1.292172,8.083239],[-1.361460,-0.602909,-6.747163,8.038195,-3.084526,0.629161],[-4.454077,-2.981580,7.521370,5.186856,-0.558727,7.222492],[1.867919,-3.235842,3.111883,-8.249023,-9.391231,1.248713],[-0.963846,-9.419995,3.930327,7.947415,-8.427211,-3.335331],[-0.969229,1.477988,-0.346538,0.533536,5.729035,3.711905],[-5.116815,-2.482024,-3.857664,1.559496,-7.363893,5.534146],[6.338945,6.368218,-8.492285,4.300164,8.186275,7.718470],[7.565176,-9.163592,-9.590883,-1.404424,4.025322,-8.012026],[-5.788287,9.981870,7.245097,-2.648921,1.018468,-2.876861],[5.930534,2.457818,-8.455218,-1.898343,1.995396,4.855065],[-5.485090,-3.213576,-4.516008,5.299322,-7.374158,-2.480946],[-1.585445,-9.072054,-3.056219,3.032463,-9.466750,3.054357],[-1.057833,8.936752,-6.979250,3.500537,-8.553582,-2.817372],[-7.519884,8.920854,-3.060742,-2.290169,-6.762774,4.935367]],[[-2.468686,-7.692616,8.818494,5.279966,8.251417,2.352029],[9.355477,9.704547,3.297708,5.206186,6.863627,-8.269724],[-7.799890,-3.958612,-1.321883,2.553298,8.273192,9.095847],[1.063902,-1.028488,0.052072,-4.990949,-1.231725,-3.329249],[-9.195263,-9.711230,-8.846797,5.636154,6.951688,6.969819],[4.586074,-5.822304,-1.350510,8.019635,6.920136,2.201261],[-6.878864,1.681161,6.608612,-3.772590,2.346938,4.979040],[0.783090,-1.235551,0.045044,-7.396378,8.655072,1.843008],[5.457884,0.835253,-8.017436,8.719668,2.566881,3.469180],[2.418694,-5.440530,-0.210841,-6.009178,-6.789460,7.598647],[8.064781,9.450083,-6.933328,-7.450225,3.163860,-6.160064],[-8.789781,-3.823510,4.334450,-7.214594,1.854981,1.235344],[0.142981,-2.793327,5.584516,5.490170,0.359563,3.572817],[1.495753,3.743403,5.429594,-0.711300,-8.769293,7.828377],[-3.306999,-9.245292,-9.928553,-7.325355,7.112821,-8.863440]],[[-8.301578,7.097632,-8.422866,3.857763,1.607048,-6.658588],[6.426488,-8.321910,-0.026262,9.892449,-2.917560,-1.307467],[1.276988,-6.794042,9.698038,6.556543,-8.154240,-9.303103],[7.690157,-9.289309,-0.082836,-2.915460,3.853981,9.414429],[-5.475747,-2.698505,-2.101380,-3.866323,8.717999,2.442489],[0.906017,-9.891875,2.395716,-1.588961,8.443305,1.184635],[3.753654,1.923048,6.113673,-8.745315,4.307443,-0.787597],[-5.790163,1.682729,2.575810,-3.706428,-9.928377,-6.963496],[6.379961,-2.593889,9.642889,5.228876,3.489059,2.893704],[3.891391,0.828727,-0.327666,5.102028,-5.007759,2.608189],[4.602439,-6.913999,-1.004303,8.565841,9.477207,-6.609951],[-8.641228,2.290821,-4.596566,-8.164762,8.026283,-2.828477],[4.472191,-1.467197,4.597997,7.551287,5.624806,-5.954448],[-5.460067,-7.492883,9.489081,-4.309812,-4.538421,-0.011617],[-6.471194,-5.369553,-9.543201,5.347742,-0.408768,3.914788]],[[6.014404,-7.596212,-1.194172,4.869852,9.335260,-6.077017],[-8.805606,-3.605965,-1.566494,-5.047860,1.453038,-7.678351],[6.540764,0.317517,8.584904,2.919508,2.570029,-4.922304],[-5.667631,-4.161965,6.669652,4.234078,6.433080,-1.098159],[-6.451807,-5.967745,3.120973,4.883821,-2.411164,5.005640],[2.139894,5.486346,-2.149734,-1.765681,5.438091,-0.649368],[7.038885,-0.161141,5.633155,-0.706110,2.405606,7.624705],[-6.141721,-5.932984,1.491551,-2.835591,-8.103110,0.904075],[6.239855,-8.082798,-0.789789,3.712222,-9.152650,-4.084327],[-4.877957,3.775225,8.703053,4.136094,9.593746,9.829528],[3.758815,4.960921,7.725405,-4.276727,-3.588002,2.916943],[-5.650233,-7.889732,-4.014185,-4.031278,6.902233,8.892590],[7.059412,-2.502624,-2.656819,1.842372,-2.860476,9.139417],[-6.634982,-0.388179,-8.362634,0.066558,0.893625,2.465275],[8.552877,-9.671149,9.015965,1.734143,-1.216386,8.399422]],[[9.858581,-2.966306,9.532553,2.954684,-7.653201,-9.643095],[1.774982,3.213561,9.099243,2.043883,-8.230594,-4.413888],[6.605422,-5.272802,8.299050,-1.480096,1.841238,-1.754977],[-4.553779,-9.359055,-1.306587,-4.202910,-1.311920,-2.316156],[-4.551785,-8.675722,2.337875,8.432252,7.576271,1.355490],[9.121362,0.961528,-9.790406,-0.480902,-4.701227,0.372375],[6.283619,-2.040613,3.247582,-8.809764,-3.289682,1.542011],[1.001463,-6.489186,-5.868120,5.461782,0.519547,-1.777900],[5.056399,8.229016,3.190049,-2.813199,-9.814987,3.433004],[4.917244,1.281639,-2.989499,6.282482,5.259679,-3.367470],[6.559932,-0.913821,2.480717,1.211813,3.802778,-1.511527],[9.945668,3.261202,3.895821,-9.593849,-2.824695,7.609171],[-8.999591,-9.571711,-8.036442,8.139279,2.101559,0.808717],[5.858901,5.731109,2.979773,3.033910,-1.171464,-8.753238],[1.897927,-3.007210,-8.690314,2.470699,-0.593228,9.998422]],[[-2.101509,3.106816,-8.780624,-7.097104,2.325550,-9.394900],[0.559235,0.909220,-9.368289,-9.203973,-4.705573,-1.519254],[-1.409080,8.578740,3.741217,6.373100,-8.616605,7.322838],[0.758086,-7.123875,7.404272,5.097018,-8.844624,-4.714309],[-5.342578,6.506589,7.318070,-2.278083,8.767968,2.824840],[-5.865568,-5.360791,6.018526,6.011796,-2.854508,7.909431],[-5.899692,-1.284085,7.820624,5.526693,9.169378,6.292220],[-0.535553,-8.872287,2.970859,9.978118,8.877677,-8.975788],[2.543487,1.189278,9.369695,-7.127814,-2.052172,7.504753],[9.188699,3.565859,5.873053,-1.462550,-3.288973,6.057734],[-2.990167,9.670768,-0.024756,-8.123123,2.438532,8.382775],[-5.223064,-0.878215,2.253104,-7.583303,1.085954,8.177141],[-1.025315,-7.997847,8.475261,7.242166,-3.880034,9.373145],[-2.925437,0.632753,9.569103,2.351566,-2.482971,-4.590675],[8.700381,-6.350390,1.107336,4.673680,6.700017,-1.775375]],[[9.951697,-8.761635,3.770472,-9.126403,9.149937,2.307527],[9.843411,-3.017975,7.628492,1.337717,-1.206424,0.839114],[2.066006,1.205486,-3.541031,4.434490,9.486798,-8.233167],[9.460354,5.532128,-9.323538,-2.024237,1.641373,8.222271],[1.445785,3.081288,-5.351199,8.730685,5.982165,7.254438],[3.558907,0.067889,-2.183194,7.070361,-0.133006,5.826229],[1.689746,-4.478490,-5.062601,9.604798,-7.452536,6.166414],[6.512703,6.371187,-1.647204,4.910575,2.582427,-5.144432],[-5.475981,-6.772839,-5.235320,7.882077,3.631949,-6.769880],[8.864222,2.882781,-5.332868,-4.555924,-3.227120,-6.195346],[-2.920001,-8.818015,-7.692901,-3.268590,-0.374431,-5.968300],[-2.598159,-9.826479,9.403657,0.924139,4.465510,9.758393],[-9.191770,3.914929,7.751293,8.754756,4.901443,1.213532],[-3.964235,-2.449198,-7.698795,-3.627110,-5.550934,-5.229411],[8.678496,-4.722167,4.140578,2.403963,-2.470856,-0.554490]],[[-8.681669,5.975825,6.046198,-7.526693,-2.826284,-4.053673],[7.992429,6.229244,3.104500,8.859589,-0.487363,8.217700],[6.861760,4.786241,-9.389050,4.905757,2.433002,-9.468205],[-6.570739,-4.381885,-3.766839,9.170777,8.848922,9.813748],[5.653109,-7.971222,2.739896,7.289288,-4.066199,-3.643366],[-0.229339,4.610342,-9.158818,-2.450637,-4.099523,-4.624223],[2.791679,-6.579065,-1.242266,6.813224,0.802772,3.090248],[-5.479532,6.913452,3.573460,9.453037,-1.749958,9.447917],[-4.314191,7.775324,0.938684,9.637647,0.538784,9.615212],[-1.505517,9.729262,-7.281902,-8.575537,2.460959,5.922018],[5.859184,-2.369979,-6.750231,-8.088515,4.541841,1.885048],[2.375472,4.200821,6.249157,6.669469,-1.258162,9.395690],[7.121056,9.288114,4.368431,-3.830634,6.771680,-6.271505],[-8.848754,-0.109060,-3.270121,-0.076864,6.839091,1.775908],[2.136705,-0.766320,2.339720,-8.777750,6.815924,-6.199424]],[[3.988647,2.659304,1.345391,-6.541365,-2.833244,-2.908227],[-0.137708,7.573040,-1.560763,-7.952777,4.643379,0.812503],[-5.904860,8.660396,5.154173,7.380378,-6.678830,0.724717],[-6.882220,-6.934583,6.074611,-1.872959,2.737392,2.436940],[-9.899287,6.003442,-6.585114,-7.653443,5.780453,-1.822349],[7.807786,5.816938,-2.518723,-7.717816,-7.029634,3.184859],[6.568951,3.972630,6.545670,-9.418141,9.385091,0.883556],[4.107926,-9.084485,-7.852616,7.896876,-5.492478,4.124211],[-4.044072,-6.080124,-5.925522,-8.839390,4.593890,9.263043],[-1.198571,-0.126727,8.829238,9.388998,1.588730,2.623102],[-0.137346,-2.292213,8.044972,6.518151,4.760318,-4.569720],[4.794526,2.313606,7.407224,-3.511839,-6.077992,7.810816],[-6.963188,-1.872545,-4.015062,3.741930,5.771835,-1.936749],[-7.882511,-8.106005,6.689605,8.465589,2.293894,0.434126],[5.817055,-0.887242,-8.415586,-7.500928,-0.759208,-5.449746]],[[-4.368806,8.663364,3.136385,4.822139,1.573061,0.290978],[-6.127188,1.015559,0.381522,-8.665024,-4.382217,2.699752],[-3.791906,-6.366719,-6.209527,-7.815925,-3.988281,-4.141754],[6.742404,4.371281,8.149006,3.888579,-1.195704,2.096126],[2.819225,-1.728227,-0.182872,-3.119323,2.460984,1.242036],[8.679413,2.887125,2.445815,-1.970803,6.121440,1.944132],[-6.250102,-4.415449,-5.801205,3.486090,-6.824488,3.678741],[8.103375,6.086198,-1.793049,-8.484228,-7.344408,-6.956338],[-1.130636,-1.235690,-1.833487,-2.881082,-0.589821,3.675282],[3.729164,-4.436795,6.964004,-1.891475,9.646289,9.694317],[3.498148,-6.130199,0.201651,9.827355,7.228193,8.160063],[-4.813044,-0.202670,9.229374,4.404949,-3.015869,-9.954118],[6.094675,-8.688583,-9.293984,8.118869,-9.559804,-7.915558],[-0.290516,6.945552,6.505144,8.887814,-3.643104,6.540610],[-3.095926,-7.666862,-8.673987,-0.388569,-6.216185,5.457986]]], dtype = "float32")#candidate|4271|(12, 15, 6)|const|float32
uop_4272 = relay.cosh(const_4271.astype('float32')) # shape=(12, 15, 6)
func_2941_call = mod.get_global_var('func_2941')
func_2945_call = mutated_mod.get_global_var('func_2945')
const_4279 = relay.const([1.373670,4.584051,5.240202,1.666461,-4.669920,-1.235865,8.319179,1.098764,3.019064,3.201832,4.028754,-8.026439,-6.341241,2.045036,-0.212719,6.364849,9.888761,-8.306007,4.186701,-2.632630,9.511729,0.223041,3.542587,-8.407233,2.663579,-5.947874,4.425478,8.146114,-5.991302,4.640384,-8.020829,3.903001,2.817346,-7.902446,1.046985,1.610411,0.526661,1.712691,3.885797,-7.574832,8.095309,2.829568,5.318668,-8.825030,0.622762,-5.503911,-5.680902,-0.767970,-7.571785,8.618327,4.426858,-3.041543,7.260621,9.510227,7.637041,5.684078,5.481847,1.595914,-1.417130,-2.665486,1.833555,3.414437,-5.682014,4.772897,-8.394341,1.089459,3.609637,-9.639292,8.503557,-6.124330,8.476516,-6.334024,-3.906901,-8.964025,9.054334,8.644784,2.933881,2.828071,-4.228815,-1.954759,0.874807,-5.315154,2.729393,8.287975,-0.814772,6.612702,-4.329472,-4.243821,9.936109,6.650745,-0.322771,4.200043,7.309183,8.951920,-9.835111,-6.371313,4.074521,-5.544233,8.486676,-5.935799,7.042029,-3.442594,7.101927,6.347737,4.443639,6.125824,8.287283,3.158113,9.036159,-2.264010,5.926605,5.088329,0.826146,4.192418,-8.778118,-7.278050,-2.510556,4.759832,-3.171206,-3.673475,6.574723,4.782001,7.865420,5.176471,9.768315,-5.757940,-3.390419,-6.214006,9.773152,-9.421264,3.516785,-4.006459,6.405642,3.145465,-7.200266,3.265893,1.693470,-7.961704,-6.167624,-8.236803,5.831578,-5.712699,-8.022829,8.831251,-7.006277,4.424534,-4.494032,4.040596,4.305546,9.919544,2.425947,2.466908,1.650099,9.649116,0.646923,-7.904000,-5.776643,-9.264769,9.311668,-2.462265,-8.159831,5.635658,3.814339,-6.330316,2.553427,-2.086629,8.867151,6.876409,3.415136,-5.269805,-9.740192,6.646003,0.629222,-0.225064,4.798588,-0.457333,-2.519770,1.108715,0.277813,7.295968,7.665504,2.370952,8.191483,-4.142528,8.970903,-6.711471,0.791827,-3.689288,7.664908,7.702536,8.620681,-7.851658,2.104400,-6.154892,-4.110234,6.910818,9.735527,-1.998906,4.153473,-4.928122,0.489091,7.468570,-6.156543,2.634935,-7.299645,7.224681,-1.418033,4.470150,8.807252,-0.427133,7.133679,3.069433,-5.716532,-1.194372,-6.678160,-8.727155,2.374340,-8.320283,1.469806,6.622964,-8.353341,-5.877293,8.683399,-5.586703,4.743178,-9.512575,-6.024808,7.152059,5.700000,5.683000,-7.033304,0.532513,3.214011,-7.423608,0.574501,-3.301486,-8.893456,-4.902227,-1.324328,-4.056200,-7.606656,2.671140,-9.488230,5.688093,-3.418599,-8.241541,6.310046,-9.635040,7.069255,6.604641,-9.054873,1.661486,-7.246403,-4.786446,-0.795027,-3.892553,0.132351,-5.862885,1.411725,2.879718,-6.776855,-0.192796,3.864663,-3.127530,0.363686,7.606176,9.650387,-1.442227,5.329868,-0.981003,7.791507,-9.242539,-6.376798,8.840496,-7.679871,7.466810,-0.022428,-8.039774,-4.752483,-1.639573,4.784341,-0.662868,-2.964050,-3.497065,0.242211,-3.596677,-8.513030,-0.879475,8.095862,-6.404308,-5.666200,-8.535639,7.638983,5.481741,2.090495,-4.110347,8.931582,6.337620,8.110237,9.314255,-0.434926,-2.403232,-3.000695,-1.730981,-7.008424,-4.823253,-9.342984,0.399518,5.586470,-4.119101,-3.377824,0.958168,1.644743,-3.998676,8.302952,0.609500,6.848770,-3.504342,-7.957057,7.592677,3.354076,-6.131260,-7.794612,1.559223,-4.049925,-1.812173,-5.471053,-1.820444,-7.281008,2.853154,0.345211,1.560323,-3.699488,-0.591744,-2.025316,0.348600,8.496663,-6.807487,2.875348,-6.059921,6.756505,-3.943737,-7.118066,5.184433,0.467827,-7.843833,0.415678,8.535716,2.293276,5.375933,9.145529,4.145145,-3.000624,-4.893257,-1.201226,4.574550,2.706441,8.253394,-6.402695,-9.750582,0.988770,-7.723909,4.402612,-5.545727,-1.789893,-1.886031,-3.373598,-2.552388,1.422180,-2.320088,1.635507,9.990938,-7.856167,1.983925,1.532348,-6.031406,-5.958555,-4.375923,1.203506,4.192423,-2.539804,5.953844,6.440432,8.297505,6.873393,-7.591976,3.586175,6.874500,4.233527,-2.436182,2.521172,9.441790,-1.641497,0.133251,8.684446,6.977381,-0.140867,-3.494341,-7.052851,2.471171,-0.861199,9.635873,9.085449,5.774523,0.559389,-6.840430,-8.074142,-4.223184,4.597793,-7.316817,-4.763554,-1.455786,2.169225,9.068488,-8.001706,0.592230,-6.850407,-6.573586,3.981121,-7.206052,2.426646,3.358824,3.414257,-0.565656,9.871450,4.547698,-4.523993,6.037339,-7.296494,-3.763610,6.708039,0.911293,-8.606743,6.470755,9.818542,-5.501866,-5.805707,0.306571,5.645658,-7.806569,-2.358632,7.068271,1.000083,-5.282986,1.551259,-7.846951,-3.052891,-0.795884,4.397778,9.512016,-5.315130,-3.136564,5.871211,-8.321574,0.606967,-7.672768,-9.136586,3.244674,-7.659803,1.530079,-0.299430,-0.290137,-5.043225,8.495497,-5.801949,-1.640503,-2.942071,-4.267590,-3.598039,-4.406930,5.028194,-6.209011,-0.819249,-5.159295,8.121706,-4.169071,2.006356,0.863588,-8.140218,-2.598357,1.832992,3.573158,8.377181,7.291044,-1.908043,6.725557,-6.573843,0.972480,8.430837,9.625343,4.707209,-5.477788,-3.597468,-0.925933,-6.479393,-8.157348,-5.846683,1.558295,9.287534,1.792463,3.863537,4.698871,-1.951558,-8.941420,-6.702836,0.154946,-0.335080,3.208116,9.434651,2.865775,-5.120009,3.572156,8.213631,-4.484996,8.978742,-1.311840,-1.817968,7.673058,-2.147910,5.643786,8.763069,-0.458713,-4.005322,5.269957,-7.269877,-6.383380,-9.823940,6.190156,-3.479721,-1.347561,0.584119,-1.977456,-7.167882,9.492855,-7.941790,-2.787021,3.270962,3.189503,-3.063350,7.953654,2.638803,2.959278,1.086584,6.635004,-9.111617,0.954830,-4.933593,0.085141,4.042976,3.503365,3.580163,-6.729964,-7.895152,8.847872,-0.278996,5.887815,-5.660555,2.969998,6.556736,6.259115,-4.055181,-8.894309,3.932837,8.932930,-7.048575,-9.659802,-7.839052,-2.203706,-7.640676,8.118865,-5.869445,-0.517470,0.188296,-6.505876,-8.870885,-7.520177,-1.796910,5.401206,5.408556,0.686840,2.562592,2.430958,-4.869413,-5.381844,4.198542,3.825287,0.469881,-7.374703,7.004681,3.031467,3.754440,-6.172136,-5.485456,7.142698,-9.994374,2.620546,-8.399105,-4.035898,-5.765701,6.715001,-8.406779,6.395998,-6.088359,7.789139,-2.241924,4.091826,-7.881852,-6.865850,1.515292,-4.898508,-6.660525,8.271091,1.388675,2.768085,-4.900524,2.110266,9.136469,-1.661847,4.401513,2.378236,3.119186,5.814885,-9.495866,-9.594237,0.001297,4.866912,2.329071,-2.638784,-9.588895,-9.218794,-9.928656,-7.856193,9.693891,7.174170,-2.405145,-4.226706,6.883306,2.188582,4.028657,1.550835,9.808362,-6.754959,7.338952,6.069882,-3.212776,-1.643038,4.465892,-9.118549,-8.395147,8.213350,-8.318258,-7.474460,7.446403,3.503757,1.345672,0.768073,-1.953136,0.884400,-8.598444,6.480062,5.927872,3.184896,-9.513988,9.473315,1.790415,5.389911,-9.638690,6.237412,-0.278469,8.151489,6.665482,-7.306858,-2.294523,5.520748,-4.140094,-0.576153,1.357053,-3.155907,8.190908,-4.029228,5.660587,4.401906,9.011661,8.190056,4.558410,3.827911,-6.059984,-1.218814,-1.492518,1.540509,2.039458,-3.718422,-6.925175,-8.256472,-4.589837,-3.438896,8.917315,7.413147,4.713633,-0.182286,4.137329,3.978997,1.962714,8.879812,-0.637792,-5.103698,-7.914670,-0.785340,8.952772,-7.247316,9.227343,1.094735,-9.048306,9.033343,-7.792940,9.261522,3.743392,2.421413,-8.885550,-1.959083,9.408194,-6.559588,0.335594,-2.953881,-7.451883,-1.606126,-1.647564,-8.165313,4.364619,-4.694219,3.481211,7.345273,-4.466417,9.765311,2.526765,1.012179,-7.484550,-5.238775,-1.331710,-3.992561,-9.362255,-7.437545,9.130900,7.854591,-8.958665,-9.259992,1.954332,5.906525,-3.917869,5.558863,-9.643823,-3.315794,-8.070934,8.472511,-8.233321,0.181544,-3.191646,3.043362,-6.614661,-7.191747,-9.779865,-6.877959,4.281572,9.881682,-9.973391,3.247349,-7.601096,3.206433,1.303077,9.775861,2.946436,-1.055024,4.370148,6.553731,-8.323590,-1.344556,-0.512209,2.613545,-5.748895,2.665438,5.114951,-6.157093,-6.631862,-2.278966,-8.821299,5.764380,3.382371,5.448478,9.435489,-2.897753,5.027477,-8.243067,-6.151349,9.203608,8.809505,6.893170,7.400359,-2.580182,-5.045687,0.857433,-1.815731,-7.187317,-2.251182,-7.332844,-4.896515,-8.383430,-2.997868,3.858435,-5.872346,4.516195,4.713763,-3.464143,-8.975000,-2.760330,7.049604,4.408425,8.757603,3.353804,-9.116382,5.602169,6.488802,-9.045976,9.754508,-8.503739,-1.758663,0.652023,-7.094764,-5.557987,-2.914103,4.339337,9.412979,9.718040,-9.053799,-5.008303,7.991884,8.231163,1.671804,-7.697151,1.922567,-1.424452,-8.578608,5.282308,2.619860,-3.508391,3.238317,-2.707910,-2.922304,6.971842,-9.520353,8.381052,6.036228,-1.899919,-2.250533,3.221815,7.830629,6.596505,3.240464,3.612068,0.731388,-8.338072,1.647647,4.977535,8.263447,5.764804,-5.409108,6.106457,5.421654,8.332513,-7.095514,-0.291408,-4.251302,0.579795,-2.804814,3.364868,-7.902574,-6.387170,-6.701720,-1.154927,-7.115999,0.820305,-0.854647,4.323794,0.698195,-1.921915,3.137200,3.915025,-5.542256,-8.561431,5.769267,-6.297073,4.591968,-5.483626,-5.774728,1.377334,-7.857226,-2.453373,5.060029,-4.248282,-8.680850,-7.314525,1.224348,3.671044,9.834400,7.267893,5.261959,-7.547664,-9.382923,-5.282679,9.214870,-6.702469,2.620110,7.036735,-3.039584,3.879013,-8.897325,-7.143411,1.908264,6.717821,1.041159,-3.377432,4.527144,-0.458535,0.897295,-8.939677,-4.784441,-9.335387,6.281791,5.860123,0.991856,-5.449802,-3.670881,-8.169514,6.417304,-2.038876,-9.226666,6.173196,-3.442122,4.457486,8.257201,-1.205340,-7.499565,3.042993,-9.008230,3.089775,5.317301,3.718555,4.421307,2.844335,-2.443500,9.947068,-1.490644,-9.724417,-3.772693,-4.625272,8.729930,-0.708777,2.971824,-9.183817,-3.124106,-3.397994,3.295948,7.885014,9.920711,6.555287,6.320695,-5.708621,-2.050286,-2.676213,-8.558793,-5.019033,7.734639,-5.968191,-5.958325,1.573877,-3.953758,-0.074693,4.925826,-1.358124,-1.097324,-9.775418,5.196447,-1.745660,1.607619,-6.045599,4.906293,-5.192486,2.985321,-0.662723,2.924026,-4.322947,8.452368,7.628562,1.840359,0.006860,-1.808177,8.801733,-7.391851,5.536838,-8.145457,3.983434,-1.658258,-9.305669,-1.299205,0.979290,-2.959965,-8.750781,-7.625450,6.723337,1.165082,1.102483,-0.183987,2.421696,-3.893441,4.238808,3.241438,6.551240,-7.780229,0.700597,-2.689344,-5.303897,2.842405,-5.172605,-9.799278,9.179480,-7.264308,8.633662,1.964099,4.023235,2.682460,-8.821225,0.176321,-9.897762,3.671696,4.485828,-3.576531,7.441429,-4.767293,6.636838,4.514152,-3.518724,-4.356896,-6.469823,2.813594,0.403727,-9.388012,9.660815,5.833479,0.301233,5.539105,-8.020916,-0.812973,6.767460,6.812437,-6.270231,3.948632,-5.832015,-5.967703,5.425139,-3.294700,7.117129,-3.983263,5.829903,-7.670513,8.644856,7.010147,-6.361233,1.318974,-9.035384,-3.904212,6.491366,0.239042,0.419973,-6.701007,0.584004,-9.972430,-4.304685,9.484765,-1.717443,-8.465858,-4.299163,-7.367346,-1.359442,-3.453668,-7.601564,0.317119,7.063662,-7.010852,-3.669190,4.996467,8.143283,-1.856714,6.602897,5.569575,-3.864682,2.513674,4.992203,7.137457,7.007280,-5.912185,-8.980438,8.702551,3.295054,1.672369,-9.088888,9.959545,-0.440306,2.799327,-3.444797,1.632173,9.183126,7.377900,-9.456551,-1.488601,-7.879388,-5.353194,-7.027632,-1.581338,4.330870,1.485238,1.768364,4.354448,7.944449,5.250573,-8.187439,-3.711550,2.489323,-8.721006,-2.360720,6.037594,-9.638543,3.985041,8.153882,-4.069472,8.304455,-8.381763,-2.649539,-2.185472,2.219362,2.167883,7.097984,1.319670,0.901631,-5.846079,-8.378734,7.203525,0.277491,2.171202,-7.975328,2.684063,8.385148,-5.739458,-9.344319,4.913417,-6.295998,1.687532,-1.305919,-5.593928,-3.852466,3.634002,-7.049128,8.521584,-8.173433,-5.750905,-4.571541,-3.325944,-7.098309,-9.305761,-2.487602,-2.913453,-2.879717,-3.369119,-5.083296,3.235374,2.626443,0.233659,4.136642,-3.540872,7.516402,-1.762275,-2.454603,8.909167,-2.406305,0.986770,-7.655989,4.384281,0.243282,9.778386,4.175017,7.021658,-1.977991,-4.955554,3.531121,6.632843,-5.925592,7.437960,-3.158809,2.716411,-2.966074,6.792413,-5.178220,7.002843,-7.958423,4.691984,5.713687,9.277494,9.506189,2.928755,-1.413264,0.859945,9.228384,8.241175,9.765354,-7.667705,-4.216433,-6.124865,-2.089718,-9.286391,3.311535,-2.845511,-6.788673,-7.039163,-0.149178,7.866960,-8.817301,9.484032,9.462190,1.917283,7.169523,-9.741680,-5.499495,-4.328210,-3.780996,6.598051,-7.528615,3.830691,9.999556,-6.454440,6.790214,-6.291127,-2.207724,7.217017,3.162469,-0.539375,-9.606679,-4.642153,-5.351703,-3.485067,5.713675,-7.284302,6.493400,3.400033,1.415329,-0.640133,0.295293,-2.449934,-6.456059,8.230791,-0.804394,-9.371940,-3.801329,1.757710,1.570889,9.609373,-9.475771,-3.457045,2.584083,-8.923727,4.140927,-0.055160,-1.531404,-3.854762,-3.655737,-6.619342,-8.676100,-5.365507,6.417051,3.979385,6.945637,9.175463,-1.051160,9.410008,2.027063,-4.456672,1.946821,8.429918,0.582001,-7.662215,4.166299,-0.908622,-2.777088,-2.657783,5.767491,-0.903639,2.245829,-9.560156,-7.814714,5.867350,1.129113,-5.047438,-5.099176,-7.945498,-4.841272,-8.584459,7.257928,0.034013,8.705097,7.525896,6.456112,5.914815,-4.292226,-2.240707,5.633196,-2.223741,1.116403,8.339010,0.547075,5.686011,3.293871,8.224492,-0.754316,-9.344067,9.305506,-3.280163,6.594202,5.890974,9.306049,-3.067233,6.592816,-1.683860,-4.331260,2.776303,9.617771,8.498094,-3.926802,-3.324347,9.127261,-6.716984,-8.320577,4.667126,-5.835082,3.796875,-0.466423,-9.849447,4.516891,-7.002108,7.415178,8.673084,-9.157063,2.146041,5.577713,2.412650,-6.493653,3.407374,5.015228,-0.462067,5.549742,7.638640,-3.680248,-2.969428,-8.757580,9.304726,-8.469897,1.702829,3.737550,8.555678,-8.114573,1.207534,-3.181539,4.302464,0.788754,3.893597,-2.885431,-8.608640,-9.163060,-5.383600,8.045396,-2.474377,-5.077001,-0.060515,-3.992025,-2.731124,-1.644767,2.226009,0.045229,-5.733083,0.504828,3.481502,0.680897,-3.284009,-5.914083,-6.629772,-5.497851,7.562990,-8.589338,-3.140357,7.309973,9.381376,-1.969554,-3.335717,-2.633382,-5.060191,-6.259703,5.542487,7.541995,-1.368588,-7.312123,1.449516,3.448757,3.196403,-3.333563,1.393435,-1.667974,8.798124,8.721411,-7.409980,4.033986,7.360807,6.925575,2.017271,-9.515769,-5.028439,-2.398305,7.267660,8.912679,-8.433200,-2.780665,1.166341,-0.194092,4.720406,6.824916,0.467818,-2.700368,-9.480485,8.627737,-3.719878,9.349075,-5.261787,-1.661795,-1.067461,-4.360500,5.883118,-3.130915,-2.116260,-0.248393,-4.798249,8.502396,-3.038483,2.340764,3.750016,-8.877621,-2.578005,4.077787,4.895136,4.868757,1.031893,-9.520793,-0.622533,1.656657,-2.991015,8.832322,7.747079,-9.419183,-3.046963,0.037581,4.468714,-9.064864,9.846753,-0.669361,9.914754,-5.030628,-1.519265,-5.275494,4.301160,7.356640,1.284648,4.616903,3.899379,-8.707910,0.837353,-4.981563,2.697393,-8.124862,-8.634066,0.585080,-2.905323,-3.127892,5.301396,-6.163709,-0.315190,-7.953549,-6.234339,9.592868,7.781687,1.543001,1.654213,8.633906,-7.751118,6.275983,2.676555,4.949639,1.757047,-1.551834,-0.950847,5.952048,-8.604043,-0.658383,3.641032,-1.714132,9.372655,3.363647,0.483463,6.272128,8.025321,-5.929335,8.082864,-8.435046,3.582125,3.954495,7.322214,3.984489,-2.629490,-0.560986,6.165716,1.901701,5.792420,9.133203,1.806965,-8.551743,3.666912,9.512135,-4.413573,3.981944,-6.470003,9.157795,-6.546388,2.748151,-1.488483,-3.494914,7.978062,-8.234921,9.691344,7.964115,-2.343956,2.401049,0.847039,6.264318,-7.629868,5.547182,6.654527,6.538321,2.302609,4.162485,-4.719914,3.744216,6.752977,-8.559263,5.324216,9.988976,-9.965605,-0.134908,-1.329047,2.980960,-8.390315,6.703643,-6.120699,8.899712,-0.787049,9.447894,7.278986,-0.489898,2.047234,4.786692,-8.181713,-1.586490,8.607711,-6.014018,-0.877658,-9.880470,6.219389,6.092790,-4.413184,5.434986,4.531326,-0.699758,-2.297895,9.035634,0.417617,-7.368504,5.973717,-2.091228,1.461000,-7.836668,6.462476,3.064904,6.563924,-2.829954,3.807587,-9.678162,-5.143351,0.733085,4.686722,-8.459197,1.575730,-3.528739,-2.182691,0.871917,-3.538063,9.267891,6.520148,-7.441123,8.963396,-3.032723,-1.706564,7.004213,5.292809,0.724393,0.646449,-3.573547,8.369845,-0.820434,1.705634,2.272613,4.709039,1.572447,5.580085,2.725880,-8.767334,-4.454896,-7.304105,-8.098370,-3.153843,-0.654749,9.402740,5.926521,-2.075687,-6.846095,9.436793,5.855654,8.208885,0.555588,-4.698206,6.530369,3.474600,8.786119,-3.347629,4.883726,-4.521691,-8.404044,-7.968807,-8.387461,9.205148,1.952379,-5.070127,-2.321264,5.363064,7.692881,-8.612112,8.099335,-3.572888,-5.984938,-6.316791,7.369016,4.165247,-5.770955,5.139028,-9.855042,-6.282832,-5.539882,-9.927617,-5.115080,-1.180165,6.385892,-9.487524,-6.594058,-8.823011,7.859647,3.442116,4.745674,5.350274,-5.956523,-7.810604,1.496354,-6.113401,6.319245,-0.937239,1.873762,4.258571,-4.468992,5.361726,-3.958911,7.147048,-3.981970,3.110993,6.415294,6.285131,9.315557,7.112304,-5.508753,-5.495019,-1.988589,8.053459,-5.495899,2.520473,2.460694,0.647694,-6.492387,8.605638,7.109111,-9.406783,9.700087,1.993703,5.146673,-9.524704,-2.157552,0.107235,6.224939,-8.807510,-1.790139,-1.634157,-6.457844,0.075947,-3.247597,2.836131,0.297269,4.146109,-2.618900,-8.058947,8.439441,5.059808,6.030241,-6.577344,-6.973982,-0.975595,-5.576296,-1.400875,0.667600,6.382623,-2.417394,9.817625,-1.851218,8.474796,8.252851,-1.424106,-0.700074,3.266359,2.719280,-0.034515,-2.602728,-9.808673,-1.330232,-1.016885,-7.279174,8.205274,-2.325961,0.178174,3.115056,7.094792,-8.881668,0.895356,-3.340684], dtype = "float64")#candidate|4279|(1760,)|const|float64
var_4280 = relay.var("var_4280", dtype = "int32", shape = (195,))#candidate|4280|(195,)|var|int32
call_4278 = relay.TupleGetItem(func_2941_call(relay.reshape(const_4279.astype('float64'), [10, 16, 11]), relay.reshape(var_4280.astype('int32'), [195,]), ), 2)
call_4281 = relay.TupleGetItem(func_2945_call(relay.reshape(const_4279.astype('float64'), [10, 16, 11]), relay.reshape(var_4280.astype('int32'), [195,]), ), 2)
output = relay.Tuple([uop_4272,call_4278,const_4279,var_4280,])
output2 = relay.Tuple([uop_4272,call_4281,const_4279,var_4280,])
func_4285 = relay.Function([var_4280,], output)
mod['func_4285'] = func_4285
mod = relay.transform.InferType()(mod)
mutated_mod['func_4285'] = func_4285
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4286 = relay.var("var_4286", dtype = "int32", shape = (195,))#candidate|4286|(195,)|var|int32
func_4285_call = mutated_mod.get_global_var('func_4285')
call_4287 = func_4285_call(var_4286)
output = call_4287
func_4288 = relay.Function([var_4286], output)
mutated_mod['func_4288'] = func_4288
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4295 = relay.const(-5.498237, dtype = "float32")#candidate|4295|()|const|float32
var_4296 = relay.var("var_4296", dtype = "float32", shape = (6, 5, 10))#candidate|4296|(6, 5, 10)|var|float32
bop_4297 = relay.floor_divide(const_4295.astype('float32'), var_4296.astype('float32')) # shape=(6, 5, 10)
output = bop_4297
output2 = bop_4297
func_4301 = relay.Function([var_4296,], output)
mod['func_4301'] = func_4301
mod = relay.transform.InferType()(mod)
var_4302 = relay.var("var_4302", dtype = "float32", shape = (6, 5, 10))#candidate|4302|(6, 5, 10)|var|float32
output = func_4301(var_4302)
func_4303 = relay.Function([var_4302], output)
mutated_mod['func_4303'] = func_4303
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3547_call = mod.get_global_var('func_3547')
func_3549_call = mutated_mod.get_global_var('func_3549')
call_4305 = relay.TupleGetItem(func_3547_call(), 0)
call_4306 = relay.TupleGetItem(func_3549_call(), 0)
func_3625_call = mod.get_global_var('func_3625')
func_3628_call = mutated_mod.get_global_var('func_3628')
var_4311 = relay.var("var_4311", dtype = "float32", shape = (126,))#candidate|4311|(126,)|var|float32
call_4310 = relay.TupleGetItem(func_3625_call(relay.reshape(var_4311.astype('float32'), [21, 6])), 0)
call_4312 = relay.TupleGetItem(func_3628_call(relay.reshape(var_4311.astype('float32'), [21, 6])), 0)
bop_4313 = relay.bitwise_and(call_4305.astype('int64'), relay.reshape(call_4310.astype('int64'), relay.shape_of(call_4305))) # shape=(16, 112)
bop_4316 = relay.bitwise_and(call_4306.astype('int64'), relay.reshape(call_4312.astype('int64'), relay.shape_of(call_4306))) # shape=(16, 112)
output = relay.Tuple([var_4311,bop_4313,])
output2 = relay.Tuple([var_4311,bop_4316,])
func_4321 = relay.Function([var_4311,], output)
mod['func_4321'] = func_4321
mod = relay.transform.InferType()(mod)
mutated_mod['func_4321'] = func_4321
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4322 = relay.var("var_4322", dtype = "float32", shape = (126,))#candidate|4322|(126,)|var|float32
func_4321_call = mutated_mod.get_global_var('func_4321')
call_4323 = func_4321_call(var_4322)
output = call_4323
func_4324 = relay.Function([var_4322], output)
mutated_mod['func_4324'] = func_4324
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3132_call = mod.get_global_var('func_3132')
func_3133_call = mutated_mod.get_global_var('func_3133')
call_4338 = func_3132_call()
call_4339 = func_3132_call()
func_4321_call = mod.get_global_var('func_4321')
func_4324_call = mutated_mod.get_global_var('func_4324')
var_4343 = relay.var("var_4343", dtype = "float32", shape = (1, 126))#candidate|4343|(1, 126)|var|float32
call_4342 = relay.TupleGetItem(func_4321_call(relay.reshape(var_4343.astype('float32'), [126,])), 1)
call_4344 = relay.TupleGetItem(func_4324_call(relay.reshape(var_4343.astype('float32'), [126,])), 1)
func_3191_call = mod.get_global_var('func_3191')
func_3192_call = mutated_mod.get_global_var('func_3192')
call_4356 = func_3191_call()
call_4357 = func_3191_call()
output = relay.Tuple([call_4338,call_4342,var_4343,call_4356,])
output2 = relay.Tuple([call_4339,call_4344,var_4343,call_4357,])
func_4358 = relay.Function([var_4343,], output)
mod['func_4358'] = func_4358
mod = relay.transform.InferType()(mod)
var_4359 = relay.var("var_4359", dtype = "float32", shape = (1, 126))#candidate|4359|(1, 126)|var|float32
output = func_4358(var_4359)
func_4360 = relay.Function([var_4359], output)
mutated_mod['func_4360'] = func_4360
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3311_call = mod.get_global_var('func_3311')
func_3312_call = mutated_mod.get_global_var('func_3312')
call_4376 = relay.TupleGetItem(func_3311_call(), 0)
call_4377 = relay.TupleGetItem(func_3312_call(), 0)
func_3191_call = mod.get_global_var('func_3191')
func_3192_call = mutated_mod.get_global_var('func_3192')
call_4378 = func_3191_call()
call_4379 = func_3191_call()
var_4404 = relay.var("var_4404", dtype = "float64", shape = (16, 112))#candidate|4404|(16, 112)|var|float64
bop_4405 = relay.add(call_4378.astype('int64'), relay.reshape(var_4404.astype('int64'), relay.shape_of(call_4378))) # shape=(16, 112)
bop_4408 = relay.add(call_4379.astype('int64'), relay.reshape(var_4404.astype('int64'), relay.shape_of(call_4379))) # shape=(16, 112)
bop_4409 = relay.right_shift(bop_4405.astype('int16'), relay.reshape(var_4404.astype('int16'), relay.shape_of(bop_4405))) # shape=(16, 112)
bop_4412 = relay.right_shift(bop_4408.astype('int16'), relay.reshape(var_4404.astype('int16'), relay.shape_of(bop_4408))) # shape=(16, 112)
func_3512_call = mod.get_global_var('func_3512')
func_3516_call = mutated_mod.get_global_var('func_3516')
var_4415 = relay.var("var_4415", dtype = "uint64", shape = (84,))#candidate|4415|(84,)|var|uint64
const_4416 = relay.const([-10,6,-8,-7,5,-4,-10,-7,-4,10,-7,7,4,8,2,7,4,-7,-4,7,-2,6,-10,2,-1,-8,-1,-6,-3,-6,-10,4,-4,-10,5,-10,8,7,-8,-2,1,7,6,-6,10,1,-5,-5,6,-9,-3,-8,-4,9,-3,-1,10,6,-3,-3,4,-2,1,-8,-5,9,-6,8,-1,-2,-5,-9,-2,3,9,8,-1,4,10,-8,9,-2,4,4,5,10,-10,-7,5,-8,7,10,6,10,8,-10,7,3,-10,-7,-5,-6,-7,7,-4,-8,9,-9,-4,3,-6,10,-5,-7,9,3,-2,-9,4,10,-1,9,8,6,-6,5,-4,-5,5,-7,5,-10,-8,5,7,10,-6,9,-6,6,-6,3,-6,-10,-2,7,6,6,8,-6,7,-2,-6,4,6,3,3,-1,-8,-1,-7,-10,10,8,5,3,-1,-4,-8,8,-10,-7,1,-3,-10,-9,-7,-1,-3,4,-3,2,4,9,-4,-9,10,-9,-5,-9,-9,3,7,2,2,-10,1,-9,7,10,-6,4,-4,-6,5,3,6,-9,-9,-5,-7,6,-8,-4,2,4,2,4,1,4,-7,-2,-4,-8,-4,-3,-7,-8,3,-9,7,-5,-1,6,10,10,8,2,4,4,-2,-8,8,-5,-9,6,-6,-6,1,-1,-1,-10,-2,2,4,-4,5,-7,-10,-3,-5,-7,-1,9,7,3,-10,9,-7,10,9,10,-7,-6,-7,8,-8,-4,1,1,3,8,-8,5,-9,9,-8,1,-3,-4,4,6,-8,10,-6,-9,-6,-2,3,-10,-4,-2,5,10,8,10,-8,5,7,-7,-10,-1,3,-9,-3,-1,-5,1,-6,-7,5,-10,6,-2,3,-7,8,-7,3,9,4,-5,5,-8,5,7,7,-6,3,7,7,-8,3,-6,-3,2,-7,8,-3,6,4,-1,-1,3,4,3,-3,6,8,10,-1,3,-3,1,-7,-3,10,-1,10,-8,-5,6,2,2,8,-5,8,6,-9,7,-5,7,4,-8,-6,-9,-9,-7,-6,3], dtype = "uint8")#candidate|4416|(390,)|const|uint8
var_4417 = relay.var("var_4417", dtype = "float32", shape = (825,))#candidate|4417|(825,)|var|float32
call_4414 = relay.TupleGetItem(func_3512_call(relay.reshape(var_4415.astype('uint64'), [84, 1]), relay.reshape(const_4416.astype('uint8'), [390,]), relay.reshape(var_4417.astype('float32'), [825, 1]), ), 1)
call_4418 = relay.TupleGetItem(func_3516_call(relay.reshape(var_4415.astype('uint64'), [84, 1]), relay.reshape(const_4416.astype('uint8'), [390,]), relay.reshape(var_4417.astype('float32'), [825, 1]), ), 1)
output = relay.Tuple([call_4376,bop_4409,call_4414,var_4415,const_4416,var_4417,])
output2 = relay.Tuple([call_4377,bop_4412,call_4418,var_4415,const_4416,var_4417,])
func_4420 = relay.Function([var_4404,var_4415,var_4417,], output)
mod['func_4420'] = func_4420
mod = relay.transform.InferType()(mod)
var_4421 = relay.var("var_4421", dtype = "float64", shape = (16, 112))#candidate|4421|(16, 112)|var|float64
var_4422 = relay.var("var_4422", dtype = "uint64", shape = (84,))#candidate|4422|(84,)|var|uint64
var_4423 = relay.var("var_4423", dtype = "float32", shape = (825,))#candidate|4423|(825,)|var|float32
output = func_4420(var_4421,var_4422,var_4423,)
func_4424 = relay.Function([var_4421,var_4422,var_4423,], output)
mutated_mod['func_4424'] = func_4424
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3828_call = mod.get_global_var('func_3828')
func_3829_call = mutated_mod.get_global_var('func_3829')
call_4437 = relay.TupleGetItem(func_3828_call(), 0)
call_4438 = relay.TupleGetItem(func_3829_call(), 0)
func_3602_call = mod.get_global_var('func_3602')
func_3604_call = mutated_mod.get_global_var('func_3604')
call_4454 = relay.TupleGetItem(func_3602_call(), 0)
call_4455 = relay.TupleGetItem(func_3604_call(), 0)
const_4459 = relay.const([[[3,-1,7,3,-2,6,8,-2,-1,6,3,-6],[-2,2,5,8,-9,-1,10,8,-6,-3,-6,-9],[2,-3,-3,-2,3,4,7,7,1,-2,-4,3],[3,-4,1,-7,1,7,-10,-10,4,-2,8,-7],[-7,-1,7,1,-10,-10,8,-3,1,4,3,-6],[-10,8,-8,-6,-1,-8,-1,-8,-5,3,8,-2],[-9,10,-2,9,-5,-7,-9,9,-8,-8,-7,-1],[7,-6,9,3,6,-10,-10,-8,3,9,8,3],[7,6,-8,-6,10,-9,10,9,-5,-2,-5,1],[8,1,8,-4,5,-8,-9,-7,4,10,-8,-10],[7,10,-4,1,3,-8,5,-5,-5,1,-7,5],[-4,7,-3,7,-1,-3,1,7,-5,6,-10,-8],[4,-7,10,4,6,-8,-8,-2,-3,6,-8,-10],[9,-10,-7,-1,10,3,1,-3,-7,-9,-7,6],[5,-6,6,-3,1,3,4,10,6,-3,9,6]],[[-1,2,4,-10,1,-2,-3,1,10,4,10,9],[5,2,2,-1,1,-10,3,-5,-7,9,-2,6],[6,8,-3,-1,9,-4,9,1,-1,8,3,8],[8,10,10,2,7,2,-4,-10,-6,5,2,-7],[9,6,-9,-9,-4,7,-6,-9,-8,5,-4,9],[3,-5,-10,-9,10,-10,-2,3,10,9,10,3],[1,-2,-6,4,4,6,4,2,1,-10,-3,-10],[-5,-2,-8,-3,-2,-3,7,-8,9,-5,-9,4],[1,4,6,-6,4,-6,-3,-3,-7,5,-6,-2],[-9,7,-4,-10,4,8,10,3,-3,8,9,5],[8,9,-5,10,-8,3,-5,-8,9,-8,-9,2],[-1,10,-2,7,6,-5,-5,-6,1,6,4,-6],[9,1,5,1,-4,8,-7,5,9,4,-4,-8],[4,10,7,1,9,5,3,-2,7,2,-4,-9],[4,8,6,4,1,5,1,-5,8,-6,4,-10]],[[1,6,7,-8,-9,-1,-2,4,-1,1,-7,-2],[-6,7,-10,2,-9,5,-6,-6,-9,1,-4,-5],[5,4,-4,-8,9,-8,-2,-8,-1,-4,-10,-1],[9,-10,-6,-7,3,-5,-10,-5,8,-5,6,-1],[10,3,10,-9,-7,-4,-4,-5,2,1,-5,-8],[2,5,-1,-6,-6,1,6,-4,8,7,7,-10],[4,-1,-10,1,-4,-1,-5,-8,-9,-6,8,7],[8,-2,7,-5,3,-1,-5,-6,-1,6,7,8],[2,10,-3,-7,-2,7,-1,2,10,-9,-8,-6],[6,-6,5,-7,-7,8,-4,1,6,-5,2,-2],[-3,-9,-8,1,-10,-4,-10,-1,-10,4,-6,9],[-5,-8,4,-3,-3,-9,9,4,4,4,3,-10],[6,4,-3,3,-9,-8,3,1,4,-8,9,-2],[-1,8,6,6,6,-4,-5,6,10,-9,5,-8],[2,-2,7,4,4,4,4,10,10,-6,2,10]],[[-7,-4,1,-1,-7,5,-9,-6,3,-3,-9,-4],[8,5,5,10,6,-6,6,-1,-2,-9,-5,6],[-4,-4,1,-4,-9,6,4,-8,2,7,-3,10],[-3,6,3,-6,10,-10,8,-9,4,-3,-5,-9],[6,2,-6,-5,-1,-9,-5,-9,-4,8,-4,-3],[4,7,10,6,-3,5,1,8,-3,6,3,4],[6,-1,9,-7,1,-4,-1,7,1,3,4,-3],[10,6,5,-1,10,-1,6,-3,3,8,-10,-8],[-6,4,-4,-6,6,-8,-2,4,-10,2,-5,5],[-4,2,5,-8,10,-1,-9,-9,-1,-10,5,-4],[10,-1,2,-5,-8,-4,-6,5,2,-2,-5,8],[9,10,1,-7,1,-8,-5,-1,7,-7,8,2],[-10,-3,-7,-2,8,-10,-7,1,-6,-4,9,3],[1,-2,-2,8,-1,6,3,-6,-1,1,-3,9],[-1,-8,8,-8,-3,-7,5,6,8,3,9,4]],[[6,-1,8,-6,-3,-3,10,-10,-4,-6,4,-4],[-4,-6,8,5,5,-3,-6,-4,-7,-7,-8,8],[4,10,5,-2,5,-2,-10,-7,2,10,10,4],[2,-4,10,4,-5,-4,10,-9,-6,8,-9,2],[8,9,7,7,7,-2,3,-1,-10,-9,10,7],[-9,3,1,-9,-9,-9,2,-6,7,-5,1,9],[8,-4,-5,4,6,-4,-3,8,-1,-6,4,1],[-9,-4,-10,-4,10,-7,-8,3,-6,-3,-9,-9],[-1,-3,-9,8,1,-10,4,1,5,3,7,-9],[10,-2,-4,-9,-7,10,9,6,10,10,2,-10],[-9,10,8,1,-3,8,3,2,2,-6,10,8],[9,-3,-3,-10,7,-8,-1,-6,-1,2,4,6],[6,4,3,3,3,-5,-3,9,-4,7,-8,-10],[7,-3,-3,-4,2,-2,-1,-8,-5,1,5,5],[8,5,-5,5,4,-3,-8,6,7,4,5,4]],[[-3,7,6,-7,6,-10,-4,2,-2,5,-4,-9],[-10,-8,-3,6,-9,3,-5,-10,10,-1,-5,-2],[-10,7,9,4,9,4,-4,7,1,9,-10,-6],[-8,-7,-10,10,-8,-3,-4,-6,-8,-4,-1,6],[-1,-8,1,-3,1,-2,1,-10,-10,5,1,-5],[-4,-1,-2,-8,1,5,-10,-3,-8,-1,-6,7],[-7,9,6,8,5,-6,8,7,10,3,10,-2],[-2,7,-5,3,-1,-9,-6,-8,6,-5,5,-6],[-6,4,5,-6,8,-7,2,-6,-2,-9,-2,1],[-10,-4,10,10,1,4,10,4,-5,-3,-9,-7],[4,1,-2,7,9,-7,-3,7,-10,9,10,10],[-4,-2,1,-6,-7,4,1,3,5,1,6,-2],[-8,8,6,-3,2,3,-7,2,-8,-3,-8,-1],[6,-8,7,-1,-3,-2,9,-7,-3,6,-9,-1],[-3,-8,-3,-1,-8,-3,1,1,-5,2,10,-4]],[[-10,-10,7,10,8,-10,-4,9,-3,8,-8,-7],[1,4,-9,-2,-9,1,-4,7,-6,10,-1,1],[-3,8,-7,-2,-6,-10,9,5,-2,5,9,7],[-10,-5,-8,-4,7,-2,-9,-5,-5,10,-4,-1],[5,-6,7,-8,-10,9,-3,-9,-7,7,7,10],[6,3,9,10,-9,6,10,2,-1,8,-6,-6],[-9,-10,6,8,2,-6,5,-4,-2,10,-8,-2],[5,-5,-8,-5,-6,3,7,-6,3,1,-7,4],[-9,3,-9,6,-6,5,2,5,7,9,-1,4],[-8,4,1,-7,2,-8,7,-3,5,-1,1,4],[-3,-1,-10,8,9,-3,10,3,-2,-3,2,-3],[7,3,-9,-6,-10,7,-4,-7,-9,-5,4,2],[-6,-6,2,-7,-5,-7,-9,-7,9,-10,10,-8],[-2,7,1,-4,4,-7,-3,-5,9,5,4,9],[-7,-6,8,6,-7,8,4,-4,3,-7,10,-7]],[[4,8,-3,1,6,8,3,6,9,-9,7,5],[7,-8,-6,7,-6,-9,-2,10,-2,-5,-2,-7],[6,-8,-9,3,-7,-6,-8,4,-8,5,-5,-9],[3,2,-5,-8,4,4,-1,3,1,-2,4,3],[10,1,2,4,4,-1,-6,-1,-5,8,-5,-3],[-2,-5,10,8,5,7,1,-3,7,5,-2,-6],[3,-4,-4,-5,1,-1,-8,-3,8,10,-1,-6],[8,-4,10,-9,3,-1,8,3,6,10,-3,-4],[-3,2,-9,4,2,8,-7,4,10,-7,1,-8],[4,-8,-3,1,1,1,4,9,-3,-5,-6,2],[-4,4,1,-2,-2,-5,7,2,-9,-9,-6,6],[-7,-4,2,1,-7,1,7,-6,-6,-5,-6,10],[-7,8,-1,-7,-9,-3,6,-5,9,4,9,-6],[-10,-9,-7,2,10,-1,8,9,-8,-6,-8,-9],[9,2,3,7,10,-10,5,-3,5,7,-4,1]],[[-1,-8,2,-6,3,10,-6,9,-3,3,4,4],[-9,-5,9,7,-4,9,-2,-6,-2,1,5,4],[-3,-5,-4,-8,-10,-8,-8,-1,7,6,-6,4],[-9,8,7,2,-8,8,-8,6,7,8,-6,8],[10,5,-6,-4,6,-1,-3,-4,1,-4,8,6],[-2,3,-5,3,6,-9,-7,-9,4,-7,-6,7],[-6,-6,-1,-2,-1,10,7,-9,-9,7,-1,10],[-10,-2,1,4,10,-2,4,-3,10,-9,7,3],[-6,4,7,-3,-5,3,-4,-3,-9,-5,-8,8],[-2,-8,8,-4,10,-4,-4,-5,-1,2,5,2],[-10,-7,-7,-10,-5,-7,10,7,-9,-8,-7,-9],[3,-6,1,-2,-8,1,7,4,10,7,1,9],[-5,3,1,-2,7,3,-9,9,8,-1,-1,-9],[6,-8,-9,7,5,-8,3,-9,10,-8,-8,4],[-7,1,2,9,-7,5,6,-2,1,7,1,-6]],[[-7,2,1,3,3,-8,-5,2,-3,-10,8,-10],[-3,5,-3,7,-5,-7,-4,-8,4,3,10,1],[-2,-4,4,-9,1,3,5,3,-10,10,-3,-3],[2,-6,1,8,10,-2,-6,-3,5,8,-5,-9],[3,1,6,3,-7,-4,10,-2,4,5,4,-6],[4,-6,6,6,-5,-7,10,-10,-3,-7,-6,3],[2,-3,-6,7,2,-2,1,2,-4,8,3,1],[2,-6,7,-2,9,-9,-4,-6,-10,-9,-6,-8],[1,4,-3,9,5,8,7,2,7,1,-8,10],[-5,10,9,2,5,6,-3,7,-2,-1,-7,5],[6,7,-2,3,-3,9,-2,-4,6,-7,6,-8],[-9,7,4,1,-7,6,-3,-7,4,10,6,5],[5,1,-3,10,-8,9,-9,1,-7,5,6,8],[-7,-5,4,5,1,-3,-6,8,1,7,-8,-8],[-5,-6,-3,10,5,-3,5,-10,-3,-3,-9,-3]],[[8,2,8,2,-3,6,-3,7,6,-6,-7,7],[1,-9,1,-1,-3,5,-5,9,-5,3,5,-3],[10,-2,-6,-7,1,9,9,10,-5,5,4,-7],[1,5,1,-5,-7,-6,-5,2,-8,-7,1,10],[4,5,9,5,3,6,-7,-3,-7,9,-3,-10],[-2,-7,-6,-10,-2,8,-8,-3,-4,4,-9,8],[-9,8,8,2,-6,-4,8,1,-8,3,-4,8],[7,-9,-3,2,4,4,9,3,-7,-6,-10,4],[9,-7,-6,-9,8,-9,3,-3,-5,-10,-2,-10],[1,-3,6,-10,-9,-6,-1,-9,-2,-10,-2,-3],[-9,-3,-7,2,-10,8,6,-3,-4,-9,-5,-6],[9,-4,-10,-9,-10,-1,-5,5,-10,5,1,-1],[6,-2,10,-8,5,-1,-6,3,5,5,9,-7],[-10,-6,-8,-8,9,-5,-1,10,-2,-10,-3,6],[-6,-8,-10,-3,7,3,-6,-2,-4,-6,10,10]]], dtype = "uint64")#candidate|4459|(11, 15, 12)|const|uint64
bop_4460 = relay.logical_or(call_4454.astype('bool'), relay.reshape(const_4459.astype('bool'), relay.shape_of(call_4454))) # shape=(11, 15, 12)
bop_4463 = relay.logical_or(call_4455.astype('bool'), relay.reshape(const_4459.astype('bool'), relay.shape_of(call_4455))) # shape=(11, 15, 12)
output = relay.Tuple([call_4437,bop_4460,])
output2 = relay.Tuple([call_4438,bop_4463,])
func_4465 = relay.Function([], output)
mod['func_4465'] = func_4465
mod = relay.transform.InferType()(mod)
mutated_mod['func_4465'] = func_4465
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4465_call = mutated_mod.get_global_var('func_4465')
call_4466 = func_4465_call()
output = call_4466
func_4467 = relay.Function([], output)
mutated_mod['func_4467'] = func_4467
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3547_call = mod.get_global_var('func_3547')
func_3549_call = mutated_mod.get_global_var('func_3549')
call_4468 = relay.TupleGetItem(func_3547_call(), 0)
call_4469 = relay.TupleGetItem(func_3549_call(), 0)
output = call_4468
output2 = call_4469
func_4470 = relay.Function([], output)
mod['func_4470'] = func_4470
mod = relay.transform.InferType()(mod)
output = func_4470()
func_4471 = relay.Function([], output)
mutated_mod['func_4471'] = func_4471
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3132_call = mod.get_global_var('func_3132')
func_3133_call = mutated_mod.get_global_var('func_3133')
call_4505 = func_3132_call()
call_4506 = func_3132_call()
output = call_4505
output2 = call_4506
func_4541 = relay.Function([], output)
mod['func_4541'] = func_4541
mod = relay.transform.InferType()(mod)
mutated_mod['func_4541'] = func_4541
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4541_call = mutated_mod.get_global_var('func_4541')
call_4542 = func_4541_call()
output = call_4542
func_4543 = relay.Function([], output)
mutated_mod['func_4543'] = func_4543
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1857_call = mod.get_global_var('func_1857')
func_1859_call = mutated_mod.get_global_var('func_1859')
call_4549 = relay.TupleGetItem(func_1857_call(), 0)
call_4550 = relay.TupleGetItem(func_1859_call(), 0)
output = relay.Tuple([call_4549,])
output2 = relay.Tuple([call_4550,])
func_4577 = relay.Function([], output)
mod['func_4577'] = func_4577
mod = relay.transform.InferType()(mod)
mutated_mod['func_4577'] = func_4577
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4577_call = mutated_mod.get_global_var('func_4577')
call_4578 = func_4577_call()
output = call_4578
func_4579 = relay.Function([], output)
mutated_mod['func_4579'] = func_4579
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3828_call = mod.get_global_var('func_3828')
func_3829_call = mutated_mod.get_global_var('func_3829')
call_4633 = relay.TupleGetItem(func_3828_call(), 0)
call_4634 = relay.TupleGetItem(func_3829_call(), 0)
var_4640 = relay.var("var_4640", dtype = "float64", shape = (11, 15, 12))#candidate|4640|(11, 15, 12)|var|float64
bop_4641 = relay.right_shift(call_4633.astype('int64'), relay.reshape(var_4640.astype('int64'), relay.shape_of(call_4633))) # shape=(11, 15, 12)
bop_4644 = relay.right_shift(call_4634.astype('int64'), relay.reshape(var_4640.astype('int64'), relay.shape_of(call_4634))) # shape=(11, 15, 12)
output = bop_4641
output2 = bop_4644
func_4665 = relay.Function([var_4640,], output)
mod['func_4665'] = func_4665
mod = relay.transform.InferType()(mod)
var_4666 = relay.var("var_4666", dtype = "float64", shape = (11, 15, 12))#candidate|4666|(11, 15, 12)|var|float64
output = func_4665(var_4666)
func_4667 = relay.Function([var_4666], output)
mutated_mod['func_4667'] = func_4667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4541_call = mod.get_global_var('func_4541')
func_4543_call = mutated_mod.get_global_var('func_4543')
call_4678 = func_4541_call()
call_4679 = func_4541_call()
var_4680 = relay.var("var_4680", dtype = "float64", shape = (16, 112))#candidate|4680|(16, 112)|var|float64
bop_4681 = relay.mod(call_4678.astype('float32'), relay.reshape(var_4680.astype('float32'), relay.shape_of(call_4678))) # shape=(16, 112)
bop_4684 = relay.mod(call_4679.astype('float32'), relay.reshape(var_4680.astype('float32'), relay.shape_of(call_4679))) # shape=(16, 112)
func_2044_call = mod.get_global_var('func_2044')
func_2045_call = mutated_mod.get_global_var('func_2045')
call_4692 = relay.TupleGetItem(func_2044_call(), 1)
call_4693 = relay.TupleGetItem(func_2045_call(), 1)
func_2941_call = mod.get_global_var('func_2941')
func_2945_call = mutated_mod.get_global_var('func_2945')
var_4703 = relay.var("var_4703", dtype = "float64", shape = (1760,))#candidate|4703|(1760,)|var|float64
var_4704 = relay.var("var_4704", dtype = "int32", shape = (13, 15))#candidate|4704|(13, 15)|var|int32
call_4702 = relay.TupleGetItem(func_2941_call(relay.reshape(var_4703.astype('float64'), [10, 16, 11]), relay.reshape(var_4704.astype('int32'), [195,]), ), 0)
call_4705 = relay.TupleGetItem(func_2945_call(relay.reshape(var_4703.astype('float64'), [10, 16, 11]), relay.reshape(var_4704.astype('int32'), [195,]), ), 0)
output = relay.Tuple([bop_4681,call_4692,call_4702,var_4703,var_4704,])
output2 = relay.Tuple([bop_4684,call_4693,call_4705,var_4703,var_4704,])
func_4706 = relay.Function([var_4680,var_4703,var_4704,], output)
mod['func_4706'] = func_4706
mod = relay.transform.InferType()(mod)
mutated_mod['func_4706'] = func_4706
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4706_call = mutated_mod.get_global_var('func_4706')
var_4708 = relay.var("var_4708", dtype = "float64", shape = (16, 112))#candidate|4708|(16, 112)|var|float64
var_4709 = relay.var("var_4709", dtype = "float64", shape = (1760,))#candidate|4709|(1760,)|var|float64
var_4710 = relay.var("var_4710", dtype = "int32", shape = (13, 15))#candidate|4710|(13, 15)|var|int32
call_4707 = func_4706_call(var_4708,var_4709,var_4710,)
output = call_4707
func_4711 = relay.Function([var_4708,var_4709,var_4710,], output)
mutated_mod['func_4711'] = func_4711
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3328_call = mod.get_global_var('func_3328')
func_3330_call = mutated_mod.get_global_var('func_3330')
call_4762 = relay.TupleGetItem(func_3328_call(), 0)
call_4763 = relay.TupleGetItem(func_3330_call(), 0)
var_4764 = relay.var("var_4764", dtype = "float64", shape = (11, 15, 12))#candidate|4764|(11, 15, 12)|var|float64
bop_4765 = relay.power(call_4762.astype('float64'), relay.reshape(var_4764.astype('float64'), relay.shape_of(call_4762))) # shape=(11, 15, 12)
bop_4768 = relay.power(call_4763.astype('float64'), relay.reshape(var_4764.astype('float64'), relay.shape_of(call_4763))) # shape=(11, 15, 12)
output = relay.Tuple([bop_4765,])
output2 = relay.Tuple([bop_4768,])
func_4770 = relay.Function([var_4764,], output)
mod['func_4770'] = func_4770
mod = relay.transform.InferType()(mod)
mutated_mod['func_4770'] = func_4770
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4771 = relay.var("var_4771", dtype = "float64", shape = (11, 15, 12))#candidate|4771|(11, 15, 12)|var|float64
func_4770_call = mutated_mod.get_global_var('func_4770')
call_4772 = func_4770_call(var_4771)
output = call_4772
func_4773 = relay.Function([var_4771], output)
mutated_mod['func_4773'] = func_4773
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4784 = relay.var("var_4784", dtype = "int16", shape = (13, 11, 11))#candidate|4784|(13, 11, 11)|var|int16
var_4785 = relay.var("var_4785", dtype = "int16", shape = (13, 11, 11))#candidate|4785|(13, 11, 11)|var|int16
bop_4786 = relay.less_equal(var_4784.astype('bool'), relay.reshape(var_4785.astype('bool'), relay.shape_of(var_4784))) # shape=(13, 11, 11)
output = bop_4786
output2 = bop_4786
func_4790 = relay.Function([var_4784,var_4785,], output)
mod['func_4790'] = func_4790
mod = relay.transform.InferType()(mod)
var_4791 = relay.var("var_4791", dtype = "int16", shape = (13, 11, 11))#candidate|4791|(13, 11, 11)|var|int16
var_4792 = relay.var("var_4792", dtype = "int16", shape = (13, 11, 11))#candidate|4792|(13, 11, 11)|var|int16
output = func_4790(var_4791,var_4792,)
func_4793 = relay.Function([var_4791,var_4792,], output)
mutated_mod['func_4793'] = func_4793
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3796_call = mod.get_global_var('func_3796')
func_3797_call = mutated_mod.get_global_var('func_3797')
call_4821 = relay.TupleGetItem(func_3796_call(), 1)
call_4822 = relay.TupleGetItem(func_3797_call(), 1)
func_961_call = mod.get_global_var('func_961')
func_964_call = mutated_mod.get_global_var('func_964')
call_4831 = relay.TupleGetItem(func_961_call(relay.reshape(call_4821.astype('bool'), [8, 16, 14])), 0)
call_4832 = relay.TupleGetItem(func_964_call(relay.reshape(call_4821.astype('bool'), [8, 16, 14])), 0)
uop_4835 = relay.log2(call_4821.astype('float64')) # shape=(16, 112)
uop_4837 = relay.log2(call_4822.astype('float64')) # shape=(16, 112)
output = relay.Tuple([call_4831,uop_4835,])
output2 = relay.Tuple([call_4832,uop_4837,])
func_4838 = relay.Function([], output)
mod['func_4838'] = func_4838
mod = relay.transform.InferType()(mod)
mutated_mod['func_4838'] = func_4838
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4838_call = mutated_mod.get_global_var('func_4838')
call_4839 = func_4838_call()
output = call_4839
func_4840 = relay.Function([], output)
mutated_mod['func_4840'] = func_4840
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3083_call = mod.get_global_var('func_3083')
func_3084_call = mutated_mod.get_global_var('func_3084')
call_4866 = relay.TupleGetItem(func_3083_call(), 0)
call_4867 = relay.TupleGetItem(func_3084_call(), 0)
var_4874 = relay.var("var_4874", dtype = "float64", shape = (11, 15, 12))#candidate|4874|(11, 15, 12)|var|float64
bop_4875 = relay.add(call_4866.astype('uint64'), relay.reshape(var_4874.astype('uint64'), relay.shape_of(call_4866))) # shape=(11, 15, 12)
bop_4878 = relay.add(call_4867.astype('uint64'), relay.reshape(var_4874.astype('uint64'), relay.shape_of(call_4867))) # shape=(11, 15, 12)
output = relay.Tuple([bop_4875,])
output2 = relay.Tuple([bop_4878,])
func_4885 = relay.Function([var_4874,], output)
mod['func_4885'] = func_4885
mod = relay.transform.InferType()(mod)
mutated_mod['func_4885'] = func_4885
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4886 = relay.var("var_4886", dtype = "float64", shape = (11, 15, 12))#candidate|4886|(11, 15, 12)|var|float64
func_4885_call = mutated_mod.get_global_var('func_4885')
call_4887 = func_4885_call(var_4886)
output = call_4887
func_4888 = relay.Function([var_4886], output)
mutated_mod['func_4888'] = func_4888
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3311_call = mod.get_global_var('func_3311')
func_3312_call = mutated_mod.get_global_var('func_3312')
call_4930 = relay.TupleGetItem(func_3311_call(), 0)
call_4931 = relay.TupleGetItem(func_3312_call(), 0)
func_2261_call = mod.get_global_var('func_2261')
func_2262_call = mutated_mod.get_global_var('func_2262')
call_4946 = func_2261_call()
call_4947 = func_2261_call()
func_1757_call = mod.get_global_var('func_1757')
func_1760_call = mutated_mod.get_global_var('func_1760')
var_4949 = relay.var("var_4949", dtype = "float32", shape = (126,))#candidate|4949|(126,)|var|float32
var_4950 = relay.var("var_4950", dtype = "bool", shape = (1792,))#candidate|4950|(1792,)|var|bool
call_4948 = relay.TupleGetItem(func_1757_call(relay.reshape(var_4949.astype('float32'), [9, 1, 14]), relay.reshape(var_4950.astype('bool'), [64, 28]), ), 1)
call_4951 = relay.TupleGetItem(func_1760_call(relay.reshape(var_4949.astype('float32'), [9, 1, 14]), relay.reshape(var_4950.astype('bool'), [64, 28]), ), 1)
bop_4965 = relay.logical_or(call_4948.astype('bool'), relay.reshape(var_4950.astype('bool'), relay.shape_of(call_4948))) # shape=(8, 16, 14)
bop_4968 = relay.logical_or(call_4951.astype('bool'), relay.reshape(var_4950.astype('bool'), relay.shape_of(call_4951))) # shape=(8, 16, 14)
func_4790_call = mod.get_global_var('func_4790')
func_4793_call = mutated_mod.get_global_var('func_4793')
const_4974 = relay.const([[-7,7,8,7,10,6,-9,5,3,9,8],[3,3,9,-3,5,6,5,6,7,7,-8],[-6,-10,-1,-9,9,2,-1,5,7,-3,3],[-9,10,-5,-7,5,7,4,-6,-6,6,-8],[-8,10,-6,8,-1,-8,-3,1,-5,-5,4],[10,-4,-7,-4,-7,10,10,2,-5,5,7],[-8,9,-5,-6,4,10,-10,-8,6,9,-5],[-3,-8,-2,-4,2,7,5,-4,2,-7,-5],[3,-3,1,4,2,-2,6,5,5,3,-7],[-4,9,10,-10,3,10,-2,-2,6,-4,6],[6,-9,9,1,-10,8,2,-7,4,-8,8],[7,6,3,4,7,1,9,10,7,-6,3],[-4,10,10,6,8,9,-7,-2,-4,-10,-9],[-6,-10,10,9,-4,4,2,-2,4,-2,-1],[-5,-9,-4,-3,-10,1,-1,8,6,2,-5],[-6,5,-4,10,3,10,4,2,6,-6,6],[10,9,5,8,6,-5,-1,-7,8,-8,-3],[-2,-10,9,-7,-7,-8,-5,-6,10,-6,-4],[-8,9,10,-4,-10,9,7,9,-2,1,1],[-4,-6,2,1,-8,-8,5,-4,2,-7,5],[-9,-8,-9,3,-4,8,3,-3,-7,-5,7],[4,3,7,-4,-4,7,6,-10,7,-7,-5],[6,-7,8,-9,-4,-8,8,6,10,-7,-1],[-2,-1,6,-5,-10,-8,5,9,-1,-6,1],[-6,7,7,2,6,-3,-2,-7,-10,9,4],[-4,-7,-9,5,8,6,-9,9,5,5,2],[-6,6,6,6,1,-4,-6,-3,2,6,9],[5,7,1,7,-1,4,1,-7,1,-8,6],[9,-6,-3,1,8,-9,-5,8,6,4,-1],[10,-1,-5,6,-2,-1,6,-3,-5,4,-7],[-4,2,8,-8,3,8,8,3,-3,7,-5],[7,9,-8,-7,1,-4,9,-8,-3,-6,-5],[4,-6,-4,10,-5,7,2,6,-4,9,9],[2,-9,-10,-7,1,2,-8,-2,6,-9,1],[10,-1,6,2,1,5,-10,9,10,1,-7],[8,1,-7,9,-4,-7,3,8,-1,1,1],[10,1,7,-2,2,4,-6,-6,10,3,-6],[3,6,-2,-1,-10,-2,1,-4,-8,2,2],[4,4,7,-5,8,6,3,8,-3,-5,1],[6,8,4,7,-10,3,5,3,-4,10,-2],[-9,7,1,7,-7,-7,-9,6,6,-7,2],[-2,3,-6,7,-4,-2,-8,-2,-5,10,-3],[-5,-4,-7,-2,4,3,-10,-8,9,-3,4],[4,-6,4,-2,-6,-8,-8,3,3,5,-5],[-5,4,-7,-4,8,-9,-8,-2,-2,5,-1],[6,-4,1,4,-6,1,4,-7,-10,-8,-3],[2,7,4,-5,-7,-8,7,-2,-7,2,8],[-5,6,-2,-4,3,10,1,3,10,-4,-3],[-10,-4,3,5,3,6,7,6,-3,-9,-10],[-9,-6,-5,7,-5,-4,4,-4,1,-8,9],[-7,1,5,-4,-2,-1,2,-1,7,8,5],[-1,2,8,-10,-7,1,8,-8,4,5,-8],[-3,-10,5,2,-1,-10,-6,2,5,-3,-7],[-4,-3,-5,-6,-7,-4,-1,-6,-2,7,-9],[10,9,3,2,4,5,8,6,-4,5,2],[10,9,3,4,1,5,7,-3,-6,-7,-4],[2,1,5,-8,3,2,-10,10,-9,7,-10],[-10,5,9,10,9,5,9,-7,8,-7,-2],[7,2,-2,2,3,-4,-9,-2,-8,2,-10],[-5,10,-7,-4,-5,-4,9,-5,-9,-4,-7],[-7,3,-10,1,5,-9,1,-5,8,10,-8],[7,1,-2,-10,-7,7,-4,-2,-9,5,6],[-7,-3,-1,-4,-1,2,8,4,-2,6,-10],[10,-9,10,8,-10,-7,7,-7,8,-5,-1],[-4,-10,-7,-8,9,8,9,-2,4,-2,-6],[-2,4,-10,-10,-2,5,1,-10,-6,8,-7],[-1,-4,10,9,-6,8,1,-9,-8,-5,2],[-6,6,-3,7,3,-6,5,4,-1,-3,10],[-6,4,9,8,5,6,-7,6,-9,-2,-6],[1,10,-10,-3,-8,-9,-5,-2,-10,9,8],[6,-10,5,-10,-10,2,-4,-5,-3,8,-5],[-10,5,4,9,2,8,-8,5,-3,-10,-6],[-7,3,-4,-2,3,-8,4,-4,3,-8,-9],[3,4,-10,-1,1,9,-6,5,4,1,-6],[-3,8,8,9,2,-3,10,-3,2,-6,9],[4,3,-10,9,9,-8,-1,3,-6,-4,3],[4,4,1,-5,-4,-4,8,-1,-2,8,-7],[10,1,-5,5,-10,8,-5,3,-1,10,6],[-9,-4,5,-5,-2,-2,-3,9,-7,-6,-2],[5,-4,4,10,-1,-5,4,-8,-4,-3,5],[-7,5,5,10,4,-1,-10,2,5,10,10],[-3,2,1,6,-3,-2,7,-10,5,2,2],[-10,-1,10,6,5,10,-7,-3,9,-5,4],[10,-3,-8,10,-7,4,7,1,-4,3,4],[-5,2,-2,-4,-3,8,9,10,-6,2,-5],[4,4,-2,9,6,2,-5,9,1,-6,-7],[-7,-4,4,-2,9,-4,-3,-2,4,-6,8],[-1,5,-10,-4,-3,5,-5,5,9,5,-7],[-2,3,-8,2,-2,-4,6,-7,-2,3,-10],[-10,8,-9,3,-1,6,2,-3,-10,7,4],[-10,6,-1,-1,9,-6,-1,10,-2,10,7],[1,-8,6,7,-1,-1,10,7,-1,-3,3],[-3,-9,-4,-2,-4,-10,6,-8,-6,-1,-7],[8,-2,-2,7,10,-6,4,9,10,1,-6],[8,3,4,-2,4,-6,-3,1,2,10,2],[10,2,-5,-2,3,4,3,-9,-8,6,-9],[-4,9,-2,4,4,7,3,-2,-2,4,-2],[-5,-3,6,-9,-6,-5,-9,-5,3,8,-7],[2,8,6,-4,-1,3,-2,-1,4,-5,4],[8,-8,1,2,7,-1,10,8,-8,-2,3],[10,6,5,2,5,1,2,-9,1,-10,2],[-10,5,1,10,1,10,-3,1,4,-5,1],[-6,4,8,-10,4,-3,9,-8,10,9,9],[2,-7,-7,-9,2,9,-3,-9,-9,4,-6],[8,1,3,5,-4,-3,-3,-5,-9,10,-4],[4,7,-10,5,-3,10,-10,-6,5,4,-10],[6,-3,-4,-4,-7,6,2,-4,-2,2,1],[-4,-9,-4,5,-1,-1,8,7,-8,10,8],[-9,-1,-9,4,-6,-6,5,9,-6,-1,-5],[4,10,-6,-7,-2,-9,9,5,10,2,-8],[6,9,8,-10,-10,6,-8,8,-9,2,-3],[-9,-6,2,5,-7,7,-4,7,-9,10,-6],[-8,-6,5,8,-10,-6,8,-4,-10,-3,-6],[-4,-2,-7,8,3,-8,-6,6,10,-3,-2],[-6,1,7,3,-2,6,1,8,-9,-7,7],[-9,-9,9,-7,2,-7,-9,10,8,8,8],[7,1,5,2,-3,-7,2,-6,-8,2,3],[2,3,5,-3,-3,9,6,-3,-7,9,-1],[-1,10,7,-7,-3,-4,-8,-10,-4,-1,8],[-8,-6,-7,9,6,7,1,7,-6,8,9],[-3,-9,3,-9,-7,-1,-1,8,8,-10,-9],[3,-1,-8,-1,5,5,8,-5,-8,5,7],[-8,6,10,-5,6,-7,-4,-6,-10,-6,8],[-5,-4,-5,-2,5,-9,10,-4,10,-10,9],[-10,9,-9,-6,-3,-7,-4,4,-9,8,7],[-9,2,4,-4,7,9,3,3,4,10,2],[8,-2,4,-4,9,-5,1,-2,-4,9,5],[3,3,5,-3,-9,-1,-7,-2,-8,-4,-1],[-4,-2,-4,-2,-4,8,-4,-3,7,7,3],[-7,-7,-6,-9,8,2,2,2,6,8,-5],[6,-1,-2,-5,4,-9,-8,-4,10,10,5],[-9,-5,6,6,10,-1,-6,-9,7,-2,8],[9,-7,-5,2,-9,8,-3,-9,-6,-2,-10],[-10,-1,4,-1,-5,4,9,1,1,2,5],[-4,6,-5,-8,1,6,5,7,-4,-6,6],[-10,-9,-6,2,8,-8,-7,5,10,3,7],[-5,4,7,-8,7,10,10,-7,-9,-8,1],[2,3,1,-7,4,5,3,-7,-6,10,-10],[-4,-3,-4,-2,8,-1,5,7,-2,-5,-8],[-10,-1,9,2,2,-8,9,-5,7,4,-6],[-1,2,-3,-4,-7,-6,-1,-2,6,-9,8],[-6,-6,8,-2,8,7,-1,-8,1,-7,4],[4,1,9,-6,-5,-1,7,2,6,-3,1]], dtype = "int16")#candidate|4974|(143, 11)|const|int16
call_4973 = func_4790_call(relay.reshape(const_4974.astype('int16'), [13, 11, 11]), relay.reshape(const_4974.astype('int16'), [13, 11, 11]), )
call_4975 = func_4790_call(relay.reshape(const_4974.astype('int16'), [13, 11, 11]), relay.reshape(const_4974.astype('int16'), [13, 11, 11]), )
output = relay.Tuple([call_4930,call_4946,var_4949,bop_4965,call_4973,const_4974,])
output2 = relay.Tuple([call_4931,call_4947,var_4949,bop_4968,call_4975,const_4974,])
func_4977 = relay.Function([var_4949,var_4950,], output)
mod['func_4977'] = func_4977
mod = relay.transform.InferType()(mod)
mutated_mod['func_4977'] = func_4977
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4977_call = mutated_mod.get_global_var('func_4977')
var_4979 = relay.var("var_4979", dtype = "float32", shape = (126,))#candidate|4979|(126,)|var|float32
var_4980 = relay.var("var_4980", dtype = "bool", shape = (1792,))#candidate|4980|(1792,)|var|bool
call_4978 = func_4977_call(var_4979,var_4980,)
output = call_4978
func_4981 = relay.Function([var_4979,var_4980,], output)
mutated_mod['func_4981'] = func_4981
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2044_call = mod.get_global_var('func_2044')
func_2045_call = mutated_mod.get_global_var('func_2045')
call_5021 = relay.TupleGetItem(func_2044_call(), 3)
call_5022 = relay.TupleGetItem(func_2045_call(), 3)
uop_5024 = relay.sigmoid(call_5021.astype('float32')) # shape=(16, 112)
uop_5026 = relay.sigmoid(call_5022.astype('float32')) # shape=(16, 112)
func_4541_call = mod.get_global_var('func_4541')
func_4543_call = mutated_mod.get_global_var('func_4543')
call_5027 = func_4541_call()
call_5028 = func_4541_call()
output = relay.Tuple([uop_5024,call_5027,])
output2 = relay.Tuple([uop_5026,call_5028,])
func_5030 = relay.Function([], output)
mod['func_5030'] = func_5030
mod = relay.transform.InferType()(mod)
mutated_mod['func_5030'] = func_5030
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5030_call = mutated_mod.get_global_var('func_5030')
call_5031 = func_5030_call()
output = call_5031
func_5032 = relay.Function([], output)
mutated_mod['func_5032'] = func_5032
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3828_call = mod.get_global_var('func_3828')
func_3829_call = mutated_mod.get_global_var('func_3829')
call_5033 = relay.TupleGetItem(func_3828_call(), 0)
call_5034 = relay.TupleGetItem(func_3829_call(), 0)
uop_5045 = relay.erf(call_5033.astype('float64')) # shape=(11, 15, 12)
uop_5047 = relay.erf(call_5034.astype('float64')) # shape=(11, 15, 12)
func_2846_call = mod.get_global_var('func_2846')
func_2849_call = mutated_mod.get_global_var('func_2849')
var_5053 = relay.var("var_5053", dtype = "int32", shape = (195,))#candidate|5053|(195,)|var|int32
call_5052 = relay.TupleGetItem(func_2846_call(relay.reshape(var_5053.astype('int32'), [195,])), 5)
call_5054 = relay.TupleGetItem(func_2849_call(relay.reshape(var_5053.astype('int32'), [195,])), 5)
output = relay.Tuple([uop_5045,call_5052,var_5053,])
output2 = relay.Tuple([uop_5047,call_5054,var_5053,])
func_5064 = relay.Function([var_5053,], output)
mod['func_5064'] = func_5064
mod = relay.transform.InferType()(mod)
var_5065 = relay.var("var_5065", dtype = "int32", shape = (195,))#candidate|5065|(195,)|var|int32
output = func_5064(var_5065)
func_5066 = relay.Function([var_5065], output)
mutated_mod['func_5066'] = func_5066
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3132_call = mod.get_global_var('func_3132')
func_3133_call = mutated_mod.get_global_var('func_3133')
call_5070 = func_3132_call()
call_5071 = func_3132_call()
func_4838_call = mod.get_global_var('func_4838')
func_4840_call = mutated_mod.get_global_var('func_4840')
call_5072 = relay.TupleGetItem(func_4838_call(), 1)
call_5073 = relay.TupleGetItem(func_4840_call(), 1)
uop_5077 = relay.rsqrt(call_5072.astype('float64')) # shape=(16, 112)
uop_5079 = relay.rsqrt(call_5073.astype('float64')) # shape=(16, 112)
output = relay.Tuple([call_5070,uop_5077,])
output2 = relay.Tuple([call_5071,uop_5079,])
func_5081 = relay.Function([], output)
mod['func_5081'] = func_5081
mod = relay.transform.InferType()(mod)
mutated_mod['func_5081'] = func_5081
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5081_call = mutated_mod.get_global_var('func_5081')
call_5082 = func_5081_call()
output = call_5082
func_5083 = relay.Function([], output)
mutated_mod['func_5083'] = func_5083
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3083_call = mod.get_global_var('func_3083')
func_3084_call = mutated_mod.get_global_var('func_3084')
call_5101 = relay.TupleGetItem(func_3083_call(), 1)
call_5102 = relay.TupleGetItem(func_3084_call(), 1)
uop_5103 = relay.exp(call_5101.astype('float32')) # shape=(10, 5, 2)
uop_5105 = relay.exp(call_5102.astype('float32')) # shape=(10, 5, 2)
output = uop_5103
output2 = uop_5105
func_5108 = relay.Function([], output)
mod['func_5108'] = func_5108
mod = relay.transform.InferType()(mod)
output = func_5108()
func_5109 = relay.Function([], output)
mutated_mod['func_5109'] = func_5109
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3796_call = mod.get_global_var('func_3796')
func_3797_call = mutated_mod.get_global_var('func_3797')
call_5110 = relay.TupleGetItem(func_3796_call(), 1)
call_5111 = relay.TupleGetItem(func_3797_call(), 1)
uop_5112 = relay.atan(call_5110.astype('float64')) # shape=(16, 112)
uop_5114 = relay.atan(call_5111.astype('float64')) # shape=(16, 112)
output = uop_5112
output2 = uop_5114
func_5116 = relay.Function([], output)
mod['func_5116'] = func_5116
mod = relay.transform.InferType()(mod)
mutated_mod['func_5116'] = func_5116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5116_call = mutated_mod.get_global_var('func_5116')
call_5117 = func_5116_call()
output = call_5117
func_5118 = relay.Function([], output)
mutated_mod['func_5118'] = func_5118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2780_call = mod.get_global_var('func_2780')
func_2781_call = mutated_mod.get_global_var('func_2781')
call_5131 = relay.TupleGetItem(func_2780_call(), 0)
call_5132 = relay.TupleGetItem(func_2781_call(), 0)
output = call_5131
output2 = call_5132
func_5133 = relay.Function([], output)
mod['func_5133'] = func_5133
mod = relay.transform.InferType()(mod)
output = func_5133()
func_5134 = relay.Function([], output)
mutated_mod['func_5134'] = func_5134
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2780_call = mod.get_global_var('func_2780')
func_2781_call = mutated_mod.get_global_var('func_2781')
call_5140 = relay.TupleGetItem(func_2780_call(), 0)
call_5141 = relay.TupleGetItem(func_2781_call(), 0)
output = call_5140
output2 = call_5141
func_5142 = relay.Function([], output)
mod['func_5142'] = func_5142
mod = relay.transform.InferType()(mod)
mutated_mod['func_5142'] = func_5142
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5142_call = mutated_mod.get_global_var('func_5142')
call_5143 = func_5142_call()
output = call_5143
func_5144 = relay.Function([], output)
mutated_mod['func_5144'] = func_5144
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5161 = relay.const([[[8.932757,8.280746,-7.050324,-4.745473,-4.315434,-7.949295],[9.702301,4.242198,2.634039,5.657052,-0.911569,-3.640197],[0.661997,0.485790,-7.603550,1.361884,-0.586634,3.709956],[0.196504,1.034973,4.130445,3.787418,-1.189938,-5.463927],[-8.136307,-5.617235,0.933114,9.719847,8.555995,-7.725072],[3.648892,2.350403,-3.098987,2.746331,7.773584,2.464546],[-9.347195,4.451261,9.300963,-2.219067,5.239437,-4.786641],[-6.014079,-5.601083,-7.523576,6.393216,-4.453123,7.940663],[-5.929096,3.214997,5.753602,-2.992498,8.520279,-2.073791],[0.172989,4.126882,-3.788947,6.971674,8.945152,-2.683198],[-4.459031,0.701114,-9.816903,9.251664,0.779186,-1.489042],[3.495353,-0.137628,5.329951,0.621777,-9.247322,8.722206],[-3.837887,1.827482,-4.548429,5.032238,7.422126,-5.116102],[4.103163,-3.223865,-3.553068,3.542423,0.945419,-6.033242],[-8.888343,7.705262,-5.004873,0.142373,0.811998,-1.306109]]], dtype = "float64")#candidate|5161|(1, 15, 6)|const|float64
var_5162 = relay.var("var_5162", dtype = "float64", shape = (2, 15, 6))#candidate|5162|(2, 15, 6)|var|float64
bop_5163 = relay.greater_equal(const_5161.astype('bool'), var_5162.astype('bool')) # shape=(2, 15, 6)
func_3697_call = mod.get_global_var('func_3697')
func_3699_call = mutated_mod.get_global_var('func_3699')
const_5167 = relay.const([[-3,-10,-9,9,-2,-3,5,2,9,2,-5,1,-6,-6,-10,8,3,-8,-10,-10,6,-1,-5,10,-6,10,-3,-7,-1,-7,1,-4,1,7,-1,-4,-8,9,7,9,-4,-7,3,7,10,7,-7,-4,-5,2,7,4,-2,-1,4,4,-1,4,-8,-10,-3,10,9,10,6,-9,-7,-10,-6,8,5,8,5,-1,-3,3,-7,-7,8,10,7,-9,-2,3,-4,-8,3,4,-7,2,8,-7,-8,-1,10,-2,-1,-3,-2,1,-5,4,4,-7,4,3,5,-7,4,1,7,3,4,9,10,3,-8,5,-4,-2,-4,-10,-5,-3,-5,3,8,10,-1,10,-8,9,10,9,-10,4,-8,-6,1,9,6,8,7,-7,-6,2,-10,1,8,-3,2,4,-2,-2,10,9,-5,-9,4,3,-1,-3,7,-8,-7,-3,8,9,-6,3,4,1,10,2,-3,5,1,4,3,2,5,-8,-1,-3,10,4,-9,-3,-2,-4,-9,9,-8,-5,5,2,3,2,-9,-2,10,-2,8,9,-10,4,-3,-9,-6,-1,-4,-2,3,10,9,-2,7,-10,-1,4,4,-1,1,-6,-4,7,-8,-4,2,-4,5,2,9,-6,10,2,-8,-9,-2,-5,1,-6,-2,3,-6,7,-10,5,2,10,1,-6,-2,9,1,2,-7,-5,9,-5,3,-6,4,2,3,5,-3,-5,7,1,-2,-2,-1,10,-4,-5,-10,2,2,-7,8,-9,5,6,-1,-10,1,-2,10,10,-8,3,-6,1,8,3,1,5,-9,8,1,1,-1,-2,-4,6,-9,-1,1,5,9,3,9,8,2,-7,5,3,-10,8,9,-9,3,5,1,3,-7,2,6,-5,-7,9,10,-9,-9,8,2,-8,9,-9,5,-2,6,-10,5,1,10,3,4,-2,-8,-10,-10,-5,6,-9,4,5,7,-4,-1,-6,5,-10,-1,1,-5,-2,-1,-3,-1,-8,-6,-6,-8,-7,5,1,5,10,-6,-9,-2,-7,10,-2,2,5,-4,-3]], dtype = "uint8")#candidate|5167|(1, 390)|const|uint8
call_5166 = relay.TupleGetItem(func_3697_call(relay.reshape(const_5167.astype('uint8'), [195, 2])), 0)
call_5168 = relay.TupleGetItem(func_3699_call(relay.reshape(const_5167.astype('uint8'), [195, 2])), 0)
func_114_call = mod.get_global_var('func_114')
func_118_call = mutated_mod.get_global_var('func_118')
var_5170 = relay.var("var_5170", dtype = "float32", shape = (39,))#candidate|5170|(39,)|var|float32
var_5171 = relay.var("var_5171", dtype = "float32", shape = (624,))#candidate|5171|(624,)|var|float32
call_5169 = relay.TupleGetItem(func_114_call(relay.reshape(var_5170.astype('float32'), [3, 1, 13]), relay.reshape(var_5171.astype('float32'), [3, 16, 13]), ), 0)
call_5172 = relay.TupleGetItem(func_118_call(relay.reshape(var_5170.astype('float32'), [3, 1, 13]), relay.reshape(var_5171.astype('float32'), [3, 16, 13]), ), 0)
output = relay.Tuple([bop_5163,call_5166,const_5167,call_5169,var_5170,var_5171,])
output2 = relay.Tuple([bop_5163,call_5168,const_5167,call_5172,var_5170,var_5171,])
func_5176 = relay.Function([var_5162,var_5170,var_5171,], output)
mod['func_5176'] = func_5176
mod = relay.transform.InferType()(mod)
var_5177 = relay.var("var_5177", dtype = "float64", shape = (2, 15, 6))#candidate|5177|(2, 15, 6)|var|float64
var_5178 = relay.var("var_5178", dtype = "float32", shape = (39,))#candidate|5178|(39,)|var|float32
var_5179 = relay.var("var_5179", dtype = "float32", shape = (624,))#candidate|5179|(624,)|var|float32
output = func_5176(var_5177,var_5178,var_5179,)
func_5180 = relay.Function([var_5177,var_5178,var_5179,], output)
mutated_mod['func_5180'] = func_5180
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2598_call = mod.get_global_var('func_2598')
func_2600_call = mutated_mod.get_global_var('func_2600')
call_5204 = func_2598_call()
call_5205 = func_2598_call()
func_723_call = mod.get_global_var('func_723')
func_726_call = mutated_mod.get_global_var('func_726')
var_5214 = relay.var("var_5214", dtype = "int32", shape = (195,))#candidate|5214|(195,)|var|int32
call_5213 = relay.TupleGetItem(func_723_call(relay.reshape(var_5214.astype('int32'), [195,]), relay.reshape(var_5214.astype('int32'), [195,]), ), 1)
call_5215 = relay.TupleGetItem(func_726_call(relay.reshape(var_5214.astype('int32'), [195,]), relay.reshape(var_5214.astype('int32'), [195,]), ), 1)
bop_5222 = relay.subtract(call_5213.astype('int16'), relay.reshape(var_5214.astype('int16'), relay.shape_of(call_5213))) # shape=(5, 13, 3)
bop_5225 = relay.subtract(call_5215.astype('int16'), relay.reshape(var_5214.astype('int16'), relay.shape_of(call_5215))) # shape=(5, 13, 3)
func_4706_call = mod.get_global_var('func_4706')
func_4711_call = mutated_mod.get_global_var('func_4711')
var_5227 = relay.var("var_5227", dtype = "float64", shape = (32, 56))#candidate|5227|(32, 56)|var|float64
const_5228 = relay.const([[5.406663,-5.030897,6.555588,1.705232,-5.646372,-5.290428,-3.177060,-3.535247,-6.789854,6.889507,2.028993,6.616422,-6.979041,-5.777870,-1.386651,5.937806,-1.360849,-4.075834,2.445818,3.640026,-5.998794,6.563422,8.630624,-9.497408,-0.248949,-5.231750,4.903657,-9.123559,1.046296,9.802908,3.718763,7.052689,-7.803213,3.924312,6.605256,-4.541780,3.795700,-4.436476,8.187004,-2.086556,-3.602371,2.959747,-6.151414,3.247778,8.705202,1.022108,-7.240672,-7.004332,-6.544867,-1.075343,-0.157715,-9.494212,-8.050713,9.970654,3.893725,-5.658660,-3.047571,-2.336199,5.214577,-2.837049,-9.400321,2.853332,4.598928,7.914007,-0.414617,9.819986,-8.143574,-5.245179,0.508161,-0.998263,9.563243,-0.260782,3.067323,-6.515307,8.559120,3.634183,-3.080917,-9.030598,-5.947762,5.585061,5.967358,-6.150745,-0.058934,-9.535321,-2.156619,9.012791,7.448877,2.181154,-2.646956,3.669280,1.685005,6.948480,-3.232389,1.706130,3.042863,4.029710,3.586654,8.392686,-7.406623,8.446178,-9.040125,-5.286524,9.352488,-8.961257,9.327801,9.113140,-3.260493,-2.541053,-4.268122,-1.281290,-5.225545,-1.527811,6.372253,-8.270671,3.551962,-1.014469,-3.795461,-3.741856,-2.382000,7.954353,-9.176737,-7.610308,7.023870,3.681562,-4.782173,1.235597,8.409845,0.142259,0.054947,-8.507655,5.048641,2.847554,9.500890,6.914435,-0.751423,0.292707,7.613001,-2.224649,-7.063710,-7.175723,6.364217,-7.404259,3.266097,1.094241,5.565576,-0.105003,-2.829129,-2.609735,3.335184,7.586194,-3.976785,-5.617274,7.511279,-5.207848,3.834514,-6.126048,-9.472991,6.479545,-7.408248,1.465334,3.185616,5.258294,5.952505,5.705780,5.973692,-3.197611,-5.391482,-4.056274,9.263632,8.343290,2.558379,6.877494,-5.131033,-0.510790,4.238339,-8.169632,8.997751,-5.216472,1.738035,4.750728,3.040050,-2.711791,-6.641113,8.609828,9.253605,-6.202203,-2.939012,7.968315,0.731979,-5.315510,8.441424,4.467888,-3.339367,4.200261,9.500399,-3.961339,-5.086554,-5.268579,7.821443,7.981441,6.145298,-8.001244,6.573479,-2.262323,3.981272,-8.882846,-2.047651,5.374041,7.268652,-3.885734,7.889066,8.082222,-6.832800,-8.934053,6.988233,-7.237845,-2.042349,4.802735,-2.995857,-4.990603,-2.163546,-3.004671,-4.940209,0.062625,-3.665977,-6.972459,-3.970976,-1.915049,-2.895027,2.331674,-4.721975,-8.486501,-7.966254,-7.785535,5.382918,-1.018624,8.909002,-3.982854,-6.221960,-5.896766,-4.781684,-3.267864,-3.272587,7.922403,9.342772,3.027734,-2.315974,-9.394546,0.905040,-2.247160,0.921703,-6.837698,3.676172,-1.245461,-5.207429,9.364243,-7.808370,5.792043,-2.514139,8.019533,1.575776,1.960058,-0.195085,-4.078980,-1.960926,-8.089970,6.624711,0.464468,-5.532178,-6.664861,-0.179115,4.898258,7.125863,7.266363,2.675699,-5.460144,6.236524,-6.067077,6.585464,5.258166,0.150252,-5.754625,-9.030697,-5.756189,5.772134,7.482532,-4.601382,-9.401394,-1.875051,8.869115,-4.443522,-7.193771,1.955160,2.983544,-8.060942,-5.658588,3.026654,-3.955744,-3.922200,-8.763555,-0.935211,9.539934,-8.502447,-8.222299,-4.657532,-3.627230,3.824705,-3.147077,9.099137,-2.506274,9.924471,-6.672946,6.760710,-8.625744,6.615653,5.363789,9.669039,-7.369665,3.062816,-2.347921,-5.214720,-3.189834,4.834408,-2.451670,2.206326,-0.448519,3.963270,1.013580,-5.071019,7.109645,-8.042311,0.976611,4.888488,4.613439,-3.766912,-2.299041,-9.361832,6.149058,-6.913647,-2.327720,-1.035964,-4.285557,9.133443,-1.192796,0.127888,1.305255,-4.891945,7.337344,-3.296977,-9.942949,-8.788466,0.423321,-2.550952,5.416651,-8.949190,-7.064677,-5.434146,9.704906,-6.885010,5.615328,4.276895,1.933938,8.168900,8.426978,4.322903,0.906251,6.810414,-0.201342,4.530412,-4.164465,1.836347,-3.178976,4.607020,-8.550331,3.832524,1.732791,-5.271580,-7.238136,-6.957222,-2.369283,-1.532156,5.033945,-1.172897,0.590598,6.057837,-2.853720,-9.948679,5.211238,-1.320931,1.089572,6.998585,-4.861732,1.886468,-9.169947,-7.709659,3.679550,-4.643394,-4.645233,-4.463874,-0.070363,2.873102,-4.371435,3.506911,1.400946,4.406049,6.759166,-6.761292,6.893364,-3.369122,0.022171,-0.137489,9.475346,4.491497,5.157287,1.683827,-0.867620,-5.696449,-7.780638,-9.580592,6.756420,-6.300701,-7.038409,-3.053706,-5.583908,3.579310,-6.666449,-8.891719,-6.793063,3.858801,6.227067,3.877928,-5.019318,6.780182,4.416536,-3.156585,9.227600,6.883188,7.140040,9.685523,7.144142,7.441213,-7.862090,5.038892,-7.697051,0.342522,-6.103597,9.346503,-1.147946,7.511421,-0.449916,6.985517,4.180443,8.247288,-3.621287,-8.650906,-6.861192,5.153342,-1.133536,7.365503,-5.968544,-5.028717,-4.804224,0.436932,-1.993716,-4.846965,-9.774252,0.479029,2.242864,3.465769,6.078227,2.464155,3.037063,8.614924,1.029928,-8.375781,3.820256,-6.485798,-1.139631,-3.822421,2.031216,8.201409,-2.658061,2.701559,-7.252490,-9.039602,-8.128329,0.384939,-6.294989,6.667728,6.344264,7.974573,9.742648,-1.781122,7.667199,-3.508605,-2.905558,0.501676,-6.876338,-3.084085,4.682923,0.865251,-8.589265,7.171714,6.049775,-0.759367,2.080802,6.570490,-8.987300,-1.381592,-3.672265,-9.178552,2.965058,-9.376109,-3.911069,-0.447073,8.774510,3.224414,-6.595101,-5.159456,-8.039346,-6.954151,0.954392,-4.014518,-8.941714,2.867101,9.388120,7.238875,8.177613,0.389619,-7.679190,9.116581,5.829939,5.840795,-6.046405,7.239406,-2.310349,-5.048458,9.421598,1.931917,5.747767,-4.312849,-7.043328,8.318561,7.242073,3.120914,-3.513882,9.599688,-9.806832,1.953409,0.057463,9.008619,8.263891,7.935328,-7.874694,-8.753489,0.156498,-1.197996,-8.417744,-1.944370,-9.478156,7.477950,-6.078354,-6.075251,1.332099,2.579431,-6.847041,-9.415803,-2.800549,-9.599126,9.853985,2.226688,-3.492000,-0.265921,8.980437,-9.132700,0.690773,0.606624,1.380888,-6.400370,7.458756,9.820892,-3.316463,1.804139,6.485002,3.764955,-1.080112,9.895984,-3.411509,2.239238,-2.079877,-8.493513,0.994676,-9.628205,1.633456,8.449683,-0.021265,5.265329,4.293003,-3.541060,-9.198810,1.471034,-9.981302,8.040968,-5.304366,-0.713229,6.981119,-3.204606,-1.522783,3.502165,1.881798,2.947341,8.443022,-0.720537,1.274758,5.477559,-6.904676,4.062780,5.135560,-4.359264,8.186296,4.388041,2.974260,-7.298260,-2.734325,2.731907,-3.730987,3.529196,4.811525,-2.248045,-7.187793,4.214855,-7.452789,0.703825,8.403639,-9.208928,3.549002,5.910316,1.425023,-9.068638,5.753089,-6.944020,-6.224262,8.060556,8.999894,7.178466,3.152322,2.807138,4.526024,-6.916081,-5.543794,6.070764,-0.539797,-1.139933,-7.125559,3.294550,-0.317756,-6.299272,4.469738,7.491809,8.319532,4.606602,1.039304,9.104813,0.221874,1.980798,-5.613097,1.531672,-3.378430,-9.472443,5.464747,-4.875904,9.676761,-9.694923,1.120644,-8.974534,-3.077560,6.347126,-6.192835,-8.764438,-5.886288,7.000746,0.987732,7.315201,-7.723853,-1.716165,9.926950,3.532043,2.174605,-5.498925,4.563660,-6.750519,-4.926668,5.609115,-5.631080,-5.208851,-8.578494,4.482413,1.157918,5.183666,-5.392716,5.138125,-7.265450,3.412698,-8.689501,-4.737106,-0.378836,-7.809110,9.582780,8.195181,8.915579,-4.492258,8.805866,4.818650,0.426550,-4.102738,1.403354,2.248346,-8.517562,4.985740,-4.244353,1.086040,-7.753471,5.641485,2.860258,8.067548,6.839876,-6.102353,0.210876,8.954903,-2.895659,0.120065,9.281385,-9.890618,1.051058,-5.853188,3.447475,-4.580915,6.917067,0.759753,-3.828781,-0.737855,7.343063,-3.816254,-7.373650,3.098111,0.293830,-6.695776,3.295871,-0.065295,4.199033,1.357672,-2.027293,-7.991541,2.295111,3.733805,5.292546,7.681876,-4.799222,1.398956,7.766598,-0.636331,2.556227,4.842990,7.668168,5.359356,1.915613,9.292906,-3.890900,2.873376,-2.807601,0.784897,-3.781721,-8.885357,-4.983700,-7.647584,-2.906385,-5.385768,2.819097,-9.137479,-2.958022,7.036055,-9.322584,0.247978,2.618253,5.955504,6.818757,9.278895,3.117920,8.837170,3.264241,-3.284591,-2.315613,-7.747776,-4.691753,-3.244157,-0.596687,-2.249433,-0.284811,-8.215185,0.993658,3.553037,-7.306109,-6.894497,-8.283136,-3.345838,8.353906,1.818164,6.629317,-7.333788,2.377331,-2.163269,-0.190140,-5.774361,8.019198,-6.028555,-8.451202,1.141583,-7.740182,3.452902,5.848095,9.632849,-6.486606,-0.644801,-2.538000,2.123856,1.151514,5.848654,1.939017,9.191169,-5.070639,2.266812,6.275601,-5.786362,-6.252925,8.360903,5.687581,7.503901,8.751772,3.058169,-7.042132,8.666012,3.547312,4.599773,1.778742,9.055708,3.712166,-4.024811,3.308492,-2.170141,-3.659669,-2.195345,-2.107048,2.833184,2.821097,5.547458,-5.565440,-5.974836,-4.967502,-6.174310,-1.660860,2.495131,-4.651126,-2.502597,-9.460948,9.808843,-1.583191,-9.009537,4.762281,9.069198,3.813521,-2.718315,5.729735,0.906041,3.349093,9.015123,9.475937,8.489289,9.162459,2.134710,-6.579018],[-7.075259,-9.666516,-6.191944,5.010505,6.307615,-5.818980,-9.815444,-6.398095,7.038493,9.027231,5.114917,-1.971788,-6.278542,-8.399814,7.586735,-3.245240,-2.905263,1.458841,9.521712,-7.157138,4.785649,-4.695990,-1.401976,0.843183,-7.912886,8.733437,7.957382,-9.571919,0.279591,9.291410,-4.895570,-8.819250,7.568695,1.034720,-7.380836,2.480944,-9.668455,0.870765,-7.603364,8.644141,4.350910,-6.283032,-9.494737,-3.062720,7.011866,-1.359452,-1.352156,-6.039518,-5.474640,-8.740859,9.819150,-5.482884,2.308591,7.365924,-5.433560,4.069048,0.936798,-3.999852,-2.881517,5.662440,8.567138,3.622597,-2.983883,8.209504,4.839359,-2.546830,8.644448,9.358555,-8.679650,-8.985017,4.475016,4.797322,0.206159,-9.404346,-2.895778,7.412494,4.645053,6.282076,5.673128,3.200888,-9.267041,9.190307,-9.706714,4.258751,9.593912,-0.493791,6.759274,6.070163,9.252261,-0.751212,4.404188,7.402625,7.973342,8.979574,0.843438,8.702900,-2.899970,0.466308,9.853224,1.391647,-5.051866,8.583416,5.404788,-4.045809,-7.075213,8.083655,6.979403,0.942041,6.598516,2.364445,5.965333,0.278434,7.007882,-1.190625,4.873368,-3.229810,3.608824,2.891879,-1.735705,-0.149466,-4.371966,0.067061,-6.669585,-5.699919,0.149894,6.286691,3.349133,-2.303417,9.112246,6.556272,-9.707357,9.233233,-1.409537,2.323809,-2.156685,5.931117,7.054132,-2.629039,6.518382,2.280075,-5.098915,6.210150,7.354593,6.944064,4.995636,1.929396,-2.222301,5.852417,0.594401,3.965891,-7.291796,8.340469,4.059154,-9.508777,-5.605073,5.918118,-6.587924,-2.848501,-4.889757,-6.519357,9.303363,-8.732357,-7.704631,-6.305140,-4.969319,-2.665714,-6.475413,-7.514263,0.503251,0.427388,-0.596227,9.191550,0.569197,4.494907,0.407949,2.881702,3.792167,-5.320681,-5.068368,-6.006146,-4.093919,3.542289,-2.126650,7.735060,-8.548803,4.794478,7.073287,4.070056,4.053173,6.279996,1.914887,2.031656,-1.024071,-8.280300,-3.416554,9.389736,9.554886,6.524198,-1.643246,-1.494796,8.381117,9.285156,-2.560338,-1.253919,7.746978,-7.605551,-4.070557,-0.052681,7.668365,4.098355,6.894755,-0.365148,-8.648128,-8.959943,-2.501335,5.926619,-9.662901,8.932459,-7.414238,-4.401242,7.305711,-3.973585,-0.158135,-8.277103,4.637619,0.752903,-3.316038,-7.425471,-6.005488,3.991987,5.596860,-0.985554,8.214720,-4.627513,4.914143,-3.171278,5.168963,4.549632,8.101822,7.030103,9.334319,9.447726,-6.296568,-0.276567,-7.875619,-4.270780,3.646452,8.500142,-3.990807,-7.447047,2.159967,-1.398636,0.929635,-2.444192,5.289634,8.248734,1.559644,-5.000797,-2.318425,-7.328531,-8.782900,-1.175129,0.064372,-8.012705,1.419845,-9.469359,0.505275,5.489802,-3.772309,4.788152,7.099814,-8.968378,9.124551,3.740775,-3.810997,-2.807283,-9.899775,-5.548810,5.430269,9.415379,9.535506,2.122729,-1.836078,7.078808,-8.422747,-0.428461,9.529192,-8.509344,8.071293,9.477024,6.171029,-4.170132,-7.858395,-0.481063,5.021846,5.924141,2.371167,-0.750260,0.893103,-7.113218,-1.275108,-4.881412,5.257185,2.828339,-4.978658,-3.637170,-9.838829,4.621954,3.199179,-7.165515,1.016393,3.737991,-1.627447,-6.662507,1.411979,-0.380602,9.200826,-3.743437,1.409840,3.138942,-4.657486,-4.482045,-6.216878,5.451009,1.041763,-6.514290,6.717447,6.705646,8.881193,-2.620809,-6.962818,2.825663,6.640947,-8.452003,6.657507,-0.104394,-0.939622,-5.025328,-3.785526,-6.385415,-1.335619,-4.022358,1.712715,6.416896,1.191645,9.328598,-6.266857,8.693623,-5.352291,2.447428,5.883816,6.204316,-5.526351,-7.918960,-4.346710,-5.805302,1.086615,-1.453459,-9.271216,-3.155863,2.389614,5.465962,-4.751325,5.040526,-3.839825,-2.792756,-1.895387,5.476183,2.258918,4.079054,3.037291,-9.544502,-2.677208,3.688573,5.179900,-3.234341,3.624972,-6.117161,-0.867145,0.256698,-5.501664,-5.235835,4.500579,5.076477,2.684466,-2.501087,-6.376417,-8.007565,-2.194869,2.613603,6.615386,-4.866929,1.798438,-6.372069,2.436201,4.698795,3.999583,-2.884076,4.719059,9.577703,6.856066,8.576027,0.014874,-5.583049,9.777438,2.016513,-1.996056,-3.010738,-0.478410,8.507767,-3.962084,-1.709501,9.932334,-9.823669,-7.182060,2.152903,-9.753840,-1.712657,-7.862610,7.169645,-6.812197,-7.929701,-1.913739,3.041763,6.542137,-8.923521,0.733782,5.755575,-6.821488,6.364182,-6.115268,-8.671311,-8.163350,-6.820997,4.493363,-1.883575,-2.091878,-8.053060,9.088964,9.892194,1.218250,-1.520837,-1.160097,0.687056,-5.497441,-5.643932,1.188816,5.594101,9.393198,0.741478,6.859456,-5.466599,-0.166856,-7.723743,-0.833486,1.712095,-2.348268,-3.119822,3.969608,8.547080,8.015196,-9.796343,-3.958644,-3.506633,4.801038,-9.961701,9.320572,-8.364290,-7.298463,-2.519890,8.938489,-0.460030,1.745006,-9.884850,-2.329665,-6.785549,2.055322,-0.608647,-4.564791,1.595713,-5.408025,-8.368048,5.323874,-1.869167,-3.318720,-5.529863,-7.353474,5.110242,-1.801339,-0.332241,3.543457,-2.812490,-0.703212,-9.801332,3.615929,-6.320349,4.425060,3.711971,-2.333266,-0.422019,-7.624815,-6.127225,0.759964,2.233400,7.450512,-9.345022,-3.072326,-0.144231,-4.873813,-0.363654,-2.870970,4.214063,4.275705,-7.085666,-3.529278,-0.968722,-4.709417,7.274169,-1.193693,7.022299,2.366467,-4.242601,-4.440577,-2.224633,5.571962,-9.720767,9.273615,-9.948315,-5.764587,-1.848105,1.075688,-7.640013,9.452517,-6.737864,-9.328658,-7.470707,4.023669,0.804188,2.828309,-8.600634,-0.629930,-8.336721,5.752279,6.910728,-4.776204,-1.929259,-6.896534,4.293481,1.103954,-2.010289,9.178189,7.291806,6.867820,-9.097430,-7.100280,-5.183970,8.955385,-4.194497,9.009272,-7.721992,-0.242301,7.153659,9.362641,-0.199822,-5.253221,-6.269066,5.216433,9.554705,0.551437,0.528926,-4.157354,-3.121857,3.414869,-9.758603,-4.517871,-6.187398,-1.442839,-1.133239,-8.735539,-4.016404,9.753411,-8.055283,-8.597413,5.414456,9.424969,6.500515,-9.583099,4.633745,-7.821858,-7.593966,-7.384099,9.171099,4.115197,3.826492,3.239419,-5.429058,-8.797734,2.723857,-2.190123,-4.349012,-3.035806,-1.992615,-0.884246,-1.778890,6.483298,9.500183,7.742179,-2.943026,-5.093608,-9.092806,3.703929,-6.788959,3.630509,-7.177302,8.383677,6.914965,-4.819261,-5.718157,9.890346,-2.195001,-3.671108,-6.502172,-9.962980,-9.395526,-4.649036,-4.982766,1.703841,-8.471949,5.251227,2.362018,9.214864,-2.541490,-0.664294,-6.007108,6.142486,-3.878559,3.113902,1.920621,-5.693888,-8.654808,-5.228416,-8.230271,-7.351433,-1.389895,-4.717905,-0.686220,-4.820351,0.178068,4.386504,-6.948614,-3.349942,-0.124534,2.966332,-1.241403,0.280169,9.800185,8.562689,-2.677403,-1.925590,7.540302,-0.523330,-0.420732,-2.437079,8.565811,-5.784388,-7.934004,-4.375829,-0.627152,-8.082844,7.401712,5.529811,4.294086,3.546811,-5.633004,-3.593476,-8.644622,4.927343,3.745229,-9.529023,-3.210828,-3.801988,-1.305164,4.692253,9.529780,2.513777,-4.665903,2.964021,0.450972,0.114680,-5.902891,-0.255550,-3.670217,5.305586,6.064412,-0.259832,-2.927961,3.557172,9.261452,0.956378,-6.163992,-7.939338,-9.557382,4.675303,-1.769587,8.790479,-6.889008,8.451023,-2.538137,3.112742,-6.555038,2.182324,-6.198813,5.074353,9.480635,-8.632166,2.434233,-8.978045,-1.730384,-0.496739,-9.911660,0.680691,6.580987,7.197720,-3.065569,7.553660,-5.993694,7.513264,6.521280,7.104894,-2.894911,1.888518,-9.852217,4.196226,4.243074,0.846066,0.387105,-2.240002,8.442702,-8.937975,-0.214567,-6.668420,-9.068735,-3.770755,6.287017,8.286891,1.276667,0.068670,-1.196119,6.241491,-5.715274,-6.500356,4.485154,-1.167479,-7.234379,-0.192371,1.867214,-2.501470,7.254953,1.145287,-6.115635,-8.666204,5.132580,6.661671,-2.224832,4.565599,0.893988,-8.124854,2.932982,7.627201,-9.943236,-8.155355,-4.983897,2.360006,7.310454,-5.714144,0.913197,-8.469310,4.944900,6.569596,-1.534105,-9.474429,-8.832176,-0.502434,-9.046256,0.332461,-7.078741,-7.042717,-4.204606,-0.530967,-6.182488,6.130998,9.541132,1.481225,4.449410,-8.253883,6.917502,0.871925,5.081786,3.987070,3.268062,-8.026630,6.311193,2.724420,0.703867,1.900804,-2.924863,6.563556,-6.886578,-7.334712,1.944750,2.947667,-3.360042,-1.355571,0.239269,1.884688,2.025827,-6.950874,-1.447837,-0.704097,5.043210,5.675047,5.746576,5.308472,2.530187,9.621185,-4.382524,-0.064714,-7.241226,-7.944783,-0.657062,-5.291690,-2.869929,-4.315137,-4.293033,-3.785584,5.660523,-6.134049,-9.845242,-8.338587,6.272056,1.447162,3.445304,-4.269439,-7.119185,8.544171,-4.012662,-1.506922,-3.820177,3.824439,-0.200830,-8.386455,-4.867709,-6.578805,-1.822747,-1.117171,-0.924752,1.446101,7.242777,4.551803,-3.683304,5.445045,2.665488,5.344570,-4.176116,-3.749761,-4.757625,-5.014514,4.916122,-4.454751,-4.291303,-9.966524,-1.645790,-9.557771,5.840143,0.792556,-7.012717,2.330960,1.880834,1.783195,3.461963]], dtype = "float64")#candidate|5228|(2, 880)|const|float64
call_5226 = relay.TupleGetItem(func_4706_call(relay.reshape(var_5227.astype('float64'), [16, 112]), relay.reshape(const_5228.astype('float64'), [1760,]), relay.reshape(var_5214.astype('int32'), [13, 15]), ), 3)
call_5229 = relay.TupleGetItem(func_4711_call(relay.reshape(var_5227.astype('float64'), [16, 112]), relay.reshape(const_5228.astype('float64'), [1760,]), relay.reshape(var_5214.astype('int32'), [13, 15]), ), 3)
const_5236 = relay.const([[5.039172,-8.871998,-4.756153,-2.850101,9.909228,5.672730,8.808947,-5.723966,-7.860995,3.548488,1.936370,-8.075188,1.689155,-6.823021,-5.506815,1.246994,8.273079,-8.935429,-8.014563,0.609619,7.620614,6.716409,9.785676,4.919074,0.271141,-3.170818,3.628718,0.630136,0.366355,8.097006,7.707087,2.987924,-2.653126,-9.134262,9.107183,6.210943,-0.141558,6.454304,-1.722904,4.148864,1.481820,-8.569454,-4.492546,1.498086,7.878125,9.645194,8.983663,2.625656,-6.033794,-2.965750,-6.767121,-8.500148,-8.906368,-4.248014,-1.385008,-0.376097],[1.292760,1.166645,-6.972666,-0.745884,7.943924,-7.146844,-8.098368,-8.599673,0.726764,-2.898410,-0.623904,-6.924774,-8.451467,-5.447894,-2.750802,7.454309,3.618533,6.681631,6.515318,-0.151125,3.821487,-7.519330,-0.204917,-4.475440,6.071518,0.694866,-3.151100,5.039763,9.718614,9.665379,-6.175121,4.382102,4.114991,-3.350918,-8.770065,0.090920,2.329746,-7.730243,5.425763,-9.144591,6.715639,-9.900716,3.831823,7.726002,0.289868,7.946848,9.111220,-6.765918,1.100970,2.470296,6.935229,-1.560739,-6.160689,-5.160357,4.200564,2.641422],[5.613781,-9.116335,0.913420,7.928183,6.788462,-4.969515,6.802944,5.297124,9.629201,5.046798,-8.549353,-9.125940,-2.716019,-5.765770,3.844611,-8.539750,7.501261,0.394670,-6.677821,-6.046450,7.839962,-3.918034,2.998964,-6.705585,8.129684,0.741221,9.089800,-5.412354,-9.888115,3.320460,-1.123504,-3.967445,3.585956,-3.153516,-2.669285,6.442290,-3.945947,3.945545,4.306012,-9.675389,1.618523,-2.900868,6.941378,-5.145846,7.674771,5.207091,5.680745,-8.998152,-4.351725,2.569924,2.823479,-2.776034,-3.519926,6.562620,0.704139,-2.277704],[8.979090,4.525136,-8.129380,-2.898789,-5.263850,0.717154,-0.968160,-7.023441,0.033064,0.671874,-9.591670,-4.261143,7.398133,-8.830956,6.513833,9.772071,-8.609181,-9.677539,-8.561486,-8.169905,-0.024959,9.128845,1.133959,7.198436,7.160209,6.548425,7.631912,-4.740301,9.558380,7.256408,-8.071972,4.437665,-9.006112,0.733856,5.362195,7.309837,7.203716,-7.981767,-9.748338,1.872775,-1.082945,4.555837,-4.380998,3.056994,-2.017742,5.885983,1.394429,8.918659,-8.496510,7.032073,4.110930,4.918779,4.896245,3.099574,-8.074995,5.046636],[-3.612703,-5.819343,-0.941795,-3.585735,-9.604897,9.919690,6.487488,3.126383,4.216711,4.494672,6.149541,-9.221376,-7.771510,-4.426668,-9.571502,4.035845,-2.943090,-5.388303,1.936757,-5.621909,-9.400134,-3.835418,-9.999044,4.961871,-0.647999,-2.041392,7.613685,-1.129923,1.740378,-0.357019,-1.842813,-8.789291,5.288683,0.103743,9.523245,4.308337,-0.263944,2.100658,3.412940,-3.760144,4.072418,-3.218152,9.607891,-2.448960,5.478983,3.310810,1.239801,4.132379,-7.533345,8.137859,-3.239621,4.497751,-9.409854,0.968194,8.029731,6.066252],[6.938202,1.490470,-2.095118,7.056420,7.156321,1.569633,-9.027862,0.829642,-6.170041,-2.241406,0.647997,3.235395,5.764682,-8.378158,-3.129033,0.304567,6.190753,7.748498,5.603223,8.269434,1.641238,7.484222,6.466169,-2.351251,0.443192,-1.915472,-7.686719,7.834921,5.119234,-2.220822,9.047228,7.952370,-0.986122,1.432522,4.955641,-7.714154,8.541700,-3.737833,3.779577,-8.971974,0.856879,9.941270,-8.635064,7.245350,-3.983836,-8.564064,-1.042842,-7.841157,-8.812235,-2.396236,4.722463,-2.597148,-0.831399,9.982409,5.908184,-2.262512],[3.533165,-1.338610,-5.700040,4.711952,4.150704,2.226607,2.637473,-4.356453,7.008835,0.680399,-5.832153,6.083365,-9.861652,-5.203990,2.765326,-9.214819,-0.562742,-5.799858,3.087590,-8.990117,2.301888,-1.418222,1.528091,-2.426566,4.241825,3.834306,7.967562,-9.029245,-8.142212,7.651363,5.909983,-6.132546,-2.134645,5.087923,-0.812888,-9.259204,4.428854,-8.787631,-2.427761,5.658554,-7.243474,1.720364,6.167121,6.595026,-9.186734,1.533896,-6.704606,0.095784,3.006449,-9.109491,-9.434268,9.040493,4.614387,5.132919,3.947243,3.374980],[0.084438,2.576393,-3.894107,-6.318121,-7.778271,6.210295,0.319068,1.380128,0.946666,-6.625134,0.620184,3.062989,6.880781,-1.737854,0.323717,-3.347134,-8.336927,7.930071,-2.282113,2.940363,-5.896052,-5.476572,9.595379,-0.529603,4.133384,9.732139,-9.423944,-2.602349,8.844322,-1.002034,-7.812067,2.569651,5.164967,-8.641702,0.571201,-0.754929,-4.450906,9.739800,-6.458971,-1.899305,2.927338,-5.716152,-3.973767,9.573464,8.939124,-4.118077,2.525136,-5.169503,-4.048561,-6.751763,-3.626368,4.667086,6.091962,9.351508,-2.730938,-9.101211],[9.422989,-4.836327,0.619081,8.679968,2.582948,-5.128356,8.196126,3.329715,9.054649,3.756818,-6.976010,-1.650341,-3.394044,-9.998585,5.710924,-8.750348,2.467694,-1.014915,-6.865457,-3.105558,7.527118,-1.028500,7.680139,6.076665,-4.500163,5.319260,8.804582,-7.208820,2.363248,6.355541,1.445594,9.591087,-4.357728,3.184932,9.905668,-5.848398,0.701085,4.817754,9.044455,8.134612,-6.180874,-0.750884,1.677074,2.829177,2.501697,9.931035,-2.602241,-7.505842,7.331051,2.161531,0.636213,2.952155,2.896213,4.788148,0.091402,-1.705218],[4.236481,-2.128929,3.510741,9.714361,-4.971123,-0.203729,9.846793,9.191249,-2.671651,9.521441,-1.796536,-3.964669,-6.324696,-7.325183,5.756455,2.677425,-5.271655,4.291984,8.407757,-0.843005,7.639152,-1.503854,1.640964,8.236876,-4.912928,0.518895,-5.046886,-6.082912,-1.934922,-9.842638,9.859062,-1.700768,6.633490,-6.566514,5.597609,-6.422313,1.510315,6.758799,-3.669616,-1.057357,-4.060061,-7.665737,-0.774823,0.867227,7.179336,-9.153508,6.623430,-5.342787,-3.198382,0.569334,-3.214285,-9.836421,-7.049677,-8.924354,2.757664,5.206425],[2.578636,-8.610026,4.942921,-4.586106,2.185203,1.857239,4.875658,-0.912084,-8.486538,0.158510,2.110052,-5.659037,-7.534883,2.890767,-0.875956,0.350577,-2.080820,1.878826,2.610078,-6.141492,-0.468083,3.933375,-1.481609,0.903058,4.174819,9.469830,-5.627421,-8.782819,-4.240557,-7.366300,-6.250899,-4.176170,0.237149,-0.879829,3.431367,-0.108230,7.612285,-0.632638,7.547839,-6.199962,-4.179177,9.419959,-8.520366,8.570005,1.471775,6.592430,8.623612,-0.635961,1.520905,7.833560,-9.454534,-6.343604,0.997280,9.093518,-4.025093,4.989779],[2.143689,5.899858,-7.266732,-3.910595,3.196170,-2.444395,-6.647554,6.871888,4.023829,-7.449614,-9.420885,5.497536,1.304419,-7.551067,5.467100,6.589789,0.830049,-3.936557,0.787692,2.317867,-6.098981,-8.709873,7.625798,-1.085847,-3.186606,-0.152724,9.460193,3.772682,-5.485031,-8.916752,0.212337,-1.352977,-4.393364,2.689273,7.557639,-8.937261,-3.677188,-2.301357,0.721358,-0.101853,-0.643608,-6.365991,3.989450,-5.119964,-9.999692,2.041620,-3.003562,-7.356380,-3.807259,6.179158,-4.997945,8.494735,-3.224936,-9.327584,-3.600840,1.296652],[1.829737,-6.567077,8.371094,-6.765923,9.628272,-1.436992,6.490702,-3.928703,-7.385685,-6.807276,-4.221307,9.864429,6.216452,-7.053097,-9.247466,-8.232684,3.608935,-6.622170,-8.428863,-1.291711,-1.173570,3.225779,3.675950,2.107014,3.907853,0.367009,4.890760,-0.297167,-0.611275,-6.161014,0.310335,9.368390,8.700216,5.450187,-6.908064,3.614505,-4.352703,5.546410,3.331932,8.410614,-7.640580,-8.560457,8.457149,-5.034862,5.675226,0.842826,-1.797479,0.782162,-1.066168,1.839390,8.543470,-7.815063,2.145675,4.725027,-7.924930,-4.133616],[6.127280,2.358238,7.885148,2.343555,-9.724525,7.388029,0.385928,7.243777,-8.045555,-0.351107,7.482921,4.555146,-4.098009,5.437994,-4.403846,5.250286,-5.790322,-8.657007,7.975550,-5.973259,-1.062018,-4.979689,0.871609,-2.794355,-1.229641,2.318819,5.294842,-8.480122,1.388753,-2.486415,7.264174,-8.052472,-4.542903,-0.147118,-2.440023,-6.515194,-3.639975,-0.049115,-8.071197,0.430802,8.963821,-1.452621,-1.007433,9.932672,1.593090,6.145937,9.041284,-0.683314,-3.002838,1.358168,-0.788839,-2.923690,-7.844393,-5.025032,1.720470,8.160503],[-3.543294,3.419861,1.566246,-7.398072,-6.979121,4.033894,3.949099,-8.358613,-9.280970,-3.302852,6.307283,-3.636347,1.357087,-9.578291,-3.032859,-4.604953,3.236470,9.230082,-6.053269,3.494936,7.097415,-9.324644,0.057132,8.639411,1.857493,-0.488938,-5.298927,-5.250007,9.850745,-1.185449,2.132552,-5.656702,-2.685047,8.163806,2.725401,1.660030,1.868640,-6.482419,-4.565824,4.995781,2.936370,-8.826068,-2.239500,-2.736746,9.251843,1.900097,0.876149,-9.410647,-0.230892,-3.031995,-8.489797,-6.631809,0.696102,-9.255405,-7.359086,2.156129],[2.410033,2.770728,1.008978,6.683651,-3.991521,9.567732,-9.100402,0.645335,9.584663,8.647661,-1.750508,2.326020,-6.798749,8.169335,6.527485,-6.288037,6.934264,-4.400773,6.745668,9.239547,8.066228,0.251696,-4.389291,-1.758811,-4.181774,-0.446636,5.255695,1.540187,5.079910,4.868949,9.441277,-6.759150,6.493678,9.107495,-4.894580,3.577956,3.669200,-7.360329,1.286499,3.572462,-2.373068,-4.497429,-1.585426,3.701380,6.130885,-5.455316,-5.984836,5.168119,-1.310875,4.373405,1.290540,-4.783246,0.931920,1.243021,6.195960,5.671425],[-6.785615,6.852841,8.239886,-7.886593,0.967753,0.029563,7.504270,-9.687588,-5.074429,8.710732,-2.212612,-6.416688,-6.758659,-2.352476,8.948575,9.468422,-0.069980,-7.514601,1.545636,-2.573006,3.622535,-5.451613,-2.620436,-6.105177,-6.888875,-7.506580,0.927983,1.770463,-1.503589,4.761610,1.766337,5.323717,-0.931765,6.105111,7.159471,-2.064646,6.603643,3.062679,2.693191,-7.031674,7.201176,-9.325661,-2.054983,-2.574139,-5.187943,-2.211996,-2.866758,2.677531,7.499246,-8.543729,-7.328129,2.882311,-5.285780,7.817524,3.877236,2.789947],[-9.265103,6.512552,3.127754,-2.707230,-5.378746,4.024568,-1.170413,8.820987,5.989795,-2.025086,-6.345722,-3.898119,0.717622,9.395149,5.028598,5.818220,-4.032102,-4.041822,0.236391,7.447070,6.400634,-2.050755,8.224316,3.703697,-9.238788,-8.387557,-0.072105,7.349467,-3.694337,-4.074571,9.666181,-4.144225,-5.385818,-9.955283,6.196228,5.705507,-3.123877,-2.737278,2.947680,4.122059,-6.591090,7.640419,-5.581948,-9.155772,9.566338,-8.986453,-7.622030,-3.415871,-7.602223,-4.473897,1.749399,-3.410109,-9.686356,1.392265,8.618416,6.608241],[8.448035,-5.907873,7.551963,-3.725506,1.041186,5.605685,6.454348,-5.968038,-5.146162,4.187901,9.826259,-2.395409,5.179275,5.335292,-6.271045,-8.974368,4.655632,7.196284,8.945392,7.072093,-5.222944,-3.254487,4.371724,9.022275,-1.142018,8.075418,5.453292,1.375549,7.521817,2.709621,3.984292,5.499615,-2.015622,9.257301,9.463477,-0.521539,7.055895,4.364941,1.874755,7.896780,-9.208420,9.873509,-8.431024,-8.803659,-9.323719,2.758926,9.303366,-8.349617,9.378779,7.044487,6.283001,-0.606941,-7.739435,9.610195,5.872542,8.218043],[6.821795,9.837446,7.280502,1.640438,7.715261,9.634458,-7.218938,-0.720313,3.690517,-1.501994,7.883099,-8.229972,-6.902311,6.844263,-3.981991,8.093771,-8.790702,4.212817,-1.142100,8.232270,6.305165,-6.522431,-6.080012,9.166876,-9.647892,-3.441713,-3.159792,-6.656250,-0.333000,-1.067541,-2.440361,-0.735244,-1.435446,0.049009,1.014001,-3.309022,5.775196,-9.229395,8.133737,-4.934009,5.900204,4.508035,0.906875,-7.582805,-3.514879,-2.023278,7.874671,2.549628,-0.257653,-2.173019,6.519137,-3.419676,-6.665174,-6.085114,-6.421321,4.482720],[-2.369674,5.478836,-4.269838,0.181074,1.185591,-9.143246,0.512097,-2.873743,-0.563077,5.456626,-9.190373,-3.003624,-8.240854,-6.713919,5.670875,-1.178717,4.938227,7.500887,2.557558,-0.854484,-1.056812,7.316408,-4.158933,5.913535,8.865376,-8.692559,-5.164986,-4.524969,1.669573,3.412518,-1.879920,-5.912710,-2.049158,-1.196992,8.839090,-6.451177,8.420790,7.727609,0.004282,-1.692714,0.575714,-1.678705,2.066003,-7.833185,-4.406383,-2.728456,2.584481,-1.655977,-6.519651,0.461048,4.590192,-5.049826,-8.139015,-8.110970,-1.788613,-6.133839],[7.001200,-1.869366,3.926275,0.738332,-3.910455,-9.354473,9.664244,3.527020,0.606179,0.787830,-0.565547,2.173426,9.139162,2.013563,-2.843256,4.479375,-2.435429,5.574164,-7.467387,5.574928,-4.555565,-4.387541,-0.766226,8.739485,-8.757755,-4.971244,-9.922921,8.173057,7.068021,-8.791807,-8.641020,9.743861,7.635315,-5.659763,-0.268426,-7.693914,-5.449553,-8.733423,9.175836,-9.480621,-2.881787,-8.746982,7.123273,-7.036043,-9.517431,-2.482476,-0.404042,-7.854146,-6.518152,4.331764,-9.096165,0.870272,-5.143183,-6.421544,-7.456459,2.511976],[8.459588,7.436755,-0.043174,-1.340948,-8.372118,2.113048,-9.496853,-0.176802,8.309245,9.691148,-6.232144,-9.908079,-7.346901,-3.864158,8.399316,4.684812,4.958970,8.027656,-3.189346,8.160850,3.814301,0.796526,-9.283550,-5.795870,8.286015,5.421403,3.950261,-6.916266,-8.101965,-9.725740,6.585344,6.253759,-0.623453,-3.187434,-4.391869,-4.918558,-0.185885,7.620787,7.494772,-6.605959,-6.004891,-1.863076,7.603008,6.074758,5.147728,-4.651232,-5.784730,-8.327611,-2.286619,8.175988,-0.234714,-4.458288,-5.760928,9.790017,-4.820792,-2.877960],[4.317462,-3.855099,-1.251542,2.131525,3.577847,-5.119087,1.991991,-9.815241,6.054059,-2.964896,2.078862,-1.069281,-9.235120,-9.239171,-4.742750,8.152109,1.798211,-8.938289,-1.901469,-2.742627,1.753769,2.795304,3.572299,6.705469,7.970051,-9.899737,-1.874236,-3.955253,-9.280398,6.853676,-9.676291,-9.781565,-8.621766,5.290448,-1.194767,-3.983213,-3.339185,-1.550021,-5.135042,-7.516382,5.071500,-7.941200,9.016704,1.364639,3.363387,-1.905366,7.430751,-2.479441,-4.943126,-9.310515,4.277166,-5.990767,-8.803538,1.165598,-4.807144,4.033020],[-7.163140,-3.015687,-8.224507,7.176661,-2.347036,6.736284,-4.726668,-7.023425,9.779154,-8.865138,0.819044,-6.814384,4.251392,-0.717399,3.722866,-5.303325,-6.011534,-6.738140,-1.354274,-9.281515,0.396520,-0.834668,3.027137,-9.495741,-6.160500,5.425924,-9.337385,8.660383,5.785876,3.445641,5.384700,-9.221487,-9.093203,5.300513,-2.679174,-7.280665,6.604365,-4.434396,4.773862,-1.455833,0.294414,6.806251,8.997949,3.720670,4.409358,-4.937375,-9.918404,-4.821431,3.492073,3.823719,0.280117,0.079715,0.959981,-1.398403,9.981115,-0.223548],[-9.771972,-7.920342,-8.315994,8.207016,-1.887698,1.421704,-1.896814,-6.433645,0.757895,-6.187240,3.937299,6.983122,8.890690,0.105623,-5.355403,9.668857,9.443509,5.775145,5.486138,0.526382,-6.554771,5.395649,-3.572743,-3.796965,7.941549,4.506877,-2.674189,6.999953,-4.302986,-9.308630,-4.493063,4.748038,6.082005,-5.638822,7.785480,8.851202,-0.885188,9.520199,-7.746440,-1.930697,-8.497892,-1.830944,-1.461205,-5.638228,-5.802994,-2.029490,-7.075276,-6.630071,-9.037299,-7.301312,5.178188,1.472429,-5.540520,-1.337158,-8.917630,7.579675],[-1.911701,3.471243,3.331452,1.205684,8.284821,5.954247,-2.471370,7.209567,-7.041208,-2.920216,1.024291,7.643380,-6.249073,-6.633440,-0.379069,1.797281,8.707106,2.495861,-0.026383,-2.117639,-1.767184,4.185792,-1.903434,0.637205,7.617243,-4.128525,9.732178,-8.007683,1.773477,-0.446014,-3.958984,2.071426,4.842445,1.095109,4.750638,2.568332,4.519190,-2.190954,1.098961,-8.092900,-6.850368,-9.586503,-4.280612,4.352109,5.675503,5.585549,-4.926796,-8.176516,3.321205,7.770222,6.145348,1.433278,-9.571849,-3.815755,4.414865,-3.656943],[1.643392,-3.397113,4.453585,-0.406379,6.629772,5.242174,-9.353675,0.377378,2.094143,-8.452494,0.471584,0.310384,-4.286748,-0.033148,-5.935970,8.905244,8.984461,4.367735,1.855195,5.908499,6.875715,-0.614395,-8.653069,5.699028,3.506926,7.480858,1.161660,-5.472529,-4.849477,-7.633289,6.722903,7.716392,3.423246,6.498225,-7.011664,9.044593,2.845386,9.139142,-9.549733,3.951151,-8.633360,-7.566691,4.023528,8.062733,7.921153,-0.850480,7.747873,9.594523,-6.091934,-4.413752,-8.528078,-5.115225,1.374065,6.428641,4.654785,5.559383],[4.289767,8.503031,-7.896293,2.778055,-6.877952,-6.031107,4.746333,-3.874051,3.218352,-6.638531,2.365751,6.092745,-0.786238,-4.740311,-0.336875,3.436986,1.417020,-9.331323,-6.059073,-1.220632,-9.938790,-3.549229,-4.682858,5.145775,7.220916,1.580207,9.404167,-4.502760,-5.494213,1.857692,-1.992274,-7.891191,1.847336,-3.712147,-1.205083,9.234981,6.405075,-8.145121,-3.219254,0.891442,6.259251,-9.830633,-7.175742,-6.411256,8.102225,0.682092,3.980457,-1.062339,-4.489323,-3.369761,2.763401,1.103917,1.884195,-1.914094,-8.496110,-5.395060],[6.877910,-1.878918,6.204972,-3.876103,-2.671010,-0.293953,4.024656,-3.428578,5.435766,3.222921,-2.063948,-0.754030,-9.369183,-3.012304,-4.431134,5.490602,9.797590,9.041402,-2.144350,-6.893347,1.164230,-5.963177,5.194918,5.326548,9.291643,2.380664,7.434569,-6.267866,-7.610086,-5.601134,9.794308,-0.704558,4.588191,3.249778,2.609571,-7.762387,-8.802715,-0.005682,-6.540009,6.133292,-5.400627,0.720684,-5.313231,4.754334,-9.174873,5.322049,4.654315,3.970956,-3.027317,0.289622,-4.676481,-7.441992,-9.143298,-8.245203,-0.554573,8.599208],[-0.024907,5.712043,-2.750842,8.404016,-4.420025,-3.884565,8.426140,2.675936,-1.534517,7.757102,-8.285129,0.371659,-1.281074,9.083334,3.676249,9.186243,-8.976282,-8.011481,-9.118767,1.267961,6.084876,-6.203282,0.902804,-8.219215,-1.164533,-9.432174,5.217743,-1.945963,5.553056,5.104078,-3.413763,-6.218656,1.764601,7.467857,5.791403,-6.762989,-2.991851,6.898050,-1.251490,4.554943,6.308675,-0.421058,0.593948,2.425319,-7.389587,-3.078035,9.079596,8.309857,2.674812,-7.045583,-0.996813,9.308419,-0.812402,-7.205051,-0.805838,5.231912],[-2.348830,8.510048,-4.770504,-6.119756,2.259989,7.166447,-4.109305,4.001470,8.689641,-1.473558,-2.565622,-9.798075,-1.781850,-2.193070,-1.861640,-2.581968,8.808930,4.786130,-6.972558,-9.312810,-6.638774,1.107982,0.491731,-6.921705,-9.190755,-3.127479,1.001340,3.441175,0.328180,-9.339407,-5.136689,-2.210719,-5.192143,7.835379,-6.385332,-0.470056,-6.657423,0.909978,-4.160840,-3.434632,-8.453256,-8.048699,-0.684625,7.416155,4.603060,8.251694,-3.026518,2.130677,5.695656,-0.520756,-1.514150,-4.578728,-1.592870,-9.701002,-4.315409,9.644934]], dtype = "float64")#candidate|5236|(32, 56)|const|float64
bop_5237 = relay.multiply(var_5227.astype('int16'), relay.reshape(const_5236.astype('int16'), relay.shape_of(var_5227))) # shape=(32, 56)
output = relay.Tuple([call_5204,bop_5222,call_5226,const_5228,bop_5237,])
output2 = relay.Tuple([call_5205,bop_5225,call_5229,const_5228,bop_5237,])
func_5241 = relay.Function([var_5214,var_5227,], output)
mod['func_5241'] = func_5241
mod = relay.transform.InferType()(mod)
var_5242 = relay.var("var_5242", dtype = "int32", shape = (195,))#candidate|5242|(195,)|var|int32
var_5243 = relay.var("var_5243", dtype = "float64", shape = (32, 56))#candidate|5243|(32, 56)|var|float64
output = func_5241(var_5242,var_5243,)
func_5244 = relay.Function([var_5242,var_5243,], output)
mutated_mod['func_5244'] = func_5244
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4541_call = mod.get_global_var('func_4541')
func_4543_call = mutated_mod.get_global_var('func_4543')
call_5259 = func_4541_call()
call_5260 = func_4541_call()
output = call_5259
output2 = call_5260
func_5268 = relay.Function([], output)
mod['func_5268'] = func_5268
mod = relay.transform.InferType()(mod)
mutated_mod['func_5268'] = func_5268
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5268_call = mutated_mod.get_global_var('func_5268')
call_5269 = func_5268_call()
output = call_5269
func_5270 = relay.Function([], output)
mutated_mod['func_5270'] = func_5270
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4051_call = mod.get_global_var('func_4051')
func_4053_call = mutated_mod.get_global_var('func_4053')
call_5335 = func_4051_call()
call_5336 = func_4051_call()
output = relay.Tuple([call_5335,])
output2 = relay.Tuple([call_5336,])
func_5338 = relay.Function([], output)
mod['func_5338'] = func_5338
mod = relay.transform.InferType()(mod)
mutated_mod['func_5338'] = func_5338
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5338_call = mutated_mod.get_global_var('func_5338')
call_5339 = func_5338_call()
output = call_5339
func_5340 = relay.Function([], output)
mutated_mod['func_5340'] = func_5340
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1844_call = mod.get_global_var('func_1844')
func_1846_call = mutated_mod.get_global_var('func_1846')
call_5351 = func_1844_call()
call_5352 = func_1844_call()
uop_5353 = relay.atan(call_5351.astype('float32')) # shape=(11, 15, 12)
uop_5355 = relay.atan(call_5352.astype('float32')) # shape=(11, 15, 12)
func_5108_call = mod.get_global_var('func_5108')
func_5109_call = mutated_mod.get_global_var('func_5109')
call_5376 = func_5108_call()
call_5377 = func_5108_call()
uop_5391 = relay.sinh(call_5351.astype('float64')) # shape=(11, 15, 12)
uop_5393 = relay.sinh(call_5352.astype('float64')) # shape=(11, 15, 12)
output = relay.Tuple([uop_5353,call_5376,uop_5391,])
output2 = relay.Tuple([uop_5355,call_5377,uop_5393,])
func_5394 = relay.Function([], output)
mod['func_5394'] = func_5394
mod = relay.transform.InferType()(mod)
mutated_mod['func_5394'] = func_5394
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5394_call = mutated_mod.get_global_var('func_5394')
call_5395 = func_5394_call()
output = call_5395
func_5396 = relay.Function([], output)
mutated_mod['func_5396'] = func_5396
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5030_call = mod.get_global_var('func_5030')
func_5032_call = mutated_mod.get_global_var('func_5032')
call_5397 = relay.TupleGetItem(func_5030_call(), 1)
call_5398 = relay.TupleGetItem(func_5032_call(), 1)
output = call_5397
output2 = call_5398
func_5415 = relay.Function([], output)
mod['func_5415'] = func_5415
mod = relay.transform.InferType()(mod)
mutated_mod['func_5415'] = func_5415
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5415_call = mutated_mod.get_global_var('func_5415')
call_5416 = func_5415_call()
output = call_5416
func_5417 = relay.Function([], output)
mutated_mod['func_5417'] = func_5417
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5418 = relay.var("var_5418", dtype = "uint64", shape = (12, 3, 9))#candidate|5418|(12, 3, 9)|var|uint64
var_5419 = relay.var("var_5419", dtype = "uint64", shape = (12, 3, 9))#candidate|5419|(12, 3, 9)|var|uint64
bop_5420 = relay.logical_xor(var_5418.astype('uint64'), relay.reshape(var_5419.astype('uint64'), relay.shape_of(var_5418))) # shape=(12, 3, 9)
uop_5426 = relay.cosh(var_5418.astype('float32')) # shape=(12, 3, 9)
output = relay.Tuple([bop_5420,uop_5426,])
output2 = relay.Tuple([bop_5420,uop_5426,])
func_5430 = relay.Function([var_5418,var_5419,], output)
mod['func_5430'] = func_5430
mod = relay.transform.InferType()(mod)
var_5431 = relay.var("var_5431", dtype = "uint64", shape = (12, 3, 9))#candidate|5431|(12, 3, 9)|var|uint64
var_5432 = relay.var("var_5432", dtype = "uint64", shape = (12, 3, 9))#candidate|5432|(12, 3, 9)|var|uint64
output = func_5430(var_5431,var_5432,)
func_5433 = relay.Function([var_5431,var_5432,], output)
mutated_mod['func_5433'] = func_5433
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3984_call = mod.get_global_var('func_3984')
func_3985_call = mutated_mod.get_global_var('func_3985')
call_5449 = relay.TupleGetItem(func_3984_call(), 0)
call_5450 = relay.TupleGetItem(func_3985_call(), 0)
output = call_5449
output2 = call_5450
func_5454 = relay.Function([], output)
mod['func_5454'] = func_5454
mod = relay.transform.InferType()(mod)
output = func_5454()
func_5455 = relay.Function([], output)
mutated_mod['func_5455'] = func_5455
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3132_call = mod.get_global_var('func_3132')
func_3133_call = mutated_mod.get_global_var('func_3133')
call_5473 = func_3132_call()
call_5474 = func_3132_call()
var_5475 = relay.var("var_5475", dtype = "float64", shape = (16, 112))#candidate|5475|(16, 112)|var|float64
bop_5476 = relay.greater(call_5473.astype('bool'), relay.reshape(var_5475.astype('bool'), relay.shape_of(call_5473))) # shape=(16, 112)
bop_5479 = relay.greater(call_5474.astype('bool'), relay.reshape(var_5475.astype('bool'), relay.shape_of(call_5474))) # shape=(16, 112)
func_1176_call = mod.get_global_var('func_1176')
func_1182_call = mutated_mod.get_global_var('func_1182')
const_5495 = relay.const([False,True,True,False,True,False,False,True,True,False,False,True,True,True,True,True,False,False,False,True,False,False,False,False,True,True,True,False,True,True,True,True,False,False,True,False,True,True,True,False,False,True,False,True,False,True,False,False,False,False,True,False,False,False,True,False,True,False,False,False,True,True,True,True,False,True,True,True,False,False,True,False,True,True,False,True,True,False,True,True,True,True,True,True,True,False,True,False,False,False,False,True,True,True,True,True,False,False,False,True,True,False,True,False,True,True,False,False,False,True,True,True,False,True,False,True,True,False,True,False,False,True,True,True,True,False,True,True,True,True,False,False,True,False,False,True,True,False,True,True,False,True,False,False,False,True,False,True,True,True,True,True,True,True,False,False,True,True,True,False,True,False,False,False,False,True,True,True,True,True,True,True,False,True,False,False,False,False,True,True,True,True,False,False,False,True,False,True,False,False,False,True,False,False,False,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,False,False,True,False,False,True,True,True,False,False,True,False,True,True,True,True,True,False,True,False,True,True,True,False,False,True,False,False,True,True,False,True,True,True,False,True,False,True,False,True,True,True,True,True,False,False,False,True,True,True,False,False,True,True], dtype = "bool")#candidate|5495|(264,)|const|bool
var_5496 = relay.var("var_5496", dtype = "uint8", shape = (390,))#candidate|5496|(390,)|var|uint8
var_5497 = relay.var("var_5497", dtype = "float32", shape = (1, 825))#candidate|5497|(1, 825)|var|float32
call_5494 = relay.TupleGetItem(func_1176_call(relay.reshape(const_5495.astype('bool'), [3, 11, 8]), relay.reshape(const_5495.astype('bool'), [3, 11, 8]), relay.reshape(var_5496.astype('uint8'), [390,]), relay.reshape(var_5497.astype('float32'), [825,]), ), 4)
call_5498 = relay.TupleGetItem(func_1182_call(relay.reshape(const_5495.astype('bool'), [3, 11, 8]), relay.reshape(const_5495.astype('bool'), [3, 11, 8]), relay.reshape(var_5496.astype('uint8'), [390,]), relay.reshape(var_5497.astype('float32'), [825,]), ), 4)
const_5502 = relay.const([[3.998669,-3.835511,2.211109,2.443897,5.653945,-9.894400,-4.060621,-5.712409,-3.699392,6.685031,0.497369,-4.547199,1.809364,3.901600,3.454278,-6.493721,1.680583,-5.419727,-8.609440,3.642784,-4.302410,7.733037,-7.175821,-1.685038,-2.089210,-7.508505,9.618868,1.632142,0.740265,2.430314,1.220730,1.453741,-7.088375,-0.703710,-1.122507,-4.494278,5.226839,7.803820,0.236649,2.580615,8.479777,7.787233,-2.067621,1.058464,-7.279190,-3.139970,-6.810058,-0.811449,5.280063,2.644446,-1.421914,-3.825528,-2.122597,1.271950,-9.939006,4.925185,-7.151613,-7.420622,5.566844,7.269906,-7.729815,4.979806,9.724654,3.925615,-1.125084,-4.420265,-8.248971,8.981450,-9.570837,-3.313782,7.088730,-1.653503,8.483337,-8.694066,-9.166137,-8.412124,5.135825,0.263758,4.381475,1.203219,-9.002592,-1.990633,-5.123501,6.698656,-0.450522,0.268347,1.731102,0.440272,7.558099,7.356689,0.573353,-6.308897,8.070161,-7.734516,7.225261,1.281119,1.611613,-4.862012,0.744251,0.043801,-1.412040,7.437681,-8.748094,-6.272181,-9.258718,-7.369793,9.669140,-3.430129,-1.005801,4.149295,-4.616426,8.961402,-9.162638,3.310745,6.283165,9.959508,-9.186580,4.031596,9.894108,-5.333782,2.757483,-2.566095,3.600634,-1.569859,2.087802,6.426300,-4.542649,8.644119,8.782514,-2.859073,5.349294,-1.197601,-9.536825,5.635943,8.918976,4.582156,-2.583945,9.511108,-4.407762,5.531690,5.997048,5.712417,-2.509937,-7.332203,6.598774,-0.591029,-9.410150,-5.646647,8.144712,-2.278536,9.610635,5.716210,9.067037,-2.785649,-1.619364,0.397841,-1.571338,8.119127,-3.256635,-2.666041,-2.183702,-3.248803,6.675032,5.621593,-3.257888,4.587868,2.012976,5.603682,4.018898,-6.043030,-0.665099,1.768784,-4.006049,1.492482,-3.981718,3.085610,-8.185104,1.193332,-8.442273,-3.379067,9.146999,5.694796,3.926405,6.910292,-7.310300,-2.587712,-8.715704,1.197248,1.549819,6.556440,8.519791,-0.227397,-0.091354,1.493376,9.815058,-1.699562,-0.650542,8.294226,-1.474786,-8.797530,8.749877,7.339564,6.562909,-1.513985,0.659595,-3.907322,-8.921687,1.778568,5.689289,-8.853547,-1.279546,0.485424,-3.074114,-4.891920,4.720415,6.258952,-7.746665,-6.491536,5.952623,-2.603021,-9.007354,4.677672,8.019176,-4.667582,-0.418318,2.649084,4.841279,3.733584,-3.127323,-0.294660,-1.527629,-4.377276,6.611015,-6.585095,2.646209,2.309710,-0.509434,7.541761,3.034976,-3.488783,-6.561737,8.756385,-7.254748,1.637435,-5.364813,-9.726347,1.459552,3.703231,-6.698748,0.365724,-6.172583,5.495266,-6.288810,6.578483,-2.074084,6.550974,7.155759,-7.422707,4.399847,-9.161879,-9.583739,-0.196969,9.138663,-4.200549,-4.178522,-1.335805,-6.318493,7.071304,-5.676611,1.449219,-0.681725,0.957418,0.631356,3.485047,4.092518,-5.104789,-3.919094,3.304147,2.467232,6.286376,5.922675,-8.396474,-3.767837,-6.779574,-7.878088,9.435826,-8.878237,4.261710,6.114467,-2.648944,-9.532241,-6.516408,-9.463696,2.828027,7.536434,9.920731,-9.730285,-5.682957,1.909223,3.622574,-3.367452,-4.272270,5.080985,-0.412851,-1.037943,7.929314,-7.176419,0.644142,6.755000,-3.664035,-7.208215,6.870430,5.922845,5.681556,8.266511,1.028520,6.930988,-1.812965,2.151718,0.271514,-7.298877,-1.567896,-4.621662,7.085572,-5.846700,-7.845786,0.442020,7.892194,-9.002930,2.422129,4.759941,1.770747,-3.420164,1.799015,8.905749,2.342199,7.476705,-2.266082,2.542715,7.262413,1.885621,-8.129642,-2.159720,9.996455,-4.971496,-9.382707,9.535424,1.332902,9.053787,8.801697,8.297040,-1.157375,3.750356,7.375376,-2.488781,-9.534906,-1.591063,-5.664316,2.238420,4.311422,-6.155278,1.163853,-1.827686,0.731080,-4.654493,-7.117253,7.580486,-8.386546,3.334285,-3.427107,3.443666,5.581504,5.571620,-9.805952,7.589984,2.179333,9.078326,-5.743326,3.433710,4.023807,-2.636400,1.226937,0.479174,-0.613138,0.216911,-7.075284,-1.301634,4.591419,-2.429686,-3.952131,1.670868,4.350027,-7.244334,-0.331667,-2.029510,7.484256,6.190078,-4.828436,9.456158,0.458787,5.622043,7.930844,5.503076,-6.441030,-4.499371,-2.743061,-2.392839,-1.235942,1.389478,-5.132713,-0.659366,-8.122948,-2.923150,-3.922540,-0.098029,8.953228,-6.823447,0.035136,9.640213,9.160551,-3.334796,8.652558,2.023561,0.300877,4.057507,-6.994097,-1.668060,5.844933,-8.892578,-0.803562,-2.964708,-5.793632,-3.457101,-9.987919,3.033054,1.215674,4.906819,-1.263696,-4.368877,4.781202,0.049916,9.473512,7.917100,7.378337,5.018160,-9.780490,4.384993,-6.368442,-2.430783,0.399762,-7.342365,0.705764,7.994142,-4.997714,2.346986,0.371166,-3.969262,-9.773567,-5.264660,1.956774,6.815310,2.385405,-9.430939,-2.546966,-8.699939,6.924711,-3.890355,6.115774,-3.424581,0.181630,1.033971,7.580005,-9.948262,3.273958,7.041430,-4.208836,-9.911182,9.854521,5.199721,1.293113,7.033831,-8.436443,9.097590,1.302160,6.585477,-6.926373,-8.634766,-4.787474,5.129323,9.288973,-7.830322,-9.102491,1.322656,-0.065986,9.222845,-9.433139,-6.295051,1.988177,-5.784314,0.330317,8.428285,8.312570,8.702176,-3.720160,6.770619,3.329827,7.616304,2.903963,7.550775,2.519372,4.716281,9.268774,-4.108957,-7.497207,-3.780251,4.205115,1.947708,4.250399,-9.445227,4.712082,5.509254,-1.188367,-5.881017,7.129165,8.322895,6.105896,-0.829560,-9.208280,8.084299,-1.988813,-3.948319,8.131428,-6.891793,9.697445,0.627750,-4.394919,0.037534,7.840528,-9.883247,-6.296714,-1.830650,8.762172,-5.810303,1.648449,-9.453692,4.749290,3.775022,-2.259975,0.367068,8.181708,-6.852317,2.224845,-6.733578,-4.551093,4.759927,-9.410063,-6.772637,8.430447,9.134868,-9.999562,-8.218238,-4.574859,-0.240073,8.577269,-9.242228,-9.164854,-9.815007,5.049316,0.927082,-9.785067,-0.568312,-8.725843,-6.000265,2.234533,-8.791629,3.149181,-4.927455,2.077222,-5.729841,-3.755458,7.115648,4.541135,8.035699,-0.129203,-5.984897,6.005720,2.498237,5.816196,7.142577,3.515449,-0.135153,-4.888577,-9.243776,-9.969757,-2.962538,-0.447545,0.953935,-4.057218,-6.882645,9.036631,1.181467,6.504552,-2.952987,-7.561867,3.969832,-8.731917,-7.408768,-4.777508,-9.750904,3.875736,-0.652897,-7.499322,3.921549,-7.840402,0.919284,8.865960,-4.804879,2.801126,3.811876,9.056693,8.980156,8.731952,-4.543404,-0.838964,-6.714056,-2.345727,0.636834,-2.088684,8.879082,-6.718053,9.075281,2.925535,-3.874683,-5.245023,-0.877167,1.124183,9.880100,3.072615,-0.319925,-3.391945,1.384091,9.504707,5.093122,7.738866,-0.359261,9.065666,2.463407,-4.168410,1.220519,-9.441710,-5.024788,3.864975,-9.938653,1.677427,7.240462,7.597127,-5.129277,5.808486,-5.726266,-8.115358,5.518751,-9.207369,-3.660744,-1.704628,-6.215394,2.095605,-2.103152,-6.113036,5.473851,-7.788286,-7.074769,1.584838,-3.380138,-2.358329,-4.244925,-7.401901,5.596109,-3.203050,5.048320,8.151269,0.122105,-8.937551,-5.969422,-9.942108,-8.117963,-5.513524,-6.270158,-2.169334,-0.514380,-0.857108,6.430162,-1.766245,3.241906,1.361060,-3.663795,-6.438202,9.801166,1.178987,-9.599984,-8.340932,-3.145016,2.402239,-1.638714,-7.330982,-0.949813,5.568380,2.387923,-9.892566,8.854318,9.943218,5.615527,6.512669,-6.145146,-8.678180,9.203112,3.121004,0.900701,-3.907844,-9.763443,-3.701962,7.941930,3.100170,-5.196873,-2.263306,1.218090,9.067061,4.246787,8.855953,7.703276,-6.539527,-1.216117,0.424236,-8.614440,-4.939964,-6.451497,-6.572002,-8.640577,-5.269725,4.435111,-1.831890,-0.357560,1.987695,0.423125,2.635267,-4.120543,4.809757,6.901934,-1.953059,-9.371448,7.415212,-0.024864,5.046344,0.629583,9.877923,-1.399066,8.949552,6.057247,-0.201478,2.041878,0.699986,-0.262179,5.363345,8.013124,4.089882,-1.198509,-6.076837,-9.141942,7.951420,6.092380,5.514110,1.755411,-1.595496,2.563252,0.121901,-2.710955,4.665920,5.822098,8.196758,-0.639162,-9.003204,1.238473,4.466734,-8.818489,4.448098,4.021831,8.784017,6.104579,8.847573,0.615790,9.582259,-1.303995,-4.316757,4.952003,-5.243336,-0.338846,-9.083986,-2.624684,-8.799631,2.362778,-4.474456,-9.123090,7.474032,-8.194400,-6.845363,0.503769,8.382090,-1.485646,3.069744,3.125320,-8.326498,-8.792161,8.106762,-1.479251,-2.014507,3.450116,0.677831,-1.962884,0.099808,5.975781,-5.776570,-4.847321,-1.047277,9.035033,-8.901206,-0.845027],[8.849712,-9.190034,4.817340,-0.522452,-9.038052,-0.658801,1.825760,-2.448015,8.620925,-0.399833,-4.650278,-9.213131,-8.872923,-4.158207,-0.539834,2.739391,4.542570,7.227576,-2.378418,-2.114075,6.416096,-5.391061,-5.903611,-8.431968,7.358463,1.950472,9.368812,-4.085001,-6.008273,-3.096338,5.954001,-8.472705,5.346999,4.394941,0.577455,-1.262824,3.994492,6.558533,8.572084,2.178489,-9.974919,-4.871035,-2.033238,0.155225,9.176044,-6.012263,0.204292,-9.540221,-0.728287,1.411116,0.600841,-8.715054,-4.263114,-3.554666,7.983675,-3.638437,6.848061,8.364715,-0.302787,-2.840196,8.894830,-9.654793,2.104908,9.889865,0.970892,2.594352,4.665095,8.033123,6.268361,3.878961,8.950186,-7.281401,7.842331,1.556203,4.913199,1.190489,-8.669766,4.290221,-0.148823,7.631605,8.495228,7.635914,-8.123305,2.481686,-3.796407,9.414082,-3.189996,-3.783880,2.173077,2.543950,5.201455,5.555110,6.453583,3.558891,-7.398010,5.089726,2.843770,-5.249709,6.522734,4.790643,-3.066230,1.434125,3.549545,-5.160305,1.089151,0.447267,4.239962,-6.151400,5.850407,-8.064938,-7.320575,-0.934527,-8.650693,-6.350287,-2.531897,-5.642264,-9.665398,3.762848,5.236327,-2.726625,-9.503547,-2.259037,5.326289,-0.691052,-4.170451,-5.084868,-5.922801,1.733072,8.650508,-2.630864,5.341524,-9.011601,-0.160029,2.704379,-1.767138,2.347015,9.249776,-3.428778,-2.505305,-7.129597,2.022171,-0.042297,9.757343,6.911280,1.330389,-5.092670,-2.523659,-3.038983,-7.726067,-3.321423,3.213477,1.685643,5.210889,9.331077,-2.075446,7.456424,-6.177913,1.799732,0.515982,-1.930176,-4.887861,3.043133,-3.498442,-0.176445,-0.170255,8.888971,-8.092915,-8.186624,-3.462235,2.723753,2.913975,-2.840080,-4.918170,1.046935,-8.859177,-8.233896,-9.717475,2.476077,3.434899,-1.310039,9.097364,-0.710643,-3.149151,3.658902,-8.850668,-9.205993,7.242848,-6.928880,-1.800511,4.579673,6.108340,-5.701460,-5.329004,-8.704418,5.575275,3.888542,-4.873842,-7.161891,-2.994942,4.982013,-0.056560,0.989258,4.206808,-1.157457,5.850457,-7.319325,2.381967,5.686811,1.053242,-7.066224,-4.999937,4.556519,9.438663,7.673612,7.049128,-0.086793,-2.916352,-9.951095,4.177081,-2.556900,-9.873225,-5.705741,9.879885,0.699630,9.724432,6.524619,6.797950,3.659344,-8.762103,5.418471,2.710899,1.493070,5.656830,4.629341,-7.381666,6.825707,2.466644,8.808912,0.658405,4.342301,-0.337509,-7.741087,4.421866,-7.007353,9.878042,2.959689,0.970751,-7.680024,-8.813704,-6.205248,9.603682,-1.860346,3.377121,9.356021,-6.281314,8.828834,2.658608,0.400376,3.190122,-5.400261,2.364800,-6.869724,2.103886,7.169935,-9.554161,-4.358725,8.969409,-9.502113,-1.640420,-2.011220,-4.823516,4.838562,3.823476,-5.350961,-8.183333,1.498976,4.102825,8.126764,1.749163,-4.141313,-0.299207,3.277480,1.880552,-3.841981,-9.850035,5.305230,-5.802468,-3.602436,1.393786,8.527119,-9.662070,9.211934,-8.128528,-8.547593,5.160140,8.389485,2.847676,9.863300,8.075643,2.410132,-9.802182,-4.464491,2.637703,6.512303,-1.713027,6.029761,5.440507,-8.715334,3.246791,7.039166,5.455569,-6.938587,-4.032944,-4.804358,7.363609,9.006356,-8.673277,-9.380096,-4.246526,-8.828943,-3.553355,2.347537,-2.289038,7.353637,-7.517744,-4.394485,-5.366560,1.827730,-2.797004,-2.505530,3.753618,-3.582303,7.310370,0.194358,-0.558182,-4.149000,6.414521,-5.461007,1.119545,5.547008,4.765364,-5.371617,-7.542854,-0.433549,2.836212,-3.576578,-2.568113,-9.018957,-4.024044,3.808448,6.015309,1.892447,-4.661295,-7.505782,-4.912523,7.453628,0.557771,2.189615,7.299417,-6.025172,-9.306993,0.328832,2.201698,-9.806818,-0.757672,-6.870275,-0.892274,-6.238026,-8.595816,-8.703910,1.376823,-2.599378,3.674113,-3.055013,5.866936,0.573941,-4.342975,-8.937332,-5.356315,2.451041,-8.116812,-7.971722,2.814985,7.904560,3.387172,-9.956133,-2.597105,2.391918,-0.722342,-1.505521,0.937123,7.171525,3.468645,0.555319,2.896840,-0.448543,4.675390,-5.018116,4.958203,-6.073200,2.955541,6.363651,6.515343,-9.945652,1.505795,2.854263,-2.636551,-7.085174,-2.270991,-9.505764,-7.762749,4.406230,9.757936,-5.661880,-5.587511,-0.667780,-4.153536,2.300614,-3.583549,2.862286,-7.292987,-2.146567,-0.300067,-3.204860,7.842152,-9.143154,0.573078,2.104685,8.821835,-8.807723,-5.550720,0.986098,-4.021271,-0.235583,-1.159065,-1.889570,-4.097696,-5.027296,6.858659,1.038528,3.970432,-2.340170,2.124198,1.764755,-2.925217,-3.939671,-2.385610,3.608073,-2.580477,-2.288361,8.880664,-7.963905,6.479377,-5.318398,4.721159,4.492775,1.775399,-4.439505,1.032956,1.570489,4.893272,-9.593604,-3.440747,-0.745144,7.453871,5.159357,-4.405762,-9.157133,-0.925430,-7.594318,-1.965507,-9.171342,-2.627499,9.016341,2.583919,6.466708,-1.356226,-4.987872,2.676362,-3.124098,8.518669,9.771893,9.419331,-9.145609,3.558644,5.312826,-7.851234,4.839672,-5.361565,7.658698,-7.896836,-8.659671,-7.216545,5.354146,-0.005401,2.269883,0.436633,9.362535,-6.540689,1.448285,-9.019110,-5.838523,-5.119331,5.450726,-4.620916,-4.868078,1.078251,8.141474,-8.313666,7.226159,-2.458953,-0.822730,-9.328415,-2.874968,6.962480,-8.220754,4.454698,0.755884,-1.472306,-9.367631,4.408256,4.795916,-2.660380,-4.265817,9.962267,2.760490,-8.201438,-9.062367,7.694329,-5.069596,-6.927569,-5.400814,4.755934,5.309298,5.464151,-1.841371,8.960537,1.514301,-4.859054,-9.027318,-1.819901,-5.078411,2.475458,2.665446,9.649760,-3.950688,-4.213559,4.115695,-7.096073,1.098011,5.028273,-4.716324,-4.124960,-1.846252,0.050435,-0.112283,-4.357349,8.453696,9.644756,-2.056350,-8.408473,-2.599309,5.807151,-4.499131,9.684163,5.565992,0.564100,1.363272,-2.168068,-8.229465,-1.609731,3.302994,6.797890,-5.490437,6.624910,-4.729628,5.332797,-1.498258,-1.029768,-5.957133,-3.263903,-2.415668,9.761741,5.017581,5.191256,-3.758645,8.563629,-3.322446,-3.432467,7.604671,9.427143,8.096941,7.283849,-8.291161,-2.964964,3.258162,-6.526180,-9.611374,6.715889,4.436770,8.627647,-2.206820,8.829410,-5.095729,2.556693,2.033152,9.455531,-8.588185,-6.678727,-3.399196,8.196495,-4.646798,-9.663682,-4.678140,-4.575357,-0.210897,9.978747,-3.121637,-2.368935,-6.727703,0.340800,-8.253352,-1.955532,9.486499,3.645701,1.202852,6.451255,9.272640,-9.119737,7.512727,6.330988,-9.437479,-0.271837,-7.462888,3.114001,-3.098101,-8.605423,0.086212,1.009075,-7.577694,6.016422,-8.069403,8.815011,-8.549197,1.652838,-6.818377,0.443580,4.257435,-8.235809,-5.674298,-8.830503,-2.613011,-8.662319,1.970279,-6.081432,-1.553807,4.746371,-4.982763,-5.987311,-1.295788,-9.459770,8.248503,2.690779,1.779268,-0.137751,-7.626511,-2.556365,0.129281,-8.444677,9.909962,-1.862661,-9.409661,-7.736276,-3.874790,3.701210,-7.380890,-4.146599,-5.822795,-9.141253,5.705429,4.178550,9.262092,-0.786124,-3.720204,7.764521,7.521555,-9.362327,1.950037,-2.970124,9.409939,-7.576349,8.305616,3.995610,-1.291683,7.670470,-4.232062,6.320243,-7.750237,9.302332,6.257970,-7.863495,-3.054873,-7.573405,8.649055,-3.000973,1.618548,-1.120882,3.417831,-8.341305,8.176257,8.404253,-2.097775,8.975809,-3.121025,-1.272256,0.955099,-0.608170,9.567128,9.706809,9.624243,0.253021,-3.649029,9.486378,-0.584021,-4.904113,9.249738,2.822953,-0.957621,-6.652501,1.336556,-4.861736,-4.987016,3.908321,-7.246550,-4.253595,-3.104720,-7.106073,-9.836933,-1.680804,0.703424,-1.903852,-8.808550,-9.147783,9.177185,9.771709,8.676186,4.786307,-4.089144,3.271944,-3.345807,-5.597393,-0.893902,2.946910,-3.629597,7.742352,-4.050966,-6.145426,9.975405,-3.396216,2.485596,-3.367431,1.764558,-3.207146,-8.087434,-8.796312,-7.111990,2.529232,5.472110,1.612932,-3.148608,9.539203,-2.492357,9.063073,3.144149,-3.358489,8.004171,0.417334,5.708247,-6.259127,-8.529152,-9.688181,2.357904,9.869828,-8.907054,-4.085766,5.516999,-5.639440,4.738081,5.723331,3.688359,8.535928,-4.017465,6.567197,3.822253,9.541504,6.645418,-2.951720,2.300597,0.993046,-5.762818,-2.579370,-7.813204,2.029964,-2.828320,-3.587122,6.603330,-1.237136,-6.942880,3.317893,3.724926,5.758034,-8.342895,9.608157,0.264360,6.199811,-3.232242,8.039322,-2.892123,-0.763200,-6.954342,-5.599387,1.952164,2.310583,7.038341,7.390967],[-8.480517,8.713040,-4.581005,-1.410442,0.062351,8.439984,-1.039190,-4.590436,5.756892,9.166963,7.679330,3.915560,5.934984,0.176207,3.133983,8.095824,4.712887,-3.598423,-7.038201,-7.448893,6.898799,5.115343,-9.440228,-3.495944,3.628728,5.808804,-4.066900,6.964400,-4.326623,-5.169563,7.772116,8.611533,-0.035976,-2.089869,-9.438710,-5.018419,-1.228053,7.967345,-7.647789,-3.331075,-4.851471,-2.880801,8.443709,-6.103477,-0.544472,7.126650,-5.444922,2.510065,6.979978,7.630620,-5.128031,0.575347,-4.491870,8.900032,-1.696541,-7.374711,-9.715029,6.676244,-7.926667,8.022156,-8.476917,-0.206957,3.633532,2.194808,7.465412,-9.540194,6.561823,-8.389792,9.176938,-6.019561,8.205758,-7.299965,2.792457,8.198340,0.219612,6.989621,-4.413195,-3.387275,3.833084,-6.551991,9.120980,-5.018950,-8.124504,-0.616298,-6.105041,9.420464,7.599251,1.258409,-6.333900,-9.382020,3.870966,1.402612,3.941447,6.414527,-3.313267,2.031781,8.456424,-9.180816,-0.490745,6.310462,3.250811,-4.340668,-7.915674,7.189756,2.381680,-4.107201,1.805532,-8.162165,8.572663,7.642238,9.955303,9.354469,-6.794122,-5.553136,-7.285740,-9.347070,-1.078502,-4.645729,-1.284880,1.145531,0.245089,2.919705,-1.596476,8.651144,4.339110,1.416450,3.706278,8.383772,-2.109927,-8.579979,5.382003,-7.957926,-3.901214,-2.086409,-4.799392,-9.172152,0.750162,0.976186,8.900911,-3.170925,6.515793,3.287538,-0.786078,8.399370,-4.384324,-1.367197,-2.082253,4.963620,9.530669,4.168358,-5.474771,-9.771543,3.527208,1.849046,-7.621610,-3.544122,8.186160,9.429846,-2.173077,-7.640312,-3.460695,5.490464,2.879784,5.645629,-1.437834,-4.659834,-1.744957,3.710435,-0.118185,-6.715267,-8.638822,1.759162,-7.840419,6.856995,2.595164,0.064703,-9.214950,-9.597765,-5.591247,3.294118,-3.132116,5.190928,-2.268653,6.648227,8.593299,4.111478,-5.884720,8.848508,0.947360,0.802574,-1.004535,2.534932,9.974779,-6.272461,9.112220,2.692666,3.767673,6.402124,6.423994,8.854025,-6.625099,-3.816599,4.066772,-4.193889,-6.242945,7.371409,-1.789948,-2.113090,-8.490710,3.447541,-6.790734,0.300001,2.402137,7.618539,8.272177,7.160182,3.089822,-4.107289,4.262541,-2.439125,7.053010,-0.234831,-0.561281,7.237181,1.219827,-6.868586,1.976635,-6.053316,-4.744187,9.397892,-6.229658,-3.313869,-0.907032,-5.287098,5.416574,-3.373228,-0.124383,-0.957299,9.015123,6.199676,8.713260,-3.925124,9.945387,7.119167,-9.635333,-0.070886,-6.575488,-6.476957,0.417256,-3.111982,2.722309,5.575666,-2.613645,-4.929802,-1.012404,-4.387319,-1.336205,-4.495240,8.117911,9.731590,3.786057,-8.138577,-8.609320,-1.813512,0.881943,-6.417776,8.431692,-8.006944,-7.601204,1.370527,-6.282160,-8.370438,-4.931481,2.147302,-1.016589,5.223408,-8.109299,0.734807,6.887282,-7.899925,9.219788,0.179283,7.111565,-6.957951,4.460656,-4.318420,6.696973,-2.240173,8.645876,-2.593518,-1.529239,9.877148,3.056976,-9.710484,9.949836,-2.669683,6.835840,4.865810,4.349967,-9.644352,-7.104073,0.561160,7.812423,8.900971,7.094136,8.787038,-6.576365,-6.956420,3.260595,-7.958420,5.756088,7.518071,-8.181869,6.057818,-5.971900,-1.859679,-0.802567,2.671014,4.236875,6.422456,-0.789473,8.578077,5.075076,-4.606508,-5.584579,4.551784,0.728804,-7.334986,-1.432921,-9.852839,-8.286508,5.521939,-0.566420,-6.661693,6.847493,-8.649322,-5.384165,-1.681576,9.427260,5.524593,4.045674,4.036711,1.044056,8.685183,-4.954207,4.983158,-4.120127,9.939193,4.401335,8.485043,7.411874,-4.670775,2.696210,-8.869606,1.387759,-2.096531,-2.762613,-4.549762,5.837331,8.696303,1.889516,-7.383113,1.637965,-4.683804,-6.228452,-9.227672,6.304916,0.902684,2.431371,1.889572,8.111050,-6.580038,9.998917,-6.235566,-9.838798,-6.088921,-3.537523,1.336863,5.736338,-6.755688,1.074850,7.317655,1.775046,8.659340,-1.447354,5.511643,-5.480754,-1.653137,-8.781472,5.506364,-2.811626,-3.341344,-3.089847,0.474084,2.009454,5.086680,-8.263679,3.638452,-6.283185,-9.671841,0.544500,-4.006592,8.305489,-4.790937,0.846142,-9.616671,1.644729,-2.761654,2.683669,4.497735,4.369293,5.911421,-6.073788,7.298231,-8.297830,5.896973,-8.460849,9.223557,-6.765413,3.179097,3.511284,-0.420250,9.080599,6.537195,-5.328488,7.892114,8.237496,4.783160,-4.987019,-0.542204,-4.791573,-3.610868,-3.901277,4.323037,8.331870,-8.895355,-7.706172,-4.878913,-2.922283,-4.481366,-0.182454,-7.720242,2.805935,2.405467,4.047032,-3.137054,-1.349834,-7.711493,-1.872257,6.359610,-2.549125,8.452016,-2.859453,-6.733779,0.078410,2.266035,8.764556,5.231991,9.265349,-3.131066,1.040996,6.840903,6.180908,-5.720469,2.667758,-7.411182,0.658260,-3.874840,5.971095,-0.848030,-1.356856,-0.434449,-4.963740,-2.832443,3.897299,-2.418208,9.207692,-1.872271,0.910343,-2.685013,-7.130985,-9.221998,-6.835719,-4.194001,-9.362180,-0.151931,-8.963898,-4.633012,5.717947,2.161931,4.817160,4.910778,0.375151,5.550381,-1.991631,2.413993,-2.910643,-6.923830,-9.105075,-8.830016,-7.849836,4.906049,-5.096601,9.937552,-9.075498,-8.913391,-9.170087,-1.988339,1.064677,-1.012258,-2.276265,-1.096806,2.729430,3.032684,3.996681,-0.901172,8.304367,2.061134,4.437570,9.530264,4.102244,8.443842,9.471456,1.831485,-2.841568,-9.890271,6.876552,8.428861,9.207140,-4.443998,8.786564,-4.913909,2.272609,-3.944659,-3.754728,-2.857036,8.157463,9.864307,-6.701791,5.307958,-1.819271,3.228703,-1.753987,1.054833,1.900713,0.523727,-8.786883,1.291388,4.173035,8.804348,6.651515,6.144947,8.830311,2.863064,4.239566,-9.675662,-3.296862,3.454263,2.298052,2.305716,-4.307984,9.322108,-7.932531,-3.521579,-5.744341,-0.786457,-3.937961,-3.351114,-7.727897,8.409109,-9.693135,-0.448717,0.543011,0.681034,-7.367547,1.347436,0.048953,8.881191,-7.752996,2.560000,5.901126,-5.240130,3.399564,-2.849847,7.104234,6.697824,7.673153,-5.393963,5.791687,7.592058,-7.329995,3.688847,9.764812,-1.152539,-1.341979,-8.994185,6.350313,0.338792,1.552652,-3.522301,8.670818,-6.793901,3.264309,8.073221,6.205170,-1.500875,-2.342751,8.511318,3.667363,7.848488,-2.765034,9.302486,-3.848691,-6.516567,-0.104803,-6.912667,9.262460,9.575022,-8.369124,6.981621,8.702856,1.788788,5.783801,-5.583931,-6.662905,0.887715,7.544658,-3.506642,6.938819,-6.048727,-6.782563,-1.304640,4.930330,-0.896750,-1.940924,4.811407,-7.829598,2.603722,-3.928831,-4.200573,7.682560,0.180450,-4.505853,6.120943,-0.264606,-5.839001,-9.437029,-2.286093,-7.496500,4.255591,2.912844,-8.404476,-0.937509,3.434968,5.206901,6.381797,0.402362,-9.506280,6.641011,-0.048888,4.118015,-1.240533,9.846834,0.149872,5.116903,-9.831456,-7.903067,-9.279739,8.542483,9.678721,0.421547,3.548381,0.852941,1.990323,7.683134,-0.510406,-8.911076,9.898156,-8.711811,2.002155,2.363130,-4.580882,-4.009763,-1.860080,-7.194151,5.316872,4.955137,4.562808,-0.913708,9.806154,-6.457863,-7.334238,-1.094291,-3.404782,-9.340101,-5.985411,9.135245,3.357494,-1.119626,5.964728,9.243685,-0.086605,-0.869241,5.073288,-6.357754,-0.736992,3.933587,0.970887,-1.679716,-8.685389,8.051467,6.410036,7.066761,3.775866,-4.106288,-8.114522,6.411967,-7.516726,-7.149798,-6.275205,-3.572943,3.861944,8.350240,2.397639,-3.096218,-4.864989,5.962263,9.454714,9.901029,-2.181600,0.328063,8.728310,2.754453,-7.430756,-1.061038,7.316799,-5.513533,-1.300480,1.758238,2.103098,5.500574,-6.708762,7.321543,4.182015,-3.612226,5.233455,-2.606428,-7.408801,-8.605500,-9.251132,7.440349,-9.421473,-4.895396,7.423356,-4.828829,-0.665195,-2.863657,-9.436199,-2.996017,-5.215355,7.138555,-7.291743,4.849357,-5.699758,-3.891537,-8.007738,-8.589865,9.057363,7.846947,-8.571111,2.904688,4.101750,9.883755,-1.625375,6.299439,-6.155752,-5.751202,-3.968807,6.892294,6.503485,2.701226,2.637112,-6.906071,2.455058,9.450305,-5.949432,-6.018816,3.933153,5.071391,2.504584,-4.468466,-8.242975,-5.366466,-7.779517,7.955472,9.791920,4.395818,-6.198232,2.858350,2.564991,5.561321,-4.189082,9.247864,-2.851017,7.626910,2.226044,3.763327,-2.428334,8.820393,-0.348192,-1.665808,3.263042,-4.330364,-9.061865,1.747649,7.728668,0.618714,-1.551150,8.710087,1.572074,-1.360756,-9.943690,-3.710957,-4.440527,-5.638587],[-3.505215,-5.564291,-2.848987,3.247743,2.461805,2.208747,-6.154344,-4.803287,1.588718,9.215745,-3.114217,-5.264669,8.116837,0.014630,-1.727645,-5.269268,-2.685887,-6.085179,-3.445390,3.948322,7.451475,-7.096315,6.580542,-6.566340,-9.140981,-0.552663,-3.494640,9.771055,7.372120,2.866355,-2.516737,5.790527,-6.909391,-1.411679,3.665298,-2.700816,-0.094321,-7.286156,5.888238,-9.742395,-0.710615,-9.164056,8.926431,1.844342,-4.843174,-9.440475,-2.383563,-5.788593,-3.949123,5.205915,-2.012294,-3.493400,-2.821717,7.830435,6.850563,1.194956,-4.898136,-7.838719,-6.356094,-4.384683,-8.050557,8.621762,-3.115920,-0.363966,-8.690607,2.544986,2.932561,5.382683,-1.808113,-4.731560,6.143530,-8.600882,5.166501,0.139043,-4.895460,0.067569,1.399867,7.825713,-4.217343,-0.225698,-9.948835,8.805055,6.614561,0.767965,5.035693,6.621475,-3.586433,-3.138547,6.726872,9.314054,-4.830595,-7.396658,1.680566,3.344005,2.227882,6.874381,5.641390,-3.668827,3.024096,0.866369,8.864778,0.349666,-0.661393,6.739728,-9.872679,5.483022,2.816162,-3.453953,7.149717,-5.662513,6.237504,-1.806483,2.100263,7.325135,7.205194,8.150834,8.610456,-4.531252,5.028539,9.488723,-4.485027,-3.322578,8.709540,-4.346237,-9.190170,1.946454,-3.883076,7.024601,-2.624631,9.383610,4.057404,-9.504865,9.711310,-5.397494,4.685026,-4.283803,-7.465806,2.228906,7.456513,-2.927786,2.587158,4.181734,-2.353092,4.319295,7.270724,-1.985086,1.368587,-0.293354,0.387007,7.824941,-7.985997,-4.326404,-9.535981,-9.728154,7.914730,-3.223666,9.016561,9.914766,-9.301953,-1.000978,3.034926,-8.660047,-9.082002,1.359138,8.907522,-1.718612,7.337602,-5.767371,-7.496969,8.999370,5.654445,-9.058627,-1.389373,-9.997696,-4.807222,-8.165579,1.955993,9.898370,4.977578,7.441901,7.558041,1.820646,-3.535776,8.656824,-8.542233,3.101759,-0.544407,-7.915297,3.032809,4.803435,-6.699199,9.341393,-1.350591,4.168241,2.788067,-1.877551,-6.250811,2.251343,9.900841,8.184065,-1.502166,4.333688,9.192507,4.244630,5.696690,-1.087262,-4.927305,6.079343,-8.793267,7.885908,-2.787470,5.770027,6.016537,9.566626,2.638379,-3.639764,3.723025,-2.063307,-8.650871,1.513076,-6.707215,9.443365,1.328993,5.146788,0.824037,-9.020945,-1.297040,-3.564334,-9.382294,-7.936227,-3.964410,0.013993,-5.522615,-0.754628,7.466829,-2.021145,-0.121078,1.947039,2.530300,4.239810,8.478022,-7.086235,8.258187,0.371656,-1.571696,4.806686,-2.928205,3.730423,-4.038451,0.331162,7.749453,4.647166,6.781959,-1.436888,0.827631,1.506735,9.997041,-2.339047,-4.704337,-0.538721,7.911313,-4.579003,9.151697,8.251793,5.847283,5.284479,-3.408200,-5.209477,0.458611,-1.437822,3.716074,6.519290,7.448142,0.864259,2.202298,0.622611,-4.522299,6.745075,3.064531,0.357183,6.548990,4.337225,-6.359282,-6.356031,-1.873183,-0.453222,-8.291819,-7.177463,-6.117272,-7.910159,-0.256934,-3.600649,2.556683,-9.509936,-4.268461,4.305163,-7.938630,-6.946564,6.975749,5.254805,5.200901,0.623712,0.007846,-9.827347,4.681998,-6.428224,-4.794330,-9.870058,-9.220463,-9.960306,2.594838,-3.990291,-5.253276,-1.735696,2.286181,-1.094333,9.972816,5.099504,0.825116,-5.171109,-3.506039,-7.129464,-1.966609,-1.217597,9.668650,0.182741,-9.839181,2.859560,-7.060129,-8.997841,5.937827,3.237542,-5.458520,4.191583,-6.192157,8.170992,-5.484291,5.710598,-4.319661,6.322644,-9.897008,-4.053673,6.475933,9.970507,0.144423,2.240300,-3.959437,-9.850858,6.385279,7.594732,5.901028,-9.839051,-0.570826,-6.943787,0.021311,0.513449,1.504765,9.897929,2.761644,-8.875622,-1.357236,9.335298,-3.389156,-0.186742,4.551194,9.940604,-5.507675,3.331168,2.201569,2.181847,5.176117,-2.232694,3.683201,6.662702,7.038940,9.426364,-8.908953,-6.885429,-8.498591,-4.773350,-8.206719,6.558702,-6.319485,-5.232204,-6.425659,-3.035909,-7.375522,-5.948208,-2.717408,-1.051401,-5.826408,-4.290902,-9.376755,8.521291,2.470566,-5.445605,-3.757036,-2.336224,-4.777435,-2.506937,-3.549527,3.074883,-0.279565,-6.564249,3.034525,-5.212303,8.582080,-9.857150,4.388814,-2.880897,-7.822797,8.965919,-0.727387,5.879746,-0.022707,-0.625501,-7.372465,1.377510,1.368742,-7.158748,-4.583553,-7.905269,6.065267,3.293676,6.884795,8.543432,-2.684045,-7.465928,-3.524374,-6.812716,2.348715,4.159301,-3.842943,-6.073537,9.200113,-5.108374,1.674226,2.391276,-2.987190,-0.112453,-5.499897,1.030808,-0.222959,-4.874949,6.826095,9.960525,4.764385,-4.395299,4.780627,3.556736,8.686748,-0.896615,9.580692,2.158203,-5.065935,5.462710,7.846770,7.616450,-1.683563,-6.590302,-6.429304,-3.386356,1.275333,2.553806,-1.187983,9.757112,7.166260,-0.641185,5.724057,-7.561064,6.740241,-7.999728,-5.928608,-6.349857,3.988267,-2.892558,-6.439739,2.775774,3.652850,-6.780089,-8.665500,-5.903520,9.957694,-2.556262,-5.137866,-0.753242,-4.790615,9.377853,3.941824,4.950871,-4.409923,-1.025633,-1.041167,-8.766256,7.134788,3.948552,-7.750874,7.210993,2.664706,-7.937975,-6.252684,8.793529,-1.313438,5.883312,8.982865,-0.621796,-6.794132,-0.675200,5.985436,-9.422814,-5.108969,-9.582698,6.461790,-5.056188,7.857589,0.123264,-5.058068,-1.045164,8.509312,-0.277332,-9.482592,-5.214967,7.410579,7.357633,-2.322081,4.717042,-1.123926,7.213548,6.322313,-2.165885,4.426489,-1.746436,-9.210236,-6.018655,-7.876553,-4.313755,2.427571,9.543351,-6.127981,1.568176,4.431935,0.104221,-7.872043,1.892978,-6.599614,-4.748773,1.305998,3.446669,7.901461,8.572146,-8.536983,-7.994150,5.483512,8.497368,3.424547,-9.300628,4.813242,-6.571885,-6.577227,-0.035311,8.585984,-7.339099,8.500035,-3.345583,8.878538,6.364115,-7.572859,-1.865078,7.765197,0.793551,-1.840432,0.875167,7.900682,-8.718402,-7.191749,-2.604050,0.966769,-7.311643,9.715186,-8.942235,2.374380,-9.381291,1.069797,7.636662,-1.003165,6.078553,-8.466902,7.526188,-4.838583,4.066694,-9.571843,-8.793185,3.562368,-0.651641,-0.368999,5.903651,-3.652739,2.867589,-7.063814,3.410227,3.320553,-5.231918,1.279605,8.883710,1.250556,-1.212434,-9.236838,4.255565,-2.198255,-4.067803,-7.416831,-7.852840,-5.835277,3.229535,-7.484634,6.034692,9.719472,1.689634,6.946926,9.714290,3.952609,-8.942207,-6.011869,4.493389,-8.572703,5.991627,-2.345437,1.142735,7.028069,4.240101,9.643116,1.532271,-6.573457,-2.941093,1.061569,-8.598098,3.251208,9.328088,4.022509,-6.303292,-5.108330,-5.185908,1.457859,6.470441,-5.187866,-6.401427,-3.222382,2.423011,-4.715921,-2.525549,8.269809,8.436727,-8.872078,-5.811415,9.750897,7.990932,4.356391,-3.713595,3.670510,5.385383,2.664538,-6.838143,-2.367283,-5.444450,1.014692,-2.867343,-6.211061,5.810930,-8.027192,-1.634640,0.985037,-0.789678,9.424368,7.836737,-8.313071,4.614423,0.174100,9.880781,1.896468,-5.514847,9.957162,8.642699,-4.239775,-1.987714,-5.494692,8.922344,-5.868424,-4.382701,-5.363827,-5.661865,2.548502,-5.551684,2.872087,-4.362737,-3.166641,5.744075,1.539734,2.858009,-7.124537,2.879884,-1.987947,-9.047801,-6.098546,-6.364254,-8.624661,7.936074,-2.535486,-9.185386,-5.428692,-6.774413,-4.353790,-9.465977,-8.349829,9.957346,4.339647,-1.190965,2.057187,-9.090104,9.423741,5.675737,0.730244,3.288922,-0.424226,-4.436940,-4.481778,5.236191,-2.509734,7.799217,8.316265,9.524143,0.666149,-8.692149,-9.597139,-2.876587,-7.493139,-5.316562,-7.024182,2.747507,4.955186,3.966757,9.093748,-4.663051,-2.762639,-9.265081,9.689252,-3.792375,0.511669,4.750663,7.570789,-2.248794,5.989876,-3.085627,-3.115023,0.552390,5.313105,-2.672623,7.856750,-9.538147,-4.211607,-1.284971,7.581104,-1.307077,1.900462,-2.363011,0.831266,-1.033928,9.594214,-3.935213,4.561199,-9.164681,6.007350,4.065249,1.068915,-3.851362,-7.203137,3.873558,-3.695519,4.975321,-0.245545,-3.859596,-2.172784,-1.677804,6.494524,9.778831,-6.835933,8.988695,-2.707500,2.204489,1.497777,6.252037,-6.259184,7.810671,-9.131328,-6.290031,-6.102875,-2.678728,-8.466498,5.686636,-1.556848,-0.932370,-6.586023,-0.711323,-9.654921,-9.016279,1.058505,8.920685,5.809270,-0.353850,9.421552,-9.181379,-2.267980,-7.764630,8.348598,-5.364684,1.253532,5.851773,7.257562,-1.036515,1.237469,6.098634,1.115549,-8.044722,2.508189,-7.869468,5.290204],[-3.186819,-8.332035,-1.176565,-5.892168,8.286225,0.108399,1.216573,-8.127232,-1.966786,1.461335,-1.715856,7.854607,0.793622,-8.975543,7.990557,-9.386491,9.743300,1.700468,-9.616401,-3.467569,2.515355,-6.103720,-6.330783,-3.663168,-7.383111,-9.742091,-6.715402,7.843260,-8.246386,-3.769586,-7.024282,-2.945385,4.704559,2.698639,6.133912,5.118101,-1.456286,-9.925742,-3.427991,2.318575,-1.712792,8.509376,6.483459,-9.911457,-0.224483,-3.677558,7.131727,-6.293570,-6.056442,-2.214228,-5.414995,-3.537481,-9.128644,5.812286,7.754461,8.524513,6.873313,4.082890,-7.957742,-7.836129,-2.320651,6.894849,7.539259,-9.493837,6.651963,-4.638795,-8.014975,-6.849845,3.822671,3.653369,8.307144,-8.942706,6.680735,0.833515,4.404236,6.320969,-9.144287,2.500791,-2.381896,9.135061,-1.894428,8.243089,-5.594022,6.057143,-8.332505,1.720074,-1.443512,-1.758072,4.637409,8.577109,4.091044,-2.233822,3.682768,-9.985794,1.355132,5.951306,8.996828,-1.871562,9.166418,0.874369,-6.189342,6.443493,-8.560893,-7.117280,0.676915,-4.801427,-1.107517,5.226667,-7.495213,-7.861968,7.459416,6.014995,-5.648959,8.783861,-1.366315,9.128613,4.363538,0.168968,-7.244963,2.917867,6.513065,2.965366,-4.754028,8.761511,-2.675925,-2.044181,4.286049,-7.851178,1.518929,3.353108,-4.111146,-5.235071,5.232466,3.050626,6.159566,-6.802678,-5.879896,0.730267,-5.336099,2.482616,-5.072129,-9.014510,3.808310,6.289273,-1.761319,-9.721955,-7.589776,-1.573406,-4.302590,0.130454,-2.111694,-0.227047,5.187000,4.928731,-4.397540,-5.161558,-2.950513,1.010099,1.072333,-8.140364,8.348112,-4.931373,9.940548,-9.348515,-0.612613,-3.055880,5.302337,6.814078,-1.680857,-2.487942,2.507344,2.498166,6.910520,-1.110214,9.633259,7.623874,8.712993,-2.590283,-8.479919,8.361635,2.193622,-9.460400,-3.702097,3.352354,-0.721309,-2.722657,3.985034,-0.944437,-7.586599,3.005977,4.047245,-4.671010,4.012875,-4.312680,0.781627,-3.931858,4.089661,9.302421,0.511850,-4.403698,-0.181899,6.734670,-9.607936,9.317488,-5.989597,-2.522285,4.342405,3.122157,-3.719970,-8.704288,5.630292,-2.334322,2.004347,-5.913855,-5.014650,7.468787,4.594997,-4.177285,-0.956612,-5.859804,1.330782,-8.940660,-7.476771,7.635366,3.361996,-7.716711,-9.645849,2.082716,4.189433,-3.519022,-9.592513,-7.514101,2.919356,0.256779,-4.706996,-1.086093,8.634491,-2.587431,-9.782168,-1.597891,-7.548181,-1.474723,6.207245,-1.913513,-2.234864,-9.968076,-5.846009,-2.968775,-8.272508,9.397268,-6.983413,-4.460471,1.873864,9.056340,-7.964559,6.437509,-9.302461,9.633715,-0.501816,-9.867161,8.483944,6.324065,-4.533186,0.532489,-9.705120,9.054516,-6.901404,-1.417906,2.064413,-6.555331,5.803373,-5.062801,9.441939,5.083858,5.699240,-4.790341,-6.250514,5.745523,-0.495772,9.873237,2.456649,1.422453,-3.486169,3.193803,1.930566,4.180638,-9.002680,-3.365876,-3.062266,1.157920,-4.553355,-8.767330,9.306282,0.215233,-6.288212,-4.759204,1.839785,7.631151,5.606508,1.143354,-0.699933,3.315519,-7.824748,7.595629,1.276870,2.197065,-2.020949,7.401577,3.426853,3.530843,5.862894,8.870786,5.634045,1.303156,-3.799312,0.605085,6.858558,0.859150,1.118420,-2.485667,5.022632,-0.702270,8.648245,2.515734,-3.548549,-8.024089,3.201858,-2.778767,2.135569,2.866009,4.916994,-3.030668,-6.762613,-3.423710,-4.916176,-2.905645,-6.320161,-1.589262,-9.299873,-9.270209,-0.939575,2.400305,0.725769,1.175384,5.062881,-0.291042,7.818742,1.252791,-4.563389,8.513798,1.001134,-3.511685,-1.678099,3.582165,-6.317742,6.844086,7.596399,-3.432821,1.769357,1.104248,4.252148,4.527138,-4.888939,-9.257212,-1.321819,-5.812881,1.957628,-5.269405,4.417392,8.731722,9.361228,-4.563954,3.339193,5.965699,-6.355354,3.360997,-1.419460,3.483711,8.911628,1.229898,2.622743,0.345928,-3.753464,2.700829,-1.669225,-0.688739,3.888544,-7.084960,7.155560,1.514555,-3.093731,8.927018,9.604465,7.760707,-8.355839,4.369427,-7.183996,0.746141,-6.318672,-4.732247,4.991481,-2.869867,-3.371012,9.364723,8.627823,6.795440,7.037319,-1.954264,0.280658,1.188808,3.586226,-5.564274,-5.015776,-3.451823,-0.598192,5.549865,4.730797,-3.308513,-6.767727,-2.161514,4.583926,3.871607,-4.484465,8.530543,0.871431,-9.655809,5.700380,2.887582,-4.902060,-3.167771,-6.319864,-7.654398,-2.671934,4.881109,-2.195549,-3.700903,-0.176849,-7.825236,8.493159,-5.304749,-5.868231,1.306246,4.924122,2.179410,9.693897,-5.586532,3.377708,3.152449,-0.459339,-8.370571,-6.437773,-4.701198,-4.285708,-9.357573,-7.499355,4.302039,6.132501,1.379633,7.252694,-5.440412,-6.957700,-9.407653,8.555789,6.142838,1.603844,-1.646659,-9.454880,-6.604061,8.459500,1.171426,9.613970,-0.221026,4.704706,-7.998527,4.593650,7.448105,6.403108,6.217649,-7.054854,-3.313497,6.572787,7.920812,8.294486,-5.988675,-5.765302,7.849406,-5.477515,-7.982233,9.385789,-9.168156,2.008014,-7.524249,-8.767841,3.818742,5.604156,-2.951529,-6.732008,-9.260286,8.842420,-8.614439,-9.784762,5.647893,-1.152757,8.398859,-1.070270,-3.474044,4.556887,4.213607,-0.487325,-5.053494,-3.894659,-0.956775,5.675779,0.368672,-9.774929,-5.077590,5.726534,1.688299,-9.942776,5.819045,0.803535,-8.778181,-6.840402,-5.514600,0.621011,-6.421394,6.420511,-2.620852,-9.894018,1.936843,-8.654012,9.484050,8.841141,2.110676,9.085029,0.417429,-8.843298,-0.630413,6.029575,2.484412,7.415325,-4.474690,6.189252,9.195879,-9.118654,-3.829136,0.574167,-3.084046,-4.814814,-7.754319,-0.962315,-6.650861,8.994944,-6.071835,0.927664,8.217820,4.793452,1.217445,8.415628,-8.244700,4.118912,-0.655906,8.762948,-6.938822,-4.427330,7.624471,-6.593762,3.103337,-2.773738,-9.874718,0.936222,1.349414,4.111091,8.200024,1.550842,7.765201,-1.225259,5.870597,-6.806679,-2.463097,-6.141135,-8.778638,6.563036,4.459402,3.801836,-3.182771,6.872712,1.272447,-7.714175,1.561208,8.553585,5.606823,-6.079503,2.375029,-9.204297,2.531396,1.171779,7.197910,1.272912,9.300660,-6.281847,-8.696262,1.731038,-3.694841,-3.056270,6.152443,-3.486803,-4.716445,-7.917649,-8.047424,7.800224,4.877972,4.091814,9.227018,7.876675,3.591900,-1.585986,-4.217932,5.016140,-2.234171,-5.509601,5.525470,-9.916712,-3.662759,8.708215,6.618133,-4.194295,-7.239489,8.344216,4.184367,-5.878499,-7.306069,-7.054510,-9.150096,7.841540,1.010085,-7.191833,2.317525,-3.941547,5.921114,-4.250138,-7.904179,-3.934109,-6.457863,5.168812,-6.498827,-6.488393,-3.810416,7.158361,-6.571638,8.196124,7.413003,0.473645,-2.205856,-8.955018,3.048935,-4.732397,9.171567,-9.940072,-3.035732,0.909083,8.204762,1.158479,-3.178899,-4.682352,-1.483194,4.484128,-9.440506,-6.556106,-0.905064,-9.292720,8.748781,-9.620181,5.145610,-6.582466,-2.220800,3.210256,7.052640,6.669053,7.468357,-9.471839,-6.515477,6.072930,-2.167652,9.736435,-6.179824,3.220745,0.547105,3.790649,-1.841730,-7.343179,2.515962,4.915968,3.402381,8.902827,-1.302984,-2.201356,1.802486,7.935717,3.199584,-7.317916,9.352984,1.947551,8.413128,0.993566,-0.768010,-7.714505,6.687845,-3.787234,9.460845,-9.667696,6.007452,-2.770304,-2.025601,9.596618,-4.385736,-0.358150,1.000264,-3.073933,-3.298104,-6.247844,-0.116413,-1.274849,-8.092035,-0.794851,-9.726175,-9.206425,6.275920,-3.108354,-3.575713,5.670686,-4.611508,-9.838439,0.683798,-3.526429,1.090056,-9.052671,-6.621234,0.404710,9.032142,-1.955730,-0.502851,9.155656,0.555561,-4.561742,0.759475,-6.747781,5.442835,3.743337,-0.678096,-8.534592,7.339049,7.176070,8.436422,-1.929031,-7.623182,7.440967,9.886990,-4.162193,-2.478871,0.222700,-9.493059,4.779445,-9.425241,-3.755211,2.711957,-7.813550,1.526383,-5.431885,6.250740,3.475122,7.201479,-1.347765,8.224899,4.691490,2.106463,-7.636872,-0.650040,7.801234,-4.803463,5.272503,-0.399533,-7.537893,7.612371,9.598435,-6.030994,-7.271744,7.075241,-7.970606,0.783402,-1.056406,-3.043318,-1.691325,2.854366,-3.987980,1.677483,8.846487,4.564468,2.801893,-0.200779,4.080582,0.736119,-5.517132,8.087953,-5.135629,-7.796397,0.353252,7.141626,4.905829,-1.445337,-9.086340,-5.066435,5.756095,-4.333679,-1.511588,0.655015,8.758040,-1.246689,1.199945,-1.677524,-3.878631,3.970846,-0.423389,-6.178066,4.373463],[6.004922,-5.374537,8.013707,8.167821,4.971132,-9.383036,-3.320766,9.721770,8.598850,-7.194736,-8.319669,-7.195074,-5.734266,-6.653208,-8.899653,1.777680,-2.405452,0.746515,-4.700524,3.651986,7.318545,-4.806645,4.026199,-2.325041,3.505519,-2.605058,0.781894,3.800848,4.854709,-6.398743,6.911197,9.362635,-1.225980,6.003522,-6.470780,-8.279559,-7.599996,3.033147,-5.899325,-4.725564,-6.961550,-6.660719,9.665658,4.264089,8.191562,-7.316573,-6.326922,-8.952220,6.064385,4.093124,-9.898710,0.752643,-0.422148,-0.182278,-9.853494,-3.514720,-7.241875,-5.250399,-6.301688,-1.282991,-5.420430,-3.949860,2.019867,7.241236,-2.597477,-4.047900,-0.642987,5.290442,-6.124760,8.180719,-5.120089,7.291092,-2.246940,-9.079785,4.523760,8.462811,-2.053934,-1.293688,-9.238165,-7.504817,-5.292519,-6.360350,-0.214944,-9.317993,6.011934,8.723257,4.879282,-6.656354,-0.897944,5.159287,-9.261462,2.935944,-9.810712,-2.944833,8.475662,-2.718532,8.132747,-2.431795,-9.773957,-7.235786,9.891301,-8.967527,-1.603737,-0.100792,4.544082,-0.329611,-6.266197,-6.269548,-0.571678,-7.864031,4.639347,9.462449,1.629070,-6.617517,-3.224566,1.140128,-5.380782,3.012136,9.176909,-5.615722,5.602508,-7.332124,-8.815833,-9.837999,8.492440,3.225753,3.357873,3.520340,-0.010091,7.052209,-7.348268,-0.765900,-7.178188,9.306676,-2.641639,-4.254109,-9.461832,1.569684,-8.970656,4.621809,-6.215541,-1.570192,-8.666422,-9.806582,-5.638583,8.893931,6.097777,5.010113,7.588037,3.374076,-3.077382,2.842539,-6.334087,-8.646131,0.306223,-4.570843,-1.530278,8.023534,-5.178013,3.645605,4.731642,6.608207,4.273654,-6.111882,3.607306,-3.537739,-8.224451,-6.986825,-6.126159,7.775664,3.845861,-8.228447,-7.100138,-8.194930,5.735713,6.681961,-9.748354,5.897066,-0.857411,9.856923,1.771605,4.012925,8.398310,-6.035586,-5.820121,9.553236,2.255565,6.181296,-9.380151,-4.844942,-4.377463,-7.159077,-2.795011,-2.277708,-2.533633,-1.480907,4.532073,0.246935,-5.233307,-5.081537,4.909335,-6.251335,2.523443,-7.376977,6.663175,-7.487036,7.363095,-2.787945,-4.931438,-7.909891,-7.429674,7.782102,-5.897826,8.498899,-6.444815,-0.130111,6.307127,7.664811,-4.114610,-3.353134,-6.218165,4.662817,-9.197285,-0.727855,-4.165032,1.694603,2.493083,-4.719376,7.651480,-2.979353,-7.762027,0.358714,2.422103,-0.628261,-9.370237,9.735423,5.226902,-2.566447,6.186153,6.409127,5.005359,-1.886543,5.965076,6.143189,-5.881825,-6.780261,-0.020690,5.072223,-5.181337,7.911159,-2.722669,-1.625282,-6.008807,1.444757,7.368338,9.915333,5.988558,9.534077,6.717513,3.472825,8.473567,-6.941254,5.286163,8.011441,6.488700,4.867845,-4.989896,-6.981144,-3.320880,-7.188507,-6.513873,4.057570,9.154027,-1.016533,5.785097,9.868189,6.112092,-9.342338,8.046759,3.509304,-4.282420,-9.928003,-8.434927,7.000450,0.963232,-2.434886,-4.232500,8.657788,-4.377013,-5.968823,-4.521389,-9.796816,2.368546,-6.008225,3.831630,4.885922,-1.085712,-4.509848,-6.735485,-2.409939,3.609393,4.141318,-5.188770,4.125560,-3.351010,-1.095758,3.025896,9.363592,8.140233,1.576324,1.373016,-2.713072,1.176400,-6.843753,3.492132,5.605953,6.484596,-6.976199,4.914622,-1.059622,7.177641,-4.880751,-0.317299,8.091847,-5.257397,-0.875066,3.459826,0.691120,3.308101,9.185965,-0.945640,8.621630,3.294591,6.592020,0.575864,4.857992,-7.691551,-0.136306,1.849194,-7.169062,-3.194516,9.851558,-7.750582,-7.013768,-6.781800,-2.933116,-7.405153,-0.970723,6.305941,4.875558,5.806684,5.757470,-0.124250,-5.411818,6.007159,5.731176,9.685172,0.523214,-4.805492,3.997048,0.200046,7.910775,0.061290,-8.163490,-8.630686,-0.591504,-7.368469,3.315513,8.441326,-5.473482,2.797388,-8.713913,-4.726965,-2.040888,-5.340909,2.440686,2.898749,8.541499,-5.682456,6.126348,3.547124,-9.396082,7.674885,3.334161,-0.859047,7.724275,6.169829,-1.636590,1.420873,-7.289715,8.130476,-3.200541,9.581898,9.093309,1.516438,-0.529696,-5.098599,-0.144314,-4.238463,-6.861023,8.323218,-2.314606,-1.962540,-5.095882,6.842826,2.048939,-8.698144,7.519287,1.273853,6.719034,5.859743,-9.549920,-2.444512,3.343998,-1.910814,3.102455,9.797712,-1.829131,6.537896,-3.345993,-0.505585,9.510731,7.704623,-3.804559,4.169327,0.676546,5.210009,9.389345,-2.499062,-4.546236,-2.666980,-1.910074,-3.086101,4.067238,6.397834,-1.537999,5.315916,-6.018570,5.760894,-7.446508,-7.815881,5.779493,6.882177,6.292243,-3.799701,-2.775835,-3.767860,-3.309424,3.081799,-3.445648,6.770422,-0.112739,-2.387290,3.014228,3.667079,-5.968217,6.285474,1.040955,-6.110857,-9.283562,6.668816,-7.270490,3.338210,-7.588657,-0.933045,8.608566,1.971178,7.558748,-6.178352,6.666013,-3.461515,8.362414,-1.630732,-6.381594,-4.055350,2.567364,7.080799,0.629141,-3.512518,8.674365,-5.592320,7.201970,9.323819,4.651717,6.922569,9.991585,-1.648350,-7.023097,-2.192113,-7.941956,1.950410,-2.235977,5.376338,-3.208801,6.651158,-6.188339,-7.962608,7.988908,-6.595345,-7.753307,-3.633047,3.344313,-1.794665,3.372407,-3.797484,3.201151,2.516663,-7.398773,0.384609,-9.740195,8.814247,-9.362516,-6.850660,3.005348,-3.404336,1.516399,4.336661,-2.416377,-1.043287,-8.948885,8.877334,-7.445114,8.165405,9.664149,7.348142,4.355092,-4.410984,6.404547,-5.056130,-1.924499,-7.440589,5.721066,-3.734264,8.399111,8.267805,-5.311592,-1.655160,3.804344,6.272028,-0.059907,-4.896427,0.550865,-5.184374,-0.248124,2.620329,8.628735,-3.118883,-9.829528,-1.666371,7.243161,8.987374,-7.140392,-3.221765,-4.933193,-8.663731,3.858029,-3.689652,-4.029600,5.327003,4.990368,1.289824,-3.889087,9.716917,-6.817695,-4.361493,6.779689,5.937976,2.336762,7.981707,-2.457236,9.080415,4.875427,-7.403840,-9.473081,-8.589162,3.119139,-9.779812,0.996270,-3.649002,-0.775016,3.034494,-9.648803,6.354144,-2.604436,6.578252,8.980799,-2.153432,5.359311,-1.307609,-4.441956,3.474323,-3.223737,8.199329,-6.683445,6.861436,6.618809,-4.002639,-2.962367,9.125721,6.121232,3.596570,1.811067,9.884172,-6.663353,-8.533539,-5.196300,-5.156778,-9.385401,-4.159200,3.778151,3.560118,-3.682146,6.036422,5.103758,4.835295,9.788759,7.967699,0.924004,8.659296,-4.843318,-2.387764,-3.631389,7.278788,2.704730,7.985294,-9.238246,2.437021,-5.743753,7.157246,9.937850,-8.428978,3.695874,-9.136951,-6.999187,-8.771808,3.014927,7.608478,-5.011514,-1.832359,-4.885515,-1.920081,-9.736823,5.768879,-9.307955,4.534174,-6.062051,1.457388,1.795769,-0.153218,6.712748,8.278001,1.808840,-9.847784,7.394988,7.538096,-8.699542,-1.797738,7.107673,-7.928561,-4.314215,-5.016484,8.562376,-2.097052,2.503231,8.820272,-8.415080,9.108566,1.367425,0.784043,2.331614,0.445301,-1.091179,-5.144553,0.948627,-7.850974,-0.570930,-7.861771,-2.861089,1.849321,9.934641,-8.708979,4.818177,-7.357519,-2.263568,3.342094,-4.947397,0.051964,3.964882,8.837577,-6.703348,-9.957961,-2.041251,6.411794,-1.956818,-8.489249,0.779784,6.521179,-8.431875,9.735471,1.981531,-7.102277,2.228310,-3.279197,-5.092381,-0.503173,9.621061,7.031354,0.555701,-1.485311,1.869627,-8.165382,-1.475202,4.975481,7.002181,8.058785,-4.580566,-9.712930,5.105829,-9.622205,-8.067926,5.654165,5.240805,4.050394,7.216360,-0.506706,-3.103490,4.168297,-5.876247,-3.856230,1.820508,-8.952235,1.060071,-2.040090,-9.539251,-1.292141,7.056553,-1.021876,0.214695,0.600003,-5.338757,2.282319,-7.484681,2.493787,-6.320449,-2.612608,0.317976,2.392574,-9.388018,1.375168,-7.437974,6.952916,6.346249,-6.126866,-3.091162,0.183460,-6.233810,1.574678,5.831916,9.237689,-0.066809,-9.301200,8.749737,7.356520,3.561574,-8.561467,-8.899123,0.951717,6.298665,-2.896319,8.486214,-4.131422,5.014977,6.573616,-6.235943,-9.402347,-0.939299,-2.366036,-3.568816,9.669284,8.738880,6.649492,-7.271353,0.660020,-4.902210,3.738756,-0.185965,5.947405,6.815752,-1.334376,-1.956510,2.621316,4.346609,-4.707278,3.699125,4.488205,4.449913,-9.619416,9.987932,3.917176,-2.280665,-5.719277,3.924904,-6.040006,-8.462641,-5.530269,2.781522,9.832391,-0.077775,-4.378537,-3.197144,-1.035219,-2.305409,9.305173,-9.806912,3.645023,7.954198,1.269573,-6.057082,4.693939,6.145310,8.736080,1.667610,5.817547,-0.216160,5.899377],[-8.590225,-4.789669,9.904469,-1.469526,-9.926439,-4.932710,8.518604,-2.205230,5.799919,-0.465993,-1.595989,1.071577,3.091526,8.338648,-5.782831,-5.272159,-8.995291,9.376764,-3.201459,4.202415,5.899099,-9.676018,-7.658406,-9.235662,-2.593049,-4.456344,-4.173625,7.222145,-0.441372,7.882925,7.604274,4.599007,-2.537504,1.658617,6.561663,-4.486565,-6.667457,0.145857,9.279536,-9.928282,6.910340,-2.771299,-6.153146,9.993944,-3.355818,5.399666,-4.481493,7.931135,2.835303,0.191587,-7.457173,-1.140476,-1.907241,9.179020,1.406449,8.252673,-9.821358,1.701174,8.609228,0.762049,1.117296,-0.509467,-5.804581,7.142819,-1.614043,-6.878672,-2.858962,-8.467150,-4.166163,-1.490931,5.672081,-2.690378,-9.553579,5.874585,-6.587481,6.535583,7.250675,7.995105,-3.911292,-2.598616,8.804917,7.097374,3.358258,-2.096565,8.763235,7.130680,9.512528,-8.939875,7.487058,3.356713,-0.266113,-3.017388,-2.870786,6.369288,-7.575266,-4.895936,-2.648712,6.632864,5.621196,-4.409346,-3.155589,4.018130,0.573289,1.342392,1.381631,3.780650,-5.947479,-2.797136,5.000158,7.349110,0.916031,-3.533239,1.271119,1.308553,3.262489,7.623038,4.226064,4.301236,-8.146906,-2.708142,-8.214162,0.441075,4.619866,8.518107,-8.419744,-9.340452,-4.404701,9.696171,-7.410689,-4.598177,-1.752421,8.723983,7.592039,1.326352,-3.094029,4.625618,0.315873,5.672393,-5.402482,4.566291,5.384389,-0.755138,-9.476645,8.003711,-3.689490,7.147769,7.249416,6.369183,8.212520,-6.852166,-8.140036,-7.530144,-8.007260,-7.303407,8.247884,3.940966,7.556755,-3.498723,-3.381479,-0.579328,-8.165847,4.171397,-1.271203,-3.418702,3.621877,4.917480,-6.022120,4.575959,8.317568,-3.394141,-7.443085,6.778202,8.009019,2.273371,7.977593,8.457794,4.867601,5.079898,1.906315,-0.751453,-9.940212,-2.720875,7.547007,-1.746387,9.598146,4.325505,-1.254191,3.810200,3.455628,0.247965,-6.021517,-2.165179,-4.629076,1.951407,9.901742,-8.759279,-2.705600,-9.897882,7.692428,-3.590032,4.905110,-1.323430,7.656140,-3.305731,-9.143097,2.147271,-5.124712,0.702285,-5.804322,-3.506480,-0.436970,1.446474,9.884258,-3.678990,-8.738835,9.180869,9.446314,-8.429307,3.643488,6.744596,-1.489106,-2.700258,-8.855476,6.962668,-9.320644,-9.135634,3.197268,6.686147,0.891905,8.985870,9.262197,-0.840058,-7.974662,0.923701,1.832166,3.263412,7.927394,-8.772146,8.383802,-3.001465,1.667363,-2.727629,6.019044,7.664175,-1.838373,-1.874424,1.139726,-2.168031,3.865191,3.974484,-9.993220,1.659629,-8.936136,8.617058,3.172309,7.944418,-8.464398,2.875243,-2.295364,-9.107978,5.304662,-9.307412,5.942702,-6.409669,-1.313299,8.681926,4.856565,-1.950393,-0.467965,5.423878,-2.584401,-7.372997,1.665406,-0.567369,-7.974000,-8.798907,6.990231,-8.399355,4.718202,-0.654555,-0.524011,-4.528156,-4.640222,8.561775,-8.548027,-3.070711,-0.511949,6.310871,7.891705,0.863439,-0.321482,3.534495,-1.498647,4.783729,6.124725,0.772849,8.747943,6.942317,-0.766162,1.766136,1.917068,6.059817,-4.059663,4.432173,-5.591020,-7.561002,-8.976747,2.859161,9.645025,-4.463385,-6.762295,8.751470,5.300674,4.913195,7.860552,-4.547415,-7.735706,-9.076237,-6.728500,-3.818352,-3.064058,-5.518414,9.536928,2.060816,-8.379211,9.961619,9.526519,-9.599200,3.260101,3.397537,-1.190592,1.128399,7.155495,-1.133074,-7.314914,6.344516,2.108404,9.499978,7.273371,3.221595,1.124335,-7.863237,3.412816,8.466113,-5.827629,-6.061410,8.943618,6.251672,8.404239,-6.336716,5.439782,5.832388,1.330548,7.720034,6.030494,-6.102711,3.452946,-2.392513,-0.275271,4.299071,-9.606923,7.704312,2.094624,-6.620810,-8.684800,-2.121588,-8.185434,-8.624562,2.620164,-9.249444,5.139017,3.488581,3.025481,5.318989,1.706771,-7.486158,-6.992344,3.724992,8.681542,6.414306,9.773183,1.125817,9.486205,3.983467,0.456135,7.221984,0.892728,3.078147,-9.875157,-5.706206,6.842600,0.806064,-5.271645,1.759450,2.497320,-6.377909,5.833953,-2.070497,1.122269,8.783263,-5.051266,6.617046,0.472480,-4.044442,-6.064572,8.220480,-0.662488,7.840795,-7.018580,-8.057379,3.063531,-2.082107,-4.201552,9.352408,-0.516916,-9.407406,-5.462260,-4.297690,-1.006452,4.939687,5.363136,-7.677422,-0.849552,8.452503,-0.515911,-5.096801,-5.092405,-9.517810,2.703644,-4.877721,-6.802514,-4.541163,4.478119,-2.692491,-4.453306,-7.406792,2.495677,6.362626,-4.578643,-4.441351,-1.956548,8.502365,7.432507,2.160776,1.845097,-5.267416,-2.667506,-8.962269,-8.875325,3.711546,9.927461,-9.569893,-7.983035,-4.782367,-3.481016,8.201988,6.650660,6.180447,0.399825,8.048037,5.810077,-5.933675,1.110037,9.303566,-9.583535,-6.951244,-6.827481,-7.280625,-6.991221,5.908943,5.600547,0.191855,4.699558,5.110995,4.760803,-3.617589,-7.189902,-4.547805,3.499747,7.838229,-1.497779,4.986781,4.808220,9.439494,-0.136677,-1.263909,4.867556,-6.566538,6.655687,2.567620,6.213868,2.031576,9.543999,2.915717,7.555355,-6.127979,-8.088392,-2.166614,6.596302,3.668454,-3.802711,3.821985,1.363506,3.583187,2.756727,2.946788,-6.532212,-2.181315,-6.920149,-4.055293,1.991958,4.389532,6.345052,0.835060,7.794536,-1.312175,-3.047952,3.108413,-2.188299,-9.628540,-5.313935,-6.765439,-5.269023,-1.397083,-9.424230,-8.335714,0.168698,7.939627,2.039926,8.361503,6.761385,2.085065,2.644184,1.427379,9.615980,1.376171,7.435004,-6.250061,-5.743929,-0.747898,2.202772,-7.514403,-1.701157,2.677677,-1.332164,-1.012884,9.392888,-8.880251,-4.829734,-9.542106,3.685876,0.099222,7.459121,4.618261,-2.679282,-0.147554,-0.130710,-3.847349,-4.954591,3.181278,-8.800631,-3.990973,2.044177,-3.405174,-2.658710,9.981115,-9.521973,-6.384550,-4.975781,-7.659791,4.315734,-9.211994,1.683625,-4.099874,4.081851,5.038139,0.246616,2.068591,-9.485697,-9.848077,-2.490981,-8.949726,3.829310,-5.473754,-5.607848,-6.178712,4.637842,-2.516977,-6.068864,-8.186923,-5.206250,2.967776,3.798021,-7.318581,1.689435,-8.271785,-8.571012,-8.964453,2.252822,0.402079,0.651711,9.105063,-5.381624,-7.544704,-0.903539,-6.556476,-0.881717,-0.235011,-7.837189,2.472071,0.421833,9.680565,-4.650514,1.839215,-9.965107,-2.155921,8.724764,-1.091524,5.343003,-3.158919,6.044610,-5.833358,-4.323379,7.770528,2.894514,-1.101543,-3.727074,-3.693024,-6.334342,-9.315610,-5.825260,-8.611977,-9.354063,6.492841,5.495712,8.142737,7.203005,-3.177467,-6.688065,-8.410230,-4.101388,3.214438,9.005025,-7.541026,2.556775,-2.401857,4.322066,9.848294,-1.556758,4.016549,-6.703677,-4.674227,-0.428886,-5.318802,7.857740,-9.729770,4.602036,-9.122031,4.135722,-7.669449,-8.849292,-6.488690,-1.863466,2.811731,-8.091111,-2.007180,-9.571602,-3.472983,-5.926567,1.927142,-8.357975,9.436817,7.376232,-7.993613,-5.550053,-8.432915,1.452644,-2.407305,-3.256769,-1.831969,-9.801134,-2.645153,-5.889736,4.780473,6.210421,-2.193001,-8.283713,3.285137,7.630109,-6.592614,5.095972,-2.712241,3.207862,-5.994248,2.669775,9.912665,3.142754,-7.625858,-1.121067,-8.216045,-2.209377,7.954716,6.907915,3.958190,-7.793842,-1.972333,-4.169090,9.144945,-1.803872,4.217015,-6.651959,2.616969,-5.621108,7.804343,-0.032395,-9.436558,-4.835291,3.109612,2.062326,4.140430,0.250182,0.203920,-2.656358,3.528947,-4.280673,-7.678529,5.776020,-4.584945,5.692098,6.446169,-5.391151,3.280472,9.008397,-3.899831,9.314732,7.669843,3.807367,-1.909381,7.645095,-0.760150,-6.599746,-2.007973,7.126924,-5.520628,3.147512,-1.712397,9.648721,-5.540929,-6.790580,9.513790,-1.770909,-3.394073,4.110108,-0.475766,7.538521,-5.940449,9.646465,7.326795,-5.329890,-6.183797,9.869294,0.871712,-9.887113,-6.492127,-4.080333,-6.506204,-4.895687,-6.441011,0.489492,-1.027115,-6.340936,-1.575837,4.091047,-5.477185,5.898278,2.647608,3.524190,-1.235212,2.833322,-6.395168,-0.742036,-0.196908,-6.964739,2.471401,0.324642,-4.975827,-1.472038,-8.550981,-9.462024,4.762722,8.228527,8.994689,5.443000,-8.772790,-7.434519,-6.876092,2.000217,0.748587,-5.189160,4.447813,-1.636729,4.622392,-7.794372,-8.139864,-4.576123,4.939251,7.879311,-0.206900,-2.365359,5.768031,3.582126,1.765825,-0.424336,-1.068596,1.644122,9.611789,6.155767,7.771109,-1.575948,6.167236,3.170616,-1.113789,1.152440,-0.895289,0.520830],[-0.933309,7.470656,3.805646,-2.927185,-1.392613,5.316296,1.342196,-3.830141,-8.724638,-8.184348,7.071771,-6.117321,-6.395592,-0.460247,8.813580,-1.602499,2.496012,-2.431668,-1.907165,-1.876225,-4.827879,-0.821677,6.029334,-6.493638,6.165433,5.412222,5.631029,-4.935854,1.127904,-3.482647,-9.795141,-6.172297,-7.283305,-3.555094,5.303547,-6.660038,-7.599107,1.469816,1.009572,8.182229,-5.087464,-3.897106,8.170843,-6.486210,1.475159,4.584190,9.571022,2.721774,-3.762223,-2.011555,5.699812,-2.243236,3.901798,5.146350,5.447436,6.978215,9.673033,5.280353,-2.518085,6.312630,-3.101728,1.638291,-7.548187,-1.234154,-2.318958,-0.639023,6.196066,3.072792,-3.023185,1.932313,-3.398429,5.859676,-3.983016,-2.268457,-4.889782,8.289202,-3.532731,0.406763,1.707717,-5.164910,-4.988715,4.760948,9.667497,1.761178,9.403811,2.413995,0.762954,0.832265,-0.665376,4.258978,1.837416,7.109898,2.166895,-1.209311,-1.666378,7.323502,4.696011,-9.074691,1.547878,-8.182213,4.888616,-5.920308,7.050667,-5.535440,2.914884,-3.514118,-5.774409,1.882764,-5.471310,9.929868,-4.481463,-2.277988,1.673963,-3.047544,-3.986245,-1.948597,-0.920025,-2.402143,-9.429621,3.541307,-7.948982,4.461126,-8.573868,5.974722,-2.698780,5.522780,7.560689,2.886909,1.839156,1.749136,-3.588240,6.059325,0.408305,-5.471558,-7.244777,0.650603,-5.292291,-1.638377,1.022482,5.881710,-6.720771,-3.827596,-6.994293,-5.937204,8.112075,4.104202,4.840609,0.221050,7.176222,5.335243,6.500382,-9.930190,1.281218,-2.233711,-1.480624,-3.685630,1.304419,-8.070128,-9.332882,6.363470,5.013178,-0.582437,0.028483,4.462242,7.482901,-6.605965,9.317780,-5.567591,2.827194,-0.165299,4.990214,-2.825210,2.606388,-5.251991,-2.281075,-4.553514,0.340547,-4.198880,-7.952369,9.587911,-1.884857,-9.608300,-3.936216,-0.304929,-2.279249,-4.575887,-0.645361,-7.800486,3.408200,5.189797,-6.371847,2.572738,-9.136300,-5.564275,9.709055,3.334828,8.237707,-8.492103,-2.368320,-8.580185,9.650011,-0.504099,0.860779,9.208666,-6.534352,-9.377253,-5.019543,-5.538028,-1.871861,7.774127,-0.970257,5.761624,9.052010,8.448598,7.755693,-3.245911,-1.200342,-4.134674,9.487077,2.424644,-8.028511,-5.459767,5.233605,-1.269461,6.380871,-4.968261,-3.022151,3.692685,4.711751,2.574579,-6.492850,4.276865,1.160096,6.359949,6.503416,-3.851775,-8.972050,2.760530,7.331692,3.070051,2.233775,-8.398252,-1.102654,5.005977,-7.154905,-2.595031,-4.135122,-9.773249,8.542000,-5.668084,-3.068966,-9.477012,8.528813,-2.939733,3.957477,8.860869,0.865676,-3.759935,-1.451146,2.892186,7.009257,6.531646,3.572673,4.639171,8.631093,-0.091376,-6.956397,4.705288,-8.984997,-3.285450,3.302956,-4.875057,3.521725,-0.969861,7.990895,-5.248191,8.818912,-2.347443,8.600842,9.609453,-5.757384,-7.973573,0.053941,-7.246456,-8.073699,0.382126,3.669584,-3.537785,4.478628,-6.713776,5.429714,1.724411,-7.465403,2.809721,2.972652,3.930842,-5.459859,-8.253386,6.108546,2.558210,1.428075,0.085620,1.017613,4.217461,2.804470,9.047615,-6.652987,7.597362,-2.759317,1.426731,-2.427653,6.715229,-6.477785,-4.944014,2.065196,4.128115,-5.055879,8.630290,8.054105,-2.916112,-7.531351,4.933561,-1.224657,6.402404,0.519454,-4.479844,2.971902,0.582511,5.549276,1.472357,3.474131,5.948671,-6.101121,7.755753,3.171081,-5.386044,4.939427,5.180283,-5.201357,8.046609,8.492382,7.915237,8.669334,-7.744406,-3.925850,3.355413,2.349034,-3.989282,3.794674,3.245416,7.218855,-7.411137,9.849006,0.333078,3.015482,2.993862,-8.662994,3.814994,9.161309,7.434311,-2.168103,-6.005735,9.982411,3.596290,-2.038454,-0.775296,-1.349066,8.821444,-7.234225,2.403549,7.178768,-5.685626,-3.550125,9.048801,1.549563,8.051119,-9.526332,0.505593,-4.479055,-0.641122,6.945911,6.247519,-0.228179,6.619653,7.934459,-5.942942,-3.581346,-9.234026,-1.557622,-0.430198,-6.073823,3.669843,8.281023,3.331763,7.865568,9.283877,-3.453181,-0.573630,2.027862,4.326084,9.270372,1.277406,-0.135272,-2.524153,3.880395,-1.336399,-1.732352,-2.845168,1.750409,-9.149853,-0.624056,8.461749,-4.022549,6.920045,-7.708675,-5.696605,-0.049923,1.399997,5.514646,5.145919,-8.185483,0.721354,-8.026389,2.944532,5.106353,-3.183085,9.515556,-3.013970,-3.691776,9.559422,-9.226565,-7.957092,0.034718,0.222962,5.271745,7.292623,-8.984415,-8.073305,6.549424,-5.875465,0.155131,-1.318391,4.343447,-9.604978,-1.427367,-2.031071,8.236797,5.882720,-6.623254,-4.926340,5.813782,4.706878,-2.997614,-7.099522,0.594738,-7.245381,-1.259552,7.278820,0.742021,6.651295,0.986037,-0.244020,-8.266822,1.887496,-0.549290,-5.516588,-1.754040,4.567288,6.873296,-5.014969,2.945297,-6.818648,4.468427,2.087669,1.940219,-1.127750,-7.552574,-7.975237,-9.958878,7.847844,7.897587,-7.232152,1.590328,-1.735127,-1.965259,-8.768374,8.043307,0.404177,-2.930135,0.033888,8.849765,8.643354,-0.650630,-4.320662,4.951334,8.110458,1.407164,-1.333703,5.766818,2.239691,6.758372,8.475097,-1.293928,2.697206,1.226247,8.422968,-5.343254,-1.890526,-7.460610,3.810346,-9.203121,-4.003668,3.579669,9.386780,7.220063,-5.741937,-5.296763,9.651587,-7.955206,4.247126,5.869862,-3.239904,4.518193,-3.945802,5.790090,-4.519188,-1.325712,4.755686,5.862924,-0.668751,5.715924,-6.037070,5.727882,6.246826,-6.372024,4.918637,5.657904,-3.726323,2.896117,-2.271262,-1.851689,-5.706791,3.158575,-1.920997,-2.066908,2.592307,2.346694,3.376371,3.052537,-4.536616,-4.924980,8.787086,1.809591,-2.467770,-8.831764,6.047790,0.625366,2.567903,7.409663,-6.392526,-7.863500,-1.799084,2.379961,-6.149513,-6.198154,-8.947603,1.978239,-0.022556,8.540437,9.690367,4.510818,3.509274,-6.736262,5.757182,-1.626002,-9.232082,0.847170,5.181497,-4.020874,1.527131,-4.950989,6.759971,7.537177,1.873150,0.316145,-9.681427,5.869745,1.835331,-7.466370,-9.010236,-1.492039,4.601922,4.303963,-0.751917,1.121486,-1.988340,-3.627636,6.448922,7.953325,-1.193566,3.378858,5.974192,-2.443132,-6.643481,2.537856,-2.525328,3.491597,0.619302,-3.159278,7.396999,7.296773,8.328014,8.026958,1.207346,2.704096,8.385754,-0.863315,-5.363795,-0.530705,7.768046,1.948801,3.973303,5.712255,8.651762,6.374104,6.883891,-2.441349,-7.308824,2.942306,-8.998826,0.939691,3.112177,-9.731590,0.197508,9.873299,-7.642604,-4.542987,4.570440,-4.792715,3.616019,1.972649,-3.615250,0.413767,-1.412161,-6.498479,-0.963186,-8.477948,9.828756,3.349091,1.148020,3.412850,2.888397,-6.488008,9.689260,6.216764,-5.838256,-4.946344,-1.623364,8.940759,-6.224234,9.911719,8.027753,1.874001,-6.081091,1.330006,0.495015,1.757352,-0.755110,4.349622,-4.457616,-5.116554,-2.882087,8.704269,0.231752,8.144663,-9.286041,-9.609277,-7.145269,-7.860933,-2.520200,2.179200,-9.228537,-7.846385,-2.289507,-7.183572,-5.369901,9.048227,3.086841,1.366370,1.123781,9.961045,7.155378,6.428549,6.133378,-4.860348,-0.570365,6.819490,-8.281557,6.371059,6.878352,3.967883,0.673242,-0.734134,6.364599,0.735442,-6.567089,-5.820157,-8.943523,-8.486291,1.276886,8.047953,-8.979687,-7.827927,-3.206864,5.476654,2.063878,0.823093,4.833443,-5.195488,4.540349,3.092057,-7.850856,6.228667,6.067812,-7.999343,-5.170580,-2.664749,-7.858531,8.930640,7.430350,-6.656688,0.237687,3.700155,-4.206852,8.339722,0.424491,8.700175,-9.388941,-4.727926,-8.558079,-6.233088,-7.969663,1.476938,6.244402,1.326863,5.424072,8.516719,9.725828,1.318871,-3.055320,2.740897,7.914499,8.585270,8.059296,-3.812441,-3.322942,-9.222741,3.035300,7.574331,-7.752266,8.470415,9.310666,-3.246787,8.307213,-3.895884,-1.026310,1.854121,-9.167839,7.230531,-4.651706,-0.303498,-2.036559,9.077980,-0.630005,-2.262536,5.874531,9.767936,-9.176404,0.744268,5.504957,-3.632458,0.940369,-5.429428,-6.434830,7.579311,9.738039,-8.805070,-8.625235,9.177046,-9.532560,5.762914,-9.347185,-0.259823,-8.722304,-2.632495,2.820036,8.356771,3.044428,9.628606,6.902522,-3.618449,-6.886082,-4.826942,7.548064,3.513405,6.593332,3.407957,9.881170,1.163695,-4.994839,-0.096764,-4.245162,-2.314604,0.159354,1.405699,6.547992,5.414480,-4.635621,-6.267680,2.577389,-0.469311,3.993336,-1.864286,8.436432,-2.938427],[-8.373163,-3.210883,4.760304,-3.864771,-4.781335,2.870763,0.809411,1.514215,3.217566,4.258771,9.640332,4.079922,-0.950700,-8.565927,4.411458,6.613817,8.535928,-0.851865,-9.125569,8.771113,0.399064,-9.468393,7.891959,-1.758465,-0.838216,1.325176,9.542764,-1.279330,2.076352,-3.783983,6.819135,-8.470264,7.264779,9.343425,8.251357,-5.769841,-8.529230,0.364427,-4.466000,-5.362591,-1.026740,-7.366653,-2.853454,3.129232,1.920626,2.498842,1.014082,1.327013,-5.334400,-0.133617,0.358824,-3.990836,-3.559875,1.927350,-5.504506,0.372680,-7.020640,-3.051773,-4.428942,-6.612627,7.968661,-9.197057,9.155129,3.630125,0.384845,7.456598,-8.808298,-1.988597,9.881983,4.464588,5.678151,-6.197620,7.790463,-1.107166,-9.432449,8.099710,-2.100824,-2.305608,-3.025711,-5.145183,-1.006010,-9.553462,8.821438,2.848137,3.787898,-8.004922,2.546350,-1.548415,-2.747324,-9.155862,7.493008,-1.127143,1.664248,3.424206,1.518531,3.420544,7.482189,-8.840383,-1.704865,8.917994,9.814428,-2.250144,3.493616,1.647974,-2.454348,-4.273667,9.053465,3.079684,-7.893266,-7.009727,-4.260594,6.218448,-9.630009,3.579162,9.976007,-4.494388,-1.524155,7.355369,6.943112,5.601047,-0.451367,3.800831,7.023165,-2.115815,1.171591,5.725257,9.535702,6.622570,-3.841751,-6.701775,8.907329,-5.628672,-1.794026,9.098434,-3.608130,3.086799,6.594563,9.263586,9.148972,-0.532841,-3.986412,5.883608,-9.175764,7.210239,2.345155,-6.468733,-2.148249,-4.500019,-1.735489,-4.440928,0.145331,1.401544,-8.421979,7.398921,-2.949156,-0.337516,0.264896,-3.857905,-8.654048,-8.233303,-9.007028,4.674468,-4.823867,5.718385,9.089121,4.269417,0.574937,0.888191,6.402268,5.624805,-8.253903,8.008904,2.597034,2.914889,5.028166,4.645579,-3.843117,0.493251,2.918423,3.308299,-2.011529,4.883367,3.227040,-1.323198,6.174514,6.823204,5.136129,7.779672,-2.955150,5.711446,-5.744248,3.859578,1.969411,0.076475,4.956894,4.702398,-9.756103,9.335612,-7.920539,-0.801207,-5.345978,1.889828,-7.659225,-8.144270,-7.458217,9.286387,3.164927,3.252623,1.784407,2.842203,-1.664615,-1.278615,8.767444,-4.665722,6.625396,4.188952,-3.838724,-5.988881,0.013788,-5.054746,-0.619885,-3.088513,-6.675854,-2.463762,7.854562,1.734430,-7.198953,-8.960743,5.475575,4.012949,4.219798,-4.260983,-4.896120,3.780366,-0.213447,3.167168,0.075264,-6.235186,4.021540,7.915661,-9.873309,-3.960439,-9.708335,-1.918332,-3.013212,2.609624,-7.504591,7.444518,-8.448656,-9.314862,-4.155130,2.186273,8.170648,-8.160460,-3.928221,8.467647,-9.739017,8.871916,-1.700112,-9.351929,-2.276444,2.792678,-7.785549,3.256618,5.708160,5.553945,7.777439,0.452433,-5.948782,3.762668,0.730475,1.879547,5.843346,-0.281855,-9.506571,-8.347371,-3.653242,1.350767,-5.663267,9.840291,-7.784739,-4.032912,8.928429,-1.701251,4.881898,-5.618372,6.424657,-8.044684,6.145243,-5.343463,5.757041,-8.344368,-3.955121,-6.129147,-2.152282,-3.355280,-6.091125,-5.936965,-3.862969,6.705090,-3.169212,-5.157218,3.351229,-8.906645,-0.711715,-0.051396,9.273916,9.365097,-8.234784,2.834481,-8.354872,5.398094,-3.838661,-9.503156,0.624492,-9.804311,-1.100801,1.598451,2.142069,-5.482482,-7.816671,4.548667,8.248179,-9.231782,9.519803,-6.554812,1.468194,-3.835567,4.541780,2.999247,3.202381,-4.910214,-1.298827,5.922422,-9.596405,2.363793,6.476794,-2.543955,-7.039300,-1.239206,-4.981538,5.696311,0.166390,9.113636,-8.937707,4.541718,-7.263177,7.730232,0.865825,-0.012881,-2.614230,-7.308626,0.070312,-2.683524,0.165661,7.590954,1.923266,-8.783354,-2.980991,8.390186,-8.099934,-1.621715,2.059984,9.572790,0.295488,-5.239543,-9.213669,0.411339,1.039359,9.477895,-0.083826,0.037955,4.257381,-9.929256,8.540021,-5.747569,-2.649926,6.981124,6.421105,-0.769876,-3.405786,-7.068465,-1.459926,-8.026409,-1.770689,-2.596076,-7.469725,-6.763191,4.143741,-6.922341,4.634945,-0.078009,4.360937,3.549503,2.641183,7.621294,-5.657114,-8.778704,5.852796,-3.801636,-5.152635,2.027387,-4.660077,-9.653865,-4.510520,8.954606,4.752920,-3.742180,1.331232,6.642860,5.752385,-4.980580,3.127210,-9.827877,-2.577426,-0.740603,-6.033015,2.042976,0.691267,-3.077956,-2.115389,0.615491,-6.129147,3.361117,9.846083,-2.739259,5.116057,-6.309511,9.341798,-0.025285,-0.959257,-6.281910,-9.999451,8.828186,9.090246,7.242322,6.806506,5.725584,-8.093031,5.130811,-7.121430,8.205778,6.107048,-8.120898,-3.375930,-7.406146,7.877997,6.690318,-9.496558,0.738221,0.454939,-8.022720,-1.547483,-1.301895,-0.032484,-9.338981,8.035035,-5.109887,-7.225848,1.953430,4.694525,9.294456,-9.515158,-4.139031,4.373161,-4.621620,1.206695,-2.973018,-1.144060,-2.102729,-6.181211,8.827725,-8.689326,-7.288841,-2.626620,-7.810826,9.005676,-1.942528,-9.411708,9.582684,5.091229,-9.009204,-3.786090,-8.526616,2.843788,1.377459,1.156571,3.053134,-8.511846,-8.480037,4.915174,8.834521,-4.175314,-1.036203,-5.379017,0.204571,2.390803,-0.027804,-6.316648,8.363356,-3.980718,4.012628,1.563696,2.954860,9.626379,9.277999,-8.234433,3.587458,-6.732003,-7.555813,4.824073,-1.350720,4.693806,-1.286767,0.640311,-0.087720,-4.638235,-2.650027,-5.295792,-0.398128,1.354258,7.367611,-8.157786,4.397125,-6.298943,3.412001,0.500797,0.921245,6.734280,-7.169131,6.051942,-3.536249,-3.794744,6.696717,-1.831775,-0.804971,7.086331,-8.679365,4.344445,3.399405,3.116257,9.217501,-5.261272,8.892127,6.722688,9.148946,-6.928672,-7.486049,-7.200407,-8.297349,6.611057,-9.346143,-9.925240,-7.905500,-7.282065,5.837383,0.899932,-2.243645,4.635925,4.457463,5.875620,6.404565,-0.511008,8.419864,-9.844949,0.351373,-0.978993,-2.558911,-9.924282,-4.365196,-8.208794,-2.578170,1.823833,-7.429180,5.816707,5.612005,-4.887256,-9.180458,-2.854200,6.033745,4.262751,2.528078,-2.244976,-0.402522,-2.224123,-8.673236,3.662038,-1.792816,6.722849,9.355888,-3.575006,-7.535521,-2.236970,7.907477,-7.581377,2.512847,-4.809122,4.237595,-7.714637,4.822733,1.066601,-6.889032,5.446188,6.198380,7.701215,1.484342,7.704145,-0.416481,-8.212614,-1.023579,-4.337999,9.757296,-2.438481,1.467424,-7.965661,-3.699275,-6.095919,-9.440578,9.305652,1.321270,3.445579,8.074007,-5.808931,-6.536069,7.093574,4.759587,-9.941359,-3.157875,7.759082,9.281771,8.674025,8.673586,-3.724684,5.127086,9.577915,-2.063993,6.926784,1.373071,0.117318,-0.774459,9.168085,-5.607230,-0.145252,-1.272558,5.578605,-1.673847,1.834309,-5.057356,1.573158,-2.940403,-6.481487,6.633110,-9.314356,7.272753,-0.794475,-4.035917,6.569224,7.433465,-2.068847,-7.157441,-9.031560,-3.050334,-2.324521,8.657725,-7.281861,5.652601,4.189873,-9.967686,0.736173,6.392100,4.358325,9.780697,4.860354,5.046298,5.164426,5.611197,-1.055223,1.721140,-3.657165,-8.868897,-0.325635,-5.921345,6.364401,4.514427,-9.943906,-1.914039,7.887156,6.462732,4.987472,-4.112061,-9.313081,-0.762306,9.757191,8.431582,-6.846882,-7.453798,3.309387,-8.334313,0.735422,-8.387109,7.935557,9.770902,-6.862504,2.117244,3.206790,-8.380321,4.694068,-9.662089,8.805683,-2.662287,-4.215610,-2.680337,5.767124,-9.983819,5.216955,3.047606,7.923419,5.289595,7.219968,1.463620,-5.609524,-7.222414,-9.807567,-9.447310,-0.438073,-2.633344,7.351203,6.838830,6.064655,5.143763,-6.833141,1.134907,8.588584,1.468023,4.857735,-0.433030,8.314765,3.569550,6.002721,9.245121,5.481499,-5.141591,-2.850244,3.702893,0.276303,-3.355584,0.855088,-1.308931,-8.824481,6.757285,-0.860623,5.620217,-8.032899,-5.523828,-9.982642,-8.021883,2.018003,-0.428303,-6.464532,3.454407,-5.781047,9.027510,-0.656723,9.245557,9.213188,-0.289967,-0.192534,7.150670,6.344462,-3.114120,7.272717,3.455425,-7.632294,8.941312,6.077753,-4.201415,-3.942586,-1.767135,0.052169,-0.030169,-0.168300,5.108248,-7.697074,-2.109591,-2.385686,-0.648634,3.162276,-2.286463,4.177164,-4.670968,-4.505695,0.333466,-4.066643,0.355413,7.624785,-6.394806,0.207843,-1.180072,1.553751,1.680183,7.163472,2.357119,7.711839,-1.048281,4.148490,2.452823,-6.131119,9.678848,-7.397874,-7.858642,-0.517673,-4.104699,-5.445611,4.042712,6.806771,8.007003,-2.399571,8.515485,-8.317835,2.625314,-4.551592,-5.480027,5.096739,9.271423,-5.552514],[6.102512,-7.486428,-6.806483,-8.406397,-3.206303,-9.047242,-0.609604,5.625233,-4.126065,-6.972618,3.621757,4.960207,8.364835,8.497297,-6.715890,-9.647733,-4.133443,6.437425,-8.802222,7.398145,3.260698,-0.562566,-2.926102,6.877648,-2.337004,-3.830642,-3.929690,3.601639,-4.224559,-5.826489,-7.216147,-9.329703,-5.009283,-3.686098,9.915443,2.002768,0.729144,5.025805,6.207006,4.880423,-1.095127,-6.177455,7.816965,-0.782486,-3.975209,-6.626010,2.373815,-2.997191,9.072946,-5.290915,-2.697518,9.235452,-3.841333,7.316872,-0.434165,0.397103,7.454457,6.556434,3.545149,-8.204215,9.251361,-0.145861,-3.540175,-1.163955,1.346706,-3.521120,-0.966831,-7.855399,-2.126384,5.017550,-0.581583,0.296513,-3.093965,-3.571994,-5.829733,6.741295,5.371883,6.062108,-0.586060,7.188372,-5.059743,5.455458,-1.676453,9.717082,-1.370667,6.008526,6.311634,-6.624108,1.362447,7.913804,2.319730,1.255345,5.751836,-6.356892,-7.215988,5.990481,-5.054943,-3.441574,-3.004870,9.761126,-1.655815,1.666762,-1.364723,1.277422,-0.756673,3.463448,3.919011,8.600973,3.350496,6.387882,6.240830,9.312581,3.196069,-7.908134,7.194724,-4.401385,-3.225480,-2.592826,4.174596,7.693048,-3.145586,-8.826917,9.225104,-2.173648,4.585067,5.289488,2.517476,-2.712032,-1.771395,-8.473177,1.592947,0.227508,1.215514,-6.822056,4.965881,-4.945702,-1.153375,9.444680,-4.283339,8.705263,9.560051,1.847966,9.703528,-4.775455,-7.452235,1.042580,7.027454,-6.729806,-3.320575,-6.263107,-0.307511,-6.516616,5.809680,-5.305358,7.686372,4.829300,-1.852035,5.007197,3.047743,8.767833,3.031364,6.527220,6.742563,3.209549,-1.437566,0.432917,-8.457147,6.669814,-7.922694,-3.464025,0.776111,-6.544414,-6.668512,7.182855,3.525746,2.909442,-7.792360,-1.314417,-2.290094,9.306167,5.918105,3.702292,-3.911326,0.712682,8.648566,9.168373,8.215099,-1.197388,7.473553,1.474980,2.225002,3.830336,0.959222,2.021488,3.811844,-1.277379,-4.195587,9.712925,7.582022,2.532892,-6.750408,8.020672,-4.783279,8.474058,-3.210594,9.360647,9.282938,7.193477,-5.629124,4.836783,3.098281,-3.877708,3.866858,9.398741,-4.893035,3.222299,0.057731,-9.024176,6.347143,1.792342,0.628658,8.088219,-4.774288,2.474960,4.720979,-3.552245,1.693447,-6.767382,-7.171160,9.968880,-6.909463,4.691245,8.321490,-7.939106,8.052624,-1.472705,-6.873894,-8.048620,-0.810818,3.566683,-9.325049,5.739414,-7.405464,-3.959766,1.307064,1.270674,8.299202,3.321385,-5.880878,9.711750,4.102649,-4.450484,2.869614,-1.254872,4.484383,4.859875,-2.356516,7.028641,9.494152,8.764722,8.211135,-2.689986,-4.552090,1.343332,4.623837,-6.341875,4.207346,-3.767782,7.846719,-8.740328,-0.101676,-1.599530,-4.208388,5.197084,-3.068649,-9.764359,0.691117,-4.207456,-6.875710,5.865452,-5.063095,1.247602,-1.421004,-9.068020,-7.297626,-9.038110,-8.284568,4.768670,-0.104036,-1.764788,-4.436312,-4.737079,-7.330022,4.738376,8.907320,-7.535542,-0.399060,5.908654,-1.230845,3.659561,-4.629486,2.711441,-6.981608,-2.980883,-7.587940,2.360475,4.621946,-3.858383,-4.305815,6.345004,-1.254574,7.587307,8.205348,-1.707081,-3.405128,-5.089221,0.343636,-6.446708,5.502103,4.618452,6.275949,-8.715955,-6.424952,-1.735331,-1.766652,-4.898067,-4.554305,0.082794,-0.215130,1.443016,7.782109,-8.678160,5.806156,5.682088,8.757751,-8.615672,7.037596,5.663173,-3.340099,0.694293,6.256470,4.206050,0.959598,9.069644,-6.553778,6.603687,2.583431,6.729747,-5.668025,0.704799,4.902486,-9.015758,-7.034813,-9.838675,-5.216207,8.657586,-9.619148,3.507897,8.735255,3.266982,4.658907,-3.988475,-1.256281,4.380014,-5.850165,-4.707039,9.159432,-8.211019,6.543472,-3.604961,-8.458775,7.590850,-1.378203,2.377491,-8.950822,-0.152949,2.700446,-6.207587,-2.094741,-1.660270,-2.338217,-7.363148,1.752813,2.619532,3.136139,-1.945520,4.736024,-0.342217,-5.477467,0.968979,6.750998,-6.099521,-4.431873,-1.081397,2.169706,0.367016,-9.066810,6.263844,8.209371,-6.826226,-8.178010,-4.911569,-8.168907,9.662152,-2.377219,1.523327,-6.226985,-8.581342,-4.649129,4.116770,2.375326,2.938331,-5.560732,-9.721385,4.026498,6.263253,8.997237,9.654419,-7.359558,7.480112,-0.338926,-4.567341,-6.408292,7.173463,-9.350324,-5.952134,-5.011915,0.133510,-7.956046,-7.608576,-5.290728,2.706134,4.950132,2.512482,-7.293011,8.922550,-0.277794,1.044861,-7.697496,8.641750,-0.343089,8.963475,-8.392702,0.767497,-6.048460,-4.339905,0.586466,-0.507774,4.759022,7.184520,-4.107278,-2.716283,-0.860469,-5.194638,-9.160269,6.688060,7.399179,9.690547,6.264437,0.930224,-3.737165,-6.929245,3.510600,6.104636,7.584707,-4.847054,2.562311,-4.249232,4.117383,-0.473373,-9.840717,-2.458352,-7.990923,7.072387,-8.455500,2.252637,8.015217,0.536123,4.348929,4.329444,3.980626,-9.611756,-6.765637,-0.035487,9.927768,1.683222,8.032341,-3.241669,-9.355039,8.437046,-7.383653,7.967320,4.404098,-7.282657,2.528702,5.275586,-0.457972,0.658324,-3.547488,-5.453391,5.860438,1.873577,7.887446,-8.819239,-1.506307,-0.653702,9.233103,-6.430040,-5.349802,6.726322,-6.060978,-4.106249,-3.456035,4.511090,-9.060659,0.604464,8.538847,-3.645693,-0.176508,-9.040321,-1.970061,9.321088,5.164733,-3.200374,-3.136850,1.775381,-3.917525,8.143407,-8.066422,5.225557,-8.012675,-9.306885,-3.716650,-3.100253,4.278236,3.640976,-3.460191,2.268980,-6.544631,7.915555,0.825952,3.975629,5.469486,4.979974,7.906226,-8.865510,0.672850,8.057370,0.018247,-1.982499,2.911003,-3.635832,-5.476293,8.517196,-4.006060,6.432823,9.098297,8.982404,-9.031574,-7.872565,-6.285693,4.129223,3.678856,7.210240,5.990068,-6.568165,5.459331,-6.551545,-0.084010,-6.162971,-2.414846,8.709334,-9.631854,-7.159513,7.287726,-6.349955,6.159801,8.622747,-0.923316,5.800589,-7.504868,-2.431232,6.231473,3.262217,-4.789521,-7.992209,7.635951,5.540884,-3.114760,-6.703739,-1.067956,6.814953,3.916280,2.492591,7.641589,5.562465,-9.464507,4.373846,-4.623018,3.334697,-5.190224,6.899944,5.353966,5.130695,2.112838,9.102315,-2.339761,3.136976,5.050699,-0.457892,-7.973700,-3.530847,0.602294,-1.014856,-1.669455,1.866044,5.956919,3.597349,3.228097,-6.108904,-6.265645,-5.839968,8.808095,-3.225154,-8.328053,8.410666,-9.764650,3.171007,-0.810169,7.917712,-0.164311,2.595537,-7.198689,-9.350550,-4.230716,-4.403504,6.173164,3.262044,-9.166309,6.691354,-2.073386,5.698614,5.694751,2.070842,-3.542065,-0.821709,0.165182,-0.666964,-0.678150,1.297053,-8.328930,-6.429408,-7.322853,-1.804822,2.672691,-0.222097,-2.355033,3.585980,-9.335978,9.662279,3.214866,7.745251,-2.019929,-9.420892,8.992602,9.352478,1.728636,6.186404,9.867609,7.915041,1.372910,3.225789,4.539241,7.040675,8.023563,5.240540,3.078259,5.827470,-1.960444,-5.825138,4.194669,1.221411,5.955919,-9.841046,-6.653954,-9.053066,8.716673,-6.164101,-0.424044,5.005423,-0.785798,-2.603323,2.320288,3.117339,-7.743464,3.063756,9.106677,-8.937728,6.659844,-3.002134,-9.521336,-4.584693,-6.172506,7.187146,-0.341552,-9.809960,7.798681,-9.014973,-3.313399,-4.379086,-9.778186,-7.306893,6.989322,-2.519488,9.691198,-8.238245,8.956791,-1.552723,2.667419,-9.723265,-2.665669,8.536410,-8.796644,-0.088871,0.401796,3.133179,1.240922,-6.349268,-1.468295,8.167447,8.508698,-0.156702,-8.123314,-9.439239,-6.546137,-9.266381,4.355814,-1.462548,4.909472,-5.012477,4.601376,-8.913788,5.594339,6.114511,-8.718966,8.443576,2.683681,-1.059462,-0.101131,0.438718,-9.134880,8.106355,7.221526,4.818579,2.165775,-9.181400,6.341638,7.991576,0.698782,-3.194171,3.837579,8.956392,8.020144,6.711928,-1.499818,-5.804584,-0.988679,-1.700728,8.375117,-0.403376,1.661467,-7.355070,-1.962231,2.871897,-7.628373,8.445394,3.205624,-5.698514,-7.431495,5.531399,3.944749,8.063102,1.462682,4.165720,5.698965,4.772105,-9.315602,0.209072,6.963254,-8.516170,5.218534,-7.822297,-5.980086,8.165317,-9.157666,7.116856,0.200881,9.265252,-7.192902,8.285905,-2.530604,-2.644846,-2.681287,5.931130,-2.115356,-1.360776,8.622701,0.243266,8.167272,1.150315,1.323200,5.878822,0.428618,9.653967,-4.510112,-1.777457,-7.536091,1.154286,-4.257580,-4.564882,6.294511,-6.012933,0.117698,-4.862483,4.939160],[-4.289318,8.648239,8.443675,-7.853122,-9.194743,2.038491,-9.573813,-7.350754,6.497183,-4.632009,3.915956,-0.401965,2.260020,8.015412,-2.762802,3.254444,1.869716,9.791031,9.756171,-1.578302,-9.138176,-1.381139,4.009518,-5.885003,-8.153994,-5.815503,-5.408688,5.896230,2.671903,-8.809872,2.698853,-9.152545,-9.930587,7.106717,-6.642513,0.126729,-6.673319,2.744461,-7.948244,-0.113245,-0.120855,2.206967,4.038058,-9.477642,6.674436,-6.828153,-5.913715,-6.144432,-6.823906,0.510610,6.561230,7.531598,-9.614807,2.115102,5.314831,8.763298,-9.340524,-9.929917,-1.737413,-8.971777,8.454523,-5.503061,-9.881051,-7.052611,2.212875,9.792555,2.215813,-7.164172,9.562136,-5.982624,9.668654,-3.837710,-5.589363,8.190497,-7.351897,0.630262,-0.062603,5.959738,-2.500968,-5.825834,3.394269,-0.089677,-6.866931,0.756993,-1.625621,-8.009124,5.460118,9.001634,-5.079506,-5.583019,7.233679,-0.996456,-8.017355,-3.320912,-9.816094,-3.460546,-8.076973,-7.511327,2.877686,-9.562866,5.495734,6.363537,6.315178,1.258745,9.533596,-1.035919,9.116713,-8.745312,5.704499,-9.512939,8.387325,9.312753,9.940820,1.342426,9.237135,-2.252340,-5.938161,-1.989199,-2.854425,6.655707,5.784555,-7.221497,3.923397,-4.370671,7.029710,-7.663586,2.534461,-7.411411,5.849346,3.381602,1.384614,8.768659,9.680645,-8.365634,6.270104,7.535867,6.325132,9.764827,7.137521,7.074540,-4.829661,3.147576,-3.392237,-6.714944,6.762988,-5.397306,4.649831,5.997885,3.601635,6.215239,2.780591,-7.958019,-0.178321,6.963586,8.268239,7.726999,-1.342504,-3.602851,-5.466252,-1.747297,-7.027848,4.808578,9.769350,5.670830,-6.978472,1.503660,2.399047,-5.227427,-5.524948,7.945510,7.829744,5.885510,-9.047476,-3.715862,6.144873,-8.360299,5.029647,0.509108,-2.393712,-9.210478,0.178765,3.499602,9.412815,8.688949,4.252788,1.438710,7.191538,3.519583,-2.455880,-7.708421,-6.228262,-0.725011,-7.253437,-1.694789,-9.930886,6.430174,4.000759,-1.453926,0.440788,-5.073892,0.584473,7.815626,-0.620901,-6.420615,-4.341027,-4.358652,6.269517,-6.067539,6.740819,4.877283,7.260035,1.999404,9.963148,0.982011,3.563867,2.030232,-8.587087,3.382892,6.279356,6.819845,3.775934,4.593916,-0.034120,-7.624888,-8.613283,6.863770,7.409856,-7.504081,0.106322,4.642142,5.394052,7.783396,3.414535,2.906598,-8.363244,-8.490023,-1.581666,-3.629556,5.007354,-9.703786,-5.099875,-6.288638,0.708608,-9.873578,-4.952362,4.220148,0.497309,4.753407,-3.529541,0.805321,-1.276183,-2.011813,0.549945,0.806230,5.339940,3.790181,-1.650570,6.979901,-0.548038,-6.811242,6.490016,4.731385,-9.255436,3.568638,1.942498,2.732886,-2.577009,-5.230588,-6.202398,0.809233,-2.980265,-5.396377,-4.551527,-7.202373,6.261938,0.379005,-6.442126,5.266140,-2.713322,6.858095,-9.472357,5.769985,-6.717479,-2.562775,2.831218,2.920463,-7.853150,-3.144390,8.167414,-8.947306,5.484355,-8.782625,-6.354502,-0.961859,-7.722854,-0.456350,-4.423559,-4.516088,9.242371,-6.303341,-9.597143,-2.179165,3.246249,7.336376,1.413934,1.765097,0.608411,7.757337,-1.804555,-3.281132,6.424327,2.340003,-9.923384,7.338544,-8.392734,3.102053,3.962197,-1.349480,-5.584577,5.374720,8.156298,4.167899,-5.768069,-9.479299,-5.484051,-8.783801,8.314066,-0.968397,1.105809,0.031053,8.885258,-5.593222,1.424938,6.892869,-4.634284,7.770200,4.745717,-4.271260,5.414600,-5.650666,-3.678854,-7.123528,-9.010634,4.558351,-5.855611,-7.330698,6.283118,-4.882427,9.825215,5.659697,-2.603722,6.646520,4.544719,-5.004075,-4.104762,-8.134407,1.409253,-3.936612,0.438990,1.257575,-4.960477,9.582703,-2.963309,-1.346739,6.964119,9.124656,8.777643,-8.215390,-0.203401,3.057058,3.809676,4.621737,-8.206788,4.479328,-9.012205,7.866373,-0.687813,-8.261575,-5.763704,-0.996141,-3.644661,-8.785721,-6.969799,-5.189411,8.563904,7.120920,-0.916712,7.693583,-8.366899,-5.718957,8.979964,3.787904,6.238525,-9.218674,9.381816,9.698796,-1.012219,0.080323,-7.404625,1.415391,9.908278,1.044545,-3.958859,6.496728,1.292398,8.039547,3.437588,-8.887108,-4.943132,8.841877,9.717998,-4.265245,-1.479879,-3.187876,0.346438,-1.202881,-1.192587,-2.878145,-5.500928,7.803702,-6.687873,-4.365014,9.122496,-3.069359,2.730840,9.331881,-6.240198,-4.050907,2.455499,-2.016567,-9.288545,-0.343859,-8.725203,4.247461,-1.040736,-0.940326,5.090574,-4.723465,5.958654,7.179434,-7.242685,5.536495,-1.521946,5.882952,-2.277059,-4.304691,-7.777809,7.983589,-5.391987,8.290554,6.308799,7.793260,-7.716394,0.994293,-9.160927,-2.584124,-4.217218,0.835708,2.912192,-3.819200,-2.100796,9.558809,5.546714,4.510955,4.423691,-0.185984,-4.679076,-0.238884,-2.012567,-4.391097,-7.335112,5.050571,-6.134016,0.981189,-7.938570,5.326771,-4.833694,8.252760,6.351236,7.096138,-5.067924,8.840931,4.393129,5.951218,-8.832434,-0.227653,6.538255,6.527157,8.316939,4.271611,-6.359215,-7.854089,5.430707,0.672916,9.178754,-1.711905,-2.669504,-4.360545,7.929730,3.927149,-2.408606,-8.488264,-7.327281,4.198378,-6.344372,8.152187,-7.548062,6.445627,8.476437,-4.299876,-6.028598,-0.703441,7.368254,-4.256306,9.514071,-7.592703,-5.429314,9.743541,-5.562279,-0.125138,6.456106,4.182489,7.581775,-8.754583,3.872605,9.923754,1.005458,5.503834,1.458016,7.502506,8.482384,-7.617167,-5.251987,-6.032276,-5.198713,4.055863,-0.090177,7.178861,3.837297,7.142283,0.622587,-3.985218,-7.875678,8.696999,-8.872610,-9.126261,-6.597721,3.197901,-0.907799,0.477033,-8.510247,7.128331,4.428260,-4.325950,-4.851527,-2.970578,3.816569,-7.142728,-7.070209,0.851243,-0.951773,-8.727149,-7.754624,4.999099,-7.900808,2.753221,8.740088,9.635893,-9.076082,3.807854,8.253014,-6.975871,4.313964,7.667518,-9.148269,-8.609391,-7.988274,8.685888,-8.532395,-1.123123,2.599769,6.569231,-3.962685,1.846835,-7.135072,4.217889,-5.366145,-1.697718,-6.500362,5.857725,-5.816370,3.515251,4.721437,8.798098,3.107787,-2.869547,-3.471392,8.931744,-9.719039,6.342820,0.777266,2.007785,-0.740032,5.756680,7.432929,6.718836,-4.761509,-8.857171,8.077945,0.295687,2.825755,3.080045,2.912528,-1.934654,8.276021,7.651196,-5.928735,1.584725,-0.385708,9.646836,6.650398,-8.124789,0.741583,4.447647,-4.394757,8.444132,-9.726733,3.319659,6.994362,-4.506020,6.920064,-8.138476,-7.632553,-9.240181,-3.806335,-0.461464,-4.287204,-3.783727,4.649762,-3.638737,-0.343904,-3.198080,-5.143695,1.700811,9.264558,2.447755,2.174735,1.131932,9.839536,-3.957646,6.020924,8.056823,8.139641,-0.414712,-6.806857,6.153800,-6.970584,9.108678,4.487312,1.097154,-9.730924,-8.956526,-1.902570,7.341764,4.684271,7.447248,-2.953676,1.296221,-6.590681,4.053889,-8.378613,-9.477061,-6.196647,-2.733422,-1.900845,-2.673499,-7.802088,-7.764339,-4.622991,-2.039386,7.175041,0.025904,-2.468725,-7.508970,-6.968064,7.195215,-5.527214,6.078116,-0.507197,-5.944074,4.083966,8.112980,4.592509,-8.777693,-0.566145,-0.748072,9.753671,8.200469,-6.605149,-3.923960,1.608530,4.648788,1.010188,-8.499612,-1.158763,-9.189250,-9.309230,1.035639,4.121271,5.838878,-0.854833,-4.273496,9.620466,-9.859776,1.982544,-6.638461,-4.555054,-1.656743,6.826418,4.751772,7.620831,9.942465,-1.405518,-9.443211,5.398464,1.948306,4.568645,6.354543,2.507545,-9.864983,-5.380081,-0.272614,-5.925628,2.630752,7.484539,-0.646863,-5.547927,-7.140804,-9.700094,4.200628,1.457648,-7.902392,-1.334037,2.375292,4.532397,-9.329399,2.930495,-0.827221,2.968931,6.782333,0.620271,3.436142,8.785580,-4.483244,-3.110805,4.965665,-7.698710,-6.591367,6.040882,-8.189672,2.152832,8.163731,4.994511,9.478489,3.701371,-8.997868,-6.349563,-0.018177,3.939866,6.172505,-6.096082,8.410357,-9.099350,6.777927,-6.571869,-4.621311,-4.154204,-6.826832,-3.295042,-4.195201,-9.763555,-4.918675,4.290202,-6.984014,7.722736,-0.576868,6.611676,-5.550337,-7.916754,9.910379,3.927912,-1.086347,0.320416,-1.828045,-7.562823,5.763392,8.657805,8.767071,5.196437,3.160909,-5.409131,-6.770877,-2.586329,5.442042,1.271108,5.009409,9.742336,-6.808949,-3.101726,-9.024627,-4.590791,8.307078,5.083247,-3.646679,-0.149109,1.721596,8.845823,-5.071950,-0.602933,-3.045717,8.918836,-0.070380,-2.665137,2.962778,5.485411],[7.226212,-9.407251,5.146390,-4.860881,-9.766502,-9.353706,7.459536,1.635183,3.199552,2.428654,4.922806,4.886783,7.763841,9.899444,-9.817202,-9.721791,-6.754731,-6.687850,-5.048173,3.784056,4.636098,-0.005661,5.186463,0.536034,9.952940,3.007361,0.090329,7.845837,-5.164981,9.946873,2.455518,-6.803156,-4.460304,-9.555826,9.687128,7.270304,1.947012,6.010351,-9.342844,9.915294,-9.297765,-4.401016,4.271513,-3.642720,-3.119897,-4.975207,-7.713810,4.464885,0.185924,1.867201,3.446835,3.036171,3.682214,-3.854911,7.549935,0.898159,-6.710174,5.666354,1.508994,0.121148,-1.083968,-6.953176,-4.739874,9.745877,6.068391,1.311291,-8.367049,2.813957,9.831843,4.331163,6.242578,-2.203753,-6.746367,9.852983,-3.129584,-7.779903,-5.065003,8.247797,-5.406481,-9.178871,5.192234,5.651550,-1.207023,7.348553,-7.188322,2.461129,-5.027408,3.153707,9.140504,-9.371786,3.123018,-7.087357,5.329366,-3.511864,8.263768,8.396989,-0.182683,-8.540621,7.073170,5.503503,-7.037371,4.666163,-4.207065,4.082111,1.477196,2.110664,-2.815003,-2.232959,2.159677,-1.755455,5.850264,-0.613772,-1.482875,5.189429,-6.917737,1.952160,6.321219,0.013293,4.838062,4.563953,2.474366,9.270447,2.093498,7.948644,-2.844042,3.948885,-9.513407,-1.014016,-3.352289,-2.772029,-8.418725,5.568848,4.136632,7.400757,2.144718,1.874223,-3.543861,8.057506,7.385379,-8.204380,-1.215944,6.893498,0.549685,5.512946,9.793109,4.111550,6.400146,5.237500,9.490612,0.339541,-9.537666,9.063332,2.166770,-8.445853,-7.047777,-8.564974,-4.729486,2.380794,5.234730,2.784017,-7.605630,-7.167368,9.354046,-5.654844,3.387863,8.169717,7.725639,-8.195463,9.980629,0.921100,2.083044,-8.094880,8.457495,-3.599246,-4.136286,-6.602222,-2.970472,-5.934249,-3.791848,-8.473709,-3.185234,5.075336,6.784650,-8.544261,-0.015697,-7.575648,-7.801986,4.804311,-5.694364,-6.671534,0.139825,4.059117,-4.603834,4.216452,0.152106,-2.434744,-6.653762,9.454198,1.656546,-8.692210,2.876901,8.285073,-7.841851,8.702089,-4.319996,0.475330,-8.968439,3.330524,2.828023,-7.158524,2.867917,-9.068597,-6.195751,7.498910,-0.985899,-2.332793,-4.165290,1.290119,-6.193185,0.529827,-6.619691,0.100895,2.713581,3.633065,7.617673,3.617111,-3.098015,-2.020673,0.349948,-4.268671,-9.489009,1.483019,1.469212,7.594349,-5.330291,-9.177492,2.477325,6.007412,2.008422,0.804439,-1.883798,4.974754,6.689179,-7.436793,1.194964,-2.390856,2.940220,-6.018022,-2.584430,-2.831273,-3.141124,3.530910,-8.833850,-8.121504,-3.827874,6.899076,6.862158,2.916047,-3.998494,3.075754,4.830387,7.306639,-2.796892,9.952037,9.425433,3.684918,-7.936591,-1.406582,8.724076,-7.464332,-5.420595,0.467657,-1.053209,-5.918496,-9.665258,-3.838905,3.050256,-6.663945,8.412809,-0.061229,7.380535,-8.618795,6.807071,0.839302,-8.505336,-7.111150,1.667402,-3.814412,-0.090269,-1.553208,-7.173808,-4.924584,0.029829,0.336089,-5.472297,8.809128,5.267519,-5.621174,-9.433140,-9.880495,4.770614,-7.852304,-6.012511,7.749396,4.343840,3.954547,-5.655865,-2.432814,-7.540817,6.856359,7.439274,-8.399433,-3.321951,7.125793,-2.796790,7.357677,-1.510034,-4.652226,-6.858050,-0.449853,-5.570977,-4.787279,5.293762,-2.916253,-5.627598,7.280920,-8.434979,3.771947,-0.159281,-1.130629,-6.549519,-4.276466,4.986041,5.139319,-8.136740,1.760201,0.786714,-7.705775,-3.934083,-1.192032,-0.838814,6.650526,1.735051,8.799406,9.181632,4.161278,-6.026815,1.371850,-7.573676,0.415120,-0.096960,1.303955,-7.013747,-3.976632,-1.576433,-3.854067,-0.347285,-2.556954,-0.589777,4.251812,6.907777,8.029022,2.650403,6.359694,6.318563,-5.030890,8.321577,1.685325,4.889910,0.696960,-1.266076,-4.610741,3.528350,-3.805132,7.656538,3.833821,-6.508325,-4.280754,5.486445,-8.862177,-9.193510,-7.285917,-3.761927,-5.306582,-6.186425,-2.225266,9.924073,9.914372,4.651313,-7.111161,-7.769488,2.618272,-5.342977,-0.302474,7.860735,-6.457889,7.573781,3.669045,-9.734476,-9.719033,4.784381,1.870465,5.283318,2.191049,-0.907736,0.956378,-1.627508,-6.272379,-6.633137,-1.080562,1.128417,-4.290416,-5.124529,-0.423036,7.306046,6.574266,2.984984,5.749071,4.009964,4.228265,-0.698946,-6.832215,8.636641,5.580149,8.810648,5.147611,-8.083927,-5.961936,-6.128662,5.812998,6.355196,-7.606446,9.322637,6.096703,0.989751,-1.384542,-6.565077,-4.652562,1.820150,9.054836,1.542999,2.226335,-7.309826,-2.763550,3.692006,-6.750144,-9.699121,9.509590,-8.572628,2.195586,-6.598087,4.795752,-1.046744,-2.688349,4.936273,2.543819,8.525134,-1.801926,-0.778351,-4.430523,-5.397673,-1.822631,2.131228,-6.488439,-8.175048,9.092518,-9.907639,8.284618,-8.049563,-7.567905,-4.613850,0.722496,9.618734,0.314930,-6.024463,8.174571,9.498340,-4.965730,1.926903,-5.812407,-2.875117,-0.631992,1.296543,3.081422,-3.664685,8.996721,6.056918,-1.688664,6.291134,-2.389744,9.282521,-4.576663,5.537721,7.213671,-4.298678,2.929736,-0.254620,3.131636,6.722709,5.133404,-6.684674,-1.952385,2.839838,-1.158673,2.562075,7.033516,-1.564695,1.614952,-7.629995,6.246463,-4.412643,1.379285,-9.457724,-3.158475,7.061132,9.178580,7.518567,-6.965191,-3.859735,6.152613,5.861516,-8.716040,-3.948327,-7.608887,9.515555,3.749458,-6.592589,-0.886402,6.873923,-6.279676,-8.079001,8.179342,-5.195274,4.258143,-6.345512,-1.242776,0.716931,-1.323010,-4.908422,-6.230327,-6.546420,7.761997,-8.089363,9.098725,1.575986,-2.384975,-8.146891,0.650569,2.168296,3.625649,4.234003,-5.522142,9.701604,-7.263243,5.553432,6.382620,6.003688,-7.482203,-5.016181,1.841138,5.769219,5.278286,0.500506,-8.773887,2.702518,7.484516,3.366590,9.282619,-7.177315,-6.322016,-1.821952,8.475631,1.228702,1.006297,3.011651,5.622719,4.153576,-3.656984,9.212836,0.471537,3.853670,5.175075,-2.210846,9.074904,-1.282730,-5.112736,2.802939,-0.288592,2.096151,-2.472397,4.592533,-5.574034,-6.813529,6.865482,1.527312,7.355628,4.907366,-5.174037,9.809141,-3.948054,5.731571,1.291175,-2.570627,4.045915,7.988448,6.921349,1.697801,0.065871,-0.698926,9.949347,-8.453219,-5.580266,4.177083,5.074774,-6.220211,8.185916,5.286633,-6.956110,-8.283745,2.868999,5.177634,-6.488743,-9.712096,7.969629,2.795994,6.931159,0.607860,6.756413,-9.100109,1.517286,5.577990,-9.033659,5.574360,-1.153494,9.268217,-7.467425,-0.477065,8.828379,-9.132604,-1.530343,-8.293995,0.205802,5.108268,-5.603142,-1.847653,1.014533,-0.758917,-5.219741,-3.183164,-2.393806,-7.012193,8.215315,7.335990,-7.809275,1.491056,4.576030,-1.088241,6.603354,-1.577420,1.522534,7.535247,-6.949820,-4.263604,-7.192353,3.228057,-9.734369,1.709840,5.956486,5.905712,-4.549617,-8.341152,-6.398774,4.683119,-1.355196,7.856440,-4.480848,-4.623781,1.463774,3.837335,-2.020294,-3.447885,-9.653046,-5.992492,-7.911535,0.354117,-6.948300,4.385222,-2.063269,-6.860158,-3.691042,-0.251817,-3.789825,7.441244,-1.818645,9.507004,2.761186,7.739105,9.212426,8.030802,4.305577,5.684505,-5.242372,-0.643689,9.602397,-2.220100,7.502231,-4.281274,7.755370,1.754136,-2.013368,-3.784349,-4.156830,1.163281,8.744237,4.398197,-2.691563,-6.079626,6.094794,2.975756,1.806949,-5.240125,7.193755,9.630410,-9.261407,-3.950291,0.516238,6.131954,-1.915380,-7.717646,3.210594,4.436345,-8.026238,6.467023,-4.893545,-5.939290,-8.189760,-8.509816,9.543732,-6.667566,-9.779554,-5.393218,-5.485079,4.518451,-9.370098,-1.626156,-0.716715,7.710188,-4.875984,-2.756649,-8.326593,-6.170717,-2.127533,-8.497266,-4.890384,5.407527,1.937998,9.083199,2.254877,-4.352153,-0.050705,-4.508975,-7.992094,1.038234,-0.601679,-3.234014,-4.300026,3.323324,0.768275,-1.201829,-8.685532,7.150351,7.832401,6.666241,7.574698,-6.268051,8.102349,-1.292125,4.309740,-1.173281,-6.229628,-4.198103,1.086324,2.464537,1.831296,9.502595,9.346098,2.666087,6.253111,-4.194420,-0.414372,-5.691709,2.179394,-0.860807,-0.682733,-0.821852,9.978836,3.017599,-6.427270,7.420011,-9.639779,6.272815,5.312952,-3.575910,-7.201246,-1.252058,0.847726,-9.877203,7.416305,4.473755,6.809437,-4.656468,-9.372096,6.732166,-9.572176,-4.459796,0.623453,3.014303,-0.071671,0.659132,-8.014516,-3.432111,-9.547004,-9.857787,5.593618,5.996437]], dtype = "float32")#candidate|5502|(12, 825)|const|float32
bop_5503 = relay.logical_and(var_5497.astype('bool'), const_5502.astype('bool')) # shape=(12, 825)
output = relay.Tuple([bop_5476,call_5494,const_5495,var_5496,bop_5503,])
output2 = relay.Tuple([bop_5479,call_5498,const_5495,var_5496,bop_5503,])
func_5509 = relay.Function([var_5475,var_5496,var_5497,], output)
mod['func_5509'] = func_5509
mod = relay.transform.InferType()(mod)
var_5510 = relay.var("var_5510", dtype = "float64", shape = (16, 112))#candidate|5510|(16, 112)|var|float64
var_5511 = relay.var("var_5511", dtype = "uint8", shape = (390,))#candidate|5511|(390,)|var|uint8
var_5512 = relay.var("var_5512", dtype = "float32", shape = (1, 825))#candidate|5512|(1, 825)|var|float32
output = func_5509(var_5510,var_5511,var_5512,)
func_5513 = relay.Function([var_5510,var_5511,var_5512,], output)
mutated_mod['func_5513'] = func_5513
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3132_call = mod.get_global_var('func_3132')
func_3133_call = mutated_mod.get_global_var('func_3133')
call_5521 = func_3132_call()
call_5522 = func_3132_call()
var_5541 = relay.var("var_5541", dtype = "float64", shape = (16, 112))#candidate|5541|(16, 112)|var|float64
bop_5542 = relay.multiply(call_5521.astype('uint16'), relay.reshape(var_5541.astype('uint16'), relay.shape_of(call_5521))) # shape=(16, 112)
bop_5545 = relay.multiply(call_5522.astype('uint16'), relay.reshape(var_5541.astype('uint16'), relay.shape_of(call_5522))) # shape=(16, 112)
func_114_call = mod.get_global_var('func_114')
func_118_call = mutated_mod.get_global_var('func_118')
var_5548 = relay.var("var_5548", dtype = "float32", shape = (39,))#candidate|5548|(39,)|var|float32
const_5549 = relay.const([-3.572951,-3.705774,-8.688835,-1.214168,-6.694265,2.441275,1.000100,8.226958,3.339350,-7.396129,2.882373,1.379038,8.568815,-6.275222,-4.553115,4.128882,-3.949183,9.209566,-4.149943,6.829790,-7.631546,9.615698,7.448619,4.606645,-1.140625,8.241380,8.360906,-9.253073,7.824162,1.362038,-8.875566,-7.429605,-5.280033,8.923411,1.936703,7.124759,1.607585,-8.811995,8.667248,-3.456553,1.738243,-2.376145,-6.155502,-1.901396,8.345646,4.922250,-7.433057,-6.858592,6.566155,3.155629,-5.604466,-1.165375,0.432746,-8.733693,8.276584,7.630022,-7.503642,6.220581,-5.381079,-5.797353,0.817367,6.037238,-9.308004,-9.980339,-2.382457,-5.341688,-7.417415,-4.214630,6.712872,1.682009,8.167057,-3.651531,-0.096699,-6.559416,4.871902,-4.057700,3.976156,-3.805465,4.350557,7.570021,-9.742095,-1.768558,2.769850,-7.810601,-8.644515,5.721077,-7.643111,2.757894,4.357244,4.458175,8.830195,7.554233,-9.468043,-7.114816,-4.364360,2.251031,0.701133,4.568618,-8.926412,-9.661268,6.030158,0.450402,7.596024,-5.272194,-3.346076,2.934243,2.547460,-3.884269,-1.464730,1.037201,0.377739,3.852504,8.605803,4.186013,-6.562240,-2.081679,3.599789,-4.228518,-1.547797,4.069361,-2.698622,-7.262283,6.391818,4.208667,9.498765,-4.278144,4.966818,-5.826225,-9.347169,4.823093,1.363317,5.824691,8.173894,7.261416,-7.498571,-6.723593,8.090824,1.131820,-7.698863,-0.671988,8.791516,-2.663995,-3.866786,7.999223,-1.310106,5.762852,-2.604323,-5.888486,-0.863769,-2.623752,-0.745981,-1.519495,5.735715,-4.186304,-7.242636,-8.428854,4.479925,7.826103,3.693086,-7.839346,8.318150,3.512881,-0.842812,0.661444,0.366349,-1.800323,-9.258656,1.883199,-8.346316,3.524998,-9.394221,-6.783349,-4.267058,1.456659,3.921743,9.098351,1.961978,-6.235177,-1.484400,7.362106,2.465500,8.514221,-9.850301,-7.431262,-5.815577,2.996475,4.734348,-9.230868,6.142115,5.477253,-9.594434,6.808022,2.275497,7.230381,6.637308,1.319287,-3.210723,7.824526,9.218537,0.026963,8.791643,-0.676532,3.957585,2.561741,-3.830379,4.534623,8.213800,-1.156717,-9.334934,8.330960,-6.318471,0.476586,4.567781,8.036290,-6.063236,7.156743,-8.984050,-8.596918,-4.396596,-2.510328,-4.551579,4.502854,0.070987,-0.675882,-9.286390,0.881549,-0.934829,5.869395,1.016954,-4.907175,-1.184472,-7.786197,7.922419,-1.964498,-8.637898,-5.537729,-7.289991,-1.351858,7.194053,2.731394,-2.472219,0.440823,7.087205,5.888121,0.307552,-4.723205,4.541073,-6.712353,1.163232,-3.318969,-7.209367,-8.737116,3.260676,-6.538889,2.692795,-1.984304,-5.718617,-8.108767,-0.926339,9.094294,1.642096,2.325923,-7.302239,7.539980,-8.717458,0.611603,-2.864809,9.011037,-8.344783,6.832262,-0.006708,-8.095899,5.424123,-1.319825,-8.712616,2.024507,-6.688211,-9.081186,2.490738,-8.415068,9.302104,-4.816011,-5.057690,1.226881,2.742036,-0.014695,-3.277614,-9.447705,-0.349109,-3.328196,-3.108725,-2.417440,-1.929887,7.057275,4.724879,-9.796548,7.240252,-9.755714,-6.045237,7.165894,-1.604415,5.509589,-3.077280,-1.121322,2.807739,7.666356,3.614480,-8.453369,-1.272578,8.589361,5.085340,-0.290379,-7.292494,-0.260001,2.432404,-9.471684,-1.418941,-1.095736,7.427210,8.986954,8.250256,7.399441,-5.957920,1.516761,9.186292,-3.982303,-6.499845,-4.497889,-6.942008,6.305264,-5.071888,6.746454,-3.305899,8.687361,3.797906,-1.210743,0.631094,2.072184,2.335063,-3.533750,2.901340,0.646203,3.953949,-8.585967,0.175164,1.953028,5.367900,-7.199548,6.104309,8.529278,-0.915552,0.242934,0.593793,8.312824,4.411219,-1.115994,5.974574,-5.694132,2.801078,-2.298525,6.230671,-4.861037,-8.008342,-0.946167,-9.320262,-4.499670,5.606577,-6.751564,-9.648871,7.943243,5.859740,-6.962711,3.511873,3.052761,9.763201,6.339856,-8.507731,0.508210,-1.581881,-9.325306,-8.329797,5.635701,-5.487452,-6.259693,-7.019098,2.057525,4.975024,-6.789945,-5.583502,1.753160,5.320028,-4.579347,-2.002878,-9.809739,6.346408,8.217911,-3.942080,3.543599,-1.924668,2.994079,4.278733,-9.493604,6.584588,-8.558551,5.139998,2.395653,-9.013243,-1.394595,-6.207442,-5.827751,5.979483,9.155803,-9.735092,-1.019576,-9.874133,8.325946,-4.733876,0.038869,-8.981655,-7.794090,3.460665,-7.877279,8.807413,3.218646,-0.357512,-7.464568,8.113512,6.829881,-7.412167,8.988086,7.066658,7.744257,-4.356114,5.119733,-9.305575,-7.541670,-6.889472,5.684242,3.956667,3.100069,-7.108769,7.857613,6.150675,-5.988711,0.830677,-8.003314,-0.572006,-1.519315,-2.729429,-5.078686,5.405741,1.695139,5.077574,-3.433846,1.861216,-4.519184,0.094472,2.298379,-1.343165,-2.119796,1.964848,3.715961,-5.728603,4.064882,1.695442,9.031762,-2.496271,-4.923371,-2.662936,7.180856,-6.917758,0.918576,7.643181,-0.400647,-6.406262,2.509080,-7.011008,-1.099712,6.797961,8.008378,4.655096,3.109685,4.671175,9.591408,-0.864156,7.406005,7.980247,-5.424573,-3.198036,-3.242424,-3.445274,-8.773967,-8.442377,5.446988,-9.795406,9.829367,-3.770960,-2.506242,-5.002714,6.869370,-5.246084,-1.796696,9.160870,-6.968310,6.151966,8.627998,3.393354,-6.486648,-1.692496,9.774470,1.242112,-1.534052,6.884694,0.973174,-3.153222,5.599163,-7.534761,-4.237520,-6.838947,6.446073,-1.527330,8.858775,-1.819259,7.979700,-6.423285,-6.133501,2.900852,6.880984,8.767514,5.561154,3.194869,-6.355956,-2.315944,4.758527,5.480052,-0.090793,8.845047,2.398324,-3.794857,-4.853949,4.177770,-9.725530,9.540771,-0.502590,-7.030360,1.769519,-6.570514,4.423519,-8.811757,3.411888,2.095676,2.175294,-6.462218,3.481502,-2.293614,2.180346,-0.758415,-8.134791,9.376021,-8.638168,-4.544953,3.456341,4.661075,0.705495,0.127688,5.701341,1.849937,-2.134263,-4.534116,-5.011454,1.650832,-1.017879,3.679860,-5.150183,9.570132,-3.214048,-6.753515,-6.582542,4.558256,9.948197,9.812634,3.748496,-1.688640,-3.846900,3.558952,2.575390,-5.560841,-6.777554,-7.114929,-5.103056,0.820112,-0.838281,-3.004662,4.317922,-1.026049,-7.180519,-5.049425,-9.879744,0.016495,8.148160,8.416636,-3.066416,-0.846760,1.919821,1.634441,0.627403,1.947511,-7.314808,-8.508309,0.779086,-8.480523,-6.045907,5.850083,3.801499,3.885802,-6.898366,2.508242,-5.455324,8.603079,2.697720,7.131395,-9.237568,-3.399031,-9.237742], dtype = "float32")#candidate|5549|(624,)|const|float32
call_5547 = relay.TupleGetItem(func_114_call(relay.reshape(var_5548.astype('float32'), [3, 1, 13]), relay.reshape(const_5549.astype('float32'), [3, 16, 13]), ), 1)
call_5550 = relay.TupleGetItem(func_118_call(relay.reshape(var_5548.astype('float32'), [3, 1, 13]), relay.reshape(const_5549.astype('float32'), [3, 16, 13]), ), 1)
output = relay.Tuple([bop_5542,call_5547,var_5548,const_5549,])
output2 = relay.Tuple([bop_5545,call_5550,var_5548,const_5549,])
func_5557 = relay.Function([var_5541,var_5548,], output)
mod['func_5557'] = func_5557
mod = relay.transform.InferType()(mod)
mutated_mod['func_5557'] = func_5557
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5557_call = mutated_mod.get_global_var('func_5557')
var_5559 = relay.var("var_5559", dtype = "float64", shape = (16, 112))#candidate|5559|(16, 112)|var|float64
var_5560 = relay.var("var_5560", dtype = "float32", shape = (39,))#candidate|5560|(39,)|var|float32
call_5558 = func_5557_call(var_5559,var_5560,)
output = call_5558
func_5561 = relay.Function([var_5559,var_5560,], output)
mutated_mod['func_5561'] = func_5561
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2780_call = mod.get_global_var('func_2780')
func_2781_call = mutated_mod.get_global_var('func_2781')
call_5567 = relay.TupleGetItem(func_2780_call(), 0)
call_5568 = relay.TupleGetItem(func_2781_call(), 0)
uop_5583 = relay.atanh(call_5567.astype('float32')) # shape=(11, 15, 12)
uop_5585 = relay.atanh(call_5568.astype('float32')) # shape=(11, 15, 12)
output = relay.Tuple([uop_5583,])
output2 = relay.Tuple([uop_5585,])
func_5597 = relay.Function([], output)
mod['func_5597'] = func_5597
mod = relay.transform.InferType()(mod)
output = func_5597()
func_5598 = relay.Function([], output)
mutated_mod['func_5598'] = func_5598
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4838_call = mod.get_global_var('func_4838')
func_4840_call = mutated_mod.get_global_var('func_4840')
call_5610 = relay.TupleGetItem(func_4838_call(), 1)
call_5611 = relay.TupleGetItem(func_4840_call(), 1)
func_4051_call = mod.get_global_var('func_4051')
func_4053_call = mutated_mod.get_global_var('func_4053')
call_5616 = func_4051_call()
call_5617 = func_4051_call()
func_2190_call = mod.get_global_var('func_2190')
func_2192_call = mutated_mod.get_global_var('func_2192')
const_5621 = relay.const([[3.661282,-8.886086,-6.353467,4.392335,8.235219,-6.250399,-2.967513],[-3.153751,-6.803401,0.202670,0.148295,5.152603,6.957733,2.920797],[2.511146,-3.031441,-0.192544,-7.915218,8.409916,-2.698610,2.855935],[-6.125731,-8.731587,6.272441,-2.096847,-5.786592,-4.820404,7.595039],[-0.235848,6.663775,6.125913,-6.305383,-3.096776,-2.620426,-6.892510],[-8.731121,2.495653,6.552901,1.935707,-6.929640,6.491321,-6.801131],[-9.115761,-3.243804,-9.104149,7.247054,1.224879,-8.421110,-6.641349],[9.128532,6.217277,-9.058631,8.174535,-8.778925,3.994104,-6.158444],[3.252091,-7.761364,6.837979,9.489632,-3.317153,6.591144,-0.169520],[-4.313281,6.990874,-4.718345,8.135126,8.955274,-2.931748,-1.014589],[6.963178,4.042194,4.540640,-3.296742,-1.576337,-5.728024,-0.814715],[-7.635034,9.739518,8.259208,1.611430,6.450167,1.720263,6.343778],[5.922209,5.891458,-8.676182,9.340479,-8.775634,-1.405197,6.534493],[9.743316,6.367066,3.239925,-9.491172,3.797556,-2.111022,4.787549],[0.532534,0.606446,-1.045086,9.641900,4.684906,-3.977257,4.535960],[-9.453490,6.515170,-6.161324,-8.848965,-1.349968,3.674707,-3.261999],[-1.775915,6.225468,-3.140364,-5.930854,3.539035,4.586575,5.389016],[-0.556071,7.286217,2.226605,-9.700340,2.503963,1.901091,-3.091670],[7.228788,-0.556320,-8.985504,9.115305,4.518405,8.040142,-5.956334],[3.176272,-0.678925,-8.969060,6.560472,-4.896860,8.304373,-0.639403],[4.123251,0.424377,0.873288,1.400622,6.893688,-7.399481,-0.604654],[6.628893,-8.412213,-2.283809,-5.421782,-4.571424,5.976400,-8.049733]], dtype = "float64")#candidate|5621|(22, 7)|const|float64
call_5620 = relay.TupleGetItem(func_2190_call(relay.reshape(const_5621.astype('float64'), [1, 14, 11])), 2)
call_5622 = relay.TupleGetItem(func_2192_call(relay.reshape(const_5621.astype('float64'), [1, 14, 11])), 2)
func_3311_call = mod.get_global_var('func_3311')
func_3312_call = mutated_mod.get_global_var('func_3312')
call_5630 = relay.TupleGetItem(func_3311_call(), 0)
call_5631 = relay.TupleGetItem(func_3312_call(), 0)
var_5639 = relay.var("var_5639", dtype = "float64", shape = (22, 7))#candidate|5639|(22, 7)|var|float64
bop_5640 = relay.maximum(const_5621.astype('int32'), relay.reshape(var_5639.astype('int32'), relay.shape_of(const_5621))) # shape=(22, 7)
func_2044_call = mod.get_global_var('func_2044')
func_2045_call = mutated_mod.get_global_var('func_2045')
call_5655 = relay.TupleGetItem(func_2044_call(), 0)
call_5656 = relay.TupleGetItem(func_2045_call(), 0)
output = relay.Tuple([call_5610,call_5616,call_5620,call_5630,bop_5640,call_5655,])
output2 = relay.Tuple([call_5611,call_5617,call_5622,call_5631,bop_5640,call_5656,])
func_5662 = relay.Function([var_5639,], output)
mod['func_5662'] = func_5662
mod = relay.transform.InferType()(mod)
mutated_mod['func_5662'] = func_5662
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5663 = relay.var("var_5663", dtype = "float64", shape = (22, 7))#candidate|5663|(22, 7)|var|float64
func_5662_call = mutated_mod.get_global_var('func_5662')
call_5664 = func_5662_call(var_5663)
output = call_5664
func_5665 = relay.Function([var_5663], output)
mutated_mod['func_5665'] = func_5665
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5142_call = mod.get_global_var('func_5142')
func_5144_call = mutated_mod.get_global_var('func_5144')
call_5667 = func_5142_call()
call_5668 = func_5142_call()
func_5338_call = mod.get_global_var('func_5338')
func_5340_call = mutated_mod.get_global_var('func_5340')
call_5697 = relay.TupleGetItem(func_5338_call(), 0)
call_5698 = relay.TupleGetItem(func_5340_call(), 0)
func_3828_call = mod.get_global_var('func_3828')
func_3829_call = mutated_mod.get_global_var('func_3829')
call_5710 = relay.TupleGetItem(func_3828_call(), 0)
call_5711 = relay.TupleGetItem(func_3829_call(), 0)
output = relay.Tuple([call_5667,call_5697,call_5710,])
output2 = relay.Tuple([call_5668,call_5698,call_5711,])
func_5733 = relay.Function([], output)
mod['func_5733'] = func_5733
mod = relay.transform.InferType()(mod)
mutated_mod['func_5733'] = func_5733
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5733_call = mutated_mod.get_global_var('func_5733')
call_5734 = func_5733_call()
output = call_5734
func_5735 = relay.Function([], output)
mutated_mod['func_5735'] = func_5735
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5142_call = mod.get_global_var('func_5142')
func_5144_call = mutated_mod.get_global_var('func_5144')
call_5739 = func_5142_call()
call_5740 = func_5142_call()
func_2402_call = mod.get_global_var('func_2402')
func_2405_call = mutated_mod.get_global_var('func_2405')
const_5750 = relay.const([9,9,4,-5,-6,4,7,-4,-2,10,-4,-6,1,3,6,10,-1,1,8,-8,4,-10,6,10,8,3,-2,2,-4,-3,-8,6,-2,9,-2,-6,-8,1,-2,-3,1,-4,-4,-8,-1,9,-6,1,3,-9,8,3,-2,10,-5,8,-9,-3,-9,1,2,9,8,-7,3,-6,-1,-5,-5,-1,-7,8,-1,9,2,10,-4,3,3,3,-5,-5,9,-1,4,-5,-1,9,4,4,1,-1,6,-5,3,5,6,-4,1,-9], dtype = "uint16")#candidate|5750|(100,)|const|uint16
call_5749 = relay.TupleGetItem(func_2402_call(relay.reshape(const_5750.astype('uint16'), [100,])), 2)
call_5751 = relay.TupleGetItem(func_2405_call(relay.reshape(const_5750.astype('uint16'), [100,])), 2)
output = relay.Tuple([call_5739,call_5749,const_5750,])
output2 = relay.Tuple([call_5740,call_5751,const_5750,])
func_5758 = relay.Function([], output)
mod['func_5758'] = func_5758
mod = relay.transform.InferType()(mod)
output = func_5758()
func_5759 = relay.Function([], output)
mutated_mod['func_5759'] = func_5759
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5779 = relay.var("var_5779", dtype = "float64", shape = (11, 11, 14))#candidate|5779|(11, 11, 14)|var|float64
uop_5780 = relay.atan(var_5779.astype('float64')) # shape=(11, 11, 14)
bop_5783 = relay.add(uop_5780.astype('int16'), relay.reshape(var_5779.astype('int16'), relay.shape_of(uop_5780))) # shape=(11, 11, 14)
output = relay.Tuple([bop_5783,])
output2 = relay.Tuple([bop_5783,])
func_5806 = relay.Function([var_5779,], output)
mod['func_5806'] = func_5806
mod = relay.transform.InferType()(mod)
mutated_mod['func_5806'] = func_5806
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5807 = relay.var("var_5807", dtype = "float64", shape = (11, 11, 14))#candidate|5807|(11, 11, 14)|var|float64
func_5806_call = mutated_mod.get_global_var('func_5806')
call_5808 = func_5806_call(var_5807)
output = call_5808
func_5809 = relay.Function([var_5807], output)
mutated_mod['func_5809'] = func_5809
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3828_call = mod.get_global_var('func_3828')
func_3829_call = mutated_mod.get_global_var('func_3829')
call_5811 = relay.TupleGetItem(func_3828_call(), 0)
call_5812 = relay.TupleGetItem(func_3829_call(), 0)
uop_5814 = relay.asin(call_5811.astype('float32')) # shape=(11, 15, 12)
uop_5816 = relay.asin(call_5812.astype('float32')) # shape=(11, 15, 12)
output = relay.Tuple([uop_5814,])
output2 = relay.Tuple([uop_5816,])
func_5824 = relay.Function([], output)
mod['func_5824'] = func_5824
mod = relay.transform.InferType()(mod)
mutated_mod['func_5824'] = func_5824
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5824_call = mutated_mod.get_global_var('func_5824')
call_5825 = func_5824_call()
output = call_5825
func_5826 = relay.Function([], output)
mutated_mod['func_5826'] = func_5826
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5910 = relay.var("var_5910", dtype = "float32", shape = ())#candidate|5910|()|var|float32
var_5911 = relay.var("var_5911", dtype = "float32", shape = (2, 1, 9))#candidate|5911|(2, 1, 9)|var|float32
bop_5912 = relay.mod(var_5910.astype('float32'), var_5911.astype('float32')) # shape=(2, 1, 9)
uop_5916 = relay.acos(bop_5912.astype('float64')) # shape=(2, 1, 9)
uop_5926 = relay.cosh(uop_5916.astype('float32')) # shape=(2, 1, 9)
func_2402_call = mod.get_global_var('func_2402')
func_2405_call = mutated_mod.get_global_var('func_2405')
var_5938 = relay.var("var_5938", dtype = "uint16", shape = (1, 100))#candidate|5938|(1, 100)|var|uint16
call_5937 = relay.TupleGetItem(func_2402_call(relay.reshape(var_5938.astype('uint16'), [100,])), 0)
call_5939 = relay.TupleGetItem(func_2405_call(relay.reshape(var_5938.astype('uint16'), [100,])), 0)
output = relay.Tuple([uop_5926,call_5937,var_5938,])
output2 = relay.Tuple([uop_5926,call_5939,var_5938,])
func_5957 = relay.Function([var_5910,var_5911,var_5938,], output)
mod['func_5957'] = func_5957
mod = relay.transform.InferType()(mod)
mutated_mod['func_5957'] = func_5957
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5957_call = mutated_mod.get_global_var('func_5957')
var_5959 = relay.var("var_5959", dtype = "float32", shape = ())#candidate|5959|()|var|float32
var_5960 = relay.var("var_5960", dtype = "float32", shape = (2, 1, 9))#candidate|5960|(2, 1, 9)|var|float32
var_5961 = relay.var("var_5961", dtype = "uint16", shape = (1, 100))#candidate|5961|(1, 100)|var|uint16
call_5958 = func_5957_call(var_5959,var_5960,var_5961,)
output = call_5958
func_5962 = relay.Function([var_5959,var_5960,var_5961,], output)
mutated_mod['func_5962'] = func_5962
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5081_call = mod.get_global_var('func_5081')
func_5083_call = mutated_mod.get_global_var('func_5083')
call_5986 = relay.TupleGetItem(func_5081_call(), 0)
call_5987 = relay.TupleGetItem(func_5083_call(), 0)
output = call_5986
output2 = call_5987
func_5989 = relay.Function([], output)
mod['func_5989'] = func_5989
mod = relay.transform.InferType()(mod)
mutated_mod['func_5989'] = func_5989
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5989_call = mutated_mod.get_global_var('func_5989')
call_5990 = func_5989_call()
output = call_5990
func_5991 = relay.Function([], output)
mutated_mod['func_5991'] = func_5991
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5268_call = mod.get_global_var('func_5268')
func_5270_call = mutated_mod.get_global_var('func_5270')
call_6018 = func_5268_call()
call_6019 = func_5268_call()
output = relay.Tuple([call_6018,])
output2 = relay.Tuple([call_6019,])
func_6020 = relay.Function([], output)
mod['func_6020'] = func_6020
mod = relay.transform.InferType()(mod)
output = func_6020()
func_6021 = relay.Function([], output)
mutated_mod['func_6021'] = func_6021
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6050 = relay.var("var_6050", dtype = "int64", shape = (16, 1, 12))#candidate|6050|(16, 1, 12)|var|int64
const_6051 = relay.const([[[1,-2,1,9,-10,-2,-7,-5,-6,-2,7,2],[6,4,-10,-2,6,2,-3,-1,-5,-6,-1,-9],[-1,1,-4,-3,-7,-6,4,8,9,-9,2,7],[-2,-4,-1,7,-6,9,-3,10,-1,-7,-2,7],[6,6,-4,7,-8,-7,6,3,4,3,6,9]],[[10,4,-10,5,-7,-2,-8,6,-2,4,-1,-9],[1,-4,5,-8,-9,9,5,3,-9,-2,-6,2],[5,5,5,3,-5,-4,-2,7,7,1,2,-4],[3,-9,-6,6,-8,-9,4,-10,-9,-1,-9,4],[-4,9,-3,8,-9,-2,7,8,8,10,-9,10]],[[9,1,-10,5,2,-2,7,10,7,10,-1,-1],[6,-10,4,-3,3,-2,-10,7,-10,-8,8,-10],[-1,1,3,-10,7,-3,4,-5,-1,8,-1,7],[5,-8,-5,-10,-1,6,-6,2,-10,4,3,9],[-6,7,-3,9,-2,-10,5,1,2,-1,-8,2]],[[10,-10,-5,8,7,9,2,7,-6,8,9,-9],[-1,-1,-5,-6,9,7,4,-7,3,-10,-5,6],[6,-3,7,7,-4,6,-1,4,6,-6,-7,1],[9,4,8,5,5,-10,10,8,-8,-5,7,-1],[-1,5,-1,9,-10,4,-2,-4,7,-7,3,-4]],[[2,-10,-9,5,-1,9,9,-4,10,8,6,-8],[6,-3,3,-10,5,5,2,-3,10,-4,9,-7],[5,2,7,-8,5,2,7,2,-3,-7,9,-7],[-1,8,-9,10,10,7,1,-2,7,4,-7,7],[5,4,-3,3,-2,-5,-5,4,8,-7,-7,7]],[[3,7,10,-10,7,1,3,-3,4,-5,-4,8],[-2,-2,4,-2,-1,-6,4,-7,10,-8,-1,-9],[10,8,4,-5,1,-7,7,1,-10,-8,-3,-5],[3,5,6,-3,-9,-10,6,-1,-3,1,10,7],[-9,4,1,4,-5,-10,-4,-5,3,-7,-1,6]],[[-9,-5,9,8,-6,-1,-2,-3,-5,-7,-5,3],[10,-6,10,-4,-1,5,10,9,6,4,-2,-6],[-1,5,5,-3,9,5,-1,6,9,-1,7,-6],[-9,-2,9,-9,10,6,1,-2,1,10,8,6],[-9,8,-7,10,9,9,1,8,-2,-9,-6,-5]],[[-10,-8,1,8,1,10,2,-5,4,-9,-2,6],[-3,-6,6,7,6,-6,1,9,-10,3,-10,3],[4,7,-10,7,8,6,5,-1,1,10,-1,-4],[-9,-3,7,1,9,-5,-2,4,-10,-5,-4,-7],[-4,-6,5,6,-9,1,6,-7,-9,-5,7,-1]],[[2,1,2,2,5,3,-10,-2,-9,-6,4,-1],[6,-5,7,-9,2,6,9,4,-10,4,5,10],[10,10,-9,-8,-8,7,9,-6,-9,-6,4,4],[6,-3,-5,-6,1,8,8,-5,7,4,10,-6],[6,-7,2,4,9,-1,-10,-7,7,-1,1,3]],[[-7,-5,-1,-6,-3,-9,6,6,-1,-2,-6,-2],[-6,9,-6,-5,-3,2,1,3,4,-10,-5,8],[3,-5,-8,-5,-9,-10,-9,1,-7,-8,-2,-2],[-2,7,-1,1,2,5,4,-4,4,-1,-1,7],[-5,4,-5,-2,-1,6,3,-5,5,4,-2,6]],[[2,-1,10,-1,-2,-10,3,5,2,-3,-9,9],[10,7,10,8,-1,-5,6,5,10,8,-1,5],[-4,-8,1,-1,9,-3,-1,2,-1,-2,2,-6],[5,6,-6,-9,3,7,3,3,4,-2,8,-7],[-3,-5,-8,-9,-6,9,10,-4,5,7,7,-1]],[[-7,-8,-1,3,5,10,10,4,-6,7,1,9],[3,6,-7,3,-2,-8,-5,6,8,3,5,3],[2,-9,3,1,-5,6,-3,-5,-1,7,-5,-5],[-7,10,-6,5,-5,3,4,4,8,-3,-10,-6],[-3,-6,-6,-1,1,-6,8,-7,6,1,-3,-9]],[[-4,3,-3,4,4,4,2,2,1,-2,-9,-2],[-8,-5,7,-1,-8,-4,3,-7,-9,-6,10,-4],[-8,-10,5,2,-2,-4,2,-9,-10,-1,2,-2],[3,-1,8,4,4,-2,5,-2,-2,-5,4,5],[8,6,6,-8,-8,3,-4,5,-10,-7,-3,-3]],[[9,-9,3,-4,-2,10,2,8,-7,-7,8,1],[1,5,8,8,8,-10,-9,-2,7,-8,10,-9],[7,-9,10,-4,-7,4,9,-5,-7,-9,-7,9],[5,-5,5,3,3,-8,-4,-3,-3,8,-9,2],[6,-4,4,-1,1,7,1,10,4,7,10,8]],[[-9,9,9,-3,5,-10,-1,10,-4,-9,-7,-8],[-7,-8,7,2,4,5,5,8,7,8,6,1],[-7,6,-9,4,1,3,-9,5,6,-5,-2,-10],[-1,-7,8,-7,-8,8,7,-3,5,-8,1,-8],[-5,-10,5,6,-8,-3,2,-9,2,10,-9,-10]],[[9,9,-1,-6,9,5,-6,2,-5,10,6,2],[7,9,-4,-2,-9,2,-7,8,4,2,6,2],[10,1,-1,3,-2,8,5,1,-1,4,1,6],[9,3,-1,-7,7,8,-8,8,5,-7,5,4],[3,6,4,-9,-9,8,-7,2,2,4,10,9]]], dtype = "int64")#candidate|6051|(16, 5, 12)|const|int64
bop_6052 = relay.maximum(var_6050.astype('int64'), const_6051.astype('int64')) # shape=(16, 5, 12)
func_1844_call = mod.get_global_var('func_1844')
func_1846_call = mutated_mod.get_global_var('func_1846')
call_6057 = func_1844_call()
call_6058 = func_1844_call()
output = relay.Tuple([bop_6052,call_6057,])
output2 = relay.Tuple([bop_6052,call_6058,])
func_6059 = relay.Function([var_6050,], output)
mod['func_6059'] = func_6059
mod = relay.transform.InferType()(mod)
var_6060 = relay.var("var_6060", dtype = "int64", shape = (16, 1, 12))#candidate|6060|(16, 1, 12)|var|int64
output = func_6059(var_6060)
func_6061 = relay.Function([var_6060], output)
mutated_mod['func_6061'] = func_6061
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3892_call = mod.get_global_var('func_3892')
func_3894_call = mutated_mod.get_global_var('func_3894')
call_6073 = func_3892_call()
call_6074 = func_3892_call()
func_5957_call = mod.get_global_var('func_5957')
func_5962_call = mutated_mod.get_global_var('func_5962')
const_6076 = relay.const(-8.494512, dtype = "float32")#candidate|6076|()|const|float32
var_6077 = relay.var("var_6077", dtype = "float32", shape = (18, 1))#candidate|6077|(18, 1)|var|float32
var_6078 = relay.var("var_6078", dtype = "uint16", shape = (100,))#candidate|6078|(100,)|var|uint16
call_6075 = relay.TupleGetItem(func_5957_call(relay.reshape(const_6076.astype('float32'), []), relay.reshape(var_6077.astype('float32'), [2, 1, 9]), relay.reshape(var_6078.astype('uint16'), [1, 100]), ), 1)
call_6079 = relay.TupleGetItem(func_5962_call(relay.reshape(const_6076.astype('float32'), []), relay.reshape(var_6077.astype('float32'), [2, 1, 9]), relay.reshape(var_6078.astype('uint16'), [1, 100]), ), 1)
output = relay.Tuple([call_6073,call_6075,const_6076,var_6077,var_6078,])
output2 = relay.Tuple([call_6074,call_6079,const_6076,var_6077,var_6078,])
func_6113 = relay.Function([var_6077,var_6078,], output)
mod['func_6113'] = func_6113
mod = relay.transform.InferType()(mod)
mutated_mod['func_6113'] = func_6113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6113_call = mutated_mod.get_global_var('func_6113')
var_6115 = relay.var("var_6115", dtype = "float32", shape = (18, 1))#candidate|6115|(18, 1)|var|float32
var_6116 = relay.var("var_6116", dtype = "uint16", shape = (100,))#candidate|6116|(100,)|var|uint16
call_6114 = func_6113_call(var_6115,var_6116,)
output = call_6114
func_6117 = relay.Function([var_6115,var_6116,], output)
mutated_mod['func_6117'] = func_6117
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2261_call = mod.get_global_var('func_2261')
func_2262_call = mutated_mod.get_global_var('func_2262')
call_6122 = func_2261_call()
call_6123 = func_2261_call()
output = call_6122
output2 = call_6123
func_6124 = relay.Function([], output)
mod['func_6124'] = func_6124
mod = relay.transform.InferType()(mod)
mutated_mod['func_6124'] = func_6124
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6124_call = mutated_mod.get_global_var('func_6124')
call_6125 = func_6124_call()
output = call_6125
func_6126 = relay.Function([], output)
mutated_mod['func_6126'] = func_6126
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2725_call = mod.get_global_var('func_2725')
func_2727_call = mutated_mod.get_global_var('func_2727')
call_6138 = relay.TupleGetItem(func_2725_call(), 0)
call_6139 = relay.TupleGetItem(func_2727_call(), 0)
func_4541_call = mod.get_global_var('func_4541')
func_4543_call = mutated_mod.get_global_var('func_4543')
call_6140 = func_4541_call()
call_6141 = func_4541_call()
output = relay.Tuple([call_6138,call_6140,])
output2 = relay.Tuple([call_6139,call_6141,])
func_6151 = relay.Function([], output)
mod['func_6151'] = func_6151
mod = relay.transform.InferType()(mod)
output = func_6151()
func_6152 = relay.Function([], output)
mutated_mod['func_6152'] = func_6152
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6188 = relay.const([[[8.038036],[1.408740],[7.417657],[-8.174307],[9.930153],[-8.967443],[-1.052813],[-8.671332],[1.776068],[4.620073],[-0.671482],[-5.850719],[2.647778]],[[7.451628],[8.208347],[-5.640075],[1.687504],[-2.422705],[7.219983],[3.257098],[-7.964478],[3.097767],[0.055856],[8.328125],[9.302504],[8.079167]],[[-7.640373],[-7.283310],[3.836710],[-7.782214],[-6.283115],[1.814730],[-6.259702],[-2.585512],[9.211201],[7.454365],[3.711936],[-8.912874],[-6.156912]],[[4.192342],[-3.704105],[1.559597],[-5.863723],[-3.343577],[2.869625],[-0.532650],[1.424296],[9.795238],[-3.937076],[1.471678],[4.178387],[2.536471]],[[-9.063328],[5.972510],[5.230621],[-3.659851],[-4.082134],[-6.782354],[-3.118411],[-8.386425],[-3.110423],[7.626833],[8.765968],[9.469016],[6.145082]],[[5.485468],[0.890068],[3.071489],[-7.572002],[-3.119687],[-5.475825],[6.662884],[3.697517],[8.736125],[5.653752],[1.787590],[6.603990],[0.258032]]], dtype = "float64")#candidate|6188|(6, 13, 1)|const|float64
uop_6189 = relay.asinh(const_6188.astype('float64')) # shape=(6, 13, 1)
bop_6196 = relay.add(uop_6189.astype('int32'), relay.reshape(const_6188.astype('int32'), relay.shape_of(uop_6189))) # shape=(6, 13, 1)
output = relay.Tuple([bop_6196,])
output2 = relay.Tuple([bop_6196,])
func_6201 = relay.Function([], output)
mod['func_6201'] = func_6201
mod = relay.transform.InferType()(mod)
output = func_6201()
func_6202 = relay.Function([], output)
mutated_mod['func_6202'] = func_6202
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4051_call = mod.get_global_var('func_4051')
func_4053_call = mutated_mod.get_global_var('func_4053')
call_6218 = func_4051_call()
call_6219 = func_4051_call()
var_6224 = relay.var("var_6224", dtype = "float32", shape = (16, 112))#candidate|6224|(16, 112)|var|float32
bop_6225 = relay.less(call_6218.astype('bool'), relay.reshape(var_6224.astype('bool'), relay.shape_of(call_6218))) # shape=(16, 112)
bop_6228 = relay.less(call_6219.astype('bool'), relay.reshape(var_6224.astype('bool'), relay.shape_of(call_6219))) # shape=(16, 112)
func_5030_call = mod.get_global_var('func_5030')
func_5032_call = mutated_mod.get_global_var('func_5032')
call_6233 = relay.TupleGetItem(func_5030_call(), 0)
call_6234 = relay.TupleGetItem(func_5032_call(), 0)
bop_6235 = relay.logical_xor(var_6224.astype('uint64'), relay.reshape(bop_6225.astype('uint64'), relay.shape_of(var_6224))) # shape=(16, 112)
bop_6238 = relay.logical_xor(var_6224.astype('uint64'), relay.reshape(bop_6228.astype('uint64'), relay.shape_of(var_6224))) # shape=(16, 112)
output = relay.Tuple([call_6233,bop_6235,])
output2 = relay.Tuple([call_6234,bop_6238,])
func_6242 = relay.Function([var_6224,], output)
mod['func_6242'] = func_6242
mod = relay.transform.InferType()(mod)
var_6243 = relay.var("var_6243", dtype = "float32", shape = (16, 112))#candidate|6243|(16, 112)|var|float32
output = func_6242(var_6243)
func_6244 = relay.Function([var_6243], output)
mutated_mod['func_6244'] = func_6244
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5338_call = mod.get_global_var('func_5338')
func_5340_call = mutated_mod.get_global_var('func_5340')
call_6262 = relay.TupleGetItem(func_5338_call(), 0)
call_6263 = relay.TupleGetItem(func_5340_call(), 0)
func_1857_call = mod.get_global_var('func_1857')
func_1859_call = mutated_mod.get_global_var('func_1859')
call_6270 = relay.TupleGetItem(func_1857_call(), 0)
call_6271 = relay.TupleGetItem(func_1859_call(), 0)
func_6113_call = mod.get_global_var('func_6113')
func_6117_call = mutated_mod.get_global_var('func_6117')
var_6273 = relay.var("var_6273", dtype = "float32", shape = (18,))#candidate|6273|(18,)|var|float32
const_6274 = relay.const([4,2,-2,10,9,10,1,-4,-7,10,4,7,-9,-10,-4,-10,-8,10,9,6,9,-1,-4,-5,-6,6,-4,3,-7,4,-7,-2,9,4,2,-6,-8,1,-4,2,3,9,5,3,-6,-5,-3,7,-9,-8,5,-1,-2,2,1,5,5,5,7,-4,-7,7,6,-10,9,7,5,-4,10,-5,3,9,6,-8,4,-8,-10,10,1,2,-9,3,-5,-3,4,-10,-7,-4,2,6,5,4,-10,-1,4,2,-10,-1,3,-4], dtype = "uint16")#candidate|6274|(100,)|const|uint16
call_6272 = relay.TupleGetItem(func_6113_call(relay.reshape(var_6273.astype('float32'), [18, 1]), relay.reshape(const_6274.astype('uint16'), [100,]), ), 0)
call_6275 = relay.TupleGetItem(func_6117_call(relay.reshape(var_6273.astype('float32'), [18, 1]), relay.reshape(const_6274.astype('uint16'), [100,]), ), 0)
output = relay.Tuple([call_6262,call_6270,call_6272,var_6273,const_6274,])
output2 = relay.Tuple([call_6263,call_6271,call_6275,var_6273,const_6274,])
func_6301 = relay.Function([var_6273,], output)
mod['func_6301'] = func_6301
mod = relay.transform.InferType()(mod)
mutated_mod['func_6301'] = func_6301
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6302 = relay.var("var_6302", dtype = "float32", shape = (18,))#candidate|6302|(18,)|var|float32
func_6301_call = mutated_mod.get_global_var('func_6301')
call_6303 = func_6301_call(var_6302)
output = call_6303
func_6304 = relay.Function([var_6302], output)
mutated_mod['func_6304'] = func_6304
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5758_call = mod.get_global_var('func_5758')
func_5759_call = mutated_mod.get_global_var('func_5759')
call_6349 = relay.TupleGetItem(func_5758_call(), 2)
call_6350 = relay.TupleGetItem(func_5759_call(), 2)
func_946_call = mod.get_global_var('func_946')
func_949_call = mutated_mod.get_global_var('func_949')
const_6357 = relay.const(-5.659340, dtype = "float32")#candidate|6357|()|const|float32
var_6358 = relay.var("var_6358", dtype = "float32", shape = (825,))#candidate|6358|(825,)|var|float32
call_6356 = func_946_call(relay.reshape(const_6357.astype('float32'), []), relay.reshape(var_6358.astype('float32'), [5, 11, 15]), )
call_6359 = func_946_call(relay.reshape(const_6357.astype('float32'), []), relay.reshape(var_6358.astype('float32'), [5, 11, 15]), )
func_4232_call = mod.get_global_var('func_4232')
func_4234_call = mutated_mod.get_global_var('func_4234')
call_6373 = func_4232_call()
call_6374 = func_4232_call()
func_5806_call = mod.get_global_var('func_5806')
func_5809_call = mutated_mod.get_global_var('func_5809')
var_6380 = relay.var("var_6380", dtype = "float64", shape = (1694,))#candidate|6380|(1694,)|var|float64
call_6379 = relay.TupleGetItem(func_5806_call(relay.reshape(var_6380.astype('float64'), [11, 11, 14])), 0)
call_6381 = relay.TupleGetItem(func_5809_call(relay.reshape(var_6380.astype('float64'), [11, 11, 14])), 0)
bop_6385 = relay.logical_or(var_6380.astype('bool'), relay.reshape(call_6379.astype('bool'), relay.shape_of(var_6380))) # shape=(1694,)
bop_6388 = relay.logical_or(var_6380.astype('bool'), relay.reshape(call_6381.astype('bool'), relay.shape_of(var_6380))) # shape=(1694,)
output = relay.Tuple([call_6349,call_6356,const_6357,var_6358,call_6373,bop_6385,])
output2 = relay.Tuple([call_6350,call_6359,const_6357,var_6358,call_6374,bop_6388,])
func_6391 = relay.Function([var_6358,var_6380,], output)
mod['func_6391'] = func_6391
mod = relay.transform.InferType()(mod)
var_6392 = relay.var("var_6392", dtype = "float32", shape = (825,))#candidate|6392|(825,)|var|float32
var_6393 = relay.var("var_6393", dtype = "float64", shape = (1694,))#candidate|6393|(1694,)|var|float64
output = func_6391(var_6392,var_6393,)
func_6394 = relay.Function([var_6392,var_6393,], output)
mutated_mod['func_6394'] = func_6394
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4838_call = mod.get_global_var('func_4838')
func_4840_call = mutated_mod.get_global_var('func_4840')
call_6402 = relay.TupleGetItem(func_4838_call(), 0)
call_6403 = relay.TupleGetItem(func_4840_call(), 0)
output = relay.Tuple([call_6402,])
output2 = relay.Tuple([call_6403,])
func_6406 = relay.Function([], output)
mod['func_6406'] = func_6406
mod = relay.transform.InferType()(mod)
mutated_mod['func_6406'] = func_6406
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6406_call = mutated_mod.get_global_var('func_6406')
call_6407 = func_6406_call()
output = call_6407
func_6408 = relay.Function([], output)
mutated_mod['func_6408'] = func_6408
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5394_call = mod.get_global_var('func_5394')
func_5396_call = mutated_mod.get_global_var('func_5396')
call_6497 = relay.TupleGetItem(func_5394_call(), 0)
call_6498 = relay.TupleGetItem(func_5396_call(), 0)
var_6502 = relay.var("var_6502", dtype = "float32", shape = (11, 15, 12))#candidate|6502|(11, 15, 12)|var|float32
bop_6503 = relay.left_shift(call_6497.astype('int32'), relay.reshape(var_6502.astype('int32'), relay.shape_of(call_6497))) # shape=(11, 15, 12)
bop_6506 = relay.left_shift(call_6498.astype('int32'), relay.reshape(var_6502.astype('int32'), relay.shape_of(call_6498))) # shape=(11, 15, 12)
output = bop_6503
output2 = bop_6506
func_6515 = relay.Function([var_6502,], output)
mod['func_6515'] = func_6515
mod = relay.transform.InferType()(mod)
var_6516 = relay.var("var_6516", dtype = "float32", shape = (11, 15, 12))#candidate|6516|(11, 15, 12)|var|float32
output = func_6515(var_6516)
func_6517 = relay.Function([var_6516], output)
mutated_mod['func_6517'] = func_6517
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2261_call = mod.get_global_var('func_2261')
func_2262_call = mutated_mod.get_global_var('func_2262')
call_6551 = func_2261_call()
call_6552 = func_2261_call()
func_114_call = mod.get_global_var('func_114')
func_118_call = mutated_mod.get_global_var('func_118')
const_6560 = relay.const([0.067849,5.969310,-9.860044,8.785655,5.439389,-6.053184,-2.825876,7.627634,-9.797655,2.297865,-7.157455,-6.904862,-9.134686,2.786746,-7.413561,8.882064,-8.724522,-6.666735,7.636169,-0.763091,0.567288,-2.939816,-1.902511,8.730351,7.163086,2.895546,-8.670954,9.955014,-5.927763,-8.904298,-8.116083,-4.856479,-6.863436,6.389970,5.789105,0.954089,-1.337740,-5.884127,4.739652], dtype = "float32")#candidate|6560|(39,)|const|float32
var_6561 = relay.var("var_6561", dtype = "float32", shape = (624,))#candidate|6561|(624,)|var|float32
call_6559 = relay.TupleGetItem(func_114_call(relay.reshape(const_6560.astype('float32'), [3, 1, 13]), relay.reshape(var_6561.astype('float32'), [3, 16, 13]), ), 1)
call_6562 = relay.TupleGetItem(func_118_call(relay.reshape(const_6560.astype('float32'), [3, 1, 13]), relay.reshape(var_6561.astype('float32'), [3, 16, 13]), ), 1)
func_5557_call = mod.get_global_var('func_5557')
func_5561_call = mutated_mod.get_global_var('func_5561')
var_6571 = relay.var("var_6571", dtype = "float64", shape = (1792,))#candidate|6571|(1792,)|var|float64
call_6570 = relay.TupleGetItem(func_5557_call(relay.reshape(var_6571.astype('float64'), [16, 112]), relay.reshape(call_6559.astype('float32'), [39,]), ), 3)
call_6572 = relay.TupleGetItem(func_5561_call(relay.reshape(var_6571.astype('float64'), [16, 112]), relay.reshape(call_6559.astype('float32'), [39,]), ), 3)
uop_6573 = relay.log(call_6570.astype('float64')) # shape=(624,)
uop_6575 = relay.log(call_6572.astype('float64')) # shape=(624,)
output = relay.Tuple([call_6551,call_6559,const_6560,var_6561,var_6571,uop_6573,])
output2 = relay.Tuple([call_6552,call_6562,const_6560,var_6561,var_6571,uop_6575,])
func_6578 = relay.Function([var_6561,var_6571,], output)
mod['func_6578'] = func_6578
mod = relay.transform.InferType()(mod)
var_6579 = relay.var("var_6579", dtype = "float32", shape = (624,))#candidate|6579|(624,)|var|float32
var_6580 = relay.var("var_6580", dtype = "float64", shape = (1792,))#candidate|6580|(1792,)|var|float64
output = func_6578(var_6579,var_6580,)
func_6581 = relay.Function([var_6579,var_6580,], output)
mutated_mod['func_6581'] = func_6581
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6620 = relay.var("var_6620", dtype = "float32", shape = (12, 5, 6))#candidate|6620|(12, 5, 6)|var|float32
const_6621 = relay.const([[[7.118487,7.812232,6.377120,4.195453,9.187146,2.702785],[5.386842,5.039852,6.849917,-3.929853,-4.078059,-5.666836],[-7.124988,-8.135076,2.049159,-5.953356,-3.311773,-7.887319],[-3.865002,2.705669,-7.091315,-7.438565,-5.203157,-3.566613],[1.524824,-1.093170,7.229723,7.011715,3.944755,-9.740950]],[[2.161965,6.894110,-4.863852,2.674056,-0.974556,2.108318],[2.008716,-1.275558,5.632724,0.851624,4.976178,-0.791131],[8.840069,-8.071237,5.488685,7.607796,-3.396281,-7.241028],[-0.669089,5.244364,-9.585851,9.504162,-3.411357,-4.719955],[-3.113323,-5.818151,7.090409,-3.798064,-6.064432,4.972861]],[[3.554269,-7.059496,-0.406232,5.983209,-1.818769,1.324693],[0.132766,-1.189268,-8.571489,9.196470,5.440518,-8.508432],[-3.567356,5.345505,6.754888,-2.705311,7.734452,-1.469092],[-1.601402,-9.923796,3.553432,3.044716,-5.820948,-8.169441],[-3.366821,3.482639,-7.088352,-2.008341,-2.446952,2.140200]],[[8.391245,-2.531921,3.358149,-4.087405,-4.829578,-7.524901],[-7.760187,-6.365776,-9.216683,3.508764,-6.650663,-0.498312],[-8.801093,2.758573,-9.278929,-1.335678,0.722948,-3.549203],[-3.943730,-6.356356,4.281689,-8.631708,-3.019839,-7.008729],[9.656562,-6.267525,-7.202657,-5.125342,7.422708,3.329201]],[[8.703573,3.919427,-5.567107,6.119532,-5.355471,-7.857812],[-3.951088,7.753972,0.010479,0.942148,9.142350,6.779433],[-6.356235,-0.727263,8.690602,0.847910,-6.193039,2.681797],[-7.038133,2.513419,-9.991869,-2.661477,-4.138515,-0.381143],[6.926853,-2.239975,1.302677,-1.954078,-9.007143,8.148338]],[[-7.219808,-6.653485,-2.942747,-7.752866,-8.760846,7.369931],[6.577383,6.722300,-3.808078,8.360500,-5.010962,-8.699638],[6.891573,5.782573,-0.702745,-4.143085,-6.540363,1.989725],[-0.586664,6.533603,3.870993,-9.537119,8.961291,-6.014784],[5.512075,8.697914,3.562239,0.607990,2.228420,-6.508680]],[[1.140327,-2.903752,5.924812,-1.887614,0.690021,-3.450771],[1.915785,2.589819,1.635979,-6.762289,-4.373902,-3.238005],[5.969944,-1.565882,-0.751756,-3.950442,1.277629,6.310459],[-2.846179,4.643694,-6.766869,-1.700597,-1.720746,-5.115260],[7.235709,-4.653773,-8.738658,-5.628706,-3.028668,-9.588470]],[[9.014954,-7.247941,-7.872390,-4.321759,-0.775040,-1.545742],[9.295373,-7.355997,3.724247,3.837315,2.833857,-7.792738],[-4.735284,2.614407,1.980718,-1.543508,5.201565,-6.279293],[-3.330956,-3.079622,-2.644692,4.918552,-0.535455,4.257398],[-3.847426,-5.698761,-5.142065,-7.742452,6.748066,9.037707]],[[5.649216,-8.618849,-2.374800,-9.941614,5.085128,5.404468],[-8.236557,4.084436,-3.427058,-0.668681,-4.808153,-6.590425],[9.711769,9.417444,9.090968,4.968160,-5.800531,3.956766],[-3.081563,-0.105686,-4.457326,0.445218,-4.399426,7.695244],[6.297688,-8.951283,2.853009,-4.754621,6.837634,9.461684]],[[-6.124231,3.742009,-5.662089,-2.408768,9.426324,-8.042056],[-6.180011,-0.922979,1.631644,-6.983404,9.614318,-3.525477],[7.475960,0.605230,-0.699558,0.901561,0.626354,-9.753705],[7.283601,6.757394,0.886844,2.550647,8.097973,-7.700920],[7.439484,-7.262830,4.090226,8.034523,3.100533,3.998177]],[[-1.535739,3.279033,-8.858096,8.395315,-9.722785,-1.964185],[6.307563,3.397508,6.605709,9.921015,-6.622510,1.870185],[-8.392001,3.179120,3.983207,8.425556,6.626333,2.329540],[-7.969527,-3.290075,8.855309,-3.881083,-3.068371,-4.108904],[-0.794354,-0.364478,3.457179,-7.170685,9.419568,7.273868]],[[5.266974,-3.694011,0.680553,-7.207553,-1.084227,-4.534587],[3.204570,-9.716962,6.430493,1.850720,-6.576129,-2.936535],[9.860765,5.313001,-3.461562,1.813531,-7.473930,3.892740],[0.709756,2.851003,-7.077868,-9.444382,6.105492,0.163026],[1.855756,-8.633402,-7.941121,9.627571,4.633568,-1.832778]]], dtype = "float32")#candidate|6621|(12, 5, 6)|const|float32
bop_6622 = relay.power(var_6620.astype('float32'), relay.reshape(const_6621.astype('float32'), relay.shape_of(var_6620))) # shape=(12, 5, 6)
output = bop_6622
output2 = bop_6622
F = relay.Function([var_6620,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_6620,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
	relay.transform.DefuseOps(),
	relay.transform.SimplifyExpr(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

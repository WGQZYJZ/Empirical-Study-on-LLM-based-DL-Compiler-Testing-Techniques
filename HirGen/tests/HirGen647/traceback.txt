==========mod==========
#[version = "0.0.5"]
def @func_11082() -> Tensor[(14, 13, 3), bool] {
  @func_1307() /* ty=Tensor[(14, 13, 3), bool] */
}

def @func_5731() -> Tensor[(12, 8, 9), float32] {
  %0 = @func_3956() /* ty=(Tensor[(12, 8, 9), float32], Tensor[(12, 8, 9), float64]) */;
  %0.0
}

def @func_17234() -> Tensor[(14, 13, 3), float32] {
  %1 = @func_541() /* ty=(Tensor[(14, 13, 3), float32],) */;
  %1.0
}

def @func_5886() -> (Tensor[(14, 13, 3), bool],) {
  %2 = @func_4137() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
  %3 = %2.0;
  (%3,)
}

def @func_6742() -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) {
  %4 = @func_334() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool]) */;
  %5 = %4.6;
  %6 = cast(%5, dtype="float64") /* ty=Tensor[(14, 13, 3), float64] */;
  %7 = reshape(%6, newshape=[14, 13, 3]) /* ty=Tensor[(14, 13, 3), float64] */;
  %8 = @func_5962(%7) /* ty=(Tensor[(14, 13, 3), int64], Tensor[(14, 13, 3), float32]) */;
  %9 = @func_3800() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %10 = @func_11() /* ty=(Tensor[(14, 13, 3), bool],) */;
  %11 = %8.1;
  %12 = %9.0;
  %13 = @func_2569() /* ty=Tensor[(14, 13, 3), float64] */;
  %14 = %10.0;
  (%5, %11, %12, %13, %14)
}

def @func_4809() -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float32]) {
  %15 = @func_3881() /* ty=(Tensor[(14, 13, 3), float32],) */;
  %16 = %15.0;
  %17 = cast(%16, dtype="float32") /* ty=Tensor[(14, 13, 3), float32] */;
  %18 = reshape(%17, newshape=[14, 13, 3]) /* ty=Tensor[(14, 13, 3), float32] */;
  %19 = @func_900(%18) /* ty=Tensor[(14, 13, 3), float32] */;
  (%16, %19)
}

def @func_6388(%var_6382: Tensor[(13, 16, 13), float32]) -> (Tensor[(13, 16, 13), float32],) {
  %20 = cast(%var_6382, dtype="float32") /* ty=Tensor[(13, 16, 13), float32] */;
  %21 = atan(%20) /* ty=Tensor[(13, 16, 13), float32] */;
  (%21,)
}

def @func_9981() -> (Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(14, 13, 3), float64]) {
  %22 = @func_9714() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
  %23 = @func_9029() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(3, 40), int8], Tensor[(8, 5, 3), bool], Tensor[(24), int8]) */;
  %24 = %23.3;
  %25 = cast(%24, dtype="int8") /* ty=Tensor[(24), int8] */;
  %26 = reshape(%25, newshape=[24]) /* ty=Tensor[(24), int8] */;
  %27 = @func_1135(%26) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), bool], Tensor[(24), int8], Tensor[(30, 4), uint32], Tensor[(14, 13, 3), float64]) */;
  %28 = %22.2;
  %29 = %27.0;
  (%28, %24, %29)
}

def @func_772(%var_767: Tensor[(14, 13, 3), bool]) -> Tensor[(14, 13, 3), int8] {
  %30 = @func_11() /* ty=(Tensor[(14, 13, 3), bool],) */;
  %31 = %30.0;
  %32 = cast(%var_767, dtype="int8") /* ty=Tensor[(14, 13, 3), int8] */;
  %33 = shape_of(%31, dtype="int32") /* ty=Tensor[(3), int32] */;
  %34 = cast(%31, dtype="int8") /* ty=Tensor[(14, 13, 3), int8] */;
  %35 = dyn.reshape(%32, %33, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  bitwise_and(%34, %35) /* ty=Tensor[(14, 13, 3), int8] */
}

def @func_1135(%var_1079: Tensor[(24), int8]) -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), bool], Tensor[(24), int8], Tensor[(30, 4), uint32], Tensor[(14, 13, 3), float64]) {
  %36 = @func_541() /* ty=(Tensor[(14, 13, 3), float32],) */;
  %37 = %36.0;
  %38 = cast(%37, dtype="float64") /* ty=Tensor[(14, 13, 3), float64] */;
  %39 = erf(%38) /* ty=Tensor[(14, 13, 3), float64] */;
  %40 = cast(%39, dtype="float32") /* ty=Tensor[(14, 13, 3), float32] */;
  %41 = reshape(%40, newshape=[14, 13, 3]) /* ty=Tensor[(14, 13, 3), float32] */;
  %42 = @func_11() /* ty=(Tensor[(14, 13, 3), bool],) */;
  %43 = cast(%var_1079, dtype="int8") /* ty=Tensor[(24), int8] */;
  %44 = cast(meta[relay.Constant][0] /* ty=Tensor[(30, 4), int8] */, dtype="int8") /* ty=Tensor[(30, 4), int8] */;
  %45 = reshape(%43, newshape=[8, 1, 3]) /* ty=Tensor[(8, 1, 3), int8] */;
  %46 = reshape(%44, newshape=[8, 5, 3]) /* ty=Tensor[(8, 5, 3), int8] */;
  %47 = @func_161(%45, %46) /* ty=(Tensor[(8, 5, 3), bool], Tensor[(14, 13, 3), bool]) */;
  %48 = %47.0;
  %49 = cast(%48, dtype="uint32") /* ty=Tensor[(8, 5, 3), uint32] */;
  %50 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(30, 4), int8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %51 = cast(meta[relay.Constant][0] /* ty=Tensor[(30, 4), int8] */, dtype="uint32") /* ty=Tensor[(30, 4), uint32] */;
  %52 = dyn.reshape(%49, %50, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %53 = @func_334() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool]) */;
  %54 = @func_900(%41) /* ty=Tensor[(14, 13, 3), float32] */;
  %55 = %42.0;
  %56 = add(%51, %52) /* ty=Tensor[(30, 4), uint32] */;
  %57 = %53.3;
  (%39, %54, %55, %var_1079, %56, %57)
}

def @func_5712() -> (Tensor[(14, 13, 3), float32],) {
  %58 = @func_1278() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
  %59 = %58.2;
  (%59,)
}

def @func_10804() -> (Tensor[(14, 13, 3), float64],) {
  %60 = @func_8763() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %61 = %60.0;
  (%61,)
}

def @func_11() -> (Tensor[(14, 13, 3), bool],) {
  %62 = cast(meta[relay.Constant][2] /* ty=Tensor[(14, 13, 3), float64] */, dtype="bool") /* ty=Tensor[(14, 13, 3), bool] */;
  %63 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(14, 13, 3), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %64 = cast(meta[relay.Constant][1] /* ty=Tensor[(14, 13, 3), float64] */, dtype="bool") /* ty=Tensor[(14, 13, 3), bool] */;
  %65 = dyn.reshape(%62, %63, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %66 = equal(%64, %65) /* ty=Tensor[(14, 13, 3), bool] */;
  (%66,)
}

def @func_15443() -> (Tensor[(14, 13, 3), float32], Tensor[(15, 2, 5), int8], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32], Tensor[(15, 2, 5), bool]) {
  %67 = @func_14406() /* ty=(Tensor[(14, 13, 3), float32],) */;
  %68 = @func_11234() /* ty=Tensor[(15, 2, 5), uint64] */;
  %69 = cast(meta[relay.Constant][3] /* ty=Tensor[(15, 2, 5), uint64] */, dtype="float32") /* ty=Tensor[(15, 2, 5), float32] */;
  %70 = shape_of(%68, dtype="int32") /* ty=Tensor[(3), int32] */;
  %71 = cast(%68, dtype="float32") /* ty=Tensor[(15, 2, 5), float32] */;
  %72 = dyn.reshape(%69, %70, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %73 = floor_mod(%71, %72) /* ty=Tensor[(15, 2, 5), float32] */;
  %74 = cast(%73, dtype="float32") /* ty=Tensor[(15, 2, 5), float32] */;
  %75 = acosh(%74) /* ty=Tensor[(15, 2, 5), float32] */;
  %76 = cast(%75, dtype="float64") /* ty=Tensor[(15, 2, 5), float64] */;
  %77 = sin(%76) /* ty=Tensor[(15, 2, 5), float64] */;
  %78 = cast(meta[relay.Constant][3] /* ty=Tensor[(15, 2, 5), uint64] */, dtype="int8") /* ty=Tensor[(15, 2, 5), int8] */;
  %79 = shape_of(%77, dtype="int32") /* ty=Tensor[(3), int32] */;
  %80 = cast(%77, dtype="int8") /* ty=Tensor[(15, 2, 5), int8] */;
  %81 = dyn.reshape(%78, %79, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %82 = @func_9981() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(14, 13, 3), float64]) */;
  %83 = cast(%75, dtype="bool") /* ty=Tensor[(15, 2, 5), bool] */;
  %84 = shape_of(%77, dtype="int32") /* ty=Tensor[(3), int32] */;
  %85 = cast(%77, dtype="bool") /* ty=Tensor[(15, 2, 5), bool] */;
  %86 = dyn.reshape(%83, %84, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %87 = %67.0;
  %88 = maximum(%80, %81) /* ty=Tensor[(15, 2, 5), int8] */;
  %89 = @func_3120() /* ty=Tensor[(14, 13, 3), float64] */;
  %90 = %82.2;
  %91 = @func_6102() /* ty=Tensor[(14, 13, 3), float64] */;
  %92 = @func_4540() /* ty=Tensor[(14, 13, 3), bool] */;
  %93 = @func_15221() /* ty=Tensor[(14, 13, 3), float32] */;
  %94 = less_equal(%85, %86) /* ty=Tensor[(15, 2, 5), bool] */;
  (%87, %88, %89, %90, %91, %92, %93, %94)
}

def @func_3759() -> Tensor[(14, 13, 3), float64] {
  @func_3541() /* ty=Tensor[(14, 13, 3), float64] */
}

def @func_15193() -> Tensor[(14, 13, 3), float64] {
  %95 = @func_3047() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
  %95.1
}

def @func_3800() -> (Tensor[(14, 13, 3), float64],) {
  %96 = @func_1694() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
  %97 = %96.1;
  (%97,)
}

def @func_15724() -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  %98 = @func_12790() /* ty=(Tensor[(16, 8, 5), int32], Tensor[(14, 13, 3), float64], Tensor[(7, 13, 6), float32]) */;
  %99 = @func_3281() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %100 = @func_8586() /* ty=Tensor[(14, 13, 3), bool] */;
  %101 = %98.1;
  %102 = %99.0;
  (%100, %101, %102)
}

def @func_74() -> (Tensor[(14, 13, 3), float64],) {
  %103 = @func_54() /* ty=Tensor[(14, 13, 3), float64] */;
  (%103,)
}

def @func_14029() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(84), float64], Tensor[(6, 2, 7), float64]) {
  %104 = @func_917() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %105 = @func_541() /* ty=(Tensor[(14, 13, 3), float32],) */;
  %106 = cast(meta[relay.Constant][4] /* ty=Tensor[(84), float64] */, dtype="float64") /* ty=Tensor[(84), float64] */;
  %107 = reshape(%106, newshape=[6, 2, 7]) /* ty=Tensor[(6, 2, 7), float64] */;
  %108 = @func_3636(%107) /* ty=Tensor[(6, 2, 7), float64] */;
  %109 = cast(%108, dtype="float64") /* ty=Tensor[(6, 2, 7), float64] */;
  %110 = %104.0;
  %111 = %105.0;
  %112 = tan(%109) /* ty=Tensor[(6, 2, 7), float64] */;
  (%110, %111, meta[relay.Constant][4] /* ty=Tensor[(84), float64] */, %112)
}

def @func_11169() -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float32]) {
  %113 = @func_6952() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32]) */;
  %114 = @func_541() /* ty=(Tensor[(14, 13, 3), float32],) */;
  %115 = %113.2;
  %116 = %114.0;
  (%115, %116)
}

def @func_8217() -> Tensor[(14, 13, 3), float64] {
  %117 = @func_7925() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
  %117.0
}

def @func_16742() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32]) {
  %118 = @func_3047() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
  %119 = %118.1;
  %120 = @func_3980() /* ty=Tensor[(14, 13, 3), float32] */;
  (%119, %120)
}

def @func_13936() -> Tensor[(14, 13, 3), uint64] {
  %121 = @func_4607() /* ty=(Tensor[(14, 13, 3), uint64], Tensor[(14, 13, 3), int8]) */;
  %121.0
}

def @func_12988() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), int8], Tensor[(14, 13, 3), float32]) {
  %122 = @func_3281() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %123 = @func_4393() /* ty=(Tensor[(14, 13, 3), int8], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
  %124 = @func_3881() /* ty=(Tensor[(14, 13, 3), float32],) */;
  %125 = %122.0;
  %126 = %123.0;
  %127 = %124.0;
  (%125, %126, %127)
}

def @func_10016() -> (Tensor[(14, 13, 3), uint64], Tensor[(14, 13, 3), bool], Tensor[(24), int8], Tensor[(24), int8], Tensor[(120), int8]) {
  %128 = cast(meta[relay.Constant][5] /* ty=Tensor[(24), int8] */, dtype="int8") /* ty=Tensor[(24), int8] */;
  %129 = cast(meta[relay.Constant][6] /* ty=Tensor[(120), int8] */, dtype="int8") /* ty=Tensor[(120), int8] */;
  %130 = reshape(%128, newshape=[24]) /* ty=Tensor[(24), int8] */;
  %131 = reshape(%129, newshape=[60, 2]) /* ty=Tensor[(60, 2), int8] */;
  %132 = @func_6495(%130, %131) /* ty=(Tensor[(14, 13, 3), bool], Tensor[(15, 2, 5), uint64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(60, 2), int8]) */;
  %133 = @func_5061() /* ty=Tensor[(14, 13, 3), uint64] */;
  %134 = @func_4540() /* ty=Tensor[(14, 13, 3), bool] */;
  %135 = %132.5;
  (%133, %134, %135, meta[relay.Constant][5] /* ty=Tensor[(24), int8] */, meta[relay.Constant][6] /* ty=Tensor[(120), int8] */)
}

def @func_12453(%var_12417: Tensor[(2704), float32]) -> (Tensor[(5, 3, 8), int16], Tensor[(14, 13, 3), float32], Tensor[(13, 16, 13), float32], Tensor[(2704), float32], Tensor[(84), float64], Tensor[(1, 84), float64]) {
  %136 = @func_8947() /* ty=(Tensor[(5, 3, 8), int16],) */;
  %137 = @func_3456() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
  %138 = cast(%var_12417, dtype="float32") /* ty=Tensor[(2704), float32] */;
  %139 = reshape(%138, newshape=[13, 16, 13]) /* ty=Tensor[(13, 16, 13), float32] */;
  %140 = @func_6388(%139) /* ty=(Tensor[(13, 16, 13), float32],) */;
  %141 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 84), float64] */, dtype="float64") /* ty=Tensor[(1, 84), float64] */;
  %142 = reshape(%141, newshape=[84]) /* ty=Tensor[(84), float64] */;
  %143 = @func_11915(%142) /* ty=(Tensor[(14, 13, 3), bool], Tensor[(6, 2, 7), float64], Tensor[(84), float64]) */;
  %144 = %136.0;
  %145 = %137.1;
  %146 = %140.0;
  %147 = %143.2;
  (%144, %145, %146, %var_12417, %147, meta[relay.Constant][7] /* ty=Tensor[(1, 84), float64] */)
}

def @func_9388() -> Tensor[(14, 13, 3), float32] {
  %148 = @func_4393() /* ty=(Tensor[(14, 13, 3), int8], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
  %148.2
}

def @func_17239() -> (Tensor[(14, 13, 3), float64],) {
  %149 = @func_13538() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %150 = %149.0;
  (%150,)
}

def @func_3456() -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) {
  %151 = @func_334() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool]) */;
  %152 = %151.6;
  %153 = cast(%152, dtype="float32") /* ty=Tensor[(14, 13, 3), float32] */;
  %154 = reshape(%153, newshape=[14, 13, 3]) /* ty=Tensor[(14, 13, 3), float32] */;
  %155 = @func_900(%154) /* ty=Tensor[(14, 13, 3), float32] */;
  (%152, %155)
}

def @func_15613() -> (Tensor[(14, 13, 3), float64],) {
  %156 = @func_12678() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %157 = %156.0;
  (%157,)
}

def @func_11303() -> (Tensor[(14, 13, 3), float64],) {
  %158 = @func_8329() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) */;
  %159 = %158.0;
  (%159,)
}

def @func_11289() -> (Tensor[(14, 13, 3), float64],) {
  %160 = @func_8962() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
  %161 = %160.1;
  (%161,)
}

def @func_9743() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) {
  %162 = @func_7317() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %163 = @func_4393() /* ty=(Tensor[(14, 13, 3), int8], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
  %164 = %162.0;
  %165 = %163.1;
  (%164, %165)
}

def @func_17031() -> (Tensor[(14, 13, 3), float64],) {
  %166 = @func_8277() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %167 = %166.0;
  (%167,)
}

def @func_9161() -> (Tensor[(14, 13, 3), float64],) {
  %168 = @func_5790() /* ty=Tensor[(14, 13, 3), float64] */;
  (%168,)
}

def @func_650(%var_640: Tensor[(24), int8], %var_641: Tensor[(120), int8]) -> (Tensor[(14, 13, 3), float64], Tensor[(8, 5, 3), bool], Tensor[(24), int8], Tensor[(120), int8]) {
  %169 = @func_334() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool]) */;
  %170 = %169.5;
  %171 = cast(%170, dtype="float64") /* ty=Tensor[(14, 13, 3), float64] */;
  %172 = cast(%var_640, dtype="int8") /* ty=Tensor[(24), int8] */;
  %173 = cast(%var_641, dtype="int8") /* ty=Tensor[(120), int8] */;
  %174 = reshape(%172, newshape=[8, 1, 3]) /* ty=Tensor[(8, 1, 3), int8] */;
  %175 = reshape(%173, newshape=[8, 5, 3]) /* ty=Tensor[(8, 5, 3), int8] */;
  %176 = @func_161(%174, %175) /* ty=(Tensor[(8, 5, 3), bool], Tensor[(14, 13, 3), bool]) */;
  %177 = tan(%171) /* ty=Tensor[(14, 13, 3), float64] */;
  %178 = %176.0;
  (%177, %178, %var_640, %var_641)
}

def @func_14349() -> (Tensor[(14, 13, 3), float64],) {
  %179 = @func_9085() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %180 = %179.0;
  (%180,)
}

def @func_390() -> (Tensor[(14, 13, 3), float64],) {
  %181 = @func_74() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %182 = %181.0;
  (%182,)
}

def @func_3397() -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float32]) {
  %183 = @func_1780() /* ty=(Tensor[(14, 13, 3), float32],) */;
  %184 = %183.0;
  %185 = cast(%184, dtype="float32") /* ty=Tensor[(14, 13, 3), float32] */;
  %186 = reshape(%185, newshape=[14, 13, 3]) /* ty=Tensor[(14, 13, 3), float32] */;
  %187 = @func_900(%186) /* ty=Tensor[(14, 13, 3), float32] */;
  (%184, %187)
}

def @func_3333() -> Tensor[(14, 13, 3), int8] {
  @func_3303() /* ty=Tensor[(14, 13, 3), int8] */
}

def @func_15221() -> Tensor[(14, 13, 3), float32] {
  %188 = @func_12475() /* ty=(Tensor[(14, 13, 3), float32],) */;
  %188.0
}

def @func_15841() -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool]) {
  %189 = @func_9552() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) */;
  %190 = @func_11715() /* ty=Tensor[(14, 13, 3), bool] */;
  %191 = %189.1;
  (%190, %191)
}

def @func_1780() -> (Tensor[(14, 13, 3), float32],) {
  %192 = @func_1626() /* ty=Tensor[(14, 13, 3), float32] */;
  (%192,)
}

def @func_7343(%var_7340: Tensor[(12, 2), int8]) -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(12, 2), int8], Tensor[(120), int8]) {
  %193 = cast(%var_7340, dtype="int8") /* ty=Tensor[(12, 2), int8] */;
  %194 = cast(meta[relay.Constant][8] /* ty=Tensor[(120), int8] */, dtype="int8") /* ty=Tensor[(120), int8] */;
  %195 = cast(meta[relay.Constant][8] /* ty=Tensor[(120), int8] */, dtype="int8") /* ty=Tensor[(120), int8] */;
  %196 = reshape(%193, newshape=[24]) /* ty=Tensor[(24), int8] */;
  %197 = reshape(%194, newshape=[60, 2]) /* ty=Tensor[(60, 2), int8] */;
  %198 = reshape(%195, newshape=[60, 2]) /* ty=Tensor[(60, 2), int8] */;
  %199 = @func_4507(%196, %197, %198) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(120), int8], Tensor[(24), int8], Tensor[(60, 2), bool]) */;
  %200 = @func_5790() /* ty=Tensor[(14, 13, 3), float64] */;
  %201 = %199.3;
  (%200, %201, %var_7340, meta[relay.Constant][8] /* ty=Tensor[(120), int8] */)
}

def @func_16191(%var_16169: Tensor[(336), float64], %var_16174: Tensor[(24), int8], %var_16175: Tensor[(120), int8]) -> (Tensor[(14, 13, 3), float64], Tensor[(14, 4, 6), float64], Tensor[(336), float64], Tensor[(8, 5, 3), bool], Tensor[(24), int8], Tensor[(120), int8]) {
  %202 = cast(%var_16169, dtype="float64") /* ty=Tensor[(336), float64] */;
  %203 = reshape(%202, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), float64] */;
  %204 = @func_2737(%203) /* ty=(Tensor[(14, 4, 6), float64], Tensor[(14, 4, 6), float64]) */;
  %205 = cast(%var_16174, dtype="int8") /* ty=Tensor[(24), int8] */;
  %206 = cast(%var_16175, dtype="int8") /* ty=Tensor[(120), int8] */;
  %207 = reshape(%205, newshape=[12, 2]) /* ty=Tensor[(12, 2), int8] */;
  %208 = reshape(%206, newshape=[120]) /* ty=Tensor[(120), int8] */;
  %209 = @func_2173(%207, %208) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(8, 5, 3), bool], Tensor[(12, 2), int8], Tensor[(120), int8]) */;
  %210 = @func_11751() /* ty=Tensor[(14, 13, 3), float64] */;
  %211 = %204.0;
  %212 = %209.1;
  (%210, %211, %var_16169, %212, %var_16174, %var_16175)
}

def @func_16489() -> (Tensor[(14, 13, 3), float64],) {
  %213 = @func_5790() /* ty=Tensor[(14, 13, 3), float64] */;
  (%213,)
}

def @func_16994() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(120, 1), int8], Tensor[(14, 13, 3), bool]) {
  %214 = @func_15141() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %215 = cast(meta[relay.Constant][9] /* ty=Tensor[(24), int8] */, dtype="int8") /* ty=Tensor[(24), int8] */;
  %216 = cast(meta[relay.Constant][10] /* ty=Tensor[(120, 1), int8] */, dtype="int8") /* ty=Tensor[(120, 1), int8] */;
  %217 = cast(meta[relay.Constant][10] /* ty=Tensor[(120, 1), int8] */, dtype="int8") /* ty=Tensor[(120, 1), int8] */;
  %218 = reshape(%215, newshape=[24]) /* ty=Tensor[(24), int8] */;
  %219 = reshape(%216, newshape=[60, 2]) /* ty=Tensor[(60, 2), int8] */;
  %220 = reshape(%217, newshape=[60, 2]) /* ty=Tensor[(60, 2), int8] */;
  %221 = @func_4507(%218, %219, %220) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(120), int8], Tensor[(24), int8], Tensor[(60, 2), bool]) */;
  %222 = @func_13476() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64]) */;
  %223 = %214.0;
  %224 = %221.0;
  %225 = %222.1;
  (%223, %224, meta[relay.Constant][9] /* ty=Tensor[(24), int8] */, meta[relay.Constant][10] /* ty=Tensor[(120, 1), int8] */, %225)
}

def @func_17130() -> (Tensor[(14, 13, 3), float32],) {
  %226 = @func_14406() /* ty=(Tensor[(14, 13, 3), float32],) */;
  %227 = %226.0;
  (%227,)
}

def @func_15476() -> Tensor[(14, 13, 3), bool] {
  @func_1307() /* ty=Tensor[(14, 13, 3), bool] */
}

def @func_14453() -> (Tensor[(16, 16, 9), float32], Tensor[(84), float64], Tensor[(84), float64], Tensor[(14, 13, 3), float64]) {
  %228 = cast(meta[relay.Constant][11] /* ty=Tensor[(16, 16, 9), float32] */, dtype="float32") /* ty=Tensor[(16, 16, 9), float32] */;
  %229 = cast(meta[relay.Constant][12] /* ty=Tensor[(84), float64] */, dtype="float64") /* ty=Tensor[(84), float64] */;
  %230 = reshape(%229, newshape=[84]) /* ty=Tensor[(84), float64] */;
  %231 = @func_11915(%230) /* ty=(Tensor[(14, 13, 3), bool], Tensor[(6, 2, 7), float64], Tensor[(84), float64]) */;
  %232 = @func_11289() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %233 = sigmoid(%228) /* ty=Tensor[(16, 16, 9), float32] */;
  %234 = %231.2;
  %235 = %232.0;
  (%233, %234, meta[relay.Constant][12] /* ty=Tensor[(84), float64] */, %235)
}

def @func_1018() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), int8]) {
  %236 = @func_390() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %237 = %236.0;
  %238 = cast(%237, dtype="bool") /* ty=Tensor[(14, 13, 3), bool] */;
  %239 = reshape(%238, newshape=[14, 13, 3]) /* ty=Tensor[(14, 13, 3), bool] */;
  %240 = @func_772(%239) /* ty=Tensor[(14, 13, 3), int8] */;
  (%237, %240)
}

def @func_2376() -> (Tensor[(14, 13, 3), float64],) {
  %241 = @func_390() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %242 = %241.0;
  (%242,)
}

def @func_8919() -> (Tensor[(14, 13, 3), float32],) {
  %243 = @func_4911() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
  %244 = %243.0;
  (%244,)
}

def @func_12310() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  %245 = @func_7925() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
  %246 = @func_4965() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %247 = %245.3;
  %248 = %246.0;
  (%247, %248)
}

def @func_15007() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32]) {
  %249 = @func_7019() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %250 = @func_3456() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
  %251 = %249.0;
  %252 = %250.1;
  (%251, %252)
}

def @func_8406() -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) {
  %253 = @func_1780() /* ty=(Tensor[(14, 13, 3), float32],) */;
  %254 = @func_2376() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %255 = %253.0;
  %256 = %254.0;
  (%255, %256)
}

def @func_12181() -> Tensor[(16, 8, 5), int32] {
  %257 = cast(-4 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %258 = cast(meta[relay.Constant][13] /* ty=Tensor[(16, 8, 5), int32] */, dtype="int32") /* ty=Tensor[(16, 8, 5), int32] */;
  multiply(%257, %258) /* ty=Tensor[(16, 8, 5), int32] */
}

def @func_15934() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  %259 = @func_15141() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %260 = %259.0;
  %261 = @func_8881() /* ty=Tensor[(14, 13, 3), float64] */;
  (%260, %261)
}

def @func_8182() -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float32]) {
  %262 = @func_3047() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
  %263 = @func_1278() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
  %264 = @func_3047() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
  %265 = %262.0;
  %266 = %263.2;
  %267 = %264.0;
  (%265, %266, %267)
}

def @func_14674() -> (Tensor[(14, 13, 3), float64],) {
  %268 = @func_2249() /* ty=Tensor[(14, 13, 3), float64] */;
  (%268,)
}

def @func_10417() -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) {
  %269 = @func_5712() /* ty=(Tensor[(14, 13, 3), float32],) */;
  %270 = %269.0;
  %271 = @func_3541() /* ty=Tensor[(14, 13, 3), float64] */;
  (%270, %271)
}

def @func_16436(%var_16365: Tensor[(12, 14, 3), uint32], %var_16366: Tensor[(12, 14, 3), uint32]) -> (Tensor[(12, 14, 3), uint32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(12, 8, 9), float32], Tensor[(5, 3, 8), int16], Tensor[(60, 2), int16], Tensor[(15, 2, 5), bool], Tensor[(14, 13, 3), float64]) {
  %272 = cast(%var_16366, dtype="uint32") /* ty=Tensor[(12, 14, 3), uint32] */;
  %273 = shape_of(%var_16365, dtype="int32") /* ty=Tensor[(3), int32] */;
  %274 = cast(%var_16365, dtype="uint32") /* ty=Tensor[(12, 14, 3), uint32] */;
  %275 = dyn.reshape(%272, %273, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %276 = @func_10640() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %277 = @func_13619() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %278 = @func_3956() /* ty=(Tensor[(12, 8, 9), float32], Tensor[(12, 8, 9), float64]) */;
  %279 = cast(meta[relay.Constant][14] /* ty=Tensor[(60, 2), int16] */, dtype="int16") /* ty=Tensor[(60, 2), int16] */;
  %280 = cast(meta[relay.Constant][14] /* ty=Tensor[(60, 2), int16] */, dtype="int16") /* ty=Tensor[(60, 2), int16] */;
  %281 = reshape(%279, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), int16] */;
  %282 = reshape(%280, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), int16] */;
  %283 = @func_15443() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(15, 2, 5), int8], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32], Tensor[(15, 2, 5), bool]) */;
  %284 = @func_15443() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(15, 2, 5), int8], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32], Tensor[(15, 2, 5), bool]) */;
  %285 = right_shift(%274, %275) /* ty=Tensor[(12, 14, 3), uint32] */;
  %286 = %276.0;
  %287 = @func_13074() /* ty=Tensor[(14, 13, 3), float64] */;
  %288 = %277.0;
  %289 = %278.0;
  %290 = @func_465(%281, %282) /* ty=Tensor[(5, 3, 8), int16] */;
  %291 = %283.7;
  %292 = %284.4;
  (%285, %286, %287, %288, %289, %290, meta[relay.Constant][14] /* ty=Tensor[(60, 2), int16] */, %291, %292)
}

def @func_4137() -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) {
  %293 = @func_11() /* ty=(Tensor[(14, 13, 3), bool],) */;
  %294 = @func_1694() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
  %295 = %293.0;
  %296 = %294.0;
  (%295, %296)
}

def @func_6117() -> Tensor[(15, 2, 5), uint64] {
  %297 = cast(meta[relay.Constant][16] /* ty=Tensor[(15, 2, 5), uint64] */, dtype="uint64") /* ty=Tensor[(15, 2, 5), uint64] */;
  %298 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(15, 2, 5), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %299 = cast(meta[relay.Constant][15] /* ty=Tensor[(15, 2, 5), uint64] */, dtype="uint64") /* ty=Tensor[(15, 2, 5), uint64] */;
  %300 = dyn.reshape(%297, %298, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  logical_xor(%299, %300) /* ty=Tensor[(15, 2, 5), uint64] */
}

def @func_8820() -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), int8]) {
  %301 = @func_1307() /* ty=Tensor[(14, 13, 3), bool] */;
  %302 = @func_3303() /* ty=Tensor[(14, 13, 3), int8] */;
  (%301, %302)
}

def @func_5550(%var_5547: Tensor[(4, 14, 2), float32]) -> (Tensor[(4, 14, 2), float32],) {
  %303 = cast(%var_5547, dtype="float32") /* ty=Tensor[(4, 14, 2), float32] */;
  %304 = log2(%303) /* ty=Tensor[(4, 14, 2), float32] */;
  (%304,)
}

def @func_1424(%var_1393: Tensor[(14, 13, 3), float32]) -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(24), int8]) {
  %305 = @func_1278() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
  %306 = %305.2;
  %307 = cast(%var_1393, dtype="bool") /* ty=Tensor[(14, 13, 3), bool] */;
  %308 = shape_of(%306, dtype="int32") /* ty=Tensor[(3), int32] */;
  %309 = cast(%306, dtype="bool") /* ty=Tensor[(14, 13, 3), bool] */;
  %310 = dyn.reshape(%307, %308, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %311 = @func_829() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
  %312 = @func_369() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(3, 40), int8], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
  %313 = less(%309, %310) /* ty=Tensor[(14, 13, 3), bool] */;
  %314 = %311.1;
  %315 = %312.1;
  (%313, %314, %315)
}

def @func_6042() -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) {
  %316 = @func_4393() /* ty=(Tensor[(14, 13, 3), int8], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
  %317 = @func_26() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %318 = %316.2;
  %319 = %317.0;
  %320 = @func_5867() /* ty=Tensor[(14, 13, 3), bool] */;
  (%318, %319, %320)
}

def @func_8720(%var_8704: Tensor[(13, 5, 10), float64], %var_8709: Tensor[(630), uint32]) -> (Tensor[(13, 5, 10), float64], Tensor[(7, 9, 10), uint32], Tensor[(70), uint32], Tensor[(630), uint32]) {
  %321 = cast(%var_8704, dtype="float64") /* ty=Tensor[(13, 5, 10), float64] */;
  %322 = cast(meta[relay.Constant][17] /* ty=Tensor[(70), uint32] */, dtype="uint32") /* ty=Tensor[(70), uint32] */;
  %323 = cast(%var_8709, dtype="uint32") /* ty=Tensor[(630), uint32] */;
  %324 = reshape(%322, newshape=[7, 1, 10]) /* ty=Tensor[(7, 1, 10), uint32] */;
  %325 = reshape(%323, newshape=[7, 9, 10]) /* ty=Tensor[(7, 9, 10), uint32] */;
  %326 = @func_4877(%324, %325) /* ty=(Tensor[(7, 9, 10), uint32],) */;
  %327 = atan(%321) /* ty=Tensor[(13, 5, 10), float64] */;
  %328 = %326.0;
  (%327, %328, meta[relay.Constant][17] /* ty=Tensor[(70), uint32] */, %var_8709)
}

def @func_8962() -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) {
  %329 = @func_3047() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
  %330 = %329.0;
  %331 = @func_4442() /* ty=Tensor[(14, 13, 3), float64] */;
  (%330, %331)
}

def @func_16575() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(24), int8]) {
  %332 = @func_6247() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(12, 2), int8], Tensor[(6, 4), int8], Tensor[(120), int8], Tensor[(14, 13, 3), float64]) */;
  %333 = cast(meta[relay.Constant][18] /* ty=Tensor[(24), int8] */, dtype="int8") /* ty=Tensor[(24), int8] */;
  %334 = reshape(%333, newshape=[24]) /* ty=Tensor[(24), int8] */;
  %335 = @func_2359(%334) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(24), int8], Tensor[(14, 13, 3), float64]) */;
  %336 = %332.0;
  %337 = %335.0;
  (%336, %337, meta[relay.Constant][18] /* ty=Tensor[(24), int8] */)
}

def @main(%var_17367: Tensor[(13, 3, 13), float32]) -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(13, 3, 13), float64], Tensor[(13, 3, 13), float64], Tensor[(13, 3, 13), int8]) {
  %338 = @func_15693() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %339 = cast(meta[relay.Constant][19] /* ty=Tensor[(13, 3, 13), float32] */, dtype="float64") /* ty=Tensor[(13, 3, 13), float64] */;
  %340 = sin(%339) /* ty=Tensor[(13, 3, 13), float64] */;
  %341 = cast(%340, dtype="float64") /* ty=Tensor[(13, 3, 13), float64] */;
  %342 = cast(meta[relay.Constant][19] /* ty=Tensor[(13, 3, 13), float32] */, dtype="bool") /* ty=Tensor[(13, 3, 13), bool] */;
  %343 = shape_of(%var_17367, dtype="int32") /* ty=Tensor[(3), int32] */;
  %344 = cast(%var_17367, dtype="bool") /* ty=Tensor[(13, 3, 13), bool] */;
  %345 = dyn.reshape(%342, %343, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %346 = not_equal(%344, %345) /* ty=Tensor[(13, 3, 13), bool] */;
  %347 = cast(meta[relay.Constant][20] /* ty=Tensor[(13, 3, 13), bool] */, dtype="float64") /* ty=Tensor[(13, 3, 13), float64] */;
  %348 = shape_of(%346, dtype="int32") /* ty=Tensor[(3), int32] */;
  %349 = cast(%346, dtype="float64") /* ty=Tensor[(13, 3, 13), float64] */;
  %350 = dyn.reshape(%347, %348, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %351 = cast(%var_17367, dtype="int8") /* ty=Tensor[(13, 3, 13), int8] */;
  %352 = shape_of(%340, dtype="int32") /* ty=Tensor[(3), int32] */;
  %353 = cast(%340, dtype="int8") /* ty=Tensor[(13, 3, 13), int8] */;
  %354 = dyn.reshape(%351, %352, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %355 = @func_9330() /* ty=Tensor[(14, 13, 3), float64] */;
  %356 = %338.0;
  %357 = log2(%341) /* ty=Tensor[(13, 3, 13), float64] */;
  %358 = floor_mod(%349, %350) /* ty=Tensor[(13, 3, 13), float64] */;
  %359 = right_shift(%353, %354) /* ty=Tensor[(13, 3, 13), int8] */;
  (%355, %356, %357, %358, %359)
}

def @func_13476() -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64]) {
  %360 = @func_11715() /* ty=Tensor[(14, 13, 3), bool] */;
  %361 = @func_13335() /* ty=Tensor[(14, 13, 3), bool] */;
  %362 = @func_2569() /* ty=Tensor[(14, 13, 3), float64] */;
  (%360, %361, %362)
}

def @func_2285(%var_2275: Tensor[(24), int8]) -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(120), int8], Tensor[(24), int8], Tensor[(120), int8]) {
  %363 = @func_390() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %364 = cast(%var_2275, dtype="int8") /* ty=Tensor[(24), int8] */;
  %365 = cast(meta[relay.Constant][21] /* ty=Tensor[(120), int8] */, dtype="int8") /* ty=Tensor[(120), int8] */;
  %366 = reshape(%364, newshape=[12, 2]) /* ty=Tensor[(12, 2), int8] */;
  %367 = reshape(%365, newshape=[120]) /* ty=Tensor[(120), int8] */;
  %368 = @func_2173(%366, %367) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(8, 5, 3), bool], Tensor[(12, 2), int8], Tensor[(120), int8]) */;
  %369 = %363.0;
  %370 = @func_1626() /* ty=Tensor[(14, 13, 3), float32] */;
  %371 = %368.3;
  (%369, %370, %371, %var_2275, meta[relay.Constant][21] /* ty=Tensor[(120), int8] */)
}

def @func_1251(%var_1226: Tensor[(546), bool]) -> (Tensor[(24), int8], Tensor[(14, 13, 3), int8], Tensor[(546), bool], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) {
  %372 = @func_369() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(3, 40), int8], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
  %373 = cast(%var_1226, dtype="bool") /* ty=Tensor[(546), bool] */;
  %374 = reshape(%373, newshape=[14, 13, 3]) /* ty=Tensor[(14, 13, 3), bool] */;
  %375 = @func_541() /* ty=(Tensor[(14, 13, 3), float32],) */;
  %376 = @func_26() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %377 = %372.1;
  %378 = @func_772(%374) /* ty=Tensor[(14, 13, 3), int8] */;
  %379 = %375.0;
  %380 = %376.0;
  (%377, %378, %var_1226, %379, %380)
}

def @func_5867() -> Tensor[(14, 13, 3), bool] {
  %381 = @func_2026() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) */;
  %381.3
}

def @func_16949() -> Tensor[(14, 13, 3), float64] {
  %382 = @func_12483() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %382.0
}

def @func_5318() -> (Tensor[(14, 13, 3), float32],) {
  %383 = @func_1626() /* ty=Tensor[(14, 13, 3), float32] */;
  (%383,)
}

def @func_7975(%var_7936: Tensor[(3, 1, 15), float64], %var_7937: Tensor[(3, 12, 15), float64]) -> (Tensor[(3, 12, 15), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(14, 13, 3), float64]) {
  %384 = cast(%var_7936, dtype="float64") /* ty=Tensor[(3, 1, 15), float64] */;
  %385 = cast(%var_7937, dtype="float64") /* ty=Tensor[(3, 12, 15), float64] */;
  %386 = cast(meta[relay.Constant][22] /* ty=Tensor[(24), int8] */, dtype="int8") /* ty=Tensor[(24), int8] */;
  %387 = reshape(%386, newshape=[24]) /* ty=Tensor[(24), int8] */;
  %388 = @func_7678(%387) /* ty=(Tensor[(120), int16], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(14, 13, 3), bool]) */;
  %389 = cast(meta[relay.Constant][22] /* ty=Tensor[(24), int8] */, dtype="int8") /* ty=Tensor[(24), int8] */;
  %390 = reshape(%389, newshape=[24]) /* ty=Tensor[(24), int8] */;
  %391 = @func_1135(%390) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), bool], Tensor[(24), int8], Tensor[(30, 4), uint32], Tensor[(14, 13, 3), float64]) */;
  %392 = power(%384, %385) /* ty=Tensor[(3, 12, 15), float64] */;
  %393 = @func_2249() /* ty=Tensor[(14, 13, 3), float64] */;
  %394 = %388.2;
  %395 = %391.0;
  (%392, %393, %394, meta[relay.Constant][22] /* ty=Tensor[(24), int8] */, %395)
}

def @func_15225() -> Tensor[(14, 13, 3), float64] {
  @func_3541() /* ty=Tensor[(14, 13, 3), float64] */
}

def @func_13335() -> Tensor[(14, 13, 3), bool] {
  @func_5515() /* ty=Tensor[(14, 13, 3), bool] */
}

def @func_13538() -> (Tensor[(14, 13, 3), float64],) {
  %396 = @func_8881() /* ty=Tensor[(14, 13, 3), float64] */;
  (%396,)
}

def @func_7076() -> Tensor[(14, 13, 3), bool] {
  @func_4540() /* ty=Tensor[(14, 13, 3), bool] */
}

def @func_13049() -> Tensor[(14, 13, 3), bool] {
  @func_7076() /* ty=Tensor[(14, 13, 3), bool] */
}

def @func_7728(%var_7721: Tensor[(6, 6, 2), float64]) -> Tensor[(6, 6, 2), float64] {
  %397 = cast(%var_7721, dtype="float64") /* ty=Tensor[(6, 6, 2), float64] */;
  cos(%397) /* ty=Tensor[(6, 6, 2), float64] */
}

def @func_12121() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  %398 = @func_11477() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %399 = @func_26() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %400 = %398.0;
  %401 = %399.0;
  (%400, %401)
}

def @func_3120() -> Tensor[(14, 13, 3), float64] {
  %402 = @func_2324() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %402.0
}

def @func_6952() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32]) {
  %403 = @func_978() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) */;
  %404 = @func_6365() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(5, 3, 8), int16], Tensor[(120), int16]) */;
  %405 = @func_541() /* ty=(Tensor[(14, 13, 3), float32],) */;
  %406 = %403.0;
  %407 = %404.0;
  %408 = %405.0;
  (%406, %407, %408)
}

def @func_8691() -> Tensor[(14, 13, 3), float64] {
  %409 = @func_5232() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %409.0
}

def @func_4689() -> (Tensor[(14, 13, 3), int8], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  %410 = @func_1542() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %411 = @func_3333() /* ty=Tensor[(14, 13, 3), int8] */;
  %412 = @func_4442() /* ty=Tensor[(14, 13, 3), float64] */;
  %413 = %410.0;
  (%411, %412, %413)
}

def @func_16538() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  %414 = @func_10068() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %415 = @func_8435() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %416 = %414.0;
  %417 = %415.0;
  (%416, %417)
}

def @func_15270() -> (Tensor[(14, 13, 3), float64],) {
  %418 = @func_4756() /* ty=Tensor[(14, 13, 3), float64] */;
  (%418,)
}

def @func_1278() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) {
  %419 = @func_390() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %420 = @func_11() /* ty=(Tensor[(14, 13, 3), bool],) */;
  %421 = %420.0;
  %422 = cast(%421, dtype="float32") /* ty=Tensor[(14, 13, 3), float32] */;
  %423 = reshape(%422, newshape=[14, 13, 3]) /* ty=Tensor[(14, 13, 3), float32] */;
  %424 = %419.0;
  %425 = @func_900(%423) /* ty=Tensor[(14, 13, 3), float32] */;
  (%424, %421, %425)
}

def @func_1723() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) {
  %426 = @func_829() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
  %427 = %426.1;
  %428 = cast(%427, dtype="float32") /* ty=Tensor[(14, 13, 3), float32] */;
  %429 = reshape(%428, newshape=[14, 13, 3]) /* ty=Tensor[(14, 13, 3), float32] */;
  %430 = @func_1424(%429) /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(24), int8]) */;
  %431 = %430.0;
  (%427, %431)
}

def @func_3980() -> Tensor[(14, 13, 3), float32] {
  @func_1626() /* ty=Tensor[(14, 13, 3), float32] */
}

def @func_16219() -> Tensor[(14, 13, 3), float64] {
  @func_6013() /* ty=Tensor[(14, 13, 3), float64] */
}

def @func_12483() -> (Tensor[(14, 13, 3), float64],) {
  %432 = @func_1278() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
  %433 = %432.0;
  (%433,)
}

def @func_7019() -> (Tensor[(14, 13, 3), float64],) {
  %434 = @func_2249() /* ty=Tensor[(14, 13, 3), float64] */;
  (%434,)
}

def @func_334() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool]) {
  %435 = @func_11() /* ty=(Tensor[(14, 13, 3), bool],) */;
  %436 = %435.0;
  %437 = cast(%436, dtype="float32") /* ty=Tensor[(14, 13, 3), float32] */;
  %438 = @func_74() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %439 = @func_74() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %440 = @func_74() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %441 = @func_11() /* ty=(Tensor[(14, 13, 3), bool],) */;
  %442 = @func_11() /* ty=(Tensor[(14, 13, 3), bool],) */;
  %443 = @func_54() /* ty=Tensor[(14, 13, 3), float64] */;
  %444 = log10(%437) /* ty=Tensor[(14, 13, 3), float32] */;
  %445 = %438.0;
  %446 = @func_54() /* ty=Tensor[(14, 13, 3), float64] */;
  %447 = %439.0;
  %448 = %440.0;
  %449 = %441.0;
  %450 = %442.0;
  (%443, %444, %445, %446, %447, %448, %449, %450)
}

def @func_4877(%var_4857: Tensor[(7, 1, 10), uint32], %var_4858: Tensor[(7, 9, 10), uint32]) -> (Tensor[(7, 9, 10), uint32],) {
  %451 = cast(%var_4857, dtype="uint32") /* ty=Tensor[(7, 1, 10), uint32] */;
  %452 = cast(%var_4858, dtype="uint32") /* ty=Tensor[(7, 9, 10), uint32] */;
  %453 = bitwise_or(%451, %452) /* ty=Tensor[(7, 9, 10), uint32] */;
  (%453,)
}

def @func_1694() -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) {
  %454 = @func_917() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %455 = %454.0;
  %456 = cast(%455, dtype="float32") /* ty=Tensor[(14, 13, 3), float32] */;
  %457 = @func_334() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool]) */;
  %458 = sin(%456) /* ty=Tensor[(14, 13, 3), float32] */;
  %459 = %457.4;
  (%458, %459)
}

def @func_4507(%var_4478: Tensor[(24), int8], %var_4479: Tensor[(60, 2), int8], %var_4498: Tensor[(60, 2), int8]) -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(120), int8], Tensor[(24), int8], Tensor[(60, 2), bool]) {
  %460 = @func_829() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
  %461 = @func_2521() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %462 = cast(%var_4478, dtype="int8") /* ty=Tensor[(24), int8] */;
  %463 = cast(%var_4479, dtype="int8") /* ty=Tensor[(60, 2), int8] */;
  %464 = reshape(%462, newshape=[12, 2]) /* ty=Tensor[(12, 2), int8] */;
  %465 = reshape(%463, newshape=[120]) /* ty=Tensor[(120), int8] */;
  %466 = @func_2173(%464, %465) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(8, 5, 3), bool], Tensor[(12, 2), int8], Tensor[(120), int8]) */;
  %467 = cast(%var_4498, dtype="bool") /* ty=Tensor[(60, 2), bool] */;
  %468 = shape_of(%var_4479, dtype="int32") /* ty=Tensor[(2), int32] */;
  %469 = cast(%var_4479, dtype="bool") /* ty=Tensor[(60, 2), bool] */;
  %470 = dyn.reshape(%467, %468, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %471 = %460.0;
  %472 = @func_3759() /* ty=Tensor[(14, 13, 3), float64] */;
  %473 = @func_3541() /* ty=Tensor[(14, 13, 3), float64] */;
  %474 = %461.0;
  %475 = %466.3;
  %476 = equal(%469, %470) /* ty=Tensor[(60, 2), bool] */;
  (%471, %472, %473, %474, %475, %var_4478, %476)
}

def @func_11274(%var_11272: Tensor[(1848), int8]) -> (Tensor[(14, 13, 3), bool], Tensor[(12, 14, 11), float64], Tensor[(1848), int8]) {
  %477 = @func_9743() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) */;
  %478 = cast(%var_11272, dtype="int8") /* ty=Tensor[(1848), int8] */;
  %479 = cast(%var_11272, dtype="int8") /* ty=Tensor[(1848), int8] */;
  %480 = reshape(%478, newshape=[12, 14, 11]) /* ty=Tensor[(12, 14, 11), int8] */;
  %481 = reshape(%479, newshape=[12, 14, 11]) /* ty=Tensor[(12, 14, 11), int8] */;
  %482 = @func_8356(%480, %481) /* ty=(Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), float64]) */;
  %483 = %477.1;
  %484 = %482.1;
  (%483, %484, %var_11272)
}

def @func_14321() -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), bool]) {
  %485 = @func_4393() /* ty=(Tensor[(14, 13, 3), int8], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
  %486 = @func_5886() /* ty=(Tensor[(14, 13, 3), bool],) */;
  %487 = %485.2;
  %488 = %486.0;
  (%487, %488)
}

def @func_12971() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  %489 = @func_917() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %490 = @func_4911() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
  %491 = %489.0;
  %492 = %490.1;
  (%491, %492)
}

def @func_10396() -> Tensor[(14, 13, 3), float64] {
  @func_9330() /* ty=Tensor[(14, 13, 3), float64] */
}

def @func_5061() -> Tensor[(14, 13, 3), uint64] {
  %493 = @func_4607() /* ty=(Tensor[(14, 13, 3), uint64], Tensor[(14, 13, 3), int8]) */;
  %493.0
}

def @func_14580() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  %494 = @func_5232() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %495 = @func_11200() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
  %496 = @func_14349() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %497 = %494.0;
  %498 = %495.0;
  %499 = %496.0;
  %500 = @func_6102() /* ty=Tensor[(14, 13, 3), float64] */;
  (%497, %498, %499, %500)
}

def @func_9714() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  %501 = @func_6332() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64]) */;
  %502 = @func_2980() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
  %503 = @func_7019() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %504 = %501.1;
  %505 = %502.0;
  %506 = %503.0;
  (%504, %505, %506)
}

def @func_14155() -> (Tensor[(14, 13, 3), float64],) {
  %507 = @func_12121() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
  %508 = %507.0;
  (%508,)
}

def @func_3541() -> Tensor[(14, 13, 3), float64] {
  %509 = @func_917() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %509.0
}

def @func_15898() -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64]) {
  %510 = @func_12230() /* ty=(Tensor[(14, 13, 3), bool],) */;
  %511 = @func_9552() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) */;
  %512 = %510.0;
  %513 = %511.0;
  (%512, %513)
}

def @func_7678(%var_7633: Tensor[(24), int8]) -> (Tensor[(120), int16], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(14, 13, 3), bool]) {
  %514 = @func_6365() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(5, 3, 8), int16], Tensor[(120), int16]) */;
  %515 = @func_6817() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %516 = cast(%var_7633, dtype="int8") /* ty=Tensor[(24), int8] */;
  %517 = reshape(%516, newshape=[24]) /* ty=Tensor[(24), int8] */;
  %518 = @func_2285(%517) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(120), int8], Tensor[(24), int8], Tensor[(120), int8]) */;
  %519 = @func_1278() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
  %520 = %514.3;
  %521 = @func_5867() /* ty=Tensor[(14, 13, 3), bool] */;
  %522 = @func_3759() /* ty=Tensor[(14, 13, 3), float64] */;
  %523 = %515.0;
  %524 = %518.0;
  %525 = %519.1;
  (%520, %521, %522, %523, %524, %var_7633, %525)
}

def @func_4219(%var_4215: Tensor[(120), int16]) -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(120), int16]) {
  %526 = @func_3281() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %527 = @func_4137() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
  %528 = @func_2521() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %529 = cast(%var_4215, dtype="int16") /* ty=Tensor[(120), int16] */;
  %530 = reshape(%529, newshape=[120, 1]) /* ty=Tensor[(120, 1), int16] */;
  %531 = @func_1597(%530) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(5, 3, 8), int16], Tensor[(120, 1), int16]) */;
  %532 = %526.0;
  %533 = %527.0;
  %534 = %528.0;
  %535 = %531.0;
  (%532, %533, %534, %535, %var_4215)
}

def @func_465(%var_453: Tensor[(5, 3, 8), int16], %var_454: Tensor[(5, 3, 8), int16]) -> Tensor[(5, 3, 8), int16] {
  %536 = cast(%var_454, dtype="int16") /* ty=Tensor[(5, 3, 8), int16] */;
  %537 = shape_of(%var_453, dtype="int32") /* ty=Tensor[(3), int32] */;
  %538 = cast(%var_453, dtype="int16") /* ty=Tensor[(5, 3, 8), int16] */;
  %539 = dyn.reshape(%536, %537, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  right_shift(%538, %539) /* ty=Tensor[(5, 3, 8), int16] */
}

def @func_12656() -> Tensor[(14, 13, 3), bool] {
  @func_11715() /* ty=Tensor[(14, 13, 3), bool] */
}

def @func_4607() -> (Tensor[(14, 13, 3), uint64], Tensor[(14, 13, 3), int8]) {
  %540 = @func_3800() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %541 = %540.0;
  %542 = cast(meta[relay.Constant][23] /* ty=Tensor[(14, 13, 3), float64] */, dtype="bool") /* ty=Tensor[(14, 13, 3), bool] */;
  %543 = shape_of(%541, dtype="int32") /* ty=Tensor[(3), int32] */;
  %544 = cast(%541, dtype="bool") /* ty=Tensor[(14, 13, 3), bool] */;
  %545 = dyn.reshape(%542, %543, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %546 = logical_and(%544, %545) /* ty=Tensor[(14, 13, 3), bool] */;
  %547 = cast(meta[relay.Constant][24] /* ty=Tensor[(14, 13, 3), bool] */, dtype="uint64") /* ty=Tensor[(14, 13, 3), uint64] */;
  %548 = shape_of(%546, dtype="int32") /* ty=Tensor[(3), int32] */;
  %549 = cast(%546, dtype="uint64") /* ty=Tensor[(14, 13, 3), uint64] */;
  %550 = dyn.reshape(%547, %548, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %551 = cast(%546, dtype="bool") /* ty=Tensor[(14, 13, 3), bool] */;
  %552 = reshape(%551, newshape=[14, 13, 3]) /* ty=Tensor[(14, 13, 3), bool] */;
  %553 = bitwise_xor(%549, %550) /* ty=Tensor[(14, 13, 3), uint64] */;
  %554 = @func_772(%552) /* ty=Tensor[(14, 13, 3), int8] */;
  (%553, %554)
}

def @func_16664() -> (Tensor[(14, 13, 3), float64], Tensor[(16, 16, 9), float32], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), bool]) {
  %555 = @func_15934() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
  %556 = @func_14453() /* ty=(Tensor[(16, 16, 9), float32], Tensor[(84), float64], Tensor[(84), float64], Tensor[(14, 13, 3), float64]) */;
  %557 = @func_8182() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float32]) */;
  %558 = @func_13296() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool]) */;
  %559 = %555.0;
  %560 = %556.0;
  %561 = %557.2;
  %562 = %558.0;
  (%559, %560, %561, %562)
}

def @func_4442() -> Tensor[(14, 13, 3), float64] {
  @func_3541() /* ty=Tensor[(14, 13, 3), float64] */
}

def @func_9196() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), int8]) {
  %563 = @func_4756() /* ty=Tensor[(14, 13, 3), float64] */;
  %564 = cast(%563, dtype="bool") /* ty=Tensor[(14, 13, 3), bool] */;
  %565 = reshape(%564, newshape=[14, 13, 3]) /* ty=Tensor[(14, 13, 3), bool] */;
  %566 = @func_3541() /* ty=Tensor[(14, 13, 3), float64] */;
  %567 = @func_772(%565) /* ty=Tensor[(14, 13, 3), int8] */;
  (%566, %563, %567)
}

def @func_8191() -> (Tensor[(4, 5, 8), float64],) {
  %568 = cast(meta[relay.Constant][25] /* ty=Tensor[(4, 5, 8), float64] */, dtype="float64") /* ty=Tensor[(4, 5, 8), float64] */;
  %569 = exp(%568) /* ty=Tensor[(4, 5, 8), float64] */;
  (%569,)
}

def @func_8881() -> Tensor[(14, 13, 3), float64] {
  %570 = @func_7317() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %570.0
}

def @func_15141() -> (Tensor[(14, 13, 3), float64],) {
  %571 = @func_8435() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %572 = %571.0;
  (%572,)
}

def @func_2324() -> (Tensor[(14, 13, 3), float64],) {
  %573 = @func_917() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %574 = %573.0;
  (%574,)
}

def @func_5232() -> (Tensor[(14, 13, 3), float64],) {
  %575 = @func_4965() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %576 = %575.0;
  (%576,)
}

def @func_4393() -> (Tensor[(14, 13, 3), int8], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) {
  %577 = @func_11() /* ty=(Tensor[(14, 13, 3), bool],) */;
  %578 = @func_2980() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
  %579 = %578.1;
  %580 = @func_3456() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
  %581 = %580.1;
  %582 = cast(%581, dtype="float32") /* ty=Tensor[(14, 13, 3), float32] */;
  %583 = shape_of(%579, dtype="int32") /* ty=Tensor[(3), int32] */;
  %584 = cast(%579, dtype="float32") /* ty=Tensor[(14, 13, 3), float32] */;
  %585 = dyn.reshape(%582, %583, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %586 = @func_3333() /* ty=Tensor[(14, 13, 3), int8] */;
  %587 = %577.0;
  %588 = minimum(%584, %585) /* ty=Tensor[(14, 13, 3), float32] */;
  (%586, %587, %588)
}

def @func_161(%var_133: Tensor[(8, 1, 3), int8], %var_134: Tensor[(8, 5, 3), int8]) -> (Tensor[(8, 5, 3), bool], Tensor[(14, 13, 3), bool]) {
  %589 = cast(%var_133, dtype="bool") /* ty=Tensor[(8, 1, 3), bool] */;
  %590 = cast(%var_134, dtype="bool") /* ty=Tensor[(8, 5, 3), bool] */;
  %591 = @func_11() /* ty=(Tensor[(14, 13, 3), bool],) */;
  %592 = equal(%589, %590) /* ty=Tensor[(8, 5, 3), bool] */;
  %593 = %591.0;
  (%592, %593)
}

def @func_9552() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) {
  %594 = @func_8820() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), int8]) */;
  %595 = @func_54() /* ty=Tensor[(14, 13, 3), float64] */;
  %596 = %594.0;
  (%595, %596)
}

def @func_3881() -> (Tensor[(14, 13, 3), float32],) {
  %597 = @func_3047() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
  %598 = %597.0;
  (%598,)
}

def @func_15290() -> Tensor[(14, 13, 3), float64] {
  %599 = @func_11289() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %599.0
}

def @func_5962(%var_5928: Tensor[(14, 13, 3), float64]) -> (Tensor[(14, 13, 3), int64], Tensor[(14, 13, 3), float32]) {
  %600 = @func_5232() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %601 = %600.0;
  %602 = cast(%var_5928, dtype="int64") /* ty=Tensor[(14, 13, 3), int64] */;
  %603 = shape_of(%601, dtype="int32") /* ty=Tensor[(3), int32] */;
  %604 = cast(%601, dtype="int64") /* ty=Tensor[(14, 13, 3), int64] */;
  %605 = dyn.reshape(%602, %603, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %606 = cast(%601, dtype="float32") /* ty=Tensor[(14, 13, 3), float32] */;
  %607 = subtract(%604, %605) /* ty=Tensor[(14, 13, 3), int64] */;
  %608 = atan(%606) /* ty=Tensor[(14, 13, 3), float32] */;
  (%607, %608)
}

def @func_4911() -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) {
  %609 = @func_1278() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
  %610 = @func_390() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %611 = %609.2;
  %612 = %610.0;
  (%611, %612)
}

def @func_8329() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) {
  %613 = @func_829() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
  %614 = @func_1723() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) */;
  %615 = %613.0;
  %616 = %614.1;
  (%615, %616)
}

def @func_9029() -> (Tensor[(14, 13, 3), float64], Tensor[(3, 40), int8], Tensor[(8, 5, 3), bool], Tensor[(24), int8]) {
  %617 = @func_1542() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %618 = @func_369() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(3, 40), int8], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
  %619 = cast(meta[relay.Constant][26] /* ty=Tensor[(24), int8] */, dtype="int8") /* ty=Tensor[(24), int8] */;
  %620 = %618.2;
  %621 = cast(%620, dtype="int8") /* ty=Tensor[(3, 40), int8] */;
  %622 = reshape(%619, newshape=[8, 1, 3]) /* ty=Tensor[(8, 1, 3), int8] */;
  %623 = reshape(%621, newshape=[8, 5, 3]) /* ty=Tensor[(8, 5, 3), int8] */;
  %624 = @func_161(%622, %623) /* ty=(Tensor[(8, 5, 3), bool], Tensor[(14, 13, 3), bool]) */;
  %625 = %617.0;
  %626 = %624.0;
  (%625, %620, %626, meta[relay.Constant][26] /* ty=Tensor[(24), int8] */)
}

def @func_5481() -> Tensor[(14, 13, 3), float32] {
  @func_3980() /* ty=Tensor[(14, 13, 3), float32] */
}

def @func_4041() -> (Tensor[(14, 13, 3), bool],) {
  %627 = @func_1307() /* ty=Tensor[(14, 13, 3), bool] */;
  (%627,)
}

def @func_7448(%var_7421: Tensor[(12, 11, 14), float64], %var_7422: Tensor[(12, 11, 14), float64]) -> (Tensor[(12, 11, 14), float64], Tensor[(14, 13, 3), int8], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) {
  %628 = cast(%var_7422, dtype="float64") /* ty=Tensor[(12, 11, 14), float64] */;
  %629 = shape_of(%var_7421, dtype="int32") /* ty=Tensor[(3), int32] */;
  %630 = cast(%var_7421, dtype="float64") /* ty=Tensor[(12, 11, 14), float64] */;
  %631 = dyn.reshape(%628, %629, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %632 = @func_4607() /* ty=(Tensor[(14, 13, 3), uint64], Tensor[(14, 13, 3), int8]) */;
  %633 = @func_5359() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %634 = @func_4137() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
  %635 = floor_divide(%630, %631) /* ty=Tensor[(12, 11, 14), float64] */;
  %636 = %632.1;
  %637 = %633.0;
  %638 = %634.0;
  (%635, %636, %637, %638)
}

def @func_8763() -> (Tensor[(14, 13, 3), float64],) {
  %639 = @func_7825() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
  %640 = %639.1;
  (%640,)
}

def @func_11382(%var_11380: Tensor[(336), float64]) -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), bool], Tensor[(120), int16], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 4, 6), float64], Tensor[(336), float64]) {
  %641 = @func_5712() /* ty=(Tensor[(14, 13, 3), float32],) */;
  %642 = cast(meta[relay.Constant][27] /* ty=Tensor[(120), int16] */, dtype="int16") /* ty=Tensor[(120), int16] */;
  %643 = reshape(%642, newshape=[120]) /* ty=Tensor[(120), int16] */;
  %644 = @func_4219(%643) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(120), int16]) */;
  %645 = @func_3800() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %646 = @func_541() /* ty=(Tensor[(14, 13, 3), float32],) */;
  %647 = cast(%var_11380, dtype="float64") /* ty=Tensor[(336), float64] */;
  %648 = reshape(%647, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), float64] */;
  %649 = @func_2737(%648) /* ty=(Tensor[(14, 4, 6), float64], Tensor[(14, 4, 6), float64]) */;
  %650 = %641.0;
  %651 = %644.1;
  %652 = @func_4540() /* ty=Tensor[(14, 13, 3), bool] */;
  %653 = %645.0;
  %654 = %646.0;
  %655 = @func_5790() /* ty=Tensor[(14, 13, 3), float64] */;
  %656 = %649.1;
  (%650, %651, meta[relay.Constant][27] /* ty=Tensor[(120), int16] */, %652, %653, %654, %655, %656, %var_11380)
}

def @func_8568(%var_8540: Tensor[(6, 4, 4), uint8]) -> (Tensor[(6, 4, 4), uint8], Tensor[(14, 13, 3), float64], Tensor[(6, 4, 4), bool], Tensor[(14, 13, 3), float32]) {
  %657 = cast(meta[relay.Constant][28] /* ty=Tensor[(6, 4, 4), uint8] */, dtype="uint8") /* ty=Tensor[(6, 4, 4), uint8] */;
  %658 = shape_of(%var_8540, dtype="int32") /* ty=Tensor[(3), int32] */;
  %659 = cast(%var_8540, dtype="uint8") /* ty=Tensor[(6, 4, 4), uint8] */;
  %660 = dyn.reshape(%657, %658, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %661 = @func_4965() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %662 = cast(meta[relay.Constant][28] /* ty=Tensor[(6, 4, 4), uint8] */, dtype="bool") /* ty=Tensor[(6, 4, 4), bool] */;
  %663 = shape_of(%var_8540, dtype="int32") /* ty=Tensor[(3), int32] */;
  %664 = cast(%var_8540, dtype="bool") /* ty=Tensor[(6, 4, 4), bool] */;
  %665 = dyn.reshape(%662, %663, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %666 = @func_5318() /* ty=(Tensor[(14, 13, 3), float32],) */;
  %667 = right_shift(%659, %660) /* ty=Tensor[(6, 4, 4), uint8] */;
  %668 = %661.0;
  %669 = greater_equal(%664, %665) /* ty=Tensor[(6, 4, 4), bool] */;
  %670 = %666.0;
  (%667, %668, %669, %670)
}

def @func_8356(%var_8332: Tensor[(12, 14, 11), int8], %var_8347: Tensor[(12, 14, 11), int8]) -> (Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), float64]) {
  %671 = cast(%var_8332, dtype="bool") /* ty=Tensor[(12, 14, 11), bool] */;
  %672 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(12, 14, 11), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %673 = cast(meta[relay.Constant][29] /* ty=Tensor[(12, 14, 11), int8] */, dtype="bool") /* ty=Tensor[(12, 14, 11), bool] */;
  %674 = dyn.reshape(%671, %672, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %675 = cast(%var_8347, dtype="float64") /* ty=Tensor[(12, 14, 11), float64] */;
  %676 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(12, 14, 11), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %677 = cast(meta[relay.Constant][29] /* ty=Tensor[(12, 14, 11), int8] */, dtype="float64") /* ty=Tensor[(12, 14, 11), float64] */;
  %678 = dyn.reshape(%675, %676, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %679 = equal(%673, %674) /* ty=Tensor[(12, 14, 11), bool] */;
  %680 = mod(%677, %678) /* ty=Tensor[(12, 14, 11), float64] */;
  (%679, %680)
}

def @func_10640() -> (Tensor[(14, 13, 3), float64],) {
  %681 = @func_7317() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %682 = %681.0;
  (%682,)
}

def @func_12902(%var_12886: uint64, %var_12887: Tensor[(4, 5, 15), uint64]) -> Tensor[(4, 5, 15), bool] {
  %683 = cast(%var_12886, dtype="bool") /* ty=bool */;
  %684 = cast(%var_12887, dtype="bool") /* ty=Tensor[(4, 5, 15), bool] */;
  greater_equal(%683, %684) /* ty=Tensor[(4, 5, 15), bool] */
}

def @func_16342() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  %685 = @func_15245() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %686 = @func_14224() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %687 = %685.0;
  %688 = %686.0;
  (%687, %688)
}

def @func_14406() -> (Tensor[(14, 13, 3), float32],) {
  %689 = @func_13771() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
  %690 = %689.1;
  (%690,)
}

def @func_5359() -> (Tensor[(14, 13, 3), float64],) {
  %691 = @func_1278() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
  %692 = %691.0;
  (%692,)
}

def @func_12475() -> (Tensor[(14, 13, 3), float32],) {
  %693 = @func_6952() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32]) */;
  %694 = %693.2;
  (%694,)
}

def @func_576(%var_545: Tensor[(1, 12, 10), int64]) -> (Tensor[(11, 12, 10), bool], Tensor[(11, 12, 10), float64], Tensor[(3, 40), int8], Tensor[(14, 13, 3), float32]) {
  %695 = cast(%var_545, dtype="bool") /* ty=Tensor[(1, 12, 10), bool] */;
  %696 = cast(meta[relay.Constant][30] /* ty=Tensor[(11, 12, 10), int64] */, dtype="bool") /* ty=Tensor[(11, 12, 10), bool] */;
  %697 = cast(meta[relay.Constant][30] /* ty=Tensor[(11, 12, 10), int64] */, dtype="float64") /* ty=Tensor[(11, 12, 10), float64] */;
  %698 = @func_369() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(3, 40), int8], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
  %699 = @func_334() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool]) */;
  %700 = less_equal(%695, %696) /* ty=Tensor[(11, 12, 10), bool] */;
  %701 = acos(%697) /* ty=Tensor[(11, 12, 10), float64] */;
  %702 = %698.2;
  %703 = %699.1;
  (%700, %701, %702, %703)
}

def @func_11715() -> Tensor[(14, 13, 3), bool] {
  @func_4540() /* ty=Tensor[(14, 13, 3), bool] */
}

def @func_12230() -> (Tensor[(14, 13, 3), bool],) {
  %704 = @func_8586() /* ty=Tensor[(14, 13, 3), bool] */;
  (%704,)
}

def @func_8039() -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), int8], Tensor[(14, 13, 3), float64]) {
  %705 = @func_4041() /* ty=(Tensor[(14, 13, 3), bool],) */;
  %706 = @func_7232() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
  %707 = @func_4689() /* ty=(Tensor[(14, 13, 3), int8], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
  %708 = @func_4607() /* ty=(Tensor[(14, 13, 3), uint64], Tensor[(14, 13, 3), int8]) */;
  %709 = %705.0;
  %710 = %706.0;
  %711 = %707.1;
  %712 = %708.1;
  %713 = @func_4756() /* ty=Tensor[(14, 13, 3), float64] */;
  (%709, %710, %711, %712, %713)
}

def @func_1842() -> (Tensor[(24), int8], Tensor[(14, 13, 3), float64], Tensor[(5, 3, 8), int16], Tensor[(120), int16]) {
  %714 = @func_369() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(3, 40), int8], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
  %715 = @func_917() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %716 = cast(meta[relay.Constant][31] /* ty=Tensor[(120), int16] */, dtype="int16") /* ty=Tensor[(120), int16] */;
  %717 = cast(meta[relay.Constant][31] /* ty=Tensor[(120), int16] */, dtype="int16") /* ty=Tensor[(120), int16] */;
  %718 = reshape(%716, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), int16] */;
  %719 = reshape(%717, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), int16] */;
  %720 = %714.1;
  %721 = %715.0;
  %722 = @func_465(%718, %719) /* ty=Tensor[(5, 3, 8), int16] */;
  (%720, %721, %722, meta[relay.Constant][31] /* ty=Tensor[(120), int16] */)
}

def @func_3956() -> (Tensor[(12, 8, 9), float32], Tensor[(12, 8, 9), float64]) {
  %723 = cast(meta[relay.Constant][32] /* ty=Tensor[(12, 8, 9), float32] */, dtype="float32") /* ty=Tensor[(12, 8, 9), float32] */;
  %724 = cast(meta[relay.Constant][32] /* ty=Tensor[(12, 8, 9), float32] */, dtype="float64") /* ty=Tensor[(12, 8, 9), float64] */;
  %725 = rsqrt(%723) /* ty=Tensor[(12, 8, 9), float32] */;
  %726 = atanh(%724) /* ty=Tensor[(12, 8, 9), float64] */;
  (%725, %726)
}

def @func_7118() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32]) {
  %727 = @func_6817() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %728 = %727.0;
  %729 = @func_1626() /* ty=Tensor[(14, 13, 3), float32] */;
  (%728, %729)
}

def @func_9085() -> (Tensor[(14, 13, 3), float64],) {
  %730 = @func_6365() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(5, 3, 8), int16], Tensor[(120), int16]) */;
  %731 = %730.0;
  (%731,)
}

def @func_8947() -> (Tensor[(5, 3, 8), int16],) {
  %732 = @func_1842() /* ty=(Tensor[(24), int8], Tensor[(14, 13, 3), float64], Tensor[(5, 3, 8), int16], Tensor[(120), int16]) */;
  %733 = %732.2;
  (%733,)
}

def @func_3236(%var_3214: Tensor[(14, 13, 3), float64]) -> (Tensor[(14, 13, 3), uint16], Tensor[(14, 13, 3), bool]) {
  %734 = @func_26() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %735 = %734.0;
  %736 = cast(%var_3214, dtype="uint16") /* ty=Tensor[(14, 13, 3), uint16] */;
  %737 = shape_of(%735, dtype="int32") /* ty=Tensor[(3), int32] */;
  %738 = cast(%735, dtype="uint16") /* ty=Tensor[(14, 13, 3), uint16] */;
  %739 = dyn.reshape(%736, %737, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %740 = @func_1278() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
  %741 = multiply(%738, %739) /* ty=Tensor[(14, 13, 3), uint16] */;
  %742 = %740.1;
  (%741, %742)
}

def @func_12355(%var_12329: Tensor[(120), int8]) -> (Tensor[(14, 13, 3), bool], Tensor[(12, 2), int8], Tensor[(24), int8], Tensor[(120), int8]) {
  %743 = @func_5886() /* ty=(Tensor[(14, 13, 3), bool],) */;
  %744 = cast(meta[relay.Constant][33] /* ty=Tensor[(24), int8] */, dtype="int8") /* ty=Tensor[(24), int8] */;
  %745 = cast(%var_12329, dtype="int8") /* ty=Tensor[(120), int8] */;
  %746 = reshape(%744, newshape=[12, 2]) /* ty=Tensor[(12, 2), int8] */;
  %747 = reshape(%745, newshape=[120]) /* ty=Tensor[(120), int8] */;
  %748 = @func_2173(%746, %747) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(8, 5, 3), bool], Tensor[(12, 2), int8], Tensor[(120), int8]) */;
  %749 = %743.0;
  %750 = %748.2;
  (%749, %750, meta[relay.Constant][33] /* ty=Tensor[(24), int8] */, %var_12329)
}

def @func_26() -> (Tensor[(14, 13, 3), float64],) {
  %751 = @func_11() /* ty=(Tensor[(14, 13, 3), bool],) */;
  %752 = %751.0;
  %753 = cast(%752, dtype="float64") /* ty=Tensor[(14, 13, 3), float64] */;
  %754 = exp(%753) /* ty=Tensor[(14, 13, 3), float64] */;
  (%754,)
}

def @func_14726(%var_14723: Tensor[(70), uint32]) -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32], Tensor[(7, 9, 10), uint32], Tensor[(70), uint32], Tensor[(630), uint32]) {
  %755 = @func_9811() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64]) */;
  %756 = cast(%var_14723, dtype="uint32") /* ty=Tensor[(70), uint32] */;
  %757 = cast(meta[relay.Constant][34] /* ty=Tensor[(630), uint32] */, dtype="uint32") /* ty=Tensor[(630), uint32] */;
  %758 = reshape(%756, newshape=[7, 1, 10]) /* ty=Tensor[(7, 1, 10), uint32] */;
  %759 = reshape(%757, newshape=[7, 9, 10]) /* ty=Tensor[(7, 9, 10), uint32] */;
  %760 = @func_4877(%758, %759) /* ty=(Tensor[(7, 9, 10), uint32],) */;
  %761 = %755.3;
  %762 = @func_3980() /* ty=Tensor[(14, 13, 3), float32] */;
  %763 = %760.0;
  (%761, %762, %763, %var_14723, meta[relay.Constant][34] /* ty=Tensor[(630), uint32] */)
}

def @func_3167(%var_3146: float64, %var_3147: Tensor[(10, 1, 12), float64]) -> (Tensor[(10, ?, 12), uint64], Tensor[(14, 13, 3), float64]) {
  %764 = cast(%var_3146, dtype="float64") /* ty=float64 */;
  %765 = cast(%var_3147, dtype="float64") /* ty=Tensor[(10, 1, 12), float64] */;
  %766 = multiply(%764, %765) /* ty=Tensor[(10, 1, 12), float64] */;
  %767 = cast(%var_3147, dtype="uint64") /* ty=Tensor[(10, 1, 12), uint64] */;
  %768 = shape_of(%766, dtype="int32") /* ty=Tensor[(3), int32] */;
  %769 = cast(%766, dtype="uint64") /* ty=Tensor[(10, 1, 12), uint64] */;
  %770 = dyn.reshape(%767, %768, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %771 = @func_917() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %772 = add(%769, %770) /* ty=Tensor[(10, ?, 12), uint64] */;
  %773 = %771.0;
  (%772, %773)
}

def @func_17105() -> Tensor[(15, 2, 5), uint64] {
  @func_6117() /* ty=Tensor[(15, 2, 5), uint64] */
}

def @func_6495(%var_6483: Tensor[(24), int8], %var_6484: Tensor[(60, 2), int8]) -> (Tensor[(14, 13, 3), bool], Tensor[(15, 2, 5), uint64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(60, 2), int8]) {
  %774 = @func_6042() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) */;
  %775 = @func_5712() /* ty=(Tensor[(14, 13, 3), float32],) */;
  %776 = cast(%var_6483, dtype="int8") /* ty=Tensor[(24), int8] */;
  %777 = cast(%var_6484, dtype="int8") /* ty=Tensor[(60, 2), int8] */;
  %778 = cast(%var_6484, dtype="int8") /* ty=Tensor[(60, 2), int8] */;
  %779 = reshape(%776, newshape=[24]) /* ty=Tensor[(24), int8] */;
  %780 = reshape(%777, newshape=[60, 2]) /* ty=Tensor[(60, 2), int8] */;
  %781 = reshape(%778, newshape=[60, 2]) /* ty=Tensor[(60, 2), int8] */;
  %782 = @func_4507(%779, %780, %781) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(120), int8], Tensor[(24), int8], Tensor[(60, 2), bool]) */;
  %783 = %774.2;
  %784 = @func_6117() /* ty=Tensor[(15, 2, 5), uint64] */;
  %785 = @func_54() /* ty=Tensor[(14, 13, 3), float64] */;
  %786 = %775.0;
  %787 = %782.3;
  (%783, %784, %785, %786, %787, %var_6483, %var_6484)
}

def @func_9274() -> (Tensor[(5, 3, 8), int16],) {
  %788 = @func_8947() /* ty=(Tensor[(5, 3, 8), int16],) */;
  %789 = %788.0;
  (%789,)
}

def @func_3431(%var_3412: Tensor[(14, 7, 8), float32]) -> (Tensor[(14, 7, 8), float32], Tensor[(14, 7, 8), float32], Tensor[(14, 13, 3), float64]) {
  %790 = cast(8.99059f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %791 = cast(%var_3412, dtype="float32") /* ty=Tensor[(14, 7, 8), float32] */;
  %792 = cast(%var_3412, dtype="float32") /* ty=Tensor[(14, 7, 8), float32] */;
  %793 = @func_2324() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %794 = floor_divide(%790, %791) /* ty=Tensor[(14, 7, 8), float32] */;
  %795 = sqrt(%792) /* ty=Tensor[(14, 7, 8), float32] */;
  %796 = %793.0;
  (%794, %795, %796)
}

def @func_13296() -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool]) {
  %797 = @func_9552() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) */;
  %798 = @func_11() /* ty=(Tensor[(14, 13, 3), bool],) */;
  %799 = %797.1;
  %800 = %798.0;
  (%799, %800)
}

def @func_13701(%var_13625: Tensor[(5, 11, 15), float32], %var_13673: Tensor[(5, 11, 15), float32]) -> (Tensor[(5, 11, 15), float32], Tensor[(14, 13, 3), float64]) {
  %801 = cast(meta[relay.Constant][35] /* ty=Tensor[(5, 11, 15), float32] */, dtype="float32") /* ty=Tensor[(5, 11, 15), float32] */;
  %802 = shape_of(%var_13625, dtype="int32") /* ty=Tensor[(3), int32] */;
  %803 = cast(%var_13625, dtype="float32") /* ty=Tensor[(5, 11, 15), float32] */;
  %804 = dyn.reshape(%801, %802, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %805 = floor_divide(%803, %804) /* ty=Tensor[(5, 11, 15), float32] */;
  %806 = cast(%var_13673, dtype="float32") /* ty=Tensor[(5, 11, 15), float32] */;
  %807 = shape_of(%805, dtype="int32") /* ty=Tensor[(3), int32] */;
  %808 = cast(%805, dtype="float32") /* ty=Tensor[(5, 11, 15), float32] */;
  %809 = dyn.reshape(%806, %807, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %810 = mod(%808, %809) /* ty=Tensor[(5, 11, 15), float32] */;
  %811 = @func_9330() /* ty=Tensor[(14, 13, 3), float64] */;
  (%810, %811)
}

def @func_14828(%var_14796: Tensor[(3, 3, 1), uint16], %var_14797: Tensor[(3, 3, 15), uint16]) -> (Tensor[(3, 3, 15), uint64], Tensor[(14, 13, 3), int32], Tensor[(546), float64], Tensor[(3, 3, 1), float64]) {
  %812 = cast(%var_14796, dtype="bool") /* ty=Tensor[(3, 3, 1), bool] */;
  %813 = cast(%var_14797, dtype="bool") /* ty=Tensor[(3, 3, 15), bool] */;
  %814 = not_equal(%812, %813) /* ty=Tensor[(3, 3, 15), bool] */;
  %815 = cast(%814, dtype="uint64") /* ty=Tensor[(3, 3, 15), uint64] */;
  %816 = shape_of(%var_14797, dtype="int32") /* ty=Tensor[(3), int32] */;
  %817 = cast(%var_14797, dtype="uint64") /* ty=Tensor[(3, 3, 15), uint64] */;
  %818 = dyn.reshape(%815, %816, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %819 = cast(meta[relay.Constant][36] /* ty=Tensor[(546), float64] */, dtype="float64") /* ty=Tensor[(546), float64] */;
  %820 = reshape(%819, newshape=[14, 13, 3]) /* ty=Tensor[(14, 13, 3), float64] */;
  %821 = @func_2956(%820) /* ty=(Tensor[(14, 13, 3), int32], Tensor[(14, 13, 3), float64]) */;
  %822 = cast(%var_14796, dtype="float64") /* ty=Tensor[(3, 3, 1), float64] */;
  %823 = bitwise_xor(%817, %818) /* ty=Tensor[(3, 3, 15), uint64] */;
  %824 = %821.0;
  %825 = atanh(%822) /* ty=Tensor[(3, 3, 1), float64] */;
  (%823, %824, meta[relay.Constant][36] /* ty=Tensor[(546), float64] */, %825)
}

def @func_2521() -> (Tensor[(14, 13, 3), float64],) {
  %826 = @func_1694() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
  %827 = %826.1;
  (%827,)
}

def @func_12545(%var_12487: Tensor[(3, 10, 14), float64], %var_12498: Tensor[(336, 1), float64]) -> (Tensor[(14, 4, 6), float64], Tensor[(336, 1), float64], Tensor[(14, 13, 3), int8], Tensor[(14, 13, 3), float64], Tensor[(3, 10, 14), float32]) {
  %828 = cast(%var_12498, dtype="float64") /* ty=Tensor[(336, 1), float64] */;
  %829 = reshape(%828, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), float64] */;
  %830 = @func_2737(%829) /* ty=(Tensor[(14, 4, 6), float64], Tensor[(14, 4, 6), float64]) */;
  %831 = @func_9196() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), int8]) */;
  %832 = @func_2324() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %833 = cast(%var_12487, dtype="float64") /* ty=Tensor[(3, 10, 14), float64] */;
  %834 = exp(%833) /* ty=Tensor[(3, 10, 14), float64] */;
  %835 = cast(%var_12487, dtype="uint32") /* ty=Tensor[(3, 10, 14), uint32] */;
  %836 = shape_of(%834, dtype="int32") /* ty=Tensor[(3), int32] */;
  %837 = cast(%834, dtype="uint32") /* ty=Tensor[(3, 10, 14), uint32] */;
  %838 = dyn.reshape(%835, %836, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %839 = logical_xor(%837, %838) /* ty=Tensor[(3, 10, 14), uint32] */;
  %840 = cast(%839, dtype="float32") /* ty=Tensor[(3, 10, 14), float32] */;
  %841 = %830.0;
  %842 = %831.2;
  %843 = %832.0;
  %844 = cos(%840) /* ty=Tensor[(3, 10, 14), float32] */;
  (%841, %var_12498, %842, %843, %844)
}

def @func_8586() -> Tensor[(14, 13, 3), bool] {
  @func_5867() /* ty=Tensor[(14, 13, 3), bool] */
}

def @func_16083() -> (Tensor[(14, 13, 3), bool],) {
  %845 = @func_15884() /* ty=Tensor[(14, 13, 3), bool] */;
  (%845,)
}

def @func_8277() -> (Tensor[(14, 13, 3), float64],) {
  %846 = @func_26() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %847 = %846.0;
  (%847,)
}

def @func_9330() -> Tensor[(14, 13, 3), float64] {
  %848 = @func_8962() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
  %848.1
}

def @func_1626() -> Tensor[(14, 13, 3), float32] {
  %849 = @func_74() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %850 = %849.0;
  %851 = @func_829() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
  %852 = %851.1;
  %853 = cast(%852, dtype="float32") /* ty=Tensor[(14, 13, 3), float32] */;
  %854 = shape_of(%850, dtype="int32") /* ty=Tensor[(3), int32] */;
  %855 = cast(%850, dtype="float32") /* ty=Tensor[(14, 13, 3), float32] */;
  %856 = dyn.reshape(%853, %854, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%855, %856) /* ty=Tensor[(14, 13, 3), float32] */
}

def @func_13258() -> (Tensor[(14, 13, 3), int8],) {
  %857 = @func_3303() /* ty=Tensor[(14, 13, 3), int8] */;
  (%857,)
}

def @func_16007() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(12, 14, 11), bool], Tensor[(1848), int8], Tensor[(14, 13, 3), float64]) {
  %858 = @func_6042() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) */;
  %859 = cast(meta[relay.Constant][37] /* ty=Tensor[(1848), int8] */, dtype="int8") /* ty=Tensor[(1848), int8] */;
  %860 = cast(meta[relay.Constant][37] /* ty=Tensor[(1848), int8] */, dtype="int8") /* ty=Tensor[(1848), int8] */;
  %861 = reshape(%859, newshape=[12, 14, 11]) /* ty=Tensor[(12, 14, 11), int8] */;
  %862 = reshape(%860, newshape=[12, 14, 11]) /* ty=Tensor[(12, 14, 11), int8] */;
  %863 = @func_8356(%861, %862) /* ty=(Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), float64]) */;
  %864 = @func_15934() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
  %865 = @func_6013() /* ty=Tensor[(14, 13, 3), float64] */;
  %866 = %858.0;
  %867 = %863.0;
  %868 = %864.1;
  (%865, %866, %867, meta[relay.Constant][37] /* ty=Tensor[(1848), int8] */, %868)
}

def @func_14514() -> (Tensor[(14, 13, 3), float64],) {
  %869 = @func_8435() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %870 = %869.0;
  (%870,)
}

def @func_54() -> Tensor[(14, 13, 3), float64] {
  %871 = @func_26() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %871.0
}

def @func_8789() -> Tensor[(14, 13, 3), float32] {
  @func_5481() /* ty=Tensor[(14, 13, 3), float32] */
}

def @func_13771() -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) {
  %872 = @func_2026() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) */;
  %873 = @func_11169() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float32]) */;
  %874 = %872.0;
  %875 = %873.0;
  (%874, %875)
}

def @func_2249() -> Tensor[(14, 13, 3), float64] {
  %876 = @func_978() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) */;
  %876.0
}

def @func_15884() -> Tensor[(14, 13, 3), bool] {
  @func_5867() /* ty=Tensor[(14, 13, 3), bool] */
}

def @func_2718(%var_2675: Tensor[(120), int16], %var_2677: Tensor[(5, 3, 8), int16]) -> (Tensor[(14, 13, 3), float64], Tensor[(120), int16], Tensor[(5, 3, 8), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(5, 3, 8), uint16]) {
  %877 = cast(%var_2675, dtype="int16") /* ty=Tensor[(120), int16] */;
  %878 = cast(%var_2675, dtype="int16") /* ty=Tensor[(120), int16] */;
  %879 = reshape(%877, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), int16] */;
  %880 = reshape(%878, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), int16] */;
  %881 = @func_465(%879, %880) /* ty=Tensor[(5, 3, 8), int16] */;
  %882 = cast(%var_2677, dtype="bool") /* ty=Tensor[(5, 3, 8), bool] */;
  %883 = shape_of(%881, dtype="int32") /* ty=Tensor[(3), int32] */;
  %884 = cast(%881, dtype="bool") /* ty=Tensor[(5, 3, 8), bool] */;
  %885 = dyn.reshape(%882, %883, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %886 = @func_54() /* ty=Tensor[(14, 13, 3), float64] */;
  %887 = cast(%886, dtype="float64") /* ty=Tensor[(14, 13, 3), float64] */;
  %888 = reshape(%887, newshape=[14, 13, 3]) /* ty=Tensor[(14, 13, 3), float64] */;
  %889 = @func_745(%888) /* ty=(Tensor[(14, 13, 3), int16], Tensor[(14, 13, 3), float64]) */;
  %890 = @func_26() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %891 = cast(meta[relay.Constant][38] /* ty=Tensor[(5, 3, 8), int16] */, dtype="uint16") /* ty=Tensor[(5, 3, 8), uint16] */;
  %892 = shape_of(%881, dtype="int32") /* ty=Tensor[(3), int32] */;
  %893 = cast(%881, dtype="uint16") /* ty=Tensor[(5, 3, 8), uint16] */;
  %894 = dyn.reshape(%891, %892, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %895 = not_equal(%884, %885) /* ty=Tensor[(5, 3, 8), bool] */;
  %896 = %889.1;
  %897 = %890.0;
  %898 = minimum(%893, %894) /* ty=Tensor[(5, 3, 8), uint16] */;
  (%886, %var_2675, %895, %896, %897, %898)
}

def @func_10684() -> (Tensor[(3, 40), int8], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) {
  %899 = @func_9029() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(3, 40), int8], Tensor[(8, 5, 3), bool], Tensor[(24), int8]) */;
  %900 = @func_3881() /* ty=(Tensor[(14, 13, 3), float32],) */;
  %901 = @func_369() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(3, 40), int8], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
  %902 = %899.1;
  %903 = %900.0;
  %904 = %901.4;
  (%902, %903, %904)
}

def @func_5211() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), bool]) {
  %905 = @func_2324() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %906 = %905.0;
  %907 = cast(%906, dtype="float64") /* ty=Tensor[(14, 13, 3), float64] */;
  %908 = reshape(%907, newshape=[14, 13, 3]) /* ty=Tensor[(14, 13, 3), float64] */;
  %909 = @func_3236(%908) /* ty=(Tensor[(14, 13, 3), uint16], Tensor[(14, 13, 3), bool]) */;
  %910 = @func_3980() /* ty=Tensor[(14, 13, 3), float32] */;
  %911 = %909.1;
  (%906, %910, %911)
}

def @func_16924() -> (Tensor[(14, 13, 3), float64], Tensor[(6, 1, 1), float32], Tensor[(6), float32]) {
  %912 = @func_16742() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32]) */;
  %913 = cast(meta[relay.Constant][39] /* ty=Tensor[(6), float32] */, dtype="float32") /* ty=Tensor[(6), float32] */;
  %914 = reshape(%913, newshape=[6, 1, 1]) /* ty=Tensor[(6, 1, 1), float32] */;
  %915 = %912.0;
  %916 = @func_10195(%914) /* ty=Tensor[(6, 1, 1), float32] */;
  (%915, %916, meta[relay.Constant][39] /* ty=Tensor[(6), float32] */)
}

def @func_11634() -> (Tensor[(12, 8, 9), float32], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) {
  %917 = @func_3956() /* ty=(Tensor[(12, 8, 9), float32], Tensor[(12, 8, 9), float64]) */;
  %918 = @func_7885() /* ty=(Tensor[(14, 13, 3), float32],) */;
  %919 = @func_5211() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), bool]) */;
  %920 = %917.0;
  %921 = %918.0;
  %922 = %919.0;
  (%920, %921, %922)
}

def @func_11142() -> Tensor[(14, 13, 3), float64] {
  %923 = @func_917() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %923.0
}

def @func_8435() -> (Tensor[(14, 13, 3), float64],) {
  %924 = @func_2521() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %925 = %924.0;
  (%925,)
}

def @func_12101() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  %926 = @func_6247() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(12, 2), int8], Tensor[(6, 4), int8], Tensor[(120), int8], Tensor[(14, 13, 3), float64]) */;
  %927 = @func_6013() /* ty=Tensor[(14, 13, 3), float64] */;
  %928 = %926.0;
  (%927, %928)
}

def @func_2980() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  %929 = @func_1542() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %930 = @func_74() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %931 = %929.0;
  %932 = %930.0;
  (%931, %932)
}

def @func_4540() -> Tensor[(14, 13, 3), bool] {
  @func_1307() /* ty=Tensor[(14, 13, 3), bool] */
}

def @func_10195(%var_10189: Tensor[(6, 1, 1), float32]) -> Tensor[(6, 1, 1), float32] {
  %933 = cast(%var_10189, dtype="float32") /* ty=Tensor[(6, 1, 1), float32] */;
  log10(%933) /* ty=Tensor[(6, 1, 1), float32] */
}

def @func_14071() -> Tensor[(14, 13, 3), float64] {
  %934 = @func_3800() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %934.0
}

def @func_11915(%var_11911: Tensor[(84), float64]) -> (Tensor[(14, 13, 3), bool], Tensor[(6, 2, 7), float64], Tensor[(84), float64]) {
  %935 = @func_8820() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), int8]) */;
  %936 = cast(%var_11911, dtype="float64") /* ty=Tensor[(84), float64] */;
  %937 = reshape(%936, newshape=[6, 2, 7]) /* ty=Tensor[(6, 2, 7), float64] */;
  %938 = %935.0;
  %939 = @func_3636(%937) /* ty=Tensor[(6, 2, 7), float64] */;
  (%938, %939, %var_11911)
}

def @func_7848(%var_7840: Tensor[(5, 9, 8), float32], %var_7846: Tensor[(120), int8]) -> (Tensor[(5, 9, 8), float32], Tensor[(14, 13, 3), bool], Tensor[(24), int8], Tensor[(120), int8]) {
  %940 = cast(%var_7840, dtype="float32") /* ty=Tensor[(5, 9, 8), float32] */;
  %941 = cast(meta[relay.Constant][40] /* ty=Tensor[(24), int8] */, dtype="int8") /* ty=Tensor[(24), int8] */;
  %942 = cast(%var_7846, dtype="int8") /* ty=Tensor[(120), int8] */;
  %943 = reshape(%941, newshape=[8, 1, 3]) /* ty=Tensor[(8, 1, 3), int8] */;
  %944 = reshape(%942, newshape=[8, 5, 3]) /* ty=Tensor[(8, 5, 3), int8] */;
  %945 = @func_161(%943, %944) /* ty=(Tensor[(8, 5, 3), bool], Tensor[(14, 13, 3), bool]) */;
  %946 = log10(%940) /* ty=Tensor[(5, 9, 8), float32] */;
  %947 = %945.1;
  (%946, %947, meta[relay.Constant][40] /* ty=Tensor[(24), int8] */, %var_7846)
}

def @func_1307() -> Tensor[(14, 13, 3), bool] {
  %948 = @func_978() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) */;
  %948.1
}

def @func_900(%var_883: Tensor[(14, 13, 3), float32]) -> Tensor[(14, 13, 3), float32] {
  %949 = @func_541() /* ty=(Tensor[(14, 13, 3), float32],) */;
  %950 = %949.0;
  %951 = cast(%var_883, dtype="float32") /* ty=Tensor[(14, 13, 3), float32] */;
  %952 = shape_of(%950, dtype="int32") /* ty=Tensor[(3), int32] */;
  %953 = cast(%950, dtype="float32") /* ty=Tensor[(14, 13, 3), float32] */;
  %954 = dyn.reshape(%951, %952, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  add(%953, %954) /* ty=Tensor[(14, 13, 3), float32] */
}

def @func_7232() -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) {
  %955 = @func_1780() /* ty=(Tensor[(14, 13, 3), float32],) */;
  %956 = @func_5712() /* ty=(Tensor[(14, 13, 3), float32],) */;
  %957 = @func_829() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
  %958 = %955.0;
  %959 = %956.0;
  %960 = %957.0;
  (%958, %959, %960)
}

def @func_4756() -> Tensor[(14, 13, 3), float64] {
  %961 = @func_978() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) */;
  %961.0
}

def @func_13074() -> Tensor[(14, 13, 3), float64] {
  %962 = @func_6897() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %962.0
}

def @func_6009() -> (Tensor[(14, 13, 3), bool], Tensor[(120), int8], Tensor[(14, 13, 3), float32]) {
  %963 = @func_11() /* ty=(Tensor[(14, 13, 3), bool],) */;
  %964 = @func_5690() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(120), int8], Tensor[(24), int8], Tensor[(120), int8], Tensor[(14, 13, 3), float64]) */;
  %965 = @func_3047() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
  %966 = %963.0;
  %967 = %964.3;
  %968 = %965.0;
  (%966, %967, %968)
}

def @func_12678() -> (Tensor[(14, 13, 3), float64],) {
  %969 = @func_11142() /* ty=Tensor[(14, 13, 3), float64] */;
  (%969,)
}

def @func_11200() -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) {
  %970 = @func_541() /* ty=(Tensor[(14, 13, 3), float32],) */;
  %971 = @func_9599() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
  %972 = %970.0;
  %973 = %971.1;
  (%972, %973)
}

def @func_2359(%var_2349: Tensor[(24), int8]) -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(24), int8], Tensor[(14, 13, 3), float64]) {
  %974 = @func_1542() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %975 = %974.0;
  %976 = cast(%975, dtype="float64") /* ty=Tensor[(14, 13, 3), float64] */;
  %977 = cast(%var_2349, dtype="int8") /* ty=Tensor[(24), int8] */;
  %978 = reshape(%977, newshape=[24]) /* ty=Tensor[(24), int8] */;
  %979 = @func_1135(%978) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), bool], Tensor[(24), int8], Tensor[(30, 4), uint32], Tensor[(14, 13, 3), float64]) */;
  %980 = @func_1018() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), int8]) */;
  %981 = sinh(%976) /* ty=Tensor[(14, 13, 3), float64] */;
  %982 = %979.2;
  %983 = %980.0;
  (%981, %982, %var_2349, %983)
}

def @func_8116() -> (Tensor[(14, 13, 3), float32], Tensor[(120), int16], Tensor[(360), uint16]) {
  %984 = @func_7118() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32]) */;
  %985 = cast(meta[relay.Constant][41] /* ty=Tensor[(360), uint16] */, dtype="uint16") /* ty=Tensor[(360), uint16] */;
  %986 = cast(meta[relay.Constant][41] /* ty=Tensor[(360), uint16] */, dtype="uint16") /* ty=Tensor[(360), uint16] */;
  %987 = reshape(%985, newshape=[12, 2, 15]) /* ty=Tensor[(12, 2, 15), uint16] */;
  %988 = reshape(%986, newshape=[12, 2, 15]) /* ty=Tensor[(12, 2, 15), uint16] */;
  %989 = @func_2057(%987, %988) /* ty=(Tensor[(12, 2, 15), uint16], Tensor[(12, 2, 15), float32], Tensor[(5, 3, 8), int16], Tensor[(120), int16]) */;
  %990 = %984.1;
  %991 = %989.3;
  (%990, %991, meta[relay.Constant][41] /* ty=Tensor[(360), uint16] */)
}

def @func_11462() -> Tensor[(14, 13, 3), float32] {
  @func_1626() /* ty=Tensor[(14, 13, 3), float32] */
}

def @func_6897() -> (Tensor[(14, 13, 3), float64],) {
  %992 = @func_54() /* ty=Tensor[(14, 13, 3), float64] */;
  (%992,)
}

def @func_8534(%var_8515: Tensor[(24), int8], %var_8521: Tensor[(120), int8]) -> (Tensor[(14, 13, 3), float32], Tensor[(12, 2), int8], Tensor[(24), int8], Tensor[(14, 13, 3), bool], Tensor[(120), int8]) {
  %993 = @func_3047() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
  %994 = cast(%var_8515, dtype="int8") /* ty=Tensor[(24), int8] */;
  %995 = reshape(%994, newshape=[12, 2]) /* ty=Tensor[(12, 2), int8] */;
  %996 = @func_7343(%995) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(12, 2), int8], Tensor[(120), int8]) */;
  %997 = cast(%var_8521, dtype="int8") /* ty=Tensor[(120), int8] */;
  %998 = reshape(%997, newshape=[30, 4]) /* ty=Tensor[(30, 4), int8] */;
  %999 = @func_6633(%998) /* ty=(Tensor[(30, 4), float64], Tensor[(30, 4), int8], Tensor[(14, 13, 3), bool]) */;
  %1000 = %993.0;
  %1001 = %996.2;
  %1002 = %999.2;
  (%1000, %1001, %var_8515, %1002, %var_8521)
}

def @func_1597(%var_1579: Tensor[(120, 1), int16]) -> (Tensor[(14, 13, 3), float64], Tensor[(5, 3, 8), int16], Tensor[(120, 1), int16]) {
  %1003 = @func_334() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool]) */;
  %1004 = %1003.5;
  %1005 = cast(%1004, dtype="float64") /* ty=Tensor[(14, 13, 3), float64] */;
  %1006 = cast(%var_1579, dtype="int16") /* ty=Tensor[(120, 1), int16] */;
  %1007 = cast(%var_1579, dtype="int16") /* ty=Tensor[(120, 1), int16] */;
  %1008 = reshape(%1006, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), int16] */;
  %1009 = reshape(%1007, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), int16] */;
  %1010 = log(%1005) /* ty=Tensor[(14, 13, 3), float64] */;
  %1011 = @func_465(%1008, %1009) /* ty=Tensor[(5, 3, 8), int16] */;
  (%1010, %1011, %var_1579)
}

def @func_3736(%var_3675: Tensor[(120), int16], %var_3730: Tensor[(42, 2), float64]) -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(24), int8], Tensor[(5, 3, 8), bool], Tensor[(6, 2, 7), float64], Tensor[(42, 2), float64]) {
  %1012 = @func_1278() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
  %1013 = @func_1694() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
  %1014 = @func_2980() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
  %1015 = cast(meta[relay.Constant][42] /* ty=Tensor[(24), int8] */, dtype="int8") /* ty=Tensor[(24), int8] */;
  %1016 = reshape(%1015, newshape=[24]) /* ty=Tensor[(24), int8] */;
  %1017 = @func_1135(%1016) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), bool], Tensor[(24), int8], Tensor[(30, 4), uint32], Tensor[(14, 13, 3), float64]) */;
  %1018 = cast(%var_3675, dtype="int16") /* ty=Tensor[(120), int16] */;
  %1019 = cast(%var_3675, dtype="int16") /* ty=Tensor[(120), int16] */;
  %1020 = reshape(%1018, newshape=[120]) /* ty=Tensor[(120), int16] */;
  %1021 = reshape(%1019, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), int16] */;
  %1022 = @func_2718(%1020, %1021) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(120), int16], Tensor[(5, 3, 8), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(5, 3, 8), uint16]) */;
  %1023 = %1022.2;
  %1024 = cast(%1023, dtype="float64") /* ty=Tensor[(5, 3, 8), float64] */;
  %1025 = exp(%1024) /* ty=Tensor[(5, 3, 8), float64] */;
  %1026 = cast(%var_3675, dtype="bool") /* ty=Tensor[(120), bool] */;
  %1027 = shape_of(%1025, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1028 = cast(%1025, dtype="bool") /* ty=Tensor[(5, 3, 8), bool] */;
  %1029 = dyn.reshape(%1026, %1027, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1030 = cast(%var_3730, dtype="float64") /* ty=Tensor[(42, 2), float64] */;
  %1031 = reshape(%1030, newshape=[6, 2, 7]) /* ty=Tensor[(6, 2, 7), float64] */;
  %1032 = %1012.2;
  %1033 = %1013.1;
  %1034 = %1014.0;
  %1035 = %1017.1;
  %1036 = logical_and(%1028, %1029) /* ty=Tensor[(5, 3, 8), bool] */;
  %1037 = @func_3636(%1031) /* ty=Tensor[(6, 2, 7), float64] */;
  (%1032, %1033, %1034, %1035, meta[relay.Constant][42] /* ty=Tensor[(24), int8] */, %1036, %1037, %var_3730)
}

def @func_6247() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(12, 2), int8], Tensor[(6, 4), int8], Tensor[(120), int8], Tensor[(14, 13, 3), float64]) {
  %1038 = @func_1542() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1039 = cast(meta[relay.Constant][43] /* ty=Tensor[(6, 4), int8] */, dtype="int8") /* ty=Tensor[(6, 4), int8] */;
  %1040 = cast(meta[relay.Constant][44] /* ty=Tensor[(120), int8] */, dtype="int8") /* ty=Tensor[(120), int8] */;
  %1041 = reshape(%1039, newshape=[12, 2]) /* ty=Tensor[(12, 2), int8] */;
  %1042 = reshape(%1040, newshape=[120]) /* ty=Tensor[(120), int8] */;
  %1043 = @func_2173(%1041, %1042) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(8, 5, 3), bool], Tensor[(12, 2), int8], Tensor[(120), int8]) */;
  %1044 = @func_334() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool]) */;
  %1045 = %1038.0;
  %1046 = @func_3759() /* ty=Tensor[(14, 13, 3), float64] */;
  %1047 = %1043.2;
  %1048 = %1044.3;
  (%1045, %1046, %1047, meta[relay.Constant][43] /* ty=Tensor[(6, 4), int8] */, meta[relay.Constant][44] /* ty=Tensor[(120), int8] */, %1048)
}

def @func_13141() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  %1049 = @func_7317() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1050 = @func_10993() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), int8]) */;
  %1051 = %1049.0;
  %1052 = %1050.0;
  (%1051, %1052)
}

def @func_978() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) {
  %1053 = @func_390() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1054 = @func_11() /* ty=(Tensor[(14, 13, 3), bool],) */;
  %1055 = %1053.0;
  %1056 = %1054.0;
  (%1055, %1056)
}

def @func_13952() -> Tensor[(14, 13, 3), float64] {
  %1057 = @func_1542() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1057.0
}

def @func_12595() -> (Tensor[(14, 13, 3), float64],) {
  %1058 = @func_6817() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1059 = %1058.0;
  (%1059,)
}

def @func_12014() -> (Tensor[(14, 13, 3), int8], Tensor[(14, 13, 3), float64]) {
  %1060 = @func_4689() /* ty=(Tensor[(14, 13, 3), int8], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
  %1061 = @func_11289() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1062 = %1060.0;
  %1063 = %1061.0;
  (%1062, %1063)
}

def @func_9896() -> Tensor[(24), int8] {
  %1064 = @func_369() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(3, 40), int8], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
  %1064.1
}

def @func_11687() -> (Tensor[(14, 13, 3), float64],) {
  %1065 = @func_6897() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1066 = %1065.0;
  (%1066,)
}

def @func_6258() -> (Tensor[(12, 8, 9), float64],) {
  %1067 = @func_3956() /* ty=(Tensor[(12, 8, 9), float32], Tensor[(12, 8, 9), float64]) */;
  %1068 = %1067.1;
  (%1068,)
}

def @func_829() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  %1069 = @func_390() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1070 = @func_54() /* ty=Tensor[(14, 13, 3), float64] */;
  %1071 = cast(%1070, dtype="float64") /* ty=Tensor[(14, 13, 3), float64] */;
  %1072 = %1069.0;
  %1073 = cosh(%1071) /* ty=Tensor[(14, 13, 3), float64] */;
  (%1072, %1073)
}

def @func_10549(%var_10483: Tensor[(120), int64]) -> (Tensor[(14, 13, 3), bool], Tensor[(120), int64], Tensor[(11, 12, 10), float64]) {
  %1074 = @func_5886() /* ty=(Tensor[(14, 13, 3), bool],) */;
  %1075 = cast(%var_10483, dtype="int64") /* ty=Tensor[(120), int64] */;
  %1076 = reshape(%1075, newshape=[1, 12, 10]) /* ty=Tensor[(1, 12, 10), int64] */;
  %1077 = @func_576(%1076) /* ty=(Tensor[(11, 12, 10), bool], Tensor[(11, 12, 10), float64], Tensor[(3, 40), int8], Tensor[(14, 13, 3), float32]) */;
  %1078 = %1077.0;
  %1079 = cast(%1078, dtype="float64") /* ty=Tensor[(11, 12, 10), float64] */;
  %1080 = sinh(%1079) /* ty=Tensor[(11, 12, 10), float64] */;
  %1081 = cast(meta[relay.Constant][45] /* ty=Tensor[(11, 12, 10), float64] */, dtype="float64") /* ty=Tensor[(11, 12, 10), float64] */;
  %1082 = shape_of(%1080, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1083 = cast(%1080, dtype="float64") /* ty=Tensor[(11, 12, 10), float64] */;
  %1084 = dyn.reshape(%1081, %1082, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1085 = %1074.0;
  %1086 = floor_mod(%1083, %1084) /* ty=Tensor[(11, 12, 10), float64] */;
  (%1085, %var_10483, %1086)
}

def @func_3303() -> Tensor[(14, 13, 3), int8] {
  %1087 = @func_1018() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), int8]) */;
  %1087.1
}

def @func_13992(%var_13986: Tensor[(24), int8]) -> (Tensor[(14, 13, 3), float32], Tensor[(24), int8], Tensor[(24), int8], Tensor[(120), int8]) {
  %1088 = @func_10417() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
  %1089 = cast(%var_13986, dtype="int8") /* ty=Tensor[(24), int8] */;
  %1090 = cast(meta[relay.Constant][46] /* ty=Tensor[(120), int8] */, dtype="int8") /* ty=Tensor[(120), int8] */;
  %1091 = reshape(%1089, newshape=[24]) /* ty=Tensor[(24), int8] */;
  %1092 = reshape(%1090, newshape=[120]) /* ty=Tensor[(120), int8] */;
  %1093 = @func_650(%1091, %1092) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(8, 5, 3), bool], Tensor[(24), int8], Tensor[(120), int8]) */;
  %1094 = %1088.0;
  %1095 = %1093.2;
  (%1094, %1095, %var_13986, meta[relay.Constant][46] /* ty=Tensor[(120), int8] */)
}

def @func_17181() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  %1096 = @func_14674() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1097 = @func_9981() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(14, 13, 3), float64]) */;
  %1098 = @func_12745() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32]) */;
  %1099 = %1096.0;
  %1100 = %1097.2;
  %1101 = %1098.1;
  (%1099, %1100, %1101)
}

def @func_9863(%var_9836: Tensor[(1, 1, 13), float64]) -> (Tensor[(1, 1, 13), float64], Tensor[(14, 13, 3), uint64]) {
  %1102 = cast(%var_9836, dtype="float64") /* ty=Tensor[(1, 1, 13), float64] */;
  %1103 = log(%1102) /* ty=Tensor[(1, 1, 13), float64] */;
  %1104 = @func_5061() /* ty=Tensor[(14, 13, 3), uint64] */;
  (%1103, %1104)
}

def @func_11816() -> (Tensor[(14, 13, 3), float64], Tensor[(5, 3, 8), int16], Tensor[(14, 13, 3), float32]) {
  %1105 = @func_917() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1106 = @func_11603() /* ty=(Tensor[(5, 3, 8), int16], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
  %1107 = @func_3456() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
  %1108 = %1105.0;
  %1109 = %1106.0;
  %1110 = %1107.1;
  (%1108, %1109, %1110)
}

def @func_15245() -> (Tensor[(14, 13, 3), float64],) {
  %1111 = @func_14349() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1112 = %1111.0;
  (%1112,)
}

def @func_14889() -> Tensor[(14, 13, 3), float64] {
  %1113 = @func_8763() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1113.0
}

def @func_14224() -> (Tensor[(14, 13, 3), float64],) {
  %1114 = @func_7019() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1115 = %1114.0;
  (%1115,)
}

def @func_11751() -> Tensor[(14, 13, 3), float64] {
  %1116 = @func_10068() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1116.0
}

def @func_7925() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  %1117 = @func_5232() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1118 = @func_369() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(3, 40), int8], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
  %1119 = @func_3759() /* ty=Tensor[(14, 13, 3), float64] */;
  %1120 = @func_6013() /* ty=Tensor[(14, 13, 3), float64] */;
  %1121 = %1117.0;
  %1122 = %1118.3;
  (%1119, %1120, %1121, %1122)
}

def @func_5515() -> Tensor[(14, 13, 3), bool] {
  %1123 = @func_3120() /* ty=Tensor[(14, 13, 3), float64] */;
  %1124 = cast(meta[relay.Constant][47] /* ty=Tensor[(14, 13, 3), float64] */, dtype="bool") /* ty=Tensor[(14, 13, 3), bool] */;
  %1125 = shape_of(%1123, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1126 = cast(%1123, dtype="bool") /* ty=Tensor[(14, 13, 3), bool] */;
  %1127 = dyn.reshape(%1124, %1125, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%1126, %1127) /* ty=Tensor[(14, 13, 3), bool] */
}

def @func_5185() -> Tensor[(14, 13, 3), float64] {
  @func_3120() /* ty=Tensor[(14, 13, 3), float64] */
}

def @func_16616() -> (Tensor[(14, 13, 3), float32],) {
  %1128 = @func_15539() /* ty=(Tensor[(14, 13, 3), float32],) */;
  %1129 = %1128.0;
  (%1129,)
}

def @func_14475(%var_14461: Tensor[(16, 15, 5), float64]) -> (Tensor[(16, 15, 5), float32],) {
  %1130 = cast(%var_14461, dtype="float64") /* ty=Tensor[(16, 15, 5), float64] */;
  %1131 = tan(%1130) /* ty=Tensor[(16, 15, 5), float64] */;
  %1132 = cast(%1131, dtype="float32") /* ty=Tensor[(16, 15, 5), float32] */;
  %1133 = sinh(%1132) /* ty=Tensor[(16, 15, 5), float32] */;
  (%1133,)
}

def @func_6817() -> (Tensor[(14, 13, 3), float64],) {
  %1134 = @func_26() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1135 = %1134.0;
  (%1135,)
}

def @func_11603() -> (Tensor[(5, 3, 8), int16], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) {
  %1136 = @func_8947() /* ty=(Tensor[(5, 3, 8), int16],) */;
  %1137 = @func_9085() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1138 = %1136.0;
  %1139 = @func_9388() /* ty=Tensor[(14, 13, 3), float32] */;
  %1140 = %1137.0;
  (%1138, %1139, %1140)
}

def @func_6013() -> Tensor[(14, 13, 3), float64] {
  %1141 = @func_3281() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1141.0
}

def @func_16872() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(30, 4), uint32], Tensor[(1, 24), int8]) {
  %1142 = @func_15007() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32]) */;
  %1143 = @func_1694() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
  %1144 = cast(meta[relay.Constant][48] /* ty=Tensor[(1, 24), int8] */, dtype="int8") /* ty=Tensor[(1, 24), int8] */;
  %1145 = reshape(%1144, newshape=[24]) /* ty=Tensor[(24), int8] */;
  %1146 = @func_1135(%1145) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), bool], Tensor[(24), int8], Tensor[(30, 4), uint32], Tensor[(14, 13, 3), float64]) */;
  %1147 = @func_6013() /* ty=Tensor[(14, 13, 3), float64] */;
  %1148 = %1142.0;
  %1149 = %1143.1;
  %1150 = %1146.4;
  (%1147, %1148, %1149, %1150, meta[relay.Constant][48] /* ty=Tensor[(1, 24), int8] */)
}

def @func_12868() -> (Tensor[(14, 13, 3), float64],) {
  %1151 = @func_6742() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) */;
  %1152 = %1151.2;
  (%1152,)
}

def @func_2057(%var_2035: Tensor[(12, 2, 15), uint16], %var_2036: Tensor[(12, 2, 15), uint16]) -> (Tensor[(12, 2, 15), uint16], Tensor[(12, 2, 15), float32], Tensor[(5, 3, 8), int16], Tensor[(120), int16]) {
  %1153 = cast(%var_2036, dtype="uint16") /* ty=Tensor[(12, 2, 15), uint16] */;
  %1154 = shape_of(%var_2035, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1155 = cast(%var_2035, dtype="uint16") /* ty=Tensor[(12, 2, 15), uint16] */;
  %1156 = dyn.reshape(%1153, %1154, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1157 = cast(%var_2035, dtype="float32") /* ty=Tensor[(12, 2, 15), float32] */;
  %1158 = cast(meta[relay.Constant][49] /* ty=Tensor[(120), int16] */, dtype="int16") /* ty=Tensor[(120), int16] */;
  %1159 = cast(meta[relay.Constant][49] /* ty=Tensor[(120), int16] */, dtype="int16") /* ty=Tensor[(120), int16] */;
  %1160 = reshape(%1158, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), int16] */;
  %1161 = reshape(%1159, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), int16] */;
  %1162 = minimum(%1155, %1156) /* ty=Tensor[(12, 2, 15), uint16] */;
  %1163 = exp(%1157) /* ty=Tensor[(12, 2, 15), float32] */;
  %1164 = @func_465(%1160, %1161) /* ty=Tensor[(5, 3, 8), int16] */;
  (%1162, %1163, %1164, meta[relay.Constant][49] /* ty=Tensor[(120), int16] */)
}

def @func_2737(%var_2726: Tensor[(14, 4, 6), float64]) -> (Tensor[(14, 4, 6), float64], Tensor[(14, 4, 6), float64]) {
  %1165 = cast(%var_2726, dtype="float64") /* ty=Tensor[(14, 4, 6), float64] */;
  %1166 = cast(%var_2726, dtype="float64") /* ty=Tensor[(14, 4, 6), float64] */;
  %1167 = sin(%1165) /* ty=Tensor[(14, 4, 6), float64] */;
  %1168 = atanh(%1166) /* ty=Tensor[(14, 4, 6), float64] */;
  (%1167, %1168)
}

def @func_12745() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32]) {
  %1169 = @func_11289() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1170 = @func_917() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1171 = %1169.0;
  %1172 = %1170.0;
  %1173 = @func_1626() /* ty=Tensor[(14, 13, 3), float32] */;
  (%1171, %1172, %1173)
}

def @func_16692() -> Tensor[(14, 13, 3), float64] {
  @func_3541() /* ty=Tensor[(14, 13, 3), float64] */
}

def @func_3281() -> (Tensor[(14, 13, 3), float64],) {
  %1174 = @func_917() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1175 = %1174.0;
  (%1175,)
}

def @func_2173(%var_2156: Tensor[(12, 2), int8], %var_2157: Tensor[(120), int8]) -> (Tensor[(14, 13, 3), float64], Tensor[(8, 5, 3), bool], Tensor[(12, 2), int8], Tensor[(120), int8]) {
  %1176 = cast(%var_2156, dtype="int8") /* ty=Tensor[(12, 2), int8] */;
  %1177 = cast(%var_2157, dtype="int8") /* ty=Tensor[(120), int8] */;
  %1178 = reshape(%1176, newshape=[8, 1, 3]) /* ty=Tensor[(8, 1, 3), int8] */;
  %1179 = reshape(%1177, newshape=[8, 5, 3]) /* ty=Tensor[(8, 5, 3), int8] */;
  %1180 = @func_161(%1178, %1179) /* ty=(Tensor[(8, 5, 3), bool], Tensor[(14, 13, 3), bool]) */;
  %1181 = @func_54() /* ty=Tensor[(14, 13, 3), float64] */;
  %1182 = %1180.0;
  (%1181, %1182, %var_2156, %var_2157)
}

def @func_10277() -> Tensor[(14, 13, 3), float64] {
  %1183 = @func_8277() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1183.0
}

def @func_9811() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64]) {
  %1184 = @func_917() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1185 = @func_8763() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1186 = @func_8435() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1187 = %1184.0;
  %1188 = %1185.0;
  %1189 = @func_1307() /* ty=Tensor[(14, 13, 3), bool] */;
  %1190 = @func_7076() /* ty=Tensor[(14, 13, 3), bool] */;
  %1191 = %1186.0;
  (%1187, %1188, %1189, %1190, %1191)
}

def @func_15539() -> (Tensor[(14, 13, 3), float32],) {
  %1192 = @func_14406() /* ty=(Tensor[(14, 13, 3), float32],) */;
  %1193 = %1192.0;
  (%1193,)
}

def @func_7825() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  %1194 = @func_26() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1195 = @func_3281() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1196 = %1194.0;
  %1197 = @func_2249() /* ty=Tensor[(14, 13, 3), float64] */;
  %1198 = @func_2569() /* ty=Tensor[(14, 13, 3), float64] */;
  %1199 = %1195.0;
  (%1196, %1197, %1198, %1199)
}

def @func_7885() -> (Tensor[(14, 13, 3), float32],) {
  %1200 = @func_3980() /* ty=Tensor[(14, 13, 3), float32] */;
  (%1200,)
}

def @func_13362() -> (Tensor[(14, 13, 3), int8],) {
  %1201 = @func_13258() /* ty=(Tensor[(14, 13, 3), int8],) */;
  %1202 = %1201.0;
  (%1202,)
}

def @func_1517(%var_1496: Tensor[(9, 4, 7), int32], %var_1497: Tensor[(9, 4, 7), int32]) -> Tensor[(9, 4, 7), uint8] {
  %1203 = cast(%var_1497, dtype="int32") /* ty=Tensor[(9, 4, 7), int32] */;
  %1204 = shape_of(%var_1496, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1205 = cast(%var_1496, dtype="int32") /* ty=Tensor[(9, 4, 7), int32] */;
  %1206 = dyn.reshape(%1203, %1204, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1207 = right_shift(%1205, %1206) /* ty=Tensor[(9, 4, 7), int32] */;
  %1208 = cast(%1207, dtype="int64") /* ty=Tensor[(9, 4, 7), int64] */;
  %1209 = shape_of(%var_1496, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1210 = cast(%var_1496, dtype="int64") /* ty=Tensor[(9, 4, 7), int64] */;
  %1211 = dyn.reshape(%1208, %1209, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1212 = subtract(%1210, %1211) /* ty=Tensor[(9, 4, 7), int64] */;
  %1213 = cast(%var_1496, dtype="uint8") /* ty=Tensor[(9, 4, 7), uint8] */;
  %1214 = shape_of(%1212, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1215 = cast(%1212, dtype="uint8") /* ty=Tensor[(9, 4, 7), uint8] */;
  %1216 = dyn.reshape(%1213, %1214, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  maximum(%1215, %1216) /* ty=Tensor[(9, 4, 7), uint8] */
}

def @func_2026() -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) {
  %1217 = @func_11() /* ty=(Tensor[(14, 13, 3), bool],) */;
  %1218 = @func_1542() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1219 = @func_1278() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
  %1220 = @func_829() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
  %1221 = @func_829() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
  %1222 = %1217.0;
  %1223 = @func_54() /* ty=Tensor[(14, 13, 3), float64] */;
  %1224 = %1218.0;
  %1225 = %1219.1;
  %1226 = %1220.0;
  %1227 = %1221.0;
  %1228 = @func_1307() /* ty=Tensor[(14, 13, 3), bool] */;
  (%1222, %1223, %1224, %1225, %1226, %1227, %1228)
}

def @func_11234() -> Tensor[(15, 2, 5), uint64] {
  @func_6117() /* ty=Tensor[(15, 2, 5), uint64] */
}

def @func_10993() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), int8]) {
  %1229 = @func_2521() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1230 = @func_4607() /* ty=(Tensor[(14, 13, 3), uint64], Tensor[(14, 13, 3), int8]) */;
  %1231 = %1229.0;
  %1232 = %1230.1;
  (%1231, %1232)
}

def @func_10360(%var_10346: Tensor[(12, 1, 14), uint16], %var_10347: Tensor[(12, 9, 14), uint16]) -> (Tensor[(12, 9, 14), bool],) {
  %1233 = cast(%var_10346, dtype="bool") /* ty=Tensor[(12, 1, 14), bool] */;
  %1234 = cast(%var_10347, dtype="bool") /* ty=Tensor[(12, 9, 14), bool] */;
  %1235 = equal(%1233, %1234) /* ty=Tensor[(12, 9, 14), bool] */;
  (%1235,)
}

def @func_12379(%var_12374: Tensor[(6, 10, 4), uint64]) -> Tensor[(6, 10, 4), uint64] {
  %1236 = cast(%var_12374, dtype="uint64") /* ty=Tensor[(6, 10, 4), uint64] */;
  %1237 = shape_of(meta[relay.Constant][50] /* ty=Tensor[(6, 10, 4), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1238 = cast(meta[relay.Constant][50] /* ty=Tensor[(6, 10, 4), uint64] */, dtype="uint64") /* ty=Tensor[(6, 10, 4), uint64] */;
  %1239 = dyn.reshape(%1236, %1237, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  logical_xor(%1238, %1239) /* ty=Tensor[(6, 10, 4), uint64] */
}

def @func_5417() -> (Tensor[(14, 13, 3), float64], Tensor[(120), int8], Tensor[(24), int8], Tensor[(30, 4), int8], Tensor[(24), int8]) {
  %1240 = @func_1694() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
  %1241 = cast(meta[relay.Constant][51] /* ty=Tensor[(24), int8] */, dtype="int8") /* ty=Tensor[(24), int8] */;
  %1242 = cast(meta[relay.Constant][52] /* ty=Tensor[(30, 4), int8] */, dtype="int8") /* ty=Tensor[(30, 4), int8] */;
  %1243 = reshape(%1241, newshape=[24]) /* ty=Tensor[(24), int8] */;
  %1244 = reshape(%1242, newshape=[120]) /* ty=Tensor[(120), int8] */;
  %1245 = @func_650(%1243, %1244) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(8, 5, 3), bool], Tensor[(24), int8], Tensor[(120), int8]) */;
  %1246 = cast(meta[relay.Constant][51] /* ty=Tensor[(24), int8] */, dtype="int8") /* ty=Tensor[(24), int8] */;
  %1247 = reshape(%1246, newshape=[24]) /* ty=Tensor[(24), int8] */;
  %1248 = @func_2285(%1247) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(120), int8], Tensor[(24), int8], Tensor[(120), int8]) */;
  %1249 = %1240.1;
  %1250 = %1245.3;
  %1251 = %1248.3;
  (%1249, %1250, meta[relay.Constant][51] /* ty=Tensor[(24), int8] */, meta[relay.Constant][52] /* ty=Tensor[(30, 4), int8] */, %1251)
}

def @func_6771() -> Tensor[(14, 13, 3), bool] {
  %1252 = @func_5211() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), bool]) */;
  %1252.2
}

def @func_3086(%var_3077: Tensor[(14, 13, 3), float32]) -> (Tensor[(14, 13, 3), bool],) {
  %1253 = @func_3047() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
  %1254 = %1253.0;
  %1255 = cast(%var_3077, dtype="bool") /* ty=Tensor[(14, 13, 3), bool] */;
  %1256 = shape_of(%1254, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1257 = cast(%1254, dtype="bool") /* ty=Tensor[(14, 13, 3), bool] */;
  %1258 = dyn.reshape(%1255, %1256, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1259 = logical_or(%1257, %1258) /* ty=Tensor[(14, 13, 3), bool] */;
  (%1259,)
}

def @func_917() -> (Tensor[(14, 13, 3), float64],) {
  %1260 = @func_74() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1261 = %1260.0;
  (%1261,)
}

def @func_16273() -> (Tensor[(14, 13, 3), float64],) {
  %1262 = @func_13952() /* ty=Tensor[(14, 13, 3), float64] */;
  (%1262,)
}

def @func_11477() -> (Tensor[(14, 13, 3), float64],) {
  %1263 = @func_11142() /* ty=Tensor[(14, 13, 3), float64] */;
  (%1263,)
}

def @func_541() -> (Tensor[(14, 13, 3), float32],) {
  %1264 = @func_74() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1265 = %1264.0;
  %1266 = cast(%1265, dtype="float32") /* ty=Tensor[(14, 13, 3), float32] */;
  %1267 = acosh(%1266) /* ty=Tensor[(14, 13, 3), float32] */;
  (%1267,)
}

def @func_9625() -> Tensor[(14, 13, 3), float64] {
  %1268 = @func_3800() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1268.0
}

def @func_16545() -> (Tensor[(14, 13, 3), bool],) {
  %1269 = @func_11() /* ty=(Tensor[(14, 13, 3), bool],) */;
  %1270 = %1269.0;
  (%1270,)
}

def @func_2569() -> Tensor[(14, 13, 3), float64] {
  %1271 = @func_74() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1271.0
}

def @func_15746() -> (Tensor[(14, 13, 3), float64],) {
  %1272 = @func_13619() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1273 = %1272.0;
  (%1273,)
}

def @func_3047() -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) {
  %1274 = @func_2324() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1275 = @func_1626() /* ty=Tensor[(14, 13, 3), float32] */;
  %1276 = %1274.0;
  (%1275, %1276)
}

def @func_10068() -> (Tensor[(14, 13, 3), float64],) {
  %1277 = @func_9625() /* ty=Tensor[(14, 13, 3), float64] */;
  (%1277,)
}

def @func_6102() -> Tensor[(14, 13, 3), float64] {
  %1278 = @func_369() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(3, 40), int8], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
  %1278.4
}

def @func_16502() -> Tensor[(14, 13, 3), float32] {
  %1279 = @func_3047() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
  %1279.0
}

def @func_6633(%var_6602: Tensor[(30, 4), int8]) -> (Tensor[(30, 4), float64], Tensor[(30, 4), int8], Tensor[(14, 13, 3), bool]) {
  %1280 = @func_5417() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(120), int8], Tensor[(24), int8], Tensor[(30, 4), int8], Tensor[(24), int8]) */;
  %1281 = %1280.3;
  %1282 = cast(%var_6602, dtype="float64") /* ty=Tensor[(30, 4), float64] */;
  %1283 = shape_of(%1281, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1284 = cast(%1281, dtype="float64") /* ty=Tensor[(30, 4), float64] */;
  %1285 = dyn.reshape(%1282, %1283, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1286 = cast(%1281, dtype="int8") /* ty=Tensor[(30, 4), int8] */;
  %1287 = shape_of(%var_6602, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1288 = cast(%var_6602, dtype="int8") /* ty=Tensor[(30, 4), int8] */;
  %1289 = dyn.reshape(%1286, %1287, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %1290 = power(%1284, %1285) /* ty=Tensor[(30, 4), float64] */;
  %1291 = cast(%1290, dtype="int16") /* ty=Tensor[(30, 4), int16] */;
  %1292 = reshape(%1291, newshape=[120]) /* ty=Tensor[(120), int16] */;
  %1293 = @func_4219(%1292) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(120), int16]) */;
  %1294 = logical_xor(%1288, %1289) /* ty=Tensor[(30, 4), int8] */;
  %1295 = %1293.1;
  (%1290, %1294, %1295)
}

def @func_9422() -> Tensor[(14, 13, 3), float32] {
  %1296 = @func_8919() /* ty=(Tensor[(14, 13, 3), float32],) */;
  %1296.0
}

def @func_1542() -> (Tensor[(14, 13, 3), float64],) {
  %1297 = @func_54() /* ty=Tensor[(14, 13, 3), float64] */;
  (%1297,)
}

def @func_5790() -> Tensor[(14, 13, 3), float64] {
  %1298 = @func_5232() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1298.0
}

def @func_6332() -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64]) {
  %1299 = @func_6247() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(12, 2), int8], Tensor[(6, 4), int8], Tensor[(120), int8], Tensor[(14, 13, 3), float64]) */;
  %1300 = @func_1307() /* ty=Tensor[(14, 13, 3), bool] */;
  %1301 = %1299.0;
  (%1300, %1301)
}

def @func_15693() -> (Tensor[(14, 13, 3), float64],) {
  %1302 = @func_9552() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) */;
  %1303 = %1302.0;
  (%1303,)
}

def @func_11264() -> (Tensor[(14, 13, 3), float64],) {
  %1304 = @func_3759() /* ty=Tensor[(14, 13, 3), float64] */;
  (%1304,)
}

def @func_4965() -> (Tensor[(14, 13, 3), float64],) {
  %1305 = @func_26() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1306 = %1305.0;
  (%1306,)
}

def @func_15650() -> (Tensor[(14, 13, 3), float64],) {
  %1307 = @func_8217() /* ty=Tensor[(14, 13, 3), float64] */;
  (%1307,)
}

def @func_9599() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  %1308 = @func_6817() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1309 = @func_2376() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1310 = %1308.0;
  %1311 = %1309.0;
  (%1310, %1311)
}

def @func_7317() -> (Tensor[(14, 13, 3), float64],) {
  %1312 = @func_3541() /* ty=Tensor[(14, 13, 3), float64] */;
  (%1312,)
}

def @func_10770() -> (Tensor[(14, 13, 3), float32],) {
  %1313 = @func_8182() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float32]) */;
  %1314 = %1313.0;
  (%1314,)
}

def @func_10824() -> (Tensor[(7, 13, 6), float32],) {
  %1315 = cast(meta[relay.Constant][53] /* ty=Tensor[(7, 13, 6), float32] */, dtype="float32") /* ty=Tensor[(7, 13, 6), float32] */;
  %1316 = log(%1315) /* ty=Tensor[(7, 13, 6), float32] */;
  (%1316,)
}

def @func_15871() -> (Tensor[(14, 13, 3), bool],) {
  %1317 = @func_13476() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64]) */;
  %1318 = %1317.0;
  (%1318,)
}

def @func_2956(%var_2931: Tensor[(14, 13, 3), float64]) -> (Tensor[(14, 13, 3), int32], Tensor[(14, 13, 3), float64]) {
  %1319 = @func_74() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1320 = %1319.0;
  %1321 = cast(%var_2931, dtype="int32") /* ty=Tensor[(14, 13, 3), int32] */;
  %1322 = shape_of(%1320, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1323 = cast(%1320, dtype="int32") /* ty=Tensor[(14, 13, 3), int32] */;
  %1324 = dyn.reshape(%1321, %1322, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1325 = cast(%var_2931, dtype="float64") /* ty=Tensor[(14, 13, 3), float64] */;
  %1326 = logical_xor(%1323, %1324) /* ty=Tensor[(14, 13, 3), int32] */;
  %1327 = sqrt(%1325) /* ty=Tensor[(14, 13, 3), float64] */;
  (%1326, %1327)
}

def @func_745(%var_711: Tensor[(14, 13, 3), float64]) -> (Tensor[(14, 13, 3), int16], Tensor[(14, 13, 3), float64]) {
  %1328 = @func_390() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1329 = %1328.0;
  %1330 = cast(%var_711, dtype="int16") /* ty=Tensor[(14, 13, 3), int16] */;
  %1331 = shape_of(%1329, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1332 = cast(%1329, dtype="int16") /* ty=Tensor[(14, 13, 3), int16] */;
  %1333 = dyn.reshape(%1330, %1331, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1334 = cast(%1329, dtype="float64") /* ty=Tensor[(14, 13, 3), float64] */;
  %1335 = shape_of(%var_711, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1336 = cast(%var_711, dtype="float64") /* ty=Tensor[(14, 13, 3), float64] */;
  %1337 = dyn.reshape(%1334, %1335, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1338 = maximum(%1336, %1337) /* ty=Tensor[(14, 13, 3), float64] */;
  %1339 = cast(%1338, dtype="float64") /* ty=Tensor[(14, 13, 3), float64] */;
  %1340 = right_shift(%1332, %1333) /* ty=Tensor[(14, 13, 3), int16] */;
  %1341 = cos(%1339) /* ty=Tensor[(14, 13, 3), float64] */;
  (%1340, %1341)
}

def @func_6365() -> (Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(5, 3, 8), int16], Tensor[(120), int16]) {
  %1342 = @func_1842() /* ty=(Tensor[(24), int8], Tensor[(14, 13, 3), float64], Tensor[(5, 3, 8), int16], Tensor[(120), int16]) */;
  %1343 = cast(meta[relay.Constant][54] /* ty=Tensor[(120), int16] */, dtype="int16") /* ty=Tensor[(120), int16] */;
  %1344 = cast(meta[relay.Constant][54] /* ty=Tensor[(120), int16] */, dtype="int16") /* ty=Tensor[(120), int16] */;
  %1345 = reshape(%1343, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), int16] */;
  %1346 = reshape(%1344, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), int16] */;
  %1347 = @func_3120() /* ty=Tensor[(14, 13, 3), float64] */;
  %1348 = %1342.0;
  %1349 = @func_465(%1345, %1346) /* ty=Tensor[(5, 3, 8), int16] */;
  (%1347, %1348, %1349, meta[relay.Constant][54] /* ty=Tensor[(120), int16] */)
}

def @func_13619() -> (Tensor[(14, 13, 3), float64],) {
  %1350 = @func_8217() /* ty=Tensor[(14, 13, 3), float64] */;
  (%1350,)
}

def @func_369() -> (Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(3, 40), int8], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  %1351 = @func_74() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1352 = cast(meta[relay.Constant][55] /* ty=Tensor[(24), int8] */, dtype="int8") /* ty=Tensor[(24), int8] */;
  %1353 = cast(meta[relay.Constant][56] /* ty=Tensor[(3, 40), int8] */, dtype="int8") /* ty=Tensor[(3, 40), int8] */;
  %1354 = reshape(%1352, newshape=[8, 1, 3]) /* ty=Tensor[(8, 1, 3), int8] */;
  %1355 = reshape(%1353, newshape=[8, 5, 3]) /* ty=Tensor[(8, 5, 3), int8] */;
  %1356 = @func_161(%1354, %1355) /* ty=(Tensor[(8, 5, 3), bool], Tensor[(14, 13, 3), bool]) */;
  %1357 = %1356.1;
  %1358 = cast(%1357, dtype="float64") /* ty=Tensor[(14, 13, 3), float64] */;
  %1359 = @func_74() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1360 = %1351.0;
  %1361 = acos(%1358) /* ty=Tensor[(14, 13, 3), float64] */;
  %1362 = %1359.0;
  (%1360, meta[relay.Constant][55] /* ty=Tensor[(24), int8] */, meta[relay.Constant][56] /* ty=Tensor[(3, 40), int8] */, %1361, %1362)
}

def @func_12790() -> (Tensor[(16, 8, 5), int32], Tensor[(14, 13, 3), float64], Tensor[(7, 13, 6), float32]) {
  %1363 = @func_10824() /* ty=(Tensor[(7, 13, 6), float32],) */;
  %1364 = @func_12181() /* ty=Tensor[(16, 8, 5), int32] */;
  %1365 = @func_8691() /* ty=Tensor[(14, 13, 3), float64] */;
  %1366 = %1363.0;
  (%1364, %1365, %1366)
}

def @func_5690() -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(120), int8], Tensor[(24), int8], Tensor[(120), int8], Tensor[(14, 13, 3), float64]) {
  %1367 = @func_3456() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
  %1368 = cast(meta[relay.Constant][57] /* ty=Tensor[(24), int8] */, dtype="int8") /* ty=Tensor[(24), int8] */;
  %1369 = cast(meta[relay.Constant][58] /* ty=Tensor[(120), int8] */, dtype="int8") /* ty=Tensor[(120), int8] */;
  %1370 = reshape(%1368, newshape=[24]) /* ty=Tensor[(24), int8] */;
  %1371 = reshape(%1369, newshape=[120]) /* ty=Tensor[(120), int8] */;
  %1372 = @func_650(%1370, %1371) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(8, 5, 3), bool], Tensor[(24), int8], Tensor[(120), int8]) */;
  %1373 = @func_74() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1374 = @func_4540() /* ty=Tensor[(14, 13, 3), bool] */;
  %1375 = %1367.1;
  %1376 = @func_2569() /* ty=Tensor[(14, 13, 3), float64] */;
  %1377 = %1372.3;
  %1378 = %1373.0;
  (%1374, %1375, %1376, %1377, meta[relay.Constant][57] /* ty=Tensor[(24), int8] */, meta[relay.Constant][58] /* ty=Tensor[(120), int8] */, %1378)
}

def @func_3636(%var_3630: Tensor[(6, 2, 7), float64]) -> Tensor[(6, 2, 7), float64] {
  %1379 = cast(%var_3630, dtype="float64") /* ty=Tensor[(6, 2, 7), float64] */;
  %1380 = shape_of(meta[relay.Constant][59] /* ty=Tensor[(6, 2, 7), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1381 = cast(meta[relay.Constant][59] /* ty=Tensor[(6, 2, 7), float64] */, dtype="float64") /* ty=Tensor[(6, 2, 7), float64] */;
  %1382 = dyn.reshape(%1379, %1380, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%1381, %1382) /* ty=Tensor[(6, 2, 7), float64] */
}

def @func_10315() -> (Tensor[(14, 13, 3), bool],) {
  %1383 = @func_978() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) */;
  %1384 = %1383.1;
  (%1384,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_4911() -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) {
  %0 = @func_1278() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
  %1 = @func_390() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %2 = %0.2;
  %3 = %1.0;
  (%2, %3)
}

def @func_6897() -> (Tensor[(14, 13, 3), float64],) {
  %4 = @func_54() /* ty=Tensor[(14, 13, 3), float64] */;
  (%4,)
}

def @func_9744() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) {
  %9 = fn () -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) {
    %5 = @func_7317() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %6 = @func_4393() /* ty=(Tensor[(14, 13, 3), int8], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
    %7 = %5.0;
    %8 = %6.1;
    (%7, %8)
  };
  %9() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) */
}

def @func_11918(%var_11916: Tensor[(84), float64]) -> (Tensor[(14, 13, 3), bool], Tensor[(6, 2, 7), float64], Tensor[(84), float64]) {
  @func_11915(%var_11916) /* ty=(Tensor[(14, 13, 3), bool], Tensor[(6, 2, 7), float64], Tensor[(84), float64]) */
}

def @func_15724() -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  %10 = @func_12790() /* ty=(Tensor[(16, 8, 5), int32], Tensor[(14, 13, 3), float64], Tensor[(7, 13, 6), float32]) */;
  %11 = @func_3281() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %12 = @func_8586() /* ty=Tensor[(14, 13, 3), bool] */;
  %13 = %10.1;
  %14 = %11.0;
  (%12, %13, %14)
}

def @func_14832(%var_14830: Tensor[(3, 3, 1), uint16], %var_14831: Tensor[(3, 3, 15), uint16]) -> (Tensor[(3, 3, 15), uint64], Tensor[(14, 13, 3), int32], Tensor[(546), float64], Tensor[(3, 3, 1), float64]) {
  @func_14828(%var_14830, %var_14831) /* ty=(Tensor[(3, 3, 15), uint64], Tensor[(14, 13, 3), int32], Tensor[(546), float64], Tensor[(3, 3, 1), float64]) */
}

def @func_11082() -> Tensor[(14, 13, 3), bool] {
  @func_1307() /* ty=Tensor[(14, 13, 3), bool] */
}

def @func_8279() -> (Tensor[(14, 13, 3), float64],) {
  @func_8277() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_13258() -> (Tensor[(14, 13, 3), int8],) {
  %15 = @func_3303() /* ty=Tensor[(14, 13, 3), int8] */;
  (%15,)
}

def @func_12549(%var_12547: Tensor[(3, 10, 14), float64], %var_12548: Tensor[(336, 1), float64]) -> (Tensor[(14, 4, 6), float64], Tensor[(336, 1), float64], Tensor[(14, 13, 3), int8], Tensor[(14, 13, 3), float64], Tensor[(3, 10, 14), float32]) {
  @func_12545(%var_12547, %var_12548) /* ty=(Tensor[(14, 4, 6), float64], Tensor[(336, 1), float64], Tensor[(14, 13, 3), int8], Tensor[(14, 13, 3), float64], Tensor[(3, 10, 14), float32]) */
}

def @func_12101() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  %16 = @func_6247() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(12, 2), int8], Tensor[(6, 4), int8], Tensor[(120), int8], Tensor[(14, 13, 3), float64]) */;
  %17 = @func_6013() /* ty=Tensor[(14, 13, 3), float64] */;
  %18 = %16.0;
  (%17, %18)
}

def @func_14351() -> (Tensor[(14, 13, 3), float64],) {
  @func_14349() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_8183() -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float32]) {
  %25 = fn () -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float32]) {
    %19 = @func_3047() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
    %20 = @func_1278() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
    %21 = @func_3047() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
    %22 = %19.0;
    %23 = %20.2;
    %24 = %21.0;
    (%22, %23, %24)
  };
  %25() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float32]) */
}

def @func_3801() -> (Tensor[(14, 13, 3), float64],) {
  %28 = fn () -> (Tensor[(14, 13, 3), float64],) {
    %26 = @func_1694() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
    %27 = %26.1;
    (%27,)
  };
  %28() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_5233() -> (Tensor[(14, 13, 3), float64],) {
  %31 = fn () -> (Tensor[(14, 13, 3), float64],) {
    %29 = @func_4965() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %30 = %29.0;
    (%30,)
  };
  %31() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_5733() -> Tensor[(12, 8, 9), float32] {
  @func_5731() /* ty=Tensor[(12, 8, 9), float32] */
}

def @func_7343(%var_7340: Tensor[(12, 2), int8]) -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(12, 2), int8], Tensor[(120), int8]) {
  %32 = cast(%var_7340, dtype="int8") /* ty=Tensor[(12, 2), int8] */;
  %33 = cast(meta[relay.Constant][0] /* ty=Tensor[(120), int8] */, dtype="int8") /* ty=Tensor[(120), int8] */;
  %34 = cast(meta[relay.Constant][0] /* ty=Tensor[(120), int8] */, dtype="int8") /* ty=Tensor[(120), int8] */;
  %35 = reshape(%32, newshape=[24]) /* ty=Tensor[(24), int8] */;
  %36 = reshape(%33, newshape=[60, 2]) /* ty=Tensor[(60, 2), int8] */;
  %37 = reshape(%34, newshape=[60, 2]) /* ty=Tensor[(60, 2), int8] */;
  %38 = @func_4507(%35, %36, %37) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(120), int8], Tensor[(24), int8], Tensor[(60, 2), bool]) */;
  %39 = @func_5790() /* ty=Tensor[(14, 13, 3), float64] */;
  %40 = %38.3;
  (%39, %40, %var_7340, meta[relay.Constant][0] /* ty=Tensor[(120), int8] */)
}

def @func_8587() -> Tensor[(14, 13, 3), bool] {
  %41 = fn () -> Tensor[(14, 13, 3), bool] {
    @func_5867() /* ty=Tensor[(14, 13, 3), bool] */
  };
  %41() /* ty=Tensor[(14, 13, 3), bool] */
}

def @func_5867() -> Tensor[(14, 13, 3), bool] {
  %42 = @func_2026() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) */;
  %42.3
}

def @func_903(%var_901: Tensor[(14, 13, 3), float32]) -> Tensor[(14, 13, 3), float32] {
  @func_900(%var_901) /* ty=Tensor[(14, 13, 3), float32] */
}

def @func_6104() -> Tensor[(14, 13, 3), float64] {
  @func_6102() /* ty=Tensor[(14, 13, 3), float64] */
}

def @func_12902(%var_12886: uint64, %var_12887: Tensor[(4, 5, 15), uint64]) -> Tensor[(4, 5, 15), bool] {
  %43 = cast(%var_12886, dtype="bool") /* ty=bool */;
  %44 = cast(%var_12887, dtype="bool") /* ty=Tensor[(4, 5, 15), bool] */;
  greater_equal(%43, %44) /* ty=Tensor[(4, 5, 15), bool] */
}

def @func_15935() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  %48 = fn () -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
    %45 = @func_15141() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %46 = %45.0;
    %47 = @func_8881() /* ty=Tensor[(14, 13, 3), float64] */;
    (%46, %47)
  };
  %48() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */
}

def @func_369() -> (Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(3, 40), int8], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  %49 = @func_74() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %50 = cast(meta[relay.Constant][1] /* ty=Tensor[(24), int8] */, dtype="int8") /* ty=Tensor[(24), int8] */;
  %51 = cast(meta[relay.Constant][2] /* ty=Tensor[(3, 40), int8] */, dtype="int8") /* ty=Tensor[(3, 40), int8] */;
  %52 = reshape(%50, newshape=[8, 1, 3]) /* ty=Tensor[(8, 1, 3), int8] */;
  %53 = reshape(%51, newshape=[8, 5, 3]) /* ty=Tensor[(8, 5, 3), int8] */;
  %54 = @func_161(%52, %53) /* ty=(Tensor[(8, 5, 3), bool], Tensor[(14, 13, 3), bool]) */;
  %55 = %54.1;
  %56 = cast(%55, dtype="float64") /* ty=Tensor[(14, 13, 3), float64] */;
  %57 = @func_74() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %58 = %49.0;
  %59 = acos(%56) /* ty=Tensor[(14, 13, 3), float64] */;
  %60 = %57.0;
  (%58, meta[relay.Constant][1] /* ty=Tensor[(24), int8] */, meta[relay.Constant][2] /* ty=Tensor[(3, 40), int8] */, %59, %60)
}

def @func_1543() -> (Tensor[(14, 13, 3), float64],) {
  %62 = fn () -> (Tensor[(14, 13, 3), float64],) {
    %61 = @func_54() /* ty=Tensor[(14, 13, 3), float64] */;
    (%61,)
  };
  %62() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_919() -> (Tensor[(14, 13, 3), float64],) {
  @func_917() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_5186() -> Tensor[(14, 13, 3), float64] {
  %63 = fn () -> Tensor[(14, 13, 3), float64] {
    @func_3120() /* ty=Tensor[(14, 13, 3), float64] */
  };
  %63() /* ty=Tensor[(14, 13, 3), float64] */
}

def @func_8724(%var_8722: Tensor[(13, 5, 10), float64], %var_8723: Tensor[(630), uint32]) -> (Tensor[(13, 5, 10), float64], Tensor[(7, 9, 10), uint32], Tensor[(70), uint32], Tensor[(630), uint32]) {
  @func_8720(%var_8722, %var_8723) /* ty=(Tensor[(13, 5, 10), float64], Tensor[(7, 9, 10), uint32], Tensor[(70), uint32], Tensor[(630), uint32]) */
}

def @func_9029() -> (Tensor[(14, 13, 3), float64], Tensor[(3, 40), int8], Tensor[(8, 5, 3), bool], Tensor[(24), int8]) {
  %64 = @func_1542() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %65 = @func_369() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(3, 40), int8], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
  %66 = cast(meta[relay.Constant][3] /* ty=Tensor[(24), int8] */, dtype="int8") /* ty=Tensor[(24), int8] */;
  %67 = %65.2;
  %68 = cast(%67, dtype="int8") /* ty=Tensor[(3, 40), int8] */;
  %69 = reshape(%66, newshape=[8, 1, 3]) /* ty=Tensor[(8, 1, 3), int8] */;
  %70 = reshape(%68, newshape=[8, 5, 3]) /* ty=Tensor[(8, 5, 3), int8] */;
  %71 = @func_161(%69, %70) /* ty=(Tensor[(8, 5, 3), bool], Tensor[(14, 13, 3), bool]) */;
  %72 = %64.0;
  %73 = %71.0;
  (%72, %67, %73, meta[relay.Constant][3] /* ty=Tensor[(24), int8] */)
}

def @func_13936() -> Tensor[(14, 13, 3), uint64] {
  %74 = @func_4607() /* ty=(Tensor[(14, 13, 3), uint64], Tensor[(14, 13, 3), int8]) */;
  %74.0
}

def @func_6117() -> Tensor[(15, 2, 5), uint64] {
  %75 = cast(meta[relay.Constant][5] /* ty=Tensor[(15, 2, 5), uint64] */, dtype="uint64") /* ty=Tensor[(15, 2, 5), uint64] */;
  %76 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(15, 2, 5), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %77 = cast(meta[relay.Constant][4] /* ty=Tensor[(15, 2, 5), uint64] */, dtype="uint64") /* ty=Tensor[(15, 2, 5), uint64] */;
  %78 = dyn.reshape(%75, %76, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  logical_xor(%77, %78) /* ty=Tensor[(15, 2, 5), uint64] */
}

def @func_917() -> (Tensor[(14, 13, 3), float64],) {
  %79 = @func_74() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %80 = %79.0;
  (%80,)
}

def @func_14726(%var_14723: Tensor[(70), uint32]) -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32], Tensor[(7, 9, 10), uint32], Tensor[(70), uint32], Tensor[(630), uint32]) {
  %81 = @func_9811() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64]) */;
  %82 = cast(%var_14723, dtype="uint32") /* ty=Tensor[(70), uint32] */;
  %83 = cast(meta[relay.Constant][6] /* ty=Tensor[(630), uint32] */, dtype="uint32") /* ty=Tensor[(630), uint32] */;
  %84 = reshape(%82, newshape=[7, 1, 10]) /* ty=Tensor[(7, 1, 10), uint32] */;
  %85 = reshape(%83, newshape=[7, 9, 10]) /* ty=Tensor[(7, 9, 10), uint32] */;
  %86 = @func_4877(%84, %85) /* ty=(Tensor[(7, 9, 10), uint32],) */;
  %87 = %81.3;
  %88 = @func_3980() /* ty=Tensor[(14, 13, 3), float32] */;
  %89 = %86.0;
  (%87, %88, %89, %var_14723, meta[relay.Constant][6] /* ty=Tensor[(630), uint32] */)
}

def @func_9390() -> Tensor[(14, 13, 3), float32] {
  @func_9388() /* ty=Tensor[(14, 13, 3), float32] */
}

def @func_16743() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32]) {
  %93 = fn () -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32]) {
    %90 = @func_3047() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
    %91 = %90.1;
    %92 = @func_3980() /* ty=Tensor[(14, 13, 3), float32] */;
    (%91, %92)
  };
  %93() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32]) */
}

def @func_12358(%var_12356: Tensor[(120), int8]) -> (Tensor[(14, 13, 3), bool], Tensor[(12, 2), int8], Tensor[(24), int8], Tensor[(120), int8]) {
  @func_12355(%var_12356) /* ty=(Tensor[(14, 13, 3), bool], Tensor[(12, 2), int8], Tensor[(24), int8], Tensor[(120), int8]) */
}

def @func_3047() -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) {
  %94 = @func_2324() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %95 = @func_1626() /* ty=Tensor[(14, 13, 3), float32] */;
  %96 = %94.0;
  (%95, %96)
}

def @func_16995() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(120, 1), int8], Tensor[(14, 13, 3), bool]) {
  %109 = fn () -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(120, 1), int8], Tensor[(14, 13, 3), bool]) {
    %97 = @func_15141() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %98 = cast(meta[relay.Constant][7] /* ty=Tensor[(24), int8] */, dtype="int8") /* ty=Tensor[(24), int8] */;
    %99 = cast(meta[relay.Constant][8] /* ty=Tensor[(120, 1), int8] */, dtype="int8") /* ty=Tensor[(120, 1), int8] */;
    %100 = cast(meta[relay.Constant][8] /* ty=Tensor[(120, 1), int8] */, dtype="int8") /* ty=Tensor[(120, 1), int8] */;
    %101 = reshape(%98, newshape=[24]) /* ty=Tensor[(24), int8] */;
    %102 = reshape(%99, newshape=[60, 2]) /* ty=Tensor[(60, 2), int8] */;
    %103 = reshape(%100, newshape=[60, 2]) /* ty=Tensor[(60, 2), int8] */;
    %104 = @func_4507(%101, %102, %103) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(120), int8], Tensor[(24), int8], Tensor[(60, 2), bool]) */;
    %105 = @func_13476() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64]) */;
    %106 = %97.0;
    %107 = %104.0;
    %108 = %105.1;
    (%106, %107, meta[relay.Constant][7] /* ty=Tensor[(24), int8] */, meta[relay.Constant][8] /* ty=Tensor[(120, 1), int8] */, %108)
  };
  %109() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(120, 1), int8], Tensor[(14, 13, 3), bool]) */
}

def @func_1020() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), int8]) {
  @func_1018() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), int8]) */
}

def @func_14582() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  @func_14580() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */
}

def @func_6258() -> (Tensor[(12, 8, 9), float64],) {
  %110 = @func_3956() /* ty=(Tensor[(12, 8, 9), float32], Tensor[(12, 8, 9), float64]) */;
  %111 = %110.1;
  (%111,)
}

def @func_16084() -> (Tensor[(14, 13, 3), bool],) {
  %113 = fn () -> (Tensor[(14, 13, 3), bool],) {
    %112 = @func_15884() /* ty=Tensor[(14, 13, 3), bool] */;
    (%112,)
  };
  %113() /* ty=(Tensor[(14, 13, 3), bool],) */
}

def @func_4442() -> Tensor[(14, 13, 3), float64] {
  @func_3541() /* ty=Tensor[(14, 13, 3), float64] */
}

def @func_16342() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  %114 = @func_15245() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %115 = @func_14224() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %116 = %114.0;
  %117 = %115.0;
  (%116, %117)
}

def @func_8408() -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) {
  @func_8406() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */
}

def @func_11170() -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float32]) {
  %122 = fn () -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float32]) {
    %118 = @func_6952() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32]) */;
    %119 = @func_541() /* ty=(Tensor[(14, 13, 3), float32],) */;
    %120 = %118.2;
    %121 = %119.0;
    (%120, %121)
  };
  %122() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float32]) */
}

def @func_16924() -> (Tensor[(14, 13, 3), float64], Tensor[(6, 1, 1), float32], Tensor[(6), float32]) {
  %123 = @func_16742() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32]) */;
  %124 = cast(meta[relay.Constant][9] /* ty=Tensor[(6), float32] */, dtype="float32") /* ty=Tensor[(6), float32] */;
  %125 = reshape(%124, newshape=[6, 1, 1]) /* ty=Tensor[(6, 1, 1), float32] */;
  %126 = %123.0;
  %127 = @func_10195(%125) /* ty=Tensor[(6, 1, 1), float32] */;
  (%126, %127, meta[relay.Constant][9] /* ty=Tensor[(6), float32] */)
}

def @func_16504() -> Tensor[(14, 13, 3), float32] {
  @func_16502() /* ty=Tensor[(14, 13, 3), float32] */
}

def @func_3399() -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float32]) {
  @func_3397() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float32]) */
}

def @func_3433(%var_3432: Tensor[(14, 7, 8), float32]) -> (Tensor[(14, 7, 8), float32], Tensor[(14, 7, 8), float32], Tensor[(14, 13, 3), float64]) {
  %135 = fn (%var_3412: Tensor[(14, 7, 8), float32]) -> (Tensor[(14, 7, 8), float32], Tensor[(14, 7, 8), float32], Tensor[(14, 13, 3), float64]) {
    %128 = cast(8.99059f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %129 = cast(%var_3412, dtype="float32") /* ty=Tensor[(14, 7, 8), float32] */;
    %130 = cast(%var_3412, dtype="float32") /* ty=Tensor[(14, 7, 8), float32] */;
    %131 = @func_2324() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %132 = floor_divide(%128, %129) /* ty=Tensor[(14, 7, 8), float32] */;
    %133 = sqrt(%130) /* ty=Tensor[(14, 7, 8), float32] */;
    %134 = %131.0;
    (%132, %133, %134)
  };
  %135(%var_3432) /* ty=(Tensor[(14, 7, 8), float32], Tensor[(14, 7, 8), float32], Tensor[(14, 13, 3), float64]) */
}

def @func_6260() -> (Tensor[(12, 8, 9), float64],) {
  @func_6258() /* ty=(Tensor[(12, 8, 9), float64],) */
}

def @func_9983() -> (Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(14, 13, 3), float64]) {
  @func_9981() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(14, 13, 3), float64]) */
}

def @func_7681(%var_7679: Tensor[(24), int8]) -> (Tensor[(120), int16], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(14, 13, 3), bool]) {
  @func_7678(%var_7679) /* ty=(Tensor[(120), int16], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(14, 13, 3), bool]) */
}

def @func_13540() -> (Tensor[(14, 13, 3), float64],) {
  @func_13538() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_2980() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  %136 = @func_1542() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %137 = @func_74() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %138 = %136.0;
  %139 = %137.0;
  (%138, %139)
}

def @func_772(%var_767: Tensor[(14, 13, 3), bool]) -> Tensor[(14, 13, 3), int8] {
  %140 = @func_11() /* ty=(Tensor[(14, 13, 3), bool],) */;
  %141 = %140.0;
  %142 = cast(%var_767, dtype="int8") /* ty=Tensor[(14, 13, 3), int8] */;
  %143 = shape_of(%141, dtype="int32") /* ty=Tensor[(3), int32] */;
  %144 = cast(%141, dtype="int8") /* ty=Tensor[(14, 13, 3), int8] */;
  %145 = dyn.reshape(%142, %143, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  bitwise_and(%144, %145) /* ty=Tensor[(14, 13, 3), int8] */
}

def @func_11605() -> (Tensor[(5, 3, 8), int16], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) {
  @func_11603() /* ty=(Tensor[(5, 3, 8), int16], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */
}

def @func_3238(%var_3237: Tensor[(14, 13, 3), float64]) -> (Tensor[(14, 13, 3), uint16], Tensor[(14, 13, 3), bool]) {
  %155 = fn (%var_3214: Tensor[(14, 13, 3), float64]) -> (Tensor[(14, 13, 3), uint16], Tensor[(14, 13, 3), bool]) {
    %146 = @func_26() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %147 = %146.0;
    %148 = cast(%var_3214, dtype="uint16") /* ty=Tensor[(14, 13, 3), uint16] */;
    %149 = shape_of(%147, dtype="int32") /* ty=Tensor[(3), int32] */;
    %150 = cast(%147, dtype="uint16") /* ty=Tensor[(14, 13, 3), uint16] */;
    %151 = dyn.reshape(%148, %149, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %152 = @func_1278() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
    %153 = multiply(%150, %151) /* ty=Tensor[(14, 13, 3), uint16] */;
    %154 = %152.1;
    (%153, %154)
  };
  %155(%var_3237) /* ty=(Tensor[(14, 13, 3), uint16], Tensor[(14, 13, 3), bool]) */
}

def @func_465(%var_453: Tensor[(5, 3, 8), int16], %var_454: Tensor[(5, 3, 8), int16]) -> Tensor[(5, 3, 8), int16] {
  %156 = cast(%var_454, dtype="int16") /* ty=Tensor[(5, 3, 8), int16] */;
  %157 = shape_of(%var_453, dtype="int32") /* ty=Tensor[(3), int32] */;
  %158 = cast(%var_453, dtype="int16") /* ty=Tensor[(5, 3, 8), int16] */;
  %159 = dyn.reshape(%156, %157, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  right_shift(%158, %159) /* ty=Tensor[(5, 3, 8), int16] */
}

def @func_5964(%var_5963: Tensor[(14, 13, 3), float64]) -> (Tensor[(14, 13, 3), int64], Tensor[(14, 13, 3), float32]) {
  %169 = fn (%var_5928: Tensor[(14, 13, 3), float64]) -> (Tensor[(14, 13, 3), int64], Tensor[(14, 13, 3), float32]) {
    %160 = @func_5232() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %161 = %160.0;
    %162 = cast(%var_5928, dtype="int64") /* ty=Tensor[(14, 13, 3), int64] */;
    %163 = shape_of(%161, dtype="int32") /* ty=Tensor[(3), int32] */;
    %164 = cast(%161, dtype="int64") /* ty=Tensor[(14, 13, 3), int64] */;
    %165 = dyn.reshape(%162, %163, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %166 = cast(%161, dtype="float32") /* ty=Tensor[(14, 13, 3), float32] */;
    %167 = subtract(%164, %165) /* ty=Tensor[(14, 13, 3), int64] */;
    %168 = atan(%166) /* ty=Tensor[(14, 13, 3), float32] */;
    (%167, %168)
  };
  %169(%var_5963) /* ty=(Tensor[(14, 13, 3), int64], Tensor[(14, 13, 3), float32]) */
}

def @func_7232() -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) {
  %170 = @func_1780() /* ty=(Tensor[(14, 13, 3), float32],) */;
  %171 = @func_5712() /* ty=(Tensor[(14, 13, 3), float32],) */;
  %172 = @func_829() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
  %173 = %170.0;
  %174 = %171.0;
  %175 = %172.0;
  (%173, %174, %175)
}

def @func_10277() -> Tensor[(14, 13, 3), float64] {
  %176 = @func_8277() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %176.0
}

def @func_14453() -> (Tensor[(16, 16, 9), float32], Tensor[(84), float64], Tensor[(84), float64], Tensor[(14, 13, 3), float64]) {
  %177 = cast(meta[relay.Constant][10] /* ty=Tensor[(16, 16, 9), float32] */, dtype="float32") /* ty=Tensor[(16, 16, 9), float32] */;
  %178 = cast(meta[relay.Constant][11] /* ty=Tensor[(84), float64] */, dtype="float64") /* ty=Tensor[(84), float64] */;
  %179 = reshape(%178, newshape=[84]) /* ty=Tensor[(84), float64] */;
  %180 = @func_11915(%179) /* ty=(Tensor[(14, 13, 3), bool], Tensor[(6, 2, 7), float64], Tensor[(84), float64]) */;
  %181 = @func_11289() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %182 = sigmoid(%177) /* ty=Tensor[(16, 16, 9), float32] */;
  %183 = %180.2;
  %184 = %181.0;
  (%182, %183, meta[relay.Constant][11] /* ty=Tensor[(84), float64] */, %184)
}

def @func_14889() -> Tensor[(14, 13, 3), float64] {
  %185 = @func_8763() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %185.0
}

def @func_4222(%var_4220: Tensor[(120), int16]) -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(120), int16]) {
  @func_4219(%var_4220) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(120), int16]) */
}

def @func_9812() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64]) {
  %194 = fn () -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64]) {
    %186 = @func_917() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %187 = @func_8763() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %188 = @func_8435() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %189 = %186.0;
    %190 = %187.0;
    %191 = @func_1307() /* ty=Tensor[(14, 13, 3), bool] */;
    %192 = @func_7076() /* ty=Tensor[(14, 13, 3), bool] */;
    %193 = %188.0;
    (%189, %190, %191, %192, %193)
  };
  %194() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64]) */
}

def @func_16576() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(24), int8]) {
  %201 = fn () -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(24), int8]) {
    %195 = @func_6247() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(12, 2), int8], Tensor[(6, 4), int8], Tensor[(120), int8], Tensor[(14, 13, 3), float64]) */;
    %196 = cast(meta[relay.Constant][12] /* ty=Tensor[(24), int8] */, dtype="int8") /* ty=Tensor[(24), int8] */;
    %197 = reshape(%196, newshape=[24]) /* ty=Tensor[(24), int8] */;
    %198 = @func_2359(%197) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(24), int8], Tensor[(14, 13, 3), float64]) */;
    %199 = %195.0;
    %200 = %198.0;
    (%199, %200, meta[relay.Constant][12] /* ty=Tensor[(24), int8] */)
  };
  %201() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(24), int8]) */
}

def @func_16502() -> Tensor[(14, 13, 3), float32] {
  %202 = @func_3047() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
  %202.0
}

def @func_17234() -> Tensor[(14, 13, 3), float32] {
  %203 = @func_541() /* ty=(Tensor[(14, 13, 3), float32],) */;
  %203.0
}

def @func_9424() -> Tensor[(14, 13, 3), float32] {
  @func_9422() /* ty=Tensor[(14, 13, 3), float32] */
}

def @func_1137(%var_1136: Tensor[(24), int8]) -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), bool], Tensor[(24), int8], Tensor[(30, 4), uint32], Tensor[(14, 13, 3), float64]) {
  %226 = fn (%var_1079: Tensor[(24), int8]) -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), bool], Tensor[(24), int8], Tensor[(30, 4), uint32], Tensor[(14, 13, 3), float64]) {
    %204 = @func_541() /* ty=(Tensor[(14, 13, 3), float32],) */;
    %205 = %204.0;
    %206 = cast(%205, dtype="float64") /* ty=Tensor[(14, 13, 3), float64] */;
    %207 = erf(%206) /* ty=Tensor[(14, 13, 3), float64] */;
    %208 = cast(%207, dtype="float32") /* ty=Tensor[(14, 13, 3), float32] */;
    %209 = reshape(%208, newshape=[14, 13, 3]) /* ty=Tensor[(14, 13, 3), float32] */;
    %210 = @func_11() /* ty=(Tensor[(14, 13, 3), bool],) */;
    %211 = cast(%var_1079, dtype="int8") /* ty=Tensor[(24), int8] */;
    %212 = cast(meta[relay.Constant][13] /* ty=Tensor[(30, 4), int8] */, dtype="int8") /* ty=Tensor[(30, 4), int8] */;
    %213 = reshape(%211, newshape=[8, 1, 3]) /* ty=Tensor[(8, 1, 3), int8] */;
    %214 = reshape(%212, newshape=[8, 5, 3]) /* ty=Tensor[(8, 5, 3), int8] */;
    %215 = @func_161(%213, %214) /* ty=(Tensor[(8, 5, 3), bool], Tensor[(14, 13, 3), bool]) */;
    %216 = %215.0;
    %217 = cast(%216, dtype="uint32") /* ty=Tensor[(8, 5, 3), uint32] */;
    %218 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(30, 4), int8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %219 = cast(meta[relay.Constant][13] /* ty=Tensor[(30, 4), int8] */, dtype="uint32") /* ty=Tensor[(30, 4), uint32] */;
    %220 = dyn.reshape(%217, %218, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %221 = @func_334() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool]) */;
    %222 = @func_900(%209) /* ty=Tensor[(14, 13, 3), float32] */;
    %223 = %210.0;
    %224 = add(%219, %220) /* ty=Tensor[(30, 4), uint32] */;
    %225 = %221.3;
    (%207, %222, %223, %var_1079, %224, %225)
  };
  %226(%var_1136) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), bool], Tensor[(24), int8], Tensor[(30, 4), uint32], Tensor[(14, 13, 3), float64]) */
}

def @func_5360() -> (Tensor[(14, 13, 3), float64],) {
  %229 = fn () -> (Tensor[(14, 13, 3), float64],) {
    %227 = @func_1278() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
    %228 = %227.0;
    (%228,)
  };
  %229() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_335() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool]) {
  %246 = fn () -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool]) {
    %230 = @func_11() /* ty=(Tensor[(14, 13, 3), bool],) */;
    %231 = %230.0;
    %232 = cast(%231, dtype="float32") /* ty=Tensor[(14, 13, 3), float32] */;
    %233 = @func_74() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %234 = @func_74() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %235 = @func_74() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %236 = @func_11() /* ty=(Tensor[(14, 13, 3), bool],) */;
    %237 = @func_11() /* ty=(Tensor[(14, 13, 3), bool],) */;
    %238 = @func_54() /* ty=Tensor[(14, 13, 3), float64] */;
    %239 = log10(%232) /* ty=Tensor[(14, 13, 3), float32] */;
    %240 = %233.0;
    %241 = @func_54() /* ty=Tensor[(14, 13, 3), float64] */;
    %242 = %234.0;
    %243 = %235.0;
    %244 = %236.0;
    %245 = %237.0;
    (%238, %239, %240, %241, %242, %243, %244, %245)
  };
  %246() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool]) */
}

def @func_2377() -> (Tensor[(14, 13, 3), float64],) {
  %249 = fn () -> (Tensor[(14, 13, 3), float64],) {
    %247 = @func_390() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %248 = %247.0;
    (%248,)
  };
  %249() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_11274(%var_11272: Tensor[(1848), int8]) -> (Tensor[(14, 13, 3), bool], Tensor[(12, 14, 11), float64], Tensor[(1848), int8]) {
  %250 = @func_9743() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) */;
  %251 = cast(%var_11272, dtype="int8") /* ty=Tensor[(1848), int8] */;
  %252 = cast(%var_11272, dtype="int8") /* ty=Tensor[(1848), int8] */;
  %253 = reshape(%251, newshape=[12, 14, 11]) /* ty=Tensor[(12, 14, 11), int8] */;
  %254 = reshape(%252, newshape=[12, 14, 11]) /* ty=Tensor[(12, 14, 11), int8] */;
  %255 = @func_8356(%253, %254) /* ty=(Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), float64]) */;
  %256 = %250.1;
  %257 = %255.1;
  (%256, %257, %var_11272)
}

def @func_12792() -> (Tensor[(16, 8, 5), int32], Tensor[(14, 13, 3), float64], Tensor[(7, 13, 6), float32]) {
  @func_12790() /* ty=(Tensor[(16, 8, 5), int32], Tensor[(14, 13, 3), float64], Tensor[(7, 13, 6), float32]) */
}

def @func_13297() -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool]) {
  %262 = fn () -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool]) {
    %258 = @func_9552() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) */;
    %259 = @func_11() /* ty=(Tensor[(14, 13, 3), bool],) */;
    %260 = %258.1;
    %261 = %259.0;
    (%260, %261)
  };
  %262() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool]) */
}

def @func_5320() -> (Tensor[(14, 13, 3), float32],) {
  @func_5318() /* ty=(Tensor[(14, 13, 3), float32],) */
}

def @func_6635(%var_6634: Tensor[(30, 4), int8]) -> (Tensor[(30, 4), float64], Tensor[(30, 4), int8], Tensor[(14, 13, 3), bool]) {
  %279 = fn (%var_6602: Tensor[(30, 4), int8]) -> (Tensor[(30, 4), float64], Tensor[(30, 4), int8], Tensor[(14, 13, 3), bool]) {
    %263 = @func_5417() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(120), int8], Tensor[(24), int8], Tensor[(30, 4), int8], Tensor[(24), int8]) */;
    %264 = %263.3;
    %265 = cast(%var_6602, dtype="float64") /* ty=Tensor[(30, 4), float64] */;
    %266 = shape_of(%264, dtype="int32") /* ty=Tensor[(2), int32] */;
    %267 = cast(%264, dtype="float64") /* ty=Tensor[(30, 4), float64] */;
    %268 = dyn.reshape(%265, %266, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %269 = cast(%264, dtype="int8") /* ty=Tensor[(30, 4), int8] */;
    %270 = shape_of(%var_6602, dtype="int32") /* ty=Tensor[(2), int32] */;
    %271 = cast(%var_6602, dtype="int8") /* ty=Tensor[(30, 4), int8] */;
    %272 = dyn.reshape(%269, %270, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %273 = power(%267, %268) /* ty=Tensor[(30, 4), float64] */;
    %274 = cast(%273, dtype="int16") /* ty=Tensor[(30, 4), int16] */;
    %275 = reshape(%274, newshape=[120]) /* ty=Tensor[(120), int16] */;
    %276 = @func_4219(%275) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(120), int16]) */;
    %277 = logical_xor(%271, %272) /* ty=Tensor[(30, 4), int8] */;
    %278 = %276.1;
    (%273, %277, %278)
  };
  %279(%var_6634) /* ty=(Tensor[(30, 4), float64], Tensor[(30, 4), int8], Tensor[(14, 13, 3), bool]) */
}

def @func_11265() -> (Tensor[(14, 13, 3), float64],) {
  %281 = fn () -> (Tensor[(14, 13, 3), float64],) {
    %280 = @func_3759() /* ty=Tensor[(14, 13, 3), float64] */;
    (%280,)
  };
  %281() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_2721(%var_2719: Tensor[(120), int16], %var_2720: Tensor[(5, 3, 8), int16]) -> (Tensor[(14, 13, 3), float64], Tensor[(120), int16], Tensor[(5, 3, 8), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(5, 3, 8), uint16]) {
  %304 = fn (%var_2675: Tensor[(120), int16], %var_2677: Tensor[(5, 3, 8), int16]) -> (Tensor[(14, 13, 3), float64], Tensor[(120), int16], Tensor[(5, 3, 8), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(5, 3, 8), uint16]) {
    %282 = cast(%var_2675, dtype="int16") /* ty=Tensor[(120), int16] */;
    %283 = cast(%var_2675, dtype="int16") /* ty=Tensor[(120), int16] */;
    %284 = reshape(%282, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), int16] */;
    %285 = reshape(%283, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), int16] */;
    %286 = @func_465(%284, %285) /* ty=Tensor[(5, 3, 8), int16] */;
    %287 = cast(%var_2677, dtype="bool") /* ty=Tensor[(5, 3, 8), bool] */;
    %288 = shape_of(%286, dtype="int32") /* ty=Tensor[(3), int32] */;
    %289 = cast(%286, dtype="bool") /* ty=Tensor[(5, 3, 8), bool] */;
    %290 = dyn.reshape(%287, %288, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %291 = @func_54() /* ty=Tensor[(14, 13, 3), float64] */;
    %292 = cast(%291, dtype="float64") /* ty=Tensor[(14, 13, 3), float64] */;
    %293 = reshape(%292, newshape=[14, 13, 3]) /* ty=Tensor[(14, 13, 3), float64] */;
    %294 = @func_745(%293) /* ty=(Tensor[(14, 13, 3), int16], Tensor[(14, 13, 3), float64]) */;
    %295 = @func_26() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %296 = cast(meta[relay.Constant][14] /* ty=Tensor[(5, 3, 8), int16] */, dtype="uint16") /* ty=Tensor[(5, 3, 8), uint16] */;
    %297 = shape_of(%286, dtype="int32") /* ty=Tensor[(3), int32] */;
    %298 = cast(%286, dtype="uint16") /* ty=Tensor[(5, 3, 8), uint16] */;
    %299 = dyn.reshape(%296, %297, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %300 = not_equal(%289, %290) /* ty=Tensor[(5, 3, 8), bool] */;
    %301 = %294.1;
    %302 = %295.0;
    %303 = minimum(%298, %299) /* ty=Tensor[(5, 3, 8), uint16] */;
    (%291, %var_2675, %300, %301, %302, %303)
  };
  %304(%var_2719, %var_2720) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(120), int16], Tensor[(5, 3, 8), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(5, 3, 8), uint16]) */
}

def @func_4138() -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) {
  %309 = fn () -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) {
    %305 = @func_11() /* ty=(Tensor[(14, 13, 3), bool],) */;
    %306 = @func_1694() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
    %307 = %305.0;
    %308 = %306.0;
    (%307, %308)
  };
  %309() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */
}

def @func_8920() -> (Tensor[(14, 13, 3), float32],) {
  %312 = fn () -> (Tensor[(14, 13, 3), float32],) {
    %310 = @func_4911() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
    %311 = %310.0;
    (%311,)
  };
  %312() /* ty=(Tensor[(14, 13, 3), float32],) */
}

def @func_9422() -> Tensor[(14, 13, 3), float32] {
  %313 = @func_8919() /* ty=(Tensor[(14, 13, 3), float32],) */;
  %313.0
}

def @func_12906(%var_12904: uint64, %var_12905: Tensor[(4, 5, 15), uint64]) -> Tensor[(4, 5, 15), bool] {
  @func_12902(%var_12904, %var_12905) /* ty=Tensor[(4, 5, 15), bool] */
}

def @func_3397() -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float32]) {
  %314 = @func_1780() /* ty=(Tensor[(14, 13, 3), float32],) */;
  %315 = %314.0;
  %316 = cast(%315, dtype="float32") /* ty=Tensor[(14, 13, 3), float32] */;
  %317 = reshape(%316, newshape=[14, 13, 3]) /* ty=Tensor[(14, 13, 3), float32] */;
  %318 = @func_900(%317) /* ty=Tensor[(14, 13, 3), float32] */;
  (%315, %318)
}

def @func_12015() -> (Tensor[(14, 13, 3), int8], Tensor[(14, 13, 3), float64]) {
  %323 = fn () -> (Tensor[(14, 13, 3), int8], Tensor[(14, 13, 3), float64]) {
    %319 = @func_4689() /* ty=(Tensor[(14, 13, 3), int8], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
    %320 = @func_11289() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %321 = %319.0;
    %322 = %320.0;
    (%321, %322)
  };
  %323() /* ty=(Tensor[(14, 13, 3), int8], Tensor[(14, 13, 3), float64]) */
}

def @func_14031() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(84), float64], Tensor[(6, 2, 7), float64]) {
  @func_14029() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(84), float64], Tensor[(6, 2, 7), float64]) */
}

def @func_8538(%var_8536: Tensor[(24), int8], %var_8537: Tensor[(120), int8]) -> (Tensor[(14, 13, 3), float32], Tensor[(12, 2), int8], Tensor[(24), int8], Tensor[(14, 13, 3), bool], Tensor[(120), int8]) {
  @func_8534(%var_8536, %var_8537) /* ty=(Tensor[(14, 13, 3), float32], Tensor[(12, 2), int8], Tensor[(24), int8], Tensor[(14, 13, 3), bool], Tensor[(120), int8]) */
}

def @func_12595() -> (Tensor[(14, 13, 3), float64],) {
  %324 = @func_6817() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %325 = %324.0;
  (%325,)
}

def @func_6498(%var_6496: Tensor[(24), int8], %var_6497: Tensor[(60, 2), int8]) -> (Tensor[(14, 13, 3), bool], Tensor[(15, 2, 5), uint64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(60, 2), int8]) {
  %340 = fn (%var_6483: Tensor[(24), int8], %var_6484: Tensor[(60, 2), int8]) -> (Tensor[(14, 13, 3), bool], Tensor[(15, 2, 5), uint64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(60, 2), int8]) {
    %326 = @func_6042() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) */;
    %327 = @func_5712() /* ty=(Tensor[(14, 13, 3), float32],) */;
    %328 = cast(%var_6483, dtype="int8") /* ty=Tensor[(24), int8] */;
    %329 = cast(%var_6484, dtype="int8") /* ty=Tensor[(60, 2), int8] */;
    %330 = cast(%var_6484, dtype="int8") /* ty=Tensor[(60, 2), int8] */;
    %331 = reshape(%328, newshape=[24]) /* ty=Tensor[(24), int8] */;
    %332 = reshape(%329, newshape=[60, 2]) /* ty=Tensor[(60, 2), int8] */;
    %333 = reshape(%330, newshape=[60, 2]) /* ty=Tensor[(60, 2), int8] */;
    %334 = @func_4507(%331, %332, %333) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(120), int8], Tensor[(24), int8], Tensor[(60, 2), bool]) */;
    %335 = %326.2;
    %336 = @func_6117() /* ty=Tensor[(15, 2, 5), uint64] */;
    %337 = @func_54() /* ty=Tensor[(14, 13, 3), float64] */;
    %338 = %327.0;
    %339 = %334.3;
    (%335, %336, %337, %338, %339, %var_6483, %var_6484)
  };
  %340(%var_6496, %var_6497) /* ty=(Tensor[(14, 13, 3), bool], Tensor[(15, 2, 5), uint64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(60, 2), int8]) */
}

def @func_15539() -> (Tensor[(14, 13, 3), float32],) {
  %341 = @func_14406() /* ty=(Tensor[(14, 13, 3), float32],) */;
  %342 = %341.0;
  (%342,)
}

def @func_542() -> (Tensor[(14, 13, 3), float32],) {
  %347 = fn () -> (Tensor[(14, 13, 3), float32],) {
    %343 = @func_74() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %344 = %343.0;
    %345 = cast(%344, dtype="float32") /* ty=Tensor[(14, 13, 3), float32] */;
    %346 = acosh(%345) /* ty=Tensor[(14, 13, 3), float32] */;
    (%346,)
  };
  %347() /* ty=(Tensor[(14, 13, 3), float32],) */
}

def @func_1309() -> Tensor[(14, 13, 3), bool] {
  @func_1307() /* ty=Tensor[(14, 13, 3), bool] */
}

def @func_11235() -> Tensor[(15, 2, 5), uint64] {
  %348 = fn () -> Tensor[(15, 2, 5), uint64] {
    @func_6117() /* ty=Tensor[(15, 2, 5), uint64] */
  };
  %348() /* ty=Tensor[(15, 2, 5), uint64] */
}

def @func_11143() -> Tensor[(14, 13, 3), float64] {
  %350 = fn () -> Tensor[(14, 13, 3), float64] {
    %349 = @func_917() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %349.0
  };
  %350() /* ty=Tensor[(14, 13, 3), float64] */
}

def @func_54() -> Tensor[(14, 13, 3), float64] {
  %351 = @func_26() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %351.0
}

def @func_7319() -> (Tensor[(14, 13, 3), float64],) {
  @func_7317() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_14828(%var_14796: Tensor[(3, 3, 1), uint16], %var_14797: Tensor[(3, 3, 15), uint16]) -> (Tensor[(3, 3, 15), uint64], Tensor[(14, 13, 3), int32], Tensor[(546), float64], Tensor[(3, 3, 1), float64]) {
  %352 = cast(%var_14796, dtype="bool") /* ty=Tensor[(3, 3, 1), bool] */;
  %353 = cast(%var_14797, dtype="bool") /* ty=Tensor[(3, 3, 15), bool] */;
  %354 = not_equal(%352, %353) /* ty=Tensor[(3, 3, 15), bool] */;
  %355 = cast(%354, dtype="uint64") /* ty=Tensor[(3, 3, 15), uint64] */;
  %356 = shape_of(%var_14797, dtype="int32") /* ty=Tensor[(3), int32] */;
  %357 = cast(%var_14797, dtype="uint64") /* ty=Tensor[(3, 3, 15), uint64] */;
  %358 = dyn.reshape(%355, %356, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %359 = cast(meta[relay.Constant][15] /* ty=Tensor[(546), float64] */, dtype="float64") /* ty=Tensor[(546), float64] */;
  %360 = reshape(%359, newshape=[14, 13, 3]) /* ty=Tensor[(14, 13, 3), float64] */;
  %361 = @func_2956(%360) /* ty=(Tensor[(14, 13, 3), int32], Tensor[(14, 13, 3), float64]) */;
  %362 = cast(%var_14796, dtype="float64") /* ty=Tensor[(3, 3, 1), float64] */;
  %363 = bitwise_xor(%357, %358) /* ty=Tensor[(3, 3, 15), uint64] */;
  %364 = %361.0;
  %365 = atanh(%362) /* ty=Tensor[(3, 3, 1), float64] */;
  (%363, %364, meta[relay.Constant][15] /* ty=Tensor[(546), float64] */, %365)
}

def @func_14224() -> (Tensor[(14, 13, 3), float64],) {
  %366 = @func_7019() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %367 = %366.0;
  (%367,)
}

def @func_15541() -> (Tensor[(14, 13, 3), float32],) {
  @func_15539() /* ty=(Tensor[(14, 13, 3), float32],) */
}

def @func_8948() -> (Tensor[(5, 3, 8), int16],) {
  %370 = fn () -> (Tensor[(5, 3, 8), int16],) {
    %368 = @func_1842() /* ty=(Tensor[(24), int8], Tensor[(14, 13, 3), float64], Tensor[(5, 3, 8), int16], Tensor[(120), int16]) */;
    %369 = %368.2;
    (%369,)
  };
  %370() /* ty=(Tensor[(5, 3, 8), int16],) */
}

def @func_2982() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  @func_2980() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */
}

def @func_10685() -> (Tensor[(3, 40), int8], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) {
  %377 = fn () -> (Tensor[(3, 40), int8], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) {
    %371 = @func_9029() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(3, 40), int8], Tensor[(8, 5, 3), bool], Tensor[(24), int8]) */;
    %372 = @func_3881() /* ty=(Tensor[(14, 13, 3), float32],) */;
    %373 = @func_369() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(3, 40), int8], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
    %374 = %371.1;
    %375 = %372.0;
    %376 = %373.4;
    (%374, %375, %376)
  };
  %377() /* ty=(Tensor[(3, 40), int8], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */
}

def @func_15445() -> (Tensor[(14, 13, 3), float32], Tensor[(15, 2, 5), int8], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32], Tensor[(15, 2, 5), bool]) {
  @func_15443() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(15, 2, 5), int8], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32], Tensor[(15, 2, 5), bool]) */
}

def @func_11716() -> Tensor[(14, 13, 3), bool] {
  %378 = fn () -> Tensor[(14, 13, 3), bool] {
    @func_4540() /* ty=Tensor[(14, 13, 3), bool] */
  };
  %378() /* ty=Tensor[(14, 13, 3), bool] */
}

def @func_28() -> (Tensor[(14, 13, 3), float64],) {
  @func_26() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_15726() -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  @func_15724() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */
}

def @func_576(%var_545: Tensor[(1, 12, 10), int64]) -> (Tensor[(11, 12, 10), bool], Tensor[(11, 12, 10), float64], Tensor[(3, 40), int8], Tensor[(14, 13, 3), float32]) {
  %379 = cast(%var_545, dtype="bool") /* ty=Tensor[(1, 12, 10), bool] */;
  %380 = cast(meta[relay.Constant][16] /* ty=Tensor[(11, 12, 10), int64] */, dtype="bool") /* ty=Tensor[(11, 12, 10), bool] */;
  %381 = cast(meta[relay.Constant][16] /* ty=Tensor[(11, 12, 10), int64] */, dtype="float64") /* ty=Tensor[(11, 12, 10), float64] */;
  %382 = @func_369() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(3, 40), int8], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
  %383 = @func_334() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool]) */;
  %384 = less_equal(%379, %380) /* ty=Tensor[(11, 12, 10), bool] */;
  %385 = acos(%381) /* ty=Tensor[(11, 12, 10), float64] */;
  %386 = %382.2;
  %387 = %383.1;
  (%384, %385, %386, %387)
}

def @func_7346(%var_7344: Tensor[(12, 2), int8]) -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(12, 2), int8], Tensor[(120), int8]) {
  @func_7343(%var_7344) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(12, 2), int8], Tensor[(120), int8]) */
}

def @func_2956(%var_2931: Tensor[(14, 13, 3), float64]) -> (Tensor[(14, 13, 3), int32], Tensor[(14, 13, 3), float64]) {
  %388 = @func_74() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %389 = %388.0;
  %390 = cast(%var_2931, dtype="int32") /* ty=Tensor[(14, 13, 3), int32] */;
  %391 = shape_of(%389, dtype="int32") /* ty=Tensor[(3), int32] */;
  %392 = cast(%389, dtype="int32") /* ty=Tensor[(14, 13, 3), int32] */;
  %393 = dyn.reshape(%390, %391, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %394 = cast(%var_2931, dtype="float64") /* ty=Tensor[(14, 13, 3), float64] */;
  %395 = logical_xor(%392, %393) /* ty=Tensor[(14, 13, 3), int32] */;
  %396 = sqrt(%394) /* ty=Tensor[(14, 13, 3), float64] */;
  (%395, %396)
}

def @func_3122() -> Tensor[(14, 13, 3), float64] {
  @func_3120() /* ty=Tensor[(14, 13, 3), float64] */
}

def @func_12971() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  %397 = @func_917() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %398 = @func_4911() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
  %399 = %397.0;
  %400 = %398.1;
  (%399, %400)
}

def @func_6952() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32]) {
  %401 = @func_978() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) */;
  %402 = @func_6365() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(5, 3, 8), int16], Tensor[(120), int16]) */;
  %403 = @func_541() /* ty=(Tensor[(14, 13, 3), float32],) */;
  %404 = %401.0;
  %405 = %402.0;
  %406 = %403.0;
  (%404, %405, %406)
}

def @func_15141() -> (Tensor[(14, 13, 3), float64],) {
  %407 = @func_8435() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %408 = %407.0;
  (%408,)
}

def @func_9981() -> (Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(14, 13, 3), float64]) {
  %409 = @func_9714() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
  %410 = @func_9029() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(3, 40), int8], Tensor[(8, 5, 3), bool], Tensor[(24), int8]) */;
  %411 = %410.3;
  %412 = cast(%411, dtype="int8") /* ty=Tensor[(24), int8] */;
  %413 = reshape(%412, newshape=[24]) /* ty=Tensor[(24), int8] */;
  %414 = @func_1135(%413) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), bool], Tensor[(24), int8], Tensor[(30, 4), uint32], Tensor[(14, 13, 3), float64]) */;
  %415 = %409.2;
  %416 = %414.0;
  (%415, %411, %416)
}

def @func_5062() -> Tensor[(14, 13, 3), uint64] {
  %418 = fn () -> Tensor[(14, 13, 3), uint64] {
    %417 = @func_4607() /* ty=(Tensor[(14, 13, 3), uint64], Tensor[(14, 13, 3), int8]) */;
    %417.0
  };
  %418() /* ty=Tensor[(14, 13, 3), uint64] */
}

def @func_13538() -> (Tensor[(14, 13, 3), float64],) {
  %419 = @func_8881() /* ty=Tensor[(14, 13, 3), float64] */;
  (%419,)
}

def @func_9163() -> (Tensor[(14, 13, 3), float64],) {
  @func_9161() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_11202() -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) {
  @func_11200() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */
}

def @func_390() -> (Tensor[(14, 13, 3), float64],) {
  %420 = @func_74() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %421 = %420.0;
  (%421,)
}

def @func_14071() -> Tensor[(14, 13, 3), float64] {
  %422 = @func_3800() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %422.0
}

def @func_14073() -> Tensor[(14, 13, 3), float64] {
  @func_14071() /* ty=Tensor[(14, 13, 3), float64] */
}

def @func_13260() -> (Tensor[(14, 13, 3), int8],) {
  @func_13258() /* ty=(Tensor[(14, 13, 3), int8],) */
}

def @func_9330() -> Tensor[(14, 13, 3), float64] {
  %423 = @func_8962() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
  %423.1
}

def @func_16344() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  @func_16342() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */
}

def @func_7451(%var_7449: Tensor[(12, 11, 14), float64], %var_7450: Tensor[(12, 11, 14), float64]) -> (Tensor[(12, 11, 14), float64], Tensor[(14, 13, 3), int8], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) {
  %435 = fn (%var_7421: Tensor[(12, 11, 14), float64], %var_7422: Tensor[(12, 11, 14), float64]) -> (Tensor[(12, 11, 14), float64], Tensor[(14, 13, 3), int8], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) {
    %424 = cast(%var_7422, dtype="float64") /* ty=Tensor[(12, 11, 14), float64] */;
    %425 = shape_of(%var_7421, dtype="int32") /* ty=Tensor[(3), int32] */;
    %426 = cast(%var_7421, dtype="float64") /* ty=Tensor[(12, 11, 14), float64] */;
    %427 = dyn.reshape(%424, %425, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %428 = @func_4607() /* ty=(Tensor[(14, 13, 3), uint64], Tensor[(14, 13, 3), int8]) */;
    %429 = @func_5359() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %430 = @func_4137() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
    %431 = floor_divide(%426, %427) /* ty=Tensor[(12, 11, 14), float64] */;
    %432 = %428.1;
    %433 = %429.0;
    %434 = %430.0;
    (%431, %432, %433, %434)
  };
  %435(%var_7449, %var_7450) /* ty=(Tensor[(12, 11, 14), float64], Tensor[(14, 13, 3), int8], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) */
}

def @func_14322() -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), bool]) {
  %440 = fn () -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), bool]) {
    %436 = @func_4393() /* ty=(Tensor[(14, 13, 3), int8], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
    %437 = @func_5886() /* ty=(Tensor[(14, 13, 3), bool],) */;
    %438 = %436.2;
    %439 = %437.0;
    (%438, %439)
  };
  %440() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), bool]) */
}

def @func_1695() -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) {
  %447 = fn () -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) {
    %441 = @func_917() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %442 = %441.0;
    %443 = cast(%442, dtype="float32") /* ty=Tensor[(14, 13, 3), float32] */;
    %444 = @func_334() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool]) */;
    %445 = sin(%443) /* ty=Tensor[(14, 13, 3), float32] */;
    %446 = %444.4;
    (%445, %446)
  };
  %447() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */
}

def @func_2057(%var_2035: Tensor[(12, 2, 15), uint16], %var_2036: Tensor[(12, 2, 15), uint16]) -> (Tensor[(12, 2, 15), uint16], Tensor[(12, 2, 15), float32], Tensor[(5, 3, 8), int16], Tensor[(120), int16]) {
  %448 = cast(%var_2036, dtype="uint16") /* ty=Tensor[(12, 2, 15), uint16] */;
  %449 = shape_of(%var_2035, dtype="int32") /* ty=Tensor[(3), int32] */;
  %450 = cast(%var_2035, dtype="uint16") /* ty=Tensor[(12, 2, 15), uint16] */;
  %451 = dyn.reshape(%448, %449, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %452 = cast(%var_2035, dtype="float32") /* ty=Tensor[(12, 2, 15), float32] */;
  %453 = cast(meta[relay.Constant][17] /* ty=Tensor[(120), int16] */, dtype="int16") /* ty=Tensor[(120), int16] */;
  %454 = cast(meta[relay.Constant][17] /* ty=Tensor[(120), int16] */, dtype="int16") /* ty=Tensor[(120), int16] */;
  %455 = reshape(%453, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), int16] */;
  %456 = reshape(%454, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), int16] */;
  %457 = minimum(%450, %451) /* ty=Tensor[(12, 2, 15), uint16] */;
  %458 = exp(%452) /* ty=Tensor[(12, 2, 15), float32] */;
  %459 = @func_465(%455, %456) /* ty=Tensor[(5, 3, 8), int16] */;
  (%457, %458, %459, meta[relay.Constant][17] /* ty=Tensor[(120), int16] */)
}

def @func_1597(%var_1579: Tensor[(120, 1), int16]) -> (Tensor[(14, 13, 3), float64], Tensor[(5, 3, 8), int16], Tensor[(120, 1), int16]) {
  %460 = @func_334() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool]) */;
  %461 = %460.5;
  %462 = cast(%461, dtype="float64") /* ty=Tensor[(14, 13, 3), float64] */;
  %463 = cast(%var_1579, dtype="int16") /* ty=Tensor[(120, 1), int16] */;
  %464 = cast(%var_1579, dtype="int16") /* ty=Tensor[(120, 1), int16] */;
  %465 = reshape(%463, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), int16] */;
  %466 = reshape(%464, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), int16] */;
  %467 = log(%462) /* ty=Tensor[(14, 13, 3), float64] */;
  %468 = @func_465(%465, %466) /* ty=Tensor[(5, 3, 8), int16] */;
  (%467, %468, %var_1579)
}

def @func_7317() -> (Tensor[(14, 13, 3), float64],) {
  %469 = @func_3541() /* ty=Tensor[(14, 13, 3), float64] */;
  (%469,)
}

def @func_12123() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  @func_12121() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */
}

def @func_5482() -> Tensor[(14, 13, 3), float32] {
  %470 = fn () -> Tensor[(14, 13, 3), float32] {
    @func_3980() /* ty=Tensor[(14, 13, 3), float32] */
  };
  %470() /* ty=Tensor[(14, 13, 3), float32] */
}

def @func_13954() -> Tensor[(14, 13, 3), float64] {
  @func_13952() /* ty=Tensor[(14, 13, 3), float64] */
}

def @func_13995(%var_13993: Tensor[(24), int8]) -> (Tensor[(14, 13, 3), float32], Tensor[(24), int8], Tensor[(24), int8], Tensor[(120), int8]) {
  @func_13992(%var_13993) /* ty=(Tensor[(14, 13, 3), float32], Tensor[(24), int8], Tensor[(24), int8], Tensor[(120), int8]) */
}

def @func_2522() -> (Tensor[(14, 13, 3), float64],) {
  %473 = fn () -> (Tensor[(14, 13, 3), float64],) {
    %471 = @func_1694() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
    %472 = %471.1;
    (%472,)
  };
  %473() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_9554() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) {
  @func_9552() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) */
}

def @func_14891() -> Tensor[(14, 13, 3), float64] {
  @func_14889() /* ty=Tensor[(14, 13, 3), float64] */
}

def @func_371() -> (Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(3, 40), int8], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  @func_369() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(3, 40), int8], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */
}

def @func_7119() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32]) {
  %477 = fn () -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32]) {
    %474 = @func_6817() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %475 = %474.0;
    %476 = @func_1626() /* ty=Tensor[(14, 13, 3), float32] */;
    (%475, %476)
  };
  %477() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32]) */
}

def @func_12790() -> (Tensor[(16, 8, 5), int32], Tensor[(14, 13, 3), float64], Tensor[(7, 13, 6), float32]) {
  %478 = @func_10824() /* ty=(Tensor[(7, 13, 6), float32],) */;
  %479 = @func_12181() /* ty=Tensor[(16, 8, 5), int32] */;
  %480 = @func_8691() /* ty=Tensor[(14, 13, 3), float64] */;
  %481 = %478.0;
  (%479, %480, %481)
}

def @func_6102() -> Tensor[(14, 13, 3), float64] {
  %482 = @func_369() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(3, 40), int8], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
  %482.4
}

def @func_4394() -> (Tensor[(14, 13, 3), int8], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) {
  %495 = fn () -> (Tensor[(14, 13, 3), int8], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) {
    %483 = @func_11() /* ty=(Tensor[(14, 13, 3), bool],) */;
    %484 = @func_2980() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
    %485 = %484.1;
    %486 = @func_3456() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
    %487 = %486.1;
    %488 = cast(%487, dtype="float32") /* ty=Tensor[(14, 13, 3), float32] */;
    %489 = shape_of(%485, dtype="int32") /* ty=Tensor[(3), int32] */;
    %490 = cast(%485, dtype="float32") /* ty=Tensor[(14, 13, 3), float32] */;
    %491 = dyn.reshape(%488, %489, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %492 = @func_3333() /* ty=Tensor[(14, 13, 3), int8] */;
    %493 = %483.0;
    %494 = minimum(%490, %491) /* ty=Tensor[(14, 13, 3), float32] */;
    (%492, %493, %494)
  };
  %495() /* ty=(Tensor[(14, 13, 3), int8], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */
}

def @func_6249() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(12, 2), int8], Tensor[(6, 4), int8], Tensor[(120), int8], Tensor[(14, 13, 3), float64]) {
  @func_6247() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(12, 2), int8], Tensor[(6, 4), int8], Tensor[(120), int8], Tensor[(14, 13, 3), float64]) */
}

def @func_26() -> (Tensor[(14, 13, 3), float64],) {
  %496 = @func_11() /* ty=(Tensor[(14, 13, 3), bool],) */;
  %497 = %496.0;
  %498 = cast(%497, dtype="float64") /* ty=Tensor[(14, 13, 3), float64] */;
  %499 = exp(%498) /* ty=Tensor[(14, 13, 3), float64] */;
  (%499,)
}

def @func_10806() -> (Tensor[(14, 13, 3), float64],) {
  @func_10804() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_13477() -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64]) {
  %503 = fn () -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64]) {
    %500 = @func_11715() /* ty=Tensor[(14, 13, 3), bool] */;
    %501 = @func_13335() /* ty=Tensor[(14, 13, 3), bool] */;
    %502 = @func_2569() /* ty=Tensor[(14, 13, 3), float64] */;
    (%500, %501, %502)
  };
  %503() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64]) */
}

def @func_12745() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32]) {
  %504 = @func_11289() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %505 = @func_917() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %506 = %504.0;
  %507 = %505.0;
  %508 = @func_1626() /* ty=Tensor[(14, 13, 3), float32] */;
  (%506, %507, %508)
}

def @func_14514() -> (Tensor[(14, 13, 3), float64],) {
  %509 = @func_8435() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %510 = %509.0;
  (%510,)
}

def @func_4512(%var_4509: Tensor[(24), int8], %var_4510: Tensor[(60, 2), int8], %var_4511: Tensor[(60, 2), int8]) -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(120), int8], Tensor[(24), int8], Tensor[(60, 2), bool]) {
  @func_4507(%var_4509, %var_4510, %var_4511) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(120), int8], Tensor[(24), int8], Tensor[(60, 2), bool]) */
}

def @func_6743() -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) {
  %522 = fn () -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) {
    %511 = @func_334() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool]) */;
    %512 = %511.6;
    %513 = cast(%512, dtype="float64") /* ty=Tensor[(14, 13, 3), float64] */;
    %514 = reshape(%513, newshape=[14, 13, 3]) /* ty=Tensor[(14, 13, 3), float64] */;
    %515 = @func_5962(%514) /* ty=(Tensor[(14, 13, 3), int64], Tensor[(14, 13, 3), float32]) */;
    %516 = @func_3800() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %517 = @func_11() /* ty=(Tensor[(14, 13, 3), bool],) */;
    %518 = %515.1;
    %519 = %516.0;
    %520 = @func_2569() /* ty=Tensor[(14, 13, 3), float64] */;
    %521 = %517.0;
    (%512, %518, %519, %520, %521)
  };
  %522() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) */
}

def @func_5213() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), bool]) {
  @func_5211() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), bool]) */
}

def @func_4507(%var_4478: Tensor[(24), int8], %var_4479: Tensor[(60, 2), int8], %var_4498: Tensor[(60, 2), int8]) -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(120), int8], Tensor[(24), int8], Tensor[(60, 2), bool]) {
  %523 = @func_829() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
  %524 = @func_2521() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %525 = cast(%var_4478, dtype="int8") /* ty=Tensor[(24), int8] */;
  %526 = cast(%var_4479, dtype="int8") /* ty=Tensor[(60, 2), int8] */;
  %527 = reshape(%525, newshape=[12, 2]) /* ty=Tensor[(12, 2), int8] */;
  %528 = reshape(%526, newshape=[120]) /* ty=Tensor[(120), int8] */;
  %529 = @func_2173(%527, %528) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(8, 5, 3), bool], Tensor[(12, 2), int8], Tensor[(120), int8]) */;
  %530 = cast(%var_4498, dtype="bool") /* ty=Tensor[(60, 2), bool] */;
  %531 = shape_of(%var_4479, dtype="int32") /* ty=Tensor[(2), int32] */;
  %532 = cast(%var_4479, dtype="bool") /* ty=Tensor[(60, 2), bool] */;
  %533 = dyn.reshape(%530, %531, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %534 = %523.0;
  %535 = @func_3759() /* ty=Tensor[(14, 13, 3), float64] */;
  %536 = @func_3541() /* ty=Tensor[(14, 13, 3), float64] */;
  %537 = %524.0;
  %538 = %529.3;
  %539 = equal(%532, %533) /* ty=Tensor[(60, 2), bool] */;
  (%534, %535, %536, %537, %538, %var_4478, %539)
}

def @func_12311() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  %544 = fn () -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
    %540 = @func_7925() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
    %541 = @func_4965() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %542 = %540.3;
    %543 = %541.0;
    (%542, %543)
  };
  %544() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */
}

def @func_12973() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  @func_12971() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */
}

def @func_16274() -> (Tensor[(14, 13, 3), float64],) {
  %546 = fn () -> (Tensor[(14, 13, 3), float64],) {
    %545 = @func_13952() /* ty=Tensor[(14, 13, 3), float64] */;
    (%545,)
  };
  %546() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_11478() -> (Tensor[(14, 13, 3), float64],) {
  %548 = fn () -> (Tensor[(14, 13, 3), float64],) {
    %547 = @func_11142() /* ty=Tensor[(14, 13, 3), float64] */;
    (%547,)
  };
  %548() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_16546() -> (Tensor[(14, 13, 3), bool],) {
  %551 = fn () -> (Tensor[(14, 13, 3), bool],) {
    %549 = @func_11() /* ty=(Tensor[(14, 13, 3), bool],) */;
    %550 = %549.0;
    (%550,)
  };
  %551() /* ty=(Tensor[(14, 13, 3), bool],) */
}

def @func_16950() -> Tensor[(14, 13, 3), float64] {
  %553 = fn () -> Tensor[(14, 13, 3), float64] {
    %552 = @func_12483() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %552.0
  };
  %553() /* ty=Tensor[(14, 13, 3), float64] */
}

def @func_5516() -> Tensor[(14, 13, 3), bool] {
  %559 = fn () -> Tensor[(14, 13, 3), bool] {
    %554 = @func_3120() /* ty=Tensor[(14, 13, 3), float64] */;
    %555 = cast(meta[relay.Constant][18] /* ty=Tensor[(14, 13, 3), float64] */, dtype="bool") /* ty=Tensor[(14, 13, 3), bool] */;
    %556 = shape_of(%554, dtype="int32") /* ty=Tensor[(3), int32] */;
    %557 = cast(%554, dtype="bool") /* ty=Tensor[(14, 13, 3), bool] */;
    %558 = dyn.reshape(%555, %556, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    not_equal(%557, %558) /* ty=Tensor[(14, 13, 3), bool] */
  };
  %559() /* ty=Tensor[(14, 13, 3), bool] */
}

def @func_14029() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(84), float64], Tensor[(6, 2, 7), float64]) {
  %560 = @func_917() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %561 = @func_541() /* ty=(Tensor[(14, 13, 3), float32],) */;
  %562 = cast(meta[relay.Constant][19] /* ty=Tensor[(84), float64] */, dtype="float64") /* ty=Tensor[(84), float64] */;
  %563 = reshape(%562, newshape=[6, 2, 7]) /* ty=Tensor[(6, 2, 7), float64] */;
  %564 = @func_3636(%563) /* ty=Tensor[(6, 2, 7), float64] */;
  %565 = cast(%564, dtype="float64") /* ty=Tensor[(6, 2, 7), float64] */;
  %566 = %560.0;
  %567 = %561.0;
  %568 = tan(%565) /* ty=Tensor[(6, 2, 7), float64] */;
  (%566, %567, meta[relay.Constant][19] /* ty=Tensor[(84), float64] */, %568)
}

def @func_17181() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  %569 = @func_14674() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %570 = @func_9981() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(14, 13, 3), float64]) */;
  %571 = @func_12745() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32]) */;
  %572 = %569.0;
  %573 = %570.2;
  %574 = %571.1;
  (%572, %573, %574)
}

def @func_16220() -> Tensor[(14, 13, 3), float64] {
  %575 = fn () -> Tensor[(14, 13, 3), float64] {
    @func_6013() /* ty=Tensor[(14, 13, 3), float64] */
  };
  %575() /* ty=Tensor[(14, 13, 3), float64] */
}

def @func_10640() -> (Tensor[(14, 13, 3), float64],) {
  %576 = @func_7317() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %577 = %576.0;
  (%577,)
}

def @func_15842() -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool]) {
  %581 = fn () -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool]) {
    %578 = @func_9552() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) */;
    %579 = @func_11715() /* ty=Tensor[(14, 13, 3), bool] */;
    %580 = %578.1;
    (%579, %580)
  };
  %581() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool]) */
}

def @func_2285(%var_2275: Tensor[(24), int8]) -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(120), int8], Tensor[(24), int8], Tensor[(120), int8]) {
  %582 = @func_390() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %583 = cast(%var_2275, dtype="int8") /* ty=Tensor[(24), int8] */;
  %584 = cast(meta[relay.Constant][20] /* ty=Tensor[(120), int8] */, dtype="int8") /* ty=Tensor[(120), int8] */;
  %585 = reshape(%583, newshape=[12, 2]) /* ty=Tensor[(12, 2), int8] */;
  %586 = reshape(%584, newshape=[120]) /* ty=Tensor[(120), int8] */;
  %587 = @func_2173(%585, %586) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(8, 5, 3), bool], Tensor[(12, 2), int8], Tensor[(120), int8]) */;
  %588 = %582.0;
  %589 = @func_1626() /* ty=Tensor[(14, 13, 3), float32] */;
  %590 = %587.3;
  (%588, %589, %590, %var_2275, meta[relay.Constant][20] /* ty=Tensor[(120), int8] */)
}

def @func_12988() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), int8], Tensor[(14, 13, 3), float32]) {
  %591 = @func_3281() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %592 = @func_4393() /* ty=(Tensor[(14, 13, 3), int8], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
  %593 = @func_3881() /* ty=(Tensor[(14, 13, 3), float32],) */;
  %594 = %591.0;
  %595 = %592.0;
  %596 = %593.0;
  (%594, %595, %596)
}

def @func_1307() -> Tensor[(14, 13, 3), bool] {
  %597 = @func_978() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) */;
  %597.1
}

def @func_2027() -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) {
  %610 = fn () -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) {
    %598 = @func_11() /* ty=(Tensor[(14, 13, 3), bool],) */;
    %599 = @func_1542() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %600 = @func_1278() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
    %601 = @func_829() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
    %602 = @func_829() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
    %603 = %598.0;
    %604 = @func_54() /* ty=Tensor[(14, 13, 3), float64] */;
    %605 = %599.0;
    %606 = %600.1;
    %607 = %601.0;
    %608 = %602.0;
    %609 = @func_1307() /* ty=Tensor[(14, 13, 3), bool] */;
    (%603, %604, %605, %606, %607, %608, %609)
  };
  %610() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) */
}

def @func_12231() -> (Tensor[(14, 13, 3), bool],) {
  %612 = fn () -> (Tensor[(14, 13, 3), bool],) {
    %611 = @func_8586() /* ty=Tensor[(14, 13, 3), bool] */;
    (%611,)
  };
  %612() /* ty=(Tensor[(14, 13, 3), bool],) */
}

def @func_12183() -> Tensor[(16, 8, 5), int32] {
  @func_12181() /* ty=Tensor[(16, 8, 5), int32] */
}

def @func_3049() -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) {
  @func_3047() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */
}

def @func_11603() -> (Tensor[(5, 3, 8), int16], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) {
  %613 = @func_8947() /* ty=(Tensor[(5, 3, 8), int16],) */;
  %614 = @func_9085() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %615 = %613.0;
  %616 = @func_9388() /* ty=Tensor[(14, 13, 3), float32] */;
  %617 = %614.0;
  (%615, %616, %617)
}

def @func_5552(%var_5551: Tensor[(4, 14, 2), float32]) -> (Tensor[(4, 14, 2), float32],) {
  %620 = fn (%var_5547: Tensor[(4, 14, 2), float32]) -> (Tensor[(4, 14, 2), float32],) {
    %618 = cast(%var_5547, dtype="float32") /* ty=Tensor[(4, 14, 2), float32] */;
    %619 = log2(%618) /* ty=Tensor[(4, 14, 2), float32] */;
    (%619,)
  };
  %620(%var_5551) /* ty=(Tensor[(4, 14, 2), float32],) */
}

def @func_3120() -> Tensor[(14, 13, 3), float64] {
  %621 = @func_2324() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %621.0
}

def @func_4444() -> Tensor[(14, 13, 3), float64] {
  @func_4442() /* ty=Tensor[(14, 13, 3), float64] */
}

def @func_2061(%var_2059: Tensor[(12, 2, 15), uint16], %var_2060: Tensor[(12, 2, 15), uint16]) -> (Tensor[(12, 2, 15), uint16], Tensor[(12, 2, 15), float32], Tensor[(5, 3, 8), int16], Tensor[(120), int16]) {
  @func_2057(%var_2059, %var_2060) /* ty=(Tensor[(12, 2, 15), uint16], Tensor[(12, 2, 15), float32], Tensor[(5, 3, 8), int16], Tensor[(120), int16]) */
}

def @func_2249() -> Tensor[(14, 13, 3), float64] {
  %622 = @func_978() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) */;
  %622.0
}

def @func_14406() -> (Tensor[(14, 13, 3), float32],) {
  %623 = @func_13771() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
  %624 = %623.1;
  (%624,)
}

def @func_6119() -> Tensor[(15, 2, 5), uint64] {
  @func_6117() /* ty=Tensor[(15, 2, 5), uint64] */
}

def @func_15614() -> (Tensor[(14, 13, 3), float64],) {
  %627 = fn () -> (Tensor[(14, 13, 3), float64],) {
    %625 = @func_12678() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %626 = %625.0;
    (%626,)
  };
  %627() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_6391(%var_6389: Tensor[(13, 16, 13), float32]) -> (Tensor[(13, 16, 13), float32],) {
  @func_6388(%var_6389) /* ty=(Tensor[(13, 16, 13), float32],) */
}

def @func_8041() -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), int8], Tensor[(14, 13, 3), float64]) {
  @func_8039() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), int8], Tensor[(14, 13, 3), float64]) */
}

def @func_1843() -> (Tensor[(24), int8], Tensor[(14, 13, 3), float64], Tensor[(5, 3, 8), int16], Tensor[(120), int16]) {
  %637 = fn () -> (Tensor[(24), int8], Tensor[(14, 13, 3), float64], Tensor[(5, 3, 8), int16], Tensor[(120), int16]) {
    %628 = @func_369() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(3, 40), int8], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
    %629 = @func_917() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %630 = cast(meta[relay.Constant][21] /* ty=Tensor[(120), int16] */, dtype="int16") /* ty=Tensor[(120), int16] */;
    %631 = cast(meta[relay.Constant][21] /* ty=Tensor[(120), int16] */, dtype="int16") /* ty=Tensor[(120), int16] */;
    %632 = reshape(%630, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), int16] */;
    %633 = reshape(%631, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), int16] */;
    %634 = %628.1;
    %635 = %629.0;
    %636 = @func_465(%632, %633) /* ty=Tensor[(5, 3, 8), int16] */;
    (%634, %635, %636, meta[relay.Constant][21] /* ty=Tensor[(120), int16] */)
  };
  %637() /* ty=(Tensor[(24), int8], Tensor[(14, 13, 3), float64], Tensor[(5, 3, 8), int16], Tensor[(120), int16]) */
}

def @func_4542() -> Tensor[(14, 13, 3), bool] {
  @func_4540() /* ty=Tensor[(14, 13, 3), bool] */
}

def @func_8277() -> (Tensor[(14, 13, 3), float64],) {
  %638 = @func_26() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %639 = %638.0;
  (%639,)
}

def @func_3304() -> Tensor[(14, 13, 3), int8] {
  %641 = fn () -> Tensor[(14, 13, 3), int8] {
    %640 = @func_1018() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), int8]) */;
    %640.1
  };
  %641() /* ty=Tensor[(14, 13, 3), int8] */
}

def @func_8217() -> Tensor[(14, 13, 3), float64] {
  %642 = @func_7925() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
  %642.0
}

def @func_6818() -> (Tensor[(14, 13, 3), float64],) {
  %645 = fn () -> (Tensor[(14, 13, 3), float64],) {
    %643 = @func_26() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %644 = %643.0;
    (%644,)
  };
  %645() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_10771() -> (Tensor[(14, 13, 3), float32],) {
  %648 = fn () -> (Tensor[(14, 13, 3), float32],) {
    %646 = @func_8182() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float32]) */;
    %647 = %646.0;
    (%647,)
  };
  %648() /* ty=(Tensor[(14, 13, 3), float32],) */
}

def @func_15247() -> (Tensor[(14, 13, 3), float64],) {
  @func_15245() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_15694() -> (Tensor[(14, 13, 3), float64],) {
  %651 = fn () -> (Tensor[(14, 13, 3), float64],) {
    %649 = @func_9552() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) */;
    %650 = %649.0;
    (%650,)
  };
  %651() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_16008() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(12, 14, 11), bool], Tensor[(1848), int8], Tensor[(14, 13, 3), float64]) {
  %663 = fn () -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(12, 14, 11), bool], Tensor[(1848), int8], Tensor[(14, 13, 3), float64]) {
    %652 = @func_6042() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) */;
    %653 = cast(meta[relay.Constant][22] /* ty=Tensor[(1848), int8] */, dtype="int8") /* ty=Tensor[(1848), int8] */;
    %654 = cast(meta[relay.Constant][22] /* ty=Tensor[(1848), int8] */, dtype="int8") /* ty=Tensor[(1848), int8] */;
    %655 = reshape(%653, newshape=[12, 14, 11]) /* ty=Tensor[(12, 14, 11), int8] */;
    %656 = reshape(%654, newshape=[12, 14, 11]) /* ty=Tensor[(12, 14, 11), int8] */;
    %657 = @func_8356(%655, %656) /* ty=(Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), float64]) */;
    %658 = @func_15934() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
    %659 = @func_6013() /* ty=Tensor[(14, 13, 3), float64] */;
    %660 = %652.0;
    %661 = %657.0;
    %662 = %658.1;
    (%659, %660, %661, meta[relay.Constant][22] /* ty=Tensor[(1848), int8] */, %662)
  };
  %663() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(12, 14, 11), bool], Tensor[(1848), int8], Tensor[(14, 13, 3), float64]) */
}

def @func_17130() -> (Tensor[(14, 13, 3), float32],) {
  %664 = @func_14406() /* ty=(Tensor[(14, 13, 3), float32],) */;
  %665 = %664.0;
  (%665,)
}

def @func_14477(%var_14476: Tensor[(16, 15, 5), float64]) -> (Tensor[(16, 15, 5), float32],) {
  %670 = fn (%var_14461: Tensor[(16, 15, 5), float64]) -> (Tensor[(16, 15, 5), float32],) {
    %666 = cast(%var_14461, dtype="float64") /* ty=Tensor[(16, 15, 5), float64] */;
    %667 = tan(%666) /* ty=Tensor[(16, 15, 5), float64] */;
    %668 = cast(%667, dtype="float32") /* ty=Tensor[(16, 15, 5), float32] */;
    %669 = sinh(%668) /* ty=Tensor[(16, 15, 5), float32] */;
    (%669,)
  };
  %670(%var_14476) /* ty=(Tensor[(16, 15, 5), float32],) */
}

def @func_16617() -> (Tensor[(14, 13, 3), float32],) {
  %673 = fn () -> (Tensor[(14, 13, 3), float32],) {
    %671 = @func_15539() /* ty=(Tensor[(14, 13, 3), float32],) */;
    %672 = %671.0;
    (%672,)
  };
  %673() /* ty=(Tensor[(14, 13, 3), float32],) */
}

def @func_13364() -> (Tensor[(14, 13, 3), int8],) {
  @func_13362() /* ty=(Tensor[(14, 13, 3), int8],) */
}

def @func_11() -> (Tensor[(14, 13, 3), bool],) {
  %674 = cast(meta[relay.Constant][24] /* ty=Tensor[(14, 13, 3), float64] */, dtype="bool") /* ty=Tensor[(14, 13, 3), bool] */;
  %675 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(14, 13, 3), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %676 = cast(meta[relay.Constant][23] /* ty=Tensor[(14, 13, 3), float64] */, dtype="bool") /* ty=Tensor[(14, 13, 3), bool] */;
  %677 = dyn.reshape(%674, %675, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %678 = equal(%676, %677) /* ty=Tensor[(14, 13, 3), bool] */;
  (%678,)
}

def @func_16490() -> (Tensor[(14, 13, 3), float64],) {
  %680 = fn () -> (Tensor[(14, 13, 3), float64],) {
    %679 = @func_5790() /* ty=Tensor[(14, 13, 3), float64] */;
    (%679,)
  };
  %680() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_6042() -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) {
  %681 = @func_4393() /* ty=(Tensor[(14, 13, 3), int8], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
  %682 = @func_26() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %683 = %681.2;
  %684 = %682.0;
  %685 = @func_5867() /* ty=Tensor[(14, 13, 3), bool] */;
  (%683, %684, %685)
}

def @func_9086() -> (Tensor[(14, 13, 3), float64],) {
  %688 = fn () -> (Tensor[(14, 13, 3), float64],) {
    %686 = @func_6365() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(5, 3, 8), int16], Tensor[(120), int16]) */;
    %687 = %686.0;
    (%687,)
  };
  %688() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_6044() -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) {
  @func_6042() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) */
}

def @func_13335() -> Tensor[(14, 13, 3), bool] {
  @func_5515() /* ty=Tensor[(14, 13, 3), bool] */
}

def @func_4043() -> (Tensor[(14, 13, 3), bool],) {
  @func_4041() /* ty=(Tensor[(14, 13, 3), bool],) */
}

def @func_9161() -> (Tensor[(14, 13, 3), float64],) {
  %689 = @func_5790() /* ty=Tensor[(14, 13, 3), float64] */;
  (%689,)
}

def @func_12355(%var_12329: Tensor[(120), int8]) -> (Tensor[(14, 13, 3), bool], Tensor[(12, 2), int8], Tensor[(24), int8], Tensor[(120), int8]) {
  %690 = @func_5886() /* ty=(Tensor[(14, 13, 3), bool],) */;
  %691 = cast(meta[relay.Constant][25] /* ty=Tensor[(24), int8] */, dtype="int8") /* ty=Tensor[(24), int8] */;
  %692 = cast(%var_12329, dtype="int8") /* ty=Tensor[(120), int8] */;
  %693 = reshape(%691, newshape=[12, 2]) /* ty=Tensor[(12, 2), int8] */;
  %694 = reshape(%692, newshape=[120]) /* ty=Tensor[(120), int8] */;
  %695 = @func_2173(%693, %694) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(8, 5, 3), bool], Tensor[(12, 2), int8], Tensor[(120), int8]) */;
  %696 = %690.0;
  %697 = %695.2;
  (%696, %697, meta[relay.Constant][25] /* ty=Tensor[(24), int8] */, %var_12329)
}

def @main(%var_17367: Tensor[(13, 3, 13), float32]) -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(13, 3, 13), float64], Tensor[(13, 3, 13), float64], Tensor[(13, 3, 13), int8]) {
  %698 = @func_15694() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %699 = cast(meta[relay.Constant][26] /* ty=Tensor[(13, 3, 13), float32] */, dtype="float64") /* ty=Tensor[(13, 3, 13), float64] */;
  %700 = sin(%699) /* ty=Tensor[(13, 3, 13), float64] */;
  %701 = cast(%700, dtype="float64") /* ty=Tensor[(13, 3, 13), float64] */;
  %702 = cast(meta[relay.Constant][26] /* ty=Tensor[(13, 3, 13), float32] */, dtype="bool") /* ty=Tensor[(13, 3, 13), bool] */;
  %703 = shape_of(%var_17367, dtype="int32") /* ty=Tensor[(3), int32] */;
  %704 = cast(%var_17367, dtype="bool") /* ty=Tensor[(13, 3, 13), bool] */;
  %705 = dyn.reshape(%702, %703, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %706 = not_equal(%704, %705) /* ty=Tensor[(13, 3, 13), bool] */;
  %707 = cast(meta[relay.Constant][27] /* ty=Tensor[(13, 3, 13), bool] */, dtype="float64") /* ty=Tensor[(13, 3, 13), float64] */;
  %708 = shape_of(%706, dtype="int32") /* ty=Tensor[(3), int32] */;
  %709 = cast(%706, dtype="float64") /* ty=Tensor[(13, 3, 13), float64] */;
  %710 = dyn.reshape(%707, %708, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %711 = cast(%var_17367, dtype="int8") /* ty=Tensor[(13, 3, 13), int8] */;
  %712 = shape_of(%700, dtype="int32") /* ty=Tensor[(3), int32] */;
  %713 = cast(%700, dtype="int8") /* ty=Tensor[(13, 3, 13), int8] */;
  %714 = dyn.reshape(%711, %712, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %715 = @func_9330() /* ty=Tensor[(14, 13, 3), float64] */;
  %716 = %698.0;
  %717 = log2(%701) /* ty=Tensor[(13, 3, 13), float64] */;
  %718 = floor_mod(%709, %710) /* ty=Tensor[(13, 3, 13), float64] */;
  %719 = right_shift(%713, %714) /* ty=Tensor[(13, 3, 13), int8] */;
  (%715, %716, %717, %718, %719)
}

def @func_15899() -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64]) {
  %724 = fn () -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64]) {
    %720 = @func_12230() /* ty=(Tensor[(14, 13, 3), bool],) */;
    %721 = @func_9552() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) */;
    %722 = %720.0;
    %723 = %721.0;
    (%722, %723)
  };
  %724() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64]) */
}

def @func_8765() -> (Tensor[(14, 13, 3), float64],) {
  @func_8763() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_1018() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), int8]) {
  %725 = @func_390() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %726 = %725.0;
  %727 = cast(%726, dtype="bool") /* ty=Tensor[(14, 13, 3), bool] */;
  %728 = reshape(%727, newshape=[14, 13, 3]) /* ty=Tensor[(14, 13, 3), bool] */;
  %729 = @func_772(%728) /* ty=Tensor[(14, 13, 3), int8] */;
  (%726, %729)
}

def @func_7851(%var_7849: Tensor[(5, 9, 8), float32], %var_7850: Tensor[(120), int8]) -> (Tensor[(5, 9, 8), float32], Tensor[(14, 13, 3), bool], Tensor[(24), int8], Tensor[(120), int8]) {
  %738 = fn (%var_7840: Tensor[(5, 9, 8), float32], %var_7846: Tensor[(120), int8]) -> (Tensor[(5, 9, 8), float32], Tensor[(14, 13, 3), bool], Tensor[(24), int8], Tensor[(120), int8]) {
    %730 = cast(%var_7840, dtype="float32") /* ty=Tensor[(5, 9, 8), float32] */;
    %731 = cast(meta[relay.Constant][28] /* ty=Tensor[(24), int8] */, dtype="int8") /* ty=Tensor[(24), int8] */;
    %732 = cast(%var_7846, dtype="int8") /* ty=Tensor[(120), int8] */;
    %733 = reshape(%731, newshape=[8, 1, 3]) /* ty=Tensor[(8, 1, 3), int8] */;
    %734 = reshape(%732, newshape=[8, 5, 3]) /* ty=Tensor[(8, 5, 3), int8] */;
    %735 = @func_161(%733, %734) /* ty=(Tensor[(8, 5, 3), bool], Tensor[(14, 13, 3), bool]) */;
    %736 = log10(%730) /* ty=Tensor[(5, 9, 8), float32] */;
    %737 = %735.1;
    (%736, %737, meta[relay.Constant][28] /* ty=Tensor[(24), int8] */, %var_7846)
  };
  %738(%var_7849, %var_7850) /* ty=(Tensor[(5, 9, 8), float32], Tensor[(14, 13, 3), bool], Tensor[(24), int8], Tensor[(120), int8]) */
}

def @func_9601() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  @func_9599() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */
}

def @func_15008() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32]) {
  %743 = fn () -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32]) {
    %739 = @func_7019() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %740 = @func_3456() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
    %741 = %739.0;
    %742 = %740.1;
    (%741, %742)
  };
  %743() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32]) */
}

def @func_9332() -> Tensor[(14, 13, 3), float64] {
  @func_9330() /* ty=Tensor[(14, 13, 3), float64] */
}

def @func_8570(%var_8569: Tensor[(6, 4, 4), uint8]) -> (Tensor[(6, 4, 4), uint8], Tensor[(14, 13, 3), float64], Tensor[(6, 4, 4), bool], Tensor[(14, 13, 3), float32]) {
  %758 = fn (%var_8540: Tensor[(6, 4, 4), uint8]) -> (Tensor[(6, 4, 4), uint8], Tensor[(14, 13, 3), float64], Tensor[(6, 4, 4), bool], Tensor[(14, 13, 3), float32]) {
    %744 = cast(meta[relay.Constant][29] /* ty=Tensor[(6, 4, 4), uint8] */, dtype="uint8") /* ty=Tensor[(6, 4, 4), uint8] */;
    %745 = shape_of(%var_8540, dtype="int32") /* ty=Tensor[(3), int32] */;
    %746 = cast(%var_8540, dtype="uint8") /* ty=Tensor[(6, 4, 4), uint8] */;
    %747 = dyn.reshape(%744, %745, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %748 = @func_4965() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %749 = cast(meta[relay.Constant][29] /* ty=Tensor[(6, 4, 4), uint8] */, dtype="bool") /* ty=Tensor[(6, 4, 4), bool] */;
    %750 = shape_of(%var_8540, dtype="int32") /* ty=Tensor[(3), int32] */;
    %751 = cast(%var_8540, dtype="bool") /* ty=Tensor[(6, 4, 4), bool] */;
    %752 = dyn.reshape(%749, %750, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %753 = @func_5318() /* ty=(Tensor[(14, 13, 3), float32],) */;
    %754 = right_shift(%746, %747) /* ty=Tensor[(6, 4, 4), uint8] */;
    %755 = %748.0;
    %756 = greater_equal(%751, %752) /* ty=Tensor[(6, 4, 4), bool] */;
    %757 = %753.0;
    (%754, %755, %756, %757)
  };
  %758(%var_8569) /* ty=(Tensor[(6, 4, 4), uint8], Tensor[(14, 13, 3), float64], Tensor[(6, 4, 4), bool], Tensor[(14, 13, 3), float32]) */
}

def @func_13049() -> Tensor[(14, 13, 3), bool] {
  @func_7076() /* ty=Tensor[(14, 13, 3), bool] */
}

def @func_6332() -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64]) {
  %759 = @func_6247() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(12, 2), int8], Tensor[(6, 4), int8], Tensor[(120), int8], Tensor[(14, 13, 3), float64]) */;
  %760 = @func_1307() /* ty=Tensor[(14, 13, 3), bool] */;
  %761 = %759.0;
  (%760, %761)
}

def @func_10825() -> (Tensor[(7, 13, 6), float32],) {
  %764 = fn () -> (Tensor[(7, 13, 6), float32],) {
    %762 = cast(meta[relay.Constant][30] /* ty=Tensor[(7, 13, 6), float32] */, dtype="float32") /* ty=Tensor[(7, 13, 6), float32] */;
    %763 = log(%762) /* ty=Tensor[(7, 13, 6), float32] */;
    (%763,)
  };
  %764() /* ty=(Tensor[(7, 13, 6), float32],) */
}

def @func_15245() -> (Tensor[(14, 13, 3), float64],) {
  %765 = @func_14349() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %766 = %765.0;
  (%766,)
}

def @func_7076() -> Tensor[(14, 13, 3), bool] {
  @func_4540() /* ty=Tensor[(14, 13, 3), bool] */
}

def @func_8881() -> Tensor[(14, 13, 3), float64] {
  %767 = @func_7317() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %767.0
}

def @func_15291() -> Tensor[(14, 13, 3), float64] {
  %769 = fn () -> Tensor[(14, 13, 3), float64] {
    %768 = @func_11289() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %768.0
  };
  %769() /* ty=Tensor[(14, 13, 3), float64] */
}

def @func_1426(%var_1425: Tensor[(14, 13, 3), float32]) -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(24), int8]) {
  %781 = fn (%var_1393: Tensor[(14, 13, 3), float32]) -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(24), int8]) {
    %770 = @func_1278() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
    %771 = %770.2;
    %772 = cast(%var_1393, dtype="bool") /* ty=Tensor[(14, 13, 3), bool] */;
    %773 = shape_of(%771, dtype="int32") /* ty=Tensor[(3), int32] */;
    %774 = cast(%771, dtype="bool") /* ty=Tensor[(14, 13, 3), bool] */;
    %775 = dyn.reshape(%772, %773, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %776 = @func_829() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
    %777 = @func_369() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(3, 40), int8], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
    %778 = less(%774, %775) /* ty=Tensor[(14, 13, 3), bool] */;
    %779 = %776.1;
    %780 = %777.1;
    (%778, %779, %780)
  };
  %781(%var_1425) /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(24), int8]) */
}

def @func_9625() -> Tensor[(14, 13, 3), float64] {
  %782 = @func_3800() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %782.0
}

def @func_16926() -> (Tensor[(14, 13, 3), float64], Tensor[(6, 1, 1), float32], Tensor[(6), float32]) {
  @func_16924() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(6, 1, 1), float32], Tensor[(6), float32]) */
}

def @func_9031() -> (Tensor[(14, 13, 3), float64], Tensor[(3, 40), int8], Tensor[(8, 5, 3), bool], Tensor[(24), int8]) {
  @func_9029() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(3, 40), int8], Tensor[(8, 5, 3), bool], Tensor[(24), int8]) */
}

def @func_8356(%var_8332: Tensor[(12, 14, 11), int8], %var_8347: Tensor[(12, 14, 11), int8]) -> (Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), float64]) {
  %783 = cast(%var_8332, dtype="bool") /* ty=Tensor[(12, 14, 11), bool] */;
  %784 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(12, 14, 11), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %785 = cast(meta[relay.Constant][31] /* ty=Tensor[(12, 14, 11), int8] */, dtype="bool") /* ty=Tensor[(12, 14, 11), bool] */;
  %786 = dyn.reshape(%783, %784, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %787 = cast(%var_8347, dtype="float64") /* ty=Tensor[(12, 14, 11), float64] */;
  %788 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(12, 14, 11), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %789 = cast(meta[relay.Constant][31] /* ty=Tensor[(12, 14, 11), int8] */, dtype="float64") /* ty=Tensor[(12, 14, 11), float64] */;
  %790 = dyn.reshape(%787, %788, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %791 = equal(%785, %786) /* ty=Tensor[(12, 14, 11), bool] */;
  %792 = mod(%789, %790) /* ty=Tensor[(12, 14, 11), float64] */;
  (%791, %792)
}

def @func_16195(%var_16192: Tensor[(336), float64], %var_16193: Tensor[(24), int8], %var_16194: Tensor[(120), int8]) -> (Tensor[(14, 13, 3), float64], Tensor[(14, 4, 6), float64], Tensor[(336), float64], Tensor[(8, 5, 3), bool], Tensor[(24), int8], Tensor[(120), int8]) {
  %804 = fn (%var_16169: Tensor[(336), float64], %var_16174: Tensor[(24), int8], %var_16175: Tensor[(120), int8]) -> (Tensor[(14, 13, 3), float64], Tensor[(14, 4, 6), float64], Tensor[(336), float64], Tensor[(8, 5, 3), bool], Tensor[(24), int8], Tensor[(120), int8]) {
    %793 = cast(%var_16169, dtype="float64") /* ty=Tensor[(336), float64] */;
    %794 = reshape(%793, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), float64] */;
    %795 = @func_2737(%794) /* ty=(Tensor[(14, 4, 6), float64], Tensor[(14, 4, 6), float64]) */;
    %796 = cast(%var_16174, dtype="int8") /* ty=Tensor[(24), int8] */;
    %797 = cast(%var_16175, dtype="int8") /* ty=Tensor[(120), int8] */;
    %798 = reshape(%796, newshape=[12, 2]) /* ty=Tensor[(12, 2), int8] */;
    %799 = reshape(%797, newshape=[120]) /* ty=Tensor[(120), int8] */;
    %800 = @func_2173(%798, %799) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(8, 5, 3), bool], Tensor[(12, 2), int8], Tensor[(120), int8]) */;
    %801 = @func_11751() /* ty=Tensor[(14, 13, 3), float64] */;
    %802 = %795.0;
    %803 = %800.1;
    (%801, %802, %var_16169, %803, %var_16174, %var_16175)
  };
  %804(%var_16192, %var_16193, %var_16194) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 4, 6), float64], Tensor[(336), float64], Tensor[(8, 5, 3), bool], Tensor[(24), int8], Tensor[(120), int8]) */
}

def @func_76() -> (Tensor[(14, 13, 3), float64],) {
  @func_74() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_12484() -> (Tensor[(14, 13, 3), float64],) {
  %807 = fn () -> (Tensor[(14, 13, 3), float64],) {
    %805 = @func_1278() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
    %806 = %805.0;
    (%806,)
  };
  %807() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_3088(%var_3087: Tensor[(14, 13, 3), float32]) -> (Tensor[(14, 13, 3), bool],) {
  %815 = fn (%var_3077: Tensor[(14, 13, 3), float32]) -> (Tensor[(14, 13, 3), bool],) {
    %808 = @func_3047() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
    %809 = %808.0;
    %810 = cast(%var_3077, dtype="bool") /* ty=Tensor[(14, 13, 3), bool] */;
    %811 = shape_of(%809, dtype="int32") /* ty=Tensor[(3), int32] */;
    %812 = cast(%809, dtype="bool") /* ty=Tensor[(14, 13, 3), bool] */;
    %813 = dyn.reshape(%810, %811, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %814 = logical_or(%812, %813) /* ty=Tensor[(14, 13, 3), bool] */;
    (%814,)
  };
  %815(%var_3087) /* ty=(Tensor[(14, 13, 3), bool],) */
}

def @func_8789() -> Tensor[(14, 13, 3), float32] {
  @func_5481() /* ty=Tensor[(14, 13, 3), float32] */
}

def @func_10070() -> (Tensor[(14, 13, 3), float64],) {
  @func_10068() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_6954() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32]) {
  @func_6952() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32]) */
}

def @func_5791() -> Tensor[(14, 13, 3), float64] {
  %817 = fn () -> Tensor[(14, 13, 3), float64] {
    %816 = @func_5232() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %816.0
  };
  %817() /* ty=Tensor[(14, 13, 3), float64] */
}

def @func_3760() -> Tensor[(14, 13, 3), float64] {
  %818 = fn () -> Tensor[(14, 13, 3), float64] {
    @func_3541() /* ty=Tensor[(14, 13, 3), float64] */
  };
  %818() /* ty=Tensor[(14, 13, 3), float64] */
}

def @func_14349() -> (Tensor[(14, 13, 3), float64],) {
  %819 = @func_9085() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %820 = %819.0;
  (%820,)
}

def @func_13938() -> Tensor[(14, 13, 3), uint64] {
  @func_13936() /* ty=Tensor[(14, 13, 3), uint64] */
}

def @func_11751() -> Tensor[(14, 13, 3), float64] {
  %821 = @func_10068() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %821.0
}

def @func_7078() -> Tensor[(14, 13, 3), bool] {
  @func_7076() /* ty=Tensor[(14, 13, 3), bool] */
}

def @func_8820() -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), int8]) {
  %822 = @func_1307() /* ty=Tensor[(14, 13, 3), bool] */;
  %823 = @func_3303() /* ty=Tensor[(14, 13, 3), int8] */;
  (%822, %823)
}

def @func_14408() -> (Tensor[(14, 13, 3), float32],) {
  @func_14406() /* ty=(Tensor[(14, 13, 3), float32],) */
}

def @func_6899() -> (Tensor[(14, 13, 3), float64],) {
  @func_6897() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_830() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  %829 = fn () -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
    %824 = @func_390() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %825 = @func_54() /* ty=Tensor[(14, 13, 3), float64] */;
    %826 = cast(%825, dtype="float64") /* ty=Tensor[(14, 13, 3), float64] */;
    %827 = %824.0;
    %828 = cosh(%826) /* ty=Tensor[(14, 13, 3), float64] */;
    (%827, %828)
  };
  %829() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */
}

def @func_11289() -> (Tensor[(14, 13, 3), float64],) {
  %830 = @func_8962() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
  %831 = %830.1;
  (%831,)
}

def @func_15222() -> Tensor[(14, 13, 3), float32] {
  %833 = fn () -> Tensor[(14, 13, 3), float32] {
    %832 = @func_12475() /* ty=(Tensor[(14, 13, 3), float32],) */;
    %832.0
  };
  %833() /* ty=Tensor[(14, 13, 3), float32] */
}

def @func_8962() -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) {
  %834 = @func_3047() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
  %835 = %834.0;
  %836 = @func_4442() /* ty=Tensor[(14, 13, 3), float64] */;
  (%835, %836)
}

def @func_8763() -> (Tensor[(14, 13, 3), float64],) {
  %837 = @func_7825() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
  %838 = %837.1;
  (%838,)
}

def @func_14455() -> (Tensor[(16, 16, 9), float32], Tensor[(84), float64], Tensor[(84), float64], Tensor[(14, 13, 3), float64]) {
  @func_14453() /* ty=(Tensor[(16, 16, 9), float32], Tensor[(84), float64], Tensor[(84), float64], Tensor[(14, 13, 3), float64]) */
}

def @func_12103() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  @func_12101() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */
}

def @func_17132() -> (Tensor[(14, 13, 3), float32],) {
  @func_17130() /* ty=(Tensor[(14, 13, 3), float32],) */
}

def @func_579(%var_577: Tensor[(1, 12, 10), int64]) -> (Tensor[(11, 12, 10), bool], Tensor[(11, 12, 10), float64], Tensor[(3, 40), int8], Tensor[(14, 13, 3), float32]) {
  @func_576(%var_577) /* ty=(Tensor[(11, 12, 10), bool], Tensor[(11, 12, 10), float64], Tensor[(3, 40), int8], Tensor[(14, 13, 3), float32]) */
}

def @func_650(%var_640: Tensor[(24), int8], %var_641: Tensor[(120), int8]) -> (Tensor[(14, 13, 3), float64], Tensor[(8, 5, 3), bool], Tensor[(24), int8], Tensor[(120), int8]) {
  %839 = @func_334() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool]) */;
  %840 = %839.5;
  %841 = cast(%840, dtype="float64") /* ty=Tensor[(14, 13, 3), float64] */;
  %842 = cast(%var_640, dtype="int8") /* ty=Tensor[(24), int8] */;
  %843 = cast(%var_641, dtype="int8") /* ty=Tensor[(120), int8] */;
  %844 = reshape(%842, newshape=[8, 1, 3]) /* ty=Tensor[(8, 1, 3), int8] */;
  %845 = reshape(%843, newshape=[8, 5, 3]) /* ty=Tensor[(8, 5, 3), int8] */;
  %846 = @func_161(%844, %845) /* ty=(Tensor[(8, 5, 3), bool], Tensor[(14, 13, 3), bool]) */;
  %847 = tan(%841) /* ty=Tensor[(14, 13, 3), float64] */;
  %848 = %846.0;
  (%847, %848, %var_640, %var_641)
}

def @func_11687() -> (Tensor[(14, 13, 3), float64],) {
  %849 = @func_6897() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %850 = %849.0;
  (%850,)
}

def @func_15747() -> (Tensor[(14, 13, 3), float64],) {
  %853 = fn () -> (Tensor[(14, 13, 3), float64],) {
    %851 = @func_13619() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %852 = %851.0;
    (%852,)
  };
  %853() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_6366() -> (Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(5, 3, 8), int16], Tensor[(120), int16]) {
  %862 = fn () -> (Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(5, 3, 8), int16], Tensor[(120), int16]) {
    %854 = @func_1842() /* ty=(Tensor[(24), int8], Tensor[(14, 13, 3), float64], Tensor[(5, 3, 8), int16], Tensor[(120), int16]) */;
    %855 = cast(meta[relay.Constant][32] /* ty=Tensor[(120), int16] */, dtype="int16") /* ty=Tensor[(120), int16] */;
    %856 = cast(meta[relay.Constant][32] /* ty=Tensor[(120), int16] */, dtype="int16") /* ty=Tensor[(120), int16] */;
    %857 = reshape(%855, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), int16] */;
    %858 = reshape(%856, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), int16] */;
    %859 = @func_3120() /* ty=Tensor[(14, 13, 3), float64] */;
    %860 = %854.0;
    %861 = @func_465(%857, %858) /* ty=Tensor[(5, 3, 8), int16] */;
    (%859, %860, %861, meta[relay.Constant][32] /* ty=Tensor[(120), int16] */)
  };
  %862() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(5, 3, 8), int16], Tensor[(120), int16]) */
}

def @func_6013() -> Tensor[(14, 13, 3), float64] {
  %863 = @func_3281() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %863.0
}

def @func_6772() -> Tensor[(14, 13, 3), bool] {
  %865 = fn () -> Tensor[(14, 13, 3), bool] {
    %864 = @func_5211() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), bool]) */;
    %864.2
  };
  %865() /* ty=Tensor[(14, 13, 3), bool] */
}

def @func_74() -> (Tensor[(14, 13, 3), float64],) {
  %866 = @func_54() /* ty=Tensor[(14, 13, 3), float64] */;
  (%866,)
}

def @func_13337() -> Tensor[(14, 13, 3), bool] {
  @func_13335() /* ty=Tensor[(14, 13, 3), bool] */
}

def @func_1627() -> Tensor[(14, 13, 3), float32] {
  %875 = fn () -> Tensor[(14, 13, 3), float32] {
    %867 = @func_74() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %868 = %867.0;
    %869 = @func_829() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
    %870 = %869.1;
    %871 = cast(%870, dtype="float32") /* ty=Tensor[(14, 13, 3), float32] */;
    %872 = shape_of(%868, dtype="int32") /* ty=Tensor[(3), int32] */;
    %873 = cast(%868, dtype="float32") /* ty=Tensor[(14, 13, 3), float32] */;
    %874 = dyn.reshape(%871, %872, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    floor_mod(%873, %874) /* ty=Tensor[(14, 13, 3), float32] */
  };
  %875() /* ty=Tensor[(14, 13, 3), float32] */
}

def @func_15195() -> Tensor[(14, 13, 3), float64] {
  @func_15193() /* ty=Tensor[(14, 13, 3), float64] */
}

def @func_4757() -> Tensor[(14, 13, 3), float64] {
  %877 = fn () -> Tensor[(14, 13, 3), float64] {
    %876 = @func_978() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) */;
    %876.0
  };
  %877() /* ty=Tensor[(14, 13, 3), float64] */
}

def @func_13076() -> Tensor[(14, 13, 3), float64] {
  @func_13074() /* ty=Tensor[(14, 13, 3), float64] */
}

def @func_13701(%var_13625: Tensor[(5, 11, 15), float32], %var_13673: Tensor[(5, 11, 15), float32]) -> (Tensor[(5, 11, 15), float32], Tensor[(14, 13, 3), float64]) {
  %878 = cast(meta[relay.Constant][33] /* ty=Tensor[(5, 11, 15), float32] */, dtype="float32") /* ty=Tensor[(5, 11, 15), float32] */;
  %879 = shape_of(%var_13625, dtype="int32") /* ty=Tensor[(3), int32] */;
  %880 = cast(%var_13625, dtype="float32") /* ty=Tensor[(5, 11, 15), float32] */;
  %881 = dyn.reshape(%878, %879, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %882 = floor_divide(%880, %881) /* ty=Tensor[(5, 11, 15), float32] */;
  %883 = cast(%var_13673, dtype="float32") /* ty=Tensor[(5, 11, 15), float32] */;
  %884 = shape_of(%882, dtype="int32") /* ty=Tensor[(3), int32] */;
  %885 = cast(%882, dtype="float32") /* ty=Tensor[(5, 11, 15), float32] */;
  %886 = dyn.reshape(%883, %884, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %887 = mod(%885, %886) /* ty=Tensor[(5, 11, 15), float32] */;
  %888 = @func_9330() /* ty=Tensor[(14, 13, 3), float64] */;
  (%887, %888)
}

def @func_15272() -> (Tensor[(14, 13, 3), float64],) {
  @func_15270() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_165(%var_163: Tensor[(8, 1, 3), int8], %var_164: Tensor[(8, 5, 3), int8]) -> (Tensor[(8, 5, 3), bool], Tensor[(14, 13, 3), bool]) {
  @func_161(%var_163, %var_164) /* ty=(Tensor[(8, 5, 3), bool], Tensor[(14, 13, 3), bool]) */
}

def @func_15651() -> (Tensor[(14, 13, 3), float64],) {
  %890 = fn () -> (Tensor[(14, 13, 3), float64],) {
    %889 = @func_8217() /* ty=Tensor[(14, 13, 3), float64] */;
    (%889,)
  };
  %890() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_2359(%var_2349: Tensor[(24), int8]) -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(24), int8], Tensor[(14, 13, 3), float64]) {
  %891 = @func_1542() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %892 = %891.0;
  %893 = cast(%892, dtype="float64") /* ty=Tensor[(14, 13, 3), float64] */;
  %894 = cast(%var_2349, dtype="int8") /* ty=Tensor[(24), int8] */;
  %895 = reshape(%894, newshape=[24]) /* ty=Tensor[(24), int8] */;
  %896 = @func_1135(%895) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), bool], Tensor[(24), int8], Tensor[(30, 4), uint32], Tensor[(14, 13, 3), float64]) */;
  %897 = @func_1018() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), int8]) */;
  %898 = sinh(%893) /* ty=Tensor[(14, 13, 3), float64] */;
  %899 = %896.2;
  %900 = %897.0;
  (%898, %899, %var_2349, %900)
}

def @func_10397() -> Tensor[(14, 13, 3), float64] {
  %901 = fn () -> Tensor[(14, 13, 3), float64] {
    @func_9330() /* ty=Tensor[(14, 13, 3), float64] */
  };
  %901() /* ty=Tensor[(14, 13, 3), float64] */
}

def @func_1251(%var_1226: Tensor[(546), bool]) -> (Tensor[(24), int8], Tensor[(14, 13, 3), int8], Tensor[(546), bool], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) {
  %902 = @func_369() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(3, 40), int8], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
  %903 = cast(%var_1226, dtype="bool") /* ty=Tensor[(546), bool] */;
  %904 = reshape(%903, newshape=[14, 13, 3]) /* ty=Tensor[(14, 13, 3), bool] */;
  %905 = @func_541() /* ty=(Tensor[(14, 13, 3), float32],) */;
  %906 = @func_26() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %907 = %902.1;
  %908 = @func_772(%904) /* ty=Tensor[(14, 13, 3), int8] */;
  %909 = %905.0;
  %910 = %906.0;
  (%907, %908, %var_1226, %909, %910)
}

def @func_8822() -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), int8]) {
  @func_8820() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), int8]) */
}

def @func_9388() -> Tensor[(14, 13, 3), float32] {
  %911 = @func_4393() /* ty=(Tensor[(14, 13, 3), int8], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
  %911.2
}

def @func_12747() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32]) {
  @func_12745() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32]) */
}

def @func_13992(%var_13986: Tensor[(24), int8]) -> (Tensor[(14, 13, 3), float32], Tensor[(24), int8], Tensor[(24), int8], Tensor[(120), int8]) {
  %912 = @func_10417() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
  %913 = cast(%var_13986, dtype="int8") /* ty=Tensor[(24), int8] */;
  %914 = cast(meta[relay.Constant][34] /* ty=Tensor[(120), int8] */, dtype="int8") /* ty=Tensor[(120), int8] */;
  %915 = reshape(%913, newshape=[24]) /* ty=Tensor[(24), int8] */;
  %916 = reshape(%914, newshape=[120]) /* ty=Tensor[(120), int8] */;
  %917 = @func_650(%915, %916) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(8, 5, 3), bool], Tensor[(24), int8], Tensor[(120), int8]) */;
  %918 = %912.0;
  %919 = %917.2;
  (%918, %919, %var_13986, meta[relay.Constant][34] /* ty=Tensor[(120), int8] */)
}

def @func_16539() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  %924 = fn () -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
    %920 = @func_10068() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %921 = @func_8435() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %922 = %920.0;
    %923 = %921.0;
    (%922, %923)
  };
  %924() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */
}

def @func_3542() -> Tensor[(14, 13, 3), float64] {
  %926 = fn () -> Tensor[(14, 13, 3), float64] {
    %925 = @func_917() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %925.0
  };
  %926() /* ty=Tensor[(14, 13, 3), float64] */
}

def @func_10316() -> (Tensor[(14, 13, 3), bool],) {
  %929 = fn () -> (Tensor[(14, 13, 3), bool],) {
    %927 = @func_978() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) */;
    %928 = %927.1;
    (%928,)
  };
  %929() /* ty=(Tensor[(14, 13, 3), bool],) */
}

def @func_9275() -> (Tensor[(5, 3, 8), int16],) {
  %932 = fn () -> (Tensor[(5, 3, 8), int16],) {
    %930 = @func_8947() /* ty=(Tensor[(5, 3, 8), int16],) */;
    %931 = %930.0;
    (%931,)
  };
  %932() /* ty=(Tensor[(5, 3, 8), int16],) */
}

def @func_979() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) {
  %937 = fn () -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) {
    %933 = @func_390() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %934 = @func_11() /* ty=(Tensor[(14, 13, 3), bool],) */;
    %935 = %933.0;
    %936 = %934.0;
    (%935, %936)
  };
  %937() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) */
}

def @func_8436() -> (Tensor[(14, 13, 3), float64],) {
  %940 = fn () -> (Tensor[(14, 13, 3), float64],) {
    %938 = @func_2521() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %939 = %938.0;
    (%939,)
  };
  %940() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_11635() -> (Tensor[(12, 8, 9), float32], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) {
  %947 = fn () -> (Tensor[(12, 8, 9), float32], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) {
    %941 = @func_3956() /* ty=(Tensor[(12, 8, 9), float32], Tensor[(12, 8, 9), float64]) */;
    %942 = @func_7885() /* ty=(Tensor[(14, 13, 3), float32],) */;
    %943 = @func_5211() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), bool]) */;
    %944 = %941.0;
    %945 = %942.0;
    %946 = %943.0;
    (%944, %945, %946)
  };
  %947() /* ty=(Tensor[(12, 8, 9), float32], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */
}

def @func_5888() -> (Tensor[(14, 13, 3), bool],) {
  @func_5886() /* ty=(Tensor[(14, 13, 3), bool],) */
}

def @func_3638(%var_3637: Tensor[(6, 2, 7), float64]) -> Tensor[(6, 2, 7), float64] {
  %952 = fn (%var_3630: Tensor[(6, 2, 7), float64]) -> Tensor[(6, 2, 7), float64] {
    %948 = cast(%var_3630, dtype="float64") /* ty=Tensor[(6, 2, 7), float64] */;
    %949 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(6, 2, 7), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %950 = cast(meta[relay.Constant][35] /* ty=Tensor[(6, 2, 7), float64] */, dtype="float64") /* ty=Tensor[(6, 2, 7), float64] */;
    %951 = dyn.reshape(%948, %949, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    mod(%950, %951) /* ty=Tensor[(6, 2, 7), float64] */
  };
  %952(%var_3637) /* ty=Tensor[(6, 2, 7), float64] */
}

def @func_12381(%var_12380: Tensor[(6, 10, 4), uint64]) -> Tensor[(6, 10, 4), uint64] {
  %957 = fn (%var_12374: Tensor[(6, 10, 4), uint64]) -> Tensor[(6, 10, 4), uint64] {
    %953 = cast(%var_12374, dtype="uint64") /* ty=Tensor[(6, 10, 4), uint64] */;
    %954 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(6, 10, 4), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %955 = cast(meta[relay.Constant][36] /* ty=Tensor[(6, 10, 4), uint64] */, dtype="uint64") /* ty=Tensor[(6, 10, 4), uint64] */;
    %956 = dyn.reshape(%953, %954, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    logical_xor(%955, %956) /* ty=Tensor[(6, 10, 4), uint64] */
  };
  %957(%var_12380) /* ty=Tensor[(6, 10, 4), uint64] */
}

def @func_7234() -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) {
  @func_7232() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */
}

def @func_2251() -> Tensor[(14, 13, 3), float64] {
  @func_2249() /* ty=Tensor[(14, 13, 3), float64] */
}

def @func_11291() -> (Tensor[(14, 13, 3), float64],) {
  @func_11289() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_14156() -> (Tensor[(14, 13, 3), float64],) {
  %960 = fn () -> (Tensor[(14, 13, 3), float64],) {
    %958 = @func_12121() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
    %959 = %958.0;
    (%959,)
  };
  %960() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_12990() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), int8], Tensor[(14, 13, 3), float32]) {
  @func_12988() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), int8], Tensor[(14, 13, 3), float32]) */
}

def @func_8191() -> (Tensor[(4, 5, 8), float64],) {
  %961 = cast(meta[relay.Constant][37] /* ty=Tensor[(4, 5, 8), float64] */, dtype="float64") /* ty=Tensor[(4, 5, 8), float64] */;
  %962 = exp(%961) /* ty=Tensor[(4, 5, 8), float64] */;
  (%962,)
}

def @func_3282() -> (Tensor[(14, 13, 3), float64],) {
  %965 = fn () -> (Tensor[(14, 13, 3), float64],) {
    %963 = @func_917() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %964 = %963.0;
    (%964,)
  };
  %965() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_5869() -> Tensor[(14, 13, 3), bool] {
  @func_5867() /* ty=Tensor[(14, 13, 3), bool] */
}

def @func_7020() -> (Tensor[(14, 13, 3), float64],) {
  %967 = fn () -> (Tensor[(14, 13, 3), float64],) {
    %966 = @func_2249() /* ty=Tensor[(14, 13, 3), float64] */;
    (%966,)
  };
  %967() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_12869() -> (Tensor[(14, 13, 3), float64],) {
  %970 = fn () -> (Tensor[(14, 13, 3), float64],) {
    %968 = @func_6742() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) */;
    %969 = %968.2;
    (%969,)
  };
  %970() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_13705(%var_13703: Tensor[(5, 11, 15), float32], %var_13704: Tensor[(5, 11, 15), float32]) -> (Tensor[(5, 11, 15), float32], Tensor[(14, 13, 3), float64]) {
  @func_13701(%var_13703, %var_13704) /* ty=(Tensor[(5, 11, 15), float32], Tensor[(14, 13, 3), float64]) */
}

def @func_13772() -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) {
  %975 = fn () -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) {
    %971 = @func_2026() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) */;
    %972 = @func_11169() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float32]) */;
    %973 = %971.0;
    %974 = %972.0;
    (%973, %974)
  };
  %975() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */
}

def @func_11384(%var_11383: Tensor[(336), float64]) -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), bool], Tensor[(120), int16], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 4, 6), float64], Tensor[(336), float64]) {
  %992 = fn (%var_11380: Tensor[(336), float64]) -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), bool], Tensor[(120), int16], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 4, 6), float64], Tensor[(336), float64]) {
    %976 = @func_5712() /* ty=(Tensor[(14, 13, 3), float32],) */;
    %977 = cast(meta[relay.Constant][38] /* ty=Tensor[(120), int16] */, dtype="int16") /* ty=Tensor[(120), int16] */;
    %978 = reshape(%977, newshape=[120]) /* ty=Tensor[(120), int16] */;
    %979 = @func_4219(%978) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(120), int16]) */;
    %980 = @func_3800() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %981 = @func_541() /* ty=(Tensor[(14, 13, 3), float32],) */;
    %982 = cast(%var_11380, dtype="float64") /* ty=Tensor[(336), float64] */;
    %983 = reshape(%982, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), float64] */;
    %984 = @func_2737(%983) /* ty=(Tensor[(14, 4, 6), float64], Tensor[(14, 4, 6), float64]) */;
    %985 = %976.0;
    %986 = %979.1;
    %987 = @func_4540() /* ty=Tensor[(14, 13, 3), bool] */;
    %988 = %980.0;
    %989 = %981.0;
    %990 = @func_5790() /* ty=Tensor[(14, 13, 3), float64] */;
    %991 = %984.1;
    (%985, %986, meta[relay.Constant][38] /* ty=Tensor[(120), int16] */, %987, %988, %989, %990, %991, %var_11380)
  };
  %992(%var_11383) /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), bool], Tensor[(120), int16], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 4, 6), float64], Tensor[(336), float64]) */
}

def @func_13619() -> (Tensor[(14, 13, 3), float64],) {
  %993 = @func_8217() /* ty=Tensor[(14, 13, 3), float64] */;
  (%993,)
}

def @func_15143() -> (Tensor[(14, 13, 3), float64],) {
  @func_15141() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_12455(%var_12454: Tensor[(2704), float32]) -> (Tensor[(5, 3, 8), int16], Tensor[(14, 13, 3), float32], Tensor[(13, 16, 13), float32], Tensor[(2704), float32], Tensor[(84), float64], Tensor[(1, 84), float64]) {
  %1006 = fn (%var_12417: Tensor[(2704), float32]) -> (Tensor[(5, 3, 8), int16], Tensor[(14, 13, 3), float32], Tensor[(13, 16, 13), float32], Tensor[(2704), float32], Tensor[(84), float64], Tensor[(1, 84), float64]) {
    %994 = @func_8947() /* ty=(Tensor[(5, 3, 8), int16],) */;
    %995 = @func_3456() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
    %996 = cast(%var_12417, dtype="float32") /* ty=Tensor[(2704), float32] */;
    %997 = reshape(%996, newshape=[13, 16, 13]) /* ty=Tensor[(13, 16, 13), float32] */;
    %998 = @func_6388(%997) /* ty=(Tensor[(13, 16, 13), float32],) */;
    %999 = cast(meta[relay.Constant][39] /* ty=Tensor[(1, 84), float64] */, dtype="float64") /* ty=Tensor[(1, 84), float64] */;
    %1000 = reshape(%999, newshape=[84]) /* ty=Tensor[(84), float64] */;
    %1001 = @func_11915(%1000) /* ty=(Tensor[(14, 13, 3), bool], Tensor[(6, 2, 7), float64], Tensor[(84), float64]) */;
    %1002 = %994.0;
    %1003 = %995.1;
    %1004 = %998.0;
    %1005 = %1001.2;
    (%1002, %1003, %1004, %var_12417, %1005, meta[relay.Constant][39] /* ty=Tensor[(1, 84), float64] */)
  };
  %1006(%var_12454) /* ty=(Tensor[(5, 3, 8), int16], Tensor[(14, 13, 3), float32], Tensor[(13, 16, 13), float32], Tensor[(2704), float32], Tensor[(84), float64], Tensor[(1, 84), float64]) */
}

def @func_469(%var_467: Tensor[(5, 3, 8), int16], %var_468: Tensor[(5, 3, 8), int16]) -> Tensor[(5, 3, 8), int16] {
  @func_465(%var_467, %var_468) /* ty=Tensor[(5, 3, 8), int16] */
}

def @func_12679() -> (Tensor[(14, 13, 3), float64],) {
  %1008 = fn () -> (Tensor[(14, 13, 3), float64],) {
    %1007 = @func_11142() /* ty=Tensor[(14, 13, 3), float64] */;
    (%1007,)
  };
  %1008() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_15225() -> Tensor[(14, 13, 3), float64] {
  @func_3541() /* ty=Tensor[(14, 13, 3), float64] */
}

def @func_15885() -> Tensor[(14, 13, 3), bool] {
  %1009 = fn () -> Tensor[(14, 13, 3), bool] {
    @func_5867() /* ty=Tensor[(14, 13, 3), bool] */
  };
  %1009() /* ty=Tensor[(14, 13, 3), bool] */
}

def @func_11464() -> Tensor[(14, 13, 3), float32] {
  @func_11462() /* ty=Tensor[(14, 13, 3), float32] */
}

def @func_4810() -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float32]) {
  %1015 = fn () -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float32]) {
    %1010 = @func_3881() /* ty=(Tensor[(14, 13, 3), float32],) */;
    %1011 = %1010.0;
    %1012 = cast(%1011, dtype="float32") /* ty=Tensor[(14, 13, 3), float32] */;
    %1013 = reshape(%1012, newshape=[14, 13, 3]) /* ty=Tensor[(14, 13, 3), float32] */;
    %1014 = @func_900(%1013) /* ty=Tensor[(14, 13, 3), float32] */;
    (%1011, %1014)
  };
  %1015() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float32]) */
}

def @func_17106() -> Tensor[(15, 2, 5), uint64] {
  %1016 = fn () -> Tensor[(15, 2, 5), uint64] {
    @func_6117() /* ty=Tensor[(15, 2, 5), uint64] */
  };
  %1016() /* ty=Tensor[(15, 2, 5), uint64] */
}

def @func_13051() -> Tensor[(14, 13, 3), bool] {
  @func_13049() /* ty=Tensor[(14, 13, 3), bool] */
}

def @func_17183() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  @func_17181() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */
}

def @func_4540() -> Tensor[(14, 13, 3), bool] {
  @func_1307() /* ty=Tensor[(14, 13, 3), bool] */
}

def @func_8693() -> Tensor[(14, 13, 3), float64] {
  @func_8691() /* ty=Tensor[(14, 13, 3), float64] */
}

def @func_7730(%var_7729: Tensor[(6, 6, 2), float64]) -> Tensor[(6, 6, 2), float64] {
  %1018 = fn (%var_7721: Tensor[(6, 6, 2), float64]) -> Tensor[(6, 6, 2), float64] {
    %1017 = cast(%var_7721, dtype="float64") /* ty=Tensor[(6, 6, 2), float64] */;
    cos(%1017) /* ty=Tensor[(6, 6, 2), float64] */
  };
  %1018(%var_7729) /* ty=Tensor[(6, 6, 2), float64] */
}

def @func_654(%var_652: Tensor[(24), int8], %var_653: Tensor[(120), int8]) -> (Tensor[(14, 13, 3), float64], Tensor[(8, 5, 3), bool], Tensor[(24), int8], Tensor[(120), int8]) {
  @func_650(%var_652, %var_653) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(8, 5, 3), bool], Tensor[(24), int8], Tensor[(120), int8]) */
}

def @func_2569() -> Tensor[(14, 13, 3), float64] {
  %1019 = @func_74() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1019.0
}

def @func_5691() -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(120), int8], Tensor[(24), int8], Tensor[(120), int8], Tensor[(14, 13, 3), float64]) {
  %1032 = fn () -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(120), int8], Tensor[(24), int8], Tensor[(120), int8], Tensor[(14, 13, 3), float64]) {
    %1020 = @func_3456() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
    %1021 = cast(meta[relay.Constant][40] /* ty=Tensor[(24), int8] */, dtype="int8") /* ty=Tensor[(24), int8] */;
    %1022 = cast(meta[relay.Constant][41] /* ty=Tensor[(120), int8] */, dtype="int8") /* ty=Tensor[(120), int8] */;
    %1023 = reshape(%1021, newshape=[24]) /* ty=Tensor[(24), int8] */;
    %1024 = reshape(%1022, newshape=[120]) /* ty=Tensor[(120), int8] */;
    %1025 = @func_650(%1023, %1024) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(8, 5, 3), bool], Tensor[(24), int8], Tensor[(120), int8]) */;
    %1026 = @func_74() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %1027 = @func_4540() /* ty=Tensor[(14, 13, 3), bool] */;
    %1028 = %1020.1;
    %1029 = @func_2569() /* ty=Tensor[(14, 13, 3), float64] */;
    %1030 = %1025.3;
    %1031 = %1026.0;
    (%1027, %1028, %1029, %1030, meta[relay.Constant][40] /* ty=Tensor[(24), int8] */, meta[relay.Constant][41] /* ty=Tensor[(120), int8] */, %1031)
  };
  %1032() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(120), int8], Tensor[(24), int8], Tensor[(120), int8], Tensor[(14, 13, 3), float64]) */
}

def @func_6015() -> Tensor[(14, 13, 3), float64] {
  @func_6013() /* ty=Tensor[(14, 13, 3), float64] */
}

def @func_7926() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  %1039 = fn () -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
    %1033 = @func_5232() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %1034 = @func_369() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(3, 40), int8], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
    %1035 = @func_3759() /* ty=Tensor[(14, 13, 3), float64] */;
    %1036 = @func_6013() /* ty=Tensor[(14, 13, 3), float64] */;
    %1037 = %1033.0;
    %1038 = %1034.3;
    (%1035, %1036, %1037, %1038)
  };
  %1039() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */
}

def @func_17031() -> (Tensor[(14, 13, 3), float64],) {
  %1040 = @func_8277() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1041 = %1040.0;
  (%1041,)
}

def @func_17239() -> (Tensor[(14, 13, 3), float64],) {
  %1042 = @func_13538() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1043 = %1042.0;
  (%1043,)
}

def @func_17236() -> Tensor[(14, 13, 3), float32] {
  @func_17234() /* ty=Tensor[(14, 13, 3), float32] */
}

def @func_4608() -> (Tensor[(14, 13, 3), uint64], Tensor[(14, 13, 3), int8]) {
  %1059 = fn () -> (Tensor[(14, 13, 3), uint64], Tensor[(14, 13, 3), int8]) {
    %1044 = @func_3800() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %1045 = %1044.0;
    %1046 = cast(meta[relay.Constant][42] /* ty=Tensor[(14, 13, 3), float64] */, dtype="bool") /* ty=Tensor[(14, 13, 3), bool] */;
    %1047 = shape_of(%1045, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1048 = cast(%1045, dtype="bool") /* ty=Tensor[(14, 13, 3), bool] */;
    %1049 = dyn.reshape(%1046, %1047, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1050 = logical_and(%1048, %1049) /* ty=Tensor[(14, 13, 3), bool] */;
    %1051 = cast(meta[relay.Constant][43] /* ty=Tensor[(14, 13, 3), bool] */, dtype="uint64") /* ty=Tensor[(14, 13, 3), uint64] */;
    %1052 = shape_of(%1050, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1053 = cast(%1050, dtype="uint64") /* ty=Tensor[(14, 13, 3), uint64] */;
    %1054 = dyn.reshape(%1051, %1052, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %1055 = cast(%1050, dtype="bool") /* ty=Tensor[(14, 13, 3), bool] */;
    %1056 = reshape(%1055, newshape=[14, 13, 3]) /* ty=Tensor[(14, 13, 3), bool] */;
    %1057 = bitwise_xor(%1053, %1054) /* ty=Tensor[(14, 13, 3), uint64] */;
    %1058 = @func_772(%1056) /* ty=Tensor[(14, 13, 3), int8] */;
    (%1057, %1058)
  };
  %1059() /* ty=(Tensor[(14, 13, 3), uint64], Tensor[(14, 13, 3), int8]) */
}

def @func_15227() -> Tensor[(14, 13, 3), float64] {
  @func_15225() /* ty=Tensor[(14, 13, 3), float64] */
}

def @func_15476() -> Tensor[(14, 13, 3), bool] {
  @func_1307() /* ty=Tensor[(14, 13, 3), bool] */
}

def @func_12545(%var_12487: Tensor[(3, 10, 14), float64], %var_12498: Tensor[(336, 1), float64]) -> (Tensor[(14, 4, 6), float64], Tensor[(336, 1), float64], Tensor[(14, 13, 3), int8], Tensor[(14, 13, 3), float64], Tensor[(3, 10, 14), float32]) {
  %1060 = cast(%var_12498, dtype="float64") /* ty=Tensor[(336, 1), float64] */;
  %1061 = reshape(%1060, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), float64] */;
  %1062 = @func_2737(%1061) /* ty=(Tensor[(14, 4, 6), float64], Tensor[(14, 4, 6), float64]) */;
  %1063 = @func_9196() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), int8]) */;
  %1064 = @func_2324() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1065 = cast(%var_12487, dtype="float64") /* ty=Tensor[(3, 10, 14), float64] */;
  %1066 = exp(%1065) /* ty=Tensor[(3, 10, 14), float64] */;
  %1067 = cast(%var_12487, dtype="uint32") /* ty=Tensor[(3, 10, 14), uint32] */;
  %1068 = shape_of(%1066, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1069 = cast(%1066, dtype="uint32") /* ty=Tensor[(3, 10, 14), uint32] */;
  %1070 = dyn.reshape(%1067, %1068, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1071 = logical_xor(%1069, %1070) /* ty=Tensor[(3, 10, 14), uint32] */;
  %1072 = cast(%1071, dtype="float32") /* ty=Tensor[(3, 10, 14), float32] */;
  %1073 = %1062.0;
  %1074 = %1063.2;
  %1075 = %1064.0;
  %1076 = cos(%1072) /* ty=Tensor[(3, 10, 14), float32] */;
  (%1073, %var_12498, %1074, %1075, %1076)
}

def @func_6247() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(12, 2), int8], Tensor[(6, 4), int8], Tensor[(120), int8], Tensor[(14, 13, 3), float64]) {
  %1077 = @func_1542() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1078 = cast(meta[relay.Constant][44] /* ty=Tensor[(6, 4), int8] */, dtype="int8") /* ty=Tensor[(6, 4), int8] */;
  %1079 = cast(meta[relay.Constant][45] /* ty=Tensor[(120), int8] */, dtype="int8") /* ty=Tensor[(120), int8] */;
  %1080 = reshape(%1078, newshape=[12, 2]) /* ty=Tensor[(12, 2), int8] */;
  %1081 = reshape(%1079, newshape=[120]) /* ty=Tensor[(120), int8] */;
  %1082 = @func_2173(%1080, %1081) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(8, 5, 3), bool], Tensor[(12, 2), int8], Tensor[(120), int8]) */;
  %1083 = @func_334() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool]) */;
  %1084 = %1077.0;
  %1085 = @func_3759() /* ty=Tensor[(14, 13, 3), float64] */;
  %1086 = %1082.2;
  %1087 = %1083.3;
  (%1084, %1085, %1086, meta[relay.Constant][44] /* ty=Tensor[(6, 4), int8] */, meta[relay.Constant][45] /* ty=Tensor[(120), int8] */, %1087)
}

def @func_17033() -> (Tensor[(14, 13, 3), float64],) {
  @func_17031() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_6388(%var_6382: Tensor[(13, 16, 13), float32]) -> (Tensor[(13, 16, 13), float32],) {
  %1088 = cast(%var_6382, dtype="float32") /* ty=Tensor[(13, 16, 13), float32] */;
  %1089 = atan(%1088) /* ty=Tensor[(13, 16, 13), float32] */;
  (%1089,)
}

def @func_3982() -> Tensor[(14, 13, 3), float32] {
  @func_3980() /* ty=Tensor[(14, 13, 3), float32] */
}

def @func_1278() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) {
  %1090 = @func_390() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1091 = @func_11() /* ty=(Tensor[(14, 13, 3), bool],) */;
  %1092 = %1091.0;
  %1093 = cast(%1092, dtype="float32") /* ty=Tensor[(14, 13, 3), float32] */;
  %1094 = reshape(%1093, newshape=[14, 13, 3]) /* ty=Tensor[(14, 13, 3), float32] */;
  %1095 = %1090.0;
  %1096 = @func_900(%1094) /* ty=Tensor[(14, 13, 3), float32] */;
  (%1095, %1092, %1096)
}

def @func_2740(%var_2738: Tensor[(14, 4, 6), float64]) -> (Tensor[(14, 4, 6), float64], Tensor[(14, 4, 6), float64]) {
  @func_2737(%var_2738) /* ty=(Tensor[(14, 4, 6), float64], Tensor[(14, 4, 6), float64]) */
}

def @func_9627() -> Tensor[(14, 13, 3), float64] {
  @func_9625() /* ty=Tensor[(14, 13, 3), float64] */
}

def @func_748(%var_746: Tensor[(14, 13, 3), float64]) -> (Tensor[(14, 13, 3), int16], Tensor[(14, 13, 3), float64]) {
  @func_745(%var_746) /* ty=(Tensor[(14, 13, 3), int16], Tensor[(14, 13, 3), float64]) */
}

def @func_8791() -> Tensor[(14, 13, 3), float32] {
  @func_8789() /* ty=Tensor[(14, 13, 3), float32] */
}

def @func_12477() -> (Tensor[(14, 13, 3), float32],) {
  @func_12475() /* ty=(Tensor[(14, 13, 3), float32],) */
}

def @func_5417() -> (Tensor[(14, 13, 3), float64], Tensor[(120), int8], Tensor[(24), int8], Tensor[(30, 4), int8], Tensor[(24), int8]) {
  %1097 = @func_1694() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
  %1098 = cast(meta[relay.Constant][46] /* ty=Tensor[(24), int8] */, dtype="int8") /* ty=Tensor[(24), int8] */;
  %1099 = cast(meta[relay.Constant][47] /* ty=Tensor[(30, 4), int8] */, dtype="int8") /* ty=Tensor[(30, 4), int8] */;
  %1100 = reshape(%1098, newshape=[24]) /* ty=Tensor[(24), int8] */;
  %1101 = reshape(%1099, newshape=[120]) /* ty=Tensor[(120), int8] */;
  %1102 = @func_650(%1100, %1101) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(8, 5, 3), bool], Tensor[(24), int8], Tensor[(120), int8]) */;
  %1103 = cast(meta[relay.Constant][46] /* ty=Tensor[(24), int8] */, dtype="int8") /* ty=Tensor[(24), int8] */;
  %1104 = reshape(%1103, newshape=[24]) /* ty=Tensor[(24), int8] */;
  %1105 = @func_2285(%1104) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(120), int8], Tensor[(24), int8], Tensor[(120), int8]) */;
  %1106 = %1097.1;
  %1107 = %1102.3;
  %1108 = %1105.3;
  (%1106, %1107, meta[relay.Constant][46] /* ty=Tensor[(24), int8] */, meta[relay.Constant][47] /* ty=Tensor[(30, 4), int8] */, %1108)
}

def @func_14516() -> (Tensor[(14, 13, 3), float64],) {
  @func_14514() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_14580() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  %1109 = @func_5232() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1110 = @func_11200() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
  %1111 = @func_14349() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1112 = %1109.0;
  %1113 = %1110.0;
  %1114 = %1111.0;
  %1115 = @func_6102() /* ty=Tensor[(14, 13, 3), float64] */;
  (%1112, %1113, %1114, %1115)
}

def @func_12181() -> Tensor[(16, 8, 5), int32] {
  %1116 = cast(-4 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %1117 = cast(meta[relay.Constant][48] /* ty=Tensor[(16, 8, 5), int32] */, dtype="int32") /* ty=Tensor[(16, 8, 5), int32] */;
  multiply(%1116, %1117) /* ty=Tensor[(16, 8, 5), int32] */
}

def @func_4880(%var_4878: Tensor[(7, 1, 10), uint32], %var_4879: Tensor[(7, 9, 10), uint32]) -> (Tensor[(7, 9, 10), uint32],) {
  %1121 = fn (%var_4857: Tensor[(7, 1, 10), uint32], %var_4858: Tensor[(7, 9, 10), uint32]) -> (Tensor[(7, 9, 10), uint32],) {
    %1118 = cast(%var_4857, dtype="uint32") /* ty=Tensor[(7, 1, 10), uint32] */;
    %1119 = cast(%var_4858, dtype="uint32") /* ty=Tensor[(7, 9, 10), uint32] */;
    %1120 = bitwise_or(%1118, %1119) /* ty=Tensor[(7, 9, 10), uint32] */;
    (%1120,)
  };
  %1121(%var_4878, %var_4879) /* ty=(Tensor[(7, 9, 10), uint32],) */
}

def @func_4913() -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) {
  @func_4911() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */
}

def @func_9552() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) {
  %1122 = @func_8820() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), int8]) */;
  %1123 = @func_54() /* ty=Tensor[(14, 13, 3), float64] */;
  %1124 = %1122.0;
  (%1123, %1124)
}

def @func_1724() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) {
  %1131 = fn () -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) {
    %1125 = @func_829() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
    %1126 = %1125.1;
    %1127 = cast(%1126, dtype="float32") /* ty=Tensor[(14, 13, 3), float32] */;
    %1128 = reshape(%1127, newshape=[14, 13, 3]) /* ty=Tensor[(14, 13, 3), float32] */;
    %1129 = @func_1424(%1128) /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(24), int8]) */;
    %1130 = %1129.0;
    (%1126, %1130)
  };
  %1131() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) */
}

def @func_5419() -> (Tensor[(14, 13, 3), float64], Tensor[(120), int8], Tensor[(24), int8], Tensor[(30, 4), int8], Tensor[(24), int8]) {
  @func_5417() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(120), int8], Tensor[(24), int8], Tensor[(30, 4), int8], Tensor[(24), int8]) */
}

def @func_8964() -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) {
  @func_8962() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */
}

def @func_10994() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), int8]) {
  %1136 = fn () -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), int8]) {
    %1132 = @func_2521() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %1133 = @func_4607() /* ty=(Tensor[(14, 13, 3), uint64], Tensor[(14, 13, 3), int8]) */;
    %1134 = %1132.0;
    %1135 = %1133.1;
    (%1134, %1135)
  };
  %1136() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), int8]) */
}

def @func_9197() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), int8]) {
  %1142 = fn () -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), int8]) {
    %1137 = @func_4756() /* ty=Tensor[(14, 13, 3), float64] */;
    %1138 = cast(%1137, dtype="bool") /* ty=Tensor[(14, 13, 3), bool] */;
    %1139 = reshape(%1138, newshape=[14, 13, 3]) /* ty=Tensor[(14, 13, 3), bool] */;
    %1140 = @func_3541() /* ty=Tensor[(14, 13, 3), float64] */;
    %1141 = @func_772(%1139) /* ty=Tensor[(14, 13, 3), int8] */;
    (%1140, %1137, %1141)
  };
  %1142() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), int8]) */
}

def @func_3335() -> Tensor[(14, 13, 3), int8] {
  @func_3333() /* ty=Tensor[(14, 13, 3), int8] */
}

def @func_3980() -> Tensor[(14, 13, 3), float32] {
  @func_1626() /* ty=Tensor[(14, 13, 3), float32] */
}

def @func_10642() -> (Tensor[(14, 13, 3), float64],) {
  @func_10640() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_7978(%var_7976: Tensor[(3, 1, 15), float64], %var_7977: Tensor[(3, 12, 15), float64]) -> (Tensor[(3, 12, 15), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(14, 13, 3), float64]) {
  %1155 = fn (%var_7936: Tensor[(3, 1, 15), float64], %var_7937: Tensor[(3, 12, 15), float64]) -> (Tensor[(3, 12, 15), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(14, 13, 3), float64]) {
    %1143 = cast(%var_7936, dtype="float64") /* ty=Tensor[(3, 1, 15), float64] */;
    %1144 = cast(%var_7937, dtype="float64") /* ty=Tensor[(3, 12, 15), float64] */;
    %1145 = cast(meta[relay.Constant][49] /* ty=Tensor[(24), int8] */, dtype="int8") /* ty=Tensor[(24), int8] */;
    %1146 = reshape(%1145, newshape=[24]) /* ty=Tensor[(24), int8] */;
    %1147 = @func_7678(%1146) /* ty=(Tensor[(120), int16], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(14, 13, 3), bool]) */;
    %1148 = cast(meta[relay.Constant][49] /* ty=Tensor[(24), int8] */, dtype="int8") /* ty=Tensor[(24), int8] */;
    %1149 = reshape(%1148, newshape=[24]) /* ty=Tensor[(24), int8] */;
    %1150 = @func_1135(%1149) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), bool], Tensor[(24), int8], Tensor[(30, 4), uint32], Tensor[(14, 13, 3), float64]) */;
    %1151 = power(%1143, %1144) /* ty=Tensor[(3, 12, 15), float64] */;
    %1152 = @func_2249() /* ty=Tensor[(14, 13, 3), float64] */;
    %1153 = %1147.2;
    %1154 = %1150.0;
    (%1151, %1152, %1153, meta[relay.Constant][49] /* ty=Tensor[(24), int8] */, %1154)
  };
  %1155(%var_7976, %var_7977) /* ty=(Tensor[(3, 12, 15), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(14, 13, 3), float64]) */
}

def @func_6010() -> (Tensor[(14, 13, 3), bool], Tensor[(120), int8], Tensor[(14, 13, 3), float32]) {
  %1162 = fn () -> (Tensor[(14, 13, 3), bool], Tensor[(120), int8], Tensor[(14, 13, 3), float32]) {
    %1156 = @func_11() /* ty=(Tensor[(14, 13, 3), bool],) */;
    %1157 = @func_5690() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(120), int8], Tensor[(24), int8], Tensor[(120), int8], Tensor[(14, 13, 3), float64]) */;
    %1158 = @func_3047() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
    %1159 = %1156.0;
    %1160 = %1157.3;
    %1161 = %1158.0;
    (%1159, %1160, %1161)
  };
  %1162() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(120), int8], Tensor[(14, 13, 3), float32]) */
}

def @func_8219() -> Tensor[(14, 13, 3), float64] {
  @func_8217() /* ty=Tensor[(14, 13, 3), float64] */
}

def @func_8534(%var_8515: Tensor[(24), int8], %var_8521: Tensor[(120), int8]) -> (Tensor[(14, 13, 3), float32], Tensor[(12, 2), int8], Tensor[(24), int8], Tensor[(14, 13, 3), bool], Tensor[(120), int8]) {
  %1163 = @func_3047() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
  %1164 = cast(%var_8515, dtype="int8") /* ty=Tensor[(24), int8] */;
  %1165 = reshape(%1164, newshape=[12, 2]) /* ty=Tensor[(12, 2), int8] */;
  %1166 = @func_7343(%1165) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(12, 2), int8], Tensor[(120), int8]) */;
  %1167 = cast(%var_8521, dtype="int8") /* ty=Tensor[(120), int8] */;
  %1168 = reshape(%1167, newshape=[30, 4]) /* ty=Tensor[(30, 4), int8] */;
  %1169 = @func_6633(%1168) /* ty=(Tensor[(30, 4), float64], Tensor[(30, 4), int8], Tensor[(14, 13, 3), bool]) */;
  %1170 = %1163.0;
  %1171 = %1166.2;
  %1172 = %1169.2;
  (%1170, %1171, %var_8515, %1172, %var_8521)
}

def @func_5886() -> (Tensor[(14, 13, 3), bool],) {
  %1173 = @func_4137() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
  %1174 = %1173.0;
  (%1174,)
}

def @func_1520(%var_1518: Tensor[(9, 4, 7), int32], %var_1519: Tensor[(9, 4, 7), int32]) -> Tensor[(9, 4, 7), uint8] {
  %1189 = fn (%var_1496: Tensor[(9, 4, 7), int32], %var_1497: Tensor[(9, 4, 7), int32]) -> Tensor[(9, 4, 7), uint8] {
    %1175 = cast(%var_1497, dtype="int32") /* ty=Tensor[(9, 4, 7), int32] */;
    %1176 = shape_of(%var_1496, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1177 = cast(%var_1496, dtype="int32") /* ty=Tensor[(9, 4, 7), int32] */;
    %1178 = dyn.reshape(%1175, %1176, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %1179 = right_shift(%1177, %1178) /* ty=Tensor[(9, 4, 7), int32] */;
    %1180 = cast(%1179, dtype="int64") /* ty=Tensor[(9, 4, 7), int64] */;
    %1181 = shape_of(%var_1496, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1182 = cast(%var_1496, dtype="int64") /* ty=Tensor[(9, 4, 7), int64] */;
    %1183 = dyn.reshape(%1180, %1181, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1184 = subtract(%1182, %1183) /* ty=Tensor[(9, 4, 7), int64] */;
    %1185 = cast(%var_1496, dtype="uint8") /* ty=Tensor[(9, 4, 7), uint8] */;
    %1186 = shape_of(%1184, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1187 = cast(%1184, dtype="uint8") /* ty=Tensor[(9, 4, 7), uint8] */;
    %1188 = dyn.reshape(%1185, %1186, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    maximum(%1187, %1188) /* ty=Tensor[(9, 4, 7), uint8] */
  };
  %1189(%var_1518, %var_1519) /* ty=Tensor[(9, 4, 7), uint8] */
}

def @func_15443() -> (Tensor[(14, 13, 3), float32], Tensor[(15, 2, 5), int8], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32], Tensor[(15, 2, 5), bool]) {
  %1190 = @func_14406() /* ty=(Tensor[(14, 13, 3), float32],) */;
  %1191 = @func_11234() /* ty=Tensor[(15, 2, 5), uint64] */;
  %1192 = cast(meta[relay.Constant][50] /* ty=Tensor[(15, 2, 5), uint64] */, dtype="float32") /* ty=Tensor[(15, 2, 5), float32] */;
  %1193 = shape_of(%1191, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1194 = cast(%1191, dtype="float32") /* ty=Tensor[(15, 2, 5), float32] */;
  %1195 = dyn.reshape(%1192, %1193, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1196 = floor_mod(%1194, %1195) /* ty=Tensor[(15, 2, 5), float32] */;
  %1197 = cast(%1196, dtype="float32") /* ty=Tensor[(15, 2, 5), float32] */;
  %1198 = acosh(%1197) /* ty=Tensor[(15, 2, 5), float32] */;
  %1199 = cast(%1198, dtype="float64") /* ty=Tensor[(15, 2, 5), float64] */;
  %1200 = sin(%1199) /* ty=Tensor[(15, 2, 5), float64] */;
  %1201 = cast(meta[relay.Constant][50] /* ty=Tensor[(15, 2, 5), uint64] */, dtype="int8") /* ty=Tensor[(15, 2, 5), int8] */;
  %1202 = shape_of(%1200, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1203 = cast(%1200, dtype="int8") /* ty=Tensor[(15, 2, 5), int8] */;
  %1204 = dyn.reshape(%1201, %1202, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1205 = @func_9981() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(14, 13, 3), float64]) */;
  %1206 = cast(%1198, dtype="bool") /* ty=Tensor[(15, 2, 5), bool] */;
  %1207 = shape_of(%1200, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1208 = cast(%1200, dtype="bool") /* ty=Tensor[(15, 2, 5), bool] */;
  %1209 = dyn.reshape(%1206, %1207, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1210 = %1190.0;
  %1211 = maximum(%1203, %1204) /* ty=Tensor[(15, 2, 5), int8] */;
  %1212 = @func_3120() /* ty=Tensor[(14, 13, 3), float64] */;
  %1213 = %1205.2;
  %1214 = @func_6102() /* ty=Tensor[(14, 13, 3), float64] */;
  %1215 = @func_4540() /* ty=Tensor[(14, 13, 3), bool] */;
  %1216 = @func_15221() /* ty=Tensor[(14, 13, 3), float32] */;
  %1217 = less_equal(%1208, %1209) /* ty=Tensor[(15, 2, 5), bool] */;
  (%1210, %1211, %1212, %1213, %1214, %1215, %1216, %1217)
}

def @func_8406() -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) {
  %1218 = @func_1780() /* ty=(Tensor[(14, 13, 3), float32],) */;
  %1219 = @func_2376() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1220 = %1218.0;
  %1221 = %1219.0;
  (%1220, %1221)
}

def @func_7678(%var_7633: Tensor[(24), int8]) -> (Tensor[(120), int16], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(14, 13, 3), bool]) {
  %1222 = @func_6365() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(5, 3, 8), int16], Tensor[(120), int16]) */;
  %1223 = @func_6817() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1224 = cast(%var_7633, dtype="int8") /* ty=Tensor[(24), int8] */;
  %1225 = reshape(%1224, newshape=[24]) /* ty=Tensor[(24), int8] */;
  %1226 = @func_2285(%1225) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(120), int8], Tensor[(24), int8], Tensor[(120), int8]) */;
  %1227 = @func_1278() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
  %1228 = %1222.3;
  %1229 = @func_5867() /* ty=Tensor[(14, 13, 3), bool] */;
  %1230 = @func_3759() /* ty=Tensor[(14, 13, 3), float64] */;
  %1231 = %1223.0;
  %1232 = %1226.0;
  %1233 = %1227.1;
  (%1228, %1229, %1230, %1231, %1232, %var_7633, %1233)
}

def @func_3333() -> Tensor[(14, 13, 3), int8] {
  @func_3303() /* ty=Tensor[(14, 13, 3), int8] */
}

def @func_1280() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) {
  @func_1278() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */
}

def @func_12657() -> Tensor[(14, 13, 3), bool] {
  %1234 = fn () -> Tensor[(14, 13, 3), bool] {
    @func_11715() /* ty=Tensor[(14, 13, 3), bool] */
  };
  %1234() /* ty=Tensor[(14, 13, 3), bool] */
}

def @func_13362() -> (Tensor[(14, 13, 3), int8],) {
  %1235 = @func_13258() /* ty=(Tensor[(14, 13, 3), int8],) */;
  %1236 = %1235.0;
  (%1236,)
}

def @func_3957() -> (Tensor[(12, 8, 9), float32], Tensor[(12, 8, 9), float64]) {
  %1241 = fn () -> (Tensor[(12, 8, 9), float32], Tensor[(12, 8, 9), float64]) {
    %1237 = cast(meta[relay.Constant][51] /* ty=Tensor[(12, 8, 9), float32] */, dtype="float32") /* ty=Tensor[(12, 8, 9), float32] */;
    %1238 = cast(meta[relay.Constant][51] /* ty=Tensor[(12, 8, 9), float32] */, dtype="float64") /* ty=Tensor[(12, 8, 9), float64] */;
    %1239 = rsqrt(%1237) /* ty=Tensor[(12, 8, 9), float32] */;
    %1240 = atanh(%1238) /* ty=Tensor[(12, 8, 9), float64] */;
    (%1239, %1240)
  };
  %1241() /* ty=(Tensor[(12, 8, 9), float32], Tensor[(12, 8, 9), float64]) */
}

def @func_11915(%var_11911: Tensor[(84), float64]) -> (Tensor[(14, 13, 3), bool], Tensor[(6, 2, 7), float64], Tensor[(84), float64]) {
  %1242 = @func_8820() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), int8]) */;
  %1243 = cast(%var_11911, dtype="float64") /* ty=Tensor[(84), float64] */;
  %1244 = reshape(%1243, newshape=[6, 2, 7]) /* ty=Tensor[(6, 2, 7), float64] */;
  %1245 = %1242.0;
  %1246 = @func_3636(%1244) /* ty=Tensor[(6, 2, 7), float64] */;
  (%1245, %1246, %var_11911)
}

def @func_7826() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  %1253 = fn () -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
    %1247 = @func_26() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %1248 = @func_3281() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %1249 = %1247.0;
    %1250 = @func_2249() /* ty=Tensor[(14, 13, 3), float64] */;
    %1251 = @func_2569() /* ty=Tensor[(14, 13, 3), float64] */;
    %1252 = %1248.0;
    (%1249, %1250, %1251, %1252)
  };
  %1253() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */
}

def @func_8720(%var_8704: Tensor[(13, 5, 10), float64], %var_8709: Tensor[(630), uint32]) -> (Tensor[(13, 5, 10), float64], Tensor[(7, 9, 10), uint32], Tensor[(70), uint32], Tensor[(630), uint32]) {
  %1254 = cast(%var_8704, dtype="float64") /* ty=Tensor[(13, 5, 10), float64] */;
  %1255 = cast(meta[relay.Constant][52] /* ty=Tensor[(70), uint32] */, dtype="uint32") /* ty=Tensor[(70), uint32] */;
  %1256 = cast(%var_8709, dtype="uint32") /* ty=Tensor[(630), uint32] */;
  %1257 = reshape(%1255, newshape=[7, 1, 10]) /* ty=Tensor[(7, 1, 10), uint32] */;
  %1258 = reshape(%1256, newshape=[7, 9, 10]) /* ty=Tensor[(7, 9, 10), uint32] */;
  %1259 = @func_4877(%1257, %1258) /* ty=(Tensor[(7, 9, 10), uint32],) */;
  %1260 = atan(%1254) /* ty=Tensor[(13, 5, 10), float64] */;
  %1261 = %1259.0;
  (%1260, %1261, meta[relay.Constant][52] /* ty=Tensor[(70), uint32] */, %var_8709)
}

def @func_2737(%var_2726: Tensor[(14, 4, 6), float64]) -> (Tensor[(14, 4, 6), float64], Tensor[(14, 4, 6), float64]) {
  %1262 = cast(%var_2726, dtype="float64") /* ty=Tensor[(14, 4, 6), float64] */;
  %1263 = cast(%var_2726, dtype="float64") /* ty=Tensor[(14, 4, 6), float64] */;
  %1264 = sin(%1262) /* ty=Tensor[(14, 4, 6), float64] */;
  %1265 = atanh(%1263) /* ty=Tensor[(14, 4, 6), float64] */;
  (%1264, %1265)
}

def @func_2288(%var_2286: Tensor[(24), int8]) -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(120), int8], Tensor[(24), int8], Tensor[(120), int8]) {
  @func_2285(%var_2286) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(120), int8], Tensor[(24), int8], Tensor[(120), int8]) */
}

def @func_4966() -> (Tensor[(14, 13, 3), float64],) {
  %1268 = fn () -> (Tensor[(14, 13, 3), float64],) {
    %1266 = @func_26() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %1267 = %1266.0;
    (%1267,)
  };
  %1268() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_13142() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  %1273 = fn () -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
    %1269 = @func_7317() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %1270 = @func_10993() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), int8]) */;
    %1271 = %1269.0;
    %1272 = %1270.0;
    (%1271, %1272)
  };
  %1273() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */
}

def @func_2362(%var_2360: Tensor[(24), int8]) -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(24), int8], Tensor[(14, 13, 3), float64]) {
  @func_2359(%var_2360) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(24), int8], Tensor[(14, 13, 3), float64]) */
}

def @func_7887() -> (Tensor[(14, 13, 3), float32],) {
  @func_7885() /* ty=(Tensor[(14, 13, 3), float32],) */
}

def @func_14675() -> (Tensor[(14, 13, 3), float64],) {
  %1275 = fn () -> (Tensor[(14, 13, 3), float64],) {
    %1274 = @func_2249() /* ty=Tensor[(14, 13, 3), float64] */;
    (%1274,)
  };
  %1275() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_13() -> (Tensor[(14, 13, 3), bool],) {
  @func_11() /* ty=(Tensor[(14, 13, 3), bool],) */
}

def @func_7885() -> (Tensor[(14, 13, 3), float32],) {
  %1276 = @func_3980() /* ty=Tensor[(14, 13, 3), float32] */;
  (%1276,)
}

def @func_56() -> Tensor[(14, 13, 3), float64] {
  @func_54() /* ty=Tensor[(14, 13, 3), float64] */
}

def @func_8193() -> (Tensor[(4, 5, 8), float64],) {
  @func_8191() /* ty=(Tensor[(4, 5, 8), float64],) */
}

def @func_3739(%var_3737: Tensor[(120), int16], %var_3738: Tensor[(42, 2), float64]) -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(24), int8], Tensor[(5, 3, 8), bool], Tensor[(6, 2, 7), float64], Tensor[(42, 2), float64]) {
  %1303 = fn (%var_3675: Tensor[(120), int16], %var_3730: Tensor[(42, 2), float64]) -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(24), int8], Tensor[(5, 3, 8), bool], Tensor[(6, 2, 7), float64], Tensor[(42, 2), float64]) {
    %1277 = @func_1278() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
    %1278 = @func_1694() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
    %1279 = @func_2980() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
    %1280 = cast(meta[relay.Constant][53] /* ty=Tensor[(24), int8] */, dtype="int8") /* ty=Tensor[(24), int8] */;
    %1281 = reshape(%1280, newshape=[24]) /* ty=Tensor[(24), int8] */;
    %1282 = @func_1135(%1281) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), bool], Tensor[(24), int8], Tensor[(30, 4), uint32], Tensor[(14, 13, 3), float64]) */;
    %1283 = cast(%var_3675, dtype="int16") /* ty=Tensor[(120), int16] */;
    %1284 = cast(%var_3675, dtype="int16") /* ty=Tensor[(120), int16] */;
    %1285 = reshape(%1283, newshape=[120]) /* ty=Tensor[(120), int16] */;
    %1286 = reshape(%1284, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), int16] */;
    %1287 = @func_2718(%1285, %1286) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(120), int16], Tensor[(5, 3, 8), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(5, 3, 8), uint16]) */;
    %1288 = %1287.2;
    %1289 = cast(%1288, dtype="float64") /* ty=Tensor[(5, 3, 8), float64] */;
    %1290 = exp(%1289) /* ty=Tensor[(5, 3, 8), float64] */;
    %1291 = cast(%var_3675, dtype="bool") /* ty=Tensor[(120), bool] */;
    %1292 = shape_of(%1290, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1293 = cast(%1290, dtype="bool") /* ty=Tensor[(5, 3, 8), bool] */;
    %1294 = dyn.reshape(%1291, %1292, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1295 = cast(%var_3730, dtype="float64") /* ty=Tensor[(42, 2), float64] */;
    %1296 = reshape(%1295, newshape=[6, 2, 7]) /* ty=Tensor[(6, 2, 7), float64] */;
    %1297 = %1277.2;
    %1298 = %1278.1;
    %1299 = %1279.0;
    %1300 = %1282.1;
    %1301 = logical_and(%1293, %1294) /* ty=Tensor[(5, 3, 8), bool] */;
    %1302 = @func_3636(%1296) /* ty=Tensor[(6, 2, 7), float64] */;
    (%1297, %1298, %1299, %1300, meta[relay.Constant][53] /* ty=Tensor[(24), int8] */, %1301, %1302, %var_3730)
  };
  %1303(%var_3737, %var_3738) /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(24), int8], Tensor[(5, 3, 8), bool], Tensor[(6, 2, 7), float64], Tensor[(42, 2), float64]) */
}

def @func_1782() -> (Tensor[(14, 13, 3), float32],) {
  @func_1780() /* ty=(Tensor[(14, 13, 3), float32],) */
}

def @func_9599() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  %1304 = @func_6817() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1305 = @func_2376() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1306 = %1304.0;
  %1307 = %1305.0;
  (%1306, %1307)
}

def @func_1600(%var_1598: Tensor[(120, 1), int16]) -> (Tensor[(14, 13, 3), float64], Tensor[(5, 3, 8), int16], Tensor[(120, 1), int16]) {
  @func_1597(%var_1598) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(5, 3, 8), int16], Tensor[(120, 1), int16]) */
}

def @func_9715() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  %1314 = fn () -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
    %1308 = @func_6332() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64]) */;
    %1309 = @func_2980() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
    %1310 = @func_7019() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %1311 = %1308.1;
    %1312 = %1309.0;
    %1313 = %1310.0;
    (%1311, %1312, %1313)
  };
  %1314() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */
}

def @func_10804() -> (Tensor[(14, 13, 3), float64],) {
  %1315 = @func_8763() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1316 = %1315.0;
  (%1316,)
}

def @func_10279() -> Tensor[(14, 13, 3), float64] {
  @func_10277() /* ty=Tensor[(14, 13, 3), float64] */
}

def @func_11817() -> (Tensor[(14, 13, 3), float64], Tensor[(5, 3, 8), int16], Tensor[(14, 13, 3), float32]) {
  %1323 = fn () -> (Tensor[(14, 13, 3), float64], Tensor[(5, 3, 8), int16], Tensor[(14, 13, 3), float32]) {
    %1317 = @func_917() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %1318 = @func_11603() /* ty=(Tensor[(5, 3, 8), int16], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
    %1319 = @func_3456() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
    %1320 = %1317.0;
    %1321 = %1318.0;
    %1322 = %1319.1;
    (%1320, %1321, %1322)
  };
  %1323() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(5, 3, 8), int16], Tensor[(14, 13, 3), float32]) */
}

def @func_11200() -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) {
  %1324 = @func_541() /* ty=(Tensor[(14, 13, 3), float32],) */;
  %1325 = @func_9599() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
  %1326 = %1324.0;
  %1327 = %1325.1;
  (%1326, %1327)
}

def @func_14226() -> (Tensor[(14, 13, 3), float64],) {
  @func_14224() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_11753() -> Tensor[(14, 13, 3), float64] {
  @func_11751() /* ty=Tensor[(14, 13, 3), float64] */
}

def @func_1254(%var_1252: Tensor[(546), bool]) -> (Tensor[(24), int8], Tensor[(14, 13, 3), int8], Tensor[(546), bool], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) {
  @func_1251(%var_1252) /* ty=(Tensor[(24), int8], Tensor[(14, 13, 3), int8], Tensor[(546), bool], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */
}

def @func_13621() -> (Tensor[(14, 13, 3), float64],) {
  @func_13619() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_14729(%var_14727: Tensor[(70), uint32]) -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32], Tensor[(7, 9, 10), uint32], Tensor[(70), uint32], Tensor[(630), uint32]) {
  @func_14726(%var_14727) /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32], Tensor[(7, 9, 10), uint32], Tensor[(70), uint32], Tensor[(630), uint32]) */
}

def @func_6334() -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64]) {
  @func_6332() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64]) */
}

def @func_12597() -> (Tensor[(14, 13, 3), float64],) {
  @func_12595() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_10197(%var_10196: Tensor[(6, 1, 1), float32]) -> Tensor[(6, 1, 1), float32] {
  %1329 = fn (%var_10189: Tensor[(6, 1, 1), float32]) -> Tensor[(6, 1, 1), float32] {
    %1328 = cast(%var_10189, dtype="float32") /* ty=Tensor[(6, 1, 1), float32] */;
    log10(%1328) /* ty=Tensor[(6, 1, 1), float32] */
  };
  %1329(%var_10196) /* ty=Tensor[(6, 1, 1), float32] */
}

def @func_5318() -> (Tensor[(14, 13, 3), float32],) {
  %1330 = @func_1626() /* ty=Tensor[(14, 13, 3), float32] */;
  (%1330,)
}

def @func_13952() -> Tensor[(14, 13, 3), float64] {
  %1331 = @func_1542() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1331.0
}

def @func_11277(%var_11275: Tensor[(1848), int8]) -> (Tensor[(14, 13, 3), bool], Tensor[(12, 14, 11), float64], Tensor[(1848), int8]) {
  @func_11274(%var_11275) /* ty=(Tensor[(14, 13, 3), bool], Tensor[(12, 14, 11), float64], Tensor[(1848), int8]) */
}

def @func_8691() -> Tensor[(14, 13, 3), float64] {
  %1332 = @func_5232() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1332.0
}

def @func_2571() -> Tensor[(14, 13, 3), float64] {
  @func_2569() /* ty=Tensor[(14, 13, 3), float64] */
}

def @func_161(%var_133: Tensor[(8, 1, 3), int8], %var_134: Tensor[(8, 5, 3), int8]) -> (Tensor[(8, 5, 3), bool], Tensor[(14, 13, 3), bool]) {
  %1333 = cast(%var_133, dtype="bool") /* ty=Tensor[(8, 1, 3), bool] */;
  %1334 = cast(%var_134, dtype="bool") /* ty=Tensor[(8, 5, 3), bool] */;
  %1335 = @func_11() /* ty=(Tensor[(14, 13, 3), bool],) */;
  %1336 = equal(%1333, %1334) /* ty=Tensor[(8, 5, 3), bool] */;
  %1337 = %1335.0;
  (%1336, %1337)
}

def @func_775(%var_773: Tensor[(14, 13, 3), bool]) -> Tensor[(14, 13, 3), int8] {
  @func_772(%var_773) /* ty=Tensor[(14, 13, 3), int8] */
}

def @func_9865(%var_9864: Tensor[(1, 1, 13), float64]) -> (Tensor[(1, 1, 13), float64], Tensor[(14, 13, 3), uint64]) {
  %1341 = fn (%var_9836: Tensor[(1, 1, 13), float64]) -> (Tensor[(1, 1, 13), float64], Tensor[(14, 13, 3), uint64]) {
    %1338 = cast(%var_9836, dtype="float64") /* ty=Tensor[(1, 1, 13), float64] */;
    %1339 = log(%1338) /* ty=Tensor[(1, 1, 13), float64] */;
    %1340 = @func_5061() /* ty=Tensor[(14, 13, 3), uint64] */;
    (%1339, %1340)
  };
  %1341(%var_9864) /* ty=(Tensor[(1, 1, 13), float64], Tensor[(14, 13, 3), uint64]) */
}

def @func_8883() -> Tensor[(14, 13, 3), float64] {
  @func_8881() /* ty=Tensor[(14, 13, 3), float64] */
}

def @func_3456() -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) {
  %1342 = @func_334() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool]) */;
  %1343 = %1342.6;
  %1344 = cast(%1343, dtype="float32") /* ty=Tensor[(14, 13, 3), float32] */;
  %1345 = reshape(%1344, newshape=[14, 13, 3]) /* ty=Tensor[(14, 13, 3), float32] */;
  %1346 = @func_900(%1345) /* ty=Tensor[(14, 13, 3), float32] */;
  (%1343, %1346)
}

def @func_11689() -> (Tensor[(14, 13, 3), float64],) {
  @func_11687() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_5731() -> Tensor[(12, 8, 9), float32] {
  %1347 = @func_3956() /* ty=(Tensor[(12, 8, 9), float32], Tensor[(12, 8, 9), float64]) */;
  %1347.0
}

def @func_5713() -> (Tensor[(14, 13, 3), float32],) {
  %1350 = fn () -> (Tensor[(14, 13, 3), float32],) {
    %1348 = @func_1278() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
    %1349 = %1348.2;
    (%1349,)
  };
  %1350() /* ty=(Tensor[(14, 13, 3), float32],) */
}

def @func_15193() -> Tensor[(14, 13, 3), float64] {
  %1351 = @func_3047() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
  %1351.1
}

def @func_2324() -> (Tensor[(14, 13, 3), float64],) {
  %1352 = @func_917() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1353 = %1352.0;
  (%1353,)
}

def @func_9897() -> Tensor[(24), int8] {
  %1355 = fn () -> Tensor[(24), int8] {
    %1354 = @func_369() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(3, 40), int8], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
    %1354.1
  };
  %1355() /* ty=Tensor[(24), int8] */
}

def @func_16693() -> Tensor[(14, 13, 3), float64] {
  %1356 = fn () -> Tensor[(14, 13, 3), float64] {
    @func_3541() /* ty=Tensor[(14, 13, 3), float64] */
  };
  %1356() /* ty=Tensor[(14, 13, 3), float64] */
}

def @func_4690() -> (Tensor[(14, 13, 3), int8], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  %1361 = fn () -> (Tensor[(14, 13, 3), int8], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
    %1357 = @func_1542() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %1358 = @func_3333() /* ty=Tensor[(14, 13, 3), int8] */;
    %1359 = @func_4442() /* ty=Tensor[(14, 13, 3), float64] */;
    %1360 = %1357.0;
    (%1358, %1359, %1360)
  };
  %1361() /* ty=(Tensor[(14, 13, 3), int8], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */
}

def @func_15270() -> (Tensor[(14, 13, 3), float64],) {
  %1362 = @func_4756() /* ty=Tensor[(14, 13, 3), float64] */;
  (%1362,)
}

def @func_12475() -> (Tensor[(14, 13, 3), float32],) {
  %1363 = @func_6952() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32]) */;
  %1364 = %1363.2;
  (%1364,)
}

def @func_392() -> (Tensor[(14, 13, 3), float64],) {
  @func_390() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_10551(%var_10550: Tensor[(120), int64]) -> (Tensor[(14, 13, 3), bool], Tensor[(120), int64], Tensor[(11, 12, 10), float64]) {
  %1378 = fn (%var_10483: Tensor[(120), int64]) -> (Tensor[(14, 13, 3), bool], Tensor[(120), int64], Tensor[(11, 12, 10), float64]) {
    %1365 = @func_5886() /* ty=(Tensor[(14, 13, 3), bool],) */;
    %1366 = cast(%var_10483, dtype="int64") /* ty=Tensor[(120), int64] */;
    %1367 = reshape(%1366, newshape=[1, 12, 10]) /* ty=Tensor[(1, 12, 10), int64] */;
    %1368 = @func_576(%1367) /* ty=(Tensor[(11, 12, 10), bool], Tensor[(11, 12, 10), float64], Tensor[(3, 40), int8], Tensor[(14, 13, 3), float32]) */;
    %1369 = %1368.0;
    %1370 = cast(%1369, dtype="float64") /* ty=Tensor[(11, 12, 10), float64] */;
    %1371 = sinh(%1370) /* ty=Tensor[(11, 12, 10), float64] */;
    %1372 = cast(meta[relay.Constant][54] /* ty=Tensor[(11, 12, 10), float64] */, dtype="float64") /* ty=Tensor[(11, 12, 10), float64] */;
    %1373 = shape_of(%1371, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1374 = cast(%1371, dtype="float64") /* ty=Tensor[(11, 12, 10), float64] */;
    %1375 = dyn.reshape(%1372, %1373, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1376 = %1365.0;
    %1377 = floor_mod(%1374, %1375) /* ty=Tensor[(11, 12, 10), float64] */;
    (%1376, %var_10483, %1377)
  };
  %1378(%var_10550) /* ty=(Tensor[(14, 13, 3), bool], Tensor[(120), int64], Tensor[(11, 12, 10), float64]) */
}

def @func_16440(%var_16438: Tensor[(12, 14, 3), uint32], %var_16439: Tensor[(12, 14, 3), uint32]) -> (Tensor[(12, 14, 3), uint32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(12, 8, 9), float32], Tensor[(5, 3, 8), int16], Tensor[(60, 2), int16], Tensor[(15, 2, 5), bool], Tensor[(14, 13, 3), float64]) {
  @func_16436(%var_16438, %var_16439) /* ty=(Tensor[(12, 14, 3), uint32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(12, 8, 9), float32], Tensor[(5, 3, 8), int16], Tensor[(60, 2), int16], Tensor[(15, 2, 5), bool], Tensor[(14, 13, 3), float64]) */
}

def @func_900(%var_883: Tensor[(14, 13, 3), float32]) -> Tensor[(14, 13, 3), float32] {
  %1379 = @func_541() /* ty=(Tensor[(14, 13, 3), float32],) */;
  %1380 = %1379.0;
  %1381 = cast(%var_883, dtype="float32") /* ty=Tensor[(14, 13, 3), float32] */;
  %1382 = shape_of(%1380, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1383 = cast(%1380, dtype="float32") /* ty=Tensor[(14, 13, 3), float32] */;
  %1384 = dyn.reshape(%1381, %1382, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  add(%1383, %1384) /* ty=Tensor[(14, 13, 3), float32] */
}

def @func_3882() -> (Tensor[(14, 13, 3), float32],) {
  %1387 = fn () -> (Tensor[(14, 13, 3), float32],) {
    %1385 = @func_3047() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
    %1386 = %1385.0;
    (%1386,)
  };
  %1387() /* ty=(Tensor[(14, 13, 3), float32],) */
}

def @func_15478() -> Tensor[(14, 13, 3), bool] {
  @func_15476() /* ty=Tensor[(14, 13, 3), bool] */
}

def @func_11303() -> (Tensor[(14, 13, 3), float64],) {
  %1388 = @func_8329() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) */;
  %1389 = %1388.0;
  (%1389,)
}

def @func_8039() -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), int8], Tensor[(14, 13, 3), float64]) {
  %1390 = @func_4041() /* ty=(Tensor[(14, 13, 3), bool],) */;
  %1391 = @func_7232() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
  %1392 = @func_4689() /* ty=(Tensor[(14, 13, 3), int8], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
  %1393 = @func_4607() /* ty=(Tensor[(14, 13, 3), uint64], Tensor[(14, 13, 3), int8]) */;
  %1394 = %1390.0;
  %1395 = %1391.0;
  %1396 = %1392.1;
  %1397 = %1393.1;
  %1398 = @func_4756() /* ty=Tensor[(14, 13, 3), float64] */;
  (%1394, %1395, %1396, %1397, %1398)
}

def @func_16436(%var_16365: Tensor[(12, 14, 3), uint32], %var_16366: Tensor[(12, 14, 3), uint32]) -> (Tensor[(12, 14, 3), uint32], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(12, 8, 9), float32], Tensor[(5, 3, 8), int16], Tensor[(60, 2), int16], Tensor[(15, 2, 5), bool], Tensor[(14, 13, 3), float64]) {
  %1399 = cast(%var_16366, dtype="uint32") /* ty=Tensor[(12, 14, 3), uint32] */;
  %1400 = shape_of(%var_16365, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1401 = cast(%var_16365, dtype="uint32") /* ty=Tensor[(12, 14, 3), uint32] */;
  %1402 = dyn.reshape(%1399, %1400, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1403 = @func_10640() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1404 = @func_13619() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1405 = @func_3956() /* ty=(Tensor[(12, 8, 9), float32], Tensor[(12, 8, 9), float64]) */;
  %1406 = cast(meta[relay.Constant][55] /* ty=Tensor[(60, 2), int16] */, dtype="int16") /* ty=Tensor[(60, 2), int16] */;
  %1407 = cast(meta[relay.Constant][55] /* ty=Tensor[(60, 2), int16] */, dtype="int16") /* ty=Tensor[(60, 2), int16] */;
  %1408 = reshape(%1406, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), int16] */;
  %1409 = reshape(%1407, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), int16] */;
  %1410 = @func_15443() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(15, 2, 5), int8], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32], Tensor[(15, 2, 5), bool]) */;
  %1411 = @func_15443() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(15, 2, 5), int8], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32], Tensor[(15, 2, 5), bool]) */;
  %1412 = right_shift(%1401, %1402) /* ty=Tensor[(12, 14, 3), uint32] */;
  %1413 = %1403.0;
  %1414 = @func_13074() /* ty=Tensor[(14, 13, 3), float64] */;
  %1415 = %1404.0;
  %1416 = %1405.0;
  %1417 = @func_465(%1408, %1409) /* ty=Tensor[(5, 3, 8), int16] */;
  %1418 = %1410.7;
  %1419 = %1411.4;
  (%1412, %1413, %1414, %1415, %1416, %1417, meta[relay.Constant][55] /* ty=Tensor[(60, 2), int16] */, %1418, %1419)
}

def @func_13074() -> Tensor[(14, 13, 3), float64] {
  %1420 = @func_6897() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1420.0
}

def @func_4041() -> (Tensor[(14, 13, 3), bool],) {
  %1421 = @func_1307() /* ty=Tensor[(14, 13, 3), bool] */;
  (%1421,)
}

def @func_2326() -> (Tensor[(14, 13, 3), float64],) {
  @func_2324() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_5211() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), bool]) {
  %1422 = @func_2324() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1423 = %1422.0;
  %1424 = cast(%1423, dtype="float64") /* ty=Tensor[(14, 13, 3), float64] */;
  %1425 = reshape(%1424, newshape=[14, 13, 3]) /* ty=Tensor[(14, 13, 3), float64] */;
  %1426 = @func_3236(%1425) /* ty=(Tensor[(14, 13, 3), uint16], Tensor[(14, 13, 3), bool]) */;
  %1427 = @func_3980() /* ty=Tensor[(14, 13, 3), float32] */;
  %1428 = %1426.1;
  (%1423, %1427, %1428)
}

def @func_11305() -> (Tensor[(14, 13, 3), float64],) {
  @func_11303() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_8330() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) {
  %1433 = fn () -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) {
    %1429 = @func_829() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
    %1430 = @func_1723() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) */;
    %1431 = %1429.0;
    %1432 = %1430.1;
    (%1431, %1432)
  };
  %1433() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool]) */
}

def @func_1780() -> (Tensor[(14, 13, 3), float32],) {
  %1434 = @func_1626() /* ty=Tensor[(14, 13, 3), float32] */;
  (%1434,)
}

def @func_10418() -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) {
  %1438 = fn () -> (Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) {
    %1435 = @func_5712() /* ty=(Tensor[(14, 13, 3), float32],) */;
    %1436 = %1435.0;
    %1437 = @func_3541() /* ty=Tensor[(14, 13, 3), float64] */;
    (%1436, %1437)
  };
  %1438() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */
}

def @func_745(%var_711: Tensor[(14, 13, 3), float64]) -> (Tensor[(14, 13, 3), int16], Tensor[(14, 13, 3), float64]) {
  %1439 = @func_390() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1440 = %1439.0;
  %1441 = cast(%var_711, dtype="int16") /* ty=Tensor[(14, 13, 3), int16] */;
  %1442 = shape_of(%1440, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1443 = cast(%1440, dtype="int16") /* ty=Tensor[(14, 13, 3), int16] */;
  %1444 = dyn.reshape(%1441, %1442, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1445 = cast(%1440, dtype="float64") /* ty=Tensor[(14, 13, 3), float64] */;
  %1446 = shape_of(%var_711, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1447 = cast(%var_711, dtype="float64") /* ty=Tensor[(14, 13, 3), float64] */;
  %1448 = dyn.reshape(%1445, %1446, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1449 = maximum(%1447, %1448) /* ty=Tensor[(14, 13, 3), float64] */;
  %1450 = cast(%1449, dtype="float64") /* ty=Tensor[(14, 13, 3), float64] */;
  %1451 = right_shift(%1443, %1444) /* ty=Tensor[(14, 13, 3), int16] */;
  %1452 = cos(%1450) /* ty=Tensor[(14, 13, 3), float64] */;
  (%1451, %1452)
}

def @func_10068() -> (Tensor[(14, 13, 3), float64],) {
  %1453 = @func_9625() /* ty=Tensor[(14, 13, 3), float64] */;
  (%1453,)
}

def @func_8360(%var_8358: Tensor[(12, 14, 11), int8], %var_8359: Tensor[(12, 14, 11), int8]) -> (Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), float64]) {
  @func_8356(%var_8358, %var_8359) /* ty=(Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), float64]) */
}

def @func_15872() -> (Tensor[(14, 13, 3), bool],) {
  %1456 = fn () -> (Tensor[(14, 13, 3), bool],) {
    %1454 = @func_13476() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64]) */;
    %1455 = %1454.0;
    (%1455,)
  };
  %1456() /* ty=(Tensor[(14, 13, 3), bool],) */
}

def @func_11084() -> Tensor[(14, 13, 3), bool] {
  @func_11082() /* ty=Tensor[(14, 13, 3), bool] */
}

def @func_16665() -> (Tensor[(14, 13, 3), float64], Tensor[(16, 16, 9), float32], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), bool]) {
  %1465 = fn () -> (Tensor[(14, 13, 3), float64], Tensor[(16, 16, 9), float32], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), bool]) {
    %1457 = @func_15934() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) */;
    %1458 = @func_14453() /* ty=(Tensor[(16, 16, 9), float32], Tensor[(84), float64], Tensor[(84), float64], Tensor[(14, 13, 3), float64]) */;
    %1459 = @func_8182() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float32]) */;
    %1460 = @func_13296() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), bool]) */;
    %1461 = %1457.0;
    %1462 = %1458.0;
    %1463 = %1459.2;
    %1464 = %1460.0;
    (%1461, %1462, %1463, %1464)
  };
  %1465() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(16, 16, 9), float32], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), bool]) */
}

def @func_2177(%var_2175: Tensor[(12, 2), int8], %var_2176: Tensor[(120), int8]) -> (Tensor[(14, 13, 3), float64], Tensor[(8, 5, 3), bool], Tensor[(12, 2), int8], Tensor[(120), int8]) {
  @func_2173(%var_2175, %var_2176) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(8, 5, 3), bool], Tensor[(12, 2), int8], Tensor[(120), int8]) */
}

def @func_3458() -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) {
  @func_3456() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */
}

def @func_2173(%var_2156: Tensor[(12, 2), int8], %var_2157: Tensor[(120), int8]) -> (Tensor[(14, 13, 3), float64], Tensor[(8, 5, 3), bool], Tensor[(12, 2), int8], Tensor[(120), int8]) {
  %1466 = cast(%var_2156, dtype="int8") /* ty=Tensor[(12, 2), int8] */;
  %1467 = cast(%var_2157, dtype="int8") /* ty=Tensor[(120), int8] */;
  %1468 = reshape(%1466, newshape=[8, 1, 3]) /* ty=Tensor[(8, 1, 3), int8] */;
  %1469 = reshape(%1467, newshape=[8, 5, 3]) /* ty=Tensor[(8, 5, 3), int8] */;
  %1470 = @func_161(%1468, %1469) /* ty=(Tensor[(8, 5, 3), bool], Tensor[(14, 13, 3), bool]) */;
  %1471 = @func_54() /* ty=Tensor[(14, 13, 3), float64] */;
  %1472 = %1470.0;
  (%1471, %1472, %var_2156, %var_2157)
}

def @func_3170(%var_3168: float64, %var_3169: Tensor[(10, 1, 12), float64]) -> (Tensor[(10, ?, 12), uint64], Tensor[(14, 13, 3), float64]) {
  %1483 = fn (%var_3146: float64, %var_3147: Tensor[(10, 1, 12), float64]) -> (Tensor[(10, ?, 12), uint64], Tensor[(14, 13, 3), float64]) {
    %1473 = cast(%var_3146, dtype="float64") /* ty=float64 */;
    %1474 = cast(%var_3147, dtype="float64") /* ty=Tensor[(10, 1, 12), float64] */;
    %1475 = multiply(%1473, %1474) /* ty=Tensor[(10, 1, 12), float64] */;
    %1476 = cast(%var_3147, dtype="uint64") /* ty=Tensor[(10, 1, 12), uint64] */;
    %1477 = shape_of(%1475, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1478 = cast(%1475, dtype="uint64") /* ty=Tensor[(10, 1, 12), uint64] */;
    %1479 = dyn.reshape(%1476, %1477, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %1480 = @func_917() /* ty=(Tensor[(14, 13, 3), float64],) */;
    %1481 = add(%1478, %1479) /* ty=Tensor[(10, ?, 12), uint64] */;
    %1482 = %1480.0;
    (%1481, %1482)
  };
  %1483(%var_3168, %var_3169) /* ty=(Tensor[(10, ?, 12), uint64], Tensor[(14, 13, 3), float64]) */
}

def @func_8117() -> (Tensor[(14, 13, 3), float32], Tensor[(120), int16], Tensor[(360), uint16]) {
  %1492 = fn () -> (Tensor[(14, 13, 3), float32], Tensor[(120), int16], Tensor[(360), uint16]) {
    %1484 = @func_7118() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32]) */;
    %1485 = cast(meta[relay.Constant][56] /* ty=Tensor[(360), uint16] */, dtype="uint16") /* ty=Tensor[(360), uint16] */;
    %1486 = cast(meta[relay.Constant][56] /* ty=Tensor[(360), uint16] */, dtype="uint16") /* ty=Tensor[(360), uint16] */;
    %1487 = reshape(%1485, newshape=[12, 2, 15]) /* ty=Tensor[(12, 2, 15), uint16] */;
    %1488 = reshape(%1486, newshape=[12, 2, 15]) /* ty=Tensor[(12, 2, 15), uint16] */;
    %1489 = @func_2057(%1487, %1488) /* ty=(Tensor[(12, 2, 15), uint16], Tensor[(12, 2, 15), float32], Tensor[(5, 3, 8), int16], Tensor[(120), int16]) */;
    %1490 = %1484.1;
    %1491 = %1489.3;
    (%1490, %1491, meta[relay.Constant][56] /* ty=Tensor[(360), uint16] */)
  };
  %1492() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(120), int16], Tensor[(360), uint16]) */
}

def @func_10017() -> (Tensor[(14, 13, 3), uint64], Tensor[(14, 13, 3), bool], Tensor[(24), int8], Tensor[(24), int8], Tensor[(120), int8]) {
  %1501 = fn () -> (Tensor[(14, 13, 3), uint64], Tensor[(14, 13, 3), bool], Tensor[(24), int8], Tensor[(24), int8], Tensor[(120), int8]) {
    %1493 = cast(meta[relay.Constant][57] /* ty=Tensor[(24), int8] */, dtype="int8") /* ty=Tensor[(24), int8] */;
    %1494 = cast(meta[relay.Constant][58] /* ty=Tensor[(120), int8] */, dtype="int8") /* ty=Tensor[(120), int8] */;
    %1495 = reshape(%1493, newshape=[24]) /* ty=Tensor[(24), int8] */;
    %1496 = reshape(%1494, newshape=[60, 2]) /* ty=Tensor[(60, 2), int8] */;
    %1497 = @func_6495(%1495, %1496) /* ty=(Tensor[(14, 13, 3), bool], Tensor[(15, 2, 5), uint64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64], Tensor[(24), int8], Tensor[(60, 2), int8]) */;
    %1498 = @func_5061() /* ty=Tensor[(14, 13, 3), uint64] */;
    %1499 = @func_4540() /* ty=Tensor[(14, 13, 3), bool] */;
    %1500 = %1497.5;
    (%1498, %1499, %1500, meta[relay.Constant][57] /* ty=Tensor[(24), int8] */, meta[relay.Constant][58] /* ty=Tensor[(120), int8] */)
  };
  %1501() /* ty=(Tensor[(14, 13, 3), uint64], Tensor[(14, 13, 3), bool], Tensor[(24), int8], Tensor[(24), int8], Tensor[(120), int8]) */
}

def @func_11462() -> Tensor[(14, 13, 3), float32] {
  @func_1626() /* ty=Tensor[(14, 13, 3), float32] */
}

def @func_17241() -> (Tensor[(14, 13, 3), float64],) {
  @func_17239() /* ty=(Tensor[(14, 13, 3), float64],) */
}

def @func_2959(%var_2957: Tensor[(14, 13, 3), float64]) -> (Tensor[(14, 13, 3), int32], Tensor[(14, 13, 3), float64]) {
  @func_2956(%var_2957) /* ty=(Tensor[(14, 13, 3), int32], Tensor[(14, 13, 3), float64]) */
}

def @func_16873() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(30, 4), uint32], Tensor[(1, 24), int8]) {
  %1511 = fn () -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(30, 4), uint32], Tensor[(1, 24), int8]) {
    %1502 = @func_15007() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32]) */;
    %1503 = @func_1694() /* ty=(Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), float64]) */;
    %1504 = cast(meta[relay.Constant][59] /* ty=Tensor[(1, 24), int8] */, dtype="int8") /* ty=Tensor[(1, 24), int8] */;
    %1505 = reshape(%1504, newshape=[24]) /* ty=Tensor[(24), int8] */;
    %1506 = @func_1135(%1505) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float32], Tensor[(14, 13, 3), bool], Tensor[(24), int8], Tensor[(30, 4), uint32], Tensor[(14, 13, 3), float64]) */;
    %1507 = @func_6013() /* ty=Tensor[(14, 13, 3), float64] */;
    %1508 = %1502.0;
    %1509 = %1503.1;
    %1510 = %1506.4;
    (%1507, %1508, %1509, %1510, meta[relay.Constant][59] /* ty=Tensor[(1, 24), int8] */)
  };
  %1511() /* ty=(Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(30, 4), uint32], Tensor[(1, 24), int8]) */
}

def @func_4219(%var_4215: Tensor[(120), int16]) -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64], Tensor[(120), int16]) {
  %1512 = @func_3281() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1513 = @func_4137() /* ty=(Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float32]) */;
  %1514 = @func_2521() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1515 = cast(%var_4215, dtype="int16") /* ty=Tensor[(120), int16] */;
  %1516 = reshape(%1515, newshape=[120, 1]) /* ty=Tensor[(120, 1), int16] */;
  %1517 = @func_1597(%1516) /* ty=(Tensor[(14, 13, 3), float64], Tensor[(5, 3, 8), int16], Tensor[(120, 1), int16]) */;
  %1518 = %1512.0;
  %1519 = %1513.0;
  %1520 = %1514.0;
  %1521 = %1517.0;
  (%1518, %1519, %1520, %1521, %var_4215)
}

def @func_10363(%var_10361: Tensor[(12, 1, 14), uint16], %var_10362: Tensor[(12, 9, 14), uint16]) -> (Tensor[(12, 9, 14), bool],) {
  %1525 = fn (%var_10346: Tensor[(12, 1, 14), uint16], %var_10347: Tensor[(12, 9, 14), uint16]) -> (Tensor[(12, 9, 14), bool],) {
    %1522 = cast(%var_10346, dtype="bool") /* ty=Tensor[(12, 1, 14), bool] */;
    %1523 = cast(%var_10347, dtype="bool") /* ty=Tensor[(12, 9, 14), bool] */;
    %1524 = equal(%1522, %1523) /* ty=Tensor[(12, 9, 14), bool] */;
    (%1524,)
  };
  %1525(%var_10361, %var_10362) /* ty=(Tensor[(12, 9, 14), bool],) */
}

def @func_12121() -> (Tensor[(14, 13, 3), float64], Tensor[(14, 13, 3), float64]) {
  %1526 = @func_11477() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1527 = @func_26() /* ty=(Tensor[(14, 13, 3), float64],) */;
  %1528 = %1526.0;
  %1529 = %1527.0;
  (%1528, %1529)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen647/build/output.py", line 5782, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  98: TVMFuncCall
  97: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  96: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  95: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  94: tvm::transform::Pass::operator()(tvm::IRModule) const
  93: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  92: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  91: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  90: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  89: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  88: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  87: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  86: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  85: tvm::relay::DynamicToStaticMutator::DispatchVisitExpr(tvm::RelayExpr const&)
  84: _ZN3tvm5relay1
  83: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  82: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  81: _ZZN3tvm5relay11ExprFunc
  80: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  79: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  78: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  77: tvm::relay::DynamicToStaticMutator::DispatchVisitExpr(tvm::RelayExpr const&)
  76: _ZN3tvm5relay1
  75: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  74: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  73: _ZZN3tvm5relay11ExprFunc
  72: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  71: tvm::relay::DynamicToStaticMutator::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  70: std::_Function_handler<tvm::RelayExpr (tvm::relay::CallNode const*), tvm::relay::DynamicToStaticMutator::DynamicToStaticMutator(tvm::IRModule, tvm::relay::Function)::{lambda(tvm::relay::CallNode const*)#1}>::_M_invoke(std::_Any_data const&, tvm::relay::CallNode const*&&)
  69: tvm::relay::DynamicToStaticMutator::PrepareArgs(tvm::relay::CallNode const*)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [13:44:50] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


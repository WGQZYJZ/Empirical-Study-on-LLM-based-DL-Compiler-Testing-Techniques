==========mod==========
#[version = "0.0.5"]
def @func_4481(%var_4445: Tensor[(9, 3, 16), int16]) -> (Tensor[(9, 3, 16), bool], Tensor[(14, 16, 11), float64]) {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(9, 3, 16), int16] */, dtype="bool") /* ty=Tensor[(9, 3, 16), bool] */;
  %1 = shape_of(%var_4445, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_4445, dtype="bool") /* ty=Tensor[(9, 3, 16), bool] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %4 = @func_3262() /* ty=(Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
  %5 = not_equal(%2, %3) /* ty=Tensor[(9, 3, 16), bool] */;
  %6 = %4.0;
  (%5, %6)
}

def @func_11959() -> Tensor[(?, 16, 11), int32] {
  %7 = @func_6487() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(15, 1), float32], float32, Tensor[(15), float32]) */;
  %7.0
}

def @func_9734(%var_9725: Tensor[(7, 12, 16), uint16], %var_9726: Tensor[(7, 12, 16), uint16]) -> (Tensor[(7, 12, 16), uint16],) {
  %8 = cast(%var_9726, dtype="uint16") /* ty=Tensor[(7, 12, 16), uint16] */;
  %9 = shape_of(%var_9725, dtype="int32") /* ty=Tensor[(3), int32] */;
  %10 = cast(%var_9725, dtype="uint16") /* ty=Tensor[(7, 12, 16), uint16] */;
  %11 = dyn.reshape(%8, %9, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %12 = right_shift(%10, %11) /* ty=Tensor[(7, 12, 16), uint16] */;
  (%12,)
}

def @func_5650() -> (Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), float64], Tensor[(150), float32], Tensor[(?, 16, 11), bool]) {
  %13 = cast(meta[relay.Constant][1] /* ty=Tensor[(150), float32] */, dtype="float32") /* ty=Tensor[(150), float32] */;
  %14 = reshape(%13, newshape=[15, 10, 1]) /* ty=Tensor[(15, 10, 1), float32] */;
  %15 = @func_3499(%14) /* ty=(Tensor[(15, 10, 1), float32], Tensor[(?, 16, 11), float64]) */;
  %16 = @func_4427() /* ty=Tensor[(?, 16, 11), bool] */;
  %17 = %15.1;
  %18 = @func_4427() /* ty=Tensor[(?, 16, 11), bool] */;
  (%16, %17, meta[relay.Constant][1] /* ty=Tensor[(150), float32] */, %18)
}

def @func_5969(%var_5940: Tensor[(1, 16, 11), bool], %var_5953: Tensor[(5, 16, 11), bool], %var_5965: Tensor[(1, 1014), bool]) -> (Tensor[(?, 16, 11), int16], Tensor[(5, 16, 11), uint8], Tensor[(?, 16, 11), float32], Tensor[(1, 1014), bool]) {
  %19 = @func_4427() /* ty=Tensor[(?, 16, 11), bool] */;
  %20 = cast(%var_5940, dtype="int16") /* ty=Tensor[(1, 16, 11), int16] */;
  %21 = shape_of(%19, dtype="int32") /* ty=Tensor[(3), int32] */;
  %22 = cast(%19, dtype="int16") /* ty=Tensor[(?, 16, 11), int16] */;
  %23 = dyn.reshape(%20, %21, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %24 = cast(%var_5940, dtype="uint8") /* ty=Tensor[(1, 16, 11), uint8] */;
  %25 = cast(%var_5953, dtype="uint8") /* ty=Tensor[(5, 16, 11), uint8] */;
  %26 = cast(%var_5965, dtype="bool") /* ty=Tensor[(1, 1014), bool] */;
  %27 = reshape(%26, newshape=[6, 13, 13]) /* ty=Tensor[(6, 13, 13), bool] */;
  %28 = @func_3961(%27) /* ty=(Tensor[(6, 13, 13), bool], Tensor[(?, 16, 11), float32]) */;
  %29 = bitwise_or(%22, %23) /* ty=Tensor[(?, 16, 11), int16] */;
  %30 = right_shift(%24, %25) /* ty=Tensor[(5, 16, 11), uint8] */;
  %31 = %28.1;
  (%29, %30, %31, %var_5965)
}

def @func_10392() -> (Tensor[(?, 16, 11), int8], Tensor[(270), float64], Tensor[(270), float64]) {
  %32 = @func_9390() /* ty=(Tensor[(?, 16, 11), int8],) */;
  %33 = cast(meta[relay.Constant][2] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
  %34 = reshape(%33, newshape=[270]) /* ty=Tensor[(270), float64] */;
  %35 = @func_897(%34) /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(15, 3, 6), float64], Tensor[(270), float64]) */;
  %36 = %32.0;
  %37 = %35.3;
  (%36, %37, meta[relay.Constant][2] /* ty=Tensor[(270), float64] */)
}

def @func_1211() -> Tensor[(?, 16, 11), int32] {
  %38 = @func_704() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %38.0
}

def @func_1651() -> (Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64]) {
  %39 = @func_1549() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(270), float64], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), uint64], Tensor[(?, 16, 11), float32]) */;
  %40 = %39.2;
  %41 = cast(%40, dtype="float32") /* ty=Tensor[(?, 16, 11), float32] */;
  %42 = cast(%40, dtype="float32") /* ty=Tensor[(?, 16, 11), float32] */;
  %43 = cast(%40, dtype="float64") /* ty=Tensor[(?, 16, 11), float64] */;
  %44 = exp(%41) /* ty=Tensor[(?, 16, 11), float32] */;
  %45 = acosh(%42) /* ty=Tensor[(?, 16, 11), float32] */;
  %46 = cosh(%43) /* ty=Tensor[(?, 16, 11), float64] */;
  (%44, %45, %46)
}

def @func_3879() -> Tensor[(?, 16, 11), bool] {
  @func_3623() /* ty=Tensor[(?, 16, 11), bool] */
}

def @func_897(%var_878: Tensor[(270), float64]) -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(15, 3, 6), float64], Tensor[(270), float64]) {
  %47 = @func_621() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %48 = @func_584() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %49 = cast(%var_878, dtype="float64") /* ty=Tensor[(270), float64] */;
  %50 = cast(%var_878, dtype="float64") /* ty=Tensor[(270), float64] */;
  %51 = reshape(%49, newshape=[15, 3, 6]) /* ty=Tensor[(15, 3, 6), float64] */;
  %52 = reshape(%50, newshape=[15, 3, 6]) /* ty=Tensor[(15, 3, 6), float64] */;
  %53 = @func_447(%51, %52) /* ty=(Tensor[(15, 3, 6), float64], Tensor[(15, 3, 6), float64]) */;
  %54 = %47.0;
  %55 = %48.0;
  %56 = %53.1;
  (%54, %55, %56, %var_878)
}

def @func_7848() -> (Tensor[(?, 16, 11), int32],) {
  %57 = @func_3006() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */;
  %58 = %57.2;
  (%58,)
}

def @func_4910() -> (Tensor[(1, 5, 2), float64], Tensor[(?, 16, 11), int32]) {
  %59 = cast(-9.87278f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %60 = cast(meta[relay.Constant][3] /* ty=Tensor[(1, 5, 2), float64] */, dtype="float64") /* ty=Tensor[(1, 5, 2), float64] */;
  %61 = @func_1561() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %62 = mod(%59, %60) /* ty=Tensor[(1, 5, 2), float64] */;
  %63 = %61.0;
  (%62, %63)
}

def @func_12161() -> Tensor[(2, 1, 8), float64] {
  %64 = cast(meta[relay.Constant][4] /* ty=Tensor[(2, 1, 8), float64] */, dtype="float64") /* ty=Tensor[(2, 1, 8), float64] */;
  sinh(%64) /* ty=Tensor[(2, 1, 8), float64] */
}

def @func_8561() -> Tensor[(?, 16, 11), int32] {
  %65 = @func_4545() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %65.0
}

def @func_10312() -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32]) {
  %66 = @func_5340() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(2464), float64], Tensor[(?, 16, 11), int32]) */;
  %67 = @func_1549() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(270), float64], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), uint64], Tensor[(?, 16, 11), float32]) */;
  %68 = %66.3;
  %69 = %67.2;
  (%68, %69)
}

def @func_7949() -> Tensor[(15), float32] {
  @func_6770() /* ty=Tensor[(15), float32] */
}

def @func_6182(%var_6176: Tensor[(432), int16]) -> (Tensor[(14, 16, 11), uint64], Tensor[(14, 16, 11), float64], Tensor[(432), int16], Tensor[(90, 3), float64]) {
  %70 = @func_854() /* ty=(Tensor[(?, 16, 11), float32],) */;
  %71 = %70.0;
  %72 = cast(%71, dtype="uint64") /* ty=Tensor[(?, 16, 11), uint64] */;
  %73 = cast(meta[relay.Constant][5] /* ty=Tensor[(14, 16, 11), float32] */, dtype="uint64") /* ty=Tensor[(14, 16, 11), uint64] */;
  %74 = cast(%var_6176, dtype="int16") /* ty=Tensor[(432), int16] */;
  %75 = reshape(%74, newshape=[9, 3, 16]) /* ty=Tensor[(9, 3, 16), int16] */;
  %76 = @func_4481(%75) /* ty=(Tensor[(9, 3, 16), bool], Tensor[(14, 16, 11), float64]) */;
  %77 = @func_4103() /* ty=(Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), int32], Tensor[(90, 3), float64], Tensor[(?, 16, 11), int32]) */;
  %78 = right_shift(%72, %73) /* ty=Tensor[(14, 16, 11), uint64] */;
  %79 = %76.1;
  %80 = %77.3;
  (%78, %79, %var_6176, %80)
}

def @func_1339() -> (Tensor[(?, 16, 11), float64],) {
  %81 = @func_964() /* ty=Tensor[(?, 16, 11), float64] */;
  (%81,)
}

def @func_4256() -> Tensor[(?, 16, 11), int32] {
  %82 = @func_1243() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) */;
  %82.0
}

def @func_5236() -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32]) {
  %83 = @func_3006() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */;
  %84 = @func_4256() /* ty=Tensor[(?, 16, 11), int32] */;
  %85 = %83.1;
  (%84, %85)
}

def @func_7823() -> (Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), int32]) {
  %86 = @func_6328() /* ty=(Tensor[(?, 16, 11), int8],) */;
  %87 = @func_4103() /* ty=(Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), int32], Tensor[(90, 3), float64], Tensor[(?, 16, 11), int32]) */;
  %88 = %86.0;
  %89 = %87.4;
  (%88, %89)
}

def @func_11928(%var_11921: Tensor[(4, 8, 5), float32]) -> (Tensor[(4, 8, 5), float32], Tensor[(?, 16, 11), int32]) {
  %90 = cast(%var_11921, dtype="float32") /* ty=Tensor[(4, 8, 5), float32] */;
  %91 = @func_3262() /* ty=(Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
  %92 = sigmoid(%90) /* ty=Tensor[(4, 8, 5), float32] */;
  %93 = %91.1;
  (%92, %93)
}

def @func_6272() -> (Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32], Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32]) {
  %94 = @func_4703() /* ty=(Tensor[(?, 16, 11), float64],) */;
  %95 = @func_5067() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */;
  %96 = @func_4871() /* ty=(Tensor[(?, 16, 11), float32],) */;
  %97 = @func_2113() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %98 = @func_4103() /* ty=(Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), int32], Tensor[(90, 3), float64], Tensor[(?, 16, 11), int32]) */;
  %99 = @func_747() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %100 = %94.0;
  %101 = %95.0;
  %102 = %96.0;
  %103 = %97.0;
  %104 = @func_5258() /* ty=Tensor[(14, 16, 11), float64] */;
  %105 = %98.4;
  %106 = %99.0;
  (%100, %101, %102, %103, %104, %105, %106)
}

def @func_11330() -> (Tensor[(2, 72), float64],) {
  %107 = @func_9715() /* ty=(Tensor[(?, 16, 11), float64], Tensor[(8, 9, 2), bool], Tensor[(2, 72), bool], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) */;
  %108 = %107.2;
  %109 = cast(%108, dtype="float64") /* ty=Tensor[(2, 72), float64] */;
  %110 = asinh(%109) /* ty=Tensor[(2, 72), float64] */;
  (%110,)
}

def @func_12039() -> Tensor[(?, 16, 11), int32] {
  @func_1211() /* ty=Tensor[(?, 16, 11), int32] */
}

def @func_8350() -> (Tensor[(?, 16, 11), int32],) {
  %111 = @func_7115() /* ty=(Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
  %112 = %111.1;
  (%112,)
}

def @func_2450() -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(2250), float64], Tensor[(?, 16, 11), float64]) {
  %113 = cast(meta[relay.Constant][6] /* ty=Tensor[(2250), float64] */, dtype="float64") /* ty=Tensor[(2250), float64] */;
  %114 = reshape(%113, newshape=[15, 10, 15]) /* ty=Tensor[(15, 10, 15), float64] */;
  %115 = @func_1610(%114) /* ty=(Tensor[(15, 10, 15), bool], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
  %116 = @func_1713() /* ty=(Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), float64]) */;
  %117 = @func_1211() /* ty=Tensor[(?, 16, 11), int32] */;
  %118 = %115.2;
  %119 = %116.1;
  (%117, %118, meta[relay.Constant][6] /* ty=Tensor[(2250), float64] */, %119)
}

def @func_10002() -> (Tensor[(?, 16, 11), int32], Tensor[(12, 16, 11), float32], Tensor[(?, 13, 12), uint64]) {
  %120 = @func_3405() /* ty=(Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
  %121 = @func_5918() /* ty=(Tensor[(12, 16, 11), float32], Tensor[(6, 13, 13), bool], Tensor[(150), float32], Tensor[(4, 60), float32]) */;
  %122 = %120.1;
  %123 = %121.0;
  %124 = @func_2969() /* ty=Tensor[(?, 13, 12), uint64] */;
  (%122, %123, %124)
}

def @func_6364(%var_6345: Tensor[(1980), uint8]) -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int8], Tensor[(1980), float32]) {
  %125 = @func_2450() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(2250), float64], Tensor[(?, 16, 11), float64]) */;
  %126 = cast(%var_6345, dtype="uint8") /* ty=Tensor[(1980), uint8] */;
  %127 = reshape(%126, newshape=[12, 15, 11]) /* ty=Tensor[(12, 15, 11), uint8] */;
  %128 = @func_2326(%127) /* ty=(Tensor[(12, 15, 11), uint8],) */;
  %129 = %128.0;
  %130 = cast(%129, dtype="float32") /* ty=Tensor[(12, 15, 11), float32] */;
  %131 = shape_of(%var_6345, dtype="int32") /* ty=Tensor[(1), int32] */;
  %132 = cast(%var_6345, dtype="float32") /* ty=Tensor[(1980), float32] */;
  %133 = dyn.reshape(%130, %131, newshape=[]) /* ty=Tensor[(?), float32] */;
  %134 = %125.1;
  %135 = @func_3941() /* ty=Tensor[(?, 16, 11), int8] */;
  %136 = mod(%132, %133) /* ty=Tensor[(1980), float32] */;
  (%134, %135, %136)
}

def @func_704() -> (Tensor[(?, 16, 11), int32],) {
  %137 = @func_584() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %138 = %137.0;
  (%138,)
}

def @func_9109() -> (Tensor[(?, 16, 11), int32],) {
  %139 = @func_4545() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %140 = %139.0;
  (%140,)
}

def @func_5218(%var_5206: Tensor[(3, 8, 13), float64]) -> (Tensor[(3, 8, 13), bool],) {
  %141 = cast(%var_5206, dtype="float64") /* ty=Tensor[(3, 8, 13), float64] */;
  %142 = log10(%141) /* ty=Tensor[(3, 8, 13), float64] */;
  %143 = cast(%142, dtype="bool") /* ty=Tensor[(3, 8, 13), bool] */;
  %144 = shape_of(%var_5206, dtype="int32") /* ty=Tensor[(3), int32] */;
  %145 = cast(%var_5206, dtype="bool") /* ty=Tensor[(3, 8, 13), bool] */;
  %146 = dyn.reshape(%143, %144, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %147 = logical_and(%145, %146) /* ty=Tensor[(3, 8, 13), bool] */;
  (%147,)
}

def @func_2614() -> (Tensor[(?, 16, 11), float32],) {
  %148 = @func_1651() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64]) */;
  %149 = %148.0;
  (%149,)
}

def @func_5569(%var_5564: float32, %var_5565: Tensor[(15, 1), float32]) -> (Tensor[(15, 1), float32],) {
  %150 = cast(%var_5564, dtype="float32") /* ty=float32 */;
  %151 = cast(%var_5565, dtype="float32") /* ty=Tensor[(15, 1), float32] */;
  %152 = floor_divide(%150, %151) /* ty=Tensor[(15, 1), float32] */;
  (%152,)
}

def @func_10051() -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32]) {
  %153 = @func_1243() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) */;
  %154 = @func_8350() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %155 = %153.0;
  %156 = %154.0;
  (%155, %156)
}

def @func_3405() -> (Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), int32]) {
  %157 = @func_1713() /* ty=(Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), float64]) */;
  %158 = %157.0;
  %159 = @func_1211() /* ty=Tensor[(?, 16, 11), int32] */;
  (%158, %159)
}

def @func_6770() -> Tensor[(15), float32] {
  %160 = @func_6487() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(15, 1), float32], float32, Tensor[(15), float32]) */;
  %160.3
}

def @func_11148() -> (Tensor[(?, 16, 11), float32], Tensor[(14, 16, 11), float64]) {
  %161 = @func_3307() /* ty=(Tensor[(?, 16, 11), float32],) */;
  %162 = @func_1713() /* ty=(Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), float64]) */;
  %163 = %161.0;
  %164 = %162.0;
  (%163, %164)
}

def @func_6974(%var_6962: Tensor[(240), float32]) -> (Tensor[(?, 16, 11), float32], Tensor[(14, 16, 11), float64], Tensor[(432), int16], Tensor[(15, 10, 1), float32], Tensor[(150), float32], Tensor[(240), float32], Tensor[(?, 16, 11), float64]) {
  %165 = @func_5067() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */;
  %166 = cast(meta[relay.Constant][7] /* ty=Tensor[(432), int16] */, dtype="int16") /* ty=Tensor[(432), int16] */;
  %167 = reshape(%166, newshape=[9, 3, 16]) /* ty=Tensor[(9, 3, 16), int16] */;
  %168 = @func_4481(%167) /* ty=(Tensor[(9, 3, 16), bool], Tensor[(14, 16, 11), float64]) */;
  %169 = cast(meta[relay.Constant][8] /* ty=Tensor[(150), float32] */, dtype="float32") /* ty=Tensor[(150), float32] */;
  %170 = cast(%var_6962, dtype="float32") /* ty=Tensor[(240), float32] */;
  %171 = reshape(%169, newshape=[150, 1]) /* ty=Tensor[(150, 1), float32] */;
  %172 = reshape(%170, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %173 = @func_5785(%171, %172) /* ty=(Tensor[(?, 16, 11), int32], Tensor[(15, 10, 1), float32], Tensor[(150, 1), float32], Tensor[(?, 16, 11), int32], Tensor[(12, 4, 5), float32], Tensor[(240), float32], Tensor[(?, 16, 11), float64], Tensor[(6, 13, 13), bool]) */;
  %174 = @func_5650() /* ty=(Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), float64], Tensor[(150), float32], Tensor[(?, 16, 11), bool]) */;
  %175 = %165.0;
  %176 = %168.1;
  %177 = %173.1;
  %178 = %174.1;
  (%175, %176, meta[relay.Constant][7] /* ty=Tensor[(432), int16] */, %177, meta[relay.Constant][8] /* ty=Tensor[(150), float32] */, %var_6962, %178)
}

def @func_12433(%var_12415: Tensor[(9, 12, 6), float32]) -> (Tensor[(9, 12, 6), float32], Tensor[(?, 16, 11), bool]) {
  %179 = cast(%var_12415, dtype="float32") /* ty=Tensor[(9, 12, 6), float32] */;
  %180 = @func_5650() /* ty=(Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), float64], Tensor[(150), float32], Tensor[(?, 16, 11), bool]) */;
  %181 = exp(%179) /* ty=Tensor[(9, 12, 6), float32] */;
  %182 = %180.3;
  (%181, %182)
}

def @func_8873(%var_8848: Tensor[(8, 9, 2), bool]) -> (Tensor[(8, 9, 2), bool], Tensor[(8, 9, 2), float64]) {
  %183 = cast(meta[relay.Constant][9] /* ty=Tensor[(8, 9, 2), bool] */, dtype="bool") /* ty=Tensor[(8, 9, 2), bool] */;
  %184 = shape_of(%var_8848, dtype="int32") /* ty=Tensor[(3), int32] */;
  %185 = cast(%var_8848, dtype="bool") /* ty=Tensor[(8, 9, 2), bool] */;
  %186 = dyn.reshape(%183, %184, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %187 = cast(%var_8848, dtype="float64") /* ty=Tensor[(8, 9, 2), float64] */;
  %188 = logical_and(%185, %186) /* ty=Tensor[(8, 9, 2), bool] */;
  %189 = sin(%187) /* ty=Tensor[(8, 9, 2), float64] */;
  (%188, %189)
}

def @func_11613() -> (Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) {
  %190 = @func_1713() /* ty=(Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), float64]) */;
  %191 = %190.1;
  %192 = @func_11546() /* ty=Tensor[(?, 16, 11), int32] */;
  (%191, %192)
}

def @func_10907(%var_10901: Tensor[(20), uint32]) -> (Tensor[(?, 13, 12), uint64], Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), bool], Tensor[(4, 10, 2), bool], Tensor[(20), uint32]) {
  %193 = @func_10002() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(12, 16, 11), float32], Tensor[(?, 13, 12), uint64]) */;
  %194 = @func_3879() /* ty=Tensor[(?, 16, 11), bool] */;
  %195 = cast(%194, dtype="int32") /* ty=Tensor[(?, 16, 11), int32] */;
  %196 = reshape(%195, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), int32] */;
  %197 = cast(%var_10901, dtype="uint32") /* ty=Tensor[(20), uint32] */;
  %198 = reshape(%197, newshape=[1, 10, 2]) /* ty=Tensor[(1, 10, 2), uint32] */;
  %199 = %193.2;
  %200 = @func_2604(%196) /* ty=Tensor[(?, 16, 11), bool] */;
  %201 = @func_2287(%198) /* ty=Tensor[(4, 10, 2), bool] */;
  (%199, %194, %200, %201, %var_10901)
}

def @func_4770() -> (Tensor[(?, 16, 11), float64], Tensor[(14, 16, 11), float64]) {
  %202 = @func_2720() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), int32], Tensor[(270), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */;
  %203 = %202.1;
  %204 = @func_3478() /* ty=Tensor[(14, 16, 11), float64] */;
  (%203, %204)
}

def @func_7503(%var_7487: Tensor[(9, 6, 10), float32]) -> (Tensor[(9, 6, 10), float32], Tensor[(?, 16, 11), int32]) {
  %205 = cast(%var_7487, dtype="float32") /* ty=Tensor[(9, 6, 10), float32] */;
  %206 = @func_1243() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) */;
  %207 = tan(%205) /* ty=Tensor[(9, 6, 10), float32] */;
  %208 = %206.0;
  (%207, %208)
}

def @func_7959() -> Tensor[(?, 16, 11), float64] {
  @func_2057() /* ty=Tensor[(?, 16, 11), float64] */
}

def @func_11129() -> (Tensor[(12, 16, 11), float32],) {
  %209 = @func_8084() /* ty=(Tensor[(12, 16, 11), float32],) */;
  %210 = %209.0;
  (%210,)
}

def @func_3667() -> (Tensor[(?, 16, 11), int32],) {
  %211 = @func_1836() /* ty=Tensor[(?, 16, 11), int32] */;
  (%211,)
}

def @func_12090() -> (Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), int32]) {
  %212 = @func_6515() /* ty=(Tensor[(?, 16, 11), bool],) */;
  %213 = @func_10204() /* ty=(Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), bool], Tensor[(12, 16, 11), float32]) */;
  %214 = %212.0;
  %215 = %213.1;
  (%214, %215)
}

def @func_8807(%var_8801: Tensor[(11, 12, 7), float32]) -> Tensor[(11, 12, 7), float32] {
  %216 = cast(%var_8801, dtype="float32") /* ty=Tensor[(11, 12, 7), float32] */;
  log(%216) /* ty=Tensor[(11, 12, 7), float32] */
}

def @func_8842() -> Tensor[(?, 16, 11), int32] {
  %217 = @func_6881() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %217.0
}

def @func_2326(%var_2316: Tensor[(12, 15, 11), uint8]) -> (Tensor[(12, 15, 11), uint8],) {
  %218 = cast(%var_2316, dtype="uint8") /* ty=Tensor[(12, 15, 11), uint8] */;
  %219 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(12, 15, 11), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %220 = cast(meta[relay.Constant][10] /* ty=Tensor[(12, 15, 11), uint8] */, dtype="uint8") /* ty=Tensor[(12, 15, 11), uint8] */;
  %221 = dyn.reshape(%218, %219, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %222 = minimum(%220, %221) /* ty=Tensor[(12, 15, 11), uint8] */;
  (%222,)
}

def @func_5408(%var_5406: Tensor[(1014), bool]) -> (Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32], Tensor[(6, 13, 13), bool], Tensor[(1014), bool]) {
  %223 = @func_3405() /* ty=(Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
  %224 = @func_3307() /* ty=(Tensor[(?, 16, 11), float32],) */;
  %225 = cast(%var_5406, dtype="bool") /* ty=Tensor[(1014), bool] */;
  %226 = reshape(%225, newshape=[6, 13, 13]) /* ty=Tensor[(6, 13, 13), bool] */;
  %227 = @func_3961(%226) /* ty=(Tensor[(6, 13, 13), bool], Tensor[(?, 16, 11), float32]) */;
  %228 = %223.0;
  %229 = @func_1836() /* ty=Tensor[(?, 16, 11), int32] */;
  %230 = %224.0;
  %231 = %227.0;
  (%228, %229, %230, %231, %var_5406)
}

def @func_4703() -> (Tensor[(?, 16, 11), float64],) {
  %232 = @func_2019() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) */;
  %233 = %232.1;
  (%233,)
}

def @func_10866() -> Tensor[(?, 16, 11), float64] {
  %234 = @func_6653() /* ty=(Tensor[(?, 16, 11), float64],) */;
  %234.0
}

def @func_2894() -> (Tensor[(?, 16, 11), float32],) {
  %235 = @func_1094() /* ty=(Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64]) */;
  %236 = %235.1;
  (%236,)
}

def @func_854() -> (Tensor[(?, 16, 11), float32],) {
  %237 = @func_747() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %238 = %237.0;
  %239 = cast(%238, dtype="float32") /* ty=Tensor[(?, 16, 11), float32] */;
  %240 = rsqrt(%239) /* ty=Tensor[(?, 16, 11), float32] */;
  (%240,)
}

def @func_9427() -> (Tensor[(?, 16, 11), float32], Tensor[(14, 16, 11), float64]) {
  %241 = @func_854() /* ty=(Tensor[(?, 16, 11), float32],) */;
  %242 = @func_4841() /* ty=(Tensor[(14, 16, 11), float64],) */;
  %243 = %241.0;
  %244 = %242.0;
  (%243, %244)
}

def @func_5930() -> Tensor[(?, 16, 11), bool] {
  %245 = @func_5561() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), bool]) */;
  %245.1
}

def @func_11778(%var_11762: Tensor[(14, 7, 13), float64]) -> (Tensor[(14, 7, 13), float64],) {
  %246 = cast(meta[relay.Constant][11] /* ty=Tensor[(14, 7, 13), float64] */, dtype="float64") /* ty=Tensor[(14, 7, 13), float64] */;
  %247 = shape_of(%var_11762, dtype="int32") /* ty=Tensor[(3), int32] */;
  %248 = cast(%var_11762, dtype="float64") /* ty=Tensor[(14, 7, 13), float64] */;
  %249 = dyn.reshape(%246, %247, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %250 = floor_divide(%248, %249) /* ty=Tensor[(14, 7, 13), float64] */;
  (%250,)
}

def @func_7096() -> Tensor[(?, 16, 11), int32] {
  %251 = @func_747() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %251.0
}

def @func_5340() -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(2464), float64], Tensor[(?, 16, 11), int32]) {
  %252 = @func_1243() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) */;
  %253 = cast(meta[relay.Constant][12] /* ty=Tensor[(2464), float64] */, dtype="float64") /* ty=Tensor[(2464), float64] */;
  %254 = reshape(%253, newshape=[14, 16, 11]) /* ty=Tensor[(14, 16, 11), float64] */;
  %255 = @func_4035(%254) /* ty=(Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
  %256 = @func_3667() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %257 = %252.0;
  %258 = %255.1;
  %259 = %256.0;
  (%257, %258, meta[relay.Constant][12] /* ty=Tensor[(2464), float64] */, %259)
}

def @func_11247(%var_11233: Tensor[(90, 3), float64]) -> (Tensor[(?, 16, 11), float32], Tensor[(90, 3), float64], Tensor[(90, 3), int8]) {
  %260 = @func_4103() /* ty=(Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), int32], Tensor[(90, 3), float64], Tensor[(?, 16, 11), int32]) */;
  %261 = %260.3;
  %262 = cast(%var_11233, dtype="float64") /* ty=Tensor[(90, 3), float64] */;
  %263 = shape_of(%261, dtype="int32") /* ty=Tensor[(2), int32] */;
  %264 = cast(%261, dtype="float64") /* ty=Tensor[(90, 3), float64] */;
  %265 = dyn.reshape(%262, %263, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %266 = cast(%var_11233, dtype="int8") /* ty=Tensor[(90, 3), int8] */;
  %267 = shape_of(%261, dtype="int32") /* ty=Tensor[(2), int32] */;
  %268 = cast(%261, dtype="int8") /* ty=Tensor[(90, 3), int8] */;
  %269 = dyn.reshape(%266, %267, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %270 = @func_9063() /* ty=Tensor[(?, 16, 11), float32] */;
  %271 = maximum(%264, %265) /* ty=Tensor[(90, 3), float64] */;
  %272 = minimum(%268, %269) /* ty=Tensor[(90, 3), int8] */;
  (%270, %271, %272)
}

def @func_5785(%var_5739: Tensor[(150, 1), float32], %var_5757: Tensor[(240), float32]) -> (Tensor[(?, 16, 11), int32], Tensor[(15, 10, 1), float32], Tensor[(150, 1), float32], Tensor[(?, 16, 11), int32], Tensor[(12, 4, 5), float32], Tensor[(240), float32], Tensor[(?, 16, 11), float64], Tensor[(6, 13, 13), bool]) {
  %273 = @func_621() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %274 = cast(%var_5739, dtype="float32") /* ty=Tensor[(150, 1), float32] */;
  %275 = reshape(%274, newshape=[15, 10, 1]) /* ty=Tensor[(15, 10, 1), float32] */;
  %276 = @func_3499(%275) /* ty=(Tensor[(15, 10, 1), float32], Tensor[(?, 16, 11), float64]) */;
  %277 = @func_2019() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) */;
  %278 = cast(%var_5757, dtype="float32") /* ty=Tensor[(240), float32] */;
  %279 = reshape(%278, newshape=[12, 4, 5]) /* ty=Tensor[(12, 4, 5), float32] */;
  %280 = @func_1814() /* ty=(Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
  %281 = %280.1;
  %282 = @func_4256() /* ty=Tensor[(?, 16, 11), int32] */;
  %283 = cast(%282, dtype="float64") /* ty=Tensor[(?, 16, 11), float64] */;
  %284 = shape_of(%281, dtype="int32") /* ty=Tensor[(3), int32] */;
  %285 = cast(%281, dtype="float64") /* ty=Tensor[(?, 16, 11), float64] */;
  %286 = dyn.reshape(%283, %284, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %287 = @func_4518() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(1014), bool], Tensor[(6, 13, 13), bool]) */;
  %288 = %273.0;
  %289 = %276.0;
  %290 = %277.0;
  %291 = @func_3696(%279) /* ty=Tensor[(12, 4, 5), float32] */;
  %292 = add(%285, %286) /* ty=Tensor[(?, 16, 11), float64] */;
  %293 = %287.2;
  (%288, %289, %var_5739, %290, %291, %var_5757, %292, %293)
}

def @func_7713(%var_7603: Tensor[(432), int16], %var_7708: Tensor[(270), float64]) -> (Tensor[(?, 16, 11), int32], Tensor[(432), int16], Tensor[(432), int16], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32], Tensor[(14, 16, 11), uint64], Tensor[(270), float64], Tensor[(270), float64]) {
  %294 = @func_1561() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %295 = cast(%var_7603, dtype="int16") /* ty=Tensor[(432), int16] */;
  %296 = reshape(%295, newshape=[432]) /* ty=Tensor[(432), int16] */;
  %297 = @func_6182(%296) /* ty=(Tensor[(14, 16, 11), uint64], Tensor[(14, 16, 11), float64], Tensor[(432), int16], Tensor[(90, 3), float64]) */;
  %298 = @func_2450() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(2250), float64], Tensor[(?, 16, 11), float64]) */;
  %299 = @func_5561() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), bool]) */;
  %300 = %297.2;
  %301 = cast(%300, dtype="int16") /* ty=Tensor[(432), int16] */;
  %302 = reshape(%301, newshape=[432]) /* ty=Tensor[(432), int16] */;
  %303 = @func_6182(%302) /* ty=(Tensor[(14, 16, 11), uint64], Tensor[(14, 16, 11), float64], Tensor[(432), int16], Tensor[(90, 3), float64]) */;
  %304 = cast(%var_7708, dtype="float64") /* ty=Tensor[(270), float64] */;
  %305 = reshape(%304, newshape=[270]) /* ty=Tensor[(270), float64] */;
  %306 = @func_897(%305) /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(15, 3, 6), float64], Tensor[(270), float64]) */;
  %307 = %294.0;
  %308 = %298.0;
  %309 = @func_1836() /* ty=Tensor[(?, 16, 11), int32] */;
  %310 = %299.0;
  %311 = %303.0;
  %312 = %306.3;
  (%307, %300, %var_7603, %308, %309, %310, %311, %312, %var_7708)
}

def @func_916() -> (Tensor[(?, 16, 11), int32],) {
  %313 = @func_747() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %314 = %313.0;
  (%314,)
}

def @func_747() -> (Tensor[(?, 16, 11), int32],) {
  %315 = @func_621() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %316 = %315.0;
  (%316,)
}

def @func_9715() -> (Tensor[(?, 16, 11), float64], Tensor[(8, 9, 2), bool], Tensor[(2, 72), bool], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) {
  %317 = cast(meta[relay.Constant][13] /* ty=Tensor[(2, 72), bool] */, dtype="bool") /* ty=Tensor[(2, 72), bool] */;
  %318 = reshape(%317, newshape=[8, 9, 2]) /* ty=Tensor[(8, 9, 2), bool] */;
  %319 = @func_8873(%318) /* ty=(Tensor[(8, 9, 2), bool], Tensor[(8, 9, 2), float64]) */;
  %320 = @func_5067() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */;
  %321 = @func_2835() /* ty=(Tensor[(?, 16, 11), float64],) */;
  %322 = @func_964() /* ty=Tensor[(?, 16, 11), float64] */;
  %323 = %319.0;
  %324 = %320.0;
  %325 = @func_8215() /* ty=Tensor[(?, 16, 11), int32] */;
  %326 = %321.0;
  (%322, %323, meta[relay.Constant][13] /* ty=Tensor[(2, 72), bool] */, %324, %325, %326)
}

def @func_10630() -> (Tensor[(?, 16, 11), int32],) {
  %327 = @func_10570() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %328 = %327.0;
  (%328,)
}

def @func_11374() -> Tensor[(?, 16, 11), int32] {
  %329 = @func_584() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %329.0
}

def @func_6653() -> (Tensor[(?, 16, 11), float64],) {
  %330 = @func_1878() /* ty=Tensor[(?, 16, 11), float32] */;
  %331 = cast(%330, dtype="float64") /* ty=Tensor[(?, 16, 11), float64] */;
  %332 = log(%331) /* ty=Tensor[(?, 16, 11), float64] */;
  (%332,)
}

def @func_8084() -> (Tensor[(12, 16, 11), float32],) {
  %333 = @func_3375() /* ty=(Tensor[(12, 16, 11), float32], Tensor[(?, 16, 11), bool]) */;
  %334 = %333.0;
  (%334,)
}

def @func_1610(%var_1573: Tensor[(15, 10, 15), float64]) -> (Tensor[(15, 10, 15), bool], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) {
  %335 = cast(%var_1573, dtype="float64") /* ty=Tensor[(15, 10, 15), float64] */;
  %336 = asinh(%335) /* ty=Tensor[(15, 10, 15), float64] */;
  %337 = cast(%var_1573, dtype="bool") /* ty=Tensor[(15, 10, 15), bool] */;
  %338 = shape_of(%336, dtype="int32") /* ty=Tensor[(3), int32] */;
  %339 = cast(%336, dtype="bool") /* ty=Tensor[(15, 10, 15), bool] */;
  %340 = dyn.reshape(%337, %338, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %341 = @func_1339() /* ty=(Tensor[(?, 16, 11), float64],) */;
  %342 = @func_704() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %343 = greater_equal(%339, %340) /* ty=Tensor[(15, 10, 15), bool] */;
  %344 = %341.0;
  %345 = %342.0;
  (%343, %344, %345)
}

def @func_1561() -> (Tensor[(?, 16, 11), int32],) {
  %346 = @func_621() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %347 = %346.0;
  (%347,)
}

def @func_3262() -> (Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), int32]) {
  %348 = @func_1713() /* ty=(Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), float64]) */;
  %349 = @func_584() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %350 = %348.0;
  %351 = %349.0;
  (%350, %351)
}

def @func_3478() -> Tensor[(14, 16, 11), float64] {
  %352 = @func_3405() /* ty=(Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
  %352.0
}

def @func_3499(%var_3480: Tensor[(15, 10, 1), float32]) -> (Tensor[(15, 10, 1), float32], Tensor[(?, 16, 11), float64]) {
  %353 = cast(%var_3480, dtype="float32") /* ty=Tensor[(15, 10, 1), float32] */;
  %354 = @func_2720() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), int32], Tensor[(270), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */;
  %355 = erf(%353) /* ty=Tensor[(15, 10, 1), float32] */;
  %356 = %354.1;
  (%355, %356)
}

def @func_4103() -> (Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), int32], Tensor[(90, 3), float64], Tensor[(?, 16, 11), int32]) {
  %357 = @func_2614() /* ty=(Tensor[(?, 16, 11), float32],) */;
  %358 = %357.0;
  %359 = @func_2057() /* ty=Tensor[(?, 16, 11), float64] */;
  %360 = cast(%359, dtype="bool") /* ty=Tensor[(?, 16, 11), bool] */;
  %361 = shape_of(%358, dtype="int32") /* ty=Tensor[(3), int32] */;
  %362 = cast(%358, dtype="bool") /* ty=Tensor[(?, 16, 11), bool] */;
  %363 = dyn.reshape(%360, %361, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %364 = cast(meta[relay.Constant][14] /* ty=Tensor[(90, 3), float64] */, dtype="float64") /* ty=Tensor[(90, 3), float64] */;
  %365 = reshape(%364, newshape=[1, 270]) /* ty=Tensor[(1, 270), float64] */;
  %366 = @func_1309(%365) /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(15, 3, 6), float64], Tensor[(1, 270), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */;
  %367 = @func_916() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %368 = @func_3941() /* ty=Tensor[(?, 16, 11), int8] */;
  %369 = less(%362, %363) /* ty=Tensor[(?, 16, 11), bool] */;
  %370 = %366.1;
  %371 = %367.0;
  (%368, %369, %370, meta[relay.Constant][14] /* ty=Tensor[(90, 3), float64] */, %371)
}

def @func_9287(%var_9250: Tensor[(3, 16, 11), bool]) -> (Tensor[(3, 16, 11), uint64], Tensor[(3, 16, 11), float64], Tensor[(?, 16, 11), float64], Tensor[(150), float32], Tensor[(240), float32]) {
  %372 = @func_6817() /* ty=(Tensor[(?, 16, 11), bool],) */;
  %373 = %372.0;
  %374 = cast(%373, dtype="uint16") /* ty=Tensor[(?, 16, 11), uint16] */;
  %375 = cast(%var_9250, dtype="uint16") /* ty=Tensor[(3, 16, 11), uint16] */;
  %376 = bitwise_and(%374, %375) /* ty=Tensor[(3, 16, 11), uint16] */;
  %377 = cast(%373, dtype="uint64") /* ty=Tensor[(?, 16, 11), uint64] */;
  %378 = cast(%376, dtype="uint64") /* ty=Tensor[(3, 16, 11), uint64] */;
  %379 = cast(%376, dtype="float64") /* ty=Tensor[(3, 16, 11), float64] */;
  %380 = cast(meta[relay.Constant][15] /* ty=Tensor[(150), float32] */, dtype="float32") /* ty=Tensor[(150), float32] */;
  %381 = cast(meta[relay.Constant][16] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %382 = reshape(%380, newshape=[150, 1]) /* ty=Tensor[(150, 1), float32] */;
  %383 = reshape(%381, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %384 = @func_5785(%382, %383) /* ty=(Tensor[(?, 16, 11), int32], Tensor[(15, 10, 1), float32], Tensor[(150, 1), float32], Tensor[(?, 16, 11), int32], Tensor[(12, 4, 5), float32], Tensor[(240), float32], Tensor[(?, 16, 11), float64], Tensor[(6, 13, 13), bool]) */;
  %385 = multiply(%377, %378) /* ty=Tensor[(3, 16, 11), uint64] */;
  %386 = asinh(%379) /* ty=Tensor[(3, 16, 11), float64] */;
  %387 = %384.6;
  (%385, %386, %387, meta[relay.Constant][15] /* ty=Tensor[(150), float32] */, meta[relay.Constant][16] /* ty=Tensor[(240), float32] */)
}

def @func_4427() -> Tensor[(?, 16, 11), bool] {
  @func_3623() /* ty=Tensor[(?, 16, 11), bool] */
}

def @func_5159() -> (Tensor[(?, 16, 11), int32],) {
  %388 = @func_2450() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(2250), float64], Tensor[(?, 16, 11), float64]) */;
  %389 = %388.0;
  (%389,)
}

def @func_4035(%var_4003: Tensor[(14, 16, 11), float64]) -> (Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), int32]) {
  %390 = @func_3405() /* ty=(Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
  %391 = %390.0;
  %392 = cast(%var_4003, dtype="float64") /* ty=Tensor[(14, 16, 11), float64] */;
  %393 = shape_of(%391, dtype="int32") /* ty=Tensor[(3), int32] */;
  %394 = cast(%391, dtype="float64") /* ty=Tensor[(14, 16, 11), float64] */;
  %395 = dyn.reshape(%392, %393, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %396 = @func_2728() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %397 = mod(%394, %395) /* ty=Tensor[(14, 16, 11), float64] */;
  %398 = %396.0;
  (%397, %398)
}

def @func_7474() -> (Tensor[(15, 1), float32], Tensor[(12, 16, 11), float32], Tensor[(?, 16, 11), bool]) {
  %399 = @func_6487() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(15, 1), float32], float32, Tensor[(15), float32]) */;
  %400 = @func_5457() /* ty=(Tensor[(12, 16, 11), float32],) */;
  %401 = @func_1094() /* ty=(Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64]) */;
  %402 = %399.1;
  %403 = %400.0;
  %404 = %401.0;
  (%402, %403, %404)
}

def @func_11308(%var_11269: Tensor[(270), float64]) -> (Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32], Tensor[(90, 3), float32]) {
  %405 = @func_7372() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float32]) */;
  %406 = cast(%var_11269, dtype="float64") /* ty=Tensor[(270), float64] */;
  %407 = reshape(%406, newshape=[90, 3]) /* ty=Tensor[(90, 3), float64] */;
  %408 = @func_11247(%407) /* ty=(Tensor[(?, 16, 11), float32], Tensor[(90, 3), float64], Tensor[(90, 3), int8]) */;
  %409 = %408.2;
  %410 = cast(%409, dtype="float64") /* ty=Tensor[(90, 3), float64] */;
  %411 = reshape(%410, newshape=[1, 270]) /* ty=Tensor[(1, 270), float64] */;
  %412 = @func_1309(%411) /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(15, 3, 6), float64], Tensor[(1, 270), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */;
  %413 = cast(%409, dtype="float32") /* ty=Tensor[(90, 3), float32] */;
  %414 = log2(%413) /* ty=Tensor[(90, 3), float32] */;
  %415 = cast(%var_11269, dtype="float32") /* ty=Tensor[(270), float32] */;
  %416 = shape_of(%414, dtype="int32") /* ty=Tensor[(2), int32] */;
  %417 = cast(%414, dtype="float32") /* ty=Tensor[(90, 3), float32] */;
  %418 = dyn.reshape(%415, %416, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %419 = @func_3478() /* ty=Tensor[(14, 16, 11), float64] */;
  %420 = %405.1;
  %421 = %412.0;
  %422 = floor_mod(%417, %418) /* ty=Tensor[(90, 3), float32] */;
  (%419, %420, %421, %422)
}

def @func_964() -> Tensor[(?, 16, 11), float64] {
  %423 = @func_854() /* ty=(Tensor[(?, 16, 11), float32],) */;
  %424 = %423.0;
  %425 = cast(%424, dtype="float64") /* ty=Tensor[(?, 16, 11), float64] */;
  sinh(%425) /* ty=Tensor[(?, 16, 11), float64] */
}

def @func_6475(%var_6440: Tensor[(7, 12, 5), uint32], %var_6441: Tensor[(7, 12, 5), uint32]) -> (Tensor[(7, 12, 5), bool], Tensor[(?, 16, 11), bool], Tensor[(7, 12, 5), float64]) {
  %426 = cast(%var_6441, dtype="bool") /* ty=Tensor[(7, 12, 5), bool] */;
  %427 = shape_of(%var_6440, dtype="int32") /* ty=Tensor[(3), int32] */;
  %428 = cast(%var_6440, dtype="bool") /* ty=Tensor[(7, 12, 5), bool] */;
  %429 = dyn.reshape(%426, %427, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %430 = cast(%var_6440, dtype="float32") /* ty=Tensor[(7, 12, 5), float32] */;
  %431 = atan(%430) /* ty=Tensor[(7, 12, 5), float32] */;
  %432 = cast(%431, dtype="float64") /* ty=Tensor[(7, 12, 5), float64] */;
  %433 = not_equal(%428, %429) /* ty=Tensor[(7, 12, 5), bool] */;
  %434 = @func_3879() /* ty=Tensor[(?, 16, 11), bool] */;
  %435 = log(%432) /* ty=Tensor[(7, 12, 5), float64] */;
  (%433, %434, %435)
}

def @func_1836() -> Tensor[(?, 16, 11), int32] {
  @func_1211() /* ty=Tensor[(?, 16, 11), int32] */
}

def @func_2969() -> Tensor[(?, 13, 12), uint64] {
  %436 = cast(meta[relay.Constant][17] /* ty=Tensor[(1, 13, 12), float64] */, dtype="float64") /* ty=Tensor[(1, 13, 12), float64] */;
  %437 = rsqrt(%436) /* ty=Tensor[(1, 13, 12), float64] */;
  %438 = cast(meta[relay.Constant][17] /* ty=Tensor[(1, 13, 12), float64] */, dtype="uint64") /* ty=Tensor[(1, 13, 12), uint64] */;
  %439 = shape_of(%437, dtype="int32") /* ty=Tensor[(3), int32] */;
  %440 = cast(%437, dtype="uint64") /* ty=Tensor[(1, 13, 12), uint64] */;
  %441 = dyn.reshape(%438, %439, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  maximum(%440, %441) /* ty=Tensor[(?, 13, 12), uint64] */
}

def @func_3696(%var_3682: Tensor[(12, 4, 5), float32]) -> Tensor[(12, 4, 5), float32] {
  %442 = cast(%var_3682, dtype="float32") /* ty=Tensor[(12, 4, 5), float32] */;
  exp(%442) /* ty=Tensor[(12, 4, 5), float32] */
}

def @func_9063() -> Tensor[(?, 16, 11), float32] {
  %443 = @func_1094() /* ty=(Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64]) */;
  %443.1
}

def @func_3375() -> (Tensor[(12, 16, 11), float32], Tensor[(?, 16, 11), bool]) {
  %444 = @func_2720() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), int32], Tensor[(270), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */;
  %445 = %444.7;
  %446 = cast(%445, dtype="float32") /* ty=Tensor[(?, 16, 11), float32] */;
  %447 = cast(meta[relay.Constant][18] /* ty=Tensor[(12, 16, 11), int32] */, dtype="float32") /* ty=Tensor[(12, 16, 11), float32] */;
  %448 = @func_2720() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), int32], Tensor[(270), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */;
  %449 = maximum(%446, %447) /* ty=Tensor[(12, 16, 11), float32] */;
  %450 = %448.3;
  (%449, %450)
}

def @func_8911() -> (Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), bool]) {
  %451 = @func_4703() /* ty=(Tensor[(?, 16, 11), float64],) */;
  %452 = @func_2720() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), int32], Tensor[(270), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */;
  %453 = %451.0;
  %454 = %452.3;
  (%453, %454)
}

def @func_2287(%var_2272: Tensor[(1, 10, 2), uint32]) -> Tensor[(4, 10, 2), bool] {
  %455 = cast(%var_2272, dtype="bool") /* ty=Tensor[(1, 10, 2), bool] */;
  %456 = cast(meta[relay.Constant][19] /* ty=Tensor[(4, 10, 2), uint32] */, dtype="bool") /* ty=Tensor[(4, 10, 2), bool] */;
  not_equal(%455, %456) /* ty=Tensor[(4, 10, 2), bool] */
}

def @func_4841() -> (Tensor[(14, 16, 11), float64],) {
  %457 = @func_3478() /* ty=Tensor[(14, 16, 11), float64] */;
  (%457,)
}

def @func_447(%var_435: Tensor[(15, 3, 6), float64], %var_436: Tensor[(15, 3, 6), float64]) -> (Tensor[(15, 3, 6), float64], Tensor[(15, 3, 6), float64]) {
  %458 = cast(%var_436, dtype="float64") /* ty=Tensor[(15, 3, 6), float64] */;
  %459 = shape_of(%var_435, dtype="int32") /* ty=Tensor[(3), int32] */;
  %460 = cast(%var_435, dtype="float64") /* ty=Tensor[(15, 3, 6), float64] */;
  %461 = dyn.reshape(%458, %459, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %462 = cast(%var_436, dtype="float64") /* ty=Tensor[(15, 3, 6), float64] */;
  %463 = add(%460, %461) /* ty=Tensor[(15, 3, 6), float64] */;
  %464 = sigmoid(%462) /* ty=Tensor[(15, 3, 6), float64] */;
  (%463, %464)
}

def @func_2835() -> (Tensor[(?, 16, 11), float64],) {
  %465 = @func_2057() /* ty=Tensor[(?, 16, 11), float64] */;
  (%465,)
}

def @func_5918() -> (Tensor[(12, 16, 11), float32], Tensor[(6, 13, 13), bool], Tensor[(150), float32], Tensor[(4, 60), float32]) {
  %466 = @func_5457() /* ty=(Tensor[(12, 16, 11), float32],) */;
  %467 = %466.0;
  %468 = @func_5236() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32]) */;
  %469 = %468.0;
  %470 = cast(%467, dtype="float32") /* ty=Tensor[(12, 16, 11), float32] */;
  %471 = cast(%469, dtype="float32") /* ty=Tensor[(?, 16, 11), float32] */;
  %472 = cast(meta[relay.Constant][20] /* ty=Tensor[(150), float32] */, dtype="float32") /* ty=Tensor[(150), float32] */;
  %473 = cast(meta[relay.Constant][21] /* ty=Tensor[(4, 60), float32] */, dtype="float32") /* ty=Tensor[(4, 60), float32] */;
  %474 = reshape(%472, newshape=[150, 1]) /* ty=Tensor[(150, 1), float32] */;
  %475 = reshape(%473, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %476 = @func_5785(%474, %475) /* ty=(Tensor[(?, 16, 11), int32], Tensor[(15, 10, 1), float32], Tensor[(150, 1), float32], Tensor[(?, 16, 11), int32], Tensor[(12, 4, 5), float32], Tensor[(240), float32], Tensor[(?, 16, 11), float64], Tensor[(6, 13, 13), bool]) */;
  %477 = power(%470, %471) /* ty=Tensor[(12, 16, 11), float32] */;
  %478 = %476.7;
  (%477, %478, meta[relay.Constant][20] /* ty=Tensor[(150), float32] */, meta[relay.Constant][21] /* ty=Tensor[(4, 60), float32] */)
}

def @func_10204() -> (Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), bool], Tensor[(12, 16, 11), float32]) {
  %479 = @func_7523() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %480 = @func_5683() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %481 = @func_4703() /* ty=(Tensor[(?, 16, 11), float64],) */;
  %482 = @func_10002() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(12, 16, 11), float32], Tensor[(?, 13, 12), uint64]) */;
  %483 = @func_3623() /* ty=Tensor[(?, 16, 11), bool] */;
  %484 = %479.0;
  %485 = %480.0;
  %486 = %481.0;
  %487 = @func_3879() /* ty=Tensor[(?, 16, 11), bool] */;
  %488 = %482.1;
  (%483, %484, %485, %486, %487, %488)
}

def @func_11973() -> (Tensor[(?, 16, 11), int32],) {
  %489 = @func_1205() /* ty=Tensor[(?, 16, 11), int32] */;
  (%489,)
}

def @func_5683() -> (Tensor[(?, 16, 11), int32],) {
  %490 = @func_1814() /* ty=(Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
  %491 = %490.1;
  (%491,)
}

def @func_2019() -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) {
  %492 = @func_1800() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
  %493 = @func_1713() /* ty=(Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), float64]) */;
  %494 = %492.0;
  %495 = %493.1;
  (%494, %495)
}

def @func_1713() -> (Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), float64]) {
  %496 = @func_1651() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64]) */;
  %497 = %496.0;
  %498 = cast(%497, dtype="float64") /* ty=Tensor[(?, 16, 11), float64] */;
  %499 = cast(meta[relay.Constant][22] /* ty=Tensor[(14, 16, 11), float32] */, dtype="float64") /* ty=Tensor[(14, 16, 11), float64] */;
  %500 = floor_divide(%498, %499) /* ty=Tensor[(14, 16, 11), float64] */;
  %501 = @func_964() /* ty=Tensor[(?, 16, 11), float64] */;
  (%500, %501)
}

def @func_8620() -> (Tensor[(?, 16, 11), int32], Tensor[(4, 10, 2), bool], Tensor[(20), uint32], Tensor[(14, 16, 11), float64]) {
  %502 = @func_8337() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), bool]) */;
  %503 = cast(meta[relay.Constant][23] /* ty=Tensor[(20), uint32] */, dtype="uint32") /* ty=Tensor[(20), uint32] */;
  %504 = reshape(%503, newshape=[1, 10, 2]) /* ty=Tensor[(1, 10, 2), uint32] */;
  %505 = @func_3802() /* ty=(Tensor[(14, 16, 11), float64], Tensor[(14, 16, 11), float64]) */;
  %506 = %502.0;
  %507 = @func_2287(%504) /* ty=Tensor[(4, 10, 2), bool] */;
  %508 = %505.0;
  (%506, %507, meta[relay.Constant][23] /* ty=Tensor[(20), uint32] */, %508)
}

def @func_6817() -> (Tensor[(?, 16, 11), bool],) {
  %509 = @func_3623() /* ty=Tensor[(?, 16, 11), bool] */;
  (%509,)
}

def @func_9827() -> (Tensor[(7, 5, 16), float64],) {
  %510 = cast(meta[relay.Constant][24] /* ty=Tensor[(7, 5, 16), float64] */, dtype="float64") /* ty=Tensor[(7, 5, 16), float64] */;
  %511 = tan(%510) /* ty=Tensor[(7, 5, 16), float64] */;
  (%511,)
}

def @func_5258() -> Tensor[(14, 16, 11), float64] {
  %512 = @func_1713() /* ty=(Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), float64]) */;
  %512.0
}

def @func_4545() -> (Tensor[(?, 16, 11), int32],) {
  %513 = @func_1561() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %514 = %513.0;
  (%514,)
}

def @func_8171() -> (Tensor[(?, 16, 11), int32],) {
  %515 = @func_1836() /* ty=Tensor[(?, 16, 11), int32] */;
  (%515,)
}

def @func_1094() -> (Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64]) {
  %516 = @func_621() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %517 = %516.0;
  %518 = @func_964() /* ty=Tensor[(?, 16, 11), float64] */;
  %519 = cast(%518, dtype="bool") /* ty=Tensor[(?, 16, 11), bool] */;
  %520 = shape_of(%517, dtype="int32") /* ty=Tensor[(3), int32] */;
  %521 = cast(%517, dtype="bool") /* ty=Tensor[(?, 16, 11), bool] */;
  %522 = dyn.reshape(%519, %520, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %523 = @func_854() /* ty=(Tensor[(?, 16, 11), float32],) */;
  %524 = @func_854() /* ty=(Tensor[(?, 16, 11), float32],) */;
  %525 = %524.0;
  %526 = cast(%525, dtype="float64") /* ty=Tensor[(?, 16, 11), float64] */;
  %527 = shape_of(%517, dtype="int32") /* ty=Tensor[(3), int32] */;
  %528 = cast(%517, dtype="float64") /* ty=Tensor[(?, 16, 11), float64] */;
  %529 = dyn.reshape(%526, %527, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %530 = equal(%521, %522) /* ty=Tensor[(?, 16, 11), bool] */;
  %531 = %523.0;
  %532 = floor_divide(%528, %529) /* ty=Tensor[(?, 16, 11), float64] */;
  (%530, %531, %532)
}

def @func_8337() -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), bool]) {
  %533 = @func_7823() /* ty=(Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), int32]) */;
  %534 = %533.1;
  %535 = @func_7423() /* ty=Tensor[(?, 16, 11), bool] */;
  (%534, %535)
}

def @func_10718() -> (Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), uint64], Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), bool]) {
  %536 = @func_1339() /* ty=(Tensor[(?, 16, 11), float64],) */;
  %537 = @func_9390() /* ty=(Tensor[(?, 16, 11), int8],) */;
  %538 = %536.0;
  %539 = @func_10665() /* ty=Tensor[(?, 16, 11), uint64] */;
  %540 = %537.0;
  %541 = @func_4427() /* ty=Tensor[(?, 16, 11), bool] */;
  (%538, %539, %540, %541)
}

def @func_10615() -> (Tensor[(?, 16, 11), int8],) {
  %542 = @func_4703() /* ty=(Tensor[(?, 16, 11), float64],) */;
  %543 = %542.0;
  %544 = cast(%543, dtype="int32") /* ty=Tensor[(?, 16, 11), int32] */;
  %545 = reshape(%544, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), int32] */;
  %546 = @func_10416(%545) /* ty=(Tensor[(?, 16, 11), float64],) */;
  %547 = %546.0;
  %548 = cast(%547, dtype="int8") /* ty=Tensor[(?, 16, 11), int8] */;
  %549 = shape_of(%543, dtype="int32") /* ty=Tensor[(3), int32] */;
  %550 = cast(%543, dtype="int8") /* ty=Tensor[(?, 16, 11), int8] */;
  %551 = dyn.reshape(%548, %549, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %552 = maximum(%550, %551) /* ty=Tensor[(?, 16, 11), int8] */;
  (%552,)
}

def @func_584() -> (Tensor[(?, 16, 11), int32],) {
  %553 = cast(meta[relay.Constant][25] /* ty=Tensor[(1, 16, 11), float32] */, dtype="float32") /* ty=Tensor[(1, 16, 11), float32] */;
  %554 = log2(%553) /* ty=Tensor[(1, 16, 11), float32] */;
  %555 = cast(meta[relay.Constant][25] /* ty=Tensor[(1, 16, 11), float32] */, dtype="int32") /* ty=Tensor[(1, 16, 11), int32] */;
  %556 = shape_of(%554, dtype="int32") /* ty=Tensor[(3), int32] */;
  %557 = cast(%554, dtype="int32") /* ty=Tensor[(1, 16, 11), int32] */;
  %558 = dyn.reshape(%555, %556, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %559 = logical_xor(%557, %558) /* ty=Tensor[(?, 16, 11), int32] */;
  (%559,)
}

def @func_4871() -> (Tensor[(?, 16, 11), float32],) {
  %560 = @func_3307() /* ty=(Tensor[(?, 16, 11), float32],) */;
  %561 = %560.0;
  (%561,)
}

def @func_10344(%var_10328: Tensor[(8, 9, 10), float64]) -> (Tensor[(8, 9, 10), float64], Tensor[(?, 16, 11), float32], Tensor[(176), bool], Tensor[(4, 220), bool], Tensor[(1014), bool]) {
  %562 = cast(%var_10328, dtype="float64") /* ty=Tensor[(8, 9, 10), float64] */;
  %563 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(8, 9, 10), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %564 = cast(meta[relay.Constant][26] /* ty=Tensor[(8, 9, 10), float64] */, dtype="float64") /* ty=Tensor[(8, 9, 10), float64] */;
  %565 = dyn.reshape(%562, %563, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %566 = cast(meta[relay.Constant][27] /* ty=Tensor[(176), bool] */, dtype="bool") /* ty=Tensor[(176), bool] */;
  %567 = cast(meta[relay.Constant][28] /* ty=Tensor[(4, 220), bool] */, dtype="bool") /* ty=Tensor[(4, 220), bool] */;
  %568 = cast(meta[relay.Constant][29] /* ty=Tensor[(1014), bool] */, dtype="bool") /* ty=Tensor[(1014), bool] */;
  %569 = reshape(%566, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), bool] */;
  %570 = reshape(%567, newshape=[5, 16, 11]) /* ty=Tensor[(5, 16, 11), bool] */;
  %571 = reshape(%568, newshape=[1, 1014]) /* ty=Tensor[(1, 1014), bool] */;
  %572 = @func_5969(%569, %570, %571) /* ty=(Tensor[(?, 16, 11), int16], Tensor[(5, 16, 11), uint8], Tensor[(?, 16, 11), float32], Tensor[(1, 1014), bool]) */;
  %573 = floor_divide(%564, %565) /* ty=Tensor[(8, 9, 10), float64] */;
  %574 = %572.2;
  (%573, %574, meta[relay.Constant][27] /* ty=Tensor[(176), bool] */, meta[relay.Constant][28] /* ty=Tensor[(4, 220), bool] */, meta[relay.Constant][29] /* ty=Tensor[(1014), bool] */)
}

def @func_9390() -> (Tensor[(?, 16, 11), int8],) {
  %575 = @func_8461() /* ty=(Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32]) */;
  %576 = %575.0;
  (%576,)
}

def @func_9678(%var_9638: Tensor[(2, 1, 4), float32], %var_9639: Tensor[(2, 4, 4), float32]) -> (Tensor[(2, 4, 4), float32],) {
  %577 = cast(%var_9638, dtype="float32") /* ty=Tensor[(2, 1, 4), float32] */;
  %578 = cast(%var_9639, dtype="float32") /* ty=Tensor[(2, 4, 4), float32] */;
  %579 = multiply(%577, %578) /* ty=Tensor[(2, 4, 4), float32] */;
  (%579,)
}

def @func_11546() -> Tensor[(?, 16, 11), int32] {
  %580 = @func_6110() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
  %580.2
}

def @func_4950() -> Tensor[(?, 16, 11), float64] {
  %581 = @func_1339() /* ty=(Tensor[(?, 16, 11), float64],) */;
  %581.0
}

def @func_10416(%var_10411: Tensor[(1, 16, 11), int32]) -> (Tensor[(?, 16, 11), float64],) {
  %582 = @func_1243() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) */;
  %583 = %582.0;
  %584 = cast(%var_10411, dtype="float64") /* ty=Tensor[(1, 16, 11), float64] */;
  %585 = shape_of(%583, dtype="int32") /* ty=Tensor[(3), int32] */;
  %586 = cast(%583, dtype="float64") /* ty=Tensor[(?, 16, 11), float64] */;
  %587 = dyn.reshape(%584, %585, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %588 = divide(%586, %587) /* ty=Tensor[(?, 16, 11), float64] */;
  (%588,)
}

def @func_12027(%var_12013: Tensor[(12, 16, 11), float32]) -> (Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32], Tensor[(12, 16, 11), bool], Tensor[(?, 16, 11), float32]) {
  %589 = @func_4770() /* ty=(Tensor[(?, 16, 11), float64], Tensor[(14, 16, 11), float64]) */;
  %590 = @func_7372() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float32]) */;
  %591 = %590.0;
  %592 = cast(%591, dtype="bool") /* ty=Tensor[(?, 16, 11), bool] */;
  %593 = cast(%var_12013, dtype="bool") /* ty=Tensor[(12, 16, 11), bool] */;
  %594 = @func_9427() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(14, 16, 11), float64]) */;
  %595 = %589.0;
  %596 = @func_8842() /* ty=Tensor[(?, 16, 11), int32] */;
  %597 = greater(%592, %593) /* ty=Tensor[(12, 16, 11), bool] */;
  %598 = %594.0;
  (%595, %596, %597, %598)
}

def @func_3758() -> Tensor[(?, 16, 11), bool] {
  @func_3623() /* ty=Tensor[(?, 16, 11), bool] */
}

def @func_3802() -> (Tensor[(14, 16, 11), float64], Tensor[(14, 16, 11), float64]) {
  %599 = @func_3405() /* ty=(Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
  %600 = @func_1713() /* ty=(Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), float64]) */;
  %601 = %599.0;
  %602 = %600.0;
  (%601, %602)
}

def @func_3961(%var_3951: Tensor[(6, 13, 13), bool]) -> (Tensor[(6, 13, 13), bool], Tensor[(?, 16, 11), float32]) {
  %603 = cast(meta[relay.Constant][30] /* ty=Tensor[(6, 1, 13), bool] */, dtype="bool") /* ty=Tensor[(6, 1, 13), bool] */;
  %604 = cast(%var_3951, dtype="bool") /* ty=Tensor[(6, 13, 13), bool] */;
  %605 = @func_3424() /* ty=(Tensor[(?, 16, 11), float32],) */;
  %606 = logical_or(%603, %604) /* ty=Tensor[(6, 13, 13), bool] */;
  %607 = %605.0;
  (%606, %607)
}

def @func_10665() -> Tensor[(?, 16, 11), uint64] {
  %608 = @func_3184() /* ty=(Tensor[(?, 16, 11), uint64], Tensor[(?, 16, 11), float64]) */;
  %608.0
}

def @func_4518() -> (Tensor[(?, 16, 11), float32], Tensor[(1014), bool], Tensor[(6, 13, 13), bool]) {
  %609 = @func_2614() /* ty=(Tensor[(?, 16, 11), float32],) */;
  %610 = cast(meta[relay.Constant][31] /* ty=Tensor[(1014), bool] */, dtype="bool") /* ty=Tensor[(1014), bool] */;
  %611 = reshape(%610, newshape=[6, 13, 13]) /* ty=Tensor[(6, 13, 13), bool] */;
  %612 = @func_3961(%611) /* ty=(Tensor[(6, 13, 13), bool], Tensor[(?, 16, 11), float32]) */;
  %613 = %612.0;
  %614 = cast(%613, dtype="float32") /* ty=Tensor[(6, 13, 13), float32] */;
  %615 = sqrt(%614) /* ty=Tensor[(6, 13, 13), float32] */;
  %616 = cast(%613, dtype="uint32") /* ty=Tensor[(6, 13, 13), uint32] */;
  %617 = shape_of(%615, dtype="int32") /* ty=Tensor[(3), int32] */;
  %618 = cast(%615, dtype="uint32") /* ty=Tensor[(6, 13, 13), uint32] */;
  %619 = dyn.reshape(%616, %617, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %620 = left_shift(%618, %619) /* ty=Tensor[(6, 13, 13), uint32] */;
  %621 = cast(%620, dtype="bool") /* ty=Tensor[(6, 13, 13), bool] */;
  %622 = shape_of(%615, dtype="int32") /* ty=Tensor[(3), int32] */;
  %623 = cast(%615, dtype="bool") /* ty=Tensor[(6, 13, 13), bool] */;
  %624 = dyn.reshape(%621, %622, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %625 = %609.0;
  %626 = greater_equal(%623, %624) /* ty=Tensor[(6, 13, 13), bool] */;
  (%625, meta[relay.Constant][31] /* ty=Tensor[(1014), bool] */, %626)
}

def @func_6515() -> (Tensor[(?, 16, 11), bool],) {
  %627 = @func_3879() /* ty=Tensor[(?, 16, 11), bool] */;
  (%627,)
}

def @func_1549() -> (Tensor[(?, 16, 11), int32], Tensor[(270), float64], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), uint64], Tensor[(?, 16, 11), float32]) {
  %628 = @func_747() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %629 = @func_584() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %630 = %629.0;
  %631 = cast(meta[relay.Constant][32] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
  %632 = reshape(%631, newshape=[1, 270]) /* ty=Tensor[(1, 270), float64] */;
  %633 = @func_1309(%632) /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(15, 3, 6), float64], Tensor[(1, 270), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */;
  %634 = %633.5;
  %635 = cast(%634, dtype="float32") /* ty=Tensor[(?, 16, 11), float32] */;
  %636 = shape_of(%630, dtype="int32") /* ty=Tensor[(3), int32] */;
  %637 = cast(%630, dtype="float32") /* ty=Tensor[(?, 16, 11), float32] */;
  %638 = dyn.reshape(%635, %636, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %639 = cast(%634, dtype="uint64") /* ty=Tensor[(?, 16, 11), uint64] */;
  %640 = shape_of(%630, dtype="int32") /* ty=Tensor[(3), int32] */;
  %641 = cast(%630, dtype="uint64") /* ty=Tensor[(?, 16, 11), uint64] */;
  %642 = dyn.reshape(%639, %640, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %643 = @func_854() /* ty=(Tensor[(?, 16, 11), float32],) */;
  %644 = %628.0;
  %645 = @func_1211() /* ty=Tensor[(?, 16, 11), int32] */;
  %646 = multiply(%637, %638) /* ty=Tensor[(?, 16, 11), float32] */;
  %647 = subtract(%641, %642) /* ty=Tensor[(?, 16, 11), uint64] */;
  %648 = %643.0;
  (%644, meta[relay.Constant][32] /* ty=Tensor[(270), float64] */, %645, %646, %647, %648)
}

def @func_3143(%var_3077: Tensor[(4, 16, 11), int32]) -> (Tensor[(?, 13, 12), uint64], Tensor[(4, 16, 11), float32], Tensor[(4, 16, 11), float64], Tensor[(?, 13, 12), uint64], Tensor[(?, 16, 11), int32]) {
  %649 = @func_1814() /* ty=(Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
  %650 = %649.1;
  %651 = cast(%650, dtype="float32") /* ty=Tensor[(?, 16, 11), float32] */;
  %652 = cast(%var_3077, dtype="float32") /* ty=Tensor[(4, 16, 11), float32] */;
  %653 = cast(%var_3077, dtype="float64") /* ty=Tensor[(4, 16, 11), float64] */;
  %654 = @func_1800() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
  %655 = @func_2969() /* ty=Tensor[(?, 13, 12), uint64] */;
  %656 = power(%651, %652) /* ty=Tensor[(4, 16, 11), float32] */;
  %657 = log10(%653) /* ty=Tensor[(4, 16, 11), float64] */;
  %658 = @func_2969() /* ty=Tensor[(?, 13, 12), uint64] */;
  %659 = %654.0;
  (%655, %656, %657, %658, %659)
}

def @func_8054() -> Tensor[(?, 16, 11), bool] {
  %660 = @func_6515() /* ty=(Tensor[(?, 16, 11), bool],) */;
  %660.0
}

def @func_6427() -> Tensor[(?, 16, 11), float32] {
  @func_5995() /* ty=Tensor[(?, 16, 11), float32] */
}

def @func_5561() -> (Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), bool]) {
  %661 = @func_2894() /* ty=(Tensor[(?, 16, 11), float32],) */;
  %662 = %661.0;
  %663 = @func_3879() /* ty=Tensor[(?, 16, 11), bool] */;
  (%662, %663)
}

def @func_1309(%var_1298: Tensor[(1, 270), float64]) -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(15, 3, 6), float64], Tensor[(1, 270), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) {
  %664 = @func_747() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %665 = @func_1243() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) */;
  %666 = cast(%var_1298, dtype="float64") /* ty=Tensor[(1, 270), float64] */;
  %667 = cast(%var_1298, dtype="float64") /* ty=Tensor[(1, 270), float64] */;
  %668 = reshape(%666, newshape=[15, 3, 6]) /* ty=Tensor[(15, 3, 6), float64] */;
  %669 = reshape(%667, newshape=[15, 3, 6]) /* ty=Tensor[(15, 3, 6), float64] */;
  %670 = @func_447(%668, %669) /* ty=(Tensor[(15, 3, 6), float64], Tensor[(15, 3, 6), float64]) */;
  %671 = @func_1094() /* ty=(Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64]) */;
  %672 = %671.2;
  %673 = @func_704() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %674 = %673.0;
  %675 = cast(%674, dtype="float32") /* ty=Tensor[(?, 16, 11), float32] */;
  %676 = shape_of(%672, dtype="int32") /* ty=Tensor[(3), int32] */;
  %677 = cast(%672, dtype="float32") /* ty=Tensor[(?, 16, 11), float32] */;
  %678 = dyn.reshape(%675, %676, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %679 = @func_916() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %680 = %664.0;
  %681 = %665.0;
  %682 = %670.0;
  %683 = power(%677, %678) /* ty=Tensor[(?, 16, 11), float32] */;
  %684 = %679.0;
  (%680, %681, %682, %var_1298, %683, %684)
}

def @func_7794() -> Tensor[(?, 16, 11), int32] {
  @func_1205() /* ty=Tensor[(?, 16, 11), int32] */
}

def @func_6065() -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) {
  %685 = @func_2113() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %686 = %685.0;
  %687 = @func_964() /* ty=Tensor[(?, 16, 11), float64] */;
  (%686, %687)
}

def @func_5995() -> Tensor[(?, 16, 11), float32] {
  @func_1878() /* ty=Tensor[(?, 16, 11), float32] */
}

def @func_6328() -> (Tensor[(?, 16, 11), int8],) {
  %688 = @func_3941() /* ty=Tensor[(?, 16, 11), int8] */;
  (%688,)
}

def @func_2113() -> (Tensor[(?, 16, 11), int32],) {
  %689 = @func_1836() /* ty=Tensor[(?, 16, 11), int32] */;
  (%689,)
}

def @func_6487() -> (Tensor[(?, 16, 11), int32], Tensor[(15, 1), float32], float32, Tensor[(15), float32]) {
  %690 = @func_2728() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %691 = cast(-6.60433f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %692 = cast(meta[relay.Constant][33] /* ty=Tensor[(15), float32] */, dtype="float32") /* ty=Tensor[(15), float32] */;
  %693 = reshape(%691, newshape=[]) /* ty=float32 */;
  %694 = reshape(%692, newshape=[15, 1]) /* ty=Tensor[(15, 1), float32] */;
  %695 = @func_5569(%693, %694) /* ty=(Tensor[(15, 1), float32],) */;
  %696 = %690.0;
  %697 = %695.0;
  (%696, %697, -6.60433f /* ty=float32 */, meta[relay.Constant][33] /* ty=Tensor[(15), float32] */)
}

def @func_6881() -> (Tensor[(?, 16, 11), int32],) {
  %698 = @func_1205() /* ty=Tensor[(?, 16, 11), int32] */;
  (%698,)
}

def @func_6110() -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) {
  %699 = @func_5159() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %700 = @func_1651() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64]) */;
  %701 = %699.0;
  %702 = %700.2;
  %703 = @func_1205() /* ty=Tensor[(?, 16, 11), int32] */;
  (%701, %702, %703)
}

def @func_3729() -> Tensor[(?, 16, 11), float32] {
  %704 = @func_3307() /* ty=(Tensor[(?, 16, 11), float32],) */;
  %704.0
}

def @func_3623() -> Tensor[(?, 16, 11), bool] {
  %705 = @func_1094() /* ty=(Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64]) */;
  %705.0
}

def @func_2057() -> Tensor[(?, 16, 11), float64] {
  %706 = @func_1339() /* ty=(Tensor[(?, 16, 11), float64],) */;
  %706.0
}

def @func_8260(%var_8257: Tensor[(240), float32]) -> (Tensor[(?, 16, 11), int32], Tensor[(240), float32], Tensor[(240), float32]) {
  %707 = @func_5067() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */;
  %708 = cast(%var_8257, dtype="float32") /* ty=Tensor[(240), float32] */;
  %709 = reshape(%708, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %710 = @func_6974(%709) /* ty=(Tensor[(?, 16, 11), float32], Tensor[(14, 16, 11), float64], Tensor[(432), int16], Tensor[(15, 10, 1), float32], Tensor[(150), float32], Tensor[(240), float32], Tensor[(?, 16, 11), float64]) */;
  %711 = %707.1;
  %712 = %710.5;
  (%711, %712, %var_8257)
}

def @func_9046() -> Tensor[(?, 16, 11), int32] {
  %713 = @func_8171() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %713.0
}

def @func_1878() -> Tensor[(?, 16, 11), float32] {
  %714 = @func_1651() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64]) */;
  %714.1
}

def @func_10570() -> (Tensor[(?, 16, 11), int32],) {
  %715 = @func_1561() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %716 = %715.0;
  (%716,)
}

def @func_5067() -> (Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) {
  %717 = @func_3307() /* ty=(Tensor[(?, 16, 11), float32],) */;
  %718 = %717.0;
  %719 = @func_1836() /* ty=Tensor[(?, 16, 11), int32] */;
  (%718, %719)
}

def @func_3307() -> (Tensor[(?, 16, 11), float32],) {
  %720 = @func_1549() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(270), float64], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), uint64], Tensor[(?, 16, 11), float32]) */;
  %721 = %720.3;
  (%721,)
}

def @func_3941() -> Tensor[(?, 16, 11), int8] {
  %722 = @func_2720() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), int32], Tensor[(270), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */;
  %723 = %722.1;
  %724 = @func_1339() /* ty=(Tensor[(?, 16, 11), float64],) */;
  %725 = %724.0;
  %726 = cast(%725, dtype="int8") /* ty=Tensor[(?, 16, 11), int8] */;
  %727 = shape_of(%723, dtype="int32") /* ty=Tensor[(3), int32] */;
  %728 = cast(%723, dtype="int8") /* ty=Tensor[(?, 16, 11), int8] */;
  %729 = dyn.reshape(%726, %727, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  right_shift(%728, %729) /* ty=Tensor[(?, 16, 11), int8] */
}

def @func_11108() -> (Tensor[(7, 12, 5), float64], Tensor[(420), uint32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64], Tensor[(7, 5, 16), float64], Tensor[(11, 12, 7), float32], Tensor[(924), float32]) {
  %730 = cast(meta[relay.Constant][34] /* ty=Tensor[(420), uint32] */, dtype="uint32") /* ty=Tensor[(420), uint32] */;
  %731 = cast(meta[relay.Constant][34] /* ty=Tensor[(420), uint32] */, dtype="uint32") /* ty=Tensor[(420), uint32] */;
  %732 = reshape(%730, newshape=[7, 12, 5]) /* ty=Tensor[(7, 12, 5), uint32] */;
  %733 = reshape(%731, newshape=[7, 12, 5]) /* ty=Tensor[(7, 12, 5), uint32] */;
  %734 = @func_6475(%732, %733) /* ty=(Tensor[(7, 12, 5), bool], Tensor[(?, 16, 11), bool], Tensor[(7, 12, 5), float64]) */;
  %735 = @func_2894() /* ty=(Tensor[(?, 16, 11), float32],) */;
  %736 = %735.0;
  %737 = @func_7535() /* ty=(Tensor[(?, 16, 11), int8],) */;
  %738 = %737.0;
  %739 = cast(%738, dtype="float64") /* ty=Tensor[(?, 16, 11), float64] */;
  %740 = shape_of(%736, dtype="int32") /* ty=Tensor[(3), int32] */;
  %741 = cast(%736, dtype="float64") /* ty=Tensor[(?, 16, 11), float64] */;
  %742 = dyn.reshape(%739, %740, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %743 = @func_1549() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(270), float64], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), uint64], Tensor[(?, 16, 11), float32]) */;
  %744 = @func_1094() /* ty=(Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64]) */;
  %745 = @func_9827() /* ty=(Tensor[(7, 5, 16), float64],) */;
  %746 = cast(meta[relay.Constant][35] /* ty=Tensor[(924), float32] */, dtype="float32") /* ty=Tensor[(924), float32] */;
  %747 = reshape(%746, newshape=[11, 12, 7]) /* ty=Tensor[(11, 12, 7), float32] */;
  %748 = %734.2;
  %749 = minimum(%741, %742) /* ty=Tensor[(?, 16, 11), float64] */;
  %750 = %743.5;
  %751 = %744.2;
  %752 = %745.0;
  %753 = @func_8807(%747) /* ty=Tensor[(11, 12, 7), float32] */;
  (%748, meta[relay.Constant][34] /* ty=Tensor[(420), uint32] */, %749, %750, %751, %752, %753, meta[relay.Constant][35] /* ty=Tensor[(924), float32] */)
}

def @func_12284(%var_12198: Tensor[(264, 2), bool]) -> (Tensor[(?, 16, 11), bool], Tensor[(3, 16, 11), float64], Tensor[(264, 2), bool], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(12, 16, 11), float32], Tensor[(?, 16, 11), float32], Tensor[(15, 1), float32], float32, Tensor[(15), float32], Tensor[(?, 16, 11), int32]) {
  %754 = @func_6817() /* ty=(Tensor[(?, 16, 11), bool],) */;
  %755 = cast(%var_12198, dtype="bool") /* ty=Tensor[(264, 2), bool] */;
  %756 = reshape(%755, newshape=[3, 16, 11]) /* ty=Tensor[(3, 16, 11), bool] */;
  %757 = @func_9287(%756) /* ty=(Tensor[(3, 16, 11), uint64], Tensor[(3, 16, 11), float64], Tensor[(?, 16, 11), float64], Tensor[(150), float32], Tensor[(240), float32]) */;
  %758 = @func_7823() /* ty=(Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), int32]) */;
  %759 = @func_5457() /* ty=(Tensor[(12, 16, 11), float32],) */;
  %760 = @func_5236() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32]) */;
  %761 = cast(-3.74868f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %762 = cast(meta[relay.Constant][36] /* ty=Tensor[(15), float32] */, dtype="float32") /* ty=Tensor[(15), float32] */;
  %763 = reshape(%761, newshape=[]) /* ty=float32 */;
  %764 = reshape(%762, newshape=[15, 1]) /* ty=Tensor[(15, 1), float32] */;
  %765 = @func_5569(%763, %764) /* ty=(Tensor[(15, 1), float32],) */;
  %766 = @func_10806() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32]) */;
  %767 = %754.0;
  %768 = %757.1;
  %769 = @func_8215() /* ty=Tensor[(?, 16, 11), int32] */;
  %770 = %758.1;
  %771 = %759.0;
  %772 = %760.1;
  %773 = %765.0;
  %774 = %766.1;
  (%767, %768, %var_12198, %769, %770, %771, %772, %773, -3.74868f /* ty=float32 */, meta[relay.Constant][36] /* ty=Tensor[(15), float32] */, %774)
}

def @func_10806() -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32]) {
  %775 = @func_6110() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
  %776 = @func_8215() /* ty=Tensor[(?, 16, 11), int32] */;
  %777 = %775.2;
  (%776, %777)
}

def @func_2604(%var_2596: Tensor[(1, 16, 11), int32]) -> Tensor[(?, 16, 11), bool] {
  %778 = @func_584() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %779 = %778.0;
  %780 = cast(%var_2596, dtype="bool") /* ty=Tensor[(1, 16, 11), bool] */;
  %781 = shape_of(%779, dtype="int32") /* ty=Tensor[(3), int32] */;
  %782 = cast(%779, dtype="bool") /* ty=Tensor[(?, 16, 11), bool] */;
  %783 = dyn.reshape(%780, %781, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%782, %783) /* ty=Tensor[(?, 16, 11), bool] */
}

def @func_11754(%var_11747: Tensor[(924), float32]) -> (Tensor[(?, 16, 11), float32], Tensor[(11, 12, 7), float32], Tensor[(924), float32]) {
  %784 = @func_1094() /* ty=(Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64]) */;
  %785 = cast(%var_11747, dtype="float32") /* ty=Tensor[(924), float32] */;
  %786 = reshape(%785, newshape=[11, 12, 7]) /* ty=Tensor[(11, 12, 7), float32] */;
  %787 = %784.1;
  %788 = @func_8807(%786) /* ty=Tensor[(11, 12, 7), float32] */;
  (%787, %788, %var_11747)
}

def @func_11800() -> (Tensor[(15), float32], Tensor[(14, 16, 11), float64]) {
  %789 = @func_3802() /* ty=(Tensor[(14, 16, 11), float64], Tensor[(14, 16, 11), float64]) */;
  %790 = @func_6770() /* ty=Tensor[(15), float32] */;
  %791 = %789.1;
  (%790, %791)
}

def @func_3424() -> (Tensor[(?, 16, 11), float32],) {
  %792 = @func_1094() /* ty=(Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64]) */;
  %793 = %792.1;
  (%793,)
}

def @func_1800() -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) {
  %794 = @func_1561() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %795 = @func_1339() /* ty=(Tensor[(?, 16, 11), float64],) */;
  %796 = @func_916() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %797 = %794.0;
  %798 = %795.0;
  %799 = %796.0;
  (%797, %798, %799)
}

def @func_11437() -> (Tensor[(4, 10, 2), bool],) {
  %800 = @func_8620() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(4, 10, 2), bool], Tensor[(20), uint32], Tensor[(14, 16, 11), float64]) */;
  %801 = %800.1;
  (%801,)
}

def @func_5826() -> (Tensor[(150), float32], Tensor[(?, 16, 11), int32]) {
  %802 = @func_5650() /* ty=(Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), float64], Tensor[(150), float32], Tensor[(?, 16, 11), bool]) */;
  %803 = %802.2;
  %804 = @func_4256() /* ty=Tensor[(?, 16, 11), int32] */;
  (%803, %804)
}

def @func_7232(%var_7182: Tensor[(9, 16, 11), float32], %var_7230: Tensor[(528), int32]) -> (Tensor[(9, 16, 11), bool], Tensor[(3, 16, 11), float32], Tensor[(528), int32]) {
  %805 = @func_2614() /* ty=(Tensor[(?, 16, 11), float32],) */;
  %806 = %805.0;
  %807 = cast(%806, dtype="float64") /* ty=Tensor[(?, 16, 11), float64] */;
  %808 = cast(%var_7182, dtype="float64") /* ty=Tensor[(9, 16, 11), float64] */;
  %809 = mod(%807, %808) /* ty=Tensor[(9, 16, 11), float64] */;
  %810 = cast(%809, dtype="bool") /* ty=Tensor[(9, 16, 11), bool] */;
  %811 = cast(%806, dtype="bool") /* ty=Tensor[(?, 16, 11), bool] */;
  %812 = cast(%var_7230, dtype="int32") /* ty=Tensor[(528), int32] */;
  %813 = reshape(%812, newshape=[3, 16, 11]) /* ty=Tensor[(3, 16, 11), int32] */;
  %814 = @func_7022(%813) /* ty=(Tensor[(3, 16, 11), float32],) */;
  %815 = greater_equal(%810, %811) /* ty=Tensor[(9, 16, 11), bool] */;
  %816 = %814.0;
  (%815, %816, %var_7230)
}

def @main(%var_12506: Tensor[(11, 13, 16), float32]) -> (Tensor[(11, 13, 16), float32], Tensor[(11, 13, 16), float32]) {
  %817 = cast(%var_12506, dtype="float32") /* ty=Tensor[(11, 13, 16), float32] */;
  %818 = cast(%var_12506, dtype="float32") /* ty=Tensor[(11, 13, 16), float32] */;
  %819 = asin(%817) /* ty=Tensor[(11, 13, 16), float32] */;
  %820 = tan(%818) /* ty=Tensor[(11, 13, 16), float32] */;
  (%819, %820)
}

def @func_7535() -> (Tensor[(?, 16, 11), int8],) {
  %821 = @func_6328() /* ty=(Tensor[(?, 16, 11), int8],) */;
  %822 = %821.0;
  (%822,)
}

def @func_8215() -> Tensor[(?, 16, 11), int32] {
  %823 = @func_1243() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) */;
  %823.0
}

def @func_7423() -> Tensor[(?, 16, 11), bool] {
  %824 = @func_6427() /* ty=Tensor[(?, 16, 11), float32] */;
  %825 = @func_4518() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(1014), bool], Tensor[(6, 13, 13), bool]) */;
  %826 = %825.0;
  %827 = cast(%826, dtype="bool") /* ty=Tensor[(?, 16, 11), bool] */;
  %828 = shape_of(%824, dtype="int32") /* ty=Tensor[(3), int32] */;
  %829 = cast(%824, dtype="bool") /* ty=Tensor[(?, 16, 11), bool] */;
  %830 = dyn.reshape(%827, %828, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%829, %830) /* ty=Tensor[(?, 16, 11), bool] */
}

def @func_8790() -> (Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float32]) {
  %831 = @func_6653() /* ty=(Tensor[(?, 16, 11), float64],) */;
  %832 = %831.0;
  %833 = @func_6427() /* ty=Tensor[(?, 16, 11), float32] */;
  %834 = @func_3729() /* ty=Tensor[(?, 16, 11), float32] */;
  (%832, %833, %834)
}

def @func_12189() -> (Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64], Tensor[(240), float32]) {
  %835 = @func_10615() /* ty=(Tensor[(?, 16, 11), int8],) */;
  %836 = @func_11148() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(14, 16, 11), float64]) */;
  %837 = cast(meta[relay.Constant][37] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %838 = reshape(%837, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %839 = @func_6974(%838) /* ty=(Tensor[(?, 16, 11), float32], Tensor[(14, 16, 11), float64], Tensor[(432), int16], Tensor[(15, 10, 1), float32], Tensor[(150), float32], Tensor[(240), float32], Tensor[(?, 16, 11), float64]) */;
  %840 = %835.0;
  %841 = @func_10866() /* ty=Tensor[(?, 16, 11), float64] */;
  %842 = %836.0;
  %843 = %839.6;
  (%840, %841, %842, %843, meta[relay.Constant][37] /* ty=Tensor[(240), float32] */)
}

def @func_9923(%var_9897: Tensor[(13, 4, 7), float64]) -> (Tensor[(13, 4, 7), float64], Tensor[(7, 15, 10), float64], Tensor[(1050), float64]) {
  %844 = cast(%var_9897, dtype="float64") /* ty=Tensor[(13, 4, 7), float64] */;
  %845 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(13, 4, 7), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %846 = cast(meta[relay.Constant][38] /* ty=Tensor[(13, 4, 7), float64] */, dtype="float64") /* ty=Tensor[(13, 4, 7), float64] */;
  %847 = dyn.reshape(%844, %845, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %848 = cast(meta[relay.Constant][39] /* ty=Tensor[(1050), float64] */, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %849 = reshape(%848, newshape=[7, 15, 10]) /* ty=Tensor[(7, 15, 10), float64] */;
  %850 = @func_3228(%849) /* ty=(Tensor[(7, 15, 10), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */;
  %851 = floor_mod(%846, %847) /* ty=Tensor[(13, 4, 7), float64] */;
  %852 = %850.0;
  (%851, %852, meta[relay.Constant][39] /* ty=Tensor[(1050), float64] */)
}

def @func_7523() -> (Tensor[(?, 16, 11), int32],) {
  %853 = @func_3262() /* ty=(Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
  %854 = %853.1;
  (%854,)
}

def @func_9808(%var_9768: float32, %var_9769: Tensor[(15), float32]) -> (Tensor[(15, 1), float32], Tensor[(15), float32], Tensor[(?, 16, 11), float64]) {
  %855 = cast(%var_9768, dtype="float32") /* ty=float32 */;
  %856 = cast(%var_9769, dtype="float32") /* ty=Tensor[(15), float32] */;
  %857 = reshape(%855, newshape=[]) /* ty=float32 */;
  %858 = reshape(%856, newshape=[15, 1]) /* ty=Tensor[(15, 1), float32] */;
  %859 = @func_5569(%857, %858) /* ty=(Tensor[(15, 1), float32],) */;
  %860 = @func_1243() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) */;
  %861 = %860.1;
  %862 = cast(%861, dtype="float64") /* ty=Tensor[(?, 16, 11), float64] */;
  %863 = cast(%var_9768, dtype="float64") /* ty=float64 */;
  %864 = %859.0;
  %865 = floor_mod(%862, %863) /* ty=Tensor[(?, 16, 11), float64] */;
  (%864, %var_9769, %865)
}

def @func_7115() -> (Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) {
  %866 = @func_621() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %867 = @func_4950() /* ty=Tensor[(?, 16, 11), float64] */;
  %868 = %866.0;
  (%867, %868)
}

def @func_2728() -> (Tensor[(?, 16, 11), int32],) {
  %869 = @func_1211() /* ty=Tensor[(?, 16, 11), int32] */;
  (%869,)
}

def @func_2720() -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), int32], Tensor[(270), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) {
  %870 = @func_1243() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) */;
  %871 = @func_1549() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(270), float64], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), uint64], Tensor[(?, 16, 11), float32]) */;
  %872 = @func_1094() /* ty=(Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64]) */;
  %873 = @func_747() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %874 = @func_1549() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(270), float64], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), uint64], Tensor[(?, 16, 11), float32]) */;
  %875 = @func_2614() /* ty=(Tensor[(?, 16, 11), float32],) */;
  %876 = @func_621() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %877 = @func_1211() /* ty=Tensor[(?, 16, 11), int32] */;
  %878 = %870.1;
  %879 = %871.0;
  %880 = %872.0;
  %881 = %873.0;
  %882 = %874.1;
  %883 = %875.0;
  %884 = %876.0;
  (%877, %878, %879, %880, %881, %882, %883, %884)
}

def @func_8956() -> Tensor[(?, 16, 11), int32] {
  @func_1836() /* ty=Tensor[(?, 16, 11), int32] */
}

def @func_12363() -> Tensor[(5, 16, 11), float64] {
  %885 = @func_6110() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
  %886 = %885.2;
  %887 = cast(%886, dtype="uint64") /* ty=Tensor[(?, 16, 11), uint64] */;
  %888 = cast(meta[relay.Constant][40] /* ty=Tensor[(5, 16, 11), int32] */, dtype="uint64") /* ty=Tensor[(5, 16, 11), uint64] */;
  %889 = subtract(%887, %888) /* ty=Tensor[(5, 16, 11), uint64] */;
  %890 = cast(%886, dtype="float64") /* ty=Tensor[(?, 16, 11), float64] */;
  %891 = cast(%889, dtype="float64") /* ty=Tensor[(5, 16, 11), float64] */;
  maximum(%890, %891) /* ty=Tensor[(5, 16, 11), float64] */
}

def @func_1243() -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) {
  %892 = @func_747() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %893 = @func_1094() /* ty=(Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64]) */;
  %894 = %892.0;
  %895 = %893.2;
  (%894, %895)
}

def @func_6576(%var_6557: Tensor[(11, 16, 11), bool]) -> (Tensor[(?, 16, 11), float64], Tensor[(11, 16, 11), bool]) {
  %896 = @func_2835() /* ty=(Tensor[(?, 16, 11), float64],) */;
  %897 = @func_1205() /* ty=Tensor[(?, 16, 11), int32] */;
  %898 = cast(%897, dtype="bool") /* ty=Tensor[(?, 16, 11), bool] */;
  %899 = cast(meta[relay.Constant][41] /* ty=Tensor[(11, 16, 11), int32] */, dtype="bool") /* ty=Tensor[(11, 16, 11), bool] */;
  %900 = less(%898, %899) /* ty=Tensor[(11, 16, 11), bool] */;
  %901 = cast(%var_6557, dtype="bool") /* ty=Tensor[(11, 16, 11), bool] */;
  %902 = shape_of(%900, dtype="int32") /* ty=Tensor[(3), int32] */;
  %903 = cast(%900, dtype="bool") /* ty=Tensor[(11, 16, 11), bool] */;
  %904 = dyn.reshape(%901, %902, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %905 = %896.0;
  %906 = logical_and(%903, %904) /* ty=Tensor[(11, 16, 11), bool] */;
  (%905, %906)
}

def @func_7908() -> (Tensor[(?, 16, 11), int32],) {
  %907 = @func_4910() /* ty=(Tensor[(1, 5, 2), float64], Tensor[(?, 16, 11), int32]) */;
  %908 = %907.1;
  (%908,)
}

def @func_3006() -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) {
  %909 = @func_2450() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(2250), float64], Tensor[(?, 16, 11), float64]) */;
  %910 = @func_2894() /* ty=(Tensor[(?, 16, 11), float32],) */;
  %911 = @func_2113() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %912 = %909.1;
  %913 = %910.0;
  %914 = %911.0;
  (%912, %913, %914)
}

def @func_8519() -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(1936), bool]) {
  %915 = @func_2728() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %916 = cast(meta[relay.Constant][42] /* ty=Tensor[(1936), bool] */, dtype="bool") /* ty=Tensor[(1936), bool] */;
  %917 = reshape(%916, newshape=[11, 16, 11]) /* ty=Tensor[(11, 16, 11), bool] */;
  %918 = @func_6576(%917) /* ty=(Tensor[(?, 16, 11), float64], Tensor[(11, 16, 11), bool]) */;
  %919 = @func_7794() /* ty=Tensor[(?, 16, 11), int32] */;
  %920 = %915.0;
  %921 = %918.0;
  (%919, %920, %921, meta[relay.Constant][42] /* ty=Tensor[(1936), bool] */)
}

def @func_8461() -> (Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32]) {
  %922 = @func_7535() /* ty=(Tensor[(?, 16, 11), int8],) */;
  %923 = @func_7535() /* ty=(Tensor[(?, 16, 11), int8],) */;
  %924 = @func_8171() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %925 = @func_2728() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %926 = %922.0;
  %927 = %923.0;
  %928 = %924.0;
  %929 = %925.0;
  (%926, %927, %928, %929)
}

def @func_7754() -> (Tensor[(5, 16, 11), int32], Tensor[(6, 13, 13), bool], Tensor[(150), float32], Tensor[(24, 10), float32]) {
  %930 = @func_5236() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32]) */;
  %931 = %930.0;
  %932 = cast(%931, dtype="int32") /* ty=Tensor[(?, 16, 11), int32] */;
  %933 = cast(meta[relay.Constant][43] /* ty=Tensor[(5, 16, 11), int32] */, dtype="int32") /* ty=Tensor[(5, 16, 11), int32] */;
  %934 = cast(meta[relay.Constant][44] /* ty=Tensor[(150), float32] */, dtype="float32") /* ty=Tensor[(150), float32] */;
  %935 = cast(meta[relay.Constant][45] /* ty=Tensor[(24, 10), float32] */, dtype="float32") /* ty=Tensor[(24, 10), float32] */;
  %936 = reshape(%934, newshape=[150, 1]) /* ty=Tensor[(150, 1), float32] */;
  %937 = reshape(%935, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %938 = @func_5785(%936, %937) /* ty=(Tensor[(?, 16, 11), int32], Tensor[(15, 10, 1), float32], Tensor[(150, 1), float32], Tensor[(?, 16, 11), int32], Tensor[(12, 4, 5), float32], Tensor[(240), float32], Tensor[(?, 16, 11), float64], Tensor[(6, 13, 13), bool]) */;
  %939 = logical_xor(%932, %933) /* ty=Tensor[(5, 16, 11), int32] */;
  %940 = %938.7;
  (%939, %940, meta[relay.Constant][44] /* ty=Tensor[(150), float32] */, meta[relay.Constant][45] /* ty=Tensor[(24, 10), float32] */)
}

def @func_8230() -> Tensor[(?, 16, 11), int32] {
  %941 = @func_916() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %941.0
}

def @func_9460() -> Tensor[(?, 16, 11), float32] {
  %942 = @func_854() /* ty=(Tensor[(?, 16, 11), float32],) */;
  %942.0
}

def @func_8644() -> Tensor[(12, 16, 11), float32] {
  %943 = @func_8084() /* ty=(Tensor[(12, 16, 11), float32],) */;
  %943.0
}

def @func_3184() -> (Tensor[(?, 16, 11), uint64], Tensor[(?, 16, 11), float64]) {
  %944 = @func_1549() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(270), float64], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), uint64], Tensor[(?, 16, 11), float32]) */;
  %945 = @func_1243() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) */;
  %946 = %944.4;
  %947 = %945.1;
  (%946, %947)
}

def @func_7022(%var_7002: Tensor[(3, 16, 11), int32]) -> (Tensor[(3, 16, 11), float32],) {
  %948 = @func_1561() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %949 = %948.0;
  %950 = cast(%949, dtype="float32") /* ty=Tensor[(?, 16, 11), float32] */;
  %951 = cast(%var_7002, dtype="float32") /* ty=Tensor[(3, 16, 11), float32] */;
  %952 = power(%950, %951) /* ty=Tensor[(3, 16, 11), float32] */;
  (%952,)
}

def @func_5457() -> (Tensor[(12, 16, 11), float32],) {
  %953 = @func_3375() /* ty=(Tensor[(12, 16, 11), float32], Tensor[(?, 16, 11), bool]) */;
  %954 = %953.0;
  (%954,)
}

def @func_4410(%var_4364: Tensor[(3, 16, 13), int32], %var_4365: Tensor[(3, 16, 13), int32]) -> (Tensor[(?, 16, 11), float32], Tensor[(3, 16, 13), int16]) {
  %955 = @func_3307() /* ty=(Tensor[(?, 16, 11), float32],) */;
  %956 = cast(%var_4365, dtype="int32") /* ty=Tensor[(3, 16, 13), int32] */;
  %957 = shape_of(%var_4364, dtype="int32") /* ty=Tensor[(3), int32] */;
  %958 = cast(%var_4364, dtype="int32") /* ty=Tensor[(3, 16, 13), int32] */;
  %959 = dyn.reshape(%956, %957, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %960 = subtract(%958, %959) /* ty=Tensor[(3, 16, 13), int32] */;
  %961 = cast(%960, dtype="float64") /* ty=Tensor[(3, 16, 13), float64] */;
  %962 = tan(%961) /* ty=Tensor[(3, 16, 13), float64] */;
  %963 = cast(%960, dtype="int16") /* ty=Tensor[(3, 16, 13), int16] */;
  %964 = shape_of(%962, dtype="int32") /* ty=Tensor[(3), int32] */;
  %965 = cast(%962, dtype="int16") /* ty=Tensor[(3, 16, 13), int16] */;
  %966 = dyn.reshape(%963, %964, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %967 = %955.0;
  %968 = logical_xor(%965, %966) /* ty=Tensor[(3, 16, 13), int16] */;
  (%967, %968)
}

def @func_621() -> (Tensor[(?, 16, 11), int32],) {
  %969 = @func_584() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %970 = %969.0;
  (%970,)
}

def @func_11479(%var_11452: Tensor[(14, 96), uint16], %var_11472: Tensor[(14, 96), uint16]) -> (Tensor[(?, 16, 11), float64], Tensor[(7, 12, 16), uint16], Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), float32], Tensor[(14, 96), uint32]) {
  %971 = @func_2835() /* ty=(Tensor[(?, 16, 11), float64],) */;
  %972 = cast(%var_11452, dtype="uint16") /* ty=Tensor[(14, 96), uint16] */;
  %973 = cast(%var_11452, dtype="uint16") /* ty=Tensor[(14, 96), uint16] */;
  %974 = reshape(%972, newshape=[7, 12, 16]) /* ty=Tensor[(7, 12, 16), uint16] */;
  %975 = reshape(%973, newshape=[7, 12, 16]) /* ty=Tensor[(7, 12, 16), uint16] */;
  %976 = @func_9734(%974, %975) /* ty=(Tensor[(7, 12, 16), uint16],) */;
  %977 = @func_10718() /* ty=(Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), uint64], Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), bool]) */;
  %978 = @func_11148() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(14, 16, 11), float64]) */;
  %979 = cast(%var_11472, dtype="uint32") /* ty=Tensor[(14, 96), uint32] */;
  %980 = shape_of(%var_11452, dtype="int32") /* ty=Tensor[(2), int32] */;
  %981 = cast(%var_11452, dtype="uint32") /* ty=Tensor[(14, 96), uint32] */;
  %982 = dyn.reshape(%979, %980, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %983 = %971.0;
  %984 = %976.0;
  %985 = %977.2;
  %986 = %978.0;
  %987 = minimum(%981, %982) /* ty=Tensor[(14, 96), uint32] */;
  (%983, %984, %985, %986, %987)
}

def @func_8378(%var_8358: Tensor[(4, 7, 10), bool], %var_8359: Tensor[(4, 7, 10), bool]) -> (Tensor[(4, 7, 10), bool], Tensor[(?, 16, 11), int32]) {
  %988 = cast(%var_8359, dtype="bool") /* ty=Tensor[(4, 7, 10), bool] */;
  %989 = shape_of(%var_8358, dtype="int32") /* ty=Tensor[(3), int32] */;
  %990 = cast(%var_8358, dtype="bool") /* ty=Tensor[(4, 7, 10), bool] */;
  %991 = dyn.reshape(%988, %989, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %992 = @func_5826() /* ty=(Tensor[(150), float32], Tensor[(?, 16, 11), int32]) */;
  %993 = logical_or(%990, %991) /* ty=Tensor[(4, 7, 10), bool] */;
  %994 = %992.1;
  (%993, %994)
}

def @func_10520() -> (Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float32]) {
  %995 = @func_3307() /* ty=(Tensor[(?, 16, 11), float32],) */;
  %996 = @func_1651() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64]) */;
  %997 = %995.0;
  %998 = %996.1;
  (%997, %998)
}

def @func_3228(%var_3202: Tensor[(7, 15, 10), float64]) -> (Tensor[(7, 15, 10), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) {
  %999 = cast(%var_3202, dtype="float64") /* ty=Tensor[(7, 15, 10), float64] */;
  %1000 = @func_3006() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */;
  %1001 = @func_2728() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %1002 = log(%999) /* ty=Tensor[(7, 15, 10), float64] */;
  %1003 = %1000.1;
  %1004 = %1001.0;
  (%1002, %1003, %1004)
}

def @func_10944() -> Tensor[(15), float32] {
  @func_7949() /* ty=Tensor[(15), float32] */
}

def @func_10967() -> (Tensor[(15), float32], Tensor[(?, 16, 11), int32]) {
  %1005 = @func_8171() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %1006 = @func_6770() /* ty=Tensor[(15), float32] */;
  %1007 = %1005.0;
  (%1006, %1007)
}

def @func_11909(%var_11903: Tensor[(12, 60), float64]) -> (Tensor[(?, 16, 11), bool], Tensor[(90, 3), float64], Tensor[(270), float64], Tensor[(7, 15, 10), float64], Tensor[(1050, 1), float64], Tensor[(?, 16, 11), int32], Tensor[(1014), bool], Tensor[(12, 60), float64]) {
  %1008 = @func_10204() /* ty=(Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), bool], Tensor[(12, 16, 11), float32]) */;
  %1009 = cast(meta[relay.Constant][46] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
  %1010 = reshape(%1009, newshape=[90, 3]) /* ty=Tensor[(90, 3), float64] */;
  %1011 = @func_11247(%1010) /* ty=(Tensor[(?, 16, 11), float32], Tensor[(90, 3), float64], Tensor[(90, 3), int8]) */;
  %1012 = cast(meta[relay.Constant][47] /* ty=Tensor[(1050, 1), float64] */, dtype="float64") /* ty=Tensor[(1050, 1), float64] */;
  %1013 = reshape(%1012, newshape=[7, 15, 10]) /* ty=Tensor[(7, 15, 10), float64] */;
  %1014 = @func_3228(%1013) /* ty=(Tensor[(7, 15, 10), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */;
  %1015 = cast(meta[relay.Constant][47] /* ty=Tensor[(1050, 1), float64] */, dtype="float64") /* ty=Tensor[(1050, 1), float64] */;
  %1016 = @func_1800() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
  %1017 = cast(%var_11903, dtype="float64") /* ty=Tensor[(12, 60), float64] */;
  %1018 = reshape(%1017, newshape=[8, 9, 10]) /* ty=Tensor[(8, 9, 10), float64] */;
  %1019 = @func_10344(%1018) /* ty=(Tensor[(8, 9, 10), float64], Tensor[(?, 16, 11), float32], Tensor[(176), bool], Tensor[(4, 220), bool], Tensor[(1014), bool]) */;
  %1020 = %1008.4;
  %1021 = %1011.1;
  %1022 = %1014.0;
  %1023 = sqrt(%1015) /* ty=Tensor[(1050, 1), float64] */;
  %1024 = %1016.0;
  %1025 = %1019.4;
  (%1020, %1021, meta[relay.Constant][46] /* ty=Tensor[(270), float64] */, %1022, %1023, %1024, %1025, %var_11903)
}

def @func_4658(%var_4635: Tensor[(2, 16, 11), int32]) -> (Tensor[(15, 10, 15), bool], Tensor[(2250), float64], Tensor[(?, 16, 11), float64], Tensor[(7, 15, 10), float64], Tensor[(1050), float64], Tensor[(?, 16, 11), uint16], Tensor[(2, 16, 11), bool], Tensor[(?, 16, 11), float64]) {
  %1026 = cast(meta[relay.Constant][48] /* ty=Tensor[(2250), float64] */, dtype="float64") /* ty=Tensor[(2250), float64] */;
  %1027 = reshape(%1026, newshape=[15, 10, 15]) /* ty=Tensor[(15, 10, 15), float64] */;
  %1028 = @func_1610(%1027) /* ty=(Tensor[(15, 10, 15), bool], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
  %1029 = cast(meta[relay.Constant][49] /* ty=Tensor[(1050), float64] */, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %1030 = reshape(%1029, newshape=[7, 15, 10]) /* ty=Tensor[(7, 15, 10), float64] */;
  %1031 = @func_3228(%1030) /* ty=(Tensor[(7, 15, 10), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */;
  %1032 = @func_1800() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
  %1033 = %1032.2;
  %1034 = cast(%1033, dtype="float64") /* ty=Tensor[(?, 16, 11), float64] */;
  %1035 = cos(%1034) /* ty=Tensor[(?, 16, 11), float64] */;
  %1036 = @func_2728() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %1037 = %1036.0;
  %1038 = cast(%1037, dtype="uint16") /* ty=Tensor[(?, 16, 11), uint16] */;
  %1039 = shape_of(%1035, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1040 = cast(%1035, dtype="uint16") /* ty=Tensor[(?, 16, 11), uint16] */;
  %1041 = dyn.reshape(%1038, %1039, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1042 = cast(%1037, dtype="bool") /* ty=Tensor[(?, 16, 11), bool] */;
  %1043 = cast(%var_4635, dtype="bool") /* ty=Tensor[(2, 16, 11), bool] */;
  %1044 = @func_1339() /* ty=(Tensor[(?, 16, 11), float64],) */;
  %1045 = %1028.0;
  %1046 = @func_964() /* ty=Tensor[(?, 16, 11), float64] */;
  %1047 = %1031.0;
  %1048 = bitwise_and(%1040, %1041) /* ty=Tensor[(?, 16, 11), uint16] */;
  %1049 = not_equal(%1042, %1043) /* ty=Tensor[(2, 16, 11), bool] */;
  %1050 = %1044.0;
  (%1045, meta[relay.Constant][48] /* ty=Tensor[(2250), float64] */, %1046, %1047, meta[relay.Constant][49] /* ty=Tensor[(1050), float64] */, %1048, %1049, %1050)
}

def @func_7372() -> (Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float32]) {
  %1051 = @func_5561() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), bool]) */;
  %1052 = @func_5995() /* ty=Tensor[(?, 16, 11), float32] */;
  %1053 = %1051.0;
  (%1052, %1053)
}

def @func_9366(%var_9346: Tensor[(1050), float64]) -> (Tensor[(?, 16, 11), int32], Tensor[(1050), float64], Tensor[(7, 15, 10), float32]) {
  %1054 = @func_2113() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %1055 = cast(%var_9346, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %1056 = reshape(%1055, newshape=[7, 15, 10]) /* ty=Tensor[(7, 15, 10), float64] */;
  %1057 = @func_3228(%1056) /* ty=(Tensor[(7, 15, 10), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */;
  %1058 = %1057.0;
  %1059 = cast(%1058, dtype="float32") /* ty=Tensor[(7, 15, 10), float32] */;
  %1060 = %1054.0;
  %1061 = exp(%1059) /* ty=Tensor[(7, 15, 10), float32] */;
  (%1060, %var_9346, %1061)
}

def @func_1205() -> Tensor[(?, 16, 11), int32] {
  %1062 = @func_621() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %1062.0
}

def @func_3632(%var_3628: Tensor[(15, 7, 6), float64]) -> (Tensor[(15, 7, 6), float64],) {
  %1063 = cast(%var_3628, dtype="float64") /* ty=Tensor[(15, 7, 6), float64] */;
  %1064 = sqrt(%1063) /* ty=Tensor[(15, 7, 6), float64] */;
  (%1064,)
}

def @func_11186(%var_11158: Tensor[(10, 10, 6), float64]) -> (Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32], Tensor[(10, 10, 6), float32]) {
  %1065 = @func_8519() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(1936), bool]) */;
  %1066 = @func_1814() /* ty=(Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
  %1067 = cast(%var_11158, dtype="float64") /* ty=Tensor[(10, 10, 6), float64] */;
  %1068 = asinh(%1067) /* ty=Tensor[(10, 10, 6), float64] */;
  %1069 = cast(%1068, dtype="float32") /* ty=Tensor[(10, 10, 6), float32] */;
  %1070 = %1065.2;
  %1071 = %1066.1;
  %1072 = erf(%1069) /* ty=Tensor[(10, 10, 6), float32] */;
  (%1070, %1071, %1072)
}

def @func_1814() -> (Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) {
  %1073 = @func_1243() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) */;
  %1074 = @func_621() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %1075 = %1073.1;
  %1076 = %1074.0;
  (%1075, %1076)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_12435(%var_12434: Tensor[(9, 12, 6), float32]) -> (Tensor[(9, 12, 6), float32], Tensor[(?, 16, 11), bool]) {
  %4 = fn (%var_12415: Tensor[(9, 12, 6), float32]) -> (Tensor[(9, 12, 6), float32], Tensor[(?, 16, 11), bool]) {
    %0 = cast(%var_12415, dtype="float32") /* ty=Tensor[(9, 12, 6), float32] */;
    %1 = @func_5650() /* ty=(Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), float64], Tensor[(150), float32], Tensor[(?, 16, 11), bool]) */;
    %2 = exp(%0) /* ty=Tensor[(9, 12, 6), float32] */;
    %3 = %1.3;
    (%2, %3)
  };
  %4(%var_12434) /* ty=(Tensor[(9, 12, 6), float32], Tensor[(?, 16, 11), bool]) */
}

def @func_6819() -> (Tensor[(?, 16, 11), bool],) {
  @func_6817() /* ty=(Tensor[(?, 16, 11), bool],) */
}

def @func_5997() -> Tensor[(?, 16, 11), float32] {
  @func_5995() /* ty=Tensor[(?, 16, 11), float32] */
}

def @func_3698(%var_3697: Tensor[(12, 4, 5), float32]) -> Tensor[(12, 4, 5), float32] {
  %6 = fn (%var_3682: Tensor[(12, 4, 5), float32]) -> Tensor[(12, 4, 5), float32] {
    %5 = cast(%var_3682, dtype="float32") /* ty=Tensor[(12, 4, 5), float32] */;
    exp(%5) /* ty=Tensor[(12, 4, 5), float32] */
  };
  %6(%var_3697) /* ty=Tensor[(12, 4, 5), float32] */
}

def @func_9716() -> (Tensor[(?, 16, 11), float64], Tensor[(8, 9, 2), bool], Tensor[(2, 72), bool], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) {
  %17 = fn () -> (Tensor[(?, 16, 11), float64], Tensor[(8, 9, 2), bool], Tensor[(2, 72), bool], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) {
    %7 = cast(meta[relay.Constant][0] /* ty=Tensor[(2, 72), bool] */, dtype="bool") /* ty=Tensor[(2, 72), bool] */;
    %8 = reshape(%7, newshape=[8, 9, 2]) /* ty=Tensor[(8, 9, 2), bool] */;
    %9 = @func_8873(%8) /* ty=(Tensor[(8, 9, 2), bool], Tensor[(8, 9, 2), float64]) */;
    %10 = @func_5067() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */;
    %11 = @func_2835() /* ty=(Tensor[(?, 16, 11), float64],) */;
    %12 = @func_964() /* ty=Tensor[(?, 16, 11), float64] */;
    %13 = %9.0;
    %14 = %10.0;
    %15 = @func_8215() /* ty=Tensor[(?, 16, 11), int32] */;
    %16 = %11.0;
    (%12, %13, meta[relay.Constant][0] /* ty=Tensor[(2, 72), bool] */, %14, %15, %16)
  };
  %17() /* ty=(Tensor[(?, 16, 11), float64], Tensor[(8, 9, 2), bool], Tensor[(2, 72), bool], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) */
}

def @func_12091() -> (Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), int32]) {
  %22 = fn () -> (Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), int32]) {
    %18 = @func_6515() /* ty=(Tensor[(?, 16, 11), bool],) */;
    %19 = @func_10204() /* ty=(Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), bool], Tensor[(12, 16, 11), float32]) */;
    %20 = %18.0;
    %21 = %19.1;
    (%20, %21)
  };
  %22() /* ty=(Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), int32]) */
}

def @func_10204() -> (Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), bool], Tensor[(12, 16, 11), float32]) {
  %23 = @func_7523() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %24 = @func_5683() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %25 = @func_4703() /* ty=(Tensor[(?, 16, 11), float64],) */;
  %26 = @func_10002() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(12, 16, 11), float32], Tensor[(?, 13, 12), uint64]) */;
  %27 = @func_3623() /* ty=Tensor[(?, 16, 11), bool] */;
  %28 = %23.0;
  %29 = %24.0;
  %30 = %25.0;
  %31 = @func_3879() /* ty=Tensor[(?, 16, 11), bool] */;
  %32 = %26.1;
  (%27, %28, %29, %30, %31, %32)
}

def @func_450(%var_448: Tensor[(15, 3, 6), float64], %var_449: Tensor[(15, 3, 6), float64]) -> (Tensor[(15, 3, 6), float64], Tensor[(15, 3, 6), float64]) {
  %40 = fn (%var_435: Tensor[(15, 3, 6), float64], %var_436: Tensor[(15, 3, 6), float64]) -> (Tensor[(15, 3, 6), float64], Tensor[(15, 3, 6), float64]) {
    %33 = cast(%var_436, dtype="float64") /* ty=Tensor[(15, 3, 6), float64] */;
    %34 = shape_of(%var_435, dtype="int32") /* ty=Tensor[(3), int32] */;
    %35 = cast(%var_435, dtype="float64") /* ty=Tensor[(15, 3, 6), float64] */;
    %36 = dyn.reshape(%33, %34, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %37 = cast(%var_436, dtype="float64") /* ty=Tensor[(15, 3, 6), float64] */;
    %38 = add(%35, %36) /* ty=Tensor[(15, 3, 6), float64] */;
    %39 = sigmoid(%37) /* ty=Tensor[(15, 3, 6), float64] */;
    (%38, %39)
  };
  %40(%var_448, %var_449) /* ty=(Tensor[(15, 3, 6), float64], Tensor[(15, 3, 6), float64]) */
}

def @func_2290(%var_2288: Tensor[(1, 10, 2), uint32]) -> Tensor[(4, 10, 2), bool] {
  @func_2287(%var_2288) /* ty=Tensor[(4, 10, 2), bool] */
}

def @func_4035(%var_4003: Tensor[(14, 16, 11), float64]) -> (Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), int32]) {
  %41 = @func_3405() /* ty=(Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
  %42 = %41.0;
  %43 = cast(%var_4003, dtype="float64") /* ty=Tensor[(14, 16, 11), float64] */;
  %44 = shape_of(%42, dtype="int32") /* ty=Tensor[(3), int32] */;
  %45 = cast(%42, dtype="float64") /* ty=Tensor[(14, 16, 11), float64] */;
  %46 = dyn.reshape(%43, %44, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %47 = @func_2728() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %48 = mod(%45, %46) /* ty=Tensor[(14, 16, 11), float64] */;
  %49 = %47.0;
  (%48, %49)
}

def @func_8086() -> (Tensor[(12, 16, 11), float32],) {
  @func_8084() /* ty=(Tensor[(12, 16, 11), float32],) */
}

def @func_3184() -> (Tensor[(?, 16, 11), uint64], Tensor[(?, 16, 11), float64]) {
  %50 = @func_1549() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(270), float64], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), uint64], Tensor[(?, 16, 11), float32]) */;
  %51 = @func_1243() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) */;
  %52 = %50.4;
  %53 = %51.1;
  (%52, %53)
}

def @func_6067() -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) {
  @func_6065() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) */
}

def @func_3804() -> (Tensor[(14, 16, 11), float64], Tensor[(14, 16, 11), float64]) {
  @func_3802() /* ty=(Tensor[(14, 16, 11), float64], Tensor[(14, 16, 11), float64]) */
}

def @func_3406() -> (Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), int32]) {
  %57 = fn () -> (Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), int32]) {
    %54 = @func_1713() /* ty=(Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), float64]) */;
    %55 = %54.0;
    %56 = @func_1211() /* ty=Tensor[(?, 16, 11), int32] */;
    (%55, %56)
  };
  %57() /* ty=(Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), int32]) */
}

def @func_9427() -> (Tensor[(?, 16, 11), float32], Tensor[(14, 16, 11), float64]) {
  %58 = @func_854() /* ty=(Tensor[(?, 16, 11), float32],) */;
  %59 = @func_4841() /* ty=(Tensor[(14, 16, 11), float64],) */;
  %60 = %58.0;
  %61 = %59.0;
  (%60, %61)
}

def @func_8056() -> Tensor[(?, 16, 11), bool] {
  @func_8054() /* ty=Tensor[(?, 16, 11), bool] */
}

def @func_5826() -> (Tensor[(150), float32], Tensor[(?, 16, 11), int32]) {
  %62 = @func_5650() /* ty=(Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), float64], Tensor[(150), float32], Tensor[(?, 16, 11), bool]) */;
  %63 = %62.2;
  %64 = @func_4256() /* ty=Tensor[(?, 16, 11), int32] */;
  (%63, %64)
}

def @func_7024(%var_7023: Tensor[(3, 16, 11), int32]) -> (Tensor[(3, 16, 11), float32],) {
  %70 = fn (%var_7002: Tensor[(3, 16, 11), int32]) -> (Tensor[(3, 16, 11), float32],) {
    %65 = @func_1561() /* ty=(Tensor[(?, 16, 11), int32],) */;
    %66 = %65.0;
    %67 = cast(%66, dtype="float32") /* ty=Tensor[(?, 16, 11), float32] */;
    %68 = cast(%var_7002, dtype="float32") /* ty=Tensor[(3, 16, 11), float32] */;
    %69 = power(%67, %68) /* ty=Tensor[(3, 16, 11), float32] */;
    (%69,)
  };
  %70(%var_7023) /* ty=(Tensor[(3, 16, 11), float32],) */
}

def @func_4661(%var_4659: Tensor[(2, 16, 11), int32]) -> (Tensor[(15, 10, 15), bool], Tensor[(2250), float64], Tensor[(?, 16, 11), float64], Tensor[(7, 15, 10), float64], Tensor[(1050), float64], Tensor[(?, 16, 11), uint16], Tensor[(2, 16, 11), bool], Tensor[(?, 16, 11), float64]) {
  @func_4658(%var_4659) /* ty=(Tensor[(15, 10, 15), bool], Tensor[(2250), float64], Tensor[(?, 16, 11), float64], Tensor[(7, 15, 10), float64], Tensor[(1050), float64], Tensor[(?, 16, 11), uint16], Tensor[(2, 16, 11), bool], Tensor[(?, 16, 11), float64]) */
}

def @func_9829() -> (Tensor[(7, 5, 16), float64],) {
  @func_9827() /* ty=(Tensor[(7, 5, 16), float64],) */
}

def @func_11109() -> (Tensor[(7, 12, 5), float64], Tensor[(420), uint32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64], Tensor[(7, 5, 16), float64], Tensor[(11, 12, 7), float32], Tensor[(924), float32]) {
  %95 = fn () -> (Tensor[(7, 12, 5), float64], Tensor[(420), uint32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64], Tensor[(7, 5, 16), float64], Tensor[(11, 12, 7), float32], Tensor[(924), float32]) {
    %71 = cast(meta[relay.Constant][1] /* ty=Tensor[(420), uint32] */, dtype="uint32") /* ty=Tensor[(420), uint32] */;
    %72 = cast(meta[relay.Constant][1] /* ty=Tensor[(420), uint32] */, dtype="uint32") /* ty=Tensor[(420), uint32] */;
    %73 = reshape(%71, newshape=[7, 12, 5]) /* ty=Tensor[(7, 12, 5), uint32] */;
    %74 = reshape(%72, newshape=[7, 12, 5]) /* ty=Tensor[(7, 12, 5), uint32] */;
    %75 = @func_6475(%73, %74) /* ty=(Tensor[(7, 12, 5), bool], Tensor[(?, 16, 11), bool], Tensor[(7, 12, 5), float64]) */;
    %76 = @func_2894() /* ty=(Tensor[(?, 16, 11), float32],) */;
    %77 = %76.0;
    %78 = @func_7535() /* ty=(Tensor[(?, 16, 11), int8],) */;
    %79 = %78.0;
    %80 = cast(%79, dtype="float64") /* ty=Tensor[(?, 16, 11), float64] */;
    %81 = shape_of(%77, dtype="int32") /* ty=Tensor[(3), int32] */;
    %82 = cast(%77, dtype="float64") /* ty=Tensor[(?, 16, 11), float64] */;
    %83 = dyn.reshape(%80, %81, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %84 = @func_1549() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(270), float64], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), uint64], Tensor[(?, 16, 11), float32]) */;
    %85 = @func_1094() /* ty=(Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64]) */;
    %86 = @func_9827() /* ty=(Tensor[(7, 5, 16), float64],) */;
    %87 = cast(meta[relay.Constant][2] /* ty=Tensor[(924), float32] */, dtype="float32") /* ty=Tensor[(924), float32] */;
    %88 = reshape(%87, newshape=[11, 12, 7]) /* ty=Tensor[(11, 12, 7), float32] */;
    %89 = %75.2;
    %90 = minimum(%82, %83) /* ty=Tensor[(?, 16, 11), float64] */;
    %91 = %84.5;
    %92 = %85.2;
    %93 = %86.0;
    %94 = @func_8807(%88) /* ty=Tensor[(11, 12, 7), float32] */;
    (%89, meta[relay.Constant][1] /* ty=Tensor[(420), uint32] */, %90, %91, %92, %93, %94, meta[relay.Constant][2] /* ty=Tensor[(924), float32] */)
  };
  %95() /* ty=(Tensor[(7, 12, 5), float64], Tensor[(420), uint32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64], Tensor[(7, 5, 16), float64], Tensor[(11, 12, 7), float32], Tensor[(924), float32]) */
}

def @func_900(%var_898: Tensor[(270), float64]) -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(15, 3, 6), float64], Tensor[(270), float64]) {
  @func_897(%var_898) /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(15, 3, 6), float64], Tensor[(270), float64]) */
}

def @func_3667() -> (Tensor[(?, 16, 11), int32],) {
  %96 = @func_1836() /* ty=Tensor[(?, 16, 11), int32] */;
  (%96,)
}

def @func_2059() -> Tensor[(?, 16, 11), float64] {
  @func_2057() /* ty=Tensor[(?, 16, 11), float64] */
}

def @func_7824() -> (Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), int32]) {
  %101 = fn () -> (Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), int32]) {
    %97 = @func_6328() /* ty=(Tensor[(?, 16, 11), int8],) */;
    %98 = @func_4103() /* ty=(Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), int32], Tensor[(90, 3), float64], Tensor[(?, 16, 11), int32]) */;
    %99 = %97.0;
    %100 = %98.4;
    (%99, %100)
  };
  %101() /* ty=(Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), int32]) */
}

def @func_11308(%var_11269: Tensor[(270), float64]) -> (Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32], Tensor[(90, 3), float32]) {
  %102 = @func_7372() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float32]) */;
  %103 = cast(%var_11269, dtype="float64") /* ty=Tensor[(270), float64] */;
  %104 = reshape(%103, newshape=[90, 3]) /* ty=Tensor[(90, 3), float64] */;
  %105 = @func_11247(%104) /* ty=(Tensor[(?, 16, 11), float32], Tensor[(90, 3), float64], Tensor[(90, 3), int8]) */;
  %106 = %105.2;
  %107 = cast(%106, dtype="float64") /* ty=Tensor[(90, 3), float64] */;
  %108 = reshape(%107, newshape=[1, 270]) /* ty=Tensor[(1, 270), float64] */;
  %109 = @func_1309(%108) /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(15, 3, 6), float64], Tensor[(1, 270), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */;
  %110 = cast(%106, dtype="float32") /* ty=Tensor[(90, 3), float32] */;
  %111 = log2(%110) /* ty=Tensor[(90, 3), float32] */;
  %112 = cast(%var_11269, dtype="float32") /* ty=Tensor[(270), float32] */;
  %113 = shape_of(%111, dtype="int32") /* ty=Tensor[(2), int32] */;
  %114 = cast(%111, dtype="float32") /* ty=Tensor[(90, 3), float32] */;
  %115 = dyn.reshape(%112, %113, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %116 = @func_3478() /* ty=Tensor[(14, 16, 11), float64] */;
  %117 = %102.1;
  %118 = %109.0;
  %119 = floor_mod(%114, %115) /* ty=Tensor[(90, 3), float32] */;
  (%116, %117, %118, %119)
}

def @func_9923(%var_9897: Tensor[(13, 4, 7), float64]) -> (Tensor[(13, 4, 7), float64], Tensor[(7, 15, 10), float64], Tensor[(1050), float64]) {
  %120 = cast(%var_9897, dtype="float64") /* ty=Tensor[(13, 4, 7), float64] */;
  %121 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(13, 4, 7), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %122 = cast(meta[relay.Constant][3] /* ty=Tensor[(13, 4, 7), float64] */, dtype="float64") /* ty=Tensor[(13, 4, 7), float64] */;
  %123 = dyn.reshape(%120, %121, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %124 = cast(meta[relay.Constant][4] /* ty=Tensor[(1050), float64] */, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %125 = reshape(%124, newshape=[7, 15, 10]) /* ty=Tensor[(7, 15, 10), float64] */;
  %126 = @func_3228(%125) /* ty=(Tensor[(7, 15, 10), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */;
  %127 = floor_mod(%122, %123) /* ty=Tensor[(13, 4, 7), float64] */;
  %128 = %126.0;
  (%127, %128, meta[relay.Constant][4] /* ty=Tensor[(1050), float64] */)
}

def @func_964() -> Tensor[(?, 16, 11), float64] {
  %129 = @func_854() /* ty=(Tensor[(?, 16, 11), float32],) */;
  %130 = %129.0;
  %131 = cast(%130, dtype="float64") /* ty=Tensor[(?, 16, 11), float64] */;
  sinh(%131) /* ty=Tensor[(?, 16, 11), float64] */
}

def @func_6110() -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) {
  %132 = @func_5159() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %133 = @func_1651() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64]) */;
  %134 = %132.0;
  %135 = %133.2;
  %136 = @func_1205() /* ty=Tensor[(?, 16, 11), int32] */;
  (%134, %135, %136)
}

def @func_3669() -> (Tensor[(?, 16, 11), int32],) {
  @func_3667() /* ty=(Tensor[(?, 16, 11), int32],) */
}

def @func_2970() -> Tensor[(?, 13, 12), uint64] {
  %143 = fn () -> Tensor[(?, 13, 12), uint64] {
    %137 = cast(meta[relay.Constant][5] /* ty=Tensor[(1, 13, 12), float64] */, dtype="float64") /* ty=Tensor[(1, 13, 12), float64] */;
    %138 = rsqrt(%137) /* ty=Tensor[(1, 13, 12), float64] */;
    %139 = cast(meta[relay.Constant][5] /* ty=Tensor[(1, 13, 12), float64] */, dtype="uint64") /* ty=Tensor[(1, 13, 12), uint64] */;
    %140 = shape_of(%138, dtype="int32") /* ty=Tensor[(3), int32] */;
    %141 = cast(%138, dtype="uint64") /* ty=Tensor[(1, 13, 12), uint64] */;
    %142 = dyn.reshape(%139, %140, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    maximum(%141, %142) /* ty=Tensor[(?, 13, 12), uint64] */
  };
  %143() /* ty=Tensor[(?, 13, 12), uint64] */
}

def @func_8231() -> Tensor[(?, 16, 11), int32] {
  %145 = fn () -> Tensor[(?, 16, 11), int32] {
    %144 = @func_916() /* ty=(Tensor[(?, 16, 11), int32],) */;
    %144.0
  };
  %145() /* ty=Tensor[(?, 16, 11), int32] */
}

def @func_6882() -> (Tensor[(?, 16, 11), int32],) {
  %147 = fn () -> (Tensor[(?, 16, 11), int32],) {
    %146 = @func_1205() /* ty=Tensor[(?, 16, 11), int32] */;
    (%146,)
  };
  %147() /* ty=(Tensor[(?, 16, 11), int32],) */
}

def @func_3425() -> (Tensor[(?, 16, 11), float32],) {
  %150 = fn () -> (Tensor[(?, 16, 11), float32],) {
    %148 = @func_1094() /* ty=(Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64]) */;
    %149 = %148.1;
    (%149,)
  };
  %150() /* ty=(Tensor[(?, 16, 11), float32],) */
}

def @func_12364() -> Tensor[(5, 16, 11), float64] {
  %158 = fn () -> Tensor[(5, 16, 11), float64] {
    %151 = @func_6110() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
    %152 = %151.2;
    %153 = cast(%152, dtype="uint64") /* ty=Tensor[(?, 16, 11), uint64] */;
    %154 = cast(meta[relay.Constant][6] /* ty=Tensor[(5, 16, 11), int32] */, dtype="uint64") /* ty=Tensor[(5, 16, 11), uint64] */;
    %155 = subtract(%153, %154) /* ty=Tensor[(5, 16, 11), uint64] */;
    %156 = cast(%152, dtype="float64") /* ty=Tensor[(?, 16, 11), float64] */;
    %157 = cast(%155, dtype="float64") /* ty=Tensor[(5, 16, 11), float64] */;
    maximum(%156, %157) /* ty=Tensor[(5, 16, 11), float64] */
  };
  %158() /* ty=Tensor[(5, 16, 11), float64] */
}

def @func_6654() -> (Tensor[(?, 16, 11), float64],) {
  %162 = fn () -> (Tensor[(?, 16, 11), float64],) {
    %159 = @func_1878() /* ty=Tensor[(?, 16, 11), float32] */;
    %160 = cast(%159, dtype="float64") /* ty=Tensor[(?, 16, 11), float64] */;
    %161 = log(%160) /* ty=Tensor[(?, 16, 11), float64] */;
    (%161,)
  };
  %162() /* ty=(Tensor[(?, 16, 11), float64],) */
}

def @func_5930() -> Tensor[(?, 16, 11), bool] {
  %163 = @func_5561() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), bool]) */;
  %163.1
}

def @func_12029(%var_12028: Tensor[(12, 16, 11), float32]) -> (Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32], Tensor[(12, 16, 11), bool], Tensor[(?, 16, 11), float32]) {
  %174 = fn (%var_12013: Tensor[(12, 16, 11), float32]) -> (Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32], Tensor[(12, 16, 11), bool], Tensor[(?, 16, 11), float32]) {
    %164 = @func_4770() /* ty=(Tensor[(?, 16, 11), float64], Tensor[(14, 16, 11), float64]) */;
    %165 = @func_7372() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float32]) */;
    %166 = %165.0;
    %167 = cast(%166, dtype="bool") /* ty=Tensor[(?, 16, 11), bool] */;
    %168 = cast(%var_12013, dtype="bool") /* ty=Tensor[(12, 16, 11), bool] */;
    %169 = @func_9427() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(14, 16, 11), float64]) */;
    %170 = %164.0;
    %171 = @func_8842() /* ty=Tensor[(?, 16, 11), int32] */;
    %172 = greater(%167, %168) /* ty=Tensor[(12, 16, 11), bool] */;
    %173 = %169.0;
    (%170, %171, %172, %173)
  };
  %174(%var_12028) /* ty=(Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32], Tensor[(12, 16, 11), bool], Tensor[(?, 16, 11), float32]) */
}

def @func_3146(%var_3144: Tensor[(4, 16, 11), int32]) -> (Tensor[(?, 13, 12), uint64], Tensor[(4, 16, 11), float32], Tensor[(4, 16, 11), float64], Tensor[(?, 13, 12), uint64], Tensor[(?, 16, 11), int32]) {
  @func_3143(%var_3144) /* ty=(Tensor[(?, 13, 12), uint64], Tensor[(4, 16, 11), float32], Tensor[(4, 16, 11), float64], Tensor[(?, 13, 12), uint64], Tensor[(?, 16, 11), int32]) */
}

def @func_1244() -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) {
  %179 = fn () -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) {
    %175 = @func_747() /* ty=(Tensor[(?, 16, 11), int32],) */;
    %176 = @func_1094() /* ty=(Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64]) */;
    %177 = %175.0;
    %178 = %176.2;
    (%177, %178)
  };
  %179() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) */
}

def @func_4038(%var_4036: Tensor[(14, 16, 11), float64]) -> (Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), int32]) {
  @func_4035(%var_4036) /* ty=(Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), int32]) */
}

def @func_6112() -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) {
  @func_6110() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) */
}

def @func_8263(%var_8261: Tensor[(240), float32]) -> (Tensor[(?, 16, 11), int32], Tensor[(240), float32], Tensor[(240), float32]) {
  @func_8260(%var_8261) /* ty=(Tensor[(?, 16, 11), int32], Tensor[(240), float32], Tensor[(240), float32]) */
}

def @func_11332() -> (Tensor[(2, 72), float64],) {
  @func_11330() /* ty=(Tensor[(2, 72), float64],) */
}

def @func_11437() -> (Tensor[(4, 10, 2), bool],) {
  %180 = @func_8620() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(4, 10, 2), bool], Tensor[(20), uint32], Tensor[(14, 16, 11), float64]) */;
  %181 = %180.1;
  (%181,)
}

def @func_2835() -> (Tensor[(?, 16, 11), float64],) {
  %182 = @func_2057() /* ty=Tensor[(?, 16, 11), float64] */;
  (%182,)
}

def @func_3230(%var_3229: Tensor[(7, 15, 10), float64]) -> (Tensor[(7, 15, 10), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) {
  %189 = fn (%var_3202: Tensor[(7, 15, 10), float64]) -> (Tensor[(7, 15, 10), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) {
    %183 = cast(%var_3202, dtype="float64") /* ty=Tensor[(7, 15, 10), float64] */;
    %184 = @func_3006() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */;
    %185 = @func_2728() /* ty=(Tensor[(?, 16, 11), int32],) */;
    %186 = log(%183) /* ty=Tensor[(7, 15, 10), float64] */;
    %187 = %184.1;
    %188 = %185.0;
    (%186, %187, %188)
  };
  %189(%var_3229) /* ty=(Tensor[(7, 15, 10), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */
}

def @func_3634(%var_3633: Tensor[(15, 7, 6), float64]) -> (Tensor[(15, 7, 6), float64],) {
  %192 = fn (%var_3628: Tensor[(15, 7, 6), float64]) -> (Tensor[(15, 7, 6), float64],) {
    %190 = cast(%var_3628, dtype="float64") /* ty=Tensor[(15, 7, 6), float64] */;
    %191 = sqrt(%190) /* ty=Tensor[(15, 7, 6), float64] */;
    (%191,)
  };
  %192(%var_3633) /* ty=(Tensor[(15, 7, 6), float64],) */
}

def @func_10719() -> (Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), uint64], Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), bool]) {
  %199 = fn () -> (Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), uint64], Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), bool]) {
    %193 = @func_1339() /* ty=(Tensor[(?, 16, 11), float64],) */;
    %194 = @func_9390() /* ty=(Tensor[(?, 16, 11), int8],) */;
    %195 = %193.0;
    %196 = @func_10665() /* ty=Tensor[(?, 16, 11), uint64] */;
    %197 = %194.0;
    %198 = @func_4427() /* ty=Tensor[(?, 16, 11), bool] */;
    (%195, %196, %197, %198)
  };
  %199() /* ty=(Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), uint64], Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), bool]) */
}

def @func_7536() -> (Tensor[(?, 16, 11), int8],) {
  %202 = fn () -> (Tensor[(?, 16, 11), int8],) {
    %200 = @func_6328() /* ty=(Tensor[(?, 16, 11), int8],) */;
    %201 = %200.0;
    (%201,)
  };
  %202() /* ty=(Tensor[(?, 16, 11), int8],) */
}

def @func_9812(%var_9810: float32, %var_9811: Tensor[(15), float32]) -> (Tensor[(15, 1), float32], Tensor[(15), float32], Tensor[(?, 16, 11), float64]) {
  @func_9808(%var_9810, %var_9811) /* ty=(Tensor[(15, 1), float32], Tensor[(15), float32], Tensor[(?, 16, 11), float64]) */
}

def @func_6579(%var_6577: Tensor[(11, 16, 11), bool]) -> (Tensor[(?, 16, 11), float64], Tensor[(11, 16, 11), bool]) {
  @func_6576(%var_6577) /* ty=(Tensor[(?, 16, 11), float64], Tensor[(11, 16, 11), bool]) */
}

def @func_10522() -> (Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float32]) {
  @func_10520() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float32]) */
}

def @func_3377() -> (Tensor[(12, 16, 11), float32], Tensor[(?, 16, 11), bool]) {
  @func_3375() /* ty=(Tensor[(12, 16, 11), float32], Tensor[(?, 16, 11), bool]) */
}

def @func_9064() -> Tensor[(?, 16, 11), float32] {
  %204 = fn () -> Tensor[(?, 16, 11), float32] {
    %203 = @func_1094() /* ty=(Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64]) */;
    %203.1
  };
  %204() /* ty=Tensor[(?, 16, 11), float32] */
}

def @func_6329() -> (Tensor[(?, 16, 11), int8],) {
  %206 = fn () -> (Tensor[(?, 16, 11), int8],) {
    %205 = @func_3941() /* ty=Tensor[(?, 16, 11), int8] */;
    (%205,)
  };
  %206() /* ty=(Tensor[(?, 16, 11), int8],) */
}

def @func_6274() -> (Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32], Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32]) {
  @func_6272() /* ty=(Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32], Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32]) */
}

def @func_3942() -> Tensor[(?, 16, 11), int8] {
  %215 = fn () -> Tensor[(?, 16, 11), int8] {
    %207 = @func_2720() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), int32], Tensor[(270), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */;
    %208 = %207.1;
    %209 = @func_1339() /* ty=(Tensor[(?, 16, 11), float64],) */;
    %210 = %209.0;
    %211 = cast(%210, dtype="int8") /* ty=Tensor[(?, 16, 11), int8] */;
    %212 = shape_of(%208, dtype="int32") /* ty=Tensor[(3), int32] */;
    %213 = cast(%208, dtype="int8") /* ty=Tensor[(?, 16, 11), int8] */;
    %214 = dyn.reshape(%211, %212, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    right_shift(%213, %214) /* ty=Tensor[(?, 16, 11), int8] */
  };
  %215() /* ty=Tensor[(?, 16, 11), int8] */
}

def @func_2615() -> (Tensor[(?, 16, 11), float32],) {
  %218 = fn () -> (Tensor[(?, 16, 11), float32],) {
    %216 = @func_1651() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64]) */;
    %217 = %216.0;
    (%217,)
  };
  %218() /* ty=(Tensor[(?, 16, 11), float32],) */
}

def @func_8519() -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(1936), bool]) {
  %219 = @func_2728() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %220 = cast(meta[relay.Constant][7] /* ty=Tensor[(1936), bool] */, dtype="bool") /* ty=Tensor[(1936), bool] */;
  %221 = reshape(%220, newshape=[11, 16, 11]) /* ty=Tensor[(11, 16, 11), bool] */;
  %222 = @func_6576(%221) /* ty=(Tensor[(?, 16, 11), float64], Tensor[(11, 16, 11), bool]) */;
  %223 = @func_7794() /* ty=Tensor[(?, 16, 11), int32] */;
  %224 = %219.0;
  %225 = %222.0;
  (%223, %224, %225, meta[relay.Constant][7] /* ty=Tensor[(1936), bool] */)
}

def @func_8911() -> (Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), bool]) {
  %226 = @func_4703() /* ty=(Tensor[(?, 16, 11), float64],) */;
  %227 = @func_2720() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), int32], Tensor[(270), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */;
  %228 = %226.0;
  %229 = %227.3;
  (%228, %229)
}

def @func_10572() -> (Tensor[(?, 16, 11), int32],) {
  @func_10570() /* ty=(Tensor[(?, 16, 11), int32],) */
}

def @func_6429() -> Tensor[(?, 16, 11), float32] {
  @func_6427() /* ty=Tensor[(?, 16, 11), float32] */
}

def @func_10968() -> (Tensor[(15), float32], Tensor[(?, 16, 11), int32]) {
  %233 = fn () -> (Tensor[(15), float32], Tensor[(?, 16, 11), int32]) {
    %230 = @func_8171() /* ty=(Tensor[(?, 16, 11), int32],) */;
    %231 = @func_6770() /* ty=Tensor[(15), float32] */;
    %232 = %230.0;
    (%231, %232)
  };
  %233() /* ty=(Tensor[(15), float32], Tensor[(?, 16, 11), int32]) */
}

def @func_5340() -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(2464), float64], Tensor[(?, 16, 11), int32]) {
  %234 = @func_1243() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) */;
  %235 = cast(meta[relay.Constant][8] /* ty=Tensor[(2464), float64] */, dtype="float64") /* ty=Tensor[(2464), float64] */;
  %236 = reshape(%235, newshape=[14, 16, 11]) /* ty=Tensor[(14, 16, 11), float64] */;
  %237 = @func_4035(%236) /* ty=(Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
  %238 = @func_3667() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %239 = %234.0;
  %240 = %237.1;
  %241 = %238.0;
  (%239, %240, meta[relay.Constant][8] /* ty=Tensor[(2464), float64] */, %241)
}

def @func_5995() -> Tensor[(?, 16, 11), float32] {
  @func_1878() /* ty=Tensor[(?, 16, 11), float32] */
}

def @func_916() -> (Tensor[(?, 16, 11), int32],) {
  %242 = @func_747() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %243 = %242.0;
  (%243,)
}

def @func_918() -> (Tensor[(?, 16, 11), int32],) {
  @func_916() /* ty=(Tensor[(?, 16, 11), int32],) */
}

def @func_4429() -> Tensor[(?, 16, 11), bool] {
  @func_4427() /* ty=Tensor[(?, 16, 11), bool] */
}

def @func_1816() -> (Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) {
  @func_1814() /* ty=(Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) */
}

def @func_11547() -> Tensor[(?, 16, 11), int32] {
  %245 = fn () -> Tensor[(?, 16, 11), int32] {
    %244 = @func_6110() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
    %244.2
  };
  %245() /* ty=Tensor[(?, 16, 11), int32] */
}

def @func_4520() -> (Tensor[(?, 16, 11), float32], Tensor[(1014), bool], Tensor[(6, 13, 13), bool]) {
  @func_4518() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(1014), bool], Tensor[(6, 13, 13), bool]) */
}

def @func_4872() -> (Tensor[(?, 16, 11), float32],) {
  %248 = fn () -> (Tensor[(?, 16, 11), float32],) {
    %246 = @func_3307() /* ty=(Tensor[(?, 16, 11), float32],) */;
    %247 = %246.0;
    (%247,)
  };
  %248() /* ty=(Tensor[(?, 16, 11), float32],) */
}

def @func_10946() -> Tensor[(15), float32] {
  @func_10944() /* ty=Tensor[(15), float32] */
}

def @func_4951() -> Tensor[(?, 16, 11), float64] {
  %250 = fn () -> Tensor[(?, 16, 11), float64] {
    %249 = @func_1339() /* ty=(Tensor[(?, 16, 11), float64],) */;
    %249.0
  };
  %250() /* ty=Tensor[(?, 16, 11), float64] */
}

def @func_11149() -> (Tensor[(?, 16, 11), float32], Tensor[(14, 16, 11), float64]) {
  %255 = fn () -> (Tensor[(?, 16, 11), float32], Tensor[(14, 16, 11), float64]) {
    %251 = @func_3307() /* ty=(Tensor[(?, 16, 11), float32],) */;
    %252 = @func_1713() /* ty=(Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), float64]) */;
    %253 = %251.0;
    %254 = %252.0;
    (%253, %254)
  };
  %255() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(14, 16, 11), float64]) */
}

def @func_5563() -> (Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), bool]) {
  @func_5561() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), bool]) */
}

def @func_7795() -> Tensor[(?, 16, 11), int32] {
  %256 = fn () -> Tensor[(?, 16, 11), int32] {
    @func_1205() /* ty=Tensor[(?, 16, 11), int32] */
  };
  %256() /* ty=Tensor[(?, 16, 11), int32] */
}

def @func_7848() -> (Tensor[(?, 16, 11), int32],) {
  %257 = @func_3006() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */;
  %258 = %257.2;
  (%258,)
}

def @func_10665() -> Tensor[(?, 16, 11), uint64] {
  %259 = @func_3184() /* ty=(Tensor[(?, 16, 11), uint64], Tensor[(?, 16, 11), float64]) */;
  %259.0
}

def @func_7960() -> Tensor[(?, 16, 11), float64] {
  %260 = fn () -> Tensor[(?, 16, 11), float64] {
    @func_2057() /* ty=Tensor[(?, 16, 11), float64] */
  };
  %260() /* ty=Tensor[(?, 16, 11), float64] */
}

def @func_4658(%var_4635: Tensor[(2, 16, 11), int32]) -> (Tensor[(15, 10, 15), bool], Tensor[(2250), float64], Tensor[(?, 16, 11), float64], Tensor[(7, 15, 10), float64], Tensor[(1050), float64], Tensor[(?, 16, 11), uint16], Tensor[(2, 16, 11), bool], Tensor[(?, 16, 11), float64]) {
  %261 = cast(meta[relay.Constant][9] /* ty=Tensor[(2250), float64] */, dtype="float64") /* ty=Tensor[(2250), float64] */;
  %262 = reshape(%261, newshape=[15, 10, 15]) /* ty=Tensor[(15, 10, 15), float64] */;
  %263 = @func_1610(%262) /* ty=(Tensor[(15, 10, 15), bool], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
  %264 = cast(meta[relay.Constant][10] /* ty=Tensor[(1050), float64] */, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %265 = reshape(%264, newshape=[7, 15, 10]) /* ty=Tensor[(7, 15, 10), float64] */;
  %266 = @func_3228(%265) /* ty=(Tensor[(7, 15, 10), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */;
  %267 = @func_1800() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
  %268 = %267.2;
  %269 = cast(%268, dtype="float64") /* ty=Tensor[(?, 16, 11), float64] */;
  %270 = cos(%269) /* ty=Tensor[(?, 16, 11), float64] */;
  %271 = @func_2728() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %272 = %271.0;
  %273 = cast(%272, dtype="uint16") /* ty=Tensor[(?, 16, 11), uint16] */;
  %274 = shape_of(%270, dtype="int32") /* ty=Tensor[(3), int32] */;
  %275 = cast(%270, dtype="uint16") /* ty=Tensor[(?, 16, 11), uint16] */;
  %276 = dyn.reshape(%273, %274, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %277 = cast(%272, dtype="bool") /* ty=Tensor[(?, 16, 11), bool] */;
  %278 = cast(%var_4635, dtype="bool") /* ty=Tensor[(2, 16, 11), bool] */;
  %279 = @func_1339() /* ty=(Tensor[(?, 16, 11), float64],) */;
  %280 = %263.0;
  %281 = @func_964() /* ty=Tensor[(?, 16, 11), float64] */;
  %282 = %266.0;
  %283 = bitwise_and(%275, %276) /* ty=Tensor[(?, 16, 11), uint16] */;
  %284 = not_equal(%277, %278) /* ty=Tensor[(2, 16, 11), bool] */;
  %285 = %279.0;
  (%280, meta[relay.Constant][9] /* ty=Tensor[(2250), float64] */, %281, %282, meta[relay.Constant][10] /* ty=Tensor[(1050), float64] */, %283, %284, %285)
}

def @func_11186(%var_11158: Tensor[(10, 10, 6), float64]) -> (Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32], Tensor[(10, 10, 6), float32]) {
  %286 = @func_8519() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(1936), bool]) */;
  %287 = @func_1814() /* ty=(Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
  %288 = cast(%var_11158, dtype="float64") /* ty=Tensor[(10, 10, 6), float64] */;
  %289 = asinh(%288) /* ty=Tensor[(10, 10, 6), float64] */;
  %290 = cast(%289, dtype="float32") /* ty=Tensor[(10, 10, 6), float32] */;
  %291 = %286.2;
  %292 = %287.1;
  %293 = erf(%290) /* ty=Tensor[(10, 10, 6), float32] */;
  (%291, %292, %293)
}

def @func_584() -> (Tensor[(?, 16, 11), int32],) {
  %294 = cast(meta[relay.Constant][11] /* ty=Tensor[(1, 16, 11), float32] */, dtype="float32") /* ty=Tensor[(1, 16, 11), float32] */;
  %295 = log2(%294) /* ty=Tensor[(1, 16, 11), float32] */;
  %296 = cast(meta[relay.Constant][11] /* ty=Tensor[(1, 16, 11), float32] */, dtype="int32") /* ty=Tensor[(1, 16, 11), int32] */;
  %297 = shape_of(%295, dtype="int32") /* ty=Tensor[(3), int32] */;
  %298 = cast(%295, dtype="int32") /* ty=Tensor[(1, 16, 11), int32] */;
  %299 = dyn.reshape(%296, %297, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %300 = logical_xor(%298, %299) /* ty=Tensor[(?, 16, 11), int32] */;
  (%300,)
}

def @func_8338() -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), bool]) {
  %304 = fn () -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), bool]) {
    %301 = @func_7823() /* ty=(Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), int32]) */;
    %302 = %301.1;
    %303 = @func_7423() /* ty=Tensor[(?, 16, 11), bool] */;
    (%302, %303)
  };
  %304() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), bool]) */
}

def @func_9368(%var_9367: Tensor[(1050), float64]) -> (Tensor[(?, 16, 11), int32], Tensor[(1050), float64], Tensor[(7, 15, 10), float32]) {
  %313 = fn (%var_9346: Tensor[(1050), float64]) -> (Tensor[(?, 16, 11), int32], Tensor[(1050), float64], Tensor[(7, 15, 10), float32]) {
    %305 = @func_2113() /* ty=(Tensor[(?, 16, 11), int32],) */;
    %306 = cast(%var_9346, dtype="float64") /* ty=Tensor[(1050), float64] */;
    %307 = reshape(%306, newshape=[7, 15, 10]) /* ty=Tensor[(7, 15, 10), float64] */;
    %308 = @func_3228(%307) /* ty=(Tensor[(7, 15, 10), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */;
    %309 = %308.0;
    %310 = cast(%309, dtype="float32") /* ty=Tensor[(7, 15, 10), float32] */;
    %311 = %305.0;
    %312 = exp(%310) /* ty=Tensor[(7, 15, 10), float32] */;
    (%311, %var_9346, %312)
  };
  %313(%var_9367) /* ty=(Tensor[(?, 16, 11), int32], Tensor[(1050), float64], Tensor[(7, 15, 10), float32]) */
}

def @func_10206() -> (Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), bool], Tensor[(12, 16, 11), float32]) {
  @func_10204() /* ty=(Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), bool], Tensor[(12, 16, 11), float32]) */
}

def @func_2057() -> Tensor[(?, 16, 11), float64] {
  %314 = @func_1339() /* ty=(Tensor[(?, 16, 11), float64],) */;
  %314.0
}

def @func_6427() -> Tensor[(?, 16, 11), float32] {
  @func_5995() /* ty=Tensor[(?, 16, 11), float32] */
}

def @func_9461() -> Tensor[(?, 16, 11), float32] {
  %316 = fn () -> Tensor[(?, 16, 11), float32] {
    %315 = @func_854() /* ty=(Tensor[(?, 16, 11), float32],) */;
    %315.0
  };
  %316() /* ty=Tensor[(?, 16, 11), float32] */
}

def @func_11376() -> Tensor[(?, 16, 11), int32] {
  @func_11374() /* ty=Tensor[(?, 16, 11), int32] */
}

def @func_7232(%var_7182: Tensor[(9, 16, 11), float32], %var_7230: Tensor[(528), int32]) -> (Tensor[(9, 16, 11), bool], Tensor[(3, 16, 11), float32], Tensor[(528), int32]) {
  %317 = @func_2614() /* ty=(Tensor[(?, 16, 11), float32],) */;
  %318 = %317.0;
  %319 = cast(%318, dtype="float64") /* ty=Tensor[(?, 16, 11), float64] */;
  %320 = cast(%var_7182, dtype="float64") /* ty=Tensor[(9, 16, 11), float64] */;
  %321 = mod(%319, %320) /* ty=Tensor[(9, 16, 11), float64] */;
  %322 = cast(%321, dtype="bool") /* ty=Tensor[(9, 16, 11), bool] */;
  %323 = cast(%318, dtype="bool") /* ty=Tensor[(?, 16, 11), bool] */;
  %324 = cast(%var_7230, dtype="int32") /* ty=Tensor[(528), int32] */;
  %325 = reshape(%324, newshape=[3, 16, 11]) /* ty=Tensor[(3, 16, 11), int32] */;
  %326 = @func_7022(%325) /* ty=(Tensor[(3, 16, 11), float32],) */;
  %327 = greater_equal(%322, %323) /* ty=Tensor[(9, 16, 11), bool] */;
  %328 = %326.0;
  (%327, %328, %var_7230)
}

def @func_9048() -> Tensor[(?, 16, 11), int32] {
  @func_9046() /* ty=Tensor[(?, 16, 11), int32] */
}

def @func_9926(%var_9924: Tensor[(13, 4, 7), float64]) -> (Tensor[(13, 4, 7), float64], Tensor[(7, 15, 10), float64], Tensor[(1050), float64]) {
  @func_9923(%var_9924) /* ty=(Tensor[(13, 4, 7), float64], Tensor[(7, 15, 10), float64], Tensor[(1050), float64]) */
}

def @func_7850() -> (Tensor[(?, 16, 11), int32],) {
  @func_7848() /* ty=(Tensor[(?, 16, 11), int32],) */
}

def @func_8844() -> Tensor[(?, 16, 11), int32] {
  @func_8842() /* ty=Tensor[(?, 16, 11), int32] */
}

def @func_11931(%var_11929: Tensor[(4, 8, 5), float32]) -> (Tensor[(4, 8, 5), float32], Tensor[(?, 16, 11), int32]) {
  @func_11928(%var_11929) /* ty=(Tensor[(4, 8, 5), float32], Tensor[(?, 16, 11), int32]) */
}

def @func_4705() -> (Tensor[(?, 16, 11), float64],) {
  @func_4703() /* ty=(Tensor[(?, 16, 11), float64],) */
}

def @func_8621() -> (Tensor[(?, 16, 11), int32], Tensor[(4, 10, 2), bool], Tensor[(20), uint32], Tensor[(14, 16, 11), float64]) {
  %336 = fn () -> (Tensor[(?, 16, 11), int32], Tensor[(4, 10, 2), bool], Tensor[(20), uint32], Tensor[(14, 16, 11), float64]) {
    %329 = @func_8337() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), bool]) */;
    %330 = cast(meta[relay.Constant][12] /* ty=Tensor[(20), uint32] */, dtype="uint32") /* ty=Tensor[(20), uint32] */;
    %331 = reshape(%330, newshape=[1, 10, 2]) /* ty=Tensor[(1, 10, 2), uint32] */;
    %332 = @func_3802() /* ty=(Tensor[(14, 16, 11), float64], Tensor[(14, 16, 11), float64]) */;
    %333 = %329.0;
    %334 = @func_2287(%331) /* ty=Tensor[(4, 10, 2), bool] */;
    %335 = %332.0;
    (%333, %334, meta[relay.Constant][12] /* ty=Tensor[(20), uint32] */, %335)
  };
  %336() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(4, 10, 2), bool], Tensor[(20), uint32], Tensor[(14, 16, 11), float64]) */
}

def @func_5572(%var_5570: float32, %var_5571: Tensor[(15, 1), float32]) -> (Tensor[(15, 1), float32],) {
  %340 = fn (%var_5564: float32, %var_5565: Tensor[(15, 1), float32]) -> (Tensor[(15, 1), float32],) {
    %337 = cast(%var_5564, dtype="float32") /* ty=float32 */;
    %338 = cast(%var_5565, dtype="float32") /* ty=Tensor[(15, 1), float32] */;
    %339 = floor_divide(%337, %338) /* ty=Tensor[(15, 1), float32] */;
    (%339,)
  };
  %340(%var_5570, %var_5571) /* ty=(Tensor[(15, 1), float32],) */
}

def @func_2450() -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(2250), float64], Tensor[(?, 16, 11), float64]) {
  %341 = cast(meta[relay.Constant][13] /* ty=Tensor[(2250), float64] */, dtype="float64") /* ty=Tensor[(2250), float64] */;
  %342 = reshape(%341, newshape=[15, 10, 15]) /* ty=Tensor[(15, 10, 15), float64] */;
  %343 = @func_1610(%342) /* ty=(Tensor[(15, 10, 15), bool], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
  %344 = @func_1713() /* ty=(Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), float64]) */;
  %345 = @func_1211() /* ty=Tensor[(?, 16, 11), int32] */;
  %346 = %343.2;
  %347 = %344.1;
  (%345, %346, meta[relay.Constant][13] /* ty=Tensor[(2250), float64] */, %347)
}

def @func_11189(%var_11187: Tensor[(10, 10, 6), float64]) -> (Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32], Tensor[(10, 10, 6), float32]) {
  @func_11186(%var_11187) /* ty=(Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32], Tensor[(10, 10, 6), float32]) */
}

def @func_7949() -> Tensor[(15), float32] {
  @func_6770() /* ty=Tensor[(15), float32] */
}

def @func_12190() -> (Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64], Tensor[(240), float32]) {
  %357 = fn () -> (Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64], Tensor[(240), float32]) {
    %348 = @func_10615() /* ty=(Tensor[(?, 16, 11), int8],) */;
    %349 = @func_11148() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(14, 16, 11), float64]) */;
    %350 = cast(meta[relay.Constant][14] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
    %351 = reshape(%350, newshape=[240]) /* ty=Tensor[(240), float32] */;
    %352 = @func_6974(%351) /* ty=(Tensor[(?, 16, 11), float32], Tensor[(14, 16, 11), float64], Tensor[(432), int16], Tensor[(15, 10, 1), float32], Tensor[(150), float32], Tensor[(240), float32], Tensor[(?, 16, 11), float64]) */;
    %353 = %348.0;
    %354 = @func_10866() /* ty=Tensor[(?, 16, 11), float64] */;
    %355 = %349.0;
    %356 = %352.6;
    (%353, %354, %355, %356, meta[relay.Constant][14] /* ty=Tensor[(240), float32] */)
  };
  %357() /* ty=(Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64], Tensor[(240), float32]) */
}

def @func_10392() -> (Tensor[(?, 16, 11), int8], Tensor[(270), float64], Tensor[(270), float64]) {
  %358 = @func_9390() /* ty=(Tensor[(?, 16, 11), int8],) */;
  %359 = cast(meta[relay.Constant][15] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
  %360 = reshape(%359, newshape=[270]) /* ty=Tensor[(270), float64] */;
  %361 = @func_897(%360) /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(15, 3, 6), float64], Tensor[(270), float64]) */;
  %362 = %358.0;
  %363 = %361.3;
  (%362, %363, meta[relay.Constant][15] /* ty=Tensor[(270), float64] */)
}

def @func_6475(%var_6440: Tensor[(7, 12, 5), uint32], %var_6441: Tensor[(7, 12, 5), uint32]) -> (Tensor[(7, 12, 5), bool], Tensor[(?, 16, 11), bool], Tensor[(7, 12, 5), float64]) {
  %364 = cast(%var_6441, dtype="bool") /* ty=Tensor[(7, 12, 5), bool] */;
  %365 = shape_of(%var_6440, dtype="int32") /* ty=Tensor[(3), int32] */;
  %366 = cast(%var_6440, dtype="bool") /* ty=Tensor[(7, 12, 5), bool] */;
  %367 = dyn.reshape(%364, %365, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %368 = cast(%var_6440, dtype="float32") /* ty=Tensor[(7, 12, 5), float32] */;
  %369 = atan(%368) /* ty=Tensor[(7, 12, 5), float32] */;
  %370 = cast(%369, dtype="float64") /* ty=Tensor[(7, 12, 5), float64] */;
  %371 = not_equal(%366, %367) /* ty=Tensor[(7, 12, 5), bool] */;
  %372 = @func_3879() /* ty=Tensor[(?, 16, 11), bool] */;
  %373 = log(%370) /* ty=Tensor[(7, 12, 5), float64] */;
  (%371, %372, %373)
}

def @func_9289(%var_9288: Tensor[(3, 16, 11), bool]) -> (Tensor[(3, 16, 11), uint64], Tensor[(3, 16, 11), float64], Tensor[(?, 16, 11), float64], Tensor[(150), float32], Tensor[(240), float32]) {
  %390 = fn (%var_9250: Tensor[(3, 16, 11), bool]) -> (Tensor[(3, 16, 11), uint64], Tensor[(3, 16, 11), float64], Tensor[(?, 16, 11), float64], Tensor[(150), float32], Tensor[(240), float32]) {
    %374 = @func_6817() /* ty=(Tensor[(?, 16, 11), bool],) */;
    %375 = %374.0;
    %376 = cast(%375, dtype="uint16") /* ty=Tensor[(?, 16, 11), uint16] */;
    %377 = cast(%var_9250, dtype="uint16") /* ty=Tensor[(3, 16, 11), uint16] */;
    %378 = bitwise_and(%376, %377) /* ty=Tensor[(3, 16, 11), uint16] */;
    %379 = cast(%375, dtype="uint64") /* ty=Tensor[(?, 16, 11), uint64] */;
    %380 = cast(%378, dtype="uint64") /* ty=Tensor[(3, 16, 11), uint64] */;
    %381 = cast(%378, dtype="float64") /* ty=Tensor[(3, 16, 11), float64] */;
    %382 = cast(meta[relay.Constant][16] /* ty=Tensor[(150), float32] */, dtype="float32") /* ty=Tensor[(150), float32] */;
    %383 = cast(meta[relay.Constant][17] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
    %384 = reshape(%382, newshape=[150, 1]) /* ty=Tensor[(150, 1), float32] */;
    %385 = reshape(%383, newshape=[240]) /* ty=Tensor[(240), float32] */;
    %386 = @func_5785(%384, %385) /* ty=(Tensor[(?, 16, 11), int32], Tensor[(15, 10, 1), float32], Tensor[(150, 1), float32], Tensor[(?, 16, 11), int32], Tensor[(12, 4, 5), float32], Tensor[(240), float32], Tensor[(?, 16, 11), float64], Tensor[(6, 13, 13), bool]) */;
    %387 = multiply(%379, %380) /* ty=Tensor[(3, 16, 11), uint64] */;
    %388 = asinh(%381) /* ty=Tensor[(3, 16, 11), float64] */;
    %389 = %386.6;
    (%387, %388, %389, meta[relay.Constant][16] /* ty=Tensor[(150), float32] */, meta[relay.Constant][17] /* ty=Tensor[(240), float32] */)
  };
  %390(%var_9288) /* ty=(Tensor[(3, 16, 11), uint64], Tensor[(3, 16, 11), float64], Tensor[(?, 16, 11), float64], Tensor[(150), float32], Tensor[(240), float32]) */
}

def @func_8381(%var_8379: Tensor[(4, 7, 10), bool], %var_8380: Tensor[(4, 7, 10), bool]) -> (Tensor[(4, 7, 10), bool], Tensor[(?, 16, 11), int32]) {
  %398 = fn (%var_8358: Tensor[(4, 7, 10), bool], %var_8359: Tensor[(4, 7, 10), bool]) -> (Tensor[(4, 7, 10), bool], Tensor[(?, 16, 11), int32]) {
    %391 = cast(%var_8359, dtype="bool") /* ty=Tensor[(4, 7, 10), bool] */;
    %392 = shape_of(%var_8358, dtype="int32") /* ty=Tensor[(3), int32] */;
    %393 = cast(%var_8358, dtype="bool") /* ty=Tensor[(4, 7, 10), bool] */;
    %394 = dyn.reshape(%391, %392, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %395 = @func_5826() /* ty=(Tensor[(150), float32], Tensor[(?, 16, 11), int32]) */;
    %396 = logical_or(%393, %394) /* ty=Tensor[(4, 7, 10), bool] */;
    %397 = %395.1;
    (%396, %397)
  };
  %398(%var_8379, %var_8380) /* ty=(Tensor[(4, 7, 10), bool], Tensor[(?, 16, 11), int32]) */
}

def @func_9390() -> (Tensor[(?, 16, 11), int8],) {
  %399 = @func_8461() /* ty=(Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32]) */;
  %400 = %399.0;
  (%400,)
}

def @func_5561() -> (Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), bool]) {
  %401 = @func_2894() /* ty=(Tensor[(?, 16, 11), float32],) */;
  %402 = %401.0;
  %403 = @func_3879() /* ty=Tensor[(?, 16, 11), bool] */;
  (%402, %403)
}

def @func_11960() -> Tensor[(?, 16, 11), int32] {
  %405 = fn () -> Tensor[(?, 16, 11), int32] {
    %404 = @func_6487() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(15, 1), float32], float32, Tensor[(15), float32]) */;
    %404.0
  };
  %405() /* ty=Tensor[(?, 16, 11), int32] */
}

def @func_1612(%var_1611: Tensor[(15, 10, 15), float64]) -> (Tensor[(15, 10, 15), bool], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) {
  %417 = fn (%var_1573: Tensor[(15, 10, 15), float64]) -> (Tensor[(15, 10, 15), bool], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) {
    %406 = cast(%var_1573, dtype="float64") /* ty=Tensor[(15, 10, 15), float64] */;
    %407 = asinh(%406) /* ty=Tensor[(15, 10, 15), float64] */;
    %408 = cast(%var_1573, dtype="bool") /* ty=Tensor[(15, 10, 15), bool] */;
    %409 = shape_of(%407, dtype="int32") /* ty=Tensor[(3), int32] */;
    %410 = cast(%407, dtype="bool") /* ty=Tensor[(15, 10, 15), bool] */;
    %411 = dyn.reshape(%408, %409, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %412 = @func_1339() /* ty=(Tensor[(?, 16, 11), float64],) */;
    %413 = @func_704() /* ty=(Tensor[(?, 16, 11), int32],) */;
    %414 = greater_equal(%410, %411) /* ty=Tensor[(15, 10, 15), bool] */;
    %415 = %412.0;
    %416 = %413.0;
    (%414, %415, %416)
  };
  %417(%var_1611) /* ty=(Tensor[(15, 10, 15), bool], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) */
}

def @func_11249(%var_11248: Tensor[(90, 3), float64]) -> (Tensor[(?, 16, 11), float32], Tensor[(90, 3), float64], Tensor[(90, 3), int8]) {
  %431 = fn (%var_11233: Tensor[(90, 3), float64]) -> (Tensor[(?, 16, 11), float32], Tensor[(90, 3), float64], Tensor[(90, 3), int8]) {
    %418 = @func_4103() /* ty=(Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), int32], Tensor[(90, 3), float64], Tensor[(?, 16, 11), int32]) */;
    %419 = %418.3;
    %420 = cast(%var_11233, dtype="float64") /* ty=Tensor[(90, 3), float64] */;
    %421 = shape_of(%419, dtype="int32") /* ty=Tensor[(2), int32] */;
    %422 = cast(%419, dtype="float64") /* ty=Tensor[(90, 3), float64] */;
    %423 = dyn.reshape(%420, %421, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %424 = cast(%var_11233, dtype="int8") /* ty=Tensor[(90, 3), int8] */;
    %425 = shape_of(%419, dtype="int32") /* ty=Tensor[(2), int32] */;
    %426 = cast(%419, dtype="int8") /* ty=Tensor[(90, 3), int8] */;
    %427 = dyn.reshape(%424, %425, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %428 = @func_9063() /* ty=Tensor[(?, 16, 11), float32] */;
    %429 = maximum(%422, %423) /* ty=Tensor[(90, 3), float64] */;
    %430 = minimum(%426, %427) /* ty=Tensor[(90, 3), int8] */;
    (%428, %429, %430)
  };
  %431(%var_11248) /* ty=(Tensor[(?, 16, 11), float32], Tensor[(90, 3), float64], Tensor[(90, 3), int8]) */
}

def @func_8172() -> (Tensor[(?, 16, 11), int32],) {
  %433 = fn () -> (Tensor[(?, 16, 11), int32],) {
    %432 = @func_1836() /* ty=Tensor[(?, 16, 11), int32] */;
    (%432,)
  };
  %433() /* ty=(Tensor[(?, 16, 11), int32],) */
}

def @func_5342() -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(2464), float64], Tensor[(?, 16, 11), int32]) {
  @func_5340() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(2464), float64], Tensor[(?, 16, 11), int32]) */
}

def @func_3186() -> (Tensor[(?, 16, 11), uint64], Tensor[(?, 16, 11), float64]) {
  @func_3184() /* ty=(Tensor[(?, 16, 11), uint64], Tensor[(?, 16, 11), float64]) */
}

def @func_2020() -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) {
  %438 = fn () -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) {
    %434 = @func_1800() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
    %435 = @func_1713() /* ty=(Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), float64]) */;
    %436 = %434.0;
    %437 = %435.1;
    (%436, %437)
  };
  %438() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) */
}

def @func_6185(%var_6183: Tensor[(432), int16]) -> (Tensor[(14, 16, 11), uint64], Tensor[(14, 16, 11), float64], Tensor[(432), int16], Tensor[(90, 3), float64]) {
  @func_6182(%var_6183) /* ty=(Tensor[(14, 16, 11), uint64], Tensor[(14, 16, 11), float64], Tensor[(432), int16], Tensor[(90, 3), float64]) */
}

def @func_2287(%var_2272: Tensor[(1, 10, 2), uint32]) -> Tensor[(4, 10, 2), bool] {
  %439 = cast(%var_2272, dtype="bool") /* ty=Tensor[(1, 10, 2), bool] */;
  %440 = cast(meta[relay.Constant][18] /* ty=Tensor[(4, 10, 2), uint32] */, dtype="bool") /* ty=Tensor[(4, 10, 2), bool] */;
  not_equal(%439, %440) /* ty=Tensor[(4, 10, 2), bool] */
}

def @func_12162() -> Tensor[(2, 1, 8), float64] {
  %442 = fn () -> Tensor[(2, 1, 8), float64] {
    %441 = cast(meta[relay.Constant][19] /* ty=Tensor[(2, 1, 8), float64] */, dtype="float64") /* ty=Tensor[(2, 1, 8), float64] */;
    sinh(%441) /* ty=Tensor[(2, 1, 8), float64] */
  };
  %442() /* ty=Tensor[(2, 1, 8), float64] */
}

def @func_8351() -> (Tensor[(?, 16, 11), int32],) {
  %445 = fn () -> (Tensor[(?, 16, 11), int32],) {
    %443 = @func_7115() /* ty=(Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
    %444 = %443.1;
    (%444,)
  };
  %445() /* ty=(Tensor[(?, 16, 11), int32],) */
}

def @func_2452() -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(2250), float64], Tensor[(?, 16, 11), float64]) {
  @func_2450() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(2250), float64], Tensor[(?, 16, 11), float64]) */
}

def @func_6489() -> (Tensor[(?, 16, 11), int32], Tensor[(15, 1), float32], float32, Tensor[(15), float32]) {
  @func_6487() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(15, 1), float32], float32, Tensor[(15), float32]) */
}

def @func_7117() -> (Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) {
  @func_7115() /* ty=(Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) */
}

def @func_10003() -> (Tensor[(?, 16, 11), int32], Tensor[(12, 16, 11), float32], Tensor[(?, 13, 12), uint64]) {
  %451 = fn () -> (Tensor[(?, 16, 11), int32], Tensor[(12, 16, 11), float32], Tensor[(?, 13, 12), uint64]) {
    %446 = @func_3405() /* ty=(Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
    %447 = @func_5918() /* ty=(Tensor[(12, 16, 11), float32], Tensor[(6, 13, 13), bool], Tensor[(150), float32], Tensor[(4, 60), float32]) */;
    %448 = %446.1;
    %449 = %447.0;
    %450 = @func_2969() /* ty=Tensor[(?, 13, 12), uint64] */;
    (%448, %449, %450)
  };
  %451() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(12, 16, 11), float32], Tensor[(?, 13, 12), uint64]) */
}

def @func_8875(%var_8874: Tensor[(8, 9, 2), bool]) -> (Tensor[(8, 9, 2), bool], Tensor[(8, 9, 2), float64]) {
  %459 = fn (%var_8848: Tensor[(8, 9, 2), bool]) -> (Tensor[(8, 9, 2), bool], Tensor[(8, 9, 2), float64]) {
    %452 = cast(meta[relay.Constant][20] /* ty=Tensor[(8, 9, 2), bool] */, dtype="bool") /* ty=Tensor[(8, 9, 2), bool] */;
    %453 = shape_of(%var_8848, dtype="int32") /* ty=Tensor[(3), int32] */;
    %454 = cast(%var_8848, dtype="bool") /* ty=Tensor[(8, 9, 2), bool] */;
    %455 = dyn.reshape(%452, %453, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %456 = cast(%var_8848, dtype="float64") /* ty=Tensor[(8, 9, 2), float64] */;
    %457 = logical_and(%454, %455) /* ty=Tensor[(8, 9, 2), bool] */;
    %458 = sin(%456) /* ty=Tensor[(8, 9, 2), float64] */;
    (%457, %458)
  };
  %459(%var_8874) /* ty=(Tensor[(8, 9, 2), bool], Tensor[(8, 9, 2), float64]) */
}

def @func_966() -> Tensor[(?, 16, 11), float64] {
  @func_964() /* ty=Tensor[(?, 16, 11), float64] */
}

def @func_5161() -> (Tensor[(?, 16, 11), int32],) {
  @func_5159() /* ty=(Tensor[(?, 16, 11), int32],) */
}

def @func_7425() -> Tensor[(?, 16, 11), bool] {
  @func_7423() /* ty=Tensor[(?, 16, 11), bool] */
}

def @func_5260() -> Tensor[(14, 16, 11), float64] {
  @func_5258() /* ty=Tensor[(14, 16, 11), float64] */
}

def @func_1095() -> (Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64]) {
  %477 = fn () -> (Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64]) {
    %460 = @func_621() /* ty=(Tensor[(?, 16, 11), int32],) */;
    %461 = %460.0;
    %462 = @func_964() /* ty=Tensor[(?, 16, 11), float64] */;
    %463 = cast(%462, dtype="bool") /* ty=Tensor[(?, 16, 11), bool] */;
    %464 = shape_of(%461, dtype="int32") /* ty=Tensor[(3), int32] */;
    %465 = cast(%461, dtype="bool") /* ty=Tensor[(?, 16, 11), bool] */;
    %466 = dyn.reshape(%463, %464, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %467 = @func_854() /* ty=(Tensor[(?, 16, 11), float32],) */;
    %468 = @func_854() /* ty=(Tensor[(?, 16, 11), float32],) */;
    %469 = %468.0;
    %470 = cast(%469, dtype="float64") /* ty=Tensor[(?, 16, 11), float64] */;
    %471 = shape_of(%461, dtype="int32") /* ty=Tensor[(3), int32] */;
    %472 = cast(%461, dtype="float64") /* ty=Tensor[(?, 16, 11), float64] */;
    %473 = dyn.reshape(%470, %471, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %474 = equal(%465, %466) /* ty=Tensor[(?, 16, 11), bool] */;
    %475 = %467.0;
    %476 = floor_divide(%472, %473) /* ty=Tensor[(?, 16, 11), float64] */;
    (%474, %475, %476)
  };
  %477() /* ty=(Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64]) */
}

def @func_7716(%var_7714: Tensor[(432), int16], %var_7715: Tensor[(270), float64]) -> (Tensor[(?, 16, 11), int32], Tensor[(432), int16], Tensor[(432), int16], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32], Tensor[(14, 16, 11), uint64], Tensor[(270), float64], Tensor[(270), float64]) {
  %497 = fn (%var_7603: Tensor[(432), int16], %var_7708: Tensor[(270), float64]) -> (Tensor[(?, 16, 11), int32], Tensor[(432), int16], Tensor[(432), int16], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32], Tensor[(14, 16, 11), uint64], Tensor[(270), float64], Tensor[(270), float64]) {
    %478 = @func_1561() /* ty=(Tensor[(?, 16, 11), int32],) */;
    %479 = cast(%var_7603, dtype="int16") /* ty=Tensor[(432), int16] */;
    %480 = reshape(%479, newshape=[432]) /* ty=Tensor[(432), int16] */;
    %481 = @func_6182(%480) /* ty=(Tensor[(14, 16, 11), uint64], Tensor[(14, 16, 11), float64], Tensor[(432), int16], Tensor[(90, 3), float64]) */;
    %482 = @func_2450() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(2250), float64], Tensor[(?, 16, 11), float64]) */;
    %483 = @func_5561() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), bool]) */;
    %484 = %481.2;
    %485 = cast(%484, dtype="int16") /* ty=Tensor[(432), int16] */;
    %486 = reshape(%485, newshape=[432]) /* ty=Tensor[(432), int16] */;
    %487 = @func_6182(%486) /* ty=(Tensor[(14, 16, 11), uint64], Tensor[(14, 16, 11), float64], Tensor[(432), int16], Tensor[(90, 3), float64]) */;
    %488 = cast(%var_7708, dtype="float64") /* ty=Tensor[(270), float64] */;
    %489 = reshape(%488, newshape=[270]) /* ty=Tensor[(270), float64] */;
    %490 = @func_897(%489) /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(15, 3, 6), float64], Tensor[(270), float64]) */;
    %491 = %478.0;
    %492 = %482.0;
    %493 = @func_1836() /* ty=Tensor[(?, 16, 11), int32] */;
    %494 = %483.0;
    %495 = %487.0;
    %496 = %490.3;
    (%491, %484, %var_7603, %492, %493, %494, %495, %496, %var_7708)
  };
  %497(%var_7714, %var_7715) /* ty=(Tensor[(?, 16, 11), int32], Tensor[(432), int16], Tensor[(432), int16], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32], Tensor[(14, 16, 11), uint64], Tensor[(270), float64], Tensor[(270), float64]) */
}

def @func_11778(%var_11762: Tensor[(14, 7, 13), float64]) -> (Tensor[(14, 7, 13), float64],) {
  %498 = cast(meta[relay.Constant][21] /* ty=Tensor[(14, 7, 13), float64] */, dtype="float64") /* ty=Tensor[(14, 7, 13), float64] */;
  %499 = shape_of(%var_11762, dtype="int32") /* ty=Tensor[(3), int32] */;
  %500 = cast(%var_11762, dtype="float64") /* ty=Tensor[(14, 7, 13), float64] */;
  %501 = dyn.reshape(%498, %499, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %502 = floor_divide(%500, %501) /* ty=Tensor[(14, 7, 13), float64] */;
  (%502,)
}

def @func_8791() -> (Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float32]) {
  %507 = fn () -> (Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float32]) {
    %503 = @func_6653() /* ty=(Tensor[(?, 16, 11), float64],) */;
    %504 = %503.0;
    %505 = @func_6427() /* ty=Tensor[(?, 16, 11), float32] */;
    %506 = @func_3729() /* ty=Tensor[(?, 16, 11), float32] */;
    (%504, %505, %506)
  };
  %507() /* ty=(Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float32]) */
}

def @func_8521() -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(1936), bool]) {
  @func_8519() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(1936), bool]) */
}

def @func_5459() -> (Tensor[(12, 16, 11), float32],) {
  @func_5457() /* ty=(Tensor[(12, 16, 11), float32],) */
}

def @func_2328(%var_2327: Tensor[(12, 15, 11), uint8]) -> (Tensor[(12, 15, 11), uint8],) {
  %513 = fn (%var_2316: Tensor[(12, 15, 11), uint8]) -> (Tensor[(12, 15, 11), uint8],) {
    %508 = cast(%var_2316, dtype="uint8") /* ty=Tensor[(12, 15, 11), uint8] */;
    %509 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(12, 15, 11), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %510 = cast(meta[relay.Constant][22] /* ty=Tensor[(12, 15, 11), uint8] */, dtype="uint8") /* ty=Tensor[(12, 15, 11), uint8] */;
    %511 = dyn.reshape(%508, %509, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %512 = minimum(%510, %511) /* ty=Tensor[(12, 15, 11), uint8] */;
    (%512,)
  };
  %513(%var_2327) /* ty=(Tensor[(12, 15, 11), uint8],) */
}

def @func_11973() -> (Tensor[(?, 16, 11), int32],) {
  %514 = @func_1205() /* ty=Tensor[(?, 16, 11), int32] */;
  (%514,)
}

def @func_9392() -> (Tensor[(?, 16, 11), int8],) {
  @func_9390() /* ty=(Tensor[(?, 16, 11), int8],) */
}

def @func_11311(%var_11309: Tensor[(270), float64]) -> (Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32], Tensor[(90, 3), float32]) {
  @func_11308(%var_11309) /* ty=(Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32], Tensor[(90, 3), float32]) */
}

def @func_6065() -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) {
  %515 = @func_2113() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %516 = %515.0;
  %517 = @func_964() /* ty=Tensor[(?, 16, 11), float64] */;
  (%516, %517)
}

def @func_6479(%var_6477: Tensor[(7, 12, 5), uint32], %var_6478: Tensor[(7, 12, 5), uint32]) -> (Tensor[(7, 12, 5), bool], Tensor[(?, 16, 11), bool], Tensor[(7, 12, 5), float64]) {
  @func_6475(%var_6477, %var_6478) /* ty=(Tensor[(7, 12, 5), bool], Tensor[(?, 16, 11), bool], Tensor[(7, 12, 5), float64]) */
}

def @func_705() -> (Tensor[(?, 16, 11), int32],) {
  %520 = fn () -> (Tensor[(?, 16, 11), int32],) {
    %518 = @func_584() /* ty=(Tensor[(?, 16, 11), int32],) */;
    %519 = %518.0;
    (%519,)
  };
  %520() /* ty=(Tensor[(?, 16, 11), int32],) */
}

def @func_5067() -> (Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) {
  %521 = @func_3307() /* ty=(Tensor[(?, 16, 11), float32],) */;
  %522 = %521.0;
  %523 = @func_1836() /* ty=Tensor[(?, 16, 11), int32] */;
  (%522, %523)
}

def @func_7096() -> Tensor[(?, 16, 11), int32] {
  %524 = @func_747() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %524.0
}

def @func_1550() -> (Tensor[(?, 16, 11), int32], Tensor[(270), float64], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), uint64], Tensor[(?, 16, 11), float32]) {
  %546 = fn () -> (Tensor[(?, 16, 11), int32], Tensor[(270), float64], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), uint64], Tensor[(?, 16, 11), float32]) {
    %525 = @func_747() /* ty=(Tensor[(?, 16, 11), int32],) */;
    %526 = @func_584() /* ty=(Tensor[(?, 16, 11), int32],) */;
    %527 = %526.0;
    %528 = cast(meta[relay.Constant][23] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
    %529 = reshape(%528, newshape=[1, 270]) /* ty=Tensor[(1, 270), float64] */;
    %530 = @func_1309(%529) /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(15, 3, 6), float64], Tensor[(1, 270), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */;
    %531 = %530.5;
    %532 = cast(%531, dtype="float32") /* ty=Tensor[(?, 16, 11), float32] */;
    %533 = shape_of(%527, dtype="int32") /* ty=Tensor[(3), int32] */;
    %534 = cast(%527, dtype="float32") /* ty=Tensor[(?, 16, 11), float32] */;
    %535 = dyn.reshape(%532, %533, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %536 = cast(%531, dtype="uint64") /* ty=Tensor[(?, 16, 11), uint64] */;
    %537 = shape_of(%527, dtype="int32") /* ty=Tensor[(3), int32] */;
    %538 = cast(%527, dtype="uint64") /* ty=Tensor[(?, 16, 11), uint64] */;
    %539 = dyn.reshape(%536, %537, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %540 = @func_854() /* ty=(Tensor[(?, 16, 11), float32],) */;
    %541 = %525.0;
    %542 = @func_1211() /* ty=Tensor[(?, 16, 11), int32] */;
    %543 = multiply(%534, %535) /* ty=Tensor[(?, 16, 11), float32] */;
    %544 = subtract(%538, %539) /* ty=Tensor[(?, 16, 11), uint64] */;
    %545 = %540.0;
    (%541, meta[relay.Constant][23] /* ty=Tensor[(270), float64] */, %542, %543, %544, %545)
  };
  %546() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(270), float64], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), uint64], Tensor[(?, 16, 11), float32]) */
}

def @func_621() -> (Tensor[(?, 16, 11), int32],) {
  %547 = @func_584() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %548 = %547.0;
  (%548,)
}

def @func_10053() -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32]) {
  @func_10051() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32]) */
}

def @func_3501(%var_3500: Tensor[(15, 10, 1), float32]) -> (Tensor[(15, 10, 1), float32], Tensor[(?, 16, 11), float64]) {
  %553 = fn (%var_3480: Tensor[(15, 10, 1), float32]) -> (Tensor[(15, 10, 1), float32], Tensor[(?, 16, 11), float64]) {
    %549 = cast(%var_3480, dtype="float32") /* ty=Tensor[(15, 10, 1), float32] */;
    %550 = @func_2720() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), int32], Tensor[(270), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */;
    %551 = erf(%549) /* ty=Tensor[(15, 10, 1), float32] */;
    %552 = %550.1;
    (%551, %552)
  };
  %553(%var_3500) /* ty=(Tensor[(15, 10, 1), float32], Tensor[(?, 16, 11), float64]) */
}

def @func_9429() -> (Tensor[(?, 16, 11), float32], Tensor[(14, 16, 11), float64]) {
  @func_9427() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(14, 16, 11), float64]) */
}

def @func_897(%var_878: Tensor[(270), float64]) -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(15, 3, 6), float64], Tensor[(270), float64]) {
  %554 = @func_621() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %555 = @func_584() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %556 = cast(%var_878, dtype="float64") /* ty=Tensor[(270), float64] */;
  %557 = cast(%var_878, dtype="float64") /* ty=Tensor[(270), float64] */;
  %558 = reshape(%556, newshape=[15, 3, 6]) /* ty=Tensor[(15, 3, 6), float64] */;
  %559 = reshape(%557, newshape=[15, 3, 6]) /* ty=Tensor[(15, 3, 6), float64] */;
  %560 = @func_447(%558, %559) /* ty=(Tensor[(15, 3, 6), float64], Tensor[(15, 3, 6), float64]) */;
  %561 = %554.0;
  %562 = %555.0;
  %563 = %560.1;
  (%561, %562, %563, %var_878)
}

def @func_1206() -> Tensor[(?, 16, 11), int32] {
  %565 = fn () -> Tensor[(?, 16, 11), int32] {
    %564 = @func_621() /* ty=(Tensor[(?, 16, 11), int32],) */;
    %564.0
  };
  %565() /* ty=Tensor[(?, 16, 11), int32] */
}

def @func_8260(%var_8257: Tensor[(240), float32]) -> (Tensor[(?, 16, 11), int32], Tensor[(240), float32], Tensor[(240), float32]) {
  %566 = @func_5067() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */;
  %567 = cast(%var_8257, dtype="float32") /* ty=Tensor[(240), float32] */;
  %568 = reshape(%567, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %569 = @func_6974(%568) /* ty=(Tensor[(?, 16, 11), float32], Tensor[(14, 16, 11), float64], Tensor[(432), int16], Tensor[(15, 10, 1), float32], Tensor[(150), float32], Tensor[(240), float32], Tensor[(?, 16, 11), float64]) */;
  %570 = %566.1;
  %571 = %569.5;
  (%570, %571, %var_8257)
}

def @func_4518() -> (Tensor[(?, 16, 11), float32], Tensor[(1014), bool], Tensor[(6, 13, 13), bool]) {
  %572 = @func_2614() /* ty=(Tensor[(?, 16, 11), float32],) */;
  %573 = cast(meta[relay.Constant][24] /* ty=Tensor[(1014), bool] */, dtype="bool") /* ty=Tensor[(1014), bool] */;
  %574 = reshape(%573, newshape=[6, 13, 13]) /* ty=Tensor[(6, 13, 13), bool] */;
  %575 = @func_3961(%574) /* ty=(Tensor[(6, 13, 13), bool], Tensor[(?, 16, 11), float32]) */;
  %576 = %575.0;
  %577 = cast(%576, dtype="float32") /* ty=Tensor[(6, 13, 13), float32] */;
  %578 = sqrt(%577) /* ty=Tensor[(6, 13, 13), float32] */;
  %579 = cast(%576, dtype="uint32") /* ty=Tensor[(6, 13, 13), uint32] */;
  %580 = shape_of(%578, dtype="int32") /* ty=Tensor[(3), int32] */;
  %581 = cast(%578, dtype="uint32") /* ty=Tensor[(6, 13, 13), uint32] */;
  %582 = dyn.reshape(%579, %580, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %583 = left_shift(%581, %582) /* ty=Tensor[(6, 13, 13), uint32] */;
  %584 = cast(%583, dtype="bool") /* ty=Tensor[(6, 13, 13), bool] */;
  %585 = shape_of(%578, dtype="int32") /* ty=Tensor[(3), int32] */;
  %586 = cast(%578, dtype="bool") /* ty=Tensor[(6, 13, 13), bool] */;
  %587 = dyn.reshape(%584, %585, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %588 = %572.0;
  %589 = greater_equal(%586, %587) /* ty=Tensor[(6, 13, 13), bool] */;
  (%588, meta[relay.Constant][24] /* ty=Tensor[(1014), bool] */, %589)
}

def @func_1562() -> (Tensor[(?, 16, 11), int32],) {
  %592 = fn () -> (Tensor[(?, 16, 11), int32],) {
    %590 = @func_621() /* ty=(Tensor[(?, 16, 11), int32],) */;
    %591 = %590.0;
    (%591,)
  };
  %592() /* ty=(Tensor[(?, 16, 11), int32],) */
}

def @func_10616() -> (Tensor[(?, 16, 11), int8],) {
  %604 = fn () -> (Tensor[(?, 16, 11), int8],) {
    %593 = @func_4703() /* ty=(Tensor[(?, 16, 11), float64],) */;
    %594 = %593.0;
    %595 = cast(%594, dtype="int32") /* ty=Tensor[(?, 16, 11), int32] */;
    %596 = reshape(%595, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), int32] */;
    %597 = @func_10416(%596) /* ty=(Tensor[(?, 16, 11), float64],) */;
    %598 = %597.0;
    %599 = cast(%598, dtype="int8") /* ty=Tensor[(?, 16, 11), int8] */;
    %600 = shape_of(%594, dtype="int32") /* ty=Tensor[(3), int32] */;
    %601 = cast(%594, dtype="int8") /* ty=Tensor[(?, 16, 11), int8] */;
    %602 = dyn.reshape(%599, %600, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %603 = maximum(%601, %602) /* ty=Tensor[(?, 16, 11), int8] */;
    (%603,)
  };
  %604() /* ty=(Tensor[(?, 16, 11), int8],) */
}

def @func_7423() -> Tensor[(?, 16, 11), bool] {
  %605 = @func_6427() /* ty=Tensor[(?, 16, 11), float32] */;
  %606 = @func_4518() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(1014), bool], Tensor[(6, 13, 13), bool]) */;
  %607 = %606.0;
  %608 = cast(%607, dtype="bool") /* ty=Tensor[(?, 16, 11), bool] */;
  %609 = shape_of(%605, dtype="int32") /* ty=Tensor[(3), int32] */;
  %610 = cast(%605, dtype="bool") /* ty=Tensor[(?, 16, 11), bool] */;
  %611 = dyn.reshape(%608, %609, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%610, %611) /* ty=Tensor[(?, 16, 11), bool] */
}

def @func_8461() -> (Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32]) {
  %612 = @func_7535() /* ty=(Tensor[(?, 16, 11), int8],) */;
  %613 = @func_7535() /* ty=(Tensor[(?, 16, 11), int8],) */;
  %614 = @func_8171() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %615 = @func_2728() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %616 = %612.0;
  %617 = %613.0;
  %618 = %614.0;
  %619 = %615.0;
  (%616, %617, %618, %619)
}

def @func_7951() -> Tensor[(15), float32] {
  @func_7949() /* ty=Tensor[(15), float32] */
}

def @func_9808(%var_9768: float32, %var_9769: Tensor[(15), float32]) -> (Tensor[(15, 1), float32], Tensor[(15), float32], Tensor[(?, 16, 11), float64]) {
  %620 = cast(%var_9768, dtype="float32") /* ty=float32 */;
  %621 = cast(%var_9769, dtype="float32") /* ty=Tensor[(15), float32] */;
  %622 = reshape(%620, newshape=[]) /* ty=float32 */;
  %623 = reshape(%621, newshape=[15, 1]) /* ty=Tensor[(15, 1), float32] */;
  %624 = @func_5569(%622, %623) /* ty=(Tensor[(15, 1), float32],) */;
  %625 = @func_1243() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) */;
  %626 = %625.1;
  %627 = cast(%626, dtype="float64") /* ty=Tensor[(?, 16, 11), float64] */;
  %628 = cast(%var_9768, dtype="float64") /* ty=float64 */;
  %629 = %624.0;
  %630 = floor_mod(%627, %628) /* ty=Tensor[(?, 16, 11), float64] */;
  (%629, %var_9769, %630)
}

def @func_2895() -> (Tensor[(?, 16, 11), float32],) {
  %633 = fn () -> (Tensor[(?, 16, 11), float32],) {
    %631 = @func_1094() /* ty=(Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64]) */;
    %632 = %631.1;
    (%632,)
  };
  %633() /* ty=(Tensor[(?, 16, 11), float32],) */
}

def @func_3309() -> (Tensor[(?, 16, 11), float32],) {
  @func_3307() /* ty=(Tensor[(?, 16, 11), float32],) */
}

def @func_5683() -> (Tensor[(?, 16, 11), int32],) {
  %634 = @func_1814() /* ty=(Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
  %635 = %634.1;
  (%635,)
}

def @func_8646() -> Tensor[(12, 16, 11), float32] {
  @func_8644() /* ty=Tensor[(12, 16, 11), float32] */
}

def @func_5411(%var_5409: Tensor[(1014), bool]) -> (Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32], Tensor[(6, 13, 13), bool], Tensor[(1014), bool]) {
  @func_5408(%var_5409) /* ty=(Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32], Tensor[(6, 13, 13), bool], Tensor[(1014), bool]) */
}

def @func_10051() -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32]) {
  %636 = @func_1243() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) */;
  %637 = @func_8350() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %638 = %636.0;
  %639 = %637.0;
  (%638, %639)
}

def @func_10313() -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32]) {
  %644 = fn () -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32]) {
    %640 = @func_5340() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(2464), float64], Tensor[(?, 16, 11), int32]) */;
    %641 = @func_1549() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(270), float64], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), uint64], Tensor[(?, 16, 11), float32]) */;
    %642 = %640.3;
    %643 = %641.2;
    (%642, %643)
  };
  %644() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32]) */
}

def @func_12287(%var_12285: Tensor[(264, 2), bool]) -> (Tensor[(?, 16, 11), bool], Tensor[(3, 16, 11), float64], Tensor[(264, 2), bool], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(12, 16, 11), float32], Tensor[(?, 16, 11), float32], Tensor[(15, 1), float32], float32, Tensor[(15), float32], Tensor[(?, 16, 11), int32]) {
  @func_12284(%var_12285) /* ty=(Tensor[(?, 16, 11), bool], Tensor[(3, 16, 11), float64], Tensor[(264, 2), bool], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(12, 16, 11), float32], Tensor[(?, 16, 11), float32], Tensor[(15, 1), float32], float32, Tensor[(15), float32], Tensor[(?, 16, 11), int32]) */
}

def @func_6817() -> (Tensor[(?, 16, 11), bool],) {
  %645 = @func_3623() /* ty=Tensor[(?, 16, 11), bool] */;
  (%645,)
}

def @func_1651() -> (Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64]) {
  %646 = @func_1549() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(270), float64], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), uint64], Tensor[(?, 16, 11), float32]) */;
  %647 = %646.2;
  %648 = cast(%647, dtype="float32") /* ty=Tensor[(?, 16, 11), float32] */;
  %649 = cast(%647, dtype="float32") /* ty=Tensor[(?, 16, 11), float32] */;
  %650 = cast(%647, dtype="float64") /* ty=Tensor[(?, 16, 11), float64] */;
  %651 = exp(%648) /* ty=Tensor[(?, 16, 11), float32] */;
  %652 = acosh(%649) /* ty=Tensor[(?, 16, 11), float32] */;
  %653 = cosh(%650) /* ty=Tensor[(?, 16, 11), float64] */;
  (%651, %652, %653)
}

def @func_5651() -> (Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), float64], Tensor[(150), float32], Tensor[(?, 16, 11), bool]) {
  %660 = fn () -> (Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), float64], Tensor[(150), float32], Tensor[(?, 16, 11), bool]) {
    %654 = cast(meta[relay.Constant][25] /* ty=Tensor[(150), float32] */, dtype="float32") /* ty=Tensor[(150), float32] */;
    %655 = reshape(%654, newshape=[15, 10, 1]) /* ty=Tensor[(15, 10, 1), float32] */;
    %656 = @func_3499(%655) /* ty=(Tensor[(15, 10, 1), float32], Tensor[(?, 16, 11), float64]) */;
    %657 = @func_4427() /* ty=Tensor[(?, 16, 11), bool] */;
    %658 = %656.1;
    %659 = @func_4427() /* ty=Tensor[(?, 16, 11), bool] */;
    (%657, %658, meta[relay.Constant][25] /* ty=Tensor[(150), float32] */, %659)
  };
  %660() /* ty=(Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), float64], Tensor[(150), float32], Tensor[(?, 16, 11), bool]) */
}

def @func_2837() -> (Tensor[(?, 16, 11), float64],) {
  @func_2835() /* ty=(Tensor[(?, 16, 11), float64],) */
}

def @func_5258() -> Tensor[(14, 16, 11), float64] {
  %661 = @func_1713() /* ty=(Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), float64]) */;
  %661.0
}

def @func_8216() -> Tensor[(?, 16, 11), int32] {
  %663 = fn () -> Tensor[(?, 16, 11), int32] {
    %662 = @func_1243() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) */;
    %662.0
  };
  %663() /* ty=Tensor[(?, 16, 11), int32] */
}

def @func_8958() -> Tensor[(?, 16, 11), int32] {
  @func_8956() /* ty=Tensor[(?, 16, 11), int32] */
}

def @func_3881() -> Tensor[(?, 16, 11), bool] {
  @func_3879() /* ty=Tensor[(?, 16, 11), bool] */
}

def @func_5069() -> (Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) {
  @func_5067() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */
}

def @func_3143(%var_3077: Tensor[(4, 16, 11), int32]) -> (Tensor[(?, 13, 12), uint64], Tensor[(4, 16, 11), float32], Tensor[(4, 16, 11), float64], Tensor[(?, 13, 12), uint64], Tensor[(?, 16, 11), int32]) {
  %664 = @func_1814() /* ty=(Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
  %665 = %664.1;
  %666 = cast(%665, dtype="float32") /* ty=Tensor[(?, 16, 11), float32] */;
  %667 = cast(%var_3077, dtype="float32") /* ty=Tensor[(4, 16, 11), float32] */;
  %668 = cast(%var_3077, dtype="float64") /* ty=Tensor[(4, 16, 11), float64] */;
  %669 = @func_1800() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
  %670 = @func_2969() /* ty=Tensor[(?, 13, 12), uint64] */;
  %671 = power(%666, %667) /* ty=Tensor[(4, 16, 11), float32] */;
  %672 = log10(%668) /* ty=Tensor[(4, 16, 11), float64] */;
  %673 = @func_2969() /* ty=Tensor[(?, 13, 12), uint64] */;
  %674 = %669.0;
  (%670, %671, %672, %673, %674)
}

def @func_3307() -> (Tensor[(?, 16, 11), float32],) {
  %675 = @func_1549() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(270), float64], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), uint64], Tensor[(?, 16, 11), float32]) */;
  %676 = %675.3;
  (%676,)
}

def @func_8809(%var_8808: Tensor[(11, 12, 7), float32]) -> Tensor[(11, 12, 7), float32] {
  %678 = fn (%var_8801: Tensor[(11, 12, 7), float32]) -> Tensor[(11, 12, 7), float32] {
    %677 = cast(%var_8801, dtype="float32") /* ty=Tensor[(11, 12, 7), float32] */;
    log(%677) /* ty=Tensor[(11, 12, 7), float32] */
  };
  %678(%var_8808) /* ty=Tensor[(11, 12, 7), float32] */
}

def @func_3730() -> Tensor[(?, 16, 11), float32] {
  %680 = fn () -> Tensor[(?, 16, 11), float32] {
    %679 = @func_3307() /* ty=(Tensor[(?, 16, 11), float32],) */;
    %679.0
  };
  %680() /* ty=Tensor[(?, 16, 11), float32] */
}

def @func_11800() -> (Tensor[(15), float32], Tensor[(14, 16, 11), float64]) {
  %681 = @func_3802() /* ty=(Tensor[(14, 16, 11), float64], Tensor[(14, 16, 11), float64]) */;
  %682 = @func_6770() /* ty=Tensor[(15), float32] */;
  %683 = %681.1;
  (%682, %683)
}

def @func_7098() -> Tensor[(?, 16, 11), int32] {
  @func_7096() /* ty=Tensor[(?, 16, 11), int32] */
}

def @func_10394() -> (Tensor[(?, 16, 11), int8], Tensor[(270), float64], Tensor[(270), float64]) {
  @func_10392() /* ty=(Tensor[(?, 16, 11), int8], Tensor[(270), float64], Tensor[(270), float64]) */
}

def @func_2114() -> (Tensor[(?, 16, 11), int32],) {
  %685 = fn () -> (Tensor[(?, 16, 11), int32],) {
    %684 = @func_1836() /* ty=Tensor[(?, 16, 11), int32] */;
    (%684,)
  };
  %685() /* ty=(Tensor[(?, 16, 11), int32],) */
}

def @func_6517() -> (Tensor[(?, 16, 11), bool],) {
  @func_6515() /* ty=(Tensor[(?, 16, 11), bool],) */
}

def @func_11975() -> (Tensor[(?, 16, 11), int32],) {
  @func_11973() /* ty=(Tensor[(?, 16, 11), int32],) */
}

def @func_2728() -> (Tensor[(?, 16, 11), int32],) {
  %686 = @func_1211() /* ty=Tensor[(?, 16, 11), int32] */;
  (%686,)
}

def @func_1309(%var_1298: Tensor[(1, 270), float64]) -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(15, 3, 6), float64], Tensor[(1, 270), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) {
  %687 = @func_747() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %688 = @func_1243() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) */;
  %689 = cast(%var_1298, dtype="float64") /* ty=Tensor[(1, 270), float64] */;
  %690 = cast(%var_1298, dtype="float64") /* ty=Tensor[(1, 270), float64] */;
  %691 = reshape(%689, newshape=[15, 3, 6]) /* ty=Tensor[(15, 3, 6), float64] */;
  %692 = reshape(%690, newshape=[15, 3, 6]) /* ty=Tensor[(15, 3, 6), float64] */;
  %693 = @func_447(%691, %692) /* ty=(Tensor[(15, 3, 6), float64], Tensor[(15, 3, 6), float64]) */;
  %694 = @func_1094() /* ty=(Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64]) */;
  %695 = %694.2;
  %696 = @func_704() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %697 = %696.0;
  %698 = cast(%697, dtype="float32") /* ty=Tensor[(?, 16, 11), float32] */;
  %699 = shape_of(%695, dtype="int32") /* ty=Tensor[(3), int32] */;
  %700 = cast(%695, dtype="float32") /* ty=Tensor[(?, 16, 11), float32] */;
  %701 = dyn.reshape(%698, %699, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %702 = @func_916() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %703 = %687.0;
  %704 = %688.0;
  %705 = %693.0;
  %706 = power(%700, %701) /* ty=Tensor[(?, 16, 11), float32] */;
  %707 = %702.0;
  (%703, %704, %705, %var_1298, %706, %707)
}

def @func_3964(%var_3962: Tensor[(6, 13, 13), bool]) -> (Tensor[(6, 13, 13), bool], Tensor[(?, 16, 11), float32]) {
  @func_3961(%var_3962) /* ty=(Tensor[(6, 13, 13), bool], Tensor[(?, 16, 11), float32]) */
}

def @func_1340() -> (Tensor[(?, 16, 11), float64],) {
  %709 = fn () -> (Tensor[(?, 16, 11), float64],) {
    %708 = @func_964() /* ty=Tensor[(?, 16, 11), float64] */;
    (%708,)
  };
  %709() /* ty=(Tensor[(?, 16, 11), float64],) */
}

def @func_11928(%var_11921: Tensor[(4, 8, 5), float32]) -> (Tensor[(4, 8, 5), float32], Tensor[(?, 16, 11), int32]) {
  %710 = cast(%var_11921, dtype="float32") /* ty=Tensor[(4, 8, 5), float32] */;
  %711 = @func_3262() /* ty=(Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
  %712 = sigmoid(%710) /* ty=Tensor[(4, 8, 5), float32] */;
  %713 = %711.1;
  (%712, %713)
}

def @func_5932() -> Tensor[(?, 16, 11), bool] {
  @func_5930() /* ty=Tensor[(?, 16, 11), bool] */
}

def @func_1213() -> Tensor[(?, 16, 11), int32] {
  @func_1211() /* ty=Tensor[(?, 16, 11), int32] */
}

def @func_8084() -> (Tensor[(12, 16, 11), float32],) {
  %714 = @func_3375() /* ty=(Tensor[(12, 16, 11), float32], Tensor[(?, 16, 11), bool]) */;
  %715 = %714.0;
  (%715,)
}

def @func_12040() -> Tensor[(?, 16, 11), int32] {
  %716 = fn () -> Tensor[(?, 16, 11), int32] {
    @func_1211() /* ty=Tensor[(?, 16, 11), int32] */
  };
  %716() /* ty=Tensor[(?, 16, 11), int32] */
}

def @func_4103() -> (Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), int32], Tensor[(90, 3), float64], Tensor[(?, 16, 11), int32]) {
  %717 = @func_2614() /* ty=(Tensor[(?, 16, 11), float32],) */;
  %718 = %717.0;
  %719 = @func_2057() /* ty=Tensor[(?, 16, 11), float64] */;
  %720 = cast(%719, dtype="bool") /* ty=Tensor[(?, 16, 11), bool] */;
  %721 = shape_of(%718, dtype="int32") /* ty=Tensor[(3), int32] */;
  %722 = cast(%718, dtype="bool") /* ty=Tensor[(?, 16, 11), bool] */;
  %723 = dyn.reshape(%720, %721, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %724 = cast(meta[relay.Constant][26] /* ty=Tensor[(90, 3), float64] */, dtype="float64") /* ty=Tensor[(90, 3), float64] */;
  %725 = reshape(%724, newshape=[1, 270]) /* ty=Tensor[(1, 270), float64] */;
  %726 = @func_1309(%725) /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(15, 3, 6), float64], Tensor[(1, 270), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */;
  %727 = @func_916() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %728 = @func_3941() /* ty=Tensor[(?, 16, 11), int8] */;
  %729 = less(%722, %723) /* ty=Tensor[(?, 16, 11), bool] */;
  %730 = %726.1;
  %731 = %727.0;
  (%728, %729, %730, meta[relay.Constant][26] /* ty=Tensor[(90, 3), float64] */, %731)
}

def @func_10632() -> (Tensor[(?, 16, 11), int32],) {
  @func_10630() /* ty=(Tensor[(?, 16, 11), int32],) */
}

def @func_11130() -> (Tensor[(12, 16, 11), float32],) {
  %734 = fn () -> (Tensor[(12, 16, 11), float32],) {
    %732 = @func_8084() /* ty=(Tensor[(12, 16, 11), float32],) */;
    %733 = %732.0;
    (%733,)
  };
  %734() /* ty=(Tensor[(12, 16, 11), float32],) */
}

def @func_7755() -> (Tensor[(5, 16, 11), int32], Tensor[(6, 13, 13), bool], Tensor[(150), float32], Tensor[(24, 10), float32]) {
  %746 = fn () -> (Tensor[(5, 16, 11), int32], Tensor[(6, 13, 13), bool], Tensor[(150), float32], Tensor[(24, 10), float32]) {
    %735 = @func_5236() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32]) */;
    %736 = %735.0;
    %737 = cast(%736, dtype="int32") /* ty=Tensor[(?, 16, 11), int32] */;
    %738 = cast(meta[relay.Constant][27] /* ty=Tensor[(5, 16, 11), int32] */, dtype="int32") /* ty=Tensor[(5, 16, 11), int32] */;
    %739 = cast(meta[relay.Constant][28] /* ty=Tensor[(150), float32] */, dtype="float32") /* ty=Tensor[(150), float32] */;
    %740 = cast(meta[relay.Constant][29] /* ty=Tensor[(24, 10), float32] */, dtype="float32") /* ty=Tensor[(24, 10), float32] */;
    %741 = reshape(%739, newshape=[150, 1]) /* ty=Tensor[(150, 1), float32] */;
    %742 = reshape(%740, newshape=[240]) /* ty=Tensor[(240), float32] */;
    %743 = @func_5785(%741, %742) /* ty=(Tensor[(?, 16, 11), int32], Tensor[(15, 10, 1), float32], Tensor[(150, 1), float32], Tensor[(?, 16, 11), int32], Tensor[(12, 4, 5), float32], Tensor[(240), float32], Tensor[(?, 16, 11), float64], Tensor[(6, 13, 13), bool]) */;
    %744 = logical_xor(%737, %738) /* ty=Tensor[(5, 16, 11), int32] */;
    %745 = %743.7;
    (%744, %745, meta[relay.Constant][28] /* ty=Tensor[(150), float32] */, meta[relay.Constant][29] /* ty=Tensor[(24, 10), float32] */)
  };
  %746() /* ty=(Tensor[(5, 16, 11), int32], Tensor[(6, 13, 13), bool], Tensor[(150), float32], Tensor[(24, 10), float32]) */
}

def @func_7236(%var_7234: Tensor[(9, 16, 11), float32], %var_7235: Tensor[(528), int32]) -> (Tensor[(9, 16, 11), bool], Tensor[(3, 16, 11), float32], Tensor[(528), int32]) {
  @func_7232(%var_7234, %var_7235) /* ty=(Tensor[(9, 16, 11), bool], Tensor[(3, 16, 11), float32], Tensor[(528), int32]) */
}

def @func_1801() -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) {
  %753 = fn () -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) {
    %747 = @func_1561() /* ty=(Tensor[(?, 16, 11), int32],) */;
    %748 = @func_1339() /* ty=(Tensor[(?, 16, 11), float64],) */;
    %749 = @func_916() /* ty=(Tensor[(?, 16, 11), int32],) */;
    %750 = %747.0;
    %751 = %748.0;
    %752 = %749.0;
    (%750, %751, %752)
  };
  %753() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) */
}

def @func_11330() -> (Tensor[(2, 72), float64],) {
  %754 = @func_9715() /* ty=(Tensor[(?, 16, 11), float64], Tensor[(8, 9, 2), bool], Tensor[(2, 72), bool], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) */;
  %755 = %754.2;
  %756 = cast(%755, dtype="float64") /* ty=Tensor[(2, 72), float64] */;
  %757 = asinh(%756) /* ty=Tensor[(2, 72), float64] */;
  (%757,)
}

def @func_10570() -> (Tensor[(?, 16, 11), int32],) {
  %758 = @func_1561() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %759 = %758.0;
  (%759,)
}

def @func_3961(%var_3951: Tensor[(6, 13, 13), bool]) -> (Tensor[(6, 13, 13), bool], Tensor[(?, 16, 11), float32]) {
  %760 = cast(meta[relay.Constant][30] /* ty=Tensor[(6, 1, 13), bool] */, dtype="bool") /* ty=Tensor[(6, 1, 13), bool] */;
  %761 = cast(%var_3951, dtype="bool") /* ty=Tensor[(6, 13, 13), bool] */;
  %762 = @func_3424() /* ty=(Tensor[(?, 16, 11), float32],) */;
  %763 = logical_or(%760, %761) /* ty=Tensor[(6, 13, 13), bool] */;
  %764 = %762.0;
  (%763, %764)
}

def @func_5920() -> (Tensor[(12, 16, 11), float32], Tensor[(6, 13, 13), bool], Tensor[(150), float32], Tensor[(4, 60), float32]) {
  @func_5918() /* ty=(Tensor[(12, 16, 11), float32], Tensor[(6, 13, 13), bool], Tensor[(150), float32], Tensor[(4, 60), float32]) */
}

def @func_10418(%var_10417: Tensor[(1, 16, 11), int32]) -> (Tensor[(?, 16, 11), float64],) {
  %772 = fn (%var_10411: Tensor[(1, 16, 11), int32]) -> (Tensor[(?, 16, 11), float64],) {
    %765 = @func_1243() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) */;
    %766 = %765.0;
    %767 = cast(%var_10411, dtype="float64") /* ty=Tensor[(1, 16, 11), float64] */;
    %768 = shape_of(%766, dtype="int32") /* ty=Tensor[(3), int32] */;
    %769 = cast(%766, dtype="float64") /* ty=Tensor[(?, 16, 11), float64] */;
    %770 = dyn.reshape(%767, %768, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %771 = divide(%769, %770) /* ty=Tensor[(?, 16, 11), float64] */;
    (%771,)
  };
  %772(%var_10417) /* ty=(Tensor[(?, 16, 11), float64],) */
}

def @func_4772() -> (Tensor[(?, 16, 11), float64], Tensor[(14, 16, 11), float64]) {
  @func_4770() /* ty=(Tensor[(?, 16, 11), float64], Tensor[(14, 16, 11), float64]) */
}

def @func_3264() -> (Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), int32]) {
  @func_3262() /* ty=(Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), int32]) */
}

def @func_3879() -> Tensor[(?, 16, 11), bool] {
  @func_3623() /* ty=Tensor[(?, 16, 11), bool] */
}

def @func_3479() -> Tensor[(14, 16, 11), float64] {
  %774 = fn () -> Tensor[(14, 16, 11), float64] {
    %773 = @func_3405() /* ty=(Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
    %773.0
  };
  %774() /* ty=Tensor[(14, 16, 11), float64] */
}

def @func_586() -> (Tensor[(?, 16, 11), int32],) {
  @func_584() /* ty=(Tensor[(?, 16, 11), int32],) */
}

def @func_4841() -> (Tensor[(14, 16, 11), float64],) {
  %775 = @func_3478() /* ty=Tensor[(14, 16, 11), float64] */;
  (%775,)
}

def @func_10630() -> (Tensor[(?, 16, 11), int32],) {
  %776 = @func_10570() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %777 = %776.0;
  (%777,)
}

def @func_8463() -> (Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32]) {
  @func_8461() /* ty=(Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32]) */
}

def @func_11614() -> (Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) {
  %781 = fn () -> (Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) {
    %778 = @func_1713() /* ty=(Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), float64]) */;
    %779 = %778.1;
    %780 = @func_11546() /* ty=Tensor[(?, 16, 11), int32] */;
    (%779, %780)
  };
  %781() /* ty=(Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) */
}

def @func_10346(%var_10345: Tensor[(8, 9, 10), float64]) -> (Tensor[(8, 9, 10), float64], Tensor[(?, 16, 11), float32], Tensor[(176), bool], Tensor[(4, 220), bool], Tensor[(1014), bool]) {
  %795 = fn (%var_10328: Tensor[(8, 9, 10), float64]) -> (Tensor[(8, 9, 10), float64], Tensor[(?, 16, 11), float32], Tensor[(176), bool], Tensor[(4, 220), bool], Tensor[(1014), bool]) {
    %782 = cast(%var_10328, dtype="float64") /* ty=Tensor[(8, 9, 10), float64] */;
    %783 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(8, 9, 10), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %784 = cast(meta[relay.Constant][31] /* ty=Tensor[(8, 9, 10), float64] */, dtype="float64") /* ty=Tensor[(8, 9, 10), float64] */;
    %785 = dyn.reshape(%782, %783, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %786 = cast(meta[relay.Constant][32] /* ty=Tensor[(176), bool] */, dtype="bool") /* ty=Tensor[(176), bool] */;
    %787 = cast(meta[relay.Constant][33] /* ty=Tensor[(4, 220), bool] */, dtype="bool") /* ty=Tensor[(4, 220), bool] */;
    %788 = cast(meta[relay.Constant][34] /* ty=Tensor[(1014), bool] */, dtype="bool") /* ty=Tensor[(1014), bool] */;
    %789 = reshape(%786, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), bool] */;
    %790 = reshape(%787, newshape=[5, 16, 11]) /* ty=Tensor[(5, 16, 11), bool] */;
    %791 = reshape(%788, newshape=[1, 1014]) /* ty=Tensor[(1, 1014), bool] */;
    %792 = @func_5969(%789, %790, %791) /* ty=(Tensor[(?, 16, 11), int16], Tensor[(5, 16, 11), uint8], Tensor[(?, 16, 11), float32], Tensor[(1, 1014), bool]) */;
    %793 = floor_divide(%784, %785) /* ty=Tensor[(8, 9, 10), float64] */;
    %794 = %792.2;
    (%793, %794, meta[relay.Constant][32] /* ty=Tensor[(176), bool] */, meta[relay.Constant][33] /* ty=Tensor[(4, 220), bool] */, meta[relay.Constant][34] /* ty=Tensor[(1014), bool] */)
  };
  %795(%var_10345) /* ty=(Tensor[(8, 9, 10), float64], Tensor[(?, 16, 11), float32], Tensor[(176), bool], Tensor[(4, 220), bool], Tensor[(1014), bool]) */
}

def @func_3760() -> Tensor[(?, 16, 11), bool] {
  @func_3758() /* ty=Tensor[(?, 16, 11), bool] */
}

def @func_5785(%var_5739: Tensor[(150, 1), float32], %var_5757: Tensor[(240), float32]) -> (Tensor[(?, 16, 11), int32], Tensor[(15, 10, 1), float32], Tensor[(150, 1), float32], Tensor[(?, 16, 11), int32], Tensor[(12, 4, 5), float32], Tensor[(240), float32], Tensor[(?, 16, 11), float64], Tensor[(6, 13, 13), bool]) {
  %796 = @func_621() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %797 = cast(%var_5739, dtype="float32") /* ty=Tensor[(150, 1), float32] */;
  %798 = reshape(%797, newshape=[15, 10, 1]) /* ty=Tensor[(15, 10, 1), float32] */;
  %799 = @func_3499(%798) /* ty=(Tensor[(15, 10, 1), float32], Tensor[(?, 16, 11), float64]) */;
  %800 = @func_2019() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) */;
  %801 = cast(%var_5757, dtype="float32") /* ty=Tensor[(240), float32] */;
  %802 = reshape(%801, newshape=[12, 4, 5]) /* ty=Tensor[(12, 4, 5), float32] */;
  %803 = @func_1814() /* ty=(Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
  %804 = %803.1;
  %805 = @func_4256() /* ty=Tensor[(?, 16, 11), int32] */;
  %806 = cast(%805, dtype="float64") /* ty=Tensor[(?, 16, 11), float64] */;
  %807 = shape_of(%804, dtype="int32") /* ty=Tensor[(3), int32] */;
  %808 = cast(%804, dtype="float64") /* ty=Tensor[(?, 16, 11), float64] */;
  %809 = dyn.reshape(%806, %807, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %810 = @func_4518() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(1014), bool], Tensor[(6, 13, 13), bool]) */;
  %811 = %796.0;
  %812 = %799.0;
  %813 = %800.0;
  %814 = @func_3696(%802) /* ty=Tensor[(12, 4, 5), float32] */;
  %815 = add(%808, %809) /* ty=Tensor[(?, 16, 11), float64] */;
  %816 = %810.2;
  (%811, %812, %var_5739, %813, %814, %var_5757, %815, %816)
}

def @func_9682(%var_9680: Tensor[(2, 1, 4), float32], %var_9681: Tensor[(2, 4, 4), float32]) -> (Tensor[(2, 4, 4), float32],) {
  @func_9678(%var_9680, %var_9681) /* ty=(Tensor[(2, 4, 4), float32],) */
}

def @func_4546() -> (Tensor[(?, 16, 11), int32],) {
  %819 = fn () -> (Tensor[(?, 16, 11), int32],) {
    %817 = @func_1561() /* ty=(Tensor[(?, 16, 11), int32],) */;
    %818 = %817.0;
    (%818,)
  };
  %819() /* ty=(Tensor[(?, 16, 11), int32],) */
}

def @func_8956() -> Tensor[(?, 16, 11), int32] {
  @func_1836() /* ty=Tensor[(?, 16, 11), int32] */
}

def @func_9678(%var_9638: Tensor[(2, 1, 4), float32], %var_9639: Tensor[(2, 4, 4), float32]) -> (Tensor[(2, 4, 4), float32],) {
  %820 = cast(%var_9638, dtype="float32") /* ty=Tensor[(2, 1, 4), float32] */;
  %821 = cast(%var_9639, dtype="float32") /* ty=Tensor[(2, 4, 4), float32] */;
  %822 = multiply(%820, %821) /* ty=Tensor[(2, 4, 4), float32] */;
  (%822,)
}

def @func_1653() -> (Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64]) {
  @func_1651() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64]) */
}

def @func_7505(%var_7504: Tensor[(9, 6, 10), float32]) -> (Tensor[(9, 6, 10), float32], Tensor[(?, 16, 11), int32]) {
  %827 = fn (%var_7487: Tensor[(9, 6, 10), float32]) -> (Tensor[(9, 6, 10), float32], Tensor[(?, 16, 11), int32]) {
    %823 = cast(%var_7487, dtype="float32") /* ty=Tensor[(9, 6, 10), float32] */;
    %824 = @func_1243() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) */;
    %825 = tan(%823) /* ty=Tensor[(9, 6, 10), float32] */;
    %826 = %824.0;
    (%825, %826)
  };
  %827(%var_7504) /* ty=(Tensor[(9, 6, 10), float32], Tensor[(?, 16, 11), int32]) */
}

def @func_11757(%var_11755: Tensor[(924), float32]) -> (Tensor[(?, 16, 11), float32], Tensor[(11, 12, 7), float32], Tensor[(924), float32]) {
  @func_11754(%var_11755) /* ty=(Tensor[(?, 16, 11), float32], Tensor[(11, 12, 7), float32], Tensor[(924), float32]) */
}

def @func_12284(%var_12198: Tensor[(264, 2), bool]) -> (Tensor[(?, 16, 11), bool], Tensor[(3, 16, 11), float64], Tensor[(264, 2), bool], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(12, 16, 11), float32], Tensor[(?, 16, 11), float32], Tensor[(15, 1), float32], float32, Tensor[(15), float32], Tensor[(?, 16, 11), int32]) {
  %828 = @func_6817() /* ty=(Tensor[(?, 16, 11), bool],) */;
  %829 = cast(%var_12198, dtype="bool") /* ty=Tensor[(264, 2), bool] */;
  %830 = reshape(%829, newshape=[3, 16, 11]) /* ty=Tensor[(3, 16, 11), bool] */;
  %831 = @func_9287(%830) /* ty=(Tensor[(3, 16, 11), uint64], Tensor[(3, 16, 11), float64], Tensor[(?, 16, 11), float64], Tensor[(150), float32], Tensor[(240), float32]) */;
  %832 = @func_7823() /* ty=(Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), int32]) */;
  %833 = @func_5457() /* ty=(Tensor[(12, 16, 11), float32],) */;
  %834 = @func_5236() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32]) */;
  %835 = cast(-3.74868f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %836 = cast(meta[relay.Constant][35] /* ty=Tensor[(15), float32] */, dtype="float32") /* ty=Tensor[(15), float32] */;
  %837 = reshape(%835, newshape=[]) /* ty=float32 */;
  %838 = reshape(%836, newshape=[15, 1]) /* ty=Tensor[(15, 1), float32] */;
  %839 = @func_5569(%837, %838) /* ty=(Tensor[(15, 1), float32],) */;
  %840 = @func_10806() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32]) */;
  %841 = %828.0;
  %842 = %831.1;
  %843 = @func_8215() /* ty=Tensor[(?, 16, 11), int32] */;
  %844 = %832.1;
  %845 = %833.0;
  %846 = %834.1;
  %847 = %839.0;
  %848 = %840.1;
  (%841, %842, %var_12198, %843, %844, %845, %846, %847, -3.74868f /* ty=float32 */, meta[relay.Constant][35] /* ty=Tensor[(15), float32] */, %848)
}

def @func_4703() -> (Tensor[(?, 16, 11), float64],) {
  %849 = @func_2019() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) */;
  %850 = %849.1;
  (%850,)
}

def @func_8054() -> Tensor[(?, 16, 11), bool] {
  %851 = @func_6515() /* ty=(Tensor[(?, 16, 11), bool],) */;
  %851.0
}

def @func_4413(%var_4411: Tensor[(3, 16, 13), int32], %var_4412: Tensor[(3, 16, 13), int32]) -> (Tensor[(?, 16, 11), float32], Tensor[(3, 16, 13), int16]) {
  %866 = fn (%var_4364: Tensor[(3, 16, 13), int32], %var_4365: Tensor[(3, 16, 13), int32]) -> (Tensor[(?, 16, 11), float32], Tensor[(3, 16, 13), int16]) {
    %852 = @func_3307() /* ty=(Tensor[(?, 16, 11), float32],) */;
    %853 = cast(%var_4365, dtype="int32") /* ty=Tensor[(3, 16, 13), int32] */;
    %854 = shape_of(%var_4364, dtype="int32") /* ty=Tensor[(3), int32] */;
    %855 = cast(%var_4364, dtype="int32") /* ty=Tensor[(3, 16, 13), int32] */;
    %856 = dyn.reshape(%853, %854, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %857 = subtract(%855, %856) /* ty=Tensor[(3, 16, 13), int32] */;
    %858 = cast(%857, dtype="float64") /* ty=Tensor[(3, 16, 13), float64] */;
    %859 = tan(%858) /* ty=Tensor[(3, 16, 13), float64] */;
    %860 = cast(%857, dtype="int16") /* ty=Tensor[(3, 16, 13), int16] */;
    %861 = shape_of(%859, dtype="int32") /* ty=Tensor[(3), int32] */;
    %862 = cast(%859, dtype="int16") /* ty=Tensor[(3, 16, 13), int16] */;
    %863 = dyn.reshape(%860, %861, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %864 = %852.0;
    %865 = logical_xor(%862, %863) /* ty=Tensor[(3, 16, 13), int16] */;
    (%864, %865)
  };
  %866(%var_4411, %var_4412) /* ty=(Tensor[(?, 16, 11), float32], Tensor[(3, 16, 13), int16]) */
}

def @func_11781(%var_11779: Tensor[(14, 7, 13), float64]) -> (Tensor[(14, 7, 13), float64],) {
  @func_11778(%var_11779) /* ty=(Tensor[(14, 7, 13), float64],) */
}

def @func_4911() -> (Tensor[(1, 5, 2), float64], Tensor[(?, 16, 11), int32]) {
  %872 = fn () -> (Tensor[(1, 5, 2), float64], Tensor[(?, 16, 11), int32]) {
    %867 = cast(-9.87278f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %868 = cast(meta[relay.Constant][36] /* ty=Tensor[(1, 5, 2), float64] */, dtype="float64") /* ty=Tensor[(1, 5, 2), float64] */;
    %869 = @func_1561() /* ty=(Tensor[(?, 16, 11), int32],) */;
    %870 = mod(%867, %868) /* ty=Tensor[(1, 5, 2), float64] */;
    %871 = %869.0;
    (%870, %871)
  };
  %872() /* ty=(Tensor[(1, 5, 2), float64], Tensor[(?, 16, 11), int32]) */
}

def @func_5408(%var_5406: Tensor[(1014), bool]) -> (Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32], Tensor[(6, 13, 13), bool], Tensor[(1014), bool]) {
  %873 = @func_3405() /* ty=(Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
  %874 = @func_3307() /* ty=(Tensor[(?, 16, 11), float32],) */;
  %875 = cast(%var_5406, dtype="bool") /* ty=Tensor[(1014), bool] */;
  %876 = reshape(%875, newshape=[6, 13, 13]) /* ty=Tensor[(6, 13, 13), bool] */;
  %877 = @func_3961(%876) /* ty=(Tensor[(6, 13, 13), bool], Tensor[(?, 16, 11), float32]) */;
  %878 = %873.0;
  %879 = @func_1836() /* ty=Tensor[(?, 16, 11), int32] */;
  %880 = %874.0;
  %881 = %877.0;
  (%878, %879, %880, %881, %var_5406)
}

def @func_1880() -> Tensor[(?, 16, 11), float32] {
  @func_1878() /* ty=Tensor[(?, 16, 11), float32] */
}

def @func_5685() -> (Tensor[(?, 16, 11), int32],) {
  @func_5683() /* ty=(Tensor[(?, 16, 11), int32],) */
}

def @func_6182(%var_6176: Tensor[(432), int16]) -> (Tensor[(14, 16, 11), uint64], Tensor[(14, 16, 11), float64], Tensor[(432), int16], Tensor[(90, 3), float64]) {
  %882 = @func_854() /* ty=(Tensor[(?, 16, 11), float32],) */;
  %883 = %882.0;
  %884 = cast(%883, dtype="uint64") /* ty=Tensor[(?, 16, 11), uint64] */;
  %885 = cast(meta[relay.Constant][37] /* ty=Tensor[(14, 16, 11), float32] */, dtype="uint64") /* ty=Tensor[(14, 16, 11), uint64] */;
  %886 = cast(%var_6176, dtype="int16") /* ty=Tensor[(432), int16] */;
  %887 = reshape(%886, newshape=[9, 3, 16]) /* ty=Tensor[(9, 3, 16), int16] */;
  %888 = @func_4481(%887) /* ty=(Tensor[(9, 3, 16), bool], Tensor[(14, 16, 11), float64]) */;
  %889 = @func_4103() /* ty=(Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), int32], Tensor[(90, 3), float64], Tensor[(?, 16, 11), int32]) */;
  %890 = right_shift(%884, %885) /* ty=Tensor[(14, 16, 11), uint64] */;
  %891 = %888.1;
  %892 = %889.3;
  (%890, %891, %var_6176, %892)
}

def @func_4483(%var_4482: Tensor[(9, 3, 16), int16]) -> (Tensor[(9, 3, 16), bool], Tensor[(14, 16, 11), float64]) {
  %900 = fn (%var_4445: Tensor[(9, 3, 16), int16]) -> (Tensor[(9, 3, 16), bool], Tensor[(14, 16, 11), float64]) {
    %893 = cast(meta[relay.Constant][38] /* ty=Tensor[(9, 3, 16), int16] */, dtype="bool") /* ty=Tensor[(9, 3, 16), bool] */;
    %894 = shape_of(%var_4445, dtype="int32") /* ty=Tensor[(3), int32] */;
    %895 = cast(%var_4445, dtype="bool") /* ty=Tensor[(9, 3, 16), bool] */;
    %896 = dyn.reshape(%893, %894, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %897 = @func_3262() /* ty=(Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
    %898 = not_equal(%895, %896) /* ty=Tensor[(9, 3, 16), bool] */;
    %899 = %897.0;
    (%898, %899)
  };
  %900(%var_4482) /* ty=(Tensor[(9, 3, 16), bool], Tensor[(14, 16, 11), float64]) */
}

def @func_10520() -> (Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float32]) {
  %901 = @func_3307() /* ty=(Tensor[(?, 16, 11), float32],) */;
  %902 = @func_1651() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64]) */;
  %903 = %901.0;
  %904 = %902.1;
  (%903, %904)
}

def @func_3375() -> (Tensor[(12, 16, 11), float32], Tensor[(?, 16, 11), bool]) {
  %905 = @func_2720() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), int32], Tensor[(270), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */;
  %906 = %905.7;
  %907 = cast(%906, dtype="float32") /* ty=Tensor[(?, 16, 11), float32] */;
  %908 = cast(meta[relay.Constant][39] /* ty=Tensor[(12, 16, 11), int32] */, dtype="float32") /* ty=Tensor[(12, 16, 11), float32] */;
  %909 = @func_2720() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), int32], Tensor[(270), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */;
  %910 = maximum(%907, %908) /* ty=Tensor[(12, 16, 11), float32] */;
  %911 = %909.3;
  (%910, %911)
}

def @func_3008() -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) {
  @func_3006() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */
}

def @func_7373() -> (Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float32]) {
  %915 = fn () -> (Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float32]) {
    %912 = @func_5561() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), bool]) */;
    %913 = @func_5995() /* ty=Tensor[(?, 16, 11), float32] */;
    %914 = %912.0;
    (%913, %914)
  };
  %915() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float32]) */
}

def @func_4770() -> (Tensor[(?, 16, 11), float64], Tensor[(14, 16, 11), float64]) {
  %916 = @func_2720() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), int32], Tensor[(270), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */;
  %917 = %916.1;
  %918 = @func_3478() /* ty=Tensor[(14, 16, 11), float64] */;
  (%917, %918)
}

def @func_9737(%var_9735: Tensor[(7, 12, 16), uint16], %var_9736: Tensor[(7, 12, 16), uint16]) -> (Tensor[(7, 12, 16), uint16],) {
  %924 = fn (%var_9725: Tensor[(7, 12, 16), uint16], %var_9726: Tensor[(7, 12, 16), uint16]) -> (Tensor[(7, 12, 16), uint16],) {
    %919 = cast(%var_9726, dtype="uint16") /* ty=Tensor[(7, 12, 16), uint16] */;
    %920 = shape_of(%var_9725, dtype="int32") /* ty=Tensor[(3), int32] */;
    %921 = cast(%var_9725, dtype="uint16") /* ty=Tensor[(7, 12, 16), uint16] */;
    %922 = dyn.reshape(%919, %920, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %923 = right_shift(%921, %922) /* ty=Tensor[(7, 12, 16), uint16] */;
    (%923,)
  };
  %924(%var_9735, %var_9736) /* ty=(Tensor[(7, 12, 16), uint16],) */
}

def @func_6576(%var_6557: Tensor[(11, 16, 11), bool]) -> (Tensor[(?, 16, 11), float64], Tensor[(11, 16, 11), bool]) {
  %925 = @func_2835() /* ty=(Tensor[(?, 16, 11), float64],) */;
  %926 = @func_1205() /* ty=Tensor[(?, 16, 11), int32] */;
  %927 = cast(%926, dtype="bool") /* ty=Tensor[(?, 16, 11), bool] */;
  %928 = cast(meta[relay.Constant][40] /* ty=Tensor[(11, 16, 11), int32] */, dtype="bool") /* ty=Tensor[(11, 16, 11), bool] */;
  %929 = less(%927, %928) /* ty=Tensor[(11, 16, 11), bool] */;
  %930 = cast(%var_6557, dtype="bool") /* ty=Tensor[(11, 16, 11), bool] */;
  %931 = shape_of(%929, dtype="int32") /* ty=Tensor[(3), int32] */;
  %932 = cast(%929, dtype="bool") /* ty=Tensor[(11, 16, 11), bool] */;
  %933 = dyn.reshape(%930, %931, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %934 = %925.0;
  %935 = logical_and(%932, %933) /* ty=Tensor[(11, 16, 11), bool] */;
  (%934, %935)
}

def @func_854() -> (Tensor[(?, 16, 11), float32],) {
  %936 = @func_747() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %937 = %936.0;
  %938 = cast(%937, dtype="float32") /* ty=Tensor[(?, 16, 11), float32] */;
  %939 = rsqrt(%938) /* ty=Tensor[(?, 16, 11), float32] */;
  (%939,)
}

def @func_2607(%var_2605: Tensor[(1, 16, 11), int32]) -> Tensor[(?, 16, 11), bool] {
  @func_2604(%var_2605) /* ty=Tensor[(?, 16, 11), bool] */
}

def @func_8913() -> (Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), bool]) {
  @func_8911() /* ty=(Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), bool]) */
}

def @func_5918() -> (Tensor[(12, 16, 11), float32], Tensor[(6, 13, 13), bool], Tensor[(150), float32], Tensor[(4, 60), float32]) {
  %940 = @func_5457() /* ty=(Tensor[(12, 16, 11), float32],) */;
  %941 = %940.0;
  %942 = @func_5236() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32]) */;
  %943 = %942.0;
  %944 = cast(%941, dtype="float32") /* ty=Tensor[(12, 16, 11), float32] */;
  %945 = cast(%943, dtype="float32") /* ty=Tensor[(?, 16, 11), float32] */;
  %946 = cast(meta[relay.Constant][41] /* ty=Tensor[(150), float32] */, dtype="float32") /* ty=Tensor[(150), float32] */;
  %947 = cast(meta[relay.Constant][42] /* ty=Tensor[(4, 60), float32] */, dtype="float32") /* ty=Tensor[(4, 60), float32] */;
  %948 = reshape(%946, newshape=[150, 1]) /* ty=Tensor[(150, 1), float32] */;
  %949 = reshape(%947, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %950 = @func_5785(%948, %949) /* ty=(Tensor[(?, 16, 11), int32], Tensor[(15, 10, 1), float32], Tensor[(150, 1), float32], Tensor[(?, 16, 11), int32], Tensor[(12, 4, 5), float32], Tensor[(240), float32], Tensor[(?, 16, 11), float64], Tensor[(6, 13, 13), bool]) */;
  %951 = power(%944, %945) /* ty=Tensor[(12, 16, 11), float32] */;
  %952 = %950.7;
  (%951, %952, meta[relay.Constant][41] /* ty=Tensor[(150), float32] */, meta[relay.Constant][42] /* ty=Tensor[(4, 60), float32] */)
}

def @func_5237() -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32]) {
  %956 = fn () -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32]) {
    %953 = @func_3006() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */;
    %954 = @func_4256() /* ty=Tensor[(?, 16, 11), int32] */;
    %955 = %953.1;
    (%954, %955)
  };
  %956() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32]) */
}

def @func_7115() -> (Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) {
  %957 = @func_621() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %958 = @func_4950() /* ty=Tensor[(?, 16, 11), float64] */;
  %959 = %957.0;
  (%958, %959)
}

def @func_2730() -> (Tensor[(?, 16, 11), int32],) {
  @func_2728() /* ty=(Tensor[(?, 16, 11), int32],) */
}

def @func_11439() -> (Tensor[(4, 10, 2), bool],) {
  @func_11437() /* ty=(Tensor[(4, 10, 2), bool],) */
}

def @func_1878() -> Tensor[(?, 16, 11), float32] {
  %960 = @func_1651() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64]) */;
  %960.1
}

def @func_5220(%var_5219: Tensor[(3, 8, 13), float64]) -> (Tensor[(3, 8, 13), bool],) {
  %968 = fn (%var_5206: Tensor[(3, 8, 13), float64]) -> (Tensor[(3, 8, 13), bool],) {
    %961 = cast(%var_5206, dtype="float64") /* ty=Tensor[(3, 8, 13), float64] */;
    %962 = log10(%961) /* ty=Tensor[(3, 8, 13), float64] */;
    %963 = cast(%962, dtype="bool") /* ty=Tensor[(3, 8, 13), bool] */;
    %964 = shape_of(%var_5206, dtype="int32") /* ty=Tensor[(3), int32] */;
    %965 = cast(%var_5206, dtype="bool") /* ty=Tensor[(3, 8, 13), bool] */;
    %966 = dyn.reshape(%963, %964, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %967 = logical_and(%965, %966) /* ty=Tensor[(3, 8, 13), bool] */;
    (%967,)
  };
  %968(%var_5219) /* ty=(Tensor[(3, 8, 13), bool],) */
}

def @func_3802() -> (Tensor[(14, 16, 11), float64], Tensor[(14, 16, 11), float64]) {
  %969 = @func_3405() /* ty=(Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
  %970 = @func_1713() /* ty=(Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), float64]) */;
  %971 = %969.0;
  %972 = %970.0;
  (%971, %972)
}

def @func_1211() -> Tensor[(?, 16, 11), int32] {
  %973 = @func_704() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %973.0
}

def @func_1814() -> (Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) {
  %974 = @func_1243() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) */;
  %975 = @func_621() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %976 = %974.1;
  %977 = %975.0;
  (%976, %977)
}

def @func_11911(%var_11910: Tensor[(12, 60), float64]) -> (Tensor[(?, 16, 11), bool], Tensor[(90, 3), float64], Tensor[(270), float64], Tensor[(7, 15, 10), float64], Tensor[(1050, 1), float64], Tensor[(?, 16, 11), int32], Tensor[(1014), bool], Tensor[(12, 60), float64]) {
  %996 = fn (%var_11903: Tensor[(12, 60), float64]) -> (Tensor[(?, 16, 11), bool], Tensor[(90, 3), float64], Tensor[(270), float64], Tensor[(7, 15, 10), float64], Tensor[(1050, 1), float64], Tensor[(?, 16, 11), int32], Tensor[(1014), bool], Tensor[(12, 60), float64]) {
    %978 = @func_10204() /* ty=(Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), bool], Tensor[(12, 16, 11), float32]) */;
    %979 = cast(meta[relay.Constant][43] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
    %980 = reshape(%979, newshape=[90, 3]) /* ty=Tensor[(90, 3), float64] */;
    %981 = @func_11247(%980) /* ty=(Tensor[(?, 16, 11), float32], Tensor[(90, 3), float64], Tensor[(90, 3), int8]) */;
    %982 = cast(meta[relay.Constant][44] /* ty=Tensor[(1050, 1), float64] */, dtype="float64") /* ty=Tensor[(1050, 1), float64] */;
    %983 = reshape(%982, newshape=[7, 15, 10]) /* ty=Tensor[(7, 15, 10), float64] */;
    %984 = @func_3228(%983) /* ty=(Tensor[(7, 15, 10), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */;
    %985 = cast(meta[relay.Constant][44] /* ty=Tensor[(1050, 1), float64] */, dtype="float64") /* ty=Tensor[(1050, 1), float64] */;
    %986 = @func_1800() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
    %987 = cast(%var_11903, dtype="float64") /* ty=Tensor[(12, 60), float64] */;
    %988 = reshape(%987, newshape=[8, 9, 10]) /* ty=Tensor[(8, 9, 10), float64] */;
    %989 = @func_10344(%988) /* ty=(Tensor[(8, 9, 10), float64], Tensor[(?, 16, 11), float32], Tensor[(176), bool], Tensor[(4, 220), bool], Tensor[(1014), bool]) */;
    %990 = %978.4;
    %991 = %981.1;
    %992 = %984.0;
    %993 = sqrt(%985) /* ty=Tensor[(1050, 1), float64] */;
    %994 = %986.0;
    %995 = %989.4;
    (%990, %991, meta[relay.Constant][43] /* ty=Tensor[(270), float64] */, %992, %993, %994, %995, %var_11903)
  };
  %996(%var_11910) /* ty=(Tensor[(?, 16, 11), bool], Tensor[(90, 3), float64], Tensor[(270), float64], Tensor[(7, 15, 10), float64], Tensor[(1050, 1), float64], Tensor[(?, 16, 11), int32], Tensor[(1014), bool], Tensor[(12, 60), float64]) */
}

def @func_2721() -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), int32], Tensor[(270), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) {
  %1012 = fn () -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), int32], Tensor[(270), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) {
    %997 = @func_1243() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) */;
    %998 = @func_1549() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(270), float64], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), uint64], Tensor[(?, 16, 11), float32]) */;
    %999 = @func_1094() /* ty=(Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64]) */;
    %1000 = @func_747() /* ty=(Tensor[(?, 16, 11), int32],) */;
    %1001 = @func_1549() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(270), float64], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), uint64], Tensor[(?, 16, 11), float32]) */;
    %1002 = @func_2614() /* ty=(Tensor[(?, 16, 11), float32],) */;
    %1003 = @func_621() /* ty=(Tensor[(?, 16, 11), int32],) */;
    %1004 = @func_1211() /* ty=Tensor[(?, 16, 11), int32] */;
    %1005 = %997.1;
    %1006 = %998.0;
    %1007 = %999.0;
    %1008 = %1000.0;
    %1009 = %1001.1;
    %1010 = %1002.0;
    %1011 = %1003.0;
    (%1004, %1005, %1006, %1007, %1008, %1009, %1010, %1011)
  };
  %1012() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), int32], Tensor[(270), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */
}

def @func_6976(%var_6975: Tensor[(240), float32]) -> (Tensor[(?, 16, 11), float32], Tensor[(14, 16, 11), float64], Tensor[(432), int16], Tensor[(15, 10, 1), float32], Tensor[(150), float32], Tensor[(240), float32], Tensor[(?, 16, 11), float64]) {
  %1027 = fn (%var_6962: Tensor[(240), float32]) -> (Tensor[(?, 16, 11), float32], Tensor[(14, 16, 11), float64], Tensor[(432), int16], Tensor[(15, 10, 1), float32], Tensor[(150), float32], Tensor[(240), float32], Tensor[(?, 16, 11), float64]) {
    %1013 = @func_5067() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */;
    %1014 = cast(meta[relay.Constant][45] /* ty=Tensor[(432), int16] */, dtype="int16") /* ty=Tensor[(432), int16] */;
    %1015 = reshape(%1014, newshape=[9, 3, 16]) /* ty=Tensor[(9, 3, 16), int16] */;
    %1016 = @func_4481(%1015) /* ty=(Tensor[(9, 3, 16), bool], Tensor[(14, 16, 11), float64]) */;
    %1017 = cast(meta[relay.Constant][46] /* ty=Tensor[(150), float32] */, dtype="float32") /* ty=Tensor[(150), float32] */;
    %1018 = cast(%var_6962, dtype="float32") /* ty=Tensor[(240), float32] */;
    %1019 = reshape(%1017, newshape=[150, 1]) /* ty=Tensor[(150, 1), float32] */;
    %1020 = reshape(%1018, newshape=[240]) /* ty=Tensor[(240), float32] */;
    %1021 = @func_5785(%1019, %1020) /* ty=(Tensor[(?, 16, 11), int32], Tensor[(15, 10, 1), float32], Tensor[(150, 1), float32], Tensor[(?, 16, 11), int32], Tensor[(12, 4, 5), float32], Tensor[(240), float32], Tensor[(?, 16, 11), float64], Tensor[(6, 13, 13), bool]) */;
    %1022 = @func_5650() /* ty=(Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), float64], Tensor[(150), float32], Tensor[(?, 16, 11), bool]) */;
    %1023 = %1013.0;
    %1024 = %1016.1;
    %1025 = %1021.1;
    %1026 = %1022.1;
    (%1023, %1024, meta[relay.Constant][45] /* ty=Tensor[(432), int16] */, %1025, meta[relay.Constant][46] /* ty=Tensor[(150), float32] */, %var_6962, %1026)
  };
  %1027(%var_6975) /* ty=(Tensor[(?, 16, 11), float32], Tensor[(14, 16, 11), float64], Tensor[(432), int16], Tensor[(15, 10, 1), float32], Tensor[(150), float32], Tensor[(240), float32], Tensor[(?, 16, 11), float64]) */
}

def @func_4105() -> (Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), int32], Tensor[(90, 3), float64], Tensor[(?, 16, 11), int32]) {
  @func_4103() /* ty=(Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), int32], Tensor[(90, 3), float64], Tensor[(?, 16, 11), int32]) */
}

def @func_7475() -> (Tensor[(15, 1), float32], Tensor[(12, 16, 11), float32], Tensor[(?, 16, 11), bool]) {
  %1034 = fn () -> (Tensor[(15, 1), float32], Tensor[(12, 16, 11), float32], Tensor[(?, 16, 11), bool]) {
    %1028 = @func_6487() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(15, 1), float32], float32, Tensor[(15), float32]) */;
    %1029 = @func_5457() /* ty=(Tensor[(12, 16, 11), float32],) */;
    %1030 = @func_1094() /* ty=(Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64]) */;
    %1031 = %1028.1;
    %1032 = %1029.0;
    %1033 = %1030.0;
    (%1031, %1032, %1033)
  };
  %1034() /* ty=(Tensor[(15, 1), float32], Tensor[(12, 16, 11), float32], Tensor[(?, 16, 11), bool]) */
}

def @func_3624() -> Tensor[(?, 16, 11), bool] {
  %1036 = fn () -> Tensor[(?, 16, 11), bool] {
    %1035 = @func_1094() /* ty=(Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64]) */;
    %1035.0
  };
  %1036() /* ty=Tensor[(?, 16, 11), bool] */
}

def @func_4843() -> (Tensor[(14, 16, 11), float64],) {
  @func_4841() /* ty=(Tensor[(14, 16, 11), float64],) */
}

def @func_9110() -> (Tensor[(?, 16, 11), int32],) {
  %1039 = fn () -> (Tensor[(?, 16, 11), int32],) {
    %1037 = @func_4545() /* ty=(Tensor[(?, 16, 11), int32],) */;
    %1038 = %1037.0;
    (%1038,)
  };
  %1039() /* ty=(Tensor[(?, 16, 11), int32],) */
}

def @func_748() -> (Tensor[(?, 16, 11), int32],) {
  %1042 = fn () -> (Tensor[(?, 16, 11), int32],) {
    %1040 = @func_621() /* ty=(Tensor[(?, 16, 11), int32],) */;
    %1041 = %1040.0;
    (%1041,)
  };
  %1042() /* ty=(Tensor[(?, 16, 11), int32],) */
}

def @func_1837() -> Tensor[(?, 16, 11), int32] {
  %1043 = fn () -> Tensor[(?, 16, 11), int32] {
    @func_1211() /* ty=Tensor[(?, 16, 11), int32] */
  };
  %1043() /* ty=Tensor[(?, 16, 11), int32] */
}

def @func_6515() -> (Tensor[(?, 16, 11), bool],) {
  %1044 = @func_3879() /* ty=Tensor[(?, 16, 11), bool] */;
  (%1044,)
}

def @func_10667() -> Tensor[(?, 16, 11), uint64] {
  @func_10665() /* ty=Tensor[(?, 16, 11), uint64] */
}

def @func_10944() -> Tensor[(15), float32] {
  @func_7949() /* ty=Tensor[(15), float32] */
}

def @func_10909(%var_10908: Tensor[(20), uint32]) -> (Tensor[(?, 13, 12), uint64], Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), bool], Tensor[(4, 10, 2), bool], Tensor[(20), uint32]) {
  %1054 = fn (%var_10901: Tensor[(20), uint32]) -> (Tensor[(?, 13, 12), uint64], Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), bool], Tensor[(4, 10, 2), bool], Tensor[(20), uint32]) {
    %1045 = @func_10002() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(12, 16, 11), float32], Tensor[(?, 13, 12), uint64]) */;
    %1046 = @func_3879() /* ty=Tensor[(?, 16, 11), bool] */;
    %1047 = cast(%1046, dtype="int32") /* ty=Tensor[(?, 16, 11), int32] */;
    %1048 = reshape(%1047, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), int32] */;
    %1049 = cast(%var_10901, dtype="uint32") /* ty=Tensor[(20), uint32] */;
    %1050 = reshape(%1049, newshape=[1, 10, 2]) /* ty=Tensor[(1, 10, 2), uint32] */;
    %1051 = %1045.2;
    %1052 = @func_2604(%1048) /* ty=Tensor[(?, 16, 11), bool] */;
    %1053 = @func_2287(%1050) /* ty=Tensor[(4, 10, 2), bool] */;
    (%1051, %1046, %1052, %1053, %var_10901)
  };
  %1054(%var_10908) /* ty=(Tensor[(?, 13, 12), uint64], Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), bool], Tensor[(4, 10, 2), bool], Tensor[(20), uint32]) */
}

def @func_2604(%var_2596: Tensor[(1, 16, 11), int32]) -> Tensor[(?, 16, 11), bool] {
  %1055 = @func_584() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %1056 = %1055.0;
  %1057 = cast(%var_2596, dtype="bool") /* ty=Tensor[(1, 16, 11), bool] */;
  %1058 = shape_of(%1056, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1059 = cast(%1056, dtype="bool") /* ty=Tensor[(?, 16, 11), bool] */;
  %1060 = dyn.reshape(%1057, %1058, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%1059, %1060) /* ty=Tensor[(?, 16, 11), bool] */
}

def @func_11374() -> Tensor[(?, 16, 11), int32] {
  %1061 = @func_584() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %1061.0
}

def @func_10866() -> Tensor[(?, 16, 11), float64] {
  %1062 = @func_6653() /* ty=(Tensor[(?, 16, 11), float64],) */;
  %1062.0
}

def @func_9827() -> (Tensor[(7, 5, 16), float64],) {
  %1063 = cast(meta[relay.Constant][47] /* ty=Tensor[(7, 5, 16), float64] */, dtype="float64") /* ty=Tensor[(7, 5, 16), float64] */;
  %1064 = tan(%1063) /* ty=Tensor[(7, 5, 16), float64] */;
  (%1064,)
}

def @func_5789(%var_5787: Tensor[(150, 1), float32], %var_5788: Tensor[(240), float32]) -> (Tensor[(?, 16, 11), int32], Tensor[(15, 10, 1), float32], Tensor[(150, 1), float32], Tensor[(?, 16, 11), int32], Tensor[(12, 4, 5), float32], Tensor[(240), float32], Tensor[(?, 16, 11), float64], Tensor[(6, 13, 13), bool]) {
  @func_5785(%var_5787, %var_5788) /* ty=(Tensor[(?, 16, 11), int32], Tensor[(15, 10, 1), float32], Tensor[(150, 1), float32], Tensor[(?, 16, 11), int32], Tensor[(12, 4, 5), float32], Tensor[(240), float32], Tensor[(?, 16, 11), float64], Tensor[(6, 13, 13), bool]) */
}

def @func_8562() -> Tensor[(?, 16, 11), int32] {
  %1066 = fn () -> Tensor[(?, 16, 11), int32] {
    %1065 = @func_4545() /* ty=(Tensor[(?, 16, 11), int32],) */;
    %1065.0
  };
  %1066() /* ty=Tensor[(?, 16, 11), int32] */
}

def @func_623() -> (Tensor[(?, 16, 11), int32],) {
  @func_621() /* ty=(Tensor[(?, 16, 11), int32],) */
}

def @func_7524() -> (Tensor[(?, 16, 11), int32],) {
  %1069 = fn () -> (Tensor[(?, 16, 11), int32],) {
    %1067 = @func_3262() /* ty=(Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
    %1068 = %1067.1;
    (%1068,)
  };
  %1069() /* ty=(Tensor[(?, 16, 11), int32],) */
}

def @func_6487() -> (Tensor[(?, 16, 11), int32], Tensor[(15, 1), float32], float32, Tensor[(15), float32]) {
  %1070 = @func_2728() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %1071 = cast(-6.60433f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1072 = cast(meta[relay.Constant][48] /* ty=Tensor[(15), float32] */, dtype="float32") /* ty=Tensor[(15), float32] */;
  %1073 = reshape(%1071, newshape=[]) /* ty=float32 */;
  %1074 = reshape(%1072, newshape=[15, 1]) /* ty=Tensor[(15, 1), float32] */;
  %1075 = @func_5569(%1073, %1074) /* ty=(Tensor[(15, 1), float32],) */;
  %1076 = %1070.0;
  %1077 = %1075.0;
  (%1076, %1077, -6.60433f /* ty=float32 */, meta[relay.Constant][48] /* ty=Tensor[(15), float32] */)
}

def @func_7909() -> (Tensor[(?, 16, 11), int32],) {
  %1080 = fn () -> (Tensor[(?, 16, 11), int32],) {
    %1078 = @func_4910() /* ty=(Tensor[(1, 5, 2), float64], Tensor[(?, 16, 11), int32]) */;
    %1079 = %1078.1;
    (%1079,)
  };
  %1080() /* ty=(Tensor[(?, 16, 11), int32],) */
}

def @func_6771() -> Tensor[(15), float32] {
  %1082 = fn () -> Tensor[(15), float32] {
    %1081 = @func_6487() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(15, 1), float32], float32, Tensor[(15), float32]) */;
    %1081.3
  };
  %1082() /* ty=Tensor[(15), float32] */
}

def @func_3758() -> Tensor[(?, 16, 11), bool] {
  @func_3623() /* ty=Tensor[(?, 16, 11), bool] */
}

def @func_6366(%var_6365: Tensor[(1980), uint8]) -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int8], Tensor[(1980), float32]) {
  %1095 = fn (%var_6345: Tensor[(1980), uint8]) -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int8], Tensor[(1980), float32]) {
    %1083 = @func_2450() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(2250), float64], Tensor[(?, 16, 11), float64]) */;
    %1084 = cast(%var_6345, dtype="uint8") /* ty=Tensor[(1980), uint8] */;
    %1085 = reshape(%1084, newshape=[12, 15, 11]) /* ty=Tensor[(12, 15, 11), uint8] */;
    %1086 = @func_2326(%1085) /* ty=(Tensor[(12, 15, 11), uint8],) */;
    %1087 = %1086.0;
    %1088 = cast(%1087, dtype="float32") /* ty=Tensor[(12, 15, 11), float32] */;
    %1089 = shape_of(%var_6345, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1090 = cast(%var_6345, dtype="float32") /* ty=Tensor[(1980), float32] */;
    %1091 = dyn.reshape(%1088, %1089, newshape=[]) /* ty=Tensor[(?), float32] */;
    %1092 = %1083.1;
    %1093 = @func_3941() /* ty=Tensor[(?, 16, 11), int8] */;
    %1094 = mod(%1090, %1091) /* ty=Tensor[(1980), float32] */;
    (%1092, %1093, %1094)
  };
  %1095(%var_6365) /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int8], Tensor[(1980), float32]) */
}

def @func_9046() -> Tensor[(?, 16, 11), int32] {
  %1096 = @func_8171() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %1096.0
}

def @func_8842() -> Tensor[(?, 16, 11), int32] {
  %1097 = @func_6881() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %1097.0
}

def @func_4427() -> Tensor[(?, 16, 11), bool] {
  @func_3623() /* ty=Tensor[(?, 16, 11), bool] */
}

def @main(%var_12506: Tensor[(11, 13, 16), float32]) -> (Tensor[(11, 13, 16), float32], Tensor[(11, 13, 16), float32]) {
  %1098 = cast(%var_12506, dtype="float32") /* ty=Tensor[(11, 13, 16), float32] */;
  %1099 = cast(%var_12506, dtype="float32") /* ty=Tensor[(11, 13, 16), float32] */;
  %1100 = asin(%1098) /* ty=Tensor[(11, 13, 16), float32] */;
  %1101 = tan(%1099) /* ty=Tensor[(11, 13, 16), float32] */;
  (%1100, %1101)
}

def @func_5973(%var_5970: Tensor[(1, 16, 11), bool], %var_5971: Tensor[(5, 16, 11), bool], %var_5972: Tensor[(1, 1014), bool]) -> (Tensor[(?, 16, 11), int16], Tensor[(5, 16, 11), uint8], Tensor[(?, 16, 11), float32], Tensor[(1, 1014), bool]) {
  %1115 = fn (%var_5940: Tensor[(1, 16, 11), bool], %var_5953: Tensor[(5, 16, 11), bool], %var_5965: Tensor[(1, 1014), bool]) -> (Tensor[(?, 16, 11), int16], Tensor[(5, 16, 11), uint8], Tensor[(?, 16, 11), float32], Tensor[(1, 1014), bool]) {
    %1102 = @func_4427() /* ty=Tensor[(?, 16, 11), bool] */;
    %1103 = cast(%var_5940, dtype="int16") /* ty=Tensor[(1, 16, 11), int16] */;
    %1104 = shape_of(%1102, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1105 = cast(%1102, dtype="int16") /* ty=Tensor[(?, 16, 11), int16] */;
    %1106 = dyn.reshape(%1103, %1104, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1107 = cast(%var_5940, dtype="uint8") /* ty=Tensor[(1, 16, 11), uint8] */;
    %1108 = cast(%var_5953, dtype="uint8") /* ty=Tensor[(5, 16, 11), uint8] */;
    %1109 = cast(%var_5965, dtype="bool") /* ty=Tensor[(1, 1014), bool] */;
    %1110 = reshape(%1109, newshape=[6, 13, 13]) /* ty=Tensor[(6, 13, 13), bool] */;
    %1111 = @func_3961(%1110) /* ty=(Tensor[(6, 13, 13), bool], Tensor[(?, 16, 11), float32]) */;
    %1112 = bitwise_or(%1105, %1106) /* ty=Tensor[(?, 16, 11), int16] */;
    %1113 = right_shift(%1107, %1108) /* ty=Tensor[(5, 16, 11), uint8] */;
    %1114 = %1111.1;
    (%1112, %1113, %1114, %var_5965)
  };
  %1115(%var_5970, %var_5971, %var_5972) /* ty=(Tensor[(?, 16, 11), int16], Tensor[(5, 16, 11), uint8], Tensor[(?, 16, 11), float32], Tensor[(1, 1014), bool]) */
}

def @func_8644() -> Tensor[(12, 16, 11), float32] {
  %1116 = @func_8084() /* ty=(Tensor[(12, 16, 11), float32],) */;
  %1116.0
}

def @func_11482(%var_11480: Tensor[(14, 96), uint16], %var_11481: Tensor[(14, 96), uint16]) -> (Tensor[(?, 16, 11), float64], Tensor[(7, 12, 16), uint16], Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), float32], Tensor[(14, 96), uint32]) {
  %1134 = fn (%var_11452: Tensor[(14, 96), uint16], %var_11472: Tensor[(14, 96), uint16]) -> (Tensor[(?, 16, 11), float64], Tensor[(7, 12, 16), uint16], Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), float32], Tensor[(14, 96), uint32]) {
    %1117 = @func_2835() /* ty=(Tensor[(?, 16, 11), float64],) */;
    %1118 = cast(%var_11452, dtype="uint16") /* ty=Tensor[(14, 96), uint16] */;
    %1119 = cast(%var_11452, dtype="uint16") /* ty=Tensor[(14, 96), uint16] */;
    %1120 = reshape(%1118, newshape=[7, 12, 16]) /* ty=Tensor[(7, 12, 16), uint16] */;
    %1121 = reshape(%1119, newshape=[7, 12, 16]) /* ty=Tensor[(7, 12, 16), uint16] */;
    %1122 = @func_9734(%1120, %1121) /* ty=(Tensor[(7, 12, 16), uint16],) */;
    %1123 = @func_10718() /* ty=(Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), uint64], Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), bool]) */;
    %1124 = @func_11148() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(14, 16, 11), float64]) */;
    %1125 = cast(%var_11472, dtype="uint32") /* ty=Tensor[(14, 96), uint32] */;
    %1126 = shape_of(%var_11452, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1127 = cast(%var_11452, dtype="uint32") /* ty=Tensor[(14, 96), uint32] */;
    %1128 = dyn.reshape(%1125, %1126, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %1129 = %1117.0;
    %1130 = %1122.0;
    %1131 = %1123.2;
    %1132 = %1124.0;
    %1133 = minimum(%1127, %1128) /* ty=Tensor[(14, 96), uint32] */;
    (%1129, %1130, %1131, %1132, %1133)
  };
  %1134(%var_11480, %var_11481) /* ty=(Tensor[(?, 16, 11), float64], Tensor[(7, 12, 16), uint16], Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), float32], Tensor[(14, 96), uint32]) */
}

def @func_3006() -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) {
  %1135 = @func_2450() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(2250), float64], Tensor[(?, 16, 11), float64]) */;
  %1136 = @func_2894() /* ty=(Tensor[(?, 16, 11), float32],) */;
  %1137 = @func_2113() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %1138 = %1135.1;
  %1139 = %1136.0;
  %1140 = %1137.0;
  (%1138, %1139, %1140)
}

def @func_856() -> (Tensor[(?, 16, 11), float32],) {
  @func_854() /* ty=(Tensor[(?, 16, 11), float32],) */
}

def @func_1714() -> (Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), float64]) {
  %1147 = fn () -> (Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), float64]) {
    %1141 = @func_1651() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64]) */;
    %1142 = %1141.0;
    %1143 = cast(%1142, dtype="float64") /* ty=Tensor[(?, 16, 11), float64] */;
    %1144 = cast(meta[relay.Constant][49] /* ty=Tensor[(14, 16, 11), float32] */, dtype="float64") /* ty=Tensor[(14, 16, 11), float64] */;
    %1145 = floor_divide(%1143, %1144) /* ty=Tensor[(14, 16, 11), float64] */;
    %1146 = @func_964() /* ty=Tensor[(?, 16, 11), float64] */;
    (%1145, %1146)
  };
  %1147() /* ty=(Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), float64]) */
}

def @func_5828() -> (Tensor[(150), float32], Tensor[(?, 16, 11), int32]) {
  @func_5826() /* ty=(Tensor[(150), float32], Tensor[(?, 16, 11), int32]) */
}

def @func_5159() -> (Tensor[(?, 16, 11), int32],) {
  %1148 = @func_2450() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(2250), float64], Tensor[(?, 16, 11), float64]) */;
  %1149 = %1148.0;
  (%1149,)
}

def @func_3262() -> (Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), int32]) {
  %1150 = @func_1713() /* ty=(Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), float64]) */;
  %1151 = @func_584() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %1152 = %1150.0;
  %1153 = %1151.0;
  (%1152, %1153)
}

def @func_11802() -> (Tensor[(15), float32], Tensor[(14, 16, 11), float64]) {
  @func_11800() /* ty=(Tensor[(15), float32], Tensor[(14, 16, 11), float64]) */
}

def @func_4257() -> Tensor[(?, 16, 11), int32] {
  %1155 = fn () -> Tensor[(?, 16, 11), int32] {
    %1154 = @func_1243() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64]) */;
    %1154.0
  };
  %1155() /* ty=Tensor[(?, 16, 11), int32] */
}

def @func_10807() -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32]) {
  %1159 = fn () -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32]) {
    %1156 = @func_6110() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), int32]) */;
    %1157 = @func_8215() /* ty=Tensor[(?, 16, 11), int32] */;
    %1158 = %1156.2;
    (%1157, %1158)
  };
  %1159() /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32]) */
}

def @func_1312(%var_1310: Tensor[(1, 270), float64]) -> (Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(15, 3, 6), float64], Tensor[(1, 270), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) {
  @func_1309(%var_1310) /* ty=(Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32], Tensor[(15, 3, 6), float64], Tensor[(1, 270), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */
}

def @func_5457() -> (Tensor[(12, 16, 11), float32],) {
  %1160 = @func_3375() /* ty=(Tensor[(12, 16, 11), float32], Tensor[(?, 16, 11), bool]) */;
  %1161 = %1160.0;
  (%1161,)
}

def @func_11754(%var_11747: Tensor[(924), float32]) -> (Tensor[(?, 16, 11), float32], Tensor[(11, 12, 7), float32], Tensor[(924), float32]) {
  %1162 = @func_1094() /* ty=(Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float64]) */;
  %1163 = cast(%var_11747, dtype="float32") /* ty=Tensor[(924), float32] */;
  %1164 = reshape(%1163, newshape=[11, 12, 7]) /* ty=Tensor[(11, 12, 7), float32] */;
  %1165 = %1162.1;
  %1166 = @func_8807(%1164) /* ty=Tensor[(11, 12, 7), float32] */;
  (%1165, %1166, %var_11747)
}

def @func_10868() -> Tensor[(?, 16, 11), float64] {
  @func_10866() /* ty=Tensor[(?, 16, 11), float64] */
}

def @func_6272() -> (Tensor[(?, 16, 11), float64], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32], Tensor[(14, 16, 11), float64], Tensor[(?, 16, 11), int32], Tensor[(?, 16, 11), int32]) {
  %1167 = @func_4703() /* ty=(Tensor[(?, 16, 11), float64],) */;
  %1168 = @func_5067() /* ty=(Tensor[(?, 16, 11), float32], Tensor[(?, 16, 11), int32]) */;
  %1169 = @func_4871() /* ty=(Tensor[(?, 16, 11), float32],) */;
  %1170 = @func_2113() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %1171 = @func_4103() /* ty=(Tensor[(?, 16, 11), int8], Tensor[(?, 16, 11), bool], Tensor[(?, 16, 11), int32], Tensor[(90, 3), float64], Tensor[(?, 16, 11), int32]) */;
  %1172 = @func_747() /* ty=(Tensor[(?, 16, 11), int32],) */;
  %1173 = %1167.0;
  %1174 = %1168.0;
  %1175 = %1169.0;
  %1176 = %1170.0;
  %1177 = @func_5258() /* ty=Tensor[(14, 16, 11), float64] */;
  %1178 = %1171.4;
  %1179 = %1172.0;
  (%1173, %1174, %1175, %1176, %1177, %1178, %1179)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen742/build/output.py:4086: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen742/build/output.py", line 4091, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(1024) tvmgen_default_fused_asin_kernel0(float* __restrict__ T_asin, float* __restrict__ placeholder) {
  if (((((int)blockIdx.x) * 64) + (((int)threadIdx.x) >> 4)) < 143) {
    if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 2288) {
      T_asin[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = asinf(placeholder[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))]);
    }
  }
}

extern "C" __global__ void __launch_bounds__(1024) tvmgen_default_fused_tan_kernel0(float* __restrict__ T_tan, float* __restrict__ placeholder) {
  if (((((int)blockIdx.x) * 64) + (((int)threadIdx.x) >> 4)) < 143) {
    if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 2288) {
      T_tan[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = tanf(placeholder[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))]);
    }
  }
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


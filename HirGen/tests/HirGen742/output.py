import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_435 = relay.var("var_435", dtype = "float64", shape = (15, 3, 6))#candidate|435|(15, 3, 6)|var|float64
var_436 = relay.var("var_436", dtype = "float64", shape = (15, 3, 6))#candidate|436|(15, 3, 6)|var|float64
bop_437 = relay.add(var_435.astype('float64'), relay.reshape(var_436.astype('float64'), relay.shape_of(var_435))) # shape=(15, 3, 6)
uop_442 = relay.sigmoid(var_436.astype('float64')) # shape=(15, 3, 6)
output = relay.Tuple([bop_437,uop_442,])
output2 = relay.Tuple([bop_437,uop_442,])
func_447 = relay.Function([var_435,var_436,], output)
mod['func_447'] = func_447
mod = relay.transform.InferType()(mod)
var_448 = relay.var("var_448", dtype = "float64", shape = (15, 3, 6))#candidate|448|(15, 3, 6)|var|float64
var_449 = relay.var("var_449", dtype = "float64", shape = (15, 3, 6))#candidate|449|(15, 3, 6)|var|float64
output = func_447(var_448,var_449,)
func_450 = relay.Function([var_448,var_449,], output)
mutated_mod['func_450'] = func_450
mutated_mod = relay.transform.InferType()(mutated_mod)
const_561 = relay.const([[[7.834694,9.863174,-6.175801,8.717991,-9.597073,9.226401,5.466042,6.939276,-1.828540,2.887627,9.000910],[-3.189750,2.543421,-0.338046,4.179085,-6.145571,1.883565,-8.396111,-1.188162,-4.049346,-5.714982,6.487568],[-7.659502,-4.706347,-7.498945,8.328314,2.142791,1.156588,3.967775,-6.794173,2.962835,1.736448,-2.288828],[-4.264499,1.207381,1.928192,-0.972166,2.905809,6.461894,-4.233006,9.220498,8.634758,9.610641,9.159478],[6.996033,8.662273,1.657716,8.364869,-3.740109,-4.827432,-0.122225,8.984114,6.412477,-3.130363,8.731111],[-5.075816,-4.642239,4.709804,-6.335068,-1.616143,-8.940157,-3.688977,-7.933011,6.151622,-2.002533,-2.531147],[8.663701,8.436811,-4.178213,5.589507,-7.190021,9.620710,-1.687076,-9.183076,8.271187,-2.720148,1.836627],[7.900052,-7.761560,-4.003349,8.918541,-7.572378,6.752154,7.323206,7.412944,0.248407,-7.198014,-5.728279],[0.798403,-9.082641,-3.660324,9.121819,7.514131,0.158339,4.514424,-4.199949,0.728630,-0.304195,7.363964],[-9.780249,-5.406084,-8.580991,-2.094031,9.675582,-5.101063,2.603048,-2.121942,-3.318431,9.776755,-0.082314],[5.495731,8.999859,8.236661,2.978117,7.226640,3.966202,6.840217,9.897200,-1.787366,-9.759069,-4.282998],[1.730640,-5.686301,-9.562346,-6.881829,-4.246514,-1.016201,-9.955973,1.181815,-6.740443,6.760543,7.832654],[7.316794,9.131213,4.547311,-9.184329,6.292907,8.613631,6.040369,7.491742,-7.380384,-8.553810,-8.634945],[-2.445891,-6.785134,-3.469364,-4.601151,0.530644,-4.483666,1.739148,-4.868998,3.076253,-4.822949,7.493978],[3.891096,1.747321,-4.025790,-1.230710,-7.714806,7.152685,5.133517,-8.148014,6.241152,2.042416,-7.389690],[9.513767,7.668200,-7.551876,9.113518,2.018257,6.012701,-5.293501,-3.900267,-9.671363,8.805237,-8.711673]]], dtype = "float32")#candidate|561|(1, 16, 11)|const|float32
uop_562 = relay.log2(const_561.astype('float32')) # shape=(1, 16, 11)
bop_573 = relay.logical_xor(uop_562.astype('int32'), relay.reshape(const_561.astype('int32'), relay.shape_of(uop_562))) # shape=(1, 16, 11)
output = relay.Tuple([bop_573,])
output2 = relay.Tuple([bop_573,])
func_584 = relay.Function([], output)
mod['func_584'] = func_584
mod = relay.transform.InferType()(mod)
mutated_mod['func_584'] = func_584
mutated_mod = relay.transform.InferType()(mutated_mod)
func_584_call = mutated_mod.get_global_var('func_584')
call_585 = func_584_call()
output = call_585
func_586 = relay.Function([], output)
mutated_mod['func_586'] = func_586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_584_call = mod.get_global_var('func_584')
func_586_call = mutated_mod.get_global_var('func_586')
call_618 = relay.TupleGetItem(func_584_call(), 0)
call_619 = relay.TupleGetItem(func_586_call(), 0)
output = relay.Tuple([call_618,])
output2 = relay.Tuple([call_619,])
func_621 = relay.Function([], output)
mod['func_621'] = func_621
mod = relay.transform.InferType()(mod)
mutated_mod['func_621'] = func_621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_621_call = mutated_mod.get_global_var('func_621')
call_622 = func_621_call()
output = call_622
func_623 = relay.Function([], output)
mutated_mod['func_623'] = func_623
mutated_mod = relay.transform.InferType()(mutated_mod)
func_584_call = mod.get_global_var('func_584')
func_586_call = mutated_mod.get_global_var('func_586')
call_692 = relay.TupleGetItem(func_584_call(), 0)
call_693 = relay.TupleGetItem(func_586_call(), 0)
output = relay.Tuple([call_692,])
output2 = relay.Tuple([call_693,])
func_704 = relay.Function([], output)
mod['func_704'] = func_704
mod = relay.transform.InferType()(mod)
output = func_704()
func_705 = relay.Function([], output)
mutated_mod['func_705'] = func_705
mutated_mod = relay.transform.InferType()(mutated_mod)
func_621_call = mod.get_global_var('func_621')
func_623_call = mutated_mod.get_global_var('func_623')
call_725 = relay.TupleGetItem(func_621_call(), 0)
call_726 = relay.TupleGetItem(func_623_call(), 0)
output = relay.Tuple([call_725,])
output2 = relay.Tuple([call_726,])
func_747 = relay.Function([], output)
mod['func_747'] = func_747
mod = relay.transform.InferType()(mod)
output = func_747()
func_748 = relay.Function([], output)
mutated_mod['func_748'] = func_748
mutated_mod = relay.transform.InferType()(mutated_mod)
func_747_call = mod.get_global_var('func_747')
func_748_call = mutated_mod.get_global_var('func_748')
call_782 = relay.TupleGetItem(func_747_call(), 0)
call_783 = relay.TupleGetItem(func_748_call(), 0)
uop_836 = relay.rsqrt(call_782.astype('float32')) # shape=(1, 16, 11)
uop_838 = relay.rsqrt(call_783.astype('float32')) # shape=(1, 16, 11)
output = relay.Tuple([uop_836,])
output2 = relay.Tuple([uop_838,])
func_854 = relay.Function([], output)
mod['func_854'] = func_854
mod = relay.transform.InferType()(mod)
mutated_mod['func_854'] = func_854
mutated_mod = relay.transform.InferType()(mutated_mod)
func_854_call = mutated_mod.get_global_var('func_854')
call_855 = func_854_call()
output = call_855
func_856 = relay.Function([], output)
mutated_mod['func_856'] = func_856
mutated_mod = relay.transform.InferType()(mutated_mod)
func_621_call = mod.get_global_var('func_621')
func_623_call = mutated_mod.get_global_var('func_623')
call_868 = relay.TupleGetItem(func_621_call(), 0)
call_869 = relay.TupleGetItem(func_623_call(), 0)
func_584_call = mod.get_global_var('func_584')
func_586_call = mutated_mod.get_global_var('func_586')
call_874 = relay.TupleGetItem(func_584_call(), 0)
call_875 = relay.TupleGetItem(func_586_call(), 0)
func_447_call = mod.get_global_var('func_447')
func_450_call = mutated_mod.get_global_var('func_450')
var_878 = relay.var("var_878", dtype = "float64", shape = (270,))#candidate|878|(270,)|var|float64
call_877 = relay.TupleGetItem(func_447_call(relay.reshape(var_878.astype('float64'), [15, 3, 6]), relay.reshape(var_878.astype('float64'), [15, 3, 6]), ), 1)
call_879 = relay.TupleGetItem(func_450_call(relay.reshape(var_878.astype('float64'), [15, 3, 6]), relay.reshape(var_878.astype('float64'), [15, 3, 6]), ), 1)
output = relay.Tuple([call_868,call_874,call_877,var_878,])
output2 = relay.Tuple([call_869,call_875,call_879,var_878,])
func_897 = relay.Function([var_878,], output)
mod['func_897'] = func_897
mod = relay.transform.InferType()(mod)
mutated_mod['func_897'] = func_897
mutated_mod = relay.transform.InferType()(mutated_mod)
var_898 = relay.var("var_898", dtype = "float64", shape = (270,))#candidate|898|(270,)|var|float64
func_897_call = mutated_mod.get_global_var('func_897')
call_899 = func_897_call(var_898)
output = call_899
func_900 = relay.Function([var_898], output)
mutated_mod['func_900'] = func_900
mutated_mod = relay.transform.InferType()(mutated_mod)
func_747_call = mod.get_global_var('func_747')
func_748_call = mutated_mod.get_global_var('func_748')
call_904 = relay.TupleGetItem(func_747_call(), 0)
call_905 = relay.TupleGetItem(func_748_call(), 0)
output = relay.Tuple([call_904,])
output2 = relay.Tuple([call_905,])
func_916 = relay.Function([], output)
mod['func_916'] = func_916
mod = relay.transform.InferType()(mod)
mutated_mod['func_916'] = func_916
mutated_mod = relay.transform.InferType()(mutated_mod)
func_916_call = mutated_mod.get_global_var('func_916')
call_917 = func_916_call()
output = call_917
func_918 = relay.Function([], output)
mutated_mod['func_918'] = func_918
mutated_mod = relay.transform.InferType()(mutated_mod)
func_854_call = mod.get_global_var('func_854')
func_856_call = mutated_mod.get_global_var('func_856')
call_930 = relay.TupleGetItem(func_854_call(), 0)
call_931 = relay.TupleGetItem(func_856_call(), 0)
uop_957 = relay.sinh(call_930.astype('float64')) # shape=(1, 16, 11)
uop_959 = relay.sinh(call_931.astype('float64')) # shape=(1, 16, 11)
output = uop_957
output2 = uop_959
func_964 = relay.Function([], output)
mod['func_964'] = func_964
mod = relay.transform.InferType()(mod)
mutated_mod['func_964'] = func_964
mutated_mod = relay.transform.InferType()(mutated_mod)
func_964_call = mutated_mod.get_global_var('func_964')
call_965 = func_964_call()
output = call_965
func_966 = relay.Function([], output)
mutated_mod['func_966'] = func_966
mutated_mod = relay.transform.InferType()(mutated_mod)
func_964_call = mod.get_global_var('func_964')
func_966_call = mutated_mod.get_global_var('func_966')
call_995 = func_964_call()
call_996 = func_964_call()
func_621_call = mod.get_global_var('func_621')
func_623_call = mutated_mod.get_global_var('func_623')
call_1030 = relay.TupleGetItem(func_621_call(), 0)
call_1031 = relay.TupleGetItem(func_623_call(), 0)
bop_1038 = relay.equal(call_1030.astype('bool'), relay.reshape(call_995.astype('bool'), relay.shape_of(call_1030))) # shape=(1, 16, 11)
bop_1041 = relay.equal(call_1031.astype('bool'), relay.reshape(call_996.astype('bool'), relay.shape_of(call_1031))) # shape=(1, 16, 11)
func_854_call = mod.get_global_var('func_854')
func_856_call = mutated_mod.get_global_var('func_856')
call_1052 = relay.TupleGetItem(func_854_call(), 0)
call_1053 = relay.TupleGetItem(func_856_call(), 0)
func_854_call = mod.get_global_var('func_854')
func_856_call = mutated_mod.get_global_var('func_856')
call_1069 = relay.TupleGetItem(func_854_call(), 0)
call_1070 = relay.TupleGetItem(func_856_call(), 0)
bop_1079 = relay.floor_divide(call_1030.astype('float64'), relay.reshape(call_1052.astype('float64'), relay.shape_of(call_1030))) # shape=(1, 16, 11)
bop_1082 = relay.floor_divide(call_1031.astype('float64'), relay.reshape(call_1053.astype('float64'), relay.shape_of(call_1031))) # shape=(1, 16, 11)
output = relay.Tuple([bop_1038,call_1069,bop_1079,])
output2 = relay.Tuple([bop_1041,call_1070,bop_1082,])
func_1094 = relay.Function([], output)
mod['func_1094'] = func_1094
mod = relay.transform.InferType()(mod)
output = func_1094()
func_1095 = relay.Function([], output)
mutated_mod['func_1095'] = func_1095
mutated_mod = relay.transform.InferType()(mutated_mod)
func_621_call = mod.get_global_var('func_621')
func_623_call = mutated_mod.get_global_var('func_623')
call_1201 = relay.TupleGetItem(func_621_call(), 0)
call_1202 = relay.TupleGetItem(func_623_call(), 0)
output = call_1201
output2 = call_1202
func_1205 = relay.Function([], output)
mod['func_1205'] = func_1205
mod = relay.transform.InferType()(mod)
output = func_1205()
func_1206 = relay.Function([], output)
mutated_mod['func_1206'] = func_1206
mutated_mod = relay.transform.InferType()(mutated_mod)
func_704_call = mod.get_global_var('func_704')
func_705_call = mutated_mod.get_global_var('func_705')
call_1209 = relay.TupleGetItem(func_704_call(), 0)
call_1210 = relay.TupleGetItem(func_705_call(), 0)
output = call_1209
output2 = call_1210
func_1211 = relay.Function([], output)
mod['func_1211'] = func_1211
mod = relay.transform.InferType()(mod)
mutated_mod['func_1211'] = func_1211
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1211_call = mutated_mod.get_global_var('func_1211')
call_1212 = func_1211_call()
output = call_1212
func_1213 = relay.Function([], output)
mutated_mod['func_1213'] = func_1213
mutated_mod = relay.transform.InferType()(mutated_mod)
func_747_call = mod.get_global_var('func_747')
func_748_call = mutated_mod.get_global_var('func_748')
call_1227 = relay.TupleGetItem(func_747_call(), 0)
call_1228 = relay.TupleGetItem(func_748_call(), 0)
func_1094_call = mod.get_global_var('func_1094')
func_1095_call = mutated_mod.get_global_var('func_1095')
call_1238 = relay.TupleGetItem(func_1094_call(), 2)
call_1239 = relay.TupleGetItem(func_1095_call(), 2)
output = relay.Tuple([call_1227,call_1238,])
output2 = relay.Tuple([call_1228,call_1239,])
func_1243 = relay.Function([], output)
mod['func_1243'] = func_1243
mod = relay.transform.InferType()(mod)
output = func_1243()
func_1244 = relay.Function([], output)
mutated_mod['func_1244'] = func_1244
mutated_mod = relay.transform.InferType()(mutated_mod)
func_747_call = mod.get_global_var('func_747')
func_748_call = mutated_mod.get_global_var('func_748')
call_1259 = relay.TupleGetItem(func_747_call(), 0)
call_1260 = relay.TupleGetItem(func_748_call(), 0)
func_704_call = mod.get_global_var('func_704')
func_705_call = mutated_mod.get_global_var('func_705')
call_1281 = relay.TupleGetItem(func_704_call(), 0)
call_1282 = relay.TupleGetItem(func_705_call(), 0)
func_1094_call = mod.get_global_var('func_1094')
func_1095_call = mutated_mod.get_global_var('func_1095')
call_1291 = relay.TupleGetItem(func_1094_call(), 2)
call_1292 = relay.TupleGetItem(func_1095_call(), 2)
func_1243_call = mod.get_global_var('func_1243')
func_1244_call = mutated_mod.get_global_var('func_1244')
call_1293 = relay.TupleGetItem(func_1243_call(), 0)
call_1294 = relay.TupleGetItem(func_1244_call(), 0)
func_447_call = mod.get_global_var('func_447')
func_450_call = mutated_mod.get_global_var('func_450')
var_1298 = relay.var("var_1298", dtype = "float64", shape = (1, 270))#candidate|1298|(1, 270)|var|float64
call_1297 = relay.TupleGetItem(func_447_call(relay.reshape(var_1298.astype('float64'), [15, 3, 6]), relay.reshape(var_1298.astype('float64'), [15, 3, 6]), ), 0)
call_1299 = relay.TupleGetItem(func_450_call(relay.reshape(var_1298.astype('float64'), [15, 3, 6]), relay.reshape(var_1298.astype('float64'), [15, 3, 6]), ), 0)
bop_1300 = relay.power(call_1291.astype('float32'), relay.reshape(call_1281.astype('float32'), relay.shape_of(call_1291))) # shape=(1, 16, 11)
bop_1303 = relay.power(call_1292.astype('float32'), relay.reshape(call_1282.astype('float32'), relay.shape_of(call_1292))) # shape=(1, 16, 11)
func_916_call = mod.get_global_var('func_916')
func_918_call = mutated_mod.get_global_var('func_918')
call_1306 = relay.TupleGetItem(func_916_call(), 0)
call_1307 = relay.TupleGetItem(func_918_call(), 0)
output = relay.Tuple([call_1259,call_1293,call_1297,var_1298,bop_1300,call_1306,])
output2 = relay.Tuple([call_1260,call_1294,call_1299,var_1298,bop_1303,call_1307,])
func_1309 = relay.Function([var_1298,], output)
mod['func_1309'] = func_1309
mod = relay.transform.InferType()(mod)
mutated_mod['func_1309'] = func_1309
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1310 = relay.var("var_1310", dtype = "float64", shape = (1, 270))#candidate|1310|(1, 270)|var|float64
func_1309_call = mutated_mod.get_global_var('func_1309')
call_1311 = func_1309_call(var_1310)
output = call_1311
func_1312 = relay.Function([var_1310], output)
mutated_mod['func_1312'] = func_1312
mutated_mod = relay.transform.InferType()(mutated_mod)
func_964_call = mod.get_global_var('func_964')
func_966_call = mutated_mod.get_global_var('func_966')
call_1324 = func_964_call()
call_1325 = func_964_call()
output = relay.Tuple([call_1324,])
output2 = relay.Tuple([call_1325,])
func_1339 = relay.Function([], output)
mod['func_1339'] = func_1339
mod = relay.transform.InferType()(mod)
output = func_1339()
func_1340 = relay.Function([], output)
mutated_mod['func_1340'] = func_1340
mutated_mod = relay.transform.InferType()(mutated_mod)
func_747_call = mod.get_global_var('func_747')
func_748_call = mutated_mod.get_global_var('func_748')
call_1388 = relay.TupleGetItem(func_747_call(), 0)
call_1389 = relay.TupleGetItem(func_748_call(), 0)
func_584_call = mod.get_global_var('func_584')
func_586_call = mutated_mod.get_global_var('func_586')
call_1393 = relay.TupleGetItem(func_584_call(), 0)
call_1394 = relay.TupleGetItem(func_586_call(), 0)
func_1309_call = mod.get_global_var('func_1309')
func_1312_call = mutated_mod.get_global_var('func_1312')
const_1437 = relay.const([-0.266226,-3.269173,7.116669,-9.647610,9.244335,3.819192,6.281070,7.842613,2.145077,-2.944144,7.810824,-5.273351,4.059051,-5.169930,-7.117930,-6.147594,-7.521713,8.774758,-4.850534,9.868297,3.140590,-0.081271,3.529791,8.084134,-4.641712,8.078091,-6.337480,8.057139,4.251436,-7.903029,-4.698994,-7.067752,1.837969,-2.020890,-5.323815,-9.165083,7.870850,-0.860188,-0.116485,9.093770,8.315910,3.197266,-2.515575,2.574522,-1.563420,4.916649,3.098876,-9.240895,3.490723,-1.647043,-0.005207,1.463134,9.461542,-6.122486,3.827007,-2.010874,-9.260505,-0.858886,-9.040556,-5.250040,1.343366,-6.894336,-5.306753,-5.062089,0.976250,2.142207,7.264169,6.916108,-2.493888,-1.302485,-7.850898,-5.332409,-5.437225,6.799351,1.279131,-4.368116,-6.948956,3.074752,0.597401,-7.251979,-8.838831,-4.857957,1.095555,-8.595995,3.862924,8.270515,-8.598003,-2.896852,0.167638,1.041538,-1.382168,3.737079,-9.901628,2.572129,-9.531627,0.818488,8.328752,-0.374132,1.878554,-5.711034,-6.887945,-1.316055,5.876359,6.454543,3.078570,5.273217,-5.150779,-9.204330,4.011677,-4.067471,4.341607,-8.548664,5.569691,6.994308,-6.414882,4.977906,-8.859637,3.220271,4.542158,-7.004580,0.361918,-6.873359,-1.946962,4.715981,-8.905530,-6.542848,5.869574,-9.072233,8.473441,0.327568,9.874884,-4.237704,0.598670,0.224675,8.936164,4.094965,-1.716131,-8.955434,-4.389767,-6.803274,-9.889598,-7.355719,-3.797067,-9.268577,0.469893,7.756039,7.220780,-3.123915,1.284390,2.794275,6.454479,2.518322,-0.997446,-4.119869,8.734335,8.979988,1.606036,9.360037,-3.897836,-3.847476,-4.827805,-8.966970,6.752972,-6.154664,-5.159181,6.425092,-4.753352,6.324724,6.827598,8.190197,4.180805,-8.027419,-6.868866,-5.650991,3.988888,-7.087540,-4.317092,2.522297,0.289851,-1.569678,3.436495,4.288883,-1.351360,-9.452462,0.037572,3.060982,-3.871652,7.510038,9.898508,9.336148,-0.947209,-9.763973,-4.284333,9.412707,9.737604,-0.862533,0.855480,-4.495543,-7.824104,8.131604,-3.210834,-1.342481,-5.635250,-9.154210,3.254821,6.633258,4.960386,-4.842161,0.660526,-0.200506,6.150104,-9.428330,-3.389225,6.875323,5.298102,-9.382956,1.333364,2.438651,7.782735,9.513580,8.845459,-6.024125,2.701283,2.998099,-7.495965,7.810972,-8.351481,0.414500,7.004625,2.891805,3.449556,-9.547145,6.387741,0.708219,4.061844,5.223684,4.786221,-1.517775,3.525261,2.297991,8.842705,0.738922,-3.450815,-5.207030,6.692191,6.824256,-6.780077,1.918147,4.847678,-3.939452,-6.073422,9.874733,2.629611,-4.240909,5.760853,2.650221,-9.407971,-7.020354,6.667646,-5.908837,0.324126,0.798969,-2.986176,3.750357,4.123737,-0.010587,8.112953,4.581937,2.682632,8.742367], dtype = "float64")#candidate|1437|(270,)|const|float64
call_1436 = relay.TupleGetItem(func_1309_call(relay.reshape(const_1437.astype('float64'), [1, 270])), 5)
call_1438 = relay.TupleGetItem(func_1312_call(relay.reshape(const_1437.astype('float64'), [1, 270])), 5)
func_1211_call = mod.get_global_var('func_1211')
func_1213_call = mutated_mod.get_global_var('func_1213')
call_1443 = func_1211_call()
call_1444 = func_1211_call()
bop_1511 = relay.multiply(call_1393.astype('float32'), relay.reshape(call_1436.astype('float32'), relay.shape_of(call_1393))) # shape=(1, 16, 11)
bop_1514 = relay.multiply(call_1394.astype('float32'), relay.reshape(call_1438.astype('float32'), relay.shape_of(call_1394))) # shape=(1, 16, 11)
bop_1532 = relay.subtract(call_1393.astype('uint64'), relay.reshape(call_1436.astype('uint64'), relay.shape_of(call_1393))) # shape=(1, 16, 11)
bop_1535 = relay.subtract(call_1394.astype('uint64'), relay.reshape(call_1438.astype('uint64'), relay.shape_of(call_1394))) # shape=(1, 16, 11)
func_854_call = mod.get_global_var('func_854')
func_856_call = mutated_mod.get_global_var('func_856')
call_1544 = relay.TupleGetItem(func_854_call(), 0)
call_1545 = relay.TupleGetItem(func_856_call(), 0)
output = relay.Tuple([call_1388,const_1437,call_1443,bop_1511,bop_1532,call_1544,])
output2 = relay.Tuple([call_1389,const_1437,call_1444,bop_1514,bop_1535,call_1545,])
func_1549 = relay.Function([], output)
mod['func_1549'] = func_1549
mod = relay.transform.InferType()(mod)
output = func_1549()
func_1550 = relay.Function([], output)
mutated_mod['func_1550'] = func_1550
mutated_mod = relay.transform.InferType()(mutated_mod)
func_621_call = mod.get_global_var('func_621')
func_623_call = mutated_mod.get_global_var('func_623')
call_1554 = relay.TupleGetItem(func_621_call(), 0)
call_1555 = relay.TupleGetItem(func_623_call(), 0)
output = relay.Tuple([call_1554,])
output2 = relay.Tuple([call_1555,])
func_1561 = relay.Function([], output)
mod['func_1561'] = func_1561
mod = relay.transform.InferType()(mod)
output = func_1561()
func_1562 = relay.Function([], output)
mutated_mod['func_1562'] = func_1562
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1573 = relay.var("var_1573", dtype = "float64", shape = (15, 10, 15))#candidate|1573|(15, 10, 15)|var|float64
uop_1574 = relay.asinh(var_1573.astype('float64')) # shape=(15, 10, 15)
bop_1576 = relay.greater_equal(uop_1574.astype('bool'), relay.reshape(var_1573.astype('bool'), relay.shape_of(uop_1574))) # shape=(15, 10, 15)
func_1339_call = mod.get_global_var('func_1339')
func_1340_call = mutated_mod.get_global_var('func_1340')
call_1604 = relay.TupleGetItem(func_1339_call(), 0)
call_1605 = relay.TupleGetItem(func_1340_call(), 0)
func_704_call = mod.get_global_var('func_704')
func_705_call = mutated_mod.get_global_var('func_705')
call_1606 = relay.TupleGetItem(func_704_call(), 0)
call_1607 = relay.TupleGetItem(func_705_call(), 0)
output = relay.Tuple([bop_1576,call_1604,call_1606,])
output2 = relay.Tuple([bop_1576,call_1605,call_1607,])
func_1610 = relay.Function([var_1573,], output)
mod['func_1610'] = func_1610
mod = relay.transform.InferType()(mod)
var_1611 = relay.var("var_1611", dtype = "float64", shape = (15, 10, 15))#candidate|1611|(15, 10, 15)|var|float64
output = func_1610(var_1611)
func_1612 = relay.Function([var_1611], output)
mutated_mod['func_1612'] = func_1612
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1549_call = mod.get_global_var('func_1549')
func_1550_call = mutated_mod.get_global_var('func_1550')
call_1614 = relay.TupleGetItem(func_1549_call(), 2)
call_1615 = relay.TupleGetItem(func_1550_call(), 2)
uop_1627 = relay.exp(call_1614.astype('float32')) # shape=(1, 16, 11)
uop_1629 = relay.exp(call_1615.astype('float32')) # shape=(1, 16, 11)
uop_1632 = relay.acosh(call_1614.astype('float32')) # shape=(1, 16, 11)
uop_1634 = relay.acosh(call_1615.astype('float32')) # shape=(1, 16, 11)
uop_1644 = relay.cosh(call_1614.astype('float64')) # shape=(1, 16, 11)
uop_1646 = relay.cosh(call_1615.astype('float64')) # shape=(1, 16, 11)
output = relay.Tuple([uop_1627,uop_1632,uop_1644,])
output2 = relay.Tuple([uop_1629,uop_1634,uop_1646,])
func_1651 = relay.Function([], output)
mod['func_1651'] = func_1651
mod = relay.transform.InferType()(mod)
mutated_mod['func_1651'] = func_1651
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1651_call = mutated_mod.get_global_var('func_1651')
call_1652 = func_1651_call()
output = call_1652
func_1653 = relay.Function([], output)
mutated_mod['func_1653'] = func_1653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1651_call = mod.get_global_var('func_1651')
func_1653_call = mutated_mod.get_global_var('func_1653')
call_1698 = relay.TupleGetItem(func_1651_call(), 0)
call_1699 = relay.TupleGetItem(func_1653_call(), 0)
const_1702 = relay.constdtype = "float32")#candidate|1702|(14, 16, 11)|const|float32
bop_1703 = relay.floor_divide(call_1698.astype('float64'), const_1702.astype('float64')) # shape=(14, 16, 11)
bop_1706 = relay.floor_divide(call_1699.astype('float64'), const_1702.astype('float64')) # shape=(14, 16, 11)
func_964_call = mod.get_global_var('func_964')
func_966_call = mutated_mod.get_global_var('func_966')
call_1711 = func_964_call()
call_1712 = func_964_call()
output = relay.Tuple([bop_1703,call_1711,])
output2 = relay.Tuple([bop_1706,call_1712,])
func_1713 = relay.Function([], output)
mod['func_1713'] = func_1713
mod = relay.transform.InferType()(mod)
output = func_1713()
func_1714 = relay.Function([], output)
mutated_mod['func_1714'] = func_1714
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1561_call = mod.get_global_var('func_1561')
func_1562_call = mutated_mod.get_global_var('func_1562')
call_1752 = relay.TupleGetItem(func_1561_call(), 0)
call_1753 = relay.TupleGetItem(func_1562_call(), 0)
func_1339_call = mod.get_global_var('func_1339')
func_1340_call = mutated_mod.get_global_var('func_1340')
call_1762 = relay.TupleGetItem(func_1339_call(), 0)
call_1763 = relay.TupleGetItem(func_1340_call(), 0)
func_916_call = mod.get_global_var('func_916')
func_918_call = mutated_mod.get_global_var('func_918')
call_1767 = relay.TupleGetItem(func_916_call(), 0)
call_1768 = relay.TupleGetItem(func_918_call(), 0)
output = relay.Tuple([call_1752,call_1762,call_1767,])
output2 = relay.Tuple([call_1753,call_1763,call_1768,])
func_1800 = relay.Function([], output)
mod['func_1800'] = func_1800
mod = relay.transform.InferType()(mod)
output = func_1800()
func_1801 = relay.Function([], output)
mutated_mod['func_1801'] = func_1801
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1243_call = mod.get_global_var('func_1243')
func_1244_call = mutated_mod.get_global_var('func_1244')
call_1802 = relay.TupleGetItem(func_1243_call(), 1)
call_1803 = relay.TupleGetItem(func_1244_call(), 1)
func_621_call = mod.get_global_var('func_621')
func_623_call = mutated_mod.get_global_var('func_623')
call_1811 = relay.TupleGetItem(func_621_call(), 0)
call_1812 = relay.TupleGetItem(func_623_call(), 0)
output = relay.Tuple([call_1802,call_1811,])
output2 = relay.Tuple([call_1803,call_1812,])
func_1814 = relay.Function([], output)
mod['func_1814'] = func_1814
mod = relay.transform.InferType()(mod)
mutated_mod['func_1814'] = func_1814
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1814_call = mutated_mod.get_global_var('func_1814')
call_1815 = func_1814_call()
output = call_1815
func_1816 = relay.Function([], output)
mutated_mod['func_1816'] = func_1816
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1211_call = mod.get_global_var('func_1211')
func_1213_call = mutated_mod.get_global_var('func_1213')
call_1817 = func_1211_call()
call_1818 = func_1211_call()
output = call_1817
output2 = call_1818
func_1836 = relay.Function([], output)
mod['func_1836'] = func_1836
mod = relay.transform.InferType()(mod)
output = func_1836()
func_1837 = relay.Function([], output)
mutated_mod['func_1837'] = func_1837
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1651_call = mod.get_global_var('func_1651')
func_1653_call = mutated_mod.get_global_var('func_1653')
call_1875 = relay.TupleGetItem(func_1651_call(), 1)
call_1876 = relay.TupleGetItem(func_1653_call(), 1)
output = call_1875
output2 = call_1876
func_1878 = relay.Function([], output)
mod['func_1878'] = func_1878
mod = relay.transform.InferType()(mod)
mutated_mod['func_1878'] = func_1878
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1878_call = mutated_mod.get_global_var('func_1878')
call_1879 = func_1878_call()
output = call_1879
func_1880 = relay.Function([], output)
mutated_mod['func_1880'] = func_1880
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1800_call = mod.get_global_var('func_1800')
func_1801_call = mutated_mod.get_global_var('func_1801')
call_1997 = relay.TupleGetItem(func_1800_call(), 0)
call_1998 = relay.TupleGetItem(func_1801_call(), 0)
func_1713_call = mod.get_global_var('func_1713')
func_1714_call = mutated_mod.get_global_var('func_1714')
call_2017 = relay.TupleGetItem(func_1713_call(), 1)
call_2018 = relay.TupleGetItem(func_1714_call(), 1)
output = relay.Tuple([call_1997,call_2017,])
output2 = relay.Tuple([call_1998,call_2018,])
func_2019 = relay.Function([], output)
mod['func_2019'] = func_2019
mod = relay.transform.InferType()(mod)
output = func_2019()
func_2020 = relay.Function([], output)
mutated_mod['func_2020'] = func_2020
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1339_call = mod.get_global_var('func_1339')
func_1340_call = mutated_mod.get_global_var('func_1340')
call_2049 = relay.TupleGetItem(func_1339_call(), 0)
call_2050 = relay.TupleGetItem(func_1340_call(), 0)
output = call_2049
output2 = call_2050
func_2057 = relay.Function([], output)
mod['func_2057'] = func_2057
mod = relay.transform.InferType()(mod)
mutated_mod['func_2057'] = func_2057
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2057_call = mutated_mod.get_global_var('func_2057')
call_2058 = func_2057_call()
output = call_2058
func_2059 = relay.Function([], output)
mutated_mod['func_2059'] = func_2059
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1836_call = mod.get_global_var('func_1836')
func_1837_call = mutated_mod.get_global_var('func_1837')
call_2103 = func_1836_call()
call_2104 = func_1836_call()
output = relay.Tuple([call_2103,])
output2 = relay.Tuple([call_2104,])
func_2113 = relay.Function([], output)
mod['func_2113'] = func_2113
mod = relay.transform.InferType()(mod)
output = func_2113()
func_2114 = relay.Function([], output)
mutated_mod['func_2114'] = func_2114
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2272 = relay.var("var_2272", dtype = "uint32", shape = (1, 10, 2))#candidate|2272|(1, 10, 2)|var|uint32
const_2273 = relay.const([[[6,-2],[6,10],[2,6],[-8,-6],[-4,-9],[-3,4],[-1,10],[8,7],[-8,9],[-4,-3]],[[-2,6],[5,-6],[2,-4],[10,2],[4,5],[5,-8],[-1,-5],[5,-1],[-7,10],[-8,1]],[[-2,4],[4,3],[9,-10],[2,-7],[4,-7],[-2,-7],[-5,10],[-3,-3],[7,-7],[3,-1]],[[-2,9],[10,8],[-10,6],[-3,-8],[9,-2],[-1,7],[2,1],[6,10],[-4,3],[-6,9]]], dtype = "uint32")#candidate|2273|(4, 10, 2)|const|uint32
bop_2274 = relay.not_equal(var_2272.astype('bool'), const_2273.astype('bool')) # shape=(4, 10, 2)
output = bop_2274
output2 = bop_2274
func_2287 = relay.Function([var_2272,], output)
mod['func_2287'] = func_2287
mod = relay.transform.InferType()(mod)
mutated_mod['func_2287'] = func_2287
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2288 = relay.var("var_2288", dtype = "uint32", shape = (1, 10, 2))#candidate|2288|(1, 10, 2)|var|uint32
func_2287_call = mutated_mod.get_global_var('func_2287')
call_2289 = func_2287_call(var_2288)
output = call_2289
func_2290 = relay.Function([var_2288], output)
mutated_mod['func_2290'] = func_2290
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2315 = relay.const([[[-8,-9,-5,3,5,-4,-5,8,2,1,-7],[-2,-3,3,-2,-9,-5,9,9,2,7,4],[9,-6,-5,10,-6,-6,5,-4,4,-9,-2],[-9,-10,5,-6,-9,-3,8,4,10,10,-8],[-3,-2,-6,6,-9,6,-7,-7,2,-10,3],[-10,7,8,6,-2,8,8,5,1,10,-1],[10,1,-6,-4,-10,5,-6,3,-8,-1,-9],[2,2,5,-1,-10,-6,1,-2,10,-3,9],[7,1,9,4,2,1,7,9,-6,-9,10],[4,-8,5,-9,-3,6,-4,8,4,-3,-6],[-3,-2,-4,9,2,-7,10,-4,-6,-9,-10],[9,10,10,8,-8,10,8,-1,-7,4,5],[-8,5,5,6,5,-3,-1,-2,8,-8,10],[-4,4,-3,-7,-2,-9,-7,-9,10,-2,-2],[-8,2,4,4,-7,-4,10,-1,8,-2,-10]],[[-3,-5,4,-10,10,3,-3,3,1,-8,3],[4,6,7,1,8,8,-1,-1,-1,8,-3],[10,-2,8,-8,9,6,4,-5,3,-2,-7],[5,3,-8,-9,6,1,-2,8,-1,-10,2],[10,-2,1,6,-7,5,-9,5,-8,-9,8],[7,1,-3,-4,-8,2,-1,-6,-10,-10,-4],[-10,6,1,8,-1,5,4,7,-1,-4,7],[-6,2,5,-9,-8,-10,-8,4,-10,10,6],[-1,1,8,-7,-9,-5,6,-3,-10,7,-9],[-1,-8,5,8,1,-4,3,8,-4,-4,-9],[8,-7,-5,8,-9,5,4,7,-3,3,-3],[-9,8,-9,4,-3,2,-3,-6,10,-4,5],[7,9,-2,-9,-9,-7,4,9,4,10,-6],[2,6,7,9,5,6,7,-6,-7,5,-4],[-10,4,-7,-1,-9,-4,6,-4,-5,-10,5]],[[-1,4,-6,1,-5,-2,-4,-7,-1,9,1],[9,10,-4,-5,8,10,3,10,-7,-5,-7],[-10,-6,-1,6,-10,-7,9,1,-2,1,2],[9,7,8,-5,-1,-9,3,1,2,-8,-4],[-4,-10,-5,-10,4,10,3,3,2,10,10],[1,-7,-5,-6,2,5,6,-5,-10,6,-10],[5,-7,-9,10,2,-3,4,6,8,-10,9],[6,4,5,-3,9,10,8,-4,-9,8,7],[-9,-4,10,1,-1,7,2,-5,7,-6,1],[6,-10,2,-6,-2,4,3,1,7,-2,9],[-6,-2,8,10,2,5,-1,-2,7,-4,-1],[9,5,-5,-10,-3,-9,-9,-5,-6,-5,8],[9,-6,3,1,9,7,-6,2,-7,2,2],[-2,-10,-1,-3,-2,-9,1,8,-8,-4,2],[-9,7,9,-3,1,-7,6,-8,7,3,8]],[[-7,-8,5,2,-1,2,-1,7,2,-9,-1],[-7,6,-6,-9,3,-3,3,-2,-7,-7,10],[10,2,-5,8,-10,2,-8,-4,-5,3,7],[-7,-2,-3,3,-9,-9,2,-3,-10,5,8],[-2,-10,-9,-6,10,7,-10,-1,4,-6,10],[-8,10,6,2,1,-4,1,-6,2,-2,6],[-9,-7,-6,7,2,-8,5,-10,-8,1,3],[-7,-10,-5,-8,-8,-9,-2,-7,2,6,4],[6,8,-8,-5,-10,-2,-1,-5,-9,8,8],[-4,10,-8,9,-8,7,-8,5,-8,8,-7],[6,-8,7,-2,5,-1,5,1,-3,-9,-5],[7,-2,6,2,1,-7,10,6,-10,1,7],[-3,10,-7,6,5,3,6,-9,5,6,-8],[6,10,6,9,7,-2,-8,5,-3,9,10],[-7,4,9,-4,6,-1,-7,-8,-10,8,2]],[[-9,2,-7,-9,-6,6,-6,2,1,9,-6],[9,-5,-9,-9,1,-9,-1,5,3,-4,-3],[-3,-2,5,-6,-10,-5,4,-7,8,-2,-2],[3,-2,-1,7,-1,-1,7,-4,8,-8,8],[8,6,5,3,10,7,2,10,-1,2,-4],[1,9,-4,2,-10,9,-8,-3,-2,-7,-7],[-4,-10,8,1,8,9,-1,6,-5,6,4],[8,5,2,-6,10,-8,9,2,-7,3,-8],[1,8,4,-9,7,8,5,5,1,-5,8],[4,-5,-8,8,-3,-4,2,4,-8,9,5],[8,-7,-7,-7,-6,3,-1,-8,-9,-8,1],[-10,-3,7,4,6,-4,-2,-5,6,-9,1],[-1,1,-1,4,-8,8,-3,-1,-9,-1,-10],[-3,-2,-4,-9,-1,7,2,-8,1,-9,7],[-4,-8,-5,-7,2,8,1,2,-9,10,-6]],[[6,-7,2,-6,9,-7,-2,-6,7,-8,-1],[-9,9,-10,7,-9,10,8,3,8,3,-9],[-10,-5,-4,-4,-2,-9,-4,-9,-3,-2,6],[4,5,1,9,-2,-6,8,1,-4,6,3],[-2,-10,5,-9,-3,2,7,5,-3,7,-5],[-9,4,9,-7,-1,-7,6,-3,4,-10,-6],[-10,-2,-8,-4,3,-9,-7,8,-3,4,10],[-3,-7,-2,3,-5,-9,-8,8,-1,-5,8],[1,7,5,-3,5,9,-10,10,-9,6,2],[4,-8,-8,5,7,2,-9,9,-3,5,6],[-2,-9,-1,-6,1,-4,-5,1,10,6,-4],[-10,-7,5,2,-7,8,-5,3,4,1,2],[-2,-6,3,-6,-8,-1,-7,7,10,6,-2],[-10,2,8,4,1,-6,-8,-2,-9,-1,5],[9,-9,-6,8,8,2,2,5,-3,-1,5]],[[10,-6,-8,-7,4,7,-4,8,2,10,6],[-7,9,9,-8,1,-2,7,3,6,-2,1],[-9,-10,7,-6,-3,7,-2,-1,-1,-10,-9],[-6,3,-10,-7,10,3,9,-9,4,10,3],[-8,-4,-7,3,-3,8,10,-8,-2,3,10],[7,8,3,-3,-10,1,1,10,3,2,7],[3,9,6,1,5,-7,-1,9,-7,6,-4],[-7,10,8,-3,-2,-2,4,-4,-8,-4,1],[5,9,10,-3,2,-9,-2,-4,3,3,-8],[5,-1,10,8,-9,1,9,5,6,-2,10],[3,8,2,1,-6,10,9,-1,1,-10,-9],[-6,10,2,8,-5,7,-6,5,-7,-4,-10],[-8,10,2,2,10,6,9,-2,-9,7,-2],[-7,10,10,2,7,-9,-7,-8,2,8,-5],[-5,5,6,4,-5,-5,-2,1,2,-3,-6]],[[6,1,1,8,-8,7,-9,-5,2,-1,-7],[1,8,-9,-8,1,-10,-2,4,8,-2,-7],[-7,1,4,-6,4,10,-3,-3,3,-5,-8],[3,8,6,-4,9,5,1,-2,10,-4,-10],[-9,-8,-8,-7,-3,-10,2,8,-9,9,9],[-1,5,-10,2,-6,4,-5,-8,-1,-3,-1],[-7,2,8,-7,-1,9,-2,5,-9,-6,6],[7,6,-6,-9,5,-5,-1,8,9,10,5],[5,5,2,8,3,-1,-3,7,3,-7,8],[-1,-10,10,-6,-2,-7,-6,-6,-5,8,-7],[5,5,7,6,2,6,6,1,-10,-5,-10],[6,-3,-7,8,-4,-10,-1,-10,4,2,5],[-3,2,-9,-10,5,-5,6,-1,-7,-7,3],[4,3,-7,-6,-5,-1,2,-1,1,8,-6],[9,7,10,3,-2,-7,4,1,8,-1,-2]],[[-1,7,1,-7,10,-2,-1,2,6,-2,-8],[10,-6,-7,7,2,-2,-9,4,8,3,-10],[-4,10,-6,-6,-9,-6,-3,6,2,-8,-6],[-7,-3,6,-7,-10,-1,-3,-5,3,-5,10],[4,10,3,10,2,-4,2,-1,-6,-2,-3],[4,-5,-1,8,10,9,-7,5,4,5,-4],[-5,8,8,-10,6,-1,3,-3,5,-2,-3],[-9,-6,-10,10,-10,1,-8,-7,-1,4,-5],[-6,-7,-2,-7,10,5,-10,9,-9,5,-6],[-10,-3,5,5,-2,8,3,-10,7,8,-10],[-5,8,-9,-3,-8,-5,3,6,-1,10,2],[1,4,4,8,-2,-4,-6,-5,-5,3,2],[3,6,10,5,-9,-4,4,7,-3,-6,1],[-7,4,-9,-5,3,-1,-1,-4,1,-5,-6],[-2,-3,-4,-1,3,-3,-3,2,-1,5,5]],[[-3,4,-2,-8,8,-3,-6,-7,4,-4,-7],[-9,-4,-5,4,-4,-6,-10,5,-7,7,-1],[-9,-9,-2,-1,-1,-7,1,-1,9,4,2],[-6,-2,-10,-4,-2,-3,7,-6,-4,7,10],[-1,-4,6,8,2,7,-8,2,1,-5,7],[-2,8,-7,-5,-6,-10,9,-10,8,-10,5],[3,9,1,10,8,10,6,-3,-6,9,1],[4,4,3,-8,-3,-4,-6,-10,3,-8,4],[-2,-9,5,-6,6,8,-3,-8,-7,-1,5],[8,-6,1,-5,2,-3,-8,8,5,-4,-6],[5,-8,-6,5,-10,7,7,-2,5,2,4],[6,-1,-6,7,-4,7,-5,4,-4,-5,10],[3,4,7,-5,3,-3,-4,1,-4,-4,-8],[-3,8,-7,-2,-5,-1,2,7,9,9,-6],[2,4,4,-6,-6,-5,8,-9,8,-7,7]],[[7,5,3,5,-8,-9,-2,2,-7,6,-5],[5,7,2,-2,-3,10,-4,-3,2,-7,-8],[6,-4,-10,-7,7,3,-5,9,-1,-8,-10],[3,1,-7,-8,7,6,-7,6,-3,3,-8],[-10,-10,7,1,-10,1,10,2,-4,2,-4],[6,10,-2,7,5,-7,10,3,-9,6,8],[9,-5,-3,-3,-5,-9,-10,2,-3,7,-4],[-1,-8,1,4,1,-1,6,-5,-1,6,7],[-10,-5,8,2,9,-8,-6,1,8,3,10],[3,6,8,-1,10,-4,6,-7,1,-2,10],[-9,9,-5,-7,10,10,2,-8,3,-8,-2],[-8,-3,-2,-9,4,-5,5,3,-3,-2,9],[-1,10,-6,2,3,5,-10,-10,1,-8,4],[4,-7,-10,-2,-4,-7,-8,3,9,9,-1],[-2,7,-2,8,8,3,9,-4,-2,5,-3]],[[10,-2,-1,4,-9,10,10,10,-9,-9,2],[6,10,-4,-7,9,-2,-8,-1,6,1,-5],[9,-8,-2,1,-7,-1,4,2,-2,-3,-2],[-9,5,5,1,-6,5,-1,1,2,8,2],[9,-7,7,-7,-1,5,4,-4,10,-7,2],[-2,9,-10,9,9,10,-3,6,-7,8,2],[10,9,6,4,4,-2,4,-10,-5,-5,4],[1,7,6,-8,9,6,1,-6,1,-3,-2],[4,1,10,-4,3,-6,-1,-8,-5,-10,-9],[-3,6,-6,7,-5,2,2,-4,-8,-10,-7],[-1,2,4,-6,-1,-7,-5,5,10,4,-7],[-4,1,-8,-10,-3,-10,6,-7,6,-3,6],[-5,-9,10,-9,-8,-10,6,-1,2,5,9],[7,-4,-5,-9,5,1,-1,7,-1,-2,5],[10,-2,2,-6,1,-8,-8,1,5,3,10]]], dtype = "uint8")#candidate|2315|(12, 15, 11)|const|uint8
var_2316 = relay.var("var_2316", dtype = "uint8", shape = (12, 15, 11))#candidate|2316|(12, 15, 11)|var|uint8
bop_2317 = relay.minimum(const_2315.astype('uint8'), relay.reshape(var_2316.astype('uint8'), relay.shape_of(const_2315))) # shape=(12, 15, 11)
output = relay.Tuple([bop_2317,])
output2 = relay.Tuple([bop_2317,])
func_2326 = relay.Function([var_2316,], output)
mod['func_2326'] = func_2326
mod = relay.transform.InferType()(mod)
var_2327 = relay.var("var_2327", dtype = "uint8", shape = (12, 15, 11))#candidate|2327|(12, 15, 11)|var|uint8
output = func_2326(var_2327)
func_2328 = relay.Function([var_2327], output)
mutated_mod['func_2328'] = func_2328
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1211_call = mod.get_global_var('func_1211')
func_1213_call = mutated_mod.get_global_var('func_1213')
call_2416 = func_1211_call()
call_2417 = func_1211_call()
func_1610_call = mod.get_global_var('func_1610')
func_1612_call = mutated_mod.get_global_var('func_1612')
const_2439 = relay.const([9.498534,1.345885,-2.721564,-2.613546,7.406053,-4.168350,8.465548,1.758013,0.371629,4.047803,-3.323762,-6.519001,-3.557171,1.947409,-9.673076,-7.803369,0.525504,-4.721965,9.623670,-6.769233,2.214386,4.660358,-9.095180,-5.072805,5.291797,3.626458,-1.303927,-2.665574,7.904544,5.160515,-0.887150,0.371524,3.848156,-4.353646,-9.566381,4.432650,5.436030,5.174233,-1.138918,5.257558,7.110745,6.856943,-5.970230,-4.677882,-2.671306,-0.517486,9.490142,-7.938600,3.608919,-2.611639,6.926148,5.390474,-5.148793,0.756112,0.548876,-7.051920,6.290182,-0.654028,-3.189741,6.544561,-4.077301,3.512213,4.560451,9.109792,-1.124951,0.674231,5.049602,-5.131815,7.687145,-8.893173,-5.956092,8.642163,5.474495,-4.895193,-4.244489,-9.103129,9.437543,-9.930636,4.930934,8.718861,1.387710,3.001697,3.321863,-4.045194,4.068990,7.301368,-3.213002,-5.230329,7.104427,0.906067,-7.615253,-6.311348,2.707387,0.406078,-8.858948,2.345820,5.588893,5.569239,-1.827035,0.288869,-5.010761,-4.966808,9.556589,-5.684521,6.817970,-8.839043,6.176292,5.404227,6.119659,9.283368,9.400154,-9.252825,-2.526591,2.828169,3.050076,-5.413542,-5.624948,-7.283232,0.886650,-2.324917,-3.187657,7.163524,8.527885,0.801337,3.017259,0.634179,9.699384,1.020867,1.639116,-2.968591,7.019215,-5.330108,1.148063,3.217961,-5.164912,8.066944,-1.559628,-1.461979,5.701846,-6.889494,3.301370,1.936508,3.846071,-3.419959,-0.193284,-5.005086,8.681579,0.936842,2.996800,-6.751129,-7.421002,0.285342,-8.889923,-7.519090,3.642236,-0.663755,-4.478360,9.832955,-5.071428,-7.036966,-7.918917,-7.725783,-0.103125,2.675590,-4.991482,6.972138,5.483840,7.521274,-3.384783,-2.804865,-1.687066,-6.674437,-9.754713,7.087863,3.326477,6.513354,-0.880546,-0.599618,4.275894,-8.168896,6.199999,-4.432651,-3.037966,-8.418452,-7.058146,-6.992728,3.300799,8.277807,-4.327423,-5.623927,2.282491,-2.586537,2.657739,-0.999761,-1.894775,-6.552150,-1.685606,-5.811366,-9.493345,1.581985,1.989682,5.837569,9.686707,1.959716,3.430361,5.439467,5.896086,-3.920864,-5.088792,-0.081181,-2.358260,-7.933626,7.897988,5.336931,4.583976,-4.085143,0.663979,6.265072,0.193495,-6.500540,-6.158143,5.335621,8.184045,-2.857579,-9.092126,-9.900068,6.068210,1.546443,-3.927352,-2.492625,8.563730,-0.141946,7.885004,4.266693,-3.573411,1.544232,-6.665108,7.567080,3.740718,8.546261,-9.635377,-9.232209,7.955168,-3.823120,-1.194683,5.255342,-4.391376,-7.834199,-0.530549,-9.527005,-3.094915,1.594890,-5.821424,-7.264237,8.219752,8.387732,-0.566274,7.457400,1.322953,7.441458,8.482147,5.308682,-2.626751,8.605335,-3.614031,-6.325537,8.156727,8.400513,-3.105400,0.833559,4.613627,8.145985,-5.432153,8.564372,-6.500286,-0.344399,-7.019369,7.526990,1.200353,6.738449,-3.157700,-9.369085,0.899090,1.794909,-7.293900,5.478185,6.115887,7.163351,-2.894819,0.120578,2.357546,-8.894072,-4.326973,-9.324397,-2.537647,7.072639,9.857972,-0.050172,2.186116,-0.234635,5.223976,2.881066,-5.859348,-5.460084,-9.531463,-4.350276,2.671755,4.750086,-6.247984,-2.275776,9.600283,-7.799824,7.222273,6.974746,-1.782263,-3.731525,-9.016512,7.604545,-6.529464,5.938780,9.881517,-1.608232,-2.443736,-9.098304,-8.007528,9.569777,-0.151838,-5.542064,-8.130988,-1.553645,-6.487439,-8.225966,2.286371,3.408558,-3.131258,-3.289134,-2.336329,-2.666915,-0.868150,-6.272716,0.977250,-4.285537,7.023839,-8.484080,-9.995135,-5.149273,8.549947,1.280152,-5.650783,4.079997,2.202156,8.681561,-3.440436,-8.444092,-7.599577,3.635379,-5.154190,-7.606761,3.952300,-3.246912,9.402601,-8.541639,6.240528,9.832313,-2.065002,-0.892047,-5.975851,-5.465090,-4.724770,6.263275,3.336090,-0.554972,-5.831921,9.952934,6.221197,-8.596281,-9.264888,-3.609845,-2.128706,-4.184787,-4.146749,5.480264,-4.333958,8.766894,-8.781148,5.862819,-4.288870,-4.816528,-0.992758,-1.802198,5.462065,1.390397,6.098621,5.184208,2.457110,-4.241218,3.015210,1.612873,1.702496,-2.869244,7.331592,6.544584,3.675950,6.049470,2.427982,-5.807692,-4.440304,9.767375,9.079111,8.844601,-1.740154,-6.087187,3.426915,8.920102,-1.024952,6.558236,3.907942,9.692715,-4.180055,6.736615,-7.200735,-1.433812,3.845328,-2.852086,-8.343551,2.111843,-0.818120,-7.986894,3.653810,-8.919385,2.124156,-8.786350,3.069789,-0.038067,-4.147117,4.531111,4.726262,9.454457,5.172967,1.885425,8.636554,-3.430521,-5.872343,-1.655120,-9.205977,9.712770,-5.757908,5.382413,-5.949423,0.273718,3.241104,3.009352,-6.939335,5.397998,1.914177,2.110318,5.179234,-8.736780,4.642071,-8.647234,1.813293,2.050630,8.774499,2.468864,-1.901783,-6.641211,-0.408558,-7.363182,-5.483562,-8.126672,-8.928537,-2.892372,-7.636730,9.779430,4.844650,1.280569,-3.785126,-5.792704,3.963707,3.108682,-9.461604,8.623647,2.697642,0.995315,0.968153,1.492406,-9.121306,-1.479272,-8.239018,-8.294599,1.865818,8.422446,-2.080890,2.852971,6.898242,-7.895434,-6.412665,-5.714148,8.476677,0.870045,-0.706668,2.543506,-1.471996,9.691495,2.946670,5.951147,7.400126,-9.848635,-9.292606,-8.822116,-2.573762,-8.545242,-9.883479,7.318630,-5.106378,1.292173,5.285411,2.643163,-4.238606,0.560987,-6.748512,-8.241115,0.941513,-2.392744,-1.720685,2.775846,0.836065,0.322937,0.852849,6.964014,9.517457,-4.976026,3.831624,-1.402538,-6.238926,-0.497260,-7.044826,-6.929404,0.419772,-2.570819,0.357591,4.258350,1.675453,7.105968,9.968952,-1.676782,0.804833,1.474662,4.161920,-5.842033,4.186481,-7.453582,4.647637,3.741025,0.234862,-1.149431,-2.607318,0.994542,-9.366379,-5.830847,-3.932032,-6.006888,2.809024,-5.654799,5.914021,-4.169097,7.846988,8.597593,1.900411,-0.480326,-8.721153,-8.039539,-2.630226,-1.478310,-4.940793,-7.153769,3.007635,-7.657791,-6.016245,1.245839,3.324490,1.520772,1.673766,2.955316,8.671520,0.126039,-4.149692,-3.663352,-6.204439,9.312552,5.822542,5.167755,-1.635272,7.355146,-5.745482,-8.349817,-9.758541,4.055448,-0.566230,4.914310,-0.566268,1.765357,-7.603135,5.434529,-2.617999,3.043153,-4.885874,5.911148,-8.482197,1.263424,5.300295,-2.273121,5.220232,0.573637,-3.201640,-8.221180,-8.547713,9.278190,9.990984,1.182501,3.926959,-7.241247,6.675561,-9.527294,-4.845270,-5.933617,4.796925,-8.836169,-4.260861,4.084391,-3.358626,1.916895,4.802005,5.822500,4.429200,6.990665,9.928440,-1.760821,9.482852,-9.961035,8.533322,2.129844,8.857439,2.255927,-5.486751,-5.245943,-6.921534,9.920763,-2.585949,0.381295,2.539470,-0.510696,-6.483553,5.149885,0.610998,9.128266,-3.025483,4.552779,-5.471127,-7.092452,8.418079,2.152087,-5.975915,-3.090394,8.392267,5.782639,-7.910690,0.628182,-0.298918,-6.657106,-1.173168,-9.915518,-9.247052,-5.397248,6.285168,6.142584,9.876715,-6.292881,4.919562,-5.227709,-4.096665,4.245525,4.857302,2.059105,6.962173,4.411876,-9.383640,7.301840,-9.249656,0.182167,-8.818515,-6.267326,-8.679099,1.320560,8.500128,-5.952377,9.612205,-9.915799,9.617300,3.361851,9.857080,-7.071138,-0.246116,2.026305,-5.514963,-0.246005,9.757682,-0.931539,-0.806315,-6.122727,-1.624215,3.640024,-6.741038,-7.100082,-1.355883,7.172674,2.997991,5.141473,6.563774,-7.513886,0.114495,-5.752876,2.781361,-7.978917,-1.711333,-4.470288,-5.158841,0.070055,7.297275,-9.186074,2.262054,-8.457596,2.176044,-5.309884,-3.346653,-5.945796,-7.528380,-1.269133,-2.059535,7.787865,2.398195,9.423050,5.352214,6.777264,-4.765587,-7.178980,9.024137,-2.185951,-9.280867,6.315715,0.576834,1.615025,-1.255168,-6.517026,-4.942071,0.561734,0.794236,8.744496,8.355405,0.840876,-5.653235,8.167008,-3.291898,2.012769,3.441283,1.410994,-3.983137,-0.597095,5.617818,1.211732,-7.797272,2.413645,1.548146,-6.595505,6.748454,8.286179,-0.177336,7.306290,-0.855493,8.610193,3.104049,8.720246,9.611479,-9.401414,-9.352649,3.760424,2.177375,-4.105835,6.282235,4.274344,-1.368443,9.527131,-3.205499,-4.218510,5.644748,-8.283474,-0.418583,-9.800755,6.888346,-9.281859,9.779000,-3.336520,6.315739,5.466561,5.767356,6.427137,5.256079,-9.085243,-8.878346,7.220076,8.232241,-4.335965,9.819520,9.332061,-9.879242,-2.456352,0.146679,-7.526458,5.484970,-2.220108,-5.750368,-6.626029,-1.893970,2.404880,4.205870,-4.996891,-0.527803,9.491866,4.326132,-1.942607,-3.415026,3.997068,2.226626,-6.987717,-0.386083,-4.025926,6.970017,-9.905063,2.813335,-4.196786,-5.362962,9.376391,7.669980,-1.107123,-5.945404,-6.543799,5.276848,-7.876682,4.558197,3.875284,5.402301,1.596863,0.765991,-6.656579,2.406785,3.139372,8.981114,9.609029,6.180916,-3.762303,-8.672661,9.401243,-7.267265,1.133569,-9.065241,9.611811,-3.904427,-5.167694,7.888332,-8.870204,4.137554,-3.970093,4.868817,-5.418145,-9.193271,-0.237511,8.285471,-5.093440,1.081371,-3.634773,9.980434,-5.356794,-7.222494,1.664885,4.237340,-2.173219,7.096930,-9.004186,-4.722804,-4.962905,7.451727,-9.705476,-5.690353,-2.348861,-4.418064,2.568753,0.499630,9.457571,9.616827,9.073479,-2.609172,3.032864,-6.012711,-0.340854,-4.381732,5.999847,3.630479,8.570093,7.214228,-5.884389,-0.094120,8.939386,2.640191,4.226169,6.683583,0.597956,-4.885634,0.515216,-3.297527,-2.913495,-1.282963,-5.081415,6.693560,7.124670,-2.210968,-4.292487,-7.400095,-7.767260,-1.980054,-2.848354,-5.067291,0.020572,-5.581289,7.945343,6.397647,-2.329152,-7.993898,7.801020,-4.345448,-6.418096,-6.751727,9.016912,-6.111478,-9.708725,4.727789,-4.721674,1.971258,-9.160765,-9.246642,-2.297184,2.559520,-3.672459,-7.959289,1.236475,-5.576623,0.612743,-0.133147,3.013905,-6.879496,9.079560,-6.263707,7.867786,-3.291665,-0.362987,9.734646,-8.336692,3.954497,-7.317129,-1.975542,-3.673048,2.155354,-3.432399,-9.827848,-4.205293,5.409644,-9.758542,7.449966,3.750185,1.835209,0.920948,6.301312,-4.273894,-7.561482,-8.023414,-8.489799,6.856435,-4.537832,-3.828203,-4.177910,1.744359,-6.649547,6.880533,5.028850,4.388451,-1.359002,3.520819,-4.412215,-9.214719,7.245837,-9.255504,8.509397,7.458209,7.373576,-1.755369,2.352838,5.551481,1.246862,6.088810,-0.247834,-1.664816,0.880122,-8.413840,4.032287,-6.544920,8.838852,-9.802291,2.679445,-3.592785,3.079441,-3.300433,-5.477254,3.799039,-6.488710,-8.245399,8.675672,-7.186720,-9.458287,5.395304,8.175943,-5.249343,-9.014453,-4.575478,9.398725,-3.763955,1.171290,1.363413,-3.576672,-8.960411,4.306140,1.531745,5.457142,-2.284642,-5.020495,0.989228,2.841809,-3.718730,-7.137648,4.116426,1.240679,3.957574,-1.489181,-9.286368,8.214266,-7.248555,3.342903,8.965312,4.179774,0.909583,9.860539,4.188306,-3.866829,-5.693403,-9.129109,-0.146806,1.793440,9.562768,-6.488468,6.981789,-9.218261,5.044109,3.477478,-3.125430,-3.949209,9.104027,-6.172109,-5.908279,-8.937582,1.043068,0.016331,8.094135,7.596115,-7.718708,-8.959290,6.901519,6.725465,9.363779,-8.805533,6.336625,9.339301,-9.024703,-2.109145,-2.640578,-4.273989,9.721133,-5.131075,-2.112676,3.614782,3.348745,-6.997109,-4.776715,7.343329,2.339169,1.480880,-8.500491,3.830709,-2.862138,-9.663272,-7.227019,0.803416,-0.068975,-6.814759,5.916670,6.756700,-3.998068,-2.586701,-3.824549,-3.199390,0.283652,-2.339041,-9.649162,-0.074432,9.788857,6.461688,5.378247,-7.248440,-1.660236,4.031512,-4.536947,0.650370,-3.130762,-1.040194,7.051080,-6.456548,-7.734781,2.323886,-2.768944,-0.380627,-1.365129,-9.398025,-9.913502,1.862279,3.893929,-1.187952,1.443336,-1.829530,8.844315,-6.309470,3.123984,6.124219,-0.550819,-7.338163,1.497333,-9.701121,2.898883,6.190448,1.910293,-4.431993,7.127578,7.878399,-4.035290,9.171754,-4.560786,5.171339,-2.327980,7.636574,7.295696,-0.922283,-8.180175,-8.393783,6.648236,7.598167,-9.108435,6.228039,9.268346,-3.181370,0.293584,6.426604,-0.561936,0.120877,-1.008375,7.073171,3.547107,-4.459589,-0.115175,8.891195,-1.388596,8.350376,-6.704384,3.174107,4.639758,-8.410488,8.005649,-2.179954,-0.527694,-1.908870,-9.952683,-1.280775,4.061354,-0.316792,5.672544,5.090913,-3.960649,-3.376097,-6.175823,-2.460718,6.492436,-4.668937,2.612107,-2.790850,-8.795049,-9.612935,-8.450662,-6.335027,5.931887,-5.775502,-6.574407,-9.435816,-0.345966,-4.820119,-6.108757,-6.663340,2.362484,-5.464773,4.218370,-6.704517,-6.784316,-9.744086,1.992213,-1.122589,3.530919,4.486041,4.572747,6.208684,-0.957391,-1.169437,-2.681620,-6.392268,7.100256,-4.745827,-2.101685,-9.140006,9.846303,8.764770,-3.403748,5.312004,-3.515121,1.586725,0.993140,8.141706,-0.696178,-6.824719,-1.267034,-6.264803,-6.865681,-4.864814,7.304533,8.067117,-7.830277,3.310547,-3.450044,-8.415853,3.023760,-6.609766,-1.947876,-6.442919,7.028850,-5.034952,-5.862924,8.816862,1.389992,9.392086,5.357574,-3.954230,9.358497,-7.224463,-4.914357,4.711492,-9.601650,-3.181788,5.591919,-1.819173,-2.256388,7.017730,7.998091,4.127147,-3.534934,-5.186641,9.361277,8.728927,-4.779595,-0.729499,9.065746,2.897679,-7.110979,-9.115284,-8.426305,-3.234401,5.739939,3.036105,4.263192,-9.530139,9.473766,8.041760,0.850956,-5.791924,-7.218655,-3.670282,-1.556356,1.723512,-8.780714,-1.858739,-1.591345,1.135664,-7.876320,2.611156,1.376382,-7.665539,-7.157068,2.817126,-3.444455,5.149235,-4.902132,-2.428377,1.919775,2.194331,-1.697130,8.251991,6.689216,-1.946105,1.714766,7.340537,8.417571,-4.120650,2.797475,1.497106,4.905751,-5.986572,7.468095,-8.920615,-0.208200,-6.969998,9.485776,-9.474813,-7.091218,3.043952,-7.724292,-3.294478,-7.549988,3.186595,-7.624364,8.192976,6.274377,5.675552,9.568281,-4.403068,-5.667050,-4.255865,-8.351355,-7.904636,3.572383,-2.954171,-1.615817,-5.831094,9.623687,-4.860888,-9.265671,2.539429,2.325458,-2.889672,-7.332218,-9.345917,9.759828,2.507235,8.561606,-5.542726,1.572860,-2.539201,8.950054,-6.252543,-6.006099,-4.602533,-2.113199,9.976935,7.079679,-8.809703,-3.819245,-9.390125,4.815560,4.343640,0.741491,-6.893210,-5.175709,-4.260766,3.178869,1.447049,9.789228,-8.391074,5.310981,1.599049,-2.123492,4.981359,-5.493445,-9.525610,8.769627,6.096982,-6.383342,8.206426,-3.551647,-5.129133,-8.336092,-9.707335,-7.091175,6.696460,-2.256910,-3.277739,0.789958,8.590048,7.599463,1.699153,4.387138,4.347862,-2.491387,-4.721142,-9.704965,-7.734019,-7.881234,-1.424283,-9.643136,2.174275,-4.733473,2.630005,0.079420,2.919523,-6.438937,5.586184,1.146582,4.317786,9.691770,9.176232,0.181488,-0.305493,-4.599580,-3.704675,-6.685748,6.248718,7.760912,-1.039179,9.561030,3.152848,6.971965,9.021576,7.259992,-7.593570,-6.902542,-4.805082,-8.666929,-7.337026,0.760621,7.897486,-9.446464,-2.807887,5.256021,-3.312000,-6.963702,-1.269300,-7.376917,8.744944,3.969247,-6.663831,8.052203,2.499441,6.485985,-4.724891,-6.350913,-2.696857,-8.640895,-9.912654,-1.229344,-3.233619,-3.968383,-3.731323,-4.158637,-8.660695,0.888944,1.864562,2.573968,-7.788349,-9.099668,8.199085,-0.574813,2.433448,-6.752939,-5.620380,-2.736511,4.359268,-9.381932,2.595356,2.793957,-0.708769,-8.486933,0.110681,-3.540725,-4.259882,-3.617654,5.202503,-4.073413,7.667660,-2.026139,5.330884,-6.076773,3.421320,-2.294177,0.520313,-8.615145,-5.814934,-6.138206,-6.773577,-8.187911,2.711214,-5.796389,8.755868,-9.615695,1.954098,1.766389,7.206789,7.472020,-2.273511,-2.947469,-7.315682,5.765811,3.059528,-3.597850,-4.753953,1.368096,-1.424792,-6.227253,-0.236051,-1.442263,7.038175,-8.322889,-6.499474,9.579064,3.340846,-5.457805,-7.963029,-5.873483,6.470702,9.365604,3.999214,-0.103004,-6.825887,-1.182967,6.037826,-9.810771,-8.946740,0.423171,-4.714636,6.067290,-7.408201,1.396217,7.679379,9.298242,8.324326,-1.366941,1.886787,-1.358456,5.412296,-3.492494,4.760624,3.295169,0.700918,-9.919483,4.545306,8.477973,-8.274967,-8.784030,-4.087663,-7.547075,-0.833751,8.072649,8.896806,4.851044,-9.282778,8.791550,-7.131957,9.417786,-1.628326,7.752674,2.670324,4.359763,-4.534891,1.939571,0.864337,-9.092157,-7.046886,4.953510,0.390450,-7.916775,-7.741821,2.270263,-4.506858,-2.501924,0.795528,-1.360670,-0.175184,-9.537477,1.577291,-2.522233,0.651769,-2.385789,-8.037438,-7.975735,-1.716268,1.654670,-8.753738,1.019435,7.696531,2.480962,5.419557,6.458472,-4.862166,-8.019659,0.284984,-4.304569,2.317883,-9.568244,3.372283,7.168002,1.609551,-0.178419,-7.887464,-9.809398,-9.007178,-6.633094,6.251854,4.148716,7.188376,7.023548,-1.449609,4.886808,-5.429438,4.033782,-4.740009,4.514754,2.187374,-4.250978,7.805386,5.545962,-3.426836,3.716298,8.910834,2.826351,5.188484,4.344883,6.115984,3.188219,-9.930584,4.029904,-9.557104,-2.239708,-9.157673,7.040872,2.128794,2.745680,-7.770316,1.100774,-3.880932,-5.212465,0.305007,3.307324,-4.092172,-2.169563,-9.785772,-7.676360,-1.179185,-5.077393,6.529716,-9.499654,8.666863,-3.395503,4.153817,3.471499,8.149250,7.542528,-3.146700,0.481397,3.390143,7.875596,8.635008,-2.286329,5.290760,-9.123993,-4.950844,7.531464,8.414709,8.466573,-1.376179,-6.968472,-2.868380,-0.509558,-5.906513,-0.160403,-9.753173,0.473700,9.423412,2.782953,5.283367,6.076862,9.904260,1.608888,-7.043910,4.322084,0.646255,-5.365635,9.532783,-6.828201,-0.761928,2.595608,8.508559,-2.937483,7.215650,4.291780,-4.427726,-9.890939,1.268028,-3.780688,6.486017,-7.527613,2.993656,-1.869612,-8.089046,-2.783504,2.951981,3.783354,0.722584,0.723858,7.766797,3.164060,1.763454,3.970247,7.306422,2.447461,8.175575,6.371309,-5.691776,2.022425,0.980041,-4.471829,-2.431634,1.087362,4.597008,-8.780385,0.302241,-5.524696,2.551874,8.917270,8.839292,3.708677,1.335764,4.884556,2.477284,-0.604895,9.648242,5.941738,-3.721808,2.131605,-1.227337,-5.394195,3.762268,-9.972609,8.677446,7.219635,-4.228381,2.711252,4.349187,-4.031119,-5.049432,5.708516,6.994286,7.906518,7.404400,6.199207,-2.138757,0.637290,6.785302,-8.725238,-0.756524,6.372532,1.535702,-8.495700,-1.066312,3.498476,3.510361,-8.346753,3.589609,-7.812973,-0.663216,-7.494462,7.595379,-1.392071,-2.616226,7.209677,-5.823643,2.732002,-2.564363,-7.687496,-6.414402,8.646811,6.372022,-9.982722,3.687338,3.323309,9.271811,-1.825214,-9.519165,2.008029,9.915720,0.970646,9.489364,1.104906,-9.733840,-6.786699,2.590265,-7.557089,2.612690,-0.622368,4.681329,-4.404624,3.727205,6.544982,0.601512,-8.739827,-9.930898,-4.974059,5.495890,9.514165,-2.627954,-5.989054,5.043250,-3.974187,-4.389407,4.061702,-3.091034,-2.594998,-4.134008,5.525197,-1.040538,-8.378090,9.486093,-7.832388,2.078774,-1.022493,-0.297392,6.229459,5.697371,-2.112359,-7.386350,6.630200,-2.462498,2.061803,-6.468171,-2.001194,-0.756412,4.923675,-1.877187,-2.974302,9.773910,5.198245,-8.118513,7.116578,-4.555326,4.047406,2.318594,3.396144,-5.006423,-8.064652,-0.053149,3.668443,4.611023,-6.185261,-3.823052,9.408535,-2.472454,5.968264,-7.550697,-9.262787,7.503057,2.758837,4.125106,-6.629186,4.069433,-0.094783,9.348754,9.280729,-4.067409,-6.645078,-2.132682,-0.189362,-2.746699,0.556987,-8.866619,5.858904,1.619424,-1.038427,-5.380133,-2.957876,3.428005,6.667510,-2.051138,2.973763,-6.043432,-4.267881,-9.858873,5.198040,-7.161051,5.751940,0.440231,-6.392915,4.419620,3.507435,6.878272,-2.495976,-8.555110,-3.952369,-6.854203,6.147763,3.331793,2.065266,-4.331888,2.998290,-5.331949,0.712210,2.283362,-0.540887,-6.521193,-6.573330,-4.188049,-7.531701,-5.994475,9.400747,-0.508269,-1.018105,-9.438036,6.443263,-1.498674,-1.642329,0.058985,-6.418206,2.653402,-5.883938,-1.513591,-2.874604,7.994270,1.215058,1.912658,-5.963557,6.738371,6.399655,-6.291907,-2.619581,1.468341,0.039531,-7.479357,-7.664288,8.246656,5.212441,0.369253,-1.195360,-5.657308,3.864897,-5.359523,-4.301901,-6.260441,-3.554649,-9.486536,2.114855,6.339060,2.931729,1.978721,2.401604,-7.973438,-0.282512,-7.486140,-8.499679,0.108577,-2.064710,7.454977,3.446341,3.027566,-1.223749,0.383578,1.936240,6.174556,-4.870657,-8.266924,3.846011,0.127840,8.852212,-3.042837,-5.662457,7.864866,9.621509,3.179580,-8.494925,-6.195324,5.164850,-7.024593,-4.024238,0.082090,-4.582474,5.109823,-3.533169,-6.664826,-8.140509,1.698885,-8.404817,-3.727784,8.128304,-6.891836,-4.980741,-1.288146,-3.486904,-7.505279,-0.029870,-9.300457,-2.931056,-3.664919,-9.683515,-6.004478,8.345565,2.285253,-6.766303,-2.229693,-6.691670,0.836682,0.334119,-5.906123,-2.528481,4.481250,-8.909734,-2.376645,0.985275,4.847420,8.292810,-9.019780,5.721907,-7.672508,7.987469,2.511550,9.996111,-2.291769,-6.186800,5.241914,-9.497567,-0.993421,-3.739347,7.273848,8.543055,2.495725,-6.916106,-7.799674,7.675031,4.395350,9.459013,-7.163833,4.796881,1.070725,6.612608,-0.110356,7.762304,-5.708919,4.258406,0.206422,-3.119216,9.642883,6.924399,-5.344668,-2.782257,0.803973,-2.204288,1.675942,7.022908,-6.772206,5.030116,-0.287874,0.493335,-7.904555,-5.276441,2.730920,-6.170474,0.578859,-3.129609,-4.212077,8.943556,-3.958550,-2.864918,2.167484,7.572190,-9.351042,-6.556718,3.765194,-9.462027,1.528101,-8.728004,6.052550,0.451243,-9.006472,1.891435,2.143801,-1.720953,-6.095303,3.466055,-3.432465,8.989448,9.771655,4.938428,4.357091,-4.914352,-3.080065,-1.419660,6.552889,-9.319547,0.642591,-2.701554,-3.866446,6.753033,6.188658,-1.053461,3.268381,3.638750,-0.623302,0.437588,-2.283739,-5.217022,-5.222728,-6.772968,-6.116194,8.554979,-8.159514,-3.500642,5.125036,-0.319615,-8.918516,-7.579354,-4.598885,-6.546906,8.449861,3.264686,3.205880,-9.531406,-1.154677,7.132692,-3.285907,-2.500455,4.713657,3.023423,-3.603044,0.528248,9.092593,-7.965766,5.316284,-2.479196,9.589482,-4.251220,5.419786,-4.465508,-0.905414,-1.744655,4.137476,9.271504,-1.683128,6.054624,-2.189081,9.659737,-5.546485,-1.391639,9.751219,-5.886845,-1.986352,7.788014,-6.783191,4.302197,-6.942981,3.645608,-3.543545,-5.972393,6.074964,-4.794804,-0.709336,2.561502,1.147135,6.009044,-9.580709,3.354031,-7.889449,-0.008250,2.603199,1.382255,-9.511206,3.193137,-8.218920,8.920847,5.819947,7.881884,2.852557,-1.553889,-4.471973,1.566261,-3.167847,3.091921,-9.740272,3.157230,5.647904,9.970940,8.585360,3.540989,-6.708507,3.378652,-4.379361,5.597289,-1.864925,-2.253352,1.190873,1.325903,7.536675,2.129268,3.654669,0.715927,0.704992,-3.249485,7.051381,-6.753474,-1.236756,7.205801,7.683303,-2.448849,-9.626857,-5.767631,0.309115,7.346458,5.096372,-6.731671,9.601765,8.086657,-3.381837,3.850902,7.563005,9.752601,-8.367972,-1.529703], dtype = "float64")#candidate|2439|(2250,)|const|float64
call_2438 = relay.TupleGetItem(func_1610_call(relay.reshape(const_2439.astype('float64'), [15, 10, 15])), 2)
call_2440 = relay.TupleGetItem(func_1612_call(relay.reshape(const_2439.astype('float64'), [15, 10, 15])), 2)
func_1713_call = mod.get_global_var('func_1713')
func_1714_call = mutated_mod.get_global_var('func_1714')
call_2441 = relay.TupleGetItem(func_1713_call(), 1)
call_2442 = relay.TupleGetItem(func_1714_call(), 1)
output = relay.Tuple([call_2416,call_2438,const_2439,call_2441,])
output2 = relay.Tuple([call_2417,call_2440,const_2439,call_2442,])
func_2450 = relay.Function([], output)
mod['func_2450'] = func_2450
mod = relay.transform.InferType()(mod)
mutated_mod['func_2450'] = func_2450
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2450_call = mutated_mod.get_global_var('func_2450')
call_2451 = func_2450_call()
output = call_2451
func_2452 = relay.Function([], output)
mutated_mod['func_2452'] = func_2452
mutated_mod = relay.transform.InferType()(mutated_mod)
func_584_call = mod.get_global_var('func_584')
func_586_call = mutated_mod.get_global_var('func_586')
call_2582 = relay.TupleGetItem(func_584_call(), 0)
call_2583 = relay.TupleGetItem(func_586_call(), 0)
var_2596 = relay.var("var_2596", dtype = "int32", shape = (1, 16, 11))#candidate|2596|(1, 16, 11)|var|int32
bop_2597 = relay.not_equal(call_2582.astype('bool'), relay.reshape(var_2596.astype('bool'), relay.shape_of(call_2582))) # shape=(1, 16, 11)
bop_2600 = relay.not_equal(call_2583.astype('bool'), relay.reshape(var_2596.astype('bool'), relay.shape_of(call_2583))) # shape=(1, 16, 11)
output = bop_2597
output2 = bop_2600
func_2604 = relay.Function([var_2596,], output)
mod['func_2604'] = func_2604
mod = relay.transform.InferType()(mod)
mutated_mod['func_2604'] = func_2604
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2605 = relay.var("var_2605", dtype = "int32", shape = (1, 16, 11))#candidate|2605|(1, 16, 11)|var|int32
func_2604_call = mutated_mod.get_global_var('func_2604')
call_2606 = func_2604_call(var_2605)
output = call_2606
func_2607 = relay.Function([var_2605], output)
mutated_mod['func_2607'] = func_2607
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1651_call = mod.get_global_var('func_1651')
func_1653_call = mutated_mod.get_global_var('func_1653')
call_2609 = relay.TupleGetItem(func_1651_call(), 0)
call_2610 = relay.TupleGetItem(func_1653_call(), 0)
output = relay.Tuple([call_2609,])
output2 = relay.Tuple([call_2610,])
func_2614 = relay.Function([], output)
mod['func_2614'] = func_2614
mod = relay.transform.InferType()(mod)
output = func_2614()
func_2615 = relay.Function([], output)
mutated_mod['func_2615'] = func_2615
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1211_call = mod.get_global_var('func_1211')
func_1213_call = mutated_mod.get_global_var('func_1213')
call_2659 = func_1211_call()
call_2660 = func_1211_call()
func_1243_call = mod.get_global_var('func_1243')
func_1244_call = mutated_mod.get_global_var('func_1244')
call_2665 = relay.TupleGetItem(func_1243_call(), 1)
call_2666 = relay.TupleGetItem(func_1244_call(), 1)
func_1549_call = mod.get_global_var('func_1549')
func_1550_call = mutated_mod.get_global_var('func_1550')
call_2668 = relay.TupleGetItem(func_1549_call(), 0)
call_2669 = relay.TupleGetItem(func_1550_call(), 0)
func_1094_call = mod.get_global_var('func_1094')
func_1095_call = mutated_mod.get_global_var('func_1095')
call_2671 = relay.TupleGetItem(func_1094_call(), 0)
call_2672 = relay.TupleGetItem(func_1095_call(), 0)
func_747_call = mod.get_global_var('func_747')
func_748_call = mutated_mod.get_global_var('func_748')
call_2684 = relay.TupleGetItem(func_747_call(), 0)
call_2685 = relay.TupleGetItem(func_748_call(), 0)
func_1549_call = mod.get_global_var('func_1549')
func_1550_call = mutated_mod.get_global_var('func_1550')
call_2692 = relay.TupleGetItem(func_1549_call(), 1)
call_2693 = relay.TupleGetItem(func_1550_call(), 1)
func_2614_call = mod.get_global_var('func_2614')
func_2615_call = mutated_mod.get_global_var('func_2615')
call_2700 = relay.TupleGetItem(func_2614_call(), 0)
call_2701 = relay.TupleGetItem(func_2615_call(), 0)
func_621_call = mod.get_global_var('func_621')
func_623_call = mutated_mod.get_global_var('func_623')
call_2711 = relay.TupleGetItem(func_621_call(), 0)
call_2712 = relay.TupleGetItem(func_623_call(), 0)
output = relay.Tuple([call_2659,call_2665,call_2668,call_2671,call_2684,call_2692,call_2700,call_2711,])
output2 = relay.Tuple([call_2660,call_2666,call_2669,call_2672,call_2685,call_2693,call_2701,call_2712,])
func_2720 = relay.Function([], output)
mod['func_2720'] = func_2720
mod = relay.transform.InferType()(mod)
output = func_2720()
func_2721 = relay.Function([], output)
mutated_mod['func_2721'] = func_2721
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1211_call = mod.get_global_var('func_1211')
func_1213_call = mutated_mod.get_global_var('func_1213')
call_2726 = func_1211_call()
call_2727 = func_1211_call()
output = relay.Tuple([call_2726,])
output2 = relay.Tuple([call_2727,])
func_2728 = relay.Function([], output)
mod['func_2728'] = func_2728
mod = relay.transform.InferType()(mod)
mutated_mod['func_2728'] = func_2728
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2728_call = mutated_mod.get_global_var('func_2728')
call_2729 = func_2728_call()
output = call_2729
func_2730 = relay.Function([], output)
mutated_mod['func_2730'] = func_2730
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2057_call = mod.get_global_var('func_2057')
func_2059_call = mutated_mod.get_global_var('func_2059')
call_2824 = func_2057_call()
call_2825 = func_2057_call()
output = relay.Tuple([call_2824,])
output2 = relay.Tuple([call_2825,])
func_2835 = relay.Function([], output)
mod['func_2835'] = func_2835
mod = relay.transform.InferType()(mod)
mutated_mod['func_2835'] = func_2835
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2835_call = mutated_mod.get_global_var('func_2835')
call_2836 = func_2835_call()
output = call_2836
func_2837 = relay.Function([], output)
mutated_mod['func_2837'] = func_2837
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1094_call = mod.get_global_var('func_1094')
func_1095_call = mutated_mod.get_global_var('func_1095')
call_2887 = relay.TupleGetItem(func_1094_call(), 1)
call_2888 = relay.TupleGetItem(func_1095_call(), 1)
output = relay.Tuple([call_2887,])
output2 = relay.Tuple([call_2888,])
func_2894 = relay.Function([], output)
mod['func_2894'] = func_2894
mod = relay.transform.InferType()(mod)
output = func_2894()
func_2895 = relay.Function([], output)
mutated_mod['func_2895'] = func_2895
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2927 = relay.const([[[3.346541,7.739679,6.363584,-6.119422,1.546677,7.554185,3.468629,-9.337454,-8.194683,-0.439504,8.876567,-7.463910],[-0.237574,2.284109,5.014857,4.177324,2.774355,8.074393,2.924180,-3.014013,-1.403222,-7.029796,1.185449,5.703831],[-6.078073,-4.541884,7.501105,-4.609162,-9.467351,-2.824288,-1.277773,-7.565482,-2.996454,9.002370,7.365347,-5.647959],[2.333395,0.251389,6.796828,5.735521,-5.609277,-8.270826,-2.738975,0.503157,-3.380224,3.922201,6.835163,-9.651308],[2.432002,9.188517,5.244785,-7.275123,0.335948,1.126581,7.909958,-4.706996,-3.551654,6.923393,-5.283119,4.380438],[-6.248454,5.212636,-0.554966,0.085114,3.682461,-7.855277,-2.990627,-6.344784,-2.786601,1.190703,-2.487860,5.643656],[-7.885435,4.301912,-0.204746,1.407253,4.617646,-2.031443,-9.612659,-1.223981,8.919917,-8.446025,1.743923,3.507011],[-1.123833,8.571846,-0.612934,-9.167928,0.553803,6.483961,-6.303255,-8.672625,-4.930668,-2.488167,-6.404159,-8.456720],[2.212011,-7.270451,8.860333,0.183500,-0.776804,-9.773642,9.123997,9.078951,5.389015,-2.778272,1.677948,7.727101],[-0.781881,-8.026919,-3.320304,-0.872377,0.246353,1.498286,-3.889313,-0.158286,7.838285,3.204278,0.590836,-7.835752],[-4.180246,6.523948,5.816430,2.047228,-5.438303,2.735891,-9.697327,-6.602788,-6.793957,1.698920,-8.998857,8.363427],[-0.873905,4.691528,9.102531,-4.240258,-8.480699,9.115023,3.691923,1.884516,-4.047011,-9.455810,-7.189055,-7.719494],[-7.796185,1.309948,6.490026,2.094865,-6.203924,-1.755713,-3.295128,9.208004,-8.975310,-9.636878,6.623723,7.154205]]], dtype = "float64")#candidate|2927|(1, 13, 12)|const|float64
uop_2928 = relay.rsqrt(const_2927.astype('float64')) # shape=(1, 13, 12)
bop_2931 = relay.maximum(uop_2928.astype('uint64'), relay.reshape(const_2927.astype('uint64'), relay.shape_of(uop_2928))) # shape=(1, 13, 12)
output = bop_2931
output2 = bop_2931
func_2969 = relay.Function([], output)
mod['func_2969'] = func_2969
mod = relay.transform.InferType()(mod)
output = func_2969()
func_2970 = relay.Function([], output)
mutated_mod['func_2970'] = func_2970
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2450_call = mod.get_global_var('func_2450')
func_2452_call = mutated_mod.get_global_var('func_2452')
call_2977 = relay.TupleGetItem(func_2450_call(), 1)
call_2978 = relay.TupleGetItem(func_2452_call(), 1)
func_2894_call = mod.get_global_var('func_2894')
func_2895_call = mutated_mod.get_global_var('func_2895')
call_2984 = relay.TupleGetItem(func_2894_call(), 0)
call_2985 = relay.TupleGetItem(func_2895_call(), 0)
func_2113_call = mod.get_global_var('func_2113')
func_2114_call = mutated_mod.get_global_var('func_2114')
call_3003 = relay.TupleGetItem(func_2113_call(), 0)
call_3004 = relay.TupleGetItem(func_2114_call(), 0)
output = relay.Tuple([call_2977,call_2984,call_3003,])
output2 = relay.Tuple([call_2978,call_2985,call_3004,])
func_3006 = relay.Function([], output)
mod['func_3006'] = func_3006
mod = relay.transform.InferType()(mod)
mutated_mod['func_3006'] = func_3006
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3006_call = mutated_mod.get_global_var('func_3006')
call_3007 = func_3006_call()
output = call_3007
func_3008 = relay.Function([], output)
mutated_mod['func_3008'] = func_3008
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2969_call = mod.get_global_var('func_2969')
func_2970_call = mutated_mod.get_global_var('func_2970')
call_3068 = func_2969_call()
call_3069 = func_2969_call()
func_1814_call = mod.get_global_var('func_1814')
func_1816_call = mutated_mod.get_global_var('func_1816')
call_3071 = relay.TupleGetItem(func_1814_call(), 1)
call_3072 = relay.TupleGetItem(func_1816_call(), 1)
var_3077 = relay.var("var_3077", dtype = "int32", shape = (4, 16, 11))#candidate|3077|(4, 16, 11)|var|int32
bop_3078 = relay.power(call_3071.astype('float32'), var_3077.astype('float32')) # shape=(4, 16, 11)
bop_3081 = relay.power(call_3072.astype('float32'), var_3077.astype('float32')) # shape=(4, 16, 11)
uop_3084 = relay.log10(var_3077.astype('float64')) # shape=(4, 16, 11)
func_2969_call = mod.get_global_var('func_2969')
func_2970_call = mutated_mod.get_global_var('func_2970')
call_3093 = func_2969_call()
call_3094 = func_2969_call()
func_1800_call = mod.get_global_var('func_1800')
func_1801_call = mutated_mod.get_global_var('func_1801')
call_3132 = relay.TupleGetItem(func_1800_call(), 0)
call_3133 = relay.TupleGetItem(func_1801_call(), 0)
output = relay.Tuple([call_3068,bop_3078,uop_3084,call_3093,call_3132,])
output2 = relay.Tuple([call_3069,bop_3081,uop_3084,call_3094,call_3133,])
func_3143 = relay.Function([var_3077,], output)
mod['func_3143'] = func_3143
mod = relay.transform.InferType()(mod)
mutated_mod['func_3143'] = func_3143
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3144 = relay.var("var_3144", dtype = "int32", shape = (4, 16, 11))#candidate|3144|(4, 16, 11)|var|int32
func_3143_call = mutated_mod.get_global_var('func_3143')
call_3145 = func_3143_call(var_3144)
output = call_3145
func_3146 = relay.Function([var_3144], output)
mutated_mod['func_3146'] = func_3146
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1549_call = mod.get_global_var('func_1549')
func_1550_call = mutated_mod.get_global_var('func_1550')
call_3172 = relay.TupleGetItem(func_1549_call(), 4)
call_3173 = relay.TupleGetItem(func_1550_call(), 4)
func_1243_call = mod.get_global_var('func_1243')
func_1244_call = mutated_mod.get_global_var('func_1244')
call_3175 = relay.TupleGetItem(func_1243_call(), 1)
call_3176 = relay.TupleGetItem(func_1244_call(), 1)
output = relay.Tuple([call_3172,call_3175,])
output2 = relay.Tuple([call_3173,call_3176,])
func_3184 = relay.Function([], output)
mod['func_3184'] = func_3184
mod = relay.transform.InferType()(mod)
mutated_mod['func_3184'] = func_3184
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3184_call = mutated_mod.get_global_var('func_3184')
call_3185 = func_3184_call()
output = call_3185
func_3186 = relay.Function([], output)
mutated_mod['func_3186'] = func_3186
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3202 = relay.var("var_3202", dtype = "float64", shape = (7, 15, 10))#candidate|3202|(7, 15, 10)|var|float64
uop_3203 = relay.log(var_3202.astype('float64')) # shape=(7, 15, 10)
func_3006_call = mod.get_global_var('func_3006')
func_3008_call = mutated_mod.get_global_var('func_3008')
call_3209 = relay.TupleGetItem(func_3006_call(), 1)
call_3210 = relay.TupleGetItem(func_3008_call(), 1)
func_2728_call = mod.get_global_var('func_2728')
func_2730_call = mutated_mod.get_global_var('func_2730')
call_3224 = relay.TupleGetItem(func_2728_call(), 0)
call_3225 = relay.TupleGetItem(func_2730_call(), 0)
output = relay.Tuple([uop_3203,call_3209,call_3224,])
output2 = relay.Tuple([uop_3203,call_3210,call_3225,])
func_3228 = relay.Function([var_3202,], output)
mod['func_3228'] = func_3228
mod = relay.transform.InferType()(mod)
var_3229 = relay.var("var_3229", dtype = "float64", shape = (7, 15, 10))#candidate|3229|(7, 15, 10)|var|float64
output = func_3228(var_3229)
func_3230 = relay.Function([var_3229], output)
mutated_mod['func_3230'] = func_3230
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1713_call = mod.get_global_var('func_1713')
func_1714_call = mutated_mod.get_global_var('func_1714')
call_3255 = relay.TupleGetItem(func_1713_call(), 0)
call_3256 = relay.TupleGetItem(func_1714_call(), 0)
func_584_call = mod.get_global_var('func_584')
func_586_call = mutated_mod.get_global_var('func_586')
call_3257 = relay.TupleGetItem(func_584_call(), 0)
call_3258 = relay.TupleGetItem(func_586_call(), 0)
output = relay.Tuple([call_3255,call_3257,])
output2 = relay.Tuple([call_3256,call_3258,])
func_3262 = relay.Function([], output)
mod['func_3262'] = func_3262
mod = relay.transform.InferType()(mod)
mutated_mod['func_3262'] = func_3262
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3262_call = mutated_mod.get_global_var('func_3262')
call_3263 = func_3262_call()
output = call_3263
func_3264 = relay.Function([], output)
mutated_mod['func_3264'] = func_3264
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1549_call = mod.get_global_var('func_1549')
func_1550_call = mutated_mod.get_global_var('func_1550')
call_3304 = relay.TupleGetItem(func_1549_call(), 3)
call_3305 = relay.TupleGetItem(func_1550_call(), 3)
output = relay.Tuple([call_3304,])
output2 = relay.Tuple([call_3305,])
func_3307 = relay.Function([], output)
mod['func_3307'] = func_3307
mod = relay.transform.InferType()(mod)
mutated_mod['func_3307'] = func_3307
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3307_call = mutated_mod.get_global_var('func_3307')
call_3308 = func_3307_call()
output = call_3308
func_3309 = relay.Function([], output)
mutated_mod['func_3309'] = func_3309
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2720_call = mod.get_global_var('func_2720')
func_2721_call = mutated_mod.get_global_var('func_2721')
call_3321 = relay.TupleGetItem(func_2720_call(), 7)
call_3322 = relay.TupleGetItem(func_2721_call(), 7)
const_3345 = relay.const([[[-2,-5,10,3,1,-5,-9,1,-3,-7,-1],[4,-1,-6,8,10,10,-4,9,6,-7,3],[1,9,-8,-4,-9,6,1,-4,10,10,-1],[-10,2,-10,-6,5,6,3,10,-3,-10,-10],[3,-9,-10,-2,-5,-1,10,-6,-4,-6,-6],[-6,-10,7,10,-10,-3,-5,-10,-4,-1,2],[8,-8,2,3,-4,-6,10,4,-1,2,-3],[-9,-7,-8,9,8,1,-8,-1,-8,-3,-9],[8,-2,6,-4,-2,2,5,-8,3,2,3],[4,4,-8,8,8,9,-8,-6,3,-7,-7],[-8,-9,-2,-2,2,8,-10,10,4,-8,10],[7,8,3,-9,-8,-7,6,5,-4,-6,2],[9,-7,-2,5,9,-7,5,10,2,1,-4],[-1,-6,7,-7,9,-1,-8,-1,4,-6,7],[-2,-5,7,-8,-2,-10,-1,-2,6,-4,-10],[-7,-7,3,3,-7,10,-3,-8,8,7,-10]],[[-6,9,-6,8,-7,-8,-7,10,-2,-7,8],[1,-1,8,10,-10,-2,8,-2,-5,1,-5],[-4,-10,-9,3,9,3,-5,-9,1,-9,8],[1,4,-1,9,5,1,2,-2,-7,-8,-10],[3,6,-9,-5,4,7,1,-7,3,4,7],[6,-2,10,-3,-1,-2,-10,-5,5,2,9],[9,-4,8,-8,5,-6,-9,4,-9,-10,-5],[-1,5,10,-8,-1,-7,-3,4,-1,7,5],[-4,-8,8,-3,6,3,-9,-9,4,-8,-4],[7,2,6,-3,-7,-1,-1,3,-10,-9,-2],[-8,7,-2,2,-6,5,-6,1,-3,-8,3],[3,-5,-7,-8,3,2,7,-7,-10,-7,-2],[8,-2,-10,-5,-2,-9,3,-3,4,6,-8],[-10,9,9,-4,1,-2,3,5,-7,8,8],[-9,-10,-9,-9,-7,-3,8,6,-10,-6,-10],[-6,-8,-6,8,-6,4,-2,-4,9,9,-2]],[[3,2,5,-8,6,-1,-7,-1,-10,-2,6],[-7,-6,-2,10,3,-1,7,-3,-10,8,-5],[8,-10,6,-5,7,-3,-10,-9,10,-4,-6],[-7,-5,-10,-8,-8,3,-7,1,1,3,2],[-10,8,2,3,4,-9,-8,-1,-3,5,6],[-5,3,6,10,3,-10,10,-4,10,-4,6],[7,10,-4,-6,-8,-9,6,9,5,6,5],[-7,-10,9,-5,5,2,-4,2,-1,10,1],[5,-2,4,-6,-7,-9,10,-2,-5,-9,-4],[-7,2,5,8,-7,-6,3,-8,-10,-4,3],[-9,10,-6,2,1,-6,-7,-4,9,-8,-10],[-6,4,5,-8,-3,-7,-2,-4,-3,-6,-8],[2,-10,3,7,-10,6,-2,1,3,-7,-9],[-1,7,-7,-3,-8,9,7,7,-9,-8,1],[6,-7,8,-9,-5,7,4,-7,-1,3,4],[-3,-3,-7,7,-8,2,4,-1,4,-3,10]],[[-6,-6,3,-6,1,-7,2,-5,4,4,3],[5,-8,2,1,-1,-8,-6,8,7,1,-6],[-1,-4,6,-10,-5,-3,-5,6,-6,5,-6],[6,-2,3,-10,-10,10,6,3,7,3,3],[-6,6,-6,9,-3,-5,-9,-10,-7,-9,-4],[5,5,3,3,-7,-5,-2,-5,2,-5,5],[-5,-4,-3,1,10,-3,9,4,-2,-2,4],[-9,-4,-1,7,-6,8,9,3,-7,6,-9],[-7,-9,-3,-7,5,-10,-6,10,4,10,-6],[-3,6,5,1,-9,6,-7,-6,-6,10,-2],[6,10,9,-1,-6,5,6,8,-3,-8,-4],[6,1,5,-9,-8,8,-4,-7,-2,-1,8],[5,7,-2,7,-9,-10,-8,-2,1,-9,-7],[3,-9,-8,2,-8,-2,6,-1,2,7,-2],[8,-9,3,7,2,3,-5,-2,7,-5,-8],[-2,4,-10,-9,-4,-6,5,3,-1,-2,-8]],[[5,5,3,-10,-10,9,8,3,-2,4,1],[1,-1,-1,-7,1,1,6,7,5,8,-9],[5,-4,8,7,5,-3,2,-1,-5,3,-2],[9,8,-5,10,-3,-6,2,-4,5,-8,-8],[-2,-9,5,2,4,-5,5,-9,3,-10,10],[5,2,5,-8,-2,6,-9,7,8,-3,4],[-4,5,-6,8,-6,9,-5,-9,9,-5,-5],[4,6,-1,-7,-8,-7,-10,-7,-8,3,2],[2,-1,5,4,10,9,-1,6,-7,-1,-7],[-7,3,-9,3,-4,-3,3,-1,-7,6,9],[-8,9,7,-2,-3,1,4,-2,-1,9,-3],[1,1,7,6,9,8,3,-8,-2,-4,6],[-2,3,5,9,-8,2,-10,9,2,2,-5],[-7,-10,3,5,1,6,-3,8,6,2,-5],[4,8,3,-8,-7,-1,-8,-10,-2,10,-5],[-8,5,-10,2,9,1,-6,9,5,10,4]],[[8,1,-7,9,-6,-6,1,-5,-1,-10,2],[-9,9,9,-7,9,9,7,-3,-7,-3,9],[8,8,-8,4,-4,3,4,-5,6,-10,6],[-10,-6,-9,1,5,-1,1,-1,9,9,-1],[3,5,1,-6,-5,-7,5,-9,3,-8,-7],[4,-5,3,5,8,-1,-9,10,-1,-2,-5],[-8,3,-8,-8,1,3,4,-1,-2,-9,6],[9,-3,-1,1,-2,-10,-10,10,-5,9,9],[6,4,-1,-4,9,2,-4,-7,-9,-3,7],[-9,-3,-8,-4,8,6,-1,3,5,9,-5],[10,-7,4,10,-7,-8,5,3,-4,-3,-2],[-9,-10,-8,2,1,9,1,-1,-5,-9,-9],[1,-8,-6,7,-5,-3,-1,-7,8,2,-7],[-1,3,-9,10,-1,-3,-8,-9,-4,-1,3],[-10,4,-8,5,9,-8,-3,9,4,-6,8],[-5,-9,3,-8,2,7,-7,-2,4,8,8]],[[-6,5,-4,8,-7,10,2,7,-2,-7,7],[-5,6,-4,1,6,-8,9,3,5,10,5],[-9,-9,3,9,10,3,-3,-10,9,-4,-8],[9,10,-1,-7,2,1,4,-7,-6,-7,3],[-5,6,1,-9,3,-10,9,-5,8,-2,-7],[4,9,1,8,8,6,-5,6,-4,3,-3],[-5,-1,-6,-3,9,-8,-7,6,2,-9,10],[3,-10,-4,-5,7,7,-5,1,9,5,-8],[-10,-10,-8,1,4,3,-5,9,4,-9,2],[-8,-2,-2,-6,-1,-7,-9,9,3,5,7],[3,-9,-10,9,-2,6,6,5,8,-10,-7],[10,-10,9,-8,-9,-2,9,-7,-5,-7,-5],[9,-9,-5,2,10,8,-4,9,-3,5,5],[9,-2,2,-5,4,-6,1,-2,3,-4,3],[-10,-9,9,2,8,9,-6,-1,8,7,8],[7,-10,3,-3,-1,9,10,6,3,3,-5]],[[-2,2,-2,6,-6,4,-3,-9,3,3,-9],[-1,7,8,5,9,-10,9,-1,-3,-6,-2],[-6,-7,-8,-3,5,2,8,-2,-3,-2,3],[4,4,8,4,3,10,9,2,4,5,-9],[-6,-6,1,10,9,7,-1,7,4,7,10],[1,7,-1,-1,-5,-1,-4,9,6,7,-3],[-8,-4,-8,8,7,4,-5,8,7,-1,-4],[-3,-8,-1,4,-3,-4,-7,-8,-4,4,-8],[-3,5,10,8,-2,7,10,6,1,6,-4],[10,10,6,-10,-3,3,-2,-5,-4,-3,-8],[10,9,-1,7,-10,9,10,3,2,-4,-3],[7,-9,4,4,7,6,-5,10,6,10,-9],[-3,-2,-8,9,5,3,8,5,1,-6,-7],[4,5,-7,-7,7,9,-4,-6,-2,8,-4],[-3,8,3,1,-5,7,-6,6,1,1,1],[-10,-8,-7,-8,-5,-1,4,-9,6,-1,5]],[[-9,1,2,-3,7,1,6,6,-2,4,5],[9,-5,9,10,-3,3,-1,6,-10,-5,-10],[3,-4,8,10,6,-7,-6,6,8,-5,1],[-8,7,-2,10,-3,10,10,5,-1,-9,3],[5,-1,1,6,1,-1,-3,-1,4,10,3],[-2,-9,-1,-1,4,-8,-1,-1,10,-2,-10],[-1,1,-7,9,-10,8,4,-8,8,3,8],[-4,2,3,-3,10,-4,-1,-2,10,-3,-1],[-2,4,-2,-7,-2,3,4,-7,-7,-3,9],[-1,-6,3,3,-6,5,-4,-8,9,-1,3],[6,-2,-8,5,9,-6,-1,4,-5,9,-2],[-6,6,-2,8,2,-5,1,9,9,-4,-5],[-6,-8,-1,10,10,4,3,-2,-1,-9,9],[8,-5,-8,-5,-5,1,-3,-10,6,9,5],[7,-5,2,-5,-1,10,1,7,2,7,5],[8,5,5,-5,7,8,10,-5,4,7,4]],[[-2,4,-4,9,-4,-3,10,-2,8,7,-1],[-7,-2,-4,5,-7,-2,-4,5,-4,-10,-6],[4,-5,7,-8,1,-7,-8,-1,3,-3,10],[-9,-1,-4,9,1,-7,-6,2,-7,3,5],[-8,-8,4,-4,-9,9,-8,-10,10,10,10],[6,-2,-5,6,8,-6,-5,-8,-3,3,-4],[5,-8,7,-4,4,1,2,10,-7,2,-7],[-2,-5,9,-8,-9,-8,8,4,2,-4,3],[10,6,4,-9,-4,-5,9,-8,-8,10,5],[3,1,-7,-10,-3,-6,8,-6,10,-9,10],[8,4,9,3,-1,-3,-4,1,3,-4,10],[8,8,-7,-4,4,-7,9,2,9,-10,10],[-5,10,3,-6,6,1,3,-5,-5,10,-9],[7,4,-7,-8,-10,7,2,4,7,1,5],[5,10,9,3,10,-1,4,9,-4,9,-9],[-3,7,4,-7,-2,9,4,2,7,-7,-4]],[[-8,-7,4,-6,-6,-5,-9,1,-7,10,-4],[7,-4,-8,5,-2,-9,-5,-4,5,10,-3],[10,-4,-8,7,1,-10,10,-3,-1,10,-3],[-2,-8,5,8,6,1,-7,6,-10,7,1],[-7,-4,3,-8,-1,-3,9,6,7,5,3],[8,-7,-8,10,4,8,-8,4,-7,-8,3],[-10,5,10,-7,4,-2,-8,5,-2,7,-7],[-10,1,-7,8,4,-8,5,-9,-10,-2,1],[-5,-7,-5,8,9,6,-3,-7,-2,7,2],[-5,8,5,10,-1,-4,1,-3,3,4,2],[-2,-8,-3,-4,1,-7,7,-1,10,9,10],[-3,-10,7,-8,1,9,6,-6,-7,2,-8],[-8,5,10,-1,-5,-7,3,-8,4,-4,-1],[-5,3,-6,9,-5,2,4,3,2,10,-4],[3,5,-1,10,-1,3,-10,10,-2,4,-4],[-5,4,6,9,6,-2,-1,1,-7,8,-6]],[[-8,6,9,3,10,10,-5,7,-6,8,-5],[-3,10,-9,-1,-7,-1,-8,-4,-6,8,10],[4,-9,-4,10,-6,8,-4,-4,-3,-3,-3],[7,-1,4,8,-3,5,5,-7,-9,-10,8],[-3,9,5,-10,-3,8,9,1,7,-2,-4],[-10,-3,-5,-5,5,7,-3,5,1,-2,10],[-10,-3,-3,-1,-3,9,9,7,8,3,-7],[10,-2,10,9,-7,10,-9,-6,-1,1,-5],[3,6,7,7,-6,7,-7,3,-6,-8,-2],[-1,-5,-9,2,9,-9,7,4,9,-2,-1],[-3,6,7,-6,-10,9,-7,4,-2,5,7],[7,-7,-3,-3,9,-9,3,-10,4,6,-7],[-2,4,-1,-7,-2,-2,-1,9,9,7,-4],[5,1,-4,-3,-4,2,-10,9,-1,-2,-10],[-8,-6,-9,-9,5,-7,-3,7,-1,-4,-9],[6,-4,8,10,8,9,6,-6,10,-9,10]]], dtype = "int32")#candidate|3345|(12, 16, 11)|const|int32
bop_3346 = relay.maximum(call_3321.astype('float32'), const_3345.astype('float32')) # shape=(12, 16, 11)
bop_3349 = relay.maximum(call_3322.astype('float32'), const_3345.astype('float32')) # shape=(12, 16, 11)
func_2720_call = mod.get_global_var('func_2720')
func_2721_call = mutated_mod.get_global_var('func_2721')
call_3363 = relay.TupleGetItem(func_2720_call(), 3)
call_3364 = relay.TupleGetItem(func_2721_call(), 3)
output = relay.Tuple([bop_3346,call_3363,])
output2 = relay.Tuple([bop_3349,call_3364,])
func_3375 = relay.Function([], output)
mod['func_3375'] = func_3375
mod = relay.transform.InferType()(mod)
mutated_mod['func_3375'] = func_3375
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3375_call = mutated_mod.get_global_var('func_3375')
call_3376 = func_3375_call()
output = call_3376
func_3377 = relay.Function([], output)
mutated_mod['func_3377'] = func_3377
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1713_call = mod.get_global_var('func_1713')
func_1714_call = mutated_mod.get_global_var('func_1714')
call_3389 = relay.TupleGetItem(func_1713_call(), 0)
call_3390 = relay.TupleGetItem(func_1714_call(), 0)
func_1211_call = mod.get_global_var('func_1211')
func_1213_call = mutated_mod.get_global_var('func_1213')
call_3396 = func_1211_call()
call_3397 = func_1211_call()
output = relay.Tuple([call_3389,call_3396,])
output2 = relay.Tuple([call_3390,call_3397,])
func_3405 = relay.Function([], output)
mod['func_3405'] = func_3405
mod = relay.transform.InferType()(mod)
output = func_3405()
func_3406 = relay.Function([], output)
mutated_mod['func_3406'] = func_3406
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1094_call = mod.get_global_var('func_1094')
func_1095_call = mutated_mod.get_global_var('func_1095')
call_3416 = relay.TupleGetItem(func_1094_call(), 1)
call_3417 = relay.TupleGetItem(func_1095_call(), 1)
output = relay.Tuple([call_3416,])
output2 = relay.Tuple([call_3417,])
func_3424 = relay.Function([], output)
mod['func_3424'] = func_3424
mod = relay.transform.InferType()(mod)
output = func_3424()
func_3425 = relay.Function([], output)
mutated_mod['func_3425'] = func_3425
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3405_call = mod.get_global_var('func_3405')
func_3406_call = mutated_mod.get_global_var('func_3406')
call_3465 = relay.TupleGetItem(func_3405_call(), 0)
call_3466 = relay.TupleGetItem(func_3406_call(), 0)
output = call_3465
output2 = call_3466
func_3478 = relay.Function([], output)
mod['func_3478'] = func_3478
mod = relay.transform.InferType()(mod)
output = func_3478()
func_3479 = relay.Function([], output)
mutated_mod['func_3479'] = func_3479
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3480 = relay.var("var_3480", dtype = "float32", shape = (15, 10, 1))#candidate|3480|(15, 10, 1)|var|float32
uop_3481 = relay.erf(var_3480.astype('float32')) # shape=(15, 10, 1)
func_2720_call = mod.get_global_var('func_2720')
func_2721_call = mutated_mod.get_global_var('func_2721')
call_3495 = relay.TupleGetItem(func_2720_call(), 1)
call_3496 = relay.TupleGetItem(func_2721_call(), 1)
output = relay.Tuple([uop_3481,call_3495,])
output2 = relay.Tuple([uop_3481,call_3496,])
func_3499 = relay.Function([var_3480,], output)
mod['func_3499'] = func_3499
mod = relay.transform.InferType()(mod)
var_3500 = relay.var("var_3500", dtype = "float32", shape = (15, 10, 1))#candidate|3500|(15, 10, 1)|var|float32
output = func_3499(var_3500)
func_3501 = relay.Function([var_3500], output)
mutated_mod['func_3501'] = func_3501
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1094_call = mod.get_global_var('func_1094')
func_1095_call = mutated_mod.get_global_var('func_1095')
call_3604 = relay.TupleGetItem(func_1094_call(), 0)
call_3605 = relay.TupleGetItem(func_1095_call(), 0)
output = call_3604
output2 = call_3605
func_3623 = relay.Function([], output)
mod['func_3623'] = func_3623
mod = relay.transform.InferType()(mod)
output = func_3623()
func_3624 = relay.Function([], output)
mutated_mod['func_3624'] = func_3624
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3628 = relay.var("var_3628", dtype = "float64", shape = (15, 7, 6))#candidate|3628|(15, 7, 6)|var|float64
uop_3629 = relay.sqrt(var_3628.astype('float64')) # shape=(15, 7, 6)
output = relay.Tuple([uop_3629,])
output2 = relay.Tuple([uop_3629,])
func_3632 = relay.Function([var_3628,], output)
mod['func_3632'] = func_3632
mod = relay.transform.InferType()(mod)
var_3633 = relay.var("var_3633", dtype = "float64", shape = (15, 7, 6))#candidate|3633|(15, 7, 6)|var|float64
output = func_3632(var_3633)
func_3634 = relay.Function([var_3633], output)
mutated_mod['func_3634'] = func_3634
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1836_call = mod.get_global_var('func_1836')
func_1837_call = mutated_mod.get_global_var('func_1837')
call_3655 = func_1836_call()
call_3656 = func_1836_call()
output = relay.Tuple([call_3655,])
output2 = relay.Tuple([call_3656,])
func_3667 = relay.Function([], output)
mod['func_3667'] = func_3667
mod = relay.transform.InferType()(mod)
mutated_mod['func_3667'] = func_3667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3667_call = mutated_mod.get_global_var('func_3667')
call_3668 = func_3667_call()
output = call_3668
func_3669 = relay.Function([], output)
mutated_mod['func_3669'] = func_3669
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3682 = relay.var("var_3682", dtype = "float32", shape = (12, 4, 5))#candidate|3682|(12, 4, 5)|var|float32
uop_3683 = relay.exp(var_3682.astype('float32')) # shape=(12, 4, 5)
output = uop_3683
output2 = uop_3683
func_3696 = relay.Function([var_3682,], output)
mod['func_3696'] = func_3696
mod = relay.transform.InferType()(mod)
var_3697 = relay.var("var_3697", dtype = "float32", shape = (12, 4, 5))#candidate|3697|(12, 4, 5)|var|float32
output = func_3696(var_3697)
func_3698 = relay.Function([var_3697], output)
mutated_mod['func_3698'] = func_3698
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3307_call = mod.get_global_var('func_3307')
func_3309_call = mutated_mod.get_global_var('func_3309')
call_3721 = relay.TupleGetItem(func_3307_call(), 0)
call_3722 = relay.TupleGetItem(func_3309_call(), 0)
output = call_3721
output2 = call_3722
func_3729 = relay.Function([], output)
mod['func_3729'] = func_3729
mod = relay.transform.InferType()(mod)
output = func_3729()
func_3730 = relay.Function([], output)
mutated_mod['func_3730'] = func_3730
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3623_call = mod.get_global_var('func_3623')
func_3624_call = mutated_mod.get_global_var('func_3624')
call_3752 = func_3623_call()
call_3753 = func_3623_call()
output = call_3752
output2 = call_3753
func_3758 = relay.Function([], output)
mod['func_3758'] = func_3758
mod = relay.transform.InferType()(mod)
mutated_mod['func_3758'] = func_3758
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3758_call = mutated_mod.get_global_var('func_3758')
call_3759 = func_3758_call()
output = call_3759
func_3760 = relay.Function([], output)
mutated_mod['func_3760'] = func_3760
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3405_call = mod.get_global_var('func_3405')
func_3406_call = mutated_mod.get_global_var('func_3406')
call_3764 = relay.TupleGetItem(func_3405_call(), 0)
call_3765 = relay.TupleGetItem(func_3406_call(), 0)
func_1713_call = mod.get_global_var('func_1713')
func_1714_call = mutated_mod.get_global_var('func_1714')
call_3776 = relay.TupleGetItem(func_1713_call(), 0)
call_3777 = relay.TupleGetItem(func_1714_call(), 0)
output = relay.Tuple([call_3764,call_3776,])
output2 = relay.Tuple([call_3765,call_3777,])
func_3802 = relay.Function([], output)
mod['func_3802'] = func_3802
mod = relay.transform.InferType()(mod)
mutated_mod['func_3802'] = func_3802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3802_call = mutated_mod.get_global_var('func_3802')
call_3803 = func_3802_call()
output = call_3803
func_3804 = relay.Function([], output)
mutated_mod['func_3804'] = func_3804
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3623_call = mod.get_global_var('func_3623')
func_3624_call = mutated_mod.get_global_var('func_3624')
call_3856 = func_3623_call()
call_3857 = func_3623_call()
output = call_3856
output2 = call_3857
func_3879 = relay.Function([], output)
mod['func_3879'] = func_3879
mod = relay.transform.InferType()(mod)
mutated_mod['func_3879'] = func_3879
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3879_call = mutated_mod.get_global_var('func_3879')
call_3880 = func_3879_call()
output = call_3880
func_3881 = relay.Function([], output)
mutated_mod['func_3881'] = func_3881
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1339_call = mod.get_global_var('func_1339')
func_1340_call = mutated_mod.get_global_var('func_1340')
call_3884 = relay.TupleGetItem(func_1339_call(), 0)
call_3885 = relay.TupleGetItem(func_1340_call(), 0)
func_2720_call = mod.get_global_var('func_2720')
func_2721_call = mutated_mod.get_global_var('func_2721')
call_3904 = relay.TupleGetItem(func_2720_call(), 1)
call_3905 = relay.TupleGetItem(func_2721_call(), 1)
bop_3912 = relay.right_shift(call_3904.astype('int8'), relay.reshape(call_3884.astype('int8'), relay.shape_of(call_3904))) # shape=(1, 16, 11)
bop_3915 = relay.right_shift(call_3905.astype('int8'), relay.reshape(call_3885.astype('int8'), relay.shape_of(call_3905))) # shape=(1, 16, 11)
output = bop_3912
output2 = bop_3915
func_3941 = relay.Function([], output)
mod['func_3941'] = func_3941
mod = relay.transform.InferType()(mod)
output = func_3941()
func_3942 = relay.Function([], output)
mutated_mod['func_3942'] = func_3942
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3950 = relay.const([[[True,False,False,False,True,True,False,False,True,True,True,True,False]],[[False,True,True,False,False,True,True,True,True,False,True,True,True]],[[True,False,True,True,False,True,False,False,True,True,True,True,True]],[[False,False,True,True,False,True,False,False,True,False,True,False,False]],[[True,False,True,False,False,False,False,True,False,True,False,False,True]],[[True,True,True,False,True,True,True,False,True,True,True,True,True]]], dtype = "bool")#candidate|3950|(6, 1, 13)|const|bool
var_3951 = relay.var("var_3951", dtype = "bool", shape = (6, 13, 13))#candidate|3951|(6, 13, 13)|var|bool
bop_3952 = relay.logical_or(const_3950.astype('bool'), var_3951.astype('bool')) # shape=(6, 13, 13)
func_3424_call = mod.get_global_var('func_3424')
func_3425_call = mutated_mod.get_global_var('func_3425')
call_3958 = relay.TupleGetItem(func_3424_call(), 0)
call_3959 = relay.TupleGetItem(func_3425_call(), 0)
output = relay.Tuple([bop_3952,call_3958,])
output2 = relay.Tuple([bop_3952,call_3959,])
func_3961 = relay.Function([var_3951,], output)
mod['func_3961'] = func_3961
mod = relay.transform.InferType()(mod)
mutated_mod['func_3961'] = func_3961
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3962 = relay.var("var_3962", dtype = "bool", shape = (6, 13, 13))#candidate|3962|(6, 13, 13)|var|bool
func_3961_call = mutated_mod.get_global_var('func_3961')
call_3963 = func_3961_call(var_3962)
output = call_3963
func_3964 = relay.Function([var_3962], output)
mutated_mod['func_3964'] = func_3964
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3405_call = mod.get_global_var('func_3405')
func_3406_call = mutated_mod.get_global_var('func_3406')
call_3999 = relay.TupleGetItem(func_3405_call(), 0)
call_4000 = relay.TupleGetItem(func_3406_call(), 0)
var_4003 = relay.var("var_4003", dtype = "float64", shape = (14, 16, 11))#candidate|4003|(14, 16, 11)|var|float64
bop_4004 = relay.mod(call_3999.astype('float64'), relay.reshape(var_4003.astype('float64'), relay.shape_of(call_3999))) # shape=(14, 16, 11)
bop_4007 = relay.mod(call_4000.astype('float64'), relay.reshape(var_4003.astype('float64'), relay.shape_of(call_4000))) # shape=(14, 16, 11)
func_2728_call = mod.get_global_var('func_2728')
func_2730_call = mutated_mod.get_global_var('func_2730')
call_4013 = relay.TupleGetItem(func_2728_call(), 0)
call_4014 = relay.TupleGetItem(func_2730_call(), 0)
output = relay.Tuple([bop_4004,call_4013,])
output2 = relay.Tuple([bop_4007,call_4014,])
func_4035 = relay.Function([var_4003,], output)
mod['func_4035'] = func_4035
mod = relay.transform.InferType()(mod)
mutated_mod['func_4035'] = func_4035
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4036 = relay.var("var_4036", dtype = "float64", shape = (14, 16, 11))#candidate|4036|(14, 16, 11)|var|float64
func_4035_call = mutated_mod.get_global_var('func_4035')
call_4037 = func_4035_call(var_4036)
output = call_4037
func_4038 = relay.Function([var_4036], output)
mutated_mod['func_4038'] = func_4038
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3941_call = mod.get_global_var('func_3941')
func_3942_call = mutated_mod.get_global_var('func_3942')
call_4051 = func_3941_call()
call_4052 = func_3941_call()
func_2057_call = mod.get_global_var('func_2057')
func_2059_call = mutated_mod.get_global_var('func_2059')
call_4073 = func_2057_call()
call_4074 = func_2057_call()
func_2614_call = mod.get_global_var('func_2614')
func_2615_call = mutated_mod.get_global_var('func_2615')
call_4075 = relay.TupleGetItem(func_2614_call(), 0)
call_4076 = relay.TupleGetItem(func_2615_call(), 0)
bop_4078 = relay.less(call_4075.astype('bool'), relay.reshape(call_4073.astype('bool'), relay.shape_of(call_4075))) # shape=(1, 16, 11)
bop_4081 = relay.less(call_4076.astype('bool'), relay.reshape(call_4074.astype('bool'), relay.shape_of(call_4076))) # shape=(1, 16, 11)
func_1309_call = mod.get_global_var('func_1309')
func_1312_call = mutated_mod.get_global_var('func_1312')
const_4087 = relay.const([[7.440826,-5.241063,8.794906],[-8.758095,-7.221131,3.692861],[4.527622,4.665976,-7.949782],[-0.803145,3.535775,5.833744],[2.781568,-5.178276,-4.895947],[-0.735980,9.803165,-7.130513],[-0.144066,-9.899163,0.917159],[-1.998724,1.309495,4.822123],[0.747161,-5.464120,-1.816668],[4.465204,-3.576340,-6.882249],[9.476599,-8.608921,7.960331],[5.819187,3.491201,-1.063608],[-0.229629,-2.401617,8.372869],[4.683863,6.354548,0.333546],[9.012301,-1.310657,9.916341],[9.445453,3.640343,0.439986],[-9.192013,-0.313721,1.482827],[-6.448889,8.159684,9.602955],[-7.719872,-3.471134,-0.579505],[-0.905670,-0.211705,9.652867],[2.865450,-2.212987,-9.501352],[9.029849,-1.745839,-0.605301],[-1.642576,2.830832,9.029204],[-5.856942,-8.469617,-8.945879],[3.777360,-4.710413,0.314566],[1.474690,-5.034258,7.179799],[0.048392,0.544948,-1.293656],[7.560458,-3.427812,-9.622899],[5.190734,-2.190431,3.714832],[-9.332542,4.217932,-1.066209],[-0.030512,3.090689,0.870670],[1.109104,2.180410,7.136018],[1.102519,-3.256587,9.065743],[3.709915,-3.088593,-0.336796],[-4.034401,-3.258936,-6.320388],[-7.372054,-8.182203,7.252810],[-9.837708,-3.347328,-2.640040],[7.584853,0.981407,3.606978],[7.032120,5.369172,-2.268924],[4.513954,6.009479,-9.226372],[4.844730,-0.207264,-9.343219],[4.595288,1.141721,-5.627157],[2.478250,2.431131,-6.063344],[-5.171673,4.255185,3.741158],[4.239607,2.286046,-0.985470],[-2.371565,-3.613898,4.001139],[8.827572,-8.523166,-0.385742],[-5.199406,-4.319339,-5.442652],[-1.578634,-5.863944,6.766496],[-8.453977,2.144798,2.531382],[4.939648,9.641932,-3.915831],[3.693613,1.511698,-7.629185],[-2.575993,-4.241181,-6.601344],[6.817296,3.616393,0.578225],[9.748590,1.466734,5.419506],[-8.130387,5.878676,-3.136303],[-5.348744,4.082289,1.616705],[-1.388276,-6.007575,9.844235],[9.018588,6.083376,-5.738832],[6.176434,-3.676230,-8.398820],[1.107169,1.142463,-3.054701],[9.587810,7.476859,4.336048],[-9.419279,-4.086688,-9.512607],[-4.152247,3.140045,-6.472196],[-3.629231,8.934031,-4.097641],[-3.701289,8.903442,-1.881980],[0.508278,-4.820636,-2.671966],[-5.994587,4.258930,5.524972],[-2.872560,-6.829381,-0.963932],[7.633688,-6.692753,4.515533],[9.869983,9.167275,1.510352],[-8.736932,9.994398,2.459834],[-9.010140,-3.347442,5.503672],[0.486801,3.311753,8.489510],[-8.867513,-3.481884,4.532484],[-8.909804,1.050620,1.862740],[2.440654,-3.653770,4.688890],[2.184085,0.186283,9.915085],[4.164897,-0.904509,-1.390105],[-2.526203,-5.410189,-4.997831],[4.041620,-6.208876,-5.754670],[1.376041,-6.381409,-2.889821],[-4.352762,4.560395,6.183384],[-9.272830,-7.882593,-6.261421],[-1.976651,1.198726,6.755311],[-3.252370,-4.969900,-2.835340],[8.623411,4.687251,2.168600],[0.930536,9.499953,9.844603],[2.641071,1.014190,-8.878531],[8.940217,4.702744,9.712110]], dtype = "float64")#candidate|4087|(90, 3)|const|float64
call_4086 = relay.TupleGetItem(func_1309_call(relay.reshape(const_4087.astype('float64'), [1, 270])), 1)
call_4088 = relay.TupleGetItem(func_1312_call(relay.reshape(const_4087.astype('float64'), [1, 270])), 1)
func_916_call = mod.get_global_var('func_916')
func_918_call = mutated_mod.get_global_var('func_918')
call_4089 = relay.TupleGetItem(func_916_call(), 0)
call_4090 = relay.TupleGetItem(func_918_call(), 0)
output = relay.Tuple([call_4051,bop_4078,call_4086,const_4087,call_4089,])
output2 = relay.Tuple([call_4052,bop_4081,call_4088,const_4087,call_4090,])
func_4103 = relay.Function([], output)
mod['func_4103'] = func_4103
mod = relay.transform.InferType()(mod)
mutated_mod['func_4103'] = func_4103
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4103_call = mutated_mod.get_global_var('func_4103')
call_4104 = func_4103_call()
output = call_4104
func_4105 = relay.Function([], output)
mutated_mod['func_4105'] = func_4105
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1243_call = mod.get_global_var('func_1243')
func_1244_call = mutated_mod.get_global_var('func_1244')
call_4249 = relay.TupleGetItem(func_1243_call(), 0)
call_4250 = relay.TupleGetItem(func_1244_call(), 0)
output = call_4249
output2 = call_4250
func_4256 = relay.Function([], output)
mod['func_4256'] = func_4256
mod = relay.transform.InferType()(mod)
output = func_4256()
func_4257 = relay.Function([], output)
mutated_mod['func_4257'] = func_4257
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4364 = relay.var("var_4364", dtype = "int32", shape = (3, 16, 13))#candidate|4364|(3, 16, 13)|var|int32
var_4365 = relay.var("var_4365", dtype = "int32", shape = (3, 16, 13))#candidate|4365|(3, 16, 13)|var|int32
bop_4366 = relay.subtract(var_4364.astype('int32'), relay.reshape(var_4365.astype('int32'), relay.shape_of(var_4364))) # shape=(3, 16, 13)
uop_4378 = relay.tan(bop_4366.astype('float64')) # shape=(3, 16, 13)
func_3307_call = mod.get_global_var('func_3307')
func_3309_call = mutated_mod.get_global_var('func_3309')
call_4389 = relay.TupleGetItem(func_3307_call(), 0)
call_4390 = relay.TupleGetItem(func_3309_call(), 0)
bop_4394 = relay.logical_xor(uop_4378.astype('int16'), relay.reshape(bop_4366.astype('int16'), relay.shape_of(uop_4378))) # shape=(3, 16, 13)
output = relay.Tuple([call_4389,bop_4394,])
output2 = relay.Tuple([call_4390,bop_4394,])
func_4410 = relay.Function([var_4364,var_4365,], output)
mod['func_4410'] = func_4410
mod = relay.transform.InferType()(mod)
var_4411 = relay.var("var_4411", dtype = "int32", shape = (3, 16, 13))#candidate|4411|(3, 16, 13)|var|int32
var_4412 = relay.var("var_4412", dtype = "int32", shape = (3, 16, 13))#candidate|4412|(3, 16, 13)|var|int32
output = func_4410(var_4411,var_4412,)
func_4413 = relay.Function([var_4411,var_4412,], output)
mutated_mod['func_4413'] = func_4413
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3623_call = mod.get_global_var('func_3623')
func_3624_call = mutated_mod.get_global_var('func_3624')
call_4421 = func_3623_call()
call_4422 = func_3623_call()
output = call_4421
output2 = call_4422
func_4427 = relay.Function([], output)
mod['func_4427'] = func_4427
mod = relay.transform.InferType()(mod)
mutated_mod['func_4427'] = func_4427
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4427_call = mutated_mod.get_global_var('func_4427')
call_4428 = func_4427_call()
output = call_4428
func_4429 = relay.Function([], output)
mutated_mod['func_4429'] = func_4429
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4445 = relay.var("var_4445", dtype = "int16", shape = (9, 3, 16))#candidate|4445|(9, 3, 16)|var|int16
const_4446 = relay.const([[[-3,5,-9,-9,-10,-10,-10,10,-5,8,1,-7,-2,-2,5,-6],[5,6,-4,4,6,9,-2,-4,3,-9,6,3,-4,4,-6,-6],[2,4,10,10,-3,-6,9,2,-1,-6,-6,4,-5,9,-9,-2]],[[-10,-6,6,6,4,-4,9,-5,-8,7,2,-6,-2,-8,-2,3],[-1,-10,-7,-6,-8,4,-8,-10,-9,-2,10,8,3,-4,-10,-8],[-8,-8,7,-5,-4,-4,7,-9,-1,-7,-9,3,-5,-10,6,8]],[[6,-10,-9,10,4,-6,-10,-7,-7,1,3,9,-3,-5,-7,-6],[8,-4,8,10,9,-3,2,9,-8,5,-6,-1,5,1,-10,5],[-10,-5,-4,-2,-3,-10,-9,-4,9,8,8,-8,5,5,6,-3]],[[8,7,-3,2,8,-10,-3,1,6,9,9,6,-7,-9,-10,1],[10,-9,9,-10,-7,3,5,-2,-3,6,10,-6,-3,-10,-9,3],[9,4,-7,-6,-5,2,4,10,7,-1,-7,2,4,-5,2,-4]],[[-1,-10,3,1,-4,-5,-9,6,-2,-2,6,1,7,2,-5,2],[-5,4,-10,-3,2,-3,-6,6,7,-8,-4,-2,-8,-10,-3,1],[-7,-5,2,1,7,-6,4,2,1,-4,-3,-4,3,4,-10,-3]],[[9,-4,-7,6,1,-8,3,-8,-1,7,-9,5,-7,-7,1,4],[9,3,-4,-1,-9,2,8,-6,10,-5,6,-2,-8,-2,10,-8],[-5,-4,-10,-4,3,-2,-3,4,-4,4,-8,5,-7,4,2,-6]],[[-5,-5,-7,-3,-6,5,-3,-5,-7,-7,7,-10,6,4,8,-4],[-2,7,10,4,-4,5,6,-4,-1,10,2,4,6,7,-8,6],[-2,3,-2,7,-6,3,4,-6,8,-7,-8,8,9,-9,-6,10]],[[9,-9,-10,4,3,-7,5,-4,-9,-1,1,2,-5,-8,-5,7],[4,4,-4,-8,-6,-4,10,5,-10,-8,-8,-3,-1,-1,1,-10],[-6,7,-3,-9,-3,3,2,3,-4,2,-1,-2,8,-1,-3,-4]],[[-5,1,9,8,-4,3,9,-7,-9,3,-6,4,-2,2,6,-6],[-8,-1,-8,7,2,-7,8,-1,3,-6,-3,-10,5,-10,-10,4],[-3,3,3,-5,-3,-5,-4,-9,2,-5,-8,-10,1,-4,4,6]]], dtype = "int16")#candidate|4446|(9, 3, 16)|const|int16
bop_4447 = relay.not_equal(var_4445.astype('bool'), relay.reshape(const_4446.astype('bool'), relay.shape_of(var_4445))) # shape=(9, 3, 16)
func_3262_call = mod.get_global_var('func_3262')
func_3264_call = mutated_mod.get_global_var('func_3264')
call_4478 = relay.TupleGetItem(func_3262_call(), 0)
call_4479 = relay.TupleGetItem(func_3264_call(), 0)
output = relay.Tuple([bop_4447,call_4478,])
output2 = relay.Tuple([bop_4447,call_4479,])
func_4481 = relay.Function([var_4445,], output)
mod['func_4481'] = func_4481
mod = relay.transform.InferType()(mod)
var_4482 = relay.var("var_4482", dtype = "int16", shape = (9, 3, 16))#candidate|4482|(9, 3, 16)|var|int16
output = func_4481(var_4482)
func_4483 = relay.Function([var_4482], output)
mutated_mod['func_4483'] = func_4483
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2614_call = mod.get_global_var('func_2614')
func_2615_call = mutated_mod.get_global_var('func_2615')
call_4495 = relay.TupleGetItem(func_2614_call(), 0)
call_4496 = relay.TupleGetItem(func_2615_call(), 0)
func_3961_call = mod.get_global_var('func_3961')
func_3964_call = mutated_mod.get_global_var('func_3964')
const_4500 = relay.const([False,True,False,True,False,False,False,True,True,False,True,True,True,True,True,True,False,True,True,False,True,False,True,True,False,False,False,True,False,False,False,False,True,False,False,True,False,False,True,True,False,False,True,False,True,False,True,True,True,False,True,False,True,False,False,True,False,False,False,False,False,False,False,False,False,False,True,True,False,False,False,True,False,True,True,True,True,False,False,False,False,True,True,True,True,True,False,True,True,True,True,True,True,False,True,False,False,True,True,True,True,True,False,False,True,True,True,False,True,False,True,True,True,False,True,True,True,True,False,False,False,False,True,False,False,True,False,False,False,True,True,True,False,True,True,True,False,True,False,True,True,True,True,False,True,False,True,False,True,False,False,False,False,True,False,False,False,False,False,False,True,False,False,True,True,True,True,False,False,True,True,True,False,False,False,True,False,True,True,False,True,True,False,True,False,False,True,True,False,False,True,True,False,True,False,True,True,True,True,True,False,True,True,False,True,True,True,False,False,False,False,False,True,False,True,False,False,True,True,False,True,False,True,True,False,True,False,True,True,False,False,True,True,True,False,False,False,True,False,True,False,False,True,True,False,False,True,False,True,False,False,False,True,True,True,True,True,False,False,False,False,False,True,True,False,True,True,False,True,False,True,True,False,False,False,True,True,False,True,False,False,False,True,True,True,False,False,False,False,False,False,False,True,False,True,True,True,True,True,False,True,True,True,True,True,False,False,False,False,False,True,False,False,False,False,True,False,False,False,True,True,False,True,False,False,True,True,False,False,False,False,True,True,False,False,True,False,True,True,False,True,False,False,True,False,False,False,True,True,False,False,False,True,True,False,True,False,True,True,False,True,False,True,True,False,False,False,False,True,True,False,False,False,False,True,False,True,True,True,False,False,True,False,True,True,False,False,True,True,False,False,False,False,True,True,False,True,True,False,False,True,False,False,True,False,True,True,True,True,True,True,True,False,True,False,True,True,False,True,False,False,True,True,False,False,False,False,False,False,False,False,True,False,True,False,True,False,True,False,True,False,False,False,True,True,False,False,True,True,True,True,True,False,False,False,True,True,False,True,True,True,True,False,True,False,False,False,True,True,True,False,False,True,True,True,False,True,True,True,False,True,True,False,True,True,False,False,False,False,True,True,True,True,True,True,True,True,True,False,True,False,True,True,True,False,False,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,False,False,True,True,True,False,True,False,True,False,True,False,True,False,False,True,False,True,False,False,True,True,False,True,True,False,True,True,True,False,True,True,False,False,False,True,True,True,True,False,True,False,False,False,True,False,True,True,True,False,True,True,True,False,False,False,False,False,True,True,False,True,False,False,True,True,True,False,False,False,False,False,True,False,False,False,False,False,True,False,False,True,True,True,True,True,True,True,True,False,True,True,True,True,True,True,False,False,True,True,True,False,True,False,False,True,False,True,True,True,True,True,False,False,False,True,True,True,True,True,False,False,False,True,True,False,False,False,False,False,True,True,False,False,True,False,True,True,True,True,True,False,False,True,False,True,True,False,False,False,True,False,False,True,False,True,True,False,True,False,False,False,True,False,False,True,True,False,False,False,True,True,True,True,True,True,False,False,True,True,False,False,True,False,False,True,True,True,False,True,True,False,True,True,True,False,False,False,False,False,False,True,False,True,False,True,True,True,True,False,False,True,True,True,True,True,True,False,False,True,True,False,True,True,True,False,True,True,False,True,True,True,False,True,False,False,False,True,True,True,False,True,False,True,True,True,False,False,False,False,True,True,False,False,False,True,True,True,False,True,False,False,False,False,True,True,True,False,False,False,True,False,False,False,True,True,True,True,True,True,False,False,True,False,False,True,False,True,True,False,True,True,False,True,False,False,False,True,False,True,True,True,True,True,True,True,False,True,False,True,False,False,True,True,True,False,True,True,True,False,True,False,True,False,False,True,False,False,False,False,True,False,True,True,True,True,False,False,False,False,True,False,True,True,False,False,True,True,True,False,True,False,True,False,False,True,False,False,True,False,False,True,False,False,False,False,True,False,False,True,False,True,True,True,False,True,True,True,False,False,False,True,True,True,False,True,False,False,False,True,False,False,False,True,False,False,True,True,False,True,False,True,False,False,False,True,True,False,False,False,False,False,True,True,True,True,True,True,True,True,True,False,True,True,True,False,False,False,True,False,True,False,True,True,False,False,False,True,False,True,True,False,True,True,False,True,False,True,False,False,False,True,False,True,True,True,True,True,True,True,True,False,True,True,True,True,True,False,False,True,True,False,True,False,True,True,True,True,False,False,True,False,True,True,False,False,False,True,True,True,False,True,True], dtype = "bool")#candidate|4500|(1014,)|const|bool
call_4499 = relay.TupleGetItem(func_3961_call(relay.reshape(const_4500.astype('bool'), [6, 13, 13])), 0)
call_4501 = relay.TupleGetItem(func_3964_call(relay.reshape(const_4500.astype('bool'), [6, 13, 13])), 0)
uop_4505 = relay.sqrt(call_4499.astype('float32')) # shape=(6, 13, 13)
uop_4507 = relay.sqrt(call_4501.astype('float32')) # shape=(6, 13, 13)
bop_4510 = relay.left_shift(uop_4505.astype('uint32'), relay.reshape(call_4499.astype('uint32'), relay.shape_of(uop_4505))) # shape=(6, 13, 13)
bop_4513 = relay.left_shift(uop_4507.astype('uint32'), relay.reshape(call_4501.astype('uint32'), relay.shape_of(uop_4507))) # shape=(6, 13, 13)
bop_4514 = relay.greater_equal(uop_4505.astype('bool'), relay.reshape(bop_4510.astype('bool'), relay.shape_of(uop_4505))) # shape=(6, 13, 13)
bop_4517 = relay.greater_equal(uop_4507.astype('bool'), relay.reshape(bop_4513.astype('bool'), relay.shape_of(uop_4507))) # shape=(6, 13, 13)
output = relay.Tuple([call_4495,const_4500,bop_4514,])
output2 = relay.Tuple([call_4496,const_4500,bop_4517,])
func_4518 = relay.Function([], output)
mod['func_4518'] = func_4518
mod = relay.transform.InferType()(mod)
mutated_mod['func_4518'] = func_4518
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4518_call = mutated_mod.get_global_var('func_4518')
call_4519 = func_4518_call()
output = call_4519
func_4520 = relay.Function([], output)
mutated_mod['func_4520'] = func_4520
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1561_call = mod.get_global_var('func_1561')
func_1562_call = mutated_mod.get_global_var('func_1562')
call_4533 = relay.TupleGetItem(func_1561_call(), 0)
call_4534 = relay.TupleGetItem(func_1562_call(), 0)
output = relay.Tuple([call_4533,])
output2 = relay.Tuple([call_4534,])
func_4545 = relay.Function([], output)
mod['func_4545'] = func_4545
mod = relay.transform.InferType()(mod)
output = func_4545()
func_4546 = relay.Function([], output)
mutated_mod['func_4546'] = func_4546
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1800_call = mod.get_global_var('func_1800')
func_1801_call = mutated_mod.get_global_var('func_1801')
call_4570 = relay.TupleGetItem(func_1800_call(), 2)
call_4571 = relay.TupleGetItem(func_1801_call(), 2)
func_1610_call = mod.get_global_var('func_1610')
func_1612_call = mutated_mod.get_global_var('func_1612')
const_4574 = relay.const([-7.704947,7.393610,-9.660802,-4.758907,2.667698,6.350224,2.771021,-4.310507,8.963206,5.014337,-1.167213,5.714314,-9.094295,0.927062,5.393753,9.820430,4.096169,-2.325641,2.861334,0.145929,-1.993543,3.686693,-4.085881,7.941918,-1.331682,8.686193,9.884183,0.054291,6.973225,9.879217,-8.130642,-1.926836,-5.200511,-2.136356,7.099039,-3.335057,-1.235510,-5.005461,7.491751,6.427243,-6.317260,7.409015,8.303376,2.939821,7.929200,1.578016,-4.664660,2.893955,-7.944758,-7.738464,0.804972,5.056157,-4.286139,-0.128914,3.206571,7.686369,-4.893869,3.274642,6.479944,-0.755615,-3.719938,0.053823,-1.331147,9.454734,-4.615436,-3.020386,-1.632003,6.802521,2.260663,1.933672,9.668923,-5.735242,4.620563,0.912901,7.482448,5.547020,1.177334,-3.154596,4.178439,-8.804009,5.629316,1.177392,-8.594579,-6.754904,4.026321,2.316411,-8.915267,-2.175906,5.180978,-2.010739,-9.777223,-2.544184,-4.245804,9.326394,-9.484136,5.694797,-9.979623,-6.304726,-2.871326,0.446711,-6.346227,-3.992536,-8.182265,-3.100028,7.951049,-0.298854,-6.775733,2.785398,7.777456,-4.910620,6.781553,5.875553,-5.926596,-4.064338,-5.153172,-2.013502,-7.763264,5.520793,-0.589242,6.224912,1.502028,6.029658,-6.877830,-2.792501,6.724976,-5.983011,5.191194,-2.378520,1.948148,-0.227996,-0.357892,-3.149002,1.286763,-6.957738,9.163155,2.013867,5.759700,-4.246510,-1.155877,-1.346102,0.706168,-3.826480,-3.151487,-8.709212,7.742631,-0.865176,-8.143978,9.921781,-7.655698,5.627707,8.660267,-8.685749,6.587064,-2.221964,-7.741563,9.921984,7.472691,-6.346355,-9.198273,3.624206,7.739780,-5.083923,-9.236239,3.714340,8.088644,-7.822234,-4.209211,3.562624,3.750361,3.029290,-3.481040,9.240298,-1.632005,-9.011735,7.084123,-4.464290,2.273162,-2.518264,-0.024136,-2.132314,-8.276370,-0.074388,-7.173807,-4.700303,-7.966463,9.591099,-8.109253,-2.906218,-3.917050,0.360504,6.258443,-7.175498,-8.262656,-6.160972,-9.050555,-9.851105,-0.448117,7.465591,5.755803,-9.848195,0.053456,-8.425289,9.728103,-4.270520,8.001160,0.893187,-7.426361,0.909487,-2.532753,1.319573,6.210078,1.514581,4.843750,-8.566569,-7.964641,-7.668364,-9.384164,7.110466,5.931875,9.037814,7.586339,4.336033,-8.997006,0.859909,2.417978,9.175763,-5.575312,-0.375666,-4.128939,-0.016031,1.219831,-7.425892,-2.481462,1.452327,-2.709049,-7.971041,9.706844,1.747458,8.183249,-6.848380,9.574825,3.684683,-8.873030,2.947113,-1.236371,9.478213,-4.164143,8.068605,2.123818,3.575773,7.642943,-8.063199,8.462349,-0.271945,-7.870628,9.692893,-8.646888,9.650600,-5.593416,9.623744,4.875854,6.974000,4.354948,-9.262998,7.400531,-9.163476,2.925468,-2.432913,-6.656606,9.759674,8.827723,-5.269362,6.032761,1.545405,8.403865,-2.346038,7.034261,-0.742689,-5.131074,-8.099226,-4.966562,-3.959642,6.071194,1.444652,4.578728,-4.026450,6.012932,0.281786,-4.631416,0.468414,2.223480,-2.159524,4.228264,7.697636,9.897428,2.892594,-4.305551,-8.518499,-6.110291,9.220606,-8.892469,2.726154,4.258199,0.933677,0.733561,2.713845,-8.368471,4.689314,-2.307056,-6.932458,-3.238435,-5.250837,5.094505,-4.706586,-1.803874,-2.040961,4.757228,-3.372359,-9.197226,3.774236,-8.230877,-6.963407,-1.101779,-9.321228,6.154994,3.139812,9.994358,-2.153016,-9.207023,-8.646804,8.683934,1.363448,-8.388176,6.405419,5.341110,-0.472045,6.016859,6.051012,7.265224,-1.700387,-2.699538,-2.154536,5.422950,-3.875852,-0.088592,-5.161772,3.014500,-1.745891,-8.524259,-9.191777,-1.537555,0.158006,-9.792407,-4.856823,6.148335,-5.717696,-1.177278,3.424826,5.423004,8.815469,-8.344719,1.914127,6.851115,-2.991396,1.727260,-5.549583,1.059910,8.197486,-2.532999,3.772899,9.351173,6.404229,3.950471,1.026568,-4.246833,-6.209863,0.751629,1.474207,1.479885,-6.170564,-9.052307,8.668631,-0.248525,5.760811,-2.388509,-1.946330,-5.098804,8.861966,-9.376724,7.063611,1.719460,-8.107247,1.121842,4.151312,7.648006,-1.496714,-4.807646,4.897988,-9.523111,5.089264,-2.999099,-7.734030,6.151932,-4.101289,2.888936,1.277513,7.584220,7.205290,6.026087,9.903205,-1.771888,-0.199010,2.019942,5.658575,4.784030,-3.872358,4.606907,-5.404960,-4.175601,-2.562842,-1.966610,-7.445538,1.148368,2.697797,9.793363,7.785290,-6.541562,-4.183337,-8.893092,7.409982,1.668259,4.766078,7.763690,6.970929,-5.188646,8.880264,4.699237,-7.040290,5.772688,3.952589,-8.366428,-6.513297,6.260830,6.568906,-4.004762,2.806821,-8.364928,-6.214414,-7.117772,-7.558960,-0.377363,-6.560681,7.770512,-8.744725,-5.640489,5.550172,2.182110,6.662168,4.615772,-8.052414,3.444369,2.269986,-1.951559,5.380098,4.084351,6.377186,6.222335,-5.617025,-3.921963,0.098027,-3.560094,9.800350,-9.274105,-6.689406,3.941452,-7.107188,-7.498769,2.982186,3.825341,-4.879071,-1.991496,-0.282605,2.011278,-9.291665,-9.253551,-3.489713,5.014204,-3.807870,-3.174557,1.365209,6.290181,-2.129952,8.005131,-0.966905,7.808873,8.428599,-4.318657,7.434822,-3.457505,0.103837,-3.308818,-1.917862,0.826590,3.262071,0.426341,-2.198922,-8.051757,8.036011,-6.892900,7.365944,-0.164015,1.182922,-5.955048,-8.534099,-2.368055,2.610541,7.583104,-4.965558,-3.680836,-7.201616,-4.121524,-7.510129,3.523112,-8.570707,8.855182,8.883320,8.637224,-8.176601,-6.264414,-7.075410,-9.689262,5.437154,6.904716,0.368699,5.091745,-5.566494,-5.119396,7.586776,-5.622263,2.526354,9.422631,2.431593,0.504008,-2.744650,-0.666159,-6.247407,2.274679,-6.821715,-4.298355,-7.639652,4.725479,3.723549,-5.606443,7.288381,9.617725,-4.403341,-8.466569,7.347045,-5.262229,7.480189,-0.367367,0.209103,3.482092,5.293994,0.573903,1.171967,-3.202112,-8.014101,3.312036,9.901939,-4.869839,9.001925,2.379973,-4.903900,2.384784,-3.867342,-1.064095,1.505358,9.799290,1.960742,-9.171174,6.199573,8.514192,5.820984,9.461197,2.308085,1.572519,-4.411531,7.850594,-3.498251,-0.268805,2.343535,-0.014581,-1.597072,4.642791,0.582926,9.240180,-1.986859,-6.559277,3.134883,-0.806888,-3.333796,-1.677619,-4.138185,5.269933,-0.138408,0.683411,-2.706166,-5.108501,4.014675,-3.775150,4.103084,8.951661,2.012858,-8.027771,9.854473,3.818356,-9.051682,8.193671,-9.331881,1.849285,-3.179548,-0.412801,-1.742427,-9.311680,-9.599492,-0.750484,-1.471038,4.479660,-8.199212,-7.076646,-0.130940,9.067533,9.957955,9.055002,9.555825,-4.638907,0.098048,9.339053,8.863212,2.938588,-7.907282,-2.616193,7.715774,-4.511635,1.427189,7.474525,7.046503,-6.037544,5.195878,-1.768261,-3.329897,7.733174,4.140372,7.384832,-3.202990,-7.908111,7.857161,1.665633,-7.887534,-4.535792,-5.461457,0.654764,-0.798212,5.898429,1.852500,-4.570723,-8.041241,9.740601,-3.502221,6.591395,7.199199,-5.131714,-1.623631,8.437700,0.118532,-1.020300,6.286194,1.870239,2.263088,-7.888248,-2.219132,-9.532374,-9.607628,-6.097558,-7.211530,9.600208,2.107291,-6.878134,7.442851,-3.390798,8.162955,-6.924142,-2.315661,-3.152414,-6.492214,-0.809383,-1.179100,-6.631275,-3.525532,2.237234,-8.294338,-1.947336,-8.754853,4.732467,-7.355319,8.876304,-9.653790,5.134011,5.040290,-0.071212,-7.172016,9.055868,9.649686,1.863267,-9.696499,-1.819367,1.743573,8.155279,-3.929264,1.140855,-6.909319,-8.819785,-2.125834,-0.848672,-9.953942,-0.117873,2.962096,2.734293,4.520648,6.507820,3.844933,-5.737609,-4.320582,5.620519,-7.040262,-1.991414,3.677597,8.498615,-7.023598,3.410715,-6.737810,6.769887,7.247022,-4.953395,7.832579,8.604776,2.819715,4.960877,8.343505,-3.391423,6.630334,-6.401224,-7.636518,-6.347997,9.459322,3.458891,1.422526,-7.869006,5.938909,4.921245,-5.350991,3.291344,-0.759777,3.238462,3.184456,2.659132,-8.363814,4.115430,6.435034,2.792393,-8.475399,-4.356952,5.931296,-8.066072,6.940917,5.826199,-1.809914,-5.749008,9.854895,-0.461966,3.875648,7.093173,-8.113916,-8.649208,3.404389,-0.564732,-4.629942,5.587805,4.921118,-8.121595,-9.754221,-3.975683,1.760463,3.381808,2.796869,6.766263,-7.790500,-8.194598,-6.132285,-8.302422,4.307410,9.752199,-9.388040,2.844860,-6.741480,-2.018004,-2.377643,-8.108011,7.080224,-2.538114,7.825667,-8.698222,9.304006,-4.292732,0.526335,3.311541,-8.408401,3.535071,6.955179,-5.019768,-7.431348,-4.368771,-8.424014,-1.953504,9.351042,-9.013457,6.480017,-6.166145,9.592875,-5.698985,3.142391,9.566368,-7.522272,-7.158304,-3.046217,6.249164,-0.803153,4.478041,-7.203140,-2.515818,-8.071851,0.579831,4.655420,-4.847313,-1.415167,-5.943340,-4.860785,5.925303,-3.441492,5.473649,4.299234,2.984164,-0.239548,-2.173899,2.717691,-6.238502,8.440142,6.070615,2.343214,7.165893,-5.948240,-0.329339,-4.331039,1.016363,6.282245,1.838299,1.503779,-9.931001,4.489899,4.072145,-9.762666,-4.365264,1.760520,-2.598533,-6.207752,-0.174048,7.870144,3.270469,3.342884,-2.011665,5.666884,0.253266,7.989169,1.079408,-5.000532,8.749470,-3.950849,-2.260600,0.540840,9.521491,-3.334119,-8.619054,-2.954028,2.916118,-3.481466,-2.161569,8.560334,-4.452432,-8.854086,6.201021,-5.970897,3.366759,4.342728,-3.707903,-0.731516,-7.868189,-5.316422,5.287834,-8.627319,-2.184515,-5.950775,8.218189,-6.229027,-6.895251,2.502347,2.810693,-2.783197,-1.933595,-1.702092,-9.378395,-8.022673,7.671841,5.907268,1.702531,-9.919386,-7.936101,9.389780,-2.741078,-4.616657,-6.611433,6.168271,8.881117,-4.903175,8.753493,9.260291,5.100904,-8.087814,-7.592532,1.407798,5.927765,6.782599,1.170609,5.032440,-2.029419,-3.492904,5.406225,-4.461149,-3.265459,5.418710,9.266426,1.180709,-8.175683,3.459496,-9.952870,2.436994,-0.600410,0.830913,6.370203,-6.129649,-9.557979,-6.372158,-9.426434,1.038334,9.172797,-2.976087,2.893463,8.428495,5.675087,-4.187693,-2.900884,0.340563,-8.877312,-2.383824,-3.322368,5.010362,0.101524,-3.088837,-3.300374,-1.263001,-5.433100,-8.026776,8.382182,-9.949708,-8.712784,-2.727853,-9.240434,-3.067598,-4.041417,-7.773234,8.879946,-8.154486,7.064606,-4.901971,-4.086840,1.151010,9.808865,-9.170839,6.419149,2.314097,5.190237,-1.988965,5.738893,-5.882320,6.472290,-2.767927,-0.819902,-6.058906,-0.547500,3.744892,4.344826,0.595413,-8.900783,2.301335,-5.257705,1.145905,-0.418057,2.640742,-0.783068,-0.591264,-5.487855,-4.944783,8.235185,-2.584296,9.204574,-6.477450,-8.813551,6.378706,0.956202,7.256937,6.400248,5.698042,-7.389971,-2.784900,-9.085845,1.647425,4.348066,2.800852,-2.749485,-6.478854,0.724124,-2.962424,9.942430,-6.086239,4.025558,-9.241389,-7.720918,-7.034030,3.377391,-9.653592,7.159696,-0.330264,9.264574,7.891020,-7.460361,-5.174436,-5.573783,0.263900,-5.699630,-7.673222,9.435535,6.020053,-5.395298,1.327318,-1.755831,5.476074,1.481291,-1.214053,4.777249,-4.132839,-2.318461,5.595471,9.486021,-2.179550,-2.659973,1.394361,4.737913,-3.500814,0.615370,0.167772,1.936351,1.390983,1.725548,9.050857,-4.232574,-1.750436,-3.606557,5.111289,-7.357784,-2.939746,6.210109,6.295713,-9.501260,-4.047177,2.758039,6.563752,7.506508,1.120362,-9.111135,1.270179,-3.232436,1.612822,-9.671832,-3.707712,-1.711214,2.640126,5.029492,9.306170,-9.329763,7.540242,3.867112,-0.598719,5.486975,1.435084,7.372527,-3.485768,-8.774746,-7.613446,3.368038,-6.293457,9.134973,3.640758,-5.023035,-5.604320,-4.892288,-3.806920,-3.999515,-1.747017,-4.077851,-3.972132,2.100805,8.499708,-3.132206,-4.370389,-6.911535,-4.630524,-7.899303,-2.696178,-0.108231,-8.926992,-2.759171,-3.467523,8.705420,0.641054,6.250826,6.765728,-8.595947,-5.130566,6.252382,-1.733241,4.732591,3.911442,-5.958681,-7.052060,0.281425,-4.324480,4.280462,-9.261157,1.990339,-0.069662,0.919602,4.263746,-5.364983,9.801271,-0.011638,-8.891735,-9.038963,-0.861341,1.087443,1.689955,8.188381,1.845648,-6.136806,4.769578,1.525356,-1.940935,-4.904455,-2.113850,-7.573949,-5.219646,-3.790166,-4.158787,-7.658321,3.543524,-1.423549,-3.551816,-8.606326,-9.913599,-1.961762,2.194343,-9.430526,-1.648674,5.637486,3.289815,-7.912487,0.742095,-8.386443,6.425642,-1.616871,0.867070,4.535082,-7.334709,3.631951,6.689529,-1.951308,3.134198,-8.898869,3.718159,-3.804578,7.308898,-7.205107,6.675071,8.496405,-3.487905,-2.564786,-2.736263,9.116330,5.198104,2.255343,-8.648293,9.634259,-7.409572,-1.582174,-6.486632,9.231110,6.016279,-2.490033,-5.406059,-7.873168,7.324292,-4.870192,-9.390349,-8.687610,-7.654277,-1.877435,1.362750,-9.047929,-2.601405,-2.509885,-8.704444,-9.624530,1.138402,-9.860765,-0.396222,-6.071217,1.222461,2.737568,5.539317,-5.369008,-8.535986,-3.601689,-2.316721,6.284659,2.070174,1.443235,8.708974,-7.874370,-1.436177,0.107234,0.110770,-2.458298,-1.862833,-5.011834,0.381514,-8.385159,-1.049212,-4.293221,0.052447,3.397786,5.886997,-3.357972,-0.225296,1.671396,-6.813470,-1.593897,0.342619,-2.566535,-6.624166,2.890286,9.563167,4.620717,-4.369780,0.307723,-3.756184,7.922613,2.403580,-6.398137,-1.650461,1.554118,-3.904913,-8.208099,-5.421769,-2.465383,6.970468,6.116019,1.109323,-1.661548,-2.878290,1.255450,-9.763222,-4.735362,8.571107,-6.469395,-4.278129,-5.206156,3.135638,-7.925474,5.257948,-2.301500,-8.885662,-6.461219,7.799374,-0.505167,-6.729434,-2.491511,-8.403091,-2.365479,9.072873,7.542372,-8.996027,6.856399,-6.614944,-8.903373,-3.975308,-8.238882,-3.436686,-0.468819,-2.937073,2.998095,-9.592198,5.563901,-0.968514,-7.501248,-2.755790,1.814346,5.704016,-8.355625,0.022565,-8.708102,-1.325109,-1.735020,8.375752,-4.852374,1.741462,-9.595569,1.780380,-5.709190,4.695209,6.952125,-6.295601,1.450004,2.286218,5.880140,-3.833790,-7.797462,3.559385,1.887583,0.489887,-0.379312,7.535413,0.379577,-9.849800,-7.047544,-3.244464,-0.370635,-0.549484,3.551155,9.074761,-1.760316,-6.555200,-0.353813,-2.258124,-1.914334,6.155510,-8.131029,7.454520,1.364582,-5.579072,6.984519,-2.021132,6.107234,0.065100,-7.756221,-5.242372,-2.359807,-5.101820,-4.528938,-7.592714,-5.549952,9.282238,-2.744193,-9.068247,-0.241988,3.471948,-4.474121,9.413038,1.854946,-4.493368,-6.805268,-2.707655,4.208873,9.017050,4.195918,-5.431088,-7.167839,1.969626,-2.961126,-4.364734,-8.855979,-3.862049,1.456830,-1.623059,1.584882,5.052576,3.634278,-8.857360,-1.150492,-1.151552,-8.759136,8.563655,-7.159770,7.316078,7.487471,-1.224821,-8.944107,-3.957115,-1.552118,-4.028812,6.939260,7.725086,7.182869,7.864879,-3.268459,-7.760231,-9.882175,8.355512,-5.734816,5.412328,-6.375603,3.284756,-9.572195,9.590130,-7.939800,-3.497579,8.494824,1.393630,-2.010825,-1.232363,-9.012575,0.646355,-5.007053,-5.595006,7.812882,-3.954019,0.919604,-6.041625,3.245600,-7.803808,4.270002,0.099825,2.838811,-5.325652,5.631719,-1.706945,1.648663,-4.450907,-7.297948,-8.049443,-8.500636,8.050848,-5.867010,-7.804681,5.099859,3.037497,7.660387,4.573451,9.481610,-5.227945,-5.431516,3.795692,-8.301132,-0.032546,-7.701827,9.969988,0.877272,-1.221013,-2.471694,-6.987405,7.586854,3.018967,-7.463707,6.940120,-7.557944,2.893944,-2.665023,-5.738877,-9.943566,8.524864,3.884346,-6.550588,-6.423631,-5.656069,0.119961,-4.280836,-7.658122,2.575055,9.368861,2.807770,4.453580,-1.748341,3.416727,-8.153191,5.368498,-0.801434,-2.458665,-4.305444,6.722121,-0.122747,5.143269,1.330003,-1.637270,-3.145289,-4.208802,4.652921,-9.010221,5.204942,-3.580955,-7.567563,-8.322356,-4.376516,4.221526,9.731321,8.677590,6.432237,-7.789431,-0.619873,1.036887,-4.146557,-0.450261,6.787721,-2.863036,-6.762420,7.490482,-6.742935,8.259078,-4.693506,3.057440,2.952526,8.474446,7.980563,-8.795366,-1.939060,5.728783,7.229699,-1.713741,-1.219101,6.835313,1.957787,8.851017,-3.541381,-5.822922,8.425893,-6.205871,-0.985490,2.736756,-5.926398,-9.078129,-1.495988,0.564905,2.397359,-5.648038,-5.568525,1.912490,-6.080753,-1.557881,4.004466,-3.345777,-9.026357,-2.433102,-6.225086,9.635790,8.544516,-6.619601,6.469160,7.092190,3.954277,-2.323658,8.947227,-4.468421,7.477915,9.798645,3.671465,6.469505,-2.423171,1.814903,-7.106688,1.364059,-0.115410,5.335184,-0.814712,-7.225284,-1.797881,5.853687,-3.287858,-6.827703,-0.110050,3.503963,3.753495,-6.162078,-0.535368,-4.353933,-7.937366,-2.479629,0.213576,-4.039508,-7.589875,-0.577780,3.659235,-2.858726,9.775857,3.718248,-8.308714,3.435199,-8.392378,-4.830698,4.046101,1.718666,-0.893871,-8.033267,5.650330,8.918617,-0.980036,-8.182282,-4.462380,2.852683,8.877947,0.706732,6.738006,0.555456,-5.865310,-2.874677,9.213437,3.035280,6.640687,7.813706,-2.465823,-3.387728,-4.448813,4.167768,-7.795562,-4.464522,4.846564,1.030845,8.812447,-7.374853,-9.618313,1.443295,-4.300540,-0.147283,8.095361,-9.616957,-6.619404,-1.229418,-0.637906,2.977775,-5.291021,-6.673040,-4.633249,9.151383,9.008504,0.303105,-4.473040,9.611159,-3.552742,7.254292,0.358003,2.273952,-4.159276,7.587704,7.700957,0.247021,-2.696300,-2.205499,-0.468845,-4.046222,8.210417,8.300516,8.849766,7.605403,-5.983868,5.761031,-7.433096,-7.861131,-2.739550,2.673452,-6.971919,3.269804,3.673115,4.129910,4.956499,4.046587,-7.994816,4.884854,6.025982,4.725733,5.307951,5.702119,0.309002,-6.922512,1.182277,-0.234815,2.458952,8.617287,6.216873,-0.180283,-2.797612,1.411478,-5.857237,-7.002627,2.161526,-4.878286,-1.855660,2.365387,3.954364,1.650480,1.820622,-3.218317,-3.741773,9.340123,9.181342,-7.483193,9.459563,-3.449685,-4.122469,1.655485,-0.737792,-3.199160,-5.049845,-6.126141,-7.433455,-5.206095,4.348067,-0.164391,-1.095107,1.568725,5.557969,-8.115468,-0.268924,-7.517643,0.476394,-0.235575,4.005916,4.527747,-2.038898,2.925977,8.970132,0.811748,8.170012,-2.950996,0.123309,7.603744,-3.049333,-2.583047,-6.422652,8.639182,-8.495819,0.276854,1.993611,8.132001,-0.682865,-9.394963,3.103448,1.294935,0.989599,-7.978952,1.876139,5.101925,7.524843,-8.045524,-2.936324,-1.974179,-6.840879,6.675300,-0.369097,5.617077,9.714301,-2.462993,2.068139,4.938121,-0.432302,-4.379574,6.286023,5.696960,4.467880,-9.693288,9.455356,-2.964656,-4.494707,9.126144,1.560351,-4.702999,-2.727824,6.956942,-9.857847,-9.963250,-0.131650,-8.709345,-1.270248,5.902215,-1.567903,-2.236683,-2.677906,8.955257,-2.289935,2.646611,4.815549,-0.222674,-2.791426,-3.237045,7.505961,5.774823,0.619927,6.304559,9.671967,5.627085,3.987183,-5.328645,-4.529808,-7.600135,-3.983796,-5.883505,5.930696,-0.770548,-1.014283,-5.636127,2.175247,-3.486008,-6.496625,9.592624,-6.669308,7.368983,-0.525237,4.947404,1.937917,6.918193,7.781733,8.613285,-8.110888,-6.854835,-4.886068,-8.622154,4.106288,-2.067788,6.912223,3.479990,-6.965841,5.971381,-8.934548,-8.698063,-9.084089,-5.147979,3.332866,7.321147,4.143791,4.302097,-3.662259,2.505284,-1.160952,2.404617,1.359541,8.078374,1.907504,-5.161034,9.279124,6.299180,-8.717683,7.605993,-5.185405,-0.285141,-5.318434,6.158925,3.860393,-7.056174,6.765467,7.434041,2.884467,-0.123370,5.943892,-0.681982,9.888886,4.800343,0.132030,-5.085129,2.657600,9.765954,-6.647053,-7.647897,-8.388874,3.635458,5.713130,-1.730704,0.141460,3.836699,-6.650029,5.266359,-3.798711,1.862732,2.051084,1.382765,-7.728391,-6.542442,4.494775,1.907865,-2.091454,8.160048,6.176058,-9.559662,7.280135,-8.317847,8.658740,3.520838,-9.989936,-6.823705,-0.626211,-4.401962,-2.998603,0.694581,7.709029,5.793518,0.654222,7.438319,6.530962,4.102035,-4.625216,-8.760656,4.221005,0.212847,-1.309753,0.506050,0.687942,-1.536053,5.923199,1.822163,-0.946644,-8.020811,-6.432527,-3.988529,0.163735,-9.802829,4.917917,3.199956,-6.854642,-9.720066,-0.723148,-5.409623,5.117670,-3.889614,-2.888866,-3.183344,-3.869466,0.956620,-9.558921,-8.675280,9.185025,4.556756,8.412689,-8.204097,1.845771,4.808078,-0.065592,4.843111,-7.259626,-5.923526,-5.407270,4.218570,6.281781,9.280610,-2.446277,5.628286,-0.878477,3.626176,-2.426191,9.698677,-3.698820,3.311910,-0.795544,6.779752,-9.838503,-2.660680,-9.510173,-2.197227,-4.862304,6.245555,9.619505,-0.533616,-1.757450,-9.006910,1.152689,-1.622443,-4.104412,1.796401,2.792800,8.371855,-1.677940,-1.908845,1.053428,3.195131,-0.981232,-7.750983,5.321466,8.927620,-0.945571,-4.478378,1.450858,-4.864899,1.493544,8.797249,-8.481296,-9.244990,-0.658966,6.807759,1.464224,6.035009,1.764624,-1.386826,-3.906515,-9.493406,5.973453,3.613033,-4.265074,-1.861557,1.504197,-3.904968,-6.741896,-3.798056,3.809603,-2.161500,-6.513283,-4.914197,5.454336,4.203875,-9.422695,4.701728,-1.590176,-1.609798,-3.779492,-2.363345,-7.264634,3.274461,-8.163172,7.039179,2.686049,-2.368926,6.530749,9.151882,0.759750,5.960944,7.424285,5.974541,9.727459,-0.794210,-4.872026,7.342302,9.746089,1.440631,-9.745337,7.361482,-2.194731,-9.199114,-2.566379,6.212452,-8.849190,3.632058,8.941934,6.091113,-1.997172,-0.190362,5.358472,-9.086911,-9.108727,-4.926304,-2.634058,-9.887545,4.370407,3.297359,-8.737364,-3.709593,8.885093,-8.949908,-8.359149,5.113102,6.303794,-8.435997,8.488107,5.821166,-6.389528,-0.685628,2.613213,-6.321516,1.604856,-6.556409,-2.121119,-8.310040,-6.844271,-2.028171,6.259848,-3.834631,5.644806,3.075452,6.418568,-8.366453,-3.441878,-2.980781,8.000070,-8.837278,-0.572842,-8.759216,5.944409,-5.242021,-5.923696,2.839830,-7.444938,-6.173538,-4.844117,-5.061280,8.014634,7.312432,-9.049909,1.357286,-0.235298,-0.384530,0.310218,3.636336,-5.117657,-0.927432,-6.886352,-3.735288,3.813629,-5.906722,-1.521689,9.867438,3.123707,2.888726,5.332926,8.628524,-5.355231,-8.042373,7.954779,7.576576,-7.532797,-8.247725,0.826475,8.934199,5.895714,-4.773597,7.073225,5.384008,-1.859805,-0.798360,-7.349678,-0.851880,3.473790,-3.723780,-5.410526,-2.467738,7.527595,-5.088410,0.642317,-3.306566,2.062508,-0.986857,-6.336643,-5.944200,-8.273276,-1.749006,-3.285245,-0.044463,-0.716279,-7.653361,-5.978313,6.700393,3.823731,-3.034177,1.533899,-5.564567,3.679331,7.500850,-1.925416,-3.060352,-1.619322,5.628596,5.492345,5.243754,-5.454652,3.766802,-6.900402,6.492449,-4.513013,1.395956,-5.322106,-4.360168,-5.731978,4.849871,4.923827,-8.176833,5.156115,8.615512,4.388406,-5.599920,-9.350556,-0.577784,-1.807905,5.621499,5.457444,-7.477187,-5.384307,4.862876,6.153695,7.101588,-2.099325,-6.137467,-8.270600,1.655786,-0.766776,2.082054,5.232709,-6.437147,3.848311,-6.617026,-3.506304,-7.217296,3.607860,4.827868,4.254074,-3.206762,-5.500340,0.052677,-8.085232,-6.316494,-6.385801,7.505507,4.287363,9.880260,1.272036,1.199317,-4.816772,-0.065155,1.488398,-4.681221,9.101830], dtype = "float64")#candidate|4574|(2250,)|const|float64
call_4573 = relay.TupleGetItem(func_1610_call(relay.reshape(const_4574.astype('float64'), [15, 10, 15])), 0)
call_4575 = relay.TupleGetItem(func_1612_call(relay.reshape(const_4574.astype('float64'), [15, 10, 15])), 0)
func_964_call = mod.get_global_var('func_964')
func_966_call = mutated_mod.get_global_var('func_966')
call_4577 = func_964_call()
call_4578 = func_964_call()
uop_4581 = relay.cos(call_4570.astype('float64')) # shape=(1, 16, 11)
uop_4583 = relay.cos(call_4571.astype('float64')) # shape=(1, 16, 11)
func_3228_call = mod.get_global_var('func_3228')
func_3230_call = mutated_mod.get_global_var('func_3230')
const_4594 = relay.const([3.836671,-8.109694,-9.755943,-9.989821,-1.467920,-2.998130,9.921521,-6.585873,5.537298,0.219056,-5.984792,0.993231,6.722366,9.948610,5.750311,5.186421,2.067184,-6.784801,9.300500,5.983162,-3.183920,-9.944682,2.593034,-8.034129,1.038856,0.532354,3.125586,-7.526835,-3.491164,9.968425,-4.526395,-8.465101,-4.165272,4.340125,1.902508,2.557344,0.420269,0.044729,-9.671434,1.280639,-7.209599,-2.335643,-2.881550,-5.382355,-7.092250,-5.393439,-6.680337,-2.186634,6.776868,-1.380826,-1.039519,-5.012825,0.041800,-3.830136,-0.070433,-3.921052,7.846787,-5.743763,5.852336,-8.152433,-8.532057,-9.829150,3.543104,-8.135725,0.675312,4.491477,-5.064386,4.442251,6.438865,-4.235737,7.607032,-3.911408,9.901851,-2.343588,-0.750774,-6.358811,2.027670,6.839244,2.974283,7.472788,3.161189,1.596845,2.284079,7.488796,-6.516757,-5.777129,-5.970749,-8.692929,5.231472,-1.509749,7.287682,-1.113339,-0.670987,0.978848,4.739168,-3.410616,2.268030,7.953048,-1.222380,-1.705770,-4.664155,-1.244850,6.215581,-9.675899,-5.046403,-8.386526,6.940838,-7.838548,1.630248,1.058754,1.449135,1.992462,4.918067,3.152829,1.407139,8.232948,-6.455150,8.881341,-3.476578,-4.713801,-3.083130,6.667256,3.171022,4.852341,9.570848,-0.940136,-2.630703,-1.114537,-6.710846,1.929960,2.181516,8.007592,3.834133,7.770263,-5.783579,-2.498567,7.094000,-8.392597,3.445523,2.983824,-5.147608,7.123626,9.671147,4.467318,7.870752,9.234204,1.561427,-4.965574,4.507359,-7.885416,8.563233,8.518484,-5.944105,-7.795294,0.164985,3.519388,9.705551,2.752679,-0.328614,-4.727619,1.360685,-4.887301,-0.474462,6.104172,-6.349571,5.244558,-0.627067,-2.621843,-6.931480,8.610159,-2.160582,6.699046,5.745046,-7.440490,8.897898,-5.596072,3.337148,4.438038,4.051708,3.582544,0.386113,-1.451914,5.363983,-5.719120,1.182175,-6.853957,-9.335508,0.533303,-4.372336,9.318189,-7.115616,-7.348502,-7.617068,7.981607,7.832624,-0.855282,8.237058,-8.284824,9.577978,-8.095522,-5.283431,3.991090,-9.853572,5.821593,-4.089832,5.663473,-3.948862,-1.039927,6.587589,-5.074683,5.592164,6.616031,3.147440,0.847058,4.992960,3.312775,-2.140827,-5.053800,3.283488,6.346234,8.170781,-3.989597,3.210340,-4.692240,-7.313150,2.002032,9.528669,-3.885128,-9.382053,-6.193664,0.443376,-8.795308,-0.706258,2.502150,-4.273887,1.184541,9.013128,9.617547,0.404502,3.948764,-6.096420,7.869763,-1.630957,8.139572,8.189857,-4.123493,3.256069,3.243145,0.751375,-0.494206,2.077683,2.118102,9.554433,7.877931,1.566540,6.323581,5.372434,1.653497,-4.503706,3.745601,-8.548017,2.263682,-9.818094,7.041006,9.059768,7.459639,-9.173899,1.290729,7.315692,-8.811176,3.240856,-0.631657,-2.704053,-6.099227,-5.570902,-3.503891,7.528413,1.459362,-7.027415,-2.544603,-4.925468,7.505272,-5.454113,-8.037547,3.268074,-6.281573,-2.545841,-4.037469,5.474845,-6.541137,-7.355160,-1.867865,-9.186574,7.668630,0.975104,-8.054625,7.921335,-6.225009,-5.625263,1.717640,7.783033,-1.861682,-6.954351,-4.097663,-4.863644,-9.087749,9.847780,-5.641914,-7.062511,0.003350,5.883273,0.565954,3.603525,9.254955,-2.570743,3.146064,-4.955528,-2.663223,-3.800862,-1.340048,1.671690,7.352889,-4.215298,-1.367380,3.549848,-0.352503,0.438429,6.452016,3.815223,-0.393423,0.798915,3.973453,5.648240,6.950858,-4.113465,-7.497590,-1.412301,-4.906519,-8.004026,2.164515,-7.617914,-6.053648,5.894611,-7.717951,-2.909182,-7.612583,7.202734,-3.930725,0.591757,-4.666611,1.441248,9.428336,9.494063,-3.940717,-5.155533,2.702926,5.924032,-9.839290,-8.392105,1.346160,6.196694,-5.062996,7.177497,-8.362320,-8.967358,-8.361495,4.832896,7.230065,-9.573446,-9.107780,5.216046,4.499987,-0.204268,0.189605,6.631330,6.598655,5.267672,0.592447,-9.545274,6.188599,-4.982400,8.126379,-5.174360,-7.974061,-4.608098,2.336737,0.614344,0.447904,2.293106,-9.369522,3.992955,4.662477,5.477198,-6.347504,-7.700503,9.363801,8.362246,3.371368,9.470610,-6.498855,-1.106712,-7.411687,1.618933,8.246905,-7.268717,3.248100,-0.338147,-4.217092,0.135990,9.987545,9.432333,-9.245785,4.858947,-7.798914,-5.672197,3.523655,-8.378966,-4.950428,4.743491,-5.614221,9.038871,8.763130,1.314102,8.168674,-3.081828,-7.277838,5.153964,7.859216,-2.920459,-1.280598,-9.358029,-8.241518,4.256597,-3.213553,-7.188455,-0.236257,-5.919806,6.444826,-4.236902,-6.208204,-6.276173,-4.989524,-9.108699,-0.508053,7.896783,5.558482,-8.232299,-7.245327,-3.573740,-8.309775,-2.378423,-0.212408,0.326196,-4.805223,-9.145732,-9.164685,2.672185,2.974875,-1.407612,4.569616,-6.362415,-1.302758,-2.099680,-5.040466,4.202131,8.265059,7.264855,8.302064,-6.510602,-6.337662,-3.674442,3.626881,2.715864,4.238738,-2.328551,0.175811,0.305435,-5.277179,4.694202,-9.300481,6.903180,-0.187229,3.857299,3.730864,9.026909,1.398499,1.136536,5.516688,2.485809,-7.011428,1.423089,-4.249234,2.744338,-2.587892,8.022903,-5.072305,2.592886,6.049840,-6.002235,-1.973149,3.875373,6.120872,-1.423237,9.949107,-3.435687,3.578768,-6.974813,-8.659716,-4.798353,-2.590682,-3.618485,7.704002,3.369479,-3.439584,8.223331,1.482021,-6.665840,1.975670,1.497051,-6.208947,5.237876,-8.056115,3.323047,7.369144,7.510328,9.400708,-4.661257,2.585025,-6.903563,3.948186,-7.628164,-5.219030,-8.011364,4.195306,-4.609509,3.282382,-4.304582,5.882748,-5.620530,1.013194,-1.751512,0.977234,8.140024,-8.093844,5.440028,-0.266300,-0.518077,-3.739341,-0.125649,2.028387,-8.660360,-9.590675,-7.029423,-9.937447,8.819079,-0.605212,0.763746,-2.957772,0.196032,-2.887810,8.546245,-1.600583,7.558633,-9.017748,3.369612,-6.497172,-0.685158,-6.816105,5.616184,3.864543,-0.657843,-1.185913,-8.146464,2.260893,-5.326132,-8.955707,-1.749939,1.969299,7.800896,9.193434,9.716500,-5.572343,2.789484,-1.607180,-3.399001,9.738289,-5.173558,-5.785479,-1.403739,-6.593378,7.667834,-6.366866,9.337542,9.522023,2.752054,3.579879,-5.654890,-7.032362,-8.315741,-6.721615,0.946243,-6.307014,-1.625240,-6.470578,-6.859063,0.100237,6.161445,5.360104,6.612133,6.930852,4.756183,-6.785486,1.125514,7.431056,5.468618,-0.093807,3.845406,-3.836154,7.921540,6.651605,6.345692,3.855931,-9.849659,-9.980877,7.274319,6.390259,-3.444757,-2.855427,-0.880746,-3.132408,-8.495628,-9.512022,7.551826,7.476662,4.404525,-0.657185,6.012648,5.121650,-4.494428,0.154196,-5.319055,-9.536810,-9.829772,-8.059780,7.112106,6.941774,0.081320,0.795538,-2.765446,3.465770,1.357895,7.210853,7.160497,9.465573,-0.669135,1.547740,1.566086,9.387595,-8.170920,-3.696545,-1.275509,3.027690,-2.799889,-7.062607,6.345059,-2.480295,6.751433,8.874025,0.414086,-7.370867,-5.096261,-6.080276,-7.285188,1.067193,7.380536,-6.746722,9.652002,7.153075,-4.931802,4.556191,2.826338,9.227835,8.311265,3.845945,6.398071,-6.671358,6.422266,8.564556,-1.776038,-5.982653,-0.728520,-1.828167,7.804937,6.244952,6.192283,8.222235,5.408382,-4.704279,-4.216404,8.053547,9.524510,1.283624,-1.035164,-5.419506,0.398594,-8.555279,7.792776,-3.785660,-9.541944,6.779570,-0.327806,-5.793680,9.824749,-8.274691,-0.188486,9.900105,1.440546,-0.243784,5.037704,-1.747832,6.260468,-0.211620,9.752548,4.440029,3.344396,-6.949110,-6.399033,1.376715,3.783088,4.726361,3.198254,1.081932,1.461931,-9.029101,9.499921,0.358665,1.766948,3.966429,-9.516358,-7.907947,2.706853,2.903068,8.967378,8.730336,-9.942264,-2.136833,8.949372,-5.909455,3.966638,4.052802,-3.239270,5.561761,6.965563,-1.314453,-1.547056,1.511829,4.077255,8.945514,2.697059,6.851675,2.319340,0.341533,-7.684798,9.555008,-0.999557,-0.442599,9.508019,-8.211388,-7.671334,7.805913,1.466198,2.118532,6.803485,8.454424,5.007673,1.410857,-9.774415,-1.315408,-0.748607,-5.344068,-7.394595,8.141462,-3.721977,-2.070432,0.434225,2.299329,-9.532651,4.123370,7.682027,-3.271059,-3.532868,4.737610,-8.503327,8.335858,8.015618,9.664851,-2.165602,-2.435896,-7.055634,9.602114,-7.193745,-8.435645,6.927670,-8.415482,-3.273914,-2.880252,-6.942682,4.559094,5.461741,-5.783187,-0.623178,-6.707776,-7.509593,-8.817683,-1.879671,-5.128326,-5.847104,5.270015,8.802887,7.113420,3.774584,-9.344737,6.321748,-8.698302,-5.734615,-7.102563,6.069984,5.988375,0.413237,-9.127951,0.816343,-8.674874,-7.028288,-5.107153,1.140130,6.726184,0.290349,7.246262,-9.361329,9.110077,-1.879717,9.841786,-6.927578,2.008376,-2.269379,0.969343,5.407810,-4.357766,-6.149124,9.526287,-6.700101,-2.456831,-9.956918,-5.590403,6.891340,3.777805,2.436638,2.452555,8.089831,9.640190,9.679958,1.144161,-7.533955,-8.261845,-2.853092,5.780518,-5.934475,-3.529693,6.372783,6.497126,-5.945920,-6.564569,-2.113909,-5.116240,-0.119544,6.037356,-7.868444,-1.837971,-6.968592,7.907121,-5.319597,6.685122,-9.877857,3.786732,4.164916,8.243237,6.303375,4.387096,6.691454,6.146794,-4.444150,4.621982,-5.758552,1.841706,-4.510079,1.691489,1.144482,-2.542782,8.951136,8.184681,-5.589597,-3.834181,-2.294214,1.163901,3.082293,-5.324661,-8.768053,6.487976,1.711859,8.384651,8.140175,9.305542,-5.346362,9.197243,2.787148,-6.458751,0.602051,-2.692902,-9.968202,2.078985,-3.735047,6.173472,-6.726890,5.319877,-5.925483,4.137406,-1.773660,-7.254338,-3.537136,-8.634614,8.454471,-4.770866,7.773649,-8.125849,-8.414274,-1.469671,0.951497,3.409415,-0.357238,-3.152292,-5.341032,-7.328913,-2.109971,9.286819,-9.288909,-5.959314,-2.958528,-6.366131,8.662214,9.445981,0.440750,2.140876,-5.235275,-9.313401,8.431082,8.852299,-7.154781,-0.389238,-7.557433,-3.358574,3.432173,-8.232731,7.243020,-0.337183,-9.980789,-7.754398,4.486560,-7.303001,6.154380,-4.548053,2.353327,-1.429710,1.538637,-5.437158,-9.826891,9.681537,-9.610526,0.553680,-9.940904,-4.844001,5.575756,-9.039355,-3.392938,-4.170416,9.760241,8.957773,-1.089373,1.086158,-7.146801,-2.079553,-1.854762,2.216995,4.044249,-5.285738,-9.654714,-7.556987,4.786949,-2.349638,-8.700186,0.844880,9.863408,-7.496169,-5.303580,5.289166,-3.151999,9.493341,8.287212,0.452537,9.711199,3.794597,-8.200269,-5.551553,-6.369110,-1.903713,7.557413,1.140671,-6.862182,0.709458,1.923653,8.975981,-8.243175,-0.626834,2.449378,-3.274459,0.922806,-0.417390,-6.752502,0.804388,6.584181,7.500282,-1.759956,2.018496,-6.004139,3.051097,-6.980646,2.166329,-1.135184,-1.858005,9.796701,-4.494519,-1.640113,4.111258,8.642352,-4.492784,-8.813729,-6.746806,-4.461236,5.060029,-9.376357,-3.038079], dtype = "float64")#candidate|4594|(1050,)|const|float64
call_4593 = relay.TupleGetItem(func_3228_call(relay.reshape(const_4594.astype('float64'), [7, 15, 10])), 0)
call_4595 = relay.TupleGetItem(func_3230_call(relay.reshape(const_4594.astype('float64'), [7, 15, 10])), 0)
func_2728_call = mod.get_global_var('func_2728')
func_2730_call = mutated_mod.get_global_var('func_2730')
call_4610 = relay.TupleGetItem(func_2728_call(), 0)
call_4611 = relay.TupleGetItem(func_2730_call(), 0)
bop_4623 = relay.bitwise_and(uop_4581.astype('uint16'), relay.reshape(call_4610.astype('uint16'), relay.shape_of(uop_4581))) # shape=(1, 16, 11)
bop_4626 = relay.bitwise_and(uop_4583.astype('uint16'), relay.reshape(call_4611.astype('uint16'), relay.shape_of(uop_4583))) # shape=(1, 16, 11)
var_4635 = relay.var("var_4635", dtype = "int32", shape = (2, 16, 11))#candidate|4635|(2, 16, 11)|var|int32
bop_4636 = relay.not_equal(call_4610.astype('bool'), var_4635.astype('bool')) # shape=(2, 16, 11)
bop_4639 = relay.not_equal(call_4611.astype('bool'), var_4635.astype('bool')) # shape=(2, 16, 11)
func_1339_call = mod.get_global_var('func_1339')
func_1340_call = mutated_mod.get_global_var('func_1340')
call_4649 = relay.TupleGetItem(func_1339_call(), 0)
call_4650 = relay.TupleGetItem(func_1340_call(), 0)
output = relay.Tuple([call_4573,const_4574,call_4577,call_4593,const_4594,bop_4623,bop_4636,call_4649,])
output2 = relay.Tuple([call_4575,const_4574,call_4578,call_4595,const_4594,bop_4626,bop_4639,call_4650,])
func_4658 = relay.Function([var_4635,], output)
mod['func_4658'] = func_4658
mod = relay.transform.InferType()(mod)
mutated_mod['func_4658'] = func_4658
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4659 = relay.var("var_4659", dtype = "int32", shape = (2, 16, 11))#candidate|4659|(2, 16, 11)|var|int32
func_4658_call = mutated_mod.get_global_var('func_4658')
call_4660 = func_4658_call(var_4659)
output = call_4660
func_4661 = relay.Function([var_4659], output)
mutated_mod['func_4661'] = func_4661
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2019_call = mod.get_global_var('func_2019')
func_2020_call = mutated_mod.get_global_var('func_2020')
call_4674 = relay.TupleGetItem(func_2019_call(), 1)
call_4675 = relay.TupleGetItem(func_2020_call(), 1)
output = relay.Tuple([call_4674,])
output2 = relay.Tuple([call_4675,])
func_4703 = relay.Function([], output)
mod['func_4703'] = func_4703
mod = relay.transform.InferType()(mod)
mutated_mod['func_4703'] = func_4703
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4703_call = mutated_mod.get_global_var('func_4703')
call_4704 = func_4703_call()
output = call_4704
func_4705 = relay.Function([], output)
mutated_mod['func_4705'] = func_4705
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2720_call = mod.get_global_var('func_2720')
func_2721_call = mutated_mod.get_global_var('func_2721')
call_4745 = relay.TupleGetItem(func_2720_call(), 1)
call_4746 = relay.TupleGetItem(func_2721_call(), 1)
func_3478_call = mod.get_global_var('func_3478')
func_3479_call = mutated_mod.get_global_var('func_3479')
call_4751 = func_3478_call()
call_4752 = func_3478_call()
output = relay.Tuple([call_4745,call_4751,])
output2 = relay.Tuple([call_4746,call_4752,])
func_4770 = relay.Function([], output)
mod['func_4770'] = func_4770
mod = relay.transform.InferType()(mod)
mutated_mod['func_4770'] = func_4770
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4770_call = mutated_mod.get_global_var('func_4770')
call_4771 = func_4770_call()
output = call_4771
func_4772 = relay.Function([], output)
mutated_mod['func_4772'] = func_4772
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3478_call = mod.get_global_var('func_3478')
func_3479_call = mutated_mod.get_global_var('func_3479')
call_4832 = func_3478_call()
call_4833 = func_3478_call()
output = relay.Tuple([call_4832,])
output2 = relay.Tuple([call_4833,])
func_4841 = relay.Function([], output)
mod['func_4841'] = func_4841
mod = relay.transform.InferType()(mod)
mutated_mod['func_4841'] = func_4841
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4841_call = mutated_mod.get_global_var('func_4841')
call_4842 = func_4841_call()
output = call_4842
func_4843 = relay.Function([], output)
mutated_mod['func_4843'] = func_4843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3307_call = mod.get_global_var('func_3307')
func_3309_call = mutated_mod.get_global_var('func_3309')
call_4867 = relay.TupleGetItem(func_3307_call(), 0)
call_4868 = relay.TupleGetItem(func_3309_call(), 0)
output = relay.Tuple([call_4867,])
output2 = relay.Tuple([call_4868,])
func_4871 = relay.Function([], output)
mod['func_4871'] = func_4871
mod = relay.transform.InferType()(mod)
output = func_4871()
func_4872 = relay.Function([], output)
mutated_mod['func_4872'] = func_4872
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4896 = relay.const(-9.872781, dtype = "float64")#candidate|4896|()|const|float64
const_4897 = relay.const([[[-9.231162,-9.682608],[0.548483,1.357337],[9.483338,-6.488723],[2.807159,-7.138945],[0.147909,7.720161]]], dtype = "float64")#candidate|4897|(1, 5, 2)|const|float64
bop_4898 = relay.mod(const_4896.astype('float64'), const_4897.astype('float64')) # shape=(1, 5, 2)
func_1561_call = mod.get_global_var('func_1561')
func_1562_call = mutated_mod.get_global_var('func_1562')
call_4903 = relay.TupleGetItem(func_1561_call(), 0)
call_4904 = relay.TupleGetItem(func_1562_call(), 0)
output = relay.Tuple([bop_4898,call_4903,])
output2 = relay.Tuple([bop_4898,call_4904,])
func_4910 = relay.Function([], output)
mod['func_4910'] = func_4910
mod = relay.transform.InferType()(mod)
output = func_4910()
func_4911 = relay.Function([], output)
mutated_mod['func_4911'] = func_4911
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1339_call = mod.get_global_var('func_1339')
func_1340_call = mutated_mod.get_global_var('func_1340')
call_4934 = relay.TupleGetItem(func_1339_call(), 0)
call_4935 = relay.TupleGetItem(func_1340_call(), 0)
output = call_4934
output2 = call_4935
func_4950 = relay.Function([], output)
mod['func_4950'] = func_4950
mod = relay.transform.InferType()(mod)
output = func_4950()
func_4951 = relay.Function([], output)
mutated_mod['func_4951'] = func_4951
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3307_call = mod.get_global_var('func_3307')
func_3309_call = mutated_mod.get_global_var('func_3309')
call_5012 = relay.TupleGetItem(func_3307_call(), 0)
call_5013 = relay.TupleGetItem(func_3309_call(), 0)
func_1836_call = mod.get_global_var('func_1836')
func_1837_call = mutated_mod.get_global_var('func_1837')
call_5055 = func_1836_call()
call_5056 = func_1836_call()
output = relay.Tuple([call_5012,call_5055,])
output2 = relay.Tuple([call_5013,call_5056,])
func_5067 = relay.Function([], output)
mod['func_5067'] = func_5067
mod = relay.transform.InferType()(mod)
mutated_mod['func_5067'] = func_5067
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5067_call = mutated_mod.get_global_var('func_5067')
call_5068 = func_5067_call()
output = call_5068
func_5069 = relay.Function([], output)
mutated_mod['func_5069'] = func_5069
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2450_call = mod.get_global_var('func_2450')
func_2452_call = mutated_mod.get_global_var('func_2452')
call_5157 = relay.TupleGetItem(func_2450_call(), 0)
call_5158 = relay.TupleGetItem(func_2452_call(), 0)
output = relay.Tuple([call_5157,])
output2 = relay.Tuple([call_5158,])
func_5159 = relay.Function([], output)
mod['func_5159'] = func_5159
mod = relay.transform.InferType()(mod)
mutated_mod['func_5159'] = func_5159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5159_call = mutated_mod.get_global_var('func_5159')
call_5160 = func_5159_call()
output = call_5160
func_5161 = relay.Function([], output)
mutated_mod['func_5161'] = func_5161
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5206 = relay.var("var_5206", dtype = "float64", shape = (3, 8, 13))#candidate|5206|(3, 8, 13)|var|float64
uop_5207 = relay.log10(var_5206.astype('float64')) # shape=(3, 8, 13)
bop_5209 = relay.logical_and(var_5206.astype('bool'), relay.reshape(uop_5207.astype('bool'), relay.shape_of(var_5206))) # shape=(3, 8, 13)
output = relay.Tuple([bop_5209,])
output2 = relay.Tuple([bop_5209,])
func_5218 = relay.Function([var_5206,], output)
mod['func_5218'] = func_5218
mod = relay.transform.InferType()(mod)
var_5219 = relay.var("var_5219", dtype = "float64", shape = (3, 8, 13))#candidate|5219|(3, 8, 13)|var|float64
output = func_5218(var_5219)
func_5220 = relay.Function([var_5219], output)
mutated_mod['func_5220'] = func_5220
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4256_call = mod.get_global_var('func_4256')
func_4257_call = mutated_mod.get_global_var('func_4257')
call_5222 = func_4256_call()
call_5223 = func_4256_call()
func_3006_call = mod.get_global_var('func_3006')
func_3008_call = mutated_mod.get_global_var('func_3008')
call_5232 = relay.TupleGetItem(func_3006_call(), 1)
call_5233 = relay.TupleGetItem(func_3008_call(), 1)
output = relay.Tuple([call_5222,call_5232,])
output2 = relay.Tuple([call_5223,call_5233,])
func_5236 = relay.Function([], output)
mod['func_5236'] = func_5236
mod = relay.transform.InferType()(mod)
output = func_5236()
func_5237 = relay.Function([], output)
mutated_mod['func_5237'] = func_5237
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1713_call = mod.get_global_var('func_1713')
func_1714_call = mutated_mod.get_global_var('func_1714')
call_5250 = relay.TupleGetItem(func_1713_call(), 0)
call_5251 = relay.TupleGetItem(func_1714_call(), 0)
output = call_5250
output2 = call_5251
func_5258 = relay.Function([], output)
mod['func_5258'] = func_5258
mod = relay.transform.InferType()(mod)
mutated_mod['func_5258'] = func_5258
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5258_call = mutated_mod.get_global_var('func_5258')
call_5259 = func_5258_call()
output = call_5259
func_5260 = relay.Function([], output)
mutated_mod['func_5260'] = func_5260
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1243_call = mod.get_global_var('func_1243')
func_1244_call = mutated_mod.get_global_var('func_1244')
call_5319 = relay.TupleGetItem(func_1243_call(), 0)
call_5320 = relay.TupleGetItem(func_1244_call(), 0)
func_4035_call = mod.get_global_var('func_4035')
func_4038_call = mutated_mod.get_global_var('func_4038')
const_5331 = relay.const([-6.691289,-6.122394,-5.998777,2.991300,7.446599,3.413644,-2.710984,-0.447194,3.381168,-0.899916,-3.547771,7.419889,6.561550,0.929238,-9.371414,6.606389,-0.007328,-9.641798,-6.890815,2.937051,-7.766070,-9.539323,-9.998662,-0.671160,4.824056,-1.585923,3.493103,6.058243,-9.272642,-7.747198,2.616414,7.135163,5.965542,-1.003893,3.861527,-9.700616,-3.039159,0.010504,8.059507,7.933813,-3.934780,7.156845,2.231301,-8.332845,7.702451,-4.583272,3.647566,-8.029832,-7.155461,-3.487454,-0.507304,6.096719,6.167579,2.177368,4.791444,7.755699,5.529764,7.754725,-8.288716,-2.916820,-5.889245,-2.796085,-6.837106,4.318124,8.752392,-2.208407,-6.912572,7.271815,-0.136571,-6.243734,0.003958,-3.652282,-1.613534,9.639619,3.908574,7.345982,-8.978151,5.903598,-3.245004,6.136660,-1.915338,-2.670016,-4.815801,8.216713,-7.319539,-1.755628,6.778824,-1.821184,-7.630203,-8.803937,4.853096,-6.298050,6.145792,-5.431978,-3.987210,-7.773078,-1.073635,1.425423,-3.726766,5.258710,-5.745117,-4.104989,-0.218899,-4.103674,-1.495804,8.379692,-1.157912,2.598784,6.750729,3.124789,-5.891686,6.179037,-4.480502,1.217616,2.774739,-1.746666,-2.943077,3.548642,7.077898,1.433076,5.720798,-2.281329,-5.607470,5.699115,0.581321,6.600190,-0.612658,-8.208680,6.821390,5.328310,5.119030,4.036181,-5.081184,-8.561930,-6.828909,6.011550,-6.922467,6.057148,-0.943264,6.429998,8.973524,0.826529,2.268995,7.213624,2.610234,8.283735,-1.349465,-5.678639,2.413907,-5.293231,-0.258781,7.804916,2.061091,-4.208643,-9.703020,-9.123283,-7.737682,7.581801,8.735655,2.571072,-5.590263,5.235785,4.258675,3.535462,3.610976,-9.263115,-0.523120,-4.183642,-0.223537,4.044803,-1.661404,-5.800349,1.600691,-0.583993,-4.965628,7.328739,-4.797827,5.819323,-9.632561,4.173719,4.524897,4.177716,7.801963,1.703866,-2.781760,-2.000171,-1.876145,-8.189095,9.969634,1.209889,-1.972059,-6.679281,1.326291,-9.336043,-0.878453,4.192802,0.994530,6.313922,6.685772,-9.753118,7.494108,-3.620243,2.388755,3.906169,-1.781119,2.360776,2.119306,0.820632,7.855979,-3.036595,5.676849,1.415202,3.733156,-8.041832,-7.788505,-9.648156,1.449453,6.837951,9.087659,9.740989,9.872040,-3.884625,-9.761105,-6.183184,1.335092,-8.015615,-1.602952,3.607007,-6.530345,-1.045547,-9.200684,1.798712,-7.047501,0.479246,1.502500,7.705368,9.086096,-8.648571,5.960910,9.978723,9.557117,-6.805152,-4.532480,7.986522,9.477257,6.928300,4.522851,6.626871,6.777475,7.105888,-1.887513,-2.735982,2.488804,9.781392,2.055206,1.679158,-7.793118,-6.526118,-1.544878,-3.373570,-8.899869,2.334189,-4.156130,4.606540,5.443194,-1.984463,2.773234,6.180442,6.133147,5.028317,-3.802562,-8.723666,-4.065776,1.843102,-7.489196,-1.335305,4.330606,-7.289071,1.079054,7.459356,5.979455,-2.405779,-1.212195,2.390445,-6.517328,-1.636289,7.911519,-1.667307,-0.445916,-8.497736,1.636794,6.903006,4.772721,-5.326356,4.556261,4.877974,8.623228,5.976361,-6.665234,-4.323693,6.220727,1.725409,6.627696,6.984564,0.671810,-5.636543,-6.101052,6.563562,-4.997265,-2.153195,3.690374,-8.118405,6.502707,0.475183,-7.282767,8.214936,-5.416920,-3.186905,-9.257867,5.528700,-1.600709,-0.201065,3.929875,-2.014422,9.484521,3.371526,-2.017021,3.725489,5.005740,7.385069,-9.742293,-6.231449,1.571925,-3.281455,-6.055429,0.575147,-2.474730,2.858479,6.533041,5.455063,2.862117,-0.996093,-6.952535,7.262506,-3.741454,7.490909,0.710831,9.593372,-4.956846,-5.916522,-3.675601,5.506320,2.987312,-4.787141,-2.969235,7.808603,8.965988,-5.278765,-4.786803,4.294425,-4.061504,3.225399,-8.308695,7.039259,2.555383,7.825480,2.526800,-6.166624,-1.232579,-8.681425,-1.302778,-2.407548,4.767241,1.571721,-4.907786,-6.965724,7.779472,0.303437,-8.977397,-5.333174,-4.773656,5.259084,7.978965,3.023396,5.759419,-8.528494,6.169274,7.672646,3.350362,-4.214178,2.436204,2.724487,3.566911,4.339697,4.978892,6.330811,6.989448,1.969601,-6.683524,-9.753905,-9.608399,0.434927,7.019465,-7.458086,5.171572,1.500950,2.637658,8.539922,5.427731,0.675937,-9.305181,-7.858509,2.581308,-2.064508,-8.878671,8.699100,-5.588630,3.822514,1.122797,-6.021924,-2.336554,-4.310285,-7.722485,-2.352803,-8.056094,-6.772469,-4.907747,-3.206703,6.579461,5.873271,-8.753651,-6.439176,4.214748,-8.662737,-8.703964,1.552361,-8.949437,-7.175350,2.805414,-6.062543,-8.581594,3.135718,-4.592186,8.877719,-0.045254,2.273630,7.669845,9.502991,0.095073,-7.799446,9.542291,4.112431,1.923192,-2.901812,-8.801683,-6.594146,-5.617010,-7.350726,4.991035,-8.871964,-8.989343,-9.359946,0.293071,7.222291,-8.770169,-5.527348,3.418407,8.853974,-5.058155,-3.535201,0.668499,3.031617,-6.140270,-7.121698,3.912851,8.057233,-6.127383,-7.651972,-9.869973,6.598241,2.081438,-4.639797,8.287678,9.989338,3.048587,-7.168664,-1.288831,-4.153322,8.070022,-9.234626,8.898585,1.841220,-6.203349,-4.603742,8.981869,9.316281,3.461996,5.655869,2.827642,-1.010719,-1.336757,6.514775,3.870137,6.504608,-0.682144,0.412311,-4.880561,-3.399764,-5.286893,6.602416,-9.927017,-8.551025,-3.370717,-5.944773,-7.599507,-1.883357,6.592296,7.236068,-0.494075,-5.493001,0.323801,-5.686007,-5.812575,-0.260067,9.792907,-1.301286,-0.073340,-8.580439,-8.047473,-5.294463,5.681247,-2.085815,0.529678,1.891371,-4.852845,-5.426088,-1.502102,5.589312,0.883259,2.531698,3.653421,-4.381124,0.553820,-2.506268,0.670356,-7.689918,-7.653589,-9.749162,3.556199,8.633386,2.975194,1.173169,-5.548908,-2.731070,-3.901976,7.673659,6.476838,9.493325,-3.072037,-9.612178,-9.353230,-5.398829,0.333033,-2.865208,8.487035,2.485126,-1.419364,-6.798902,6.784348,-7.979107,-2.214734,-3.162380,-1.246359,-1.231135,0.765632,-5.441634,-9.071755,-5.670526,7.300773,-5.964096,-4.764885,8.901659,-8.841059,-1.289835,-7.072281,7.793387,-7.637232,-2.497931,1.922423,6.087743,-4.517189,-5.590189,-4.314369,-8.188726,-1.693968,-8.719303,-9.029323,6.508338,7.457070,2.346854,-0.623001,4.300967,-6.360478,5.288982,-1.253408,-5.582729,8.600302,5.828153,-2.354893,7.885368,-3.027552,1.878206,-2.404975,9.781035,-6.344771,9.267797,5.255486,4.952523,7.696113,6.675909,5.746367,-1.552405,1.066497,4.427079,8.432319,-3.024718,-0.425554,8.903200,-1.934891,2.820676,0.303243,1.714047,1.739073,-6.377538,-6.221484,-5.965398,3.552192,-5.613635,6.141637,-0.089111,-9.037292,-6.144104,8.203319,1.832472,7.704406,-9.554121,-6.932717,5.844826,2.821236,-1.815679,-7.162334,2.956798,3.733315,-5.062778,2.941149,6.187564,6.706003,0.703450,5.642405,-6.271472,2.904475,8.659425,-7.196615,9.210006,-5.836554,5.832624,-7.873266,1.886791,-5.852000,-3.681050,-2.725432,-9.580523,-0.630352,-8.929836,-0.731944,-8.910903,-0.392695,6.977361,-4.825973,-8.353403,-0.411660,0.553307,-5.355479,-0.921213,-7.611514,8.973945,5.416198,-4.981151,7.348272,9.737070,4.652828,6.888182,-7.429716,9.808710,0.559670,4.283660,2.209836,-9.672430,3.809188,8.749991,-4.398215,8.734244,-2.069863,1.006174,-7.557323,1.530108,-8.956632,0.174216,-0.331198,8.761190,-0.239827,2.411418,-9.304294,-1.216276,6.881313,7.404220,-1.158369,7.624528,4.273317,-1.271341,0.045368,2.132065,-0.221274,-0.037599,2.500251,-1.971147,3.250234,-3.552349,6.862046,9.188441,-6.904143,-7.309766,4.899594,8.299343,-6.927704,1.867346,6.935407,7.520070,2.687006,-2.297118,-1.386587,5.673116,3.575750,3.267734,-5.826315,5.142628,0.599973,9.914193,8.956690,2.258880,-8.650636,4.082258,-6.528462,0.046085,8.041060,-5.497234,-2.355164,6.281836,4.046186,-0.368641,1.869575,-9.029368,-5.224244,-0.841520,-1.460796,2.453781,-5.747398,4.902734,-3.172471,-0.322321,-3.019564,0.006113,-6.101795,-7.431909,7.941615,1.554115,-0.487049,0.062587,3.878132,-6.641858,-8.159364,-8.458033,3.287434,2.933675,-4.899601,7.173643,-1.984125,4.961227,3.573349,5.217673,7.441824,4.700866,-0.543567,-0.598681,-6.308299,-4.022614,-6.910820,2.675506,-7.623571,7.890675,7.854637,3.133657,7.792772,-0.079536,2.081828,3.311403,0.259101,-7.746853,-5.242757,2.929172,-6.834802,4.572444,9.705683,-8.354217,9.583231,-3.098332,-1.404431,-3.585428,1.220164,-6.340450,-4.128687,1.109210,-3.934416,-2.961718,-4.012844,-5.268803,1.176623,9.568882,-6.058852,-1.812348,-1.394089,-3.003078,-4.838607,-2.987870,-5.740039,-1.050240,0.735889,-3.677177,-8.554894,-6.858885,-6.329740,4.295276,-6.186770,-4.459461,-7.509373,-4.552888,-3.450262,0.799184,5.547947,-4.306295,-9.161445,6.534388,-7.072987,2.131645,-6.421684,4.026958,-9.194595,-2.218213,4.825727,-5.361727,4.163230,-7.618891,9.963467,-4.748638,-5.310841,-7.318406,-3.466328,-1.512261,6.445191,1.666436,5.826557,3.650706,5.799235,-7.886886,-2.962612,-8.688243,0.481561,4.249232,-7.667570,5.652893,-9.703011,9.103819,6.046548,5.382236,8.658888,-6.453928,4.665032,0.878733,9.391356,-3.245163,-6.411495,3.855012,8.521409,-8.303977,7.677441,-1.265278,-9.646277,-7.395334,9.511804,-3.424904,-4.556820,8.468599,-7.066767,-5.564127,-1.655013,-3.966449,3.279496,-7.070701,-4.727993,-3.866645,8.687069,-1.374125,-6.698430,7.114877,-5.738917,-0.004477,4.731565,3.185294,-7.945349,9.243879,-7.870059,3.611101,-7.468749,-8.318263,4.284384,-9.345700,-8.218200,-0.118807,9.840082,-8.577934,9.740226,-6.738664,2.487862,4.741584,3.825230,-1.969085,-4.766083,5.162340,-3.799162,2.395217,-0.779799,-4.621610,-9.674932,7.661937,-4.948634,-3.568444,-1.845509,-4.342967,-4.333257,-6.649139,0.922886,5.929753,-4.307967,-1.886761,-3.055731,-2.192219,4.624160,0.392865,3.289859,8.619309,7.358795,-9.940476,-0.119693,7.701929,-1.771332,-6.031383,-2.271672,8.994225,-6.471074,9.993682,9.739505,5.982730,-6.782126,8.350930,0.516697,-6.392245,-4.414999,-1.863175,5.254865,4.145702,2.651550,7.352967,3.302242,7.491712,-3.030104,-2.072924,-5.634515,-8.510097,0.374227,6.104748,-9.276610,1.482325,-6.354234,1.957566,9.821790,0.947655,-2.195653,-9.763883,2.234561,5.960894,1.723856,2.493138,1.989881,-1.997514,8.518096,9.143551,7.962912,-8.668645,4.659696,-5.094022,-2.340922,7.796895,-0.150302,-0.421024,7.227611,-2.250997,-7.787151,2.066302,9.807501,-5.723806,2.557677,3.522632,-9.349125,-1.094378,3.135716,-6.141879,-7.961412,7.306351,1.351956,-3.024095,9.604715,8.917452,-8.818367,-8.481929,9.105324,5.493272,-9.205704,7.276717,-1.752904,-8.193263,-0.331572,-0.086944,3.758614,-2.234049,4.934386,0.870412,6.352479,-5.960596,8.052892,7.337250,6.734853,8.579249,3.869864,-0.557933,-6.769627,-1.523249,6.255851,7.018413,-0.470819,-3.029885,-8.226310,-5.884091,-1.047478,-8.915345,8.753289,-5.983550,-3.628928,0.992153,8.425957,1.446047,-4.152421,-8.053293,-9.456487,-8.210396,5.109941,7.216872,9.344436,8.267276,-6.482546,2.279918,-6.725753,1.665393,-3.941750,-4.923316,-2.162602,3.476157,1.586862,9.943266,-6.566826,-1.543670,-8.397479,7.341115,-4.296454,2.408605,-3.588509,-6.739386,4.106843,0.290255,-6.838803,8.761806,-5.763770,-0.611862,-6.752064,7.299199,4.314463,3.933046,5.745440,8.272052,5.938719,1.708158,-1.245843,-9.626933,3.933313,7.822465,-1.998328,-7.326413,7.490305,-5.447357,-8.696048,-0.190301,-1.680969,7.253683,9.507376,8.197192,-1.632578,-4.713857,-2.854917,-4.599966,8.559614,-3.602077,-7.574568,-9.070985,0.686958,1.490560,-4.374325,3.127024,5.041006,2.196948,-3.553456,-2.815290,1.608739,6.783884,6.980453,3.998336,0.382890,-2.952829,-1.241046,4.256867,-1.101270,-2.138487,3.307128,5.833789,-9.003165,8.277583,8.279174,9.429417,-7.932904,-5.809696,-0.966287,-7.926731,6.335660,3.477391,1.315628,3.648186,-3.196553,6.910730,-8.103630,-3.914572,4.790888,0.513465,7.738305,0.478729,2.505473,-7.270673,5.529206,2.920658,6.319651,-2.592633,5.311925,-7.169838,1.239844,5.907704,-6.917002,5.943197,1.170674,-6.843695,6.039314,5.005993,-2.372237,7.476852,-4.226279,-0.842220,2.866122,2.025466,9.937481,-3.658232,7.383783,-1.914621,-4.274776,2.801216,-0.301620,-8.095901,8.671864,-7.060867,3.695129,5.652292,-0.287730,-1.606573,-0.439178,-2.251614,9.872932,8.587129,1.322910,5.923274,0.916512,8.733800,-2.956412,1.694253,5.656574,2.474522,0.994270,4.998524,3.678723,-0.098870,0.024234,5.776820,6.498457,8.442455,-9.632093,-7.738997,8.766581,5.778436,-3.664969,9.979315,-3.153055,-5.408371,2.699845,3.855246,1.187345,-0.830277,-1.826574,-0.785901,-6.209539,-0.899553,-9.358874,-3.666735,4.104098,3.526854,5.256475,5.096240,-5.879634,5.284201,7.270446,-0.241993,-6.705482,6.875164,-8.952040,5.607041,2.715457,4.035440,-4.136301,7.792744,9.836327,9.034760,4.890364,-3.406348,6.330080,6.390010,-1.985500,8.377090,9.168403,8.532534,-1.654919,-6.741941,7.677786,4.699242,-7.138734,5.061705,-9.221273,-7.477975,0.295670,6.662752,-3.981006,-2.258333,-4.691223,-2.285051,-7.325437,8.394716,-1.054490,2.028447,7.041383,9.533800,0.090019,5.983115,-8.970192,-2.311720,-4.845343,-6.749373,-6.058255,9.675014,-7.942669,-2.366775,8.102457,-5.191782,-0.946673,6.382501,-5.225942,1.131919,4.314176,2.058719,-1.000502,-6.256908,7.356281,1.580430,8.341174,-3.613632,-4.815929,-7.128959,-2.652574,9.458128,-3.018060,-1.256137,-1.028185,3.503728,-6.168229,8.539983,-1.766700,0.618227,-6.701276,5.541140,8.260980,2.938730,6.302412,-4.535958,-4.446945,-5.384357,-3.124201,-6.462943,-3.481201,0.385388,-1.835444,9.395488,-7.386321,9.334567,3.664104,-8.951315,-5.790951,4.759790,2.362555,-5.664791,6.737174,4.268095,1.277482,-7.630450,6.803972,7.569742,-3.064190,-4.025172,3.761442,6.099997,-2.688022,-8.482099,-5.709609,-9.979462,0.309929,6.596530,2.831265,-3.442605,-7.495532,-7.448427,-4.814256,-3.713130,-7.243832,8.945521,-5.413693,8.553783,-6.708515,4.290868,3.915186,1.448168,-8.132614,8.087574,7.699267,9.407322,4.006876,8.945814,6.380068,-4.041033,-3.545025,6.603978,5.372630,8.290611,-2.141869,-9.516725,0.015968,-6.455057,-9.459894,2.641446,-6.404206,-6.508902,1.112734,4.215784,8.599702,-1.628653,-0.490346,-0.390815,-6.392015,3.755670,-4.044990,-9.520816,8.131420,-6.701844,2.425151,4.596281,-0.959688,6.752455,0.936395,-4.853116,-3.806214,-3.824653,-5.322509,-5.032070,5.641283,-2.492764,6.976513,6.978535,1.515054,0.888485,5.429690,-0.715691,-3.353728,5.283466,3.429534,-9.881061,1.190125,-7.364887,8.784906,-7.961083,-4.241263,-6.827017,-8.900538,6.717107,4.733565,-7.628002,8.224371,-4.556432,-7.927910,-9.826577,3.523732,0.786578,0.964762,0.212866,5.593234,4.964009,-6.910856,5.276047,4.507326,-0.710490,1.190419,-4.961849,-6.127640,-5.945183,-4.779079,-1.269881,4.818948,-3.441798,4.861176,9.900432,-3.856706,-6.528638,2.152253,6.639081,-5.368511,4.381084,-3.164859,6.496422,2.452536,1.655503,-5.381426,8.305276,0.376244,-0.535995,1.667773,3.163584,1.342776,-8.264755,-8.016582,4.657645,-7.103271,-5.948697,-7.171072,2.747746,-1.783567,-7.781340,-9.376245,-1.954208,3.861532,-3.200298,9.531067,-6.072647,6.545073,5.801484,-8.535096,3.328464,0.007700,4.587929,5.155570,0.990928,1.566179,-2.008323,-2.277395,-2.122187,6.971220,-6.976687,-3.177041,4.295719,-3.739504,9.467580,-3.507586,9.100235,4.291145,5.145651,5.155209,-7.257480,-3.210589,-4.116910,6.095194,9.846183,4.721275,1.516975,-2.991038,4.082977,6.991967,-7.595685,8.405900,-3.445607,-9.027245,8.255765,-0.235437,9.818850,-2.065292,3.080753,-9.879504,6.878964,8.695454,5.451086,0.899732,-7.091747,-7.234158,-9.763801,-7.552541,-8.948341,8.102708,-5.632138,4.063151,-8.812446,0.081796,7.800056,-2.451567,3.973632,-6.114065,-8.762954,3.966483,-9.176421,2.469733,-1.545411,6.995439,-0.423833,-2.219458,4.732887,-8.777297,-5.712093,4.504593,4.033124,-9.890724,4.075252,-9.213660,-4.336351,-2.084417,0.831768,-9.151408,9.325512,-1.208768,-4.823858,-2.338010,-3.868415,9.653713,-4.789841,-9.889144,5.854592,-6.237835,1.530774,-1.044614,4.297669,3.040554,-2.838440,-3.600148,7.360350,3.278725,1.528173,3.157300,6.314670,-9.042815,-8.121652,5.860248,7.894193,-9.849336,-4.514124,7.951524,-1.481907,-8.434893,-3.269967,-2.572715,6.433449,3.074566,-6.831594,-4.677224,5.572814,9.651066,-8.310863,4.720285,3.953131,-3.103538,-4.238346,4.004013,-8.736185,7.686384,-5.045954,3.862156,-6.977886,-6.962069,0.472682,-1.887095,-2.660537,-8.272570,-8.064257,-0.763114,-0.399167,-8.230472,-4.090801,1.488076,1.211436,8.163860,-1.402020,-7.510288,4.484293,9.254404,5.298555,-4.910301,-7.276354,-7.474097,-6.885285,-2.552429,-4.002054,-7.876154,-1.601202,7.940623,-6.515576,2.289962,3.638882,9.121485,-1.039807,-3.526681,-3.901620,3.669221,1.401330,-6.397704,8.257945,-9.266384,2.624514,-7.192948,-4.551658,4.398342,2.904878,-9.303014,-3.793321,9.236660,-2.018755,5.765823,-0.091407,1.217112,-1.823419,-0.814315,-8.426739,3.627563,5.557007,9.225685,-8.157728,-2.805131,0.779277,-8.708542,2.967190,4.236576,0.020220,-3.511523,6.995410,-9.732319,0.579238,2.112760,8.966130,4.029425,6.838443,2.953618,-4.029562,4.383543,-3.711866,6.348351,0.288556,6.434162,8.701370,7.506355,-9.387390,7.410719,-6.135264,6.635585,2.230063,-1.277100,-2.260738,-2.258750,9.639489,-5.086029,-1.292397,8.975249,-9.648525,-6.422644,7.987009,3.768519,9.266696,5.019638,7.167290,-9.721963,-9.522691,2.351254,-1.383816,1.394886,0.374567,8.274935,8.493456,-0.792597,8.754870,-3.918298,-0.293315,-7.880143,-7.906754,0.757005,7.653208,-2.414889,-8.284955,-7.270275,-1.652812,-9.740127,6.627934,6.915325,0.131969,0.083936,-1.651269,6.162912,8.274669,4.166267,8.411811,5.755422,-6.959812,-5.169103,-1.604727,2.153012,-8.427488,-8.366437,2.758878,1.406327,8.676790,0.674048,-3.397112,-5.750965,4.490956,0.905330,-7.388655,9.791065,-2.010221,1.390631,-2.456522,0.018168,1.734507,-4.093021,5.696380,4.150478,-6.793985,5.047705,0.483482,-6.640354,5.955331,4.500288,6.715098,-3.886493,0.622023,-5.160206,-1.719443,-4.955719,3.577996,-1.055962,-0.855422,-8.216867,-0.563350,6.897762,2.932727,-5.334207,2.138836,2.942019,-0.546789,1.050276,5.517636,0.965095,1.195757,0.809459,3.353397,-6.721440,3.887636,-8.491896,-8.475968,7.180623,-0.462891,-5.428081,-4.373874,-7.881184,7.934885,-7.563602,7.398086,-8.463442,3.972807,9.124543,5.460392,2.508503,-4.996689,-2.071915,9.969640,8.421474,-8.743891,-0.803969,0.952487,4.026154,-2.067265,5.455881,-8.258632,-1.484440,-2.226540,-1.240594,3.039765,-5.787162,9.419334,-9.818710,4.289318,-0.167507,3.837204,-4.783238,7.266023,6.009510,8.959729,8.408816,-7.224447,3.020820,-9.315492,-1.382245,9.166446,7.235401,-3.679928,-4.273582,4.238887,3.726690,6.780397,6.817151,6.989481,-1.751876,-9.045044,-0.104805,2.743236,3.787987,7.571063,-4.301102,-3.287661,-0.335537,0.554461,-0.262723,4.907192,-3.228182,0.436444,-8.418289,-1.957265,7.733840,-4.068174,-7.463330,-7.908070,1.705288,2.765452,-7.670420,-7.471148,-8.472423,7.332145,-8.127500,-6.558836,9.656153,7.130919,9.046657,-6.803141,-1.438940,-7.375414,5.683232,-6.684885,7.235609,-1.957095,5.956621,-1.335616,-2.111082,3.319410,-9.306255,3.422432,1.365534,1.175192,2.178367,-2.616626,8.403434,-4.758546,0.384111,1.818485,-2.940456,-4.012862,-5.347152,-0.701548,2.304326,-9.977286,1.786097,0.946603,-9.404293,6.664255,5.031350,0.707975,9.250729,4.477679,-8.943041,1.416005,-3.869491,-2.770323,-2.307727,1.953553,-2.367691,8.441763,-1.139077,7.959211,-4.486568,-8.735837,-9.906183,-8.082307,3.746254,-1.695929,-0.939813,-5.898668,7.899997,-3.383397,0.492831,7.215724,7.667385,-3.603589,-1.797357,-9.085634,-4.450748,-6.010239,-7.626913,-0.305621,-1.836514,9.330235,-0.113410,3.200282,-4.786081,5.220930,1.501128,-0.818546,-2.297136,-5.472949,-4.809749,6.355044,7.376486,9.990056,-0.420296,8.124525,-1.369593,3.223753,0.803409,-6.510245,-4.259903,9.325892,7.936673,-1.615969,-4.257744,-3.611953,0.582868,-9.312338,0.773688,-6.229687,8.982979,-0.309510,-6.852827,8.241765,-0.301447,-0.745624,8.320925,-9.270063,9.160053,-6.054958,-4.394822,-5.911040,-6.763916,-8.216432,-7.431548,6.925175,4.244874,1.659011,-4.341979,8.026926,-6.167185,0.776750,4.475821,-0.103884,0.074244,0.100869,0.922547,0.393472,-0.060894,9.327970,0.708278,-7.080708,-3.207079,-1.706383,-2.127722,1.988738,2.956866,5.010932,4.314161,5.876143,-1.821022,-7.942583,-4.965700,-7.663301,6.310990,7.269090,-7.045970,9.686549,0.224585,7.632919,0.278840,4.732828,-3.726722,-6.992982,-6.439178,-0.325022,-1.913849,9.162077,-0.014308,4.992187,6.316497,-6.272929,-8.017396,0.064288,-4.705702,-5.341848,4.838916,-4.682397,-7.471307,0.706326,7.690223,6.396461,-5.016970,-5.893757,-9.122015,2.102214,1.978016,-9.908890,5.710462,0.107089,-7.835532,-3.246679,2.012155,6.236814,8.167146,0.826585,-8.856928,-3.679067,4.051218,-8.111984,-8.702526,9.854556,6.386126,1.311394,4.828410,-9.693654,-0.465182,-2.099950,-4.104355,2.411654,-8.911768,-2.419158,-2.683372,-9.513383,5.054038,8.444689,-9.831214,0.175379,-2.813661,-0.048569,-0.277282,-1.362121,0.842722,-2.033122,-8.888938,4.087486,-7.354505,-3.327186,-1.248152,-2.211035,0.749118,5.308389,1.733454,3.859876,-0.197561,1.623569,4.249024,2.401374,-2.888815,-8.381987,-1.216363,-6.331237,6.281167,2.191011,2.069624,0.703438,4.565448,-7.636841,-2.315562,5.030850,2.890406,5.606981,-1.010350,-9.207546,-8.016734,8.401689,-9.469749,-0.218779,-8.730248,-7.023309,1.577797,-8.941294,-8.804909,8.030070,6.261799,4.913667,-3.507099,4.314205,-5.660709,0.255400,-8.738234,4.530347,-6.150154,-1.117626,1.701176,-1.987851,-5.325112,3.227635,5.916961,3.625208,8.832610,-2.193624,8.416293,-2.657509,9.981811,3.904667,2.900799,-4.767556,-6.627528,-2.823710,3.225664,-1.745666,-9.377326,9.545186,0.353509,-4.884417,2.482998,-2.710216,-0.009846,-3.939504,-3.348402,2.740625,-6.736851,-3.742763,-1.180357,-2.254645,2.329539,3.673648,4.703654,-8.346662,-7.648562,6.777793,3.883056,-9.234799,5.544487,7.865717,-0.932362,5.478631,-1.291380,5.928660,-5.673077,5.587121,4.341115,8.133850,8.595961,2.188299,-0.608514,2.974942,-2.438185,6.085592,4.724899,0.071270,3.314711,-9.089365,-6.890475,-8.589052,-5.308644,3.151916,1.033569,-8.861939,-0.455086,-5.456085,-4.791537,-7.438376,7.366227,-9.338154,-0.126536,2.100772,-9.219330,2.324852,6.068240,-0.664205,6.475301,8.801666,-5.602125,9.525962,9.068501,-5.703992,-7.079509,-9.624238,-1.938214,-6.039638,7.320663,6.540322,3.828540,-3.808166,-3.751238,-7.910678,-5.238990,-8.392986,3.795272,5.579614,5.856393,9.057739,-7.596270,-8.889689,-2.459503,3.490471,-0.522356,-3.655528,-6.451511,-9.676040,1.972687,-1.256469,8.414271,-8.450695,6.186035,1.857601,2.765089,-0.884090,2.416846,3.823457,2.940461,0.009964,9.209946,8.412170,-5.966533,-8.958823,6.513911,-2.551508,-8.583959,9.732407,-7.146742,-7.220601,5.699513,-8.303460,5.034168,7.931090,-5.949141,-4.122601,-3.836259,8.998171,-2.268856,-7.442158,7.391832,-4.057186,6.838061,5.185459,-3.026190,-6.106639,-5.278102,-8.480063,-6.681268,-1.413129,-3.521036,-3.151575,-6.545083,-0.009283,3.612706,-6.784047,5.975449,-7.317583,0.279828,-3.636049,-8.903786,8.240072,0.310552,-0.084077,7.096861,4.886069,-0.825809,-4.271471,6.634342,1.750784,6.250142,5.991196,-9.435814,-5.721004,2.003780,0.938962,6.906882,-9.095605,0.640256,-0.888613,5.747298,-1.888757,4.335707,8.440471,4.437009,0.351262,-6.332269,4.998714,2.671182,-8.997178,3.502054,-9.331971,8.995329,8.902319,2.824712,1.751350,2.570159,-8.472675,1.562064,-7.205569,-7.018612,4.204346,-8.738009,0.777134,-8.592736,1.408292,-7.567436,-1.156689,-9.897666,-7.619514,8.728166,4.614188,6.775925,8.504901,5.645094,-9.781438,-1.999259,-5.128763,-7.798685,-4.326580,-9.134622,-2.181833,2.067693,-1.133694,0.611293,8.520240,-1.493251,3.853381,2.115185,-9.562686,-3.435399,-9.769289,8.944863,-4.701607,0.033955,-3.886164,-0.690546,-6.860438,-9.884724,1.100563,8.111344,-7.846742,5.080716,9.549939,8.835031,4.898804,-3.690394,-8.038713,6.298452,-5.191243,7.416082,-8.766578,0.845195,1.072640,2.124184,4.268186,2.759172,-5.678556,-6.223990,4.798839,-3.505356,3.495883,1.644400,-1.209989,-9.370915,7.682875,9.014077,9.174520,-8.686862,-3.134579,-5.314132,-9.622456,-8.179913,-2.488589,-5.768069,-8.694705,6.815628,-0.923916,5.815815,2.090212,7.166705,2.320715,-3.862056,3.559681,4.357576,-3.924452,-5.257878,6.532967,4.172906,4.946657,-1.738187,-1.049490,5.063890,-4.174294,3.745429,8.627489,-8.898976,-1.173166,8.983064,3.107906,3.021236,-1.957150,-1.586295,-8.861568], dtype = "float64")#candidate|5331|(2464,)|const|float64
call_5330 = relay.TupleGetItem(func_4035_call(relay.reshape(const_5331.astype('float64'), [14, 16, 11])), 1)
call_5332 = relay.TupleGetItem(func_4038_call(relay.reshape(const_5331.astype('float64'), [14, 16, 11])), 1)
func_3667_call = mod.get_global_var('func_3667')
func_3669_call = mutated_mod.get_global_var('func_3669')
call_5338 = relay.TupleGetItem(func_3667_call(), 0)
call_5339 = relay.TupleGetItem(func_3669_call(), 0)
output = relay.Tuple([call_5319,call_5330,const_5331,call_5338,])
output2 = relay.Tuple([call_5320,call_5332,const_5331,call_5339,])
func_5340 = relay.Function([], output)
mod['func_5340'] = func_5340
mod = relay.transform.InferType()(mod)
mutated_mod['func_5340'] = func_5340
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5340_call = mutated_mod.get_global_var('func_5340')
call_5341 = func_5340_call()
output = call_5341
func_5342 = relay.Function([], output)
mutated_mod['func_5342'] = func_5342
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3405_call = mod.get_global_var('func_3405')
func_3406_call = mutated_mod.get_global_var('func_3406')
call_5386 = relay.TupleGetItem(func_3405_call(), 0)
call_5387 = relay.TupleGetItem(func_3406_call(), 0)
func_1836_call = mod.get_global_var('func_1836')
func_1837_call = mutated_mod.get_global_var('func_1837')
call_5395 = func_1836_call()
call_5396 = func_1836_call()
func_3307_call = mod.get_global_var('func_3307')
func_3309_call = mutated_mod.get_global_var('func_3309')
call_5399 = relay.TupleGetItem(func_3307_call(), 0)
call_5400 = relay.TupleGetItem(func_3309_call(), 0)
func_3961_call = mod.get_global_var('func_3961')
func_3964_call = mutated_mod.get_global_var('func_3964')
var_5406 = relay.var("var_5406", dtype = "bool", shape = (1014,))#candidate|5406|(1014,)|var|bool
call_5405 = relay.TupleGetItem(func_3961_call(relay.reshape(var_5406.astype('bool'), [6, 13, 13])), 0)
call_5407 = relay.TupleGetItem(func_3964_call(relay.reshape(var_5406.astype('bool'), [6, 13, 13])), 0)
output = relay.Tuple([call_5386,call_5395,call_5399,call_5405,var_5406,])
output2 = relay.Tuple([call_5387,call_5396,call_5400,call_5407,var_5406,])
func_5408 = relay.Function([var_5406,], output)
mod['func_5408'] = func_5408
mod = relay.transform.InferType()(mod)
mutated_mod['func_5408'] = func_5408
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5409 = relay.var("var_5409", dtype = "bool", shape = (1014,))#candidate|5409|(1014,)|var|bool
func_5408_call = mutated_mod.get_global_var('func_5408')
call_5410 = func_5408_call(var_5409)
output = call_5410
func_5411 = relay.Function([var_5409], output)
mutated_mod['func_5411'] = func_5411
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3375_call = mod.get_global_var('func_3375')
func_3377_call = mutated_mod.get_global_var('func_3377')
call_5455 = relay.TupleGetItem(func_3375_call(), 0)
call_5456 = relay.TupleGetItem(func_3377_call(), 0)
output = relay.Tuple([call_5455,])
output2 = relay.Tuple([call_5456,])
func_5457 = relay.Function([], output)
mod['func_5457'] = func_5457
mod = relay.transform.InferType()(mod)
mutated_mod['func_5457'] = func_5457
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5457_call = mutated_mod.get_global_var('func_5457')
call_5458 = func_5457_call()
output = call_5458
func_5459 = relay.Function([], output)
mutated_mod['func_5459'] = func_5459
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2894_call = mod.get_global_var('func_2894')
func_2895_call = mutated_mod.get_global_var('func_2895')
call_5527 = relay.TupleGetItem(func_2894_call(), 0)
call_5528 = relay.TupleGetItem(func_2895_call(), 0)
func_3879_call = mod.get_global_var('func_3879')
func_3881_call = mutated_mod.get_global_var('func_3881')
call_5557 = func_3879_call()
call_5558 = func_3879_call()
output = relay.Tuple([call_5527,call_5557,])
output2 = relay.Tuple([call_5528,call_5558,])
func_5561 = relay.Function([], output)
mod['func_5561'] = func_5561
mod = relay.transform.InferType()(mod)
mutated_mod['func_5561'] = func_5561
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5561_call = mutated_mod.get_global_var('func_5561')
call_5562 = func_5561_call()
output = call_5562
func_5563 = relay.Function([], output)
mutated_mod['func_5563'] = func_5563
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5564 = relay.var("var_5564", dtype = "float32", shape = ())#candidate|5564|()|var|float32
var_5565 = relay.var("var_5565", dtype = "float32", shape = (15, 1))#candidate|5565|(15, 1)|var|float32
bop_5566 = relay.floor_divide(var_5564.astype('float32'), var_5565.astype('float32')) # shape=(15, 1)
output = relay.Tuple([bop_5566,])
output2 = relay.Tuple([bop_5566,])
func_5569 = relay.Function([var_5564,var_5565,], output)
mod['func_5569'] = func_5569
mod = relay.transform.InferType()(mod)
var_5570 = relay.var("var_5570", dtype = "float32", shape = ())#candidate|5570|()|var|float32
var_5571 = relay.var("var_5571", dtype = "float32", shape = (15, 1))#candidate|5571|(15, 1)|var|float32
output = func_5569(var_5570,var_5571,)
func_5572 = relay.Function([var_5570,var_5571,], output)
mutated_mod['func_5572'] = func_5572
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4427_call = mod.get_global_var('func_4427')
func_4429_call = mutated_mod.get_global_var('func_4429')
call_5617 = func_4427_call()
call_5618 = func_4427_call()
func_3499_call = mod.get_global_var('func_3499')
func_3501_call = mutated_mod.get_global_var('func_3501')
const_5638 = relay.const([1.278570,9.961223,-8.513447,4.196252,5.192681,-8.624357,4.697355,-0.748088,7.857695,-1.826362,-8.738392,-1.615805,3.767275,-4.069200,6.071345,8.525800,-7.873954,1.109239,-7.923583,7.567276,6.502573,-8.598997,2.669895,-6.791963,-2.276179,8.557875,-7.088473,-9.074227,-0.628874,-9.584439,-3.237906,-0.851814,-9.863592,2.595702,-6.816293,-4.584308,3.909889,-1.074647,-7.389090,3.363906,-6.947862,2.992272,1.227768,-7.727086,-9.661477,5.501639,-7.955273,-6.192024,2.177195,7.838491,-8.711117,5.157009,-0.401900,-7.421067,-6.704431,7.381628,-6.067635,9.116485,8.836243,4.655630,-6.082815,-5.283931,-6.045212,-5.222641,-1.641260,-1.130425,5.853342,-4.996508,0.211401,-8.333771,3.594757,-6.592679,-5.858368,5.189699,2.051353,-3.743976,7.500265,-1.145457,9.697305,-9.907845,8.436573,-9.553179,-3.819156,-1.192505,4.707965,-0.644804,1.897086,0.917315,-2.200478,4.693241,7.571198,-5.564175,-2.762179,3.827510,1.942885,9.532765,-1.729272,6.376222,8.160914,-9.350781,2.324696,4.896527,-7.395767,-4.210714,3.352638,-0.072623,6.592496,9.417763,-1.206851,3.269017,-8.087443,-4.862005,-9.577886,-8.700361,5.894077,8.452664,5.106387,8.073387,2.509583,-0.327702,6.402573,4.862903,9.865756,-2.807297,6.151097,4.846895,4.048953,-7.455303,-3.386458,8.345849,-6.172485,-8.038594,2.465283,2.404553,2.225073,4.275142,-4.396351,-0.552840,0.967757,8.223769,-8.193026,8.073383,-5.110353,-3.404873,-8.570082,2.418656,-5.056649,-5.604648,3.693391,-0.506151], dtype = "float32")#candidate|5638|(150,)|const|float32
call_5637 = relay.TupleGetItem(func_3499_call(relay.reshape(const_5638.astype('float32'), [15, 10, 1])), 1)
call_5639 = relay.TupleGetItem(func_3501_call(relay.reshape(const_5638.astype('float32'), [15, 10, 1])), 1)
func_4427_call = mod.get_global_var('func_4427')
func_4429_call = mutated_mod.get_global_var('func_4429')
call_5643 = func_4427_call()
call_5644 = func_4427_call()
output = relay.Tuple([call_5617,call_5637,const_5638,call_5643,])
output2 = relay.Tuple([call_5618,call_5639,const_5638,call_5644,])
func_5650 = relay.Function([], output)
mod['func_5650'] = func_5650
mod = relay.transform.InferType()(mod)
output = func_5650()
func_5651 = relay.Function([], output)
mutated_mod['func_5651'] = func_5651
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1814_call = mod.get_global_var('func_1814')
func_1816_call = mutated_mod.get_global_var('func_1816')
call_5676 = relay.TupleGetItem(func_1814_call(), 1)
call_5677 = relay.TupleGetItem(func_1816_call(), 1)
output = relay.Tuple([call_5676,])
output2 = relay.Tuple([call_5677,])
func_5683 = relay.Function([], output)
mod['func_5683'] = func_5683
mod = relay.transform.InferType()(mod)
mutated_mod['func_5683'] = func_5683
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5683_call = mutated_mod.get_global_var('func_5683')
call_5684 = func_5683_call()
output = call_5684
func_5685 = relay.Function([], output)
mutated_mod['func_5685'] = func_5685
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1814_call = mod.get_global_var('func_1814')
func_1816_call = mutated_mod.get_global_var('func_1816')
call_5717 = relay.TupleGetItem(func_1814_call(), 1)
call_5718 = relay.TupleGetItem(func_1816_call(), 1)
func_4256_call = mod.get_global_var('func_4256')
func_4257_call = mutated_mod.get_global_var('func_4257')
call_5727 = func_4256_call()
call_5728 = func_4256_call()
func_621_call = mod.get_global_var('func_621')
func_623_call = mutated_mod.get_global_var('func_623')
call_5733 = relay.TupleGetItem(func_621_call(), 0)
call_5734 = relay.TupleGetItem(func_623_call(), 0)
func_3499_call = mod.get_global_var('func_3499')
func_3501_call = mutated_mod.get_global_var('func_3501')
var_5739 = relay.var("var_5739", dtype = "float32", shape = (150, 1))#candidate|5739|(150, 1)|var|float32
call_5738 = relay.TupleGetItem(func_3499_call(relay.reshape(var_5739.astype('float32'), [15, 10, 1])), 0)
call_5740 = relay.TupleGetItem(func_3501_call(relay.reshape(var_5739.astype('float32'), [15, 10, 1])), 0)
func_2019_call = mod.get_global_var('func_2019')
func_2020_call = mutated_mod.get_global_var('func_2020')
call_5744 = relay.TupleGetItem(func_2019_call(), 0)
call_5745 = relay.TupleGetItem(func_2020_call(), 0)
func_3696_call = mod.get_global_var('func_3696')
func_3698_call = mutated_mod.get_global_var('func_3698')
var_5757 = relay.var("var_5757", dtype = "float32", shape = (240,))#candidate|5757|(240,)|var|float32
call_5756 = func_3696_call(relay.reshape(var_5757.astype('float32'), [12, 4, 5]))
call_5758 = func_3696_call(relay.reshape(var_5757.astype('float32'), [12, 4, 5]))
bop_5770 = relay.add(call_5717.astype('float64'), relay.reshape(call_5727.astype('float64'), relay.shape_of(call_5717))) # shape=(1, 16, 11)
bop_5773 = relay.add(call_5718.astype('float64'), relay.reshape(call_5728.astype('float64'), relay.shape_of(call_5718))) # shape=(1, 16, 11)
func_4518_call = mod.get_global_var('func_4518')
func_4520_call = mutated_mod.get_global_var('func_4520')
call_5776 = relay.TupleGetItem(func_4518_call(), 2)
call_5777 = relay.TupleGetItem(func_4520_call(), 2)
output = relay.Tuple([call_5733,call_5738,var_5739,call_5744,call_5756,var_5757,bop_5770,call_5776,])
output2 = relay.Tuple([call_5734,call_5740,var_5739,call_5745,call_5758,var_5757,bop_5773,call_5777,])
func_5785 = relay.Function([var_5739,var_5757,], output)
mod['func_5785'] = func_5785
mod = relay.transform.InferType()(mod)
mutated_mod['func_5785'] = func_5785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5785_call = mutated_mod.get_global_var('func_5785')
var_5787 = relay.var("var_5787", dtype = "float32", shape = (150, 1))#candidate|5787|(150, 1)|var|float32
var_5788 = relay.var("var_5788", dtype = "float32", shape = (240,))#candidate|5788|(240,)|var|float32
call_5786 = func_5785_call(var_5787,var_5788,)
output = call_5786
func_5789 = relay.Function([var_5787,var_5788,], output)
mutated_mod['func_5789'] = func_5789
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5650_call = mod.get_global_var('func_5650')
func_5651_call = mutated_mod.get_global_var('func_5651')
call_5816 = relay.TupleGetItem(func_5650_call(), 2)
call_5817 = relay.TupleGetItem(func_5651_call(), 2)
func_4256_call = mod.get_global_var('func_4256')
func_4257_call = mutated_mod.get_global_var('func_4257')
call_5821 = func_4256_call()
call_5822 = func_4256_call()
output = relay.Tuple([call_5816,call_5821,])
output2 = relay.Tuple([call_5817,call_5822,])
func_5826 = relay.Function([], output)
mod['func_5826'] = func_5826
mod = relay.transform.InferType()(mod)
mutated_mod['func_5826'] = func_5826
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5826_call = mutated_mod.get_global_var('func_5826')
call_5827 = func_5826_call()
output = call_5827
func_5828 = relay.Function([], output)
mutated_mod['func_5828'] = func_5828
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5236_call = mod.get_global_var('func_5236')
func_5237_call = mutated_mod.get_global_var('func_5237')
call_5842 = relay.TupleGetItem(func_5236_call(), 0)
call_5843 = relay.TupleGetItem(func_5237_call(), 0)
func_5457_call = mod.get_global_var('func_5457')
func_5459_call = mutated_mod.get_global_var('func_5459')
call_5889 = relay.TupleGetItem(func_5457_call(), 0)
call_5890 = relay.TupleGetItem(func_5459_call(), 0)
bop_5902 = relay.power(call_5889.astype('float32'), call_5842.astype('float32')) # shape=(12, 16, 11)
bop_5905 = relay.power(call_5890.astype('float32'), call_5843.astype('float32')) # shape=(12, 16, 11)
func_5785_call = mod.get_global_var('func_5785')
func_5789_call = mutated_mod.get_global_var('func_5789')
const_5910 = relay.const([-5.133172,-7.004891,-7.348097,-6.837643,9.962495,-2.277627,6.645297,-9.546063,6.198652,-8.517615,8.558977,1.585047,-8.390567,-2.873512,2.723121,-2.744851,-5.256213,0.378866,-5.412191,-2.932623,-0.218127,0.390434,-3.958948,8.799947,-1.285939,1.032038,9.626682,9.898508,-5.660384,-8.997355,3.922831,-3.625833,9.185326,-9.582909,6.313643,9.102797,-9.468596,9.208814,4.282490,-6.918724,7.778674,0.637154,-1.635946,-0.114811,7.222104,-4.176231,6.278963,-8.236233,7.063364,-9.671692,3.698119,-7.779382,-3.271091,-4.791025,-8.084762,3.520819,1.287510,-3.769807,5.492242,-4.551970,1.340850,8.712022,2.461053,-3.472361,0.572395,8.002059,-0.019803,-6.871807,-9.855131,-8.037121,7.291178,-8.601664,2.661157,6.590384,9.276982,1.125721,-6.640524,3.217266,-3.228158,-0.225130,-7.257606,9.621727,5.985983,3.516282,-9.867407,-7.918006,8.435941,-2.262524,-4.413577,-0.102691,-7.636807,-8.934394,-6.442142,-2.427938,5.187207,-9.368293,5.129360,5.194728,9.104900,-8.011744,-6.770829,-7.908909,8.704841,-4.362615,-5.986952,0.040458,-6.914021,0.776467,5.677788,-0.920107,9.706816,-6.514576,-3.585174,6.392719,-9.937758,7.375390,4.935618,-0.841856,6.563272,-1.822471,0.727743,-8.419162,6.297943,6.807565,0.819267,-5.712745,-1.056215,8.906185,-3.021040,3.104601,-2.779963,0.768051,-4.429866,-6.707576,9.648169,0.643344,-7.587021,-6.246603,7.609299,-8.474862,9.018712,5.069176,4.413881,-8.339281,-7.939721,-0.260238,8.878677,-7.536283,-3.740719,7.769408], dtype = "float32")#candidate|5910|(150,)|const|float32
const_5911 = relay.const([[4.914382,-8.436415,-8.182200,-6.262485,-6.487149,1.908314,6.050618,-8.698033,-3.584711,-6.604312,0.200638,-5.396151,-4.557229,8.830781,3.485423,3.541861,7.928545,8.601827,-1.382388,-7.307808,8.162330,9.802266,4.978587,8.335935,2.098546,-5.184392,-8.273481,9.407296,-4.459742,2.671564,-2.055042,-7.441080,1.283951,-4.306875,-4.144595,-0.280988,-0.111692,-1.608010,3.660045,3.544596,5.372627,4.201674,-8.800722,-5.198724,5.239791,0.791837,5.450847,8.591122,9.242084,-7.221126,-7.248437,2.264274,-7.506918,-6.603721,8.597522,9.380203,1.918182,-3.211704,1.336923,-8.912010],[9.499036,7.617466,-2.171110,7.699173,-8.870969,7.228315,-3.239536,9.647973,-4.449434,-0.314683,9.866032,4.559885,-9.374194,2.157523,-9.138283,-2.267139,0.371822,-2.514335,-6.192591,4.907696,9.774534,-9.576706,7.025082,8.005872,5.922909,-0.397553,1.878252,-6.455374,0.954561,7.413136,0.125032,2.445459,8.268310,-6.243545,6.322250,-2.935478,-3.729819,-9.463029,-0.261015,-8.400683,9.388965,4.210355,-0.471148,-1.846361,6.955739,6.428581,9.173880,2.826463,8.147869,7.446616,1.349359,9.890164,-6.978772,7.869431,1.512156,-4.643183,-7.275482,4.742263,5.074941,4.451573],[-9.854048,-2.900709,5.386368,-2.630278,1.204449,-7.312270,-9.961142,2.099671,2.940193,8.971714,-7.455429,-9.952044,8.775450,6.985279,6.156882,7.469159,6.731185,-7.273816,0.618449,1.865788,-5.218122,2.826383,-4.789257,5.122970,-2.761286,-1.784393,-3.914221,3.191454,7.966740,4.184434,2.378687,-0.578437,-7.770458,-1.094539,4.019418,-6.642231,6.537249,-9.901126,-0.331031,5.235702,6.870852,0.219388,-1.121191,6.889139,1.334536,0.750965,-8.948944,-8.051618,-6.724162,-1.754478,-2.680580,2.559276,4.531878,5.775660,6.551416,-6.779796,1.530404,-5.556880,-4.662438,8.441293],[-7.163986,4.472058,-0.885928,1.763946,-6.685232,-7.827075,3.928562,-5.310478,-4.265791,-2.112295,-2.611945,-9.715889,3.807607,-9.181072,-1.003668,7.627890,-3.839683,4.271400,-1.249535,6.104623,6.342587,-2.515196,3.592639,1.237036,-0.118957,0.949896,-4.233566,-3.994367,-1.254842,9.173182,-2.381864,-1.205997,5.270143,1.439257,-1.168536,-6.995629,0.947638,-5.606432,3.198324,-7.067013,-4.407298,2.385453,3.939032,-8.028983,-1.550128,-8.223343,-4.229276,9.774442,6.719782,-7.773960,0.692441,4.417902,2.668908,4.638611,2.859571,-4.760706,5.997322,-1.005604,-4.675242,-0.719355]], dtype = "float32")#candidate|5911|(4, 60)|const|float32
call_5909 = relay.TupleGetItem(func_5785_call(relay.reshape(const_5910.astype('float32'), [150, 1]), relay.reshape(const_5911.astype('float32'), [240,]), ), 7)
call_5912 = relay.TupleGetItem(func_5789_call(relay.reshape(const_5910.astype('float32'), [150, 1]), relay.reshape(const_5911.astype('float32'), [240,]), ), 7)
output = relay.Tuple([bop_5902,call_5909,const_5910,const_5911,])
output2 = relay.Tuple([bop_5905,call_5912,const_5910,const_5911,])
func_5918 = relay.Function([], output)
mod['func_5918'] = func_5918
mod = relay.transform.InferType()(mod)
mutated_mod['func_5918'] = func_5918
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5918_call = mutated_mod.get_global_var('func_5918')
call_5919 = func_5918_call()
output = call_5919
func_5920 = relay.Function([], output)
mutated_mod['func_5920'] = func_5920
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5561_call = mod.get_global_var('func_5561')
func_5563_call = mutated_mod.get_global_var('func_5563')
call_5923 = relay.TupleGetItem(func_5561_call(), 1)
call_5924 = relay.TupleGetItem(func_5563_call(), 1)
output = call_5923
output2 = call_5924
func_5930 = relay.Function([], output)
mod['func_5930'] = func_5930
mod = relay.transform.InferType()(mod)
mutated_mod['func_5930'] = func_5930
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5930_call = mutated_mod.get_global_var('func_5930')
call_5931 = func_5930_call()
output = call_5931
func_5932 = relay.Function([], output)
mutated_mod['func_5932'] = func_5932
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4427_call = mod.get_global_var('func_4427')
func_4429_call = mutated_mod.get_global_var('func_4429')
call_5935 = func_4427_call()
call_5936 = func_4427_call()
var_5940 = relay.var("var_5940", dtype = "bool", shape = (1, 16, 11))#candidate|5940|(1, 16, 11)|var|bool
bop_5941 = relay.bitwise_or(call_5935.astype('int16'), relay.reshape(var_5940.astype('int16'), relay.shape_of(call_5935))) # shape=(1, 16, 11)
bop_5944 = relay.bitwise_or(call_5936.astype('int16'), relay.reshape(var_5940.astype('int16'), relay.shape_of(call_5936))) # shape=(1, 16, 11)
var_5953 = relay.var("var_5953", dtype = "bool", shape = (5, 16, 11))#candidate|5953|(5, 16, 11)|var|bool
bop_5954 = relay.right_shift(var_5940.astype('uint8'), var_5953.astype('uint8')) # shape=(5, 16, 11)
func_3961_call = mod.get_global_var('func_3961')
func_3964_call = mutated_mod.get_global_var('func_3964')
var_5965 = relay.var("var_5965", dtype = "bool", shape = (1, 1014))#candidate|5965|(1, 1014)|var|bool
call_5964 = relay.TupleGetItem(func_3961_call(relay.reshape(var_5965.astype('bool'), [6, 13, 13])), 1)
call_5966 = relay.TupleGetItem(func_3964_call(relay.reshape(var_5965.astype('bool'), [6, 13, 13])), 1)
output = relay.Tuple([bop_5941,bop_5954,call_5964,var_5965,])
output2 = relay.Tuple([bop_5944,bop_5954,call_5966,var_5965,])
func_5969 = relay.Function([var_5940,var_5953,var_5965,], output)
mod['func_5969'] = func_5969
mod = relay.transform.InferType()(mod)
var_5970 = relay.var("var_5970", dtype = "bool", shape = (1, 16, 11))#candidate|5970|(1, 16, 11)|var|bool
var_5971 = relay.var("var_5971", dtype = "bool", shape = (5, 16, 11))#candidate|5971|(5, 16, 11)|var|bool
var_5972 = relay.var("var_5972", dtype = "bool", shape = (1, 1014))#candidate|5972|(1, 1014)|var|bool
output = func_5969(var_5970,var_5971,var_5972,)
func_5973 = relay.Function([var_5970,var_5971,var_5972,], output)
mutated_mod['func_5973'] = func_5973
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1878_call = mod.get_global_var('func_1878')
func_1880_call = mutated_mod.get_global_var('func_1880')
call_5993 = func_1878_call()
call_5994 = func_1878_call()
output = call_5993
output2 = call_5994
func_5995 = relay.Function([], output)
mod['func_5995'] = func_5995
mod = relay.transform.InferType()(mod)
mutated_mod['func_5995'] = func_5995
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5995_call = mutated_mod.get_global_var('func_5995')
call_5996 = func_5995_call()
output = call_5996
func_5997 = relay.Function([], output)
mutated_mod['func_5997'] = func_5997
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2113_call = mod.get_global_var('func_2113')
func_2114_call = mutated_mod.get_global_var('func_2114')
call_6054 = relay.TupleGetItem(func_2113_call(), 0)
call_6055 = relay.TupleGetItem(func_2114_call(), 0)
func_964_call = mod.get_global_var('func_964')
func_966_call = mutated_mod.get_global_var('func_966')
call_6060 = func_964_call()
call_6061 = func_964_call()
output = relay.Tuple([call_6054,call_6060,])
output2 = relay.Tuple([call_6055,call_6061,])
func_6065 = relay.Function([], output)
mod['func_6065'] = func_6065
mod = relay.transform.InferType()(mod)
mutated_mod['func_6065'] = func_6065
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6065_call = mutated_mod.get_global_var('func_6065')
call_6066 = func_6065_call()
output = call_6066
func_6067 = relay.Function([], output)
mutated_mod['func_6067'] = func_6067
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5159_call = mod.get_global_var('func_5159')
func_5161_call = mutated_mod.get_global_var('func_5161')
call_6068 = relay.TupleGetItem(func_5159_call(), 0)
call_6069 = relay.TupleGetItem(func_5161_call(), 0)
func_1651_call = mod.get_global_var('func_1651')
func_1653_call = mutated_mod.get_global_var('func_1653')
call_6073 = relay.TupleGetItem(func_1651_call(), 2)
call_6074 = relay.TupleGetItem(func_1653_call(), 2)
func_1205_call = mod.get_global_var('func_1205')
func_1206_call = mutated_mod.get_global_var('func_1206')
call_6090 = func_1205_call()
call_6091 = func_1205_call()
output = relay.Tuple([call_6068,call_6073,call_6090,])
output2 = relay.Tuple([call_6069,call_6074,call_6091,])
func_6110 = relay.Function([], output)
mod['func_6110'] = func_6110
mod = relay.transform.InferType()(mod)
mutated_mod['func_6110'] = func_6110
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6110_call = mutated_mod.get_global_var('func_6110')
call_6111 = func_6110_call()
output = call_6111
func_6112 = relay.Function([], output)
mutated_mod['func_6112'] = func_6112
mutated_mod = relay.transform.InferType()(mutated_mod)
func_854_call = mod.get_global_var('func_854')
func_856_call = mutated_mod.get_global_var('func_856')
call_6152 = relay.TupleGetItem(func_854_call(), 0)
call_6153 = relay.TupleGetItem(func_856_call(), 0)
const_6168 = relay.constdtype = "float32")#candidate|6168|(14, 16, 11)|const|float32
bop_6169 = relay.right_shift(call_6152.astype('uint64'), const_6168.astype('uint64')) # shape=(14, 16, 11)
bop_6172 = relay.right_shift(call_6153.astype('uint64'), const_6168.astype('uint64')) # shape=(14, 16, 11)
func_4481_call = mod.get_global_var('func_4481')
func_4483_call = mutated_mod.get_global_var('func_4483')
var_6176 = relay.var("var_6176", dtype = "int16", shape = (432,))#candidate|6176|(432,)|var|int16
call_6175 = relay.TupleGetItem(func_4481_call(relay.reshape(var_6176.astype('int16'), [9, 3, 16])), 1)
call_6177 = relay.TupleGetItem(func_4483_call(relay.reshape(var_6176.astype('int16'), [9, 3, 16])), 1)
func_4103_call = mod.get_global_var('func_4103')
func_4105_call = mutated_mod.get_global_var('func_4105')
call_6179 = relay.TupleGetItem(func_4103_call(), 3)
call_6180 = relay.TupleGetItem(func_4105_call(), 3)
output = relay.Tuple([bop_6169,call_6175,var_6176,call_6179,])
output2 = relay.Tuple([bop_6172,call_6177,var_6176,call_6180,])
func_6182 = relay.Function([var_6176,], output)
mod['func_6182'] = func_6182
mod = relay.transform.InferType()(mod)
mutated_mod['func_6182'] = func_6182
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6183 = relay.var("var_6183", dtype = "int16", shape = (432,))#candidate|6183|(432,)|var|int16
func_6182_call = mutated_mod.get_global_var('func_6182')
call_6184 = func_6182_call(var_6183)
output = call_6184
func_6185 = relay.Function([var_6183], output)
mutated_mod['func_6185'] = func_6185
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4703_call = mod.get_global_var('func_4703')
func_4705_call = mutated_mod.get_global_var('func_4705')
call_6206 = relay.TupleGetItem(func_4703_call(), 0)
call_6207 = relay.TupleGetItem(func_4705_call(), 0)
func_5067_call = mod.get_global_var('func_5067')
func_5069_call = mutated_mod.get_global_var('func_5069')
call_6222 = relay.TupleGetItem(func_5067_call(), 0)
call_6223 = relay.TupleGetItem(func_5069_call(), 0)
func_4871_call = mod.get_global_var('func_4871')
func_4872_call = mutated_mod.get_global_var('func_4872')
call_6226 = relay.TupleGetItem(func_4871_call(), 0)
call_6227 = relay.TupleGetItem(func_4872_call(), 0)
func_2113_call = mod.get_global_var('func_2113')
func_2114_call = mutated_mod.get_global_var('func_2114')
call_6235 = relay.TupleGetItem(func_2113_call(), 0)
call_6236 = relay.TupleGetItem(func_2114_call(), 0)
func_5258_call = mod.get_global_var('func_5258')
func_5260_call = mutated_mod.get_global_var('func_5260')
call_6239 = func_5258_call()
call_6240 = func_5258_call()
func_4103_call = mod.get_global_var('func_4103')
func_4105_call = mutated_mod.get_global_var('func_4105')
call_6259 = relay.TupleGetItem(func_4103_call(), 4)
call_6260 = relay.TupleGetItem(func_4105_call(), 4)
func_747_call = mod.get_global_var('func_747')
func_748_call = mutated_mod.get_global_var('func_748')
call_6266 = relay.TupleGetItem(func_747_call(), 0)
call_6267 = relay.TupleGetItem(func_748_call(), 0)
output = relay.Tuple([call_6206,call_6222,call_6226,call_6235,call_6239,call_6259,call_6266,])
output2 = relay.Tuple([call_6207,call_6223,call_6227,call_6236,call_6240,call_6260,call_6267,])
func_6272 = relay.Function([], output)
mod['func_6272'] = func_6272
mod = relay.transform.InferType()(mod)
mutated_mod['func_6272'] = func_6272
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6272_call = mutated_mod.get_global_var('func_6272')
call_6273 = func_6272_call()
output = call_6273
func_6274 = relay.Function([], output)
mutated_mod['func_6274'] = func_6274
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3941_call = mod.get_global_var('func_3941')
func_3942_call = mutated_mod.get_global_var('func_3942')
call_6309 = func_3941_call()
call_6310 = func_3941_call()
output = relay.Tuple([call_6309,])
output2 = relay.Tuple([call_6310,])
func_6328 = relay.Function([], output)
mod['func_6328'] = func_6328
mod = relay.transform.InferType()(mod)
output = func_6328()
func_6329 = relay.Function([], output)
mutated_mod['func_6329'] = func_6329
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2450_call = mod.get_global_var('func_2450')
func_2452_call = mutated_mod.get_global_var('func_2452')
call_6339 = relay.TupleGetItem(func_2450_call(), 1)
call_6340 = relay.TupleGetItem(func_2452_call(), 1)
func_2326_call = mod.get_global_var('func_2326')
func_2328_call = mutated_mod.get_global_var('func_2328')
var_6345 = relay.var("var_6345", dtype = "uint8", shape = (1980,))#candidate|6345|(1980,)|var|uint8
call_6344 = relay.TupleGetItem(func_2326_call(relay.reshape(var_6345.astype('uint8'), [12, 15, 11])), 0)
call_6346 = relay.TupleGetItem(func_2328_call(relay.reshape(var_6345.astype('uint8'), [12, 15, 11])), 0)
func_3941_call = mod.get_global_var('func_3941')
func_3942_call = mutated_mod.get_global_var('func_3942')
call_6355 = func_3941_call()
call_6356 = func_3941_call()
bop_6360 = relay.mod(var_6345.astype('float32'), relay.reshape(call_6344.astype('float32'), relay.shape_of(var_6345))) # shape=(1980,)
bop_6363 = relay.mod(var_6345.astype('float32'), relay.reshape(call_6346.astype('float32'), relay.shape_of(var_6345))) # shape=(1980,)
output = relay.Tuple([call_6339,call_6355,bop_6360,])
output2 = relay.Tuple([call_6340,call_6356,bop_6363,])
func_6364 = relay.Function([var_6345,], output)
mod['func_6364'] = func_6364
mod = relay.transform.InferType()(mod)
var_6365 = relay.var("var_6365", dtype = "uint8", shape = (1980,))#candidate|6365|(1980,)|var|uint8
output = func_6364(var_6365)
func_6366 = relay.Function([var_6365], output)
mutated_mod['func_6366'] = func_6366
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5995_call = mod.get_global_var('func_5995')
func_5997_call = mutated_mod.get_global_var('func_5997')
call_6413 = func_5995_call()
call_6414 = func_5995_call()
output = call_6413
output2 = call_6414
func_6427 = relay.Function([], output)
mod['func_6427'] = func_6427
mod = relay.transform.InferType()(mod)
mutated_mod['func_6427'] = func_6427
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6427_call = mutated_mod.get_global_var('func_6427')
call_6428 = func_6427_call()
output = call_6428
func_6429 = relay.Function([], output)
mutated_mod['func_6429'] = func_6429
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6440 = relay.var("var_6440", dtype = "uint32", shape = (7, 12, 5))#candidate|6440|(7, 12, 5)|var|uint32
var_6441 = relay.var("var_6441", dtype = "uint32", shape = (7, 12, 5))#candidate|6441|(7, 12, 5)|var|uint32
bop_6442 = relay.not_equal(var_6440.astype('bool'), relay.reshape(var_6441.astype('bool'), relay.shape_of(var_6440))) # shape=(7, 12, 5)
func_3879_call = mod.get_global_var('func_3879')
func_3881_call = mutated_mod.get_global_var('func_3881')
call_6448 = func_3879_call()
call_6449 = func_3879_call()
uop_6461 = relay.atan(var_6440.astype('float32')) # shape=(7, 12, 5)
uop_6467 = relay.log(uop_6461.astype('float64')) # shape=(7, 12, 5)
output = relay.Tuple([bop_6442,call_6448,uop_6467,])
output2 = relay.Tuple([bop_6442,call_6449,uop_6467,])
func_6475 = relay.Function([var_6440,var_6441,], output)
mod['func_6475'] = func_6475
mod = relay.transform.InferType()(mod)
mutated_mod['func_6475'] = func_6475
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6475_call = mutated_mod.get_global_var('func_6475')
var_6477 = relay.var("var_6477", dtype = "uint32", shape = (7, 12, 5))#candidate|6477|(7, 12, 5)|var|uint32
var_6478 = relay.var("var_6478", dtype = "uint32", shape = (7, 12, 5))#candidate|6478|(7, 12, 5)|var|uint32
call_6476 = func_6475_call(var_6477,var_6478,)
output = call_6476
func_6479 = relay.Function([var_6477,var_6478,], output)
mutated_mod['func_6479'] = func_6479
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2728_call = mod.get_global_var('func_2728')
func_2730_call = mutated_mod.get_global_var('func_2730')
call_6481 = relay.TupleGetItem(func_2728_call(), 0)
call_6482 = relay.TupleGetItem(func_2730_call(), 0)
func_5569_call = mod.get_global_var('func_5569')
func_5572_call = mutated_mod.get_global_var('func_5572')
const_6484 = relay.const(-6.604327, dtype = "float32")#candidate|6484|()|const|float32
const_6485 = relay.const([-8.201481,0.387265,8.143763,4.819532,-3.492768,-6.913752,8.605725,8.997616,3.425033,-0.771808,-9.661814,-8.606935,-3.035220,4.937690,2.746356], dtype = "float32")#candidate|6485|(15,)|const|float32
call_6483 = relay.TupleGetItem(func_5569_call(relay.reshape(const_6484.astype('float32'), []), relay.reshape(const_6485.astype('float32'), [15, 1]), ), 0)
call_6486 = relay.TupleGetItem(func_5572_call(relay.reshape(const_6484.astype('float32'), []), relay.reshape(const_6485.astype('float32'), [15, 1]), ), 0)
output = relay.Tuple([call_6481,call_6483,const_6484,const_6485,])
output2 = relay.Tuple([call_6482,call_6486,const_6484,const_6485,])
func_6487 = relay.Function([], output)
mod['func_6487'] = func_6487
mod = relay.transform.InferType()(mod)
mutated_mod['func_6487'] = func_6487
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6487_call = mutated_mod.get_global_var('func_6487')
call_6488 = func_6487_call()
output = call_6488
func_6489 = relay.Function([], output)
mutated_mod['func_6489'] = func_6489
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3879_call = mod.get_global_var('func_3879')
func_3881_call = mutated_mod.get_global_var('func_3881')
call_6504 = func_3879_call()
call_6505 = func_3879_call()
output = relay.Tuple([call_6504,])
output2 = relay.Tuple([call_6505,])
func_6515 = relay.Function([], output)
mod['func_6515'] = func_6515
mod = relay.transform.InferType()(mod)
mutated_mod['func_6515'] = func_6515
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6515_call = mutated_mod.get_global_var('func_6515')
call_6516 = func_6515_call()
output = call_6516
func_6517 = relay.Function([], output)
mutated_mod['func_6517'] = func_6517
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1205_call = mod.get_global_var('func_1205')
func_1206_call = mutated_mod.get_global_var('func_1206')
call_6535 = func_1205_call()
call_6536 = func_1205_call()
const_6543 = relay.const([[[4,5,2,6,-2,-5,10,10,7,-6,-5],[-1,-2,-8,-9,-4,-6,-7,-8,8,-6,4],[3,9,10,-8,-10,7,-10,-10,7,2,-4],[4,1,-1,6,-2,9,-10,9,-6,-7,-2],[2,-5,-5,-2,5,-10,-7,3,8,2,-7],[8,10,-6,9,-5,-7,9,7,-2,5,-9],[4,-8,7,10,4,-9,-2,-3,-2,-3,1],[2,1,-10,-5,1,-1,10,10,-2,-7,-9],[8,1,2,-9,-6,-1,-3,5,2,-7,-6],[-2,6,1,7,-6,3,6,-3,-10,-8,-6],[-6,10,9,-2,4,-3,10,-6,5,-3,-1],[-6,6,5,-1,-6,4,-6,1,9,-1,-6],[6,7,7,-10,3,-5,5,4,1,-2,3],[-7,5,-2,8,-9,-3,6,10,-8,-5,1],[-5,6,4,10,-8,-4,2,-1,-3,5,-9],[-5,6,-2,-8,-8,8,6,6,1,-2,-8]],[[10,-7,2,-10,10,9,-9,-4,4,8,10],[5,-2,9,-1,2,-6,6,-8,8,4,-1],[-10,9,-1,-5,-3,-6,-9,2,-1,3,1],[7,8,7,-5,-4,-5,9,2,-6,6,-3],[-6,5,9,-5,9,-10,-9,10,5,-1,9],[-6,-5,7,2,-6,-4,6,-1,4,4,9],[-2,7,3,8,7,-2,-6,-6,10,9,-5],[9,-5,-7,10,-2,5,10,7,-1,-1,9],[-3,-8,-6,-8,1,8,2,-4,-3,3,-8],[-7,2,-9,10,-2,10,-5,6,-7,3,-4],[-3,5,7,-4,-2,9,-9,-7,-6,-4,-1],[-5,4,-6,9,2,-10,-8,7,-1,-2,-5],[9,-2,2,-3,4,-2,4,-3,-7,7,-2],[-4,4,1,4,-9,-9,9,-4,6,4,4],[5,-1,4,2,2,8,3,-3,7,-1,-2],[10,3,-4,4,-5,9,5,-3,-3,5,2]],[[-1,5,7,-4,6,-5,-10,6,-8,4,6],[-3,6,-5,-7,1,9,6,3,7,4,8],[2,7,-4,9,10,-10,-8,-9,9,-1,-9],[-8,-8,4,6,7,6,2,-5,-2,3,-1],[-5,3,2,4,-4,-6,7,6,1,-5,-7],[9,-6,-9,10,-9,2,-1,-10,8,9,-8],[-3,2,-8,-1,4,1,8,10,-9,5,2],[6,4,8,7,2,8,3,2,5,1,-5],[-3,9,3,1,-1,-9,-2,-2,3,-8,9],[9,3,-7,-7,3,5,-1,-7,6,-3,5],[-2,-4,-3,5,4,-3,-7,3,-3,5,-10],[10,3,5,1,-1,9,7,8,3,-8,-10],[9,1,10,1,6,-7,-7,5,4,-10,-1],[-4,1,-10,-4,-1,4,6,-10,5,-8,7],[9,-5,9,-8,2,-9,1,-1,-2,9,-6],[9,2,4,-10,-7,-2,-2,8,1,-3,-5]],[[2,9,-8,-9,1,-2,5,5,6,2,4],[1,5,-4,-4,1,4,-1,8,9,-9,-4],[-7,-10,1,-1,8,-7,-3,9,1,-5,-2],[9,8,9,9,2,2,-8,-3,-6,-2,4],[-7,5,5,-2,8,-6,1,4,9,-5,9],[4,4,-5,-6,-6,-1,10,2,-2,-5,-7],[-4,-4,6,-5,-5,-8,-10,9,-1,-8,5],[8,-10,-8,-7,-9,5,-5,7,5,-1,-2],[6,-9,-6,7,3,-1,-6,-7,-5,5,2],[-10,-3,10,7,-7,3,10,-2,-1,4,9],[-10,-4,-3,-2,2,3,-6,-1,2,8,5],[5,8,-6,7,-2,-10,-1,-9,9,6,7],[2,8,8,-1,5,2,-1,6,2,4,-6],[6,-9,-7,6,10,-3,-3,-4,2,2,3],[-2,3,6,-7,-4,10,-9,-10,-2,-2,9],[-6,4,10,-3,1,-1,9,-2,10,1,-1]],[[8,3,2,-4,3,-3,7,-2,6,4,-8],[5,-1,-5,-6,1,8,1,-1,2,-5,10],[-8,-2,4,4,-1,3,3,-2,-4,10,-9],[5,-7,4,10,6,6,4,4,-3,6,-6],[-4,7,-1,4,-9,-2,4,10,1,3,4],[9,-5,2,8,10,6,2,4,9,-2,4],[10,3,-10,1,6,-1,-2,-2,-10,-2,10],[4,-9,9,-8,9,-7,-1,9,-2,-10,5],[7,-2,-2,3,-8,7,-2,1,1,9,-2],[-6,10,5,-10,-6,10,4,-4,-5,4,2],[-8,7,2,-7,6,-5,-1,10,5,-8,4],[8,-9,-2,4,-10,-6,-4,-4,-3,4,9],[-2,-9,-7,-1,-9,8,-3,10,4,-2,6],[7,8,-10,-9,10,-10,-8,7,7,-10,3],[-7,1,-2,2,-10,8,10,-10,9,-10,-10],[5,8,3,-10,1,1,9,-6,1,-9,-4]],[[7,9,6,6,-8,5,-6,3,-7,1,6],[-9,-10,-8,9,7,-8,5,-6,3,-1,-9],[7,1,4,-9,-4,3,-3,3,5,-10,-6],[10,-6,-5,1,4,-6,1,-10,2,-3,6],[-10,-7,-8,-9,-2,8,3,-4,9,-2,6],[-7,-8,-8,6,6,-2,-10,-2,5,-9,3],[-6,6,-7,-10,-6,9,8,4,1,1,-4],[6,-1,1,3,3,1,7,-8,10,6,7],[-7,9,2,3,-10,-2,-9,-2,-7,4,-2],[5,-9,-5,4,-10,-4,9,10,2,9,2],[10,-10,7,-4,-6,3,4,2,-2,1,5],[4,1,5,3,-10,9,8,6,7,1,-9],[9,-4,-6,-9,-4,6,8,-7,-7,1,-9],[-4,-3,6,4,-10,7,-6,-1,-3,7,-2],[1,5,8,-5,-9,3,3,-5,-5,10,10],[-4,-8,-6,8,-1,9,6,5,6,2,5]],[[9,2,6,-5,-7,-7,-7,1,3,4,-9],[-3,4,8,1,3,5,3,9,-10,-8,-3],[-2,-10,-8,8,5,-10,3,6,1,-3,7],[8,5,-4,6,9,2,4,-6,-7,-4,-1],[-5,10,-8,-2,8,-1,-9,7,2,3,7],[-6,-10,5,10,-2,5,-2,-6,8,-8,8],[-3,3,2,1,-3,-4,8,6,7,4,1],[-5,-4,-10,3,10,-4,-1,-10,8,9,-6],[-1,-4,2,2,-6,10,-1,2,10,-10,-6],[-3,-5,-10,2,1,10,-4,5,-6,7,1],[-10,-4,9,-7,6,3,-8,8,-9,-3,-4],[1,-5,10,-7,-9,-8,-7,6,-1,-3,-8],[9,1,2,-7,3,8,7,1,1,-10,5],[-5,5,-7,-2,9,8,-9,6,-1,-6,-8],[-6,-8,2,-7,9,-10,-2,1,2,7,-2],[2,-4,6,3,6,4,8,4,-3,-1,-9]],[[9,-7,2,1,-2,-1,-8,-8,-2,10,-10],[1,6,-9,8,8,-8,8,-10,-3,4,9],[-10,4,-3,7,3,-9,4,7,-6,9,1],[5,8,4,-1,-5,1,-2,-4,-10,-6,7],[7,-2,-1,8,-10,-5,-10,-2,3,-3,-7],[-1,-3,-9,9,1,-1,8,7,4,-8,8],[8,-10,-9,7,9,8,-10,5,6,7,2],[-1,-3,8,4,1,8,-4,6,3,-1,9],[10,3,9,-5,-7,-10,1,-2,-4,8,-2],[-6,-4,-4,-2,8,-7,9,-3,7,-1,8],[6,7,-1,-1,7,-3,-10,8,10,-5,-9],[2,-1,1,7,3,1,5,-5,9,6,3],[-9,-6,-10,-7,-7,2,8,-9,-5,10,2],[-8,-2,7,8,-1,-4,7,2,-3,-3,-7],[8,-9,8,-9,-7,-5,3,-6,-5,-10,-6],[3,1,6,-10,-6,-9,-1,4,-7,-8,-9]],[[-6,4,4,10,-2,-7,-8,-8,6,-9,9],[-3,-10,6,-3,-1,-2,10,-8,5,5,3],[-4,4,-7,6,10,10,10,-2,-3,-1,7],[-8,-4,-4,-4,4,10,-10,8,-2,7,-2],[8,-1,-4,-5,-6,5,7,-10,-8,10,2],[-4,8,-1,-8,4,-5,-6,-7,-10,-5,2],[-4,-2,9,-10,-2,1,8,6,3,1,-5],[6,1,5,-1,-7,-3,7,1,-3,10,2],[8,-4,-10,-10,6,-8,-4,-3,2,-1,-9],[9,4,2,9,-3,-3,-7,-6,7,3,-8],[-8,3,1,9,10,1,-1,9,-10,-7,1],[-6,-1,8,-10,-2,-9,2,-8,-9,8,-4],[4,1,8,-7,-1,8,9,5,-6,10,1],[3,-3,-8,4,-10,-7,-2,-8,-6,3,-9],[1,2,3,1,3,5,-8,-7,-7,3,-9],[-9,-6,-3,8,-3,-8,-6,-8,8,3,-7]],[[8,-3,2,-9,3,-5,-10,7,-2,6,-5],[2,-9,5,4,1,8,7,4,-9,3,-3],[4,-10,10,6,-6,1,1,-5,9,-8,-4],[5,2,-2,-9,7,-6,-10,3,-4,-6,-4],[2,-3,7,-10,-8,-8,10,-7,-6,-2,3],[1,-8,7,-1,-5,2,5,-1,2,-9,-2],[-2,-8,7,-1,4,8,-6,-7,8,1,2],[-1,9,2,4,9,-7,4,-8,6,-6,3],[-1,-8,-4,1,5,9,-3,-3,9,3,-10],[-1,2,10,2,-10,8,4,-7,10,-4,7],[1,6,-2,7,-6,10,-6,5,-6,2,3],[7,-2,-3,5,-6,9,-10,3,-3,-6,8],[-5,-1,-8,-6,1,-2,-10,1,-4,-4,1],[4,-1,-2,9,-10,-2,7,4,-10,5,-9],[-6,10,9,1,-2,-3,-1,2,6,-6,3],[-8,-5,5,10,-4,-6,6,-2,3,-3,7]],[[-1,6,10,-6,3,1,4,-9,2,3,-10],[3,-8,-6,-3,5,-3,-3,-10,8,-5,-3],[-5,-3,8,4,5,-1,-4,-3,1,2,6],[-7,-4,-2,-3,10,-7,-6,-1,2,10,8],[-10,10,9,-5,7,1,-6,4,8,-9,7],[10,8,1,-5,9,-1,5,2,5,2,5],[-7,-7,-1,9,-2,3,1,7,6,-9,6],[7,6,9,5,5,-3,8,1,-1,6,-4],[-9,-1,8,3,8,3,-1,-1,8,-10,-2],[-4,-6,5,-10,-9,9,-7,-3,-2,10,4],[-10,8,5,-9,-8,8,-10,6,-2,-1,6],[-10,8,-10,7,-8,1,5,5,2,6,7],[-5,-6,-9,-9,-6,-6,1,1,-1,5,6],[-9,3,-2,3,3,-4,4,7,-10,2,-7],[1,-3,8,8,9,5,-1,8,-8,-2,1],[6,1,3,10,-6,-10,7,6,-4,-3,4]]], dtype = "int32")#candidate|6543|(11, 16, 11)|const|int32
bop_6544 = relay.less(call_6535.astype('bool'), const_6543.astype('bool')) # shape=(11, 16, 11)
bop_6547 = relay.less(call_6536.astype('bool'), const_6543.astype('bool')) # shape=(11, 16, 11)
func_2835_call = mod.get_global_var('func_2835')
func_2837_call = mutated_mod.get_global_var('func_2837')
call_6555 = relay.TupleGetItem(func_2835_call(), 0)
call_6556 = relay.TupleGetItem(func_2837_call(), 0)
var_6557 = relay.var("var_6557", dtype = "bool", shape = (11, 16, 11))#candidate|6557|(11, 16, 11)|var|bool
bop_6558 = relay.logical_and(bop_6544.astype('bool'), relay.reshape(var_6557.astype('bool'), relay.shape_of(bop_6544))) # shape=(11, 16, 11)
bop_6561 = relay.logical_and(bop_6547.astype('bool'), relay.reshape(var_6557.astype('bool'), relay.shape_of(bop_6547))) # shape=(11, 16, 11)
output = relay.Tuple([call_6555,bop_6558,])
output2 = relay.Tuple([call_6556,bop_6561,])
func_6576 = relay.Function([var_6557,], output)
mod['func_6576'] = func_6576
mod = relay.transform.InferType()(mod)
mutated_mod['func_6576'] = func_6576
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6577 = relay.var("var_6577", dtype = "bool", shape = (11, 16, 11))#candidate|6577|(11, 16, 11)|var|bool
func_6576_call = mutated_mod.get_global_var('func_6576')
call_6578 = func_6576_call(var_6577)
output = call_6578
func_6579 = relay.Function([var_6577], output)
mutated_mod['func_6579'] = func_6579
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1878_call = mod.get_global_var('func_1878')
func_1880_call = mutated_mod.get_global_var('func_1880')
call_6617 = func_1878_call()
call_6618 = func_1878_call()
uop_6650 = relay.log(call_6617.astype('float64')) # shape=(1, 16, 11)
uop_6652 = relay.log(call_6618.astype('float64')) # shape=(1, 16, 11)
output = relay.Tuple([uop_6650,])
output2 = relay.Tuple([uop_6652,])
func_6653 = relay.Function([], output)
mod['func_6653'] = func_6653
mod = relay.transform.InferType()(mod)
output = func_6653()
func_6654 = relay.Function([], output)
mutated_mod['func_6654'] = func_6654
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6487_call = mod.get_global_var('func_6487')
func_6489_call = mutated_mod.get_global_var('func_6489')
call_6721 = relay.TupleGetItem(func_6487_call(), 3)
call_6722 = relay.TupleGetItem(func_6489_call(), 3)
output = call_6721
output2 = call_6722
func_6770 = relay.Function([], output)
mod['func_6770'] = func_6770
mod = relay.transform.InferType()(mod)
output = func_6770()
func_6771 = relay.Function([], output)
mutated_mod['func_6771'] = func_6771
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3623_call = mod.get_global_var('func_3623')
func_3624_call = mutated_mod.get_global_var('func_3624')
call_6802 = func_3623_call()
call_6803 = func_3623_call()
output = relay.Tuple([call_6802,])
output2 = relay.Tuple([call_6803,])
func_6817 = relay.Function([], output)
mod['func_6817'] = func_6817
mod = relay.transform.InferType()(mod)
mutated_mod['func_6817'] = func_6817
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6817_call = mutated_mod.get_global_var('func_6817')
call_6818 = func_6817_call()
output = call_6818
func_6819 = relay.Function([], output)
mutated_mod['func_6819'] = func_6819
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1205_call = mod.get_global_var('func_1205')
func_1206_call = mutated_mod.get_global_var('func_1206')
call_6869 = func_1205_call()
call_6870 = func_1205_call()
output = relay.Tuple([call_6869,])
output2 = relay.Tuple([call_6870,])
func_6881 = relay.Function([], output)
mod['func_6881'] = func_6881
mod = relay.transform.InferType()(mod)
output = func_6881()
func_6882 = relay.Function([], output)
mutated_mod['func_6882'] = func_6882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5067_call = mod.get_global_var('func_5067')
func_5069_call = mutated_mod.get_global_var('func_5069')
call_6949 = relay.TupleGetItem(func_5067_call(), 0)
call_6950 = relay.TupleGetItem(func_5069_call(), 0)
func_4481_call = mod.get_global_var('func_4481')
func_4483_call = mutated_mod.get_global_var('func_4483')
const_6955 = relay.const([-3,5,4,-6,3,-3,5,-8,-4,10,5,-9,6,4,-8,-5,1,-10,7,-2,-6,-5,-5,-7,8,-10,-9,-7,-4,-3,8,-5,10,-6,3,-7,-2,-2,-7,-6,6,-6,-7,-2,-6,5,-2,4,10,-7,7,4,8,6,4,-10,2,-7,-1,-9,-1,4,9,-5,10,-3,-6,6,-4,-1,6,3,7,6,9,8,2,-5,-2,1,2,6,-3,-4,-5,-9,6,1,-2,-1,2,4,1,-6,-10,2,-3,2,1,6,2,-8,-5,-10,-6,1,2,2,5,-6,-7,6,9,7,-5,7,-8,6,6,2,10,-7,-9,6,1,6,10,-9,2,-8,-10,-8,10,2,3,5,9,4,5,9,-9,3,9,-8,-9,-1,9,-7,-5,-6,-5,10,7,2,-5,7,6,-5,1,9,8,-8,1,-10,4,-5,-7,3,-10,-5,5,-8,1,7,7,-1,-8,-3,-2,-5,9,7,4,1,4,8,-7,10,2,-7,7,-3,6,-6,-1,7,3,-7,4,3,-3,7,9,-7,9,9,1,-1,-10,-7,7,2,-10,9,8,-9,-4,2,-6,-4,2,-8,-3,-1,-7,-5,-6,6,-7,-7,-6,-7,-5,-4,9,-7,-9,-5,-6,-7,-7,-7,9,-9,6,-3,-6,-3,-3,-3,2,1,-5,-6,-3,3,-7,-4,-2,5,1,-4,-2,8,-3,6,-1,9,-5,8,-9,-9,1,-3,8,-3,-7,6,4,-3,-6,-4,-7,-6,9,-10,5,3,3,-9,3,2,8,7,3,-1,-10,10,8,-10,10,-5,9,8,-3,5,-10,-6,-6,-10,-7,-9,-6,4,5,-10,6,-9,-3,-9,8,4,2,4,-7,6,-7,-10,-4,-8,-10,5,6,-3,4,7,9,-8,1,8,10,1,10,2,-6,6,-9,-2,-6,-3,-8,-4,10,-7,-6,1,2,3,1,-8,6,-3,-5,-1,1,-3,2,7,9,-7,10,1,1,-3,-1,-1,5,3,10,-10,8,1,1,6,-3,-5,2,-6,3,-5,-2,-3,-10,-6,-2,3,-2,-10,4,2,-8,2,-4,2,10,2,-2,9,-3,2,1,-3,-10,5,10,3,6,-7,4,10,7,-5,8,10,-9,7,8,5,5,-3,-9,3], dtype = "int16")#candidate|6955|(432,)|const|int16
call_6954 = relay.TupleGetItem(func_4481_call(relay.reshape(const_6955.astype('int16'), [9, 3, 16])), 1)
call_6956 = relay.TupleGetItem(func_4483_call(relay.reshape(const_6955.astype('int16'), [9, 3, 16])), 1)
func_5785_call = mod.get_global_var('func_5785')
func_5789_call = mutated_mod.get_global_var('func_5789')
const_6961 = relay.const([-8.732969,-5.147263,1.927973,-4.825669,-2.448113,8.969779,3.235031,-2.770310,-5.543990,7.597953,2.588559,-8.113374,2.942518,-4.327136,2.610008,-7.533820,-1.288922,1.275758,-7.713481,-9.604342,-1.181830,-8.569784,5.362500,1.871074,-3.433740,-7.102325,-3.050243,5.153127,3.345042,-3.636859,4.840378,-8.108767,0.663377,0.924324,-8.646243,-5.005168,5.483939,-2.415325,-6.087247,-1.730668,-5.857565,-8.711325,-2.748322,8.210686,-0.369682,-6.701476,-0.362431,9.673864,-0.957426,-9.525188,5.140895,5.090998,4.835174,0.637281,-9.732791,-7.902641,-9.998828,4.984576,1.719104,-4.672731,5.555494,7.334016,7.227254,0.422654,0.117591,-9.277989,8.583769,7.980639,5.059375,-2.700858,-9.755143,6.138996,5.450133,5.598241,0.672208,-3.434495,-7.342055,-3.211290,4.910705,-3.445652,4.021007,8.547174,-7.591432,-5.795543,4.525879,3.041504,3.093946,-3.841819,-3.939190,5.463744,7.301774,-5.537122,7.841540,7.663736,-9.568006,2.415819,8.849961,-5.924010,1.690377,3.488148,8.472299,1.866462,8.472388,-9.870066,7.058917,0.562187,0.206830,8.538783,0.638931,5.664833,-0.822508,2.651311,5.567588,7.623853,-6.315105,5.419493,-7.490607,0.184061,-3.095731,3.112897,0.492234,-3.048514,-4.895710,-5.974348,1.222146,0.585355,-6.784768,5.759523,3.457889,2.444068,2.176841,3.733061,5.258955,-1.001442,-0.590098,9.790659,-2.028421,1.512905,2.845491,-5.882563,5.139194,-6.232801,4.660881,-4.174117,9.176170,-9.175073,-7.205722,-0.380198,-2.349467,-2.963284], dtype = "float32")#candidate|6961|(150,)|const|float32
var_6962 = relay.var("var_6962", dtype = "float32", shape = (240,))#candidate|6962|(240,)|var|float32
call_6960 = relay.TupleGetItem(func_5785_call(relay.reshape(const_6961.astype('float32'), [150, 1]), relay.reshape(var_6962.astype('float32'), [240,]), ), 1)
call_6963 = relay.TupleGetItem(func_5789_call(relay.reshape(const_6961.astype('float32'), [150, 1]), relay.reshape(var_6962.astype('float32'), [240,]), ), 1)
func_5650_call = mod.get_global_var('func_5650')
func_5651_call = mutated_mod.get_global_var('func_5651')
call_6969 = relay.TupleGetItem(func_5650_call(), 1)
call_6970 = relay.TupleGetItem(func_5651_call(), 1)
output = relay.Tuple([call_6949,call_6954,const_6955,call_6960,const_6961,var_6962,call_6969,])
output2 = relay.Tuple([call_6950,call_6956,const_6955,call_6963,const_6961,var_6962,call_6970,])
func_6974 = relay.Function([var_6962,], output)
mod['func_6974'] = func_6974
mod = relay.transform.InferType()(mod)
var_6975 = relay.var("var_6975", dtype = "float32", shape = (240,))#candidate|6975|(240,)|var|float32
output = func_6974(var_6975)
func_6976 = relay.Function([var_6975], output)
mutated_mod['func_6976'] = func_6976
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1561_call = mod.get_global_var('func_1561')
func_1562_call = mutated_mod.get_global_var('func_1562')
call_6985 = relay.TupleGetItem(func_1561_call(), 0)
call_6986 = relay.TupleGetItem(func_1562_call(), 0)
var_7002 = relay.var("var_7002", dtype = "int32", shape = (3, 16, 11))#candidate|7002|(3, 16, 11)|var|int32
bop_7003 = relay.power(call_6985.astype('float32'), var_7002.astype('float32')) # shape=(3, 16, 11)
bop_7006 = relay.power(call_6986.astype('float32'), var_7002.astype('float32')) # shape=(3, 16, 11)
output = relay.Tuple([bop_7003,])
output2 = relay.Tuple([bop_7006,])
func_7022 = relay.Function([var_7002,], output)
mod['func_7022'] = func_7022
mod = relay.transform.InferType()(mod)
var_7023 = relay.var("var_7023", dtype = "int32", shape = (3, 16, 11))#candidate|7023|(3, 16, 11)|var|int32
output = func_7022(var_7023)
func_7024 = relay.Function([var_7023], output)
mutated_mod['func_7024'] = func_7024
mutated_mod = relay.transform.InferType()(mutated_mod)
func_747_call = mod.get_global_var('func_747')
func_748_call = mutated_mod.get_global_var('func_748')
call_7079 = relay.TupleGetItem(func_747_call(), 0)
call_7080 = relay.TupleGetItem(func_748_call(), 0)
output = call_7079
output2 = call_7080
func_7096 = relay.Function([], output)
mod['func_7096'] = func_7096
mod = relay.transform.InferType()(mod)
mutated_mod['func_7096'] = func_7096
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7096_call = mutated_mod.get_global_var('func_7096')
call_7097 = func_7096_call()
output = call_7097
func_7098 = relay.Function([], output)
mutated_mod['func_7098'] = func_7098
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4950_call = mod.get_global_var('func_4950')
func_4951_call = mutated_mod.get_global_var('func_4951')
call_7099 = func_4950_call()
call_7100 = func_4950_call()
func_621_call = mod.get_global_var('func_621')
func_623_call = mutated_mod.get_global_var('func_623')
call_7108 = relay.TupleGetItem(func_621_call(), 0)
call_7109 = relay.TupleGetItem(func_623_call(), 0)
output = relay.Tuple([call_7099,call_7108,])
output2 = relay.Tuple([call_7100,call_7109,])
func_7115 = relay.Function([], output)
mod['func_7115'] = func_7115
mod = relay.transform.InferType()(mod)
mutated_mod['func_7115'] = func_7115
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7115_call = mutated_mod.get_global_var('func_7115')
call_7116 = func_7115_call()
output = call_7116
func_7117 = relay.Function([], output)
mutated_mod['func_7117'] = func_7117
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2614_call = mod.get_global_var('func_2614')
func_2615_call = mutated_mod.get_global_var('func_2615')
call_7179 = relay.TupleGetItem(func_2614_call(), 0)
call_7180 = relay.TupleGetItem(func_2615_call(), 0)
var_7182 = relay.var("var_7182", dtype = "float32", shape = (9, 16, 11))#candidate|7182|(9, 16, 11)|var|float32
bop_7183 = relay.mod(call_7179.astype('float64'), var_7182.astype('float64')) # shape=(9, 16, 11)
bop_7186 = relay.mod(call_7180.astype('float64'), var_7182.astype('float64')) # shape=(9, 16, 11)
bop_7203 = relay.greater_equal(bop_7183.astype('bool'), call_7179.astype('bool')) # shape=(9, 16, 11)
bop_7206 = relay.greater_equal(bop_7186.astype('bool'), call_7180.astype('bool')) # shape=(9, 16, 11)
func_7022_call = mod.get_global_var('func_7022')
func_7024_call = mutated_mod.get_global_var('func_7024')
var_7230 = relay.var("var_7230", dtype = "int32", shape = (528,))#candidate|7230|(528,)|var|int32
call_7229 = relay.TupleGetItem(func_7022_call(relay.reshape(var_7230.astype('int32'), [3, 16, 11])), 0)
call_7231 = relay.TupleGetItem(func_7024_call(relay.reshape(var_7230.astype('int32'), [3, 16, 11])), 0)
output = relay.Tuple([bop_7203,call_7229,var_7230,])
output2 = relay.Tuple([bop_7206,call_7231,var_7230,])
func_7232 = relay.Function([var_7182,var_7230,], output)
mod['func_7232'] = func_7232
mod = relay.transform.InferType()(mod)
mutated_mod['func_7232'] = func_7232
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7232_call = mutated_mod.get_global_var('func_7232')
var_7234 = relay.var("var_7234", dtype = "float32", shape = (9, 16, 11))#candidate|7234|(9, 16, 11)|var|float32
var_7235 = relay.var("var_7235", dtype = "int32", shape = (528,))#candidate|7235|(528,)|var|int32
call_7233 = func_7232_call(var_7234,var_7235,)
output = call_7233
func_7236 = relay.Function([var_7234,var_7235,], output)
mutated_mod['func_7236'] = func_7236
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5995_call = mod.get_global_var('func_5995')
func_5997_call = mutated_mod.get_global_var('func_5997')
call_7368 = func_5995_call()
call_7369 = func_5995_call()
func_5561_call = mod.get_global_var('func_5561')
func_5563_call = mutated_mod.get_global_var('func_5563')
call_7370 = relay.TupleGetItem(func_5561_call(), 0)
call_7371 = relay.TupleGetItem(func_5563_call(), 0)
output = relay.Tuple([call_7368,call_7370,])
output2 = relay.Tuple([call_7369,call_7371,])
func_7372 = relay.Function([], output)
mod['func_7372'] = func_7372
mod = relay.transform.InferType()(mod)
output = func_7372()
func_7373 = relay.Function([], output)
mutated_mod['func_7373'] = func_7373
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4518_call = mod.get_global_var('func_4518')
func_4520_call = mutated_mod.get_global_var('func_4520')
call_7391 = relay.TupleGetItem(func_4518_call(), 0)
call_7392 = relay.TupleGetItem(func_4520_call(), 0)
func_6427_call = mod.get_global_var('func_6427')
func_6429_call = mutated_mod.get_global_var('func_6429')
call_7393 = func_6427_call()
call_7394 = func_6427_call()
bop_7395 = relay.logical_or(call_7393.astype('bool'), relay.reshape(call_7391.astype('bool'), relay.shape_of(call_7393))) # shape=(1, 16, 11)
bop_7398 = relay.logical_or(call_7394.astype('bool'), relay.reshape(call_7392.astype('bool'), relay.shape_of(call_7394))) # shape=(1, 16, 11)
output = bop_7395
output2 = bop_7398
func_7423 = relay.Function([], output)
mod['func_7423'] = func_7423
mod = relay.transform.InferType()(mod)
mutated_mod['func_7423'] = func_7423
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7423_call = mutated_mod.get_global_var('func_7423')
call_7424 = func_7423_call()
output = call_7424
func_7425 = relay.Function([], output)
mutated_mod['func_7425'] = func_7425
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6487_call = mod.get_global_var('func_6487')
func_6489_call = mutated_mod.get_global_var('func_6489')
call_7449 = relay.TupleGetItem(func_6487_call(), 1)
call_7450 = relay.TupleGetItem(func_6489_call(), 1)
func_5457_call = mod.get_global_var('func_5457')
func_5459_call = mutated_mod.get_global_var('func_5459')
call_7452 = relay.TupleGetItem(func_5457_call(), 0)
call_7453 = relay.TupleGetItem(func_5459_call(), 0)
func_1094_call = mod.get_global_var('func_1094')
func_1095_call = mutated_mod.get_global_var('func_1095')
call_7470 = relay.TupleGetItem(func_1094_call(), 0)
call_7471 = relay.TupleGetItem(func_1095_call(), 0)
output = relay.Tuple([call_7449,call_7452,call_7470,])
output2 = relay.Tuple([call_7450,call_7453,call_7471,])
func_7474 = relay.Function([], output)
mod['func_7474'] = func_7474
mod = relay.transform.InferType()(mod)
output = func_7474()
func_7475 = relay.Function([], output)
mutated_mod['func_7475'] = func_7475
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7487 = relay.var("var_7487", dtype = "float32", shape = (9, 6, 10))#candidate|7487|(9, 6, 10)|var|float32
uop_7488 = relay.tan(var_7487.astype('float32')) # shape=(9, 6, 10)
func_1243_call = mod.get_global_var('func_1243')
func_1244_call = mutated_mod.get_global_var('func_1244')
call_7490 = relay.TupleGetItem(func_1243_call(), 0)
call_7491 = relay.TupleGetItem(func_1244_call(), 0)
output = relay.Tuple([uop_7488,call_7490,])
output2 = relay.Tuple([uop_7488,call_7491,])
func_7503 = relay.Function([var_7487,], output)
mod['func_7503'] = func_7503
mod = relay.transform.InferType()(mod)
var_7504 = relay.var("var_7504", dtype = "float32", shape = (9, 6, 10))#candidate|7504|(9, 6, 10)|var|float32
output = func_7503(var_7504)
func_7505 = relay.Function([var_7504], output)
mutated_mod['func_7505'] = func_7505
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3262_call = mod.get_global_var('func_3262')
func_3264_call = mutated_mod.get_global_var('func_3264')
call_7520 = relay.TupleGetItem(func_3262_call(), 1)
call_7521 = relay.TupleGetItem(func_3264_call(), 1)
output = relay.Tuple([call_7520,])
output2 = relay.Tuple([call_7521,])
func_7523 = relay.Function([], output)
mod['func_7523'] = func_7523
mod = relay.transform.InferType()(mod)
output = func_7523()
func_7524 = relay.Function([], output)
mutated_mod['func_7524'] = func_7524
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6328_call = mod.get_global_var('func_6328')
func_6329_call = mutated_mod.get_global_var('func_6329')
call_7525 = relay.TupleGetItem(func_6328_call(), 0)
call_7526 = relay.TupleGetItem(func_6329_call(), 0)
output = relay.Tuple([call_7525,])
output2 = relay.Tuple([call_7526,])
func_7535 = relay.Function([], output)
mod['func_7535'] = func_7535
mod = relay.transform.InferType()(mod)
output = func_7535()
func_7536 = relay.Function([], output)
mutated_mod['func_7536'] = func_7536
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1561_call = mod.get_global_var('func_1561')
func_1562_call = mutated_mod.get_global_var('func_1562')
call_7579 = relay.TupleGetItem(func_1561_call(), 0)
call_7580 = relay.TupleGetItem(func_1562_call(), 0)
func_6182_call = mod.get_global_var('func_6182')
func_6185_call = mutated_mod.get_global_var('func_6185')
var_7603 = relay.var("var_7603", dtype = "int16", shape = (432,))#candidate|7603|(432,)|var|int16
call_7602 = relay.TupleGetItem(func_6182_call(relay.reshape(var_7603.astype('int16'), [432,])), 2)
call_7604 = relay.TupleGetItem(func_6185_call(relay.reshape(var_7603.astype('int16'), [432,])), 2)
func_2450_call = mod.get_global_var('func_2450')
func_2452_call = mutated_mod.get_global_var('func_2452')
call_7659 = relay.TupleGetItem(func_2450_call(), 0)
call_7660 = relay.TupleGetItem(func_2452_call(), 0)
func_1836_call = mod.get_global_var('func_1836')
func_1837_call = mutated_mod.get_global_var('func_1837')
call_7669 = func_1836_call()
call_7670 = func_1836_call()
func_5561_call = mod.get_global_var('func_5561')
func_5563_call = mutated_mod.get_global_var('func_5563')
call_7683 = relay.TupleGetItem(func_5561_call(), 0)
call_7684 = relay.TupleGetItem(func_5563_call(), 0)
func_6182_call = mod.get_global_var('func_6182')
func_6185_call = mutated_mod.get_global_var('func_6185')
call_7697 = relay.TupleGetItem(func_6182_call(relay.reshape(call_7602.astype('int16'), [432,])), 0)
call_7698 = relay.TupleGetItem(func_6185_call(relay.reshape(call_7602.astype('int16'), [432,])), 0)
func_897_call = mod.get_global_var('func_897')
func_900_call = mutated_mod.get_global_var('func_900')
var_7708 = relay.var("var_7708", dtype = "float64", shape = (270,))#candidate|7708|(270,)|var|float64
call_7707 = relay.TupleGetItem(func_897_call(relay.reshape(var_7708.astype('float64'), [270,])), 3)
call_7709 = relay.TupleGetItem(func_900_call(relay.reshape(var_7708.astype('float64'), [270,])), 3)
output = relay.Tuple([call_7579,call_7602,var_7603,call_7659,call_7669,call_7683,call_7697,call_7707,var_7708,])
output2 = relay.Tuple([call_7580,call_7604,var_7603,call_7660,call_7670,call_7684,call_7698,call_7709,var_7708,])
func_7713 = relay.Function([var_7603,var_7708,], output)
mod['func_7713'] = func_7713
mod = relay.transform.InferType()(mod)
var_7714 = relay.var("var_7714", dtype = "int16", shape = (432,))#candidate|7714|(432,)|var|int16
var_7715 = relay.var("var_7715", dtype = "float64", shape = (270,))#candidate|7715|(270,)|var|float64
output = func_7713(var_7714,var_7715,)
func_7716 = relay.Function([var_7714,var_7715,], output)
mutated_mod['func_7716'] = func_7716
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5236_call = mod.get_global_var('func_5236')
func_5237_call = mutated_mod.get_global_var('func_5237')
call_7737 = relay.TupleGetItem(func_5236_call(), 0)
call_7738 = relay.TupleGetItem(func_5237_call(), 0)
const_7742 = relay.const([[[9,7,8,5,-10,-3,2,3,10,1,7],[3,2,3,3,1,3,-5,5,-5,4,-1],[5,-6,5,-6,-5,-10,-7,8,-8,-3,10],[-3,2,1,-7,10,-6,10,-4,-4,5,7],[6,3,6,-6,-6,1,-9,3,5,-10,2],[4,6,4,-1,-5,-8,-2,6,1,9,1],[-6,-3,-8,2,3,-5,-4,-10,1,2,6],[4,-4,-6,-8,-10,-9,-5,-8,-8,-5,-9],[3,-3,-9,-6,1,-6,6,9,-9,8,3],[-7,-10,-3,-10,-3,-6,-9,-3,9,-4,10],[-9,4,7,-5,5,3,-9,-2,9,-3,-4],[-9,9,3,-4,-3,-2,-8,1,9,-9,1],[9,8,9,-4,-4,-9,2,6,5,-7,-8],[-3,-10,5,7,9,3,3,-7,-4,1,-3],[7,6,-3,-6,2,2,-4,-3,-6,6,-8],[-1,7,5,1,10,1,8,3,-5,-5,-6]],[[5,-1,-10,8,7,2,-5,3,-8,1,-1],[1,5,8,4,-1,3,-8,1,10,3,2],[-10,-3,-8,-8,-5,4,7,-2,-5,-8,8],[-1,1,-7,-5,4,5,-6,4,-3,-2,-1],[-10,10,9,-4,-1,6,-8,8,-5,3,-10],[5,10,4,-9,-3,-1,4,8,-7,-5,-2],[-9,10,-3,-5,9,-6,10,-5,7,7,8],[10,-9,6,1,1,-8,-5,4,-1,-2,4],[-1,2,-4,7,-10,7,-3,7,8,-5,9],[-7,-4,5,-9,9,-7,-7,-9,4,-1,-3],[3,8,8,-10,-7,-9,7,-6,-5,4,7],[-7,-6,-8,-4,-1,2,10,7,6,-9,7],[-1,10,-10,-9,6,5,-7,-10,5,7,3],[5,9,5,8,-2,5,-6,8,3,-3,7],[9,-2,1,2,-9,3,10,-6,10,-7,1],[1,1,3,-10,6,10,-6,7,4,-4,-6]],[[4,3,9,10,-5,1,-3,-10,7,-4,3],[-7,-7,8,7,-4,-5,7,-6,4,-8,-9],[-1,5,6,4,-9,-2,3,8,4,-5,8],[3,-10,7,-3,-10,5,2,-7,3,-9,-4],[4,4,-3,-9,10,-7,10,-8,-8,9,8],[-7,8,-2,-6,1,8,10,-2,-4,-2,3],[-5,-6,1,-8,-5,-3,6,1,-4,2,8],[5,2,2,-2,-5,-8,-10,6,-8,-5,-7],[-8,5,-1,-6,-10,8,-4,-7,7,-1,-2],[-6,9,3,-6,-6,-9,10,9,-8,1,-2],[-10,9,-10,-4,1,3,3,5,6,-8,2],[4,6,-2,-2,9,-3,9,3,6,-3,-6],[-6,-10,2,-9,7,-10,7,-9,-6,1,9],[1,-5,-7,-7,-7,-4,7,-6,-4,10,-8],[-6,8,-5,9,10,7,-8,-4,-7,-2,-1],[-1,-7,-1,-9,-6,6,-6,2,7,7,7]],[[-2,4,3,2,-7,10,8,-3,-10,3,-2],[9,6,7,-3,1,-7,-5,-3,6,-10,5],[10,6,-8,8,-9,5,-4,-1,9,10,-8],[-10,-2,2,5,-9,-7,8,7,5,-4,1],[5,5,-5,1,10,4,-8,-3,6,-7,-8],[-6,1,-2,10,-3,7,-8,-2,4,10,3],[6,8,-7,-3,-2,-1,8,9,9,4,9],[6,3,-3,-2,1,-10,8,-6,4,9,2],[-9,7,3,3,5,3,-3,-1,5,-3,-2],[4,-3,7,-6,-1,-8,-4,-10,-2,8,3],[6,-8,-7,-7,1,9,10,8,-5,-2,7],[-5,-2,-2,-4,6,10,-10,3,5,9,-10],[8,-4,6,7,1,-10,8,-5,-8,2,-3],[4,10,-3,-1,-7,-10,-5,6,-8,3,1],[-2,4,7,8,10,7,-1,-6,-3,5,-3],[-8,10,7,-5,-5,-5,9,-6,-2,-10,4]],[[-9,-6,-5,-6,1,9,-1,7,7,5,10],[3,-10,2,-6,-1,-9,7,-10,-4,8,-2],[-2,-7,10,2,-7,-8,2,6,6,-2,6],[1,-4,-7,-8,9,10,10,9,2,9,-2],[-9,8,8,2,-1,2,-8,6,-9,-10,3],[1,-4,-10,4,-1,-2,8,-8,6,5,-5],[-8,-3,-5,10,-2,4,5,-8,-5,1,9],[7,-2,-9,4,2,-4,-3,-9,-9,-3,9],[-6,-4,-6,-6,6,4,-10,-7,-4,8,-5],[7,1,4,-10,1,-10,4,-2,2,-8,8],[-7,4,-3,1,3,-1,-7,-10,10,10,-6],[5,-7,-8,3,-2,-10,-4,-9,2,-5,6],[-9,-9,-8,8,-3,4,10,-6,-7,-3,-7],[1,-4,-7,7,10,-2,7,-8,-5,-8,5],[-10,-2,1,5,4,3,-10,-6,-8,5,7],[-1,4,8,-5,-3,3,-4,-1,-2,9,-1]]], dtype = "int32")#candidate|7742|(5, 16, 11)|const|int32
bop_7743 = relay.logical_xor(call_7737.astype('int32'), const_7742.astype('int32')) # shape=(5, 16, 11)
bop_7746 = relay.logical_xor(call_7738.astype('int32'), const_7742.astype('int32')) # shape=(5, 16, 11)
func_5785_call = mod.get_global_var('func_5785')
func_5789_call = mutated_mod.get_global_var('func_5789')
const_7749 = relay.const([0.953064,6.237737,-2.977118,-4.983760,1.510556,3.000062,-9.135111,6.597376,-2.505092,-9.855881,-8.329466,8.361534,-4.466644,5.662353,-4.675253,-0.913880,6.523094,-3.589343,-2.695761,9.552870,4.212406,7.536737,-0.429752,1.335966,-6.901756,2.400218,1.956820,5.007531,-5.206425,9.730028,0.999915,-8.034493,-6.853229,9.644139,1.723080,-1.041293,3.990955,4.841831,-7.946804,-2.343895,-8.652054,2.072559,-4.648184,-6.514163,-8.496646,-2.031059,7.131926,-9.969932,4.335807,-9.042400,-1.610391,-4.625502,-2.102972,6.605471,-4.331987,1.739582,1.577417,2.540556,9.974132,-3.314008,7.677628,-6.421096,-3.071921,-5.373144,-4.113060,-7.678298,-4.105557,-1.545050,-0.027266,5.917057,-2.106940,-9.340107,-3.803579,5.167202,8.447973,1.868576,-8.687165,8.573746,-9.282738,2.756448,-0.916338,-6.025521,-8.835422,9.271649,-7.116149,5.180327,-9.323561,5.814624,3.056080,-3.382951,-2.757074,-1.370836,4.441193,1.709108,3.625117,-2.262192,5.931388,-4.374955,-1.441164,-0.870765,6.463543,2.499465,8.434976,-2.743271,0.475435,3.186714,-0.851374,5.440249,4.581630,1.398363,2.962130,-1.119817,-3.575040,-7.971173,4.035588,-2.305446,-1.227670,-4.976847,-0.134398,2.508722,9.854562,0.685425,-3.906630,-4.205734,-6.858206,-0.278332,0.688809,-4.857198,-7.999035,-9.014920,9.450777,-4.022929,-0.646576,-3.656545,3.545512,8.459390,-3.961675,-1.550063,3.636567,2.852595,-2.445133,8.733760,-7.726650,-9.562923,-3.359967,-5.329165,5.463040,2.981656,3.291627,-5.779103], dtype = "float32")#candidate|7749|(150,)|const|float32
const_7750 = relay.const([[-5.614021,0.927001,9.025796,-8.559722,7.470386,-3.162567,9.317526,2.206046,0.222584,-3.189129],[-5.295744,-3.476915,-5.608274,-3.875401,8.082116,2.330400,-1.523158,2.356300,-0.388644,-7.893453],[8.262949,0.839436,2.446642,-0.211318,3.907272,-0.427428,3.305300,-4.363688,-5.558081,-9.737019],[-0.508149,-1.052805,-0.500222,-8.602493,4.354018,-2.848355,-8.953122,6.874822,-4.285916,-4.724244],[-4.289493,-0.130129,1.494498,6.726646,5.627981,2.269266,7.688434,3.189313,-6.863486,-7.505752],[-8.287631,-4.841585,5.433127,3.799231,9.720745,2.808927,-6.420738,8.033329,9.011984,2.602588],[-3.217854,-2.827018,-3.498878,1.798509,3.355936,-6.123164,2.991421,-6.532361,-0.523371,-7.445688],[1.531794,2.954634,6.258711,6.531384,4.108688,-5.930145,-0.485364,4.311536,-9.394595,5.878212],[7.302345,0.936977,-9.980614,0.386604,7.881000,-8.455110,2.272874,-1.090668,5.674459,0.915828],[8.422809,-9.952605,-3.009166,-9.702263,0.614944,8.997647,-5.746036,2.669916,-3.530141,8.433553],[-6.371025,6.074250,-6.055404,4.615612,9.048005,-3.369694,-7.085857,-8.741297,9.785834,8.287614],[-0.704823,4.356376,9.820851,7.994306,1.671257,-0.191993,4.223131,8.357067,6.874660,5.068653],[-7.128076,5.508462,-9.234775,0.363278,7.518330,-3.626590,3.011336,-0.813455,-1.571485,7.292198],[-2.237195,-7.631798,2.445485,4.691001,-6.292604,4.623631,1.689360,2.916952,8.935384,3.353048],[9.067807,-1.680703,2.940300,1.877989,0.200171,3.272592,-2.027155,1.544721,2.276082,2.390023],[5.905852,-5.167398,8.484327,-7.996434,0.023975,1.237944,-2.389183,2.071961,-1.594087,1.857565],[6.282261,-7.555101,-0.121486,1.247860,-9.422415,8.196631,-7.956146,-3.832659,7.152347,-6.193984],[-8.799033,2.982072,7.588658,-2.320428,-6.893395,8.021081,-9.738303,8.740175,9.322332,3.977215],[4.589401,0.431966,-4.452535,-0.007253,9.740902,-6.141456,-0.241000,-1.603618,3.818589,-9.415410],[-5.702677,2.929193,7.448757,-9.010912,-3.790496,-1.249228,-9.555374,7.320539,-4.899172,6.304735],[-6.579527,5.192372,0.249758,-3.033437,6.588045,-6.505418,9.772451,-0.326609,6.922085,2.680982],[-6.230798,2.019080,-9.078481,-2.712914,-9.190042,-8.812236,4.607407,-0.663014,5.362561,7.395039],[2.353527,-7.847837,-0.811713,8.004996,1.450537,3.307680,-9.564123,4.183403,0.599761,8.868978],[5.820548,-5.803126,-1.654564,6.633062,9.935402,-5.358390,8.579683,6.000742,0.373512,2.255669]], dtype = "float32")#candidate|7750|(24, 10)|const|float32
call_7748 = relay.TupleGetItem(func_5785_call(relay.reshape(const_7749.astype('float32'), [150, 1]), relay.reshape(const_7750.astype('float32'), [240,]), ), 7)
call_7751 = relay.TupleGetItem(func_5789_call(relay.reshape(const_7749.astype('float32'), [150, 1]), relay.reshape(const_7750.astype('float32'), [240,]), ), 7)
output = relay.Tuple([bop_7743,call_7748,const_7749,const_7750,])
output2 = relay.Tuple([bop_7746,call_7751,const_7749,const_7750,])
func_7754 = relay.Function([], output)
mod['func_7754'] = func_7754
mod = relay.transform.InferType()(mod)
output = func_7754()
func_7755 = relay.Function([], output)
mutated_mod['func_7755'] = func_7755
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1205_call = mod.get_global_var('func_1205')
func_1206_call = mutated_mod.get_global_var('func_1206')
call_7767 = func_1205_call()
call_7768 = func_1205_call()
output = call_7767
output2 = call_7768
func_7794 = relay.Function([], output)
mod['func_7794'] = func_7794
mod = relay.transform.InferType()(mod)
output = func_7794()
func_7795 = relay.Function([], output)
mutated_mod['func_7795'] = func_7795
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6328_call = mod.get_global_var('func_6328')
func_6329_call = mutated_mod.get_global_var('func_6329')
call_7809 = relay.TupleGetItem(func_6328_call(), 0)
call_7810 = relay.TupleGetItem(func_6329_call(), 0)
func_4103_call = mod.get_global_var('func_4103')
func_4105_call = mutated_mod.get_global_var('func_4105')
call_7820 = relay.TupleGetItem(func_4103_call(), 4)
call_7821 = relay.TupleGetItem(func_4105_call(), 4)
output = relay.Tuple([call_7809,call_7820,])
output2 = relay.Tuple([call_7810,call_7821,])
func_7823 = relay.Function([], output)
mod['func_7823'] = func_7823
mod = relay.transform.InferType()(mod)
output = func_7823()
func_7824 = relay.Function([], output)
mutated_mod['func_7824'] = func_7824
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3006_call = mod.get_global_var('func_3006')
func_3008_call = mutated_mod.get_global_var('func_3008')
call_7830 = relay.TupleGetItem(func_3006_call(), 2)
call_7831 = relay.TupleGetItem(func_3008_call(), 2)
output = relay.Tuple([call_7830,])
output2 = relay.Tuple([call_7831,])
func_7848 = relay.Function([], output)
mod['func_7848'] = func_7848
mod = relay.transform.InferType()(mod)
mutated_mod['func_7848'] = func_7848
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7848_call = mutated_mod.get_global_var('func_7848')
call_7849 = func_7848_call()
output = call_7849
func_7850 = relay.Function([], output)
mutated_mod['func_7850'] = func_7850
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4910_call = mod.get_global_var('func_4910')
func_4911_call = mutated_mod.get_global_var('func_4911')
call_7902 = relay.TupleGetItem(func_4910_call(), 1)
call_7903 = relay.TupleGetItem(func_4911_call(), 1)
output = relay.Tuple([call_7902,])
output2 = relay.Tuple([call_7903,])
func_7908 = relay.Function([], output)
mod['func_7908'] = func_7908
mod = relay.transform.InferType()(mod)
output = func_7908()
func_7909 = relay.Function([], output)
mutated_mod['func_7909'] = func_7909
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6770_call = mod.get_global_var('func_6770')
func_6771_call = mutated_mod.get_global_var('func_6771')
call_7925 = func_6770_call()
call_7926 = func_6770_call()
output = call_7925
output2 = call_7926
func_7949 = relay.Function([], output)
mod['func_7949'] = func_7949
mod = relay.transform.InferType()(mod)
mutated_mod['func_7949'] = func_7949
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7949_call = mutated_mod.get_global_var('func_7949')
call_7950 = func_7949_call()
output = call_7950
func_7951 = relay.Function([], output)
mutated_mod['func_7951'] = func_7951
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2057_call = mod.get_global_var('func_2057')
func_2059_call = mutated_mod.get_global_var('func_2059')
call_7955 = func_2057_call()
call_7956 = func_2057_call()
output = call_7955
output2 = call_7956
func_7959 = relay.Function([], output)
mod['func_7959'] = func_7959
mod = relay.transform.InferType()(mod)
output = func_7959()
func_7960 = relay.Function([], output)
mutated_mod['func_7960'] = func_7960
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6515_call = mod.get_global_var('func_6515')
func_6517_call = mutated_mod.get_global_var('func_6517')
call_8044 = relay.TupleGetItem(func_6515_call(), 0)
call_8045 = relay.TupleGetItem(func_6517_call(), 0)
output = call_8044
output2 = call_8045
func_8054 = relay.Function([], output)
mod['func_8054'] = func_8054
mod = relay.transform.InferType()(mod)
mutated_mod['func_8054'] = func_8054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8054_call = mutated_mod.get_global_var('func_8054')
call_8055 = func_8054_call()
output = call_8055
func_8056 = relay.Function([], output)
mutated_mod['func_8056'] = func_8056
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3375_call = mod.get_global_var('func_3375')
func_3377_call = mutated_mod.get_global_var('func_3377')
call_8078 = relay.TupleGetItem(func_3375_call(), 0)
call_8079 = relay.TupleGetItem(func_3377_call(), 0)
output = relay.Tuple([call_8078,])
output2 = relay.Tuple([call_8079,])
func_8084 = relay.Function([], output)
mod['func_8084'] = func_8084
mod = relay.transform.InferType()(mod)
mutated_mod['func_8084'] = func_8084
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8084_call = mutated_mod.get_global_var('func_8084')
call_8085 = func_8084_call()
output = call_8085
func_8086 = relay.Function([], output)
mutated_mod['func_8086'] = func_8086
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1836_call = mod.get_global_var('func_1836')
func_1837_call = mutated_mod.get_global_var('func_1837')
call_8143 = func_1836_call()
call_8144 = func_1836_call()
output = relay.Tuple([call_8143,])
output2 = relay.Tuple([call_8144,])
func_8171 = relay.Function([], output)
mod['func_8171'] = func_8171
mod = relay.transform.InferType()(mod)
output = func_8171()
func_8172 = relay.Function([], output)
mutated_mod['func_8172'] = func_8172
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1243_call = mod.get_global_var('func_1243')
func_1244_call = mutated_mod.get_global_var('func_1244')
call_8203 = relay.TupleGetItem(func_1243_call(), 0)
call_8204 = relay.TupleGetItem(func_1244_call(), 0)
output = call_8203
output2 = call_8204
func_8215 = relay.Function([], output)
mod['func_8215'] = func_8215
mod = relay.transform.InferType()(mod)
output = func_8215()
func_8216 = relay.Function([], output)
mutated_mod['func_8216'] = func_8216
mutated_mod = relay.transform.InferType()(mutated_mod)
func_916_call = mod.get_global_var('func_916')
func_918_call = mutated_mod.get_global_var('func_918')
call_8225 = relay.TupleGetItem(func_916_call(), 0)
call_8226 = relay.TupleGetItem(func_918_call(), 0)
output = call_8225
output2 = call_8226
func_8230 = relay.Function([], output)
mod['func_8230'] = func_8230
mod = relay.transform.InferType()(mod)
output = func_8230()
func_8231 = relay.Function([], output)
mutated_mod['func_8231'] = func_8231
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5067_call = mod.get_global_var('func_5067')
func_5069_call = mutated_mod.get_global_var('func_5069')
call_8235 = relay.TupleGetItem(func_5067_call(), 1)
call_8236 = relay.TupleGetItem(func_5069_call(), 1)
func_6974_call = mod.get_global_var('func_6974')
func_6976_call = mutated_mod.get_global_var('func_6976')
var_8257 = relay.var("var_8257", dtype = "float32", shape = (240,))#candidate|8257|(240,)|var|float32
call_8256 = relay.TupleGetItem(func_6974_call(relay.reshape(var_8257.astype('float32'), [240,])), 5)
call_8258 = relay.TupleGetItem(func_6976_call(relay.reshape(var_8257.astype('float32'), [240,])), 5)
output = relay.Tuple([call_8235,call_8256,var_8257,])
output2 = relay.Tuple([call_8236,call_8258,var_8257,])
func_8260 = relay.Function([var_8257,], output)
mod['func_8260'] = func_8260
mod = relay.transform.InferType()(mod)
mutated_mod['func_8260'] = func_8260
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8261 = relay.var("var_8261", dtype = "float32", shape = (240,))#candidate|8261|(240,)|var|float32
func_8260_call = mutated_mod.get_global_var('func_8260')
call_8262 = func_8260_call(var_8261)
output = call_8262
func_8263 = relay.Function([var_8261], output)
mutated_mod['func_8263'] = func_8263
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7823_call = mod.get_global_var('func_7823')
func_7824_call = mutated_mod.get_global_var('func_7824')
call_8309 = relay.TupleGetItem(func_7823_call(), 1)
call_8310 = relay.TupleGetItem(func_7824_call(), 1)
func_7423_call = mod.get_global_var('func_7423')
func_7425_call = mutated_mod.get_global_var('func_7425')
call_8326 = func_7423_call()
call_8327 = func_7423_call()
output = relay.Tuple([call_8309,call_8326,])
output2 = relay.Tuple([call_8310,call_8327,])
func_8337 = relay.Function([], output)
mod['func_8337'] = func_8337
mod = relay.transform.InferType()(mod)
output = func_8337()
func_8338 = relay.Function([], output)
mutated_mod['func_8338'] = func_8338
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7115_call = mod.get_global_var('func_7115')
func_7117_call = mutated_mod.get_global_var('func_7117')
call_8346 = relay.TupleGetItem(func_7115_call(), 1)
call_8347 = relay.TupleGetItem(func_7117_call(), 1)
output = relay.Tuple([call_8346,])
output2 = relay.Tuple([call_8347,])
func_8350 = relay.Function([], output)
mod['func_8350'] = func_8350
mod = relay.transform.InferType()(mod)
output = func_8350()
func_8351 = relay.Function([], output)
mutated_mod['func_8351'] = func_8351
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8358 = relay.var("var_8358", dtype = "bool", shape = (4, 7, 10))#candidate|8358|(4, 7, 10)|var|bool
var_8359 = relay.var("var_8359", dtype = "bool", shape = (4, 7, 10))#candidate|8359|(4, 7, 10)|var|bool
bop_8360 = relay.logical_or(var_8358.astype('bool'), relay.reshape(var_8359.astype('bool'), relay.shape_of(var_8358))) # shape=(4, 7, 10)
func_5826_call = mod.get_global_var('func_5826')
func_5828_call = mutated_mod.get_global_var('func_5828')
call_8375 = relay.TupleGetItem(func_5826_call(), 1)
call_8376 = relay.TupleGetItem(func_5828_call(), 1)
output = relay.Tuple([bop_8360,call_8375,])
output2 = relay.Tuple([bop_8360,call_8376,])
func_8378 = relay.Function([var_8358,var_8359,], output)
mod['func_8378'] = func_8378
mod = relay.transform.InferType()(mod)
var_8379 = relay.var("var_8379", dtype = "bool", shape = (4, 7, 10))#candidate|8379|(4, 7, 10)|var|bool
var_8380 = relay.var("var_8380", dtype = "bool", shape = (4, 7, 10))#candidate|8380|(4, 7, 10)|var|bool
output = func_8378(var_8379,var_8380,)
func_8381 = relay.Function([var_8379,var_8380,], output)
mutated_mod['func_8381'] = func_8381
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7535_call = mod.get_global_var('func_7535')
func_7536_call = mutated_mod.get_global_var('func_7536')
call_8425 = relay.TupleGetItem(func_7535_call(), 0)
call_8426 = relay.TupleGetItem(func_7536_call(), 0)
func_7535_call = mod.get_global_var('func_7535')
func_7536_call = mutated_mod.get_global_var('func_7536')
call_8430 = relay.TupleGetItem(func_7535_call(), 0)
call_8431 = relay.TupleGetItem(func_7536_call(), 0)
func_8171_call = mod.get_global_var('func_8171')
func_8172_call = mutated_mod.get_global_var('func_8172')
call_8444 = relay.TupleGetItem(func_8171_call(), 0)
call_8445 = relay.TupleGetItem(func_8172_call(), 0)
func_2728_call = mod.get_global_var('func_2728')
func_2730_call = mutated_mod.get_global_var('func_2730')
call_8455 = relay.TupleGetItem(func_2728_call(), 0)
call_8456 = relay.TupleGetItem(func_2730_call(), 0)
output = relay.Tuple([call_8425,call_8430,call_8444,call_8455,])
output2 = relay.Tuple([call_8426,call_8431,call_8445,call_8456,])
func_8461 = relay.Function([], output)
mod['func_8461'] = func_8461
mod = relay.transform.InferType()(mod)
mutated_mod['func_8461'] = func_8461
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8461_call = mutated_mod.get_global_var('func_8461')
call_8462 = func_8461_call()
output = call_8462
func_8463 = relay.Function([], output)
mutated_mod['func_8463'] = func_8463
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7794_call = mod.get_global_var('func_7794')
func_7795_call = mutated_mod.get_global_var('func_7795')
call_8480 = func_7794_call()
call_8481 = func_7794_call()
func_2728_call = mod.get_global_var('func_2728')
func_2730_call = mutated_mod.get_global_var('func_2730')
call_8496 = relay.TupleGetItem(func_2728_call(), 0)
call_8497 = relay.TupleGetItem(func_2730_call(), 0)
func_6576_call = mod.get_global_var('func_6576')
func_6579_call = mutated_mod.get_global_var('func_6579')
const_8510 = relay.const([True,True,False,False,True,False,True,True,False,False,True,True,False,False,False,True,False,True,False,True,False,True,False,True,True,False,False,False,False,True,False,True,False,False,True,True,False,False,False,True,True,True,False,True,True,False,False,True,True,True,True,True,False,True,False,True,True,False,True,True,True,True,False,True,True,False,True,False,False,True,True,True,True,True,True,False,True,True,False,False,False,True,True,True,False,True,False,True,True,False,False,True,True,False,False,True,False,True,True,True,True,False,False,False,True,True,False,False,True,False,False,True,True,True,False,True,False,True,False,True,True,False,False,False,True,True,True,True,False,False,False,True,False,True,True,True,False,False,True,True,False,True,True,False,False,True,True,False,False,False,False,True,False,False,False,True,True,True,True,False,False,True,True,False,False,True,False,True,True,True,False,True,True,True,True,True,True,True,False,True,True,False,True,True,False,True,True,False,False,False,False,False,True,True,True,False,False,True,True,True,False,True,True,True,True,False,True,False,True,True,True,False,True,False,False,True,True,True,True,False,True,True,False,False,True,True,False,True,False,True,True,True,True,False,False,False,False,True,False,False,False,True,False,True,False,False,True,True,True,False,True,False,False,False,True,True,True,True,False,False,True,True,True,False,True,True,False,False,True,False,False,True,True,False,True,True,True,False,True,False,False,False,True,False,False,False,True,False,True,False,False,False,True,True,False,True,False,False,True,True,False,True,True,False,True,False,True,False,False,False,True,False,True,False,True,True,False,False,True,True,False,True,False,False,False,False,True,True,True,False,False,True,True,True,True,False,True,True,True,True,True,False,False,False,False,True,False,False,True,True,True,False,True,True,False,True,False,True,False,True,True,True,False,False,False,False,False,False,True,True,True,False,True,True,True,True,False,True,True,False,False,True,False,True,False,False,True,False,True,True,True,False,False,False,False,True,False,False,True,True,False,False,True,True,False,False,True,False,True,False,False,False,True,False,True,False,False,False,False,True,False,False,True,False,False,True,True,False,False,False,True,False,True,False,True,True,True,False,True,False,True,False,False,False,False,False,False,True,False,True,False,False,True,False,True,True,True,False,True,True,True,False,True,False,False,True,True,True,True,False,False,False,False,False,True,True,False,True,False,True,False,False,True,True,False,False,False,False,True,True,True,False,True,True,False,False,False,True,True,True,True,True,False,False,False,True,True,False,False,True,True,True,True,True,False,False,True,True,False,False,False,True,False,False,False,False,False,False,True,True,False,True,True,False,True,True,True,False,True,True,True,True,False,False,False,True,False,True,False,False,False,False,False,False,False,False,True,False,True,False,False,True,True,True,True,False,False,False,False,True,True,True,False,False,False,False,True,False,False,True,True,False,True,True,False,False,True,True,False,False,False,False,True,True,True,False,False,True,False,False,True,False,False,True,False,False,False,True,False,False,False,True,False,True,False,False,True,False,False,False,False,False,False,False,True,False,False,True,True,True,False,False,True,False,False,True,False,False,False,False,False,False,False,False,True,False,False,True,False,False,True,True,False,True,True,False,True,True,True,True,False,True,True,True,True,True,False,True,True,False,False,True,False,False,True,False,False,False,True,True,False,False,False,True,True,True,True,True,False,False,False,True,False,True,False,True,True,True,True,False,True,True,False,False,True,True,False,True,True,True,False,False,True,False,True,False,True,False,True,False,False,True,True,False,True,True,False,False,False,True,False,False,False,False,False,True,False,False,False,True,True,True,True,False,True,False,False,True,False,False,True,True,True,False,True,False,True,True,False,False,False,True,False,False,True,False,True,True,False,False,True,True,True,False,True,False,True,True,True,True,True,False,False,True,False,False,True,False,True,False,False,False,True,False,False,False,False,False,False,False,False,True,True,True,True,False,True,False,True,True,False,True,True,False,False,False,False,True,False,False,True,False,False,False,False,False,True,False,False,True,False,False,False,True,True,True,True,True,False,False,False,False,True,True,False,True,True,True,True,True,True,False,True,True,True,True,True,False,True,False,True,True,False,True,False,False,False,True,True,False,False,True,False,True,False,True,True,False,False,False,True,True,False,True,False,True,False,True,True,False,True,False,True,False,True,False,False,False,True,True,False,True,False,True,True,False,False,False,False,False,False,False,True,False,True,True,False,True,False,True,True,False,False,True,False,True,True,False,True,False,True,False,False,True,True,True,True,True,True,False,True,True,False,False,True,True,True,True,False,True,True,False,True,True,True,True,False,False,True,False,False,False,False,False,True,True,True,True,False,False,True,True,True,True,True,True,False,False,False,False,True,True,False,True,False,True,False,True,True,False,True,False,False,True,False,False,False,False,True,False,False,False,True,False,True,False,True,True,False,True,True,True,True,False,False,True,True,True,False,True,True,True,True,True,False,True,True,False,True,False,False,False,False,True,False,True,True,True,False,True,False,False,True,True,False,True,True,True,False,True,False,True,True,True,True,True,True,False,False,False,True,False,False,True,False,False,True,True,True,True,True,False,True,False,True,True,True,False,True,False,False,True,True,True,True,False,False,False,True,False,False,False,True,True,True,True,True,False,False,True,False,True,True,True,True,False,True,True,True,False,True,True,True,False,False,False,True,False,False,False,True,True,False,False,False,True,True,True,False,True,False,False,True,True,True,False,False,False,True,True,False,False,False,False,True,False,False,False,False,True,False,True,False,False,True,False,True,False,True,True,False,False,True,True,True,True,True,True,True,True,False,False,True,False,False,False,False,False,False,True,True,False,False,True,False,False,True,False,False,True,True,False,True,True,True,False,False,True,False,True,False,False,True,True,True,True,False,True,False,False,False,True,True,True,True,True,True,False,True,True,True,True,False,False,False,True,True,False,False,True,True,False,True,True,False,False,False,False,False,False,False,False,False,True,True,True,True,False,True,False,False,True,True,False,True,True,True,False,True,False,True,True,False,True,False,False,True,False,False,True,True,True,False,True,False,True,False,True,False,True,False,False,False,True,False,False,True,True,False,False,True,False,True,False,True,True,False,False,False,True,False,True,False,False,False,False,True,False,False,True,True,False,True,False,True,True,False,False,True,False,True,False,False,False,False,True,False,True,False,False,False,False,True,False,False,True,False,True,True,False,True,False,False,False,False,False,False,False,False,True,True,True,True,True,False,False,True,False,True,True,False,True,True,True,True,True,False,True,False,True,False,True,True,False,False,False,False,False,False,True,True,True,False,False,True,False,False,False,False,True,True,False,False,False,True,True,True,True,True,True,False,True,True,False,True,True,False,False,True,False,True,False,False,True,False,True,False,True,True,False,False,False,True,True,False,False,False,True,False,True,False,False,False,True,False,False,False,False,False,True,True,True,True,True,False,False,False,False,True,True,True,True,True,False,False,True,False,True,False,False,False,False,True,True,False,True,True,False,False,True,False,True,False,True,False,False,True,False,True,False,True,False,False,False,False,False,True,False,True,True,True,False,True,False,True,True,True,False,False,True,True,False,False,True,True,False,True,True,False,False,True,True,False,True,True,False,False,False,True,True,True,False,True,True,False,False,False,True,False,False,True,True,False,True,False,False,False,False,True,False,False,False,False,True,False,True,True,False,False,False,True,True,False,True,False,False,True,True,False,False,True,True,True,False,False,False,False,False,False,True,True,False,True,True,True,True,False,True,True,False,True,True,False,False,False,False,False,True,True,False,True,True,True,True,True,False,True,True,False,True,False,True,True,True,False,True,True,True,False,False,True,True,True,True,True,True,False,False,True,True,False,False,False,False,True,True,False,False,False,False,True,False,False,True,False,False,False,True,True,False,True,True,True,True,False,True,False,False,True,True,False,True,False,False,True,True,False,True,False,False,False,True,True,False,False,True,False,False,False,False,False,True,True,False,False,True,True,True,False,False,False,False,True,False,False,True,False,False,False,False,True,False,True,False,False,False,True,True,False,True,True,True,False,False,True,True,True,False,False,True,False,False,True,True,True,False,False,True,False,True,True,True,True,False,True,False,False,False,True,True,True,False,False,False,False,True,True,True,True,True,True,True,True,False,False,False,False,True,True,True,False,False,False,True,True,False,True,True,False,False,False,False,False,False,False,False,True,True,False,False,False,True,True,True,True,False,False,False,True,True,True,True,False,True,False,True,True,False,False,False,False,True,False,True,True,False,True,True,True,True,True,True,False,True,False,False,True,False,False,False,False,True,True,False,False,True,True,False,True,True,False,False,False,False,True,False,False,False,True,True,False,False,False,False,True,False,False,False,True,False,False,True,True,True,True,False,True,False,False,False,True,False,False,False,False,True,False,False,False,True,True,False,True,True,False,True,True,True,True,False,True,False,True,True,True,False,True,False,False,True,True,False,True,True,False,True,True,False,True,True,True,False,True,False,True,True,True,False,False,True,True,False,True,False,True,False,True,False,True,True,True,False,True,False,True,True,True,False,True,False,True,False,False,False,True,True,False,False,True,False,True,False,False,False,True,True], dtype = "bool")#candidate|8510|(1936,)|const|bool
call_8509 = relay.TupleGetItem(func_6576_call(relay.reshape(const_8510.astype('bool'), [11, 16, 11])), 0)
call_8511 = relay.TupleGetItem(func_6579_call(relay.reshape(const_8510.astype('bool'), [11, 16, 11])), 0)
output = relay.Tuple([call_8480,call_8496,call_8509,const_8510,])
output2 = relay.Tuple([call_8481,call_8497,call_8511,const_8510,])
func_8519 = relay.Function([], output)
mod['func_8519'] = func_8519
mod = relay.transform.InferType()(mod)
mutated_mod['func_8519'] = func_8519
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8519_call = mutated_mod.get_global_var('func_8519')
call_8520 = func_8519_call()
output = call_8520
func_8521 = relay.Function([], output)
mutated_mod['func_8521'] = func_8521
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4545_call = mod.get_global_var('func_4545')
func_4546_call = mutated_mod.get_global_var('func_4546')
call_8550 = relay.TupleGetItem(func_4545_call(), 0)
call_8551 = relay.TupleGetItem(func_4546_call(), 0)
output = call_8550
output2 = call_8551
func_8561 = relay.Function([], output)
mod['func_8561'] = func_8561
mod = relay.transform.InferType()(mod)
output = func_8561()
func_8562 = relay.Function([], output)
mutated_mod['func_8562'] = func_8562
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8337_call = mod.get_global_var('func_8337')
func_8338_call = mutated_mod.get_global_var('func_8338')
call_8603 = relay.TupleGetItem(func_8337_call(), 0)
call_8604 = relay.TupleGetItem(func_8338_call(), 0)
func_2287_call = mod.get_global_var('func_2287')
func_2290_call = mutated_mod.get_global_var('func_2290')
const_8607 = relay.const([-10,8,-6,10,-5,8,-9,3,10,-8,2,-10,3,6,-6,9,7,5,-10,3], dtype = "uint32")#candidate|8607|(20,)|const|uint32
call_8606 = func_2287_call(relay.reshape(const_8607.astype('uint32'), [1, 10, 2]))
call_8608 = func_2287_call(relay.reshape(const_8607.astype('uint32'), [1, 10, 2]))
func_3802_call = mod.get_global_var('func_3802')
func_3804_call = mutated_mod.get_global_var('func_3804')
call_8613 = relay.TupleGetItem(func_3802_call(), 0)
call_8614 = relay.TupleGetItem(func_3804_call(), 0)
output = relay.Tuple([call_8603,call_8606,const_8607,call_8613,])
output2 = relay.Tuple([call_8604,call_8608,const_8607,call_8614,])
func_8620 = relay.Function([], output)
mod['func_8620'] = func_8620
mod = relay.transform.InferType()(mod)
output = func_8620()
func_8621 = relay.Function([], output)
mutated_mod['func_8621'] = func_8621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8084_call = mod.get_global_var('func_8084')
func_8086_call = mutated_mod.get_global_var('func_8086')
call_8635 = relay.TupleGetItem(func_8084_call(), 0)
call_8636 = relay.TupleGetItem(func_8086_call(), 0)
output = call_8635
output2 = call_8636
func_8644 = relay.Function([], output)
mod['func_8644'] = func_8644
mod = relay.transform.InferType()(mod)
mutated_mod['func_8644'] = func_8644
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8644_call = mutated_mod.get_global_var('func_8644')
call_8645 = func_8644_call()
output = call_8645
func_8646 = relay.Function([], output)
mutated_mod['func_8646'] = func_8646
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6653_call = mod.get_global_var('func_6653')
func_6654_call = mutated_mod.get_global_var('func_6654')
call_8746 = relay.TupleGetItem(func_6653_call(), 0)
call_8747 = relay.TupleGetItem(func_6654_call(), 0)
func_6427_call = mod.get_global_var('func_6427')
func_6429_call = mutated_mod.get_global_var('func_6429')
call_8756 = func_6427_call()
call_8757 = func_6427_call()
func_3729_call = mod.get_global_var('func_3729')
func_3730_call = mutated_mod.get_global_var('func_3730')
call_8776 = func_3729_call()
call_8777 = func_3729_call()
output = relay.Tuple([call_8746,call_8756,call_8776,])
output2 = relay.Tuple([call_8747,call_8757,call_8777,])
func_8790 = relay.Function([], output)
mod['func_8790'] = func_8790
mod = relay.transform.InferType()(mod)
output = func_8790()
func_8791 = relay.Function([], output)
mutated_mod['func_8791'] = func_8791
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8801 = relay.var("var_8801", dtype = "float32", shape = (11, 12, 7))#candidate|8801|(11, 12, 7)|var|float32
uop_8802 = relay.log(var_8801.astype('float32')) # shape=(11, 12, 7)
output = uop_8802
output2 = uop_8802
func_8807 = relay.Function([var_8801,], output)
mod['func_8807'] = func_8807
mod = relay.transform.InferType()(mod)
var_8808 = relay.var("var_8808", dtype = "float32", shape = (11, 12, 7))#candidate|8808|(11, 12, 7)|var|float32
output = func_8807(var_8808)
func_8809 = relay.Function([var_8808], output)
mutated_mod['func_8809'] = func_8809
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6881_call = mod.get_global_var('func_6881')
func_6882_call = mutated_mod.get_global_var('func_6882')
call_8837 = relay.TupleGetItem(func_6881_call(), 0)
call_8838 = relay.TupleGetItem(func_6882_call(), 0)
output = call_8837
output2 = call_8838
func_8842 = relay.Function([], output)
mod['func_8842'] = func_8842
mod = relay.transform.InferType()(mod)
mutated_mod['func_8842'] = func_8842
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8842_call = mutated_mod.get_global_var('func_8842')
call_8843 = func_8842_call()
output = call_8843
func_8844 = relay.Function([], output)
mutated_mod['func_8844'] = func_8844
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8848 = relay.var("var_8848", dtype = "bool", shape = (8, 9, 2))#candidate|8848|(8, 9, 2)|var|bool
const_8849 = relay.const([[[True,True],[True,False],[False,True],[False,False],[False,True],[True,False],[False,False],[True,False],[False,True]],[[True,True],[True,False],[True,False],[True,False],[False,True],[True,False],[True,False],[True,False],[False,True]],[[True,True],[False,True],[False,True],[False,False],[True,True],[False,False],[False,False],[True,False],[False,False]],[[False,True],[False,False],[False,True],[False,True],[True,False],[True,False],[True,True],[True,True],[False,True]],[[True,False],[True,False],[True,False],[False,False],[False,True],[False,False],[True,False],[False,True],[True,False]],[[False,True],[False,False],[True,True],[False,True],[False,True],[False,True],[False,True],[True,True],[False,True]],[[True,False],[True,True],[False,True],[False,True],[True,False],[True,False],[False,True],[False,False],[True,True]],[[False,True],[False,False],[False,True],[True,False],[False,True],[False,False],[False,True],[True,True],[True,True]]], dtype = "bool")#candidate|8849|(8, 9, 2)|const|bool
bop_8850 = relay.logical_and(var_8848.astype('bool'), relay.reshape(const_8849.astype('bool'), relay.shape_of(var_8848))) # shape=(8, 9, 2)
uop_8853 = relay.sin(var_8848.astype('float64')) # shape=(8, 9, 2)
output = relay.Tuple([bop_8850,uop_8853,])
output2 = relay.Tuple([bop_8850,uop_8853,])
func_8873 = relay.Function([var_8848,], output)
mod['func_8873'] = func_8873
mod = relay.transform.InferType()(mod)
var_8874 = relay.var("var_8874", dtype = "bool", shape = (8, 9, 2))#candidate|8874|(8, 9, 2)|var|bool
output = func_8873(var_8874)
func_8875 = relay.Function([var_8874], output)
mutated_mod['func_8875'] = func_8875
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4703_call = mod.get_global_var('func_4703')
func_4705_call = mutated_mod.get_global_var('func_4705')
call_8905 = relay.TupleGetItem(func_4703_call(), 0)
call_8906 = relay.TupleGetItem(func_4705_call(), 0)
func_2720_call = mod.get_global_var('func_2720')
func_2721_call = mutated_mod.get_global_var('func_2721')
call_8907 = relay.TupleGetItem(func_2720_call(), 3)
call_8908 = relay.TupleGetItem(func_2721_call(), 3)
output = relay.Tuple([call_8905,call_8907,])
output2 = relay.Tuple([call_8906,call_8908,])
func_8911 = relay.Function([], output)
mod['func_8911'] = func_8911
mod = relay.transform.InferType()(mod)
mutated_mod['func_8911'] = func_8911
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8911_call = mutated_mod.get_global_var('func_8911')
call_8912 = func_8911_call()
output = call_8912
func_8913 = relay.Function([], output)
mutated_mod['func_8913'] = func_8913
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1836_call = mod.get_global_var('func_1836')
func_1837_call = mutated_mod.get_global_var('func_1837')
call_8949 = func_1836_call()
call_8950 = func_1836_call()
output = call_8949
output2 = call_8950
func_8956 = relay.Function([], output)
mod['func_8956'] = func_8956
mod = relay.transform.InferType()(mod)
mutated_mod['func_8956'] = func_8956
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8956_call = mutated_mod.get_global_var('func_8956')
call_8957 = func_8956_call()
output = call_8957
func_8958 = relay.Function([], output)
mutated_mod['func_8958'] = func_8958
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8171_call = mod.get_global_var('func_8171')
func_8172_call = mutated_mod.get_global_var('func_8172')
call_9022 = relay.TupleGetItem(func_8171_call(), 0)
call_9023 = relay.TupleGetItem(func_8172_call(), 0)
output = call_9022
output2 = call_9023
func_9046 = relay.Function([], output)
mod['func_9046'] = func_9046
mod = relay.transform.InferType()(mod)
mutated_mod['func_9046'] = func_9046
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9046_call = mutated_mod.get_global_var('func_9046')
call_9047 = func_9046_call()
output = call_9047
func_9048 = relay.Function([], output)
mutated_mod['func_9048'] = func_9048
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1094_call = mod.get_global_var('func_1094')
func_1095_call = mutated_mod.get_global_var('func_1095')
call_9056 = relay.TupleGetItem(func_1094_call(), 1)
call_9057 = relay.TupleGetItem(func_1095_call(), 1)
output = call_9056
output2 = call_9057
func_9063 = relay.Function([], output)
mod['func_9063'] = func_9063
mod = relay.transform.InferType()(mod)
output = func_9063()
func_9064 = relay.Function([], output)
mutated_mod['func_9064'] = func_9064
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4545_call = mod.get_global_var('func_4545')
func_4546_call = mutated_mod.get_global_var('func_4546')
call_9103 = relay.TupleGetItem(func_4545_call(), 0)
call_9104 = relay.TupleGetItem(func_4546_call(), 0)
output = relay.Tuple([call_9103,])
output2 = relay.Tuple([call_9104,])
func_9109 = relay.Function([], output)
mod['func_9109'] = func_9109
mod = relay.transform.InferType()(mod)
output = func_9109()
func_9110 = relay.Function([], output)
mutated_mod['func_9110'] = func_9110
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6817_call = mod.get_global_var('func_6817')
func_6819_call = mutated_mod.get_global_var('func_6819')
call_9246 = relay.TupleGetItem(func_6817_call(), 0)
call_9247 = relay.TupleGetItem(func_6819_call(), 0)
var_9250 = relay.var("var_9250", dtype = "bool", shape = (3, 16, 11))#candidate|9250|(3, 16, 11)|var|bool
bop_9251 = relay.bitwise_and(call_9246.astype('uint16'), var_9250.astype('uint16')) # shape=(3, 16, 11)
bop_9254 = relay.bitwise_and(call_9247.astype('uint16'), var_9250.astype('uint16')) # shape=(3, 16, 11)
bop_9258 = relay.multiply(call_9246.astype('uint64'), bop_9251.astype('uint64')) # shape=(3, 16, 11)
bop_9261 = relay.multiply(call_9247.astype('uint64'), bop_9254.astype('uint64')) # shape=(3, 16, 11)
uop_9269 = relay.asinh(bop_9251.astype('float64')) # shape=(3, 16, 11)
uop_9271 = relay.asinh(bop_9254.astype('float64')) # shape=(3, 16, 11)
func_5785_call = mod.get_global_var('func_5785')
func_5789_call = mutated_mod.get_global_var('func_5789')
const_9276 = relay.const([-5.073460,-2.265875,3.068644,1.655396,-6.291297,2.965671,-2.390341,-7.583858,2.957515,6.997563,6.855648,7.997562,-6.620767,0.250639,-3.863670,-7.597740,2.766895,0.389886,2.850324,2.756731,5.786687,4.460147,-3.641495,-3.344760,-4.924175,-8.234542,-2.512535,9.266057,1.425272,2.259252,7.017102,-1.324643,-7.677988,6.958528,-9.393098,6.099147,2.804789,7.935032,-2.546261,9.615527,6.193230,-6.264094,4.029527,-0.535817,-5.924511,2.688002,-2.113011,-2.316199,1.989833,-9.143555,4.359691,3.533839,-7.787101,-7.377064,-2.394285,-3.934415,-3.757419,-2.257020,-7.798549,-6.211122,-1.854992,-5.846628,8.203698,7.283925,-1.554152,-7.670156,7.012949,-0.205355,5.732796,-1.918255,0.699794,3.334703,-4.996644,3.930093,2.902318,7.377690,3.090261,-3.417132,7.894999,8.332427,0.379765,6.969708,3.875781,3.278234,-7.685998,3.297975,-4.866175,2.859969,-6.037578,6.906075,-3.886408,3.153856,6.848129,-8.792758,7.560029,-9.062795,-1.987982,1.394055,-7.525080,-0.185303,-7.592234,-5.989601,-8.698173,1.214742,-0.496209,-0.257733,-9.534102,6.129927,4.909027,-4.357903,6.012783,-0.757945,-3.781501,-6.990887,-8.562609,8.319161,-5.816284,2.004157,-6.102260,7.271409,4.873786,5.582352,1.171612,4.206536,4.808795,0.822697,5.549425,-6.456862,7.388180,-6.080635,0.630605,-1.272336,5.488743,-2.646499,9.408121,-2.925299,-4.830656,-0.727925,-9.563254,-5.504624,4.476003,0.589577,1.367010,-4.802981,-1.031433,-6.575997,-8.602271,3.233223,-6.359993,0.780357], dtype = "float32")#candidate|9276|(150,)|const|float32
const_9277 = relay.const([-2.990425,8.179187,8.749275,-9.659815,5.480522,0.204142,0.646447,6.885973,-6.133406,5.253599,-7.288844,-1.951378,-6.401483,-4.043883,-5.559208,1.633382,3.511359,4.682412,1.053388,8.053663,2.426046,9.138908,-7.058446,-1.240266,9.255999,-4.022712,-1.413767,-9.554623,-1.812985,-0.342080,-4.421019,1.342608,-7.503909,3.534808,-0.696160,-7.822807,2.380809,-5.526762,-6.458232,5.729400,-7.155885,-1.837103,-5.005650,-7.488448,4.772605,6.408813,-8.035482,-1.813416,-7.642290,-4.848954,-5.479935,-7.793303,8.701977,-5.666428,-0.797430,5.261145,7.656855,3.963634,-0.723413,-9.805813,3.073557,-9.437904,9.731955,-6.045818,-3.396617,-2.960703,-2.693627,-8.863243,-4.286452,7.111119,-1.924359,5.459015,-2.611499,-1.631350,-4.607098,2.817352,-5.272498,-6.829466,-7.905528,5.976972,0.303259,1.204041,0.603723,4.152452,-7.734906,-6.640501,1.205200,-4.867152,-9.962683,9.093446,-8.084226,-3.449681,-7.640238,-7.829820,-4.103504,2.958581,6.527275,9.940171,-2.671303,-6.144162,5.226454,-6.744058,4.106316,8.570122,1.369400,-6.722612,2.361445,-9.390230,6.352763,-9.097984,8.679251,-1.343239,-6.429237,8.764733,-6.969605,-8.172669,-0.731162,3.307102,7.916628,0.404566,2.405643,-6.352009,0.332384,-4.753246,8.377549,-7.922960,-9.793212,-4.489423,-9.432106,5.408265,4.081229,-1.826875,-7.469766,0.505501,-4.377480,-6.212276,1.006057,-2.137761,-7.026533,3.789628,9.848709,-6.594820,-9.137841,8.226943,-6.355993,-4.044813,-4.059707,6.755365,-0.269481,-7.083126,1.480335,-0.425202,-7.392564,2.653108,4.391425,-5.719175,-7.988103,-0.137110,2.026565,0.103012,-9.055484,-1.652077,8.395814,-0.344215,-6.940207,-7.880020,2.473949,-5.670158,-2.719714,-6.440101,5.573180,-1.338994,5.178196,-8.913247,-4.154678,-2.392547,0.376937,0.891777,-4.623319,-6.436793,9.293865,3.810644,1.943184,-6.060118,3.447586,6.832486,0.037043,6.323052,-2.439168,-8.910147,1.686880,-4.098538,3.771345,1.844432,3.089479,-7.998159,4.833492,3.642404,-1.039103,-6.708822,2.600145,-5.244200,8.174798,5.957871,3.668205,7.447670,9.004260,-8.777246,1.640542,-9.353810,6.864640,3.033639,-3.152284,-2.494189,-2.754178,4.921829,-9.548189,3.521127,0.511288,-3.006479,-7.705562,6.454714,5.287881,-6.996575,-2.426657,3.411681,7.995189,-2.132191,9.387956,-8.670206,7.373499,5.020648,6.336236,0.565755,-7.651882,-4.227990,7.421855,-9.278794,9.951983,-2.079740], dtype = "float32")#candidate|9277|(240,)|const|float32
call_9275 = relay.TupleGetItem(func_5785_call(relay.reshape(const_9276.astype('float32'), [150, 1]), relay.reshape(const_9277.astype('float32'), [240,]), ), 6)
call_9278 = relay.TupleGetItem(func_5789_call(relay.reshape(const_9276.astype('float32'), [150, 1]), relay.reshape(const_9277.astype('float32'), [240,]), ), 6)
output = relay.Tuple([bop_9258,uop_9269,call_9275,const_9276,const_9277,])
output2 = relay.Tuple([bop_9261,uop_9271,call_9278,const_9276,const_9277,])
func_9287 = relay.Function([var_9250,], output)
mod['func_9287'] = func_9287
mod = relay.transform.InferType()(mod)
var_9288 = relay.var("var_9288", dtype = "bool", shape = (3, 16, 11))#candidate|9288|(3, 16, 11)|var|bool
output = func_9287(var_9288)
func_9289 = relay.Function([var_9288], output)
mutated_mod['func_9289'] = func_9289
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2113_call = mod.get_global_var('func_2113')
func_2114_call = mutated_mod.get_global_var('func_2114')
call_9335 = relay.TupleGetItem(func_2113_call(), 0)
call_9336 = relay.TupleGetItem(func_2114_call(), 0)
func_3228_call = mod.get_global_var('func_3228')
func_3230_call = mutated_mod.get_global_var('func_3230')
var_9346 = relay.var("var_9346", dtype = "float64", shape = (1050,))#candidate|9346|(1050,)|var|float64
call_9345 = relay.TupleGetItem(func_3228_call(relay.reshape(var_9346.astype('float64'), [7, 15, 10])), 0)
call_9347 = relay.TupleGetItem(func_3230_call(relay.reshape(var_9346.astype('float64'), [7, 15, 10])), 0)
uop_9362 = relay.exp(call_9345.astype('float32')) # shape=(7, 15, 10)
uop_9364 = relay.exp(call_9347.astype('float32')) # shape=(7, 15, 10)
output = relay.Tuple([call_9335,var_9346,uop_9362,])
output2 = relay.Tuple([call_9336,var_9346,uop_9364,])
func_9366 = relay.Function([var_9346,], output)
mod['func_9366'] = func_9366
mod = relay.transform.InferType()(mod)
var_9367 = relay.var("var_9367", dtype = "float64", shape = (1050,))#candidate|9367|(1050,)|var|float64
output = func_9366(var_9367)
func_9368 = relay.Function([var_9367], output)
mutated_mod['func_9368'] = func_9368
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8461_call = mod.get_global_var('func_8461')
func_8463_call = mutated_mod.get_global_var('func_8463')
call_9380 = relay.TupleGetItem(func_8461_call(), 0)
call_9381 = relay.TupleGetItem(func_8463_call(), 0)
output = relay.Tuple([call_9380,])
output2 = relay.Tuple([call_9381,])
func_9390 = relay.Function([], output)
mod['func_9390'] = func_9390
mod = relay.transform.InferType()(mod)
mutated_mod['func_9390'] = func_9390
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9390_call = mutated_mod.get_global_var('func_9390')
call_9391 = func_9390_call()
output = call_9391
func_9392 = relay.Function([], output)
mutated_mod['func_9392'] = func_9392
mutated_mod = relay.transform.InferType()(mutated_mod)
func_854_call = mod.get_global_var('func_854')
func_856_call = mutated_mod.get_global_var('func_856')
call_9419 = relay.TupleGetItem(func_854_call(), 0)
call_9420 = relay.TupleGetItem(func_856_call(), 0)
func_4841_call = mod.get_global_var('func_4841')
func_4843_call = mutated_mod.get_global_var('func_4843')
call_9424 = relay.TupleGetItem(func_4841_call(), 0)
call_9425 = relay.TupleGetItem(func_4843_call(), 0)
output = relay.Tuple([call_9419,call_9424,])
output2 = relay.Tuple([call_9420,call_9425,])
func_9427 = relay.Function([], output)
mod['func_9427'] = func_9427
mod = relay.transform.InferType()(mod)
mutated_mod['func_9427'] = func_9427
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9427_call = mutated_mod.get_global_var('func_9427')
call_9428 = func_9427_call()
output = call_9428
func_9429 = relay.Function([], output)
mutated_mod['func_9429'] = func_9429
mutated_mod = relay.transform.InferType()(mutated_mod)
func_854_call = mod.get_global_var('func_854')
func_856_call = mutated_mod.get_global_var('func_856')
call_9439 = relay.TupleGetItem(func_854_call(), 0)
call_9440 = relay.TupleGetItem(func_856_call(), 0)
output = call_9439
output2 = call_9440
func_9460 = relay.Function([], output)
mod['func_9460'] = func_9460
mod = relay.transform.InferType()(mod)
output = func_9460()
func_9461 = relay.Function([], output)
mutated_mod['func_9461'] = func_9461
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9638 = relay.var("var_9638", dtype = "float32", shape = (2, 1, 4))#candidate|9638|(2, 1, 4)|var|float32
var_9639 = relay.var("var_9639", dtype = "float32", shape = (2, 4, 4))#candidate|9639|(2, 4, 4)|var|float32
bop_9640 = relay.multiply(var_9638.astype('float32'), var_9639.astype('float32')) # shape=(2, 4, 4)
output = relay.Tuple([bop_9640,])
output2 = relay.Tuple([bop_9640,])
func_9678 = relay.Function([var_9638,var_9639,], output)
mod['func_9678'] = func_9678
mod = relay.transform.InferType()(mod)
mutated_mod['func_9678'] = func_9678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9678_call = mutated_mod.get_global_var('func_9678')
var_9680 = relay.var("var_9680", dtype = "float32", shape = (2, 1, 4))#candidate|9680|(2, 1, 4)|var|float32
var_9681 = relay.var("var_9681", dtype = "float32", shape = (2, 4, 4))#candidate|9681|(2, 4, 4)|var|float32
call_9679 = func_9678_call(var_9680,var_9681,)
output = call_9679
func_9682 = relay.Function([var_9680,var_9681,], output)
mutated_mod['func_9682'] = func_9682
mutated_mod = relay.transform.InferType()(mutated_mod)
func_964_call = mod.get_global_var('func_964')
func_966_call = mutated_mod.get_global_var('func_966')
call_9696 = func_964_call()
call_9697 = func_964_call()
func_8873_call = mod.get_global_var('func_8873')
func_8875_call = mutated_mod.get_global_var('func_8875')
const_9699 = relay.const([[True,True,True,True,False,True,False,True,False,True,True,False,False,True,True,False,True,True,True,True,False,True,True,False,True,True,True,True,False,False,True,True,True,False,False,True,True,False,False,False,True,False,False,True,True,True,False,False,False,True,True,False,False,False,True,True,False,False,False,False,False,True,True,True,False,True,False,True,True,True,True,False],[True,False,True,False,True,True,True,False,True,False,False,True,True,True,True,True,True,True,True,True,True,False,False,True,True,True,False,False,False,False,False,True,False,True,True,True,True,False,True,False,True,False,True,False,True,False,True,True,False,False,False,True,False,True,False,True,False,False,True,False,False,True,True,False,False,False,False,True,True,True,True,False]], dtype = "bool")#candidate|9699|(2, 72)|const|bool
call_9698 = relay.TupleGetItem(func_8873_call(relay.reshape(const_9699.astype('bool'), [8, 9, 2])), 0)
call_9700 = relay.TupleGetItem(func_8875_call(relay.reshape(const_9699.astype('bool'), [8, 9, 2])), 0)
func_5067_call = mod.get_global_var('func_5067')
func_5069_call = mutated_mod.get_global_var('func_5069')
call_9705 = relay.TupleGetItem(func_5067_call(), 0)
call_9706 = relay.TupleGetItem(func_5069_call(), 0)
func_8215_call = mod.get_global_var('func_8215')
func_8216_call = mutated_mod.get_global_var('func_8216')
call_9710 = func_8215_call()
call_9711 = func_8215_call()
func_2835_call = mod.get_global_var('func_2835')
func_2837_call = mutated_mod.get_global_var('func_2837')
call_9712 = relay.TupleGetItem(func_2835_call(), 0)
call_9713 = relay.TupleGetItem(func_2837_call(), 0)
output = relay.Tuple([call_9696,call_9698,const_9699,call_9705,call_9710,call_9712,])
output2 = relay.Tuple([call_9697,call_9700,const_9699,call_9706,call_9711,call_9713,])
func_9715 = relay.Function([], output)
mod['func_9715'] = func_9715
mod = relay.transform.InferType()(mod)
output = func_9715()
func_9716 = relay.Function([], output)
mutated_mod['func_9716'] = func_9716
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9725 = relay.var("var_9725", dtype = "uint16", shape = (7, 12, 16))#candidate|9725|(7, 12, 16)|var|uint16
var_9726 = relay.var("var_9726", dtype = "uint16", shape = (7, 12, 16))#candidate|9726|(7, 12, 16)|var|uint16
bop_9727 = relay.right_shift(var_9725.astype('uint16'), relay.reshape(var_9726.astype('uint16'), relay.shape_of(var_9725))) # shape=(7, 12, 16)
output = relay.Tuple([bop_9727,])
output2 = relay.Tuple([bop_9727,])
func_9734 = relay.Function([var_9725,var_9726,], output)
mod['func_9734'] = func_9734
mod = relay.transform.InferType()(mod)
var_9735 = relay.var("var_9735", dtype = "uint16", shape = (7, 12, 16))#candidate|9735|(7, 12, 16)|var|uint16
var_9736 = relay.var("var_9736", dtype = "uint16", shape = (7, 12, 16))#candidate|9736|(7, 12, 16)|var|uint16
output = func_9734(var_9735,var_9736,)
func_9737 = relay.Function([var_9735,var_9736,], output)
mutated_mod['func_9737'] = func_9737
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1243_call = mod.get_global_var('func_1243')
func_1244_call = mutated_mod.get_global_var('func_1244')
call_9761 = relay.TupleGetItem(func_1243_call(), 1)
call_9762 = relay.TupleGetItem(func_1244_call(), 1)
func_5569_call = mod.get_global_var('func_5569')
func_5572_call = mutated_mod.get_global_var('func_5572')
var_9768 = relay.var("var_9768", dtype = "float32", shape = ())#candidate|9768|()|var|float32
var_9769 = relay.var("var_9769", dtype = "float32", shape = (15,))#candidate|9769|(15,)|var|float32
call_9767 = relay.TupleGetItem(func_5569_call(relay.reshape(var_9768.astype('float32'), []), relay.reshape(var_9769.astype('float32'), [15, 1]), ), 0)
call_9770 = relay.TupleGetItem(func_5572_call(relay.reshape(var_9768.astype('float32'), []), relay.reshape(var_9769.astype('float32'), [15, 1]), ), 0)
bop_9803 = relay.floor_mod(call_9761.astype('float64'), var_9768.astype('float64')) # shape=(1, 16, 11)
bop_9806 = relay.floor_mod(call_9762.astype('float64'), var_9768.astype('float64')) # shape=(1, 16, 11)
output = relay.Tuple([call_9767,var_9769,bop_9803,])
output2 = relay.Tuple([call_9770,var_9769,bop_9806,])
func_9808 = relay.Function([var_9768,var_9769,], output)
mod['func_9808'] = func_9808
mod = relay.transform.InferType()(mod)
mutated_mod['func_9808'] = func_9808
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9808_call = mutated_mod.get_global_var('func_9808')
var_9810 = relay.var("var_9810", dtype = "float32", shape = ())#candidate|9810|()|var|float32
var_9811 = relay.var("var_9811", dtype = "float32", shape = (15,))#candidate|9811|(15,)|var|float32
call_9809 = func_9808_call(var_9810,var_9811,)
output = call_9809
func_9812 = relay.Function([var_9810,var_9811,], output)
mutated_mod['func_9812'] = func_9812
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9816 = relay.const([[[-8.915833,-4.783237,5.012358,5.690409,-4.365321,-8.907917,9.533998,-1.672966,4.669855,-9.032707,-7.480440,-2.042973,4.910478,-4.042355,-1.100743,-2.186225],[-0.840287,4.049621,-9.670744,1.910504,-7.359910,-7.688502,-9.050347,5.124954,5.370657,4.611883,-3.957836,-3.542037,4.070079,2.373943,-6.583914,1.623395],[-9.311380,-6.457932,3.971373,-0.265295,1.159141,8.089321,3.517649,8.775819,3.664180,-1.690336,-7.035770,3.732832,2.309605,9.981891,-8.769681,-4.219160],[7.613588,-8.150739,3.328824,-5.403544,5.093871,-4.499365,-4.455591,-5.500735,-1.170816,-6.110155,9.133419,5.818393,-3.845733,-4.168300,3.583560,-7.464776],[7.328820,2.442076,8.061975,-4.503437,-8.799324,1.349647,-4.874230,-8.044068,5.941935,-5.388266,-1.507720,6.590758,-9.756624,-9.438331,5.232485,6.607082]],[[2.184122,3.090834,-6.955232,3.761472,-7.655425,-1.745567,-3.563058,-9.956992,2.672668,-7.426006,-5.274047,-1.199993,2.203368,-0.984613,0.663512,-0.114804],[-2.707797,0.977586,6.299208,4.426167,-9.757581,-2.210245,-0.050791,-9.766469,9.911321,-0.073415,-5.277888,8.957978,7.915231,-0.923397,9.708986,8.836833],[-1.196463,-2.353360,2.701955,-6.122841,7.091733,8.486434,9.693686,2.628322,-7.936011,-3.044085,7.198829,4.438653,5.154708,7.811639,-8.096615,-2.832518],[-6.662295,-5.655746,6.666445,0.897255,8.747499,-3.349703,-7.257700,-3.723482,9.596808,8.531696,-1.362806,4.472509,7.096458,-1.840211,0.113294,-0.175269],[0.197805,-0.009814,3.923388,-3.722825,-9.484636,1.414415,-7.277037,8.956482,-5.513480,-8.292039,1.877248,-7.156523,6.519277,-3.181206,-8.375555,-5.092848]],[[3.334316,-9.421542,-5.978534,-5.749630,6.878679,6.679788,4.647407,-7.491862,0.371576,-0.411454,-6.755202,7.149343,7.259525,4.918968,3.340575,1.852997],[-3.475439,8.003122,-9.549205,7.892737,-4.756859,-4.140993,2.000553,2.190740,6.015608,-7.812261,4.707825,3.739211,3.347007,-8.202510,-0.983536,-9.262518],[5.864928,9.049954,3.644407,0.315736,9.540591,8.136930,-1.206783,-3.612422,-4.625351,-7.252885,-6.876506,-3.800699,-6.443762,-2.650535,-6.748761,6.923148],[5.371339,-5.403049,0.353120,-7.906564,5.643646,2.018030,-9.253297,4.659036,-2.389138,-0.873937,-1.521453,4.119451,9.339317,2.486791,-5.785119,9.465250],[-0.795446,-0.753094,-9.297609,-3.176847,-2.331162,3.620931,9.166248,5.875831,-8.927821,4.871342,-7.067520,6.627949,-2.925221,6.289266,0.414245,-3.383281]],[[-5.723332,5.652475,9.723449,-2.939955,-8.890247,4.657382,4.120878,8.240123,-7.425663,-3.659253,5.600336,8.316306,-3.685922,-4.594808,8.047574,6.732411],[9.424271,-9.632335,5.763053,-7.498985,1.216320,3.458133,-1.175918,-2.725818,6.333251,1.190176,8.214574,9.852479,-5.341217,4.217758,-5.178544,1.234870],[-7.778376,2.655197,7.383868,8.026054,8.637543,5.781755,5.482082,-2.672405,-1.942357,-6.623919,-2.777023,9.600806,2.534416,1.861510,-6.210546,-5.230149],[-5.199985,-4.513189,7.102393,-1.513820,-1.575734,8.535976,-1.185377,4.843597,5.619233,-6.118816,1.356781,-4.843966,-3.532236,-2.414729,7.007868,1.873828],[-0.479229,0.760150,8.257423,-7.028393,9.992647,-8.504349,-6.724240,-3.308551,7.910792,7.863053,-1.468437,9.184196,6.481981,6.220290,-1.636939,8.787528]],[[-3.914961,7.134864,-2.257854,-1.719713,9.370573,0.101323,-7.662039,0.114723,-2.723279,-2.483908,6.686169,-6.711462,0.825268,9.305674,-3.058917,0.034136],[0.720736,9.062011,-9.170151,0.464917,-4.113070,1.075405,-4.058167,-0.428565,-8.134145,3.902932,-3.696657,-4.683963,-9.384396,-2.016445,-1.394767,3.791324],[-8.617811,-3.484228,-9.804071,-0.662216,-5.837456,1.493060,-4.865995,-6.696193,-3.451684,-5.256147,5.003223,7.242825,-0.479071,-9.640347,3.330149,-5.122315],[-8.419969,-1.663567,-3.700520,4.427287,9.744663,1.552857,-0.451346,-3.423331,-7.260522,-3.067254,4.542920,0.621871,2.617450,6.331350,1.801936,-5.257633],[-0.955482,6.591002,7.784628,4.135168,6.280423,-2.488712,-2.722031,1.019312,-7.464152,-0.742629,7.963703,3.998376,-1.134792,5.578852,8.164603,0.751459]],[[-5.253040,-1.195886,-3.875910,-0.871890,5.571858,0.378776,0.389886,-6.720154,-3.048075,-4.646733,-5.659449,-0.927076,-5.935052,-9.501154,6.118042,1.596605],[-5.566298,0.359761,2.763101,4.051923,0.049147,0.535814,2.774580,-4.580530,-2.482883,4.783984,-1.764246,5.723727,7.279929,-5.026685,-8.316456,-9.056557],[-7.130630,7.450562,-8.219156,-8.855418,1.911985,-0.496323,7.214551,6.902028,5.726940,-4.195926,-9.939707,-6.161623,7.261399,6.301373,-6.172965,4.672606],[3.246448,2.548217,5.821587,6.000982,0.870608,7.232469,-1.982631,-7.082776,1.056246,-5.814923,8.822255,4.939955,0.916887,-2.266895,-3.269918,-3.432047],[-3.310646,0.196480,1.550566,-9.702931,3.246426,7.530271,-3.420325,6.745868,-1.269285,-2.998248,4.842832,7.462697,-4.155430,-2.310624,4.769667,-7.194770]],[[-4.585653,8.149213,9.497980,-4.511336,9.928988,-3.470591,-5.779843,6.051627,9.836982,-0.709430,0.371675,-2.641369,4.013702,-6.928738,2.720823,-7.226537],[2.420879,-8.981202,5.447222,6.276579,-7.698288,1.876579,7.758025,-5.276456,-9.234819,0.463041,-9.051932,9.517856,5.520415,-4.190030,-8.609524,-8.226465],[-9.559048,-3.993024,-2.289116,-4.877201,-2.263825,4.008526,-4.103816,-2.616059,-3.282451,-5.734964,2.313641,-2.892583,8.629453,-3.549187,1.166290,7.866537],[2.781340,3.613854,0.095022,-3.691008,8.561563,-7.861102,9.030575,-7.517576,-6.438982,-2.807692,-5.954967,-8.972667,0.740037,-8.621404,-3.196241,-1.536802],[7.104503,1.835110,2.753205,-7.803673,2.711408,-3.823364,-6.229195,-3.350624,1.163645,-7.166887,4.856633,-9.616042,3.971918,9.101423,-0.903721,3.547248]]], dtype = "float64")#candidate|9816|(7, 5, 16)|const|float64
uop_9817 = relay.tan(const_9816.astype('float64')) # shape=(7, 5, 16)
output = relay.Tuple([uop_9817,])
output2 = relay.Tuple([uop_9817,])
func_9827 = relay.Function([], output)
mod['func_9827'] = func_9827
mod = relay.transform.InferType()(mod)
mutated_mod['func_9827'] = func_9827
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9827_call = mutated_mod.get_global_var('func_9827')
call_9828 = func_9827_call()
output = call_9828
func_9829 = relay.Function([], output)
mutated_mod['func_9829'] = func_9829
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9896 = relay.const([[[-4.496560,-3.551391,4.284820,-2.004691,9.962609,-8.159655,-0.527394],[7.767626,-8.324886,-1.897447,8.591870,-7.204333,5.721773,7.477240],[5.575591,0.632436,-3.643081,-9.106410,0.115436,1.409094,9.802970],[0.111313,9.844337,4.031964,9.052701,1.975515,3.284613,0.387050]],[[-3.581287,7.878499,-5.835601,-3.491562,-3.265377,-9.667064,2.186166],[-6.993473,-4.396386,2.689863,5.866438,4.308555,-9.980070,5.243303],[-7.234344,-6.179447,3.919922,2.777384,-5.235045,5.527808,-0.454835],[-4.454455,4.814891,0.730523,-2.013720,1.247156,4.320853,5.116068]],[[4.812073,5.294666,6.660822,7.052152,7.531555,-5.550539,-6.753854],[-8.036860,-2.352189,-1.562389,-9.672394,5.391437,-4.081844,-2.123096],[3.185029,5.781078,-8.747256,4.760604,-8.784431,-3.249107,9.563091],[1.267727,-3.529518,-8.084924,-5.449396,2.800630,-7.740747,-1.513166]],[[9.513705,2.318290,-7.409620,-6.767260,4.058690,-6.645318,-3.434928],[-6.968347,-8.688884,2.699858,5.533458,4.987472,-8.642347,-2.244518],[8.017202,-9.400183,4.096202,4.042936,-8.151593,-1.101456,5.353366],[-0.944851,-4.318249,8.179332,-5.881696,6.853284,6.759788,-5.112418]],[[8.164177,-0.073138,0.042822,-9.282415,-3.598781,-0.570960,3.995379],[6.998987,0.358315,-3.488254,-5.113922,-3.206535,-7.528170,-8.257050],[-0.715599,5.248854,-9.186376,-2.707903,-8.951442,-2.235460,1.173208],[-7.031765,-4.622018,6.559103,3.194922,5.455250,-5.722836,-5.439479]],[[9.529150,-4.722329,4.499717,-2.350421,7.517899,6.210213,4.913583],[7.292461,-0.693102,1.867681,8.751381,7.876609,-0.549494,-8.461691],[-5.615098,2.658633,1.688236,-6.959983,6.817049,-2.231953,7.910271],[1.515237,-5.316054,7.492980,-2.243991,6.891669,-9.684577,-7.796548]],[[9.896244,4.044868,5.104950,6.317294,-7.776075,-7.373926,-7.079432],[-2.866127,-9.447880,-9.832769,-1.866100,-8.574169,-1.947853,-5.919631],[-4.275123,2.688338,2.070465,3.271608,7.511578,-0.845486,-3.385291],[-2.534731,8.075528,9.986699,-9.483640,-3.862427,9.299561,1.399887]],[[-5.943775,-5.215836,-0.048172,-2.052098,-4.460744,-6.316481,6.233951],[6.790510,5.219765,-8.935156,7.253926,4.748327,-3.369133,-2.026823],[-7.070292,3.876727,-2.216450,2.430409,-1.269168,-3.236575,7.637097],[-6.502004,1.976470,4.199306,6.179392,-4.288296,3.750116,-6.554958]],[[2.292553,1.437688,-5.415581,1.661179,6.670268,6.883412,-6.437975],[-5.534970,3.277262,-5.936113,3.044366,4.829796,-1.114693,5.395199],[2.427604,1.544854,-1.769657,-1.677166,3.859075,6.169110,-8.349341],[-0.956724,7.144153,3.580708,-1.270204,6.930233,8.401929,-9.679825]],[[-4.647543,4.378098,-9.332472,9.850672,0.591189,6.680483,2.963984],[6.365646,-6.992011,-8.748413,5.650702,-1.714880,-7.796724,9.814490],[-1.237724,0.052056,9.257372,3.567308,0.641269,-2.491359,-0.265107],[6.056976,1.409084,-5.399055,8.141641,5.638866,-1.385413,-2.349807]],[[3.190137,-3.439592,5.371795,1.577385,-9.200641,-0.547759,8.409690],[-7.315142,5.868397,9.439118,0.151083,-9.658923,-4.128501,8.366357],[8.921942,8.681721,5.938115,-8.237723,8.236670,7.614588,-0.702817],[4.553365,-1.464889,-4.726788,-2.961584,-2.708858,2.030818,-1.604956]],[[-4.737214,-4.813950,8.041394,8.905380,8.017018,1.827599,3.642430],[-7.241384,7.050506,1.206011,8.802658,0.997174,7.971406,2.339128],[-8.535515,-3.342140,0.933772,-0.739683,3.484089,3.156232,5.603700],[3.341399,0.803972,2.818352,-5.600404,5.911109,-1.281593,8.804443]],[[-1.891087,-1.411966,-0.381833,-8.342994,9.956664,-7.455910,-4.059550],[7.797842,-7.289791,-6.822256,-6.512354,-1.605065,-6.091436,-2.488788],[-7.498526,-9.513875,4.247651,1.451578,8.646666,7.638556,-7.798459],[1.129258,-5.010041,2.885227,-6.977884,-7.515646,6.318220,4.376069]]], dtype = "float64")#candidate|9896|(13, 4, 7)|const|float64
var_9897 = relay.var("var_9897", dtype = "float64", shape = (13, 4, 7))#candidate|9897|(13, 4, 7)|var|float64
bop_9898 = relay.floor_mod(const_9896.astype('float64'), relay.reshape(var_9897.astype('float64'), relay.shape_of(const_9896))) # shape=(13, 4, 7)
func_3228_call = mod.get_global_var('func_3228')
func_3230_call = mutated_mod.get_global_var('func_3230')
const_9904 = relay.const([-4.044501,-0.580363,1.711535,9.859632,6.705552,2.262762,-3.333467,2.366421,-0.754389,4.713217,-1.093137,5.847752,2.341502,8.791515,-8.417658,0.740784,6.002510,-0.804387,-3.129275,5.911844,6.633799,-1.972178,-4.622059,4.684211,-3.312657,-9.278774,-8.024243,-1.931796,9.419536,-5.103852,3.286496,-3.529488,1.898782,-8.112553,1.823819,9.983399,-1.223139,-8.531808,2.196056,1.150104,-9.329145,-9.871059,4.179528,3.288872,-0.035389,1.098508,6.300398,-5.196022,-5.327493,3.574691,-4.336930,-3.850220,-5.196011,8.881676,-8.588045,-9.558843,-1.283762,1.101428,2.085580,7.221863,-3.607685,-6.182955,-3.415022,-0.173050,1.179540,-4.280326,-8.674329,-7.954953,0.148412,-7.792233,0.103330,7.136716,-3.138663,9.330965,4.765002,7.515952,0.030792,4.888517,2.371626,-0.609969,2.833715,-9.427483,5.657346,0.915786,3.227635,-4.557111,-0.960868,-9.348305,-7.773650,-1.780859,-3.939646,2.749054,7.741031,-2.071221,-6.106452,9.395424,8.974997,4.593502,2.844731,-2.131398,2.031938,0.085850,-2.833869,-8.833291,1.094339,-6.663626,-6.079022,-6.030462,-6.274387,-6.447770,1.804377,0.751194,-3.817718,-7.995764,0.876455,-4.197969,3.957538,-3.004056,7.111539,4.623690,4.160170,7.234470,3.085785,-1.602567,-7.817055,6.173880,-2.512034,-8.659529,5.135497,-0.726565,1.081078,2.589087,-3.617412,-1.273093,-2.231018,4.681268,4.534672,-0.067359,-1.023381,0.873884,3.690009,-3.891845,7.814021,-5.480511,3.916304,4.955294,9.959221,-4.974963,-4.190605,-6.069553,-4.259921,-8.164108,-5.394731,-4.913620,3.836576,5.482652,-2.860951,8.423179,-7.814598,6.133803,-1.934286,0.302110,8.877491,-9.878383,-8.309627,7.381717,-2.356700,5.056107,-8.657205,5.324695,9.883571,-0.343659,-4.963343,6.058656,-1.290067,2.210771,9.575309,-3.131316,-2.764828,-1.542990,3.496114,1.375390,7.679343,-9.424182,-1.858123,-9.666200,-7.744142,-7.578225,-7.725726,-9.563855,-3.817869,2.347014,-1.401289,-3.078339,-4.246236,2.588083,-3.602787,0.212947,8.921914,9.661509,8.333430,3.558409,8.734981,5.352916,1.100773,-8.133837,1.512724,9.253097,9.770483,-6.679651,-1.238372,-2.910920,-5.455106,0.152356,3.081037,1.123152,-7.942387,5.763449,-8.873912,8.568255,-9.468799,5.742810,2.828806,8.699547,2.230591,3.102790,0.810836,-2.348271,7.854463,-7.313788,4.735398,-3.353883,-7.952137,7.409072,-5.061435,3.444970,-3.653822,-2.609027,4.147009,-7.144754,6.653438,0.700250,0.399443,-9.185109,5.880010,-7.443723,-6.394381,-3.574876,-2.004963,-4.907595,-3.792475,3.869928,-5.833688,-9.451817,6.497734,-4.537253,-5.138572,7.449407,-9.616979,7.544563,-2.435180,-3.069476,-4.087608,-6.322207,-0.927156,3.657087,-1.804214,5.768899,-9.879753,-4.527992,-2.647396,-4.497509,-5.585454,6.369939,2.870246,-9.776283,-7.140713,-9.836203,9.736941,2.031469,3.232046,-1.622484,7.452650,1.202687,-8.418480,3.381542,-5.505995,4.880158,2.697229,5.905522,2.070656,7.218258,-7.288227,-2.627507,-4.831271,7.354122,-4.357425,1.726184,7.083800,8.761992,-9.118672,9.490737,-7.810547,-5.624589,3.941250,-2.923897,5.309636,-9.878033,-8.720260,-1.564187,-0.731821,-3.412695,5.556629,-8.329259,-5.521815,-2.878436,-2.748532,-5.886584,8.995962,-9.763899,-5.524518,4.862267,-4.464231,-1.913419,4.260686,3.414478,-1.163699,-2.432341,2.433859,2.699684,3.583442,5.468965,9.972319,-2.033135,-2.477389,5.567175,-6.610550,-1.257633,-7.149066,1.609763,1.947779,5.364882,-5.924916,-2.912644,-9.571574,-2.558784,4.303406,6.376568,8.647472,1.752527,-7.172146,-2.908418,-2.775766,-3.019487,8.558462,-1.553000,-6.018805,4.988600,0.336506,2.180341,9.730830,1.046955,6.055338,3.064007,7.967550,-7.072354,0.600673,-1.503379,7.166505,-9.674325,-9.425234,-6.300652,-8.102711,8.879346,5.058356,3.271978,-8.933944,9.148492,3.555394,-2.657061,-7.159576,-2.417200,-8.376383,1.315629,0.478735,-4.518796,-0.775173,6.025679,-2.508841,-6.773251,3.895884,-7.431317,3.821056,2.182957,-5.247631,0.545744,-5.213683,-1.700486,-6.779637,-0.868533,6.122921,4.834984,8.196196,-7.191976,0.898867,2.566518,-9.906849,3.019326,-5.680686,-9.498145,-7.785904,0.574274,-6.566691,2.676026,3.750066,-0.963453,0.070881,-7.590407,-1.738168,-0.064619,1.640477,-2.871557,-1.590235,5.820610,-1.159023,2.371298,4.233381,2.778498,5.252850,-5.925639,3.569855,0.977090,-7.426734,6.931748,0.382948,9.866617,-2.942758,-6.242705,5.244368,1.622418,-0.476752,-0.784570,8.653638,5.955858,3.610212,0.522023,-7.692552,4.164596,-0.720134,-9.967808,-5.331993,-3.050496,4.973618,0.263232,1.803382,7.148385,-6.561421,0.420069,1.328283,-3.868437,5.271506,2.209285,-7.298837,-8.982630,-7.983831,-7.699541,-6.872518,7.129370,-6.726781,-7.892161,9.279578,9.681332,-5.250096,1.340383,8.594323,-7.764596,4.467829,-4.678873,-0.022249,-0.413651,4.788627,7.113001,7.371655,-6.984251,-9.796761,4.961677,-6.590301,3.815529,-1.926456,-9.408045,-4.205227,-2.639993,5.150663,1.406570,9.484446,-0.391917,5.582278,2.066656,-5.278583,-1.572055,-0.185156,-1.989788,-5.480313,7.919140,-6.630556,-8.087307,-6.791771,-1.501936,4.736968,8.117333,8.413654,-7.699354,-9.621723,3.561943,9.234490,1.686670,-8.783161,-2.388809,0.568529,6.845224,5.278608,-4.663066,-5.011769,7.327829,-5.234068,-2.208847,-8.970010,-5.674973,-1.045970,2.009617,9.589731,-0.844865,-5.456886,-4.574586,-2.211761,3.441360,8.883675,-7.223871,-9.852083,-6.254763,-0.417315,-7.227909,0.341449,9.250923,5.121741,0.685961,6.077784,-6.201645,-1.406758,8.267368,-5.462553,-3.195758,-7.237829,6.139049,6.624805,-7.075927,-4.042425,-1.269203,9.742269,-9.488758,1.557710,-6.587454,9.367594,-4.739561,2.941873,-6.659430,5.952801,-7.119378,5.106069,-3.567161,4.521195,5.367522,-0.076450,6.730291,1.663793,-5.890237,0.661863,-1.024022,8.113466,-4.036576,-7.704105,-3.388425,4.612426,-5.406047,-4.696659,5.086435,9.608243,8.382025,6.599586,2.649782,-7.920226,1.486155,-5.858209,-5.913649,-6.097680,8.008898,-1.318098,-4.926825,-0.879654,-4.185778,-5.161154,-6.948370,-1.809395,0.284092,-9.516086,0.631352,-2.709121,-5.250380,-2.387436,-5.531664,2.119535,4.181434,3.317108,3.672257,-1.891667,-7.845197,-6.891439,-1.234409,-9.897318,-0.650077,3.246302,-5.840171,-7.840006,-8.057250,8.988590,8.320977,-7.243795,-4.985452,9.108974,8.557151,-1.831623,-3.345316,-7.968565,2.002217,-0.609826,5.264014,0.431578,3.548781,-7.064697,-9.557945,-0.808512,-7.015602,6.377266,-7.442358,8.174477,-4.011597,7.888515,-3.742533,-1.014186,-5.559830,6.991303,-3.013300,4.462969,-6.167821,6.563568,-6.625640,-2.818408,3.845150,0.246094,-2.015327,4.933963,-2.657297,3.625924,1.255794,9.438803,-4.025864,3.503861,5.686004,-6.187685,8.915501,4.641273,8.420981,-4.356853,7.072270,-8.381142,-7.616971,-8.105419,-6.394149,3.148991,9.498071,-8.275539,7.154758,-6.102222,-6.387725,-8.964370,4.985802,5.297190,-3.900660,6.130775,-5.740594,1.782236,7.546578,5.754271,-8.117869,8.082879,3.723897,1.477720,-6.609436,-1.790360,6.992676,-7.241210,-8.421057,4.157247,6.024203,-4.081113,1.290967,3.934864,3.628597,-8.355998,4.680600,-3.243478,5.557414,-5.747549,0.801439,1.000433,7.733128,1.319577,3.147638,-3.547256,3.092170,-6.110843,5.170340,-1.015980,5.653436,-7.324845,-0.823257,6.631772,-3.205585,3.991457,-9.890651,-3.252355,-6.801389,0.989703,4.221249,7.687780,-1.722613,7.887365,6.809718,3.112392,-1.046170,2.304588,-5.714962,0.148231,-9.279002,-9.688911,7.180736,5.508504,3.878567,8.853692,-7.411037,5.956343,0.458657,-1.903287,-8.760628,6.411066,8.316053,-9.648353,4.648859,3.130815,-7.359221,5.728448,-7.534193,-9.406222,3.495155,-2.060044,-5.455974,2.885303,-5.954647,-4.772536,4.662389,-4.942402,-4.001233,-0.603928,-0.278164,-7.942647,0.608745,-0.474337,-3.460658,8.064818,-4.972211,5.274901,-0.316782,-9.869160,1.898788,5.799480,-3.512394,6.811832,-3.940134,2.245763,1.385837,-3.222165,3.452481,8.248112,0.944784,5.919505,-1.320494,-6.608249,3.582846,-2.206344,0.893136,0.240751,4.198648,-3.880903,-6.955119,-0.085155,3.849834,1.327525,8.859038,-2.281693,9.133833,-5.833956,7.261340,-4.048272,-6.462577,9.163326,6.522208,1.418334,1.368372,-4.597118,7.108282,-3.071329,1.272957,1.011470,-0.013017,0.653350,-6.148816,4.890579,-3.368670,-9.056251,-3.437377,-0.840518,7.776503,-0.093735,-0.042183,-3.079744,9.987266,-4.518010,-9.300540,2.552368,-1.285788,3.579640,3.890599,-4.755260,-5.135831,-3.257814,-3.612951,-6.881288,-4.924616,-7.753465,-8.306275,9.874382,5.846409,-8.602411,3.746533,-4.476784,7.208431,-9.730119,3.504801,-3.288629,-6.324642,-1.924555,-6.944211,-6.099897,-7.572495,3.970036,5.052777,-8.949224,-6.138874,9.185631,2.416936,1.281581,2.379971,3.851385,-1.084036,-9.080443,-6.179230,9.258215,-1.193211,7.661139,9.959986,0.121804,0.258172,9.408010,-2.452484,-7.794947,7.317809,-0.126157,6.795112,2.184345,-9.009498,-1.936905,-6.216610,2.966892,0.633031,3.196233,5.351687,-7.634010,6.111396,-1.418413,-3.746850,7.145372,2.324175,-3.056769,2.166952,-3.204966,9.069199,-2.637515,7.041154,-1.272709,-1.958679,9.851240,-6.398369,2.205438,1.490185,-7.231671,-1.685365,3.015885,7.421258,-6.234432,2.406054,-8.441206,-1.036294,5.816032,-7.434212,-8.353317,9.761011,-7.140111,5.870553,5.722100,-1.123035,-1.198861,2.941566,-4.826732,0.396695,4.215869,7.368589,-6.210660,-3.801295,6.874454,1.778577,-2.223814,9.240250,9.697446,-4.463140,-0.766309,-7.783320,3.393026,-8.083226,-0.155312,-5.168660,7.405672,-0.943457,5.393500,1.728881,2.307557,0.081730,7.427851,9.692354,8.317949,-0.352620,-3.958592,8.722492,-0.032322,4.373659,9.055562,4.026174,3.817656,-7.326325,-0.115386,-4.995081,7.499333,8.051235,-1.704200,0.310309,-9.557066,1.017467,-0.102384,-6.125533,6.954865,6.340918,-7.444845,0.231329,-1.702457,-2.779181,3.209558,8.971970,-3.755135,7.345855,7.770077,6.838369,-6.512877,-4.394979,3.684989,-5.081325,-1.867870,7.067813,-8.923309,-5.790911,8.272471,8.521190,4.247415,5.215245,-2.322084,6.520551,1.364375,8.230337,7.935012,-0.961653,2.939264,7.244075,-7.161676,-4.369692,6.725449,-0.396031,8.720886,4.527216,-3.054139,5.993489,-4.858584,-1.945441,9.069783,2.606205,6.616013,7.095058,-0.161563,-6.924620,0.804697,3.338631,4.535393,2.871508,-3.512857,-1.121729,6.371224,9.642064,-0.464680,7.476970,1.716094,-9.148212,-7.948585,5.171336,4.621856,-6.462100,-3.676759,6.795816,4.822919,7.634273,-9.298671,-5.373987,3.730560,3.898904], dtype = "float64")#candidate|9904|(1050,)|const|float64
call_9903 = relay.TupleGetItem(func_3228_call(relay.reshape(const_9904.astype('float64'), [7, 15, 10])), 0)
call_9905 = relay.TupleGetItem(func_3230_call(relay.reshape(const_9904.astype('float64'), [7, 15, 10])), 0)
output = relay.Tuple([bop_9898,call_9903,const_9904,])
output2 = relay.Tuple([bop_9898,call_9905,const_9904,])
func_9923 = relay.Function([var_9897,], output)
mod['func_9923'] = func_9923
mod = relay.transform.InferType()(mod)
mutated_mod['func_9923'] = func_9923
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9924 = relay.var("var_9924", dtype = "float64", shape = (13, 4, 7))#candidate|9924|(13, 4, 7)|var|float64
func_9923_call = mutated_mod.get_global_var('func_9923')
call_9925 = func_9923_call(var_9924)
output = call_9925
func_9926 = relay.Function([var_9924], output)
mutated_mod['func_9926'] = func_9926
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3405_call = mod.get_global_var('func_3405')
func_3406_call = mutated_mod.get_global_var('func_3406')
call_9980 = relay.TupleGetItem(func_3405_call(), 1)
call_9981 = relay.TupleGetItem(func_3406_call(), 1)
func_5918_call = mod.get_global_var('func_5918')
func_5920_call = mutated_mod.get_global_var('func_5920')
call_9984 = relay.TupleGetItem(func_5918_call(), 0)
call_9985 = relay.TupleGetItem(func_5920_call(), 0)
func_2969_call = mod.get_global_var('func_2969')
func_2970_call = mutated_mod.get_global_var('func_2970')
call_9995 = func_2969_call()
call_9996 = func_2969_call()
output = relay.Tuple([call_9980,call_9984,call_9995,])
output2 = relay.Tuple([call_9981,call_9985,call_9996,])
func_10002 = relay.Function([], output)
mod['func_10002'] = func_10002
mod = relay.transform.InferType()(mod)
output = func_10002()
func_10003 = relay.Function([], output)
mutated_mod['func_10003'] = func_10003
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1243_call = mod.get_global_var('func_1243')
func_1244_call = mutated_mod.get_global_var('func_1244')
call_10027 = relay.TupleGetItem(func_1243_call(), 0)
call_10028 = relay.TupleGetItem(func_1244_call(), 0)
func_8350_call = mod.get_global_var('func_8350')
func_8351_call = mutated_mod.get_global_var('func_8351')
call_10042 = relay.TupleGetItem(func_8350_call(), 0)
call_10043 = relay.TupleGetItem(func_8351_call(), 0)
output = relay.Tuple([call_10027,call_10042,])
output2 = relay.Tuple([call_10028,call_10043,])
func_10051 = relay.Function([], output)
mod['func_10051'] = func_10051
mod = relay.transform.InferType()(mod)
mutated_mod['func_10051'] = func_10051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10051_call = mutated_mod.get_global_var('func_10051')
call_10052 = func_10051_call()
output = call_10052
func_10053 = relay.Function([], output)
mutated_mod['func_10053'] = func_10053
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3623_call = mod.get_global_var('func_3623')
func_3624_call = mutated_mod.get_global_var('func_3624')
call_10125 = func_3623_call()
call_10126 = func_3623_call()
func_7523_call = mod.get_global_var('func_7523')
func_7524_call = mutated_mod.get_global_var('func_7524')
call_10130 = relay.TupleGetItem(func_7523_call(), 0)
call_10131 = relay.TupleGetItem(func_7524_call(), 0)
func_5683_call = mod.get_global_var('func_5683')
func_5685_call = mutated_mod.get_global_var('func_5685')
call_10132 = relay.TupleGetItem(func_5683_call(), 0)
call_10133 = relay.TupleGetItem(func_5685_call(), 0)
func_4703_call = mod.get_global_var('func_4703')
func_4705_call = mutated_mod.get_global_var('func_4705')
call_10147 = relay.TupleGetItem(func_4703_call(), 0)
call_10148 = relay.TupleGetItem(func_4705_call(), 0)
func_3879_call = mod.get_global_var('func_3879')
func_3881_call = mutated_mod.get_global_var('func_3881')
call_10149 = func_3879_call()
call_10150 = func_3879_call()
func_10002_call = mod.get_global_var('func_10002')
func_10003_call = mutated_mod.get_global_var('func_10003')
call_10172 = relay.TupleGetItem(func_10002_call(), 1)
call_10173 = relay.TupleGetItem(func_10003_call(), 1)
output = relay.Tuple([call_10125,call_10130,call_10132,call_10147,call_10149,call_10172,])
output2 = relay.Tuple([call_10126,call_10131,call_10133,call_10148,call_10150,call_10173,])
func_10204 = relay.Function([], output)
mod['func_10204'] = func_10204
mod = relay.transform.InferType()(mod)
mutated_mod['func_10204'] = func_10204
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10204_call = mutated_mod.get_global_var('func_10204')
call_10205 = func_10204_call()
output = call_10205
func_10206 = relay.Function([], output)
mutated_mod['func_10206'] = func_10206
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5340_call = mod.get_global_var('func_5340')
func_5342_call = mutated_mod.get_global_var('func_5342')
call_10278 = relay.TupleGetItem(func_5340_call(), 3)
call_10279 = relay.TupleGetItem(func_5342_call(), 3)
func_1549_call = mod.get_global_var('func_1549')
func_1550_call = mutated_mod.get_global_var('func_1550')
call_10306 = relay.TupleGetItem(func_1549_call(), 2)
call_10307 = relay.TupleGetItem(func_1550_call(), 2)
output = relay.Tuple([call_10278,call_10306,])
output2 = relay.Tuple([call_10279,call_10307,])
func_10312 = relay.Function([], output)
mod['func_10312'] = func_10312
mod = relay.transform.InferType()(mod)
output = func_10312()
func_10313 = relay.Function([], output)
mutated_mod['func_10313'] = func_10313
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10327 = relay.const([[[9.739132,-4.239163,-7.203870,-0.961962,5.033578,-9.903014,7.831000,4.151102,-4.801465,0.587955],[-3.549676,5.402498,0.653729,8.556896,7.957615,-3.924727,-5.285218,9.384972,-1.709587,-9.928988],[5.944838,-5.061211,4.219056,3.877190,3.297747,0.851409,-4.236341,-2.008259,9.965066,8.223794],[7.440484,4.961193,7.214121,-3.869263,2.037151,6.656587,1.057160,3.667147,-9.448582,-1.700584],[0.271799,0.882430,-6.662258,5.007007,5.086265,-3.508481,9.809768,4.071963,-0.651105,-5.001975],[-2.046789,0.216672,3.810123,-3.868744,8.813498,4.003233,-1.394643,5.292962,0.679534,9.969299],[4.997795,6.752911,0.620788,8.183558,-1.532520,2.256166,-2.966509,7.443921,-4.002516,3.938632],[-5.289344,-5.473897,4.093965,-1.912785,7.394049,9.052926,2.438884,5.563169,8.287777,2.713925],[-2.951237,0.379635,1.883946,-1.556364,-2.827237,2.402774,-4.775438,-2.448557,4.359687,-8.907054]],[[-6.925594,-3.474954,-5.351021,-3.892305,-1.344692,-8.292621,8.241194,8.773811,-5.733709,-6.640153],[4.000507,1.158459,7.162097,3.328767,-2.941562,2.566608,-6.867911,3.665395,1.175072,-2.203688],[9.652031,-1.353688,-4.258839,6.492568,4.750152,-0.891374,4.214725,2.257335,3.578001,-9.412177],[-3.900166,-0.066283,8.046878,-5.040853,7.984005,-6.272106,2.881807,3.071896,5.883366,-9.487767],[-9.261369,7.146230,-4.859836,3.117002,-0.875366,-7.188140,5.353930,7.707936,-0.404860,-6.385000],[-6.079524,-0.366168,0.451632,-0.176451,-7.561512,-7.527781,8.135655,-0.903158,-7.744220,8.680816],[2.772032,2.164006,-4.763621,5.391056,-3.022066,-9.271492,0.788745,-8.098783,0.082530,5.959043],[3.000131,-2.072603,2.654237,4.566286,-0.753921,-3.817003,-5.987583,2.601869,-7.310674,8.040594],[-5.460884,-4.277454,-9.653154,-7.884777,9.825069,0.485965,9.052299,4.484227,-2.060445,-5.426410]],[[2.302756,9.547765,7.957251,-6.215164,1.407869,-8.465996,0.459381,6.629719,-5.598761,5.085600],[9.134426,-1.571585,3.522730,-7.768281,-0.714214,-2.955727,8.502418,9.343005,-4.152787,0.537026],[3.947778,3.845102,-2.006989,-8.518379,8.758897,-1.405944,-8.189761,0.783641,-7.407132,-2.427033],[9.266528,-4.296083,-5.059450,8.220513,2.875809,-8.819322,-4.727016,8.073252,8.381163,3.947975],[-7.073251,2.726987,7.315394,-5.175946,-6.279057,-7.599676,7.239563,0.147474,4.678727,5.914946],[9.625117,7.476597,6.302514,-4.432134,9.082773,5.347408,3.514775,-5.334777,-0.665207,-8.957610],[9.636329,-9.516267,1.751095,-2.981214,-3.491128,9.714776,-3.921168,5.633207,5.886222,-3.939541],[-7.862192,-2.766950,-7.812489,-7.731931,4.454423,-0.504116,8.571843,-5.818992,-8.083509,4.772221],[-3.898041,-9.693904,-1.747412,-7.461980,6.152769,-5.289642,3.357706,4.935197,1.526453,-1.799737]],[[-2.552173,-8.831569,6.506552,-1.387851,1.253841,-6.711492,-8.345597,-4.132388,-2.554147,-7.737021],[3.242305,6.034017,-0.411916,7.482314,-2.403898,-9.334598,-3.196478,1.899715,0.894030,9.661714],[6.796999,-8.159856,-7.960484,-3.899926,-6.528370,-7.982923,7.165959,-9.075277,-6.462930,-5.829530],[0.570725,6.750591,3.171520,4.353696,-0.705082,7.031891,-6.113891,3.262285,4.604399,6.041226],[-0.564308,7.288728,-3.279884,2.606884,8.385316,9.342198,0.703263,-2.675873,3.109443,1.783375],[-7.916706,-7.400054,6.242096,7.732645,7.436642,-3.276209,-1.911420,-3.135574,6.846180,7.666721],[1.209229,7.583083,5.260068,7.140338,8.881423,-4.788054,5.437670,-0.575437,-6.160956,4.104070],[-7.497956,-6.883794,-9.306996,0.252519,-3.986875,-3.294336,-0.337366,-6.896681,-6.306855,-7.385686],[3.413998,6.549399,3.269620,3.725312,-6.390971,-8.766616,-2.251241,3.162316,4.338042,-3.300723]],[[-8.306222,7.182893,-6.240583,-0.276717,8.526502,-1.192460,-1.973051,0.918627,9.803979,0.749881],[-2.634814,-4.106171,-1.220748,8.547032,8.183112,-9.991197,-8.198593,-8.419868,3.881155,7.293892],[1.687860,7.952621,-1.466322,-5.612918,4.840142,4.668596,4.656565,-8.815250,7.909265,9.465470],[7.812776,-1.509048,5.554925,-7.493951,-8.093960,8.511147,0.101461,4.139749,8.661152,0.046207],[5.010981,-8.583709,0.063465,0.319284,-3.048898,2.706615,-0.993227,-1.438657,-7.376035,-8.933176],[-0.568069,-9.985530,1.310117,0.402273,0.898500,5.738143,0.591963,2.931529,4.329274,-4.843290],[6.745057,4.515655,0.425308,3.118311,0.967335,-7.996328,6.083571,5.441713,-8.024727,-5.774669],[-7.359905,8.689996,4.664848,-0.316094,9.127990,2.138638,-2.043176,-1.783842,-4.991310,1.245309],[2.090423,6.457093,-9.529239,6.169949,-4.538233,2.343469,-6.335468,-5.033086,9.277121,-0.749998]],[[3.340423,-7.187608,-5.754509,-6.787515,-0.030735,-1.140431,4.938640,4.616905,2.667809,2.638919],[-3.359431,-0.490952,8.932862,-6.707372,4.556956,7.665451,-5.252895,-3.863092,-3.728965,0.652214],[-1.706719,-4.418734,-1.631464,1.742993,9.891103,6.206586,6.193866,-4.214097,-3.226801,-3.798707],[0.635625,0.956442,4.302910,-2.073682,-9.147930,-7.640732,-4.831281,-6.829149,-4.663620,-1.974230],[-6.450207,3.877237,2.186506,-7.254118,9.486556,2.334933,-2.682923,-4.581416,-8.132152,7.572848],[3.824968,9.703343,7.594599,-6.828264,0.722383,1.410777,-0.264907,-9.853694,-8.133855,3.240950],[0.665214,-2.481579,8.321176,1.712326,6.274178,-8.279006,-3.522899,-5.340263,-1.396375,-5.069715],[4.984167,6.568825,-0.099363,9.747917,1.715618,-8.794959,4.117899,-6.635534,-0.100476,-6.052579],[8.551547,-3.116426,-8.704025,7.429933,6.123315,4.219927,2.417813,-2.858837,-0.479290,-4.403971]],[[-7.145600,-6.591838,0.274056,1.443336,-6.498895,3.423991,-1.201232,3.008041,6.929995,8.150851],[-7.616869,1.254912,-7.315153,-3.876305,-1.605573,-3.502318,6.033120,-7.389219,4.175685,-0.708744],[-5.383315,8.713665,1.133509,9.664939,2.782024,8.291055,4.804181,2.852079,-9.543330,-4.000632],[-7.086232,-6.683912,7.083862,-0.261983,-1.141705,-6.510458,0.195057,7.311302,2.391011,3.861727],[-9.750885,-6.518699,4.099635,5.206229,8.264554,-3.040665,-2.672292,-4.714623,-3.196758,-9.081380],[3.493176,8.262702,2.473311,-2.331149,4.242039,6.226406,-1.191169,-6.592370,-7.262847,-6.688720],[7.359665,9.278215,6.207395,-9.871364,4.977667,-2.721194,3.995285,9.982964,-8.306525,4.552381],[4.800396,5.205896,7.388584,2.312750,2.038685,7.660741,3.439228,-6.243561,-8.784012,-4.325072],[-2.365810,7.179671,-3.173004,-7.728489,-6.341297,-0.272855,-0.363120,2.267693,7.487620,2.922881]],[[-5.316562,-6.564726,-3.002241,-1.336740,0.528696,-0.406942,5.783397,4.101904,-1.966655,2.811095],[-9.330433,-8.823360,8.801450,-8.391711,-0.800666,-6.863464,-7.365822,-1.669569,3.182967,-1.076288],[1.244386,-1.638095,-6.279142,-9.559605,7.074097,6.521782,-8.737249,3.736458,9.638680,-9.462032],[3.997481,1.141728,9.956087,-6.985072,-3.605975,4.735924,4.579028,0.713203,-4.048411,-0.123691],[4.162985,4.229906,6.959181,8.601636,-4.325970,1.804708,-0.570777,8.210585,-4.479586,8.323700],[-2.624640,8.869910,-5.697185,1.783098,-5.706578,7.502079,7.814392,0.965875,8.450728,-1.021728],[4.891100,2.714195,-9.861567,1.341048,5.467744,4.249251,-7.043741,5.315194,5.638527,7.588982],[4.335172,3.142715,8.534659,5.842531,-8.038059,-0.426389,5.056355,5.970671,-8.400347,5.417122],[5.801950,-8.870940,1.642794,4.507029,-3.041781,-0.750753,3.172403,8.128861,3.199747,2.338926]]], dtype = "float64")#candidate|10327|(8, 9, 10)|const|float64
var_10328 = relay.var("var_10328", dtype = "float64", shape = (8, 9, 10))#candidate|10328|(8, 9, 10)|var|float64
bop_10329 = relay.floor_divide(const_10327.astype('float64'), relay.reshape(var_10328.astype('float64'), relay.shape_of(const_10327))) # shape=(8, 9, 10)
func_5969_call = mod.get_global_var('func_5969')
func_5973_call = mutated_mod.get_global_var('func_5973')
const_10333 = relay.const([True,True,True,True,True,True,True,True,False,False,False,True,False,False,True,True,False,True,False,True,True,False,True,True,True,True,False,True,False,False,False,True,True,True,True,False,False,False,False,True,True,False,False,True,False,True,False,False,True,False,True,False,True,True,False,False,False,False,False,False,False,False,False,False,True,True,False,True,True,False,False,False,False,False,True,False,False,True,False,True,False,False,True,True,True,True,True,True,True,True,False,False,True,False,False,False,True,False,False,False,True,False,True,True,True,False,False,True,False,False,False,False,False,True,True,True,True,False,True,False,False,True,False,True,True,False,False,False,True,False,False,False,False,True,True,True,False,True,False,False,False,False,False,False,False,True,False,True,True,True,True,True,False,False,True,True,False,True,True,True,True,True,True,True,True,True,True,True,False,True,True,False,False,True,True,False], dtype = "bool")#candidate|10333|(176,)|const|bool
const_10334 = relay.const([[True,False,False,True,False,False,False,True,True,True,False,False,False,True,False,True,False,True,False,True,True,False,False,False,False,True,True,False,True,False,True,True,False,True,False,False,False,False,True,True,True,True,True,True,False,True,False,True,False,True,False,False,True,True,False,True,False,True,True,False,True,False,True,True,True,True,True,True,True,False,False,False,True,False,True,True,True,True,False,False,False,True,False,True,False,False,False,False,True,True,False,False,True,True,True,True,False,False,False,True,False,True,True,True,True,False,False,False,False,True,False,False,False,False,False,False,False,False,False,True,False,True,True,True,False,False,False,True,False,True,False,False,False,False,True,True,False,False,True,False,True,False,True,True,False,True,True,True,True,True,False,True,False,False,True,True,False,True,False,True,False,False,True,False,False,True,True,True,True,True,True,False,True,False,True,True,True,False,False,True,True,True,False,False,True,True,True,True,True,True,False,True,True,False,False,False,True,True,True,False,False,False,False,True,True,True,True,False,True,True,True,False,False,False,False,True,True,True,True,False],[False,True,False,False,True,False,False,False,True,True,False,False,True,False,True,False,True,False,True,False,False,False,True,False,False,True,False,False,True,True,False,True,False,False,True,False,False,True,False,False,False,True,False,False,True,True,False,True,False,True,True,False,False,False,False,False,False,False,False,True,True,True,False,False,True,False,False,False,True,False,False,False,True,False,False,True,True,False,False,True,False,True,True,False,False,False,False,False,False,True,True,False,False,True,False,True,True,False,True,True,False,True,True,False,True,True,True,True,True,True,False,True,False,False,True,False,False,False,False,False,True,True,False,True,True,False,False,False,False,False,True,True,True,False,True,True,True,False,False,True,True,False,False,True,False,False,False,False,False,False,True,True,False,True,False,True,False,False,True,False,False,True,True,False,True,False,True,True,False,True,False,True,True,False,True,False,False,True,False,False,True,True,True,True,True,True,False,True,False,False,True,False,True,True,False,False,True,True,True,False,False,True,True,False,False,False,False,False,True,False,True,True,False,False,False,True,False,True,False,False],[True,True,False,False,False,True,False,False,False,False,False,True,True,True,True,True,False,True,False,True,True,True,False,True,True,True,False,True,False,False,True,True,False,False,True,False,True,True,False,True,True,False,False,True,False,True,False,False,False,False,True,False,True,False,True,True,True,False,False,True,False,False,False,False,False,True,True,True,False,True,False,False,False,True,True,False,False,True,False,True,False,True,True,True,True,False,False,False,False,True,True,True,True,True,True,True,False,False,False,True,False,False,True,False,True,False,False,False,True,False,True,True,True,False,True,True,False,True,True,True,False,True,False,True,False,True,False,True,False,False,False,False,True,True,False,False,True,False,False,False,False,True,False,True,True,True,False,False,False,False,True,True,True,True,False,True,False,True,False,False,True,False,False,False,True,False,True,False,False,True,True,False,True,True,False,False,False,False,False,False,False,True,True,True,False,False,True,True,True,True,True,False,False,False,True,True,False,False,False,True,True,True,True,False,False,True,True,False,False,True,False,False,True,False,False,True,False,True,False,True],[False,False,True,False,False,False,False,False,False,False,True,False,True,True,False,True,False,True,True,False,True,True,True,False,True,True,True,True,False,False,False,False,False,False,True,False,False,True,False,True,True,False,True,False,True,True,True,True,True,False,False,False,True,True,False,True,False,True,False,False,True,True,False,True,True,True,True,True,False,False,False,True,False,True,True,True,True,False,False,False,False,False,False,False,True,False,True,True,True,True,True,True,False,False,False,True,True,False,True,False,False,True,True,False,True,True,True,False,True,True,False,False,False,False,False,True,False,True,True,True,False,False,False,True,False,True,False,False,True,True,False,True,True,True,True,False,False,False,False,False,True,False,False,True,False,False,True,False,True,False,True,True,False,False,False,True,True,True,True,False,False,True,True,True,False,False,True,True,False,True,True,True,True,True,True,True,True,False,True,False,False,True,True,False,True,False,True,False,True,False,False,True,True,True,True,False,True,False,True,True,False,False,False,True,True,True,True,False,True,False,False,True,True,True,False,False,True,True,False,False]], dtype = "bool")#candidate|10334|(4, 220)|const|bool
const_10335 = relay.const([False,True,True,True,True,False,True,False,True,True,False,False,True,True,True,False,True,True,False,True,False,False,True,False,False,False,False,True,True,False,True,True,True,True,False,True,True,True,True,True,True,False,True,False,True,False,False,True,True,False,False,False,False,True,False,True,False,False,False,True,False,True,False,False,False,False,True,False,True,False,True,False,False,False,False,False,False,False,True,False,True,True,False,True,True,False,False,True,True,False,False,True,False,False,True,False,False,False,False,True,True,True,False,True,True,False,True,False,True,False,False,False,False,False,True,True,False,False,False,True,False,False,True,False,False,False,True,False,True,True,True,False,True,True,True,False,False,True,False,True,True,False,True,True,False,False,False,True,False,False,False,True,False,True,True,False,False,False,False,True,False,False,True,True,True,False,True,True,True,False,False,True,False,True,False,True,False,True,False,False,True,False,True,False,False,True,False,False,True,True,True,True,True,False,False,False,False,False,False,False,False,False,True,False,False,True,True,False,False,True,False,False,False,False,False,False,True,False,False,False,True,True,False,False,True,False,True,True,False,True,True,False,True,False,True,True,False,False,True,False,False,False,False,False,False,False,False,True,True,False,True,False,True,True,True,False,False,False,True,False,True,True,True,False,True,False,False,True,False,True,False,False,True,False,False,True,True,False,False,False,False,False,False,True,True,True,True,True,True,True,False,False,False,True,True,True,True,True,True,True,False,True,False,False,True,False,True,False,True,False,False,True,False,True,True,True,False,False,True,False,True,True,False,True,False,True,True,True,False,False,False,True,True,False,True,False,True,False,True,False,False,True,True,False,False,False,False,True,True,True,True,False,False,True,False,False,True,True,True,True,True,True,False,False,False,True,False,True,False,True,True,False,True,False,True,True,True,True,False,False,False,True,False,False,True,False,False,False,True,True,True,False,False,False,False,False,True,True,True,True,False,False,False,True,True,True,True,False,False,True,False,False,True,False,False,False,True,False,False,False,True,True,True,True,True,True,False,True,False,True,False,True,False,False,False,True,True,True,True,True,True,True,True,False,True,True,False,False,True,False,True,False,True,False,False,True,True,False,False,False,True,False,True,True,True,True,False,False,True,True,False,False,False,True,False,False,True,False,False,False,False,True,True,True,True,True,False,True,True,False,True,False,True,False,False,False,True,False,False,False,False,False,False,False,False,False,False,True,False,True,True,False,False,False,False,False,True,False,True,False,True,False,True,False,False,True,False,True,True,False,False,True,True,False,False,True,True,False,False,True,True,True,False,False,False,False,False,True,False,True,False,True,True,True,True,True,False,True,False,True,False,False,True,True,True,True,False,False,True,False,True,True,True,True,True,True,True,True,True,False,False,True,True,True,False,True,False,False,False,False,True,False,True,False,True,False,True,True,False,True,True,True,False,True,True,True,False,False,False,True,False,False,False,False,True,False,True,True,False,True,True,False,False,False,False,True,False,False,True,False,True,False,False,True,True,True,False,False,True,False,True,False,False,False,False,True,False,True,False,True,False,True,True,False,False,True,False,False,True,True,True,False,True,True,True,True,False,True,True,True,True,False,True,True,False,True,False,True,False,False,False,True,False,True,True,False,False,True,False,False,False,True,False,False,False,False,True,False,True,False,False,True,False,True,False,True,True,True,False,True,True,False,False,True,True,False,True,True,True,False,True,False,True,False,False,False,False,True,False,True,True,False,False,True,False,True,False,True,False,False,False,True,False,True,True,True,True,False,True,False,False,False,False,False,False,False,False,False,True,False,False,False,True,False,False,True,True,False,False,True,True,False,True,True,True,False,True,False,False,False,True,True,False,True,True,True,False,True,True,True,True,True,False,False,False,False,True,True,False,True,True,True,False,False,True,True,False,False,False,False,False,True,True,False,False,False,True,False,True,True,False,True,False,False,True,False,False,True,False,False,False,True,False,False,True,True,False,True,True,False,True,True,True,True,True,True,True,True,False,True,False,False,False,False,False,True,True,False,False,True,False,True,False,False,True,True,True,True,False,False,True,True,True,False,False,True,False,False,False,False,True,False,False,True,False,False,False,True,False,True,False,False,False,False,True,True,True,False,True,True,True,False,True,False,True,True,True,True,True,True,True,False,True,True,True,False,True,False,True,True,True,False,True,True,False,False,False,False,True,True,True,False,False,False,False,True,False,False,False,True,True,True,False,True,False,True,True,True,True,False,False,False,False,True,True,True,False,False,True,True,True,False,True,True,True,True,False,True,True,False,False,True,True,False,False,True,False,True,False,True,True,False,False,False,False,True,True,False,True,False,True,True,False,False,False,True,True,True,False,True,True,True,False,True,True,False,False,True,True,True,True,False,True,True], dtype = "bool")#candidate|10335|(1014,)|const|bool
call_10332 = relay.TupleGetItem(func_5969_call(relay.reshape(const_10333.astype('bool'), [1, 16, 11]), relay.reshape(const_10334.astype('bool'), [5, 16, 11]), relay.reshape(const_10335.astype('bool'), [1, 1014]), ), 2)
call_10336 = relay.TupleGetItem(func_5973_call(relay.reshape(const_10333.astype('bool'), [1, 16, 11]), relay.reshape(const_10334.astype('bool'), [5, 16, 11]), relay.reshape(const_10335.astype('bool'), [1, 1014]), ), 2)
output = relay.Tuple([bop_10329,call_10332,const_10333,const_10334,const_10335,])
output2 = relay.Tuple([bop_10329,call_10336,const_10333,const_10334,const_10335,])
func_10344 = relay.Function([var_10328,], output)
mod['func_10344'] = func_10344
mod = relay.transform.InferType()(mod)
var_10345 = relay.var("var_10345", dtype = "float64", shape = (8, 9, 10))#candidate|10345|(8, 9, 10)|var|float64
output = func_10344(var_10345)
func_10346 = relay.Function([var_10345], output)
mutated_mod['func_10346'] = func_10346
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9390_call = mod.get_global_var('func_9390')
func_9392_call = mutated_mod.get_global_var('func_9392')
call_10378 = relay.TupleGetItem(func_9390_call(), 0)
call_10379 = relay.TupleGetItem(func_9392_call(), 0)
func_897_call = mod.get_global_var('func_897')
func_900_call = mutated_mod.get_global_var('func_900')
const_10385 = relay.const([5.714487,0.125650,-8.443150,-4.014586,4.853977,3.089460,4.312588,6.227602,-4.814769,1.466572,-2.746285,4.253146,-7.535445,-0.295754,-2.307358,-0.691264,6.093496,-5.172249,5.665643,-1.074448,-3.636131,-5.768021,2.142463,2.763548,6.109919,-3.831418,3.238368,1.544341,-6.255018,-3.019165,-1.644075,-4.453253,-6.149812,-9.453011,3.354370,4.343439,-9.001665,2.061758,8.851505,-8.313402,-0.982712,-8.656354,-9.925807,0.391887,-0.193363,5.012183,8.427071,-3.788128,-1.709240,9.808445,-5.101365,-2.201694,-7.157204,-9.275192,-1.516066,-2.057731,1.531407,-6.976994,3.507800,-4.469911,7.038027,-5.594652,-5.559043,9.421429,0.727243,-4.771582,9.060662,0.504255,8.266639,5.506260,-6.767395,-4.208845,-0.241720,5.901167,-0.520322,4.163015,5.952823,-7.120179,1.711978,-4.097068,-1.162422,-0.864985,6.127088,8.185978,8.758475,-0.135642,6.938574,7.509030,-9.593206,9.243679,6.190286,-9.978121,-3.252250,-7.379470,-8.317957,6.411351,1.344092,-8.805280,4.657903,9.077409,-8.994577,-1.329125,-0.559685,-9.899997,-9.095695,-5.009322,-4.046857,-5.594742,1.164748,-9.637628,0.019336,9.895102,4.321457,-0.365293,1.922415,8.600284,8.724076,2.554365,-3.562422,-1.568927,3.160359,-8.717732,-0.454645,3.474935,9.087711,0.067962,4.477999,8.571728,3.552196,6.077742,-7.557562,-8.214201,-9.969010,1.811340,4.922404,6.747601,-4.686166,7.504858,-0.206281,5.807068,-5.731683,-1.422828,5.846937,1.520189,3.652705,3.442482,1.867737,-1.765251,-9.297601,-1.166440,4.381018,-1.435948,2.532817,-3.613752,-8.021400,8.318922,7.604335,-9.299746,-5.508370,1.400341,-7.882890,3.674188,-0.413101,9.142025,8.422215,7.307174,5.417357,8.785279,2.314477,-1.858862,7.702031,-5.964580,-6.412790,3.357066,-0.159584,-2.110935,6.523074,0.022898,1.409075,-4.170981,-5.089296,-7.599450,-5.686656,2.982842,6.633220,1.723936,0.768657,5.843258,1.638842,-2.600327,1.688691,-0.382151,-7.926058,1.735647,0.453678,3.423016,5.127398,4.680756,3.260367,6.548821,5.304084,9.361047,-1.936445,-1.576932,9.167325,-5.473158,6.050210,9.376520,-1.035605,-5.536195,4.532730,8.888344,1.492687,-1.928993,1.805465,0.218003,-6.966111,-3.728658,-1.422943,-2.405184,7.118698,-2.291159,-3.473196,6.444457,-9.074731,-1.909093,7.053336,-4.377079,-3.595921,5.952411,-2.943576,-6.864046,6.037522,-0.338766,6.114463,7.931524,8.431196,-4.329020,9.061393,-8.759479,0.974139,6.021319,-2.482238,6.357872,-7.762324,2.417730,7.648296,-6.234042,-6.090655,-6.345975,2.493235,-7.360285,-4.477246,-5.726399,-5.218656,2.391164,2.821580,-2.640636,7.625686,6.917323,-0.894931,-8.419236,-5.876753,-8.954424,0.381343,1.601059,-5.467177,7.529668,-6.662374,2.067894], dtype = "float64")#candidate|10385|(270,)|const|float64
call_10384 = relay.TupleGetItem(func_897_call(relay.reshape(const_10385.astype('float64'), [270,])), 3)
call_10386 = relay.TupleGetItem(func_900_call(relay.reshape(const_10385.astype('float64'), [270,])), 3)
output = relay.Tuple([call_10378,call_10384,const_10385,])
output2 = relay.Tuple([call_10379,call_10386,const_10385,])
func_10392 = relay.Function([], output)
mod['func_10392'] = func_10392
mod = relay.transform.InferType()(mod)
mutated_mod['func_10392'] = func_10392
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10392_call = mutated_mod.get_global_var('func_10392')
call_10393 = func_10392_call()
output = call_10393
func_10394 = relay.Function([], output)
mutated_mod['func_10394'] = func_10394
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1243_call = mod.get_global_var('func_1243')
func_1244_call = mutated_mod.get_global_var('func_1244')
call_10407 = relay.TupleGetItem(func_1243_call(), 0)
call_10408 = relay.TupleGetItem(func_1244_call(), 0)
var_10411 = relay.var("var_10411", dtype = "int32", shape = (1, 16, 11))#candidate|10411|(1, 16, 11)|var|int32
bop_10412 = relay.divide(call_10407.astype('float64'), relay.reshape(var_10411.astype('float64'), relay.shape_of(call_10407))) # shape=(1, 16, 11)
bop_10415 = relay.divide(call_10408.astype('float64'), relay.reshape(var_10411.astype('float64'), relay.shape_of(call_10408))) # shape=(1, 16, 11)
output = relay.Tuple([bop_10412,])
output2 = relay.Tuple([bop_10415,])
func_10416 = relay.Function([var_10411,], output)
mod['func_10416'] = func_10416
mod = relay.transform.InferType()(mod)
var_10417 = relay.var("var_10417", dtype = "int32", shape = (1, 16, 11))#candidate|10417|(1, 16, 11)|var|int32
output = func_10416(var_10417)
func_10418 = relay.Function([var_10417], output)
mutated_mod['func_10418'] = func_10418
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3307_call = mod.get_global_var('func_3307')
func_3309_call = mutated_mod.get_global_var('func_3309')
call_10501 = relay.TupleGetItem(func_3307_call(), 0)
call_10502 = relay.TupleGetItem(func_3309_call(), 0)
func_1651_call = mod.get_global_var('func_1651')
func_1653_call = mutated_mod.get_global_var('func_1653')
call_10506 = relay.TupleGetItem(func_1651_call(), 1)
call_10507 = relay.TupleGetItem(func_1653_call(), 1)
output = relay.Tuple([call_10501,call_10506,])
output2 = relay.Tuple([call_10502,call_10507,])
func_10520 = relay.Function([], output)
mod['func_10520'] = func_10520
mod = relay.transform.InferType()(mod)
mutated_mod['func_10520'] = func_10520
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10520_call = mutated_mod.get_global_var('func_10520')
call_10521 = func_10520_call()
output = call_10521
func_10522 = relay.Function([], output)
mutated_mod['func_10522'] = func_10522
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1561_call = mod.get_global_var('func_1561')
func_1562_call = mutated_mod.get_global_var('func_1562')
call_10558 = relay.TupleGetItem(func_1561_call(), 0)
call_10559 = relay.TupleGetItem(func_1562_call(), 0)
output = relay.Tuple([call_10558,])
output2 = relay.Tuple([call_10559,])
func_10570 = relay.Function([], output)
mod['func_10570'] = func_10570
mod = relay.transform.InferType()(mod)
mutated_mod['func_10570'] = func_10570
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10570_call = mutated_mod.get_global_var('func_10570')
call_10571 = func_10570_call()
output = call_10571
func_10572 = relay.Function([], output)
mutated_mod['func_10572'] = func_10572
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4703_call = mod.get_global_var('func_4703')
func_4705_call = mutated_mod.get_global_var('func_4705')
call_10578 = relay.TupleGetItem(func_4703_call(), 0)
call_10579 = relay.TupleGetItem(func_4705_call(), 0)
func_10416_call = mod.get_global_var('func_10416')
func_10418_call = mutated_mod.get_global_var('func_10418')
call_10589 = relay.TupleGetItem(func_10416_call(relay.reshape(call_10578.astype('int32'), [1, 16, 11])), 0)
call_10590 = relay.TupleGetItem(func_10418_call(relay.reshape(call_10578.astype('int32'), [1, 16, 11])), 0)
bop_10595 = relay.maximum(call_10578.astype('int8'), relay.reshape(call_10589.astype('int8'), relay.shape_of(call_10578))) # shape=(1, 16, 11)
bop_10598 = relay.maximum(call_10579.astype('int8'), relay.reshape(call_10590.astype('int8'), relay.shape_of(call_10579))) # shape=(1, 16, 11)
output = relay.Tuple([bop_10595,])
output2 = relay.Tuple([bop_10598,])
func_10615 = relay.Function([], output)
mod['func_10615'] = func_10615
mod = relay.transform.InferType()(mod)
output = func_10615()
func_10616 = relay.Function([], output)
mutated_mod['func_10616'] = func_10616
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10570_call = mod.get_global_var('func_10570')
func_10572_call = mutated_mod.get_global_var('func_10572')
call_10626 = relay.TupleGetItem(func_10570_call(), 0)
call_10627 = relay.TupleGetItem(func_10572_call(), 0)
output = relay.Tuple([call_10626,])
output2 = relay.Tuple([call_10627,])
func_10630 = relay.Function([], output)
mod['func_10630'] = func_10630
mod = relay.transform.InferType()(mod)
mutated_mod['func_10630'] = func_10630
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10630_call = mutated_mod.get_global_var('func_10630')
call_10631 = func_10630_call()
output = call_10631
func_10632 = relay.Function([], output)
mutated_mod['func_10632'] = func_10632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3184_call = mod.get_global_var('func_3184')
func_3186_call = mutated_mod.get_global_var('func_3186')
call_10638 = relay.TupleGetItem(func_3184_call(), 0)
call_10639 = relay.TupleGetItem(func_3186_call(), 0)
output = call_10638
output2 = call_10639
func_10665 = relay.Function([], output)
mod['func_10665'] = func_10665
mod = relay.transform.InferType()(mod)
mutated_mod['func_10665'] = func_10665
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10665_call = mutated_mod.get_global_var('func_10665')
call_10666 = func_10665_call()
output = call_10666
func_10667 = relay.Function([], output)
mutated_mod['func_10667'] = func_10667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1339_call = mod.get_global_var('func_1339')
func_1340_call = mutated_mod.get_global_var('func_1340')
call_10668 = relay.TupleGetItem(func_1339_call(), 0)
call_10669 = relay.TupleGetItem(func_1340_call(), 0)
func_10665_call = mod.get_global_var('func_10665')
func_10667_call = mutated_mod.get_global_var('func_10667')
call_10682 = func_10665_call()
call_10683 = func_10665_call()
func_9390_call = mod.get_global_var('func_9390')
func_9392_call = mutated_mod.get_global_var('func_9392')
call_10690 = relay.TupleGetItem(func_9390_call(), 0)
call_10691 = relay.TupleGetItem(func_9392_call(), 0)
func_4427_call = mod.get_global_var('func_4427')
func_4429_call = mutated_mod.get_global_var('func_4429')
call_10711 = func_4427_call()
call_10712 = func_4427_call()
output = relay.Tuple([call_10668,call_10682,call_10690,call_10711,])
output2 = relay.Tuple([call_10669,call_10683,call_10691,call_10712,])
func_10718 = relay.Function([], output)
mod['func_10718'] = func_10718
mod = relay.transform.InferType()(mod)
output = func_10718()
func_10719 = relay.Function([], output)
mutated_mod['func_10719'] = func_10719
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8215_call = mod.get_global_var('func_8215')
func_8216_call = mutated_mod.get_global_var('func_8216')
call_10784 = func_8215_call()
call_10785 = func_8215_call()
func_6110_call = mod.get_global_var('func_6110')
func_6112_call = mutated_mod.get_global_var('func_6112')
call_10803 = relay.TupleGetItem(func_6110_call(), 2)
call_10804 = relay.TupleGetItem(func_6112_call(), 2)
output = relay.Tuple([call_10784,call_10803,])
output2 = relay.Tuple([call_10785,call_10804,])
func_10806 = relay.Function([], output)
mod['func_10806'] = func_10806
mod = relay.transform.InferType()(mod)
output = func_10806()
func_10807 = relay.Function([], output)
mutated_mod['func_10807'] = func_10807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6653_call = mod.get_global_var('func_6653')
func_6654_call = mutated_mod.get_global_var('func_6654')
call_10860 = relay.TupleGetItem(func_6653_call(), 0)
call_10861 = relay.TupleGetItem(func_6654_call(), 0)
output = call_10860
output2 = call_10861
func_10866 = relay.Function([], output)
mod['func_10866'] = func_10866
mod = relay.transform.InferType()(mod)
mutated_mod['func_10866'] = func_10866
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10866_call = mutated_mod.get_global_var('func_10866')
call_10867 = func_10866_call()
output = call_10867
func_10868 = relay.Function([], output)
mutated_mod['func_10868'] = func_10868
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10002_call = mod.get_global_var('func_10002')
func_10003_call = mutated_mod.get_global_var('func_10003')
call_10877 = relay.TupleGetItem(func_10002_call(), 2)
call_10878 = relay.TupleGetItem(func_10003_call(), 2)
func_3879_call = mod.get_global_var('func_3879')
func_3881_call = mutated_mod.get_global_var('func_3881')
call_10879 = func_3879_call()
call_10880 = func_3879_call()
func_2604_call = mod.get_global_var('func_2604')
func_2607_call = mutated_mod.get_global_var('func_2607')
call_10888 = func_2604_call(relay.reshape(call_10879.astype('int32'), [1, 16, 11]))
call_10889 = func_2604_call(relay.reshape(call_10879.astype('int32'), [1, 16, 11]))
func_2287_call = mod.get_global_var('func_2287')
func_2290_call = mutated_mod.get_global_var('func_2290')
var_10901 = relay.var("var_10901", dtype = "uint32", shape = (20,))#candidate|10901|(20,)|var|uint32
call_10900 = func_2287_call(relay.reshape(var_10901.astype('uint32'), [1, 10, 2]))
call_10902 = func_2287_call(relay.reshape(var_10901.astype('uint32'), [1, 10, 2]))
output = relay.Tuple([call_10877,call_10879,call_10888,call_10900,var_10901,])
output2 = relay.Tuple([call_10878,call_10880,call_10889,call_10902,var_10901,])
func_10907 = relay.Function([var_10901,], output)
mod['func_10907'] = func_10907
mod = relay.transform.InferType()(mod)
var_10908 = relay.var("var_10908", dtype = "uint32", shape = (20,))#candidate|10908|(20,)|var|uint32
output = func_10907(var_10908)
func_10909 = relay.Function([var_10908], output)
mutated_mod['func_10909'] = func_10909
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7949_call = mod.get_global_var('func_7949')
func_7951_call = mutated_mod.get_global_var('func_7951')
call_10942 = func_7949_call()
call_10943 = func_7949_call()
output = call_10942
output2 = call_10943
func_10944 = relay.Function([], output)
mod['func_10944'] = func_10944
mod = relay.transform.InferType()(mod)
mutated_mod['func_10944'] = func_10944
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10944_call = mutated_mod.get_global_var('func_10944')
call_10945 = func_10944_call()
output = call_10945
func_10946 = relay.Function([], output)
mutated_mod['func_10946'] = func_10946
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6770_call = mod.get_global_var('func_6770')
func_6771_call = mutated_mod.get_global_var('func_6771')
call_10952 = func_6770_call()
call_10953 = func_6770_call()
func_8171_call = mod.get_global_var('func_8171')
func_8172_call = mutated_mod.get_global_var('func_8172')
call_10961 = relay.TupleGetItem(func_8171_call(), 0)
call_10962 = relay.TupleGetItem(func_8172_call(), 0)
output = relay.Tuple([call_10952,call_10961,])
output2 = relay.Tuple([call_10953,call_10962,])
func_10967 = relay.Function([], output)
mod['func_10967'] = func_10967
mod = relay.transform.InferType()(mod)
output = func_10967()
func_10968 = relay.Function([], output)
mutated_mod['func_10968'] = func_10968
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2894_call = mod.get_global_var('func_2894')
func_2895_call = mutated_mod.get_global_var('func_2895')
call_11039 = relay.TupleGetItem(func_2894_call(), 0)
call_11040 = relay.TupleGetItem(func_2895_call(), 0)
func_7535_call = mod.get_global_var('func_7535')
func_7536_call = mutated_mod.get_global_var('func_7536')
call_11045 = relay.TupleGetItem(func_7535_call(), 0)
call_11046 = relay.TupleGetItem(func_7536_call(), 0)
func_6475_call = mod.get_global_var('func_6475')
func_6479_call = mutated_mod.get_global_var('func_6479')
const_11053 = relay.const([-8,-9,-10,7,-7,6,-8,-5,6,9,-6,-4,2,-6,3,-8,-6,2,-8,-2,7,-4,-8,10,-6,7,-1,-3,-8,3,-8,4,10,2,2,-2,1,-6,4,5,6,1,3,-10,3,-2,-8,7,-10,-3,-2,-5,-10,3,8,-1,-2,-2,6,-5,9,2,-6,3,-7,-10,1,3,6,-3,-4,9,-9,-10,-4,6,4,9,6,-6,8,3,1,1,1,-4,-10,-2,3,-6,9,-8,-1,-5,-1,-1,8,8,-9,9,-5,-5,-5,6,9,4,-7,2,-1,4,-9,3,-8,-7,2,-6,-8,-3,-8,-10,4,-6,6,6,7,1,4,3,7,-6,-7,-7,5,-9,-1,-1,-5,-4,9,10,10,1,-9,6,6,6,-4,2,3,2,4,-8,2,-10,4,6,5,-9,-4,10,-5,-7,9,10,-1,-5,8,4,7,-3,-7,-4,8,7,-6,-4,-5,-2,8,-6,4,6,7,2,-5,5,-3,4,-2,-5,-10,-3,-8,7,9,-9,-7,5,-8,-9,3,4,-3,-7,-1,-5,-1,-4,-3,7,6,-5,2,8,8,-2,1,4,6,9,6,-6,2,6,-3,-7,10,4,1,-3,-9,-7,2,-4,-5,-6,9,-7,-4,-6,5,-7,-5,-8,-5,3,-5,6,-4,-8,5,1,7,-3,-1,1,-2,3,-1,4,-2,-10,9,-4,6,5,7,-5,4,-7,-7,-2,-7,8,6,4,1,4,-1,7,2,9,8,4,-2,-8,9,1,5,-4,3,8,1,6,-10,-9,4,2,4,3,-6,6,-9,1,-8,6,2,-5,-3,5,3,8,4,9,-5,-3,-1,8,7,5,-4,-7,4,9,3,3,-8,5,-10,-9,7,9,2,-10,-7,-6,-6,7,-3,7,10,3,-10,1,1,8,3,-5,-3,6,10,10,5,7,-4,5,6,-4,-4,-10,-5,4,4,-3,-4,8,2,-3,-7,-4,-9,-7,-5,-3,7,6,2,2,-9,4,5,-1,-1,-4,7,1,7,10,10,2,7,-1,-10,-4,1,4,9,3,-10,-10,4,-2,9,2,-5,9,4,8,7,3,-9,4,-4,10,5,-2,3,-10,8,-4], dtype = "uint32")#candidate|11053|(420,)|const|uint32
call_11052 = relay.TupleGetItem(func_6475_call(relay.reshape(const_11053.astype('uint32'), [7, 12, 5]), relay.reshape(const_11053.astype('uint32'), [7, 12, 5]), ), 2)
call_11054 = relay.TupleGetItem(func_6479_call(relay.reshape(const_11053.astype('uint32'), [7, 12, 5]), relay.reshape(const_11053.astype('uint32'), [7, 12, 5]), ), 2)
bop_11060 = relay.minimum(call_11039.astype('float64'), relay.reshape(call_11045.astype('float64'), relay.shape_of(call_11039))) # shape=(1, 16, 11)
bop_11063 = relay.minimum(call_11040.astype('float64'), relay.reshape(call_11046.astype('float64'), relay.shape_of(call_11040))) # shape=(1, 16, 11)
func_1549_call = mod.get_global_var('func_1549')
func_1550_call = mutated_mod.get_global_var('func_1550')
call_11074 = relay.TupleGetItem(func_1549_call(), 5)
call_11075 = relay.TupleGetItem(func_1550_call(), 5)
func_1094_call = mod.get_global_var('func_1094')
func_1095_call = mutated_mod.get_global_var('func_1095')
call_11077 = relay.TupleGetItem(func_1094_call(), 2)
call_11078 = relay.TupleGetItem(func_1095_call(), 2)
func_9827_call = mod.get_global_var('func_9827')
func_9829_call = mutated_mod.get_global_var('func_9829')
call_11091 = relay.TupleGetItem(func_9827_call(), 0)
call_11092 = relay.TupleGetItem(func_9829_call(), 0)
func_8807_call = mod.get_global_var('func_8807')
func_8809_call = mutated_mod.get_global_var('func_8809')
const_11104 = relay.const([2.243838,-3.763313,0.170185,-0.188075,7.950851,4.299034,3.061013,-5.322469,-3.870160,2.659699,3.904074,-1.914230,0.387987,-1.718394,-0.277607,-2.960756,-3.563961,2.772928,2.617491,-7.088570,-6.406552,-7.782780,4.761783,6.808901,2.955741,-6.272488,-8.952073,-0.617208,9.065161,-3.224145,0.553512,-3.845074,-4.822124,7.390442,0.331153,-2.019549,5.263975,6.123485,4.352739,7.878155,-0.046193,0.945057,-5.060500,-8.455401,-2.870562,-0.638683,5.588784,4.750163,-7.456307,6.768674,-2.557315,5.420678,7.874070,-7.741639,4.558166,9.887950,-1.575733,-6.274171,-6.277723,-9.433499,-6.284234,1.810303,8.372151,4.196003,6.455399,-4.928612,-0.671326,-8.718179,-1.163491,-4.495108,-6.074511,9.339125,-4.965528,7.516381,-2.636887,8.268515,-2.260245,6.074100,-9.107215,4.165069,2.891584,7.512200,7.505633,4.861956,7.827143,8.165760,-0.261774,-2.347788,2.780683,4.205716,7.342819,-1.050453,2.076587,-0.567462,-2.843923,-3.089665,8.706286,2.611181,2.839201,-0.272374,-4.899029,-2.549351,3.032881,8.578410,-1.864563,-7.932888,0.778820,-1.923484,-3.439551,-0.229455,-4.113962,0.052078,3.641728,4.643402,1.278316,8.206755,3.247210,-3.985837,-3.881800,1.229596,4.536775,-0.867342,-7.312805,4.839451,4.497786,6.367325,-8.937929,9.655551,0.148391,-6.335207,4.605571,-1.317192,6.557577,4.800265,-2.053819,8.762858,-3.712306,9.200432,-6.978342,-5.776301,-4.996848,3.019054,-8.889953,-1.562122,7.646212,-0.856896,-5.506873,-8.505172,-1.650531,8.394921,-3.081313,-1.385964,4.732992,-4.446018,-7.207553,1.959206,-9.198723,-4.759812,-6.553666,8.328612,2.037923,-2.406478,-2.695336,-9.910523,-4.730933,-5.362986,-9.687913,2.138131,-4.889322,0.351948,-4.749001,5.224944,2.359280,4.129809,3.807550,-8.555058,8.730596,-8.784656,6.942979,-5.116876,7.335076,-1.346159,0.484612,9.762308,1.872002,-1.749229,5.410199,2.798823,6.419451,-1.647377,8.745331,-4.330068,4.558037,-9.125674,1.275850,-7.194685,7.633868,-2.294900,4.101509,-6.585192,-1.442348,-8.652274,1.503249,-4.596981,3.524132,1.361283,5.364394,3.742370,-3.990371,8.294994,-8.067808,-2.382525,0.966555,-7.319324,-3.502918,5.281665,2.980696,8.120542,5.930096,-3.235050,-8.720489,4.054606,4.940978,2.652541,1.396378,3.013901,-5.327829,0.095465,-5.054107,-2.633703,8.891286,6.365523,-6.718375,7.409685,-7.540405,-9.906620,6.172388,6.849380,-8.022149,-7.893427,5.351975,0.182269,-3.412434,0.598117,-5.176180,2.386230,-3.743225,-6.134301,8.994431,-3.897083,0.034734,8.506747,0.436591,4.539334,3.415300,0.918231,1.089365,-9.893950,3.673856,-5.146007,-2.356662,4.965419,-5.957343,4.878985,1.197038,-5.103567,-8.428486,7.763355,-7.289425,5.693324,1.814675,-8.071065,9.185979,-6.457296,1.685214,-6.927818,-0.984356,-9.546316,7.054684,7.016920,4.088384,-8.876414,7.648849,2.444504,-4.776260,8.034031,5.136127,3.728133,-6.615083,-3.723677,-4.997544,0.457685,-9.343946,-1.810327,7.099512,4.072285,0.801411,-8.440550,0.434355,-8.679031,-8.513840,3.966403,0.506571,-7.134591,-5.720774,8.579275,6.422702,-1.009787,-3.986032,-9.649398,-4.319380,9.014829,6.712552,-3.014921,3.105144,-8.171847,-4.572010,-5.036159,-9.915066,7.744861,0.128297,-1.051638,-5.587904,-3.140405,6.474193,-1.710333,-5.111475,6.185630,-4.084467,5.440978,-2.625622,3.613261,8.250904,-3.778983,9.124985,1.150093,5.148433,3.992838,-1.294463,-8.586637,-6.440684,1.929060,-0.445478,-7.502864,-8.879851,7.651371,-2.725635,0.651651,-9.151119,1.388112,1.518219,-6.056604,-4.624132,-1.409687,6.760545,-7.352749,-9.152585,0.231999,-6.874194,3.014489,4.116872,3.579347,7.756270,3.935087,2.699289,5.525203,7.982456,2.379487,-1.395527,-6.617139,-9.744130,1.166635,-1.380380,-4.014573,7.710630,9.068873,-6.794502,-4.332547,3.334065,8.828993,-2.468183,-4.956422,-9.055492,-6.837014,0.741640,-2.332064,1.504556,-9.283467,-1.649514,3.907300,-3.922937,-4.462922,8.679483,8.278235,0.989488,7.911501,1.205837,9.221601,6.960383,-2.506745,7.517139,5.502713,0.399649,-5.746968,-1.678077,0.331518,3.314648,2.746799,-7.100658,2.378881,1.646870,9.544587,-0.139303,-8.727274,-4.031894,2.784367,9.289295,1.824902,-2.590052,4.592263,4.133274,-3.277488,-1.018437,1.924071,-9.142042,-9.059031,-7.319709,-4.292461,7.484930,-0.161242,-8.559551,1.162997,-0.933521,-8.702279,-5.749421,8.343198,-9.172796,-0.649519,3.404386,4.507041,9.372912,6.811859,3.533461,-0.783127,-7.263617,7.590004,-9.060041,3.791632,6.474036,-1.066052,4.835733,6.742989,3.406765,-9.289990,4.385152,-4.015249,-4.834535,-4.210858,8.719147,-5.370554,-7.860991,-8.460834,-6.141052,9.455448,5.102755,4.018395,-6.073073,-1.605417,0.238712,-9.419189,-4.084989,1.347654,3.413199,4.812219,-7.062481,-8.672607,0.322274,-9.752283,-4.053639,9.545615,5.682664,-2.370017,8.639748,0.850774,-6.835124,5.873777,-0.217726,3.662483,9.594620,-3.477147,-8.339130,-7.405914,-2.947714,0.495131,-1.006371,-5.950737,4.150137,7.801650,-3.940818,4.600580,9.440211,1.405597,0.776400,9.917315,4.711390,4.801941,-9.681475,1.178508,-1.209035,-3.332039,6.292534,-2.359669,8.253057,4.080292,-4.624105,-0.252160,-1.054021,2.819386,-9.191616,-6.403911,-6.342339,7.784930,7.383981,4.295278,6.715554,-3.717105,3.384879,-0.609002,2.932528,-4.674833,-4.107037,4.041380,-9.508617,6.565686,3.577943,4.916723,7.418632,-7.598659,5.469319,-6.975800,2.058793,-9.384367,3.625930,-8.742602,-1.839815,-1.744007,5.720706,5.060080,-3.003439,5.906674,-3.344253,0.332971,3.154318,-8.389709,-3.556721,-9.493677,-7.313343,-6.561562,9.275150,-4.556049,7.152693,-9.087905,-4.625327,-7.507174,-0.581310,-5.484477,-9.640153,-8.822889,6.273161,7.406814,4.196784,-5.611549,-9.443803,0.466773,4.083357,2.186652,-4.106067,4.340935,-4.700596,3.901623,1.024278,8.303995,-2.899848,-5.763820,8.406692,4.329599,5.839725,-8.352343,-5.235621,8.821025,8.132086,-0.124346,-8.646936,-2.288252,9.753614,-6.362117,0.704068,4.974842,4.749229,7.600460,4.139086,-2.666676,-2.052622,-6.627583,-0.714623,-0.551579,-6.654491,-2.371182,5.672551,8.779236,-8.611514,3.687162,-3.226502,2.329734,-9.507202,-8.448292,3.220257,-3.483556,1.270972,-0.471847,-2.208007,5.829714,8.250174,-8.863313,-4.597502,-8.953263,2.523626,-5.375365,-0.921801,1.095415,-3.169861,-9.114904,-2.534451,-3.401819,3.930993,-1.109400,4.677578,-6.974531,5.108545,7.572472,0.489818,-0.666666,-9.541296,-9.799126,9.997922,9.585765,8.049986,8.351325,3.453179,2.189415,8.509569,-1.487489,3.274413,5.396554,5.935473,-5.609786,-5.813482,0.191347,7.468822,8.061148,-6.583936,-1.655662,-2.161944,1.634146,5.421430,-6.291620,-3.290589,-8.473778,-2.058460,-6.430544,-8.315220,-9.663447,-7.908375,6.963630,4.135224,-2.377099,-1.506371,8.098463,-1.304025,-0.636425,6.055889,-2.167728,2.080939,8.942267,4.482631,-2.837930,-3.398664,-0.036151,-3.372490,-2.087540,8.200935,9.401100,7.384852,-4.415340,-2.548170,-9.991938,-9.863124,9.860681,4.138557,9.603692,0.360087,-2.899738,-1.167784,-2.933143,2.779955,-8.503561,6.976476,-2.342188,-2.269804,-7.879863,5.475655,-2.859363,-4.547063,5.711944,-4.824128,-3.093741,-4.157481,0.615632,9.976240,-8.736768,-8.883135,3.547603,-8.645241,-4.422140,6.063678,9.494499,2.039129,-8.583026,-0.699847,2.112369,-1.303744,-4.530685,2.751402,6.935271,4.156844,1.377636,-7.007000,0.645330,-9.806419,7.576905,-1.415865,-3.527500,-2.077153,9.958123,-2.013708,4.850948,-6.929747,-4.818958,2.280927,8.041743,7.806591,-1.606391,6.824688,-5.576053,6.163666,1.281168,5.357494,-7.048929,-2.612579,-2.472959,-2.061261,4.264571,6.877250,-5.520680,4.973981,4.683190,-9.168943,-2.344297,3.484654,6.444203,-8.065113,-9.480765,-9.856267,2.223611,4.569494,-0.723583,7.081709,-0.822141,5.600605,0.256711,-7.182087,9.252245,-0.109681,4.633494,-5.911786,2.490116,8.435498,-7.800692,-6.519916,8.964393,1.926740,5.365778,0.415366,0.208394,6.211475,-1.639694,4.313097,-4.340664,3.641629,3.676656,9.882923,6.814495,8.586277,-4.927374,3.899547,8.869600,4.721663,-0.610278,-6.783118,8.718051,-2.643647,-4.795234,2.641763,-0.933746,-9.799153,1.678830,-2.242230,-1.547456,-9.938557,1.172781,-9.148025,5.610264,3.116468,0.252556,6.700846,5.987348,-0.553408,-1.205346,0.260410,-5.222604,-1.597086,5.686483,-8.266976,-4.168916,-4.116982,9.764599,-8.729616,2.090818,-3.208508,-7.039505,0.540498,6.144086,4.741581,-1.278340,-1.273670,-8.368731,-9.786104,2.255702,2.808206,6.313641,8.266355,8.949476,9.107238,-6.372076,3.824115,-1.726839,-3.701174,-3.488266,2.962761,-0.379960,3.027840,-9.288231,-4.733250,3.722259,-8.309625,-7.647444,9.016331,4.883279,-7.487486,-3.751959,-2.475503,-7.447833,-7.389212,-3.998568,1.276285,-6.969628,7.303431,-2.944469,-9.621837,-0.896590,2.993625,3.377084,-1.985829,8.181896,-5.694773,-4.006731,-5.416597,3.591296,4.368738,-9.111358,8.063056,9.866197,-4.740524,-6.825420,7.414500,2.380362,7.823687,4.827606,7.855026,-1.113433,-5.950937,7.600408,-1.349927,-3.945503,-9.476261,-9.089775,1.078085,0.040365,-9.299263,-3.720185,-8.420626,-3.177122,-7.044658,9.089395,-0.890607,9.913422,-9.399040,-5.063541,-8.608389,-6.355641,5.609819,-0.044494,-4.439547,-6.443909], dtype = "float32")#candidate|11104|(924,)|const|float32
call_11103 = func_8807_call(relay.reshape(const_11104.astype('float32'), [11, 12, 7]))
call_11105 = func_8807_call(relay.reshape(const_11104.astype('float32'), [11, 12, 7]))
output = relay.Tuple([call_11052,const_11053,bop_11060,call_11074,call_11077,call_11091,call_11103,const_11104,])
output2 = relay.Tuple([call_11054,const_11053,bop_11063,call_11075,call_11078,call_11092,call_11105,const_11104,])
func_11108 = relay.Function([], output)
mod['func_11108'] = func_11108
mod = relay.transform.InferType()(mod)
output = func_11108()
func_11109 = relay.Function([], output)
mutated_mod['func_11109'] = func_11109
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8084_call = mod.get_global_var('func_8084')
func_8086_call = mutated_mod.get_global_var('func_8086')
call_11110 = relay.TupleGetItem(func_8084_call(), 0)
call_11111 = relay.TupleGetItem(func_8086_call(), 0)
output = relay.Tuple([call_11110,])
output2 = relay.Tuple([call_11111,])
func_11129 = relay.Function([], output)
mod['func_11129'] = func_11129
mod = relay.transform.InferType()(mod)
output = func_11129()
func_11130 = relay.Function([], output)
mutated_mod['func_11130'] = func_11130
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3307_call = mod.get_global_var('func_3307')
func_3309_call = mutated_mod.get_global_var('func_3309')
call_11139 = relay.TupleGetItem(func_3307_call(), 0)
call_11140 = relay.TupleGetItem(func_3309_call(), 0)
func_1713_call = mod.get_global_var('func_1713')
func_1714_call = mutated_mod.get_global_var('func_1714')
call_11141 = relay.TupleGetItem(func_1713_call(), 0)
call_11142 = relay.TupleGetItem(func_1714_call(), 0)
output = relay.Tuple([call_11139,call_11141,])
output2 = relay.Tuple([call_11140,call_11142,])
func_11148 = relay.Function([], output)
mod['func_11148'] = func_11148
mod = relay.transform.InferType()(mod)
output = func_11148()
func_11149 = relay.Function([], output)
mutated_mod['func_11149'] = func_11149
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11158 = relay.var("var_11158", dtype = "float64", shape = (10, 10, 6))#candidate|11158|(10, 10, 6)|var|float64
uop_11159 = relay.asinh(var_11158.astype('float64')) # shape=(10, 10, 6)
func_8519_call = mod.get_global_var('func_8519')
func_8521_call = mutated_mod.get_global_var('func_8521')
call_11163 = relay.TupleGetItem(func_8519_call(), 2)
call_11164 = relay.TupleGetItem(func_8521_call(), 2)
func_1814_call = mod.get_global_var('func_1814')
func_1816_call = mutated_mod.get_global_var('func_1816')
call_11173 = relay.TupleGetItem(func_1814_call(), 1)
call_11174 = relay.TupleGetItem(func_1816_call(), 1)
uop_11175 = relay.erf(uop_11159.astype('float32')) # shape=(10, 10, 6)
output = relay.Tuple([call_11163,call_11173,uop_11175,])
output2 = relay.Tuple([call_11164,call_11174,uop_11175,])
func_11186 = relay.Function([var_11158,], output)
mod['func_11186'] = func_11186
mod = relay.transform.InferType()(mod)
mutated_mod['func_11186'] = func_11186
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11187 = relay.var("var_11187", dtype = "float64", shape = (10, 10, 6))#candidate|11187|(10, 10, 6)|var|float64
func_11186_call = mutated_mod.get_global_var('func_11186')
call_11188 = func_11186_call(var_11187)
output = call_11188
func_11189 = relay.Function([var_11187], output)
mutated_mod['func_11189'] = func_11189
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9063_call = mod.get_global_var('func_9063')
func_9064_call = mutated_mod.get_global_var('func_9064')
call_11223 = func_9063_call()
call_11224 = func_9063_call()
func_4103_call = mod.get_global_var('func_4103')
func_4105_call = mutated_mod.get_global_var('func_4105')
call_11225 = relay.TupleGetItem(func_4103_call(), 3)
call_11226 = relay.TupleGetItem(func_4105_call(), 3)
var_11233 = relay.var("var_11233", dtype = "float64", shape = (90, 3))#candidate|11233|(90, 3)|var|float64
bop_11234 = relay.maximum(call_11225.astype('float64'), relay.reshape(var_11233.astype('float64'), relay.shape_of(call_11225))) # shape=(90, 3)
bop_11237 = relay.maximum(call_11226.astype('float64'), relay.reshape(var_11233.astype('float64'), relay.shape_of(call_11226))) # shape=(90, 3)
bop_11240 = relay.minimum(call_11225.astype('int8'), relay.reshape(var_11233.astype('int8'), relay.shape_of(call_11225))) # shape=(90, 3)
bop_11243 = relay.minimum(call_11226.astype('int8'), relay.reshape(var_11233.astype('int8'), relay.shape_of(call_11226))) # shape=(90, 3)
output = relay.Tuple([call_11223,bop_11234,bop_11240,])
output2 = relay.Tuple([call_11224,bop_11237,bop_11243,])
func_11247 = relay.Function([var_11233,], output)
mod['func_11247'] = func_11247
mod = relay.transform.InferType()(mod)
var_11248 = relay.var("var_11248", dtype = "float64", shape = (90, 3))#candidate|11248|(90, 3)|var|float64
output = func_11247(var_11248)
func_11249 = relay.Function([var_11248], output)
mutated_mod['func_11249'] = func_11249
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3478_call = mod.get_global_var('func_3478')
func_3479_call = mutated_mod.get_global_var('func_3479')
call_11262 = func_3478_call()
call_11263 = func_3478_call()
func_7372_call = mod.get_global_var('func_7372')
func_7373_call = mutated_mod.get_global_var('func_7373')
call_11264 = relay.TupleGetItem(func_7372_call(), 1)
call_11265 = relay.TupleGetItem(func_7373_call(), 1)
func_11247_call = mod.get_global_var('func_11247')
func_11249_call = mutated_mod.get_global_var('func_11249')
var_11269 = relay.var("var_11269", dtype = "float64", shape = (270,))#candidate|11269|(270,)|var|float64
call_11268 = relay.TupleGetItem(func_11247_call(relay.reshape(var_11269.astype('float64'), [90, 3])), 2)
call_11270 = relay.TupleGetItem(func_11249_call(relay.reshape(var_11269.astype('float64'), [90, 3])), 2)
func_1309_call = mod.get_global_var('func_1309')
func_1312_call = mutated_mod.get_global_var('func_1312')
call_11275 = relay.TupleGetItem(func_1309_call(relay.reshape(call_11268.astype('float64'), [1, 270])), 0)
call_11276 = relay.TupleGetItem(func_1312_call(relay.reshape(call_11268.astype('float64'), [1, 270])), 0)
uop_11290 = relay.log2(call_11268.astype('float32')) # shape=(90, 3)
uop_11292 = relay.log2(call_11270.astype('float32')) # shape=(90, 3)
bop_11301 = relay.floor_mod(uop_11290.astype('float32'), relay.reshape(var_11269.astype('float32'), relay.shape_of(uop_11290))) # shape=(90, 3)
bop_11304 = relay.floor_mod(uop_11292.astype('float32'), relay.reshape(var_11269.astype('float32'), relay.shape_of(uop_11292))) # shape=(90, 3)
output = relay.Tuple([call_11262,call_11264,call_11275,bop_11301,])
output2 = relay.Tuple([call_11263,call_11265,call_11276,bop_11304,])
func_11308 = relay.Function([var_11269,], output)
mod['func_11308'] = func_11308
mod = relay.transform.InferType()(mod)
mutated_mod['func_11308'] = func_11308
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11309 = relay.var("var_11309", dtype = "float64", shape = (270,))#candidate|11309|(270,)|var|float64
func_11308_call = mutated_mod.get_global_var('func_11308')
call_11310 = func_11308_call(var_11309)
output = call_11310
func_11311 = relay.Function([var_11309], output)
mutated_mod['func_11311'] = func_11311
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9715_call = mod.get_global_var('func_9715')
func_9716_call = mutated_mod.get_global_var('func_9716')
call_11318 = relay.TupleGetItem(func_9715_call(), 2)
call_11319 = relay.TupleGetItem(func_9716_call(), 2)
uop_11323 = relay.asinh(call_11318.astype('float64')) # shape=(2, 72)
uop_11325 = relay.asinh(call_11319.astype('float64')) # shape=(2, 72)
output = relay.Tuple([uop_11323,])
output2 = relay.Tuple([uop_11325,])
func_11330 = relay.Function([], output)
mod['func_11330'] = func_11330
mod = relay.transform.InferType()(mod)
mutated_mod['func_11330'] = func_11330
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11330_call = mutated_mod.get_global_var('func_11330')
call_11331 = func_11330_call()
output = call_11331
func_11332 = relay.Function([], output)
mutated_mod['func_11332'] = func_11332
mutated_mod = relay.transform.InferType()(mutated_mod)
func_584_call = mod.get_global_var('func_584')
func_586_call = mutated_mod.get_global_var('func_586')
call_11356 = relay.TupleGetItem(func_584_call(), 0)
call_11357 = relay.TupleGetItem(func_586_call(), 0)
output = call_11356
output2 = call_11357
func_11374 = relay.Function([], output)
mod['func_11374'] = func_11374
mod = relay.transform.InferType()(mod)
mutated_mod['func_11374'] = func_11374
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11374_call = mutated_mod.get_global_var('func_11374')
call_11375 = func_11374_call()
output = call_11375
func_11376 = relay.Function([], output)
mutated_mod['func_11376'] = func_11376
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8620_call = mod.get_global_var('func_8620')
func_8621_call = mutated_mod.get_global_var('func_8621')
call_11423 = relay.TupleGetItem(func_8620_call(), 1)
call_11424 = relay.TupleGetItem(func_8621_call(), 1)
output = relay.Tuple([call_11423,])
output2 = relay.Tuple([call_11424,])
func_11437 = relay.Function([], output)
mod['func_11437'] = func_11437
mod = relay.transform.InferType()(mod)
mutated_mod['func_11437'] = func_11437
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11437_call = mutated_mod.get_global_var('func_11437')
call_11438 = func_11437_call()
output = call_11438
func_11439 = relay.Function([], output)
mutated_mod['func_11439'] = func_11439
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2835_call = mod.get_global_var('func_2835')
func_2837_call = mutated_mod.get_global_var('func_2837')
call_11449 = relay.TupleGetItem(func_2835_call(), 0)
call_11450 = relay.TupleGetItem(func_2837_call(), 0)
func_9734_call = mod.get_global_var('func_9734')
func_9737_call = mutated_mod.get_global_var('func_9737')
var_11452 = relay.var("var_11452", dtype = "uint16", shape = (14, 96))#candidate|11452|(14, 96)|var|uint16
call_11451 = relay.TupleGetItem(func_9734_call(relay.reshape(var_11452.astype('uint16'), [7, 12, 16]), relay.reshape(var_11452.astype('uint16'), [7, 12, 16]), ), 0)
call_11453 = relay.TupleGetItem(func_9737_call(relay.reshape(var_11452.astype('uint16'), [7, 12, 16]), relay.reshape(var_11452.astype('uint16'), [7, 12, 16]), ), 0)
func_10718_call = mod.get_global_var('func_10718')
func_10719_call = mutated_mod.get_global_var('func_10719')
call_11457 = relay.TupleGetItem(func_10718_call(), 2)
call_11458 = relay.TupleGetItem(func_10719_call(), 2)
func_11148_call = mod.get_global_var('func_11148')
func_11149_call = mutated_mod.get_global_var('func_11149')
call_11459 = relay.TupleGetItem(func_11148_call(), 0)
call_11460 = relay.TupleGetItem(func_11149_call(), 0)
var_11472 = relay.var("var_11472", dtype = "uint16", shape = (14, 96))#candidate|11472|(14, 96)|var|uint16
bop_11473 = relay.minimum(var_11452.astype('uint32'), relay.reshape(var_11472.astype('uint32'), relay.shape_of(var_11452))) # shape=(14, 96)
output = relay.Tuple([call_11449,call_11451,call_11457,call_11459,bop_11473,])
output2 = relay.Tuple([call_11450,call_11453,call_11458,call_11460,bop_11473,])
func_11479 = relay.Function([var_11452,var_11472,], output)
mod['func_11479'] = func_11479
mod = relay.transform.InferType()(mod)
var_11480 = relay.var("var_11480", dtype = "uint16", shape = (14, 96))#candidate|11480|(14, 96)|var|uint16
var_11481 = relay.var("var_11481", dtype = "uint16", shape = (14, 96))#candidate|11481|(14, 96)|var|uint16
output = func_11479(var_11480,var_11481,)
func_11482 = relay.Function([var_11480,var_11481,], output)
mutated_mod['func_11482'] = func_11482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6110_call = mod.get_global_var('func_6110')
func_6112_call = mutated_mod.get_global_var('func_6112')
call_11543 = relay.TupleGetItem(func_6110_call(), 2)
call_11544 = relay.TupleGetItem(func_6112_call(), 2)
output = call_11543
output2 = call_11544
func_11546 = relay.Function([], output)
mod['func_11546'] = func_11546
mod = relay.transform.InferType()(mod)
output = func_11546()
func_11547 = relay.Function([], output)
mutated_mod['func_11547'] = func_11547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1713_call = mod.get_global_var('func_1713')
func_1714_call = mutated_mod.get_global_var('func_1714')
call_11587 = relay.TupleGetItem(func_1713_call(), 1)
call_11588 = relay.TupleGetItem(func_1714_call(), 1)
func_11546_call = mod.get_global_var('func_11546')
func_11547_call = mutated_mod.get_global_var('func_11547')
call_11601 = func_11546_call()
call_11602 = func_11546_call()
output = relay.Tuple([call_11587,call_11601,])
output2 = relay.Tuple([call_11588,call_11602,])
func_11613 = relay.Function([], output)
mod['func_11613'] = func_11613
mod = relay.transform.InferType()(mod)
output = func_11613()
func_11614 = relay.Function([], output)
mutated_mod['func_11614'] = func_11614
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1094_call = mod.get_global_var('func_1094')
func_1095_call = mutated_mod.get_global_var('func_1095')
call_11735 = relay.TupleGetItem(func_1094_call(), 1)
call_11736 = relay.TupleGetItem(func_1095_call(), 1)
func_8807_call = mod.get_global_var('func_8807')
func_8809_call = mutated_mod.get_global_var('func_8809')
var_11747 = relay.var("var_11747", dtype = "float32", shape = (924,))#candidate|11747|(924,)|var|float32
call_11746 = func_8807_call(relay.reshape(var_11747.astype('float32'), [11, 12, 7]))
call_11748 = func_8807_call(relay.reshape(var_11747.astype('float32'), [11, 12, 7]))
output = relay.Tuple([call_11735,call_11746,var_11747,])
output2 = relay.Tuple([call_11736,call_11748,var_11747,])
func_11754 = relay.Function([var_11747,], output)
mod['func_11754'] = func_11754
mod = relay.transform.InferType()(mod)
mutated_mod['func_11754'] = func_11754
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11755 = relay.var("var_11755", dtype = "float32", shape = (924,))#candidate|11755|(924,)|var|float32
func_11754_call = mutated_mod.get_global_var('func_11754')
call_11756 = func_11754_call(var_11755)
output = call_11756
func_11757 = relay.Function([var_11755], output)
mutated_mod['func_11757'] = func_11757
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11762 = relay.var("var_11762", dtype = "float64", shape = (14, 7, 13))#candidate|11762|(14, 7, 13)|var|float64
const_11763 = relay.const([[[2.657615,7.150778,-9.135428,-3.978624,6.490636,4.436439,-9.459297,9.061469,3.346989,6.510830,3.645790,3.897506,-0.512814],[-8.478001,7.453875,1.487341,-7.031911,4.694920,-5.873691,-6.717466,9.353653,0.498413,-0.953141,-4.294008,6.023781,-3.111876],[3.568107,5.681363,-9.032998,6.810304,-4.881940,-6.260872,-9.860350,2.023708,5.172168,-5.392600,1.105081,8.203704,-0.519919],[-0.963460,1.345931,1.484345,-7.070682,4.522438,-0.681581,-4.704636,6.586810,-2.756256,9.806166,-0.041875,9.436053,4.572359],[-7.842955,7.862824,-1.152995,-7.451616,-2.975204,0.417112,8.146283,0.118033,1.959665,-7.333051,0.100219,-2.982022,-6.314146],[9.875784,6.126691,-0.355677,0.295649,9.049158,5.717684,-6.257507,3.409429,5.408377,-7.413364,-8.152834,-3.178852,-0.557834],[6.983464,-1.202736,9.320655,-6.623872,5.365070,0.613626,-7.283745,-4.647438,-0.915743,1.693536,-3.254686,-0.870390,2.627278]],[[8.160584,3.390101,5.260117,-2.248163,-1.191868,-5.627576,4.394344,-1.055625,-6.339169,8.980899,-0.342967,9.218026,1.858142],[-1.735114,-7.083686,-9.963449,-5.286493,7.934897,3.833399,0.827923,-4.387403,-9.881371,0.729772,-2.407342,8.586219,5.484945],[9.733191,2.922658,-8.880163,3.747408,4.666998,-7.830629,6.533327,-3.758625,-0.135147,8.690158,9.798892,-6.794029,-1.570339],[-7.271008,-1.146166,0.142311,8.899782,-0.377927,4.897273,-7.711181,0.755271,-7.740216,3.208125,0.779761,-3.123584,-8.329744],[-7.849870,3.923391,6.717433,-3.213111,6.635183,0.555504,-1.212603,-8.862735,8.316369,5.993499,-4.755449,-0.530958,-0.275966],[5.890792,-1.543940,-9.666648,-9.867532,3.976596,2.229290,3.256599,1.454944,3.959531,-6.810459,0.155144,6.551347,-1.728029],[-1.506558,9.615655,4.733593,-8.327313,-2.755930,-0.852357,-4.251901,-9.595634,-4.949667,-5.821738,-1.310693,3.422993,5.089613]],[[2.586753,5.358175,-3.115793,-2.226125,-2.281997,-5.086878,0.110279,2.240136,1.667494,6.652931,-9.473701,3.488425,3.175542],[-3.305287,-3.133020,-5.349797,-4.659343,-5.274648,3.780495,-6.302750,-1.795503,-8.021078,6.227935,2.739726,8.961252,-6.383965],[-0.622912,-8.060499,-6.574874,5.772576,3.883119,-2.162500,4.241231,-7.405799,9.514343,1.621277,-8.084157,3.071086,4.105101],[-2.617654,1.540155,-8.437856,6.046267,4.492201,-7.999912,-2.207408,-5.505154,8.637377,5.714243,6.427218,1.544649,-5.347778],[-0.177112,1.959698,7.044827,3.084036,9.827362,-7.495964,-2.069765,-0.769975,-0.109997,-9.612624,5.748696,8.499628,-6.025994],[1.584676,7.539826,8.195990,5.106982,4.616364,-7.478636,6.217487,8.375962,-9.708957,2.772222,-7.669431,-6.684274,5.678424],[-7.686998,-7.056900,9.570099,-9.216614,-9.109459,-5.997317,7.568320,-2.167115,-2.435899,1.073772,5.981198,-0.116919,-9.750051]],[[2.519518,1.501256,-2.042697,8.583885,-5.905341,-9.871883,4.610954,-7.840229,-5.119077,5.992179,-5.239895,-3.629865,1.313596],[7.914038,-9.823710,-2.847937,-2.352759,-7.929842,-3.052517,-3.704661,-5.114163,9.231913,1.736504,-7.771226,0.208598,-1.168612],[0.195851,7.801251,-1.029157,-7.361579,-7.322984,-0.329549,3.245249,5.374356,-9.797318,-0.500745,-0.331706,-4.415010,-3.609868],[8.909022,0.647158,7.736245,-4.489264,7.107776,9.319466,-9.031051,5.899216,2.178917,9.146759,-4.122308,-6.667688,4.728986],[-9.210095,-0.552069,-3.406489,4.499049,0.212395,-5.921792,2.512058,-6.013610,-2.813837,5.000953,-4.501689,-8.211835,3.273853],[9.236233,9.597090,0.886691,8.110712,-9.349245,3.906963,8.194201,-0.196172,3.258025,4.846890,0.586780,-0.694568,3.475516],[3.323703,-3.475769,-5.637533,-8.230741,-4.674348,-7.297099,5.284216,0.929190,-3.359069,5.280165,2.466889,-3.117608,-3.359276]],[[-3.952732,-1.255642,4.886573,9.560900,0.402637,-3.621255,6.662333,1.524373,-7.370304,5.742721,0.401653,-9.732569,-3.021877],[9.185834,-5.450068,-7.467533,-3.422236,1.551631,-1.285218,-2.167878,-0.532825,0.379581,1.244308,1.361996,7.082420,-3.693597],[-2.357081,2.248115,-2.106396,-6.593696,1.325917,6.278153,4.499088,5.024869,2.509884,4.690824,-5.194110,7.333958,2.404941],[5.856412,5.374522,-9.267662,-8.058845,1.232261,-0.398358,-6.947707,-9.127471,-3.221835,-4.401229,-2.384416,9.910360,2.842676],[-6.558662,8.670297,-9.529598,3.614585,-8.594964,4.433741,6.253203,4.044019,-7.194058,3.893662,9.638875,0.545570,-5.313303],[8.420132,5.192594,7.945622,-6.828948,-5.317895,-6.202347,-6.217231,1.429023,6.068558,-6.294609,-5.369397,-0.296448,-0.182189],[6.011506,0.139519,8.738882,5.717502,-6.063238,-6.309917,-5.565760,3.418504,-8.690831,4.849574,9.019661,8.539056,-8.131698]],[[8.520309,7.618673,-4.070467,7.143875,-2.460827,8.891585,3.047013,4.553867,-1.489208,-9.612015,-1.396688,2.615232,-8.185963],[-6.185037,9.752346,-9.259580,-4.891294,-6.685613,-2.477116,-7.747639,-3.030504,9.174970,3.197599,1.436687,-0.912705,2.443139],[1.406935,-6.257409,-1.151012,6.769981,1.573403,-8.063434,7.129954,6.869878,-8.019334,8.728533,9.399117,-3.218040,4.312282],[-5.910936,-3.241427,-4.886830,-8.818990,2.554952,4.846941,-7.098890,-2.561894,-6.041406,6.751773,-7.426030,-3.973714,-3.017162],[-3.712664,-7.721237,7.128118,3.788704,3.291861,9.457915,-1.736677,-9.107365,2.220052,9.419485,2.871583,4.523395,2.265622],[-0.433570,8.591231,2.096475,2.689719,2.565946,-5.971700,-3.778890,-1.986194,9.765051,2.889091,2.787760,5.114819,-3.313346],[-8.922895,7.502618,2.488112,9.160321,2.554010,-1.202184,3.345753,8.649496,-4.607065,9.654186,6.106871,-6.530392,-4.240880]],[[8.798301,-7.963200,-6.130168,1.004315,-8.314458,2.130500,-9.749145,-5.076862,7.078562,-0.871324,5.832875,6.479710,-1.584910],[2.973112,1.324416,-0.660052,1.564924,-4.748411,3.746495,-6.545717,3.470131,-4.231117,-9.695507,-5.594626,-7.085823,-9.377485],[-1.210915,-7.273880,-1.620470,4.974296,2.494120,-9.388678,-0.937344,-3.706762,-8.860880,7.954342,-0.212854,1.486002,-6.272215],[-5.945913,7.965774,-2.551895,-7.873882,-3.974971,-2.224957,-1.967261,6.906400,8.215924,-8.858803,7.833633,-4.387828,-7.568014],[-5.196847,4.337932,4.310033,8.044006,-2.140184,-1.705069,-4.950808,3.297999,-9.234314,-2.724914,-7.368138,9.481916,7.320767],[9.032431,4.926472,-1.540348,-2.652474,-5.802638,-7.955036,-8.480357,8.111868,5.507684,2.032810,1.670754,9.934795,7.170936],[4.249981,-5.821480,2.343768,-6.369236,0.718503,7.278423,-8.966694,1.928833,2.837415,6.313426,1.991977,2.999974,3.784179]],[[-9.273316,-6.689828,-1.246467,4.711001,3.330819,-0.386721,6.662258,-8.813770,8.390951,3.318010,8.237142,-7.313724,8.311333],[-4.867290,-7.057050,6.522484,-7.152202,-5.333656,8.415697,0.259859,9.788688,-5.313980,4.460534,0.543431,2.008091,7.846611],[5.071486,7.978326,5.681037,3.924250,0.735094,2.711579,5.867845,-0.806806,0.491361,0.310762,-6.870252,9.979560,-3.765021],[-2.060990,9.874173,1.380052,-5.195179,-3.082160,-9.961867,9.202912,-5.540785,9.872615,7.672100,7.054874,6.621932,2.582971],[-2.005226,9.748864,6.048454,2.729634,1.117000,7.996435,3.677719,-1.506445,-7.404554,-2.998604,-7.264181,-3.217282,7.908728],[-9.944135,-3.494315,-9.549329,-8.192350,6.214053,-6.647771,8.945766,9.505212,8.791908,-1.902636,-6.659820,0.078310,2.673456],[-8.734261,5.803895,8.751117,-2.662056,2.971890,5.383752,-5.552582,5.247210,6.777544,3.234173,-1.181851,7.548807,-5.048606]],[[6.313538,-4.271884,7.522769,-0.185321,2.385605,-7.521631,8.365960,-7.005378,0.589664,8.356873,7.089201,7.190991,-0.305906],[8.120857,-7.573729,7.533074,-4.729707,9.959600,6.071494,-4.697714,0.550776,-8.240867,6.579464,9.309275,-1.993852,8.120444],[5.892870,-8.826624,-7.080346,-3.636165,2.675554,-4.523263,9.479029,9.478654,3.312164,3.507722,-1.405480,6.632406,5.102742],[-5.684102,-4.514386,5.009851,4.288880,8.379508,-8.972619,-0.880658,4.658570,8.973668,-4.618436,1.498831,-6.451124,4.055705],[9.540061,-4.352485,6.663721,-9.322482,7.750574,-1.991618,5.882630,-0.140656,2.108774,1.788217,-9.049021,0.849217,5.466671],[-0.914511,-3.072173,-7.640093,7.201227,-1.715994,3.056371,-7.909681,-0.054477,9.811484,-1.542564,7.800222,0.617672,-8.031853],[0.999780,-8.065312,1.470073,8.802505,-2.816100,5.131644,-6.022055,9.450314,-3.541531,-8.513101,-0.893865,-6.389263,-7.240163]],[[-0.064337,-5.784508,4.909817,-4.421790,-2.251754,-6.920049,0.097133,0.254397,-7.806963,-3.205218,3.049551,3.426712,-8.090585],[-1.555354,-2.318987,-7.665730,-4.527899,-1.355637,2.537259,7.828323,-6.590901,4.401260,7.169933,-3.010960,-8.229699,8.684581],[4.128949,-3.913433,-5.485133,-7.699246,4.046612,7.683010,6.306616,7.876928,-6.555882,-2.331559,-4.383094,9.091459,-7.630766],[-5.509445,-3.949560,-8.479539,-5.028741,0.547939,1.252513,-1.940438,9.228254,-6.139864,5.706067,6.853548,9.192607,-4.445484],[9.944373,7.858429,3.230654,-1.712864,6.109508,9.729547,1.689294,-6.525468,-9.259760,7.822072,-4.073944,-0.926691,1.401357],[5.827863,8.175230,0.029357,5.710525,-8.901859,-8.678981,9.898521,5.765474,8.779747,3.552977,-3.725073,-7.394995,4.569007],[1.999782,-4.206273,7.797032,2.856166,8.493897,8.396286,6.009218,1.012057,6.183565,3.073527,8.165625,1.203384,-1.399342]],[[-4.274929,-2.071047,3.231913,2.020165,-2.515265,-1.679688,0.896410,-4.945268,-7.421145,-4.460531,0.845790,-8.512715,2.451407],[-3.049176,0.029649,-0.961154,3.725091,3.795431,-9.666993,4.769355,-4.659826,3.908411,6.340313,-2.699035,2.465311,-0.863592],[-3.367741,-8.392128,-1.624182,1.014886,2.462811,-0.210896,-1.472074,-7.239130,-5.610556,3.126765,0.019602,1.589656,6.087072],[-0.798715,-5.523883,5.108982,-7.263651,-4.764731,-5.220768,-6.949097,5.890050,1.451265,-4.764636,2.445411,9.054259,9.875847],[6.666905,0.501447,6.720227,5.826752,-4.942387,-4.458601,-1.415939,-5.491652,-2.872380,0.748580,8.601788,1.319551,-3.500003],[-9.414935,-5.005679,-6.190433,-7.298743,-9.117487,1.748338,-8.128031,-0.766634,-6.570607,3.543555,-6.955979,5.695196,-3.667618],[-9.959371,5.108099,-2.390090,-5.243954,3.098718,-5.037732,-8.610136,6.959771,-5.934545,-0.026002,3.977267,-9.976189,0.265119]],[[-0.593153,-2.140918,1.728622,8.700263,8.513367,-1.037525,-6.277298,-2.343780,-2.017832,9.953800,-9.306401,6.268083,-7.421588],[-2.328604,6.340909,1.094276,-8.019075,-4.421245,-2.916028,-5.114063,3.977967,1.467148,1.152357,-3.098351,8.366233,9.959815],[-6.205783,-8.018122,3.824850,4.456352,-8.406686,4.055587,-6.994169,-5.970463,4.421281,-4.849223,8.151703,-6.712253,5.215780],[-3.745687,-5.606305,-4.590670,-6.394006,0.962281,3.398253,4.736561,-0.871095,3.218293,-2.643517,6.194436,-5.590881,8.624581],[-7.455768,-9.135575,-3.987972,-1.733390,3.005084,7.129799,2.223949,1.114092,7.389513,-5.328578,9.749695,-5.783321,7.992309],[0.715359,3.433829,8.668734,-4.109093,2.083909,9.152266,8.423260,0.692661,-6.668726,-0.913032,7.678090,-5.918062,9.529444],[9.014475,-3.618541,9.780868,9.524370,-6.667403,-7.677309,-0.961496,8.540935,2.269120,-2.812252,-8.616502,7.935660,2.022154]],[[-5.553701,-6.294392,6.198621,-3.710314,-9.405198,-3.155439,-9.742241,4.551532,6.707812,9.250244,3.004118,-9.045257,7.537118],[-3.908144,6.354892,6.603960,-1.861599,3.656396,-8.643593,8.479514,5.731693,-2.216579,-4.363726,0.601657,6.611264,-3.801424],[1.746585,0.157399,0.972433,-5.280320,7.587275,3.161505,4.306847,4.029971,-0.320859,6.562137,-2.458844,4.318451,0.807780],[1.379252,0.364673,2.036819,-3.082535,2.031208,-9.296894,-5.864193,-3.293311,6.733367,-4.157307,4.403581,9.402908,-8.128766],[-7.472344,-8.077501,-4.731481,-9.147699,-0.797767,0.633425,-5.623787,-7.329604,-8.021276,-2.199521,-5.959620,-6.170045,5.075649],[0.934071,-1.298729,-8.510909,-0.055801,-6.995289,-4.630500,-6.003998,-2.288781,4.413980,8.762535,-0.606202,-1.983882,-7.635901],[-0.564639,3.420230,-0.340250,9.224272,5.742561,8.783725,-4.111142,-2.740097,-4.275704,4.111821,-2.402821,-7.846367,0.776362]],[[3.269613,0.415709,-4.927252,4.703394,2.559780,2.723624,-5.380449,3.509550,-4.642299,-6.445350,-6.741476,5.328538,5.831543],[6.349604,4.067791,-8.698634,-5.675157,-7.995172,-9.095414,9.576338,0.195546,-9.017983,3.703306,0.174656,8.358929,-5.351207],[7.972408,-9.659237,-3.897233,-2.550316,-9.904710,-1.578426,-8.668373,5.596328,-4.973279,0.113977,8.130093,-0.249547,6.525463],[-7.709766,2.235005,-1.096015,7.054499,8.194514,-5.345978,2.773141,0.635449,-9.539400,5.535941,-7.999013,-9.492971,1.354576],[2.447179,-2.261920,-2.962436,6.192836,1.787828,-6.932985,-2.436163,-6.793202,0.107651,9.450564,-9.448968,-8.758395,-8.490432],[1.749161,-5.581977,-9.789224,-1.771495,-2.736861,-2.237239,-3.811524,-6.779404,-6.382463,4.392025,2.295821,-0.638238,2.137584],[-8.115692,-0.428960,-4.639409,8.276037,3.188458,-6.482132,-2.904516,-9.864113,-3.510663,7.379311,3.434456,-1.509702,-8.637883]]], dtype = "float64")#candidate|11763|(14, 7, 13)|const|float64
bop_11764 = relay.floor_divide(var_11762.astype('float64'), relay.reshape(const_11763.astype('float64'), relay.shape_of(var_11762))) # shape=(14, 7, 13)
output = relay.Tuple([bop_11764,])
output2 = relay.Tuple([bop_11764,])
func_11778 = relay.Function([var_11762,], output)
mod['func_11778'] = func_11778
mod = relay.transform.InferType()(mod)
mutated_mod['func_11778'] = func_11778
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11779 = relay.var("var_11779", dtype = "float64", shape = (14, 7, 13))#candidate|11779|(14, 7, 13)|var|float64
func_11778_call = mutated_mod.get_global_var('func_11778')
call_11780 = func_11778_call(var_11779)
output = call_11780
func_11781 = relay.Function([var_11779], output)
mutated_mod['func_11781'] = func_11781
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6770_call = mod.get_global_var('func_6770')
func_6771_call = mutated_mod.get_global_var('func_6771')
call_11791 = func_6770_call()
call_11792 = func_6770_call()
func_3802_call = mod.get_global_var('func_3802')
func_3804_call = mutated_mod.get_global_var('func_3804')
call_11798 = relay.TupleGetItem(func_3802_call(), 1)
call_11799 = relay.TupleGetItem(func_3804_call(), 1)
output = relay.Tuple([call_11791,call_11798,])
output2 = relay.Tuple([call_11792,call_11799,])
func_11800 = relay.Function([], output)
mod['func_11800'] = func_11800
mod = relay.transform.InferType()(mod)
mutated_mod['func_11800'] = func_11800
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11800_call = mutated_mod.get_global_var('func_11800')
call_11801 = func_11800_call()
output = call_11801
func_11802 = relay.Function([], output)
mutated_mod['func_11802'] = func_11802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10204_call = mod.get_global_var('func_10204')
func_10206_call = mutated_mod.get_global_var('func_10206')
call_11861 = relay.TupleGetItem(func_10204_call(), 4)
call_11862 = relay.TupleGetItem(func_10206_call(), 4)
func_11247_call = mod.get_global_var('func_11247')
func_11249_call = mutated_mod.get_global_var('func_11249')
const_11868 = relay.const([4.602138,4.977517,1.233543,-8.549490,-9.064263,-5.499120,7.801847,-9.112485,5.029605,-8.730859,1.608637,3.215046,-6.614784,-9.887323,2.355993,3.114413,3.474391,-3.026381,7.719051,-8.410580,-7.293672,4.222327,0.354651,7.825317,2.808787,-8.785109,-9.963264,-0.851131,0.833749,8.509822,9.065569,4.984639,4.978683,6.330794,-8.683293,1.281349,-5.394366,-8.902742,-5.364058,9.368537,7.675849,-2.807332,0.933057,-8.290632,6.996598,-8.881786,-4.666598,-6.353816,2.190957,-4.468943,1.284746,-4.655487,-4.752286,0.980675,-4.044767,4.408213,-1.465292,-3.374156,-4.800345,-7.905453,-7.129266,-1.528956,-4.987227,-9.057045,0.901338,5.587215,-0.194641,-0.413236,-0.737890,-9.390432,-3.213122,-2.785594,7.107079,8.223163,0.261289,-1.549916,-9.963012,-7.087793,4.466453,-8.139881,-0.234298,7.842542,4.305856,6.822165,9.769360,-8.127844,1.940407,-8.505837,9.972003,8.408595,8.578841,-2.316358,-7.002124,-5.002701,-5.220422,-1.774945,-5.619906,7.994599,-7.226121,3.190633,-4.635612,5.515008,-7.550790,2.438130,4.795922,-4.763265,-1.316149,-0.089007,4.883683,-9.474221,8.963628,-2.388476,-6.234031,5.566157,3.289152,-8.123553,9.463493,9.785388,4.274078,3.657606,8.356954,5.500629,0.475471,0.928413,-1.515291,-5.278127,-9.084588,9.647143,-4.144189,4.093405,8.961461,-2.262930,-8.388333,-4.107457,-1.432672,-0.785971,0.717538,7.084227,-0.955098,0.381688,-4.607551,-6.489002,2.506265,3.605239,4.942501,3.203950,-7.489180,4.496065,7.583572,-8.627633,0.632820,-8.513738,-4.672163,6.644716,-4.020627,9.476938,-8.075042,5.499900,6.359703,-0.213889,-6.358314,6.998733,6.283394,0.799689,-0.528378,-9.617158,-8.989148,-8.726375,-3.378477,4.800925,-4.175043,5.319554,4.029497,-6.281830,9.708075,1.834366,-2.722829,-6.350604,2.898330,8.457932,6.808668,3.933781,-7.460313,-0.566464,-9.463023,7.092098,-3.976800,8.122375,9.650359,-7.949088,-0.666432,-5.647017,-2.834047,-1.874824,-4.422725,2.853485,5.647771,-7.713168,-8.892634,-8.446678,-1.455394,7.086457,-1.151681,-3.550475,0.868266,-1.670508,-6.151763,-0.206217,6.470769,-8.637796,-3.451365,9.233195,1.181383,1.925114,-2.526189,-5.663272,1.114403,8.779977,-2.089954,-0.352421,-9.431909,-1.871973,4.353974,0.613644,9.314703,7.864459,2.084395,-9.069780,-9.001112,-2.430502,8.009393,7.242421,0.742149,7.539507,4.871710,6.991495,-9.562360,-3.559067,-7.580445,5.296827,-6.904540,-1.732313,8.191275,-8.111109,-6.772018,7.463723,9.278719,8.591989,4.817753,-6.975517,-6.261867,3.907402,2.608007,-0.982720,3.984040,-7.236173,-3.315143,-7.368824,6.350672,5.971563,0.048220,1.295951,-3.601976,8.924131,0.617464,-4.578775,8.043623,2.848487,3.181077,2.067004], dtype = "float64")#candidate|11868|(270,)|const|float64
call_11867 = relay.TupleGetItem(func_11247_call(relay.reshape(const_11868.astype('float64'), [90, 3])), 1)
call_11869 = relay.TupleGetItem(func_11249_call(relay.reshape(const_11868.astype('float64'), [90, 3])), 1)
func_3228_call = mod.get_global_var('func_3228')
func_3230_call = mutated_mod.get_global_var('func_3230')
const_11892 = relay.const([[5.692205],[5.429580],[7.323932],[7.171698],[-8.244552],[-6.240103],[-6.682272],[-4.940155],[4.288063],[5.414413],[-3.653139],[1.503590],[0.496186],[-0.318615],[1.208638],[9.511798],[9.786566],[-2.738885],[-7.445066],[-4.754379],[-9.336208],[4.176357],[-3.619467],[-0.143429],[0.060758],[-7.268270],[-3.641594],[-4.767432],[-8.335060],[0.103638],[-6.731612],[-4.361235],[2.299105],[-9.160563],[-2.325822],[-0.402066],[6.607151],[-9.531287],[-5.639803],[-9.991745],[-8.712504],[2.517771],[-5.786999],[6.099652],[-5.077652],[-6.251779],[0.704413],[-4.268063],[4.095571],[-0.325843],[-1.968301],[6.807122],[3.617983],[2.480743],[-0.333642],[0.858381],[-5.054860],[9.910661],[8.802011],[0.907054],[-7.156348],[-1.018840],[-0.497960],[-9.213816],[6.440562],[-6.749822],[-7.601637],[8.348539],[8.241589],[5.014898],[-0.879518],[-8.947583],[0.415555],[-8.136416],[-2.637399],[8.025547],[9.112319],[-8.848491],[-3.579285],[-9.154314],[-6.725147],[6.357644],[-0.709688],[-1.974217],[-0.479892],[7.714193],[-5.911281],[0.521393],[6.291381],[-7.444249],[-9.946611],[-2.840485],[2.459085],[3.634566],[-0.637918],[2.068084],[-0.768949],[8.284201],[-6.220274],[-5.131052],[1.986887],[2.323535],[-2.776569],[5.890592],[-2.701903],[0.454432],[0.383167],[3.639787],[4.949779],[6.410095],[-5.838433],[-0.049650],[9.983297],[7.757409],[1.208094],[-8.656224],[4.982882],[-5.955390],[6.886094],[7.323691],[-3.887999],[-3.124865],[4.018885],[-7.407588],[-1.972188],[-2.985578],[1.661392],[-4.730888],[-1.700078],[-7.359700],[3.008495],[-5.463008],[-4.563408],[-1.435667],[-7.250957],[-4.822575],[7.734724],[8.231601],[-1.411630],[9.124951],[3.648025],[3.169727],[-8.256760],[4.716971],[3.281455],[-5.704763],[8.324950],[2.110829],[3.841331],[0.932489],[6.429536],[-9.723730],[-9.678488],[0.988246],[-5.714791],[9.681873],[-6.427079],[-0.959988],[-5.162916],[7.036181],[5.662797],[8.527750],[-4.029572],[-1.932273],[-5.271943],[-3.405835],[5.903145],[-9.806033],[-3.703502],[-9.097713],[-9.555395],[-4.838958],[-2.450675],[6.064005],[-6.020567],[-5.740791],[-1.693751],[-0.131762],[-8.123517],[8.646619],[-6.868570],[8.358494],[-4.778634],[8.478907],[6.667969],[7.854705],[-3.299702],[1.370217],[-6.422693],[1.592208],[3.668108],[-7.572818],[8.070934],[3.503700],[-5.848865],[3.111648],[-6.172384],[-3.449713],[-7.037188],[6.554750],[-6.780523],[-2.621861],[-8.185130],[4.153282],[-2.531911],[7.600351],[3.405498],[-2.048127],[8.319048],[-2.556745],[-8.815665],[-1.518445],[-2.959871],[4.641499],[3.372679],[6.222991],[-2.304873],[-3.897015],[8.374337],[0.155004],[-0.519865],[4.679383],[0.434236],[6.410945],[4.164990],[-3.765777],[3.315863],[-4.154647],[8.586517],[-0.327618],[-7.674443],[-2.493757],[1.282985],[1.557295],[6.880798],[1.417648],[-1.565684],[7.622378],[-1.415113],[-2.678401],[-3.320728],[8.731538],[2.569692],[-5.409087],[2.185771],[1.462079],[-0.873899],[-4.694597],[-3.053937],[-4.539806],[6.955689],[-0.887172],[-9.045099],[9.693177],[-5.028621],[0.016689],[-8.487907],[-1.879668],[-1.194223],[-6.210930],[7.646145],[-2.450804],[-3.077085],[-8.213201],[-3.131913],[-1.207253],[-5.231433],[1.043918],[-9.380476],[3.294625],[-2.650037],[3.245690],[0.446462],[6.201958],[-2.603431],[9.611176],[8.120136],[2.925503],[8.844827],[1.207006],[-8.466585],[0.264589],[-6.251482],[-1.434256],[1.308908],[1.756244],[-6.955355],[-9.431675],[-9.199710],[1.630494],[9.262052],[-5.759005],[-2.724855],[-7.843194],[6.188398],[-5.686656],[4.060796],[-5.040426],[-8.972372],[-3.239009],[-8.569940],[-7.685712],[1.312071],[-3.459300],[-7.675542],[-1.506291],[1.525520],[-3.460846],[7.868601],[1.867801],[-6.670945],[-5.181656],[4.166419],[5.097813],[6.143883],[3.911571],[8.915214],[-4.157472],[-7.492119],[-4.294915],[1.590727],[-2.469791],[-3.949935],[-4.540055],[-9.849338],[-8.865468],[8.840997],[-8.908404],[-9.802713],[0.385712],[-6.802482],[2.101514],[-3.140031],[-9.381887],[9.336005],[7.376807],[7.430678],[3.462425],[-9.449637],[4.549893],[5.216110],[-8.503110],[8.934664],[7.445752],[-7.085205],[3.385647],[8.275825],[2.213048],[8.307905],[-4.634191],[-6.470226],[9.115697],[0.111135],[5.440458],[-5.376486],[-0.172783],[1.114461],[8.321428],[-4.084660],[-1.319981],[0.170928],[2.671409],[-2.888179],[-3.308846],[-0.801913],[-2.584279],[-1.491084],[-5.539497],[-6.036196],[0.436174],[3.851973],[-0.380611],[-6.132011],[8.998877],[-6.943793],[-1.566621],[7.995828],[-9.709879],[-9.289361],[9.124833],[9.165497],[2.574323],[8.634716],[-1.785961],[-7.623589],[4.846836],[0.948746],[-2.794803],[2.251708],[-5.820346],[7.601555],[9.380464],[-3.223890],[-4.658817],[-8.061450],[7.567813],[-6.327622],[6.495370],[8.511186],[8.650068],[7.473219],[3.680004],[2.779562],[7.226664],[3.165357],[-2.716102],[-1.768134],[8.888748],[-7.057251],[9.350983],[-8.865654],[-2.856404],[7.028864],[-1.030368],[9.650220],[-4.577667],[-1.651766],[-7.779138],[6.455913],[-2.908588],[9.322269],[3.948300],[-0.925097],[7.305823],[1.978946],[3.439795],[7.871630],[-0.286806],[9.928228],[9.431210],[-4.928506],[-0.786136],[4.880736],[-7.441514],[-9.261212],[5.553136],[-5.368479],[4.873469],[-3.184141],[9.331802],[3.456219],[7.590075],[-3.415153],[1.603191],[-9.166841],[7.405296],[1.143533],[-2.368910],[-3.746839],[4.434233],[1.421983],[-5.796373],[-5.291139],[4.976525],[-7.490800],[-9.950314],[1.692704],[0.869075],[2.816375],[-1.371192],[6.864239],[-1.117987],[4.423923],[-4.005067],[-4.955191],[-8.458731],[-6.494861],[6.040836],[-9.227700],[5.562281],[6.708193],[-3.353982],[6.499543],[-8.742092],[-3.871438],[7.639015],[-2.045760],[-5.788679],[-5.918478],[2.979696],[7.509641],[-3.432383],[2.102621],[-7.556045],[-6.788520],[-6.975477],[8.196835],[2.433939],[-6.738906],[2.162264],[-5.581902],[8.939813],[-1.546882],[-0.103698],[-2.719226],[2.551549],[3.990004],[4.839348],[9.051628],[-0.768522],[-3.265881],[2.615795],[4.849024],[-3.414052],[3.165665],[-7.683481],[-1.962483],[-9.159792],[-5.245378],[0.875951],[6.943818],[-7.906448],[4.322938],[5.490948],[7.633634],[-1.217063],[-8.497967],[4.596743],[-4.544637],[-9.489142],[5.715039],[3.802074],[-9.618720],[-1.559924],[-1.664599],[9.827738],[4.118420],[-1.328019],[8.452837],[5.820116],[3.657484],[-9.751435],[-7.821312],[7.672232],[-4.899807],[-0.625654],[3.160547],[6.482104],[9.537779],[-8.141548],[-2.664842],[4.592335],[6.097527],[-0.544129],[1.602403],[0.826119],[9.159473],[7.457911],[2.995917],[0.639682],[-3.411875],[4.154358],[6.434492],[1.925956],[-5.995903],[3.322797],[4.844232],[-8.407536],[-2.008403],[4.795768],[0.454089],[5.590841],[9.015475],[-0.601074],[4.033951],[-4.167678],[7.737996],[9.643401],[-2.177673],[7.570860],[-3.896931],[8.309477],[-2.269556],[-1.727740],[-0.655123],[-1.667217],[-1.979585],[0.938678],[-7.098419],[-1.011916],[3.028308],[9.234816],[-8.175795],[5.535931],[2.030934],[-5.228744],[1.780579],[1.968569],[3.172928],[4.215819],[-1.233499],[1.852896],[3.834795],[-7.111507],[-5.861077],[0.659275],[6.350663],[-5.490108],[-6.721043],[-8.531877],[3.936819],[6.150591],[7.763918],[-0.402835],[1.120078],[-6.563833],[9.110008],[-6.908780],[-5.694888],[9.952611],[-8.564891],[-8.879171],[4.391155],[2.005699],[5.032533],[-4.822521],[-7.482511],[8.347814],[-2.620043],[3.128861],[4.583476],[1.666601],[7.334978],[8.311693],[-4.348419],[6.803545],[-6.811905],[-8.588711],[-4.361425],[4.348855],[-6.412967],[-2.901061],[2.293699],[-3.701493],[1.827685],[9.659799],[9.642561],[-4.059672],[6.310820],[5.840227],[-7.996299],[-6.012228],[-5.516449],[-6.871557],[-9.063581],[-4.419379],[2.650726],[-2.050364],[5.288667],[1.160790],[-9.595205],[3.487282],[4.702073],[-4.791484],[-1.859118],[4.904567],[-7.735833],[5.538587],[-9.746744],[-5.802431],[4.005122],[5.270063],[4.830992],[4.146340],[-3.475027],[-3.206649],[-8.956622],[7.421091],[8.358057],[-7.755365],[6.913638],[-1.384185],[9.887966],[-9.648651],[9.760383],[-4.165307],[-0.798227],[-5.158728],[1.613875],[-9.683595],[-2.210725],[-5.970267],[-8.106891],[-4.125462],[-3.269426],[7.148549],[-4.387065],[8.892780],[1.793063],[-2.603427],[-5.673362],[4.592624],[-4.401624],[3.320200],[-6.386256],[-3.864937],[-7.796507],[3.642422],[-0.131869],[-9.746963],[-4.514506],[-5.321446],[3.893985],[-8.628822],[6.299604],[9.892699],[5.533559],[-8.623796],[-3.613538],[-5.419457],[3.566698],[0.798467],[5.670627],[5.998304],[8.772849],[-6.646238],[5.472589],[-0.135099],[3.973611],[-3.877686],[1.284234],[-6.763989],[-4.997480],[1.069067],[-7.075599],[4.891238],[-2.361869],[9.579391],[0.364018],[9.221742],[-9.056748],[-2.797266],[-0.718643],[-9.813217],[5.543579],[-1.772220],[5.432488],[-7.796819],[-3.853358],[-5.220237],[8.597594],[-6.884685],[3.927622],[0.295240],[-4.523058],[3.871435],[0.907054],[5.166695],[-0.632889],[1.042511],[-5.992869],[4.733279],[-3.868690],[6.877739],[7.414978],[-7.384628],[-0.152545],[-9.604127],[-8.710388],[-5.624970],[-3.685491],[-1.843501],[-6.448409],[3.964794],[6.006102],[-0.958717],[-8.100289],[4.010139],[9.710950],[4.660707],[7.043839],[4.285008],[7.424302],[6.064193],[-7.899573],[-9.293083],[0.842460],[-8.903265],[-9.736889],[-3.889074],[-3.095300],[1.402296],[-4.018497],[8.924576],[-3.993156],[-1.559037],[-3.918341],[1.545507],[9.487778],[-7.883774],[-6.219913],[-2.022130],[7.588890],[6.473888],[-2.630800],[8.835574],[0.674391],[-9.477841],[-6.362584],[6.263187],[-8.092476],[-4.816480],[-6.862434],[-0.033184],[-4.946646],[1.189727],[-5.244355],[-2.379613],[-7.548688],[3.147354],[1.504341],[2.648611],[-2.171855],[9.682878],[5.539269],[1.037926],[-0.337643],[7.312739],[7.960237],[9.943508],[-2.378966],[-2.146883],[-8.860027],[-4.841478],[5.296122],[-1.568517],[-9.387425],[3.092364],[3.810866],[8.566708],[5.177901],[-1.515238],[-3.690759],[-1.151062],[-2.502410],[2.454879],[-3.851867],[4.374301],[-9.814474],[1.547584],[7.551015],[3.338986],[2.189681],[-5.182138],[9.663329],[-6.741509],[-3.721916],[-9.983031],[-3.270382],[-3.709459],[-0.196262],[8.441238],[-0.563062],[-5.498112],[-7.060364],[-9.171999],[6.963470],[3.709822],[-0.248798],[6.834285],[-5.950626],[-6.035184],[-5.251569],[9.515220],[-8.077934],[5.549150],[-5.839418],[1.628936],[7.961934],[8.028127],[-1.111908],[-9.692919],[3.467206],[-0.050542],[7.791556],[9.988839],[3.021115],[0.466792],[3.902635],[-2.850795],[-3.969609],[-5.316110],[-5.431512],[6.624363],[7.389281],[3.524883],[-7.328948],[1.165805],[-1.328037],[1.436644],[9.205046],[5.129611],[9.776488],[6.065276],[5.355195],[-9.402289],[6.316440],[-6.998758],[-9.376644],[-4.537551],[8.194383],[9.550837],[3.002663],[0.182632],[9.586444],[8.279328],[-8.676041],[1.584442],[6.637261],[-7.704751],[6.785128],[0.393493],[7.820785],[-5.528015],[2.837702],[-6.279885],[0.914623],[7.955188],[-8.186355],[-2.062076],[7.160778],[3.222257],[-1.362336],[7.998665],[3.859071],[-7.619494],[-9.616584],[9.619620],[-8.572235],[-0.267631],[-7.951914],[-7.551298],[-5.110089],[-7.767321],[-2.048707],[-1.095648],[2.182824],[9.373276],[9.308158],[5.173042],[-2.741651],[4.491654],[6.464699],[2.595234],[-1.607456],[-1.184139],[-9.860144],[-2.783342],[-5.341125],[4.336063],[6.722155],[-2.361707],[7.245137],[-1.255334],[5.819170],[7.505357],[-7.214984],[-9.501382],[-2.258938],[6.639328],[0.336250],[0.041217],[-4.377371],[0.535376],[8.589042],[9.244628],[-5.021889],[5.312240],[-9.710448],[-4.911588],[7.683271],[3.671451],[-8.173359],[-4.215273],[1.203964],[-1.124400],[6.263941],[-6.392381],[6.800697],[-2.694650],[6.110385],[-4.088593],[2.601400],[1.462551],[8.402899],[7.857167],[-7.766876],[-6.677145],[0.240727],[4.516907],[-1.038629],[4.730359],[5.173650],[9.113080],[5.900109],[4.034458],[-5.351256],[3.808555],[8.942447],[6.037872],[-1.528266],[-8.190998],[3.652955],[-8.026985],[7.597841],[-5.507994],[8.243650],[6.394985],[6.223275],[7.706668],[-8.494007],[0.249792],[-1.296110],[-4.950056],[-9.489843],[9.529277],[7.759643],[7.597049],[-9.928302],[4.181128],[0.764354],[-6.146392],[9.524922],[5.509836],[-2.196736],[-9.195990],[-7.025115],[1.391249],[-8.063029],[-0.056851],[9.875484],[9.275734],[5.605468],[-7.375023],[-2.630097],[5.592379],[1.549596],[-8.305897],[8.523967],[3.369676],[7.062720],[-0.399254],[-7.146677],[-5.608238],[-8.795258],[2.691041],[-2.263083],[-5.839607],[5.805863],[-5.094389]], dtype = "float64")#candidate|11892|(1050, 1)|const|float64
call_11891 = relay.TupleGetItem(func_3228_call(relay.reshape(const_11892.astype('float64'), [7, 15, 10])), 0)
call_11893 = relay.TupleGetItem(func_3230_call(relay.reshape(const_11892.astype('float64'), [7, 15, 10])), 0)
uop_11894 = relay.sqrt(const_11892.astype('float64')) # shape=(1050, 1)
func_1800_call = mod.get_global_var('func_1800')
func_1801_call = mutated_mod.get_global_var('func_1801')
call_11900 = relay.TupleGetItem(func_1800_call(), 0)
call_11901 = relay.TupleGetItem(func_1801_call(), 0)
func_10344_call = mod.get_global_var('func_10344')
func_10346_call = mutated_mod.get_global_var('func_10346')
var_11903 = relay.var("var_11903", dtype = "float64", shape = (12, 60))#candidate|11903|(12, 60)|var|float64
call_11902 = relay.TupleGetItem(func_10344_call(relay.reshape(var_11903.astype('float64'), [8, 9, 10])), 4)
call_11904 = relay.TupleGetItem(func_10346_call(relay.reshape(var_11903.astype('float64'), [8, 9, 10])), 4)
output = relay.Tuple([call_11861,call_11867,const_11868,call_11891,uop_11894,call_11900,call_11902,var_11903,])
output2 = relay.Tuple([call_11862,call_11869,const_11868,call_11893,uop_11894,call_11901,call_11904,var_11903,])
func_11909 = relay.Function([var_11903,], output)
mod['func_11909'] = func_11909
mod = relay.transform.InferType()(mod)
var_11910 = relay.var("var_11910", dtype = "float64", shape = (12, 60))#candidate|11910|(12, 60)|var|float64
output = func_11909(var_11910)
func_11911 = relay.Function([var_11910], output)
mutated_mod['func_11911'] = func_11911
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11921 = relay.var("var_11921", dtype = "float32", shape = (4, 8, 5))#candidate|11921|(4, 8, 5)|var|float32
uop_11922 = relay.sigmoid(var_11921.astype('float32')) # shape=(4, 8, 5)
func_3262_call = mod.get_global_var('func_3262')
func_3264_call = mutated_mod.get_global_var('func_3264')
call_11924 = relay.TupleGetItem(func_3262_call(), 1)
call_11925 = relay.TupleGetItem(func_3264_call(), 1)
output = relay.Tuple([uop_11922,call_11924,])
output2 = relay.Tuple([uop_11922,call_11925,])
func_11928 = relay.Function([var_11921,], output)
mod['func_11928'] = func_11928
mod = relay.transform.InferType()(mod)
mutated_mod['func_11928'] = func_11928
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11929 = relay.var("var_11929", dtype = "float32", shape = (4, 8, 5))#candidate|11929|(4, 8, 5)|var|float32
func_11928_call = mutated_mod.get_global_var('func_11928')
call_11930 = func_11928_call(var_11929)
output = call_11930
func_11931 = relay.Function([var_11929], output)
mutated_mod['func_11931'] = func_11931
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6487_call = mod.get_global_var('func_6487')
func_6489_call = mutated_mod.get_global_var('func_6489')
call_11947 = relay.TupleGetItem(func_6487_call(), 0)
call_11948 = relay.TupleGetItem(func_6489_call(), 0)
output = call_11947
output2 = call_11948
func_11959 = relay.Function([], output)
mod['func_11959'] = func_11959
mod = relay.transform.InferType()(mod)
output = func_11959()
func_11960 = relay.Function([], output)
mutated_mod['func_11960'] = func_11960
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1205_call = mod.get_global_var('func_1205')
func_1206_call = mutated_mod.get_global_var('func_1206')
call_11969 = func_1205_call()
call_11970 = func_1205_call()
output = relay.Tuple([call_11969,])
output2 = relay.Tuple([call_11970,])
func_11973 = relay.Function([], output)
mod['func_11973'] = func_11973
mod = relay.transform.InferType()(mod)
mutated_mod['func_11973'] = func_11973
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11973_call = mutated_mod.get_global_var('func_11973')
call_11974 = func_11973_call()
output = call_11974
func_11975 = relay.Function([], output)
mutated_mod['func_11975'] = func_11975
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4770_call = mod.get_global_var('func_4770')
func_4772_call = mutated_mod.get_global_var('func_4772')
call_11987 = relay.TupleGetItem(func_4770_call(), 0)
call_11988 = relay.TupleGetItem(func_4772_call(), 0)
func_8842_call = mod.get_global_var('func_8842')
func_8844_call = mutated_mod.get_global_var('func_8844')
call_11995 = func_8842_call()
call_11996 = func_8842_call()
func_7372_call = mod.get_global_var('func_7372')
func_7373_call = mutated_mod.get_global_var('func_7373')
call_12000 = relay.TupleGetItem(func_7372_call(), 0)
call_12001 = relay.TupleGetItem(func_7373_call(), 0)
var_12013 = relay.var("var_12013", dtype = "float32", shape = (12, 16, 11))#candidate|12013|(12, 16, 11)|var|float32
bop_12014 = relay.greater(call_12000.astype('bool'), var_12013.astype('bool')) # shape=(12, 16, 11)
bop_12017 = relay.greater(call_12001.astype('bool'), var_12013.astype('bool')) # shape=(12, 16, 11)
func_9427_call = mod.get_global_var('func_9427')
func_9429_call = mutated_mod.get_global_var('func_9429')
call_12019 = relay.TupleGetItem(func_9427_call(), 0)
call_12020 = relay.TupleGetItem(func_9429_call(), 0)
output = relay.Tuple([call_11987,call_11995,bop_12014,call_12019,])
output2 = relay.Tuple([call_11988,call_11996,bop_12017,call_12020,])
func_12027 = relay.Function([var_12013,], output)
mod['func_12027'] = func_12027
mod = relay.transform.InferType()(mod)
var_12028 = relay.var("var_12028", dtype = "float32", shape = (12, 16, 11))#candidate|12028|(12, 16, 11)|var|float32
output = func_12027(var_12028)
func_12029 = relay.Function([var_12028], output)
mutated_mod['func_12029'] = func_12029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1211_call = mod.get_global_var('func_1211')
func_1213_call = mutated_mod.get_global_var('func_1213')
call_12034 = func_1211_call()
call_12035 = func_1211_call()
output = call_12034
output2 = call_12035
func_12039 = relay.Function([], output)
mod['func_12039'] = func_12039
mod = relay.transform.InferType()(mod)
output = func_12039()
func_12040 = relay.Function([], output)
mutated_mod['func_12040'] = func_12040
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6515_call = mod.get_global_var('func_6515')
func_6517_call = mutated_mod.get_global_var('func_6517')
call_12075 = relay.TupleGetItem(func_6515_call(), 0)
call_12076 = relay.TupleGetItem(func_6517_call(), 0)
func_10204_call = mod.get_global_var('func_10204')
func_10206_call = mutated_mod.get_global_var('func_10206')
call_12086 = relay.TupleGetItem(func_10204_call(), 1)
call_12087 = relay.TupleGetItem(func_10206_call(), 1)
output = relay.Tuple([call_12075,call_12086,])
output2 = relay.Tuple([call_12076,call_12087,])
func_12090 = relay.Function([], output)
mod['func_12090'] = func_12090
mod = relay.transform.InferType()(mod)
output = func_12090()
func_12091 = relay.Function([], output)
mutated_mod['func_12091'] = func_12091
mutated_mod = relay.transform.InferType()(mutated_mod)
const_12158 = relay.const([[[4.453694,0.457711,9.971007,-0.816157,-0.515455,-2.475743,-1.430529,-7.300167]],[[2.131009,6.965067,4.974956,-2.115508,5.051493,-0.333022,-1.267634,7.041178]]], dtype = "float64")#candidate|12158|(2, 1, 8)|const|float64
uop_12159 = relay.sinh(const_12158.astype('float64')) # shape=(2, 1, 8)
output = uop_12159
output2 = uop_12159
func_12161 = relay.Function([], output)
mod['func_12161'] = func_12161
mod = relay.transform.InferType()(mod)
output = func_12161()
func_12162 = relay.Function([], output)
mutated_mod['func_12162'] = func_12162
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10615_call = mod.get_global_var('func_10615')
func_10616_call = mutated_mod.get_global_var('func_10616')
call_12163 = relay.TupleGetItem(func_10615_call(), 0)
call_12164 = relay.TupleGetItem(func_10616_call(), 0)
func_10866_call = mod.get_global_var('func_10866')
func_10868_call = mutated_mod.get_global_var('func_10868')
call_12179 = func_10866_call()
call_12180 = func_10866_call()
func_11148_call = mod.get_global_var('func_11148')
func_11149_call = mutated_mod.get_global_var('func_11149')
call_12181 = relay.TupleGetItem(func_11148_call(), 0)
call_12182 = relay.TupleGetItem(func_11149_call(), 0)
func_6974_call = mod.get_global_var('func_6974')
func_6976_call = mutated_mod.get_global_var('func_6976')
const_12185 = relay.const([6.194080,0.886431,-6.039221,1.587177,-8.989901,4.219388,9.978532,6.795832,4.708483,5.623633,0.086967,-1.003147,6.170797,3.902664,-1.102584,5.954637,3.291100,2.512400,-1.709648,0.945598,-8.634858,-5.520894,-9.417553,0.301104,-6.971208,1.959403,-2.793483,-0.015358,-1.199656,7.411533,7.816439,-4.498737,1.473650,-0.579804,4.660344,-5.082643,-8.443709,1.240996,0.136295,-8.567386,2.500099,2.645216,-9.096984,9.086444,3.328911,6.162059,2.785628,0.769149,-0.053494,-3.375291,7.216319,8.963621,8.715483,-0.411012,6.489972,-5.173900,9.858438,6.204288,1.092625,-1.718494,7.721600,-1.939449,-8.817986,4.074075,3.023018,-5.944360,-5.138874,5.630379,-5.264346,-4.601495,-7.477724,3.023411,0.791376,1.626939,8.908123,1.257919,-6.164795,-6.938505,-1.223731,4.590664,6.821438,-5.212556,1.864376,-5.644765,-9.170359,-7.573088,3.700565,-9.765221,-8.472007,-3.941877,5.120094,-0.629847,6.752328,-8.950240,-9.297069,2.146758,9.021737,3.909506,3.462286,1.406420,4.908161,2.428090,8.881192,9.158021,5.291348,8.557460,8.630834,-9.912422,-3.471593,-2.523141,-7.342057,3.001200,-1.225640,8.914914,-3.443844,2.101954,-0.723746,-8.028447,-5.648126,3.247502,9.290747,-9.502846,-4.151086,3.552491,-6.669715,4.328113,-9.970975,-5.715645,9.807786,-4.835465,-0.886884,8.921152,-4.890134,-2.229526,6.289784,2.055944,0.799903,-7.402104,-3.144793,-8.301960,4.923409,-4.554839,-9.393467,-6.735795,-0.137197,6.097511,-2.905982,1.353210,6.305566,8.635297,5.420581,6.552644,3.528077,-0.802019,-0.236024,-6.736745,-3.038294,1.932664,2.405297,-3.116973,-2.359356,8.224444,1.449355,-9.609134,-4.193724,1.937319,-3.517519,-9.334567,-1.595326,8.522316,-2.336427,9.757294,-0.385492,2.929772,-0.704407,0.577090,-0.878765,-8.687384,1.360560,-3.866680,-9.909337,6.448610,-5.878032,-8.360335,-8.369523,9.954454,5.628927,3.243086,5.286306,-9.322280,1.584193,3.357949,-3.484973,3.210515,-1.098695,5.385393,2.303335,2.229754,9.801442,9.036131,9.487220,-9.726534,2.682722,1.816704,-1.607907,-4.227785,7.618226,2.778145,0.410388,-0.918561,-9.761175,6.302114,-8.481170,-2.456435,-9.421369,-0.572876,-6.397218,3.231667,-0.685776,5.309171,-4.446386,-7.134584,6.202192,5.844404,-2.657270,-6.330730,5.314863,8.815397,-0.729584,2.111162,9.499093,-5.978797,-0.185211,1.479474,-1.813780,-4.552692,-7.012310,3.038626,-6.424002,7.475632], dtype = "float32")#candidate|12185|(240,)|const|float32
call_12184 = relay.TupleGetItem(func_6974_call(relay.reshape(const_12185.astype('float32'), [240,])), 6)
call_12186 = relay.TupleGetItem(func_6976_call(relay.reshape(const_12185.astype('float32'), [240,])), 6)
output = relay.Tuple([call_12163,call_12179,call_12181,call_12184,const_12185,])
output2 = relay.Tuple([call_12164,call_12180,call_12182,call_12186,const_12185,])
func_12189 = relay.Function([], output)
mod['func_12189'] = func_12189
mod = relay.transform.InferType()(mod)
output = func_12189()
func_12190 = relay.Function([], output)
mutated_mod['func_12190'] = func_12190
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6817_call = mod.get_global_var('func_6817')
func_6819_call = mutated_mod.get_global_var('func_6819')
call_12191 = relay.TupleGetItem(func_6817_call(), 0)
call_12192 = relay.TupleGetItem(func_6819_call(), 0)
func_9287_call = mod.get_global_var('func_9287')
func_9289_call = mutated_mod.get_global_var('func_9289')
var_12198 = relay.var("var_12198", dtype = "bool", shape = (264, 2))#candidate|12198|(264, 2)|var|bool
call_12197 = relay.TupleGetItem(func_9287_call(relay.reshape(var_12198.astype('bool'), [3, 16, 11])), 1)
call_12199 = relay.TupleGetItem(func_9289_call(relay.reshape(var_12198.astype('bool'), [3, 16, 11])), 1)
func_8215_call = mod.get_global_var('func_8215')
func_8216_call = mutated_mod.get_global_var('func_8216')
call_12210 = func_8215_call()
call_12211 = func_8215_call()
func_7823_call = mod.get_global_var('func_7823')
func_7824_call = mutated_mod.get_global_var('func_7824')
call_12237 = relay.TupleGetItem(func_7823_call(), 1)
call_12238 = relay.TupleGetItem(func_7824_call(), 1)
func_5457_call = mod.get_global_var('func_5457')
func_5459_call = mutated_mod.get_global_var('func_5459')
call_12248 = relay.TupleGetItem(func_5457_call(), 0)
call_12249 = relay.TupleGetItem(func_5459_call(), 0)
func_5236_call = mod.get_global_var('func_5236')
func_5237_call = mutated_mod.get_global_var('func_5237')
call_12253 = relay.TupleGetItem(func_5236_call(), 1)
call_12254 = relay.TupleGetItem(func_5237_call(), 1)
func_5569_call = mod.get_global_var('func_5569')
func_5572_call = mutated_mod.get_global_var('func_5572')
const_12260 = relay.const(-3.748684, dtype = "float32")#candidate|12260|()|const|float32
const_12261 = relay.const([6.618488,0.413822,8.009726,2.347869,-8.818636,-9.740369,1.630767,9.077252,1.788416,9.903966,2.151984,-3.950218,5.467623,-3.129697,-3.507033], dtype = "float32")#candidate|12261|(15,)|const|float32
call_12259 = relay.TupleGetItem(func_5569_call(relay.reshape(const_12260.astype('float32'), []), relay.reshape(const_12261.astype('float32'), [15, 1]), ), 0)
call_12262 = relay.TupleGetItem(func_5572_call(relay.reshape(const_12260.astype('float32'), []), relay.reshape(const_12261.astype('float32'), [15, 1]), ), 0)
func_10806_call = mod.get_global_var('func_10806')
func_10807_call = mutated_mod.get_global_var('func_10807')
call_12268 = relay.TupleGetItem(func_10806_call(), 1)
call_12269 = relay.TupleGetItem(func_10807_call(), 1)
output = relay.Tuple([call_12191,call_12197,var_12198,call_12210,call_12237,call_12248,call_12253,call_12259,const_12260,const_12261,call_12268,])
output2 = relay.Tuple([call_12192,call_12199,var_12198,call_12211,call_12238,call_12249,call_12254,call_12262,const_12260,const_12261,call_12269,])
func_12284 = relay.Function([var_12198,], output)
mod['func_12284'] = func_12284
mod = relay.transform.InferType()(mod)
mutated_mod['func_12284'] = func_12284
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12285 = relay.var("var_12285", dtype = "bool", shape = (264, 2))#candidate|12285|(264, 2)|var|bool
func_12284_call = mutated_mod.get_global_var('func_12284')
call_12286 = func_12284_call(var_12285)
output = call_12286
func_12287 = relay.Function([var_12285], output)
mutated_mod['func_12287'] = func_12287
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6110_call = mod.get_global_var('func_6110')
func_6112_call = mutated_mod.get_global_var('func_6112')
call_12307 = relay.TupleGetItem(func_6110_call(), 2)
call_12308 = relay.TupleGetItem(func_6112_call(), 2)
const_12340 = relay.const([[[-5,-1,-7,1,3,-8,6,4,10,8,8],[-1,-7,1,5,10,-2,3,8,-7,-7,-6],[9,-10,-9,-9,6,1,3,1,-9,10,-4],[1,8,-2,6,-7,7,4,-8,4,4,-7],[-9,-9,-3,-2,-1,-8,-4,5,8,5,-1],[-1,5,-3,3,8,-2,10,5,10,-6,8],[-9,-8,-4,10,3,4,-9,6,9,-3,2],[-6,-5,4,5,1,-2,-10,-1,4,4,-1],[9,6,-1,10,-4,10,-5,1,4,-5,-1],[7,-5,-8,-2,-5,-6,8,-2,3,-7,5],[7,1,10,-10,-10,4,7,-6,1,-10,4],[6,-8,-2,-2,-4,-7,-10,10,-7,-6,-8],[5,2,7,4,-1,7,-7,-2,-10,-8,3],[1,6,6,2,-5,-7,-4,-10,-8,-7,8],[-6,5,-9,10,-10,7,-2,8,-8,1,-1],[-2,3,3,4,6,-4,-5,-3,-6,9,-9]],[[-10,-7,1,4,2,4,-3,-5,-8,9,9],[6,-3,5,8,5,10,-4,9,-2,3,6],[2,-5,2,4,-7,5,3,-2,-3,-10,-8],[-3,-4,7,2,-3,5,-5,-3,-10,9,10],[5,-4,-10,1,-9,-4,9,10,5,4,-3],[-6,-9,-7,-2,-2,-3,-5,-1,3,-9,2],[-8,-9,-10,-2,-5,-9,7,-5,-7,5,-3],[4,-5,5,4,3,-2,7,-7,-4,9,7],[3,4,10,9,10,-9,-2,2,-2,10,-9],[-7,-7,-1,6,4,-1,-1,-10,6,6,6],[10,6,4,7,2,-4,-4,-7,2,-4,-2],[5,7,-1,-5,-3,-8,6,-2,7,-6,4],[5,-4,1,-9,-3,4,-6,-5,5,-5,-6],[4,3,-1,-4,2,-6,-6,4,-9,-2,1],[9,8,-3,-6,-3,6,-4,8,3,7,6],[-6,9,-9,8,8,5,3,8,-6,10,10]],[[8,3,-7,9,-6,-4,-10,-5,-5,8,-10],[8,10,10,4,7,-7,1,3,-5,-5,-3],[4,-5,-2,6,4,1,-8,6,-10,-3,-5],[10,6,-4,-6,8,-6,8,-6,9,10,7],[-10,9,-6,-8,-7,-9,-6,4,10,2,6],[4,-6,-5,-5,-4,3,-7,-4,-2,-3,-3],[-3,-9,-2,-1,-2,-10,9,3,-8,-9,10],[2,10,6,6,-10,-10,-4,-3,9,-9,2],[-6,2,-1,7,-8,5,4,1,3,-8,2],[3,4,-9,-5,-3,-7,7,9,-9,-4,4],[8,-5,-9,-3,-5,-6,-10,-6,-7,8,-5],[2,-10,10,5,-1,1,3,-10,-1,-3,-6],[4,-10,10,-7,-4,8,9,-9,1,-7,-5],[-2,-5,2,10,10,9,-6,-9,-1,-1,-8],[-6,-3,6,-1,10,-10,6,4,-7,3,6],[4,-2,10,-3,-2,-7,5,-6,-8,2,3]],[[7,6,-4,1,-10,-5,9,6,6,-10,6],[8,-2,10,2,3,-3,-5,-10,6,9,-2],[9,-10,-7,-7,6,5,-2,1,8,-3,-5],[-7,5,2,-7,4,-2,2,-3,-10,-6,6],[-10,2,-2,-9,5,1,9,4,8,3,-2],[-9,4,3,-4,8,9,2,-6,10,6,1],[-5,-1,-3,-4,9,-10,-3,-5,-4,-1,-4],[8,-3,-1,-10,-4,7,1,-10,-5,-8,-4],[-7,-6,-1,-6,9,6,2,8,-10,-10,-10],[7,4,8,6,-3,-10,-6,7,7,7,7],[-1,-3,9,-9,4,8,-9,-10,-8,-8,1],[1,-7,3,2,-3,-6,3,10,4,-10,-2],[1,-4,6,-7,-7,6,-7,-7,-10,1,9],[-3,5,-2,2,-2,9,-1,-9,1,-9,9],[7,-6,-8,-5,8,-5,7,-8,3,-1,-9],[7,-1,3,7,-7,-1,1,7,-4,4,-1]],[[-9,8,-10,-6,1,6,-4,-1,4,3,-10],[-3,-10,5,-8,-5,-5,9,-1,-6,-8,4],[3,3,5,3,2,-6,4,-8,-8,-9,5],[-10,-5,-9,-1,7,8,1,9,1,-1,6],[8,10,-7,9,-1,8,-7,10,-8,2,-8],[1,9,9,-9,-7,-10,-3,10,-1,-4,6],[6,9,-5,-1,-6,-2,-4,-6,7,2,-2],[6,-10,2,4,3,-6,-3,3,-3,8,-5],[8,5,-7,-3,-3,-3,-4,5,3,-9,2],[9,7,6,9,8,-3,1,2,-8,-4,8],[-6,-7,2,-7,9,-10,9,-2,7,4,-2],[7,2,9,-6,4,-9,-10,-9,5,-2,6],[3,8,9,10,-10,7,4,-7,-2,-2,-4],[-4,-9,4,-6,-3,-8,10,4,9,9,-7],[2,5,5,-9,-10,-5,-1,-2,-9,7,7],[-5,9,6,-1,-3,5,1,7,-10,-10,-10]]], dtype = "int32")#candidate|12340|(5, 16, 11)|const|int32
bop_12341 = relay.subtract(call_12307.astype('uint64'), const_12340.astype('uint64')) # shape=(5, 16, 11)
bop_12344 = relay.subtract(call_12308.astype('uint64'), const_12340.astype('uint64')) # shape=(5, 16, 11)
bop_12355 = relay.maximum(call_12307.astype('float64'), bop_12341.astype('float64')) # shape=(5, 16, 11)
bop_12358 = relay.maximum(call_12308.astype('float64'), bop_12344.astype('float64')) # shape=(5, 16, 11)
output = bop_12355
output2 = bop_12358
func_12363 = relay.Function([], output)
mod['func_12363'] = func_12363
mod = relay.transform.InferType()(mod)
output = func_12363()
func_12364 = relay.Function([], output)
mutated_mod['func_12364'] = func_12364
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12415 = relay.var("var_12415", dtype = "float32", shape = (9, 12, 6))#candidate|12415|(9, 12, 6)|var|float32
uop_12416 = relay.exp(var_12415.astype('float32')) # shape=(9, 12, 6)
func_5650_call = mod.get_global_var('func_5650')
func_5651_call = mutated_mod.get_global_var('func_5651')
call_12428 = relay.TupleGetItem(func_5650_call(), 3)
call_12429 = relay.TupleGetItem(func_5651_call(), 3)
output = relay.Tuple([uop_12416,call_12428,])
output2 = relay.Tuple([uop_12416,call_12429,])
func_12433 = relay.Function([var_12415,], output)
mod['func_12433'] = func_12433
mod = relay.transform.InferType()(mod)
var_12434 = relay.var("var_12434", dtype = "float32", shape = (9, 12, 6))#candidate|12434|(9, 12, 6)|var|float32
output = func_12433(var_12434)
func_12435 = relay.Function([var_12434], output)
mutated_mod['func_12435'] = func_12435
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12506 = relay.var("var_12506", dtype = "float32", shape = (11, 13, 16))#candidate|12506|(11, 13, 16)|var|float32
uop_12507 = relay.asin(var_12506.astype('float32')) # shape=(11, 13, 16)
uop_12514 = relay.tan(var_12506.astype('float32')) # shape=(11, 13, 16)
output = relay.Tuple([uop_12507,uop_12514,])
output2 = relay.Tuple([uop_12507,uop_12514,])
F = relay.Function([var_12506,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_12506,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

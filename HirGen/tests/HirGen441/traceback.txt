==========mod==========
#[version = "0.0.5"]
def @main(%var_14234: Tensor[(7, 16, 5), float32]) -> Tensor[(7, 16, 5), float32] {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(7, 16, 5), float32] */, dtype="float32") /* ty=Tensor[(7, 16, 5), float32] */;
  %1 = shape_of(%var_14234, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_14234, dtype="float32") /* ty=Tensor[(7, 16, 5), float32] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%2, %3) /* ty=Tensor[(7, 16, 5), float32] */
}

def @func_12449() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) {
  %4 = @func_9724() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %5 = @func_10650() /* ty=Tensor[(14, 6, 10), uint8] */;
  %6 = %4.1;
  (%5, %6)
}

def @func_7827(%var_7772: Tensor[(1664), float32], %var_7824: int64, %var_7825: Tensor[(28), int64]) -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(960), bool], Tensor[(14, 6, 10), float64], Tensor[(1664), uint64], Tensor[(14, 6, 10), float64], Tensor[(1728), float32], Tensor[(1728), float64], Tensor[(14, 6, 10), float32], Tensor[(3, 6, 4), float32], Tensor[(72), float32], Tensor[(14, 6, 10), uint8], int64, Tensor[(28), int64]) {
  %7 = @func_7177() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %8 = @func_1956() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
  %9 = cast(meta[relay.Constant][1] /* ty=Tensor[(1664), float32] */, dtype="float32") /* ty=Tensor[(1664), float32] */;
  %10 = cast(meta[relay.Constant][2] /* ty=Tensor[(960), bool] */, dtype="bool") /* ty=Tensor[(960), bool] */;
  %11 = reshape(%9, newshape=[16, 8, 13]) /* ty=Tensor[(16, 8, 13), float32] */;
  %12 = reshape(%10, newshape=[480, 2]) /* ty=Tensor[(480, 2), bool] */;
  %13 = @func_5264(%11, %12) /* ty=(Tensor[(16, 8, 13), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(480, 2), bool], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %14 = @func_3574() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %15 = cast(%var_7772, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
  %16 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(1664), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %17 = cast(meta[relay.Constant][1] /* ty=Tensor[(1664), float32] */, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
  %18 = dyn.reshape(%15, %16, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %19 = @func_7379() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
  %20 = cast(meta[relay.Constant][3] /* ty=Tensor[(1728), float64] */, dtype="float64") /* ty=Tensor[(1728), float64] */;
  %21 = reshape(%20, newshape=[1728]) /* ty=Tensor[(1728), float64] */;
  %22 = @func_6997(%21) /* ty=(Tensor[(1728), float32],) */;
  %23 = %13.5;
  %24 = cast(%23, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %25 = reshape(%24, newshape=[14, 6, 10]) /* ty=Tensor[(14, 6, 10), float64] */;
  %26 = @func_108(%25) /* ty=(Tensor[(14, 6, 10), float32],) */;
  %27 = cast(meta[relay.Constant][4] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %28 = reshape(%27, newshape=[3, 6, 4]) /* ty=Tensor[(3, 6, 4), float32] */;
  %29 = cast(%var_7824, dtype="int64") /* ty=int64 */;
  %30 = cast(%var_7825, dtype="int64") /* ty=Tensor[(28), int64] */;
  %31 = cast(%var_7825, dtype="float32") /* ty=Tensor[(28), float32] */;
  %32 = reshape(%29, newshape=[]) /* ty=int64 */;
  %33 = reshape(%30, newshape=[2, 1, 14]) /* ty=Tensor[(2, 1, 14), int64] */;
  %34 = reshape(%31, newshape=[2, 1, 14]) /* ty=Tensor[(2, 1, 14), float32] */;
  %35 = @func_6910(%32, %33, %34) /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(2, ?, 14), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(9, 11, 3), int16]) */;
  %36 = %7.0;
  %37 = %8.0;
  %38 = %14.3;
  %39 = bitwise_and(%17, %18) /* ty=Tensor[(1664), uint64] */;
  %40 = %19.1;
  %41 = %22.0;
  %42 = %26.0;
  %43 = @func_6326(%28) /* ty=Tensor[(3, 6, 4), float32] */;
  %44 = %35.1;
  (%36, %37, %23, meta[relay.Constant][2] /* ty=Tensor[(960), bool] */, %38, %39, %40, %41, meta[relay.Constant][3] /* ty=Tensor[(1728), float64] */, %42, %43, meta[relay.Constant][4] /* ty=Tensor[(72), float32] */, %44, %var_7824, %var_7825)
}

def @func_8378() -> (Tensor[(14, 6, 10), uint64], Tensor[(1728), uint64], Tensor[(1728), float64]) {
  %45 = @func_3384() /* ty=(Tensor[(14, 6, 10), uint64],) */;
  %46 = cast(meta[relay.Constant][5] /* ty=Tensor[(1728), float64] */, dtype="float64") /* ty=Tensor[(1728), float64] */;
  %47 = reshape(%46, newshape=[1728]) /* ty=Tensor[(1728), float64] */;
  %48 = @func_7129(%47) /* ty=(Tensor[(14, 6, 10), float64], Tensor[(9, 12, 16), float64], Tensor[(1728), uint64]) */;
  %49 = %45.0;
  %50 = %48.2;
  (%49, %50, meta[relay.Constant][5] /* ty=Tensor[(1728), float64] */)
}

def @func_82() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
  %51 = cast(meta[relay.Constant][6] /* ty=Tensor[(14, 6, 10), float64] */, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %52 = cast(meta[relay.Constant][6] /* ty=Tensor[(14, 6, 10), float64] */, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %53 = sqrt(%51) /* ty=Tensor[(14, 6, 10), float64] */;
  %54 = asin(%52) /* ty=Tensor[(14, 6, 10), float64] */;
  (%53, %54)
}

def @func_8587() -> (Tensor[(14, 6, 10), float64],) {
  %55 = @func_1701() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %56 = %55.0;
  (%56,)
}

def @func_2573() -> (Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64]) {
  %57 = @func_934() /* ty=(Tensor[(14, 6, 10), float32],) */;
  %58 = %57.0;
  %59 = @func_2067() /* ty=Tensor[(14, 6, 10), float64] */;
  (%58, %59)
}

def @func_2767() -> (Tensor[(14, 6, 10), float64],) {
  %60 = @func_578() /* ty=Tensor[(14, 6, 10), uint8] */;
  %61 = cast(%60, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %62 = sin(%61) /* ty=Tensor[(14, 6, 10), float64] */;
  (%62,)
}

def @func_8054() -> Tensor[(14, 6, 10), float32] {
  @func_1508() /* ty=Tensor[(14, 6, 10), float32] */
}

def @func_8711() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
  %63 = @func_1701() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %64 = %63.0;
  %65 = @func_2067() /* ty=Tensor[(14, 6, 10), float64] */;
  (%64, %65)
}

def @func_9311() -> Tensor[(14, 6, 10), float64] {
  %66 = @func_6650() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
  %66.1
}

def @func_3992() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) {
  %67 = @func_3423() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %68 = @func_616() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %69 = %67.0;
  %70 = %68.1;
  (%69, %70)
}

def @func_730() -> (Tensor[(14, 6, 10), bool], Tensor[(14, 6, 10), float64]) {
  %71 = @func_337() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %72 = %71.0;
  %73 = cast(meta[relay.Constant][7] /* ty=Tensor[(14, 6, 10), float64] */, dtype="bool") /* ty=Tensor[(14, 6, 10), bool] */;
  %74 = shape_of(%72, dtype="int32") /* ty=Tensor[(3), int32] */;
  %75 = cast(%72, dtype="bool") /* ty=Tensor[(14, 6, 10), bool] */;
  %76 = dyn.reshape(%73, %74, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %77 = @func_616() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %78 = less(%75, %76) /* ty=Tensor[(14, 6, 10), bool] */;
  %79 = %77.1;
  (%78, %79)
}

def @func_10865(%var_10857: Tensor[(195, 1), float32]) -> (Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(1, 12, 10), float64], Tensor[(195, 1), float32]) {
  %80 = @func_1141() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float32]) */;
  %81 = @func_9724() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %82 = cast(%var_10857, dtype="float32") /* ty=Tensor[(195, 1), float32] */;
  %83 = cast(%var_10857, dtype="float32") /* ty=Tensor[(195, 1), float32] */;
  %84 = reshape(%82, newshape=[3, 13, 5]) /* ty=Tensor[(3, 13, 5), float32] */;
  %85 = reshape(%83, newshape=[3, 13, 5]) /* ty=Tensor[(3, 13, 5), float32] */;
  %86 = @func_7312(%84, %85) /* ty=(Tensor[(3, 13, 5), float32], Tensor[(1, 12, 10), float64], Tensor[(120), float64], Tensor[(14, 6, 10), uint8]) */;
  %87 = %80.1;
  %88 = @func_8124() /* ty=Tensor[(14, 6, 10), float64] */;
  %89 = %81.1;
  %90 = @func_3225() /* ty=Tensor[(14, 6, 10), float64] */;
  %91 = %86.1;
  (%87, %88, %89, %90, %91, %var_10857)
}

def @func_9112() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
  %92 = @func_1810() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), bool], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
  %93 = @func_5085() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %94 = @func_616() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %95 = @func_6768() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %96 = %92.4;
  %97 = %93.0;
  %98 = %94.1;
  %99 = %95.0;
  (%96, %97, %98, %99)
}

def @func_12079() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
  %100 = @func_7379() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
  %101 = @func_9447() /* ty=(Tensor[(14, 6, 10), uint64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %102 = %100.1;
  %103 = %101.1;
  (%102, %103)
}

def @func_3473() -> (Tensor[(14, 6, 10), float64],) {
  %104 = @func_2067() /* ty=Tensor[(14, 6, 10), float64] */;
  (%104,)
}

def @func_1731() -> Tensor[(14, 6, 10), float32] {
  %105 = @func_1591() /* ty=(Tensor[(14, 6, 10), float32],) */;
  %105.0
}

def @func_12192(%var_12176: Tensor[(4, 9, 9), uint64]) -> (Tensor[(4, 9, 9), bool], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
  %106 = cast(%var_12176, dtype="bool") /* ty=Tensor[(4, 9, 9), bool] */;
  %107 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(4, 9, 9), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %108 = cast(meta[relay.Constant][8] /* ty=Tensor[(4, 9, 9), uint64] */, dtype="bool") /* ty=Tensor[(4, 9, 9), bool] */;
  %109 = dyn.reshape(%106, %107, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %110 = @func_12079() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %111 = greater(%108, %109) /* ty=Tensor[(4, 9, 9), bool] */;
  %112 = @func_6688() /* ty=Tensor[(14, 6, 10), float64] */;
  %113 = %110.1;
  (%111, %112, %113)
}

def @func_9400() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) {
  %114 = @func_7379() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
  %115 = @func_5011() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(384), int8], Tensor[(14, 6, 10), uint8]) */;
  %116 = %114.1;
  %117 = %115.2;
  %118 = @func_3225() /* ty=Tensor[(14, 6, 10), float64] */;
  (%116, %117, %118)
}

def @func_13923() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
  %119 = @func_8545() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(384), int8], Tensor[(840), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %120 = @func_2067() /* ty=Tensor[(14, 6, 10), float64] */;
  %121 = @func_3704() /* ty=Tensor[(14, 6, 10), uint8] */;
  %122 = %119.0;
  (%120, %121, %122)
}

def @func_6997(%var_6988: Tensor[(1728), float64]) -> (Tensor[(1728), float32],) {
  %123 = @func_4865() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(9, 12, 16), float64], Tensor[(1728), float64]) */;
  %124 = %123.2;
  %125 = cast(%var_6988, dtype="float32") /* ty=Tensor[(1728), float32] */;
  %126 = shape_of(%124, dtype="int32") /* ty=Tensor[(1), int32] */;
  %127 = cast(%124, dtype="float32") /* ty=Tensor[(1728), float32] */;
  %128 = dyn.reshape(%125, %126, newshape=[]) /* ty=Tensor[(?), float32] */;
  %129 = multiply(%127, %128) /* ty=Tensor[(1728), float32] */;
  (%129,)
}

def @func_2906() -> (Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float32]) {
  %130 = @func_689() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %131 = @func_1454() /* ty=Tensor[(14, 6, 10), float32] */;
  %132 = %130.0;
  (%131, %132)
}

def @func_1508() -> Tensor[(14, 6, 10), float32] {
  @func_1454() /* ty=Tensor[(14, 6, 10), float32] */
}

def @func_9126(%var_9117: Tensor[(7, 10, 4), float32]) -> Tensor[(7, 10, 4), float32] {
  %133 = cast(%var_9117, dtype="float32") /* ty=Tensor[(7, 10, 4), float32] */;
  atanh(%133) /* ty=Tensor[(7, 10, 4), float32] */
}

def @func_11958() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64]) {
  %134 = @func_5774() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %135 = @func_337() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %136 = %134.1;
  %137 = @func_8054() /* ty=Tensor[(14, 6, 10), float32] */;
  %138 = %135.0;
  (%136, %137, %138)
}

def @func_1895() -> (Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float32]) {
  %139 = @func_689() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %140 = %139.0;
  %141 = @func_1731() /* ty=Tensor[(14, 6, 10), float32] */;
  (%140, %141)
}

def @func_4638(%var_4593: Tensor[(360), bool]) -> (Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], bool, Tensor[(360), bool], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
  %142 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %143 = cast(%var_4593, dtype="bool") /* ty=Tensor[(360), bool] */;
  %144 = reshape(%142, newshape=[]) /* ty=bool */;
  %145 = reshape(%143, newshape=[15, 2, 12]) /* ty=Tensor[(15, 2, 12), bool] */;
  %146 = @func_1923(%144, %145) /* ty=(Tensor[(15, 2, 12), int8], Tensor[(14, 6, 10), uint8]) */;
  %147 = @func_4239() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), int8], Tensor[(14, 6, 10), uint8]) */;
  %148 = @func_1731() /* ty=Tensor[(14, 6, 10), float32] */;
  %149 = %146.1;
  %150 = @func_1508() /* ty=Tensor[(14, 6, 10), float32] */;
  %151 = %147.1;
  %152 = @func_4344() /* ty=Tensor[(14, 6, 10), uint8] */;
  %153 = @func_4527() /* ty=Tensor[(14, 6, 10), uint8] */;
  (%148, %149, True /* ty=bool */, %var_4593, %150, %151, %152, %153)
}

def @func_7583() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
  %154 = @func_5167() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %155 = @func_4954() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
  %156 = %154.0;
  %157 = %155.1;
  (%156, %157)
}

def @func_6092(%var_6082: Tensor[(15, 2, 3), float64]) -> (Tensor[(15, 2, 3), float64],) {
  %158 = cast(%var_6082, dtype="float64") /* ty=Tensor[(15, 2, 3), float64] */;
  %159 = sigmoid(%158) /* ty=Tensor[(15, 2, 3), float64] */;
  (%159,)
}

def @func_2327() -> (Tensor[(14, 6, 10), uint8],) {
  %160 = @func_920() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %161 = %160.0;
  (%161,)
}

def @func_11560() -> Tensor[(14, 6, 10), uint8] {
  @func_9940() /* ty=Tensor[(14, 6, 10), uint8] */
}

def @func_4954() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) {
  %162 = @func_1208() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %163 = @func_4239() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), int8], Tensor[(14, 6, 10), uint8]) */;
  %164 = @func_3598() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %165 = %162.0;
  %166 = %163.3;
  %167 = %164.0;
  (%165, %166, %167)
}

def @func_5316() -> Tensor[(14, 6, 10), float64] {
  %168 = @func_4121() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %168.0
}

def @func_689() -> (Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
  %169 = @func_616() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %170 = %169.1;
  %171 = cast(%170, dtype="float32") /* ty=Tensor[(14, 6, 10), float32] */;
  %172 = @func_337() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %173 = @func_82() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %174 = atanh(%171) /* ty=Tensor[(14, 6, 10), float32] */;
  %175 = %172.1;
  %176 = %173.0;
  %177 = @func_578() /* ty=Tensor[(14, 6, 10), uint8] */;
  (%174, %175, %176, %177)
}

def @func_7919() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], int32, Tensor[(14, 6, 10), float64]) {
  %178 = @func_4865() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(9, 12, 16), float64], Tensor[(1728), float64]) */;
  %179 = cast(3 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %180 = reshape(%179, newshape=[]) /* ty=int32 */;
  %181 = @func_1438(%180) /* ty=(Tensor[(11, 11, 8), int32], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float32]) */;
  %182 = @func_4811() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(360), bool], Tensor[(360), bool], Tensor[(14, 6, 10), float64]) */;
  %183 = %178.0;
  %184 = %181.1;
  %185 = %182.5;
  (%183, %184, 3 /* ty=int32 */, %185)
}

def @func_3289() -> (Tensor[(14, 6, 10), float64], Tensor[(840), float64], Tensor[(14, 6, 10), float64]) {
  %186 = @func_2731() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %187 = %186.0;
  %188 = cast(%187, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %189 = reshape(%188, newshape=[840]) /* ty=Tensor[(840), float64] */;
  %190 = @func_3011(%189) /* ty=(Tensor[(384), int8], Tensor[(14, 6, 10), float64], Tensor[(840), float64], Tensor[(14, 16, 13), int32], Tensor[(4, 728), int32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %191 = @func_2731() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %192 = %190.2;
  %193 = %191.1;
  (%187, %192, %193)
}

def @func_2419() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
  %194 = @func_730() /* ty=(Tensor[(14, 6, 10), bool], Tensor[(14, 6, 10), float64]) */;
  %195 = %194.1;
  %196 = @func_832() /* ty=Tensor[(14, 6, 10), uint8] */;
  (%195, %196)
}

def @func_5130() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
  %197 = @func_2181() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %198 = @func_3992() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
  %199 = %197.0;
  %200 = %198.0;
  (%199, %200)
}

def @func_4045() -> (Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64]) {
  %201 = @func_2906() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float32]) */;
  %202 = @func_2767() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %203 = %201.1;
  %204 = %202.0;
  (%203, %204)
}

def @func_13561() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
  %205 = @func_11426() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
  %206 = %205.0;
  %207 = @func_11101() /* ty=Tensor[(14, 6, 10), uint8] */;
  (%206, %207)
}

def @func_5825() -> (Tensor[(14, 6, 10), float64],) {
  %208 = @func_337() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %209 = %208.0;
  (%209,)
}

def @func_3423() -> (Tensor[(14, 6, 10), uint8],) {
  %210 = @func_2419() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %211 = %210.1;
  (%211,)
}

def @func_5774() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
  %212 = @func_3313() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %213 = %212.0;
  %214 = @func_578() /* ty=Tensor[(14, 6, 10), uint8] */;
  (%213, %214)
}

def @func_13308(%var_13297: Tensor[(7, 16, 7), float32], %var_13298: Tensor[(7, 16, 7), float32]) -> (Tensor[(7, 16, 7), bool], Tensor[(14, 6, 10), float32]) {
  %215 = cast(%var_13298, dtype="bool") /* ty=Tensor[(7, 16, 7), bool] */;
  %216 = shape_of(%var_13297, dtype="int32") /* ty=Tensor[(3), int32] */;
  %217 = cast(%var_13297, dtype="bool") /* ty=Tensor[(7, 16, 7), bool] */;
  %218 = dyn.reshape(%215, %216, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %219 = equal(%217, %218) /* ty=Tensor[(7, 16, 7), bool] */;
  %220 = @func_8875() /* ty=Tensor[(14, 6, 10), float32] */;
  (%219, %220)
}

def @func_14108() -> Tensor[(14, 6, 10), uint8] {
  %221 = @func_3423() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %221.0
}

def @func_11054(%var_11044: Tensor[(2, 480), bool]) -> (Tensor[(14, 6, 10), uint8], Tensor[(960), bool], Tensor[(2, 480), bool]) {
  %222 = @func_10773() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
  %223 = cast(%var_11044, dtype="bool") /* ty=Tensor[(2, 480), bool] */;
  %224 = reshape(%223, newshape=[960]) /* ty=Tensor[(960), bool] */;
  %225 = @func_3863(%224) /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(960), bool], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(16, 10, 6), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
  %226 = %222.1;
  %227 = %225.3;
  (%226, %227, %var_11044)
}

def @func_4344() -> Tensor[(14, 6, 10), uint8] {
  %228 = @func_1956() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
  %228.0
}

def @func_4339() -> (Tensor[(14, 6, 10), uint8],) {
  %229 = @func_2327() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %230 = %229.0;
  (%230,)
}

def @func_351() -> (Tensor[(14, 6, 10), uint8],) {
  %231 = @func_337() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %232 = %231.1;
  (%232,)
}

def @func_4865() -> (Tensor[(14, 6, 10), float64], Tensor[(9, 12, 16), float64], Tensor[(1728), float64]) {
  %233 = @func_3992() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
  %234 = cast(meta[relay.Constant][9] /* ty=Tensor[(1728), float64] */, dtype="float64") /* ty=Tensor[(1728), float64] */;
  %235 = reshape(%234, newshape=[9, 12, 16]) /* ty=Tensor[(9, 12, 16), float64] */;
  %236 = %233.1;
  %237 = @func_2583(%235) /* ty=Tensor[(9, 12, 16), float64] */;
  (%236, %237, meta[relay.Constant][9] /* ty=Tensor[(1728), float64] */)
}

def @func_6910(%var_6806: int64, %var_6807: Tensor[(2, 1, 14), int64], %var_6861: Tensor[(2, 1, 14), float32]) -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(2, ?, 14), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(9, 11, 3), int16]) {
  %238 = @func_2038() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8]) */;
  %239 = @func_5648() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(9, 12, 16), float64], Tensor[(14, 6, 10), uint8]) */;
  %240 = cast(%var_6806, dtype="int64") /* ty=int64 */;
  %241 = cast(%var_6807, dtype="int64") /* ty=Tensor[(2, 1, 14), int64] */;
  %242 = multiply(%240, %241) /* ty=Tensor[(2, 1, 14), int64] */;
  %243 = cast(%242, dtype="float32") /* ty=Tensor[(2, 1, 14), float32] */;
  %244 = tan(%243) /* ty=Tensor[(2, 1, 14), float32] */;
  %245 = cast(%var_6861, dtype="uint16") /* ty=Tensor[(2, 1, 14), uint16] */;
  %246 = shape_of(%244, dtype="int32") /* ty=Tensor[(3), int32] */;
  %247 = cast(%244, dtype="uint16") /* ty=Tensor[(2, 1, 14), uint16] */;
  %248 = dyn.reshape(%245, %246, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %249 = bitwise_xor(%247, %248) /* ty=Tensor[(2, ?, 14), uint16] */;
  %250 = cast(%249, dtype="float64") /* ty=Tensor[(2, ?, 14), float64] */;
  %251 = %238.1;
  %252 = cast(%251, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %253 = reshape(%252, newshape=[840]) /* ty=Tensor[(840), float64] */;
  %254 = @func_3011(%253) /* ty=(Tensor[(384), int8], Tensor[(14, 6, 10), float64], Tensor[(840), float64], Tensor[(14, 16, 13), int32], Tensor[(4, 728), int32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %255 = @func_4045() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64]) */;
  %256 = cast(%var_6806, dtype="int16") /* ty=int16 */;
  %257 = reshape(%256, newshape=[]) /* ty=int16 */;
  %258 = %239.6;
  %259 = erf(%250) /* ty=Tensor[(2, ?, 14), float64] */;
  %260 = %254.6;
  %261 = %255.1;
  %262 = @func_5434(%257) /* ty=Tensor[(9, 11, 3), int16] */;
  (%251, %258, %259, %260, %261, %262)
}

def @func_8842() -> Tensor[(14, 6, 10), float64] {
  %263 = @func_2767() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %263.0
}

def @func_7379() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) {
  %264 = @func_5835() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %265 = @func_4045() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64]) */;
  %266 = %264.0;
  %267 = %265.1;
  (%266, %267)
}

def @func_9724() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
  %268 = @func_8587() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %269 = @func_9400() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
  %270 = %268.0;
  %271 = %269.2;
  (%270, %271)
}

def @func_3011(%var_2956: Tensor[(840), float64]) -> (Tensor[(384), int8], Tensor[(14, 6, 10), float64], Tensor[(840), float64], Tensor[(14, 16, 13), int32], Tensor[(4, 728), int32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
  %272 = @func_1354() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(384), int8]) */;
  %273 = cast(%var_2956, dtype="float64") /* ty=Tensor[(840), float64] */;
  %274 = reshape(%273, newshape=[14, 6, 10]) /* ty=Tensor[(14, 6, 10), float64] */;
  %275 = @func_293(%274) /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint16], Tensor[(14, 6, 10), float64]) */;
  %276 = cast(meta[relay.Constant][10] /* ty=Tensor[(4, 728), int32] */, dtype="int32") /* ty=Tensor[(4, 728), int32] */;
  %277 = reshape(%276, newshape=[2912]) /* ty=Tensor[(2912), int32] */;
  %278 = @func_2257(%277) /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 16, 13), int32], Tensor[(2912), int32], Tensor[(14, 6, 10), float32]) */;
  %279 = @func_689() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %280 = %272.2;
  %281 = %275.1;
  %282 = %278.1;
  %283 = %279.3;
  %284 = @func_2067() /* ty=Tensor[(14, 6, 10), float64] */;
  %285 = @func_1621() /* ty=Tensor[(14, 6, 10), uint8] */;
  (%280, %281, %var_2956, %282, meta[relay.Constant][10] /* ty=Tensor[(4, 728), int32] */, %283, %284, %285)
}

def @func_2038() -> (Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8]) {
  %286 = @func_920() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %287 = @func_1454() /* ty=Tensor[(14, 6, 10), float32] */;
  %288 = %286.0;
  (%287, %288)
}

def @func_3210() -> Tensor[(14, 6, 10), uint64] {
  %289 = @func_2512() /* ty=Tensor[(14, 6, 10), float64] */;
  %290 = @func_730() /* ty=(Tensor[(14, 6, 10), bool], Tensor[(14, 6, 10), float64]) */;
  %291 = %290.0;
  %292 = cast(%291, dtype="uint64") /* ty=Tensor[(14, 6, 10), uint64] */;
  %293 = shape_of(%289, dtype="int32") /* ty=Tensor[(3), int32] */;
  %294 = cast(%289, dtype="uint64") /* ty=Tensor[(14, 6, 10), uint64] */;
  %295 = dyn.reshape(%292, %293, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  right_shift(%294, %295) /* ty=Tensor[(14, 6, 10), uint64] */
}

def @func_2181() -> (Tensor[(14, 6, 10), uint8],) {
  %296 = @func_1810() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), bool], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
  %297 = %296.4;
  (%297,)
}

def @func_4556() -> (Tensor[(384), int8],) {
  %298 = @func_3656() /* ty=(Tensor[(384), int8],) */;
  %299 = %298.0;
  (%299,)
}

def @func_7630(%var_7599: Tensor[(14, 10, 16), float64], %var_7600: Tensor[(14, 10, 16), float64], %var_7605: Tensor[(14, 10, 16), float64]) -> (Tensor[(14, 10, 16), bool], Tensor[(14, 10, 16), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 10, 16), float64], Tensor[(14, 6, 10), float64]) {
  %300 = cast(%var_7600, dtype="float64") /* ty=Tensor[(14, 10, 16), float64] */;
  %301 = shape_of(%var_7599, dtype="int32") /* ty=Tensor[(3), int32] */;
  %302 = cast(%var_7599, dtype="float64") /* ty=Tensor[(14, 10, 16), float64] */;
  %303 = dyn.reshape(%300, %301, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %304 = divide(%302, %303) /* ty=Tensor[(14, 10, 16), float64] */;
  %305 = cast(%var_7605, dtype="bool") /* ty=Tensor[(14, 10, 16), bool] */;
  %306 = shape_of(%304, dtype="int32") /* ty=Tensor[(3), int32] */;
  %307 = cast(%304, dtype="bool") /* ty=Tensor[(14, 10, 16), bool] */;
  %308 = dyn.reshape(%305, %306, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %309 = cast(%var_7599, dtype="float64") /* ty=Tensor[(14, 10, 16), float64] */;
  %310 = @func_2906() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float32]) */;
  %311 = cast(%var_7599, dtype="float64") /* ty=Tensor[(14, 10, 16), float64] */;
  %312 = @func_337() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %313 = greater_equal(%307, %308) /* ty=Tensor[(14, 10, 16), bool] */;
  %314 = tan(%309) /* ty=Tensor[(14, 10, 16), float64] */;
  %315 = %310.1;
  %316 = asinh(%311) /* ty=Tensor[(14, 10, 16), float64] */;
  %317 = %312.0;
  (%313, %314, %315, %316, %317)
}

def @func_12787() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
  %318 = @func_337() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %319 = @func_4239() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), int8], Tensor[(14, 6, 10), uint8]) */;
  %320 = %318.1;
  %321 = %319.1;
  (%320, %321)
}

def @func_337() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
  %322 = @func_82() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %323 = %322.0;
  %324 = cast(%323, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %325 = reshape(%324, newshape=[14, 6, 10]) /* ty=Tensor[(14, 6, 10), float64] */;
  %326 = @func_293(%325) /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint16], Tensor[(14, 6, 10), float64]) */;
  %327 = %326.0;
  (%323, %327)
}

def @func_11101() -> Tensor[(14, 6, 10), uint8] {
  %328 = @func_5835() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %328.0
}

def @func_11225() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32], Tensor[(384), int8]) {
  %329 = @func_10773() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
  %330 = %329.1;
  %331 = cast(%330, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %332 = reshape(%331, newshape=[14, 6, 10]) /* ty=Tensor[(14, 6, 10), float64] */;
  %333 = @func_108(%332) /* ty=(Tensor[(14, 6, 10), float32],) */;
  %334 = %333.0;
  %335 = @func_6122() /* ty=Tensor[(384), int8] */;
  (%330, %334, %335)
}

def @func_2257(%var_2250: Tensor[(2912), int32]) -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 16, 13), int32], Tensor[(2912), int32], Tensor[(14, 6, 10), float32]) {
  %336 = @func_1956() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
  %337 = cast(%var_2250, dtype="int32") /* ty=Tensor[(2912), int32] */;
  %338 = reshape(%337, newshape=[14, 16, 13]) /* ty=Tensor[(14, 16, 13), int32] */;
  %339 = %336.0;
  %340 = @func_1113(%338) /* ty=Tensor[(14, 16, 13), int32] */;
  %341 = @func_1508() /* ty=Tensor[(14, 6, 10), float32] */;
  (%339, %340, %var_2250, %341)
}

def @func_2512() -> Tensor[(14, 6, 10), float64] {
  %342 = @func_1591() /* ty=(Tensor[(14, 6, 10), float32],) */;
  %343 = %342.0;
  %344 = cast(meta[relay.Constant][11] /* ty=Tensor[(14, 6, 10), float32] */, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %345 = shape_of(%343, dtype="int32") /* ty=Tensor[(3), int32] */;
  %346 = cast(%343, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %347 = dyn.reshape(%344, %345, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%346, %347) /* ty=Tensor[(14, 6, 10), float64] */
}

def @func_1320() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) {
  %348 = @func_616() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %349 = @func_689() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %350 = @func_689() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %351 = %348.0;
  %352 = %349.3;
  %353 = %350.2;
  (%351, %352, %353)
}

def @func_3452() -> Tensor[(14, 6, 10), float64] {
  %354 = @func_1701() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %354.0
}

def @func_4537() -> (Tensor[(14, 6, 10), float64],) {
  %355 = @func_3313() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %356 = %355.2;
  (%356,)
}

def @func_3313() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
  %357 = @func_2745() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %358 = %357.0;
  %359 = cast(%358, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %360 = reshape(%359, newshape=[840]) /* ty=Tensor[(840), float64] */;
  %361 = @func_3011(%360) /* ty=(Tensor[(384), int8], Tensor[(14, 6, 10), float64], Tensor[(840), float64], Tensor[(14, 16, 13), int32], Tensor[(4, 728), int32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %362 = cast(%358, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %363 = reshape(%362, newshape=[840]) /* ty=Tensor[(840), float64] */;
  %364 = @func_3011(%363) /* ty=(Tensor[(384), int8], Tensor[(14, 6, 10), float64], Tensor[(840), float64], Tensor[(14, 16, 13), int32], Tensor[(4, 728), int32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %365 = %361.1;
  %366 = %364.1;
  (%358, %365, %366)
}

def @func_6477() -> Tensor[(14, 6, 10), float64] {
  %367 = @func_689() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %367.2
}

def @func_9447() -> (Tensor[(14, 6, 10), uint64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
  %368 = @func_8378() /* ty=(Tensor[(14, 6, 10), uint64], Tensor[(1728), uint64], Tensor[(1728), float64]) */;
  %369 = %368.0;
  %370 = cast(%369, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %371 = reshape(%370, newshape=[14, 6, 10]) /* ty=Tensor[(14, 6, 10), float64] */;
  %372 = @func_293(%371) /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint16], Tensor[(14, 6, 10), float64]) */;
  %373 = @func_689() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %374 = %372.1;
  %375 = %373.1;
  (%369, %374, %375)
}

def @func_1454() -> Tensor[(14, 6, 10), float32] {
  %376 = @func_1093() /* ty=(Tensor[(14, 6, 10), float32],) */;
  %377 = %376.0;
  %378 = cast(%377, dtype="float32") /* ty=Tensor[(14, 6, 10), float32] */;
  exp(%378) /* ty=Tensor[(14, 6, 10), float32] */
}

def @func_7177() -> (Tensor[(14, 6, 10), float64],) {
  %379 = @func_2419() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %380 = %379.0;
  (%380,)
}

def @func_8284(%var_8265: Tensor[(14, 11, 6), uint8], %var_8266: Tensor[(14, 11, 6), uint8]) -> (Tensor[(14, 11, 6), bool], Tensor[(14, 11, 6), uint64], Tensor[(14, 11, 6), float32], Tensor[(384), int8]) {
  %381 = cast(%var_8266, dtype="bool") /* ty=Tensor[(14, 11, 6), bool] */;
  %382 = shape_of(%var_8265, dtype="int32") /* ty=Tensor[(3), int32] */;
  %383 = cast(%var_8265, dtype="bool") /* ty=Tensor[(14, 11, 6), bool] */;
  %384 = dyn.reshape(%381, %382, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %385 = cast(%var_8265, dtype="float32") /* ty=Tensor[(14, 11, 6), float32] */;
  %386 = log(%385) /* ty=Tensor[(14, 11, 6), float32] */;
  %387 = cast(%var_8266, dtype="uint64") /* ty=Tensor[(14, 11, 6), uint64] */;
  %388 = shape_of(%386, dtype="int32") /* ty=Tensor[(3), int32] */;
  %389 = cast(%386, dtype="uint64") /* ty=Tensor[(14, 11, 6), uint64] */;
  %390 = dyn.reshape(%387, %388, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %391 = cast(%386, dtype="float32") /* ty=Tensor[(14, 11, 6), float32] */;
  %392 = @func_3656() /* ty=(Tensor[(384), int8],) */;
  %393 = less_equal(%383, %384) /* ty=Tensor[(14, 11, 6), bool] */;
  %394 = bitwise_xor(%389, %390) /* ty=Tensor[(14, 11, 6), uint64] */;
  %395 = cosh(%391) /* ty=Tensor[(14, 11, 6), float32] */;
  %396 = %392.0;
  (%393, %394, %395, %396)
}

def @func_11662() -> Tensor[(14, 6, 10), uint8] {
  @func_1621() /* ty=Tensor[(14, 6, 10), uint8] */
}

def @func_11825(%var_11750: Tensor[(36, 2), float32], %var_11796: int32) -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(3, 6, 4), float64], Tensor[(11, 11, 8), int32], int32) {
  %397 = @func_2181() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %398 = cast(%var_11750, dtype="float32") /* ty=Tensor[(36, 2), float32] */;
  %399 = reshape(%398, newshape=[3, 6, 4]) /* ty=Tensor[(3, 6, 4), float32] */;
  %400 = @func_6326(%399) /* ty=Tensor[(3, 6, 4), float32] */;
  %401 = cast(%var_11750, dtype="float64") /* ty=Tensor[(36, 2), float64] */;
  %402 = shape_of(%400, dtype="int32") /* ty=Tensor[(3), int32] */;
  %403 = cast(%400, dtype="float64") /* ty=Tensor[(3, 6, 4), float64] */;
  %404 = dyn.reshape(%401, %402, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %405 = cast(%var_11796, dtype="int32") /* ty=int32 */;
  %406 = reshape(%405, newshape=[]) /* ty=int32 */;
  %407 = @func_1438(%406) /* ty=(Tensor[(11, 11, 8), int32], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float32]) */;
  %408 = @func_11560() /* ty=Tensor[(14, 6, 10), uint8] */;
  %409 = %397.0;
  %410 = mod(%403, %404) /* ty=Tensor[(3, 6, 4), float64] */;
  %411 = %407.0;
  (%408, %409, %410, %411, %var_11796)
}

def @func_9183() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
  %412 = @func_4759() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %413 = @func_9033() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(3, 6, 4), float32], Tensor[(72), float32], Tensor[(14, 6, 10), float64]) */;
  %414 = @func_8711() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %415 = @func_3313() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %416 = %412.1;
  %417 = %413.3;
  %418 = %414.0;
  %419 = %415.2;
  (%416, %417, %418, %419)
}

def @func_10582() -> Tensor[(14, 6, 10), uint8] {
  %420 = @func_8545() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(384), int8], Tensor[(840), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %420.4
}

def @func_12612() -> Tensor[(9, 12, 16), float64] {
  %421 = @func_4865() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(9, 12, 16), float64], Tensor[(1728), float64]) */;
  %421.1
}

def @func_9033() -> (Tensor[(14, 6, 10), float64], Tensor[(3, 6, 4), float32], Tensor[(72), float32], Tensor[(14, 6, 10), float64]) {
  %422 = @func_2767() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %423 = cast(meta[relay.Constant][12] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %424 = reshape(%423, newshape=[3, 6, 4]) /* ty=Tensor[(3, 6, 4), float32] */;
  %425 = @func_8711() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %426 = %422.0;
  %427 = @func_6326(%424) /* ty=Tensor[(3, 6, 4), float32] */;
  %428 = %425.1;
  (%426, %427, meta[relay.Constant][12] /* ty=Tensor[(72), float32] */, %428)
}

def @func_5264(%var_5210: Tensor[(16, 8, 13), float32], %var_5243: Tensor[(480, 2), bool]) -> (Tensor[(16, 8, 13), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(480, 2), bool], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
  %429 = cast(%var_5210, dtype="float32") /* ty=Tensor[(16, 8, 13), float32] */;
  %430 = @func_2745() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %431 = cast(%var_5243, dtype="bool") /* ty=Tensor[(480, 2), bool] */;
  %432 = reshape(%431, newshape=[16, 10, 6]) /* ty=Tensor[(16, 10, 6), bool] */;
  %433 = @func_1050(%432) /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(16, 10, 6), float32]) */;
  %434 = @func_3473() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %435 = @func_5085() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %436 = atanh(%429) /* ty=Tensor[(16, 8, 13), float32] */;
  %437 = %430.0;
  %438 = %433.0;
  %439 = %434.0;
  %440 = %435.0;
  (%436, %437, %438, %var_5243, %439, %440)
}

def @func_12674(%var_12630: Tensor[(3, 8, 8), int8]) -> (Tensor[(3, 8, 8), int8], Tensor[(14, 6, 10), uint64], Tensor[(3, 8, 8), float32], Tensor[(14, 6, 10), float64]) {
  %441 = cast(meta[relay.Constant][13] /* ty=Tensor[(3, 8, 8), int8] */, dtype="int8") /* ty=Tensor[(3, 8, 8), int8] */;
  %442 = shape_of(%var_12630, dtype="int32") /* ty=Tensor[(3), int32] */;
  %443 = cast(%var_12630, dtype="int8") /* ty=Tensor[(3, 8, 8), int8] */;
  %444 = dyn.reshape(%441, %442, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %445 = @func_3384() /* ty=(Tensor[(14, 6, 10), uint64],) */;
  %446 = cast(meta[relay.Constant][13] /* ty=Tensor[(3, 8, 8), int8] */, dtype="float32") /* ty=Tensor[(3, 8, 8), float32] */;
  %447 = @func_11523() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %448 = left_shift(%443, %444) /* ty=Tensor[(3, 8, 8), int8] */;
  %449 = %445.0;
  %450 = asin(%446) /* ty=Tensor[(3, 8, 8), float32] */;
  %451 = %447.0;
  (%448, %449, %450, %451)
}

def @func_5835() -> (Tensor[(14, 6, 10), uint8],) {
  %452 = @func_5156() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
  %453 = %452.1;
  (%453,)
}

def @func_6298() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), bool]) {
  %454 = @func_3313() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %455 = @func_2573() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64]) */;
  %456 = @func_4811() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(360), bool], Tensor[(360), bool], Tensor[(14, 6, 10), float64]) */;
  %457 = @func_1956() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
  %458 = %457.1;
  %459 = @func_934() /* ty=(Tensor[(14, 6, 10), float32],) */;
  %460 = %459.0;
  %461 = cast(%460, dtype="bool") /* ty=Tensor[(14, 6, 10), bool] */;
  %462 = shape_of(%458, dtype="int32") /* ty=Tensor[(3), int32] */;
  %463 = cast(%458, dtype="bool") /* ty=Tensor[(14, 6, 10), bool] */;
  %464 = dyn.reshape(%461, %462, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %465 = %454.1;
  %466 = %455.0;
  %467 = %456.0;
  %468 = not_equal(%463, %464) /* ty=Tensor[(14, 6, 10), bool] */;
  (%465, %466, %467, %468)
}

def @func_1354() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(384), int8]) {
  %469 = cast(meta[relay.Constant][14] /* ty=Tensor[(384), int8] */, dtype="int8") /* ty=Tensor[(384), int8] */;
  %470 = reshape(%469, newshape=[4, 8, 12]) /* ty=Tensor[(4, 8, 12), int8] */;
  %471 = @func_450(%470) /* ty=(Tensor[(4, 8, 12), bool], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8]) */;
  %472 = @func_832() /* ty=Tensor[(14, 6, 10), uint8] */;
  %473 = %471.3;
  (%472, %473, meta[relay.Constant][14] /* ty=Tensor[(384), int8] */)
}

def @func_5011() -> (Tensor[(14, 6, 10), uint8], Tensor[(384), int8], Tensor[(14, 6, 10), uint8]) {
  %474 = @func_4339() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %475 = @func_1956() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
  %476 = %474.0;
  %477 = @func_4424() /* ty=Tensor[(384), int8] */;
  %478 = %475.0;
  (%476, %477, %478)
}

def @func_10900() -> (Tensor[(2, 11, 2), float32],) {
  %479 = cast(meta[relay.Constant][15] /* ty=Tensor[(2, 11, 2), float32] */, dtype="float32") /* ty=Tensor[(2, 11, 2), float32] */;
  %480 = log10(%479) /* ty=Tensor[(2, 11, 2), float32] */;
  (%480,)
}

def @func_13932() -> (Tensor[(14, 6, 10), float32],) {
  %481 = @func_1093() /* ty=(Tensor[(14, 6, 10), float32],) */;
  %482 = %481.0;
  (%482,)
}

def @func_11426() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
  %483 = @func_4811() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(360), bool], Tensor[(360), bool], Tensor[(14, 6, 10), float64]) */;
  %484 = @func_8194() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %485 = @func_6477() /* ty=Tensor[(14, 6, 10), float64] */;
  %486 = %483.1;
  %487 = %484.0;
  (%485, %486, %487)
}

def @func_11441() -> (Tensor[(14, 6, 10), uint8],) {
  %488 = @func_2181() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %489 = %488.0;
  (%489,)
}

def @func_10937() -> Tensor[(14, 6, 10), uint8] {
  %490 = @func_5774() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %490.1
}

def @func_8227() -> (Tensor[(14, 6, 10), float64], Tensor[(4, 728), int32]) {
  %491 = @func_5648() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(9, 12, 16), float64], Tensor[(14, 6, 10), uint8]) */;
  %492 = %491.4;
  %493 = cast(%492, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %494 = reshape(%493, newshape=[840]) /* ty=Tensor[(840), float64] */;
  %495 = @func_3011(%494) /* ty=(Tensor[(384), int8], Tensor[(14, 6, 10), float64], Tensor[(840), float64], Tensor[(14, 16, 13), int32], Tensor[(4, 728), int32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %496 = %495.4;
  (%492, %496)
}

def @func_8124() -> Tensor[(14, 6, 10), float64] {
  %497 = @func_3574() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %497.0
}

def @func_1956() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
  %498 = @func_1854() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %499 = %498.1;
  %500 = @func_578() /* ty=Tensor[(14, 6, 10), uint8] */;
  (%499, %500)
}

def @func_3598() -> (Tensor[(14, 6, 10), float64],) {
  %501 = @func_3169() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %502 = %501.1;
  (%502,)
}

def @func_12364(%var_12272: Tensor[(11, 8, 15), float64]) -> (Tensor[(11, 8, 15), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32], Tensor[(384), int8], Tensor[(14, 6, 10), float64], Tensor[(11, 8, 15), float64]) {
  %503 = cast(%var_12272, dtype="float64") /* ty=Tensor[(11, 8, 15), float64] */;
  %504 = @func_1591() /* ty=(Tensor[(14, 6, 10), float32],) */;
  %505 = @func_10207() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
  %506 = cast(meta[relay.Constant][16] /* ty=Tensor[(384), int8] */, dtype="int8") /* ty=Tensor[(384), int8] */;
  %507 = reshape(%506, newshape=[4, 8, 12]) /* ty=Tensor[(4, 8, 12), int8] */;
  %508 = @func_450(%507) /* ty=(Tensor[(4, 8, 12), bool], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8]) */;
  %509 = cast(%var_12272, dtype="float32") /* ty=Tensor[(11, 8, 15), float32] */;
  %510 = sigmoid(%509) /* ty=Tensor[(11, 8, 15), float32] */;
  %511 = cast(%510, dtype="float64") /* ty=Tensor[(11, 8, 15), float64] */;
  %512 = log2(%503) /* ty=Tensor[(11, 8, 15), float64] */;
  %513 = %504.0;
  %514 = %505.0;
  %515 = %508.2;
  %516 = @func_9311() /* ty=Tensor[(14, 6, 10), float64] */;
  %517 = exp(%511) /* ty=Tensor[(11, 8, 15), float64] */;
  (%512, %513, %514, %515, meta[relay.Constant][16] /* ty=Tensor[(384), int8] */, %516, %517)
}

def @func_1591() -> (Tensor[(14, 6, 10), float32],) {
  %518 = @func_897() /* ty=(Tensor[(14, 6, 10), float32],) */;
  %519 = %518.0;
  (%519,)
}

def @func_12111(%var_12085: Tensor[(11, 9, 4), int8], %var_12086: Tensor[(11, 9, 4), int8]) -> (Tensor[(11, 9, 4), bool], Tensor[(11, 9, 4), float64]) {
  %520 = cast(%var_12086, dtype="bool") /* ty=Tensor[(11, 9, 4), bool] */;
  %521 = shape_of(%var_12085, dtype="int32") /* ty=Tensor[(3), int32] */;
  %522 = cast(%var_12085, dtype="bool") /* ty=Tensor[(11, 9, 4), bool] */;
  %523 = dyn.reshape(%520, %521, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %524 = cast(%var_12086, dtype="float64") /* ty=Tensor[(11, 9, 4), float64] */;
  %525 = not_equal(%522, %523) /* ty=Tensor[(11, 9, 4), bool] */;
  %526 = sinh(%524) /* ty=Tensor[(11, 9, 4), float64] */;
  (%525, %526)
}

def @func_3863(%var_3812: Tensor[(960), bool]) -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(960), bool], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(16, 10, 6), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) {
  %527 = @func_2767() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %528 = @func_2731() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %529 = %527.0;
  %530 = cast(%529, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %531 = reshape(%530, newshape=[14, 6, 10]) /* ty=Tensor[(14, 6, 10), float64] */;
  %532 = @func_293(%531) /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint16], Tensor[(14, 6, 10), float64]) */;
  %533 = @func_1141() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float32]) */;
  %534 = cast(%var_3812, dtype="bool") /* ty=Tensor[(960), bool] */;
  %535 = reshape(%534, newshape=[16, 10, 6]) /* ty=Tensor[(16, 10, 6), bool] */;
  %536 = @func_1050(%535) /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(16, 10, 6), float32]) */;
  %537 = cast(%var_3812, dtype="bool") /* ty=Tensor[(960), bool] */;
  %538 = reshape(%537, newshape=[16, 10, 6]) /* ty=Tensor[(16, 10, 6), bool] */;
  %539 = @func_1050(%538) /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(16, 10, 6), float32]) */;
  %540 = %539.1;
  %541 = cast(%540, dtype="float64") /* ty=Tensor[(16, 10, 6), float64] */;
  %542 = @func_1968() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %543 = @func_897() /* ty=(Tensor[(14, 6, 10), float32],) */;
  %544 = %543.0;
  %545 = cast(%544, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %546 = %528.1;
  %547 = @func_1508() /* ty=Tensor[(14, 6, 10), float32] */;
  %548 = %532.3;
  %549 = %533.2;
  %550 = %536.0;
  %551 = asin(%541) /* ty=Tensor[(16, 10, 6), float64] */;
  %552 = %542.0;
  %553 = cosh(%545) /* ty=Tensor[(14, 6, 10), float64] */;
  (%529, %546, %547, %var_3812, %548, %549, %550, %551, %552, %553)
}

def @func_12701() -> (Tensor[(14, 6, 10), uint64], Tensor[(14, 6, 10), uint8]) {
  %554 = @func_9447() /* ty=(Tensor[(14, 6, 10), uint64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %555 = @func_2327() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %556 = %554.0;
  %557 = %555.0;
  (%556, %557)
}

def @func_4759() -> (Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
  %558 = @func_3970() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32]) */;
  %559 = @func_1854() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %560 = %558.1;
  %561 = %559.0;
  %562 = @func_2512() /* ty=Tensor[(14, 6, 10), float64] */;
  (%560, %561, %562)
}

def @func_1262(%var_1251: Tensor[(14, 6, 10), float32]) -> (Tensor[(14, 6, 10), int8],) {
  %563 = @func_997() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32]) */;
  %564 = %563.1;
  %565 = cast(%var_1251, dtype="int8") /* ty=Tensor[(14, 6, 10), int8] */;
  %566 = shape_of(%564, dtype="int32") /* ty=Tensor[(3), int32] */;
  %567 = cast(%564, dtype="int8") /* ty=Tensor[(14, 6, 10), int8] */;
  %568 = dyn.reshape(%565, %566, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %569 = maximum(%567, %568) /* ty=Tensor[(14, 6, 10), int8] */;
  (%569,)
}

def @func_13499() -> Tensor[(14, 6, 10), float64] {
  %570 = @func_12079() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %570.1
}

def @func_5434(%var_5424: int16) -> Tensor[(9, 11, 3), int16] {
  %571 = cast(%var_5424, dtype="int16") /* ty=int16 */;
  %572 = cast(meta[relay.Constant][17] /* ty=Tensor[(9, 11, 3), int16] */, dtype="int16") /* ty=Tensor[(9, 11, 3), int16] */;
  multiply(%571, %572) /* ty=Tensor[(9, 11, 3), int16] */
}

def @func_1621() -> Tensor[(14, 6, 10), uint8] {
  %573 = @func_689() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %573.3
}

def @func_10207() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
  %574 = @func_5835() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %575 = @func_3423() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %576 = %574.0;
  %577 = %575.0;
  (%576, %577)
}

def @func_10099(%var_10075: Tensor[(1, 15, 14), uint64], %var_10082: Tensor[(924), uint8], %var_10090: Tensor[(1728), float64]) -> (Tensor[(1, 15, 14), uint64], Tensor[(14, 11, 6), float32], Tensor[(924), uint8], Tensor[(9, 12, 16), float64], Tensor[(1728), float64], Tensor[(3, 6, 4), float32]) {
  %578 = cast(meta[relay.Constant][18] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %579 = cast(%var_10075, dtype="uint64") /* ty=Tensor[(1, 15, 14), uint64] */;
  %580 = cast(%var_10082, dtype="uint8") /* ty=Tensor[(924), uint8] */;
  %581 = cast(%var_10082, dtype="uint8") /* ty=Tensor[(924), uint8] */;
  %582 = reshape(%580, newshape=[14, 11, 6]) /* ty=Tensor[(14, 11, 6), uint8] */;
  %583 = reshape(%581, newshape=[14, 11, 6]) /* ty=Tensor[(14, 11, 6), uint8] */;
  %584 = @func_8284(%582, %583) /* ty=(Tensor[(14, 11, 6), bool], Tensor[(14, 11, 6), uint64], Tensor[(14, 11, 6), float32], Tensor[(384), int8]) */;
  %585 = cast(%var_10090, dtype="float64") /* ty=Tensor[(1728), float64] */;
  %586 = reshape(%585, newshape=[9, 12, 16]) /* ty=Tensor[(9, 12, 16), float64] */;
  %587 = @func_9033() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(3, 6, 4), float32], Tensor[(72), float32], Tensor[(14, 6, 10), float64]) */;
  %588 = right_shift(%578, %579) /* ty=Tensor[(1, 15, 14), uint64] */;
  %589 = %584.2;
  %590 = @func_2583(%586) /* ty=Tensor[(9, 12, 16), float64] */;
  %591 = %587.1;
  (%588, %589, %var_10082, %590, %var_10090, %591)
}

def @func_7553() -> (Tensor[(14, 6, 10), uint8],) {
  %592 = @func_5835() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %593 = %592.0;
  (%593,)
}

def @func_12578(%var_12552: int32, %var_12553: Tensor[(13, 13, 7), int32]) -> Tensor[(13, 13, 7), bool] {
  %594 = cast(%var_12552, dtype="bool") /* ty=bool */;
  %595 = cast(%var_12553, dtype="bool") /* ty=Tensor[(13, 13, 7), bool] */;
  equal(%594, %595) /* ty=Tensor[(13, 13, 7), bool] */
}

def @func_5717(%var_5704: int16) -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), int8], Tensor[(9, 11, 3), int16], int16) {
  %596 = @func_1810() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), bool], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
  %597 = @func_4239() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), int8], Tensor[(14, 6, 10), uint8]) */;
  %598 = cast(%var_5704, dtype="int16") /* ty=int16 */;
  %599 = reshape(%598, newshape=[]) /* ty=int16 */;
  %600 = %596.4;
  %601 = %597.2;
  %602 = @func_5434(%599) /* ty=Tensor[(9, 11, 3), int16] */;
  (%600, %601, %602, %var_5704)
}

def @func_13810() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) {
  %603 = @func_3598() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %604 = @func_1621() /* ty=Tensor[(14, 6, 10), uint8] */;
  %605 = %603.0;
  (%604, %605)
}

def @func_14057() -> (Tensor[(14, 6, 10), float32],) {
  %606 = @func_10061() /* ty=Tensor[(14, 6, 10), float32] */;
  (%606,)
}

def @func_13419() -> (Tensor[(14, 6, 10), uint8],) {
  %607 = @func_2884() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(384), int8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), int8]) */;
  %608 = %607.1;
  (%608,)
}

def @func_4239() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), int8], Tensor[(14, 6, 10), uint8]) {
  %609 = @func_2327() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %610 = @func_832() /* ty=Tensor[(14, 6, 10), uint8] */;
  %611 = cast(%610, dtype="float32") /* ty=Tensor[(14, 6, 10), float32] */;
  %612 = reshape(%611, newshape=[14, 6, 10]) /* ty=Tensor[(14, 6, 10), float32] */;
  %613 = @func_1262(%612) /* ty=(Tensor[(14, 6, 10), int8],) */;
  %614 = @func_3423() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %615 = %609.0;
  %616 = %613.0;
  %617 = %614.0;
  (%610, %615, %616, %617)
}

def @func_10114() -> Tensor[(14, 6, 10), float32] {
  @func_10061() /* ty=Tensor[(14, 6, 10), float32] */
}

def @func_1395() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
  %618 = @func_1320() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
  %619 = @func_689() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %620 = %619.1;
  %621 = cast(%620, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %622 = @func_578() /* ty=Tensor[(14, 6, 10), uint8] */;
  %623 = %618.0;
  %624 = rsqrt(%621) /* ty=Tensor[(14, 6, 10), float64] */;
  (%622, %623, %624)
}

def @func_3656() -> (Tensor[(384), int8],) {
  %625 = @func_1354() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(384), int8]) */;
  %626 = %625.2;
  (%626,)
}

def @func_13222(%var_13184: Tensor[(1, 14, 2), uint32], %var_13185: Tensor[(11, 14, 2), uint32]) -> (Tensor[(11, 14, 2), uint32], Tensor[(14, 6, 10), uint8]) {
  %627 = cast(%var_13184, dtype="uint32") /* ty=Tensor[(1, 14, 2), uint32] */;
  %628 = cast(%var_13185, dtype="uint32") /* ty=Tensor[(11, 14, 2), uint32] */;
  %629 = @func_12244() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32]) */;
  %630 = bitwise_or(%627, %628) /* ty=Tensor[(11, 14, 2), uint32] */;
  %631 = %629.0;
  (%630, %631)
}

def @func_6326(%var_6323: Tensor[(3, 6, 4), float32]) -> Tensor[(3, 6, 4), float32] {
  %632 = cast(%var_6323, dtype="float32") /* ty=Tensor[(3, 6, 4), float32] */;
  asin(%632) /* ty=Tensor[(3, 6, 4), float32] */
}

def @func_450(%var_429: Tensor[(4, 8, 12), int8]) -> (Tensor[(4, 8, 12), bool], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8]) {
  %633 = cast(%var_429, dtype="bool") /* ty=Tensor[(4, 8, 12), bool] */;
  %634 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(4, 8, 12), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %635 = cast(meta[relay.Constant][19] /* ty=Tensor[(4, 8, 12), int8] */, dtype="bool") /* ty=Tensor[(4, 8, 12), bool] */;
  %636 = dyn.reshape(%633, %634, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %637 = @func_82() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %638 = @func_351() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %639 = %638.0;
  %640 = cast(%639, dtype="float32") /* ty=Tensor[(14, 6, 10), float32] */;
  %641 = @func_351() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %642 = less(%635, %636) /* ty=Tensor[(4, 8, 12), bool] */;
  %643 = %637.0;
  %644 = asinh(%640) /* ty=Tensor[(14, 6, 10), float32] */;
  %645 = %641.0;
  (%642, %643, %644, %645)
}

def @func_2798() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) {
  %646 = @func_616() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %647 = @func_1854() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %648 = @func_1810() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), bool], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
  %649 = @func_337() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %650 = %646.0;
  %651 = %647.0;
  %652 = %648.1;
  %653 = %649.0;
  (%650, %651, %652, %653)
}

def @func_1923(%var_1908: bool, %var_1909: Tensor[(15, 2, 12), bool]) -> (Tensor[(15, 2, 12), int8], Tensor[(14, 6, 10), uint8]) {
  %654 = cast(%var_1908, dtype="bool") /* ty=bool */;
  %655 = cast(%var_1909, dtype="bool") /* ty=Tensor[(15, 2, 12), bool] */;
  %656 = logical_or(%654, %655) /* ty=Tensor[(15, 2, 12), bool] */;
  %657 = cast(%656, dtype="int8") /* ty=Tensor[(15, 2, 12), int8] */;
  %658 = shape_of(%var_1909, dtype="int32") /* ty=Tensor[(3), int32] */;
  %659 = cast(%var_1909, dtype="int8") /* ty=Tensor[(15, 2, 12), int8] */;
  %660 = dyn.reshape(%657, %658, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %661 = @func_1354() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(384), int8]) */;
  %662 = multiply(%659, %660) /* ty=Tensor[(15, 2, 12), int8] */;
  %663 = %661.0;
  (%662, %663)
}

def @func_10166() -> (Tensor[(14, 6, 10), float32], Tensor[(1728), float64], Tensor[(14, 6, 10), uint8]) {
  %664 = @func_8378() /* ty=(Tensor[(14, 6, 10), uint64], Tensor[(1728), uint64], Tensor[(1728), float64]) */;
  %665 = @func_1508() /* ty=Tensor[(14, 6, 10), float32] */;
  %666 = cast(%665, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %667 = reshape(%666, newshape=[840]) /* ty=Tensor[(840), float64] */;
  %668 = @func_3011(%667) /* ty=(Tensor[(384), int8], Tensor[(14, 6, 10), float64], Tensor[(840), float64], Tensor[(14, 16, 13), int32], Tensor[(4, 728), int32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %669 = %664.2;
  %670 = %668.7;
  (%665, %669, %670)
}

def @func_6002(%var_5938: Tensor[(3, 14, 13), float32]) -> (Tensor[(3, 14, 13), float32], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint64], Tensor[(14, 6, 10), uint8], bool, Tensor[(360), bool], Tensor[(14, 6, 10), float64]) {
  %671 = cast(%var_5938, dtype="float32") /* ty=Tensor[(3, 14, 13), float32] */;
  %672 = @func_1591() /* ty=(Tensor[(14, 6, 10), float32],) */;
  %673 = @func_3210() /* ty=Tensor[(14, 6, 10), uint64] */;
  %674 = cast(%673, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %675 = reshape(%674, newshape=[14, 6, 10]) /* ty=Tensor[(14, 6, 10), float64] */;
  %676 = @func_293(%675) /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint16], Tensor[(14, 6, 10), float64]) */;
  %677 = cast(meta[relay.Constant][20] /* ty=Tensor[(360), bool] */, dtype="bool") /* ty=Tensor[(360), bool] */;
  %678 = reshape(%677, newshape=[360]) /* ty=Tensor[(360), bool] */;
  %679 = @func_4638(%678) /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], bool, Tensor[(360), bool], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
  %680 = @func_2419() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %681 = erf(%671) /* ty=Tensor[(3, 14, 13), float32] */;
  %682 = %672.0;
  %683 = %676.0;
  %684 = %679.2;
  %685 = %680.0;
  (%681, %682, %673, %683, %684, meta[relay.Constant][20] /* ty=Tensor[(360), bool] */, %685)
}

def @func_5883() -> Tensor[(14, 6, 10), float64] {
  %686 = @func_2745() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %686.0
}

def @func_10773() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
  %687 = @func_2419() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %688 = @func_832() /* ty=Tensor[(14, 6, 10), uint8] */;
  %689 = %687.1;
  (%688, %689)
}

def @func_2731() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
  %690 = @func_82() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %691 = %690.1;
  %692 = cast(%691, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %693 = erf(%692) /* ty=Tensor[(14, 6, 10), float64] */;
  %694 = @func_2067() /* ty=Tensor[(14, 6, 10), float64] */;
  (%693, %694)
}

def @func_9532() -> (Tensor[(14, 6, 10), float64],) {
  %695 = @func_3313() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %696 = %695.2;
  (%696,)
}

def @func_6053() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
  %697 = @func_5130() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
  %698 = @func_3574() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %699 = @func_2798() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
  %700 = @func_578() /* ty=Tensor[(14, 6, 10), uint8] */;
  %701 = %697.1;
  %702 = %698.3;
  %703 = %699.2;
  (%700, %701, %702, %703)
}

def @func_1113(%var_1100: Tensor[(14, 16, 13), int32]) -> Tensor[(14, 16, 13), int32] {
  %704 = cast(meta[relay.Constant][21] /* ty=Tensor[(14, 1, 13), int32] */, dtype="int32") /* ty=Tensor[(14, 1, 13), int32] */;
  %705 = cast(%var_1100, dtype="int32") /* ty=Tensor[(14, 16, 13), int32] */;
  bitwise_or(%704, %705) /* ty=Tensor[(14, 16, 13), int32] */
}

def @func_6221() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
  %706 = @func_3313() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %707 = @func_4954() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
  %708 = @func_3970() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32]) */;
  %709 = %706.1;
  %710 = %707.1;
  %711 = %708.0;
  (%709, %710, %711)
}

def @func_997() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32]) {
  %712 = @func_82() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %713 = @func_897() /* ty=(Tensor[(14, 6, 10), float32],) */;
  %714 = %712.1;
  %715 = %713.0;
  (%714, %715)
}

def @func_3152(%var_3145: Tensor[(16, 9, 13), float64], %var_3146: Tensor[(16, 9, 13), float64]) -> (Tensor[(16, 9, 13), float64],) {
  %716 = cast(%var_3146, dtype="float64") /* ty=Tensor[(16, 9, 13), float64] */;
  %717 = shape_of(%var_3145, dtype="int32") /* ty=Tensor[(3), int32] */;
  %718 = cast(%var_3145, dtype="float64") /* ty=Tensor[(16, 9, 13), float64] */;
  %719 = dyn.reshape(%716, %717, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %720 = divide(%718, %719) /* ty=Tensor[(16, 9, 13), float64] */;
  (%720,)
}

def @func_8804() -> (Tensor[(14, 6, 10), uint8],) {
  %721 = @func_5648() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(9, 12, 16), float64], Tensor[(14, 6, 10), uint8]) */;
  %722 = %721.6;
  (%722,)
}

def @func_10467() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
  %723 = @func_2327() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %724 = @func_5648() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(9, 12, 16), float64], Tensor[(14, 6, 10), uint8]) */;
  %725 = %723.0;
  %726 = %724.6;
  (%725, %726)
}

def @func_11703() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32]) {
  %727 = @func_337() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %728 = @func_997() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32]) */;
  %729 = %727.1;
  %730 = %728.1;
  (%729, %730)
}

def @func_12845() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32]) {
  %731 = @func_2767() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %732 = @func_6451() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8]) */;
  %733 = @func_6397() /* ty=(Tensor[(14, 6, 10), float32],) */;
  %734 = %731.0;
  %735 = %732.1;
  %736 = %733.0;
  (%734, %735, %736)
}

def @func_934() -> (Tensor[(14, 6, 10), float32],) {
  %737 = @func_897() /* ty=(Tensor[(14, 6, 10), float32],) */;
  %738 = %737.0;
  (%738,)
}

def @func_13179() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint64], Tensor[(14, 6, 10), uint64], Tensor[(14, 6, 10), float32]) {
  %739 = @func_1208() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %740 = @func_3384() /* ty=(Tensor[(14, 6, 10), uint64],) */;
  %741 = @func_3384() /* ty=(Tensor[(14, 6, 10), uint64],) */;
  %742 = %739.0;
  %743 = @func_9311() /* ty=Tensor[(14, 6, 10), float64] */;
  %744 = %740.0;
  %745 = %741.0;
  %746 = @func_1731() /* ty=Tensor[(14, 6, 10), float32] */;
  (%742, %743, %744, %745, %746)
}

def @func_10590(%var_10584: Tensor[(5, 9, 14), int8], %var_10585: Tensor[(5, 9, 14), int8]) -> Tensor[(5, 9, 14), int8] {
  %747 = cast(%var_10585, dtype="int8") /* ty=Tensor[(5, 9, 14), int8] */;
  %748 = shape_of(%var_10584, dtype="int32") /* ty=Tensor[(3), int32] */;
  %749 = cast(%var_10584, dtype="int8") /* ty=Tensor[(5, 9, 14), int8] */;
  %750 = dyn.reshape(%747, %748, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  bitwise_or(%749, %750) /* ty=Tensor[(5, 9, 14), int8] */
}

def @func_7129(%var_7121: Tensor[(1728), float64]) -> (Tensor[(14, 6, 10), float64], Tensor[(9, 12, 16), float64], Tensor[(1728), uint64]) {
  %751 = @func_5825() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %752 = cast(%var_7121, dtype="float64") /* ty=Tensor[(1728), float64] */;
  %753 = reshape(%752, newshape=[9, 12, 16]) /* ty=Tensor[(9, 12, 16), float64] */;
  %754 = cast(meta[relay.Constant][22] /* ty=Tensor[(1728), float64] */, dtype="uint64") /* ty=Tensor[(1728), uint64] */;
  %755 = shape_of(%var_7121, dtype="int32") /* ty=Tensor[(1), int32] */;
  %756 = cast(%var_7121, dtype="uint64") /* ty=Tensor[(1728), uint64] */;
  %757 = dyn.reshape(%754, %755, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %758 = %751.0;
  %759 = @func_2583(%753) /* ty=Tensor[(9, 12, 16), float64] */;
  %760 = add(%756, %757) /* ty=Tensor[(1728), uint64] */;
  (%758, %759, %760)
}

def @func_6536(%var_6501: Tensor[(14, 8, 6), float64]) -> (Tensor[(14, 8, 6), float64],) {
  %761 = cast(%var_6501, dtype="float64") /* ty=Tensor[(14, 8, 6), float64] */;
  %762 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(14, 8, 6), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %763 = cast(meta[relay.Constant][23] /* ty=Tensor[(14, 8, 6), float64] */, dtype="float64") /* ty=Tensor[(14, 8, 6), float64] */;
  %764 = dyn.reshape(%761, %762, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %765 = maximum(%763, %764) /* ty=Tensor[(14, 8, 6), float64] */;
  (%765,)
}

def @func_7289() -> (Tensor[(384), int8], Tensor[(14, 6, 10), float64]) {
  %766 = @func_1354() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(384), int8]) */;
  %767 = @func_2731() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %768 = %766.2;
  %769 = %767.1;
  (%768, %769)
}

def @func_12987(%var_12948: uint8, %var_12949: Tensor[(10, 16, 3), uint8], %var_12964: Tensor[(10, 16, 3), uint8]) -> (Tensor[(10, 16, 3), bool], Tensor[(14, 6, 10), bool], Tensor[(10, 16, 3), float32], Tensor[(14, 6, 10), uint8]) {
  %770 = cast(%var_12948, dtype="bool") /* ty=bool */;
  %771 = cast(%var_12949, dtype="bool") /* ty=Tensor[(10, 16, 3), bool] */;
  %772 = @func_6298() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), bool]) */;
  %773 = cast(%var_12964, dtype="float32") /* ty=Tensor[(10, 16, 3), float32] */;
  %774 = shape_of(%var_12949, dtype="int32") /* ty=Tensor[(3), int32] */;
  %775 = cast(%var_12949, dtype="float32") /* ty=Tensor[(10, 16, 3), float32] */;
  %776 = dyn.reshape(%773, %774, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %777 = equal(%770, %771) /* ty=Tensor[(10, 16, 3), bool] */;
  %778 = %772.3;
  %779 = divide(%775, %776) /* ty=Tensor[(10, 16, 3), float32] */;
  %780 = @func_10937() /* ty=Tensor[(14, 6, 10), uint8] */;
  (%777, %778, %779, %780)
}

def @func_13112(%var_13056: Tensor[(16, 4, 6), int64]) -> (Tensor[(16, 4, 6), float64], Tensor[(14, 6, 10), float64]) {
  %781 = cast(meta[relay.Constant][24] /* ty=Tensor[(16, 4, 6), int64] */, dtype="int64") /* ty=Tensor[(16, 4, 6), int64] */;
  %782 = shape_of(%var_13056, dtype="int32") /* ty=Tensor[(3), int32] */;
  %783 = cast(%var_13056, dtype="int64") /* ty=Tensor[(16, 4, 6), int64] */;
  %784 = dyn.reshape(%781, %782, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %785 = left_shift(%783, %784) /* ty=Tensor[(16, 4, 6), int64] */;
  %786 = cast(%785, dtype="float64") /* ty=Tensor[(16, 4, 6), float64] */;
  %787 = @func_800() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %788 = cos(%786) /* ty=Tensor[(16, 4, 6), float64] */;
  %789 = %787.1;
  (%788, %789)
}

def @func_1141() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float32]) {
  %790 = @func_897() /* ty=(Tensor[(14, 6, 10), float32],) */;
  %791 = @func_1093() /* ty=(Tensor[(14, 6, 10), float32],) */;
  %792 = @func_578() /* ty=Tensor[(14, 6, 10), uint8] */;
  %793 = %790.0;
  %794 = %791.0;
  (%792, %793, %794)
}

def @func_6688() -> Tensor[(14, 6, 10), float64] {
  %795 = @func_2767() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %795.0
}

def @func_2745() -> (Tensor[(14, 6, 10), float64],) {
  %796 = @func_1701() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %797 = %796.0;
  (%797,)
}

def @func_1093() -> (Tensor[(14, 6, 10), float32],) {
  %798 = @func_934() /* ty=(Tensor[(14, 6, 10), float32],) */;
  %799 = %798.0;
  (%799,)
}

def @func_9502() -> Tensor[(14, 6, 10), uint8] {
  %800 = @func_1968() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %800.0
}

def @func_4424() -> Tensor[(384), int8] {
  %801 = @func_3656() /* ty=(Tensor[(384), int8],) */;
  %801.0
}

def @func_12155(%var_12122: Tensor[(1, 16, 11), float32], %var_12127: Tensor[(12, 16, 11), float32], %var_12139: Tensor[(360), bool]) -> (Tensor[(14, 6, 10), float32], Tensor[(360), bool], Tensor[(12, 16, 11), float32], Tensor[(14, 6, 10), float64]) {
  %802 = cast(%var_12139, dtype="bool") /* ty=Tensor[(360), bool] */;
  %803 = reshape(%802, newshape=[360]) /* ty=Tensor[(360), bool] */;
  %804 = @func_4638(%803) /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], bool, Tensor[(360), bool], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
  %805 = cast(%var_12122, dtype="float32") /* ty=Tensor[(1, 16, 11), float32] */;
  %806 = atan(%805) /* ty=Tensor[(1, 16, 11), float32] */;
  %807 = cast(%806, dtype="bool") /* ty=Tensor[(1, 16, 11), bool] */;
  %808 = cast(%var_12127, dtype="bool") /* ty=Tensor[(12, 16, 11), bool] */;
  %809 = not_equal(%807, %808) /* ty=Tensor[(12, 16, 11), bool] */;
  %810 = cast(%809, dtype="float32") /* ty=Tensor[(12, 16, 11), float32] */;
  %811 = @func_8587() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %812 = %804.4;
  %813 = exp(%810) /* ty=Tensor[(12, 16, 11), float32] */;
  %814 = %811.0;
  (%812, %var_12139, %813, %814)
}

def @func_6650() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) {
  %815 = @func_578() /* ty=Tensor[(14, 6, 10), uint8] */;
  %816 = @func_5316() /* ty=Tensor[(14, 6, 10), float64] */;
  (%815, %816)
}

def @func_11178(%var_11144: Tensor[(210), uint64], %var_11146: Tensor[(1728), float64]) -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(3, 6, 4), float32], Tensor[(210), uint64], Tensor[(924), uint8], Tensor[(1728), float64], Tensor[(384), int8]) {
  %817 = @func_616() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %818 = @func_2573() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64]) */;
  %819 = cast(%var_11144, dtype="uint64") /* ty=Tensor[(210), uint64] */;
  %820 = cast(meta[relay.Constant][25] /* ty=Tensor[(924), uint8] */, dtype="uint8") /* ty=Tensor[(924), uint8] */;
  %821 = cast(%var_11146, dtype="float64") /* ty=Tensor[(1728), float64] */;
  %822 = reshape(%819, newshape=[1, 15, 14]) /* ty=Tensor[(1, 15, 14), uint64] */;
  %823 = reshape(%820, newshape=[924]) /* ty=Tensor[(924), uint8] */;
  %824 = reshape(%821, newshape=[1728]) /* ty=Tensor[(1728), float64] */;
  %825 = @func_10099(%822, %823, %824) /* ty=(Tensor[(1, 15, 14), uint64], Tensor[(14, 11, 6), float32], Tensor[(924), uint8], Tensor[(9, 12, 16), float64], Tensor[(1728), float64], Tensor[(3, 6, 4), float32]) */;
  %826 = @func_3656() /* ty=(Tensor[(384), int8],) */;
  %827 = @func_2067() /* ty=Tensor[(14, 6, 10), float64] */;
  %828 = %817.1;
  %829 = @func_1508() /* ty=Tensor[(14, 6, 10), float32] */;
  %830 = %818.1;
  %831 = @func_5474() /* ty=Tensor[(14, 6, 10), uint8] */;
  %832 = %825.5;
  %833 = %826.0;
  (%827, %828, %829, %830, %831, %832, %var_11144, meta[relay.Constant][25] /* ty=Tensor[(924), uint8] */, %var_11146, %833)
}

def @func_4178() -> (Tensor[(14, 6, 10), int8], Tensor[(14, 6, 10), float64]) {
  %834 = @func_2884() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(384), int8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), int8]) */;
  %835 = @func_3169() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %836 = %834.7;
  %837 = %835.1;
  (%836, %837)
}

def @func_9650() -> Tensor[(14, 6, 10), float64] {
  @func_8842() /* ty=Tensor[(14, 6, 10), float64] */
}

def @func_9869() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32]) {
  %838 = @func_9532() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %839 = @func_2906() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float32]) */;
  %840 = @func_5130() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
  %841 = @func_7583() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %842 = @func_997() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32]) */;
  %843 = @func_7379() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
  %844 = %838.0;
  %845 = %839.1;
  %846 = %840.1;
  %847 = %841.0;
  %848 = @func_4527() /* ty=Tensor[(14, 6, 10), uint8] */;
  %849 = %842.1;
  %850 = %843.1;
  %851 = @func_9301() /* ty=Tensor[(14, 6, 10), float32] */;
  (%844, %845, %846, %847, %848, %849, %850, %851)
}

def @func_4355() -> Tensor[(14, 6, 10), float64] {
  %852 = @func_3598() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %852.0
}

def @func_5474() -> Tensor[(14, 6, 10), uint8] {
  %853 = @func_1956() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
  %853.1
}

def @func_4405() -> (Tensor[(14, 6, 10), uint8],) {
  %854 = @func_1968() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %855 = %854.0;
  (%855,)
}

def @func_10324() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) {
  %856 = @func_920() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %857 = @func_5167() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %858 = %856.0;
  %859 = %857.0;
  (%858, %859)
}

def @func_1810() -> (Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), bool], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
  %860 = @func_934() /* ty=(Tensor[(14, 6, 10), float32],) */;
  %861 = @func_1208() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %862 = @func_730() /* ty=(Tensor[(14, 6, 10), bool], Tensor[(14, 6, 10), float64]) */;
  %863 = @func_1141() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float32]) */;
  %864 = %860.0;
  %865 = %861.0;
  %866 = %862.0;
  %867 = @func_1621() /* ty=Tensor[(14, 6, 10), uint8] */;
  %868 = %863.0;
  (%864, %865, %866, %867, %868)
}

def @func_5085() -> (Tensor[(14, 6, 10), uint8],) {
  %869 = @func_1968() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %870 = %869.0;
  (%870,)
}

def @func_2300() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
  %871 = @func_1968() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %872 = @func_1956() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
  %873 = %871.0;
  %874 = %872.0;
  (%873, %874)
}

def @func_293(%var_219: Tensor[(14, 6, 10), float64]) -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint16], Tensor[(14, 6, 10), float64]) {
  %875 = @func_82() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %876 = %875.1;
  %877 = cast(%var_219, dtype="uint8") /* ty=Tensor[(14, 6, 10), uint8] */;
  %878 = shape_of(%876, dtype="int32") /* ty=Tensor[(3), int32] */;
  %879 = cast(%876, dtype="uint8") /* ty=Tensor[(14, 6, 10), uint8] */;
  %880 = dyn.reshape(%877, %878, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %881 = cast(%var_219, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %882 = reshape(%881, newshape=[14, 6, 10]) /* ty=Tensor[(14, 6, 10), float64] */;
  %883 = @func_108(%882) /* ty=(Tensor[(14, 6, 10), float32],) */;
  %884 = %883.0;
  %885 = cast(%884, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %886 = cast(%876, dtype="uint32") /* ty=Tensor[(14, 6, 10), uint32] */;
  %887 = shape_of(%884, dtype="int32") /* ty=Tensor[(3), int32] */;
  %888 = cast(%884, dtype="uint32") /* ty=Tensor[(14, 6, 10), uint32] */;
  %889 = dyn.reshape(%886, %887, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %890 = add(%888, %889) /* ty=Tensor[(14, 6, 10), uint32] */;
  %891 = cast(%890, dtype="uint16") /* ty=Tensor[(14, 6, 10), uint16] */;
  %892 = shape_of(%884, dtype="int32") /* ty=Tensor[(3), int32] */;
  %893 = cast(%884, dtype="uint16") /* ty=Tensor[(14, 6, 10), uint16] */;
  %894 = dyn.reshape(%891, %892, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %895 = cast(%884, dtype="float32") /* ty=Tensor[(14, 6, 10), float32] */;
  %896 = acosh(%895) /* ty=Tensor[(14, 6, 10), float32] */;
  %897 = cast(%896, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %898 = left_shift(%879, %880) /* ty=Tensor[(14, 6, 10), uint8] */;
  %899 = acos(%885) /* ty=Tensor[(14, 6, 10), float64] */;
  %900 = logical_xor(%893, %894) /* ty=Tensor[(14, 6, 10), uint16] */;
  %901 = log2(%897) /* ty=Tensor[(14, 6, 10), float64] */;
  (%898, %899, %900, %901)
}

def @func_108(%var_101: Tensor[(14, 6, 10), float64]) -> (Tensor[(14, 6, 10), float32],) {
  %902 = @func_82() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %903 = %902.1;
  %904 = cast(%var_101, dtype="float32") /* ty=Tensor[(14, 6, 10), float32] */;
  %905 = shape_of(%903, dtype="int32") /* ty=Tensor[(3), int32] */;
  %906 = cast(%903, dtype="float32") /* ty=Tensor[(14, 6, 10), float32] */;
  %907 = dyn.reshape(%904, %905, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %908 = mod(%906, %907) /* ty=Tensor[(14, 6, 10), float32] */;
  (%908,)
}

def @func_800() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
  %909 = @func_616() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %910 = %909.1;
  %911 = cast(%910, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %912 = reshape(%911, newshape=[14, 6, 10]) /* ty=Tensor[(14, 6, 10), float64] */;
  %913 = @func_183(%912) /* ty=(Tensor[(14, 6, 10), bool], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), int8], Tensor[(14, 6, 10), float32]) */;
  %914 = %913.1;
  (%910, %914)
}

def @func_1208() -> (Tensor[(14, 6, 10), uint8],) {
  %915 = @func_832() /* ty=Tensor[(14, 6, 10), uint8] */;
  (%915,)
}

def @func_6633(%var_6603: Tensor[(15, 16, 13), uint64], %var_6620: Tensor[(15, 16, 13), float32]) -> (Tensor[(15, 16, 13), bool], Tensor[(15, 16, 13), float64]) {
  %916 = cast(%var_6603, dtype="bool") /* ty=Tensor[(15, 16, 13), bool] */;
  %917 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(15, 16, 13), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %918 = cast(meta[relay.Constant][26] /* ty=Tensor[(15, 16, 13), uint64] */, dtype="bool") /* ty=Tensor[(15, 16, 13), bool] */;
  %919 = dyn.reshape(%916, %917, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %920 = cast(meta[relay.Constant][26] /* ty=Tensor[(15, 16, 13), uint64] */, dtype="float32") /* ty=Tensor[(15, 16, 13), float32] */;
  %921 = asin(%920) /* ty=Tensor[(15, 16, 13), float32] */;
  %922 = cast(%var_6620, dtype="bool") /* ty=Tensor[(15, 16, 13), bool] */;
  %923 = shape_of(%921, dtype="int32") /* ty=Tensor[(3), int32] */;
  %924 = cast(%921, dtype="bool") /* ty=Tensor[(15, 16, 13), bool] */;
  %925 = dyn.reshape(%922, %923, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %926 = greater_equal(%924, %925) /* ty=Tensor[(15, 16, 13), bool] */;
  %927 = cast(%926, dtype="float64") /* ty=Tensor[(15, 16, 13), float64] */;
  %928 = less(%918, %919) /* ty=Tensor[(15, 16, 13), bool] */;
  %929 = sin(%927) /* ty=Tensor[(15, 16, 13), float64] */;
  (%928, %929)
}

def @func_8545() -> (Tensor[(14, 6, 10), uint8], Tensor[(384), int8], Tensor[(840), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
  %930 = @func_1208() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %931 = @func_4556() /* ty=(Tensor[(384), int8],) */;
  %932 = %930.0;
  %933 = cast(%932, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %934 = reshape(%933, newshape=[840]) /* ty=Tensor[(840), float64] */;
  %935 = @func_3011(%934) /* ty=(Tensor[(384), int8], Tensor[(14, 6, 10), float64], Tensor[(840), float64], Tensor[(14, 16, 13), int32], Tensor[(4, 728), int32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %936 = @func_4045() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64]) */;
  %937 = @func_4811() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(360), bool], Tensor[(360), bool], Tensor[(14, 6, 10), float64]) */;
  %938 = %931.0;
  %939 = %935.2;
  %940 = %936.1;
  %941 = %937.2;
  (%932, %938, %939, %940, %941)
}

def @func_9609() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
  %942 = @func_4811() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(360), bool], Tensor[(360), bool], Tensor[(14, 6, 10), float64]) */;
  %943 = %942.5;
  %944 = @func_9311() /* ty=Tensor[(14, 6, 10), float64] */;
  (%943, %944)
}

def @func_8194() -> (Tensor[(14, 6, 10), uint8],) {
  %945 = @func_1621() /* ty=Tensor[(14, 6, 10), uint8] */;
  (%945,)
}

def @func_183(%var_166: Tensor[(14, 6, 10), float64]) -> (Tensor[(14, 6, 10), bool], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), int8], Tensor[(14, 6, 10), float32]) {
  %946 = @func_82() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %947 = %946.0;
  %948 = cast(%947, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %949 = reshape(%948, newshape=[14, 6, 10]) /* ty=Tensor[(14, 6, 10), float64] */;
  %950 = @func_108(%949) /* ty=(Tensor[(14, 6, 10), float32],) */;
  %951 = %950.0;
  %952 = cast(%951, dtype="bool") /* ty=Tensor[(14, 6, 10), bool] */;
  %953 = shape_of(%947, dtype="int32") /* ty=Tensor[(3), int32] */;
  %954 = cast(%947, dtype="bool") /* ty=Tensor[(14, 6, 10), bool] */;
  %955 = dyn.reshape(%952, %953, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %956 = @func_82() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %957 = @func_82() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %958 = %957.1;
  %959 = cast(%var_166, dtype="int8") /* ty=Tensor[(14, 6, 10), int8] */;
  %960 = shape_of(%958, dtype="int32") /* ty=Tensor[(3), int32] */;
  %961 = cast(%958, dtype="int8") /* ty=Tensor[(14, 6, 10), int8] */;
  %962 = dyn.reshape(%959, %960, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %963 = cast(%947, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %964 = reshape(%963, newshape=[14, 6, 10]) /* ty=Tensor[(14, 6, 10), float64] */;
  %965 = @func_108(%964) /* ty=(Tensor[(14, 6, 10), float32],) */;
  %966 = equal(%954, %955) /* ty=Tensor[(14, 6, 10), bool] */;
  %967 = %956.0;
  %968 = bitwise_and(%961, %962) /* ty=Tensor[(14, 6, 10), int8] */;
  %969 = %965.0;
  (%966, %967, %968, %969)
}

def @func_5167() -> (Tensor[(14, 6, 10), float64],) {
  %970 = @func_3574() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %971 = %970.3;
  (%971,)
}

def @func_10455(%var_10431: Tensor[(11, 9, 6), uint8]) -> (Tensor[(11, 9, 6), uint8], Tensor[(11, 9, 6), float64]) {
  %972 = cast(%var_10431, dtype="uint8") /* ty=Tensor[(11, 9, 6), uint8] */;
  %973 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(11, 9, 6), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %974 = cast(meta[relay.Constant][27] /* ty=Tensor[(11, 9, 6), uint8] */, dtype="uint8") /* ty=Tensor[(11, 9, 6), uint8] */;
  %975 = dyn.reshape(%972, %973, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %976 = cast(meta[relay.Constant][27] /* ty=Tensor[(11, 9, 6), uint8] */, dtype="float64") /* ty=Tensor[(11, 9, 6), float64] */;
  %977 = bitwise_and(%974, %975) /* ty=Tensor[(11, 9, 6), uint8] */;
  %978 = acos(%976) /* ty=Tensor[(11, 9, 6), float64] */;
  (%977, %978)
}

def @func_10061() -> Tensor[(14, 6, 10), float32] {
  @func_8875() /* ty=Tensor[(14, 6, 10), float32] */
}

def @func_8875() -> Tensor[(14, 6, 10), float32] {
  %979 = @func_1093() /* ty=(Tensor[(14, 6, 10), float32],) */;
  %979.0
}

def @func_3753() -> (Tensor[(14, 6, 10), float32],) {
  %980 = @func_1093() /* ty=(Tensor[(14, 6, 10), float32],) */;
  %981 = %980.0;
  (%981,)
}

def @func_1968() -> (Tensor[(14, 6, 10), uint8],) {
  %982 = @func_920() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %983 = %982.0;
  (%983,)
}

def @func_13659() -> (Tensor[(14, 6, 10), uint8],) {
  %984 = @func_10324() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
  %985 = %984.0;
  (%985,)
}

def @func_897() -> (Tensor[(14, 6, 10), float32],) {
  %986 = @func_689() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %987 = %986.0;
  (%987,)
}

def @func_11016() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
  %988 = @func_6650() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
  %989 = @func_689() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %990 = %988.1;
  %991 = %989.2;
  (%990, %991)
}

def @func_11523() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
  %992 = @func_1701() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %993 = %992.0;
  %994 = @func_10248() /* ty=Tensor[(14, 6, 10), uint8] */;
  (%993, %994)
}

def @func_8947(%var_8912: Tensor[(14, 8, 7), uint8], %var_8913: Tensor[(14, 8, 7), uint8]) -> (Tensor[(14, 8, 7), float64], Tensor[(14, 8, 7), float32]) {
  %995 = cast(%var_8912, dtype="float32") /* ty=Tensor[(14, 8, 7), float32] */;
  %996 = acosh(%995) /* ty=Tensor[(14, 8, 7), float32] */;
  %997 = cast(%996, dtype="float64") /* ty=Tensor[(14, 8, 7), float64] */;
  %998 = shape_of(%var_8912, dtype="int32") /* ty=Tensor[(3), int32] */;
  %999 = cast(%var_8912, dtype="float64") /* ty=Tensor[(14, 8, 7), float64] */;
  %1000 = dyn.reshape(%997, %998, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1001 = cast(%var_8913, dtype="uint8") /* ty=Tensor[(14, 8, 7), uint8] */;
  %1002 = shape_of(%var_8912, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1003 = cast(%var_8912, dtype="uint8") /* ty=Tensor[(14, 8, 7), uint8] */;
  %1004 = dyn.reshape(%1001, %1002, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1005 = logical_xor(%1003, %1004) /* ty=Tensor[(14, 8, 7), uint8] */;
  %1006 = cast(%1005, dtype="float32") /* ty=Tensor[(14, 8, 7), float32] */;
  %1007 = exp(%1006) /* ty=Tensor[(14, 8, 7), float32] */;
  %1008 = cast(%996, dtype="float32") /* ty=Tensor[(14, 8, 7), float32] */;
  %1009 = shape_of(%1007, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1010 = cast(%1007, dtype="float32") /* ty=Tensor[(14, 8, 7), float32] */;
  %1011 = dyn.reshape(%1008, %1009, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1012 = floor_divide(%999, %1000) /* ty=Tensor[(14, 8, 7), float64] */;
  %1013 = mod(%1010, %1011) /* ty=Tensor[(14, 8, 7), float32] */;
  (%1012, %1013)
}

def @func_832() -> Tensor[(14, 6, 10), uint8] {
  %1014 = @func_351() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %1014.0
}

def @func_12534() -> (Tensor[(14, 6, 10), float32], Tensor[(16, 10, 6), float32], Tensor[(960), bool], Tensor[(14, 6, 10), uint8]) {
  %1015 = @func_11703() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32]) */;
  %1016 = cast(meta[relay.Constant][28] /* ty=Tensor[(960), bool] */, dtype="bool") /* ty=Tensor[(960), bool] */;
  %1017 = reshape(%1016, newshape=[16, 10, 6]) /* ty=Tensor[(16, 10, 6), bool] */;
  %1018 = @func_1050(%1017) /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(16, 10, 6), float32]) */;
  %1019 = @func_2300() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
  %1020 = %1015.1;
  %1021 = %1018.1;
  %1022 = %1019.0;
  (%1020, %1021, meta[relay.Constant][28] /* ty=Tensor[(960), bool] */, %1022)
}

def @func_9204(%var_9188: Tensor[(16, 13, 6), uint64]) -> (Tensor[(16, 13, 6), uint64], Tensor[(14, 6, 10), uint8]) {
  %1023 = cast(meta[relay.Constant][29] /* ty=Tensor[(16, 13, 6), uint64] */, dtype="uint64") /* ty=Tensor[(16, 13, 6), uint64] */;
  %1024 = shape_of(%var_9188, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1025 = cast(%var_9188, dtype="uint64") /* ty=Tensor[(16, 13, 6), uint64] */;
  %1026 = dyn.reshape(%1023, %1024, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1027 = @func_5130() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
  %1028 = right_shift(%1025, %1026) /* ty=Tensor[(16, 13, 6), uint64] */;
  %1029 = %1027.0;
  (%1028, %1029)
}

def @func_1701() -> (Tensor[(14, 6, 10), float64],) {
  %1030 = @func_1320() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
  %1031 = %1030.0;
  (%1031,)
}

def @func_578() -> Tensor[(14, 6, 10), uint8] {
  %1032 = @func_337() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %1032.1
}

def @func_3704() -> Tensor[(14, 6, 10), uint8] {
  %1033 = @func_1395() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %1033.0
}

def @func_7423(%var_7403: Tensor[(1728), float64]) -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(9, 12, 16), int64]) {
  %1034 = @func_2767() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %1035 = @func_1320() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
  %1036 = cast(%var_7403, dtype="float64") /* ty=Tensor[(1728), float64] */;
  %1037 = reshape(%1036, newshape=[9, 12, 16]) /* ty=Tensor[(9, 12, 16), float64] */;
  %1038 = @func_2583(%1037) /* ty=Tensor[(9, 12, 16), float64] */;
  %1039 = cast(%1038, dtype="int16") /* ty=Tensor[(9, 12, 16), int16] */;
  %1040 = shape_of(%var_7403, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1041 = cast(%var_7403, dtype="int16") /* ty=Tensor[(1728), int16] */;
  %1042 = dyn.reshape(%1039, %1040, newshape=[]) /* ty=Tensor[(?), int16] */;
  %1043 = subtract(%1041, %1042) /* ty=Tensor[(1728), int16] */;
  %1044 = cast(%1043, dtype="int64") /* ty=Tensor[(1728), int64] */;
  %1045 = shape_of(%1038, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1046 = cast(%1038, dtype="int64") /* ty=Tensor[(9, 12, 16), int64] */;
  %1047 = dyn.reshape(%1044, %1045, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1048 = %1034.0;
  %1049 = %1035.2;
  %1050 = left_shift(%1046, %1047) /* ty=Tensor[(9, 12, 16), int64] */;
  (%1048, %1049, %1050)
}

def @func_6122() -> Tensor[(384), int8] {
  %1051 = @func_4556() /* ty=(Tensor[(384), int8],) */;
  %1051.0
}

def @func_11898() -> (Tensor[(360), bool],) {
  %1052 = @func_4811() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(360), bool], Tensor[(360), bool], Tensor[(14, 6, 10), float64]) */;
  %1053 = %1052.4;
  (%1053,)
}

def @func_11986() -> (Tensor[(14, 6, 10), float64],) {
  %1054 = @func_2767() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %1055 = %1054.0;
  (%1055,)
}

def @func_6451() -> (Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8]) {
  %1056 = @func_2038() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8]) */;
  %1057 = %1056.0;
  %1058 = @func_832() /* ty=Tensor[(14, 6, 10), uint8] */;
  (%1057, %1058)
}

def @func_7458(%var_7434: Tensor[(8, 1, 13), float64]) -> (Tensor[(8, 1, 13), float64], Tensor[(8, 1, 13), float64]) {
  %1059 = cast(%var_7434, dtype="float64") /* ty=Tensor[(8, 1, 13), float64] */;
  %1060 = cast(%var_7434, dtype="float64") /* ty=Tensor[(8, 1, 13), float64] */;
  %1061 = atan(%1059) /* ty=Tensor[(8, 1, 13), float64] */;
  %1062 = atanh(%1060) /* ty=Tensor[(8, 1, 13), float64] */;
  (%1061, %1062)
}

def @func_12244() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32]) {
  %1063 = @func_4344() /* ty=Tensor[(14, 6, 10), uint8] */;
  %1064 = @func_1454() /* ty=Tensor[(14, 6, 10), float32] */;
  (%1063, %1064)
}

def @func_10383(%var_10338: Tensor[(180, 2), bool]) -> (Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float32], Tensor[(15, 2, 12), int8], bool, Tensor[(180, 2), bool], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32]) {
  %1065 = @func_1454() /* ty=Tensor[(14, 6, 10), float32] */;
  %1066 = cast(%1065, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %1067 = reshape(%1066, newshape=[14, 6, 10]) /* ty=Tensor[(14, 6, 10), float64] */;
  %1068 = @func_108(%1067) /* ty=(Tensor[(14, 6, 10), float32],) */;
  %1069 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %1070 = cast(%var_10338, dtype="bool") /* ty=Tensor[(180, 2), bool] */;
  %1071 = reshape(%1069, newshape=[]) /* ty=bool */;
  %1072 = reshape(%1070, newshape=[15, 2, 12]) /* ty=Tensor[(15, 2, 12), bool] */;
  %1073 = @func_1923(%1071, %1072) /* ty=(Tensor[(15, 2, 12), int8], Tensor[(14, 6, 10), uint8]) */;
  %1074 = @func_5835() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %1075 = %1068.0;
  %1076 = %1073.0;
  %1077 = %1074.0;
  %1078 = @func_8875() /* ty=Tensor[(14, 6, 10), float32] */;
  (%1065, %1075, %1076, True /* ty=bool */, %var_10338, %1077, %1078)
}

def @func_10954() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
  %1079 = @func_5085() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %1080 = @func_8804() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %1081 = %1079.0;
  %1082 = %1080.0;
  (%1081, %1082)
}

def @func_12414(%var_12381: Tensor[(960), bool]) -> (Tensor[(14, 6, 10), uint8], Tensor[(960), bool], Tensor[(960), bool], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
  %1083 = @func_8194() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %1084 = cast(%var_12381, dtype="bool") /* ty=Tensor[(960), bool] */;
  %1085 = reshape(%1084, newshape=[2, 480]) /* ty=Tensor[(2, 480), bool] */;
  %1086 = @func_11054(%1085) /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(960), bool], Tensor[(2, 480), bool]) */;
  %1087 = @func_6650() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
  %1088 = %1083.0;
  %1089 = %1086.1;
  %1090 = @func_3704() /* ty=Tensor[(14, 6, 10), uint8] */;
  %1091 = %1087.0;
  (%1088, %1089, %var_12381, %1090, %1091)
}

def @func_10991(%var_10963: Tensor[(3, 8, 13), uint8], %var_10964: Tensor[(3, 8, 13), uint8]) -> Tensor[(3, 8, 13), bool] {
  %1092 = cast(%var_10964, dtype="bool") /* ty=Tensor[(3, 8, 13), bool] */;
  %1093 = shape_of(%var_10963, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1094 = cast(%var_10963, dtype="bool") /* ty=Tensor[(3, 8, 13), bool] */;
  %1095 = dyn.reshape(%1092, %1093, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%1094, %1095) /* ty=Tensor[(3, 8, 13), bool] */
}

def @func_3384() -> (Tensor[(14, 6, 10), uint64],) {
  %1096 = @func_3210() /* ty=Tensor[(14, 6, 10), uint64] */;
  (%1096,)
}

def @func_12054() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) {
  %1097 = @func_2327() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %1098 = @func_2745() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %1099 = %1097.0;
  %1100 = %1098.0;
  (%1099, %1100)
}

def @func_9940() -> Tensor[(14, 6, 10), uint8] {
  %1101 = @func_3423() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %1101.0
}

def @func_13861() -> (Tensor[(14, 6, 10), uint8], Tensor[(1728), float64]) {
  %1102 = @func_12449() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
  %1103 = %1102.0;
  %1104 = @func_11331() /* ty=Tensor[(1728), float64] */;
  (%1103, %1104)
}

def @func_4121() -> (Tensor[(14, 6, 10), float64],) {
  %1105 = @func_3169() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %1106 = %1105.1;
  (%1106,)
}

def @func_9261() -> Tensor[(14, 6, 10), float64] {
  %1107 = @func_2767() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %1107.0
}

def @func_2067() -> Tensor[(14, 6, 10), float64] {
  %1108 = @func_82() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %1108.1
}

def @func_3970() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32]) {
  %1109 = @func_2300() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
  %1110 = %1109.1;
  %1111 = @func_1454() /* ty=Tensor[(14, 6, 10), float32] */;
  (%1110, %1111)
}

def @func_10650() -> Tensor[(14, 6, 10), uint8] {
  %1112 = @func_6768() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %1112.0
}

def @func_13968() -> Tensor[(14, 6, 10), uint8] {
  %1113 = @func_11703() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32]) */;
  %1113.0
}

def @func_3574() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
  %1114 = @func_2038() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8]) */;
  %1115 = @func_1320() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
  %1116 = @func_2745() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %1117 = @func_1956() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
  %1118 = @func_2067() /* ty=Tensor[(14, 6, 10), float64] */;
  %1119 = %1114.0;
  %1120 = %1115.0;
  %1121 = %1116.0;
  %1122 = %1117.1;
  (%1118, %1119, %1120, %1121, %1122)
}

def @func_13958() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
  %1123 = @func_800() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %1124 = @func_2884() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(384), int8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), int8]) */;
  %1125 = %1123.0;
  %1126 = %1124.6;
  (%1125, %1126)
}

def @func_2884() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(384), int8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), int8]) {
  %1127 = @func_1208() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %1128 = @func_351() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %1129 = cast(meta[relay.Constant][30] /* ty=Tensor[(384), int8] */, dtype="int8") /* ty=Tensor[(384), int8] */;
  %1130 = reshape(%1129, newshape=[4, 8, 12]) /* ty=Tensor[(4, 8, 12), int8] */;
  %1131 = @func_450(%1130) /* ty=(Tensor[(4, 8, 12), bool], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8]) */;
  %1132 = @func_2798() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
  %1133 = @func_1854() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %1134 = @func_616() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %1135 = %1131.1;
  %1136 = cast(%1135, dtype="float32") /* ty=Tensor[(14, 6, 10), float32] */;
  %1137 = reshape(%1136, newshape=[14, 6, 10]) /* ty=Tensor[(14, 6, 10), float32] */;
  %1138 = @func_1262(%1137) /* ty=(Tensor[(14, 6, 10), int8],) */;
  %1139 = %1127.0;
  %1140 = %1128.0;
  %1141 = %1132.3;
  %1142 = %1133.0;
  %1143 = %1134.1;
  %1144 = %1138.0;
  (%1139, %1140, %1135, meta[relay.Constant][30] /* ty=Tensor[(384), int8] */, %1141, %1142, %1143, %1144)
}

def @func_6768() -> (Tensor[(14, 6, 10), uint8],) {
  %1145 = @func_5156() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
  %1146 = %1145.1;
  (%1146,)
}

def @func_616() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
  %1147 = @func_337() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %1148 = @func_82() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %1149 = %1147.0;
  %1150 = %1148.0;
  (%1149, %1150)
}

def @func_1854() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
  %1151 = @func_1320() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
  %1152 = %1151.0;
  %1153 = @func_832() /* ty=Tensor[(14, 6, 10), uint8] */;
  (%1152, %1153)
}

def @func_8979() -> Tensor[(14, 6, 10), uint8] {
  %1154 = @func_6053() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %1154.3
}

def @func_2583(%var_2579: Tensor[(9, 12, 16), float64]) -> Tensor[(9, 12, 16), float64] {
  %1155 = cast(%var_2579, dtype="float64") /* ty=Tensor[(9, 12, 16), float64] */;
  cos(%1155) /* ty=Tensor[(9, 12, 16), float64] */
}

def @func_13288() -> (Tensor[(14, 6, 10), float64],) {
  %1156 = @func_9033() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(3, 6, 4), float32], Tensor[(72), float32], Tensor[(14, 6, 10), float64]) */;
  %1157 = %1156.3;
  (%1157,)
}

def @func_8864(%var_8853: Tensor[(6, 1, 15), float32], %var_8861: Tensor[(3, 24), float32]) -> (Tensor[(6, 1, 15), float32], Tensor[(3, 6, 4), float32], Tensor[(3, 24), float32]) {
  %1158 = cast(%var_8853, dtype="float32") /* ty=Tensor[(6, 1, 15), float32] */;
  %1159 = cast(%var_8861, dtype="float32") /* ty=Tensor[(3, 24), float32] */;
  %1160 = reshape(%1159, newshape=[3, 6, 4]) /* ty=Tensor[(3, 6, 4), float32] */;
  %1161 = erf(%1158) /* ty=Tensor[(6, 1, 15), float32] */;
  %1162 = @func_6326(%1160) /* ty=Tensor[(3, 6, 4), float32] */;
  (%1161, %1162, %var_8861)
}

def @func_3225() -> Tensor[(14, 6, 10), float64] {
  %1163 = @func_1395() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %1163.2
}

def @func_7312(%var_7297: Tensor[(3, 13, 5), float32], %var_7298: Tensor[(3, 13, 5), float32]) -> (Tensor[(3, 13, 5), float32], Tensor[(1, 12, 10), float64], Tensor[(120), float64], Tensor[(14, 6, 10), uint8]) {
  %1164 = cast(%var_7298, dtype="float32") /* ty=Tensor[(3, 13, 5), float32] */;
  %1165 = shape_of(%var_7297, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1166 = cast(%var_7297, dtype="float32") /* ty=Tensor[(3, 13, 5), float32] */;
  %1167 = dyn.reshape(%1164, %1165, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1168 = cast(meta[relay.Constant][31] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %1169 = reshape(%1168, newshape=[1, 12, 10]) /* ty=Tensor[(1, 12, 10), float64] */;
  %1170 = @func_5919(%1169) /* ty=(Tensor[(1, 12, 10), float64],) */;
  %1171 = @func_5011() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(384), int8], Tensor[(14, 6, 10), uint8]) */;
  %1172 = floor_divide(%1166, %1167) /* ty=Tensor[(3, 13, 5), float32] */;
  %1173 = %1170.0;
  %1174 = %1171.0;
  (%1172, %1173, meta[relay.Constant][31] /* ty=Tensor[(120), float64] */, %1174)
}

def @func_10248() -> Tensor[(14, 6, 10), uint8] {
  %1175 = @func_351() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %1175.0
}

def @func_9301() -> Tensor[(14, 6, 10), float32] {
  %1176 = @func_6397() /* ty=(Tensor[(14, 6, 10), float32],) */;
  %1176.0
}

def @func_14190() -> Tensor[(14, 6, 10), uint8] {
  %1177 = @func_11426() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
  %1177.2
}

def @func_4307() -> Tensor[(14, 6, 10), float64] {
  %1178 = @func_997() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32]) */;
  %1178.0
}

def @func_5397() -> (Tensor[(14, 6, 10), float32],) {
  %1179 = @func_2745() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %1180 = %1179.0;
  %1181 = cast(%1180, dtype="float32") /* ty=Tensor[(14, 6, 10), float32] */;
  %1182 = tan(%1181) /* ty=Tensor[(14, 6, 10), float32] */;
  (%1182,)
}

def @func_3169() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
  %1183 = @func_1320() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
  %1184 = %1183.0;
  %1185 = @func_2512() /* ty=Tensor[(14, 6, 10), float64] */;
  (%1184, %1185)
}

def @func_11607() -> (Tensor[(14, 6, 10), uint8],) {
  %1186 = @func_8194() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %1187 = %1186.0;
  (%1187,)
}

def @func_5648() -> (Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(9, 12, 16), float64], Tensor[(14, 6, 10), uint8]) {
  %1188 = @func_1591() /* ty=(Tensor[(14, 6, 10), float32],) */;
  %1189 = @func_4537() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %1190 = @func_2745() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %1191 = @func_2745() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %1192 = @func_5167() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %1193 = @func_4865() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(9, 12, 16), float64], Tensor[(1728), float64]) */;
  %1194 = @func_3423() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %1195 = %1188.0;
  %1196 = %1189.0;
  %1197 = %1190.0;
  %1198 = %1191.0;
  %1199 = %1192.0;
  %1200 = %1193.1;
  %1201 = %1194.0;
  (%1195, %1196, %1197, %1198, %1199, %1200, %1201)
}

def @func_6397() -> (Tensor[(14, 6, 10), float32],) {
  %1202 = @func_1731() /* ty=Tensor[(14, 6, 10), float32] */;
  (%1202,)
}

def @func_4527() -> Tensor[(14, 6, 10), uint8] {
  %1203 = @func_3423() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %1203.0
}

def @func_11331() -> Tensor[(1728), float64] {
  %1204 = @func_4865() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(9, 12, 16), float64], Tensor[(1728), float64]) */;
  %1204.2
}

def @func_5564(%var_5555: Tensor[(14, 6, 10), float64]) -> Tensor[(14, 6, 10), bool] {
  %1205 = @func_3313() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %1206 = %1205.2;
  %1207 = cast(%var_5555, dtype="bool") /* ty=Tensor[(14, 6, 10), bool] */;
  %1208 = shape_of(%1206, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1209 = cast(%1206, dtype="bool") /* ty=Tensor[(14, 6, 10), bool] */;
  %1210 = dyn.reshape(%1207, %1208, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%1209, %1210) /* ty=Tensor[(14, 6, 10), bool] */
}

def @func_5156() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
  %1211 = @func_2300() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
  %1212 = @func_1968() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %1213 = %1211.1;
  %1214 = %1212.0;
  (%1213, %1214)
}

def @func_1438(%var_1414: int32) -> (Tensor[(11, 11, 8), int32], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float32]) {
  %1215 = cast(%var_1414, dtype="int32") /* ty=int32 */;
  %1216 = cast(meta[relay.Constant][32] /* ty=Tensor[(11, 11, 8), int32] */, dtype="int32") /* ty=Tensor[(11, 11, 8), int32] */;
  %1217 = @func_897() /* ty=(Tensor[(14, 6, 10), float32],) */;
  %1218 = @func_897() /* ty=(Tensor[(14, 6, 10), float32],) */;
  %1219 = bitwise_xor(%1215, %1216) /* ty=Tensor[(11, 11, 8), int32] */;
  %1220 = %1217.0;
  %1221 = %1218.0;
  (%1219, %1220, %1221)
}

def @func_1050(%var_1029: Tensor[(16, 10, 6), bool]) -> (Tensor[(14, 6, 10), uint8], Tensor[(16, 10, 6), float32]) {
  %1222 = @func_920() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %1223 = cast(meta[relay.Constant][33] /* ty=Tensor[(16, 10, 6), bool] */, dtype="bool") /* ty=Tensor[(16, 10, 6), bool] */;
  %1224 = shape_of(%var_1029, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1225 = cast(%var_1029, dtype="bool") /* ty=Tensor[(16, 10, 6), bool] */;
  %1226 = dyn.reshape(%1223, %1224, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1227 = logical_and(%1225, %1226) /* ty=Tensor[(16, 10, 6), bool] */;
  %1228 = cast(%1227, dtype="float32") /* ty=Tensor[(16, 10, 6), float32] */;
  %1229 = %1222.0;
  %1230 = tan(%1228) /* ty=Tensor[(16, 10, 6), float32] */;
  (%1229, %1230)
}

def @func_5919(%var_5910: Tensor[(1, 12, 10), float64]) -> (Tensor[(1, 12, 10), float64],) {
  %1231 = cast(%var_5910, dtype="float64") /* ty=Tensor[(1, 12, 10), float64] */;
  %1232 = exp(%1231) /* ty=Tensor[(1, 12, 10), float64] */;
  (%1232,)
}

def @func_920() -> (Tensor[(14, 6, 10), uint8],) {
  %1233 = @func_832() /* ty=Tensor[(14, 6, 10), uint8] */;
  (%1233,)
}

def @func_4811() -> (Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(360), bool], Tensor[(360), bool], Tensor[(14, 6, 10), float64]) {
  %1234 = @func_2798() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
  %1235 = @func_4405() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %1236 = cast(meta[relay.Constant][34] /* ty=Tensor[(360), bool] */, dtype="bool") /* ty=Tensor[(360), bool] */;
  %1237 = reshape(%1236, newshape=[360]) /* ty=Tensor[(360), bool] */;
  %1238 = @func_4638(%1237) /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], bool, Tensor[(360), bool], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
  %1239 = @func_1454() /* ty=Tensor[(14, 6, 10), float32] */;
  %1240 = %1234.2;
  %1241 = %1235.0;
  %1242 = %1238.3;
  %1243 = @func_2067() /* ty=Tensor[(14, 6, 10), float64] */;
  (%1239, %1240, %1241, %1242, meta[relay.Constant][34] /* ty=Tensor[(360), bool] */, %1243)
}

def @func_13015() -> Tensor[(14, 6, 10), float64] {
  @func_3225() /* ty=Tensor[(14, 6, 10), float64] */
}

def @func_13752() -> (Tensor[(14, 6, 10), float64],) {
  %1244 = @func_4355() /* ty=Tensor[(14, 6, 10), float64] */;
  (%1244,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_3993() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) {
  %4 = fn () -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) {
    %0 = @func_3423() /* ty=(Tensor[(14, 6, 10), uint8],) */;
    %1 = @func_616() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
    %2 = %0.0;
    %3 = %1.1;
    (%2, %3)
  };
  %4() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */
}

def @func_1052(%var_1051: Tensor[(16, 10, 6), bool]) -> (Tensor[(14, 6, 10), uint8], Tensor[(16, 10, 6), float32]) {
  %14 = fn (%var_1029: Tensor[(16, 10, 6), bool]) -> (Tensor[(14, 6, 10), uint8], Tensor[(16, 10, 6), float32]) {
    %5 = @func_920() /* ty=(Tensor[(14, 6, 10), uint8],) */;
    %6 = cast(meta[relay.Constant][0] /* ty=Tensor[(16, 10, 6), bool] */, dtype="bool") /* ty=Tensor[(16, 10, 6), bool] */;
    %7 = shape_of(%var_1029, dtype="int32") /* ty=Tensor[(3), int32] */;
    %8 = cast(%var_1029, dtype="bool") /* ty=Tensor[(16, 10, 6), bool] */;
    %9 = dyn.reshape(%6, %7, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %10 = logical_and(%8, %9) /* ty=Tensor[(16, 10, 6), bool] */;
    %11 = cast(%10, dtype="float32") /* ty=Tensor[(16, 10, 6), float32] */;
    %12 = %5.0;
    %13 = tan(%11) /* ty=Tensor[(16, 10, 6), float32] */;
    (%12, %13)
  };
  %14(%var_1051) /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(16, 10, 6), float32]) */
}

def @func_3225() -> Tensor[(14, 6, 10), float64] {
  %15 = @func_1395() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %15.2
}

def @func_1208() -> (Tensor[(14, 6, 10), uint8],) {
  %16 = @func_832() /* ty=Tensor[(14, 6, 10), uint8] */;
  (%16,)
}

def @func_1397() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
  @func_1395() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */
}

def @func_6005(%var_6003: Tensor[(3, 14, 13), float32]) -> (Tensor[(3, 14, 13), float32], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint64], Tensor[(14, 6, 10), uint8], bool, Tensor[(360), bool], Tensor[(14, 6, 10), float64]) {
  @func_6002(%var_6003) /* ty=(Tensor[(3, 14, 13), float32], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint64], Tensor[(14, 6, 10), uint8], bool, Tensor[(360), bool], Tensor[(14, 6, 10), float64]) */
}

def @func_5398() -> (Tensor[(14, 6, 10), float32],) {
  %21 = fn () -> (Tensor[(14, 6, 10), float32],) {
    %17 = @func_2745() /* ty=(Tensor[(14, 6, 10), float64],) */;
    %18 = %17.0;
    %19 = cast(%18, dtype="float32") /* ty=Tensor[(14, 6, 10), float32] */;
    %20 = tan(%19) /* ty=Tensor[(14, 6, 10), float32] */;
    (%20,)
  };
  %21() /* ty=(Tensor[(14, 6, 10), float32],) */
}

def @func_12160(%var_12157: Tensor[(1, 16, 11), float32], %var_12158: Tensor[(12, 16, 11), float32], %var_12159: Tensor[(360), bool]) -> (Tensor[(14, 6, 10), float32], Tensor[(360), bool], Tensor[(12, 16, 11), float32], Tensor[(14, 6, 10), float64]) {
  @func_12155(%var_12157, %var_12158, %var_12159) /* ty=(Tensor[(14, 6, 10), float32], Tensor[(360), bool], Tensor[(12, 16, 11), float32], Tensor[(14, 6, 10), float64]) */
}

def @func_920() -> (Tensor[(14, 6, 10), uint8],) {
  %22 = @func_832() /* ty=Tensor[(14, 6, 10), uint8] */;
  (%22,)
}

def @func_2769() -> (Tensor[(14, 6, 10), float64],) {
  @func_2767() /* ty=(Tensor[(14, 6, 10), float64],) */
}

def @func_1354() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(384), int8]) {
  %23 = cast(meta[relay.Constant][1] /* ty=Tensor[(384), int8] */, dtype="int8") /* ty=Tensor[(384), int8] */;
  %24 = reshape(%23, newshape=[4, 8, 12]) /* ty=Tensor[(4, 8, 12), int8] */;
  %25 = @func_450(%24) /* ty=(Tensor[(4, 8, 12), bool], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8]) */;
  %26 = @func_832() /* ty=Tensor[(14, 6, 10), uint8] */;
  %27 = %25.3;
  (%26, %27, meta[relay.Constant][1] /* ty=Tensor[(384), int8] */)
}

def @func_14108() -> Tensor[(14, 6, 10), uint8] {
  %28 = @func_3423() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %28.0
}

def @func_4341() -> (Tensor[(14, 6, 10), uint8],) {
  @func_4339() /* ty=(Tensor[(14, 6, 10), uint8],) */
}

def @func_11560() -> Tensor[(14, 6, 10), uint8] {
  @func_9940() /* ty=Tensor[(14, 6, 10), uint8] */
}

def @func_3291() -> (Tensor[(14, 6, 10), float64], Tensor[(840), float64], Tensor[(14, 6, 10), float64]) {
  @func_3289() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(840), float64], Tensor[(14, 6, 10), float64]) */
}

def @func_8055() -> Tensor[(14, 6, 10), float32] {
  %29 = fn () -> Tensor[(14, 6, 10), float32] {
    @func_1508() /* ty=Tensor[(14, 6, 10), float32] */
  };
  %29() /* ty=Tensor[(14, 6, 10), float32] */
}

def @func_4241() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), int8], Tensor[(14, 6, 10), uint8]) {
  @func_4239() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), int8], Tensor[(14, 6, 10), uint8]) */
}

def @func_1623() -> Tensor[(14, 6, 10), uint8] {
  @func_1621() /* ty=Tensor[(14, 6, 10), uint8] */
}

def @func_731() -> (Tensor[(14, 6, 10), bool], Tensor[(14, 6, 10), float64]) {
  %39 = fn () -> (Tensor[(14, 6, 10), bool], Tensor[(14, 6, 10), float64]) {
    %30 = @func_337() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
    %31 = %30.0;
    %32 = cast(meta[relay.Constant][2] /* ty=Tensor[(14, 6, 10), float64] */, dtype="bool") /* ty=Tensor[(14, 6, 10), bool] */;
    %33 = shape_of(%31, dtype="int32") /* ty=Tensor[(3), int32] */;
    %34 = cast(%31, dtype="bool") /* ty=Tensor[(14, 6, 10), bool] */;
    %35 = dyn.reshape(%32, %33, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %36 = @func_616() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
    %37 = less(%34, %35) /* ty=Tensor[(14, 6, 10), bool] */;
    %38 = %36.1;
    (%37, %38)
  };
  %39() /* ty=(Tensor[(14, 6, 10), bool], Tensor[(14, 6, 10), float64]) */
}

def @func_7179() -> (Tensor[(14, 6, 10), float64],) {
  @func_7177() /* ty=(Tensor[(14, 6, 10), float64],) */
}

def @func_4178() -> (Tensor[(14, 6, 10), int8], Tensor[(14, 6, 10), float64]) {
  %40 = @func_2884() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(384), int8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), int8]) */;
  %41 = @func_3169() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %42 = %40.7;
  %43 = %41.1;
  (%42, %43)
}

def @func_7460(%var_7459: Tensor[(8, 1, 13), float64]) -> (Tensor[(8, 1, 13), float64], Tensor[(8, 1, 13), float64]) {
  %48 = fn (%var_7434: Tensor[(8, 1, 13), float64]) -> (Tensor[(8, 1, 13), float64], Tensor[(8, 1, 13), float64]) {
    %44 = cast(%var_7434, dtype="float64") /* ty=Tensor[(8, 1, 13), float64] */;
    %45 = cast(%var_7434, dtype="float64") /* ty=Tensor[(8, 1, 13), float64] */;
    %46 = atan(%44) /* ty=Tensor[(8, 1, 13), float64] */;
    %47 = atanh(%45) /* ty=Tensor[(8, 1, 13), float64] */;
    (%46, %47)
  };
  %48(%var_7459) /* ty=(Tensor[(8, 1, 13), float64], Tensor[(8, 1, 13), float64]) */
}

def @func_8805() -> (Tensor[(14, 6, 10), uint8],) {
  %51 = fn () -> (Tensor[(14, 6, 10), uint8],) {
    %49 = @func_5648() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(9, 12, 16), float64], Tensor[(14, 6, 10), uint8]) */;
    %50 = %49.6;
    (%50,)
  };
  %51() /* ty=(Tensor[(14, 6, 10), uint8],) */
}

def @func_11704() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32]) {
  %56 = fn () -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32]) {
    %52 = @func_337() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
    %53 = @func_997() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32]) */;
    %54 = %52.1;
    %55 = %53.1;
    (%54, %55)
  };
  %56() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32]) */
}

def @func_5649() -> (Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(9, 12, 16), float64], Tensor[(14, 6, 10), uint8]) {
  %71 = fn () -> (Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(9, 12, 16), float64], Tensor[(14, 6, 10), uint8]) {
    %57 = @func_1591() /* ty=(Tensor[(14, 6, 10), float32],) */;
    %58 = @func_4537() /* ty=(Tensor[(14, 6, 10), float64],) */;
    %59 = @func_2745() /* ty=(Tensor[(14, 6, 10), float64],) */;
    %60 = @func_2745() /* ty=(Tensor[(14, 6, 10), float64],) */;
    %61 = @func_5167() /* ty=(Tensor[(14, 6, 10), float64],) */;
    %62 = @func_4865() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(9, 12, 16), float64], Tensor[(1728), float64]) */;
    %63 = @func_3423() /* ty=(Tensor[(14, 6, 10), uint8],) */;
    %64 = %57.0;
    %65 = %58.0;
    %66 = %59.0;
    %67 = %60.0;
    %68 = %61.0;
    %69 = %62.1;
    %70 = %63.0;
    (%64, %65, %66, %67, %68, %69, %70)
  };
  %71() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(9, 12, 16), float64], Tensor[(14, 6, 10), uint8]) */
}

def @func_4121() -> (Tensor[(14, 6, 10), float64],) {
  %72 = @func_3169() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %73 = %72.1;
  (%73,)
}

def @func_353() -> (Tensor[(14, 6, 10), uint8],) {
  @func_351() /* ty=(Tensor[(14, 6, 10), uint8],) */
}

def @func_4406() -> (Tensor[(14, 6, 10), uint8],) {
  %76 = fn () -> (Tensor[(14, 6, 10), uint8],) {
    %74 = @func_1968() /* ty=(Tensor[(14, 6, 10), uint8],) */;
    %75 = %74.0;
    (%75,)
  };
  %76() /* ty=(Tensor[(14, 6, 10), uint8],) */
}

def @func_4641(%var_4639: Tensor[(360), bool]) -> (Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], bool, Tensor[(360), bool], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
  @func_4638(%var_4639) /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], bool, Tensor[(360), bool], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */
}

def @func_4813() -> (Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(360), bool], Tensor[(360), bool], Tensor[(14, 6, 10), float64]) {
  @func_4811() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(360), bool], Tensor[(360), bool], Tensor[(14, 6, 10), float64]) */
}

def @func_1854() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
  %77 = @func_1320() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
  %78 = %77.0;
  %79 = @func_832() /* ty=Tensor[(14, 6, 10), uint8] */;
  (%78, %79)
}

def @func_10103(%var_10100: Tensor[(1, 15, 14), uint64], %var_10101: Tensor[(924), uint8], %var_10102: Tensor[(1728), float64]) -> (Tensor[(1, 15, 14), uint64], Tensor[(14, 11, 6), float32], Tensor[(924), uint8], Tensor[(9, 12, 16), float64], Tensor[(1728), float64], Tensor[(3, 6, 4), float32]) {
  %94 = fn (%var_10075: Tensor[(1, 15, 14), uint64], %var_10082: Tensor[(924), uint8], %var_10090: Tensor[(1728), float64]) -> (Tensor[(1, 15, 14), uint64], Tensor[(14, 11, 6), float32], Tensor[(924), uint8], Tensor[(9, 12, 16), float64], Tensor[(1728), float64], Tensor[(3, 6, 4), float32]) {
    %80 = cast(meta[relay.Constant][3] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %81 = cast(%var_10075, dtype="uint64") /* ty=Tensor[(1, 15, 14), uint64] */;
    %82 = cast(%var_10082, dtype="uint8") /* ty=Tensor[(924), uint8] */;
    %83 = cast(%var_10082, dtype="uint8") /* ty=Tensor[(924), uint8] */;
    %84 = reshape(%82, newshape=[14, 11, 6]) /* ty=Tensor[(14, 11, 6), uint8] */;
    %85 = reshape(%83, newshape=[14, 11, 6]) /* ty=Tensor[(14, 11, 6), uint8] */;
    %86 = @func_8284(%84, %85) /* ty=(Tensor[(14, 11, 6), bool], Tensor[(14, 11, 6), uint64], Tensor[(14, 11, 6), float32], Tensor[(384), int8]) */;
    %87 = cast(%var_10090, dtype="float64") /* ty=Tensor[(1728), float64] */;
    %88 = reshape(%87, newshape=[9, 12, 16]) /* ty=Tensor[(9, 12, 16), float64] */;
    %89 = @func_9033() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(3, 6, 4), float32], Tensor[(72), float32], Tensor[(14, 6, 10), float64]) */;
    %90 = right_shift(%80, %81) /* ty=Tensor[(1, 15, 14), uint64] */;
    %91 = %86.2;
    %92 = @func_2583(%88) /* ty=Tensor[(9, 12, 16), float64] */;
    %93 = %89.1;
    (%90, %91, %var_10082, %92, %var_10090, %93)
  };
  %94(%var_10100, %var_10101, %var_10102) /* ty=(Tensor[(1, 15, 14), uint64], Tensor[(14, 11, 6), float32], Tensor[(924), uint8], Tensor[(9, 12, 16), float64], Tensor[(1728), float64], Tensor[(3, 6, 4), float32]) */
}

def @func_832() -> Tensor[(14, 6, 10), uint8] {
  %95 = @func_351() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %95.0
}

def @func_4239() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), int8], Tensor[(14, 6, 10), uint8]) {
  %96 = @func_2327() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %97 = @func_832() /* ty=Tensor[(14, 6, 10), uint8] */;
  %98 = cast(%97, dtype="float32") /* ty=Tensor[(14, 6, 10), float32] */;
  %99 = reshape(%98, newshape=[14, 6, 10]) /* ty=Tensor[(14, 6, 10), float32] */;
  %100 = @func_1262(%99) /* ty=(Tensor[(14, 6, 10), int8],) */;
  %101 = @func_3423() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %102 = %96.0;
  %103 = %100.0;
  %104 = %101.0;
  (%97, %102, %103, %104)
}

def @func_11054(%var_11044: Tensor[(2, 480), bool]) -> (Tensor[(14, 6, 10), uint8], Tensor[(960), bool], Tensor[(2, 480), bool]) {
  %105 = @func_10773() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
  %106 = cast(%var_11044, dtype="bool") /* ty=Tensor[(2, 480), bool] */;
  %107 = reshape(%106, newshape=[960]) /* ty=Tensor[(960), bool] */;
  %108 = @func_3863(%107) /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(960), bool], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(16, 10, 6), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
  %109 = %105.1;
  %110 = %108.3;
  (%109, %110, %var_11044)
}

def @func_2747() -> (Tensor[(14, 6, 10), float64],) {
  @func_2745() /* ty=(Tensor[(14, 6, 10), float64],) */
}

def @func_12702() -> (Tensor[(14, 6, 10), uint64], Tensor[(14, 6, 10), uint8]) {
  %115 = fn () -> (Tensor[(14, 6, 10), uint64], Tensor[(14, 6, 10), uint8]) {
    %111 = @func_9447() /* ty=(Tensor[(14, 6, 10), uint64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
    %112 = @func_2327() /* ty=(Tensor[(14, 6, 10), uint8],) */;
    %113 = %111.0;
    %114 = %112.0;
    (%113, %114)
  };
  %115() /* ty=(Tensor[(14, 6, 10), uint64], Tensor[(14, 6, 10), uint8]) */
}

def @func_5268(%var_5266: Tensor[(16, 8, 13), float32], %var_5267: Tensor[(480, 2), bool]) -> (Tensor[(16, 8, 13), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(480, 2), bool], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
  @func_5264(%var_5266, %var_5267) /* ty=(Tensor[(16, 8, 13), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(480, 2), bool], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */
}

def @func_11102() -> Tensor[(14, 6, 10), uint8] {
  %117 = fn () -> Tensor[(14, 6, 10), uint8] {
    %116 = @func_5835() /* ty=(Tensor[(14, 6, 10), uint8],) */;
    %116.0
  };
  %117() /* ty=Tensor[(14, 6, 10), uint8] */
}

def @func_9207(%var_9205: Tensor[(16, 13, 6), uint64]) -> (Tensor[(16, 13, 6), uint64], Tensor[(14, 6, 10), uint8]) {
  @func_9204(%var_9205) /* ty=(Tensor[(16, 13, 6), uint64], Tensor[(14, 6, 10), uint8]) */
}

def @func_3658() -> (Tensor[(384), int8],) {
  @func_3656() /* ty=(Tensor[(384), int8],) */
}

def @func_10250() -> Tensor[(14, 6, 10), uint8] {
  @func_10248() /* ty=Tensor[(14, 6, 10), uint8] */
}

def @func_11017() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
  %122 = fn () -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
    %118 = @func_6650() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
    %119 = @func_689() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
    %120 = %118.1;
    %121 = %119.2;
    (%120, %121)
  };
  %122() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */
}

def @func_9204(%var_9188: Tensor[(16, 13, 6), uint64]) -> (Tensor[(16, 13, 6), uint64], Tensor[(14, 6, 10), uint8]) {
  %123 = cast(meta[relay.Constant][4] /* ty=Tensor[(16, 13, 6), uint64] */, dtype="uint64") /* ty=Tensor[(16, 13, 6), uint64] */;
  %124 = shape_of(%var_9188, dtype="int32") /* ty=Tensor[(3), int32] */;
  %125 = cast(%var_9188, dtype="uint64") /* ty=Tensor[(16, 13, 6), uint64] */;
  %126 = dyn.reshape(%123, %124, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %127 = @func_5130() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
  %128 = right_shift(%125, %126) /* ty=Tensor[(16, 13, 6), uint64] */;
  %129 = %127.0;
  (%128, %129)
}

def @func_11427() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
  %135 = fn () -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
    %130 = @func_4811() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(360), bool], Tensor[(360), bool], Tensor[(14, 6, 10), float64]) */;
    %131 = @func_8194() /* ty=(Tensor[(14, 6, 10), uint8],) */;
    %132 = @func_6477() /* ty=Tensor[(14, 6, 10), float64] */;
    %133 = %130.1;
    %134 = %131.0;
    (%132, %133, %134)
  };
  %135() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */
}

def @func_9448() -> (Tensor[(14, 6, 10), uint64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
  %144 = fn () -> (Tensor[(14, 6, 10), uint64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
    %136 = @func_8378() /* ty=(Tensor[(14, 6, 10), uint64], Tensor[(1728), uint64], Tensor[(1728), float64]) */;
    %137 = %136.0;
    %138 = cast(%137, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
    %139 = reshape(%138, newshape=[14, 6, 10]) /* ty=Tensor[(14, 6, 10), float64] */;
    %140 = @func_293(%139) /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint16], Tensor[(14, 6, 10), float64]) */;
    %141 = @func_689() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
    %142 = %140.1;
    %143 = %141.1;
    (%137, %142, %143)
  };
  %144() /* ty=(Tensor[(14, 6, 10), uint64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */
}

def @func_3423() -> (Tensor[(14, 6, 10), uint8],) {
  %145 = @func_2419() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %146 = %145.1;
  (%146,)
}

def @func_7380() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) {
  %151 = fn () -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) {
    %147 = @func_5835() /* ty=(Tensor[(14, 6, 10), uint8],) */;
    %148 = @func_4045() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64]) */;
    %149 = %147.0;
    %150 = %148.1;
    (%149, %150)
  };
  %151() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */
}

def @func_4760() -> (Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
  %157 = fn () -> (Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
    %152 = @func_3970() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32]) */;
    %153 = @func_1854() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
    %154 = %152.1;
    %155 = %153.0;
    %156 = @func_2512() /* ty=Tensor[(14, 6, 10), float64] */;
    (%154, %155, %156)
  };
  %157() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */
}

def @func_12081() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
  @func_12079() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */
}

def @func_3289() -> (Tensor[(14, 6, 10), float64], Tensor[(840), float64], Tensor[(14, 6, 10), float64]) {
  %158 = @func_2731() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %159 = %158.0;
  %160 = cast(%159, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %161 = reshape(%160, newshape=[840]) /* ty=Tensor[(840), float64] */;
  %162 = @func_3011(%161) /* ty=(Tensor[(384), int8], Tensor[(14, 6, 10), float64], Tensor[(840), float64], Tensor[(14, 16, 13), int32], Tensor[(4, 728), int32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %163 = @func_2731() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %164 = %162.2;
  %165 = %163.1;
  (%159, %164, %165)
}

def @func_13179() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint64], Tensor[(14, 6, 10), uint64], Tensor[(14, 6, 10), float32]) {
  %166 = @func_1208() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %167 = @func_3384() /* ty=(Tensor[(14, 6, 10), uint64],) */;
  %168 = @func_3384() /* ty=(Tensor[(14, 6, 10), uint64],) */;
  %169 = %166.0;
  %170 = @func_9311() /* ty=Tensor[(14, 6, 10), float64] */;
  %171 = %167.0;
  %172 = %168.0;
  %173 = @func_1731() /* ty=Tensor[(14, 6, 10), float32] */;
  (%169, %170, %171, %172, %173)
}

def @func_1593() -> (Tensor[(14, 6, 10), float32],) {
  @func_1591() /* ty=(Tensor[(14, 6, 10), float32],) */
}

def @func_2421() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
  @func_2419() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */
}

def @func_2301() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
  %178 = fn () -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
    %174 = @func_1968() /* ty=(Tensor[(14, 6, 10), uint8],) */;
    %175 = @func_1956() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
    %176 = %174.0;
    %177 = %175.0;
    (%176, %177)
  };
  %178() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */
}

def @func_8951(%var_8949: Tensor[(14, 8, 7), uint8], %var_8950: Tensor[(14, 8, 7), uint8]) -> (Tensor[(14, 8, 7), float64], Tensor[(14, 8, 7), float32]) {
  @func_8947(%var_8949, %var_8950) /* ty=(Tensor[(14, 8, 7), float64], Tensor[(14, 8, 7), float32]) */
}

def @func_10167() -> (Tensor[(14, 6, 10), float32], Tensor[(1728), float64], Tensor[(14, 6, 10), uint8]) {
  %186 = fn () -> (Tensor[(14, 6, 10), float32], Tensor[(1728), float64], Tensor[(14, 6, 10), uint8]) {
    %179 = @func_8378() /* ty=(Tensor[(14, 6, 10), uint64], Tensor[(1728), uint64], Tensor[(1728), float64]) */;
    %180 = @func_1508() /* ty=Tensor[(14, 6, 10), float32] */;
    %181 = cast(%180, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
    %182 = reshape(%181, newshape=[840]) /* ty=Tensor[(840), float64] */;
    %183 = @func_3011(%182) /* ty=(Tensor[(384), int8], Tensor[(14, 6, 10), float64], Tensor[(840), float64], Tensor[(14, 16, 13), int32], Tensor[(4, 728), int32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
    %184 = %179.2;
    %185 = %183.7;
    (%180, %184, %185)
  };
  %186() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(1728), float64], Tensor[(14, 6, 10), uint8]) */
}

def @func_13960() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
  @func_13958() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */
}

def @func_10325() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) {
  %191 = fn () -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) {
    %187 = @func_920() /* ty=(Tensor[(14, 6, 10), uint8],) */;
    %188 = @func_5167() /* ty=(Tensor[(14, 6, 10), float64],) */;
    %189 = %187.0;
    %190 = %188.0;
    (%189, %190)
  };
  %191() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */
}

def @func_1811() -> (Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), bool], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
  %201 = fn () -> (Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), bool], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
    %192 = @func_934() /* ty=(Tensor[(14, 6, 10), float32],) */;
    %193 = @func_1208() /* ty=(Tensor[(14, 6, 10), uint8],) */;
    %194 = @func_730() /* ty=(Tensor[(14, 6, 10), bool], Tensor[(14, 6, 10), float64]) */;
    %195 = @func_1141() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float32]) */;
    %196 = %192.0;
    %197 = %193.0;
    %198 = %194.0;
    %199 = @func_1621() /* ty=Tensor[(14, 6, 10), uint8] */;
    %200 = %195.0;
    (%196, %197, %198, %199, %200)
  };
  %201() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), bool], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */
}

def @func_13863() -> (Tensor[(14, 6, 10), uint8], Tensor[(1728), float64]) {
  @func_13861() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(1728), float64]) */
}

def @func_10583() -> Tensor[(14, 6, 10), uint8] {
  %203 = fn () -> Tensor[(14, 6, 10), uint8] {
    %202 = @func_8545() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(384), int8], Tensor[(840), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
    %202.4
  };
  %203() /* ty=Tensor[(14, 6, 10), uint8] */
}

def @func_5476() -> Tensor[(14, 6, 10), uint8] {
  @func_5474() /* ty=Tensor[(14, 6, 10), uint8] */
}

def @func_6124() -> Tensor[(384), int8] {
  @func_6122() /* ty=Tensor[(384), int8] */
}

def @func_6768() -> (Tensor[(14, 6, 10), uint8],) {
  %204 = @func_5156() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
  %205 = %204.1;
  (%205,)
}

def @func_4538() -> (Tensor[(14, 6, 10), float64],) {
  %208 = fn () -> (Tensor[(14, 6, 10), float64],) {
    %206 = @func_3313() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
    %207 = %206.2;
    (%207,)
  };
  %208() /* ty=(Tensor[(14, 6, 10), float64],) */
}

def @func_13421() -> (Tensor[(14, 6, 10), uint8],) {
  @func_13419() /* ty=(Tensor[(14, 6, 10), uint8],) */
}

def @func_3706() -> Tensor[(14, 6, 10), uint8] {
  @func_3704() /* ty=Tensor[(14, 6, 10), uint8] */
}

def @func_10938() -> Tensor[(14, 6, 10), uint8] {
  %210 = fn () -> Tensor[(14, 6, 10), uint8] {
    %209 = @func_5774() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
    %209.1
  };
  %210() /* ty=Tensor[(14, 6, 10), uint8] */
}

def @func_5919(%var_5910: Tensor[(1, 12, 10), float64]) -> (Tensor[(1, 12, 10), float64],) {
  %211 = cast(%var_5910, dtype="float64") /* ty=Tensor[(1, 12, 10), float64] */;
  %212 = exp(%211) /* ty=Tensor[(1, 12, 10), float64] */;
  (%212,)
}

def @func_14058() -> (Tensor[(14, 6, 10), float32],) {
  %214 = fn () -> (Tensor[(14, 6, 10), float32],) {
    %213 = @func_10061() /* ty=Tensor[(14, 6, 10), float32] */;
    (%213,)
  };
  %214() /* ty=(Tensor[(14, 6, 10), float32],) */
}

def @func_922() -> (Tensor[(14, 6, 10), uint8],) {
  @func_920() /* ty=(Tensor[(14, 6, 10), uint8],) */
}

def @func_802() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
  @func_800() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */
}

def @func_6650() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) {
  %215 = @func_578() /* ty=Tensor[(14, 6, 10), uint8] */;
  %216 = @func_5316() /* ty=Tensor[(14, 6, 10), float64] */;
  (%215, %216)
}

def @func_4425() -> Tensor[(384), int8] {
  %218 = fn () -> Tensor[(384), int8] {
    %217 = @func_3656() /* ty=(Tensor[(384), int8],) */;
    %217.0
  };
  %218() /* ty=Tensor[(384), int8] */
}

def @func_9184() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
  %227 = fn () -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
    %219 = @func_4759() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
    %220 = @func_9033() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(3, 6, 4), float32], Tensor[(72), float32], Tensor[(14, 6, 10), float64]) */;
    %221 = @func_8711() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
    %222 = @func_3313() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
    %223 = %219.1;
    %224 = %220.3;
    %225 = %221.0;
    %226 = %222.2;
    (%223, %224, %225, %226)
  };
  %227() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */
}

def @func_10468() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
  %232 = fn () -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
    %228 = @func_2327() /* ty=(Tensor[(14, 6, 10), uint8],) */;
    %229 = @func_5648() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(9, 12, 16), float64], Tensor[(14, 6, 10), uint8]) */;
    %230 = %228.0;
    %231 = %229.6;
    (%230, %231)
  };
  %232() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */
}

def @func_10650() -> Tensor[(14, 6, 10), uint8] {
  %233 = @func_6768() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %233.0
}

def @func_13112(%var_13056: Tensor[(16, 4, 6), int64]) -> (Tensor[(16, 4, 6), float64], Tensor[(14, 6, 10), float64]) {
  %234 = cast(meta[relay.Constant][5] /* ty=Tensor[(16, 4, 6), int64] */, dtype="int64") /* ty=Tensor[(16, 4, 6), int64] */;
  %235 = shape_of(%var_13056, dtype="int32") /* ty=Tensor[(3), int32] */;
  %236 = cast(%var_13056, dtype="int64") /* ty=Tensor[(16, 4, 6), int64] */;
  %237 = dyn.reshape(%234, %235, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %238 = left_shift(%236, %237) /* ty=Tensor[(16, 4, 6), int64] */;
  %239 = cast(%238, dtype="float64") /* ty=Tensor[(16, 4, 6), float64] */;
  %240 = @func_800() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %241 = cos(%239) /* ty=Tensor[(16, 4, 6), float64] */;
  %242 = %240.1;
  (%241, %242)
}

def @func_2745() -> (Tensor[(14, 6, 10), float64],) {
  %243 = @func_1701() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %244 = %243.0;
  (%244,)
}

def @func_6636(%var_6634: Tensor[(15, 16, 13), uint64], %var_6635: Tensor[(15, 16, 13), float32]) -> (Tensor[(15, 16, 13), bool], Tensor[(15, 16, 13), float64]) {
  %259 = fn (%var_6603: Tensor[(15, 16, 13), uint64], %var_6620: Tensor[(15, 16, 13), float32]) -> (Tensor[(15, 16, 13), bool], Tensor[(15, 16, 13), float64]) {
    %245 = cast(%var_6603, dtype="bool") /* ty=Tensor[(15, 16, 13), bool] */;
    %246 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(15, 16, 13), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %247 = cast(meta[relay.Constant][6] /* ty=Tensor[(15, 16, 13), uint64] */, dtype="bool") /* ty=Tensor[(15, 16, 13), bool] */;
    %248 = dyn.reshape(%245, %246, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %249 = cast(meta[relay.Constant][6] /* ty=Tensor[(15, 16, 13), uint64] */, dtype="float32") /* ty=Tensor[(15, 16, 13), float32] */;
    %250 = asin(%249) /* ty=Tensor[(15, 16, 13), float32] */;
    %251 = cast(%var_6620, dtype="bool") /* ty=Tensor[(15, 16, 13), bool] */;
    %252 = shape_of(%250, dtype="int32") /* ty=Tensor[(3), int32] */;
    %253 = cast(%250, dtype="bool") /* ty=Tensor[(15, 16, 13), bool] */;
    %254 = dyn.reshape(%251, %252, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %255 = greater_equal(%253, %254) /* ty=Tensor[(15, 16, 13), bool] */;
    %256 = cast(%255, dtype="float64") /* ty=Tensor[(15, 16, 13), float64] */;
    %257 = less(%247, %248) /* ty=Tensor[(15, 16, 13), bool] */;
    %258 = sin(%256) /* ty=Tensor[(15, 16, 13), float64] */;
    (%257, %258)
  };
  %259(%var_6634, %var_6635) /* ty=(Tensor[(15, 16, 13), bool], Tensor[(15, 16, 13), float64]) */
}

def @func_6689() -> Tensor[(14, 6, 10), float64] {
  %261 = fn () -> Tensor[(14, 6, 10), float64] {
    %260 = @func_2767() /* ty=(Tensor[(14, 6, 10), float64],) */;
    %260.0
  };
  %261() /* ty=Tensor[(14, 6, 10), float64] */
}

def @func_13933() -> (Tensor[(14, 6, 10), float32],) {
  %264 = fn () -> (Tensor[(14, 6, 10), float32],) {
    %262 = @func_1093() /* ty=(Tensor[(14, 6, 10), float32],) */;
    %263 = %262.0;
    (%263,)
  };
  %264() /* ty=(Tensor[(14, 6, 10), float32],) */
}

def @func_12416(%var_12415: Tensor[(960), bool]) -> (Tensor[(14, 6, 10), uint8], Tensor[(960), bool], Tensor[(960), bool], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
  %274 = fn (%var_12381: Tensor[(960), bool]) -> (Tensor[(14, 6, 10), uint8], Tensor[(960), bool], Tensor[(960), bool], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
    %265 = @func_8194() /* ty=(Tensor[(14, 6, 10), uint8],) */;
    %266 = cast(%var_12381, dtype="bool") /* ty=Tensor[(960), bool] */;
    %267 = reshape(%266, newshape=[2, 480]) /* ty=Tensor[(2, 480), bool] */;
    %268 = @func_11054(%267) /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(960), bool], Tensor[(2, 480), bool]) */;
    %269 = @func_6650() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
    %270 = %265.0;
    %271 = %268.1;
    %272 = @func_3704() /* ty=Tensor[(14, 6, 10), uint8] */;
    %273 = %269.0;
    (%270, %271, %var_12381, %272, %273)
  };
  %274(%var_12415) /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(960), bool], Tensor[(960), bool], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */
}

def @func_12245() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32]) {
  %277 = fn () -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32]) {
    %275 = @func_4344() /* ty=Tensor[(14, 6, 10), uint8] */;
    %276 = @func_1454() /* ty=Tensor[(14, 6, 10), float32] */;
    (%275, %276)
  };
  %277() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32]) */
}

def @func_11333() -> Tensor[(1728), float64] {
  @func_11331() /* ty=Tensor[(1728), float64] */
}

def @func_2885() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(384), int8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), int8]) {
  %296 = fn () -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(384), int8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), int8]) {
    %278 = @func_1208() /* ty=(Tensor[(14, 6, 10), uint8],) */;
    %279 = @func_351() /* ty=(Tensor[(14, 6, 10), uint8],) */;
    %280 = cast(meta[relay.Constant][7] /* ty=Tensor[(384), int8] */, dtype="int8") /* ty=Tensor[(384), int8] */;
    %281 = reshape(%280, newshape=[4, 8, 12]) /* ty=Tensor[(4, 8, 12), int8] */;
    %282 = @func_450(%281) /* ty=(Tensor[(4, 8, 12), bool], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8]) */;
    %283 = @func_2798() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
    %284 = @func_1854() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
    %285 = @func_616() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
    %286 = %282.1;
    %287 = cast(%286, dtype="float32") /* ty=Tensor[(14, 6, 10), float32] */;
    %288 = reshape(%287, newshape=[14, 6, 10]) /* ty=Tensor[(14, 6, 10), float32] */;
    %289 = @func_1262(%288) /* ty=(Tensor[(14, 6, 10), int8],) */;
    %290 = %278.0;
    %291 = %279.0;
    %292 = %283.3;
    %293 = %284.0;
    %294 = %285.1;
    %295 = %289.0;
    (%290, %291, %286, meta[relay.Constant][7] /* ty=Tensor[(384), int8] */, %292, %293, %294, %295)
  };
  %296() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(384), int8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), int8]) */
}

def @func_82() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
  %297 = cast(meta[relay.Constant][8] /* ty=Tensor[(14, 6, 10), float64] */, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %298 = cast(meta[relay.Constant][8] /* ty=Tensor[(14, 6, 10), float64] */, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %299 = sqrt(%297) /* ty=Tensor[(14, 6, 10), float64] */;
  %300 = asin(%298) /* ty=Tensor[(14, 6, 10), float64] */;
  (%299, %300)
}

def @func_10114() -> Tensor[(14, 6, 10), float32] {
  @func_10061() /* ty=Tensor[(14, 6, 10), float32] */
}

def @func_1895() -> (Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float32]) {
  %301 = @func_689() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %302 = %301.0;
  %303 = @func_1731() /* ty=Tensor[(14, 6, 10), float32] */;
  (%302, %303)
}

def @func_11331() -> Tensor[(1728), float64] {
  %304 = @func_4865() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(9, 12, 16), float64], Tensor[(1728), float64]) */;
  %304.2
}

def @func_3866(%var_3864: Tensor[(960), bool]) -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(960), bool], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(16, 10, 6), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) {
  @func_3863(%var_3864) /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(960), bool], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(16, 10, 6), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */
}

def @func_10594(%var_10592: Tensor[(5, 9, 14), int8], %var_10593: Tensor[(5, 9, 14), int8]) -> Tensor[(5, 9, 14), int8] {
  @func_10590(%var_10592, %var_10593) /* ty=Tensor[(5, 9, 14), int8] */
}

def @func_7290() -> (Tensor[(384), int8], Tensor[(14, 6, 10), float64]) {
  %309 = fn () -> (Tensor[(384), int8], Tensor[(14, 6, 10), float64]) {
    %305 = @func_1354() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(384), int8]) */;
    %306 = @func_2731() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
    %307 = %305.2;
    %308 = %306.1;
    (%307, %308)
  };
  %309() /* ty=(Tensor[(384), int8], Tensor[(14, 6, 10), float64]) */
}

def @func_7316(%var_7314: Tensor[(3, 13, 5), float32], %var_7315: Tensor[(3, 13, 5), float32]) -> (Tensor[(3, 13, 5), float32], Tensor[(1, 12, 10), float64], Tensor[(120), float64], Tensor[(14, 6, 10), uint8]) {
  @func_7312(%var_7314, %var_7315) /* ty=(Tensor[(3, 13, 5), float32], Tensor[(1, 12, 10), float64], Tensor[(120), float64], Tensor[(14, 6, 10), uint8]) */
}

def @func_5719(%var_5718: int16) -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), int8], Tensor[(9, 11, 3), int16], int16) {
  %317 = fn (%var_5704: int16) -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), int8], Tensor[(9, 11, 3), int16], int16) {
    %310 = @func_1810() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), bool], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
    %311 = @func_4239() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), int8], Tensor[(14, 6, 10), uint8]) */;
    %312 = cast(%var_5704, dtype="int16") /* ty=int16 */;
    %313 = reshape(%312, newshape=[]) /* ty=int16 */;
    %314 = %310.4;
    %315 = %311.2;
    %316 = @func_5434(%313) /* ty=Tensor[(9, 11, 3), int16] */;
    (%314, %315, %316, %var_5704)
  };
  %317(%var_5718) /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), int8], Tensor[(9, 11, 3), int16], int16) */
}

def @func_5775() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
  %321 = fn () -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
    %318 = @func_3313() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
    %319 = %318.0;
    %320 = @func_578() /* ty=Tensor[(14, 6, 10), uint8] */;
    (%319, %320)
  };
  %321() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */
}

def @func_8947(%var_8912: Tensor[(14, 8, 7), uint8], %var_8913: Tensor[(14, 8, 7), uint8]) -> (Tensor[(14, 8, 7), float64], Tensor[(14, 8, 7), float32]) {
  %322 = cast(%var_8912, dtype="float32") /* ty=Tensor[(14, 8, 7), float32] */;
  %323 = acosh(%322) /* ty=Tensor[(14, 8, 7), float32] */;
  %324 = cast(%323, dtype="float64") /* ty=Tensor[(14, 8, 7), float64] */;
  %325 = shape_of(%var_8912, dtype="int32") /* ty=Tensor[(3), int32] */;
  %326 = cast(%var_8912, dtype="float64") /* ty=Tensor[(14, 8, 7), float64] */;
  %327 = dyn.reshape(%324, %325, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %328 = cast(%var_8913, dtype="uint8") /* ty=Tensor[(14, 8, 7), uint8] */;
  %329 = shape_of(%var_8912, dtype="int32") /* ty=Tensor[(3), int32] */;
  %330 = cast(%var_8912, dtype="uint8") /* ty=Tensor[(14, 8, 7), uint8] */;
  %331 = dyn.reshape(%328, %329, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %332 = logical_xor(%330, %331) /* ty=Tensor[(14, 8, 7), uint8] */;
  %333 = cast(%332, dtype="float32") /* ty=Tensor[(14, 8, 7), float32] */;
  %334 = exp(%333) /* ty=Tensor[(14, 8, 7), float32] */;
  %335 = cast(%323, dtype="float32") /* ty=Tensor[(14, 8, 7), float32] */;
  %336 = shape_of(%334, dtype="int32") /* ty=Tensor[(3), int32] */;
  %337 = cast(%334, dtype="float32") /* ty=Tensor[(14, 8, 7), float32] */;
  %338 = dyn.reshape(%335, %336, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %339 = floor_divide(%326, %327) /* ty=Tensor[(14, 8, 7), float64] */;
  %340 = mod(%337, %338) /* ty=Tensor[(14, 8, 7), float32] */;
  (%339, %340)
}

def @func_2586(%var_2584: Tensor[(9, 12, 16), float64]) -> Tensor[(9, 12, 16), float64] {
  @func_2583(%var_2584) /* ty=Tensor[(9, 12, 16), float64] */
}

def @func_6915(%var_6912: int64, %var_6913: Tensor[(2, 1, 14), int64], %var_6914: Tensor[(2, 1, 14), float32]) -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(2, ?, 14), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(9, 11, 3), int16]) {
  @func_6910(%var_6912, %var_6913, %var_6914) /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(2, ?, 14), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(9, 11, 3), int16]) */
}

def @func_5264(%var_5210: Tensor[(16, 8, 13), float32], %var_5243: Tensor[(480, 2), bool]) -> (Tensor[(16, 8, 13), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(480, 2), bool], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
  %341 = cast(%var_5210, dtype="float32") /* ty=Tensor[(16, 8, 13), float32] */;
  %342 = @func_2745() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %343 = cast(%var_5243, dtype="bool") /* ty=Tensor[(480, 2), bool] */;
  %344 = reshape(%343, newshape=[16, 10, 6]) /* ty=Tensor[(16, 10, 6), bool] */;
  %345 = @func_1050(%344) /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(16, 10, 6), float32]) */;
  %346 = @func_3473() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %347 = @func_5085() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %348 = atanh(%341) /* ty=Tensor[(16, 8, 13), float32] */;
  %349 = %342.0;
  %350 = %345.0;
  %351 = %346.0;
  %352 = %347.0;
  (%348, %349, %350, %var_5243, %351, %352)
}

def @func_13500() -> Tensor[(14, 6, 10), float64] {
  %354 = fn () -> Tensor[(14, 6, 10), float64] {
    %353 = @func_12079() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
    %353.1
  };
  %354() /* ty=Tensor[(14, 6, 10), float64] */
}

def @func_4865() -> (Tensor[(14, 6, 10), float64], Tensor[(9, 12, 16), float64], Tensor[(1728), float64]) {
  %355 = @func_3992() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
  %356 = cast(meta[relay.Constant][9] /* ty=Tensor[(1728), float64] */, dtype="float64") /* ty=Tensor[(1728), float64] */;
  %357 = reshape(%356, newshape=[9, 12, 16]) /* ty=Tensor[(9, 12, 16), float64] */;
  %358 = %355.1;
  %359 = @func_2583(%357) /* ty=Tensor[(9, 12, 16), float64] */;
  (%358, %359, meta[relay.Constant][9] /* ty=Tensor[(1728), float64] */)
}

def @func_4180() -> (Tensor[(14, 6, 10), int8], Tensor[(14, 6, 10), float64]) {
  @func_4178() /* ty=(Tensor[(14, 6, 10), int8], Tensor[(14, 6, 10), float64]) */
}

def @func_7921() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], int32, Tensor[(14, 6, 10), float64]) {
  @func_7919() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], int32, Tensor[(14, 6, 10), float64]) */
}

def @func_6477() -> Tensor[(14, 6, 10), float64] {
  %360 = @func_689() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %360.2
}

def @func_4308() -> Tensor[(14, 6, 10), float64] {
  %362 = fn () -> Tensor[(14, 6, 10), float64] {
    %361 = @func_997() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32]) */;
    %361.0
  };
  %362() /* ty=Tensor[(14, 6, 10), float64] */
}

def @func_3227() -> Tensor[(14, 6, 10), float64] {
  @func_3225() /* ty=Tensor[(14, 6, 10), float64] */
}

def @func_2183() -> (Tensor[(14, 6, 10), uint8],) {
  @func_2181() /* ty=(Tensor[(14, 6, 10), uint8],) */
}

def @func_3386() -> (Tensor[(14, 6, 10), uint64],) {
  @func_3384() /* ty=(Tensor[(14, 6, 10), uint64],) */
}

def @func_9126(%var_9117: Tensor[(7, 10, 4), float32]) -> Tensor[(7, 10, 4), float32] {
  %363 = cast(%var_9117, dtype="float32") /* ty=Tensor[(7, 10, 4), float32] */;
  atanh(%363) /* ty=Tensor[(7, 10, 4), float32] */
}

def @func_8587() -> (Tensor[(14, 6, 10), float64],) {
  %364 = @func_1701() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %365 = %364.0;
  (%365,)
}

def @func_3754() -> (Tensor[(14, 6, 10), float32],) {
  %368 = fn () -> (Tensor[(14, 6, 10), float32],) {
    %366 = @func_1093() /* ty=(Tensor[(14, 6, 10), float32],) */;
    %367 = %366.0;
    (%367,)
  };
  %368() /* ty=(Tensor[(14, 6, 10), float32],) */
}

def @func_4867() -> (Tensor[(14, 6, 10), float64], Tensor[(9, 12, 16), float64], Tensor[(1728), float64]) {
  @func_4865() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(9, 12, 16), float64], Tensor[(1728), float64]) */
}

def @func_10386(%var_10384: Tensor[(180, 2), bool]) -> (Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float32], Tensor[(15, 2, 12), int8], bool, Tensor[(180, 2), bool], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32]) {
  @func_10383(%var_10384) /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float32], Tensor[(15, 2, 12), int8], bool, Tensor[(180, 2), bool], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32]) */
}

def @func_10900() -> (Tensor[(2, 11, 2), float32],) {
  %369 = cast(meta[relay.Constant][10] /* ty=Tensor[(2, 11, 2), float32] */, dtype="float32") /* ty=Tensor[(2, 11, 2), float32] */;
  %370 = log10(%369) /* ty=Tensor[(2, 11, 2), float32] */;
  (%370,)
}

def @func_11057(%var_11055: Tensor[(2, 480), bool]) -> (Tensor[(14, 6, 10), uint8], Tensor[(960), bool], Tensor[(2, 480), bool]) {
  @func_11054(%var_11055) /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(960), bool], Tensor[(2, 480), bool]) */
}

def @func_11662() -> Tensor[(14, 6, 10), uint8] {
  @func_1621() /* ty=Tensor[(14, 6, 10), uint8] */
}

def @func_8589() -> (Tensor[(14, 6, 10), float64],) {
  @func_8587() /* ty=(Tensor[(14, 6, 10), float64],) */
}

def @func_6479() -> Tensor[(14, 6, 10), float64] {
  @func_6477() /* ty=Tensor[(14, 6, 10), float64] */
}

def @func_7177() -> (Tensor[(14, 6, 10), float64],) {
  %371 = @func_2419() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %372 = %371.0;
  (%372,)
}

def @func_834() -> Tensor[(14, 6, 10), uint8] {
  @func_832() /* ty=Tensor[(14, 6, 10), uint8] */
}

def @func_2798() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) {
  %373 = @func_616() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %374 = @func_1854() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %375 = @func_1810() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), bool], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
  %376 = @func_337() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %377 = %373.0;
  %378 = %374.0;
  %379 = %375.1;
  %380 = %376.0;
  (%377, %378, %379, %380)
}

def @func_10902() -> (Tensor[(2, 11, 2), float32],) {
  @func_10900() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_9726() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
  @func_9724() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */
}

def @func_3210() -> Tensor[(14, 6, 10), uint64] {
  %381 = @func_2512() /* ty=Tensor[(14, 6, 10), float64] */;
  %382 = @func_730() /* ty=(Tensor[(14, 6, 10), bool], Tensor[(14, 6, 10), float64]) */;
  %383 = %382.0;
  %384 = cast(%383, dtype="uint64") /* ty=Tensor[(14, 6, 10), uint64] */;
  %385 = shape_of(%381, dtype="int32") /* ty=Tensor[(3), int32] */;
  %386 = cast(%381, dtype="uint64") /* ty=Tensor[(14, 6, 10), uint64] */;
  %387 = dyn.reshape(%384, %385, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  right_shift(%386, %387) /* ty=Tensor[(14, 6, 10), uint64] */
}

def @func_7832(%var_7829: Tensor[(1664), float32], %var_7830: int64, %var_7831: Tensor[(28), int64]) -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(960), bool], Tensor[(14, 6, 10), float64], Tensor[(1664), uint64], Tensor[(14, 6, 10), float64], Tensor[(1728), float32], Tensor[(1728), float64], Tensor[(14, 6, 10), float32], Tensor[(3, 6, 4), float32], Tensor[(72), float32], Tensor[(14, 6, 10), uint8], int64, Tensor[(28), int64]) {
  @func_7827(%var_7829, %var_7830, %var_7831) /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(960), bool], Tensor[(14, 6, 10), float64], Tensor[(1664), uint64], Tensor[(14, 6, 10), float64], Tensor[(1728), float32], Tensor[(1728), float64], Tensor[(14, 6, 10), float32], Tensor[(3, 6, 4), float32], Tensor[(72), float32], Tensor[(14, 6, 10), uint8], int64, Tensor[(28), int64]) */
}

def @func_11182(%var_11180: Tensor[(210), uint64], %var_11181: Tensor[(1728), float64]) -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(3, 6, 4), float32], Tensor[(210), uint64], Tensor[(924), uint8], Tensor[(1728), float64], Tensor[(384), int8]) {
  @func_11178(%var_11180, %var_11181) /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(3, 6, 4), float32], Tensor[(210), uint64], Tensor[(924), uint8], Tensor[(1728), float64], Tensor[(384), int8]) */
}

def @func_800() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
  %388 = @func_616() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %389 = %388.1;
  %390 = cast(%389, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %391 = reshape(%390, newshape=[14, 6, 10]) /* ty=Tensor[(14, 6, 10), float64] */;
  %392 = @func_183(%391) /* ty=(Tensor[(14, 6, 10), bool], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), int8], Tensor[(14, 6, 10), float32]) */;
  %393 = %392.1;
  (%389, %393)
}

def @func_4527() -> Tensor[(14, 6, 10), uint8] {
  %394 = @func_3423() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %394.0
}

def @func_9870() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32]) {
  %409 = fn () -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32]) {
    %395 = @func_9532() /* ty=(Tensor[(14, 6, 10), float64],) */;
    %396 = @func_2906() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float32]) */;
    %397 = @func_5130() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
    %398 = @func_7583() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
    %399 = @func_997() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32]) */;
    %400 = @func_7379() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
    %401 = %395.0;
    %402 = %396.1;
    %403 = %397.1;
    %404 = %398.0;
    %405 = @func_4527() /* ty=Tensor[(14, 6, 10), uint8] */;
    %406 = %399.1;
    %407 = %400.1;
    %408 = @func_9301() /* ty=Tensor[(14, 6, 10), float32] */;
    (%401, %402, %403, %404, %405, %406, %407, %408)
  };
  %409() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32]) */
}

def @func_934() -> (Tensor[(14, 6, 10), float32],) {
  %410 = @func_897() /* ty=(Tensor[(14, 6, 10), float32],) */;
  %411 = %410.0;
  (%411,)
}

def @func_9302() -> Tensor[(14, 6, 10), float32] {
  %413 = fn () -> Tensor[(14, 6, 10), float32] {
    %412 = @func_6397() /* ty=(Tensor[(14, 6, 10), float32],) */;
    %412.0
  };
  %413() /* ty=Tensor[(14, 6, 10), float32] */
}

def @func_3212() -> Tensor[(14, 6, 10), uint64] {
  @func_3210() /* ty=Tensor[(14, 6, 10), uint64] */
}

def @func_12114(%var_12112: Tensor[(11, 9, 4), int8], %var_12113: Tensor[(11, 9, 4), int8]) -> (Tensor[(11, 9, 4), bool], Tensor[(11, 9, 4), float64]) {
  %421 = fn (%var_12085: Tensor[(11, 9, 4), int8], %var_12086: Tensor[(11, 9, 4), int8]) -> (Tensor[(11, 9, 4), bool], Tensor[(11, 9, 4), float64]) {
    %414 = cast(%var_12086, dtype="bool") /* ty=Tensor[(11, 9, 4), bool] */;
    %415 = shape_of(%var_12085, dtype="int32") /* ty=Tensor[(3), int32] */;
    %416 = cast(%var_12085, dtype="bool") /* ty=Tensor[(11, 9, 4), bool] */;
    %417 = dyn.reshape(%414, %415, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %418 = cast(%var_12086, dtype="float64") /* ty=Tensor[(11, 9, 4), float64] */;
    %419 = not_equal(%416, %417) /* ty=Tensor[(11, 9, 4), bool] */;
    %420 = sinh(%418) /* ty=Tensor[(11, 9, 4), float64] */;
    (%419, %420)
  };
  %421(%var_12112, %var_12113) /* ty=(Tensor[(11, 9, 4), bool], Tensor[(11, 9, 4), float64]) */
}

def @func_11664() -> Tensor[(14, 6, 10), uint8] {
  @func_11662() /* ty=Tensor[(14, 6, 10), uint8] */
}

def @func_6770() -> (Tensor[(14, 6, 10), uint8],) {
  @func_6768() /* ty=(Tensor[(14, 6, 10), uint8],) */
}

def @func_12535() -> (Tensor[(14, 6, 10), float32], Tensor[(16, 10, 6), float32], Tensor[(960), bool], Tensor[(14, 6, 10), uint8]) {
  %430 = fn () -> (Tensor[(14, 6, 10), float32], Tensor[(16, 10, 6), float32], Tensor[(960), bool], Tensor[(14, 6, 10), uint8]) {
    %422 = @func_11703() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32]) */;
    %423 = cast(meta[relay.Constant][11] /* ty=Tensor[(960), bool] */, dtype="bool") /* ty=Tensor[(960), bool] */;
    %424 = reshape(%423, newshape=[16, 10, 6]) /* ty=Tensor[(16, 10, 6), bool] */;
    %425 = @func_1050(%424) /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(16, 10, 6), float32]) */;
    %426 = @func_2300() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
    %427 = %422.1;
    %428 = %425.1;
    %429 = %426.0;
    (%427, %428, meta[relay.Constant][11] /* ty=Tensor[(960), bool] */, %429)
  };
  %430() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(16, 10, 6), float32], Tensor[(960), bool], Tensor[(14, 6, 10), uint8]) */
}

def @func_10208() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
  %435 = fn () -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
    %431 = @func_5835() /* ty=(Tensor[(14, 6, 10), uint8],) */;
    %432 = @func_3423() /* ty=(Tensor[(14, 6, 10), uint8],) */;
    %433 = %431.0;
    %434 = %432.0;
    (%433, %434)
  };
  %435() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */
}

def @func_11959() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64]) {
  %441 = fn () -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64]) {
    %436 = @func_5774() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
    %437 = @func_337() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
    %438 = %436.1;
    %439 = @func_8054() /* ty=Tensor[(14, 6, 10), float32] */;
    %440 = %437.0;
    (%438, %439, %440)
  };
  %441() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64]) */
}

def @func_8545() -> (Tensor[(14, 6, 10), uint8], Tensor[(384), int8], Tensor[(840), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
  %442 = @func_1208() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %443 = @func_4556() /* ty=(Tensor[(384), int8],) */;
  %444 = %442.0;
  %445 = cast(%444, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %446 = reshape(%445, newshape=[840]) /* ty=Tensor[(840), float64] */;
  %447 = @func_3011(%446) /* ty=(Tensor[(384), int8], Tensor[(14, 6, 10), float64], Tensor[(840), float64], Tensor[(14, 16, 13), int32], Tensor[(4, 728), int32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %448 = @func_4045() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64]) */;
  %449 = @func_4811() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(360), bool], Tensor[(360), bool], Tensor[(14, 6, 10), float64]) */;
  %450 = %443.0;
  %451 = %447.2;
  %452 = %448.1;
  %453 = %449.2;
  (%444, %450, %451, %452, %453)
}

def @func_2907() -> (Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float32]) {
  %457 = fn () -> (Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float32]) {
    %454 = @func_689() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
    %455 = @func_1454() /* ty=Tensor[(14, 6, 10), float32] */;
    %456 = %454.0;
    (%455, %456)
  };
  %457() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float32]) */
}

def @func_8980() -> Tensor[(14, 6, 10), uint8] {
  %459 = fn () -> Tensor[(14, 6, 10), uint8] {
    %458 = @func_6053() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
    %458.3
  };
  %459() /* ty=Tensor[(14, 6, 10), uint8] */
}

def @func_12054() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) {
  %460 = @func_2327() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %461 = @func_2745() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %462 = %460.0;
  %463 = %461.0;
  (%462, %463)
}

def @func_2259(%var_2258: Tensor[(2912), int32]) -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 16, 13), int32], Tensor[(2912), int32], Tensor[(14, 6, 10), float32]) {
  %470 = fn (%var_2250: Tensor[(2912), int32]) -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 16, 13), int32], Tensor[(2912), int32], Tensor[(14, 6, 10), float32]) {
    %464 = @func_1956() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
    %465 = cast(%var_2250, dtype="int32") /* ty=Tensor[(2912), int32] */;
    %466 = reshape(%465, newshape=[14, 16, 13]) /* ty=Tensor[(14, 16, 13), int32] */;
    %467 = %464.0;
    %468 = @func_1113(%466) /* ty=Tensor[(14, 16, 13), int32] */;
    %469 = @func_1508() /* ty=Tensor[(14, 6, 10), float32] */;
    (%467, %468, %var_2250, %469)
  };
  %470(%var_2258) /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 16, 13), int32], Tensor[(2912), int32], Tensor[(14, 6, 10), float32]) */
}

def @func_690() -> (Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
  %480 = fn () -> (Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
    %471 = @func_616() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
    %472 = %471.1;
    %473 = cast(%472, dtype="float32") /* ty=Tensor[(14, 6, 10), float32] */;
    %474 = @func_337() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
    %475 = @func_82() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
    %476 = atanh(%473) /* ty=Tensor[(14, 6, 10), float32] */;
    %477 = %474.1;
    %478 = %475.0;
    %479 = @func_578() /* ty=Tensor[(14, 6, 10), uint8] */;
    (%476, %477, %478, %479)
  };
  %480() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */
}

def @func_9940() -> Tensor[(14, 6, 10), uint8] {
  %481 = @func_3423() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %481.0
}

def @func_1320() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) {
  %482 = @func_616() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %483 = @func_689() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %484 = @func_689() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %485 = %482.0;
  %486 = %483.3;
  %487 = %484.2;
  (%485, %486, %487)
}

def @func_2800() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) {
  @func_2798() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */
}

def @func_11828(%var_11826: Tensor[(36, 2), float32], %var_11827: int32) -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(3, 6, 4), float64], Tensor[(11, 11, 8), int32], int32) {
  %503 = fn (%var_11750: Tensor[(36, 2), float32], %var_11796: int32) -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(3, 6, 4), float64], Tensor[(11, 11, 8), int32], int32) {
    %488 = @func_2181() /* ty=(Tensor[(14, 6, 10), uint8],) */;
    %489 = cast(%var_11750, dtype="float32") /* ty=Tensor[(36, 2), float32] */;
    %490 = reshape(%489, newshape=[3, 6, 4]) /* ty=Tensor[(3, 6, 4), float32] */;
    %491 = @func_6326(%490) /* ty=Tensor[(3, 6, 4), float32] */;
    %492 = cast(%var_11750, dtype="float64") /* ty=Tensor[(36, 2), float64] */;
    %493 = shape_of(%491, dtype="int32") /* ty=Tensor[(3), int32] */;
    %494 = cast(%491, dtype="float64") /* ty=Tensor[(3, 6, 4), float64] */;
    %495 = dyn.reshape(%492, %493, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %496 = cast(%var_11796, dtype="int32") /* ty=int32 */;
    %497 = reshape(%496, newshape=[]) /* ty=int32 */;
    %498 = @func_1438(%497) /* ty=(Tensor[(11, 11, 8), int32], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float32]) */;
    %499 = @func_11560() /* ty=Tensor[(14, 6, 10), uint8] */;
    %500 = %488.0;
    %501 = mod(%494, %495) /* ty=Tensor[(3, 6, 4), float64] */;
    %502 = %498.0;
    (%499, %500, %501, %502, %var_11796)
  };
  %503(%var_11826, %var_11827) /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(3, 6, 4), float64], Tensor[(11, 11, 8), int32], int32) */
}

def @func_6299() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), bool]) {
  %519 = fn () -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), bool]) {
    %504 = @func_3313() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
    %505 = @func_2573() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64]) */;
    %506 = @func_4811() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(360), bool], Tensor[(360), bool], Tensor[(14, 6, 10), float64]) */;
    %507 = @func_1956() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
    %508 = %507.1;
    %509 = @func_934() /* ty=(Tensor[(14, 6, 10), float32],) */;
    %510 = %509.0;
    %511 = cast(%510, dtype="bool") /* ty=Tensor[(14, 6, 10), bool] */;
    %512 = shape_of(%508, dtype="int32") /* ty=Tensor[(3), int32] */;
    %513 = cast(%508, dtype="bool") /* ty=Tensor[(14, 6, 10), bool] */;
    %514 = dyn.reshape(%511, %512, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %515 = %504.1;
    %516 = %505.0;
    %517 = %506.0;
    %518 = not_equal(%513, %514) /* ty=Tensor[(14, 6, 10), bool] */;
    (%515, %516, %517, %518)
  };
  %519() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), bool]) */
}

def @func_8547() -> (Tensor[(14, 6, 10), uint8], Tensor[(384), int8], Tensor[(840), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
  @func_8545() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(384), int8], Tensor[(840), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */
}

def @func_998() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32]) {
  %524 = fn () -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32]) {
    %520 = @func_82() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
    %521 = @func_897() /* ty=(Tensor[(14, 6, 10), float32],) */;
    %522 = %520.1;
    %523 = %521.0;
    (%522, %523)
  };
  %524() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32]) */
}

def @func_6453() -> (Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8]) {
  @func_6451() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8]) */
}

def @func_1322() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) {
  @func_1320() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */
}

def @func_8379() -> (Tensor[(14, 6, 10), uint64], Tensor[(1728), uint64], Tensor[(1728), float64]) {
  %531 = fn () -> (Tensor[(14, 6, 10), uint64], Tensor[(1728), uint64], Tensor[(1728), float64]) {
    %525 = @func_3384() /* ty=(Tensor[(14, 6, 10), uint64],) */;
    %526 = cast(meta[relay.Constant][12] /* ty=Tensor[(1728), float64] */, dtype="float64") /* ty=Tensor[(1728), float64] */;
    %527 = reshape(%526, newshape=[1728]) /* ty=Tensor[(1728), float64] */;
    %528 = @func_7129(%527) /* ty=(Tensor[(14, 6, 10), float64], Tensor[(9, 12, 16), float64], Tensor[(1728), uint64]) */;
    %529 = %525.0;
    %530 = %528.2;
    (%529, %530, meta[relay.Constant][12] /* ty=Tensor[(1728), float64] */)
  };
  %531() /* ty=(Tensor[(14, 6, 10), uint64], Tensor[(1728), uint64], Tensor[(1728), float64]) */
}

def @func_1897() -> (Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float32]) {
  @func_1895() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float32]) */
}

def @func_8864(%var_8853: Tensor[(6, 1, 15), float32], %var_8861: Tensor[(3, 24), float32]) -> (Tensor[(6, 1, 15), float32], Tensor[(3, 6, 4), float32], Tensor[(3, 24), float32]) {
  %532 = cast(%var_8853, dtype="float32") /* ty=Tensor[(6, 1, 15), float32] */;
  %533 = cast(%var_8861, dtype="float32") /* ty=Tensor[(3, 24), float32] */;
  %534 = reshape(%533, newshape=[3, 6, 4]) /* ty=Tensor[(3, 6, 4), float32] */;
  %535 = erf(%532) /* ty=Tensor[(6, 1, 15), float32] */;
  %536 = @func_6326(%534) /* ty=Tensor[(3, 6, 4), float32] */;
  (%535, %536, %var_8861)
}

def @func_6002(%var_5938: Tensor[(3, 14, 13), float32]) -> (Tensor[(3, 14, 13), float32], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint64], Tensor[(14, 6, 10), uint8], bool, Tensor[(360), bool], Tensor[(14, 6, 10), float64]) {
  %537 = cast(%var_5938, dtype="float32") /* ty=Tensor[(3, 14, 13), float32] */;
  %538 = @func_1591() /* ty=(Tensor[(14, 6, 10), float32],) */;
  %539 = @func_3210() /* ty=Tensor[(14, 6, 10), uint64] */;
  %540 = cast(%539, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %541 = reshape(%540, newshape=[14, 6, 10]) /* ty=Tensor[(14, 6, 10), float64] */;
  %542 = @func_293(%541) /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint16], Tensor[(14, 6, 10), float64]) */;
  %543 = cast(meta[relay.Constant][13] /* ty=Tensor[(360), bool] */, dtype="bool") /* ty=Tensor[(360), bool] */;
  %544 = reshape(%543, newshape=[360]) /* ty=Tensor[(360), bool] */;
  %545 = @func_4638(%544) /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], bool, Tensor[(360), bool], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
  %546 = @func_2419() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %547 = erf(%537) /* ty=Tensor[(3, 14, 13), float32] */;
  %548 = %538.0;
  %549 = %542.0;
  %550 = %545.2;
  %551 = %546.0;
  (%547, %548, %539, %549, %550, meta[relay.Constant][13] /* ty=Tensor[(360), bool] */, %551)
}

def @func_2732() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
  %557 = fn () -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
    %552 = @func_82() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
    %553 = %552.1;
    %554 = cast(%553, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
    %555 = erf(%554) /* ty=Tensor[(14, 6, 10), float64] */;
    %556 = @func_2067() /* ty=Tensor[(14, 6, 10), float64] */;
    (%555, %556)
  };
  %557() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */
}

def @func_579() -> Tensor[(14, 6, 10), uint8] {
  %559 = fn () -> Tensor[(14, 6, 10), uint8] {
    %558 = @func_337() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
    %558.1
  };
  %559() /* ty=Tensor[(14, 6, 10), uint8] */
}

def @func_9400() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) {
  %560 = @func_7379() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
  %561 = @func_5011() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(384), int8], Tensor[(14, 6, 10), uint8]) */;
  %562 = %560.1;
  %563 = %561.2;
  %564 = @func_3225() /* ty=Tensor[(14, 6, 10), float64] */;
  (%562, %563, %564)
}

def @func_7312(%var_7297: Tensor[(3, 13, 5), float32], %var_7298: Tensor[(3, 13, 5), float32]) -> (Tensor[(3, 13, 5), float32], Tensor[(1, 12, 10), float64], Tensor[(120), float64], Tensor[(14, 6, 10), uint8]) {
  %565 = cast(%var_7298, dtype="float32") /* ty=Tensor[(3, 13, 5), float32] */;
  %566 = shape_of(%var_7297, dtype="int32") /* ty=Tensor[(3), int32] */;
  %567 = cast(%var_7297, dtype="float32") /* ty=Tensor[(3, 13, 5), float32] */;
  %568 = dyn.reshape(%565, %566, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %569 = cast(meta[relay.Constant][14] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %570 = reshape(%569, newshape=[1, 12, 10]) /* ty=Tensor[(1, 12, 10), float64] */;
  %571 = @func_5919(%570) /* ty=(Tensor[(1, 12, 10), float64],) */;
  %572 = @func_5011() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(384), int8], Tensor[(14, 6, 10), uint8]) */;
  %573 = floor_divide(%567, %568) /* ty=Tensor[(3, 13, 5), float32] */;
  %574 = %571.0;
  %575 = %572.0;
  (%573, %574, meta[relay.Constant][14] /* ty=Tensor[(120), float64] */, %575)
}

def @func_10248() -> Tensor[(14, 6, 10), uint8] {
  %576 = @func_351() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %576.0
}

def @func_8843() -> Tensor[(14, 6, 10), float64] {
  %578 = fn () -> Tensor[(14, 6, 10), float64] {
    %577 = @func_2767() /* ty=(Tensor[(14, 6, 10), float64],) */;
    %577.0
  };
  %578() /* ty=Tensor[(14, 6, 10), float64] */
}

def @func_5013() -> (Tensor[(14, 6, 10), uint8], Tensor[(384), int8], Tensor[(14, 6, 10), uint8]) {
  @func_5011() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(384), int8], Tensor[(14, 6, 10), uint8]) */
}

def @func_2512() -> Tensor[(14, 6, 10), float64] {
  %579 = @func_1591() /* ty=(Tensor[(14, 6, 10), float32],) */;
  %580 = %579.0;
  %581 = cast(meta[relay.Constant][15] /* ty=Tensor[(14, 6, 10), float32] */, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %582 = shape_of(%580, dtype="int32") /* ty=Tensor[(3), int32] */;
  %583 = cast(%580, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %584 = dyn.reshape(%581, %582, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%583, %584) /* ty=Tensor[(14, 6, 10), float64] */
}

def @func_84() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
  @func_82() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */
}

def @func_13659() -> (Tensor[(14, 6, 10), uint8],) {
  %585 = @func_10324() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
  %586 = %585.0;
  (%586,)
}

def @func_9652() -> Tensor[(14, 6, 10), float64] {
  @func_9650() /* ty=Tensor[(14, 6, 10), float64] */
}

def @func_9609() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
  %587 = @func_4811() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(360), bool], Tensor[(360), bool], Tensor[(14, 6, 10), float64]) */;
  %588 = %587.5;
  %589 = @func_9311() /* ty=Tensor[(14, 6, 10), float64] */;
  (%588, %589)
}

def @func_7630(%var_7599: Tensor[(14, 10, 16), float64], %var_7600: Tensor[(14, 10, 16), float64], %var_7605: Tensor[(14, 10, 16), float64]) -> (Tensor[(14, 10, 16), bool], Tensor[(14, 10, 16), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 10, 16), float64], Tensor[(14, 6, 10), float64]) {
  %590 = cast(%var_7600, dtype="float64") /* ty=Tensor[(14, 10, 16), float64] */;
  %591 = shape_of(%var_7599, dtype="int32") /* ty=Tensor[(3), int32] */;
  %592 = cast(%var_7599, dtype="float64") /* ty=Tensor[(14, 10, 16), float64] */;
  %593 = dyn.reshape(%590, %591, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %594 = divide(%592, %593) /* ty=Tensor[(14, 10, 16), float64] */;
  %595 = cast(%var_7605, dtype="bool") /* ty=Tensor[(14, 10, 16), bool] */;
  %596 = shape_of(%594, dtype="int32") /* ty=Tensor[(3), int32] */;
  %597 = cast(%594, dtype="bool") /* ty=Tensor[(14, 10, 16), bool] */;
  %598 = dyn.reshape(%595, %596, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %599 = cast(%var_7599, dtype="float64") /* ty=Tensor[(14, 10, 16), float64] */;
  %600 = @func_2906() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float32]) */;
  %601 = cast(%var_7599, dtype="float64") /* ty=Tensor[(14, 10, 16), float64] */;
  %602 = @func_337() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %603 = greater_equal(%597, %598) /* ty=Tensor[(14, 10, 16), bool] */;
  %604 = tan(%599) /* ty=Tensor[(14, 10, 16), float64] */;
  %605 = %600.1;
  %606 = asinh(%601) /* ty=Tensor[(14, 10, 16), float64] */;
  %607 = %602.0;
  (%603, %604, %605, %606, %607)
}

def @func_4956() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) {
  @func_4954() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */
}

def @func_9724() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
  %608 = @func_8587() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %609 = @func_9400() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
  %610 = %608.0;
  %611 = %609.2;
  (%610, %611)
}

def @func_1856() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
  @func_1854() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */
}

def @func_4638(%var_4593: Tensor[(360), bool]) -> (Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], bool, Tensor[(360), bool], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
  %612 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %613 = cast(%var_4593, dtype="bool") /* ty=Tensor[(360), bool] */;
  %614 = reshape(%612, newshape=[]) /* ty=bool */;
  %615 = reshape(%613, newshape=[15, 2, 12]) /* ty=Tensor[(15, 2, 12), bool] */;
  %616 = @func_1923(%614, %615) /* ty=(Tensor[(15, 2, 12), int8], Tensor[(14, 6, 10), uint8]) */;
  %617 = @func_4239() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), int8], Tensor[(14, 6, 10), uint8]) */;
  %618 = @func_1731() /* ty=Tensor[(14, 6, 10), float32] */;
  %619 = %616.1;
  %620 = @func_1508() /* ty=Tensor[(14, 6, 10), float32] */;
  %621 = %617.1;
  %622 = @func_4344() /* ty=Tensor[(14, 6, 10), uint8] */;
  %623 = @func_4527() /* ty=Tensor[(14, 6, 10), uint8] */;
  (%618, %619, True /* ty=bool */, %var_4593, %620, %621, %622, %623)
}

def @func_7584() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
  %628 = fn () -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
    %624 = @func_5167() /* ty=(Tensor[(14, 6, 10), float64],) */;
    %625 = @func_4954() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
    %626 = %624.0;
    %627 = %625.1;
    (%626, %627)
  };
  %628() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */
}

def @func_1095() -> (Tensor[(14, 6, 10), float32],) {
  @func_1093() /* ty=(Tensor[(14, 6, 10), float32],) */
}

def @func_7635(%var_7632: Tensor[(14, 10, 16), float64], %var_7633: Tensor[(14, 10, 16), float64], %var_7634: Tensor[(14, 10, 16), float64]) -> (Tensor[(14, 10, 16), bool], Tensor[(14, 10, 16), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 10, 16), float64], Tensor[(14, 6, 10), float64]) {
  @func_7630(%var_7632, %var_7633, %var_7634) /* ty=(Tensor[(14, 10, 16), bool], Tensor[(14, 10, 16), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 10, 16), float64], Tensor[(14, 6, 10), float64]) */
}

def @func_3475() -> (Tensor[(14, 6, 10), float64],) {
  @func_3473() /* ty=(Tensor[(14, 6, 10), float64],) */
}

def @func_11525() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
  @func_11523() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */
}

def @func_1356() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(384), int8]) {
  @func_1354() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(384), int8]) */
}

def @func_12614() -> Tensor[(9, 12, 16), float64] {
  @func_12612() /* ty=Tensor[(9, 12, 16), float64] */
}

def @func_1142() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float32]) {
  %634 = fn () -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float32]) {
    %629 = @func_897() /* ty=(Tensor[(14, 6, 10), float32],) */;
    %630 = @func_1093() /* ty=(Tensor[(14, 6, 10), float32],) */;
    %631 = @func_578() /* ty=Tensor[(14, 6, 10), uint8] */;
    %632 = %629.0;
    %633 = %630.0;
    (%631, %632, %633)
  };
  %634() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float32]) */
}

def @func_9942() -> Tensor[(14, 6, 10), uint8] {
  @func_9940() /* ty=Tensor[(14, 6, 10), uint8] */
}

def @func_5566(%var_5565: Tensor[(14, 6, 10), float64]) -> Tensor[(14, 6, 10), bool] {
  %641 = fn (%var_5555: Tensor[(14, 6, 10), float64]) -> Tensor[(14, 6, 10), bool] {
    %635 = @func_3313() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
    %636 = %635.2;
    %637 = cast(%var_5555, dtype="bool") /* ty=Tensor[(14, 6, 10), bool] */;
    %638 = shape_of(%636, dtype="int32") /* ty=Tensor[(3), int32] */;
    %639 = cast(%636, dtype="bool") /* ty=Tensor[(14, 6, 10), bool] */;
    %640 = dyn.reshape(%637, %638, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less_equal(%639, %640) /* ty=Tensor[(14, 6, 10), bool] */
  };
  %641(%var_5565) /* ty=Tensor[(14, 6, 10), bool] */
}

def @func_12056() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) {
  @func_12054() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */
}

def @func_12992(%var_12989: uint8, %var_12990: Tensor[(10, 16, 3), uint8], %var_12991: Tensor[(10, 16, 3), uint8]) -> (Tensor[(10, 16, 3), bool], Tensor[(14, 6, 10), bool], Tensor[(10, 16, 3), float32], Tensor[(14, 6, 10), uint8]) {
  @func_12987(%var_12989, %var_12990, %var_12991) /* ty=(Tensor[(10, 16, 3), bool], Tensor[(14, 6, 10), bool], Tensor[(10, 16, 3), float32], Tensor[(14, 6, 10), uint8]) */
}

def @func_296(%var_294: Tensor[(14, 6, 10), float64]) -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint16], Tensor[(14, 6, 10), float64]) {
  @func_293(%var_294) /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint16], Tensor[(14, 6, 10), float64]) */
}

def @func_4529() -> Tensor[(14, 6, 10), uint8] {
  @func_4527() /* ty=Tensor[(14, 6, 10), uint8] */
}

def @func_3011(%var_2956: Tensor[(840), float64]) -> (Tensor[(384), int8], Tensor[(14, 6, 10), float64], Tensor[(840), float64], Tensor[(14, 16, 13), int32], Tensor[(4, 728), int32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
  %642 = @func_1354() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(384), int8]) */;
  %643 = cast(%var_2956, dtype="float64") /* ty=Tensor[(840), float64] */;
  %644 = reshape(%643, newshape=[14, 6, 10]) /* ty=Tensor[(14, 6, 10), float64] */;
  %645 = @func_293(%644) /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint16], Tensor[(14, 6, 10), float64]) */;
  %646 = cast(meta[relay.Constant][16] /* ty=Tensor[(4, 728), int32] */, dtype="int32") /* ty=Tensor[(4, 728), int32] */;
  %647 = reshape(%646, newshape=[2912]) /* ty=Tensor[(2912), int32] */;
  %648 = @func_2257(%647) /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 16, 13), int32], Tensor[(2912), int32], Tensor[(14, 6, 10), float32]) */;
  %649 = @func_689() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %650 = %642.2;
  %651 = %645.1;
  %652 = %648.1;
  %653 = %649.3;
  %654 = @func_2067() /* ty=Tensor[(14, 6, 10), float64] */;
  %655 = @func_1621() /* ty=Tensor[(14, 6, 10), uint8] */;
  (%650, %651, %var_2956, %652, meta[relay.Constant][16] /* ty=Tensor[(4, 728), int32] */, %653, %654, %655)
}

def @func_453(%var_451: Tensor[(4, 8, 12), int8]) -> (Tensor[(4, 8, 12), bool], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8]) {
  @func_450(%var_451) /* ty=(Tensor[(4, 8, 12), bool], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8]) */
}

def @func_1621() -> Tensor[(14, 6, 10), uint8] {
  %656 = @func_689() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %656.3
}

def @func_5884() -> Tensor[(14, 6, 10), float64] {
  %658 = fn () -> Tensor[(14, 6, 10), float64] {
    %657 = @func_2745() /* ty=(Tensor[(14, 6, 10), float64],) */;
    %657.0
  };
  %658() /* ty=Tensor[(14, 6, 10), float64] */
}

def @func_2573() -> (Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64]) {
  %659 = @func_934() /* ty=(Tensor[(14, 6, 10), float32],) */;
  %660 = %659.0;
  %661 = @func_2067() /* ty=Tensor[(14, 6, 10), float64] */;
  (%660, %661)
}

def @func_10116() -> Tensor[(14, 6, 10), float32] {
  @func_10114() /* ty=Tensor[(14, 6, 10), float32] */
}

def @func_1455() -> Tensor[(14, 6, 10), float32] {
  %665 = fn () -> Tensor[(14, 6, 10), float32] {
    %662 = @func_1093() /* ty=(Tensor[(14, 6, 10), float32],) */;
    %663 = %662.0;
    %664 = cast(%663, dtype="float32") /* ty=Tensor[(14, 6, 10), float32] */;
    exp(%664) /* ty=Tensor[(14, 6, 10), float32] */
  };
  %665() /* ty=Tensor[(14, 6, 10), float32] */
}

def @func_12846() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32]) {
  %672 = fn () -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32]) {
    %666 = @func_2767() /* ty=(Tensor[(14, 6, 10), float64],) */;
    %667 = @func_6451() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8]) */;
    %668 = @func_6397() /* ty=(Tensor[(14, 6, 10), float32],) */;
    %669 = %666.0;
    %670 = %667.1;
    %671 = %668.0;
    (%669, %670, %671)
  };
  %672() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32]) */
}

def @func_3598() -> (Tensor[(14, 6, 10), float64],) {
  %673 = @func_3169() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %674 = %673.1;
  (%674,)
}

def @func_9650() -> Tensor[(14, 6, 10), float64] {
  @func_8842() /* ty=Tensor[(14, 6, 10), float64] */
}

def @func_3970() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32]) {
  %675 = @func_2300() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
  %676 = %675.1;
  %677 = @func_1454() /* ty=Tensor[(14, 6, 10), float32] */;
  (%676, %677)
}

def @func_5436(%var_5435: int16) -> Tensor[(9, 11, 3), int16] {
  %680 = fn (%var_5424: int16) -> Tensor[(9, 11, 3), int16] {
    %678 = cast(%var_5424, dtype="int16") /* ty=int16 */;
    %679 = cast(meta[relay.Constant][17] /* ty=Tensor[(9, 11, 3), int16] */, dtype="int16") /* ty=Tensor[(9, 11, 3), int16] */;
    multiply(%678, %679) /* ty=Tensor[(9, 11, 3), int16] */
  };
  %680(%var_5435) /* ty=Tensor[(9, 11, 3), int16] */
}

def @func_8868(%var_8866: Tensor[(6, 1, 15), float32], %var_8867: Tensor[(3, 24), float32]) -> (Tensor[(6, 1, 15), float32], Tensor[(3, 6, 4), float32], Tensor[(3, 24), float32]) {
  @func_8864(%var_8866, %var_8867) /* ty=(Tensor[(6, 1, 15), float32], Tensor[(3, 6, 4), float32], Tensor[(3, 24), float32]) */
}

def @func_12987(%var_12948: uint8, %var_12949: Tensor[(10, 16, 3), uint8], %var_12964: Tensor[(10, 16, 3), uint8]) -> (Tensor[(10, 16, 3), bool], Tensor[(14, 6, 10), bool], Tensor[(10, 16, 3), float32], Tensor[(14, 6, 10), uint8]) {
  %681 = cast(%var_12948, dtype="bool") /* ty=bool */;
  %682 = cast(%var_12949, dtype="bool") /* ty=Tensor[(10, 16, 3), bool] */;
  %683 = @func_6298() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), bool]) */;
  %684 = cast(%var_12964, dtype="float32") /* ty=Tensor[(10, 16, 3), float32] */;
  %685 = shape_of(%var_12949, dtype="int32") /* ty=Tensor[(3), int32] */;
  %686 = cast(%var_12949, dtype="float32") /* ty=Tensor[(10, 16, 3), float32] */;
  %687 = dyn.reshape(%684, %685, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %688 = equal(%681, %682) /* ty=Tensor[(10, 16, 3), bool] */;
  %689 = %683.3;
  %690 = divide(%686, %687) /* ty=Tensor[(10, 16, 3), float32] */;
  %691 = @func_10937() /* ty=Tensor[(14, 6, 10), uint8] */;
  (%688, %689, %690, %691)
}

def @func_10590(%var_10584: Tensor[(5, 9, 14), int8], %var_10585: Tensor[(5, 9, 14), int8]) -> Tensor[(5, 9, 14), int8] {
  %692 = cast(%var_10585, dtype="int8") /* ty=Tensor[(5, 9, 14), int8] */;
  %693 = shape_of(%var_10584, dtype="int32") /* ty=Tensor[(3), int32] */;
  %694 = cast(%var_10584, dtype="int8") /* ty=Tensor[(5, 9, 14), int8] */;
  %695 = dyn.reshape(%692, %693, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  bitwise_or(%694, %695) /* ty=Tensor[(5, 9, 14), int8] */
}

def @func_11178(%var_11144: Tensor[(210), uint64], %var_11146: Tensor[(1728), float64]) -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(3, 6, 4), float32], Tensor[(210), uint64], Tensor[(924), uint8], Tensor[(1728), float64], Tensor[(384), int8]) {
  %696 = @func_616() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %697 = @func_2573() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64]) */;
  %698 = cast(%var_11144, dtype="uint64") /* ty=Tensor[(210), uint64] */;
  %699 = cast(meta[relay.Constant][18] /* ty=Tensor[(924), uint8] */, dtype="uint8") /* ty=Tensor[(924), uint8] */;
  %700 = cast(%var_11146, dtype="float64") /* ty=Tensor[(1728), float64] */;
  %701 = reshape(%698, newshape=[1, 15, 14]) /* ty=Tensor[(1, 15, 14), uint64] */;
  %702 = reshape(%699, newshape=[924]) /* ty=Tensor[(924), uint8] */;
  %703 = reshape(%700, newshape=[1728]) /* ty=Tensor[(1728), float64] */;
  %704 = @func_10099(%701, %702, %703) /* ty=(Tensor[(1, 15, 14), uint64], Tensor[(14, 11, 6), float32], Tensor[(924), uint8], Tensor[(9, 12, 16), float64], Tensor[(1728), float64], Tensor[(3, 6, 4), float32]) */;
  %705 = @func_3656() /* ty=(Tensor[(384), int8],) */;
  %706 = @func_2067() /* ty=Tensor[(14, 6, 10), float64] */;
  %707 = %696.1;
  %708 = @func_1508() /* ty=Tensor[(14, 6, 10), float32] */;
  %709 = %697.1;
  %710 = @func_5474() /* ty=Tensor[(14, 6, 10), uint8] */;
  %711 = %704.5;
  %712 = %705.0;
  (%706, %707, %708, %709, %710, %711, %var_11144, meta[relay.Constant][18] /* ty=Tensor[(924), uint8] */, %var_11146, %712)
}

def @func_13924() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
  %717 = fn () -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
    %713 = @func_8545() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(384), int8], Tensor[(840), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
    %714 = @func_2067() /* ty=Tensor[(14, 6, 10), float64] */;
    %715 = @func_3704() /* ty=Tensor[(14, 6, 10), uint8] */;
    %716 = %713.0;
    (%714, %715, %716)
  };
  %717() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */
}

def @func_3972() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32]) {
  @func_3970() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32]) */
}

def @func_9312() -> Tensor[(14, 6, 10), float64] {
  %719 = fn () -> Tensor[(14, 6, 10), float64] {
    %718 = @func_6650() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
    %718.1
  };
  %719() /* ty=Tensor[(14, 6, 10), float64] */
}

def @func_13115(%var_13113: Tensor[(16, 4, 6), int64]) -> (Tensor[(16, 4, 6), float64], Tensor[(14, 6, 10), float64]) {
  @func_13112(%var_13113) /* ty=(Tensor[(16, 4, 6), float64], Tensor[(14, 6, 10), float64]) */
}

def @func_6538(%var_6537: Tensor[(14, 8, 6), float64]) -> (Tensor[(14, 8, 6), float64],) {
  %725 = fn (%var_6501: Tensor[(14, 8, 6), float64]) -> (Tensor[(14, 8, 6), float64],) {
    %720 = cast(%var_6501, dtype="float64") /* ty=Tensor[(14, 8, 6), float64] */;
    %721 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(14, 8, 6), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %722 = cast(meta[relay.Constant][19] /* ty=Tensor[(14, 8, 6), float64] */, dtype="float64") /* ty=Tensor[(14, 8, 6), float64] */;
    %723 = dyn.reshape(%720, %721, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %724 = maximum(%722, %723) /* ty=Tensor[(14, 8, 6), float64] */;
    (%724,)
  };
  %725(%var_6537) /* ty=(Tensor[(14, 8, 6), float64],) */
}

def @func_2575() -> (Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64]) {
  @func_2573() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64]) */
}

def @func_3452() -> Tensor[(14, 6, 10), float64] {
  %726 = @func_1701() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %726.0
}

def @func_9503() -> Tensor[(14, 6, 10), uint8] {
  %728 = fn () -> Tensor[(14, 6, 10), uint8] {
    %727 = @func_1968() /* ty=(Tensor[(14, 6, 10), uint8],) */;
    %727.0
  };
  %728() /* ty=Tensor[(14, 6, 10), uint8] */
}

def @func_6451() -> (Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8]) {
  %729 = @func_2038() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8]) */;
  %730 = %729.0;
  %731 = @func_832() /* ty=Tensor[(14, 6, 10), uint8] */;
  (%730, %731)
}

def @func_338() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
  %738 = fn () -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
    %732 = @func_82() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
    %733 = %732.0;
    %734 = cast(%733, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
    %735 = reshape(%734, newshape=[14, 6, 10]) /* ty=Tensor[(14, 6, 10), float64] */;
    %736 = @func_293(%735) /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint16], Tensor[(14, 6, 10), float64]) */;
    %737 = %736.0;
    (%733, %737)
  };
  %738() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */
}

def @func_3473() -> (Tensor[(14, 6, 10), float64],) {
  %739 = @func_2067() /* ty=Tensor[(14, 6, 10), float64] */;
  (%739,)
}

def @func_13181() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint64], Tensor[(14, 6, 10), uint64], Tensor[(14, 6, 10), float32]) {
  @func_13179() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint64], Tensor[(14, 6, 10), uint64], Tensor[(14, 6, 10), float32]) */
}

def @func_12674(%var_12630: Tensor[(3, 8, 8), int8]) -> (Tensor[(3, 8, 8), int8], Tensor[(14, 6, 10), uint64], Tensor[(3, 8, 8), float32], Tensor[(14, 6, 10), float64]) {
  %740 = cast(meta[relay.Constant][20] /* ty=Tensor[(3, 8, 8), int8] */, dtype="int8") /* ty=Tensor[(3, 8, 8), int8] */;
  %741 = shape_of(%var_12630, dtype="int32") /* ty=Tensor[(3), int32] */;
  %742 = cast(%var_12630, dtype="int8") /* ty=Tensor[(3, 8, 8), int8] */;
  %743 = dyn.reshape(%740, %741, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %744 = @func_3384() /* ty=(Tensor[(14, 6, 10), uint64],) */;
  %745 = cast(meta[relay.Constant][20] /* ty=Tensor[(3, 8, 8), int8] */, dtype="float32") /* ty=Tensor[(3, 8, 8), float32] */;
  %746 = @func_11523() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %747 = left_shift(%742, %743) /* ty=Tensor[(3, 8, 8), int8] */;
  %748 = %744.0;
  %749 = asin(%745) /* ty=Tensor[(3, 8, 8), float32] */;
  %750 = %746.0;
  (%747, %748, %749, %750)
}

def @func_10991(%var_10963: Tensor[(3, 8, 13), uint8], %var_10964: Tensor[(3, 8, 13), uint8]) -> Tensor[(3, 8, 13), bool] {
  %751 = cast(%var_10964, dtype="bool") /* ty=Tensor[(3, 8, 13), bool] */;
  %752 = shape_of(%var_10963, dtype="int32") /* ty=Tensor[(3), int32] */;
  %753 = cast(%var_10963, dtype="bool") /* ty=Tensor[(3, 8, 13), bool] */;
  %754 = dyn.reshape(%751, %752, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%753, %754) /* ty=Tensor[(3, 8, 13), bool] */
}

def @func_10457(%var_10456: Tensor[(11, 9, 6), uint8]) -> (Tensor[(11, 9, 6), uint8], Tensor[(11, 9, 6), float64]) {
  %762 = fn (%var_10431: Tensor[(11, 9, 6), uint8]) -> (Tensor[(11, 9, 6), uint8], Tensor[(11, 9, 6), float64]) {
    %755 = cast(%var_10431, dtype="uint8") /* ty=Tensor[(11, 9, 6), uint8] */;
    %756 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(11, 9, 6), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %757 = cast(meta[relay.Constant][21] /* ty=Tensor[(11, 9, 6), uint8] */, dtype="uint8") /* ty=Tensor[(11, 9, 6), uint8] */;
    %758 = dyn.reshape(%755, %756, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %759 = cast(meta[relay.Constant][21] /* ty=Tensor[(11, 9, 6), uint8] */, dtype="float64") /* ty=Tensor[(11, 9, 6), float64] */;
    %760 = bitwise_and(%757, %758) /* ty=Tensor[(11, 9, 6), uint8] */;
    %761 = acos(%759) /* ty=Tensor[(11, 9, 6), float64] */;
    (%760, %761)
  };
  %762(%var_10456) /* ty=(Tensor[(11, 9, 6), uint8], Tensor[(11, 9, 6), float64]) */
}

def @func_1264(%var_1263: Tensor[(14, 6, 10), float32]) -> (Tensor[(14, 6, 10), int8],) {
  %770 = fn (%var_1251: Tensor[(14, 6, 10), float32]) -> (Tensor[(14, 6, 10), int8],) {
    %763 = @func_997() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32]) */;
    %764 = %763.1;
    %765 = cast(%var_1251, dtype="int8") /* ty=Tensor[(14, 6, 10), int8] */;
    %766 = shape_of(%764, dtype="int32") /* ty=Tensor[(3), int32] */;
    %767 = cast(%764, dtype="int8") /* ty=Tensor[(14, 6, 10), int8] */;
    %768 = dyn.reshape(%765, %766, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %769 = maximum(%767, %768) /* ty=Tensor[(14, 6, 10), int8] */;
    (%769,)
  };
  %770(%var_1263) /* ty=(Tensor[(14, 6, 10), int8],) */
}

def @func_618() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
  @func_616() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */
}

def @func_5474() -> Tensor[(14, 6, 10), uint8] {
  %771 = @func_1956() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
  %771.1
}

def @func_12155(%var_12122: Tensor[(1, 16, 11), float32], %var_12127: Tensor[(12, 16, 11), float32], %var_12139: Tensor[(360), bool]) -> (Tensor[(14, 6, 10), float32], Tensor[(360), bool], Tensor[(12, 16, 11), float32], Tensor[(14, 6, 10), float64]) {
  %772 = cast(%var_12139, dtype="bool") /* ty=Tensor[(360), bool] */;
  %773 = reshape(%772, newshape=[360]) /* ty=Tensor[(360), bool] */;
  %774 = @func_4638(%773) /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], bool, Tensor[(360), bool], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
  %775 = cast(%var_12122, dtype="float32") /* ty=Tensor[(1, 16, 11), float32] */;
  %776 = atan(%775) /* ty=Tensor[(1, 16, 11), float32] */;
  %777 = cast(%776, dtype="bool") /* ty=Tensor[(1, 16, 11), bool] */;
  %778 = cast(%var_12127, dtype="bool") /* ty=Tensor[(12, 16, 11), bool] */;
  %779 = not_equal(%777, %778) /* ty=Tensor[(12, 16, 11), bool] */;
  %780 = cast(%779, dtype="float32") /* ty=Tensor[(12, 16, 11), float32] */;
  %781 = @func_8587() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %782 = %774.4;
  %783 = exp(%780) /* ty=Tensor[(12, 16, 11), float32] */;
  %784 = %781.0;
  (%782, %var_12139, %783, %784)
}

def @func_13419() -> (Tensor[(14, 6, 10), uint8],) {
  %785 = @func_2884() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(384), int8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), int8]) */;
  %786 = %785.1;
  (%786,)
}

def @func_6328(%var_6327: Tensor[(3, 6, 4), float32]) -> Tensor[(3, 6, 4), float32] {
  %788 = fn (%var_6323: Tensor[(3, 6, 4), float32]) -> Tensor[(3, 6, 4), float32] {
    %787 = cast(%var_6323, dtype="float32") /* ty=Tensor[(3, 6, 4), float32] */;
    asin(%787) /* ty=Tensor[(3, 6, 4), float32] */
  };
  %788(%var_6327) /* ty=Tensor[(3, 6, 4), float32] */
}

def @func_10774() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
  %792 = fn () -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
    %789 = @func_2419() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
    %790 = @func_832() /* ty=Tensor[(14, 6, 10), uint8] */;
    %791 = %789.1;
    (%790, %791)
  };
  %792() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */
}

def @func_7553() -> (Tensor[(14, 6, 10), uint8],) {
  %793 = @func_5835() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %794 = %793.0;
  (%794,)
}

def @func_11226() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32], Tensor[(384), int8]) {
  %802 = fn () -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32], Tensor[(384), int8]) {
    %795 = @func_10773() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
    %796 = %795.1;
    %797 = cast(%796, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
    %798 = reshape(%797, newshape=[14, 6, 10]) /* ty=Tensor[(14, 6, 10), float64] */;
    %799 = @func_108(%798) /* ty=(Tensor[(14, 6, 10), float32],) */;
    %800 = %799.0;
    %801 = @func_6122() /* ty=Tensor[(384), int8] */;
    (%796, %800, %801)
  };
  %802() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32], Tensor[(384), int8]) */
}

def @func_10955() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
  %807 = fn () -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
    %803 = @func_5085() /* ty=(Tensor[(14, 6, 10), uint8],) */;
    %804 = @func_8804() /* ty=(Tensor[(14, 6, 10), uint8],) */;
    %805 = %803.0;
    %806 = %804.0;
    (%805, %806)
  };
  %807() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */
}

def @func_5316() -> Tensor[(14, 6, 10), float64] {
  %808 = @func_4121() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %808.0
}

def @func_3314() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
  %819 = fn () -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
    %809 = @func_2745() /* ty=(Tensor[(14, 6, 10), float64],) */;
    %810 = %809.0;
    %811 = cast(%810, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
    %812 = reshape(%811, newshape=[840]) /* ty=Tensor[(840), float64] */;
    %813 = @func_3011(%812) /* ty=(Tensor[(384), int8], Tensor[(14, 6, 10), float64], Tensor[(840), float64], Tensor[(14, 16, 13), int32], Tensor[(4, 728), int32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
    %814 = cast(%810, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
    %815 = reshape(%814, newshape=[840]) /* ty=Tensor[(840), float64] */;
    %816 = @func_3011(%815) /* ty=(Tensor[(384), int8], Tensor[(14, 6, 10), float64], Tensor[(840), float64], Tensor[(14, 16, 13), int32], Tensor[(4, 728), int32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
    %817 = %813.1;
    %818 = %816.1;
    (%810, %817, %818)
  };
  %819() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */
}

def @func_108(%var_101: Tensor[(14, 6, 10), float64]) -> (Tensor[(14, 6, 10), float32],) {
  %820 = @func_82() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %821 = %820.1;
  %822 = cast(%var_101, dtype="float32") /* ty=Tensor[(14, 6, 10), float32] */;
  %823 = shape_of(%821, dtype="int32") /* ty=Tensor[(3), int32] */;
  %824 = cast(%821, dtype="float32") /* ty=Tensor[(14, 6, 10), float32] */;
  %825 = dyn.reshape(%822, %823, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %826 = mod(%824, %825) /* ty=Tensor[(14, 6, 10), float32] */;
  (%826,)
}

def @func_13311(%var_13309: Tensor[(7, 16, 7), float32], %var_13310: Tensor[(7, 16, 7), float32]) -> (Tensor[(7, 16, 7), bool], Tensor[(14, 6, 10), float32]) {
  %833 = fn (%var_13297: Tensor[(7, 16, 7), float32], %var_13298: Tensor[(7, 16, 7), float32]) -> (Tensor[(7, 16, 7), bool], Tensor[(14, 6, 10), float32]) {
    %827 = cast(%var_13298, dtype="bool") /* ty=Tensor[(7, 16, 7), bool] */;
    %828 = shape_of(%var_13297, dtype="int32") /* ty=Tensor[(3), int32] */;
    %829 = cast(%var_13297, dtype="bool") /* ty=Tensor[(7, 16, 7), bool] */;
    %830 = dyn.reshape(%827, %828, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %831 = equal(%829, %830) /* ty=Tensor[(7, 16, 7), bool] */;
    %832 = @func_8875() /* ty=Tensor[(14, 6, 10), float32] */;
    (%831, %832)
  };
  %833(%var_13309, %var_13310) /* ty=(Tensor[(7, 16, 7), bool], Tensor[(14, 6, 10), float32]) */
}

def @func_3384() -> (Tensor[(14, 6, 10), uint64],) {
  %834 = @func_3210() /* ty=Tensor[(14, 6, 10), uint64] */;
  (%834,)
}

def @func_897() -> (Tensor[(14, 6, 10), float32],) {
  %835 = @func_689() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %836 = %835.0;
  (%836,)
}

def @func_4339() -> (Tensor[(14, 6, 10), uint8],) {
  %837 = @func_2327() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %838 = %837.0;
  (%838,)
}

def @func_7919() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], int32, Tensor[(14, 6, 10), float64]) {
  %839 = @func_4865() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(9, 12, 16), float64], Tensor[(1728), float64]) */;
  %840 = cast(3 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %841 = reshape(%840, newshape=[]) /* ty=int32 */;
  %842 = @func_1438(%841) /* ty=(Tensor[(11, 11, 8), int32], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float32]) */;
  %843 = @func_4811() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(360), bool], Tensor[(360), bool], Tensor[(14, 6, 10), float64]) */;
  %844 = %839.0;
  %845 = %842.1;
  %846 = %843.5;
  (%844, %845, 3 /* ty=int32 */, %846)
}

def @func_899() -> (Tensor[(14, 6, 10), float32],) {
  @func_897() /* ty=(Tensor[(14, 6, 10), float32],) */
}

def @func_7425(%var_7424: Tensor[(1728), float64]) -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(9, 12, 16), int64]) {
  %864 = fn (%var_7403: Tensor[(1728), float64]) -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(9, 12, 16), int64]) {
    %847 = @func_2767() /* ty=(Tensor[(14, 6, 10), float64],) */;
    %848 = @func_1320() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
    %849 = cast(%var_7403, dtype="float64") /* ty=Tensor[(1728), float64] */;
    %850 = reshape(%849, newshape=[9, 12, 16]) /* ty=Tensor[(9, 12, 16), float64] */;
    %851 = @func_2583(%850) /* ty=Tensor[(9, 12, 16), float64] */;
    %852 = cast(%851, dtype="int16") /* ty=Tensor[(9, 12, 16), int16] */;
    %853 = shape_of(%var_7403, dtype="int32") /* ty=Tensor[(1), int32] */;
    %854 = cast(%var_7403, dtype="int16") /* ty=Tensor[(1728), int16] */;
    %855 = dyn.reshape(%852, %853, newshape=[]) /* ty=Tensor[(?), int16] */;
    %856 = subtract(%854, %855) /* ty=Tensor[(1728), int16] */;
    %857 = cast(%856, dtype="int64") /* ty=Tensor[(1728), int64] */;
    %858 = shape_of(%851, dtype="int32") /* ty=Tensor[(3), int32] */;
    %859 = cast(%851, dtype="int64") /* ty=Tensor[(9, 12, 16), int64] */;
    %860 = dyn.reshape(%857, %858, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %861 = %847.0;
    %862 = %848.2;
    %863 = left_shift(%859, %860) /* ty=Tensor[(9, 12, 16), int64] */;
    (%861, %862, %863)
  };
  %864(%var_7424) /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(9, 12, 16), int64]) */
}

def @func_6122() -> Tensor[(384), int8] {
  %865 = @func_4556() /* ty=(Tensor[(384), int8],) */;
  %865.0
}

def @func_1395() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
  %866 = @func_1320() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
  %867 = @func_689() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %868 = %867.1;
  %869 = cast(%868, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %870 = @func_578() /* ty=Tensor[(14, 6, 10), uint8] */;
  %871 = %866.0;
  %872 = rsqrt(%869) /* ty=Tensor[(14, 6, 10), float64] */;
  (%870, %871, %872)
}

def @func_14110() -> Tensor[(14, 6, 10), uint8] {
  @func_14108() /* ty=Tensor[(14, 6, 10), uint8] */
}

def @func_10868(%var_10866: Tensor[(195, 1), float32]) -> (Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(1, 12, 10), float64], Tensor[(195, 1), float32]) {
  @func_10865(%var_10866) /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(1, 12, 10), float64], Tensor[(195, 1), float32]) */
}

def @func_2327() -> (Tensor[(14, 6, 10), uint8],) {
  %873 = @func_920() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %874 = %873.0;
  (%874,)
}

def @func_5836() -> (Tensor[(14, 6, 10), uint8],) {
  %877 = fn () -> (Tensor[(14, 6, 10), uint8],) {
    %875 = @func_5156() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
    %876 = %875.1;
    (%876,)
  };
  %877() /* ty=(Tensor[(14, 6, 10), uint8],) */
}

def @func_450(%var_429: Tensor[(4, 8, 12), int8]) -> (Tensor[(4, 8, 12), bool], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8]) {
  %878 = cast(%var_429, dtype="bool") /* ty=Tensor[(4, 8, 12), bool] */;
  %879 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(4, 8, 12), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %880 = cast(meta[relay.Constant][22] /* ty=Tensor[(4, 8, 12), int8] */, dtype="bool") /* ty=Tensor[(4, 8, 12), bool] */;
  %881 = dyn.reshape(%878, %879, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %882 = @func_82() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %883 = @func_351() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %884 = %883.0;
  %885 = cast(%884, dtype="float32") /* ty=Tensor[(14, 6, 10), float32] */;
  %886 = @func_351() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %887 = less(%880, %881) /* ty=Tensor[(4, 8, 12), bool] */;
  %888 = %882.0;
  %889 = asinh(%885) /* ty=Tensor[(14, 6, 10), float32] */;
  %890 = %886.0;
  (%887, %888, %889, %890)
}

def @func_11607() -> (Tensor[(14, 6, 10), uint8],) {
  %891 = @func_8194() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %892 = %891.0;
  (%892,)
}

def @func_12192(%var_12176: Tensor[(4, 9, 9), uint64]) -> (Tensor[(4, 9, 9), bool], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
  %893 = cast(%var_12176, dtype="bool") /* ty=Tensor[(4, 9, 9), bool] */;
  %894 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(4, 9, 9), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %895 = cast(meta[relay.Constant][23] /* ty=Tensor[(4, 9, 9), uint64] */, dtype="bool") /* ty=Tensor[(4, 9, 9), bool] */;
  %896 = dyn.reshape(%893, %894, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %897 = @func_12079() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %898 = greater(%895, %896) /* ty=Tensor[(4, 9, 9), bool] */;
  %899 = @func_6688() /* ty=Tensor[(14, 6, 10), float64] */;
  %900 = %897.1;
  (%898, %899, %900)
}

def @func_12366(%var_12365: Tensor[(11, 8, 15), float64]) -> (Tensor[(11, 8, 15), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32], Tensor[(384), int8], Tensor[(14, 6, 10), float64], Tensor[(11, 8, 15), float64]) {
  %916 = fn (%var_12272: Tensor[(11, 8, 15), float64]) -> (Tensor[(11, 8, 15), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32], Tensor[(384), int8], Tensor[(14, 6, 10), float64], Tensor[(11, 8, 15), float64]) {
    %901 = cast(%var_12272, dtype="float64") /* ty=Tensor[(11, 8, 15), float64] */;
    %902 = @func_1591() /* ty=(Tensor[(14, 6, 10), float32],) */;
    %903 = @func_10207() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
    %904 = cast(meta[relay.Constant][24] /* ty=Tensor[(384), int8] */, dtype="int8") /* ty=Tensor[(384), int8] */;
    %905 = reshape(%904, newshape=[4, 8, 12]) /* ty=Tensor[(4, 8, 12), int8] */;
    %906 = @func_450(%905) /* ty=(Tensor[(4, 8, 12), bool], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8]) */;
    %907 = cast(%var_12272, dtype="float32") /* ty=Tensor[(11, 8, 15), float32] */;
    %908 = sigmoid(%907) /* ty=Tensor[(11, 8, 15), float32] */;
    %909 = cast(%908, dtype="float64") /* ty=Tensor[(11, 8, 15), float64] */;
    %910 = log2(%901) /* ty=Tensor[(11, 8, 15), float64] */;
    %911 = %902.0;
    %912 = %903.0;
    %913 = %906.2;
    %914 = @func_9311() /* ty=Tensor[(14, 6, 10), float64] */;
    %915 = exp(%909) /* ty=Tensor[(11, 8, 15), float64] */;
    (%910, %911, %912, %913, meta[relay.Constant][24] /* ty=Tensor[(384), int8] */, %914, %915)
  };
  %916(%var_12365) /* ty=(Tensor[(11, 8, 15), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32], Tensor[(384), int8], Tensor[(14, 6, 10), float64], Tensor[(11, 8, 15), float64]) */
}

def @func_11987() -> (Tensor[(14, 6, 10), float64],) {
  %919 = fn () -> (Tensor[(14, 6, 10), float64],) {
    %917 = @func_2767() /* ty=(Tensor[(14, 6, 10), float64],) */;
    %918 = %917.0;
    (%918,)
  };
  %919() /* ty=(Tensor[(14, 6, 10), float64],) */
}

def @func_351() -> (Tensor[(14, 6, 10), uint8],) {
  %920 = @func_337() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %921 = %920.1;
  (%921,)
}

def @func_5011() -> (Tensor[(14, 6, 10), uint8], Tensor[(384), int8], Tensor[(14, 6, 10), uint8]) {
  %922 = @func_4339() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %923 = @func_1956() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
  %924 = %922.0;
  %925 = @func_4424() /* ty=Tensor[(384), int8] */;
  %926 = %923.0;
  (%924, %925, %926)
}

def @func_1703() -> (Tensor[(14, 6, 10), float64],) {
  @func_1701() /* ty=(Tensor[(14, 6, 10), float64],) */
}

def @func_5826() -> (Tensor[(14, 6, 10), float64],) {
  %929 = fn () -> (Tensor[(14, 6, 10), float64],) {
    %927 = @func_337() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
    %928 = %927.0;
    (%928,)
  };
  %929() /* ty=(Tensor[(14, 6, 10), float64],) */
}

def @func_11609() -> (Tensor[(14, 6, 10), uint8],) {
  @func_11607() /* ty=(Tensor[(14, 6, 10), uint8],) */
}

def @func_5086() -> (Tensor[(14, 6, 10), uint8],) {
  %932 = fn () -> (Tensor[(14, 6, 10), uint8],) {
    %930 = @func_1968() /* ty=(Tensor[(14, 6, 10), uint8],) */;
    %931 = %930.0;
    (%931,)
  };
  %932() /* ty=(Tensor[(14, 6, 10), uint8],) */
}

def @func_13562() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
  %936 = fn () -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
    %933 = @func_11426() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
    %934 = %933.0;
    %935 = @func_11101() /* ty=Tensor[(14, 6, 10), uint8] */;
    (%934, %935)
  };
  %936() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */
}

def @func_3454() -> Tensor[(14, 6, 10), float64] {
  @func_3452() /* ty=Tensor[(14, 6, 10), float64] */
}

def @func_8287(%var_8285: Tensor[(14, 11, 6), uint8], %var_8286: Tensor[(14, 11, 6), uint8]) -> (Tensor[(14, 11, 6), bool], Tensor[(14, 11, 6), uint64], Tensor[(14, 11, 6), float32], Tensor[(384), int8]) {
  %953 = fn (%var_8265: Tensor[(14, 11, 6), uint8], %var_8266: Tensor[(14, 11, 6), uint8]) -> (Tensor[(14, 11, 6), bool], Tensor[(14, 11, 6), uint64], Tensor[(14, 11, 6), float32], Tensor[(384), int8]) {
    %937 = cast(%var_8266, dtype="bool") /* ty=Tensor[(14, 11, 6), bool] */;
    %938 = shape_of(%var_8265, dtype="int32") /* ty=Tensor[(3), int32] */;
    %939 = cast(%var_8265, dtype="bool") /* ty=Tensor[(14, 11, 6), bool] */;
    %940 = dyn.reshape(%937, %938, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %941 = cast(%var_8265, dtype="float32") /* ty=Tensor[(14, 11, 6), float32] */;
    %942 = log(%941) /* ty=Tensor[(14, 11, 6), float32] */;
    %943 = cast(%var_8266, dtype="uint64") /* ty=Tensor[(14, 11, 6), uint64] */;
    %944 = shape_of(%942, dtype="int32") /* ty=Tensor[(3), int32] */;
    %945 = cast(%942, dtype="uint64") /* ty=Tensor[(14, 11, 6), uint64] */;
    %946 = dyn.reshape(%943, %944, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %947 = cast(%942, dtype="float32") /* ty=Tensor[(14, 11, 6), float32] */;
    %948 = @func_3656() /* ty=(Tensor[(384), int8],) */;
    %949 = less_equal(%939, %940) /* ty=Tensor[(14, 11, 6), bool] */;
    %950 = bitwise_xor(%945, %946) /* ty=Tensor[(14, 11, 6), uint64] */;
    %951 = cosh(%947) /* ty=Tensor[(14, 11, 6), float32] */;
    %952 = %948.0;
    (%949, %950, %951, %952)
  };
  %953(%var_8285, %var_8286) /* ty=(Tensor[(14, 11, 6), bool], Tensor[(14, 11, 6), uint64], Tensor[(14, 11, 6), float32], Tensor[(384), int8]) */
}

def @func_6054() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
  %961 = fn () -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
    %954 = @func_5130() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
    %955 = @func_3574() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
    %956 = @func_2798() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
    %957 = @func_578() /* ty=Tensor[(14, 6, 10), uint8] */;
    %958 = %954.1;
    %959 = %955.3;
    %960 = %956.2;
    (%957, %958, %959, %960)
  };
  %961() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */
}

def @func_3170() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
  %965 = fn () -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
    %962 = @func_1320() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
    %963 = %962.0;
    %964 = @func_2512() /* ty=Tensor[(14, 6, 10), float64] */;
    (%963, %964)
  };
  %965() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */
}

def @func_13753() -> (Tensor[(14, 6, 10), float64],) {
  %967 = fn () -> (Tensor[(14, 6, 10), float64],) {
    %966 = @func_4355() /* ty=Tensor[(14, 6, 10), float64] */;
    (%966,)
  };
  %967() /* ty=(Tensor[(14, 6, 10), float64],) */
}

def @func_12079() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
  %968 = @func_7379() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
  %969 = @func_9447() /* ty=(Tensor[(14, 6, 10), uint64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %970 = %968.1;
  %971 = %969.1;
  (%970, %971)
}

def @func_3574() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
  %972 = @func_2038() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8]) */;
  %973 = @func_1320() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
  %974 = @func_2745() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %975 = @func_1956() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
  %976 = @func_2067() /* ty=Tensor[(14, 6, 10), float64] */;
  %977 = %972.0;
  %978 = %973.0;
  %979 = %974.0;
  %980 = %975.1;
  (%976, %977, %978, %979, %980)
}

def @func_5131() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
  %985 = fn () -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
    %981 = @func_2181() /* ty=(Tensor[(14, 6, 10), uint8],) */;
    %982 = @func_3992() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
    %983 = %981.0;
    %984 = %982.0;
    (%983, %984)
  };
  %985() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */
}

def @func_5158() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
  @func_5156() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */
}

def @func_13225(%var_13223: Tensor[(1, 14, 2), uint32], %var_13224: Tensor[(11, 14, 2), uint32]) -> (Tensor[(11, 14, 2), uint32], Tensor[(14, 6, 10), uint8]) {
  %991 = fn (%var_13184: Tensor[(1, 14, 2), uint32], %var_13185: Tensor[(11, 14, 2), uint32]) -> (Tensor[(11, 14, 2), uint32], Tensor[(14, 6, 10), uint8]) {
    %986 = cast(%var_13184, dtype="uint32") /* ty=Tensor[(1, 14, 2), uint32] */;
    %987 = cast(%var_13185, dtype="uint32") /* ty=Tensor[(11, 14, 2), uint32] */;
    %988 = @func_12244() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32]) */;
    %989 = bitwise_or(%986, %987) /* ty=Tensor[(11, 14, 2), uint32] */;
    %990 = %988.0;
    (%989, %990)
  };
  %991(%var_13223, %var_13224) /* ty=(Tensor[(11, 14, 2), uint32], Tensor[(14, 6, 10), uint8]) */
}

def @func_12612() -> Tensor[(9, 12, 16), float64] {
  %992 = @func_4865() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(9, 12, 16), float64], Tensor[(1728), float64]) */;
  %992.1
}

def @func_2039() -> (Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8]) {
  %996 = fn () -> (Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8]) {
    %993 = @func_920() /* ty=(Tensor[(14, 6, 10), uint8],) */;
    %994 = @func_1454() /* ty=Tensor[(14, 6, 10), float32] */;
    %995 = %993.0;
    (%994, %995)
  };
  %996() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8]) */
}

def @func_616() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
  %997 = @func_337() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %998 = @func_82() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %999 = %997.0;
  %1000 = %998.0;
  (%999, %1000)
}

def @func_293(%var_219: Tensor[(14, 6, 10), float64]) -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint16], Tensor[(14, 6, 10), float64]) {
  %1001 = @func_82() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %1002 = %1001.1;
  %1003 = cast(%var_219, dtype="uint8") /* ty=Tensor[(14, 6, 10), uint8] */;
  %1004 = shape_of(%1002, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1005 = cast(%1002, dtype="uint8") /* ty=Tensor[(14, 6, 10), uint8] */;
  %1006 = dyn.reshape(%1003, %1004, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1007 = cast(%var_219, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %1008 = reshape(%1007, newshape=[14, 6, 10]) /* ty=Tensor[(14, 6, 10), float64] */;
  %1009 = @func_108(%1008) /* ty=(Tensor[(14, 6, 10), float32],) */;
  %1010 = %1009.0;
  %1011 = cast(%1010, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %1012 = cast(%1002, dtype="uint32") /* ty=Tensor[(14, 6, 10), uint32] */;
  %1013 = shape_of(%1010, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1014 = cast(%1010, dtype="uint32") /* ty=Tensor[(14, 6, 10), uint32] */;
  %1015 = dyn.reshape(%1012, %1013, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1016 = add(%1014, %1015) /* ty=Tensor[(14, 6, 10), uint32] */;
  %1017 = cast(%1016, dtype="uint16") /* ty=Tensor[(14, 6, 10), uint16] */;
  %1018 = shape_of(%1010, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1019 = cast(%1010, dtype="uint16") /* ty=Tensor[(14, 6, 10), uint16] */;
  %1020 = dyn.reshape(%1017, %1018, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1021 = cast(%1010, dtype="float32") /* ty=Tensor[(14, 6, 10), float32] */;
  %1022 = acosh(%1021) /* ty=Tensor[(14, 6, 10), float32] */;
  %1023 = cast(%1022, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %1024 = left_shift(%1005, %1006) /* ty=Tensor[(14, 6, 10), uint8] */;
  %1025 = acos(%1011) /* ty=Tensor[(14, 6, 10), float64] */;
  %1026 = logical_xor(%1019, %1020) /* ty=Tensor[(14, 6, 10), uint16] */;
  %1027 = log2(%1023) /* ty=Tensor[(14, 6, 10), float64] */;
  (%1024, %1025, %1026, %1027)
}

def @func_936() -> (Tensor[(14, 6, 10), float32],) {
  @func_934() /* ty=(Tensor[(14, 6, 10), float32],) */
}

def @func_6910(%var_6806: int64, %var_6807: Tensor[(2, 1, 14), int64], %var_6861: Tensor[(2, 1, 14), float32]) -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(2, ?, 14), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(9, 11, 3), int16]) {
  %1028 = @func_2038() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8]) */;
  %1029 = @func_5648() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(9, 12, 16), float64], Tensor[(14, 6, 10), uint8]) */;
  %1030 = cast(%var_6806, dtype="int64") /* ty=int64 */;
  %1031 = cast(%var_6807, dtype="int64") /* ty=Tensor[(2, 1, 14), int64] */;
  %1032 = multiply(%1030, %1031) /* ty=Tensor[(2, 1, 14), int64] */;
  %1033 = cast(%1032, dtype="float32") /* ty=Tensor[(2, 1, 14), float32] */;
  %1034 = tan(%1033) /* ty=Tensor[(2, 1, 14), float32] */;
  %1035 = cast(%var_6861, dtype="uint16") /* ty=Tensor[(2, 1, 14), uint16] */;
  %1036 = shape_of(%1034, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1037 = cast(%1034, dtype="uint16") /* ty=Tensor[(2, 1, 14), uint16] */;
  %1038 = dyn.reshape(%1035, %1036, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1039 = bitwise_xor(%1037, %1038) /* ty=Tensor[(2, ?, 14), uint16] */;
  %1040 = cast(%1039, dtype="float64") /* ty=Tensor[(2, ?, 14), float64] */;
  %1041 = %1028.1;
  %1042 = cast(%1041, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %1043 = reshape(%1042, newshape=[840]) /* ty=Tensor[(840), float64] */;
  %1044 = @func_3011(%1043) /* ty=(Tensor[(384), int8], Tensor[(14, 6, 10), float64], Tensor[(840), float64], Tensor[(14, 16, 13), int32], Tensor[(4, 728), int32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %1045 = @func_4045() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64]) */;
  %1046 = cast(%var_6806, dtype="int16") /* ty=int16 */;
  %1047 = reshape(%1046, newshape=[]) /* ty=int16 */;
  %1048 = %1029.6;
  %1049 = erf(%1040) /* ty=Tensor[(2, ?, 14), float64] */;
  %1050 = %1044.6;
  %1051 = %1045.1;
  %1052 = @func_5434(%1047) /* ty=Tensor[(9, 11, 3), int16] */;
  (%1041, %1048, %1049, %1050, %1051, %1052)
}

def @func_185(%var_184: Tensor[(14, 6, 10), float64]) -> (Tensor[(14, 6, 10), bool], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), int8], Tensor[(14, 6, 10), float32]) {
  %1077 = fn (%var_166: Tensor[(14, 6, 10), float64]) -> (Tensor[(14, 6, 10), bool], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), int8], Tensor[(14, 6, 10), float32]) {
    %1053 = @func_82() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
    %1054 = %1053.0;
    %1055 = cast(%1054, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
    %1056 = reshape(%1055, newshape=[14, 6, 10]) /* ty=Tensor[(14, 6, 10), float64] */;
    %1057 = @func_108(%1056) /* ty=(Tensor[(14, 6, 10), float32],) */;
    %1058 = %1057.0;
    %1059 = cast(%1058, dtype="bool") /* ty=Tensor[(14, 6, 10), bool] */;
    %1060 = shape_of(%1054, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1061 = cast(%1054, dtype="bool") /* ty=Tensor[(14, 6, 10), bool] */;
    %1062 = dyn.reshape(%1059, %1060, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1063 = @func_82() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
    %1064 = @func_82() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
    %1065 = %1064.1;
    %1066 = cast(%var_166, dtype="int8") /* ty=Tensor[(14, 6, 10), int8] */;
    %1067 = shape_of(%1065, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1068 = cast(%1065, dtype="int8") /* ty=Tensor[(14, 6, 10), int8] */;
    %1069 = dyn.reshape(%1066, %1067, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %1070 = cast(%1054, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
    %1071 = reshape(%1070, newshape=[14, 6, 10]) /* ty=Tensor[(14, 6, 10), float64] */;
    %1072 = @func_108(%1071) /* ty=(Tensor[(14, 6, 10), float32],) */;
    %1073 = equal(%1061, %1062) /* ty=Tensor[(14, 6, 10), bool] */;
    %1074 = %1063.0;
    %1075 = bitwise_and(%1068, %1069) /* ty=Tensor[(14, 6, 10), int8] */;
    %1076 = %1072.0;
    (%1073, %1074, %1075, %1076)
  };
  %1077(%var_184) /* ty=(Tensor[(14, 6, 10), bool], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), int8], Tensor[(14, 6, 10), float32]) */
}

def @func_2068() -> Tensor[(14, 6, 10), float64] {
  %1079 = fn () -> Tensor[(14, 6, 10), float64] {
    %1078 = @func_82() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
    %1078.1
  };
  %1079() /* ty=Tensor[(14, 6, 10), float64] */
}

def @func_1438(%var_1414: int32) -> (Tensor[(11, 11, 8), int32], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float32]) {
  %1080 = cast(%var_1414, dtype="int32") /* ty=int32 */;
  %1081 = cast(meta[relay.Constant][25] /* ty=Tensor[(11, 11, 8), int32] */, dtype="int32") /* ty=Tensor[(11, 11, 8), int32] */;
  %1082 = @func_897() /* ty=(Tensor[(14, 6, 10), float32],) */;
  %1083 = @func_897() /* ty=(Tensor[(14, 6, 10), float32],) */;
  %1084 = bitwise_xor(%1080, %1081) /* ty=Tensor[(11, 11, 8), int32] */;
  %1085 = %1082.0;
  %1086 = %1083.0;
  (%1084, %1085, %1086)
}

def @func_7555() -> (Tensor[(14, 6, 10), uint8],) {
  @func_7553() /* ty=(Tensor[(14, 6, 10), uint8],) */
}

def @func_2181() -> (Tensor[(14, 6, 10), uint8],) {
  %1087 = @func_1810() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), bool], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
  %1088 = %1087.4;
  (%1088,)
}

def @func_2514() -> Tensor[(14, 6, 10), float64] {
  @func_2512() /* ty=Tensor[(14, 6, 10), float64] */
}

def @func_1509() -> Tensor[(14, 6, 10), float32] {
  %1089 = fn () -> Tensor[(14, 6, 10), float32] {
    @func_1454() /* ty=Tensor[(14, 6, 10), float32] */
  };
  %1089() /* ty=Tensor[(14, 6, 10), float32] */
}

def @func_13017() -> Tensor[(14, 6, 10), float64] {
  @func_13015() /* ty=Tensor[(14, 6, 10), float64] */
}

def @func_3863(%var_3812: Tensor[(960), bool]) -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(960), bool], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(16, 10, 6), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) {
  %1090 = @func_2767() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %1091 = @func_2731() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %1092 = %1090.0;
  %1093 = cast(%1092, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %1094 = reshape(%1093, newshape=[14, 6, 10]) /* ty=Tensor[(14, 6, 10), float64] */;
  %1095 = @func_293(%1094) /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint16], Tensor[(14, 6, 10), float64]) */;
  %1096 = @func_1141() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float32]) */;
  %1097 = cast(%var_3812, dtype="bool") /* ty=Tensor[(960), bool] */;
  %1098 = reshape(%1097, newshape=[16, 10, 6]) /* ty=Tensor[(16, 10, 6), bool] */;
  %1099 = @func_1050(%1098) /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(16, 10, 6), float32]) */;
  %1100 = cast(%var_3812, dtype="bool") /* ty=Tensor[(960), bool] */;
  %1101 = reshape(%1100, newshape=[16, 10, 6]) /* ty=Tensor[(16, 10, 6), bool] */;
  %1102 = @func_1050(%1101) /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(16, 10, 6), float32]) */;
  %1103 = %1102.1;
  %1104 = cast(%1103, dtype="float64") /* ty=Tensor[(16, 10, 6), float64] */;
  %1105 = @func_1968() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %1106 = @func_897() /* ty=(Tensor[(14, 6, 10), float32],) */;
  %1107 = %1106.0;
  %1108 = cast(%1107, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %1109 = %1091.1;
  %1110 = @func_1508() /* ty=Tensor[(14, 6, 10), float32] */;
  %1111 = %1095.3;
  %1112 = %1096.2;
  %1113 = %1099.0;
  %1114 = asin(%1104) /* ty=Tensor[(16, 10, 6), float64] */;
  %1115 = %1105.0;
  %1116 = cosh(%1108) /* ty=Tensor[(14, 6, 10), float64] */;
  (%1092, %1109, %1110, %var_3812, %1111, %1112, %1113, %1114, %1115, %1116)
}

def @func_9034() -> (Tensor[(14, 6, 10), float64], Tensor[(3, 6, 4), float32], Tensor[(72), float32], Tensor[(14, 6, 10), float64]) {
  %1124 = fn () -> (Tensor[(14, 6, 10), float64], Tensor[(3, 6, 4), float32], Tensor[(72), float32], Tensor[(14, 6, 10), float64]) {
    %1117 = @func_2767() /* ty=(Tensor[(14, 6, 10), float64],) */;
    %1118 = cast(meta[relay.Constant][26] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
    %1119 = reshape(%1118, newshape=[3, 6, 4]) /* ty=Tensor[(3, 6, 4), float32] */;
    %1120 = @func_8711() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
    %1121 = %1117.0;
    %1122 = @func_6326(%1119) /* ty=Tensor[(3, 6, 4), float32] */;
    %1123 = %1120.1;
    (%1121, %1122, meta[relay.Constant][26] /* ty=Tensor[(72), float32] */, %1123)
  };
  %1124() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(3, 6, 4), float32], Tensor[(72), float32], Tensor[(14, 6, 10), float64]) */
}

def @func_5156() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
  %1125 = @func_2300() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
  %1126 = @func_1968() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %1127 = %1125.1;
  %1128 = %1126.0;
  (%1127, %1128)
}

def @func_4356() -> Tensor[(14, 6, 10), float64] {
  %1130 = fn () -> Tensor[(14, 6, 10), float64] {
    %1129 = @func_3598() /* ty=(Tensor[(14, 6, 10), float64],) */;
    %1129.0
  };
  %1130() /* ty=Tensor[(14, 6, 10), float64] */
}

def @func_7827(%var_7772: Tensor[(1664), float32], %var_7824: int64, %var_7825: Tensor[(28), int64]) -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(960), bool], Tensor[(14, 6, 10), float64], Tensor[(1664), uint64], Tensor[(14, 6, 10), float64], Tensor[(1728), float32], Tensor[(1728), float64], Tensor[(14, 6, 10), float32], Tensor[(3, 6, 4), float32], Tensor[(72), float32], Tensor[(14, 6, 10), uint8], int64, Tensor[(28), int64]) {
  %1131 = @func_7177() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %1132 = @func_1956() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
  %1133 = cast(meta[relay.Constant][27] /* ty=Tensor[(1664), float32] */, dtype="float32") /* ty=Tensor[(1664), float32] */;
  %1134 = cast(meta[relay.Constant][28] /* ty=Tensor[(960), bool] */, dtype="bool") /* ty=Tensor[(960), bool] */;
  %1135 = reshape(%1133, newshape=[16, 8, 13]) /* ty=Tensor[(16, 8, 13), float32] */;
  %1136 = reshape(%1134, newshape=[480, 2]) /* ty=Tensor[(480, 2), bool] */;
  %1137 = @func_5264(%1135, %1136) /* ty=(Tensor[(16, 8, 13), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(480, 2), bool], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %1138 = @func_3574() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
  %1139 = cast(%var_7772, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
  %1140 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(1664), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1141 = cast(meta[relay.Constant][27] /* ty=Tensor[(1664), float32] */, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
  %1142 = dyn.reshape(%1139, %1140, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %1143 = @func_7379() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
  %1144 = cast(meta[relay.Constant][29] /* ty=Tensor[(1728), float64] */, dtype="float64") /* ty=Tensor[(1728), float64] */;
  %1145 = reshape(%1144, newshape=[1728]) /* ty=Tensor[(1728), float64] */;
  %1146 = @func_6997(%1145) /* ty=(Tensor[(1728), float32],) */;
  %1147 = %1137.5;
  %1148 = cast(%1147, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %1149 = reshape(%1148, newshape=[14, 6, 10]) /* ty=Tensor[(14, 6, 10), float64] */;
  %1150 = @func_108(%1149) /* ty=(Tensor[(14, 6, 10), float32],) */;
  %1151 = cast(meta[relay.Constant][30] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %1152 = reshape(%1151, newshape=[3, 6, 4]) /* ty=Tensor[(3, 6, 4), float32] */;
  %1153 = cast(%var_7824, dtype="int64") /* ty=int64 */;
  %1154 = cast(%var_7825, dtype="int64") /* ty=Tensor[(28), int64] */;
  %1155 = cast(%var_7825, dtype="float32") /* ty=Tensor[(28), float32] */;
  %1156 = reshape(%1153, newshape=[]) /* ty=int64 */;
  %1157 = reshape(%1154, newshape=[2, 1, 14]) /* ty=Tensor[(2, 1, 14), int64] */;
  %1158 = reshape(%1155, newshape=[2, 1, 14]) /* ty=Tensor[(2, 1, 14), float32] */;
  %1159 = @func_6910(%1156, %1157, %1158) /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(2, ?, 14), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(9, 11, 3), int16]) */;
  %1160 = %1131.0;
  %1161 = %1132.0;
  %1162 = %1138.3;
  %1163 = bitwise_and(%1141, %1142) /* ty=Tensor[(1664), uint64] */;
  %1164 = %1143.1;
  %1165 = %1146.0;
  %1166 = %1150.0;
  %1167 = @func_6326(%1152) /* ty=Tensor[(3, 6, 4), float32] */;
  %1168 = %1159.1;
  (%1160, %1161, %1147, meta[relay.Constant][28] /* ty=Tensor[(960), bool] */, %1162, %1163, %1164, %1165, meta[relay.Constant][29] /* ty=Tensor[(1728), float64] */, %1166, %1167, meta[relay.Constant][30] /* ty=Tensor[(72), float32] */, %1168, %var_7824, %var_7825)
}

def @func_13811() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) {
  %1172 = fn () -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) {
    %1169 = @func_3598() /* ty=(Tensor[(14, 6, 10), float64],) */;
    %1170 = @func_1621() /* ty=Tensor[(14, 6, 10), uint8] */;
    %1171 = %1169.0;
    (%1170, %1171)
  };
  %1172() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */
}

def @func_3656() -> (Tensor[(384), int8],) {
  %1173 = @func_1354() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(384), int8]) */;
  %1174 = %1173.2;
  (%1174,)
}

def @func_8876() -> Tensor[(14, 6, 10), float32] {
  %1176 = fn () -> Tensor[(14, 6, 10), float32] {
    %1175 = @func_1093() /* ty=(Tensor[(14, 6, 10), float32],) */;
    %1175.0
  };
  %1176() /* ty=Tensor[(14, 6, 10), float32] */
}

def @func_2583(%var_2579: Tensor[(9, 12, 16), float64]) -> Tensor[(9, 12, 16), float64] {
  %1177 = cast(%var_2579, dtype="float64") /* ty=Tensor[(9, 12, 16), float64] */;
  cos(%1177) /* ty=Tensor[(9, 12, 16), float64] */
}

def @func_5318() -> Tensor[(14, 6, 10), float64] {
  @func_5316() /* ty=Tensor[(14, 6, 10), float64] */
}

def @func_1115(%var_1114: Tensor[(14, 16, 13), int32]) -> Tensor[(14, 16, 13), int32] {
  %1180 = fn (%var_1100: Tensor[(14, 16, 13), int32]) -> Tensor[(14, 16, 13), int32] {
    %1178 = cast(meta[relay.Constant][31] /* ty=Tensor[(14, 1, 13), int32] */, dtype="int32") /* ty=Tensor[(14, 1, 13), int32] */;
    %1179 = cast(%var_1100, dtype="int32") /* ty=Tensor[(14, 16, 13), int32] */;
    bitwise_or(%1178, %1179) /* ty=Tensor[(14, 16, 13), int32] */
  };
  %1180(%var_1114) /* ty=Tensor[(14, 16, 13), int32] */
}

def @func_13958() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
  %1181 = @func_800() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %1182 = @func_2884() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(384), int8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), int8]) */;
  %1183 = %1181.0;
  %1184 = %1182.6;
  (%1183, %1184)
}

def @func_4345() -> Tensor[(14, 6, 10), uint8] {
  %1186 = fn () -> Tensor[(14, 6, 10), uint8] {
    %1185 = @func_1956() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
    %1185.0
  };
  %1186() /* ty=Tensor[(14, 6, 10), uint8] */
}

def @func_14191() -> Tensor[(14, 6, 10), uint8] {
  %1188 = fn () -> Tensor[(14, 6, 10), uint8] {
    %1187 = @func_11426() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
    %1187.2
  };
  %1188() /* ty=Tensor[(14, 6, 10), uint8] */
}

def @func_12195(%var_12193: Tensor[(4, 9, 9), uint64]) -> (Tensor[(4, 9, 9), bool], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
  @func_12192(%var_12193) /* ty=(Tensor[(4, 9, 9), bool], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */
}

def @func_5922(%var_5920: Tensor[(1, 12, 10), float64]) -> (Tensor[(1, 12, 10), float64],) {
  @func_5919(%var_5920) /* ty=(Tensor[(1, 12, 10), float64],) */
}

def @func_3425() -> (Tensor[(14, 6, 10), uint8],) {
  @func_3423() /* ty=(Tensor[(14, 6, 10), uint8],) */
}

def @func_1926(%var_1924: bool, %var_1925: Tensor[(15, 2, 12), bool]) -> (Tensor[(15, 2, 12), int8], Tensor[(14, 6, 10), uint8]) {
  %1199 = fn (%var_1908: bool, %var_1909: Tensor[(15, 2, 12), bool]) -> (Tensor[(15, 2, 12), int8], Tensor[(14, 6, 10), uint8]) {
    %1189 = cast(%var_1908, dtype="bool") /* ty=bool */;
    %1190 = cast(%var_1909, dtype="bool") /* ty=Tensor[(15, 2, 12), bool] */;
    %1191 = logical_or(%1189, %1190) /* ty=Tensor[(15, 2, 12), bool] */;
    %1192 = cast(%1191, dtype="int8") /* ty=Tensor[(15, 2, 12), int8] */;
    %1193 = shape_of(%var_1909, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1194 = cast(%var_1909, dtype="int8") /* ty=Tensor[(15, 2, 12), int8] */;
    %1195 = dyn.reshape(%1192, %1193, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %1196 = @func_1354() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(384), int8]) */;
    %1197 = multiply(%1194, %1195) /* ty=Tensor[(15, 2, 12), int8] */;
    %1198 = %1196.0;
    (%1197, %1198)
  };
  %1199(%var_1924, %var_1925) /* ty=(Tensor[(15, 2, 12), int8], Tensor[(14, 6, 10), uint8]) */
}

def @func_11523() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
  %1200 = @func_1701() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %1201 = %1200.0;
  %1202 = @func_10248() /* ty=Tensor[(14, 6, 10), uint8] */;
  (%1201, %1202)
}

def @func_1732() -> Tensor[(14, 6, 10), float32] {
  %1204 = fn () -> Tensor[(14, 6, 10), float32] {
    %1203 = @func_1591() /* ty=(Tensor[(14, 6, 10), float32],) */;
    %1203.0
  };
  %1204() /* ty=Tensor[(14, 6, 10), float32] */
}

def @func_3014(%var_3012: Tensor[(840), float64]) -> (Tensor[(384), int8], Tensor[(14, 6, 10), float64], Tensor[(840), float64], Tensor[(14, 16, 13), int32], Tensor[(4, 728), int32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
  @func_3011(%var_3012) /* ty=(Tensor[(384), int8], Tensor[(14, 6, 10), float64], Tensor[(840), float64], Tensor[(14, 16, 13), int32], Tensor[(4, 728), int32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */
}

def @func_4557() -> (Tensor[(384), int8],) {
  %1207 = fn () -> (Tensor[(384), int8],) {
    %1205 = @func_3656() /* ty=(Tensor[(384), int8],) */;
    %1206 = %1205.0;
    (%1206,)
  };
  %1207() /* ty=(Tensor[(384), int8],) */
}

def @func_6398() -> (Tensor[(14, 6, 10), float32],) {
  %1209 = fn () -> (Tensor[(14, 6, 10), float32],) {
    %1208 = @func_1731() /* ty=Tensor[(14, 6, 10), float32] */;
    (%1208,)
  };
  %1209() /* ty=(Tensor[(14, 6, 10), float32],) */
}

def @func_3155(%var_3153: Tensor[(16, 9, 13), float64], %var_3154: Tensor[(16, 9, 13), float64]) -> (Tensor[(16, 9, 13), float64],) {
  %1215 = fn (%var_3145: Tensor[(16, 9, 13), float64], %var_3146: Tensor[(16, 9, 13), float64]) -> (Tensor[(16, 9, 13), float64],) {
    %1210 = cast(%var_3146, dtype="float64") /* ty=Tensor[(16, 9, 13), float64] */;
    %1211 = shape_of(%var_3145, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1212 = cast(%var_3145, dtype="float64") /* ty=Tensor[(16, 9, 13), float64] */;
    %1213 = dyn.reshape(%1210, %1211, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1214 = divide(%1212, %1213) /* ty=Tensor[(16, 9, 13), float64] */;
    (%1214,)
  };
  %1215(%var_3153, %var_3154) /* ty=(Tensor[(16, 9, 13), float64],) */
}

def @func_10063() -> Tensor[(14, 6, 10), float32] {
  @func_10061() /* ty=Tensor[(14, 6, 10), float32] */
}

def @func_1969() -> (Tensor[(14, 6, 10), uint8],) {
  %1218 = fn () -> (Tensor[(14, 6, 10), uint8],) {
    %1216 = @func_920() /* ty=(Tensor[(14, 6, 10), uint8],) */;
    %1217 = %1216.0;
    (%1217,)
  };
  %1218() /* ty=(Tensor[(14, 6, 10), uint8],) */
}

def @func_13661() -> (Tensor[(14, 6, 10), uint8],) {
  @func_13659() /* ty=(Tensor[(14, 6, 10), uint8],) */
}

def @func_12450() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) {
  %1222 = fn () -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) {
    %1219 = @func_9724() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
    %1220 = @func_10650() /* ty=Tensor[(14, 6, 10), uint8] */;
    %1221 = %1219.1;
    (%1220, %1221)
  };
  %1222() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */
}

def @func_10061() -> Tensor[(14, 6, 10), float32] {
  @func_8875() /* ty=Tensor[(14, 6, 10), float32] */
}

def @func_9263() -> Tensor[(14, 6, 10), float64] {
  @func_9261() /* ty=Tensor[(14, 6, 10), float64] */
}

def @func_5168() -> (Tensor[(14, 6, 10), float64],) {
  %1225 = fn () -> (Tensor[(14, 6, 10), float64],) {
    %1223 = @func_3574() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
    %1224 = %1223.3;
    (%1224,)
  };
  %1225() /* ty=(Tensor[(14, 6, 10), float64],) */
}

def @func_1591() -> (Tensor[(14, 6, 10), float32],) {
  %1226 = @func_897() /* ty=(Tensor[(14, 6, 10), float32],) */;
  %1227 = %1226.0;
  (%1227,)
}

def @func_8228() -> (Tensor[(14, 6, 10), float64], Tensor[(4, 728), int32]) {
  %1234 = fn () -> (Tensor[(14, 6, 10), float64], Tensor[(4, 728), int32]) {
    %1228 = @func_5648() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(9, 12, 16), float64], Tensor[(14, 6, 10), uint8]) */;
    %1229 = %1228.4;
    %1230 = cast(%1229, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
    %1231 = reshape(%1230, newshape=[840]) /* ty=Tensor[(840), float64] */;
    %1232 = @func_3011(%1231) /* ty=(Tensor[(384), int8], Tensor[(14, 6, 10), float64], Tensor[(840), float64], Tensor[(14, 16, 13), int32], Tensor[(4, 728), int32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
    %1233 = %1232.4;
    (%1229, %1233)
  };
  %1234() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(4, 728), int32]) */
}

def @func_10995(%var_10993: Tensor[(3, 8, 13), uint8], %var_10994: Tensor[(3, 8, 13), uint8]) -> Tensor[(3, 8, 13), bool] {
  @func_10991(%var_10993, %var_10994) /* ty=Tensor[(3, 8, 13), bool] */
}

def @func_12788() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
  %1239 = fn () -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
    %1235 = @func_337() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
    %1236 = @func_4239() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), int8], Tensor[(14, 6, 10), uint8]) */;
    %1237 = %1235.1;
    %1238 = %1236.1;
    (%1237, %1238)
  };
  %1239() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */
}

def @func_3600() -> (Tensor[(14, 6, 10), float64],) {
  @func_3598() /* ty=(Tensor[(14, 6, 10), float64],) */
}

def @func_6999(%var_6998: Tensor[(1728), float64]) -> (Tensor[(1728), float32],) {
  %1247 = fn (%var_6988: Tensor[(1728), float64]) -> (Tensor[(1728), float32],) {
    %1240 = @func_4865() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(9, 12, 16), float64], Tensor[(1728), float64]) */;
    %1241 = %1240.2;
    %1242 = cast(%var_6988, dtype="float32") /* ty=Tensor[(1728), float32] */;
    %1243 = shape_of(%1241, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1244 = cast(%1241, dtype="float32") /* ty=Tensor[(1728), float32] */;
    %1245 = dyn.reshape(%1242, %1243, newshape=[]) /* ty=Tensor[(?), float32] */;
    %1246 = multiply(%1244, %1245) /* ty=Tensor[(1728), float32] */;
    (%1246,)
  };
  %1247(%var_6998) /* ty=(Tensor[(1728), float32],) */
}

def @func_11442() -> (Tensor[(14, 6, 10), uint8],) {
  %1250 = fn () -> (Tensor[(14, 6, 10), uint8],) {
    %1248 = @func_2181() /* ty=(Tensor[(14, 6, 10), uint8],) */;
    %1249 = %1248.0;
    (%1249,)
  };
  %1250() /* ty=(Tensor[(14, 6, 10), uint8],) */
}

def @func_1210() -> (Tensor[(14, 6, 10), uint8],) {
  @func_1208() /* ty=(Tensor[(14, 6, 10), uint8],) */
}

def @func_13015() -> Tensor[(14, 6, 10), float64] {
  @func_3225() /* ty=Tensor[(14, 6, 10), float64] */
}

def @func_1093() -> (Tensor[(14, 6, 10), float32],) {
  %1251 = @func_934() /* ty=(Tensor[(14, 6, 10), float32],) */;
  %1252 = %1251.0;
  (%1252,)
}

def @func_10652() -> Tensor[(14, 6, 10), uint8] {
  @func_10650() /* ty=Tensor[(14, 6, 10), uint8] */
}

def @func_4954() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) {
  %1253 = @func_1208() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %1254 = @func_4239() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), int8], Tensor[(14, 6, 10), uint8]) */;
  %1255 = @func_3598() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %1256 = %1253.0;
  %1257 = %1254.3;
  %1258 = %1255.0;
  (%1256, %1257, %1258)
}

def @func_8125() -> Tensor[(14, 6, 10), float64] {
  %1260 = fn () -> Tensor[(14, 6, 10), float64] {
    %1259 = @func_3574() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
    %1259.0
  };
  %1260() /* ty=Tensor[(14, 6, 10), float64] */
}

def @func_6094(%var_6093: Tensor[(15, 2, 3), float64]) -> (Tensor[(15, 2, 3), float64],) {
  %1263 = fn (%var_6082: Tensor[(15, 2, 3), float64]) -> (Tensor[(15, 2, 3), float64],) {
    %1261 = cast(%var_6082, dtype="float64") /* ty=Tensor[(15, 2, 3), float64] */;
    %1262 = sigmoid(%1261) /* ty=Tensor[(15, 2, 3), float64] */;
    (%1262,)
  };
  %1263(%var_6093) /* ty=(Tensor[(15, 2, 3), float64],) */
}

def @func_12582(%var_12580: int32, %var_12581: Tensor[(13, 13, 7), int32]) -> Tensor[(13, 13, 7), bool] {
  @func_12578(%var_12580, %var_12581) /* ty=Tensor[(13, 13, 7), bool] */
}

def @func_12677(%var_12675: Tensor[(3, 8, 8), int8]) -> (Tensor[(3, 8, 8), int8], Tensor[(14, 6, 10), uint64], Tensor[(3, 8, 8), float32], Tensor[(14, 6, 10), float64]) {
  @func_12674(%var_12675) /* ty=(Tensor[(3, 8, 8), int8], Tensor[(14, 6, 10), uint64], Tensor[(3, 8, 8), float32], Tensor[(14, 6, 10), float64]) */
}

def @func_3704() -> Tensor[(14, 6, 10), uint8] {
  %1264 = @func_1395() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %1264.0
}

def @func_12578(%var_12552: int32, %var_12553: Tensor[(13, 13, 7), int32]) -> Tensor[(13, 13, 7), bool] {
  %1265 = cast(%var_12552, dtype="bool") /* ty=bool */;
  %1266 = cast(%var_12553, dtype="bool") /* ty=Tensor[(13, 13, 7), bool] */;
  equal(%1265, %1266) /* ty=Tensor[(13, 13, 7), bool] */
}

def @func_8195() -> (Tensor[(14, 6, 10), uint8],) {
  %1268 = fn () -> (Tensor[(14, 6, 10), uint8],) {
    %1267 = @func_1621() /* ty=Tensor[(14, 6, 10), uint8] */;
    (%1267,)
  };
  %1268() /* ty=(Tensor[(14, 6, 10), uint8],) */
}

def @func_9261() -> Tensor[(14, 6, 10), float64] {
  %1269 = @func_2767() /* ty=(Tensor[(14, 6, 10), float64],) */;
  %1269.0
}

def @func_4811() -> (Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(360), bool], Tensor[(360), bool], Tensor[(14, 6, 10), float64]) {
  %1270 = @func_2798() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
  %1271 = @func_4405() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %1272 = cast(meta[relay.Constant][32] /* ty=Tensor[(360), bool] */, dtype="bool") /* ty=Tensor[(360), bool] */;
  %1273 = reshape(%1272, newshape=[360]) /* ty=Tensor[(360), bool] */;
  %1274 = @func_4638(%1273) /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], bool, Tensor[(360), bool], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
  %1275 = @func_1454() /* ty=Tensor[(14, 6, 10), float32] */;
  %1276 = %1270.2;
  %1277 = %1271.0;
  %1278 = %1274.3;
  %1279 = @func_2067() /* ty=Tensor[(14, 6, 10), float64] */;
  (%1275, %1276, %1277, %1278, meta[relay.Constant][32] /* ty=Tensor[(360), bool] */, %1279)
}

def @func_1441(%var_1439: int32) -> (Tensor[(11, 11, 8), int32], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float32]) {
  @func_1438(%var_1439) /* ty=(Tensor[(11, 11, 8), int32], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float32]) */
}

def @main(%var_14234: Tensor[(7, 16, 5), float32]) -> Tensor[(7, 16, 5), float32] {
  %1280 = cast(meta[relay.Constant][33] /* ty=Tensor[(7, 16, 5), float32] */, dtype="float32") /* ty=Tensor[(7, 16, 5), float32] */;
  %1281 = shape_of(%var_14234, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1282 = cast(%var_14234, dtype="float32") /* ty=Tensor[(7, 16, 5), float32] */;
  %1283 = dyn.reshape(%1280, %1281, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%1282, %1283) /* ty=Tensor[(7, 16, 5), float32] */
}

def @func_111(%var_109: Tensor[(14, 6, 10), float64]) -> (Tensor[(14, 6, 10), float32],) {
  @func_108(%var_109) /* ty=(Tensor[(14, 6, 10), float32],) */
}

def @func_4046() -> (Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64]) {
  %1288 = fn () -> (Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64]) {
    %1284 = @func_2906() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float32]) */;
    %1285 = @func_2767() /* ty=(Tensor[(14, 6, 10), float64],) */;
    %1286 = %1284.1;
    %1287 = %1285.0;
    (%1286, %1287)
  };
  %1288() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64]) */
}

def @func_9533() -> (Tensor[(14, 6, 10), float64],) {
  %1291 = fn () -> (Tensor[(14, 6, 10), float64],) {
    %1289 = @func_3313() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
    %1290 = %1289.2;
    (%1290,)
  };
  %1291() /* ty=(Tensor[(14, 6, 10), float64],) */
}

def @func_9402() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) {
  @func_9400() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */
}

def @func_10865(%var_10857: Tensor[(195, 1), float32]) -> (Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(1, 12, 10), float64], Tensor[(195, 1), float32]) {
  %1292 = @func_1141() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float32]) */;
  %1293 = @func_9724() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %1294 = cast(%var_10857, dtype="float32") /* ty=Tensor[(195, 1), float32] */;
  %1295 = cast(%var_10857, dtype="float32") /* ty=Tensor[(195, 1), float32] */;
  %1296 = reshape(%1294, newshape=[3, 13, 5]) /* ty=Tensor[(3, 13, 5), float32] */;
  %1297 = reshape(%1295, newshape=[3, 13, 5]) /* ty=Tensor[(3, 13, 5), float32] */;
  %1298 = @func_7312(%1296, %1297) /* ty=(Tensor[(3, 13, 5), float32], Tensor[(1, 12, 10), float64], Tensor[(120), float64], Tensor[(14, 6, 10), uint8]) */;
  %1299 = %1292.1;
  %1300 = @func_8124() /* ty=Tensor[(14, 6, 10), float64] */;
  %1301 = %1293.1;
  %1302 = @func_3225() /* ty=Tensor[(14, 6, 10), float64] */;
  %1303 = %1298.1;
  (%1299, %1300, %1301, %1302, %1303, %var_10857)
}

def @func_1957() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
  %1307 = fn () -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
    %1304 = @func_1854() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */;
    %1305 = %1304.1;
    %1306 = @func_578() /* ty=Tensor[(14, 6, 10), uint8] */;
    (%1305, %1306)
  };
  %1307() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */
}

def @func_9611() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
  @func_9609() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */
}

def @func_13861() -> (Tensor[(14, 6, 10), uint8], Tensor[(1728), float64]) {
  %1308 = @func_12449() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
  %1309 = %1308.0;
  %1310 = @func_11331() /* ty=Tensor[(1728), float64] */;
  (%1309, %1310)
}

def @func_6221() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
  %1311 = @func_3313() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
  %1312 = @func_4954() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
  %1313 = @func_3970() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32]) */;
  %1314 = %1311.1;
  %1315 = %1312.1;
  %1316 = %1313.0;
  (%1314, %1315, %1316)
}

def @func_2329() -> (Tensor[(14, 6, 10), uint8],) {
  @func_2327() /* ty=(Tensor[(14, 6, 10), uint8],) */
}

def @func_13969() -> Tensor[(14, 6, 10), uint8] {
  %1318 = fn () -> Tensor[(14, 6, 10), uint8] {
    %1317 = @func_11703() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32]) */;
    %1317.0
  };
  %1318() /* ty=Tensor[(14, 6, 10), uint8] */
}

def @func_11899() -> (Tensor[(360), bool],) {
  %1321 = fn () -> (Tensor[(360), bool],) {
    %1319 = @func_4811() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(360), bool], Tensor[(360), bool], Tensor[(14, 6, 10), float64]) */;
    %1320 = %1319.4;
    (%1320,)
  };
  %1321() /* ty=(Tensor[(360), bool],) */
}

def @func_4123() -> (Tensor[(14, 6, 10), float64],) {
  @func_4121() /* ty=(Tensor[(14, 6, 10), float64],) */
}

def @func_9129(%var_9127: Tensor[(7, 10, 4), float32]) -> Tensor[(7, 10, 4), float32] {
  @func_9126(%var_9127) /* ty=Tensor[(7, 10, 4), float32] */
}

def @func_6223() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) {
  @func_6221() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */
}

def @func_1701() -> (Tensor[(14, 6, 10), float64],) {
  %1322 = @func_1320() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */;
  %1323 = %1322.0;
  (%1323,)
}

def @func_7131(%var_7130: Tensor[(1728), float64]) -> (Tensor[(14, 6, 10), float64], Tensor[(9, 12, 16), float64], Tensor[(1728), uint64]) {
  %1334 = fn (%var_7121: Tensor[(1728), float64]) -> (Tensor[(14, 6, 10), float64], Tensor[(9, 12, 16), float64], Tensor[(1728), uint64]) {
    %1324 = @func_5825() /* ty=(Tensor[(14, 6, 10), float64],) */;
    %1325 = cast(%var_7121, dtype="float64") /* ty=Tensor[(1728), float64] */;
    %1326 = reshape(%1325, newshape=[9, 12, 16]) /* ty=Tensor[(9, 12, 16), float64] */;
    %1327 = cast(meta[relay.Constant][34] /* ty=Tensor[(1728), float64] */, dtype="uint64") /* ty=Tensor[(1728), uint64] */;
    %1328 = shape_of(%var_7121, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1329 = cast(%var_7121, dtype="uint64") /* ty=Tensor[(1728), uint64] */;
    %1330 = dyn.reshape(%1327, %1328, newshape=[]) /* ty=Tensor[(?), uint64] */;
    %1331 = %1324.0;
    %1332 = @func_2583(%1326) /* ty=Tensor[(9, 12, 16), float64] */;
    %1333 = add(%1329, %1330) /* ty=Tensor[(1728), uint64] */;
    (%1331, %1332, %1333)
  };
  %1334(%var_7130) /* ty=(Tensor[(14, 6, 10), float64], Tensor[(9, 12, 16), float64], Tensor[(1728), uint64]) */
}

def @func_13289() -> (Tensor[(14, 6, 10), float64],) {
  %1337 = fn () -> (Tensor[(14, 6, 10), float64],) {
    %1335 = @func_9033() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(3, 6, 4), float32], Tensor[(72), float32], Tensor[(14, 6, 10), float64]) */;
    %1336 = %1335.3;
    (%1336,)
  };
  %1337() /* ty=(Tensor[(14, 6, 10), float64],) */
}

def @func_6652() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) {
  @func_6650() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64]) */
}

def @func_2767() -> (Tensor[(14, 6, 10), float64],) {
  %1338 = @func_578() /* ty=Tensor[(14, 6, 10), uint8] */;
  %1339 = cast(%1338, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %1340 = sin(%1339) /* ty=Tensor[(14, 6, 10), float64] */;
  (%1340,)
}

def @func_8712() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
  %1344 = fn () -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) {
    %1341 = @func_1701() /* ty=(Tensor[(14, 6, 10), float64],) */;
    %1342 = %1341.0;
    %1343 = @func_2067() /* ty=Tensor[(14, 6, 10), float64] */;
    (%1342, %1343)
  };
  %1344() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */
}

def @func_2419() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
  %1345 = @func_730() /* ty=(Tensor[(14, 6, 10), bool], Tensor[(14, 6, 10), float64]) */;
  %1346 = %1345.1;
  %1347 = @func_832() /* ty=Tensor[(14, 6, 10), uint8] */;
  (%1346, %1347)
}

def @func_10383(%var_10338: Tensor[(180, 2), bool]) -> (Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float32], Tensor[(15, 2, 12), int8], bool, Tensor[(180, 2), bool], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float32]) {
  %1348 = @func_1454() /* ty=Tensor[(14, 6, 10), float32] */;
  %1349 = cast(%1348, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %1350 = reshape(%1349, newshape=[14, 6, 10]) /* ty=Tensor[(14, 6, 10), float64] */;
  %1351 = @func_108(%1350) /* ty=(Tensor[(14, 6, 10), float32],) */;
  %1352 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %1353 = cast(%var_10338, dtype="bool") /* ty=Tensor[(180, 2), bool] */;
  %1354 = reshape(%1352, newshape=[]) /* ty=bool */;
  %1355 = reshape(%1353, newshape=[15, 2, 12]) /* ty=Tensor[(15, 2, 12), bool] */;
  %1356 = @func_1923(%1354, %1355) /* ty=(Tensor[(15, 2, 12), int8], Tensor[(14, 6, 10), uint8]) */;
  %1357 = @func_5835() /* ty=(Tensor[(14, 6, 10), uint8],) */;
  %1358 = %1351.0;
  %1359 = %1356.0;
  %1360 = %1357.0;
  %1361 = @func_8875() /* ty=Tensor[(14, 6, 10), float32] */;
  (%1348, %1358, %1359, True /* ty=bool */, %var_10338, %1360, %1361)
}

def @func_11562() -> Tensor[(14, 6, 10), uint8] {
  @func_11560() /* ty=Tensor[(14, 6, 10), uint8] */
}

def @func_3576() -> (Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
  @func_3574() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */
}

def @func_9113() -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
  %1370 = fn () -> (Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) {
    %1362 = @func_1810() /* ty=(Tensor[(14, 6, 10), float32], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), bool], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8]) */;
    %1363 = @func_5085() /* ty=(Tensor[(14, 6, 10), uint8],) */;
    %1364 = @func_616() /* ty=(Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), float64]) */;
    %1365 = @func_6768() /* ty=(Tensor[(14, 6, 10), uint8],) */;
    %1366 = %1362.4;
    %1367 = %1363.0;
    %1368 = %1364.1;
    %1369 = %1365.0;
    (%1366, %1367, %1368, %1369)
  };
  %1370() /* ty=(Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), uint8], Tensor[(14, 6, 10), float64], Tensor[(14, 6, 10), uint8]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen441/build/output.py:4881: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen441/build/output.py", line 4886, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(560) tvmgen_default_fused_floor_mod_kernel0(float* __restrict__ T_floor_mod, float* __restrict__ placeholder, float* __restrict__ placeholder1) {
  T_floor_mod[(((int)threadIdx.x))] = (placeholder[(((int)threadIdx.x))] - (floorf((placeholder[(((int)threadIdx.x))] / placeholder1[(((int)threadIdx.x))])) * placeholder1[(((int)threadIdx.x))]));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


==========mod==========
#[version = "0.0.5"]
def @func_18873() -> (Tensor[(720), float64], Tensor[(100), float64], Tensor[(11, 14, 15), bool], int32) {
  %0 = @func_13542() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(100), float64]) */;
  %1 = cast(-5 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %2 = reshape(%1, newshape=[]) /* ty=int32 */;
  %3 = @func_7921(%2) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(11, 14, 15), bool], int32, Tensor[(2310), int32]) */;
  %4 = @func_12740() /* ty=Tensor[(720), float64] */;
  %5 = %0.2;
  %6 = %3.3;
  (%4, %5, %6, -5 /* ty=int32 */)
}

def @func_5660() -> (Tensor[(16, 12, 5), float32],) {
  %7 = @func_4221() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float32]) */;
  %8 = %7.0;
  (%8,)
}

def @func_17577() -> (Tensor[(16, 12, 5), float32], Tensor[(100), float32]) {
  %9 = @func_8404() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %10 = @func_16532() /* ty=(Tensor[(100), float32],) */;
  %11 = %9.0;
  %12 = %10.0;
  (%11, %12)
}

def @func_9750() -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) {
  %13 = @func_7971() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */;
  %14 = @func_5148() /* ty=(Tensor[(10, ?, 10), bool],) */;
  %15 = %13.0;
  %16 = %14.0;
  (%15, %16)
}

def @func_18475() -> (Tensor[(10, ?, 10), bool],) {
  %17 = @func_6137() /* ty=Tensor[(10, ?, 10), bool] */;
  (%17,)
}

def @func_5278(%var_5274: Tensor[(16, 5, 14), float64]) -> (Tensor[(16, 5, 14), float64],) {
  %18 = cast(%var_5274, dtype="float64") /* ty=Tensor[(16, 5, 14), float64] */;
  %19 = asinh(%18) /* ty=Tensor[(16, 5, 14), float64] */;
  (%19,)
}

def @func_5507() -> Tensor[(10, ?, 10), bool] {
  @func_4279() /* ty=Tensor[(10, ?, 10), bool] */
}

def @func_7971() -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) {
  %20 = @func_4221() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float32]) */;
  %21 = %20.0;
  %22 = @func_4279() /* ty=Tensor[(10, ?, 10), bool] */;
  (%21, %22)
}

def @func_4444() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  %23 = @func_4350() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %24 = @func_4405() /* ty=Tensor[(16, 12, 5), float32] */;
  %25 = %23.0;
  (%24, %25)
}

def @func_19151(%var_19146: Tensor[(1200, 1), uint64]) -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(1200, 1), uint64]) {
  %26 = @func_15493() /* ty=(Tensor[(10, 8, 10), float32], Tensor[(16, 12, 5), float32]) */;
  %27 = @func_15173() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %28 = cast(%var_19146, dtype="uint64") /* ty=Tensor[(1200, 1), uint64] */;
  %29 = reshape(%28, newshape=[1200]) /* ty=Tensor[(1200), uint64] */;
  %30 = @func_16964(%29) /* ty=(Tensor[(100), float32], Tensor[(16, 12, 5), float32], uint64, Tensor[(1200), uint64]) */;
  %31 = %26.1;
  %32 = %27.0;
  %33 = %30.1;
  (%31, %32, %33, %var_19146)
}

def @func_8663() -> (Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) {
  %34 = @func_6192() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(720), float64], Tensor[(16, 12, 5), float32]) */;
  %35 = @func_7716() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), int8]) */;
  %36 = %34.0;
  %37 = %35.0;
  (%36, %37)
}

def @func_7019() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  %38 = @func_4444() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %39 = @func_4582() /* ty=Tensor[(16, 12, 5), float32] */;
  %40 = %38.0;
  (%39, %40)
}

def @func_14058() -> (Tensor[(720), float64], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) {
  %41 = @func_10496() /* ty=(Tensor[(720), float64], Tensor[(100), float32]) */;
  %42 = %41.0;
  %43 = @func_4649() /* ty=Tensor[(16, 12, 5), float32] */;
  %44 = @func_4279() /* ty=Tensor[(10, ?, 10), bool] */;
  (%42, %43, %44)
}

def @func_21010(%var_21001: Tensor[(10, 2, 2), float64]) -> (Tensor[(10, 2, 2), float64], Tensor[(11, 14, 15), bool], int32, Tensor[(4, 1), int32]) {
  %45 = cast(%var_21001, dtype="float64") /* ty=Tensor[(10, 2, 2), float64] */;
  %46 = cast(-8 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %47 = cast(meta[relay.Constant][0] /* ty=Tensor[(4, 1), int32] */, dtype="int32") /* ty=Tensor[(4, 1), int32] */;
  %48 = reshape(%46, newshape=[]) /* ty=int32 */;
  %49 = reshape(%47, newshape=[4]) /* ty=Tensor[(4), int32] */;
  %50 = @func_9587(%48, %49) /* ty=(Tensor[(100), float32], Tensor[(11, 14, 15), bool], int32, Tensor[(2310), int32], Tensor[(1, 4), int32], Tensor[(4), int32]) */;
  %51 = atan(%45) /* ty=Tensor[(10, 2, 2), float64] */;
  %52 = %50.1;
  (%51, %52, -8 /* ty=int32 */, meta[relay.Constant][0] /* ty=Tensor[(4, 1), int32] */)
}

def @func_15748() -> (Tensor[(16, 12, 5), float32], Tensor[(100), float32]) {
  %53 = @func_12414() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %54 = %53.0;
  %55 = @func_11203() /* ty=Tensor[(100), float32] */;
  (%54, %55)
}

def @func_18371() -> (Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(10, 8, 10), int32]) {
  %56 = @func_9137() /* ty=(Tensor[(100), float32], Tensor[(16, 12, 5), float32], Tensor[(100), float32], Tensor[(16, 12, 5), float32]) */;
  %57 = @func_7262() /* ty=(Tensor[(10, 8, 10), int32], Tensor[(10, 8, 10), float32]) */;
  %58 = @func_18146() /* ty=Tensor[(10, ?, 10), bool] */;
  %59 = %56.1;
  %60 = %57.0;
  (%58, %59, %60)
}

def @func_18236() -> (Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) {
  %61 = @func_6291() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %62 = @func_10211() /* ty=Tensor[(10, ?, 10), bool] */;
  %63 = %61.0;
  (%62, %63)
}

def @main() -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), float64]) {
  %64 = @func_18107() /* ty=(Tensor[(100), float32], Tensor[(100), float32], Tensor[(16, 12, 5), float32]) */;
  %65 = @func_7716() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), int8]) */;
  %66 = %65.1;
  %67 = @func_5915() /* ty=Tensor[(100), float32] */;
  %68 = cast(%67, dtype="float64") /* ty=Tensor[(100), float64] */;
  %69 = shape_of(%66, dtype="int32") /* ty=Tensor[(3), int32] */;
  %70 = cast(%66, dtype="float64") /* ty=Tensor[(10, ?, 10), float64] */;
  %71 = dyn.reshape(%68, %69, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %72 = %64.2;
  %73 = floor_mod(%70, %71) /* ty=Tensor[(10, ?, 10), float64] */;
  (%72, %73)
}

def @func_13013(%var_13006: Tensor[(234, 2), uint64]) -> (Tensor[(13, 14, 8), float32], Tensor[(13, 14, 8), float64], int32, Tensor[(234, 2), uint64]) {
  %74 = cast(meta[relay.Constant][1] /* ty=Tensor[(13, 14, 1), float32] */, dtype="float32") /* ty=Tensor[(13, 14, 1), float32] */;
  %75 = cast(meta[relay.Constant][2] /* ty=Tensor[(13, 14, 8), float32] */, dtype="float32") /* ty=Tensor[(13, 14, 8), float32] */;
  %76 = cast(meta[relay.Constant][2] /* ty=Tensor[(13, 14, 8), float32] */, dtype="float32") /* ty=Tensor[(13, 14, 8), float32] */;
  %77 = asinh(%76) /* ty=Tensor[(13, 14, 8), float32] */;
  %78 = cast(%77, dtype="float64") /* ty=Tensor[(13, 14, 8), float64] */;
  %79 = cast(%var_13006, dtype="uint64") /* ty=Tensor[(234, 2), uint64] */;
  %80 = reshape(%79, newshape=[9, 13, 4]) /* ty=Tensor[(9, 13, 4), uint64] */;
  %81 = @func_4870(%80) /* ty=(Tensor[(9, 13, 4), uint16], Tensor[(1, 4), int32], int32, Tensor[(4), int32], Tensor[(9, 13, 4), float64], Tensor[(9, 13, 4), float64], Tensor[(4), int32], Tensor[(7, 14), uint16]) */;
  %82 = floor_divide(%74, %75) /* ty=Tensor[(13, 14, 8), float32] */;
  %83 = acos(%78) /* ty=Tensor[(13, 14, 8), float64] */;
  %84 = %81.2;
  (%82, %83, %84, %var_13006)
}

def @func_13320(%var_13280: Tensor[(2002), float32], %var_13284: Tensor[(4), int32]) -> (Tensor[(16, 12, 5), float32], Tensor[(11, 14, 13), float32], Tensor[(2002), float32], Tensor[(100), float32], int32, Tensor[(4), int32], Tensor[(10, 8, 10), float32]) {
  %85 = cast(%var_13280, dtype="float32") /* ty=Tensor[(2002), float32] */;
  %86 = cast(%var_13280, dtype="float32") /* ty=Tensor[(2002), float32] */;
  %87 = reshape(%85, newshape=[11, 14, 13]) /* ty=Tensor[(11, 14, 13), float32] */;
  %88 = reshape(%86, newshape=[11, 14, 13]) /* ty=Tensor[(11, 14, 13), float32] */;
  %89 = @func_6985(%87, %88) /* ty=(Tensor[(11, 14, 13), float32], Tensor[(10, ?, 10), bool], Tensor[(11, 14, 13), uint64]) */;
  %90 = cast(3 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %91 = cast(%var_13284, dtype="int32") /* ty=Tensor[(4), int32] */;
  %92 = reshape(%90, newshape=[]) /* ty=int32 */;
  %93 = reshape(%91, newshape=[4]) /* ty=Tensor[(4), int32] */;
  %94 = @func_9587(%92, %93) /* ty=(Tensor[(100), float32], Tensor[(11, 14, 15), bool], int32, Tensor[(2310), int32], Tensor[(1, 4), int32], Tensor[(4), int32]) */;
  %95 = @func_7262() /* ty=(Tensor[(10, 8, 10), int32], Tensor[(10, 8, 10), float32]) */;
  %96 = @func_11541() /* ty=Tensor[(16, 12, 5), float32] */;
  %97 = %89.0;
  %98 = %94.0;
  %99 = %95.1;
  (%96, %97, %var_13280, %98, 3 /* ty=int32 */, %var_13284, %99)
}

def @func_6252(%var_6221: Tensor[(260), uint64], %var_6248: Tensor[(13, 15), float32]) -> (Tensor[(10, ?, 10), bool], Tensor[(13, 10, 2), bool], Tensor[(260), uint64], Tensor[(4), int32], Tensor[(13, 15), float32], Tensor[(4), int32]) {
  %100 = cast(%var_6221, dtype="uint64") /* ty=Tensor[(260), uint64] */;
  %101 = cast(%var_6221, dtype="uint64") /* ty=Tensor[(260), uint64] */;
  %102 = reshape(%100, newshape=[13, 10, 2]) /* ty=Tensor[(13, 10, 2), uint64] */;
  %103 = reshape(%101, newshape=[13, 10, 2]) /* ty=Tensor[(13, 10, 2), uint64] */;
  %104 = @func_2840(%102, %103) /* ty=(Tensor[(13, 10, 2), bool],) */;
  %105 = cast(%var_6248, dtype="float32") /* ty=Tensor[(13, 15), float32] */;
  %106 = cast(meta[relay.Constant][3] /* ty=Tensor[(4), int32] */, dtype="int32") /* ty=Tensor[(4), int32] */;
  %107 = reshape(%105, newshape=[5, 3, 13]) /* ty=Tensor[(5, 3, 13), float32] */;
  %108 = reshape(%106, newshape=[4]) /* ty=Tensor[(4), int32] */;
  %109 = @func_3701(%107, %108) /* ty=(Tensor[(5, 3, 13), float32], Tensor[(1, 4), int32], Tensor[(126), uint32], Tensor[(4), int32], Tensor[(1, 4), int32], uint16, Tensor[(98), uint16], int32) */;
  %110 = @func_4925() /* ty=Tensor[(10, ?, 10), bool] */;
  %111 = %104.0;
  %112 = %109.3;
  (%110, %111, %var_6221, %112, %var_6248, meta[relay.Constant][3] /* ty=Tensor[(4), int32] */)
}

def @func_14538() -> (Tensor[(16, 12, 5), float32], Tensor[(100), float32], Tensor[(100), float32]) {
  %113 = @func_10496() /* ty=(Tensor[(720), float64], Tensor[(100), float32]) */;
  %114 = @func_11088() /* ty=Tensor[(16, 12, 5), float32] */;
  %115 = @func_5915() /* ty=Tensor[(100), float32] */;
  %116 = %113.1;
  (%114, %115, %116)
}

def @func_6279() -> Tensor[(16, 12, 5), float32] {
  @func_4582() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_6508() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  %117 = @func_5780() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(12, 10, 6), float64], Tensor[(720), float64], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %118 = %117.1;
  %119 = @func_4405() /* ty=Tensor[(16, 12, 5), float32] */;
  (%118, %119)
}

def @func_15539() -> (Tensor[(16, 12, 5), float32],) {
  %120 = @func_12109() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(4), int32], Tensor[(968), float32]) */;
  %121 = %120.0;
  (%121,)
}

def @func_21202() -> (Tensor[(16, 12, 5), float32], Tensor[(10, 8, 10), float64]) {
  %122 = @func_16171() /* ty=(Tensor[(10, 8, 10), float64], Tensor[(16, 12, 5), float32], Tensor[(10, 8, 10), bool]) */;
  %123 = @func_4178() /* ty=Tensor[(16, 12, 5), float32] */;
  %124 = %122.0;
  (%123, %124)
}

def @func_4582() -> Tensor[(16, 12, 5), float32] {
  @func_4178() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_5874(%var_5806: Tensor[(3, 8, 14), int16], %var_5807: Tensor[(3, 8, 14), int16], %var_5828: Tensor[(100), float32]) -> (Tensor[(3, 8, 14), int16], Tensor[(13, 10, 2), bool], Tensor[(260), uint64], Tensor[(4), int32], Tensor[(4, 1), int32], Tensor[(100), float32], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(3, 8, 14), float32], Tensor[(16, 12, 5), bool]) {
  %125 = cast(%var_5807, dtype="int16") /* ty=Tensor[(3, 8, 14), int16] */;
  %126 = shape_of(%var_5806, dtype="int32") /* ty=Tensor[(3), int32] */;
  %127 = cast(%var_5806, dtype="int16") /* ty=Tensor[(3, 8, 14), int16] */;
  %128 = dyn.reshape(%125, %126, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %129 = cast(meta[relay.Constant][4] /* ty=Tensor[(260), uint64] */, dtype="uint64") /* ty=Tensor[(260), uint64] */;
  %130 = cast(meta[relay.Constant][4] /* ty=Tensor[(260), uint64] */, dtype="uint64") /* ty=Tensor[(260), uint64] */;
  %131 = reshape(%129, newshape=[13, 10, 2]) /* ty=Tensor[(13, 10, 2), uint64] */;
  %132 = reshape(%130, newshape=[13, 10, 2]) /* ty=Tensor[(13, 10, 2), uint64] */;
  %133 = @func_2840(%131, %132) /* ty=(Tensor[(13, 10, 2), bool],) */;
  %134 = cast(meta[relay.Constant][5] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %135 = cast(meta[relay.Constant][6] /* ty=Tensor[(4, 1), int32] */, dtype="int32") /* ty=Tensor[(4, 1), int32] */;
  %136 = cast(%var_5828, dtype="float32") /* ty=Tensor[(100), float32] */;
  %137 = reshape(%134, newshape=[]) /* ty=uint16 */;
  %138 = reshape(%135, newshape=[4, 1]) /* ty=Tensor[(4, 1), int32] */;
  %139 = reshape(%136, newshape=[100]) /* ty=Tensor[(100), float32] */;
  %140 = @func_5418(%137, %138, %139) /* ty=(Tensor[(4), int32], uint16, Tensor[(98), uint16], Tensor[(4, 1), int32], Tensor[(100), float32]) */;
  %141 = @func_4221() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float32]) */;
  %142 = @func_5522() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %143 = cast(%var_5806, dtype="float32") /* ty=Tensor[(3, 8, 14), float32] */;
  %144 = @func_4582() /* ty=Tensor[(16, 12, 5), float32] */;
  %145 = cast(%144, dtype="bool") /* ty=Tensor[(16, 12, 5), bool] */;
  %146 = cast(meta[relay.Constant][5] /* ty=uint16 */, dtype="bool") /* ty=bool */;
  %147 = bitwise_and(%127, %128) /* ty=Tensor[(3, 8, 14), int16] */;
  %148 = %133.0;
  %149 = %140.0;
  %150 = %141.0;
  %151 = %142.0;
  %152 = acos(%143) /* ty=Tensor[(3, 8, 14), float32] */;
  %153 = not_equal(%145, %146) /* ty=Tensor[(16, 12, 5), bool] */;
  (%147, %148, meta[relay.Constant][4] /* ty=Tensor[(260), uint64] */, %149, meta[relay.Constant][6] /* ty=Tensor[(4, 1), int32] */, %var_5828, %150, %151, %152, %153)
}

def @func_17130() -> Tensor[(15, ?, 11), uint16] {
  %154 = @func_16737() /* ty=(Tensor[(720), float64], int32) */;
  %155 = %154.1;
  %156 = @func_8334() /* ty=(Tensor[(15, ?, 11), int16],) */;
  %157 = %156.0;
  %158 = cast(%155, dtype="uint16") /* ty=uint16 */;
  %159 = cast(%157, dtype="uint16") /* ty=Tensor[(15, ?, 11), uint16] */;
  right_shift(%158, %159) /* ty=Tensor[(15, ?, 11), uint16] */
}

def @func_5967() -> Tensor[(16, 12, 5), float32] {
  %160 = @func_4444() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %160.0
}

def @func_17721(%var_17711: Tensor[(10, 9, 10), bool]) -> Tensor[(10, 9, 10), bool] {
  %161 = @func_13864() /* ty=Tensor[(10, ?, 10), bool] */;
  %162 = cast(%161, dtype="bool") /* ty=Tensor[(10, ?, 10), bool] */;
  %163 = cast(%var_17711, dtype="bool") /* ty=Tensor[(10, 9, 10), bool] */;
  equal(%162, %163) /* ty=Tensor[(10, 9, 10), bool] */
}

def @func_16336() -> (Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) {
  %164 = @func_12503() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %165 = @func_8437() /* ty=Tensor[(10, ?, 10), bool] */;
  %166 = %164.1;
  (%165, %166)
}

def @func_13831() -> Tensor[(10, ?, 10), bool] {
  %167 = @func_5148() /* ty=(Tensor[(10, ?, 10), bool],) */;
  %167.0
}

def @func_196(%var_175: int32, %var_176: Tensor[(1, 4), int32]) -> Tensor[(1, 4), int32] {
  %168 = cast(%var_175, dtype="int32") /* ty=int32 */;
  %169 = cast(%var_176, dtype="int32") /* ty=Tensor[(1, 4), int32] */;
  subtract(%168, %169) /* ty=Tensor[(1, 4), int32] */
}

def @func_17781() -> (Tensor[(10, ?, 10), bool], Tensor[(10, ?, 10), bool]) {
  %170 = @func_5173() /* ty=Tensor[(10, ?, 10), bool] */;
  %171 = @func_5434() /* ty=Tensor[(10, ?, 10), bool] */;
  (%170, %171)
}

def @func_15188() -> (Tensor[(16, 12, 5), float32],) {
  %172 = @func_7716() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), int8]) */;
  %173 = %172.0;
  (%173,)
}

def @func_16070() -> (Tensor[(16, 12, 5), float32],) {
  %174 = @func_10311() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %175 = %174.1;
  (%175,)
}

def @func_3716(%var_3712: Tensor[(15, 7, 3), float64]) -> (Tensor[(15, 7, 3), float64],) {
  %176 = cast(%var_3712, dtype="float64") /* ty=Tensor[(15, 7, 3), float64] */;
  %177 = atanh(%176) /* ty=Tensor[(15, 7, 3), float64] */;
  (%177,)
}

def @func_21084() -> Tensor[(16, 12, 5), float32] {
  @func_20424() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_13656() -> (Tensor[(16, 12, 5), float32], Tensor[(100), float32]) {
  %178 = @func_9202() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %179 = %178.0;
  %180 = @func_5915() /* ty=Tensor[(100), float32] */;
  (%179, %180)
}

def @func_16716() -> (Tensor[(100), float32], Tensor[(968), float32], Tensor[(16, 12, 5), float32]) {
  %181 = @func_13793() /* ty=(Tensor[(968), float32],) */;
  %182 = @func_10311() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %183 = @func_6998() /* ty=Tensor[(100), float32] */;
  %184 = %181.0;
  %185 = %182.0;
  (%183, %184, %185)
}

def @func_19578(%var_19561: uint64) -> (Tensor[(2, 1, 5), bool],) {
  %186 = cast(%var_19561, dtype="bool") /* ty=bool */;
  %187 = cast(meta[relay.Constant][7] /* ty=Tensor[(2, 1, 5), uint64] */, dtype="bool") /* ty=Tensor[(2, 1, 5), bool] */;
  %188 = less_equal(%186, %187) /* ty=Tensor[(2, 1, 5), bool] */;
  (%188,)
}

def @func_20976() -> (Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) {
  %189 = @func_13864() /* ty=Tensor[(10, ?, 10), bool] */;
  %190 = @func_7052() /* ty=Tensor[(16, 12, 5), float32] */;
  (%189, %190)
}

def @func_989(%var_979: Tensor[(11, 8, 11), float32]) -> (Tensor[(11, 8, 11), float32],) {
  %191 = cast(%var_979, dtype="float32") /* ty=Tensor[(11, 8, 11), float32] */;
  %192 = acosh(%191) /* ty=Tensor[(11, 8, 11), float32] */;
  (%192,)
}

def @func_16916() -> (Tensor[(100), float32], Tensor[(16, 12, 5), float32]) {
  %193 = @func_13542() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(100), float64]) */;
  %194 = @func_6998() /* ty=Tensor[(100), float32] */;
  %195 = %193.1;
  (%194, %195)
}

def @func_12396() -> (int32, Tensor[(16, 12, 5), float32]) {
  %196 = @func_10770() /* ty=(Tensor[(100), float32], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), float64], int32, int32, Tensor[(4), int32]) */;
  %197 = @func_8206() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %198 = %196.4;
  %199 = %197.0;
  (%198, %199)
}

def @func_11963() -> (Tensor[(16, 12, 5), float32],) {
  %200 = @func_6291() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %201 = %200.0;
  (%201,)
}

def @func_19751() -> (Tensor[(16, 12, 5), float32], Tensor[(100), float32], Tensor[(10, ?, 10), bool], Tensor[(195), float32], Tensor[(968), float32], Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  %202 = @func_6291() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %203 = @func_17323() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(100), float32]) */;
  %204 = cast(meta[relay.Constant][8] /* ty=Tensor[(195), float32] */, dtype="float32") /* ty=Tensor[(195), float32] */;
  %205 = cast(meta[relay.Constant][9] /* ty=Tensor[(968), float32] */, dtype="float32") /* ty=Tensor[(968), float32] */;
  %206 = reshape(%204, newshape=[195]) /* ty=Tensor[(195), float32] */;
  %207 = reshape(%205, newshape=[968]) /* ty=Tensor[(968), float32] */;
  %208 = @func_19399(%206, %207) /* ty=(Tensor[(10, ?, 10), bool], Tensor[(98), uint32], Tensor[(195), float32], Tensor[(4), int32], Tensor[(98), uint16], Tensor[(968), float32], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(260), uint64], Tensor[(260), uint64]) */;
  %209 = @func_5148() /* ty=(Tensor[(10, ?, 10), bool],) */;
  %210 = @func_18678() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %211 = @func_11343() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(100), float32]) */;
  %212 = %202.0;
  %213 = %203.1;
  %214 = %208.7;
  %215 = %209.0;
  %216 = %210.1;
  %217 = %211.1;
  %218 = @func_6279() /* ty=Tensor[(16, 12, 5), float32] */;
  %219 = @func_18771() /* ty=Tensor[(16, 12, 5), float32] */;
  (%212, %213, %214, meta[relay.Constant][8] /* ty=Tensor[(195), float32] */, meta[relay.Constant][9] /* ty=Tensor[(968), float32] */, %215, %216, %217, %218, %219)
}

def @func_20424() -> Tensor[(16, 12, 5), float32] {
  %220 = @func_12299() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(10, ?, 10), bool]) */;
  %220.0
}

def @func_283(%var_264: Tensor[(14, 3, 3), uint32], %var_265: Tensor[(14, 3, 3), uint32], %var_271: Tensor[(4), int32]) -> (Tensor[(1, 4), int32], int32, Tensor[(4), int32], Tensor[(14, 3, 3), float64], Tensor[(1, 4), int32], Tensor[(1, 4), int32]) {
  %221 = cast(-8 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %222 = cast(%var_271, dtype="int32") /* ty=Tensor[(4), int32] */;
  %223 = reshape(%221, newshape=[]) /* ty=int32 */;
  %224 = reshape(%222, newshape=[1, 4]) /* ty=Tensor[(1, 4), int32] */;
  %225 = cast(%var_265, dtype="uint32") /* ty=Tensor[(14, 3, 3), uint32] */;
  %226 = shape_of(%var_264, dtype="int32") /* ty=Tensor[(3), int32] */;
  %227 = cast(%var_264, dtype="uint32") /* ty=Tensor[(14, 3, 3), uint32] */;
  %228 = dyn.reshape(%225, %226, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %229 = minimum(%227, %228) /* ty=Tensor[(14, 3, 3), uint32] */;
  %230 = cast(%229, dtype="float64") /* ty=Tensor[(14, 3, 3), float64] */;
  %231 = cast(-8 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %232 = cast(%var_271, dtype="int32") /* ty=Tensor[(4), int32] */;
  %233 = reshape(%231, newshape=[]) /* ty=int32 */;
  %234 = reshape(%232, newshape=[1, 4]) /* ty=Tensor[(1, 4), int32] */;
  %235 = cast(-8 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %236 = cast(%var_271, dtype="int32") /* ty=Tensor[(4), int32] */;
  %237 = reshape(%235, newshape=[]) /* ty=int32 */;
  %238 = reshape(%236, newshape=[1, 4]) /* ty=Tensor[(1, 4), int32] */;
  %239 = @func_196(%223, %224) /* ty=Tensor[(1, 4), int32] */;
  %240 = sigmoid(%230) /* ty=Tensor[(14, 3, 3), float64] */;
  %241 = @func_196(%233, %234) /* ty=Tensor[(1, 4), int32] */;
  %242 = @func_196(%237, %238) /* ty=Tensor[(1, 4), int32] */;
  (%239, -8 /* ty=int32 */, %var_271, %240, %241, %242)
}

def @func_16603() -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) {
  %243 = @func_6192() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(720), float64], Tensor[(16, 12, 5), float32]) */;
  %244 = %243.2;
  %245 = @func_13827() /* ty=Tensor[(10, ?, 10), bool] */;
  (%244, %245)
}

def @func_15673() -> Tensor[(100), float32] {
  %246 = @func_12459() /* ty=(Tensor[(100), float32],) */;
  %246.0
}

def @func_9912(%var_9895: Tensor[(16, 12, 5), float32]) -> (Tensor[(16, 12, 5), uint32],) {
  %247 = @func_4444() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %248 = %247.1;
  %249 = cast(%var_9895, dtype="uint32") /* ty=Tensor[(16, 12, 5), uint32] */;
  %250 = shape_of(%248, dtype="int32") /* ty=Tensor[(3), int32] */;
  %251 = cast(%248, dtype="uint32") /* ty=Tensor[(16, 12, 5), uint32] */;
  %252 = dyn.reshape(%249, %250, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %253 = multiply(%251, %252) /* ty=Tensor[(16, 12, 5), uint32] */;
  (%253,)
}

def @func_17508() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(100), float32]) {
  %254 = @func_16916() /* ty=(Tensor[(100), float32], Tensor[(16, 12, 5), float32]) */;
  %255 = @func_12414() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %256 = @func_14538() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(100), float32], Tensor[(100), float32]) */;
  %257 = %254.1;
  %258 = %255.0;
  %259 = %256.1;
  (%257, %258, %259)
}

def @func_20867(%var_20752: int32) -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(1, 4), int32], int32, Tensor[(16, 12, 5), float32], Tensor[(10, 8, 10), float32], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) {
  %260 = @func_13763() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %261 = cast(%var_20752, dtype="int32") /* ty=int32 */;
  %262 = reshape(%261, newshape=[]) /* ty=int32 */;
  %263 = @func_11465(%262) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(1, 4), int32], int32, Tensor[(4), int32]) */;
  %264 = @func_17257() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %265 = @func_17067() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, 8, 10), float32]) */;
  %266 = cast(%var_20752, dtype="int32") /* ty=int32 */;
  %267 = reshape(%266, newshape=[]) /* ty=int32 */;
  %268 = @func_7921(%267) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(11, 14, 15), bool], int32, Tensor[(2310), int32]) */;
  %269 = %260.1;
  %270 = @func_16925() /* ty=Tensor[(16, 12, 5), float32] */;
  %271 = %263.1;
  %272 = %264.1;
  %273 = %265.1;
  %274 = %268.1;
  %275 = @func_5507() /* ty=Tensor[(10, ?, 10), bool] */;
  (%269, %270, %271, %var_20752, %272, %273, %274, %275)
}

def @func_16484(%var_16475: Tensor[(10, 10, 10), bool]) -> Tensor[(10, 10, 10), float32] {
  %276 = @func_13831() /* ty=Tensor[(10, ?, 10), bool] */;
  %277 = cast(%276, dtype="float32") /* ty=Tensor[(10, ?, 10), float32] */;
  %278 = cast(%var_16475, dtype="float32") /* ty=Tensor[(10, 10, 10), float32] */;
  power(%277, %278) /* ty=Tensor[(10, 10, 10), float32] */
}

def @func_11403(%var_11372: Tensor[(4), int32], %var_11377: Tensor[(5, 60), bool], %var_11397: int32) -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(4), int32], Tensor[(16, 12, 5), float32], Tensor[(5, 60), bool], Tensor[(10, ?, 10), uint32], int32) {
  %279 = cast(%var_11372, dtype="int32") /* ty=Tensor[(4), int32] */;
  %280 = reshape(%279, newshape=[4]) /* ty=Tensor[(4), int32] */;
  %281 = @func_10872(%280) /* ty=(Tensor[(15, ?, 11), int16], Tensor[(4), int32], Tensor[(126), uint32], Tensor[(4), int32], Tensor[(10, ?, 10), bool], Tensor[(195), float32], Tensor[(100), float64]) */;
  %282 = cast(%var_11377, dtype="bool") /* ty=Tensor[(5, 60), bool] */;
  %283 = reshape(%282, newshape=[10, 3, 10]) /* ty=Tensor[(10, 3, 10), bool] */;
  %284 = @func_7855(%283) /* ty=(Tensor[(10, 3, 10), bool], Tensor[(16, 12, 5), float32]) */;
  %285 = cast(%var_11397, dtype="int32") /* ty=int32 */;
  %286 = reshape(%285, newshape=[]) /* ty=int32 */;
  %287 = @func_5218(%286) /* ty=(Tensor[(1, 4), int32], Tensor[(4), int32], Tensor[(10, ?, 10), uint32]) */;
  %288 = @func_4649() /* ty=Tensor[(16, 12, 5), float32] */;
  %289 = %281.4;
  %290 = %284.1;
  %291 = %287.2;
  (%288, %289, %var_11372, %290, %var_11377, %291, %var_11397)
}

def @func_19865() -> Tensor[(16, 12, 5), float32] {
  %292 = @func_9202() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %292.0
}

def @func_4757(%var_4690: Tensor[(195), float32], %var_4691: Tensor[(1, 4), int32], %var_4713: Tensor[(98), uint16], %var_4749: Tensor[(968), float32]) -> (Tensor[(195), float32], Tensor[(1, 4), int32], Tensor[(98), uint32], Tensor[(10, ?, 10), bool], Tensor[(9, 2, 14), float32], Tensor[(6, 42), float32], Tensor[(100), float32], Tensor[(11, 8, 11), float32], Tensor[(968), float32], Tensor[(10, ?, 10), bool]) {
  %293 = cast(%var_4690, dtype="float32") /* ty=Tensor[(195), float32] */;
  %294 = cast(%var_4691, dtype="int32") /* ty=Tensor[(1, 4), int32] */;
  %295 = reshape(%293, newshape=[5, 3, 13]) /* ty=Tensor[(5, 3, 13), float32] */;
  %296 = reshape(%294, newshape=[4]) /* ty=Tensor[(4), int32] */;
  %297 = @func_3701(%295, %296) /* ty=(Tensor[(5, 3, 13), float32], Tensor[(1, 4), int32], Tensor[(126), uint32], Tensor[(4), int32], Tensor[(1, 4), int32], uint16, Tensor[(98), uint16], int32) */;
  %298 = %297.6;
  %299 = cast(%var_4713, dtype="uint32") /* ty=Tensor[(98), uint32] */;
  %300 = shape_of(%298, dtype="int32") /* ty=Tensor[(1), int32] */;
  %301 = cast(%298, dtype="uint32") /* ty=Tensor[(98), uint32] */;
  %302 = dyn.reshape(%299, %300, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %303 = @func_4279() /* ty=Tensor[(10, ?, 10), bool] */;
  %304 = @func_4476() /* ty=Tensor[(100), float32] */;
  %305 = cast(%304, dtype="uint8") /* ty=Tensor[(100), uint8] */;
  %306 = shape_of(%303, dtype="int32") /* ty=Tensor[(3), int32] */;
  %307 = cast(%303, dtype="uint8") /* ty=Tensor[(10, ?, 10), uint8] */;
  %308 = dyn.reshape(%305, %306, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %309 = maximum(%307, %308) /* ty=Tensor[(10, ?, 10), uint8] */;
  %310 = cast(%309, dtype="bool") /* ty=Tensor[(10, ?, 10), bool] */;
  %311 = shape_of(%303, dtype="int32") /* ty=Tensor[(3), int32] */;
  %312 = cast(%303, dtype="bool") /* ty=Tensor[(10, ?, 10), bool] */;
  %313 = dyn.reshape(%310, %311, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %314 = cast(meta[relay.Constant][10] /* ty=Tensor[(6, 42), float32] */, dtype="float32") /* ty=Tensor[(6, 42), float32] */;
  %315 = cast(meta[relay.Constant][10] /* ty=Tensor[(6, 42), float32] */, dtype="float32") /* ty=Tensor[(6, 42), float32] */;
  %316 = reshape(%314, newshape=[9, 2, 14]) /* ty=Tensor[(9, 2, 14), float32] */;
  %317 = reshape(%315, newshape=[9, 2, 14]) /* ty=Tensor[(9, 2, 14), float32] */;
  %318 = @func_3549(%316, %317) /* ty=(Tensor[(9, 2, 14), float32],) */;
  %319 = cast(%var_4749, dtype="float32") /* ty=Tensor[(968), float32] */;
  %320 = reshape(%319, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), float32] */;
  %321 = @func_989(%320) /* ty=(Tensor[(11, 8, 11), float32],) */;
  %322 = @func_4629() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */;
  %323 = minimum(%301, %302) /* ty=Tensor[(98), uint32] */;
  %324 = greater(%312, %313) /* ty=Tensor[(10, ?, 10), bool] */;
  %325 = %318.0;
  %326 = @func_4476() /* ty=Tensor[(100), float32] */;
  %327 = %321.0;
  %328 = %322.1;
  (%var_4690, %var_4691, %323, %324, %325, meta[relay.Constant][10] /* ty=Tensor[(6, 42), float32] */, %326, %327, %var_4749, %328)
}

def @func_4925() -> Tensor[(10, ?, 10), bool] {
  @func_4279() /* ty=Tensor[(10, ?, 10), bool] */
}

def @func_14904(%var_14866: uint64, %var_14867: Tensor[(5, 15, 16), uint64]) -> (Tensor[(5, 15, 16), uint64], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  %329 = cast(%var_14866, dtype="uint64") /* ty=uint64 */;
  %330 = cast(%var_14867, dtype="uint64") /* ty=Tensor[(5, 15, 16), uint64] */;
  %331 = @func_8942() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %332 = multiply(%329, %330) /* ty=Tensor[(5, 15, 16), uint64] */;
  %333 = @func_14701() /* ty=Tensor[(16, 12, 5), float32] */;
  %334 = %331.0;
  (%332, %333, %334)
}

def @func_13827() -> Tensor[(10, ?, 10), bool] {
  @func_4279() /* ty=Tensor[(10, ?, 10), bool] */
}

def @func_7465(%var_7368: Tensor[(260), uint64], %var_7449: Tensor[(195), float32]) -> (Tensor[(13, 10, 2), bool], Tensor[(260), uint64], Tensor[(100), float32], Tensor[(10, ?, 10), bool], Tensor[(10, ?, 10), float64], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(4), int32], Tensor[(195), float32]) {
  %335 = cast(%var_7368, dtype="uint64") /* ty=Tensor[(260), uint64] */;
  %336 = cast(%var_7368, dtype="uint64") /* ty=Tensor[(260), uint64] */;
  %337 = reshape(%335, newshape=[13, 10, 2]) /* ty=Tensor[(13, 10, 2), uint64] */;
  %338 = reshape(%336, newshape=[13, 10, 2]) /* ty=Tensor[(13, 10, 2), uint64] */;
  %339 = @func_2840(%337, %338) /* ty=(Tensor[(13, 10, 2), bool],) */;
  %340 = @func_6042() /* ty=(Tensor[(100), float32],) */;
  %341 = @func_5148() /* ty=(Tensor[(10, ?, 10), bool],) */;
  %342 = %341.0;
  %343 = cast(%342, dtype="float64") /* ty=Tensor[(10, ?, 10), float64] */;
  %344 = %339.0;
  %345 = cast(%344, dtype="uint64") /* ty=Tensor[(13, 10, 2), uint64] */;
  %346 = cast(%var_7449, dtype="float32") /* ty=Tensor[(195), float32] */;
  %347 = reshape(%345, newshape=[260]) /* ty=Tensor[(260), uint64] */;
  %348 = reshape(%346, newshape=[13, 15]) /* ty=Tensor[(13, 15), float32] */;
  %349 = @func_6252(%347, %348) /* ty=(Tensor[(10, ?, 10), bool], Tensor[(13, 10, 2), bool], Tensor[(260), uint64], Tensor[(4), int32], Tensor[(13, 15), float32], Tensor[(4), int32]) */;
  %350 = %340.0;
  %351 = @func_4279() /* ty=Tensor[(10, ?, 10), bool] */;
  %352 = asinh(%343) /* ty=Tensor[(10, ?, 10), float64] */;
  %353 = @func_4178() /* ty=Tensor[(16, 12, 5), float32] */;
  %354 = @func_4925() /* ty=Tensor[(10, ?, 10), bool] */;
  %355 = %349.3;
  (%344, %var_7368, %350, %351, %352, %353, %354, %355, %var_7449)
}

def @func_18107() -> (Tensor[(100), float32], Tensor[(100), float32], Tensor[(16, 12, 5), float32]) {
  %356 = @func_16532() /* ty=(Tensor[(100), float32],) */;
  %357 = @func_16916() /* ty=(Tensor[(100), float32], Tensor[(16, 12, 5), float32]) */;
  %358 = @func_17257() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %359 = %356.0;
  %360 = %357.0;
  %361 = %358.0;
  (%359, %360, %361)
}

def @func_15824() -> Tensor[(315), float64] {
  %362 = @func_11114() /* ty=(Tensor[(315), float64],) */;
  %362.0
}

def @func_10669() -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(1, 468), uint64]) {
  %363 = @func_8206() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %364 = cast(meta[relay.Constant][11] /* ty=Tensor[(1, 468), uint64] */, dtype="uint64") /* ty=Tensor[(1, 468), uint64] */;
  %365 = reshape(%364, newshape=[468]) /* ty=Tensor[(468), uint64] */;
  %366 = @func_8315(%365) /* ty=(Tensor[(10, ?, 10), bool], Tensor[(4), int32], Tensor[(468), uint64]) */;
  %367 = %363.0;
  %368 = %366.0;
  (%367, %368, meta[relay.Constant][11] /* ty=Tensor[(1, 468), uint64] */)
}

def @func_8724() -> (Tensor[(100), float32], Tensor[(16, 12, 5), float32]) {
  %369 = @func_5660() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %370 = @func_5915() /* ty=Tensor[(100), float32] */;
  %371 = %369.0;
  (%370, %371)
}

def @func_16737() -> (Tensor[(720), float64], int32) {
  %372 = @func_6675() /* ty=(Tensor[(720), float64], Tensor[(16, 12, 5), float32]) */;
  %373 = @func_12396() /* ty=(int32, Tensor[(16, 12, 5), float32]) */;
  %374 = %372.0;
  %375 = %373.0;
  (%374, %375)
}

def @func_16095() -> Tensor[(10, ?, 10), float32] {
  %376 = @func_13831() /* ty=Tensor[(10, ?, 10), bool] */;
  %377 = cast(%376, dtype="float32") /* ty=Tensor[(10, ?, 10), float32] */;
  exp(%377) /* ty=Tensor[(10, ?, 10), float32] */
}

def @func_8918() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), int32], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  %378 = @func_8289() /* ty=(Tensor[(10, ?, 10), bool],) */;
  %379 = %378.0;
  %380 = cast(%379, dtype="float64") /* ty=Tensor[(10, ?, 10), float64] */;
  %381 = reshape(%380, newshape=[100]) /* ty=Tensor[(100), float64] */;
  %382 = @func_5358(%381) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float64]) */;
  %383 = @func_8541() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), float64]) */;
  %384 = %383.1;
  %385 = cast(%379, dtype="uint16") /* ty=Tensor[(10, ?, 10), uint16] */;
  %386 = shape_of(%384, dtype="int32") /* ty=Tensor[(3), int32] */;
  %387 = cast(%384, dtype="uint16") /* ty=Tensor[(10, ?, 10), uint16] */;
  %388 = dyn.reshape(%385, %386, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %389 = multiply(%387, %388) /* ty=Tensor[(10, ?, 10), uint16] */;
  %390 = cast(%384, dtype="int32") /* ty=Tensor[(10, ?, 10), int32] */;
  %391 = shape_of(%389, dtype="int32") /* ty=Tensor[(3), int32] */;
  %392 = cast(%389, dtype="int32") /* ty=Tensor[(10, ?, 10), int32] */;
  %393 = dyn.reshape(%390, %391, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %394 = @func_5021() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %395 = %382.0;
  %396 = @func_4649() /* ty=Tensor[(16, 12, 5), float32] */;
  %397 = left_shift(%392, %393) /* ty=Tensor[(10, ?, 10), int32] */;
  %398 = %394.0;
  %399 = @func_4178() /* ty=Tensor[(16, 12, 5), float32] */;
  (%395, %396, %397, %398, %399)
}

def @func_18146() -> Tensor[(10, ?, 10), bool] {
  %400 = @func_12327() /* ty=Tensor[(10, ?, 10), bool] */;
  %401 = @func_16532() /* ty=(Tensor[(100), float32],) */;
  %402 = %401.0;
  %403 = cast(%402, dtype="bool") /* ty=Tensor[(100), bool] */;
  %404 = shape_of(%400, dtype="int32") /* ty=Tensor[(3), int32] */;
  %405 = cast(%400, dtype="bool") /* ty=Tensor[(10, ?, 10), bool] */;
  %406 = dyn.reshape(%403, %404, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%405, %406) /* ty=Tensor[(10, ?, 10), bool] */
}

def @func_12028() -> (Tensor[(100), float32], Tensor[(720), float64]) {
  %407 = @func_6485() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(720), float64], Tensor[(10, ?, 10), bool]) */;
  %408 = @func_11726() /* ty=Tensor[(100), float32] */;
  %409 = %407.1;
  (%408, %409)
}

def @func_18949() -> (Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) {
  %410 = @func_15347() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(720), float64], Tensor[(16, 12, 5), float32], Tensor[(12, 10, 6), float32], Tensor[(10, ?, 10), bool]) */;
  %411 = @func_4925() /* ty=Tensor[(10, ?, 10), bool] */;
  %412 = @func_18727() /* ty=Tensor[(16, 12, 5), float32] */;
  %413 = %410.4;
  (%411, %412, %413)
}

def @func_20045() -> (Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(100), float32], Tensor[(100), float32]) {
  %414 = @func_16916() /* ty=(Tensor[(100), float32], Tensor[(16, 12, 5), float32]) */;
  %415 = @func_19130() /* ty=(Tensor[(100), float32],) */;
  %416 = @func_13827() /* ty=Tensor[(10, ?, 10), bool] */;
  %417 = %414.1;
  %418 = %415.0;
  %419 = @func_4476() /* ty=Tensor[(100), float32] */;
  (%416, %417, %418, %419)
}

def @func_12937() -> (Tensor[(968), float32],) {
  %420 = @func_12109() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(4), int32], Tensor[(968), float32]) */;
  %421 = %420.2;
  (%421,)
}

def @func_10770() -> (Tensor[(100), float32], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), float64], int32, int32, Tensor[(4), int32]) {
  %422 = @func_8541() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), float64]) */;
  %423 = cast(-2 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %424 = cast(meta[relay.Constant][12] /* ty=Tensor[(4), int32] */, dtype="int32") /* ty=Tensor[(4), int32] */;
  %425 = reshape(%423, newshape=[]) /* ty=int32 */;
  %426 = reshape(%424, newshape=[4]) /* ty=Tensor[(4), int32] */;
  %427 = @func_9587(%425, %426) /* ty=(Tensor[(100), float32], Tensor[(11, 14, 15), bool], int32, Tensor[(2310), int32], Tensor[(1, 4), int32], Tensor[(4), int32]) */;
  %428 = @func_4476() /* ty=Tensor[(100), float32] */;
  %429 = @func_7946() /* ty=Tensor[(16, 12, 5), float32] */;
  %430 = %422.1;
  %431 = %427.2;
  (%428, %429, %430, %431, -2 /* ty=int32 */, meta[relay.Constant][12] /* ty=Tensor[(4), int32] */)
}

def @func_15786(%var_15752: Tensor[(6, 14, 2), float64], %var_15778: Tensor[(468), uint64]) -> (Tensor[(6, 14, 2), float64], Tensor[(4), int32], Tensor[(468), uint64], Tensor[(10, 8, 10), float32]) {
  %432 = cast(%var_15752, dtype="float64") /* ty=Tensor[(6, 14, 2), float64] */;
  %433 = cast(%var_15778, dtype="uint64") /* ty=Tensor[(468), uint64] */;
  %434 = reshape(%433, newshape=[468]) /* ty=Tensor[(468), uint64] */;
  %435 = @func_8315(%434) /* ty=(Tensor[(10, ?, 10), bool], Tensor[(4), int32], Tensor[(468), uint64]) */;
  %436 = @func_15493() /* ty=(Tensor[(10, 8, 10), float32], Tensor[(16, 12, 5), float32]) */;
  %437 = tan(%432) /* ty=Tensor[(6, 14, 2), float64] */;
  %438 = %435.1;
  %439 = %436.0;
  (%437, %438, %var_15778, %439)
}

def @func_16925() -> Tensor[(16, 12, 5), float32] {
  %440 = @func_9137() /* ty=(Tensor[(100), float32], Tensor[(16, 12, 5), float32], Tensor[(100), float32], Tensor[(16, 12, 5), float32]) */;
  %440.3
}

def @func_9464() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  %441 = @func_6675() /* ty=(Tensor[(720), float64], Tensor[(16, 12, 5), float32]) */;
  %442 = @func_6587() /* ty=(Tensor[(15, ?, 11), int16], Tensor[(16, 12, 5), float32]) */;
  %443 = %441.1;
  %444 = %442.1;
  (%443, %444)
}

def @func_21118() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  %445 = @func_18949() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */;
  %446 = %445.1;
  %447 = @func_20424() /* ty=Tensor[(16, 12, 5), float32] */;
  (%446, %447)
}

def @func_12141(%var_12136: int32) -> (Tensor[(10, ?, 10), int8], Tensor[(11, 14, 15), bool], int32, Tensor[(2310), int32]) {
  %448 = @func_7618() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float64]) */;
  %449 = %448.1;
  %450 = cast(meta[relay.Constant][13] /* ty=Tensor[(10, 1, 10), bool] */, dtype="int8") /* ty=Tensor[(10, 1, 10), int8] */;
  %451 = shape_of(%449, dtype="int32") /* ty=Tensor[(3), int32] */;
  %452 = cast(%449, dtype="int8") /* ty=Tensor[(10, ?, 10), int8] */;
  %453 = dyn.reshape(%450, %451, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %454 = cast(%var_12136, dtype="int32") /* ty=int32 */;
  %455 = cast(meta[relay.Constant][14] /* ty=Tensor[(2310), int32] */, dtype="int32") /* ty=Tensor[(2310), int32] */;
  %456 = reshape(%454, newshape=[]) /* ty=int32 */;
  %457 = reshape(%455, newshape=[11, 14, 15]) /* ty=Tensor[(11, 14, 15), int32] */;
  %458 = bitwise_and(%452, %453) /* ty=Tensor[(10, ?, 10), int8] */;
  %459 = @func_4665(%456, %457) /* ty=Tensor[(11, 14, 15), bool] */;
  (%458, %459, %var_12136, meta[relay.Constant][14] /* ty=Tensor[(2310), int32] */)
}

def @func_14292(%var_14249: int32, %var_14250: Tensor[(1, 4), int32]) -> (Tensor[(100), float32], Tensor[(1, 4), int32], int32, Tensor[(1, 4), int32], Tensor[(100), float32], Tensor[(15, ?, 11), int16], Tensor[(16, 12, 5), float32]) {
  %460 = cast(%var_14249, dtype="int32") /* ty=int32 */;
  %461 = cast(%var_14250, dtype="int32") /* ty=Tensor[(1, 4), int32] */;
  %462 = reshape(%460, newshape=[]) /* ty=int32 */;
  %463 = reshape(%461, newshape=[1, 4]) /* ty=Tensor[(1, 4), int32] */;
  %464 = @func_7784() /* ty=(Tensor[(100), float32], Tensor[(720), float64], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */;
  %465 = @func_8334() /* ty=(Tensor[(15, ?, 11), int16],) */;
  %466 = @func_12354() /* ty=(Tensor[(100), float32], Tensor[(16, 12, 5), float32]) */;
  %467 = @func_6998() /* ty=Tensor[(100), float32] */;
  %468 = @func_196(%462, %463) /* ty=Tensor[(1, 4), int32] */;
  %469 = %464.0;
  %470 = %465.0;
  %471 = %466.1;
  (%467, %468, %var_14249, %var_14250, %469, %470, %471)
}

def @func_15295(%var_15211: Tensor[(100), float32], %var_15259: Tensor[(100), float32]) -> (Tensor[(100), bool], Tensor[(100), float32], Tensor[(100), bool]) {
  %472 = @func_5265() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(100), float32]) */;
  %473 = %472.1;
  %474 = cast(%var_15211, dtype="bool") /* ty=Tensor[(100), bool] */;
  %475 = shape_of(%473, dtype="int32") /* ty=Tensor[(1), int32] */;
  %476 = cast(%473, dtype="bool") /* ty=Tensor[(100), bool] */;
  %477 = dyn.reshape(%474, %475, newshape=[]) /* ty=Tensor[(?), bool] */;
  %478 = @func_10770() /* ty=(Tensor[(100), float32], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), float64], int32, int32, Tensor[(4), int32]) */;
  %479 = cast(%var_15259, dtype="bool") /* ty=Tensor[(100), bool] */;
  %480 = shape_of(%var_15211, dtype="int32") /* ty=Tensor[(1), int32] */;
  %481 = cast(%var_15211, dtype="bool") /* ty=Tensor[(100), bool] */;
  %482 = dyn.reshape(%479, %480, newshape=[]) /* ty=Tensor[(?), bool] */;
  %483 = logical_and(%476, %477) /* ty=Tensor[(100), bool] */;
  %484 = %478.0;
  %485 = greater(%481, %482) /* ty=Tensor[(100), bool] */;
  (%483, %484, %485)
}

def @func_4405() -> Tensor[(16, 12, 5), float32] {
  @func_4178() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_15844() -> (Tensor[(16, 12, 5), float32], Tensor[(100), float32]) {
  %486 = @func_8724() /* ty=(Tensor[(100), float32], Tensor[(16, 12, 5), float32]) */;
  %487 = @func_4582() /* ty=Tensor[(16, 12, 5), float32] */;
  %488 = %486.0;
  (%487, %488)
}

def @func_20325() -> (Tensor[(16, 12, 5), float32],) {
  %489 = @func_5780() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(12, 10, 6), float64], Tensor[(720), float64], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %490 = %489.5;
  (%490,)
}

def @func_8644() -> (Tensor[(16, 12, 5), float32], Tensor[(10, 8, 10), int32], Tensor[(16, 12, 5), float32]) {
  %491 = @func_7262() /* ty=(Tensor[(10, 8, 10), int32], Tensor[(10, 8, 10), float32]) */;
  %492 = @func_8206() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %493 = @func_4178() /* ty=Tensor[(16, 12, 5), float32] */;
  %494 = %491.0;
  %495 = %492.0;
  (%493, %494, %495)
}

def @func_11770() -> (Tensor[(10, ?, 10), bool],) {
  %496 = @func_5434() /* ty=Tensor[(10, ?, 10), bool] */;
  (%496,)
}

def @func_12759() -> Tensor[(10, ?, 10), bool] {
  %497 = @func_5148() /* ty=(Tensor[(10, ?, 10), bool],) */;
  %497.0
}

def @func_13864() -> Tensor[(10, ?, 10), bool] {
  %498 = @func_6912() /* ty=(Tensor[(100), float32], Tensor[(10, ?, 10), bool], Tensor[(4), int32], uint16, Tensor[(4), int32], Tensor[(10, ?, 10), bool], Tensor[(10, ?, 10), bool]) */;
  %498.5
}

def @func_15347() -> (Tensor[(16, 12, 5), float32], Tensor[(720), float64], Tensor[(16, 12, 5), float32], Tensor[(12, 10, 6), float32], Tensor[(10, ?, 10), bool]) {
  %499 = @func_12813() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) */;
  %500 = @func_12028() /* ty=(Tensor[(100), float32], Tensor[(720), float64]) */;
  %501 = @func_4960() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(12, 10, 6), float64], Tensor[(720), float64]) */;
  %502 = %501.1;
  %503 = cast(%502, dtype="float32") /* ty=Tensor[(12, 10, 6), float32] */;
  %504 = %499.1;
  %505 = %500.1;
  %506 = @func_14353() /* ty=Tensor[(16, 12, 5), float32] */;
  %507 = sigmoid(%503) /* ty=Tensor[(12, 10, 6), float32] */;
  %508 = @func_4279() /* ty=Tensor[(10, ?, 10), bool] */;
  (%504, %505, %506, %507, %508)
}

def @func_15377() -> Tensor[(100), float32] {
  %509 = @func_6042() /* ty=(Tensor[(100), float32],) */;
  %509.0
}

def @func_17765() -> (Tensor[(16, 12, 5), float32],) {
  %510 = @func_15844() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(100), float32]) */;
  %511 = %510.0;
  (%511,)
}

def @func_13699() -> (Tensor[(16, 12, 5), float32], Tensor[(252), float32], Tensor[(252), float32]) {
  %512 = @func_6291() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %513 = cast(meta[relay.Constant][15] /* ty=Tensor[(252), float32] */, dtype="float32") /* ty=Tensor[(252), float32] */;
  %514 = reshape(%513, newshape=[252]) /* ty=Tensor[(252), float32] */;
  %515 = @func_12796(%514) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(9, 2, 14), float32], Tensor[(252), float32], Tensor[(968), float32]) */;
  %516 = %512.0;
  %517 = %515.2;
  (%516, %517, meta[relay.Constant][15] /* ty=Tensor[(252), float32] */)
}

def @func_8437() -> Tensor[(10, ?, 10), bool] {
  @func_5507() /* ty=Tensor[(10, ?, 10), bool] */
}

def @func_13542() -> (Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(100), float64]) {
  %518 = @func_6508() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %519 = @func_5434() /* ty=Tensor[(10, ?, 10), bool] */;
  %520 = cast(%519, dtype="float64") /* ty=Tensor[(10, ?, 10), float64] */;
  %521 = reshape(%520, newshape=[100]) /* ty=Tensor[(100), float64] */;
  %522 = @func_5358(%521) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float64]) */;
  %523 = %518.0;
  %524 = %522.2;
  (%519, %523, %524)
}

def @func_8206() -> (Tensor[(16, 12, 5), float32],) {
  %525 = @func_7784() /* ty=(Tensor[(100), float32], Tensor[(720), float64], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */;
  %526 = %525.2;
  (%526,)
}

def @func_8334() -> (Tensor[(15, ?, 11), int16],) {
  %527 = @func_6587() /* ty=(Tensor[(15, ?, 11), int16], Tensor[(16, 12, 5), float32]) */;
  %528 = %527.0;
  (%528,)
}

def @func_18827() -> (Tensor[(10, ?, 10), bool], Tensor[(100), float32]) {
  %529 = @func_18107() /* ty=(Tensor[(100), float32], Tensor[(100), float32], Tensor[(16, 12, 5), float32]) */;
  %530 = @func_6137() /* ty=Tensor[(10, ?, 10), bool] */;
  %531 = %529.0;
  (%530, %531)
}

def @func_20441() -> (Tensor[(16, 12, 5), float32],) {
  %532 = @func_5967() /* ty=Tensor[(16, 12, 5), float32] */;
  (%532,)
}

def @func_9587(%var_9564: int32, %var_9578: Tensor[(4), int32]) -> (Tensor[(100), float32], Tensor[(11, 14, 15), bool], int32, Tensor[(2310), int32], Tensor[(1, 4), int32], Tensor[(4), int32]) {
  %533 = @func_6042() /* ty=(Tensor[(100), float32],) */;
  %534 = cast(%var_9564, dtype="int32") /* ty=int32 */;
  %535 = cast(meta[relay.Constant][16] /* ty=Tensor[(2310), int32] */, dtype="int32") /* ty=Tensor[(2310), int32] */;
  %536 = reshape(%534, newshape=[]) /* ty=int32 */;
  %537 = reshape(%535, newshape=[11, 14, 15]) /* ty=Tensor[(11, 14, 15), int32] */;
  %538 = cast(%var_9564, dtype="int32") /* ty=int32 */;
  %539 = cast(%var_9578, dtype="int32") /* ty=Tensor[(4), int32] */;
  %540 = reshape(%538, newshape=[]) /* ty=int32 */;
  %541 = reshape(%539, newshape=[1, 4]) /* ty=Tensor[(1, 4), int32] */;
  %542 = %533.0;
  %543 = @func_4665(%536, %537) /* ty=Tensor[(11, 14, 15), bool] */;
  %544 = @func_196(%540, %541) /* ty=Tensor[(1, 4), int32] */;
  (%542, %543, %var_9564, meta[relay.Constant][16] /* ty=Tensor[(2310), int32] */, %544, %var_9578)
}

def @func_14353() -> Tensor[(16, 12, 5), float32] {
  %545 = @func_7716() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), int8]) */;
  %545.0
}

def @func_18771() -> Tensor[(16, 12, 5), float32] {
  %546 = @func_4444() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %546.1
}

def @func_10464() -> (Tensor[(16, 12, 5), float32],) {
  %547 = @func_6291() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %548 = %547.0;
  (%548,)
}

def @func_21452(%var_21447: Tensor[(880), uint32]) -> (Tensor[(16, 12, 5), float32], Tensor[(12, 10, 6), float64], Tensor[(5, 11, 16), bool], Tensor[(880), uint32]) {
  %549 = @func_13656() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(100), float32]) */;
  %550 = @func_19607() /* ty=(Tensor[(12, 10, 6), float64], Tensor[(16, 12, 5), float32]) */;
  %551 = cast(%var_21447, dtype="uint32") /* ty=Tensor[(880), uint32] */;
  %552 = reshape(%551, newshape=[5, 11, 16]) /* ty=Tensor[(5, 11, 16), uint32] */;
  %553 = @func_7829(%552) /* ty=(Tensor[(5, 11, 16), bool],) */;
  %554 = %549.0;
  %555 = %550.0;
  %556 = %553.0;
  (%554, %555, %556, %var_21447)
}

def @func_17323() -> (Tensor[(10, ?, 10), bool], Tensor[(100), float32]) {
  %557 = @func_9691() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) */;
  %558 = @func_6042() /* ty=(Tensor[(100), float32],) */;
  %559 = %557.0;
  %560 = %558.0;
  (%559, %560)
}

def @func_16196() -> (Tensor[(16, 12, 5), float32],) {
  %561 = @func_5522() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %562 = %561.0;
  (%562,)
}

def @func_20108() -> (Tensor[(10, ?, 10), bool],) {
  %563 = @func_10398() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */;
  %564 = %563.1;
  (%564,)
}

def @func_7618() -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float64]) {
  %565 = cast(meta[relay.Constant][17] /* ty=Tensor[(100), float64] */, dtype="float64") /* ty=Tensor[(100), float64] */;
  %566 = reshape(%565, newshape=[10, 1, 10]) /* ty=Tensor[(10, 1, 10), float64] */;
  %567 = @func_7052() /* ty=Tensor[(16, 12, 5), float32] */;
  %568 = @func_2749(%566) /* ty=Tensor[(10, ?, 10), bool] */;
  (%567, %568, meta[relay.Constant][17] /* ty=Tensor[(100), float64] */)
}

def @func_20192() -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) {
  %569 = @func_15173() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %570 = @func_19929() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(4), int32], int32, Tensor[(100), float32]) */;
  %571 = %569.0;
  %572 = %570.0;
  (%571, %572)
}

def @func_9045(%var_9020: int8) -> (Tensor[(14, 13, 10), bool], Tensor[(14, 13, 10), float32]) {
  %573 = cast(%var_9020, dtype="bool") /* ty=bool */;
  %574 = cast(meta[relay.Constant][18] /* ty=Tensor[(14, 13, 10), int8] */, dtype="bool") /* ty=Tensor[(14, 13, 10), bool] */;
  %575 = cast(meta[relay.Constant][18] /* ty=Tensor[(14, 13, 10), int8] */, dtype="float32") /* ty=Tensor[(14, 13, 10), float32] */;
  %576 = less(%573, %574) /* ty=Tensor[(14, 13, 10), bool] */;
  %577 = sigmoid(%575) /* ty=Tensor[(14, 13, 10), float32] */;
  (%576, %577)
}

def @func_12503() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  %578 = @func_10311() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %579 = %578.0;
  %580 = @func_7052() /* ty=Tensor[(16, 12, 5), float32] */;
  (%579, %580)
}

def @func_7052() -> Tensor[(16, 12, 5), float32] {
  @func_4582() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_13186() -> (Tensor[(100), float32],) {
  %581 = @func_6042() /* ty=(Tensor[(100), float32],) */;
  %582 = %581.0;
  (%582,)
}

def @func_13903() -> (Tensor[(16, 12, 5), float32],) {
  %583 = @func_13837() /* ty=Tensor[(16, 12, 5), float32] */;
  (%583,)
}

def @func_9797() -> Tensor[(16, 12, 5), float32] {
  %584 = @func_8541() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), float64]) */;
  %584.0
}

def @func_6639() -> (Tensor[(16, 12, 5), float32], Tensor[(100), float32], Tensor[(100), float32]) {
  %585 = @func_5780() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(12, 10, 6), float64], Tensor[(720), float64], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %586 = @func_6042() /* ty=(Tensor[(100), float32],) */;
  %587 = %585.4;
  %588 = %586.0;
  %589 = @func_4476() /* ty=Tensor[(100), float32] */;
  (%587, %588, %589)
}

def @func_20295() -> Tensor[(10, 2, 2), float32] {
  %590 = cast(meta[relay.Constant][19] /* ty=Tensor[(10, 2, 2), float32] */, dtype="float32") /* ty=Tensor[(10, 2, 2), float32] */;
  acos(%590) /* ty=Tensor[(10, 2, 2), float32] */
}

def @func_15452(%var_15448: int32) -> (Tensor[(15, ?, 11), int16], int32, int32, Tensor[(4), int32]) {
  %591 = @func_8334() /* ty=(Tensor[(15, ?, 11), int16],) */;
  %592 = cast(%var_15448, dtype="int32") /* ty=int32 */;
  %593 = cast(meta[relay.Constant][20] /* ty=Tensor[(4), int32] */, dtype="int32") /* ty=Tensor[(4), int32] */;
  %594 = reshape(%592, newshape=[]) /* ty=int32 */;
  %595 = reshape(%593, newshape=[1, 4]) /* ty=Tensor[(1, 4), int32] */;
  %596 = @func_6552(%594, %595) /* ty=(Tensor[(100), float32], Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(1, 4), int32], int32, Tensor[(1, 4), int32], Tensor[(16, 12, 5), float32]) */;
  %597 = %591.0;
  %598 = %596.5;
  (%597, %598, %var_15448, meta[relay.Constant][20] /* ty=Tensor[(4), int32] */)
}

def @func_6399(%var_6363: Tensor[(39, 5), float32], %var_6397: Tensor[(1, 100), float64]) -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(11, 8, 11), float32], Tensor[(39, 5), float32], Tensor[(4), int32], Tensor[(98), uint16], Tensor[(1, 968), float32], Tensor[(10, ?, 10), bool], Tensor[(1, 100), float64]) {
  %599 = @func_5265() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(100), float32]) */;
  %600 = @func_6291() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %601 = %600.0;
  %602 = cast(%601, dtype="float32") /* ty=Tensor[(16, 12, 5), float32] */;
  %603 = cast(%var_6363, dtype="float32") /* ty=Tensor[(39, 5), float32] */;
  %604 = cast(meta[relay.Constant][21] /* ty=Tensor[(4), int32] */, dtype="int32") /* ty=Tensor[(4), int32] */;
  %605 = cast(meta[relay.Constant][22] /* ty=Tensor[(98), uint16] */, dtype="uint16") /* ty=Tensor[(98), uint16] */;
  %606 = cast(meta[relay.Constant][23] /* ty=Tensor[(1, 968), float32] */, dtype="float32") /* ty=Tensor[(1, 968), float32] */;
  %607 = reshape(%603, newshape=[195]) /* ty=Tensor[(195), float32] */;
  %608 = reshape(%604, newshape=[1, 4]) /* ty=Tensor[(1, 4), int32] */;
  %609 = reshape(%605, newshape=[98]) /* ty=Tensor[(98), uint16] */;
  %610 = reshape(%606, newshape=[968]) /* ty=Tensor[(968), float32] */;
  %611 = @func_4757(%607, %608, %609, %610) /* ty=(Tensor[(195), float32], Tensor[(1, 4), int32], Tensor[(98), uint32], Tensor[(10, ?, 10), bool], Tensor[(9, 2, 14), float32], Tensor[(6, 42), float32], Tensor[(100), float32], Tensor[(11, 8, 11), float32], Tensor[(968), float32], Tensor[(10, ?, 10), bool]) */;
  %612 = cast(%var_6397, dtype="float64") /* ty=Tensor[(1, 100), float64] */;
  %613 = reshape(%612, newshape=[100]) /* ty=Tensor[(100), float64] */;
  %614 = @func_5358(%613) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float64]) */;
  %615 = %599.0;
  %616 = atan(%602) /* ty=Tensor[(16, 12, 5), float32] */;
  %617 = %611.7;
  %618 = %614.1;
  (%615, %616, %617, %var_6363, meta[relay.Constant][21] /* ty=Tensor[(4), int32] */, meta[relay.Constant][22] /* ty=Tensor[(98), uint16] */, meta[relay.Constant][23] /* ty=Tensor[(1, 968), float32] */, %618, %var_6397)
}

def @func_8289() -> (Tensor[(10, ?, 10), bool],) {
  %619 = @func_5468() /* ty=Tensor[(10, ?, 10), bool] */;
  (%619,)
}

def @func_14646() -> (int32, Tensor[(1, 4), int32], Tensor[(4), int32], Tensor[(100), float32], Tensor[(100), float32]) {
  %620 = @func_10770() /* ty=(Tensor[(100), float32], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), float64], int32, int32, Tensor[(4), int32]) */;
  %621 = %620.3;
  %622 = cast(%621, dtype="int32") /* ty=int32 */;
  %623 = cast(meta[relay.Constant][24] /* ty=Tensor[(4), int32] */, dtype="int32") /* ty=Tensor[(4), int32] */;
  %624 = reshape(%622, newshape=[]) /* ty=int32 */;
  %625 = reshape(%623, newshape=[1, 4]) /* ty=Tensor[(1, 4), int32] */;
  %626 = cast(%621, dtype="uint16") /* ty=uint16 */;
  %627 = @func_196(%624, %625) /* ty=Tensor[(1, 4), int32] */;
  %628 = cast(%627, dtype="int32") /* ty=Tensor[(1, 4), int32] */;
  %629 = cast(meta[relay.Constant][25] /* ty=Tensor[(100), float32] */, dtype="float32") /* ty=Tensor[(100), float32] */;
  %630 = reshape(%626, newshape=[]) /* ty=uint16 */;
  %631 = reshape(%628, newshape=[4, 1]) /* ty=Tensor[(4, 1), int32] */;
  %632 = reshape(%629, newshape=[100]) /* ty=Tensor[(100), float32] */;
  %633 = @func_5418(%630, %631, %632) /* ty=(Tensor[(4), int32], uint16, Tensor[(98), uint16], Tensor[(4, 1), int32], Tensor[(100), float32]) */;
  %634 = %633.4;
  (%621, %627, meta[relay.Constant][24] /* ty=Tensor[(4), int32] */, %634, meta[relay.Constant][25] /* ty=Tensor[(100), float32] */)
}

def @func_12327() -> Tensor[(10, ?, 10), bool] {
  %635 = @func_6192() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(720), float64], Tensor[(16, 12, 5), float32]) */;
  %635.0
}

def @func_13059() -> (Tensor[(16, 12, 5), float32],) {
  %636 = @func_8644() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, 8, 10), int32], Tensor[(16, 12, 5), float32]) */;
  %637 = %636.2;
  (%637,)
}

def @func_20119() -> (Tensor[(11, 8, 11), float32], Tensor[(10, ?, 10), bool]) {
  %638 = @func_16835() /* ty=(Tensor[(968), float64], Tensor[(11, 8, 11), float32]) */;
  %639 = %638.1;
  %640 = @func_12327() /* ty=Tensor[(10, ?, 10), bool] */;
  (%639, %640)
}

def @func_14918() -> Tensor[(16, 12, 5), float32] {
  %641 = @func_9202() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %641.0
}

def @func_10496() -> (Tensor[(720), float64], Tensor[(100), float32]) {
  %642 = @func_6192() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(720), float64], Tensor[(16, 12, 5), float32]) */;
  %643 = @func_6042() /* ty=(Tensor[(100), float32],) */;
  %644 = %642.1;
  %645 = %643.0;
  (%644, %645)
}

def @func_11465(%var_11429: int32) -> (Tensor[(16, 12, 5), float32], Tensor[(1, 4), int32], int32, Tensor[(4), int32]) {
  %646 = @func_6291() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %647 = cast(%var_11429, dtype="int32") /* ty=int32 */;
  %648 = cast(meta[relay.Constant][26] /* ty=Tensor[(4), int32] */, dtype="int32") /* ty=Tensor[(4), int32] */;
  %649 = reshape(%647, newshape=[]) /* ty=int32 */;
  %650 = reshape(%648, newshape=[1, 4]) /* ty=Tensor[(1, 4), int32] */;
  %651 = @func_8192(%649, %650) /* ty=(Tensor[(100), float64], Tensor[(1, 4), int32], int32, Tensor[(1, 4), int32]) */;
  %652 = %646.0;
  %653 = %651.1;
  (%652, %653, %var_11429, meta[relay.Constant][26] /* ty=Tensor[(4), int32] */)
}

def @func_9072() -> (Tensor[(16, 12, 5), float32],) {
  %654 = @func_4405() /* ty=Tensor[(16, 12, 5), float32] */;
  (%654,)
}

def @func_11517() -> (Tensor[(16, 12, 5), float32],) {
  %655 = @func_9750() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */;
  %656 = %655.0;
  (%656,)
}

def @func_7492() -> Tensor[(16, 12, 5), float32] {
  @func_7052() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_3701(%var_3667: Tensor[(5, 3, 13), float32], %var_3681: Tensor[(4), int32]) -> (Tensor[(5, 3, 13), float32], Tensor[(1, 4), int32], Tensor[(126), uint32], Tensor[(4), int32], Tensor[(1, 4), int32], uint16, Tensor[(98), uint16], int32) {
  %657 = cast(%var_3667, dtype="float32") /* ty=Tensor[(5, 3, 13), float32] */;
  %658 = cast(meta[relay.Constant][27] /* ty=Tensor[(126), uint32] */, dtype="uint32") /* ty=Tensor[(126), uint32] */;
  %659 = cast(meta[relay.Constant][27] /* ty=Tensor[(126), uint32] */, dtype="uint32") /* ty=Tensor[(126), uint32] */;
  %660 = cast(%var_3681, dtype="int32") /* ty=Tensor[(4), int32] */;
  %661 = reshape(%658, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), uint32] */;
  %662 = reshape(%659, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), uint32] */;
  %663 = reshape(%660, newshape=[4]) /* ty=Tensor[(4), int32] */;
  %664 = @func_283(%661, %662, %663) /* ty=(Tensor[(1, 4), int32], int32, Tensor[(4), int32], Tensor[(14, 3, 3), float64], Tensor[(1, 4), int32], Tensor[(1, 4), int32]) */;
  %665 = cast(meta[relay.Constant][28] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %666 = cast(meta[relay.Constant][29] /* ty=Tensor[(98), uint16] */, dtype="uint16") /* ty=Tensor[(98), uint16] */;
  %667 = cast(%var_3681, dtype="int32") /* ty=Tensor[(4), int32] */;
  %668 = reshape(%665, newshape=[]) /* ty=uint16 */;
  %669 = reshape(%666, newshape=[14, 7, 1]) /* ty=Tensor[(14, 7, 1), uint16] */;
  %670 = reshape(%667, newshape=[4]) /* ty=Tensor[(4), int32] */;
  %671 = @func_377(%668, %669, %670) /* ty=(Tensor[(14, 7, 1), uint16], Tensor[(1, 4), int32], Tensor[(4), int32]) */;
  %672 = cast(meta[relay.Constant][27] /* ty=Tensor[(126), uint32] */, dtype="uint32") /* ty=Tensor[(126), uint32] */;
  %673 = cast(meta[relay.Constant][27] /* ty=Tensor[(126), uint32] */, dtype="uint32") /* ty=Tensor[(126), uint32] */;
  %674 = cast(%var_3681, dtype="int32") /* ty=Tensor[(4), int32] */;
  %675 = reshape(%672, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), uint32] */;
  %676 = reshape(%673, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), uint32] */;
  %677 = reshape(%674, newshape=[4]) /* ty=Tensor[(4), int32] */;
  %678 = @func_283(%675, %676, %677) /* ty=(Tensor[(1, 4), int32], int32, Tensor[(4), int32], Tensor[(14, 3, 3), float64], Tensor[(1, 4), int32], Tensor[(1, 4), int32]) */;
  %679 = tan(%657) /* ty=Tensor[(5, 3, 13), float32] */;
  %680 = %664.5;
  %681 = %671.1;
  %682 = %678.1;
  (%679, %680, meta[relay.Constant][27] /* ty=Tensor[(126), uint32] */, %var_3681, %681, meta[relay.Constant][28] /* ty=uint16 */, meta[relay.Constant][29] /* ty=Tensor[(98), uint16] */, %682)
}

def @func_6801() -> Tensor[(16, 12, 5), float32] {
  @func_4178() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_12796(%var_12786: Tensor[(252), float32]) -> (Tensor[(16, 12, 5), float32], Tensor[(9, 2, 14), float32], Tensor[(252), float32], Tensor[(968), float32]) {
  %683 = cast(%var_12786, dtype="float32") /* ty=Tensor[(252), float32] */;
  %684 = cast(%var_12786, dtype="float32") /* ty=Tensor[(252), float32] */;
  %685 = reshape(%683, newshape=[9, 2, 14]) /* ty=Tensor[(9, 2, 14), float32] */;
  %686 = reshape(%684, newshape=[9, 2, 14]) /* ty=Tensor[(9, 2, 14), float32] */;
  %687 = @func_3549(%685, %686) /* ty=(Tensor[(9, 2, 14), float32],) */;
  %688 = @func_12109() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(4), int32], Tensor[(968), float32]) */;
  %689 = @func_9797() /* ty=Tensor[(16, 12, 5), float32] */;
  %690 = %687.0;
  %691 = %688.2;
  (%689, %690, %var_12786, %691)
}

def @func_19929() -> (Tensor[(10, ?, 10), bool], Tensor[(4), int32], int32, Tensor[(100), float32]) {
  %692 = cast(6 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %693 = reshape(%692, newshape=[]) /* ty=int32 */;
  %694 = @func_11465(%693) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(1, 4), int32], int32, Tensor[(4), int32]) */;
  %695 = @func_12327() /* ty=Tensor[(10, ?, 10), bool] */;
  %696 = %694.3;
  %697 = @func_5915() /* ty=Tensor[(100), float32] */;
  (%695, %696, 6 /* ty=int32 */, %697)
}

def @func_16171() -> (Tensor[(10, 8, 10), float64], Tensor[(16, 12, 5), float32], Tensor[(10, 8, 10), bool]) {
  %698 = @func_8644() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, 8, 10), int32], Tensor[(16, 12, 5), float32]) */;
  %699 = %698.1;
  %700 = cast(%699, dtype="float64") /* ty=Tensor[(10, 8, 10), float64] */;
  %701 = @func_12414() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %702 = cast(%699, dtype="float32") /* ty=Tensor[(10, 8, 10), float32] */;
  %703 = asinh(%702) /* ty=Tensor[(10, 8, 10), float32] */;
  %704 = @func_13831() /* ty=Tensor[(10, ?, 10), bool] */;
  %705 = cast(%703, dtype="bool") /* ty=Tensor[(10, 8, 10), bool] */;
  %706 = cast(%704, dtype="bool") /* ty=Tensor[(10, ?, 10), bool] */;
  %707 = sqrt(%700) /* ty=Tensor[(10, 8, 10), float64] */;
  %708 = %701.0;
  %709 = not_equal(%705, %706) /* ty=Tensor[(10, 8, 10), bool] */;
  (%707, %708, %709)
}

def @func_19054(%var_19020: Tensor[(15, 14, 14), float32]) -> Tensor[(15, 14, 14), float32] {
  %710 = cast(%var_19020, dtype="float32") /* ty=Tensor[(15, 14, 14), float32] */;
  asin(%710) /* ty=Tensor[(15, 14, 14), float32] */
}

def @func_5148() -> (Tensor[(10, ?, 10), bool],) {
  %711 = @func_4925() /* ty=Tensor[(10, ?, 10), bool] */;
  (%711,)
}

def @func_12274(%var_12214: Tensor[(5, 9, 2), int16]) -> (Tensor[(10, ?, 10), bool], Tensor[(4), int32], Tensor[(16, 12, 5), float32], Tensor[(5, 9, 2), float64]) {
  %712 = @func_12109() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(4), int32], Tensor[(968), float32]) */;
  %713 = @func_8774() /* ty=(Tensor[(15, ?, 11), float64], Tensor[(16, 12, 5), float32]) */;
  %714 = cast(%var_12214, dtype="bool") /* ty=Tensor[(5, 9, 2), bool] */;
  %715 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(5, 9, 2), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %716 = cast(meta[relay.Constant][30] /* ty=Tensor[(5, 9, 2), int16] */, dtype="bool") /* ty=Tensor[(5, 9, 2), bool] */;
  %717 = dyn.reshape(%714, %715, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %718 = greater(%716, %717) /* ty=Tensor[(5, 9, 2), bool] */;
  %719 = cast(%718, dtype="float64") /* ty=Tensor[(5, 9, 2), float64] */;
  %720 = @func_10211() /* ty=Tensor[(10, ?, 10), bool] */;
  %721 = %712.1;
  %722 = %713.1;
  %723 = acos(%719) /* ty=Tensor[(5, 9, 2), float64] */;
  (%720, %721, %722, %723)
}

def @func_10398() -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) {
  %724 = @func_9750() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */;
  %725 = @func_7946() /* ty=Tensor[(16, 12, 5), float32] */;
  %726 = %724.1;
  (%725, %726)
}

def @func_9202() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  %727 = @func_5021() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %728 = @func_5780() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(12, 10, 6), float64], Tensor[(720), float64], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %729 = %727.0;
  %730 = %728.5;
  (%729, %730)
}

def @func_21494() -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) {
  %731 = @func_9691() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) */;
  %732 = @func_15012() /* ty=Tensor[(16, 12, 5), float32] */;
  %733 = %731.0;
  (%732, %733)
}

def @func_12414() -> (Tensor[(16, 12, 5), float32],) {
  %734 = @func_4444() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %735 = %734.0;
  (%735,)
}

def @func_11088() -> Tensor[(16, 12, 5), float32] {
  %736 = @func_5660() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %736.0
}

def @func_19130() -> (Tensor[(100), float32],) {
  %737 = @func_14646() /* ty=(int32, Tensor[(1, 4), int32], Tensor[(4), int32], Tensor[(100), float32], Tensor[(100), float32]) */;
  %738 = %737.3;
  (%738,)
}

def @func_12299() -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(10, ?, 10), bool]) {
  %739 = @func_9691() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) */;
  %740 = @func_4960() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(12, 10, 6), float64], Tensor[(720), float64]) */;
  %741 = %739.1;
  %742 = @func_8437() /* ty=Tensor[(10, ?, 10), bool] */;
  %743 = %740.0;
  (%741, %742, %743)
}

def @func_10072(%var_10042: int32) -> (Tensor[(16, 12, 5), float32], Tensor[(1, 4), int32], int32, Tensor[(4), int32], Tensor[(16, 12, 5), uint32], Tensor[(10, ?, 10), bool], Tensor[(100), float32], Tensor[(11, 14, 15), bool]) {
  %744 = @func_7641() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %745 = cast(%var_10042, dtype="int32") /* ty=int32 */;
  %746 = cast(meta[relay.Constant][31] /* ty=Tensor[(4), int32] */, dtype="int32") /* ty=Tensor[(4), int32] */;
  %747 = reshape(%745, newshape=[]) /* ty=int32 */;
  %748 = reshape(%746, newshape=[1, 4]) /* ty=Tensor[(1, 4), int32] */;
  %749 = @func_8192(%747, %748) /* ty=(Tensor[(100), float64], Tensor[(1, 4), int32], int32, Tensor[(1, 4), int32]) */;
  %750 = %744.0;
  %751 = cast(%750, dtype="float32") /* ty=Tensor[(16, 12, 5), float32] */;
  %752 = reshape(%751, newshape=[16, 12, 5]) /* ty=Tensor[(16, 12, 5), float32] */;
  %753 = @func_9912(%752) /* ty=(Tensor[(16, 12, 5), uint32],) */;
  %754 = @func_5265() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(100), float32]) */;
  %755 = cast(%var_10042, dtype="int32") /* ty=int32 */;
  %756 = %749.3;
  %757 = cast(%756, dtype="int32") /* ty=Tensor[(1, 4), int32] */;
  %758 = reshape(%755, newshape=[]) /* ty=int32 */;
  %759 = reshape(%757, newshape=[4]) /* ty=Tensor[(4), int32] */;
  %760 = @func_9587(%758, %759) /* ty=(Tensor[(100), float32], Tensor[(11, 14, 15), bool], int32, Tensor[(2310), int32], Tensor[(1, 4), int32], Tensor[(4), int32]) */;
  %761 = %753.0;
  %762 = @func_5468() /* ty=Tensor[(10, ?, 10), bool] */;
  %763 = %754.1;
  %764 = %760.1;
  (%750, %756, %var_10042, meta[relay.Constant][31] /* ty=Tensor[(4), int32] */, %761, %762, %763, %764)
}

def @func_6485() -> (Tensor[(16, 12, 5), float32], Tensor[(720), float64], Tensor[(10, ?, 10), bool]) {
  %765 = @func_5265() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(100), float32]) */;
  %766 = %765.0;
  %767 = cast(%766, dtype="float32") /* ty=Tensor[(16, 12, 5), float32] */;
  %768 = @func_5780() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(12, 10, 6), float64], Tensor[(720), float64], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %769 = acos(%767) /* ty=Tensor[(16, 12, 5), float32] */;
  %770 = %768.3;
  %771 = @func_5507() /* ty=Tensor[(10, ?, 10), bool] */;
  (%769, %770, %771)
}

def @func_15012() -> Tensor[(16, 12, 5), float32] {
  %772 = @func_10669() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(1, 468), uint64]) */;
  %772.0
}

def @func_4178() -> Tensor[(16, 12, 5), float32] {
  %773 = cast(meta[relay.Constant][32] /* ty=Tensor[(16, 12, 5), float32] */, dtype="float32") /* ty=Tensor[(16, 12, 5), float32] */;
  acosh(%773) /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_15139() -> Tensor[(16, 12, 5), float32] {
  %774 = @func_12673() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %774.0
}

def @func_7784() -> (Tensor[(100), float32], Tensor[(720), float64], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) {
  %775 = @func_6485() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(720), float64], Tensor[(10, ?, 10), bool]) */;
  %776 = @func_6998() /* ty=Tensor[(100), float32] */;
  %777 = %775.1;
  %778 = @func_4649() /* ty=Tensor[(16, 12, 5), float32] */;
  %779 = @func_6137() /* ty=Tensor[(10, ?, 10), bool] */;
  (%776, %777, %778, %779)
}

def @func_17999() -> Tensor[(10, ?, 10), bool] {
  %780 = @func_17781() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(10, ?, 10), bool]) */;
  %780.0
}

def @func_16964(%var_16949: Tensor[(1200), uint64]) -> (Tensor[(100), float32], Tensor[(16, 12, 5), float32], uint64, Tensor[(1200), uint64]) {
  %781 = @func_6042() /* ty=(Tensor[(100), float32],) */;
  %782 = cast(meta[relay.Constant][33] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %783 = cast(%var_16949, dtype="uint64") /* ty=Tensor[(1200), uint64] */;
  %784 = reshape(%782, newshape=[]) /* ty=uint64 */;
  %785 = reshape(%783, newshape=[5, 15, 16]) /* ty=Tensor[(5, 15, 16), uint64] */;
  %786 = @func_14904(%784, %785) /* ty=(Tensor[(5, 15, 16), uint64], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %787 = %781.0;
  %788 = %786.2;
  (%787, %788, meta[relay.Constant][33] /* ty=uint64 */, %var_16949)
}

def @func_18658() -> (Tensor[(11, 4, 14), uint16],) {
  %789 = cast(meta[relay.Constant][34] /* ty=Tensor[(11, 4, 14), float64] */, dtype="float64") /* ty=Tensor[(11, 4, 14), float64] */;
  %790 = cosh(%789) /* ty=Tensor[(11, 4, 14), float64] */;
  %791 = cast(meta[relay.Constant][34] /* ty=Tensor[(11, 4, 14), float64] */, dtype="uint16") /* ty=Tensor[(11, 4, 14), uint16] */;
  %792 = shape_of(%790, dtype="int32") /* ty=Tensor[(3), int32] */;
  %793 = cast(%790, dtype="uint16") /* ty=Tensor[(11, 4, 14), uint16] */;
  %794 = dyn.reshape(%791, %792, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %795 = right_shift(%793, %794) /* ty=Tensor[(11, 4, 14), uint16] */;
  (%795,)
}

def @func_7829(%var_7822: Tensor[(5, 11, 16), uint32]) -> (Tensor[(5, 11, 16), bool],) {
  %796 = cast(meta[relay.Constant][35] /* ty=Tensor[(5, 11, 16), uint32] */, dtype="bool") /* ty=Tensor[(5, 11, 16), bool] */;
  %797 = shape_of(%var_7822, dtype="int32") /* ty=Tensor[(3), int32] */;
  %798 = cast(%var_7822, dtype="bool") /* ty=Tensor[(5, 11, 16), bool] */;
  %799 = dyn.reshape(%796, %797, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %800 = less(%798, %799) /* ty=Tensor[(5, 11, 16), bool] */;
  (%800,)
}

def @func_9691() -> (Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) {
  %801 = @func_8289() /* ty=(Tensor[(10, ?, 10), bool],) */;
  %802 = %801.0;
  %803 = @func_7946() /* ty=Tensor[(16, 12, 5), float32] */;
  (%802, %803)
}

def @func_10683(%var_10674: Tensor[(5, 4, 5), float32]) -> Tensor[(5, 4, 5), float32] {
  %804 = cast(%var_10674, dtype="float32") /* ty=Tensor[(5, 4, 5), float32] */;
  cosh(%804) /* ty=Tensor[(5, 4, 5), float32] */
}

def @func_17512() -> (Tensor[(100), float32],) {
  %805 = @func_14646() /* ty=(int32, Tensor[(1, 4), int32], Tensor[(4), int32], Tensor[(100), float32], Tensor[(100), float32]) */;
  %806 = %805.4;
  (%806,)
}

def @func_15705() -> Tensor[(315), float64] {
  %807 = @func_11114() /* ty=(Tensor[(315), float64],) */;
  %807.0
}

def @func_6912() -> (Tensor[(100), float32], Tensor[(10, ?, 10), bool], Tensor[(4), int32], uint16, Tensor[(4), int32], Tensor[(10, ?, 10), bool], Tensor[(10, ?, 10), bool]) {
  %808 = @func_4221() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float32]) */;
  %809 = cast(meta[relay.Constant][36] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %810 = cast(meta[relay.Constant][37] /* ty=Tensor[(4), int32] */, dtype="int32") /* ty=Tensor[(4), int32] */;
  %811 = @func_5507() /* ty=Tensor[(10, ?, 10), bool] */;
  %812 = cast(%811, dtype="float32") /* ty=Tensor[(10, ?, 10), float32] */;
  %813 = reshape(%809, newshape=[]) /* ty=uint16 */;
  %814 = reshape(%810, newshape=[4, 1]) /* ty=Tensor[(4, 1), int32] */;
  %815 = reshape(%812, newshape=[100]) /* ty=Tensor[(100), float32] */;
  %816 = @func_5418(%813, %814, %815) /* ty=(Tensor[(4), int32], uint16, Tensor[(98), uint16], Tensor[(4, 1), int32], Tensor[(100), float32]) */;
  %817 = %808.2;
  %818 = %816.0;
  %819 = @func_5468() /* ty=Tensor[(10, ?, 10), bool] */;
  %820 = @func_5468() /* ty=Tensor[(10, ?, 10), bool] */;
  (%817, %811, %818, meta[relay.Constant][36] /* ty=uint16 */, meta[relay.Constant][37] /* ty=Tensor[(4), int32] */, %819, %820)
}

def @func_18030() -> (Tensor[(15, ?, 11), uint16], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) {
  %821 = @func_8404() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %822 = @func_7971() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */;
  %823 = @func_15493() /* ty=(Tensor[(10, 8, 10), float32], Tensor[(16, 12, 5), float32]) */;
  %824 = @func_17130() /* ty=Tensor[(15, ?, 11), uint16] */;
  %825 = %821.0;
  %826 = %822.1;
  %827 = %823.1;
  (%824, %825, %826, %827)
}

def @func_15564() -> (Tensor[(16, 12, 5), float32],) {
  %828 = @func_13059() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %829 = %828.0;
  (%829,)
}

def @func_13763() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  %830 = @func_4444() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %831 = @func_7784() /* ty=(Tensor[(100), float32], Tensor[(720), float64], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */;
  %832 = %830.0;
  %833 = %831.2;
  (%832, %833)
}

def @func_20481() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(4), int32]) {
  %834 = @func_12109() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(4), int32], Tensor[(968), float32]) */;
  %835 = @func_18771() /* ty=Tensor[(16, 12, 5), float32] */;
  %836 = @func_4178() /* ty=Tensor[(16, 12, 5), float32] */;
  %837 = %834.1;
  (%835, %836, %837)
}

def @func_16003(%var_15966: Tensor[(300), bool], %var_15967: Tensor[(1600), bool], %var_15970: Tensor[(260), uint64], %var_15971: Tensor[(195), float32], %var_15991: Tensor[(336), int16]) -> (Tensor[(16, 12, 5), float32], Tensor[(720), float64], Tensor[(968), float32], Tensor[(10, ?, 10), bool], Tensor[(300), bool], Tensor[(1600), bool], Tensor[(100), float32], Tensor[(260), uint64], Tensor[(195), float32], Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(336), int16]) {
  %838 = @func_13059() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %839 = @func_6485() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(720), float64], Tensor[(10, ?, 10), bool]) */;
  %840 = @func_13793() /* ty=(Tensor[(968), float32],) */;
  %841 = cast(%var_15966, dtype="bool") /* ty=Tensor[(300), bool] */;
  %842 = cast(%var_15967, dtype="bool") /* ty=Tensor[(1600), bool] */;
  %843 = reshape(%841, newshape=[300]) /* ty=Tensor[(300), bool] */;
  %844 = reshape(%842, newshape=[10, 16, 10]) /* ty=Tensor[(10, 16, 10), bool] */;
  %845 = @func_8141(%843, %844) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, 3, 10), bool], Tensor[(300), bool], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(10, 16, 10), uint8], Tensor[(10, 16, 10), bool], Tensor[(16, 12, 5), float32]) */;
  %846 = cast(%var_15970, dtype="uint64") /* ty=Tensor[(260), uint64] */;
  %847 = cast(%var_15971, dtype="float32") /* ty=Tensor[(195), float32] */;
  %848 = reshape(%846, newshape=[260]) /* ty=Tensor[(260), uint64] */;
  %849 = reshape(%847, newshape=[195]) /* ty=Tensor[(195), float32] */;
  %850 = @func_8261(%848, %849) /* ty=(Tensor[(15, ?, 11), float64], Tensor[(16, 12, 5), float32], Tensor[(260), uint64], Tensor[(195), float32], Tensor[(100), float32], Tensor[(10, ?, 10), bool]) */;
  %851 = cast(%var_15991, dtype="int16") /* ty=Tensor[(336), int16] */;
  %852 = cast(%var_15991, dtype="int16") /* ty=Tensor[(336), int16] */;
  %853 = @func_12327() /* ty=Tensor[(10, ?, 10), bool] */;
  %854 = cast(%853, dtype="float32") /* ty=Tensor[(10, ?, 10), float32] */;
  %855 = reshape(%851, newshape=[3, 8, 14]) /* ty=Tensor[(3, 8, 14), int16] */;
  %856 = reshape(%852, newshape=[3, 8, 14]) /* ty=Tensor[(3, 8, 14), int16] */;
  %857 = reshape(%854, newshape=[100]) /* ty=Tensor[(100), float32] */;
  %858 = @func_5874(%855, %856, %857) /* ty=(Tensor[(3, 8, 14), int16], Tensor[(13, 10, 2), bool], Tensor[(260), uint64], Tensor[(4), int32], Tensor[(4, 1), int32], Tensor[(100), float32], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(3, 8, 14), float32], Tensor[(16, 12, 5), bool]) */;
  %859 = %838.0;
  %860 = %839.1;
  %861 = %840.0;
  %862 = %845.4;
  %863 = %850.4;
  %864 = %858.7;
  (%859, %860, %861, %862, %var_15966, %var_15967, %863, %var_15970, %var_15971, %853, %864, %var_15991)
}

def @func_14334() -> Tensor[(16, 12, 5), float32] {
  %865 = @func_7716() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), int8]) */;
  %865.0
}

def @func_7105(%var_7082: Tensor[(195), float32]) -> (Tensor[(16, 12, 5), float32], Tensor[(4), int32], Tensor[(195), float32], Tensor[(4), int32], Tensor[(16, 12, 5), float32]) {
  %866 = cast(%var_7082, dtype="float32") /* ty=Tensor[(195), float32] */;
  %867 = cast(meta[relay.Constant][38] /* ty=Tensor[(4), int32] */, dtype="int32") /* ty=Tensor[(4), int32] */;
  %868 = reshape(%866, newshape=[5, 3, 13]) /* ty=Tensor[(5, 3, 13), float32] */;
  %869 = reshape(%867, newshape=[4]) /* ty=Tensor[(4), int32] */;
  %870 = @func_3701(%868, %869) /* ty=(Tensor[(5, 3, 13), float32], Tensor[(1, 4), int32], Tensor[(126), uint32], Tensor[(4), int32], Tensor[(1, 4), int32], uint16, Tensor[(98), uint16], int32) */;
  %871 = @func_5265() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(100), float32]) */;
  %872 = @func_4178() /* ty=Tensor[(16, 12, 5), float32] */;
  %873 = %870.3;
  %874 = %871.0;
  (%872, %873, %var_7082, meta[relay.Constant][38] /* ty=Tensor[(4), int32] */, %874)
}

def @func_13837() -> Tensor[(16, 12, 5), float32] {
  %875 = @func_6675() /* ty=(Tensor[(720), float64], Tensor[(16, 12, 5), float32]) */;
  %875.1
}

def @func_377(%var_353: uint16, %var_354: Tensor[(14, 7, 1), uint16], %var_372: Tensor[(4), int32]) -> (Tensor[(14, 7, 1), uint16], Tensor[(1, 4), int32], Tensor[(4), int32]) {
  %876 = cast(%var_353, dtype="uint16") /* ty=uint16 */;
  %877 = cast(%var_354, dtype="uint16") /* ty=Tensor[(14, 7, 1), uint16] */;
  %878 = cast(%var_353, dtype="int32") /* ty=int32 */;
  %879 = cast(%var_372, dtype="int32") /* ty=Tensor[(4), int32] */;
  %880 = reshape(%878, newshape=[]) /* ty=int32 */;
  %881 = reshape(%879, newshape=[1, 4]) /* ty=Tensor[(1, 4), int32] */;
  %882 = subtract(%876, %877) /* ty=Tensor[(14, 7, 1), uint16] */;
  %883 = @func_196(%880, %881) /* ty=Tensor[(1, 4), int32] */;
  (%882, %883, %var_372)
}

def @func_13793() -> (Tensor[(968), float32],) {
  %884 = @func_12937() /* ty=(Tensor[(968), float32],) */;
  %885 = %884.0;
  (%885,)
}

def @func_7946() -> Tensor[(16, 12, 5), float32] {
  %886 = @func_4350() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %886.0
}

def @func_5434() -> Tensor[(10, ?, 10), bool] {
  @func_4925() /* ty=Tensor[(10, ?, 10), bool] */
}

def @func_21156() -> (Tensor[(100), float32], Tensor[(10, 8, 10), float32]) {
  %887 = @func_4221() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float32]) */;
  %888 = @func_7262() /* ty=(Tensor[(10, 8, 10), int32], Tensor[(10, 8, 10), float32]) */;
  %889 = %887.2;
  %890 = %888.1;
  (%889, %890)
}

def @func_16054(%var_16044: Tensor[(10, 9, 15), float32], %var_16049: Tensor[(10, 9, 15), float32]) -> Tensor[(10, 9, 15), uint64] {
  %891 = cast(%var_16044, dtype="float32") /* ty=Tensor[(10, 9, 15), float32] */;
  %892 = sinh(%891) /* ty=Tensor[(10, 9, 15), float32] */;
  %893 = cast(%var_16049, dtype="uint64") /* ty=Tensor[(10, 9, 15), uint64] */;
  %894 = shape_of(%892, dtype="int32") /* ty=Tensor[(3), int32] */;
  %895 = cast(%892, dtype="uint64") /* ty=Tensor[(10, 9, 15), uint64] */;
  %896 = dyn.reshape(%893, %894, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  logical_xor(%895, %896) /* ty=Tensor[(10, 9, 15), uint64] */
}

def @func_5915() -> Tensor[(100), float32] {
  %897 = @func_5265() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(100), float32]) */;
  %897.1
}

def @func_7641() -> (Tensor[(16, 12, 5), float32],) {
  %898 = @func_4178() /* ty=Tensor[(16, 12, 5), float32] */;
  (%898,)
}

def @func_14701() -> Tensor[(16, 12, 5), float32] {
  @func_4582() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_12856() -> (Tensor[(100), float32], Tensor[(10, ?, 10), bool], Tensor[(11, 14, 13), float32], Tensor[(2002), float32], Tensor[(10, ?, 10), bool]) {
  %899 = @func_6042() /* ty=(Tensor[(100), float32],) */;
  %900 = @func_4629() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */;
  %901 = cast(meta[relay.Constant][39] /* ty=Tensor[(2002), float32] */, dtype="float32") /* ty=Tensor[(2002), float32] */;
  %902 = cast(meta[relay.Constant][39] /* ty=Tensor[(2002), float32] */, dtype="float32") /* ty=Tensor[(2002), float32] */;
  %903 = reshape(%901, newshape=[11, 14, 13]) /* ty=Tensor[(11, 14, 13), float32] */;
  %904 = reshape(%902, newshape=[11, 14, 13]) /* ty=Tensor[(11, 14, 13), float32] */;
  %905 = @func_6985(%903, %904) /* ty=(Tensor[(11, 14, 13), float32], Tensor[(10, ?, 10), bool], Tensor[(11, 14, 13), uint64]) */;
  %906 = %899.0;
  %907 = %900.1;
  %908 = %905.0;
  %909 = @func_12759() /* ty=Tensor[(10, ?, 10), bool] */;
  (%906, %907, %908, meta[relay.Constant][39] /* ty=Tensor[(2002), float32] */, %909)
}

def @func_6137() -> Tensor[(10, ?, 10), bool] {
  @func_5434() /* ty=Tensor[(10, ?, 10), bool] */
}

def @func_4279() -> Tensor[(10, ?, 10), bool] {
  %910 = @func_4221() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float32]) */;
  %910.1
}

def @func_8192(%var_8180: int32, %var_8181: Tensor[(1, 4), int32]) -> (Tensor[(100), float64], Tensor[(1, 4), int32], int32, Tensor[(1, 4), int32]) {
  %911 = @func_7618() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float64]) */;
  %912 = cast(%var_8180, dtype="int32") /* ty=int32 */;
  %913 = cast(%var_8181, dtype="int32") /* ty=Tensor[(1, 4), int32] */;
  %914 = reshape(%912, newshape=[]) /* ty=int32 */;
  %915 = reshape(%913, newshape=[1, 4]) /* ty=Tensor[(1, 4), int32] */;
  %916 = %911.2;
  %917 = @func_196(%914, %915) /* ty=Tensor[(1, 4), int32] */;
  (%916, %917, %var_8180, %var_8181)
}

def @func_3549(%var_3535: Tensor[(9, 2, 14), float32], %var_3536: Tensor[(9, 2, 14), float32]) -> (Tensor[(9, 2, 14), float32],) {
  %918 = cast(%var_3536, dtype="float32") /* ty=Tensor[(9, 2, 14), float32] */;
  %919 = shape_of(%var_3535, dtype="int32") /* ty=Tensor[(3), int32] */;
  %920 = cast(%var_3535, dtype="float32") /* ty=Tensor[(9, 2, 14), float32] */;
  %921 = dyn.reshape(%918, %919, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %922 = divide(%920, %921) /* ty=Tensor[(9, 2, 14), float32] */;
  (%922,)
}

def @func_20644() -> (Tensor[(10, 8, 10), float32], Tensor[(16, 12, 5), float32]) {
  %923 = @func_8644() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, 8, 10), int32], Tensor[(16, 12, 5), float32]) */;
  %924 = %923.1;
  %925 = cast(%924, dtype="float32") /* ty=Tensor[(10, 8, 10), float32] */;
  %926 = @func_20325() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %927 = cos(%925) /* ty=Tensor[(10, 8, 10), float32] */;
  %928 = %926.0;
  (%927, %928)
}

def @func_18418(%var_18404: Tensor[(1, 468), uint64]) -> (Tensor[(16, 12, 5), float32], Tensor[(4), int32], Tensor[(1, 468), uint64]) {
  %929 = @func_6192() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(720), float64], Tensor[(16, 12, 5), float32]) */;
  %930 = cast(%var_18404, dtype="uint64") /* ty=Tensor[(1, 468), uint64] */;
  %931 = reshape(%930, newshape=[468]) /* ty=Tensor[(468), uint64] */;
  %932 = @func_8315(%931) /* ty=(Tensor[(10, ?, 10), bool], Tensor[(4), int32], Tensor[(468), uint64]) */;
  %933 = %929.2;
  %934 = %932.1;
  (%933, %934, %var_18404)
}

def @func_745(%var_737: Tensor[(12, 10, 6), float64]) -> (Tensor[(12, 10, 6), float64],) {
  %935 = cast(%var_737, dtype="float64") /* ty=Tensor[(12, 10, 6), float64] */;
  %936 = asin(%935) /* ty=Tensor[(12, 10, 6), float64] */;
  (%936,)
}

def @func_5780() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(12, 10, 6), float64], Tensor[(720), float64], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  %937 = @func_5522() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %938 = @func_5522() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %939 = cast(meta[relay.Constant][40] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %940 = reshape(%939, newshape=[12, 10, 6]) /* ty=Tensor[(12, 10, 6), float64] */;
  %941 = @func_745(%940) /* ty=(Tensor[(12, 10, 6), float64],) */;
  %942 = @func_5522() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %943 = %937.0;
  %944 = %938.0;
  %945 = %941.0;
  %946 = %942.0;
  %947 = @func_4178() /* ty=Tensor[(16, 12, 5), float32] */;
  (%943, %944, %945, meta[relay.Constant][40] /* ty=Tensor[(720), float64] */, %946, %947)
}

def @func_18678() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  %948 = @func_13699() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(252), float32], Tensor[(252), float32]) */;
  %949 = @func_11088() /* ty=Tensor[(16, 12, 5), float32] */;
  %950 = %948.0;
  (%949, %950)
}

def @func_17419() -> Tensor[(100), float32] {
  @func_11726() /* ty=Tensor[(100), float32] */
}

def @func_11749(%var_11746: Tensor[(4), int32]) -> (Tensor[(100), float32], Tensor[(100), float64], Tensor[(4), int32]) {
  %951 = cast(%var_11746, dtype="int32") /* ty=Tensor[(4), int32] */;
  %952 = reshape(%951, newshape=[4]) /* ty=Tensor[(4), int32] */;
  %953 = @func_10872(%952) /* ty=(Tensor[(15, ?, 11), int16], Tensor[(4), int32], Tensor[(126), uint32], Tensor[(4), int32], Tensor[(10, ?, 10), bool], Tensor[(195), float32], Tensor[(100), float64]) */;
  %954 = @func_6998() /* ty=Tensor[(100), float32] */;
  %955 = %953.6;
  (%954, %955, %var_11746)
}

def @func_11857(%var_11823: Tensor[(1, 11, 15), float64], %var_11851: int32) -> (Tensor[(1, 11, 15), float64], Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], int32) {
  %956 = cast(%var_11823, dtype="float64") /* ty=Tensor[(1, 11, 15), float64] */;
  %957 = cast(%var_11851, dtype="int32") /* ty=int32 */;
  %958 = reshape(%957, newshape=[]) /* ty=int32 */;
  %959 = @func_10072(%958) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(1, 4), int32], int32, Tensor[(4), int32], Tensor[(16, 12, 5), uint32], Tensor[(10, ?, 10), bool], Tensor[(100), float32], Tensor[(11, 14, 15), bool]) */;
  %960 = cosh(%956) /* ty=Tensor[(1, 11, 15), float64] */;
  %961 = @func_5173() /* ty=Tensor[(10, ?, 10), bool] */;
  %962 = %959.0;
  (%960, %961, %962, %var_11851)
}

def @func_6192() -> (Tensor[(10, ?, 10), bool], Tensor[(720), float64], Tensor[(16, 12, 5), float32]) {
  %963 = @func_4960() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(12, 10, 6), float64], Tensor[(720), float64]) */;
  %964 = @func_5021() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %965 = @func_5173() /* ty=Tensor[(10, ?, 10), bool] */;
  %966 = %963.2;
  %967 = %964.0;
  (%965, %966, %967)
}

def @func_5418(%var_5387: uint16, %var_5389: Tensor[(4, 1), int32], %var_5395: Tensor[(100), float32]) -> (Tensor[(4), int32], uint16, Tensor[(98), uint16], Tensor[(4, 1), int32], Tensor[(100), float32]) {
  %968 = cast(%var_5387, dtype="uint16") /* ty=uint16 */;
  %969 = cast(meta[relay.Constant][41] /* ty=Tensor[(98), uint16] */, dtype="uint16") /* ty=Tensor[(98), uint16] */;
  %970 = cast(%var_5389, dtype="int32") /* ty=Tensor[(4, 1), int32] */;
  %971 = reshape(%968, newshape=[]) /* ty=uint16 */;
  %972 = reshape(%969, newshape=[14, 7, 1]) /* ty=Tensor[(14, 7, 1), uint16] */;
  %973 = reshape(%970, newshape=[4]) /* ty=Tensor[(4), int32] */;
  %974 = @func_377(%971, %972, %973) /* ty=(Tensor[(14, 7, 1), uint16], Tensor[(1, 4), int32], Tensor[(4), int32]) */;
  %975 = @func_4221() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float32]) */;
  %976 = %975.2;
  %977 = cast(%var_5395, dtype="float32") /* ty=Tensor[(100), float32] */;
  %978 = shape_of(%976, dtype="int32") /* ty=Tensor[(1), int32] */;
  %979 = cast(%976, dtype="float32") /* ty=Tensor[(100), float32] */;
  %980 = dyn.reshape(%977, %978, newshape=[]) /* ty=Tensor[(?), float32] */;
  %981 = %974.2;
  %982 = multiply(%979, %980) /* ty=Tensor[(100), float32] */;
  (%981, %var_5387, meta[relay.Constant][41] /* ty=Tensor[(98), uint16] */, %var_5389, %982)
}

def @func_13400(%var_13374: Tensor[(468), uint64], %var_13386: Tensor[(195), float32]) -> (Tensor[(10, ?, 10), int8], Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(13, 14, 8), float64], Tensor[(468), uint64], Tensor[(98), uint16], Tensor[(195), float32]) {
  %983 = @func_7716() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), int8]) */;
  %984 = @func_11770() /* ty=(Tensor[(10, ?, 10), bool],) */;
  %985 = @func_11517() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %986 = %985.0;
  %987 = cast(meta[relay.Constant][42] /* ty=Tensor[(16, 12, 5), float32] */, dtype="float32") /* ty=Tensor[(16, 12, 5), float32] */;
  %988 = shape_of(%986, dtype="int32") /* ty=Tensor[(3), int32] */;
  %989 = cast(%986, dtype="float32") /* ty=Tensor[(16, 12, 5), float32] */;
  %990 = dyn.reshape(%987, %988, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %991 = cast(%var_13374, dtype="uint64") /* ty=Tensor[(468), uint64] */;
  %992 = reshape(%991, newshape=[234, 2]) /* ty=Tensor[(234, 2), uint64] */;
  %993 = @func_13013(%992) /* ty=(Tensor[(13, 14, 8), float32], Tensor[(13, 14, 8), float64], int32, Tensor[(234, 2), uint64]) */;
  %994 = cast(%var_13386, dtype="float32") /* ty=Tensor[(195), float32] */;
  %995 = reshape(%994, newshape=[13, 15]) /* ty=Tensor[(13, 15), float32] */;
  %996 = @func_9350(%995) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(13, 15), float32], Tensor[(4), int32], Tensor[(98), uint16], Tensor[(968), float32], Tensor[(15, 7, 3), float64]) */;
  %997 = %983.1;
  %998 = %984.0;
  %999 = minimum(%989, %990) /* ty=Tensor[(16, 12, 5), float32] */;
  %1000 = %993.1;
  %1001 = %996.4;
  (%997, %998, %999, %1000, %var_13374, %1001, %var_13386)
}

def @func_21381() -> (Tensor[(15, ?, 11), uint16], Tensor[(16, 12, 5), float32]) {
  %1002 = @func_16070() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1003 = @func_17130() /* ty=Tensor[(15, ?, 11), uint16] */;
  %1004 = %1002.0;
  (%1003, %1004)
}

def @func_6291() -> (Tensor[(16, 12, 5), float32],) {
  %1005 = @func_4178() /* ty=Tensor[(16, 12, 5), float32] */;
  (%1005,)
}

def @func_14208() -> (Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) {
  %1006 = @func_12813() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) */;
  %1007 = @func_4925() /* ty=Tensor[(10, ?, 10), bool] */;
  %1008 = %1006.1;
  (%1007, %1008)
}

def @func_8942() -> (Tensor[(16, 12, 5), float32],) {
  %1009 = @func_7946() /* ty=Tensor[(16, 12, 5), float32] */;
  (%1009,)
}

def @func_11114() -> (Tensor[(315), float64],) {
  %1010 = @func_5721() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(15, 7, 3), float64], Tensor[(315), float64]) */;
  %1011 = %1010.2;
  (%1011,)
}

def @func_18999(%var_18991: Tensor[(5, 14, 15), float64]) -> (Tensor[(5, 14, 15), float64],) {
  %1012 = cast(%var_18991, dtype="float64") /* ty=Tensor[(5, 14, 15), float64] */;
  %1013 = acosh(%1012) /* ty=Tensor[(5, 14, 15), float64] */;
  (%1013,)
}

def @func_4350() -> (Tensor[(16, 12, 5), float32],) {
  %1014 = @func_4178() /* ty=Tensor[(16, 12, 5), float32] */;
  (%1014,)
}

def @func_4629() -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) {
  %1015 = @func_4221() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float32]) */;
  %1016 = %1015.0;
  %1017 = @func_4279() /* ty=Tensor[(10, ?, 10), bool] */;
  (%1016, %1017)
}

def @func_18969() -> (Tensor[(16, 12, 5), float32],) {
  %1018 = @func_17398() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1019 = %1018.0;
  (%1019,)
}

def @func_8261(%var_8239: Tensor[(260), uint64], %var_8240: Tensor[(195), float32]) -> (Tensor[(15, ?, 11), float64], Tensor[(16, 12, 5), float32], Tensor[(260), uint64], Tensor[(195), float32], Tensor[(100), float32], Tensor[(10, ?, 10), bool]) {
  %1020 = @func_6587() /* ty=(Tensor[(15, ?, 11), int16], Tensor[(16, 12, 5), float32]) */;
  %1021 = %1020.0;
  %1022 = cast(%1021, dtype="float64") /* ty=Tensor[(15, ?, 11), float64] */;
  %1023 = cast(%var_8239, dtype="uint64") /* ty=Tensor[(260), uint64] */;
  %1024 = cast(%var_8240, dtype="float32") /* ty=Tensor[(195), float32] */;
  %1025 = reshape(%1023, newshape=[260]) /* ty=Tensor[(260), uint64] */;
  %1026 = reshape(%1024, newshape=[195]) /* ty=Tensor[(195), float32] */;
  %1027 = @func_7465(%1025, %1026) /* ty=(Tensor[(13, 10, 2), bool], Tensor[(260), uint64], Tensor[(100), float32], Tensor[(10, ?, 10), bool], Tensor[(10, ?, 10), float64], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(4), int32], Tensor[(195), float32]) */;
  %1028 = @func_4221() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float32]) */;
  %1029 = log10(%1022) /* ty=Tensor[(15, ?, 11), float64] */;
  %1030 = %1027.5;
  %1031 = %1028.2;
  %1032 = @func_5173() /* ty=Tensor[(10, ?, 10), bool] */;
  (%1029, %1030, %var_8239, %var_8240, %1031, %1032)
}

def @func_5721() -> (Tensor[(16, 12, 5), float32], Tensor[(15, 7, 3), float64], Tensor[(315), float64]) {
  %1033 = @func_5660() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1034 = cast(meta[relay.Constant][43] /* ty=Tensor[(315), float64] */, dtype="float64") /* ty=Tensor[(315), float64] */;
  %1035 = reshape(%1034, newshape=[15, 7, 3]) /* ty=Tensor[(15, 7, 3), float64] */;
  %1036 = @func_3716(%1035) /* ty=(Tensor[(15, 7, 3), float64],) */;
  %1037 = %1033.0;
  %1038 = %1036.0;
  (%1037, %1038, meta[relay.Constant][43] /* ty=Tensor[(315), float64] */)
}

def @func_7921(%var_7914: int32) -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(11, 14, 15), bool], int32, Tensor[(2310), int32]) {
  %1039 = cast(%var_7914, dtype="int32") /* ty=int32 */;
  %1040 = cast(meta[relay.Constant][44] /* ty=Tensor[(2310), int32] */, dtype="int32") /* ty=Tensor[(2310), int32] */;
  %1041 = reshape(%1039, newshape=[]) /* ty=int32 */;
  %1042 = reshape(%1040, newshape=[11, 14, 15]) /* ty=Tensor[(11, 14, 15), int32] */;
  %1043 = @func_7492() /* ty=Tensor[(16, 12, 5), float32] */;
  %1044 = @func_7492() /* ty=Tensor[(16, 12, 5), float32] */;
  %1045 = @func_7052() /* ty=Tensor[(16, 12, 5), float32] */;
  %1046 = @func_4665(%1041, %1042) /* ty=Tensor[(11, 14, 15), bool] */;
  (%1043, %1044, %1045, %1046, %var_7914, meta[relay.Constant][44] /* ty=Tensor[(2310), int32] */)
}

def @func_9137() -> (Tensor[(100), float32], Tensor[(16, 12, 5), float32], Tensor[(100), float32], Tensor[(16, 12, 5), float32]) {
  %1047 = @func_5265() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(100), float32]) */;
  %1048 = @func_8663() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) */;
  %1049 = @func_8724() /* ty=(Tensor[(100), float32], Tensor[(16, 12, 5), float32]) */;
  %1050 = @func_8942() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1051 = %1047.1;
  %1052 = %1048.1;
  %1053 = %1049.0;
  %1054 = %1050.0;
  (%1051, %1052, %1053, %1054)
}

def @func_20319() -> (Tensor[(16, 12, 5), float32],) {
  %1055 = @func_4629() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */;
  %1056 = %1055.0;
  (%1056,)
}

def @func_6587() -> (Tensor[(15, ?, 11), int16], Tensor[(16, 12, 5), float32]) {
  %1057 = cast(meta[relay.Constant][45] /* ty=Tensor[(15, 1, 11), float32] */, dtype="float32") /* ty=Tensor[(15, 1, 11), float32] */;
  %1058 = asinh(%1057) /* ty=Tensor[(15, 1, 11), float32] */;
  %1059 = cast(meta[relay.Constant][45] /* ty=Tensor[(15, 1, 11), float32] */, dtype="int16") /* ty=Tensor[(15, 1, 11), int16] */;
  %1060 = shape_of(%1058, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1061 = cast(%1058, dtype="int16") /* ty=Tensor[(15, 1, 11), int16] */;
  %1062 = dyn.reshape(%1059, %1060, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1063 = @func_6485() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(720), float64], Tensor[(10, ?, 10), bool]) */;
  %1064 = bitwise_or(%1061, %1062) /* ty=Tensor[(15, ?, 11), int16] */;
  %1065 = %1063.0;
  (%1064, %1065)
}

def @func_13958() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  %1066 = @func_5522() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1067 = @func_11517() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1068 = %1066.0;
  %1069 = %1067.0;
  (%1068, %1069)
}

def @func_5358(%var_5353: Tensor[(100), float64]) -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float64]) {
  %1070 = @func_4350() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1071 = cast(%var_5353, dtype="float64") /* ty=Tensor[(100), float64] */;
  %1072 = reshape(%1071, newshape=[10, 1, 10]) /* ty=Tensor[(10, 1, 10), float64] */;
  %1073 = %1070.0;
  %1074 = @func_2749(%1072) /* ty=Tensor[(10, ?, 10), bool] */;
  (%1073, %1074, %var_5353)
}

def @func_20542() -> (Tensor[(16, 12, 5), float32],) {
  %1075 = @func_13059() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1076 = %1075.0;
  (%1076,)
}

def @func_4221() -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float32]) {
  %1077 = cast(meta[relay.Constant][46] /* ty=Tensor[(100), float64] */, dtype="float64") /* ty=Tensor[(100), float64] */;
  %1078 = reshape(%1077, newshape=[10, 1, 10]) /* ty=Tensor[(10, 1, 10), float64] */;
  %1079 = cast(meta[relay.Constant][46] /* ty=Tensor[(100), float64] */, dtype="float32") /* ty=Tensor[(100), float32] */;
  %1080 = @func_4178() /* ty=Tensor[(16, 12, 5), float32] */;
  %1081 = @func_2749(%1078) /* ty=Tensor[(10, ?, 10), bool] */;
  %1082 = atanh(%1079) /* ty=Tensor[(100), float32] */;
  (%1080, %1081, %1082)
}

def @func_17743(%var_17736: Tensor[(968), float32]) -> (Tensor[(10, ?, 10), float64], Tensor[(11, 8, 11), float32], Tensor[(968), float32]) {
  %1083 = @func_8541() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), float64]) */;
  %1084 = cast(%var_17736, dtype="float32") /* ty=Tensor[(968), float32] */;
  %1085 = reshape(%1084, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), float32] */;
  %1086 = @func_989(%1085) /* ty=(Tensor[(11, 8, 11), float32],) */;
  %1087 = %1083.1;
  %1088 = %1086.0;
  (%1087, %1088, %var_17736)
}

def @func_21300(%var_21296: Tensor[(126), uint32], %var_21297: Tensor[(4), int32]) -> (Tensor[(100), float32], int32, Tensor[(126), uint32], Tensor[(4), int32]) {
  %1089 = cast(%var_21296, dtype="uint32") /* ty=Tensor[(126), uint32] */;
  %1090 = cast(%var_21296, dtype="uint32") /* ty=Tensor[(126), uint32] */;
  %1091 = cast(%var_21297, dtype="int32") /* ty=Tensor[(4), int32] */;
  %1092 = reshape(%1089, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), uint32] */;
  %1093 = reshape(%1090, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), uint32] */;
  %1094 = reshape(%1091, newshape=[4]) /* ty=Tensor[(4), int32] */;
  %1095 = @func_283(%1092, %1093, %1094) /* ty=(Tensor[(1, 4), int32], int32, Tensor[(4), int32], Tensor[(14, 3, 3), float64], Tensor[(1, 4), int32], Tensor[(1, 4), int32]) */;
  %1096 = @func_6998() /* ty=Tensor[(100), float32] */;
  %1097 = %1095.1;
  (%1096, %1097, %var_21296, %var_21297)
}

def @func_12191() -> Tensor[(16, 12, 5), float32] {
  %1098 = @func_9691() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) */;
  %1099 = %1098.1;
  %1100 = cast(%1099, dtype="float32") /* ty=Tensor[(16, 12, 5), float32] */;
  sinh(%1100) /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_9431() -> (Tensor[(16, 12, 5), float64],) {
  %1101 = @func_5967() /* ty=Tensor[(16, 12, 5), float32] */;
  %1102 = cast(%1101, dtype="float64") /* ty=Tensor[(16, 12, 5), float64] */;
  %1103 = sqrt(%1102) /* ty=Tensor[(16, 12, 5), float64] */;
  (%1103,)
}

def @func_11343() -> (Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(100), float32]) {
  %1104 = @func_4629() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */;
  %1105 = @func_7641() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1106 = %1104.1;
  %1107 = %1105.0;
  %1108 = @func_6998() /* ty=Tensor[(100), float32] */;
  (%1106, %1107, %1108)
}

def @func_8774() -> (Tensor[(15, ?, 11), float64], Tensor[(16, 12, 5), float32]) {
  %1109 = @func_8334() /* ty=(Tensor[(15, ?, 11), int16],) */;
  %1110 = %1109.0;
  %1111 = cast(%1110, dtype="float64") /* ty=Tensor[(15, ?, 11), float64] */;
  %1112 = @func_8206() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1113 = atan(%1111) /* ty=Tensor[(15, ?, 11), float64] */;
  %1114 = %1112.0;
  (%1113, %1114)
}

def @func_11267() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  %1115 = @func_7971() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */;
  %1116 = %1115.0;
  %1117 = @func_7946() /* ty=Tensor[(16, 12, 5), float32] */;
  (%1116, %1117)
}

def @func_9957() -> Tensor[(10, ?, 10), float64] {
  %1118 = @func_4279() /* ty=Tensor[(10, ?, 10), bool] */;
  %1119 = cast(%1118, dtype="float64") /* ty=Tensor[(10, ?, 10), float64] */;
  erf(%1119) /* ty=Tensor[(10, ?, 10), float64] */
}

def @func_15493() -> (Tensor[(10, 8, 10), float32], Tensor[(16, 12, 5), float32]) {
  %1120 = @func_7262() /* ty=(Tensor[(10, 8, 10), int32], Tensor[(10, 8, 10), float32]) */;
  %1121 = @func_9464() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %1122 = %1120.1;
  %1123 = %1121.0;
  (%1122, %1123)
}

def @func_4476() -> Tensor[(100), float32] {
  %1124 = @func_4221() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float32]) */;
  %1124.2
}

def @func_11726() -> Tensor[(100), float32] {
  %1125 = @func_10496() /* ty=(Tensor[(720), float64], Tensor[(100), float32]) */;
  %1125.1
}

def @func_12354() -> (Tensor[(100), float32], Tensor[(16, 12, 5), float32]) {
  %1126 = @func_8724() /* ty=(Tensor[(100), float32], Tensor[(16, 12, 5), float32]) */;
  %1127 = @func_9072() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1128 = %1126.0;
  %1129 = %1127.0;
  (%1128, %1129)
}

def @func_18802() -> (Tensor[(16, 12, 5), float32],) {
  %1130 = @func_5522() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1131 = %1130.0;
  (%1131,)
}

def @func_20529() -> (Tensor[(100), float64],) {
  %1132 = @func_13542() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(100), float64]) */;
  %1133 = %1132.2;
  (%1133,)
}

def @func_12459() -> (Tensor[(100), float32],) {
  %1134 = @func_6042() /* ty=(Tensor[(100), float32],) */;
  %1135 = %1134.0;
  (%1135,)
}

def @func_4665(%var_4656: int32, %var_4657: Tensor[(11, 14, 15), int32]) -> Tensor[(11, 14, 15), bool] {
  %1136 = cast(%var_4656, dtype="bool") /* ty=bool */;
  %1137 = cast(%var_4657, dtype="bool") /* ty=Tensor[(11, 14, 15), bool] */;
  less(%1136, %1137) /* ty=Tensor[(11, 14, 15), bool] */
}

def @func_6042() -> (Tensor[(100), float32],) {
  %1138 = @func_5915() /* ty=Tensor[(100), float32] */;
  (%1138,)
}

def @func_4116(%var_4099: int16, %var_4100: Tensor[(2, 11, 1), int16]) -> (Tensor[(2, 11, 1), bool],) {
  %1139 = cast(%var_4099, dtype="bool") /* ty=bool */;
  %1140 = cast(%var_4100, dtype="bool") /* ty=Tensor[(2, 11, 1), bool] */;
  %1141 = less(%1139, %1140) /* ty=Tensor[(2, 11, 1), bool] */;
  (%1141,)
}

def @func_13972() -> (Tensor[(16, 12, 5), float32],) {
  %1142 = @func_13542() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(100), float64]) */;
  %1143 = %1142.1;
  (%1143,)
}

def @func_14392(%var_14378: Tensor[(2, 2), int32], %var_14387: Tensor[(39, 5), float32]) -> (Tensor[(16, 12, 5), float32], Tensor[(1, 4), int32], int32, Tensor[(2, 2), int32], Tensor[(10, 8, 10), int32], Tensor[(4), int32], Tensor[(39, 5), float32]) {
  %1144 = @func_12199() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1145 = cast(5 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %1146 = cast(%var_14378, dtype="int32") /* ty=Tensor[(2, 2), int32] */;
  %1147 = reshape(%1145, newshape=[]) /* ty=int32 */;
  %1148 = reshape(%1146, newshape=[1, 4]) /* ty=Tensor[(1, 4), int32] */;
  %1149 = @func_7262() /* ty=(Tensor[(10, 8, 10), int32], Tensor[(10, 8, 10), float32]) */;
  %1150 = cast(%var_14387, dtype="float32") /* ty=Tensor[(39, 5), float32] */;
  %1151 = reshape(%1150, newshape=[195]) /* ty=Tensor[(195), float32] */;
  %1152 = @func_7105(%1151) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(4), int32], Tensor[(195), float32], Tensor[(4), int32], Tensor[(16, 12, 5), float32]) */;
  %1153 = %1144.0;
  %1154 = @func_196(%1147, %1148) /* ty=Tensor[(1, 4), int32] */;
  %1155 = %1149.0;
  %1156 = %1152.1;
  (%1153, %1154, 5 /* ty=int32 */, %var_14378, %1155, %1156, %var_14387)
}

def @func_12673() -> (Tensor[(16, 12, 5), float32],) {
  %1157 = @func_5522() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1158 = %1157.0;
  (%1158,)
}

def @func_16532() -> (Tensor[(100), float32],) {
  %1159 = @func_5915() /* ty=Tensor[(100), float32] */;
  (%1159,)
}

def @func_16835() -> (Tensor[(968), float64], Tensor[(11, 8, 11), float32]) {
  %1160 = @func_13793() /* ty=(Tensor[(968), float32],) */;
  %1161 = %1160.0;
  %1162 = cast(%1161, dtype="float64") /* ty=Tensor[(968), float64] */;
  %1163 = tan(%1162) /* ty=Tensor[(968), float64] */;
  %1164 = cast(%1163, dtype="float32") /* ty=Tensor[(968), float32] */;
  %1165 = reshape(%1164, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), float32] */;
  %1166 = @func_989(%1165) /* ty=(Tensor[(11, 8, 11), float32],) */;
  %1167 = %1166.0;
  (%1163, %1167)
}

def @func_6985(%var_6932: Tensor[(11, 14, 13), float32], %var_6978: Tensor[(11, 14, 13), float32]) -> (Tensor[(11, 14, 13), float32], Tensor[(10, ?, 10), bool], Tensor[(11, 14, 13), uint64]) {
  %1168 = cast(%var_6932, dtype="float32") /* ty=Tensor[(11, 14, 13), float32] */;
  %1169 = cast(%var_6932, dtype="float32") /* ty=Tensor[(11, 14, 13), float32] */;
  %1170 = exp(%1169) /* ty=Tensor[(11, 14, 13), float32] */;
  %1171 = cast(%var_6978, dtype="uint64") /* ty=Tensor[(11, 14, 13), uint64] */;
  %1172 = shape_of(%1170, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1173 = cast(%1170, dtype="uint64") /* ty=Tensor[(11, 14, 13), uint64] */;
  %1174 = dyn.reshape(%1171, %1172, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1175 = acosh(%1168) /* ty=Tensor[(11, 14, 13), float32] */;
  %1176 = @func_5468() /* ty=Tensor[(10, ?, 10), bool] */;
  %1177 = left_shift(%1173, %1174) /* ty=Tensor[(11, 14, 13), uint64] */;
  (%1175, %1176, %1177)
}

def @func_7550(%var_7544: Tensor[(468), uint64]) -> (Tensor[(16, 12, 5), float32], Tensor[(9, 13, 4), uint16], Tensor[(468), uint64], Tensor[(16, 12, 5), float32]) {
  %1178 = cast(%var_7544, dtype="uint64") /* ty=Tensor[(468), uint64] */;
  %1179 = reshape(%1178, newshape=[9, 13, 4]) /* ty=Tensor[(9, 13, 4), uint64] */;
  %1180 = @func_4870(%1179) /* ty=(Tensor[(9, 13, 4), uint16], Tensor[(1, 4), int32], int32, Tensor[(4), int32], Tensor[(9, 13, 4), float64], Tensor[(9, 13, 4), float64], Tensor[(4), int32], Tensor[(7, 14), uint16]) */;
  %1181 = @func_5780() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(12, 10, 6), float64], Tensor[(720), float64], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %1182 = @func_4405() /* ty=Tensor[(16, 12, 5), float32] */;
  %1183 = %1180.0;
  %1184 = %1181.1;
  (%1182, %1183, %var_7544, %1184)
}

def @func_12596(%var_12589: Tensor[(260), uint64], %var_12590: Tensor[(39, 5), float32]) -> (Tensor[(16, 12, 5), float32], Tensor[(100), float32], Tensor[(4), int32], Tensor[(260), uint64], Tensor[(39, 5), float32]) {
  %1185 = @func_11963() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1186 = cast(%var_12589, dtype="uint64") /* ty=Tensor[(260), uint64] */;
  %1187 = cast(%var_12590, dtype="float32") /* ty=Tensor[(39, 5), float32] */;
  %1188 = reshape(%1186, newshape=[260]) /* ty=Tensor[(260), uint64] */;
  %1189 = reshape(%1187, newshape=[195]) /* ty=Tensor[(195), float32] */;
  %1190 = @func_7465(%1188, %1189) /* ty=(Tensor[(13, 10, 2), bool], Tensor[(260), uint64], Tensor[(100), float32], Tensor[(10, ?, 10), bool], Tensor[(10, ?, 10), float64], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(4), int32], Tensor[(195), float32]) */;
  %1191 = %1185.0;
  %1192 = @func_11726() /* ty=Tensor[(100), float32] */;
  %1193 = %1190.7;
  (%1191, %1192, %1193, %var_12589, %var_12590)
}

def @func_8826(%var_8819: int32, %var_8820: Tensor[(4), int32]) -> (Tensor[(100), float32], Tensor[(100), float32], int32, Tensor[(4), int32]) {
  %1194 = @func_5265() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(100), float32]) */;
  %1195 = cast(%var_8819, dtype="int32") /* ty=int32 */;
  %1196 = cast(%var_8820, dtype="int32") /* ty=Tensor[(4), int32] */;
  %1197 = reshape(%1195, newshape=[]) /* ty=int32 */;
  %1198 = reshape(%1196, newshape=[1, 4]) /* ty=Tensor[(1, 4), int32] */;
  %1199 = @func_6552(%1197, %1198) /* ty=(Tensor[(100), float32], Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(1, 4), int32], int32, Tensor[(1, 4), int32], Tensor[(16, 12, 5), float32]) */;
  %1200 = %1194.1;
  %1201 = %1199.0;
  (%1200, %1201, %var_8819, %var_8820)
}

def @func_4649() -> Tensor[(16, 12, 5), float32] {
  %1202 = @func_4444() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %1202.1
}

def @func_17067() -> (Tensor[(16, 12, 5), float32], Tensor[(10, 8, 10), float32]) {
  %1203 = @func_13763() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %1204 = @func_16868() /* ty=Tensor[(10, 8, 10), float32] */;
  %1205 = cast(%1204, dtype="float32") /* ty=Tensor[(10, 8, 10), float32] */;
  %1206 = %1203.0;
  %1207 = atan(%1205) /* ty=Tensor[(10, 8, 10), float32] */;
  (%1206, %1207)
}

def @func_2749(%var_2737: Tensor[(10, 1, 10), float64]) -> Tensor[(10, ?, 10), bool] {
  %1208 = cast(%var_2737, dtype="float64") /* ty=Tensor[(10, 1, 10), float64] */;
  %1209 = log2(%1208) /* ty=Tensor[(10, 1, 10), float64] */;
  %1210 = cast(%1209, dtype="bool") /* ty=Tensor[(10, 1, 10), bool] */;
  %1211 = shape_of(%var_2737, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1212 = cast(%var_2737, dtype="bool") /* ty=Tensor[(10, 1, 10), bool] */;
  %1213 = dyn.reshape(%1210, %1211, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%1212, %1213) /* ty=Tensor[(10, ?, 10), bool] */
}

def @func_12888() -> Tensor[(100), float32] {
  @func_4476() /* ty=Tensor[(100), float32] */
}

def @func_8315(%var_8313: Tensor[(468), uint64]) -> (Tensor[(10, ?, 10), bool], Tensor[(4), int32], Tensor[(468), uint64]) {
  %1214 = @func_4960() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(12, 10, 6), float64], Tensor[(720), float64]) */;
  %1215 = cast(%var_8313, dtype="uint64") /* ty=Tensor[(468), uint64] */;
  %1216 = reshape(%1215, newshape=[9, 13, 4]) /* ty=Tensor[(9, 13, 4), uint64] */;
  %1217 = @func_4870(%1216) /* ty=(Tensor[(9, 13, 4), uint16], Tensor[(1, 4), int32], int32, Tensor[(4), int32], Tensor[(9, 13, 4), float64], Tensor[(9, 13, 4), float64], Tensor[(4), int32], Tensor[(7, 14), uint16]) */;
  %1218 = %1214.0;
  %1219 = %1217.6;
  (%1218, %1219, %var_8313)
}

def @func_13854() -> Tensor[(16, 12, 5), float32] {
  @func_4649() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_12109() -> (Tensor[(16, 12, 5), float32], Tensor[(4), int32], Tensor[(968), float32]) {
  %1220 = cast(meta[relay.Constant][47] /* ty=Tensor[(968), float32] */, dtype="float32") /* ty=Tensor[(968), float32] */;
  %1221 = reshape(%1220, newshape=[1, 968]) /* ty=Tensor[(1, 968), float32] */;
  %1222 = @func_8471(%1221) /* ty=(Tensor[(10, ?, 10), bool], Tensor[(9, 2, 14), float32], Tensor[(195), float32], Tensor[(4), int32], Tensor[(98, 1), uint16], Tensor[(1, 968), float32]) */;
  %1223 = @func_6801() /* ty=Tensor[(16, 12, 5), float32] */;
  %1224 = %1222.3;
  (%1223, %1224, meta[relay.Constant][47] /* ty=Tensor[(968), float32] */)
}

def @func_17398() -> (Tensor[(16, 12, 5), float32],) {
  %1225 = @func_6291() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1226 = %1225.0;
  (%1226,)
}

def @func_8471(%var_8460: Tensor[(1, 968), float32]) -> (Tensor[(10, ?, 10), bool], Tensor[(9, 2, 14), float32], Tensor[(195), float32], Tensor[(4), int32], Tensor[(98, 1), uint16], Tensor[(1, 968), float32]) {
  %1227 = cast(meta[relay.Constant][48] /* ty=Tensor[(195), float32] */, dtype="float32") /* ty=Tensor[(195), float32] */;
  %1228 = cast(meta[relay.Constant][49] /* ty=Tensor[(4), int32] */, dtype="int32") /* ty=Tensor[(4), int32] */;
  %1229 = cast(meta[relay.Constant][50] /* ty=Tensor[(98, 1), uint16] */, dtype="uint16") /* ty=Tensor[(98, 1), uint16] */;
  %1230 = cast(%var_8460, dtype="float32") /* ty=Tensor[(1, 968), float32] */;
  %1231 = reshape(%1227, newshape=[195]) /* ty=Tensor[(195), float32] */;
  %1232 = reshape(%1228, newshape=[1, 4]) /* ty=Tensor[(1, 4), int32] */;
  %1233 = reshape(%1229, newshape=[98]) /* ty=Tensor[(98), uint16] */;
  %1234 = reshape(%1230, newshape=[968]) /* ty=Tensor[(968), float32] */;
  %1235 = @func_4757(%1231, %1232, %1233, %1234) /* ty=(Tensor[(195), float32], Tensor[(1, 4), int32], Tensor[(98), uint32], Tensor[(10, ?, 10), bool], Tensor[(9, 2, 14), float32], Tensor[(6, 42), float32], Tensor[(100), float32], Tensor[(11, 8, 11), float32], Tensor[(968), float32], Tensor[(10, ?, 10), bool]) */;
  %1236 = @func_6137() /* ty=Tensor[(10, ?, 10), bool] */;
  %1237 = %1235.4;
  (%1236, %1237, meta[relay.Constant][48] /* ty=Tensor[(195), float32] */, meta[relay.Constant][49] /* ty=Tensor[(4), int32] */, meta[relay.Constant][50] /* ty=Tensor[(98, 1), uint16] */, %var_8460)
}

def @func_19399(%var_19316: Tensor[(195), float32], %var_19319: Tensor[(968), float32]) -> (Tensor[(10, ?, 10), bool], Tensor[(98), uint32], Tensor[(195), float32], Tensor[(4), int32], Tensor[(98), uint16], Tensor[(968), float32], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(260), uint64], Tensor[(260), uint64]) {
  %1238 = cast(%var_19316, dtype="float32") /* ty=Tensor[(195), float32] */;
  %1239 = cast(meta[relay.Constant][51] /* ty=Tensor[(4), int32] */, dtype="int32") /* ty=Tensor[(4), int32] */;
  %1240 = cast(meta[relay.Constant][52] /* ty=Tensor[(98), uint16] */, dtype="uint16") /* ty=Tensor[(98), uint16] */;
  %1241 = cast(%var_19319, dtype="float32") /* ty=Tensor[(968), float32] */;
  %1242 = reshape(%1238, newshape=[195]) /* ty=Tensor[(195), float32] */;
  %1243 = reshape(%1239, newshape=[1, 4]) /* ty=Tensor[(1, 4), int32] */;
  %1244 = reshape(%1240, newshape=[98]) /* ty=Tensor[(98), uint16] */;
  %1245 = reshape(%1241, newshape=[968]) /* ty=Tensor[(968), float32] */;
  %1246 = @func_4757(%1242, %1243, %1244, %1245) /* ty=(Tensor[(195), float32], Tensor[(1, 4), int32], Tensor[(98), uint32], Tensor[(10, ?, 10), bool], Tensor[(9, 2, 14), float32], Tensor[(6, 42), float32], Tensor[(100), float32], Tensor[(11, 8, 11), float32], Tensor[(968), float32], Tensor[(10, ?, 10), bool]) */;
  %1247 = @func_4629() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */;
  %1248 = @func_12813() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) */;
  %1249 = cast(meta[relay.Constant][53] /* ty=Tensor[(260), uint64] */, dtype="uint64") /* ty=Tensor[(260), uint64] */;
  %1250 = cast(%var_19316, dtype="float32") /* ty=Tensor[(195), float32] */;
  %1251 = reshape(%1249, newshape=[260]) /* ty=Tensor[(260), uint64] */;
  %1252 = reshape(%1250, newshape=[195]) /* ty=Tensor[(195), float32] */;
  %1253 = @func_7465(%1251, %1252) /* ty=(Tensor[(13, 10, 2), bool], Tensor[(260), uint64], Tensor[(100), float32], Tensor[(10, ?, 10), bool], Tensor[(10, ?, 10), float64], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(4), int32], Tensor[(195), float32]) */;
  %1254 = @func_13827() /* ty=Tensor[(10, ?, 10), bool] */;
  %1255 = %1246.2;
  %1256 = %1247.0;
  %1257 = %1248.0;
  %1258 = %1253.1;
  (%1254, %1255, %var_19316, meta[relay.Constant][51] /* ty=Tensor[(4), int32] */, meta[relay.Constant][52] /* ty=Tensor[(98), uint16] */, %var_19319, %1256, %1257, %1258, meta[relay.Constant][53] /* ty=Tensor[(260), uint64] */)
}

def @func_20353() -> Tensor[(16, 12, 5), float32] {
  %1259 = @func_19253() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1259.0
}

def @func_12813() -> (Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) {
  %1260 = @func_9750() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */;
  %1261 = @func_5660() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1262 = %1260.1;
  %1263 = %1261.0;
  (%1262, %1263)
}

def @func_19435(%var_19409: Tensor[(5, 5, 10), uint8], %var_19410: Tensor[(5, 5, 10), uint8]) -> (Tensor[(5, 5, 10), uint8], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  %1264 = cast(%var_19410, dtype="uint8") /* ty=Tensor[(5, 5, 10), uint8] */;
  %1265 = shape_of(%var_19409, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1266 = cast(%var_19409, dtype="uint8") /* ty=Tensor[(5, 5, 10), uint8] */;
  %1267 = dyn.reshape(%1264, %1265, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1268 = @func_8206() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1269 = multiply(%1266, %1267) /* ty=Tensor[(5, 5, 10), uint8] */;
  %1270 = @func_13837() /* ty=Tensor[(16, 12, 5), float32] */;
  %1271 = %1268.0;
  (%1269, %1270, %1271)
}

def @func_17662(%var_17637: Tensor[(195), float32]) -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(195), float32], Tensor[(25, 4), float64]) {
  %1272 = @func_7641() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1273 = @func_13958() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %1274 = cast(%var_17637, dtype="float32") /* ty=Tensor[(195), float32] */;
  %1275 = cast(meta[relay.Constant][54] /* ty=Tensor[(25, 4), float64] */, dtype="float64") /* ty=Tensor[(25, 4), float64] */;
  %1276 = reshape(%1274, newshape=[39, 5]) /* ty=Tensor[(39, 5), float32] */;
  %1277 = reshape(%1275, newshape=[1, 100]) /* ty=Tensor[(1, 100), float64] */;
  %1278 = @func_6399(%1276, %1277) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(11, 8, 11), float32], Tensor[(39, 5), float32], Tensor[(4), int32], Tensor[(98), uint16], Tensor[(1, 968), float32], Tensor[(10, ?, 10), bool], Tensor[(1, 100), float64]) */;
  %1279 = %1272.0;
  %1280 = %1273.0;
  %1281 = %1278.7;
  (%1279, %1280, %1281, %var_17637, meta[relay.Constant][54] /* ty=Tensor[(25, 4), float64] */)
}

def @func_14789(%var_14782: Tensor[(14, 14, 12), int16]) -> (Tensor[(14, 14, 12), int16],) {
  %1282 = cast(meta[relay.Constant][55] /* ty=Tensor[(14, 14, 12), int16] */, dtype="int16") /* ty=Tensor[(14, 14, 12), int16] */;
  %1283 = shape_of(%var_14782, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1284 = cast(%var_14782, dtype="int16") /* ty=Tensor[(14, 14, 12), int16] */;
  %1285 = dyn.reshape(%1282, %1283, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1286 = multiply(%1284, %1285) /* ty=Tensor[(14, 14, 12), int16] */;
  (%1286,)
}

def @func_18727() -> Tensor[(16, 12, 5), float32] {
  @func_4649() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_19558() -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) {
  %1287 = @func_15188() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1288 = %1287.0;
  %1289 = @func_5173() /* ty=Tensor[(10, ?, 10), bool] */;
  (%1288, %1289)
}

def @func_16868() -> Tensor[(10, 8, 10), float32] {
  %1290 = @func_7262() /* ty=(Tensor[(10, 8, 10), int32], Tensor[(10, 8, 10), float32]) */;
  %1290.1
}

def @func_2840(%var_2834: Tensor[(13, 10, 2), uint64], %var_2835: Tensor[(13, 10, 2), uint64]) -> (Tensor[(13, 10, 2), bool],) {
  %1291 = cast(%var_2835, dtype="bool") /* ty=Tensor[(13, 10, 2), bool] */;
  %1292 = shape_of(%var_2834, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1293 = cast(%var_2834, dtype="bool") /* ty=Tensor[(13, 10, 2), bool] */;
  %1294 = dyn.reshape(%1291, %1292, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1295 = greater_equal(%1293, %1294) /* ty=Tensor[(13, 10, 2), bool] */;
  (%1295,)
}

def @func_10872(%var_10851: Tensor[(4), int32]) -> (Tensor[(15, ?, 11), int16], Tensor[(4), int32], Tensor[(126), uint32], Tensor[(4), int32], Tensor[(10, ?, 10), bool], Tensor[(195), float32], Tensor[(100), float64]) {
  %1296 = @func_8334() /* ty=(Tensor[(15, ?, 11), int16],) */;
  %1297 = cast(meta[relay.Constant][56] /* ty=Tensor[(126), uint32] */, dtype="uint32") /* ty=Tensor[(126), uint32] */;
  %1298 = cast(meta[relay.Constant][56] /* ty=Tensor[(126), uint32] */, dtype="uint32") /* ty=Tensor[(126), uint32] */;
  %1299 = cast(%var_10851, dtype="int32") /* ty=Tensor[(4), int32] */;
  %1300 = reshape(%1297, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), uint32] */;
  %1301 = reshape(%1298, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), uint32] */;
  %1302 = reshape(%1299, newshape=[4]) /* ty=Tensor[(4), int32] */;
  %1303 = @func_283(%1300, %1301, %1302) /* ty=(Tensor[(1, 4), int32], int32, Tensor[(4), int32], Tensor[(14, 3, 3), float64], Tensor[(1, 4), int32], Tensor[(1, 4), int32]) */;
  %1304 = cast(meta[relay.Constant][57] /* ty=Tensor[(195), float32] */, dtype="float32") /* ty=Tensor[(195), float32] */;
  %1305 = cast(meta[relay.Constant][58] /* ty=Tensor[(100), float64] */, dtype="float64") /* ty=Tensor[(100), float64] */;
  %1306 = reshape(%1304, newshape=[39, 5]) /* ty=Tensor[(39, 5), float32] */;
  %1307 = reshape(%1305, newshape=[1, 100]) /* ty=Tensor[(1, 100), float64] */;
  %1308 = @func_6399(%1306, %1307) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(11, 8, 11), float32], Tensor[(39, 5), float32], Tensor[(4), int32], Tensor[(98), uint16], Tensor[(1, 968), float32], Tensor[(10, ?, 10), bool], Tensor[(1, 100), float64]) */;
  %1309 = %1296.0;
  %1310 = %1303.2;
  %1311 = %1308.7;
  (%1309, %1310, meta[relay.Constant][56] /* ty=Tensor[(126), uint32] */, %var_10851, %1311, meta[relay.Constant][57] /* ty=Tensor[(195), float32] */, meta[relay.Constant][58] /* ty=Tensor[(100), float64] */)
}

def @func_6998() -> Tensor[(100), float32] {
  @func_4476() /* ty=Tensor[(100), float32] */
}

def @func_18581(%var_18577: Tensor[(468), uint64]) -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), float32], Tensor[(16, 12, 5), float32], Tensor[(13, 14, 8), float32], Tensor[(468), uint64]) {
  %1312 = @func_15173() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1313 = cast(%var_18577, dtype="uint64") /* ty=Tensor[(468), uint64] */;
  %1314 = reshape(%1313, newshape=[234, 2]) /* ty=Tensor[(234, 2), uint64] */;
  %1315 = @func_13013(%1314) /* ty=(Tensor[(13, 14, 8), float32], Tensor[(13, 14, 8), float64], int32, Tensor[(234, 2), uint64]) */;
  %1316 = @func_6801() /* ty=Tensor[(16, 12, 5), float32] */;
  %1317 = @func_16095() /* ty=Tensor[(10, ?, 10), float32] */;
  %1318 = %1312.0;
  %1319 = %1315.0;
  (%1316, %1317, %1318, %1319, %var_18577)
}

def @func_6552(%var_6543: int32, %var_6544: Tensor[(1, 4), int32]) -> (Tensor[(100), float32], Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(1, 4), int32], int32, Tensor[(1, 4), int32], Tensor[(16, 12, 5), float32]) {
  %1320 = @func_6042() /* ty=(Tensor[(100), float32],) */;
  %1321 = @func_5721() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(15, 7, 3), float64], Tensor[(315), float64]) */;
  %1322 = cast(%var_6543, dtype="int32") /* ty=int32 */;
  %1323 = cast(%var_6544, dtype="int32") /* ty=Tensor[(1, 4), int32] */;
  %1324 = reshape(%1322, newshape=[]) /* ty=int32 */;
  %1325 = reshape(%1323, newshape=[1, 4]) /* ty=Tensor[(1, 4), int32] */;
  %1326 = @func_6291() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1327 = %1320.0;
  %1328 = @func_4279() /* ty=Tensor[(10, ?, 10), bool] */;
  %1329 = @func_6279() /* ty=Tensor[(16, 12, 5), float32] */;
  %1330 = %1321.0;
  %1331 = @func_196(%1324, %1325) /* ty=Tensor[(1, 4), int32] */;
  %1332 = %1326.0;
  (%1327, %1328, %1329, %1330, %1331, %var_6543, %var_6544, %1332)
}

def @func_7716() -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), int8]) {
  %1333 = @func_4350() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1334 = @func_5148() /* ty=(Tensor[(10, ?, 10), bool],) */;
  %1335 = %1334.0;
  %1336 = @func_4279() /* ty=Tensor[(10, ?, 10), bool] */;
  %1337 = cast(%1336, dtype="int8") /* ty=Tensor[(10, ?, 10), int8] */;
  %1338 = shape_of(%1335, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1339 = cast(%1335, dtype="int8") /* ty=Tensor[(10, ?, 10), int8] */;
  %1340 = dyn.reshape(%1337, %1338, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1341 = %1333.0;
  %1342 = subtract(%1339, %1340) /* ty=Tensor[(10, ?, 10), int8] */;
  (%1341, %1342)
}

def @func_13497(%var_13492: Tensor[(720), float64]) -> (Tensor[(100), float64], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(12, 10, 6), float64], Tensor[(720), float64], Tensor[(15, ?, 11), float32]) {
  %1343 = @func_7618() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float64]) */;
  %1344 = @func_11963() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1345 = @func_12813() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) */;
  %1346 = @func_7019() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %1347 = cast(%var_13492, dtype="float64") /* ty=Tensor[(720), float64] */;
  %1348 = reshape(%1347, newshape=[12, 10, 6]) /* ty=Tensor[(12, 10, 6), float64] */;
  %1349 = @func_745(%1348) /* ty=(Tensor[(12, 10, 6), float64],) */;
  %1350 = @func_8774() /* ty=(Tensor[(15, ?, 11), float64], Tensor[(16, 12, 5), float32]) */;
  %1351 = %1350.0;
  %1352 = cast(%1351, dtype="float32") /* ty=Tensor[(15, ?, 11), float32] */;
  %1353 = %1343.2;
  %1354 = %1344.0;
  %1355 = %1345.1;
  %1356 = %1346.0;
  %1357 = %1349.0;
  %1358 = tan(%1352) /* ty=Tensor[(15, ?, 11), float32] */;
  (%1353, %1354, %1355, %1356, %1357, %var_13492, %1358)
}

def @func_20679() -> Tensor[(10, ?, 10), bool] {
  @func_5507() /* ty=Tensor[(10, ?, 10), bool] */
}

def @func_17870() -> (Tensor[(16, 12, 5), float32],) {
  %1359 = @func_13837() /* ty=Tensor[(16, 12, 5), float32] */;
  (%1359,)
}

def @func_19253() -> (Tensor[(16, 12, 5), float32],) {
  %1360 = @func_4405() /* ty=Tensor[(16, 12, 5), float32] */;
  (%1360,)
}

def @func_14126() -> (Tensor[(16, 12, 5), float32],) {
  %1361 = @func_9137() /* ty=(Tensor[(100), float32], Tensor[(16, 12, 5), float32], Tensor[(100), float32], Tensor[(16, 12, 5), float32]) */;
  %1362 = %1361.1;
  (%1362,)
}

def @func_5173() -> Tensor[(10, ?, 10), bool] {
  %1363 = @func_5148() /* ty=(Tensor[(10, ?, 10), bool],) */;
  %1363.0
}

def @func_6675() -> (Tensor[(720), float64], Tensor[(16, 12, 5), float32]) {
  %1364 = @func_6485() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(720), float64], Tensor[(10, ?, 10), bool]) */;
  %1365 = %1364.1;
  %1366 = @func_4405() /* ty=Tensor[(16, 12, 5), float32] */;
  (%1365, %1366)
}

def @func_8141(%var_8063: Tensor[(300), bool], %var_8122: Tensor[(10, 16, 10), bool]) -> (Tensor[(16, 12, 5), float32], Tensor[(10, 3, 10), bool], Tensor[(300), bool], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(10, 16, 10), uint8], Tensor[(10, 16, 10), bool], Tensor[(16, 12, 5), float32]) {
  %1367 = cast(%var_8063, dtype="bool") /* ty=Tensor[(300), bool] */;
  %1368 = reshape(%1367, newshape=[10, 3, 10]) /* ty=Tensor[(10, 3, 10), bool] */;
  %1369 = @func_7855(%1368) /* ty=(Tensor[(10, 3, 10), bool], Tensor[(16, 12, 5), float32]) */;
  %1370 = @func_7716() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), int8]) */;
  %1371 = @func_5468() /* ty=Tensor[(10, ?, 10), bool] */;
  %1372 = cast(%1371, dtype="float32") /* ty=Tensor[(10, ?, 10), float32] */;
  %1373 = log(%1372) /* ty=Tensor[(10, ?, 10), float32] */;
  %1374 = cast(%1371, dtype="bool") /* ty=Tensor[(10, ?, 10), bool] */;
  %1375 = shape_of(%1373, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1376 = cast(%1373, dtype="bool") /* ty=Tensor[(10, ?, 10), bool] */;
  %1377 = dyn.reshape(%1374, %1375, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1378 = greater_equal(%1376, %1377) /* ty=Tensor[(10, ?, 10), bool] */;
  %1379 = cast(%1378, dtype="uint8") /* ty=Tensor[(10, ?, 10), uint8] */;
  %1380 = cast(%var_8122, dtype="uint8") /* ty=Tensor[(10, 16, 10), uint8] */;
  %1381 = @func_5468() /* ty=Tensor[(10, ?, 10), bool] */;
  %1382 = cast(%var_8122, dtype="bool") /* ty=Tensor[(10, 16, 10), bool] */;
  %1383 = cast(%1381, dtype="bool") /* ty=Tensor[(10, ?, 10), bool] */;
  %1384 = @func_7618() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float64]) */;
  %1385 = @func_7492() /* ty=Tensor[(16, 12, 5), float32] */;
  %1386 = %1369.0;
  %1387 = %1370.0;
  %1388 = @func_5173() /* ty=Tensor[(10, ?, 10), bool] */;
  %1389 = add(%1379, %1380) /* ty=Tensor[(10, 16, 10), uint8] */;
  %1390 = less_equal(%1382, %1383) /* ty=Tensor[(10, 16, 10), bool] */;
  %1391 = %1384.0;
  (%1385, %1386, %var_8063, %1387, %1388, %1389, %1390, %1391)
}

def @func_9350(%var_9327: Tensor[(13, 15), float32]) -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(13, 15), float32], Tensor[(4), int32], Tensor[(98), uint16], Tensor[(968), float32], Tensor[(15, 7, 3), float64]) {
  %1392 = cast(%var_9327, dtype="float32") /* ty=Tensor[(13, 15), float32] */;
  %1393 = cast(meta[relay.Constant][59] /* ty=Tensor[(4), int32] */, dtype="int32") /* ty=Tensor[(4), int32] */;
  %1394 = cast(meta[relay.Constant][60] /* ty=Tensor[(98), uint16] */, dtype="uint16") /* ty=Tensor[(98), uint16] */;
  %1395 = cast(meta[relay.Constant][61] /* ty=Tensor[(968), float32] */, dtype="float32") /* ty=Tensor[(968), float32] */;
  %1396 = reshape(%1392, newshape=[195]) /* ty=Tensor[(195), float32] */;
  %1397 = reshape(%1393, newshape=[1, 4]) /* ty=Tensor[(1, 4), int32] */;
  %1398 = reshape(%1394, newshape=[98]) /* ty=Tensor[(98), uint16] */;
  %1399 = reshape(%1395, newshape=[968]) /* ty=Tensor[(968), float32] */;
  %1400 = @func_4757(%1396, %1397, %1398, %1399) /* ty=(Tensor[(195), float32], Tensor[(1, 4), int32], Tensor[(98), uint32], Tensor[(10, ?, 10), bool], Tensor[(9, 2, 14), float32], Tensor[(6, 42), float32], Tensor[(100), float32], Tensor[(11, 8, 11), float32], Tensor[(968), float32], Tensor[(10, ?, 10), bool]) */;
  %1401 = @func_5721() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(15, 7, 3), float64], Tensor[(315), float64]) */;
  %1402 = @func_7946() /* ty=Tensor[(16, 12, 5), float32] */;
  %1403 = %1400.9;
  %1404 = %1401.1;
  (%1402, %1403, %var_9327, meta[relay.Constant][59] /* ty=Tensor[(4), int32] */, meta[relay.Constant][60] /* ty=Tensor[(98), uint16] */, meta[relay.Constant][61] /* ty=Tensor[(968), float32] */, %1404)
}

def @func_10211() -> Tensor[(10, ?, 10), bool] {
  %1405 = @func_5148() /* ty=(Tensor[(10, ?, 10), bool],) */;
  %1405.0
}

def @func_16270(%var_16251: Tensor[(4), int32]) -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(4), int32], Tensor[(10, ?, 10), bool], Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) {
  %1406 = @func_11267() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %1407 = @func_14954() /* ty=Tensor[(10, ?, 10), bool] */;
  %1408 = cast(%var_16251, dtype="int32") /* ty=Tensor[(4), int32] */;
  %1409 = reshape(%1408, newshape=[4]) /* ty=Tensor[(4), int32] */;
  %1410 = @func_11749(%1409) /* ty=(Tensor[(100), float32], Tensor[(100), float64], Tensor[(4), int32]) */;
  %1411 = %1410.0;
  %1412 = cast(%1411, dtype="bool") /* ty=Tensor[(100), bool] */;
  %1413 = shape_of(%1407, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1414 = cast(%1407, dtype="bool") /* ty=Tensor[(10, ?, 10), bool] */;
  %1415 = dyn.reshape(%1412, %1413, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1416 = @func_16171() /* ty=(Tensor[(10, 8, 10), float64], Tensor[(16, 12, 5), float32], Tensor[(10, 8, 10), bool]) */;
  %1417 = @func_14353() /* ty=Tensor[(16, 12, 5), float32] */;
  %1418 = %1406.1;
  %1419 = logical_or(%1414, %1415) /* ty=Tensor[(10, ?, 10), bool] */;
  %1420 = @func_13831() /* ty=Tensor[(10, ?, 10), bool] */;
  %1421 = %1416.1;
  (%1417, %1418, %var_16251, %1419, %1420, %1421)
}

def @func_5021() -> (Tensor[(16, 12, 5), float32],) {
  %1422 = @func_4649() /* ty=Tensor[(16, 12, 5), float32] */;
  (%1422,)
}

def @func_12199() -> (Tensor[(16, 12, 5), float32],) {
  %1423 = @func_4629() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */;
  %1424 = %1423.0;
  (%1424,)
}

def @func_4870(%var_4794: Tensor[(9, 13, 4), uint64]) -> (Tensor[(9, 13, 4), uint16], Tensor[(1, 4), int32], int32, Tensor[(4), int32], Tensor[(9, 13, 4), float64], Tensor[(9, 13, 4), float64], Tensor[(4), int32], Tensor[(7, 14), uint16]) {
  %1425 = cast(%var_4794, dtype="uint16") /* ty=Tensor[(9, 13, 4), uint16] */;
  %1426 = shape_of(meta[relay.Constant][62] /* ty=Tensor[(9, 13, 4), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1427 = cast(meta[relay.Constant][62] /* ty=Tensor[(9, 13, 4), uint64] */, dtype="uint16") /* ty=Tensor[(9, 13, 4), uint16] */;
  %1428 = dyn.reshape(%1425, %1426, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1429 = cast(-5 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %1430 = cast(meta[relay.Constant][63] /* ty=Tensor[(4), int32] */, dtype="int32") /* ty=Tensor[(4), int32] */;
  %1431 = reshape(%1429, newshape=[]) /* ty=int32 */;
  %1432 = reshape(%1430, newshape=[1, 4]) /* ty=Tensor[(1, 4), int32] */;
  %1433 = cast(meta[relay.Constant][62] /* ty=Tensor[(9, 13, 4), uint64] */, dtype="uint64") /* ty=Tensor[(9, 13, 4), uint64] */;
  %1434 = shape_of(%var_4794, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1435 = cast(%var_4794, dtype="uint64") /* ty=Tensor[(9, 13, 4), uint64] */;
  %1436 = dyn.reshape(%1433, %1434, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1437 = right_shift(%1435, %1436) /* ty=Tensor[(9, 13, 4), uint64] */;
  %1438 = cast(%1437, dtype="float64") /* ty=Tensor[(9, 13, 4), float64] */;
  %1439 = cast(%1437, dtype="float64") /* ty=Tensor[(9, 13, 4), float64] */;
  %1440 = cast(-5 /* ty=int32 */, dtype="uint16") /* ty=uint16 */;
  %1441 = cast(meta[relay.Constant][64] /* ty=Tensor[(7, 14), uint16] */, dtype="uint16") /* ty=Tensor[(7, 14), uint16] */;
  %1442 = cast(meta[relay.Constant][63] /* ty=Tensor[(4), int32] */, dtype="int32") /* ty=Tensor[(4), int32] */;
  %1443 = reshape(%1440, newshape=[]) /* ty=uint16 */;
  %1444 = reshape(%1441, newshape=[14, 7, 1]) /* ty=Tensor[(14, 7, 1), uint16] */;
  %1445 = reshape(%1442, newshape=[4]) /* ty=Tensor[(4), int32] */;
  %1446 = @func_377(%1443, %1444, %1445) /* ty=(Tensor[(14, 7, 1), uint16], Tensor[(1, 4), int32], Tensor[(4), int32]) */;
  %1447 = maximum(%1427, %1428) /* ty=Tensor[(9, 13, 4), uint16] */;
  %1448 = @func_196(%1431, %1432) /* ty=Tensor[(1, 4), int32] */;
  %1449 = acosh(%1438) /* ty=Tensor[(9, 13, 4), float64] */;
  %1450 = exp(%1439) /* ty=Tensor[(9, 13, 4), float64] */;
  %1451 = %1446.2;
  (%1447, %1448, -5 /* ty=int32 */, meta[relay.Constant][63] /* ty=Tensor[(4), int32] */, %1449, %1450, %1451, meta[relay.Constant][64] /* ty=Tensor[(7, 14), uint16] */)
}

def @func_20003() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  %1452 = @func_7492() /* ty=Tensor[(16, 12, 5), float32] */;
  %1453 = @func_15012() /* ty=Tensor[(16, 12, 5), float32] */;
  (%1452, %1453)
}

def @func_8404() -> (Tensor[(16, 12, 5), float32],) {
  %1454 = @func_6801() /* ty=Tensor[(16, 12, 5), float32] */;
  (%1454,)
}

def @func_5218(%var_5211: int32) -> (Tensor[(1, 4), int32], Tensor[(4), int32], Tensor[(10, ?, 10), uint32]) {
  %1455 = cast(%var_5211, dtype="int32") /* ty=int32 */;
  %1456 = cast(meta[relay.Constant][65] /* ty=Tensor[(4), int32] */, dtype="int32") /* ty=Tensor[(4), int32] */;
  %1457 = reshape(%1455, newshape=[]) /* ty=int32 */;
  %1458 = reshape(%1456, newshape=[1, 4]) /* ty=Tensor[(1, 4), int32] */;
  %1459 = @func_4221() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float32]) */;
  %1460 = %1459.1;
  %1461 = cast(%1460, dtype="uint32") /* ty=Tensor[(10, ?, 10), uint32] */;
  %1462 = cast(%var_5211, dtype="uint32") /* ty=uint32 */;
  %1463 = @func_196(%1457, %1458) /* ty=Tensor[(1, 4), int32] */;
  %1464 = bitwise_or(%1461, %1462) /* ty=Tensor[(10, ?, 10), uint32] */;
  (%1463, meta[relay.Constant][65] /* ty=Tensor[(4), int32] */, %1464)
}

def @func_11541() -> Tensor[(16, 12, 5), float32] {
  @func_7946() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_1586(%var_1558: Tensor[(16, 2, 4), uint8]) -> (Tensor[(16, 2, 4), float64], Tensor[(4), int32], uint16, Tensor[(98), uint16], Tensor[(4), int32]) {
  %1465 = cast(%var_1558, dtype="uint8") /* ty=Tensor[(16, 2, 4), uint8] */;
  %1466 = shape_of(meta[relay.Constant][66] /* ty=Tensor[(16, 2, 4), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1467 = cast(meta[relay.Constant][66] /* ty=Tensor[(16, 2, 4), uint8] */, dtype="uint8") /* ty=Tensor[(16, 2, 4), uint8] */;
  %1468 = dyn.reshape(%1465, %1466, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1469 = minimum(%1467, %1468) /* ty=Tensor[(16, 2, 4), uint8] */;
  %1470 = cast(%1469, dtype="float64") /* ty=Tensor[(16, 2, 4), float64] */;
  %1471 = shape_of(%var_1558, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1472 = cast(%var_1558, dtype="float64") /* ty=Tensor[(16, 2, 4), float64] */;
  %1473 = dyn.reshape(%1470, %1471, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1474 = cast(meta[relay.Constant][67] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %1475 = cast(meta[relay.Constant][68] /* ty=Tensor[(98), uint16] */, dtype="uint16") /* ty=Tensor[(98), uint16] */;
  %1476 = cast(meta[relay.Constant][69] /* ty=Tensor[(4), int32] */, dtype="int32") /* ty=Tensor[(4), int32] */;
  %1477 = reshape(%1474, newshape=[]) /* ty=uint16 */;
  %1478 = reshape(%1475, newshape=[14, 7, 1]) /* ty=Tensor[(14, 7, 1), uint16] */;
  %1479 = reshape(%1476, newshape=[4]) /* ty=Tensor[(4), int32] */;
  %1480 = @func_377(%1477, %1478, %1479) /* ty=(Tensor[(14, 7, 1), uint16], Tensor[(1, 4), int32], Tensor[(4), int32]) */;
  %1481 = mod(%1472, %1473) /* ty=Tensor[(16, 2, 4), float64] */;
  %1482 = %1480.2;
  (%1481, %1482, meta[relay.Constant][67] /* ty=uint16 */, meta[relay.Constant][68] /* ty=Tensor[(98), uint16] */, meta[relay.Constant][69] /* ty=Tensor[(4), int32] */)
}

def @func_14954() -> Tensor[(10, ?, 10), bool] {
  @func_5434() /* ty=Tensor[(10, ?, 10), bool] */
}

def @func_8541() -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), float64]) {
  %1483 = @func_5522() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1484 = @func_7716() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), int8]) */;
  %1485 = %1484.1;
  %1486 = cast(%1485, dtype="float64") /* ty=Tensor[(10, ?, 10), float64] */;
  %1487 = %1483.0;
  %1488 = rsqrt(%1486) /* ty=Tensor[(10, ?, 10), float64] */;
  (%1487, %1488)
}

def @func_11203() -> Tensor[(100), float32] {
  %1489 = @func_6639() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(100), float32], Tensor[(100), float32]) */;
  %1489.2
}

def @func_17257() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  %1490 = @func_17067() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, 8, 10), float32]) */;
  %1491 = @func_14334() /* ty=Tensor[(16, 12, 5), float32] */;
  %1492 = cast(%1491, dtype="float32") /* ty=Tensor[(16, 12, 5), float32] */;
  %1493 = %1490.0;
  %1494 = sigmoid(%1492) /* ty=Tensor[(16, 12, 5), float32] */;
  (%1493, %1494)
}

def @func_15173() -> (Tensor[(16, 12, 5), float32],) {
  %1495 = @func_11088() /* ty=Tensor[(16, 12, 5), float32] */;
  (%1495,)
}

def @func_7855(%var_7842: Tensor[(10, 3, 10), bool]) -> (Tensor[(10, 3, 10), bool], Tensor[(16, 12, 5), float32]) {
  %1496 = @func_4925() /* ty=Tensor[(10, ?, 10), bool] */;
  %1497 = cast(%1496, dtype="bool") /* ty=Tensor[(10, ?, 10), bool] */;
  %1498 = cast(%var_7842, dtype="bool") /* ty=Tensor[(10, 3, 10), bool] */;
  %1499 = greater_equal(%1497, %1498) /* ty=Tensor[(10, 3, 10), bool] */;
  %1500 = @func_4405() /* ty=Tensor[(16, 12, 5), float32] */;
  (%1499, %1500)
}

def @func_19607() -> (Tensor[(12, 10, 6), float64], Tensor[(16, 12, 5), float32]) {
  %1501 = @func_4960() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(12, 10, 6), float64], Tensor[(720), float64]) */;
  %1502 = @func_6192() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(720), float64], Tensor[(16, 12, 5), float32]) */;
  %1503 = %1501.1;
  %1504 = %1502.2;
  (%1503, %1504)
}

def @func_5522() -> (Tensor[(16, 12, 5), float32],) {
  %1505 = @func_4221() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float32]) */;
  %1506 = %1505.0;
  (%1506,)
}

def @func_16994() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  %1507 = @func_7641() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1508 = @func_4444() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %1509 = %1507.0;
  %1510 = %1508.0;
  (%1509, %1510)
}

def @func_5265() -> (Tensor[(16, 12, 5), float32], Tensor[(100), float32]) {
  %1511 = @func_4405() /* ty=Tensor[(16, 12, 5), float32] */;
  %1512 = @func_4476() /* ty=Tensor[(100), float32] */;
  (%1511, %1512)
}

def @func_4960() -> (Tensor[(10, ?, 10), bool], Tensor[(12, 10, 6), float64], Tensor[(720), float64]) {
  %1513 = @func_4221() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float32]) */;
  %1514 = cast(meta[relay.Constant][70] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %1515 = reshape(%1514, newshape=[12, 10, 6]) /* ty=Tensor[(12, 10, 6), float64] */;
  %1516 = @func_745(%1515) /* ty=(Tensor[(12, 10, 6), float64],) */;
  %1517 = %1513.1;
  %1518 = %1516.0;
  (%1517, %1518, meta[relay.Constant][70] /* ty=Tensor[(720), float64] */)
}

def @func_12740() -> Tensor[(720), float64] {
  %1519 = @func_6485() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(720), float64], Tensor[(10, ?, 10), bool]) */;
  %1519.1
}

def @func_10311() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  %1520 = @func_6639() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(100), float32], Tensor[(100), float32]) */;
  %1521 = @func_9464() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %1522 = %1520.0;
  %1523 = %1521.0;
  (%1522, %1523)
}

def @func_7262() -> (Tensor[(10, 8, 10), int32], Tensor[(10, 8, 10), float32]) {
  %1524 = @func_4629() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */;
  %1525 = %1524.1;
  %1526 = cast(%1525, dtype="int32") /* ty=Tensor[(10, ?, 10), int32] */;
  %1527 = cast(meta[relay.Constant][71] /* ty=Tensor[(10, 8, 10), bool] */, dtype="int32") /* ty=Tensor[(10, 8, 10), int32] */;
  %1528 = cast(meta[relay.Constant][71] /* ty=Tensor[(10, 8, 10), bool] */, dtype="float32") /* ty=Tensor[(10, 8, 10), float32] */;
  %1529 = right_shift(%1526, %1527) /* ty=Tensor[(10, 8, 10), int32] */;
  %1530 = acosh(%1528) /* ty=Tensor[(10, 8, 10), float32] */;
  (%1529, %1530)
}

def @func_14980(%var_14977: Tensor[(260), uint64], %var_14978: Tensor[(195), float32]) -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(260), uint64], Tensor[(195), float32]) {
  %1531 = @func_13699() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(252), float32], Tensor[(252), float32]) */;
  %1532 = @func_11517() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1533 = cast(%var_14977, dtype="uint64") /* ty=Tensor[(260), uint64] */;
  %1534 = cast(%var_14978, dtype="float32") /* ty=Tensor[(195), float32] */;
  %1535 = reshape(%1533, newshape=[260]) /* ty=Tensor[(260), uint64] */;
  %1536 = reshape(%1534, newshape=[195]) /* ty=Tensor[(195), float32] */;
  %1537 = @func_8261(%1535, %1536) /* ty=(Tensor[(15, ?, 11), float64], Tensor[(16, 12, 5), float32], Tensor[(260), uint64], Tensor[(195), float32], Tensor[(100), float32], Tensor[(10, ?, 10), bool]) */;
  %1538 = %1531.0;
  %1539 = %1532.0;
  %1540 = %1537.5;
  (%1538, %1539, %1540, %var_14977, %var_14978)
}

def @func_16689(%var_16685: Tensor[(98), uint16]) -> (Tensor[(100), float32], Tensor[(4), int32], uint16, Tensor[(98), uint16], Tensor[(4), int32]) {
  %1541 = cast(meta[relay.Constant][72] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %1542 = cast(%var_16685, dtype="uint16") /* ty=Tensor[(98), uint16] */;
  %1543 = cast(meta[relay.Constant][73] /* ty=Tensor[(4), int32] */, dtype="int32") /* ty=Tensor[(4), int32] */;
  %1544 = reshape(%1541, newshape=[]) /* ty=uint16 */;
  %1545 = reshape(%1542, newshape=[14, 7, 1]) /* ty=Tensor[(14, 7, 1), uint16] */;
  %1546 = reshape(%1543, newshape=[4]) /* ty=Tensor[(4), int32] */;
  %1547 = @func_377(%1544, %1545, %1546) /* ty=(Tensor[(14, 7, 1), uint16], Tensor[(1, 4), int32], Tensor[(4), int32]) */;
  %1548 = @func_4476() /* ty=Tensor[(100), float32] */;
  %1549 = %1547.2;
  (%1548, %1549, meta[relay.Constant][72] /* ty=uint16 */, %var_16685, meta[relay.Constant][73] /* ty=Tensor[(4), int32] */)
}

def @func_16856(%var_16851: Tensor[(1350), float32]) -> (Tensor[(16, 12, 5), float32], Tensor[(10, 9, 15), uint64], Tensor[(1350), float32], Tensor[(16, 12, 5), float32]) {
  %1550 = @func_6639() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(100), float32], Tensor[(100), float32]) */;
  %1551 = cast(%var_16851, dtype="float32") /* ty=Tensor[(1350), float32] */;
  %1552 = cast(%var_16851, dtype="float32") /* ty=Tensor[(1350), float32] */;
  %1553 = reshape(%1551, newshape=[10, 9, 15]) /* ty=Tensor[(10, 9, 15), float32] */;
  %1554 = reshape(%1552, newshape=[10, 9, 15]) /* ty=Tensor[(10, 9, 15), float32] */;
  %1555 = @func_11517() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1556 = %1550.0;
  %1557 = @func_16054(%1553, %1554) /* ty=Tensor[(10, 9, 15), uint64] */;
  %1558 = %1555.0;
  (%1556, %1557, %var_16851, %1558)
}

def @func_13224(%var_13208: uint64, %var_13209: Tensor[(11, 8, 11), uint64]) -> (Tensor[(11, 8, 11), bool], Tensor[(16, 12, 5), float32]) {
  %1559 = cast(%var_13208, dtype="bool") /* ty=bool */;
  %1560 = cast(%var_13209, dtype="bool") /* ty=Tensor[(11, 8, 11), bool] */;
  %1561 = @func_7641() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1562 = not_equal(%1559, %1560) /* ty=Tensor[(11, 8, 11), bool] */;
  %1563 = %1561.0;
  (%1562, %1563)
}

def @func_15865() -> Tensor[(16, 12, 5), float32] {
  %1564 = @func_8942() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1564.0
}

def @func_5468() -> Tensor[(10, ?, 10), bool] {
  %1565 = @func_5148() /* ty=(Tensor[(10, ?, 10), bool],) */;
  %1565.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_14955() -> Tensor[(10, ?, 10), bool] {
  %0 = fn () -> Tensor[(10, ?, 10), bool] {
    @func_5434() /* ty=Tensor[(10, ?, 10), bool] */
  };
  %0() /* ty=Tensor[(10, ?, 10), bool] */
}

def @func_5434() -> Tensor[(10, ?, 10), bool] {
  @func_4925() /* ty=Tensor[(10, ?, 10), bool] */
}

def @func_8665() -> (Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) {
  @func_8663() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) */
}

def @func_7019() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  %1 = @func_4444() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %2 = @func_4582() /* ty=Tensor[(16, 12, 5), float32] */;
  %3 = %1.0;
  (%2, %3)
}

def @func_5267() -> (Tensor[(16, 12, 5), float32], Tensor[(100), float32]) {
  @func_5265() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(100), float32]) */
}

def @func_7924(%var_7922: int32) -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(11, 14, 15), bool], int32, Tensor[(2310), int32]) {
  @func_7921(%var_7922) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(11, 14, 15), bool], int32, Tensor[(2310), int32]) */
}

def @func_13866() -> Tensor[(10, ?, 10), bool] {
  @func_13864() /* ty=Tensor[(10, ?, 10), bool] */
}

def @func_18109() -> (Tensor[(100), float32], Tensor[(100), float32], Tensor[(16, 12, 5), float32]) {
  @func_18107() /* ty=(Tensor[(100), float32], Tensor[(100), float32], Tensor[(16, 12, 5), float32]) */
}

def @func_7468(%var_7466: Tensor[(260), uint64], %var_7467: Tensor[(195), float32]) -> (Tensor[(13, 10, 2), bool], Tensor[(260), uint64], Tensor[(100), float32], Tensor[(10, ?, 10), bool], Tensor[(10, ?, 10), float64], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(4), int32], Tensor[(195), float32]) {
  %25 = fn (%var_7368: Tensor[(260), uint64], %var_7449: Tensor[(195), float32]) -> (Tensor[(13, 10, 2), bool], Tensor[(260), uint64], Tensor[(100), float32], Tensor[(10, ?, 10), bool], Tensor[(10, ?, 10), float64], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(4), int32], Tensor[(195), float32]) {
    %4 = cast(%var_7368, dtype="uint64") /* ty=Tensor[(260), uint64] */;
    %5 = cast(%var_7368, dtype="uint64") /* ty=Tensor[(260), uint64] */;
    %6 = reshape(%4, newshape=[13, 10, 2]) /* ty=Tensor[(13, 10, 2), uint64] */;
    %7 = reshape(%5, newshape=[13, 10, 2]) /* ty=Tensor[(13, 10, 2), uint64] */;
    %8 = @func_2840(%6, %7) /* ty=(Tensor[(13, 10, 2), bool],) */;
    %9 = @func_6042() /* ty=(Tensor[(100), float32],) */;
    %10 = @func_5148() /* ty=(Tensor[(10, ?, 10), bool],) */;
    %11 = %10.0;
    %12 = cast(%11, dtype="float64") /* ty=Tensor[(10, ?, 10), float64] */;
    %13 = %8.0;
    %14 = cast(%13, dtype="uint64") /* ty=Tensor[(13, 10, 2), uint64] */;
    %15 = cast(%var_7449, dtype="float32") /* ty=Tensor[(195), float32] */;
    %16 = reshape(%14, newshape=[260]) /* ty=Tensor[(260), uint64] */;
    %17 = reshape(%15, newshape=[13, 15]) /* ty=Tensor[(13, 15), float32] */;
    %18 = @func_6252(%16, %17) /* ty=(Tensor[(10, ?, 10), bool], Tensor[(13, 10, 2), bool], Tensor[(260), uint64], Tensor[(4), int32], Tensor[(13, 15), float32], Tensor[(4), int32]) */;
    %19 = %9.0;
    %20 = @func_4279() /* ty=Tensor[(10, ?, 10), bool] */;
    %21 = asinh(%12) /* ty=Tensor[(10, ?, 10), float64] */;
    %22 = @func_4178() /* ty=Tensor[(16, 12, 5), float32] */;
    %23 = @func_4925() /* ty=Tensor[(10, ?, 10), bool] */;
    %24 = %18.3;
    (%13, %var_7368, %19, %20, %21, %22, %23, %24, %var_7449)
  };
  %25(%var_7466, %var_7467) /* ty=(Tensor[(13, 10, 2), bool], Tensor[(260), uint64], Tensor[(100), float32], Tensor[(10, ?, 10), bool], Tensor[(10, ?, 10), float64], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(4), int32], Tensor[(195), float32]) */
}

def @func_17509() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(100), float32]) {
  %32 = fn () -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(100), float32]) {
    %26 = @func_16916() /* ty=(Tensor[(100), float32], Tensor[(16, 12, 5), float32]) */;
    %27 = @func_12414() /* ty=(Tensor[(16, 12, 5), float32],) */;
    %28 = @func_14538() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(100), float32], Tensor[(100), float32]) */;
    %29 = %26.1;
    %30 = %27.0;
    %31 = %28.1;
    (%29, %30, %31)
  };
  %32() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(100), float32]) */
}

def @func_15790(%var_15788: Tensor[(6, 14, 2), float64], %var_15789: Tensor[(468), uint64]) -> (Tensor[(6, 14, 2), float64], Tensor[(4), int32], Tensor[(468), uint64], Tensor[(10, 8, 10), float32]) {
  @func_15786(%var_15788, %var_15789) /* ty=(Tensor[(6, 14, 2), float64], Tensor[(4), int32], Tensor[(468), uint64], Tensor[(10, 8, 10), float32]) */
}

def @func_10075(%var_10073: int32) -> (Tensor[(16, 12, 5), float32], Tensor[(1, 4), int32], int32, Tensor[(4), int32], Tensor[(16, 12, 5), uint32], Tensor[(10, ?, 10), bool], Tensor[(100), float32], Tensor[(11, 14, 15), bool]) {
  @func_10072(%var_10073) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(1, 4), int32], int32, Tensor[(4), int32], Tensor[(16, 12, 5), uint32], Tensor[(10, ?, 10), bool], Tensor[(100), float32], Tensor[(11, 14, 15), bool]) */
}

def @func_19154(%var_19152: Tensor[(1200, 1), uint64]) -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(1200, 1), uint64]) {
  @func_19151(%var_19152) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(1200, 1), uint64]) */
}

def @func_17068() -> (Tensor[(16, 12, 5), float32], Tensor[(10, 8, 10), float32]) {
  %38 = fn () -> (Tensor[(16, 12, 5), float32], Tensor[(10, 8, 10), float32]) {
    %33 = @func_13763() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
    %34 = @func_16868() /* ty=Tensor[(10, 8, 10), float32] */;
    %35 = cast(%34, dtype="float32") /* ty=Tensor[(10, 8, 10), float32] */;
    %36 = %33.0;
    %37 = atan(%35) /* ty=Tensor[(10, 8, 10), float32] */;
    (%36, %37)
  };
  %38() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, 8, 10), float32]) */
}

def @func_18421(%var_18419: Tensor[(1, 468), uint64]) -> (Tensor[(16, 12, 5), float32], Tensor[(4), int32], Tensor[(1, 468), uint64]) {
  @func_18418(%var_18419) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(4), int32], Tensor[(1, 468), uint64]) */
}

def @func_7492() -> Tensor[(16, 12, 5), float32] {
  @func_7052() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_13972() -> (Tensor[(16, 12, 5), float32],) {
  %39 = @func_13542() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(100), float64]) */;
  %40 = %39.1;
  (%40,)
}

def @func_16691(%var_16690: Tensor[(98), uint16]) -> (Tensor[(100), float32], Tensor[(4), int32], uint16, Tensor[(98), uint16], Tensor[(4), int32]) {
  %50 = fn (%var_16685: Tensor[(98), uint16]) -> (Tensor[(100), float32], Tensor[(4), int32], uint16, Tensor[(98), uint16], Tensor[(4), int32]) {
    %41 = cast(meta[relay.Constant][0] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %42 = cast(%var_16685, dtype="uint16") /* ty=Tensor[(98), uint16] */;
    %43 = cast(meta[relay.Constant][1] /* ty=Tensor[(4), int32] */, dtype="int32") /* ty=Tensor[(4), int32] */;
    %44 = reshape(%41, newshape=[]) /* ty=uint16 */;
    %45 = reshape(%42, newshape=[14, 7, 1]) /* ty=Tensor[(14, 7, 1), uint16] */;
    %46 = reshape(%43, newshape=[4]) /* ty=Tensor[(4), int32] */;
    %47 = @func_377(%44, %45, %46) /* ty=(Tensor[(14, 7, 1), uint16], Tensor[(1, 4), int32], Tensor[(4), int32]) */;
    %48 = @func_4476() /* ty=Tensor[(100), float32] */;
    %49 = %47.2;
    (%48, %49, meta[relay.Constant][0] /* ty=uint16 */, %var_16685, meta[relay.Constant][1] /* ty=Tensor[(4), int32] */)
  };
  %50(%var_16690) /* ty=(Tensor[(100), float32], Tensor[(4), int32], uint16, Tensor[(98), uint16], Tensor[(4), int32]) */
}

def @func_7718() -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), int8]) {
  @func_7716() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), int8]) */
}

def @func_18372() -> (Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(10, 8, 10), int32]) {
  %56 = fn () -> (Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(10, 8, 10), int32]) {
    %51 = @func_9137() /* ty=(Tensor[(100), float32], Tensor[(16, 12, 5), float32], Tensor[(100), float32], Tensor[(16, 12, 5), float32]) */;
    %52 = @func_7262() /* ty=(Tensor[(10, 8, 10), int32], Tensor[(10, 8, 10), float32]) */;
    %53 = @func_18146() /* ty=Tensor[(10, ?, 10), bool] */;
    %54 = %51.1;
    %55 = %52.0;
    (%53, %54, %55)
  };
  %56() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(10, 8, 10), int32]) */
}

def @func_4960() -> (Tensor[(10, ?, 10), bool], Tensor[(12, 10, 6), float64], Tensor[(720), float64]) {
  %57 = @func_4221() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float32]) */;
  %58 = cast(meta[relay.Constant][2] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %59 = reshape(%58, newshape=[12, 10, 6]) /* ty=Tensor[(12, 10, 6), float64] */;
  %60 = @func_745(%59) /* ty=(Tensor[(12, 10, 6), float64],) */;
  %61 = %57.1;
  %62 = %60.0;
  (%61, %62, meta[relay.Constant][2] /* ty=Tensor[(720), float64] */)
}

def @func_4405() -> Tensor[(16, 12, 5), float32] {
  @func_4178() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_7263() -> (Tensor[(10, 8, 10), int32], Tensor[(10, 8, 10), float32]) {
  %70 = fn () -> (Tensor[(10, 8, 10), int32], Tensor[(10, 8, 10), float32]) {
    %63 = @func_4629() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */;
    %64 = %63.1;
    %65 = cast(%64, dtype="int32") /* ty=Tensor[(10, ?, 10), int32] */;
    %66 = cast(meta[relay.Constant][3] /* ty=Tensor[(10, 8, 10), bool] */, dtype="int32") /* ty=Tensor[(10, 8, 10), int32] */;
    %67 = cast(meta[relay.Constant][3] /* ty=Tensor[(10, 8, 10), bool] */, dtype="float32") /* ty=Tensor[(10, 8, 10), float32] */;
    %68 = right_shift(%65, %66) /* ty=Tensor[(10, 8, 10), int32] */;
    %69 = acosh(%67) /* ty=Tensor[(10, 8, 10), float32] */;
    (%68, %69)
  };
  %70() /* ty=(Tensor[(10, 8, 10), int32], Tensor[(10, 8, 10), float32]) */
}

def @func_9045(%var_9020: int8) -> (Tensor[(14, 13, 10), bool], Tensor[(14, 13, 10), float32]) {
  %71 = cast(%var_9020, dtype="bool") /* ty=bool */;
  %72 = cast(meta[relay.Constant][4] /* ty=Tensor[(14, 13, 10), int8] */, dtype="bool") /* ty=Tensor[(14, 13, 10), bool] */;
  %73 = cast(meta[relay.Constant][4] /* ty=Tensor[(14, 13, 10), int8] */, dtype="float32") /* ty=Tensor[(14, 13, 10), float32] */;
  %74 = less(%71, %72) /* ty=Tensor[(14, 13, 10), bool] */;
  %75 = sigmoid(%73) /* ty=Tensor[(14, 13, 10), float32] */;
  (%74, %75)
}

def @func_9350(%var_9327: Tensor[(13, 15), float32]) -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(13, 15), float32], Tensor[(4), int32], Tensor[(98), uint16], Tensor[(968), float32], Tensor[(15, 7, 3), float64]) {
  %76 = cast(%var_9327, dtype="float32") /* ty=Tensor[(13, 15), float32] */;
  %77 = cast(meta[relay.Constant][5] /* ty=Tensor[(4), int32] */, dtype="int32") /* ty=Tensor[(4), int32] */;
  %78 = cast(meta[relay.Constant][6] /* ty=Tensor[(98), uint16] */, dtype="uint16") /* ty=Tensor[(98), uint16] */;
  %79 = cast(meta[relay.Constant][7] /* ty=Tensor[(968), float32] */, dtype="float32") /* ty=Tensor[(968), float32] */;
  %80 = reshape(%76, newshape=[195]) /* ty=Tensor[(195), float32] */;
  %81 = reshape(%77, newshape=[1, 4]) /* ty=Tensor[(1, 4), int32] */;
  %82 = reshape(%78, newshape=[98]) /* ty=Tensor[(98), uint16] */;
  %83 = reshape(%79, newshape=[968]) /* ty=Tensor[(968), float32] */;
  %84 = @func_4757(%80, %81, %82, %83) /* ty=(Tensor[(195), float32], Tensor[(1, 4), int32], Tensor[(98), uint32], Tensor[(10, ?, 10), bool], Tensor[(9, 2, 14), float32], Tensor[(6, 42), float32], Tensor[(100), float32], Tensor[(11, 8, 11), float32], Tensor[(968), float32], Tensor[(10, ?, 10), bool]) */;
  %85 = @func_5721() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(15, 7, 3), float64], Tensor[(315), float64]) */;
  %86 = @func_7946() /* ty=Tensor[(16, 12, 5), float32] */;
  %87 = %84.9;
  %88 = %85.1;
  (%86, %87, %var_9327, meta[relay.Constant][5] /* ty=Tensor[(4), int32] */, meta[relay.Constant][6] /* ty=Tensor[(98), uint16] */, meta[relay.Constant][7] /* ty=Tensor[(968), float32] */, %88)
}

def @func_12110() -> (Tensor[(16, 12, 5), float32], Tensor[(4), int32], Tensor[(968), float32]) {
  %94 = fn () -> (Tensor[(16, 12, 5), float32], Tensor[(4), int32], Tensor[(968), float32]) {
    %89 = cast(meta[relay.Constant][8] /* ty=Tensor[(968), float32] */, dtype="float32") /* ty=Tensor[(968), float32] */;
    %90 = reshape(%89, newshape=[1, 968]) /* ty=Tensor[(1, 968), float32] */;
    %91 = @func_8471(%90) /* ty=(Tensor[(10, ?, 10), bool], Tensor[(9, 2, 14), float32], Tensor[(195), float32], Tensor[(4), int32], Tensor[(98, 1), uint16], Tensor[(1, 968), float32]) */;
    %92 = @func_6801() /* ty=Tensor[(16, 12, 5), float32] */;
    %93 = %91.3;
    (%92, %93, meta[relay.Constant][8] /* ty=Tensor[(968), float32] */)
  };
  %94() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(4), int32], Tensor[(968), float32]) */
}

def @func_15824() -> Tensor[(315), float64] {
  %95 = @func_11114() /* ty=(Tensor[(315), float64],) */;
  %95.0
}

def @func_4669(%var_4667: int32, %var_4668: Tensor[(11, 14, 15), int32]) -> Tensor[(11, 14, 15), bool] {
  @func_4665(%var_4667, %var_4668) /* ty=Tensor[(11, 14, 15), bool] */
}

def @func_9751() -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) {
  %100 = fn () -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) {
    %96 = @func_7971() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */;
    %97 = @func_5148() /* ty=(Tensor[(10, ?, 10), bool],) */;
    %98 = %96.0;
    %99 = %97.0;
    (%98, %99)
  };
  %100() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */
}

def @func_12742() -> Tensor[(720), float64] {
  @func_12740() /* ty=Tensor[(720), float64] */
}

def @func_8645() -> (Tensor[(16, 12, 5), float32], Tensor[(10, 8, 10), int32], Tensor[(16, 12, 5), float32]) {
  %106 = fn () -> (Tensor[(16, 12, 5), float32], Tensor[(10, 8, 10), int32], Tensor[(16, 12, 5), float32]) {
    %101 = @func_7262() /* ty=(Tensor[(10, 8, 10), int32], Tensor[(10, 8, 10), float32]) */;
    %102 = @func_8206() /* ty=(Tensor[(16, 12, 5), float32],) */;
    %103 = @func_4178() /* ty=Tensor[(16, 12, 5), float32] */;
    %104 = %101.0;
    %105 = %102.0;
    (%103, %104, %105)
  };
  %106() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, 8, 10), int32], Tensor[(16, 12, 5), float32]) */
}

def @func_18951() -> (Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) {
  @func_18949() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */
}

def @func_12201() -> (Tensor[(16, 12, 5), float32],) {
  @func_12199() /* ty=(Tensor[(16, 12, 5), float32],) */
}

def @func_18476() -> (Tensor[(10, ?, 10), bool],) {
  %108 = fn () -> (Tensor[(10, ?, 10), bool],) {
    %107 = @func_6137() /* ty=Tensor[(10, ?, 10), bool] */;
    (%107,)
  };
  %108() /* ty=(Tensor[(10, ?, 10), bool],) */
}

def @func_12327() -> Tensor[(10, ?, 10), bool] {
  %109 = @func_6192() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(720), float64], Tensor[(16, 12, 5), float32]) */;
  %109.0
}

def @func_15867() -> Tensor[(16, 12, 5), float32] {
  @func_15865() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_11089() -> Tensor[(16, 12, 5), float32] {
  %111 = fn () -> Tensor[(16, 12, 5), float32] {
    %110 = @func_5660() /* ty=(Tensor[(16, 12, 5), float32],) */;
    %110.0
  };
  %111() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_283(%var_264: Tensor[(14, 3, 3), uint32], %var_265: Tensor[(14, 3, 3), uint32], %var_271: Tensor[(4), int32]) -> (Tensor[(1, 4), int32], int32, Tensor[(4), int32], Tensor[(14, 3, 3), float64], Tensor[(1, 4), int32], Tensor[(1, 4), int32]) {
  %112 = cast(-8 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %113 = cast(%var_271, dtype="int32") /* ty=Tensor[(4), int32] */;
  %114 = reshape(%112, newshape=[]) /* ty=int32 */;
  %115 = reshape(%113, newshape=[1, 4]) /* ty=Tensor[(1, 4), int32] */;
  %116 = cast(%var_265, dtype="uint32") /* ty=Tensor[(14, 3, 3), uint32] */;
  %117 = shape_of(%var_264, dtype="int32") /* ty=Tensor[(3), int32] */;
  %118 = cast(%var_264, dtype="uint32") /* ty=Tensor[(14, 3, 3), uint32] */;
  %119 = dyn.reshape(%116, %117, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %120 = minimum(%118, %119) /* ty=Tensor[(14, 3, 3), uint32] */;
  %121 = cast(%120, dtype="float64") /* ty=Tensor[(14, 3, 3), float64] */;
  %122 = cast(-8 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %123 = cast(%var_271, dtype="int32") /* ty=Tensor[(4), int32] */;
  %124 = reshape(%122, newshape=[]) /* ty=int32 */;
  %125 = reshape(%123, newshape=[1, 4]) /* ty=Tensor[(1, 4), int32] */;
  %126 = cast(-8 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %127 = cast(%var_271, dtype="int32") /* ty=Tensor[(4), int32] */;
  %128 = reshape(%126, newshape=[]) /* ty=int32 */;
  %129 = reshape(%127, newshape=[1, 4]) /* ty=Tensor[(1, 4), int32] */;
  %130 = @func_196(%114, %115) /* ty=Tensor[(1, 4), int32] */;
  %131 = sigmoid(%121) /* ty=Tensor[(14, 3, 3), float64] */;
  %132 = @func_196(%124, %125) /* ty=Tensor[(1, 4), int32] */;
  %133 = @func_196(%128, %129) /* ty=Tensor[(1, 4), int32] */;
  (%130, -8 /* ty=int32 */, %var_271, %131, %132, %133)
}

def @func_7620() -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float64]) {
  @func_7618() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float64]) */
}

def @func_10311() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  %134 = @func_6639() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(100), float32], Tensor[(100), float32]) */;
  %135 = @func_9464() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %136 = %134.0;
  %137 = %135.0;
  (%136, %137)
}

def @func_8144(%var_8142: Tensor[(300), bool], %var_8143: Tensor[(10, 16, 10), bool]) -> (Tensor[(16, 12, 5), float32], Tensor[(10, 3, 10), bool], Tensor[(300), bool], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(10, 16, 10), uint8], Tensor[(10, 16, 10), bool], Tensor[(16, 12, 5), float32]) {
  %163 = fn (%var_8063: Tensor[(300), bool], %var_8122: Tensor[(10, 16, 10), bool]) -> (Tensor[(16, 12, 5), float32], Tensor[(10, 3, 10), bool], Tensor[(300), bool], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(10, 16, 10), uint8], Tensor[(10, 16, 10), bool], Tensor[(16, 12, 5), float32]) {
    %138 = cast(%var_8063, dtype="bool") /* ty=Tensor[(300), bool] */;
    %139 = reshape(%138, newshape=[10, 3, 10]) /* ty=Tensor[(10, 3, 10), bool] */;
    %140 = @func_7855(%139) /* ty=(Tensor[(10, 3, 10), bool], Tensor[(16, 12, 5), float32]) */;
    %141 = @func_7716() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), int8]) */;
    %142 = @func_5468() /* ty=Tensor[(10, ?, 10), bool] */;
    %143 = cast(%142, dtype="float32") /* ty=Tensor[(10, ?, 10), float32] */;
    %144 = log(%143) /* ty=Tensor[(10, ?, 10), float32] */;
    %145 = cast(%142, dtype="bool") /* ty=Tensor[(10, ?, 10), bool] */;
    %146 = shape_of(%144, dtype="int32") /* ty=Tensor[(3), int32] */;
    %147 = cast(%144, dtype="bool") /* ty=Tensor[(10, ?, 10), bool] */;
    %148 = dyn.reshape(%145, %146, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %149 = greater_equal(%147, %148) /* ty=Tensor[(10, ?, 10), bool] */;
    %150 = cast(%149, dtype="uint8") /* ty=Tensor[(10, ?, 10), uint8] */;
    %151 = cast(%var_8122, dtype="uint8") /* ty=Tensor[(10, 16, 10), uint8] */;
    %152 = @func_5468() /* ty=Tensor[(10, ?, 10), bool] */;
    %153 = cast(%var_8122, dtype="bool") /* ty=Tensor[(10, 16, 10), bool] */;
    %154 = cast(%152, dtype="bool") /* ty=Tensor[(10, ?, 10), bool] */;
    %155 = @func_7618() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float64]) */;
    %156 = @func_7492() /* ty=Tensor[(16, 12, 5), float32] */;
    %157 = %140.0;
    %158 = %141.0;
    %159 = @func_5173() /* ty=Tensor[(10, ?, 10), bool] */;
    %160 = add(%150, %151) /* ty=Tensor[(10, 16, 10), uint8] */;
    %161 = less_equal(%153, %154) /* ty=Tensor[(10, 16, 10), bool] */;
    %162 = %155.0;
    (%156, %157, %var_8063, %158, %159, %160, %161, %162)
  };
  %163(%var_8142, %var_8143) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, 3, 10), bool], Tensor[(300), bool], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(10, 16, 10), uint8], Tensor[(10, 16, 10), bool], Tensor[(16, 12, 5), float32]) */
}

def @func_7784() -> (Tensor[(100), float32], Tensor[(720), float64], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) {
  %164 = @func_6485() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(720), float64], Tensor[(10, ?, 10), bool]) */;
  %165 = @func_6998() /* ty=Tensor[(100), float32] */;
  %166 = %164.1;
  %167 = @func_4649() /* ty=Tensor[(16, 12, 5), float32] */;
  %168 = @func_6137() /* ty=Tensor[(10, ?, 10), bool] */;
  (%165, %166, %167, %168)
}

def @func_18949() -> (Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) {
  %169 = @func_15347() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(720), float64], Tensor[(16, 12, 5), float32], Tensor[(12, 10, 6), float32], Tensor[(10, ?, 10), bool]) */;
  %170 = @func_4925() /* ty=Tensor[(10, ?, 10), bool] */;
  %171 = @func_18727() /* ty=Tensor[(16, 12, 5), float32] */;
  %172 = %169.4;
  (%170, %171, %172)
}

def @func_8317(%var_8316: Tensor[(468), uint64]) -> (Tensor[(10, ?, 10), bool], Tensor[(4), int32], Tensor[(468), uint64]) {
  %179 = fn (%var_8313: Tensor[(468), uint64]) -> (Tensor[(10, ?, 10), bool], Tensor[(4), int32], Tensor[(468), uint64]) {
    %173 = @func_4960() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(12, 10, 6), float64], Tensor[(720), float64]) */;
    %174 = cast(%var_8313, dtype="uint64") /* ty=Tensor[(468), uint64] */;
    %175 = reshape(%174, newshape=[9, 13, 4]) /* ty=Tensor[(9, 13, 4), uint64] */;
    %176 = @func_4870(%175) /* ty=(Tensor[(9, 13, 4), uint16], Tensor[(1, 4), int32], int32, Tensor[(4), int32], Tensor[(9, 13, 4), float64], Tensor[(9, 13, 4), float64], Tensor[(4), int32], Tensor[(7, 14), uint16]) */;
    %177 = %173.0;
    %178 = %176.6;
    (%177, %178, %var_8313)
  };
  %179(%var_8316) /* ty=(Tensor[(10, ?, 10), bool], Tensor[(4), int32], Tensor[(468), uint64]) */
}

def @func_19403(%var_19401: Tensor[(195), float32], %var_19402: Tensor[(968), float32]) -> (Tensor[(10, ?, 10), bool], Tensor[(98), uint32], Tensor[(195), float32], Tensor[(4), int32], Tensor[(98), uint16], Tensor[(968), float32], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(260), uint64], Tensor[(260), uint64]) {
  @func_19399(%var_19401, %var_19402) /* ty=(Tensor[(10, ?, 10), bool], Tensor[(98), uint32], Tensor[(195), float32], Tensor[(4), int32], Tensor[(98), uint16], Tensor[(968), float32], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(260), uint64], Tensor[(260), uint64]) */
}

def @func_13657() -> (Tensor[(16, 12, 5), float32], Tensor[(100), float32]) {
  %183 = fn () -> (Tensor[(16, 12, 5), float32], Tensor[(100), float32]) {
    %180 = @func_9202() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
    %181 = %180.0;
    %182 = @func_5915() /* ty=Tensor[(100), float32] */;
    (%181, %182)
  };
  %183() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(100), float32]) */
}

def @func_18660() -> (Tensor[(11, 4, 14), uint16],) {
  @func_18658() /* ty=(Tensor[(11, 4, 14), uint16],) */
}

def @func_13793() -> (Tensor[(968), float32],) {
  %184 = @func_12937() /* ty=(Tensor[(968), float32],) */;
  %185 = %184.0;
  (%185,)
}

def @func_19560() -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) {
  @func_19558() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */
}

def @func_8776() -> (Tensor[(15, ?, 11), float64], Tensor[(16, 12, 5), float32]) {
  @func_8774() /* ty=(Tensor[(15, ?, 11), float64], Tensor[(16, 12, 5), float32]) */
}

def @func_20681() -> Tensor[(10, ?, 10), bool] {
  @func_20679() /* ty=Tensor[(10, ?, 10), bool] */
}

def @func_13864() -> Tensor[(10, ?, 10), bool] {
  %186 = @func_6912() /* ty=(Tensor[(100), float32], Tensor[(10, ?, 10), bool], Tensor[(4), int32], uint16, Tensor[(4), int32], Tensor[(10, ?, 10), bool], Tensor[(10, ?, 10), bool]) */;
  %186.5
}

def @func_11728() -> Tensor[(100), float32] {
  @func_11726() /* ty=Tensor[(100), float32] */
}

def @func_8264(%var_8262: Tensor[(260), uint64], %var_8263: Tensor[(195), float32]) -> (Tensor[(15, ?, 11), float64], Tensor[(16, 12, 5), float32], Tensor[(260), uint64], Tensor[(195), float32], Tensor[(100), float32], Tensor[(10, ?, 10), bool]) {
  %200 = fn (%var_8239: Tensor[(260), uint64], %var_8240: Tensor[(195), float32]) -> (Tensor[(15, ?, 11), float64], Tensor[(16, 12, 5), float32], Tensor[(260), uint64], Tensor[(195), float32], Tensor[(100), float32], Tensor[(10, ?, 10), bool]) {
    %187 = @func_6587() /* ty=(Tensor[(15, ?, 11), int16], Tensor[(16, 12, 5), float32]) */;
    %188 = %187.0;
    %189 = cast(%188, dtype="float64") /* ty=Tensor[(15, ?, 11), float64] */;
    %190 = cast(%var_8239, dtype="uint64") /* ty=Tensor[(260), uint64] */;
    %191 = cast(%var_8240, dtype="float32") /* ty=Tensor[(195), float32] */;
    %192 = reshape(%190, newshape=[260]) /* ty=Tensor[(260), uint64] */;
    %193 = reshape(%191, newshape=[195]) /* ty=Tensor[(195), float32] */;
    %194 = @func_7465(%192, %193) /* ty=(Tensor[(13, 10, 2), bool], Tensor[(260), uint64], Tensor[(100), float32], Tensor[(10, ?, 10), bool], Tensor[(10, ?, 10), float64], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(4), int32], Tensor[(195), float32]) */;
    %195 = @func_4221() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float32]) */;
    %196 = log10(%189) /* ty=Tensor[(15, ?, 11), float64] */;
    %197 = %194.5;
    %198 = %195.2;
    %199 = @func_5173() /* ty=Tensor[(10, ?, 10), bool] */;
    (%196, %197, %var_8239, %var_8240, %198, %199)
  };
  %200(%var_8262, %var_8263) /* ty=(Tensor[(15, ?, 11), float64], Tensor[(16, 12, 5), float32], Tensor[(260), uint64], Tensor[(195), float32], Tensor[(100), float32], Tensor[(10, ?, 10), bool]) */
}

def @func_18678() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  %201 = @func_13699() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(252), float32], Tensor[(252), float32]) */;
  %202 = @func_11088() /* ty=Tensor[(16, 12, 5), float32] */;
  %203 = %201.0;
  (%202, %203)
}

def @func_1589(%var_1587: Tensor[(16, 2, 4), uint8]) -> (Tensor[(16, 2, 4), float64], Tensor[(4), int32], uint16, Tensor[(98), uint16], Tensor[(4), int32]) {
  @func_1586(%var_1587) /* ty=(Tensor[(16, 2, 4), float64], Tensor[(4), int32], uint16, Tensor[(98), uint16], Tensor[(4), int32]) */
}

def @func_12460() -> (Tensor[(100), float32],) {
  %206 = fn () -> (Tensor[(100), float32],) {
    %204 = @func_6042() /* ty=(Tensor[(100), float32],) */;
    %205 = %204.0;
    (%205,)
  };
  %206() /* ty=(Tensor[(100), float32],) */
}

def @func_15541() -> (Tensor[(16, 12, 5), float32],) {
  @func_15539() /* ty=(Tensor[(16, 12, 5), float32],) */
}

def @func_12600(%var_12598: Tensor[(260), uint64], %var_12599: Tensor[(39, 5), float32]) -> (Tensor[(16, 12, 5), float32], Tensor[(100), float32], Tensor[(4), int32], Tensor[(260), uint64], Tensor[(39, 5), float32]) {
  @func_12596(%var_12598, %var_12599) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(100), float32], Tensor[(4), int32], Tensor[(260), uint64], Tensor[(39, 5), float32]) */
}

def @func_4352() -> (Tensor[(16, 12, 5), float32],) {
  @func_4350() /* ty=(Tensor[(16, 12, 5), float32],) */
}

def @func_16057(%var_16055: Tensor[(10, 9, 15), float32], %var_16056: Tensor[(10, 9, 15), float32]) -> Tensor[(10, 9, 15), uint64] {
  %213 = fn (%var_16044: Tensor[(10, 9, 15), float32], %var_16049: Tensor[(10, 9, 15), float32]) -> Tensor[(10, 9, 15), uint64] {
    %207 = cast(%var_16044, dtype="float32") /* ty=Tensor[(10, 9, 15), float32] */;
    %208 = sinh(%207) /* ty=Tensor[(10, 9, 15), float32] */;
    %209 = cast(%var_16049, dtype="uint64") /* ty=Tensor[(10, 9, 15), uint64] */;
    %210 = shape_of(%208, dtype="int32") /* ty=Tensor[(3), int32] */;
    %211 = cast(%208, dtype="uint64") /* ty=Tensor[(10, 9, 15), uint64] */;
    %212 = dyn.reshape(%209, %210, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    logical_xor(%211, %212) /* ty=Tensor[(10, 9, 15), uint64] */
  };
  %213(%var_16055, %var_16056) /* ty=Tensor[(10, 9, 15), uint64] */
}

def @func_15175() -> (Tensor[(16, 12, 5), float32],) {
  @func_15173() /* ty=(Tensor[(16, 12, 5), float32],) */
}

def @func_6139() -> Tensor[(10, ?, 10), bool] {
  @func_6137() /* ty=Tensor[(10, ?, 10), bool] */
}

def @func_18804() -> (Tensor[(16, 12, 5), float32],) {
  @func_18802() /* ty=(Tensor[(16, 12, 5), float32],) */
}

def @func_14540() -> (Tensor[(16, 12, 5), float32], Tensor[(100), float32], Tensor[(100), float32]) {
  @func_14538() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(100), float32], Tensor[(100), float32]) */
}

def @func_15013() -> Tensor[(16, 12, 5), float32] {
  %215 = fn () -> Tensor[(16, 12, 5), float32] {
    %214 = @func_10669() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(1, 468), uint64]) */;
    %214.0
  };
  %215() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_5280(%var_5279: Tensor[(16, 5, 14), float64]) -> (Tensor[(16, 5, 14), float64],) {
  %218 = fn (%var_5274: Tensor[(16, 5, 14), float64]) -> (Tensor[(16, 5, 14), float64],) {
    %216 = cast(%var_5274, dtype="float64") /* ty=Tensor[(16, 5, 14), float64] */;
    %217 = asinh(%216) /* ty=Tensor[(16, 5, 14), float64] */;
    (%217,)
  };
  %218(%var_5279) /* ty=(Tensor[(16, 5, 14), float64],) */
}

def @func_11467(%var_11466: int32) -> (Tensor[(16, 12, 5), float32], Tensor[(1, 4), int32], int32, Tensor[(4), int32]) {
  %227 = fn (%var_11429: int32) -> (Tensor[(16, 12, 5), float32], Tensor[(1, 4), int32], int32, Tensor[(4), int32]) {
    %219 = @func_6291() /* ty=(Tensor[(16, 12, 5), float32],) */;
    %220 = cast(%var_11429, dtype="int32") /* ty=int32 */;
    %221 = cast(meta[relay.Constant][9] /* ty=Tensor[(4), int32] */, dtype="int32") /* ty=Tensor[(4), int32] */;
    %222 = reshape(%220, newshape=[]) /* ty=int32 */;
    %223 = reshape(%221, newshape=[1, 4]) /* ty=Tensor[(1, 4), int32] */;
    %224 = @func_8192(%222, %223) /* ty=(Tensor[(100), float64], Tensor[(1, 4), int32], int32, Tensor[(1, 4), int32]) */;
    %225 = %219.0;
    %226 = %224.1;
    (%225, %226, %var_11429, meta[relay.Constant][9] /* ty=Tensor[(4), int32] */)
  };
  %227(%var_11466) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(1, 4), int32], int32, Tensor[(4), int32]) */
}

def @func_6137() -> Tensor[(10, ?, 10), bool] {
  @func_5434() /* ty=Tensor[(10, ?, 10), bool] */
}

def @func_19054(%var_19020: Tensor[(15, 14, 14), float32]) -> Tensor[(15, 14, 14), float32] {
  %228 = cast(%var_19020, dtype="float32") /* ty=Tensor[(15, 14, 14), float32] */;
  asin(%228) /* ty=Tensor[(15, 14, 14), float32] */
}

def @func_18772() -> Tensor[(16, 12, 5), float32] {
  %230 = fn () -> Tensor[(16, 12, 5), float32] {
    %229 = @func_4444() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
    %229.1
  };
  %230() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_20297() -> Tensor[(10, 2, 2), float32] {
  @func_20295() /* ty=Tensor[(10, 2, 2), float32] */
}

def @func_5522() -> (Tensor[(16, 12, 5), float32],) {
  %231 = @func_4221() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float32]) */;
  %232 = %231.0;
  (%232,)
}

def @func_4280() -> Tensor[(10, ?, 10), bool] {
  %234 = fn () -> Tensor[(10, ?, 10), bool] {
    %233 = @func_4221() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float32]) */;
    %233.1
  };
  %234() /* ty=Tensor[(10, ?, 10), bool] */
}

def @func_6486() -> (Tensor[(16, 12, 5), float32], Tensor[(720), float64], Tensor[(10, ?, 10), bool]) {
  %242 = fn () -> (Tensor[(16, 12, 5), float32], Tensor[(720), float64], Tensor[(10, ?, 10), bool]) {
    %235 = @func_5265() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(100), float32]) */;
    %236 = %235.0;
    %237 = cast(%236, dtype="float32") /* ty=Tensor[(16, 12, 5), float32] */;
    %238 = @func_5780() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(12, 10, 6), float64], Tensor[(720), float64], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
    %239 = acos(%237) /* ty=Tensor[(16, 12, 5), float32] */;
    %240 = %238.3;
    %241 = @func_5507() /* ty=Tensor[(10, ?, 10), bool] */;
    (%239, %240, %241)
  };
  %242() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(720), float64], Tensor[(10, ?, 10), bool]) */
}

def @func_6989(%var_6987: Tensor[(11, 14, 13), float32], %var_6988: Tensor[(11, 14, 13), float32]) -> (Tensor[(11, 14, 13), float32], Tensor[(10, ?, 10), bool], Tensor[(11, 14, 13), uint64]) {
  @func_6985(%var_6987, %var_6988) /* ty=(Tensor[(11, 14, 13), float32], Tensor[(10, ?, 10), bool], Tensor[(11, 14, 13), uint64]) */
}

def @func_7716() -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), int8]) {
  %243 = @func_4350() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %244 = @func_5148() /* ty=(Tensor[(10, ?, 10), bool],) */;
  %245 = %244.0;
  %246 = @func_4279() /* ty=Tensor[(10, ?, 10), bool] */;
  %247 = cast(%246, dtype="int8") /* ty=Tensor[(10, ?, 10), int8] */;
  %248 = shape_of(%245, dtype="int32") /* ty=Tensor[(3), int32] */;
  %249 = cast(%245, dtype="int8") /* ty=Tensor[(10, ?, 10), int8] */;
  %250 = dyn.reshape(%247, %248, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %251 = %243.0;
  %252 = subtract(%249, %250) /* ty=Tensor[(10, ?, 10), int8] */;
  (%251, %252)
}

def @func_12813() -> (Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) {
  %253 = @func_9750() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */;
  %254 = @func_5660() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %255 = %253.1;
  %256 = %254.0;
  (%255, %256)
}

def @func_9074() -> (Tensor[(16, 12, 5), float32],) {
  @func_9072() /* ty=(Tensor[(16, 12, 5), float32],) */
}

def @func_11963() -> (Tensor[(16, 12, 5), float32],) {
  %257 = @func_6291() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %258 = %257.0;
  (%258,)
}

def @func_7000() -> Tensor[(100), float32] {
  @func_6998() /* ty=Tensor[(100), float32] */
}

def @func_991(%var_990: Tensor[(11, 8, 11), float32]) -> (Tensor[(11, 8, 11), float32],) {
  %261 = fn (%var_979: Tensor[(11, 8, 11), float32]) -> (Tensor[(11, 8, 11), float32],) {
    %259 = cast(%var_979, dtype="float32") /* ty=Tensor[(11, 8, 11), float32] */;
    %260 = acosh(%259) /* ty=Tensor[(11, 8, 11), float32] */;
    (%260,)
  };
  %261(%var_990) /* ty=(Tensor[(11, 8, 11), float32],) */
}

def @func_4120(%var_4118: int16, %var_4119: Tensor[(2, 11, 1), int16]) -> (Tensor[(2, 11, 1), bool],) {
  @func_4116(%var_4118, %var_4119) /* ty=(Tensor[(2, 11, 1), bool],) */
}

def @func_6279() -> Tensor[(16, 12, 5), float32] {
  @func_4582() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_17399() -> (Tensor[(16, 12, 5), float32],) {
  %264 = fn () -> (Tensor[(16, 12, 5), float32],) {
    %262 = @func_6291() /* ty=(Tensor[(16, 12, 5), float32],) */;
    %263 = %262.0;
    (%263,)
  };
  %264() /* ty=(Tensor[(16, 12, 5), float32],) */
}

def @func_20192() -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) {
  %265 = @func_15173() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %266 = @func_19929() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(4), int32], int32, Tensor[(100), float32]) */;
  %267 = %265.0;
  %268 = %266.0;
  (%267, %268)
}

def @func_20194() -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) {
  @func_20192() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */
}

def @func_6802() -> Tensor[(16, 12, 5), float32] {
  %269 = fn () -> Tensor[(16, 12, 5), float32] {
    @func_4178() /* ty=Tensor[(16, 12, 5), float32] */
  };
  %269() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_10400() -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) {
  @func_10398() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */
}

def @func_12199() -> (Tensor[(16, 12, 5), float32],) {
  %270 = @func_4629() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */;
  %271 = %270.0;
  (%271,)
}

def @func_6555(%var_6553: int32, %var_6554: Tensor[(1, 4), int32]) -> (Tensor[(100), float32], Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(1, 4), int32], int32, Tensor[(1, 4), int32], Tensor[(16, 12, 5), float32]) {
  %285 = fn (%var_6543: int32, %var_6544: Tensor[(1, 4), int32]) -> (Tensor[(100), float32], Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(1, 4), int32], int32, Tensor[(1, 4), int32], Tensor[(16, 12, 5), float32]) {
    %272 = @func_6042() /* ty=(Tensor[(100), float32],) */;
    %273 = @func_5721() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(15, 7, 3), float64], Tensor[(315), float64]) */;
    %274 = cast(%var_6543, dtype="int32") /* ty=int32 */;
    %275 = cast(%var_6544, dtype="int32") /* ty=Tensor[(1, 4), int32] */;
    %276 = reshape(%274, newshape=[]) /* ty=int32 */;
    %277 = reshape(%275, newshape=[1, 4]) /* ty=Tensor[(1, 4), int32] */;
    %278 = @func_6291() /* ty=(Tensor[(16, 12, 5), float32],) */;
    %279 = %272.0;
    %280 = @func_4279() /* ty=Tensor[(10, ?, 10), bool] */;
    %281 = @func_6279() /* ty=Tensor[(16, 12, 5), float32] */;
    %282 = %273.0;
    %283 = @func_196(%276, %277) /* ty=Tensor[(1, 4), int32] */;
    %284 = %278.0;
    (%279, %280, %281, %282, %283, %var_6543, %var_6544, %284)
  };
  %285(%var_6553, %var_6554) /* ty=(Tensor[(100), float32], Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(1, 4), int32], int32, Tensor[(1, 4), int32], Tensor[(16, 12, 5), float32]) */
}

def @func_14904(%var_14866: uint64, %var_14867: Tensor[(5, 15, 16), uint64]) -> (Tensor[(5, 15, 16), uint64], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  %286 = cast(%var_14866, dtype="uint64") /* ty=uint64 */;
  %287 = cast(%var_14867, dtype="uint64") /* ty=Tensor[(5, 15, 16), uint64] */;
  %288 = @func_8942() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %289 = multiply(%286, %287) /* ty=Tensor[(5, 15, 16), uint64] */;
  %290 = @func_14701() /* ty=Tensor[(16, 12, 5), float32] */;
  %291 = %288.0;
  (%289, %290, %291)
}

def @func_8207() -> (Tensor[(16, 12, 5), float32],) {
  %294 = fn () -> (Tensor[(16, 12, 5), float32],) {
    %292 = @func_7784() /* ty=(Tensor[(100), float32], Tensor[(720), float64], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */;
    %293 = %292.2;
    (%293,)
  };
  %294() /* ty=(Tensor[(16, 12, 5), float32],) */
}

def @func_11752(%var_11750: Tensor[(4), int32]) -> (Tensor[(100), float32], Tensor[(100), float64], Tensor[(4), int32]) {
  @func_11749(%var_11750) /* ty=(Tensor[(100), float32], Tensor[(100), float64], Tensor[(4), int32]) */
}

def @func_18874() -> (Tensor[(720), float64], Tensor[(100), float64], Tensor[(11, 14, 15), bool], int32) {
  %302 = fn () -> (Tensor[(720), float64], Tensor[(100), float64], Tensor[(11, 14, 15), bool], int32) {
    %295 = @func_13542() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(100), float64]) */;
    %296 = cast(-5 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %297 = reshape(%296, newshape=[]) /* ty=int32 */;
    %298 = @func_7921(%297) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(11, 14, 15), bool], int32, Tensor[(2310), int32]) */;
    %299 = @func_12740() /* ty=Tensor[(720), float64] */;
    %300 = %295.2;
    %301 = %298.3;
    (%299, %300, %301, -5 /* ty=int32 */)
  };
  %302() /* ty=(Tensor[(720), float64], Tensor[(100), float64], Tensor[(11, 14, 15), bool], int32) */
}

def @func_19002(%var_19000: Tensor[(5, 14, 15), float64]) -> (Tensor[(5, 14, 15), float64],) {
  @func_18999(%var_19000) /* ty=(Tensor[(5, 14, 15), float64],) */
}

def @func_21203() -> (Tensor[(16, 12, 5), float32], Tensor[(10, 8, 10), float64]) {
  %306 = fn () -> (Tensor[(16, 12, 5), float32], Tensor[(10, 8, 10), float64]) {
    %303 = @func_16171() /* ty=(Tensor[(10, 8, 10), float64], Tensor[(16, 12, 5), float32], Tensor[(10, 8, 10), bool]) */;
    %304 = @func_4178() /* ty=Tensor[(16, 12, 5), float32] */;
    %305 = %303.0;
    (%304, %305)
  };
  %306() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, 8, 10), float64]) */
}

def @func_15139() -> Tensor[(16, 12, 5), float32] {
  %307 = @func_12673() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %307.0
}

def @func_5150() -> (Tensor[(10, ?, 10), bool],) {
  @func_5148() /* ty=(Tensor[(10, ?, 10), bool],) */
}

def @func_7618() -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float64]) {
  %308 = cast(meta[relay.Constant][10] /* ty=Tensor[(100), float64] */, dtype="float64") /* ty=Tensor[(100), float64] */;
  %309 = reshape(%308, newshape=[10, 1, 10]) /* ty=Tensor[(10, 1, 10), float64] */;
  %310 = @func_7052() /* ty=Tensor[(16, 12, 5), float32] */;
  %311 = @func_2749(%309) /* ty=Tensor[(10, ?, 10), bool] */;
  (%310, %311, meta[relay.Constant][10] /* ty=Tensor[(100), float64] */)
}

def @func_20482() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(4), int32]) {
  %316 = fn () -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(4), int32]) {
    %312 = @func_12109() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(4), int32], Tensor[(968), float32]) */;
    %313 = @func_18771() /* ty=Tensor[(16, 12, 5), float32] */;
    %314 = @func_4178() /* ty=Tensor[(16, 12, 5), float32] */;
    %315 = %312.1;
    (%313, %314, %315)
  };
  %316() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(4), int32]) */
}

def @func_15141() -> Tensor[(16, 12, 5), float32] {
  @func_15139() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_5524() -> (Tensor[(16, 12, 5), float32],) {
  @func_5522() /* ty=(Tensor[(16, 12, 5), float32],) */
}

def @func_15565() -> (Tensor[(16, 12, 5), float32],) {
  %319 = fn () -> (Tensor[(16, 12, 5), float32],) {
    %317 = @func_13059() /* ty=(Tensor[(16, 12, 5), float32],) */;
    %318 = %317.0;
    (%318,)
  };
  %319() /* ty=(Tensor[(16, 12, 5), float32],) */
}

def @func_16994() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  %320 = @func_7641() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %321 = @func_4444() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %322 = %320.0;
  %323 = %321.0;
  (%322, %323)
}

def @func_12396() -> (int32, Tensor[(16, 12, 5), float32]) {
  %324 = @func_10770() /* ty=(Tensor[(100), float32], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), float64], int32, int32, Tensor[(4), int32]) */;
  %325 = @func_8206() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %326 = %324.4;
  %327 = %325.0;
  (%326, %327)
}

def @func_4116(%var_4099: int16, %var_4100: Tensor[(2, 11, 1), int16]) -> (Tensor[(2, 11, 1), bool],) {
  %328 = cast(%var_4099, dtype="bool") /* ty=bool */;
  %329 = cast(%var_4100, dtype="bool") /* ty=Tensor[(2, 11, 1), bool] */;
  %330 = less(%328, %329) /* ty=Tensor[(2, 11, 1), bool] */;
  (%330,)
}

def @func_19866() -> Tensor[(16, 12, 5), float32] {
  %332 = fn () -> Tensor[(16, 12, 5), float32] {
    %331 = @func_9202() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
    %331.0
  };
  %332() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_13013(%var_13006: Tensor[(234, 2), uint64]) -> (Tensor[(13, 14, 8), float32], Tensor[(13, 14, 8), float64], int32, Tensor[(234, 2), uint64]) {
  %333 = cast(meta[relay.Constant][11] /* ty=Tensor[(13, 14, 1), float32] */, dtype="float32") /* ty=Tensor[(13, 14, 1), float32] */;
  %334 = cast(meta[relay.Constant][12] /* ty=Tensor[(13, 14, 8), float32] */, dtype="float32") /* ty=Tensor[(13, 14, 8), float32] */;
  %335 = cast(meta[relay.Constant][12] /* ty=Tensor[(13, 14, 8), float32] */, dtype="float32") /* ty=Tensor[(13, 14, 8), float32] */;
  %336 = asinh(%335) /* ty=Tensor[(13, 14, 8), float32] */;
  %337 = cast(%336, dtype="float64") /* ty=Tensor[(13, 14, 8), float64] */;
  %338 = cast(%var_13006, dtype="uint64") /* ty=Tensor[(234, 2), uint64] */;
  %339 = reshape(%338, newshape=[9, 13, 4]) /* ty=Tensor[(9, 13, 4), uint64] */;
  %340 = @func_4870(%339) /* ty=(Tensor[(9, 13, 4), uint16], Tensor[(1, 4), int32], int32, Tensor[(4), int32], Tensor[(9, 13, 4), float64], Tensor[(9, 13, 4), float64], Tensor[(4), int32], Tensor[(7, 14), uint16]) */;
  %341 = floor_divide(%333, %334) /* ty=Tensor[(13, 14, 8), float32] */;
  %342 = acos(%337) /* ty=Tensor[(13, 14, 8), float64] */;
  %343 = %340.2;
  (%341, %342, %343, %var_13006)
}

def @func_9466() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  @func_9464() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */
}

def @func_7494() -> Tensor[(16, 12, 5), float32] {
  @func_7492() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_10313() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  @func_10311() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */
}

def @func_4927() -> Tensor[(10, ?, 10), bool] {
  @func_4925() /* ty=Tensor[(10, ?, 10), bool] */
}

def @func_11205() -> Tensor[(100), float32] {
  @func_11203() /* ty=Tensor[(100), float32] */
}

def @func_9797() -> Tensor[(16, 12, 5), float32] {
  %344 = @func_8541() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), float64]) */;
  %344.0
}

def @func_18827() -> (Tensor[(10, ?, 10), bool], Tensor[(100), float32]) {
  %345 = @func_18107() /* ty=(Tensor[(100), float32], Tensor[(100), float32], Tensor[(16, 12, 5), float32]) */;
  %346 = @func_6137() /* ty=Tensor[(10, ?, 10), bool] */;
  %347 = %345.0;
  (%346, %347)
}

def @func_6293() -> (Tensor[(16, 12, 5), float32],) {
  @func_6291() /* ty=(Tensor[(16, 12, 5), float32],) */
}

def @func_14210() -> (Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) {
  @func_14208() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) */
}

def @func_14703() -> Tensor[(16, 12, 5), float32] {
  @func_14701() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_6998() -> Tensor[(100), float32] {
  @func_4476() /* ty=Tensor[(100), float32] */
}

def @func_11267() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  %348 = @func_7971() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */;
  %349 = %348.0;
  %350 = @func_7946() /* ty=Tensor[(16, 12, 5), float32] */;
  (%349, %350)
}

def @func_21013(%var_21011: Tensor[(10, 2, 2), float64]) -> (Tensor[(10, 2, 2), float64], Tensor[(11, 14, 15), bool], int32, Tensor[(4, 1), int32]) {
  @func_21010(%var_21011) /* ty=(Tensor[(10, 2, 2), float64], Tensor[(11, 14, 15), bool], int32, Tensor[(4, 1), int32]) */
}

def @func_5917() -> Tensor[(100), float32] {
  @func_5915() /* ty=Tensor[(100), float32] */
}

def @func_8471(%var_8460: Tensor[(1, 968), float32]) -> (Tensor[(10, ?, 10), bool], Tensor[(9, 2, 14), float32], Tensor[(195), float32], Tensor[(4), int32], Tensor[(98, 1), uint16], Tensor[(1, 968), float32]) {
  %351 = cast(meta[relay.Constant][13] /* ty=Tensor[(195), float32] */, dtype="float32") /* ty=Tensor[(195), float32] */;
  %352 = cast(meta[relay.Constant][14] /* ty=Tensor[(4), int32] */, dtype="int32") /* ty=Tensor[(4), int32] */;
  %353 = cast(meta[relay.Constant][15] /* ty=Tensor[(98, 1), uint16] */, dtype="uint16") /* ty=Tensor[(98, 1), uint16] */;
  %354 = cast(%var_8460, dtype="float32") /* ty=Tensor[(1, 968), float32] */;
  %355 = reshape(%351, newshape=[195]) /* ty=Tensor[(195), float32] */;
  %356 = reshape(%352, newshape=[1, 4]) /* ty=Tensor[(1, 4), int32] */;
  %357 = reshape(%353, newshape=[98]) /* ty=Tensor[(98), uint16] */;
  %358 = reshape(%354, newshape=[968]) /* ty=Tensor[(968), float32] */;
  %359 = @func_4757(%355, %356, %357, %358) /* ty=(Tensor[(195), float32], Tensor[(1, 4), int32], Tensor[(98), uint32], Tensor[(10, ?, 10), bool], Tensor[(9, 2, 14), float32], Tensor[(6, 42), float32], Tensor[(100), float32], Tensor[(11, 8, 11), float32], Tensor[(968), float32], Tensor[(10, ?, 10), bool]) */;
  %360 = @func_6137() /* ty=Tensor[(10, ?, 10), bool] */;
  %361 = %359.4;
  (%360, %361, meta[relay.Constant][13] /* ty=Tensor[(195), float32] */, meta[relay.Constant][14] /* ty=Tensor[(4), int32] */, meta[relay.Constant][15] /* ty=Tensor[(98, 1), uint16] */, %var_8460)
}

def @func_21120() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  @func_21118() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */
}

def @func_9048(%var_9046: int8) -> (Tensor[(14, 13, 10), bool], Tensor[(14, 13, 10), float32]) {
  @func_9045(%var_9046) /* ty=(Tensor[(14, 13, 10), bool], Tensor[(14, 13, 10), float32]) */
}

def @func_8438() -> Tensor[(10, ?, 10), bool] {
  %362 = fn () -> Tensor[(10, ?, 10), bool] {
    @func_5507() /* ty=Tensor[(10, ?, 10), bool] */
  };
  %362() /* ty=Tensor[(10, ?, 10), bool] */
}

def @func_7552(%var_7551: Tensor[(468), uint64]) -> (Tensor[(16, 12, 5), float32], Tensor[(9, 13, 4), uint16], Tensor[(468), uint64], Tensor[(16, 12, 5), float32]) {
  %370 = fn (%var_7544: Tensor[(468), uint64]) -> (Tensor[(16, 12, 5), float32], Tensor[(9, 13, 4), uint16], Tensor[(468), uint64], Tensor[(16, 12, 5), float32]) {
    %363 = cast(%var_7544, dtype="uint64") /* ty=Tensor[(468), uint64] */;
    %364 = reshape(%363, newshape=[9, 13, 4]) /* ty=Tensor[(9, 13, 4), uint64] */;
    %365 = @func_4870(%364) /* ty=(Tensor[(9, 13, 4), uint16], Tensor[(1, 4), int32], int32, Tensor[(4), int32], Tensor[(9, 13, 4), float64], Tensor[(9, 13, 4), float64], Tensor[(4), int32], Tensor[(7, 14), uint16]) */;
    %366 = @func_5780() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(12, 10, 6), float64], Tensor[(720), float64], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
    %367 = @func_4405() /* ty=Tensor[(16, 12, 5), float32] */;
    %368 = %365.0;
    %369 = %366.1;
    (%367, %368, %var_7544, %369)
  };
  %370(%var_7551) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(9, 13, 4), uint16], Tensor[(468), uint64], Tensor[(16, 12, 5), float32]) */
}

def @func_14126() -> (Tensor[(16, 12, 5), float32],) {
  %371 = @func_9137() /* ty=(Tensor[(100), float32], Tensor[(16, 12, 5), float32], Tensor[(100), float32], Tensor[(16, 12, 5), float32]) */;
  %372 = %371.1;
  (%372,)
}

def @func_19130() -> (Tensor[(100), float32],) {
  %373 = @func_14646() /* ty=(int32, Tensor[(1, 4), int32], Tensor[(4), int32], Tensor[(100), float32], Tensor[(100), float32]) */;
  %374 = %373.3;
  (%374,)
}

def @func_8195(%var_8193: int32, %var_8194: Tensor[(1, 4), int32]) -> (Tensor[(100), float64], Tensor[(1, 4), int32], int32, Tensor[(1, 4), int32]) {
  %382 = fn (%var_8180: int32, %var_8181: Tensor[(1, 4), int32]) -> (Tensor[(100), float64], Tensor[(1, 4), int32], int32, Tensor[(1, 4), int32]) {
    %375 = @func_7618() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float64]) */;
    %376 = cast(%var_8180, dtype="int32") /* ty=int32 */;
    %377 = cast(%var_8181, dtype="int32") /* ty=Tensor[(1, 4), int32] */;
    %378 = reshape(%376, newshape=[]) /* ty=int32 */;
    %379 = reshape(%377, newshape=[1, 4]) /* ty=Tensor[(1, 4), int32] */;
    %380 = %375.2;
    %381 = @func_196(%378, %379) /* ty=Tensor[(1, 4), int32] */;
    (%380, %381, %var_8180, %var_8181)
  };
  %382(%var_8193, %var_8194) /* ty=(Tensor[(100), float64], Tensor[(1, 4), int32], int32, Tensor[(1, 4), int32]) */
}

def @func_16925() -> Tensor[(16, 12, 5), float32] {
  %383 = @func_9137() /* ty=(Tensor[(100), float32], Tensor[(16, 12, 5), float32], Tensor[(100), float32], Tensor[(16, 12, 5), float32]) */;
  %383.3
}

def @func_20977() -> (Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) {
  %386 = fn () -> (Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) {
    %384 = @func_13864() /* ty=Tensor[(10, ?, 10), bool] */;
    %385 = @func_7052() /* ty=Tensor[(16, 12, 5), float32] */;
    (%384, %385)
  };
  %386() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) */
}

def @func_19753() -> (Tensor[(16, 12, 5), float32], Tensor[(100), float32], Tensor[(10, ?, 10), bool], Tensor[(195), float32], Tensor[(968), float32], Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  @func_19751() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(100), float32], Tensor[(10, ?, 10), bool], Tensor[(195), float32], Tensor[(968), float32], Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */
}

def @func_21085() -> Tensor[(16, 12, 5), float32] {
  %387 = fn () -> Tensor[(16, 12, 5), float32] {
    @func_20424() /* ty=Tensor[(16, 12, 5), float32] */
  };
  %387() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_10212() -> Tensor[(10, ?, 10), bool] {
  %389 = fn () -> Tensor[(10, ?, 10), bool] {
    %388 = @func_5148() /* ty=(Tensor[(10, ?, 10), bool],) */;
    %388.0
  };
  %389() /* ty=Tensor[(10, ?, 10), bool] */
}

def @func_9204() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  @func_9202() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */
}

def @func_14208() -> (Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) {
  %390 = @func_12813() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) */;
  %391 = @func_4925() /* ty=Tensor[(10, ?, 10), bool] */;
  %392 = %390.1;
  (%391, %392)
}

def @func_20644() -> (Tensor[(10, 8, 10), float32], Tensor[(16, 12, 5), float32]) {
  %393 = @func_8644() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, 8, 10), int32], Tensor[(16, 12, 5), float32]) */;
  %394 = %393.1;
  %395 = cast(%394, dtype="float32") /* ty=Tensor[(10, 8, 10), float32] */;
  %396 = @func_20325() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %397 = cos(%395) /* ty=Tensor[(10, 8, 10), float32] */;
  %398 = %396.0;
  (%397, %398)
}

def @func_14392(%var_14378: Tensor[(2, 2), int32], %var_14387: Tensor[(39, 5), float32]) -> (Tensor[(16, 12, 5), float32], Tensor[(1, 4), int32], int32, Tensor[(2, 2), int32], Tensor[(10, 8, 10), int32], Tensor[(4), int32], Tensor[(39, 5), float32]) {
  %399 = @func_12199() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %400 = cast(5 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %401 = cast(%var_14378, dtype="int32") /* ty=Tensor[(2, 2), int32] */;
  %402 = reshape(%400, newshape=[]) /* ty=int32 */;
  %403 = reshape(%401, newshape=[1, 4]) /* ty=Tensor[(1, 4), int32] */;
  %404 = @func_7262() /* ty=(Tensor[(10, 8, 10), int32], Tensor[(10, 8, 10), float32]) */;
  %405 = cast(%var_14387, dtype="float32") /* ty=Tensor[(39, 5), float32] */;
  %406 = reshape(%405, newshape=[195]) /* ty=Tensor[(195), float32] */;
  %407 = @func_7105(%406) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(4), int32], Tensor[(195), float32], Tensor[(4), int32], Tensor[(16, 12, 5), float32]) */;
  %408 = %399.0;
  %409 = @func_196(%402, %403) /* ty=Tensor[(1, 4), int32] */;
  %410 = %404.0;
  %411 = %407.1;
  (%408, %409, 5 /* ty=int32 */, %var_14378, %410, %411, %var_14387)
}

def @func_17662(%var_17637: Tensor[(195), float32]) -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(195), float32], Tensor[(25, 4), float64]) {
  %412 = @func_7641() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %413 = @func_13958() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %414 = cast(%var_17637, dtype="float32") /* ty=Tensor[(195), float32] */;
  %415 = cast(meta[relay.Constant][16] /* ty=Tensor[(25, 4), float64] */, dtype="float64") /* ty=Tensor[(25, 4), float64] */;
  %416 = reshape(%414, newshape=[39, 5]) /* ty=Tensor[(39, 5), float32] */;
  %417 = reshape(%415, newshape=[1, 100]) /* ty=Tensor[(1, 100), float64] */;
  %418 = @func_6399(%416, %417) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(11, 8, 11), float32], Tensor[(39, 5), float32], Tensor[(4), int32], Tensor[(98), uint16], Tensor[(1, 968), float32], Tensor[(10, ?, 10), bool], Tensor[(1, 100), float64]) */;
  %419 = %412.0;
  %420 = %413.0;
  %421 = %418.7;
  (%419, %420, %421, %var_17637, meta[relay.Constant][16] /* ty=Tensor[(25, 4), float64] */)
}

def @func_20003() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  %422 = @func_7492() /* ty=Tensor[(16, 12, 5), float32] */;
  %423 = @func_15012() /* ty=Tensor[(16, 12, 5), float32] */;
  (%422, %423)
}

def @func_8774() -> (Tensor[(15, ?, 11), float64], Tensor[(16, 12, 5), float32]) {
  %424 = @func_8334() /* ty=(Tensor[(15, ?, 11), int16],) */;
  %425 = %424.0;
  %426 = cast(%425, dtype="float64") /* ty=Tensor[(15, ?, 11), float64] */;
  %427 = @func_8206() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %428 = atan(%426) /* ty=Tensor[(15, ?, 11), float64] */;
  %429 = %427.0;
  (%428, %429)
}

def @func_14648() -> (int32, Tensor[(1, 4), int32], Tensor[(4), int32], Tensor[(100), float32], Tensor[(100), float32]) {
  @func_14646() /* ty=(int32, Tensor[(1, 4), int32], Tensor[(4), int32], Tensor[(100), float32], Tensor[(100), float32]) */
}

def @func_9139() -> (Tensor[(100), float32], Tensor[(16, 12, 5), float32], Tensor[(100), float32], Tensor[(16, 12, 5), float32]) {
  @func_9137() /* ty=(Tensor[(100), float32], Tensor[(16, 12, 5), float32], Tensor[(100), float32], Tensor[(16, 12, 5), float32]) */
}

def @func_13320(%var_13280: Tensor[(2002), float32], %var_13284: Tensor[(4), int32]) -> (Tensor[(16, 12, 5), float32], Tensor[(11, 14, 13), float32], Tensor[(2002), float32], Tensor[(100), float32], int32, Tensor[(4), int32], Tensor[(10, 8, 10), float32]) {
  %430 = cast(%var_13280, dtype="float32") /* ty=Tensor[(2002), float32] */;
  %431 = cast(%var_13280, dtype="float32") /* ty=Tensor[(2002), float32] */;
  %432 = reshape(%430, newshape=[11, 14, 13]) /* ty=Tensor[(11, 14, 13), float32] */;
  %433 = reshape(%431, newshape=[11, 14, 13]) /* ty=Tensor[(11, 14, 13), float32] */;
  %434 = @func_6985(%432, %433) /* ty=(Tensor[(11, 14, 13), float32], Tensor[(10, ?, 10), bool], Tensor[(11, 14, 13), uint64]) */;
  %435 = cast(3 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %436 = cast(%var_13284, dtype="int32") /* ty=Tensor[(4), int32] */;
  %437 = reshape(%435, newshape=[]) /* ty=int32 */;
  %438 = reshape(%436, newshape=[4]) /* ty=Tensor[(4), int32] */;
  %439 = @func_9587(%437, %438) /* ty=(Tensor[(100), float32], Tensor[(11, 14, 15), bool], int32, Tensor[(2310), int32], Tensor[(1, 4), int32], Tensor[(4), int32]) */;
  %440 = @func_7262() /* ty=(Tensor[(10, 8, 10), int32], Tensor[(10, 8, 10), float32]) */;
  %441 = @func_11541() /* ty=Tensor[(16, 12, 5), float32] */;
  %442 = %434.0;
  %443 = %439.0;
  %444 = %440.1;
  (%441, %442, %var_13280, %443, 3 /* ty=int32 */, %var_13284, %444)
}

def @func_19580(%var_19579: uint64) -> (Tensor[(2, 1, 5), bool],) {
  %448 = fn (%var_19561: uint64) -> (Tensor[(2, 1, 5), bool],) {
    %445 = cast(%var_19561, dtype="bool") /* ty=bool */;
    %446 = cast(meta[relay.Constant][17] /* ty=Tensor[(2, 1, 5), uint64] */, dtype="bool") /* ty=Tensor[(2, 1, 5), bool] */;
    %447 = less_equal(%445, %446) /* ty=Tensor[(2, 1, 5), bool] */;
    (%447,)
  };
  %448(%var_19579) /* ty=(Tensor[(2, 1, 5), bool],) */
}

def @func_20544() -> (Tensor[(16, 12, 5), float32],) {
  @func_20542() /* ty=(Tensor[(16, 12, 5), float32],) */
}

def @func_14920() -> Tensor[(16, 12, 5), float32] {
  @func_14918() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_19132() -> (Tensor[(100), float32],) {
  @func_19130() /* ty=(Tensor[(100), float32],) */
}

def @func_16868() -> Tensor[(10, 8, 10), float32] {
  %449 = @func_7262() /* ty=(Tensor[(10, 8, 10), int32], Tensor[(10, 8, 10), float32]) */;
  %449.1
}

def @func_16996() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  @func_16994() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */
}

def @func_5021() -> (Tensor[(16, 12, 5), float32],) {
  %450 = @func_4649() /* ty=Tensor[(16, 12, 5), float32] */;
  (%450,)
}

def @func_21010(%var_21001: Tensor[(10, 2, 2), float64]) -> (Tensor[(10, 2, 2), float64], Tensor[(11, 14, 15), bool], int32, Tensor[(4, 1), int32]) {
  %451 = cast(%var_21001, dtype="float64") /* ty=Tensor[(10, 2, 2), float64] */;
  %452 = cast(-8 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %453 = cast(meta[relay.Constant][18] /* ty=Tensor[(4, 1), int32] */, dtype="int32") /* ty=Tensor[(4, 1), int32] */;
  %454 = reshape(%452, newshape=[]) /* ty=int32 */;
  %455 = reshape(%453, newshape=[4]) /* ty=Tensor[(4), int32] */;
  %456 = @func_9587(%454, %455) /* ty=(Tensor[(100), float32], Tensor[(11, 14, 15), bool], int32, Tensor[(2310), int32], Tensor[(1, 4), int32], Tensor[(4), int32]) */;
  %457 = atan(%451) /* ty=Tensor[(10, 2, 2), float64] */;
  %458 = %456.1;
  (%457, %458, -8 /* ty=int32 */, meta[relay.Constant][18] /* ty=Tensor[(4, 1), int32] */)
}

def @func_13764() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  %463 = fn () -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
    %459 = @func_4444() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
    %460 = @func_7784() /* ty=(Tensor[(100), float32], Tensor[(720), float64], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */;
    %461 = %459.0;
    %462 = %460.2;
    (%461, %462)
  };
  %463() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */
}

def @func_16003(%var_15966: Tensor[(300), bool], %var_15967: Tensor[(1600), bool], %var_15970: Tensor[(260), uint64], %var_15971: Tensor[(195), float32], %var_15991: Tensor[(336), int16]) -> (Tensor[(16, 12, 5), float32], Tensor[(720), float64], Tensor[(968), float32], Tensor[(10, ?, 10), bool], Tensor[(300), bool], Tensor[(1600), bool], Tensor[(100), float32], Tensor[(260), uint64], Tensor[(195), float32], Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(336), int16]) {
  %464 = @func_13059() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %465 = @func_6485() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(720), float64], Tensor[(10, ?, 10), bool]) */;
  %466 = @func_13793() /* ty=(Tensor[(968), float32],) */;
  %467 = cast(%var_15966, dtype="bool") /* ty=Tensor[(300), bool] */;
  %468 = cast(%var_15967, dtype="bool") /* ty=Tensor[(1600), bool] */;
  %469 = reshape(%467, newshape=[300]) /* ty=Tensor[(300), bool] */;
  %470 = reshape(%468, newshape=[10, 16, 10]) /* ty=Tensor[(10, 16, 10), bool] */;
  %471 = @func_8141(%469, %470) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, 3, 10), bool], Tensor[(300), bool], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(10, 16, 10), uint8], Tensor[(10, 16, 10), bool], Tensor[(16, 12, 5), float32]) */;
  %472 = cast(%var_15970, dtype="uint64") /* ty=Tensor[(260), uint64] */;
  %473 = cast(%var_15971, dtype="float32") /* ty=Tensor[(195), float32] */;
  %474 = reshape(%472, newshape=[260]) /* ty=Tensor[(260), uint64] */;
  %475 = reshape(%473, newshape=[195]) /* ty=Tensor[(195), float32] */;
  %476 = @func_8261(%474, %475) /* ty=(Tensor[(15, ?, 11), float64], Tensor[(16, 12, 5), float32], Tensor[(260), uint64], Tensor[(195), float32], Tensor[(100), float32], Tensor[(10, ?, 10), bool]) */;
  %477 = cast(%var_15991, dtype="int16") /* ty=Tensor[(336), int16] */;
  %478 = cast(%var_15991, dtype="int16") /* ty=Tensor[(336), int16] */;
  %479 = @func_12327() /* ty=Tensor[(10, ?, 10), bool] */;
  %480 = cast(%479, dtype="float32") /* ty=Tensor[(10, ?, 10), float32] */;
  %481 = reshape(%477, newshape=[3, 8, 14]) /* ty=Tensor[(3, 8, 14), int16] */;
  %482 = reshape(%478, newshape=[3, 8, 14]) /* ty=Tensor[(3, 8, 14), int16] */;
  %483 = reshape(%480, newshape=[100]) /* ty=Tensor[(100), float32] */;
  %484 = @func_5874(%481, %482, %483) /* ty=(Tensor[(3, 8, 14), int16], Tensor[(13, 10, 2), bool], Tensor[(260), uint64], Tensor[(4), int32], Tensor[(4, 1), int32], Tensor[(100), float32], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(3, 8, 14), float32], Tensor[(16, 12, 5), bool]) */;
  %485 = %464.0;
  %486 = %465.1;
  %487 = %466.0;
  %488 = %471.4;
  %489 = %476.4;
  %490 = %484.7;
  (%485, %486, %487, %488, %var_15966, %var_15967, %489, %var_15970, %var_15971, %479, %490, %var_15991)
}

def @func_18237() -> (Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) {
  %494 = fn () -> (Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) {
    %491 = @func_6291() /* ty=(Tensor[(16, 12, 5), float32],) */;
    %492 = @func_10211() /* ty=Tensor[(10, ?, 10), bool] */;
    %493 = %491.0;
    (%492, %493)
  };
  %494() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) */
}

def @func_5148() -> (Tensor[(10, ?, 10), bool],) {
  %495 = @func_4925() /* ty=Tensor[(10, ?, 10), bool] */;
  (%495,)
}

def @func_4445() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  %499 = fn () -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
    %496 = @func_4350() /* ty=(Tensor[(16, 12, 5), float32],) */;
    %497 = @func_4405() /* ty=Tensor[(16, 12, 5), float32] */;
    %498 = %496.0;
    (%497, %498)
  };
  %499() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */
}

def @func_12414() -> (Tensor[(16, 12, 5), float32],) {
  %500 = @func_4444() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %501 = %500.0;
  (%501,)
}

def @func_10872(%var_10851: Tensor[(4), int32]) -> (Tensor[(15, ?, 11), int16], Tensor[(4), int32], Tensor[(126), uint32], Tensor[(4), int32], Tensor[(10, ?, 10), bool], Tensor[(195), float32], Tensor[(100), float64]) {
  %502 = @func_8334() /* ty=(Tensor[(15, ?, 11), int16],) */;
  %503 = cast(meta[relay.Constant][19] /* ty=Tensor[(126), uint32] */, dtype="uint32") /* ty=Tensor[(126), uint32] */;
  %504 = cast(meta[relay.Constant][19] /* ty=Tensor[(126), uint32] */, dtype="uint32") /* ty=Tensor[(126), uint32] */;
  %505 = cast(%var_10851, dtype="int32") /* ty=Tensor[(4), int32] */;
  %506 = reshape(%503, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), uint32] */;
  %507 = reshape(%504, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), uint32] */;
  %508 = reshape(%505, newshape=[4]) /* ty=Tensor[(4), int32] */;
  %509 = @func_283(%506, %507, %508) /* ty=(Tensor[(1, 4), int32], int32, Tensor[(4), int32], Tensor[(14, 3, 3), float64], Tensor[(1, 4), int32], Tensor[(1, 4), int32]) */;
  %510 = cast(meta[relay.Constant][20] /* ty=Tensor[(195), float32] */, dtype="float32") /* ty=Tensor[(195), float32] */;
  %511 = cast(meta[relay.Constant][21] /* ty=Tensor[(100), float64] */, dtype="float64") /* ty=Tensor[(100), float64] */;
  %512 = reshape(%510, newshape=[39, 5]) /* ty=Tensor[(39, 5), float32] */;
  %513 = reshape(%511, newshape=[1, 100]) /* ty=Tensor[(1, 100), float64] */;
  %514 = @func_6399(%512, %513) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(11, 8, 11), float32], Tensor[(39, 5), float32], Tensor[(4), int32], Tensor[(98), uint16], Tensor[(1, 968), float32], Tensor[(10, ?, 10), bool], Tensor[(1, 100), float64]) */;
  %515 = %502.0;
  %516 = %509.2;
  %517 = %514.7;
  (%515, %516, meta[relay.Constant][19] /* ty=Tensor[(126), uint32] */, %var_10851, %517, meta[relay.Constant][20] /* ty=Tensor[(195), float32] */, meta[relay.Constant][21] /* ty=Tensor[(100), float64] */)
}

def @func_2840(%var_2834: Tensor[(13, 10, 2), uint64], %var_2835: Tensor[(13, 10, 2), uint64]) -> (Tensor[(13, 10, 2), bool],) {
  %518 = cast(%var_2835, dtype="bool") /* ty=Tensor[(13, 10, 2), bool] */;
  %519 = shape_of(%var_2834, dtype="int32") /* ty=Tensor[(3), int32] */;
  %520 = cast(%var_2834, dtype="bool") /* ty=Tensor[(13, 10, 2), bool] */;
  %521 = dyn.reshape(%518, %519, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %522 = greater_equal(%520, %521) /* ty=Tensor[(13, 10, 2), bool] */;
  (%522,)
}

def @func_14128() -> (Tensor[(16, 12, 5), float32],) {
  @func_14126() /* ty=(Tensor[(16, 12, 5), float32],) */
}

def @func_8943() -> (Tensor[(16, 12, 5), float32],) {
  %524 = fn () -> (Tensor[(16, 12, 5), float32],) {
    %523 = @func_7946() /* ty=Tensor[(16, 12, 5), float32] */;
    (%523,)
  };
  %524() /* ty=(Tensor[(16, 12, 5), float32],) */
}

def @func_17766() -> (Tensor[(16, 12, 5), float32],) {
  %527 = fn () -> (Tensor[(16, 12, 5), float32],) {
    %525 = @func_15844() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(100), float32]) */;
    %526 = %525.0;
    (%526,)
  };
  %527() /* ty=(Tensor[(16, 12, 5), float32],) */
}

def @func_13795() -> (Tensor[(968), float32],) {
  @func_13793() /* ty=(Tensor[(968), float32],) */
}

def @func_11772() -> (Tensor[(10, ?, 10), bool],) {
  @func_11770() /* ty=(Tensor[(10, ?, 10), bool],) */
}

def @func_6508() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  %528 = @func_5780() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(12, 10, 6), float64], Tensor[(720), float64], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %529 = %528.1;
  %530 = @func_4405() /* ty=Tensor[(16, 12, 5), float32] */;
  (%529, %530)
}

def @func_5265() -> (Tensor[(16, 12, 5), float32], Tensor[(100), float32]) {
  %531 = @func_4405() /* ty=Tensor[(16, 12, 5), float32] */;
  %532 = @func_4476() /* ty=Tensor[(100), float32] */;
  (%531, %532)
}

def @func_12144(%var_12142: int32) -> (Tensor[(10, ?, 10), int8], Tensor[(11, 14, 15), bool], int32, Tensor[(2310), int32]) {
  @func_12141(%var_12142) /* ty=(Tensor[(10, ?, 10), int8], Tensor[(11, 14, 15), bool], int32, Tensor[(2310), int32]) */
}

def @func_13904() -> (Tensor[(16, 12, 5), float32],) {
  %534 = fn () -> (Tensor[(16, 12, 5), float32],) {
    %533 = @func_13837() /* ty=Tensor[(16, 12, 5), float32] */;
    (%533,)
  };
  %534() /* ty=(Tensor[(16, 12, 5), float32],) */
}

def @func_14983(%var_14981: Tensor[(260), uint64], %var_14982: Tensor[(195), float32]) -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(260), uint64], Tensor[(195), float32]) {
  %545 = fn (%var_14977: Tensor[(260), uint64], %var_14978: Tensor[(195), float32]) -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(260), uint64], Tensor[(195), float32]) {
    %535 = @func_13699() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(252), float32], Tensor[(252), float32]) */;
    %536 = @func_11517() /* ty=(Tensor[(16, 12, 5), float32],) */;
    %537 = cast(%var_14977, dtype="uint64") /* ty=Tensor[(260), uint64] */;
    %538 = cast(%var_14978, dtype="float32") /* ty=Tensor[(195), float32] */;
    %539 = reshape(%537, newshape=[260]) /* ty=Tensor[(260), uint64] */;
    %540 = reshape(%538, newshape=[195]) /* ty=Tensor[(195), float32] */;
    %541 = @func_8261(%539, %540) /* ty=(Tensor[(15, ?, 11), float64], Tensor[(16, 12, 5), float32], Tensor[(260), uint64], Tensor[(195), float32], Tensor[(100), float32], Tensor[(10, ?, 10), bool]) */;
    %542 = %535.0;
    %543 = %536.0;
    %544 = %541.5;
    (%542, %543, %544, %var_14977, %var_14978)
  };
  %545(%var_14981, %var_14982) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(260), uint64], Tensor[(195), float32]) */
}

def @func_13832() -> Tensor[(10, ?, 10), bool] {
  %547 = fn () -> Tensor[(10, ?, 10), bool] {
    %546 = @func_5148() /* ty=(Tensor[(10, ?, 10), bool],) */;
    %546.0
  };
  %547() /* ty=Tensor[(10, ?, 10), bool] */
}

def @func_8542() -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), float64]) {
  %554 = fn () -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), float64]) {
    %548 = @func_5522() /* ty=(Tensor[(16, 12, 5), float32],) */;
    %549 = @func_7716() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), int8]) */;
    %550 = %549.1;
    %551 = cast(%550, dtype="float64") /* ty=Tensor[(10, ?, 10), float64] */;
    %552 = %548.0;
    %553 = rsqrt(%551) /* ty=Tensor[(10, ?, 10), float64] */;
    (%552, %553)
  };
  %554() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), float64]) */
}

def @func_20326() -> (Tensor[(16, 12, 5), float32],) {
  %557 = fn () -> (Tensor[(16, 12, 5), float32],) {
    %555 = @func_5780() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(12, 10, 6), float64], Tensor[(720), float64], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
    %556 = %555.5;
    (%556,)
  };
  %557() /* ty=(Tensor[(16, 12, 5), float32],) */
}

def @func_7641() -> (Tensor[(16, 12, 5), float32],) {
  %558 = @func_4178() /* ty=Tensor[(16, 12, 5), float32] */;
  (%558,)
}

def @func_16198() -> (Tensor[(16, 12, 5), float32],) {
  @func_16196() /* ty=(Tensor[(16, 12, 5), float32],) */
}

def @func_15173() -> (Tensor[(16, 12, 5), float32],) {
  %559 = @func_11088() /* ty=Tensor[(16, 12, 5), float32] */;
  (%559,)
}

def @func_11965() -> (Tensor[(16, 12, 5), float32],) {
  @func_11963() /* ty=(Tensor[(16, 12, 5), float32],) */
}

def @func_12416() -> (Tensor[(16, 12, 5), float32],) {
  @func_12414() /* ty=(Tensor[(16, 12, 5), float32],) */
}

def @func_20870(%var_20868: int32) -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(1, 4), int32], int32, Tensor[(16, 12, 5), float32], Tensor[(10, 8, 10), float32], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) {
  @func_20867(%var_20868) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(1, 4), int32], int32, Tensor[(16, 12, 5), float32], Tensor[(10, 8, 10), float32], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */
}

def @func_14538() -> (Tensor[(16, 12, 5), float32], Tensor[(100), float32], Tensor[(100), float32]) {
  %560 = @func_10496() /* ty=(Tensor[(720), float64], Tensor[(100), float32]) */;
  %561 = @func_11088() /* ty=Tensor[(16, 12, 5), float32] */;
  %562 = @func_5915() /* ty=Tensor[(100), float32] */;
  %563 = %560.1;
  (%561, %562, %563)
}

def @func_15846() -> (Tensor[(16, 12, 5), float32], Tensor[(100), float32]) {
  @func_15844() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(100), float32]) */
}

def @func_12760() -> Tensor[(10, ?, 10), bool] {
  %565 = fn () -> Tensor[(10, ?, 10), bool] {
    %564 = @func_5148() /* ty=(Tensor[(10, ?, 10), bool],) */;
    %564.0
  };
  %565() /* ty=Tensor[(10, ?, 10), bool] */
}

def @func_9072() -> (Tensor[(16, 12, 5), float32],) {
  %566 = @func_4405() /* ty=Tensor[(16, 12, 5), float32] */;
  (%566,)
}

def @func_12674() -> (Tensor[(16, 12, 5), float32],) {
  %569 = fn () -> (Tensor[(16, 12, 5), float32],) {
    %567 = @func_5522() /* ty=(Tensor[(16, 12, 5), float32],) */;
    %568 = %567.0;
    (%568,)
  };
  %569() /* ty=(Tensor[(16, 12, 5), float32],) */
}

def @func_9353(%var_9351: Tensor[(13, 15), float32]) -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(13, 15), float32], Tensor[(4), int32], Tensor[(98), uint16], Tensor[(968), float32], Tensor[(15, 7, 3), float64]) {
  @func_9350(%var_9351) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(13, 15), float32], Tensor[(4), int32], Tensor[(98), uint16], Tensor[(968), float32], Tensor[(15, 7, 3), float64]) */
}

def @func_16010(%var_16005: Tensor[(300), bool], %var_16006: Tensor[(1600), bool], %var_16007: Tensor[(260), uint64], %var_16008: Tensor[(195), float32], %var_16009: Tensor[(336), int16]) -> (Tensor[(16, 12, 5), float32], Tensor[(720), float64], Tensor[(968), float32], Tensor[(10, ?, 10), bool], Tensor[(300), bool], Tensor[(1600), bool], Tensor[(100), float32], Tensor[(260), uint64], Tensor[(195), float32], Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(336), int16]) {
  @func_16003(%var_16005, %var_16006, %var_16007, %var_16008, %var_16009) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(720), float64], Tensor[(968), float32], Tensor[(10, ?, 10), bool], Tensor[(300), bool], Tensor[(1600), bool], Tensor[(100), float32], Tensor[(260), uint64], Tensor[(195), float32], Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(336), int16]) */
}

def @func_16603() -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) {
  %570 = @func_6192() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(720), float64], Tensor[(16, 12, 5), float32]) */;
  %571 = %570.2;
  %572 = @func_13827() /* ty=Tensor[(10, ?, 10), bool] */;
  (%571, %572)
}

def @func_19931() -> (Tensor[(10, ?, 10), bool], Tensor[(4), int32], int32, Tensor[(100), float32]) {
  @func_19929() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(4), int32], int32, Tensor[(100), float32]) */
}

def @func_12329() -> Tensor[(10, ?, 10), bool] {
  @func_12327() /* ty=Tensor[(10, ?, 10), bool] */
}

def @func_16966(%var_16965: Tensor[(1200), uint64]) -> (Tensor[(100), float32], Tensor[(16, 12, 5), float32], uint64, Tensor[(1200), uint64]) {
  %581 = fn (%var_16949: Tensor[(1200), uint64]) -> (Tensor[(100), float32], Tensor[(16, 12, 5), float32], uint64, Tensor[(1200), uint64]) {
    %573 = @func_6042() /* ty=(Tensor[(100), float32],) */;
    %574 = cast(meta[relay.Constant][22] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %575 = cast(%var_16949, dtype="uint64") /* ty=Tensor[(1200), uint64] */;
    %576 = reshape(%574, newshape=[]) /* ty=uint64 */;
    %577 = reshape(%575, newshape=[5, 15, 16]) /* ty=Tensor[(5, 15, 16), uint64] */;
    %578 = @func_14904(%576, %577) /* ty=(Tensor[(5, 15, 16), uint64], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
    %579 = %573.0;
    %580 = %578.2;
    (%579, %580, meta[relay.Constant][22] /* ty=uint64 */, %var_16949)
  };
  %581(%var_16965) /* ty=(Tensor[(100), float32], Tensor[(16, 12, 5), float32], uint64, Tensor[(1200), uint64]) */
}

def @func_16605() -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) {
  @func_16603() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */
}

def @func_5173() -> Tensor[(10, ?, 10), bool] {
  %582 = @func_5148() /* ty=(Tensor[(10, ?, 10), bool],) */;
  %582.0
}

def @func_17323() -> (Tensor[(10, ?, 10), bool], Tensor[(100), float32]) {
  %583 = @func_9691() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) */;
  %584 = @func_6042() /* ty=(Tensor[(100), float32],) */;
  %585 = %583.0;
  %586 = %584.0;
  (%585, %586)
}

def @func_16718() -> (Tensor[(100), float32], Tensor[(968), float32], Tensor[(16, 12, 5), float32]) {
  @func_16716() /* ty=(Tensor[(100), float32], Tensor[(968), float32], Tensor[(16, 12, 5), float32]) */
}

def @func_17325() -> (Tensor[(10, ?, 10), bool], Tensor[(100), float32]) {
  @func_17323() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(100), float32]) */
}

def @func_7947() -> Tensor[(16, 12, 5), float32] {
  %588 = fn () -> Tensor[(16, 12, 5), float32] {
    %587 = @func_4350() /* ty=(Tensor[(16, 12, 5), float32],) */;
    %587.0
  };
  %588() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_12355() -> (Tensor[(100), float32], Tensor[(16, 12, 5), float32]) {
  %593 = fn () -> (Tensor[(100), float32], Tensor[(16, 12, 5), float32]) {
    %589 = @func_8724() /* ty=(Tensor[(100), float32], Tensor[(16, 12, 5), float32]) */;
    %590 = @func_9072() /* ty=(Tensor[(16, 12, 5), float32],) */;
    %591 = %589.0;
    %592 = %590.0;
    (%591, %592)
  };
  %593() /* ty=(Tensor[(100), float32], Tensor[(16, 12, 5), float32]) */
}

def @func_18658() -> (Tensor[(11, 4, 14), uint16],) {
  %594 = cast(meta[relay.Constant][23] /* ty=Tensor[(11, 4, 14), float64] */, dtype="float64") /* ty=Tensor[(11, 4, 14), float64] */;
  %595 = cosh(%594) /* ty=Tensor[(11, 4, 14), float64] */;
  %596 = cast(meta[relay.Constant][23] /* ty=Tensor[(11, 4, 14), float64] */, dtype="uint16") /* ty=Tensor[(11, 4, 14), uint16] */;
  %597 = shape_of(%595, dtype="int32") /* ty=Tensor[(3), int32] */;
  %598 = cast(%595, dtype="uint16") /* ty=Tensor[(11, 4, 14), uint16] */;
  %599 = dyn.reshape(%596, %597, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %600 = right_shift(%598, %599) /* ty=Tensor[(11, 4, 14), uint16] */;
  (%600,)
}

def @func_4630() -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) {
  %604 = fn () -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) {
    %601 = @func_4221() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float32]) */;
    %602 = %601.0;
    %603 = @func_4279() /* ty=Tensor[(10, ?, 10), bool] */;
    (%602, %603)
  };
  %604() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */
}

def @func_13974() -> (Tensor[(16, 12, 5), float32],) {
  @func_13972() /* ty=(Tensor[(16, 12, 5), float32],) */
}

def @func_12596(%var_12589: Tensor[(260), uint64], %var_12590: Tensor[(39, 5), float32]) -> (Tensor[(16, 12, 5), float32], Tensor[(100), float32], Tensor[(4), int32], Tensor[(260), uint64], Tensor[(39, 5), float32]) {
  %605 = @func_11963() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %606 = cast(%var_12589, dtype="uint64") /* ty=Tensor[(260), uint64] */;
  %607 = cast(%var_12590, dtype="float32") /* ty=Tensor[(39, 5), float32] */;
  %608 = reshape(%606, newshape=[260]) /* ty=Tensor[(260), uint64] */;
  %609 = reshape(%607, newshape=[195]) /* ty=Tensor[(195), float32] */;
  %610 = @func_7465(%608, %609) /* ty=(Tensor[(13, 10, 2), bool], Tensor[(260), uint64], Tensor[(100), float32], Tensor[(10, ?, 10), bool], Tensor[(10, ?, 10), float64], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(4), int32], Tensor[(195), float32]) */;
  %611 = %605.0;
  %612 = @func_11726() /* ty=Tensor[(100), float32] */;
  %613 = %610.7;
  (%611, %612, %613, %var_12589, %var_12590)
}

def @func_12799(%var_12797: Tensor[(252), float32]) -> (Tensor[(16, 12, 5), float32], Tensor[(9, 2, 14), float32], Tensor[(252), float32], Tensor[(968), float32]) {
  @func_12796(%var_12797) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(9, 2, 14), float32], Tensor[(252), float32], Tensor[(968), float32]) */
}

def @func_17721(%var_17711: Tensor[(10, 9, 10), bool]) -> Tensor[(10, 9, 10), bool] {
  %614 = @func_13864() /* ty=Tensor[(10, ?, 10), bool] */;
  %615 = cast(%614, dtype="bool") /* ty=Tensor[(10, ?, 10), bool] */;
  %616 = cast(%var_17711, dtype="bool") /* ty=Tensor[(10, 9, 10), bool] */;
  equal(%615, %616) /* ty=Tensor[(10, 9, 10), bool] */
}

def @func_17999() -> Tensor[(10, ?, 10), bool] {
  %617 = @func_17781() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(10, ?, 10), bool]) */;
  %617.0
}

def @func_18418(%var_18404: Tensor[(1, 468), uint64]) -> (Tensor[(16, 12, 5), float32], Tensor[(4), int32], Tensor[(1, 468), uint64]) {
  %618 = @func_6192() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(720), float64], Tensor[(16, 12, 5), float32]) */;
  %619 = cast(%var_18404, dtype="uint64") /* ty=Tensor[(1, 468), uint64] */;
  %620 = reshape(%619, newshape=[468]) /* ty=Tensor[(468), uint64] */;
  %621 = @func_8315(%620) /* ty=(Tensor[(10, ?, 10), bool], Tensor[(4), int32], Tensor[(468), uint64]) */;
  %622 = %618.2;
  %623 = %621.1;
  (%622, %623, %var_18404)
}

def @func_19399(%var_19316: Tensor[(195), float32], %var_19319: Tensor[(968), float32]) -> (Tensor[(10, ?, 10), bool], Tensor[(98), uint32], Tensor[(195), float32], Tensor[(4), int32], Tensor[(98), uint16], Tensor[(968), float32], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(260), uint64], Tensor[(260), uint64]) {
  %624 = cast(%var_19316, dtype="float32") /* ty=Tensor[(195), float32] */;
  %625 = cast(meta[relay.Constant][24] /* ty=Tensor[(4), int32] */, dtype="int32") /* ty=Tensor[(4), int32] */;
  %626 = cast(meta[relay.Constant][25] /* ty=Tensor[(98), uint16] */, dtype="uint16") /* ty=Tensor[(98), uint16] */;
  %627 = cast(%var_19319, dtype="float32") /* ty=Tensor[(968), float32] */;
  %628 = reshape(%624, newshape=[195]) /* ty=Tensor[(195), float32] */;
  %629 = reshape(%625, newshape=[1, 4]) /* ty=Tensor[(1, 4), int32] */;
  %630 = reshape(%626, newshape=[98]) /* ty=Tensor[(98), uint16] */;
  %631 = reshape(%627, newshape=[968]) /* ty=Tensor[(968), float32] */;
  %632 = @func_4757(%628, %629, %630, %631) /* ty=(Tensor[(195), float32], Tensor[(1, 4), int32], Tensor[(98), uint32], Tensor[(10, ?, 10), bool], Tensor[(9, 2, 14), float32], Tensor[(6, 42), float32], Tensor[(100), float32], Tensor[(11, 8, 11), float32], Tensor[(968), float32], Tensor[(10, ?, 10), bool]) */;
  %633 = @func_4629() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */;
  %634 = @func_12813() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) */;
  %635 = cast(meta[relay.Constant][26] /* ty=Tensor[(260), uint64] */, dtype="uint64") /* ty=Tensor[(260), uint64] */;
  %636 = cast(%var_19316, dtype="float32") /* ty=Tensor[(195), float32] */;
  %637 = reshape(%635, newshape=[260]) /* ty=Tensor[(260), uint64] */;
  %638 = reshape(%636, newshape=[195]) /* ty=Tensor[(195), float32] */;
  %639 = @func_7465(%637, %638) /* ty=(Tensor[(13, 10, 2), bool], Tensor[(260), uint64], Tensor[(100), float32], Tensor[(10, ?, 10), bool], Tensor[(10, ?, 10), float64], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(4), int32], Tensor[(195), float32]) */;
  %640 = @func_13827() /* ty=Tensor[(10, ?, 10), bool] */;
  %641 = %632.2;
  %642 = %633.0;
  %643 = %634.0;
  %644 = %639.1;
  (%640, %641, %var_19316, meta[relay.Constant][24] /* ty=Tensor[(4), int32] */, meta[relay.Constant][25] /* ty=Tensor[(98), uint16] */, %var_19319, %642, %643, %644, meta[relay.Constant][26] /* ty=Tensor[(260), uint64] */)
}

def @func_20353() -> Tensor[(16, 12, 5), float32] {
  %645 = @func_19253() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %645.0
}

def @func_7053() -> Tensor[(16, 12, 5), float32] {
  %646 = fn () -> Tensor[(16, 12, 5), float32] {
    @func_4582() /* ty=Tensor[(16, 12, 5), float32] */
  };
  %646() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_21300(%var_21296: Tensor[(126), uint32], %var_21297: Tensor[(4), int32]) -> (Tensor[(100), float32], int32, Tensor[(126), uint32], Tensor[(4), int32]) {
  %647 = cast(%var_21296, dtype="uint32") /* ty=Tensor[(126), uint32] */;
  %648 = cast(%var_21296, dtype="uint32") /* ty=Tensor[(126), uint32] */;
  %649 = cast(%var_21297, dtype="int32") /* ty=Tensor[(4), int32] */;
  %650 = reshape(%647, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), uint32] */;
  %651 = reshape(%648, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), uint32] */;
  %652 = reshape(%649, newshape=[4]) /* ty=Tensor[(4), int32] */;
  %653 = @func_283(%650, %651, %652) /* ty=(Tensor[(1, 4), int32], int32, Tensor[(4), int32], Tensor[(14, 3, 3), float64], Tensor[(1, 4), int32], Tensor[(1, 4), int32]) */;
  %654 = @func_6998() /* ty=Tensor[(100), float32] */;
  %655 = %653.1;
  (%654, %655, %var_21296, %var_21297)
}

def @func_13959() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  %660 = fn () -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
    %656 = @func_5522() /* ty=(Tensor[(16, 12, 5), float32],) */;
    %657 = @func_11517() /* ty=(Tensor[(16, 12, 5), float32],) */;
    %658 = %656.0;
    %659 = %657.0;
    (%658, %659)
  };
  %660() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */
}

def @func_15295(%var_15211: Tensor[(100), float32], %var_15259: Tensor[(100), float32]) -> (Tensor[(100), bool], Tensor[(100), float32], Tensor[(100), bool]) {
  %661 = @func_5265() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(100), float32]) */;
  %662 = %661.1;
  %663 = cast(%var_15211, dtype="bool") /* ty=Tensor[(100), bool] */;
  %664 = shape_of(%662, dtype="int32") /* ty=Tensor[(1), int32] */;
  %665 = cast(%662, dtype="bool") /* ty=Tensor[(100), bool] */;
  %666 = dyn.reshape(%663, %664, newshape=[]) /* ty=Tensor[(?), bool] */;
  %667 = @func_10770() /* ty=(Tensor[(100), float32], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), float64], int32, int32, Tensor[(4), int32]) */;
  %668 = cast(%var_15259, dtype="bool") /* ty=Tensor[(100), bool] */;
  %669 = shape_of(%var_15211, dtype="int32") /* ty=Tensor[(1), int32] */;
  %670 = cast(%var_15211, dtype="bool") /* ty=Tensor[(100), bool] */;
  %671 = dyn.reshape(%668, %669, newshape=[]) /* ty=Tensor[(?), bool] */;
  %672 = logical_and(%665, %666) /* ty=Tensor[(100), bool] */;
  %673 = %667.0;
  %674 = greater(%670, %671) /* ty=Tensor[(100), bool] */;
  (%672, %673, %674)
}

def @func_5508() -> Tensor[(10, ?, 10), bool] {
  %675 = fn () -> Tensor[(10, ?, 10), bool] {
    @func_4279() /* ty=Tensor[(10, ?, 10), bool] */
  };
  %675() /* ty=Tensor[(10, ?, 10), bool] */
}

def @func_4651() -> Tensor[(16, 12, 5), float32] {
  @func_4649() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_6193() -> (Tensor[(10, ?, 10), bool], Tensor[(720), float64], Tensor[(16, 12, 5), float32]) {
  %681 = fn () -> (Tensor[(10, ?, 10), bool], Tensor[(720), float64], Tensor[(16, 12, 5), float32]) {
    %676 = @func_4960() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(12, 10, 6), float64], Tensor[(720), float64]) */;
    %677 = @func_5021() /* ty=(Tensor[(16, 12, 5), float32],) */;
    %678 = @func_5173() /* ty=Tensor[(10, ?, 10), bool] */;
    %679 = %676.2;
    %680 = %677.0;
    (%678, %679, %680)
  };
  %681() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(720), float64], Tensor[(16, 12, 5), float32]) */
}

def @func_13838() -> Tensor[(16, 12, 5), float32] {
  %683 = fn () -> Tensor[(16, 12, 5), float32] {
    %682 = @func_6675() /* ty=(Tensor[(720), float64], Tensor[(16, 12, 5), float32]) */;
    %682.1
  };
  %683() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_14908(%var_14906: uint64, %var_14907: Tensor[(5, 15, 16), uint64]) -> (Tensor[(5, 15, 16), uint64], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  @func_14904(%var_14906, %var_14907) /* ty=(Tensor[(5, 15, 16), uint64], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */
}

def @func_15494() -> (Tensor[(10, 8, 10), float32], Tensor[(16, 12, 5), float32]) {
  %688 = fn () -> (Tensor[(10, 8, 10), float32], Tensor[(16, 12, 5), float32]) {
    %684 = @func_7262() /* ty=(Tensor[(10, 8, 10), int32], Tensor[(10, 8, 10), float32]) */;
    %685 = @func_9464() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
    %686 = %684.1;
    %687 = %685.0;
    (%686, %687)
  };
  %688() /* ty=(Tensor[(10, 8, 10), float32], Tensor[(16, 12, 5), float32]) */
}

def @func_15674() -> Tensor[(100), float32] {
  %690 = fn () -> Tensor[(100), float32] {
    %689 = @func_12459() /* ty=(Tensor[(100), float32],) */;
    %689.0
  };
  %690() /* ty=Tensor[(100), float32] */
}

def @func_3718(%var_3717: Tensor[(15, 7, 3), float64]) -> (Tensor[(15, 7, 3), float64],) {
  %693 = fn (%var_3712: Tensor[(15, 7, 3), float64]) -> (Tensor[(15, 7, 3), float64],) {
    %691 = cast(%var_3712, dtype="float64") /* ty=Tensor[(15, 7, 3), float64] */;
    %692 = atanh(%691) /* ty=Tensor[(15, 7, 3), float64] */;
    (%692,)
  };
  %693(%var_3717) /* ty=(Tensor[(15, 7, 3), float64],) */
}

def @func_5780() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(12, 10, 6), float64], Tensor[(720), float64], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  %694 = @func_5522() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %695 = @func_5522() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %696 = cast(meta[relay.Constant][27] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %697 = reshape(%696, newshape=[12, 10, 6]) /* ty=Tensor[(12, 10, 6), float64] */;
  %698 = @func_745(%697) /* ty=(Tensor[(12, 10, 6), float64],) */;
  %699 = @func_5522() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %700 = %694.0;
  %701 = %695.0;
  %702 = %698.0;
  %703 = %699.0;
  %704 = @func_4178() /* ty=Tensor[(16, 12, 5), float32] */;
  (%700, %701, %702, meta[relay.Constant][27] /* ty=Tensor[(720), float64] */, %703, %704)
}

def @func_15539() -> (Tensor[(16, 12, 5), float32],) {
  %705 = @func_12109() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(4), int32], Tensor[(968), float32]) */;
  %706 = %705.0;
  (%706,)
}

def @func_7921(%var_7914: int32) -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(11, 14, 15), bool], int32, Tensor[(2310), int32]) {
  %707 = cast(%var_7914, dtype="int32") /* ty=int32 */;
  %708 = cast(meta[relay.Constant][28] /* ty=Tensor[(2310), int32] */, dtype="int32") /* ty=Tensor[(2310), int32] */;
  %709 = reshape(%707, newshape=[]) /* ty=int32 */;
  %710 = reshape(%708, newshape=[11, 14, 15]) /* ty=Tensor[(11, 14, 15), int32] */;
  %711 = @func_7492() /* ty=Tensor[(16, 12, 5), float32] */;
  %712 = @func_7492() /* ty=Tensor[(16, 12, 5), float32] */;
  %713 = @func_7052() /* ty=Tensor[(16, 12, 5), float32] */;
  %714 = @func_4665(%709, %710) /* ty=Tensor[(11, 14, 15), bool] */;
  (%711, %712, %713, %714, %var_7914, meta[relay.Constant][28] /* ty=Tensor[(2310), int32] */)
}

def @func_7643() -> (Tensor[(16, 12, 5), float32],) {
  @func_7641() /* ty=(Tensor[(16, 12, 5), float32],) */
}

def @func_6510() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  @func_6508() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */
}

def @func_6985(%var_6932: Tensor[(11, 14, 13), float32], %var_6978: Tensor[(11, 14, 13), float32]) -> (Tensor[(11, 14, 13), float32], Tensor[(10, ?, 10), bool], Tensor[(11, 14, 13), uint64]) {
  %715 = cast(%var_6932, dtype="float32") /* ty=Tensor[(11, 14, 13), float32] */;
  %716 = cast(%var_6932, dtype="float32") /* ty=Tensor[(11, 14, 13), float32] */;
  %717 = exp(%716) /* ty=Tensor[(11, 14, 13), float32] */;
  %718 = cast(%var_6978, dtype="uint64") /* ty=Tensor[(11, 14, 13), uint64] */;
  %719 = shape_of(%717, dtype="int32") /* ty=Tensor[(3), int32] */;
  %720 = cast(%717, dtype="uint64") /* ty=Tensor[(11, 14, 13), uint64] */;
  %721 = dyn.reshape(%718, %719, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %722 = acosh(%715) /* ty=Tensor[(11, 14, 13), float32] */;
  %723 = @func_5468() /* ty=Tensor[(10, ?, 10), bool] */;
  %724 = left_shift(%720, %721) /* ty=Tensor[(11, 14, 13), uint64] */;
  (%722, %723, %724)
}

def @func_7021() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  @func_7019() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */
}

def @func_4584() -> Tensor[(16, 12, 5), float32] {
  @func_4582() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_14701() -> Tensor[(16, 12, 5), float32] {
  @func_4582() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_5175() -> Tensor[(10, ?, 10), bool] {
  @func_5173() /* ty=Tensor[(10, ?, 10), bool] */
}

def @func_21495() -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) {
  %728 = fn () -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) {
    %725 = @func_9691() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) */;
    %726 = @func_15012() /* ty=Tensor[(16, 12, 5), float32] */;
    %727 = %725.0;
    (%726, %727)
  };
  %728() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */
}

def @func_16172() -> (Tensor[(10, 8, 10), float64], Tensor[(16, 12, 5), float32], Tensor[(10, 8, 10), bool]) {
  %741 = fn () -> (Tensor[(10, 8, 10), float64], Tensor[(16, 12, 5), float32], Tensor[(10, 8, 10), bool]) {
    %729 = @func_8644() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, 8, 10), int32], Tensor[(16, 12, 5), float32]) */;
    %730 = %729.1;
    %731 = cast(%730, dtype="float64") /* ty=Tensor[(10, 8, 10), float64] */;
    %732 = @func_12414() /* ty=(Tensor[(16, 12, 5), float32],) */;
    %733 = cast(%730, dtype="float32") /* ty=Tensor[(10, 8, 10), float32] */;
    %734 = asinh(%733) /* ty=Tensor[(10, 8, 10), float32] */;
    %735 = @func_13831() /* ty=Tensor[(10, ?, 10), bool] */;
    %736 = cast(%734, dtype="bool") /* ty=Tensor[(10, 8, 10), bool] */;
    %737 = cast(%735, dtype="bool") /* ty=Tensor[(10, ?, 10), bool] */;
    %738 = sqrt(%731) /* ty=Tensor[(10, 8, 10), float64] */;
    %739 = %732.0;
    %740 = not_equal(%736, %737) /* ty=Tensor[(10, 8, 10), bool] */;
    (%738, %739, %740)
  };
  %741() /* ty=(Tensor[(10, 8, 10), float64], Tensor[(16, 12, 5), float32], Tensor[(10, 8, 10), bool]) */
}

def @func_5878(%var_5875: Tensor[(3, 8, 14), int16], %var_5876: Tensor[(3, 8, 14), int16], %var_5877: Tensor[(100), float32]) -> (Tensor[(3, 8, 14), int16], Tensor[(13, 10, 2), bool], Tensor[(260), uint64], Tensor[(4), int32], Tensor[(4, 1), int32], Tensor[(100), float32], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(3, 8, 14), float32], Tensor[(16, 12, 5), bool]) {
  %771 = fn (%var_5806: Tensor[(3, 8, 14), int16], %var_5807: Tensor[(3, 8, 14), int16], %var_5828: Tensor[(100), float32]) -> (Tensor[(3, 8, 14), int16], Tensor[(13, 10, 2), bool], Tensor[(260), uint64], Tensor[(4), int32], Tensor[(4, 1), int32], Tensor[(100), float32], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(3, 8, 14), float32], Tensor[(16, 12, 5), bool]) {
    %742 = cast(%var_5807, dtype="int16") /* ty=Tensor[(3, 8, 14), int16] */;
    %743 = shape_of(%var_5806, dtype="int32") /* ty=Tensor[(3), int32] */;
    %744 = cast(%var_5806, dtype="int16") /* ty=Tensor[(3, 8, 14), int16] */;
    %745 = dyn.reshape(%742, %743, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %746 = cast(meta[relay.Constant][29] /* ty=Tensor[(260), uint64] */, dtype="uint64") /* ty=Tensor[(260), uint64] */;
    %747 = cast(meta[relay.Constant][29] /* ty=Tensor[(260), uint64] */, dtype="uint64") /* ty=Tensor[(260), uint64] */;
    %748 = reshape(%746, newshape=[13, 10, 2]) /* ty=Tensor[(13, 10, 2), uint64] */;
    %749 = reshape(%747, newshape=[13, 10, 2]) /* ty=Tensor[(13, 10, 2), uint64] */;
    %750 = @func_2840(%748, %749) /* ty=(Tensor[(13, 10, 2), bool],) */;
    %751 = cast(meta[relay.Constant][30] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %752 = cast(meta[relay.Constant][31] /* ty=Tensor[(4, 1), int32] */, dtype="int32") /* ty=Tensor[(4, 1), int32] */;
    %753 = cast(%var_5828, dtype="float32") /* ty=Tensor[(100), float32] */;
    %754 = reshape(%751, newshape=[]) /* ty=uint16 */;
    %755 = reshape(%752, newshape=[4, 1]) /* ty=Tensor[(4, 1), int32] */;
    %756 = reshape(%753, newshape=[100]) /* ty=Tensor[(100), float32] */;
    %757 = @func_5418(%754, %755, %756) /* ty=(Tensor[(4), int32], uint16, Tensor[(98), uint16], Tensor[(4, 1), int32], Tensor[(100), float32]) */;
    %758 = @func_4221() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float32]) */;
    %759 = @func_5522() /* ty=(Tensor[(16, 12, 5), float32],) */;
    %760 = cast(%var_5806, dtype="float32") /* ty=Tensor[(3, 8, 14), float32] */;
    %761 = @func_4582() /* ty=Tensor[(16, 12, 5), float32] */;
    %762 = cast(%761, dtype="bool") /* ty=Tensor[(16, 12, 5), bool] */;
    %763 = cast(meta[relay.Constant][30] /* ty=uint16 */, dtype="bool") /* ty=bool */;
    %764 = bitwise_and(%744, %745) /* ty=Tensor[(3, 8, 14), int16] */;
    %765 = %750.0;
    %766 = %757.0;
    %767 = %758.0;
    %768 = %759.0;
    %769 = acos(%760) /* ty=Tensor[(3, 8, 14), float32] */;
    %770 = not_equal(%762, %763) /* ty=Tensor[(16, 12, 5), bool] */;
    (%764, %765, meta[relay.Constant][29] /* ty=Tensor[(260), uint64] */, %766, meta[relay.Constant][31] /* ty=Tensor[(4, 1), int32] */, %var_5828, %767, %768, %769, %770)
  };
  %771(%var_5875, %var_5876, %var_5877) /* ty=(Tensor[(3, 8, 14), int16], Tensor[(13, 10, 2), bool], Tensor[(260), uint64], Tensor[(4), int32], Tensor[(4, 1), int32], Tensor[(100), float32], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(3, 8, 14), float32], Tensor[(16, 12, 5), bool]) */
}

def @func_5968() -> Tensor[(16, 12, 5), float32] {
  %773 = fn () -> Tensor[(16, 12, 5), float32] {
    %772 = @func_4444() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
    %772.0
  };
  %773() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_7786() -> (Tensor[(100), float32], Tensor[(720), float64], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) {
  @func_7784() /* ty=(Tensor[(100), float32], Tensor[(720), float64], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */
}

def @func_7972() -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) {
  %777 = fn () -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) {
    %774 = @func_4221() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float32]) */;
    %775 = %774.0;
    %776 = @func_4279() /* ty=Tensor[(10, ?, 10), bool] */;
    (%775, %776)
  };
  %777() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */
}

def @func_17259() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  @func_17257() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */
}

def @func_19151(%var_19146: Tensor[(1200, 1), uint64]) -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(1200, 1), uint64]) {
  %778 = @func_15493() /* ty=(Tensor[(10, 8, 10), float32], Tensor[(16, 12, 5), float32]) */;
  %779 = @func_15173() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %780 = cast(%var_19146, dtype="uint64") /* ty=Tensor[(1200, 1), uint64] */;
  %781 = reshape(%780, newshape=[1200]) /* ty=Tensor[(1200), uint64] */;
  %782 = @func_16964(%781) /* ty=(Tensor[(100), float32], Tensor[(16, 12, 5), float32], uint64, Tensor[(1200), uint64]) */;
  %783 = %778.1;
  %784 = %779.0;
  %785 = %782.1;
  (%783, %784, %785, %var_19146)
}

def @func_16487(%var_16485: Tensor[(10, 10, 10), bool]) -> Tensor[(10, 10, 10), float32] {
  @func_16484(%var_16485) /* ty=Tensor[(10, 10, 10), float32] */
}

def @func_5023() -> (Tensor[(16, 12, 5), float32],) {
  @func_5021() /* ty=(Tensor[(16, 12, 5), float32],) */
}

def @func_11407(%var_11404: Tensor[(4), int32], %var_11405: Tensor[(5, 60), bool], %var_11406: int32) -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(4), int32], Tensor[(16, 12, 5), float32], Tensor[(5, 60), bool], Tensor[(10, ?, 10), uint32], int32) {
  %799 = fn (%var_11372: Tensor[(4), int32], %var_11377: Tensor[(5, 60), bool], %var_11397: int32) -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(4), int32], Tensor[(16, 12, 5), float32], Tensor[(5, 60), bool], Tensor[(10, ?, 10), uint32], int32) {
    %786 = cast(%var_11372, dtype="int32") /* ty=Tensor[(4), int32] */;
    %787 = reshape(%786, newshape=[4]) /* ty=Tensor[(4), int32] */;
    %788 = @func_10872(%787) /* ty=(Tensor[(15, ?, 11), int16], Tensor[(4), int32], Tensor[(126), uint32], Tensor[(4), int32], Tensor[(10, ?, 10), bool], Tensor[(195), float32], Tensor[(100), float64]) */;
    %789 = cast(%var_11377, dtype="bool") /* ty=Tensor[(5, 60), bool] */;
    %790 = reshape(%789, newshape=[10, 3, 10]) /* ty=Tensor[(10, 3, 10), bool] */;
    %791 = @func_7855(%790) /* ty=(Tensor[(10, 3, 10), bool], Tensor[(16, 12, 5), float32]) */;
    %792 = cast(%var_11397, dtype="int32") /* ty=int32 */;
    %793 = reshape(%792, newshape=[]) /* ty=int32 */;
    %794 = @func_5218(%793) /* ty=(Tensor[(1, 4), int32], Tensor[(4), int32], Tensor[(10, ?, 10), uint32]) */;
    %795 = @func_4649() /* ty=Tensor[(16, 12, 5), float32] */;
    %796 = %788.4;
    %797 = %791.1;
    %798 = %794.2;
    (%795, %796, %var_11372, %797, %var_11377, %798, %var_11397)
  };
  %799(%var_11404, %var_11405, %var_11406) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(4), int32], Tensor[(16, 12, 5), float32], Tensor[(5, 60), bool], Tensor[(10, ?, 10), uint32], int32) */
}

def @func_13324(%var_13322: Tensor[(2002), float32], %var_13323: Tensor[(4), int32]) -> (Tensor[(16, 12, 5), float32], Tensor[(11, 14, 13), float32], Tensor[(2002), float32], Tensor[(100), float32], int32, Tensor[(4), int32], Tensor[(10, 8, 10), float32]) {
  @func_13320(%var_13322, %var_13323) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(11, 14, 13), float32], Tensor[(2002), float32], Tensor[(100), float32], int32, Tensor[(4), int32], Tensor[(10, 8, 10), float32]) */
}

def @func_20005() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  @func_20003() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */
}

def @func_9202() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  %800 = @func_5021() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %801 = @func_5780() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(12, 10, 6), float64], Tensor[(720), float64], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %802 = %800.0;
  %803 = %801.5;
  (%802, %803)
}

def @func_12888() -> Tensor[(100), float32] {
  @func_4476() /* ty=Tensor[(100), float32] */
}

def @func_6291() -> (Tensor[(16, 12, 5), float32],) {
  %804 = @func_4178() /* ty=Tensor[(16, 12, 5), float32] */;
  (%804,)
}

def @func_14292(%var_14249: int32, %var_14250: Tensor[(1, 4), int32]) -> (Tensor[(100), float32], Tensor[(1, 4), int32], int32, Tensor[(1, 4), int32], Tensor[(100), float32], Tensor[(15, ?, 11), int16], Tensor[(16, 12, 5), float32]) {
  %805 = cast(%var_14249, dtype="int32") /* ty=int32 */;
  %806 = cast(%var_14250, dtype="int32") /* ty=Tensor[(1, 4), int32] */;
  %807 = reshape(%805, newshape=[]) /* ty=int32 */;
  %808 = reshape(%806, newshape=[1, 4]) /* ty=Tensor[(1, 4), int32] */;
  %809 = @func_7784() /* ty=(Tensor[(100), float32], Tensor[(720), float64], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */;
  %810 = @func_8334() /* ty=(Tensor[(15, ?, 11), int16],) */;
  %811 = @func_12354() /* ty=(Tensor[(100), float32], Tensor[(16, 12, 5), float32]) */;
  %812 = @func_6998() /* ty=Tensor[(100), float32] */;
  %813 = @func_196(%807, %808) /* ty=Tensor[(1, 4), int32] */;
  %814 = %809.0;
  %815 = %810.0;
  %816 = %811.1;
  (%812, %813, %var_14249, %var_14250, %814, %815, %816)
}

def @func_17872() -> (Tensor[(16, 12, 5), float32],) {
  @func_17870() /* ty=(Tensor[(16, 12, 5), float32],) */
}

def @func_18727() -> Tensor[(16, 12, 5), float32] {
  @func_4649() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_11203() -> Tensor[(100), float32] {
  %817 = @func_6639() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(100), float32], Tensor[(100), float32]) */;
  %817.2
}

def @func_5360(%var_5359: Tensor[(100), float64]) -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float64]) {
  %823 = fn (%var_5353: Tensor[(100), float64]) -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float64]) {
    %818 = @func_4350() /* ty=(Tensor[(16, 12, 5), float32],) */;
    %819 = cast(%var_5353, dtype="float64") /* ty=Tensor[(100), float64] */;
    %820 = reshape(%819, newshape=[10, 1, 10]) /* ty=Tensor[(10, 1, 10), float64] */;
    %821 = %818.0;
    %822 = @func_2749(%820) /* ty=Tensor[(10, ?, 10), bool] */;
    (%821, %822, %var_5353)
  };
  %823(%var_5359) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float64]) */
}

def @func_6402(%var_6400: Tensor[(39, 5), float32], %var_6401: Tensor[(1, 100), float64]) -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(11, 8, 11), float32], Tensor[(39, 5), float32], Tensor[(4), int32], Tensor[(98), uint16], Tensor[(1, 968), float32], Tensor[(10, ?, 10), bool], Tensor[(1, 100), float64]) {
  %844 = fn (%var_6363: Tensor[(39, 5), float32], %var_6397: Tensor[(1, 100), float64]) -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(11, 8, 11), float32], Tensor[(39, 5), float32], Tensor[(4), int32], Tensor[(98), uint16], Tensor[(1, 968), float32], Tensor[(10, ?, 10), bool], Tensor[(1, 100), float64]) {
    %824 = @func_5265() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(100), float32]) */;
    %825 = @func_6291() /* ty=(Tensor[(16, 12, 5), float32],) */;
    %826 = %825.0;
    %827 = cast(%826, dtype="float32") /* ty=Tensor[(16, 12, 5), float32] */;
    %828 = cast(%var_6363, dtype="float32") /* ty=Tensor[(39, 5), float32] */;
    %829 = cast(meta[relay.Constant][32] /* ty=Tensor[(4), int32] */, dtype="int32") /* ty=Tensor[(4), int32] */;
    %830 = cast(meta[relay.Constant][33] /* ty=Tensor[(98), uint16] */, dtype="uint16") /* ty=Tensor[(98), uint16] */;
    %831 = cast(meta[relay.Constant][34] /* ty=Tensor[(1, 968), float32] */, dtype="float32") /* ty=Tensor[(1, 968), float32] */;
    %832 = reshape(%828, newshape=[195]) /* ty=Tensor[(195), float32] */;
    %833 = reshape(%829, newshape=[1, 4]) /* ty=Tensor[(1, 4), int32] */;
    %834 = reshape(%830, newshape=[98]) /* ty=Tensor[(98), uint16] */;
    %835 = reshape(%831, newshape=[968]) /* ty=Tensor[(968), float32] */;
    %836 = @func_4757(%832, %833, %834, %835) /* ty=(Tensor[(195), float32], Tensor[(1, 4), int32], Tensor[(98), uint32], Tensor[(10, ?, 10), bool], Tensor[(9, 2, 14), float32], Tensor[(6, 42), float32], Tensor[(100), float32], Tensor[(11, 8, 11), float32], Tensor[(968), float32], Tensor[(10, ?, 10), bool]) */;
    %837 = cast(%var_6397, dtype="float64") /* ty=Tensor[(1, 100), float64] */;
    %838 = reshape(%837, newshape=[100]) /* ty=Tensor[(100), float64] */;
    %839 = @func_5358(%838) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float64]) */;
    %840 = %824.0;
    %841 = atan(%827) /* ty=Tensor[(16, 12, 5), float32] */;
    %842 = %836.7;
    %843 = %839.1;
    (%840, %841, %842, %var_6363, meta[relay.Constant][32] /* ty=Tensor[(4), int32] */, meta[relay.Constant][33] /* ty=Tensor[(98), uint16] */, meta[relay.Constant][34] /* ty=Tensor[(1, 968), float32] */, %843, %var_6397)
  };
  %844(%var_6400, %var_6401) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(11, 8, 11), float32], Tensor[(39, 5), float32], Tensor[(4), int32], Tensor[(98), uint16], Tensor[(1, 968), float32], Tensor[(10, ?, 10), bool], Tensor[(1, 100), float64]) */
}

def @func_20425() -> Tensor[(16, 12, 5), float32] {
  %846 = fn () -> Tensor[(16, 12, 5), float32] {
    %845 = @func_12299() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(10, ?, 10), bool]) */;
    %845.0
  };
  %846() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_9957() -> Tensor[(10, ?, 10), float64] {
  %847 = @func_4279() /* ty=Tensor[(10, ?, 10), bool] */;
  %848 = cast(%847, dtype="float64") /* ty=Tensor[(10, ?, 10), float64] */;
  erf(%848) /* ty=Tensor[(10, ?, 10), float64] */
}

def @func_13543() -> (Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(100), float64]) {
  %856 = fn () -> (Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(100), float64]) {
    %849 = @func_6508() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
    %850 = @func_5434() /* ty=Tensor[(10, ?, 10), bool] */;
    %851 = cast(%850, dtype="float64") /* ty=Tensor[(10, ?, 10), float64] */;
    %852 = reshape(%851, newshape=[100]) /* ty=Tensor[(100), float64] */;
    %853 = @func_5358(%852) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float64]) */;
    %854 = %849.0;
    %855 = %853.2;
    (%850, %854, %855)
  };
  %856() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(100), float64]) */
}

def @func_7107(%var_7106: Tensor[(195), float32]) -> (Tensor[(16, 12, 5), float32], Tensor[(4), int32], Tensor[(195), float32], Tensor[(4), int32], Tensor[(16, 12, 5), float32]) {
  %866 = fn (%var_7082: Tensor[(195), float32]) -> (Tensor[(16, 12, 5), float32], Tensor[(4), int32], Tensor[(195), float32], Tensor[(4), int32], Tensor[(16, 12, 5), float32]) {
    %857 = cast(%var_7082, dtype="float32") /* ty=Tensor[(195), float32] */;
    %858 = cast(meta[relay.Constant][35] /* ty=Tensor[(4), int32] */, dtype="int32") /* ty=Tensor[(4), int32] */;
    %859 = reshape(%857, newshape=[5, 3, 13]) /* ty=Tensor[(5, 3, 13), float32] */;
    %860 = reshape(%858, newshape=[4]) /* ty=Tensor[(4), int32] */;
    %861 = @func_3701(%859, %860) /* ty=(Tensor[(5, 3, 13), float32], Tensor[(1, 4), int32], Tensor[(126), uint32], Tensor[(4), int32], Tensor[(1, 4), int32], uint16, Tensor[(98), uint16], int32) */;
    %862 = @func_5265() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(100), float32]) */;
    %863 = @func_4178() /* ty=Tensor[(16, 12, 5), float32] */;
    %864 = %861.3;
    %865 = %862.0;
    (%863, %864, %var_7082, meta[relay.Constant][35] /* ty=Tensor[(4), int32] */, %865)
  };
  %866(%var_7106) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(4), int32], Tensor[(195), float32], Tensor[(4), int32], Tensor[(16, 12, 5), float32]) */
}

def @func_14918() -> Tensor[(16, 12, 5), float32] {
  %867 = @func_9202() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %867.0
}

def @func_4350() -> (Tensor[(16, 12, 5), float32],) {
  %868 = @func_4178() /* ty=Tensor[(16, 12, 5), float32] */;
  (%868,)
}

def @func_5221(%var_5219: int32) -> (Tensor[(1, 4), int32], Tensor[(4), int32], Tensor[(10, ?, 10), uint32]) {
  @func_5218(%var_5219) /* ty=(Tensor[(1, 4), int32], Tensor[(4), int32], Tensor[(10, ?, 10), uint32]) */
}

def @func_14646() -> (int32, Tensor[(1, 4), int32], Tensor[(4), int32], Tensor[(100), float32], Tensor[(100), float32]) {
  %869 = @func_10770() /* ty=(Tensor[(100), float32], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), float64], int32, int32, Tensor[(4), int32]) */;
  %870 = %869.3;
  %871 = cast(%870, dtype="int32") /* ty=int32 */;
  %872 = cast(meta[relay.Constant][36] /* ty=Tensor[(4), int32] */, dtype="int32") /* ty=Tensor[(4), int32] */;
  %873 = reshape(%871, newshape=[]) /* ty=int32 */;
  %874 = reshape(%872, newshape=[1, 4]) /* ty=Tensor[(1, 4), int32] */;
  %875 = cast(%870, dtype="uint16") /* ty=uint16 */;
  %876 = @func_196(%873, %874) /* ty=Tensor[(1, 4), int32] */;
  %877 = cast(%876, dtype="int32") /* ty=Tensor[(1, 4), int32] */;
  %878 = cast(meta[relay.Constant][37] /* ty=Tensor[(100), float32] */, dtype="float32") /* ty=Tensor[(100), float32] */;
  %879 = reshape(%875, newshape=[]) /* ty=uint16 */;
  %880 = reshape(%877, newshape=[4, 1]) /* ty=Tensor[(4, 1), int32] */;
  %881 = reshape(%878, newshape=[100]) /* ty=Tensor[(100), float32] */;
  %882 = @func_5418(%879, %880, %881) /* ty=(Tensor[(4), int32], uint16, Tensor[(98), uint16], Tensor[(4, 1), int32], Tensor[(100), float32]) */;
  %883 = %882.4;
  (%870, %876, meta[relay.Constant][36] /* ty=Tensor[(4), int32] */, %883, meta[relay.Constant][37] /* ty=Tensor[(100), float32] */)
}

def @func_6640() -> (Tensor[(16, 12, 5), float32], Tensor[(100), float32], Tensor[(100), float32]) {
  %889 = fn () -> (Tensor[(16, 12, 5), float32], Tensor[(100), float32], Tensor[(100), float32]) {
    %884 = @func_5780() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(12, 10, 6), float64], Tensor[(720), float64], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
    %885 = @func_6042() /* ty=(Tensor[(100), float32],) */;
    %886 = %884.4;
    %887 = %885.0;
    %888 = @func_4476() /* ty=Tensor[(100), float32] */;
    (%886, %887, %888)
  };
  %889() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(100), float32], Tensor[(100), float32]) */
}

def @func_15705() -> Tensor[(315), float64] {
  %890 = @func_11114() /* ty=(Tensor[(315), float64],) */;
  %890.0
}

def @func_5722() -> (Tensor[(16, 12, 5), float32], Tensor[(15, 7, 3), float64], Tensor[(315), float64]) {
  %897 = fn () -> (Tensor[(16, 12, 5), float32], Tensor[(15, 7, 3), float64], Tensor[(315), float64]) {
    %891 = @func_5660() /* ty=(Tensor[(16, 12, 5), float32],) */;
    %892 = cast(meta[relay.Constant][38] /* ty=Tensor[(315), float64] */, dtype="float64") /* ty=Tensor[(315), float64] */;
    %893 = reshape(%892, newshape=[15, 7, 3]) /* ty=Tensor[(15, 7, 3), float64] */;
    %894 = @func_3716(%893) /* ty=(Tensor[(15, 7, 3), float64],) */;
    %895 = %891.0;
    %896 = %894.0;
    (%895, %896, meta[relay.Constant][38] /* ty=Tensor[(315), float64] */)
  };
  %897() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(15, 7, 3), float64], Tensor[(315), float64]) */
}

def @func_16096() -> Tensor[(10, ?, 10), float32] {
  %900 = fn () -> Tensor[(10, ?, 10), float32] {
    %898 = @func_13831() /* ty=Tensor[(10, ?, 10), bool] */;
    %899 = cast(%898, dtype="float32") /* ty=Tensor[(10, ?, 10), float32] */;
    exp(%899) /* ty=Tensor[(10, ?, 10), float32] */
  };
  %900() /* ty=Tensor[(10, ?, 10), float32] */
}

def @func_748(%var_746: Tensor[(12, 10, 6), float64]) -> (Tensor[(12, 10, 6), float64],) {
  @func_745(%var_746) /* ty=(Tensor[(12, 10, 6), float64],) */
}

def @func_18999(%var_18991: Tensor[(5, 14, 15), float64]) -> (Tensor[(5, 14, 15), float64],) {
  %901 = cast(%var_18991, dtype="float64") /* ty=Tensor[(5, 14, 15), float64] */;
  %902 = acosh(%901) /* ty=Tensor[(5, 14, 15), float64] */;
  (%902,)
}

def @func_13016(%var_13014: Tensor[(234, 2), uint64]) -> (Tensor[(13, 14, 8), float32], Tensor[(13, 14, 8), float64], int32, Tensor[(234, 2), uint64]) {
  @func_13013(%var_13014) /* ty=(Tensor[(13, 14, 8), float32], Tensor[(13, 14, 8), float64], int32, Tensor[(234, 2), uint64]) */
}

def @func_21156() -> (Tensor[(100), float32], Tensor[(10, 8, 10), float32]) {
  %903 = @func_4221() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float32]) */;
  %904 = @func_7262() /* ty=(Tensor[(10, 8, 10), int32], Tensor[(10, 8, 10), float32]) */;
  %905 = %903.2;
  %906 = %904.1;
  (%905, %906)
}

def @func_21383() -> (Tensor[(15, ?, 11), uint16], Tensor[(16, 12, 5), float32]) {
  @func_21381() /* ty=(Tensor[(15, ?, 11), uint16], Tensor[(16, 12, 5), float32]) */
}

def @func_17870() -> (Tensor[(16, 12, 5), float32],) {
  %907 = @func_13837() /* ty=Tensor[(16, 12, 5), float32] */;
  (%907,)
}

def @func_288(%var_285: Tensor[(14, 3, 3), uint32], %var_286: Tensor[(14, 3, 3), uint32], %var_287: Tensor[(4), int32]) -> (Tensor[(1, 4), int32], int32, Tensor[(4), int32], Tensor[(14, 3, 3), float64], Tensor[(1, 4), int32], Tensor[(1, 4), int32]) {
  @func_283(%var_285, %var_286, %var_287) /* ty=(Tensor[(1, 4), int32], int32, Tensor[(4), int32], Tensor[(14, 3, 3), float64], Tensor[(1, 4), int32], Tensor[(1, 4), int32]) */
}

def @func_12796(%var_12786: Tensor[(252), float32]) -> (Tensor[(16, 12, 5), float32], Tensor[(9, 2, 14), float32], Tensor[(252), float32], Tensor[(968), float32]) {
  %908 = cast(%var_12786, dtype="float32") /* ty=Tensor[(252), float32] */;
  %909 = cast(%var_12786, dtype="float32") /* ty=Tensor[(252), float32] */;
  %910 = reshape(%908, newshape=[9, 2, 14]) /* ty=Tensor[(9, 2, 14), float32] */;
  %911 = reshape(%909, newshape=[9, 2, 14]) /* ty=Tensor[(9, 2, 14), float32] */;
  %912 = @func_3549(%910, %911) /* ty=(Tensor[(9, 2, 14), float32],) */;
  %913 = @func_12109() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(4), int32], Tensor[(968), float32]) */;
  %914 = @func_9797() /* ty=Tensor[(16, 12, 5), float32] */;
  %915 = %912.0;
  %916 = %913.2;
  (%914, %915, %var_12786, %916)
}

def @func_11542() -> Tensor[(16, 12, 5), float32] {
  %917 = fn () -> Tensor[(16, 12, 5), float32] {
    @func_7946() /* ty=Tensor[(16, 12, 5), float32] */
  };
  %917() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_16916() -> (Tensor[(100), float32], Tensor[(16, 12, 5), float32]) {
  %918 = @func_13542() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(100), float64]) */;
  %919 = @func_6998() /* ty=Tensor[(100), float32] */;
  %920 = %918.1;
  (%919, %920)
}

def @func_16738() -> (Tensor[(720), float64], int32) {
  %925 = fn () -> (Tensor[(720), float64], int32) {
    %921 = @func_6675() /* ty=(Tensor[(720), float64], Tensor[(16, 12, 5), float32]) */;
    %922 = @func_12396() /* ty=(int32, Tensor[(16, 12, 5), float32]) */;
    %923 = %921.0;
    %924 = %922.0;
    (%923, %924)
  };
  %925() /* ty=(Tensor[(720), float64], int32) */
}

def @func_8335() -> (Tensor[(15, ?, 11), int16],) {
  %928 = fn () -> (Tensor[(15, ?, 11), int16],) {
    %926 = @func_6587() /* ty=(Tensor[(15, ?, 11), int16], Tensor[(16, 12, 5), float32]) */;
    %927 = %926.0;
    (%927,)
  };
  %928() /* ty=(Tensor[(15, ?, 11), int16],) */
}

def @func_8829(%var_8827: int32, %var_8828: Tensor[(4), int32]) -> (Tensor[(100), float32], Tensor[(100), float32], int32, Tensor[(4), int32]) {
  %937 = fn (%var_8819: int32, %var_8820: Tensor[(4), int32]) -> (Tensor[(100), float32], Tensor[(100), float32], int32, Tensor[(4), int32]) {
    %929 = @func_5265() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(100), float32]) */;
    %930 = cast(%var_8819, dtype="int32") /* ty=int32 */;
    %931 = cast(%var_8820, dtype="int32") /* ty=Tensor[(4), int32] */;
    %932 = reshape(%930, newshape=[]) /* ty=int32 */;
    %933 = reshape(%931, newshape=[1, 4]) /* ty=Tensor[(1, 4), int32] */;
    %934 = @func_6552(%932, %933) /* ty=(Tensor[(100), float32], Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(1, 4), int32], int32, Tensor[(1, 4), int32], Tensor[(16, 12, 5), float32]) */;
    %935 = %929.1;
    %936 = %934.0;
    (%935, %936, %var_8819, %var_8820)
  };
  %937(%var_8827, %var_8828) /* ty=(Tensor[(100), float32], Tensor[(100), float32], int32, Tensor[(4), int32]) */
}

def @func_17782() -> (Tensor[(10, ?, 10), bool], Tensor[(10, ?, 10), bool]) {
  %940 = fn () -> (Tensor[(10, ?, 10), bool], Tensor[(10, ?, 10), bool]) {
    %938 = @func_5173() /* ty=Tensor[(10, ?, 10), bool] */;
    %939 = @func_5434() /* ty=Tensor[(10, ?, 10), bool] */;
    (%938, %939)
  };
  %940() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(10, ?, 10), bool]) */
}

def @func_16484(%var_16475: Tensor[(10, 10, 10), bool]) -> Tensor[(10, 10, 10), float32] {
  %941 = @func_13831() /* ty=Tensor[(10, ?, 10), bool] */;
  %942 = cast(%941, dtype="float32") /* ty=Tensor[(10, ?, 10), float32] */;
  %943 = cast(%var_16475, dtype="float32") /* ty=Tensor[(10, 10, 10), float32] */;
  power(%942, %943) /* ty=Tensor[(10, 10, 10), float32] */
}

def @func_19929() -> (Tensor[(10, ?, 10), bool], Tensor[(4), int32], int32, Tensor[(100), float32]) {
  %944 = cast(6 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %945 = reshape(%944, newshape=[]) /* ty=int32 */;
  %946 = @func_11465(%945) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(1, 4), int32], int32, Tensor[(4), int32]) */;
  %947 = @func_12327() /* ty=Tensor[(10, ?, 10), bool] */;
  %948 = %946.3;
  %949 = @func_5915() /* ty=Tensor[(100), float32] */;
  (%947, %948, 6 /* ty=int32 */, %949)
}

def @func_17420() -> Tensor[(100), float32] {
  %950 = fn () -> Tensor[(100), float32] {
    @func_11726() /* ty=Tensor[(100), float32] */
  };
  %950() /* ty=Tensor[(100), float32] */
}

def @func_9959() -> Tensor[(10, ?, 10), float64] {
  @func_9957() /* ty=Tensor[(10, ?, 10), float64] */
}

def @func_12890() -> Tensor[(100), float32] {
  @func_12888() /* ty=Tensor[(100), float32] */
}

def @func_18729() -> Tensor[(16, 12, 5), float32] {
  @func_18727() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_21158() -> (Tensor[(100), float32], Tensor[(10, 8, 10), float32]) {
  @func_21156() /* ty=(Tensor[(100), float32], Tensor[(10, 8, 10), float32]) */
}

def @func_6281() -> Tensor[(16, 12, 5), float32] {
  @func_6279() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_12398() -> (int32, Tensor[(16, 12, 5), float32]) {
  @func_12396() /* ty=(int32, Tensor[(16, 12, 5), float32]) */
}

def @func_10771() -> (Tensor[(100), float32], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), float64], int32, int32, Tensor[(4), int32]) {
  %961 = fn () -> (Tensor[(100), float32], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), float64], int32, int32, Tensor[(4), int32]) {
    %951 = @func_8541() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), float64]) */;
    %952 = cast(-2 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %953 = cast(meta[relay.Constant][39] /* ty=Tensor[(4), int32] */, dtype="int32") /* ty=Tensor[(4), int32] */;
    %954 = reshape(%952, newshape=[]) /* ty=int32 */;
    %955 = reshape(%953, newshape=[4]) /* ty=Tensor[(4), int32] */;
    %956 = @func_9587(%954, %955) /* ty=(Tensor[(100), float32], Tensor[(11, 14, 15), bool], int32, Tensor[(2310), int32], Tensor[(1, 4), int32], Tensor[(4), int32]) */;
    %957 = @func_4476() /* ty=Tensor[(100), float32] */;
    %958 = @func_7946() /* ty=Tensor[(16, 12, 5), float32] */;
    %959 = %951.1;
    %960 = %956.2;
    (%957, %958, %959, %960, -2 /* ty=int32 */, meta[relay.Constant][39] /* ty=Tensor[(4), int32] */)
  };
  %961() /* ty=(Tensor[(100), float32], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), float64], int32, int32, Tensor[(4), int32]) */
}

def @func_12504() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  %965 = fn () -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
    %962 = @func_10311() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
    %963 = %962.0;
    %964 = @func_7052() /* ty=Tensor[(16, 12, 5), float32] */;
    (%963, %964)
  };
  %965() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */
}

def @func_9433() -> (Tensor[(16, 12, 5), float64],) {
  @func_9431() /* ty=(Tensor[(16, 12, 5), float64],) */
}

def @func_12276(%var_12275: Tensor[(5, 9, 2), int16]) -> (Tensor[(10, ?, 10), bool], Tensor[(4), int32], Tensor[(16, 12, 5), float32], Tensor[(5, 9, 2), float64]) {
  %978 = fn (%var_12214: Tensor[(5, 9, 2), int16]) -> (Tensor[(10, ?, 10), bool], Tensor[(4), int32], Tensor[(16, 12, 5), float32], Tensor[(5, 9, 2), float64]) {
    %966 = @func_12109() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(4), int32], Tensor[(968), float32]) */;
    %967 = @func_8774() /* ty=(Tensor[(15, ?, 11), float64], Tensor[(16, 12, 5), float32]) */;
    %968 = cast(%var_12214, dtype="bool") /* ty=Tensor[(5, 9, 2), bool] */;
    %969 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(5, 9, 2), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %970 = cast(meta[relay.Constant][40] /* ty=Tensor[(5, 9, 2), int16] */, dtype="bool") /* ty=Tensor[(5, 9, 2), bool] */;
    %971 = dyn.reshape(%968, %969, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %972 = greater(%970, %971) /* ty=Tensor[(5, 9, 2), bool] */;
    %973 = cast(%972, dtype="float64") /* ty=Tensor[(5, 9, 2), float64] */;
    %974 = @func_10211() /* ty=Tensor[(10, ?, 10), bool] */;
    %975 = %966.1;
    %976 = %967.1;
    %977 = acos(%973) /* ty=Tensor[(5, 9, 2), float64] */;
    (%974, %975, %976, %977)
  };
  %978(%var_12275) /* ty=(Tensor[(10, ?, 10), bool], Tensor[(4), int32], Tensor[(16, 12, 5), float32], Tensor[(5, 9, 2), float64]) */
}

def @func_15348() -> (Tensor[(16, 12, 5), float32], Tensor[(720), float64], Tensor[(16, 12, 5), float32], Tensor[(12, 10, 6), float32], Tensor[(10, ?, 10), bool]) {
  %989 = fn () -> (Tensor[(16, 12, 5), float32], Tensor[(720), float64], Tensor[(16, 12, 5), float32], Tensor[(12, 10, 6), float32], Tensor[(10, ?, 10), bool]) {
    %979 = @func_12813() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) */;
    %980 = @func_12028() /* ty=(Tensor[(100), float32], Tensor[(720), float64]) */;
    %981 = @func_4960() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(12, 10, 6), float64], Tensor[(720), float64]) */;
    %982 = %981.1;
    %983 = cast(%982, dtype="float32") /* ty=Tensor[(12, 10, 6), float32] */;
    %984 = %979.1;
    %985 = %980.1;
    %986 = @func_14353() /* ty=Tensor[(16, 12, 5), float32] */;
    %987 = sigmoid(%983) /* ty=Tensor[(12, 10, 6), float32] */;
    %988 = @func_4279() /* ty=Tensor[(10, ?, 10), bool] */;
    (%984, %985, %986, %987, %988)
  };
  %989() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(720), float64], Tensor[(16, 12, 5), float32], Tensor[(12, 10, 6), float32], Tensor[(10, ?, 10), bool]) */
}

def @func_19254() -> (Tensor[(16, 12, 5), float32],) {
  %991 = fn () -> (Tensor[(16, 12, 5), float32],) {
    %990 = @func_4405() /* ty=Tensor[(16, 12, 5), float32] */;
    (%990,)
  };
  %991() /* ty=(Tensor[(16, 12, 5), float32],) */
}

def @func_10671() -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(1, 468), uint64]) {
  @func_10669() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(1, 468), uint64]) */
}

def @func_16072() -> (Tensor[(16, 12, 5), float32],) {
  @func_16070() /* ty=(Tensor[(16, 12, 5), float32],) */
}

def @func_5782() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(12, 10, 6), float64], Tensor[(720), float64], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  @func_5780() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(12, 10, 6), float64], Tensor[(720), float64], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */
}

def @func_18107() -> (Tensor[(100), float32], Tensor[(100), float32], Tensor[(16, 12, 5), float32]) {
  %992 = @func_16532() /* ty=(Tensor[(100), float32],) */;
  %993 = @func_16916() /* ty=(Tensor[(100), float32], Tensor[(16, 12, 5), float32]) */;
  %994 = @func_17257() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %995 = %992.0;
  %996 = %993.0;
  %997 = %994.0;
  (%995, %996, %997)
}

def @func_11269() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  @func_11267() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */
}

def @func_11749(%var_11746: Tensor[(4), int32]) -> (Tensor[(100), float32], Tensor[(100), float64], Tensor[(4), int32]) {
  %998 = cast(%var_11746, dtype="int32") /* ty=Tensor[(4), int32] */;
  %999 = reshape(%998, newshape=[4]) /* ty=Tensor[(4), int32] */;
  %1000 = @func_10872(%999) /* ty=(Tensor[(15, ?, 11), int16], Tensor[(4), int32], Tensor[(126), uint32], Tensor[(4), int32], Tensor[(10, ?, 10), bool], Tensor[(195), float32], Tensor[(100), float64]) */;
  %1001 = @func_6998() /* ty=Tensor[(100), float32] */;
  %1002 = %1000.6;
  (%1001, %1002, %var_11746)
}

def @func_11860(%var_11858: Tensor[(1, 11, 15), float64], %var_11859: int32) -> (Tensor[(1, 11, 15), float64], Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], int32) {
  %1010 = fn (%var_11823: Tensor[(1, 11, 15), float64], %var_11851: int32) -> (Tensor[(1, 11, 15), float64], Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], int32) {
    %1003 = cast(%var_11823, dtype="float64") /* ty=Tensor[(1, 11, 15), float64] */;
    %1004 = cast(%var_11851, dtype="int32") /* ty=int32 */;
    %1005 = reshape(%1004, newshape=[]) /* ty=int32 */;
    %1006 = @func_10072(%1005) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(1, 4), int32], int32, Tensor[(4), int32], Tensor[(16, 12, 5), uint32], Tensor[(10, ?, 10), bool], Tensor[(100), float32], Tensor[(11, 14, 15), bool]) */;
    %1007 = cosh(%1003) /* ty=Tensor[(1, 11, 15), float64] */;
    %1008 = @func_5173() /* ty=Tensor[(10, ?, 10), bool] */;
    %1009 = %1006.0;
    (%1007, %1008, %1009, %var_11851)
  };
  %1010(%var_11858, %var_11859) /* ty=(Tensor[(1, 11, 15), float64], Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], int32) */
}

def @func_18969() -> (Tensor[(16, 12, 5), float32],) {
  %1011 = @func_17398() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1012 = %1011.0;
  (%1012,)
}

def @func_20529() -> (Tensor[(100), float64],) {
  %1013 = @func_13542() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(100), float64]) */;
  %1014 = %1013.2;
  (%1014,)
}

def @func_8725() -> (Tensor[(100), float32], Tensor[(16, 12, 5), float32]) {
  %1018 = fn () -> (Tensor[(100), float32], Tensor[(16, 12, 5), float32]) {
    %1015 = @func_5660() /* ty=(Tensor[(16, 12, 5), float32],) */;
    %1016 = @func_5915() /* ty=Tensor[(100), float32] */;
    %1017 = %1015.0;
    (%1016, %1017)
  };
  %1018() /* ty=(Tensor[(100), float32], Tensor[(16, 12, 5), float32]) */
}

def @func_2844(%var_2842: Tensor[(13, 10, 2), uint64], %var_2843: Tensor[(13, 10, 2), uint64]) -> (Tensor[(13, 10, 2), bool],) {
  @func_2840(%var_2842, %var_2843) /* ty=(Tensor[(13, 10, 2), bool],) */
}

def @func_12938() -> (Tensor[(968), float32],) {
  %1021 = fn () -> (Tensor[(968), float32],) {
    %1019 = @func_12109() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(4), int32], Tensor[(968), float32]) */;
    %1020 = %1019.2;
    (%1020,)
  };
  %1021() /* ty=(Tensor[(968), float32],) */
}

def @func_4180() -> Tensor[(16, 12, 5), float32] {
  @func_4178() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_20531() -> (Tensor[(100), float64],) {
  @func_20529() /* ty=(Tensor[(100), float64],) */
}

def @main() -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), float64]) {
  %1022 = @func_18109() /* ty=(Tensor[(100), float32], Tensor[(100), float32], Tensor[(16, 12, 5), float32]) */;
  %1023 = @func_7718() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), int8]) */;
  %1024 = %1023.1;
  %1025 = @func_5915() /* ty=Tensor[(100), float32] */;
  %1026 = cast(%1025, dtype="float64") /* ty=Tensor[(100), float64] */;
  %1027 = shape_of(%1024, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1028 = cast(%1024, dtype="float64") /* ty=Tensor[(10, ?, 10), float64] */;
  %1029 = dyn.reshape(%1026, %1027, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1030 = %1022.2;
  %1031 = floor_mod(%1028, %1029) /* ty=Tensor[(10, ?, 10), float64] */;
  (%1030, %1031)
}

def @func_20320() -> (Tensor[(16, 12, 5), float32],) {
  %1034 = fn () -> (Tensor[(16, 12, 5), float32],) {
    %1032 = @func_4629() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */;
    %1033 = %1032.0;
    (%1033,)
  };
  %1034() /* ty=(Tensor[(16, 12, 5), float32],) */
}

def @func_8918() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), int32], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  %1035 = @func_8289() /* ty=(Tensor[(10, ?, 10), bool],) */;
  %1036 = %1035.0;
  %1037 = cast(%1036, dtype="float64") /* ty=Tensor[(10, ?, 10), float64] */;
  %1038 = reshape(%1037, newshape=[100]) /* ty=Tensor[(100), float64] */;
  %1039 = @func_5358(%1038) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float64]) */;
  %1040 = @func_8541() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), float64]) */;
  %1041 = %1040.1;
  %1042 = cast(%1036, dtype="uint16") /* ty=Tensor[(10, ?, 10), uint16] */;
  %1043 = shape_of(%1041, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1044 = cast(%1041, dtype="uint16") /* ty=Tensor[(10, ?, 10), uint16] */;
  %1045 = dyn.reshape(%1042, %1043, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1046 = multiply(%1044, %1045) /* ty=Tensor[(10, ?, 10), uint16] */;
  %1047 = cast(%1041, dtype="int32") /* ty=Tensor[(10, ?, 10), int32] */;
  %1048 = shape_of(%1046, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1049 = cast(%1046, dtype="int32") /* ty=Tensor[(10, ?, 10), int32] */;
  %1050 = dyn.reshape(%1047, %1048, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1051 = @func_5021() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1052 = %1039.0;
  %1053 = @func_4649() /* ty=Tensor[(16, 12, 5), float32] */;
  %1054 = left_shift(%1049, %1050) /* ty=Tensor[(10, ?, 10), int32] */;
  %1055 = %1051.0;
  %1056 = @func_4178() /* ty=Tensor[(16, 12, 5), float32] */;
  (%1052, %1053, %1054, %1055, %1056)
}

def @func_7858(%var_7856: Tensor[(10, 3, 10), bool]) -> (Tensor[(10, 3, 10), bool], Tensor[(16, 12, 5), float32]) {
  @func_7855(%var_7856) /* ty=(Tensor[(10, 3, 10), bool], Tensor[(16, 12, 5), float32]) */
}

def @func_4925() -> Tensor[(10, ?, 10), bool] {
  @func_4279() /* ty=Tensor[(10, ?, 10), bool] */
}

def @func_14355() -> Tensor[(16, 12, 5), float32] {
  @func_14353() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_15189() -> (Tensor[(16, 12, 5), float32],) {
  %1059 = fn () -> (Tensor[(16, 12, 5), float32],) {
    %1057 = @func_7716() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), int8]) */;
    %1058 = %1057.0;
    (%1058,)
  };
  %1059() /* ty=(Tensor[(16, 12, 5), float32],) */
}

def @func_18971() -> (Tensor[(16, 12, 5), float32],) {
  @func_18969() /* ty=(Tensor[(16, 12, 5), float32],) */
}

def @func_15826() -> Tensor[(315), float64] {
  @func_15824() /* ty=Tensor[(315), float64] */
}

def @func_21381() -> (Tensor[(15, ?, 11), uint16], Tensor[(16, 12, 5), float32]) {
  %1060 = @func_16070() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1061 = @func_17130() /* ty=Tensor[(15, ?, 11), uint16] */;
  %1062 = %1060.0;
  (%1061, %1062)
}

def @func_18030() -> (Tensor[(15, ?, 11), uint16], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) {
  %1063 = @func_8404() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1064 = @func_7971() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */;
  %1065 = @func_15493() /* ty=(Tensor[(10, 8, 10), float32], Tensor[(16, 12, 5), float32]) */;
  %1066 = @func_17130() /* ty=Tensor[(15, ?, 11), uint16] */;
  %1067 = %1063.0;
  %1068 = %1064.1;
  %1069 = %1065.1;
  (%1066, %1067, %1068, %1069)
}

def @func_15844() -> (Tensor[(16, 12, 5), float32], Tensor[(100), float32]) {
  %1070 = @func_8724() /* ty=(Tensor[(100), float32], Tensor[(16, 12, 5), float32]) */;
  %1071 = @func_4582() /* ty=Tensor[(16, 12, 5), float32] */;
  %1072 = %1070.0;
  (%1071, %1072)
}

def @func_21118() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  %1073 = @func_18949() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */;
  %1074 = %1073.1;
  %1075 = @func_20424() /* ty=Tensor[(16, 12, 5), float32] */;
  (%1074, %1075)
}

def @func_9587(%var_9564: int32, %var_9578: Tensor[(4), int32]) -> (Tensor[(100), float32], Tensor[(11, 14, 15), bool], int32, Tensor[(2310), int32], Tensor[(1, 4), int32], Tensor[(4), int32]) {
  %1076 = @func_6042() /* ty=(Tensor[(100), float32],) */;
  %1077 = cast(%var_9564, dtype="int32") /* ty=int32 */;
  %1078 = cast(meta[relay.Constant][41] /* ty=Tensor[(2310), int32] */, dtype="int32") /* ty=Tensor[(2310), int32] */;
  %1079 = reshape(%1077, newshape=[]) /* ty=int32 */;
  %1080 = reshape(%1078, newshape=[11, 14, 15]) /* ty=Tensor[(11, 14, 15), int32] */;
  %1081 = cast(%var_9564, dtype="int32") /* ty=int32 */;
  %1082 = cast(%var_9578, dtype="int32") /* ty=Tensor[(4), int32] */;
  %1083 = reshape(%1081, newshape=[]) /* ty=int32 */;
  %1084 = reshape(%1082, newshape=[1, 4]) /* ty=Tensor[(1, 4), int32] */;
  %1085 = %1076.0;
  %1086 = @func_4665(%1079, %1080) /* ty=Tensor[(11, 14, 15), bool] */;
  %1087 = @func_196(%1083, %1084) /* ty=Tensor[(1, 4), int32] */;
  (%1085, %1086, %var_9564, meta[relay.Constant][41] /* ty=Tensor[(2310), int32] */, %1087, %var_9578)
}

def @func_6913() -> (Tensor[(100), float32], Tensor[(10, ?, 10), bool], Tensor[(4), int32], uint16, Tensor[(4), int32], Tensor[(10, ?, 10), bool], Tensor[(10, ?, 10), bool]) {
  %1101 = fn () -> (Tensor[(100), float32], Tensor[(10, ?, 10), bool], Tensor[(4), int32], uint16, Tensor[(4), int32], Tensor[(10, ?, 10), bool], Tensor[(10, ?, 10), bool]) {
    %1088 = @func_4221() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float32]) */;
    %1089 = cast(meta[relay.Constant][42] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %1090 = cast(meta[relay.Constant][43] /* ty=Tensor[(4), int32] */, dtype="int32") /* ty=Tensor[(4), int32] */;
    %1091 = @func_5507() /* ty=Tensor[(10, ?, 10), bool] */;
    %1092 = cast(%1091, dtype="float32") /* ty=Tensor[(10, ?, 10), float32] */;
    %1093 = reshape(%1089, newshape=[]) /* ty=uint16 */;
    %1094 = reshape(%1090, newshape=[4, 1]) /* ty=Tensor[(4, 1), int32] */;
    %1095 = reshape(%1092, newshape=[100]) /* ty=Tensor[(100), float32] */;
    %1096 = @func_5418(%1093, %1094, %1095) /* ty=(Tensor[(4), int32], uint16, Tensor[(98), uint16], Tensor[(4, 1), int32], Tensor[(100), float32]) */;
    %1097 = %1088.2;
    %1098 = %1096.0;
    %1099 = @func_5468() /* ty=Tensor[(10, ?, 10), bool] */;
    %1100 = @func_5468() /* ty=Tensor[(10, ?, 10), bool] */;
    (%1097, %1091, %1098, meta[relay.Constant][42] /* ty=uint16 */, meta[relay.Constant][43] /* ty=Tensor[(4), int32] */, %1099, %1100)
  };
  %1101() /* ty=(Tensor[(100), float32], Tensor[(10, ?, 10), bool], Tensor[(4), int32], uint16, Tensor[(4), int32], Tensor[(10, ?, 10), bool], Tensor[(10, ?, 10), bool]) */
}

def @func_16196() -> (Tensor[(16, 12, 5), float32],) {
  %1102 = @func_5522() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1103 = %1102.0;
  (%1103,)
}

def @func_9137() -> (Tensor[(100), float32], Tensor[(16, 12, 5), float32], Tensor[(100), float32], Tensor[(16, 12, 5), float32]) {
  %1104 = @func_5265() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(100), float32]) */;
  %1105 = @func_8663() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) */;
  %1106 = @func_8724() /* ty=(Tensor[(100), float32], Tensor[(16, 12, 5), float32]) */;
  %1107 = @func_8942() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1108 = %1104.1;
  %1109 = %1105.1;
  %1110 = %1106.0;
  %1111 = %1107.0;
  (%1108, %1109, %1110, %1111)
}

def @func_3704(%var_3702: Tensor[(5, 3, 13), float32], %var_3703: Tensor[(4), int32]) -> (Tensor[(5, 3, 13), float32], Tensor[(1, 4), int32], Tensor[(126), uint32], Tensor[(4), int32], Tensor[(1, 4), int32], uint16, Tensor[(98), uint16], int32) {
  %1138 = fn (%var_3667: Tensor[(5, 3, 13), float32], %var_3681: Tensor[(4), int32]) -> (Tensor[(5, 3, 13), float32], Tensor[(1, 4), int32], Tensor[(126), uint32], Tensor[(4), int32], Tensor[(1, 4), int32], uint16, Tensor[(98), uint16], int32) {
    %1112 = cast(%var_3667, dtype="float32") /* ty=Tensor[(5, 3, 13), float32] */;
    %1113 = cast(meta[relay.Constant][44] /* ty=Tensor[(126), uint32] */, dtype="uint32") /* ty=Tensor[(126), uint32] */;
    %1114 = cast(meta[relay.Constant][44] /* ty=Tensor[(126), uint32] */, dtype="uint32") /* ty=Tensor[(126), uint32] */;
    %1115 = cast(%var_3681, dtype="int32") /* ty=Tensor[(4), int32] */;
    %1116 = reshape(%1113, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), uint32] */;
    %1117 = reshape(%1114, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), uint32] */;
    %1118 = reshape(%1115, newshape=[4]) /* ty=Tensor[(4), int32] */;
    %1119 = @func_283(%1116, %1117, %1118) /* ty=(Tensor[(1, 4), int32], int32, Tensor[(4), int32], Tensor[(14, 3, 3), float64], Tensor[(1, 4), int32], Tensor[(1, 4), int32]) */;
    %1120 = cast(meta[relay.Constant][45] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %1121 = cast(meta[relay.Constant][46] /* ty=Tensor[(98), uint16] */, dtype="uint16") /* ty=Tensor[(98), uint16] */;
    %1122 = cast(%var_3681, dtype="int32") /* ty=Tensor[(4), int32] */;
    %1123 = reshape(%1120, newshape=[]) /* ty=uint16 */;
    %1124 = reshape(%1121, newshape=[14, 7, 1]) /* ty=Tensor[(14, 7, 1), uint16] */;
    %1125 = reshape(%1122, newshape=[4]) /* ty=Tensor[(4), int32] */;
    %1126 = @func_377(%1123, %1124, %1125) /* ty=(Tensor[(14, 7, 1), uint16], Tensor[(1, 4), int32], Tensor[(4), int32]) */;
    %1127 = cast(meta[relay.Constant][44] /* ty=Tensor[(126), uint32] */, dtype="uint32") /* ty=Tensor[(126), uint32] */;
    %1128 = cast(meta[relay.Constant][44] /* ty=Tensor[(126), uint32] */, dtype="uint32") /* ty=Tensor[(126), uint32] */;
    %1129 = cast(%var_3681, dtype="int32") /* ty=Tensor[(4), int32] */;
    %1130 = reshape(%1127, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), uint32] */;
    %1131 = reshape(%1128, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), uint32] */;
    %1132 = reshape(%1129, newshape=[4]) /* ty=Tensor[(4), int32] */;
    %1133 = @func_283(%1130, %1131, %1132) /* ty=(Tensor[(1, 4), int32], int32, Tensor[(4), int32], Tensor[(14, 3, 3), float64], Tensor[(1, 4), int32], Tensor[(1, 4), int32]) */;
    %1134 = tan(%1112) /* ty=Tensor[(5, 3, 13), float32] */;
    %1135 = %1119.5;
    %1136 = %1126.1;
    %1137 = %1133.1;
    (%1134, %1135, meta[relay.Constant][44] /* ty=Tensor[(126), uint32] */, %var_3681, %1136, meta[relay.Constant][45] /* ty=uint16 */, meta[relay.Constant][46] /* ty=Tensor[(98), uint16] */, %1137)
  };
  %1138(%var_3702, %var_3703) /* ty=(Tensor[(5, 3, 13), float32], Tensor[(1, 4), int32], Tensor[(126), uint32], Tensor[(4), int32], Tensor[(1, 4), int32], uint16, Tensor[(98), uint16], int32) */
}

def @func_18001() -> Tensor[(10, ?, 10), bool] {
  @func_17999() /* ty=Tensor[(10, ?, 10), bool] */
}

def @func_21452(%var_21447: Tensor[(880), uint32]) -> (Tensor[(16, 12, 5), float32], Tensor[(12, 10, 6), float64], Tensor[(5, 11, 16), bool], Tensor[(880), uint32]) {
  %1139 = @func_13656() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(100), float32]) */;
  %1140 = @func_19607() /* ty=(Tensor[(12, 10, 6), float64], Tensor[(16, 12, 5), float32]) */;
  %1141 = cast(%var_21447, dtype="uint32") /* ty=Tensor[(880), uint32] */;
  %1142 = reshape(%1141, newshape=[5, 11, 16]) /* ty=Tensor[(5, 11, 16), uint32] */;
  %1143 = @func_7829(%1142) /* ty=(Tensor[(5, 11, 16), bool],) */;
  %1144 = %1139.0;
  %1145 = %1140.0;
  %1146 = %1143.0;
  (%1144, %1145, %1146, %var_21447)
}

def @func_4222() -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float32]) {
  %1153 = fn () -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float32]) {
    %1147 = cast(meta[relay.Constant][47] /* ty=Tensor[(100), float64] */, dtype="float64") /* ty=Tensor[(100), float64] */;
    %1148 = reshape(%1147, newshape=[10, 1, 10]) /* ty=Tensor[(10, 1, 10), float64] */;
    %1149 = cast(meta[relay.Constant][47] /* ty=Tensor[(100), float64] */, dtype="float32") /* ty=Tensor[(100), float32] */;
    %1150 = @func_4178() /* ty=Tensor[(16, 12, 5), float32] */;
    %1151 = @func_2749(%1148) /* ty=Tensor[(10, ?, 10), bool] */;
    %1152 = atanh(%1149) /* ty=Tensor[(100), float32] */;
    (%1150, %1151, %1152)
  };
  %1153() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float32]) */
}

def @func_5436() -> Tensor[(10, ?, 10), bool] {
  @func_5434() /* ty=Tensor[(10, ?, 10), bool] */
}

def @func_16927() -> Tensor[(16, 12, 5), float32] {
  @func_16925() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_16918() -> (Tensor[(100), float32], Tensor[(16, 12, 5), float32]) {
  @func_16916() /* ty=(Tensor[(100), float32], Tensor[(16, 12, 5), float32]) */
}

def @func_11114() -> (Tensor[(315), float64],) {
  %1154 = @func_5721() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(15, 7, 3), float64], Tensor[(315), float64]) */;
  %1155 = %1154.2;
  (%1155,)
}

def @func_11344() -> (Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(100), float32]) {
  %1161 = fn () -> (Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(100), float32]) {
    %1156 = @func_4629() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */;
    %1157 = @func_7641() /* ty=(Tensor[(16, 12, 5), float32],) */;
    %1158 = %1156.1;
    %1159 = %1157.0;
    %1160 = @func_6998() /* ty=Tensor[(100), float32] */;
    (%1158, %1159, %1160)
  };
  %1161() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(100), float32]) */
}

def @func_18147() -> Tensor[(10, ?, 10), bool] {
  %1169 = fn () -> Tensor[(10, ?, 10), bool] {
    %1162 = @func_12327() /* ty=Tensor[(10, ?, 10), bool] */;
    %1163 = @func_16532() /* ty=(Tensor[(100), float32],) */;
    %1164 = %1163.0;
    %1165 = cast(%1164, dtype="bool") /* ty=Tensor[(100), bool] */;
    %1166 = shape_of(%1162, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1167 = cast(%1162, dtype="bool") /* ty=Tensor[(10, ?, 10), bool] */;
    %1168 = dyn.reshape(%1165, %1166, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%1167, %1168) /* ty=Tensor[(10, ?, 10), bool] */
  };
  %1169() /* ty=Tensor[(10, ?, 10), bool] */
}

def @func_15786(%var_15752: Tensor[(6, 14, 2), float64], %var_15778: Tensor[(468), uint64]) -> (Tensor[(6, 14, 2), float64], Tensor[(4), int32], Tensor[(468), uint64], Tensor[(10, 8, 10), float32]) {
  %1170 = cast(%var_15752, dtype="float64") /* ty=Tensor[(6, 14, 2), float64] */;
  %1171 = cast(%var_15778, dtype="uint64") /* ty=Tensor[(468), uint64] */;
  %1172 = reshape(%1171, newshape=[468]) /* ty=Tensor[(468), uint64] */;
  %1173 = @func_8315(%1172) /* ty=(Tensor[(10, ?, 10), bool], Tensor[(4), int32], Tensor[(468), uint64]) */;
  %1174 = @func_15493() /* ty=(Tensor[(10, 8, 10), float32], Tensor[(16, 12, 5), float32]) */;
  %1175 = tan(%1170) /* ty=Tensor[(6, 14, 2), float64] */;
  %1176 = %1173.1;
  %1177 = %1174.0;
  (%1175, %1176, %var_15778, %1177)
}

def @func_4665(%var_4656: int32, %var_4657: Tensor[(11, 14, 15), int32]) -> Tensor[(11, 14, 15), bool] {
  %1178 = cast(%var_4656, dtype="bool") /* ty=bool */;
  %1179 = cast(%var_4657, dtype="bool") /* ty=Tensor[(11, 14, 15), bool] */;
  less(%1178, %1179) /* ty=Tensor[(11, 14, 15), bool] */
}

def @func_12857() -> (Tensor[(100), float32], Tensor[(10, ?, 10), bool], Tensor[(11, 14, 13), float32], Tensor[(2002), float32], Tensor[(10, ?, 10), bool]) {
  %1191 = fn () -> (Tensor[(100), float32], Tensor[(10, ?, 10), bool], Tensor[(11, 14, 13), float32], Tensor[(2002), float32], Tensor[(10, ?, 10), bool]) {
    %1180 = @func_6042() /* ty=(Tensor[(100), float32],) */;
    %1181 = @func_4629() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */;
    %1182 = cast(meta[relay.Constant][48] /* ty=Tensor[(2002), float32] */, dtype="float32") /* ty=Tensor[(2002), float32] */;
    %1183 = cast(meta[relay.Constant][48] /* ty=Tensor[(2002), float32] */, dtype="float32") /* ty=Tensor[(2002), float32] */;
    %1184 = reshape(%1182, newshape=[11, 14, 13]) /* ty=Tensor[(11, 14, 13), float32] */;
    %1185 = reshape(%1183, newshape=[11, 14, 13]) /* ty=Tensor[(11, 14, 13), float32] */;
    %1186 = @func_6985(%1184, %1185) /* ty=(Tensor[(11, 14, 13), float32], Tensor[(10, ?, 10), bool], Tensor[(11, 14, 13), uint64]) */;
    %1187 = %1180.0;
    %1188 = %1181.1;
    %1189 = %1186.0;
    %1190 = @func_12759() /* ty=Tensor[(10, ?, 10), bool] */;
    (%1187, %1188, %1189, meta[relay.Constant][48] /* ty=Tensor[(2002), float32] */, %1190)
  };
  %1191() /* ty=(Tensor[(100), float32], Tensor[(10, ?, 10), bool], Tensor[(11, 14, 13), float32], Tensor[(2002), float32], Tensor[(10, ?, 10), bool]) */
}

def @func_7831(%var_7830: Tensor[(5, 11, 16), uint32]) -> (Tensor[(5, 11, 16), bool],) {
  %1197 = fn (%var_7822: Tensor[(5, 11, 16), uint32]) -> (Tensor[(5, 11, 16), bool],) {
    %1192 = cast(meta[relay.Constant][49] /* ty=Tensor[(5, 11, 16), uint32] */, dtype="bool") /* ty=Tensor[(5, 11, 16), bool] */;
    %1193 = shape_of(%var_7822, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1194 = cast(%var_7822, dtype="bool") /* ty=Tensor[(5, 11, 16), bool] */;
    %1195 = dyn.reshape(%1192, %1193, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1196 = less(%1194, %1195) /* ty=Tensor[(5, 11, 16), bool] */;
    (%1196,)
  };
  %1197(%var_7830) /* ty=(Tensor[(5, 11, 16), bool],) */
}

def @func_16870() -> Tensor[(10, 8, 10), float32] {
  @func_16868() /* ty=Tensor[(10, 8, 10), float32] */
}

def @func_16337() -> (Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) {
  %1201 = fn () -> (Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) {
    %1198 = @func_12503() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
    %1199 = @func_8437() /* ty=Tensor[(10, ?, 10), bool] */;
    %1200 = %1198.1;
    (%1199, %1200)
  };
  %1201() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) */
}

def @func_13187() -> (Tensor[(100), float32],) {
  %1204 = fn () -> (Tensor[(100), float32],) {
    %1202 = @func_6042() /* ty=(Tensor[(100), float32],) */;
    %1203 = %1202.0;
    (%1203,)
  };
  %1204() /* ty=(Tensor[(100), float32],) */
}

def @func_18802() -> (Tensor[(16, 12, 5), float32],) {
  %1205 = @func_5522() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1206 = %1205.0;
  (%1206,)
}

def @func_10072(%var_10042: int32) -> (Tensor[(16, 12, 5), float32], Tensor[(1, 4), int32], int32, Tensor[(4), int32], Tensor[(16, 12, 5), uint32], Tensor[(10, ?, 10), bool], Tensor[(100), float32], Tensor[(11, 14, 15), bool]) {
  %1207 = @func_7641() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1208 = cast(%var_10042, dtype="int32") /* ty=int32 */;
  %1209 = cast(meta[relay.Constant][50] /* ty=Tensor[(4), int32] */, dtype="int32") /* ty=Tensor[(4), int32] */;
  %1210 = reshape(%1208, newshape=[]) /* ty=int32 */;
  %1211 = reshape(%1209, newshape=[1, 4]) /* ty=Tensor[(1, 4), int32] */;
  %1212 = @func_8192(%1210, %1211) /* ty=(Tensor[(100), float64], Tensor[(1, 4), int32], int32, Tensor[(1, 4), int32]) */;
  %1213 = %1207.0;
  %1214 = cast(%1213, dtype="float32") /* ty=Tensor[(16, 12, 5), float32] */;
  %1215 = reshape(%1214, newshape=[16, 12, 5]) /* ty=Tensor[(16, 12, 5), float32] */;
  %1216 = @func_9912(%1215) /* ty=(Tensor[(16, 12, 5), uint32],) */;
  %1217 = @func_5265() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(100), float32]) */;
  %1218 = cast(%var_10042, dtype="int32") /* ty=int32 */;
  %1219 = %1212.3;
  %1220 = cast(%1219, dtype="int32") /* ty=Tensor[(1, 4), int32] */;
  %1221 = reshape(%1218, newshape=[]) /* ty=int32 */;
  %1222 = reshape(%1220, newshape=[4]) /* ty=Tensor[(4), int32] */;
  %1223 = @func_9587(%1221, %1222) /* ty=(Tensor[(100), float32], Tensor[(11, 14, 15), bool], int32, Tensor[(2310), int32], Tensor[(1, 4), int32], Tensor[(4), int32]) */;
  %1224 = %1216.0;
  %1225 = @func_5468() /* ty=Tensor[(10, ?, 10), bool] */;
  %1226 = %1217.1;
  %1227 = %1223.1;
  (%1213, %1219, %var_10042, meta[relay.Constant][50] /* ty=Tensor[(4), int32] */, %1224, %1225, %1226, %1227)
}

def @func_18829() -> (Tensor[(10, ?, 10), bool], Tensor[(100), float32]) {
  @func_18827() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(100), float32]) */
}

def @func_381(%var_378: uint16, %var_379: Tensor[(14, 7, 1), uint16], %var_380: Tensor[(4), int32]) -> (Tensor[(14, 7, 1), uint16], Tensor[(1, 4), int32], Tensor[(4), int32]) {
  %1236 = fn (%var_353: uint16, %var_354: Tensor[(14, 7, 1), uint16], %var_372: Tensor[(4), int32]) -> (Tensor[(14, 7, 1), uint16], Tensor[(1, 4), int32], Tensor[(4), int32]) {
    %1228 = cast(%var_353, dtype="uint16") /* ty=uint16 */;
    %1229 = cast(%var_354, dtype="uint16") /* ty=Tensor[(14, 7, 1), uint16] */;
    %1230 = cast(%var_353, dtype="int32") /* ty=int32 */;
    %1231 = cast(%var_372, dtype="int32") /* ty=Tensor[(4), int32] */;
    %1232 = reshape(%1230, newshape=[]) /* ty=int32 */;
    %1233 = reshape(%1231, newshape=[1, 4]) /* ty=Tensor[(1, 4), int32] */;
    %1234 = subtract(%1228, %1229) /* ty=Tensor[(14, 7, 1), uint16] */;
    %1235 = @func_196(%1232, %1233) /* ty=Tensor[(1, 4), int32] */;
    (%1234, %1235, %var_372)
  };
  %1236(%var_378, %var_379, %var_380) /* ty=(Tensor[(14, 7, 1), uint16], Tensor[(1, 4), int32], Tensor[(4), int32]) */
}

def @func_16837() -> (Tensor[(968), float64], Tensor[(11, 8, 11), float32]) {
  @func_16835() /* ty=(Tensor[(968), float64], Tensor[(11, 8, 11), float32]) */
}

def @func_9464() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  %1237 = @func_6675() /* ty=(Tensor[(720), float64], Tensor[(16, 12, 5), float32]) */;
  %1238 = @func_6587() /* ty=(Tensor[(15, ?, 11), int16], Tensor[(16, 12, 5), float32]) */;
  %1239 = %1237.1;
  %1240 = %1238.1;
  (%1239, %1240)
}

def @func_19558() -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) {
  %1241 = @func_15188() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1242 = %1241.0;
  %1243 = @func_5173() /* ty=Tensor[(10, ?, 10), bool] */;
  (%1242, %1243)
}

def @func_2749(%var_2737: Tensor[(10, 1, 10), float64]) -> Tensor[(10, ?, 10), bool] {
  %1244 = cast(%var_2737, dtype="float64") /* ty=Tensor[(10, 1, 10), float64] */;
  %1245 = log2(%1244) /* ty=Tensor[(10, 1, 10), float64] */;
  %1246 = cast(%1245, dtype="bool") /* ty=Tensor[(10, 1, 10), bool] */;
  %1247 = shape_of(%var_2737, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1248 = cast(%var_2737, dtype="bool") /* ty=Tensor[(10, 1, 10), bool] */;
  %1249 = dyn.reshape(%1246, %1247, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%1248, %1249) /* ty=Tensor[(10, ?, 10), bool] */
}

def @func_6676() -> (Tensor[(720), float64], Tensor[(16, 12, 5), float32]) {
  %1253 = fn () -> (Tensor[(720), float64], Tensor[(16, 12, 5), float32]) {
    %1250 = @func_6485() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(720), float64], Tensor[(10, ?, 10), bool]) */;
    %1251 = %1250.1;
    %1252 = @func_4405() /* ty=Tensor[(16, 12, 5), float32] */;
    (%1251, %1252)
  };
  %1253() /* ty=(Tensor[(720), float64], Tensor[(16, 12, 5), float32]) */
}

def @func_4872(%var_4871: Tensor[(9, 13, 4), uint64]) -> (Tensor[(9, 13, 4), uint16], Tensor[(1, 4), int32], int32, Tensor[(4), int32], Tensor[(9, 13, 4), float64], Tensor[(9, 13, 4), float64], Tensor[(4), int32], Tensor[(7, 14), uint16]) {
  %1281 = fn (%var_4794: Tensor[(9, 13, 4), uint64]) -> (Tensor[(9, 13, 4), uint16], Tensor[(1, 4), int32], int32, Tensor[(4), int32], Tensor[(9, 13, 4), float64], Tensor[(9, 13, 4), float64], Tensor[(4), int32], Tensor[(7, 14), uint16]) {
    %1254 = cast(%var_4794, dtype="uint16") /* ty=Tensor[(9, 13, 4), uint16] */;
    %1255 = shape_of(meta[relay.Constant][51] /* ty=Tensor[(9, 13, 4), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1256 = cast(meta[relay.Constant][51] /* ty=Tensor[(9, 13, 4), uint64] */, dtype="uint16") /* ty=Tensor[(9, 13, 4), uint16] */;
    %1257 = dyn.reshape(%1254, %1255, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1258 = cast(-5 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %1259 = cast(meta[relay.Constant][52] /* ty=Tensor[(4), int32] */, dtype="int32") /* ty=Tensor[(4), int32] */;
    %1260 = reshape(%1258, newshape=[]) /* ty=int32 */;
    %1261 = reshape(%1259, newshape=[1, 4]) /* ty=Tensor[(1, 4), int32] */;
    %1262 = cast(meta[relay.Constant][51] /* ty=Tensor[(9, 13, 4), uint64] */, dtype="uint64") /* ty=Tensor[(9, 13, 4), uint64] */;
    %1263 = shape_of(%var_4794, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1264 = cast(%var_4794, dtype="uint64") /* ty=Tensor[(9, 13, 4), uint64] */;
    %1265 = dyn.reshape(%1262, %1263, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %1266 = right_shift(%1264, %1265) /* ty=Tensor[(9, 13, 4), uint64] */;
    %1267 = cast(%1266, dtype="float64") /* ty=Tensor[(9, 13, 4), float64] */;
    %1268 = cast(%1266, dtype="float64") /* ty=Tensor[(9, 13, 4), float64] */;
    %1269 = cast(-5 /* ty=int32 */, dtype="uint16") /* ty=uint16 */;
    %1270 = cast(meta[relay.Constant][53] /* ty=Tensor[(7, 14), uint16] */, dtype="uint16") /* ty=Tensor[(7, 14), uint16] */;
    %1271 = cast(meta[relay.Constant][52] /* ty=Tensor[(4), int32] */, dtype="int32") /* ty=Tensor[(4), int32] */;
    %1272 = reshape(%1269, newshape=[]) /* ty=uint16 */;
    %1273 = reshape(%1270, newshape=[14, 7, 1]) /* ty=Tensor[(14, 7, 1), uint16] */;
    %1274 = reshape(%1271, newshape=[4]) /* ty=Tensor[(4), int32] */;
    %1275 = @func_377(%1272, %1273, %1274) /* ty=(Tensor[(14, 7, 1), uint16], Tensor[(1, 4), int32], Tensor[(4), int32]) */;
    %1276 = maximum(%1256, %1257) /* ty=Tensor[(9, 13, 4), uint16] */;
    %1277 = @func_196(%1260, %1261) /* ty=Tensor[(1, 4), int32] */;
    %1278 = acosh(%1267) /* ty=Tensor[(9, 13, 4), float64] */;
    %1279 = exp(%1268) /* ty=Tensor[(9, 13, 4), float64] */;
    %1280 = %1275.2;
    (%1276, %1277, -5 /* ty=int32 */, meta[relay.Constant][52] /* ty=Tensor[(4), int32] */, %1278, %1279, %1280, meta[relay.Constant][53] /* ty=Tensor[(7, 14), uint16] */)
  };
  %1281(%var_4871) /* ty=(Tensor[(9, 13, 4), uint16], Tensor[(1, 4), int32], int32, Tensor[(4), int32], Tensor[(9, 13, 4), float64], Tensor[(9, 13, 4), float64], Tensor[(4), int32], Tensor[(7, 14), uint16]) */
}

def @func_14335() -> Tensor[(16, 12, 5), float32] {
  %1283 = fn () -> Tensor[(16, 12, 5), float32] {
    %1282 = @func_7716() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), int8]) */;
    %1282.0
  };
  %1283() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_6043() -> (Tensor[(100), float32],) {
  %1285 = fn () -> (Tensor[(100), float32],) {
    %1284 = @func_5915() /* ty=Tensor[(100), float32] */;
    (%1284,)
  };
  %1285() /* ty=(Tensor[(100), float32],) */
}

def @func_11519() -> (Tensor[(16, 12, 5), float32],) {
  @func_11517() /* ty=(Tensor[(16, 12, 5), float32],) */
}

def @func_17513() -> (Tensor[(100), float32],) {
  %1288 = fn () -> (Tensor[(100), float32],) {
    %1286 = @func_14646() /* ty=(int32, Tensor[(1, 4), int32], Tensor[(4), int32], Tensor[(100), float32], Tensor[(100), float32]) */;
    %1287 = %1286.4;
    (%1287,)
  };
  %1288() /* ty=(Tensor[(100), float32],) */
}

def @func_18032() -> (Tensor[(15, ?, 11), uint16], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) {
  @func_18030() /* ty=(Tensor[(15, ?, 11), uint16], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) */
}

def @func_15749() -> (Tensor[(16, 12, 5), float32], Tensor[(100), float32]) {
  %1292 = fn () -> (Tensor[(16, 12, 5), float32], Tensor[(100), float32]) {
    %1289 = @func_12414() /* ty=(Tensor[(16, 12, 5), float32],) */;
    %1290 = %1289.0;
    %1291 = @func_11203() /* ty=Tensor[(100), float32] */;
    (%1290, %1291)
  };
  %1292() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(100), float32]) */
}

def @func_19608() -> (Tensor[(12, 10, 6), float64], Tensor[(16, 12, 5), float32]) {
  %1297 = fn () -> (Tensor[(12, 10, 6), float64], Tensor[(16, 12, 5), float32]) {
    %1293 = @func_4960() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(12, 10, 6), float64], Tensor[(720), float64]) */;
    %1294 = @func_6192() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(720), float64], Tensor[(16, 12, 5), float32]) */;
    %1295 = %1293.1;
    %1296 = %1294.2;
    (%1295, %1296)
  };
  %1297() /* ty=(Tensor[(12, 10, 6), float64], Tensor[(16, 12, 5), float32]) */
}

def @func_16858(%var_16857: Tensor[(1350), float32]) -> (Tensor[(16, 12, 5), float32], Tensor[(10, 9, 15), uint64], Tensor[(1350), float32], Tensor[(16, 12, 5), float32]) {
  %1307 = fn (%var_16851: Tensor[(1350), float32]) -> (Tensor[(16, 12, 5), float32], Tensor[(10, 9, 15), uint64], Tensor[(1350), float32], Tensor[(16, 12, 5), float32]) {
    %1298 = @func_6639() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(100), float32], Tensor[(100), float32]) */;
    %1299 = cast(%var_16851, dtype="float32") /* ty=Tensor[(1350), float32] */;
    %1300 = cast(%var_16851, dtype="float32") /* ty=Tensor[(1350), float32] */;
    %1301 = reshape(%1299, newshape=[10, 9, 15]) /* ty=Tensor[(10, 9, 15), float32] */;
    %1302 = reshape(%1300, newshape=[10, 9, 15]) /* ty=Tensor[(10, 9, 15), float32] */;
    %1303 = @func_11517() /* ty=(Tensor[(16, 12, 5), float32],) */;
    %1304 = %1298.0;
    %1305 = @func_16054(%1301, %1302) /* ty=Tensor[(10, 9, 15), uint64] */;
    %1306 = %1303.0;
    (%1304, %1305, %var_16851, %1306)
  };
  %1307(%var_16857) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, 9, 15), uint64], Tensor[(1350), float32], Tensor[(16, 12, 5), float32]) */
}

def @func_17743(%var_17736: Tensor[(968), float32]) -> (Tensor[(10, ?, 10), float64], Tensor[(11, 8, 11), float32], Tensor[(968), float32]) {
  %1308 = @func_8541() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), float64]) */;
  %1309 = cast(%var_17736, dtype="float32") /* ty=Tensor[(968), float32] */;
  %1310 = reshape(%1309, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), float32] */;
  %1311 = @func_989(%1310) /* ty=(Tensor[(11, 8, 11), float32],) */;
  %1312 = %1308.1;
  %1313 = %1311.0;
  (%1312, %1313, %var_17736)
}

def @func_5661() -> (Tensor[(16, 12, 5), float32],) {
  %1316 = fn () -> (Tensor[(16, 12, 5), float32],) {
    %1314 = @func_4221() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float32]) */;
    %1315 = %1314.0;
    (%1315,)
  };
  %1316() /* ty=(Tensor[(16, 12, 5), float32],) */
}

def @func_4477() -> Tensor[(100), float32] {
  %1318 = fn () -> Tensor[(100), float32] {
    %1317 = @func_4221() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float32]) */;
    %1317.2
  };
  %1318() /* ty=Tensor[(100), float32] */
}

def @func_20542() -> (Tensor[(16, 12, 5), float32],) {
  %1319 = @func_13059() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1320 = %1319.0;
  (%1320,)
}

def @func_16533() -> (Tensor[(100), float32],) {
  %1322 = fn () -> (Tensor[(100), float32],) {
    %1321 = @func_5915() /* ty=Tensor[(100), float32] */;
    (%1321,)
  };
  %1322() /* ty=(Tensor[(100), float32],) */
}

def @func_17724(%var_17722: Tensor[(10, 9, 10), bool]) -> Tensor[(10, 9, 10), bool] {
  @func_17721(%var_17722) /* ty=Tensor[(10, 9, 10), bool] */
}

def @func_11770() -> (Tensor[(10, ?, 10), bool],) {
  %1323 = @func_5434() /* ty=Tensor[(10, ?, 10), bool] */;
  (%1323,)
}

def @func_19057(%var_19055: Tensor[(15, 14, 14), float32]) -> Tensor[(15, 14, 14), float32] {
  @func_19054(%var_19055) /* ty=Tensor[(15, 14, 14), float32] */
}

def @func_11517() -> (Tensor[(16, 12, 5), float32],) {
  %1324 = @func_9750() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */;
  %1325 = %1324.0;
  (%1325,)
}

def @func_15707() -> Tensor[(315), float64] {
  @func_15705() /* ty=Tensor[(315), float64] */
}

def @func_13499(%var_13498: Tensor[(720), float64]) -> (Tensor[(100), float64], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(12, 10, 6), float64], Tensor[(720), float64], Tensor[(15, ?, 11), float32]) {
  %1342 = fn (%var_13492: Tensor[(720), float64]) -> (Tensor[(100), float64], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(12, 10, 6), float64], Tensor[(720), float64], Tensor[(15, ?, 11), float32]) {
    %1326 = @func_7618() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float64]) */;
    %1327 = @func_11963() /* ty=(Tensor[(16, 12, 5), float32],) */;
    %1328 = @func_12813() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) */;
    %1329 = @func_7019() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
    %1330 = cast(%var_13492, dtype="float64") /* ty=Tensor[(720), float64] */;
    %1331 = reshape(%1330, newshape=[12, 10, 6]) /* ty=Tensor[(12, 10, 6), float64] */;
    %1332 = @func_745(%1331) /* ty=(Tensor[(12, 10, 6), float64],) */;
    %1333 = @func_8774() /* ty=(Tensor[(15, ?, 11), float64], Tensor[(16, 12, 5), float32]) */;
    %1334 = %1333.0;
    %1335 = cast(%1334, dtype="float32") /* ty=Tensor[(15, ?, 11), float32] */;
    %1336 = %1326.2;
    %1337 = %1327.0;
    %1338 = %1328.1;
    %1339 = %1329.0;
    %1340 = %1332.0;
    %1341 = tan(%1335) /* ty=Tensor[(15, ?, 11), float32] */;
    (%1336, %1337, %1338, %1339, %1340, %var_13492, %1341)
  };
  %1342(%var_13498) /* ty=(Tensor[(100), float64], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(12, 10, 6), float64], Tensor[(720), float64], Tensor[(15, ?, 11), float32]) */
}

def @func_15454(%var_15453: int32) -> (Tensor[(15, ?, 11), int16], int32, int32, Tensor[(4), int32]) {
  %1351 = fn (%var_15448: int32) -> (Tensor[(15, ?, 11), int16], int32, int32, Tensor[(4), int32]) {
    %1343 = @func_8334() /* ty=(Tensor[(15, ?, 11), int16],) */;
    %1344 = cast(%var_15448, dtype="int32") /* ty=int32 */;
    %1345 = cast(meta[relay.Constant][54] /* ty=Tensor[(4), int32] */, dtype="int32") /* ty=Tensor[(4), int32] */;
    %1346 = reshape(%1344, newshape=[]) /* ty=int32 */;
    %1347 = reshape(%1345, newshape=[1, 4]) /* ty=Tensor[(1, 4), int32] */;
    %1348 = @func_6552(%1346, %1347) /* ty=(Tensor[(100), float32], Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(1, 4), int32], int32, Tensor[(1, 4), int32], Tensor[(16, 12, 5), float32]) */;
    %1349 = %1343.0;
    %1350 = %1348.5;
    (%1349, %1350, %var_15448, meta[relay.Constant][54] /* ty=Tensor[(4), int32] */)
  };
  %1351(%var_15453) /* ty=(Tensor[(15, ?, 11), int16], int32, int32, Tensor[(4), int32]) */
}

def @func_14296(%var_14294: int32, %var_14295: Tensor[(1, 4), int32]) -> (Tensor[(100), float32], Tensor[(1, 4), int32], int32, Tensor[(1, 4), int32], Tensor[(100), float32], Tensor[(15, ?, 11), int16], Tensor[(16, 12, 5), float32]) {
  @func_14292(%var_14294, %var_14295) /* ty=(Tensor[(100), float32], Tensor[(1, 4), int32], int32, Tensor[(1, 4), int32], Tensor[(100), float32], Tensor[(15, ?, 11), int16], Tensor[(16, 12, 5), float32]) */
}

def @func_19751() -> (Tensor[(16, 12, 5), float32], Tensor[(100), float32], Tensor[(10, ?, 10), bool], Tensor[(195), float32], Tensor[(968), float32], Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  %1352 = @func_6291() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1353 = @func_17323() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(100), float32]) */;
  %1354 = cast(meta[relay.Constant][55] /* ty=Tensor[(195), float32] */, dtype="float32") /* ty=Tensor[(195), float32] */;
  %1355 = cast(meta[relay.Constant][56] /* ty=Tensor[(968), float32] */, dtype="float32") /* ty=Tensor[(968), float32] */;
  %1356 = reshape(%1354, newshape=[195]) /* ty=Tensor[(195), float32] */;
  %1357 = reshape(%1355, newshape=[968]) /* ty=Tensor[(968), float32] */;
  %1358 = @func_19399(%1356, %1357) /* ty=(Tensor[(10, ?, 10), bool], Tensor[(98), uint32], Tensor[(195), float32], Tensor[(4), int32], Tensor[(98), uint16], Tensor[(968), float32], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(260), uint64], Tensor[(260), uint64]) */;
  %1359 = @func_5148() /* ty=(Tensor[(10, ?, 10), bool],) */;
  %1360 = @func_18678() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %1361 = @func_11343() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(100), float32]) */;
  %1362 = %1352.0;
  %1363 = %1353.1;
  %1364 = %1358.7;
  %1365 = %1359.0;
  %1366 = %1360.1;
  %1367 = %1361.1;
  %1368 = @func_6279() /* ty=Tensor[(16, 12, 5), float32] */;
  %1369 = @func_18771() /* ty=Tensor[(16, 12, 5), float32] */;
  (%1362, %1363, %1364, meta[relay.Constant][55] /* ty=Tensor[(195), float32] */, meta[relay.Constant][56] /* ty=Tensor[(968), float32] */, %1365, %1366, %1367, %1368, %1369)
}

def @func_7855(%var_7842: Tensor[(10, 3, 10), bool]) -> (Tensor[(10, 3, 10), bool], Tensor[(16, 12, 5), float32]) {
  %1370 = @func_4925() /* ty=Tensor[(10, ?, 10), bool] */;
  %1371 = cast(%1370, dtype="bool") /* ty=Tensor[(10, ?, 10), bool] */;
  %1372 = cast(%var_7842, dtype="bool") /* ty=Tensor[(10, 3, 10), bool] */;
  %1373 = greater_equal(%1371, %1372) /* ty=Tensor[(10, 3, 10), bool] */;
  %1374 = @func_4405() /* ty=Tensor[(16, 12, 5), float32] */;
  (%1373, %1374)
}

def @func_20046() -> (Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(100), float32], Tensor[(100), float32]) {
  %1381 = fn () -> (Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(100), float32], Tensor[(100), float32]) {
    %1375 = @func_16916() /* ty=(Tensor[(100), float32], Tensor[(16, 12, 5), float32]) */;
    %1376 = @func_19130() /* ty=(Tensor[(100), float32],) */;
    %1377 = @func_13827() /* ty=Tensor[(10, ?, 10), bool] */;
    %1378 = %1375.1;
    %1379 = %1376.0;
    %1380 = @func_4476() /* ty=Tensor[(100), float32] */;
    (%1377, %1378, %1379, %1380)
  };
  %1381() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(100), float32], Tensor[(100), float32]) */
}

def @func_4649() -> Tensor[(16, 12, 5), float32] {
  %1382 = @func_4444() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %1382.1
}

def @func_8291() -> (Tensor[(10, ?, 10), bool],) {
  @func_8289() /* ty=(Tensor[(10, ?, 10), bool],) */
}

def @func_8920() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), int32], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  @func_8918() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), int32], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */
}

def @func_4962() -> (Tensor[(10, ?, 10), bool], Tensor[(12, 10, 6), float64], Tensor[(720), float64]) {
  @func_4960() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(12, 10, 6), float64], Tensor[(720), float64]) */
}

def @func_17578() -> (Tensor[(16, 12, 5), float32], Tensor[(100), float32]) {
  %1387 = fn () -> (Tensor[(16, 12, 5), float32], Tensor[(100), float32]) {
    %1383 = @func_8404() /* ty=(Tensor[(16, 12, 5), float32],) */;
    %1384 = @func_16532() /* ty=(Tensor[(100), float32],) */;
    %1385 = %1383.0;
    %1386 = %1384.0;
    (%1385, %1386)
  };
  %1387() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(100), float32]) */
}

def @func_14791(%var_14790: Tensor[(14, 14, 12), int16]) -> (Tensor[(14, 14, 12), int16],) {
  %1393 = fn (%var_14782: Tensor[(14, 14, 12), int16]) -> (Tensor[(14, 14, 12), int16],) {
    %1388 = cast(meta[relay.Constant][57] /* ty=Tensor[(14, 14, 12), int16] */, dtype="int16") /* ty=Tensor[(14, 14, 12), int16] */;
    %1389 = shape_of(%var_14782, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1390 = cast(%var_14782, dtype="int16") /* ty=Tensor[(14, 14, 12), int16] */;
    %1391 = dyn.reshape(%1388, %1389, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1392 = multiply(%1390, %1391) /* ty=Tensor[(14, 14, 12), int16] */;
    (%1392,)
  };
  %1393(%var_14790) /* ty=(Tensor[(14, 14, 12), int16],) */
}

def @func_18680() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  @func_18678() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */
}

def @func_20646() -> (Tensor[(10, 8, 10), float32], Tensor[(16, 12, 5), float32]) {
  @func_20644() /* ty=(Tensor[(10, 8, 10), float32], Tensor[(16, 12, 5), float32]) */
}

def @func_18583(%var_18582: Tensor[(468), uint64]) -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), float32], Tensor[(16, 12, 5), float32], Tensor[(13, 14, 8), float32], Tensor[(468), uint64]) {
  %1402 = fn (%var_18577: Tensor[(468), uint64]) -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), float32], Tensor[(16, 12, 5), float32], Tensor[(13, 14, 8), float32], Tensor[(468), uint64]) {
    %1394 = @func_15173() /* ty=(Tensor[(16, 12, 5), float32],) */;
    %1395 = cast(%var_18577, dtype="uint64") /* ty=Tensor[(468), uint64] */;
    %1396 = reshape(%1395, newshape=[234, 2]) /* ty=Tensor[(234, 2), uint64] */;
    %1397 = @func_13013(%1396) /* ty=(Tensor[(13, 14, 8), float32], Tensor[(13, 14, 8), float64], int32, Tensor[(234, 2), uint64]) */;
    %1398 = @func_6801() /* ty=Tensor[(16, 12, 5), float32] */;
    %1399 = @func_16095() /* ty=Tensor[(10, ?, 10), float32] */;
    %1400 = %1394.0;
    %1401 = %1397.0;
    (%1398, %1399, %1400, %1401, %var_18577)
  };
  %1402(%var_18582) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), float32], Tensor[(16, 12, 5), float32], Tensor[(13, 14, 8), float32], Tensor[(468), uint64]) */
}

def @func_5218(%var_5211: int32) -> (Tensor[(1, 4), int32], Tensor[(4), int32], Tensor[(10, ?, 10), uint32]) {
  %1403 = cast(%var_5211, dtype="int32") /* ty=int32 */;
  %1404 = cast(meta[relay.Constant][58] /* ty=Tensor[(4), int32] */, dtype="int32") /* ty=Tensor[(4), int32] */;
  %1405 = reshape(%1403, newshape=[]) /* ty=int32 */;
  %1406 = reshape(%1404, newshape=[1, 4]) /* ty=Tensor[(1, 4), int32] */;
  %1407 = @func_4221() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float32]) */;
  %1408 = %1407.1;
  %1409 = cast(%1408, dtype="uint32") /* ty=Tensor[(10, ?, 10), uint32] */;
  %1410 = cast(%var_5211, dtype="uint32") /* ty=uint32 */;
  %1411 = @func_196(%1405, %1406) /* ty=Tensor[(1, 4), int32] */;
  %1412 = bitwise_or(%1409, %1410) /* ty=Tensor[(10, ?, 10), uint32] */;
  (%1411, meta[relay.Constant][58] /* ty=Tensor[(4), int32] */, %1412)
}

def @func_19438(%var_19436: Tensor[(5, 5, 10), uint8], %var_19437: Tensor[(5, 5, 10), uint8]) -> (Tensor[(5, 5, 10), uint8], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  %1421 = fn (%var_19409: Tensor[(5, 5, 10), uint8], %var_19410: Tensor[(5, 5, 10), uint8]) -> (Tensor[(5, 5, 10), uint8], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
    %1413 = cast(%var_19410, dtype="uint8") /* ty=Tensor[(5, 5, 10), uint8] */;
    %1414 = shape_of(%var_19409, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1415 = cast(%var_19409, dtype="uint8") /* ty=Tensor[(5, 5, 10), uint8] */;
    %1416 = dyn.reshape(%1413, %1414, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1417 = @func_8206() /* ty=(Tensor[(16, 12, 5), float32],) */;
    %1418 = multiply(%1415, %1416) /* ty=Tensor[(5, 5, 10), uint8] */;
    %1419 = @func_13837() /* ty=Tensor[(16, 12, 5), float32] */;
    %1420 = %1417.0;
    (%1418, %1419, %1420)
  };
  %1421(%var_19436, %var_19437) /* ty=(Tensor[(5, 5, 10), uint8], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */
}

def @func_17257() -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) {
  %1422 = @func_17067() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, 8, 10), float32]) */;
  %1423 = @func_14334() /* ty=Tensor[(16, 12, 5), float32] */;
  %1424 = cast(%1423, dtype="float32") /* ty=Tensor[(16, 12, 5), float32] */;
  %1425 = %1422.0;
  %1426 = sigmoid(%1424) /* ty=Tensor[(16, 12, 5), float32] */;
  (%1425, %1426)
}

def @func_8405() -> (Tensor[(16, 12, 5), float32],) {
  %1428 = fn () -> (Tensor[(16, 12, 5), float32],) {
    %1427 = @func_6801() /* ty=Tensor[(16, 12, 5), float32] */;
    (%1427,)
  };
  %1428() /* ty=(Tensor[(16, 12, 5), float32],) */
}

def @func_13700() -> (Tensor[(16, 12, 5), float32], Tensor[(252), float32], Tensor[(252), float32]) {
  %1435 = fn () -> (Tensor[(16, 12, 5), float32], Tensor[(252), float32], Tensor[(252), float32]) {
    %1429 = @func_6291() /* ty=(Tensor[(16, 12, 5), float32],) */;
    %1430 = cast(meta[relay.Constant][59] /* ty=Tensor[(252), float32] */, dtype="float32") /* ty=Tensor[(252), float32] */;
    %1431 = reshape(%1430, newshape=[252]) /* ty=Tensor[(252), float32] */;
    %1432 = @func_12796(%1431) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(9, 2, 14), float32], Tensor[(252), float32], Tensor[(968), float32]) */;
    %1433 = %1429.0;
    %1434 = %1432.2;
    (%1433, %1434, meta[relay.Constant][59] /* ty=Tensor[(252), float32] */)
  };
  %1435() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(252), float32], Tensor[(252), float32]) */
}

def @func_16716() -> (Tensor[(100), float32], Tensor[(968), float32], Tensor[(16, 12, 5), float32]) {
  %1436 = @func_13793() /* ty=(Tensor[(968), float32],) */;
  %1437 = @func_10311() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %1438 = @func_6998() /* ty=Tensor[(100), float32] */;
  %1439 = %1436.0;
  %1440 = %1437.0;
  (%1438, %1439, %1440)
}

def @func_20109() -> (Tensor[(10, ?, 10), bool],) {
  %1443 = fn () -> (Tensor[(10, ?, 10), bool],) {
    %1441 = @func_10398() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */;
    %1442 = %1441.1;
    (%1442,)
  };
  %1443() /* ty=(Tensor[(10, ?, 10), bool],) */
}

def @func_17746(%var_17744: Tensor[(968), float32]) -> (Tensor[(10, ?, 10), float64], Tensor[(11, 8, 11), float32], Tensor[(968), float32]) {
  @func_17743(%var_17744) /* ty=(Tensor[(10, ?, 10), float64], Tensor[(11, 8, 11), float32], Tensor[(968), float32]) */
}

def @func_15378() -> Tensor[(100), float32] {
  %1445 = fn () -> Tensor[(100), float32] {
    %1444 = @func_6042() /* ty=(Tensor[(100), float32],) */;
    %1444.0
  };
  %1445() /* ty=Tensor[(100), float32] */
}

def @func_20679() -> Tensor[(10, ?, 10), bool] {
  @func_5507() /* ty=Tensor[(10, ?, 10), bool] */
}

def @func_17665(%var_17663: Tensor[(195), float32]) -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(195), float32], Tensor[(25, 4), float64]) {
  @func_17662(%var_17663) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(195), float32], Tensor[(25, 4), float64]) */
}

def @func_4582() -> Tensor[(16, 12, 5), float32] {
  @func_4178() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_9691() -> (Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) {
  %1446 = @func_8289() /* ty=(Tensor[(10, ?, 10), bool],) */;
  %1447 = %1446.0;
  %1448 = @func_7946() /* ty=Tensor[(16, 12, 5), float32] */;
  (%1447, %1448)
}

def @func_4178() -> Tensor[(16, 12, 5), float32] {
  %1449 = cast(meta[relay.Constant][60] /* ty=Tensor[(16, 12, 5), float32] */, dtype="float32") /* ty=Tensor[(16, 12, 5), float32] */;
  acosh(%1449) /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_13828() -> Tensor[(10, ?, 10), bool] {
  %1450 = fn () -> Tensor[(10, ?, 10), bool] {
    @func_4279() /* ty=Tensor[(10, ?, 10), bool] */
  };
  %1450() /* ty=Tensor[(10, ?, 10), bool] */
}

def @func_13855() -> Tensor[(16, 12, 5), float32] {
  %1451 = fn () -> Tensor[(16, 12, 5), float32] {
    @func_4649() /* ty=Tensor[(16, 12, 5), float32] */
  };
  %1451() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_8663() -> (Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) {
  %1452 = @func_6192() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(720), float64], Tensor[(16, 12, 5), float32]) */;
  %1453 = @func_7716() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), int8]) */;
  %1454 = %1452.0;
  %1455 = %1453.0;
  (%1454, %1455)
}

def @func_6588() -> (Tensor[(15, ?, 11), int16], Tensor[(16, 12, 5), float32]) {
  %1465 = fn () -> (Tensor[(15, ?, 11), int16], Tensor[(16, 12, 5), float32]) {
    %1456 = cast(meta[relay.Constant][61] /* ty=Tensor[(15, 1, 11), float32] */, dtype="float32") /* ty=Tensor[(15, 1, 11), float32] */;
    %1457 = asinh(%1456) /* ty=Tensor[(15, 1, 11), float32] */;
    %1458 = cast(meta[relay.Constant][61] /* ty=Tensor[(15, 1, 11), float32] */, dtype="int16") /* ty=Tensor[(15, 1, 11), int16] */;
    %1459 = shape_of(%1457, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1460 = cast(%1457, dtype="int16") /* ty=Tensor[(15, 1, 11), int16] */;
    %1461 = dyn.reshape(%1458, %1459, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1462 = @func_6485() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(720), float64], Tensor[(10, ?, 10), bool]) */;
    %1463 = bitwise_or(%1460, %1461) /* ty=Tensor[(15, ?, 11), int16] */;
    %1464 = %1462.0;
    (%1463, %1464)
  };
  %1465() /* ty=(Tensor[(15, ?, 11), int16], Tensor[(16, 12, 5), float32]) */
}

def @func_12141(%var_12136: int32) -> (Tensor[(10, ?, 10), int8], Tensor[(11, 14, 15), bool], int32, Tensor[(2310), int32]) {
  %1466 = @func_7618() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float64]) */;
  %1467 = %1466.1;
  %1468 = cast(meta[relay.Constant][62] /* ty=Tensor[(10, 1, 10), bool] */, dtype="int8") /* ty=Tensor[(10, 1, 10), int8] */;
  %1469 = shape_of(%1467, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1470 = cast(%1467, dtype="int8") /* ty=Tensor[(10, ?, 10), int8] */;
  %1471 = dyn.reshape(%1468, %1469, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1472 = cast(%var_12136, dtype="int32") /* ty=int32 */;
  %1473 = cast(meta[relay.Constant][63] /* ty=Tensor[(2310), int32] */, dtype="int32") /* ty=Tensor[(2310), int32] */;
  %1474 = reshape(%1472, newshape=[]) /* ty=int32 */;
  %1475 = reshape(%1473, newshape=[11, 14, 15]) /* ty=Tensor[(11, 14, 15), int32] */;
  %1476 = bitwise_and(%1470, %1471) /* ty=Tensor[(10, ?, 10), int8] */;
  %1477 = @func_4665(%1474, %1475) /* ty=Tensor[(11, 14, 15), bool] */;
  (%1476, %1477, %var_12136, meta[relay.Constant][63] /* ty=Tensor[(2310), int32] */)
}

def @func_9431() -> (Tensor[(16, 12, 5), float64],) {
  %1478 = @func_5967() /* ty=Tensor[(16, 12, 5), float32] */;
  %1479 = cast(%1478, dtype="float64") /* ty=Tensor[(16, 12, 5), float64] */;
  %1480 = sqrt(%1479) /* ty=Tensor[(16, 12, 5), float64] */;
  (%1480,)
}

def @func_12740() -> Tensor[(720), float64] {
  %1481 = @func_6485() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(720), float64], Tensor[(10, ?, 10), bool]) */;
  %1481.1
}

def @func_5469() -> Tensor[(10, ?, 10), bool] {
  %1483 = fn () -> Tensor[(10, ?, 10), bool] {
    %1482 = @func_5148() /* ty=(Tensor[(10, ?, 10), bool],) */;
    %1482.0
  };
  %1483() /* ty=Tensor[(10, ?, 10), bool] */
}

def @func_9914(%var_9913: Tensor[(16, 12, 5), float32]) -> (Tensor[(16, 12, 5), uint32],) {
  %1491 = fn (%var_9895: Tensor[(16, 12, 5), float32]) -> (Tensor[(16, 12, 5), uint32],) {
    %1484 = @func_4444() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
    %1485 = %1484.1;
    %1486 = cast(%var_9895, dtype="uint32") /* ty=Tensor[(16, 12, 5), uint32] */;
    %1487 = shape_of(%1485, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1488 = cast(%1485, dtype="uint32") /* ty=Tensor[(16, 12, 5), uint32] */;
    %1489 = dyn.reshape(%1486, %1487, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %1490 = multiply(%1488, %1489) /* ty=Tensor[(16, 12, 5), uint32] */;
    (%1490,)
  };
  %1491(%var_9913) /* ty=(Tensor[(16, 12, 5), uint32],) */
}

def @func_10683(%var_10674: Tensor[(5, 4, 5), float32]) -> Tensor[(5, 4, 5), float32] {
  %1492 = cast(%var_10674, dtype="float32") /* ty=Tensor[(5, 4, 5), float32] */;
  cosh(%1492) /* ty=Tensor[(5, 4, 5), float32] */
}

def @func_14353() -> Tensor[(16, 12, 5), float32] {
  %1493 = @func_7716() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), int8]) */;
  %1493.0
}

def @func_5915() -> Tensor[(100), float32] {
  %1494 = @func_5265() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(100), float32]) */;
  %1494.1
}

def @func_15865() -> Tensor[(16, 12, 5), float32] {
  %1495 = @func_8942() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1495.0
}

def @func_745(%var_737: Tensor[(12, 10, 6), float64]) -> (Tensor[(12, 10, 6), float64],) {
  %1496 = cast(%var_737, dtype="float64") /* ty=Tensor[(12, 10, 6), float64] */;
  %1497 = asin(%1496) /* ty=Tensor[(12, 10, 6), float64] */;
  (%1497,)
}

def @func_20867(%var_20752: int32) -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(1, 4), int32], int32, Tensor[(16, 12, 5), float32], Tensor[(10, 8, 10), float32], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) {
  %1498 = @func_13763() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %1499 = cast(%var_20752, dtype="int32") /* ty=int32 */;
  %1500 = reshape(%1499, newshape=[]) /* ty=int32 */;
  %1501 = @func_11465(%1500) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(1, 4), int32], int32, Tensor[(4), int32]) */;
  %1502 = @func_17257() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %1503 = @func_17067() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, 8, 10), float32]) */;
  %1504 = cast(%var_20752, dtype="int32") /* ty=int32 */;
  %1505 = reshape(%1504, newshape=[]) /* ty=int32 */;
  %1506 = @func_7921(%1505) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(11, 14, 15), bool], int32, Tensor[(2310), int32]) */;
  %1507 = %1498.1;
  %1508 = @func_16925() /* ty=Tensor[(16, 12, 5), float32] */;
  %1509 = %1501.1;
  %1510 = %1502.1;
  %1511 = %1503.1;
  %1512 = %1506.1;
  %1513 = @func_5507() /* ty=Tensor[(10, ?, 10), bool] */;
  (%1507, %1508, %1509, %var_20752, %1510, %1511, %1512, %1513)
}

def @func_17131() -> Tensor[(15, ?, 11), uint16] {
  %1520 = fn () -> Tensor[(15, ?, 11), uint16] {
    %1514 = @func_16737() /* ty=(Tensor[(720), float64], int32) */;
    %1515 = %1514.1;
    %1516 = @func_8334() /* ty=(Tensor[(15, ?, 11), int16],) */;
    %1517 = %1516.0;
    %1518 = cast(%1515, dtype="uint16") /* ty=uint16 */;
    %1519 = cast(%1517, dtype="uint16") /* ty=Tensor[(15, ?, 11), uint16] */;
    right_shift(%1518, %1519) /* ty=Tensor[(15, ?, 11), uint16] */
  };
  %1520() /* ty=Tensor[(15, ?, 11), uint16] */
}

def @func_20442() -> (Tensor[(16, 12, 5), float32],) {
  %1522 = fn () -> (Tensor[(16, 12, 5), float32],) {
    %1521 = @func_5967() /* ty=Tensor[(16, 12, 5), float32] */;
    (%1521,)
  };
  %1522() /* ty=(Tensor[(16, 12, 5), float32],) */
}

def @func_12300() -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(10, ?, 10), bool]) {
  %1528 = fn () -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(10, ?, 10), bool]) {
    %1523 = @func_9691() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) */;
    %1524 = @func_4960() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(12, 10, 6), float64], Tensor[(720), float64]) */;
    %1525 = %1523.1;
    %1526 = @func_8437() /* ty=Tensor[(10, ?, 10), bool] */;
    %1527 = %1524.0;
    (%1525, %1526, %1527)
  };
  %1528() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(10, ?, 10), bool]) */
}

def @func_10497() -> (Tensor[(720), float64], Tensor[(100), float32]) {
  %1533 = fn () -> (Tensor[(720), float64], Tensor[(100), float32]) {
    %1529 = @func_6192() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(720), float64], Tensor[(16, 12, 5), float32]) */;
    %1530 = @func_6042() /* ty=(Tensor[(100), float32],) */;
    %1531 = %1529.1;
    %1532 = %1530.0;
    (%1531, %1532)
  };
  %1533() /* ty=(Tensor[(720), float64], Tensor[(100), float32]) */
}

def @func_16272(%var_16271: Tensor[(4), int32]) -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(4), int32], Tensor[(10, ?, 10), bool], Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) {
  %1550 = fn (%var_16251: Tensor[(4), int32]) -> (Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(4), int32], Tensor[(10, ?, 10), bool], Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) {
    %1534 = @func_11267() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
    %1535 = @func_14954() /* ty=Tensor[(10, ?, 10), bool] */;
    %1536 = cast(%var_16251, dtype="int32") /* ty=Tensor[(4), int32] */;
    %1537 = reshape(%1536, newshape=[4]) /* ty=Tensor[(4), int32] */;
    %1538 = @func_11749(%1537) /* ty=(Tensor[(100), float32], Tensor[(100), float64], Tensor[(4), int32]) */;
    %1539 = %1538.0;
    %1540 = cast(%1539, dtype="bool") /* ty=Tensor[(100), bool] */;
    %1541 = shape_of(%1535, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1542 = cast(%1535, dtype="bool") /* ty=Tensor[(10, ?, 10), bool] */;
    %1543 = dyn.reshape(%1540, %1541, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1544 = @func_16171() /* ty=(Tensor[(10, 8, 10), float64], Tensor[(16, 12, 5), float32], Tensor[(10, 8, 10), bool]) */;
    %1545 = @func_14353() /* ty=Tensor[(16, 12, 5), float32] */;
    %1546 = %1534.1;
    %1547 = logical_or(%1542, %1543) /* ty=Tensor[(10, ?, 10), bool] */;
    %1548 = @func_13831() /* ty=Tensor[(10, ?, 10), bool] */;
    %1549 = %1544.1;
    (%1545, %1546, %var_16251, %1547, %1548, %1549)
  };
  %1550(%var_16271) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32], Tensor[(4), int32], Tensor[(10, ?, 10), bool], Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) */
}

def @func_9693() -> (Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) {
  @func_9691() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) */
}

def @func_21455(%var_21453: Tensor[(880), uint32]) -> (Tensor[(16, 12, 5), float32], Tensor[(12, 10, 6), float64], Tensor[(5, 11, 16), bool], Tensor[(880), uint32]) {
  @func_21452(%var_21453) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(12, 10, 6), float64], Tensor[(5, 11, 16), bool], Tensor[(880), uint32]) */
}

def @func_4407() -> Tensor[(16, 12, 5), float32] {
  @func_4405() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_12192() -> Tensor[(16, 12, 5), float32] {
  %1554 = fn () -> Tensor[(16, 12, 5), float32] {
    %1551 = @func_9691() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) */;
    %1552 = %1551.1;
    %1553 = cast(%1552, dtype="float32") /* ty=Tensor[(16, 12, 5), float32] */;
    sinh(%1553) /* ty=Tensor[(16, 12, 5), float32] */
  };
  %1554() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_12029() -> (Tensor[(100), float32], Tensor[(720), float64]) {
  %1558 = fn () -> (Tensor[(100), float32], Tensor[(720), float64]) {
    %1555 = @func_6485() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(720), float64], Tensor[(10, ?, 10), bool]) */;
    %1556 = @func_11726() /* ty=Tensor[(100), float32] */;
    %1557 = %1555.1;
    (%1556, %1557)
  };
  %1558() /* ty=(Tensor[(100), float32], Tensor[(720), float64]) */
}

def @func_14396(%var_14394: Tensor[(2, 2), int32], %var_14395: Tensor[(39, 5), float32]) -> (Tensor[(16, 12, 5), float32], Tensor[(1, 4), int32], int32, Tensor[(2, 2), int32], Tensor[(10, 8, 10), int32], Tensor[(4), int32], Tensor[(39, 5), float32]) {
  @func_14392(%var_14394, %var_14395) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(1, 4), int32], int32, Tensor[(2, 2), int32], Tensor[(10, 8, 10), int32], Tensor[(4), int32], Tensor[(39, 5), float32]) */
}

def @func_10398() -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) {
  %1559 = @func_9750() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */;
  %1560 = @func_7946() /* ty=Tensor[(16, 12, 5), float32] */;
  %1561 = %1559.1;
  (%1560, %1561)
}

def @func_13403(%var_13401: Tensor[(468), uint64], %var_13402: Tensor[(195), float32]) -> (Tensor[(10, ?, 10), int8], Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(13, 14, 8), float64], Tensor[(468), uint64], Tensor[(98), uint16], Tensor[(195), float32]) {
  %1581 = fn (%var_13374: Tensor[(468), uint64], %var_13386: Tensor[(195), float32]) -> (Tensor[(10, ?, 10), int8], Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(13, 14, 8), float64], Tensor[(468), uint64], Tensor[(98), uint16], Tensor[(195), float32]) {
    %1562 = @func_7716() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), int8]) */;
    %1563 = @func_11770() /* ty=(Tensor[(10, ?, 10), bool],) */;
    %1564 = @func_11517() /* ty=(Tensor[(16, 12, 5), float32],) */;
    %1565 = %1564.0;
    %1566 = cast(meta[relay.Constant][64] /* ty=Tensor[(16, 12, 5), float32] */, dtype="float32") /* ty=Tensor[(16, 12, 5), float32] */;
    %1567 = shape_of(%1565, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1568 = cast(%1565, dtype="float32") /* ty=Tensor[(16, 12, 5), float32] */;
    %1569 = dyn.reshape(%1566, %1567, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1570 = cast(%var_13374, dtype="uint64") /* ty=Tensor[(468), uint64] */;
    %1571 = reshape(%1570, newshape=[234, 2]) /* ty=Tensor[(234, 2), uint64] */;
    %1572 = @func_13013(%1571) /* ty=(Tensor[(13, 14, 8), float32], Tensor[(13, 14, 8), float64], int32, Tensor[(234, 2), uint64]) */;
    %1573 = cast(%var_13386, dtype="float32") /* ty=Tensor[(195), float32] */;
    %1574 = reshape(%1573, newshape=[13, 15]) /* ty=Tensor[(13, 15), float32] */;
    %1575 = @func_9350(%1574) /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(13, 15), float32], Tensor[(4), int32], Tensor[(98), uint16], Tensor[(968), float32], Tensor[(15, 7, 3), float64]) */;
    %1576 = %1562.1;
    %1577 = %1563.0;
    %1578 = minimum(%1568, %1569) /* ty=Tensor[(16, 12, 5), float32] */;
    %1579 = %1572.1;
    %1580 = %1575.4;
    (%1576, %1577, %1578, %1579, %var_13374, %1580, %var_13386)
  };
  %1581(%var_13401, %var_13402) /* ty=(Tensor[(10, ?, 10), int8], Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32], Tensor[(13, 14, 8), float64], Tensor[(468), uint64], Tensor[(98), uint16], Tensor[(195), float32]) */
}

def @func_9591(%var_9589: int32, %var_9590: Tensor[(4), int32]) -> (Tensor[(100), float32], Tensor[(11, 14, 15), bool], int32, Tensor[(2310), int32], Tensor[(1, 4), int32], Tensor[(4), int32]) {
  @func_9587(%var_9589, %var_9590) /* ty=(Tensor[(100), float32], Tensor[(11, 14, 15), bool], int32, Tensor[(2310), int32], Tensor[(1, 4), int32], Tensor[(4), int32]) */
}

def @func_16070() -> (Tensor[(16, 12, 5), float32],) {
  %1582 = @func_10311() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(16, 12, 5), float32]) */;
  %1583 = %1582.1;
  (%1583,)
}

def @func_20355() -> Tensor[(16, 12, 5), float32] {
  @func_20353() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_20120() -> (Tensor[(11, 8, 11), float32], Tensor[(10, ?, 10), bool]) {
  %1587 = fn () -> (Tensor[(11, 8, 11), float32], Tensor[(10, ?, 10), bool]) {
    %1584 = @func_16835() /* ty=(Tensor[(968), float64], Tensor[(11, 8, 11), float32]) */;
    %1585 = %1584.1;
    %1586 = @func_12327() /* ty=Tensor[(10, ?, 10), bool] */;
    (%1585, %1586)
  };
  %1587() /* ty=(Tensor[(11, 8, 11), float32], Tensor[(10, ?, 10), bool]) */
}

def @func_16835() -> (Tensor[(968), float64], Tensor[(11, 8, 11), float32]) {
  %1588 = @func_13793() /* ty=(Tensor[(968), float32],) */;
  %1589 = %1588.0;
  %1590 = cast(%1589, dtype="float64") /* ty=Tensor[(968), float64] */;
  %1591 = tan(%1590) /* ty=Tensor[(968), float64] */;
  %1592 = cast(%1591, dtype="float32") /* ty=Tensor[(968), float32] */;
  %1593 = reshape(%1592, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), float32] */;
  %1594 = @func_989(%1593) /* ty=(Tensor[(11, 8, 11), float32],) */;
  %1595 = %1594.0;
  (%1591, %1595)
}

def @func_8474(%var_8472: Tensor[(1, 968), float32]) -> (Tensor[(10, ?, 10), bool], Tensor[(9, 2, 14), float32], Tensor[(195), float32], Tensor[(4), int32], Tensor[(98, 1), uint16], Tensor[(1, 968), float32]) {
  @func_8471(%var_8472) /* ty=(Tensor[(10, ?, 10), bool], Tensor[(9, 2, 14), float32], Tensor[(195), float32], Tensor[(4), int32], Tensor[(98, 1), uint16], Tensor[(1, 968), float32]) */
}

def @func_21304(%var_21302: Tensor[(126), uint32], %var_21303: Tensor[(4), int32]) -> (Tensor[(100), float32], int32, Tensor[(126), uint32], Tensor[(4), int32]) {
  @func_21300(%var_21302, %var_21303) /* ty=(Tensor[(100), float32], int32, Tensor[(126), uint32], Tensor[(4), int32]) */
}

def @func_4762(%var_4758: Tensor[(195), float32], %var_4759: Tensor[(1, 4), int32], %var_4760: Tensor[(98), uint16], %var_4761: Tensor[(968), float32]) -> (Tensor[(195), float32], Tensor[(1, 4), int32], Tensor[(98), uint32], Tensor[(10, ?, 10), bool], Tensor[(9, 2, 14), float32], Tensor[(6, 42), float32], Tensor[(100), float32], Tensor[(11, 8, 11), float32], Tensor[(968), float32], Tensor[(10, ?, 10), bool]) {
  %1632 = fn (%var_4690: Tensor[(195), float32], %var_4691: Tensor[(1, 4), int32], %var_4713: Tensor[(98), uint16], %var_4749: Tensor[(968), float32]) -> (Tensor[(195), float32], Tensor[(1, 4), int32], Tensor[(98), uint32], Tensor[(10, ?, 10), bool], Tensor[(9, 2, 14), float32], Tensor[(6, 42), float32], Tensor[(100), float32], Tensor[(11, 8, 11), float32], Tensor[(968), float32], Tensor[(10, ?, 10), bool]) {
    %1596 = cast(%var_4690, dtype="float32") /* ty=Tensor[(195), float32] */;
    %1597 = cast(%var_4691, dtype="int32") /* ty=Tensor[(1, 4), int32] */;
    %1598 = reshape(%1596, newshape=[5, 3, 13]) /* ty=Tensor[(5, 3, 13), float32] */;
    %1599 = reshape(%1597, newshape=[4]) /* ty=Tensor[(4), int32] */;
    %1600 = @func_3701(%1598, %1599) /* ty=(Tensor[(5, 3, 13), float32], Tensor[(1, 4), int32], Tensor[(126), uint32], Tensor[(4), int32], Tensor[(1, 4), int32], uint16, Tensor[(98), uint16], int32) */;
    %1601 = %1600.6;
    %1602 = cast(%var_4713, dtype="uint32") /* ty=Tensor[(98), uint32] */;
    %1603 = shape_of(%1601, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1604 = cast(%1601, dtype="uint32") /* ty=Tensor[(98), uint32] */;
    %1605 = dyn.reshape(%1602, %1603, newshape=[]) /* ty=Tensor[(?), uint32] */;
    %1606 = @func_4279() /* ty=Tensor[(10, ?, 10), bool] */;
    %1607 = @func_4476() /* ty=Tensor[(100), float32] */;
    %1608 = cast(%1607, dtype="uint8") /* ty=Tensor[(100), uint8] */;
    %1609 = shape_of(%1606, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1610 = cast(%1606, dtype="uint8") /* ty=Tensor[(10, ?, 10), uint8] */;
    %1611 = dyn.reshape(%1608, %1609, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1612 = maximum(%1610, %1611) /* ty=Tensor[(10, ?, 10), uint8] */;
    %1613 = cast(%1612, dtype="bool") /* ty=Tensor[(10, ?, 10), bool] */;
    %1614 = shape_of(%1606, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1615 = cast(%1606, dtype="bool") /* ty=Tensor[(10, ?, 10), bool] */;
    %1616 = dyn.reshape(%1613, %1614, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1617 = cast(meta[relay.Constant][65] /* ty=Tensor[(6, 42), float32] */, dtype="float32") /* ty=Tensor[(6, 42), float32] */;
    %1618 = cast(meta[relay.Constant][65] /* ty=Tensor[(6, 42), float32] */, dtype="float32") /* ty=Tensor[(6, 42), float32] */;
    %1619 = reshape(%1617, newshape=[9, 2, 14]) /* ty=Tensor[(9, 2, 14), float32] */;
    %1620 = reshape(%1618, newshape=[9, 2, 14]) /* ty=Tensor[(9, 2, 14), float32] */;
    %1621 = @func_3549(%1619, %1620) /* ty=(Tensor[(9, 2, 14), float32],) */;
    %1622 = cast(%var_4749, dtype="float32") /* ty=Tensor[(968), float32] */;
    %1623 = reshape(%1622, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), float32] */;
    %1624 = @func_989(%1623) /* ty=(Tensor[(11, 8, 11), float32],) */;
    %1625 = @func_4629() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */;
    %1626 = minimum(%1604, %1605) /* ty=Tensor[(98), uint32] */;
    %1627 = greater(%1615, %1616) /* ty=Tensor[(10, ?, 10), bool] */;
    %1628 = %1621.0;
    %1629 = @func_4476() /* ty=Tensor[(100), float32] */;
    %1630 = %1624.0;
    %1631 = %1625.1;
    (%var_4690, %var_4691, %1626, %1627, %1628, meta[relay.Constant][65] /* ty=Tensor[(6, 42), float32] */, %1629, %1630, %var_4749, %1631)
  };
  %1632(%var_4758, %var_4759, %var_4760, %var_4761) /* ty=(Tensor[(195), float32], Tensor[(1, 4), int32], Tensor[(98), uint32], Tensor[(10, ?, 10), bool], Tensor[(9, 2, 14), float32], Tensor[(6, 42), float32], Tensor[(100), float32], Tensor[(11, 8, 11), float32], Tensor[(968), float32], Tensor[(10, ?, 10), bool]) */
}

def @func_9799() -> Tensor[(16, 12, 5), float32] {
  @func_9797() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_13060() -> (Tensor[(16, 12, 5), float32],) {
  %1635 = fn () -> (Tensor[(16, 12, 5), float32],) {
    %1633 = @func_8644() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, 8, 10), int32], Tensor[(16, 12, 5), float32]) */;
    %1634 = %1633.2;
    (%1634,)
  };
  %1635() /* ty=(Tensor[(16, 12, 5), float32],) */
}

def @func_15299(%var_15297: Tensor[(100), float32], %var_15298: Tensor[(100), float32]) -> (Tensor[(100), bool], Tensor[(100), float32], Tensor[(100), bool]) {
  @func_15295(%var_15297, %var_15298) /* ty=(Tensor[(100), bool], Tensor[(100), float32], Tensor[(100), bool]) */
}

def @func_2752(%var_2750: Tensor[(10, 1, 10), float64]) -> Tensor[(10, ?, 10), bool] {
  @func_2749(%var_2750) /* ty=Tensor[(10, ?, 10), bool] */
}

def @func_20295() -> Tensor[(10, 2, 2), float32] {
  %1636 = cast(meta[relay.Constant][66] /* ty=Tensor[(10, 2, 2), float32] */, dtype="float32") /* ty=Tensor[(10, 2, 2), float32] */;
  acos(%1636) /* ty=Tensor[(10, 2, 2), float32] */
}

def @func_13227(%var_13225: uint64, %var_13226: Tensor[(11, 8, 11), uint64]) -> (Tensor[(11, 8, 11), bool], Tensor[(16, 12, 5), float32]) {
  %1642 = fn (%var_13208: uint64, %var_13209: Tensor[(11, 8, 11), uint64]) -> (Tensor[(11, 8, 11), bool], Tensor[(16, 12, 5), float32]) {
    %1637 = cast(%var_13208, dtype="bool") /* ty=bool */;
    %1638 = cast(%var_13209, dtype="bool") /* ty=Tensor[(11, 8, 11), bool] */;
    %1639 = @func_7641() /* ty=(Tensor[(16, 12, 5), float32],) */;
    %1640 = not_equal(%1637, %1638) /* ty=Tensor[(11, 8, 11), bool] */;
    %1641 = %1639.0;
    (%1640, %1641)
  };
  %1642(%var_13225, %var_13226) /* ty=(Tensor[(11, 8, 11), bool], Tensor[(16, 12, 5), float32]) */
}

def @func_11726() -> Tensor[(100), float32] {
  %1643 = @func_10496() /* ty=(Tensor[(720), float64], Tensor[(100), float32]) */;
  %1643.1
}

def @func_10669() -> (Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(1, 468), uint64]) {
  %1644 = @func_8206() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1645 = cast(meta[relay.Constant][67] /* ty=Tensor[(1, 468), uint64] */, dtype="uint64") /* ty=Tensor[(1, 468), uint64] */;
  %1646 = reshape(%1645, newshape=[468]) /* ty=Tensor[(468), uint64] */;
  %1647 = @func_8315(%1646) /* ty=(Tensor[(10, ?, 10), bool], Tensor[(4), int32], Tensor[(468), uint64]) */;
  %1648 = %1644.0;
  %1649 = %1647.0;
  (%1648, %1649, meta[relay.Constant][67] /* ty=Tensor[(1, 468), uint64] */)
}

def @func_12815() -> (Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) {
  @func_12813() /* ty=(Tensor[(10, ?, 10), bool], Tensor[(16, 12, 5), float32]) */
}

def @func_11116() -> (Tensor[(315), float64],) {
  @func_11114() /* ty=(Tensor[(315), float64],) */
}

def @func_8289() -> (Tensor[(10, ?, 10), bool],) {
  %1650 = @func_5468() /* ty=Tensor[(10, ?, 10), bool] */;
  (%1650,)
}

def @func_3552(%var_3550: Tensor[(9, 2, 14), float32], %var_3551: Tensor[(9, 2, 14), float32]) -> (Tensor[(9, 2, 14), float32],) {
  %1656 = fn (%var_3535: Tensor[(9, 2, 14), float32], %var_3536: Tensor[(9, 2, 14), float32]) -> (Tensor[(9, 2, 14), float32],) {
    %1651 = cast(%var_3536, dtype="float32") /* ty=Tensor[(9, 2, 14), float32] */;
    %1652 = shape_of(%var_3535, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1653 = cast(%var_3535, dtype="float32") /* ty=Tensor[(9, 2, 14), float32] */;
    %1654 = dyn.reshape(%1651, %1652, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1655 = divide(%1653, %1654) /* ty=Tensor[(9, 2, 14), float32] */;
    (%1655,)
  };
  %1656(%var_3550, %var_3551) /* ty=(Tensor[(9, 2, 14), float32],) */
}

def @func_10686(%var_10684: Tensor[(5, 4, 5), float32]) -> Tensor[(5, 4, 5), float32] {
  @func_10683(%var_10684) /* ty=Tensor[(5, 4, 5), float32] */
}

def @func_10465() -> (Tensor[(16, 12, 5), float32],) {
  %1659 = fn () -> (Tensor[(16, 12, 5), float32],) {
    %1657 = @func_6291() /* ty=(Tensor[(16, 12, 5), float32],) */;
    %1658 = %1657.0;
    (%1658,)
  };
  %1659() /* ty=(Tensor[(16, 12, 5), float32],) */
}

def @func_6255(%var_6253: Tensor[(260), uint64], %var_6254: Tensor[(13, 15), float32]) -> (Tensor[(10, ?, 10), bool], Tensor[(13, 10, 2), bool], Tensor[(260), uint64], Tensor[(4), int32], Tensor[(13, 15), float32], Tensor[(4), int32]) {
  %1673 = fn (%var_6221: Tensor[(260), uint64], %var_6248: Tensor[(13, 15), float32]) -> (Tensor[(10, ?, 10), bool], Tensor[(13, 10, 2), bool], Tensor[(260), uint64], Tensor[(4), int32], Tensor[(13, 15), float32], Tensor[(4), int32]) {
    %1660 = cast(%var_6221, dtype="uint64") /* ty=Tensor[(260), uint64] */;
    %1661 = cast(%var_6221, dtype="uint64") /* ty=Tensor[(260), uint64] */;
    %1662 = reshape(%1660, newshape=[13, 10, 2]) /* ty=Tensor[(13, 10, 2), uint64] */;
    %1663 = reshape(%1661, newshape=[13, 10, 2]) /* ty=Tensor[(13, 10, 2), uint64] */;
    %1664 = @func_2840(%1662, %1663) /* ty=(Tensor[(13, 10, 2), bool],) */;
    %1665 = cast(%var_6248, dtype="float32") /* ty=Tensor[(13, 15), float32] */;
    %1666 = cast(meta[relay.Constant][68] /* ty=Tensor[(4), int32] */, dtype="int32") /* ty=Tensor[(4), int32] */;
    %1667 = reshape(%1665, newshape=[5, 3, 13]) /* ty=Tensor[(5, 3, 13), float32] */;
    %1668 = reshape(%1666, newshape=[4]) /* ty=Tensor[(4), int32] */;
    %1669 = @func_3701(%1667, %1668) /* ty=(Tensor[(5, 3, 13), float32], Tensor[(1, 4), int32], Tensor[(126), uint32], Tensor[(4), int32], Tensor[(1, 4), int32], uint16, Tensor[(98), uint16], int32) */;
    %1670 = @func_4925() /* ty=Tensor[(10, ?, 10), bool] */;
    %1671 = %1664.0;
    %1672 = %1669.3;
    (%1670, %1671, %var_6221, %1672, %var_6248, meta[relay.Constant][68] /* ty=Tensor[(4), int32] */)
  };
  %1673(%var_6253, %var_6254) /* ty=(Tensor[(10, ?, 10), bool], Tensor[(13, 10, 2), bool], Tensor[(260), uint64], Tensor[(4), int32], Tensor[(13, 15), float32], Tensor[(4), int32]) */
}

def @func_5422(%var_5419: uint16, %var_5420: Tensor[(4, 1), int32], %var_5421: Tensor[(100), float32]) -> (Tensor[(4), int32], uint16, Tensor[(98), uint16], Tensor[(4, 1), int32], Tensor[(100), float32]) {
  %1689 = fn (%var_5387: uint16, %var_5389: Tensor[(4, 1), int32], %var_5395: Tensor[(100), float32]) -> (Tensor[(4), int32], uint16, Tensor[(98), uint16], Tensor[(4, 1), int32], Tensor[(100), float32]) {
    %1674 = cast(%var_5387, dtype="uint16") /* ty=uint16 */;
    %1675 = cast(meta[relay.Constant][69] /* ty=Tensor[(98), uint16] */, dtype="uint16") /* ty=Tensor[(98), uint16] */;
    %1676 = cast(%var_5389, dtype="int32") /* ty=Tensor[(4, 1), int32] */;
    %1677 = reshape(%1674, newshape=[]) /* ty=uint16 */;
    %1678 = reshape(%1675, newshape=[14, 7, 1]) /* ty=Tensor[(14, 7, 1), uint16] */;
    %1679 = reshape(%1676, newshape=[4]) /* ty=Tensor[(4), int32] */;
    %1680 = @func_377(%1677, %1678, %1679) /* ty=(Tensor[(14, 7, 1), uint16], Tensor[(1, 4), int32], Tensor[(4), int32]) */;
    %1681 = @func_4221() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool], Tensor[(100), float32]) */;
    %1682 = %1681.2;
    %1683 = cast(%var_5395, dtype="float32") /* ty=Tensor[(100), float32] */;
    %1684 = shape_of(%1682, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1685 = cast(%1682, dtype="float32") /* ty=Tensor[(100), float32] */;
    %1686 = dyn.reshape(%1683, %1684, newshape=[]) /* ty=Tensor[(?), float32] */;
    %1687 = %1680.2;
    %1688 = multiply(%1685, %1686) /* ty=Tensor[(100), float32] */;
    (%1687, %var_5387, meta[relay.Constant][69] /* ty=Tensor[(98), uint16] */, %var_5389, %1688)
  };
  %1689(%var_5419, %var_5420, %var_5421) /* ty=(Tensor[(4), int32], uint16, Tensor[(98), uint16], Tensor[(4, 1), int32], Tensor[(100), float32]) */
}

def @func_199(%var_197: int32, %var_198: Tensor[(1, 4), int32]) -> Tensor[(1, 4), int32] {
  %1692 = fn (%var_175: int32, %var_176: Tensor[(1, 4), int32]) -> Tensor[(1, 4), int32] {
    %1690 = cast(%var_175, dtype="int32") /* ty=int32 */;
    %1691 = cast(%var_176, dtype="int32") /* ty=Tensor[(1, 4), int32] */;
    subtract(%1690, %1691) /* ty=Tensor[(1, 4), int32] */
  };
  %1692(%var_197, %var_198) /* ty=Tensor[(1, 4), int32] */
}

def @func_14059() -> (Tensor[(720), float64], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) {
  %1697 = fn () -> (Tensor[(720), float64], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) {
    %1693 = @func_10496() /* ty=(Tensor[(720), float64], Tensor[(100), float32]) */;
    %1694 = %1693.0;
    %1695 = @func_4649() /* ty=Tensor[(16, 12, 5), float32] */;
    %1696 = @func_4279() /* ty=Tensor[(10, ?, 10), bool] */;
    (%1694, %1695, %1696)
  };
  %1697() /* ty=(Tensor[(720), float64], Tensor[(16, 12, 5), float32], Tensor[(10, ?, 10), bool]) */
}

def @func_10875(%var_10873: Tensor[(4), int32]) -> (Tensor[(15, ?, 11), int16], Tensor[(4), int32], Tensor[(126), uint32], Tensor[(4), int32], Tensor[(10, ?, 10), bool], Tensor[(195), float32], Tensor[(100), float64]) {
  @func_10872(%var_10873) /* ty=(Tensor[(15, ?, 11), int16], Tensor[(4), int32], Tensor[(126), uint32], Tensor[(4), int32], Tensor[(10, ?, 10), bool], Tensor[(195), float32], Tensor[(100), float64]) */
}

def @func_1586(%var_1558: Tensor[(16, 2, 4), uint8]) -> (Tensor[(16, 2, 4), float64], Tensor[(4), int32], uint16, Tensor[(98), uint16], Tensor[(4), int32]) {
  %1698 = cast(%var_1558, dtype="uint8") /* ty=Tensor[(16, 2, 4), uint8] */;
  %1699 = shape_of(meta[relay.Constant][70] /* ty=Tensor[(16, 2, 4), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1700 = cast(meta[relay.Constant][70] /* ty=Tensor[(16, 2, 4), uint8] */, dtype="uint8") /* ty=Tensor[(16, 2, 4), uint8] */;
  %1701 = dyn.reshape(%1698, %1699, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1702 = minimum(%1700, %1701) /* ty=Tensor[(16, 2, 4), uint8] */;
  %1703 = cast(%1702, dtype="float64") /* ty=Tensor[(16, 2, 4), float64] */;
  %1704 = shape_of(%var_1558, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1705 = cast(%var_1558, dtype="float64") /* ty=Tensor[(16, 2, 4), float64] */;
  %1706 = dyn.reshape(%1703, %1704, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1707 = cast(meta[relay.Constant][71] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %1708 = cast(meta[relay.Constant][72] /* ty=Tensor[(98), uint16] */, dtype="uint16") /* ty=Tensor[(98), uint16] */;
  %1709 = cast(meta[relay.Constant][73] /* ty=Tensor[(4), int32] */, dtype="int32") /* ty=Tensor[(4), int32] */;
  %1710 = reshape(%1707, newshape=[]) /* ty=uint16 */;
  %1711 = reshape(%1708, newshape=[14, 7, 1]) /* ty=Tensor[(14, 7, 1), uint16] */;
  %1712 = reshape(%1709, newshape=[4]) /* ty=Tensor[(4), int32] */;
  %1713 = @func_377(%1710, %1711, %1712) /* ty=(Tensor[(14, 7, 1), uint16], Tensor[(1, 4), int32], Tensor[(4), int32]) */;
  %1714 = mod(%1705, %1706) /* ty=Tensor[(16, 2, 4), float64] */;
  %1715 = %1713.2;
  (%1714, %1715, meta[relay.Constant][71] /* ty=uint16 */, meta[relay.Constant][72] /* ty=Tensor[(98), uint16] */, meta[relay.Constant][73] /* ty=Tensor[(4), int32] */)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

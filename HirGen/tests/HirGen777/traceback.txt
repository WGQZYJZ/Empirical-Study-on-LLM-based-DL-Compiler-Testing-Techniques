==========mod==========
#[version = "0.0.5"]
def @func_10940() -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) {
  %0 = @func_9045() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */;
  %1 = @func_10672() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %2 = %0.0;
  %3 = %1.0;
  %4 = @func_8305() /* ty=Tensor[(12, 2, 14), float32] */;
  (%2, %3, %4)
}

def @func_11980() -> Tensor[(13), float32] {
  %5 = @func_7853() /* ty=(Tensor[(13), float32], Tensor[(1, 21), float64]) */;
  %5.0
}

def @func_10746(%var_10697: Tensor[(14, 3, 4), float32]) -> (Tensor[(14, 3, 4), float32], Tensor[(1, 21), float64], Tensor[(12, 2, 14), float32]) {
  %6 = cast(%var_10697, dtype="float32") /* ty=Tensor[(14, 3, 4), float32] */;
  %7 = @func_3987() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64]) */;
  %8 = @func_9045() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */;
  %9 = log(%6) /* ty=Tensor[(14, 3, 4), float32] */;
  %10 = %7.2;
  %11 = %8.1;
  (%9, %10, %11)
}

def @func_10619() -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) {
  %12 = @func_10187() /* ty=(Tensor[(16, 8, 8), float32], Tensor[(12, 2, 14), float32], Tensor[(?, 21), uint32]) */;
  %13 = @func_8087() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(2, 21), float64]) */;
  %14 = %12.1;
  %15 = %13.0;
  (%14, %15)
}

def @func_4071() -> Tensor[(12, 2, 14), float32] {
  @func_3929() /* ty=Tensor[(12, 2, 14), float32] */
}

def @func_7407(%var_7329: Tensor[(1, 360), float32], %var_7371: Tensor[(7, 21), float64]) -> (Tensor[(12, 2, 14), float32], Tensor[(6, 15, 5), float64], Tensor[(1, 360), float32], Tensor[(364), float64], Tensor[(4, 21), bool], Tensor[(?, 8, 16), uint32], Tensor[(7, 21), float32], Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64]) {
  %16 = cast(%var_7329, dtype="float32") /* ty=Tensor[(1, 360), float32] */;
  %17 = cast(%var_7329, dtype="float32") /* ty=Tensor[(1, 360), float32] */;
  %18 = cast(meta[relay.Constant][0] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
  %19 = reshape(%16, newshape=[6, 10, 6]) /* ty=Tensor[(6, 10, 6), float32] */;
  %20 = reshape(%17, newshape=[6, 10, 6]) /* ty=Tensor[(6, 10, 6), float32] */;
  %21 = reshape(%18, newshape=[91, 4]) /* ty=Tensor[(91, 4), float64] */;
  %22 = @func_4449(%19, %20, %21) /* ty=(Tensor[(6, 10, 6), float32], Tensor[(6, 15, 5), float64], Tensor[(5, 90), float64], Tensor[(7, 13, 4), float64], Tensor[(12, 2, 14), float32], Tensor[(91, 4), bool], Tensor[(91, 4), float32]) */;
  %23 = @func_5109() /* ty=(Tensor[(4, 21), bool], Tensor[(2, 360), float64]) */;
  %24 = cast(meta[relay.Constant][1] /* ty=Tensor[(128), int8] */, dtype="int8") /* ty=Tensor[(128), int8] */;
  %25 = reshape(%24, newshape=[1, 8, 16]) /* ty=Tensor[(1, 8, 16), int8] */;
  %26 = @func_40(%25) /* ty=(Tensor[(1, 8, 16), int8],) */;
  %27 = %26.0;
  %28 = cast(meta[relay.Constant][1] /* ty=Tensor[(128), int8] */, dtype="uint32") /* ty=Tensor[(128), uint32] */;
  %29 = shape_of(%27, dtype="int32") /* ty=Tensor[(3), int32] */;
  %30 = cast(%27, dtype="uint32") /* ty=Tensor[(1, 8, 16), uint32] */;
  %31 = dyn.reshape(%28, %29, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %32 = @func_5574() /* ty=(Tensor[(1, 21), float64], Tensor[(12, 2, 14), bool], Tensor[(12, 2, 14), float64]) */;
  %33 = %32.0;
  %34 = cast(%33, dtype="bool") /* ty=Tensor[(1, 21), bool] */;
  %35 = cast(%var_7371, dtype="bool") /* ty=Tensor[(7, 21), bool] */;
  %36 = greater_equal(%34, %35) /* ty=Tensor[(7, 21), bool] */;
  %37 = cast(%36, dtype="float32") /* ty=Tensor[(7, 21), float32] */;
  %38 = cast(%33, dtype="float32") /* ty=Tensor[(1, 21), float32] */;
  %39 = @func_4983() /* ty=(Tensor[(1, 21), float64], Tensor[(1, 8, 16), int8], Tensor[(13), float32]) */;
  %40 = @func_6568() /* ty=Tensor[(12, 2, 14), float32] */;
  %41 = %22.1;
  %42 = %23.0;
  %43 = left_shift(%30, %31) /* ty=Tensor[(?, 8, 16), uint32] */;
  %44 = floor_divide(%37, %38) /* ty=Tensor[(7, 21), float32] */;
  %45 = @func_3929() /* ty=Tensor[(12, 2, 14), float32] */;
  %46 = %39.0;
  (%40, %41, %var_7329, meta[relay.Constant][0] /* ty=Tensor[(364), float64] */, %42, %43, %44, %45, %46)
}

def @func_3864() -> (Tensor[(12, 2, 14), float32],) {
  %47 = @func_3835() /* ty=Tensor[(12, 2, 14), float32] */;
  (%47,)
}

def @func_5077() -> (Tensor[(12, 2, 14), float32],) {
  %48 = @func_3929() /* ty=Tensor[(12, 2, 14), float32] */;
  (%48,)
}

def @func_5855(%var_5818: Tensor[(180, 4), float64]) -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(180, 4), float64]) {
  %49 = @func_5350() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(13), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */;
  %50 = cast(%var_5818, dtype="float64") /* ty=Tensor[(180, 4), float64] */;
  %51 = reshape(%50, newshape=[2, 360]) /* ty=Tensor[(2, 360), float64] */;
  %52 = @func_4842(%51) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64], Tensor[(15, 16, 3), float64], Tensor[(2, 360), float64], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */;
  %53 = %49.0;
  %54 = %52.5;
  (%53, %54, %var_5818)
}

def @func_4156() -> Tensor[(1, 21), float64] {
  %55 = @func_3987() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64]) */;
  %55.2
}

def @func_8056() -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64]) {
  %56 = @func_5732() /* ty=(Tensor[(1, 21), float64], Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64]) */;
  %57 = @func_3987() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64]) */;
  %58 = @func_6235() /* ty=(Tensor[(1, 7, 3), float64], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), bool]) */;
  %59 = %56.1;
  %60 = @func_6065() /* ty=Tensor[(12, 2, 14), float32] */;
  %61 = %57.1;
  %62 = @func_6253() /* ty=Tensor[(12, 2, 14), float32] */;
  %63 = %58.0;
  (%59, %60, %61, %62, %63)
}

def @func_8585() -> Tensor[(12, 2, 14), float32] {
  %64 = @func_5077() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %64.0
}

def @func_4449(%var_4399: Tensor[(6, 10, 6), float32], %var_4400: Tensor[(6, 10, 6), float32], %var_4439: Tensor[(91, 4), float64]) -> (Tensor[(6, 10, 6), float32], Tensor[(6, 15, 5), float64], Tensor[(5, 90), float64], Tensor[(7, 13, 4), float64], Tensor[(12, 2, 14), float32], Tensor[(91, 4), bool], Tensor[(91, 4), float32]) {
  %65 = cast(%var_4400, dtype="float32") /* ty=Tensor[(6, 10, 6), float32] */;
  %66 = shape_of(%var_4399, dtype="int32") /* ty=Tensor[(3), int32] */;
  %67 = cast(%var_4399, dtype="float32") /* ty=Tensor[(6, 10, 6), float32] */;
  %68 = dyn.reshape(%65, %66, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %69 = cast(meta[relay.Constant][2] /* ty=Tensor[(5, 90), float64] */, dtype="float64") /* ty=Tensor[(5, 90), float64] */;
  %70 = cast(meta[relay.Constant][2] /* ty=Tensor[(5, 90), float64] */, dtype="float64") /* ty=Tensor[(5, 90), float64] */;
  %71 = reshape(%69, newshape=[6, 15, 5]) /* ty=Tensor[(6, 15, 5), float64] */;
  %72 = reshape(%70, newshape=[6, 15, 5]) /* ty=Tensor[(6, 15, 5), float64] */;
  %73 = cast(meta[relay.Constant][3] /* ty=Tensor[(91, 4), float64] */, dtype="float64") /* ty=Tensor[(91, 4), float64] */;
  %74 = reshape(%73, newshape=[7, 13, 4]) /* ty=Tensor[(7, 13, 4), float64] */;
  %75 = cast(%var_4439, dtype="bool") /* ty=Tensor[(91, 4), bool] */;
  %76 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(91, 4), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %77 = cast(meta[relay.Constant][3] /* ty=Tensor[(91, 4), float64] */, dtype="bool") /* ty=Tensor[(91, 4), bool] */;
  %78 = dyn.reshape(%75, %76, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %79 = cast(meta[relay.Constant][3] /* ty=Tensor[(91, 4), float64] */, dtype="float32") /* ty=Tensor[(91, 4), float32] */;
  %80 = mod(%67, %68) /* ty=Tensor[(6, 10, 6), float32] */;
  %81 = @func_2256(%71, %72) /* ty=Tensor[(6, 15, 5), float64] */;
  %82 = @func_3183(%74) /* ty=Tensor[(7, 13, 4), float64] */;
  %83 = @func_3929() /* ty=Tensor[(12, 2, 14), float32] */;
  %84 = greater_equal(%77, %78) /* ty=Tensor[(91, 4), bool] */;
  %85 = log10(%79) /* ty=Tensor[(91, 4), float32] */;
  (%80, %81, meta[relay.Constant][2] /* ty=Tensor[(5, 90), float64] */, %82, %83, %84, %85)
}

def @func_7716(%var_7704: Tensor[(600), int64]) -> (Tensor[(12, 2, 14), float32], Tensor[(13), float32], Tensor[(84), float64], Tensor[(12, 2, 14), float64], Tensor[(12, 2, 14), float32], Tensor[(15, 16, 3), float64], Tensor[(600), int64], Tensor[(720), float64], Tensor[(?, 21), int32]) {
  %86 = @func_6389() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %87 = cast(meta[relay.Constant][4] /* ty=Tensor[(84), float64] */, dtype="float64") /* ty=Tensor[(84), float64] */;
  %88 = @func_4933() /* ty=(Tensor[(1, 21), float64],) */;
  %89 = %88.0;
  %90 = cast(%89, dtype="float32") /* ty=Tensor[(1, 21), float32] */;
  %91 = exp(%90) /* ty=Tensor[(1, 21), float32] */;
  %92 = cast(%91, dtype="float64") /* ty=Tensor[(1, 21), float64] */;
  %93 = reshape(%87, newshape=[4, 21]) /* ty=Tensor[(4, 21), float64] */;
  %94 = reshape(%92, newshape=[21]) /* ty=Tensor[(21), float64] */;
  %95 = @func_6948(%93, %94) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 8, 16), int8], Tensor[(13), float32], Tensor[(720), float64], Tensor[(21), float64], Tensor[(12, 2, 14), bool], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(4, 21), float64]) */;
  %96 = %86.0;
  %97 = cast(%96, dtype="float32") /* ty=Tensor[(12, 2, 14), float32] */;
  %98 = reshape(%97, newshape=[12, 2, 14]) /* ty=Tensor[(12, 2, 14), float32] */;
  %99 = cast(%var_7704, dtype="int64") /* ty=Tensor[(600), int64] */;
  %100 = cast(%var_7704, dtype="int64") /* ty=Tensor[(600), int64] */;
  %101 = cast(meta[relay.Constant][5] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %102 = reshape(%99, newshape=[10, 15, 4]) /* ty=Tensor[(10, 15, 4), int64] */;
  %103 = reshape(%100, newshape=[10, 15, 4]) /* ty=Tensor[(10, 15, 4), int64] */;
  %104 = reshape(%101, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %105 = @func_2362(%102, %103, %104) /* ty=(Tensor[(10, 15, 4), int64], Tensor[(15, 16, 3), float64], Tensor[(720), float64]) */;
  %106 = cast(%89, dtype="int32") /* ty=Tensor[(1, 21), int32] */;
  %107 = shape_of(%91, dtype="int32") /* ty=Tensor[(2), int32] */;
  %108 = cast(%91, dtype="int32") /* ty=Tensor[(1, 21), int32] */;
  %109 = dyn.reshape(%106, %107, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %110 = %95.2;
  %111 = @func_5261(%98) /* ty=Tensor[(12, 2, 14), float64] */;
  %112 = @func_5512() /* ty=Tensor[(12, 2, 14), float32] */;
  %113 = %105.1;
  %114 = bitwise_xor(%108, %109) /* ty=Tensor[(?, 21), int32] */;
  (%96, %110, meta[relay.Constant][4] /* ty=Tensor[(84), float64] */, %111, %112, %113, %var_7704, meta[relay.Constant][5] /* ty=Tensor[(720), float64] */, %114)
}

def @func_2967(%var_2958: Tensor[(16, 11, 6), float32], %var_2963: Tensor[(600), int64]) -> (Tensor[(16, 11, 6), float32], Tensor[(10, 15, 4), int64], Tensor[(600), int64], Tensor[(720), float64]) {
  %115 = cast(-2.50898f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %116 = cast(%var_2958, dtype="float32") /* ty=Tensor[(16, 11, 6), float32] */;
  %117 = cast(%var_2963, dtype="int64") /* ty=Tensor[(600), int64] */;
  %118 = cast(%var_2963, dtype="int64") /* ty=Tensor[(600), int64] */;
  %119 = cast(meta[relay.Constant][6] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %120 = reshape(%117, newshape=[10, 15, 4]) /* ty=Tensor[(10, 15, 4), int64] */;
  %121 = reshape(%118, newshape=[10, 15, 4]) /* ty=Tensor[(10, 15, 4), int64] */;
  %122 = reshape(%119, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %123 = @func_2362(%120, %121, %122) /* ty=(Tensor[(10, 15, 4), int64], Tensor[(15, 16, 3), float64], Tensor[(720), float64]) */;
  %124 = add(%115, %116) /* ty=Tensor[(16, 11, 6), float32] */;
  %125 = %123.0;
  (%124, %125, %var_2963, meta[relay.Constant][6] /* ty=Tensor[(720), float64] */)
}

def @func_6235() -> (Tensor[(1, 7, 3), float64], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), bool]) {
  %126 = @func_3987() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64]) */;
  %127 = @func_4104() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %128 = @func_5574() /* ty=(Tensor[(1, 21), float64], Tensor[(12, 2, 14), bool], Tensor[(12, 2, 14), float64]) */;
  %129 = %126.1;
  %130 = %127.0;
  %131 = %128.1;
  (%129, %130, %131)
}

def @func_11549() -> (Tensor[(2, 360), float64], Tensor[(1, 21), float64]) {
  %132 = @func_10325() /* ty=(Tensor[(2, 360), float64],) */;
  %133 = @func_10444() /* ty=(Tensor[(1, 21), float64],) */;
  %134 = %132.0;
  %135 = %133.0;
  (%134, %135)
}

def @func_6376() -> Tensor[(1, 21), float64] {
  %136 = @func_4337() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64]) */;
  %136.1
}

def @func_7992() -> (Tensor[(12, 2, 14), bool], Tensor[(2, 360), float64]) {
  %137 = @func_6235() /* ty=(Tensor[(1, 7, 3), float64], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), bool]) */;
  %138 = @func_7015() /* ty=(Tensor[(2, 360), float64],) */;
  %139 = %137.2;
  %140 = %138.0;
  (%139, %140)
}

def @func_3183(%var_3180: Tensor[(7, 13, 4), float64]) -> Tensor[(7, 13, 4), float64] {
  %141 = cast(%var_3180, dtype="float64") /* ty=Tensor[(7, 13, 4), float64] */;
  asinh(%141) /* ty=Tensor[(7, 13, 4), float64] */
}

def @func_3595(%var_3556: float32, %var_3557: Tensor[(1, 6, 10), float32]) -> (Tensor[(1, 6, 10), bool], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64], Tensor[(?, 6, 10), bool]) {
  %142 = cast(%var_3556, dtype="bool") /* ty=bool */;
  %143 = cast(%var_3557, dtype="bool") /* ty=Tensor[(1, 6, 10), bool] */;
  %144 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 21), float64] */, dtype="float64") /* ty=Tensor[(1, 21), float64] */;
  %145 = reshape(%144, newshape=[1, 7, 3]) /* ty=Tensor[(1, 7, 3), float64] */;
  %146 = @func_2092(%145) /* ty=(Tensor[(1, 7, 3), float64], Tensor[(1, 7, 3), float64], Tensor[(1, 8, 16), int8], Tensor[(2, 360), float64]) */;
  %147 = cast(%var_3556, dtype="float32") /* ty=float32 */;
  %148 = cast(%var_3557, dtype="float32") /* ty=Tensor[(1, 6, 10), float32] */;
  %149 = mod(%147, %148) /* ty=Tensor[(1, 6, 10), float32] */;
  %150 = cast(%149, dtype="int16") /* ty=Tensor[(1, 6, 10), int16] */;
  %151 = cast(%var_3556, dtype="int16") /* ty=int16 */;
  %152 = add(%150, %151) /* ty=Tensor[(1, 6, 10), int16] */;
  %153 = cast(%149, dtype="bool") /* ty=Tensor[(1, 6, 10), bool] */;
  %154 = shape_of(%152, dtype="int32") /* ty=Tensor[(3), int32] */;
  %155 = cast(%152, dtype="bool") /* ty=Tensor[(1, 6, 10), bool] */;
  %156 = dyn.reshape(%153, %154, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %157 = greater_equal(%142, %143) /* ty=Tensor[(1, 6, 10), bool] */;
  %158 = %146.1;
  %159 = greater(%155, %156) /* ty=Tensor[(?, 6, 10), bool] */;
  (%157, %158, meta[relay.Constant][7] /* ty=Tensor[(1, 21), float64] */, %159)
}

def @func_6468() -> Tensor[(12, 2, 14), float32] {
  %160 = @func_4104() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %160.0
}

def @func_9108() -> Tensor[(12, 2, 14), float32] {
  %161 = @func_8056() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64]) */;
  %161.0
}

def @func_4948(%var_4946: Tensor[(21), float64]) -> (Tensor[(12, 2, 14), float32], Tensor[(1, 600), int64], Tensor[(1, 720), float64], Tensor[(21), float64]) {
  %162 = @func_3864() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %163 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 720), float64] */, dtype="float64") /* ty=Tensor[(1, 720), float64] */;
  %164 = cast(%var_4946, dtype="float64") /* ty=Tensor[(21), float64] */;
  %165 = reshape(%163, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %166 = reshape(%164, newshape=[1, 7, 3]) /* ty=Tensor[(1, 7, 3), float64] */;
  %167 = @func_4039(%165, %166) /* ty=(Tensor[(15, 16, 3), float64], Tensor[(720), float64], Tensor[(?, 7, 3), bool], Tensor[(10, 15, 4), int64], Tensor[(1056), float32], Tensor[(1, 600), int64]) */;
  %168 = %162.0;
  %169 = %167.5;
  (%168, %169, meta[relay.Constant][8] /* ty=Tensor[(1, 720), float64] */, %var_4946)
}

def @func_5512() -> Tensor[(12, 2, 14), float32] {
  @func_4620() /* ty=Tensor[(12, 2, 14), float32] */
}

def @func_11371() -> (Tensor[(12, 2, 14), float32],) {
  %170 = @func_7742() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */;
  %171 = %170.0;
  (%171,)
}

def @func_4142(%var_4122: Tensor[(128), int8]) -> (Tensor[(1, 7, 3), float64], Tensor[(1, 8, 16), int8], Tensor[(128), int8]) {
  %172 = @func_3987() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64]) */;
  %173 = %172.1;
  %174 = cast(%173, dtype="float64") /* ty=Tensor[(1, 7, 3), float64] */;
  %175 = cast(%var_4122, dtype="int8") /* ty=Tensor[(128), int8] */;
  %176 = reshape(%175, newshape=[1, 8, 16]) /* ty=Tensor[(1, 8, 16), int8] */;
  %177 = @func_40(%176) /* ty=(Tensor[(1, 8, 16), int8],) */;
  %178 = sinh(%174) /* ty=Tensor[(1, 7, 3), float64] */;
  %179 = %177.0;
  (%178, %179, %var_4122)
}

def @func_7561(%var_7527: Tensor[(3, 20), float32], %var_7548: Tensor[(2, 360), float64]) -> (Tensor[(12, 2, 14), float32], Tensor[(15, 4), float32], Tensor[(3, 20), float32], Tensor[(126), float64], Tensor[(2, 360), float64], Tensor[(1, 8, 16), int8]) {
  %180 = @func_3917() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %181 = cast(%var_7527, dtype="float32") /* ty=Tensor[(3, 20), float32] */;
  %182 = cast(meta[relay.Constant][9] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %183 = cast(meta[relay.Constant][9] /* ty=Tensor[(126), float64] */, dtype="int8") /* ty=Tensor[(126), int8] */;
  %184 = reshape(%181, newshape=[15, 4]) /* ty=Tensor[(15, 4), float32] */;
  %185 = reshape(%182, newshape=[6, 21]) /* ty=Tensor[(6, 21), float64] */;
  %186 = reshape(%183, newshape=[6, 21]) /* ty=Tensor[(6, 21), int8] */;
  %187 = @func_6737(%184, %185, %186) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(2016), float64], Tensor[(?, 8, 16), int8], Tensor[(1, 7, 3), float64], float32, Tensor[(15, 4), float32], Tensor[(6, 21), uint8], Tensor[(4, 21), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(6, 21), float64]) */;
  %188 = @func_7015() /* ty=(Tensor[(2, 360), float64],) */;
  %189 = %188.0;
  %190 = cast(%var_7548, dtype="float64") /* ty=Tensor[(2, 360), float64] */;
  %191 = shape_of(%189, dtype="int32") /* ty=Tensor[(2), int32] */;
  %192 = cast(%189, dtype="float64") /* ty=Tensor[(2, 360), float64] */;
  %193 = dyn.reshape(%190, %191, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %194 = power(%192, %193) /* ty=Tensor[(2, 360), float64] */;
  %195 = cast(%194, dtype="float64") /* ty=Tensor[(2, 360), float64] */;
  %196 = reshape(%195, newshape=[15, 16, 3]) /* ty=Tensor[(15, 16, 3), float64] */;
  %197 = @func_1884(%196) /* ty=(Tensor[(15, 16, 3), float64], Tensor[(1, 8, 16), int8], Tensor[(128), int8]) */;
  %198 = %180.0;
  %199 = %187.5;
  %200 = %197.1;
  (%198, %199, %var_7527, meta[relay.Constant][9] /* ty=Tensor[(126), float64] */, %194, %200)
}

def @func_8194(%var_8175: Tensor[(4, 21), float32]) -> (Tensor[(4, 21), float64],) {
  %201 = @func_4983() /* ty=(Tensor[(1, 21), float64], Tensor[(1, 8, 16), int8], Tensor[(13), float32]) */;
  %202 = %201.0;
  %203 = cast(%202, dtype="float32") /* ty=Tensor[(1, 21), float32] */;
  %204 = sqrt(%203) /* ty=Tensor[(1, 21), float32] */;
  %205 = cast(%204, dtype="float64") /* ty=Tensor[(1, 21), float64] */;
  %206 = cast(%var_8175, dtype="float64") /* ty=Tensor[(4, 21), float64] */;
  %207 = mod(%205, %206) /* ty=Tensor[(4, 21), float64] */;
  (%207,)
}

def @func_11195() -> (Tensor[(12, 2, 14), float32],) {
  %208 = @func_10619() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */;
  %209 = %208.0;
  (%209,)
}

def @func_9488(%var_9472: Tensor[(450, 1), float64]) -> (Tensor[(12, 2, 14), float32], Tensor[(?, 21), bool], Tensor[(21), float64], Tensor[(2, 360), float64], Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64], Tensor[(1, 8, 16), int8], Tensor[(128), int8], Tensor[(450), float64], Tensor[(450, 1), float64], Tensor[(12, 2, 14), float64]) {
  %210 = cast(meta[relay.Constant][10] /* ty=Tensor[(21), float64] */, dtype="float64") /* ty=Tensor[(21), float64] */;
  %211 = reshape(%210, newshape=[1, 21]) /* ty=Tensor[(1, 21), float64] */;
  %212 = @func_7015() /* ty=(Tensor[(2, 360), float64],) */;
  %213 = cast(meta[relay.Constant][11] /* ty=Tensor[(128), int8] */, dtype="int8") /* ty=Tensor[(128), int8] */;
  %214 = reshape(%213, newshape=[1, 8, 16]) /* ty=Tensor[(1, 8, 16), int8] */;
  %215 = @func_40(%214) /* ty=(Tensor[(1, 8, 16), int8],) */;
  %216 = cast(%var_9472, dtype="float64") /* ty=Tensor[(450, 1), float64] */;
  %217 = reshape(%216, newshape=[450]) /* ty=Tensor[(450), float64] */;
  %218 = @func_8930(%217) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(6, 15, 5), float64], Tensor[(450), float64], Tensor[(12, 2, 14), float32]) */;
  %219 = @func_5512() /* ty=Tensor[(12, 2, 14), float32] */;
  %220 = cast(%219, dtype="float64") /* ty=Tensor[(12, 2, 14), float64] */;
  %221 = @func_8218() /* ty=Tensor[(12, 2, 14), float32] */;
  %222 = @func_6453(%211) /* ty=Tensor[(?, 21), bool] */;
  %223 = %212.0;
  %224 = @func_4620() /* ty=Tensor[(12, 2, 14), float32] */;
  %225 = @func_4156() /* ty=Tensor[(1, 21), float64] */;
  %226 = %215.0;
  %227 = %218.2;
  %228 = atanh(%220) /* ty=Tensor[(12, 2, 14), float64] */;
  (%221, %222, meta[relay.Constant][10] /* ty=Tensor[(21), float64] */, %223, %224, %225, %226, meta[relay.Constant][11] /* ty=Tensor[(128), int8] */, %227, %var_9472, %228)
}

def @func_628(%var_552: Tensor[(11, 15, 4), float64], %var_558: Tensor[(4, 32), int8]) -> (Tensor[(11, 15, 4), float64], Tensor[(1, 8, 16), int8], Tensor[(4, 32), int8], Tensor[(1, 8, 16), int8], Tensor[(1, 8, 16), int8], Tensor[(1, 8, 16), int8], Tensor[(1, 8, 16), int8], Tensor[(1, 8, 16), int8]) {
  %229 = cast(%var_552, dtype="float64") /* ty=Tensor[(11, 15, 4), float64] */;
  %230 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(11, 15, 4), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %231 = cast(meta[relay.Constant][12] /* ty=Tensor[(11, 15, 4), float64] */, dtype="float64") /* ty=Tensor[(11, 15, 4), float64] */;
  %232 = dyn.reshape(%229, %230, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %233 = cast(%var_558, dtype="int8") /* ty=Tensor[(4, 32), int8] */;
  %234 = reshape(%233, newshape=[1, 8, 16]) /* ty=Tensor[(1, 8, 16), int8] */;
  %235 = @func_40(%234) /* ty=(Tensor[(1, 8, 16), int8],) */;
  %236 = cast(%var_558, dtype="int8") /* ty=Tensor[(4, 32), int8] */;
  %237 = reshape(%236, newshape=[1, 8, 16]) /* ty=Tensor[(1, 8, 16), int8] */;
  %238 = @func_40(%237) /* ty=(Tensor[(1, 8, 16), int8],) */;
  %239 = %235.0;
  %240 = cast(%239, dtype="int8") /* ty=Tensor[(1, 8, 16), int8] */;
  %241 = reshape(%240, newshape=[1, 8, 16]) /* ty=Tensor[(1, 8, 16), int8] */;
  %242 = @func_40(%241) /* ty=(Tensor[(1, 8, 16), int8],) */;
  %243 = cast(%var_558, dtype="int8") /* ty=Tensor[(4, 32), int8] */;
  %244 = reshape(%243, newshape=[1, 8, 16]) /* ty=Tensor[(1, 8, 16), int8] */;
  %245 = @func_40(%244) /* ty=(Tensor[(1, 8, 16), int8],) */;
  %246 = %245.0;
  %247 = cast(%246, dtype="int8") /* ty=Tensor[(1, 8, 16), int8] */;
  %248 = reshape(%247, newshape=[1, 8, 16]) /* ty=Tensor[(1, 8, 16), int8] */;
  %249 = @func_40(%248) /* ty=(Tensor[(1, 8, 16), int8],) */;
  %250 = %242.0;
  %251 = cast(%250, dtype="int8") /* ty=Tensor[(1, 8, 16), int8] */;
  %252 = reshape(%251, newshape=[1, 8, 16]) /* ty=Tensor[(1, 8, 16), int8] */;
  %253 = @func_40(%252) /* ty=(Tensor[(1, 8, 16), int8],) */;
  %254 = floor_mod(%231, %232) /* ty=Tensor[(11, 15, 4), float64] */;
  %255 = %238.0;
  %256 = %249.0;
  %257 = %253.0;
  (%254, %239, %var_558, %255, %250, %246, %256, %257)
}

def @func_7964() -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(6, 15, 5), float64], Tensor[(450), float64]) {
  %258 = cast(meta[relay.Constant][13] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %259 = cast(meta[relay.Constant][13] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %260 = reshape(%258, newshape=[6, 15, 5]) /* ty=Tensor[(6, 15, 5), float64] */;
  %261 = reshape(%259, newshape=[6, 15, 5]) /* ty=Tensor[(6, 15, 5), float64] */;
  %262 = @func_4601() /* ty=Tensor[(12, 2, 14), float32] */;
  %263 = @func_6762() /* ty=Tensor[(12, 2, 14), float32] */;
  %264 = @func_2256(%260, %261) /* ty=Tensor[(6, 15, 5), float64] */;
  (%262, %263, %264, meta[relay.Constant][13] /* ty=Tensor[(450), float64] */)
}

def @func_10393() -> (Tensor[(1, 21), float64], Tensor[(16, 8, 8), float32]) {
  %265 = @func_6376() /* ty=Tensor[(1, 21), float64] */;
  %266 = @func_9799() /* ty=Tensor[(16, 8, 8), float32] */;
  (%265, %266)
}

def @func_40(%var_11: Tensor[(1, 8, 16), int8]) -> (Tensor[(1, 8, 16), int8],) {
  %267 = cast(meta[relay.Constant][14] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %268 = cast(%var_11, dtype="int8") /* ty=Tensor[(1, 8, 16), int8] */;
  %269 = right_shift(%267, %268) /* ty=Tensor[(1, 8, 16), int8] */;
  (%269,)
}

def @func_10835() -> (Tensor[(1, 21), float64],) {
  %270 = @func_10444() /* ty=(Tensor[(1, 21), float64],) */;
  %271 = %270.0;
  (%271,)
}

def @func_4193(%var_4168: Tensor[(1, 1, 1), float64], %var_4189: Tensor[(60), float32]) -> (Tensor[(12, 2, 14), float32], Tensor[(1, 1, 1), float32], Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(60), float32]) {
  %272 = @func_4104() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %273 = cast(%var_4168, dtype="float64") /* ty=Tensor[(1, 1, 1), float64] */;
  %274 = asin(%273) /* ty=Tensor[(1, 1, 1), float64] */;
  %275 = cast(%274, dtype="float32") /* ty=Tensor[(1, 1, 1), float32] */;
  %276 = @func_3987() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64]) */;
  %277 = cast(%var_4168, dtype="float32") /* ty=Tensor[(1, 1, 1), float32] */;
  %278 = cast(%var_4189, dtype="float32") /* ty=Tensor[(60), float32] */;
  %279 = reshape(%277, newshape=[]) /* ty=float32 */;
  %280 = reshape(%278, newshape=[1, 6, 10]) /* ty=Tensor[(1, 6, 10), float32] */;
  %281 = @func_3595(%279, %280) /* ty=(Tensor[(1, 6, 10), bool], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64], Tensor[(?, 6, 10), bool]) */;
  %282 = %272.0;
  %283 = atan(%275) /* ty=Tensor[(1, 1, 1), float32] */;
  %284 = %276.0;
  %285 = %281.1;
  (%282, %283, %284, %285, %var_4189)
}

def @func_7127() -> (Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(12, 2, 14), float32]) {
  %286 = @func_3987() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64]) */;
  %287 = @func_7077() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %288 = @func_5512() /* ty=Tensor[(12, 2, 14), float32] */;
  %289 = %286.1;
  %290 = %287.0;
  (%288, %289, %290)
}

def @func_10325() -> (Tensor[(2, 360), float64],) {
  %291 = @func_7992() /* ty=(Tensor[(12, 2, 14), bool], Tensor[(2, 360), float64]) */;
  %292 = %291.1;
  (%292,)
}

def @func_4386(%var_4382: Tensor[(128), int8]) -> (Tensor[(12, 2, 14), float32], Tensor[(16, 14, 9), uint8], Tensor[(2016), float64], Tensor[(128), int8]) {
  %293 = @func_3987() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64]) */;
  %294 = cast(meta[relay.Constant][15] /* ty=Tensor[(2016), float64] */, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %295 = cast(%var_4382, dtype="int8") /* ty=Tensor[(128), int8] */;
  %296 = reshape(%294, newshape=[16, 14, 9]) /* ty=Tensor[(16, 14, 9), float64] */;
  %297 = reshape(%295, newshape=[64, 2]) /* ty=Tensor[(64, 2), int8] */;
  %298 = @func_854(%296, %297) /* ty=(Tensor[(1, 8, 16), int8], Tensor[(64, 2), int8], Tensor[(16, 14, 9), uint8]) */;
  %299 = %293.0;
  %300 = %298.2;
  (%299, %300, meta[relay.Constant][15] /* ty=Tensor[(2016), float64] */, %var_4382)
}

def @func_11785() -> (Tensor[(4, 21), float32],) {
  %301 = @func_5398() /* ty=(Tensor[(4, 21), float32],) */;
  %302 = %301.0;
  (%302,)
}

def @func_9903(%var_9864: Tensor[(450), float64], %var_9880: Tensor[(128), int8]) -> (Tensor[(6, 15, 5), float64], Tensor[(450), float64], Tensor[(12, 2, 14), float32], Tensor[(1, 8, 16), int8], Tensor[(2016), float64], Tensor[(128), int8], Tensor[(13), float32], Tensor[(128), int8]) {
  %303 = cast(%var_9864, dtype="float64") /* ty=Tensor[(450), float64] */;
  %304 = cast(%var_9864, dtype="float64") /* ty=Tensor[(450), float64] */;
  %305 = reshape(%303, newshape=[6, 15, 5]) /* ty=Tensor[(6, 15, 5), float64] */;
  %306 = reshape(%304, newshape=[6, 15, 5]) /* ty=Tensor[(6, 15, 5), float64] */;
  %307 = @func_5611() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %308 = %307.0;
  %309 = cast(%308, dtype="float32") /* ty=Tensor[(12, 2, 14), float32] */;
  %310 = cast(meta[relay.Constant][16] /* ty=Tensor[(2016), float64] */, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %311 = cast(%var_9880, dtype="int8") /* ty=Tensor[(128), int8] */;
  %312 = reshape(%310, newshape=[16, 14, 9]) /* ty=Tensor[(16, 14, 9), float64] */;
  %313 = reshape(%311, newshape=[64, 2]) /* ty=Tensor[(64, 2), int8] */;
  %314 = @func_854(%312, %313) /* ty=(Tensor[(1, 8, 16), int8], Tensor[(64, 2), int8], Tensor[(16, 14, 9), uint8]) */;
  %315 = @func_7853() /* ty=(Tensor[(13), float32], Tensor[(1, 21), float64]) */;
  %316 = %314.0;
  %317 = cast(%316, dtype="int8") /* ty=Tensor[(1, 8, 16), int8] */;
  %318 = reshape(%317, newshape=[128]) /* ty=Tensor[(128), int8] */;
  %319 = @func_8578(%318) /* ty=(Tensor[(2, 360), float64], Tensor[(12, 2, 14), float32], Tensor[(16, 14, 9), uint8], Tensor[(128), int8], Tensor[(12, 2, 14), float32]) */;
  %320 = @func_2256(%305, %306) /* ty=Tensor[(6, 15, 5), float64] */;
  %321 = log10(%309) /* ty=Tensor[(12, 2, 14), float32] */;
  %322 = %315.0;
  %323 = %319.3;
  (%320, %var_9864, %321, %316, meta[relay.Constant][16] /* ty=Tensor[(2016), float64] */, %var_9880, %322, %323)
}

def @func_3917() -> (Tensor[(12, 2, 14), float32],) {
  %324 = @func_3835() /* ty=Tensor[(12, 2, 14), float32] */;
  (%324,)
}

def @func_7077() -> (Tensor[(12, 2, 14), float32],) {
  %325 = @func_5350() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(13), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */;
  %326 = %325.2;
  (%326,)
}

def @func_11933() -> (Tensor[(1, 21), float32],) {
  %327 = @func_10350() /* ty=Tensor[(1, 21), float32] */;
  (%327,)
}

def @func_8620(%var_8607: Tensor[(6, 21), float64], %var_8614: Tensor[(12, 21), float64]) -> (Tensor[(12, 2, 14), float32], Tensor[(6, 21), int16], Tensor[(12, 21), float64]) {
  %328 = @func_3987() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64]) */;
  %329 = @func_4933() /* ty=(Tensor[(1, 21), float64],) */;
  %330 = %329.0;
  %331 = cast(%330, dtype="int16") /* ty=Tensor[(1, 21), int16] */;
  %332 = cast(%var_8607, dtype="int16") /* ty=Tensor[(6, 21), int16] */;
  %333 = cast(%330, dtype="float64") /* ty=Tensor[(1, 21), float64] */;
  %334 = cast(%var_8614, dtype="float64") /* ty=Tensor[(12, 21), float64] */;
  %335 = %328.0;
  %336 = subtract(%331, %332) /* ty=Tensor[(6, 21), int16] */;
  %337 = floor_divide(%333, %334) /* ty=Tensor[(12, 21), float64] */;
  (%335, %336, %337)
}

def @func_4558(%var_4541: Tensor[(21), float64]) -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(1), float64], Tensor[(60), float32], Tensor[(720), float64], Tensor[(720), float64], Tensor[(21), float64]) {
  %338 = cast(meta[relay.Constant][17] /* ty=Tensor[(1), float64] */, dtype="float64") /* ty=Tensor[(1), float64] */;
  %339 = cast(meta[relay.Constant][18] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %340 = reshape(%338, newshape=[1, 1, 1]) /* ty=Tensor[(1, 1, 1), float64] */;
  %341 = reshape(%339, newshape=[60]) /* ty=Tensor[(60), float32] */;
  %342 = @func_4193(%340, %341) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 1, 1), float32], Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(60), float32]) */;
  %343 = cast(meta[relay.Constant][19] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %344 = cast(%var_4541, dtype="float64") /* ty=Tensor[(21), float64] */;
  %345 = reshape(%343, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %346 = reshape(%344, newshape=[1, 7, 3]) /* ty=Tensor[(1, 7, 3), float64] */;
  %347 = @func_4039(%345, %346) /* ty=(Tensor[(15, 16, 3), float64], Tensor[(720), float64], Tensor[(?, 7, 3), bool], Tensor[(10, 15, 4), int64], Tensor[(1056), float32], Tensor[(1, 600), int64]) */;
  %348 = @func_3929() /* ty=Tensor[(12, 2, 14), float32] */;
  %349 = %342.2;
  %350 = %347.1;
  (%348, %349, meta[relay.Constant][17] /* ty=Tensor[(1), float64] */, meta[relay.Constant][18] /* ty=Tensor[(60), float32] */, %350, meta[relay.Constant][19] /* ty=Tensor[(720), float64] */, %var_4541)
}

def @func_11491() -> Tensor[(12, 2, 14), float32] {
  %351 = @func_9928() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %351.0
}

def @func_6098() -> (Tensor[(12, 2, 14), float32],) {
  %352 = @func_4620() /* ty=Tensor[(12, 2, 14), float32] */;
  (%352,)
}

def @func_5611() -> (Tensor[(12, 2, 14), float32],) {
  %353 = @func_4071() /* ty=Tensor[(12, 2, 14), float32] */;
  (%353,)
}

def @func_11624() -> (Tensor[(12, 2, 14), float32], Tensor[(1, 720), float64], Tensor[(21), float64], Tensor[(12, 2, 14), float32]) {
  %354 = cast(meta[relay.Constant][20] /* ty=Tensor[(21), float64] */, dtype="float64") /* ty=Tensor[(21), float64] */;
  %355 = reshape(%354, newshape=[21]) /* ty=Tensor[(21), float64] */;
  %356 = @func_4948(%355) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 600), int64], Tensor[(1, 720), float64], Tensor[(21), float64]) */;
  %357 = @func_6468() /* ty=Tensor[(12, 2, 14), float32] */;
  %358 = %356.2;
  %359 = @func_10576() /* ty=Tensor[(12, 2, 14), float32] */;
  (%357, %358, meta[relay.Constant][20] /* ty=Tensor[(21), float64] */, %359)
}

def @func_5261(%var_5254: Tensor[(12, 2, 14), float32]) -> Tensor[(12, 2, 14), float64] {
  %360 = @func_5077() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %361 = %360.0;
  %362 = cast(%var_5254, dtype="float64") /* ty=Tensor[(12, 2, 14), float64] */;
  %363 = shape_of(%361, dtype="int32") /* ty=Tensor[(3), int32] */;
  %364 = cast(%361, dtype="float64") /* ty=Tensor[(12, 2, 14), float64] */;
  %365 = dyn.reshape(%362, %363, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  subtract(%364, %365) /* ty=Tensor[(12, 2, 14), float64] */
}

def @func_6162() -> (Tensor[(12, 2, 14), float32],) {
  %366 = @func_6098() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %367 = %366.0;
  (%367,)
}

def @func_10781() -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) {
  %368 = @func_7270() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */;
  %369 = @func_6389() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %370 = %368.1;
  %371 = @func_9637() /* ty=Tensor[(12, 2, 14), float32] */;
  %372 = %369.0;
  %373 = @func_6270() /* ty=Tensor[(12, 2, 14), float32] */;
  (%370, %371, %372, %373)
}

def @func_11163() -> (Tensor[(12, 2, 14), float32],) {
  %374 = @func_6162() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %375 = %374.0;
  (%375,)
}

def @func_10350() -> Tensor[(1, 21), float32] {
  %376 = @func_4156() /* ty=Tensor[(1, 21), float64] */;
  %377 = cast(%376, dtype="float32") /* ty=Tensor[(1, 21), float32] */;
  tan(%377) /* ty=Tensor[(1, 21), float32] */
}

def @func_8578(%var_8558: Tensor[(128), int8]) -> (Tensor[(2, 360), float64], Tensor[(12, 2, 14), float32], Tensor[(16, 14, 9), uint8], Tensor[(128), int8], Tensor[(12, 2, 14), float32]) {
  %378 = @func_7015() /* ty=(Tensor[(2, 360), float64],) */;
  %379 = @func_4104() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %380 = cast(%var_8558, dtype="int8") /* ty=Tensor[(128), int8] */;
  %381 = reshape(%380, newshape=[128]) /* ty=Tensor[(128), int8] */;
  %382 = @func_4386(%381) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(16, 14, 9), uint8], Tensor[(2016), float64], Tensor[(128), int8]) */;
  %383 = @func_7742() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */;
  %384 = %378.0;
  %385 = %379.0;
  %386 = %382.1;
  %387 = %383.1;
  (%384, %385, %386, %var_8558, %387)
}

def @func_8881(%var_8853: Tensor[(4, 7, 14), float32], %var_8864: Tensor[(4, 7, 14), float32], %var_8872: Tensor[(21), float64]) -> (Tensor[(4, 7, 14), float32], Tensor[(1, 600), int64], Tensor[(21), float64]) {
  %388 = cast(%var_8853, dtype="float32") /* ty=Tensor[(4, 7, 14), float32] */;
  %389 = log10(%388) /* ty=Tensor[(4, 7, 14), float32] */;
  %390 = cast(%var_8864, dtype="float32") /* ty=Tensor[(4, 7, 14), float32] */;
  %391 = shape_of(%389, dtype="int32") /* ty=Tensor[(3), int32] */;
  %392 = cast(%389, dtype="float32") /* ty=Tensor[(4, 7, 14), float32] */;
  %393 = dyn.reshape(%390, %391, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %394 = cast(%var_8872, dtype="float64") /* ty=Tensor[(21), float64] */;
  %395 = reshape(%394, newshape=[21]) /* ty=Tensor[(21), float64] */;
  %396 = @func_4948(%395) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 600), int64], Tensor[(1, 720), float64], Tensor[(21), float64]) */;
  %397 = floor_mod(%392, %393) /* ty=Tensor[(4, 7, 14), float32] */;
  %398 = %396.1;
  (%397, %398, %var_8872)
}

def @func_1884(%var_1864: Tensor[(15, 16, 3), float64]) -> (Tensor[(15, 16, 3), float64], Tensor[(1, 8, 16), int8], Tensor[(128), int8]) {
  %399 = cast(%var_1864, dtype="float64") /* ty=Tensor[(15, 16, 3), float64] */;
  %400 = cast(meta[relay.Constant][21] /* ty=Tensor[(128), int8] */, dtype="int8") /* ty=Tensor[(128), int8] */;
  %401 = reshape(%400, newshape=[1, 8, 16]) /* ty=Tensor[(1, 8, 16), int8] */;
  %402 = @func_40(%401) /* ty=(Tensor[(1, 8, 16), int8],) */;
  %403 = log(%399) /* ty=Tensor[(15, 16, 3), float64] */;
  %404 = %402.0;
  (%403, %404, meta[relay.Constant][21] /* ty=Tensor[(128), int8] */)
}

def @func_6737(%var_6677: Tensor[(15, 4), float32], %var_6682: Tensor[(6, 21), float64], %var_6730: Tensor[(6, 21), int8]) -> (Tensor[(12, 2, 14), float32], Tensor[(2016), float64], Tensor[(?, 8, 16), int8], Tensor[(1, 7, 3), float64], float32, Tensor[(15, 4), float32], Tensor[(6, 21), uint8], Tensor[(4, 21), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(6, 21), float64]) {
  %405 = cast(meta[relay.Constant][22] /* ty=Tensor[(128), int8] */, dtype="int8") /* ty=Tensor[(128), int8] */;
  %406 = reshape(%405, newshape=[128]) /* ty=Tensor[(128), int8] */;
  %407 = @func_4386(%406) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(16, 14, 9), uint8], Tensor[(2016), float64], Tensor[(128), int8]) */;
  %408 = %407.2;
  %409 = cast(%408, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %410 = cast(meta[relay.Constant][22] /* ty=Tensor[(128), int8] */, dtype="int8") /* ty=Tensor[(128), int8] */;
  %411 = reshape(%409, newshape=[16, 14, 9]) /* ty=Tensor[(16, 14, 9), float64] */;
  %412 = reshape(%410, newshape=[64, 2]) /* ty=Tensor[(64, 2), int8] */;
  %413 = @func_854(%411, %412) /* ty=(Tensor[(1, 8, 16), int8], Tensor[(64, 2), int8], Tensor[(16, 14, 9), uint8]) */;
  %414 = %413.0;
  %415 = cast(meta[relay.Constant][22] /* ty=Tensor[(128), int8] */, dtype="int8") /* ty=Tensor[(128), int8] */;
  %416 = shape_of(%414, dtype="int32") /* ty=Tensor[(3), int32] */;
  %417 = cast(%414, dtype="int8") /* ty=Tensor[(1, 8, 16), int8] */;
  %418 = dyn.reshape(%415, %416, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %419 = cast(-8.06185f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %420 = cast(%var_6677, dtype="float32") /* ty=Tensor[(15, 4), float32] */;
  %421 = reshape(%419, newshape=[]) /* ty=float32 */;
  %422 = reshape(%420, newshape=[1, 6, 10]) /* ty=Tensor[(1, 6, 10), float32] */;
  %423 = @func_3595(%421, %422) /* ty=(Tensor[(1, 6, 10), bool], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64], Tensor[(?, 6, 10), bool]) */;
  %424 = @func_3987() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64]) */;
  %425 = %424.2;
  %426 = cast(%425, dtype="float64") /* ty=Tensor[(1, 21), float64] */;
  %427 = atan(%426) /* ty=Tensor[(1, 21), float64] */;
  %428 = cast(%427, dtype="uint8") /* ty=Tensor[(1, 21), uint8] */;
  %429 = cast(%var_6682, dtype="uint8") /* ty=Tensor[(6, 21), uint8] */;
  %430 = @func_5398() /* ty=(Tensor[(4, 21), float32],) */;
  %431 = @func_3864() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %432 = cast(%427, dtype="float32") /* ty=Tensor[(1, 21), float32] */;
  %433 = asin(%432) /* ty=Tensor[(1, 21), float32] */;
  %434 = cast(%433, dtype="float32") /* ty=Tensor[(1, 21), float32] */;
  %435 = log10(%434) /* ty=Tensor[(1, 21), float32] */;
  %436 = cast(%435, dtype="int8") /* ty=Tensor[(1, 21), int8] */;
  %437 = cast(%var_6682, dtype="int8") /* ty=Tensor[(6, 21), int8] */;
  %438 = multiply(%436, %437) /* ty=Tensor[(6, 21), int8] */;
  %439 = cast(%var_6730, dtype="float64") /* ty=Tensor[(6, 21), float64] */;
  %440 = shape_of(%438, dtype="int32") /* ty=Tensor[(2), int32] */;
  %441 = cast(%438, dtype="float64") /* ty=Tensor[(6, 21), float64] */;
  %442 = dyn.reshape(%439, %440, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %443 = @func_6568() /* ty=Tensor[(12, 2, 14), float32] */;
  %444 = minimum(%417, %418) /* ty=Tensor[(?, 8, 16), int8] */;
  %445 = %423.1;
  %446 = bitwise_and(%428, %429) /* ty=Tensor[(6, 21), uint8] */;
  %447 = %430.0;
  %448 = %431.0;
  %449 = @func_6065() /* ty=Tensor[(12, 2, 14), float32] */;
  %450 = @func_6253() /* ty=Tensor[(12, 2, 14), float32] */;
  %451 = maximum(%441, %442) /* ty=Tensor[(6, 21), float64] */;
  (%443, %408, %444, %445, -8.06185f /* ty=float32 */, %var_6677, %446, %447, %448, %449, %450, %451)
}

def @func_5109() -> (Tensor[(4, 21), bool], Tensor[(2, 360), float64]) {
  %452 = @func_4933() /* ty=(Tensor[(1, 21), float64],) */;
  %453 = %452.0;
  %454 = cast(%453, dtype="bool") /* ty=Tensor[(1, 21), bool] */;
  %455 = cast(meta[relay.Constant][23] /* ty=Tensor[(4, 21), float64] */, dtype="bool") /* ty=Tensor[(4, 21), bool] */;
  %456 = cast(%453, dtype="float64") /* ty=Tensor[(1, 21), float64] */;
  %457 = reshape(%456, newshape=[1, 7, 3]) /* ty=Tensor[(1, 7, 3), float64] */;
  %458 = @func_2092(%457) /* ty=(Tensor[(1, 7, 3), float64], Tensor[(1, 7, 3), float64], Tensor[(1, 8, 16), int8], Tensor[(2, 360), float64]) */;
  %459 = less(%454, %455) /* ty=Tensor[(4, 21), bool] */;
  %460 = %458.3;
  (%459, %460)
}

def @func_3929() -> Tensor[(12, 2, 14), float32] {
  @func_3835() /* ty=Tensor[(12, 2, 14), float32] */
}

def @func_4255(%var_4251: Tensor[(128), int8]) -> (Tensor[(1, 21), float64], Tensor[(64, 2), int8], Tensor[(128), int8]) {
  %461 = cast(%var_4251, dtype="int8") /* ty=Tensor[(128), int8] */;
  %462 = reshape(%461, newshape=[128]) /* ty=Tensor[(128), int8] */;
  %463 = @func_3733(%462) /* ty=(Tensor[(9, 11, 6), float32], Tensor[(64, 2), int8], Tensor[(2016), float64], Tensor[(128), int8]) */;
  %464 = @func_4156() /* ty=Tensor[(1, 21), float64] */;
  %465 = %463.1;
  (%464, %465, %var_4251)
}

def @func_11898() -> (Tensor[(4, 21), float32],) {
  %466 = @func_5398() /* ty=(Tensor[(4, 21), float32],) */;
  %467 = %466.0;
  (%467,)
}

def @func_2362(%var_2325: Tensor[(10, 15, 4), int64], %var_2326: Tensor[(10, 15, 4), int64], %var_2335: Tensor[(720), float64]) -> (Tensor[(10, 15, 4), int64], Tensor[(15, 16, 3), float64], Tensor[(720), float64]) {
  %468 = cast(%var_2326, dtype="int64") /* ty=Tensor[(10, 15, 4), int64] */;
  %469 = shape_of(%var_2325, dtype="int32") /* ty=Tensor[(3), int32] */;
  %470 = cast(%var_2325, dtype="int64") /* ty=Tensor[(10, 15, 4), int64] */;
  %471 = dyn.reshape(%468, %469, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %472 = cast(%var_2335, dtype="float64") /* ty=Tensor[(720), float64] */;
  %473 = reshape(%472, newshape=[15, 16, 3]) /* ty=Tensor[(15, 16, 3), float64] */;
  %474 = @func_1884(%473) /* ty=(Tensor[(15, 16, 3), float64], Tensor[(1, 8, 16), int8], Tensor[(128), int8]) */;
  %475 = multiply(%470, %471) /* ty=Tensor[(10, 15, 4), int64] */;
  %476 = %474.0;
  (%475, %476, %var_2335)
}

def @func_10125() -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(4, 21), bool]) {
  %477 = @func_9928() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %478 = @func_8806() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %479 = @func_5398() /* ty=(Tensor[(4, 21), float32],) */;
  %480 = %479.0;
  %481 = cast(%480, dtype="float64") /* ty=Tensor[(4, 21), float64] */;
  %482 = log(%481) /* ty=Tensor[(4, 21), float64] */;
  %483 = cast(%480, dtype="bool") /* ty=Tensor[(4, 21), bool] */;
  %484 = shape_of(%482, dtype="int32") /* ty=Tensor[(2), int32] */;
  %485 = cast(%482, dtype="bool") /* ty=Tensor[(4, 21), bool] */;
  %486 = dyn.reshape(%483, %484, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %487 = %477.0;
  %488 = %478.0;
  %489 = logical_and(%485, %486) /* ty=Tensor[(4, 21), bool] */;
  (%487, %488, %489)
}

def @func_4983() -> (Tensor[(1, 21), float64], Tensor[(1, 8, 16), int8], Tensor[(13), float32]) {
  %490 = cast(meta[relay.Constant][24] /* ty=Tensor[(13), float32] */, dtype="float32") /* ty=Tensor[(13), float32] */;
  %491 = reshape(%490, newshape=[1, 13, 1]) /* ty=Tensor[(1, 13, 1), float32] */;
  %492 = @func_2441(%491) /* ty=(Tensor[(1, 13, 1), float32], Tensor[(1, 8, 16), int8], Tensor[(1, 128), int8], Tensor[(2, 360), float64], Tensor[(1, 21), float64]) */;
  %493 = @func_4156() /* ty=Tensor[(1, 21), float64] */;
  %494 = %492.1;
  (%493, %494, meta[relay.Constant][24] /* ty=Tensor[(13), float32] */)
}

def @func_6453(%var_6431: Tensor[(1, 21), float64]) -> Tensor[(?, 21), bool] {
  %495 = @func_5732() /* ty=(Tensor[(1, 21), float64], Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64]) */;
  %496 = %495.2;
  %497 = cast(%var_6431, dtype="bool") /* ty=Tensor[(1, 21), bool] */;
  %498 = shape_of(%496, dtype="int32") /* ty=Tensor[(2), int32] */;
  %499 = cast(%496, dtype="bool") /* ty=Tensor[(1, 21), bool] */;
  %500 = dyn.reshape(%497, %498, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  greater_equal(%499, %500) /* ty=Tensor[(?, 21), bool] */
}

def @func_9928() -> (Tensor[(12, 2, 14), float32],) {
  %501 = @func_5077() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %502 = %501.0;
  (%502,)
}

def @func_8844() -> (Tensor[(12, 2, 14), float32],) {
  %503 = @func_5512() /* ty=Tensor[(12, 2, 14), float32] */;
  (%503,)
}

def @func_11744(%var_11680: Tensor[(600), int64]) -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(600), int64], Tensor[(600), int64], Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(12, 2, 14), float32]) {
  %504 = cast(%var_11680, dtype="int64") /* ty=Tensor[(600), int64] */;
  %505 = reshape(%504, newshape=[600]) /* ty=Tensor[(600), int64] */;
  %506 = @func_9352(%505) /* ty=(Tensor[(16, 8, 8), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(600), int64], Tensor[(12, 2, 14), float32]) */;
  %507 = @func_3987() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64]) */;
  %508 = @func_9045() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */;
  %509 = @func_6270() /* ty=Tensor[(12, 2, 14), float32] */;
  %510 = @func_8305() /* ty=Tensor[(12, 2, 14), float32] */;
  %511 = %506.3;
  %512 = @func_8585() /* ty=Tensor[(12, 2, 14), float32] */;
  %513 = %507.1;
  %514 = %508.1;
  (%509, %510, %511, %var_11680, %512, %513, %514)
}

def @func_6948(%var_6911: Tensor[(4, 21), float64], %var_6919: Tensor[(21), float64]) -> (Tensor[(12, 2, 14), float32], Tensor[(1, 8, 16), int8], Tensor[(13), float32], Tensor[(720), float64], Tensor[(21), float64], Tensor[(12, 2, 14), bool], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(4, 21), float64]) {
  %515 = @func_6065() /* ty=Tensor[(12, 2, 14), float32] */;
  %516 = @func_3917() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %517 = %516.0;
  %518 = cast(%517, dtype="float32") /* ty=Tensor[(12, 2, 14), float32] */;
  %519 = shape_of(%515, dtype="int32") /* ty=Tensor[(3), int32] */;
  %520 = cast(%515, dtype="float32") /* ty=Tensor[(12, 2, 14), float32] */;
  %521 = dyn.reshape(%518, %519, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %522 = cast(meta[relay.Constant][25] /* ty=Tensor[(13), float32] */, dtype="float32") /* ty=Tensor[(13), float32] */;
  %523 = reshape(%522, newshape=[1, 13, 1]) /* ty=Tensor[(1, 13, 1), float32] */;
  %524 = @func_2441(%523) /* ty=(Tensor[(1, 13, 1), float32], Tensor[(1, 8, 16), int8], Tensor[(1, 128), int8], Tensor[(2, 360), float64], Tensor[(1, 21), float64]) */;
  %525 = cast(%var_6919, dtype="float64") /* ty=Tensor[(21), float64] */;
  %526 = reshape(%525, newshape=[21]) /* ty=Tensor[(21), float64] */;
  %527 = @func_4558(%526) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(1), float64], Tensor[(60), float32], Tensor[(720), float64], Tensor[(720), float64], Tensor[(21), float64]) */;
  %528 = @func_5574() /* ty=(Tensor[(1, 21), float64], Tensor[(12, 2, 14), bool], Tensor[(12, 2, 14), float64]) */;
  %529 = @func_5398() /* ty=(Tensor[(4, 21), float32],) */;
  %530 = %529.0;
  %531 = cast(%530, dtype="float64") /* ty=Tensor[(4, 21), float64] */;
  %532 = asin(%531) /* ty=Tensor[(4, 21), float64] */;
  %533 = cast(%var_6911, dtype="bool") /* ty=Tensor[(4, 21), bool] */;
  %534 = shape_of(%532, dtype="int32") /* ty=Tensor[(2), int32] */;
  %535 = cast(%532, dtype="bool") /* ty=Tensor[(4, 21), bool] */;
  %536 = dyn.reshape(%533, %534, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %537 = logical_or(%535, %536) /* ty=Tensor[(4, 21), bool] */;
  %538 = cast(%537, dtype="float64") /* ty=Tensor[(4, 21), float64] */;
  %539 = shape_of(%532, dtype="int32") /* ty=Tensor[(2), int32] */;
  %540 = cast(%532, dtype="float64") /* ty=Tensor[(4, 21), float64] */;
  %541 = dyn.reshape(%538, %539, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %542 = floor_divide(%520, %521) /* ty=Tensor[(12, 2, 14), float32] */;
  %543 = %524.1;
  %544 = %527.5;
  %545 = %528.1;
  %546 = @func_4620() /* ty=Tensor[(12, 2, 14), float32] */;
  %547 = @func_6762() /* ty=Tensor[(12, 2, 14), float32] */;
  %548 = power(%540, %541) /* ty=Tensor[(4, 21), float64] */;
  (%542, %543, meta[relay.Constant][25] /* ty=Tensor[(13), float32] */, %544, %var_6919, %545, %546, %547, %548)
}

def @func_8135() -> (Tensor[(12, 2, 14), float32],) {
  %549 = @func_4620() /* ty=Tensor[(12, 2, 14), float32] */;
  (%549,)
}

def @func_10025() -> (Tensor[(12, 2, 14), float32],) {
  %550 = @func_6098() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %551 = %550.0;
  (%551,)
}

def @func_6510() -> (Tensor[(13), float32], Tensor[(13), float32], Tensor[(1, 21), float64]) {
  %552 = @func_4983() /* ty=(Tensor[(1, 21), float64], Tensor[(1, 8, 16), int8], Tensor[(13), float32]) */;
  %553 = @func_5350() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(13), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */;
  %554 = @func_5574() /* ty=(Tensor[(1, 21), float64], Tensor[(12, 2, 14), bool], Tensor[(12, 2, 14), float64]) */;
  %555 = %552.2;
  %556 = %553.1;
  %557 = %554.0;
  (%555, %556, %557)
}

def @func_5398() -> (Tensor[(4, 21), float32],) {
  %558 = @func_5109() /* ty=(Tensor[(4, 21), bool], Tensor[(2, 360), float64]) */;
  %559 = %558.0;
  %560 = cast(%559, dtype="float32") /* ty=Tensor[(4, 21), float32] */;
  %561 = log10(%560) /* ty=Tensor[(4, 21), float32] */;
  (%561,)
}

def @func_6568() -> Tensor[(12, 2, 14), float32] {
  @func_4620() /* ty=Tensor[(12, 2, 14), float32] */
}

def @func_6270() -> Tensor[(12, 2, 14), float32] {
  %562 = @func_5350() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(13), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */;
  %562.3
}

def @func_9212(%var_9206: Tensor[(2, 360), float64]) -> (Tensor[(2, 360), bool],) {
  %563 = @func_7015() /* ty=(Tensor[(2, 360), float64],) */;
  %564 = %563.0;
  %565 = cast(%var_9206, dtype="bool") /* ty=Tensor[(2, 360), bool] */;
  %566 = shape_of(%564, dtype="int32") /* ty=Tensor[(2), int32] */;
  %567 = cast(%564, dtype="bool") /* ty=Tensor[(2, 360), bool] */;
  %568 = dyn.reshape(%565, %566, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %569 = logical_or(%567, %568) /* ty=Tensor[(2, 360), bool] */;
  (%569,)
}

def @func_10672() -> (Tensor[(12, 2, 14), float32],) {
  %570 = @func_6291() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */;
  %571 = %570.0;
  (%571,)
}

def @func_11110(%var_11043: Tensor[(2, 180), float32], %var_11044: Tensor[(147), float64]) -> (Tensor[(12, 2, 14), float32], Tensor[(2, 180), float32], Tensor[(147), float64], Tensor[(12, 2, 14), bool], Tensor[(4, 21), float32], Tensor[(12, 2, 14), float32]) {
  %572 = @func_7077() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %573 = @func_5574() /* ty=(Tensor[(1, 21), float64], Tensor[(12, 2, 14), bool], Tensor[(12, 2, 14), float64]) */;
  %574 = cast(%var_11043, dtype="float32") /* ty=Tensor[(2, 180), float32] */;
  %575 = cast(%var_11044, dtype="float64") /* ty=Tensor[(147), float64] */;
  %576 = reshape(%574, newshape=[1, 360]) /* ty=Tensor[(1, 360), float32] */;
  %577 = reshape(%575, newshape=[7, 21]) /* ty=Tensor[(7, 21), float64] */;
  %578 = @func_7407(%576, %577) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(6, 15, 5), float64], Tensor[(1, 360), float32], Tensor[(364), float64], Tensor[(4, 21), bool], Tensor[(?, 8, 16), uint32], Tensor[(7, 21), float32], Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64]) */;
  %579 = %578.4;
  %580 = cast(%579, dtype="float64") /* ty=Tensor[(4, 21), float64] */;
  %581 = log2(%580) /* ty=Tensor[(4, 21), float64] */;
  %582 = cast(%581, dtype="float32") /* ty=Tensor[(4, 21), float32] */;
  %583 = @func_8806() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %584 = %572.0;
  %585 = %573.1;
  %586 = sqrt(%582) /* ty=Tensor[(4, 21), float32] */;
  %587 = %583.0;
  (%584, %var_11043, %var_11044, %585, %586, %587)
}

def @func_7002(%var_6994: Tensor[(12, 21), float64]) -> Tensor[(12, 21), uint64] {
  %588 = @func_4983() /* ty=(Tensor[(1, 21), float64], Tensor[(1, 8, 16), int8], Tensor[(13), float32]) */;
  %589 = %588.0;
  %590 = cast(%589, dtype="uint64") /* ty=Tensor[(1, 21), uint64] */;
  %591 = cast(%var_6994, dtype="uint64") /* ty=Tensor[(12, 21), uint64] */;
  minimum(%590, %591) /* ty=Tensor[(12, 21), uint64] */
}

def @func_5687(%var_5676: Tensor[(11, 15, 3), float64]) -> Tensor[(11, 15, 3), float64] {
  %592 = cast(%var_5676, dtype="float64") /* ty=Tensor[(11, 15, 3), float64] */;
  sqrt(%592) /* ty=Tensor[(11, 15, 3), float64] */
}

def @func_11835(%var_11802: Tensor[(720), float64], %var_11833: Tensor[(128), int8]) -> (Tensor[(12, 2, 14), float32], Tensor[(15, 16, 3), float64], Tensor[(720), float64], Tensor[(2, 300), float32], Tensor[(1, 21), float64], Tensor[(12, 2, 14), float32], Tensor[(2, 360), float64], Tensor[(2016), float64], Tensor[(128), int8]) {
  %593 = cast(meta[relay.Constant][26] /* ty=Tensor[(2, 300), int64] */, dtype="int64") /* ty=Tensor[(2, 300), int64] */;
  %594 = cast(meta[relay.Constant][26] /* ty=Tensor[(2, 300), int64] */, dtype="int64") /* ty=Tensor[(2, 300), int64] */;
  %595 = cast(%var_11802, dtype="float64") /* ty=Tensor[(720), float64] */;
  %596 = reshape(%593, newshape=[10, 15, 4]) /* ty=Tensor[(10, 15, 4), int64] */;
  %597 = reshape(%594, newshape=[10, 15, 4]) /* ty=Tensor[(10, 15, 4), int64] */;
  %598 = reshape(%595, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %599 = @func_2362(%596, %597, %598) /* ty=(Tensor[(10, 15, 4), int64], Tensor[(15, 16, 3), float64], Tensor[(720), float64]) */;
  %600 = cast(meta[relay.Constant][26] /* ty=Tensor[(2, 300), int64] */, dtype="float32") /* ty=Tensor[(2, 300), float32] */;
  %601 = @func_10835() /* ty=(Tensor[(1, 21), float64],) */;
  %602 = @func_10325() /* ty=(Tensor[(2, 360), float64],) */;
  %603 = cast(%var_11833, dtype="int8") /* ty=Tensor[(128), int8] */;
  %604 = reshape(%603, newshape=[128]) /* ty=Tensor[(128), int8] */;
  %605 = @func_4386(%604) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(16, 14, 9), uint8], Tensor[(2016), float64], Tensor[(128), int8]) */;
  %606 = @func_10576() /* ty=Tensor[(12, 2, 14), float32] */;
  %607 = %599.1;
  %608 = cos(%600) /* ty=Tensor[(2, 300), float32] */;
  %609 = %601.0;
  %610 = @func_11491() /* ty=Tensor[(12, 2, 14), float32] */;
  %611 = %602.0;
  %612 = %605.2;
  (%606, %607, %var_11802, %608, %609, %610, %611, %612, %var_11833)
}

def @func_6337(%var_6321: Tensor[(128), int8]) -> (Tensor[(1, 8, 16), int8], Tensor[(128), int8], Tensor[(12, 2, 14), float32]) {
  %613 = cast(%var_6321, dtype="int8") /* ty=Tensor[(128), int8] */;
  %614 = reshape(%613, newshape=[1, 8, 16]) /* ty=Tensor[(1, 8, 16), int8] */;
  %615 = @func_40(%614) /* ty=(Tensor[(1, 8, 16), int8],) */;
  %616 = @func_3864() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %617 = %616.0;
  %618 = @func_5077() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %619 = %618.0;
  %620 = cast(%619, dtype="float32") /* ty=Tensor[(12, 2, 14), float32] */;
  %621 = shape_of(%617, dtype="int32") /* ty=Tensor[(3), int32] */;
  %622 = cast(%617, dtype="float32") /* ty=Tensor[(12, 2, 14), float32] */;
  %623 = dyn.reshape(%620, %621, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %624 = %615.0;
  %625 = divide(%622, %623) /* ty=Tensor[(12, 2, 14), float32] */;
  (%624, %var_6321, %625)
}

def @func_8432() -> (Tensor[(12, 2, 14), float32],) {
  %626 = @func_3835() /* ty=Tensor[(12, 2, 14), float32] */;
  (%626,)
}

def @func_4842(%var_4822: Tensor[(2, 360), float64]) -> (Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64], Tensor[(15, 16, 3), float64], Tensor[(2, 360), float64], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) {
  %627 = @func_3937() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %628 = @func_3987() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64]) */;
  %629 = cast(%var_4822, dtype="float64") /* ty=Tensor[(2, 360), float64] */;
  %630 = reshape(%629, newshape=[15, 16, 3]) /* ty=Tensor[(15, 16, 3), float64] */;
  %631 = @func_1884(%630) /* ty=(Tensor[(15, 16, 3), float64], Tensor[(1, 8, 16), int8], Tensor[(128), int8]) */;
  %632 = @func_3903() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %633 = @func_4337() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64]) */;
  %634 = %633.0;
  %635 = cast(%634, dtype="float32") /* ty=Tensor[(12, 2, 14), float32] */;
  %636 = %627.0;
  %637 = %628.2;
  %638 = %631.0;
  %639 = %632.0;
  %640 = cos(%635) /* ty=Tensor[(12, 2, 14), float32] */;
  %641 = @func_4071() /* ty=Tensor[(12, 2, 14), float32] */;
  (%636, %637, %638, %var_4822, %639, %640, %641)
}

def @func_6195(%var_6170: Tensor[(9, 13, 6), float64], %var_6186: Tensor[(2016), float64], %var_6191: Tensor[(9, 13, 6), float64]) -> (Tensor[(16, 14, 9), uint8], Tensor[(2016), float64], Tensor[(128), int8], Tensor[(9, 13, 6), bool]) {
  %642 = cast(%var_6186, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %643 = cast(meta[relay.Constant][27] /* ty=Tensor[(128), int8] */, dtype="int8") /* ty=Tensor[(128), int8] */;
  %644 = reshape(%642, newshape=[16, 14, 9]) /* ty=Tensor[(16, 14, 9), float64] */;
  %645 = reshape(%643, newshape=[64, 2]) /* ty=Tensor[(64, 2), int8] */;
  %646 = @func_854(%644, %645) /* ty=(Tensor[(1, 8, 16), int8], Tensor[(64, 2), int8], Tensor[(16, 14, 9), uint8]) */;
  %647 = cast(%var_6170, dtype="float64") /* ty=Tensor[(9, 13, 6), float64] */;
  %648 = sigmoid(%647) /* ty=Tensor[(9, 13, 6), float64] */;
  %649 = cast(%648, dtype="float64") /* ty=Tensor[(9, 13, 6), float64] */;
  %650 = acosh(%649) /* ty=Tensor[(9, 13, 6), float64] */;
  %651 = cast(%var_6191, dtype="bool") /* ty=Tensor[(9, 13, 6), bool] */;
  %652 = shape_of(%650, dtype="int32") /* ty=Tensor[(3), int32] */;
  %653 = cast(%650, dtype="bool") /* ty=Tensor[(9, 13, 6), bool] */;
  %654 = dyn.reshape(%651, %652, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %655 = %646.2;
  %656 = equal(%653, %654) /* ty=Tensor[(9, 13, 6), bool] */;
  (%655, %var_6186, meta[relay.Constant][27] /* ty=Tensor[(128), int8] */, %656)
}

def @func_6389() -> (Tensor[(12, 2, 14), float32],) {
  %657 = @func_5512() /* ty=Tensor[(12, 2, 14), float32] */;
  %658 = cast(%657, dtype="float32") /* ty=Tensor[(12, 2, 14), float32] */;
  %659 = sigmoid(%658) /* ty=Tensor[(12, 2, 14), float32] */;
  (%659,)
}

def @func_5943(%var_5936: Tensor[(12, 2, 14), float32]) -> Tensor[(12, 2, 14), float64] {
  %660 = @func_4601() /* ty=Tensor[(12, 2, 14), float32] */;
  %661 = cast(%var_5936, dtype="float64") /* ty=Tensor[(12, 2, 14), float64] */;
  %662 = shape_of(%660, dtype="int32") /* ty=Tensor[(3), int32] */;
  %663 = cast(%660, dtype="float64") /* ty=Tensor[(12, 2, 14), float64] */;
  %664 = dyn.reshape(%661, %662, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%663, %664) /* ty=Tensor[(12, 2, 14), float64] */
}

def @func_7015() -> (Tensor[(2, 360), float64],) {
  %665 = @func_5109() /* ty=(Tensor[(4, 21), bool], Tensor[(2, 360), float64]) */;
  %666 = %665.1;
  %667 = cast(%666, dtype="float64") /* ty=Tensor[(2, 360), float64] */;
  %668 = erf(%667) /* ty=Tensor[(2, 360), float64] */;
  (%668,)
}

def @func_7200(%var_7185: Tensor[(12, 2, 14), float32]) -> (Tensor[(12, 2, 14), float64],) {
  %669 = @func_3864() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %670 = %669.0;
  %671 = cast(%var_7185, dtype="bool") /* ty=Tensor[(12, 2, 14), bool] */;
  %672 = shape_of(%670, dtype="int32") /* ty=Tensor[(3), int32] */;
  %673 = cast(%670, dtype="bool") /* ty=Tensor[(12, 2, 14), bool] */;
  %674 = dyn.reshape(%671, %672, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %675 = not_equal(%673, %674) /* ty=Tensor[(12, 2, 14), bool] */;
  %676 = cast(%675, dtype="float64") /* ty=Tensor[(12, 2, 14), float64] */;
  %677 = sinh(%676) /* ty=Tensor[(12, 2, 14), float64] */;
  (%677,)
}

def @func_7742() -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) {
  %678 = @func_6291() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */;
  %679 = @func_6270() /* ty=Tensor[(12, 2, 14), float32] */;
  %680 = %678.0;
  (%679, %680)
}

def @main() -> (Tensor[(?, 21), float64],) {
  %681 = @func_4156() /* ty=Tensor[(1, 21), float64] */;
  %682 = cast(%681, dtype="float64") /* ty=Tensor[(1, 21), float64] */;
  %683 = asinh(%682) /* ty=Tensor[(1, 21), float64] */;
  %684 = cast(%683, dtype="int8") /* ty=Tensor[(1, 21), int8] */;
  %685 = shape_of(%681, dtype="int32") /* ty=Tensor[(2), int32] */;
  %686 = cast(%681, dtype="int8") /* ty=Tensor[(1, 21), int8] */;
  %687 = dyn.reshape(%684, %685, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %688 = logical_xor(%686, %687) /* ty=Tensor[(?, 21), int8] */;
  %689 = cast(%681, dtype="float64") /* ty=Tensor[(1, 21), float64] */;
  %690 = shape_of(%688, dtype="int32") /* ty=Tensor[(2), int32] */;
  %691 = cast(%688, dtype="float64") /* ty=Tensor[(?, 21), float64] */;
  %692 = dyn.reshape(%689, %690, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %693 = floor_divide(%691, %692) /* ty=Tensor[(?, 21), float64] */;
  (%693,)
}

def @func_8739() -> (Tensor[(12, 2, 14), float32], Tensor[(60), float32], Tensor[(21), float64], Tensor[(1, 8, 16), int8], Tensor[(12, 2, 14), float32], Tensor[(126), float64]) {
  %694 = cast(meta[relay.Constant][28] /* ty=Tensor[(21), float64] */, dtype="float64") /* ty=Tensor[(21), float64] */;
  %695 = reshape(%694, newshape=[21]) /* ty=Tensor[(21), float64] */;
  %696 = @func_4558(%695) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(1), float64], Tensor[(60), float32], Tensor[(720), float64], Tensor[(720), float64], Tensor[(21), float64]) */;
  %697 = @func_4983() /* ty=(Tensor[(1, 21), float64], Tensor[(1, 8, 16), int8], Tensor[(13), float32]) */;
  %698 = %696.3;
  %699 = cast(%698, dtype="float32") /* ty=Tensor[(60), float32] */;
  %700 = cast(meta[relay.Constant][29] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %701 = cast(meta[relay.Constant][29] /* ty=Tensor[(126), float64] */, dtype="int8") /* ty=Tensor[(126), int8] */;
  %702 = reshape(%699, newshape=[15, 4]) /* ty=Tensor[(15, 4), float32] */;
  %703 = reshape(%700, newshape=[6, 21]) /* ty=Tensor[(6, 21), float64] */;
  %704 = reshape(%701, newshape=[6, 21]) /* ty=Tensor[(6, 21), int8] */;
  %705 = @func_6737(%702, %703, %704) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(2016), float64], Tensor[(?, 8, 16), int8], Tensor[(1, 7, 3), float64], float32, Tensor[(15, 4), float32], Tensor[(6, 21), uint8], Tensor[(4, 21), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(6, 21), float64]) */;
  %706 = @func_6762() /* ty=Tensor[(12, 2, 14), float32] */;
  %707 = %697.1;
  %708 = %705.8;
  (%706, %698, meta[relay.Constant][28] /* ty=Tensor[(21), float64] */, %707, %708, meta[relay.Constant][29] /* ty=Tensor[(126), float64] */)
}

def @func_9396() -> (Tensor[(12, 2, 14), float32],) {
  %709 = @func_6270() /* ty=Tensor[(12, 2, 14), float32] */;
  %710 = cast(%709, dtype="float32") /* ty=Tensor[(12, 2, 14), float32] */;
  %711 = exp(%710) /* ty=Tensor[(12, 2, 14), float32] */;
  (%711,)
}

def @func_12244() -> (Tensor[(60), float32], Tensor[(21), bool], Tensor[(21, ?), float64]) {
  %712 = @func_11624() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 720), float64], Tensor[(21), float64], Tensor[(12, 2, 14), float32]) */;
  %713 = %712.2;
  %714 = cast(%713, dtype="float64") /* ty=Tensor[(21), float64] */;
  %715 = reshape(%714, newshape=[21]) /* ty=Tensor[(21), float64] */;
  %716 = @func_4558(%715) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(1), float64], Tensor[(60), float32], Tensor[(720), float64], Tensor[(720), float64], Tensor[(21), float64]) */;
  %717 = cast(%713, dtype="float64") /* ty=Tensor[(21), float64] */;
  %718 = cos(%717) /* ty=Tensor[(21), float64] */;
  %719 = cast(meta[relay.Constant][30] /* ty=Tensor[(21), float64] */, dtype="bool") /* ty=Tensor[(21), bool] */;
  %720 = shape_of(%718, dtype="int32") /* ty=Tensor[(1), int32] */;
  %721 = cast(%718, dtype="bool") /* ty=Tensor[(21), bool] */;
  %722 = dyn.reshape(%719, %720, newshape=[]) /* ty=Tensor[(?), bool] */;
  %723 = @func_12136() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), bool], Tensor[(21, ?), float64]) */;
  %724 = %716.3;
  %725 = greater_equal(%721, %722) /* ty=Tensor[(21), bool] */;
  %726 = %723.2;
  (%724, %725, %726)
}

def @func_6822() -> (Tensor[(1, 21), float64],) {
  %727 = @func_3987() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64]) */;
  %728 = %727.2;
  (%728,)
}

def @func_4337() -> (Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64]) {
  %729 = @func_3937() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %730 = %729.0;
  %731 = @func_4156() /* ty=Tensor[(1, 21), float64] */;
  (%730, %731)
}

def @func_4933() -> (Tensor[(1, 21), float64],) {
  %732 = @func_3987() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64]) */;
  %733 = %732.2;
  (%733,)
}

def @func_5732() -> (Tensor[(1, 21), float64], Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64]) {
  %734 = @func_4933() /* ty=(Tensor[(1, 21), float64],) */;
  %735 = @func_4933() /* ty=(Tensor[(1, 21), float64],) */;
  %736 = %734.0;
  %737 = @func_3929() /* ty=Tensor[(12, 2, 14), float32] */;
  %738 = %735.0;
  (%736, %737, %738)
}

def @func_7270() -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) {
  %739 = @func_3937() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %740 = @func_6568() /* ty=Tensor[(12, 2, 14), float32] */;
  %741 = %739.0;
  (%740, %741)
}

def @func_8930(%var_8918: Tensor[(450), float64]) -> (Tensor[(12, 2, 14), float32], Tensor[(6, 15, 5), float64], Tensor[(450), float64], Tensor[(12, 2, 14), float32]) {
  %742 = @func_8135() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %743 = cast(%var_8918, dtype="float64") /* ty=Tensor[(450), float64] */;
  %744 = cast(%var_8918, dtype="float64") /* ty=Tensor[(450), float64] */;
  %745 = reshape(%743, newshape=[6, 15, 5]) /* ty=Tensor[(6, 15, 5), float64] */;
  %746 = reshape(%744, newshape=[6, 15, 5]) /* ty=Tensor[(6, 15, 5), float64] */;
  %747 = @func_6235() /* ty=(Tensor[(1, 7, 3), float64], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), bool]) */;
  %748 = %742.0;
  %749 = @func_2256(%745, %746) /* ty=Tensor[(6, 15, 5), float64] */;
  %750 = %747.1;
  (%748, %749, %var_8918, %750)
}

def @func_2092(%var_2046: Tensor[(1, 7, 3), float64]) -> (Tensor[(1, 7, 3), float64], Tensor[(1, 7, 3), float64], Tensor[(1, 8, 16), int8], Tensor[(2, 360), float64]) {
  %751 = cast(%var_2046, dtype="float64") /* ty=Tensor[(1, 7, 3), float64] */;
  %752 = cast(%var_2046, dtype="float64") /* ty=Tensor[(1, 7, 3), float64] */;
  %753 = cast(meta[relay.Constant][31] /* ty=Tensor[(2, 360), float64] */, dtype="float64") /* ty=Tensor[(2, 360), float64] */;
  %754 = reshape(%753, newshape=[15, 16, 3]) /* ty=Tensor[(15, 16, 3), float64] */;
  %755 = @func_1884(%754) /* ty=(Tensor[(15, 16, 3), float64], Tensor[(1, 8, 16), int8], Tensor[(128), int8]) */;
  %756 = acos(%751) /* ty=Tensor[(1, 7, 3), float64] */;
  %757 = asin(%752) /* ty=Tensor[(1, 7, 3), float64] */;
  %758 = %755.1;
  (%756, %757, %758, meta[relay.Constant][31] /* ty=Tensor[(2, 360), float64] */)
}

def @func_10576() -> Tensor[(12, 2, 14), float32] {
  %759 = @func_8806() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %759.0
}

def @func_6253() -> Tensor[(12, 2, 14), float32] {
  @func_6065() /* ty=Tensor[(12, 2, 14), float32] */
}

def @func_9266() -> (Tensor[(12, 2, 14), float32], Tensor[(2, 21), float64]) {
  %760 = @func_8087() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(2, 21), float64]) */;
  %761 = %760.1;
  %762 = cast(%761, dtype="float64") /* ty=Tensor[(2, 21), float64] */;
  %763 = @func_6270() /* ty=Tensor[(12, 2, 14), float32] */;
  %764 = asinh(%762) /* ty=Tensor[(2, 21), float64] */;
  (%763, %764)
}

def @func_8320() -> (Tensor[(12, 2, 14), bool],) {
  %765 = @func_6235() /* ty=(Tensor[(1, 7, 3), float64], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), bool]) */;
  %766 = %765.2;
  (%766,)
}

def @func_10198() -> (Tensor[(12, 2, 14), float32],) {
  %767 = @func_6162() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %768 = %767.0;
  (%768,)
}

def @func_11862() -> (Tensor[(12, 2, 14), float32], Tensor[(13), float32]) {
  %769 = @func_11195() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %770 = @func_7853() /* ty=(Tensor[(13), float32], Tensor[(1, 21), float64]) */;
  %771 = %769.0;
  %772 = %770.0;
  (%771, %772)
}

def @func_11449() -> (Tensor[(2, 360), float64], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) {
  %773 = @func_5109() /* ty=(Tensor[(4, 21), bool], Tensor[(2, 360), float64]) */;
  %774 = @func_9045() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */;
  %775 = @func_3937() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %776 = %773.1;
  %777 = %774.0;
  %778 = %775.0;
  (%776, %777, %778)
}

def @func_854(%var_813: Tensor[(16, 14, 9), float64], %var_833: Tensor[(64, 2), int8]) -> (Tensor[(1, 8, 16), int8], Tensor[(64, 2), int8], Tensor[(16, 14, 9), uint8]) {
  %779 = cast(%var_833, dtype="int8") /* ty=Tensor[(64, 2), int8] */;
  %780 = reshape(%779, newshape=[1, 8, 16]) /* ty=Tensor[(1, 8, 16), int8] */;
  %781 = @func_40(%780) /* ty=(Tensor[(1, 8, 16), int8],) */;
  %782 = cast(%var_813, dtype="float64") /* ty=Tensor[(16, 14, 9), float64] */;
  %783 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(16, 14, 9), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %784 = cast(meta[relay.Constant][32] /* ty=Tensor[(16, 14, 9), float64] */, dtype="float64") /* ty=Tensor[(16, 14, 9), float64] */;
  %785 = dyn.reshape(%782, %783, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %786 = divide(%784, %785) /* ty=Tensor[(16, 14, 9), float64] */;
  %787 = cast(%786, dtype="float64") /* ty=Tensor[(16, 14, 9), float64] */;
  %788 = log10(%787) /* ty=Tensor[(16, 14, 9), float64] */;
  %789 = cast(%786, dtype="uint8") /* ty=Tensor[(16, 14, 9), uint8] */;
  %790 = shape_of(%788, dtype="int32") /* ty=Tensor[(3), int32] */;
  %791 = cast(%788, dtype="uint8") /* ty=Tensor[(16, 14, 9), uint8] */;
  %792 = dyn.reshape(%789, %790, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %793 = %781.0;
  %794 = multiply(%791, %792) /* ty=Tensor[(16, 14, 9), uint8] */;
  (%793, %var_833, %794)
}

def @func_3835() -> Tensor[(12, 2, 14), float32] {
  %795 = cast(meta[relay.Constant][33] /* ty=Tensor[(12, 2, 14), float32] */, dtype="float32") /* ty=Tensor[(12, 2, 14), float32] */;
  tan(%795) /* ty=Tensor[(12, 2, 14), float32] */
}

def @func_10444() -> (Tensor[(1, 21), float64],) {
  %796 = @func_6376() /* ty=Tensor[(1, 21), float64] */;
  (%796,)
}

def @func_2256(%var_2249: Tensor[(6, 15, 5), float64], %var_2250: Tensor[(6, 15, 5), float64]) -> Tensor[(6, 15, 5), float64] {
  %797 = cast(%var_2250, dtype="float64") /* ty=Tensor[(6, 15, 5), float64] */;
  %798 = shape_of(%var_2249, dtype="int32") /* ty=Tensor[(3), int32] */;
  %799 = cast(%var_2249, dtype="float64") /* ty=Tensor[(6, 15, 5), float64] */;
  %800 = dyn.reshape(%797, %798, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%799, %800) /* ty=Tensor[(6, 15, 5), float64] */
}

def @func_8305() -> Tensor[(12, 2, 14), float32] {
  @func_6568() /* ty=Tensor[(12, 2, 14), float32] */
}

def @func_2441(%var_2401: Tensor[(1, 13, 1), float32]) -> (Tensor[(1, 13, 1), float32], Tensor[(1, 8, 16), int8], Tensor[(1, 128), int8], Tensor[(2, 360), float64], Tensor[(1, 21), float64]) {
  %801 = cast(%var_2401, dtype="float32") /* ty=Tensor[(1, 13, 1), float32] */;
  %802 = cast(meta[relay.Constant][34] /* ty=Tensor[(1, 128), int8] */, dtype="int8") /* ty=Tensor[(1, 128), int8] */;
  %803 = reshape(%802, newshape=[1, 8, 16]) /* ty=Tensor[(1, 8, 16), int8] */;
  %804 = @func_40(%803) /* ty=(Tensor[(1, 8, 16), int8],) */;
  %805 = cast(meta[relay.Constant][35] /* ty=Tensor[(1, 21), float64] */, dtype="float64") /* ty=Tensor[(1, 21), float64] */;
  %806 = reshape(%805, newshape=[1, 7, 3]) /* ty=Tensor[(1, 7, 3), float64] */;
  %807 = @func_2092(%806) /* ty=(Tensor[(1, 7, 3), float64], Tensor[(1, 7, 3), float64], Tensor[(1, 8, 16), int8], Tensor[(2, 360), float64]) */;
  %808 = asin(%801) /* ty=Tensor[(1, 13, 1), float32] */;
  %809 = %804.0;
  %810 = %807.3;
  (%808, %809, meta[relay.Constant][34] /* ty=Tensor[(1, 128), int8] */, %810, meta[relay.Constant][35] /* ty=Tensor[(1, 21), float64] */)
}

def @func_8218() -> Tensor[(12, 2, 14), float32] {
  %811 = @func_6162() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %811.0
}

def @func_4104() -> (Tensor[(12, 2, 14), float32],) {
  %812 = @func_4071() /* ty=Tensor[(12, 2, 14), float32] */;
  %813 = cast(%812, dtype="float32") /* ty=Tensor[(12, 2, 14), float32] */;
  %814 = cosh(%813) /* ty=Tensor[(12, 2, 14), float32] */;
  (%814,)
}

def @func_8806() -> (Tensor[(12, 2, 14), float32],) {
  %815 = @func_4104() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %816 = %815.0;
  (%816,)
}

def @func_12386() -> Tensor[(12, 2, 14), float32] {
  %817 = @func_8432() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %817.0
}

def @func_8087() -> (Tensor[(12, 2, 14), float32], Tensor[(2, 21), float64]) {
  %818 = @func_5732() /* ty=(Tensor[(1, 21), float64], Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64]) */;
  %819 = %818.2;
  %820 = cast(%819, dtype="float32") /* ty=Tensor[(1, 21), float32] */;
  %821 = log2(%820) /* ty=Tensor[(1, 21), float32] */;
  %822 = cast(%821, dtype="float64") /* ty=Tensor[(1, 21), float64] */;
  %823 = cast(meta[relay.Constant][36] /* ty=Tensor[(2, 21), float32] */, dtype="float64") /* ty=Tensor[(2, 21), float64] */;
  %824 = @func_6568() /* ty=Tensor[(12, 2, 14), float32] */;
  %825 = divide(%822, %823) /* ty=Tensor[(2, 21), float64] */;
  (%824, %825)
}

def @func_12136() -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), bool], Tensor[(21, ?), float64]) {
  %826 = @func_11195() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %827 = @func_7992() /* ty=(Tensor[(12, 2, 14), bool], Tensor[(2, 360), float64]) */;
  %828 = cast(meta[relay.Constant][37] /* ty=Tensor[(21, 1), float64] */, dtype="float64") /* ty=Tensor[(21, 1), float64] */;
  %829 = reshape(%828, newshape=[1, 21]) /* ty=Tensor[(1, 21), float64] */;
  %830 = @func_6453(%829) /* ty=Tensor[(?, 21), bool] */;
  %831 = cast(%830, dtype="float64") /* ty=Tensor[(?, 21), float64] */;
  %832 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(21, 1), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %833 = cast(meta[relay.Constant][37] /* ty=Tensor[(21, 1), float64] */, dtype="float64") /* ty=Tensor[(21, 1), float64] */;
  %834 = dyn.reshape(%831, %832, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %835 = %826.0;
  %836 = %827.0;
  %837 = mod(%833, %834) /* ty=Tensor[(21, ?), float64] */;
  (%835, %836, %837)
}

def @func_6065() -> Tensor[(12, 2, 14), float32] {
  @func_4620() /* ty=Tensor[(12, 2, 14), float32] */
}

def @func_4620() -> Tensor[(12, 2, 14), float32] {
  @func_4601() /* ty=Tensor[(12, 2, 14), float32] */
}

def @func_12021(%var_12013: Tensor[(9, 1, 12), float32]) -> Tensor[(9, 1, 12), float32] {
  %838 = cast(%var_12013, dtype="float32") /* ty=Tensor[(9, 1, 12), float32] */;
  tan(%838) /* ty=Tensor[(9, 1, 12), float32] */
}

def @func_4601() -> Tensor[(12, 2, 14), float32] {
  @func_4071() /* ty=Tensor[(12, 2, 14), float32] */
}

def @func_3733(%var_3729: Tensor[(128), int8]) -> (Tensor[(9, 11, 6), float32], Tensor[(64, 2), int8], Tensor[(2016), float64], Tensor[(128), int8]) {
  %839 = cast(meta[relay.Constant][38] /* ty=Tensor[(9, 11, 6), float32] */, dtype="float32") /* ty=Tensor[(9, 11, 6), float32] */;
  %840 = cast(meta[relay.Constant][39] /* ty=Tensor[(2016), float64] */, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %841 = cast(%var_3729, dtype="int8") /* ty=Tensor[(128), int8] */;
  %842 = reshape(%840, newshape=[16, 14, 9]) /* ty=Tensor[(16, 14, 9), float64] */;
  %843 = reshape(%841, newshape=[64, 2]) /* ty=Tensor[(64, 2), int8] */;
  %844 = @func_854(%842, %843) /* ty=(Tensor[(1, 8, 16), int8], Tensor[(64, 2), int8], Tensor[(16, 14, 9), uint8]) */;
  %845 = atanh(%839) /* ty=Tensor[(9, 11, 6), float32] */;
  %846 = %844.1;
  (%845, %846, meta[relay.Constant][39] /* ty=Tensor[(2016), float64] */, %var_3729)
}

def @func_12373() -> Tensor[(13), float32] {
  @func_11980() /* ty=Tensor[(13), float32] */
}

def @func_3903() -> (Tensor[(12, 2, 14), float32],) {
  %847 = @func_3864() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %848 = %847.0;
  (%848,)
}

def @func_10871() -> (Tensor[(13), float32], Tensor[(12, 2, 14), float32]) {
  %849 = @func_6510() /* ty=(Tensor[(13), float32], Tensor[(13), float32], Tensor[(1, 21), float64]) */;
  %850 = @func_3987() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64]) */;
  %851 = %849.1;
  %852 = %850.0;
  (%851, %852)
}

def @func_5574() -> (Tensor[(1, 21), float64], Tensor[(12, 2, 14), bool], Tensor[(12, 2, 14), float64]) {
  %853 = @func_4933() /* ty=(Tensor[(1, 21), float64],) */;
  %854 = @func_3903() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %855 = %854.0;
  %856 = cast(%855, dtype="float32") /* ty=Tensor[(12, 2, 14), float32] */;
  %857 = reshape(%856, newshape=[12, 2, 14]) /* ty=Tensor[(12, 2, 14), float32] */;
  %858 = @func_5261(%857) /* ty=Tensor[(12, 2, 14), float64] */;
  %859 = cast(%855, dtype="bool") /* ty=Tensor[(12, 2, 14), bool] */;
  %860 = shape_of(%858, dtype="int32") /* ty=Tensor[(3), int32] */;
  %861 = cast(%858, dtype="bool") /* ty=Tensor[(12, 2, 14), bool] */;
  %862 = dyn.reshape(%859, %860, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %863 = cast(%858, dtype="float64") /* ty=Tensor[(12, 2, 14), float64] */;
  %864 = %853.0;
  %865 = logical_and(%861, %862) /* ty=Tensor[(12, 2, 14), bool] */;
  %866 = asin(%863) /* ty=Tensor[(12, 2, 14), float64] */;
  (%864, %865, %866)
}

def @func_8369(%var_8363: float32) -> (Tensor[(12, 2, 14), bool], Tensor[(12, 2, 14), float64], Tensor[(?, 6, 10), bool], float32, Tensor[(60), float32]) {
  %867 = @func_7992() /* ty=(Tensor[(12, 2, 14), bool], Tensor[(2, 360), float64]) */;
  %868 = @func_5611() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %869 = %868.0;
  %870 = cast(%869, dtype="float64") /* ty=Tensor[(12, 2, 14), float64] */;
  %871 = cast(%var_8363, dtype="float32") /* ty=float32 */;
  %872 = cast(meta[relay.Constant][40] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %873 = reshape(%871, newshape=[]) /* ty=float32 */;
  %874 = reshape(%872, newshape=[1, 6, 10]) /* ty=Tensor[(1, 6, 10), float32] */;
  %875 = @func_3595(%873, %874) /* ty=(Tensor[(1, 6, 10), bool], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64], Tensor[(?, 6, 10), bool]) */;
  %876 = %867.0;
  %877 = acosh(%870) /* ty=Tensor[(12, 2, 14), float64] */;
  %878 = %875.3;
  (%876, %877, %878, %var_8363, meta[relay.Constant][40] /* ty=Tensor[(60), float32] */)
}

def @func_10530(%var_10516: Tensor[(720), float64]) -> (Tensor[(7, 13, 4), float64], Tensor[(1, 21), float64], Tensor[(720), float64]) {
  %879 = @func_9531() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(7, 13, 4), float64], Tensor[(364), float64]) */;
  %880 = cast(%var_10516, dtype="float64") /* ty=Tensor[(720), float64] */;
  %881 = reshape(%880, newshape=[2, 360]) /* ty=Tensor[(2, 360), float64] */;
  %882 = @func_4842(%881) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64], Tensor[(15, 16, 3), float64], Tensor[(2, 360), float64], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */;
  %883 = %879.1;
  %884 = %882.1;
  (%883, %884, %var_10516)
}

def @func_9637() -> Tensor[(12, 2, 14), float32] {
  %885 = @func_3937() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %885.0
}

def @func_11511() -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) {
  %886 = @func_8087() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(2, 21), float64]) */;
  %887 = %886.0;
  %888 = @func_3929() /* ty=Tensor[(12, 2, 14), float32] */;
  (%887, %888)
}

def @func_10598() -> (Tensor[(7, 13, 4), float64],) {
  %889 = @func_9531() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(7, 13, 4), float64], Tensor[(364), float64]) */;
  %890 = %889.1;
  (%890,)
}

def @func_9799() -> Tensor[(16, 8, 8), float32] {
  @func_8661() /* ty=Tensor[(16, 8, 8), float32] */
}

def @func_8661() -> Tensor[(16, 8, 8), float32] {
  %891 = cast(meta[relay.Constant][41] /* ty=Tensor[(16, 8, 8), float32] */, dtype="float32") /* ty=Tensor[(16, 8, 8), float32] */;
  log(%891) /* ty=Tensor[(16, 8, 8), float32] */
}

def @func_6291() -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) {
  %892 = @func_4104() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %893 = @func_5732() /* ty=(Tensor[(1, 21), float64], Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64]) */;
  %894 = %892.0;
  %895 = %893.1;
  (%894, %895)
}

def @func_10815() -> (Tensor[(12, 2, 14), float32],) {
  %896 = @func_6389() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %897 = %896.0;
  (%897,)
}

def @func_4039(%var_4001: Tensor[(720), float64], %var_4004: Tensor[(1, 7, 3), float64]) -> (Tensor[(15, 16, 3), float64], Tensor[(720), float64], Tensor[(?, 7, 3), bool], Tensor[(10, 15, 4), int64], Tensor[(1056), float32], Tensor[(1, 600), int64]) {
  %898 = cast(%var_4001, dtype="float64") /* ty=Tensor[(720), float64] */;
  %899 = reshape(%898, newshape=[15, 16, 3]) /* ty=Tensor[(15, 16, 3), float64] */;
  %900 = @func_1884(%899) /* ty=(Tensor[(15, 16, 3), float64], Tensor[(1, 8, 16), int8], Tensor[(128), int8]) */;
  %901 = @func_3987() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64]) */;
  %902 = %901.1;
  %903 = cast(%var_4004, dtype="bool") /* ty=Tensor[(1, 7, 3), bool] */;
  %904 = shape_of(%902, dtype="int32") /* ty=Tensor[(3), int32] */;
  %905 = cast(%902, dtype="bool") /* ty=Tensor[(1, 7, 3), bool] */;
  %906 = dyn.reshape(%903, %904, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %907 = cast(meta[relay.Constant][42] /* ty=Tensor[(1056), float32] */, dtype="float32") /* ty=Tensor[(1056), float32] */;
  %908 = cast(meta[relay.Constant][43] /* ty=Tensor[(1, 600), int64] */, dtype="int64") /* ty=Tensor[(1, 600), int64] */;
  %909 = reshape(%907, newshape=[16, 11, 6]) /* ty=Tensor[(16, 11, 6), float32] */;
  %910 = reshape(%908, newshape=[600]) /* ty=Tensor[(600), int64] */;
  %911 = @func_2967(%909, %910) /* ty=(Tensor[(16, 11, 6), float32], Tensor[(10, 15, 4), int64], Tensor[(600), int64], Tensor[(720), float64]) */;
  %912 = %900.0;
  %913 = logical_and(%905, %906) /* ty=Tensor[(?, 7, 3), bool] */;
  %914 = %911.1;
  (%912, %var_4001, %913, %914, meta[relay.Constant][42] /* ty=Tensor[(1056), float32] */, meta[relay.Constant][43] /* ty=Tensor[(1, 600), int64] */)
}

def @func_11227(%var_11224: Tensor[(1), float64]) -> (Tensor[(13), float32], Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64], Tensor[(1, 7, 3), float64], Tensor[(1), float64], Tensor[(30, 2), float32]) {
  %915 = @func_10871() /* ty=(Tensor[(13), float32], Tensor[(12, 2, 14), float32]) */;
  %916 = @func_4933() /* ty=(Tensor[(1, 21), float64],) */;
  %917 = cast(%var_11224, dtype="float64") /* ty=Tensor[(1), float64] */;
  %918 = cast(meta[relay.Constant][44] /* ty=Tensor[(30, 2), float32] */, dtype="float32") /* ty=Tensor[(30, 2), float32] */;
  %919 = reshape(%917, newshape=[1, 1, 1]) /* ty=Tensor[(1, 1, 1), float64] */;
  %920 = reshape(%918, newshape=[60]) /* ty=Tensor[(60), float32] */;
  %921 = @func_4193(%919, %920) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 1, 1), float32], Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(60), float32]) */;
  %922 = %915.0;
  %923 = @func_3835() /* ty=Tensor[(12, 2, 14), float32] */;
  %924 = %916.0;
  %925 = %921.3;
  (%922, %923, %924, %925, %var_11224, meta[relay.Constant][44] /* ty=Tensor[(30, 2), float32] */)
}

def @func_12291(%var_12283: Tensor[(2, 360), float64]) -> (Tensor[(4, 21), float32], Tensor[(12, 2, 14), float32], Tensor[(2, 360), uint64]) {
  %926 = @func_11898() /* ty=(Tensor[(4, 21), float32],) */;
  %927 = @func_3937() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %928 = @func_5109() /* ty=(Tensor[(4, 21), bool], Tensor[(2, 360), float64]) */;
  %929 = %928.1;
  %930 = cast(%var_12283, dtype="uint64") /* ty=Tensor[(2, 360), uint64] */;
  %931 = shape_of(%929, dtype="int32") /* ty=Tensor[(2), int32] */;
  %932 = cast(%929, dtype="uint64") /* ty=Tensor[(2, 360), uint64] */;
  %933 = dyn.reshape(%930, %931, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %934 = %926.0;
  %935 = %927.0;
  %936 = minimum(%932, %933) /* ty=Tensor[(2, 360), uint64] */;
  (%934, %935, %936)
}

def @func_12158(%var_12151: Tensor[(720), float64]) -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(2, 360), bool], Tensor[(720), float64], Tensor[(12, 2, 14), bool]) {
  %937 = @func_3864() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %938 = cast(%var_12151, dtype="float64") /* ty=Tensor[(720), float64] */;
  %939 = reshape(%938, newshape=[2, 360]) /* ty=Tensor[(2, 360), float64] */;
  %940 = @func_9212(%939) /* ty=(Tensor[(2, 360), bool],) */;
  %941 = @func_8320() /* ty=(Tensor[(12, 2, 14), bool],) */;
  %942 = @func_4601() /* ty=Tensor[(12, 2, 14), float32] */;
  %943 = %937.0;
  %944 = %940.0;
  %945 = %941.0;
  (%942, %943, %944, %var_12151, %945)
}

def @func_10187() -> (Tensor[(16, 8, 8), float32], Tensor[(12, 2, 14), float32], Tensor[(?, 21), uint32]) {
  %946 = @func_8806() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %947 = @func_6376() /* ty=Tensor[(1, 21), float64] */;
  %948 = cast(%947, dtype="float64") /* ty=Tensor[(1, 21), float64] */;
  %949 = log(%948) /* ty=Tensor[(1, 21), float64] */;
  %950 = cast(%947, dtype="uint32") /* ty=Tensor[(1, 21), uint32] */;
  %951 = shape_of(%949, dtype="int32") /* ty=Tensor[(2), int32] */;
  %952 = cast(%949, dtype="uint32") /* ty=Tensor[(1, 21), uint32] */;
  %953 = dyn.reshape(%950, %951, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %954 = @func_8661() /* ty=Tensor[(16, 8, 8), float32] */;
  %955 = %946.0;
  %956 = multiply(%952, %953) /* ty=Tensor[(?, 21), uint32] */;
  (%954, %955, %956)
}

def @func_7853() -> (Tensor[(13), float32], Tensor[(1, 21), float64]) {
  %957 = @func_5350() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(13), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */;
  %958 = %957.1;
  %959 = @func_6376() /* ty=Tensor[(1, 21), float64] */;
  (%958, %959)
}

def @func_5350() -> (Tensor[(12, 2, 14), float32], Tensor[(13), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) {
  %960 = @func_3864() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %961 = @func_4983() /* ty=(Tensor[(1, 21), float64], Tensor[(1, 8, 16), int8], Tensor[(13), float32]) */;
  %962 = @func_3903() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %963 = @func_3864() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %964 = %960.0;
  %965 = %961.2;
  %966 = %962.0;
  %967 = %963.0;
  (%964, %965, %966, %967)
}

def @func_6762() -> Tensor[(12, 2, 14), float32] {
  @func_6468() /* ty=Tensor[(12, 2, 14), float32] */
}

def @func_9352(%var_9336: Tensor[(600), int64]) -> (Tensor[(16, 8, 8), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(600), int64], Tensor[(12, 2, 14), float32]) {
  %968 = @func_8432() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %969 = cast(%var_9336, dtype="int64") /* ty=Tensor[(600), int64] */;
  %970 = reshape(%969, newshape=[600]) /* ty=Tensor[(600), int64] */;
  %971 = @func_7716(%970) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(13), float32], Tensor[(84), float64], Tensor[(12, 2, 14), float64], Tensor[(12, 2, 14), float32], Tensor[(15, 16, 3), float64], Tensor[(600), int64], Tensor[(720), float64], Tensor[(?, 21), int32]) */;
  %972 = @func_8661() /* ty=Tensor[(16, 8, 8), float32] */;
  %973 = %968.0;
  %974 = %971.4;
  %975 = @func_4620() /* ty=Tensor[(12, 2, 14), float32] */;
  (%972, %973, %974, %var_9336, %975)
}

def @func_11022() -> Tensor[(1, 21), float64] {
  %976 = @func_4337() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64]) */;
  %976.1
}

def @func_9531() -> (Tensor[(12, 2, 14), float32], Tensor[(7, 13, 4), float64], Tensor[(364), float64]) {
  %977 = @func_6098() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %978 = cast(meta[relay.Constant][45] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
  %979 = reshape(%978, newshape=[7, 13, 4]) /* ty=Tensor[(7, 13, 4), float64] */;
  %980 = %977.0;
  %981 = @func_3183(%979) /* ty=Tensor[(7, 13, 4), float64] */;
  (%980, %981, meta[relay.Constant][45] /* ty=Tensor[(364), float64] */)
}

def @func_11308(%var_11251: Tensor[(11, 21), float64]) -> (Tensor[(12, 2, 14), float32], Tensor[(11, 21), int8], Tensor[(2, 360), float64], Tensor[(60), float32], Tensor[(180, 4), float64], Tensor[(11, 21), bool], Tensor[(11, 21), float64]) {
  %982 = @func_10940() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */;
  %983 = @func_5732() /* ty=(Tensor[(1, 21), float64], Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64]) */;
  %984 = %983.2;
  %985 = cast(%984, dtype="int8") /* ty=Tensor[(1, 21), int8] */;
  %986 = cast(%var_11251, dtype="int8") /* ty=Tensor[(11, 21), int8] */;
  %987 = cast(meta[relay.Constant][46] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %988 = cast(meta[relay.Constant][47] /* ty=Tensor[(180, 4), float64] */, dtype="float64") /* ty=Tensor[(180, 4), float64] */;
  %989 = reshape(%987, newshape=[3, 20]) /* ty=Tensor[(3, 20), float32] */;
  %990 = reshape(%988, newshape=[2, 360]) /* ty=Tensor[(2, 360), float64] */;
  %991 = @func_7561(%989, %990) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(15, 4), float32], Tensor[(3, 20), float32], Tensor[(126), float64], Tensor[(2, 360), float64], Tensor[(1, 8, 16), int8]) */;
  %992 = cast(%var_11251, dtype="float64") /* ty=Tensor[(11, 21), float64] */;
  %993 = sqrt(%992) /* ty=Tensor[(11, 21), float64] */;
  %994 = cast(%984, dtype="uint8") /* ty=Tensor[(1, 21), uint8] */;
  %995 = cast(%var_11251, dtype="uint8") /* ty=Tensor[(11, 21), uint8] */;
  %996 = maximum(%994, %995) /* ty=Tensor[(11, 21), uint8] */;
  %997 = cast(%996, dtype="bool") /* ty=Tensor[(11, 21), bool] */;
  %998 = shape_of(%993, dtype="int32") /* ty=Tensor[(2), int32] */;
  %999 = cast(%993, dtype="bool") /* ty=Tensor[(11, 21), bool] */;
  %1000 = dyn.reshape(%997, %998, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1001 = less(%999, %1000) /* ty=Tensor[(11, 21), bool] */;
  %1002 = cast(%1001, dtype="bool") /* ty=Tensor[(11, 21), bool] */;
  %1003 = cast(%984, dtype="bool") /* ty=Tensor[(1, 21), bool] */;
  %1004 = cast(%1001, dtype="float64") /* ty=Tensor[(11, 21), float64] */;
  %1005 = %982.1;
  %1006 = subtract(%985, %986) /* ty=Tensor[(11, 21), int8] */;
  %1007 = %991.4;
  %1008 = equal(%1002, %1003) /* ty=Tensor[(11, 21), bool] */;
  %1009 = acosh(%1004) /* ty=Tensor[(11, 21), float64] */;
  (%1005, %1006, %1007, meta[relay.Constant][46] /* ty=Tensor[(60), float32] */, meta[relay.Constant][47] /* ty=Tensor[(180, 4), float64] */, %1008, %1009)
}

def @func_12440(%var_12418: Tensor[(336), float32]) -> (Tensor[(21), bool], Tensor[(12, 2, 14), float64], Tensor[(336), float32]) {
  %1010 = @func_12244() /* ty=(Tensor[(60), float32], Tensor[(21), bool], Tensor[(21, ?), float64]) */;
  %1011 = cast(%var_12418, dtype="float32") /* ty=Tensor[(336), float32] */;
  %1012 = reshape(%1011, newshape=[12, 2, 14]) /* ty=Tensor[(12, 2, 14), float32] */;
  %1013 = %1010.1;
  %1014 = @func_5261(%1012) /* ty=Tensor[(12, 2, 14), float64] */;
  (%1013, %1014, %var_12418)
}

def @func_3937() -> (Tensor[(12, 2, 14), float32],) {
  %1015 = @func_3929() /* ty=Tensor[(12, 2, 14), float32] */;
  (%1015,)
}

def @func_9045() -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) {
  %1016 = @func_7964() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(6, 15, 5), float64], Tensor[(450), float64]) */;
  %1017 = @func_6065() /* ty=Tensor[(12, 2, 14), float32] */;
  %1018 = %1016.1;
  (%1017, %1018)
}

def @func_3987() -> (Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64]) {
  %1019 = cast(meta[relay.Constant][48] /* ty=Tensor[(1, 21), float64] */, dtype="float64") /* ty=Tensor[(1, 21), float64] */;
  %1020 = reshape(%1019, newshape=[1, 7, 3]) /* ty=Tensor[(1, 7, 3), float64] */;
  %1021 = @func_2092(%1020) /* ty=(Tensor[(1, 7, 3), float64], Tensor[(1, 7, 3), float64], Tensor[(1, 8, 16), int8], Tensor[(2, 360), float64]) */;
  %1022 = @func_3835() /* ty=Tensor[(12, 2, 14), float32] */;
  %1023 = %1021.1;
  (%1022, %1023, meta[relay.Constant][48] /* ty=Tensor[(1, 21), float64] */)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_6568() -> Tensor[(12, 2, 14), float32] {
  @func_4620() /* ty=Tensor[(12, 2, 14), float32] */
}

def @func_6822() -> (Tensor[(1, 21), float64],) {
  %0 = @func_3987() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64]) */;
  %1 = %0.2;
  (%1,)
}

def @func_9928() -> (Tensor[(12, 2, 14), float32],) {
  %2 = @func_5077() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %3 = %2.0;
  (%3,)
}

def @func_3905() -> (Tensor[(12, 2, 14), float32],) {
  @func_3903() /* ty=(Tensor[(12, 2, 14), float32],) */
}

def @func_6376() -> Tensor[(1, 21), float64] {
  %4 = @func_4337() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64]) */;
  %4.1
}

def @func_3937() -> (Tensor[(12, 2, 14), float32],) {
  %5 = @func_3929() /* ty=Tensor[(12, 2, 14), float32] */;
  (%5,)
}

def @func_10532(%var_10531: Tensor[(720), float64]) -> (Tensor[(7, 13, 4), float64], Tensor[(1, 21), float64], Tensor[(720), float64]) {
  %12 = fn (%var_10516: Tensor[(720), float64]) -> (Tensor[(7, 13, 4), float64], Tensor[(1, 21), float64], Tensor[(720), float64]) {
    %6 = @func_9531() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(7, 13, 4), float64], Tensor[(364), float64]) */;
    %7 = cast(%var_10516, dtype="float64") /* ty=Tensor[(720), float64] */;
    %8 = reshape(%7, newshape=[2, 360]) /* ty=Tensor[(2, 360), float64] */;
    %9 = @func_4842(%8) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64], Tensor[(15, 16, 3), float64], Tensor[(2, 360), float64], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */;
    %10 = %6.1;
    %11 = %9.1;
    (%10, %11, %var_10516)
  };
  %12(%var_10531) /* ty=(Tensor[(7, 13, 4), float64], Tensor[(1, 21), float64], Tensor[(720), float64]) */
}

def @func_11511() -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) {
  %13 = @func_8087() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(2, 21), float64]) */;
  %14 = %13.0;
  %15 = @func_3929() /* ty=Tensor[(12, 2, 14), float32] */;
  (%14, %15)
}

def @func_11835(%var_11802: Tensor[(720), float64], %var_11833: Tensor[(128), int8]) -> (Tensor[(12, 2, 14), float32], Tensor[(15, 16, 3), float64], Tensor[(720), float64], Tensor[(2, 300), float32], Tensor[(1, 21), float64], Tensor[(12, 2, 14), float32], Tensor[(2, 360), float64], Tensor[(2016), float64], Tensor[(128), int8]) {
  %16 = cast(meta[relay.Constant][0] /* ty=Tensor[(2, 300), int64] */, dtype="int64") /* ty=Tensor[(2, 300), int64] */;
  %17 = cast(meta[relay.Constant][0] /* ty=Tensor[(2, 300), int64] */, dtype="int64") /* ty=Tensor[(2, 300), int64] */;
  %18 = cast(%var_11802, dtype="float64") /* ty=Tensor[(720), float64] */;
  %19 = reshape(%16, newshape=[10, 15, 4]) /* ty=Tensor[(10, 15, 4), int64] */;
  %20 = reshape(%17, newshape=[10, 15, 4]) /* ty=Tensor[(10, 15, 4), int64] */;
  %21 = reshape(%18, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %22 = @func_2362(%19, %20, %21) /* ty=(Tensor[(10, 15, 4), int64], Tensor[(15, 16, 3), float64], Tensor[(720), float64]) */;
  %23 = cast(meta[relay.Constant][0] /* ty=Tensor[(2, 300), int64] */, dtype="float32") /* ty=Tensor[(2, 300), float32] */;
  %24 = @func_10835() /* ty=(Tensor[(1, 21), float64],) */;
  %25 = @func_10325() /* ty=(Tensor[(2, 360), float64],) */;
  %26 = cast(%var_11833, dtype="int8") /* ty=Tensor[(128), int8] */;
  %27 = reshape(%26, newshape=[128]) /* ty=Tensor[(128), int8] */;
  %28 = @func_4386(%27) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(16, 14, 9), uint8], Tensor[(2016), float64], Tensor[(128), int8]) */;
  %29 = @func_10576() /* ty=Tensor[(12, 2, 14), float32] */;
  %30 = %22.1;
  %31 = cos(%23) /* ty=Tensor[(2, 300), float32] */;
  %32 = %24.0;
  %33 = @func_11491() /* ty=Tensor[(12, 2, 14), float32] */;
  %34 = %25.0;
  %35 = %28.2;
  (%29, %30, %var_11802, %31, %32, %33, %34, %35, %var_11833)
}

def @func_12291(%var_12283: Tensor[(2, 360), float64]) -> (Tensor[(4, 21), float32], Tensor[(12, 2, 14), float32], Tensor[(2, 360), uint64]) {
  %36 = @func_11898() /* ty=(Tensor[(4, 21), float32],) */;
  %37 = @func_3937() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %38 = @func_5109() /* ty=(Tensor[(4, 21), bool], Tensor[(2, 360), float64]) */;
  %39 = %38.1;
  %40 = cast(%var_12283, dtype="uint64") /* ty=Tensor[(2, 360), uint64] */;
  %41 = shape_of(%39, dtype="int32") /* ty=Tensor[(2), int32] */;
  %42 = cast(%39, dtype="uint64") /* ty=Tensor[(2, 360), uint64] */;
  %43 = dyn.reshape(%40, %41, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %44 = %36.0;
  %45 = %37.0;
  %46 = minimum(%42, %43) /* ty=Tensor[(2, 360), uint64] */;
  (%44, %45, %46)
}

def @func_12375() -> Tensor[(13), float32] {
  @func_12373() /* ty=Tensor[(13), float32] */
}

def @func_11551() -> (Tensor[(2, 360), float64], Tensor[(1, 21), float64]) {
  @func_11549() /* ty=(Tensor[(2, 360), float64], Tensor[(1, 21), float64]) */
}

def @func_7965() -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(6, 15, 5), float64], Tensor[(450), float64]) {
  %54 = fn () -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(6, 15, 5), float64], Tensor[(450), float64]) {
    %47 = cast(meta[relay.Constant][1] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
    %48 = cast(meta[relay.Constant][1] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
    %49 = reshape(%47, newshape=[6, 15, 5]) /* ty=Tensor[(6, 15, 5), float64] */;
    %50 = reshape(%48, newshape=[6, 15, 5]) /* ty=Tensor[(6, 15, 5), float64] */;
    %51 = @func_4601() /* ty=Tensor[(12, 2, 14), float32] */;
    %52 = @func_6762() /* ty=Tensor[(12, 2, 14), float32] */;
    %53 = @func_2256(%49, %50) /* ty=Tensor[(6, 15, 5), float64] */;
    (%51, %52, %53, meta[relay.Constant][1] /* ty=Tensor[(450), float64] */)
  };
  %54() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(6, 15, 5), float64], Tensor[(450), float64]) */
}

def @func_5109() -> (Tensor[(4, 21), bool], Tensor[(2, 360), float64]) {
  %55 = @func_4933() /* ty=(Tensor[(1, 21), float64],) */;
  %56 = %55.0;
  %57 = cast(%56, dtype="bool") /* ty=Tensor[(1, 21), bool] */;
  %58 = cast(meta[relay.Constant][2] /* ty=Tensor[(4, 21), float64] */, dtype="bool") /* ty=Tensor[(4, 21), bool] */;
  %59 = cast(%56, dtype="float64") /* ty=Tensor[(1, 21), float64] */;
  %60 = reshape(%59, newshape=[1, 7, 3]) /* ty=Tensor[(1, 7, 3), float64] */;
  %61 = @func_2092(%60) /* ty=(Tensor[(1, 7, 3), float64], Tensor[(1, 7, 3), float64], Tensor[(1, 8, 16), int8], Tensor[(2, 360), float64]) */;
  %62 = less(%57, %58) /* ty=Tensor[(4, 21), bool] */;
  %63 = %61.3;
  (%62, %63)
}

def @func_4622() -> Tensor[(12, 2, 14), float32] {
  @func_4620() /* ty=Tensor[(12, 2, 14), float32] */
}

def @func_10871() -> (Tensor[(13), float32], Tensor[(12, 2, 14), float32]) {
  %64 = @func_6510() /* ty=(Tensor[(13), float32], Tensor[(13), float32], Tensor[(1, 21), float64]) */;
  %65 = @func_3987() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64]) */;
  %66 = %64.1;
  %67 = %65.0;
  (%66, %67)
}

def @func_12442(%var_12441: Tensor[(336), float32]) -> (Tensor[(21), bool], Tensor[(12, 2, 14), float64], Tensor[(336), float32]) {
  %73 = fn (%var_12418: Tensor[(336), float32]) -> (Tensor[(21), bool], Tensor[(12, 2, 14), float64], Tensor[(336), float32]) {
    %68 = @func_12244() /* ty=(Tensor[(60), float32], Tensor[(21), bool], Tensor[(21, ?), float64]) */;
    %69 = cast(%var_12418, dtype="float32") /* ty=Tensor[(336), float32] */;
    %70 = reshape(%69, newshape=[12, 2, 14]) /* ty=Tensor[(12, 2, 14), float32] */;
    %71 = %68.1;
    %72 = @func_5261(%70) /* ty=Tensor[(12, 2, 14), float64] */;
    (%71, %72, %var_12418)
  };
  %73(%var_12441) /* ty=(Tensor[(21), bool], Tensor[(12, 2, 14), float64], Tensor[(336), float32]) */
}

def @func_10600() -> (Tensor[(7, 13, 4), float64],) {
  @func_10598() /* ty=(Tensor[(7, 13, 4), float64],) */
}

def @func_6162() -> (Tensor[(12, 2, 14), float32],) {
  %74 = @func_6098() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %75 = %74.0;
  (%75,)
}

def @func_4620() -> Tensor[(12, 2, 14), float32] {
  @func_4601() /* ty=Tensor[(12, 2, 14), float32] */
}

def @func_5261(%var_5254: Tensor[(12, 2, 14), float32]) -> Tensor[(12, 2, 14), float64] {
  %76 = @func_5077() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %77 = %76.0;
  %78 = cast(%var_5254, dtype="float64") /* ty=Tensor[(12, 2, 14), float64] */;
  %79 = shape_of(%77, dtype="int32") /* ty=Tensor[(3), int32] */;
  %80 = cast(%77, dtype="float64") /* ty=Tensor[(12, 2, 14), float64] */;
  %81 = dyn.reshape(%78, %79, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  subtract(%80, %81) /* ty=Tensor[(12, 2, 14), float64] */
}

def @func_9215(%var_9213: Tensor[(2, 360), float64]) -> (Tensor[(2, 360), bool],) {
  @func_9212(%var_9213) /* ty=(Tensor[(2, 360), bool],) */
}

def @func_11785() -> (Tensor[(4, 21), float32],) {
  %82 = @func_5398() /* ty=(Tensor[(4, 21), float32],) */;
  %83 = %82.0;
  (%83,)
}

def @func_2259(%var_2257: Tensor[(6, 15, 5), float64], %var_2258: Tensor[(6, 15, 5), float64]) -> Tensor[(6, 15, 5), float64] {
  %88 = fn (%var_2249: Tensor[(6, 15, 5), float64], %var_2250: Tensor[(6, 15, 5), float64]) -> Tensor[(6, 15, 5), float64] {
    %84 = cast(%var_2250, dtype="float64") /* ty=Tensor[(6, 15, 5), float64] */;
    %85 = shape_of(%var_2249, dtype="int32") /* ty=Tensor[(3), int32] */;
    %86 = cast(%var_2249, dtype="float64") /* ty=Tensor[(6, 15, 5), float64] */;
    %87 = dyn.reshape(%84, %85, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    floor_divide(%86, %87) /* ty=Tensor[(6, 15, 5), float64] */
  };
  %88(%var_2257, %var_2258) /* ty=Tensor[(6, 15, 5), float64] */
}

def @func_5351() -> (Tensor[(12, 2, 14), float32], Tensor[(13), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) {
  %97 = fn () -> (Tensor[(12, 2, 14), float32], Tensor[(13), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) {
    %89 = @func_3864() /* ty=(Tensor[(12, 2, 14), float32],) */;
    %90 = @func_4983() /* ty=(Tensor[(1, 21), float64], Tensor[(1, 8, 16), int8], Tensor[(13), float32]) */;
    %91 = @func_3903() /* ty=(Tensor[(12, 2, 14), float32],) */;
    %92 = @func_3864() /* ty=(Tensor[(12, 2, 14), float32],) */;
    %93 = %89.0;
    %94 = %90.2;
    %95 = %91.0;
    %96 = %92.0;
    (%93, %94, %95, %96)
  };
  %97() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(13), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */
}

def @func_7016() -> (Tensor[(2, 360), float64],) {
  %102 = fn () -> (Tensor[(2, 360), float64],) {
    %98 = @func_5109() /* ty=(Tensor[(4, 21), bool], Tensor[(2, 360), float64]) */;
    %99 = %98.1;
    %100 = cast(%99, dtype="float64") /* ty=Tensor[(2, 360), float64] */;
    %101 = erf(%100) /* ty=Tensor[(2, 360), float64] */;
    (%101,)
  };
  %102() /* ty=(Tensor[(2, 360), float64],) */
}

def @func_6337(%var_6321: Tensor[(128), int8]) -> (Tensor[(1, 8, 16), int8], Tensor[(128), int8], Tensor[(12, 2, 14), float32]) {
  %103 = cast(%var_6321, dtype="int8") /* ty=Tensor[(128), int8] */;
  %104 = reshape(%103, newshape=[1, 8, 16]) /* ty=Tensor[(1, 8, 16), int8] */;
  %105 = @func_40(%104) /* ty=(Tensor[(1, 8, 16), int8],) */;
  %106 = @func_3864() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %107 = %106.0;
  %108 = @func_5077() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %109 = %108.0;
  %110 = cast(%109, dtype="float32") /* ty=Tensor[(12, 2, 14), float32] */;
  %111 = shape_of(%107, dtype="int32") /* ty=Tensor[(3), int32] */;
  %112 = cast(%107, dtype="float32") /* ty=Tensor[(12, 2, 14), float32] */;
  %113 = dyn.reshape(%110, %111, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %114 = %105.0;
  %115 = divide(%112, %113) /* ty=Tensor[(12, 2, 14), float32] */;
  (%114, %var_6321, %115)
}

def @func_8881(%var_8853: Tensor[(4, 7, 14), float32], %var_8864: Tensor[(4, 7, 14), float32], %var_8872: Tensor[(21), float64]) -> (Tensor[(4, 7, 14), float32], Tensor[(1, 600), int64], Tensor[(21), float64]) {
  %116 = cast(%var_8853, dtype="float32") /* ty=Tensor[(4, 7, 14), float32] */;
  %117 = log10(%116) /* ty=Tensor[(4, 7, 14), float32] */;
  %118 = cast(%var_8864, dtype="float32") /* ty=Tensor[(4, 7, 14), float32] */;
  %119 = shape_of(%117, dtype="int32") /* ty=Tensor[(3), int32] */;
  %120 = cast(%117, dtype="float32") /* ty=Tensor[(4, 7, 14), float32] */;
  %121 = dyn.reshape(%118, %119, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %122 = cast(%var_8872, dtype="float64") /* ty=Tensor[(21), float64] */;
  %123 = reshape(%122, newshape=[21]) /* ty=Tensor[(21), float64] */;
  %124 = @func_4948(%123) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 600), int64], Tensor[(1, 720), float64], Tensor[(21), float64]) */;
  %125 = floor_mod(%120, %121) /* ty=Tensor[(4, 7, 14), float32] */;
  %126 = %124.1;
  (%125, %126, %var_8872)
}

def @func_7002(%var_6994: Tensor[(12, 21), float64]) -> Tensor[(12, 21), uint64] {
  %127 = @func_4983() /* ty=(Tensor[(1, 21), float64], Tensor[(1, 8, 16), int8], Tensor[(13), float32]) */;
  %128 = %127.0;
  %129 = cast(%128, dtype="uint64") /* ty=Tensor[(1, 21), uint64] */;
  %130 = cast(%var_6994, dtype="uint64") /* ty=Tensor[(12, 21), uint64] */;
  minimum(%129, %130) /* ty=Tensor[(12, 21), uint64] */
}

def @func_9799() -> Tensor[(16, 8, 8), float32] {
  @func_8661() /* ty=Tensor[(16, 8, 8), float32] */
}

def @func_5943(%var_5936: Tensor[(12, 2, 14), float32]) -> Tensor[(12, 2, 14), float64] {
  %131 = @func_4601() /* ty=Tensor[(12, 2, 14), float32] */;
  %132 = cast(%var_5936, dtype="float64") /* ty=Tensor[(12, 2, 14), float64] */;
  %133 = shape_of(%131, dtype="int32") /* ty=Tensor[(3), int32] */;
  %134 = cast(%131, dtype="float64") /* ty=Tensor[(12, 2, 14), float64] */;
  %135 = dyn.reshape(%132, %133, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%134, %135) /* ty=Tensor[(12, 2, 14), float64] */
}

def @func_10026() -> (Tensor[(12, 2, 14), float32],) {
  %138 = fn () -> (Tensor[(12, 2, 14), float32],) {
    %136 = @func_6098() /* ty=(Tensor[(12, 2, 14), float32],) */;
    %137 = %136.0;
    (%137,)
  };
  %138() /* ty=(Tensor[(12, 2, 14), float32],) */
}

def @func_9398() -> (Tensor[(12, 2, 14), float32],) {
  @func_9396() /* ty=(Tensor[(12, 2, 14), float32],) */
}

def @func_4951(%var_4949: Tensor[(21), float64]) -> (Tensor[(12, 2, 14), float32], Tensor[(1, 600), int64], Tensor[(1, 720), float64], Tensor[(21), float64]) {
  @func_4948(%var_4949) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 600), int64], Tensor[(1, 720), float64], Tensor[(21), float64]) */
}

def @func_11787() -> (Tensor[(4, 21), float32],) {
  @func_11785() /* ty=(Tensor[(4, 21), float32],) */
}

def @func_6270() -> Tensor[(12, 2, 14), float32] {
  %139 = @func_5350() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(13), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */;
  %139.3
}

def @func_5946(%var_5944: Tensor[(12, 2, 14), float32]) -> Tensor[(12, 2, 14), float64] {
  @func_5943(%var_5944) /* ty=Tensor[(12, 2, 14), float64] */
}

def @func_2971(%var_2969: Tensor[(16, 11, 6), float32], %var_2970: Tensor[(600), int64]) -> (Tensor[(16, 11, 6), float32], Tensor[(10, 15, 4), int64], Tensor[(600), int64], Tensor[(720), float64]) {
  @func_2967(%var_2969, %var_2970) /* ty=(Tensor[(16, 11, 6), float32], Tensor[(10, 15, 4), int64], Tensor[(600), int64], Tensor[(720), float64]) */
}

def @func_11549() -> (Tensor[(2, 360), float64], Tensor[(1, 21), float64]) {
  %140 = @func_10325() /* ty=(Tensor[(2, 360), float64],) */;
  %141 = @func_10444() /* ty=(Tensor[(1, 21), float64],) */;
  %142 = %140.0;
  %143 = %141.0;
  (%142, %143)
}

def @func_6237() -> (Tensor[(1, 7, 3), float64], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), bool]) {
  @func_6235() /* ty=(Tensor[(1, 7, 3), float64], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), bool]) */
}

def @func_3917() -> (Tensor[(12, 2, 14), float32],) {
  %144 = @func_3835() /* ty=Tensor[(12, 2, 14), float32] */;
  (%144,)
}

def @func_4933() -> (Tensor[(1, 21), float64],) {
  %145 = @func_3987() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64]) */;
  %146 = %145.2;
  (%146,)
}

def @func_10395() -> (Tensor[(1, 21), float64], Tensor[(16, 8, 8), float32]) {
  @func_10393() /* ty=(Tensor[(1, 21), float64], Tensor[(16, 8, 8), float32]) */
}

def @func_7078() -> (Tensor[(12, 2, 14), float32],) {
  %149 = fn () -> (Tensor[(12, 2, 14), float32],) {
    %147 = @func_5350() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(13), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */;
    %148 = %147.2;
    (%148,)
  };
  %149() /* ty=(Tensor[(12, 2, 14), float32],) */
}

def @func_42(%var_41: Tensor[(1, 8, 16), int8]) -> (Tensor[(1, 8, 16), int8],) {
  %153 = fn (%var_11: Tensor[(1, 8, 16), int8]) -> (Tensor[(1, 8, 16), int8],) {
    %150 = cast(meta[relay.Constant][3] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %151 = cast(%var_11, dtype="int8") /* ty=Tensor[(1, 8, 16), int8] */;
    %152 = right_shift(%150, %151) /* ty=Tensor[(1, 8, 16), int8] */;
    (%152,)
  };
  %153(%var_41) /* ty=(Tensor[(1, 8, 16), int8],) */
}

def @func_5612() -> (Tensor[(12, 2, 14), float32],) {
  %155 = fn () -> (Tensor[(12, 2, 14), float32],) {
    %154 = @func_4071() /* ty=Tensor[(12, 2, 14), float32] */;
    (%154,)
  };
  %155() /* ty=(Tensor[(12, 2, 14), float32],) */
}

def @func_4043(%var_4041: Tensor[(720), float64], %var_4042: Tensor[(1, 7, 3), float64]) -> (Tensor[(15, 16, 3), float64], Tensor[(720), float64], Tensor[(?, 7, 3), bool], Tensor[(10, 15, 4), int64], Tensor[(1056), float32], Tensor[(1, 600), int64]) {
  @func_4039(%var_4041, %var_4042) /* ty=(Tensor[(15, 16, 3), float64], Tensor[(720), float64], Tensor[(?, 7, 3), bool], Tensor[(10, 15, 4), int64], Tensor[(1056), float32], Tensor[(1, 600), int64]) */
}

def @func_10836() -> (Tensor[(1, 21), float64],) {
  %158 = fn () -> (Tensor[(1, 21), float64],) {
    %156 = @func_10444() /* ty=(Tensor[(1, 21), float64],) */;
    %157 = %156.0;
    (%157,)
  };
  %158() /* ty=(Tensor[(1, 21), float64],) */
}

def @func_4338() -> (Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64]) {
  %162 = fn () -> (Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64]) {
    %159 = @func_3937() /* ty=(Tensor[(12, 2, 14), float32],) */;
    %160 = %159.0;
    %161 = @func_4156() /* ty=Tensor[(1, 21), float64] */;
    (%160, %161)
  };
  %162() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64]) */
}

def @func_11450() -> (Tensor[(2, 360), float64], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) {
  %169 = fn () -> (Tensor[(2, 360), float64], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) {
    %163 = @func_5109() /* ty=(Tensor[(4, 21), bool], Tensor[(2, 360), float64]) */;
    %164 = @func_9045() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */;
    %165 = @func_3937() /* ty=(Tensor[(12, 2, 14), float32],) */;
    %166 = %163.1;
    %167 = %164.0;
    %168 = %165.0;
    (%166, %167, %168)
  };
  %169() /* ty=(Tensor[(2, 360), float64], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */
}

def @func_8808() -> (Tensor[(12, 2, 14), float32],) {
  @func_8806() /* ty=(Tensor[(12, 2, 14), float32],) */
}

def @func_6099() -> (Tensor[(12, 2, 14), float32],) {
  %171 = fn () -> (Tensor[(12, 2, 14), float32],) {
    %170 = @func_4620() /* ty=Tensor[(12, 2, 14), float32] */;
    (%170,)
  };
  %171() /* ty=(Tensor[(12, 2, 14), float32],) */
}

def @func_12246() -> (Tensor[(60), float32], Tensor[(21), bool], Tensor[(21, ?), float64]) {
  @func_12244() /* ty=(Tensor[(60), float32], Tensor[(21), bool], Tensor[(21, ?), float64]) */
}

def @func_4072() -> Tensor[(12, 2, 14), float32] {
  %172 = fn () -> Tensor[(12, 2, 14), float32] {
    @func_3929() /* ty=Tensor[(12, 2, 14), float32] */
  };
  %172() /* ty=Tensor[(12, 2, 14), float32] */
}

def @func_6253() -> Tensor[(12, 2, 14), float32] {
  @func_6065() /* ty=Tensor[(12, 2, 14), float32] */
}

def @func_3987() -> (Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64]) {
  %173 = cast(meta[relay.Constant][4] /* ty=Tensor[(1, 21), float64] */, dtype="float64") /* ty=Tensor[(1, 21), float64] */;
  %174 = reshape(%173, newshape=[1, 7, 3]) /* ty=Tensor[(1, 7, 3), float64] */;
  %175 = @func_2092(%174) /* ty=(Tensor[(1, 7, 3), float64], Tensor[(1, 7, 3), float64], Tensor[(1, 8, 16), int8], Tensor[(2, 360), float64]) */;
  %176 = @func_3835() /* ty=Tensor[(12, 2, 14), float32] */;
  %177 = %175.1;
  (%176, %177, meta[relay.Constant][4] /* ty=Tensor[(1, 21), float64] */)
}

def @func_12160(%var_12159: Tensor[(720), float64]) -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(2, 360), bool], Tensor[(720), float64], Tensor[(12, 2, 14), bool]) {
  %187 = fn (%var_12151: Tensor[(720), float64]) -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(2, 360), bool], Tensor[(720), float64], Tensor[(12, 2, 14), bool]) {
    %178 = @func_3864() /* ty=(Tensor[(12, 2, 14), float32],) */;
    %179 = cast(%var_12151, dtype="float64") /* ty=Tensor[(720), float64] */;
    %180 = reshape(%179, newshape=[2, 360]) /* ty=Tensor[(2, 360), float64] */;
    %181 = @func_9212(%180) /* ty=(Tensor[(2, 360), bool],) */;
    %182 = @func_8320() /* ty=(Tensor[(12, 2, 14), bool],) */;
    %183 = @func_4601() /* ty=Tensor[(12, 2, 14), float32] */;
    %184 = %178.0;
    %185 = %181.0;
    %186 = %182.0;
    (%183, %184, %185, %var_12151, %186)
  };
  %187(%var_12159) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(2, 360), bool], Tensor[(720), float64], Tensor[(12, 2, 14), bool]) */
}

def @func_8057() -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64]) {
  %196 = fn () -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64]) {
    %188 = @func_5732() /* ty=(Tensor[(1, 21), float64], Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64]) */;
    %189 = @func_3987() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64]) */;
    %190 = @func_6235() /* ty=(Tensor[(1, 7, 3), float64], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), bool]) */;
    %191 = %188.1;
    %192 = @func_6065() /* ty=Tensor[(12, 2, 14), float32] */;
    %193 = %189.1;
    %194 = @func_6253() /* ty=Tensor[(12, 2, 14), float32] */;
    %195 = %190.0;
    (%191, %192, %193, %194, %195)
  };
  %196() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64]) */
}

def @func_7410(%var_7408: Tensor[(1, 360), float32], %var_7409: Tensor[(7, 21), float64]) -> (Tensor[(12, 2, 14), float32], Tensor[(6, 15, 5), float64], Tensor[(1, 360), float32], Tensor[(364), float64], Tensor[(4, 21), bool], Tensor[(?, 8, 16), uint32], Tensor[(7, 21), float32], Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64]) {
  %228 = fn (%var_7329: Tensor[(1, 360), float32], %var_7371: Tensor[(7, 21), float64]) -> (Tensor[(12, 2, 14), float32], Tensor[(6, 15, 5), float64], Tensor[(1, 360), float32], Tensor[(364), float64], Tensor[(4, 21), bool], Tensor[(?, 8, 16), uint32], Tensor[(7, 21), float32], Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64]) {
    %197 = cast(%var_7329, dtype="float32") /* ty=Tensor[(1, 360), float32] */;
    %198 = cast(%var_7329, dtype="float32") /* ty=Tensor[(1, 360), float32] */;
    %199 = cast(meta[relay.Constant][5] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
    %200 = reshape(%197, newshape=[6, 10, 6]) /* ty=Tensor[(6, 10, 6), float32] */;
    %201 = reshape(%198, newshape=[6, 10, 6]) /* ty=Tensor[(6, 10, 6), float32] */;
    %202 = reshape(%199, newshape=[91, 4]) /* ty=Tensor[(91, 4), float64] */;
    %203 = @func_4449(%200, %201, %202) /* ty=(Tensor[(6, 10, 6), float32], Tensor[(6, 15, 5), float64], Tensor[(5, 90), float64], Tensor[(7, 13, 4), float64], Tensor[(12, 2, 14), float32], Tensor[(91, 4), bool], Tensor[(91, 4), float32]) */;
    %204 = @func_5109() /* ty=(Tensor[(4, 21), bool], Tensor[(2, 360), float64]) */;
    %205 = cast(meta[relay.Constant][6] /* ty=Tensor[(128), int8] */, dtype="int8") /* ty=Tensor[(128), int8] */;
    %206 = reshape(%205, newshape=[1, 8, 16]) /* ty=Tensor[(1, 8, 16), int8] */;
    %207 = @func_40(%206) /* ty=(Tensor[(1, 8, 16), int8],) */;
    %208 = %207.0;
    %209 = cast(meta[relay.Constant][6] /* ty=Tensor[(128), int8] */, dtype="uint32") /* ty=Tensor[(128), uint32] */;
    %210 = shape_of(%208, dtype="int32") /* ty=Tensor[(3), int32] */;
    %211 = cast(%208, dtype="uint32") /* ty=Tensor[(1, 8, 16), uint32] */;
    %212 = dyn.reshape(%209, %210, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %213 = @func_5574() /* ty=(Tensor[(1, 21), float64], Tensor[(12, 2, 14), bool], Tensor[(12, 2, 14), float64]) */;
    %214 = %213.0;
    %215 = cast(%214, dtype="bool") /* ty=Tensor[(1, 21), bool] */;
    %216 = cast(%var_7371, dtype="bool") /* ty=Tensor[(7, 21), bool] */;
    %217 = greater_equal(%215, %216) /* ty=Tensor[(7, 21), bool] */;
    %218 = cast(%217, dtype="float32") /* ty=Tensor[(7, 21), float32] */;
    %219 = cast(%214, dtype="float32") /* ty=Tensor[(1, 21), float32] */;
    %220 = @func_4983() /* ty=(Tensor[(1, 21), float64], Tensor[(1, 8, 16), int8], Tensor[(13), float32]) */;
    %221 = @func_6568() /* ty=Tensor[(12, 2, 14), float32] */;
    %222 = %203.1;
    %223 = %204.0;
    %224 = left_shift(%211, %212) /* ty=Tensor[(?, 8, 16), uint32] */;
    %225 = floor_divide(%218, %219) /* ty=Tensor[(7, 21), float32] */;
    %226 = @func_3929() /* ty=Tensor[(12, 2, 14), float32] */;
    %227 = %220.0;
    (%221, %222, %var_7329, meta[relay.Constant][5] /* ty=Tensor[(364), float64] */, %223, %224, %225, %226, %227)
  };
  %228(%var_7408, %var_7409) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(6, 15, 5), float64], Tensor[(1, 360), float32], Tensor[(364), float64], Tensor[(4, 21), bool], Tensor[(?, 8, 16), uint32], Tensor[(7, 21), float32], Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64]) */
}

def @func_8844() -> (Tensor[(12, 2, 14), float32],) {
  %229 = @func_5512() /* ty=Tensor[(12, 2, 14), float32] */;
  (%229,)
}

def @func_6512() -> (Tensor[(13), float32], Tensor[(13), float32], Tensor[(1, 21), float64]) {
  @func_6510() /* ty=(Tensor[(13), float32], Tensor[(13), float32], Tensor[(1, 21), float64]) */
}

def @func_10748(%var_10747: Tensor[(14, 3, 4), float32]) -> (Tensor[(14, 3, 4), float32], Tensor[(1, 21), float64], Tensor[(12, 2, 14), float32]) {
  %236 = fn (%var_10697: Tensor[(14, 3, 4), float32]) -> (Tensor[(14, 3, 4), float32], Tensor[(1, 21), float64], Tensor[(12, 2, 14), float32]) {
    %230 = cast(%var_10697, dtype="float32") /* ty=Tensor[(14, 3, 4), float32] */;
    %231 = @func_3987() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64]) */;
    %232 = @func_9045() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */;
    %233 = log(%230) /* ty=Tensor[(14, 3, 4), float32] */;
    %234 = %231.2;
    %235 = %232.1;
    (%233, %234, %235)
  };
  %236(%var_10747) /* ty=(Tensor[(14, 3, 4), float32], Tensor[(1, 21), float64], Tensor[(12, 2, 14), float32]) */
}

def @func_11934() -> (Tensor[(1, 21), float32],) {
  %238 = fn () -> (Tensor[(1, 21), float32],) {
    %237 = @func_10350() /* ty=Tensor[(1, 21), float32] */;
    (%237,)
  };
  %238() /* ty=(Tensor[(1, 21), float32],) */
}

def @func_10941() -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) {
  %244 = fn () -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) {
    %239 = @func_9045() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */;
    %240 = @func_10672() /* ty=(Tensor[(12, 2, 14), float32],) */;
    %241 = %239.0;
    %242 = %240.0;
    %243 = @func_8305() /* ty=Tensor[(12, 2, 14), float32] */;
    (%241, %242, %243)
  };
  %244() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */
}

def @func_4039(%var_4001: Tensor[(720), float64], %var_4004: Tensor[(1, 7, 3), float64]) -> (Tensor[(15, 16, 3), float64], Tensor[(720), float64], Tensor[(?, 7, 3), bool], Tensor[(10, 15, 4), int64], Tensor[(1056), float32], Tensor[(1, 600), int64]) {
  %245 = cast(%var_4001, dtype="float64") /* ty=Tensor[(720), float64] */;
  %246 = reshape(%245, newshape=[15, 16, 3]) /* ty=Tensor[(15, 16, 3), float64] */;
  %247 = @func_1884(%246) /* ty=(Tensor[(15, 16, 3), float64], Tensor[(1, 8, 16), int8], Tensor[(128), int8]) */;
  %248 = @func_3987() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64]) */;
  %249 = %248.1;
  %250 = cast(%var_4004, dtype="bool") /* ty=Tensor[(1, 7, 3), bool] */;
  %251 = shape_of(%249, dtype="int32") /* ty=Tensor[(3), int32] */;
  %252 = cast(%249, dtype="bool") /* ty=Tensor[(1, 7, 3), bool] */;
  %253 = dyn.reshape(%250, %251, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %254 = cast(meta[relay.Constant][7] /* ty=Tensor[(1056), float32] */, dtype="float32") /* ty=Tensor[(1056), float32] */;
  %255 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 600), int64] */, dtype="int64") /* ty=Tensor[(1, 600), int64] */;
  %256 = reshape(%254, newshape=[16, 11, 6]) /* ty=Tensor[(16, 11, 6), float32] */;
  %257 = reshape(%255, newshape=[600]) /* ty=Tensor[(600), int64] */;
  %258 = @func_2967(%256, %257) /* ty=(Tensor[(16, 11, 6), float32], Tensor[(10, 15, 4), int64], Tensor[(600), int64], Tensor[(720), float64]) */;
  %259 = %247.0;
  %260 = logical_and(%252, %253) /* ty=Tensor[(?, 7, 3), bool] */;
  %261 = %258.1;
  (%259, %var_4001, %260, %261, meta[relay.Constant][7] /* ty=Tensor[(1056), float32] */, meta[relay.Constant][8] /* ty=Tensor[(1, 600), int64] */)
}

def @func_5078() -> (Tensor[(12, 2, 14), float32],) {
  %263 = fn () -> (Tensor[(12, 2, 14), float32],) {
    %262 = @func_3929() /* ty=Tensor[(12, 2, 14), float32] */;
    (%262,)
  };
  %263() /* ty=(Tensor[(12, 2, 14), float32],) */
}

def @func_4935() -> (Tensor[(1, 21), float64],) {
  @func_4933() /* ty=(Tensor[(1, 21), float64],) */
}

def @func_6378() -> Tensor[(1, 21), float64] {
  @func_6376() /* ty=Tensor[(1, 21), float64] */
}

def @func_8306() -> Tensor[(12, 2, 14), float32] {
  %264 = fn () -> Tensor[(12, 2, 14), float32] {
    @func_6568() /* ty=Tensor[(12, 2, 14), float32] */
  };
  %264() /* ty=Tensor[(12, 2, 14), float32] */
}

def @func_2092(%var_2046: Tensor[(1, 7, 3), float64]) -> (Tensor[(1, 7, 3), float64], Tensor[(1, 7, 3), float64], Tensor[(1, 8, 16), int8], Tensor[(2, 360), float64]) {
  %265 = cast(%var_2046, dtype="float64") /* ty=Tensor[(1, 7, 3), float64] */;
  %266 = cast(%var_2046, dtype="float64") /* ty=Tensor[(1, 7, 3), float64] */;
  %267 = cast(meta[relay.Constant][9] /* ty=Tensor[(2, 360), float64] */, dtype="float64") /* ty=Tensor[(2, 360), float64] */;
  %268 = reshape(%267, newshape=[15, 16, 3]) /* ty=Tensor[(15, 16, 3), float64] */;
  %269 = @func_1884(%268) /* ty=(Tensor[(15, 16, 3), float64], Tensor[(1, 8, 16), int8], Tensor[(128), int8]) */;
  %270 = acos(%265) /* ty=Tensor[(1, 7, 3), float64] */;
  %271 = asin(%266) /* ty=Tensor[(1, 7, 3), float64] */;
  %272 = %269.1;
  (%270, %271, %272, meta[relay.Constant][9] /* ty=Tensor[(2, 360), float64] */)
}

def @func_631(%var_629: Tensor[(11, 15, 4), float64], %var_630: Tensor[(4, 32), int8]) -> (Tensor[(11, 15, 4), float64], Tensor[(1, 8, 16), int8], Tensor[(4, 32), int8], Tensor[(1, 8, 16), int8], Tensor[(1, 8, 16), int8], Tensor[(1, 8, 16), int8], Tensor[(1, 8, 16), int8], Tensor[(1, 8, 16), int8]) {
  %302 = fn (%var_552: Tensor[(11, 15, 4), float64], %var_558: Tensor[(4, 32), int8]) -> (Tensor[(11, 15, 4), float64], Tensor[(1, 8, 16), int8], Tensor[(4, 32), int8], Tensor[(1, 8, 16), int8], Tensor[(1, 8, 16), int8], Tensor[(1, 8, 16), int8], Tensor[(1, 8, 16), int8], Tensor[(1, 8, 16), int8]) {
    %273 = cast(%var_552, dtype="float64") /* ty=Tensor[(11, 15, 4), float64] */;
    %274 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(11, 15, 4), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %275 = cast(meta[relay.Constant][10] /* ty=Tensor[(11, 15, 4), float64] */, dtype="float64") /* ty=Tensor[(11, 15, 4), float64] */;
    %276 = dyn.reshape(%273, %274, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %277 = cast(%var_558, dtype="int8") /* ty=Tensor[(4, 32), int8] */;
    %278 = reshape(%277, newshape=[1, 8, 16]) /* ty=Tensor[(1, 8, 16), int8] */;
    %279 = @func_40(%278) /* ty=(Tensor[(1, 8, 16), int8],) */;
    %280 = cast(%var_558, dtype="int8") /* ty=Tensor[(4, 32), int8] */;
    %281 = reshape(%280, newshape=[1, 8, 16]) /* ty=Tensor[(1, 8, 16), int8] */;
    %282 = @func_40(%281) /* ty=(Tensor[(1, 8, 16), int8],) */;
    %283 = %279.0;
    %284 = cast(%283, dtype="int8") /* ty=Tensor[(1, 8, 16), int8] */;
    %285 = reshape(%284, newshape=[1, 8, 16]) /* ty=Tensor[(1, 8, 16), int8] */;
    %286 = @func_40(%285) /* ty=(Tensor[(1, 8, 16), int8],) */;
    %287 = cast(%var_558, dtype="int8") /* ty=Tensor[(4, 32), int8] */;
    %288 = reshape(%287, newshape=[1, 8, 16]) /* ty=Tensor[(1, 8, 16), int8] */;
    %289 = @func_40(%288) /* ty=(Tensor[(1, 8, 16), int8],) */;
    %290 = %289.0;
    %291 = cast(%290, dtype="int8") /* ty=Tensor[(1, 8, 16), int8] */;
    %292 = reshape(%291, newshape=[1, 8, 16]) /* ty=Tensor[(1, 8, 16), int8] */;
    %293 = @func_40(%292) /* ty=(Tensor[(1, 8, 16), int8],) */;
    %294 = %286.0;
    %295 = cast(%294, dtype="int8") /* ty=Tensor[(1, 8, 16), int8] */;
    %296 = reshape(%295, newshape=[1, 8, 16]) /* ty=Tensor[(1, 8, 16), int8] */;
    %297 = @func_40(%296) /* ty=(Tensor[(1, 8, 16), int8],) */;
    %298 = floor_mod(%275, %276) /* ty=Tensor[(11, 15, 4), float64] */;
    %299 = %282.0;
    %300 = %293.0;
    %301 = %297.0;
    (%298, %283, %var_558, %299, %294, %290, %300, %301)
  };
  %302(%var_629, %var_630) /* ty=(Tensor[(11, 15, 4), float64], Tensor[(1, 8, 16), int8], Tensor[(4, 32), int8], Tensor[(1, 8, 16), int8], Tensor[(1, 8, 16), int8], Tensor[(1, 8, 16), int8], Tensor[(1, 8, 16), int8], Tensor[(1, 8, 16), int8]) */
}

def @func_5574() -> (Tensor[(1, 21), float64], Tensor[(12, 2, 14), bool], Tensor[(12, 2, 14), float64]) {
  %303 = @func_4933() /* ty=(Tensor[(1, 21), float64],) */;
  %304 = @func_3903() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %305 = %304.0;
  %306 = cast(%305, dtype="float32") /* ty=Tensor[(12, 2, 14), float32] */;
  %307 = reshape(%306, newshape=[12, 2, 14]) /* ty=Tensor[(12, 2, 14), float32] */;
  %308 = @func_5261(%307) /* ty=Tensor[(12, 2, 14), float64] */;
  %309 = cast(%305, dtype="bool") /* ty=Tensor[(12, 2, 14), bool] */;
  %310 = shape_of(%308, dtype="int32") /* ty=Tensor[(3), int32] */;
  %311 = cast(%308, dtype="bool") /* ty=Tensor[(12, 2, 14), bool] */;
  %312 = dyn.reshape(%309, %310, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %313 = cast(%308, dtype="float64") /* ty=Tensor[(12, 2, 14), float64] */;
  %314 = %303.0;
  %315 = logical_and(%311, %312) /* ty=Tensor[(12, 2, 14), bool] */;
  %316 = asin(%313) /* ty=Tensor[(12, 2, 14), float64] */;
  (%314, %315, %316)
}

def @func_4145(%var_4143: Tensor[(128), int8]) -> (Tensor[(1, 7, 3), float64], Tensor[(1, 8, 16), int8], Tensor[(128), int8]) {
  @func_4142(%var_4143) /* ty=(Tensor[(1, 7, 3), float64], Tensor[(1, 8, 16), int8], Tensor[(128), int8]) */
}

def @func_7005(%var_7003: Tensor[(12, 21), float64]) -> Tensor[(12, 21), uint64] {
  @func_7002(%var_7003) /* ty=Tensor[(12, 21), uint64] */
}

def @func_7743() -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) {
  %320 = fn () -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) {
    %317 = @func_6291() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */;
    %318 = @func_6270() /* ty=Tensor[(12, 2, 14), float32] */;
    %319 = %317.0;
    (%318, %319)
  };
  %320() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */
}

def @func_5111() -> (Tensor[(4, 21), bool], Tensor[(2, 360), float64]) {
  @func_5109() /* ty=(Tensor[(4, 21), bool], Tensor[(2, 360), float64]) */
}

def @func_8886(%var_8883: Tensor[(4, 7, 14), float32], %var_8884: Tensor[(4, 7, 14), float32], %var_8885: Tensor[(21), float64]) -> (Tensor[(4, 7, 14), float32], Tensor[(1, 600), int64], Tensor[(21), float64]) {
  @func_8881(%var_8883, %var_8884, %var_8885) /* ty=(Tensor[(4, 7, 14), float32], Tensor[(1, 600), int64], Tensor[(21), float64]) */
}

def @func_5576() -> (Tensor[(1, 21), float64], Tensor[(12, 2, 14), bool], Tensor[(12, 2, 14), float64]) {
  @func_5574() /* ty=(Tensor[(1, 21), float64], Tensor[(12, 2, 14), bool], Tensor[(12, 2, 14), float64]) */
}

def @func_9396() -> (Tensor[(12, 2, 14), float32],) {
  %321 = @func_6270() /* ty=Tensor[(12, 2, 14), float32] */;
  %322 = cast(%321, dtype="float32") /* ty=Tensor[(12, 2, 14), float32] */;
  %323 = exp(%322) /* ty=Tensor[(12, 2, 14), float32] */;
  (%323,)
}

def @func_8930(%var_8918: Tensor[(450), float64]) -> (Tensor[(12, 2, 14), float32], Tensor[(6, 15, 5), float64], Tensor[(450), float64], Tensor[(12, 2, 14), float32]) {
  %324 = @func_8135() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %325 = cast(%var_8918, dtype="float64") /* ty=Tensor[(450), float64] */;
  %326 = cast(%var_8918, dtype="float64") /* ty=Tensor[(450), float64] */;
  %327 = reshape(%325, newshape=[6, 15, 5]) /* ty=Tensor[(6, 15, 5), float64] */;
  %328 = reshape(%326, newshape=[6, 15, 5]) /* ty=Tensor[(6, 15, 5), float64] */;
  %329 = @func_6235() /* ty=(Tensor[(1, 7, 3), float64], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), bool]) */;
  %330 = %324.0;
  %331 = @func_2256(%327, %328) /* ty=Tensor[(6, 15, 5), float64] */;
  %332 = %329.1;
  (%330, %331, %var_8918, %332)
}

def @func_10327() -> (Tensor[(2, 360), float64],) {
  @func_10325() /* ty=(Tensor[(2, 360), float64],) */
}

def @func_6255() -> Tensor[(12, 2, 14), float32] {
  @func_6253() /* ty=Tensor[(12, 2, 14), float32] */
}

def @func_6948(%var_6911: Tensor[(4, 21), float64], %var_6919: Tensor[(21), float64]) -> (Tensor[(12, 2, 14), float32], Tensor[(1, 8, 16), int8], Tensor[(13), float32], Tensor[(720), float64], Tensor[(21), float64], Tensor[(12, 2, 14), bool], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(4, 21), float64]) {
  %333 = @func_6065() /* ty=Tensor[(12, 2, 14), float32] */;
  %334 = @func_3917() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %335 = %334.0;
  %336 = cast(%335, dtype="float32") /* ty=Tensor[(12, 2, 14), float32] */;
  %337 = shape_of(%333, dtype="int32") /* ty=Tensor[(3), int32] */;
  %338 = cast(%333, dtype="float32") /* ty=Tensor[(12, 2, 14), float32] */;
  %339 = dyn.reshape(%336, %337, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %340 = cast(meta[relay.Constant][11] /* ty=Tensor[(13), float32] */, dtype="float32") /* ty=Tensor[(13), float32] */;
  %341 = reshape(%340, newshape=[1, 13, 1]) /* ty=Tensor[(1, 13, 1), float32] */;
  %342 = @func_2441(%341) /* ty=(Tensor[(1, 13, 1), float32], Tensor[(1, 8, 16), int8], Tensor[(1, 128), int8], Tensor[(2, 360), float64], Tensor[(1, 21), float64]) */;
  %343 = cast(%var_6919, dtype="float64") /* ty=Tensor[(21), float64] */;
  %344 = reshape(%343, newshape=[21]) /* ty=Tensor[(21), float64] */;
  %345 = @func_4558(%344) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(1), float64], Tensor[(60), float32], Tensor[(720), float64], Tensor[(720), float64], Tensor[(21), float64]) */;
  %346 = @func_5574() /* ty=(Tensor[(1, 21), float64], Tensor[(12, 2, 14), bool], Tensor[(12, 2, 14), float64]) */;
  %347 = @func_5398() /* ty=(Tensor[(4, 21), float32],) */;
  %348 = %347.0;
  %349 = cast(%348, dtype="float64") /* ty=Tensor[(4, 21), float64] */;
  %350 = asin(%349) /* ty=Tensor[(4, 21), float64] */;
  %351 = cast(%var_6911, dtype="bool") /* ty=Tensor[(4, 21), bool] */;
  %352 = shape_of(%350, dtype="int32") /* ty=Tensor[(2), int32] */;
  %353 = cast(%350, dtype="bool") /* ty=Tensor[(4, 21), bool] */;
  %354 = dyn.reshape(%351, %352, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %355 = logical_or(%353, %354) /* ty=Tensor[(4, 21), bool] */;
  %356 = cast(%355, dtype="float64") /* ty=Tensor[(4, 21), float64] */;
  %357 = shape_of(%350, dtype="int32") /* ty=Tensor[(2), int32] */;
  %358 = cast(%350, dtype="float64") /* ty=Tensor[(4, 21), float64] */;
  %359 = dyn.reshape(%356, %357, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %360 = floor_divide(%338, %339) /* ty=Tensor[(12, 2, 14), float32] */;
  %361 = %342.1;
  %362 = %345.5;
  %363 = %346.1;
  %364 = @func_4620() /* ty=Tensor[(12, 2, 14), float32] */;
  %365 = @func_6762() /* ty=Tensor[(12, 2, 14), float32] */;
  %366 = power(%358, %359) /* ty=Tensor[(4, 21), float64] */;
  (%360, %361, meta[relay.Constant][11] /* ty=Tensor[(13), float32] */, %362, %var_6919, %363, %364, %365, %366)
}

def @func_6952(%var_6950: Tensor[(4, 21), float64], %var_6951: Tensor[(21), float64]) -> (Tensor[(12, 2, 14), float32], Tensor[(1, 8, 16), int8], Tensor[(13), float32], Tensor[(720), float64], Tensor[(21), float64], Tensor[(12, 2, 14), bool], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(4, 21), float64]) {
  @func_6948(%var_6950, %var_6951) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 8, 16), int8], Tensor[(13), float32], Tensor[(720), float64], Tensor[(21), float64], Tensor[(12, 2, 14), bool], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(4, 21), float64]) */
}

def @func_8196(%var_8195: Tensor[(4, 21), float32]) -> (Tensor[(4, 21), float64],) {
  %374 = fn (%var_8175: Tensor[(4, 21), float32]) -> (Tensor[(4, 21), float64],) {
    %367 = @func_4983() /* ty=(Tensor[(1, 21), float64], Tensor[(1, 8, 16), int8], Tensor[(13), float32]) */;
    %368 = %367.0;
    %369 = cast(%368, dtype="float32") /* ty=Tensor[(1, 21), float32] */;
    %370 = sqrt(%369) /* ty=Tensor[(1, 21), float32] */;
    %371 = cast(%370, dtype="float64") /* ty=Tensor[(1, 21), float64] */;
    %372 = cast(%var_8175, dtype="float64") /* ty=Tensor[(4, 21), float64] */;
    %373 = mod(%371, %372) /* ty=Tensor[(4, 21), float64] */;
    (%373,)
  };
  %374(%var_8195) /* ty=(Tensor[(4, 21), float64],) */
}

def @func_6824() -> (Tensor[(1, 21), float64],) {
  @func_6822() /* ty=(Tensor[(1, 21), float64],) */
}

def @func_8578(%var_8558: Tensor[(128), int8]) -> (Tensor[(2, 360), float64], Tensor[(12, 2, 14), float32], Tensor[(16, 14, 9), uint8], Tensor[(128), int8], Tensor[(12, 2, 14), float32]) {
  %375 = @func_7015() /* ty=(Tensor[(2, 360), float64],) */;
  %376 = @func_4104() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %377 = cast(%var_8558, dtype="int8") /* ty=Tensor[(128), int8] */;
  %378 = reshape(%377, newshape=[128]) /* ty=Tensor[(128), int8] */;
  %379 = @func_4386(%378) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(16, 14, 9), uint8], Tensor[(2016), float64], Tensor[(128), int8]) */;
  %380 = @func_7742() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */;
  %381 = %375.0;
  %382 = %376.0;
  %383 = %379.1;
  %384 = %380.1;
  (%381, %382, %383, %var_8558, %384)
}

def @func_9801() -> Tensor[(16, 8, 8), float32] {
  @func_9799() /* ty=Tensor[(16, 8, 8), float32] */
}

def @func_4105() -> (Tensor[(12, 2, 14), float32],) {
  %388 = fn () -> (Tensor[(12, 2, 14), float32],) {
    %385 = @func_4071() /* ty=Tensor[(12, 2, 14), float32] */;
    %386 = cast(%385, dtype="float32") /* ty=Tensor[(12, 2, 14), float32] */;
    %387 = cosh(%386) /* ty=Tensor[(12, 2, 14), float32] */;
    (%387,)
  };
  %388() /* ty=(Tensor[(12, 2, 14), float32],) */
}

def @func_3836() -> Tensor[(12, 2, 14), float32] {
  %390 = fn () -> Tensor[(12, 2, 14), float32] {
    %389 = cast(meta[relay.Constant][12] /* ty=Tensor[(12, 2, 14), float32] */, dtype="float32") /* ty=Tensor[(12, 2, 14), float32] */;
    tan(%389) /* ty=Tensor[(12, 2, 14), float32] */
  };
  %390() /* ty=Tensor[(12, 2, 14), float32] */
}

def @func_6291() -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) {
  %391 = @func_4104() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %392 = @func_5732() /* ty=(Tensor[(1, 21), float64], Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64]) */;
  %393 = %391.0;
  %394 = %392.1;
  (%393, %394)
}

def @func_7127() -> (Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(12, 2, 14), float32]) {
  %395 = @func_3987() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64]) */;
  %396 = @func_7077() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %397 = @func_5512() /* ty=Tensor[(12, 2, 14), float32] */;
  %398 = %395.1;
  %399 = %396.0;
  (%397, %398, %399)
}

def @func_2362(%var_2325: Tensor[(10, 15, 4), int64], %var_2326: Tensor[(10, 15, 4), int64], %var_2335: Tensor[(720), float64]) -> (Tensor[(10, 15, 4), int64], Tensor[(15, 16, 3), float64], Tensor[(720), float64]) {
  %400 = cast(%var_2326, dtype="int64") /* ty=Tensor[(10, 15, 4), int64] */;
  %401 = shape_of(%var_2325, dtype="int32") /* ty=Tensor[(3), int32] */;
  %402 = cast(%var_2325, dtype="int64") /* ty=Tensor[(10, 15, 4), int64] */;
  %403 = dyn.reshape(%400, %401, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %404 = cast(%var_2335, dtype="float64") /* ty=Tensor[(720), float64] */;
  %405 = reshape(%404, newshape=[15, 16, 3]) /* ty=Tensor[(15, 16, 3), float64] */;
  %406 = @func_1884(%405) /* ty=(Tensor[(15, 16, 3), float64], Tensor[(1, 8, 16), int8], Tensor[(128), int8]) */;
  %407 = multiply(%402, %403) /* ty=Tensor[(10, 15, 4), int64] */;
  %408 = %406.0;
  (%407, %408, %var_2335)
}

def @func_10577() -> Tensor[(12, 2, 14), float32] {
  %410 = fn () -> Tensor[(12, 2, 14), float32] {
    %409 = @func_8806() /* ty=(Tensor[(12, 2, 14), float32],) */;
    %409.0
  };
  %410() /* ty=Tensor[(12, 2, 14), float32] */
}

def @func_10598() -> (Tensor[(7, 13, 4), float64],) {
  %411 = @func_9531() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(7, 13, 4), float64], Tensor[(364), float64]) */;
  %412 = %411.1;
  (%412,)
}

def @func_9638() -> Tensor[(12, 2, 14), float32] {
  %414 = fn () -> Tensor[(12, 2, 14), float32] {
    %413 = @func_3937() /* ty=(Tensor[(12, 2, 14), float32],) */;
    %413.0
  };
  %414() /* ty=Tensor[(12, 2, 14), float32] */
}

def @func_6469() -> Tensor[(12, 2, 14), float32] {
  %416 = fn () -> Tensor[(12, 2, 14), float32] {
    %415 = @func_4104() /* ty=(Tensor[(12, 2, 14), float32],) */;
    %415.0
  };
  %416() /* ty=Tensor[(12, 2, 14), float32] */
}

def @func_857(%var_855: Tensor[(16, 14, 9), float64], %var_856: Tensor[(64, 2), int8]) -> (Tensor[(1, 8, 16), int8], Tensor[(64, 2), int8], Tensor[(16, 14, 9), uint8]) {
  %433 = fn (%var_813: Tensor[(16, 14, 9), float64], %var_833: Tensor[(64, 2), int8]) -> (Tensor[(1, 8, 16), int8], Tensor[(64, 2), int8], Tensor[(16, 14, 9), uint8]) {
    %417 = cast(%var_833, dtype="int8") /* ty=Tensor[(64, 2), int8] */;
    %418 = reshape(%417, newshape=[1, 8, 16]) /* ty=Tensor[(1, 8, 16), int8] */;
    %419 = @func_40(%418) /* ty=(Tensor[(1, 8, 16), int8],) */;
    %420 = cast(%var_813, dtype="float64") /* ty=Tensor[(16, 14, 9), float64] */;
    %421 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(16, 14, 9), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %422 = cast(meta[relay.Constant][13] /* ty=Tensor[(16, 14, 9), float64] */, dtype="float64") /* ty=Tensor[(16, 14, 9), float64] */;
    %423 = dyn.reshape(%420, %421, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %424 = divide(%422, %423) /* ty=Tensor[(16, 14, 9), float64] */;
    %425 = cast(%424, dtype="float64") /* ty=Tensor[(16, 14, 9), float64] */;
    %426 = log10(%425) /* ty=Tensor[(16, 14, 9), float64] */;
    %427 = cast(%424, dtype="uint8") /* ty=Tensor[(16, 14, 9), uint8] */;
    %428 = shape_of(%426, dtype="int32") /* ty=Tensor[(3), int32] */;
    %429 = cast(%426, dtype="uint8") /* ty=Tensor[(16, 14, 9), uint8] */;
    %430 = dyn.reshape(%427, %428, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %431 = %419.0;
    %432 = multiply(%429, %430) /* ty=Tensor[(16, 14, 9), uint8] */;
    (%431, %var_833, %432)
  };
  %433(%var_855, %var_856) /* ty=(Tensor[(1, 8, 16), int8], Tensor[(64, 2), int8], Tensor[(16, 14, 9), uint8]) */
}

def @func_11982() -> Tensor[(13), float32] {
  @func_11980() /* ty=Tensor[(13), float32] */
}

def @func_5689(%var_5688: Tensor[(11, 15, 3), float64]) -> Tensor[(11, 15, 3), float64] {
  %435 = fn (%var_5676: Tensor[(11, 15, 3), float64]) -> Tensor[(11, 15, 3), float64] {
    %434 = cast(%var_5676, dtype="float64") /* ty=Tensor[(11, 15, 3), float64] */;
    sqrt(%434) /* ty=Tensor[(11, 15, 3), float64] */
  };
  %435(%var_5688) /* ty=Tensor[(11, 15, 3), float64] */
}

def @func_8587() -> Tensor[(12, 2, 14), float32] {
  @func_8585() /* ty=Tensor[(12, 2, 14), float32] */
}

def @func_9930() -> (Tensor[(12, 2, 14), float32],) {
  @func_9928() /* ty=(Tensor[(12, 2, 14), float32],) */
}

def @func_11196() -> (Tensor[(12, 2, 14), float32],) {
  %438 = fn () -> (Tensor[(12, 2, 14), float32],) {
    %436 = @func_10619() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */;
    %437 = %436.0;
    (%437,)
  };
  %438() /* ty=(Tensor[(12, 2, 14), float32],) */
}

def @func_11023() -> Tensor[(1, 21), float64] {
  %440 = fn () -> Tensor[(1, 21), float64] {
    %439 = @func_4337() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64]) */;
    %439.1
  };
  %440() /* ty=Tensor[(1, 21), float64] */
}

def @func_11513() -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) {
  @func_11511() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */
}

def @func_7202(%var_7201: Tensor[(12, 2, 14), float32]) -> (Tensor[(12, 2, 14), float64],) {
  %450 = fn (%var_7185: Tensor[(12, 2, 14), float32]) -> (Tensor[(12, 2, 14), float64],) {
    %441 = @func_3864() /* ty=(Tensor[(12, 2, 14), float32],) */;
    %442 = %441.0;
    %443 = cast(%var_7185, dtype="bool") /* ty=Tensor[(12, 2, 14), bool] */;
    %444 = shape_of(%442, dtype="int32") /* ty=Tensor[(3), int32] */;
    %445 = cast(%442, dtype="bool") /* ty=Tensor[(12, 2, 14), bool] */;
    %446 = dyn.reshape(%443, %444, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %447 = not_equal(%445, %446) /* ty=Tensor[(12, 2, 14), bool] */;
    %448 = cast(%447, dtype="float64") /* ty=Tensor[(12, 2, 14), float64] */;
    %449 = sinh(%448) /* ty=Tensor[(12, 2, 14), float64] */;
    (%449,)
  };
  %450(%var_7201) /* ty=(Tensor[(12, 2, 14), float64],) */
}

def @func_6453(%var_6431: Tensor[(1, 21), float64]) -> Tensor[(?, 21), bool] {
  %451 = @func_5732() /* ty=(Tensor[(1, 21), float64], Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64]) */;
  %452 = %451.2;
  %453 = cast(%var_6431, dtype="bool") /* ty=Tensor[(1, 21), bool] */;
  %454 = shape_of(%452, dtype="int32") /* ty=Tensor[(2), int32] */;
  %455 = cast(%452, dtype="bool") /* ty=Tensor[(1, 21), bool] */;
  %456 = dyn.reshape(%453, %454, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  greater_equal(%455, %456) /* ty=Tensor[(?, 21), bool] */
}

def @func_8623(%var_8621: Tensor[(6, 21), float64], %var_8622: Tensor[(12, 21), float64]) -> (Tensor[(12, 2, 14), float32], Tensor[(6, 21), int16], Tensor[(12, 21), float64]) {
  %467 = fn (%var_8607: Tensor[(6, 21), float64], %var_8614: Tensor[(12, 21), float64]) -> (Tensor[(12, 2, 14), float32], Tensor[(6, 21), int16], Tensor[(12, 21), float64]) {
    %457 = @func_3987() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64]) */;
    %458 = @func_4933() /* ty=(Tensor[(1, 21), float64],) */;
    %459 = %458.0;
    %460 = cast(%459, dtype="int16") /* ty=Tensor[(1, 21), int16] */;
    %461 = cast(%var_8607, dtype="int16") /* ty=Tensor[(6, 21), int16] */;
    %462 = cast(%459, dtype="float64") /* ty=Tensor[(1, 21), float64] */;
    %463 = cast(%var_8614, dtype="float64") /* ty=Tensor[(12, 21), float64] */;
    %464 = %457.0;
    %465 = subtract(%460, %461) /* ty=Tensor[(6, 21), int16] */;
    %466 = floor_divide(%462, %463) /* ty=Tensor[(12, 21), float64] */;
    (%464, %465, %466)
  };
  %467(%var_8621, %var_8622) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(6, 21), int16], Tensor[(12, 21), float64]) */
}

def @func_12387() -> Tensor[(12, 2, 14), float32] {
  %469 = fn () -> Tensor[(12, 2, 14), float32] {
    %468 = @func_8432() /* ty=(Tensor[(12, 2, 14), float32],) */;
    %468.0
  };
  %469() /* ty=Tensor[(12, 2, 14), float32] */
}

def @func_4197(%var_4195: Tensor[(1, 1, 1), float64], %var_4196: Tensor[(60), float32]) -> (Tensor[(12, 2, 14), float32], Tensor[(1, 1, 1), float32], Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(60), float32]) {
  @func_4193(%var_4195, %var_4196) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 1, 1), float32], Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(60), float32]) */
}

def @func_6293() -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) {
  @func_6291() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */
}

def @func_12023(%var_12022: Tensor[(9, 1, 12), float32]) -> Tensor[(9, 1, 12), float32] {
  %471 = fn (%var_12013: Tensor[(9, 1, 12), float32]) -> Tensor[(9, 1, 12), float32] {
    %470 = cast(%var_12013, dtype="float32") /* ty=Tensor[(9, 1, 12), float32] */;
    tan(%470) /* ty=Tensor[(9, 1, 12), float32] */
  };
  %471(%var_12022) /* ty=Tensor[(9, 1, 12), float32] */
}

def @func_11164() -> (Tensor[(12, 2, 14), float32],) {
  %474 = fn () -> (Tensor[(12, 2, 14), float32],) {
    %472 = @func_6162() /* ty=(Tensor[(12, 2, 14), float32],) */;
    %473 = %472.0;
    (%473,)
  };
  %474() /* ty=(Tensor[(12, 2, 14), float32],) */
}

def @func_11113(%var_11111: Tensor[(2, 180), float32], %var_11112: Tensor[(147), float64]) -> (Tensor[(12, 2, 14), float32], Tensor[(2, 180), float32], Tensor[(147), float64], Tensor[(12, 2, 14), bool], Tensor[(4, 21), float32], Tensor[(12, 2, 14), float32]) {
  %491 = fn (%var_11043: Tensor[(2, 180), float32], %var_11044: Tensor[(147), float64]) -> (Tensor[(12, 2, 14), float32], Tensor[(2, 180), float32], Tensor[(147), float64], Tensor[(12, 2, 14), bool], Tensor[(4, 21), float32], Tensor[(12, 2, 14), float32]) {
    %475 = @func_7077() /* ty=(Tensor[(12, 2, 14), float32],) */;
    %476 = @func_5574() /* ty=(Tensor[(1, 21), float64], Tensor[(12, 2, 14), bool], Tensor[(12, 2, 14), float64]) */;
    %477 = cast(%var_11043, dtype="float32") /* ty=Tensor[(2, 180), float32] */;
    %478 = cast(%var_11044, dtype="float64") /* ty=Tensor[(147), float64] */;
    %479 = reshape(%477, newshape=[1, 360]) /* ty=Tensor[(1, 360), float32] */;
    %480 = reshape(%478, newshape=[7, 21]) /* ty=Tensor[(7, 21), float64] */;
    %481 = @func_7407(%479, %480) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(6, 15, 5), float64], Tensor[(1, 360), float32], Tensor[(364), float64], Tensor[(4, 21), bool], Tensor[(?, 8, 16), uint32], Tensor[(7, 21), float32], Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64]) */;
    %482 = %481.4;
    %483 = cast(%482, dtype="float64") /* ty=Tensor[(4, 21), float64] */;
    %484 = log2(%483) /* ty=Tensor[(4, 21), float64] */;
    %485 = cast(%484, dtype="float32") /* ty=Tensor[(4, 21), float32] */;
    %486 = @func_8806() /* ty=(Tensor[(12, 2, 14), float32],) */;
    %487 = %475.0;
    %488 = %476.1;
    %489 = sqrt(%485) /* ty=Tensor[(4, 21), float32] */;
    %490 = %486.0;
    (%487, %var_11043, %var_11044, %488, %489, %490)
  };
  %491(%var_11111, %var_11112) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(2, 180), float32], Tensor[(147), float64], Tensor[(12, 2, 14), bool], Tensor[(4, 21), float32], Tensor[(12, 2, 14), float32]) */
}

def @func_3185(%var_3184: Tensor[(7, 13, 4), float64]) -> Tensor[(7, 13, 4), float64] {
  %493 = fn (%var_3180: Tensor[(7, 13, 4), float64]) -> Tensor[(7, 13, 4), float64] {
    %492 = cast(%var_3180, dtype="float64") /* ty=Tensor[(7, 13, 4), float64] */;
    asinh(%492) /* ty=Tensor[(7, 13, 4), float64] */
  };
  %493(%var_3184) /* ty=Tensor[(7, 13, 4), float64] */
}

def @func_10187() -> (Tensor[(16, 8, 8), float32], Tensor[(12, 2, 14), float32], Tensor[(?, 21), uint32]) {
  %494 = @func_8806() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %495 = @func_6376() /* ty=Tensor[(1, 21), float64] */;
  %496 = cast(%495, dtype="float64") /* ty=Tensor[(1, 21), float64] */;
  %497 = log(%496) /* ty=Tensor[(1, 21), float64] */;
  %498 = cast(%495, dtype="uint32") /* ty=Tensor[(1, 21), uint32] */;
  %499 = shape_of(%497, dtype="int32") /* ty=Tensor[(2), int32] */;
  %500 = cast(%497, dtype="uint32") /* ty=Tensor[(1, 21), uint32] */;
  %501 = dyn.reshape(%498, %499, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %502 = @func_8661() /* ty=Tensor[(16, 8, 8), float32] */;
  %503 = %494.0;
  %504 = multiply(%500, %501) /* ty=Tensor[(?, 21), uint32] */;
  (%502, %503, %504)
}

def @func_5857(%var_5856: Tensor[(180, 4), float64]) -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(180, 4), float64]) {
  %511 = fn (%var_5818: Tensor[(180, 4), float64]) -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(180, 4), float64]) {
    %505 = @func_5350() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(13), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */;
    %506 = cast(%var_5818, dtype="float64") /* ty=Tensor[(180, 4), float64] */;
    %507 = reshape(%506, newshape=[2, 360]) /* ty=Tensor[(2, 360), float64] */;
    %508 = @func_4842(%507) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64], Tensor[(15, 16, 3), float64], Tensor[(2, 360), float64], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */;
    %509 = %505.0;
    %510 = %508.5;
    (%509, %510, %var_5818)
  };
  %511(%var_5856) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(180, 4), float64]) */
}

def @func_8662() -> Tensor[(16, 8, 8), float32] {
  %513 = fn () -> Tensor[(16, 8, 8), float32] {
    %512 = cast(meta[relay.Constant][14] /* ty=Tensor[(16, 8, 8), float32] */, dtype="float32") /* ty=Tensor[(16, 8, 8), float32] */;
    log(%512) /* ty=Tensor[(16, 8, 8), float32] */
  };
  %513() /* ty=Tensor[(16, 8, 8), float32] */
}

def @func_11625() -> (Tensor[(12, 2, 14), float32], Tensor[(1, 720), float64], Tensor[(21), float64], Tensor[(12, 2, 14), float32]) {
  %520 = fn () -> (Tensor[(12, 2, 14), float32], Tensor[(1, 720), float64], Tensor[(21), float64], Tensor[(12, 2, 14), float32]) {
    %514 = cast(meta[relay.Constant][15] /* ty=Tensor[(21), float64] */, dtype="float64") /* ty=Tensor[(21), float64] */;
    %515 = reshape(%514, newshape=[21]) /* ty=Tensor[(21), float64] */;
    %516 = @func_4948(%515) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 600), int64], Tensor[(1, 720), float64], Tensor[(21), float64]) */;
    %517 = @func_6468() /* ty=Tensor[(12, 2, 14), float32] */;
    %518 = %516.2;
    %519 = @func_10576() /* ty=Tensor[(12, 2, 14), float32] */;
    (%517, %518, meta[relay.Constant][15] /* ty=Tensor[(21), float64] */, %519)
  };
  %520() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 720), float64], Tensor[(21), float64], Tensor[(12, 2, 14), float32]) */
}

def @func_3598(%var_3596: float32, %var_3597: Tensor[(1, 6, 10), float32]) -> (Tensor[(1, 6, 10), bool], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64], Tensor[(?, 6, 10), bool]) {
  %539 = fn (%var_3556: float32, %var_3557: Tensor[(1, 6, 10), float32]) -> (Tensor[(1, 6, 10), bool], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64], Tensor[(?, 6, 10), bool]) {
    %521 = cast(%var_3556, dtype="bool") /* ty=bool */;
    %522 = cast(%var_3557, dtype="bool") /* ty=Tensor[(1, 6, 10), bool] */;
    %523 = cast(meta[relay.Constant][16] /* ty=Tensor[(1, 21), float64] */, dtype="float64") /* ty=Tensor[(1, 21), float64] */;
    %524 = reshape(%523, newshape=[1, 7, 3]) /* ty=Tensor[(1, 7, 3), float64] */;
    %525 = @func_2092(%524) /* ty=(Tensor[(1, 7, 3), float64], Tensor[(1, 7, 3), float64], Tensor[(1, 8, 16), int8], Tensor[(2, 360), float64]) */;
    %526 = cast(%var_3556, dtype="float32") /* ty=float32 */;
    %527 = cast(%var_3557, dtype="float32") /* ty=Tensor[(1, 6, 10), float32] */;
    %528 = mod(%526, %527) /* ty=Tensor[(1, 6, 10), float32] */;
    %529 = cast(%528, dtype="int16") /* ty=Tensor[(1, 6, 10), int16] */;
    %530 = cast(%var_3556, dtype="int16") /* ty=int16 */;
    %531 = add(%529, %530) /* ty=Tensor[(1, 6, 10), int16] */;
    %532 = cast(%528, dtype="bool") /* ty=Tensor[(1, 6, 10), bool] */;
    %533 = shape_of(%531, dtype="int32") /* ty=Tensor[(3), int32] */;
    %534 = cast(%531, dtype="bool") /* ty=Tensor[(1, 6, 10), bool] */;
    %535 = dyn.reshape(%532, %533, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %536 = greater_equal(%521, %522) /* ty=Tensor[(1, 6, 10), bool] */;
    %537 = %525.1;
    %538 = greater(%534, %535) /* ty=Tensor[(?, 6, 10), bool] */;
    (%536, %537, meta[relay.Constant][16] /* ty=Tensor[(1, 21), float64] */, %538)
  };
  %539(%var_3596, %var_3597) /* ty=(Tensor[(1, 6, 10), bool], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64], Tensor[(?, 6, 10), bool]) */
}

def @func_4844(%var_4843: Tensor[(2, 360), float64]) -> (Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64], Tensor[(15, 16, 3), float64], Tensor[(2, 360), float64], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) {
  %555 = fn (%var_4822: Tensor[(2, 360), float64]) -> (Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64], Tensor[(15, 16, 3), float64], Tensor[(2, 360), float64], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) {
    %540 = @func_3937() /* ty=(Tensor[(12, 2, 14), float32],) */;
    %541 = @func_3987() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64]) */;
    %542 = cast(%var_4822, dtype="float64") /* ty=Tensor[(2, 360), float64] */;
    %543 = reshape(%542, newshape=[15, 16, 3]) /* ty=Tensor[(15, 16, 3), float64] */;
    %544 = @func_1884(%543) /* ty=(Tensor[(15, 16, 3), float64], Tensor[(1, 8, 16), int8], Tensor[(128), int8]) */;
    %545 = @func_3903() /* ty=(Tensor[(12, 2, 14), float32],) */;
    %546 = @func_4337() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64]) */;
    %547 = %546.0;
    %548 = cast(%547, dtype="float32") /* ty=Tensor[(12, 2, 14), float32] */;
    %549 = %540.0;
    %550 = %541.2;
    %551 = %544.0;
    %552 = %545.0;
    %553 = cos(%548) /* ty=Tensor[(12, 2, 14), float32] */;
    %554 = @func_4071() /* ty=Tensor[(12, 2, 14), float32] */;
    (%549, %550, %551, %var_4822, %552, %553, %554)
  };
  %555(%var_4843) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64], Tensor[(15, 16, 3), float64], Tensor[(2, 360), float64], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */
}

def @func_9355(%var_9353: Tensor[(600), int64]) -> (Tensor[(16, 8, 8), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(600), int64], Tensor[(12, 2, 14), float32]) {
  @func_9352(%var_9353) /* ty=(Tensor[(16, 8, 8), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(600), int64], Tensor[(12, 2, 14), float32]) */
}

def @func_11746(%var_11745: Tensor[(600), int64]) -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(600), int64], Tensor[(600), int64], Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(12, 2, 14), float32]) {
  %567 = fn (%var_11680: Tensor[(600), int64]) -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(600), int64], Tensor[(600), int64], Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(12, 2, 14), float32]) {
    %556 = cast(%var_11680, dtype="int64") /* ty=Tensor[(600), int64] */;
    %557 = reshape(%556, newshape=[600]) /* ty=Tensor[(600), int64] */;
    %558 = @func_9352(%557) /* ty=(Tensor[(16, 8, 8), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(600), int64], Tensor[(12, 2, 14), float32]) */;
    %559 = @func_3987() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64]) */;
    %560 = @func_9045() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */;
    %561 = @func_6270() /* ty=Tensor[(12, 2, 14), float32] */;
    %562 = @func_8305() /* ty=Tensor[(12, 2, 14), float32] */;
    %563 = %558.3;
    %564 = @func_8585() /* ty=Tensor[(12, 2, 14), float32] */;
    %565 = %559.1;
    %566 = %560.1;
    (%561, %562, %563, %var_11680, %564, %565, %566)
  };
  %567(%var_11745) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(600), int64], Tensor[(600), int64], Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(12, 2, 14), float32]) */
}

def @func_8739() -> (Tensor[(12, 2, 14), float32], Tensor[(60), float32], Tensor[(21), float64], Tensor[(1, 8, 16), int8], Tensor[(12, 2, 14), float32], Tensor[(126), float64]) {
  %568 = cast(meta[relay.Constant][17] /* ty=Tensor[(21), float64] */, dtype="float64") /* ty=Tensor[(21), float64] */;
  %569 = reshape(%568, newshape=[21]) /* ty=Tensor[(21), float64] */;
  %570 = @func_4558(%569) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(1), float64], Tensor[(60), float32], Tensor[(720), float64], Tensor[(720), float64], Tensor[(21), float64]) */;
  %571 = @func_4983() /* ty=(Tensor[(1, 21), float64], Tensor[(1, 8, 16), int8], Tensor[(13), float32]) */;
  %572 = %570.3;
  %573 = cast(%572, dtype="float32") /* ty=Tensor[(60), float32] */;
  %574 = cast(meta[relay.Constant][18] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %575 = cast(meta[relay.Constant][18] /* ty=Tensor[(126), float64] */, dtype="int8") /* ty=Tensor[(126), int8] */;
  %576 = reshape(%573, newshape=[15, 4]) /* ty=Tensor[(15, 4), float32] */;
  %577 = reshape(%574, newshape=[6, 21]) /* ty=Tensor[(6, 21), float64] */;
  %578 = reshape(%575, newshape=[6, 21]) /* ty=Tensor[(6, 21), int8] */;
  %579 = @func_6737(%576, %577, %578) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(2016), float64], Tensor[(?, 8, 16), int8], Tensor[(1, 7, 3), float64], float32, Tensor[(15, 4), float32], Tensor[(6, 21), uint8], Tensor[(4, 21), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(6, 21), float64]) */;
  %580 = @func_6762() /* ty=Tensor[(12, 2, 14), float32] */;
  %581 = %571.1;
  %582 = %579.8;
  (%580, %572, meta[relay.Constant][17] /* ty=Tensor[(21), float64] */, %581, %582, meta[relay.Constant][18] /* ty=Tensor[(126), float64] */)
}

def @func_8371(%var_8370: float32) -> (Tensor[(12, 2, 14), bool], Tensor[(12, 2, 14), float64], Tensor[(?, 6, 10), bool], float32, Tensor[(60), float32]) {
  %595 = fn (%var_8363: float32) -> (Tensor[(12, 2, 14), bool], Tensor[(12, 2, 14), float64], Tensor[(?, 6, 10), bool], float32, Tensor[(60), float32]) {
    %583 = @func_7992() /* ty=(Tensor[(12, 2, 14), bool], Tensor[(2, 360), float64]) */;
    %584 = @func_5611() /* ty=(Tensor[(12, 2, 14), float32],) */;
    %585 = %584.0;
    %586 = cast(%585, dtype="float64") /* ty=Tensor[(12, 2, 14), float64] */;
    %587 = cast(%var_8363, dtype="float32") /* ty=float32 */;
    %588 = cast(meta[relay.Constant][19] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
    %589 = reshape(%587, newshape=[]) /* ty=float32 */;
    %590 = reshape(%588, newshape=[1, 6, 10]) /* ty=Tensor[(1, 6, 10), float32] */;
    %591 = @func_3595(%589, %590) /* ty=(Tensor[(1, 6, 10), bool], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64], Tensor[(?, 6, 10), bool]) */;
    %592 = %583.0;
    %593 = acosh(%586) /* ty=Tensor[(12, 2, 14), float64] */;
    %594 = %591.3;
    (%592, %593, %594, %var_8363, meta[relay.Constant][19] /* ty=Tensor[(60), float32] */)
  };
  %595(%var_8370) /* ty=(Tensor[(12, 2, 14), bool], Tensor[(12, 2, 14), float64], Tensor[(?, 6, 10), bool], float32, Tensor[(60), float32]) */
}

def @func_11229(%var_11228: Tensor[(1), float64]) -> (Tensor[(13), float32], Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64], Tensor[(1, 7, 3), float64], Tensor[(1), float64], Tensor[(30, 2), float32]) {
  %607 = fn (%var_11224: Tensor[(1), float64]) -> (Tensor[(13), float32], Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64], Tensor[(1, 7, 3), float64], Tensor[(1), float64], Tensor[(30, 2), float32]) {
    %596 = @func_10871() /* ty=(Tensor[(13), float32], Tensor[(12, 2, 14), float32]) */;
    %597 = @func_4933() /* ty=(Tensor[(1, 21), float64],) */;
    %598 = cast(%var_11224, dtype="float64") /* ty=Tensor[(1), float64] */;
    %599 = cast(meta[relay.Constant][20] /* ty=Tensor[(30, 2), float32] */, dtype="float32") /* ty=Tensor[(30, 2), float32] */;
    %600 = reshape(%598, newshape=[1, 1, 1]) /* ty=Tensor[(1, 1, 1), float64] */;
    %601 = reshape(%599, newshape=[60]) /* ty=Tensor[(60), float32] */;
    %602 = @func_4193(%600, %601) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 1, 1), float32], Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(60), float32]) */;
    %603 = %596.0;
    %604 = @func_3835() /* ty=Tensor[(12, 2, 14), float32] */;
    %605 = %597.0;
    %606 = %602.3;
    (%603, %604, %605, %606, %var_11224, meta[relay.Constant][20] /* ty=Tensor[(30, 2), float32] */)
  };
  %607(%var_11228) /* ty=(Tensor[(13), float32], Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64], Tensor[(1, 7, 3), float64], Tensor[(1), float64], Tensor[(30, 2), float32]) */
}

def @func_4388(%var_4387: Tensor[(128), int8]) -> (Tensor[(12, 2, 14), float32], Tensor[(16, 14, 9), uint8], Tensor[(2016), float64], Tensor[(128), int8]) {
  %616 = fn (%var_4382: Tensor[(128), int8]) -> (Tensor[(12, 2, 14), float32], Tensor[(16, 14, 9), uint8], Tensor[(2016), float64], Tensor[(128), int8]) {
    %608 = @func_3987() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64]) */;
    %609 = cast(meta[relay.Constant][21] /* ty=Tensor[(2016), float64] */, dtype="float64") /* ty=Tensor[(2016), float64] */;
    %610 = cast(%var_4382, dtype="int8") /* ty=Tensor[(128), int8] */;
    %611 = reshape(%609, newshape=[16, 14, 9]) /* ty=Tensor[(16, 14, 9), float64] */;
    %612 = reshape(%610, newshape=[64, 2]) /* ty=Tensor[(64, 2), int8] */;
    %613 = @func_854(%611, %612) /* ty=(Tensor[(1, 8, 16), int8], Tensor[(64, 2), int8], Tensor[(16, 14, 9), uint8]) */;
    %614 = %608.0;
    %615 = %613.2;
    (%614, %615, meta[relay.Constant][21] /* ty=Tensor[(2016), float64] */, %var_4382)
  };
  %616(%var_4387) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(16, 14, 9), uint8], Tensor[(2016), float64], Tensor[(128), int8]) */
}

def @func_11899() -> (Tensor[(4, 21), float32],) {
  %619 = fn () -> (Tensor[(4, 21), float32],) {
    %617 = @func_5398() /* ty=(Tensor[(4, 21), float32],) */;
    %618 = %617.0;
    (%618,)
  };
  %619() /* ty=(Tensor[(4, 21), float32],) */
}

def @func_11980() -> Tensor[(13), float32] {
  %620 = @func_7853() /* ty=(Tensor[(13), float32], Tensor[(1, 21), float64]) */;
  %620.0
}

def @func_8581(%var_8579: Tensor[(128), int8]) -> (Tensor[(2, 360), float64], Tensor[(12, 2, 14), float32], Tensor[(16, 14, 9), uint8], Tensor[(128), int8], Tensor[(12, 2, 14), float32]) {
  @func_8578(%var_8579) /* ty=(Tensor[(2, 360), float64], Tensor[(12, 2, 14), float32], Tensor[(16, 14, 9), uint8], Tensor[(128), int8], Tensor[(12, 2, 14), float32]) */
}

def @func_10873() -> (Tensor[(13), float32], Tensor[(12, 2, 14), float32]) {
  @func_10871() /* ty=(Tensor[(13), float32], Tensor[(12, 2, 14), float32]) */
}

def @func_7854() -> (Tensor[(13), float32], Tensor[(1, 21), float64]) {
  %624 = fn () -> (Tensor[(13), float32], Tensor[(1, 21), float64]) {
    %621 = @func_5350() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(13), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */;
    %622 = %621.1;
    %623 = @func_6376() /* ty=Tensor[(1, 21), float64] */;
    (%622, %623)
  };
  %624() /* ty=(Tensor[(13), float32], Tensor[(1, 21), float64]) */
}

def @func_8933(%var_8931: Tensor[(450), float64]) -> (Tensor[(12, 2, 14), float32], Tensor[(6, 15, 5), float64], Tensor[(450), float64], Tensor[(12, 2, 14), float32]) {
  @func_8930(%var_8931) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(6, 15, 5), float64], Tensor[(450), float64], Tensor[(12, 2, 14), float32]) */
}

def @func_2967(%var_2958: Tensor[(16, 11, 6), float32], %var_2963: Tensor[(600), int64]) -> (Tensor[(16, 11, 6), float32], Tensor[(10, 15, 4), int64], Tensor[(600), int64], Tensor[(720), float64]) {
  %625 = cast(-2.50898f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %626 = cast(%var_2958, dtype="float32") /* ty=Tensor[(16, 11, 6), float32] */;
  %627 = cast(%var_2963, dtype="int64") /* ty=Tensor[(600), int64] */;
  %628 = cast(%var_2963, dtype="int64") /* ty=Tensor[(600), int64] */;
  %629 = cast(meta[relay.Constant][22] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %630 = reshape(%627, newshape=[10, 15, 4]) /* ty=Tensor[(10, 15, 4), int64] */;
  %631 = reshape(%628, newshape=[10, 15, 4]) /* ty=Tensor[(10, 15, 4), int64] */;
  %632 = reshape(%629, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %633 = @func_2362(%630, %631, %632) /* ty=(Tensor[(10, 15, 4), int64], Tensor[(15, 16, 3), float64], Tensor[(720), float64]) */;
  %634 = add(%625, %626) /* ty=Tensor[(16, 11, 6), float32] */;
  %635 = %633.0;
  (%634, %635, %var_2963, meta[relay.Constant][22] /* ty=Tensor[(720), float64] */)
}

def @func_8089() -> (Tensor[(12, 2, 14), float32], Tensor[(2, 21), float64]) {
  @func_8087() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(2, 21), float64]) */
}

def @func_12137() -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), bool], Tensor[(21, ?), float64]) {
  %648 = fn () -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), bool], Tensor[(21, ?), float64]) {
    %636 = @func_11195() /* ty=(Tensor[(12, 2, 14), float32],) */;
    %637 = @func_7992() /* ty=(Tensor[(12, 2, 14), bool], Tensor[(2, 360), float64]) */;
    %638 = cast(meta[relay.Constant][23] /* ty=Tensor[(21, 1), float64] */, dtype="float64") /* ty=Tensor[(21, 1), float64] */;
    %639 = reshape(%638, newshape=[1, 21]) /* ty=Tensor[(1, 21), float64] */;
    %640 = @func_6453(%639) /* ty=Tensor[(?, 21), bool] */;
    %641 = cast(%640, dtype="float64") /* ty=Tensor[(?, 21), float64] */;
    %642 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(21, 1), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %643 = cast(meta[relay.Constant][23] /* ty=Tensor[(21, 1), float64] */, dtype="float64") /* ty=Tensor[(21, 1), float64] */;
    %644 = dyn.reshape(%641, %642, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %645 = %636.0;
    %646 = %637.0;
    %647 = mod(%643, %644) /* ty=Tensor[(21, ?), float64] */;
    (%645, %646, %647)
  };
  %648() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), bool], Tensor[(21, ?), float64]) */
}

def @func_7272() -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) {
  @func_7270() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */
}

def @func_4602() -> Tensor[(12, 2, 14), float32] {
  %649 = fn () -> Tensor[(12, 2, 14), float32] {
    @func_4071() /* ty=Tensor[(12, 2, 14), float32] */
  };
  %649() /* ty=Tensor[(12, 2, 14), float32] */
}

def @func_3989() -> (Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64]) {
  @func_3987() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64]) */
}

def @func_4258(%var_4256: Tensor[(128), int8]) -> (Tensor[(1, 21), float64], Tensor[(64, 2), int8], Tensor[(128), int8]) {
  @func_4255(%var_4256) /* ty=(Tensor[(1, 21), float64], Tensor[(64, 2), int8], Tensor[(128), int8]) */
}

def @func_2095(%var_2093: Tensor[(1, 7, 3), float64]) -> (Tensor[(1, 7, 3), float64], Tensor[(1, 7, 3), float64], Tensor[(1, 8, 16), int8], Tensor[(2, 360), float64]) {
  @func_2092(%var_2093) /* ty=(Tensor[(1, 7, 3), float64], Tensor[(1, 7, 3), float64], Tensor[(1, 8, 16), int8], Tensor[(2, 360), float64]) */
}

def @func_4948(%var_4946: Tensor[(21), float64]) -> (Tensor[(12, 2, 14), float32], Tensor[(1, 600), int64], Tensor[(1, 720), float64], Tensor[(21), float64]) {
  %650 = @func_3864() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %651 = cast(meta[relay.Constant][24] /* ty=Tensor[(1, 720), float64] */, dtype="float64") /* ty=Tensor[(1, 720), float64] */;
  %652 = cast(%var_4946, dtype="float64") /* ty=Tensor[(21), float64] */;
  %653 = reshape(%651, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %654 = reshape(%652, newshape=[1, 7, 3]) /* ty=Tensor[(1, 7, 3), float64] */;
  %655 = @func_4039(%653, %654) /* ty=(Tensor[(15, 16, 3), float64], Tensor[(720), float64], Tensor[(?, 7, 3), bool], Tensor[(10, 15, 4), int64], Tensor[(1056), float32], Tensor[(1, 600), int64]) */;
  %656 = %650.0;
  %657 = %655.5;
  (%656, %657, meta[relay.Constant][24] /* ty=Tensor[(1, 720), float64] */, %var_4946)
}

def @func_6570() -> Tensor[(12, 2, 14), float32] {
  @func_6568() /* ty=Tensor[(12, 2, 14), float32] */
}

def @func_12373() -> Tensor[(13), float32] {
  @func_11980() /* ty=Tensor[(13), float32] */
}

def @func_11862() -> (Tensor[(12, 2, 14), float32], Tensor[(13), float32]) {
  %658 = @func_11195() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %659 = @func_7853() /* ty=(Tensor[(13), float32], Tensor[(1, 21), float64]) */;
  %660 = %658.0;
  %661 = %659.0;
  (%660, %661)
}

def @func_8806() -> (Tensor[(12, 2, 14), float32],) {
  %662 = @func_4104() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %663 = %662.0;
  (%663,)
}

def @func_10817() -> (Tensor[(12, 2, 14), float32],) {
  @func_10815() /* ty=(Tensor[(12, 2, 14), float32],) */
}

def @func_8137() -> (Tensor[(12, 2, 14), float32],) {
  @func_8135() /* ty=(Tensor[(12, 2, 14), float32],) */
}

def @func_7270() -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) {
  %664 = @func_3937() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %665 = @func_6568() /* ty=Tensor[(12, 2, 14), float32] */;
  %666 = %664.0;
  (%665, %666)
}

def @func_8741() -> (Tensor[(12, 2, 14), float32], Tensor[(60), float32], Tensor[(21), float64], Tensor[(1, 8, 16), int8], Tensor[(12, 2, 14), float32], Tensor[(126), float64]) {
  @func_8739() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(60), float32], Tensor[(21), float64], Tensor[(1, 8, 16), int8], Tensor[(12, 2, 14), float32], Tensor[(126), float64]) */
}

def @func_9046() -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) {
  %670 = fn () -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) {
    %667 = @func_7964() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(6, 15, 5), float64], Tensor[(450), float64]) */;
    %668 = @func_6065() /* ty=Tensor[(12, 2, 14), float32] */;
    %669 = %667.1;
    (%668, %669)
  };
  %670() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */
}

def @func_8087() -> (Tensor[(12, 2, 14), float32], Tensor[(2, 21), float64]) {
  %671 = @func_5732() /* ty=(Tensor[(1, 21), float64], Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64]) */;
  %672 = %671.2;
  %673 = cast(%672, dtype="float32") /* ty=Tensor[(1, 21), float32] */;
  %674 = log2(%673) /* ty=Tensor[(1, 21), float32] */;
  %675 = cast(%674, dtype="float64") /* ty=Tensor[(1, 21), float64] */;
  %676 = cast(meta[relay.Constant][25] /* ty=Tensor[(2, 21), float32] */, dtype="float64") /* ty=Tensor[(2, 21), float64] */;
  %677 = @func_6568() /* ty=Tensor[(12, 2, 14), float32] */;
  %678 = divide(%675, %676) /* ty=Tensor[(2, 21), float64] */;
  (%677, %678)
}

def @func_10620() -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) {
  %683 = fn () -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) {
    %679 = @func_10187() /* ty=(Tensor[(16, 8, 8), float32], Tensor[(12, 2, 14), float32], Tensor[(?, 21), uint32]) */;
    %680 = @func_8087() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(2, 21), float64]) */;
    %681 = %679.1;
    %682 = %680.0;
    (%681, %682)
  };
  %683() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */
}

def @func_12244() -> (Tensor[(60), float32], Tensor[(21), bool], Tensor[(21, ?), float64]) {
  %684 = @func_11624() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 720), float64], Tensor[(21), float64], Tensor[(12, 2, 14), float32]) */;
  %685 = %684.2;
  %686 = cast(%685, dtype="float64") /* ty=Tensor[(21), float64] */;
  %687 = reshape(%686, newshape=[21]) /* ty=Tensor[(21), float64] */;
  %688 = @func_4558(%687) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(1), float64], Tensor[(60), float32], Tensor[(720), float64], Tensor[(720), float64], Tensor[(21), float64]) */;
  %689 = cast(%685, dtype="float64") /* ty=Tensor[(21), float64] */;
  %690 = cos(%689) /* ty=Tensor[(21), float64] */;
  %691 = cast(meta[relay.Constant][26] /* ty=Tensor[(21), float64] */, dtype="bool") /* ty=Tensor[(21), bool] */;
  %692 = shape_of(%690, dtype="int32") /* ty=Tensor[(1), int32] */;
  %693 = cast(%690, dtype="bool") /* ty=Tensor[(21), bool] */;
  %694 = dyn.reshape(%691, %692, newshape=[]) /* ty=Tensor[(?), bool] */;
  %695 = @func_12136() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), bool], Tensor[(21, ?), float64]) */;
  %696 = %688.3;
  %697 = greater_equal(%693, %694) /* ty=Tensor[(21), bool] */;
  %698 = %695.2;
  (%696, %697, %698)
}

def @func_6390() -> (Tensor[(12, 2, 14), float32],) {
  %702 = fn () -> (Tensor[(12, 2, 14), float32],) {
    %699 = @func_5512() /* ty=Tensor[(12, 2, 14), float32] */;
    %700 = cast(%699, dtype="float32") /* ty=Tensor[(12, 2, 14), float32] */;
    %701 = sigmoid(%700) /* ty=Tensor[(12, 2, 14), float32] */;
    (%701,)
  };
  %702() /* ty=(Tensor[(12, 2, 14), float32],) */
}

def @func_2367(%var_2364: Tensor[(10, 15, 4), int64], %var_2365: Tensor[(10, 15, 4), int64], %var_2366: Tensor[(720), float64]) -> (Tensor[(10, 15, 4), int64], Tensor[(15, 16, 3), float64], Tensor[(720), float64]) {
  @func_2362(%var_2364, %var_2365, %var_2366) /* ty=(Tensor[(10, 15, 4), int64], Tensor[(15, 16, 3), float64], Tensor[(720), float64]) */
}

def @func_9268() -> (Tensor[(12, 2, 14), float32], Tensor[(2, 21), float64]) {
  @func_9266() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(2, 21), float64]) */
}

def @func_4255(%var_4251: Tensor[(128), int8]) -> (Tensor[(1, 21), float64], Tensor[(64, 2), int8], Tensor[(128), int8]) {
  %703 = cast(%var_4251, dtype="int8") /* ty=Tensor[(128), int8] */;
  %704 = reshape(%703, newshape=[128]) /* ty=Tensor[(128), int8] */;
  %705 = @func_3733(%704) /* ty=(Tensor[(9, 11, 6), float32], Tensor[(64, 2), int8], Tensor[(2016), float64], Tensor[(128), int8]) */;
  %706 = @func_4156() /* ty=Tensor[(1, 21), float64] */;
  %707 = %705.1;
  (%706, %707, %var_4251)
}

def @func_10325() -> (Tensor[(2, 360), float64],) {
  %708 = @func_7992() /* ty=(Tensor[(12, 2, 14), bool], Tensor[(2, 360), float64]) */;
  %709 = %708.1;
  (%709,)
}

def @func_9266() -> (Tensor[(12, 2, 14), float32], Tensor[(2, 21), float64]) {
  %710 = @func_8087() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(2, 21), float64]) */;
  %711 = %710.1;
  %712 = cast(%711, dtype="float64") /* ty=Tensor[(2, 21), float64] */;
  %713 = @func_6270() /* ty=Tensor[(12, 2, 14), float32] */;
  %714 = asinh(%712) /* ty=Tensor[(2, 21), float64] */;
  (%713, %714)
}

def @func_10352() -> Tensor[(1, 21), float32] {
  @func_10350() /* ty=Tensor[(1, 21), float32] */
}

def @func_5513() -> Tensor[(12, 2, 14), float32] {
  %715 = fn () -> Tensor[(12, 2, 14), float32] {
    @func_4620() /* ty=Tensor[(12, 2, 14), float32] */
  };
  %715() /* ty=Tensor[(12, 2, 14), float32] */
}

def @func_1884(%var_1864: Tensor[(15, 16, 3), float64]) -> (Tensor[(15, 16, 3), float64], Tensor[(1, 8, 16), int8], Tensor[(128), int8]) {
  %716 = cast(%var_1864, dtype="float64") /* ty=Tensor[(15, 16, 3), float64] */;
  %717 = cast(meta[relay.Constant][27] /* ty=Tensor[(128), int8] */, dtype="int8") /* ty=Tensor[(128), int8] */;
  %718 = reshape(%717, newshape=[1, 8, 16]) /* ty=Tensor[(1, 8, 16), int8] */;
  %719 = @func_40(%718) /* ty=(Tensor[(1, 8, 16), int8],) */;
  %720 = log(%716) /* ty=Tensor[(15, 16, 3), float64] */;
  %721 = %719.0;
  (%720, %721, meta[relay.Constant][27] /* ty=Tensor[(128), int8] */)
}

def @func_1887(%var_1885: Tensor[(15, 16, 3), float64]) -> (Tensor[(15, 16, 3), float64], Tensor[(1, 8, 16), int8], Tensor[(128), int8]) {
  @func_1884(%var_1885) /* ty=(Tensor[(15, 16, 3), float64], Tensor[(1, 8, 16), int8], Tensor[(128), int8]) */
}

def @func_3919() -> (Tensor[(12, 2, 14), float32],) {
  @func_3917() /* ty=(Tensor[(12, 2, 14), float32],) */
}

def @func_9109() -> Tensor[(12, 2, 14), float32] {
  %723 = fn () -> Tensor[(12, 2, 14), float32] {
    %722 = @func_8056() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64]) */;
    %722.0
  };
  %723() /* ty=Tensor[(12, 2, 14), float32] */
}

def @func_8321() -> (Tensor[(12, 2, 14), bool],) {
  %726 = fn () -> (Tensor[(12, 2, 14), bool],) {
    %724 = @func_6235() /* ty=(Tensor[(1, 7, 3), float64], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), bool]) */;
    %725 = %724.2;
    (%725,)
  };
  %726() /* ty=(Tensor[(12, 2, 14), bool],) */
}

def @func_4984() -> (Tensor[(1, 21), float64], Tensor[(1, 8, 16), int8], Tensor[(13), float32]) {
  %732 = fn () -> (Tensor[(1, 21), float64], Tensor[(1, 8, 16), int8], Tensor[(13), float32]) {
    %727 = cast(meta[relay.Constant][28] /* ty=Tensor[(13), float32] */, dtype="float32") /* ty=Tensor[(13), float32] */;
    %728 = reshape(%727, newshape=[1, 13, 1]) /* ty=Tensor[(1, 13, 1), float32] */;
    %729 = @func_2441(%728) /* ty=(Tensor[(1, 13, 1), float32], Tensor[(1, 8, 16), int8], Tensor[(1, 128), int8], Tensor[(2, 360), float64], Tensor[(1, 21), float64]) */;
    %730 = @func_4156() /* ty=Tensor[(1, 21), float64] */;
    %731 = %729.1;
    (%730, %731, meta[relay.Constant][28] /* ty=Tensor[(13), float32] */)
  };
  %732() /* ty=(Tensor[(1, 21), float64], Tensor[(1, 8, 16), int8], Tensor[(13), float32]) */
}

def @main() -> (Tensor[(?, 21), float64],) {
  %733 = @func_4156() /* ty=Tensor[(1, 21), float64] */;
  %734 = cast(%733, dtype="float64") /* ty=Tensor[(1, 21), float64] */;
  %735 = asinh(%734) /* ty=Tensor[(1, 21), float64] */;
  %736 = cast(%735, dtype="int8") /* ty=Tensor[(1, 21), int8] */;
  %737 = shape_of(%733, dtype="int32") /* ty=Tensor[(2), int32] */;
  %738 = cast(%733, dtype="int8") /* ty=Tensor[(1, 21), int8] */;
  %739 = dyn.reshape(%736, %737, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %740 = logical_xor(%738, %739) /* ty=Tensor[(?, 21), int8] */;
  %741 = cast(%733, dtype="float64") /* ty=Tensor[(1, 21), float64] */;
  %742 = shape_of(%740, dtype="int32") /* ty=Tensor[(2), int32] */;
  %743 = cast(%740, dtype="float64") /* ty=Tensor[(?, 21), float64] */;
  %744 = dyn.reshape(%741, %742, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %745 = floor_divide(%743, %744) /* ty=Tensor[(?, 21), float64] */;
  (%745,)
}

def @func_7129() -> (Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(12, 2, 14), float32]) {
  @func_7127() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(12, 2, 14), float32]) */
}

def @func_4193(%var_4168: Tensor[(1, 1, 1), float64], %var_4189: Tensor[(60), float32]) -> (Tensor[(12, 2, 14), float32], Tensor[(1, 1, 1), float32], Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(60), float32]) {
  %746 = @func_4104() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %747 = cast(%var_4168, dtype="float64") /* ty=Tensor[(1, 1, 1), float64] */;
  %748 = asin(%747) /* ty=Tensor[(1, 1, 1), float64] */;
  %749 = cast(%748, dtype="float32") /* ty=Tensor[(1, 1, 1), float32] */;
  %750 = @func_3987() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64]) */;
  %751 = cast(%var_4168, dtype="float32") /* ty=Tensor[(1, 1, 1), float32] */;
  %752 = cast(%var_4189, dtype="float32") /* ty=Tensor[(60), float32] */;
  %753 = reshape(%751, newshape=[]) /* ty=float32 */;
  %754 = reshape(%752, newshape=[1, 6, 10]) /* ty=Tensor[(1, 6, 10), float32] */;
  %755 = @func_3595(%753, %754) /* ty=(Tensor[(1, 6, 10), bool], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64], Tensor[(?, 6, 10), bool]) */;
  %756 = %746.0;
  %757 = atan(%749) /* ty=Tensor[(1, 1, 1), float32] */;
  %758 = %750.0;
  %759 = %755.1;
  (%756, %757, %758, %759, %var_4189)
}

def @func_10393() -> (Tensor[(1, 21), float64], Tensor[(16, 8, 8), float32]) {
  %760 = @func_6376() /* ty=Tensor[(1, 21), float64] */;
  %761 = @func_9799() /* ty=Tensor[(16, 8, 8), float32] */;
  (%760, %761)
}

def @func_3903() -> (Tensor[(12, 2, 14), float32],) {
  %762 = @func_3864() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %763 = %762.0;
  (%763,)
}

def @func_12294(%var_12292: Tensor[(2, 360), float64]) -> (Tensor[(4, 21), float32], Tensor[(12, 2, 14), float32], Tensor[(2, 360), uint64]) {
  @func_12291(%var_12292) /* ty=(Tensor[(4, 21), float32], Tensor[(12, 2, 14), float32], Tensor[(2, 360), uint64]) */
}

def @func_6510() -> (Tensor[(13), float32], Tensor[(13), float32], Tensor[(1, 21), float64]) {
  %764 = @func_4983() /* ty=(Tensor[(1, 21), float64], Tensor[(1, 8, 16), int8], Tensor[(13), float32]) */;
  %765 = @func_5350() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(13), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */;
  %766 = @func_5574() /* ty=(Tensor[(1, 21), float64], Tensor[(12, 2, 14), bool], Tensor[(12, 2, 14), float64]) */;
  %767 = %764.2;
  %768 = %765.1;
  %769 = %766.0;
  (%767, %768, %769)
}

def @func_4142(%var_4122: Tensor[(128), int8]) -> (Tensor[(1, 7, 3), float64], Tensor[(1, 8, 16), int8], Tensor[(128), int8]) {
  %770 = @func_3987() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64]) */;
  %771 = %770.1;
  %772 = cast(%771, dtype="float64") /* ty=Tensor[(1, 7, 3), float64] */;
  %773 = cast(%var_4122, dtype="int8") /* ty=Tensor[(128), int8] */;
  %774 = reshape(%773, newshape=[1, 8, 16]) /* ty=Tensor[(1, 8, 16), int8] */;
  %775 = @func_40(%774) /* ty=(Tensor[(1, 8, 16), int8],) */;
  %776 = sinh(%772) /* ty=Tensor[(1, 7, 3), float64] */;
  %777 = %775.0;
  (%776, %777, %var_4122)
}

def @func_5399() -> (Tensor[(4, 21), float32],) {
  %782 = fn () -> (Tensor[(4, 21), float32],) {
    %778 = @func_5109() /* ty=(Tensor[(4, 21), bool], Tensor[(2, 360), float64]) */;
    %779 = %778.0;
    %780 = cast(%779, dtype="float32") /* ty=Tensor[(4, 21), float32] */;
    %781 = log10(%780) /* ty=Tensor[(4, 21), float32] */;
    (%781,)
  };
  %782() /* ty=(Tensor[(4, 21), float32],) */
}

def @func_4560(%var_4559: Tensor[(21), float64]) -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(1), float64], Tensor[(60), float32], Tensor[(720), float64], Tensor[(720), float64], Tensor[(21), float64]) {
  %796 = fn (%var_4541: Tensor[(21), float64]) -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(1), float64], Tensor[(60), float32], Tensor[(720), float64], Tensor[(720), float64], Tensor[(21), float64]) {
    %783 = cast(meta[relay.Constant][29] /* ty=Tensor[(1), float64] */, dtype="float64") /* ty=Tensor[(1), float64] */;
    %784 = cast(meta[relay.Constant][30] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
    %785 = reshape(%783, newshape=[1, 1, 1]) /* ty=Tensor[(1, 1, 1), float64] */;
    %786 = reshape(%784, newshape=[60]) /* ty=Tensor[(60), float32] */;
    %787 = @func_4193(%785, %786) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 1, 1), float32], Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(60), float32]) */;
    %788 = cast(meta[relay.Constant][31] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
    %789 = cast(%var_4541, dtype="float64") /* ty=Tensor[(21), float64] */;
    %790 = reshape(%788, newshape=[720]) /* ty=Tensor[(720), float64] */;
    %791 = reshape(%789, newshape=[1, 7, 3]) /* ty=Tensor[(1, 7, 3), float64] */;
    %792 = @func_4039(%790, %791) /* ty=(Tensor[(15, 16, 3), float64], Tensor[(720), float64], Tensor[(?, 7, 3), bool], Tensor[(10, 15, 4), int64], Tensor[(1056), float32], Tensor[(1, 600), int64]) */;
    %793 = @func_3929() /* ty=Tensor[(12, 2, 14), float32] */;
    %794 = %787.2;
    %795 = %792.1;
    (%793, %794, meta[relay.Constant][29] /* ty=Tensor[(1), float64] */, meta[relay.Constant][30] /* ty=Tensor[(60), float32] */, %795, meta[relay.Constant][31] /* ty=Tensor[(720), float64] */, %var_4541)
  };
  %796(%var_4559) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(1), float64], Tensor[(60), float32], Tensor[(720), float64], Tensor[(720), float64], Tensor[(21), float64]) */
}

def @func_4453(%var_4450: Tensor[(6, 10, 6), float32], %var_4451: Tensor[(6, 10, 6), float32], %var_4452: Tensor[(91, 4), float64]) -> (Tensor[(6, 10, 6), float32], Tensor[(6, 15, 5), float64], Tensor[(5, 90), float64], Tensor[(7, 13, 4), float64], Tensor[(12, 2, 14), float32], Tensor[(91, 4), bool], Tensor[(91, 4), float32]) {
  %818 = fn (%var_4399: Tensor[(6, 10, 6), float32], %var_4400: Tensor[(6, 10, 6), float32], %var_4439: Tensor[(91, 4), float64]) -> (Tensor[(6, 10, 6), float32], Tensor[(6, 15, 5), float64], Tensor[(5, 90), float64], Tensor[(7, 13, 4), float64], Tensor[(12, 2, 14), float32], Tensor[(91, 4), bool], Tensor[(91, 4), float32]) {
    %797 = cast(%var_4400, dtype="float32") /* ty=Tensor[(6, 10, 6), float32] */;
    %798 = shape_of(%var_4399, dtype="int32") /* ty=Tensor[(3), int32] */;
    %799 = cast(%var_4399, dtype="float32") /* ty=Tensor[(6, 10, 6), float32] */;
    %800 = dyn.reshape(%797, %798, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %801 = cast(meta[relay.Constant][32] /* ty=Tensor[(5, 90), float64] */, dtype="float64") /* ty=Tensor[(5, 90), float64] */;
    %802 = cast(meta[relay.Constant][32] /* ty=Tensor[(5, 90), float64] */, dtype="float64") /* ty=Tensor[(5, 90), float64] */;
    %803 = reshape(%801, newshape=[6, 15, 5]) /* ty=Tensor[(6, 15, 5), float64] */;
    %804 = reshape(%802, newshape=[6, 15, 5]) /* ty=Tensor[(6, 15, 5), float64] */;
    %805 = cast(meta[relay.Constant][33] /* ty=Tensor[(91, 4), float64] */, dtype="float64") /* ty=Tensor[(91, 4), float64] */;
    %806 = reshape(%805, newshape=[7, 13, 4]) /* ty=Tensor[(7, 13, 4), float64] */;
    %807 = cast(%var_4439, dtype="bool") /* ty=Tensor[(91, 4), bool] */;
    %808 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(91, 4), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %809 = cast(meta[relay.Constant][33] /* ty=Tensor[(91, 4), float64] */, dtype="bool") /* ty=Tensor[(91, 4), bool] */;
    %810 = dyn.reshape(%807, %808, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %811 = cast(meta[relay.Constant][33] /* ty=Tensor[(91, 4), float64] */, dtype="float32") /* ty=Tensor[(91, 4), float32] */;
    %812 = mod(%799, %800) /* ty=Tensor[(6, 10, 6), float32] */;
    %813 = @func_2256(%803, %804) /* ty=Tensor[(6, 15, 5), float64] */;
    %814 = @func_3183(%806) /* ty=Tensor[(7, 13, 4), float64] */;
    %815 = @func_3929() /* ty=Tensor[(12, 2, 14), float32] */;
    %816 = greater_equal(%809, %810) /* ty=Tensor[(91, 4), bool] */;
    %817 = log10(%811) /* ty=Tensor[(91, 4), float32] */;
    (%812, %813, meta[relay.Constant][32] /* ty=Tensor[(5, 90), float64] */, %814, %815, %816, %817)
  };
  %818(%var_4450, %var_4451, %var_4452) /* ty=(Tensor[(6, 10, 6), float32], Tensor[(6, 15, 5), float64], Tensor[(5, 90), float64], Tensor[(7, 13, 4), float64], Tensor[(12, 2, 14), float32], Tensor[(91, 4), bool], Tensor[(91, 4), float32]) */
}

def @func_3930() -> Tensor[(12, 2, 14), float32] {
  %819 = fn () -> Tensor[(12, 2, 14), float32] {
    @func_3835() /* ty=Tensor[(12, 2, 14), float32] */
  };
  %819() /* ty=Tensor[(12, 2, 14), float32] */
}

def @func_4157() -> Tensor[(1, 21), float64] {
  %821 = fn () -> Tensor[(1, 21), float64] {
    %820 = @func_3987() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64]) */;
    %820.2
  };
  %821() /* ty=Tensor[(1, 21), float64] */
}

def @func_6763() -> Tensor[(12, 2, 14), float32] {
  %822 = fn () -> Tensor[(12, 2, 14), float32] {
    @func_6468() /* ty=Tensor[(12, 2, 14), float32] */
  };
  %822() /* ty=Tensor[(12, 2, 14), float32] */
}

def @func_6741(%var_6738: Tensor[(15, 4), float32], %var_6739: Tensor[(6, 21), float64], %var_6740: Tensor[(6, 21), int8]) -> (Tensor[(12, 2, 14), float32], Tensor[(2016), float64], Tensor[(?, 8, 16), int8], Tensor[(1, 7, 3), float64], float32, Tensor[(15, 4), float32], Tensor[(6, 21), uint8], Tensor[(4, 21), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(6, 21), float64]) {
  %870 = fn (%var_6677: Tensor[(15, 4), float32], %var_6682: Tensor[(6, 21), float64], %var_6730: Tensor[(6, 21), int8]) -> (Tensor[(12, 2, 14), float32], Tensor[(2016), float64], Tensor[(?, 8, 16), int8], Tensor[(1, 7, 3), float64], float32, Tensor[(15, 4), float32], Tensor[(6, 21), uint8], Tensor[(4, 21), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(6, 21), float64]) {
    %823 = cast(meta[relay.Constant][34] /* ty=Tensor[(128), int8] */, dtype="int8") /* ty=Tensor[(128), int8] */;
    %824 = reshape(%823, newshape=[128]) /* ty=Tensor[(128), int8] */;
    %825 = @func_4386(%824) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(16, 14, 9), uint8], Tensor[(2016), float64], Tensor[(128), int8]) */;
    %826 = %825.2;
    %827 = cast(%826, dtype="float64") /* ty=Tensor[(2016), float64] */;
    %828 = cast(meta[relay.Constant][34] /* ty=Tensor[(128), int8] */, dtype="int8") /* ty=Tensor[(128), int8] */;
    %829 = reshape(%827, newshape=[16, 14, 9]) /* ty=Tensor[(16, 14, 9), float64] */;
    %830 = reshape(%828, newshape=[64, 2]) /* ty=Tensor[(64, 2), int8] */;
    %831 = @func_854(%829, %830) /* ty=(Tensor[(1, 8, 16), int8], Tensor[(64, 2), int8], Tensor[(16, 14, 9), uint8]) */;
    %832 = %831.0;
    %833 = cast(meta[relay.Constant][34] /* ty=Tensor[(128), int8] */, dtype="int8") /* ty=Tensor[(128), int8] */;
    %834 = shape_of(%832, dtype="int32") /* ty=Tensor[(3), int32] */;
    %835 = cast(%832, dtype="int8") /* ty=Tensor[(1, 8, 16), int8] */;
    %836 = dyn.reshape(%833, %834, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %837 = cast(-8.06185f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %838 = cast(%var_6677, dtype="float32") /* ty=Tensor[(15, 4), float32] */;
    %839 = reshape(%837, newshape=[]) /* ty=float32 */;
    %840 = reshape(%838, newshape=[1, 6, 10]) /* ty=Tensor[(1, 6, 10), float32] */;
    %841 = @func_3595(%839, %840) /* ty=(Tensor[(1, 6, 10), bool], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64], Tensor[(?, 6, 10), bool]) */;
    %842 = @func_3987() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64]) */;
    %843 = %842.2;
    %844 = cast(%843, dtype="float64") /* ty=Tensor[(1, 21), float64] */;
    %845 = atan(%844) /* ty=Tensor[(1, 21), float64] */;
    %846 = cast(%845, dtype="uint8") /* ty=Tensor[(1, 21), uint8] */;
    %847 = cast(%var_6682, dtype="uint8") /* ty=Tensor[(6, 21), uint8] */;
    %848 = @func_5398() /* ty=(Tensor[(4, 21), float32],) */;
    %849 = @func_3864() /* ty=(Tensor[(12, 2, 14), float32],) */;
    %850 = cast(%845, dtype="float32") /* ty=Tensor[(1, 21), float32] */;
    %851 = asin(%850) /* ty=Tensor[(1, 21), float32] */;
    %852 = cast(%851, dtype="float32") /* ty=Tensor[(1, 21), float32] */;
    %853 = log10(%852) /* ty=Tensor[(1, 21), float32] */;
    %854 = cast(%853, dtype="int8") /* ty=Tensor[(1, 21), int8] */;
    %855 = cast(%var_6682, dtype="int8") /* ty=Tensor[(6, 21), int8] */;
    %856 = multiply(%854, %855) /* ty=Tensor[(6, 21), int8] */;
    %857 = cast(%var_6730, dtype="float64") /* ty=Tensor[(6, 21), float64] */;
    %858 = shape_of(%856, dtype="int32") /* ty=Tensor[(2), int32] */;
    %859 = cast(%856, dtype="float64") /* ty=Tensor[(6, 21), float64] */;
    %860 = dyn.reshape(%857, %858, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %861 = @func_6568() /* ty=Tensor[(12, 2, 14), float32] */;
    %862 = minimum(%835, %836) /* ty=Tensor[(?, 8, 16), int8] */;
    %863 = %841.1;
    %864 = bitwise_and(%846, %847) /* ty=Tensor[(6, 21), uint8] */;
    %865 = %848.0;
    %866 = %849.0;
    %867 = @func_6065() /* ty=Tensor[(12, 2, 14), float32] */;
    %868 = @func_6253() /* ty=Tensor[(12, 2, 14), float32] */;
    %869 = maximum(%859, %860) /* ty=Tensor[(6, 21), float64] */;
    (%861, %826, %862, %863, -8.06185f /* ty=float32 */, %var_6677, %864, %865, %866, %867, %868, %869)
  };
  %870(%var_6738, %var_6739, %var_6740) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(2016), float64], Tensor[(?, 8, 16), int8], Tensor[(1, 7, 3), float64], float32, Tensor[(15, 4), float32], Tensor[(6, 21), uint8], Tensor[(4, 21), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(6, 21), float64]) */
}

def @func_7718(%var_7717: Tensor[(600), int64]) -> (Tensor[(12, 2, 14), float32], Tensor[(13), float32], Tensor[(84), float64], Tensor[(12, 2, 14), float64], Tensor[(12, 2, 14), float32], Tensor[(15, 16, 3), float64], Tensor[(600), int64], Tensor[(720), float64], Tensor[(?, 21), int32]) {
  %900 = fn (%var_7704: Tensor[(600), int64]) -> (Tensor[(12, 2, 14), float32], Tensor[(13), float32], Tensor[(84), float64], Tensor[(12, 2, 14), float64], Tensor[(12, 2, 14), float32], Tensor[(15, 16, 3), float64], Tensor[(600), int64], Tensor[(720), float64], Tensor[(?, 21), int32]) {
    %871 = @func_6389() /* ty=(Tensor[(12, 2, 14), float32],) */;
    %872 = cast(meta[relay.Constant][35] /* ty=Tensor[(84), float64] */, dtype="float64") /* ty=Tensor[(84), float64] */;
    %873 = @func_4933() /* ty=(Tensor[(1, 21), float64],) */;
    %874 = %873.0;
    %875 = cast(%874, dtype="float32") /* ty=Tensor[(1, 21), float32] */;
    %876 = exp(%875) /* ty=Tensor[(1, 21), float32] */;
    %877 = cast(%876, dtype="float64") /* ty=Tensor[(1, 21), float64] */;
    %878 = reshape(%872, newshape=[4, 21]) /* ty=Tensor[(4, 21), float64] */;
    %879 = reshape(%877, newshape=[21]) /* ty=Tensor[(21), float64] */;
    %880 = @func_6948(%878, %879) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 8, 16), int8], Tensor[(13), float32], Tensor[(720), float64], Tensor[(21), float64], Tensor[(12, 2, 14), bool], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(4, 21), float64]) */;
    %881 = %871.0;
    %882 = cast(%881, dtype="float32") /* ty=Tensor[(12, 2, 14), float32] */;
    %883 = reshape(%882, newshape=[12, 2, 14]) /* ty=Tensor[(12, 2, 14), float32] */;
    %884 = cast(%var_7704, dtype="int64") /* ty=Tensor[(600), int64] */;
    %885 = cast(%var_7704, dtype="int64") /* ty=Tensor[(600), int64] */;
    %886 = cast(meta[relay.Constant][36] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
    %887 = reshape(%884, newshape=[10, 15, 4]) /* ty=Tensor[(10, 15, 4), int64] */;
    %888 = reshape(%885, newshape=[10, 15, 4]) /* ty=Tensor[(10, 15, 4), int64] */;
    %889 = reshape(%886, newshape=[720]) /* ty=Tensor[(720), float64] */;
    %890 = @func_2362(%887, %888, %889) /* ty=(Tensor[(10, 15, 4), int64], Tensor[(15, 16, 3), float64], Tensor[(720), float64]) */;
    %891 = cast(%874, dtype="int32") /* ty=Tensor[(1, 21), int32] */;
    %892 = shape_of(%876, dtype="int32") /* ty=Tensor[(2), int32] */;
    %893 = cast(%876, dtype="int32") /* ty=Tensor[(1, 21), int32] */;
    %894 = dyn.reshape(%891, %892, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %895 = %880.2;
    %896 = @func_5261(%883) /* ty=Tensor[(12, 2, 14), float64] */;
    %897 = @func_5512() /* ty=Tensor[(12, 2, 14), float32] */;
    %898 = %890.1;
    %899 = bitwise_xor(%893, %894) /* ty=Tensor[(?, 21), int32] */;
    (%881, %895, meta[relay.Constant][35] /* ty=Tensor[(84), float64] */, %896, %897, %898, %var_7704, meta[relay.Constant][36] /* ty=Tensor[(720), float64] */, %899)
  };
  %900(%var_7717) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(13), float32], Tensor[(84), float64], Tensor[(12, 2, 14), float64], Tensor[(12, 2, 14), float32], Tensor[(15, 16, 3), float64], Tensor[(600), int64], Tensor[(720), float64], Tensor[(?, 21), int32]) */
}

def @func_6272() -> Tensor[(12, 2, 14), float32] {
  @func_6270() /* ty=Tensor[(12, 2, 14), float32] */
}

def @func_10126() -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(4, 21), bool]) {
  %914 = fn () -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(4, 21), bool]) {
    %901 = @func_9928() /* ty=(Tensor[(12, 2, 14), float32],) */;
    %902 = @func_8806() /* ty=(Tensor[(12, 2, 14), float32],) */;
    %903 = @func_5398() /* ty=(Tensor[(4, 21), float32],) */;
    %904 = %903.0;
    %905 = cast(%904, dtype="float64") /* ty=Tensor[(4, 21), float64] */;
    %906 = log(%905) /* ty=Tensor[(4, 21), float64] */;
    %907 = cast(%904, dtype="bool") /* ty=Tensor[(4, 21), bool] */;
    %908 = shape_of(%906, dtype="int32") /* ty=Tensor[(2), int32] */;
    %909 = cast(%906, dtype="bool") /* ty=Tensor[(4, 21), bool] */;
    %910 = dyn.reshape(%907, %908, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %911 = %901.0;
    %912 = %902.0;
    %913 = logical_and(%909, %910) /* ty=Tensor[(4, 21), bool] */;
    (%911, %912, %913)
  };
  %914() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(4, 21), bool]) */
}

def @func_8135() -> (Tensor[(12, 2, 14), float32],) {
  %915 = @func_4620() /* ty=Tensor[(12, 2, 14), float32] */;
  (%915,)
}

def @func_10199() -> (Tensor[(12, 2, 14), float32],) {
  %918 = fn () -> (Tensor[(12, 2, 14), float32],) {
    %916 = @func_6162() /* ty=(Tensor[(12, 2, 14), float32],) */;
    %917 = %916.0;
    (%917,)
  };
  %918() /* ty=(Tensor[(12, 2, 14), float32],) */
}

def @func_10446() -> (Tensor[(1, 21), float64],) {
  @func_10444() /* ty=(Tensor[(1, 21), float64],) */
}

def @func_5264(%var_5262: Tensor[(12, 2, 14), float32]) -> Tensor[(12, 2, 14), float64] {
  @func_5261(%var_5262) /* ty=Tensor[(12, 2, 14), float64] */
}

def @func_8846() -> (Tensor[(12, 2, 14), float32],) {
  @func_8844() /* ty=(Tensor[(12, 2, 14), float32],) */
}

def @func_11864() -> (Tensor[(12, 2, 14), float32], Tensor[(13), float32]) {
  @func_11862() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(13), float32]) */
}

def @func_11372() -> (Tensor[(12, 2, 14), float32],) {
  %921 = fn () -> (Tensor[(12, 2, 14), float32],) {
    %919 = @func_7742() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */;
    %920 = %919.0;
    (%920,)
  };
  %921() /* ty=(Tensor[(12, 2, 14), float32],) */
}

def @func_11839(%var_11837: Tensor[(720), float64], %var_11838: Tensor[(128), int8]) -> (Tensor[(12, 2, 14), float32], Tensor[(15, 16, 3), float64], Tensor[(720), float64], Tensor[(2, 300), float32], Tensor[(1, 21), float64], Tensor[(12, 2, 14), float32], Tensor[(2, 360), float64], Tensor[(2016), float64], Tensor[(128), int8]) {
  @func_11835(%var_11837, %var_11838) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(15, 16, 3), float64], Tensor[(720), float64], Tensor[(2, 300), float32], Tensor[(1, 21), float64], Tensor[(12, 2, 14), float32], Tensor[(2, 360), float64], Tensor[(2016), float64], Tensor[(128), int8]) */
}

def @func_10350() -> Tensor[(1, 21), float32] {
  %922 = @func_4156() /* ty=Tensor[(1, 21), float64] */;
  %923 = cast(%922, dtype="float32") /* ty=Tensor[(1, 21), float32] */;
  tan(%923) /* ty=Tensor[(1, 21), float32] */
}

def @func_10815() -> (Tensor[(12, 2, 14), float32],) {
  %924 = @func_6389() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %925 = %924.0;
  (%925,)
}

def @func_6066() -> Tensor[(12, 2, 14), float32] {
  %926 = fn () -> Tensor[(12, 2, 14), float32] {
    @func_4620() /* ty=Tensor[(12, 2, 14), float32] */
  };
  %926() /* ty=Tensor[(12, 2, 14), float32] */
}

def @func_6340(%var_6338: Tensor[(128), int8]) -> (Tensor[(1, 8, 16), int8], Tensor[(128), int8], Tensor[(12, 2, 14), float32]) {
  @func_6337(%var_6338) /* ty=(Tensor[(1, 8, 16), int8], Tensor[(128), int8], Tensor[(12, 2, 14), float32]) */
}

def @func_11310(%var_11309: Tensor[(11, 21), float64]) -> (Tensor[(12, 2, 14), float32], Tensor[(11, 21), int8], Tensor[(2, 360), float64], Tensor[(60), float32], Tensor[(180, 4), float64], Tensor[(11, 21), bool], Tensor[(11, 21), float64]) {
  %955 = fn (%var_11251: Tensor[(11, 21), float64]) -> (Tensor[(12, 2, 14), float32], Tensor[(11, 21), int8], Tensor[(2, 360), float64], Tensor[(60), float32], Tensor[(180, 4), float64], Tensor[(11, 21), bool], Tensor[(11, 21), float64]) {
    %927 = @func_10940() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */;
    %928 = @func_5732() /* ty=(Tensor[(1, 21), float64], Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64]) */;
    %929 = %928.2;
    %930 = cast(%929, dtype="int8") /* ty=Tensor[(1, 21), int8] */;
    %931 = cast(%var_11251, dtype="int8") /* ty=Tensor[(11, 21), int8] */;
    %932 = cast(meta[relay.Constant][37] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
    %933 = cast(meta[relay.Constant][38] /* ty=Tensor[(180, 4), float64] */, dtype="float64") /* ty=Tensor[(180, 4), float64] */;
    %934 = reshape(%932, newshape=[3, 20]) /* ty=Tensor[(3, 20), float32] */;
    %935 = reshape(%933, newshape=[2, 360]) /* ty=Tensor[(2, 360), float64] */;
    %936 = @func_7561(%934, %935) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(15, 4), float32], Tensor[(3, 20), float32], Tensor[(126), float64], Tensor[(2, 360), float64], Tensor[(1, 8, 16), int8]) */;
    %937 = cast(%var_11251, dtype="float64") /* ty=Tensor[(11, 21), float64] */;
    %938 = sqrt(%937) /* ty=Tensor[(11, 21), float64] */;
    %939 = cast(%929, dtype="uint8") /* ty=Tensor[(1, 21), uint8] */;
    %940 = cast(%var_11251, dtype="uint8") /* ty=Tensor[(11, 21), uint8] */;
    %941 = maximum(%939, %940) /* ty=Tensor[(11, 21), uint8] */;
    %942 = cast(%941, dtype="bool") /* ty=Tensor[(11, 21), bool] */;
    %943 = shape_of(%938, dtype="int32") /* ty=Tensor[(2), int32] */;
    %944 = cast(%938, dtype="bool") /* ty=Tensor[(11, 21), bool] */;
    %945 = dyn.reshape(%942, %943, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %946 = less(%944, %945) /* ty=Tensor[(11, 21), bool] */;
    %947 = cast(%946, dtype="bool") /* ty=Tensor[(11, 21), bool] */;
    %948 = cast(%929, dtype="bool") /* ty=Tensor[(1, 21), bool] */;
    %949 = cast(%946, dtype="float64") /* ty=Tensor[(11, 21), float64] */;
    %950 = %927.1;
    %951 = subtract(%930, %931) /* ty=Tensor[(11, 21), int8] */;
    %952 = %936.4;
    %953 = equal(%947, %948) /* ty=Tensor[(11, 21), bool] */;
    %954 = acosh(%949) /* ty=Tensor[(11, 21), float64] */;
    (%950, %951, %952, meta[relay.Constant][37] /* ty=Tensor[(60), float32] */, meta[relay.Constant][38] /* ty=Tensor[(180, 4), float64] */, %953, %954)
  };
  %955(%var_11309) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(11, 21), int8], Tensor[(2, 360), float64], Tensor[(60), float32], Tensor[(180, 4), float64], Tensor[(11, 21), bool], Tensor[(11, 21), float64]) */
}

def @func_10189() -> (Tensor[(16, 8, 8), float32], Tensor[(12, 2, 14), float32], Tensor[(?, 21), uint32]) {
  @func_10187() /* ty=(Tensor[(16, 8, 8), float32], Tensor[(12, 2, 14), float32], Tensor[(?, 21), uint32]) */
}

def @func_9532() -> (Tensor[(12, 2, 14), float32], Tensor[(7, 13, 4), float64], Tensor[(364), float64]) {
  %961 = fn () -> (Tensor[(12, 2, 14), float32], Tensor[(7, 13, 4), float64], Tensor[(364), float64]) {
    %956 = @func_6098() /* ty=(Tensor[(12, 2, 14), float32],) */;
    %957 = cast(meta[relay.Constant][39] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
    %958 = reshape(%957, newshape=[7, 13, 4]) /* ty=Tensor[(7, 13, 4), float64] */;
    %959 = %956.0;
    %960 = @func_3183(%958) /* ty=Tensor[(7, 13, 4), float64] */;
    (%959, %960, meta[relay.Constant][39] /* ty=Tensor[(364), float64] */)
  };
  %961() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(7, 13, 4), float64], Tensor[(364), float64]) */
}

def @func_10673() -> (Tensor[(12, 2, 14), float32],) {
  %964 = fn () -> (Tensor[(12, 2, 14), float32],) {
    %962 = @func_6291() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */;
    %963 = %962.0;
    (%963,)
  };
  %964() /* ty=(Tensor[(12, 2, 14), float32],) */
}

def @func_9212(%var_9206: Tensor[(2, 360), float64]) -> (Tensor[(2, 360), bool],) {
  %965 = @func_7015() /* ty=(Tensor[(2, 360), float64],) */;
  %966 = %965.0;
  %967 = cast(%var_9206, dtype="bool") /* ty=Tensor[(2, 360), bool] */;
  %968 = shape_of(%966, dtype="int32") /* ty=Tensor[(2), int32] */;
  %969 = cast(%966, dtype="bool") /* ty=Tensor[(2, 360), bool] */;
  %970 = dyn.reshape(%967, %968, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %971 = logical_or(%969, %970) /* ty=Tensor[(2, 360), bool] */;
  (%971,)
}

def @func_6456(%var_6454: Tensor[(1, 21), float64]) -> Tensor[(?, 21), bool] {
  @func_6453(%var_6454) /* ty=Tensor[(?, 21), bool] */
}

def @func_2443(%var_2442: Tensor[(1, 13, 1), float32]) -> (Tensor[(1, 13, 1), float32], Tensor[(1, 8, 16), int8], Tensor[(1, 128), int8], Tensor[(2, 360), float64], Tensor[(1, 21), float64]) {
  %982 = fn (%var_2401: Tensor[(1, 13, 1), float32]) -> (Tensor[(1, 13, 1), float32], Tensor[(1, 8, 16), int8], Tensor[(1, 128), int8], Tensor[(2, 360), float64], Tensor[(1, 21), float64]) {
    %972 = cast(%var_2401, dtype="float32") /* ty=Tensor[(1, 13, 1), float32] */;
    %973 = cast(meta[relay.Constant][40] /* ty=Tensor[(1, 128), int8] */, dtype="int8") /* ty=Tensor[(1, 128), int8] */;
    %974 = reshape(%973, newshape=[1, 8, 16]) /* ty=Tensor[(1, 8, 16), int8] */;
    %975 = @func_40(%974) /* ty=(Tensor[(1, 8, 16), int8],) */;
    %976 = cast(meta[relay.Constant][41] /* ty=Tensor[(1, 21), float64] */, dtype="float64") /* ty=Tensor[(1, 21), float64] */;
    %977 = reshape(%976, newshape=[1, 7, 3]) /* ty=Tensor[(1, 7, 3), float64] */;
    %978 = @func_2092(%977) /* ty=(Tensor[(1, 7, 3), float64], Tensor[(1, 7, 3), float64], Tensor[(1, 8, 16), int8], Tensor[(2, 360), float64]) */;
    %979 = asin(%972) /* ty=Tensor[(1, 13, 1), float32] */;
    %980 = %975.0;
    %981 = %978.3;
    (%979, %980, meta[relay.Constant][40] /* ty=Tensor[(1, 128), int8] */, %981, meta[relay.Constant][41] /* ty=Tensor[(1, 21), float64] */)
  };
  %982(%var_2442) /* ty=(Tensor[(1, 13, 1), float32], Tensor[(1, 8, 16), int8], Tensor[(1, 128), int8], Tensor[(2, 360), float64], Tensor[(1, 21), float64]) */
}

def @func_10782() -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) {
  %989 = fn () -> (Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) {
    %983 = @func_7270() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */;
    %984 = @func_6389() /* ty=(Tensor[(12, 2, 14), float32],) */;
    %985 = %983.1;
    %986 = @func_9637() /* ty=Tensor[(12, 2, 14), float32] */;
    %987 = %984.0;
    %988 = @func_6270() /* ty=Tensor[(12, 2, 14), float32] */;
    (%985, %986, %987, %988)
  };
  %989() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32]) */
}

def @func_11492() -> Tensor[(12, 2, 14), float32] {
  %991 = fn () -> Tensor[(12, 2, 14), float32] {
    %990 = @func_9928() /* ty=(Tensor[(12, 2, 14), float32],) */;
    %990.0
  };
  %991() /* ty=Tensor[(12, 2, 14), float32] */
}

def @func_3735(%var_3734: Tensor[(128), int8]) -> (Tensor[(9, 11, 6), float32], Tensor[(64, 2), int8], Tensor[(2016), float64], Tensor[(128), int8]) {
  %1000 = fn (%var_3729: Tensor[(128), int8]) -> (Tensor[(9, 11, 6), float32], Tensor[(64, 2), int8], Tensor[(2016), float64], Tensor[(128), int8]) {
    %992 = cast(meta[relay.Constant][42] /* ty=Tensor[(9, 11, 6), float32] */, dtype="float32") /* ty=Tensor[(9, 11, 6), float32] */;
    %993 = cast(meta[relay.Constant][43] /* ty=Tensor[(2016), float64] */, dtype="float64") /* ty=Tensor[(2016), float64] */;
    %994 = cast(%var_3729, dtype="int8") /* ty=Tensor[(128), int8] */;
    %995 = reshape(%993, newshape=[16, 14, 9]) /* ty=Tensor[(16, 14, 9), float64] */;
    %996 = reshape(%994, newshape=[64, 2]) /* ty=Tensor[(64, 2), int8] */;
    %997 = @func_854(%995, %996) /* ty=(Tensor[(1, 8, 16), int8], Tensor[(64, 2), int8], Tensor[(16, 14, 9), uint8]) */;
    %998 = atanh(%992) /* ty=Tensor[(9, 11, 6), float32] */;
    %999 = %997.1;
    (%998, %999, meta[relay.Constant][43] /* ty=Tensor[(2016), float64] */, %var_3729)
  };
  %1000(%var_3734) /* ty=(Tensor[(9, 11, 6), float32], Tensor[(64, 2), int8], Tensor[(2016), float64], Tensor[(128), int8]) */
}

def @func_8585() -> Tensor[(12, 2, 14), float32] {
  %1001 = @func_5077() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %1001.0
}

def @func_6164() -> (Tensor[(12, 2, 14), float32],) {
  @func_6162() /* ty=(Tensor[(12, 2, 14), float32],) */
}

def @func_7564(%var_7562: Tensor[(3, 20), float32], %var_7563: Tensor[(2, 360), float64]) -> (Tensor[(12, 2, 14), float32], Tensor[(15, 4), float32], Tensor[(3, 20), float32], Tensor[(126), float64], Tensor[(2, 360), float64], Tensor[(1, 8, 16), int8]) {
  %1023 = fn (%var_7527: Tensor[(3, 20), float32], %var_7548: Tensor[(2, 360), float64]) -> (Tensor[(12, 2, 14), float32], Tensor[(15, 4), float32], Tensor[(3, 20), float32], Tensor[(126), float64], Tensor[(2, 360), float64], Tensor[(1, 8, 16), int8]) {
    %1002 = @func_3917() /* ty=(Tensor[(12, 2, 14), float32],) */;
    %1003 = cast(%var_7527, dtype="float32") /* ty=Tensor[(3, 20), float32] */;
    %1004 = cast(meta[relay.Constant][44] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
    %1005 = cast(meta[relay.Constant][44] /* ty=Tensor[(126), float64] */, dtype="int8") /* ty=Tensor[(126), int8] */;
    %1006 = reshape(%1003, newshape=[15, 4]) /* ty=Tensor[(15, 4), float32] */;
    %1007 = reshape(%1004, newshape=[6, 21]) /* ty=Tensor[(6, 21), float64] */;
    %1008 = reshape(%1005, newshape=[6, 21]) /* ty=Tensor[(6, 21), int8] */;
    %1009 = @func_6737(%1006, %1007, %1008) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(2016), float64], Tensor[(?, 8, 16), int8], Tensor[(1, 7, 3), float64], float32, Tensor[(15, 4), float32], Tensor[(6, 21), uint8], Tensor[(4, 21), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(6, 21), float64]) */;
    %1010 = @func_7015() /* ty=(Tensor[(2, 360), float64],) */;
    %1011 = %1010.0;
    %1012 = cast(%var_7548, dtype="float64") /* ty=Tensor[(2, 360), float64] */;
    %1013 = shape_of(%1011, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1014 = cast(%1011, dtype="float64") /* ty=Tensor[(2, 360), float64] */;
    %1015 = dyn.reshape(%1012, %1013, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %1016 = power(%1014, %1015) /* ty=Tensor[(2, 360), float64] */;
    %1017 = cast(%1016, dtype="float64") /* ty=Tensor[(2, 360), float64] */;
    %1018 = reshape(%1017, newshape=[15, 16, 3]) /* ty=Tensor[(15, 16, 3), float64] */;
    %1019 = @func_1884(%1018) /* ty=(Tensor[(15, 16, 3), float64], Tensor[(1, 8, 16), int8], Tensor[(128), int8]) */;
    %1020 = %1002.0;
    %1021 = %1009.5;
    %1022 = %1019.1;
    (%1020, %1021, %var_7527, meta[relay.Constant][44] /* ty=Tensor[(126), float64] */, %1016, %1022)
  };
  %1023(%var_7562, %var_7563) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(15, 4), float32], Tensor[(3, 20), float32], Tensor[(126), float64], Tensor[(2, 360), float64], Tensor[(1, 8, 16), int8]) */
}

def @func_9906(%var_9904: Tensor[(450), float64], %var_9905: Tensor[(128), int8]) -> (Tensor[(6, 15, 5), float64], Tensor[(450), float64], Tensor[(12, 2, 14), float32], Tensor[(1, 8, 16), int8], Tensor[(2016), float64], Tensor[(128), int8], Tensor[(13), float32], Tensor[(128), int8]) {
  %1045 = fn (%var_9864: Tensor[(450), float64], %var_9880: Tensor[(128), int8]) -> (Tensor[(6, 15, 5), float64], Tensor[(450), float64], Tensor[(12, 2, 14), float32], Tensor[(1, 8, 16), int8], Tensor[(2016), float64], Tensor[(128), int8], Tensor[(13), float32], Tensor[(128), int8]) {
    %1024 = cast(%var_9864, dtype="float64") /* ty=Tensor[(450), float64] */;
    %1025 = cast(%var_9864, dtype="float64") /* ty=Tensor[(450), float64] */;
    %1026 = reshape(%1024, newshape=[6, 15, 5]) /* ty=Tensor[(6, 15, 5), float64] */;
    %1027 = reshape(%1025, newshape=[6, 15, 5]) /* ty=Tensor[(6, 15, 5), float64] */;
    %1028 = @func_5611() /* ty=(Tensor[(12, 2, 14), float32],) */;
    %1029 = %1028.0;
    %1030 = cast(%1029, dtype="float32") /* ty=Tensor[(12, 2, 14), float32] */;
    %1031 = cast(meta[relay.Constant][45] /* ty=Tensor[(2016), float64] */, dtype="float64") /* ty=Tensor[(2016), float64] */;
    %1032 = cast(%var_9880, dtype="int8") /* ty=Tensor[(128), int8] */;
    %1033 = reshape(%1031, newshape=[16, 14, 9]) /* ty=Tensor[(16, 14, 9), float64] */;
    %1034 = reshape(%1032, newshape=[64, 2]) /* ty=Tensor[(64, 2), int8] */;
    %1035 = @func_854(%1033, %1034) /* ty=(Tensor[(1, 8, 16), int8], Tensor[(64, 2), int8], Tensor[(16, 14, 9), uint8]) */;
    %1036 = @func_7853() /* ty=(Tensor[(13), float32], Tensor[(1, 21), float64]) */;
    %1037 = %1035.0;
    %1038 = cast(%1037, dtype="int8") /* ty=Tensor[(1, 8, 16), int8] */;
    %1039 = reshape(%1038, newshape=[128]) /* ty=Tensor[(128), int8] */;
    %1040 = @func_8578(%1039) /* ty=(Tensor[(2, 360), float64], Tensor[(12, 2, 14), float32], Tensor[(16, 14, 9), uint8], Tensor[(128), int8], Tensor[(12, 2, 14), float32]) */;
    %1041 = @func_2256(%1026, %1027) /* ty=Tensor[(6, 15, 5), float64] */;
    %1042 = log10(%1030) /* ty=Tensor[(12, 2, 14), float32] */;
    %1043 = %1036.0;
    %1044 = %1040.3;
    (%1041, %var_9864, %1042, %1037, meta[relay.Constant][45] /* ty=Tensor[(2016), float64] */, %var_9880, %1043, %1044)
  };
  %1045(%var_9904, %var_9905) /* ty=(Tensor[(6, 15, 5), float64], Tensor[(450), float64], Tensor[(12, 2, 14), float32], Tensor[(1, 8, 16), int8], Tensor[(2016), float64], Tensor[(128), int8], Tensor[(13), float32], Tensor[(128), int8]) */
}

def @func_3939() -> (Tensor[(12, 2, 14), float32],) {
  @func_3937() /* ty=(Tensor[(12, 2, 14), float32],) */
}

def @func_7993() -> (Tensor[(12, 2, 14), bool], Tensor[(2, 360), float64]) {
  %1050 = fn () -> (Tensor[(12, 2, 14), bool], Tensor[(2, 360), float64]) {
    %1046 = @func_6235() /* ty=(Tensor[(1, 7, 3), float64], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), bool]) */;
    %1047 = @func_7015() /* ty=(Tensor[(2, 360), float64],) */;
    %1048 = %1046.2;
    %1049 = %1047.0;
    (%1048, %1049)
  };
  %1050() /* ty=(Tensor[(12, 2, 14), bool], Tensor[(2, 360), float64]) */
}

def @func_10444() -> (Tensor[(1, 21), float64],) {
  %1051 = @func_6376() /* ty=Tensor[(1, 21), float64] */;
  (%1051,)
}

def @func_8219() -> Tensor[(12, 2, 14), float32] {
  %1053 = fn () -> Tensor[(12, 2, 14), float32] {
    %1052 = @func_6162() /* ty=(Tensor[(12, 2, 14), float32],) */;
    %1052.0
  };
  %1053() /* ty=Tensor[(12, 2, 14), float32] */
}

def @func_9490(%var_9489: Tensor[(450, 1), float64]) -> (Tensor[(12, 2, 14), float32], Tensor[(?, 21), bool], Tensor[(21), float64], Tensor[(2, 360), float64], Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64], Tensor[(1, 8, 16), int8], Tensor[(128), int8], Tensor[(450), float64], Tensor[(450, 1), float64], Tensor[(12, 2, 14), float64]) {
  %1073 = fn (%var_9472: Tensor[(450, 1), float64]) -> (Tensor[(12, 2, 14), float32], Tensor[(?, 21), bool], Tensor[(21), float64], Tensor[(2, 360), float64], Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64], Tensor[(1, 8, 16), int8], Tensor[(128), int8], Tensor[(450), float64], Tensor[(450, 1), float64], Tensor[(12, 2, 14), float64]) {
    %1054 = cast(meta[relay.Constant][46] /* ty=Tensor[(21), float64] */, dtype="float64") /* ty=Tensor[(21), float64] */;
    %1055 = reshape(%1054, newshape=[1, 21]) /* ty=Tensor[(1, 21), float64] */;
    %1056 = @func_7015() /* ty=(Tensor[(2, 360), float64],) */;
    %1057 = cast(meta[relay.Constant][47] /* ty=Tensor[(128), int8] */, dtype="int8") /* ty=Tensor[(128), int8] */;
    %1058 = reshape(%1057, newshape=[1, 8, 16]) /* ty=Tensor[(1, 8, 16), int8] */;
    %1059 = @func_40(%1058) /* ty=(Tensor[(1, 8, 16), int8],) */;
    %1060 = cast(%var_9472, dtype="float64") /* ty=Tensor[(450, 1), float64] */;
    %1061 = reshape(%1060, newshape=[450]) /* ty=Tensor[(450), float64] */;
    %1062 = @func_8930(%1061) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(6, 15, 5), float64], Tensor[(450), float64], Tensor[(12, 2, 14), float32]) */;
    %1063 = @func_5512() /* ty=Tensor[(12, 2, 14), float32] */;
    %1064 = cast(%1063, dtype="float64") /* ty=Tensor[(12, 2, 14), float64] */;
    %1065 = @func_8218() /* ty=Tensor[(12, 2, 14), float32] */;
    %1066 = @func_6453(%1055) /* ty=Tensor[(?, 21), bool] */;
    %1067 = %1056.0;
    %1068 = @func_4620() /* ty=Tensor[(12, 2, 14), float32] */;
    %1069 = @func_4156() /* ty=Tensor[(1, 21), float64] */;
    %1070 = %1059.0;
    %1071 = %1062.2;
    %1072 = atanh(%1064) /* ty=Tensor[(12, 2, 14), float64] */;
    (%1065, %1066, meta[relay.Constant][46] /* ty=Tensor[(21), float64] */, %1067, %1068, %1069, %1070, meta[relay.Constant][47] /* ty=Tensor[(128), int8] */, %1071, %var_9472, %1072)
  };
  %1073(%var_9489) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(?, 21), bool], Tensor[(21), float64], Tensor[(2, 360), float64], Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64], Tensor[(1, 8, 16), int8], Tensor[(128), int8], Tensor[(450), float64], Tensor[(450, 1), float64], Tensor[(12, 2, 14), float64]) */
}

def @func_5733() -> (Tensor[(1, 21), float64], Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64]) {
  %1079 = fn () -> (Tensor[(1, 21), float64], Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64]) {
    %1074 = @func_4933() /* ty=(Tensor[(1, 21), float64],) */;
    %1075 = @func_4933() /* ty=(Tensor[(1, 21), float64],) */;
    %1076 = %1074.0;
    %1077 = @func_3929() /* ty=Tensor[(12, 2, 14), float32] */;
    %1078 = %1075.0;
    (%1076, %1077, %1078)
  };
  %1079() /* ty=(Tensor[(1, 21), float64], Tensor[(12, 2, 14), float32], Tensor[(1, 21), float64]) */
}

def @func_9352(%var_9336: Tensor[(600), int64]) -> (Tensor[(16, 8, 8), float32], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), float32], Tensor[(600), int64], Tensor[(12, 2, 14), float32]) {
  %1080 = @func_8432() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %1081 = cast(%var_9336, dtype="int64") /* ty=Tensor[(600), int64] */;
  %1082 = reshape(%1081, newshape=[600]) /* ty=Tensor[(600), int64] */;
  %1083 = @func_7716(%1082) /* ty=(Tensor[(12, 2, 14), float32], Tensor[(13), float32], Tensor[(84), float64], Tensor[(12, 2, 14), float64], Tensor[(12, 2, 14), float32], Tensor[(15, 16, 3), float64], Tensor[(600), int64], Tensor[(720), float64], Tensor[(?, 21), int32]) */;
  %1084 = @func_8661() /* ty=Tensor[(16, 8, 8), float32] */;
  %1085 = %1080.0;
  %1086 = %1083.4;
  %1087 = @func_4620() /* ty=Tensor[(12, 2, 14), float32] */;
  (%1084, %1085, %1086, %var_9336, %1087)
}

def @func_6199(%var_6196: Tensor[(9, 13, 6), float64], %var_6197: Tensor[(2016), float64], %var_6198: Tensor[(9, 13, 6), float64]) -> (Tensor[(16, 14, 9), uint8], Tensor[(2016), float64], Tensor[(128), int8], Tensor[(9, 13, 6), bool]) {
  %1103 = fn (%var_6170: Tensor[(9, 13, 6), float64], %var_6186: Tensor[(2016), float64], %var_6191: Tensor[(9, 13, 6), float64]) -> (Tensor[(16, 14, 9), uint8], Tensor[(2016), float64], Tensor[(128), int8], Tensor[(9, 13, 6), bool]) {
    %1088 = cast(%var_6186, dtype="float64") /* ty=Tensor[(2016), float64] */;
    %1089 = cast(meta[relay.Constant][48] /* ty=Tensor[(128), int8] */, dtype="int8") /* ty=Tensor[(128), int8] */;
    %1090 = reshape(%1088, newshape=[16, 14, 9]) /* ty=Tensor[(16, 14, 9), float64] */;
    %1091 = reshape(%1089, newshape=[64, 2]) /* ty=Tensor[(64, 2), int8] */;
    %1092 = @func_854(%1090, %1091) /* ty=(Tensor[(1, 8, 16), int8], Tensor[(64, 2), int8], Tensor[(16, 14, 9), uint8]) */;
    %1093 = cast(%var_6170, dtype="float64") /* ty=Tensor[(9, 13, 6), float64] */;
    %1094 = sigmoid(%1093) /* ty=Tensor[(9, 13, 6), float64] */;
    %1095 = cast(%1094, dtype="float64") /* ty=Tensor[(9, 13, 6), float64] */;
    %1096 = acosh(%1095) /* ty=Tensor[(9, 13, 6), float64] */;
    %1097 = cast(%var_6191, dtype="bool") /* ty=Tensor[(9, 13, 6), bool] */;
    %1098 = shape_of(%1096, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1099 = cast(%1096, dtype="bool") /* ty=Tensor[(9, 13, 6), bool] */;
    %1100 = dyn.reshape(%1097, %1098, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1101 = %1092.2;
    %1102 = equal(%1099, %1100) /* ty=Tensor[(9, 13, 6), bool] */;
    (%1101, %var_6186, meta[relay.Constant][48] /* ty=Tensor[(128), int8] */, %1102)
  };
  %1103(%var_6196, %var_6197, %var_6198) /* ty=(Tensor[(16, 14, 9), uint8], Tensor[(2016), float64], Tensor[(128), int8], Tensor[(9, 13, 6), bool]) */
}

def @func_3865() -> (Tensor[(12, 2, 14), float32],) {
  %1105 = fn () -> (Tensor[(12, 2, 14), float32],) {
    %1104 = @func_3835() /* ty=Tensor[(12, 2, 14), float32] */;
    (%1104,)
  };
  %1105() /* ty=(Tensor[(12, 2, 14), float32],) */
}

def @func_8433() -> (Tensor[(12, 2, 14), float32],) {
  %1107 = fn () -> (Tensor[(12, 2, 14), float32],) {
    %1106 = @func_3835() /* ty=Tensor[(12, 2, 14), float32] */;
    (%1106,)
  };
  %1107() /* ty=(Tensor[(12, 2, 14), float32],) */
}

def @func_6235() -> (Tensor[(1, 7, 3), float64], Tensor[(12, 2, 14), float32], Tensor[(12, 2, 14), bool]) {
  %1108 = @func_3987() /* ty=(Tensor[(12, 2, 14), float32], Tensor[(1, 7, 3), float64], Tensor[(1, 21), float64]) */;
  %1109 = @func_4104() /* ty=(Tensor[(12, 2, 14), float32],) */;
  %1110 = @func_5574() /* ty=(Tensor[(1, 21), float64], Tensor[(12, 2, 14), bool], Tensor[(12, 2, 14), float64]) */;
  %1111 = %1108.1;
  %1112 = %1109.0;
  %1113 = %1110.1;
  (%1111, %1112, %1113)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

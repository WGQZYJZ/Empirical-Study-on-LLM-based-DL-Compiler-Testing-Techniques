import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_72 = relay.var("var_72", dtype = "bool", shape = (2, 15, 6))#candidate|72|(2, 15, 6)|var|bool
var_73 = relay.var("var_73", dtype = "bool", shape = (2, 15, 6))#candidate|73|(2, 15, 6)|var|bool
bop_74 = relay.logical_or(var_72.astype('bool'), relay.reshape(var_73.astype('bool'), relay.shape_of(var_72))) # shape=(2, 15, 6)
output = bop_74
output2 = bop_74
func_85 = relay.Function([var_72,var_73,], output)
mod['func_85'] = func_85
mod = relay.transform.InferType()(mod)
var_86 = relay.var("var_86", dtype = "bool", shape = (2, 15, 6))#candidate|86|(2, 15, 6)|var|bool
var_87 = relay.var("var_87", dtype = "bool", shape = (2, 15, 6))#candidate|87|(2, 15, 6)|var|bool
output = func_85(var_86,var_87,)
func_88 = relay.Function([var_86,var_87,], output)
mutated_mod['func_88'] = func_88
mutated_mod = relay.transform.InferType()(mutated_mod)
const_670 = relay.const([[[9.882759,8.667702,3.580799,9.685852,-8.881085,-0.416858,-5.167080,-3.539696,7.375375,-2.692267,-3.197094,-2.585603],[-2.550823,0.423854,-3.615926,4.548412,-3.147371,4.250217,8.211123,-8.655747,6.335177,4.393181,-5.779235,0.794292],[-8.767513,5.197770,0.905113,-6.372909,8.862425,-6.363115,-4.573313,6.941243,-2.227689,-2.490968,1.431115,5.210201],[3.218729,-8.146409,4.768666,-3.493057,4.099847,-6.424242,5.038616,-0.403902,-0.624006,9.211386,-6.291155,-8.651383],[7.835451,-5.903233,0.464881,4.836817,-6.944921,6.571078,2.510240,9.690941,9.125662,9.249673,-8.538796,8.894660],[-6.886746,9.382746,9.803790,-2.555801,-6.578842,8.347523,-3.888542,9.934262,-8.502001,-8.457235,-7.575745,-9.797447],[9.684752,-3.075423,-0.271468,8.135418,-4.080690,1.663598,-0.695666,-9.508344,7.972623,-9.514892,-1.904462,-9.464305],[-4.049983,2.706625,3.684056,4.859710,3.763854,-9.817980,3.176284,5.660345,9.786181,-9.812535,-3.684630,-9.523315],[-5.587359,8.714108,-9.312923,-1.467851,4.106319,9.612872,5.345543,7.422083,1.652828,-8.036677,2.567354,-3.036351],[3.115605,-1.311007,-2.498845,6.682042,-2.163474,6.258264,-1.201264,6.176435,7.067977,-6.172043,9.669769,-4.942436],[-8.158270,-4.607779,-4.181904,-9.226443,7.882025,5.672232,7.925290,-5.296059,3.929056,8.985577,4.965716,3.498220],[4.449534,-0.337942,-1.055508,8.013832,3.300491,-8.241615,6.099118,6.443005,-7.780808,-2.665741,1.088978,9.738250]],[[-1.524936,2.890294,9.252838,3.910109,-2.531516,-0.189170,-2.402396,4.981540,6.866681,5.243577,-7.387806,9.144553],[0.746944,2.986858,-2.159114,0.763997,4.905914,7.861602,-3.646040,5.432500,-8.015181,3.072947,-5.552609,-1.155521],[-5.877626,-1.628572,3.357783,8.014743,8.876317,7.888946,5.397764,-7.844908,7.262571,-1.393043,-7.522289,2.182883],[0.244026,4.007660,9.442977,3.622874,9.365917,8.691973,5.622111,5.463305,9.335932,-7.528473,-2.356876,4.843376],[-4.762225,5.340821,7.968759,4.980553,0.793321,-6.173364,7.574042,-5.850745,1.001949,7.082356,5.855367,1.091277],[3.444982,5.335050,2.390781,-1.939644,-0.534439,-2.593767,-0.148099,-4.769077,3.979848,-7.948566,-8.351517,9.884144],[-9.496513,-0.896917,-7.345082,-2.721698,-6.189503,1.285258,-4.737192,1.806175,6.498841,7.728086,-0.567823,2.684848],[-8.435710,-3.649154,-3.518038,7.875671,-5.296925,-1.833083,4.791248,-0.384438,4.300294,9.171582,6.813365,-7.310190],[7.979089,-3.765471,-0.477347,5.230318,-1.544853,1.135403,7.503609,7.358481,5.053441,-6.991520,4.886917,-3.002661],[-6.928681,-0.945844,-3.982680,-8.360481,-5.797822,1.314967,-0.653394,-1.249424,-4.700633,-7.215705,-3.227691,5.930806],[2.399014,-8.664046,7.718611,9.640680,3.011325,4.201812,0.648648,2.791283,4.543364,-9.704266,8.148590,-3.982369],[-8.267490,9.414574,-7.596491,-9.219447,4.960450,-7.615739,5.574517,-0.635770,-7.812159,8.815752,-5.735025,8.695450]],[[3.800100,8.098983,-1.184649,9.933149,-8.506763,6.635277,7.720748,1.833935,5.941964,4.052574,8.352092,6.368725],[-5.839917,7.836568,0.113173,-3.257676,-0.277180,1.235782,6.321747,-7.193231,5.003724,-0.771677,0.946695,4.534708],[-0.063867,-6.033862,3.456842,9.968646,-0.109846,-3.844109,6.428289,-5.105058,-4.651215,2.075958,-1.848314,-7.135371],[3.247559,8.880398,-7.969755,9.667399,4.764796,-4.504627,1.096741,-3.332886,0.457456,7.592786,5.214111,-5.015359],[4.902362,1.420749,7.807763,-2.434365,4.187391,-3.676067,-2.575927,-5.331967,1.672761,-5.162366,-2.120733,-4.902299],[8.337965,-8.127333,9.192225,4.303763,-4.982916,2.639275,-1.177899,1.160297,8.836819,6.546950,7.398369,2.505506],[-1.251170,-7.155434,7.017780,-0.771264,-3.752786,9.989124,-0.673403,0.833839,-2.583683,-0.782849,-8.732917,-2.073097],[4.518328,2.364651,5.424967,0.483568,7.242472,-0.278634,-7.326065,5.144089,0.018508,7.574214,0.018669,7.018494],[4.246280,-2.074362,5.583222,9.213739,-2.582059,3.224617,2.486418,-6.992227,-0.179291,1.090636,7.120529,-6.390438],[-3.738955,-4.017330,-1.444664,4.737780,-6.759549,8.529078,-9.104665,-4.625005,0.138818,-0.733812,0.724619,6.160472],[1.998723,-7.365316,-6.939434,9.677378,-3.551376,-5.131398,0.641521,-3.791404,-8.771991,9.811590,-3.968872,5.035255],[-3.977822,6.603379,-1.525154,9.257384,1.922876,9.216873,-7.868428,-3.605296,-0.355322,6.208141,-3.545623,0.441237]]], dtype = "float32")#candidate|670|(3, 12, 12)|const|float32
uop_671 = relay.atan(const_670.astype('float32')) # shape=(3, 12, 12)
var_674 = relay.var("var_674", dtype = "float32", shape = (3, 12, 12))#candidate|674|(3, 12, 12)|var|float32
bop_675 = relay.subtract(const_670.astype('int16'), relay.reshape(var_674.astype('int16'), relay.shape_of(const_670))) # shape=(3, 12, 12)
output = relay.Tuple([uop_671,bop_675,])
output2 = relay.Tuple([uop_671,bop_675,])
func_679 = relay.Function([var_674,], output)
mod['func_679'] = func_679
mod = relay.transform.InferType()(mod)
mutated_mod['func_679'] = func_679
mutated_mod = relay.transform.InferType()(mutated_mod)
var_680 = relay.var("var_680", dtype = "float32", shape = (3, 12, 12))#candidate|680|(3, 12, 12)|var|float32
func_679_call = mutated_mod.get_global_var('func_679')
call_681 = func_679_call(var_680)
output = call_681
func_682 = relay.Function([var_680], output)
mutated_mod['func_682'] = func_682
mutated_mod = relay.transform.InferType()(mutated_mod)
var_703 = relay.var("var_703", dtype = "uint64", shape = (8, 15, 9))#candidate|703|(8, 15, 9)|var|uint64
var_704 = relay.var("var_704", dtype = "uint64", shape = (8, 15, 9))#candidate|704|(8, 15, 9)|var|uint64
bop_705 = relay.minimum(var_703.astype('uint64'), relay.reshape(var_704.astype('uint64'), relay.shape_of(var_703))) # shape=(8, 15, 9)
output = bop_705
output2 = bop_705
func_708 = relay.Function([var_703,var_704,], output)
mod['func_708'] = func_708
mod = relay.transform.InferType()(mod)
mutated_mod['func_708'] = func_708
mutated_mod = relay.transform.InferType()(mutated_mod)
func_708_call = mutated_mod.get_global_var('func_708')
var_710 = relay.var("var_710", dtype = "uint64", shape = (8, 15, 9))#candidate|710|(8, 15, 9)|var|uint64
var_711 = relay.var("var_711", dtype = "uint64", shape = (8, 15, 9))#candidate|711|(8, 15, 9)|var|uint64
call_709 = func_708_call(var_710,var_711,)
output = call_709
func_712 = relay.Function([var_710,var_711,], output)
mutated_mod['func_712'] = func_712
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1400 = relay.const([[[-8.164886,-9.344621,6.063226,-6.771949,-7.619204,-2.485202,-5.085793,-3.860382,-7.891864,3.563042],[8.134792,-3.627660,1.709861,5.181718,6.446314,9.281118,-7.338096,-4.342684,6.723503,-5.593361],[-0.700376,-1.793676,3.153069,9.243204,-4.203803,0.443270,9.519978,-2.466694,-0.010893,-0.777265],[-5.821899,-6.894000,9.024905,6.212334,3.013021,-9.982375,-4.205537,-3.234671,-3.912769,1.551644],[4.633509,-9.589401,1.138665,9.058083,-2.904548,4.916320,0.320369,-5.678642,1.742138,6.623090],[2.116058,-3.363465,-2.083079,-8.298089,8.838978,-1.620092,-1.098545,1.645101,5.851195,4.768504],[-8.603595,9.961492,-8.115392,-6.872262,8.076297,-1.605137,-1.709954,-4.996811,-5.511372,9.015628],[8.931510,-2.804959,-2.205144,9.980364,-8.338009,-5.061433,8.092949,-6.458013,1.461271,6.811096],[-8.055369,7.727587,2.653711,2.881790,-7.452526,8.015992,-4.762335,6.151233,7.677560,0.041532],[-5.229743,-1.129301,1.580683,8.207281,7.010923,8.798674,6.050229,-1.737875,-4.450913,-9.956181],[-8.147391,-9.977047,3.824521,-5.390651,-8.849587,-1.429396,2.650039,4.338541,0.644498,5.435097],[7.812622,-0.178413,3.738426,0.127625,-2.845493,5.550936,2.640580,-4.189378,5.736443,2.151377],[-6.066452,-8.387194,-2.226270,-7.274121,4.282082,9.710254,-2.386587,4.848605,-5.518341,7.067790],[-6.889369,-6.703934,5.646728,-5.652564,7.400784,-0.514222,3.972948,6.073150,-9.300317,4.283691]],[[3.457439,9.170172,-9.883544,9.997808,8.419569,4.045824,5.174578,-1.529383,-4.242826,-9.176252],[-5.998938,8.853043,0.211563,-5.725991,-5.956513,1.820393,-1.083340,1.994380,8.668277,1.569071],[-6.477219,-6.417105,-4.989062,-8.158444,0.071200,-0.898113,8.641426,0.106295,-1.828882,3.154419],[5.878479,-2.270294,5.462842,-6.555461,4.780694,2.320160,2.722681,8.026663,-1.274778,-3.793621],[-2.003765,-6.927708,9.397014,7.011984,0.209579,-6.734163,9.297190,-1.649590,2.188391,-0.542026],[-3.459411,-3.026008,0.214742,-5.810667,9.132054,-0.698970,7.942968,8.354809,-2.693219,8.679559],[3.814260,2.730242,-5.247581,7.580178,-9.303741,-8.651322,-5.316999,-6.932444,6.775334,8.835535],[-8.090352,-9.804995,-7.428337,-5.486555,-6.073921,-7.739427,7.197006,8.657350,7.346243,3.115617],[-1.752323,6.624601,-9.217478,-3.205576,-9.184718,-1.297117,2.778817,-9.625584,5.459318,7.004165],[-3.766248,4.014315,5.382003,-4.834966,-2.217463,-5.067237,3.866543,3.071392,-4.758240,9.776396],[2.050182,0.184001,8.832713,2.290923,-5.697386,-4.732356,-8.783924,-7.842645,-3.150442,4.518283],[2.267651,0.766827,5.647223,-0.120744,9.657634,-8.659317,-1.564714,1.338730,2.621745,-8.016320],[2.608379,1.904403,-5.477085,1.074139,-1.554204,7.293076,7.929983,-7.343413,4.887869,-1.218004],[2.469590,-8.341154,-6.216160,1.142027,-9.891204,0.179569,-3.518134,7.332984,-4.437578,-8.701720]],[[6.086630,-2.286703,-0.726640,2.252126,-3.823538,-2.383590,-3.390592,7.447079,0.730892,2.883978],[-4.272989,2.649423,1.655229,7.312145,-2.523371,-2.000827,-1.236435,-5.053885,6.473019,-1.562499],[8.754700,1.710923,6.288515,-8.647591,1.083771,-6.315775,-2.947231,1.232323,3.384770,3.129864],[-4.875921,5.595020,1.887364,1.823584,-8.893576,-6.893551,4.112383,7.222927,-0.642811,3.032640],[5.610293,6.808280,3.167888,4.362006,8.800941,-9.083401,-7.444857,-0.828505,5.338561,6.169081],[-5.149275,3.828266,4.759108,-6.638118,-3.083484,-8.851398,-6.972926,7.966177,-5.093730,-1.089444],[-4.186373,7.467269,-5.324962,-6.474007,4.342422,2.517985,0.999255,6.403203,-6.744202,-5.198220],[7.568736,-7.273457,-7.102935,-5.983974,7.127250,-6.768872,3.291452,-9.319532,-9.370146,-5.166649],[-0.317644,4.473958,-7.933618,5.225762,-5.069752,-1.498437,-4.219195,2.256606,-5.677705,8.792752],[-8.606393,8.588145,3.309576,-0.653088,-3.207477,7.719534,-8.854518,-2.949913,-0.387157,5.237101],[5.584803,-8.861844,8.574306,-0.018699,0.855251,9.549170,-9.045610,-9.214584,-7.865675,5.557932],[4.228797,-3.380465,8.891185,-5.119778,-4.333319,-6.322151,0.349969,5.755465,0.858547,8.093000],[7.430139,-0.802885,7.317288,6.767127,0.823994,4.287496,3.544381,1.250083,-3.001273,-2.326937],[8.382677,3.031216,-2.014024,6.738993,-2.950601,-4.731235,5.820242,7.858227,3.284332,8.595058]],[[3.369749,3.419699,-6.662355,0.068206,5.846298,9.157390,0.686024,0.413413,4.071856,1.481970],[7.572816,7.383100,-6.366629,-9.546362,3.822377,0.209490,-6.054545,0.697092,7.427662,2.519502],[9.336167,2.935903,8.560079,-2.413852,-7.220797,9.560327,2.439523,-9.428129,4.473398,-8.079036],[-1.372041,-6.666931,-8.650860,6.408477,-9.669039,-3.531072,6.105322,-8.488899,3.602052,0.515625],[-1.422305,1.264141,8.750546,-8.876968,-7.147239,1.395861,-6.878896,9.131322,-9.231001,-8.781135],[-9.796906,-7.795314,-3.925739,-9.355436,3.454432,9.994798,-6.644135,1.156834,0.721337,0.315588],[-2.319722,-9.026686,-2.410779,-0.880083,8.937941,0.808455,6.734841,3.886715,1.090494,5.133760],[-8.595408,-5.957334,-8.888392,-0.003654,7.042941,7.153687,4.223527,-1.095525,-1.180939,-6.215217],[6.960387,3.674043,3.026336,0.602773,-2.573439,0.187849,0.882526,-4.796317,6.879890,5.293694],[-9.500030,7.607609,2.357980,7.503685,-2.665228,9.585486,4.014814,-4.772495,0.139664,4.195895],[8.449086,-8.963036,4.476160,-6.903715,-1.261900,0.798158,-3.318453,-8.789121,8.693782,5.794688],[0.222081,7.868531,1.830994,4.829151,7.412652,8.745885,3.991437,-3.912796,-6.192650,6.028461],[-0.931296,7.543814,1.449293,-8.913649,1.062513,-6.289888,-4.760821,2.282751,-1.722662,9.012931],[-7.567653,-1.273334,-6.466993,-3.780008,1.086090,9.843552,-8.076216,-5.262758,-7.814897,-7.090912]],[[8.238786,-7.086491,8.977145,3.196094,-8.122683,5.160449,3.914806,-1.466004,-3.366983,-2.845637],[4.172800,-0.106762,-7.449353,9.714243,7.769991,-1.823330,6.183932,1.010564,7.842464,-1.746686],[5.595689,-8.794430,8.498283,-9.761438,9.963861,4.430189,8.739870,-2.983223,-4.540337,-1.488222],[-6.003572,-9.564270,-8.937290,-9.878000,7.030938,0.889277,-7.761206,5.313621,9.586249,-3.628832],[0.778830,8.966835,4.635369,-1.613876,7.904419,8.769083,-3.895090,1.741342,7.400811,-9.152307],[-3.278247,7.561761,6.882898,-3.437630,6.742628,0.995914,-9.440388,5.201370,-9.311104,-4.532999],[-9.247523,1.937682,6.214255,1.472424,-7.437323,9.399247,-5.971233,-0.065989,-9.077627,-7.720661],[8.673355,-0.517441,-6.046332,6.811283,7.029897,-8.287063,6.425539,-0.162927,6.006548,-0.580712],[6.937305,-7.042885,-8.698331,9.330389,-3.543341,-5.187393,3.226684,7.266244,-8.172782,3.642217],[-2.036355,-2.192344,9.805490,4.193904,-5.058788,0.571390,4.856145,2.534066,-3.959513,-8.274910],[-4.648399,-2.907183,6.642851,0.693468,-8.646055,-6.351095,2.790737,-3.468845,0.529342,1.724308],[3.450024,-7.099861,-6.362126,1.144633,-4.382701,6.233361,-1.228706,5.917208,-2.100693,-7.835399],[5.599865,3.524440,2.486846,4.202070,5.061108,-5.346549,7.788297,-7.281573,4.940087,-9.366485],[5.971405,-6.742945,6.460674,-7.295627,5.447623,-2.950086,8.080951,6.193098,-2.797985,8.028937]],[[4.804856,-2.262705,-3.978357,-2.176520,-9.878053,-4.688123,1.509673,-2.727041,-4.428311,-8.108894],[1.274228,-2.095171,-9.250752,7.096257,-4.827672,8.426939,-8.087716,2.875538,-6.735661,-6.052720],[-8.047407,-6.614255,-8.464134,6.201784,9.151131,-4.772277,-0.299355,4.218861,-6.111903,6.454670],[-8.770693,-3.997428,4.020720,8.412839,8.085908,-1.963073,-4.544368,6.215440,6.902080,6.524220],[-8.693341,6.168680,-9.948268,-3.675188,1.375696,-8.161873,-9.535563,0.631892,-8.000556,1.618730],[-8.988569,4.547283,-3.727163,3.882446,6.380671,9.016041,-4.350166,7.011936,7.320876,1.825790],[3.851387,-7.662242,-0.459343,1.716516,1.954186,7.636378,7.282144,-7.670330,0.945250,9.459340],[1.121564,4.308579,-4.481089,-4.503247,-3.050061,-8.984706,1.938335,5.397195,-2.574758,-6.561241],[8.805917,-7.539199,2.529693,-5.486016,-8.324026,1.812420,-7.778303,-4.070896,1.673742,7.308750],[-6.592335,-1.992694,-9.806745,-0.196759,-8.329625,-0.939539,-0.053816,-3.183026,-9.381907,-8.915231],[1.317969,-5.441166,-0.462947,-7.294783,1.342621,9.448714,8.681882,-5.249254,6.781493,8.737092],[0.833937,9.731764,-9.323403,2.796688,8.239383,3.589327,-3.188932,-4.763816,-2.406574,-4.284883],[-2.133647,-2.698696,5.978284,-4.798461,0.698144,7.684865,3.750415,-7.395905,-4.914349,-7.652141],[5.270134,-9.075100,1.939509,3.359762,7.974543,-6.223425,8.696831,-6.889510,7.350834,-6.912611]],[[-6.711700,7.261405,-6.033493,3.487187,-5.117057,-6.269227,8.252381,1.447535,-8.750257,6.803379],[-5.310229,6.684206,-1.119196,2.134177,-4.632234,-6.016042,4.557258,4.754739,1.507623,-3.357869],[-2.541197,1.958151,-5.500115,9.609416,5.832545,-9.681109,-6.235083,-0.252163,3.422155,-7.719921],[2.666873,-8.264775,-2.229950,-2.664878,-5.902983,1.851426,-6.228638,1.833907,0.102580,9.836110],[7.749430,0.879743,1.349297,-9.042931,0.155141,4.775442,6.386544,4.593568,0.738175,2.992704],[-6.707578,-8.226296,1.579612,4.154222,-3.411331,-6.924568,1.467394,3.661272,1.037129,2.323935],[-1.117102,8.180915,6.645229,-2.220052,-5.080439,-1.974103,-0.347360,3.770389,-0.422305,9.205836],[5.714632,-4.014077,0.758795,-1.316553,5.382955,2.060074,-3.317924,2.435210,7.996954,-5.043217],[9.200223,-9.826536,4.808427,-0.537153,7.469659,1.249009,6.188370,7.584455,8.213013,1.923963],[9.402062,0.865012,3.380384,7.737574,-6.610767,-4.752930,2.941682,6.576340,3.430029,-8.945600],[3.433852,9.245825,-4.750233,7.204686,-4.946419,-9.390026,6.263904,4.894305,6.623821,5.558807],[-1.495265,8.511699,0.006495,5.743269,-0.157950,5.220270,7.283582,-2.685036,2.296019,5.540278],[-2.842926,4.463944,9.664025,-8.697504,-4.033611,-8.777446,-5.577278,-1.655767,1.800928,-5.886083],[2.655887,4.787890,-1.941454,-0.731842,-4.173364,-1.839448,-9.657036,-2.977434,-7.514153,-2.970338]],[[3.550058,-9.758768,-6.794115,4.565266,-8.799775,-8.290564,5.281985,-4.085499,6.014145,9.359833],[-2.713774,9.777266,9.328275,6.369226,-5.828317,-0.390567,-6.851141,0.483110,4.199224,-4.102634],[-1.465938,-0.755219,2.053785,-7.041281,9.900639,-8.324542,7.859194,-4.064054,4.268380,-4.536743],[2.954370,6.693147,2.890611,2.368831,7.210749,-2.918674,-0.294372,9.481852,9.768593,-4.473389],[6.985248,6.478627,-0.055242,-8.432448,8.321090,-2.841048,1.823811,-7.895699,-2.338150,-7.741541],[-7.763998,-0.376315,3.962901,-7.623695,5.630921,5.058414,2.562200,6.449908,8.786673,6.281426],[-9.224322,7.605783,-9.056735,6.144962,7.025890,-2.393984,-5.874649,-4.613462,8.631852,9.050645],[-6.883306,7.139560,5.941126,0.699364,-6.585496,2.086980,-9.583794,7.258851,-4.370641,-4.286065],[-8.243530,4.345778,8.843724,-3.821026,-7.575699,3.645334,-2.873171,-3.267182,6.473218,-5.888733],[6.860933,-9.727967,8.948436,-2.347908,-0.702710,1.871618,4.856716,-4.689782,6.402236,7.814027],[-5.612759,-4.467770,-1.448056,-6.596668,-7.721277,8.568399,-7.286399,-3.521351,2.138370,4.965419],[2.884109,-1.553801,-7.615228,7.887259,7.562655,2.872412,0.494843,3.519724,1.488123,9.830346],[-3.865576,8.650942,-6.061450,-5.071584,-9.609999,-7.367278,8.063115,-5.106271,9.526748,1.299957],[5.496627,-8.465303,-5.911504,-0.862319,5.361057,6.969955,-7.479778,-9.462209,-4.311358,2.296429]],[[-6.302239,-7.844888,-0.207002,6.051964,-4.059772,0.466427,-3.475043,-3.856594,2.660261,-7.691456],[-2.903622,-4.430898,-3.885895,-7.294083,-4.057356,9.873508,8.795703,-3.878608,-4.245459,8.913390],[-4.429396,-2.858184,-4.192591,4.639913,6.489577,-1.878219,5.433759,2.897532,8.959147,8.089915],[8.808737,-8.428807,-3.143091,-0.339140,9.354193,-7.769137,-0.546455,-0.422591,6.492143,-4.841873],[5.657420,6.119187,-4.718441,-8.687522,-8.682566,9.188541,-1.690195,-5.087480,-8.719293,7.088824],[-5.875888,1.839817,0.378134,6.292470,1.233576,7.194933,-5.080913,2.994442,5.546510,-3.805464],[9.498760,9.909118,9.023571,4.827038,6.699885,3.373684,-0.467947,-9.937822,-4.723103,-1.930049],[-9.884810,-6.073996,-9.238765,0.219697,5.364163,0.660718,4.716337,-0.715876,-2.238616,-5.022640],[6.807894,2.142296,-3.018114,9.463296,6.730283,-6.239863,8.597506,-7.990836,-1.081136,-1.051027],[3.077212,2.471159,-6.186096,-2.535334,9.558638,-6.478982,-2.509635,-6.224652,-5.036382,-9.427799],[9.437243,8.703395,5.147745,1.362904,4.049614,-5.187280,2.256782,7.434701,7.767756,3.238858],[-4.357449,1.905562,4.138727,7.855957,5.870155,-1.995885,-6.979548,-9.988882,0.150348,7.319413],[8.188896,-1.388384,0.842044,-2.937503,2.000750,7.000189,-0.028241,-6.944708,-1.393383,6.537502],[1.925270,8.986491,4.109118,-0.355150,9.930070,2.959464,1.235451,6.567491,4.704744,1.451080]]], dtype = "float32")#candidate|1400|(9, 14, 10)|const|float32
uop_1401 = relay.sin(const_1400.astype('float32')) # shape=(9, 14, 10)
bop_1411 = relay.less(const_1400.astype('bool'), relay.reshape(uop_1401.astype('bool'), relay.shape_of(const_1400))) # shape=(9, 14, 10)
var_1418 = relay.var("var_1418", dtype = "bool", shape = (9, 14, 10))#candidate|1418|(9, 14, 10)|var|bool
bop_1419 = relay.subtract(bop_1411.astype('float64'), relay.reshape(var_1418.astype('float64'), relay.shape_of(bop_1411))) # shape=(9, 14, 10)
func_708_call = mod.get_global_var('func_708')
func_712_call = mutated_mod.get_global_var('func_712')
var_1429 = relay.var("var_1429", dtype = "uint64", shape = (1080,))#candidate|1429|(1080,)|var|uint64
call_1428 = func_708_call(relay.reshape(var_1429.astype('uint64'), [8, 15, 9]), relay.reshape(var_1429.astype('uint64'), [8, 15, 9]), )
call_1430 = func_708_call(relay.reshape(var_1429.astype('uint64'), [8, 15, 9]), relay.reshape(var_1429.astype('uint64'), [8, 15, 9]), )
output = relay.Tuple([bop_1419,call_1428,var_1429,])
output2 = relay.Tuple([bop_1419,call_1430,var_1429,])
func_1434 = relay.Function([var_1418,var_1429,], output)
mod['func_1434'] = func_1434
mod = relay.transform.InferType()(mod)
var_1435 = relay.var("var_1435", dtype = "bool", shape = (9, 14, 10))#candidate|1435|(9, 14, 10)|var|bool
var_1436 = relay.var("var_1436", dtype = "uint64", shape = (1080,))#candidate|1436|(1080,)|var|uint64
output = func_1434(var_1435,var_1436,)
func_1437 = relay.Function([var_1435,var_1436,], output)
mutated_mod['func_1437'] = func_1437
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1512 = relay.var("var_1512", dtype = "float64", shape = (2, 2, 9))#candidate|1512|(2, 2, 9)|var|float64
uop_1513 = relay.sinh(var_1512.astype('float64')) # shape=(2, 2, 9)
func_708_call = mod.get_global_var('func_708')
func_712_call = mutated_mod.get_global_var('func_712')
const_1517 = relay.const([[8,-6],[5,4],[6,-9],[2,-2],[2,-2],[-2,2],[-2,-6],[6,2],[9,1],[-4,7],[-4,-8],[2,1],[-1,-6],[10,6],[6,10],[3,8],[-9,-6],[-3,5],[-1,-6],[-5,6],[10,9],[-1,-1],[-7,3],[-2,-2],[7,6],[-10,1],[-5,4],[-6,6],[-6,5],[1,6],[-6,8],[9,10],[7,-8],[-8,10],[-8,3],[-9,-1],[5,-2],[-3,-6],[9,-8],[3,4],[4,9],[-5,-5],[-7,8],[-1,-1],[-4,-5],[-3,-7],[-5,1],[-2,10],[-1,8],[-9,-8],[5,-4],[-4,3],[8,-6],[-8,-5],[5,-1],[-5,3],[-1,3],[-7,-8],[-6,9],[7,-9],[-1,-8],[-7,4],[-3,10],[-7,3],[5,-9],[6,5],[10,-3],[7,4],[8,-8],[8,-8],[6,-8],[-1,10],[8,8],[-5,-7],[8,-3],[-3,-4],[-10,-5],[-4,-9],[9,3],[8,-7],[3,10],[10,-4],[-9,-7],[6,1],[-6,6],[9,2],[3,-9],[-1,9],[2,3],[-9,4],[5,-8],[3,-1],[-8,-10],[-4,-7],[10,-10],[-2,4],[-10,-8],[5,5],[-3,3],[4,6],[-2,-9],[9,-3],[-1,7],[-4,9],[-9,3],[1,3],[10,-2],[1,6],[-2,-2],[-10,9],[10,5],[8,-9],[3,8],[9,7],[-9,-6],[7,-6],[7,-10],[-2,10],[-5,-7],[-1,10],[8,9],[1,-9],[-5,3],[-6,-10],[8,2],[9,4],[-9,8],[9,3],[6,-5],[7,7],[8,5],[10,7],[-7,8],[10,-1],[4,8],[-7,-9],[4,10],[-7,-5],[-7,-8],[-8,-5],[-5,3],[4,6],[-5,-9],[7,7],[-3,5],[6,-6],[-2,1],[3,-7],[6,6],[3,-8],[-8,5],[9,7],[1,-6],[3,1],[8,7],[6,10],[3,-4],[7,7],[10,-1],[3,3],[-1,10],[-2,-9],[-3,-4],[10,2],[9,10],[-7,1],[10,-10],[-9,9],[-3,4],[-2,-8],[1,3],[-5,7],[-1,9],[-5,-9],[10,9],[2,1],[-9,-1],[-10,-5],[10,-6],[-4,-6],[-1,5],[5,2],[3,7],[1,3],[5,-2],[-4,9],[6,-6],[8,7],[8,5],[8,-1],[1,10],[-7,4],[6,8],[3,-3],[-3,-1],[-2,-10],[4,6],[-7,7],[-4,-1],[-10,5],[-1,8],[-10,-4],[2,2],[8,4],[9,6],[-6,3],[-9,-3],[9,7],[-10,-3],[5,-1],[-5,-1],[-9,4],[7,-4],[-4,5],[3,-4],[-7,-4],[5,-7],[-7,9],[3,4],[7,2],[10,10],[-4,7],[4,-2],[4,8],[-3,2],[-5,-1],[-3,2],[3,-7],[-9,6],[2,3],[-9,-9],[-10,2],[3,-5],[-9,9],[-9,3],[7,6],[-6,1],[8,-6],[-10,-9],[1,6],[-7,2],[-5,-7],[4,-10],[-1,6],[1,-7],[-3,5],[7,4],[5,-4],[10,8],[9,-4],[5,-3],[-2,-4],[-8,1],[4,-5],[-10,-1],[-10,9],[10,-9],[-3,3],[9,-2],[9,-4],[-7,-8],[-1,-1],[3,-9],[-6,-5],[6,-7],[-7,6],[-8,-8],[6,-4],[7,3],[-5,8],[-8,-1],[7,-1],[9,3],[8,-5],[10,3],[-5,9],[9,9],[-8,-3],[6,-1],[1,-6],[-1,8],[8,8],[-7,4],[-8,-4],[-6,-2],[-10,3],[9,6],[5,10],[-9,-7],[-2,-7],[-8,10],[5,-2],[5,-7],[8,-8],[3,7],[-6,-6],[-7,-5],[8,7],[2,-1],[-1,8],[-6,10],[7,1],[6,8],[4,8],[-6,10],[5,-9],[7,2],[4,6],[6,-4],[-8,3],[-2,5],[-4,9],[7,6],[-9,7],[-7,-7],[-2,3],[-1,-3],[3,-2],[-8,2],[9,3],[-3,8],[-6,-9],[7,-5],[9,6],[-4,-10],[6,1],[8,-7],[-7,2],[1,-1],[8,-1],[-7,1],[6,-9],[-10,-9],[-8,10],[6,-2],[-10,-2],[-8,-10],[-6,-9],[-9,9],[2,8],[-7,-8],[-9,-3],[-6,9],[-1,6],[5,-6],[-9,4],[-7,-3],[-2,-9],[-8,-6],[-5,-4],[-3,-8],[-6,-6],[2,-4],[6,7],[2,10],[-3,-3],[-8,-9],[-7,6],[6,8],[8,-4],[5,9],[5,-3],[-8,-3],[4,3],[6,-4],[5,-4],[-4,4],[6,2],[6,-3],[9,-10],[-8,7],[10,3],[2,-8],[9,-7],[-6,-5],[-8,6],[-8,7],[-4,4],[1,-4],[-1,-6],[8,9],[9,10],[-6,-10],[2,10],[-4,7],[7,7],[-5,10],[2,9],[1,-7],[4,6],[2,6],[-1,-6],[-5,-10],[-6,-2],[-2,7],[10,1],[-3,-2],[6,7],[-5,4],[1,-10],[4,-1],[-10,3],[7,5],[-5,-9],[-7,-5],[10,-10],[7,10],[3,6],[-9,-10],[-2,-1],[1,6],[-2,-6],[7,-1],[5,1],[-7,-2],[8,-10],[7,-8],[-2,-7],[4,-1],[-10,7],[-8,4],[2,-7],[-6,-1],[-9,3],[-2,-4],[-1,9],[4,-4],[-9,-2],[1,-4],[1,6],[-2,-2],[-10,6],[8,-8],[1,-4],[1,1],[-1,9],[-1,7],[-4,-1],[-9,-9],[10,3],[-5,6],[-10,5],[8,-1],[1,1],[5,-3],[-2,-5],[-7,-2],[-10,-4],[-7,5],[1,-1],[5,8],[-4,-5],[-8,7],[-3,10],[9,-7],[-8,5],[1,5],[9,-1],[-9,-10],[9,-1],[-6,-6],[3,8],[-8,2],[-8,-3],[7,5],[5,-2],[-4,-7],[-10,9],[-9,6],[10,3],[-3,-6],[-1,3],[1,8],[1,-2],[4,9],[10,-1],[-2,-10],[-3,2],[7,8],[-1,10],[7,9],[7,7],[1,-7],[-6,9],[-7,2],[-1,7],[-4,-7],[-6,-6],[4,2],[-5,3],[5,-8],[-10,10],[-5,1],[-7,-5],[5,-8],[1,-3],[9,6],[-4,-1],[-1,-9],[7,10],[2,-9],[10,-3],[-10,-6],[-5,5],[4,-8],[-10,-7],[-10,-2],[8,9],[1,-10],[-6,8],[2,-4],[-2,-10],[10,-5],[9,-1],[-10,3],[3,7],[-2,9],[-8,3],[-8,8],[7,8],[-6,-8],[-9,-3],[10,-7],[10,10],[-3,-1],[3,-2],[10,-3],[-9,-4],[8,-1],[1,-5],[10,7],[-8,-3],[4,-1],[-7,-10],[-4,-5],[7,-10],[-5,9],[-5,-8],[-6,6],[-2,4]], dtype = "uint64")#candidate|1517|(540, 2)|const|uint64
call_1516 = func_708_call(relay.reshape(const_1517.astype('uint64'), [8, 15, 9]), relay.reshape(const_1517.astype('uint64'), [8, 15, 9]), )
call_1518 = func_708_call(relay.reshape(const_1517.astype('uint64'), [8, 15, 9]), relay.reshape(const_1517.astype('uint64'), [8, 15, 9]), )
uop_1528 = relay.log10(const_1517.astype('float32')) # shape=(540, 2)
func_708_call = mod.get_global_var('func_708')
func_712_call = mutated_mod.get_global_var('func_712')
call_1533 = func_708_call(relay.reshape(const_1517.astype('uint64'), [8, 15, 9]), relay.reshape(call_1516.astype('uint64'), [8, 15, 9]), )
call_1534 = func_708_call(relay.reshape(const_1517.astype('uint64'), [8, 15, 9]), relay.reshape(call_1516.astype('uint64'), [8, 15, 9]), )
func_708_call = mod.get_global_var('func_708')
func_712_call = mutated_mod.get_global_var('func_712')
call_1535 = func_708_call(relay.reshape(call_1516.astype('uint64'), [8, 15, 9]), relay.reshape(call_1533.astype('uint64'), [8, 15, 9]), )
call_1536 = func_708_call(relay.reshape(call_1516.astype('uint64'), [8, 15, 9]), relay.reshape(call_1533.astype('uint64'), [8, 15, 9]), )
func_85_call = mod.get_global_var('func_85')
func_88_call = mutated_mod.get_global_var('func_88')
var_1542 = relay.var("var_1542", dtype = "bool", shape = (6, 30))#candidate|1542|(6, 30)|var|bool
call_1541 = func_85_call(relay.reshape(var_1542.astype('bool'), [2, 15, 6]), relay.reshape(var_1542.astype('bool'), [2, 15, 6]), )
call_1543 = func_85_call(relay.reshape(var_1542.astype('bool'), [2, 15, 6]), relay.reshape(var_1542.astype('bool'), [2, 15, 6]), )
func_1434_call = mod.get_global_var('func_1434')
func_1437_call = mutated_mod.get_global_var('func_1437')
var_1558 = relay.var("var_1558", dtype = "bool", shape = (90, 14))#candidate|1558|(90, 14)|var|bool
call_1557 = relay.TupleGetItem(func_1434_call(relay.reshape(var_1558.astype('bool'), [9, 14, 10]), relay.reshape(call_1535.astype('uint64'), [1080,]), ), 0)
call_1559 = relay.TupleGetItem(func_1437_call(relay.reshape(var_1558.astype('bool'), [9, 14, 10]), relay.reshape(call_1535.astype('uint64'), [1080,]), ), 0)
bop_1562 = relay.bitwise_xor(call_1535.astype('uint8'), relay.reshape(uop_1528.astype('uint8'), relay.shape_of(call_1535))) # shape=(8, 15, 9)
bop_1565 = relay.bitwise_xor(call_1536.astype('uint8'), relay.reshape(uop_1528.astype('uint8'), relay.shape_of(call_1536))) # shape=(8, 15, 9)
uop_1576 = relay.acos(uop_1528.astype('float32')) # shape=(540, 2)
output = relay.Tuple([uop_1513,call_1516,call_1533,call_1541,var_1542,call_1557,var_1558,bop_1562,uop_1576,])
output2 = relay.Tuple([uop_1513,call_1518,call_1534,call_1543,var_1542,call_1559,var_1558,bop_1565,uop_1576,])
func_1578 = relay.Function([var_1512,var_1542,var_1558,], output)
mod['func_1578'] = func_1578
mod = relay.transform.InferType()(mod)
var_1579 = relay.var("var_1579", dtype = "float64", shape = (2, 2, 9))#candidate|1579|(2, 2, 9)|var|float64
var_1580 = relay.var("var_1580", dtype = "bool", shape = (6, 30))#candidate|1580|(6, 30)|var|bool
var_1581 = relay.var("var_1581", dtype = "bool", shape = (90, 14))#candidate|1581|(90, 14)|var|bool
output = func_1578(var_1579,var_1580,var_1581,)
func_1582 = relay.Function([var_1579,var_1580,var_1581,], output)
mutated_mod['func_1582'] = func_1582
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1745 = relay.var("var_1745", dtype = "float32", shape = (9, 5, 7))#candidate|1745|(9, 5, 7)|var|float32
uop_1746 = relay.asinh(var_1745.astype('float32')) # shape=(9, 5, 7)
func_679_call = mod.get_global_var('func_679')
func_682_call = mutated_mod.get_global_var('func_682')
const_1756 = relay.const([-1.829792,-0.007365,-0.902883,-4.471909,5.147769,-8.829795,9.295219,6.676518,3.525205,-3.182284,4.109319,-2.280266,6.989453,-9.569041,-7.742895,1.495205,-3.964203,-5.837161,0.709576,-2.651950,6.387953,6.358642,4.018385,3.306054,9.574808,-6.401506,-1.474056,-7.474396,-7.087936,9.375680,-6.620167,4.827025,-6.044842,4.998593,7.844716,-0.010144,-1.527892,2.425126,-6.933214,5.355512,-6.698797,-7.167629,-6.860204,-6.912857,9.002174,3.107481,-0.386287,-1.569641,9.825950,8.957495,-1.087547,4.446756,4.327067,-9.846394,4.880454,-0.093429,0.184527,-7.534930,2.247970,8.772078,-9.548215,-0.811321,5.421426,0.406884,6.032027,3.492871,9.313109,-4.292563,8.565272,-4.940424,-7.287656,5.962734,-8.560550,5.422676,-3.564021,-3.383937,-7.852810,-2.950388,-4.930970,-2.791625,-7.131253,0.352308,-3.120578,-2.410827,-5.719387,-9.532559,1.208994,9.743295,4.141444,2.809045,9.962877,0.036335,5.006753,6.654352,7.509609,4.999453,-9.925724,5.304876,-5.380865,-8.918178,9.057998,-7.379349,-2.655590,-8.928361,-3.465574,-3.946609,4.323845,7.758568,7.471316,-7.182140,-4.281545,-8.451168,-0.894547,0.391490,5.065074,-0.352993,-8.172658,-8.954057,-2.203295,9.377150,-6.296982,-9.339018,3.657753,-6.520442,-1.665561,6.632429,-5.400512,7.370391,-5.316195,-7.850170,2.085589,-5.360704,0.124940,-1.019210,9.896990,-0.618130,0.072457,0.415056,1.184995,3.025922,3.779863,-8.929731,-9.934415,-7.144933,3.805239,2.316800,3.228186,-5.488248,-7.207320,-6.761999,-9.258821,9.094538,7.040677,-6.540079,6.883610,8.344583,9.117743,-5.611397,2.768181,-8.661612,9.203119,0.530550,8.867051,7.052096,5.001521,1.427475,4.883071,4.970540,9.385732,5.507729,-9.876712,1.232574,-1.760745,7.289226,2.207041,-4.403950,1.085462,4.802155,-1.088112,-2.490302,3.130797,1.320796,5.201745,3.455475,3.606306,2.197245,0.173939,0.196336,-1.203652,-6.683210,-5.618542,2.785157,-8.544554,-7.353762,6.410508,-5.281411,-1.145735,7.901951,8.583001,-9.077696,1.720696,-8.649154,3.150676,9.236934,-7.866274,3.929239,-4.982889,8.745723,5.429126,1.474186,-2.202030,1.546309,-3.889724,-9.217522,-8.165505,-2.578330,-1.072327,-3.935636,-0.960643,-1.034072,2.976023,0.426161,-8.126036,8.940119,-8.327213,-7.660821,-7.129012,1.109667,5.036126,-7.622971,-3.585689,4.522480,5.855089,-4.926454,2.699941,0.257192,-6.495438,4.633960,7.141963,2.237405,7.189626,-1.312433,5.403485,-9.278913,-4.467048,-3.664823,7.699023,4.581804,-7.597577,-7.883799,-2.851681,-0.567185,-1.537080,0.395988,-0.545899,9.993793,2.785125,-8.332288,8.375051,4.486546,3.279069,7.634488,4.926247,-3.876362,-2.494401,-8.977537,-2.085124,-6.606131,-1.893894,-4.344925,-8.338721,-3.645084,6.601599,-0.636098,-3.901002,-2.963060,-5.391076,-1.051354,0.121869,7.293668,-7.062765,-1.170969,-8.795851,4.629663,4.137954,-6.301389,-8.886921,2.587788,7.337992,-4.571147,3.186628,6.760873,-1.083549,8.218884,-5.838138,-7.395861,-1.036984,6.263935,1.915804,1.623356,-5.458959,-8.673601,1.837216,7.639074,2.494099,-8.330188,-0.400427,-4.345936,0.492877,-9.167412,-4.401476,-1.758431,-5.849987,-5.370616,2.500218,-3.484689,7.983746,-1.394532,-5.144088,5.826350,1.970840,-9.085414,6.432164,3.718935,-4.010647,0.599583,-0.658842,-9.777593,7.746674,-9.516871,-1.914896,8.585019,5.297574,-5.673027,8.770937,5.084032,9.824704,-0.088862,0.284183,-7.050839,-6.896905,-4.788871,7.308063,1.698610,2.715910,3.241634,-7.763797,1.043008,-9.836494,6.569631,4.498815,3.297533,-7.576919,-2.614561,2.994449,3.530770,-5.057987,-1.434237,-7.175336,-1.768706,3.346268,-5.636467,-1.401953,8.495302,2.737931,-3.784611,0.315092,-0.993026,-8.674198,1.965922,4.763204,1.779651,1.096653,4.111747,4.267217,5.226984,-2.627260,-4.310411,-7.859570,2.200925,-6.621289,-0.975304,6.189938,2.559583,9.966773,4.470262,3.781170,-4.578283,-7.476716,6.092775,-9.155136,-5.763444,-8.311991,7.123547,-8.538701,-9.854398,9.453190,2.668748,8.206231,-5.569063,0.671891,1.620233,-9.356554,2.007484,-8.061628,-8.176304,-1.811907,0.111073,6.850874,2.029863,5.247121,-9.860111,-7.613545,-2.317789,-0.151382,4.517605,-4.269080,-7.871903,-6.390221,-6.536472,-3.084276,5.622324,8.442146,9.262661,-0.734959,8.136414,4.114872,-2.677428,5.106348,7.795500,2.589287,4.495143], dtype = "float32")#candidate|1756|(432,)|const|float32
call_1755 = relay.TupleGetItem(func_679_call(relay.reshape(const_1756.astype('float32'), [3, 12, 12])), 0)
call_1757 = relay.TupleGetItem(func_682_call(relay.reshape(const_1756.astype('float32'), [3, 12, 12])), 0)
output = relay.Tuple([uop_1746,call_1755,const_1756,])
output2 = relay.Tuple([uop_1746,call_1757,const_1756,])
func_1776 = relay.Function([var_1745,], output)
mod['func_1776'] = func_1776
mod = relay.transform.InferType()(mod)
var_1777 = relay.var("var_1777", dtype = "float32", shape = (9, 5, 7))#candidate|1777|(9, 5, 7)|var|float32
output = func_1776(var_1777)
func_1778 = relay.Function([var_1777], output)
mutated_mod['func_1778'] = func_1778
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2192 = relay.var("var_2192", dtype = "float32", shape = (10, 8, 5))#candidate|2192|(10, 8, 5)|var|float32
uop_2193 = relay.sigmoid(var_2192.astype('float32')) # shape=(10, 8, 5)
uop_2202 = relay.log(uop_2193.astype('float32')) # shape=(10, 8, 5)
func_1434_call = mod.get_global_var('func_1434')
func_1437_call = mutated_mod.get_global_var('func_1437')
const_2208 = relay.const([True,True,False,True,False,True,False,True,False,False,True,True,False,True,False,False,True,True,True,True,True,True,True,True,True,False,False,True,False,False,True,True,True,True,False,True,True,False,True,True,False,False,False,False,False,False,False,True,False,False,False,True,True,False,False,False,False,False,True,False,False,False,True,True,False,True,True,True,True,False,False,True,False,True,True,False,True,False,False,True,False,False,False,True,False,True,True,False,True,True,False,False,True,True,True,True,False,False,False,True,False,True,False,True,False,False,True,True,False,True,True,False,False,True,True,False,False,False,True,False,True,True,False,True,True,True,False,True,False,True,True,False,False,True,True,False,True,True,True,True,False,False,True,False,False,False,True,False,True,False,False,False,True,False,True,False,False,False,False,False,True,True,False,True,False,False,True,False,True,False,True,True,True,True,False,True,True,True,True,False,True,False,True,False,False,False,True,False,False,True,False,True,False,True,False,False,True,True,False,False,False,False,True,True,True,True,False,False,False,True,True,True,True,False,False,False,False,True,False,True,False,True,False,False,False,True,False,True,False,True,True,False,True,False,True,False,False,True,False,False,True,True,False,False,True,False,False,False,True,True,True,True,False,True,True,False,False,True,True,True,False,False,True,True,False,True,True,False,False,False,True,True,True,True,False,True,True,False,True,False,True,False,True,True,True,False,True,False,True,False,True,False,False,False,True,True,True,True,True,False,True,False,True,False,True,True,True,False,False,False,False,True,False,True,True,False,True,False,False,True,True,True,True,True,True,False,False,True,True,False,True,False,False,False,True,False,False,False,False,False,True,True,True,True,False,False,True,False,True,True,True,False,False,False,True,False,False,False,True,False,False,False,False,False,False,True,False,False,False,True,False,True,False,False,False,False,False,False,False,True,True,True,True,False,True,True,False,False,True,True,False,True,True,False,True,True,False,False,False,False,True,False,True,True,False,True,True,True,True,False,False,True,True,False,True,True,True,True,True,False,False,True,True,True,True,False,False,True,False,False,True,True,True,False,False,True,False,False,False,True,False,True,False,True,True,True,False,False,False,True,False,False,False,True,True,False,True,False,True,False,False,True,True,True,True,False,True,True,False,True,True,False,False,True,True,True,True,False,True,True,True,True,False,False,False,True,False,False,True,True,False,False,False,True,True,False,True,False,True,True,False,False,True,False,False,True,False,True,True,True,False,False,True,False,False,True,False,False,True,True,False,True,True,False,True,True,False,False,True,False,False,True,False,True,False,False,False,False,True,True,True,False,False,False,False,False,False,False,True,True,False,True,True,True,True,False,False,False,False,False,False,False,True,False,False,True,True,False,True,False,False,True,False,False,True,True,False,True,True,True,True,True,False,False,True,False,False,True,False,False,True,False,True,True,False,True,False,True,True,False,False,True,True,False,True,False,True,False,False,True,True,True,False,False,True,True,False,True,True,False,True,False,False,False,True,False,True,False,False,True,False,False,False,True,False,False,True,False,False,True,True,True,False,True,True,True,True,True,False,False,True,False,False,True,False,False,False,False,False,False,True,False,False,True,True,False,True,False,False,True,False,True,True,False,True,False,False,False,False,False,False,True,False,False,True,True,False,True,True,False,True,False,False,True,True,True,True,True,False,False,False,False,True,True,False,False,False,False,False,False,True,False,True,True,True,False,False,True,True,True,False,False,True,False,True,True,False,True,False,False,True,False,False,False,False,False,True,False,True,True,False,False,False,True,True,True,False,False,False,True,True,False,False,True,True,True,False,True,False,False,True,True,False,True,False,False,True,True,False,False,False,False,False,False,False,False,True,False,False,False,True,True,False,True,False,True,True,False,False,True,False,True,True,True,False,True,True,False,False,False,False,False,False,True,True,False,True,False,False,True,False,False,False,True,True,True,False,False,True,True,False,False,False,True,True,True,False,False,True,False,False,True,False,True,False,True,True,True,False,False,False,False,False,True,True,True,False,False,False,True,True,False,True,True,True,False,False,True,True,True,True,True,True,True,False,True,True,False,True,True,False,True,True,False,False,True,True,False,True,True,False,False,True,True,True,False,False,False,True,True,True,False,False,False,False,True,False,True,True,True,False,True,False,True,True,True,False,False,True,True,False,True,True,True,True,True,False,True,True,True,False,False,False,False,True,False,True,True,True,False,False,True,True,False,False,False,True,True,True,True,False,True,False,False,False,True,True,False,False,False,False,False,False,False,True,True,False,False,False,True,True,False,False,False,True,False,True,False,True,False,True,False,True,False,False,True,True,True,False,False,True,False,False,True,False,True,True,False,False,True,True,True,False,True,True,True,True,False,True,True,False,True,True,True,True,True,True,False,False,True,False,True,True,True,False,True,False,True,True,False,True,False,True,True,True,True,False,False,True,True,True,False,False,False,True,True,True,False,False,True,True,False,False,False,True,True,True,False,False,False,False,True,False,False,False,True,True,False,False,False,False,True,False,False,False,False,False,True,False,False,True,False,False,True,False,False,False,False,False,True,False,False,False,True,False,True,False,True,True,False,False,True,False,False,False,False,False,False,True,True,False,False,True,False,False,True,False,False,True,False,True,False,True,False,True,True,True,True,True,False,False,True,False,False,True,False,False,False,False,True,True,False,False,False,False,False,True,True,False,True,True,False,True,False,False,False,False,True,True,True,True,True,False,True,True,True,True,True,True,True,True,False,True,True,False,False,True,False,True,True,True,False,True,False,True,True,False,True,False,True,False,False,True,False,True,False,True,True,False,True,False,True,True,False,False,False,False,True,False,True,False,True,True,False,True,False,True,True,True,False,False,True,False,True,True,True,False,True,False,False,False,True,True,True,True,True,True,True,False,True,False,False,False,True,False,True,False,False,False,True,False,True,True,False,False,False,True,False,True,False,False,True,True,True,True,False,False,False,True,False], dtype = "bool")#candidate|2208|(1260,)|const|bool
const_2209 = relay.const([[7,10,-9,9],[-6,-4,-5,2],[-8,2,3,4],[2,-10,9,7],[1,-5,-4,-2],[7,3,-10,8],[9,2,7,-5],[-3,6,-8,2],[-2,-4,3,-9],[1,-4,5,7],[-3,-8,-8,9],[-10,5,-10,9],[-4,-8,-8,-9],[9,10,-5,-7],[-9,-7,10,8],[3,-9,-10,4],[-1,3,1,10],[5,-3,-10,-7],[7,-4,1,6],[5,8,-4,-3],[7,6,-8,-6],[-8,-1,9,-5],[-3,-3,3,8],[-7,-7,-9,5],[6,3,-8,7],[8,-4,6,-5],[-2,-3,10,-7],[10,-7,4,-6],[-3,-4,-8,9],[-9,-2,4,-3],[-6,3,10,2],[-4,8,10,10],[-2,6,-7,3],[10,10,5,-2],[10,6,7,-9],[-6,3,-2,9],[9,-4,-2,2],[-4,-6,6,1],[-7,-9,6,5],[6,10,-1,1],[-4,-6,-2,8],[3,-7,6,-6],[-7,-5,-2,5],[-10,-7,3,1],[-3,-6,7,2],[-10,8,9,6],[10,6,-4,1],[7,-7,6,-2],[6,5,-1,-5],[10,-8,-9,4],[8,1,-3,7],[10,4,1,6],[-1,-5,2,5],[1,-10,8,10],[-3,9,5,10],[2,-3,8,-4],[-2,3,-7,7],[-4,8,10,9],[1,3,-7,-3],[-7,-2,8,3],[-3,8,-7,-7],[2,4,-7,7],[-2,-6,-3,6],[7,-4,5,9],[-6,-9,-1,-5],[-6,-5,1,-1],[-2,9,-5,-5],[6,9,9,-1],[-4,9,7,-8],[-2,-5,7,-3],[10,6,9,-10],[-3,6,9,-8],[-6,-10,-10,7],[3,4,-8,1],[-10,-5,-8,-4],[4,-2,7,-7],[6,7,8,-7],[-8,3,7,3],[-8,-6,3,-9],[10,-1,-1,10],[-6,5,-3,-8],[-5,-8,-4,-10],[9,-1,6,1],[-1,-2,1,-4],[-1,4,3,-6],[3,-1,-4,1],[6,10,-4,-7],[3,9,-1,4],[2,-5,-10,-3],[4,-1,-4,-4],[6,10,4,7],[9,3,1,-4],[-7,-9,-10,1],[-6,-2,7,-9],[-9,5,10,-1],[7,1,-3,-2],[3,-7,-4,7],[-1,10,-9,10],[-10,3,4,9],[10,-1,2,-3],[-5,-8,-7,8],[-7,5,-7,-6],[-10,7,3,-7],[-5,-5,-2,-3],[-9,5,-7,-5],[9,-2,4,5],[7,8,-7,4],[-5,-10,7,3],[4,3,1,8],[5,8,10,-3],[-5,-8,8,-4],[-2,10,-8,7],[-3,3,-6,5],[5,-3,7,3],[-9,-6,-4,1],[-5,-7,-6,-6],[3,-2,-2,-2],[-2,-3,5,3],[-8,2,-7,10],[-4,8,-1,8],[4,5,-6,-5],[6,-7,4,4],[7,6,8,10],[4,1,-10,1],[8,-2,-7,-3],[2,1,-10,-8],[10,4,1,-10],[-2,10,8,8],[9,10,-4,8],[-5,-2,5,-5],[-5,5,-3,-2],[-5,-6,6,-1],[-1,-3,-6,-1],[-2,-7,4,-4],[-10,-6,3,5],[10,3,5,-5],[6,3,10,4],[-8,1,-2,-2],[3,3,-8,5],[2,-6,-3,5],[-10,3,2,-2],[-8,-2,-5,3],[4,5,8,2],[8,-9,10,10],[4,-7,-1,-7],[-9,9,5,5],[2,3,-10,10],[-2,8,-4,-9],[-4,-5,5,-3],[-2,2,6,9],[7,-8,7,-4],[-6,1,5,-8],[-8,3,6,-2],[10,-6,-1,-6],[8,-5,9,-6],[-4,-5,-8,-9],[6,4,9,10],[9,-6,4,-9],[6,-9,-5,-10],[-1,9,9,-10],[9,-9,-9,8],[7,-8,-7,-5],[-3,6,7,-7],[4,-2,4,-10],[-5,1,-7,1],[4,7,6,-2],[6,7,7,-4],[1,-4,7,10],[-2,-5,2,5],[5,7,3,10],[-9,-3,-4,5],[-6,-2,2,6],[-7,-3,6,6],[1,3,-3,5],[4,6,8,3],[2,-6,9,10],[-2,-6,-2,-2],[-6,-1,1,-8],[-6,1,8,8],[9,-6,-6,6],[-9,8,5,-6],[-6,9,-3,-2],[-3,-2,7,5],[-4,4,-7,-9],[3,10,9,8],[-3,5,-3,-6],[10,-9,10,2],[-5,5,9,8],[1,-1,-4,-8],[-5,6,1,-4],[1,-7,9,6],[-10,-6,5,2],[-2,8,9,6],[2,1,3,4],[3,7,-3,-6],[6,-3,-5,-8],[-5,6,6,-9],[5,2,7,4],[-7,2,5,-4],[-9,1,1,3],[-8,3,3,2],[4,-6,10,-3],[-2,-1,-2,-6],[-2,-4,-8,1],[8,-10,8,10],[6,4,-5,-4],[-1,-4,10,3],[8,-8,-6,10],[3,-6,-2,4],[2,3,-5,6],[2,1,1,5],[-3,6,2,-3],[8,7,-8,7],[8,-1,6,3],[9,-1,9,-10],[1,-2,-5,-9],[8,2,-8,8],[-8,-1,6,4],[9,6,3,2],[5,6,-3,-3],[-2,7,-4,8],[-3,8,-4,-7],[-10,-2,-10,-9],[-10,-4,-2,6],[-10,6,9,7],[2,3,10,8],[10,2,-6,-6],[-6,1,-5,-3],[-9,2,2,10],[-5,-9,-1,-4],[1,-3,-9,-5],[-9,-4,-5,-1],[6,2,1,2],[-5,2,10,-8],[-3,7,-2,-8],[1,5,-9,-10],[-10,-4,6,-8],[9,-8,-7,9],[1,-4,8,-2],[-4,-5,-3,-1],[-7,3,-3,6],[-2,-10,-3,9],[-2,-5,-4,9],[5,-4,-7,3],[-10,-9,9,4],[10,-10,-10,6],[-3,2,9,-7],[5,7,6,8],[-8,10,2,9],[-7,-6,-10,-3],[-3,-10,6,9],[9,-3,-5,3],[-8,1,9,2],[8,7,10,1],[-4,-6,-8,-2],[-2,-4,-6,2],[-1,3,-2,-6],[-3,-10,-10,6],[4,4,6,1],[-3,-7,-3,4],[-2,2,2,-8],[-10,7,1,-3],[5,7,5,1],[4,-8,9,-8],[9,-6,-9,-7],[5,8,9,-9],[1,8,-5,-6],[9,3,-8,-8],[3,9,10,-1],[-3,-1,10,-7]], dtype = "uint64")#candidate|2209|(270, 4)|const|uint64
call_2207 = relay.TupleGetItem(func_1434_call(relay.reshape(const_2208.astype('bool'), [9, 14, 10]), relay.reshape(const_2209.astype('uint64'), [1080,]), ), 1)
call_2210 = relay.TupleGetItem(func_1437_call(relay.reshape(const_2208.astype('bool'), [9, 14, 10]), relay.reshape(const_2209.astype('uint64'), [1080,]), ), 1)
bop_2211 = relay.right_shift(uop_2193.astype('uint64'), relay.reshape(uop_2202.astype('uint64'), relay.shape_of(uop_2193))) # shape=(10, 8, 5)
bop_2215 = relay.equal(uop_2202.astype('bool'), relay.reshape(bop_2211.astype('bool'), relay.shape_of(uop_2202))) # shape=(10, 8, 5)
var_2219 = relay.var("var_2219", dtype = "float32", shape = (10, 8, 5))#candidate|2219|(10, 8, 5)|var|float32
bop_2220 = relay.greater_equal(uop_2193.astype('bool'), relay.reshape(var_2219.astype('bool'), relay.shape_of(uop_2193))) # shape=(10, 8, 5)
uop_2225 = relay.tan(bop_2220.astype('float64')) # shape=(10, 8, 5)
func_679_call = mod.get_global_var('func_679')
func_682_call = mutated_mod.get_global_var('func_682')
const_2230 = relay.const([[-9.652714,-9.570615,8.450898,-4.420308,5.592223,6.659877,3.666861,6.131404,6.034491,4.508659,-4.852648,8.517232,7.694942,7.739918,1.534024,-9.417240,4.020130,-9.248533,-3.807209,1.709686,5.294507,-0.019280,2.056864,4.416162,9.031737,7.114048,-8.469159,6.939449,9.589967,1.473502,-4.670553,2.028504,-2.415286,-7.474765,-6.482965,6.438257],[-6.648749,4.980197,1.397206,4.690808,9.750302,-3.339132,0.768710,5.879488,-2.185637,6.094712,-1.673630,-6.172505,-6.693656,6.471696,-8.866845,-3.435088,-1.996295,9.012008,-5.134477,-4.535062,9.881586,8.156004,-9.107657,8.499897,9.210478,-2.577251,9.113801,3.122803,5.371830,6.577048,5.700906,5.094068,6.233109,9.967936,8.115828,0.945056],[-6.837262,6.987356,6.878169,1.301391,-9.649220,-1.673599,-7.301779,5.942663,-0.436404,-9.436396,9.023762,3.342952,-3.332944,-9.789622,7.164126,-2.739041,5.192260,-4.863226,-5.711201,6.699529,2.758504,7.520766,4.696102,-4.136323,4.181412,4.803081,-3.449128,9.884105,4.087504,-2.411364,0.509536,-8.787337,-6.517121,2.968196,-1.307112,0.805442],[-8.239223,-0.016418,-3.647802,3.223536,7.418006,-2.705544,9.438878,-3.206521,3.153843,6.215481,1.750548,6.596346,9.410386,-2.535245,-9.118653,2.586187,-4.066962,-4.811821,-3.264112,-0.810030,4.733910,4.226490,-1.159393,0.434699,-4.533165,-1.520752,4.285962,-9.387505,-7.131483,-1.657514,-3.771161,3.875532,4.335113,1.230601,1.298294,6.813189],[-2.359250,-1.543192,-8.393842,6.896820,-3.181943,-9.169863,6.487181,-0.755876,-8.996745,-7.871779,3.006672,9.048010,-2.796120,-9.314877,7.929545,-1.599876,3.641512,-9.152605,-6.784100,-0.739142,-8.242456,-9.481585,3.889713,1.943956,-1.344109,1.606408,-6.651274,-1.366521,5.593848,-5.351516,9.145960,7.830536,0.732188,-1.669342,7.261132,2.566149],[-8.244756,0.593773,-0.129785,5.968433,8.934217,-8.877157,0.019529,-3.763312,-8.059258,1.483756,2.159712,-7.844860,0.677602,-7.748341,2.518741,-7.610803,-2.463148,-7.764734,-1.177668,3.761235,-2.585702,6.090671,-3.235663,-1.124444,0.259222,-8.779410,-5.833956,7.046552,-1.324171,-4.103300,5.424061,9.467482,7.550769,6.668570,9.405394,7.551224],[-4.103212,3.092832,-3.337432,8.069722,-4.974167,-9.717850,-7.535657,-6.972578,6.919341,7.200283,3.923882,-1.442509,-9.453766,-1.862885,-5.475466,0.959602,0.452823,-4.412754,-1.953615,5.658587,8.219893,-4.958690,6.738616,-8.858581,5.566365,-8.207101,-6.326248,0.803889,-6.039710,-9.026572,2.300303,7.805858,4.252213,-9.199904,-6.517333,-4.695452],[7.566621,1.584910,0.747786,-7.010469,5.909410,6.463533,0.055152,-2.415496,-9.679380,7.378461,-7.581972,-5.312836,-8.355353,-0.989379,-6.792397,-8.492744,5.981807,3.184981,-7.929531,9.838747,-6.082557,9.255190,-2.969113,0.207998,1.519511,-6.154062,7.705391,5.479701,-2.761379,-8.940641,-9.680445,-0.814851,1.521499,-6.599695,8.428990,8.325686],[-9.430760,-9.617370,4.631754,0.832974,-6.100229,-8.794650,4.097498,8.716454,4.774495,-2.411819,-6.614663,5.375478,-1.539383,8.267550,-7.030332,4.379092,-9.577888,5.544615,5.668007,-0.186574,-9.807055,-8.082696,-8.854619,3.453375,1.875059,3.664991,5.228989,3.899416,-0.342828,3.808995,-3.128627,0.560808,-0.174918,-0.349201,5.769129,7.699055],[2.537187,1.415169,8.638071,-3.227547,3.904147,7.073662,-9.073133,-2.465813,5.234883,3.352199,5.178661,-4.845967,4.018895,8.736501,0.228828,1.651896,-7.813914,-7.359412,6.638109,3.154654,-9.949076,3.331781,0.741335,9.964403,-6.363745,-0.099867,6.560937,0.554955,1.464551,-7.480982,-7.967241,-0.586233,-7.361688,-0.854683,0.995972,-4.989224],[-8.128167,-5.477624,-3.572554,1.208327,2.145613,-5.539580,-0.191515,9.475429,-2.199314,3.073629,6.031735,-3.413637,-7.115235,-6.319444,-1.777160,-5.466562,-7.525797,-6.088711,-9.928737,4.447457,-8.271297,5.532992,-0.794816,-3.913516,-7.537543,3.853416,3.454500,8.755289,-5.583773,8.663697,2.304749,-1.658796,4.496532,-8.156518,-2.999355,0.241498],[6.315617,9.366770,2.954038,-1.525221,8.159900,-6.655488,6.220229,5.376260,9.753230,-9.511355,-1.340550,-2.921621,-8.081344,1.620121,5.448280,3.477004,7.854882,-3.964928,-2.270464,-4.585652,-8.221710,8.847906,9.593555,5.491861,9.142026,6.039211,-9.687793,8.487113,-4.821731,8.143410,7.364708,-4.921714,-9.683962,-9.410219,3.647502,-9.483349]], dtype = "float32")#candidate|2230|(12, 36)|const|float32
call_2229 = relay.TupleGetItem(func_679_call(relay.reshape(const_2230.astype('float32'), [3, 12, 12])), 0)
call_2231 = relay.TupleGetItem(func_682_call(relay.reshape(const_2230.astype('float32'), [3, 12, 12])), 0)
func_1776_call = mod.get_global_var('func_1776')
func_1778_call = mutated_mod.get_global_var('func_1778')
var_2234 = relay.var("var_2234", dtype = "float32", shape = (1, 315))#candidate|2234|(1, 315)|var|float32
call_2233 = relay.TupleGetItem(func_1776_call(relay.reshape(var_2234.astype('float32'), [9, 5, 7])), 0)
call_2235 = relay.TupleGetItem(func_1778_call(relay.reshape(var_2234.astype('float32'), [9, 5, 7])), 0)
uop_2245 = relay.sinh(bop_2220.astype('float64')) # shape=(10, 8, 5)
func_708_call = mod.get_global_var('func_708')
func_712_call = mutated_mod.get_global_var('func_712')
call_2253 = func_708_call(relay.reshape(call_2207.astype('uint64'), [8, 15, 9]), relay.reshape(const_2209.astype('uint64'), [8, 15, 9]), )
call_2254 = func_708_call(relay.reshape(call_2207.astype('uint64'), [8, 15, 9]), relay.reshape(const_2209.astype('uint64'), [8, 15, 9]), )
bop_2258 = relay.floor_divide(bop_2220.astype('float64'), relay.reshape(bop_2215.astype('float64'), relay.shape_of(bop_2220))) # shape=(10, 8, 5)
func_679_call = mod.get_global_var('func_679')
func_682_call = mutated_mod.get_global_var('func_682')
call_2271 = relay.TupleGetItem(func_679_call(relay.reshape(call_2229.astype('float32'), [3, 12, 12])), 0)
call_2272 = relay.TupleGetItem(func_682_call(relay.reshape(call_2229.astype('float32'), [3, 12, 12])), 0)
uop_2290 = relay.cos(bop_2211.astype('float32')) # shape=(10, 8, 5)
func_1434_call = mod.get_global_var('func_1434')
func_1437_call = mutated_mod.get_global_var('func_1437')
call_2296 = relay.TupleGetItem(func_1434_call(relay.reshape(const_2208.astype('bool'), [9, 14, 10]), relay.reshape(const_2209.astype('uint64'), [1080,]), ), 0)
call_2297 = relay.TupleGetItem(func_1437_call(relay.reshape(const_2208.astype('bool'), [9, 14, 10]), relay.reshape(const_2209.astype('uint64'), [1080,]), ), 0)
func_1578_call = mod.get_global_var('func_1578')
func_1582_call = mutated_mod.get_global_var('func_1582')
var_2310 = relay.var("var_2310", dtype = "float64", shape = (36,))#candidate|2310|(36,)|var|float64
const_2311 = relay.const([[False,True,True,False,False,True,True,True,False,False,False,False,False,False,False,False,False,False,True,False,False,True,True,False,True,False,True,True,False,False],[False,False,True,True,False,False,False,True,True,False,True,True,False,True,True,False,False,True,True,True,True,True,False,True,True,True,True,False,True,True],[True,True,False,False,False,False,False,False,False,True,False,True,False,True,True,False,True,True,True,False,False,True,False,False,False,True,True,True,False,False],[False,True,True,False,True,True,True,False,True,True,True,False,False,False,True,True,False,False,False,True,True,False,False,True,False,False,False,False,True,False],[False,False,True,False,False,True,True,True,True,True,False,False,True,True,False,False,False,False,False,True,False,True,True,False,False,False,True,True,False,False],[True,False,False,True,False,True,False,False,False,True,True,True,True,False,False,False,False,False,False,False,True,False,False,True,True,False,True,False,True,True]], dtype = "bool")#candidate|2311|(6, 30)|const|bool
call_2309 = relay.TupleGetItem(func_1578_call(relay.reshape(var_2310.astype('float64'), [2, 2, 9]), relay.reshape(const_2311.astype('bool'), [6, 30]), relay.reshape(const_2208.astype('bool'), [90, 14]), ), 4)
call_2312 = relay.TupleGetItem(func_1582_call(relay.reshape(var_2310.astype('float64'), [2, 2, 9]), relay.reshape(const_2311.astype('bool'), [6, 30]), relay.reshape(const_2208.astype('bool'), [90, 14]), ), 4)
func_1434_call = mod.get_global_var('func_1434')
func_1437_call = mutated_mod.get_global_var('func_1437')
call_2319 = relay.TupleGetItem(func_1434_call(relay.reshape(call_2296.astype('bool'), [9, 14, 10]), relay.reshape(call_2253.astype('uint64'), [1080,]), ), 1)
call_2320 = relay.TupleGetItem(func_1437_call(relay.reshape(call_2296.astype('bool'), [9, 14, 10]), relay.reshape(call_2253.astype('uint64'), [1080,]), ), 1)
output = relay.Tuple([call_2207,const_2208,const_2209,uop_2225,call_2229,const_2230,call_2233,var_2234,uop_2245,call_2253,bop_2258,call_2271,uop_2290,call_2296,call_2309,var_2310,const_2311,call_2319,])
output2 = relay.Tuple([call_2210,const_2208,const_2209,uop_2225,call_2231,const_2230,call_2235,var_2234,uop_2245,call_2254,bop_2258,call_2272,uop_2290,call_2297,call_2312,var_2310,const_2311,call_2320,])
func_2336 = relay.Function([var_2192,var_2219,var_2234,var_2310,], output)
mod['func_2336'] = func_2336
mod = relay.transform.InferType()(mod)
mutated_mod['func_2336'] = func_2336
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2336_call = mutated_mod.get_global_var('func_2336')
var_2338 = relay.var("var_2338", dtype = "float32", shape = (10, 8, 5))#candidate|2338|(10, 8, 5)|var|float32
var_2339 = relay.var("var_2339", dtype = "float32", shape = (10, 8, 5))#candidate|2339|(10, 8, 5)|var|float32
var_2340 = relay.var("var_2340", dtype = "float32", shape = (1, 315))#candidate|2340|(1, 315)|var|float32
var_2341 = relay.var("var_2341", dtype = "float64", shape = (36,))#candidate|2341|(36,)|var|float64
call_2337 = func_2336_call(var_2338,var_2339,var_2340,var_2341,)
output = call_2337
func_2342 = relay.Function([var_2338,var_2339,var_2340,var_2341,], output)
mutated_mod['func_2342'] = func_2342
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2346 = relay.const([[[6,-7,-4,-3,8,-4,-6],[2,5,8,3,8,8,-5],[10,-1,3,1,4,-4,9],[5,-4,5,-3,7,6,1]],[[7,4,-2,-4,-5,-2,1],[1,4,7,5,1,-4,5],[4,-5,4,10,6,-10,-1],[10,-8,3,-9,2,-4,-1]],[[1,-10,5,-8,5,-4,-4],[-4,5,-6,-4,-7,-1,4],[-1,-4,4,9,-1,8,-7],[-9,-5,3,-4,4,-7,-1]],[[-9,-4,2,3,3,-5,9],[10,-4,-6,-1,-10,7,5],[5,4,10,4,-7,-10,-1],[5,-8,7,-6,-4,1,4]],[[-10,-3,4,10,-9,-8,5],[7,4,-7,10,6,-6,-7],[-4,4,1,-10,-7,10,5],[2,-7,6,-4,-4,9,-2]]], dtype = "uint8")#candidate|2346|(5, 4, 7)|const|uint8
var_2347 = relay.var("var_2347", dtype = "uint8", shape = (5, 4, 7))#candidate|2347|(5, 4, 7)|var|uint8
bop_2348 = relay.right_shift(const_2346.astype('uint8'), relay.reshape(var_2347.astype('uint8'), relay.shape_of(const_2346))) # shape=(5, 4, 7)
bop_2351 = relay.left_shift(const_2346.astype('uint16'), relay.reshape(var_2347.astype('uint16'), relay.shape_of(const_2346))) # shape=(5, 4, 7)
uop_2355 = relay.acosh(bop_2348.astype('float32')) # shape=(5, 4, 7)
bop_2358 = relay.divide(uop_2355.astype('float64'), relay.reshape(bop_2351.astype('float64'), relay.shape_of(uop_2355))) # shape=(5, 4, 7)
output = relay.Tuple([bop_2358,])
output2 = relay.Tuple([bop_2358,])
func_2370 = relay.Function([var_2347,], output)
mod['func_2370'] = func_2370
mod = relay.transform.InferType()(mod)
mutated_mod['func_2370'] = func_2370
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2371 = relay.var("var_2371", dtype = "uint8", shape = (5, 4, 7))#candidate|2371|(5, 4, 7)|var|uint8
func_2370_call = mutated_mod.get_global_var('func_2370')
call_2372 = func_2370_call(var_2371)
output = call_2372
func_2373 = relay.Function([var_2371], output)
mutated_mod['func_2373'] = func_2373
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2737 = relay.var("var_2737", dtype = "uint64", shape = (13, 6, 14))#candidate|2737|(13, 6, 14)|var|uint64
var_2738 = relay.var("var_2738", dtype = "uint64", shape = (13, 6, 14))#candidate|2738|(13, 6, 14)|var|uint64
bop_2739 = relay.greater(var_2737.astype('bool'), relay.reshape(var_2738.astype('bool'), relay.shape_of(var_2737))) # shape=(13, 6, 14)
output = relay.Tuple([bop_2739,])
output2 = relay.Tuple([bop_2739,])
func_2752 = relay.Function([var_2737,var_2738,], output)
mod['func_2752'] = func_2752
mod = relay.transform.InferType()(mod)
var_2753 = relay.var("var_2753", dtype = "uint64", shape = (13, 6, 14))#candidate|2753|(13, 6, 14)|var|uint64
var_2754 = relay.var("var_2754", dtype = "uint64", shape = (13, 6, 14))#candidate|2754|(13, 6, 14)|var|uint64
output = func_2752(var_2753,var_2754,)
func_2755 = relay.Function([var_2753,var_2754,], output)
mutated_mod['func_2755'] = func_2755
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2923 = relay.const([[[0.386212,-8.448295],[8.814401,-2.853204],[0.754517,8.150239],[-8.751708,2.069490]],[[8.260724,-4.993365],[3.649506,7.600647],[-5.522431,5.110147],[-0.231560,4.630198]]], dtype = "float64")#candidate|2923|(2, 4, 2)|const|float64
const_2924 = relay.const([[[4.924036,8.420705],[-6.975831,-3.990707],[-2.842664,-4.282324],[-0.413629,5.376869]],[[-3.399065,-0.185071],[-5.365335,7.444688],[3.310365,4.129775],[-9.440609,-4.003101]]], dtype = "float64")#candidate|2924|(2, 4, 2)|const|float64
bop_2925 = relay.power(const_2923.astype('float64'), relay.reshape(const_2924.astype('float64'), relay.shape_of(const_2923))) # shape=(2, 4, 2)
output = relay.Tuple([bop_2925,])
output2 = relay.Tuple([bop_2925,])
func_2928 = relay.Function([], output)
mod['func_2928'] = func_2928
mod = relay.transform.InferType()(mod)
mutated_mod['func_2928'] = func_2928
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2928_call = mutated_mod.get_global_var('func_2928')
call_2929 = func_2928_call()
output = call_2929
func_2930 = relay.Function([], output)
mutated_mod['func_2930'] = func_2930
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2951 = relay.const([[[-7.849779,-0.299633,7.665070,1.700342,7.676768],[2.390263,3.274826,6.909857,-8.884385,9.315605],[-8.374185,4.435053,8.879309,-5.763306,4.895422],[7.772854,9.289947,-7.573033,5.995147,-2.934096],[2.199759,0.602218,9.678722,2.976160,-8.614133],[-8.912897,-7.759278,7.831657,-2.447011,3.028458],[5.814130,-3.163622,-8.533303,2.010095,-1.318751],[-7.584853,3.761996,-2.022779,-4.830509,-8.124231],[7.258688,1.413302,7.926212,2.313920,8.407126],[9.585400,6.282585,2.102662,-7.325788,6.347058],[2.861327,6.744278,-7.499049,9.193353,6.997904]],[[5.300720,-6.429242,-4.929010,4.394652,-1.537351],[-6.676877,-7.039513,0.647677,1.104371,-9.265929],[-3.848511,-9.850185,6.718544,-0.631922,-1.176471],[-7.188332,-1.031794,-3.379459,-9.664230,-6.530239],[-0.491316,-8.702849,4.521912,4.765628,-6.241809],[6.320554,6.294363,-7.618964,-8.074176,7.673442],[-0.727717,-1.594285,9.495088,7.547467,9.819575],[-5.344303,6.925645,-4.450826,-8.207233,0.012734],[3.160362,0.957119,8.324923,7.257405,-9.911027],[-9.210700,0.167779,9.761415,7.322006,-8.806894],[8.273560,9.642480,-0.230810,4.151454,2.295196]],[[6.340532,5.497935,5.076631,-8.461945,4.433846],[9.343931,5.220867,-0.861622,9.048620,0.516330],[-8.303540,-0.234759,2.645962,0.534101,0.007961],[-9.673151,-1.206103,-8.605782,-5.483479,-9.424627],[2.854744,6.156204,-7.262478,-4.732295,0.700541],[-4.590728,-4.540533,3.814382,1.935843,-7.794646],[4.367869,3.722270,-6.281355,4.270634,-6.670487],[-8.971816,-6.114722,-4.939338,-0.050982,-9.889544],[-5.607237,4.436249,-2.346300,9.304115,-7.022046],[-7.414801,-3.910763,4.801904,4.061789,5.617868],[-3.839379,-9.547425,5.594885,-5.685130,8.070287]],[[5.652325,6.992866,-1.946008,-5.449347,5.466597],[5.774044,-7.231978,8.209114,-5.510915,8.091605],[-8.572439,-7.606261,-3.719655,5.605164,2.883107],[7.663952,-4.324847,6.903939,-7.824822,-2.742580],[-9.109067,-4.755175,5.954044,-2.563308,-6.721474],[4.604303,-5.917994,8.917473,5.414033,9.220623],[0.456907,-1.206038,5.380509,-5.834429,1.545595],[6.135265,-9.551689,-0.986613,9.313754,-3.450918],[-4.000173,-4.710074,1.518227,4.607833,-3.822593],[6.849073,-9.251440,5.514695,5.866728,7.740329],[8.592914,8.096875,-8.326641,2.703547,-0.902819]],[[-3.847268,-8.415920,4.471760,-4.965089,-9.345190],[9.438539,4.656525,7.308539,3.367356,-6.084032],[9.233304,2.939102,-1.622129,6.729314,9.658009],[5.148270,-6.218050,-3.819351,1.513992,0.821322],[4.592043,8.269072,-8.976972,-4.038429,4.389697],[-7.441444,-8.056560,5.310076,-1.663436,-8.815346],[9.869313,3.813913,3.808555,9.655255,-3.113579],[6.562841,-4.016761,-4.211409,6.406043,-5.948212],[-3.033070,-9.760399,6.268394,4.788877,-1.128464],[3.829687,5.885958,9.943130,8.331477,6.633544],[1.467517,1.868954,2.349460,-2.374207,-1.794150]],[[8.387738,-9.911941,0.872218,-4.767607,9.212852],[4.798785,-5.973698,3.601470,3.360125,-3.341291],[-2.302325,5.839478,5.020582,-6.538505,-3.847442],[6.821333,8.447656,9.919091,0.911809,6.313992],[-3.930182,0.464063,8.887359,-2.745152,7.207553],[2.746280,4.119056,-9.339605,7.462895,-7.010507],[7.912378,0.280116,8.215040,-9.482449,-5.698165],[0.585925,-9.949439,1.913505,4.406697,-6.664266],[2.686004,5.700135,8.927062,3.873153,-4.656605],[-4.900487,8.229689,-3.388171,-8.186302,6.269142],[-4.287433,3.161991,-5.647988,-2.341246,-4.440154]],[[-1.416837,-5.796481,-7.136282,5.275588,-8.927415],[-4.839077,-2.834013,-3.660245,-4.123768,1.020753],[-6.935288,0.535572,-6.808825,-6.377480,2.752974],[1.627344,-8.297303,1.901217,9.198584,9.471024],[-2.687510,-2.782985,9.500487,7.059269,1.100348],[-6.761395,-6.769739,8.270358,5.213550,5.670009],[0.073782,-7.805792,-2.013134,-5.398459,8.656252],[3.113437,7.910109,-5.106651,4.547761,9.195338],[-5.957960,-2.327762,3.309989,4.152367,3.988180],[4.709580,6.879424,6.397591,-0.295483,-7.675776],[0.134787,7.980539,5.912899,8.169477,-6.389986]],[[-7.819732,-9.342970,8.524634,-5.230847,-0.330412],[-8.961062,-6.527299,-8.076008,5.228686,-0.617266],[-9.309213,-9.855865,-4.802384,9.413734,-0.101293],[-1.692936,-6.965667,6.173689,-5.119728,-4.639143],[9.700605,2.016984,-9.392037,5.393495,-0.036214],[1.347980,1.842868,-5.790821,-5.387079,-0.493899],[3.998500,6.163376,7.654734,-0.102274,-2.199269],[9.426116,7.019788,-3.102790,-8.553285,3.892131],[6.968283,2.681649,-2.056282,-1.176424,4.094212],[6.320805,-5.949762,-7.684791,1.071967,8.507527],[3.424068,-5.934755,3.788747,-2.171353,-5.050514]],[[-1.569270,3.723776,2.112134,-0.685083,-5.767125],[-0.512412,-2.260687,-4.414929,-9.910640,2.509196],[0.219672,-1.406599,9.410105,-0.327413,9.251359],[-7.335068,-8.144381,3.904545,9.088955,-5.074080],[2.435439,-4.199179,6.959283,-3.525600,-7.427232],[8.629237,-1.582503,1.685891,-3.235963,-1.290694],[1.702446,9.227220,-9.729120,8.540478,-1.145586],[5.614096,-2.045654,-3.942457,-9.538533,8.253734],[-4.467079,-2.193698,5.372443,2.730477,-6.036105],[1.685058,-2.239453,0.178668,-3.411984,-9.017413],[-1.107245,-9.440403,3.201865,-7.662093,-1.966227]],[[8.772999,8.909481,0.933887,7.856472,-7.253882],[-5.562660,7.223888,-5.698319,5.747714,6.763137],[-4.940294,8.767761,-5.843942,5.498488,-1.029100],[5.326777,-0.885155,-6.750129,2.467165,-6.115029],[7.329216,1.995520,3.801123,7.154302,-2.690633],[6.119766,1.292024,-6.083279,4.834003,-1.186896],[8.744013,0.502154,-6.822679,8.164263,-6.261527],[8.831195,0.892959,-8.534561,9.538120,8.251304],[2.256804,-3.857135,-0.130594,-8.339485,-4.826467],[9.274422,-3.285333,1.843391,-3.214787,-2.902635],[8.403498,-9.017579,2.324738,4.065822,0.986530]],[[-1.086108,6.582588,8.250987,4.847936,-4.509019],[-4.197157,8.314789,-1.927179,-2.142932,-7.474975],[8.824727,-9.749448,-6.246580,2.368654,-5.856809],[-2.357097,4.004772,0.705719,2.965659,-0.833997],[-0.280241,-1.393536,-7.056455,9.937465,2.985011],[9.435962,5.409272,9.912164,6.126951,0.421309],[0.325391,6.758841,-4.339322,7.214630,5.056845],[5.028574,-4.157394,-9.287089,-5.119389,3.941328],[7.489136,6.972666,8.525313,-0.584782,4.282368],[-0.426844,3.470698,3.535507,5.329557,-5.514485],[-2.585719,-4.046844,0.315723,6.283648,-2.119398]],[[6.012356,-0.977260,-4.517350,3.075147,-2.702284],[3.369366,2.936869,-1.036786,-1.076205,4.981521],[1.324492,-7.509426,9.092861,-3.667716,8.944136],[9.876783,-9.830805,2.271180,1.919192,3.277025],[0.103589,8.904727,5.650219,0.490854,2.033149],[-3.455778,6.316958,-8.557677,-0.901462,5.647507],[-7.765389,7.616367,-5.924060,0.280043,8.625980],[-0.747684,8.612294,-8.225833,7.996483,-6.968234],[-0.711279,5.954898,4.573751,-5.055544,-5.032823],[-0.317303,6.584376,6.209643,-5.164846,3.853485],[6.346674,1.679304,8.073218,-3.542655,2.854716]],[[0.225387,2.752698,1.847541,9.448741,4.188138],[-6.488012,-4.495181,9.734598,3.051000,-1.773866],[9.355968,-1.457594,1.882304,-5.798709,4.162046],[-4.478183,-7.915271,8.052042,3.007874,6.015864],[6.662663,-8.560588,1.997276,8.888779,0.612727],[-2.283412,-0.076860,5.583046,-1.073427,7.448236],[-3.776536,0.192810,1.235858,-2.146321,2.430192],[7.964784,7.478026,-6.353027,6.806841,-3.601479],[4.808989,-1.969223,3.663805,7.954486,6.485606],[8.239548,6.223917,-3.897396,-3.891536,9.048472],[0.323584,-1.770881,-4.329484,0.870557,-5.396668]],[[-5.588753,-3.328488,3.938430,7.712401,-0.348612],[6.115215,-5.675477,-8.191115,-1.348329,9.158771],[-7.693568,-5.467191,-0.136578,7.833676,8.041024],[8.424374,5.093616,-8.276718,1.909736,-5.001660],[-6.014838,-3.439448,-3.055270,-9.282729,8.825382],[-0.748669,-6.804040,-5.927387,7.305707,-0.033227],[0.118082,-1.482385,-0.480226,-8.056322,-2.459958],[1.651466,-9.241586,2.602072,-1.414972,9.958543],[-3.977352,0.950361,5.909132,1.428758,2.238658],[9.079937,0.891386,2.831978,-6.281533,5.164318],[-3.639096,7.469543,-6.720833,0.090804,-7.110942]]], dtype = "float64")#candidate|2951|(14, 11, 5)|const|float64
var_2952 = relay.var("var_2952", dtype = "float64", shape = (14, 11, 5))#candidate|2952|(14, 11, 5)|var|float64
bop_2953 = relay.greater_equal(const_2951.astype('bool'), relay.reshape(var_2952.astype('bool'), relay.shape_of(const_2951))) # shape=(14, 11, 5)
uop_2961 = relay.tan(bop_2953.astype('float32')) # shape=(14, 11, 5)
func_1578_call = mod.get_global_var('func_1578')
func_1582_call = mutated_mod.get_global_var('func_1582')
var_2964 = relay.var("var_2964", dtype = "float64", shape = (18, 2))#candidate|2964|(18, 2)|var|float64
const_2965 = relay.const([True,False,False,True,False,False,True,False,False,False,True,False,False,True,False,False,False,False,False,True,False,False,True,True,False,True,False,True,True,False,True,False,True,True,False,True,True,True,False,True,True,True,False,True,False,False,False,False,False,False,False,False,False,True,True,True,False,True,False,True,False,False,False,True,True,False,False,True,True,False,False,True,False,False,False,False,True,False,True,True,True,True,False,True,False,True,False,False,True,True,False,True,True,False,False,False,False,False,True,True,True,False,False,True,False,True,True,True,True,False,True,False,True,True,False,True,False,False,False,True,True,False,False,False,False,False,True,False,True,False,True,False,False,False,True,True,True,False,False,False,True,True,True,False,False,True,False,True,True,False,False,True,False,True,True,False,True,False,False,False,True,True,False,True,True,True,False,False,False,True,True,True,False,False,True,True,True,True,False,False], dtype = "bool")#candidate|2965|(180,)|const|bool
var_2966 = relay.var("var_2966", dtype = "bool", shape = (1260,))#candidate|2966|(1260,)|var|bool
call_2963 = relay.TupleGetItem(func_1578_call(relay.reshape(var_2964.astype('float64'), [2, 2, 9]), relay.reshape(const_2965.astype('bool'), [6, 30]), relay.reshape(var_2966.astype('bool'), [90, 14]), ), 2)
call_2967 = relay.TupleGetItem(func_1582_call(relay.reshape(var_2964.astype('float64'), [2, 2, 9]), relay.reshape(const_2965.astype('bool'), [6, 30]), relay.reshape(var_2966.astype('bool'), [90, 14]), ), 2)
uop_2970 = relay.cosh(uop_2961.astype('float64')) # shape=(14, 11, 5)
output = relay.Tuple([call_2963,var_2964,const_2965,var_2966,uop_2970,])
output2 = relay.Tuple([call_2967,var_2964,const_2965,var_2966,uop_2970,])
func_3026 = relay.Function([var_2952,var_2964,var_2966,], output)
mod['func_3026'] = func_3026
mod = relay.transform.InferType()(mod)
var_3027 = relay.var("var_3027", dtype = "float64", shape = (14, 11, 5))#candidate|3027|(14, 11, 5)|var|float64
var_3028 = relay.var("var_3028", dtype = "float64", shape = (18, 2))#candidate|3028|(18, 2)|var|float64
var_3029 = relay.var("var_3029", dtype = "bool", shape = (1260,))#candidate|3029|(1260,)|var|bool
output = func_3026(var_3027,var_3028,var_3029,)
func_3030 = relay.Function([var_3027,var_3028,var_3029,], output)
mutated_mod['func_3030'] = func_3030
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2928_call = mod.get_global_var('func_2928')
func_2930_call = mutated_mod.get_global_var('func_2930')
call_3056 = relay.TupleGetItem(func_2928_call(), 0)
call_3057 = relay.TupleGetItem(func_2930_call(), 0)
uop_3066 = relay.asin(call_3056.astype('float64')) # shape=(2, 4, 2)
uop_3068 = relay.asin(call_3057.astype('float64')) # shape=(2, 4, 2)
output = uop_3066
output2 = uop_3068
func_3069 = relay.Function([], output)
mod['func_3069'] = func_3069
mod = relay.transform.InferType()(mod)
output = func_3069()
func_3070 = relay.Function([], output)
mutated_mod['func_3070'] = func_3070
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3069_call = mod.get_global_var('func_3069')
func_3070_call = mutated_mod.get_global_var('func_3070')
call_3115 = func_3069_call()
call_3116 = func_3069_call()
uop_3140 = relay.log2(call_3115.astype('float64')) # shape=(2, 4, 2)
uop_3142 = relay.log2(call_3116.astype('float64')) # shape=(2, 4, 2)
func_2752_call = mod.get_global_var('func_2752')
func_2755_call = mutated_mod.get_global_var('func_2755')
const_3161 = relay.const([[6,1],[-10,10],[6,-9],[-4,-6],[3,-3],[-8,-4],[-10,8],[-4,9],[2,8],[4,5],[5,-8],[8,-8],[-3,-9],[10,4],[10,-9],[4,-4],[9,-10],[1,-4],[1,7],[-5,-10],[6,9],[-3,-5],[5,-9],[1,5],[5,-4],[3,1],[9,5],[3,-4],[5,6],[-8,-2],[6,-10],[-3,8],[4,-2],[-9,3],[3,3],[3,6],[3,-5],[4,2],[7,6],[8,-9],[3,1],[6,-1],[2,-8],[1,1],[5,-5],[-3,6],[10,1],[-3,2],[2,9],[7,-9],[-4,-4],[-1,1],[2,5],[-4,5],[-5,1],[9,-8],[-7,10],[-7,-3],[-6,-7],[1,-4],[-5,-8],[4,-2],[2,-8],[9,1],[-3,1],[10,10],[-8,-4],[9,2],[1,-3],[-5,-3],[-10,-7],[5,6],[9,-7],[-9,6],[7,8],[9,8],[-2,-4],[-5,6],[-6,-6],[-3,10],[-10,-2],[5,10],[-9,6],[2,8],[6,-3],[-9,-8],[-3,9],[-9,-1],[-5,1],[2,-1],[-2,9],[-2,10],[-10,-9],[-3,7],[5,4],[-2,-4],[8,6],[9,-9],[4,-8],[6,2],[-10,-7],[2,-9],[-10,1],[-7,-1],[-2,-3],[4,-5],[1,-3],[-9,4],[-10,4],[-7,-6],[-7,-8],[-2,7],[6,9],[1,6],[-7,-8],[-8,8],[3,7],[-5,6],[-10,6],[1,-9],[3,-7],[-2,-6],[-6,5],[-7,9],[5,2],[10,3],[10,5],[-3,10],[-2,10],[-2,1],[5,9],[1,3],[-5,-7],[3,-7],[9,6],[-6,-8],[5,-2],[-8,-2],[-1,6],[10,-7],[4,-2],[-3,-10],[2,-6],[4,9],[-6,6],[-8,-7],[-9,10],[-2,-6],[2,-3],[-8,-9],[3,-3],[1,-8],[-4,1],[3,10],[10,-1],[8,1],[5,5],[1,6],[-3,-10],[-2,3],[3,8],[3,7],[-8,8],[-8,-8],[-2,-8],[8,6],[-4,8],[-7,2],[5,5],[7,-1],[-2,3],[-5,5],[-5,-10],[-1,-4],[5,3],[-1,9],[4,-3],[-7,10],[-1,-9],[5,6],[9,10],[-4,-4],[-8,-10],[-1,-6],[4,8],[2,-1],[10,-1],[-6,-4],[7,-4],[10,-2],[5,9],[1,-3],[-3,-6],[-8,1],[-9,-4],[1,7],[-1,1],[-8,-10],[-2,-9],[4,-8],[2,5],[-1,9],[-9,4],[-10,-8],[-3,-2],[3,-4],[-3,-10],[4,6],[-3,7],[5,5],[-10,4],[9,2],[-2,-3],[-8,-1],[-9,-8],[8,2],[-4,7],[-8,3],[-1,-9],[-10,2],[-5,8],[1,4],[10,-6],[5,2],[-6,9],[1,-1],[1,-3],[-3,7],[-2,-1],[6,-5],[-9,-7],[-9,-4],[-7,-9],[6,-3],[2,-2],[-2,4],[3,9],[3,8],[-4,-6],[3,8],[-4,-2],[-8,1],[-10,-6],[-9,-8],[-8,-4],[8,-4],[-6,-7],[-2,-2],[-1,1],[9,3],[3,4],[2,4],[9,-2],[9,-1],[-6,-5],[1,-7],[2,-6],[-7,2],[8,2],[10,-9],[-6,-5],[-5,-2],[-3,1],[6,10],[5,-3],[-5,-4],[3,-3],[4,9],[3,6],[10,-2],[7,-9],[-1,-5],[5,9],[-2,-2],[-9,-7],[9,2],[10,1],[-6,-3],[6,7],[2,-4],[-9,8],[-7,8],[7,10],[3,-7],[8,5],[3,-6],[-1,-6],[5,2],[6,7],[2,9],[5,3],[-1,-3],[10,-4],[5,2],[5,10],[2,5],[-4,1],[-10,-5],[-2,-2],[-1,-2],[4,-6],[8,-6],[-7,-2],[-10,7],[1,-2],[-10,7],[7,3],[-6,-1],[-2,1],[6,-10],[6,4],[-1,2],[8,-5],[4,10],[-5,1],[9,4],[-10,1],[2,9],[-7,6],[3,-2],[-5,-1],[10,10],[6,9],[-7,9],[7,3],[5,-9],[-6,-2],[4,-2],[-2,-8],[6,-10],[-1,-10],[-9,6],[-2,7],[-3,-2],[1,8],[8,6],[6,-2],[4,-7],[-8,-5],[-9,-5],[2,-8],[8,3],[-4,7],[-4,-9],[9,-3],[3,9],[-8,-2],[-5,-5],[9,-9],[-5,-8],[-7,10],[10,-10],[-3,3],[2,9],[4,6],[-8,-6],[6,8],[10,-2],[-3,-8],[6,-3],[2,6],[5,5],[-9,-1],[-2,8],[2,1],[1,1],[-8,8],[-9,-2],[6,5],[5,3],[1,-3],[-8,-10],[6,-4],[-5,-3],[-4,-4],[2,3],[5,-9],[10,-6],[-5,3],[-9,-6],[4,-10],[-7,-1],[-5,-5],[2,7],[8,2],[10,-8],[-5,10],[5,9],[-8,-8],[3,9],[6,-7],[3,-8],[1,-8],[5,6],[10,6],[-4,5],[-5,8],[-4,-5],[2,-9],[-5,-6],[6,-7],[-4,5],[-1,-7],[7,6],[7,-7],[4,9],[6,-10],[4,5],[-2,3],[7,7],[-8,-2],[8,-4],[-3,-6],[-6,2],[-5,-1],[8,3],[10,7],[-1,-5],[1,-3],[-7,-4],[1,-7],[8,-7],[4,6],[-5,4],[-2,-5],[5,3],[9,-5],[-4,-9],[10,9],[7,-3],[-5,-3],[-7,-8],[-7,-3],[6,8],[-3,-4],[-3,-1],[8,3],[8,-4],[-4,-3],[-5,-9],[5,7],[-7,9],[-10,-6],[-3,-6],[-6,6],[-4,7],[9,-10],[-1,9],[10,-7],[4,6],[8,-7],[-8,2],[1,-8],[-10,6],[4,-6],[-2,1],[2,10],[6,10],[-5,-5],[-9,6],[4,-8],[8,-4],[9,-9],[4,4],[10,3],[-7,9],[1,6],[2,-3],[-6,1],[-4,-8],[4,3],[-9,-5],[10,-6],[3,10],[3,6],[-8,10],[-10,9],[5,-5],[7,6],[-7,-7],[-10,-2],[10,9],[-6,7],[-1,-7],[9,5],[7,4],[9,10],[-10,1],[-1,5],[4,7],[8,-5],[2,-2],[-2,-6],[6,-3],[-9,-1],[1,10],[-6,3],[10,4],[-3,-7],[-3,-7],[-5,-3],[2,-7],[8,-1],[1,-1],[8,-9],[-4,-6],[-1,6],[-1,10],[8,8],[9,1],[3,-8],[-5,1],[5,-2],[2,7],[-1,9],[6,8],[3,3],[1,-3],[8,-9],[2,-6],[2,7],[-8,-9],[-9,-10],[8,-8],[6,-4],[7,-1],[1,-10],[2,2],[-6,1],[-3,-2],[9,-7],[10,7],[-9,2],[8,-1],[-3,-4],[8,2],[2,9],[-4,-10],[-3,-9],[2,-10],[6,-7],[5,-5],[-10,5],[2,-6],[-3,-4],[6,-9]], dtype = "uint64")#candidate|3161|(546, 2)|const|uint64
call_3160 = relay.TupleGetItem(func_2752_call(relay.reshape(const_3161.astype('uint64'), [13, 6, 14]), relay.reshape(const_3161.astype('uint64'), [13, 6, 14]), ), 0)
call_3162 = relay.TupleGetItem(func_2755_call(relay.reshape(const_3161.astype('uint64'), [13, 6, 14]), relay.reshape(const_3161.astype('uint64'), [13, 6, 14]), ), 0)
output = relay.Tuple([uop_3140,call_3160,const_3161,])
output2 = relay.Tuple([uop_3142,call_3162,const_3161,])
func_3166 = relay.Function([], output)
mod['func_3166'] = func_3166
mod = relay.transform.InferType()(mod)
output = func_3166()
func_3167 = relay.Function([], output)
mutated_mod['func_3167'] = func_3167
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3166_call = mod.get_global_var('func_3166')
func_3167_call = mutated_mod.get_global_var('func_3167')
call_3192 = relay.TupleGetItem(func_3166_call(), 1)
call_3193 = relay.TupleGetItem(func_3167_call(), 1)
func_85_call = mod.get_global_var('func_85')
func_88_call = mutated_mod.get_global_var('func_88')
const_3195 = relay.const([False,True,True,True,False,True,False,True,False,False,False,False,True,True,True,False,True,True,True,True,True,True,True,False,False,False,True,True,False,True,False,False,False,False,False,True,True,False,False,False,False,False,False,True,True,True,True,True,False,False,False,True,False,True,True,False,True,True,True,True,False,False,False,True,False,False,False,True,False,False,True,False,False,False,True,True,True,False,False,False,True,False,True,True,True,True,True,True,False,True,False,False,True,False,True,True,False,True,False,False,True,False,False,True,False,True,True,True,False,True,True,True,False,True,False,True,False,True,False,False,False,True,False,True,True,False,False,False,True,True,False,True,True,True,False,True,False,True,False,False,True,False,True,True,True,True,False,True,True,True,True,True,False,True,True,True,True,True,True,True,False,False,False,True,True,False,False,True,False,True,False,True,True,True,False,False,True,False,True,False], dtype = "bool")#candidate|3195|(180,)|const|bool
call_3194 = func_85_call(relay.reshape(const_3195.astype('bool'), [2, 15, 6]), relay.reshape(const_3195.astype('bool'), [2, 15, 6]), )
call_3196 = func_85_call(relay.reshape(const_3195.astype('bool'), [2, 15, 6]), relay.reshape(const_3195.astype('bool'), [2, 15, 6]), )
output = relay.Tuple([call_3192,call_3194,const_3195,])
output2 = relay.Tuple([call_3193,call_3196,const_3195,])
func_3216 = relay.Function([], output)
mod['func_3216'] = func_3216
mod = relay.transform.InferType()(mod)
mutated_mod['func_3216'] = func_3216
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3216_call = mutated_mod.get_global_var('func_3216')
call_3217 = func_3216_call()
output = call_3217
func_3218 = relay.Function([], output)
mutated_mod['func_3218'] = func_3218
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3069_call = mod.get_global_var('func_3069')
func_3070_call = mutated_mod.get_global_var('func_3070')
call_3250 = func_3069_call()
call_3251 = func_3069_call()
output = relay.Tuple([call_3250,])
output2 = relay.Tuple([call_3251,])
func_3260 = relay.Function([], output)
mod['func_3260'] = func_3260
mod = relay.transform.InferType()(mod)
mutated_mod['func_3260'] = func_3260
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3260_call = mutated_mod.get_global_var('func_3260')
call_3261 = func_3260_call()
output = call_3261
func_3262 = relay.Function([], output)
mutated_mod['func_3262'] = func_3262
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3069_call = mod.get_global_var('func_3069')
func_3070_call = mutated_mod.get_global_var('func_3070')
call_3350 = func_3069_call()
call_3351 = func_3069_call()
uop_3352 = relay.cosh(call_3350.astype('float64')) # shape=(2, 4, 2)
uop_3354 = relay.cosh(call_3351.astype('float64')) # shape=(2, 4, 2)
uop_3355 = relay.sinh(call_3350.astype('float32')) # shape=(2, 4, 2)
uop_3357 = relay.sinh(call_3351.astype('float32')) # shape=(2, 4, 2)
uop_3363 = relay.atanh(call_3350.astype('float32')) # shape=(2, 4, 2)
uop_3365 = relay.atanh(call_3351.astype('float32')) # shape=(2, 4, 2)
func_85_call = mod.get_global_var('func_85')
func_88_call = mutated_mod.get_global_var('func_88')
const_3374 = relay.const([True,False,True,True,True,True,True,False,False,False,True,False,False,False,False,False,True,True,True,True,False,False,True,False,False,False,True,False,True,True,False,True,True,True,False,False,False,False,True,False,False,False,False,False,False,True,False,True,False,False,True,False,False,False,False,True,False,True,True,False,False,False,True,True,True,True,False,False,True,True,False,True,True,True,True,False,False,False,True,False,False,False,False,False,True,False,True,True,True,True,True,True,True,False,False,False,False,False,False,True,True,True,True,True,False,False,True,False,False,False,False,False,True,False,True,False,False,False,True,True,True,True,False,False,True,False,True,True,True,True,True,False,False,False,True,False,False,False,False,True,True,False,True,False,False,False,False,False,True,True,True,False,False,True,True,False,False,False,True,True,True,False,True,False,False,True,False,True,True,True,False,False,True,True,False,False,False,False,False,True], dtype = "bool")#candidate|3374|(180,)|const|bool
call_3373 = func_85_call(relay.reshape(const_3374.astype('bool'), [2, 15, 6]), relay.reshape(const_3374.astype('bool'), [2, 15, 6]), )
call_3375 = func_85_call(relay.reshape(const_3374.astype('bool'), [2, 15, 6]), relay.reshape(const_3374.astype('bool'), [2, 15, 6]), )
func_3069_call = mod.get_global_var('func_3069')
func_3070_call = mutated_mod.get_global_var('func_3070')
call_3381 = func_3069_call()
call_3382 = func_3069_call()
func_1578_call = mod.get_global_var('func_1578')
func_1582_call = mutated_mod.get_global_var('func_1582')
var_3384 = relay.var("var_3384", dtype = "float64", shape = (36,))#candidate|3384|(36,)|var|float64
var_3385 = relay.var("var_3385", dtype = "bool", shape = (1260,))#candidate|3385|(1260,)|var|bool
call_3383 = relay.TupleGetItem(func_1578_call(relay.reshape(var_3384.astype('float64'), [2, 2, 9]), relay.reshape(call_3373.astype('bool'), [6, 30]), relay.reshape(var_3385.astype('bool'), [90, 14]), ), 7)
call_3386 = relay.TupleGetItem(func_1582_call(relay.reshape(var_3384.astype('float64'), [2, 2, 9]), relay.reshape(call_3373.astype('bool'), [6, 30]), relay.reshape(var_3385.astype('bool'), [90, 14]), ), 7)
bop_3393 = relay.subtract(uop_3352.astype('uint8'), relay.reshape(uop_3355.astype('uint8'), relay.shape_of(uop_3352))) # shape=(2, 4, 2)
bop_3396 = relay.subtract(uop_3354.astype('uint8'), relay.reshape(uop_3357.astype('uint8'), relay.shape_of(uop_3354))) # shape=(2, 4, 2)
output = relay.Tuple([uop_3363,call_3373,const_3374,call_3381,call_3383,var_3384,var_3385,bop_3393,])
output2 = relay.Tuple([uop_3365,call_3375,const_3374,call_3382,call_3386,var_3384,var_3385,bop_3396,])
func_3402 = relay.Function([var_3384,var_3385,], output)
mod['func_3402'] = func_3402
mod = relay.transform.InferType()(mod)
mutated_mod['func_3402'] = func_3402
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3402_call = mutated_mod.get_global_var('func_3402')
var_3404 = relay.var("var_3404", dtype = "float64", shape = (36,))#candidate|3404|(36,)|var|float64
var_3405 = relay.var("var_3405", dtype = "bool", shape = (1260,))#candidate|3405|(1260,)|var|bool
call_3403 = func_3402_call(var_3404,var_3405,)
output = call_3403
func_3406 = relay.Function([var_3404,var_3405,], output)
mutated_mod['func_3406'] = func_3406
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3408 = relay.var("var_3408", dtype = "int16", shape = (14, 9, 11))#candidate|3408|(14, 9, 11)|var|int16
var_3409 = relay.var("var_3409", dtype = "int16", shape = (14, 9, 11))#candidate|3409|(14, 9, 11)|var|int16
bop_3410 = relay.not_equal(var_3408.astype('bool'), relay.reshape(var_3409.astype('bool'), relay.shape_of(var_3408))) # shape=(14, 9, 11)
output = bop_3410
output2 = bop_3410
func_3417 = relay.Function([var_3408,var_3409,], output)
mod['func_3417'] = func_3417
mod = relay.transform.InferType()(mod)
mutated_mod['func_3417'] = func_3417
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3417_call = mutated_mod.get_global_var('func_3417')
var_3419 = relay.var("var_3419", dtype = "int16", shape = (14, 9, 11))#candidate|3419|(14, 9, 11)|var|int16
var_3420 = relay.var("var_3420", dtype = "int16", shape = (14, 9, 11))#candidate|3420|(14, 9, 11)|var|int16
call_3418 = func_3417_call(var_3419,var_3420,)
output = call_3418
func_3421 = relay.Function([var_3419,var_3420,], output)
mutated_mod['func_3421'] = func_3421
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3490 = relay.var("var_3490", dtype = "float32", shape = (6, 15, 7))#candidate|3490|(6, 15, 7)|var|float32
uop_3491 = relay.cosh(var_3490.astype('float32')) # shape=(6, 15, 7)
uop_3493 = relay.sigmoid(uop_3491.astype('float32')) # shape=(6, 15, 7)
output = uop_3493
output2 = uop_3493
func_3496 = relay.Function([var_3490,], output)
mod['func_3496'] = func_3496
mod = relay.transform.InferType()(mod)
var_3497 = relay.var("var_3497", dtype = "float32", shape = (6, 15, 7))#candidate|3497|(6, 15, 7)|var|float32
output = func_3496(var_3497)
func_3498 = relay.Function([var_3497], output)
mutated_mod['func_3498'] = func_3498
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2928_call = mod.get_global_var('func_2928')
func_2930_call = mutated_mod.get_global_var('func_2930')
call_3531 = relay.TupleGetItem(func_2928_call(), 0)
call_3532 = relay.TupleGetItem(func_2930_call(), 0)
func_708_call = mod.get_global_var('func_708')
func_712_call = mutated_mod.get_global_var('func_712')
var_3569 = relay.var("var_3569", dtype = "uint64", shape = (1080,))#candidate|3569|(1080,)|var|uint64
call_3568 = func_708_call(relay.reshape(var_3569.astype('uint64'), [8, 15, 9]), relay.reshape(var_3569.astype('uint64'), [8, 15, 9]), )
call_3570 = func_708_call(relay.reshape(var_3569.astype('uint64'), [8, 15, 9]), relay.reshape(var_3569.astype('uint64'), [8, 15, 9]), )
var_3573 = relay.var("var_3573", dtype = "uint64", shape = (1080,))#candidate|3573|(1080,)|var|uint64
bop_3574 = relay.bitwise_and(var_3569.astype('int64'), relay.reshape(var_3573.astype('int64'), relay.shape_of(var_3569))) # shape=(1080,)
func_2752_call = mod.get_global_var('func_2752')
func_2755_call = mutated_mod.get_global_var('func_2755')
var_3587 = relay.var("var_3587", dtype = "uint64", shape = (1092,))#candidate|3587|(1092,)|var|uint64
call_3586 = relay.TupleGetItem(func_2752_call(relay.reshape(var_3587.astype('uint64'), [13, 6, 14]), relay.reshape(var_3587.astype('uint64'), [13, 6, 14]), ), 0)
call_3588 = relay.TupleGetItem(func_2755_call(relay.reshape(var_3587.astype('uint64'), [13, 6, 14]), relay.reshape(var_3587.astype('uint64'), [13, 6, 14]), ), 0)
func_3216_call = mod.get_global_var('func_3216')
func_3218_call = mutated_mod.get_global_var('func_3218')
call_3598 = relay.TupleGetItem(func_3216_call(), 1)
call_3599 = relay.TupleGetItem(func_3218_call(), 1)
uop_3608 = relay.atanh(var_3573.astype('float32')) # shape=(1080,)
func_679_call = mod.get_global_var('func_679')
func_682_call = mutated_mod.get_global_var('func_682')
var_3623 = relay.var("var_3623", dtype = "float32", shape = (432,))#candidate|3623|(432,)|var|float32
call_3622 = relay.TupleGetItem(func_679_call(relay.reshape(var_3623.astype('float32'), [3, 12, 12])), 0)
call_3624 = relay.TupleGetItem(func_682_call(relay.reshape(var_3623.astype('float32'), [3, 12, 12])), 0)
func_2370_call = mod.get_global_var('func_2370')
func_2373_call = mutated_mod.get_global_var('func_2373')
const_3632 = relay.const([-1,-8,10,-7,4,3,-4,8,-8,-8,-1,10,7,-10,-2,-4,8,8,-4,4,-3,-7,5,6,-8,-4,5,2,-3,6,-7,-10,6,6,-5,9,-7,-6,10,8,6,-9,-5,-10,-5,-8,1,-1,8,-7,6,-2,2,7,-9,2,-6,6,-3,-2,5,3,7,-2,-1,-7,-7,-2,-8,1,-4,3,-5,1,-7,8,-10,9,5,2,2,-3,-10,-6,-5,-8,-1,9,1,-3,3,-10,2,-2,-1,-5,4,10,4,-4,4,-8,-4,10,-6,-4,4,-6,1,5,2,5,-9,-2,2,2,10,2,6,1,-4,-3,-7,5,6,-2,-2,-4,1,-2,4,2,1,-1,-5,-10,-5,7,1,4], dtype = "uint8")#candidate|3632|(140,)|const|uint8
call_3631 = relay.TupleGetItem(func_2370_call(relay.reshape(const_3632.astype('uint8'), [5, 4, 7])), 0)
call_3633 = relay.TupleGetItem(func_2373_call(relay.reshape(const_3632.astype('uint8'), [5, 4, 7])), 0)
func_3417_call = mod.get_global_var('func_3417')
func_3421_call = mutated_mod.get_global_var('func_3421')
var_3636 = relay.var("var_3636", dtype = "int16", shape = (154, 9))#candidate|3636|(154, 9)|var|int16
call_3635 = func_3417_call(relay.reshape(var_3636.astype('int16'), [14, 9, 11]), relay.reshape(var_3636.astype('int16'), [14, 9, 11]), )
call_3637 = func_3417_call(relay.reshape(var_3636.astype('int16'), [14, 9, 11]), relay.reshape(var_3636.astype('int16'), [14, 9, 11]), )
func_1434_call = mod.get_global_var('func_1434')
func_1437_call = mutated_mod.get_global_var('func_1437')
var_3640 = relay.var("var_3640", dtype = "bool", shape = (1260,))#candidate|3640|(1260,)|var|bool
call_3639 = relay.TupleGetItem(func_1434_call(relay.reshape(var_3640.astype('bool'), [9, 14, 10]), relay.reshape(bop_3574.astype('uint64'), [1080,]), ), 2)
call_3641 = relay.TupleGetItem(func_1437_call(relay.reshape(var_3640.astype('bool'), [9, 14, 10]), relay.reshape(bop_3574.astype('uint64'), [1080,]), ), 2)
uop_3644 = relay.atan(uop_3608.astype('float64')) # shape=(1080,)
output = relay.Tuple([call_3531,call_3568,bop_3574,call_3586,var_3587,call_3598,call_3622,var_3623,call_3631,const_3632,call_3635,var_3636,call_3639,var_3640,uop_3644,])
output2 = relay.Tuple([call_3532,call_3570,bop_3574,call_3588,var_3587,call_3599,call_3624,var_3623,call_3633,const_3632,call_3637,var_3636,call_3641,var_3640,uop_3644,])
func_3654 = relay.Function([var_3569,var_3573,var_3587,var_3623,var_3636,var_3640,], output)
mod['func_3654'] = func_3654
mod = relay.transform.InferType()(mod)
mutated_mod['func_3654'] = func_3654
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3654_call = mutated_mod.get_global_var('func_3654')
var_3656 = relay.var("var_3656", dtype = "uint64", shape = (1080,))#candidate|3656|(1080,)|var|uint64
var_3657 = relay.var("var_3657", dtype = "uint64", shape = (1080,))#candidate|3657|(1080,)|var|uint64
var_3658 = relay.var("var_3658", dtype = "uint64", shape = (1092,))#candidate|3658|(1092,)|var|uint64
var_3659 = relay.var("var_3659", dtype = "float32", shape = (432,))#candidate|3659|(432,)|var|float32
var_3660 = relay.var("var_3660", dtype = "int16", shape = (154, 9))#candidate|3660|(154, 9)|var|int16
var_3661 = relay.var("var_3661", dtype = "bool", shape = (1260,))#candidate|3661|(1260,)|var|bool
call_3655 = func_3654_call(var_3656,var_3657,var_3658,var_3659,var_3660,var_3661,)
output = call_3655
func_3662 = relay.Function([var_3656,var_3657,var_3658,var_3659,var_3660,var_3661,], output)
mutated_mod['func_3662'] = func_3662
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3669 = relay.var("var_3669", dtype = "float64", shape = (2, 10, 13))#candidate|3669|(2, 10, 13)|var|float64
var_3670 = relay.var("var_3670", dtype = "float64", shape = (2, 10, 13))#candidate|3670|(2, 10, 13)|var|float64
bop_3671 = relay.power(var_3669.astype('float64'), relay.reshape(var_3670.astype('float64'), relay.shape_of(var_3669))) # shape=(2, 10, 13)
bop_3679 = relay.divide(bop_3671.astype('float32'), relay.reshape(var_3669.astype('float32'), relay.shape_of(bop_3671))) # shape=(2, 10, 13)
output = bop_3679
output2 = bop_3679
func_3683 = relay.Function([var_3669,var_3670,], output)
mod['func_3683'] = func_3683
mod = relay.transform.InferType()(mod)
mutated_mod['func_3683'] = func_3683
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3683_call = mutated_mod.get_global_var('func_3683')
var_3685 = relay.var("var_3685", dtype = "float64", shape = (2, 10, 13))#candidate|3685|(2, 10, 13)|var|float64
var_3686 = relay.var("var_3686", dtype = "float64", shape = (2, 10, 13))#candidate|3686|(2, 10, 13)|var|float64
call_3684 = func_3683_call(var_3685,var_3686,)
output = call_3684
func_3687 = relay.Function([var_3685,var_3686,], output)
mutated_mod['func_3687'] = func_3687
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2928_call = mod.get_global_var('func_2928')
func_2930_call = mutated_mod.get_global_var('func_2930')
call_3832 = relay.TupleGetItem(func_2928_call(), 0)
call_3833 = relay.TupleGetItem(func_2930_call(), 0)
func_708_call = mod.get_global_var('func_708')
func_712_call = mutated_mod.get_global_var('func_712')
var_3839 = relay.var("var_3839", dtype = "uint64", shape = (1080,))#candidate|3839|(1080,)|var|uint64
call_3838 = func_708_call(relay.reshape(var_3839.astype('uint64'), [8, 15, 9]), relay.reshape(var_3839.astype('uint64'), [8, 15, 9]), )
call_3840 = func_708_call(relay.reshape(var_3839.astype('uint64'), [8, 15, 9]), relay.reshape(var_3839.astype('uint64'), [8, 15, 9]), )
output = relay.Tuple([call_3832,call_3838,var_3839,])
output2 = relay.Tuple([call_3833,call_3840,var_3839,])
func_3844 = relay.Function([var_3839,], output)
mod['func_3844'] = func_3844
mod = relay.transform.InferType()(mod)
var_3845 = relay.var("var_3845", dtype = "uint64", shape = (1080,))#candidate|3845|(1080,)|var|uint64
output = func_3844(var_3845)
func_3846 = relay.Function([var_3845], output)
mutated_mod['func_3846'] = func_3846
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3216_call = mod.get_global_var('func_3216')
func_3218_call = mutated_mod.get_global_var('func_3218')
call_3871 = relay.TupleGetItem(func_3216_call(), 1)
call_3872 = relay.TupleGetItem(func_3218_call(), 1)
func_3496_call = mod.get_global_var('func_3496')
func_3498_call = mutated_mod.get_global_var('func_3498')
var_3877 = relay.var("var_3877", dtype = "float32", shape = (630,))#candidate|3877|(630,)|var|float32
call_3876 = func_3496_call(relay.reshape(var_3877.astype('float32'), [6, 15, 7]))
call_3878 = func_3496_call(relay.reshape(var_3877.astype('float32'), [6, 15, 7]))
output = relay.Tuple([call_3871,call_3876,var_3877,])
output2 = relay.Tuple([call_3872,call_3878,var_3877,])
func_3881 = relay.Function([var_3877,], output)
mod['func_3881'] = func_3881
mod = relay.transform.InferType()(mod)
var_3882 = relay.var("var_3882", dtype = "float32", shape = (630,))#candidate|3882|(630,)|var|float32
output = func_3881(var_3882)
func_3883 = relay.Function([var_3882], output)
mutated_mod['func_3883'] = func_3883
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3069_call = mod.get_global_var('func_3069')
func_3070_call = mutated_mod.get_global_var('func_3070')
call_3904 = func_3069_call()
call_3905 = func_3069_call()
func_3683_call = mod.get_global_var('func_3683')
func_3687_call = mutated_mod.get_global_var('func_3687')
const_3915 = relay.const([[-3.062050,-8.210231,8.893049,-2.449737],[6.567889,-2.856147,-1.537806,3.305294],[-7.079877,7.875352,-8.909842,4.954308],[8.285052,1.175903,-8.661763,1.489640],[4.088260,-0.198297,0.299851,0.270230],[9.724606,2.701791,3.142220,0.584847],[9.930001,-0.101631,7.562263,-3.574862],[-6.483998,-8.765107,-6.893762,0.674478],[-0.067929,-2.341621,8.113495,-8.898462],[2.833512,-0.706220,-0.378183,0.638626],[-7.029050,-9.048527,7.919807,-6.401367],[-5.968031,8.275181,1.857825,-1.604720],[-9.560896,5.649197,-9.755328,-3.130195],[0.440103,-4.972540,5.182361,4.216578],[8.344285,4.138062,1.439432,4.432232],[-9.190818,-9.525889,3.978644,7.386055],[3.073340,0.336827,3.256304,-6.664086],[-7.010462,-8.155328,-9.607867,2.999543],[2.058025,-6.047108,7.328960,-0.284311],[-8.194012,1.306173,-2.303112,1.735471],[0.951064,6.197073,5.713463,-4.202305],[2.039131,1.190512,-8.192413,4.291019],[5.409674,-2.012890,3.423520,-1.633232],[3.866831,-2.277779,4.175061,-6.287224],[-6.295727,8.168614,7.489418,-3.884057],[-8.549923,-9.879002,-8.066494,0.668268],[4.204743,-3.550478,-3.214931,7.473689],[-7.506619,4.651782,2.306911,0.132482],[-3.011177,0.407547,-3.513087,-6.228771],[6.006504,1.183679,-0.927126,8.417025],[1.858330,6.324647,1.858853,7.317257],[-2.570803,2.868736,-6.002634,4.685764],[3.332674,-9.371716,-7.904639,-5.998222],[7.884068,-9.994971,-0.597693,-3.272228],[7.875341,-0.421732,-0.268068,1.484085],[-3.114150,-3.818210,7.274941,7.681633],[3.558695,-3.593484,-4.349696,7.189213],[-9.352599,-8.001357,-5.499661,-8.293622],[-6.440457,-4.847845,6.166257,8.360641],[-7.849871,-5.432360,3.162437,-1.915114],[-8.788799,1.430553,3.906627,-7.975210],[-7.831849,8.438723,7.312986,-0.572711],[-5.782023,-7.769951,-1.460317,7.680384],[-8.822032,-8.517507,-6.789894,-7.893923],[0.702000,8.131539,-3.713679,7.276345],[-3.985390,5.635680,-9.049768,3.662209],[-4.209907,-6.090993,3.897315,9.733153],[-1.143608,-8.908490,-8.372345,2.094286],[-3.522906,5.327172,-9.601102,8.793460],[7.669731,7.530914,-4.095406,-8.869132],[-2.271390,-9.295743,-5.726621,7.063907],[3.925055,7.936833,-6.309572,-2.443315],[-3.563254,-3.609392,-4.831814,9.551286],[-9.653973,5.934837,-8.166209,-2.707790],[6.830465,-0.994223,-7.847682,-2.348006],[8.117618,-7.170268,-7.152385,-3.849511],[-7.613066,6.840342,-9.135918,-8.957364],[2.720163,-3.733599,7.696548,3.702105],[6.647231,-6.805925,8.115075,6.256628],[8.395327,3.560576,-2.890184,-9.669624],[-1.620718,9.895461,-5.324869,2.354653],[-6.255807,4.408848,-5.058440,-9.018630],[6.903535,-7.942407,2.730575,4.845273],[7.699145,-0.245955,9.937600,-8.323215],[-4.664898,-9.923114,8.629009,2.808103]], dtype = "float64")#candidate|3915|(65, 4)|const|float64
call_3914 = func_3683_call(relay.reshape(const_3915.astype('float64'), [2, 10, 13]), relay.reshape(const_3915.astype('float64'), [2, 10, 13]), )
call_3916 = func_3683_call(relay.reshape(const_3915.astype('float64'), [2, 10, 13]), relay.reshape(const_3915.astype('float64'), [2, 10, 13]), )
func_708_call = mod.get_global_var('func_708')
func_712_call = mutated_mod.get_global_var('func_712')
const_3920 = relay.const([-6,3,1,-10,3,-6,5,-6,2,-2,-4,-6,6,1,-5,2,-5,7,-2,6,9,6,9,-9,-5,-8,2,2,-3,-5,-3,2,-3,3,-5,3,-4,-10,-10,-4,1,-6,5,-10,2,7,-4,3,-9,5,9,10,6,4,10,-2,1,-4,7,7,1,3,4,-5,4,6,7,-5,-5,-8,1,6,10,-8,-7,-4,-10,6,-5,-4,-10,-4,-6,9,-10,-8,8,10,-5,-7,-5,3,-10,-9,1,-7,6,9,10,5,6,10,-7,-6,-1,9,5,-3,-2,-1,-10,7,10,7,-5,-10,6,-8,10,-9,6,1,9,-6,10,5,8,5,-7,9,-7,-2,-1,-7,-4,-6,-4,2,2,-4,7,-2,9,-4,10,-8,-4,-9,3,-8,4,-7,-8,10,9,4,-3,-3,-2,3,-2,-8,-3,1,-4,-5,10,7,-3,10,2,7,8,2,-7,-3,-5,-5,-7,6,-5,2,-5,5,-5,-9,1,-4,8,-1,8,3,-5,4,7,5,-1,7,-5,3,9,7,-9,-1,7,-3,-5,10,7,2,-4,-3,-4,-8,-7,9,4,-8,-6,-2,-8,-8,3,3,-2,1,-1,-10,9,4,-10,1,-8,8,7,-7,-7,8,-2,8,-5,1,-5,1,-10,9,-7,-5,9,-8,-5,1,-9,10,9,7,-8,10,-1,9,-7,5,-1,10,6,-6,5,1,-8,7,-10,3,-5,3,-5,9,-3,5,-7,-5,5,3,1,-3,-6,8,5,6,-4,5,-3,1,-1,3,-3,10,-10,-9,-7,-9,5,9,-9,-9,5,-4,2,-8,4,-2,8,5,5,10,-8,-6,-8,-2,-1,-4,7,-5,-3,-4,4,4,-8,-1,-4,-8,2,5,9,9,-8,-6,-8,6,6,10,7,-4,-4,-9,-6,1,1,7,3,9,6,-6,8,8,3,-6,2,7,-4,4,-5,7,-1,5,-8,-5,2,9,-5,-6,6,1,9,-6,6,3,5,5,-2,-9,-5,-5,6,-6,2,1,3,8,2,5,5,7,-7,7,-3,2,-1,-6,10,7,-4,-9,-4,1,2,4,-5,9,-3,3,-1,7,-1,-8,-7,-2,7,9,2,-5,-5,2,-10,-2,-5,3,2,-9,-5,4,4,-4,-9,10,3,6,6,8,10,1,6,3,-5,3,-1,-3,-2,4,10,-3,-1,10,6,5,9,3,-1,-5,1,8,4,-5,-6,8,-6,8,-9,-7,8,2,8,-3,2,-5,6,2,-3,-4,9,7,-2,-3,5,7,9,-9,3,-6,-9,-7,-2,-5,-10,-6,-1,-4,-9,-6,-6,8,-10,-4,10,-9,1,-4,-9,-10,7,7,8,-5,-8,-1,-1,10,5,-8,4,-4,7,7,-8,-2,10,5,1,-5,10,-1,-5,6,-7,-5,-4,-3,6,7,-5,-10,-10,-5,6,10,-5,9,-4,-10,-9,-1,1,-4,-5,4,1,7,1,-10,3,5,1,-10,8,7,4,-2,3,3,-8,8,-10,-9,-8,-8,-1,10,6,8,-9,-1,2,-7,9,2,8,-7,6,1,-6,-6,-3,-8,8,3,10,10,9,-6,-1,8,-8,-10,-10,8,-2,-1,-3,-4,-5,-8,-4,5,-8,-4,9,10,6,10,1,-1,2,-7,-1,4,9,8,-10,7,-4,-9,-2,10,9,3,8,2,-6,-5,-2,-2,2,-4,-3,-2,-1,-1,8,-8,-1,-6,5,-7,8,5,-4,1,-6,-8,-6,-7,-1,-8,2,-7,-9,10,-10,-2,-2,8,-5,-9,2,10,-10,-4,9,-2,-10,-4,2,10,2,10,-10,-7,5,-3,-7,-6,-2,-10,10,2,2,8,9,-6,9,-2,-6,1,-6,10,-9,-10,5,-2,3,7,-9,9,-3,8,3,-9,10,2,-6,1,9,6,3,-2,-3,2,-4,-1,-6,-8,-10,7,9,-10,-2,-10,-6,6,4,6,7,-1,-8,1,-3,4,8,-7,-1,-3,10,3,-10,5,-6,-5,-8,-7,3,2,-7,-1,-8,-3,5,-3,1,-1,6,9,5,-7,10,-3,2,-9,4,3,8,4,-1,-10,-2,5,5,9,6,6,10,1,7,-10,-1,4,10,-7,-2,5,-6,-1,2,2,6,6,-7,9,-8,-4,3,-10,-5,-7,-4,2,-3,-10,3,-5,-1,-6,-9,-2,-3,5,4,10,-4,6,-9,7,-1,7,2,2,2,-2,2,-7,10,-2,1,4,9,5,-10,10,-1,7,8,7,-9,2,-2,-6,-10,5,-10,-7,2,-9,-6,4,-5,-3,2,6,10,1,-4,2,-5,7,7,6,-8,2,1,1,8,-2,5,-10,-3,-5,-9,-5,6,-2,8,2,1,9,-1,2,6,10,10,-6,-4,-4,-8,7,-10,6,-7,5,-2,1,-9,-5,-5,-6,-4,1,-3,-10,3,4,-8,-3,-9,-2,5,6,-4,-10,-5,-5,-1,8,-1,-5,-8,10,-9,1,-1,1,-6,-1,10,-1,-10,-6,5,4,-2,2,8,-8,-5,7,3,4,-6,2,-8,1,-1,8,-10,-4,9,-2,8,-6,-8,8,2,1,-9,-4,-7,-5,-1,-6,5,-3,8,3,-7,8,3,-7,8,-3,-10,-5,3,7,5,4,5,-4,5,10,6,7,4,2,-1,-10,-1,8,-7,7,8,1,1,8,-1,-9,-6,6,-8,3,-3,-10,10,-8,3,-10,-9,6,-6,-9,5,-6,2,-1,2,10,9,-10,8,-9,-7,3,1,7,6,-8,4,1,8,8,8,-5,-8,9,5,8,-8,-8,-2,10,-3,-8,4,2,-3,-2,-8,1,2,-3,-7,-8,4,6,3,6,4,-2,5,-8,6,-1,-7,-10], dtype = "uint64")#candidate|3920|(1080,)|const|uint64
call_3919 = func_708_call(relay.reshape(const_3920.astype('uint64'), [8, 15, 9]), relay.reshape(const_3920.astype('uint64'), [8, 15, 9]), )
call_3921 = func_708_call(relay.reshape(const_3920.astype('uint64'), [8, 15, 9]), relay.reshape(const_3920.astype('uint64'), [8, 15, 9]), )
func_2370_call = mod.get_global_var('func_2370')
func_2373_call = mutated_mod.get_global_var('func_2373')
const_3930 = relay.const([10,-7,-9,1,5,7,-6,3,-9,-5,9,4,-3,-9,-1,-7,8,-4,-2,-6,-1,-1,7,8,-6,-7,-6,-10,3,-3,6,5,-4,10,4,-1,8,-3,-9,-4,-5,-1,4,-10,-1,-1,-1,-2,7,-10,-9,-7,4,-3,-2,-9,-10,8,10,-10,10,-1,-8,-5,4,-6,-8,-9,5,-7,-2,6,5,-5,3,-9,9,-4,-2,3,-6,-8,-4,-7,10,9,-2,-4,-10,-3,8,-6,3,-3,-8,-8,7,-9,4,1,-1,8,5,10,4,-6,7,-9,-1,5,1,6,-9,9,10,-9,-8,2,-8,-7,-8,-3,9,5,-6,-9,-4,-3,9,-8,9,8,2,-3,4,3,6,-7,9,3], dtype = "uint8")#candidate|3930|(140,)|const|uint8
call_3929 = relay.TupleGetItem(func_2370_call(relay.reshape(const_3930.astype('uint8'), [5, 4, 7])), 0)
call_3931 = relay.TupleGetItem(func_2373_call(relay.reshape(const_3930.astype('uint8'), [5, 4, 7])), 0)
uop_3939 = relay.tan(call_3904.astype('float64')) # shape=(2, 4, 2)
uop_3941 = relay.tan(call_3905.astype('float64')) # shape=(2, 4, 2)
func_2370_call = mod.get_global_var('func_2370')
func_2373_call = mutated_mod.get_global_var('func_2373')
call_3957 = relay.TupleGetItem(func_2370_call(relay.reshape(call_3929.astype('uint8'), [5, 4, 7])), 0)
call_3958 = relay.TupleGetItem(func_2373_call(relay.reshape(call_3929.astype('uint8'), [5, 4, 7])), 0)
output = relay.Tuple([call_3914,const_3915,call_3919,const_3920,call_3929,const_3930,uop_3939,call_3957,])
output2 = relay.Tuple([call_3916,const_3915,call_3921,const_3920,call_3931,const_3930,uop_3941,call_3958,])
func_3972 = relay.Function([], output)
mod['func_3972'] = func_3972
mod = relay.transform.InferType()(mod)
mutated_mod['func_3972'] = func_3972
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3972_call = mutated_mod.get_global_var('func_3972')
call_3973 = func_3972_call()
output = call_3973
func_3974 = relay.Function([], output)
mutated_mod['func_3974'] = func_3974
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3977 = relay.var("var_3977", dtype = "float32", shape = (11, 8, 16))#candidate|3977|(11, 8, 16)|var|float32
uop_3978 = relay.erf(var_3977.astype('float32')) # shape=(11, 8, 16)
output = relay.Tuple([uop_3978,])
output2 = relay.Tuple([uop_3978,])
func_3985 = relay.Function([var_3977,], output)
mod['func_3985'] = func_3985
mod = relay.transform.InferType()(mod)
var_3986 = relay.var("var_3986", dtype = "float32", shape = (11, 8, 16))#candidate|3986|(11, 8, 16)|var|float32
output = func_3985(var_3986)
func_3987 = relay.Function([var_3986], output)
mutated_mod['func_3987'] = func_3987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3166_call = mod.get_global_var('func_3166')
func_3167_call = mutated_mod.get_global_var('func_3167')
call_4024 = relay.TupleGetItem(func_3166_call(), 0)
call_4025 = relay.TupleGetItem(func_3167_call(), 0)
var_4058 = relay.var("var_4058", dtype = "float64", shape = (2, 4, 2))#candidate|4058|(2, 4, 2)|var|float64
bop_4059 = relay.right_shift(call_4024.astype('uint64'), relay.reshape(var_4058.astype('uint64'), relay.shape_of(call_4024))) # shape=(2, 4, 2)
bop_4062 = relay.right_shift(call_4025.astype('uint64'), relay.reshape(var_4058.astype('uint64'), relay.shape_of(call_4025))) # shape=(2, 4, 2)
output = bop_4059
output2 = bop_4062
func_4065 = relay.Function([var_4058,], output)
mod['func_4065'] = func_4065
mod = relay.transform.InferType()(mod)
mutated_mod['func_4065'] = func_4065
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4066 = relay.var("var_4066", dtype = "float64", shape = (2, 4, 2))#candidate|4066|(2, 4, 2)|var|float64
func_4065_call = mutated_mod.get_global_var('func_4065')
call_4067 = func_4065_call(var_4066)
output = call_4067
func_4068 = relay.Function([var_4066], output)
mutated_mod['func_4068'] = func_4068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3216_call = mod.get_global_var('func_3216')
func_3218_call = mutated_mod.get_global_var('func_3218')
call_4107 = relay.TupleGetItem(func_3216_call(), 1)
call_4108 = relay.TupleGetItem(func_3218_call(), 1)
func_3166_call = mod.get_global_var('func_3166')
func_3167_call = mutated_mod.get_global_var('func_3167')
call_4114 = relay.TupleGetItem(func_3166_call(), 1)
call_4115 = relay.TupleGetItem(func_3167_call(), 1)
output = relay.Tuple([call_4107,call_4114,])
output2 = relay.Tuple([call_4108,call_4115,])
func_4132 = relay.Function([], output)
mod['func_4132'] = func_4132
mod = relay.transform.InferType()(mod)
mutated_mod['func_4132'] = func_4132
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4132_call = mutated_mod.get_global_var('func_4132')
call_4133 = func_4132_call()
output = call_4133
func_4134 = relay.Function([], output)
mutated_mod['func_4134'] = func_4134
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4238 = relay.var("var_4238", dtype = "float64", shape = (11, 4, 14))#candidate|4238|(11, 4, 14)|var|float64
const_4239 = relay.const([[[2.672557,-1.535388,-3.434636,3.087328,9.830719,5.270480,-9.871710,7.251622,-8.917349,-8.926575,1.356013,0.599885,-9.549846,8.309109],[0.328745,-4.388633,0.825174,-9.879718,-4.608258,3.694634,8.813327,9.877765,0.628187,3.850539,8.064675,-7.447784,7.311065,-5.188952],[8.881163,-8.940223,-7.682500,7.141171,5.770902,-4.153828,0.916244,4.265982,-9.073382,-6.073170,1.884640,4.084109,6.884919,6.795057],[-2.386077,-2.738051,-5.646934,-1.394216,-9.225685,-7.279995,-6.266203,3.359607,-0.046028,-7.944241,4.840220,-7.600578,4.851944,4.252855]],[[4.055413,5.519958,-5.906493,2.466574,0.608161,-4.875863,6.943852,5.270592,9.790125,4.530752,-5.425811,-0.318921,9.104967,-7.729411],[7.819467,9.739421,5.117698,-8.165253,8.448866,-5.265906,2.702368,-9.425744,1.467780,-0.308242,-0.145048,-2.610254,-4.597414,6.844614],[-6.570295,-4.798177,5.663930,-2.443735,-2.873145,6.931271,8.436318,-5.993727,-8.007361,7.770735,7.743580,-9.193291,-5.069323,-7.520800],[9.548832,-2.330792,7.610398,2.729852,-6.984496,5.756847,-0.378459,-0.427858,-7.422692,7.461452,3.096176,-6.872900,-7.402108,1.255483]],[[-6.304075,6.856008,0.397782,4.389407,-0.743061,3.559338,-5.733750,-4.613559,2.966649,-1.404334,5.980937,-4.829624,9.865824,1.057672],[7.464820,-7.442931,-4.951884,-6.223820,9.139389,1.693814,-9.513789,-5.131435,9.242117,-7.481113,-1.458942,8.915770,-2.122916,-7.374253],[-2.717413,4.196203,-4.822301,0.830194,-9.919533,-4.511908,9.346245,7.503775,5.282295,2.207681,-7.668009,8.890020,-9.514004,5.741036],[5.656228,-0.907134,8.139201,1.530821,9.720504,2.313770,-2.945072,1.263246,2.398560,-3.762810,9.330087,8.289940,1.764418,-8.772699]],[[6.860444,-0.223214,2.077678,7.920845,-2.114107,0.752840,6.159689,1.063027,-5.996176,-1.029104,-3.772038,-2.805636,-2.243274,5.115168],[0.045227,2.762618,1.657663,7.177321,1.611219,-6.461936,8.587776,2.431414,-4.113924,0.533495,-3.592519,-8.197359,-0.091879,-2.783360],[-6.215354,-1.302737,0.510852,3.538575,6.391024,1.089003,5.022043,-8.183751,6.714827,5.552532,9.488384,9.104018,-9.021121,-4.106553],[-3.483568,8.770884,-3.984379,-3.541290,-2.038803,5.607798,-1.077591,-1.359855,-7.111609,3.701625,-3.514943,5.149170,4.402562,4.204375]],[[-5.166637,-0.125329,-1.967463,3.196010,2.952584,-2.268147,2.347107,5.661574,8.993834,9.936458,-0.646444,3.792314,-8.604939,-4.184269],[4.691370,3.623952,2.519503,5.972989,-9.230504,9.887555,-7.221650,7.116100,6.869799,-6.751907,-7.870171,-6.480459,-1.603836,3.989376],[-6.473510,-5.657362,-6.674136,9.640545,5.099522,0.497068,1.678588,6.070481,0.653137,-7.609199,7.782518,1.645196,-2.086242,-0.367368],[8.993296,8.619639,-3.361885,-0.113771,-2.420105,-6.787744,-0.284242,4.758565,-1.930255,0.756617,4.185599,-3.133671,-7.886273,-5.132179]],[[3.620521,5.664104,-3.600983,-4.694454,-3.016991,9.787549,-9.430981,-0.932309,-8.166012,9.851071,-2.583449,-3.113221,-0.516423,-3.427546],[-0.783083,5.081103,-4.548695,-8.812909,-9.009943,3.572914,9.437774,3.024673,-0.064160,-7.145940,9.376592,-5.921469,8.389292,2.616147],[1.737153,-5.779477,-7.046856,-4.705357,3.088899,9.181827,7.506395,-9.235125,-4.763433,6.007336,-7.174484,5.319635,8.512657,3.330037],[-4.015885,-6.966768,6.718361,3.808406,-8.650736,-6.922286,-2.879159,1.128721,-0.839425,2.638186,9.801235,9.486323,-1.979804,0.843005]],[[-3.486312,-2.420851,3.296810,7.048525,-2.586713,-7.601837,-6.394452,-4.617520,1.198832,-1.963629,2.605246,-4.509107,-0.834082,-1.094359],[-0.018714,-6.874891,0.704968,7.904521,2.408271,6.022098,4.358646,0.716145,-4.798174,-5.285631,3.359052,5.629225,-6.022466,-5.011653],[4.750571,-2.141993,-1.996439,2.210792,0.124555,3.919951,0.395461,-9.210537,-8.833692,-9.826119,3.924374,-7.482129,2.980431,-3.009509],[4.367640,9.486442,5.505116,-8.317886,-1.891341,7.438723,-7.230797,3.585041,9.788669,-8.911732,2.873668,-3.018006,-7.852251,5.963573]],[[-5.452246,7.527620,-3.452469,1.640931,-9.600267,-0.404570,4.327241,2.604294,-0.710375,3.988759,-3.202794,3.646764,-3.376553,2.077132],[4.571602,-1.547514,-8.889066,2.114996,-4.361203,-5.620275,8.779208,-8.645228,6.967560,-4.357613,-5.607139,1.419513,-2.106807,-6.652565],[9.094449,6.954672,-7.717597,-2.632258,5.848160,-1.349398,-0.973776,9.350325,7.150165,-3.011415,6.944923,-3.956379,-1.430953,-2.796820],[-2.195440,4.348011,-9.757025,-9.559437,9.850608,0.099640,8.003324,-4.553856,9.241079,5.307406,5.080797,3.313093,-0.431720,-5.425507]],[[3.353140,0.037884,2.739784,8.594426,5.874933,9.268589,5.233418,-3.170005,-6.535679,-1.489687,-6.005593,-2.167942,-1.895709,-6.216557],[0.496395,3.741243,5.816747,-8.516707,-7.560963,6.255982,-8.652972,-1.983277,4.304621,-8.062881,5.698139,4.587416,-9.687034,-1.492962],[8.088855,6.753153,6.523876,-5.563349,-7.107369,-2.380246,-4.393523,-4.592261,-3.391017,-3.514185,2.065088,8.378320,-2.665253,-4.376578],[-4.116592,9.662387,8.392473,-5.727795,2.713798,-1.213513,2.836401,-3.183188,-6.027993,-5.605478,6.357517,-0.710999,4.750238,-2.652569]],[[4.203849,-8.140112,7.022574,5.378082,6.011247,2.325600,-6.726555,-3.941547,-2.130059,-0.790340,8.321785,1.913362,2.575033,-7.206371],[7.482873,-9.391749,7.110611,-9.719649,-9.457188,-8.580045,9.495564,1.232563,6.449260,-8.855279,-1.951332,-7.235272,0.791367,4.164892],[0.338418,-0.474925,-7.186396,4.159804,7.628549,-0.135300,-1.209388,8.534700,-1.683678,4.163222,-0.523093,-6.405379,-1.283514,4.364483],[-4.082805,6.568746,-5.119009,7.003453,-8.474936,-2.890384,-0.538796,-3.420661,1.862990,3.749310,-3.776079,3.547318,-9.027182,7.347552]],[[-8.783766,-5.353260,2.803175,9.068153,8.495788,-7.831869,6.400149,-6.393679,5.231892,-5.334551,-2.295704,7.344455,0.945714,-6.663617],[-2.290692,-6.911565,-3.615332,2.069520,-0.161160,9.693845,7.891346,-0.554626,-9.054708,3.220558,8.274220,1.748203,8.532451,-7.975528],[0.721158,-2.165702,-6.131305,0.931309,8.511188,5.225216,2.431745,-8.308719,-8.179274,3.003475,4.446684,8.202505,9.283735,-1.762125],[4.469340,2.696450,8.175270,-7.357972,-1.714892,-9.805799,-3.170770,-0.348906,-5.418365,6.815171,9.821886,-4.093996,2.480101,8.498478]]], dtype = "float64")#candidate|4239|(11, 4, 14)|const|float64
bop_4240 = relay.subtract(var_4238.astype('float64'), relay.reshape(const_4239.astype('float64'), relay.shape_of(var_4238))) # shape=(11, 4, 14)
output = bop_4240
output2 = bop_4240
func_4253 = relay.Function([var_4238,], output)
mod['func_4253'] = func_4253
mod = relay.transform.InferType()(mod)
mutated_mod['func_4253'] = func_4253
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4254 = relay.var("var_4254", dtype = "float64", shape = (11, 4, 14))#candidate|4254|(11, 4, 14)|var|float64
func_4253_call = mutated_mod.get_global_var('func_4253')
call_4255 = func_4253_call(var_4254)
output = call_4255
func_4256 = relay.Function([var_4254], output)
mutated_mod['func_4256'] = func_4256
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3972_call = mod.get_global_var('func_3972')
func_3974_call = mutated_mod.get_global_var('func_3974')
call_4270 = relay.TupleGetItem(func_3972_call(), 2)
call_4271 = relay.TupleGetItem(func_3974_call(), 2)
const_4281 = relay.const([[[-4,-3,-6,-9,10,4,1,-10,-9],[-8,-3,1,-8,-4,-2,8,-10,8],[-5,-2,6,-8,-9,5,-7,2,-9],[-7,-9,-1,-4,8,-1,1,-3,5],[-10,-6,3,6,-6,1,-3,-10,1],[-3,4,10,-8,-1,7,-10,-9,5],[10,4,-10,-1,7,-5,-7,-3,10],[4,6,6,-3,10,7,-6,7,-4],[8,1,-9,2,-5,-6,-10,-10,8],[-10,6,-3,-7,9,2,4,1,3],[-2,-5,-4,1,-1,-2,6,-10,-4],[-5,-5,-7,-10,-4,6,8,-6,4],[-3,-4,3,3,-8,4,-9,2,-3],[-8,-10,3,-2,4,3,-6,1,3],[5,-5,-1,6,-10,-2,7,-6,-2]],[[5,-10,-2,4,-1,9,1,10,-9],[-7,-10,3,-9,-4,9,6,2,10],[-10,3,1,5,-7,10,-7,1,3],[3,-4,9,-5,-7,2,2,-6,-3],[-6,-1,-5,-9,7,2,-1,3,2],[-1,8,5,-9,-2,-1,-2,-7,-9],[1,5,-5,-7,1,-6,-4,9,6],[2,10,-10,2,5,-2,-10,-2,10],[-3,6,9,-7,8,4,10,1,1],[9,1,3,-10,-8,-9,10,9,5],[9,-2,-8,2,2,5,7,9,10],[3,4,-4,2,-4,-1,1,-1,-8],[-9,6,-6,-7,7,-10,5,-8,-7],[-1,-8,9,5,1,3,6,10,3],[5,8,5,8,3,10,-2,-8,7]],[[-2,-9,10,-4,4,-10,-9,-9,6],[7,6,2,2,5,6,9,-6,-3],[-10,5,-1,3,2,9,5,-2,9],[-7,9,1,5,3,10,-8,-3,6],[-9,-3,2,9,-1,-10,-6,-1,10],[10,4,5,-9,4,-7,3,-3,7],[10,5,-6,2,-4,4,-3,-9,8],[-10,-8,-9,9,1,10,-7,1,-4],[9,-8,6,-8,6,7,1,3,4],[-2,-5,2,10,-10,3,9,-7,-6],[-9,-4,-2,-1,10,10,-7,4,-7],[9,-8,-2,2,-5,-8,-4,7,-4],[-10,-2,10,-2,-8,10,5,-5,-8],[-3,8,-9,-1,3,-10,-7,-3,-1],[-2,-1,3,6,-1,-10,7,7,-3]],[[2,-9,2,-2,-2,-7,-10,-9,-9],[-10,-10,-7,-10,-4,-2,3,-3,-8],[6,3,7,-2,-10,7,3,6,8],[4,10,5,6,-5,-4,1,5,7],[-5,10,-2,-7,-6,-8,8,4,-9],[9,1,-2,7,5,9,-7,-1,-4],[-5,7,5,8,5,-1,-5,10,4],[-10,-5,-4,-7,3,-9,-10,-7,8],[2,3,-9,4,7,-9,3,-2,4],[-7,9,8,4,-4,7,-10,9,-8],[2,-4,5,-7,-3,-1,9,8,7],[-7,4,-1,-5,-9,8,5,-1,-6],[2,-7,6,-2,5,4,5,-2,-5],[9,-5,4,-10,-3,8,9,7,-5],[-3,10,6,-1,-7,10,-5,-4,9]],[[-6,-7,-10,-2,-6,-5,4,7,-8],[-9,-2,2,-8,2,9,-2,-10,6],[5,-1,9,-10,-3,-8,-10,10,5],[5,-8,7,-8,-2,7,2,-10,-3],[-8,3,-9,-4,9,-10,-7,8,-4],[3,-4,-2,-7,-3,5,5,8,-5],[-10,-6,5,3,-5,-5,8,8,-5],[2,-5,8,-8,3,10,5,-9,8],[8,-3,-4,1,8,-3,2,-4,10],[-6,6,6,-1,5,1,1,-5,-4],[5,-3,5,-6,1,3,-4,2,10],[6,-1,1,-4,-3,9,10,-3,6],[8,2,-4,3,-3,9,-4,-5,8],[9,8,-3,-9,10,-5,-7,-8,4],[-5,-1,-3,4,-5,-4,-6,-5,3]],[[1,10,-4,-10,1,2,-10,-4,7],[-1,-5,-1,9,2,-2,-1,-6,8],[7,-3,-6,6,1,-6,5,1,-4],[-1,-10,7,7,-8,-9,7,4,6],[2,-5,10,-3,-9,-7,7,-5,10],[-10,10,-3,6,-6,-7,-10,4,4],[-9,9,1,2,-5,-6,1,-5,8],[1,-8,-4,-9,8,2,-7,10,8],[3,1,8,-2,-5,-1,5,-7,-9],[1,-5,-1,-10,-7,-4,2,-6,-5],[10,5,-6,-8,-8,-7,-6,-3,5],[8,-2,-6,4,4,-10,-6,8,-6],[6,9,-1,-1,3,7,-7,3,-2],[6,6,-5,10,-7,-3,-7,10,-4],[-10,-7,-8,1,9,-5,-5,-8,2]],[[7,7,2,-8,-10,3,-9,-7,-6],[-1,10,-2,-3,-5,-8,-6,-9,-1],[-4,10,-9,-6,-5,-5,7,7,5],[2,4,9,-4,-9,10,6,8,8],[8,-6,-8,-4,-6,-4,-8,-9,6],[6,-4,7,-4,-2,6,8,5,-6],[4,9,1,-8,-2,3,6,-9,6],[-8,8,1,-9,9,2,6,5,5],[-1,-5,2,10,-9,10,-7,-4,-8],[1,3,-1,5,-2,-3,6,-1,-6],[9,3,-6,-3,-5,10,-1,1,8],[2,1,4,2,7,-3,8,-8,-9],[-8,-1,-9,-6,-9,6,-1,3,-4],[-6,-8,-10,6,2,1,-2,6,-1],[2,7,6,-1,2,9,-2,2,7]],[[-3,-2,-1,-8,3,6,-9,3,2],[-9,-6,-8,9,-9,-3,3,-3,1],[-7,5,-3,3,-9,-7,-6,5,-7],[7,6,7,4,5,6,-9,5,2],[-7,9,3,-9,2,1,1,-9,3],[6,7,-3,7,5,-8,-3,6,-10],[-10,10,-5,3,-10,-2,-10,10,-2],[-10,7,-5,6,1,-10,3,-2,-1],[-5,-4,9,-5,6,6,-10,-9,4],[1,9,-2,-5,-8,7,5,-8,-4],[-4,-5,6,-10,-10,3,-2,5,-8],[-2,-1,9,4,1,-2,-8,-6,9],[-8,10,8,3,-8,5,5,-9,10],[8,4,7,-6,2,-9,6,10,7],[-7,-1,-7,3,4,10,-1,-9,8]]], dtype = "uint64")#candidate|4281|(8, 15, 9)|const|uint64
bop_4282 = relay.divide(call_4270.astype('float64'), relay.reshape(const_4281.astype('float64'), relay.shape_of(call_4270))) # shape=(8, 15, 9)
bop_4285 = relay.divide(call_4271.astype('float64'), relay.reshape(const_4281.astype('float64'), relay.shape_of(call_4271))) # shape=(8, 15, 9)
func_4253_call = mod.get_global_var('func_4253')
func_4256_call = mutated_mod.get_global_var('func_4256')
var_4287 = relay.var("var_4287", dtype = "float64", shape = (616,))#candidate|4287|(616,)|var|float64
call_4286 = func_4253_call(relay.reshape(var_4287.astype('float64'), [11, 4, 14]))
call_4288 = func_4253_call(relay.reshape(var_4287.astype('float64'), [11, 4, 14]))
output = relay.Tuple([bop_4282,call_4286,var_4287,])
output2 = relay.Tuple([bop_4285,call_4288,var_4287,])
func_4294 = relay.Function([var_4287,], output)
mod['func_4294'] = func_4294
mod = relay.transform.InferType()(mod)
mutated_mod['func_4294'] = func_4294
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4295 = relay.var("var_4295", dtype = "float64", shape = (616,))#candidate|4295|(616,)|var|float64
func_4294_call = mutated_mod.get_global_var('func_4294')
call_4296 = func_4294_call(var_4295)
output = call_4296
func_4297 = relay.Function([var_4295], output)
mutated_mod['func_4297'] = func_4297
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3216_call = mod.get_global_var('func_3216')
func_3218_call = mutated_mod.get_global_var('func_3218')
call_4366 = relay.TupleGetItem(func_3216_call(), 1)
call_4367 = relay.TupleGetItem(func_3218_call(), 1)
func_3026_call = mod.get_global_var('func_3026')
func_3030_call = mutated_mod.get_global_var('func_3030')
const_4370 = relay.const([1.077350,-1.047594,-3.945524,5.103662,-2.727451,5.062032,-2.748558,4.219384,0.303989,-9.564520,-6.373153,-2.889122,4.175763,-8.845393,-2.656464,-8.788540,-4.738836,-2.335854,-3.257633,-4.373425,2.024540,-1.077303,5.063497,0.418267,8.491811,6.884886,1.395002,9.956614,-7.481308,3.735051,-2.000014,-0.278957,-1.764150,3.783443,-0.001421,-6.650662,8.467954,3.198362,-3.942956,6.874633,5.126864,8.368775,8.821001,7.290783,4.839114,-4.005621,2.879077,-8.212080,2.465957,-5.391132,-8.026903,9.300875,3.000869,-0.970658,-5.076240,5.750638,-8.862218,-8.417038,9.750190,3.423776,4.522716,-5.040839,-6.062888,-2.160030,-3.246374,2.771157,7.047024,4.226301,-1.444045,5.669707,2.960893,-1.219247,4.278476,1.868911,-2.945352,2.025028,2.360053,-0.712244,1.207792,3.056221,2.684184,-1.350595,-0.145660,-3.385150,7.561669,7.489064,-9.592257,6.136387,-7.312916,3.474619,2.536248,-5.367985,-7.727657,2.506694,-3.368456,-4.645650,3.879908,-5.683767,-3.238017,-0.638988,-2.406516,-5.763688,6.862746,9.614247,4.046828,7.622741,2.852644,2.723633,-9.235486,6.125006,0.014636,2.057354,-8.426015,-4.489388,-4.351521,9.658926,-7.067258,3.980193,4.877307,-2.655454,1.971155,6.115150,3.204205,8.154578,2.379197,-3.572893,-5.723507,-4.842446,-1.689038,6.938584,6.406677,0.314034,-5.984169,-3.215233,3.701672,-9.341320,-5.410905,-7.056921,-1.810444,9.095073,-4.103814,0.739631,8.066608,-4.382719,-1.050962,-0.143798,-5.497028,-6.600618,9.155913,-0.218315,9.341512,2.318040,-5.680078,7.235894,6.567782,7.902197,1.694010,-1.448307,-7.338766,-4.428067,-1.152782,-3.433913,-7.791574,-4.283230,2.641460,8.896965,2.384551,-7.653458,-0.705462,6.313522,0.065265,6.350766,8.442341,8.530332,-0.576073,-2.972541,6.572556,8.009188,6.168595,9.350388,-0.790217,2.458375,9.547236,-1.594730,-7.460176,-5.640332,-1.669148,-0.440102,7.359783,1.900773,8.314613,6.714961,-2.856999,-5.468434,-6.754793,2.703690,-6.208226,-4.437606,-5.897034,3.896911,-8.810959,-1.587112,-6.728793,-2.613478,0.300172,1.097781,-4.343010,0.010059,-2.531884,-8.888448,2.118176,8.440992,0.487851,1.971433,-7.038226,-3.917515,-0.547574,6.010308,9.540779,2.880423,0.738127,2.010050,8.502897,8.648235,-5.047033,-4.502063,1.471195,-1.996878,5.861835,-3.383145,-1.397085,2.564302,-9.905673,3.616209,-6.767866,-3.376044,-9.217938,1.451575,-6.369819,3.894089,9.138717,-2.512816,2.749876,1.501703,-7.302308,2.814107,-5.463782,-5.752658,2.136071,-1.986280,-9.385339,-7.657073,-9.205468,-5.014947,-1.505100,1.755634,7.794368,-7.165373,-1.078577,1.224510,7.269930,-5.500437,5.214728,-1.475346,-6.184639,2.971771,8.697689,4.760461,4.654251,-4.935237,9.335406,7.098281,6.261571,-9.835381,9.702546,3.679451,-9.466368,-1.681166,-6.139230,-2.604728,8.165479,5.549157,0.280142,-9.120682,-3.112852,-3.801541,2.534842,-1.830900,1.168616,-8.777145,-1.503854,-7.904058,2.767423,1.831539,2.847777,1.069835,7.463131,-2.303540,8.095928,9.674295,1.703188,-7.284592,-6.827664,-6.496790,1.168007,-6.509248,-3.273003,-5.198421,-9.251040,6.754471,0.914697,-2.857364,3.312083,-6.109078,-3.076264,-4.343155,2.183471,-3.834322,7.812730,-8.021903,6.068018,-4.786457,5.572955,-4.537373,-5.544511,5.440124,-3.604294,-4.416269,-3.815052,-2.161198,8.732323,6.561447,4.989293,-2.792754,-7.693091,4.045490,1.840908,4.595567,-9.932283,-6.199413,5.798078,5.488736,-7.908264,3.063068,-0.553984,1.311726,-1.077590,-3.311781,-5.078741,-6.448462,3.760523,-5.464181,9.428102,8.171257,7.267960,6.284264,-6.568803,-6.296452,-5.002839,8.741139,-4.989412,-1.985731,0.033860,-4.202445,1.008692,-4.817859,5.256984,-7.487235,-4.970863,-9.892329,3.881357,-1.675637,-5.196010,-8.384610,-5.338008,4.099456,-8.626940,8.371111,0.213044,4.155525,-1.274847,3.486111,6.525455,3.781890,-9.916028,1.333714,0.333904,4.608861,5.564451,-1.022073,2.366950,-7.389593,-3.950603,-2.300634,0.619684,-7.922560,9.902646,5.993843,3.595487,5.490856,8.207764,-2.419048,-0.019966,-4.100178,0.345673,-8.464581,2.810549,3.054496,-9.804476,4.644723,6.099053,-5.956147,5.095752,4.864531,-8.205500,-0.728913,-0.099327,-5.674183,-2.246083,-5.444349,9.163436,7.475473,4.331099,-9.577768,-7.365843,7.240616,-3.312638,-7.992107,-0.259863,-5.628654,-4.639591,-8.455901,5.386239,-7.510175,2.016036,-3.012123,2.212098,1.888747,-9.453655,-2.970123,3.978481,-4.927314,9.105168,-5.592151,6.915459,-6.221933,7.588679,-0.410834,2.468546,2.194524,0.948941,-5.040781,4.174419,0.788695,5.405917,-5.084971,3.901834,-6.726952,2.723382,-9.583608,-8.674058,7.373849,1.598753,-7.775838,-0.712720,-7.564938,1.564965,-3.399518,-7.438689,-1.389327,7.924590,0.620793,-4.633013,-9.623597,-1.284435,-5.911694,4.482251,-8.908792,7.816157,-3.702072,-4.837109,9.028236,0.854480,-5.639483,5.192126,1.381638,6.110354,5.306521,4.461397,-2.254059,7.343818,-9.929868,-6.726862,7.993328,7.596277,8.950515,-9.766990,-4.949405,-8.366412,-8.742518,2.220500,-9.270457,-1.119857,-7.161243,0.582285,7.622132,0.160044,-5.611860,-1.697479,0.853892,6.506568,-0.774720,1.394948,5.378673,2.282480,4.409380,3.050447,-4.067367,-2.160681,1.605525,8.447495,-7.814476,-3.886318,-3.356440,-5.418833,8.889470,-9.159542,-7.492185,-7.033370,6.639182,2.290551,-0.749302,-1.117370,-8.656853,-6.486735,9.077815,-8.727282,-7.556438,-6.813910,9.375082,5.528856,-9.726800,-0.604816,5.439742,-7.990245,5.639450,-3.273047,-0.342187,-0.948523,1.010506,9.479918,-1.319334,-0.980052,-6.906890,4.969946,2.033601,-7.310695,-6.315326,-1.162936,5.835599,-9.277608,-8.335777,8.500893,1.847341,4.505705,-4.680574,5.801900,-6.286146,6.294449,-9.235219,7.334176,1.594917,5.375731,-3.745649,-3.982185,-5.577268,-2.416175,7.893956,-4.638140,6.026570,7.014097,-2.750795,-4.227990,-1.940578,0.093539,-9.227441,-1.825071,3.671930,8.188855,-6.906307,4.371065,-9.245066,3.451988,6.328201,3.835620,-5.242499,-7.861464,4.817722,4.205210,0.541666,6.437568,5.367711,0.781009,1.412716,0.315950,-3.958703,0.378640,-9.205182,-7.822032,-8.395872,1.534960,-1.897204,0.088975,-0.907244,9.829079,8.875817,-7.499220,0.320312,8.503588,-8.814698,-5.932874,-5.081852,-4.987634,-5.915003,-0.949628,-7.619814,0.775162,-6.013914,-5.747168,-4.060727,-3.943834,-3.714933,-8.280134,-4.575477,8.352184,-4.574737,-4.405230,3.092798,-3.991791,8.380860,-1.470279,-8.526404,9.023672,-6.490874,2.710141,3.887024,-6.419436,-5.666335,3.166839,6.286384,-3.048392,-9.691349,-4.413927,4.387275,-4.715093,2.972016,-4.055878,-1.639040,-6.786058,3.926570,8.158373,6.810772,0.191329,9.368378,0.219519,5.294997,-5.712878,-0.245018,4.975349,1.490003,-4.709528,-5.957937,-0.455449,-5.714721,6.407787,1.366639,0.942258,-7.101138,-6.446186,3.672680,-0.447392,3.758995,0.348297,2.626360,8.878689,-4.316663,-4.270974,-0.216303,3.720108,2.528601,2.207360,-6.211429,-7.516947,4.974296,-6.771111,-2.338719,9.609734,1.247122,2.607167,5.750754,-1.952296,-8.054830,-1.249499,7.432915,-5.343320,-8.232768,4.644939,-6.473654,9.093583,0.038965,-2.411050,7.229361,6.581866,-9.977639,1.670234,-6.006312,7.989266,-1.174566,6.205263,-0.595392,4.238543,7.782740,3.033745,-8.781220,1.593451,-0.220286,4.104621,6.828954,-7.148708,3.464838,0.591550,6.035828,-0.834610,-1.936427,-9.327331,5.554911,3.410983,-1.754244,-0.754757,-5.421725,-5.489321,-1.489670,-9.009800,1.676991,2.782529,-3.122483,-3.241521,-4.020750,-0.710911,-3.062165,3.466289,-6.313512,6.763884,9.943823,1.562624,4.545542,-1.481901,7.462268,-2.007012,3.916143,4.063046,-1.129591,-3.746601,-3.208400,-5.612987,7.457398,7.656804,-5.444271,-6.536014,-9.892664], dtype = "float64")#candidate|4370|(770,)|const|float64
const_4371 = relay.const([[-9.746792,-3.047865,-4.256417,-0.785377],[2.815177,7.906371,9.065969,-1.129405],[5.485240,-5.328893,-0.023357,6.203452],[-6.501640,8.293724,-8.668833,-6.399048],[-3.734038,-8.806044,-6.537955,2.332955],[0.988498,1.836434,-5.892494,9.717395],[1.034352,-7.650093,8.390539,6.996511],[-7.320963,-6.675099,0.610144,-5.638185],[3.446700,-3.039094,4.338981,2.890406]], dtype = "float64")#candidate|4371|(9, 4)|const|float64
var_4372 = relay.var("var_4372", dtype = "bool", shape = (1260,))#candidate|4372|(1260,)|var|bool
call_4369 = relay.TupleGetItem(func_3026_call(relay.reshape(const_4370.astype('float64'), [14, 11, 5]), relay.reshape(const_4371.astype('float64'), [18, 2]), relay.reshape(var_4372.astype('bool'), [1260,]), ), 2)
call_4373 = relay.TupleGetItem(func_3030_call(relay.reshape(const_4370.astype('float64'), [14, 11, 5]), relay.reshape(const_4371.astype('float64'), [18, 2]), relay.reshape(var_4372.astype('bool'), [1260,]), ), 2)
func_3260_call = mod.get_global_var('func_3260')
func_3262_call = mutated_mod.get_global_var('func_3262')
call_4380 = relay.TupleGetItem(func_3260_call(), 0)
call_4381 = relay.TupleGetItem(func_3262_call(), 0)
func_3654_call = mod.get_global_var('func_3654')
func_3662_call = mutated_mod.get_global_var('func_3662')
const_4415 = relay.const([1,-10,7,-4,5,5,7,-3,7,3,-1,5,2,-7,7,9,5,4,-9,-2,-8,-8,-8,-10,-4,-4,3,-10,-5,9,8,-7,9,-6,10,3,-6,-2,3,-9,4,-1,5,1,10,-2,-8,-1,2,5,5,9,10,-6,-3,1,-10,-6,6,5,-7,-4,7,2,-3,3,-7,-1,-6,-2,-2,10,-5,-7,2,-7,-8,-4,6,-8,4,-9,6,8,5,-2,-2,8,-7,-10,-6,9,-10,3,-10,-5,2,5,-1,9,2,-4,-6,-4,9,3,1,-3,5,-6,-7,-9,-4,9,7,3,3,-8,2,-1,5,8,6,-8,-9,7,-5,7,3,7,5,-3,-9,-7,-2,2,2,3,3,-10,6,-10,-8,-2,-4,2,1,10,-8,-9,-3,6,-4,3,10,10,3,-9,-9,-1,-2,-4,10,-2,-9,9,-5,9,-3,7,-8,-3,8,-1,5,-10,6,-1,-8,-5,8,-2,8,-2,-6,8,7,6,-3,2,10,4,-6,4,-10,2,4,10,-5,-5,-1,-6,4,4,2,3,8,10,2,9,-3,-9,6,9,2,-4,-6,-3,-6,-8,-3,-10,6,-4,-2,-10,5,-3,9,-2,-7,7,-9,-6,9,1,2,-4,1,-9,-2,-9,-10,-6,4,3,-4,-5,-3,8,-2,6,2,4,-10,6,4,9,-8,7,2,-3,10,-1,-8,7,-10,8,6,5,7,-8,-9,-6,-1,-8,3,-1,-1,8,-1,-3,-1,-3,3,3,-9,10,7,4,-1,10,6,-8,4,-8,2,-8,-10,-2,-8,2,5,5,10,-7,-2,6,10,4,-10,3,-2,9,-9,-7,-5,4,1,-9,9,-5,-4,-8,2,10,-4,6,-3,10,-5,1,-5,7,4,-8,-3,-3,-1,1,5,-7,-6,7,-1,3,1,5,9,-2,9,8,-5,9,4,-1,-3,7,5,-1,10,-2,10,-9,-1,-3,-2,-2,-4,5,1,8,-6,3,1,-8,10,4,-9,-10,-5,-1,-6,6,-4,-1,-8,-6,5,8,7,-9,-7,-6,7,7,1,-10,10,10,-10,-6,-9,3,-4,-2,-8,-8,5,1,2,-5,-5,3,-3,-7,3,1,6,7,-6,10,1,1,4,9,2,-10,-9,10,7,4,9,-3,1,4,3,3,2,2,-8,3,-3,4,-7,5,-2,-3,4,5,-7,5,4,6,2,3,6,-9,-8,-2,-7,-6,-8,9,6,9,6,-5,-10,8,6,-1,7,5,4,10,-6,10,9,6,-7,9,7,-6,5,-10,-7,-7,-2,2,2,7,2,2,1,7,2,-3,-1,7,-5,9,9,-8,10,7,6,10,1,9,1,-10,-3,-4,-2,-2,-10,-8,-9,-10,-8,9,-8,10,-2,-3,-7,5,-8,6,-4,8,9,4,4,-7,8,-6,6,10,-7,10,-10,5,6,1,-10,-5,-8,-9,1,-5,-3,-9,-7,6,6,9,10,5,3,-5,4,4,-9,4,-8,-2,2,-9,-2,2,-8,3,4,4,-3,-2,1,1,-8,1,-6,8,-4,-4,1,-6,8,9,-7,-9,5,9,7,7,5,-5,1,-6,10,1,7,-2,-7,6,5,-6,9,6,5,5,-1,8,2,7,5,5,5,8,-8,10,2,-6,1,-8,7,-6,-4,8,-8,7,-5,7,10,4,10,3,-9,-2,3,9,-5,-8,-7,4,3,1,4,8,1,-3,-5,4,7,6,-8,-2,10,-2,6,4,-7,-7,-3,6,6,-7,-8,-7,-7,-7,-10,7,-8,-6,-7,6,-5,7,-6,6,-4,5,3,9,8,6,6,7,4,-10,4,-5,7,-1,-4,-6,-9,2,-4,-2,8,10,3,2,3,-6,-8,-7,2,-9,-4,-7,-10,5,-10,6,-6,6,8,-5,-9,-7,4,1,4,4,-9,-1,10,2,-4,1,-9,-9,4,5,7,-8,5,-8,-1,9,5,-8,-7,-6,9,2,6,-2,-5,2,8,-2,-1,-4,-3,4,-4,-3,-1,3,-8,-9,-6,5,-9,-3,8,1,-6,-6,9,-8,-2,-5,4,4,-5,-6,-5,4,9,10,3,-9,-10,9,-2,-4,10,9,1,7,8,9,-6,7,2,-1,3,-3,4,2,-1,-2,10,-6,-5,-7,6,-6,10,-8,-3,7,-10,6,-4,-9,9,-9,-5,9,8,4,-3,8,6,-8,-6,4,7,7,-10,-8,2,-7,-2,6,2,6,2,1,-2,4,3,-2,-10,2,9,-1,7,7,-4,-9,-5,-4,-3,-5,-3,2,9,-8,7,8,-2,-7,5,-10,9,7,-6,-10,-5,3,4,-4,9,9,-4,2,-4,-4,-4,-1,-4,6,-9,-1,3,-2,7,-9,10,4,7,-9,-6,-1,9,-3,10,5,8,-4,7,-8,-2,5,-7,5,5,-4,-8,1,-8,-10,-4,10,2,2,9,-6,-7,2,-9,7,-2,-7,7,-6,10,5,-3,-5,8,6,9,10,-4,1,1,9,8,-2,4,8,-5,8,-8,5,-4,5,3,-9,-8,-10,6,-2,7,-7,-3,-7,-10,8,-9,3,-2,-7,2,1,4,-10,-5,7,8,5,1,-10,6,-6,-1,-8,-7,-9,1,-10,-5,9,3,-2,-2,-2,8,3,-2,-8,-9,-7,3,5,7,-1,6,-4,6,9,4,2,-5,-3,5,7,10,-2,9,-7,3,-1,-9,-9,1,-4,9,-7,10,-1,-3,-1,-2,6,-2,-10,-2,-5,5,8,2,-3,8,7,-9,-5,7,-5,-8,-10,3,-5,-2,10,4,5,1,-7,7,-9,2,-1,9,-6,5,7,-10,7,-5,-1,-4,-5,6,4,-7,2,-4,-8,8,-1], dtype = "uint64")#candidate|4415|(1080,)|const|uint64
var_4416 = relay.var("var_4416", dtype = "uint64", shape = (1092,))#candidate|4416|(1092,)|var|uint64
const_4417 = relay.const([4.016327,6.249097,1.087585,-0.477595,-0.945703,-4.701471,6.479305,5.816296,-5.946968,-6.868428,-2.033193,-7.027608,1.173032,-9.818570,4.914619,-2.745715,3.104150,6.064677,9.705832,-2.470877,-0.848244,-0.748698,-4.298599,0.022675,5.369448,6.677759,-4.162934,-6.995209,3.853237,-1.897438,-0.816600,2.428810,-7.759509,-2.254720,-0.095225,6.845412,5.390709,-5.642807,2.778939,6.436095,-7.789054,1.734352,-6.434406,-5.817673,-3.971428,-2.751631,-9.258842,2.899812,-6.069010,-4.526929,-7.765730,-3.318134,-2.878134,8.789831,-5.933083,-6.765905,-7.703276,7.572876,1.237000,-9.559864,-5.366498,-5.086740,0.726742,4.622563,1.467659,-3.221473,-1.688567,5.234678,-6.872001,-2.483026,4.810684,3.511485,-8.783932,8.552680,-9.541348,-0.624417,-3.958566,4.751049,-5.409196,-7.039275,6.110991,4.597301,0.184539,-4.168926,-5.744032,-3.430299,7.222873,0.406391,-1.104426,7.046502,-0.109316,1.817923,-1.802519,-2.500553,4.689175,-9.595422,-1.434227,-2.480742,-5.642330,2.167253,-6.897590,5.742693,6.038263,9.140976,2.734235,-1.182547,-8.230784,-8.186008,2.838025,7.395410,9.212153,3.250546,-2.478088,0.892671,-8.120331,9.700727,-4.794881,-0.507953,8.199303,3.339403,-0.176647,-0.296394,5.945952,4.817663,-1.904620,-7.981354,-1.077077,3.786668,0.443060,8.502349,9.758994,-3.023489,4.077864,5.735182,5.714132,4.144612,-6.403515,-4.283763,9.268535,-1.156925,5.749136,8.975803,-0.717801,-2.325420,-2.939697,3.813617,-2.290685,2.732721,-2.100870,-4.347041,-4.552866,1.146109,5.231514,-0.376275,5.197067,-1.019647,6.137449,-4.397634,-2.443202,-0.533828,7.404279,-3.269247,5.570225,4.366064,-8.694840,3.679433,-5.811439,-1.934951,2.211927,-5.289367,7.868238,0.479417,-9.183451,0.742426,-8.648974,5.462417,3.866494,9.319799,-9.164085,6.647103,-5.379190,0.856504,3.871107,-5.390630,-6.613505,-6.140995,-2.046058,9.092823,9.319567,0.860833,-5.296946,2.799970,8.351742,-9.464586,-8.167210,-1.372815,4.950859,4.927002,1.507953,3.025428,-2.714787,-9.506496,3.761128,1.291780,-2.493695,-1.176534,-5.764990,-2.107420,-1.056079,6.149025,-3.826681,0.329468,2.766057,3.671677,-3.263886,-4.177695,-9.990864,1.112675,-2.273467,-7.246776,-3.875176,7.383742,5.851654,-6.055608,4.195520,-3.217291,4.211631,8.986857,-1.784614,-1.966403,0.812213,7.806955,8.568352,3.011371,1.724638,-6.252015,-7.953663,-9.798203,8.146223,7.473322,-9.002442,5.279012,6.514740,-2.071149,9.714359,-1.295366,-7.814633,-6.724523,3.233432,9.379030,9.247678,-9.320512,-6.007882,6.837489,3.348673,-9.894769,-9.352641,0.878772,-7.783507,4.135580,-0.357499,-2.506968,5.622826,-5.990450,-7.540821,-5.728959,5.820924,7.664671,4.606248,-1.602549,0.962877,6.454300,-2.043592,1.548734,-9.911758,-6.166544,-1.300415,3.087275,6.156695,-6.395862,-0.990929,8.550528,5.255053,0.890376,-0.387173,2.486947,-9.112142,7.597673,-5.772125,4.069840,-8.420194,4.338350,-4.943622,-5.505046,5.273937,1.358033,1.947809,6.199719,8.289423,-6.153938,-9.519986,6.882962,-1.953854,2.051453,0.087263,2.855135,-9.433746,-4.186666,-5.564401,-1.578224,-6.662313,4.500569,0.019109,-5.920170,9.292616,-8.858115,1.796759,-1.094539,-4.007241,-3.845907,-6.285308,3.766590,-4.368411,2.798163,4.534049,-6.759722,7.197331,9.367326,2.783639,7.663414,-8.361930,-1.231172,2.495184,5.505526,4.144378,2.970864,-9.246381,-9.958022,-9.044156,3.858735,-2.251869,5.176165,2.659560,-2.495235,5.751644,7.927526,2.429512,2.639539,-6.874135,-0.810175,-6.335091,4.346663,8.242289,2.547281,9.017398,8.267205,6.138278,2.167271,7.053659,4.569269,8.492191,5.591332,-9.441173,7.800496,4.274617,-0.281086,6.040002,-4.949958,-1.146013,-3.970911,-7.628391,3.398189,5.502213,-1.397391,-3.759350,5.339463,-9.942538,-6.555159,5.135110,6.879557,0.963311,-7.196927,3.858212,1.120174,-2.430585,8.600049,3.436700,-7.908356,8.092621,-1.905299,-0.426759,8.413423,-3.944789,-9.679108,7.835611,-7.994535,4.739464,1.202636,-0.306794,-8.466159,2.064326,8.903639,-3.393439,3.033534,1.183821,5.479372,4.246715,-8.559577,-9.266083,2.307249,4.057371,3.558993,-5.928416,8.652301,4.721895,8.680584,-8.325558,-7.392623,8.363224,-0.252793,4.617864,-1.186576,7.101939,-0.150824,7.377649,0.305525,0.077198,-7.102108,-1.853444,-2.180229,4.589325,-2.324540], dtype = "float32")#candidate|4417|(432,)|const|float32
const_4418 = relay.const([2,-7,4,-6,3,7,-1,10,-5,3,7,-2,6,7,8,3,7,2,9,8,-9,8,3,-4,-9,8,8,-8,3,-10,-3,-10,2,4,1,3,-9,10,1,10,-8,7,2,10,3,8,-2,-10,10,8,-6,-1,-4,-8,-2,6,-1,-8,10,-10,-8,1,-5,-6,7,-6,7,-9,-6,-9,-7,10,7,1,-6,2,-9,5,6,-1,-7,5,4,-6,-2,1,-9,-9,9,-4,1,10,-9,-6,-6,9,3,7,7,-10,-6,10,1,2,1,6,3,4,9,-10,-6,-8,10,-8,9,-8,8,10,9,-1,1,-2,1,10,-5,-7,-7,10,10,-6,8,4,6,-7,-8,-5,8,-5,3,-1,6,-7,-2,-10,-9,-1,-4,4,9,-3,2,7,-5,-10,-10,5,8,-8,-3,5,9,-8,9,1,3,-6,-3,-6,-9,-7,7,6,-7,8,-7,1,-6,-8,-3,4,4,3,-5,8,-3,-3,-10,-6,5,7,6,7,1,9,-4,-9,3,8,1,1,2,4,3,8,-5,-2,-7,5,4,-1,8,-9,-4,-8,2,10,-3,5,-4,8,2,-2,-8,-6,-10,-3,10,9,8,10,-7,5,5,-8,6,10,-5,-6,9,7,10,-8,-3,-6,-4,-4,-7,1,-2,-4,-4,-4,-7,1,-4,-5,-2,7,-10,10,-9,5,5,1,6,4,10,-10,-10,-2,3,1,2,1,-10,6,-7,-7,-10,10,4,7,-5,10,7,-2,-3,6,-8,7,-9,-7,-5,-1,-5,-10,-4,-2,1,-4,5,-1,-6,4,-5,2,-4,-2,-3,2,3,-6,9,8,9,-10,-10,3,-9,2,7,-10,2,10,5,5,3,7,-7,-2,6,3,5,2,4,-10,9,-4,1,6,5,8,-3,10,9,-8,-7,3,-10,8,10,-7,-7,9,2,-8,9,4,10,-1,7,-5,2,-6,2,6,-1,2,3,-6,7,1,9,-7,1,-7,9,5,-10,4,5,6,5,4,9,5,5,1,3,-2,-8,-5,10,10,10,-2,6,-1,-5,-8,-6,-10,9,4,3,-8,-4,10,10,-2,4,5,1,10,10,10,-1,6,2,-3,5,-6,4,-1,-5,-7,6,-8,8,2,-8,-4,1,-2,-10,-9,-6,-4,-2,7,7,-8,-3,-7,-6,1,-1,4,6,8,1,-1,-4,-9,9,6,9,-6,-10,-5,3,-10,-2,-8,-2,-4,-4,2,-9,8,7,3,-8,10,5,-4,-1,5,-1,-10,9,-8,1,5,-10,-10,-7,-5,-4,-2,-10,7,5,5,-5,10,10,-9,5,1,-6,-4,-3,-7,4,4,-8,-7,3,8,6,-3,4,-7,5,6,-8,6,1,-8,5,-1,3,5,-10,5,2,4,8,-7,-1,8,-7,-1,-8,-5,1,5,6,1,4,1,3,-2,-7,6,5,-7,10,1,9,10,-4,5,4,3,3,2,1,7,-6,-8,-8,-3,5,6,-10,3,9,1,5,1,-9,-3,10,10,4,-7,5,1,-2,3,1,-3,5,6,-9,9,2,8,-2,8,-6,-8,-2,10,-6,-7,8,-9,-5,2,-2,2,3,-7,-8,-10,-9,7,9,-7,-2,-2,-6,1,4,5,-4,-1,7,-1,3,3,-2,-3,-10,6,7,-10,6,4,7,-9,6,-10,-10,-8,-4,4,1,-9,-10,-3,-10,9,8,-8,-3,-8,7,-2,10,-9,-10,2,-2,4,-5,-8,2,3,-3,7,-9,6,4,4,-7,8,-6,9,-3,-10,10,5,9,1,10,9,2,7,3,-10,4,6,-10,10,7,-2,-9,-6,5,-10,5,6,5,3,-3,-6,3,-9,-8,6,8,-2,-7,3,8,-8,-5,10,8,-7,8,-9,7,2,6,1,-8,-9,1,-8,9,2,2,1,-7,10,2,-6,9,6,-10,9,10,-4,2,-10,7,3,5,-9,4,10,1,7,-6,5,-10,3,-2,2,8,-7,3,-4,5,5,-3,7,2,5,-9,-5,5,-10,6,3,4,-9,-1,9,6,-7,-8,-4,10,-2,2,-9,-7,5,1,-7,9,3,-1,-6,-6,-8,5,9,-3,-4,8,1,-2,-9,6,9,-4,-5,-5,-3,-2,-7,5,4,-7,-3,2,10,-2,-7,9,-6,-8,-9,10,6,-7,2,-1,1,5,-4,-10,8,-5,2,1,-6,-7,-2,9,2,10,-7,8,-10,-4,9,9,7,4,-8,5,4,1,2,3,-7,8,6,3,-1,8,-2,9,3,-7,8,6,-8,7,8,-6,3,-2,1,4,-4,-4,-1,4,-8,-4,-6,10,7,6,7,2,-5,10,-2,10,9,10,8,-6,6,-5,-10,8,4,3,-5,5,1,-8,2,-7,-5,-2,5,-1,8,5,5,-3,7,-2,3,2,5,-7,9,7,-4,-7,7,-10,-6,-2,8,9,3,8,1,2,-2,-10,-4,5,5,5,-1,-6,-1,7,-4,-9,-10,-5,-6,6,5,-9,2,-4,-5,9,-7,-3,3,-2,-8,4,-5,-8,5,1,1,-8,1,10,-5,1,5,-10,4,3,-2,-2,7,10,-6,-1,-10,-10,3,8,-10,-7,3,-3,-1,10,5,-10,2,2,2,4,4,-2,5,-2,9,10,-9,10,9,-5,2,7,-7,1,-4,-1,9,3,1,9,-7,1,-1,-9,-1,-7,10,-6,-2,-8,3,5,3,8,-5,6,-7,9,-8,-2,-1,-1,-10,-1,5,9,1,4,3,-9,-2,-10,2,8,-8,-10,-9,3,7,4,-5,3,-8,-1,-10,1,7,-10,-3,-10,1,1,10,-1,-9,-10,9,-2,2,-10,-4,-6,-2,-2,9,7,2,1,-3,-1,-1,-9,-6,-9,-4,3,-2,9,-7,1,2,5,-8,-8,-1,5,9,2,7,-6,-2,9,9,-8,-10,10,6,8,2,-5,2,-4,-6,-10,8,3,6,2,1,-2,8,3,-7,-8,-4,3,4,8,-4,2,4,-1,-7,-8,4,7,1,-6,10,9,-8,9,10,2,8,5,1,-4,1,-7,9,-9,-6,9,10,10,-10,9,-8,1,7,8,6,-6,-4,-3,9,-5,8,10,2,7,-9,-2,-9,5,-3,-4,4,5,3,3,2,6,2,10,-8,-7,-3,-5,4,-8,2,-5,2,-6,-7,-6,7,-7,-9,-4,-3,-5,-10,9,-10,-2,-9,-3,-4,-5,-10,-10,-4,-5,-5,2,-9,-4,-9,6,2,-4,-4,1,5,-1,-8,9,9,8,4,1,9,4,-8,7,-8,-10,-5,-10,-8,3,-3,9,10,-3,-9,8,10,6,-2,-10,4,-3,-3,-1,-6,-9,9,-1,7,-3,-10,6,3,-10,5,-7,1,9,-5,-5,5,1,1,-4,8,5,-10,-8,3,10,-9,8,-7,4,-9,2,-10,-1,7,-1,5,-2,9,10,1,1,-4,-10,9,-2,10,4,9,2,1,10,9,2,4,-1,1,5,-2,6,-8,10,4,-9,-9,10,4,9,4,3,-3,-4,-6,-10,3,-10,6,-8,-5,-5,8,6,7,-7,-7,10,-7,-6,5,-3,-4,1,4,10,6,4,9,8,-3,9,-5,2,5,-5,6,9,1,-7,9,4,1,1,-8,-7,4,-3,-5,1,4,10,-3], dtype = "int16")#candidate|4418|(1386,)|const|int16
call_4414 = relay.TupleGetItem(func_3654_call(relay.reshape(const_4415.astype('uint64'), [1080,]), relay.reshape(const_4415.astype('uint64'), [1080,]), relay.reshape(var_4416.astype('uint64'), [1092,]), relay.reshape(const_4417.astype('float32'), [432,]), relay.reshape(const_4418.astype('int16'), [154, 9]), relay.reshape(var_4372.astype('bool'), [1260,]), ), 9)
call_4419 = relay.TupleGetItem(func_3662_call(relay.reshape(const_4415.astype('uint64'), [1080,]), relay.reshape(const_4415.astype('uint64'), [1080,]), relay.reshape(var_4416.astype('uint64'), [1092,]), relay.reshape(const_4417.astype('float32'), [432,]), relay.reshape(const_4418.astype('int16'), [154, 9]), relay.reshape(var_4372.astype('bool'), [1260,]), ), 9)
output = relay.Tuple([call_4366,call_4369,const_4370,const_4371,var_4372,call_4380,call_4414,const_4415,var_4416,const_4417,const_4418,])
output2 = relay.Tuple([call_4367,call_4373,const_4370,const_4371,var_4372,call_4381,call_4419,const_4415,var_4416,const_4417,const_4418,])
func_4430 = relay.Function([var_4372,var_4416,], output)
mod['func_4430'] = func_4430
mod = relay.transform.InferType()(mod)
var_4431 = relay.var("var_4431", dtype = "bool", shape = (1260,))#candidate|4431|(1260,)|var|bool
var_4432 = relay.var("var_4432", dtype = "uint64", shape = (1092,))#candidate|4432|(1092,)|var|uint64
output = func_4430(var_4431,var_4432,)
func_4433 = relay.Function([var_4431,var_4432,], output)
mutated_mod['func_4433'] = func_4433
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3216_call = mod.get_global_var('func_3216')
func_3218_call = mutated_mod.get_global_var('func_3218')
call_4472 = relay.TupleGetItem(func_3216_call(), 1)
call_4473 = relay.TupleGetItem(func_3218_call(), 1)
var_4477 = relay.var("var_4477", dtype = "bool", shape = (2, 15, 6))#candidate|4477|(2, 15, 6)|var|bool
bop_4478 = relay.bitwise_and(call_4472.astype('int8'), relay.reshape(var_4477.astype('int8'), relay.shape_of(call_4472))) # shape=(2, 15, 6)
bop_4481 = relay.bitwise_and(call_4473.astype('int8'), relay.reshape(var_4477.astype('int8'), relay.shape_of(call_4473))) # shape=(2, 15, 6)
output = relay.Tuple([bop_4478,])
output2 = relay.Tuple([bop_4481,])
func_4483 = relay.Function([var_4477,], output)
mod['func_4483'] = func_4483
mod = relay.transform.InferType()(mod)
var_4484 = relay.var("var_4484", dtype = "bool", shape = (2, 15, 6))#candidate|4484|(2, 15, 6)|var|bool
output = func_4483(var_4484)
func_4485 = relay.Function([var_4484], output)
mutated_mod['func_4485'] = func_4485
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3260_call = mod.get_global_var('func_3260')
func_3262_call = mutated_mod.get_global_var('func_3262')
call_4559 = relay.TupleGetItem(func_3260_call(), 0)
call_4560 = relay.TupleGetItem(func_3262_call(), 0)
func_4483_call = mod.get_global_var('func_4483')
func_4485_call = mutated_mod.get_global_var('func_4485')
const_4564 = relay.const([True,False,True,True,True,True,True,False,True,False,False,True,True,True,True,True,True,False,True,False,False,False,False,False,True,True,True,False,False,True,False,True,True,False,True,True,True,False,True,True,False,False,False,True,True,True,True,False,True,False,True,True,False,True,True,True,False,False,True,False,False,False,False,True,False,True,False,True,True,False,False,True,False,False,False,True,True,True,True,False,True,False,True,True,True,False,False,True,True,False,False,True,False,False,False,False,True,True,True,False,True,False,True,True,False,True,False,False,True,True,False,False,False,False,False,True,False,False,True,True,False,True,False,False,True,True,False,False,False,False,False,True,False,True,False,False,False,False,False,True,True,True,False,True,True,False,True,True,False,False,True,True,True,True,True,False,False,False,False,False,False,False,True,False,True,True,False,True,True,True,True,True,False,True,False,True,True,True,False,True], dtype = "bool")#candidate|4564|(180,)|const|bool
call_4563 = relay.TupleGetItem(func_4483_call(relay.reshape(const_4564.astype('bool'), [2, 15, 6])), 0)
call_4565 = relay.TupleGetItem(func_4485_call(relay.reshape(const_4564.astype('bool'), [2, 15, 6])), 0)
func_4294_call = mod.get_global_var('func_4294')
func_4297_call = mutated_mod.get_global_var('func_4297')
const_4567 = relay.const([[1.358650,-9.331554,4.081786,3.773569,9.146021,5.596552,6.809382,-2.242806,8.014917,-2.676409,-1.899423,1.354627,-5.276450,4.871432,-9.591931,2.587317,-9.129794,-9.855351,-8.648679,0.753811,3.198555,1.112242,-5.060398,-1.026815,-3.825609,-8.525303,7.468117,9.412586,-3.084750,-1.006036,6.098413,3.217217,-0.545333,1.343435,4.506955,-4.414137,0.654294,-1.093954,6.697109,0.949767,7.176936,-5.227630,6.244153,-9.336051],[3.431383,0.948033,-5.146467,-9.499965,-9.545658,0.921430,-0.335102,6.206981,6.382193,-7.913267,-7.436597,8.470880,6.548198,-5.851782,5.498426,-0.266386,-6.605125,2.765097,-4.881472,1.450994,1.738630,4.025237,-2.132123,7.423228,-4.064223,-2.184588,3.210759,-7.009593,-5.193088,7.775833,-7.401166,-5.903636,7.746394,1.035145,4.222131,9.895342,-2.926012,2.319090,3.645492,-0.907206,-4.796235,-8.069857,-2.565610,-5.532874],[8.761876,-6.781660,2.867419,-4.564769,-7.580263,9.544803,-1.947592,-9.239467,3.857335,6.358912,-5.618798,-0.138994,3.678572,-4.359701,8.844082,-5.325900,4.295210,-2.424849,5.158829,7.979656,2.211418,1.730553,2.209099,-3.510721,5.646799,8.160191,1.742678,-6.122780,-4.940542,8.222584,2.456614,8.563437,-1.461474,-2.937530,-4.786032,-0.210562,-9.068396,-1.104129,5.550772,-1.055288,-8.622670,3.147596,9.687137,-7.850124],[-6.948031,4.085455,5.069865,-5.451618,1.786289,8.485792,9.042263,3.046827,-0.764150,5.858564,-4.853606,-9.188233,-2.001194,-4.056106,-6.777184,9.096557,-5.687246,-3.580550,6.857682,-8.471100,1.454206,8.381176,3.393844,-6.008980,-4.883854,2.204062,0.283502,2.329417,9.770705,5.508840,3.545950,7.828488,-8.399484,4.290324,-5.188045,-4.852856,-3.890537,-0.601016,-3.702593,0.338173,8.500795,8.560544,-8.297245,-2.304191],[-3.786734,3.601301,-8.235347,-4.859552,5.935978,2.308734,1.089461,2.041896,5.153986,2.973662,6.823780,-6.700067,5.770223,6.752692,-8.930971,-7.134135,-7.615846,-7.120236,-9.385879,3.545979,0.455007,9.435608,-6.313066,-9.139817,5.979367,8.661931,-1.414632,4.677939,6.065921,2.043641,-2.812146,-4.121243,-7.336212,0.598274,0.985831,-5.222859,3.972282,6.770730,-2.425022,5.751268,1.063642,-6.646052,-2.197012,-3.173074],[2.547720,-0.187336,3.371205,-3.527694,4.798110,-8.221347,-2.872375,7.542970,-1.421619,9.090196,-0.599318,-0.791525,7.735792,3.853311,-4.399730,7.245655,-0.132183,8.213910,-2.214985,2.767088,-1.510035,9.635200,-2.606019,-4.722763,4.093550,9.924081,2.930410,-1.007078,0.547970,-2.765827,7.235670,0.405128,1.370614,4.499690,-1.462997,-0.055101,-4.134659,6.922740,-7.782446,6.923126,8.124013,-0.991901,5.921242,2.417396],[-1.615257,-3.127293,2.141752,9.416219,0.107354,-4.008905,2.407581,-6.199937,-2.061074,-0.804125,0.559815,2.528693,2.378631,2.402538,-6.359683,4.025795,4.638111,-6.913516,5.052742,5.634351,-0.799356,-4.218169,-2.946124,9.280413,-9.484748,-1.029510,8.243141,-3.569211,2.610423,4.289552,-5.621080,-1.454866,3.915718,-7.396715,6.780911,4.909264,3.782943,2.183288,-4.198601,5.568873,8.720819,-0.567058,4.371561,0.701572],[4.926303,-3.776368,3.842149,7.589485,3.653153,1.618715,5.071232,-9.187586,-6.051701,7.407971,-8.605618,0.813863,-9.997594,-0.928011,-8.935998,-8.620732,8.414730,0.057599,2.704085,3.221357,-4.771813,7.256154,6.096240,-5.017500,-3.245100,-6.145048,-7.037552,-6.716371,4.146585,-3.895290,-0.758841,9.407106,6.525819,-1.132501,9.088269,4.355951,-0.759723,-7.289355,-6.992547,5.187464,-1.517687,5.182148,8.137703,3.003089],[7.850002,-1.033920,-0.784151,5.052988,-4.939886,-4.539744,8.396430,9.790867,5.629693,7.844814,-9.262278,-7.993537,-1.116399,-8.327612,8.854269,-9.061625,3.953183,-2.510691,6.310651,-7.939037,8.034821,4.377124,-8.839290,-8.501193,-6.889771,-0.035475,-5.189567,8.122452,-1.129199,-1.606490,1.045456,-9.108877,1.987889,-4.936313,-3.227867,-6.136791,-0.464341,-4.418860,-1.899616,-6.705096,-9.932719,1.590461,6.990111,7.101829],[-1.051205,4.528471,2.235577,7.095669,-5.760205,4.792323,-1.829737,-0.642636,0.605591,9.845157,3.352858,5.631814,-3.416944,-9.970188,4.598604,-3.055043,2.444830,-9.936945,2.139099,3.722867,4.540126,9.119454,-1.184445,-4.858513,-0.267613,8.383816,1.987944,-1.082401,7.528227,7.366402,-1.020440,5.693042,5.112364,-2.322684,4.712401,-3.641063,-5.763281,-3.732078,7.990654,8.398515,-4.584358,9.871765,0.950085,-0.770917],[-4.036218,4.339710,0.978981,-2.619204,-7.336479,8.135929,-3.715475,7.080008,0.302993,7.037890,-6.836324,4.226167,4.136647,0.142340,-9.713716,-5.912327,1.885383,8.902626,-3.301851,-6.973848,3.528364,-5.304862,5.914833,-8.952898,6.985047,-6.627041,-2.000839,-2.132705,-8.068414,-7.654616,7.697534,-2.211567,7.423068,5.030344,8.139467,-0.054125,-9.435185,7.970426,-6.028575,-6.617001,9.602985,-5.785005,-8.018888,-0.841318],[-5.065804,8.655009,5.779419,-4.001810,-0.336914,-7.737543,3.270755,-5.826969,5.038216,-7.599884,5.930786,2.467497,2.386882,6.084213,-4.564081,-4.212628,-8.134670,6.518878,1.904303,-4.994900,9.376177,-2.684659,-4.073225,-9.323589,-3.390692,3.292415,-7.500383,-7.440480,-7.265790,4.597108,4.049757,1.191928,-4.790927,2.716898,9.212869,0.826625,-2.290804,9.002483,-5.862610,-5.083612,-8.356366,-5.849078,-2.080247,-2.466953],[-0.232659,-0.094799,-2.613194,-0.261200,-9.234800,-7.695201,0.504318,-0.220223,9.754111,-8.751637,-6.291150,-3.212279,7.083220,5.235723,-8.789566,-6.911774,6.014952,-3.594523,8.496546,-1.085056,6.845092,6.510346,-2.979419,-1.710792,3.471950,4.362834,-6.877353,1.528822,8.528243,5.371784,-4.047792,-1.773693,-7.914786,9.708272,5.106477,6.456423,8.027973,-8.655885,0.530199,1.332366,5.234761,-8.962947,8.958624,4.750367],[-5.474895,-2.361176,4.304445,-3.983419,6.948339,4.830888,-6.546585,3.612788,7.712161,3.274966,7.593288,0.705994,-2.596537,-2.963602,4.895480,-9.134032,-3.618959,6.781326,6.473832,-4.461909,4.418041,-3.683718,-3.386591,3.988073,4.745057,-8.856126,-7.619933,9.045625,4.627140,-6.075325,-6.919016,-0.001325,3.247291,-8.653680,-6.696238,9.529142,-1.922982,1.614727,-8.191321,-5.143410,7.901136,-1.210984,-2.004839,-6.149646]], dtype = "float64")#candidate|4567|(14, 44)|const|float64
call_4566 = relay.TupleGetItem(func_4294_call(relay.reshape(const_4567.astype('float64'), [616,])), 0)
call_4568 = relay.TupleGetItem(func_4297_call(relay.reshape(const_4567.astype('float64'), [616,])), 0)
uop_4579 = relay.sin(call_4559.astype('float64')) # shape=(2, 4, 2)
uop_4581 = relay.sin(call_4560.astype('float64')) # shape=(2, 4, 2)
output = relay.Tuple([call_4563,const_4564,call_4566,const_4567,uop_4579,])
output2 = relay.Tuple([call_4565,const_4564,call_4568,const_4567,uop_4581,])
func_4600 = relay.Function([], output)
mod['func_4600'] = func_4600
mod = relay.transform.InferType()(mod)
output = func_4600()
func_4601 = relay.Function([], output)
mutated_mod['func_4601'] = func_4601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4132_call = mod.get_global_var('func_4132')
func_4134_call = mutated_mod.get_global_var('func_4134')
call_4661 = relay.TupleGetItem(func_4132_call(), 1)
call_4662 = relay.TupleGetItem(func_4134_call(), 1)
output = relay.Tuple([call_4661,])
output2 = relay.Tuple([call_4662,])
func_4669 = relay.Function([], output)
mod['func_4669'] = func_4669
mod = relay.transform.InferType()(mod)
mutated_mod['func_4669'] = func_4669
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4669_call = mutated_mod.get_global_var('func_4669')
call_4670 = func_4669_call()
output = call_4670
func_4671 = relay.Function([], output)
mutated_mod['func_4671'] = func_4671
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4680 = relay.var("var_4680", dtype = "float64", shape = (8, 13))#candidate|4680|(8, 13)|var|float64
uop_4681 = relay.asin(var_4680.astype('float64')) # shape=(8, 13)
output = uop_4681
output2 = uop_4681
func_4684 = relay.Function([var_4680,], output)
mod['func_4684'] = func_4684
mod = relay.transform.InferType()(mod)
mutated_mod['func_4684'] = func_4684
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4685 = relay.var("var_4685", dtype = "float64", shape = (8, 13))#candidate|4685|(8, 13)|var|float64
func_4684_call = mutated_mod.get_global_var('func_4684')
call_4686 = func_4684_call(var_4685)
output = call_4686
func_4687 = relay.Function([var_4685], output)
mutated_mod['func_4687'] = func_4687
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4712 = relay.var("var_4712", dtype = "int8", shape = (8, 1))#candidate|4712|(8, 1)|var|int8
var_4713 = relay.var("var_4713", dtype = "int8", shape = (8, 1))#candidate|4713|(8, 1)|var|int8
bop_4714 = relay.multiply(var_4712.astype('int8'), relay.reshape(var_4713.astype('int8'), relay.shape_of(var_4712))) # shape=(8, 1)
func_3881_call = mod.get_global_var('func_3881')
func_3883_call = mutated_mod.get_global_var('func_3883')
var_4718 = relay.var("var_4718", dtype = "float32", shape = (10, 63))#candidate|4718|(10, 63)|var|float32
call_4717 = relay.TupleGetItem(func_3881_call(relay.reshape(var_4718.astype('float32'), [630,])), 0)
call_4719 = relay.TupleGetItem(func_3883_call(relay.reshape(var_4718.astype('float32'), [630,])), 0)
func_3972_call = mod.get_global_var('func_3972')
func_3974_call = mutated_mod.get_global_var('func_3974')
call_4724 = relay.TupleGetItem(func_3972_call(), 1)
call_4725 = relay.TupleGetItem(func_3974_call(), 1)
func_85_call = mod.get_global_var('func_85')
func_88_call = mutated_mod.get_global_var('func_88')
call_4728 = func_85_call(relay.reshape(call_4717.astype('bool'), [2, 15, 6]), relay.reshape(call_4717.astype('bool'), [2, 15, 6]), )
call_4729 = func_85_call(relay.reshape(call_4717.astype('bool'), [2, 15, 6]), relay.reshape(call_4717.astype('bool'), [2, 15, 6]), )
output = relay.Tuple([bop_4714,call_4717,var_4718,call_4724,call_4728,])
output2 = relay.Tuple([bop_4714,call_4719,var_4718,call_4725,call_4729,])
func_4733 = relay.Function([var_4712,var_4713,var_4718,], output)
mod['func_4733'] = func_4733
mod = relay.transform.InferType()(mod)
mutated_mod['func_4733'] = func_4733
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4733_call = mutated_mod.get_global_var('func_4733')
var_4735 = relay.var("var_4735", dtype = "int8", shape = (8, 1))#candidate|4735|(8, 1)|var|int8
var_4736 = relay.var("var_4736", dtype = "int8", shape = (8, 1))#candidate|4736|(8, 1)|var|int8
var_4737 = relay.var("var_4737", dtype = "float32", shape = (10, 63))#candidate|4737|(10, 63)|var|float32
call_4734 = func_4733_call(var_4735,var_4736,var_4737,)
output = call_4734
func_4738 = relay.Function([var_4735,var_4736,var_4737,], output)
mutated_mod['func_4738'] = func_4738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3260_call = mod.get_global_var('func_3260')
func_3262_call = mutated_mod.get_global_var('func_3262')
call_4746 = relay.TupleGetItem(func_3260_call(), 0)
call_4747 = relay.TupleGetItem(func_3262_call(), 0)
output = relay.Tuple([call_4746,])
output2 = relay.Tuple([call_4747,])
func_4750 = relay.Function([], output)
mod['func_4750'] = func_4750
mod = relay.transform.InferType()(mod)
mutated_mod['func_4750'] = func_4750
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4750_call = mutated_mod.get_global_var('func_4750')
call_4751 = func_4750_call()
output = call_4751
func_4752 = relay.Function([], output)
mutated_mod['func_4752'] = func_4752
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3166_call = mod.get_global_var('func_3166')
func_3167_call = mutated_mod.get_global_var('func_3167')
call_4806 = relay.TupleGetItem(func_3166_call(), 1)
call_4807 = relay.TupleGetItem(func_3167_call(), 1)
func_4600_call = mod.get_global_var('func_4600')
func_4601_call = mutated_mod.get_global_var('func_4601')
call_4811 = relay.TupleGetItem(func_4600_call(), 3)
call_4812 = relay.TupleGetItem(func_4601_call(), 3)
var_4828 = relay.var("var_4828", dtype = "float64", shape = (14, 44))#candidate|4828|(14, 44)|var|float64
bop_4829 = relay.bitwise_and(call_4811.astype('uint32'), relay.reshape(var_4828.astype('uint32'), relay.shape_of(call_4811))) # shape=(14, 44)
bop_4832 = relay.bitwise_and(call_4812.astype('uint32'), relay.reshape(var_4828.astype('uint32'), relay.shape_of(call_4812))) # shape=(14, 44)
bop_4836 = relay.left_shift(bop_4829.astype('int16'), relay.reshape(call_4811.astype('int16'), relay.shape_of(bop_4829))) # shape=(14, 44)
bop_4839 = relay.left_shift(bop_4832.astype('int16'), relay.reshape(call_4812.astype('int16'), relay.shape_of(bop_4832))) # shape=(14, 44)
var_4848 = relay.var("var_4848", dtype = "float64", shape = (14, 44))#candidate|4848|(14, 44)|var|float64
bop_4849 = relay.bitwise_xor(call_4811.astype('uint32'), relay.reshape(var_4848.astype('uint32'), relay.shape_of(call_4811))) # shape=(14, 44)
bop_4852 = relay.bitwise_xor(call_4812.astype('uint32'), relay.reshape(var_4848.astype('uint32'), relay.shape_of(call_4812))) # shape=(14, 44)
output = relay.Tuple([call_4806,bop_4836,bop_4849,])
output2 = relay.Tuple([call_4807,bop_4839,bop_4852,])
func_4853 = relay.Function([var_4828,var_4848,], output)
mod['func_4853'] = func_4853
mod = relay.transform.InferType()(mod)
var_4854 = relay.var("var_4854", dtype = "float64", shape = (14, 44))#candidate|4854|(14, 44)|var|float64
var_4855 = relay.var("var_4855", dtype = "float64", shape = (14, 44))#candidate|4855|(14, 44)|var|float64
output = func_4853(var_4854,var_4855,)
func_4856 = relay.Function([var_4854,var_4855,], output)
mutated_mod['func_4856'] = func_4856
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4600_call = mod.get_global_var('func_4600')
func_4601_call = mutated_mod.get_global_var('func_4601')
call_4879 = relay.TupleGetItem(func_4600_call(), 2)
call_4880 = relay.TupleGetItem(func_4601_call(), 2)
output = relay.Tuple([call_4879,])
output2 = relay.Tuple([call_4880,])
func_4883 = relay.Function([], output)
mod['func_4883'] = func_4883
mod = relay.transform.InferType()(mod)
mutated_mod['func_4883'] = func_4883
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4883_call = mutated_mod.get_global_var('func_4883')
call_4884 = func_4883_call()
output = call_4884
func_4885 = relay.Function([], output)
mutated_mod['func_4885'] = func_4885
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3216_call = mod.get_global_var('func_3216')
func_3218_call = mutated_mod.get_global_var('func_3218')
call_4918 = relay.TupleGetItem(func_3216_call(), 2)
call_4919 = relay.TupleGetItem(func_3218_call(), 2)
output = relay.Tuple([call_4918,])
output2 = relay.Tuple([call_4919,])
func_4931 = relay.Function([], output)
mod['func_4931'] = func_4931
mod = relay.transform.InferType()(mod)
output = func_4931()
func_4932 = relay.Function([], output)
mutated_mod['func_4932'] = func_4932
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4132_call = mod.get_global_var('func_4132')
func_4134_call = mutated_mod.get_global_var('func_4134')
call_4989 = relay.TupleGetItem(func_4132_call(), 0)
call_4990 = relay.TupleGetItem(func_4134_call(), 0)
var_4997 = relay.var("var_4997", dtype = "bool", shape = (2, 15, 6))#candidate|4997|(2, 15, 6)|var|bool
bop_4998 = relay.less(call_4989.astype('bool'), relay.reshape(var_4997.astype('bool'), relay.shape_of(call_4989))) # shape=(2, 15, 6)
bop_5001 = relay.less(call_4990.astype('bool'), relay.reshape(var_4997.astype('bool'), relay.shape_of(call_4990))) # shape=(2, 15, 6)
output = bop_4998
output2 = bop_5001
func_5003 = relay.Function([var_4997,], output)
mod['func_5003'] = func_5003
mod = relay.transform.InferType()(mod)
var_5004 = relay.var("var_5004", dtype = "bool", shape = (2, 15, 6))#candidate|5004|(2, 15, 6)|var|bool
output = func_5003(var_5004)
func_5005 = relay.Function([var_5004], output)
mutated_mod['func_5005'] = func_5005
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3166_call = mod.get_global_var('func_3166')
func_3167_call = mutated_mod.get_global_var('func_3167')
call_5065 = relay.TupleGetItem(func_3166_call(), 2)
call_5066 = relay.TupleGetItem(func_3167_call(), 2)
output = call_5065
output2 = call_5066
func_5067 = relay.Function([], output)
mod['func_5067'] = func_5067
mod = relay.transform.InferType()(mod)
output = func_5067()
func_5068 = relay.Function([], output)
mutated_mod['func_5068'] = func_5068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3972_call = mod.get_global_var('func_3972')
func_3974_call = mutated_mod.get_global_var('func_3974')
call_5157 = relay.TupleGetItem(func_3972_call(), 4)
call_5158 = relay.TupleGetItem(func_3974_call(), 4)
output = call_5157
output2 = call_5158
func_5169 = relay.Function([], output)
mod['func_5169'] = func_5169
mod = relay.transform.InferType()(mod)
mutated_mod['func_5169'] = func_5169
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5169_call = mutated_mod.get_global_var('func_5169')
call_5170 = func_5169_call()
output = call_5170
func_5171 = relay.Function([], output)
mutated_mod['func_5171'] = func_5171
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5067_call = mod.get_global_var('func_5067')
func_5068_call = mutated_mod.get_global_var('func_5068')
call_5177 = func_5067_call()
call_5178 = func_5067_call()
output = call_5177
output2 = call_5178
func_5195 = relay.Function([], output)
mod['func_5195'] = func_5195
mod = relay.transform.InferType()(mod)
output = func_5195()
func_5196 = relay.Function([], output)
mutated_mod['func_5196'] = func_5196
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4132_call = mod.get_global_var('func_4132')
func_4134_call = mutated_mod.get_global_var('func_4134')
call_5235 = relay.TupleGetItem(func_4132_call(), 0)
call_5236 = relay.TupleGetItem(func_4134_call(), 0)
func_3496_call = mod.get_global_var('func_3496')
func_3498_call = mutated_mod.get_global_var('func_3498')
var_5261 = relay.var("var_5261", dtype = "float32", shape = (630,))#candidate|5261|(630,)|var|float32
call_5260 = func_3496_call(relay.reshape(var_5261.astype('float32'), [6, 15, 7]))
call_5262 = func_3496_call(relay.reshape(var_5261.astype('float32'), [6, 15, 7]))
var_5264 = relay.var("var_5264", dtype = "float32", shape = (6, 15, 7))#candidate|5264|(6, 15, 7)|var|float32
bop_5265 = relay.maximum(call_5260.astype('int32'), relay.reshape(var_5264.astype('int32'), relay.shape_of(call_5260))) # shape=(6, 15, 7)
bop_5268 = relay.maximum(call_5262.astype('int32'), relay.reshape(var_5264.astype('int32'), relay.shape_of(call_5262))) # shape=(6, 15, 7)
func_708_call = mod.get_global_var('func_708')
func_712_call = mutated_mod.get_global_var('func_712')
var_5288 = relay.var("var_5288", dtype = "uint64", shape = (1080,))#candidate|5288|(1080,)|var|uint64
call_5287 = func_708_call(relay.reshape(var_5288.astype('uint64'), [8, 15, 9]), relay.reshape(var_5288.astype('uint64'), [8, 15, 9]), )
call_5289 = func_708_call(relay.reshape(var_5288.astype('uint64'), [8, 15, 9]), relay.reshape(var_5288.astype('uint64'), [8, 15, 9]), )
func_2336_call = mod.get_global_var('func_2336')
func_2342_call = mutated_mod.get_global_var('func_2342')
const_5291 = relay.const([[-8.777598,8.928075,-5.126685,-2.251811,1.182626,1.752070,-2.376303,0.748102,2.521863,-8.786062,4.711757,-9.849752,1.949507,8.717639,2.707267,6.687035,7.090890,-1.572514,-3.991388,-2.731814,-1.808613,-8.611748,0.651378,1.756036,-4.997242,3.871529,-3.357456,-6.321457,-0.492229,0.306575,6.555301,2.558149,-5.503580,-5.890320,6.959042,-5.964717,6.255446,-4.331313,-1.984649,3.396349,-2.457275,-0.428354,-1.223745,-0.061878,-7.486694,3.679367,-2.879908,-1.189658,-2.882497,5.913812,0.539430,1.903567,2.887805,5.693113,9.037831,-3.529484,-9.727816,-5.158880,-1.151108,2.521341,0.267675,-4.864699,1.015791,-7.176947,0.585265,2.445021,9.904745,1.583443,1.320293,-2.853689,-8.737756,-0.250049,3.138102,8.082478,4.301368,-9.332962,9.501772,-1.075748,0.879883,-6.503929,4.674834,4.500097,-2.314278,9.407251,0.415347,8.677100,-0.838671,-6.691213,-1.826159,3.606928,-4.999788,-0.310558,-7.097712,6.622346,4.122451,1.037186,7.288704,5.414364,9.557213,9.057055],[-6.949128,-9.394640,-2.862271,-8.546975,2.902763,-2.878880,7.463402,9.286013,-1.720479,6.848856,1.390813,-4.745505,6.786653,-6.588872,-0.532990,-3.049072,-5.694272,9.094670,4.518650,-2.509365,-8.352306,4.710426,9.756575,1.329609,3.508953,-8.036467,8.485936,3.179435,-0.228634,-4.803591,-9.317173,-3.171701,9.099648,3.089346,7.137573,9.001698,9.747164,-7.789714,-0.460643,-7.548157,-6.005145,-9.562551,8.030296,4.659286,6.531278,-2.010809,-4.679601,9.854279,-6.012242,-6.931983,-0.277290,9.334795,-0.499330,-3.836211,-9.515162,-6.174348,2.410779,-6.878673,6.340926,0.033406,5.663011,-8.572376,-1.102980,-8.122915,-7.012442,-3.740037,-3.382526,-4.682324,2.130778,9.650143,4.026404,2.549913,-5.352534,0.421796,1.733482,2.623599,-4.396043,-8.448799,2.300318,-3.846953,6.934226,-6.703043,-5.129262,0.978577,7.594735,2.686917,-6.820793,-9.013325,7.448332,-3.075480,-5.560114,3.962538,1.636074,4.449010,-4.744613,0.382711,-8.348602,-1.587649,-6.521638,5.544709],[-0.433836,7.810279,7.962750,-9.793977,0.240522,6.172645,-7.460634,7.457516,-3.139617,-4.096952,-5.074353,-5.654887,1.455338,7.195792,-6.760424,1.928004,-8.572952,-5.136724,-7.008539,-8.307546,6.567369,0.017115,-9.498210,-1.621334,9.846150,-6.640205,-7.813531,4.444956,9.467611,6.365712,6.843949,-2.481504,6.922953,5.189704,4.617243,-5.405871,3.418536,-9.542785,-5.647400,-9.341139,3.240665,8.191821,2.942947,9.234718,4.028089,9.564787,-7.701576,-4.535045,-0.760112,3.245562,2.805423,-0.502194,-9.404881,8.771176,2.269748,-8.636383,-6.598717,-8.244114,-4.656642,-4.837860,7.109077,-3.861205,7.661502,1.628163,-1.311965,-3.274424,-1.334058,-5.536851,4.805545,9.120918,5.802310,-1.569542,5.565011,-0.239376,-5.868445,-5.213151,-2.968696,2.337298,1.705121,2.092652,-9.964025,-9.431599,-6.350176,3.319877,-1.069708,1.313257,-5.888305,0.192719,-5.212931,-2.264502,-8.543854,-7.759152,9.512200,-1.113275,0.653515,9.999979,9.903885,-0.643381,-6.530476,-7.588705],[1.686355,1.464089,3.026386,9.377174,-2.872809,-5.937831,-6.393682,8.052203,8.510083,1.166495,5.288764,-9.036625,-8.719838,-5.068107,-6.168389,1.868359,-0.196662,5.268743,3.096808,-8.886439,-6.260803,-9.128528,4.836533,6.645290,5.392728,7.043443,6.828386,-8.721353,9.818641,-3.030527,4.909221,0.403705,-4.255400,0.246828,3.852878,9.201338,-6.899021,8.853380,3.869256,-1.051712,4.487995,9.440046,7.591664,-9.143548,9.570199,-6.891887,-6.688116,-9.153575,0.396622,-1.788811,7.448867,-8.412274,7.831497,-3.350613,-7.502752,9.563410,-7.696505,-3.634284,-7.140460,-4.009965,-1.869733,-5.349399,-0.578904,9.539673,-4.817648,8.429690,-1.590019,-2.468124,5.210264,-1.936835,5.521694,6.890874,7.453180,-4.074014,-7.090063,9.496541,1.091679,4.282309,-4.487382,5.739031,-6.632959,4.358141,9.538525,-3.479604,-5.013017,-1.548418,-3.635800,1.003037,-6.980488,-3.353214,8.226199,9.148721,3.040682,-9.427744,5.610874,7.150437,-4.805818,-1.234203,-4.975214,-4.652533]], dtype = "float32")#candidate|5291|(4, 100)|const|float32
var_5292 = relay.var("var_5292", dtype = "float32", shape = (1, 315))#candidate|5292|(1, 315)|var|float32
const_5293 = relay.const([-1.291157,-3.020698,3.405028,7.903208,-5.862049,-9.835938,4.458655,-0.128119,3.808723,-6.066377,-3.077432,8.624765,8.774275,8.732171,-6.990301,4.986028,1.319394,-3.486180,-7.506409,9.376342,-0.943807,-9.982665,4.489912,9.096740,3.840099,-0.781288,3.926511,5.294942,6.086081,4.277185,0.585619,-6.144259,-9.252731,-3.017486,-4.857439,-5.956490], dtype = "float64")#candidate|5293|(36,)|const|float64
call_5290 = relay.TupleGetItem(func_2336_call(relay.reshape(const_5291.astype('float32'), [10, 8, 5]), relay.reshape(const_5291.astype('float32'), [10, 8, 5]), relay.reshape(var_5292.astype('float32'), [1, 315]), relay.reshape(const_5293.astype('float64'), [36,]), ), 10)
call_5294 = relay.TupleGetItem(func_2342_call(relay.reshape(const_5291.astype('float32'), [10, 8, 5]), relay.reshape(const_5291.astype('float32'), [10, 8, 5]), relay.reshape(var_5292.astype('float32'), [1, 315]), relay.reshape(const_5293.astype('float64'), [36,]), ), 10)
output = relay.Tuple([call_5235,var_5261,bop_5265,call_5287,var_5288,call_5290,const_5291,var_5292,const_5293,])
output2 = relay.Tuple([call_5236,var_5261,bop_5268,call_5289,var_5288,call_5294,const_5291,var_5292,const_5293,])
func_5304 = relay.Function([var_5261,var_5264,var_5288,var_5292,], output)
mod['func_5304'] = func_5304
mod = relay.transform.InferType()(mod)
mutated_mod['func_5304'] = func_5304
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5304_call = mutated_mod.get_global_var('func_5304')
var_5306 = relay.var("var_5306", dtype = "float32", shape = (630,))#candidate|5306|(630,)|var|float32
var_5307 = relay.var("var_5307", dtype = "float32", shape = (6, 15, 7))#candidate|5307|(6, 15, 7)|var|float32
var_5308 = relay.var("var_5308", dtype = "uint64", shape = (1080,))#candidate|5308|(1080,)|var|uint64
var_5309 = relay.var("var_5309", dtype = "float32", shape = (1, 315))#candidate|5309|(1, 315)|var|float32
call_5305 = func_5304_call(var_5306,var_5307,var_5308,var_5309,)
output = call_5305
func_5310 = relay.Function([var_5306,var_5307,var_5308,var_5309,], output)
mutated_mod['func_5310'] = func_5310
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4132_call = mod.get_global_var('func_4132')
func_4134_call = mutated_mod.get_global_var('func_4134')
call_5430 = relay.TupleGetItem(func_4132_call(), 0)
call_5431 = relay.TupleGetItem(func_4134_call(), 0)
output = relay.Tuple([call_5430,])
output2 = relay.Tuple([call_5431,])
func_5434 = relay.Function([], output)
mod['func_5434'] = func_5434
mod = relay.transform.InferType()(mod)
output = func_5434()
func_5435 = relay.Function([], output)
mutated_mod['func_5435'] = func_5435
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4669_call = mod.get_global_var('func_4669')
func_4671_call = mutated_mod.get_global_var('func_4671')
call_5490 = relay.TupleGetItem(func_4669_call(), 0)
call_5491 = relay.TupleGetItem(func_4671_call(), 0)
output = relay.Tuple([call_5490,])
output2 = relay.Tuple([call_5491,])
func_5502 = relay.Function([], output)
mod['func_5502'] = func_5502
mod = relay.transform.InferType()(mod)
mutated_mod['func_5502'] = func_5502
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5502_call = mutated_mod.get_global_var('func_5502')
call_5503 = func_5502_call()
output = call_5503
func_5504 = relay.Function([], output)
mutated_mod['func_5504'] = func_5504
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4132_call = mod.get_global_var('func_4132')
func_4134_call = mutated_mod.get_global_var('func_4134')
call_5528 = relay.TupleGetItem(func_4132_call(), 1)
call_5529 = relay.TupleGetItem(func_4134_call(), 1)
output = relay.Tuple([call_5528,])
output2 = relay.Tuple([call_5529,])
func_5545 = relay.Function([], output)
mod['func_5545'] = func_5545
mod = relay.transform.InferType()(mod)
mutated_mod['func_5545'] = func_5545
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5545_call = mutated_mod.get_global_var('func_5545')
call_5546 = func_5545_call()
output = call_5546
func_5547 = relay.Function([], output)
mutated_mod['func_5547'] = func_5547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3972_call = mod.get_global_var('func_3972')
func_3974_call = mutated_mod.get_global_var('func_3974')
call_5548 = relay.TupleGetItem(func_3972_call(), 3)
call_5549 = relay.TupleGetItem(func_3974_call(), 3)
func_4132_call = mod.get_global_var('func_4132')
func_4134_call = mutated_mod.get_global_var('func_4134')
call_5553 = relay.TupleGetItem(func_4132_call(), 0)
call_5554 = relay.TupleGetItem(func_4134_call(), 0)
output = relay.Tuple([call_5548,call_5553,])
output2 = relay.Tuple([call_5549,call_5554,])
func_5572 = relay.Function([], output)
mod['func_5572'] = func_5572
mod = relay.transform.InferType()(mod)
output = func_5572()
func_5573 = relay.Function([], output)
mutated_mod['func_5573'] = func_5573
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4750_call = mod.get_global_var('func_4750')
func_4752_call = mutated_mod.get_global_var('func_4752')
call_5582 = relay.TupleGetItem(func_4750_call(), 0)
call_5583 = relay.TupleGetItem(func_4752_call(), 0)
func_1776_call = mod.get_global_var('func_1776')
func_1778_call = mutated_mod.get_global_var('func_1778')
const_5618 = relay.const([-9.400240,-4.778469,2.278105,4.379904,2.348221,9.529433,2.412796,-3.628818,1.846590,4.660610,8.345236,-1.303048,-9.776157,-4.414454,-2.541422,9.896856,0.781302,6.243890,3.592004,-7.833921,-5.524998,-8.212973,-4.412644,-7.825257,-7.417170,-9.799943,8.034076,5.915611,2.796565,7.913857,5.305595,-2.971803,-4.518147,9.389895,-5.451082,-3.533437,-3.147678,4.661257,1.475343,-1.662983,1.415755,8.562043,1.468394,-3.941600,-7.758447,-2.654138,9.762484,-7.810064,1.040387,1.608587,8.548490,-5.766881,-1.033651,-8.829765,3.550711,2.726795,7.292484,4.391715,7.224285,5.420921,5.856087,7.927325,7.604209,-5.624195,-3.901405,-0.737967,1.050847,6.556375,-2.425379,7.788634,-2.607911,-5.124839,7.234752,7.846772,-9.055826,-6.961388,-6.797749,-9.577325,9.994122,-3.437851,-6.144058,-9.407245,8.463086,4.107923,1.638465,1.811704,2.908156,-4.275911,7.610640,-1.788389,-6.874581,5.496240,-7.817764,-7.573957,-3.068895,4.079186,-5.721499,-8.114254,1.897381,5.081247,-1.612099,6.950592,3.282661,-7.052142,7.616334,-1.622494,6.826245,-5.871312,7.655951,-8.124839,-4.603680,-2.108035,7.030299,-8.495323,-1.502354,8.928109,9.952902,-2.394209,-2.798231,8.565026,3.377378,-2.708801,-1.437611,0.406763,0.474016,8.626658,4.258647,-5.592393,3.399201,-5.054854,2.393752,-5.372044,-3.754615,2.743252,-9.769140,-0.830509,-1.277327,-6.210340,0.246053,-9.237691,9.013720,-8.902218,0.861277,6.748099,-2.657397,-7.615517,-3.014725,-0.767210,2.708149,6.874456,-7.694363,-7.115917,-6.771185,2.025928,-1.444776,3.415855,-8.733043,-3.662132,-0.152636,-1.728104,9.940001,-2.304662,2.334490,-0.511881,-6.286194,-5.858764,0.907157,6.944648,-0.519565,-5.715628,-9.939761,-2.777701,0.054191,-3.901283,4.568040,-2.515401,4.796488,-4.803294,8.018104,-6.717885,-7.033088,8.618435,0.467072,-7.798955,0.646250,-3.784187,-5.978986,-8.232168,1.699052,5.702032,2.236353,-9.521745,4.784820,-4.840966,7.817918,-6.674758,4.524216,-4.412514,6.538250,-6.443242,4.485467,-2.480613,-0.261266,5.912816,-6.095283,-9.561896,4.209141,-6.276588,5.471472,7.827630,8.454099,-9.858639,4.716671,4.689124,2.792119,-0.332447,-6.603133,-2.050533,0.924239,5.874173,4.239091,-8.531406,-5.017704,6.613481,7.344633,-5.599514,-0.192010,9.274993,7.969715,-5.012086,6.538966,7.816097,-0.857531,-6.566685,-4.840732,5.866706,4.383987,-3.425943,-9.210217,9.997070,-3.575260,3.507227,-5.138727,0.783960,7.512988,8.464324,-8.372545,4.144277,-9.512101,-3.411875,1.476765,-6.881577,6.870502,-7.814801,-8.755317,3.307319,5.250245,-4.758115,-9.664638,-8.484529,7.731751,-6.866880,-5.224849,-8.865548,8.151088,9.238310,-6.896819,7.437034,-4.922798,-8.123406,3.329780,-9.262072,-1.879062,-5.325800,-0.212685,-2.135464,-7.005283,6.238639,-3.425114,-5.321496,-5.102305,-4.436907,8.196909,6.582655,0.845332,3.768062,6.972612,-6.676537,-2.234771,-5.357020,6.938355,-8.628759,8.086355,-3.174701,-2.827064,0.987566,0.967164,9.674868,9.381547,-0.591451,-5.887312,7.810998,3.456700,3.829400,6.264183,-4.477205,8.152316,-6.590168,-4.423322,-9.288967,1.092825,-3.482313,-7.715999,-8.868471,-9.062898], dtype = "float32")#candidate|5618|(315,)|const|float32
call_5617 = relay.TupleGetItem(func_1776_call(relay.reshape(const_5618.astype('float32'), [9, 5, 7])), 0)
call_5619 = relay.TupleGetItem(func_1778_call(relay.reshape(const_5618.astype('float32'), [9, 5, 7])), 0)
func_5003_call = mod.get_global_var('func_5003')
func_5005_call = mutated_mod.get_global_var('func_5005')
var_5628 = relay.var("var_5628", dtype = "bool", shape = (180,))#candidate|5628|(180,)|var|bool
call_5627 = func_5003_call(relay.reshape(var_5628.astype('bool'), [2, 15, 6]))
call_5629 = func_5003_call(relay.reshape(var_5628.astype('bool'), [2, 15, 6]))
func_4600_call = mod.get_global_var('func_4600')
func_4601_call = mutated_mod.get_global_var('func_4601')
call_5635 = relay.TupleGetItem(func_4600_call(), 1)
call_5636 = relay.TupleGetItem(func_4601_call(), 1)
output = relay.Tuple([call_5582,call_5617,const_5618,call_5627,var_5628,call_5635,])
output2 = relay.Tuple([call_5583,call_5619,const_5618,call_5629,var_5628,call_5636,])
func_5644 = relay.Function([var_5628,], output)
mod['func_5644'] = func_5644
mod = relay.transform.InferType()(mod)
var_5645 = relay.var("var_5645", dtype = "bool", shape = (180,))#candidate|5645|(180,)|var|bool
output = func_5644(var_5645)
func_5646 = relay.Function([var_5645], output)
mutated_mod['func_5646'] = func_5646
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5666 = relay.var("var_5666", dtype = "float32", shape = (10, 16, 7))#candidate|5666|(10, 16, 7)|var|float32
uop_5667 = relay.tan(var_5666.astype('float32')) # shape=(10, 16, 7)
func_4600_call = mod.get_global_var('func_4600')
func_4601_call = mutated_mod.get_global_var('func_4601')
call_5673 = relay.TupleGetItem(func_4600_call(), 2)
call_5674 = relay.TupleGetItem(func_4601_call(), 2)
func_5434_call = mod.get_global_var('func_5434')
func_5435_call = mutated_mod.get_global_var('func_5435')
call_5691 = relay.TupleGetItem(func_5434_call(), 0)
call_5692 = relay.TupleGetItem(func_5435_call(), 0)
var_5696 = relay.var("var_5696", dtype = "bool", shape = (2, 15, 6))#candidate|5696|(2, 15, 6)|var|bool
bop_5697 = relay.right_shift(call_5691.astype('int64'), relay.reshape(var_5696.astype('int64'), relay.shape_of(call_5691))) # shape=(2, 15, 6)
bop_5700 = relay.right_shift(call_5692.astype('int64'), relay.reshape(var_5696.astype('int64'), relay.shape_of(call_5692))) # shape=(2, 15, 6)
output = relay.Tuple([uop_5667,call_5673,bop_5697,])
output2 = relay.Tuple([uop_5667,call_5674,bop_5700,])
func_5705 = relay.Function([var_5666,var_5696,], output)
mod['func_5705'] = func_5705
mod = relay.transform.InferType()(mod)
mutated_mod['func_5705'] = func_5705
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5705_call = mutated_mod.get_global_var('func_5705')
var_5707 = relay.var("var_5707", dtype = "float32", shape = (10, 16, 7))#candidate|5707|(10, 16, 7)|var|float32
var_5708 = relay.var("var_5708", dtype = "bool", shape = (2, 15, 6))#candidate|5708|(2, 15, 6)|var|bool
call_5706 = func_5705_call(var_5707,var_5708,)
output = call_5706
func_5709 = relay.Function([var_5707,var_5708,], output)
mutated_mod['func_5709'] = func_5709
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5749 = relay.var("var_5749", dtype = "bool", shape = (2, 16, 16))#candidate|5749|(2, 16, 16)|var|bool
var_5750 = relay.var("var_5750", dtype = "bool", shape = (2, 16, 16))#candidate|5750|(2, 16, 16)|var|bool
bop_5751 = relay.logical_or(var_5749.astype('bool'), relay.reshape(var_5750.astype('bool'), relay.shape_of(var_5749))) # shape=(2, 16, 16)
func_5502_call = mod.get_global_var('func_5502')
func_5504_call = mutated_mod.get_global_var('func_5504')
call_5778 = relay.TupleGetItem(func_5502_call(), 0)
call_5779 = relay.TupleGetItem(func_5504_call(), 0)
uop_5801 = relay.log2(var_5750.astype('float64')) # shape=(2, 16, 16)
func_3683_call = mod.get_global_var('func_3683')
func_3687_call = mutated_mod.get_global_var('func_3687')
const_5811 = relay.const([2.697933,-4.573385,0.650397,-8.600927,2.032681,6.518837,8.633969,-5.936199,9.409525,-0.898407,-8.514161,8.951455,-0.563141,-1.074849,-0.485965,5.303615,7.899865,-1.463225,-1.415888,-4.539407,-6.406603,-0.548885,3.970531,-5.139225,-9.384629,-7.224738,-7.968411,-3.537022,9.191096,-7.284042,-2.500727,2.408657,-4.862286,-4.755566,-6.941273,-5.559047,-6.365835,-8.839433,2.971988,3.896639,9.931006,-9.870444,0.030079,5.840869,3.129529,6.216443,5.115936,-1.773202,-2.404980,-3.558281,4.179032,2.783595,3.651058,-4.748481,6.952105,-5.711904,7.297641,-8.292523,8.775180,6.466034,-7.919836,-1.832669,5.486840,4.510849,1.201178,3.527802,-8.278898,1.754750,-2.106659,-3.833832,9.693794,1.360619,-6.004065,7.208062,3.738054,-7.767931,4.616403,1.904591,0.469339,-6.105963,-2.604981,-8.275821,8.392750,5.463325,1.080700,2.704214,-5.047177,9.861097,-4.077518,3.284780,4.188019,7.448028,-7.416371,0.323109,6.270928,6.255890,6.157438,-6.127046,2.733601,7.263041,-8.434574,5.582001,2.279797,5.429026,4.647561,4.380153,-4.111717,-1.363519,2.662069,8.746254,5.771072,-3.394402,-1.558783,9.707050,-5.306815,-4.879562,0.559025,-7.370230,-5.948657,5.813196,-0.883401,-4.976629,2.308874,2.164864,-2.201613,-5.946675,1.434903,5.665070,9.988467,3.178314,8.212928,-6.360907,3.522939,6.831039,-5.119299,-4.288860,1.915005,-0.496416,9.578274,8.586719,-7.463714,6.474839,-1.626978,8.104653,-3.868328,-8.246185,-5.625743,-8.419407,1.366391,4.072254,-8.503860,-2.272880,-9.497297,0.735272,-9.966808,4.545142,-0.106373,3.073464,1.601535,-7.361134,2.123667,2.264287,-4.654862,-8.674037,3.444789,2.381655,7.788754,8.876604,-6.048908,8.526735,4.323973,1.292450,4.192844,8.576282,5.692498,-5.817535,-1.478930,-2.424261,-0.218299,-3.223453,-9.017076,4.097156,8.955244,7.528908,8.109782,-8.047038,-1.863583,-0.555102,-4.098006,-0.575912,-6.536140,5.016390,8.649516,7.346523,-8.032276,0.702866,5.303685,-4.358504,-3.302534,5.920224,-7.102817,-1.350663,0.572743,-0.538428,-3.287796,-5.910563,-4.005515,1.829676,3.157183,8.428662,-8.338540,9.736325,7.643223,-4.168849,1.795767,-9.721234,-1.576713,-7.271165,0.554603,1.501858,-4.282625,-0.527781,1.605515,-7.432962,-2.575989,-7.637312,-3.724674,8.589041,1.350113,8.792876,8.551839,-0.778442,0.374442,2.094379,-2.400579,-2.554925,-6.473542,0.518401,3.887064,6.914363,0.166124,-4.878719,2.962966,6.956291,-7.470374,3.054073,-9.257044,3.127681,4.841857,5.301090,6.052348,-9.359337,-8.655564,-0.777244,0.969183,-9.953335,9.193540,-1.671524,-4.738378,-8.854943], dtype = "float64")#candidate|5811|(260,)|const|float64
call_5810 = func_3683_call(relay.reshape(const_5811.astype('float64'), [2, 10, 13]), relay.reshape(const_5811.astype('float64'), [2, 10, 13]), )
call_5812 = func_3683_call(relay.reshape(const_5811.astype('float64'), [2, 10, 13]), relay.reshape(const_5811.astype('float64'), [2, 10, 13]), )
output = relay.Tuple([bop_5751,call_5778,uop_5801,call_5810,const_5811,])
output2 = relay.Tuple([bop_5751,call_5779,uop_5801,call_5812,const_5811,])
func_5818 = relay.Function([var_5749,var_5750,], output)
mod['func_5818'] = func_5818
mod = relay.transform.InferType()(mod)
mutated_mod['func_5818'] = func_5818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5818_call = mutated_mod.get_global_var('func_5818')
var_5820 = relay.var("var_5820", dtype = "bool", shape = (2, 16, 16))#candidate|5820|(2, 16, 16)|var|bool
var_5821 = relay.var("var_5821", dtype = "bool", shape = (2, 16, 16))#candidate|5821|(2, 16, 16)|var|bool
call_5819 = func_5818_call(var_5820,var_5821,)
output = call_5819
func_5822 = relay.Function([var_5820,var_5821,], output)
mutated_mod['func_5822'] = func_5822
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3069_call = mod.get_global_var('func_3069')
func_3070_call = mutated_mod.get_global_var('func_3070')
call_5840 = func_3069_call()
call_5841 = func_3069_call()
func_2752_call = mod.get_global_var('func_2752')
func_2755_call = mutated_mod.get_global_var('func_2755')
var_5851 = relay.var("var_5851", dtype = "uint64", shape = (1092,))#candidate|5851|(1092,)|var|uint64
call_5850 = relay.TupleGetItem(func_2752_call(relay.reshape(var_5851.astype('uint64'), [13, 6, 14]), relay.reshape(var_5851.astype('uint64'), [13, 6, 14]), ), 0)
call_5852 = relay.TupleGetItem(func_2755_call(relay.reshape(var_5851.astype('uint64'), [13, 6, 14]), relay.reshape(var_5851.astype('uint64'), [13, 6, 14]), ), 0)
output = relay.Tuple([call_5840,call_5850,var_5851,])
output2 = relay.Tuple([call_5841,call_5852,var_5851,])
func_5854 = relay.Function([var_5851,], output)
mod['func_5854'] = func_5854
mod = relay.transform.InferType()(mod)
mutated_mod['func_5854'] = func_5854
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5855 = relay.var("var_5855", dtype = "uint64", shape = (1092,))#candidate|5855|(1092,)|var|uint64
func_5854_call = mutated_mod.get_global_var('func_5854')
call_5856 = func_5854_call(var_5855)
output = call_5856
func_5857 = relay.Function([var_5855], output)
mutated_mod['func_5857'] = func_5857
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3166_call = mod.get_global_var('func_3166')
func_3167_call = mutated_mod.get_global_var('func_3167')
call_5963 = relay.TupleGetItem(func_3166_call(), 2)
call_5964 = relay.TupleGetItem(func_3167_call(), 2)
output = call_5963
output2 = call_5964
func_5969 = relay.Function([], output)
mod['func_5969'] = func_5969
mod = relay.transform.InferType()(mod)
output = func_5969()
func_5970 = relay.Function([], output)
mutated_mod['func_5970'] = func_5970
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3069_call = mod.get_global_var('func_3069')
func_3070_call = mutated_mod.get_global_var('func_3070')
call_6034 = func_3069_call()
call_6035 = func_3069_call()
func_5818_call = mod.get_global_var('func_5818')
func_5822_call = mutated_mod.get_global_var('func_5822')
const_6043 = relay.const([True,False,False,False,True,True,True,False,False,False,False,True,True,True,False,False,True,True,True,True,False,False,True,True,True,True,True,False,False,True,True,True,True,True,False,False,False,True,True,False,True,True,True,False,False,True,True,True,False,False,False,False,False,False,False,False,True,True,False,True,False,True,True,True,False,True,False,False,False,True,True,False,False,False,False,False,False,True,True,False,True,False,True,False,False,True,False,True,False,False,True,False,False,False,True,False,True,True,True,True,False,False,True,False,False,False,False,False,True,False,True,True,False,False,True,False,True,True,True,True,True,False,True,True,False,False,False,True,False,True,True,False,True,False,True,True,False,True,False,False,True,True,True,True,True,False,True,False,True,True,True,False,True,False,False,False,False,False,True,False,True,False,True,False,True,False,True,True,True,True,True,True,False,False,False,True,False,False,True,True,True,False,False,False,False,False,False,True,False,False,True,True,False,False,True,True,False,False,True,False,False,False,True,False,True,True,False,True,True,True,True,False,False,True,True,False,True,True,True,True,True,True,False,False,True,True,True,False,True,False,False,True,True,True,False,False,False,False,True,False,True,False,False,True,True,True,False,False,True,True,True,False,False,True,False,False,False,False,False,False,False,False,True,True,True,True,True,True,True,True,True,True,True,False,False,True,True,False,True,False,False,True,True,False,False,True,False,True,True,False,True,False,False,False,True,True,False,True,True,True,False,False,False,True,False,True,False,False,True,False,False,True,True,True,False,True,True,False,False,False,True,True,False,True,False,False,True,False,True,False,True,True,False,False,False,True,True,True,True,False,True,True,False,False,True,False,True,False,False,False,False,True,True,True,True,True,True,False,True,False,False,True,True,False,True,True,True,False,False,False,False,True,False,False,True,True,False,True,True,True,True,True,False,False,False,True,False,True,True,True,True,True,False,False,False,True,False,True,True,False,False,False,False,False,False,True,True,True,False,False,False,True,True,False,False,False,False,False,True,True,True,True,True,False,True,True,True,True,False,True,False,False,True,False,False,True,True,True,False,False,True,False,True,True,True,True,True,True,True,False,False,True,True,True,True,True,False,False,False,True,True,False,True,False,False,False,False,False,True,False,False,True,True,True,False,False,True,True,True,False,True,True,True,True,True,False,False,True,True,False,False,False,True,False,True,True,False,True,True,True,True,True,False,False,True,False,False,False,True,True,False,True], dtype = "bool")#candidate|6043|(512,)|const|bool
call_6042 = relay.TupleGetItem(func_5818_call(relay.reshape(const_6043.astype('bool'), [2, 16, 16]), relay.reshape(const_6043.astype('bool'), [2, 16, 16]), ), 3)
call_6044 = relay.TupleGetItem(func_5822_call(relay.reshape(const_6043.astype('bool'), [2, 16, 16]), relay.reshape(const_6043.astype('bool'), [2, 16, 16]), ), 3)
output = relay.Tuple([call_6034,call_6042,const_6043,])
output2 = relay.Tuple([call_6035,call_6044,const_6043,])
func_6073 = relay.Function([], output)
mod['func_6073'] = func_6073
mod = relay.transform.InferType()(mod)
mutated_mod['func_6073'] = func_6073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6073_call = mutated_mod.get_global_var('func_6073')
call_6074 = func_6073_call()
output = call_6074
func_6075 = relay.Function([], output)
mutated_mod['func_6075'] = func_6075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3069_call = mod.get_global_var('func_3069')
func_3070_call = mutated_mod.get_global_var('func_3070')
call_6086 = func_3069_call()
call_6087 = func_3069_call()
func_3496_call = mod.get_global_var('func_3496')
func_3498_call = mutated_mod.get_global_var('func_3498')
const_6097 = relay.const([-7.804720,9.021048,6.435895,1.696401,1.737755,-1.812810,-0.559226,-2.506224,1.316134,5.459929,-9.130743,2.811393,5.087172,1.210078,1.606477,6.497071,-0.384739,-3.268527,3.002465,-0.045109,2.341701,-8.277891,-8.052957,3.735091,-8.906716,-9.505606,-6.857437,3.125114,0.599349,-7.473251,-4.691379,4.854448,-6.344507,-8.702076,7.495957,-5.622143,-8.151277,-0.111601,0.116020,-8.712640,-3.686138,-7.718858,-0.465989,7.165837,-3.009418,-1.627220,2.670702,3.326955,5.793209,2.580409,1.068973,6.066514,-6.603702,-0.515112,5.480094,1.118860,4.820302,-6.104362,4.936981,-2.937716,-2.372002,9.464805,-3.870841,3.330036,-9.789211,-2.071523,6.001643,9.118622,3.677989,9.563338,-6.293769,-9.954074,9.153241,4.888017,-2.891711,-7.946393,-2.208214,-4.650354,0.927947,9.643792,-4.607785,4.424128,7.846613,-8.686464,-8.301329,-3.570737,-6.528542,-1.038139,1.902640,0.501353,4.891631,-1.565139,6.150889,-5.727144,7.496755,-6.219364,0.913608,1.714646,8.082868,4.195497,5.412720,-0.219290,6.001164,0.863632,9.036395,-5.646735,5.208789,-9.877871,-6.185132,2.008983,-9.292230,3.886150,2.313644,9.989939,-6.772851,-2.503248,-2.142790,-1.828779,9.092885,-1.152726,-3.016352,-9.707589,-7.691797,-7.118502,8.864744,-5.457436,3.010131,-5.091914,-6.857856,0.004018,-1.378549,-6.058480,0.412931,-6.811918,5.357230,0.916186,-7.711011,3.094639,-4.734040,7.794028,5.669080,-2.928519,9.254501,8.135885,-1.083547,9.075752,-6.511778,1.074473,-3.986365,-5.647332,-3.458643,1.524288,9.202274,8.819069,-8.808717,-8.128501,-5.225675,-0.578519,6.043244,7.264812,3.343369,-0.875348,3.142040,5.915530,-6.361453,9.280568,3.266506,4.572481,7.503684,-4.199095,4.358150,3.792638,2.265436,5.553257,3.648556,-9.742047,7.880051,-8.327132,-5.750783,-2.440822,3.292158,-0.108885,-8.294326,-9.579938,-7.333594,1.659767,5.584861,-1.300285,8.245266,9.280971,-9.849703,1.297779,-8.122473,-8.793181,4.444907,0.448147,-9.851511,1.513305,7.183966,-0.146309,-4.653275,9.042550,-1.671808,2.865866,-4.579752,-0.121042,-3.567849,-4.295706,0.445202,-6.896667,-5.669933,-0.817606,4.686366,5.121462,1.672950,-4.747960,-5.171958,2.052423,8.687015,-6.328985,5.865952,6.845503,-4.880960,-8.190757,-9.560850,-2.129081,4.577525,-8.756948,-2.676391,9.755391,5.964003,1.922698,-8.217744,7.739308,6.089201,8.611038,-6.921685,5.138569,-3.988223,6.763090,-8.615942,7.485674,-7.500241,-0.459206,-9.329495,-2.948661,8.673903,1.604394,-5.633693,-3.962602,-8.943674,-5.030699,-9.808561,4.929861,6.870709,3.933110,-6.578723,8.741434,-7.785699,3.845205,-2.299188,9.812343,5.934774,9.682844,3.728400,-1.763883,2.485801,-7.281810,-0.043782,-1.012774,-5.781450,4.894692,4.583451,6.816657,-0.198056,-1.253312,-5.331809,-3.276544,-9.112263,0.008576,1.334952,9.467645,-8.874786,-5.252743,1.126007,8.552653,9.629642,-2.289339,7.872402,-2.213150,-5.881059,-5.405013,-2.206027,-4.677997,-8.060540,-3.603225,8.665064,-3.934802,-8.211245,-3.153556,-5.407878,7.559554,-3.890629,-7.360158,-2.221507,5.869361,7.863694,4.208501,4.834591,-8.695163,-3.809049,3.114506,-9.246889,7.212765,6.698792,-5.393440,2.738105,7.628707,7.794291,-4.957292,-8.508215,-3.506875,3.147683,-8.185202,2.359673,2.502737,4.656570,-5.261808,-6.338372,-0.830710,2.471163,3.405220,8.038177,1.961663,-0.344340,-6.691874,9.162966,-6.252833,-5.587458,3.454932,3.385830,5.083168,-4.486871,-8.927926,-5.328524,-2.367755,3.528691,-3.988682,-1.918125,4.155183,6.478782,0.785848,-7.857832,-9.453422,-1.746615,2.161979,-7.153186,8.246415,-2.632672,7.945471,-0.118763,-0.603780,-4.800096,-4.955032,-2.319916,7.168555,5.838953,4.500513,4.566405,8.320166,0.302624,3.044187,5.025947,-6.240578,2.246304,-8.005383,4.523574,4.276256,-2.109927,-1.408054,-4.185520,-0.447091,6.538466,5.192627,0.184394,-5.569679,6.596548,-6.408188,-2.567216,-9.262334,3.786618,-5.983431,-5.358276,-3.112406,5.004598,1.953719,-5.143467,-3.603532,5.643513,-8.024268,-2.531608,-4.837908,0.949096,-3.263124,2.404701,8.319450,-7.340394,-2.131445,8.407982,9.283726,3.980219,-2.091749,-0.093608,0.200920,0.080653,4.456828,4.632246,8.111817,-6.771375,-4.721462,8.973169,-1.594776,7.013831,-9.680541,0.156974,-2.597094,-7.835587,6.831741,1.091826,4.147989,-5.509343,-9.253282,-8.069470,-2.988132,0.926646,-7.845941,-2.725512,-9.827365,5.232235,6.347442,-8.691383,-2.960378,-1.133187,-3.323003,-9.655948,-6.850532,-7.791335,-3.525644,9.155814,7.015495,-5.617586,4.012207,9.285167,-5.519834,-4.543205,6.351477,2.627148,4.740568,1.339152,9.553282,3.142217,3.971712,-9.046275,-9.145597,-0.005909,7.535504,-1.897240,-2.790134,-7.135998,-0.069238,-6.279433,-4.433492,9.872969,7.395600,9.237764,2.847234,2.158945,-7.882221,-5.670685,1.346473,-1.522377,3.140628,8.646286,-9.656614,3.680148,-1.190930,3.500635,9.765621,-4.163183,5.668157,-6.061978,2.084091,2.162422,3.597123,-0.059617,7.385460,8.166943,6.641843,-1.494875,6.721818,4.591122,7.992608,-9.127002,6.854661,1.235434,-1.183797,9.168321,9.010829,7.582953,0.190031,2.079948,-2.718105,0.400768,4.373533,-4.473347,0.248790,-0.385602,-0.354518,-9.214446,-2.652192,-9.200217,5.073793,-3.802776,6.427669,6.710602,2.527136,2.720735,-7.671852,-0.624583,-5.588491,-6.695399,-9.454740,-9.973787,5.683196,-4.130798,-4.195488,-6.770739,1.353629,7.490092,-6.041919,9.668143,3.924382,0.299145,1.458548,-6.064040,-0.810022,-9.752130,9.067344,8.471641,7.463912,-6.221479,3.888459,9.341687,1.635596,7.485010,1.673781,-9.973363,6.191390,-3.239509,3.797431,-0.559786,1.224116,-0.288382,4.789578,0.283485,6.050640,-3.866919,-2.151776,1.137020,-9.003503,2.413834,2.663403,2.928612,-2.548362,-2.652136,-2.529063,0.927767,6.045985,-9.624883,-2.337633,5.618615,-0.379177,-3.255843,4.021264,-1.707024,-0.611250,2.058845,7.826315,-5.471456,6.324673,2.040380,8.219130,7.094323,-3.311465,2.030080,-6.299353,5.789942,-3.578049,8.520300,7.175575,-2.926127,-6.369738,-8.174650,-5.592316,2.301072,1.707343,3.471507,9.839324,0.175825,-4.108119,-3.572859,8.016205,3.550182,1.789991,8.569305,8.401691,-7.720972,4.256878,5.121455,2.555785,4.467042,-3.773983,4.800895,-2.343704,5.968244,6.575162,2.797868,0.572604,6.831082,2.034609], dtype = "float32")#candidate|6097|(630,)|const|float32
call_6096 = func_3496_call(relay.reshape(const_6097.astype('float32'), [6, 15, 7]))
call_6098 = func_3496_call(relay.reshape(const_6097.astype('float32'), [6, 15, 7]))
output = relay.Tuple([call_6086,call_6096,const_6097,])
output2 = relay.Tuple([call_6087,call_6098,const_6097,])
func_6105 = relay.Function([], output)
mod['func_6105'] = func_6105
mod = relay.transform.InferType()(mod)
mutated_mod['func_6105'] = func_6105
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6105_call = mutated_mod.get_global_var('func_6105')
call_6106 = func_6105_call()
output = call_6106
func_6107 = relay.Function([], output)
mutated_mod['func_6107'] = func_6107
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6199 = relay.var("var_6199", dtype = "float32", shape = (3, 5, 11))#candidate|6199|(3, 5, 11)|var|float32
uop_6200 = relay.tan(var_6199.astype('float32')) # shape=(3, 5, 11)
output = relay.Tuple([uop_6200,])
output2 = relay.Tuple([uop_6200,])
func_6210 = relay.Function([var_6199,], output)
mod['func_6210'] = func_6210
mod = relay.transform.InferType()(mod)
mutated_mod['func_6210'] = func_6210
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6211 = relay.var("var_6211", dtype = "float32", shape = (3, 5, 11))#candidate|6211|(3, 5, 11)|var|float32
func_6210_call = mutated_mod.get_global_var('func_6210')
call_6212 = func_6210_call(var_6211)
output = call_6212
func_6213 = relay.Function([var_6211], output)
mutated_mod['func_6213'] = func_6213
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5067_call = mod.get_global_var('func_5067')
func_5068_call = mutated_mod.get_global_var('func_5068')
call_6217 = func_5067_call()
call_6218 = func_5067_call()
var_6224 = relay.var("var_6224", dtype = "uint64", shape = (546, 2))#candidate|6224|(546, 2)|var|uint64
bop_6225 = relay.subtract(call_6217.astype('uint32'), relay.reshape(var_6224.astype('uint32'), relay.shape_of(call_6217))) # shape=(546, 2)
bop_6228 = relay.subtract(call_6218.astype('uint32'), relay.reshape(var_6224.astype('uint32'), relay.shape_of(call_6218))) # shape=(546, 2)
var_6236 = relay.var("var_6236", dtype = "uint64", shape = (546, 2))#candidate|6236|(546, 2)|var|uint64
bop_6237 = relay.floor_divide(var_6224.astype('float64'), relay.reshape(var_6236.astype('float64'), relay.shape_of(var_6224))) # shape=(546, 2)
output = relay.Tuple([bop_6225,bop_6237,])
output2 = relay.Tuple([bop_6228,bop_6237,])
func_6240 = relay.Function([var_6224,var_6236,], output)
mod['func_6240'] = func_6240
mod = relay.transform.InferType()(mod)
var_6241 = relay.var("var_6241", dtype = "uint64", shape = (546, 2))#candidate|6241|(546, 2)|var|uint64
var_6242 = relay.var("var_6242", dtype = "uint64", shape = (546, 2))#candidate|6242|(546, 2)|var|uint64
output = func_6240(var_6241,var_6242,)
func_6243 = relay.Function([var_6241,var_6242,], output)
mutated_mod['func_6243'] = func_6243
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6105_call = mod.get_global_var('func_6105')
func_6107_call = mutated_mod.get_global_var('func_6107')
call_6340 = relay.TupleGetItem(func_6105_call(), 2)
call_6341 = relay.TupleGetItem(func_6107_call(), 2)
output = relay.Tuple([call_6340,])
output2 = relay.Tuple([call_6341,])
func_6346 = relay.Function([], output)
mod['func_6346'] = func_6346
mod = relay.transform.InferType()(mod)
mutated_mod['func_6346'] = func_6346
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6346_call = mutated_mod.get_global_var('func_6346')
call_6347 = func_6346_call()
output = call_6347
func_6348 = relay.Function([], output)
mutated_mod['func_6348'] = func_6348
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3216_call = mod.get_global_var('func_3216')
func_3218_call = mutated_mod.get_global_var('func_3218')
call_6354 = relay.TupleGetItem(func_3216_call(), 1)
call_6355 = relay.TupleGetItem(func_3218_call(), 1)
var_6356 = relay.var("var_6356", dtype = "bool", shape = (2, 15, 6))#candidate|6356|(2, 15, 6)|var|bool
bop_6357 = relay.floor_mod(call_6354.astype('float64'), relay.reshape(var_6356.astype('float64'), relay.shape_of(call_6354))) # shape=(2, 15, 6)
bop_6360 = relay.floor_mod(call_6355.astype('float64'), relay.reshape(var_6356.astype('float64'), relay.shape_of(call_6355))) # shape=(2, 15, 6)
bop_6370 = relay.equal(bop_6357.astype('bool'), relay.reshape(var_6356.astype('bool'), relay.shape_of(bop_6357))) # shape=(2, 15, 6)
bop_6373 = relay.equal(bop_6360.astype('bool'), relay.reshape(var_6356.astype('bool'), relay.shape_of(bop_6360))) # shape=(2, 15, 6)
func_4669_call = mod.get_global_var('func_4669')
func_4671_call = mutated_mod.get_global_var('func_4671')
call_6375 = relay.TupleGetItem(func_4669_call(), 0)
call_6376 = relay.TupleGetItem(func_4671_call(), 0)
uop_6379 = relay.asinh(call_6354.astype('float32')) # shape=(2, 15, 6)
uop_6381 = relay.asinh(call_6355.astype('float32')) # shape=(2, 15, 6)
bop_6392 = relay.bitwise_or(uop_6379.astype('int8'), relay.reshape(bop_6357.astype('int8'), relay.shape_of(uop_6379))) # shape=(2, 15, 6)
bop_6395 = relay.bitwise_or(uop_6381.astype('int8'), relay.reshape(bop_6360.astype('int8'), relay.shape_of(uop_6381))) # shape=(2, 15, 6)
func_708_call = mod.get_global_var('func_708')
func_712_call = mutated_mod.get_global_var('func_712')
var_6398 = relay.var("var_6398", dtype = "uint64", shape = (1080,))#candidate|6398|(1080,)|var|uint64
call_6397 = func_708_call(relay.reshape(var_6398.astype('uint64'), [8, 15, 9]), relay.reshape(var_6398.astype('uint64'), [8, 15, 9]), )
call_6399 = func_708_call(relay.reshape(var_6398.astype('uint64'), [8, 15, 9]), relay.reshape(var_6398.astype('uint64'), [8, 15, 9]), )
output = relay.Tuple([bop_6370,call_6375,bop_6392,call_6397,var_6398,])
output2 = relay.Tuple([bop_6373,call_6376,bop_6395,call_6399,var_6398,])
func_6404 = relay.Function([var_6356,var_6398,], output)
mod['func_6404'] = func_6404
mod = relay.transform.InferType()(mod)
mutated_mod['func_6404'] = func_6404
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6404_call = mutated_mod.get_global_var('func_6404')
var_6406 = relay.var("var_6406", dtype = "bool", shape = (2, 15, 6))#candidate|6406|(2, 15, 6)|var|bool
var_6407 = relay.var("var_6407", dtype = "uint64", shape = (1080,))#candidate|6407|(1080,)|var|uint64
call_6405 = func_6404_call(var_6406,var_6407,)
output = call_6405
func_6408 = relay.Function([var_6406,var_6407,], output)
mutated_mod['func_6408'] = func_6408
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6428 = relay.var("var_6428", dtype = "float32", shape = ())#candidate|6428|()|var|float32
const_6429 = relay.const([[[-4.906006],[3.146865]],[[1.621067],[-7.247855]]], dtype = "float32")#candidate|6429|(2, 2, 1)|const|float32
bop_6430 = relay.mod(var_6428.astype('float32'), const_6429.astype('float32')) # shape=(2, 2, 1)
func_4733_call = mod.get_global_var('func_4733')
func_4738_call = mutated_mod.get_global_var('func_4738')
const_6439 = relay.const([-4,-7,6,6,-7,-7,-10,-3], dtype = "int8")#candidate|6439|(8,)|const|int8
const_6440 = relay.const([3.118961,-4.523285,5.452446,3.856844,-8.565316,8.783136,-6.252972,7.960594,3.907223,-2.198666,4.493270,4.216345,3.761404,-9.358243,4.083826,-1.895399,5.690159,-0.637338,4.971360,2.974979,-7.014575,-0.940343,-5.853131,3.940530,-0.922761,3.270410,6.149819,7.097413,-4.918886,7.734769,-5.265628,-0.411165,5.186225,-8.339015,3.516622,-2.213365,-2.486765,-4.840682,-4.137246,-3.565399,1.413783,6.847080,3.066644,-4.333153,-4.527050,8.051890,8.012985,9.811097,-3.979106,-2.273167,4.054053,5.207824,5.234826,-5.648293,9.360169,-8.304772,4.991793,6.171129,0.527324,-2.578022,-8.351886,-9.468698,-4.379918,-3.169600,8.625621,-6.900740,9.541395,-9.472961,2.869842,5.890126,-2.468575,-3.832948,8.555076,-3.385222,1.849212,-4.047140,-6.688995,9.658497,-4.765274,-0.390244,-6.492463,9.954457,-4.385249,7.155845,-7.196040,3.728534,-8.250965,-9.034144,4.522273,-3.240848,-3.061963,-0.727702,0.269279,3.308009,3.245666,6.288355,-5.922624,-5.381721,1.438232,-6.396723,-8.721252,-2.093685,2.898178,-3.499385,4.115868,7.103764,8.875604,-0.178780,-1.791439,5.180857,2.224326,4.148183,0.494907,3.594570,6.065050,-0.575964,0.089077,1.628356,-4.338580,7.956268,-8.574056,6.036360,1.877572,7.976692,8.076843,5.594284,0.536024,-5.574769,-8.332884,5.047762,7.188228,2.479498,-8.945649,-6.649935,-7.388613,-1.750631,-4.603092,0.245210,-7.961652,1.235210,6.861418,-5.785003,-7.188295,1.530004,-2.620602,-4.960939,-6.812232,-0.460764,-5.553115,7.504987,2.406179,-0.072200,1.570021,7.568954,-8.800286,3.708448,8.558738,-2.131983,-9.786187,0.349931,9.466347,3.453421,3.467220,-4.373475,-3.159159,0.325585,-5.109214,9.353549,7.956043,1.638630,-0.857388,8.801733,-0.765916,5.786306,0.261864,-4.334105,-4.869104,-1.460430,7.116244,-5.167111,2.942629,5.116728,5.143386,6.276291,2.011469,-0.597913,-9.577534,-8.701263,1.274202,0.325226,-8.848975,6.008325,0.421442,-8.379960,6.869954,-0.215214,-1.657189,-3.525717,7.197814,-2.842769,-7.315418,-3.374100,-2.662729,6.338563,-1.015326,-9.312713,-7.994820,9.673771,-5.212902,1.372141,-4.677416,-1.102638,3.445309,-3.158013,-8.757980,-9.833202,1.542391,7.561077,0.048647,-4.146556,-6.812329,-1.144657,-5.530641,-8.470772,1.144837,-2.130797,-0.093402,2.956890,1.696763,-8.810546,-2.074721,-3.039835,4.191883,-6.342218,0.653791,-8.666896,5.809258,-1.704228,-2.676270,-2.614257,-4.952941,-9.495590,9.429689,1.711571,5.660527,3.697564,-7.824548,-3.293081,8.186137,-8.274839,9.749977,-4.376284,5.185991,-1.938425,-5.716125,7.001286,-1.745347,9.686156,6.270899,-1.549976,-7.097169,9.818463,-0.747704,-8.057064,-7.607548,-6.291544,3.807674,-3.600185,5.406704,-0.586940,-2.014060,0.102643,3.813895,-4.459426,0.708413,-0.452408,-6.038262,-0.973504,7.792882,0.114531,1.825463,3.506543,-5.117712,5.145939,-4.638286,3.461880,3.309596,2.436089,5.591348,-2.644108,9.075549,-3.722683,-5.794911,-0.895541,4.686583,8.942854,4.943791,0.973023,-6.870645,9.269323,4.595459,8.114183,7.380620,2.630690,9.642641,5.635317,-6.956139,-7.746113,-7.202497,-5.689051,-7.221736,-1.868215,-1.073358,-6.805881,-3.928320,-3.295675,-2.067744,7.864791,-1.469429,9.433088,-4.133806,-6.802800,-2.939873,2.260802,1.930391,6.351954,6.979509,1.134229,4.063177,-8.420262,-7.667541,2.041991,2.924097,-6.552772,-3.443368,4.145602,3.836853,1.511026,-7.218380,-5.515013,7.121964,-4.994547,-0.746703,-5.905877,8.547852,3.812188,0.064952,-3.374746,5.102747,8.076835,-8.973992,-3.147386,-3.337037,-0.475751,-1.928039,1.899400,-8.186156,-2.565495,4.591636,-2.010254,-2.797917,-3.328321,9.932065,-9.676256,-2.705100,-6.116245,-7.174873,-7.945834,-4.378507,9.663718,9.556129,-4.534145,-7.934466,-8.104045,-5.400406,-7.755021,9.439634,-1.330844,-9.810486,2.133376,-8.343205,9.049277,7.569439,-2.019309,-1.749611,-9.714608,-0.086409,0.825814,-6.869063,-2.916036,8.060667,3.049020,-8.296472,4.342702,-8.446561,6.527849,-4.264667,7.436295,-0.626777,2.433183,2.523122,-1.141024,8.237158,4.465194,-7.196468,-9.576236,-9.273585,-6.992525,6.526858,1.382924,-4.127752,4.316933,-2.395535,-9.523277,-5.245140,2.857691,-0.691509,0.552464,-7.977418,2.367369,-6.575565,-1.850794,8.056694,3.990434,-1.206669,-5.338097,6.575775,9.094444,-0.288281,-5.812939,7.911562,-5.740625,-7.453715,3.977691,-0.445359,1.323863,-6.370430,-6.254659,-8.726649,8.070545,-0.852000,7.878495,1.142755,6.523364,1.221118,-2.053264,-8.094420,-4.679047,-5.535388,8.488547,-0.215765,4.628034,-2.753939,-1.608228,-0.419629,4.791155,6.349936,-4.767672,1.033252,-9.861177,-3.033723,3.828641,0.337440,8.106871,-4.879563,8.407206,9.043921,4.036611,-8.732527,-7.694316,7.358837,9.936973,-0.531197,1.226316,-8.372922,-3.817397,-9.950156,7.436770,9.237897,2.714784,7.933550,-7.452144,-5.687415,-9.000231,9.214751,3.557997,-6.603730,8.396347,-9.452238,-0.409260,-7.947545,1.558845,-0.495098,2.541298,2.627872,0.377641,2.864384,4.416055,-0.276921,-9.471893,-1.096111,-8.543982,-0.222118,-4.172147,6.989435,7.139427,5.366885,-2.537648,2.947178,-1.953937,3.162404,3.314863,9.036171,-5.739367,-9.188983,-4.227110,-7.746828,2.422685,-9.543361,8.604599,-7.120826,-6.450547,-2.817475,-4.627434,-9.153777,-7.003846,-5.421473,-6.711737,1.160515,6.951832,8.279558,-5.550262,5.443610,-9.290608,3.172778,4.814920,9.464144,-8.543865,-2.523197,9.790368,0.904882,-4.213686,-2.867239,0.139926,1.605549,0.459597,-2.644161,-8.702072,-2.225187,-7.666210,3.266219,8.252963,0.912987,-2.002350,-9.985858,-7.074397,3.808833,-8.491135,3.732374,4.254121,-7.869663,9.740060,5.047466,-1.789245,-1.900982,2.311722,-5.684257,-4.328497,-6.392513,-5.509442,4.346171,-5.398995,5.888501,-5.423849,7.404024,-4.967518,-5.608731,-7.673623,7.683029,3.196893,5.351206,6.865850,-6.763748,9.105594,-3.228011,7.229387,-4.605579,6.288003,-8.877576,-2.157073,5.481614,-6.817763,-2.318638,8.650016,4.332734,-7.611026,-3.461134,8.003468,1.156698,3.624953,-0.172785,7.903588,3.916344,-8.129196,-5.145871,6.768975,4.643680,-0.878013,-5.435999,-9.535852,-2.380632,9.364849,-6.738824,6.930140,3.579068,-9.678812,-5.583064,3.227109,-1.539273,7.892977,-1.140856,-5.371938,-2.050951,-9.368309,5.394390,4.816760,2.142867,-3.943631,6.634391,8.639173], dtype = "float32")#candidate|6440|(630,)|const|float32
call_6438 = relay.TupleGetItem(func_4733_call(relay.reshape(const_6439.astype('int8'), [8, 1]), relay.reshape(const_6439.astype('int8'), [8, 1]), relay.reshape(const_6440.astype('float32'), [10, 63]), ), 3)
call_6441 = relay.TupleGetItem(func_4738_call(relay.reshape(const_6439.astype('int8'), [8, 1]), relay.reshape(const_6439.astype('int8'), [8, 1]), relay.reshape(const_6440.astype('float32'), [10, 63]), ), 3)
uop_6443 = relay.sigmoid(call_6438.astype('float32')) # shape=(65, 4)
uop_6445 = relay.sigmoid(call_6441.astype('float32')) # shape=(65, 4)
func_679_call = mod.get_global_var('func_679')
func_682_call = mutated_mod.get_global_var('func_682')
var_6447 = relay.var("var_6447", dtype = "float32", shape = (432,))#candidate|6447|(432,)|var|float32
call_6446 = relay.TupleGetItem(func_679_call(relay.reshape(var_6447.astype('float32'), [3, 12, 12])), 1)
call_6448 = relay.TupleGetItem(func_682_call(relay.reshape(var_6447.astype('float32'), [3, 12, 12])), 1)
var_6449 = relay.var("var_6449", dtype = "float32", shape = (65, 4))#candidate|6449|(65, 4)|var|float32
bop_6450 = relay.divide(uop_6443.astype('float64'), relay.reshape(var_6449.astype('float64'), relay.shape_of(uop_6443))) # shape=(65, 4)
bop_6453 = relay.divide(uop_6445.astype('float64'), relay.reshape(var_6449.astype('float64'), relay.shape_of(uop_6445))) # shape=(65, 4)
const_6454 = relay.const([[6.357803,3.918944,7.054059,-9.174040],[-6.234835,-9.811695,-4.399566,5.316209],[4.547824,2.443419,-8.671693,-4.158006],[-1.600972,-6.819169,5.394154,2.215652],[5.139060,2.466550,2.299308,-4.655779],[3.411811,-5.320798,1.323033,-9.445440],[3.937754,-4.138038,8.065137,9.842693],[6.306540,5.918485,6.746935,0.316547],[-2.269667,-4.294527,8.415248,0.496251],[8.589808,-5.261706,1.956696,7.556623],[-7.228421,-6.584093,6.070528,-8.299098],[5.655016,1.284652,-0.867350,-6.037889],[8.359021,-5.945628,3.735398,-2.934621],[-8.649430,3.459660,0.106952,-4.903451],[9.562554,8.653790,9.501477,5.447699],[-7.951191,1.802254,-9.860522,0.466746],[-0.459676,-0.981688,6.712908,7.667110],[4.195320,-9.764298,3.581917,-6.574875],[0.987192,8.521753,2.517248,-1.073449],[-5.798094,6.618760,9.705272,-6.988138],[-1.985177,4.158639,9.166336,3.167634],[0.025420,-6.589748,7.205936,9.570517],[-9.833604,3.895188,-3.801616,6.531407],[5.992797,9.127265,6.212793,0.575758],[-1.232162,-2.686668,5.530145,-1.969331],[7.045150,0.562133,8.114162,6.715029],[-1.195316,-9.912729,-6.568836,0.816241],[-1.960779,-5.251679,-2.185187,4.845890],[-2.773111,3.899543,-1.453672,5.183729],[-9.284780,-1.484697,6.969795,3.785272],[-6.747579,-4.976525,-0.968365,-8.120157],[-9.135626,-7.962952,-4.975506,2.902124],[6.002565,-1.894987,-3.334778,1.108879],[4.729500,0.526871,-7.166489,-5.137547],[-2.072330,0.193483,-4.228102,9.143609],[9.964947,6.379326,3.598309,-3.774943],[0.615070,-9.565284,-3.083356,-7.732289],[3.780418,2.333915,6.818900,-4.627685],[-1.397764,-3.767562,-1.054771,-8.330759],[2.040921,0.605467,-2.666849,-9.693649],[4.140105,-1.024636,-4.751004,8.485673],[-5.085237,4.917826,-3.003068,9.928576],[-7.838672,5.933679,8.640599,-3.513169],[2.408344,2.591505,9.360324,-3.986658],[5.489805,5.305940,1.112836,7.527154],[3.506875,1.157964,5.925320,-1.844033],[-6.554963,-0.145323,1.578653,8.220340],[-4.120506,4.594645,-6.152166,-0.355505],[-0.618601,1.648295,-8.461112,6.841049],[-6.890976,3.244828,0.300189,1.690793],[6.588295,8.784671,-0.913632,-4.288611],[4.460692,-3.393685,9.000474,7.308464],[-8.389335,0.063884,-2.296028,-1.854760],[-6.418740,-3.468102,-4.898933,8.900269],[9.594678,-0.285340,7.892904,-9.165984],[-7.623320,-5.029742,-7.516179,3.041335],[0.929218,8.994131,9.241004,-4.764575],[-7.381227,7.324283,-9.741500,-5.998744],[3.745880,2.250648,9.028400,-1.316615],[-4.697376,1.860449,-3.066756,-4.179783],[-5.732462,8.034075,2.090904,4.943372],[-7.845414,-3.491618,7.194585,-5.417504],[-9.776112,-6.980413,-3.957446,3.334247],[4.132488,9.369103,-3.275470,3.341385],[0.355974,-8.750474,-7.210484,-4.861906]], dtype = "float64")#candidate|6454|(65, 4)|const|float64
bop_6455 = relay.bitwise_xor(bop_6450.astype('int64'), relay.reshape(const_6454.astype('int64'), relay.shape_of(bop_6450))) # shape=(65, 4)
bop_6458 = relay.bitwise_xor(bop_6453.astype('int64'), relay.reshape(const_6454.astype('int64'), relay.shape_of(bop_6453))) # shape=(65, 4)
func_3881_call = mod.get_global_var('func_3881')
func_3883_call = mutated_mod.get_global_var('func_3883')
call_6465 = relay.TupleGetItem(func_3881_call(relay.reshape(const_6440.astype('float32'), [630,])), 2)
call_6466 = relay.TupleGetItem(func_3883_call(relay.reshape(const_6440.astype('float32'), [630,])), 2)
func_5434_call = mod.get_global_var('func_5434')
func_5435_call = mutated_mod.get_global_var('func_5435')
call_6473 = relay.TupleGetItem(func_5434_call(), 0)
call_6474 = relay.TupleGetItem(func_5435_call(), 0)
output = relay.Tuple([bop_6430,const_6439,const_6440,call_6446,var_6447,bop_6455,call_6465,call_6473,])
output2 = relay.Tuple([bop_6430,const_6439,const_6440,call_6448,var_6447,bop_6458,call_6466,call_6474,])
func_6477 = relay.Function([var_6428,var_6447,var_6449,], output)
mod['func_6477'] = func_6477
mod = relay.transform.InferType()(mod)
var_6478 = relay.var("var_6478", dtype = "float32", shape = ())#candidate|6478|()|var|float32
var_6479 = relay.var("var_6479", dtype = "float32", shape = (432,))#candidate|6479|(432,)|var|float32
var_6480 = relay.var("var_6480", dtype = "float32", shape = (65, 4))#candidate|6480|(65, 4)|var|float32
output = func_6477(var_6478,var_6479,var_6480,)
func_6481 = relay.Function([var_6478,var_6479,var_6480,], output)
mutated_mod['func_6481'] = func_6481
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6521 = relay.var("var_6521", dtype = "uint8", shape = ())#candidate|6521|()|var|uint8
var_6522 = relay.var("var_6522", dtype = "uint8", shape = (4, 16, 1))#candidate|6522|(4, 16, 1)|var|uint8
bop_6523 = relay.logical_xor(var_6521.astype('uint8'), var_6522.astype('uint8')) # shape=(4, 16, 1)
func_2336_call = mod.get_global_var('func_2336')
func_2342_call = mutated_mod.get_global_var('func_2342')
const_6527 = relay.const([5.084163,-1.192757,-7.423506,5.286546,4.403567,5.191339,0.153005,9.130701,-2.961535,-2.368273,-5.010419,-3.774908,-4.990383,-8.420126,-6.913989,7.562502,3.472429,5.598983,4.029237,-9.381934,-0.769655,1.985508,7.579911,-7.905227,-7.602891,-5.001799,6.852352,-5.615172,6.350550,9.668824,8.175016,-2.381958,-4.256036,-3.228846,-3.206184,-2.273914,-7.012387,8.499395,8.516516,2.179478,-2.543292,-2.122268,7.140589,9.798627,1.171201,-1.299576,4.540376,7.271366,9.929220,-9.731168,0.726809,-6.707375,-5.832210,7.736622,-4.054131,7.874932,-5.550522,-0.909791,-6.653452,8.346651,-3.483686,-8.547505,-8.021292,7.222048,9.958304,4.967018,-3.964913,-5.618919,1.334309,-0.893242,6.340227,1.972643,-6.462607,2.395030,6.098264,-3.115372,-3.350512,-4.380653,1.473959,-0.848630,2.981256,4.300596,-0.620739,-9.311616,3.850614,4.522340,-9.796971,1.172922,-2.964599,6.145769,8.089516,9.149978,6.698683,-1.352011,3.008462,8.952455,-2.505500,-8.076530,7.409704,6.207467,-2.039866,7.644565,8.810037,0.811815,7.299014,2.200190,-7.971493,-8.149651,-1.329383,-8.267707,-5.018646,-3.472290,-5.724582,2.533007,7.008386,6.191439,6.454762,-2.250364,7.626544,-4.215852,8.974651,5.710859,-9.844545,3.145686,-3.116173,-7.031557,5.666674,9.435558,1.157401,5.826859,2.225865,-3.185959,3.790959,7.561042,-7.645424,6.228780,-8.419771,-8.121721,9.726466,7.477549,7.491122,-9.585566,9.830274,7.681666,-9.039963,4.384342,1.939528,-3.900173,1.182779,2.941315,2.335365,4.593270,9.563613,-6.232381,9.185774,-5.617730,6.933597,3.118767,-0.403792,9.662851,-9.559652,7.148209,2.434720,-2.561330,9.434516,-8.352673,9.626941,-7.562592,4.388987,8.627366,7.388686,-7.339300,-0.548540,6.723133,-9.241050,9.168421,4.560908,-9.597024,-0.802141,2.975239,-3.743981,-2.387718,6.326127,-9.694714,4.641234,8.890926,9.870036,7.572525,-9.343631,-0.065232,6.972728,2.377899,-9.903763,4.796964,-0.015356,3.396083,7.871726,-6.250412,-7.327219,5.325615,-3.475176,-1.112316,-8.041206,9.140193,-3.546678,8.769970,0.245423,8.091635,-9.650497,-1.404749,0.684510,9.513310,8.833937,-4.708459,-0.778555,6.949158,-8.384334,-6.083802,9.307487,2.134047,-9.813572,-3.275783,6.569688,1.510458,-7.655298,7.882885,0.121380,-7.407470,-5.414614,8.791163,8.030408,-9.818266,-9.638949,-0.745557,-9.083909,-8.417290,6.744986,8.611469,-1.966778,-0.357269,-7.371619,-9.723461,2.083930,5.454923,5.767984,-6.503677,3.958081,9.556888,-4.287001,-3.792244,5.152514,5.473514,0.274923,-7.013112,1.162334,-1.189433,-5.616412,-2.784239,-7.971108,7.258590,-6.103809,-8.800110,-4.356548,8.069740,3.840779,-1.221203,-9.321778,7.687374,-5.199316,8.421403,5.303031,0.398806,6.457104,0.088875,0.548181,6.973302,-2.382812,-2.159643,5.703373,3.872068,0.149778,-3.378345,8.758849,4.590500,9.876961,-3.814208,-3.028823,-9.415745,5.529932,9.227223,-4.208629,-6.419116,-5.018309,-1.265703,-6.146241,7.118161,0.344419,-6.722685,6.710824,-7.699220,-3.183431,4.426482,-3.910652,-4.679973,5.429916,6.122384,4.475700,4.282195,-1.282911,3.418758,0.960472,-9.747472,-4.707940,-1.599657,-9.768554,-7.540590,4.551658,0.616868,7.836598,2.736564,-9.711215,3.440819,-7.852687,4.195890,-8.766857,1.534965,3.467291,-3.674587,-2.295439,-4.143968,2.988148,-3.586142,-3.922345,-2.951587,7.128559,6.400434,-7.159753,4.441235,8.593659,8.510681,-7.012123,2.986566,-2.647784,8.463864,-6.038481,2.255352,9.334166,-4.268178,-8.628851,9.367352,-1.102025,7.546535,5.696411,2.230473,5.916855,-6.639362,-8.865727,-6.515532,0.999642,4.606953,7.894178,1.240840,-1.733566,-9.392081,0.966418,1.996230,-5.632926,-6.126509,3.767380,-6.871262,8.228086,-2.724181,9.486667,-4.632760,3.679312,-0.862489,6.555100,6.604312,-4.432721,-9.401049,1.366430,2.996673,-9.457655,-1.957981,-7.957367,-6.760684,3.830033,3.650730,8.648540,-4.606807,7.269597,9.131050,-7.238419,3.368343,5.627250,-4.533797,7.000876,-8.796735,-1.780669,6.248927], dtype = "float32")#candidate|6527|(400,)|const|float32
var_6528 = relay.var("var_6528", dtype = "float32", shape = (315,))#candidate|6528|(315,)|var|float32
var_6529 = relay.var("var_6529", dtype = "float64", shape = (36,))#candidate|6529|(36,)|var|float64
call_6526 = relay.TupleGetItem(func_2336_call(relay.reshape(const_6527.astype('float32'), [10, 8, 5]), relay.reshape(const_6527.astype('float32'), [10, 8, 5]), relay.reshape(var_6528.astype('float32'), [1, 315]), relay.reshape(var_6529.astype('float64'), [36,]), ), 11)
call_6530 = relay.TupleGetItem(func_2342_call(relay.reshape(const_6527.astype('float32'), [10, 8, 5]), relay.reshape(const_6527.astype('float32'), [10, 8, 5]), relay.reshape(var_6528.astype('float32'), [1, 315]), relay.reshape(var_6529.astype('float64'), [36,]), ), 11)
output = relay.Tuple([bop_6523,call_6526,const_6527,var_6528,var_6529,])
output2 = relay.Tuple([bop_6523,call_6530,const_6527,var_6528,var_6529,])
func_6531 = relay.Function([var_6521,var_6522,var_6528,var_6529,], output)
mod['func_6531'] = func_6531
mod = relay.transform.InferType()(mod)
mutated_mod['func_6531'] = func_6531
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6531_call = mutated_mod.get_global_var('func_6531')
var_6533 = relay.var("var_6533", dtype = "uint8", shape = ())#candidate|6533|()|var|uint8
var_6534 = relay.var("var_6534", dtype = "uint8", shape = (4, 16, 1))#candidate|6534|(4, 16, 1)|var|uint8
var_6535 = relay.var("var_6535", dtype = "float32", shape = (315,))#candidate|6535|(315,)|var|float32
var_6536 = relay.var("var_6536", dtype = "float64", shape = (36,))#candidate|6536|(36,)|var|float64
call_6532 = func_6531_call(var_6533,var_6534,var_6535,var_6536,)
output = call_6532
func_6537 = relay.Function([var_6533,var_6534,var_6535,var_6536,], output)
mutated_mod['func_6537'] = func_6537
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6542 = relay.const([[[2,-9,-9,4,-5,5,-6,-4,2],[-1,2,8,-5,6,6,-6,-7,9],[-4,-7,-4,4,5,-8,-9,-6,8]],[[-10,-10,3,-6,-6,3,-1,8,3],[-2,-1,-4,-4,9,5,5,-2,-4],[2,-5,-4,-4,3,-5,-2,-5,2]],[[4,-4,9,10,-5,-10,7,-8,2],[9,7,6,10,6,4,7,-7,1],[-8,-1,-1,-1,-5,-3,1,3,-3]],[[9,-8,1,7,10,-6,-2,-9,-9],[-4,-3,9,5,5,9,6,5,7],[8,1,7,-6,-4,-2,9,5,-4]],[[-5,6,7,-2,-5,9,-1,3,-4],[1,-1,-8,2,-8,7,-1,1,4],[3,2,-1,8,-9,-5,-5,-4,-5]],[[-1,10,-4,-3,9,2,-5,9,3],[-10,3,-3,-2,-9,7,9,-3,-9],[-5,-1,8,10,-10,-1,-1,5,-8]],[[-6,-7,7,1,1,-4,-2,-3,-3],[-8,-4,-2,-3,-6,8,-7,4,-1],[9,8,7,-10,-1,4,4,7,-2]],[[3,-3,-6,-2,-7,-8,-1,2,4],[-1,8,7,-6,-4,9,1,3,-10],[4,3,-10,2,7,1,3,8,-4]],[[3,-6,-2,-5,6,6,9,9,3],[-3,1,7,1,-3,-1,-4,6,1],[4,10,6,-7,8,-8,-5,4,-1]]], dtype = "int8")#candidate|6542|(9, 3, 9)|const|int8
const_6543 = relay.const([[[-3,4,1,-6,-7,6,9,7,10],[5,2,-2,-8,-7,-4,-5,-7,8],[8,-2,-10,-3,2,8,-5,5,-5]],[[-10,-1,-7,3,2,8,-8,6,1],[8,7,-5,-9,8,-8,5,5,4],[-1,-4,8,2,8,6,6,-5,-4]],[[-7,-9,-1,9,4,9,6,6,2],[-1,2,2,9,3,-10,4,-2,-4],[9,-8,-7,-10,7,-2,2,3,3]],[[3,5,7,3,-5,-4,9,-2,6],[-3,2,-4,9,2,-9,9,-8,-6],[-10,-8,-7,3,8,2,-5,-10,-5]],[[5,-10,7,-1,-9,-3,-8,7,9],[10,7,-7,10,4,-1,6,-2,-1],[4,-7,5,-10,-4,-8,-1,3,4]],[[7,-2,-6,9,-8,-8,1,-3,9],[-10,-10,5,7,4,-6,-2,2,3],[8,2,6,-5,4,-7,7,-3,4]],[[-2,-6,1,-5,-4,-6,7,-10,7],[10,2,1,8,-1,-2,-9,-3,3],[6,4,4,-6,3,-1,1,-4,7]],[[6,-3,6,-9,-4,-1,-6,-2,6],[2,9,7,8,3,-5,-9,-8,6],[-2,1,9,2,9,-10,1,7,9]],[[-2,-4,-1,7,-9,-4,9,4,-1],[-3,10,6,9,4,-7,-9,-10,-6],[-3,-10,-8,-7,-10,10,-4,4,-7]]], dtype = "int8")#candidate|6543|(9, 3, 9)|const|int8
bop_6544 = relay.multiply(const_6542.astype('int8'), relay.reshape(const_6543.astype('int8'), relay.shape_of(const_6542))) # shape=(9, 3, 9)
output = relay.Tuple([bop_6544,])
output2 = relay.Tuple([bop_6544,])
func_6547 = relay.Function([], output)
mod['func_6547'] = func_6547
mod = relay.transform.InferType()(mod)
mutated_mod['func_6547'] = func_6547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6547_call = mutated_mod.get_global_var('func_6547')
call_6548 = func_6547_call()
output = call_6548
func_6549 = relay.Function([], output)
mutated_mod['func_6549'] = func_6549
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5434_call = mod.get_global_var('func_5434')
func_5435_call = mutated_mod.get_global_var('func_5435')
call_6569 = relay.TupleGetItem(func_5434_call(), 0)
call_6570 = relay.TupleGetItem(func_5435_call(), 0)
output = call_6569
output2 = call_6570
func_6576 = relay.Function([], output)
mod['func_6576'] = func_6576
mod = relay.transform.InferType()(mod)
output = func_6576()
func_6577 = relay.Function([], output)
mutated_mod['func_6577'] = func_6577
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5434_call = mod.get_global_var('func_5434')
func_5435_call = mutated_mod.get_global_var('func_5435')
call_6584 = relay.TupleGetItem(func_5434_call(), 0)
call_6585 = relay.TupleGetItem(func_5435_call(), 0)
uop_6591 = relay.sigmoid(call_6584.astype('float32')) # shape=(2, 15, 6)
uop_6593 = relay.sigmoid(call_6585.astype('float32')) # shape=(2, 15, 6)
var_6599 = relay.var("var_6599", dtype = "float32", shape = (2, 15, 6))#candidate|6599|(2, 15, 6)|var|float32
bop_6600 = relay.subtract(uop_6591.astype('int64'), relay.reshape(var_6599.astype('int64'), relay.shape_of(uop_6591))) # shape=(2, 15, 6)
bop_6603 = relay.subtract(uop_6593.astype('int64'), relay.reshape(var_6599.astype('int64'), relay.shape_of(uop_6593))) # shape=(2, 15, 6)
func_3654_call = mod.get_global_var('func_3654')
func_3662_call = mutated_mod.get_global_var('func_3662')
var_6636 = relay.var("var_6636", dtype = "uint64", shape = (1080,))#candidate|6636|(1080,)|var|uint64
var_6637 = relay.var("var_6637", dtype = "uint64", shape = (1092,))#candidate|6637|(1092,)|var|uint64
const_6638 = relay.const([1.421374,8.967068,-9.296484,-6.593793,-6.638637,9.211523,-0.870060,-2.742817,0.785204,-8.830588,-6.747251,8.586247,-6.026975,5.691966,-9.882206,-5.060925,5.975703,-3.513980,0.023265,7.984561,-1.451415,0.909606,0.686487,-4.257552,2.495600,-7.810564,3.787996,-4.399187,6.128105,-6.733746,-9.881940,4.711929,-0.734949,-8.925119,-8.264549,-7.167799,-1.553338,1.395106,0.998554,-4.523352,-1.833011,-7.106091,-9.141777,2.858901,-0.931115,-7.074148,-7.742649,-3.115716,5.826086,-7.788578,-2.381561,-4.845052,2.681373,5.463425,1.598578,5.573624,-1.038857,6.268500,-1.926656,-3.544090,-1.724259,4.349536,-1.556712,-1.035846,-0.603733,2.490637,5.811574,6.378710,7.464305,2.602975,-5.760965,-7.387292,-3.008231,-3.879276,-2.313227,-0.370742,8.580306,1.024306,4.117511,6.715655,-3.131934,3.535900,-4.265174,-7.773243,4.396096,-3.260429,-0.366142,-7.891538,-4.903149,5.258656,5.212002,-5.439628,-1.215991,-0.228239,2.808428,3.781782,-4.490709,6.688885,-3.778824,-3.950733,8.240057,1.004212,6.922872,-6.984598,-7.887611,-4.817764,0.853692,-9.639229,-3.818035,-7.747025,-6.688605,4.170780,-5.841490,0.050275,1.499264,-5.472246,-6.463080,-6.573645,3.309891,-5.412937,8.423438,7.931045,9.670669,-0.028066,-2.081328,7.766631,-6.799978,0.197570,1.758230,3.923441,-0.470558,3.491631,-4.398757,-8.486638,-5.006257,4.738019,6.764867,8.558718,2.854925,-1.630208,-4.212367,-5.433999,-1.755740,2.335394,0.720127,-7.792260,-6.519772,-1.329245,-2.121725,-7.764993,6.389818,-6.239838,-8.629537,6.830515,3.524203,8.607236,8.337865,-5.905927,1.347700,3.084704,1.235979,-7.622890,6.904343,-7.521424,9.799123,0.165657,-7.489942,1.489217,3.115861,-8.598058,-1.278730,-9.499999,-3.234403,3.515853,-7.276891,-2.622934,5.352237,6.779298,2.645334,-4.254564,-0.196265,-4.051760,4.222326,9.237708,-5.430593,1.452098,4.295734,2.968313,-9.369751,4.354254,1.937589,-9.785495,-9.696104,-2.858822,2.824983,-4.193055,-3.475040,5.276272,-3.471099,-0.611170,-4.154003,9.915212,6.412452,9.556969,1.355117,-3.428356,-8.693381,6.865111,-6.522790,8.361298,-6.677299,1.221914,-0.458685,-6.687549,0.493419,4.825206,-3.246357,8.663725,5.324395,-1.941552,7.837074,-3.822302,3.663862,-6.123455,4.499193,-8.350664,6.179968,-6.133592,-9.320867,-3.834236,2.740096,6.098146,-4.285699,2.956799,-7.016424,-3.743556,-3.114577,9.121124,6.803363,4.755206,8.129955,-2.004299,7.864045,-7.383056,-7.426047,3.219740,6.466913,1.785903,1.468616,9.555239,-3.862027,6.759831,-4.132653,0.094807,-6.885751,-7.287570,-7.384068,-0.884436,6.125646,2.782591,0.396572,5.544035,4.447767,-4.907133,5.492050,-5.545093,3.372278,-2.415154,1.043771,4.156104,-2.205104,7.775897,8.419613,-0.739137,5.771482,-5.442225,-7.058393,0.530235,-7.891379,-5.012530,9.608689,-9.884233,-0.204624,6.831125,-4.716259,2.504796,-2.666979,8.373534,-4.428040,0.301945,0.050954,-0.310343,2.142513,5.415990,2.098622,-7.794018,4.175665,-9.101831,3.800534,5.312868,-5.900485,2.947988,1.998681,-6.166141,-1.747573,4.278973,3.806666,-3.524138,7.592797,8.861908,0.832101,-5.295318,-5.702279,1.744902,-5.723614,8.562267,3.588266,1.740331,5.731830,4.820640,7.273335,9.823017,-7.694296,-7.655144,4.388463,9.966450,4.576048,8.180147,-3.597658,5.765307,0.423624,8.658090,0.911517,-2.258819,6.784278,3.690779,-1.819283,3.431960,-1.156508,9.670213,3.541216,-5.390452,-0.152611,-1.611374,-4.532448,4.074925,-9.108950,4.398667,5.945618,-7.866051,4.246436,-2.138592,-5.452080,-5.329787,8.763636,3.150587,-7.717522,8.853267,2.459821,2.103474,0.330373,-3.648376,-3.006361,-6.667138,3.065952,-5.049619,-1.096204,-2.842637,-0.602479,2.411875,-4.598065,2.862630,-4.415656,5.184423,-1.512930,-8.334952,7.988445,-8.056943,-0.038869,-2.111453,0.361942,-8.450278,1.974467,6.278579,6.645724,7.338455,2.346367,4.401985,7.348638,6.852735,3.135076,2.222815,-4.902862,-6.740296,-5.262321,-5.895477,2.291107,0.469594,-3.354613,9.913667,7.692792,6.642069,3.683700,9.377579,-8.414799,-1.757308,-5.008296,-6.976817,1.322323,6.105227,0.093610,-9.839345,-1.803185,5.816882,-6.970023,-1.196158,6.017247,-4.524591,-9.123134,3.284782,-5.505343,7.014882,-1.185961,-7.137472,-8.560255,9.331424,4.484695,0.449178,-7.791229,-4.554264,5.851016,-3.611879], dtype = "float32")#candidate|6638|(432,)|const|float32
const_6639 = relay.const([-2,8,9,-9,-2,10,6,4,7,-1,6,1,-5,10,-1,7,-7,-5,-10,3,-3,-5,-4,3,5,-4,-1,2,-3,-7,5,-6,-1,-9,5,-3,4,-7,1,10,4,-8,-9,1,3,6,4,-2,-3,5,2,-6,8,-7,-3,-6,2,-2,-4,-5,-2,7,-3,10,10,1,3,-10,-3,9,-3,5,-7,-8,-1,-8,-4,-9,-3,-2,-4,5,-2,-8,2,-1,2,-2,-4,-2,7,-9,6,-9,-9,-2,-4,10,-1,-1,6,8,9,-9,-4,9,10,2,8,-4,2,9,10,2,-10,4,6,-5,6,9,4,3,5,-9,9,-1,-9,7,-2,3,-1,-9,3,-3,8,10,9,6,-9,9,10,8,-10,3,3,5,6,-2,-6,9,4,-5,-3,9,8,1,-9,9,6,-3,-9,5,-10,4,10,1,-3,9,7,-1,9,7,2,7,-10,-7,9,-2,-8,7,10,-4,-4,10,-4,-8,-2,10,3,-2,-10,-9,2,7,8,8,2,10,4,7,8,10,2,-5,-7,-5,-7,-5,-8,1,-8,5,-10,4,-4,1,-8,-5,10,5,-7,4,5,-5,2,10,-2,10,1,-5,6,-10,-8,5,2,-7,10,-3,1,-9,-1,-2,3,6,-7,10,8,8,-2,-7,-4,-5,6,-1,-5,1,-9,-10,7,8,-6,7,-8,-1,-1,9,3,-10,-2,-7,1,-3,-2,-7,-9,-3,5,1,7,6,-10,-1,-8,3,4,-5,7,9,2,-8,-1,10,-1,9,-2,-3,-1,7,-7,-9,2,8,-3,1,-3,8,8,-9,-8,-6,-7,-5,3,-8,-4,-3,-1,8,-10,-9,5,-8,-5,3,-7,-4,-8,-3,-10,-3,-7,1,-7,-2,-7,1,-8,7,6,-9,-1,-7,9,-1,-2,3,9,7,-4,-5,10,5,5,-3,3,3,-4,-4,10,-4,-8,-2,-5,-6,-8,10,-7,5,-8,-2,-2,-7,-3,1,-8,6,6,-4,-6,9,-1,1,-3,-9,-7,-4,-6,-5,-3,4,1,-7,9,7,-4,-9,-5,-3,7,1,-5,-10,5,-9,2,-10,-3,-2,-10,8,-3,-9,7,9,5,7,5,10,3,-10,3,9,-1,-6,10,-7,9,3,9,10,-2,-4,4,-8,-5,3,-2,-2,5,-4,-2,-10,-6,-8,3,-8,7,-1,-8,-10,-9,1,-7,-4,2,9,-10,4,-10,-10,-2,-7,2,10,8,7,2,1,-10,6,-3,-6,4,1,-4,-10,-1,5,-6,7,4,-3,9,-10,9,3,-10,6,-8,-1,-8,-9,7,-4,9,-9,3,-1,-6,-3,6,-6,2,-4,1,-3,6,9,7,8,-5,9,9,-2,3,-1,-3,5,10,-8,-5,-9,-4,-6,-2,-7,1,6,-7,6,-6,-7,3,4,3,2,2,9,-10,5,9,-8,9,10,-2,6,-3,-5,-6,10,9,-9,5,-7,5,6,5,4,-6,9,-3,4,-9,2,7,7,4,-9,4,-4,9,2,-2,9,1,7,-3,9,1,-7,3,-6,-2,6,2,-6,9,-6,-4,-10,3,8,8,7,-9,10,10,1,-1,-7,-8,-6,1,-8,9,10,5,7,7,5,-10,-10,-10,-2,7,-8,2,-1,-5,8,9,5,5,-9,6,8,8,-6,-8,-3,-8,9,-4,5,-1,3,-2,-4,-10,9,7,-2,7,7,-6,10,1,6,-2,-5,5,-5,-6,-3,-3,2,2,-7,2,4,-6,2,4,1,10,-10,-3,9,5,-8,4,8,-6,7,-1,-7,-5,-2,-8,6,-10,10,-3,-5,-3,-5,-4,5,8,-9,-4,3,7,10,-10,-3,3,4,-4,-2,-1,-6,-2,7,4,8,-4,7,8,-9,4,-9,-7,4,-3,10,5,-10,-6,6,5,-10,-5,-2,-4,3,3,6,-6,-1,7,2,-7,9,-1,5,-7,7,-2,6,2,-6,1,6,4,-6,-9,5,5,9,-8,-4,-9,-8,-1,-1,-6,-1,10,-6,-5,7,5,1,-5,5,-7,8,-1,-9,3,-9,-6,7,6,-2,8,-6,-1,-2,-9,8,8,-2,-4,-5,-10,7,-5,-3,8,3,-5,8,5,-2,10,10,8,1,2,1,10,-9,-10,5,10,-5,-6,2,-6,-8,6,4,-10,8,-1,-6,-4,-4,-9,-4,7,-7,4,-8,6,7,-2,8,6,-3,-2,7,-6,-2,-2,-6,-8,5,4,4,-7,-4,2,2,7,-6,-6,6,-4,7,-9,-8,-5,10,-4,9,-5,-4,-4,-6,4,1,5,-2,-8,-6,1,5,-6,-3,-1,-4,5,3,4,10,3,8,9,-6,8,-3,7,4,2,6,10,-10,-9,4,-6,1,-4,-5,2,9,7,-10,-1,-2,2,8,7,8,-3,-9,-7,-8,3,3,9,5,5,2,8,10,-1,5,-6,-6,-5,10,7,-2,-3,4,-10,-10,2,2,-6,-3,1,-7,-9,10,7,-8,9,-5,-7,-6,7,2,8,3,-8,-2,-2,-8,3,-9,-9,7,6,-10,-10,-2,2,8,9,5,6,6,10,3,3,6,-6,10,6,7,-8,-4,-2,-2,4,6,-7,-1,8,2,3,-3,-2,3,7,-5,8,7,4,8,-7,9,1,-2,-4,-10,4,-8,-10,-6,10,2,-1,-5,-8,-4,-1,10,-2,9,-9,-3,-6,-7,1,-3,-5,8,-4,2,7,-7,-8,8,-1,6,-10,1,1,2,3,4,10,7,-4,-6,-4,9,1,-4,6,4,-2,-2,7,4,9,2,-9,-3,-8,3,-1,-8,2,9,-3,-4,10,-5,-1,-10,8,-2,-1,-7,4,-4,4,1,3,4,5,-8,-7,3,-5,-10,5,7,9,-6,6,9,-10,-6,2,-9,-1,3,4,-5,1,10,-7,1,-3,-8,6,10,2,1,9,1,8,7,-2,-1,-8,-10,-9,3,-9,-2,-10,1,10,6,-1,-9,-2,1,9,-8,2,-3,8,-3,-7,-2,-7,9,-2,-5,3,-1,10,-9,-1,-5,-7,-4,-4,-2,9,-8,-6,2,-1,2,-2,-6,-5,3,-6,-9,-7,-7,-9,2,4,4,4,-9,-4,-8,4,-3,1,-4,-4,-9,7,4,5,-4,5,-1,4,3,-1,-8,-6,-5,-7,-5,6,-6,10,-1,-5,5,2,8,-6,-8,3,-3,5,6,-8,4,5,-7,9,1,2,5,-2,2,5,6,-5,7,-6,3,5,6,-7,-6,-8,2,3,-3,-2,2,6,7,6,3,-8,3,-4,-5,3,-9,8,-2,9,-5,-2,-8,4,2,-9,1,-1,-3,5,-10,-1,1,2,-4,9,-2,8,-1,-7,-4,10,-6,-10,-10,8,7,-8,-3,-10,-1,-6,-3,-7,9,-9,-10,8,2,6,-7,1,-8,-10,1,-7,2,7,10,-10,-8,3,10,6,1,3,8,10,2,8,4,6,-9,-1,-5,-9,2,10,3,-1,10,2,7,-6,4,2,9,3,-1,10,-7,-10,1,8,-8,10,-2,-7,-4,8,9,5,-10,-8,5,8,7,1,-7,-3,10,6,6,1,-8,-8,-2,7,-5,2,4,-4,-7,-10,3,-1,9,-5,3,-2,6,10,-5,10,3,-10,2,-10,8,-3,-5,2,-4,-8,-2,7,-2,-7,-3,7,-1,-5,-2], dtype = "int16")#candidate|6639|(1386,)|const|int16
const_6640 = relay.const([True,True,True,False,False,False,False,True,True,False,False,False,True,False,False,False,False,True,False,False,False,False,True,False,True,True,True,False,False,False,False,True,True,True,True,True,False,False,False,True,False,False,False,True,False,False,True,False,True,True,True,False,True,False,False,False,True,False,False,True,False,False,False,True,False,False,False,False,False,False,True,False,False,True,True,False,False,False,True,True,False,False,True,True,False,False,False,True,False,False,False,False,True,False,True,True,False,True,True,False,True,False,False,True,False,True,True,False,False,False,True,False,False,True,True,False,True,True,True,True,False,True,True,True,False,False,False,False,True,True,True,False,True,True,True,True,True,False,True,True,True,True,True,True,False,False,False,True,False,True,False,False,True,True,True,True,True,True,True,False,False,False,False,True,False,True,True,True,True,False,False,False,True,True,False,True,True,False,False,True,True,False,True,False,True,False,True,False,True,True,False,True,True,False,True,True,True,False,False,True,False,False,True,False,True,True,True,True,True,False,False,True,False,False,True,False,False,True,False,False,False,True,True,True,True,False,True,True,False,True,False,True,False,True,True,True,True,False,False,False,False,True,True,True,True,True,True,True,False,True,True,False,False,True,True,False,True,False,True,False,False,True,True,False,False,False,True,True,False,False,False,True,True,True,False,False,False,True,True,False,False,True,False,True,False,False,True,True,False,False,True,False,True,False,False,True,False,False,True,True,False,True,False,True,False,False,True,True,True,False,True,True,True,False,False,True,False,True,True,False,True,False,True,False,True,True,False,True,True,True,False,True,False,False,False,False,False,True,True,True,False,True,True,True,True,True,True,True,True,False,True,False,False,False,True,True,False,True,True,True,False,True,True,False,False,True,False,False,True,False,False,True,True,True,False,False,False,True,True,True,True,False,False,False,True,True,True,True,False,False,False,False,False,True,False,False,True,False,False,False,False,False,True,True,True,True,True,False,True,False,True,False,True,True,False,False,False,False,True,False,False,True,False,False,True,False,False,False,True,True,False,True,True,True,True,True,False,False,True,True,True,False,False,False,False,False,False,False,False,True,True,True,False,True,True,True,False,False,True,True,True,True,False,False,False,True,True,True,False,False,False,True,True,False,True,True,True,True,True,True,False,False,False,False,False,False,False,False,False,True,True,True,True,True,True,True,True,True,False,True,True,True,False,False,True,True,True,False,False,True,False,False,True,False,False,True,False,False,True,False,False,False,True,True,False,True,False,True,False,True,False,True,False,False,False,True,True,True,False,True,False,False,True,False,False,True,True,True,False,True,True,False,True,True,True,True,False,True,False,False,False,False,True,False,False,True,False,True,True,False,False,True,False,True,True,False,True,True,True,True,False,True,True,True,False,False,True,False,True,True,False,False,False,True,False,False,True,False,False,False,False,False,True,False,False,True,True,True,False,False,False,False,True,True,True,True,True,False,True,False,False,True,False,False,True,True,False,False,True,False,False,False,True,True,False,True,False,True,False,False,False,False,False,True,True,False,True,False,False,False,False,False,False,True,False,True,False,True,True,True,True,True,True,False,False,False,True,True,True,True,True,True,True,False,True,False,False,False,False,False,False,True,True,False,False,True,True,False,False,False,True,False,True,True,False,False,True,False,True,False,True,False,False,True,False,True,True,False,True,False,True,True,True,False,False,True,True,True,True,False,False,False,False,True,True,False,True,False,False,False,True,False,True,True,True,True,False,False,False,True,False,True,False,True,True,False,False,False,False,True,False,False,False,False,True,True,True,True,False,True,True,True,True,False,False,False,False,False,True,False,True,True,True,True,True,False,False,True,False,False,True,True,False,True,True,True,False,False,False,False,False,False,True,True,False,True,False,False,True,True,False,False,False,True,False,True,True,False,True,False,False,False,True,False,True,False,True,True,True,False,False,True,False,True,False,False,True,False,True,False,True,True,True,False,True,True,True,False,True,False,False,True,False,True,True,True,False,False,True,True,False,True,False,False,False,False,True,True,True,False,False,False,True,True,False,False,False,False,True,True,False,True,False,True,True,True,False,True,True,True,False,False,False,False,False,True,False,True,False,True,True,False,False,True,True,False,True,True,False,False,False,True,False,False,False,True,True,False,False,True,False,False,True,False,False,True,True,False,True,False,False,False,False,False,True,False,False,True,True,True,True,False,False,True,False,False,False,False,False,False,True,False,False,False,True,False,True,False,True,False,False,True,True,True,True,False,True,True,True,False,False,True,False,False,False,True,False,True,True,True,True,False,True,False,False,False,False,True,True,True,False,True,False,True,False,True,True,True,True,True,False,True,False,False,False,False,True,False,True,False,True,True,False,True,True,False,True,True,False,False,True,False,False,True,True,False,True,False,False,False,True,False,True,True,False,True,False,False,False,True,False,True,False,True,False,True,True,False,True,True,False,False,True,False,True,False,True,False,True,True,False,False,True,False,False,True,True,False,True,True,True,False,True,False,True,True,True,False,True,False,False,False,False,True,False,False,False,True,False,True,False,True,True,True,True,True,True,False,True,False,False,True,False,True,True,True,False,False,False,False,True,False,False,True,True,False,True,True,False,False,False,False,True,False,False,False,True,True,False,True,True,False,False,False,True,True,True,False,True,True,False,False,True,False,False,True,False,True,False,False,True,True,True,False,True,True,False,False,False,True,True,True,True,True,True,True,False,True,True,False,False,True,False,False,True,False,True,True,False,True,False,True,False,True,False,True,False,False,False,False,True,True,True,True,True,True,False,True,False,True,True,False,False,False,False,True,False,True,False,False,True,False,False,True,True,False,True,True,False,True,True,False,False,True,True,True,False,True,True,False,False,False,False,False,False,True,True,True,False,True,True,True,False,True,True,True,True,False,True,False,True,False,False,True,True,True,True,True,False,False,True,False,False,False,False,True,True,True,False,True], dtype = "bool")#candidate|6640|(1260,)|const|bool
call_6635 = relay.TupleGetItem(func_3654_call(relay.reshape(var_6636.astype('uint64'), [1080,]), relay.reshape(var_6636.astype('uint64'), [1080,]), relay.reshape(var_6637.astype('uint64'), [1092,]), relay.reshape(const_6638.astype('float32'), [432,]), relay.reshape(const_6639.astype('int16'), [154, 9]), relay.reshape(const_6640.astype('bool'), [1260,]), ), 2)
call_6641 = relay.TupleGetItem(func_3662_call(relay.reshape(var_6636.astype('uint64'), [1080,]), relay.reshape(var_6636.astype('uint64'), [1080,]), relay.reshape(var_6637.astype('uint64'), [1092,]), relay.reshape(const_6638.astype('float32'), [432,]), relay.reshape(const_6639.astype('int16'), [154, 9]), relay.reshape(const_6640.astype('bool'), [1260,]), ), 2)
func_3985_call = mod.get_global_var('func_3985')
func_3987_call = mutated_mod.get_global_var('func_3987')
const_6643 = relay.const([[9.985558,8.746503],[1.051556,-9.696355],[9.462191,-6.548804],[-1.039322,0.892924],[9.638560,-0.164710],[-2.111480,-5.566949],[7.826122,-0.119949],[-7.128600,7.693979],[-4.065349,1.979705],[6.364716,-3.597690],[-3.213562,-7.494732],[6.214355,-9.130477],[5.842328,-8.661259],[9.494490,-6.302038],[-6.604380,-2.394791],[-8.003760,-1.395946],[8.363257,-3.360489],[5.975999,3.658754],[5.713615,2.704691],[-0.982382,-8.344944],[-4.423677,0.596232],[1.953008,-9.346825],[5.385429,0.695998],[-3.490227,-2.788751],[9.410358,-0.877774],[-4.622509,-7.073155],[7.490475,-6.536645],[5.037142,-8.913210],[8.871840,5.015169],[4.348103,8.598967],[9.633845,6.466281],[-2.749017,3.629076],[-9.543302,0.225866],[2.872923,9.416392],[0.864386,-1.362425],[-3.380289,-9.733433],[0.102765,-0.800632],[9.051835,1.449312],[-9.745964,6.817993],[-7.978117,-7.941718],[-0.705434,5.760038],[0.316953,3.103296],[4.029802,8.547671],[-8.940595,2.980302],[-1.267535,-2.983294],[8.233180,-0.618864],[-6.464277,1.050507],[-2.023916,-7.478127],[0.611574,-4.276129],[-0.222452,9.791105],[-8.700664,8.090203],[-4.231371,-4.737713],[-5.441508,-8.456797],[-7.712740,-0.912835],[-0.899514,1.177702],[1.431638,-8.259681],[-5.830832,-9.384785],[-7.337313,-2.034730],[-2.317836,7.887557],[-5.814212,9.901035],[-2.126668,0.930077],[-4.902386,-5.325241],[2.099668,2.788972],[0.558191,1.632316],[3.982104,-8.567521],[8.275277,-8.555065],[-9.374692,-5.885742],[1.628933,0.906635],[7.585788,-6.083965],[-8.241267,3.220006],[-6.654319,5.601556],[-9.049622,6.900494],[-0.936785,7.405519],[-9.276462,7.018664],[7.998568,-6.447716],[-1.708652,-1.447802],[-5.880361,8.953858],[4.624990,-4.288330],[-5.238457,9.848778],[-0.047964,-1.090313],[-6.616982,-9.527981],[1.615801,3.259051],[7.846230,4.764002],[-2.508191,1.579094],[-4.590769,7.193989],[7.771397,6.919151],[6.687727,-2.034811],[-3.901530,-1.414617],[-0.712596,6.099322],[4.546990,-1.855823],[-8.457690,-3.802273],[-2.948789,2.634782],[-3.341755,-4.619303],[-7.281313,4.052076],[2.946550,4.502367],[-7.571604,-9.879576],[-1.885476,-7.679127],[6.907133,-9.475603],[-5.257486,-6.431280],[0.544090,5.096963],[-8.361477,6.415562],[-1.505299,7.687453],[0.887540,0.646496],[-9.426824,-4.434362],[9.746799,-9.146237],[-0.350697,8.691370],[7.384327,0.715102],[4.403867,9.395083],[-3.698242,9.348559],[6.396627,-9.265164],[5.612440,0.617349],[-4.503948,6.103582],[-0.428465,-4.031091],[-6.780093,-8.935472],[1.016394,-6.604359],[-9.418905,-7.865948],[3.064535,8.052669],[-9.504564,4.740568],[9.023302,-5.766272],[-2.725906,-0.761530],[9.108704,7.278966],[-0.670152,-0.080073],[6.178734,-7.448979],[-5.716175,7.188867],[-0.022523,-8.354931],[-4.952596,3.846605],[-0.674449,6.176090],[3.098510,-6.979001],[-5.660593,-0.761663],[2.176991,-8.214973],[-0.099588,-8.409490],[-4.274847,-4.298621],[7.844503,1.538305],[-5.506909,9.893060],[-2.868522,7.625126],[-6.059324,3.599289],[-7.211306,3.998157],[-8.325074,-7.073302],[2.839224,8.406416],[-0.034820,-8.651374],[-8.887959,-8.140446],[-3.409641,-1.451164],[-7.241969,-6.425601],[9.238121,-4.109616],[-9.267403,2.224970],[1.221657,7.646697],[-8.486090,-9.972118],[-5.571358,-7.822840],[7.375150,3.082939],[5.644525,-4.385506],[4.452508,-1.814688],[-2.820393,-5.244149],[7.859315,3.807636],[-9.154831,2.323100],[2.646403,3.943218],[-3.639645,9.366608],[-4.075091,-1.600607],[-3.390483,-0.608938],[9.756328,-5.171177],[8.007097,-2.250318],[-5.499731,7.591478],[-9.975497,3.098794],[5.393334,1.282279],[5.066363,5.605149],[1.186207,5.932481],[-1.311823,-4.066545],[-0.674574,-3.135867],[5.091570,-5.854257],[-9.002103,-6.372783],[-6.613397,0.100992],[4.768430,-2.917993],[1.729853,-1.960276],[2.771364,-2.699372],[0.905281,7.244407],[2.749484,4.490179],[0.663588,-8.128553],[-6.063560,-6.337340],[-0.640556,-8.573374],[2.449041,-7.974999],[-3.387837,5.001396],[-0.149573,6.562963],[-7.298449,-5.084744],[-6.125645,3.100463],[3.343946,-5.505752],[-0.771279,6.637615],[-7.152423,-7.359190],[-0.249818,-5.662669],[-8.858107,-6.921495],[5.380132,-6.766848],[-4.759021,8.684237],[2.340276,-6.162769],[-7.282543,-0.401466],[-9.132418,1.076103],[9.533787,-1.886603],[8.979006,-4.918174],[-1.408432,-3.077162],[-0.889815,-8.998229],[4.814390,-0.310121],[-5.918146,-9.058075],[6.439109,9.119729],[-7.164738,-7.816476],[1.118345,9.840149],[3.665756,-8.600653],[-1.456325,2.650695],[5.759189,2.495808],[3.116091,2.813826],[9.012119,-3.183519],[-1.992910,-6.635473],[-5.935187,-8.338487],[4.282193,-3.517028],[1.511846,-8.663869],[-7.003934,9.218444],[5.299641,-6.248051],[-5.279730,-5.738619],[8.616080,-9.604759],[3.928337,-0.994344],[5.976333,1.934909],[-9.907863,2.650220],[-9.887669,4.826937],[3.935279,-9.694668],[-9.170767,5.418158],[1.843790,-3.060473],[-0.784820,-4.934226],[0.205183,3.784922],[-1.799122,3.299628],[6.986850,-1.630562],[-5.959732,-2.314356],[-9.168358,8.886816],[7.040226,2.034582],[-5.215078,-4.570152],[-2.674259,-9.714823],[3.400768,-3.536434],[-5.440118,9.997463],[-4.247927,3.721772],[2.931655,-1.240170],[5.772836,-4.126259],[-1.307765,3.083666],[4.469737,1.244199],[-5.009429,9.226886],[-1.648521,4.954328],[2.561372,-2.073490],[7.687038,1.231335],[7.764691,-4.033184],[9.188824,7.248241],[2.489947,-1.287159],[-4.339942,-6.453091],[-1.163663,2.827836],[-3.409918,7.065200],[1.751198,5.314174],[-5.371758,2.036756],[0.450960,-2.000204],[4.195891,-3.587269],[-5.668703,3.136751],[9.170810,6.078143],[-2.120408,-3.798115],[-8.839422,-3.910962],[2.620799,-9.330096],[-7.265644,8.286976],[4.765014,-8.192721],[0.566672,3.069426],[-5.713466,3.732283],[7.866663,5.075616],[7.337180,-6.934740],[9.422872,0.975206],[-8.606861,-0.837129],[0.430455,-2.475669],[2.324416,9.061833],[-6.393831,-3.588278],[-4.795391,-1.511631],[3.549074,1.598510],[1.208422,-7.184916],[-9.181957,2.331598],[4.112429,-2.903273],[1.906586,6.004027],[5.682205,5.001111],[-1.745234,-6.846349],[2.768037,-4.349689],[-5.748494,0.376732],[2.389582,7.422584],[4.575114,-8.526809],[-7.682510,-2.234247],[-0.304780,5.205152],[-9.240231,8.456028],[-6.048631,9.441218],[-1.100942,-8.653904],[3.206296,-0.484908],[3.424747,7.891848],[-9.400645,4.367462],[-4.907330,-2.692780],[-6.457971,-0.348252],[-8.283323,0.221409],[-8.516621,5.672145],[-1.753417,9.223241],[6.135376,-5.971504],[7.725525,-6.143798],[2.603222,6.801016],[5.012269,-1.816138],[9.687389,-4.120301],[-9.051886,-6.977567],[1.323899,1.262937],[-5.505865,4.684078],[-1.514408,-9.382741],[0.581704,2.812007],[3.393025,-7.103951],[-0.507031,-0.346183],[-3.664723,-3.232840],[-4.556325,8.635752],[-6.065825,9.877256],[4.103516,-0.197227],[-5.857184,-6.576526],[8.602264,-0.658066],[-9.870640,5.215333],[-4.921766,-8.458795],[6.761248,7.936456],[3.405070,9.708103],[-0.230343,-6.663843],[0.700945,4.160454],[-1.456908,-8.348844],[-7.184543,-1.668577],[5.649587,6.280050],[7.694889,-2.398220],[-3.714930,-1.066783],[-4.881476,5.171223],[-2.500027,9.305847],[6.002071,1.677736],[-9.349715,2.590520],[-6.088300,4.919614],[-0.528138,8.037244],[-7.873214,-7.427298],[-6.625610,-0.073490],[-9.841576,9.856465],[-5.001256,-4.178501],[9.366561,0.829937],[6.862925,-4.645192],[-8.476449,-4.458213],[7.139597,-3.101615],[5.430066,-2.970711],[3.362831,2.540520],[6.372852,-8.222207],[6.250535,5.304436],[-2.695853,-2.627807],[4.435496,5.505444],[-6.192005,-5.140648],[-0.440310,9.899033],[4.247953,9.768153],[-8.147864,-7.749404],[4.672444,7.804588],[-7.671376,0.375711],[9.418641,-5.423499],[3.229545,-6.608388],[5.745855,2.177129],[4.158088,-5.412736],[-6.720008,4.940167],[-9.867510,-7.223152],[-9.843261,-2.416075],[-5.151736,7.089181],[2.030933,6.572626],[-6.514320,-9.092181],[-9.304199,7.504099],[-4.821507,3.409417],[0.960661,8.123466],[-5.099471,2.840236],[-0.801984,2.395689],[0.775659,-8.321179],[5.216964,4.029381],[-6.814183,5.191743],[8.420082,-7.163026],[-5.207398,8.163059],[6.556701,4.209156],[-3.108117,-2.726296],[-4.009569,-0.889400],[2.206153,-5.807243],[-1.615020,-9.671859],[0.819464,2.818381],[-5.981903,-2.184334],[0.932636,-0.888120],[2.159414,5.959022],[-8.775856,-4.773221],[4.888897,-0.333157],[4.253736,9.954159],[7.033549,-2.005109],[-4.396969,5.763787],[-4.531231,2.735397],[5.260860,-8.943162],[-1.032147,6.046407],[4.128121,3.136941],[-7.253770,7.173374],[2.581409,5.014612],[-9.209821,1.351455],[0.640706,7.171695],[6.091552,-6.256692],[-3.585595,3.084822],[-1.037575,5.647976],[-9.065028,-2.687057],[7.233646,-8.344811],[0.023254,5.468686],[-8.434913,-6.873552],[0.928724,2.830614],[-4.093612,-8.348885],[-0.630851,9.035178],[-4.158514,-0.791877],[-5.201436,9.305923],[0.952926,-6.837079],[8.441109,-6.986512],[-2.416384,6.665694],[8.004563,-7.971417],[-3.367868,-1.931302],[-0.588161,1.262953],[1.854768,6.260588],[6.209689,8.315352],[3.697925,1.975062],[5.261025,-9.072822],[-2.050098,1.017835],[-9.257348,0.609123],[-8.575342,9.527093],[-8.531239,6.336183],[-8.996036,6.606064],[1.900762,-0.981636],[-2.228981,5.112854],[-1.332847,0.764983],[-0.650812,-9.752848],[1.970357,7.453485],[7.478282,-4.274591],[-0.295879,4.907102],[2.398232,-7.603194],[2.187581,2.331482],[-4.728914,6.519589],[-0.348946,8.998150],[-9.949449,6.489592],[0.396083,6.269066],[3.636657,-3.907413],[-6.979696,-8.653272],[-4.206885,-3.946911],[-5.903017,1.096701],[7.783475,1.643819],[-4.859691,-6.239040],[-6.033359,-7.697474],[-0.132062,-1.860467],[0.590871,4.112692],[7.524654,7.270703],[-7.363039,0.595469],[4.334172,5.701835],[-3.160992,-2.716311],[1.991094,1.113148],[-7.606455,-7.859013],[1.890919,-5.247389],[1.760182,-4.553888],[-1.687127,8.691390],[-8.679131,3.939461],[9.249023,-9.936359],[9.015195,-8.566499],[9.872243,-5.013376],[4.576321,-8.637469],[8.353667,-1.701764],[3.156277,5.672143],[-4.074976,-0.966547],[-5.037882,1.902858],[4.213277,5.045027],[-5.494096,5.421942],[6.181332,-5.092849],[-8.065112,4.276499],[8.975783,5.938514],[0.150123,-0.248923],[0.331410,-9.312030],[-0.063476,4.979221],[2.263853,-0.560097],[9.264025,0.004621],[9.653886,9.992061],[-8.091525,-3.879911],[-7.494546,-9.814122],[-1.104386,-6.824135],[-2.243638,2.745025],[-1.896042,-5.794684],[1.033492,0.749032],[-2.966647,7.693603],[-8.047683,-9.049767],[-1.004339,9.944552],[-0.128648,-9.054845],[-9.508247,-5.824241],[8.552466,-2.863424],[-2.080621,0.873846],[5.771219,-6.910075],[7.382604,-8.130516],[3.607881,-7.787198],[9.907370,-6.473685],[-1.063434,-6.344928],[6.316329,1.052003],[6.988652,-3.298702],[-3.580459,6.619515],[1.423259,9.145359],[-1.708107,-5.355434],[-4.942219,7.416180],[-9.454393,9.503078],[-7.363108,-9.540954],[-7.749663,-1.817304],[4.729034,-8.256276],[-2.868713,0.640432],[3.088673,-5.180130],[-4.189640,9.450008],[1.355472,-1.171098],[0.746128,-9.710487],[-9.685353,3.829434],[-4.070286,-6.977433],[0.169878,8.809409],[-4.338403,8.447798],[-9.192033,3.219939],[-6.275708,5.319059],[9.593113,-8.378786],[-2.253600,-8.346770],[5.745716,8.820713],[6.709336,4.914609],[-7.829120,-9.284441],[5.181705,3.463880],[0.579836,5.238676],[5.474419,-6.506898],[-5.406971,9.435864],[9.488399,0.807876],[-2.872452,6.416220],[-5.429945,-4.457634],[6.315706,-7.700671],[-8.706693,-3.360359],[-8.505356,5.787908],[8.128154,4.123134],[-1.943071,-7.148008],[-1.588900,-6.423325],[-0.778258,6.431673],[-3.602796,-3.196149],[-2.191944,8.478289],[-2.445685,6.516519],[1.789284,-2.888703],[-1.767559,-0.293537],[9.668662,-4.957101],[6.353691,-1.187176],[-6.792959,-8.191793],[4.569998,8.268139],[8.540779,-0.637123],[-3.689035,1.440734],[-2.967985,-8.780318],[6.050648,-0.534429],[6.272289,-2.314608],[5.660696,8.293036],[-8.971261,3.087338],[-2.334820,-1.020802],[3.486199,5.527255],[-9.942849,4.037142],[-8.343964,7.732877],[-6.803721,-4.856204],[-6.137493,-0.919584],[2.611365,-9.348300],[-4.913494,2.017342],[-5.437926,-8.007064],[-1.478555,4.373668],[-8.826855,-7.217306],[2.253686,-0.225609],[6.269505,2.854030],[-1.213965,5.131019],[9.305473,4.968612],[5.432424,-4.903836],[-2.924945,0.897465],[-8.756555,9.476899],[9.693265,-2.144947],[7.405044,2.442107],[5.012906,4.054740],[-6.271325,-7.422451],[-7.462542,7.814547],[-3.196165,8.684912],[6.583848,-6.308410],[9.146168,-0.349378],[3.366112,0.778923],[-0.089016,3.171107],[-9.473659,7.469803],[3.619965,-5.825504],[3.256952,-6.857752],[-6.269896,4.210690],[-0.894660,8.772365],[0.867730,3.851476],[-0.341521,-6.456427],[4.843364,3.207846],[-3.610591,-4.544690],[-1.207204,0.931627],[8.220496,4.152056],[2.100652,5.231144],[-6.834594,6.255840],[-0.178240,-0.759761],[-4.540451,6.565581],[-2.018903,1.970231],[5.300476,7.160873],[-2.420427,-4.788849],[-8.881280,3.506739],[-2.497644,6.024504],[-1.262822,-2.359548],[9.045505,0.455372],[9.480566,8.756620],[4.168308,-8.543890],[3.834872,-3.615566],[-9.958388,8.592552],[3.733694,-6.145717],[4.926728,-9.847231],[1.376096,-6.747686],[-8.929551,-4.917928],[1.140199,8.467479],[-1.277201,4.369934],[2.953049,7.771365],[-3.271728,-8.555185],[-1.795991,8.539280],[1.204512,2.338746],[2.686390,7.146426],[0.383782,5.562867],[-0.204940,-9.258546],[9.394079,-7.952076],[5.431904,-9.851296],[-3.272956,8.592887],[-8.883254,-6.761327],[6.617743,-2.537062],[7.214759,-0.302302],[2.101669,0.960632],[-2.632476,-8.310072],[-7.472609,5.847554],[-0.355750,8.473136],[-8.457417,1.587646],[-1.203588,-9.033844],[5.809874,-0.445908],[9.556251,-6.959393],[-0.667989,-1.669491],[5.762963,-2.995207],[9.993278,9.677770],[-3.920039,-8.261276],[-2.547009,9.551882],[4.444964,-7.748362],[-0.119772,1.734976],[2.560351,-5.086682],[-5.334918,-5.038683],[5.120724,0.986164],[-5.524062,-8.763042],[8.745191,-8.775917],[2.013733,-5.144726],[1.576623,9.622166],[8.326301,0.836016],[-3.521156,9.849779],[-6.381440,-8.937031],[-4.296274,-3.556393],[2.528977,1.312617],[9.680548,-4.687772],[7.593313,4.813272],[2.762231,-8.513926],[-7.962249,6.873675],[9.579288,0.086032],[-0.734053,2.675796],[3.703837,-8.095147],[1.554541,7.964393],[7.704607,0.695612],[6.184218,6.064602],[0.245806,1.429520],[-8.801026,5.741499],[0.393071,6.868199],[-9.020564,4.958264],[4.228489,-5.760319],[0.491741,8.429918],[2.127159,-9.910064],[-7.964284,7.470715],[5.860843,9.991950],[6.208153,-2.181435],[6.451836,3.635975],[-9.572264,2.981240],[-3.277701,-9.365253],[5.062223,-9.525161],[-8.479566,3.269399],[-6.373175,0.226744],[-9.123642,8.441265],[6.806064,-1.354490],[-0.290740,-2.042346],[-2.681158,-3.813815],[-9.353599,6.992846],[-4.222757,-9.756086],[-9.089557,3.321428],[3.656777,-1.981600],[1.278611,1.537705],[7.916900,2.993095],[0.250066,6.511572],[9.565739,-4.174246],[-7.034964,-0.754919],[6.678595,-7.840116],[-9.241642,6.417368],[-5.224643,0.575031],[5.744938,-7.130928],[9.727278,-6.262895],[1.730920,-3.950161],[5.894446,-5.452201],[-5.207139,3.891923],[-8.732054,4.878387],[9.414715,-6.678882],[4.277694,-6.266541],[-4.853624,7.582462],[-7.117726,2.449774],[3.492998,2.496201],[-1.551158,2.792598],[-5.661422,8.302007],[-7.439659,9.549550],[1.822880,2.137944],[-6.975655,4.567985],[-1.177050,-6.395372],[1.389814,-1.965086],[3.430702,4.706182],[-2.598998,8.348466]], dtype = "float32")#candidate|6643|(704, 2)|const|float32
call_6642 = relay.TupleGetItem(func_3985_call(relay.reshape(const_6643.astype('float32'), [11, 8, 16])), 0)
call_6644 = relay.TupleGetItem(func_3987_call(relay.reshape(const_6643.astype('float32'), [11, 8, 16])), 0)
func_3881_call = mod.get_global_var('func_3881')
func_3883_call = mutated_mod.get_global_var('func_3883')
const_6651 = relay.const([7.920108,-9.346691,-4.904184,5.783765,-5.500927,3.173456,0.872025,-9.359222,8.319394,-1.874692,0.423169,5.659985,-1.792031,-6.807335,4.246163,3.155547,-0.265459,2.087755,1.364845,2.410212,-2.735273,-0.715631,9.816941,4.681762,-1.935413,-2.795257,-4.587820,8.264036,-4.569012,-7.970457,3.544023,-5.662980,5.421785,1.295761,2.251793,-9.586197,5.833695,9.072783,-4.224237,3.179302,-9.009924,-6.253297,0.166768,-2.416339,1.429118,9.944570,-7.759879,-2.676079,4.337941,-5.008743,-6.195358,-9.312511,-7.196384,1.079269,-9.241710,8.703263,-1.297657,0.263562,-4.905193,3.613897,-1.801998,-9.810184,6.743260,8.536588,-7.655390,7.654513,-3.554221,-0.695593,3.633999,1.446300,-8.592932,-0.391073,-4.698158,-0.962448,6.810484,-4.721934,-4.633527,8.798924,-5.527911,-4.433054,-2.268714,7.456263,9.852434,9.568805,2.070333,5.284556,-6.507592,6.818408,3.356779,3.954973,1.902086,7.141822,-5.933943,6.514600,3.861306,-8.790044,1.749725,-6.065796,7.864913,0.264783,9.316731,8.573796,7.857196,-1.648103,-4.895490,4.257524,-8.688584,-4.558536,5.859592,7.095420,8.874498,5.880188,7.305142,-3.072087,6.206421,-9.271333,-5.600820,-0.534667,-9.759228,-4.374431,-6.587755,-9.356368,-9.843296,-4.998000,7.758570,-9.945000,1.675714,4.901540,-2.062881,4.861148,-8.379374,-9.197575,8.844775,-4.556792,6.103506,8.127274,-5.206294,-8.312858,-0.479305,0.878344,-8.627147,-5.967294,6.801390,3.334195,0.309818,5.057734,-1.466394,-8.608906,7.448426,5.741153,-2.482171,-1.232396,-3.506093,5.771078,1.045641,-7.862450,8.468617,5.812770,0.440784,-2.702349,-0.218851,-6.793766,7.929419,-7.485811,1.160601,1.991474,-0.972174,-2.749815,0.696546,5.487822,-7.853447,-2.639938,7.888164,-4.867601,-9.592026,4.780466,3.780076,8.572261,3.228240,2.954492,4.295032,-5.150406,-7.021921,1.027621,-0.717709,3.251663,-3.547620,-1.138440,9.367216,-1.012058,8.600957,-2.302623,0.239706,6.019356,-8.729517,3.034992,-3.589753,9.708361,3.956725,-4.509103,-2.298904,-1.027748,5.048094,-1.060421,-1.516786,2.457154,-4.951212,-1.379399,9.778222,-2.546892,-2.921002,-1.887774,3.203876,6.910458,-6.532308,4.440531,3.858474,5.906900,-1.772558,-1.329066,8.562045,6.676438,5.544689,7.882025,0.457880,-7.181694,-0.365405,-0.839283,5.545596,-5.278314,9.428811,-6.160896,6.019425,-4.570874,9.729168,-7.520190,-2.253637,-2.158996,2.838886,-0.041341,-2.751101,-5.030314,6.087570,-0.787966,4.450816,-7.934068,-1.095334,2.307659,8.527856,-5.311072,-2.801378,9.379753,-5.240107,0.203147,8.464383,-4.661585,-1.111797,-9.887658,-2.091160,-9.271496,0.139376,-1.793738,1.294089,-8.262202,1.491359,1.873851,8.548380,-5.953979,7.265085,-0.780474,-2.620759,-4.989630,2.605415,-2.209546,0.588144,1.309026,-3.231138,0.031335,-2.530681,-7.552569,-7.519256,9.565158,-7.008674,4.587663,2.472017,-1.095614,-2.841287,8.381604,-0.984293,2.172359,-9.729236,-5.584569,4.984938,0.767602,2.712098,8.391921,3.181888,-0.222561,4.150857,6.633649,2.360177,-2.680320,-8.760829,8.596442,1.688323,5.568229,-4.707256,-5.720671,2.382680,7.163756,0.367963,-2.674854,6.599434,-6.126141,-5.912703,-5.007310,-9.676518,2.128726,-0.798578,9.927819,-0.570428,4.613704,-1.173989,-6.568040,9.807610,8.595171,-5.181722,-5.853793,-4.745851,-6.931597,-2.246185,-4.526594,4.550658,-1.497769,-6.799039,-5.842251,-0.230492,0.279542,3.827371,-4.605073,8.003070,-5.247822,8.814668,-6.521977,8.220679,-8.310131,7.421274,-8.445081,-2.690249,-9.272601,-3.078023,8.301802,-1.746058,-0.113904,-4.493236,7.908715,-4.258746,-1.750647,-2.925945,8.914630,6.590022,2.698709,-0.652016,-6.090199,-8.846529,7.959446,1.360883,2.394453,-1.447135,2.032570,-3.385399,-1.758508,-8.854248,-4.955220,9.611839,6.629153,2.129687,9.960943,-4.553961,4.831858,-9.437232,-6.640640,2.829427,-4.880054,5.208187,0.961803,-7.568328,-8.655351,-7.341782,6.000856,-0.118911,-6.817237,4.320707,8.569224,3.011884,0.953295,6.408184,6.464805,4.224680,-9.927209,-8.330554,9.200085,-7.705589,6.093333,-1.720006,-6.705727,8.720939,2.314287,9.844352,3.230059,5.374533,-5.953936,-1.947215,0.161048,9.865009,-0.437658,7.750677,-0.995840,1.581902,-8.539792,-5.875834,-6.603830,-8.551853,8.647004,-6.727007,-9.455753,9.854260,-0.490106,2.569050,0.275395,-4.065175,-3.023990,5.448231,4.718032,-4.981817,3.209533,-1.413011,8.087999,8.951091,-0.486974,3.965169,3.640619,-4.453470,-9.632497,3.438909,-7.339906,1.466328,-7.593650,-6.693334,0.011017,4.932714,3.342632,-6.508710,-6.672000,7.007466,2.390314,-0.432078,9.598731,-0.693564,-0.255109,-9.579851,0.520248,5.905022,-0.708271,0.858967,-1.417213,-4.482886,9.013715,-4.352912,-7.683611,-7.737687,-2.883495,-9.153789,0.810970,4.201948,0.424175,7.096106,7.143367,-5.779811,-6.149824,3.427381,-9.337477,-4.900216,-1.301797,-1.729059,7.438800,-1.214767,2.333141,4.582750,-8.715797,-4.196312,-3.808150,-7.880645,-8.590096,-1.727679,4.641084,1.156050,0.883490,6.835016,5.738713,9.566374,-7.459324,-9.946662,-9.360226,5.399436,3.331830,-1.889630,7.740389,6.316506,7.113248,-5.037439,-8.406449,9.749331,4.398624,7.802104,-6.619877,0.602538,3.567771,-1.275007,-8.666566,-9.045849,9.567239,0.929124,1.479475,-9.669239,-6.610449,0.641353,-2.358858,1.716115,7.371371,-7.044675,5.033023,2.592623,-6.161148,-2.750913,3.254088,-8.127174,-7.651288,8.178942,-9.679512,-3.607921,-7.255126,3.606858,-7.944916,-9.057604,-5.211008,6.867405,2.381258,-4.110411,-9.346443,-3.704530,1.796329,-8.122640,-9.885157,0.256514,0.216700,-8.444078,-5.689524,6.860549,-7.705560,-4.866603,-0.009542,-9.817109,-3.176413,8.077536,2.003921,-7.116540,-1.759460,-0.767011,-3.207314,-1.733396,-1.694928,5.780148,-7.586767,1.707165,7.492310,0.614791,-2.068496,9.302755,-1.947161,3.492888,-9.583400,-6.330059,8.518614,4.907295,5.869828,0.547428,-5.530700,-7.885305,9.801803,5.738267,4.159991,2.672719,-4.045620,0.654617,8.958282,7.619442,-2.382544,3.550410,-9.953837,-4.880050,-7.930137,4.431258,-2.801415,5.430061,-7.449788,-3.447857,-3.181894,3.532626,-1.662460,0.966647,0.453030,0.931698,2.864702,1.544347,-5.920787,7.896733,-5.731604,2.712563,-4.675525,-0.382100,-4.248714,-8.476872,-7.978262,3.970142,-2.665640,8.306692,1.545153,-1.824216,6.889141], dtype = "float32")#candidate|6651|(630,)|const|float32
call_6650 = relay.TupleGetItem(func_3881_call(relay.reshape(const_6651.astype('float32'), [630,])), 2)
call_6652 = relay.TupleGetItem(func_3883_call(relay.reshape(const_6651.astype('float32'), [630,])), 2)
output = relay.Tuple([bop_6600,call_6635,var_6636,var_6637,const_6638,const_6639,const_6640,call_6642,const_6643,call_6650,const_6651,])
output2 = relay.Tuple([bop_6603,call_6641,var_6636,var_6637,const_6638,const_6639,const_6640,call_6644,const_6643,call_6652,const_6651,])
func_6656 = relay.Function([var_6599,var_6636,var_6637,], output)
mod['func_6656'] = func_6656
mod = relay.transform.InferType()(mod)
var_6657 = relay.var("var_6657", dtype = "float32", shape = (2, 15, 6))#candidate|6657|(2, 15, 6)|var|float32
var_6658 = relay.var("var_6658", dtype = "uint64", shape = (1080,))#candidate|6658|(1080,)|var|uint64
var_6659 = relay.var("var_6659", dtype = "uint64", shape = (1092,))#candidate|6659|(1092,)|var|uint64
output = func_6656(var_6657,var_6658,var_6659,)
func_6660 = relay.Function([var_6657,var_6658,var_6659,], output)
mutated_mod['func_6660'] = func_6660
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3260_call = mod.get_global_var('func_3260')
func_3262_call = mutated_mod.get_global_var('func_3262')
call_6662 = relay.TupleGetItem(func_3260_call(), 0)
call_6663 = relay.TupleGetItem(func_3262_call(), 0)
func_3069_call = mod.get_global_var('func_3069')
func_3070_call = mutated_mod.get_global_var('func_3070')
call_6687 = func_3069_call()
call_6688 = func_3069_call()
func_2928_call = mod.get_global_var('func_2928')
func_2930_call = mutated_mod.get_global_var('func_2930')
call_6692 = relay.TupleGetItem(func_2928_call(), 0)
call_6693 = relay.TupleGetItem(func_2930_call(), 0)
func_6404_call = mod.get_global_var('func_6404')
func_6408_call = mutated_mod.get_global_var('func_6408')
const_6695 = relay.const([False,False,False,True,True,False,False,True,True,False,False,True,False,False,True,False,True,True,True,True,False,True,False,True,True,False,True,False,False,True,False,False,False,False,True,True,False,False,False,False,False,False,True,False,False,True,False,False,False,False,True,False,True,True,False,False,False,True,False,False,True,False,False,True,False,True,False,True,True,True,True,True,True,False,True,False,True,False,False,True,False,True,False,True,True,False,True,True,True,False,True,False,False,True,True,True,False,False,False,False,True,True,True,False,True,True,False,True,True,False,False,True,False,False,False,True,False,True,False,False,True,True,False,False,False,False,True,False,False,True,False,True,False,False,True,True,True,False,False,False,False,True,True,False,True,True,True,False,False,True,False,False,False,False,False,False,False,True,True,False,False,True,True,False,True,True,True,False,True,False,False,True,True,True,False,False,False,True,False,True], dtype = "bool")#candidate|6695|(180,)|const|bool
var_6696 = relay.var("var_6696", dtype = "uint64", shape = (1080,))#candidate|6696|(1080,)|var|uint64
call_6694 = relay.TupleGetItem(func_6404_call(relay.reshape(const_6695.astype('bool'), [2, 15, 6]), relay.reshape(var_6696.astype('uint64'), [1080,]), ), 3)
call_6697 = relay.TupleGetItem(func_6408_call(relay.reshape(const_6695.astype('bool'), [2, 15, 6]), relay.reshape(var_6696.astype('uint64'), [1080,]), ), 3)
func_679_call = mod.get_global_var('func_679')
func_682_call = mutated_mod.get_global_var('func_682')
const_6702 = relay.const([-6.422566,0.318018,-3.728074,-6.445254,-9.963731,-7.447028,9.853428,6.371355,-5.318944,-2.593316,-9.845995,6.507664,-9.186730,4.402218,-1.210391,2.323519,-8.660100,-8.499051,-4.479199,5.190578,-6.087277,6.445421,6.816580,1.312478,5.783909,0.712117,5.789125,9.249568,8.155570,5.794717,1.643601,-2.575175,-6.227260,3.308009,-2.759790,8.506852,-9.030935,-0.648410,8.068900,5.724952,4.271691,-5.185651,6.691228,9.417528,-0.303410,8.662662,2.435434,8.239851,-0.966107,-4.686921,2.895071,0.556009,-7.316573,7.316646,9.620558,1.255928,0.478409,5.332519,6.785244,0.221598,-5.174791,4.433781,0.365322,1.865058,1.807346,-4.743619,6.451572,-2.969419,3.215265,5.272364,-4.516228,-4.865495,7.396027,8.035826,-0.277122,-4.604779,6.885994,-8.125154,8.397743,-2.893741,6.733172,8.670367,-1.836437,-7.918991,-6.414289,-6.616224,-8.456864,-3.058028,-1.724231,-4.907510,0.447214,0.562205,9.580351,6.950518,0.847738,9.565347,-9.283717,2.375620,0.788125,-4.170221,-1.617481,-8.919483,7.655013,-4.236628,-0.922003,-4.800166,8.158904,-4.571981,1.621016,2.659322,1.982136,0.910812,-2.500335,-0.659314,3.932165,0.024469,3.844967,-4.500306,-3.289005,6.552415,-8.887954,-9.191263,8.625593,-7.786571,-4.470978,-5.301924,-9.949204,1.499713,-0.228615,-7.463541,9.546973,5.690999,-7.127732,6.139526,-1.705537,0.120517,3.579537,2.415003,9.453956,5.362029,4.450963,3.062657,-9.179619,-5.450428,6.660742,-8.820617,-3.338879,5.102037,5.532328,-7.596018,7.947914,-6.739498,5.857945,-3.974906,8.741998,1.704915,9.217816,4.835815,8.201463,-0.711584,-1.906352,4.597641,2.639688,4.363985,-9.235584,-7.470302,-2.582748,-7.172065,-5.786409,-7.708009,-4.535749,9.227659,-2.883171,4.803331,-8.383870,-3.896686,-2.621160,-7.037845,1.895012,2.142318,6.122606,3.256524,-2.626253,4.746440,-0.935547,0.612402,3.600336,-1.755650,4.166454,-3.136461,-9.439990,-1.502056,-7.267648,-2.985632,4.479616,5.096246,1.339519,-9.481892,-9.338328,6.050662,8.391723,-4.047532,7.815534,-9.894402,-7.793344,-1.964561,-6.546169,-3.935767,6.304404,-9.072080,-9.031430,0.505331,-3.102471,3.796288,-4.131884,-4.407334,5.740230,-1.732565,3.687888,2.736526,8.689130,-8.433181,4.513016,2.465957,8.501495,1.879426,9.557493,-2.868975,-8.972185,1.801299,-3.757303,-3.968607,-5.086432,-6.815944,5.076346,7.947609,6.230968,-5.784556,-9.581541,-6.403135,1.081032,2.081842,-4.954489,8.580091,-9.660254,2.987187,-5.094082,-7.043434,2.098400,-9.771488,1.926903,3.596746,-1.668222,1.082289,7.321451,-1.080667,0.700923,-5.799046,8.286700,-9.462041,-0.585475,-2.813869,9.624667,1.054125,1.692561,4.659564,2.440630,-2.487976,7.255507,7.411229,3.448798,2.696854,1.844534,-0.636037,3.691349,-2.976966,7.622712,-1.221181,-6.777076,9.445882,-9.190153,-8.685813,4.736067,3.066122,-4.441806,-3.117503,-8.166372,-1.869476,8.383768,6.328555,9.975754,-9.524940,-0.283048,9.458920,-8.963851,8.585659,7.363375,-3.336363,-1.707378,9.623665,-8.367545,-1.471703,-5.351667,3.408542,2.552226,-5.792314,-2.415616,2.759747,-4.407263,9.768077,2.080878,2.843526,-4.790145,-5.171328,0.927085,4.319389,6.844386,-9.288004,-1.934107,9.401697,-8.277990,-9.516092,-1.197211,-8.018516,-5.918693,8.593696,-0.062287,5.336315,-4.477676,1.532465,4.573257,-6.836958,-7.615193,-7.119446,-4.612732,-6.721495,-9.403244,5.427609,4.650862,4.754917,-7.478688,9.877864,7.889430,1.180482,-0.824170,1.907866,-8.806838,-1.301506,-7.839139,6.722209,-9.877215,-5.985563,5.493684,9.279950,4.502179,-6.531220,5.538335,-8.950447,-9.084498,4.369181,-9.441707,6.421575,-3.423722,7.811588,-5.014996,5.815629,-5.770729,7.182597,2.479238,-2.748846,0.273060,-3.329024,3.043054,3.382395,7.428874,-8.045831,0.291626,-7.035965,-0.983284,0.329706,-4.240177,0.547101,-1.829912,-0.025367,-3.553679,-5.985113,-5.709987,-3.891350,6.127731,3.099816,-4.295243,-3.251476,0.243846,5.874653,-9.379936,6.000678,1.721646,9.901131,6.610793,-2.576256,7.524339,-5.045296,8.251030,3.856719,-3.304772,4.732616,-9.775471,8.483534,-0.928975,1.864923,4.131961,-4.872527,-2.518906,-5.343909,4.742304,1.414265,2.935407,-0.267479,-8.668413,2.556483,2.838387,-4.872639,-8.259579,3.676968,-9.807804,9.565567,3.137627,6.197061,3.074314,-7.322295,-1.957849,4.049793], dtype = "float32")#candidate|6702|(432,)|const|float32
call_6701 = relay.TupleGetItem(func_679_call(relay.reshape(const_6702.astype('float32'), [3, 12, 12])), 0)
call_6703 = relay.TupleGetItem(func_682_call(relay.reshape(const_6702.astype('float32'), [3, 12, 12])), 0)
func_708_call = mod.get_global_var('func_708')
func_712_call = mutated_mod.get_global_var('func_712')
call_6705 = func_708_call(relay.reshape(var_6696.astype('uint64'), [8, 15, 9]), relay.reshape(call_6694.astype('uint64'), [8, 15, 9]), )
call_6706 = func_708_call(relay.reshape(var_6696.astype('uint64'), [8, 15, 9]), relay.reshape(call_6694.astype('uint64'), [8, 15, 9]), )
output = relay.Tuple([call_6662,call_6687,call_6692,call_6694,const_6695,var_6696,call_6701,const_6702,call_6705,])
output2 = relay.Tuple([call_6663,call_6688,call_6693,call_6697,const_6695,var_6696,call_6703,const_6702,call_6706,])
func_6710 = relay.Function([var_6696,], output)
mod['func_6710'] = func_6710
mod = relay.transform.InferType()(mod)
var_6711 = relay.var("var_6711", dtype = "uint64", shape = (1080,))#candidate|6711|(1080,)|var|uint64
output = func_6710(var_6711)
func_6712 = relay.Function([var_6711], output)
mutated_mod['func_6712'] = func_6712
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3260_call = mod.get_global_var('func_3260')
func_3262_call = mutated_mod.get_global_var('func_3262')
call_6735 = relay.TupleGetItem(func_3260_call(), 0)
call_6736 = relay.TupleGetItem(func_3262_call(), 0)
output = call_6735
output2 = call_6736
func_6760 = relay.Function([], output)
mod['func_6760'] = func_6760
mod = relay.transform.InferType()(mod)
mutated_mod['func_6760'] = func_6760
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6760_call = mutated_mod.get_global_var('func_6760')
call_6761 = func_6760_call()
output = call_6761
func_6762 = relay.Function([], output)
mutated_mod['func_6762'] = func_6762
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5969_call = mod.get_global_var('func_5969')
func_5970_call = mutated_mod.get_global_var('func_5970')
call_6798 = func_5969_call()
call_6799 = func_5969_call()
output = call_6798
output2 = call_6799
func_6800 = relay.Function([], output)
mod['func_6800'] = func_6800
mod = relay.transform.InferType()(mod)
output = func_6800()
func_6801 = relay.Function([], output)
mutated_mod['func_6801'] = func_6801
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5572_call = mod.get_global_var('func_5572')
func_5573_call = mutated_mod.get_global_var('func_5573')
call_6805 = relay.TupleGetItem(func_5572_call(), 1)
call_6806 = relay.TupleGetItem(func_5573_call(), 1)
output = call_6805
output2 = call_6806
func_6813 = relay.Function([], output)
mod['func_6813'] = func_6813
mod = relay.transform.InferType()(mod)
mutated_mod['func_6813'] = func_6813
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6813_call = mutated_mod.get_global_var('func_6813')
call_6814 = func_6813_call()
output = call_6814
func_6815 = relay.Function([], output)
mutated_mod['func_6815'] = func_6815
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5545_call = mod.get_global_var('func_5545')
func_5547_call = mutated_mod.get_global_var('func_5547')
call_6816 = relay.TupleGetItem(func_5545_call(), 0)
call_6817 = relay.TupleGetItem(func_5547_call(), 0)
uop_6832 = relay.rsqrt(call_6816.astype('float32')) # shape=(13, 6, 14)
uop_6834 = relay.rsqrt(call_6817.astype('float32')) # shape=(13, 6, 14)
output = relay.Tuple([uop_6832,])
output2 = relay.Tuple([uop_6834,])
func_6841 = relay.Function([], output)
mod['func_6841'] = func_6841
mod = relay.transform.InferType()(mod)
mutated_mod['func_6841'] = func_6841
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6841_call = mutated_mod.get_global_var('func_6841')
call_6842 = func_6841_call()
output = call_6842
func_6843 = relay.Function([], output)
mutated_mod['func_6843'] = func_6843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6800_call = mod.get_global_var('func_6800')
func_6801_call = mutated_mod.get_global_var('func_6801')
call_6863 = func_6800_call()
call_6864 = func_6800_call()
var_6866 = relay.var("var_6866", dtype = "uint64", shape = (546, 2))#candidate|6866|(546, 2)|var|uint64
bop_6867 = relay.minimum(call_6863.astype('uint8'), relay.reshape(var_6866.astype('uint8'), relay.shape_of(call_6863))) # shape=(546, 2)
bop_6870 = relay.minimum(call_6864.astype('uint8'), relay.reshape(var_6866.astype('uint8'), relay.shape_of(call_6864))) # shape=(546, 2)
uop_6875 = relay.log2(bop_6867.astype('float64')) # shape=(546, 2)
uop_6877 = relay.log2(bop_6870.astype('float64')) # shape=(546, 2)
func_3972_call = mod.get_global_var('func_3972')
func_3974_call = mutated_mod.get_global_var('func_3974')
call_6879 = relay.TupleGetItem(func_3972_call(), 4)
call_6880 = relay.TupleGetItem(func_3974_call(), 4)
func_6240_call = mod.get_global_var('func_6240')
func_6243_call = mutated_mod.get_global_var('func_6243')
call_6882 = relay.TupleGetItem(func_6240_call(relay.reshape(bop_6867.astype('uint64'), [546, 2]), relay.reshape(call_6863.astype('uint64'), [546, 2]), ), 1)
call_6883 = relay.TupleGetItem(func_6243_call(relay.reshape(bop_6867.astype('uint64'), [546, 2]), relay.reshape(call_6863.astype('uint64'), [546, 2]), ), 1)
const_6887 = relay.const([[-9.991017,-0.309965],[3.396243,-9.435944],[7.316244,2.302480],[6.400416,-7.198285],[-5.483694,5.242612],[-9.986537,1.377976],[-7.804643,1.442938],[-7.101809,-6.043928],[3.178030,6.184439],[0.067774,-2.897450],[-5.390103,-2.997583],[9.452911,-2.248060],[3.084783,1.362309],[0.393690,-8.053749],[2.667382,-4.272104],[-9.351619,-6.257174],[8.114936,-1.634571],[-8.594386,-8.036251],[-3.764536,-9.003920],[7.293013,9.746929],[-4.559565,4.251297],[-7.885926,-8.999082],[2.530646,0.843039],[4.454741,1.862510],[5.081674,4.433831],[-7.492693,-7.564772],[6.036777,-6.746306],[8.022461,0.042970],[-0.061702,2.930433],[-7.522067,-9.297931],[2.632636,8.519553],[-3.114515,2.866015],[-8.135826,2.302760],[-7.907314,-6.670873],[-2.663990,8.788471],[-2.820289,8.750308],[3.619728,9.850117],[-6.365723,6.053723],[5.812619,-2.355891],[3.821518,6.793490],[1.128554,-4.260068],[3.399651,3.230329],[-8.283150,2.411235],[8.395605,3.694758],[-3.910991,1.772012],[1.484583,-5.931112],[2.532246,-3.814703],[-0.321574,4.687948],[-1.130389,-8.567474],[-2.035774,1.244948],[-3.514158,3.395179],[7.219466,-7.601628],[-9.436129,1.956696],[-7.765182,-8.107045],[-5.342302,-9.724637],[8.788975,-6.903744],[7.674622,6.926733],[-6.015682,-1.858352],[8.483053,6.188906],[1.590678,-1.255677],[9.405797,5.499163],[6.741520,1.966890],[-6.192335,7.577115],[5.887892,5.307038],[-8.740121,-7.657984],[1.618572,5.708107],[6.308223,4.868323],[-9.467850,-3.447415],[3.297204,5.222231],[3.925527,1.041410],[-9.971988,7.766115],[-4.167583,-3.818735],[1.719584,-1.083725],[-8.671406,-0.602559],[-4.236222,-1.420852],[7.402747,-2.971462],[-5.273698,-7.803937],[-7.144084,6.156393],[-6.662775,4.770049],[7.778610,6.263874],[-4.499856,9.348192],[8.313095,-4.034090],[6.555337,-2.701555],[9.772516,-6.024871],[-9.721632,-4.967445],[-2.312747,2.597350],[-4.261776,0.347732],[-0.641679,7.388231],[-0.081727,7.607452],[-7.405853,6.433909],[-6.926703,-5.211030],[-5.268854,4.457776],[2.891203,-8.901472],[2.057122,-5.788789],[-5.314861,1.027790],[-3.500209,1.377702],[0.887172,-9.636734],[6.381015,-2.580549],[6.539913,5.950810],[7.900914,-2.246110],[-9.483358,-7.997635],[-8.570684,-0.759893],[-7.400747,-3.155372],[-9.411002,-8.600856],[-9.661522,8.457331],[-1.135008,-7.103466],[-4.729329,-1.436974],[-5.872334,8.061032],[0.726341,4.242344],[-5.743747,-0.868745],[7.323870,-0.709975],[-0.784459,-8.593061],[0.985444,-5.387833],[0.846042,-9.023183],[8.777335,6.364299],[8.441872,-7.843723],[-7.288590,6.126330],[6.570454,7.884249],[-3.635827,-1.788266],[-6.645511,4.229365],[-5.792112,-1.149969],[-7.689346,-6.091136],[1.651723,-7.353507],[-9.594363,8.719463],[-7.776860,0.271767],[-5.126500,-6.654982],[-0.555428,4.366418],[2.186453,2.625858],[8.726326,1.622780],[-8.297331,0.064465],[6.002068,-0.778099],[-4.478754,-6.029589],[-9.133048,1.319621],[4.284200,3.467545],[-2.777904,-1.072285],[-3.036086,-7.148149],[3.318747,6.496430],[2.342825,3.252402],[-3.274993,-8.914208],[6.403969,2.699058],[-5.890729,-3.294062],[6.492045,-1.487626],[0.262487,0.967667],[-8.430159,0.220958],[-9.132705,5.717225],[9.830418,-5.207230],[-0.250594,-2.972386],[-7.209881,-6.834349],[-4.163976,-0.525110],[-3.653306,-6.191367],[2.535881,5.861641],[3.598163,-5.917983],[-9.301997,9.788627],[-9.508055,1.822551],[-1.455301,9.656652],[-1.007326,9.737851],[-9.505843,-0.789860],[-7.456445,-4.038341],[-9.002532,6.308490],[-8.637427,5.571789],[8.053328,-8.451410],[7.344713,6.347532],[-2.891853,-2.198104],[-4.963364,3.797966],[8.653920,7.769554],[-1.836979,5.254573],[-2.881279,-5.211289],[-6.785036,7.963865],[-3.197306,-6.067685],[6.574810,3.776449],[-0.779752,-6.195445],[-2.581902,3.590028],[8.937432,0.129482],[1.436138,2.677052],[-8.281141,-3.140445],[5.294704,-2.333861],[-5.920996,4.501450],[-1.112758,6.103387],[-4.178056,5.880028],[7.896943,-4.181038],[-7.645716,5.313958],[2.745243,3.725653],[-9.414201,-1.354733],[4.089418,-9.912439],[2.319636,9.525126],[-1.530931,-3.330105],[4.446755,5.617676],[9.738911,4.181610],[-0.191153,6.788104],[3.636405,9.818441],[-4.134296,-9.070824],[-8.503863,4.220036],[-9.882289,-9.310020],[8.759868,-7.545303],[-9.735943,-6.734327],[2.932024,4.097597],[-8.767302,4.251740],[3.634893,7.571228],[8.259537,2.672740],[-3.453063,7.933002],[-9.137932,-7.972779],[4.172352,-9.836351],[-2.818070,1.799263],[-7.501552,3.295608],[2.263119,1.764721],[9.826531,-2.003328],[-8.893432,6.659646],[0.720920,4.835091],[-7.708764,9.968370],[-1.730126,7.515637],[-6.719574,3.107737],[-2.997738,5.578466],[5.993128,-6.914579],[-6.496968,0.645449],[3.072928,1.768425],[-8.706415,-0.369644],[-3.097517,-9.412247],[5.227002,-9.693379],[-9.727810,-5.321169],[-0.851507,-3.699598],[-3.240465,1.011711],[3.423894,3.322830],[8.337178,5.626255],[-4.214308,-2.760381],[-5.772931,4.571899],[-8.933578,2.529362],[8.190636,9.176016],[-5.322237,-9.945659],[9.283436,2.365795],[-7.278374,1.405007],[3.566671,4.475402],[-0.204443,5.653637],[-9.547774,-6.883566],[-7.270975,6.066706],[6.624367,5.881346],[-6.663449,7.971317],[9.177921,9.311093],[1.645704,3.777540],[9.661641,-7.450667],[-4.282831,-0.619678],[5.778992,-4.965414],[6.306824,2.980087],[-0.386862,-2.985667],[-7.402188,-4.238247],[-0.496234,-1.593648],[-0.855683,-8.397330],[-3.784344,2.345394],[-1.963124,-2.634857],[-5.368329,8.847340],[-8.515487,5.102606],[-7.280785,-6.501142],[6.122778,-1.553118],[-6.122967,0.382809],[6.523605,-0.737567],[3.605925,-3.047600],[-6.613044,3.697980],[2.910653,-3.665525],[5.784125,1.896476],[8.169276,1.228890],[-5.328102,-3.097476],[-0.303597,-1.720790],[6.909913,6.532645],[-8.550956,1.344833],[-4.372415,-7.302318],[7.192595,-2.059929],[-0.370523,-5.987856],[9.734281,-0.167111],[-6.194413,-4.591818],[-2.387726,-1.260881],[0.262605,-4.497102],[3.408076,-1.334367],[-7.139036,-5.720440],[7.798224,2.004939],[-1.368953,9.664789],[8.592555,1.654074],[-6.529271,-0.968869],[-6.871531,7.637852],[-3.316542,-1.750942],[6.296250,-7.524214],[3.166000,4.070812],[0.411187,-4.170879],[7.615702,5.724498],[2.871446,-6.685757],[-0.791093,-4.910206],[9.331522,-3.663482],[-6.886565,0.841613],[-7.814232,4.127655],[-2.672386,-9.527459],[9.247723,8.724855],[3.549626,8.034529],[-0.429093,-2.285264],[-6.535647,1.558854],[-9.787249,-3.887971],[-2.823126,-6.952165],[4.276207,-4.864037],[4.158943,3.844574],[0.188912,6.936757],[1.409433,5.951503],[-1.014205,-5.223047],[4.756345,-6.177669],[2.841812,-3.244010],[-0.705229,-6.126123],[-0.676616,-9.054612],[-3.603393,6.053723],[-3.507642,-6.576306],[1.369679,2.573327],[8.677907,0.919860],[-0.262726,2.611619],[-2.389814,1.974641],[-7.276906,-5.068894],[2.702518,-5.258394],[-0.542033,8.427127],[-7.992786,-1.472393],[-1.386507,8.547061],[8.948594,-2.172315],[-7.499130,8.693872],[8.793468,-6.800551],[3.433859,-8.158684],[9.271862,-5.161779],[-0.260408,-2.492196],[6.278311,4.996953],[5.194573,6.018924],[9.073034,-3.857795],[7.431125,-2.805740],[-9.439624,3.497580],[4.750310,-7.869720],[-6.189436,-5.010860],[2.386959,-3.392706],[8.163933,-5.445372],[-1.846960,1.032205],[4.225436,-0.608530],[1.064864,9.711778],[5.027216,8.149656],[-0.508862,7.106755],[-8.654867,-4.420154],[-0.906752,-1.047117],[-5.483137,-4.688564],[4.195849,-4.663016],[1.544307,6.029817],[9.768065,9.681192],[3.852861,1.421844],[-8.460696,2.608874],[-7.838988,-7.624686],[-2.219534,-9.682861],[2.506163,4.811350],[-5.437731,3.552209],[-5.480415,-5.454910],[4.472128,-3.159945],[3.795983,8.107770],[-0.917370,-9.116655],[-6.906769,-6.714744],[-8.778946,6.105902],[0.625999,-1.491687],[-9.608463,-9.244611],[-3.837662,-3.530403],[-6.391743,9.671509],[-2.503040,3.227149],[7.693424,6.829487],[0.043067,-0.504356],[-0.087408,9.470989],[-5.567028,0.800778],[-4.685419,-3.652178],[-1.383549,-8.752496],[6.119915,-8.621204],[-2.319252,6.951158],[-3.320600,6.095489],[-8.702657,0.190762],[2.287726,-9.510260],[-9.976209,-7.833255],[5.234365,5.026344],[8.849199,-2.395519],[4.000563,-6.418251],[3.978357,2.993601],[-7.242491,4.064318],[-5.761444,3.689579],[8.907633,-6.270336],[3.061738,-8.522811],[2.243564,4.745851],[-3.564838,3.959639],[-6.850333,2.258199],[7.082047,7.918998],[-3.403937,-6.351422],[2.011465,-9.532109],[-5.750552,-1.374874],[-8.673780,-6.519692],[5.543734,-3.525354],[-1.709356,9.198328],[-9.761415,-3.329924],[-5.906492,9.335093],[-0.361337,9.373658],[-8.695416,-7.316685],[-6.774450,-9.391004],[-9.352545,-8.895227],[-3.117925,2.842541],[7.669536,-8.059988],[7.022328,0.869812],[-4.723897,-5.134755],[0.570176,1.317860],[-9.083263,-4.215264],[-3.153749,5.547359],[4.994741,-5.884011],[-9.041384,-4.360469],[4.397977,3.563943],[9.183135,-1.018349],[-3.340653,-6.171454],[-4.267848,7.372031],[-1.316358,-6.307460],[-3.552459,2.046970],[8.964129,-5.747264],[7.308550,6.612968],[8.841008,1.335207],[-0.438771,-3.424907],[5.556766,-3.014325],[-8.248654,-2.641980],[0.702434,-1.925022],[-0.016208,5.257501],[5.796267,4.178587],[9.572743,2.389098],[-4.805623,2.172365],[-8.578246,7.472194],[2.134168,-3.750118],[4.552594,-9.382005],[4.842420,-0.651651],[-2.312315,6.374862],[5.039223,-9.273066],[-2.973599,9.108411],[-1.283626,4.424389],[1.894117,-5.116572],[-0.726052,-5.611525],[8.372405,-6.067789],[4.754619,-3.919889],[-9.568900,-0.781027],[6.623755,-9.014042],[-1.476699,-9.861051],[0.622361,-4.336876],[-2.010966,3.924824],[5.514662,-4.501019],[-8.794795,8.018800],[9.434236,7.660429],[1.274875,-0.133282],[-6.446345,-1.529337],[-7.223125,6.087314],[-3.477802,-3.621560],[0.480021,9.613102],[-1.997336,5.554503],[-2.231937,-2.445490],[0.412789,-7.842256],[3.660268,3.535952],[0.966862,1.474014],[-6.813853,8.217789],[-8.410665,8.272395],[2.373446,-1.210218],[-2.931755,-1.032036],[-6.429929,-5.291484],[-1.732045,-3.670550],[4.128347,9.021046],[-4.072416,2.878503],[-2.772829,9.436417],[-2.773491,-9.678510],[-5.786488,7.717277],[-0.051882,6.768141],[2.235008,-1.891547],[-7.098014,3.069818],[-9.931797,5.990409],[0.491463,8.757343],[4.853618,-3.881387],[7.673485,-8.639689],[0.675682,-2.218792],[0.207780,-3.344169],[-3.419012,1.505178],[-4.226958,-2.203000],[5.378831,4.185033],[-3.863301,-1.805399],[5.105643,-9.052715],[6.550071,-4.951309],[-2.755184,4.468324],[0.442149,-2.893609],[-7.017112,-2.880961],[8.896588,-5.262862],[-2.585176,3.382132],[-1.458875,7.430296],[5.782600,6.551779],[-2.875071,1.758610],[-6.099759,-0.010879],[7.638230,6.653354],[-3.403792,-8.834708],[1.539489,5.016247],[-1.496535,-5.080664],[-7.982706,-3.174675],[2.074898,2.951787],[-7.254830,0.025888],[4.951926,-4.518387],[-2.591222,-5.205299],[6.921571,-5.836740],[5.954218,7.166427],[4.174362,5.607879],[8.030741,9.613350],[5.770668,-2.166438],[0.369176,-8.809235],[3.381383,7.501671],[7.488345,6.768221],[-5.387302,6.986768],[0.883548,1.025593],[-3.229684,-9.345529],[9.687342,8.680421],[-3.402670,-7.106378],[9.596489,-4.533725],[8.681646,-8.603077],[-3.590651,7.828148],[-6.740579,-0.961369],[9.689707,-5.866044],[-8.468223,7.906708],[-8.399888,-3.544643],[-4.297095,-6.507791],[-6.807733,8.655386],[0.050666,-8.273385],[6.074301,-6.490903],[-5.405236,4.366833],[6.209672,9.573127],[-4.439503,1.802961],[6.053335,-4.422642],[-3.542107,4.154821],[4.551240,-8.832518],[7.959362,-5.138044],[-3.769711,-5.611137],[-5.807907,3.192329],[4.718100,7.842882],[4.724765,-1.743217],[0.700577,9.208335],[2.470735,-0.075690],[3.384960,9.736661],[1.785977,7.982221],[0.970885,-1.061062],[1.664046,0.987395],[-4.925474,-3.523921],[5.747659,9.502780],[5.348583,-4.538502],[6.995663,-2.641736],[5.508509,8.745270],[4.862140,-1.598361],[-4.337828,-3.828287],[-9.728799,-3.375773],[4.389813,1.714644],[7.362096,2.063049],[5.269928,-8.852798],[-4.015617,5.849648]], dtype = "float64")#candidate|6887|(546, 2)|const|float64
bop_6888 = relay.left_shift(uop_6875.astype('uint8'), relay.reshape(const_6887.astype('uint8'), relay.shape_of(uop_6875))) # shape=(546, 2)
bop_6891 = relay.left_shift(uop_6877.astype('uint8'), relay.reshape(const_6887.astype('uint8'), relay.shape_of(uop_6877))) # shape=(546, 2)
func_3069_call = mod.get_global_var('func_3069')
func_3070_call = mutated_mod.get_global_var('func_3070')
call_6896 = func_3069_call()
call_6897 = func_3069_call()
output = relay.Tuple([call_6879,call_6882,bop_6888,call_6896,])
output2 = relay.Tuple([call_6880,call_6883,bop_6891,call_6897,])
func_6901 = relay.Function([var_6866,], output)
mod['func_6901'] = func_6901
mod = relay.transform.InferType()(mod)
var_6902 = relay.var("var_6902", dtype = "uint64", shape = (546, 2))#candidate|6902|(546, 2)|var|uint64
output = func_6901(var_6902)
func_6903 = relay.Function([var_6902], output)
mutated_mod['func_6903'] = func_6903
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6800_call = mod.get_global_var('func_6800')
func_6801_call = mutated_mod.get_global_var('func_6801')
call_6925 = func_6800_call()
call_6926 = func_6800_call()
output = call_6925
output2 = call_6926
func_6927 = relay.Function([], output)
mod['func_6927'] = func_6927
mod = relay.transform.InferType()(mod)
output = func_6927()
func_6928 = relay.Function([], output)
mutated_mod['func_6928'] = func_6928
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6841_call = mod.get_global_var('func_6841')
func_6843_call = mutated_mod.get_global_var('func_6843')
call_6962 = relay.TupleGetItem(func_6841_call(), 0)
call_6963 = relay.TupleGetItem(func_6843_call(), 0)
func_6710_call = mod.get_global_var('func_6710')
func_6712_call = mutated_mod.get_global_var('func_6712')
var_7000 = relay.var("var_7000", dtype = "uint64", shape = (1080,))#candidate|7000|(1080,)|var|uint64
call_6999 = relay.TupleGetItem(func_6710_call(relay.reshape(var_7000.astype('uint64'), [1080,])), 6)
call_7001 = relay.TupleGetItem(func_6712_call(relay.reshape(var_7000.astype('uint64'), [1080,])), 6)
func_4253_call = mod.get_global_var('func_4253')
func_4256_call = mutated_mod.get_global_var('func_4256')
const_7006 = relay.const([-8.082780,-7.283325,-5.441971,6.866007,-2.375901,-2.886168,-0.612303,9.885715,0.651377,1.269484,-6.917149,5.146378,7.339234,2.190938,-9.171176,-1.155207,5.286087,8.300573,-4.842249,5.836095,3.094398,-3.518922,-4.978200,3.151861,-0.992031,-2.775155,-1.674689,-2.734929,4.013994,-6.802698,5.921392,-6.206360,-8.749841,-8.855627,4.481461,2.894251,5.379858,-4.209335,7.689498,4.551084,-5.465855,-3.909058,0.430790,-7.495965,3.771110,-8.961418,1.486735,7.380939,6.507682,8.930975,1.798569,7.358713,-3.268066,-8.449825,8.006368,-7.267723,-5.927573,-0.032344,9.312817,-8.195269,3.989841,8.313049,6.795615,-8.964373,-4.104534,8.953696,-0.744936,-8.858245,2.270624,5.225608,-3.833808,-3.688112,-9.428068,2.672557,-5.964487,-4.859202,-7.331055,-4.950918,-9.620473,-8.777305,-8.018198,-0.896346,-6.761780,-2.858363,-3.162466,-4.075271,9.643676,9.976984,6.207904,9.416310,-6.171405,-4.654735,-5.011020,-2.408792,9.543845,4.349948,6.611415,5.286991,1.387541,6.033827,2.326673,-7.307340,-7.621964,-6.403888,-2.627280,8.964669,-2.128575,-7.732967,0.922855,8.703026,0.933821,-0.278067,1.987107,5.087176,5.074340,-0.820331,-2.848420,2.508355,-7.133510,1.101249,-7.958657,3.835697,-8.534297,3.280804,-0.560654,-1.338340,9.643590,-9.041135,-4.939432,1.207951,-3.579861,-9.035755,4.219282,-1.595967,-2.664466,-7.603440,-6.851310,2.244963,3.432723,-3.044980,8.721866,-7.991903,-9.280485,7.471587,-0.861911,-2.337802,-4.796975,4.531134,6.146868,6.277847,6.714688,-9.961603,3.204266,-6.822586,-6.321179,6.527264,-1.160978,-8.940182,-9.299315,2.247586,4.759182,-1.260952,6.966643,2.236386,0.592753,-3.553404,-4.398077,-0.747747,-3.210947,8.788094,-3.596196,-4.086393,-9.469912,5.985002,4.495766,9.367110,-7.576515,-0.348667,3.629190,-1.962837,7.877907,-0.925677,2.993457,7.257723,4.985818,-7.074605,4.940185,-0.913115,-6.260906,7.105626,8.363047,-9.278535,-9.901024,3.482940,-7.409645,-2.215995,-8.816130,5.101876,9.118977,0.612954,2.432896,-3.621502,-5.287517,-3.456097,-6.702995,-4.929748,-6.261631,-5.296234,-5.726447,9.743094,9.964068,-8.696020,-0.070686,-7.071350,-3.879650,-1.347845,7.116323,1.660168,-9.731985,-5.820277,4.636111,-8.068908,7.440265,-1.507207,-6.461221,-3.219342,7.425011,2.032040,6.749030,0.305302,3.778876,7.556782,3.224938,-2.852907,1.889802,-8.841154,-4.136096,-2.767806,0.067302,9.151891,-3.540231,-4.691975,-7.916814,9.322807,8.369615,5.342173,0.118005,2.249825,9.876157,-3.614002,0.358558,1.535290,6.729789,2.045489,-4.226605,-0.333296,6.924741,-1.860026,-5.237688,2.420397,7.712266,-0.053384,2.368000,3.025609,0.428302,1.918287,-8.754734,-1.811325,2.570189,7.577694,-9.576524,-9.823451,-0.737094,0.173902,5.003080,-8.497451,-1.646061,9.587710,-9.987582,-6.084165,-3.221450,-1.560243,2.785022,-8.415341,5.373409,-2.341966,7.015831,8.932129,-2.623946,-7.418094,9.185266,-0.665153,5.425693,3.715555,-3.133154,7.394912,-1.843959,4.774770,4.494044,-7.087315,8.295259,-6.712648,2.275832,-2.653637,0.477415,4.514843,9.154458,-6.152464,6.150773,5.282945,4.116133,-3.398143,-7.023005,3.052276,8.053200,-2.053753,1.554644,7.285481,-7.574214,-1.178869,-1.062070,-7.669967,6.305533,-8.963907,9.544982,-1.839216,8.479536,-8.899976,-8.118643,4.029891,0.194779,5.491028,-0.830025,5.741896,-9.829236,-1.370566,-2.338294,7.226618,0.662493,-7.648802,6.844280,-2.825908,-0.140877,-7.578325,-4.106733,-0.157498,-3.252853,-3.265991,6.802909,0.952190,5.542918,-8.797191,1.823269,0.450032,-5.970263,3.817034,-4.016809,-2.028922,-5.561796,-6.797706,-6.145937,-1.369237,-8.181720,3.840063,-6.731816,9.884018,2.348415,5.363621,2.369315,7.090435,7.180945,8.545827,-9.235703,-4.031876,8.472300,-8.905836,3.092077,-0.503084,2.671177,5.268574,-6.788925,-9.646526,5.676738,-5.575069,-9.585130,-8.615536,-0.324134,-7.446970,6.348618,7.206154,9.709517,-0.027863,-7.772739,-0.279360,-0.128900,-4.084373,-1.184494,-4.147321,-7.509902,0.153786,6.265493,-7.737611,0.244155,-7.576806,7.222146,4.067283,2.662602,-9.054259,-7.045135,-8.707268,-2.876941,-9.768509,2.140470,-1.933170,7.877922,-1.281590,3.753486,2.437077,9.120371,2.284192,6.252268,3.789655,-9.558036,1.161342,-1.343594,-7.299396,-1.952883,-9.439095,9.804582,9.896374,-1.072322,6.423883,4.262557,-6.347634,9.295090,5.486868,2.129367,2.336563,-4.981697,-4.422722,-9.496860,-9.954104,7.102918,-3.585981,0.251297,-2.116685,-7.645645,-6.779002,-8.480882,-1.011476,-6.430018,-0.171166,9.642477,-3.471616,-6.420719,-7.521763,0.028069,1.531886,5.677019,0.771274,-2.464835,-0.712686,-5.033695,-4.854754,-0.765739,-3.682729,-8.343722,-2.621318,-2.152040,-0.043346,9.856273,-7.164632,7.956382,-7.125298,8.785633,4.073353,0.800086,-7.390635,-2.072272,-9.512538,-4.550378,-7.721365,2.393989,-0.662743,7.039280,2.682515,3.532774,8.716837,7.477227,-0.031745,5.089880,-4.355347,0.724022,-1.063107,5.943710,-2.347714,8.529861,4.273482,3.080995,1.474613,-5.649751,-2.043612,-7.138815,-0.469402,3.683640,-5.268082,-9.678559,4.325027,-6.163305,-8.783720,-7.440957,3.482698,4.487354,-5.974471,-9.342521,1.069903,-2.771616,-7.782192,1.113798,1.842815,1.864793,4.795629,-3.445554,-9.546132,3.438939,3.967095,1.948293,7.055007,0.889296,-7.068164,6.705933,-8.450750,1.544661,-9.261982,5.405453,1.834417,-4.987245,-6.147416,3.097145,9.665464,3.909332,-4.652521,1.696015,6.881536,7.587769,-0.471324,8.853211,4.362100,5.941922,5.497917,9.339254,-7.312945,-3.715707,-0.247288,0.465077,-4.809222,-1.820670,7.285912,-6.846739,-7.107352,-3.812744,0.748923,8.237415,-3.431592,-1.926439,4.628607,-2.205513,9.618690,8.249650,-9.407938,7.836044,1.722150,8.867474,0.780475,-8.929788,-5.054063,-1.453605,-2.883875,-3.522770,9.641203,5.059105,-1.766828,-2.353756,-9.281056,5.304695,-0.922155,2.632743,3.129170,-7.500035,-8.022084,-5.135230,-0.064024,-4.305392,4.605215,0.734762,-0.121337,1.661221,8.041344,-6.406938,4.674303,-0.927946,4.387191,-1.099523,6.592662,4.803209,6.235498,-1.059654,2.918851,-5.017335,8.504935,6.268109,-8.733383,-3.962009,-6.147103,6.333691,-7.068237], dtype = "float64")#candidate|7006|(616,)|const|float64
call_7005 = func_4253_call(relay.reshape(const_7006.astype('float64'), [11, 4, 14]))
call_7007 = func_4253_call(relay.reshape(const_7006.astype('float64'), [11, 4, 14]))
func_3844_call = mod.get_global_var('func_3844')
func_3846_call = mutated_mod.get_global_var('func_3846')
call_7008 = relay.TupleGetItem(func_3844_call(relay.reshape(var_7000.astype('uint64'), [1080,])), 2)
call_7009 = relay.TupleGetItem(func_3846_call(relay.reshape(var_7000.astype('uint64'), [1080,])), 2)
output = relay.Tuple([call_6962,call_6999,var_7000,call_7005,const_7006,call_7008,])
output2 = relay.Tuple([call_6963,call_7001,var_7000,call_7007,const_7006,call_7009,])
func_7017 = relay.Function([var_7000,], output)
mod['func_7017'] = func_7017
mod = relay.transform.InferType()(mod)
var_7018 = relay.var("var_7018", dtype = "uint64", shape = (1080,))#candidate|7018|(1080,)|var|uint64
output = func_7017(var_7018)
func_7019 = relay.Function([var_7018], output)
mutated_mod['func_7019'] = func_7019
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4669_call = mod.get_global_var('func_4669')
func_4671_call = mutated_mod.get_global_var('func_4671')
call_7023 = relay.TupleGetItem(func_4669_call(), 0)
call_7024 = relay.TupleGetItem(func_4671_call(), 0)
uop_7025 = relay.cos(call_7023.astype('float64')) # shape=(13, 6, 14)
uop_7027 = relay.cos(call_7024.astype('float64')) # shape=(13, 6, 14)
output = uop_7025
output2 = uop_7027
func_7032 = relay.Function([], output)
mod['func_7032'] = func_7032
mod = relay.transform.InferType()(mod)
mutated_mod['func_7032'] = func_7032
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7032_call = mutated_mod.get_global_var('func_7032')
call_7033 = func_7032_call()
output = call_7033
func_7034 = relay.Function([], output)
mutated_mod['func_7034'] = func_7034
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5067_call = mod.get_global_var('func_5067')
func_5068_call = mutated_mod.get_global_var('func_5068')
call_7079 = func_5067_call()
call_7080 = func_5067_call()
uop_7082 = relay.exp(call_7079.astype('float32')) # shape=(546, 2)
uop_7084 = relay.exp(call_7080.astype('float32')) # shape=(546, 2)
output = uop_7082
output2 = uop_7084
func_7085 = relay.Function([], output)
mod['func_7085'] = func_7085
mod = relay.transform.InferType()(mod)
mutated_mod['func_7085'] = func_7085
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7085_call = mutated_mod.get_global_var('func_7085')
call_7086 = func_7085_call()
output = call_7086
func_7087 = relay.Function([], output)
mutated_mod['func_7087'] = func_7087
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5195_call = mod.get_global_var('func_5195')
func_5196_call = mutated_mod.get_global_var('func_5196')
call_7135 = func_5195_call()
call_7136 = func_5195_call()
func_5572_call = mod.get_global_var('func_5572')
func_5573_call = mutated_mod.get_global_var('func_5573')
call_7146 = relay.TupleGetItem(func_5572_call(), 0)
call_7147 = relay.TupleGetItem(func_5573_call(), 0)
uop_7158 = relay.tan(call_7135.astype('float32')) # shape=(546, 2)
uop_7160 = relay.tan(call_7136.astype('float32')) # shape=(546, 2)
uop_7162 = relay.acos(uop_7158.astype('float64')) # shape=(546, 2)
uop_7164 = relay.acos(uop_7160.astype('float64')) # shape=(546, 2)
bop_7165 = relay.not_equal(uop_7158.astype('bool'), relay.reshape(call_7135.astype('bool'), relay.shape_of(uop_7158))) # shape=(546, 2)
bop_7168 = relay.not_equal(uop_7160.astype('bool'), relay.reshape(call_7136.astype('bool'), relay.shape_of(uop_7160))) # shape=(546, 2)
output = relay.Tuple([call_7146,uop_7162,bop_7165,])
output2 = relay.Tuple([call_7147,uop_7164,bop_7168,])
func_7170 = relay.Function([], output)
mod['func_7170'] = func_7170
mod = relay.transform.InferType()(mod)
output = func_7170()
func_7171 = relay.Function([], output)
mutated_mod['func_7171'] = func_7171
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5169_call = mod.get_global_var('func_5169')
func_5171_call = mutated_mod.get_global_var('func_5171')
call_7202 = func_5169_call()
call_7203 = func_5169_call()
uop_7221 = relay.log(call_7202.astype('float64')) # shape=(5, 4, 7)
uop_7223 = relay.log(call_7203.astype('float64')) # shape=(5, 4, 7)
uop_7225 = relay.exp(uop_7221.astype('float32')) # shape=(5, 4, 7)
uop_7227 = relay.exp(uop_7223.astype('float32')) # shape=(5, 4, 7)
output = relay.Tuple([uop_7225,])
output2 = relay.Tuple([uop_7227,])
func_7228 = relay.Function([], output)
mod['func_7228'] = func_7228
mod = relay.transform.InferType()(mod)
output = func_7228()
func_7229 = relay.Function([], output)
mutated_mod['func_7229'] = func_7229
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5195_call = mod.get_global_var('func_5195')
func_5196_call = mutated_mod.get_global_var('func_5196')
call_7256 = func_5195_call()
call_7257 = func_5195_call()
output = relay.Tuple([call_7256,])
output2 = relay.Tuple([call_7257,])
func_7258 = relay.Function([], output)
mod['func_7258'] = func_7258
mod = relay.transform.InferType()(mod)
output = func_7258()
func_7259 = relay.Function([], output)
mutated_mod['func_7259'] = func_7259
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4750_call = mod.get_global_var('func_4750')
func_4752_call = mutated_mod.get_global_var('func_4752')
call_7275 = relay.TupleGetItem(func_4750_call(), 0)
call_7276 = relay.TupleGetItem(func_4752_call(), 0)
func_3985_call = mod.get_global_var('func_3985')
func_3987_call = mutated_mod.get_global_var('func_3987')
var_7280 = relay.var("var_7280", dtype = "float32", shape = (1408,))#candidate|7280|(1408,)|var|float32
call_7279 = relay.TupleGetItem(func_3985_call(relay.reshape(var_7280.astype('float32'), [11, 8, 16])), 0)
call_7281 = relay.TupleGetItem(func_3987_call(relay.reshape(var_7280.astype('float32'), [11, 8, 16])), 0)
func_4294_call = mod.get_global_var('func_4294')
func_4297_call = mutated_mod.get_global_var('func_4297')
const_7293 = relay.const([0.938686,6.852180,1.511467,-9.069880,-3.406223,-1.049414,-5.817383,-5.516660,9.517676,2.139564,-9.199974,-6.516634,6.713200,-7.389145,-8.472647,-5.755658,-2.081015,-9.915000,-1.895555,4.910814,-6.121924,-2.957931,-9.108607,0.747579,9.047808,-9.938704,0.880276,-6.871259,-0.498860,4.385224,-9.946261,-1.599860,9.451949,-4.763738,3.952589,-1.105824,-5.071451,-1.140618,-3.999389,-3.039418,2.902162,4.103451,1.125782,4.588046,-6.101763,-0.595829,9.932533,6.862769,5.441288,-7.058263,2.564403,9.642719,7.772961,-0.177494,1.526725,-2.323987,0.007390,2.116128,3.790839,-7.202163,8.252678,5.915807,-4.361655,1.262518,-8.588751,-4.281458,6.024415,3.970924,-4.534761,-1.316029,-4.838835,-9.623286,-4.009163,-0.514696,-3.306841,0.121277,-5.760265,-1.533933,2.238775,-5.511878,-6.287769,7.035538,-4.052600,-3.450122,-9.862487,9.924644,8.237793,2.228314,9.195042,-2.087361,-1.683230,-0.850715,-6.431405,5.196420,-1.455794,8.490799,4.529610,-9.629667,-9.787931,-9.878751,2.633586,7.883658,3.052336,-5.706661,6.655284,-1.614886,-2.659508,-3.928240,-4.405118,-3.772355,3.577282,6.139045,-8.962340,6.791440,-2.020466,-5.847164,2.904787,1.377077,-8.402877,0.798721,-2.439554,4.767099,-9.361996,3.679652,-6.656085,-8.771861,3.486403,-2.171307,5.110495,-8.746468,8.102260,-9.838585,0.664088,4.295700,7.150624,3.104535,-8.847530,5.599111,-9.433369,5.998524,-2.413262,-8.261463,5.728641,-2.327330,-6.618063,8.844173,9.136732,-3.164686,8.982425,-4.312431,0.485623,-3.809899,-1.067813,-9.308471,-7.641368,9.257228,7.535461,-9.301570,-5.102084,-8.911446,-2.877260,-0.212914,3.829668,-0.965574,-0.480378,4.669939,-3.322136,-1.427989,3.921436,7.544310,-4.135351,6.304727,-5.129210,8.368713,-8.166619,-4.043917,1.174039,-5.958528,4.274722,5.664344,5.724919,6.667093,-9.623400,-3.665832,0.491022,0.768261,7.556741,7.927652,-5.964516,-5.845317,-2.746285,6.622330,-1.160375,-9.050481,-2.115956,7.464590,9.540918,8.253669,-2.370571,8.473516,9.888027,-7.087072,4.099155,9.889987,-5.625081,-5.239405,-0.206573,-2.339206,4.859579,-9.441814,-7.043206,6.426590,7.351810,4.072097,4.616043,6.671112,1.624000,1.575619,2.866938,-7.702750,-8.604911,0.952496,7.438886,6.007936,-3.124838,-3.471832,-5.747994,-3.303090,4.531103,5.697148,0.947463,6.809314,-6.070494,3.443266,1.306880,6.470169,6.752262,-4.336534,-1.999092,7.222221,-4.986671,0.215351,-7.282900,-2.016563,3.255202,-1.693720,-8.814138,8.480516,-3.646350,-2.621314,6.985485,0.427390,-7.078454,2.537332,-8.469598,-2.343914,-4.270281,8.319413,3.120907,-0.698781,5.624587,3.294519,9.552164,8.418173,-8.170878,1.542805,7.674875,-5.847253,1.492464,6.457303,-9.871738,-0.456486,6.441242,0.669413,3.819652,-0.044159,-9.516513,-3.276808,-9.020929,9.406267,1.284779,-8.776703,-4.165855,5.676973,-3.076039,5.471225,-3.469089,-5.076515,0.535339,-4.201839,9.815149,4.986834,4.503953,6.013163,8.540275,-6.673266,-7.428251,-9.092014,4.515771,-5.851785,-3.977429,-3.434172,1.650032,-8.935432,1.821774,1.177967,8.209022,-3.901132,-4.413086,4.677820,2.198734,-2.668361,-4.920190,-7.426163,-5.597382,-8.587488,-1.656687,2.696499,1.214152,-6.246133,8.403369,2.664659,-3.623240,6.213348,-7.881804,5.852737,-8.126137,6.829131,-8.370495,-9.765064,-9.362265,0.232858,1.938517,-9.394198,-5.170628,9.086781,-0.745211,3.645893,9.128184,1.704287,9.456971,4.577341,-2.808830,-9.044122,-8.226484,-2.839094,6.664154,9.085795,-6.128366,6.937529,-3.467963,-2.334018,-6.056107,5.194851,-1.462936,3.285943,0.530817,6.302741,4.511235,-6.306437,-9.290904,-7.253325,-9.331803,3.327945,2.788666,-5.152719,4.561274,-4.062250,-0.203534,0.454027,-5.066007,-5.121218,9.614182,9.427510,5.170329,-6.776719,-1.727114,-0.932095,-5.351192,-5.411228,-5.958547,7.538132,3.086702,6.420573,-4.555296,1.998964,2.936313,-9.491105,0.424451,4.237125,-6.705819,7.973968,-7.323650,3.145730,1.027067,-4.139898,-8.251593,5.706054,4.490424,2.784762,-3.648304,-5.412258,-4.767199,-2.721404,4.911310,1.450364,-9.023956,-6.374794,-2.553300,5.419767,7.439436,3.900770,-2.868621,-5.459120,-8.743104,5.687542,-7.896679,-2.200987,-1.046784,-1.068488,2.342051,0.464572,-2.033968,-5.812397,-6.264502,-6.541962,-2.733270,8.885431,9.396683,-3.496193,-7.140813,-0.697280,-0.453413,5.544564,4.359151,-7.742879,8.035542,-7.379831,5.706026,-2.843173,8.297699,-1.788942,1.960520,-2.205570,7.926185,-2.655280,-4.796410,-2.833416,1.092158,9.176999,1.181906,5.133848,-2.474851,2.316109,6.954418,4.175139,-0.669342,-3.209080,7.916319,-0.456796,0.127482,-4.480583,5.994038,-0.476935,8.968407,-6.371719,0.793276,9.842759,5.104979,-2.503420,7.113584,2.686562,4.367444,8.822362,-7.249896,2.698803,-9.555520,9.831618,-4.733946,-3.267892,-6.085230,-5.905924,7.615765,0.401224,-6.959865,5.731248,3.842315,-4.198412,-3.061034,7.254444,2.786506,-9.756911,5.193950,-4.212518,-8.956359,4.125265,1.505516,-3.256538,9.814407,2.022366,3.579882,1.359510,-7.414016,9.410703,7.105239,8.585306,8.436914,-0.055749,-7.290626,-3.452138,-0.376188,3.766480,-5.071510,-4.966870,0.418986,2.923818,-3.292329,7.036772,-7.881725,1.248344,6.221701,9.096952,-9.026983,6.809054,-3.923587,0.931715,8.563685,-1.498742,3.752562,-8.401742,-5.184940,4.162567,-9.056103,6.146159,-2.426304,1.542032,-8.204718,-5.476439,-5.715303,5.475508,-9.093982,2.462156,6.932895,0.203337,-3.834945,5.439309,9.731996,4.920009,1.627515,5.036508,0.220384,0.931265,7.897875,6.173234,-9.145240,-2.657533,3.206880,-2.308382,3.031972,1.533992,5.310041,-6.837623,-7.479130,6.426284,6.207254,8.419176,1.579847,-0.714603,-4.332285,-4.299339,-5.463792,6.014123,3.369799,-8.104415,6.960034,-3.701909,-1.021578,-0.573900,7.182443,-7.156128,-3.545054,5.665571,-1.963295,-0.595406,7.150311,5.861841,4.868177,-9.701803,2.172156,0.749028,-0.333322,3.265401,-5.324166,7.367308,4.234617,-4.179867,5.572637,4.895764,0.010090,1.123603,5.221114,-0.757147,6.934245,4.063161,3.219227,-5.330291,-4.407582,-0.811703,9.446348,-4.274257,1.880150,-2.440816,9.608621,1.346877,8.326574,8.914083], dtype = "float64")#candidate|7293|(616,)|const|float64
call_7292 = relay.TupleGetItem(func_4294_call(relay.reshape(const_7293.astype('float64'), [616,])), 0)
call_7294 = relay.TupleGetItem(func_4297_call(relay.reshape(const_7293.astype('float64'), [616,])), 0)
output = relay.Tuple([call_7275,call_7279,var_7280,call_7292,const_7293,])
output2 = relay.Tuple([call_7276,call_7281,var_7280,call_7294,const_7293,])
func_7303 = relay.Function([var_7280,], output)
mod['func_7303'] = func_7303
mod = relay.transform.InferType()(mod)
var_7304 = relay.var("var_7304", dtype = "float32", shape = (1408,))#candidate|7304|(1408,)|var|float32
output = func_7303(var_7304)
func_7305 = relay.Function([var_7304], output)
mutated_mod['func_7305'] = func_7305
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6073_call = mod.get_global_var('func_6073')
func_6075_call = mutated_mod.get_global_var('func_6075')
call_7329 = relay.TupleGetItem(func_6073_call(), 1)
call_7330 = relay.TupleGetItem(func_6075_call(), 1)
func_4065_call = mod.get_global_var('func_4065')
func_4068_call = mutated_mod.get_global_var('func_4068')
var_7335 = relay.var("var_7335", dtype = "float64", shape = (16,))#candidate|7335|(16,)|var|float64
call_7334 = func_4065_call(relay.reshape(var_7335.astype('float64'), [2, 4, 2]))
call_7336 = func_4065_call(relay.reshape(var_7335.astype('float64'), [2, 4, 2]))
var_7337 = relay.var("var_7337", dtype = "uint64", shape = (2, 4, 2))#candidate|7337|(2, 4, 2)|var|uint64
bop_7338 = relay.mod(call_7334.astype('float32'), relay.reshape(var_7337.astype('float32'), relay.shape_of(call_7334))) # shape=(2, 4, 2)
bop_7341 = relay.mod(call_7336.astype('float32'), relay.reshape(var_7337.astype('float32'), relay.shape_of(call_7336))) # shape=(2, 4, 2)
output = relay.Tuple([call_7329,var_7335,bop_7338,])
output2 = relay.Tuple([call_7330,var_7335,bop_7341,])
func_7353 = relay.Function([var_7335,var_7337,], output)
mod['func_7353'] = func_7353
mod = relay.transform.InferType()(mod)
var_7354 = relay.var("var_7354", dtype = "float64", shape = (16,))#candidate|7354|(16,)|var|float64
var_7355 = relay.var("var_7355", dtype = "uint64", shape = (2, 4, 2))#candidate|7355|(2, 4, 2)|var|uint64
output = func_7353(var_7354,var_7355,)
func_7356 = relay.Function([var_7354,var_7355,], output)
mutated_mod['func_7356'] = func_7356
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7444 = relay.var("var_7444", dtype = "int32", shape = (13, 3, 1))#candidate|7444|(13, 3, 1)|var|int32
var_7445 = relay.var("var_7445", dtype = "int32", shape = (13, 3, 8))#candidate|7445|(13, 3, 8)|var|int32
bop_7446 = relay.bitwise_or(var_7444.astype('int32'), var_7445.astype('int32')) # shape=(13, 3, 8)
output = relay.Tuple([bop_7446,])
output2 = relay.Tuple([bop_7446,])
func_7449 = relay.Function([var_7444,var_7445,], output)
mod['func_7449'] = func_7449
mod = relay.transform.InferType()(mod)
var_7450 = relay.var("var_7450", dtype = "int32", shape = (13, 3, 1))#candidate|7450|(13, 3, 1)|var|int32
var_7451 = relay.var("var_7451", dtype = "int32", shape = (13, 3, 8))#candidate|7451|(13, 3, 8)|var|int32
output = func_7449(var_7450,var_7451,)
func_7452 = relay.Function([var_7450,var_7451,], output)
mutated_mod['func_7452'] = func_7452
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5169_call = mod.get_global_var('func_5169')
func_5171_call = mutated_mod.get_global_var('func_5171')
call_7454 = func_5169_call()
call_7455 = func_5169_call()
output = relay.Tuple([call_7454,])
output2 = relay.Tuple([call_7455,])
func_7458 = relay.Function([], output)
mod['func_7458'] = func_7458
mod = relay.transform.InferType()(mod)
output = func_7458()
func_7459 = relay.Function([], output)
mutated_mod['func_7459'] = func_7459
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5169_call = mod.get_global_var('func_5169')
func_5171_call = mutated_mod.get_global_var('func_5171')
call_7492 = func_5169_call()
call_7493 = func_5169_call()
var_7514 = relay.var("var_7514", dtype = "float64", shape = (5, 4, 7))#candidate|7514|(5, 4, 7)|var|float64
bop_7515 = relay.floor_divide(call_7492.astype('float32'), relay.reshape(var_7514.astype('float32'), relay.shape_of(call_7492))) # shape=(5, 4, 7)
bop_7518 = relay.floor_divide(call_7493.astype('float32'), relay.reshape(var_7514.astype('float32'), relay.shape_of(call_7493))) # shape=(5, 4, 7)
bop_7523 = relay.bitwise_xor(call_7492.astype('int8'), relay.reshape(var_7514.astype('int8'), relay.shape_of(call_7492))) # shape=(5, 4, 7)
bop_7526 = relay.bitwise_xor(call_7493.astype('int8'), relay.reshape(var_7514.astype('int8'), relay.shape_of(call_7493))) # shape=(5, 4, 7)
func_5705_call = mod.get_global_var('func_5705')
func_5709_call = mutated_mod.get_global_var('func_5709')
const_7535 = relay.const([-4.800255,4.769930,-4.234536,9.190267,-8.381780,2.969010,9.050591,-4.612197,-1.446617,-9.356786,-8.799463,8.377258,-2.250456,-3.582423,5.621818,3.686318,-1.101346,-0.004963,8.769491,6.383338,-8.290542,-6.822000,2.782736,-8.934880,-9.564050,8.160114,-6.740740,-4.374762,3.848562,0.614047,-9.047397,-7.789155,3.573205,2.993842,-9.156050,-6.742374,4.930841,6.349131,1.144099,-2.442225,-7.816982,-6.688121,-9.139433,4.979328,8.160527,0.127070,6.752166,9.701321,-1.025818,2.110582,3.116560,8.173398,1.282845,-4.797973,-7.967932,-1.960025,-4.994344,8.116916,7.566257,2.369033,0.198625,-2.264438,-1.968129,-8.553906,-9.662859,-9.523350,2.758242,-4.376188,-5.964780,-8.234862,7.173697,7.078027,9.186463,2.049478,-5.213874,-7.922458,5.678787,-0.194650,-2.007246,-5.605305,8.465603,-5.248455,-2.319502,7.257358,5.337492,6.920970,-7.184932,5.877206,1.466728,-9.272511,8.323188,-4.224915,2.082810,-8.513324,2.454452,-7.169537,5.672765,0.898685,1.406508,-4.859110,-0.774570,0.478595,3.104473,7.590974,1.244842,-4.004024,-1.552143,3.558189,1.005595,1.141579,-3.662199,3.536973,-4.812441,8.767520,6.834606,3.839142,7.674925,-0.230476,1.088790,-2.412506,6.412875,5.824315,3.120262,1.572253,-1.937482,4.444690,-1.470868,9.880348,1.149668,-0.656311,-3.637072,6.924272,6.945598,-6.397758,2.204834,3.672361,2.723853,-8.333378,-9.809741,-7.827318,-9.679558,1.851420,-7.668974,8.595887,-3.106972,0.327922,2.587760,-0.799183,-9.022249,2.225846,3.826469,1.945515,9.843524,3.764396,5.016540,8.298725,5.041865,9.142625,3.722224,-5.374257,-3.911892,-6.136732,-7.961633,-7.606302,-6.819686,-6.660532,4.425283,-0.107244,7.668304,-3.595428,2.396131,-5.846989,-9.557691,3.224098,-0.426858,5.301726,8.663337,1.512911,8.446820,-3.773808,3.303114,4.120459,-2.314135,-0.933992,-1.793451,9.789267,-9.467084,-7.821004,3.623279,-9.961718,7.593813,-1.902793,0.787301,-1.627158,-1.122901,-6.330627,2.875576,-4.961796,-7.328430,5.416323,3.846277,-9.520666,-0.100595,-1.171385,-6.578318,-2.665894,0.046743,-6.407705,-5.370889,9.418025,-6.690620,-8.684651,1.632968,4.736425,4.977833,-8.860116,1.155843,-5.654184,-9.603708,8.830496,3.895972,-9.258427,7.036742,-4.285336,-4.351963,-3.907646,0.462827,-2.667012,1.066138,-4.279859,5.806272,0.573618,-9.050625,-5.907265,-4.999961,8.766501,1.544335,-1.070106,4.234229,-4.320500,-3.046159,-7.155787,-9.848159,2.219269,-2.873863,-5.497571,-9.192220,6.430662,-0.526455,7.896689,9.949883,-6.278024,1.050507,5.687128,0.129712,-0.446666,-6.546381,-9.610621,6.544328,-5.438463,1.330983,3.193317,-3.028136,-2.774267,6.518475,-1.819836,2.209330,8.674124,8.976951,3.244599,6.617527,7.732782,-1.698869,-7.048025,8.527091,5.847750,7.456075,-1.835300,3.688706,-2.622157,0.150295,-7.302448,-7.886292,7.583630,-4.259841,-2.841062,-3.622199,-6.554674,5.262275,-7.932764,8.220018,-7.197187,8.995987,5.120771,7.323068,8.373862,-2.120227,7.010962,9.834716,-4.022584,4.021892,6.186397,-4.501882,-9.802359,-2.889100,-2.966813,5.429557,4.596641,-5.905668,5.219585,-8.853887,-3.798788,-8.894186,3.616190,-8.307078,-5.702880,0.703013,1.293276,3.127734,1.237933,-4.136632,4.207788,-9.338215,-0.168889,6.517206,8.042838,-6.236206,-5.153396,9.123583,1.753745,-7.046362,-7.466915,4.070108,3.042973,3.597791,9.193041,3.937704,1.153284,3.383266,-0.870875,-1.166648,-5.054891,1.999490,4.443167,5.124563,-2.892426,-9.478268,7.265103,-9.901425,-3.326294,1.442748,7.376874,3.074115,7.115895,0.752146,0.163101,4.797272,-9.630808,3.219940,5.094538,-9.212448,-2.986049,-4.977646,7.924119,-5.229107,5.280579,2.224659,-1.084836,6.092421,0.647745,7.268846,-6.660146,-1.236222,2.390906,4.870823,-0.051069,-1.695146,-1.182862,-2.282720,8.116435,-1.847900,9.159017,-0.047643,-8.283616,7.894277,-6.105979,-8.076542,3.848717,3.143250,-8.941580,3.733903,9.871067,3.453454,6.032323,2.940073,4.139454,1.584485,7.403424,-9.186812,9.564288,5.713852,5.147620,0.352702,-4.897977,9.442495,2.550677,-3.951439,0.008352,-6.457018,2.215252,3.542219,7.934619,9.814995,-6.351322,-6.221837,7.833114,3.742995,-9.965744,9.679041,-5.909255,1.757365,-1.952723,-1.733257,-6.387921,-9.743145,-5.573096,-7.131015,-5.099483,-0.671416,0.115887,-3.564596,-8.930954,7.996904,-9.620536,5.894112,-2.089234,-8.670128,-1.778419,-1.355930,-0.435652,1.851546,-5.443703,-1.545199,4.625260,-3.841206,-0.690120,-5.294672,-0.553626,5.065329,-2.469257,0.117661,6.346996,3.442574,-0.334217,-2.624918,-8.842572,0.978777,3.920295,3.882406,-2.981222,-1.375656,2.460231,3.141554,-2.794073,-9.088508,-2.131779,9.668687,-2.656234,8.342711,-4.785876,6.999708,0.433906,-0.173780,-6.125787,-1.695443,6.703369,7.849832,6.984451,-3.767821,5.979895,-5.551604,2.097935,-5.164134,9.016644,-4.042072,1.800227,-4.585380,8.627297,-0.615790,5.812803,-9.817831,6.291077,9.281246,2.350990,-2.444436,-7.336471,-1.622982,2.169408,0.657771,-1.250305,-2.417426,4.076362,5.289869,7.183779,7.770430,-0.362740,7.353839,2.813336,-9.274235,9.091610,-7.883088,5.933114,7.693103,7.517121,8.992485,-8.487983,8.669176,6.498069,-2.171296,-2.797159,9.253644,-8.367673,-2.116060,6.229653,-9.430251,-7.858052,-8.021472,2.079600,-9.847027,4.538110,-8.953262,9.211169,9.596054,-1.212081,-4.395426,4.050047,8.901442,-1.774610,-9.932771,-3.258389,-1.905464,1.342745,0.927337,-8.551393,0.147690,9.191302,-5.771803,3.093931,0.855632,3.249299,1.130265,2.161734,-6.700953,-2.578109,9.806245,0.776003,4.333528,4.048864,5.163800,-0.908139,8.303050,0.181702,3.537499,6.007768,-0.752693,-3.873952,-3.230912,8.166411,9.254658,9.713570,-6.555545,0.202520,8.250093,-6.948625,-3.827329,1.605591,0.762866,8.454868,5.570070,4.006183,-0.188203,7.444344,-5.318760,7.552775,9.787055,-3.623708,-4.209749,2.241474,-3.845508,-6.052074,0.411265,-2.685185,-9.478805,0.839381,1.732070,-7.831812,-1.901649,-9.430821,-7.081026,-2.898293,-0.953375,7.311096,-3.270299,-5.414679,2.673095,-4.716113,-5.177005,4.130368,-4.597816,-2.560142,8.074192,6.352397,2.047510,-1.807007,-9.441657,5.720620,-7.332922,8.558957,4.706467,7.008964,-6.245217,8.785401,9.797436,-7.194075,2.038861,3.637880,7.652098,-9.029375,-2.988395,-8.908894,-8.149002,0.195648,-7.058589,8.033310,-5.419224,-9.379706,-8.274478,7.276951,-5.273479,-8.559201,-8.721893,5.755896,-7.074914,-4.154067,-0.684551,3.176004,-4.246910,9.514285,1.522522,3.740035,-1.705484,4.231595,9.275133,-4.925586,-2.295780,-3.531707,-8.499214,-0.811676,8.729518,9.269292,7.416665,-3.159691,6.928419,-7.087517,6.681545,-1.599951,-9.110632,-6.350702,-0.562476,3.653629,9.971053,8.104230,5.285354,5.488420,6.657393,9.673263,3.768150,-4.387578,5.341388,-5.963544,-1.470593,-4.715792,-2.242525,2.592722,2.030109,0.447170,-9.829660,-1.796779,-9.551841,-8.612089,-5.070820,-2.481895,-1.332428,-3.279918,0.062984,-3.507951,1.575296,-3.845955,2.619491,-1.384996,1.631135,-6.232551,6.379076,3.028049,-0.441313,3.328148,2.740356,-0.080688,-9.260032,-5.035871,8.774483,-2.650949,7.602550,-1.895171,-1.361490,-4.715595,-2.700827,6.315650,1.414858,9.004211,-4.010550,2.732741,-4.836172,7.026557,-4.280148,3.355173,-6.160870,1.830751,-2.081859,4.830915,-7.487766,-6.095930,-9.178981,-8.281439,7.452029,6.771566,-7.750852,1.035623,-4.477415,-9.073178,-2.042409,8.617104,2.259613,9.814731,-4.354944,-2.225658,-1.730332,-9.145625,-5.667823,-7.280955,-0.043447,0.584276,-8.224178,-3.726143,-4.709672,-0.075375,-1.419152,5.221843,-8.421799,8.724220,2.212240,5.130311,5.207469,-7.668930,8.321850,2.046938,-7.333543,-3.338951,8.811706,-0.354028,4.374210,2.797860,-3.137016,9.831789,6.043773,9.233596,-0.950256,-6.726621,-1.626374,9.852708,6.408455,-4.767517,-1.275122,9.192995,7.892116,0.940525,-6.270998,-4.275248,0.157302,8.407457,-0.095237,-7.810250,6.045248,-3.190365,0.540290,2.589323,-3.633186,5.817869,6.215211,4.711427,-8.480556,1.969757,2.254008,4.108089,-2.401726,5.699711,9.095715,2.176128,-9.689669,9.292900,-6.300792,-7.273925,-8.914338,1.486375,-0.356264,-1.316737,8.097462,3.254074,6.291255,5.095458,9.984796,-3.939638,-0.042525,-9.003848,-4.902165,9.768223,-7.376508,6.513210,6.077140,-8.281703,9.033931,-2.709857,8.298803,1.747080,-8.546419,-3.577317,1.071548,-1.480569,-8.519733,-4.072966,-7.932214,8.247766,-5.246386,2.401032,2.863872,2.432089,-2.657205,5.305516,-4.904955,-4.972288,-7.520066,-9.328427,-8.667174,9.179452,3.533413,6.862302,9.386140,9.739357,1.939042,8.121966,-5.440873,-7.536927,-5.211931,-1.295729,-4.496811,0.835893,2.064019,4.923036,1.600552,1.513251,-0.512982,-1.851154,1.391411,1.634253,7.526455,-7.788322,-3.172424,-1.495905,-8.712449,5.438195,-5.657707,7.787253,-5.444869,9.833170,-7.420292,6.319963,5.314735,-6.821174,3.511698,8.352304,7.853180,-1.741694,-3.769327,-3.774501,-3.893839,-9.873064,4.689356,-1.378974,-7.290222,3.001859,-2.775679,3.251521,-1.877859,3.934979,-2.387971,-9.911413,-6.538364,8.083829,-0.862235,5.407926,9.426768,1.356491,-3.634588,-7.989270,7.143492,7.593249,-0.878228,4.345068,-9.410805,-9.107643,2.560917,-0.026831,-0.825503,9.846337,-5.364458,8.556798,-5.564511,-5.923178,-2.724619,2.280854,-3.930573,-6.807589,4.877583,0.350755,-2.598056,-4.437826,8.987309,9.031796,-2.587130,-4.165868,3.752069,-1.389283,-2.688407,-2.019767,-0.022553,-6.901144,-9.315907,3.979175,-0.616723,-9.140172,9.732804,-9.570069,9.769830,-6.412184,-8.191548,-0.805625,-9.939524,2.167709,8.733448,7.666610,6.669014,-3.767128,-6.986376,-8.114358,0.753069,3.790115,9.323493,8.258118,5.736485,3.795107,-2.084992,-7.035192,-9.982949,5.270986,6.955194,1.129573,-9.466471,3.337652,-0.180655,7.519957,-3.687335,-5.439107,-3.372405,-5.502564,8.826455,-4.908575,-2.919077,-1.701241,-9.708363,-0.050796,-9.098943,5.633069,-7.016245,-4.797777,-4.244472,-3.188236,-9.646714,-2.700402,-6.072515,9.764419,-6.355859,2.764106,-0.574569,-6.877085,8.523956,-8.735470,-5.239565,-6.706683,-5.977666,1.023728,-8.965682,4.857574,-5.522547,4.049039,2.524075,-3.354421,-9.225779,-5.957246,8.329287,-3.118458,0.569203,2.217508,-2.980089,-5.704173,-6.458224,6.067538,7.777416,5.386950,-4.137574,-5.968748,1.987551,-3.413758,-6.885102,-4.282593,6.797005,-5.604154,-5.880232,-1.682136,7.413867,5.387593,4.936672,-2.747458,-0.555947,-7.353366,6.819102,-1.218836,-6.272086,-7.108052,5.483982,-1.066671,0.260976,9.076863,-0.596537,-8.515459,3.626495,6.995267,-9.826018,7.152609,-5.693403,-0.507001,7.140091,-7.116283,1.914764,-3.128532,-6.994276,5.556200,-1.129807,7.286613,-9.483104,-9.942319,7.256496,-9.800940,-4.854225,-0.650587,-9.793680,-0.153372,0.537965,1.041698,8.613960,5.303906,-4.930401,-8.871891,-2.176409,-4.204767,9.762828,-2.240292,-2.688240,2.733292,-9.000142,9.549844,-9.364952,-5.792578,0.649534,-0.927742,-0.722087,-2.994643,-2.464417,8.336274,-5.933155,7.561703,-4.150108,-8.929040,2.484799,3.578760,-2.511918,-6.805252,-2.326921,-1.484375,-5.034247,8.536073,9.033387,5.581139,-2.360256,-5.601434,-5.403582,-6.553679,3.972674,-0.919043,-7.184262,-6.361837], dtype = "float32")#candidate|7535|(1120,)|const|float32
var_7536 = relay.var("var_7536", dtype = "bool", shape = (180,))#candidate|7536|(180,)|var|bool
call_7534 = relay.TupleGetItem(func_5705_call(relay.reshape(const_7535.astype('float32'), [10, 16, 7]), relay.reshape(var_7536.astype('bool'), [2, 15, 6]), ), 1)
call_7537 = relay.TupleGetItem(func_5709_call(relay.reshape(const_7535.astype('float32'), [10, 16, 7]), relay.reshape(var_7536.astype('bool'), [2, 15, 6]), ), 1)
func_3844_call = mod.get_global_var('func_3844')
func_3846_call = mutated_mod.get_global_var('func_3846')
call_7545 = relay.TupleGetItem(func_3844_call(relay.reshape(call_7534.astype('uint64'), [1080,])), 2)
call_7546 = relay.TupleGetItem(func_3846_call(relay.reshape(call_7534.astype('uint64'), [1080,])), 2)
uop_7551 = relay.rsqrt(bop_7515.astype('float64')) # shape=(5, 4, 7)
uop_7553 = relay.rsqrt(bop_7518.astype('float64')) # shape=(5, 4, 7)
output = relay.Tuple([bop_7523,call_7534,const_7535,var_7536,call_7545,uop_7551,])
output2 = relay.Tuple([bop_7526,call_7537,const_7535,var_7536,call_7546,uop_7553,])
func_7569 = relay.Function([var_7514,var_7536,], output)
mod['func_7569'] = func_7569
mod = relay.transform.InferType()(mod)
var_7570 = relay.var("var_7570", dtype = "float64", shape = (5, 4, 7))#candidate|7570|(5, 4, 7)|var|float64
var_7571 = relay.var("var_7571", dtype = "bool", shape = (180,))#candidate|7571|(180,)|var|bool
output = func_7569(var_7570,var_7571,)
func_7572 = relay.Function([var_7570,var_7571,], output)
mutated_mod['func_7572'] = func_7572
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3069_call = mod.get_global_var('func_3069')
func_3070_call = mutated_mod.get_global_var('func_3070')
call_7592 = func_3069_call()
call_7593 = func_3069_call()
func_3026_call = mod.get_global_var('func_3026')
func_3030_call = mutated_mod.get_global_var('func_3030')
var_7595 = relay.var("var_7595", dtype = "float64", shape = (770,))#candidate|7595|(770,)|var|float64
var_7596 = relay.var("var_7596", dtype = "float64", shape = (36,))#candidate|7596|(36,)|var|float64
const_7597 = relay.const([True,True,False,True,False,True,True,True,True,True,False,True,False,True,True,True,True,True,False,False,False,True,False,True,False,True,False,True,False,False,False,True,True,False,False,True,True,False,False,True,True,False,False,True,True,False,True,False,True,True,False,True,False,False,False,True,True,False,False,False,False,False,True,True,True,False,False,False,False,False,True,True,False,False,True,False,False,False,False,True,True,True,False,True,True,False,False,True,True,True,True,True,True,False,True,False,False,True,True,False,False,False,False,False,False,True,False,False,True,True,True,False,False,True,True,True,False,False,False,True,True,True,False,False,False,True,True,False,True,False,True,True,False,True,True,True,False,False,True,True,True,True,True,True,False,False,False,False,False,True,True,True,False,False,False,False,True,True,True,False,True,False,True,True,True,True,False,True,True,False,False,False,True,True,True,True,True,True,False,False,False,True,True,True,True,True,True,True,False,False,True,True,False,True,True,True,False,True,False,True,True,False,True,False,True,False,False,True,True,False,True,False,True,False,True,True,False,False,False,False,True,True,False,True,False,True,True,False,False,True,True,False,False,False,False,True,False,False,False,False,False,True,False,False,False,True,True,False,True,True,False,False,False,False,False,True,True,True,True,False,False,True,False,False,True,False,False,False,True,False,False,True,False,False,True,False,True,False,False,False,True,False,True,False,True,True,True,False,False,False,False,False,True,False,True,True,True,True,True,False,True,True,True,True,True,True,True,False,True,True,False,True,False,True,True,True,False,False,True,False,False,False,True,False,False,False,True,True,True,False,True,False,True,True,False,False,False,True,False,True,True,False,False,True,False,True,False,False,True,True,True,False,True,False,False,False,False,True,True,True,True,True,True,False,False,True,False,False,True,False,True,False,False,False,True,False,True,True,True,True,False,False,True,False,False,True,False,False,False,True,True,True,False,False,True,False,False,True,False,True,True,False,True,True,False,False,False,True,True,True,False,True,True,True,True,True,False,True,True,False,True,False,True,True,False,False,False,False,True,False,True,False,False,False,False,False,False,False,False,True,True,False,True,False,False,False,True,False,False,False,True,True,False,False,False,False,True,False,True,False,True,False,True,True,True,True,False,True,True,False,True,False,False,False,False,False,False,True,True,False,True,False,True,True,False,False,True,True,False,False,False,True,True,True,True,False,False,True,True,True,True,False,True,True,False,True,False,True,False,True,True,True,True,True,False,True,True,True,True,True,False,True,True,True,False,False,True,False,True,False,True,False,True,False,True,True,True,True,False,True,False,False,False,True,True,False,True,False,True,False,True,True,True,False,False,True,False,True,True,True,False,False,True,True,False,True,False,True,False,True,False,True,True,False,False,False,False,True,False,True,True,True,True,False,False,True,True,False,True,False,False,True,False,True,False,False,False,False,True,True,True,True,False,False,True,False,False,True,False,False,True,True,False,False,False,False,True,True,False,False,False,False,True,False,False,True,True,False,False,False,True,True,False,True,False,True,False,False,True,False,True,False,True,True,False,True,True,True,True,True,False,True,False,True,True,False,True,False,False,True,True,False,False,True,True,False,False,True,True,True,True,False,True,True,True,True,False,False,True,True,True,True,False,True,False,False,True,True,False,False,False,True,False,True,False,True,True,True,True,False,False,False,False,False,True,True,True,False,True,False,True,True,True,False,False,False,False,False,True,False,False,False,False,False,True,False,True,False,True,False,True,False,True,True,False,False,True,True,False,False,False,False,True,True,False,False,True,False,False,True,False,False,True,False,False,False,True,True,False,False,False,True,False,True,True,False,True,False,False,False,False,False,False,False,True,False,False,True,False,False,False,False,False,True,True,False,True,False,True,True,False,True,True,True,False,False,True,False,False,True,False,False,True,False,False,True,False,False,False,False,False,False,False,False,True,True,False,False,True,False,True,False,True,False,True,False,False,False,False,False,False,False,True,True,False,True,False,False,False,False,False,False,False,False,True,True,False,True,True,True,True,True,True,True,True,False,True,False,True,True,False,True,True,True,False,True,True,True,True,True,True,True,True,False,True,False,True,True,False,True,True,True,False,False,False,True,True,True,True,False,False,False,True,True,True,True,False,False,False,True,True,False,False,True,False,False,True,True,True,True,False,False,True,False,True,True,False,False,True,True,False,True,True,True,True,True,False,True,True,True,True,True,True,True,False,True,True,True,False,True,True,True,True,False,True,False,True,True,False,False,True,False,False,False,True,True,True,False,False,True,True,True,False,False,True,False,True,False,True,True,True,False,False,True,False,False,True,False,True,False,False,False,False,False,True,False,True,False,False,False,True,True,True,True,True,False,True,False,True,True,True,False,True,False,True,False,False,True,False,True,True,False,False,True,True,True,True,False,True,True,False,True,False,False,False,True,False,False,True,True,True,True,False,False,True,True,False,True,False,False,False,True,True,False,True,False,True,False,False,True,False,True,False,False,True,False,False,True,False,True,True,True,False,True,False,True,False,False,False,True,True,True,False,False,True,True,False,True,False,False,False,False,True,False,False,False,False,False,False,True,False,True,False,False,False,False,False,False,True,False,True,False,True,False,False,True,True,False,False,True,False,False,True,False,False,False,False,False,False,False,True,False,True,False,True,True,False,True,False,True,True,True,True,True,True,True,False,True,True,False,False,False,False,False,False,False,False,False,False,False,True,False,True,False,False,False,False,False,True,False,False,False,True,True,True,True,True,True,False,False,True,False,False,True,False,False,True,False,True,False,True,False,False,False,False,False,False,False,False,True,False,False,True,False,False,True,True,True,False,True,True,False,True,False,True,False,False,True,False,True,True,True,True,True,True,False,True,True,False,True,False,True,False,False,True,False,True,False,True,True,True,False,True,False,False,True,False,True,False,True,False,True,False,False,False,False,False,True,True,False,False,False,True,False,False,False,False,True,False,True], dtype = "bool")#candidate|7597|(1260,)|const|bool
call_7594 = relay.TupleGetItem(func_3026_call(relay.reshape(var_7595.astype('float64'), [14, 11, 5]), relay.reshape(var_7596.astype('float64'), [18, 2]), relay.reshape(const_7597.astype('bool'), [1260,]), ), 0)
call_7598 = relay.TupleGetItem(func_3030_call(relay.reshape(var_7595.astype('float64'), [14, 11, 5]), relay.reshape(var_7596.astype('float64'), [18, 2]), relay.reshape(const_7597.astype('bool'), [1260,]), ), 0)
func_7569_call = mod.get_global_var('func_7569')
func_7572_call = mutated_mod.get_global_var('func_7572')
const_7604 = relay.const([4.867157,4.704534,-3.886392,-6.046921,9.733526,-6.032499,-9.708561,4.102654,4.304977,-4.843523,7.151171,5.480949,0.510822,-3.288192,5.785963,-8.624077,3.257126,9.220561,-6.992906,3.150671,6.608303,6.328104,-4.160015,7.019120,-7.166709,0.974598,2.994036,-5.412859,3.112001,7.979956,-0.072521,5.276947,1.787976,1.618268,3.971566,2.473672,-0.883389,-1.230239,1.772411,-8.410434,-8.453168,-8.989706,0.973846,-8.697191,8.979758,9.800906,4.833673,7.601944,1.486679,-4.979214,-8.018272,8.166556,-9.804066,4.536174,1.103469,5.860419,9.399679,3.506499,-7.404514,-8.946956,2.477551,2.753228,-4.902308,3.418237,8.486368,-0.160254,-4.298522,6.175840,-4.512365,-7.376644,-1.973261,1.916655,6.367032,-6.121181,-0.367229,3.767303,-4.130735,2.362961,-1.949622,-9.187060,-8.968260,2.810907,7.694649,-9.662273,8.028912,7.263001,-6.631241,9.828486,-4.625772,-2.595336,-4.073207,-5.892851,-4.438801,-7.221741,8.032833,8.767801,9.643241,-1.246343,7.472707,-3.140951,8.820499,-3.866013,-8.020588,-0.243408,-8.822792,-8.307277,-1.315691,4.130532,-3.631308,1.707417,2.324156,0.542357,7.815898,5.979901,-1.440372,2.154324,5.216962,-1.219235,-9.273856,-9.342676,7.168329,2.288688,-0.080027,-0.198580,-6.709570,-3.955712,-8.751616,2.665328,4.489283,-5.186705,-9.601535,5.522828,-8.656189,-8.939953,-3.546530,6.273303,8.107188,-0.677767,8.247639,-7.526136], dtype = "float64")#candidate|7604|(140,)|const|float64
var_7605 = relay.var("var_7605", dtype = "bool", shape = (180,))#candidate|7605|(180,)|var|bool
call_7603 = relay.TupleGetItem(func_7569_call(relay.reshape(const_7604.astype('float64'), [5, 4, 7]), relay.reshape(var_7605.astype('bool'), [180,]), ), 4)
call_7606 = relay.TupleGetItem(func_7572_call(relay.reshape(const_7604.astype('float64'), [5, 4, 7]), relay.reshape(var_7605.astype('bool'), [180,]), ), 4)
output = relay.Tuple([call_7592,call_7594,var_7595,var_7596,const_7597,call_7603,const_7604,var_7605,])
output2 = relay.Tuple([call_7593,call_7598,var_7595,var_7596,const_7597,call_7606,const_7604,var_7605,])
func_7625 = relay.Function([var_7595,var_7596,var_7605,], output)
mod['func_7625'] = func_7625
mod = relay.transform.InferType()(mod)
mutated_mod['func_7625'] = func_7625
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7625_call = mutated_mod.get_global_var('func_7625')
var_7627 = relay.var("var_7627", dtype = "float64", shape = (770,))#candidate|7627|(770,)|var|float64
var_7628 = relay.var("var_7628", dtype = "float64", shape = (36,))#candidate|7628|(36,)|var|float64
var_7629 = relay.var("var_7629", dtype = "bool", shape = (180,))#candidate|7629|(180,)|var|bool
call_7626 = func_7625_call(var_7627,var_7628,var_7629,)
output = call_7626
func_7630 = relay.Function([var_7627,var_7628,var_7629,], output)
mutated_mod['func_7630'] = func_7630
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6760_call = mod.get_global_var('func_6760')
func_6762_call = mutated_mod.get_global_var('func_6762')
call_7641 = func_6760_call()
call_7642 = func_6760_call()
var_7648 = relay.var("var_7648", dtype = "float64", shape = (2, 4, 2))#candidate|7648|(2, 4, 2)|var|float64
bop_7649 = relay.floor_mod(call_7641.astype('float32'), relay.reshape(var_7648.astype('float32'), relay.shape_of(call_7641))) # shape=(2, 4, 2)
bop_7652 = relay.floor_mod(call_7642.astype('float32'), relay.reshape(var_7648.astype('float32'), relay.shape_of(call_7642))) # shape=(2, 4, 2)
func_2928_call = mod.get_global_var('func_2928')
func_2930_call = mutated_mod.get_global_var('func_2930')
call_7657 = relay.TupleGetItem(func_2928_call(), 0)
call_7658 = relay.TupleGetItem(func_2930_call(), 0)
func_3260_call = mod.get_global_var('func_3260')
func_3262_call = mutated_mod.get_global_var('func_3262')
call_7661 = relay.TupleGetItem(func_3260_call(), 0)
call_7662 = relay.TupleGetItem(func_3262_call(), 0)
func_3417_call = mod.get_global_var('func_3417')
func_3421_call = mutated_mod.get_global_var('func_3421')
const_7683 = relay.const([-7,4,-7,9,7,4,2,-4,1,7,10,6,-7,2,-4,-10,-10,-10,-5,6,4,1,3,2,-7,-4,5,6,2,6,5,-6,2,1,6,-1,-5,-8,-10,-4,1,3,10,10,9,10,3,8,4,5,7,2,-8,2,-5,6,4,2,1,8,9,6,3,-9,3,9,-10,10,3,8,8,-4,3,8,9,6,3,-1,-5,-5,2,6,3,2,10,4,3,-10,-3,10,6,1,9,-6,-2,-1,-5,6,5,-5,-7,-2,-6,-5,-3,-2,-3,8,5,-6,-7,1,4,-9,7,-3,-3,-5,9,10,6,-1,-5,3,-5,6,6,3,7,10,-5,8,-9,-7,-2,-10,-6,-9,2,-10,-3,-10,-4,-10,4,-4,-2,-7,3,7,8,6,-2,7,-9,2,3,-2,6,9,9,-1,4,-1,-1,-4,10,4,-5,6,8,-7,-2,10,-8,-2,-2,9,10,-5,-10,1,-9,2,6,9,5,-6,4,7,-9,-2,-1,-9,10,-5,4,-2,10,6,-1,-3,2,5,7,1,-2,-7,3,7,1,-6,7,6,2,-7,-1,-9,-8,-1,8,-3,5,5,-5,9,-4,8,5,-1,10,-9,-6,3,5,-1,8,-5,-3,8,3,-3,-4,-10,-7,-5,-9,-9,5,1,8,4,7,6,10,-9,1,3,2,-6,6,-9,8,-2,-10,4,8,-3,-7,-4,-4,3,-4,3,-2,7,10,5,-4,10,1,-3,2,-3,-4,8,-9,-3,9,-10,-5,-9,5,-1,-10,-2,-5,-9,10,7,-8,-3,-8,-1,-4,-8,-2,-2,-10,5,-5,2,-1,-8,2,4,-10,6,-3,7,-1,-6,1,-7,2,2,8,-9,4,9,-3,-5,-2,-3,9,4,-2,-3,8,-5,-4,10,-4,3,6,-5,7,-4,-10,-3,4,10,-10,10,-5,-10,5,-10,-1,-8,-3,8,2,8,-6,2,10,7,-7,8,5,10,10,-10,1,7,-10,5,-4,3,-5,1,10,-7,-6,-8,5,-10,8,-5,5,-2,-7,-6,-9,3,7,1,-2,4,-3,9,-2,2,-7,8,9,9,-8,-8,-6,-3,5,-8,-2,4,-9,-3,10,-1,-4,-2,-9,-8,-6,4,-7,2,-10,-8,-7,8,-5,-6,-8,-5,4,-5,6,9,-10,-3,9,9,-8,-2,1,-10,2,-5,-3,-5,8,1,5,-8,-3,4,-6,1,-1,-8,6,-1,4,-1,6,3,7,-10,3,9,-8,-10,-7,-8,-6,3,6,10,-9,8,-8,1,-6,8,-8,-7,-2,-9,-8,9,5,5,5,-3,8,-2,-2,-2,4,10,-8,6,-2,1,4,-5,10,-2,7,1,-5,-10,6,7,-3,-1,2,3,4,7,3,-7,-1,-10,-4,-4,4,8,-7,9,2,4,-7,1,2,7,1,10,5,-2,1,-8,1,4,-2,1,10,1,2,-9,1,2,2,-4,2,-5,-2,-7,-10,-3,1,-10,7,10,-5,-6,7,-8,7,-5,8,1,3,-4,-8,-9,9,2,3,5,-3,4,-8,8,-6,6,2,-5,7,2,-4,-4,10,-9,10,-1,-9,-4,9,6,-6,9,-2,-7,-6,2,-7,5,2,2,-1,6,8,-7,-3,-2,5,-9,8,6,2,-3,2,-8,-1,-8,-3,-2,-4,10,4,-8,-3,-8,10,2,1,3,-3,-8,3,-1,-10,-9,-4,4,1,8,9,-5,-1,-3,4,4,8,6,-1,2,-9,-8,10,-2,-5,4,-8,5,8,2,5,-1,-1,6,3,-3,-9,-5,4,1,-8,5,6,7,-9,5,-4,-5,-3,-5,9,9,1,-8,-1,-6,3,-9,3,-4,5,-4,-8,-4,-2,-9,8,-10,2,-4,4,-2,-3,-8,6,-7,-1,-10,10,2,-6,4,7,-5,-1,-1,-8,3,-3,8,-5,10,5,-7,-7,-8,7,7,5,2,10,10,6,1,-6,-1,-3,-7,5,5,2,-5,5,-3,-5,-6,-8,-6,4,6,-6,1,9,10,-3,-8,-6,1,6,-4,9,-5,-8,1,-8,-2,-5,-8,2,-10,2,-7,10,2,4,-4,-5,9,-2,5,-1,-8,1,-3,-3,7,1,-4,4,5,-1,10,-2,1,-3,-5,5,-1,9,-9,-6,-8,10,6,-9,1,-1,-5,-4,-6,5,1,5,6,7,6,10,10,7,4,-8,3,-8,4,-7,8,2,-3,3,-2,-5,-2,4,6,10,5,-7,-7,9,6,2,9,5,-4,3,9,-4,-4,-4,10,-2,-10,-5,5,-10,1,7,7,-6,-2,-7,-7,-1,1,-3,7,-8,-6,6,9,4,-10,-4,5,-8,-6,-6,-7,-8,-2,1,-8,-10,2,-8,4,2,5,10,3,6,4,6,1,-10,-5,-4,-8,9,-2,2,3,1,10,-7,-1,4,-7,5,-4,-10,-3,-4,-1,-4,2,-1,10,2,-3,-2,-3,8,-9,-7,9,4,2,-7,-2,5,5,-10,8,-2,2,5,-2,-7,-7,6,2,10,-9,-6,-5,7,-9,-4,9,-7,-2,10,5,-7,-4,8,4,-9,-2,5,9,9,9,6,1,-10,-6,-9,10,3,8,7,9,4,-2,-1,1,1,-5,-7,-10,1,9,-5,5,-10,-1,-4,4,4,-9,9,6,9,6,-8,-4,10,-9,4,-5,7,-3,6,1,7,4,-9,7,4,3,-2,10,-4,-9,5,5,1,4,-9,-7,4,-4,4,10,-7,-9,-4,10,-2,-6,-4,10,9,3,1,-4,-3,-10,10,-4,-3,-5,-4,4,-6,2,1,7,7,10,10,-5,-4,2,4,-2,-1,-5,4,10,2,-3,-5,5,-10,10,-2,-5,-9,-10,-2,-2,-9,-7,-6,4,10,-1,8,5,-4,10,-9,10,-3,-2,1,10,-1,-5,-6,5,8,9,5,-6,10,-2,-4,-8,3,1,-4,-5,8,3,9,-9,5,5,-3,-6,-8,3,-3,6,-3,-3,10,3,8,-1,4,-5,10,-9,-10,8,-5,7,-4,-7,2,5,10,7,5,-6,-9,-10,-1,-2,5,-9,10,2,9,-10,-1,-10,-4,8,6,-10,7,4,10,10,-5,-8,5,9,-9,-4,6,1,2,1,3,4,5,9,5,1,-10,-5,8,8,2,8,-5,-10,-8,8,-4,3,-2,5,4,9,6,7,-7,3,-7,9,-10,1,-10,9,-1,5,5,-5,7,-10,-8,-9,2,-6,3,-10,-4,10,10,-10,-2,-8,-5,5,-7,-9,2,1,9,2,3,-4,-5,-1,-6,7,5,6,-8,-4,-5,-9,-10,-2,6,-1,-8,-5,1,-7,8,4,9,3,-10,10,1,-4,-10,10,-4,6,-7,-4,-9,-5,7,8,1,3,10,9,-5,-2,1,10,6,7,8,-2,-4,-4,8,9,5,9,9,9,-10,10,7,-9,7,6,7,2,5,-6,-10,-10,-9,4,-8,-4,6,-2,-6,-5,6,10,-7,7,-10,5,-10,-9,-8,8,8,6,8,6,-8,-8,-10,10,-3,-9,1,-5,1,-9,8,4,-1,-9,-8,-2,-4,3,-1,1,-1,8,-4,-5,8,-3,3,-4,8,3,6,2,-10,-4,-9,6,3,6,-7,-4,6,3,7,-6,-9,-10,-6,7,-9,-8,3,-10,6,-6,6,-9], dtype = "int16")#candidate|7683|(1386,)|const|int16
call_7682 = func_3417_call(relay.reshape(const_7683.astype('int16'), [14, 9, 11]), relay.reshape(const_7683.astype('int16'), [14, 9, 11]), )
call_7684 = func_3417_call(relay.reshape(const_7683.astype('int16'), [14, 9, 11]), relay.reshape(const_7683.astype('int16'), [14, 9, 11]), )
uop_7694 = relay.cos(call_7682.astype('float64')) # shape=(14, 9, 11)
uop_7696 = relay.cos(call_7684.astype('float64')) # shape=(14, 9, 11)
output = relay.Tuple([bop_7649,call_7657,call_7661,const_7683,uop_7694,])
output2 = relay.Tuple([bop_7652,call_7658,call_7662,const_7683,uop_7696,])
func_7697 = relay.Function([var_7648,], output)
mod['func_7697'] = func_7697
mod = relay.transform.InferType()(mod)
mutated_mod['func_7697'] = func_7697
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7698 = relay.var("var_7698", dtype = "float64", shape = (2, 4, 2))#candidate|7698|(2, 4, 2)|var|float64
func_7697_call = mutated_mod.get_global_var('func_7697')
call_7699 = func_7697_call(var_7698)
output = call_7699
func_7700 = relay.Function([var_7698], output)
mutated_mod['func_7700'] = func_7700
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7707 = relay.const([[[-1.446812,9.825810,3.495470,-1.495133,6.033754,8.171287,1.058204,2.592232,3.934420,7.687532,-1.538703,-7.552926],[0.127691,5.274487,-2.196188,-6.005237,9.753954,-8.551571,5.372711,-4.042657,3.163352,-9.662722,3.967269,-5.109114],[-7.813604,2.701881,7.379894,-9.113093,-5.116553,-4.698268,-4.854518,6.392773,0.052284,1.970550,-6.295962,6.866516],[7.753231,-3.984757,2.116760,8.845931,-5.509999,-9.256262,-7.249223,-6.645288,-3.203808,2.409359,-3.712220,-2.977182],[3.569629,-5.782201,-1.828214,9.882472,7.646383,-0.234541,-0.500729,0.909799,-4.511684,2.380826,-3.049387,7.830842],[-0.808763,3.772280,5.939606,-2.896140,7.787005,-9.655448,-7.845167,0.707521,8.245243,1.950766,0.252191,8.002482],[-7.167160,6.533251,-3.832749,-0.519168,5.241111,6.043214,1.015774,3.302853,-5.585526,-1.464367,3.399521,3.770520],[3.471913,0.633769,3.826854,9.609088,5.802547,-8.176808,3.963039,-3.256214,-0.028462,-4.960239,-0.954864,7.523992],[6.871264,2.409790,7.861430,-6.890171,1.799082,-5.656049,-6.315223,1.045171,-1.072048,1.004097,-8.384180,-5.204486]],[[-9.448987,-0.955284,0.017218,9.682647,-8.806289,5.677727,4.393511,-6.803009,0.244256,8.198992,-5.222201,5.592545],[-6.925413,9.132753,0.100731,-0.463358,-3.058509,-4.882592,-6.313220,-0.449856,-2.652345,-2.515445,6.875350,7.999315],[3.380439,-9.378632,0.048360,-2.654921,2.642648,-7.866659,-3.898843,-1.972269,5.560963,-0.550085,-3.654280,-4.665803],[-8.379842,7.032336,-3.926575,7.188403,7.040647,9.876662,9.007214,6.955424,6.631926,7.601035,-5.854814,-7.900495],[-3.317283,7.681573,-8.084365,-8.364413,-8.317116,-2.422292,-2.508506,1.635793,-9.275478,-9.518518,-7.187833,-1.162781],[3.837217,2.254059,9.314794,3.297704,-2.084907,-3.141784,8.098622,-2.104530,-1.511144,-1.061538,-8.547083,2.348100],[-1.004763,-2.880833,2.731504,0.552112,4.454838,-7.921789,-1.188499,-4.364186,-3.545084,0.108943,0.088946,4.395284],[0.051446,-1.319167,8.754251,-5.306484,9.718218,7.772484,9.097337,6.651510,6.911189,9.477792,-6.068301,7.437637],[-3.363212,-8.347231,-0.186772,-1.026010,1.507839,0.237978,-8.906582,-6.155782,-6.052511,-0.338468,-9.091786,-2.370548]],[[8.896934,-2.553492,-8.065149,-3.940388,-6.132441,-7.465012,-8.202118,-6.142040,-2.736782,9.923280,2.962538,-5.284972],[0.015486,3.465754,2.232168,1.927764,3.876288,-4.209873,0.113251,0.958632,9.257166,-9.700933,-7.943744,9.789423],[-3.096553,3.086145,-0.390327,-5.727747,-6.792345,-2.411753,5.597095,-2.431780,5.866060,-0.591557,9.000541,-3.803849],[-2.370343,-1.609138,-8.314601,6.340451,-0.254978,-7.291588,-9.978472,-1.967843,2.887312,-2.014682,5.669008,5.202256],[7.844051,4.448107,2.289479,6.168254,5.439207,-6.971022,2.981071,-1.599759,-0.052272,1.116964,1.620739,9.521867],[-0.621452,-8.760351,-6.869295,-5.219904,6.148141,-0.085581,5.512598,-5.350335,-3.989203,-8.641890,-3.132567,6.285416],[-6.157074,-5.105132,3.697658,-5.802063,4.145942,0.619331,-4.905932,-4.691920,1.250520,6.751120,-7.923562,4.699414],[-9.142930,6.126430,3.505656,-5.623744,7.357866,9.295081,-5.141059,-2.135301,-9.402672,-6.650880,4.944573,0.457220],[3.849666,4.726600,-0.007545,-4.265774,2.367436,-3.424074,7.619452,-1.851906,1.915190,6.829378,7.855929,8.004295]],[[2.096355,-2.044657,-8.001015,9.462840,-9.712546,-9.000201,-0.265942,-8.636868,-8.157815,-8.713736,3.905996,-2.278051],[-9.529528,-3.004206,6.863287,-8.314953,7.702900,2.018019,-1.732198,-9.799478,3.509078,4.339346,3.442869,3.730297],[-6.750329,1.449178,-6.725016,-1.823661,6.358977,-9.053228,6.353795,5.666649,-9.492333,-1.709771,-5.319741,6.493171],[8.813260,9.236609,-3.496498,-6.297966,-4.006401,-6.624768,0.736273,9.186311,-3.853565,2.315048,-8.832820,-0.534962],[6.832936,2.109585,8.662320,-7.261342,-6.798416,-9.192379,-8.015075,0.905057,-8.041649,-6.276045,0.799635,3.684419],[1.922388,9.469830,9.481341,-5.438833,-7.575319,-4.180301,1.314986,8.550943,-4.693218,-0.719828,-5.422619,7.956648],[-2.684298,5.378306,-5.084346,1.812253,4.720184,0.221949,-2.665593,-7.227518,-3.867285,0.194195,7.666137,8.182103],[-7.218909,-2.341399,0.088720,0.099454,0.764071,8.722471,6.345926,-1.902908,2.565490,-7.747035,3.166957,7.429231],[9.684288,6.717175,0.417315,8.683799,4.022158,-4.490694,8.442152,-0.151434,-2.934978,-2.108856,-4.800532,3.670215]],[[4.822424,5.844323,-4.579500,-6.883163,8.178412,-7.486437,-0.526675,-5.746908,4.649789,-1.480883,3.075816,-9.616925],[8.981932,2.592356,0.289266,4.448409,-0.217805,8.826894,8.342974,0.148216,-6.318067,0.141236,2.192269,-5.617108],[6.082800,8.622031,2.165025,-7.438947,1.867622,-8.715669,-0.027547,1.195152,-4.949076,0.500081,-1.568734,0.263421],[-6.341679,4.557502,-5.798554,1.160604,-9.681026,-8.425155,-1.653093,-5.563119,7.223508,-3.109726,7.585704,-4.236757],[-1.636303,3.795822,-8.103259,5.785883,-7.629731,-8.601193,-3.995769,-5.900688,2.506408,-1.874036,4.063543,2.699099],[9.556495,4.692126,7.278069,1.909172,9.437247,-2.245751,4.245378,2.667145,-0.980373,-6.508377,3.542104,7.854958],[-6.724212,-0.532303,2.808443,-2.599469,6.748723,8.681581,7.292843,-4.742850,0.481911,4.963308,4.226413,-6.378770],[-4.534029,-6.304378,3.220420,-1.018401,-6.431867,-4.874091,-7.850878,-4.706642,-3.926883,-3.243014,-9.051783,-5.612007],[1.216872,-1.046973,-7.593118,-3.479928,-0.174932,-5.125109,2.000929,5.338182,4.431397,5.441236,-1.071405,2.956999]],[[3.875537,-8.886635,0.199497,4.098773,-5.978738,0.191609,1.203613,-6.963059,-2.370325,6.641508,9.046175,9.483605],[-6.307998,5.198649,8.023663,7.372078,-6.181788,-7.639358,0.641349,7.575128,-9.004719,-6.449358,-8.289002,7.101299],[-8.076560,-9.306258,3.982406,-2.812473,-0.021141,-1.187778,0.868786,-2.473163,1.313007,3.927610,6.181261,8.217742],[4.993985,5.385975,-4.359308,-0.714195,3.673005,-9.684518,7.905586,5.685308,-7.601513,1.273051,6.660005,-8.292354],[-1.983199,7.018653,-7.325088,2.060381,8.712710,5.720567,2.708222,-2.979192,9.870795,3.616223,4.819046,-7.953916],[-6.551150,9.052353,-3.314448,9.106361,8.048887,-4.170915,4.184218,1.227463,-1.873710,-2.611972,1.530872,-0.599505],[1.380143,2.931463,-5.793864,8.930619,3.406236,3.041946,-0.811799,-9.599818,6.521068,5.633869,4.119870,7.061206],[1.960732,5.194837,-5.954722,4.322955,-7.492743,9.875883,2.052672,3.232481,1.058758,-4.233212,7.704222,-1.089576],[0.230662,1.817337,-2.959868,-8.988611,-1.608682,-3.388744,2.412922,7.705304,-9.498485,1.222020,5.587025,-0.129670]]], dtype = "float64")#candidate|7707|(6, 9, 12)|const|float64
uop_7708 = relay.asin(const_7707.astype('float64')) # shape=(6, 9, 12)
output = uop_7708
output2 = uop_7708
func_7727 = relay.Function([], output)
mod['func_7727'] = func_7727
mod = relay.transform.InferType()(mod)
output = func_7727()
func_7728 = relay.Function([], output)
mutated_mod['func_7728'] = func_7728
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7258_call = mod.get_global_var('func_7258')
func_7259_call = mutated_mod.get_global_var('func_7259')
call_7751 = relay.TupleGetItem(func_7258_call(), 0)
call_7752 = relay.TupleGetItem(func_7259_call(), 0)
func_6210_call = mod.get_global_var('func_6210')
func_6213_call = mutated_mod.get_global_var('func_6213')
var_7758 = relay.var("var_7758", dtype = "float32", shape = (165,))#candidate|7758|(165,)|var|float32
call_7757 = relay.TupleGetItem(func_6210_call(relay.reshape(var_7758.astype('float32'), [3, 5, 11])), 0)
call_7759 = relay.TupleGetItem(func_6213_call(relay.reshape(var_7758.astype('float32'), [3, 5, 11])), 0)
func_3654_call = mod.get_global_var('func_3654')
func_3662_call = mutated_mod.get_global_var('func_3662')
const_7768 = relay.const([-7,-1,-2,-6,-1,9,9,-6,-3,-6,-1,-4,-8,8,-3,4,-3,1,-5,2,3,7,5,-8,8,-3,8,-7,-10,-10,6,-1,2,6,-6,-3,-8,-4,-6,3,-10,-1,6,5,-5,-8,-2,9,10,9,-4,8,-5,-8,7,-4,-8,3,5,9,-6,10,-6,10,-6,4,3,3,4,-8,-3,-8,-7,6,-3,-3,-1,-7,-4,5,-7,-2,-10,-10,-8,-9,-3,1,-10,-4,-3,-1,10,3,4,5,-6,-6,4,5,6,-3,1,-1,-3,3,1,-10,2,6,1,1,-10,8,-3,-6,-6,-8,-2,-9,5,9,-8,1,-2,7,-10,-3,-3,2,1,-5,-6,-6,-5,1,7,-7,9,-4,-7,-4,-9,-5,7,10,-7,7,-9,10,-9,3,-3,2,10,-4,-9,4,-7,-2,-8,2,-7,-7,-5,-2,7,2,-8,1,2,-7,-6,-9,-9,5,5,-1,10,3,-4,-10,10,3,6,-8,-1,-9,5,8,-1,9,2,-2,-9,-8,8,6,-7,6,2,2,-8,-10,1,4,1,-9,7,-7,-6,9,-2,4,3,3,-3,-9,-7,1,-7,9,-10,2,2,4,-6,-2,8,-8,-5,6,-7,8,-6,-2,-3,2,9,-3,-7,9,-9,-2,8,-8,2,-10,3,-2,8,-3,-7,6,-10,9,5,-1,-10,9,-2,8,3,10,7,-4,-10,-5,1,-2,-2,8,-8,10,-9,-5,-8,-2,2,-6,8,5,-6,-4,6,7,9,-5,-2,7,8,2,-5,-6,10,10,-1,-5,-7,-3,7,1,5,4,-1,-9,-3,4,9,6,3,9,-1,2,-5,1,4,9,7,7,6,-6,10,8,-3,9,10,-1,-2,9,9,1,-1,3,6,6,7,-1,-6,-6,-3,5,3,-6,-3,2,6,-5,6,5,-9,3,2,3,-5,7,4,-3,1,1,6,-6,-9,-9,1,6,-4,-6,-5,6,-7,-7,-6,7,-4,1,-4,-2,8,-9,-5,8,5,6,4,9,-5,-4,9,-8,10,2,-6,8,-8,-4,-3,2,8,-6,-10,-6,1,5,3,-4,-3,-8,3,-7,-4,-1,3,5,-1,-6,5,-3,-3,-8,-2,-9,1,7,5,2,-5,6,-6,9,-1,-8,8,5,-2,8,-5,10,-6,9,-9,3,-4,1,-10,-1,9,9,1,-1,-7,6,7,8,-10,-5,8,4,8,5,-10,-9,4,-6,-2,-9,-5,-10,10,6,-7,-3,-10,8,-4,6,-7,-3,-4,9,4,-4,-4,1,-2,-6,-7,-5,-3,5,-6,-1,7,-8,-3,-7,-5,-7,-3,3,-7,-6,5,3,4,7,-8,-5,-4,-6,-9,7,-1,-3,5,2,4,-6,1,8,7,7,6,2,4,9,10,7,10,-10,7,-5,-1,-9,10,10,-3,-3,-9,-10,-5,-4,3,-8,3,-8,-9,-1,-5,5,-8,-3,9,9,-2,-1,-8,-2,8,5,-8,-2,-7,-9,1,-8,-6,9,8,5,9,-7,-1,-9,8,10,7,3,5,6,6,7,4,9,-6,-2,-10,-3,7,-2,5,1,6,-6,7,-8,-8,5,1,-6,2,-3,8,-5,-7,1,3,-4,7,-1,-3,-7,4,-5,-10,1,8,4,9,10,-10,-5,-3,1,10,6,3,-6,-9,-1,1,-1,-5,6,8,-9,9,1,-5,-3,6,-10,-7,5,5,-5,7,7,4,-7,9,3,2,-9,-8,-3,4,-5,-10,-6,-6,1,-10,-7,-2,-9,10,9,7,10,2,4,-9,-6,-1,1,-5,3,3,-2,-4,-5,6,-8,-4,10,4,-4,3,9,4,3,4,-7,-10,1,-1,-10,-2,9,7,-4,3,3,7,4,-3,1,5,-8,8,-8,-8,7,9,10,7,-8,-1,10,4,-9,1,8,-9,-2,6,5,10,-5,-10,-4,8,-9,4,9,3,7,-8,-9,-1,-2,-1,-2,1,-10,4,-9,-8,5,10,-10,-10,7,1,-4,7,1,7,2,5,-10,-8,3,-9,-5,-2,2,-1,-1,4,-9,5,2,-5,1,-6,1,2,-9,-4,-2,1,-10,2,9,9,1,-7,-8,-7,4,-2,9,-9,-8,5,1,3,-10,-3,5,6,7,-8,10,6,1,9,3,-8,-4,1,9,-5,1,10,1,1,-1,-3,-4,-5,6,-5,-5,-1,8,-2,-8,-7,-6,-4,-3,5,1,3,6,2,-3,4,-2,6,-7,-8,-7,3,-2,-10,-1,8,-10,9,10,-1,-8,2,-8,-9,-9,9,2,1,8,-8,4,-10,9,-4,1,-6,8,9,8,-2,-3,-5,4,10,5,2,-5,6,4,-7,-3,3,10,-9,10,-7,6,-9,-6,-4,-6,-2,3,-7,8,-3,6,4,10,4,7,-2,-3,-5,9,-2,8,-7,2,7,9,-2,-5,-1,-2,-4,8,3,-8,-2,8,3,-8,6,-6,1,-2,-8,-1,-4,6,1,-6,5,3,-1,1,-8,6,-10,-6,8,4,-8,7,-8,-10,8,5,9,3,8,8,5,-9,-6,6,6,-10,-6,6,1,-5,3,-2,-8,4,9,4,-6,6,10,6,3,8,-2,-3,10,9,8,6,6,-3,-4,8,-8,3,-8,3,4,1,8,8,4,3,-1,-7,1,-4,5,-6,-8,-2,-8,8,-8,8,4,6,-5,9,8,-5,-4,-5,-10,-5,-1,-5,-3,3,-3,-9,-8,5,4,9,8,2,-2,-4,-9,9,7,1,6,-5,-4,5,1,-7,-4,6,2,-5,-4,-7,9,3,1,-7,-7,-7,7,4,2,1,-10,7,7,-8,-2,-4,-2,-6,-10,-1,3,9,-8,6,-6,5,5,2], dtype = "uint64")#candidate|7768|(1080,)|const|uint64
const_7769 = relay.const([[-4.954831,1.239849,-6.772372,0.329631,-2.419335,-6.879136,-1.468055,4.497239,-1.185464,1.481723,-4.746041,2.577788,7.848609,-8.974812,-4.547034,-0.856739,5.017590,-7.372024,-8.693760,-4.720409,-2.320891,-1.383876,6.021323,-0.848372,6.015078,0.555973,-4.717277,-8.123819,9.177463,4.606118,-8.359194,-4.691680,0.584094,0.975266,-1.889266,-4.883300,-3.316256,0.584848,-2.108141,-3.723548,7.792157,0.739085,-8.174334,0.996918,8.301053,5.750715,2.999979,9.568745,-2.720752,-4.809754,5.265351,0.767853,6.283480,5.177185,-0.280599,-2.524337,3.462864,1.426697,1.224139,-1.769435,8.534438,-6.301297,0.444265,8.442543,-1.468196,2.208290,-2.337929,-0.577999,9.940992,8.429871,3.698315,-3.468030,-8.671451,-1.538735,-2.036827,-8.684316,-8.403156,-1.907949,-6.348693,8.455862,6.840288,-1.000960,3.022648,-1.052344,-0.509690,-4.976174,9.411315,3.659576,-6.671246,6.109271,-2.292544,-2.592958,-3.215336,-4.449554,-6.487599,0.645802,-1.674627,6.775007,-1.892778,0.041756,1.842582,-1.155559,-8.354564,-6.013086,2.720320,2.671317,1.170525,-7.965786],[8.834657,9.627475,-8.861982,5.580352,-8.168676,-5.588017,-9.618728,-5.091775,7.061130,-0.325843,-7.802272,-1.489134,-6.194890,9.677813,6.279146,8.338206,-4.485452,-2.053932,-2.082972,-6.877208,-7.878790,8.131110,-8.977632,1.538530,9.997377,0.931507,-8.537340,7.250276,6.467058,4.475886,2.854090,6.372975,1.045797,-3.330651,-4.576850,-9.414248,-7.921662,0.383368,4.808695,-9.582561,5.321288,-4.507480,-2.856109,-2.744165,-6.712390,-8.349245,5.013333,-2.072393,-4.882813,-8.462717,5.390568,1.367018,-3.287753,-5.516028,4.708484,-2.891210,-0.661472,4.264690,4.604214,-9.733624,2.604045,6.582209,3.984601,9.303319,-8.557460,-5.846328,-6.207576,8.308955,-0.771433,4.793032,7.204395,-2.988323,-8.501576,-9.159413,-2.307536,-7.886410,2.915965,-3.006633,2.414745,-7.942704,4.769976,9.460944,3.725787,-8.095010,-4.722250,0.778708,-3.711339,9.918760,7.729499,-3.727890,-4.812902,0.353703,-9.892156,-7.809703,9.531017,9.149356,2.078676,8.199029,-4.205928,4.786811,4.588109,-5.148281,-4.180207,-8.228902,9.705007,4.568694,0.187368,2.159306],[-6.581815,4.979056,1.951177,-0.291614,6.852534,2.180451,-2.951818,-8.167420,4.219734,4.153699,-1.221462,-6.722794,-7.493992,-8.626376,-8.344963,1.582577,0.167892,3.687964,7.669922,-8.237622,2.212413,-4.126845,-0.069243,2.111029,4.679261,2.133209,-8.103682,3.246984,-4.693789,8.481094,-5.829450,6.832013,3.211485,-5.302807,8.821185,-6.187230,-7.299857,-5.595379,8.121993,-1.974728,-4.076235,5.067104,5.208299,1.531187,-6.457608,3.716462,0.104179,-9.358255,7.464545,8.813337,2.148554,0.183712,9.595422,-9.842186,3.707337,2.742856,5.905787,-9.502593,-7.243363,-4.865423,-1.619162,9.675286,-0.238965,2.895359,-3.845482,-1.776140,-2.856643,9.266807,0.449548,-5.652449,-6.119776,-0.263120,-6.761160,5.819722,-4.360579,4.097990,4.699533,-8.630809,7.334158,5.052276,5.013488,1.804347,0.206403,0.056202,5.492689,1.463960,0.297835,0.161519,-9.291738,-5.721689,-6.984136,-1.309593,-7.486642,7.945666,-7.216573,1.243785,5.975842,6.569493,2.708765,6.796533,-1.727002,6.051772,2.446171,-2.664124,8.138963,-6.385337,-6.110036,3.416393],[-0.427805,-9.612185,4.489553,-8.124427,4.531399,2.254479,-4.620865,7.132362,5.861526,-2.684119,8.397416,-6.330935,-6.441320,-3.750946,8.559819,7.138144,-7.490534,-7.994186,-9.023447,-6.385548,-2.875676,-6.425980,8.578000,-8.590506,-7.412252,2.419771,2.903189,-8.684900,-3.065135,-0.017743,-5.907853,0.682968,-6.182690,-5.449566,-2.307608,-6.265337,-7.201814,5.322549,-1.075794,-3.956598,7.257723,-4.300225,-3.700048,-0.478379,5.224329,-2.776870,-1.506380,-3.022451,-7.361626,7.872100,-7.081400,1.100552,0.890266,-7.771459,-8.305227,-6.610737,-5.609598,-6.430403,-9.241297,3.241097,-4.065758,0.836658,-0.105752,9.732563,6.623658,5.867058,-0.563073,-3.550271,-8.036206,8.973604,-7.586407,-1.121812,-1.986385,0.480746,3.629800,-7.323722,-2.982350,-2.494266,6.836172,4.392291,5.579561,-4.225078,-4.355786,2.878455,7.850504,9.961823,-7.243855,-4.663015,4.032297,0.651570,6.958602,-5.966968,-6.533877,-8.329256,-8.455212,-1.660566,-2.161332,3.221355,6.363239,3.425568,3.602461,-0.407449,-0.992909,-0.647480,-1.661971,-6.952365,6.603325,-6.751892]], dtype = "float32")#candidate|7769|(4, 108)|const|float32
var_7770 = relay.var("var_7770", dtype = "int16", shape = (1386,))#candidate|7770|(1386,)|var|int16
var_7771 = relay.var("var_7771", dtype = "bool", shape = (1260,))#candidate|7771|(1260,)|var|bool
call_7767 = relay.TupleGetItem(func_3654_call(relay.reshape(const_7768.astype('uint64'), [1080,]), relay.reshape(const_7768.astype('uint64'), [1080,]), relay.reshape(call_7751.astype('uint64'), [1092,]), relay.reshape(const_7769.astype('float32'), [432,]), relay.reshape(var_7770.astype('int16'), [154, 9]), relay.reshape(var_7771.astype('bool'), [1260,]), ), 14)
call_7772 = relay.TupleGetItem(func_3662_call(relay.reshape(const_7768.astype('uint64'), [1080,]), relay.reshape(const_7768.astype('uint64'), [1080,]), relay.reshape(call_7751.astype('uint64'), [1092,]), relay.reshape(const_7769.astype('float32'), [432,]), relay.reshape(var_7770.astype('int16'), [154, 9]), relay.reshape(var_7771.astype('bool'), [1260,]), ), 14)
func_5003_call = mod.get_global_var('func_5003')
func_5005_call = mutated_mod.get_global_var('func_5005')
var_7781 = relay.var("var_7781", dtype = "bool", shape = (180,))#candidate|7781|(180,)|var|bool
call_7780 = func_5003_call(relay.reshape(var_7781.astype('bool'), [2, 15, 6]))
call_7782 = func_5003_call(relay.reshape(var_7781.astype('bool'), [2, 15, 6]))
const_7785 = relay.const([[5.427319,5.254763,6.354154,9.911310,-9.235864,3.884076,-6.509586,-1.659070,0.352591,3.754160,0.972656,5.968263,-8.281438,8.460202,6.690230,-3.905325,-0.569053,0.512825,0.561216,0.199431,-1.129429,-9.267542,0.913780,9.548095,-9.073953,-9.083080,-6.243797,2.882846,-2.505721,4.314196,5.518372,-4.723302,-9.907571,9.893524,-8.013199,6.513041,7.872460,8.458412,-5.233777,-9.353239,7.718968,-1.579156,-7.341974,-5.627682,-7.332433,-8.763130,5.720696,6.724183,5.487610,5.742792,0.930866,-5.520867,9.751475,-6.248679,-5.913507,-7.925001,3.237838,7.917087,-4.032540,-0.196525,-3.706995,0.868816,-4.479744,5.116445,4.529112,6.812627,9.755402,-8.249411,-4.613473,-1.772714,6.570837,-2.749443,9.872387,-1.761340,-9.806536,2.693674,-0.335508,-5.549933,2.533767,-6.690352,2.566482,-2.431475,7.968390,1.322608,9.557017,-5.381528,-9.381530,0.556346,-3.657146,8.317606,-3.517008,2.432330,7.061768,4.311401,5.764670,-7.147571,-1.975600,7.148690,0.269432,0.819937,-6.852548,5.322020,-3.436003,9.377237,-5.074159,4.439013,1.744585,3.927223],[2.613725,8.029803,-7.663674,0.210027,-2.414780,-1.581637,1.486965,-8.189859,8.514182,-1.109551,-9.892053,4.151404,-2.791837,-3.217320,1.475220,7.607053,-4.253764,-1.394619,-1.149651,8.889926,-3.705241,-2.708154,2.565482,-3.575499,-6.426969,8.907197,-6.118826,6.418156,9.017262,-9.532902,-6.687402,5.968497,-6.778254,7.591736,9.770017,-4.526914,4.449961,1.157015,1.624640,1.381054,-5.521947,1.773818,1.688494,-6.300312,-9.880892,-8.132834,-5.014237,3.767786,5.959563,6.429566,-7.379190,-1.376323,-9.111031,-7.034507,8.069472,4.797173,-1.970361,-9.204818,8.913306,6.127543,9.470630,-5.971252,5.578743,8.342085,0.796701,-9.983643,-0.106159,5.050299,-7.905073,-7.895095,4.156515,-9.487742,-4.940009,-4.619026,2.826362,6.720275,4.350514,-3.294337,-9.512910,1.637376,-7.132816,3.676592,-6.257317,8.991280,-0.213012,5.930824,2.898063,-4.709161,-4.050647,8.297607,-0.713809,7.130251,3.496420,-2.836278,2.557446,9.416443,1.979936,-3.434531,4.249960,4.946295,6.399163,3.340240,-5.077864,9.357581,-2.018356,-3.078058,1.376543,-1.092335],[2.999769,-2.469109,-6.559263,-8.773538,-1.791809,-4.382530,-5.649289,-7.913896,-6.431620,-5.763093,1.713354,1.949272,-7.237510,-6.465445,0.894047,-6.882367,3.468313,5.610456,-1.006817,-3.177336,-8.068295,-1.522881,-7.554850,4.734749,4.275476,2.348542,8.612297,-0.866334,-2.144502,2.686798,-1.575227,-0.204669,2.512146,0.264670,6.666130,-5.342461,-9.846354,-1.449611,4.712411,5.080561,8.905841,5.873205,-0.931661,-1.850516,-8.193391,-3.622444,-6.041690,4.407909,0.934388,8.678582,-6.249048,-5.587498,3.098327,4.456252,-6.363220,8.359389,2.802611,-7.774865,-1.781962,-9.751195,7.729274,9.191665,5.645683,9.826939,-5.452179,3.836500,-2.275090,1.192684,-5.882164,8.190625,-4.955448,-8.125106,8.074508,5.880647,0.746199,7.068318,-7.669340,-0.171854,3.690838,-4.454954,4.588317,-1.807543,-2.015116,5.246819,-9.437109,2.228939,6.212892,-0.759683,6.241976,-0.186810,0.488752,8.868274,6.463103,8.928745,1.687592,-1.642603,1.375623,-1.569405,-6.230695,-5.396132,-7.175741,3.766155,2.066280,5.173697,6.435423,0.637526,1.946812,6.112387],[5.868927,5.423441,-6.736377,4.822871,-0.715238,3.411301,5.017614,1.492228,-8.484191,3.491683,-0.243931,-3.363358,-5.485065,-6.262516,-8.388834,-9.098936,-9.903355,-1.394562,9.116509,-7.915423,7.842501,1.358360,7.924865,8.586681,0.832448,9.999775,3.743122,-5.537159,0.966512,0.938759,-6.668570,9.319906,1.215880,8.248843,7.927749,-3.292931,-6.568619,1.308866,-7.164650,6.812962,4.580631,4.905343,-0.161178,4.110418,-9.410333,3.804278,-3.195992,6.420171,-8.047556,4.706879,-7.535271,-2.011082,3.057908,-8.148612,-9.213846,7.890744,-2.213395,-0.280254,-1.562635,-6.890455,-9.203467,7.260640,3.072258,-0.687183,-4.613209,7.124498,5.192947,6.612518,-6.068596,-4.891862,1.396185,-8.397117,-4.882466,-1.506608,-9.685493,8.219360,-9.751613,-0.488435,1.843384,5.901090,-4.269691,-1.316324,-8.922521,-5.264074,6.869207,-7.240890,-4.802235,-5.584502,0.338446,-1.429626,-8.946633,5.440651,-5.750436,-3.854389,-4.252013,7.448236,-8.179847,6.560091,4.300250,3.647592,-7.272100,3.334327,3.371309,-8.568527,-8.813821,-4.316323,-0.812604,0.744140]], dtype = "float32")#candidate|7785|(4, 108)|const|float32
bop_7786 = relay.power(const_7769.astype('float32'), relay.reshape(const_7785.astype('float32'), relay.shape_of(const_7769))) # shape=(4, 108)
var_7789 = relay.var("var_7789", dtype = "float32", shape = (4, 108))#candidate|7789|(4, 108)|var|float32
bop_7790 = relay.floor_mod(bop_7786.astype('float64'), relay.reshape(var_7789.astype('float64'), relay.shape_of(bop_7786))) # shape=(4, 108)
output = relay.Tuple([call_7751,call_7757,var_7758,call_7767,const_7768,var_7770,var_7771,call_7780,var_7781,bop_7790,])
output2 = relay.Tuple([call_7752,call_7759,var_7758,call_7772,const_7768,var_7770,var_7771,call_7782,var_7781,bop_7790,])
func_7793 = relay.Function([var_7758,var_7770,var_7771,var_7781,var_7789,], output)
mod['func_7793'] = func_7793
mod = relay.transform.InferType()(mod)
mutated_mod['func_7793'] = func_7793
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7793_call = mutated_mod.get_global_var('func_7793')
var_7795 = relay.var("var_7795", dtype = "float32", shape = (165,))#candidate|7795|(165,)|var|float32
var_7796 = relay.var("var_7796", dtype = "int16", shape = (1386,))#candidate|7796|(1386,)|var|int16
var_7797 = relay.var("var_7797", dtype = "bool", shape = (1260,))#candidate|7797|(1260,)|var|bool
var_7798 = relay.var("var_7798", dtype = "bool", shape = (180,))#candidate|7798|(180,)|var|bool
var_7799 = relay.var("var_7799", dtype = "float32", shape = (4, 108))#candidate|7799|(4, 108)|var|float32
call_7794 = func_7793_call(var_7795,var_7796,var_7797,var_7798,var_7799,)
output = call_7794
func_7800 = relay.Function([var_7795,var_7796,var_7797,var_7798,var_7799,], output)
mutated_mod['func_7800'] = func_7800
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4750_call = mod.get_global_var('func_4750')
func_4752_call = mutated_mod.get_global_var('func_4752')
call_7814 = relay.TupleGetItem(func_4750_call(), 0)
call_7815 = relay.TupleGetItem(func_4752_call(), 0)
func_3985_call = mod.get_global_var('func_3985')
func_3987_call = mutated_mod.get_global_var('func_3987')
var_7826 = relay.var("var_7826", dtype = "float32", shape = (1408,))#candidate|7826|(1408,)|var|float32
call_7825 = relay.TupleGetItem(func_3985_call(relay.reshape(var_7826.astype('float32'), [11, 8, 16])), 0)
call_7827 = relay.TupleGetItem(func_3987_call(relay.reshape(var_7826.astype('float32'), [11, 8, 16])), 0)
bop_7838 = relay.greater_equal(var_7826.astype('bool'), relay.reshape(call_7825.astype('bool'), relay.shape_of(var_7826))) # shape=(1408,)
bop_7841 = relay.greater_equal(var_7826.astype('bool'), relay.reshape(call_7827.astype('bool'), relay.shape_of(var_7826))) # shape=(1408,)
uop_7848 = relay.asin(bop_7838.astype('float64')) # shape=(1408,)
uop_7850 = relay.asin(bop_7841.astype('float64')) # shape=(1408,)
output = relay.Tuple([call_7814,uop_7848,])
output2 = relay.Tuple([call_7815,uop_7850,])
F = relay.Function([var_7826,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_7826,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_74 = relay.var("var_74", dtype = "float32", shape = (4, 3, 14))#candidate|74|(4, 3, 14)|var|float32
var_75 = relay.var("var_75", dtype = "float32", shape = (4, 3, 14))#candidate|75|(4, 3, 14)|var|float32
bop_76 = relay.divide(var_74.astype('float32'), relay.reshape(var_75.astype('float32'), relay.shape_of(var_74))) # shape=(4, 3, 14)
bop_102 = relay.add(var_74.astype('uint64'), relay.reshape(bop_76.astype('uint64'), relay.shape_of(var_74))) # shape=(4, 3, 14)
output = bop_102
output2 = bop_102
func_141 = relay.Function([var_74,var_75,], output)
mod['func_141'] = func_141
mod = relay.transform.InferType()(mod)
var_142 = relay.var("var_142", dtype = "float32", shape = (4, 3, 14))#candidate|142|(4, 3, 14)|var|float32
var_143 = relay.var("var_143", dtype = "float32", shape = (4, 3, 14))#candidate|143|(4, 3, 14)|var|float32
output = func_141(var_142,var_143,)
func_144 = relay.Function([var_142,var_143,], output)
mutated_mod['func_144'] = func_144
mutated_mod = relay.transform.InferType()(mutated_mod)
var_235 = relay.var("var_235", dtype = "float64", shape = (11, 15, 8))#candidate|235|(11, 15, 8)|var|float64
uop_236 = relay.sinh(var_235.astype('float64')) # shape=(11, 15, 8)
func_141_call = mod.get_global_var('func_141')
func_144_call = mutated_mod.get_global_var('func_144')
var_255 = relay.var("var_255", dtype = "float32", shape = (168,))#candidate|255|(168,)|var|float32
call_254 = func_141_call(relay.reshape(var_255.astype('float32'), [4, 3, 14]), relay.reshape(var_255.astype('float32'), [4, 3, 14]), )
call_256 = func_141_call(relay.reshape(var_255.astype('float32'), [4, 3, 14]), relay.reshape(var_255.astype('float32'), [4, 3, 14]), )
var_269 = relay.var("var_269", dtype = "float64", shape = (11, 15, 8))#candidate|269|(11, 15, 8)|var|float64
bop_270 = relay.equal(uop_236.astype('bool'), relay.reshape(var_269.astype('bool'), relay.shape_of(uop_236))) # shape=(11, 15, 8)
output = relay.Tuple([call_254,var_255,bop_270,])
output2 = relay.Tuple([call_256,var_255,bop_270,])
func_275 = relay.Function([var_235,var_255,var_269,], output)
mod['func_275'] = func_275
mod = relay.transform.InferType()(mod)
mutated_mod['func_275'] = func_275
mutated_mod = relay.transform.InferType()(mutated_mod)
func_275_call = mutated_mod.get_global_var('func_275')
var_277 = relay.var("var_277", dtype = "float64", shape = (11, 15, 8))#candidate|277|(11, 15, 8)|var|float64
var_278 = relay.var("var_278", dtype = "float32", shape = (168,))#candidate|278|(168,)|var|float32
var_279 = relay.var("var_279", dtype = "float64", shape = (11, 15, 8))#candidate|279|(11, 15, 8)|var|float64
call_276 = func_275_call(var_277,var_278,var_279,)
output = call_276
func_280 = relay.Function([var_277,var_278,var_279,], output)
mutated_mod['func_280'] = func_280
mutated_mod = relay.transform.InferType()(mutated_mod)
var_437 = relay.var("var_437", dtype = "int8", shape = (14, 2, 13))#candidate|437|(14, 2, 13)|var|int8
var_438 = relay.var("var_438", dtype = "int8", shape = (14, 2, 13))#candidate|438|(14, 2, 13)|var|int8
bop_439 = relay.not_equal(var_437.astype('bool'), relay.reshape(var_438.astype('bool'), relay.shape_of(var_437))) # shape=(14, 2, 13)
output = bop_439
output2 = bop_439
func_448 = relay.Function([var_437,var_438,], output)
mod['func_448'] = func_448
mod = relay.transform.InferType()(mod)
mutated_mod['func_448'] = func_448
mutated_mod = relay.transform.InferType()(mutated_mod)
func_448_call = mutated_mod.get_global_var('func_448')
var_450 = relay.var("var_450", dtype = "int8", shape = (14, 2, 13))#candidate|450|(14, 2, 13)|var|int8
var_451 = relay.var("var_451", dtype = "int8", shape = (14, 2, 13))#candidate|451|(14, 2, 13)|var|int8
call_449 = func_448_call(var_450,var_451,)
output = call_449
func_452 = relay.Function([var_450,var_451,], output)
mutated_mod['func_452'] = func_452
mutated_mod = relay.transform.InferType()(mutated_mod)
var_474 = relay.var("var_474", dtype = "float64", shape = (3, 7, 5))#candidate|474|(3, 7, 5)|var|float64
uop_475 = relay.log10(var_474.astype('float64')) # shape=(3, 7, 5)
func_448_call = mod.get_global_var('func_448')
func_452_call = mutated_mod.get_global_var('func_452')
var_478 = relay.var("var_478", dtype = "int8", shape = (364,))#candidate|478|(364,)|var|int8
call_477 = func_448_call(relay.reshape(var_478.astype('int8'), [14, 2, 13]), relay.reshape(var_478.astype('int8'), [14, 2, 13]), )
call_479 = func_448_call(relay.reshape(var_478.astype('int8'), [14, 2, 13]), relay.reshape(var_478.astype('int8'), [14, 2, 13]), )
uop_481 = relay.exp(uop_475.astype('float32')) # shape=(3, 7, 5)
func_275_call = mod.get_global_var('func_275')
func_280_call = mutated_mod.get_global_var('func_280')
var_488 = relay.var("var_488", dtype = "float64", shape = (1320,))#candidate|488|(1320,)|var|float64
const_489 = relay.const([1.209695,-4.363386,2.948979,-9.735458,1.191012,-9.231378,-5.114683,7.368680,-0.691959,1.057398,6.207134,-9.914098,3.835324,-3.582808,-9.250654,7.027813,8.272857,-9.291181,-9.148232,-8.074594,2.785753,-3.665162,-0.742861,-6.057111,6.307838,0.357135,-9.687225,-7.261354,-0.686977,8.992650,2.557282,-9.765065,-3.379069,-8.243978,5.923383,4.672244,1.872947,-4.653923,6.279803,-6.266845,-6.711553,8.685483,-2.212714,-7.804234,-1.828778,0.224856,9.774734,4.760424,-7.278514,-1.738786,-6.622798,-4.928775,0.785844,3.492164,5.015298,6.512948,-9.912597,7.718612,0.898267,6.508678,1.575854,3.261027,-0.446351,-5.185045,-9.574444,6.733474,-3.231364,-4.941550,-0.177795,-3.479202,-0.710344,-4.877481,-1.314115,8.339593,1.032226,-3.095188,7.186008,5.635542,-1.459574,-7.134113,1.790257,0.824480,1.895486,3.250292,-6.911039,4.493417,-8.289675,6.304381,8.298626,-1.388688,1.913523,2.142085,-8.168833,-1.708752,4.979543,-8.082390,-1.653824,-9.954444,6.626607,-0.873545,-2.937613,-1.426368,9.937441,1.372559,-0.044073,9.184690,-0.208712,-4.043672,-2.682237,4.053868,5.924135,-3.219645,-7.824053,5.891057,-2.122886,1.062900,-3.172687,6.942122,4.552980,-8.554492,-9.970693,5.715381,6.799678,-2.582994,-0.586373,2.896860,3.959093,-4.052172,-7.280905,2.518935,7.303168,7.600389,4.153697,1.961966,-1.945634,-9.137027,2.107330,2.388463,-1.035211,-3.159732,-7.112338,-4.272445,7.478499,7.806047,4.817785,9.116542,1.532429,-4.918446,7.546186,0.759134,7.174555,7.331849,1.251075,9.155826,-5.051284,-9.716266,3.740575,-2.772401,2.178756,1.532244,-4.062487,5.510093,2.837726,-9.094722,4.634938,-5.187477,-3.769975,-4.806674], dtype = "float32")#candidate|489|(168,)|const|float32
call_487 = relay.TupleGetItem(func_275_call(relay.reshape(var_488.astype('float64'), [11, 15, 8]), relay.reshape(const_489.astype('float32'), [168,]), relay.reshape(var_488.astype('float64'), [11, 15, 8]), ), 1)
call_490 = relay.TupleGetItem(func_280_call(relay.reshape(var_488.astype('float64'), [11, 15, 8]), relay.reshape(const_489.astype('float32'), [168,]), relay.reshape(var_488.astype('float64'), [11, 15, 8]), ), 1)
output = relay.Tuple([call_477,var_478,uop_481,call_487,var_488,const_489,])
output2 = relay.Tuple([call_479,var_478,uop_481,call_490,var_488,const_489,])
func_501 = relay.Function([var_474,var_478,var_488,], output)
mod['func_501'] = func_501
mod = relay.transform.InferType()(mod)
var_502 = relay.var("var_502", dtype = "float64", shape = (3, 7, 5))#candidate|502|(3, 7, 5)|var|float64
var_503 = relay.var("var_503", dtype = "int8", shape = (364,))#candidate|503|(364,)|var|int8
var_504 = relay.var("var_504", dtype = "float64", shape = (1320,))#candidate|504|(1320,)|var|float64
output = func_501(var_502,var_503,var_504,)
func_505 = relay.Function([var_502,var_503,var_504,], output)
mutated_mod['func_505'] = func_505
mutated_mod = relay.transform.InferType()(mutated_mod)
var_594 = relay.var("var_594", dtype = "uint64", shape = (14, 9, 2))#candidate|594|(14, 9, 2)|var|uint64
const_595 = relay.const([[[-9,6],[6,-6],[-1,-1],[10,7],[-9,-2],[5,-1],[-2,9],[1,7],[-7,-6]],[[5,5],[8,6],[-3,-1],[-1,5],[3,-4],[8,-2],[5,1],[-6,-2],[-10,-4]],[[2,6],[5,8],[-10,-2],[10,2],[1,-6],[-5,8],[-3,2],[-9,10],[8,-7]],[[-3,9],[-5,-8],[6,2],[4,-6],[7,2],[-6,1],[-9,-9],[9,2],[-8,-5]],[[1,-9],[-3,-8],[2,-8],[8,7],[2,-1],[3,10],[5,-5],[-2,-5],[6,-1]],[[6,-6],[3,-7],[1,7],[4,-6],[10,-10],[-7,-6],[-7,-1],[-7,-4],[4,-3]],[[-3,8],[-4,9],[6,6],[3,-1],[-3,1],[-1,3],[-9,-3],[6,-7],[-4,-6]],[[3,6],[-3,5],[10,-10],[4,3],[6,-3],[4,5],[10,10],[1,4],[-1,1]],[[-5,-2],[4,-6],[-3,-4],[-4,3],[3,-7],[-2,-8],[-2,4],[3,7],[-4,10]],[[1,6],[4,3],[7,7],[4,2],[2,-6],[10,-10],[-7,-10],[-10,-9],[-6,-4]],[[-7,2],[5,-3],[-5,4],[4,-4],[1,-9],[4,1],[2,2],[-7,10],[-7,7]],[[2,-10],[4,4],[5,-4],[3,7],[3,-9],[10,-2],[-2,-10],[-7,-1],[-6,5]],[[5,9],[1,-8],[-7,4],[-5,-4],[6,3],[-10,-9],[1,-7],[-10,-8],[-4,-9]],[[-10,-9],[-4,-6],[8,5],[8,4],[-2,-5],[4,9],[-4,1],[3,3],[8,10]]], dtype = "uint64")#candidate|595|(14, 9, 2)|const|uint64
bop_596 = relay.minimum(var_594.astype('uint64'), relay.reshape(const_595.astype('uint64'), relay.shape_of(var_594))) # shape=(14, 9, 2)
uop_608 = relay.exp(bop_596.astype('float32')) # shape=(14, 9, 2)
output = uop_608
output2 = uop_608
func_618 = relay.Function([var_594,], output)
mod['func_618'] = func_618
mod = relay.transform.InferType()(mod)
mutated_mod['func_618'] = func_618
mutated_mod = relay.transform.InferType()(mutated_mod)
var_619 = relay.var("var_619", dtype = "uint64", shape = (14, 9, 2))#candidate|619|(14, 9, 2)|var|uint64
func_618_call = mutated_mod.get_global_var('func_618')
call_620 = func_618_call(var_619)
output = call_620
func_621 = relay.Function([var_619], output)
mutated_mod['func_621'] = func_621
mutated_mod = relay.transform.InferType()(mutated_mod)
const_638 = relay.const(9, dtype = "uint64")#candidate|638|()|const|uint64
var_639 = relay.var("var_639", dtype = "uint64", shape = (7, 9, 8))#candidate|639|(7, 9, 8)|var|uint64
bop_640 = relay.minimum(const_638.astype('uint64'), var_639.astype('uint64')) # shape=(7, 9, 8)
output = bop_640
output2 = bop_640
func_652 = relay.Function([var_639,], output)
mod['func_652'] = func_652
mod = relay.transform.InferType()(mod)
var_653 = relay.var("var_653", dtype = "uint64", shape = (7, 9, 8))#candidate|653|(7, 9, 8)|var|uint64
output = func_652(var_653)
func_654 = relay.Function([var_653], output)
mutated_mod['func_654'] = func_654
mutated_mod = relay.transform.InferType()(mutated_mod)
var_956 = relay.var("var_956", dtype = "float64", shape = (10, 14, 16))#candidate|956|(10, 14, 16)|var|float64
var_957 = relay.var("var_957", dtype = "float64", shape = (10, 14, 16))#candidate|957|(10, 14, 16)|var|float64
bop_958 = relay.power(var_956.astype('float64'), relay.reshape(var_957.astype('float64'), relay.shape_of(var_956))) # shape=(10, 14, 16)
output = bop_958
output2 = bop_958
func_970 = relay.Function([var_956,var_957,], output)
mod['func_970'] = func_970
mod = relay.transform.InferType()(mod)
mutated_mod['func_970'] = func_970
mutated_mod = relay.transform.InferType()(mutated_mod)
func_970_call = mutated_mod.get_global_var('func_970')
var_972 = relay.var("var_972", dtype = "float64", shape = (10, 14, 16))#candidate|972|(10, 14, 16)|var|float64
var_973 = relay.var("var_973", dtype = "float64", shape = (10, 14, 16))#candidate|973|(10, 14, 16)|var|float64
call_971 = func_970_call(var_972,var_973,)
output = call_971
func_974 = relay.Function([var_972,var_973,], output)
mutated_mod['func_974'] = func_974
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1109 = relay.var("var_1109", dtype = "float32", shape = (13, 9, 14))#candidate|1109|(13, 9, 14)|var|float32
uop_1110 = relay.rsqrt(var_1109.astype('float32')) # shape=(13, 9, 14)
output = relay.Tuple([uop_1110,])
output2 = relay.Tuple([uop_1110,])
func_1116 = relay.Function([var_1109,], output)
mod['func_1116'] = func_1116
mod = relay.transform.InferType()(mod)
var_1117 = relay.var("var_1117", dtype = "float32", shape = (13, 9, 14))#candidate|1117|(13, 9, 14)|var|float32
output = func_1116(var_1117)
func_1118 = relay.Function([var_1117], output)
mutated_mod['func_1118'] = func_1118
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1605 = relay.const([[[-1.840807,-8.732724,2.481497,7.319698]],[[2.960403,-1.728064,8.567030,-4.548524]],[[-3.358994,5.143607,-2.006095,5.954862]],[[6.712239,-4.194987,9.083102,-6.956589]],[[1.469542,9.255957,5.006085,-4.828042]],[[-7.134330,2.956218,-1.376073,-5.516840]],[[1.324676,1.077746,1.879715,-6.010651]],[[-6.736796,-5.525878,-9.544500,0.280488]],[[1.867041,-6.127754,-7.320252,8.921732]],[[-8.952302,-8.879656,-2.616009,5.546376]],[[-3.338588,5.163888,1.844986,-0.271359]],[[-9.656811,-7.960223,9.641292,-7.428319]],[[-0.131192,7.679437,-5.596304,1.210023]],[[-6.355926,1.196357,-8.798208,-6.901715]],[[-7.902056,-7.229635,9.920815,7.025809]],[[9.838915,8.485876,8.421850,1.285808]]], dtype = "float32")#candidate|1605|(16, 1, 4)|const|float32
uop_1606 = relay.cosh(const_1605.astype('float32')) # shape=(16, 1, 4)
output = uop_1606
output2 = uop_1606
func_1615 = relay.Function([], output)
mod['func_1615'] = func_1615
mod = relay.transform.InferType()(mod)
output = func_1615()
func_1616 = relay.Function([], output)
mutated_mod['func_1616'] = func_1616
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1615_call = mod.get_global_var('func_1615')
func_1616_call = mutated_mod.get_global_var('func_1616')
call_1623 = func_1615_call()
call_1624 = func_1615_call()
output = relay.Tuple([call_1623,])
output2 = relay.Tuple([call_1624,])
func_1626 = relay.Function([], output)
mod['func_1626'] = func_1626
mod = relay.transform.InferType()(mod)
mutated_mod['func_1626'] = func_1626
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1626_call = mutated_mod.get_global_var('func_1626')
call_1627 = func_1626_call()
output = call_1627
func_1628 = relay.Function([], output)
mutated_mod['func_1628'] = func_1628
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1626_call = mod.get_global_var('func_1626')
func_1628_call = mutated_mod.get_global_var('func_1628')
call_1641 = relay.TupleGetItem(func_1626_call(), 0)
call_1642 = relay.TupleGetItem(func_1628_call(), 0)
output = call_1641
output2 = call_1642
func_1645 = relay.Function([], output)
mod['func_1645'] = func_1645
mod = relay.transform.InferType()(mod)
mutated_mod['func_1645'] = func_1645
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1645_call = mutated_mod.get_global_var('func_1645')
call_1646 = func_1645_call()
output = call_1646
func_1647 = relay.Function([], output)
mutated_mod['func_1647'] = func_1647
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1615_call = mod.get_global_var('func_1615')
func_1616_call = mutated_mod.get_global_var('func_1616')
call_1770 = func_1615_call()
call_1771 = func_1615_call()
output = call_1770
output2 = call_1771
func_1783 = relay.Function([], output)
mod['func_1783'] = func_1783
mod = relay.transform.InferType()(mod)
mutated_mod['func_1783'] = func_1783
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1783_call = mutated_mod.get_global_var('func_1783')
call_1784 = func_1783_call()
output = call_1784
func_1785 = relay.Function([], output)
mutated_mod['func_1785'] = func_1785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1615_call = mod.get_global_var('func_1615')
func_1616_call = mutated_mod.get_global_var('func_1616')
call_1824 = func_1615_call()
call_1825 = func_1615_call()
output = call_1824
output2 = call_1825
func_1837 = relay.Function([], output)
mod['func_1837'] = func_1837
mod = relay.transform.InferType()(mod)
mutated_mod['func_1837'] = func_1837
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1837_call = mutated_mod.get_global_var('func_1837')
call_1838 = func_1837_call()
output = call_1838
func_1839 = relay.Function([], output)
mutated_mod['func_1839'] = func_1839
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1626_call = mod.get_global_var('func_1626')
func_1628_call = mutated_mod.get_global_var('func_1628')
call_1865 = relay.TupleGetItem(func_1626_call(), 0)
call_1866 = relay.TupleGetItem(func_1628_call(), 0)
func_1837_call = mod.get_global_var('func_1837')
func_1839_call = mutated_mod.get_global_var('func_1839')
call_1870 = func_1837_call()
call_1871 = func_1837_call()
func_1116_call = mod.get_global_var('func_1116')
func_1118_call = mutated_mod.get_global_var('func_1118')
const_1876 = relay.const([-1.815717,-0.274883,8.773634,8.016933,-5.324858,8.896470,-3.139248,7.295050,9.485548,-0.223729,-3.944659,4.328482,8.600292,-7.162218,4.832265,3.861928,1.465523,1.794033,-4.116668,-5.296433,-1.654599,5.366118,-3.725253,4.543309,1.905044,0.999532,-3.780950,-5.929777,-6.798858,-3.995628,-9.518883,8.291830,-7.118737,9.439165,6.146953,5.444060,5.071107,-5.092853,3.011603,6.340746,-4.831130,0.826024,5.233013,-6.605643,-9.045069,-0.860194,-5.109955,5.129102,-0.112584,9.508279,-5.438666,5.595271,-6.645327,7.244840,-9.188392,-9.793068,2.427840,7.356233,0.772405,0.099975,6.817737,9.678464,0.586807,-6.189051,4.830011,-6.674729,-0.911880,6.164215,6.603888,7.179266,-5.616913,-2.924205,0.316682,-2.704503,2.224828,-5.849295,9.181120,1.639245,-9.845310,-6.209205,8.528953,-3.199077,2.445202,-5.911679,-3.175978,-5.329812,-6.344090,5.004756,-1.917100,-2.693002,3.163500,-3.573115,-2.536721,1.603718,6.415323,-4.482726,-5.709408,3.122600,1.531103,1.035087,9.278517,-2.748589,-3.530925,8.064621,6.405379,6.026138,-8.014528,-2.541621,7.043343,-9.195056,8.871907,1.943467,3.056542,7.183966,1.247049,-2.265510,-3.963675,-4.193000,-4.052994,-8.236492,2.988742,-6.417349,6.928001,6.563207,0.852795,-1.352044,-6.732117,-9.020162,-5.005400,-7.123609,-8.820883,-7.383252,8.029188,-0.341362,-2.928706,-0.515453,-1.490000,7.049496,7.249819,-4.639000,-9.311484,8.735115,-5.663496,-7.098112,-4.377460,-3.077121,-3.606263,8.154888,4.787820,5.174031,-6.809512,-2.518081,7.750679,8.428006,-2.358831,6.738175,-3.881253,2.296128,-8.978611,5.400473,4.865613,-9.530427,-5.126710,8.882767,5.075802,3.822520,-1.850884,-0.285631,3.545530,-2.133779,1.575379,0.838661,6.438133,-3.942656,-9.409668,-1.031498,-2.230576,4.535388,-5.846538,-7.584861,-4.077614,-1.497983,1.830195,-0.264318,-1.950782,-6.659956,-9.285251,9.617840,2.557785,9.820147,5.299421,4.945821,-3.059356,-1.303097,8.911985,-2.996570,-6.698285,6.092110,8.538149,-3.988642,-3.283849,3.688394,-2.018577,-7.927829,5.930922,-6.230906,7.643499,-1.371870,-5.808052,5.504544,3.242586,1.848143,-4.875594,-2.684360,-3.074386,8.637470,1.426506,2.738434,0.627822,5.523212,-0.758273,4.061017,3.378736,5.696756,-4.102532,-8.241423,0.364697,4.650177,-5.178924,3.982487,-4.794401,9.413314,-5.434734,-2.228700,2.110889,-6.803742,5.007823,6.557838,2.587898,-7.310905,9.577936,4.619711,5.202800,-3.813494,-2.443248,-3.010910,-2.980121,8.418500,6.079731,-6.564613,9.065581,-7.907798,-9.757094,-1.810104,-7.597719,0.836348,8.692854,-9.013349,6.836560,-6.171670,8.926008,4.675702,-1.699483,-2.911008,-4.535722,-0.635631,1.268255,-0.131885,0.140616,2.112850,9.892117,8.612681,3.344757,6.970913,1.351714,5.958645,0.399062,-8.930628,7.038592,9.145809,-9.967251,5.080005,-7.784511,6.712412,-4.310679,9.746869,-8.411667,-1.779764,9.046115,-4.434724,0.258587,3.563235,-3.556656,0.351090,-0.215590,8.323622,-4.167766,-3.359788,-5.116885,-4.882877,-2.051585,6.616669,5.925299,-5.598206,5.627516,6.318996,-2.286812,1.245452,-6.076519,-9.509889,5.564608,4.548071,2.233047,-6.302595,-9.244807,-4.428903,8.494888,7.377049,-0.670402,7.633433,-9.563640,-6.368201,8.068781,-7.246757,-7.521353,-2.898173,-5.768621,-9.428233,7.141271,-5.848634,8.071683,-7.302575,-2.540450,0.676798,1.175265,-9.260827,8.725583,1.853023,3.662906,0.573356,-8.629046,2.430854,7.203619,-8.894606,4.134542,-6.162701,-9.933049,0.194277,-6.428837,4.590203,2.591207,-3.064843,-6.791639,8.394997,2.276474,-1.639517,-1.908163,-0.816133,8.979767,-0.308921,3.406140,8.326331,4.691574,-1.640221,-4.235772,4.826086,-9.230361,-6.246864,3.272028,-3.986992,-2.719161,9.859992,-7.341269,6.706686,-8.047781,-7.366356,-3.829075,3.577041,-8.018966,-4.972246,6.624622,-7.193667,0.434040,0.140540,-2.289525,0.274616,-0.866010,0.108769,-5.536790,-6.500249,-7.358846,5.687702,-7.581071,-8.178881,-9.491678,4.836305,7.158844,1.029783,1.242776,0.986307,-6.308131,-5.588034,5.211981,-1.876992,-6.086377,0.373469,3.822628,-0.781235,4.387350,6.676931,2.470187,-2.725804,-1.197665,6.776717,-2.682814,-2.482377,3.121705,0.487373,-0.486592,-9.056655,-7.046905,-5.409665,-1.067961,7.956405,4.205240,-8.455417,-7.546276,8.709270,-6.819955,-1.555030,-4.408905,-1.697504,5.253670,-4.693525,4.200253,1.926098,-6.037733,3.025143,-0.259747,4.044180,4.595064,-5.912110,-1.087624,4.713513,-1.129331,9.004759,-3.103981,-2.481937,1.935863,1.052129,0.624957,-0.086846,-8.372272,7.097387,-8.600694,3.151921,-1.701364,9.025226,5.097685,1.377782,-6.683251,-0.640437,-1.703336,2.546106,-0.603955,-1.646310,6.735201,7.767497,8.941427,-7.992444,9.336870,1.539000,2.630466,-9.756939,3.276002,-6.936456,-7.701061,-5.718661,0.792360,-1.745001,3.138267,9.184743,0.841646,-3.240683,1.672708,1.932581,-8.738892,-7.941445,7.712072,5.420156,6.784476,3.889542,-3.740969,-4.521204,8.984565,0.448505,-9.666481,8.934833,-3.381954,-8.885554,-5.616206,-0.116801,-9.678189,-4.885568,-3.234927,2.795013,6.550392,6.433280,-6.434029,0.572416,8.487178,-2.700766,0.084736,9.184472,-2.790365,-0.256916,9.235052,1.966356,2.916604,-1.383067,8.904556,2.886904,-9.301654,1.745100,1.405976,-2.550635,8.187632,-6.199058,-2.332994,-0.047556,6.700177,1.582789,-7.668362,-3.002494,-2.577634,2.752737,-3.274620,-1.027148,3.286991,-2.362901,-5.494944,0.144500,4.425365,-4.261821,-6.026316,-5.534962,6.940829,-2.225884,6.509958,-5.893752,7.327861,3.335659,-0.224148,-2.923690,8.526153,-8.343593,3.948093,-8.886922,6.913228,-7.807375,2.358082,7.215063,-4.778006,-2.467907,2.461855,9.143767,-9.254452,-2.642741,-4.459433,8.376910,7.384683,9.201383,8.335433,-7.315192,7.051343,-6.729590,3.932347,1.581042,-4.737509,2.081138,-2.928247,-2.546411,-1.802662,-6.576181,-2.650918,-7.625554,2.870948,-2.748324,7.294507,-9.900643,-0.320490,-4.188229,-4.593524,4.358939,7.381323,-1.741787,-1.239786,8.294204,-9.419941,6.271784,0.737263,-1.645618,-4.686129,1.000862,0.995246,-0.120974,7.719447,-5.152191,-4.250271,-5.134876,-3.758948,-4.779672,4.373102,9.297454,8.888639,-3.086454,4.410383,3.312254,-8.560413,6.328320,-2.344115,4.343602,-1.797357,-0.819563,4.002779,3.196345,1.370822,-2.414305,6.414227,-8.886051,4.186738,0.813133,-5.606922,-0.134170,1.078313,-3.859678,5.551633,4.512309,4.244183,-7.300092,-5.012721,0.164039,8.745623,4.769735,4.524547,5.983317,-3.546263,9.799870,-9.611593,4.524300,-3.060443,1.977331,2.278821,7.721850,-6.194663,-1.423329,2.544942,9.426803,2.560352,4.747665,-0.705170,7.252500,0.633913,8.905824,-3.269729,-7.629325,0.570537,-3.359622,-9.693007,9.003695,-2.678110,-7.901117,3.103092,-1.313782,-0.269792,-3.549302,0.823185,3.492354,-3.030571,-9.127300,-7.188570,1.789593,-8.598497,-1.412196,-1.562737,-2.775526,0.387538,-7.624535,-7.593174,-6.393946,2.168642,1.994392,-3.211283,5.253682,-7.370755,-1.311329,-4.949173,-5.778797,4.137959,-4.605300,-6.048985,-0.073874,6.620809,7.317193,-0.137187,-9.733844,-7.507314,-7.411866,-8.963331,9.785579,3.710551,0.622927,-8.802276,-6.150219,1.870181,9.485228,2.034639,2.726954,-2.211231,-3.962133,-1.905685,-2.550173,3.483777,-3.714488,6.062537,-5.816045,1.911688,-2.815349,5.344413,2.311649,5.853434,-6.960270,5.247732,9.710630,-5.772294,-6.054302,-3.411280,9.485623,8.663274,-7.193636,-3.499502,3.077491,-3.003376,4.723462,-0.547261,-2.540894,1.915245,2.459985,0.087628,-0.354606,-8.117644,-3.105982,-4.308375,-5.571699,7.066696,-2.538444,7.025814,3.515416,2.735884,0.202481,-9.995210,-1.843784,8.183212,-4.907100,-8.829960,-3.623871,3.489847,-9.190238,6.385821,4.198253,9.977931,-2.378467,9.390852,-1.914660,-6.456657,-3.932924,-8.200619,-8.664944,-6.282048,-0.681852,8.866813,-5.289354,3.927634,-0.363164,7.047566,-2.797730,5.368287,-5.704689,-9.391996,-5.947267,-2.711223,8.621214,3.923967,-2.480087,-5.912190,-5.952419,-1.426906,-8.635630,0.281917,-8.483864,-4.431163,7.281227,0.828427,-8.415431,5.161444,-8.963863,-8.887997,-4.997517,4.353616,4.474275,9.331681,6.975999,-2.868294,8.555474,3.929403,6.865615,-1.562154,2.027253,-3.084548,-7.035417,-6.331011,7.171546,-3.718714,-6.377005,0.120155,-0.860189,-1.362960,-3.268539,7.928491,-4.686650,1.265466,1.067008,6.071629,7.065964,-9.224616,5.641427,-0.187345,4.138812,-4.712740,-5.277603,-2.394138,-6.781008,-1.612172,0.826047,-1.747646,-6.477586,5.772663,-6.849475,2.569211,-9.630603,7.250996,-3.431525,7.217985,-2.168992,-9.931080,8.515856,8.826031,2.304528,-1.449087,-2.262912,-3.963833,-3.522742,-0.866448,-0.822520,-0.028687,0.676774,-7.546439,9.548527,-4.719939,9.984150,-2.700964,2.520455,-1.983174,4.927639,7.824282,-6.552417,5.390765,-3.888099,6.287059,0.439111,6.481573,5.692782,-4.860063,4.737283,-8.461955,6.228259,5.705069,1.704317,7.535894,-2.546997,-6.691744,5.516935,0.817953,7.601459,-4.859295,-5.820797,4.152821,-6.212245,-8.126067,-1.990193,-5.073313,3.837293,-5.471808,-1.797249,-6.337885,0.079728,3.823353,-0.996209,-2.059090,9.642233,-3.441247,-5.140176,1.708896,4.896784,6.777223,-5.700544,-4.164497,2.047347,-3.269164,-5.600061,3.810081,6.999810,-2.006880,8.919267,1.958703,-7.216710,1.182831,-7.395687,9.092454,-3.720798,7.668380,-5.613571,2.612962,5.289762,1.079469,-5.179380,2.483113,9.812278,7.732655,-0.287753,8.805907,-7.214586,9.564702,3.936532,-0.183624,6.018185,3.782796,0.643947,-7.007529,-5.299859,5.478629,-0.010305,6.869082,-4.169371,-4.048989,0.704296,0.323927,-4.116466,-6.332130,5.479091,-2.363044,7.192182,3.891223,-4.006812,6.686213,1.594347,5.559223,5.660866,-7.475421,5.915091,-9.608105,-3.408621,-8.034272,-0.235051,6.355718,4.563141,2.757668,7.631769,-4.441891,-6.282184,-3.516182,-3.130844,9.207775,-4.994722,6.806170,-2.881439,4.239560,-8.867434,-5.840144,-2.212898,-2.494430,7.560882,-4.671196,-0.557481,-5.856409,-8.208272,9.353128,-5.505176,-5.913582,-2.135398,-2.020857,4.396662,0.487872,8.393737,9.690014,1.609353,6.809988,2.119185,3.327263,-7.053339,-3.455223,6.214773,6.808031,-0.793978,-7.657434,-7.273246,5.779024,-5.330399,9.303532,-8.499015,-8.930159,-4.946349,-1.425328,7.041754,-5.881265,2.595044,3.957495,-0.222665,-4.687026,-2.316080,4.631679,2.416883,4.109038,9.668302,7.224020,5.027344,-0.519951,-9.745072,8.063396,-4.967616,0.763988,-1.495796,-2.121782,-7.945732,2.359094,-8.658681,4.476887,9.465046,1.705797,5.972956,7.618517,-0.274270,-8.375654,-3.602959,3.534212,1.862039,4.455823,8.303362,-7.544449,-3.232450,-9.196813,-8.781385,9.216315,-3.359103,5.956126,8.411500,-0.678837,-3.282716,-4.205027,-5.582864,0.006323,7.109847,1.880042,3.901101,-2.930643,9.995263,-9.801105,-6.767093,-6.789578,-0.849913,-2.760024,-8.502876,-4.292911,8.352307,2.278247,-6.877941,-8.784921,9.027921,-1.074361,7.086960,3.957427,9.825121,8.721573,8.455402,9.203816,3.392674,2.417538,-7.151260,-5.871885,1.584049,-0.321172,-7.491480,8.029992,-4.894565,-8.326676,-8.205790,6.677407,0.996293,4.443864,-7.282286,8.792184,-9.013136,3.439410,-3.619436,-0.028465,3.711303,5.607990,1.597405,-6.408654,-2.760015,-9.873929,-4.792887,-0.453397,-3.099833,-2.551987,-9.935611,-9.066511,-7.874353,-5.770042,4.701694,-8.033702,4.757763,-9.743096,-1.357170,-5.858154,-2.834750,2.860687,-4.504111,-0.442070,6.285521,3.336099,-2.688343,-8.792006,6.263571,3.563578,-2.249509,-8.886982,2.714898,-6.515844,4.835103,-5.210655,7.331586,-5.036591,-1.267699,-1.199134,5.590777,8.699303,2.119609,-2.108702,-3.138893,8.613695,-1.274645,-4.211866,5.119997,6.556227,-3.728105,-7.467334,-6.025776,8.814559,1.160295,-6.321403,-9.802711,5.026717,-0.514900,-1.675899,5.117169,7.352266,3.411729,-4.023759,-2.290507,6.708260,5.116549,4.410989,-4.684886,-5.191174,-7.326144,-1.084273,4.068248,5.703419,-5.195638,-4.235217,5.534576,1.858651,-9.614389,0.394874,7.147237,1.732110,-5.374448,-4.287223,1.585998,0.566039,-1.395308,-3.872490,1.786834,7.557969,-6.900582,4.401648,4.440029,-6.409201,-0.826601,-0.263792,3.826712,2.110235,-2.677982,-1.905062,-7.699247,-4.074442,-8.164908,-7.467079,-3.115075,4.161485,-6.357575,-2.490362,4.841831,8.402950,6.461246,5.221127,1.144254,-5.561858,3.787517,5.255492,-2.600011,-0.832890,3.450176,-0.821030,-7.455047,-6.364720,5.973416,-1.840539,1.196303,-3.858014,8.488509,7.848565,-0.598715,2.500102,1.748909,-0.601065,-3.419493,-8.839992,1.895566,6.673494,-2.124054,-1.878430,-1.951634,-2.946820,-5.497651,-9.181495,-3.757742,-5.670765,-9.673869,-9.333999,6.168526,0.654904,3.433046,9.780093,4.633030,-5.486765,-1.704396,4.001261,8.375704,-7.345627,-6.021642,-1.488332,3.177784,-0.886061,-3.762248,7.285894,8.484045,8.335030,-7.827756,8.734795,2.951013,1.172365,9.656009,-7.427385,-2.505649,-0.671415,-0.704472,9.152670,-6.669227,8.222973,4.776036,-1.236904,2.829148,4.594528,-0.149409,3.929724,9.201234,4.616294,2.876993,8.437531,-0.223225,7.576792,-2.030033,-9.333294,-6.690083,6.935455,-7.839537,-6.307951,7.849261,2.105960,-6.863795,5.426724,0.016177,-9.096900,7.069759,-4.154877,-4.857260,-0.586868,0.964455,2.880748,-5.645310,8.754432,-7.703769,-6.883254,0.118417,7.379245,7.423072,3.845889,9.558175,9.262914,-3.898241,-2.783225,6.292635,7.930188,-7.534621,-2.305355,-1.076802,3.530863,2.943454,-8.628091,-9.184605,0.978542,8.302539,-3.904995,-5.410387,9.948267,-6.300461,8.198623,-3.996784,-0.710881,5.003681,0.401567,-1.108333,-4.678799,-8.944870,-8.988214,-3.816939,-5.007564,8.599725,-5.920063,8.889263,-1.874412,-6.552944,5.085881,-6.435725,1.695966,0.390811,2.707898,8.737470,8.394646,3.891865,-9.927040,8.434728,0.452446,-4.591377,4.669875,6.153804,0.714863,4.795247,-6.728365,-2.700095,-9.397447,-4.736847,7.599893,4.105599,0.107601,-0.874949,7.140643,8.648067,-7.703472,-7.004602,9.804590,1.068486,6.941512,8.389941,9.307620,6.463341,6.427882,5.123905,-3.866562,-8.829757,7.864801,7.779404,-5.714695,6.103959,-1.059856,-1.710671,3.155983,-5.141839,8.445852,-8.463838,8.735955,-8.789071,4.930255,4.350858,-4.789355,-0.075011,7.085225,-2.428285,-8.614394,-0.422299,-4.710454,-9.771161,1.728500,-1.384632,-5.966157,1.193185,2.389609,0.732144,3.227794,-7.666944,-0.139486,-3.903360,-7.260132,8.876819,-0.456340,-2.983761,3.263423,9.799412,9.344956,8.215329,-1.434269,-5.420920,-3.365790,0.749999,-7.129528,8.904692,-6.659302,-3.003337,6.390878,7.124432,-1.883427,-8.695550,-3.149119,-9.831632,9.909323,2.412800,-9.406563,8.210164,2.080283,-9.168163,-1.721004,-8.914951,3.684580,-7.847386,8.049769,7.864813,6.777310,6.340484,5.828636,4.451650,1.891555,-1.401566,-4.343864,-9.455478,-2.655082,-5.248209,-2.399439,4.887221,0.647853,-2.269783,7.891097,-8.909393,7.432728,-7.404524,8.480657,-9.689964,4.470694,-0.698650,-3.548643,3.200918,-6.008247,-7.713516,3.244741,-4.463527,5.567575,9.104870,-6.586755,0.857338,6.400156,-2.943788,3.068411,4.014422,-4.650879,9.396645,-7.385769,4.693626,-3.961033,8.303976,-6.838745,-4.549488,1.106596,-6.140215,-3.493211,3.324609,-0.233425,-2.749827,-2.715037,-9.873543,-6.891548,-2.860759,-7.189090,6.389055,0.124459,-1.863185,-3.684659,4.787194,-7.355174,-9.999106,5.440886,-1.985125,2.138314,1.876807,-1.281386,-3.581629,1.212541,7.604409,3.224518,-2.952813,-9.927042,-3.345655,-4.453799,-4.189216,9.407858,3.745580,-4.655848,-2.080904,-9.188980,-4.068499,4.775113,3.713538,8.447564,4.565903,7.187247,3.130593,-3.246496,2.342460,1.252454,-4.117901,-1.112861,8.816834,7.138468,-4.890930,1.233213,2.091240,-8.876476,-6.901212,2.791653,-3.857789,3.576241,-5.357730,9.214824,-6.986556,2.628793,0.778461,-1.088546,0.615435,5.797317,-0.884325,-0.071967,1.827658,-7.431919,-2.948760,6.670554,0.575219,-9.360797,3.961373,4.035929,-1.594141,-5.760912,-6.139094,-6.013690,-4.880089,6.926169,-5.864656,-8.127266,-0.012034,2.148980,5.451591,8.896149,-8.376639,-8.259943,0.025925,7.319037,8.700952,-8.806902,9.986920,5.969354,-0.754820,-7.345293,-1.653273,-7.500495,0.988144,2.350020,0.187625,1.302549,-8.302558,4.669591,7.112383,9.580179,-9.569344,-9.386256,-8.271580,6.493049,2.107469,8.599222,5.796359,-0.352582,-5.626072,4.651228,7.649947,7.386326,-3.010606,1.890147,4.829928,-1.080499,-4.321475], dtype = "float32")#candidate|1876|(1638,)|const|float32
call_1875 = relay.TupleGetItem(func_1116_call(relay.reshape(const_1876.astype('float32'), [13, 9, 14])), 0)
call_1877 = relay.TupleGetItem(func_1118_call(relay.reshape(const_1876.astype('float32'), [13, 9, 14])), 0)
uop_1878 = relay.sin(call_1870.astype('float32')) # shape=(16, 1, 4)
uop_1880 = relay.sin(call_1871.astype('float32')) # shape=(16, 1, 4)
func_501_call = mod.get_global_var('func_501')
func_505_call = mutated_mod.get_global_var('func_505')
var_1900 = relay.var("var_1900", dtype = "float64", shape = (105,))#candidate|1900|(105,)|var|float64
var_1901 = relay.var("var_1901", dtype = "int8", shape = (364,))#candidate|1901|(364,)|var|int8
var_1902 = relay.var("var_1902", dtype = "float64", shape = (1320,))#candidate|1902|(1320,)|var|float64
call_1899 = relay.TupleGetItem(func_501_call(relay.reshape(var_1900.astype('float64'), [3, 7, 5]), relay.reshape(var_1901.astype('int8'), [364,]), relay.reshape(var_1902.astype('float64'), [1320,]), ), 4)
call_1903 = relay.TupleGetItem(func_505_call(relay.reshape(var_1900.astype('float64'), [3, 7, 5]), relay.reshape(var_1901.astype('int8'), [364,]), relay.reshape(var_1902.astype('float64'), [1320,]), ), 4)
uop_1914 = relay.exp(uop_1878.astype('float32')) # shape=(16, 1, 4)
uop_1916 = relay.exp(uop_1880.astype('float32')) # shape=(16, 1, 4)
output = relay.Tuple([call_1865,call_1875,const_1876,call_1899,var_1900,var_1901,var_1902,uop_1914,])
output2 = relay.Tuple([call_1866,call_1877,const_1876,call_1903,var_1900,var_1901,var_1902,uop_1916,])
func_1918 = relay.Function([var_1900,var_1901,var_1902,], output)
mod['func_1918'] = func_1918
mod = relay.transform.InferType()(mod)
mutated_mod['func_1918'] = func_1918
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1918_call = mutated_mod.get_global_var('func_1918')
var_1920 = relay.var("var_1920", dtype = "float64", shape = (105,))#candidate|1920|(105,)|var|float64
var_1921 = relay.var("var_1921", dtype = "int8", shape = (364,))#candidate|1921|(364,)|var|int8
var_1922 = relay.var("var_1922", dtype = "float64", shape = (1320,))#candidate|1922|(1320,)|var|float64
call_1919 = func_1918_call(var_1920,var_1921,var_1922,)
output = call_1919
func_1923 = relay.Function([var_1920,var_1921,var_1922,], output)
mutated_mod['func_1923'] = func_1923
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1837_call = mod.get_global_var('func_1837')
func_1839_call = mutated_mod.get_global_var('func_1839')
call_1932 = func_1837_call()
call_1933 = func_1837_call()
func_141_call = mod.get_global_var('func_141')
func_144_call = mutated_mod.get_global_var('func_144')
const_1945 = relay.const([-3.041658,-7.809974,-9.506894,9.127213,-6.211090,5.236284,-3.248805,9.401122,7.647937,0.853055,-9.739753,-5.805593,-9.932202,-5.638346,-9.372154,9.758679,3.915158,-1.982216,-2.958445,2.308172,9.696051,-2.378910,-3.398496,-5.189534,-5.594406,2.376373,-4.323078,-4.974004,5.113471,-0.692022,-1.602784,7.101869,5.886053,3.411395,2.468108,-2.301263,7.880627,4.041576,-1.293070,3.701626,5.387689,7.993110,3.178550,9.164725,-9.662848,-3.967509,5.642389,-5.824386,-7.557377,-2.649159,-2.429076,-2.395876,9.301557,2.399994,4.904631,-0.617611,-5.708477,-2.837228,-5.034851,-3.545449,4.534180,5.132674,-4.561406,3.889075,6.817642,7.122705,0.961745,5.694322,2.287328,-1.706076,1.087605,8.648146,9.238133,1.791005,2.223461,-6.928694,3.734916,-9.578824,-8.520688,-4.449849,9.361184,3.506854,9.521367,-0.491889,-6.601589,2.173330,8.618585,0.091833,4.523813,-6.072648,-7.543116,0.144279,-1.392029,-9.797016,-2.441443,-6.877084,-9.037912,-9.807823,-3.383696,-6.269852,2.957268,4.793429,-5.034305,0.922514,9.673580,9.571324,8.880400,9.032762,-2.320421,-0.268588,-0.697784,-9.590330,-3.294399,-5.427706,5.224269,3.843343,8.253251,-1.529027,7.583748,1.940770,1.909851,6.945849,3.200224,4.129191,-6.228870,-2.405835,-0.081959,4.725571,6.677841,-5.235478,-7.047057,-3.289009,-0.626088,9.285703,-0.345947,-7.104967,2.187533,-7.725086,3.872143,-0.150569,3.935653,-3.327337,-8.314488,7.371244,-9.127089,-5.052613,5.777177,-1.627331,9.860271,-1.691501,-7.371789,-8.028035,-8.160100,-2.678628,-6.192444,8.027134,-5.201011,2.869322,7.383250,-2.919041,-3.343392,-3.944521,5.593927,0.155191,-4.134911,0.663970,9.327183,2.660272], dtype = "float32")#candidate|1945|(168,)|const|float32
call_1944 = func_141_call(relay.reshape(const_1945.astype('float32'), [4, 3, 14]), relay.reshape(const_1945.astype('float32'), [4, 3, 14]), )
call_1946 = func_141_call(relay.reshape(const_1945.astype('float32'), [4, 3, 14]), relay.reshape(const_1945.astype('float32'), [4, 3, 14]), )
func_141_call = mod.get_global_var('func_141')
func_144_call = mutated_mod.get_global_var('func_144')
call_1956 = func_141_call(relay.reshape(call_1944.astype('float32'), [4, 3, 14]), relay.reshape(call_1944.astype('float32'), [4, 3, 14]), )
call_1957 = func_141_call(relay.reshape(call_1944.astype('float32'), [4, 3, 14]), relay.reshape(call_1944.astype('float32'), [4, 3, 14]), )
func_1918_call = mod.get_global_var('func_1918')
func_1923_call = mutated_mod.get_global_var('func_1923')
var_1960 = relay.var("var_1960", dtype = "float64", shape = (105,))#candidate|1960|(105,)|var|float64
const_1961 = relay.const([[10,-6,2,2,-10,-9,-6,-6,9,-5,-8,10,-9,8,2,-10,2,7,-2,6,-9,-5,-5,2,-6,8,1,-3,-1,-8,-3,-5,6,8,2,4,-10,-6,7,-10,-5,7,6,-8,-5,10,-7,-2,9,-3,-8,4],[-5,7,-10,-6,-5,3,-7,8,7,9,-5,7,2,6,-6,-10,-5,-4,5,-10,-5,4,3,-1,2,-4,-10,10,2,6,10,-10,4,-10,6,-9,-6,-2,-5,-9,4,3,-6,-7,-10,-8,-10,7,-4,1,10,10],[1,5,6,4,-9,3,-9,-6,7,3,-4,-9,9,8,-8,-3,10,-6,2,-6,6,-6,4,-7,-8,6,1,10,-5,-7,-7,-5,-8,5,2,1,-5,-2,1,-9,10,-10,-5,8,7,5,6,2,3,-4,-3,3],[-5,6,-6,6,-2,-6,-7,7,10,9,-3,1,-10,-1,1,-10,10,-2,-1,-2,-5,2,-3,-5,4,-2,-4,-5,8,-9,1,-5,3,7,6,-9,-8,-2,-1,-5,-10,3,9,-10,5,8,-9,7,2,8,-1,-10],[1,9,8,8,-2,4,7,10,5,8,-1,-6,8,1,-4,-10,1,-6,5,9,-2,-1,-6,3,-9,3,-7,-2,-6,8,-4,-4,10,-5,1,4,-4,-6,-6,-2,-1,6,8,5,-1,-4,1,-1,8,-6,10,4],[-7,-6,9,-9,-3,-10,-10,-4,8,-7,6,10,4,2,-7,9,9,6,-5,8,-9,10,-5,-2,2,2,7,-3,7,6,4,-8,3,10,-1,6,9,9,10,-7,-3,4,10,-3,-3,-2,6,-9,-6,-9,-7,6],[2,-10,-9,7,-5,-1,8,-3,-3,-7,7,-8,-3,1,-3,-8,2,-7,4,-2,5,-5,5,4,-6,-7,-7,7,3,1,-7,-8,4,10,9,8,-5,-9,-2,-8,-5,1,-9,1,-8,-5,9,4,9,3,7,-6]], dtype = "int8")#candidate|1961|(7, 52)|const|int8
var_1962 = relay.var("var_1962", dtype = "float64", shape = (1320,))#candidate|1962|(1320,)|var|float64
call_1959 = relay.TupleGetItem(func_1918_call(relay.reshape(var_1960.astype('float64'), [105,]), relay.reshape(const_1961.astype('int8'), [364,]), relay.reshape(var_1962.astype('float64'), [1320,]), ), 6)
call_1963 = relay.TupleGetItem(func_1923_call(relay.reshape(var_1960.astype('float64'), [105,]), relay.reshape(const_1961.astype('int8'), [364,]), relay.reshape(var_1962.astype('float64'), [1320,]), ), 6)
output = relay.Tuple([call_1932,call_1944,const_1945,call_1956,call_1959,var_1960,const_1961,var_1962,])
output2 = relay.Tuple([call_1933,call_1946,const_1945,call_1957,call_1963,var_1960,const_1961,var_1962,])
func_1973 = relay.Function([var_1960,var_1962,], output)
mod['func_1973'] = func_1973
mod = relay.transform.InferType()(mod)
var_1974 = relay.var("var_1974", dtype = "float64", shape = (105,))#candidate|1974|(105,)|var|float64
var_1975 = relay.var("var_1975", dtype = "float64", shape = (1320,))#candidate|1975|(1320,)|var|float64
output = func_1973(var_1974,var_1975,)
func_1976 = relay.Function([var_1974,var_1975,], output)
mutated_mod['func_1976'] = func_1976
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1626_call = mod.get_global_var('func_1626')
func_1628_call = mutated_mod.get_global_var('func_1628')
call_1989 = relay.TupleGetItem(func_1626_call(), 0)
call_1990 = relay.TupleGetItem(func_1628_call(), 0)
func_1645_call = mod.get_global_var('func_1645')
func_1647_call = mutated_mod.get_global_var('func_1647')
call_1991 = func_1645_call()
call_1992 = func_1645_call()
func_1645_call = mod.get_global_var('func_1645')
func_1647_call = mutated_mod.get_global_var('func_1647')
call_1999 = func_1645_call()
call_2000 = func_1645_call()
func_1918_call = mod.get_global_var('func_1918')
func_1923_call = mutated_mod.get_global_var('func_1923')
var_2003 = relay.var("var_2003", dtype = "float64", shape = (105,))#candidate|2003|(105,)|var|float64
const_2004 = relay.const([[8,7,-9,-6],[-7,5,4,8],[5,9,-4,9],[4,-6,5,-1],[-5,10,9,3],[10,-8,1,-10],[-3,6,5,-7],[-1,3,-9,8],[3,10,-5,7],[-2,-10,3,9],[10,5,5,6],[5,1,-4,-9],[-6,-8,-3,-8],[10,-10,-9,10],[8,-5,-9,8],[-10,9,-5,-8],[9,-4,1,-9],[-10,-5,-2,8],[-2,3,-4,5],[-10,-8,3,8],[4,-6,5,-7],[6,6,8,-8],[-7,-4,-1,-6],[3,8,2,8],[9,2,-9,1],[-2,5,-10,-2],[3,-1,7,7],[-3,-6,10,-2],[9,-3,4,6],[-10,6,6,-1],[6,-5,-9,-4],[9,7,5,-8],[-5,3,-6,5],[-1,-8,-1,-6],[-10,1,-7,-10],[-5,6,6,4],[-7,-1,7,-9],[-7,7,-7,-6],[-8,-6,3,1],[-5,-8,1,4],[-1,10,-3,8],[7,9,-10,1],[-3,3,5,4],[1,2,-3,1],[-3,2,2,-7],[9,5,2,-9],[4,-1,-6,-10],[-4,-8,-1,3],[-9,-4,-6,2],[-7,-5,2,4],[-4,7,-9,-6],[1,1,2,-8],[8,-2,2,-10],[-10,10,8,9],[8,-3,-3,1],[10,6,6,3],[-7,-8,2,10],[2,-5,3,-4],[10,-9,6,-4],[1,-8,-3,1],[-9,-9,-9,-2],[-6,-3,1,-1],[5,-1,-9,9],[5,7,10,10],[-8,-8,-7,-2],[-7,1,4,-6],[-1,2,-4,-9],[8,-10,5,8],[6,-2,8,5],[9,-5,9,2],[10,1,-4,-4],[-8,1,-4,-9],[-8,-3,-5,6],[-8,6,2,-9],[-3,8,-1,-10],[-9,-2,-3,-3],[-10,-9,-7,-10],[4,2,6,-8],[-2,-6,9,9],[8,-10,2,2],[-10,-8,6,3],[6,7,9,-2],[-2,-1,6,-10],[3,3,-3,-9],[8,1,-7,-7],[4,-6,-9,-3],[9,-3,-5,-7],[-3,6,-9,-9],[4,2,-8,6],[-3,4,-3,3],[10,6,1,8]], dtype = "int8")#candidate|2004|(91, 4)|const|int8
var_2005 = relay.var("var_2005", dtype = "float64", shape = (1320,))#candidate|2005|(1320,)|var|float64
call_2002 = relay.TupleGetItem(func_1918_call(relay.reshape(var_2003.astype('float64'), [105,]), relay.reshape(const_2004.astype('int8'), [364,]), relay.reshape(var_2005.astype('float64'), [1320,]), ), 5)
call_2006 = relay.TupleGetItem(func_1923_call(relay.reshape(var_2003.astype('float64'), [105,]), relay.reshape(const_2004.astype('int8'), [364,]), relay.reshape(var_2005.astype('float64'), [1320,]), ), 5)
var_2007 = relay.var("var_2007", dtype = "int8", shape = (91, 4))#candidate|2007|(91, 4)|var|int8
bop_2008 = relay.logical_and(const_2004.astype('bool'), relay.reshape(var_2007.astype('bool'), relay.shape_of(const_2004))) # shape=(91, 4)
uop_2028 = relay.atanh(call_1989.astype('float32')) # shape=(16, 1, 4)
uop_2030 = relay.atanh(call_1990.astype('float32')) # shape=(16, 1, 4)
func_1837_call = mod.get_global_var('func_1837')
func_1839_call = mutated_mod.get_global_var('func_1839')
call_2061 = func_1837_call()
call_2062 = func_1837_call()
func_1783_call = mod.get_global_var('func_1783')
func_1785_call = mutated_mod.get_global_var('func_1785')
call_2065 = func_1783_call()
call_2066 = func_1783_call()
bop_2067 = relay.right_shift(uop_2028.astype('int32'), relay.reshape(call_1999.astype('int32'), relay.shape_of(uop_2028))) # shape=(16, 1, 4)
bop_2070 = relay.right_shift(uop_2030.astype('int32'), relay.reshape(call_2000.astype('int32'), relay.shape_of(uop_2030))) # shape=(16, 1, 4)
output = relay.Tuple([call_1991,call_2002,var_2003,var_2005,bop_2008,call_2061,call_2065,bop_2067,])
output2 = relay.Tuple([call_1992,call_2006,var_2003,var_2005,bop_2008,call_2062,call_2066,bop_2070,])
func_2075 = relay.Function([var_2003,var_2005,var_2007,], output)
mod['func_2075'] = func_2075
mod = relay.transform.InferType()(mod)
mutated_mod['func_2075'] = func_2075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2075_call = mutated_mod.get_global_var('func_2075')
var_2077 = relay.var("var_2077", dtype = "float64", shape = (105,))#candidate|2077|(105,)|var|float64
var_2078 = relay.var("var_2078", dtype = "float64", shape = (1320,))#candidate|2078|(1320,)|var|float64
var_2079 = relay.var("var_2079", dtype = "int8", shape = (91, 4))#candidate|2079|(91, 4)|var|int8
call_2076 = func_2075_call(var_2077,var_2078,var_2079,)
output = call_2076
func_2080 = relay.Function([var_2077,var_2078,var_2079,], output)
mutated_mod['func_2080'] = func_2080
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1615_call = mod.get_global_var('func_1615')
func_1616_call = mutated_mod.get_global_var('func_1616')
call_2089 = func_1615_call()
call_2090 = func_1615_call()
output = relay.Tuple([call_2089,])
output2 = relay.Tuple([call_2090,])
func_2094 = relay.Function([], output)
mod['func_2094'] = func_2094
mod = relay.transform.InferType()(mod)
output = func_2094()
func_2095 = relay.Function([], output)
mutated_mod['func_2095'] = func_2095
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1645_call = mod.get_global_var('func_1645')
func_1647_call = mutated_mod.get_global_var('func_1647')
call_2119 = func_1645_call()
call_2120 = func_1645_call()
output = call_2119
output2 = call_2120
func_2127 = relay.Function([], output)
mod['func_2127'] = func_2127
mod = relay.transform.InferType()(mod)
output = func_2127()
func_2128 = relay.Function([], output)
mutated_mod['func_2128'] = func_2128
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1645_call = mod.get_global_var('func_1645')
func_1647_call = mutated_mod.get_global_var('func_1647')
call_2129 = func_1645_call()
call_2130 = func_1645_call()
var_2131 = relay.var("var_2131", dtype = "float32", shape = (16, 4, 4))#candidate|2131|(16, 4, 4)|var|float32
bop_2132 = relay.subtract(call_2129.astype('float32'), var_2131.astype('float32')) # shape=(16, 4, 4)
bop_2135 = relay.subtract(call_2130.astype('float32'), var_2131.astype('float32')) # shape=(16, 4, 4)
var_2139 = relay.var("var_2139", dtype = "float32", shape = (16, 8, 4))#candidate|2139|(16, 8, 4)|var|float32
bop_2140 = relay.right_shift(call_2129.astype('uint32'), var_2139.astype('uint32')) # shape=(16, 8, 4)
bop_2143 = relay.right_shift(call_2130.astype('uint32'), var_2139.astype('uint32')) # shape=(16, 8, 4)
func_448_call = mod.get_global_var('func_448')
func_452_call = mutated_mod.get_global_var('func_452')
const_2146 = relay.const([-5,5,9,3,-9,-9,5,-2,3,-2,10,8,-6,-2,9,10,-6,-7,10,8,5,4,-7,6,-4,-8,2,4,5,10,-1,-5,7,4,4,-7,-1,10,7,9,-2,-10,5,4,-9,-3,9,1,-1,-3,9,5,-1,8,-1,-1,-6,-9,4,2,-2,-6,-4,-4,2,-2,-9,10,2,-8,-9,-5,-2,7,-10,1,-7,-2,4,7,-5,-6,8,2,8,-4,-3,-1,5,-2,8,-8,8,7,6,-7,-5,-5,3,-4,9,5,6,8,-5,-10,-2,9,8,4,-9,7,6,-6,1,-9,7,4,-1,7,-1,-8,-5,2,2,-1,7,-5,-10,-3,1,1,5,3,8,-1,-7,9,-7,-7,-7,9,6,6,-7,9,10,-7,-7,-2,-10,-1,3,1,3,8,-8,-1,-1,2,-7,-5,3,3,-2,-3,7,1,6,-9,-2,6,-1,4,-7,9,7,10,-6,8,-7,10,8,3,5,-2,6,-7,-6,-9,7,-6,2,4,10,-5,6,-10,-9,6,-2,1,6,-5,8,7,3,-10,3,4,8,10,-9,6,-3,1,5,-3,9,5,-3,-5,-8,-3,10,4,-1,4,7,7,4,-3,-2,-10,-6,10,-9,-8,-3,2,10,-3,-2,-2,-7,-7,9,-2,8,-1,8,6,10,8,4,-5,6,7,5,7,10,-2,7,9,-5,10,4,3,-9,-5,1,-9,-10,-8,-8,4,10,7,10,-3,-6,10,-10,-4,-6,-1,-1,-5,-9,-5,-8,4,-6,7,5,-1,-2,1,-4,10,3,6,-4,-4,-5,-9,-7,5,4,-9,2,9,1,-8,2,6,1,-9,6,-9,10,6,-3,-1,2,7,10,-8,4,7,-5,-3,-4,3,-6,10,4,-3,8,-5,2,4,8,2,-9,-9,-9,-1,5,-2,10,-6,10,3,-3,-6,-2,6,4,1,-6,-8,-5,1], dtype = "int8")#candidate|2146|(364,)|const|int8
call_2145 = func_448_call(relay.reshape(const_2146.astype('int8'), [14, 2, 13]), relay.reshape(const_2146.astype('int8'), [14, 2, 13]), )
call_2147 = func_448_call(relay.reshape(const_2146.astype('int8'), [14, 2, 13]), relay.reshape(const_2146.astype('int8'), [14, 2, 13]), )
output = relay.Tuple([bop_2132,bop_2140,call_2145,const_2146,])
output2 = relay.Tuple([bop_2135,bop_2143,call_2147,const_2146,])
func_2159 = relay.Function([var_2131,var_2139,], output)
mod['func_2159'] = func_2159
mod = relay.transform.InferType()(mod)
mutated_mod['func_2159'] = func_2159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2159_call = mutated_mod.get_global_var('func_2159')
var_2161 = relay.var("var_2161", dtype = "float32", shape = (16, 4, 4))#candidate|2161|(16, 4, 4)|var|float32
var_2162 = relay.var("var_2162", dtype = "float32", shape = (16, 8, 4))#candidate|2162|(16, 8, 4)|var|float32
call_2160 = func_2159_call(var_2161,var_2162,)
output = call_2160
func_2163 = relay.Function([var_2161,var_2162,], output)
mutated_mod['func_2163'] = func_2163
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1645_call = mod.get_global_var('func_1645')
func_1647_call = mutated_mod.get_global_var('func_1647')
call_2165 = func_1645_call()
call_2166 = func_1645_call()
uop_2169 = relay.atan(call_2165.astype('float32')) # shape=(16, 1, 4)
uop_2171 = relay.atan(call_2166.astype('float32')) # shape=(16, 1, 4)
func_1837_call = mod.get_global_var('func_1837')
func_1839_call = mutated_mod.get_global_var('func_1839')
call_2173 = func_1837_call()
call_2174 = func_1837_call()
func_1918_call = mod.get_global_var('func_1918')
func_1923_call = mutated_mod.get_global_var('func_1923')
var_2178 = relay.var("var_2178", dtype = "float64", shape = (105,))#candidate|2178|(105,)|var|float64
const_2179 = relay.const([[6,3],[-7,6],[-9,2],[-6,3],[-3,1],[-4,-6],[1,-5],[-3,-5],[7,8],[-5,4],[1,-7],[5,3],[10,3],[6,-9],[1,-4],[-9,3],[8,-9],[-10,-1],[1,9],[8,5],[9,-2],[-7,-2],[4,-3],[8,8],[7,-3],[2,-7],[-1,-10],[-10,7],[-3,4],[9,-8],[-3,-6],[7,9],[3,3],[3,10],[-8,-3],[5,8],[8,-10],[10,-1],[-9,6],[-1,1],[4,-1],[4,4],[-2,-2],[6,7],[-4,2],[4,-8],[10,-10],[8,9],[7,-2],[-1,-5],[-1,2],[-7,-5],[3,-6],[3,-10],[8,6],[-3,-10],[4,3],[6,2],[7,9],[10,-6],[3,2],[5,-9],[-3,-1],[-9,-1],[2,-10],[-4,-8],[-6,-4],[10,1],[-9,9],[6,9],[2,-10],[-8,6],[4,8],[10,-8],[2,-5],[1,6],[-1,-6],[-3,-10],[4,10],[2,-3],[5,6],[-7,2],[-8,2],[2,-1],[-4,-4],[3,-6],[6,2],[3,4],[-9,1],[-7,-7],[-1,4],[8,-8],[6,1],[-6,10],[-2,-9],[8,-1],[4,-2],[9,5],[10,-3],[9,-3],[5,-6],[-3,-4],[9,-10],[-7,-3],[-6,-3],[6,-5],[1,5],[3,-7],[-3,1],[9,3],[-9,4],[-3,-10],[-2,4],[-2,2],[-8,3],[6,10],[-3,7],[6,-2],[2,-4],[3,-6],[6,-2],[-8,2],[-5,7],[-7,3],[8,3],[-2,1],[-9,1],[-9,-6],[6,3],[-4,1],[-10,-1],[7,-6],[-7,-9],[4,-3],[4,-6],[10,6],[-1,1],[4,7],[2,2],[3,4],[-8,9],[4,-6],[7,-1],[-5,-2],[-8,4],[-6,-5],[-8,-8],[4,10],[-7,-4],[2,-7],[-2,-7],[-7,-3],[-3,6],[-5,-8],[9,-5],[9,7],[-6,-5],[2,9],[-4,9],[5,-6],[-9,10],[5,-9],[5,9],[7,10],[-8,-4],[-10,-4],[-7,-6],[7,5],[-6,9],[2,-10],[-10,-2],[7,-2],[10,-7],[7,5],[-4,-10],[-6,-6],[9,-6],[3,-9],[6,-2],[5,10],[-10,-6],[-8,-2]], dtype = "int8")#candidate|2179|(182, 2)|const|int8
const_2180 = relay.const([1.506388,-0.651955,1.172426,5.783298,6.466634,-8.435915,8.097060,-7.718186,2.677075,7.330767,-8.355698,-4.373025,5.622056,-2.682498,-2.465237,-1.012581,6.904862,-3.050891,-0.917204,-2.525204,-6.159408,0.468823,-7.765346,9.059916,-1.309368,8.863959,-9.804099,-8.974450,-2.483202,-7.226507,4.868678,3.705414,-1.894594,8.632115,6.827928,-8.010339,-3.677688,5.711533,-5.847609,3.203237,4.833761,7.091324,-3.602243,8.515994,-9.572732,6.359792,-3.067998,5.303527,-9.602276,-0.636658,-3.959297,-5.315129,-8.310837,8.282516,-7.499408,-3.444198,-3.391407,-7.408094,6.990116,6.223437,6.816673,2.489497,7.626682,-5.773635,8.978999,9.464832,-4.681872,3.210751,6.220746,9.172852,9.048092,-8.252451,1.701559,-8.009561,-5.396479,2.080649,-9.854938,-7.962029,1.304295,9.905830,6.278091,-5.633593,-2.706581,-1.576891,9.646092,-3.340336,9.740244,-2.070016,3.020775,4.651988,-4.976479,1.146409,7.111341,4.915234,0.668950,-0.480860,2.091786,-6.337821,-1.939767,-3.957117,-9.577678,-6.060162,0.514881,-8.380068,6.128309,-6.324200,-2.575092,-7.153272,4.996793,-3.878891,-9.435153,7.068671,-7.802354,-9.311438,5.882414,-6.419934,2.399814,3.155565,7.302858,6.457483,-6.912767,-2.935782,0.372806,-5.455503,-3.549175,4.165517,2.400712,4.324570,-3.640114,-5.811008,-5.854222,4.807896,5.911984,-0.711608,5.652559,4.895843,6.389339,-5.034948,-2.668921,-4.277511,-1.517583,-5.811796,-1.135654,7.224478,8.948498,-3.246183,-5.486302,1.793019,7.287192,-4.399663,3.570892,-1.162818,3.921811,5.425014,3.254674,2.940218,-2.856617,-3.936156,1.893896,6.753128,4.396571,-7.328827,-9.042337,-3.403415,4.902383,-4.898354,-9.510295,8.050227,1.452742,-5.962706,-4.578909,-9.272476,2.578977,-6.904643,-9.544792,0.971663,1.431109,9.337279,3.834062,2.179952,-9.483338,7.182516,-3.874499,6.310269,7.874333,3.848642,6.335168,-0.779594,-1.752193,6.191536,1.301012,-3.250779,-3.852935,-0.976133,5.346248,-9.917115,1.148270,3.521067,-2.028337,7.556653,-0.338279,-0.078767,8.325833,-5.696223,4.310647,-1.480461,-4.020964,7.710261,8.299068,-5.375275,-4.030628,-7.747304,-9.079893,6.737796,-0.457952,-7.370461,9.935363,-3.543524,-3.507097,-0.560922,-2.305049,-2.031533,-2.607294,7.811762,2.127832,-3.838286,-3.602846,4.548668,-0.194142,-2.242905,0.425491,8.005697,8.529627,3.011663,-7.025943,4.745901,0.147171,5.310974,4.430845,3.825500,-7.647486,-2.635992,-1.184076,7.012992,5.310855,-5.844614,3.324343,3.230564,9.015617,-3.034664,5.752498,3.609904,8.989346,-4.393817,5.674892,9.627409,7.245839,7.139615,6.204260,3.011930,-6.804536,4.259933,3.057400,-3.725603,-4.217033,0.597532,-3.896133,-0.128754,5.554675,-9.640119,-7.021894,4.199889,-1.494309,4.626668,2.953929,-3.588524,-6.389583,7.243054,-8.006295,9.891949,-9.822553,-8.732030,5.284544,-2.694156,3.280057,1.724343,-1.129557,-5.245841,4.038731,-4.037689,-5.881671,-7.301690,0.413292,-3.730675,3.774988,-1.041526,-0.040035,-6.519303,0.881735,6.050163,-1.698481,-4.748981,9.209169,1.874543,-7.074915,5.626249,-6.271575,-7.787747,-3.103482,6.987664,-3.237880,4.875867,3.164924,-2.845237,6.522388,7.819727,-4.024668,-1.019301,-6.567602,6.551835,-7.913001,0.831669,-9.025010,-2.194614,2.634321,4.765195,5.116678,-3.237350,-3.485585,8.606795,-5.858110,3.421002,-6.937691,-2.761902,1.343430,7.632624,9.148406,-1.828857,-9.490760,-6.962189,9.468622,5.055066,-1.752395,8.543134,-8.942519,-5.732802,1.803620,-3.000362,-9.529095,6.941352,-2.954924,1.588709,8.064170,6.324779,-6.993165,9.484203,2.771008,-6.756434,6.189402,1.781989,-7.437744,-6.994559,1.456427,0.174975,-2.106686,-1.224830,9.312809,-0.791025,1.367522,7.449870,3.584730,4.375091,4.151767,-0.250603,6.388854,7.807593,-5.012026,-7.885864,-4.939483,1.860653,-6.830710,2.524105,6.405602,-1.773595,5.393230,-3.179173,6.640420,-2.141261,3.133164,4.343145,-4.631489,-6.016319,-5.739721,-6.580170,-9.333727,8.037765,7.002548,-2.123295,-4.970371,-7.527714,-2.285094,-7.114124,-8.528857,2.055640,-1.990143,7.319860,6.372969,8.113859,-7.844101,-0.916556,9.805670,4.933906,-5.882857,7.576996,-0.997418,-2.863078,-2.136411,-1.028722,6.678648,-2.057576,-0.226219,-9.191557,5.888570,-1.526006,-1.666210,-5.830233,-4.606162,-4.027792,4.027970,-2.703401,4.315785,8.697892,6.497316,7.714440,2.329750,-8.816999,5.802959,8.960838,-4.328662,-7.869550,-4.389493,-4.668711,-2.697294,1.807354,-9.753530,5.703762,-9.473188,2.459131,2.376890,5.804173,-6.249480,-3.153956,-2.046152,-4.586456,4.255160,7.474796,2.777065,2.012287,0.647990,-8.137607,-0.101554,9.474050,-3.577560,-7.815783,5.357953,-6.651036,-1.660323,0.270891,-4.783042,1.886720,-3.337253,0.088413,6.561740,1.248693,2.888330,-0.491662,-9.396013,-0.957869,1.981202,-7.716591,-7.598945,-1.418994,5.819030,-1.487737,-0.527605,-0.241150,-1.331792,-5.917342,-8.026456,-5.471822,8.802211,7.496797,3.487432,-1.696090,-7.869539,7.351549,3.127513,4.914642,-6.464205,-9.119202,-5.848094,9.779457,-4.652371,-3.545266,-0.322416,-0.903437,5.193844,5.482073,-3.238354,1.629954,-8.139271,8.748921,4.910284,-5.067280,-7.744038,-8.212335,5.724920,-4.077587,6.511304,-4.649889,4.553282,-0.261872,-5.138097,6.059875,9.608549,-4.211848,-2.648151,-8.618752,-8.442994,3.142683,8.501424,7.948990,5.912545,7.501821,-2.566547,-1.064001,-2.792423,6.047655,-2.686234,8.867988,9.494412,2.295915,-4.157827,4.416658,6.193196,9.260077,-5.861621,5.218919,-6.678832,6.401409,0.378075,2.801518,-4.044118,-1.125339,2.184570,-2.457595,9.867110,-8.996250,9.633003,7.096972,-9.781731,-2.242651,4.629790,9.399627,-1.247738,9.067136,-7.276313,3.358844,6.295766,-3.432676,-8.894171,2.140101,-9.562108,3.179615,-7.032594,-8.713888,2.427073,2.834848,2.070056,2.260898,4.904753,1.570568,1.278246,-0.430538,-4.540543,9.672125,-9.462189,3.248214,3.403650,-7.807066,6.043819,-7.744933,6.916406,4.589738,-6.068715,-9.092241,8.039777,-7.329860,6.305991,7.035911,9.339372,-5.270515,-8.548296,-3.019747,-9.762115,1.863174,-0.029052,-3.959866,4.354690,-8.603350,-2.810599,-3.749105,-7.439874,-3.601271,7.194788,1.548642,2.518298,-0.798453,7.870701,3.648465,-9.299881,3.023329,-3.439715,-1.786422,-0.990016,-9.758105,-4.245462,-1.229603,8.710425,-9.183152,8.558266,1.114675,1.195969,-0.978559,-6.159825,-6.951003,-1.670257,5.908680,9.138862,-8.103520,-5.180548,4.304695,9.249891,9.955739,-9.861802,-7.439276,-5.160809,-6.989846,0.027298,-9.600896,-2.597992,-4.049667,8.290409,-9.200782,-6.802442,-6.928819,9.446085,9.613514,0.710710,2.619547,-3.927069,5.235130,7.611194,-2.263707,-8.760015,-5.873914,8.563474,4.549554,0.759054,6.602601,2.396440,-5.934306,5.451923,8.121404,3.392976,8.338661,-4.829256,-0.270409,-0.720115,1.706275,2.868624,-5.539991,-2.660126,6.999599,5.296319,9.383690,-0.021050,0.480007,3.442730,7.445757,8.436203,-9.580256,5.395982,2.627645,7.586261,9.681022,-4.678884,5.665095,6.909645,-8.818875,-0.814584,4.188440,-9.985304,-5.161154,-1.120217,-5.417203,-7.743845,2.989705,6.629492,-9.616395,6.072455,4.476855,8.958994,6.913395,-1.147890,4.521057,6.831262,1.641926,6.168994,-7.053987,1.597500,4.687623,5.267464,-0.419430,8.790593,-2.186529,-3.988145,-8.665680,-8.799834,-8.214004,-0.096826,2.022410,2.723916,8.178380,4.807231,-6.972086,-5.716904,-6.686118,-8.915031,-9.494150,7.120781,9.639864,-9.455456,8.367244,5.852084,1.510677,9.878557,6.840161,-3.639506,4.965732,-1.881138,-6.979813,5.529561,9.757587,1.558457,5.403911,-1.591669,-3.285942,7.327579,7.120521,-8.411590,-1.446306,-0.460770,-5.822405,-0.285403,-9.536395,0.846486,0.712687,8.671181,-0.055782,-8.957577,-8.899324,-0.872075,8.516551,-4.597031,-5.870195,-4.791815,3.354106,3.344072,7.357211,9.065991,-6.393529,-8.482287,-9.618833,-8.194085,4.295048,-7.391994,8.894697,-2.630398,-7.793111,-2.085835,4.276720,6.983827,5.187316,-4.138771,-3.873187,-3.239090,-3.889192,-2.189097,-3.854084,-3.207695,3.165233,2.687447,1.449596,-3.667870,2.234816,6.745621,2.628135,9.465479,3.690941,3.763378,7.653973,-2.618462,-2.502801,-1.193671,-5.337817,-5.671730,-6.490484,-9.122848,-0.317993,1.373412,6.144386,-7.764543,-9.563007,7.801723,-8.728236,2.130543,-9.101437,9.530665,2.149290,-2.193387,-1.764987,7.226085,-5.498334,6.401551,-6.417848,-7.211697,1.267318,-6.267444,-8.579639,6.890858,-6.300959,0.685291,-4.847464,-3.761697,-8.117077,1.506537,9.243217,4.958472,6.010097,-3.314604,-4.751956,3.104004,-9.921592,3.859108,-8.818561,4.669674,4.344390,4.166558,6.587235,7.687594,-9.639831,3.924165,-1.964991,-0.183333,3.195142,9.220930,8.081914,8.441697,0.254567,2.391308,0.926623,-8.489300,7.723231,-1.952925,1.145304,-8.282410,0.140323,-4.583473,8.310652,3.861397,3.752812,-4.421925,4.828939,-1.365040,-5.275898,-9.028029,-5.208912,-9.572134,9.707776,6.283036,0.387885,-0.286373,5.189358,-4.303575,8.454357,0.495690,-7.961092,-3.471217,3.116506,-5.573243,-8.798363,7.336698,-7.361580,-6.001417,-5.354473,-8.667310,3.931921,-8.058549,0.794236,7.210618,-8.335582,-6.510753,-1.939087,5.198706,3.250592,8.344920,-2.963157,4.921345,5.259107,-8.968045,2.315515,7.954313,-3.095986,1.877106,-1.069858,-1.477654,7.062782,5.364859,5.503917,6.920977,9.879824,-4.478576,6.572380,-6.329463,8.919542,-2.760884,3.692605,-7.532640,-5.869531,-7.665220,-8.201560,0.936965,9.560169,-4.892594,5.638962,1.310482,-1.781290,2.918340,7.484818,-4.747192,-5.265552,2.816812,-9.799420,3.989392,9.299675,9.055529,3.319441,3.923153,-2.231092,0.390468,5.420974,-2.539227,6.157040,1.035302,9.908689,7.948117,9.816594,2.157716,-1.556870,-2.313515,-0.866039,-5.138414,-0.428797,-6.103712,4.935518,4.750912,9.561779,-0.055829,1.566741,4.185629,-5.295636,-1.414810,-5.008706,6.967657,1.222585,-5.231180,-1.682074,1.094548,4.981807,0.407914,1.173671,2.143707,-1.900023,2.189441,-9.582390,-0.781260,-6.676380,-3.252183,-6.539677,5.191569,8.621943,-6.084150,-1.676451,-9.420303,3.869046,-6.752021,-0.780499,0.582363,-1.638197,-5.888360,-4.421169,0.939750,-5.076590,4.678497,2.014828,-8.104348,-9.540267,-7.778133,-7.185609,-6.435479,-5.517802,-4.776063,5.358071,3.966716,7.590413,-8.922698,-9.750900,-5.376278,4.618860,-1.743659,-3.955404,8.067859,9.544156,-0.879233,-3.805232,9.991268,7.429980,-5.238833,-9.957068,-0.778867,4.812717,9.203214,-0.773702,-2.111354,4.702858,7.041483,5.351382,-8.185718,-7.565292,-7.018359,-6.387740,-9.604575,-7.052745,-5.658928,-7.974032,-8.997585,8.586573,-4.727441,9.090955,9.095115,7.852599,-3.704318,6.162606,4.949421,6.998010,-5.201116,6.249256,-6.957902,0.249942,-1.265664,6.392888,-2.200119,-1.108926,2.032874,4.827763,-8.173856,4.345035,-1.348515,-4.522614,-5.941180,3.549205,4.840233,0.691515,-8.267643,-6.783468,8.612937,3.222516,-2.000680,-1.670694,7.012170,-6.836610,-7.013528,9.063134,-9.923657,-9.433338,9.606572,3.962037,-9.868248,-8.549949,-7.073258,-5.927380,9.803668,4.746905,9.279972,2.455905,5.537112,0.139144,1.484856,-3.497888,-4.045805,-0.362088,4.441868,-7.985903,6.141211,-4.389322,7.431501,1.597370,9.617074,-1.504431,-3.357719,1.737320,6.567590,5.251588,0.883949,-4.971270,-5.839287,-2.253567,-9.300869,4.850448,7.225835,8.504373,-1.632394,9.711787,6.351953,7.255101,6.864641,-5.997796,8.861301,7.187587,1.518135,-7.253938,6.984358,6.260917,9.653340,4.253229,1.111797,6.434108,9.110495,6.770085,-5.174216,-4.535970,8.168511,-3.358355,-7.235381,-5.112306,4.846381,2.870968,9.470183,-4.068550,2.012020,3.480161,1.869149,2.364465,-0.245060,7.650848,3.673459,-0.952241,-3.427158,2.833985,3.094316,3.638701,-7.990312,8.210267,4.311157,-3.297340,7.582197,1.958666,-7.071860,2.204421,7.594698,2.965817,-2.046793,-7.363445,-1.164659,8.276092,2.633156,-1.544568,2.181112,0.126669,2.511371,8.332665,0.588778,9.144190,4.428392,-5.899424,-0.277110,0.338684,-2.763116,9.365945,3.643815,-4.836213,2.773554,-1.002842,-4.821364,-2.292293,7.223897,-4.218030,-1.595341,-3.256020,-3.423052,2.199988,-5.064419,0.601251,-9.250784,8.034564,4.587617,-5.672315,-7.819643,6.712594,-5.132579,0.679341,5.087999,-4.332977,3.622246,-3.194346,-3.414108,-8.772123,-6.117682,1.995125,3.745113,6.473194,-0.421549,6.242972,-2.417470,9.043022,-4.238788,0.632273,-3.518394,-1.048059,-3.866008,6.695852,-2.908299,-1.677670,2.153382,8.713734,-7.075017,0.041425,-3.357472,-9.118484,7.614464,8.259114,-2.090468,9.380632,-6.175569,-6.132620,-7.895366,9.697496,-2.258379,-0.894593,8.203956,-7.992901,-4.558806,-1.872439,-3.989518,8.962029,-3.667100,-6.713121,6.030184,2.417685,6.689861,3.628416,6.883517,-3.370946,-8.115270,8.761592,-1.896191,7.190692,9.787478,9.415970,-8.636675,1.034779,3.760413,0.153761,-7.865324,-3.600057,0.681877,2.492499,6.267968,-6.823406,-7.569440,4.013732,5.068001,9.573358,3.362206,-4.140432,-9.261035,-7.217365,8.755193,-0.314284,3.619415,0.319764,-8.122220,5.256818,-9.082159,8.653368,-7.946651,2.712115,-3.379173,-1.303058,0.343609,7.691227,5.058280,4.740820,-9.986653,-8.692255,1.605596,-4.800246,-7.521457,3.488732], dtype = "float64")#candidate|2180|(1320,)|const|float64
call_2177 = relay.TupleGetItem(func_1918_call(relay.reshape(var_2178.astype('float64'), [105,]), relay.reshape(const_2179.astype('int8'), [364,]), relay.reshape(const_2180.astype('float64'), [1320,]), ), 5)
call_2181 = relay.TupleGetItem(func_1923_call(relay.reshape(var_2178.astype('float64'), [105,]), relay.reshape(const_2179.astype('int8'), [364,]), relay.reshape(const_2180.astype('float64'), [1320,]), ), 5)
output = relay.Tuple([uop_2169,call_2173,call_2177,var_2178,const_2179,const_2180,])
output2 = relay.Tuple([uop_2171,call_2174,call_2181,var_2178,const_2179,const_2180,])
func_2182 = relay.Function([var_2178,], output)
mod['func_2182'] = func_2182
mod = relay.transform.InferType()(mod)
var_2183 = relay.var("var_2183", dtype = "float64", shape = (105,))#candidate|2183|(105,)|var|float64
output = func_2182(var_2183)
func_2184 = relay.Function([var_2183], output)
mutated_mod['func_2184'] = func_2184
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1615_call = mod.get_global_var('func_1615')
func_1616_call = mutated_mod.get_global_var('func_1616')
call_2228 = func_1615_call()
call_2229 = func_1615_call()
func_2159_call = mod.get_global_var('func_2159')
func_2163_call = mutated_mod.get_global_var('func_2163')
var_2235 = relay.var("var_2235", dtype = "float32", shape = (256,))#candidate|2235|(256,)|var|float32
var_2236 = relay.var("var_2236", dtype = "float32", shape = (512,))#candidate|2236|(512,)|var|float32
call_2234 = relay.TupleGetItem(func_2159_call(relay.reshape(var_2235.astype('float32'), [16, 4, 4]), relay.reshape(var_2236.astype('float32'), [16, 8, 4]), ), 1)
call_2237 = relay.TupleGetItem(func_2163_call(relay.reshape(var_2235.astype('float32'), [16, 4, 4]), relay.reshape(var_2236.astype('float32'), [16, 8, 4]), ), 1)
func_618_call = mod.get_global_var('func_618')
func_621_call = mutated_mod.get_global_var('func_621')
var_2241 = relay.var("var_2241", dtype = "uint64", shape = (252,))#candidate|2241|(252,)|var|uint64
call_2240 = func_618_call(relay.reshape(var_2241.astype('uint64'), [14, 9, 2]))
call_2242 = func_618_call(relay.reshape(var_2241.astype('uint64'), [14, 9, 2]))
bop_2254 = relay.add(call_2234.astype('float64'), call_2228.astype('float64')) # shape=(16, 8, 4)
bop_2257 = relay.add(call_2237.astype('float64'), call_2229.astype('float64')) # shape=(16, 8, 4)
output = relay.Tuple([var_2235,var_2236,call_2240,var_2241,bop_2254,])
output2 = relay.Tuple([var_2235,var_2236,call_2242,var_2241,bop_2257,])
func_2263 = relay.Function([var_2235,var_2236,var_2241,], output)
mod['func_2263'] = func_2263
mod = relay.transform.InferType()(mod)
var_2264 = relay.var("var_2264", dtype = "float32", shape = (256,))#candidate|2264|(256,)|var|float32
var_2265 = relay.var("var_2265", dtype = "float32", shape = (512,))#candidate|2265|(512,)|var|float32
var_2266 = relay.var("var_2266", dtype = "uint64", shape = (252,))#candidate|2266|(252,)|var|uint64
output = func_2263(var_2264,var_2265,var_2266,)
func_2267 = relay.Function([var_2264,var_2265,var_2266,], output)
mutated_mod['func_2267'] = func_2267
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2094_call = mod.get_global_var('func_2094')
func_2095_call = mutated_mod.get_global_var('func_2095')
call_2281 = relay.TupleGetItem(func_2094_call(), 0)
call_2282 = relay.TupleGetItem(func_2095_call(), 0)
func_1626_call = mod.get_global_var('func_1626')
func_1628_call = mutated_mod.get_global_var('func_1628')
call_2288 = relay.TupleGetItem(func_1626_call(), 0)
call_2289 = relay.TupleGetItem(func_1628_call(), 0)
func_275_call = mod.get_global_var('func_275')
func_280_call = mutated_mod.get_global_var('func_280')
var_2299 = relay.var("var_2299", dtype = "float64", shape = (2, 660))#candidate|2299|(2, 660)|var|float64
var_2300 = relay.var("var_2300", dtype = "float32", shape = (168,))#candidate|2300|(168,)|var|float32
call_2298 = relay.TupleGetItem(func_275_call(relay.reshape(var_2299.astype('float64'), [11, 15, 8]), relay.reshape(var_2300.astype('float32'), [168,]), relay.reshape(var_2299.astype('float64'), [11, 15, 8]), ), 2)
call_2301 = relay.TupleGetItem(func_280_call(relay.reshape(var_2299.astype('float64'), [11, 15, 8]), relay.reshape(var_2300.astype('float32'), [168,]), relay.reshape(var_2299.astype('float64'), [11, 15, 8]), ), 2)
output = relay.Tuple([call_2281,call_2288,call_2298,var_2299,var_2300,])
output2 = relay.Tuple([call_2282,call_2289,call_2301,var_2299,var_2300,])
func_2306 = relay.Function([var_2299,var_2300,], output)
mod['func_2306'] = func_2306
mod = relay.transform.InferType()(mod)
mutated_mod['func_2306'] = func_2306
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2306_call = mutated_mod.get_global_var('func_2306')
var_2308 = relay.var("var_2308", dtype = "float64", shape = (2, 660))#candidate|2308|(2, 660)|var|float64
var_2309 = relay.var("var_2309", dtype = "float32", shape = (168,))#candidate|2309|(168,)|var|float32
call_2307 = func_2306_call(var_2308,var_2309,)
output = call_2307
func_2310 = relay.Function([var_2308,var_2309,], output)
mutated_mod['func_2310'] = func_2310
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1783_call = mod.get_global_var('func_1783')
func_1785_call = mutated_mod.get_global_var('func_1785')
call_2338 = func_1783_call()
call_2339 = func_1783_call()
uop_2348 = relay.cos(call_2338.astype('float64')) # shape=(16, 1, 4)
uop_2350 = relay.cos(call_2339.astype('float64')) # shape=(16, 1, 4)
uop_2356 = relay.log10(uop_2348.astype('float32')) # shape=(16, 1, 4)
uop_2358 = relay.log10(uop_2350.astype('float32')) # shape=(16, 1, 4)
output = uop_2356
output2 = uop_2358
func_2359 = relay.Function([], output)
mod['func_2359'] = func_2359
mod = relay.transform.InferType()(mod)
output = func_2359()
func_2360 = relay.Function([], output)
mutated_mod['func_2360'] = func_2360
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2359_call = mod.get_global_var('func_2359')
func_2360_call = mutated_mod.get_global_var('func_2360')
call_2415 = func_2359_call()
call_2416 = func_2359_call()
var_2445 = relay.var("var_2445", dtype = "float32", shape = (16, 13, 4))#candidate|2445|(16, 13, 4)|var|float32
bop_2446 = relay.bitwise_and(call_2415.astype('uint64'), var_2445.astype('uint64')) # shape=(16, 13, 4)
bop_2449 = relay.bitwise_and(call_2416.astype('uint64'), var_2445.astype('uint64')) # shape=(16, 13, 4)
func_1783_call = mod.get_global_var('func_1783')
func_1785_call = mutated_mod.get_global_var('func_1785')
call_2478 = func_1783_call()
call_2479 = func_1783_call()
func_2263_call = mod.get_global_var('func_2263')
func_2267_call = mutated_mod.get_global_var('func_2267')
const_2482 = relay.const([-8.967438,4.244983,5.153971,2.597977,-2.120933,-9.027169,-6.603704,-0.987017,-5.905426,4.810921,5.646213,-1.037890,-3.867438,0.852971,8.304417,9.469551,6.106147,6.995352,5.135955,5.578613,7.807297,2.528589,-2.875926,1.984233,9.108686,3.440251,-8.261574,-9.018812,-0.043588,9.846447,-6.074410,6.138598,6.081476,-7.442260,9.713271,2.480901,7.294760,3.165462,-0.948878,-6.425700,7.799765,-9.118394,8.188263,-4.581753,-4.486510,-1.392989,-7.645254,-4.753716,-3.199332,-2.902471,1.294197,7.557534,-3.281041,-2.055620,0.716047,4.021184,-6.100989,-8.377332,-5.959558,0.051110,-1.573209,6.300662,-4.158732,0.003760,-4.372476,-7.222549,6.559185,0.672123,-8.056283,-9.209133,-7.950078,4.689292,9.528627,1.875410,-4.906502,-5.099362,-2.505327,-2.198354,-0.322392,0.348574,4.951331,-6.363290,5.683740,6.252002,1.076699,1.664552,7.143066,-8.977644,4.683618,-0.405064,2.536913,-4.340167,-8.523706,-0.907099,-7.449203,4.336752,6.817859,-6.649542,1.777048,7.590764,2.087932,1.752303,9.233413,2.211926,0.590102,-0.118522,0.542673,-1.866460,7.265077,-5.631407,-1.850308,-8.494914,4.172555,1.345799,-8.917946,2.378502,3.649092,-0.590183,-6.775652,0.065332,0.251743,-7.643666,9.627053,-8.564576,4.773253,-4.264223,-2.117999,-9.673569,-0.232737,4.812818,-8.178053,-4.417111,9.399501,-7.036203,2.603006,9.803896,6.737946,5.812366,-2.449178,-8.736779,-1.943859,7.089526,7.205822,-7.908112,0.180086,-3.711853,-5.010896,-2.955288,3.307671,9.744700,-3.716505,3.933691,4.042483,-2.249593,-3.722888,0.907320,-9.164369,0.659229,-8.572332,4.612585,2.703762,0.853085,-4.923389,5.457109,-0.953509,-9.847892,9.230715,8.414482,-4.835353,-7.581835,-8.257721,7.853261,9.967131,-6.226992,-9.545405,3.177399,0.753841,9.156077,-7.431588,7.896195,-1.692962,-9.868420,4.869065,-1.872890,0.180543,-2.969225,-1.789257,-3.346938,-5.598564,-4.469688,-4.614180,9.817845,-6.688000,-3.780167,0.586504,-6.489329,8.310438,-6.238477,-1.413595,0.055581,9.934768,1.723152,8.207518,6.883623,-6.301149,2.923738,-9.254930,-1.399430,9.304935,3.137754,-6.107704,-2.274028,-7.476825,-4.534533,0.220547,6.250517,0.436047,5.255596,-9.167717,-0.605667,-9.563380,-0.713988,-5.142829,7.846814,3.752256,8.425965,-8.829815,8.990102,-8.855939,7.911270,6.068782,-3.812773,5.418151,-5.117729,7.306310,-3.148321,-1.423314,-8.559413,1.168512,-2.518011,-9.548773,-2.200906,-2.034227,-2.241138,2.596665,-2.850730,-2.225139,9.217889,-5.187212,0.999885,9.098134,2.660267,-2.037557,-5.719109,-2.776732,-9.682890], dtype = "float32")#candidate|2482|(256,)|const|float32
var_2483 = relay.var("var_2483", dtype = "float32", shape = (512,))#candidate|2483|(512,)|var|float32
const_2484 = relay.const([4,-3,10,4,-8,1,-4,-8,3,7,10,1,-4,-5,9,-4,-5,9,-6,9,4,4,10,2,-10,1,2,-3,5,9,-9,-6,-2,2,-10,2,3,-9,-9,-6,-2,6,9,8,-7,-7,-2,3,-9,-3,-9,2,-2,5,-2,8,-8,-7,6,-10,-4,3,1,1,-2,3,-9,5,6,3,-3,-1,7,-9,-5,10,-7,7,-9,-1,3,2,7,-5,9,10,-1,4,-2,3,-1,9,5,5,-2,-3,-10,-9,6,9,-2,-7,3,2,-4,3,9,-3,-7,6,-7,-6,-8,4,-9,-9,-6,-3,-8,6,-2,-7,-2,7,1,9,-6,4,10,-8,-3,-7,3,-9,8,5,4,-3,2,-6,-5,10,-9,-5,-2,-5,10,-5,-5,6,-10,3,2,-10,8,-7,8,4,2,6,2,1,5,-5,-2,2,-1,-6,3,-7,-10,3,2,7,5,-9,5,9,8,8,6,-2,7,9,-3,-8,-1,-3,8,-8,-5,2,-9,-2,6,8,2,-8,-9,-6,5,5,6,-2,10,-9,-9,7,-9,-8,8,6,8,-8,5,7,-7,10,2,8,-2,-9,8,-10,4,4,3,-2,6,-8,-4,-2,9,6,4,5,3,-6,9,-7,-3,7,-1,-7,-10,9,-9,-7,-5,-2,-9,4], dtype = "uint64")#candidate|2484|(252,)|const|uint64
call_2481 = relay.TupleGetItem(func_2263_call(relay.reshape(const_2482.astype('float32'), [256,]), relay.reshape(var_2483.astype('float32'), [512,]), relay.reshape(const_2484.astype('uint64'), [252,]), ), 4)
call_2485 = relay.TupleGetItem(func_2267_call(relay.reshape(const_2482.astype('float32'), [256,]), relay.reshape(var_2483.astype('float32'), [512,]), relay.reshape(const_2484.astype('uint64'), [252,]), ), 4)
output = relay.Tuple([bop_2446,call_2478,call_2481,const_2482,var_2483,const_2484,])
output2 = relay.Tuple([bop_2449,call_2479,call_2485,const_2482,var_2483,const_2484,])
func_2502 = relay.Function([var_2445,var_2483,], output)
mod['func_2502'] = func_2502
mod = relay.transform.InferType()(mod)
mutated_mod['func_2502'] = func_2502
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2502_call = mutated_mod.get_global_var('func_2502')
var_2504 = relay.var("var_2504", dtype = "float32", shape = (16, 13, 4))#candidate|2504|(16, 13, 4)|var|float32
var_2505 = relay.var("var_2505", dtype = "float32", shape = (512,))#candidate|2505|(512,)|var|float32
call_2503 = func_2502_call(var_2504,var_2505,)
output = call_2503
func_2506 = relay.Function([var_2504,var_2505,], output)
mutated_mod['func_2506'] = func_2506
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1837_call = mod.get_global_var('func_1837')
func_1839_call = mutated_mod.get_global_var('func_1839')
call_2522 = func_1837_call()
call_2523 = func_1837_call()
output = call_2522
output2 = call_2523
func_2540 = relay.Function([], output)
mod['func_2540'] = func_2540
mod = relay.transform.InferType()(mod)
mutated_mod['func_2540'] = func_2540
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2540_call = mutated_mod.get_global_var('func_2540')
call_2541 = func_2540_call()
output = call_2541
func_2542 = relay.Function([], output)
mutated_mod['func_2542'] = func_2542
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1783_call = mod.get_global_var('func_1783')
func_1785_call = mutated_mod.get_global_var('func_1785')
call_2559 = func_1783_call()
call_2560 = func_1783_call()
output = relay.Tuple([call_2559,])
output2 = relay.Tuple([call_2560,])
func_2570 = relay.Function([], output)
mod['func_2570'] = func_2570
mod = relay.transform.InferType()(mod)
output = func_2570()
func_2571 = relay.Function([], output)
mutated_mod['func_2571'] = func_2571
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1837_call = mod.get_global_var('func_1837')
func_1839_call = mutated_mod.get_global_var('func_1839')
call_2578 = func_1837_call()
call_2579 = func_1837_call()
var_2590 = relay.var("var_2590", dtype = "float32", shape = (16, 5, 4))#candidate|2590|(16, 5, 4)|var|float32
bop_2591 = relay.bitwise_xor(call_2578.astype('uint64'), var_2590.astype('uint64')) # shape=(16, 5, 4)
bop_2594 = relay.bitwise_xor(call_2579.astype('uint64'), var_2590.astype('uint64')) # shape=(16, 5, 4)
func_448_call = mod.get_global_var('func_448')
func_452_call = mutated_mod.get_global_var('func_452')
var_2603 = relay.var("var_2603", dtype = "int8", shape = (364,))#candidate|2603|(364,)|var|int8
call_2602 = func_448_call(relay.reshape(var_2603.astype('int8'), [14, 2, 13]), relay.reshape(var_2603.astype('int8'), [14, 2, 13]), )
call_2604 = func_448_call(relay.reshape(var_2603.astype('int8'), [14, 2, 13]), relay.reshape(var_2603.astype('int8'), [14, 2, 13]), )
output = relay.Tuple([bop_2591,call_2602,var_2603,])
output2 = relay.Tuple([bop_2594,call_2604,var_2603,])
func_2609 = relay.Function([var_2590,var_2603,], output)
mod['func_2609'] = func_2609
mod = relay.transform.InferType()(mod)
var_2610 = relay.var("var_2610", dtype = "float32", shape = (16, 5, 4))#candidate|2610|(16, 5, 4)|var|float32
var_2611 = relay.var("var_2611", dtype = "int8", shape = (364,))#candidate|2611|(364,)|var|int8
output = func_2609(var_2610,var_2611,)
func_2612 = relay.Function([var_2610,var_2611,], output)
mutated_mod['func_2612'] = func_2612
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1837_call = mod.get_global_var('func_1837')
func_1839_call = mutated_mod.get_global_var('func_1839')
call_2617 = func_1837_call()
call_2618 = func_1837_call()
func_1918_call = mod.get_global_var('func_1918')
func_1923_call = mutated_mod.get_global_var('func_1923')
const_2627 = relay.const([[4.935379,-4.115646,4.527357,-6.127109,8.483743,-2.763906,-2.657628,-0.943305,4.046189,1.994214,3.689787,-1.284129,7.145210,5.587068,-0.285779,1.478634,-2.688484,-9.674487,-7.998420,3.817423,-7.082500,-1.495847,4.146892,3.233003,7.398750,4.568419,-2.133653,-4.514503,9.410668,2.329959,-9.575439,2.954368,-4.680072,-6.947644,-6.057847,-1.647480,4.329843,-4.210512,7.505316,-9.160492,-2.496136,-6.816513,9.821959,-8.483682,-8.891320,-6.121180,-8.914986,2.369881,-1.294741,0.106716,9.495038,2.503068,-2.637943,6.021268,9.109685,0.290066,-7.620002,-2.914004,-9.820960,-1.777917,-1.942691,0.560771,0.534179,4.594236,-0.364024,-5.448005,-6.249034,0.917917,1.261117,-2.413271,-9.892287,-6.404813,3.464442,-9.116380,2.117541,6.969254,-0.087036,-3.188664,7.523477,8.415216,4.876771,-5.004446,1.247977,-4.046242,-0.776160,2.228279,-5.090684,0.567399,-9.820596,1.481552,3.979908,2.392897,2.864459,7.359657,6.742747,7.190084,-1.210020,-9.584221,4.199206,3.622609,5.155815,-9.958489,-8.245323,-6.546215,4.860706]], dtype = "float64")#candidate|2627|(1, 105)|const|float64
const_2628 = relay.const([-4,-10,10,-2,-9,7,-7,7,8,-1,-1,6,1,-10,-8,3,-8,7,-1,6,8,-9,-6,1,2,-5,-7,8,-3,-4,-5,-2,-9,3,-8,1,-2,2,-7,-2,-7,2,7,1,-6,10,-1,6,-1,-2,-10,6,-3,10,3,9,-10,-5,10,-9,-2,-10,5,-7,-7,-5,3,-10,10,-6,-5,-7,7,4,-10,4,5,-9,1,7,6,-6,-5,-5,8,10,-8,8,10,3,-8,4,-2,-4,-8,1,-2,2,5,2,9,-7,-10,-2,-1,-10,1,-2,8,6,-4,-9,5,-6,9,4,-10,2,-7,10,-1,-7,-6,-7,-5,-10,9,-7,-3,5,-1,-7,-9,2,-5,-6,-5,-9,3,5,9,9,7,4,-9,1,7,10,10,4,6,-4,-4,-6,-8,-7,8,-7,-1,4,-2,-9,-6,-7,-3,-4,2,4,10,2,-10,-7,4,3,6,7,-6,-9,7,9,-8,1,-10,5,-6,7,8,4,9,9,-7,-7,3,5,3,-10,-8,8,-7,-9,-10,10,-2,1,-4,-1,5,3,-4,-7,-6,-8,9,4,9,-10,-10,8,-5,-5,7,1,4,3,-4,-4,7,-5,-8,-2,-10,7,-3,2,-3,-8,-5,-6,4,-6,10,-9,4,3,2,-10,-8,-4,3,2,7,10,-10,8,6,2,-5,-2,6,-2,1,-3,-10,-3,-7,3,-6,3,-9,-1,4,-4,-6,-8,2,-1,4,3,2,-9,2,10,-4,7,3,-2,-3,6,3,-10,-7,-9,6,5,9,-5,-5,-10,-8,-4,-6,8,3,7,-1,2,-1,-7,4,-2,-5,5,-2,10,-3,-10,3,6,-3,3,-3,10,-5,-8,-10,-9,9,-6,10,-2,-4,-9,2,2,-10,9,-9,9,7,-2,-10,-3,-6,2,7,-6,6,-8,3,-4,-7,8,2,-2,5,-6,-5,-5,-10,-7,-1,-7,-8,-5], dtype = "int8")#candidate|2628|(364,)|const|int8
const_2629 = relay.const([-7.883220,2.754861,-9.288566,8.974333,3.919649,2.451061,5.367127,-9.242376,-3.296102,6.305362,2.828238,1.228773,-2.999467,9.738065,7.260254,7.500825,-4.544197,-7.875776,-0.841240,-4.341055,6.578729,-3.524143,-3.926634,1.181829,-9.705255,3.661567,0.605977,-4.010125,2.714622,8.634670,-1.314438,-3.591235,4.290613,8.031781,-2.821261,6.447851,8.767749,9.674616,0.688175,-4.507068,4.703919,8.757100,7.893304,9.874442,4.604972,9.642700,7.030508,-5.855723,-7.751662,-5.542817,-0.013964,-4.347434,-3.261705,3.803746,-0.934302,0.304557,4.996461,-3.279635,-2.358896,0.019192,-0.136766,1.338085,-1.210626,-0.949539,8.948943,-5.236975,7.236081,7.964053,-1.420712,3.083814,7.209159,-2.398082,3.960292,5.543516,-7.740254,6.907144,4.485045,-8.292683,-3.100135,-8.509458,-0.815624,0.709549,2.259853,8.726139,4.741134,-1.061160,7.121683,-3.369323,-2.132135,-7.292538,-7.410269,3.677638,6.277440,-8.615061,4.303880,1.984050,2.926529,8.255572,-0.667228,-9.818811,5.636291,-9.422658,4.053989,4.997073,-9.968965,2.122142,3.114584,-2.032602,-3.578542,-8.763766,5.015172,7.498374,7.531224,6.368845,7.720708,4.511449,-3.155409,0.599893,-7.484774,3.617440,8.079006,-0.909933,-3.305625,6.976013,2.672060,-1.158157,4.099582,1.719870,-2.423417,-3.174030,-2.708293,-9.992416,9.398735,-0.117278,-0.080182,-3.427289,-4.837760,-9.631063,1.882350,-3.451733,5.390164,3.702115,-0.730834,3.642974,3.268006,4.449698,-1.041866,4.399378,6.235351,4.431276,9.576247,7.475542,-3.216878,-8.742938,2.844423,-9.075615,4.432067,-9.374764,-4.386291,-1.456899,2.312448,7.068444,2.593044,-0.606318,5.411478,-6.637918,2.487137,-0.921015,6.938772,-7.086068,5.253712,-4.685093,-2.444462,0.433178,-3.339235,1.735805,9.781605,9.638798,5.774919,8.566225,-2.246249,7.534740,-1.218932,7.277157,8.694219,-0.805576,1.119774,2.928850,3.905410,-8.570714,2.741002,-7.612449,8.794432,0.781524,2.826498,2.428972,0.673965,8.982898,-8.796692,3.295299,-7.187086,4.120455,-7.293391,-8.721898,3.529821,-6.382194,-5.734033,8.833240,-7.994729,-4.387724,9.371917,2.050610,-3.815335,-1.292846,-9.568561,-5.898111,-4.072419,-4.810544,1.102807,-2.440798,2.667909,4.559950,6.280251,1.903781,2.606305,3.257396,0.915525,1.947922,-6.318906,4.307244,-5.284481,1.367472,5.486531,1.761025,-1.161128,0.796862,-2.433295,3.768222,4.332649,-3.401783,-2.741786,5.577906,-4.819592,-0.571224,7.077332,2.596175,8.004739,-0.042461,-0.552469,4.164301,3.161165,7.518130,6.903924,-0.921940,0.181190,-0.263057,-4.522347,-3.344541,-1.554704,0.880662,-7.926917,4.530745,-5.272434,-8.245216,-8.656304,9.356955,-2.060893,5.912438,-8.348161,-9.632127,-6.076018,3.436234,-6.937334,-8.716109,-5.754303,-1.151438,-5.937321,4.827970,1.165196,-5.098998,9.388179,-1.911775,-8.835026,-1.297173,8.969205,-8.060996,3.007780,-5.980526,2.685364,-4.798457,5.824604,-1.258405,8.377724,-3.117982,7.249242,-5.726994,-4.319619,-0.307459,-7.943868,5.410683,6.150567,-5.531342,-5.350233,6.151822,7.555645,9.655418,-5.864578,-4.351138,6.714161,2.085042,7.065976,-4.918345,-1.802693,-0.420380,7.119068,-5.264193,-4.101343,2.211991,1.717951,-5.515609,-8.915264,5.123976,-6.171103,-3.180682,-2.812231,-1.782367,7.113710,-9.423283,-5.244414,1.086857,-6.575217,-9.208064,-1.079544,9.062715,-5.829471,-6.056976,-6.079341,-8.924730,6.445290,-1.940533,-1.856120,-8.617029,9.863492,4.946005,7.471050,0.144325,-4.031333,-8.579716,4.234085,-7.784551,-3.649511,9.474825,8.520419,8.502117,-2.360042,-0.141062,-9.287804,4.785046,9.623423,8.331661,0.013025,3.695423,2.589697,-2.919133,4.840753,-7.419526,0.480997,-8.078682,3.044049,9.850870,-4.564347,-5.911195,-2.607300,-8.826037,-8.148289,1.503367,1.696868,3.060720,-0.119692,0.607057,7.951893,2.178050,2.878033,5.988189,5.756912,3.350313,-9.288248,2.274742,3.654502,8.669526,8.750326,0.924642,8.506115,1.039454,-8.293986,6.975085,2.947774,-2.818809,0.699936,0.564230,-1.305543,-6.663868,2.490635,-3.902355,4.137221,-5.780117,-4.000348,0.494283,4.179332,2.469063,-9.242270,1.746981,-8.029884,-9.378427,6.650101,-4.920798,-0.419383,-9.102732,-3.437708,-8.464738,-9.589643,8.141409,-4.562890,-7.185399,4.680232,8.907257,4.641275,2.359614,-9.661862,8.467274,-1.299905,-4.604392,-4.993631,-2.925245,4.887234,-0.076695,8.161167,-9.822113,1.419018,2.385513,-3.881197,-3.936947,3.293156,2.094436,2.607581,7.418507,3.490050,1.802066,1.027122,-5.075656,-5.498365,-0.382514,-2.373773,-6.882408,-4.775213,8.123214,-3.208438,-7.508448,2.118963,-5.955261,-3.676367,-4.189228,8.227378,0.609134,3.527983,1.786665,-1.777520,-6.809935,-9.922685,-9.027080,-8.034584,4.318016,1.923448,6.370176,-1.504595,-0.083670,9.914968,-2.460486,-6.306400,8.411645,5.673181,8.816260,7.109232,6.244441,-7.304413,-5.760308,3.495214,-5.393967,0.100489,6.338806,1.749109,-3.918602,1.467030,7.303007,-9.161030,9.663979,9.872423,4.057851,-6.301684,-8.349041,7.041316,-0.856474,-8.730079,1.560704,-2.658225,4.256868,-4.113688,-7.638723,-2.048734,1.308500,2.803282,3.463818,-6.916800,8.904484,3.401104,4.010799,-7.372410,8.383884,-0.269378,-3.869308,8.962225,-0.004913,5.123823,3.803876,-3.605533,-8.326215,-4.086906,-6.624327,-9.361632,7.809243,2.776599,-7.722257,-0.799970,0.121121,5.206203,7.217840,8.397203,-3.799401,2.812291,1.694654,1.598539,4.126270,6.269428,-1.094920,4.106977,5.888252,-6.698425,-2.738939,9.408000,-8.748451,3.372975,7.619333,9.210548,8.546396,-0.067405,1.698605,-3.029318,8.950095,-6.696656,2.323804,6.368140,8.043471,0.647554,8.989374,4.802056,9.579877,2.330357,2.192190,-0.145134,9.313541,2.650177,-8.104766,8.400396,9.050212,2.749262,4.848487,6.247744,5.189912,-3.749648,2.539710,-2.088092,-6.778416,-1.727809,-4.480301,-9.124744,3.059803,-0.989079,6.448484,5.341729,-6.414170,-0.211187,5.657566,-0.474481,-9.641015,4.184625,-5.422942,-2.530281,-1.525264,-2.075010,7.447630,-3.330983,8.121154,4.324222,5.831659,6.633644,6.712946,6.517843,-6.097321,9.924942,5.110938,-9.879172,-1.890317,-4.603675,0.456791,-9.696480,-3.596089,3.653245,3.422483,-2.363974,9.134010,-7.251826,2.661602,-8.000964,1.194695,-3.526898,-0.197633,-7.061976,9.485650,3.256050,-2.604148,-9.290867,0.165546,-5.884105,-7.959111,6.416353,-0.867787,-7.233212,3.485240,8.012364,0.969779,0.197794,9.529259,-1.533125,4.767672,4.128892,9.894064,-4.110623,-7.036075,-0.154646,4.860112,-1.434075,7.648066,-6.937521,6.239684,-8.547938,5.969095,1.026312,0.189133,-4.785533,2.059916,-7.857908,1.930513,1.888852,4.704367,-5.269747,0.647969,6.023763,3.838381,-3.655056,1.796095,8.129551,-8.387745,3.789224,0.913006,-0.861502,-6.702003,4.245096,0.540507,1.992001,-4.829782,-5.837460,-7.495305,2.421608,2.936463,5.806811,-6.998300,0.982538,3.683476,-2.129566,-5.990991,5.633765,-7.041381,-4.800242,-9.574947,-0.812665,2.485815,-5.033673,-3.134265,-4.762899,0.248937,2.100811,-9.486535,7.500618,7.211190,-3.612314,-6.304935,-6.663724,8.577094,6.658988,-8.919117,-7.714734,-0.527572,-8.609378,-0.299311,-9.541063,-3.443791,8.989421,-2.609908,-5.608143,4.541294,-1.335781,-3.350181,-1.621840,1.701248,9.210199,2.891466,-8.765685,8.056438,2.363074,8.118184,7.446432,8.039378,-5.143040,5.849674,3.357352,-6.101437,0.473463,8.136884,-0.055278,0.067965,-1.418175,6.472025,-4.555500,2.616541,1.604863,1.404042,-3.421468,8.326169,-0.565016,1.380288,5.151375,9.817013,8.602920,-6.852094,-1.048546,7.455608,2.692110,3.547405,0.732331,2.603635,7.463825,-5.080568,9.348612,-9.874015,-9.505102,7.304961,9.283845,-2.028480,0.353522,-5.204108,-2.720474,7.416291,7.693624,5.487753,7.433412,4.000564,0.696233,6.649116,8.531882,8.908586,0.331016,-1.702905,1.917467,5.343093,0.843550,-9.237584,-1.888873,5.924963,-3.898280,-9.778856,6.432577,-7.823492,5.280429,3.578323,-3.854447,9.867909,-9.125872,-6.346763,-8.072333,-6.773514,-8.001005,-7.614184,-4.253360,-0.783472,-3.062854,8.263771,-2.656539,4.172096,6.413966,-6.399848,2.421053,5.189882,3.140874,9.869104,-4.310567,-7.386866,1.596567,7.469594,-1.288990,-4.559511,-2.869928,1.465466,-6.905904,3.788405,2.248011,2.245176,9.778021,-7.236783,-2.393092,-5.499334,-5.286457,8.211315,0.239730,0.140663,-0.749893,2.655775,2.747819,3.846888,8.865100,3.177682,7.183031,1.927122,-4.866658,3.455065,9.092650,7.022836,-7.686863,3.533341,4.421036,-4.904760,1.745723,-7.243849,-6.189896,-1.064127,-6.189963,-0.828527,-7.921170,-7.376597,-5.642284,0.568548,-1.227278,8.118054,-0.386528,-2.873663,0.860686,4.090944,-8.868530,-4.412593,-1.059972,-8.238384,-4.144323,-6.478301,-5.438288,4.295885,-3.324439,5.645274,8.298918,-5.013513,5.995855,9.951715,5.087217,5.505496,1.262089,-6.784846,-6.170354,-9.340276,6.898814,8.975622,-2.509249,-8.990986,-9.755502,3.449544,-0.382614,7.098931,-6.780574,0.188904,0.614404,-9.077888,-4.413653,-1.855741,2.733180,0.846256,7.222105,7.052307,-8.280213,2.324189,3.759372,-1.352589,-2.795024,2.386831,2.361758,-9.954032,-3.493153,9.975229,0.216591,3.398644,-5.495751,7.438919,-8.696203,4.116018,3.857845,4.890360,9.783816,-6.496848,7.920564,2.876081,-6.374179,3.290143,-7.954081,1.940268,7.674338,-2.296113,-7.758513,4.992929,-9.876037,5.956800,0.511691,-4.430553,-1.152770,-7.517940,2.228673,-1.767234,6.226428,-4.987236,-2.409116,8.322728,-6.644597,-5.781325,-4.776830,5.311519,-0.729054,-6.754707,8.481782,6.997642,5.478868,3.194638,9.243766,8.747569,-0.116950,-4.657239,3.665258,-4.996995,8.421797,-3.400710,-0.907962,7.167031,-8.179527,8.502812,-6.003124,-5.910564,-2.862302,-6.425210,4.778801,6.764245,8.519363,8.787850,8.206404,7.747000,-6.905582,-2.096336,1.907334,9.930585,0.869762,-9.664830,3.363305,-1.913018,-6.160527,8.663392,-9.656471,2.842300,-5.117559,-4.673211,-8.079348,8.426210,-6.888203,-6.545670,5.181222,2.877804,-0.872644,-9.597257,-1.122326,1.583224,-2.960964,5.549708,3.100807,-0.444413,5.311767,-2.755035,-8.440341,-0.210640,1.626494,8.870501,-5.334299,-4.182565,-8.625693,2.463709,3.230779,5.894446,0.704216,-4.008906,-2.504620,3.138947,8.675947,7.672181,8.457520,-2.570701,-4.302695,8.600144,1.464934,1.945056,-7.977537,-3.717970,-9.939551,9.409120,-2.973286,-8.338896,4.556708,-2.017337,7.838752,-1.790161,4.168956,-2.770705,-5.627380,9.474699,5.337638,8.340068,3.838409,6.076719,-2.677802,8.119436,-7.495406,0.627512,0.802573,-8.301468,4.967543,2.992722,-3.498862,1.968666,7.992838,-1.313880,4.848926,7.689909,6.836696,-1.250662,5.677985,9.247629,-0.013623,2.962903,-1.639820,-1.735262,3.255659,3.684726,4.983240,-5.711550,6.431178,2.103002,4.200498,6.544234,1.156491,-1.150421,2.807769,-4.770828,-2.502866,-1.060077,-8.479745,-8.145456,-2.049130,1.328562,-9.508026,1.181993,-1.665661,1.024882,2.053937,-8.626438,-3.529521,6.713345,-9.213203,4.877476,-4.561548,-5.743455,3.384326,-4.462011,-6.641115,9.412027,5.318917,-3.131953,-3.019423,4.320494,-1.173398,-1.519120,-3.731846,-2.427766,-5.776348,4.306703,5.965962,7.905970,2.189539,2.293979,7.397999,-7.946383,1.366282,-8.446965,-5.629073,6.475834,8.222898,-3.053258,8.796885,9.188404,-3.363788,-3.499506,-5.566869,-5.077780,8.411329,8.886936,4.961346,-7.939798,-1.426075,-2.673087,-5.141812,7.887155,3.214059,-4.192192,-8.406771,-9.509381,-0.463528,6.095428,-3.045661,-2.747912,9.607563,-1.130374,-8.936586,0.753829,5.252422,2.655393,6.620168,-6.373577,-9.186483,5.336066,-7.211349,-5.269898,1.740125,4.603006,6.454548,9.144970,7.135493,3.543014,-5.703984,-7.733066,-4.916017,-4.618042,-0.358415,1.675569,4.098401,6.179881,-5.609479,-3.268563,3.373490,-2.627087,-5.894148,2.253786,2.235265,5.317808,5.518171,-5.856323,4.914133,7.697503,7.106762,0.996134,-6.458571,-4.686144,-6.115089,-6.003736,-8.391128,-0.481926,-1.642021,-0.038928,3.650329,-9.643326,5.382766,-2.061717,0.598246,-1.237355,-3.888564,4.222465,-8.334505,-2.408613,-6.802981,9.105643,7.087359,5.314730,8.102680,3.388333,0.688164,-8.839700,-9.441599,-1.917083,-4.835404,-1.845121,-5.972630,0.224197,4.636119,0.132890,-4.110828,-5.118389,-1.720562,-1.576193,9.378481,-1.001075,1.684779,7.575977,-3.648629,9.117233,-6.306324,2.104891,3.276027,-0.921404,-9.088130,-5.470095,-9.234573,-3.428809,9.790310,-9.982020,8.916754,6.264887,7.656625,-6.435362,-6.309637,0.315653,-8.692013,3.410656,6.452392,-4.222487,5.985454,7.144654,-8.514419,4.059456,-2.241386,-8.512929,-8.940181,-4.197981,4.199044,1.459772,-0.153513,-7.715038,-4.820194,-5.275842,1.214108,6.515710,4.281305,-5.104710,8.939238,2.815975,-7.039818,2.975379,-9.312762,-1.001339,-2.057541,5.726768,-2.187983,1.267617,-5.284477,0.681090,1.861641,-4.080137,6.808626,-4.212164,-2.491517,-1.861048,4.823974,-4.182664,9.748615,4.066570,-4.717312,-9.796975,8.891017,1.057838,5.182556,8.086211,-8.210029,1.051541,5.864004,-2.507213,-1.634399,-1.369189,-8.667600,6.724962,6.046826,7.958601,3.233571,9.120213,-2.621142,-6.192819,8.712469,-7.509284,-5.997647,5.651955,5.219379,0.926742,-3.283936,2.985009], dtype = "float64")#candidate|2629|(1320,)|const|float64
call_2626 = relay.TupleGetItem(func_1918_call(relay.reshape(const_2627.astype('float64'), [105,]), relay.reshape(const_2628.astype('int8'), [364,]), relay.reshape(const_2629.astype('float64'), [1320,]), ), 2)
call_2630 = relay.TupleGetItem(func_1923_call(relay.reshape(const_2627.astype('float64'), [105,]), relay.reshape(const_2628.astype('int8'), [364,]), relay.reshape(const_2629.astype('float64'), [1320,]), ), 2)
uop_2631 = relay.log(call_2617.astype('float32')) # shape=(16, 1, 4)
uop_2633 = relay.log(call_2618.astype('float32')) # shape=(16, 1, 4)
func_652_call = mod.get_global_var('func_652')
func_654_call = mutated_mod.get_global_var('func_654')
const_2636 = relay.const([-4,6,4,-4,4,-2,10,4,6,-8,-6,-8,-4,-7,-4,8,9,-5,5,-5,-9,-3,2,1,-7,6,1,4,-10,2,3,4,-8,-6,-8,4,-1,-6,-2,10,6,-5,-9,2,1,-5,-8,8,-6,8,9,-1,9,-3,4,2,-1,-7,-7,-4,-5,-3,-6,6,7,-7,-8,-7,6,9,5,-2,-10,1,-7,6,-3,-4,9,-10,6,3,6,2,-9,-3,-4,-5,3,-2,10,-2,-6,-2,8,3,9,-9,-5,-6,4,1,4,2,1,-8,1,-5,-8,-4,-7,8,5,1,-10,6,-6,-2,4,-10,8,-9,-7,8,9,10,10,-4,-7,9,-1,1,-4,10,9,-7,7,7,-8,1,-8,-5,-3,5,3,-9,-9,-4,5,2,-5,10,5,-9,-2,-10,3,1,6,6,-2,-6,7,-5,-7,6,-8,-5,6,5,4,8,-3,-3,-7,-10,6,-1,5,7,6,5,2,6,4,5,9,7,-4,-2,-1,-1,8,2,-9,5,-4,9,10,5,-9,4,-4,1,-3,-1,5,3,-6,-7,6,2,4,-10,-9,10,3,-7,5,7,2,4,1,-1,2,6,3,2,9,2,4,7,4,-6,-1,10,-2,1,10,2,3,4,6,-1,-7,-3,3,-10,-4,-9,-1,8,-1,-7,-4,-7,-5,-1,6,-5,5,5,10,8,-4,-10,-7,-8,-9,3,4,-10,-8,1,5,8,6,1,-1,-1,-9,1,9,-6,6,2,9,8,-5,3,5,-9,5,8,-10,-2,-7,-4,-2,-3,-2,-8,-8,-8,7,10,-3,4,2,3,-8,10,-7,2,-9,-8,1,-1,4,2,1,5,3,-1,1,7,-8,-7,-5,4,5,2,2,6,3,9,-10,-7,4,-9,1,-6,-5,5,1,4,3,-3,9,3,7,-5,6,3,-9,5,-10,-10,2,-7,-7,1,6,7,3,-7,-1,9,-4,5,5,-5,1,-2,-3,7,7,-1,4,-8,7,-7,-8,4,-7,9,-1,8,2,-4,-6,-6,-1,-6,5,1,-9,-10,5,1,5,5,-4,7,-3,-2,3,2,3,10,3,-1,2,-9,5,10,-2,7,9,4,6,1,-2,-5,2,-4,-1,-7,-4,9,-8,3,-3,8,4,-4,-7,-2,-9,-5,-4,-7,-4,7,1,-1,-4,-3,-5,-1,-4,-1,-1,2,-10,2,-8,1,3,1,-2,7,7,5,2,2,10,-6,8,2,7,-4,-4,8,-10,5,1,10,-3,-9,10,8,-7,-2,6,-3,-1,-9,-1,-4,6,-5,-3,-3,9,-1,3,8,6,3,5,7,4,-10], dtype = "uint64")#candidate|2636|(504,)|const|uint64
call_2635 = func_652_call(relay.reshape(const_2636.astype('uint64'), [7, 9, 8]))
call_2637 = func_652_call(relay.reshape(const_2636.astype('uint64'), [7, 9, 8]))
func_2127_call = mod.get_global_var('func_2127')
func_2128_call = mutated_mod.get_global_var('func_2128')
call_2640 = func_2127_call()
call_2641 = func_2127_call()
output = relay.Tuple([call_2626,const_2627,const_2628,const_2629,uop_2631,call_2635,const_2636,call_2640,])
output2 = relay.Tuple([call_2630,const_2627,const_2628,const_2629,uop_2633,call_2637,const_2636,call_2641,])
func_2652 = relay.Function([], output)
mod['func_2652'] = func_2652
mod = relay.transform.InferType()(mod)
mutated_mod['func_2652'] = func_2652
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2652_call = mutated_mod.get_global_var('func_2652')
call_2653 = func_2652_call()
output = call_2653
func_2654 = relay.Function([], output)
mutated_mod['func_2654'] = func_2654
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2652_call = mod.get_global_var('func_2652')
func_2654_call = mutated_mod.get_global_var('func_2654')
call_2813 = relay.TupleGetItem(func_2652_call(), 5)
call_2814 = relay.TupleGetItem(func_2654_call(), 5)
func_1783_call = mod.get_global_var('func_1783')
func_1785_call = mutated_mod.get_global_var('func_1785')
call_2815 = func_1783_call()
call_2816 = func_1783_call()
func_618_call = mod.get_global_var('func_618')
func_621_call = mutated_mod.get_global_var('func_621')
var_2828 = relay.var("var_2828", dtype = "uint64", shape = (252,))#candidate|2828|(252,)|var|uint64
call_2827 = func_618_call(relay.reshape(var_2828.astype('uint64'), [14, 9, 2]))
call_2829 = func_618_call(relay.reshape(var_2828.astype('uint64'), [14, 9, 2]))
output = relay.Tuple([call_2813,call_2815,call_2827,var_2828,])
output2 = relay.Tuple([call_2814,call_2816,call_2829,var_2828,])
func_2840 = relay.Function([var_2828,], output)
mod['func_2840'] = func_2840
mod = relay.transform.InferType()(mod)
var_2841 = relay.var("var_2841", dtype = "uint64", shape = (252,))#candidate|2841|(252,)|var|uint64
output = func_2840(var_2841)
func_2842 = relay.Function([var_2841], output)
mutated_mod['func_2842'] = func_2842
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1615_call = mod.get_global_var('func_1615')
func_1616_call = mutated_mod.get_global_var('func_1616')
call_2864 = func_1615_call()
call_2865 = func_1615_call()
const_2881 = relay.const([[[-1.244344,-7.871955,2.337581,-3.271329],[9.876972,-5.789621,-7.122702,5.390360],[3.760616,9.370393,-5.167660,-6.106499],[-0.029188,1.253212,9.475539,-5.489015],[-7.310037,-4.328339,-5.434835,-8.156821],[-8.916087,-6.393053,9.728418,-8.662990],[-7.696743,0.750191,-0.993917,1.118296],[-0.468101,0.300257,2.071582,-6.366441],[-4.495896,1.634551,0.095596,-7.490463],[-2.649326,-5.461160,-6.995763,-2.122054],[-7.169483,-8.613035,1.261591,1.950523],[-4.064434,-4.388381,-6.704513,4.409227],[2.612197,-3.989998,6.862176,-3.700874],[5.486452,3.616930,8.069000,3.939563],[-2.520061,-6.720019,3.506805,0.084218],[8.839371,0.459995,-3.390737,-6.309085]],[[4.337666,-3.184317,-0.878715,-6.026108],[7.787435,3.514546,4.538151,-8.410593],[-1.875119,-9.409973,2.096860,-4.854261],[7.734587,-9.782654,-0.753805,7.375537],[0.199541,-5.560288,9.642642,-8.362812],[4.568684,4.446155,-2.705592,-0.010287],[4.977136,-4.068382,-5.055766,9.761797],[-5.370011,-3.082497,-3.216074,-3.835039],[9.710558,8.444857,8.859352,-9.816637],[-6.456240,7.135528,9.582678,8.793681],[-1.926385,2.796911,-7.906961,-3.991847],[5.582563,-4.446837,4.926917,7.422959],[6.243615,7.726704,-3.344355,3.344433],[8.095915,0.532003,-4.037905,4.638479],[-4.856929,-0.916150,7.118463,3.545523],[6.393576,3.197982,-7.571902,5.925488]],[[7.241641,-1.533700,-4.032110,-1.990318],[5.813250,9.414805,1.311447,-5.913119],[9.165520,-6.864784,-3.098656,4.047488],[5.687805,-7.656597,-1.220441,-5.281504],[-8.757492,7.500240,-5.783760,-2.646686],[-7.651130,-6.676918,8.127555,9.551821],[5.894822,8.381947,-6.204081,4.557861],[3.032810,3.715954,3.549474,-4.052587],[9.335222,9.214307,0.906134,7.869829],[2.404706,2.035827,-5.273364,6.358166],[3.556456,6.584607,-9.669310,7.541350],[-1.971637,4.365713,-6.092277,1.687572],[6.405560,-1.374521,4.231748,-5.398950],[1.441345,9.249291,7.697021,8.880261],[7.288515,-3.726037,2.910316,-3.877349],[-8.044171,2.575593,6.353484,-2.236980]],[[1.344755,5.113845,-0.096932,3.669679],[-8.211573,-9.952578,-4.123877,-0.542209],[-5.554886,2.307957,-3.466168,-9.935754],[5.638454,-3.216965,-3.125724,3.195638],[3.083368,-1.941550,7.069361,9.872856],[-3.242352,0.745983,5.264470,3.907968],[-9.864233,9.085459,-7.236573,1.070596],[6.361268,-1.041245,0.573615,-7.907742],[-2.186296,-1.289470,-4.874475,3.726180],[4.443325,5.931772,-2.284810,5.424799],[7.583587,-3.400702,-7.563615,6.745275],[6.950244,4.375876,-8.877798,8.931337],[5.483490,-6.932788,1.579927,-2.043360],[-0.845465,9.015194,-3.518066,3.171524],[9.219399,8.960446,1.437799,9.900698],[-3.386855,8.926211,-3.773037,-6.100864]],[[6.040284,-5.102159,-0.179259,1.870030],[-2.709645,-7.969911,1.368983,9.037757],[3.421433,-1.880394,0.339200,7.400861],[0.862460,-2.632919,4.162609,1.042560],[7.406688,8.059371,-0.944924,-7.887756],[1.476223,-2.959774,-5.635451,5.533507],[-1.408458,4.552716,7.184046,-1.102571],[1.199459,6.478722,1.194548,0.247093],[-1.434939,-1.993430,-4.318629,3.455498],[0.676673,-8.001505,4.255563,2.424100],[-4.011065,-1.639272,4.385766,-8.994241],[8.703851,9.329400,-3.287461,-8.053594],[1.880232,4.782165,1.021867,7.497996],[-1.761112,5.531095,8.248430,-3.345618],[7.735844,-3.777896,9.253898,4.792944],[-4.402395,7.605599,-1.010828,3.540219]],[[-1.668214,3.329764,8.086600,3.555636],[-0.612270,-5.090683,7.899302,4.343410],[2.236589,-1.404332,-2.943828,4.058711],[-9.925749,9.297887,-4.329292,0.117680],[-2.716602,4.323303,0.078550,3.372199],[2.918157,-3.807720,-2.966774,6.468290],[2.004800,-6.362264,1.196580,-9.535553],[-6.643314,-4.726087,-2.731468,-3.417609],[-0.865629,-1.061089,-9.797945,-5.873099],[9.015269,-9.445959,-7.622172,9.665467],[8.255138,-8.450822,-1.049770,5.475592],[-4.211752,7.937265,2.823985,7.890107],[3.721610,4.305233,-6.282833,5.377413],[-6.977986,8.374414,1.398795,-5.738913],[7.100608,-3.473382,5.477184,-3.393070],[0.975947,-7.627072,8.714743,5.624684]],[[-0.202632,-3.311660,-3.361404,-0.014217],[-7.531992,7.900390,6.997600,-0.853430],[-9.021887,-4.561381,-2.965985,-2.312233],[-0.692060,-8.616522,-1.518276,8.489459],[9.356511,3.513601,0.594740,-4.480551],[-6.484183,-7.060259,-9.731432,-2.993367],[1.586391,-4.314755,4.633614,9.383324],[-1.376457,-8.717676,7.868434,7.653772],[2.262619,-9.033082,-8.043843,-3.203519],[8.235363,-7.764958,-9.144068,-8.118788],[8.738865,1.271186,5.291606,7.992622],[2.051353,1.750506,3.843289,8.051048],[7.829156,5.597779,-6.375289,-2.336732],[-7.339162,9.737188,6.290510,-4.242467],[1.243758,-3.815705,3.612526,-9.296713],[3.328921,3.065356,-1.288954,0.989859]],[[1.650606,2.031558,8.806640,3.630525],[7.956743,-8.019133,-2.161319,8.533049],[-7.754746,8.369152,3.349309,-0.663755],[8.014903,1.119240,-3.560455,3.546359],[-5.781042,-4.990251,2.510951,5.078437],[-8.004527,9.569972,6.986849,-9.795875],[-2.434149,6.163841,6.714205,-5.364555],[9.139634,-6.742822,8.817935,2.286487],[9.825635,4.360855,6.414335,0.003473],[-4.187123,0.774681,2.693059,1.553451],[2.735940,-6.538842,6.968163,3.672658],[-1.733093,-7.221285,0.885406,4.232491],[0.156255,0.477175,-8.017427,7.216855],[-6.895990,-6.173912,-8.395242,3.716871],[-8.261259,2.527272,6.695639,-0.281665],[-6.404729,9.869083,4.785240,-5.619519]],[[8.569907,7.772433,-9.344141,-4.767617],[8.101583,9.455351,-3.298807,9.816339],[-0.659701,-6.899063,9.772020,8.645359],[-2.219068,-1.167508,-7.945268,-6.634300],[-6.431806,3.009822,-0.700872,7.975553],[-2.793287,-2.674750,-3.360638,3.977136],[-0.439328,-8.669010,-9.908551,8.468271],[-0.978045,-2.403747,6.437060,-8.642575],[6.640804,-4.651773,4.971245,0.650245],[-8.742571,-6.896109,-9.229884,1.881169],[-6.295027,-9.306127,-9.729338,8.784186],[3.621433,9.588232,-2.321998,7.763182],[6.003548,-5.257277,6.733636,-0.614342],[6.167757,-2.446070,-5.821226,-7.428670],[7.378460,1.552991,-8.117460,-9.996617],[9.401097,-8.968460,1.846586,4.746323]],[[-0.866446,6.331322,7.455818,7.831711],[8.105849,-7.210545,-1.196412,-1.694223],[-0.306794,5.729073,-6.639847,-8.112430],[4.001147,6.958860,-5.676518,3.772920],[-6.722987,9.454547,-5.901825,-1.109858],[-0.251938,3.419283,9.580978,0.828739],[8.039763,7.070490,-5.774642,9.394771],[-0.713710,9.400316,3.396006,6.382500],[2.272754,-9.591643,-2.570575,8.141433],[4.719522,4.590638,-6.219675,-1.112159],[4.360476,7.257894,-9.888335,4.472500],[-5.190793,9.823443,1.130892,9.026508],[0.335201,-4.609025,9.023391,6.771341],[-3.074023,6.640706,7.845736,-0.705006],[9.728825,-4.793181,9.377305,9.342911],[-8.353008,4.402323,9.937476,4.019249]],[[-4.375044,-3.393425,8.645557,6.625591],[-4.285137,1.840920,-9.793667,-8.906877],[7.443207,5.613014,-2.994737,-6.626948],[-0.150718,-9.160641,8.191742,-5.697407],[5.223965,6.271158,-2.140393,-8.141121],[2.602091,-0.173958,-6.432983,-9.877259],[-2.120225,-5.080248,-1.033925,2.307813],[-6.705313,-3.864678,7.082973,-1.569703],[-2.059872,-7.422688,-6.307588,5.369277],[-4.772063,1.699420,2.493449,-0.468684],[-3.678066,-7.541691,-9.951775,1.462205],[-1.310405,-8.005109,-4.716830,-4.508346],[-3.464747,-4.402848,-6.694479,-2.463190],[2.301741,3.648633,1.708423,-9.430099],[-2.667991,-8.720869,6.425036,6.654267],[-7.404271,3.800736,-1.667905,7.722618]],[[-4.303847,9.582567,5.151286,3.898929],[-9.794764,8.406476,4.528315,9.002437],[9.556372,-5.620567,1.727654,-8.212215],[7.348496,-8.258224,4.707963,-7.904978],[5.401496,-7.668002,8.553675,-7.538320],[-1.637400,-2.913584,3.383643,6.532772],[9.325417,2.253653,-2.209677,-7.202419],[-7.597487,2.137333,-0.042511,9.531641],[-9.269593,2.000273,-7.374365,1.126583],[3.722017,-0.536225,9.338137,4.619092],[1.439933,2.907530,-3.034307,2.278873],[-2.979306,7.672966,-1.369793,9.686238],[-1.492832,-5.750266,-4.324448,-2.435670],[5.537845,-0.053031,-5.921641,-3.632089],[5.788653,5.260483,1.360561,-5.519739],[-7.991674,8.672875,-2.443337,2.238011]],[[6.762300,5.073673,6.977004,0.759361],[-2.372278,8.138609,-7.482048,-4.599851],[3.940460,3.539855,-2.104589,-8.625387],[4.540587,5.994131,-5.867073,9.709819],[2.538033,4.804469,-8.965590,8.909306],[9.218221,3.984279,-7.550383,1.587935],[-6.224944,1.146846,-9.356301,2.240042],[8.153330,7.204504,7.748445,8.238238],[-0.021717,3.629734,8.862360,8.296828],[9.845297,-8.751084,5.912709,7.561543],[1.471546,-5.703010,-4.616195,1.391696],[1.948348,-1.457217,7.192118,2.611965],[-0.370852,-5.076077,4.463771,-4.859807],[0.560478,0.665251,-8.832339,-2.575690],[4.251089,4.667633,-2.631972,5.263821],[-8.860834,-2.315296,7.806597,9.447873]],[[-4.960453,3.874354,3.544336,-1.141059],[8.173118,3.203498,-6.017096,2.420479],[6.119695,4.572399,2.662798,0.046819],[-4.368238,-0.682136,9.940638,-4.127520],[2.114210,2.228907,1.430529,8.079097],[7.572513,1.281982,-4.428069,2.042132],[0.194359,2.312177,2.591647,-9.913100],[-2.178784,1.993890,-3.484157,4.504514],[-4.084773,6.527509,-9.881001,-0.480623],[6.181821,1.123807,-5.580107,3.019321],[-5.375354,-1.789828,6.629695,2.566313],[2.880561,0.237738,-1.492948,-8.833173],[-2.684148,2.058296,-1.845492,-2.689376],[7.289169,-5.655836,2.539889,2.489585],[-9.103800,1.391225,1.255664,-8.025150],[-5.805964,-6.263510,-8.281832,9.080156]],[[-9.244189,-7.040816,-2.325148,3.469560],[-3.930902,5.794731,8.536766,3.040926],[-7.371761,-1.025106,-1.378937,9.123979],[-9.810376,2.407800,-5.086332,1.258038],[2.546342,8.186651,1.305465,8.711507],[-8.633980,0.386224,-0.165825,-7.308158],[0.026025,-3.310972,0.947913,-8.103791],[1.884112,-0.660431,-1.918536,1.491604],[0.580567,6.120967,0.397253,6.718458],[0.981122,6.183231,6.133200,0.821518],[-6.100803,-2.829127,3.960859,-1.593692],[4.713977,-3.616482,-5.345888,1.132989],[-7.167048,-1.996649,-0.253957,-5.419337],[-4.378304,6.091099,7.194716,9.711952],[-5.632398,4.249607,-9.745176,-1.937879],[-2.291242,-6.062318,-2.396880,6.751118]],[[-0.994517,-3.226772,8.642908,6.147443],[6.305477,5.632980,1.845440,-9.759028],[5.443674,8.914547,8.189675,5.391062],[-8.844241,3.127893,9.900356,3.017487],[-8.232320,-3.707588,-8.692428,-7.972299],[-9.070156,-8.754889,-9.066022,6.916055],[-0.801187,0.759133,9.112170,-0.904397],[-1.856298,-2.616873,-1.085563,-3.095323],[-4.210290,-6.196174,-6.468434,-4.928081],[-3.003599,-6.500424,1.107672,-0.570223],[-5.833346,-7.908371,-9.889051,3.911346],[-1.974876,4.484739,3.775616,4.986863],[-8.742843,2.315024,-5.402611,-9.345580],[-9.744317,0.497359,-4.106593,-2.029432],[-2.379885,-7.149332,3.015866,8.674546],[-5.257430,-6.206380,-2.274445,7.456467]]], dtype = "float32")#candidate|2881|(16, 16, 4)|const|float32
bop_2882 = relay.floor_divide(call_2864.astype('float64'), const_2881.astype('float64')) # shape=(16, 16, 4)
bop_2885 = relay.floor_divide(call_2865.astype('float64'), const_2881.astype('float64')) # shape=(16, 16, 4)
output = bop_2882
output2 = bop_2885
func_2888 = relay.Function([], output)
mod['func_2888'] = func_2888
mod = relay.transform.InferType()(mod)
mutated_mod['func_2888'] = func_2888
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2888_call = mutated_mod.get_global_var('func_2888')
call_2889 = func_2888_call()
output = call_2889
func_2890 = relay.Function([], output)
mutated_mod['func_2890'] = func_2890
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1615_call = mod.get_global_var('func_1615')
func_1616_call = mutated_mod.get_global_var('func_1616')
call_2902 = func_1615_call()
call_2903 = func_1615_call()
var_2904 = relay.var("var_2904", dtype = "float32", shape = (16, 16, 4))#candidate|2904|(16, 16, 4)|var|float32
bop_2905 = relay.less_equal(call_2902.astype('bool'), var_2904.astype('bool')) # shape=(16, 16, 4)
bop_2908 = relay.less_equal(call_2903.astype('bool'), var_2904.astype('bool')) # shape=(16, 16, 4)
output = relay.Tuple([bop_2905,])
output2 = relay.Tuple([bop_2908,])
func_2912 = relay.Function([var_2904,], output)
mod['func_2912'] = func_2912
mod = relay.transform.InferType()(mod)
mutated_mod['func_2912'] = func_2912
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2913 = relay.var("var_2913", dtype = "float32", shape = (16, 16, 4))#candidate|2913|(16, 16, 4)|var|float32
func_2912_call = mutated_mod.get_global_var('func_2912')
call_2914 = func_2912_call(var_2913)
output = call_2914
func_2915 = relay.Function([var_2913], output)
mutated_mod['func_2915'] = func_2915
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2540_call = mod.get_global_var('func_2540')
func_2542_call = mutated_mod.get_global_var('func_2542')
call_2944 = func_2540_call()
call_2945 = func_2540_call()
const_2948 = relay.const([[[6.712114,-9.070896,-6.983747,-5.405285],[-7.780398,4.830884,9.940801,3.069850]],[[4.969136,1.932678,-8.936169,-3.577810],[-5.789595,0.449479,-1.726045,-2.261560]],[[4.828817,-7.354656,7.816423,-0.002111],[-1.168405,0.653419,9.510638,8.734556]],[[-0.752743,-9.047012,3.104430,-8.458031],[8.652232,0.120102,-7.516590,-7.719689]],[[-1.604187,-5.745958,3.790138,9.405010],[-5.823329,0.975215,9.685579,-5.601252]],[[5.712614,-0.556141,4.616237,-6.560253],[-9.333683,1.091090,-3.828255,-4.010764]],[[-9.985997,-9.587458,3.018707,-0.495507],[-0.428029,-9.445159,-1.085160,4.133933]],[[7.389853,-7.956477,9.033855,-3.328533],[-5.561567,-4.195639,2.571327,3.738507]],[[6.957835,2.318033,-0.410245,3.309340],[8.421608,-4.500039,-1.312160,0.823983]],[[-3.409520,4.445425,-4.508860,3.619011],[0.035771,7.695356,0.814824,-6.831508]],[[6.348763,9.513192,3.093707,-6.041573],[-9.078204,-1.451407,8.777798,9.428689]],[[-4.343266,3.727204,-7.321202,0.734525],[-8.444724,-3.533799,-6.037680,2.628852]],[[-4.262202,8.815010,2.924177,-5.406167],[-1.180367,-2.463678,-8.014638,6.445596]],[[-4.109504,1.387388,-5.137529,-4.114754],[-6.818260,-1.896468,-0.812172,-1.433061]],[[-8.089087,-0.515204,7.807877,-0.452857],[-5.882451,4.847636,-0.849490,9.156099]],[[6.850512,2.665234,3.620502,0.534639],[-0.284254,-4.950991,7.504511,5.003186]]], dtype = "float32")#candidate|2948|(16, 2, 4)|const|float32
bop_2949 = relay.logical_and(call_2944.astype('bool'), const_2948.astype('bool')) # shape=(16, 2, 4)
bop_2952 = relay.logical_and(call_2945.astype('bool'), const_2948.astype('bool')) # shape=(16, 2, 4)
func_2888_call = mod.get_global_var('func_2888')
func_2890_call = mutated_mod.get_global_var('func_2890')
call_2956 = func_2888_call()
call_2957 = func_2888_call()
func_275_call = mod.get_global_var('func_275')
func_280_call = mutated_mod.get_global_var('func_280')
const_2988 = relay.const([[7.379509,-7.658823,3.012635,-7.191215,-4.314876,-6.665296,-6.544561,-5.158105,-2.100343,0.898582,-7.704879,1.195961,-1.107505,5.219366,-7.384386,-9.184695,-9.340319,2.842639,-8.515632,-9.332655,-5.707532,8.451842,1.390964,4.560801,9.998517,-9.282715,-9.166631,-0.162503,-6.727197,1.309169,3.220237,-3.108585,-3.429209,-6.512592,-3.146603,1.123856,7.697110,8.309277,-9.098657,-7.255011,-8.069474,-7.825305,-2.815737,3.696598,-4.097316,0.600061,7.509794,2.862009,9.428323,-9.519050,-7.203613,-2.213774,-4.188482,0.139224,-2.726183,-1.264129,-1.416229,3.171541,-4.295244,-0.206742,2.027449,-8.602695,6.236090,1.564510,4.994734,-2.279321,7.153022,4.498322,1.777260,2.433094,-0.405707,-8.161579,-9.566382,6.135266,-6.445193,9.942307,2.991172,-9.399356,-8.569583,1.157766,-0.095582,3.678289,-2.521400,6.168859,3.995118,0.722412,6.125292,5.421412,0.229179,-2.485444,-7.600326,-3.642843,1.951527,-0.127793,-7.621927,-9.569513,-8.764096,-8.306379,-2.914246,-1.031513,-6.282681,-7.052723,5.766400,8.373113,-0.283073,-6.397730,-4.650726,9.587825,-4.869463,6.552141],[7.888028,5.012915,0.197097,1.582563,6.486734,-4.731091,2.021388,1.139437,-8.289591,-4.976365,-2.139456,5.981170,1.513876,9.130147,-4.150305,-8.304668,-4.855971,5.930937,3.313528,0.996340,-6.700928,7.213935,-5.998907,-0.665775,9.023448,-5.293865,-5.896154,-5.533965,-3.101648,8.409627,-7.277184,-8.199698,5.554006,2.123029,-1.000649,3.179349,-0.175759,2.379386,-1.922824,7.193580,-0.552956,5.624763,1.291592,-9.221918,5.239549,-1.208931,5.554575,-2.124603,0.175409,0.559689,5.911604,-5.198373,9.538677,-5.109228,-6.528803,-5.879934,3.299443,8.322638,4.055247,-7.534238,3.981241,7.143147,-3.207308,2.864744,8.337289,0.674413,7.534154,-6.251102,5.071669,-4.773327,-7.267884,-7.457470,5.513639,-8.740981,6.753832,1.087628,1.301452,7.970541,3.357256,2.233893,-2.492144,5.437293,8.758106,-9.066429,-6.866973,-2.103869,2.391001,7.140220,-6.545529,-5.293090,-1.187735,-4.116024,-7.385912,9.035299,-5.992822,-7.909348,-8.572545,-8.933174,9.238407,-7.891350,-9.850577,-7.979408,-8.800617,-2.874409,6.015972,-7.001235,-4.465820,7.516066,5.416681,-3.966365],[-1.424233,-5.429571,-4.947533,-9.850671,0.914378,-4.699436,8.113261,-8.254127,-6.921849,-9.169050,6.980287,4.534721,5.622325,-9.441592,-9.190709,-0.558944,8.079507,9.624954,7.742170,7.895540,-8.658977,-8.157241,-5.844224,3.463277,9.898543,-7.604011,5.869031,5.704898,-2.349825,5.059258,-5.806375,3.154889,-6.195928,-6.450395,-0.173610,-1.216717,1.757921,-5.442779,1.608397,-0.486660,4.060145,4.125925,-2.467162,7.190332,-7.236679,1.304157,-4.588961,-7.812127,1.659363,7.224854,-4.741891,3.801897,-9.072801,7.317161,8.078418,0.340225,-3.130697,8.545548,3.530900,-0.194959,2.670591,-5.924246,-6.239222,-7.671660,6.525544,-8.426771,-7.700746,9.507818,5.803085,-9.868589,-7.704943,-2.730672,1.268747,-3.264242,-5.071011,-1.602123,-7.503348,-5.866014,-2.216392,4.534789,-5.820380,3.866542,1.546233,0.090028,-1.628279,7.676677,7.438222,0.844620,-3.825203,4.195352,-2.185639,-4.291060,9.275041,-0.620627,-3.108022,2.183618,1.829485,1.041121,-7.188783,4.002601,-7.953377,3.068366,-0.748470,-6.565789,-4.934637,-3.428824,-4.347241,-4.948963,7.796761,1.899078],[-6.721399,-3.224449,2.842694,-8.207606,-7.597662,-8.059081,-1.463324,1.454743,9.968455,1.817215,3.538848,-6.011049,8.532075,6.163944,8.589539,-2.411969,-8.155573,7.916730,-4.357355,1.305090,-4.957680,1.655168,8.010627,5.539519,0.678253,5.327744,-0.632851,-0.928330,-1.372557,-9.996823,-5.535777,7.844212,7.537003,-7.515645,-0.821694,8.643924,-3.008780,7.015518,5.209014,-3.238287,-8.307286,3.646404,7.625250,-8.493030,-7.444580,-1.309149,7.395545,7.096258,-0.536291,-0.687924,6.135181,7.309541,-5.449515,1.774194,-9.447682,-4.128192,3.471591,2.448021,6.376065,-0.669644,7.467909,-9.896349,-8.412984,9.156726,-4.297603,9.816916,0.427453,9.816212,-6.188004,5.375809,-5.207047,5.622313,-8.417010,-0.748595,-9.603856,2.257902,9.216086,-0.856282,6.848456,0.373603,5.380205,1.178812,0.638973,-5.977938,2.663428,-3.472312,-4.401674,-3.712395,9.381799,-1.215423,1.676764,2.442469,-1.118878,7.721023,8.856696,2.202899,6.129487,-3.639262,8.921262,-7.360031,-4.070330,-5.371794,-5.786349,7.509257,1.110165,8.079724,0.748263,-1.260096,-1.541247,4.305907],[-5.219481,-8.649572,5.419589,-9.085774,-2.529728,-5.351224,-6.631754,4.410904,7.899621,-5.330964,-1.150777,4.388331,-6.867395,3.768366,7.275357,-6.974029,9.438384,-1.285402,0.576007,7.916119,7.750229,8.006200,-9.373349,1.268787,4.769596,3.592791,5.534044,-6.410030,-2.296364,2.896149,-5.838169,9.162681,-9.968417,1.234519,-6.510830,1.505413,-7.248081,5.418736,8.872518,-3.756835,-7.956601,2.548840,-5.631728,4.958226,3.841114,2.169303,4.809219,-2.027208,-9.034338,3.837460,-9.508178,-1.159363,5.644579,-8.111478,-4.667856,-0.649884,-6.011207,5.836859,5.691983,5.996645,7.637031,-3.461653,5.929132,-5.305159,-9.934939,-9.742706,7.087203,4.871831,2.886749,6.258255,-1.373192,-5.906036,3.290217,-6.268907,4.672052,-7.910918,-2.223753,8.193213,0.104150,6.996421,8.896529,-4.070976,-9.829144,-8.437912,1.213323,-7.913096,8.578008,-7.663646,-5.120381,5.326646,-1.655296,-3.166717,-5.772848,-2.265130,3.284510,-3.965569,-4.940405,1.058578,-3.254092,-8.902906,-7.748153,-3.480823,2.709515,-4.812140,3.817814,4.362250,1.271053,-4.850866,9.018145,7.729125],[-4.979514,-4.222735,8.518319,2.786827,8.476355,9.851814,-3.651028,5.518256,6.061251,5.801899,5.920358,-2.325018,-3.172721,-5.872584,-6.910450,8.724408,2.743327,3.456368,8.446048,4.327475,-3.491997,-9.803077,-2.040510,-1.536223,-9.426576,-7.444173,8.267236,-0.251147,1.394024,5.380475,0.558334,-9.415109,-6.785372,5.628455,-3.318505,-0.203861,4.203301,-5.059794,-4.690256,4.038824,-8.324868,-1.782091,9.344898,-6.978361,-3.079483,-5.664057,-3.790911,-7.341199,-1.651767,-3.761902,-0.108512,4.091539,-5.821125,9.521976,-9.139895,7.983012,-8.541383,-6.833223,-4.719955,-3.224568,5.668054,-3.051141,4.775512,-4.183393,-7.804747,2.385187,-8.806437,8.494419,-5.922606,1.884156,7.299708,5.120428,8.144746,1.373925,-5.806644,-0.057015,-1.329804,0.118105,2.482236,2.634014,3.864679,8.881914,2.023269,-0.522027,9.127719,7.553239,-6.225986,0.125045,-4.801116,5.878991,-2.911353,-7.550110,0.141891,4.495676,-4.802014,-9.430687,3.961086,0.300582,-8.346762,-2.737592,9.563129,8.537667,-3.916987,7.392164,9.477519,-0.191536,-4.419181,4.368193,-4.435298,4.040319],[9.577632,-7.676932,8.613329,-0.690887,1.168161,8.998885,-9.389766,-1.787343,8.418542,9.182787,0.938859,8.139647,3.041866,8.800007,8.674969,-6.074362,-0.616345,6.066797,-3.247645,-8.250082,-1.600273,-5.543964,-5.370652,4.357176,5.077844,-8.758988,-9.794408,-8.464566,-4.323632,-2.775268,-7.182860,3.757581,0.506850,-5.861485,-9.407695,-6.108186,7.446644,8.923224,1.428446,8.610858,6.791451,4.031844,3.244909,1.076450,0.531156,2.925972,-2.240528,1.549627,8.631259,4.704447,-4.256801,-0.096342,1.217968,7.847365,9.155950,5.834944,-8.915285,-3.675663,-1.113428,-2.951359,1.717996,-2.999326,-7.872618,-2.279415,6.693823,4.810340,0.476450,0.034911,9.126905,6.515116,-1.079355,8.075247,-7.030950,-8.528927,-1.014652,-5.811439,9.166730,6.754555,-1.381682,2.307881,-5.986145,1.140844,1.033597,-4.339602,2.039845,5.861278,-9.890235,1.772779,-3.089254,2.821837,-5.547236,4.150709,-1.393390,1.816429,-0.138486,4.973131,9.465116,-8.667521,1.734260,7.856707,-1.019964,-4.630279,5.313880,5.862319,-5.289342,-7.193524,4.072400,-5.109642,2.122542,-8.432744],[-3.721250,-2.601219,8.845415,-5.273982,3.646952,7.705799,-0.447684,-8.755062,3.145521,-2.428142,-0.908025,-7.359036,-9.725045,-4.936747,-2.411562,6.090073,-5.835823,-5.940143,-5.190589,-8.931898,-3.229534,6.130597,-1.090429,2.584234,-7.254083,4.693462,-9.951117,-7.833452,-4.045929,-5.848723,7.107100,2.685867,4.573357,0.722868,9.302922,5.146698,-0.010485,-2.384242,-3.267940,-6.609648,5.539280,-6.179889,-6.745552,-3.391298,5.517801,1.459453,-4.747240,-3.398429,0.062277,8.937296,2.470601,-9.718333,-5.608489,-0.778129,-6.823024,9.318828,-2.591596,-8.559989,-6.173689,9.707826,2.604889,-7.107605,-1.625290,-9.650936,3.406686,-6.127726,-1.793398,-0.119044,1.211859,-5.869208,5.397721,-0.222629,6.454105,-9.710984,6.365391,1.703433,1.724874,4.174533,-7.048021,5.082069,1.112000,-7.406619,-2.013551,-7.381305,-3.242030,-9.574424,-7.711616,3.233506,9.080142,4.977045,-9.185030,0.357677,8.616552,2.091935,-7.810992,3.470306,-7.572536,-5.053784,-5.777370,-9.265822,4.779837,-4.443140,4.148305,0.781517,-8.236954,-3.430508,5.611189,-3.763836,-1.483779,-7.598916],[-5.945354,-2.848431,2.467329,0.371822,-4.127117,-8.935835,-7.340596,0.677129,9.605044,-7.106599,-0.772344,-4.994353,4.144722,-7.944743,-5.517385,-1.099501,-1.901510,3.408806,1.610997,8.692917,-3.624816,1.472373,-7.180403,2.939219,9.545132,3.691818,-9.691386,1.801218,-8.530680,9.572055,-3.558319,2.253907,-6.590250,7.947137,-4.948340,3.600838,-0.852925,8.509757,-1.210231,-1.586522,8.345477,9.799883,7.445320,4.184910,-1.820340,-1.214982,-9.415746,5.906960,-3.604823,4.643976,2.494544,-8.718157,7.358964,-8.269754,-4.789482,-6.223406,1.877143,9.869882,-2.578755,-7.057112,8.966881,-9.591496,5.120615,-7.954839,-5.565898,-3.267749,6.688799,9.257277,-6.265341,-8.425846,8.359659,-4.976118,-8.476204,0.021882,-7.256596,5.123681,4.414761,-0.855191,3.183525,-3.102516,-0.581259,5.651434,7.203045,-3.531209,-9.286464,-7.999006,4.202525,-3.106168,-1.328389,0.153714,-2.624706,-7.443403,-2.285983,-5.192120,-8.269891,9.501334,1.411928,-9.049252,2.169144,-7.206453,1.666214,5.734034,-3.817081,-1.919566,-7.248403,7.143174,-9.326258,-0.915139,-1.204440,-3.506567],[6.278641,0.471338,-6.825362,-7.502466,4.446521,5.555000,8.410508,2.126039,8.662086,2.538903,5.004360,-4.158917,-0.273678,-9.072236,9.289461,4.314489,-2.582749,5.214346,-4.093209,6.004139,-0.128980,-2.525512,3.334598,0.686310,0.678537,-2.847569,-2.587074,-6.825646,0.035474,4.050965,5.942334,-7.121803,-7.779316,-5.187971,9.659115,-3.970316,8.445820,4.621778,-8.238808,3.015344,2.773127,9.523960,-9.676483,1.566795,-0.572694,-4.624823,5.421881,-5.306438,-6.854538,8.497544,-6.597628,8.986304,-8.090682,-0.633821,-5.058820,4.341253,-4.952573,5.843734,-7.029904,-0.298350,7.942479,9.753435,8.790712,-5.689209,-2.353015,3.390799,6.823624,-3.425201,-1.989326,1.722713,-0.409453,-0.140929,7.823970,8.571548,-9.980693,-9.308924,-7.730511,0.224386,8.858149,7.235307,0.091416,-9.037529,-3.065862,-1.486740,-8.594093,0.314481,-7.101794,0.960225,5.753463,-1.781466,-6.993401,8.277989,-3.568946,4.175144,2.109034,2.624488,6.441582,7.294106,9.768542,-1.916627,0.191600,-6.773780,-1.260342,9.883598,3.414435,2.955511,1.370491,-5.391207,7.249371,6.862549],[1.406474,9.129371,3.236206,-6.851606,0.871040,-8.224592,-1.003491,-5.662717,-6.114693,-5.149949,0.382394,4.214236,-7.534372,-7.192558,6.600536,-5.326727,2.845100,-3.884914,6.265439,6.654517,9.648951,2.226348,-4.306623,-7.766098,-0.906003,-3.622619,0.176992,-1.744528,-8.741418,7.889794,-2.800677,-0.379929,-8.114944,-3.870543,2.898879,-0.004305,7.267809,-3.400183,2.210798,-1.516504,4.317855,-5.385656,5.490785,-7.799737,8.506341,6.896082,-4.519157,4.601459,-7.847639,-5.121603,8.079028,2.185942,-3.892708,4.676351,-1.032769,7.715373,-2.240229,-8.590106,-8.003089,4.314152,9.978464,-4.232894,-3.395018,-8.207879,3.492569,-2.418098,4.272219,-7.727303,3.887492,8.048316,9.004381,6.183317,-3.889613,4.962453,9.709066,8.530055,-8.892197,-1.615459,1.431475,3.310494,4.942137,-9.671282,6.786706,-8.913897,-0.233158,9.646439,5.318924,8.549279,-4.712629,-3.404630,-2.210706,-6.407883,3.458872,1.791875,9.069592,-9.370041,8.926873,5.021700,8.097153,0.439304,-4.889750,8.892683,-2.108748,8.406984,-5.247486,-2.356997,0.475104,6.611646,6.865149,-1.437765],[9.545960,1.668183,6.987242,-9.277405,-3.179689,-4.846944,-7.591194,-3.372895,-2.625558,9.201115,-5.802629,1.098756,6.480518,-5.608780,-7.255357,2.232535,7.970732,-1.979617,-0.129993,4.420416,-1.915393,2.682846,-4.564700,4.228691,4.098712,8.406122,-5.581630,-0.907163,4.422986,-8.864144,2.906565,8.460883,-6.317217,2.368817,-5.690815,-8.399742,-2.176765,9.116189,2.372852,2.947727,-1.697461,-6.062104,-8.863965,-5.582642,-7.851999,9.410974,-2.195191,-5.103963,-8.484394,0.838470,1.820179,9.384703,7.732271,-6.979841,-2.113493,-5.169050,-4.064464,5.158891,6.152835,-4.133191,8.456088,2.228701,-8.201112,-3.887033,8.666491,-3.576954,1.906251,-7.178189,-8.034767,-4.603376,-1.906590,6.719077,7.862980,8.417778,-9.139084,-4.078618,2.400045,-3.199944,-7.264121,-3.448163,-1.247823,-9.931733,1.218747,7.936241,4.823797,-2.938388,-7.244022,-9.776865,-4.708936,-7.171530,2.666045,-2.218467,-9.230197,-0.442528,-5.889443,-3.083466,0.980947,-3.598074,1.241571,8.457695,7.201103,-1.924571,0.472647,-6.400255,9.790758,6.522606,8.543505,1.648138,-8.559158,-3.835382]], dtype = "float64")#candidate|2988|(12, 110)|const|float64
const_2989 = relay.const([1.829731,8.603686,2.193657,7.384863,-4.126300,-9.203744,-4.116627,9.355089,3.993401,-2.256770,0.198633,-2.380586,-7.348984,-2.240353,6.922590,-1.606359,5.665187,9.428011,-0.404614,-6.229016,1.089036,3.258912,9.444165,8.903917,5.485519,8.916660,1.010798,-5.751064,9.673169,0.745673,-7.491827,7.473391,0.139556,4.509081,-9.975619,-7.226793,-8.877959,1.376101,1.840240,7.182524,0.070589,9.752388,-4.166967,-5.596351,-7.755455,0.256431,7.863850,-1.146930,5.593244,3.104995,7.029802,2.697236,2.265651,0.170081,5.393726,9.032857,-7.160955,-1.160152,-4.897815,-5.367297,-1.672152,6.948083,-9.203671,2.671887,9.340051,1.604016,-8.468095,1.722446,-3.744921,-5.738634,6.580826,-7.496908,-5.393410,-1.318065,5.707431,7.675300,-9.170841,5.329708,0.439248,4.696009,8.870731,1.015697,2.989287,2.863093,-3.106576,-2.848390,0.726873,1.584098,0.698695,-5.037302,-8.712736,-9.335271,8.859114,0.124835,-6.495282,3.756248,-3.017872,-4.434639,9.884682,6.308815,1.886255,9.708515,-6.959756,7.421161,0.218186,-6.102031,9.969365,-1.635799,-0.330544,4.109744,-6.856345,4.384784,-7.447120,0.953185,7.859619,0.063547,-0.507259,-6.302822,8.699533,-1.066554,0.359633,-2.480506,3.312866,0.232523,-8.408827,1.875395,-4.312413,4.939770,-1.760906,-8.165016,2.169259,-5.039501,0.328612,-1.517539,-2.467754,8.398529,5.138337,0.475409,-4.104411,4.532071,1.028297,-0.374497,9.869804,-5.402190,-7.461891,9.248507,-5.208388,1.800042,-9.404828,-0.337412,-7.374390,3.551474,8.252853,-9.780750,2.339315,0.240906,-5.831209,-4.139145,8.804083,7.738533,-2.514310,-3.515402,4.159540,-4.038300,5.435535,-0.163967,-9.690513,-2.857035], dtype = "float32")#candidate|2989|(168,)|const|float32
call_2987 = relay.TupleGetItem(func_275_call(relay.reshape(const_2988.astype('float64'), [11, 15, 8]), relay.reshape(const_2989.astype('float32'), [168,]), relay.reshape(const_2988.astype('float64'), [11, 15, 8]), ), 2)
call_2990 = relay.TupleGetItem(func_280_call(relay.reshape(const_2988.astype('float64'), [11, 15, 8]), relay.reshape(const_2989.astype('float32'), [168,]), relay.reshape(const_2988.astype('float64'), [11, 15, 8]), ), 2)
func_1837_call = mod.get_global_var('func_1837')
func_1839_call = mutated_mod.get_global_var('func_1839')
call_3007 = func_1837_call()
call_3008 = func_1837_call()
bop_3010 = relay.right_shift(const_2988.astype('int32'), relay.reshape(call_2987.astype('int32'), relay.shape_of(const_2988))) # shape=(12, 110)
bop_3013 = relay.right_shift(const_2988.astype('int32'), relay.reshape(call_2990.astype('int32'), relay.shape_of(const_2988))) # shape=(12, 110)
output = relay.Tuple([bop_2949,call_2956,const_2989,call_3007,bop_3010,])
output2 = relay.Tuple([bop_2952,call_2957,const_2989,call_3008,bop_3013,])
func_3015 = relay.Function([], output)
mod['func_3015'] = func_3015
mod = relay.transform.InferType()(mod)
mutated_mod['func_3015'] = func_3015
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3015_call = mutated_mod.get_global_var('func_3015')
call_3016 = func_3015_call()
output = call_3016
func_3017 = relay.Function([], output)
mutated_mod['func_3017'] = func_3017
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1645_call = mod.get_global_var('func_1645')
func_1647_call = mutated_mod.get_global_var('func_1647')
call_3049 = func_1645_call()
call_3050 = func_1645_call()
var_3053 = relay.var("var_3053", dtype = "float32", shape = (16, 7, 4))#candidate|3053|(16, 7, 4)|var|float32
bop_3054 = relay.less_equal(call_3049.astype('bool'), var_3053.astype('bool')) # shape=(16, 7, 4)
bop_3057 = relay.less_equal(call_3050.astype('bool'), var_3053.astype('bool')) # shape=(16, 7, 4)
func_2570_call = mod.get_global_var('func_2570')
func_2571_call = mutated_mod.get_global_var('func_2571')
call_3081 = relay.TupleGetItem(func_2570_call(), 0)
call_3082 = relay.TupleGetItem(func_2571_call(), 0)
output = relay.Tuple([bop_3054,call_3081,])
output2 = relay.Tuple([bop_3057,call_3082,])
func_3089 = relay.Function([var_3053,], output)
mod['func_3089'] = func_3089
mod = relay.transform.InferType()(mod)
mutated_mod['func_3089'] = func_3089
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3090 = relay.var("var_3090", dtype = "float32", shape = (16, 7, 4))#candidate|3090|(16, 7, 4)|var|float32
func_3089_call = mutated_mod.get_global_var('func_3089')
call_3091 = func_3089_call(var_3090)
output = call_3091
func_3092 = relay.Function([var_3090], output)
mutated_mod['func_3092'] = func_3092
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2570_call = mod.get_global_var('func_2570')
func_2571_call = mutated_mod.get_global_var('func_2571')
call_3101 = relay.TupleGetItem(func_2570_call(), 0)
call_3102 = relay.TupleGetItem(func_2571_call(), 0)
func_1116_call = mod.get_global_var('func_1116')
func_1118_call = mutated_mod.get_global_var('func_1118')
const_3109 = relay.const([-5.731279,-3.490573,-9.224693,-8.592443,-1.534208,3.075742,9.680315,7.424403,-8.806238,-1.808095,-5.575138,4.672178,-4.648356,-1.778452,-3.605401,-7.788412,8.444360,2.042024,6.231361,7.839415,-9.896526,7.544846,-6.307099,-0.877266,7.028364,-6.836574,-8.493208,3.131345,-3.093123,7.105381,-9.385051,9.255514,-0.629639,8.665656,8.174083,8.921381,5.341583,3.789054,8.935187,8.012453,-8.556353,4.072385,4.792703,-0.655587,-0.658806,-0.181073,7.700108,4.335333,-7.118032,4.938863,2.837469,-3.303976,4.137864,-6.049424,9.377353,4.827020,9.268300,1.868884,-4.785807,4.165224,6.501485,5.207859,0.828461,-8.418116,9.934473,9.530778,-4.406141,-5.837378,2.070539,6.891877,-8.049575,1.815893,2.649755,-3.647113,-5.839983,-6.111162,1.873497,-4.444417,-0.700014,-4.813467,-5.005371,-6.397680,4.155473,-3.622854,5.240238,-3.808907,-5.253164,-4.152093,-7.347675,6.204022,-8.358295,-1.582388,4.904431,-6.824259,1.926067,-0.727572,7.154328,-2.543123,8.109505,2.592938,-2.258071,-3.584873,7.069722,-6.510003,7.336875,-1.702823,-7.025976,6.511128,9.998530,6.798046,-3.882695,-8.477798,8.086473,2.983326,8.749899,3.660070,-6.989282,7.797980,-7.400199,2.989554,7.533433,9.805555,-4.183731,-7.890342,9.657030,-9.519937,6.579020,4.748883,4.960835,6.499437,5.639263,6.151693,-0.368620,-8.427943,-4.619178,-0.523451,3.755545,6.451855,-9.080240,-5.460948,-6.524688,7.778073,5.654452,-6.350987,5.977248,-2.302446,-7.916243,-7.120355,-3.383457,-7.569945,-1.210563,-1.914231,-3.709382,5.810313,5.319433,-5.898099,-5.899863,7.044687,-5.784220,2.649908,8.534902,0.992992,4.501662,-4.966679,-9.773015,-4.121302,7.530328,-9.002213,6.855380,-9.323320,2.406584,-5.255207,8.461131,-1.456115,5.956963,8.664214,6.710545,-5.860963,2.537857,-1.552387,2.000438,-5.944941,4.297715,6.171258,9.306578,-0.707029,-0.840209,-7.881943,-4.099249,-8.435543,-2.812548,4.954523,-8.273409,-6.211602,-2.566480,4.196387,-3.831137,8.145620,-4.650775,-6.843090,-4.899432,4.589361,6.745947,-1.822093,-5.730032,8.192036,2.228835,-5.492655,-6.616271,7.925765,0.552745,4.363030,-9.585557,4.724682,6.279178,-6.095022,-1.920454,-2.404214,-4.991235,-7.413320,6.747397,6.184410,-6.823507,-2.485975,1.550118,6.138007,-3.404009,-8.329901,3.793358,-5.594572,8.263803,6.643849,-8.205061,2.481249,-2.839919,0.617969,4.243155,-2.507974,-2.620470,-9.701421,-8.392144,-4.498231,-8.830041,-0.242714,-8.003530,-9.021549,8.300076,-4.733656,-2.859891,-6.882790,0.820965,-7.130791,9.207635,-3.300314,-7.110504,5.893294,-9.605065,6.250260,-5.122397,0.001915,-6.381284,-0.171837,9.656643,0.104768,-1.019084,-8.240238,6.553455,-1.519441,-6.908964,-3.623731,6.510388,8.939988,8.795226,8.960802,-1.176955,1.248561,-6.837370,8.555439,-6.953405,9.764351,-3.586757,-3.390252,6.038574,-1.932775,8.787183,-2.739312,-0.792900,-4.212281,-4.562476,1.740180,-2.739001,-1.705758,-5.505560,-9.086402,-4.893187,4.822531,-9.999175,3.368881,-9.709099,9.544322,-3.383396,4.594833,7.622960,8.756940,4.268353,2.627190,9.279327,-1.110146,6.720303,-5.988826,8.310499,-4.820067,1.504693,7.702575,-4.575491,7.629630,-0.739823,1.153567,-9.759446,9.148779,-1.477448,-5.305630,-1.742822,5.831618,9.842791,-5.116674,-1.569229,-8.283719,-8.547597,7.138824,-2.528334,1.377125,6.590203,0.235856,7.548150,3.914190,5.305081,7.111726,7.669264,6.638360,-1.757536,6.875586,-8.208701,-8.673806,4.235772,6.373458,-7.694349,-9.641680,-1.126629,-8.405685,-2.594445,3.754150,9.950203,-1.336010,3.741245,7.363327,1.747593,-2.138579,2.237440,-0.825032,3.241624,-3.561900,-5.628495,2.687285,-3.397472,3.747245,-5.622043,-6.574799,7.383949,-7.594244,-8.084288,3.234006,-4.703901,-9.283945,-7.334215,-0.634650,-3.523272,-6.267699,1.252445,8.506482,7.847663,-0.718504,9.719113,4.017509,4.027769,-9.706921,2.352675,3.371598,7.382934,2.051411,-4.021696,5.418838,6.680005,-5.363802,-6.139329,-4.889764,-3.750543,4.822235,-7.520325,-8.115316,-2.699780,9.391180,-5.097378,1.031874,-5.107751,-4.612472,-5.438699,-0.083146,4.080174,-0.156232,-8.274835,7.699787,5.735486,0.712284,5.438701,-1.554507,-5.615555,9.873994,-2.835558,-8.798853,-5.053635,-0.414173,7.996489,-6.343248,0.225024,-8.106575,7.255298,-7.517283,-4.780116,-5.543809,2.068616,6.023221,6.068139,3.765556,2.489310,-1.213215,-6.370431,-8.600925,6.429921,-1.279226,0.713656,0.756204,-8.740044,2.151516,1.318829,-2.530933,-4.859296,-6.209905,-0.500224,-2.712527,6.366715,0.128779,3.153128,3.818422,-3.588746,8.901285,-2.789535,7.166491,-1.861963,6.611176,-5.011224,-2.901252,8.635194,-5.866847,-4.944428,5.835115,-8.290776,1.905670,-2.548184,-8.410331,-2.835815,-0.833704,-7.667454,7.829925,9.031683,-3.591884,-2.891462,-9.593773,8.654880,-1.511348,8.585183,-7.628405,-4.586276,5.127104,-7.231296,-0.426823,1.037868,-5.888393,-3.553428,-8.824871,-5.575944,4.010317,-2.788774,1.431849,3.701834,9.119258,3.400176,-6.420079,-4.232293,1.191458,0.703479,0.822206,-5.935764,5.200522,-4.569236,-0.554510,-8.094182,5.652360,-8.361142,4.724375,-5.330205,-3.046109,-9.355032,-4.264831,4.244915,3.479121,3.299855,8.250387,-3.690270,-2.085154,2.208137,-0.957966,-3.087113,-5.126630,-4.414981,-3.329892,-4.297565,-9.463546,4.762573,8.346352,-7.755817,-0.360426,-8.008410,-5.218359,-5.176277,5.841293,3.921433,9.741219,1.371622,-3.819388,9.384338,0.458220,-2.992265,-6.112441,-8.603602,-3.616268,1.633544,-4.721661,-5.093645,-8.784239,5.431877,-3.787093,2.787631,-2.639170,0.298026,-2.851753,-1.657154,1.936564,-5.924453,-3.025015,6.253844,1.992422,3.645880,-9.921986,-0.797447,-4.691686,-6.303261,2.243926,7.385881,5.435995,-1.125645,7.110211,8.791302,6.723178,2.949294,-0.338988,-4.157329,4.681922,4.363915,-1.437354,-6.766613,0.637617,5.749152,7.601245,-6.207152,-2.068072,-6.221171,2.470438,-2.528067,6.132742,9.644942,-7.609896,-0.583843,5.800366,-7.433974,5.273741,2.173900,5.083725,4.440361,8.862416,5.275413,4.300881,8.375489,4.082193,1.680221,5.519165,-4.378302,0.401217,9.484485,-6.205040,-6.517212,9.950305,-6.175618,-9.898207,0.291875,-7.187964,3.888630,-2.875187,-9.063395,-4.605584,3.885140,-0.723098,-3.831606,-1.612858,4.596312,6.570698,-7.487858,7.880619,4.171454,8.293046,8.753362,-4.437156,9.607103,7.863169,-2.549492,9.747579,-1.312603,-9.419306,7.331162,-1.313719,9.166779,-9.395420,-4.437297,9.547496,-2.954467,-6.321726,-9.193740,-5.928456,-1.684400,5.912430,-0.120244,-5.009648,8.725230,8.795961,6.506917,6.606000,1.930149,-6.756467,5.873901,9.564255,-1.968106,1.243843,-9.497443,-2.824038,0.578074,-9.651369,2.579123,-7.581081,0.794300,0.633591,-5.580466,5.638700,1.866784,1.074565,5.620191,-0.690608,2.871185,-1.882301,1.940130,-7.624493,0.081558,-0.022344,1.618085,7.855252,-2.657341,7.551324,7.982517,-2.273859,-1.440867,3.153597,0.735267,-7.024985,1.116421,-0.072954,2.871707,1.176679,7.631872,3.852201,4.161497,9.291800,-9.169606,-1.959427,-6.485264,-0.797452,-6.541098,-5.254062,3.195819,-2.789883,-4.949261,4.738696,5.154174,-6.059731,1.272179,1.977751,-0.195276,-4.521299,5.953849,-3.247495,-5.393127,8.427227,-2.420543,-6.084277,-0.980686,-1.660783,5.958557,-1.016832,-2.163995,-0.284164,1.217817,-2.698546,-2.304717,-9.898804,6.959660,3.942139,5.628903,8.113111,8.495031,0.867716,-6.738766,-9.761410,1.806122,2.498593,9.718964,5.697965,5.242508,-8.511693,1.851415,-5.543737,4.308165,-9.305890,-0.608089,-3.610089,9.437489,3.420553,5.181091,3.479854,-0.023447,-6.265341,-7.647167,-7.858591,-3.376373,-5.166382,6.220575,-5.647941,-1.019660,5.297305,-4.461225,-8.338730,3.841617,-0.713694,0.626458,-1.472873,-0.026810,9.160975,-7.041630,-1.941960,-1.756588,-9.291798,6.491793,-2.100128,0.243814,-9.617892,4.784512,3.743625,-0.415210,5.929313,-6.572407,-0.302529,8.871035,5.873632,8.718937,-2.500140,-9.363335,-7.114104,8.274758,-8.747637,-1.719372,0.539788,4.739491,4.682204,-5.488960,-0.759306,-1.250273,1.910038,-2.233711,8.370908,-2.452048,-9.383359,5.627648,3.868780,5.340588,0.629708,-1.770419,-4.099364,-0.208280,-2.042368,-0.654602,6.830876,1.477398,-6.582573,8.920988,2.369478,8.643789,3.351768,-2.519756,-2.694172,-9.523172,-8.142410,-6.596000,-2.221864,-1.860156,6.780211,9.559044,7.088143,5.033646,9.992354,0.492305,-1.679492,-1.239002,2.380100,-9.463484,-0.394925,-8.606154,-6.881762,4.884374,1.492651,0.737267,9.377150,4.874376,6.208558,-4.027483,3.078281,2.346544,7.488696,3.901563,1.610548,-7.178648,-3.737038,-8.588302,0.406425,-1.716179,6.237121,5.514238,-3.137293,7.234771,0.711406,-9.223078,4.686034,-1.911671,4.855067,-9.448610,-5.829809,0.701098,3.352788,3.372851,1.481919,5.664304,4.396424,8.340601,0.547461,8.908118,5.858097,8.366604,1.377993,6.918386,-8.057941,1.122115,-4.692745,7.763863,-8.586557,-3.472710,-6.847327,-3.998323,-9.456745,-0.911696,-1.617070,-8.914715,6.566309,4.901074,4.559788,-9.248630,-0.635935,-6.372382,-5.572812,-2.399403,-2.111699,-6.306650,-5.311483,-7.091814,0.258153,-6.357070,-7.489756,7.041043,-9.961278,1.687931,7.217366,1.607228,0.539683,-7.827525,-8.080374,4.010707,7.870942,5.189720,-3.121555,-6.283626,-7.831733,-6.375234,6.320365,5.916661,-7.572045,2.091290,-6.805718,7.363951,5.852700,6.158124,-3.771763,-8.890197,-8.957378,1.788711,-4.734551,-1.026617,-0.812853,5.131816,-6.762560,4.726511,3.579502,-7.836825,-2.554129,-5.993005,4.271703,9.024203,-6.836582,3.097382,9.348145,5.809442,-5.116109,8.223182,-9.553005,-6.070284,1.316524,3.563652,3.013489,-2.510034,4.455485,8.421931,-7.074450,-3.159242,-2.092933,6.453582,-8.083377,5.342425,4.602098,1.886785,-9.118971,-1.501934,-2.014368,-5.016385,-5.869683,1.023923,5.165108,-6.967933,9.883672,-8.320252,7.754819,2.512574,6.816142,-1.281084,1.372486,-2.873203,-2.537158,4.653208,8.258614,-6.241300,-1.164710,3.246649,-0.647372,8.958872,3.659823,1.057439,-3.742455,-1.817061,-4.966561,-9.398118,1.000837,0.273347,7.060534,-2.204742,-2.834372,-1.018216,-4.737236,1.040468,-4.798591,-6.337890,-0.804028,-7.716697,-5.041662,-5.469496,1.036870,1.064069,-2.686713,-0.133117,0.260981,-1.612130,0.452148,4.184077,-8.580174,-4.524313,7.846811,-3.044016,2.175443,-3.315879,-9.643813,-9.430496,0.893562,-7.214257,-5.695823,-8.252926,6.910299,1.090599,4.722044,-9.584095,7.416479,-2.240246,6.495568,8.807230,9.810186,-8.389911,-9.471023,-7.464155,-5.462109,5.944569,0.432281,0.568289,-6.518746,-2.623399,6.584227,-3.906471,5.792540,0.033852,4.126890,8.053871,1.442966,-8.080831,-6.211857,2.013177,9.822452,4.465414,-7.445577,1.488400,-5.219770,9.824900,-5.155550,-1.015974,-7.286234,-9.243961,-5.616209,1.692848,-9.963109,-6.594497,-5.605113,0.626583,-5.939237,-6.080832,0.595614,-0.572180,7.124111,5.336607,8.597173,-9.411833,-5.551340,4.944595,-5.366277,-0.968539,9.734111,-0.077248,-4.050018,2.397870,-7.050931,-5.768460,-8.714940,7.875048,-9.573320,8.570555,5.818216,3.093649,4.869542,-7.927670,6.454624,-6.818436,7.434035,-8.632387,-5.305563,4.179881,-2.279296,9.341054,-1.619168,-0.705182,2.354333,-4.795051,3.373812,-3.438326,-0.662830,0.003510,0.711670,-8.332089,-2.316008,0.952377,7.540038,0.990311,-9.645542,-5.914748,-0.353115,8.489059,-0.634541,-3.924868,9.038586,-4.086648,7.189869,-8.028072,7.958395,-1.354439,5.660381,6.298168,-8.006503,-1.792951,8.345726,8.760455,-2.377684,7.619130,-6.442267,-9.675199,2.574109,0.050224,-5.288831,4.523528,1.642436,8.686811,4.047538,4.143527,-2.543151,-1.056803,-4.037443,9.132899,-7.293058,4.678806,-9.659781,5.870755,4.833512,-2.673318,-5.405280,5.540768,1.184423,-3.775790,6.456891,-9.838275,-8.568370,5.876763,-2.033626,6.586545,-0.574032,5.053805,-7.986049,-8.603022,-6.921749,-1.856328,-2.571583,-0.678176,-3.895625,1.051638,-8.737865,7.637750,-6.902431,4.432039,8.002608,-8.741940,4.793671,-2.999967,-7.172888,8.048271,-4.490522,6.564020,-0.592802,-9.474581,-6.047305,-7.501668,-8.368065,4.424710,7.699749,4.182255,2.785418,-2.990981,-8.987052,0.812158,6.157657,9.572511,-6.691114,-2.050058,-8.203974,6.631102,-8.380481,4.243461,-7.211739,-4.680727,3.906413,-1.288934,2.253055,1.085356,-9.843431,-3.125468,-4.970533,4.924701,-9.422362,5.974044,-3.152662,7.582913,-2.352422,6.832139,-4.358361,-1.273407,-7.802979,-9.698033,8.495673,6.851014,-0.493090,6.414420,9.778163,4.158358,1.413332,-7.603364,-3.494369,-7.822317,-2.234610,3.064837,9.816665,-0.013646,-3.882264,1.036977,-7.397880,7.297062,-2.982158,9.011979,2.759691,7.193437,7.625200,0.698737,-7.449234,0.493845,1.797491,4.949169,-0.340633,-8.479203,-5.778999,7.901084,-9.807688,-2.881109,3.833430,-7.831839,-9.820670,2.363215,1.992723,9.598329,5.523583,-0.085956,0.921086,0.125211,7.001564,8.279620,-2.413106,1.794794,3.743842,3.026900,4.990420,-5.723572,-2.108655,-1.735294,-7.111948,6.861227,-7.629056,-7.628393,0.042550,3.238161,-8.731407,-8.493372,9.655704,4.623133,4.830571,-8.187940,3.959377,2.621401,-7.364979,9.372486,7.574530,-6.784774,6.279202,-4.727297,7.605795,9.561347,-2.710283,-4.490096,2.802789,-2.780107,-2.338026,-2.254717,1.229886,3.811135,6.372762,-6.871900,0.048867,-2.916163,-6.025530,6.868776,-5.555735,5.153228,7.012533,2.894886,7.644201,7.958083,-8.979654,7.580265,3.321202,3.309854,-7.364512,-7.791198,9.801120,-9.739159,0.461577,7.470295,-8.956201,-6.216497,-2.008796,7.365462,9.281964,1.858584,-2.729003,-4.297761,-3.221020,-2.144011,2.917994,-8.807840,2.576756,-9.237176,8.889534,-9.685460,-4.713754,9.568699,-0.401669,2.597585,0.363591,1.213114,4.816925,-1.131955,-1.294907,-1.079773,4.830740,-0.482598,0.500789,4.511550,-6.710206,7.313787,-2.494104,4.229941,1.862012,-8.524530,1.334958,-7.014053,2.730903,-6.503640,6.944717,-3.338241,-0.906990,4.427513,3.648812,-9.269267,-2.671987,1.378130,-0.963428,-5.704949,5.551311,-4.480865,-3.993282,8.681023,7.150553,7.227507,8.830133,3.934754,-8.574266,9.957912,8.114717,2.563652,1.328579,-9.939666,0.692948,0.880821,-1.755318,-9.052201,-4.631422,-6.141936,3.679394,-5.024908,3.112610,-4.517424,-1.725288,-3.867110,3.779350,-5.897823,-4.451329,-3.250722,8.627199,-2.908963,-3.080452,-4.229677,-0.224431,-3.193736,9.257405,-7.183295,9.300887,-3.749367,1.495324,4.007159,6.829075,8.092354,8.996971,4.207094,-3.145062,-5.880629,-3.989091,0.486885,8.739787,2.422921,2.772255,-0.008057,-6.448705,-6.146625,3.922841,8.932886,1.529205,-2.405590,-7.615428,9.923459,2.544709,8.622959,5.284024,-2.652959,1.822051,6.365555,-6.685897,2.408935,-8.877155,-1.210194,6.352304,-5.012374,-5.778377,4.658924,4.512400,8.782407,-1.573970,-3.089596,-0.832173,6.071708,-7.372841,-0.135972,-3.234742,-6.191313,3.681276,-6.669913,-0.805767,-6.779937,4.022114,1.684918,-0.552892,0.591888,-1.695992,-7.210696,-1.276027,-9.965492,-1.937472,8.701113,-8.382487,-1.527121,-1.429035,-9.624819,5.442378,-9.511437,1.499722,3.271834,-2.243115,-9.303120,5.760490,2.265054,-3.744791,-4.329657,-1.622570,5.408300,6.521305,2.775706,-9.763153,-1.085851,-8.396516,-2.501192,9.456013,5.861308,-4.996535,-0.376950,6.256426,-4.800089,5.670040,-2.281704,-2.505696,-9.466026,7.891869,-2.129452,4.645057,-1.149950,5.070893,9.796633,-9.052445,-8.167124,5.496953,-2.247490,3.641225,-2.019543,-7.103935,-4.665475,1.569753,-5.200040,-9.720252,-6.471629,-1.259114,7.837728,-2.830266,-5.268915,-0.530964,4.887508,8.939882,-6.012314,-8.897836,8.474036,1.908757,-3.790157,-0.175473,-3.167547,0.470376,-5.642557,1.492696,0.144268,6.580768,-6.641028,-3.328299,0.881523,-5.367277,-4.490070,-4.191555,5.964487,-5.608790,-6.661373,-8.796717,8.402965,-3.996337,9.940354,-4.110080,7.912231,-1.656360,0.143325,1.970903,-7.616110,-7.454101,1.957855,-1.784921,-6.481951,-2.946694,8.809629,8.946450,-7.728699,2.984516,0.474105,-5.414271,9.589360,2.895223,0.573998,1.075035,-8.536461,2.093989,-9.512774,-8.181158,-3.217842,-4.341982,1.937752,-8.508088,3.457659,-4.732662,5.708063,1.442570,7.663533,5.210069,2.167017,7.965053,-9.392548,3.697504,-9.153977,-1.913679,-5.867743,7.161778,-6.163240,6.211762,5.547067,1.422391,-8.723009,9.333544,7.184858,9.308919,5.805622,-0.301830,0.550606,-1.745449,0.632467,-0.731872,8.664658,9.116090], dtype = "float32")#candidate|3109|(1638,)|const|float32
call_3108 = relay.TupleGetItem(func_1116_call(relay.reshape(const_3109.astype('float32'), [13, 9, 14])), 0)
call_3110 = relay.TupleGetItem(func_1118_call(relay.reshape(const_3109.astype('float32'), [13, 9, 14])), 0)
var_3136 = relay.var("var_3136", dtype = "float32", shape = (1638,))#candidate|3136|(1638,)|var|float32
bop_3137 = relay.right_shift(const_3109.astype('int8'), relay.reshape(var_3136.astype('int8'), relay.shape_of(const_3109))) # shape=(1638,)
bop_3143 = relay.logical_xor(bop_3137.astype('int8'), relay.reshape(call_3108.astype('int8'), relay.shape_of(bop_3137))) # shape=(1638,)
bop_3146 = relay.logical_xor(bop_3137.astype('int8'), relay.reshape(call_3110.astype('int8'), relay.shape_of(bop_3137))) # shape=(1638,)
func_618_call = mod.get_global_var('func_618')
func_621_call = mutated_mod.get_global_var('func_621')
const_3153 = relay.const([-4,4,7,6,8,-10,-4,-9,-8,8,10,6,-2,6,7,-9,-6,-1,-2,-10,-3,-1,-3,7,-3,1,9,-7,-2,-8,-2,-9,3,3,9,8,-6,-10,9,-8,4,-10,-1,-8,7,9,5,10,-10,-3,-8,4,2,-3,-3,7,-4,-10,1,-5,4,-2,6,8,6,-6,4,10,-3,-9,8,4,1,7,4,4,8,10,7,1,-1,8,6,-1,3,-7,-4,-2,-7,-8,-1,-2,6,4,-9,-7,-9,-4,-4,-5,-5,-7,5,5,-6,-4,5,5,-5,-7,1,5,-10,8,5,1,6,-10,-7,5,-10,-10,5,10,-4,4,-2,7,9,-8,-9,-6,-8,7,3,-9,-1,10,4,-5,9,-6,-10,5,-10,-4,3,-7,-8,6,-8,-6,6,4,8,-10,3,-9,3,-4,8,-4,-10,4,5,9,7,-2,-1,-4,-8,-7,-4,-3,10,-10,5,-1,-4,3,7,1,-7,-8,9,-7,-8,-7,-1,-9,-8,-3,-2,-8,-9,6,-4,9,-1,-10,-9,-9,-3,1,-7,-9,1,7,-6,10,7,1,-4,-1,-7,7,-7,-5,3,6,-6,4,-5,-1,-6,-6,10,4,-8,-8,5,-1,4,-5,-3,6,6,-7,10,3,2,1,-7,-5,-10,-1,2,7,9,-2,3,-10], dtype = "uint64")#candidate|3153|(252,)|const|uint64
call_3152 = func_618_call(relay.reshape(const_3153.astype('uint64'), [14, 9, 2]))
call_3154 = func_618_call(relay.reshape(const_3153.astype('uint64'), [14, 9, 2]))
output = relay.Tuple([call_3101,bop_3143,call_3152,const_3153,])
output2 = relay.Tuple([call_3102,bop_3146,call_3154,const_3153,])
func_3163 = relay.Function([var_3136,], output)
mod['func_3163'] = func_3163
mod = relay.transform.InferType()(mod)
var_3164 = relay.var("var_3164", dtype = "float32", shape = (1638,))#candidate|3164|(1638,)|var|float32
output = func_3163(var_3164)
func_3165 = relay.Function([var_3164], output)
mutated_mod['func_3165'] = func_3165
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3176 = relay.var("var_3176", dtype = "uint64", shape = (8, 16, 1))#candidate|3176|(8, 16, 1)|var|uint64
var_3177 = relay.var("var_3177", dtype = "uint64", shape = (8, 16, 4))#candidate|3177|(8, 16, 4)|var|uint64
bop_3178 = relay.multiply(var_3176.astype('uint64'), var_3177.astype('uint64')) # shape=(8, 16, 4)
output = bop_3178
output2 = bop_3178
func_3181 = relay.Function([var_3176,var_3177,], output)
mod['func_3181'] = func_3181
mod = relay.transform.InferType()(mod)
mutated_mod['func_3181'] = func_3181
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3181_call = mutated_mod.get_global_var('func_3181')
var_3183 = relay.var("var_3183", dtype = "uint64", shape = (8, 16, 1))#candidate|3183|(8, 16, 1)|var|uint64
var_3184 = relay.var("var_3184", dtype = "uint64", shape = (8, 16, 4))#candidate|3184|(8, 16, 4)|var|uint64
call_3182 = func_3181_call(var_3183,var_3184,)
output = call_3182
func_3185 = relay.Function([var_3183,var_3184,], output)
mutated_mod['func_3185'] = func_3185
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2127_call = mod.get_global_var('func_2127')
func_2128_call = mutated_mod.get_global_var('func_2128')
call_3195 = func_2127_call()
call_3196 = func_2127_call()
output = relay.Tuple([call_3195,])
output2 = relay.Tuple([call_3196,])
func_3204 = relay.Function([], output)
mod['func_3204'] = func_3204
mod = relay.transform.InferType()(mod)
output = func_3204()
func_3205 = relay.Function([], output)
mutated_mod['func_3205'] = func_3205
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2127_call = mod.get_global_var('func_2127')
func_2128_call = mutated_mod.get_global_var('func_2128')
call_3223 = func_2127_call()
call_3224 = func_2127_call()
output = relay.Tuple([call_3223,])
output2 = relay.Tuple([call_3224,])
func_3227 = relay.Function([], output)
mod['func_3227'] = func_3227
mod = relay.transform.InferType()(mod)
output = func_3227()
func_3228 = relay.Function([], output)
mutated_mod['func_3228'] = func_3228
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1615_call = mod.get_global_var('func_1615')
func_1616_call = mutated_mod.get_global_var('func_1616')
call_3232 = func_1615_call()
call_3233 = func_1615_call()
output = relay.Tuple([call_3232,])
output2 = relay.Tuple([call_3233,])
func_3239 = relay.Function([], output)
mod['func_3239'] = func_3239
mod = relay.transform.InferType()(mod)
mutated_mod['func_3239'] = func_3239
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3239_call = mutated_mod.get_global_var('func_3239')
call_3240 = func_3239_call()
output = call_3240
func_3241 = relay.Function([], output)
mutated_mod['func_3241'] = func_3241
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3239_call = mod.get_global_var('func_3239')
func_3241_call = mutated_mod.get_global_var('func_3241')
call_3242 = relay.TupleGetItem(func_3239_call(), 0)
call_3243 = relay.TupleGetItem(func_3241_call(), 0)
func_275_call = mod.get_global_var('func_275')
func_280_call = mutated_mod.get_global_var('func_280')
var_3245 = relay.var("var_3245", dtype = "float64", shape = (1320,))#candidate|3245|(1320,)|var|float64
const_3246 = relay.const([[1.134886,4.067694,9.035534,-1.781734,4.369768,3.063747,-0.241724,1.389625,7.545972,-6.792969,-9.490624,5.235865,-0.313922,-0.949986,-9.677263,4.921980,-8.366831,8.480026,9.198250,2.602691,4.582031,-3.730160,-6.300790,1.238059,2.161930,2.586312,-5.666186,7.032250,2.839516,3.387926,-4.345216,4.073581,-7.560366,-5.271412,-2.225168,-5.385749,-1.493593,4.592449,-1.977558,-2.379980,-2.202213,3.030659,8.407198,0.832248,2.431711,-5.028821,-3.933028,-6.027677,-3.726569,-6.185462,-4.773029,-0.093565,8.995402,2.887192,-6.188640,4.997072,5.919847,-8.514789,9.837268,8.862247,-3.149447,-6.975588,1.474288,2.745295,0.711584,0.899076,4.819006,8.563998,1.108420,-7.911852,-0.285731,0.194312,7.259996,-6.984769,2.507954,3.057524,8.993302,-0.230423,-6.188214,0.562758,8.927337,-9.893500,-6.532863,2.501537,-8.474486,-1.197202,4.737110,8.903395,4.030867,-4.384409,4.204209,-2.088712,1.956739,-5.076943,5.838429,-9.109442,-8.318317,7.933355,-9.768466,-6.994612,-0.329822,8.819575,-0.649402,-3.819983,7.211796,7.681448,-6.355049,0.282770,-0.778985,-2.142930,2.681964,3.105909,4.177287,3.185009,9.050001,-4.633717,-0.398062,-5.882266,-6.095248,-8.374758,0.721434,7.094347,7.641299,0.510637,-9.278543,2.305508,-5.004303,1.001746,9.892363,1.884957,-2.831196,1.788750,-5.207129,-2.518657,-5.567483,-3.591194,-1.584678,-6.637801,-7.594917,5.281208,0.179216,3.905361,8.771325,6.316509,5.915863,-0.351917,-2.662794,-1.920348,6.397415,-2.809277,1.005380,6.426630,-6.240110,1.588989,4.111424,2.197180,-7.498666,5.747817,9.417307,-5.644356,7.441701,-5.404654,-6.203237,-8.913746,7.401258,-8.143374,9.737540,-8.082159]], dtype = "float32")#candidate|3246|(1, 168)|const|float32
call_3244 = relay.TupleGetItem(func_275_call(relay.reshape(var_3245.astype('float64'), [11, 15, 8]), relay.reshape(const_3246.astype('float32'), [168,]), relay.reshape(var_3245.astype('float64'), [11, 15, 8]), ), 2)
call_3247 = relay.TupleGetItem(func_280_call(relay.reshape(var_3245.astype('float64'), [11, 15, 8]), relay.reshape(const_3246.astype('float32'), [168,]), relay.reshape(var_3245.astype('float64'), [11, 15, 8]), ), 2)
const_3254 = relay.const([[[True,False,False,True,False,False,True,False],[False,True,False,True,False,False,False,False],[False,False,False,True,False,False,True,False],[False,False,False,False,True,False,True,False],[True,True,True,True,False,True,False,False],[False,False,False,False,False,False,False,False],[False,False,False,True,False,True,True,True],[True,True,True,False,False,False,True,True],[False,False,False,False,True,False,False,True],[False,False,False,True,True,False,True,True],[True,True,False,True,False,False,False,True],[True,False,False,True,False,True,False,False],[True,True,False,True,True,True,False,False],[True,False,True,False,True,False,False,False],[False,False,True,False,False,False,False,False]],[[False,False,True,False,True,False,True,False],[True,True,True,False,False,False,False,False],[False,True,False,True,False,False,True,False],[True,True,False,True,True,False,True,True],[False,True,True,True,True,False,False,False],[False,True,False,False,True,True,False,False],[False,True,True,False,True,True,False,False],[False,True,False,True,True,True,False,False],[False,True,True,True,False,True,True,False],[True,False,False,False,True,True,False,True],[False,False,False,True,True,False,False,True],[True,False,False,True,True,False,True,False],[True,False,True,True,False,True,True,True],[True,False,True,False,True,False,True,True],[False,True,False,True,False,False,False,True]],[[False,False,False,False,False,True,False,True],[False,True,True,False,False,False,True,True],[False,False,True,True,False,True,False,False],[False,True,True,False,True,True,False,False],[True,False,False,True,False,False,True,False],[True,False,False,False,False,True,True,True],[True,True,False,False,False,True,False,False],[False,False,True,True,True,True,True,True],[True,True,False,True,True,True,True,True],[True,True,True,False,False,False,True,False],[True,True,False,True,False,False,False,False],[False,True,False,False,False,True,True,True],[True,True,True,False,True,False,True,False],[False,False,False,False,True,True,False,False],[True,False,False,True,True,False,False,True]],[[True,False,True,True,True,False,False,False],[False,True,True,True,False,False,True,False],[True,False,False,False,True,True,False,False],[True,False,False,False,False,False,False,True],[False,True,False,True,False,True,False,False],[False,True,True,False,True,False,False,False],[False,True,False,False,False,True,False,True],[True,False,False,False,False,False,True,False],[True,False,False,True,True,False,True,True],[True,False,False,False,True,False,True,True],[True,True,True,True,False,False,True,False],[False,True,False,True,True,True,True,False],[True,True,False,False,True,True,False,False],[False,False,True,True,False,False,False,False],[True,False,True,False,False,False,False,False]],[[True,False,True,False,True,True,True,True],[False,True,True,False,False,True,False,False],[True,True,True,False,True,False,False,True],[False,True,True,False,False,True,False,True],[True,False,False,False,True,True,True,True],[False,True,True,False,False,False,True,False],[True,False,False,True,False,False,False,False],[True,True,False,True,False,True,True,True],[True,True,True,False,False,True,True,False],[False,True,False,False,True,True,False,False],[False,False,True,False,False,True,True,False],[False,True,True,False,False,False,True,True],[True,True,True,True,False,True,True,False],[False,False,False,True,True,True,True,True],[True,True,False,False,False,True,False,True]],[[False,True,True,True,False,True,False,True],[False,False,True,False,True,False,False,True],[False,False,False,False,True,True,True,True],[False,True,True,True,False,True,False,True],[False,True,False,False,False,False,False,False],[False,True,False,True,True,False,False,False],[True,False,False,False,False,True,True,False],[True,False,True,True,True,True,False,False],[True,False,False,True,True,False,False,True],[True,False,True,True,True,True,True,False],[False,True,False,False,False,False,False,True],[False,False,True,False,True,True,False,False],[False,False,False,True,True,False,False,False],[False,True,True,True,True,False,True,True],[True,False,True,False,False,True,True,False]],[[True,False,False,True,False,False,True,False],[True,True,True,False,True,True,False,False],[True,False,True,False,False,True,True,False],[True,False,False,True,True,True,True,True],[False,False,False,False,False,True,False,True],[True,True,True,False,False,False,False,True],[False,False,True,False,True,False,False,False],[False,False,True,False,False,False,True,False],[False,True,False,True,False,False,False,True],[True,False,False,True,False,False,True,False],[False,False,False,True,True,True,True,True],[True,False,True,True,True,False,True,True],[True,True,False,False,True,True,True,False],[True,True,False,True,False,True,True,False],[True,True,False,False,False,True,False,False]],[[False,True,True,True,False,True,False,True],[False,True,True,False,False,True,False,True],[False,False,False,False,True,True,True,True],[False,True,True,True,False,True,True,False],[True,False,True,True,True,False,False,False],[True,False,False,True,True,False,False,True],[True,False,False,False,True,True,True,True],[False,True,False,False,False,True,True,True],[False,False,False,True,False,True,True,True],[True,True,False,False,False,False,True,True],[False,True,True,True,False,True,True,False],[False,True,True,False,True,False,False,True],[False,False,False,True,True,False,False,False],[True,True,False,True,True,False,False,False],[True,False,True,False,True,False,False,True]],[[False,True,True,True,True,True,False,False],[False,False,True,True,False,True,False,False],[False,False,True,False,False,False,False,False],[False,True,False,True,False,False,False,False],[False,True,True,True,True,True,True,True],[True,False,False,False,False,False,False,False],[True,True,False,True,True,False,True,True],[False,True,False,False,False,False,False,False],[False,True,True,True,False,True,False,True],[True,False,True,True,True,True,False,False],[True,False,True,False,True,True,False,True],[False,False,True,False,True,True,False,True],[False,False,False,False,True,False,True,False],[False,True,False,True,False,False,True,True],[False,True,False,True,False,False,False,False]],[[False,True,True,True,False,True,False,False],[True,False,False,False,False,False,True,True],[True,True,False,True,True,False,True,True],[True,True,True,True,True,True,True,True],[True,False,True,True,False,True,False,True],[False,False,False,False,False,True,True,True],[False,False,True,True,False,False,False,True],[True,True,False,False,True,True,True,False],[False,False,True,False,False,True,True,False],[False,True,False,False,False,False,False,False],[False,True,True,False,True,False,True,False],[True,True,False,False,False,True,False,False],[False,False,False,False,True,False,False,True],[True,False,False,False,False,False,False,False],[True,False,False,False,False,True,False,True]],[[False,False,False,True,True,False,True,True],[False,False,True,False,False,True,True,True],[False,True,True,False,True,False,True,False],[False,True,False,False,True,False,True,True],[False,True,False,False,False,False,True,False],[False,True,False,False,False,False,True,False],[True,True,True,True,True,False,True,True],[True,False,True,False,False,False,False,True],[False,False,True,False,False,False,False,False],[True,True,False,False,True,False,False,False],[True,True,True,False,True,True,True,True],[True,False,True,True,False,True,False,False],[False,True,False,False,False,True,True,True],[False,True,True,True,True,False,True,False],[True,True,False,True,False,True,False,True]]], dtype = "bool")#candidate|3254|(11, 15, 8)|const|bool
bop_3255 = relay.greater_equal(call_3244.astype('bool'), relay.reshape(const_3254.astype('bool'), relay.shape_of(call_3244))) # shape=(11, 15, 8)
bop_3258 = relay.greater_equal(call_3247.astype('bool'), relay.reshape(const_3254.astype('bool'), relay.shape_of(call_3247))) # shape=(11, 15, 8)
func_3163_call = mod.get_global_var('func_3163')
func_3165_call = mutated_mod.get_global_var('func_3165')
const_3263 = relay.const([-6.079811,-7.762453,1.662930,4.813130,-0.819259,0.159301,4.991882,2.682497,-3.203721,-4.827669,-7.906226,-9.163499,5.434664,5.670506,7.240614,-0.811761,0.213210,-2.448453,-4.736683,-2.559083,-4.573637,-1.470629,-9.022377,-1.037632,-0.788801,9.787346,0.095248,-1.540989,3.996315,2.172933,-5.310933,-0.131928,1.356736,-3.289567,-7.938476,-6.214699,-6.816488,-5.127821,9.445044,-8.551900,9.648867,-6.725649,5.958499,-4.631731,-2.772776,3.803100,1.521159,-0.541261,-2.836981,-1.476459,1.548693,7.778686,-0.645812,-3.315764,-0.466580,4.308576,1.238085,-9.308981,-3.066394,6.385526,1.781743,3.462171,-0.844784,2.213198,9.621006,8.064117,-0.604326,-4.435096,-3.538474,-8.749668,5.735619,-6.253961,9.829092,-3.614494,6.516193,-8.870451,-9.305899,-4.699121,-2.250847,-4.092737,4.858735,-1.283175,-7.629960,-9.922607,-5.100548,-8.307430,8.574520,-8.171840,1.774122,-2.169823,-4.475269,1.639244,0.101219,0.703239,0.510400,3.050418,0.803594,2.560061,-0.509436,-2.710505,-7.614965,5.123575,0.957178,3.990526,-1.181766,-1.726283,-7.411867,4.852814,7.788281,0.686387,-8.632891,2.881695,7.855423,-9.948049,5.747103,-9.754064,8.052642,7.222009,0.279680,3.322283,-1.412929,-5.618454,-4.989999,-2.662670,-9.425466,-4.292867,-4.986679,-6.142930,-2.054639,-0.095245,0.166813,-7.528737,-0.307563,5.361694,-4.899603,8.907546,-9.320421,8.013726,8.941428,-3.889198,-4.306285,7.631428,8.556325,-6.850737,-5.034636,2.094815,9.448017,-8.249442,7.558929,4.381027,-3.119774,-0.313833,-2.169000,3.298118,-0.335722,0.070444,9.863123,8.767807,-1.214638,-8.669877,-4.592793,-3.545056,1.793400,1.030291,-7.204025,-8.596706,2.723909,-0.766252,6.106807,-4.067333,6.959571,-2.226618,-3.528648,5.783880,7.984896,7.943059,7.416311,9.365905,-7.410254,2.065001,9.142358,1.593329,4.914693,-5.027586,-9.029982,-4.105282,-5.818292,-2.311839,-6.187683,2.906756,2.773214,-9.361884,-0.660034,-6.588152,-0.125056,9.529027,1.642104,7.495779,-2.356848,3.427228,-6.353253,6.884832,-4.365969,7.374497,5.312233,-3.080148,1.317591,-5.920235,-1.716965,-5.968634,-7.051593,-7.841870,-7.814620,-9.669032,7.712498,3.674369,1.009018,-9.720206,-8.215312,0.876252,-4.113611,3.616971,-6.449815,3.434681,-9.395622,5.662040,-3.152216,-0.757133,1.275813,2.899695,3.543800,-8.498857,4.948715,-2.012856,-1.027881,-3.489416,-3.966361,-6.626956,7.387873,8.905081,9.799846,-0.067500,9.003211,5.996858,-7.913771,4.746953,6.414846,-9.113676,4.382636,9.046250,-6.246783,-4.603564,7.875036,7.204716,4.961262,-0.121847,-9.099009,-9.542239,4.787771,-9.226866,-2.712493,4.737369,-9.606639,5.125247,0.548532,2.042092,-0.287180,-9.530177,7.420148,-8.806404,-5.529315,1.871037,0.953865,-5.331848,8.015612,-4.871267,9.162759,-8.948413,-6.672313,9.563127,-2.038799,3.017328,-8.389767,-6.295744,-6.454197,-5.234325,3.940470,1.507030,3.751463,4.849431,-2.856025,1.288617,-4.022578,6.490884,8.006076,-4.491882,-8.000845,-0.375799,6.834718,-6.311920,8.802367,-5.763812,-2.932022,2.517536,-1.284527,8.686928,7.751661,-1.631150,-5.897740,-1.447310,-9.002614,8.290996,-8.312283,6.812194,-8.584700,4.487197,7.173190,-3.310496,9.625154,0.360890,-9.980197,4.363923,4.499319,9.797030,5.642394,0.434710,-3.791214,-7.457578,-3.124075,-0.656700,0.821084,-0.208503,-1.580407,8.516530,9.541691,0.131049,5.424402,6.365021,-6.885392,-0.752480,-9.126908,5.361595,-1.909030,2.981548,1.132248,4.398561,-5.930266,0.258569,-4.943200,-4.753196,-9.074253,5.940265,-9.419160,-1.577072,-9.006738,7.491076,6.145136,2.561839,-2.089740,-4.342839,4.016772,2.954795,-7.069867,-9.477154,5.775597,-5.616395,-3.783725,2.092681,-0.819243,2.699764,-7.957679,5.115727,8.782166,0.396418,3.065167,0.623751,5.487149,-3.035866,-9.472806,-5.262551,-5.080804,1.266170,-7.184978,6.292539,-4.105002,4.908327,0.226528,-5.603329,-5.410475,8.801853,-6.079050,-2.154402,6.179013,7.438487,2.099743,8.144316,-4.883712,-0.817856,3.432681,9.084689,-0.778797,-8.854354,5.652263,-8.708906,-3.016204,9.921961,-0.984486,-9.488434,9.649296,2.969168,2.301624,-4.769582,4.714250,-8.137576,-6.079572,4.374454,1.224230,2.579575,-8.722630,-2.370127,3.764811,7.148219,4.996997,6.098060,6.210428,3.223115,1.124554,-4.033701,-1.844178,9.409404,-6.511161,2.195002,-2.394841,-1.202392,-6.053088,9.498511,7.429973,4.542895,-6.485420,0.148769,-0.539261,-4.277226,-7.795642,-9.503778,3.140302,6.921986,-3.297450,4.654288,0.783910,-4.297810,-0.563496,9.141622,-8.671555,-2.412847,9.260510,1.576904,-8.041754,9.180809,-0.616950,0.538699,5.144873,-0.747698,8.335181,-1.701108,2.032135,-3.418536,-6.772988,6.796365,7.580043,9.816950,1.562497,-3.986371,-5.864145,-2.205712,7.919889,2.983763,3.442483,6.095500,9.000161,3.371289,-3.862512,0.723163,-1.212692,8.968365,-9.022098,-9.443583,7.712799,-9.908664,9.278228,9.318847,-7.169129,9.328537,-1.765043,5.485853,1.865093,-2.242705,-5.890136,-5.995292,1.741234,-8.435369,3.729044,6.603847,0.744633,-7.344643,9.808840,-1.827768,-6.379097,7.928064,-7.757834,1.167667,8.029697,4.251231,0.974164,-2.020623,7.394438,-7.063517,-9.698017,-9.542607,9.212242,-4.877863,-2.767692,7.507037,-2.224199,6.088365,3.841041,-2.026346,-4.378679,-2.279488,-3.821559,-0.623138,-5.858621,-6.983290,7.426637,-8.691076,8.957901,0.195723,7.475066,1.518326,5.903501,-6.830782,2.775246,6.674643,-8.062090,7.226554,1.622707,4.449722,-8.135894,-7.025045,-9.343468,7.692890,1.779886,3.403709,2.720878,-4.373583,6.213289,9.025387,-0.818064,-8.518296,-6.842052,4.701570,-8.061557,6.521397,-6.580297,-2.126016,0.730192,-9.324172,-1.276098,8.334024,-3.712843,-1.430623,9.822076,-9.260862,-8.083871,-1.894141,-3.291813,-2.261543,-9.768510,-0.154569,7.561629,5.106821,-5.754897,7.738675,1.290026,-0.578755,9.536795,9.391572,-4.124726,-6.816918,8.326705,1.647161,-3.071249,-4.582881,-4.460337,8.280132,6.620207,-7.828295,-8.876032,-2.933402,-3.259437,-1.874589,1.744959,-1.962082,7.098545,-3.174716,-4.628795,8.385142,-3.770944,4.996430,-5.559190,-9.317563,-9.332513,3.541816,2.187124,-0.714738,-8.569377,1.441519,3.901152,4.934147,-2.498876,9.808568,1.573156,3.951847,-3.248373,-2.309061,9.133872,-2.044070,5.719805,-0.429901,5.033642,6.726941,6.185178,8.802597,-7.914483,-3.289518,-2.682441,4.630740,-6.206353,3.047830,-0.168651,8.382934,0.239630,4.211840,9.725193,9.581953,-5.552255,-6.736237,5.004991,-4.998560,-3.276366,-7.460522,-0.613019,-3.280200,-0.682968,7.493256,-6.477737,-6.404727,-0.003626,-3.928864,2.208691,-4.882749,-8.314509,-4.660728,-2.678706,-8.701717,8.363941,-5.868993,-9.023159,-3.974527,-4.968773,9.785022,-2.200198,-0.611143,4.318674,-2.362652,-6.652306,8.380613,8.432136,-8.854243,-4.113576,-8.866164,5.660960,-8.423325,4.426928,-7.692211,-4.312781,-6.030383,8.669297,-8.319393,-9.589364,-6.189705,8.003530,0.663411,3.852038,9.695613,-6.671403,1.835439,-2.200033,-8.725613,-3.164218,7.442023,-3.806927,5.223639,1.760095,8.177835,-4.319916,-3.129539,1.090981,-0.532847,-8.174325,-7.590896,2.920457,-3.026879,2.948004,9.225044,-5.972206,8.818186,8.327797,-7.689371,-1.743072,-9.500867,9.862535,-0.370936,-4.494959,9.593309,-3.343268,-7.163867,5.140883,1.053266,9.198999,-0.911753,-4.919661,-2.805524,-8.481389,-2.200877,-2.919627,8.804362,6.973048,-5.375445,-3.886386,-7.956826,-1.326122,-9.876599,-0.689653,-1.808105,7.767921,1.145985,-7.461374,9.232896,-5.649366,9.918808,-8.706906,7.730464,3.721320,1.400832,5.401522,-4.617819,-6.733978,-0.559285,3.966294,-9.648109,3.507416,-6.887357,-2.157486,2.740418,9.791182,4.929856,0.818668,3.119879,6.336741,8.710297,5.795101,-0.857148,-0.655641,-6.955619,4.373477,-8.666415,-2.075382,6.525480,-3.908473,4.040659,2.293275,6.522701,3.051949,3.232590,-2.782672,-5.813436,2.581563,8.472324,8.674484,5.784294,6.587529,0.037448,-3.302922,-2.065285,1.814351,-2.739422,-4.659206,-1.994998,-6.174679,-9.901206,-5.064999,-5.866765,7.890699,6.913705,6.065611,-4.520008,0.063291,-5.355394,-0.487624,-1.037173,1.247367,-3.050565,1.638475,8.559980,0.130550,-4.841426,-0.640232,5.111982,-9.464643,-0.081907,0.280191,-2.717564,4.139144,-5.860760,0.365275,2.167037,3.643823,5.824782,-1.316256,-9.385040,-0.337456,7.694263,-3.820203,4.924283,-2.711879,-7.116062,-8.243205,-8.644201,-7.412619,5.183190,2.842071,-8.173727,-4.928901,3.834418,-7.877971,-1.696546,-3.288910,-2.090859,-7.116636,-2.756121,7.288516,-7.429055,6.866864,7.540460,4.629664,-5.304485,-3.535596,3.069243,-5.530459,3.917030,9.133614,2.430233,-0.566361,-2.937673,2.983790,5.208187,6.336261,-0.134955,-8.261149,-5.107845,-1.350147,-7.447118,2.632547,-1.795234,0.505225,0.319432,8.806614,-7.712618,-8.680464,0.128712,5.926154,-8.872344,-5.323727,-7.645128,3.901646,9.196288,4.858540,-1.932995,3.203672,-3.673696,-0.047077,1.627620,-0.345942,9.778175,-8.443031,8.673502,7.902975,5.358901,-8.195783,-1.802012,-4.331150,-6.161894,-5.632616,4.518419,0.059947,-6.981830,5.976590,0.795830,6.565461,-8.675824,9.931857,-9.642894,4.600928,7.382174,1.545653,3.573574,5.196140,8.783193,-2.028949,2.335872,-7.855512,-3.171730,-1.161646,2.960856,-7.258207,6.059165,3.642601,7.178789,9.720635,5.857269,-2.488282,2.738228,-4.968711,1.911758,2.326319,-0.974681,-1.247863,6.118423,-0.047555,1.980792,-2.714239,7.138316,-1.006127,-0.699260,0.102717,-2.635437,5.756920,3.136715,-0.113539,-2.492072,8.183355,4.594928,4.332060,-4.734987,8.108946,2.685432,1.805605,-1.617748,0.843158,8.715870,-1.427138,-1.857777,8.452702,7.485371,5.023009,5.789865,-3.930384,-3.249225,6.045821,3.450169,-8.242819,-3.433382,3.042080,8.932634,-6.817828,8.382240,-9.151182,-9.671632,9.511792,5.273573,8.719752,-6.604422,1.926226,-6.999510,8.287003,-4.710826,-8.489312,2.122871,3.937957,-3.391711,-6.119305,-4.613401,1.796108,-9.914545,-0.298390,4.356400,6.831557,2.415239,2.092790,1.948765,1.787733,-9.708268,3.393220,-1.983034,0.742360,-1.793095,-0.899608,-1.582887,1.607805,2.688658,1.611740,3.005963,-4.546253,4.500029,-0.658932,-6.396357,-7.478953,6.509440,3.564892,-5.486498,-8.710274,-0.993451,9.546997,3.485405,7.319161,-2.225982,7.754344,5.233517,-3.056481,9.370129,-0.740122,4.067619,9.031549,-3.371555,-1.525083,1.080420,6.878995,5.866934,-4.941888,5.000488,0.078561,-7.926221,3.877379,-4.959544,3.073136,7.512877,-9.145001,-6.546080,8.444209,-8.322262,-0.491114,5.679893,5.138779,-1.668636,0.031861,6.649062,-7.321956,9.410497,-3.960183,6.874672,-8.194402,4.667183,3.911147,-0.995045,-4.771494,-1.088292,-5.556271,-6.133693,0.808466,5.053714,-0.377566,9.155383,4.160299,-0.395346,0.682263,1.098313,-3.957917,-1.377161,-6.709300,1.973815,6.969786,8.295530,7.008955,7.915108,0.031253,2.280022,1.131959,-0.886505,0.653883,-1.292262,-5.457386,-9.680936,-0.177346,5.411335,0.451192,0.594940,-3.414179,-9.697516,-5.247239,-3.773094,1.528586,9.784248,5.680013,8.463691,8.822184,8.977108,5.818305,-7.892258,-3.387823,-2.015502,-6.597371,-7.703560,9.081768,-5.051999,-0.836309,6.882468,-1.367126,-0.935181,-5.550799,5.314002,-0.015283,9.299770,-3.609871,6.273277,5.738174,7.428178,-7.841669,5.549207,-7.265118,7.544430,-5.326933,-8.059283,-4.482486,-0.755739,-5.341862,-1.370333,-4.152697,-7.414261,6.380172,4.674549,-5.641398,3.155554,-8.766332,-2.121041,-2.567459,1.975700,-3.736914,-4.998091,6.869152,9.979193,-1.667126,-6.307835,0.521085,7.669222,-4.506218,-8.860041,7.470570,0.649389,-6.323876,0.298051,-8.388370,2.924391,-6.952678,7.159030,9.544824,-2.965251,-5.794643,-3.467372,8.686394,-1.010431,7.818858,-0.904303,-4.192773,-7.053927,4.083607,-8.157304,1.072815,-2.345951,8.939943,1.349930,-6.428725,-3.106693,-0.041522,8.172132,-4.177255,9.082962,-6.032512,4.350036,-7.439792,4.789667,4.486514,2.573602,1.424572,-4.740782,3.183893,8.672895,4.853976,-1.008584,0.611045,-1.844180,1.492076,1.121972,2.378461,8.957802,-5.412901,-1.510436,-8.316202,-6.819563,6.608607,-1.086753,-9.524972,2.606847,5.238694,3.840293,7.751004,-4.848600,-7.332201,-7.680737,-0.415562,4.248871,-8.842728,-7.952804,8.691169,-4.033287,-2.785564,2.856816,9.408773,-6.480005,-2.372271,0.134335,8.754366,-9.507608,6.628078,-8.326473,-6.782153,-7.835856,8.007633,5.782286,-2.956870,6.045023,-6.197355,2.873327,0.355662,-7.683761,-3.845446,6.140977,-9.447172,0.235974,-7.898999,4.340941,5.099570,1.369322,2.340087,5.001307,2.869149,-0.022414,1.614282,6.371234,4.767151,-9.172493,1.857882,-3.844786,2.195488,7.495425,8.521066,8.818872,-7.333764,0.675895,1.165487,1.932365,1.137946,8.429887,-4.257709,-4.034544,-4.896887,5.895789,-1.179779,0.873953,0.987578,-6.137938,-0.113636,2.174899,-5.284148,-0.349785,6.318769,-7.834099,8.885118,6.437597,-2.816901,6.221010,-7.267505,-7.183109,-5.902684,-9.575160,-2.419210,-5.791995,-6.229772,-0.469708,-8.244423,7.596195,-6.752911,3.624895,1.716164,7.947110,-7.118743,-0.572909,3.940691,3.968731,7.801296,0.128303,-1.351678,-2.739479,7.812755,-8.675215,2.797509,2.788857,3.911568,4.565399,2.831675,0.817131,3.539396,-9.214465,-9.803495,5.312336,-0.676726,-0.859020,-9.148650,7.913076,5.207612,-4.552709,0.543438,-1.856693,-4.338011,8.808395,6.812521,1.455452,5.080876,2.339578,4.170236,5.525589,-0.744415,5.946802,-1.089433,-0.936002,-0.286900,-7.196807,9.103559,-5.767193,-1.141041,6.568488,-0.187312,-5.861771,3.744481,-2.869935,-9.956846,-2.954595,6.413136,-6.755512,-6.593619,7.898513,5.861076,6.725166,-8.872764,-7.719238,3.931743,-5.062901,-6.424574,7.046235,1.923474,-0.089095,3.475492,-0.913217,-9.769651,-3.853494,1.506067,2.120089,6.462292,7.027316,2.318283,-0.342083,-4.014298,-4.356263,-9.742970,-8.651929,4.147211,8.357659,0.077755,3.046522,-0.188119,-3.595007,2.490229,-1.700381,-8.333362,6.886122,7.439528,6.007500,-1.762306,-6.399863,7.377673,-5.228843,-0.605122,-0.709243,2.608086,6.413834,3.954186,-4.534825,-9.035653,-8.763888,-7.837710,-8.644824,0.559145,9.472017,5.773960,-2.393935,-6.153023,-2.261307,0.407954,-9.350705,-6.281521,-8.725035,-9.468210,0.788683,-9.270630,0.458905,8.560775,-9.721820,3.832509,-8.693662,-3.336469,-8.333944,-3.024215,8.108395,0.286534,-0.194105,3.600423,7.104652,8.921581,-8.488767,-3.065951,6.724362,3.644977,2.969664,7.358608,-2.770412,-1.628025,3.644635,2.796870,-3.144427,-2.145723,-5.438531,-0.693426,7.388839,-8.741122,4.842978,-7.564087,-9.231114,-7.431053,-2.758207,-7.254547,1.475260,1.605807,6.075958,3.897489,6.024160,-1.527153,-6.805974,-6.887746,9.810627,5.277668,8.279374,8.679622,-6.688280,3.771513,6.143912,1.618988,0.318387,4.954255,0.020528,-5.250949,9.317812,-6.199682,7.480739,5.616838,-5.642747,5.119101,-6.226535,0.264643,5.200333,-4.451416,-2.019558,3.703089,-7.342506,-2.234318,-4.069147,3.852189,-7.230172,6.099283,-4.153777,-6.690589,3.302147,-4.714131,-5.412724,-9.496665,4.677689,-4.770787,-1.891016,7.236113,0.610993,-4.055135,-3.771374,4.603517,-5.707398,9.002829,6.511975,9.763984,6.287557,3.385054,4.000384,6.261064,-5.285699,8.086715,-5.080807,2.280375,-3.408948,4.002143,3.104889,1.562981,3.088135,-3.189705,-5.348597,0.270084,-9.024339,3.794517,2.370339,-8.012902,3.521982,-8.318885,-1.513533,8.377406,-2.289759,4.881593,8.479085,1.959045,5.096481,2.844288,7.364716,-0.393987,3.646446,6.866210,-9.672328,-7.468685,8.127081,8.346761,6.028516,0.658503,5.966735,4.940207,4.718477,7.881976,2.798939,0.458979,-7.213309,-3.335698,5.471924,-5.966828,9.095309,1.440563,0.281915,-6.744521,2.140938,-8.289487,-5.049845,8.824304,-0.420307,3.654857,-6.870757,-9.999360,-2.917496,-6.480673,6.681444,8.822996,-6.497853,5.371770,-4.855981,-2.933791,0.560103,-4.581929,-4.477521,-8.447402,1.035531,-0.024711,-8.745214,-9.934001,9.651668,-1.686538,0.088277,2.590743,9.568385,8.417311,-9.689117,6.905700,6.647468,-0.666782,-0.752837,-6.625571,-9.800609,4.405088,-9.120312,3.287051,-2.574199,-0.796583,0.158288,6.213474,-1.774872,-3.865661,-1.239105,4.580355,-2.800291,-2.728347,-1.729798,-2.046200,8.494583,3.093315,8.600428,-5.411112,-8.708067,6.504598,-8.005052,-1.728929,0.764363,-6.110715,4.398145,1.772865,2.126589,-3.198389,8.758635,-4.195620,-5.653894], dtype = "float32")#candidate|3263|(1638,)|const|float32
call_3262 = relay.TupleGetItem(func_3163_call(relay.reshape(const_3263.astype('float32'), [1638,])), 3)
call_3264 = relay.TupleGetItem(func_3165_call(relay.reshape(const_3263.astype('float32'), [1638,])), 3)
func_2652_call = mod.get_global_var('func_2652')
func_2654_call = mutated_mod.get_global_var('func_2654')
call_3265 = relay.TupleGetItem(func_2652_call(), 4)
call_3266 = relay.TupleGetItem(func_2654_call(), 4)
func_2127_call = mod.get_global_var('func_2127')
func_2128_call = mutated_mod.get_global_var('func_2128')
call_3274 = func_2127_call()
call_3275 = func_2127_call()
func_2127_call = mod.get_global_var('func_2127')
func_2128_call = mutated_mod.get_global_var('func_2128')
call_3280 = func_2127_call()
call_3281 = func_2127_call()
output = relay.Tuple([call_3242,var_3245,const_3246,bop_3255,call_3262,const_3263,call_3265,call_3274,call_3280,])
output2 = relay.Tuple([call_3243,var_3245,const_3246,bop_3258,call_3264,const_3263,call_3266,call_3275,call_3281,])
func_3283 = relay.Function([var_3245,], output)
mod['func_3283'] = func_3283
mod = relay.transform.InferType()(mod)
var_3284 = relay.var("var_3284", dtype = "float64", shape = (1320,))#candidate|3284|(1320,)|var|float64
output = func_3283(var_3284)
func_3285 = relay.Function([var_3284], output)
mutated_mod['func_3285'] = func_3285
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2127_call = mod.get_global_var('func_2127')
func_2128_call = mutated_mod.get_global_var('func_2128')
call_3302 = func_2127_call()
call_3303 = func_2127_call()
func_3227_call = mod.get_global_var('func_3227')
func_3228_call = mutated_mod.get_global_var('func_3228')
call_3305 = relay.TupleGetItem(func_3227_call(), 0)
call_3306 = relay.TupleGetItem(func_3228_call(), 0)
var_3320 = relay.var("var_3320", dtype = "float32", shape = (16, 2, 4))#candidate|3320|(16, 2, 4)|var|float32
bop_3321 = relay.greater_equal(call_3302.astype('bool'), var_3320.astype('bool')) # shape=(16, 2, 4)
bop_3324 = relay.greater_equal(call_3303.astype('bool'), var_3320.astype('bool')) # shape=(16, 2, 4)
func_1783_call = mod.get_global_var('func_1783')
func_1785_call = mutated_mod.get_global_var('func_1785')
call_3331 = func_1783_call()
call_3332 = func_1783_call()
var_3335 = relay.var("var_3335", dtype = "bool", shape = (16, 2, 4))#candidate|3335|(16, 2, 4)|var|bool
bop_3336 = relay.logical_xor(bop_3321.astype('uint8'), relay.reshape(var_3335.astype('uint8'), relay.shape_of(bop_3321))) # shape=(16, 2, 4)
bop_3339 = relay.logical_xor(bop_3324.astype('uint8'), relay.reshape(var_3335.astype('uint8'), relay.shape_of(bop_3324))) # shape=(16, 2, 4)
output = relay.Tuple([call_3305,call_3331,bop_3336,])
output2 = relay.Tuple([call_3306,call_3332,bop_3339,])
func_3341 = relay.Function([var_3320,var_3335,], output)
mod['func_3341'] = func_3341
mod = relay.transform.InferType()(mod)
var_3342 = relay.var("var_3342", dtype = "float32", shape = (16, 2, 4))#candidate|3342|(16, 2, 4)|var|float32
var_3343 = relay.var("var_3343", dtype = "bool", shape = (16, 2, 4))#candidate|3343|(16, 2, 4)|var|bool
output = func_3341(var_3342,var_3343,)
func_3344 = relay.Function([var_3342,var_3343,], output)
mutated_mod['func_3344'] = func_3344
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2094_call = mod.get_global_var('func_2094')
func_2095_call = mutated_mod.get_global_var('func_2095')
call_3357 = relay.TupleGetItem(func_2094_call(), 0)
call_3358 = relay.TupleGetItem(func_2095_call(), 0)
func_3181_call = mod.get_global_var('func_3181')
func_3185_call = mutated_mod.get_global_var('func_3185')
var_3360 = relay.var("var_3360", dtype = "uint64", shape = (128,))#candidate|3360|(128,)|var|uint64
var_3361 = relay.var("var_3361", dtype = "uint64", shape = (512,))#candidate|3361|(512,)|var|uint64
call_3359 = func_3181_call(relay.reshape(var_3360.astype('uint64'), [8, 16, 1]), relay.reshape(var_3361.astype('uint64'), [8, 16, 4]), )
call_3362 = func_3181_call(relay.reshape(var_3360.astype('uint64'), [8, 16, 1]), relay.reshape(var_3361.astype('uint64'), [8, 16, 4]), )
func_1615_call = mod.get_global_var('func_1615')
func_1616_call = mutated_mod.get_global_var('func_1616')
call_3369 = func_1615_call()
call_3370 = func_1615_call()
bop_3374 = relay.greater(call_3369.astype('bool'), relay.reshape(call_3357.astype('bool'), relay.shape_of(call_3369))) # shape=(16, 1, 4)
bop_3377 = relay.greater(call_3370.astype('bool'), relay.reshape(call_3358.astype('bool'), relay.shape_of(call_3370))) # shape=(16, 1, 4)
bop_3384 = relay.bitwise_or(bop_3374.astype('int16'), relay.reshape(call_3369.astype('int16'), relay.shape_of(bop_3374))) # shape=(16, 1, 4)
bop_3387 = relay.bitwise_or(bop_3377.astype('int16'), relay.reshape(call_3370.astype('int16'), relay.shape_of(bop_3377))) # shape=(16, 1, 4)
uop_3406 = relay.atanh(var_3360.astype('float64')) # shape=(128,)
func_2912_call = mod.get_global_var('func_2912')
func_2915_call = mutated_mod.get_global_var('func_2915')
var_3411 = relay.var("var_3411", dtype = "float32", shape = (1024,))#candidate|3411|(1024,)|var|float32
call_3410 = relay.TupleGetItem(func_2912_call(relay.reshape(var_3411.astype('float32'), [16, 16, 4])), 0)
call_3412 = relay.TupleGetItem(func_2915_call(relay.reshape(var_3411.astype('float32'), [16, 16, 4])), 0)
func_3239_call = mod.get_global_var('func_3239')
func_3241_call = mutated_mod.get_global_var('func_3241')
call_3413 = relay.TupleGetItem(func_3239_call(), 0)
call_3414 = relay.TupleGetItem(func_3241_call(), 0)
func_2912_call = mod.get_global_var('func_2912')
func_2915_call = mutated_mod.get_global_var('func_2915')
call_3421 = relay.TupleGetItem(func_2912_call(relay.reshape(call_3410.astype('float32'), [16, 16, 4])), 0)
call_3422 = relay.TupleGetItem(func_2915_call(relay.reshape(call_3410.astype('float32'), [16, 16, 4])), 0)
var_3424 = relay.var("var_3424", dtype = "bool", shape = (16, 16, 4))#candidate|3424|(16, 16, 4)|var|bool
bop_3425 = relay.less(call_3410.astype('bool'), relay.reshape(var_3424.astype('bool'), relay.shape_of(call_3410))) # shape=(16, 16, 4)
bop_3428 = relay.less(call_3412.astype('bool'), relay.reshape(var_3424.astype('bool'), relay.shape_of(call_3412))) # shape=(16, 16, 4)
output = relay.Tuple([call_3359,var_3361,bop_3384,uop_3406,var_3411,call_3413,call_3421,bop_3425,])
output2 = relay.Tuple([call_3362,var_3361,bop_3387,uop_3406,var_3411,call_3414,call_3422,bop_3428,])
func_3433 = relay.Function([var_3360,var_3361,var_3411,var_3424,], output)
mod['func_3433'] = func_3433
mod = relay.transform.InferType()(mod)
mutated_mod['func_3433'] = func_3433
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3433_call = mutated_mod.get_global_var('func_3433')
var_3435 = relay.var("var_3435", dtype = "uint64", shape = (128,))#candidate|3435|(128,)|var|uint64
var_3436 = relay.var("var_3436", dtype = "uint64", shape = (512,))#candidate|3436|(512,)|var|uint64
var_3437 = relay.var("var_3437", dtype = "float32", shape = (1024,))#candidate|3437|(1024,)|var|float32
var_3438 = relay.var("var_3438", dtype = "bool", shape = (16, 16, 4))#candidate|3438|(16, 16, 4)|var|bool
call_3434 = func_3433_call(var_3435,var_3436,var_3437,var_3438,)
output = call_3434
func_3439 = relay.Function([var_3435,var_3436,var_3437,var_3438,], output)
mutated_mod['func_3439'] = func_3439
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1783_call = mod.get_global_var('func_1783')
func_1785_call = mutated_mod.get_global_var('func_1785')
call_3454 = func_1783_call()
call_3455 = func_1783_call()
output = relay.Tuple([call_3454,])
output2 = relay.Tuple([call_3455,])
func_3459 = relay.Function([], output)
mod['func_3459'] = func_3459
mod = relay.transform.InferType()(mod)
mutated_mod['func_3459'] = func_3459
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3459_call = mutated_mod.get_global_var('func_3459')
call_3460 = func_3459_call()
output = call_3460
func_3461 = relay.Function([], output)
mutated_mod['func_3461'] = func_3461
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3488 = relay.var("var_3488", dtype = "uint32", shape = (3, 2, 14))#candidate|3488|(3, 2, 14)|var|uint32
var_3489 = relay.var("var_3489", dtype = "uint32", shape = (3, 2, 14))#candidate|3489|(3, 2, 14)|var|uint32
bop_3490 = relay.greater(var_3488.astype('bool'), relay.reshape(var_3489.astype('bool'), relay.shape_of(var_3488))) # shape=(3, 2, 14)
output = relay.Tuple([bop_3490,])
output2 = relay.Tuple([bop_3490,])
func_3493 = relay.Function([var_3488,var_3489,], output)
mod['func_3493'] = func_3493
mod = relay.transform.InferType()(mod)
mutated_mod['func_3493'] = func_3493
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3493_call = mutated_mod.get_global_var('func_3493')
var_3495 = relay.var("var_3495", dtype = "uint32", shape = (3, 2, 14))#candidate|3495|(3, 2, 14)|var|uint32
var_3496 = relay.var("var_3496", dtype = "uint32", shape = (3, 2, 14))#candidate|3496|(3, 2, 14)|var|uint32
call_3494 = func_3493_call(var_3495,var_3496,)
output = call_3494
func_3497 = relay.Function([var_3495,var_3496,], output)
mutated_mod['func_3497'] = func_3497
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2652_call = mod.get_global_var('func_2652')
func_2654_call = mutated_mod.get_global_var('func_2654')
call_3508 = relay.TupleGetItem(func_2652_call(), 1)
call_3509 = relay.TupleGetItem(func_2654_call(), 1)
func_1615_call = mod.get_global_var('func_1615')
func_1616_call = mutated_mod.get_global_var('func_1616')
call_3511 = func_1615_call()
call_3512 = func_1615_call()
func_2652_call = mod.get_global_var('func_2652')
func_2654_call = mutated_mod.get_global_var('func_2654')
call_3513 = relay.TupleGetItem(func_2652_call(), 5)
call_3514 = relay.TupleGetItem(func_2654_call(), 5)
func_3433_call = mod.get_global_var('func_3433')
func_3439_call = mutated_mod.get_global_var('func_3439')
var_3526 = relay.var("var_3526", dtype = "uint64", shape = (128,))#candidate|3526|(128,)|var|uint64
const_3527 = relay.const([[-5,4,-9,-2,-6,10,7,5,4,2,9,-7,-9,5,-10,-4,5,7,-1,-4,-1,4,-4,3,-10,3,7,6,-4,8,8,-1,3,9,-6,-2,5,-7,7,-10,-5,8,3,-9,-7,-3,10,9,1,-9,9,5,7,5,-4,-3,-8,-2,-7,7,8,10,-3,1,-5,2,10,-9,3,-3,1,-7,-8,-9,10,10,8,-3,-7,7,-5,-9,8,5,4,-10,5,5,6,10,-3,-3,-8,-2,-3,8,-7,6,-5,-9,-1,7,8,-1,7,2,10,1,-4,-5,-1,6,2,-3,4,-7,3,-3,7,5,5,-5,3,-5,10,-3,-4,9],[2,2,-6,-3,4,-7,-9,-4,2,-9,5,1,5,6,-4,3,7,-3,8,-1,1,-3,2,5,7,8,-10,-9,4,4,10,-5,-5,-1,6,5,-10,2,-8,-6,2,8,3,-9,-5,-7,2,-6,-4,-10,-9,-2,5,-10,10,7,8,-6,-5,9,9,6,10,8,9,6,5,6,1,-3,10,3,-5,10,-5,1,7,-5,1,2,-3,7,-6,8,-9,-6,-10,8,9,7,-8,-8,-8,-3,8,9,4,9,-9,5,7,6,2,3,3,-7,-10,8,-10,1,4,1,-5,8,-7,-9,-6,-10,-8,-2,-4,-2,6,6,-8,-5,-6,2],[7,5,-5,-6,1,1,-10,-8,4,3,-9,7,8,4,10,-7,-6,-9,-9,1,-3,-7,7,-1,7,-2,-7,-8,1,-10,7,-8,-10,-5,-3,6,1,1,1,1,-8,-8,2,-9,-5,-3,-6,7,-7,-2,-1,6,-4,-1,1,-4,-7,-5,8,1,4,-6,-7,4,-7,6,-9,-1,-1,9,-6,-4,-7,1,2,-9,-8,-5,-9,-8,-9,6,7,10,-10,2,4,-9,5,-6,-2,3,9,-4,1,7,-6,-8,10,3,-9,-6,-10,-3,6,2,-6,9,-5,6,-7,-3,-5,10,-1,5,-7,-2,-9,4,8,-5,-10,-10,1,8,10,-3],[-4,-10,5,4,8,2,3,-5,1,5,-6,4,-10,7,8,5,-4,-7,-2,-2,-9,10,-10,4,4,-1,-4,-10,-1,-6,-9,-1,8,2,10,-2,8,-4,-6,-10,-10,3,-9,-10,-1,7,9,-1,-7,7,-8,-8,-3,-7,-3,-1,9,6,-10,8,5,1,5,-1,6,-2,6,-1,4,-10,-4,-9,7,-2,-4,-8,8,-2,-3,9,-8,-4,-1,-7,-2,2,-10,-10,6,3,4,8,-1,7,1,3,-7,8,-1,-4,2,10,7,-8,-2,1,-4,-10,-7,-9,4,-10,1,8,-4,7,-8,-9,-7,-8,-10,4,7,-9,10,-5,-1,5]], dtype = "uint64")#candidate|3527|(4, 128)|const|uint64
var_3528 = relay.var("var_3528", dtype = "float32", shape = (1024,))#candidate|3528|(1024,)|var|float32
call_3525 = relay.TupleGetItem(func_3433_call(relay.reshape(var_3526.astype('uint64'), [128,]), relay.reshape(const_3527.astype('uint64'), [512,]), relay.reshape(var_3528.astype('float32'), [1024,]), relay.reshape(var_3528.astype('bool'), [16, 16, 4]), ), 6)
call_3529 = relay.TupleGetItem(func_3439_call(relay.reshape(var_3526.astype('uint64'), [128,]), relay.reshape(const_3527.astype('uint64'), [512,]), relay.reshape(var_3528.astype('float32'), [1024,]), relay.reshape(var_3528.astype('bool'), [16, 16, 4]), ), 6)
output = relay.Tuple([call_3508,call_3511,call_3513,call_3525,var_3526,const_3527,var_3528,])
output2 = relay.Tuple([call_3509,call_3512,call_3514,call_3529,var_3526,const_3527,var_3528,])
func_3531 = relay.Function([var_3526,var_3528,], output)
mod['func_3531'] = func_3531
mod = relay.transform.InferType()(mod)
mutated_mod['func_3531'] = func_3531
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3531_call = mutated_mod.get_global_var('func_3531')
var_3533 = relay.var("var_3533", dtype = "uint64", shape = (128,))#candidate|3533|(128,)|var|uint64
var_3534 = relay.var("var_3534", dtype = "float32", shape = (1024,))#candidate|3534|(1024,)|var|float32
call_3532 = func_3531_call(var_3533,var_3534,)
output = call_3532
func_3535 = relay.Function([var_3533,var_3534,], output)
mutated_mod['func_3535'] = func_3535
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1645_call = mod.get_global_var('func_1645')
func_1647_call = mutated_mod.get_global_var('func_1647')
call_3593 = func_1645_call()
call_3594 = func_1645_call()
output = call_3593
output2 = call_3594
func_3595 = relay.Function([], output)
mod['func_3595'] = func_3595
mod = relay.transform.InferType()(mod)
mutated_mod['func_3595'] = func_3595
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3595_call = mutated_mod.get_global_var('func_3595')
call_3596 = func_3595_call()
output = call_3596
func_3597 = relay.Function([], output)
mutated_mod['func_3597'] = func_3597
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2094_call = mod.get_global_var('func_2094')
func_2095_call = mutated_mod.get_global_var('func_2095')
call_3739 = relay.TupleGetItem(func_2094_call(), 0)
call_3740 = relay.TupleGetItem(func_2095_call(), 0)
func_501_call = mod.get_global_var('func_501')
func_505_call = mutated_mod.get_global_var('func_505')
var_3755 = relay.var("var_3755", dtype = "float64", shape = (21, 5))#candidate|3755|(21, 5)|var|float64
const_3756 = relay.const([[1],[4],[-3],[-3],[-7],[-8],[-2],[1],[6],[4],[-6],[-2],[-2],[-7],[8],[-7],[-1],[9],[2],[-4],[-4],[-5],[5],[-6],[9],[-8],[-6],[10],[-9],[-1],[8],[7],[10],[3],[6],[10],[10],[-8],[1],[-5],[5],[-3],[-4],[-1],[8],[1],[1],[-7],[-4],[1],[-8],[1],[6],[2],[-5],[-6],[-2],[3],[4],[2],[-5],[9],[-1],[-5],[7],[-6],[-8],[-2],[10],[2],[2],[-8],[-10],[4],[-5],[5],[-9],[4],[-3],[6],[6],[2],[1],[-10],[9],[-8],[3],[7],[7],[7],[-6],[-1],[-9],[5],[-5],[-1],[-3],[7],[-8],[-6],[-3],[9],[-10],[-1],[-8],[8],[3],[10],[-4],[5],[8],[-2],[-10],[8],[8],[-4],[-8],[-8],[9],[-3],[10],[-10],[-1],[-8],[-7],[-6],[-8],[7],[-7],[-5],[-9],[-7],[1],[-3],[-7],[-5],[10],[-3],[-8],[-9],[3],[-2],[-4],[-10],[-6],[-8],[-3],[9],[-2],[-2],[1],[-7],[7],[-5],[10],[-1],[-9],[-5],[-2],[4],[9],[2],[-6],[-6],[3],[5],[-9],[8],[-2],[-10],[5],[5],[-2],[7],[-5],[-3],[-2],[6],[6],[-4],[2],[-5],[-2],[7],[-6],[-6],[8],[-6],[-10],[-6],[3],[-9],[4],[1],[-7],[-1],[4],[2],[-10],[10],[5],[6],[-7],[-4],[5],[-2],[-1],[3],[6],[7],[9],[-4],[5],[9],[-6],[1],[6],[5],[-2],[-10],[2],[5],[-1],[-1],[2],[-10],[-8],[-4],[-2],[-8],[1],[-10],[-9],[-10],[-5],[-7],[-2],[-10],[-3],[-2],[9],[-8],[8],[-9],[4],[-9],[-9],[3],[3],[10],[-4],[6],[-1],[1],[-7],[1],[-4],[-2],[8],[3],[9],[6],[-10],[-5],[-4],[2],[3],[-4],[-6],[8],[-7],[-3],[7],[-5],[7],[6],[9],[-3],[3],[-3],[-4],[-5],[-5],[-1],[5],[8],[10],[4],[5],[2],[-7],[-7],[10],[-7],[-9],[-10],[-5],[9],[-5],[3],[-2],[1],[-2],[-7],[6],[10],[-8],[2],[-8],[-1],[-9],[-9],[-7],[6],[-9],[-9],[10],[2],[8],[-1],[-9],[-10],[10],[4],[-2],[5],[7],[8],[2],[-5],[3],[-3],[5],[8],[-5],[10],[2],[2],[1],[-9],[3],[6],[8],[6],[-10],[-1],[5],[9],[-7],[5],[-6],[7],[-4],[-1],[7],[10],[6],[9],[-2],[1],[6],[-6],[-6],[-2]], dtype = "int8")#candidate|3756|(364, 1)|const|int8
const_3757 = relay.const([0.096752,-9.142170,-6.885227,9.887991,-1.819087,-3.756661,4.380082,-9.566546,7.605628,7.519835,2.016174,-3.950445,2.705888,-9.637676,4.162136,7.268568,-8.705376,-1.087532,4.851975,-7.006133,-7.363670,-0.910375,4.255044,7.184204,2.641799,-5.874519,-2.729251,-6.208974,1.779791,-0.821263,-3.005748,8.858629,-0.033905,-9.985815,-5.044109,4.654652,9.275629,-9.988707,0.208046,8.471193,-8.100770,4.822419,8.509302,-5.528732,-5.827946,5.128864,-0.079864,2.887440,-4.735294,-6.819687,-8.669165,5.405069,9.598982,-1.920353,8.334808,6.295289,8.435984,-7.389460,6.128436,-3.953880,4.180776,-4.806510,-0.235067,-1.065674,4.948965,3.717244,5.333106,4.610285,-8.990635,4.170315,-7.324829,3.782690,6.930957,-2.235466,-6.860392,-9.514671,-7.378334,-9.531615,-2.223237,5.869404,3.309748,2.149762,0.192099,-9.611490,6.302434,2.552759,-1.553395,3.010411,-5.240017,-6.024745,-2.697747,-9.317307,-1.633018,-8.359267,-2.796222,-4.850627,-5.723577,-6.146907,8.638568,-0.390141,-8.722499,-4.160278,-8.639046,-2.032788,5.543287,-1.324558,6.727637,-7.806357,5.342631,-9.130092,-2.300829,4.832316,-8.136073,-8.469555,-2.700037,-3.439407,-0.651461,-5.170004,6.150328,7.960478,9.825667,-2.715902,-0.189216,-5.766254,2.755003,8.136447,-1.365585,6.413594,-4.418033,-4.769255,-4.114003,6.074396,8.817973,3.889034,-2.880339,0.349115,-6.692948,-3.364640,-9.325563,-3.338154,6.576559,4.469710,9.387615,4.925072,-8.426552,-6.570595,-5.311629,8.903676,8.985702,-7.696058,3.360673,-4.024323,-4.197212,-4.357827,1.593674,-8.484074,7.956019,-9.741389,-1.674315,-7.561341,3.580722,1.731571,8.198019,9.136267,-7.426784,-1.735122,0.734105,1.725588,-4.587783,-1.311786,3.966264,-1.778766,-4.020478,4.865851,-4.930360,0.199208,-4.508382,-9.787579,2.717138,2.323486,2.499786,0.228930,-9.119469,-3.139162,1.668728,-0.960835,-3.614220,0.516396,-0.065669,8.777479,-9.538706,-8.512097,-0.818057,-3.777638,5.897029,4.297510,-6.663402,2.253494,0.908261,6.619979,5.358964,5.186314,-6.185679,-4.562391,4.214683,-7.162207,2.607670,8.964202,2.534583,4.776742,4.538782,7.462447,-6.084647,-5.937801,1.763066,-0.508881,2.871260,-9.625711,-9.136524,-3.326555,-3.694159,5.660647,-4.979039,8.210892,0.377632,-9.322312,7.141758,-6.609312,-8.569118,-4.738360,-1.016416,-2.379636,-5.170629,5.547987,-5.169256,1.320068,-7.773478,-0.503156,8.885109,-2.492594,-7.658345,7.714372,6.113926,1.436777,-1.809152,5.486881,-2.329922,-8.599571,-7.487061,9.972993,-2.468885,1.114354,-6.391837,4.136678,-1.502580,-4.137292,-9.769713,-6.037206,5.828921,1.975109,0.937068,-5.862284,7.635103,3.842276,-2.493519,-0.521527,7.900148,-6.245341,0.560677,1.346333,9.800926,-4.723423,3.821951,3.608580,1.955702,-5.539748,9.007362,-4.543684,2.209712,-9.988337,1.510744,-6.913951,1.409535,-8.985023,-9.925322,-8.855920,6.602979,1.674449,8.274954,8.955337,-4.543084,-8.137374,-3.332656,-9.879594,-4.182005,4.638978,8.562576,-0.075257,-3.660720,0.193689,-6.324175,7.035979,-9.200067,-1.254560,0.921799,-5.287588,3.614463,-9.098588,-6.822012,3.059825,3.352928,-1.182450,2.707844,6.345986,9.410896,-4.999235,-9.598642,6.922542,7.915575,5.703417,9.771718,-8.625066,-4.827871,-3.594143,9.999382,5.028225,-7.623423,0.061475,-7.377405,-2.027078,5.526216,9.861391,-7.244089,-4.599317,-0.090688,-3.560705,-2.058913,-9.074029,9.909556,5.002947,-9.326247,-4.779231,-0.146340,-3.873127,-5.704239,-6.353935,-9.615862,-4.793215,-1.945544,-6.629085,-9.559602,-8.771622,2.856993,9.675491,8.594065,0.148794,5.063631,-3.789900,4.227018,-1.361518,1.870369,9.256498,-8.691524,-6.457052,-9.347183,0.224741,-9.354023,4.171873,-4.280754,-3.786200,0.233323,3.052760,3.405145,-2.153744,2.639130,0.238574,8.565110,-6.763364,-9.412273,-5.690265,2.615099,0.916702,8.837630,1.660659,1.911348,5.493992,2.514261,5.799331,9.226305,7.816545,-5.982322,0.031579,5.987719,8.288385,3.879083,-5.990469,3.987950,-0.970368,3.258308,-5.298672,8.632093,6.454331,-4.878751,-5.851562,0.803348,-7.028643,-5.279549,8.821949,1.157602,1.197768,8.505118,3.725124,0.778785,2.968511,6.833051,7.880036,-2.800087,1.312079,4.512914,-1.609469,9.984680,-0.728541,-1.252847,6.648726,-0.871527,-4.879274,9.078928,-0.225011,0.790123,8.051071,2.071477,-1.593234,1.076948,-4.181643,5.257122,3.697918,-3.255747,-9.033587,-9.880926,-0.750330,-7.161210,-3.223257,7.292290,-5.469737,-4.869575,4.823822,-7.520426,5.320853,-5.790790,-0.686785,-8.819118,-7.787624,8.860537,-9.767669,7.438480,-4.478988,7.592381,2.596971,7.378431,-0.674443,1.439259,7.929699,4.772369,0.023344,-2.292340,1.730326,-5.163353,0.328230,-1.247415,7.723781,1.185038,7.939041,-1.294315,8.534412,-0.921343,9.295413,1.659482,9.606262,-1.993953,-5.247271,-6.436986,6.018039,-4.609891,-3.830243,-4.361835,-4.170116,4.635486,6.874384,-0.401265,1.677071,-0.966415,-8.362760,1.587177,-2.465332,-1.058648,-0.321387,-0.366944,0.299415,1.487357,2.269284,3.163617,0.336770,9.844967,-2.233222,7.156229,-9.557275,7.474661,6.058240,-3.957755,-8.713165,7.278693,8.427669,-0.597364,-8.226719,-4.304625,-7.314975,0.506966,-0.337898,-4.971331,-8.694289,-2.757356,3.763612,7.949310,-0.496279,-5.781316,-8.909678,4.317607,2.638632,7.865221,7.177168,0.507700,5.155839,7.961473,1.990698,1.394188,7.640416,-3.171066,0.509567,-2.840008,1.341888,-0.719670,-9.471094,0.052037,5.970533,3.812463,-2.094026,-9.830155,6.038677,5.943265,3.214879,-3.609455,-1.089718,5.615806,-8.232471,2.236262,-7.059203,8.099557,0.949827,-9.215679,8.553792,-2.194588,-0.944528,-3.728361,-6.066327,-4.860903,-8.735887,9.659882,1.964006,-0.517714,-1.073370,4.798255,1.652780,1.329308,4.284190,9.110555,4.438921,-5.010568,1.949766,1.818830,-8.328909,5.510419,-5.380930,9.643506,-4.466674,4.096929,5.716680,9.795879,5.271863,-2.324629,6.088116,-9.898148,7.900364,-3.096771,4.797394,-5.776131,-6.819339,-3.660576,-5.506473,-9.492906,9.021044,0.617612,9.610882,7.446756,7.471349,0.546954,5.518387,3.328340,8.465562,8.434547,8.771932,-7.544636,-6.479605,-5.897972,7.932930,6.831348,-6.107279,9.757190,4.287009,0.023807,-1.473191,2.621690,-1.121465,-1.460720,2.050302,-8.798622,-3.222407,-0.316185,1.939831,4.473080,8.279028,2.482947,-9.423882,4.246681,7.791635,-5.223658,-6.879710,2.400702,9.033003,-9.562746,-6.681181,4.578858,8.786007,4.700131,2.807935,1.115829,0.535926,-8.364944,-9.852505,1.958219,-1.190113,6.220493,-0.619431,8.200236,5.042970,-8.785366,-6.336212,-8.945782,4.695601,-7.115469,-8.361850,4.849293,-3.611154,8.324955,-7.941948,-0.739948,7.571053,9.287806,2.305632,7.004803,-6.569477,-1.844651,3.096650,-1.818040,-4.824218,3.625095,7.957213,-1.059767,8.934973,-2.886500,-9.358343,-2.212036,-5.606240,6.014869,4.958362,-1.115043,-1.646296,-0.289529,6.299553,-9.194074,-9.777150,9.344886,7.000664,6.849219,1.456415,-4.062875,6.843067,8.374410,-6.941272,6.007833,2.939935,8.410144,-7.484080,-4.185150,-5.338024,0.540106,-9.702379,-7.592054,-7.110573,-7.765948,3.668420,1.334993,-1.508313,5.790176,-7.537222,-1.345471,-1.899416,4.805043,0.150911,6.399512,3.043730,-6.913547,3.433254,3.133119,8.490029,2.836825,-4.527566,6.409840,-1.203363,6.085331,8.415423,-7.225169,8.707138,-1.682313,4.365916,-3.392316,-7.548142,9.449570,-1.932724,0.340294,-6.740526,-7.796070,9.001869,7.986504,-3.392605,-9.647056,-6.555229,-1.635651,5.702337,5.939312,-7.990299,8.300277,-5.832236,-6.925369,0.613122,-4.998460,-6.736026,-2.290443,-9.901262,1.815748,-7.461870,-3.511419,6.862902,-6.335912,6.034280,7.059530,5.713470,-1.934185,4.051207,-9.348415,-0.350984,3.188356,-3.501048,6.008051,3.535850,6.916751,-5.475140,3.635455,-7.386152,-5.464980,0.410345,2.919113,-0.721816,-9.837053,-9.951737,-4.558264,-5.966412,-5.324308,5.783264,4.053345,-6.046898,-7.387900,0.486971,-1.334175,8.197324,2.460905,5.551323,-2.617709,4.582617,3.000392,6.665155,-7.812490,3.272260,-5.859020,-8.523347,-6.642260,3.844703,-8.568817,-8.202566,-7.471673,7.831142,-7.869523,6.789858,6.373643,3.131675,-8.159758,-8.726326,-1.639205,4.274357,7.049556,0.332261,4.526173,-8.168462,6.151565,-8.659531,4.523813,5.507996,-8.656613,-9.648667,3.728866,5.034541,-1.279600,5.464449,7.683732,-5.923512,-8.297171,-2.105105,-5.973305,6.103031,6.715277,7.213122,-8.020525,-1.521218,7.231165,-2.489199,5.018780,7.052337,1.153149,-4.147337,7.418388,3.317061,-9.199503,8.198110,1.835900,-5.594415,4.907210,9.818273,9.235290,-1.230614,-3.227410,8.324049,-9.650277,4.321205,7.534333,9.203794,-9.501555,5.515641,-7.488372,6.668588,7.062224,4.819493,-5.489656,-1.213652,-7.573985,-5.406230,9.607291,-2.977899,-8.454180,-4.450825,-0.245249,2.950980,-0.430244,5.596327,4.571393,-2.443308,4.157339,7.158442,-5.587942,4.884585,4.988824,1.678892,5.360566,-2.621392,-9.194418,-0.772142,-1.162436,7.054953,-0.705626,-1.427503,-1.049556,-6.437223,-6.138583,6.707093,-1.720230,6.128337,-5.219601,-5.248394,5.999292,-9.219171,3.350695,-1.216279,-8.981833,3.310936,-5.335789,-7.446385,-9.898364,-6.409410,9.164036,-3.274410,-2.962655,5.024172,-2.706677,5.753934,-3.534111,4.912175,-7.793106,-7.292974,-1.607171,1.046058,5.763077,5.601551,-7.545593,-0.408766,7.685760,1.914516,-3.871764,-7.364388,0.028039,-1.252818,6.636208,2.155850,1.444151,-9.036075,9.090697,2.301957,-3.555626,5.229214,-7.438663,-4.480108,-8.082803,-3.848752,-5.401675,5.123064,-8.519863,1.430711,-4.936007,6.842102,-2.145041,4.524616,6.214296,-7.094306,1.276783,-6.141486,2.943175,8.147547,1.362904,5.644097,-8.804583,8.088172,-2.869631,1.143233,5.103431,7.508292,-6.488839,-5.791278,4.306703,3.312110,-3.478661,-6.571767,-1.928572,3.347944,4.213154,7.332765,8.619581,-4.256238,-9.868472,-1.414154,-1.837746,0.835877,-1.591639,-9.137599,7.571946,-6.092784,-5.335165,1.159687,-7.800715,-4.163131,5.627483,-6.436717,-1.447780,3.456853,-8.638707,-7.485053,0.568106,1.469298,1.914701,5.900485,-0.974232,-2.974841,-1.693276,4.444303,-3.245960,9.267068,-8.929102,0.762806,-8.414444,8.384005,-8.149445,-4.811858,0.682376,-7.916791,0.038632,3.140229,3.148062,-1.166457,-3.060163,5.641607,5.305087,-5.588433,-5.076320,-8.801755,-5.827935,5.032035,-9.476392,-4.862193,6.983506,-1.777243,-5.232325,-4.747972,-0.977398,-5.999136,8.618275,3.372606,-0.729282,-0.724385,2.394169,0.842148,-1.948587,5.022225,-6.856677,-3.721310,-1.989887,6.793523,1.952142,-8.812366,-4.912984,-3.580737,-1.132898,6.748777,4.820282,4.147517,-2.172012,7.690251,9.708250,0.973098,-1.024097,-6.390956,7.610711,-9.098924,7.605975,-6.154740,8.354978,6.461238,-4.642845,-7.547272,-5.441125,2.017789,-5.091107,3.145380,6.464274,-3.393911,3.113303,-3.779322,-0.475137,6.570713,2.121991,0.022094,-3.816710,6.219126,7.133210,-8.949460,8.979887,5.239876,-1.803124,-0.951939,3.250090,-5.306918,9.874159,4.483859,2.545038,7.817551,-8.895009,8.473897,-9.868452,-4.207702,-3.054734,1.843990,-9.576161,1.699739,-2.945587,-8.725142,-9.090496,-3.298567,7.807981,0.609996,-9.645385,0.679834,-1.465194,3.212070,6.706317,-0.753583,-9.013153,-4.125715,-9.882312,-3.119239,0.509608,9.735995,7.649630,2.761467,9.232402,3.056779,3.791722,7.059383,0.490968,-9.939281,-2.273530,-4.611944,0.454947,8.153611,-0.432160,-8.094041,-9.755786,-1.917682,9.914694,-0.931629,-1.747020,-4.448280,-2.393849,5.211418,-8.703643,0.197355,5.246340,2.312196,-9.519823,-4.440911,-2.198286,-1.111087,-3.353367,-8.478196,-6.600509,0.027787,-0.798425,-8.302261,9.264336,-4.151313,-4.336787,-4.286404,7.797104,-4.164581,-3.901244,6.460119,9.140545,3.730413,-9.052525,1.079680,-2.145272,7.782273,-4.633514,7.945966,-5.238450,0.519238,1.472131,-9.280761,9.939459,-8.191432,1.195513,6.954618,0.352949,7.806606,-3.121840,-5.594387,2.864918,-4.126750,-7.906086,7.137822,8.448167,3.772320,-6.795277,-8.584305,-7.532844,7.190672,-2.384746,-8.363382,2.251411,2.690580,-2.576697,-0.129637,0.803108,4.841598,-5.377169,-4.517392,6.523537,3.055921,8.261135,7.831534,-5.870849,-0.932190,4.111163,4.362219,-8.527875,9.312037,-9.515402,-8.708992,-7.520400,1.787017,-2.755978,-2.278621,0.638405,5.316157,9.011913,-3.337473,2.582212,-7.176476,5.138873,8.672929,-6.639600,-9.798736,-3.102106,9.067753,-8.967099,1.244930,-5.871052,-7.354084,8.749530,5.024523,1.573866,5.128342,-7.808702,5.989837,7.138024,9.075766,9.558471,-1.421733,-4.980216,-2.325283,7.020691,4.604738,-4.954178,7.824289,6.396490,-8.575684,0.386762,7.106970,-2.637187,0.321204,6.554220,7.423219,8.805263,-7.930619,1.151657,-9.163636,-9.121096,7.328560,-3.242633,6.512010,1.061363,-5.979035,6.638523,-0.301921,-5.847664,1.359699,-9.655155,7.817666,-1.216222,3.801932,-9.926515,-8.770424,2.209693,2.207429,5.964907,7.251538,0.727313,8.187454,1.550018,-2.841226,3.300812,6.462791,-4.470735,0.227217,-2.877254,1.659550,6.517319,1.995423,2.566478,-1.443151,0.789945,6.895863,4.418314,3.695786,-1.822695,-4.530367,7.738632,6.096645,-4.759866,3.528348,0.778669,-8.238686,-3.087439,8.996776,-0.085995,-9.703589], dtype = "float64")#candidate|3757|(1320,)|const|float64
call_3754 = relay.TupleGetItem(func_501_call(relay.reshape(var_3755.astype('float64'), [3, 7, 5]), relay.reshape(const_3756.astype('int8'), [364,]), relay.reshape(const_3757.astype('float64'), [1320,]), ), 2)
call_3758 = relay.TupleGetItem(func_505_call(relay.reshape(var_3755.astype('float64'), [3, 7, 5]), relay.reshape(const_3756.astype('int8'), [364,]), relay.reshape(const_3757.astype('float64'), [1320,]), ), 2)
output = relay.Tuple([call_3739,call_3754,var_3755,const_3756,const_3757,])
output2 = relay.Tuple([call_3740,call_3758,var_3755,const_3756,const_3757,])
func_3761 = relay.Function([var_3755,], output)
mod['func_3761'] = func_3761
mod = relay.transform.InferType()(mod)
mutated_mod['func_3761'] = func_3761
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3762 = relay.var("var_3762", dtype = "float64", shape = (21, 5))#candidate|3762|(21, 5)|var|float64
func_3761_call = mutated_mod.get_global_var('func_3761')
call_3763 = func_3761_call(var_3762)
output = call_3763
func_3764 = relay.Function([var_3762], output)
mutated_mod['func_3764'] = func_3764
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3239_call = mod.get_global_var('func_3239')
func_3241_call = mutated_mod.get_global_var('func_3241')
call_3815 = relay.TupleGetItem(func_3239_call(), 0)
call_3816 = relay.TupleGetItem(func_3241_call(), 0)
uop_3820 = relay.sinh(call_3815.astype('float32')) # shape=(16, 1, 4)
uop_3822 = relay.sinh(call_3816.astype('float32')) # shape=(16, 1, 4)
output = relay.Tuple([uop_3820,])
output2 = relay.Tuple([uop_3822,])
func_3834 = relay.Function([], output)
mod['func_3834'] = func_3834
mod = relay.transform.InferType()(mod)
output = func_3834()
func_3835 = relay.Function([], output)
mutated_mod['func_3835'] = func_3835
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1837_call = mod.get_global_var('func_1837')
func_1839_call = mutated_mod.get_global_var('func_1839')
call_3844 = func_1837_call()
call_3845 = func_1837_call()
func_1783_call = mod.get_global_var('func_1783')
func_1785_call = mutated_mod.get_global_var('func_1785')
call_3848 = func_1783_call()
call_3849 = func_1783_call()
bop_3854 = relay.bitwise_xor(call_3848.astype('uint32'), relay.reshape(call_3844.astype('uint32'), relay.shape_of(call_3848))) # shape=(16, 1, 4)
bop_3857 = relay.bitwise_xor(call_3849.astype('uint32'), relay.reshape(call_3845.astype('uint32'), relay.shape_of(call_3849))) # shape=(16, 1, 4)
func_3089_call = mod.get_global_var('func_3089')
func_3092_call = mutated_mod.get_global_var('func_3092')
const_3861 = relay.const([7.416156,-2.806304,-3.741671,-1.466530,9.545732,7.474825,-3.997968,7.385281,5.867557,-7.353450,2.242142,-7.238970,-6.061658,8.404928,5.215336,-7.489336,6.063131,0.706737,-6.018298,-9.850907,-9.574924,-1.201414,-0.791002,4.292649,9.785843,2.508878,-8.730377,6.467617,-4.802301,9.806360,3.920649,-1.639800,-0.521138,-9.791409,2.321335,8.962540,-7.330722,-3.628824,9.643676,8.191734,0.852412,8.325964,-9.039922,7.129627,0.812488,5.053653,-6.004333,7.871795,2.860381,-3.763996,-6.383998,2.080853,8.769706,5.114080,3.035898,7.095412,-4.036573,8.753524,5.285536,3.242647,0.209284,6.288985,-9.244351,-6.068172,-9.762563,-8.914370,-4.952876,-6.063941,5.236651,-6.526407,-1.110980,-2.833215,-0.624078,7.346483,-3.625196,8.641295,2.442237,0.591875,8.798624,-6.947227,-2.369080,7.411247,-0.438525,-1.627137,0.396934,-5.006999,-3.270809,-2.547577,-3.492147,4.382229,-3.941176,-0.497770,0.501854,3.805134,-8.439241,0.909218,-2.168921,9.032490,-0.064004,0.818905,4.413786,5.379651,-3.687379,-9.749244,3.500910,5.528711,-8.953189,-8.254738,6.926356,5.442912,2.222864,1.277177,2.370574,-9.679061,-3.944798,5.899252,4.662441,-9.444988,3.261022,6.373493,-0.189940,-3.560526,-6.774222,-1.970588,6.471239,9.653188,-2.030489,-4.372280,-6.699239,3.346755,-8.991116,-0.687149,0.550891,7.495947,4.695774,-7.471120,5.428998,5.417370,5.181576,-2.200963,7.156165,7.135432,-7.557141,6.532349,-1.331739,6.572716,7.935708,-5.995781,-8.905017,0.391123,-4.259247,0.808336,5.071069,-5.720082,3.113649,8.799044,-4.605992,-5.061109,-2.837600,2.918998,9.112138,-5.299930,-7.535047,2.879827,-7.293192,7.115486,-2.943077,9.251775,3.357132,-7.785287,-4.925755,5.269553,-8.209536,0.337927,1.808504,0.766486,0.873533,6.590600,7.339476,5.632549,-6.738175,-7.305302,1.803116,-9.487200,7.120260,7.973085,-6.902128,9.697991,7.451462,2.719830,5.336768,0.062894,-6.040952,0.435877,8.497239,-1.419037,6.522777,1.344898,-2.064421,1.427982,-6.047724,2.779905,0.582128,-3.702352,6.210953,7.125549,-5.381613,0.044924,3.800123,-8.019076,1.114386,-2.484109,-3.714830,-0.510818,7.989951,-6.009208,-2.880128,-2.112231,-2.546823,-9.725085,8.832544,0.453342,-9.671701,-8.308516,8.699372,8.374736,5.536350,5.789593,0.663891,-1.941998,3.056495,-7.150697,-7.914663,0.289695,5.263089,-5.443276,2.219369,1.806050,4.044203,7.008422,-2.772055,0.445468,3.222585,0.014465,-3.849263,1.425272,3.220801,-3.118207,3.452174,-3.995657,0.287238,2.047453,-9.024717,5.578802,-5.378064,-7.079966,0.970014,1.991378,-8.539732,3.233960,-6.702115,-5.896999,-3.049666,-4.293494,-1.735522,3.616795,3.352808,-8.508731,3.971039,0.801764,4.793088,-4.134529,-0.687948,1.461581,5.518601,1.769719,5.154091,3.226857,-6.043786,2.952412,-9.891379,3.173964,8.006398,-2.311286,7.564806,9.909422,5.288738,7.123660,7.544297,8.503544,3.855672,-4.818894,-6.814433,-8.794736,3.279938,-6.279243,-4.326218,-0.749810,3.555341,-5.011146,-6.921697,6.119157,-9.642766,9.305004,7.947471,-4.429668,-0.811809,-7.072487,-2.883651,5.482399,-4.688760,6.655950,7.660978,8.077142,-4.367434,6.075149,3.814954,0.868484,2.223433,1.291285,5.454080,0.147128,-9.388941,-5.692938,1.465014,1.945532,9.343810,-1.910471,-6.184323,-7.853928,-8.436194,6.541531,-8.452201,9.862709,-6.687900,2.953325,-9.611691,4.004650,-4.949708,2.656370,7.140143,3.995394,5.723406,-9.637419,8.893982,2.780901,-3.836835,8.120690,4.737400,8.596167,4.924001,9.944444,6.277797,3.928203,-1.944487,3.345178,5.882035,2.544920,4.199230,-1.238162,-9.072627,-4.282930,-0.988853,8.373892,-4.957502,8.075918,5.437793,3.046568,2.404268,-0.809781,1.256320,-2.756495,8.834368,6.516424,4.265419,1.171082,2.616889,-8.948956,-2.293127,9.872850,-9.422767,-5.956440,1.380684,4.215495,-5.855943,9.796172,6.034933,-2.477243,9.376041,0.167292,6.231732,-1.687831,-2.060232,0.199852,-3.986133,9.314859,8.280271,3.545398,2.469349,-2.461362,-1.499316,9.207180,4.204050,-2.815474,-6.141880,2.435528,1.767491,-6.576916,-7.833068,-8.581955,5.637922,-8.301033,3.203870,2.514557,-6.266544,7.791025,3.632669,-6.273353,-2.600110,6.993100,5.790658,8.479456,-3.508342,-3.428210,1.757858,-1.405847,7.142537,3.787648,-6.477163,3.296269,-5.550377,0.683924,-2.223735,-9.744559,4.948467,1.947054,-0.713306,6.822425,-8.603915,-1.306437,-0.938540,-0.614216,0.397971,-7.241691,0.987860,-0.622129,-0.513409,3.053904], dtype = "float32")#candidate|3861|(448,)|const|float32
call_3860 = relay.TupleGetItem(func_3089_call(relay.reshape(const_3861.astype('float32'), [16, 7, 4])), 0)
call_3862 = relay.TupleGetItem(func_3092_call(relay.reshape(const_3861.astype('float32'), [16, 7, 4])), 0)
func_2840_call = mod.get_global_var('func_2840')
func_2842_call = mutated_mod.get_global_var('func_2842')
var_3872 = relay.var("var_3872", dtype = "uint64", shape = (6, 42))#candidate|3872|(6, 42)|var|uint64
call_3871 = relay.TupleGetItem(func_2840_call(relay.reshape(var_3872.astype('uint64'), [252,])), 0)
call_3873 = relay.TupleGetItem(func_2842_call(relay.reshape(var_3872.astype('uint64'), [252,])), 0)
func_1973_call = mod.get_global_var('func_1973')
func_1976_call = mutated_mod.get_global_var('func_1976')
var_3875 = relay.var("var_3875", dtype = "float64", shape = (105,))#candidate|3875|(105,)|var|float64
var_3876 = relay.var("var_3876", dtype = "float64", shape = (1320,))#candidate|3876|(1320,)|var|float64
call_3874 = relay.TupleGetItem(func_1973_call(relay.reshape(var_3875.astype('float64'), [105,]), relay.reshape(var_3876.astype('float64'), [1320,]), ), 7)
call_3877 = relay.TupleGetItem(func_1976_call(relay.reshape(var_3875.astype('float64'), [105,]), relay.reshape(var_3876.astype('float64'), [1320,]), ), 7)
output = relay.Tuple([bop_3854,call_3860,const_3861,call_3871,var_3872,call_3874,var_3875,var_3876,])
output2 = relay.Tuple([bop_3857,call_3862,const_3861,call_3873,var_3872,call_3877,var_3875,var_3876,])
func_3884 = relay.Function([var_3872,var_3875,var_3876,], output)
mod['func_3884'] = func_3884
mod = relay.transform.InferType()(mod)
var_3885 = relay.var("var_3885", dtype = "uint64", shape = (6, 42))#candidate|3885|(6, 42)|var|uint64
var_3886 = relay.var("var_3886", dtype = "float64", shape = (105,))#candidate|3886|(105,)|var|float64
var_3887 = relay.var("var_3887", dtype = "float64", shape = (1320,))#candidate|3887|(1320,)|var|float64
output = func_3884(var_3885,var_3886,var_3887,)
func_3888 = relay.Function([var_3885,var_3886,var_3887,], output)
mutated_mod['func_3888'] = func_3888
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3595_call = mod.get_global_var('func_3595')
func_3597_call = mutated_mod.get_global_var('func_3597')
call_3893 = func_3595_call()
call_3894 = func_3595_call()
output = call_3893
output2 = call_3894
func_3895 = relay.Function([], output)
mod['func_3895'] = func_3895
mod = relay.transform.InferType()(mod)
output = func_3895()
func_3896 = relay.Function([], output)
mutated_mod['func_3896'] = func_3896
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2652_call = mod.get_global_var('func_2652')
func_2654_call = mutated_mod.get_global_var('func_2654')
call_3945 = relay.TupleGetItem(func_2652_call(), 4)
call_3946 = relay.TupleGetItem(func_2654_call(), 4)
output = relay.Tuple([call_3945,])
output2 = relay.Tuple([call_3946,])
func_3985 = relay.Function([], output)
mod['func_3985'] = func_3985
mod = relay.transform.InferType()(mod)
mutated_mod['func_3985'] = func_3985
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3985_call = mutated_mod.get_global_var('func_3985')
call_3986 = func_3985_call()
output = call_3986
func_3987 = relay.Function([], output)
mutated_mod['func_3987'] = func_3987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2094_call = mod.get_global_var('func_2094')
func_2095_call = mutated_mod.get_global_var('func_2095')
call_3990 = relay.TupleGetItem(func_2094_call(), 0)
call_3991 = relay.TupleGetItem(func_2095_call(), 0)
output = relay.Tuple([call_3990,])
output2 = relay.Tuple([call_3991,])
func_4005 = relay.Function([], output)
mod['func_4005'] = func_4005
mod = relay.transform.InferType()(mod)
output = func_4005()
func_4006 = relay.Function([], output)
mutated_mod['func_4006'] = func_4006
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1837_call = mod.get_global_var('func_1837')
func_1839_call = mutated_mod.get_global_var('func_1839')
call_4026 = func_1837_call()
call_4027 = func_1837_call()
output = call_4026
output2 = call_4027
func_4035 = relay.Function([], output)
mod['func_4035'] = func_4035
mod = relay.transform.InferType()(mod)
mutated_mod['func_4035'] = func_4035
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4035_call = mutated_mod.get_global_var('func_4035')
call_4036 = func_4035_call()
output = call_4036
func_4037 = relay.Function([], output)
mutated_mod['func_4037'] = func_4037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3459_call = mod.get_global_var('func_3459')
func_3461_call = mutated_mod.get_global_var('func_3461')
call_4042 = relay.TupleGetItem(func_3459_call(), 0)
call_4043 = relay.TupleGetItem(func_3461_call(), 0)
func_2359_call = mod.get_global_var('func_2359')
func_2360_call = mutated_mod.get_global_var('func_2360')
call_4046 = func_2359_call()
call_4047 = func_2359_call()
bop_4068 = relay.floor_mod(call_4042.astype('float64'), relay.reshape(call_4046.astype('float64'), relay.shape_of(call_4042))) # shape=(16, 1, 4)
bop_4071 = relay.floor_mod(call_4043.astype('float64'), relay.reshape(call_4047.astype('float64'), relay.shape_of(call_4043))) # shape=(16, 1, 4)
output = relay.Tuple([bop_4068,])
output2 = relay.Tuple([bop_4071,])
func_4080 = relay.Function([], output)
mod['func_4080'] = func_4080
mod = relay.transform.InferType()(mod)
output = func_4080()
func_4081 = relay.Function([], output)
mutated_mod['func_4081'] = func_4081
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3227_call = mod.get_global_var('func_3227')
func_3228_call = mutated_mod.get_global_var('func_3228')
call_4138 = relay.TupleGetItem(func_3227_call(), 0)
call_4139 = relay.TupleGetItem(func_3228_call(), 0)
var_4140 = relay.var("var_4140", dtype = "float32", shape = (16, 3, 4))#candidate|4140|(16, 3, 4)|var|float32
bop_4141 = relay.greater(call_4138.astype('bool'), var_4140.astype('bool')) # shape=(16, 3, 4)
bop_4144 = relay.greater(call_4139.astype('bool'), var_4140.astype('bool')) # shape=(16, 3, 4)
func_448_call = mod.get_global_var('func_448')
func_452_call = mutated_mod.get_global_var('func_452')
var_4150 = relay.var("var_4150", dtype = "int8", shape = (364,))#candidate|4150|(364,)|var|int8
call_4149 = func_448_call(relay.reshape(var_4150.astype('int8'), [14, 2, 13]), relay.reshape(var_4150.astype('int8'), [14, 2, 13]), )
call_4151 = func_448_call(relay.reshape(var_4150.astype('int8'), [14, 2, 13]), relay.reshape(var_4150.astype('int8'), [14, 2, 13]), )
var_4157 = relay.var("var_4157", dtype = "float32", shape = (16, 3, 4))#candidate|4157|(16, 3, 4)|var|float32
bop_4158 = relay.divide(var_4140.astype('float32'), relay.reshape(var_4157.astype('float32'), relay.shape_of(var_4140))) # shape=(16, 3, 4)
output = relay.Tuple([bop_4141,call_4149,var_4150,bop_4158,])
output2 = relay.Tuple([bop_4144,call_4151,var_4150,bop_4158,])
func_4165 = relay.Function([var_4140,var_4150,var_4157,], output)
mod['func_4165'] = func_4165
mod = relay.transform.InferType()(mod)
var_4166 = relay.var("var_4166", dtype = "float32", shape = (16, 3, 4))#candidate|4166|(16, 3, 4)|var|float32
var_4167 = relay.var("var_4167", dtype = "int8", shape = (364,))#candidate|4167|(364,)|var|int8
var_4168 = relay.var("var_4168", dtype = "float32", shape = (16, 3, 4))#candidate|4168|(16, 3, 4)|var|float32
output = func_4165(var_4166,var_4167,var_4168,)
func_4169 = relay.Function([var_4166,var_4167,var_4168,], output)
mutated_mod['func_4169'] = func_4169
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2652_call = mod.get_global_var('func_2652')
func_2654_call = mutated_mod.get_global_var('func_2654')
call_4215 = relay.TupleGetItem(func_2652_call(), 3)
call_4216 = relay.TupleGetItem(func_2654_call(), 3)
var_4245 = relay.var("var_4245", dtype = "float64", shape = (1320,))#candidate|4245|(1320,)|var|float64
bop_4246 = relay.maximum(call_4215.astype('uint8'), relay.reshape(var_4245.astype('uint8'), relay.shape_of(call_4215))) # shape=(1320,)
bop_4249 = relay.maximum(call_4216.astype('uint8'), relay.reshape(var_4245.astype('uint8'), relay.shape_of(call_4216))) # shape=(1320,)
uop_4260 = relay.asinh(bop_4246.astype('float32')) # shape=(1320,)
uop_4262 = relay.asinh(bop_4249.astype('float32')) # shape=(1320,)
func_2840_call = mod.get_global_var('func_2840')
func_2842_call = mutated_mod.get_global_var('func_2842')
const_4269 = relay.const([-6,9,-8,1,7,1,-4,-3,5,-2,-10,10,-4,-4,-5,5,-4,5,-9,9,2,3,-4,-10,-8,1,-1,-7,-6,-5,4,4,4,-1,6,9,3,-5,10,-7,10,-6,9,-5,6,7,1,9,1,-10,-1,4,-5,-10,-6,5,5,6,-9,-10,-2,7,6,-1,-6,-5,-2,-1,-10,3,-8,-2,4,-8,9,-7,4,-2,-10,9,-4,4,-3,-6,-4,9,-9,-6,8,-5,-3,-6,8,9,-3,-5,3,6,2,9,10,9,-8,4,10,-1,-10,10,-8,-6,-9,1,-10,-8,-10,-10,4,2,4,-7,3,-9,-6,-3,-10,-7,-1,1,-7,6,5,-10,5,10,-7,-6,-5,-5,4,7,-8,2,-5,3,-1,1,-6,4,10,3,-3,10,-3,-2,5,-2,-6,-4,-9,-6,9,4,-6,-7,6,-6,8,-10,-2,-8,2,2,4,2,5,2,3,9,8,-8,7,-5,1,-4,8,2,9,9,-7,7,-8,8,-8,-3,-5,3,6,-7,-3,-1,-2,-2,-4,6,-3,7,-5,3,2,-10,-8,10,-10,2,-7,-4,-8,2,7,-7,-5,4,-7,-1,-2,9,5,3,-8,9,-9,-6,9,-9,8,-9,-10,10,9,-10,6,2,-9,-7,9,2,-6,5,6,4,-1,6], dtype = "uint64")#candidate|4269|(252,)|const|uint64
call_4268 = relay.TupleGetItem(func_2840_call(relay.reshape(const_4269.astype('uint64'), [252,])), 3)
call_4270 = relay.TupleGetItem(func_2842_call(relay.reshape(const_4269.astype('uint64'), [252,])), 3)
output = relay.Tuple([uop_4260,call_4268,const_4269,])
output2 = relay.Tuple([uop_4262,call_4270,const_4269,])
func_4287 = relay.Function([var_4245,], output)
mod['func_4287'] = func_4287
mod = relay.transform.InferType()(mod)
mutated_mod['func_4287'] = func_4287
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4288 = relay.var("var_4288", dtype = "float64", shape = (1320,))#candidate|4288|(1320,)|var|float64
func_4287_call = mutated_mod.get_global_var('func_4287')
call_4289 = func_4287_call(var_4288)
output = call_4289
func_4290 = relay.Function([var_4288], output)
mutated_mod['func_4290'] = func_4290
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2570_call = mod.get_global_var('func_2570')
func_2571_call = mutated_mod.get_global_var('func_2571')
call_4304 = relay.TupleGetItem(func_2570_call(), 0)
call_4305 = relay.TupleGetItem(func_2571_call(), 0)
func_448_call = mod.get_global_var('func_448')
func_452_call = mutated_mod.get_global_var('func_452')
const_4316 = relay.const([-6,-3,5,-6,-8,4,-7,-10,7,-5,-8,5,-2,8,-7,-8,-8,-3,4,8,8,-9,6,-5,9,-10,-6,8,-9,6,7,-1,4,8,5,-1,-9,-7,2,-2,1,1,10,-5,-4,-7,2,8,3,-3,-5,1,-5,-2,10,9,7,-9,9,-6,-5,-6,2,-3,3,3,-2,-3,-5,-5,1,8,-6,-5,-3,8,7,-4,-1,3,-7,-3,3,6,-4,-6,-7,-3,3,9,-2,-3,2,-5,6,-8,-6,-2,10,-10,-10,-9,1,1,-1,-8,-7,9,8,-4,-6,9,-7,3,-10,-10,-9,9,-1,2,3,5,10,-1,2,7,2,-9,9,-4,5,9,-5,2,1,9,3,-5,-10,3,4,9,8,-4,-10,-3,-4,-10,3,4,5,7,7,-5,8,10,-8,9,9,-2,-2,7,-9,7,-9,7,6,4,-6,2,-6,8,-3,1,-2,4,-10,-2,-6,-1,1,8,2,1,-2,-3,-7,-4,10,6,-8,6,1,-7,6,-1,7,-4,-3,6,10,-4,2,1,3,2,8,-1,5,-6,-5,-9,6,1,8,5,-7,-7,6,1,-5,-3,2,-2,2,-1,4,-9,-1,2,-8,-9,5,-5,2,-2,-10,10,9,-2,-9,-7,-1,3,-7,-3,-1,1,8,9,-4,7,-8,-10,10,-7,3,1,-2,-9,-1,-5,7,-10,-4,3,10,3,-8,4,-5,8,-8,-5,5,-9,-6,-9,-10,8,-8,1,-2,5,-9,9,-3,-3,5,-9,-2,7,3,-3,-4,7,1,-9,4,6,-4,-9,-1,8,-10,6,-5,4,-10,-3,7,10,7,2,5,7,2,-6,8,-8,-1,2,1,6,-2,-10,6,-8,9,-6,-7,-4,9,-3,4,-5,8,-10,3,2,4,6,-2,-7,-4,5,-6,-2,9,-9,-7,-7,-4,-5,5,-4,-1,-3,7,-6,-2,4,-10,-2], dtype = "int8")#candidate|4316|(364,)|const|int8
call_4315 = func_448_call(relay.reshape(const_4316.astype('int8'), [14, 2, 13]), relay.reshape(const_4316.astype('int8'), [14, 2, 13]), )
call_4317 = func_448_call(relay.reshape(const_4316.astype('int8'), [14, 2, 13]), relay.reshape(const_4316.astype('int8'), [14, 2, 13]), )
output = relay.Tuple([call_4304,call_4315,const_4316,])
output2 = relay.Tuple([call_4305,call_4317,const_4316,])
func_4318 = relay.Function([], output)
mod['func_4318'] = func_4318
mod = relay.transform.InferType()(mod)
mutated_mod['func_4318'] = func_4318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4318_call = mutated_mod.get_global_var('func_4318')
call_4319 = func_4318_call()
output = call_4319
func_4320 = relay.Function([], output)
mutated_mod['func_4320'] = func_4320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3834_call = mod.get_global_var('func_3834')
func_3835_call = mutated_mod.get_global_var('func_3835')
call_4330 = relay.TupleGetItem(func_3834_call(), 0)
call_4331 = relay.TupleGetItem(func_3835_call(), 0)
const_4341 = relay.const([[[-0.987265,8.613857,5.053101,-4.306779],[-2.452665,-1.861400,-3.420320,8.545553],[-2.476158,1.753748,4.126060,1.537949],[-8.051956,-3.028162,-9.236359,-0.176789],[9.244703,-9.780430,-3.805411,-2.352548],[-9.445069,-3.831716,-8.760727,0.593853],[9.672160,-0.682463,-7.060985,9.344182]],[[9.283550,7.866592,4.373627,-0.009166],[0.895284,3.534154,9.780309,2.696047],[7.545281,-1.270460,6.364977,-8.517277],[0.538154,9.787731,-0.312829,-3.879739],[5.646147,-9.500305,1.830797,0.219537],[4.146813,-0.734517,-7.092947,-9.565208],[4.171173,1.680067,-5.822190,3.484605]],[[0.063556,-5.312318,5.822577,4.525454],[-1.929957,-5.764071,-8.099428,-5.975437],[-0.579965,-9.298915,-5.990951,-6.652153],[-4.371121,6.391716,9.685136,-8.690422],[6.176377,9.308130,8.888205,7.790984],[-6.237093,3.187242,8.958279,-6.847818],[-7.132694,1.980578,7.336847,4.531482]],[[4.629146,-6.868463,3.970500,2.591474],[0.681991,-7.235651,9.173318,-9.379643],[6.261700,-4.017548,-3.986814,-9.505625],[-3.169955,0.380324,-7.081178,0.936269],[3.924902,-5.323375,-7.167415,-0.592742],[-5.167083,-0.207011,-9.652367,2.378851],[-7.813258,4.541033,-4.635301,9.960951]],[[8.634613,-5.358896,6.175606,9.822267],[-3.817912,-2.199473,-5.253323,-9.481387],[3.386281,-8.040734,-5.724336,4.643657],[-8.831894,1.954366,-1.730142,5.697579],[9.172274,9.302554,9.640503,-4.615800],[4.497437,-3.180425,9.842662,-3.404771],[2.026141,-0.943218,7.466661,-8.686146]],[[-6.841808,-3.639514,-0.530921,-3.598553],[-8.366098,0.863153,4.288599,1.557083],[-0.884521,-3.142198,-1.228525,-7.398265],[4.909158,6.079108,-2.115218,-4.517231],[0.536815,7.543386,-0.068461,-8.250783],[-2.182364,-5.987582,1.374938,-0.681509],[9.010031,9.262555,4.371662,4.408957]],[[-4.540203,6.521268,-4.197414,-9.884564],[6.988552,-0.038352,5.275006,-8.573625],[-7.456925,6.062124,-9.157369,3.159693],[-0.157180,6.778857,-9.736489,4.695553],[-4.271084,2.133393,-2.244556,-6.643778],[5.019794,-0.474046,6.237921,-9.171647],[5.387444,4.818780,9.446852,-6.344441]],[[1.631848,-5.970237,-1.743117,3.032393],[-4.647402,-8.992070,-3.753367,-2.518789],[8.872942,-2.155186,3.606163,-6.117804],[8.252651,-3.146985,-5.923411,-8.298316],[3.758268,7.356615,-9.115720,-9.018632],[7.598744,-5.746498,7.081104,5.791464],[5.003591,-1.694655,4.655601,8.820857]],[[-0.631202,4.470008,-8.800358,4.626194],[-1.127344,-9.184539,1.070011,-1.870526],[9.331369,-3.333737,7.299589,0.345639],[1.392640,-4.811548,-8.067531,8.964698],[8.897794,3.012893,6.114031,7.448225],[2.382501,-1.304103,-9.190981,4.141553],[5.099137,9.898254,2.521397,7.505254]],[[-2.689834,9.223767,-3.281752,5.975385],[-1.366636,5.585502,1.577771,3.181476],[-7.478467,4.221025,-2.697369,-0.080262],[-9.998721,1.285933,-5.101334,0.548605],[-7.763619,6.268884,9.548424,-7.482588],[7.323511,1.320651,1.532133,8.730764],[6.377865,-5.119534,2.532979,5.467395]],[[-2.314284,-5.401689,-9.225428,6.049452],[-8.260335,8.462967,-0.640289,0.986734],[2.884652,-2.727900,-4.022878,7.067205],[4.760474,1.539014,-0.442342,-1.584228],[5.138200,-8.559733,-0.590673,-3.469368],[-9.730034,1.820744,-9.389450,6.160760],[9.122455,-8.686972,9.196790,7.029578]],[[8.494567,-0.391374,-6.158293,6.685980],[7.609291,4.367553,7.317246,-9.671813],[5.670373,-5.828816,4.832432,7.165630],[-3.429422,-0.547587,0.978648,-7.264001],[-9.504073,2.259244,9.842015,2.781677],[-9.469810,3.630630,-7.173505,5.067897],[1.670223,4.359594,8.253090,7.101586]],[[-9.571697,-6.207965,-3.001847,0.928101],[3.444286,4.934630,0.816184,0.239097],[9.868270,3.602510,-4.940889,6.856935],[2.328387,-2.492627,4.464333,-0.125362],[6.712528,-6.853605,2.796069,6.906357],[-7.407362,3.892091,1.490063,3.333783],[4.332324,-0.763832,7.012901,4.408359]],[[3.888723,-9.119552,-4.076700,-5.452692],[4.401249,1.848016,-9.325137,8.135215],[2.692380,-8.503994,4.101874,2.394392],[6.155705,-8.400976,4.353109,9.878228],[-9.918029,9.149142,-7.326121,-2.430131],[-9.998179,-8.248677,-2.135832,1.628381],[-3.566128,-9.106648,3.161689,1.023709]],[[-7.824380,-7.793117,8.453833,-4.170316],[3.195067,-8.505860,1.046617,8.310858],[-9.557838,1.416423,6.774387,-0.625573],[-3.383228,5.169784,-6.296242,-3.213730],[-7.475081,-7.144268,-1.150427,9.114535],[1.236672,6.177572,8.581415,-8.859946],[-7.750049,-3.093102,8.071667,-4.501775]],[[-4.918992,9.868735,-2.532984,8.352292],[-5.452159,-5.373469,-1.444403,-4.261019],[-9.702482,-2.671334,-7.773838,4.695206],[-9.332373,-6.206479,0.271316,-7.756278],[-8.451050,-5.447230,2.878102,-0.071589],[-9.012670,6.443206,-8.529712,-2.176188],[1.605169,-7.527133,7.194764,3.241613]]], dtype = "float32")#candidate|4341|(16, 7, 4)|const|float32
bop_4342 = relay.minimum(call_4330.astype('float64'), const_4341.astype('float64')) # shape=(16, 7, 4)
bop_4345 = relay.minimum(call_4331.astype('float64'), const_4341.astype('float64')) # shape=(16, 7, 4)
output = relay.Tuple([bop_4342,])
output2 = relay.Tuple([bop_4345,])
func_4358 = relay.Function([], output)
mod['func_4358'] = func_4358
mod = relay.transform.InferType()(mod)
mutated_mod['func_4358'] = func_4358
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4358_call = mutated_mod.get_global_var('func_4358')
call_4359 = func_4358_call()
output = call_4359
func_4360 = relay.Function([], output)
mutated_mod['func_4360'] = func_4360
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2127_call = mod.get_global_var('func_2127')
func_2128_call = mutated_mod.get_global_var('func_2128')
call_4404 = func_2127_call()
call_4405 = func_2127_call()
output = relay.Tuple([call_4404,])
output2 = relay.Tuple([call_4405,])
func_4430 = relay.Function([], output)
mod['func_4430'] = func_4430
mod = relay.transform.InferType()(mod)
output = func_4430()
func_4431 = relay.Function([], output)
mutated_mod['func_4431'] = func_4431
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2359_call = mod.get_global_var('func_2359')
func_2360_call = mutated_mod.get_global_var('func_2360')
call_4496 = func_2359_call()
call_4497 = func_2359_call()
output = call_4496
output2 = call_4497
func_4498 = relay.Function([], output)
mod['func_4498'] = func_4498
mod = relay.transform.InferType()(mod)
output = func_4498()
func_4499 = relay.Function([], output)
mutated_mod['func_4499'] = func_4499
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3459_call = mod.get_global_var('func_3459')
func_3461_call = mutated_mod.get_global_var('func_3461')
call_4510 = relay.TupleGetItem(func_3459_call(), 0)
call_4511 = relay.TupleGetItem(func_3461_call(), 0)
func_2359_call = mod.get_global_var('func_2359')
func_2360_call = mutated_mod.get_global_var('func_2360')
call_4513 = func_2359_call()
call_4514 = func_2359_call()
func_1783_call = mod.get_global_var('func_1783')
func_1785_call = mutated_mod.get_global_var('func_1785')
call_4523 = func_1783_call()
call_4524 = func_1783_call()
output = relay.Tuple([call_4510,call_4513,call_4523,])
output2 = relay.Tuple([call_4511,call_4514,call_4524,])
func_4533 = relay.Function([], output)
mod['func_4533'] = func_4533
mod = relay.transform.InferType()(mod)
mutated_mod['func_4533'] = func_4533
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4533_call = mutated_mod.get_global_var('func_4533')
call_4534 = func_4533_call()
output = call_4534
func_4535 = relay.Function([], output)
mutated_mod['func_4535'] = func_4535
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3204_call = mod.get_global_var('func_3204')
func_3205_call = mutated_mod.get_global_var('func_3205')
call_4539 = relay.TupleGetItem(func_3204_call(), 0)
call_4540 = relay.TupleGetItem(func_3205_call(), 0)
output = call_4539
output2 = call_4540
func_4546 = relay.Function([], output)
mod['func_4546'] = func_4546
mod = relay.transform.InferType()(mod)
output = func_4546()
func_4547 = relay.Function([], output)
mutated_mod['func_4547'] = func_4547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4318_call = mod.get_global_var('func_4318')
func_4320_call = mutated_mod.get_global_var('func_4320')
call_4582 = relay.TupleGetItem(func_4318_call(), 1)
call_4583 = relay.TupleGetItem(func_4320_call(), 1)
var_4633 = relay.var("var_4633", dtype = "bool", shape = (14, 2, 13))#candidate|4633|(14, 2, 13)|var|bool
bop_4634 = relay.bitwise_and(call_4582.astype('uint16'), relay.reshape(var_4633.astype('uint16'), relay.shape_of(call_4582))) # shape=(14, 2, 13)
bop_4637 = relay.bitwise_and(call_4583.astype('uint16'), relay.reshape(var_4633.astype('uint16'), relay.shape_of(call_4583))) # shape=(14, 2, 13)
uop_4641 = relay.rsqrt(call_4582.astype('float32')) # shape=(14, 2, 13)
uop_4643 = relay.rsqrt(call_4583.astype('float32')) # shape=(14, 2, 13)
output = relay.Tuple([bop_4634,uop_4641,])
output2 = relay.Tuple([bop_4637,uop_4643,])
func_4653 = relay.Function([var_4633,], output)
mod['func_4653'] = func_4653
mod = relay.transform.InferType()(mod)
var_4654 = relay.var("var_4654", dtype = "bool", shape = (14, 2, 13))#candidate|4654|(14, 2, 13)|var|bool
output = func_4653(var_4654)
func_4655 = relay.Function([var_4654], output)
mutated_mod['func_4655'] = func_4655
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4668 = relay.var("var_4668", dtype = "float64", shape = ())#candidate|4668|()|var|float64
var_4669 = relay.var("var_4669", dtype = "float64", shape = (2, 3, 10))#candidate|4669|(2, 3, 10)|var|float64
bop_4670 = relay.multiply(var_4668.astype('float64'), var_4669.astype('float64')) # shape=(2, 3, 10)
uop_4673 = relay.acos(bop_4670.astype('float32')) # shape=(2, 3, 10)
func_2912_call = mod.get_global_var('func_2912')
func_2915_call = mutated_mod.get_global_var('func_2915')
var_4676 = relay.var("var_4676", dtype = "float32", shape = (1024,))#candidate|4676|(1024,)|var|float32
call_4675 = relay.TupleGetItem(func_2912_call(relay.reshape(var_4676.astype('float32'), [16, 16, 4])), 0)
call_4677 = relay.TupleGetItem(func_2915_call(relay.reshape(var_4676.astype('float32'), [16, 16, 4])), 0)
func_3283_call = mod.get_global_var('func_3283')
func_3285_call = mutated_mod.get_global_var('func_3285')
var_4686 = relay.var("var_4686", dtype = "float64", shape = (1320,))#candidate|4686|(1320,)|var|float64
call_4685 = relay.TupleGetItem(func_3283_call(relay.reshape(var_4686.astype('float64'), [1320,])), 4)
call_4687 = relay.TupleGetItem(func_3285_call(relay.reshape(var_4686.astype('float64'), [1320,])), 4)
uop_4688 = relay.log(bop_4670.astype('float32')) # shape=(2, 3, 10)
output = relay.Tuple([uop_4673,call_4675,var_4676,call_4685,var_4686,uop_4688,])
output2 = relay.Tuple([uop_4673,call_4677,var_4676,call_4687,var_4686,uop_4688,])
func_4714 = relay.Function([var_4668,var_4669,var_4676,var_4686,], output)
mod['func_4714'] = func_4714
mod = relay.transform.InferType()(mod)
var_4715 = relay.var("var_4715", dtype = "float64", shape = ())#candidate|4715|()|var|float64
var_4716 = relay.var("var_4716", dtype = "float64", shape = (2, 3, 10))#candidate|4716|(2, 3, 10)|var|float64
var_4717 = relay.var("var_4717", dtype = "float32", shape = (1024,))#candidate|4717|(1024,)|var|float32
var_4718 = relay.var("var_4718", dtype = "float64", shape = (1320,))#candidate|4718|(1320,)|var|float64
output = func_4714(var_4715,var_4716,var_4717,var_4718,)
func_4719 = relay.Function([var_4715,var_4716,var_4717,var_4718,], output)
mutated_mod['func_4719'] = func_4719
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4546_call = mod.get_global_var('func_4546')
func_4547_call = mutated_mod.get_global_var('func_4547')
call_4807 = func_4546_call()
call_4808 = func_4546_call()
func_3531_call = mod.get_global_var('func_3531')
func_3535_call = mutated_mod.get_global_var('func_3535')
const_4830 = relay.const([1,3,1,-9,7,-8,8,9,7,6,-9,4,-1,-6,-5,1,8,-9,7,6,5,9,8,-3,10,-5,-2,-10,1,3,10,3,7,-6,9,-8,-8,10,-5,-10,-2,5,-3,9,2,9,6,-9,-3,-5,9,-1,-2,-4,1,3,1,9,4,10,-2,9,3,8,3,2,-1,-2,3,-10,-1,10,-3,-8,9,-5,8,-8,10,-9,-1,8,4,-5,-5,1,-5,10,10,-5,7,-9,-3,-8,-4,7,-7,-9,4,-8,-6,5,-10,1,4,-10,-5,-5,-7,-3,-9,-6,7,7,-7,10,-4,7,1,-5,-4,-5,-5,7,-5,-2,-3,9], dtype = "uint64")#candidate|4830|(128,)|const|uint64
var_4831 = relay.var("var_4831", dtype = "float32", shape = (1024,))#candidate|4831|(1024,)|var|float32
call_4829 = relay.TupleGetItem(func_3531_call(relay.reshape(const_4830.astype('uint64'), [128,]), relay.reshape(var_4831.astype('float32'), [1024,]), ), 2)
call_4832 = relay.TupleGetItem(func_3535_call(relay.reshape(const_4830.astype('uint64'), [128,]), relay.reshape(var_4831.astype('float32'), [1024,]), ), 2)
uop_4844 = relay.log10(var_4831.astype('float64')) # shape=(1024,)
func_3761_call = mod.get_global_var('func_3761')
func_3764_call = mutated_mod.get_global_var('func_3764')
var_4847 = relay.var("var_4847", dtype = "float64", shape = (105,))#candidate|4847|(105,)|var|float64
call_4846 = relay.TupleGetItem(func_3761_call(relay.reshape(var_4847.astype('float64'), [21, 5])), 1)
call_4848 = relay.TupleGetItem(func_3764_call(relay.reshape(var_4847.astype('float64'), [21, 5])), 1)
bop_4855 = relay.greater(uop_4844.astype('bool'), relay.reshape(var_4831.astype('bool'), relay.shape_of(uop_4844))) # shape=(1024,)
output = relay.Tuple([call_4807,call_4829,const_4830,call_4846,var_4847,bop_4855,])
output2 = relay.Tuple([call_4808,call_4832,const_4830,call_4848,var_4847,bop_4855,])
func_4864 = relay.Function([var_4831,var_4847,], output)
mod['func_4864'] = func_4864
mod = relay.transform.InferType()(mod)
mutated_mod['func_4864'] = func_4864
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4864_call = mutated_mod.get_global_var('func_4864')
var_4866 = relay.var("var_4866", dtype = "float32", shape = (1024,))#candidate|4866|(1024,)|var|float32
var_4867 = relay.var("var_4867", dtype = "float64", shape = (105,))#candidate|4867|(105,)|var|float64
call_4865 = func_4864_call(var_4866,var_4867,)
output = call_4865
func_4868 = relay.Function([var_4866,var_4867,], output)
mutated_mod['func_4868'] = func_4868
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2127_call = mod.get_global_var('func_2127')
func_2128_call = mutated_mod.get_global_var('func_2128')
call_4906 = func_2127_call()
call_4907 = func_2127_call()
output = relay.Tuple([call_4906,])
output2 = relay.Tuple([call_4907,])
func_4908 = relay.Function([], output)
mod['func_4908'] = func_4908
mod = relay.transform.InferType()(mod)
mutated_mod['func_4908'] = func_4908
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4908_call = mutated_mod.get_global_var('func_4908')
call_4909 = func_4908_call()
output = call_4909
func_4910 = relay.Function([], output)
mutated_mod['func_4910'] = func_4910
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2359_call = mod.get_global_var('func_2359')
func_2360_call = mutated_mod.get_global_var('func_2360')
call_5049 = func_2359_call()
call_5050 = func_2359_call()
uop_5051 = relay.erf(call_5049.astype('float32')) # shape=(16, 1, 4)
uop_5053 = relay.erf(call_5050.astype('float32')) # shape=(16, 1, 4)
output = relay.Tuple([uop_5051,])
output2 = relay.Tuple([uop_5053,])
func_5058 = relay.Function([], output)
mod['func_5058'] = func_5058
mod = relay.transform.InferType()(mod)
output = func_5058()
func_5059 = relay.Function([], output)
mutated_mod['func_5059'] = func_5059
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4430_call = mod.get_global_var('func_4430')
func_4431_call = mutated_mod.get_global_var('func_4431')
call_5078 = relay.TupleGetItem(func_4430_call(), 0)
call_5079 = relay.TupleGetItem(func_4431_call(), 0)
func_3834_call = mod.get_global_var('func_3834')
func_3835_call = mutated_mod.get_global_var('func_3835')
call_5080 = relay.TupleGetItem(func_3834_call(), 0)
call_5081 = relay.TupleGetItem(func_3835_call(), 0)
uop_5083 = relay.asin(call_5078.astype('float32')) # shape=(16, 1, 4)
uop_5085 = relay.asin(call_5079.astype('float32')) # shape=(16, 1, 4)
func_1626_call = mod.get_global_var('func_1626')
func_1628_call = mutated_mod.get_global_var('func_1628')
call_5087 = relay.TupleGetItem(func_1626_call(), 0)
call_5088 = relay.TupleGetItem(func_1628_call(), 0)
bop_5090 = relay.not_equal(uop_5083.astype('bool'), relay.reshape(call_5087.astype('bool'), relay.shape_of(uop_5083))) # shape=(16, 1, 4)
bop_5093 = relay.not_equal(uop_5085.astype('bool'), relay.reshape(call_5088.astype('bool'), relay.shape_of(uop_5085))) # shape=(16, 1, 4)
bop_5098 = relay.power(uop_5083.astype('float32'), relay.reshape(call_5078.astype('float32'), relay.shape_of(uop_5083))) # shape=(16, 1, 4)
bop_5101 = relay.power(uop_5085.astype('float32'), relay.reshape(call_5079.astype('float32'), relay.shape_of(uop_5085))) # shape=(16, 1, 4)
func_2570_call = mod.get_global_var('func_2570')
func_2571_call = mutated_mod.get_global_var('func_2571')
call_5102 = relay.TupleGetItem(func_2570_call(), 0)
call_5103 = relay.TupleGetItem(func_2571_call(), 0)
bop_5109 = relay.subtract(bop_5098.astype('int16'), relay.reshape(call_5080.astype('int16'), relay.shape_of(bop_5098))) # shape=(16, 1, 4)
bop_5112 = relay.subtract(bop_5101.astype('int16'), relay.reshape(call_5081.astype('int16'), relay.shape_of(bop_5101))) # shape=(16, 1, 4)
output = relay.Tuple([bop_5090,call_5102,bop_5109,])
output2 = relay.Tuple([bop_5093,call_5103,bop_5112,])
func_5116 = relay.Function([], output)
mod['func_5116'] = func_5116
mod = relay.transform.InferType()(mod)
mutated_mod['func_5116'] = func_5116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5116_call = mutated_mod.get_global_var('func_5116')
call_5117 = func_5116_call()
output = call_5117
func_5118 = relay.Function([], output)
mutated_mod['func_5118'] = func_5118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2540_call = mod.get_global_var('func_2540')
func_2542_call = mutated_mod.get_global_var('func_2542')
call_5154 = func_2540_call()
call_5155 = func_2540_call()
func_1116_call = mod.get_global_var('func_1116')
func_1118_call = mutated_mod.get_global_var('func_1118')
var_5170 = relay.var("var_5170", dtype = "float32", shape = (1638,))#candidate|5170|(1638,)|var|float32
call_5169 = relay.TupleGetItem(func_1116_call(relay.reshape(var_5170.astype('float32'), [13, 9, 14])), 0)
call_5171 = relay.TupleGetItem(func_1118_call(relay.reshape(var_5170.astype('float32'), [13, 9, 14])), 0)
output = relay.Tuple([call_5154,call_5169,var_5170,])
output2 = relay.Tuple([call_5155,call_5171,var_5170,])
func_5187 = relay.Function([var_5170,], output)
mod['func_5187'] = func_5187
mod = relay.transform.InferType()(mod)
var_5188 = relay.var("var_5188", dtype = "float32", shape = (1638,))#candidate|5188|(1638,)|var|float32
output = func_5187(var_5188)
func_5189 = relay.Function([var_5188], output)
mutated_mod['func_5189'] = func_5189
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4546_call = mod.get_global_var('func_4546')
func_4547_call = mutated_mod.get_global_var('func_4547')
call_5309 = func_4546_call()
call_5310 = func_4546_call()
output = call_5309
output2 = call_5310
func_5329 = relay.Function([], output)
mod['func_5329'] = func_5329
mod = relay.transform.InferType()(mod)
mutated_mod['func_5329'] = func_5329
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5329_call = mutated_mod.get_global_var('func_5329')
call_5330 = func_5329_call()
output = call_5330
func_5331 = relay.Function([], output)
mutated_mod['func_5331'] = func_5331
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2359_call = mod.get_global_var('func_2359')
func_2360_call = mutated_mod.get_global_var('func_2360')
call_5374 = func_2359_call()
call_5375 = func_2359_call()
func_4864_call = mod.get_global_var('func_4864')
func_4868_call = mutated_mod.get_global_var('func_4868')
const_5407 = relay.const([0.386221,7.566770,7.115739,-1.389943,-4.833028,5.551091,4.290353,-5.370686,-6.263250,-7.086780,6.999117,5.851226,-5.262794,2.401082,3.102850,8.703842,-0.279299,-5.950109,3.150580,-0.757752,-8.246192,3.571484,-3.413337,3.868191,3.318646,0.969328,-9.768229,-0.247652,4.549678,-3.580809,8.503407,2.932479,-8.584675,1.312722,-2.897065,7.215773,9.738380,-1.223280,8.421625,-9.465477,-8.268827,8.968907,-8.885305,6.681326,4.902780,-1.340457,5.217201,-6.798319,5.956067,7.418134,0.390825,9.106717,1.679605,-1.156378,9.684372,-3.118260,3.533912,-3.790995,8.490911,2.715112,2.345021,3.783653,4.146048,-8.510927,3.127515,-3.928151,5.891544,-3.225281,-6.583965,1.096944,1.190271,3.899027,1.669892,4.717902,0.565160,-4.643946,-6.534302,7.538688,9.610880,7.517519,-9.741833,-0.984799,4.574031,-2.103972,1.543027,4.827555,1.647667,9.580467,9.393863,6.117503,1.417072,0.109266,3.196839,5.582664,2.531782,-2.412016,7.434501,4.508521,8.737266,-3.559760,1.628343,6.990565,-4.529009,7.186087,4.824139,-3.327147,-3.153821,2.943934,-5.036086,2.889651,6.840314,4.761452,-7.580109,6.583806,8.257860,-7.364426,5.711354,8.533152,6.777458,1.612232,-6.432313,1.020989,-9.064627,-3.292979,-4.043813,-9.831297,9.549891,-5.317868,-8.324766,9.929738,4.389187,-7.358230,-7.492804,-1.868625,-3.314067,-0.079936,5.275336,-6.571636,-5.149290,-2.891760,-0.438731,-9.850182,3.939711,6.249261,-2.715932,9.901980,-1.616562,3.714986,7.161519,-2.561646,6.193476,-5.712592,1.161033,-5.914569,-7.072866,-5.081507,1.125874,-6.392030,3.207145,-9.649830,3.364196,2.024858,6.472503,-1.488837,-5.516288,3.725016,7.515600,-9.646703,-0.384369,4.959072,2.271101,7.768422,-0.155345,4.982031,8.367793,-1.197154,5.485312,-2.853742,-8.725913,-1.609492,-6.471639,-6.684834,2.890489,-3.747517,-4.912032,-1.279261,6.831816,-5.199713,-5.494623,9.108976,-9.782627,-3.744222,7.561817,-4.987604,2.579840,-8.699586,-0.784048,0.726125,5.627920,2.947685,0.166829,6.319651,2.223244,6.244106,-8.139208,3.942905,-4.664272,-1.127084,9.085844,5.888967,4.594035,-0.913278,-3.787171,-2.671038,2.399077,6.379064,8.368234,8.846580,3.183236,-2.865961,6.547795,-1.599136,9.314433,4.916489,1.596041,9.191969,-7.619178,1.425991,-2.221089,-9.193554,1.751460,-1.004870,-6.216294,-6.450166,-7.767441,2.139630,-0.127852,8.717403,9.272417,-2.487947,7.924148,7.207149,0.560414,6.686266,-2.589168,7.249437,7.464650,1.713962,3.053861,9.800351,-1.753384,0.092767,-8.285599,2.420786,7.945610,4.297388,6.197584,-7.261505,8.076899,-5.795247,7.304001,4.582965,-3.504053,3.167770,-5.741794,6.451154,2.715731,-4.829241,-8.665523,1.552132,3.366571,-7.268351,-7.370016,-3.424457,-6.432252,6.956472,-6.329694,9.551856,2.393138,6.069488,6.812864,3.810250,4.376983,1.683869,7.925920,-1.096011,8.538482,8.443900,8.116568,7.303332,4.642954,-8.894396,9.813250,-9.142011,-8.188588,4.735164,-6.669577,-3.080895,-5.448241,5.271175,9.939441,-9.219700,4.132873,-8.477449,0.768924,-6.908477,-8.013775,8.946184,-6.813731,0.180360,7.722718,2.606057,9.189946,9.016768,8.014238,5.396804,-4.070699,3.203284,9.425457,0.993140,1.721247,9.428738,-6.676393,6.910012,-8.297451,7.230836,6.726284,-7.347069,-3.189053,-6.109071,-5.349913,-4.947396,-4.239660,-0.308906,9.252816,-1.470641,-9.345986,5.084280,-7.672123,3.083971,2.076359,-9.107160,9.728310,1.156278,5.215096,9.661658,1.703045,-1.124797,8.097812,4.190157,-2.122240,5.317193,-3.058858,1.589154,-3.668093,9.698698,4.143236,-7.862471,-8.804632,4.209969,-3.661730,-6.511418,-9.650728,2.144394,9.577929,3.916638,-9.005867,-5.369048,2.945350,-1.521031,2.017110,4.120852,6.264074,1.861595,2.101777,3.072839,-2.015863,1.981101,1.049174,-9.798276,4.272688,-0.700454,7.256727,-4.204268,8.535993,-6.537971,7.083540,7.208826,8.985531,-4.643345,4.949402,-0.848625,9.864169,4.244411,-0.071894,-2.860712,8.639883,-8.637566,7.028403,8.374862,4.465006,5.092296,6.172658,8.216522,-2.388875,3.967205,-3.560146,7.607541,7.568284,-6.067327,-2.615348,7.945672,9.031433,-1.855002,2.061353,0.669459,5.120995,8.773871,-6.258001,-3.324464,-8.726237,-9.660132,8.580738,9.601242,-0.476238,2.500653,-9.275976,-8.844679,-1.074514,-2.245155,-0.069441,-4.849563,7.280649,-0.576462,-6.210562,-7.581260,-0.168731,6.201563,-9.747859,-8.121521,-7.876383,7.937123,3.400709,5.316909,6.576878,0.479028,5.949509,5.169416,8.177006,-4.534169,-1.649219,-7.949094,-1.985606,4.715531,-4.071600,6.648868,1.218879,3.123323,5.342023,-7.162743,3.460534,-7.404281,5.501046,8.139424,-4.351990,-9.001175,-0.198534,2.184861,6.129645,5.348976,5.601116,-0.549480,9.423300,6.685382,-8.246650,5.569578,3.869344,3.466728,-9.760777,2.797082,-4.838145,8.892578,-1.932107,7.955768,1.224024,-5.898045,-9.746054,1.899613,-8.234842,-0.726123,-8.244766,-5.341107,9.519545,-1.770019,-2.871928,-5.690454,-4.926865,6.705550,1.149786,-9.682962,7.911403,5.024245,7.969825,-6.303285,2.088250,7.212206,-7.202547,7.422336,5.945148,6.402736,6.975349,-9.598380,-0.245753,-6.251406,3.218899,-8.241920,4.992199,-1.466352,8.314539,9.709583,4.846450,-2.485308,-9.575829,7.772614,-4.090019,-6.441920,0.665924,5.379582,-0.027391,0.093362,-3.111543,9.499474,2.630512,-6.560298,-3.089457,5.883371,-4.175936,2.491883,5.651779,-5.589379,-4.521219,2.446116,-0.995302,6.484569,-8.250051,-2.873717,-8.915864,3.132956,9.171010,-1.965714,8.968027,0.103174,-8.210351,-3.099070,9.139877,5.819329,0.413950,5.024149,7.414058,1.600724,9.165622,-2.942066,5.786921,0.299107,5.472563,-8.228993,8.691950,8.560790,-8.190426,3.307455,-4.065934,6.979032,2.558922,4.119028,7.482312,1.069352,-5.480736,9.405460,9.234755,-5.249791,-8.764937,5.555698,-4.862344,5.635047,-1.280821,7.411377,1.204598,5.718923,3.598104,4.015993,9.873020,-0.133581,-5.878651,9.073194,-5.102100,1.735668,-6.658686,9.504052,1.237000,9.708285,3.543219,-0.881124,-3.483122,-6.382811,6.919613,-7.956475,-4.407117,-4.937423,-9.907411,-9.706759,-4.169449,-0.163875,-1.748616,5.836846,-8.008640,2.014306,9.736086,9.480459,4.058400,-4.665818,2.374417,8.567001,0.195675,2.299792,0.001770,-5.894864,6.873992,-9.558625,-5.566831,7.072988,9.692613,3.797795,-5.584055,-3.414227,-6.121964,-1.540163,4.248340,6.937858,-2.679681,3.837248,-4.537852,4.469962,-8.277638,8.567553,9.416628,3.369887,0.492708,-8.635006,1.070658,-2.231053,4.354491,-6.893791,-2.828735,8.036929,-4.388578,1.685721,-6.969686,-7.329443,-3.014598,-6.740809,-6.718289,-8.861800,-8.981464,7.782004,1.286270,7.290560,9.002248,-0.496369,4.058354,-7.286249,-0.706041,-8.470792,-1.396095,3.721797,-8.387397,-5.192743,5.526104,-3.792663,0.072412,-6.910695,9.767892,5.396618,9.052944,2.748788,4.926513,-4.683570,8.696359,5.544621,1.570537,-9.018575,-0.035181,-8.350821,-1.273089,4.196977,-1.051058,-7.187427,1.254917,-6.324229,1.032958,3.587666,3.804565,-6.766199,-0.726854,-4.579618,-9.122991,5.015314,-0.252297,4.713323,-7.752839,-7.189958,-9.090234,7.352469,5.023431,-7.149454,5.024669,8.523998,0.645628,7.491179,3.952007,4.186757,-7.688375,-0.769414,-2.388985,2.694354,-4.642058,6.281613,1.627980,-7.539858,5.964506,4.410978,-6.805884,0.827797,0.689612,2.265048,4.852280,-8.477998,5.339500,-0.899059,-8.223927,0.987862,9.905724,6.928881,1.856310,4.477369,-6.219970,2.117521,-3.618017,-8.758463,3.482816,-2.748642,-4.342304,-2.570324,-8.367074,9.551128,1.793337,1.716551,-9.029066,8.968718,8.625103,-4.045802,9.085957,-3.725808,-4.280714,4.535703,5.821268,-2.673076,8.930041,0.257567,8.712231,-6.923803,9.248570,-2.118830,7.819579,4.258135,-5.948273,-8.425897,5.857647,0.177142,-9.458676,9.204576,9.549530,9.948578,9.284673,-8.484734,-8.763907,4.007762,-3.219620,7.563047,0.104622,-4.063873,-6.585031,2.394368,-9.917433,6.950717,-0.184343,-8.195276,5.759055,-4.680699,-1.251023,8.407964,9.005859,9.021245,-3.771763,6.642196,1.613036,-1.424708,8.745425,-8.022995,-5.191351,-9.924024,-4.676375,-1.325525,-0.196257,-9.429529,6.798009,3.602193,-5.257575,3.202955,0.801660,-2.709789,-3.135081,-9.377644,3.642015,6.897271,2.971440,-5.959795,-0.827640,5.439453,5.375080,-4.015518,5.787604,5.706677,-1.733850,0.637550,-8.620888,-0.126549,-1.687132,-3.702828,4.133262,2.940936,1.174768,2.063131,1.096089,-3.811913,-1.312271,6.160309,6.734710,-9.328166,0.286421,5.264168,4.601306,8.732605,5.717457,9.621441,2.380875,8.108469,-9.567071,5.934611,4.730374,-3.599147,-4.853016,6.991523,1.283843,7.290422,3.469943,-0.379974,-4.636285,-9.559052,9.661362,7.434358,0.823870,2.832120,1.097541,1.231227,-1.731019,-5.537949,6.483948,-1.022813,1.713994,-7.004077,9.063010,-8.700171,-9.564652,6.604135,-8.050731,-0.161445,8.882097,-7.776279,-2.083338,3.949232,4.323698,8.448452,5.615224,8.128931,2.713085,-7.336726,-9.013782,8.439458,4.495641,-1.767669,1.152295,0.504239,-9.705224,9.150734,9.202980,-6.072019,-9.285147,-9.601362,6.890629,9.934032,2.599988,9.479769,-8.592766,-9.535189,5.859707,8.144183,7.032960,6.089509,-1.259498,0.936767,4.504956,6.765894,4.484393,-4.694400,3.945099,-4.737616,0.536719,9.715324,-7.007741,7.936428,-7.978661,-4.360731,-9.730221,-2.954505,-1.285871,-7.306052,6.504351,7.881940,0.221759,3.401211,8.718795,1.308653,-6.580542,-4.707139,-5.669392,-7.664517,5.618258,9.016720,6.164263,-3.247616,7.087648,8.814872,-6.349366,5.610223,-3.317714,7.004286,-7.224784,-7.002325,4.329501,8.219527,9.829578,-7.884262,-9.026283,-5.828059,8.087460,9.184723,5.264884,3.129947,-0.132846,-3.747853,-9.023718,-5.370671,-0.435447,3.766438,-0.457344,-0.330659,-7.075923,-0.070833,-9.619254,-9.296973,5.444331,-0.751266,7.872866,2.873502,-6.440285,-5.653768,5.741843,-3.722780,-3.664324,2.538419,-3.920902,-3.714266,-3.790021,-2.427995,4.786640,1.627579,-6.191033,4.358735,5.680462,3.700462,-5.601552,-1.560105,0.243871,-3.641465,-6.389966,-2.405116,4.780867,-6.569075,3.405446,-3.097704,0.694436,8.784629,2.264335,3.597558,9.359740,-3.912208,9.232069,4.994049,1.533369,-0.892711,0.155062,5.568394,5.711028,3.786300], dtype = "float32")#candidate|5407|(1024,)|const|float32
var_5408 = relay.var("var_5408", dtype = "float64", shape = (105,))#candidate|5408|(105,)|var|float64
call_5406 = relay.TupleGetItem(func_4864_call(relay.reshape(const_5407.astype('float32'), [1024,]), relay.reshape(var_5408.astype('float64'), [105,]), ), 3)
call_5409 = relay.TupleGetItem(func_4868_call(relay.reshape(const_5407.astype('float32'), [1024,]), relay.reshape(var_5408.astype('float64'), [105,]), ), 3)
uop_5412 = relay.atan(const_5407.astype('float32')) # shape=(1024,)
output = relay.Tuple([call_5374,call_5406,var_5408,uop_5412,])
output2 = relay.Tuple([call_5375,call_5409,var_5408,uop_5412,])
func_5428 = relay.Function([var_5408,], output)
mod['func_5428'] = func_5428
mod = relay.transform.InferType()(mod)
var_5429 = relay.var("var_5429", dtype = "float64", shape = (105,))#candidate|5429|(105,)|var|float64
output = func_5428(var_5429)
func_5430 = relay.Function([var_5429], output)
mutated_mod['func_5430'] = func_5430
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5464 = relay.var("var_5464", dtype = "float64", shape = (10, 7, 11))#candidate|5464|(10, 7, 11)|var|float64
var_5465 = relay.var("var_5465", dtype = "float64", shape = (10, 7, 11))#candidate|5465|(10, 7, 11)|var|float64
bop_5466 = relay.divide(var_5464.astype('float64'), relay.reshape(var_5465.astype('float64'), relay.shape_of(var_5464))) # shape=(10, 7, 11)
func_1116_call = mod.get_global_var('func_1116')
func_1118_call = mutated_mod.get_global_var('func_1118')
const_5477 = relay.const([[3.628647,4.420204,9.648600,1.741042,-4.799113,-1.882121,-5.050323,-0.072912,1.854115,-0.392114,-9.381710,-3.851010,-7.857771,-3.803716,-4.508886,-0.119500,7.076885,9.206120,-4.105882,1.943826,-5.731688,6.824731,4.315705,8.176650,-5.169432,6.244601,8.230315,-8.330883,-0.498375,-8.938776,1.148179,-4.061719,-9.869402,8.332896,-1.500644,7.218022,-2.951769,0.772446,-1.365276,1.349670,0.788175,7.144172,-9.535868,-0.398687,-4.644554,4.160461,-1.630122,6.869248,7.716819,1.964541,8.291572,-4.082119,3.191820,7.134795,2.480972,-8.824129,6.982466,1.041943,6.407553,-3.844969,-1.256373,6.921604,4.651530,8.380158,-2.835647,9.285807,-3.243021,4.188229,1.657909,0.014675,2.698968,6.776548,-1.200034,-1.300302,2.169531,0.205902,0.373250,-0.008578,6.320197,7.030642,-6.856180,7.772644,2.967008,-5.553571,9.316185,3.014792,-3.033260,-5.414028,1.056984,-4.521338,2.567846,-2.536040,0.430492,-5.531743,-6.902663,-7.002032,-1.172882,3.372918,-5.999692,-3.532683,-2.979991,0.820338,9.236296,3.926229,-1.666951,6.043248,5.721608,-1.535933,-7.912704,-7.440497,2.443490,8.821863,-0.623257,5.823657,-7.906894,6.841779,4.941810,5.022636,-5.361219,7.863845,4.981871,-9.824976,-4.077598,7.330993,9.669664,9.139741,-5.672892,-6.150960,-5.942308,2.003208,-4.350704,8.887739,9.394352,-2.114858,6.640247,9.100850,-1.082219,2.159698,-0.261467,2.915722,-5.257098,-5.438292,6.092508,-8.907151,-2.030587,-6.841780,-7.844128,-9.827628,9.722793,9.337682,-0.003987,7.234386,-1.853458,0.473926,8.531220,2.602901,-3.396965,-5.329810,-3.134546,4.882312,-4.849112,7.061715,2.952786,3.724683,-0.720404,6.410916,1.383787,3.652373,8.145223,-4.108969,3.350670,2.151095,-2.036305,9.218118,-0.414463,5.480314,0.007913,9.565518,4.913759,0.828096,7.240776,-7.756149,0.949874,-2.726091,4.688848,3.647093,-6.525564,-3.774443,-5.389177,-0.490220,-5.169056,7.012619,-8.525588,-0.086758,2.212334,-1.045650,-9.227762,2.663638,-4.115519,-0.602821,4.850289,9.955797,-7.483939,-0.856033,4.607453,5.706281,-9.009646,3.129096,8.360250,-6.656940,1.845496,5.007405,-5.398106,7.582091,4.631775,-3.456476,8.034852,-7.524484,4.774336,-8.195325,1.336041,-6.605085,5.586800,0.234980,9.768370,1.166468,-4.418364,-9.533688,-0.794515,0.899250,6.722019,-0.024830,0.308304,9.518033],[3.050577,-8.765395,8.990532,-5.779788,-5.121333,-0.963451,-7.237956,0.062921,-6.556192,0.946342,6.516369,-5.633962,-0.522545,-5.205381,-6.700651,-6.042013,5.142284,-0.727842,4.321640,3.911614,-4.252144,0.486342,-9.116985,3.368149,-6.654489,1.899467,-0.975582,-1.969511,-9.759935,-2.780893,-0.237955,-6.687450,2.717770,2.315345,2.129056,2.584292,-2.427749,-3.037481,8.640333,5.759023,-0.880302,6.765864,1.195126,0.263288,-3.877338,-0.381038,-2.248325,3.802672,3.701017,-4.926144,4.345124,4.690001,-8.328375,-5.661346,0.096032,9.711528,-4.338532,-4.796460,9.511534,7.099386,-8.749199,-2.897368,-3.023182,-5.242851,-0.757634,5.193139,-6.492277,3.143498,-0.242425,-5.755897,-6.590766,-9.461419,0.145045,-3.039792,-5.964614,-9.161171,3.915203,-7.158135,-1.444967,0.678399,6.357872,5.868196,3.104753,4.163019,-5.108226,-2.137858,7.812453,-7.515804,4.845219,3.474324,-3.064537,-3.169987,0.697694,-7.593398,-3.738650,-1.698662,-3.839017,7.806533,3.494899,2.809067,6.971980,-5.934821,-3.605467,0.988038,4.147356,-3.540429,-1.293145,0.799204,0.968517,-2.010830,8.950007,1.114924,-4.338614,-1.185176,6.302035,9.601524,3.376663,-5.576214,-8.631809,0.610002,-7.303012,-7.722839,4.747164,-9.951034,0.461143,-1.456286,-5.750406,-5.028415,-4.445177,-8.547878,-2.025970,-4.774804,4.843046,-3.761763,-9.513668,4.085404,7.740379,-2.828143,1.647641,3.202355,1.268693,7.602029,5.547251,-1.261394,-9.748127,-8.379084,-3.276377,-4.218427,5.651307,-4.496399,5.037687,-5.730446,6.676365,2.952684,-6.602793,9.965002,-3.929529,9.858469,-9.045691,1.311466,-2.708010,5.805843,2.582844,-1.446387,-0.686331,-6.484904,-9.331115,-9.361423,4.231592,-5.075978,-3.449026,1.585042,-6.634658,2.805525,-8.594649,-2.012616,-1.124349,-0.033906,1.468209,-0.641760,8.250022,9.191456,5.154281,5.664261,6.658915,-3.886665,0.923237,-1.242032,-7.964473,-6.424622,4.290856,8.468097,-5.623491,3.981181,-0.053316,-2.869504,-5.409613,0.649811,0.491628,6.571234,-0.029226,7.056634,9.473968,-1.515451,7.861283,1.437511,6.548371,-3.612225,-2.644641,7.882643,6.165373,-0.508405,-8.931586,4.482156,-8.561770,-8.601857,0.832464,-1.512309,-9.235712,-6.217577,7.345207,-3.331496,1.609374,-0.929507,-1.548531,-9.179822,8.439326,9.086328,4.242321,-9.161833,6.675845,-3.629154,-2.774610,-0.424310],[0.343388,-6.730662,-7.827629,8.548938,7.147807,5.473379,-8.233152,4.724329,-4.854261,3.904858,7.121692,4.822197,-0.435032,7.495214,-5.962960,9.952578,9.573992,-1.363696,-9.299366,4.377138,8.981349,0.543168,-2.001321,-5.979024,-0.849611,-8.965929,5.342784,-8.836100,-0.443157,-8.351979,6.621123,-9.913208,8.111035,-8.424266,1.062878,0.451552,-9.165919,-9.936858,4.413413,3.015107,-8.871750,3.515438,3.074562,5.359373,-0.715773,-4.245594,-8.173679,-5.137877,2.054647,1.128682,-8.549893,-8.300650,-4.883342,3.684594,7.792865,0.974024,9.867836,3.964222,-3.537469,-2.616385,-9.699140,5.376563,3.138628,-4.118079,-4.152456,3.665270,-9.197923,-9.604125,-7.600913,-6.616551,-7.712240,7.806769,-0.875020,4.928160,-5.283188,1.455675,-3.605132,8.403976,-1.274185,2.856378,3.228693,4.897652,-4.450309,-7.679438,-6.768132,-6.030297,-5.726658,-8.341468,-4.592597,-2.403780,4.982268,0.764341,-9.003106,9.849834,-8.718745,2.969413,-3.152901,4.027219,-0.090182,5.022731,-7.225488,-3.927855,-2.668070,0.899319,-4.007862,2.849505,-6.284187,0.904500,1.737109,2.767650,8.983862,0.683291,-4.634137,-7.719150,8.577556,6.369407,1.628043,-1.537944,-6.334074,-9.646134,5.680171,-6.574991,-8.456497,-6.069360,-1.652547,5.684707,6.926024,8.301933,0.108107,-2.061300,-4.646831,-1.258753,8.150333,8.435183,7.993228,-9.665672,1.856848,-2.127821,5.271510,1.429292,-1.491623,5.383701,2.487292,0.422927,7.997136,1.672124,3.682080,9.404579,2.676334,-5.558475,4.984840,5.914472,4.551367,-0.387537,2.272166,3.012895,7.686773,9.949298,1.953324,2.924412,-1.201323,-7.984830,0.256672,7.457401,-2.221982,7.726093,-6.505306,-8.004947,-9.442189,-8.221937,-3.028005,7.995162,4.865258,3.023982,-9.048368,0.419609,7.072757,-1.673095,9.922186,3.765053,-1.702661,1.060095,-1.025655,-7.243741,8.514525,-3.619876,-4.740011,8.230911,-7.812887,1.278920,7.824686,4.223361,-2.967731,5.932332,6.027863,-0.870532,6.978487,6.589861,5.756970,-8.185638,-4.163176,3.192192,5.562114,-0.991354,8.298635,-7.336869,-4.233165,0.419226,1.104951,5.055398,-1.724142,-3.264665,5.655897,7.732081,-2.472214,3.975236,-7.662730,4.311353,5.179593,6.051299,1.699569,-2.373096,1.281360,6.260582,-5.637277,-8.104721,-2.559169,0.902065,-1.930254,-4.076681,-4.229670,1.811070,-3.283694,-0.646952],[3.278621,-1.585359,4.596039,-6.914290,6.430950,-8.100167,-0.854826,-4.222015,0.041419,9.533422,-5.624006,-5.781024,2.568341,5.365889,0.090594,-6.421131,3.720416,1.556384,0.460747,2.852749,4.915481,-6.481742,-3.887621,-1.473469,-7.790916,8.351332,-5.224518,-2.655921,-6.649801,0.369171,2.610439,-0.310976,6.394297,-1.045970,9.316094,5.751256,3.878702,9.941130,-0.547186,2.057159,0.317675,2.037620,1.275511,5.727445,6.419973,5.016251,-6.984129,9.606481,9.065407,-2.117932,5.082315,-1.232661,-4.103927,8.088339,3.116716,2.422002,6.943643,-3.112188,-6.971525,-9.125684,6.463008,1.042488,4.644884,9.377963,-9.637693,-3.713891,1.079489,-9.213922,-4.387498,-8.997481,-8.995259,-2.279283,-5.118477,-5.286349,-4.388251,-2.362368,-7.709929,-1.161828,-7.951016,5.470279,6.759185,-8.897118,-3.116031,-7.399439,-0.606754,-3.097834,2.744807,7.598871,-3.852431,-9.948761,-7.722605,-0.379236,-4.366575,2.661270,-7.046782,2.446173,-1.825795,-4.704706,-0.064241,6.662465,5.504760,-7.422782,-0.479224,-7.378612,3.703789,7.765085,4.556858,2.772340,-9.118957,-8.798414,1.097782,0.776557,9.648655,-3.742664,-3.993459,7.539304,5.386014,-4.331386,4.526110,-5.910924,-1.185626,-9.666345,6.219151,5.532317,-5.906375,-1.207990,-0.293732,3.685684,0.858956,1.631461,2.193648,3.320132,-5.908498,-3.718338,-9.403841,1.145287,8.341854,-0.077321,9.173541,-3.225939,7.696424,7.778301,-2.565338,-4.541609,-4.970554,-8.195456,-5.882858,-8.006687,8.792854,-0.948714,-2.196055,-6.274966,1.826968,-5.496801,9.901388,3.548549,-8.642020,-3.704692,0.332735,-9.770444,-0.153910,-6.509455,1.534381,-7.701292,6.571707,-8.726959,-9.065225,2.854642,-7.504010,-2.230837,2.796148,-0.483231,-1.107736,-1.469795,3.773221,8.060444,9.888448,-6.331766,-5.606625,-8.731744,6.697039,3.491793,3.479178,-2.788030,0.646861,2.807789,-1.381683,-5.666811,-4.197119,-5.287141,6.314866,-9.087911,1.925511,9.321833,2.070654,-5.097943,3.797486,-3.973130,-1.140948,-4.729303,5.676365,-3.807928,6.262195,-8.074140,-1.539547,-1.726657,-4.630500,-6.269898,3.624362,4.874461,6.674381,-8.335835,-1.913922,-4.404470,4.906435,-8.353837,-0.458554,-1.311639,4.672487,-4.163960,5.561485,8.176928,7.763968,-9.657710,-4.860147,9.754286,2.692555,-1.245365,-1.940981,-1.122113,0.377045,-9.870285,-4.225360,2.695507],[8.081327,5.444126,-8.035166,-3.263712,-9.197199,4.700307,-6.397619,0.988993,-8.559552,1.340615,-4.209971,-1.593480,-2.933443,3.297059,9.696582,-6.075751,-2.367500,1.374075,7.395335,-0.045483,-2.227265,-3.013218,-5.735472,-5.042890,3.241057,0.999810,-9.095431,2.475191,-1.809923,7.119202,2.966018,-8.169466,1.771924,3.374506,1.966087,-8.240504,3.228738,3.130710,-8.875161,-0.021669,2.713410,6.883735,7.632598,4.441358,-4.136436,7.270134,-1.932374,8.043570,7.432478,-6.467689,4.399698,3.623461,2.681559,-7.033514,-1.170454,2.085666,9.204239,6.987649,0.224286,-5.369849,3.009769,-7.918985,-6.140529,3.745379,-3.829891,-6.200059,1.023565,-4.495845,-8.484846,-2.416179,4.272255,9.165357,0.439451,6.661110,5.794969,-8.646980,9.393441,-4.083605,-3.775432,5.751104,-1.043504,-8.950829,6.382419,-7.119432,-7.713999,1.174607,5.372351,-9.274420,0.738182,4.547122,6.311674,-5.191681,-5.834300,-1.431056,-8.667183,6.156691,-9.016865,-7.080219,-0.974950,9.423840,-1.211902,-8.398557,2.377913,-3.592044,-0.706156,3.061030,8.106396,-9.700449,5.455198,-9.156447,2.068432,-4.789574,-8.380213,8.432311,6.241827,8.673390,3.359622,0.972005,-5.524145,-5.401616,-1.359126,-1.998225,3.138365,1.352527,-8.301992,-4.045884,-4.844376,7.071629,-4.863336,8.796624,0.471671,8.784247,8.094987,-1.331762,-1.736388,-7.620834,-8.579750,-7.476406,-0.175660,-5.794057,5.052142,-4.163284,6.715282,-5.782144,-1.335250,-6.371952,-8.953355,1.321067,-8.336926,6.849475,-4.716236,8.180017,5.440697,-8.835058,-3.768357,-6.768179,9.027123,0.355026,-1.685188,-7.637759,3.482055,-4.279762,-9.003931,5.566301,7.378831,8.605553,0.867053,1.366843,-2.533678,-7.176709,-6.186610,2.676692,5.095591,5.549853,-4.957818,-6.476087,-8.125288,-4.703448,-4.287754,2.721578,-5.342356,4.531427,-3.815219,-0.158023,-5.722028,0.065463,8.995844,4.435314,2.315000,-8.131406,-5.740406,7.759403,-3.810452,-7.443649,-6.018739,-5.261637,-1.958996,-7.308308,-8.557491,-2.849020,8.717125,-5.147858,-9.143977,9.204138,-5.417127,5.380141,-0.318902,3.884935,-0.470561,-5.792052,6.367231,-0.454967,-8.434169,-9.358952,5.772120,-7.268428,-0.384007,-9.427032,-0.453211,-1.397602,9.603427,7.796449,7.057800,-2.335801,-6.490622,-2.415930,-3.235275,-9.252991,3.611313,9.005467,9.640783,1.890199,-6.401182,-9.666186],[9.159783,4.692474,-1.421220,-0.897292,5.877228,-8.800489,2.583825,-8.156870,9.287888,9.049042,7.352792,2.808320,-7.458352,5.988315,-5.384180,1.549421,-6.513256,3.111234,8.344254,-5.392428,-8.199689,6.309415,2.787312,6.857855,-1.338069,1.749076,-4.813566,-6.988584,9.554858,4.452824,6.298208,8.484072,-4.684967,-9.707101,5.393970,-4.625474,4.424487,3.999003,7.075895,1.723856,1.203386,-4.279818,-7.491938,-8.292352,-3.291125,6.312347,-7.156283,8.633248,1.154214,5.898639,6.125351,0.245924,1.877034,8.050652,5.197729,-9.741404,-9.394233,-8.440557,5.464896,-9.423343,1.637204,4.936604,1.002640,-7.489787,-1.028368,7.211979,2.647730,3.924192,3.067634,-5.144130,8.050470,-3.451636,6.812429,-6.389744,8.689823,-2.504857,3.547468,8.058446,-4.152832,5.172448,1.007024,-2.122230,9.586733,5.971937,4.400447,-8.028875,-8.035670,-7.677954,1.492636,-8.684632,9.391954,5.094268,-0.248599,5.460378,-3.306124,1.823506,8.000518,4.566334,7.390020,-3.497405,-1.516144,-0.439663,7.954295,-0.977046,1.215959,5.219182,6.233843,4.870229,8.310558,-8.881651,-6.870316,2.677198,-4.472991,-2.673067,5.912320,-3.745442,6.795529,-7.150156,6.246602,-8.972073,7.914134,3.533867,-2.631469,-8.178265,-7.040144,-8.367710,5.491928,-7.304085,-0.742179,1.229511,3.351991,3.785685,-3.171730,0.365437,-2.063062,9.617083,-9.046058,-2.243868,0.782074,-9.959160,6.658286,-0.260988,7.957933,-6.571033,-5.762850,4.504736,0.856455,-6.911213,8.849688,2.061879,8.720498,6.973834,-1.042957,2.905210,1.117164,6.992819,-5.262993,8.483816,-6.444492,7.882156,0.592679,0.318407,0.640485,7.051434,2.401407,-0.032403,4.588643,-3.342533,1.707378,6.689549,-8.657753,8.017114,0.094242,-7.746040,2.390374,-0.992558,-3.152637,5.701108,6.347987,-9.901957,-3.202322,-8.185726,4.437586,5.622650,-3.361762,8.827788,2.441141,5.442369,6.774369,-0.783568,1.358772,8.312778,-2.049540,7.408339,7.135145,9.703597,-7.122140,9.010056,-1.378097,-4.379985,-1.493556,6.078798,-9.048582,-6.668135,-3.400349,-3.217660,3.047307,-8.993866,4.897888,2.945971,9.073826,-6.944739,-8.011907,3.816562,-4.133643,5.747648,0.687004,-3.667245,5.951456,6.726481,5.042540,2.029811,-9.722849,4.689391,3.802803,-4.860479,4.177467,-6.794517,6.964209,-5.943515,2.811926,-3.483415,5.390410,8.025720],[4.604039,-9.876379,-7.676570,1.580628,6.275326,-4.504886,9.993143,-7.920808,0.014871,8.009747,-1.509540,-9.651435,7.962674,4.225620,8.085915,-9.231610,0.077463,-4.412582,-8.738314,-2.417539,-6.480743,1.279657,-4.020896,-4.116904,-9.611482,-1.620614,1.151267,9.138388,8.597654,6.261583,3.083734,8.988964,3.792279,-2.802031,0.572526,5.653991,-2.747601,5.128656,-3.707279,-6.849403,3.795566,-6.404731,-0.527931,-1.404668,-0.279546,-8.464187,3.898237,-5.749495,7.950459,-3.050519,-5.339010,-2.687552,-9.978026,9.524637,0.007751,-4.819535,-6.978712,-5.713862,-2.559170,-1.647910,-0.113889,-8.070897,-7.357715,-5.715263,2.631897,-7.553554,0.467112,-2.514726,-9.391619,-6.550215,-6.267830,2.552956,1.211962,8.710544,-1.269348,-0.792484,-8.182765,-3.814511,-7.541533,8.106384,5.162999,6.740585,-5.444244,7.601626,7.172609,5.436117,-7.290743,-8.165639,-5.028322,9.081465,0.309981,1.085062,-2.723173,-3.771614,9.044474,-1.506480,9.689774,5.074102,-4.211652,-3.147023,-9.580757,6.058168,-5.788396,7.153305,6.456270,6.419086,-5.706191,-8.419889,-4.598851,8.290792,-9.681828,9.911251,3.127929,-3.914673,1.732599,0.532524,-1.042017,-7.003289,-9.720495,5.832226,-9.707652,-1.779831,9.638251,3.063132,2.681443,5.013588,-0.093855,2.523226,5.397231,7.035455,7.945165,5.496468,5.974247,-0.362387,2.848939,9.843952,2.719268,-3.291231,2.137881,-0.379716,4.179690,-0.806441,-7.314009,8.397362,8.517785,-1.706895,-3.277890,-9.166809,2.748543,7.031189,-1.207992,-4.316906,5.761320,5.129560,-3.809883,0.780939,2.571032,-0.749663,-8.237527,-9.123637,-6.571669,-3.277699,-2.417385,2.894992,4.678904,-5.088274,8.296103,9.984654,0.155843,0.980717,8.510075,4.306518,5.127138,-5.441170,-1.854169,7.871451,-6.813147,7.789504,5.673209,-2.239046,3.165203,-5.069714,-9.845228,6.527994,-6.746317,6.207607,-4.324083,3.082584,-2.642303,9.803396,-2.233696,-0.345763,-8.004747,8.644643,-3.824374,-3.973244,-8.073628,-6.005764,3.080087,-1.930031,1.364511,7.911730,9.211352,6.496961,-7.115246,-2.348358,6.862711,4.215804,-4.692572,2.473188,4.578773,-3.573858,2.199268,-2.455506,2.038059,-5.899370,-1.665274,-1.082079,-2.293995,-6.308539,-0.962365,8.648468,7.498303,5.195784,3.476735,-0.424782,-9.543190,-6.264980,9.739345,-3.287900,-4.681275,4.029054,-0.625883,-2.695043]], dtype = "float32")#candidate|5477|(7, 234)|const|float32
call_5476 = relay.TupleGetItem(func_1116_call(relay.reshape(const_5477.astype('float32'), [13, 9, 14])), 0)
call_5478 = relay.TupleGetItem(func_1118_call(relay.reshape(const_5477.astype('float32'), [13, 9, 14])), 0)
uop_5488 = relay.sqrt(call_5476.astype('float64')) # shape=(13, 9, 14)
uop_5490 = relay.sqrt(call_5478.astype('float64')) # shape=(13, 9, 14)
func_2263_call = mod.get_global_var('func_2263')
func_2267_call = mutated_mod.get_global_var('func_2267')
var_5495 = relay.var("var_5495", dtype = "float32", shape = (256,))#candidate|5495|(256,)|var|float32
var_5496 = relay.var("var_5496", dtype = "float32", shape = (512,))#candidate|5496|(512,)|var|float32
const_5497 = relay.const([4,-6,-1,-3,-2,8,3,8,1,7,9,-1,-10,2,-2,6,3,3,2,2,9,1,-7,9,3,3,-9,6,-5,-3,-9,7,10,-7,-7,6,6,9,4,-1,-5,-3,-9,6,-7,-3,10,8,1,10,-4,-4,-2,2,-3,7,7,4,6,2,-1,-2,6,-8,-5,6,5,-10,5,6,-6,5,10,-1,-9,2,9,-10,-3,-3,9,10,9,2,1,-1,-9,-10,4,-7,-4,3,-2,10,1,6,1,3,-5,6,-5,2,-3,-4,6,2,-10,-5,7,-8,7,10,9,1,-2,-9,-4,-2,-5,-6,8,1,2,-2,9,1,3,7,-7,-5,3,-6,7,4,4,3,7,-2,9,-9,-6,-4,4,-3,10,-9,-6,-2,5,-4,-7,1,-2,2,-10,8,3,-7,5,-7,-1,-10,3,9,9,7,2,-9,-4,4,3,-10,-7,-5,-8,-7,-1,8,-8,-2,-10,-2,-8,9,-1,-3,-6,-5,1,-5,-2,-2,1,7,-4,-6,-7,-1,7,-6,-4,7,4,-2,1,8,2,-6,-7,-2,-9,9,7,2,9,-6,-9,-2,-4,9,-6,9,-6,-2,-8,-6,-5,5,-5,7,7,7,-6,-2,-7,-6,-10,10,-9,-9,-7,6,-9,5,9,8,-3,5,-5,-10,8,5], dtype = "uint64")#candidate|5497|(252,)|const|uint64
call_5494 = relay.TupleGetItem(func_2263_call(relay.reshape(var_5495.astype('float32'), [256,]), relay.reshape(var_5496.astype('float32'), [512,]), relay.reshape(const_5497.astype('uint64'), [252,]), ), 2)
call_5498 = relay.TupleGetItem(func_2267_call(relay.reshape(var_5495.astype('float32'), [256,]), relay.reshape(var_5496.astype('float32'), [512,]), relay.reshape(const_5497.astype('uint64'), [252,]), ), 2)
uop_5516 = relay.sin(uop_5488.astype('float32')) # shape=(13, 9, 14)
uop_5518 = relay.sin(uop_5490.astype('float32')) # shape=(13, 9, 14)
bop_5524 = relay.less_equal(var_5465.astype('bool'), relay.reshape(var_5464.astype('bool'), relay.shape_of(var_5465))) # shape=(10, 7, 11)
output = relay.Tuple([bop_5466,const_5477,call_5494,var_5495,var_5496,const_5497,uop_5516,bop_5524,])
output2 = relay.Tuple([bop_5466,const_5477,call_5498,var_5495,var_5496,const_5497,uop_5518,bop_5524,])
func_5533 = relay.Function([var_5464,var_5465,var_5495,var_5496,], output)
mod['func_5533'] = func_5533
mod = relay.transform.InferType()(mod)
mutated_mod['func_5533'] = func_5533
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5533_call = mutated_mod.get_global_var('func_5533')
var_5535 = relay.var("var_5535", dtype = "float64", shape = (10, 7, 11))#candidate|5535|(10, 7, 11)|var|float64
var_5536 = relay.var("var_5536", dtype = "float64", shape = (10, 7, 11))#candidate|5536|(10, 7, 11)|var|float64
var_5537 = relay.var("var_5537", dtype = "float32", shape = (256,))#candidate|5537|(256,)|var|float32
var_5538 = relay.var("var_5538", dtype = "float32", shape = (512,))#candidate|5538|(512,)|var|float32
call_5534 = func_5533_call(var_5535,var_5536,var_5537,var_5538,)
output = call_5534
func_5539 = relay.Function([var_5535,var_5536,var_5537,var_5538,], output)
mutated_mod['func_5539'] = func_5539
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3239_call = mod.get_global_var('func_3239')
func_3241_call = mutated_mod.get_global_var('func_3241')
call_5568 = relay.TupleGetItem(func_3239_call(), 0)
call_5569 = relay.TupleGetItem(func_3241_call(), 0)
output = call_5568
output2 = call_5569
func_5580 = relay.Function([], output)
mod['func_5580'] = func_5580
mod = relay.transform.InferType()(mod)
mutated_mod['func_5580'] = func_5580
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5580_call = mutated_mod.get_global_var('func_5580')
call_5581 = func_5580_call()
output = call_5581
func_5582 = relay.Function([], output)
mutated_mod['func_5582'] = func_5582
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5329_call = mod.get_global_var('func_5329')
func_5331_call = mutated_mod.get_global_var('func_5331')
call_5583 = func_5329_call()
call_5584 = func_5329_call()
output = relay.Tuple([call_5583,])
output2 = relay.Tuple([call_5584,])
func_5593 = relay.Function([], output)
mod['func_5593'] = func_5593
mod = relay.transform.InferType()(mod)
mutated_mod['func_5593'] = func_5593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5593_call = mutated_mod.get_global_var('func_5593')
call_5594 = func_5593_call()
output = call_5594
func_5595 = relay.Function([], output)
mutated_mod['func_5595'] = func_5595
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1626_call = mod.get_global_var('func_1626')
func_1628_call = mutated_mod.get_global_var('func_1628')
call_5609 = relay.TupleGetItem(func_1626_call(), 0)
call_5610 = relay.TupleGetItem(func_1628_call(), 0)
func_3341_call = mod.get_global_var('func_3341')
func_3344_call = mutated_mod.get_global_var('func_3344')
var_5618 = relay.var("var_5618", dtype = "float32", shape = (128,))#candidate|5618|(128,)|var|float32
call_5617 = relay.TupleGetItem(func_3341_call(relay.reshape(var_5618.astype('float32'), [16, 2, 4]), relay.reshape(var_5618.astype('bool'), [16, 2, 4]), ), 0)
call_5619 = relay.TupleGetItem(func_3344_call(relay.reshape(var_5618.astype('float32'), [16, 2, 4]), relay.reshape(var_5618.astype('bool'), [16, 2, 4]), ), 0)
uop_5620 = relay.cosh(var_5618.astype('float32')) # shape=(128,)
output = relay.Tuple([call_5609,call_5617,uop_5620,])
output2 = relay.Tuple([call_5610,call_5619,uop_5620,])
func_5629 = relay.Function([var_5618,], output)
mod['func_5629'] = func_5629
mod = relay.transform.InferType()(mod)
mutated_mod['func_5629'] = func_5629
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5630 = relay.var("var_5630", dtype = "float32", shape = (128,))#candidate|5630|(128,)|var|float32
func_5629_call = mutated_mod.get_global_var('func_5629')
call_5631 = func_5629_call(var_5630)
output = call_5631
func_5632 = relay.Function([var_5630], output)
mutated_mod['func_5632'] = func_5632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3985_call = mod.get_global_var('func_3985')
func_3987_call = mutated_mod.get_global_var('func_3987')
call_5634 = relay.TupleGetItem(func_3985_call(), 0)
call_5635 = relay.TupleGetItem(func_3987_call(), 0)
output = call_5634
output2 = call_5635
func_5641 = relay.Function([], output)
mod['func_5641'] = func_5641
mod = relay.transform.InferType()(mod)
output = func_5641()
func_5642 = relay.Function([], output)
mutated_mod['func_5642'] = func_5642
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4005_call = mod.get_global_var('func_4005')
func_4006_call = mutated_mod.get_global_var('func_4006')
call_5643 = relay.TupleGetItem(func_4005_call(), 0)
call_5644 = relay.TupleGetItem(func_4006_call(), 0)
uop_5667 = relay.sqrt(call_5643.astype('float32')) # shape=(16, 1, 4)
uop_5669 = relay.sqrt(call_5644.astype('float32')) # shape=(16, 1, 4)
uop_5680 = relay.acosh(call_5643.astype('float32')) # shape=(16, 1, 4)
uop_5682 = relay.acosh(call_5644.astype('float32')) # shape=(16, 1, 4)
uop_5686 = relay.asinh(call_5643.astype('float64')) # shape=(16, 1, 4)
uop_5688 = relay.asinh(call_5644.astype('float64')) # shape=(16, 1, 4)
func_4430_call = mod.get_global_var('func_4430')
func_4431_call = mutated_mod.get_global_var('func_4431')
call_5693 = relay.TupleGetItem(func_4430_call(), 0)
call_5694 = relay.TupleGetItem(func_4431_call(), 0)
func_1783_call = mod.get_global_var('func_1783')
func_1785_call = mutated_mod.get_global_var('func_1785')
call_5697 = func_1783_call()
call_5698 = func_1783_call()
bop_5699 = relay.equal(uop_5680.astype('bool'), relay.reshape(call_5693.astype('bool'), relay.shape_of(uop_5680))) # shape=(16, 1, 4)
bop_5702 = relay.equal(uop_5682.astype('bool'), relay.reshape(call_5694.astype('bool'), relay.shape_of(uop_5682))) # shape=(16, 1, 4)
output = relay.Tuple([uop_5667,uop_5686,call_5697,bop_5699,])
output2 = relay.Tuple([uop_5669,uop_5688,call_5698,bop_5702,])
func_5705 = relay.Function([], output)
mod['func_5705'] = func_5705
mod = relay.transform.InferType()(mod)
mutated_mod['func_5705'] = func_5705
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5705_call = mutated_mod.get_global_var('func_5705')
call_5706 = func_5705_call()
output = call_5706
func_5707 = relay.Function([], output)
mutated_mod['func_5707'] = func_5707
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4005_call = mod.get_global_var('func_4005')
func_4006_call = mutated_mod.get_global_var('func_4006')
call_5749 = relay.TupleGetItem(func_4005_call(), 0)
call_5750 = relay.TupleGetItem(func_4006_call(), 0)
output = relay.Tuple([call_5749,])
output2 = relay.Tuple([call_5750,])
func_5768 = relay.Function([], output)
mod['func_5768'] = func_5768
mod = relay.transform.InferType()(mod)
mutated_mod['func_5768'] = func_5768
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5768_call = mutated_mod.get_global_var('func_5768')
call_5769 = func_5768_call()
output = call_5769
func_5770 = relay.Function([], output)
mutated_mod['func_5770'] = func_5770
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4318_call = mod.get_global_var('func_4318')
func_4320_call = mutated_mod.get_global_var('func_4320')
call_5811 = relay.TupleGetItem(func_4318_call(), 2)
call_5812 = relay.TupleGetItem(func_4320_call(), 2)
func_3895_call = mod.get_global_var('func_3895')
func_3896_call = mutated_mod.get_global_var('func_3896')
call_5819 = func_3895_call()
call_5820 = func_3895_call()
output = relay.Tuple([call_5811,call_5819,])
output2 = relay.Tuple([call_5812,call_5820,])
func_5825 = relay.Function([], output)
mod['func_5825'] = func_5825
mod = relay.transform.InferType()(mod)
mutated_mod['func_5825'] = func_5825
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5825_call = mutated_mod.get_global_var('func_5825')
call_5826 = func_5825_call()
output = call_5826
func_5827 = relay.Function([], output)
mutated_mod['func_5827'] = func_5827
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2127_call = mod.get_global_var('func_2127')
func_2128_call = mutated_mod.get_global_var('func_2128')
call_5847 = func_2127_call()
call_5848 = func_2127_call()
uop_5849 = relay.rsqrt(call_5847.astype('float64')) # shape=(16, 1, 4)
uop_5851 = relay.rsqrt(call_5848.astype('float64')) # shape=(16, 1, 4)
func_1615_call = mod.get_global_var('func_1615')
func_1616_call = mutated_mod.get_global_var('func_1616')
call_5854 = func_1615_call()
call_5855 = func_1615_call()
const_5881 = relay.const([[[-9.143689,5.159358,2.554348,8.881280]],[[8.198634,-9.454454,8.058281,-1.214940]],[[0.769802,5.874217,-8.143028,5.065323]],[[1.207556,9.731828,1.085793,2.908506]],[[-0.919183,-1.266046,-9.651020,-9.857509]],[[9.826138,9.787614,1.274083,8.357018]],[[3.648408,8.408236,-9.907170,-6.421680]],[[-5.610363,-1.269409,-3.396953,-4.398282]],[[-2.765221,-3.505465,-9.414713,-8.752273]],[[3.788141,-8.844589,5.085046,2.979681]],[[1.750035,-8.600208,-9.118015,1.264046]],[[-5.559595,-1.279951,4.640024,-6.204674]],[[8.306230,-7.181685,5.054662,-2.806955]],[[-6.790724,4.220466,-1.428161,-1.341902]],[[4.904061,2.180095,-1.005157,6.859733]],[[-4.199416,2.575613,-7.833703,7.056954]]], dtype = "float64")#candidate|5881|(16, 1, 4)|const|float64
bop_5882 = relay.floor_divide(uop_5849.astype('float64'), relay.reshape(const_5881.astype('float64'), relay.shape_of(uop_5849))) # shape=(16, 1, 4)
bop_5885 = relay.floor_divide(uop_5851.astype('float64'), relay.reshape(const_5881.astype('float64'), relay.shape_of(uop_5851))) # shape=(16, 1, 4)
func_3884_call = mod.get_global_var('func_3884')
func_3888_call = mutated_mod.get_global_var('func_3888')
const_5887 = relay.const([[9,9,-7,-1,3,-10,-6,-9,10,-1,8,-9,-5,-5,-4,-5,6,-6,-10,-9,-10,-9,1,1,9,-2,7,-7,10,1,2,-8,1,-3,-8,-4,-1,-7,3,6,1,1,9,-10,-2,4,8,-4,5,10,10,-2,-6,-3,-8,-1,7,6,-9,-7,-1,5,-3,8,6,9,-1,7,3,-6,-9,1,10,3,6,-2,-1,6,-8,9,-4,10,-3,-3],[-4,-9,-10,2,10,9,5,4,-8,9,-7,-10,9,6,-4,10,10,5,-2,9,-2,9,-10,3,-5,6,3,5,-5,-5,2,8,-5,-1,10,8,-8,9,-1,-10,7,10,-3,3,8,8,3,1,1,-4,1,2,8,1,-4,-6,8,-2,-3,-8,4,10,-4,-7,4,-7,-3,6,10,1,-8,-6,4,-7,4,-7,-3,-8,-9,-3,8,8,1,-3],[1,7,-2,6,-5,-3,8,9,-9,10,6,3,-5,3,6,9,1,-9,-10,-7,9,6,-1,9,-6,10,-4,3,-5,-5,4,8,-1,8,-1,-8,6,8,-1,-9,-7,8,-3,1,7,9,-2,-7,-2,-4,-10,5,-6,-3,-1,-5,-3,-2,-2,-4,-10,2,-8,5,-4,6,3,9,-4,8,5,6,4,4,-2,7,-1,-6,-6,2,-1,-3,8,6]], dtype = "uint64")#candidate|5887|(3, 84)|const|uint64
var_5888 = relay.var("var_5888", dtype = "float64", shape = (105,))#candidate|5888|(105,)|var|float64
const_5889 = relay.const([7.238697,-4.393163,0.005557,5.024731,-7.025125,-3.017058,5.954789,7.962004,3.833856,4.723889,-5.469358,-4.526157,4.561469,4.922270,3.350365,-5.595221,-0.036458,2.125740,-3.238160,-5.546655,-6.485198,-1.440621,8.152366,0.389023,-3.519369,-6.625314,6.180648,-4.257363,3.049549,-5.596295,6.219078,6.956441,8.528043,5.677894,1.912524,9.682455,0.842466,-6.826548,5.020690,7.296047,-5.819093,-4.085723,-4.931445,-8.360661,-2.760663,1.070235,3.898088,4.839180,4.028702,-0.962119,9.025993,-5.890935,3.258021,4.555662,-9.155720,2.886568,3.446570,-8.338541,-6.554993,6.847399,1.008631,-6.699825,6.453225,-4.141539,1.600992,-8.564147,-0.226254,9.199966,6.864172,-6.116663,0.929488,-2.703684,-1.883120,0.349764,-0.600937,7.379033,4.782185,-5.019617,-4.081531,5.599361,-3.357532,-8.065301,-9.361695,-0.413728,-7.316737,7.884643,-4.541180,-8.636085,-9.960372,0.182059,-4.946527,8.673881,5.169768,8.999500,-6.576175,3.702962,-8.171280,6.107466,9.054061,-8.945591,-2.119517,3.306955,2.875845,3.148761,2.645884,-6.917537,-8.494997,0.511813,-5.103336,0.527612,6.918442,7.675092,-6.286347,-6.412608,-6.208540,8.642004,-2.220812,-1.859543,9.358465,-3.461302,-9.544010,-2.552694,-8.877074,-6.485390,-5.757038,5.994339,-4.984791,4.141749,0.598608,-6.744823,-4.300656,-2.592431,3.378669,5.948468,7.303657,8.177066,-0.766245,-0.684156,-1.090449,7.995860,-7.047256,-0.375836,2.255576,4.112845,-4.348329,8.860412,4.285958,4.238505,-6.673412,6.461037,-5.958590,4.349162,1.678602,3.626497,5.361412,-2.578822,2.792352,-2.201917,9.745350,7.443629,-5.744322,-6.642919,9.380248,-7.767902,-1.438383,0.606852,-0.986521,-9.807447,-5.005708,4.125696,-9.365123,5.986636,9.765480,0.174397,9.637378,-1.140467,9.382847,5.247341,-6.739307,-6.832083,-6.288009,-1.589601,-4.591891,-6.409549,-8.503200,-3.741167,0.319676,5.807041,-1.367410,0.930228,4.878386,5.179504,7.338788,7.083699,-5.215790,-2.446452,0.014429,5.071816,5.361366,-7.107986,-6.156148,7.584446,-6.708249,-9.104556,4.338033,-5.900278,7.283744,1.154035,2.226555,-2.362746,-4.237596,-0.363739,4.213843,1.371171,3.922466,7.148052,7.889885,5.538898,9.865121,-9.348710,-9.183305,8.991179,-7.253942,-3.775614,-4.240406,6.673762,7.147403,-1.058145,4.108999,-3.956110,-4.162449,-1.676888,-0.655015,6.728361,3.072826,-0.440207,3.853245,7.715254,-7.023857,6.849441,1.826216,9.529940,-7.918722,6.429767,9.039248,-9.977037,3.209059,2.041109,-8.410299,3.046564,-9.244548,2.702562,-2.757386,7.181002,-8.268335,9.693713,1.735834,5.771159,-5.963898,-9.070894,-7.782174,3.371941,7.556283,0.156460,-5.100452,-0.859128,-4.224206,-1.406405,-4.519153,6.974279,-2.338563,-8.781782,5.360092,6.495266,0.539232,8.125562,-8.891226,1.702002,-8.648526,9.043820,-2.637394,1.342862,-5.945580,6.259291,-2.022850,5.489080,5.472171,-4.359557,1.281592,-1.146542,8.613410,-9.285747,3.713283,-9.659193,-8.511450,-7.656207,7.675604,3.759388,7.937721,-1.788153,8.534842,-0.840330,-7.381456,2.404559,-3.065240,-0.852923,-1.905641,2.714099,-9.175373,6.815641,1.319514,8.053502,4.336875,-8.649177,4.987251,-1.245310,6.108681,0.081514,-3.066541,3.578183,5.900091,-9.681306,9.766385,9.444174,6.143626,-2.362545,-3.920250,4.573169,7.077270,-2.143735,4.814751,7.913704,2.930912,-6.043114,-7.340824,-3.988713,8.625957,8.830853,-9.699007,-8.293557,4.954158,-2.720861,5.149439,2.075670,-1.464436,4.111548,6.771659,-9.361676,-9.987277,-5.557619,-4.632207,-3.167147,1.757172,-0.648403,-5.173054,-3.701186,-7.396871,3.227219,-2.010089,-2.233241,-5.213724,-4.358855,-3.215316,-8.693993,1.807031,6.292984,7.535904,1.547174,4.417377,-0.405774,2.689507,0.613057,3.657124,4.410218,-9.151956,-7.900655,3.340623,-8.108281,5.753358,-2.855163,5.494069,3.250879,1.506099,6.302932,-9.898400,-3.994410,-9.373714,5.303854,-1.558907,-0.756289,-5.157291,5.940713,4.739682,-1.461462,-3.868931,-6.795685,-5.894319,-8.966843,-3.060837,0.364561,8.156881,-1.302304,7.721069,-0.006913,-3.979712,-0.120363,0.739695,3.681656,7.851956,-8.475740,-0.054822,7.173896,-6.253085,7.840777,-7.715713,4.391565,-1.285895,2.767387,-1.030796,-8.903322,-8.700241,5.054247,-9.601773,4.345010,-6.113116,-4.642346,-6.294342,-1.597606,2.040395,0.357850,-0.539372,-1.441640,9.795549,-4.328137,9.166427,-8.426476,-4.128381,1.768002,-7.547101,-5.307831,-2.406972,-8.085691,5.875043,1.697179,-8.525328,-2.335395,-5.279560,8.940598,-5.118295,0.377700,-6.525705,-7.012497,1.334093,-3.537488,-2.511740,9.932674,1.179819,1.969801,-1.838424,7.384536,3.893176,5.837780,-6.169607,1.714545,-2.662837,-7.836681,5.875827,4.503589,3.751531,-4.324945,5.553755,-2.221347,3.955003,0.231021,4.901271,-7.122469,-0.554397,-3.092197,3.802585,4.238692,-7.605908,-1.338842,-2.696807,-9.948784,8.660790,9.277910,-4.246690,6.746190,7.286865,9.286169,-4.499038,-1.210976,7.841086,5.451168,-9.872653,7.726065,0.710045,-7.206895,7.625131,8.223540,-9.349060,1.269061,-1.851589,-0.192660,3.166387,-1.104315,-1.613663,-9.235108,1.523983,-0.666819,5.405101,-0.732397,8.398246,-8.808447,-7.246062,-5.037409,6.475502,4.275051,-9.677551,2.360424,-2.679268,4.204336,-5.309739,-5.704122,-4.863402,-3.270314,-0.364787,-8.317124,0.286368,2.375533,-4.496720,-5.538973,4.373106,1.407874,-8.829564,-0.617066,1.493133,4.494243,3.119660,8.889508,-2.489727,8.546157,7.439851,-3.091022,5.006096,-8.252836,2.940305,5.736441,-9.313865,3.720674,8.295251,3.151591,2.625620,8.449429,9.773859,-0.573525,-5.924208,-5.027971,7.863826,-6.614241,-9.421186,-6.884190,-9.551257,9.299358,6.208409,7.540118,-2.620368,7.582807,7.438017,-9.976116,3.438506,-5.061789,8.022918,3.553931,7.194708,3.553378,-4.493407,-4.031635,5.984566,-3.415912,-1.560321,0.136873,-3.178481,-4.259863,4.920638,-5.127095,-8.079333,-4.312278,-7.619631,-5.758236,-5.212205,5.939574,-4.049637,8.501249,2.750878,-1.329215,7.865320,-8.383602,-0.536487,8.757192,-5.769423,-9.584215,-3.135465,-4.775567,6.068813,-1.767887,-6.807269,-7.275300,6.987499,-6.539806,3.769038,-7.184904,-6.945858,3.557836,-9.824980,5.986587,-8.953734,9.889807,-3.797800,2.959719,-4.846805,1.900267,-8.109638,3.136879,5.565701,-0.675448,-3.512397,9.952499,-4.755623,9.792089,7.609885,9.631221,9.376006,-8.490084,-6.115618,4.463189,-1.297550,3.210722,-6.798407,-9.431757,-7.932963,2.589085,-8.911083,8.452534,4.144394,8.307325,7.846062,-1.662819,1.277494,7.788419,9.482132,-3.366712,7.963398,-1.152929,6.029269,-0.060342,1.935917,-3.613567,-7.347279,-8.367140,4.695821,6.027857,-2.972565,5.379134,-7.023232,5.463887,7.208583,3.027187,5.888211,-4.308608,4.156734,-4.609300,-9.980715,-4.117597,6.647284,-9.863141,-8.061193,6.379769,-1.811035,-7.374257,4.366812,-6.145292,6.659584,-8.432160,9.193792,5.755283,8.603489,0.725602,6.153449,-0.887133,9.490058,8.021347,-4.425940,-0.867687,3.960091,-9.278289,1.244334,5.284622,-0.267669,4.040402,-3.726180,-3.811584,6.036650,-0.947425,8.008847,2.323353,9.759609,-6.586578,1.925301,-3.949624,9.814628,-2.830557,4.306559,-5.598945,5.919917,3.605127,-7.829037,3.194776,-8.990147,-6.823757,-6.528001,-6.763704,-9.101840,-2.203052,8.570372,-9.233964,1.579930,3.167012,-9.920745,-9.437167,-5.456721,-0.978386,-4.486931,-9.109864,0.168828,-5.783938,-8.917015,3.203687,-7.145575,-9.797297,2.755065,-6.669497,9.816414,1.229822,1.897341,3.339400,-7.010570,5.939689,0.699494,5.403965,-8.561930,7.920526,-7.354146,-2.306144,-7.330385,-4.369082,6.189488,-7.089731,6.491099,5.377141,7.750510,-9.669542,-2.271530,-3.481464,2.069024,-8.044402,-6.101616,-0.532335,-6.914809,0.342910,1.957528,-6.636958,-4.056710,-4.741285,7.408050,1.554125,-5.365816,-5.481460,2.120165,4.852028,-2.235172,-3.288418,3.897777,0.024501,4.111292,-8.737710,-9.266003,-5.596454,4.811436,-5.214796,-7.101958,1.933765,4.979897,8.953444,7.277149,2.643690,-9.392633,-2.692526,-8.152788,1.893990,-0.286858,7.593435,9.179131,6.527115,-1.435464,8.119442,2.300471,9.980846,-2.917509,3.499940,1.241228,3.880279,3.660247,8.605064,3.341918,2.976990,-7.198968,-3.990442,-1.955892,-4.322291,-3.088639,3.456482,1.046300,-0.632806,3.316045,4.581211,7.829945,-0.044845,-4.266101,-3.680911,2.566429,8.204340,-6.508305,3.122129,3.115398,6.900844,6.175577,-8.936458,-4.474222,-5.038827,-4.099014,-2.329711,-0.248567,-9.276694,2.358529,-4.592001,4.024428,-1.846237,2.192406,-7.267785,-0.172646,-8.540131,8.055216,-7.345998,-5.739564,5.548704,-7.559052,-5.541848,0.924074,8.341884,4.111748,1.321162,4.412989,0.728943,1.671446,3.986894,3.757218,2.125217,-2.165629,-3.063112,-2.152047,-8.930145,-0.587567,5.117604,5.673688,-6.702579,-3.733901,7.058996,6.566644,-6.029638,2.272429,-8.942122,-3.567662,1.765393,9.525725,4.582098,3.191507,-5.945110,-3.754723,3.626370,-9.321516,-7.489474,8.125412,-6.245064,-7.781606,1.789025,7.094185,2.563826,1.694560,-2.450820,-8.080660,-6.452268,7.675038,3.349168,-5.329989,-4.072412,-9.111400,7.194974,-0.457989,1.640296,9.578823,-8.422120,-7.698295,-7.223015,-1.691345,3.565204,-0.368017,4.751137,-1.981019,6.418882,1.305926,-3.367432,-1.459011,-6.197303,9.681506,-2.330126,-9.419368,2.057337,-0.511087,3.017101,5.692498,3.744539,-0.659190,1.880571,-8.899667,-4.263472,-3.309453,3.337565,-0.828108,-5.846361,4.916403,-1.218275,6.085856,1.594252,1.306517,3.969492,1.763669,-2.687954,4.808076,-2.094320,-0.622495,8.729004,8.369375,-7.746094,-8.047802,-9.920379,2.883036,-4.664004,-1.985936,-4.096167,-0.252570,-1.889563,-0.839728,4.243836,3.250487,3.399265,-1.731816,-3.980729,-7.368510,-5.828271,8.888360,-6.309888,6.379386,-8.798021,-8.884736,-3.690671,-5.116608,-2.622044,1.552078,-4.896046,-0.586225,2.000474,-9.926803,-3.882311,-8.970381,-9.960060,3.309633,-4.779230,3.052358,9.502548,8.990033,-1.713090,-4.151307,-0.936055,-5.936800,-8.364944,6.002431,-7.036116,-0.553564,-0.595899,1.612359,-0.188035,0.826844,0.051706,2.047235,0.459634,-8.072231,-7.878296,-1.944003,2.375399,5.061213,9.109424,9.406937,5.424477,6.130526,-1.103633,-6.426184,6.321331,6.778907,-1.981255,5.508879,3.794687,3.347738,9.456541,-3.300777,-4.713738,-4.749299,-2.966468,6.590992,5.871344,6.369684,0.645943,3.345346,-5.015336,-7.575796,4.801302,-6.635508,0.893273,8.220737,7.191384,6.512542,0.340599,-5.016978,2.923339,0.923168,-3.976983,-8.813455,-0.045610,-7.938321,-3.010367,5.249451,7.648066,-6.986799,0.503534,7.726416,-5.326621,5.722874,-6.688497,7.766063,1.749185,6.735623,-6.847187,-3.839520,9.393211,8.031840,6.987731,3.332303,-5.080628,3.695403,0.785851,-5.370602,-9.732363,-4.768782,9.386106,-1.448083,-4.574321,-1.309583,-1.464907,-7.703181,-3.451555,0.404017,-4.746571,-6.804180,7.844292,3.842087,-0.132994,-8.506099,6.956627,2.179664,-7.913880,8.981594,1.009373,5.765438,-7.638157,8.050021,3.894285,-5.246512,-1.357980,-3.825031,2.236212,-2.354334,-7.028384,-7.299767,3.673012,-7.012583,2.075209,0.655704,-0.275049,-8.667467,-3.161300,7.711587,7.664048,2.824471,-1.453414,4.613070,6.401685,2.843920,-1.167334,9.532109,1.214814,5.279600,-7.822602,-8.597559,-3.481876,4.978948,-1.023671,-1.526931,1.915335,5.915024,-2.390912,5.524551,7.561605,9.517195,-7.002419,0.715312,-6.978234,-8.630931,8.362964,9.963577,-3.659203,-5.888232,5.233115,-0.016823,5.316636,-0.924923,-9.489923,7.926564,-8.422554,0.502493,-2.797807,6.835089,0.159903,9.296634,-8.464698,-9.696965,4.788700,4.324998,-9.301462,0.082664,-9.159897,1.248352,1.184056,-0.413572,5.822807,-4.784235,-2.184781,-7.119408,-3.722540,0.144552,6.358197,2.211210,-6.996761,6.465707,-1.552198,-2.692644,9.700297,4.454423,5.445442,-2.978525,4.264576,-9.469375,-4.585698,2.419214,-6.393895,4.882474,7.826184,-6.142848,-1.663735,-0.975913,3.449063,2.919969,-7.919505,7.551882,-0.991371,-1.791306,9.629550,4.580676,1.077145,-7.741153,0.611425,2.543298,-8.722913,9.923442,-7.767327,1.093441,-9.889729,-3.726474,0.136305,-2.792202,4.463670,5.892436,3.124022,0.286673,7.809290,-3.215920,0.029588,6.543051,-4.974617,-2.236342,-7.664795,-3.437441,-8.200045,4.998796,-2.904331,5.076713,-6.180755,-3.472319,-6.020382,5.769333,8.396142,-0.104810,1.603874,-2.121948,-3.726938,-6.355016,-9.642255,-0.164962,5.205579,-7.233147,5.936453,-0.702813,-3.788628,-5.877105,-9.644544,5.800796,8.214679,-2.923195,1.385147,-9.400045,-6.473651,8.933393,2.021056,2.139523,2.810091,8.087957,-5.177580,3.624295,-7.506230,3.666943,2.723318,9.689428,-8.441764,9.847648,-9.628925,-5.760455,2.645537,-2.954706,7.253275,9.530039,6.169826,9.437077,-1.045313,4.751226,-3.570700,3.210298,5.115114,4.194086,4.623796,8.301136,-7.826559,-3.714995,2.040413,7.421225,-2.228046,-9.110148,6.123670,6.713640,-6.180589,-3.821307,6.396768,-9.084113,-6.131013,5.089384,-9.660704,-4.301292,-7.794942,-5.585364,3.514764,-7.591870,5.382794,5.374636,-2.630405,-7.691624,3.634497,-4.378935,0.295377,8.251517,-2.382170,2.918586,-8.669102,5.475142,-1.550124,-6.930804,0.679880,1.462295,6.375972,9.222385,-3.532853,-3.336834,2.528796], dtype = "float64")#candidate|5889|(1320,)|const|float64
call_5886 = relay.TupleGetItem(func_3884_call(relay.reshape(const_5887.astype('uint64'), [6, 42]), relay.reshape(var_5888.astype('float64'), [105,]), relay.reshape(const_5889.astype('float64'), [1320,]), ), 0)
call_5890 = relay.TupleGetItem(func_3888_call(relay.reshape(const_5887.astype('uint64'), [6, 42]), relay.reshape(var_5888.astype('float64'), [105,]), relay.reshape(const_5889.astype('float64'), [1320,]), ), 0)
output = relay.Tuple([call_5854,bop_5882,call_5886,const_5887,var_5888,const_5889,])
output2 = relay.Tuple([call_5855,bop_5885,call_5890,const_5887,var_5888,const_5889,])
func_5898 = relay.Function([var_5888,], output)
mod['func_5898'] = func_5898
mod = relay.transform.InferType()(mod)
mutated_mod['func_5898'] = func_5898
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5899 = relay.var("var_5899", dtype = "float64", shape = (105,))#candidate|5899|(105,)|var|float64
func_5898_call = mutated_mod.get_global_var('func_5898')
call_5900 = func_5898_call(var_5899)
output = call_5900
func_5901 = relay.Function([var_5899], output)
mutated_mod['func_5901'] = func_5901
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5906 = relay.var("var_5906", dtype = "float32", shape = (16, 6, 7))#candidate|5906|(16, 6, 7)|var|float32
var_5907 = relay.var("var_5907", dtype = "float32", shape = (16, 6, 7))#candidate|5907|(16, 6, 7)|var|float32
bop_5908 = relay.mod(var_5906.astype('float32'), relay.reshape(var_5907.astype('float32'), relay.shape_of(var_5906))) # shape=(16, 6, 7)
output = bop_5908
output2 = bop_5908
func_5911 = relay.Function([var_5906,var_5907,], output)
mod['func_5911'] = func_5911
mod = relay.transform.InferType()(mod)
var_5912 = relay.var("var_5912", dtype = "float32", shape = (16, 6, 7))#candidate|5912|(16, 6, 7)|var|float32
var_5913 = relay.var("var_5913", dtype = "float32", shape = (16, 6, 7))#candidate|5913|(16, 6, 7)|var|float32
output = func_5911(var_5912,var_5913,)
func_5914 = relay.Function([var_5912,var_5913,], output)
mutated_mod['func_5914'] = func_5914
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3015_call = mod.get_global_var('func_3015')
func_3017_call = mutated_mod.get_global_var('func_3017')
call_5972 = relay.TupleGetItem(func_3015_call(), 4)
call_5973 = relay.TupleGetItem(func_3017_call(), 4)
func_1783_call = mod.get_global_var('func_1783')
func_1785_call = mutated_mod.get_global_var('func_1785')
call_6000 = func_1783_call()
call_6001 = func_1783_call()
output = relay.Tuple([call_5972,call_6000,])
output2 = relay.Tuple([call_5973,call_6001,])
func_6009 = relay.Function([], output)
mod['func_6009'] = func_6009
mod = relay.transform.InferType()(mod)
output = func_6009()
func_6010 = relay.Function([], output)
mutated_mod['func_6010'] = func_6010
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2540_call = mod.get_global_var('func_2540')
func_2542_call = mutated_mod.get_global_var('func_2542')
call_6035 = func_2540_call()
call_6036 = func_2540_call()
func_3433_call = mod.get_global_var('func_3433')
func_3439_call = mutated_mod.get_global_var('func_3439')
var_6041 = relay.var("var_6041", dtype = "uint64", shape = (128,))#candidate|6041|(128,)|var|uint64
const_6042 = relay.const([[-6],[-8],[-1],[-8],[6],[3],[3],[3],[-4],[-5],[7],[-9],[-9],[-4],[4],[3],[-10],[-4],[-9],[-8],[-2],[-3],[2],[7],[5],[9],[10],[-9],[-2],[1],[4],[8],[5],[4],[6],[1],[4],[-3],[9],[2],[-1],[-6],[-1],[-10],[-5],[-1],[-7],[2],[2],[-7],[8],[6],[-3],[-8],[-10],[6],[1],[4],[4],[-5],[5],[9],[-4],[5],[7],[-4],[-2],[-8],[-3],[9],[7],[7],[-7],[10],[-3],[4],[10],[1],[4],[-7],[9],[-7],[4],[-8],[-2],[-10],[-2],[6],[6],[-3],[-2],[8],[-10],[-3],[-4],[-5],[-4],[6],[6],[4],[-10],[-8],[1],[-6],[-4],[5],[-5],[6],[-3],[-10],[-1],[-2],[5],[-10],[-9],[-10],[9],[5],[-6],[7],[9],[-3],[-7],[10],[10],[-7],[-2],[6],[4],[-10],[-10],[-5],[-2],[9],[1],[-5],[-9],[5],[-9],[-6],[-4],[2],[1],[-5],[3],[1],[8],[4],[-6],[8],[-10],[8],[-3],[-7],[-7],[-3],[-5],[8],[10],[4],[-1],[-7],[-1],[-8],[8],[2],[1],[9],[-2],[-6],[9],[-9],[2],[-2],[-9],[6],[-1],[8],[7],[-9],[-6],[-1],[3],[-8],[-6],[2],[-4],[10],[8],[-10],[10],[8],[2],[5],[6],[2],[-5],[6],[5],[-2],[2],[4],[7],[-4],[8],[2],[2],[1],[-8],[3],[10],[-5],[-8],[-2],[-6],[-2],[8],[-4],[4],[10],[4],[1],[-3],[-1],[-1],[-6],[-10],[4],[1],[1],[-10],[-6],[10],[3],[-10],[5],[-6],[3],[1],[2],[-10],[10],[7],[-8],[-2],[4],[1],[-10],[9],[-5],[6],[-2],[-8],[-10],[9],[-2],[-10],[9],[-8],[4],[3],[2],[9],[4],[-3],[9],[-3],[-10],[6],[-2],[3],[7],[6],[-1],[-2],[-4],[4],[-8],[-6],[-2],[-5],[10],[2],[9],[-3],[-6],[-6],[-10],[-9],[-9],[-5],[-6],[9],[-5],[-8],[7],[8],[1],[9],[-1],[-4],[-7],[-1],[5],[7],[1],[-6],[-2],[-10],[-3],[-3],[-4],[-8],[-4],[-9],[-7],[5],[-3],[2],[-6],[-9],[2],[3],[2],[2],[4],[8],[8],[-4],[-2],[9],[-4],[-5],[1],[-5],[10],[-6],[-1],[8],[-2],[1],[-6],[3],[4],[8],[10],[7],[-4],[-1],[2],[3],[-1],[-4],[-8],[8],[-3],[-6],[-9],[-2],[-8],[-8],[8],[2],[-8],[6],[-10],[1],[8],[4],[10],[-5],[-2],[-9],[-4],[5],[-9],[-10],[-8],[8],[9],[7],[-3],[-3],[-6],[6],[-10],[6],[-4],[4],[-5],[-9],[1],[3],[4],[-7],[-5],[4],[-5],[-8],[3],[-6],[5],[-4],[8],[-6],[-6],[1],[-4],[7],[8],[-3],[-6],[-3],[-2],[-1],[-7],[8],[2],[2],[10],[5],[4],[-3],[10],[8],[-2],[3],[8],[1],[8],[-4],[1],[-8],[4],[3],[7],[1],[-5],[2],[2],[5],[1],[-6],[-5],[6],[10],[-8],[-2],[6],[-6],[1],[8],[-7],[-6],[-8],[6],[-4],[1],[-5],[-6],[-10],[1],[-7],[-6],[-10],[-1],[-8],[-10],[-10],[3],[-5],[-1],[-8],[-1],[-9],[-4],[-1],[-8],[-9],[-1],[-7],[-7],[-1],[-9],[3],[1],[10],[9],[4],[-1],[-6],[3],[1],[8],[-6],[-8],[-3],[-5],[1],[-9],[5],[-4],[-2],[5],[4],[-9],[2],[-8],[3],[-2],[6],[1]], dtype = "uint64")#candidate|6042|(512, 1)|const|uint64
var_6043 = relay.var("var_6043", dtype = "float32", shape = (1024,))#candidate|6043|(1024,)|var|float32
call_6040 = relay.TupleGetItem(func_3433_call(relay.reshape(var_6041.astype('uint64'), [128,]), relay.reshape(const_6042.astype('uint64'), [512,]), relay.reshape(var_6043.astype('float32'), [1024,]), relay.reshape(var_6043.astype('bool'), [16, 16, 4]), ), 2)
call_6044 = relay.TupleGetItem(func_3439_call(relay.reshape(var_6041.astype('uint64'), [128,]), relay.reshape(const_6042.astype('uint64'), [512,]), relay.reshape(var_6043.astype('float32'), [1024,]), relay.reshape(var_6043.astype('bool'), [16, 16, 4]), ), 2)
func_5641_call = mod.get_global_var('func_5641')
func_5642_call = mutated_mod.get_global_var('func_5642')
call_6045 = func_5641_call()
call_6046 = func_5641_call()
func_5580_call = mod.get_global_var('func_5580')
func_5582_call = mutated_mod.get_global_var('func_5582')
call_6049 = func_5580_call()
call_6050 = func_5580_call()
func_3761_call = mod.get_global_var('func_3761')
func_3764_call = mutated_mod.get_global_var('func_3764')
const_6072 = relay.const([-1.466666,5.369892,6.636093,-4.967034,1.935936,-1.405019,-3.223975,-4.299421,-8.185206,0.634177,-6.841394,8.883601,8.472510,8.145990,9.416328,5.760761,2.847885,-7.076983,-4.695703,-9.254716,6.431718,6.927760,8.645461,3.917258,-6.127942,-2.751863,2.569178,8.230354,7.613450,-3.824093,1.441900,-2.659574,-8.945497,1.968412,-3.891223,-4.244191,-4.661500,4.775065,7.066823,-7.640157,1.947007,5.754225,-4.926836,5.651435,4.628517,-0.461253,-4.628415,7.181819,-4.882173,3.677269,0.672905,-8.088579,6.488196,7.101594,8.355834,-5.781094,-1.829333,7.356602,-2.470537,0.087954,-5.929100,-0.809200,-4.531940,3.294286,3.011171,1.457828,-1.703629,-0.103560,-3.994544,3.681190,1.453662,-8.320926,0.388402,-4.786162,0.186092,9.159044,-5.238766,-1.517614,5.011005,7.875984,-5.206023,9.506734,-0.753030,-9.004559,8.750397,-2.555283,-5.709077,3.813508,0.174596,3.258530,3.091825,-5.028410,7.354706,-2.958416,0.584779,9.417384,0.846855,-7.786198,-4.572966,-9.570431,-1.292374,0.929197,0.482017,-4.256108,-0.765444], dtype = "float64")#candidate|6072|(105,)|const|float64
call_6071 = relay.TupleGetItem(func_3761_call(relay.reshape(const_6072.astype('float64'), [21, 5])), 2)
call_6073 = relay.TupleGetItem(func_3764_call(relay.reshape(const_6072.astype('float64'), [21, 5])), 2)
func_5629_call = mod.get_global_var('func_5629')
func_5632_call = mutated_mod.get_global_var('func_5632')
call_6077 = relay.TupleGetItem(func_5629_call(relay.reshape(var_6041.astype('float32'), [128,])), 0)
call_6078 = relay.TupleGetItem(func_5632_call(relay.reshape(var_6041.astype('float32'), [128,])), 0)
uop_6080 = relay.asinh(const_6042.astype('float64')) # shape=(512, 1)
output = relay.Tuple([call_6035,call_6040,var_6041,var_6043,call_6045,call_6049,call_6071,const_6072,call_6077,uop_6080,])
output2 = relay.Tuple([call_6036,call_6044,var_6041,var_6043,call_6046,call_6050,call_6073,const_6072,call_6078,uop_6080,])
func_6084 = relay.Function([var_6041,var_6043,], output)
mod['func_6084'] = func_6084
mod = relay.transform.InferType()(mod)
var_6085 = relay.var("var_6085", dtype = "uint64", shape = (128,))#candidate|6085|(128,)|var|uint64
var_6086 = relay.var("var_6086", dtype = "float32", shape = (1024,))#candidate|6086|(1024,)|var|float32
output = func_6084(var_6085,var_6086,)
func_6087 = relay.Function([var_6085,var_6086,], output)
mutated_mod['func_6087'] = func_6087
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2540_call = mod.get_global_var('func_2540')
func_2542_call = mutated_mod.get_global_var('func_2542')
call_6109 = func_2540_call()
call_6110 = func_2540_call()
output = relay.Tuple([call_6109,])
output2 = relay.Tuple([call_6110,])
func_6117 = relay.Function([], output)
mod['func_6117'] = func_6117
mod = relay.transform.InferType()(mod)
output = func_6117()
func_6118 = relay.Function([], output)
mutated_mod['func_6118'] = func_6118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1645_call = mod.get_global_var('func_1645')
func_1647_call = mutated_mod.get_global_var('func_1647')
call_6131 = func_1645_call()
call_6132 = func_1645_call()
func_3884_call = mod.get_global_var('func_3884')
func_3888_call = mutated_mod.get_global_var('func_3888')
const_6150 = relay.const([10,8,10,8,-4,-6,-8,9,-10,7,-7,-6,6,-6,-4,1,-7,-9,3,-4,-2,10,-1,5,9,9,-1,-9,-4,3,4,-4,-3,9,2,4,4,-5,5,4,-2,-2,-8,9,5,-10,3,9,-8,-5,2,6,5,10,-9,-4,1,-5,8,-1,-5,-2,-8,6,9,-8,-1,8,-4,-6,5,8,-5,-5,7,5,-10,10,-8,-5,10,-8,6,6,4,-6,1,7,5,10,9,-3,2,8,-4,7,-6,4,10,-3,2,-5,1,1,-5,9,-6,-4,10,8,-5,-5,-9,5,8,6,-7,-5,5,6,4,-6,2,9,-4,-5,2,-1,8,10,4,-8,-9,1,8,3,-5,-4,-1,-10,-10,5,4,4,-10,9,-10,-6,1,-2,5,1,-8,-8,8,3,10,1,-4,5,9,9,-3,10,-10,-3,10,4,8,7,7,-5,10,10,-1,7,1,9,10,-7,2,7,5,1,3,-9,-10,9,2,-3,6,-3,5,-10,1,-7,-9,-6,6,-10,-7,-1,-5,6,-2,8,-6,-5,-3,8,-4,9,-1,-2,4,6,-10,8,-7,-1,-3,7,10,-2,8,-8,-9,10,2,5,-1,-7,9,-4,-2,-7,4,4,-5,6,10,-8,1,-7,7,10,6,-8,-5,-1,-7,-1], dtype = "uint64")#candidate|6150|(252,)|const|uint64
var_6151 = relay.var("var_6151", dtype = "float64", shape = (105,))#candidate|6151|(105,)|var|float64
var_6152 = relay.var("var_6152", dtype = "float64", shape = (1320,))#candidate|6152|(1320,)|var|float64
call_6149 = relay.TupleGetItem(func_3884_call(relay.reshape(const_6150.astype('uint64'), [6, 42]), relay.reshape(var_6151.astype('float64'), [105,]), relay.reshape(var_6152.astype('float64'), [1320,]), ), 1)
call_6153 = relay.TupleGetItem(func_3888_call(relay.reshape(const_6150.astype('uint64'), [6, 42]), relay.reshape(var_6151.astype('float64'), [105,]), relay.reshape(var_6152.astype('float64'), [1320,]), ), 1)
output = relay.Tuple([call_6131,call_6149,const_6150,var_6151,var_6152,])
output2 = relay.Tuple([call_6132,call_6153,const_6150,var_6151,var_6152,])
func_6164 = relay.Function([var_6151,var_6152,], output)
mod['func_6164'] = func_6164
mod = relay.transform.InferType()(mod)
mutated_mod['func_6164'] = func_6164
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6164_call = mutated_mod.get_global_var('func_6164')
var_6166 = relay.var("var_6166", dtype = "float64", shape = (105,))#candidate|6166|(105,)|var|float64
var_6167 = relay.var("var_6167", dtype = "float64", shape = (1320,))#candidate|6167|(1320,)|var|float64
call_6165 = func_6164_call(var_6166,var_6167,)
output = call_6165
func_6168 = relay.Function([var_6166,var_6167,], output)
mutated_mod['func_6168'] = func_6168
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6178 = relay.var("var_6178", dtype = "bool", shape = (1, 11, 4))#candidate|6178|(1, 11, 4)|var|bool
const_6179 = relay.const([[[True,False,False,False],[True,False,False,True],[False,False,True,True],[True,False,False,False],[True,False,True,True],[False,True,True,False],[False,True,False,False],[False,True,False,True],[True,False,True,True],[False,False,False,False],[False,True,True,True]],[[False,True,False,True],[False,True,True,False],[False,False,False,True],[True,False,True,True],[False,True,True,True],[True,False,False,False],[False,True,False,True],[False,False,False,False],[True,False,False,True],[True,True,False,False],[True,False,True,False]],[[True,False,True,True],[True,False,False,False],[True,True,False,True],[False,True,False,False],[True,True,True,False],[True,True,False,True],[False,False,True,True],[False,False,True,True],[False,False,False,True],[True,True,True,False],[False,False,True,False]],[[True,False,False,False],[True,True,False,False],[False,False,True,False],[False,False,True,True],[False,False,False,False],[True,True,True,False],[False,True,False,False],[True,True,False,False],[True,False,False,False],[False,False,True,False],[True,False,True,True]],[[True,False,False,True],[True,True,False,False],[False,True,False,False],[False,False,False,True],[True,False,True,True],[False,True,True,False],[False,False,True,True],[True,False,False,False],[False,True,True,True],[False,True,True,False],[True,True,False,True]],[[True,False,True,True],[False,False,False,False],[False,True,True,False],[False,False,True,True],[False,True,True,False],[False,False,False,False],[False,True,False,True],[True,False,False,False],[False,True,True,False],[False,True,True,False],[True,False,False,True]],[[False,True,False,False],[False,True,False,True],[True,False,True,True],[False,False,False,True],[False,True,True,True],[False,True,True,False],[False,False,False,True],[False,False,False,False],[True,False,False,False],[True,True,True,True],[True,False,False,True]],[[False,True,False,True],[False,False,False,False],[True,True,True,True],[False,True,True,False],[False,True,True,True],[False,True,True,True],[False,False,False,False],[True,True,True,True],[False,False,False,False],[False,False,False,True],[False,True,False,False]]], dtype = "bool")#candidate|6179|(8, 11, 4)|const|bool
bop_6180 = relay.logical_or(var_6178.astype('bool'), const_6179.astype('bool')) # shape=(8, 11, 4)
uop_6186 = relay.log10(bop_6180.astype('float64')) # shape=(8, 11, 4)
uop_6189 = relay.sigmoid(uop_6186.astype('float64')) # shape=(8, 11, 4)
func_4533_call = mod.get_global_var('func_4533')
func_4535_call = mutated_mod.get_global_var('func_4535')
call_6191 = relay.TupleGetItem(func_4533_call(), 1)
call_6192 = relay.TupleGetItem(func_4535_call(), 1)
func_5629_call = mod.get_global_var('func_5629')
func_5632_call = mutated_mod.get_global_var('func_5632')
const_6217 = relay.const([7.553627,1.553931,-7.421915,9.256984,-6.326995,9.205941,-1.674185,-4.027417,8.578578,-1.278860,6.809933,8.396827,-4.859420,-1.599785,-1.079611,-9.587768,1.693545,0.890043,-9.409704,-2.453361,8.583163,-9.424220,-8.749855,-0.462020,5.145214,-8.157414,4.184971,-7.328880,5.397986,-1.879210,-4.616346,5.654530,-8.998033,8.822085,4.992520,5.548891,-4.642520,-7.472395,0.675870,-6.533282,8.425618,2.362948,-6.607868,3.919749,-0.228587,2.020546,-8.527570,-5.991503,9.635552,1.063934,-9.624394,-5.855850,1.412496,6.586472,0.240977,2.124788,-2.438791,3.970793,-4.646129,-5.765650,-7.190746,5.685654,-4.598997,-5.190619,-6.246117,-3.454099,-8.091572,4.621492,-0.960639,-3.405724,-4.637869,-1.368355,4.241099,2.151729,-4.371202,-3.628048,4.684914,-8.869060,-8.963184,-0.363805,-8.363867,9.416244,4.363202,-7.043716,6.837266,0.912082,-6.298746,7.062294,8.115414,-0.947345,-9.684888,7.761110,-5.009568,-0.627307,-8.993783,8.964621,3.474885,3.987699,4.925891,-7.691932,8.751923,-9.068335,-4.199409,0.648392,-0.052476,9.841611,-8.974760,4.663164,-1.172700,6.763137,-1.874163,-3.145225,8.375185,-5.264951,4.325492,-2.894667,-8.319846,5.046543,-5.641744,-2.249102,-0.164219,1.410411,-0.661917,7.535403,-4.562087,2.701811,-2.607095,8.418250], dtype = "float32")#candidate|6217|(128,)|const|float32
call_6216 = relay.TupleGetItem(func_5629_call(relay.reshape(const_6217.astype('float32'), [128,])), 0)
call_6218 = relay.TupleGetItem(func_5632_call(relay.reshape(const_6217.astype('float32'), [128,])), 0)
func_275_call = mod.get_global_var('func_275')
func_280_call = mutated_mod.get_global_var('func_280')
const_6221 = relay.const([-6.072811,-3.925204,-6.149529,-6.235412,1.401817,3.327705,2.096906,-2.360410,3.608822,-8.244124,-3.517584,-2.296614,3.671645,7.740569,-2.628292,-0.525766,-1.356918,1.651673,-4.388662,6.536685,8.964776,-9.372258,-2.788156,-8.975412,-7.659409,9.227338,-4.144926,5.569355,3.774925,5.985929,-1.891404,-3.253143,-0.079452,0.065738,-1.228197,1.198498,8.815586,-6.709608,-8.718485,3.208617,-6.918794,4.170484,-9.836203,-5.828607,-7.629493,-6.366950,4.365694,2.049246,-4.750366,1.602527,5.230307,-5.066301,-2.013051,-1.388531,3.890698,5.111747,-4.415931,6.495111,-9.346379,-6.206878,0.756446,6.566495,-8.039367,-5.886354,0.484445,6.159098,-6.291096,-7.900145,-2.288414,-7.620344,-1.437968,2.440557,-8.855925,-8.923854,-6.000726,0.293781,7.941944,2.998308,2.095792,-9.768717,1.286979,9.330419,-0.363398,-2.600368,-5.734337,-9.849415,-7.804747,2.413163,-6.389245,8.575588,3.432652,-4.469531,7.520026,-3.540543,-1.631300,-3.324666,-2.488886,2.712736,9.662896,3.176971,-4.272453,-8.576980,-2.344249,-0.697449,0.434238,6.405636,-3.348333,3.302498,4.451082,1.424346,7.431899,9.306202,5.506887,-7.264297,-5.893478,6.587102,0.065316,-3.509303,5.976167,5.926241,-6.814928,0.176020,-0.215612,2.382563,-4.197676,5.321921,-8.010246,7.655083,-1.701943,-2.573332,-6.222102,9.329418,4.206099,0.786936,-6.033772,-3.505304,7.173845,-8.967899,-9.968201,-6.672494,-0.164147,-9.980120,-8.583299,-6.890665,1.751410,-5.572697,-2.535718,-0.144035,2.372039,5.757271,-7.299725,-2.936293,0.812967,5.899235,-2.299471,6.092218,-0.259122,5.092689,8.344859,2.849512,-6.111800,-7.085152,0.199743,4.767595,-8.826347,9.305947,-7.025449,2.599699,-8.322123,0.164968,-8.236167,7.630934,1.893160,9.055955,-4.454792,8.006730,-5.431521,-2.259677,-8.811513,-9.687366,-5.576364,3.594324,-7.178488,-9.951140,-8.033947,4.658036,-8.131363,3.343978,-9.153825,9.621357,3.278501,0.326534,-4.382262,5.852826,2.934065,-7.103788,0.369155,-2.641745,-5.955984,-5.972921,7.866214,8.767484,-5.199987,0.031215,8.875853,-7.878669,8.814274,3.680908,9.681195,0.704779,-0.722937,-1.303790,3.656525,7.813194,3.037351,-4.709859,-0.307694,0.993071,-1.264404,7.493803,6.073969,-2.345084,8.864923,-3.657269,9.795250,-8.023476,1.322886,8.580669,2.826803,-3.618057,6.590801,1.382499,-5.817248,-8.990392,6.198365,7.958885,0.981602,-4.408348,8.582456,1.754028,-1.629365,-8.177670,-1.738533,-2.284301,6.709223,8.950577,-7.159609,-7.964213,5.377402,0.591108,-3.131514,8.192081,4.067698,-1.685255,-2.434081,6.031953,4.250610,8.500437,1.774616,-0.398310,-4.246356,9.522501,-2.862506,-4.338821,2.159703,1.478389,-1.647310,8.164420,-7.339814,-7.810989,-8.480846,6.126118,2.769526,1.883327,-5.105033,3.642634,2.838875,7.142298,-9.057208,9.494371,-5.587845,8.320401,5.466955,-7.000994,3.624188,8.548411,-6.266076,6.527010,3.420805,-6.707210,-2.730774,-0.589131,4.348265,-2.097383,8.107280,8.005714,-8.547626,-6.959731,9.368938,1.569378,5.917654,-1.311083,5.362475,-5.698555,2.389315,-4.856541,-4.644378,5.323881,1.334862,-5.026430,-9.337370,-1.372400,-4.277163,-1.809050,5.518128,-4.068747,-9.159943,-5.214839,3.639631,-3.804430,0.360699,-3.190739,-9.209186,4.047577,2.046859,-8.369336,2.945977,-6.270355,-2.941933,-3.920567,-6.326875,-5.585031,6.187852,-6.739792,6.524202,6.817700,-4.785065,3.942889,-3.141551,-0.434497,-6.032462,1.621550,7.421395,3.185953,-9.880808,1.140658,4.205873,-9.912852,-5.923631,6.731799,0.261298,-5.705592,-4.745435,-3.164804,1.929070,8.068246,-2.513263,4.559003,-6.225816,4.129635,-9.261060,-5.161852,-0.466479,5.469063,0.490573,5.761730,1.407085,-6.887175,7.150960,-5.566005,7.929735,-0.176871,-7.514261,2.159061,-7.048842,-5.351761,3.662087,-7.388820,2.029697,-3.633635,-5.187335,1.922152,-0.862643,-0.814142,0.359860,-0.177032,-2.332817,-3.906235,-7.625046,1.627661,-2.123853,-3.425197,-9.787033,0.232752,-9.063694,8.605675,5.823011,-9.097260,-1.105222,1.739954,-6.427550,2.521811,-6.840055,2.366037,5.515154,-2.393366,-0.182138,-6.338830,0.908371,-5.124123,5.939961,5.147407,4.254153,-8.778514,-2.666751,8.795322,8.264826,6.555889,-8.782880,4.497518,6.575568,0.918548,-4.642915,5.313770,6.423256,0.517643,1.331371,-8.282929,-1.985092,-6.637911,-9.104592,8.940380,-5.600692,-5.658819,-7.290118,1.570325,1.453348,9.340614,-3.322470,1.487944,4.375608,-2.604670,9.198293,4.614609,-9.545272,-7.710703,0.606709,-6.424456,-9.959821,-7.805463,-5.588322,6.151783,-6.510703,0.199175,7.626357,-2.084501,1.293373,7.703229,5.163473,8.020750,-6.639093,4.544108,8.170887,-1.106915,-3.816744,-1.799069,-9.909640,-5.140506,9.167127,6.424979,-0.236098,9.351206,-1.489111,3.039287,6.375790,3.490245,-0.532758,6.027569,8.518692,-7.309377,-3.602061,-6.893962,-0.059155,1.852268,1.588778,-5.129475,-2.437262,9.363128,-4.090869,0.306201,4.997779,2.974697,9.935821,-7.049273,-7.631020,-1.460227,3.762941,5.769579,1.506451,2.458314,7.407945,-1.939497,2.626850,7.700823,-2.167078,4.658619,1.843762,-5.542281,7.146013,4.831546,8.712856,-3.045911,6.087606,-6.142770,-6.755161,1.921933,9.073698,-0.980892,5.852670,-2.990621,-2.350821,-5.706259,-3.355373,-1.395955,7.969057,-4.428733,2.185335,1.119060,-8.547133,8.278564,-1.552405,3.079232,-6.817675,-3.994303,7.054320,-0.874832,2.852772,1.559960,3.703544,7.932939,-2.693375,1.377436,6.456951,-3.789782,-2.444850,-0.102794,-0.794612,-1.630488,2.666849,-8.338238,7.338904,-0.729944,0.690839,-3.733233,4.458684,2.804944,8.339230,3.512955,-0.462492,1.717024,6.258224,8.232107,1.941733,4.401599,-2.437084,8.491507,-6.596415,-1.789588,5.636166,-9.726051,5.948985,-2.526648,-4.652615,4.132853,5.066011,0.868669,-4.755458,-8.112389,-5.393605,7.493788,-4.523517,-3.752640,-6.438162,-2.142492,7.434030,3.581009,5.390501,-7.114823,6.667713,-8.122800,-9.918555,-7.631636,-9.438946,-5.010969,-4.974810,2.926788,-9.352589,3.604268,2.588149,-1.808096,-8.206456,8.680384,-6.078840,8.747808,6.101800,-0.116681,8.213322,-7.135618,-2.087525,-9.347716,-8.938769,8.031551,7.071849,-0.387047,-1.648874,8.837288,-7.645685,-7.532842,-3.070848,-6.846699,4.615806,5.032477,0.174198,-4.449086,-9.666574,-0.438125,0.887861,5.716025,-9.879990,7.806155,0.662742,8.070757,9.817586,-6.638651,0.959265,5.862901,2.523762,7.000120,-6.383708,-7.323044,-7.587820,-3.032868,-9.567596,-8.580247,1.618377,-6.285330,7.459164,-1.624399,8.650163,-3.269633,6.502772,-3.867856,8.566827,-2.487558,2.135887,-6.700838,7.113615,2.352014,5.351668,6.315890,5.593956,2.863195,5.206404,3.490909,-0.913551,-6.907799,1.688788,-8.480940,-6.511142,7.630245,-9.171914,-8.388560,-6.204405,9.299089,5.698051,-3.946541,-0.982597,9.682411,8.760348,0.089046,0.557095,8.010891,-3.418264,0.345476,-8.522696,-8.471095,-7.172195,1.729995,8.085063,-4.515194,9.121822,2.075703,-2.617253,8.541011,-8.826067,6.649317,-6.232172,-4.941519,9.991149,-0.603971,-2.980203,-2.127236,1.728286,6.711158,-7.040412,3.307077,-8.532911,-0.196540,-6.809135,-8.769276,-5.152978,-7.615950,8.345432,4.423629,-0.965360,-6.749738,-5.800963,7.325475,-7.224349,-0.734266,9.173775,-0.625954,7.759891,-8.491260,8.218016,-9.068380,4.063992,-3.322098,9.908789,5.481186,4.732373,4.359367,-0.449485,2.177192,8.849373,2.897639,-8.877880,5.932933,-6.477080,9.134963,-4.202137,3.671312,-7.561513,-2.883547,9.302931,7.955134,-5.362137,2.201360,6.639961,5.437408,-1.847912,8.144851,6.432049,-3.910369,7.352126,2.602797,4.255863,7.342869,-6.749388,-0.703600,8.562713,5.907923,-4.479068,-9.488688,0.676954,-2.101169,-1.732160,-5.029752,-6.310252,-3.648780,-7.551341,-2.454978,-7.836297,9.018044,5.352636,6.923161,5.326497,-4.617147,9.288043,-4.119623,7.937678,-1.611764,-2.452729,6.508589,-9.502673,-0.904406,2.771156,-2.605047,-6.182989,-3.261259,5.831950,-6.103688,-2.745782,-6.001212,9.733137,5.816333,-0.822559,1.131227,-6.243207,5.426210,-6.695942,-8.483864,-3.271814,4.020959,-3.611107,5.835665,6.474125,4.072829,-8.644476,8.042213,-3.058937,-5.664856,6.570492,4.166129,-1.625062,-3.301978,4.678318,-1.537673,7.686370,-1.723579,-1.562181,-0.614987,-9.027302,5.808794,7.515680,-3.046763,1.470908,-3.685951,-8.706414,4.416779,8.341894,1.509506,-4.285034,-7.078149,-9.093884,9.895035,-9.167020,-4.641519,0.256858,-1.030615,6.471456,-8.239593,3.391962,4.224616,2.552207,2.574700,-6.665240,7.804813,-9.367107,-3.873609,-2.258732,7.169220,5.227113,6.512759,-1.988103,-5.139975,6.543593,-6.863680,0.238632,-1.025680,-9.763946,4.051611,1.048593,1.032570,0.015018,-7.288640,-6.756192,-7.770574,6.670208,-1.631716,1.310205,5.436473,-3.526538,-8.269329,2.068468,-9.315193,-5.482342,-4.684401,-0.730087,6.904535,-3.001567,7.497633,-4.057958,-0.978017,-5.569250,8.083145,5.549020,-9.381621,-4.554738,-3.089079,7.953080,-1.294753,-8.398736,7.533780,-8.539119,-0.600685,-8.657241,4.466124,-4.389940,2.200858,9.390103,-1.148684,0.214387,-5.531655,8.059440,-0.079282,8.257160,-7.337611,9.145092,-5.428171,6.165173,-5.377591,-2.932131,-8.789374,-2.674145,2.154876,-4.013781,-2.679529,-1.308521,2.057184,7.611586,9.574201,-9.564592,6.340474,5.210822,-8.062965,-9.372162,1.751317,-2.981079,6.098613,0.415231,-4.972627,9.927364,0.948933,1.389108,2.841822,-7.265696,3.268014,5.337236,1.111936,-1.800108,1.654327,-4.010433,-1.408957,-5.888370,8.539887,-7.769190,4.035355,4.806586,-1.072806,9.601004,6.287139,-6.425562,5.494012,9.188843,-0.443142,-8.569894,0.202779,-5.181828,2.228529,4.565491,-4.946149,6.146347,0.765385,2.228205,4.809535,-4.497643,-7.879727,-5.684494,-6.047658,-2.800371,7.303818,-1.169346,-2.331562,-9.491362,3.946333,-6.173850,-3.233667,6.190339,-2.839439,2.688462,8.725609,9.160423,-9.207457,6.186887,5.514734,3.708258,-0.943338,8.231657,9.276739,8.731868,-1.378806,-4.873227,2.417834,-6.553383,-6.749487,2.929160,3.477327,-7.897288,-5.665892,-9.890366,7.471248,7.327873,3.809528,-2.784806,-8.297559,3.467334,-9.543423,4.914121,3.977933,5.495401,8.604582,-7.800130,5.521023,-1.217152,-9.343865,-0.447357,0.723493,-9.119136,-0.011869,4.206183,-7.529339,7.981682,-5.250574,-5.685981,0.323948,-1.320827,-7.760733,3.191523,3.842710,-2.974943,5.495779,8.099141,-1.242766,9.139330,6.563498,4.582762,-7.799214,-6.532112,-2.716913,-4.722083,-7.196877,-3.728695,8.283206,4.357328,-1.781227,6.368811,-4.040223,-7.031099,-4.291928,8.138753,-5.304706,0.074477,-5.508446,3.386869,-7.283256,-5.274667,-8.217544,2.521042,-4.643378,-8.645819,-8.599779,-5.876583,1.564292,4.321033,4.682645,4.756451,-4.086390,-4.320638,-1.567493,6.714543,5.063219,0.169483,-8.756728,-3.129730,3.465136,7.908222,-2.682722,-5.289129,-6.615706,4.288076,7.672814,9.162009,6.491142,-5.883740,-1.697029,-2.549682,5.231001,6.377668,-6.834938,-9.834136,9.649226,-1.971810,-1.442262,3.585639,-7.833473,-8.458603,7.017125,5.979638,7.500059,-6.835254,9.189467,4.920048,-6.840665,2.805937,-0.557135,2.169465,1.321615,4.530894,-7.953568,1.794689,8.159510,-2.654029,2.231767,7.362844,3.754446,-2.180635,-4.393174,3.621529,1.690861,-0.735204,5.640972,1.072009,4.994137,-4.913484,7.674513,-6.696894,3.926249,0.601406,4.288146,7.856409,-1.774095,3.355124,8.407123,8.635147,2.434848,0.628364,2.496926,-8.407204,0.916214,4.395679,-9.952455,-8.573194,-5.236049,-1.179225,-6.440801,0.816889,-8.705859,-4.154810,0.800480,-5.234012,4.254038,7.150980,-9.720811,1.220569,-6.237800,-7.372427,-3.110995,-0.443949,-5.033148,-0.840194,-6.564424,2.807477,5.354750,5.793537,1.265365,4.869784,8.004666,-3.366563,-0.469312,5.496464,-0.361609,1.904022,-0.291511,0.992525,6.024794,-9.226427,5.126983,-8.435073,4.399282,-2.051311,2.620293,1.041608,-8.778383,-2.500327,1.627997,-1.906447,8.277508,-6.624766,9.518220,-4.669702,-3.697213,4.515213,-4.056044,-0.385797,6.660294,-1.422267,-7.888763,5.362441,2.628067,-2.442555,5.854474,-3.637309,-5.726598,7.102368,9.460724,-8.561926,-9.130656,2.402015,5.819060,-3.049720,-0.532221,2.318276,-6.587582,-5.485073,-6.733655,-9.161923,9.953174,-1.321211,2.819401,1.227904,6.786865,-3.049821,8.420952,-3.904486,2.154360,0.398433,-8.477285,2.334091,8.474126,-0.626996,-9.425651,-7.649762,-7.860132,9.852011,-2.504985,-0.179919,7.458020,7.875522,-8.904467,8.656482,-1.661582,-9.951771,-2.763206,4.725236,2.382109,2.073028,-1.015356,5.823771,8.424757,-4.914065,2.126785,0.946395,-3.949804,-0.110575,1.001143,-7.499198,-2.928630,-9.590337,-2.905095,6.220081,3.752194,4.209885,-8.286488,-0.407428,-3.548144,4.393980,8.315134,-1.234701,1.606350,5.082779,-0.451027,-2.050455,-9.400092,4.826294,-2.596392,-9.615432,-8.904534,0.132800,-5.512095,-2.534105,-4.507540,-8.637163,-7.723549,9.102565,8.432961,-1.219847,0.553634,3.207919,8.666722,-4.406535,3.578201,-0.497324,4.641356,-0.198642,2.970633,-6.426208,-4.113100,-2.358090,2.135515,-9.779845,-0.068677,-2.650589,8.955144,1.705908,2.072886,-0.800770,-5.944391,-9.528918,-0.254109,3.999302,6.872187,7.441276,-6.610842,-8.518911,-4.276429,7.152755,-6.711869,-4.067159,8.984897], dtype = "float64")#candidate|6221|(1320,)|const|float64
var_6222 = relay.var("var_6222", dtype = "float32", shape = (168,))#candidate|6222|(168,)|var|float32
call_6220 = relay.TupleGetItem(func_275_call(relay.reshape(const_6221.astype('float64'), [11, 15, 8]), relay.reshape(var_6222.astype('float32'), [168,]), relay.reshape(const_6221.astype('float64'), [11, 15, 8]), ), 2)
call_6223 = relay.TupleGetItem(func_280_call(relay.reshape(const_6221.astype('float64'), [11, 15, 8]), relay.reshape(var_6222.astype('float32'), [168,]), relay.reshape(const_6221.astype('float64'), [11, 15, 8]), ), 2)
bop_6231 = relay.multiply(uop_6186.astype('uint32'), relay.reshape(bop_6180.astype('uint32'), relay.shape_of(uop_6186))) # shape=(8, 11, 4)
func_5768_call = mod.get_global_var('func_5768')
func_5770_call = mutated_mod.get_global_var('func_5770')
call_6235 = relay.TupleGetItem(func_5768_call(), 0)
call_6236 = relay.TupleGetItem(func_5770_call(), 0)
output = relay.Tuple([uop_6189,call_6191,call_6216,const_6217,call_6220,const_6221,var_6222,bop_6231,call_6235,])
output2 = relay.Tuple([uop_6189,call_6192,call_6218,const_6217,call_6223,const_6221,var_6222,bop_6231,call_6236,])
func_6237 = relay.Function([var_6178,var_6222,], output)
mod['func_6237'] = func_6237
mod = relay.transform.InferType()(mod)
var_6238 = relay.var("var_6238", dtype = "bool", shape = (1, 11, 4))#candidate|6238|(1, 11, 4)|var|bool
var_6239 = relay.var("var_6239", dtype = "float32", shape = (168,))#candidate|6239|(168,)|var|float32
output = func_6237(var_6238,var_6239,)
func_6240 = relay.Function([var_6238,var_6239,], output)
mutated_mod['func_6240'] = func_6240
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3834_call = mod.get_global_var('func_3834')
func_3835_call = mutated_mod.get_global_var('func_3835')
call_6270 = relay.TupleGetItem(func_3834_call(), 0)
call_6271 = relay.TupleGetItem(func_3835_call(), 0)
output = relay.Tuple([call_6270,])
output2 = relay.Tuple([call_6271,])
func_6306 = relay.Function([], output)
mod['func_6306'] = func_6306
mod = relay.transform.InferType()(mod)
output = func_6306()
func_6307 = relay.Function([], output)
mutated_mod['func_6307'] = func_6307
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3015_call = mod.get_global_var('func_3015')
func_3017_call = mutated_mod.get_global_var('func_3017')
call_6313 = relay.TupleGetItem(func_3015_call(), 0)
call_6314 = relay.TupleGetItem(func_3017_call(), 0)
output = call_6313
output2 = call_6314
func_6320 = relay.Function([], output)
mod['func_6320'] = func_6320
mod = relay.transform.InferType()(mod)
output = func_6320()
func_6321 = relay.Function([], output)
mutated_mod['func_6321'] = func_6321
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4498_call = mod.get_global_var('func_4498')
func_4499_call = mutated_mod.get_global_var('func_4499')
call_6338 = func_4498_call()
call_6339 = func_4498_call()
var_6354 = relay.var("var_6354", dtype = "float32", shape = (16, 2, 4))#candidate|6354|(16, 2, 4)|var|float32
bop_6355 = relay.logical_or(call_6338.astype('bool'), var_6354.astype('bool')) # shape=(16, 2, 4)
bop_6358 = relay.logical_or(call_6339.astype('bool'), var_6354.astype('bool')) # shape=(16, 2, 4)
output = relay.Tuple([bop_6355,])
output2 = relay.Tuple([bop_6358,])
func_6362 = relay.Function([var_6354,], output)
mod['func_6362'] = func_6362
mod = relay.transform.InferType()(mod)
var_6363 = relay.var("var_6363", dtype = "float32", shape = (16, 2, 4))#candidate|6363|(16, 2, 4)|var|float32
output = func_6362(var_6363)
func_6364 = relay.Function([var_6363], output)
mutated_mod['func_6364'] = func_6364
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4546_call = mod.get_global_var('func_4546')
func_4547_call = mutated_mod.get_global_var('func_4547')
call_6372 = func_4546_call()
call_6373 = func_4546_call()
output = call_6372
output2 = call_6373
func_6382 = relay.Function([], output)
mod['func_6382'] = func_6382
mod = relay.transform.InferType()(mod)
mutated_mod['func_6382'] = func_6382
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6382_call = mutated_mod.get_global_var('func_6382')
call_6383 = func_6382_call()
output = call_6383
func_6384 = relay.Function([], output)
mutated_mod['func_6384'] = func_6384
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4358_call = mod.get_global_var('func_4358')
func_4360_call = mutated_mod.get_global_var('func_4360')
call_6404 = relay.TupleGetItem(func_4358_call(), 0)
call_6405 = relay.TupleGetItem(func_4360_call(), 0)
func_618_call = mod.get_global_var('func_618')
func_621_call = mutated_mod.get_global_var('func_621')
const_6408 = relay.const([-5,-7,10,8,-5,-7,-2,-4,2,1,3,-9,4,-4,-9,7,9,-2,3,-8,9,-7,-4,5,1,7,-1,5,-6,-4,-10,-8,-6,8,10,-10,-1,-9,7,4,9,-4,-10,6,9,-3,-10,8,3,7,-1,-2,5,-9,5,-10,5,-7,-2,2,-4,2,8,-1,-7,-4,-7,-1,10,-5,-3,1,9,-4,-4,6,-3,-1,-10,2,1,8,-4,10,-10,1,2,-3,4,5,6,-4,-2,10,5,1,-9,6,9,9,3,-5,4,7,7,-3,-5,-4,2,-1,5,7,-3,7,-8,-3,6,7,8,-7,-8,-8,9,-10,-5,2,-2,-5,-9,-9,1,-2,-10,9,5,-2,8,5,-3,10,7,9,-10,-6,-7,10,7,-6,-8,-4,1,-5,-6,-6,-7,-7,10,-4,10,-9,-5,6,-8,-8,5,1,-5,-3,-9,2,-7,10,6,-8,-4,-5,8,10,2,-4,7,3,6,-7,-6,2,-1,-3,-6,5,-9,-10,2,3,-5,2,-6,8,-4,-8,-5,6,-3,-4,1,1,-2,5,9,9,-6,-10,10,4,-4,-4,3,6,10,-4,-1,-9,6,-6,-3,-10,8,3,7,-1,10,-1,-7,8,7,8,-7,-3,-2,-7,-4,6,-7,3,6,5,1,-10,3,6,10,-9], dtype = "uint64")#candidate|6408|(252,)|const|uint64
call_6407 = func_618_call(relay.reshape(const_6408.astype('uint64'), [14, 9, 2]))
call_6409 = func_618_call(relay.reshape(const_6408.astype('uint64'), [14, 9, 2]))
output = relay.Tuple([call_6404,call_6407,const_6408,])
output2 = relay.Tuple([call_6405,call_6409,const_6408,])
func_6416 = relay.Function([], output)
mod['func_6416'] = func_6416
mod = relay.transform.InferType()(mod)
output = func_6416()
func_6417 = relay.Function([], output)
mutated_mod['func_6417'] = func_6417
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6468 = relay.const([[[-3.802191,-1.762141],[-3.867558,8.583848],[-9.817965,0.237896]],[[-2.419015,-0.253009],[-1.620914,-5.810978],[0.194462,7.621705]],[[-5.195089,-3.440831],[-9.537969,-7.964100],[-6.691094,2.387682]],[[8.912486,0.045042],[-3.059416,1.490474],[-7.900014,6.960906]],[[1.677742,3.706642],[-6.492876,1.119487],[-6.663832,2.070081]],[[-0.833592,1.767070],[4.065571,3.946739],[0.346330,-3.765311]],[[-4.749711,1.696816],[-5.593311,2.442367],[-4.733431,-6.994696]]], dtype = "float32")#candidate|6468|(7, 3, 2)|const|float32
var_6469 = relay.var("var_6469", dtype = "float32", shape = (7, 3, 2))#candidate|6469|(7, 3, 2)|var|float32
bop_6470 = relay.mod(const_6468.astype('float32'), relay.reshape(var_6469.astype('float32'), relay.shape_of(const_6468))) # shape=(7, 3, 2)
output = relay.Tuple([bop_6470,])
output2 = relay.Tuple([bop_6470,])
func_6479 = relay.Function([var_6469,], output)
mod['func_6479'] = func_6479
mod = relay.transform.InferType()(mod)
var_6480 = relay.var("var_6480", dtype = "float32", shape = (7, 3, 2))#candidate|6480|(7, 3, 2)|var|float32
output = func_6479(var_6480)
func_6481 = relay.Function([var_6480], output)
mutated_mod['func_6481'] = func_6481
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5058_call = mod.get_global_var('func_5058')
func_5059_call = mutated_mod.get_global_var('func_5059')
call_6501 = relay.TupleGetItem(func_5058_call(), 0)
call_6502 = relay.TupleGetItem(func_5059_call(), 0)
output = relay.Tuple([call_6501,])
output2 = relay.Tuple([call_6502,])
func_6514 = relay.Function([], output)
mod['func_6514'] = func_6514
mod = relay.transform.InferType()(mod)
mutated_mod['func_6514'] = func_6514
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6514_call = mutated_mod.get_global_var('func_6514')
call_6515 = func_6514_call()
output = call_6515
func_6516 = relay.Function([], output)
mutated_mod['func_6516'] = func_6516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3239_call = mod.get_global_var('func_3239')
func_3241_call = mutated_mod.get_global_var('func_3241')
call_6558 = relay.TupleGetItem(func_3239_call(), 0)
call_6559 = relay.TupleGetItem(func_3241_call(), 0)
const_6560 = relay.const([[[-3.350986,8.808179,-9.262640,5.087477],[2.057919,-1.679610,8.405862,-3.259805],[4.236665,-5.027940,-0.707857,9.200472]],[[-0.554470,2.382687,-4.102069,6.914592],[-8.054732,-2.876486,6.070496,-1.912075],[2.283679,4.981023,-9.557869,3.499612]],[[3.478807,5.737476,-4.017217,-5.022422],[0.296953,3.584531,6.495061,9.926743],[6.109739,-6.458568,9.500911,2.836807]],[[-6.181955,8.268546,-4.375824,-6.122432],[-2.500805,-4.558887,-8.926207,3.381887],[-1.523553,2.182032,3.473701,0.528669]],[[4.234488,5.154448,-3.776660,8.857766],[7.897054,1.516510,9.874406,9.849275],[7.447481,3.636013,7.202828,-0.011313]],[[7.558613,8.297763,-0.281629,2.859502],[-8.996813,-6.889796,5.642268,7.554679],[-5.870591,4.382850,-2.995207,0.851552]],[[-6.135147,-6.611457,8.752383,9.418268],[-1.024864,-4.318269,-6.948447,-0.927737],[-0.991621,8.343413,-2.934071,7.649479]],[[-3.179305,7.489808,1.674715,-0.377962],[6.022650,2.396730,7.416482,1.700166],[2.642870,-4.396963,3.729020,4.323686]],[[9.444080,8.162342,2.438308,-8.208974],[4.354309,4.040657,-2.578378,-5.493034],[-0.524706,1.289158,7.504566,4.564837]],[[-8.696255,-1.939107,6.998510,6.801435],[-9.122983,-3.081813,3.352451,2.580210],[-4.590374,-1.946966,9.982039,-6.405639]],[[-5.045293,4.371373,-7.669519,3.204033],[7.719809,-2.608404,4.752657,6.605247],[7.033945,3.439369,1.961589,6.687510]],[[1.255155,-1.495275,5.159852,-9.558248],[-6.750311,8.434949,1.071914,1.451769],[-4.082578,1.794885,-1.894285,4.600171]],[[-9.240315,-4.647089,-0.827100,-0.506582],[4.477798,-8.808720,6.887832,1.436139],[-3.977562,5.422259,3.141417,-4.273240]],[[-7.320228,5.332718,0.542286,-7.387762],[6.477456,6.011653,6.287851,-5.443091],[-9.285551,5.958562,8.198131,-3.923699]],[[6.817007,6.042809,-2.247721,-0.714766],[0.063020,1.735435,-8.474607,5.525634],[8.474085,0.402532,-4.559054,9.063024]],[[-3.128304,-0.296381,7.360747,-5.915011],[-1.077300,5.974975,9.870452,-7.085698],[6.267369,2.382908,3.610530,-6.085538]]], dtype = "float32")#candidate|6560|(16, 3, 4)|const|float32
bop_6561 = relay.bitwise_xor(call_6558.astype('uint64'), const_6560.astype('uint64')) # shape=(16, 3, 4)
bop_6564 = relay.bitwise_xor(call_6559.astype('uint64'), const_6560.astype('uint64')) # shape=(16, 3, 4)
output = relay.Tuple([bop_6561,])
output2 = relay.Tuple([bop_6564,])
func_6568 = relay.Function([], output)
mod['func_6568'] = func_6568
mod = relay.transform.InferType()(mod)
output = func_6568()
func_6569 = relay.Function([], output)
mutated_mod['func_6569'] = func_6569
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1615_call = mod.get_global_var('func_1615')
func_1616_call = mutated_mod.get_global_var('func_1616')
call_6611 = func_1615_call()
call_6612 = func_1615_call()
output = relay.Tuple([call_6611,])
output2 = relay.Tuple([call_6612,])
func_6615 = relay.Function([], output)
mod['func_6615'] = func_6615
mod = relay.transform.InferType()(mod)
output = func_6615()
func_6616 = relay.Function([], output)
mutated_mod['func_6616'] = func_6616
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5768_call = mod.get_global_var('func_5768')
func_5770_call = mutated_mod.get_global_var('func_5770')
call_6637 = relay.TupleGetItem(func_5768_call(), 0)
call_6638 = relay.TupleGetItem(func_5770_call(), 0)
output = relay.Tuple([call_6637,])
output2 = relay.Tuple([call_6638,])
func_6643 = relay.Function([], output)
mod['func_6643'] = func_6643
mod = relay.transform.InferType()(mod)
output = func_6643()
func_6644 = relay.Function([], output)
mutated_mod['func_6644'] = func_6644
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3834_call = mod.get_global_var('func_3834')
func_3835_call = mutated_mod.get_global_var('func_3835')
call_6678 = relay.TupleGetItem(func_3834_call(), 0)
call_6679 = relay.TupleGetItem(func_3835_call(), 0)
var_6683 = relay.var("var_6683", dtype = "float32", shape = (16, 8, 4))#candidate|6683|(16, 8, 4)|var|float32
bop_6684 = relay.bitwise_xor(call_6678.astype('int64'), var_6683.astype('int64')) # shape=(16, 8, 4)
bop_6687 = relay.bitwise_xor(call_6679.astype('int64'), var_6683.astype('int64')) # shape=(16, 8, 4)
uop_6690 = relay.cosh(bop_6684.astype('float64')) # shape=(16, 8, 4)
uop_6692 = relay.cosh(bop_6687.astype('float64')) # shape=(16, 8, 4)
bop_6693 = relay.greater(uop_6690.astype('bool'), call_6678.astype('bool')) # shape=(16, 8, 4)
bop_6696 = relay.greater(uop_6692.astype('bool'), call_6679.astype('bool')) # shape=(16, 8, 4)
func_3227_call = mod.get_global_var('func_3227')
func_3228_call = mutated_mod.get_global_var('func_3228')
call_6700 = relay.TupleGetItem(func_3227_call(), 0)
call_6701 = relay.TupleGetItem(func_3228_call(), 0)
func_1837_call = mod.get_global_var('func_1837')
func_1839_call = mutated_mod.get_global_var('func_1839')
call_6706 = func_1837_call()
call_6707 = func_1837_call()
func_5329_call = mod.get_global_var('func_5329')
func_5331_call = mutated_mod.get_global_var('func_5331')
call_6708 = func_5329_call()
call_6709 = func_5329_call()
output = relay.Tuple([bop_6693,call_6700,call_6706,call_6708,])
output2 = relay.Tuple([bop_6696,call_6701,call_6707,call_6709,])
func_6716 = relay.Function([var_6683,], output)
mod['func_6716'] = func_6716
mod = relay.transform.InferType()(mod)
mutated_mod['func_6716'] = func_6716
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6717 = relay.var("var_6717", dtype = "float32", shape = (16, 8, 4))#candidate|6717|(16, 8, 4)|var|float32
func_6716_call = mutated_mod.get_global_var('func_6716')
call_6718 = func_6716_call(var_6717)
output = call_6718
func_6719 = relay.Function([var_6717], output)
mutated_mod['func_6719'] = func_6719
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4498_call = mod.get_global_var('func_4498')
func_4499_call = mutated_mod.get_global_var('func_4499')
call_6723 = func_4498_call()
call_6724 = func_4498_call()
func_5768_call = mod.get_global_var('func_5768')
func_5770_call = mutated_mod.get_global_var('func_5770')
call_6735 = relay.TupleGetItem(func_5768_call(), 0)
call_6736 = relay.TupleGetItem(func_5770_call(), 0)
func_4005_call = mod.get_global_var('func_4005')
func_4006_call = mutated_mod.get_global_var('func_4006')
call_6740 = relay.TupleGetItem(func_4005_call(), 0)
call_6741 = relay.TupleGetItem(func_4006_call(), 0)
func_3341_call = mod.get_global_var('func_3341')
func_3344_call = mutated_mod.get_global_var('func_3344')
var_6767 = relay.var("var_6767", dtype = "float32", shape = (128,))#candidate|6767|(128,)|var|float32
call_6766 = relay.TupleGetItem(func_3341_call(relay.reshape(var_6767.astype('float32'), [16, 2, 4]), relay.reshape(var_6767.astype('bool'), [16, 2, 4]), ), 1)
call_6768 = relay.TupleGetItem(func_3344_call(relay.reshape(var_6767.astype('float32'), [16, 2, 4]), relay.reshape(var_6767.astype('bool'), [16, 2, 4]), ), 1)
func_970_call = mod.get_global_var('func_970')
func_974_call = mutated_mod.get_global_var('func_974')
var_6775 = relay.var("var_6775", dtype = "float64", shape = (2240,))#candidate|6775|(2240,)|var|float64
call_6774 = func_970_call(relay.reshape(var_6775.astype('float64'), [10, 14, 16]), relay.reshape(var_6775.astype('float64'), [10, 14, 16]), )
call_6776 = func_970_call(relay.reshape(var_6775.astype('float64'), [10, 14, 16]), relay.reshape(var_6775.astype('float64'), [10, 14, 16]), )
output = relay.Tuple([call_6723,call_6735,call_6740,call_6766,var_6767,call_6774,var_6775,])
output2 = relay.Tuple([call_6724,call_6736,call_6741,call_6768,var_6767,call_6776,var_6775,])
func_6777 = relay.Function([var_6767,var_6775,], output)
mod['func_6777'] = func_6777
mod = relay.transform.InferType()(mod)
var_6778 = relay.var("var_6778", dtype = "float32", shape = (128,))#candidate|6778|(128,)|var|float32
var_6779 = relay.var("var_6779", dtype = "float64", shape = (2240,))#candidate|6779|(2240,)|var|float64
output = func_6777(var_6778,var_6779,)
func_6780 = relay.Function([var_6778,var_6779,], output)
mutated_mod['func_6780'] = func_6780
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4035_call = mod.get_global_var('func_4035')
func_4037_call = mutated_mod.get_global_var('func_4037')
call_6808 = func_4035_call()
call_6809 = func_4035_call()
output = relay.Tuple([call_6808,])
output2 = relay.Tuple([call_6809,])
func_6827 = relay.Function([], output)
mod['func_6827'] = func_6827
mod = relay.transform.InferType()(mod)
mutated_mod['func_6827'] = func_6827
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6827_call = mutated_mod.get_global_var('func_6827')
call_6828 = func_6827_call()
output = call_6828
func_6829 = relay.Function([], output)
mutated_mod['func_6829'] = func_6829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2094_call = mod.get_global_var('func_2094')
func_2095_call = mutated_mod.get_global_var('func_2095')
call_6837 = relay.TupleGetItem(func_2094_call(), 0)
call_6838 = relay.TupleGetItem(func_2095_call(), 0)
output = call_6837
output2 = call_6838
func_6857 = relay.Function([], output)
mod['func_6857'] = func_6857
mod = relay.transform.InferType()(mod)
mutated_mod['func_6857'] = func_6857
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6857_call = mutated_mod.get_global_var('func_6857')
call_6858 = func_6857_call()
output = call_6858
func_6859 = relay.Function([], output)
mutated_mod['func_6859'] = func_6859
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5058_call = mod.get_global_var('func_5058')
func_5059_call = mutated_mod.get_global_var('func_5059')
call_6869 = relay.TupleGetItem(func_5058_call(), 0)
call_6870 = relay.TupleGetItem(func_5059_call(), 0)
output = call_6869
output2 = call_6870
func_6871 = relay.Function([], output)
mod['func_6871'] = func_6871
mod = relay.transform.InferType()(mod)
mutated_mod['func_6871'] = func_6871
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6871_call = mutated_mod.get_global_var('func_6871')
call_6872 = func_6871_call()
output = call_6872
func_6873 = relay.Function([], output)
mutated_mod['func_6873'] = func_6873
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6900 = relay.var("var_6900", dtype = "float64", shape = (15, 2, 1))#candidate|6900|(15, 2, 1)|var|float64
uop_6901 = relay.sinh(var_6900.astype('float64')) # shape=(15, 2, 1)
bop_6913 = relay.floor_divide(uop_6901.astype('float32'), relay.reshape(var_6900.astype('float32'), relay.shape_of(uop_6901))) # shape=(15, 2, 1)
uop_6919 = relay.atan(bop_6913.astype('float64')) # shape=(15, 2, 1)
func_5825_call = mod.get_global_var('func_5825')
func_5827_call = mutated_mod.get_global_var('func_5827')
call_6921 = relay.TupleGetItem(func_5825_call(), 1)
call_6922 = relay.TupleGetItem(func_5827_call(), 1)
func_5768_call = mod.get_global_var('func_5768')
func_5770_call = mutated_mod.get_global_var('func_5770')
call_6933 = relay.TupleGetItem(func_5768_call(), 0)
call_6934 = relay.TupleGetItem(func_5770_call(), 0)
output = relay.Tuple([uop_6919,call_6921,call_6933,])
output2 = relay.Tuple([uop_6919,call_6922,call_6934,])
func_6935 = relay.Function([var_6900,], output)
mod['func_6935'] = func_6935
mod = relay.transform.InferType()(mod)
mutated_mod['func_6935'] = func_6935
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6936 = relay.var("var_6936", dtype = "float64", shape = (15, 2, 1))#candidate|6936|(15, 2, 1)|var|float64
func_6935_call = mutated_mod.get_global_var('func_6935')
call_6937 = func_6935_call(var_6936)
output = call_6937
func_6938 = relay.Function([var_6936], output)
mutated_mod['func_6938'] = func_6938
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2127_call = mod.get_global_var('func_2127')
func_2128_call = mutated_mod.get_global_var('func_2128')
call_6972 = func_2127_call()
call_6973 = func_2127_call()
output = call_6972
output2 = call_6973
func_6975 = relay.Function([], output)
mod['func_6975'] = func_6975
mod = relay.transform.InferType()(mod)
output = func_6975()
func_6976 = relay.Function([], output)
mutated_mod['func_6976'] = func_6976
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1837_call = mod.get_global_var('func_1837')
func_1839_call = mutated_mod.get_global_var('func_1839')
call_7005 = func_1837_call()
call_7006 = func_1837_call()
output = call_7005
output2 = call_7006
func_7015 = relay.Function([], output)
mod['func_7015'] = func_7015
mod = relay.transform.InferType()(mod)
output = func_7015()
func_7016 = relay.Function([], output)
mutated_mod['func_7016'] = func_7016
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6009_call = mod.get_global_var('func_6009')
func_6010_call = mutated_mod.get_global_var('func_6010')
call_7020 = relay.TupleGetItem(func_6009_call(), 0)
call_7021 = relay.TupleGetItem(func_6010_call(), 0)
func_501_call = mod.get_global_var('func_501')
func_505_call = mutated_mod.get_global_var('func_505')
const_7044 = relay.const([[-4.505265,-6.401543,8.198031,8.085662,5.594152,-3.318114,8.403965,-9.868195,0.325128,7.617732,-5.946157,4.205103,-3.877222,3.010435,8.939815,-5.018427,5.629777,-6.317632,5.470566,-7.441406,6.101548,-7.217702,1.223565,4.028931,5.921838,8.088853,9.848390,-1.674453,6.276550,-8.436614,7.437088,-7.035846,5.095310,2.779245,-2.106393,-6.759773,-7.465782,-8.232610,8.283990,-0.920261,1.036671,-9.184559,2.659989,-3.751588,-4.215219,8.077346,2.474413,6.990171,0.413023,-1.245941,-2.983637,0.795140,5.167654,-5.739553,8.973793,6.731328,4.091239,4.209470,4.652734,7.905712,7.808904,8.891227,3.700325,8.741654,2.940585,-8.121195,-0.130430,8.285702,-2.388587,3.245905,-0.775739,-2.370291,-9.443177,-1.190839,1.314761,-2.837992,2.927411,1.586655,-0.772996,7.973215,-2.530446,1.354555,3.085808,3.268841,-6.175987,8.357956,1.332625,-3.465205,4.376467,7.204121,9.356666,8.031518,3.066615,5.259409,-8.472847,-1.398653,-9.059412,3.148540,-8.743616,2.326263,4.940916,8.689335,-5.990204,4.437469,0.622293]], dtype = "float64")#candidate|7044|(1, 105)|const|float64
var_7045 = relay.var("var_7045", dtype = "int8", shape = (182, 2))#candidate|7045|(182, 2)|var|int8
call_7043 = relay.TupleGetItem(func_501_call(relay.reshape(const_7044.astype('float64'), [3, 7, 5]), relay.reshape(var_7045.astype('int8'), [364,]), relay.reshape(call_7020.astype('float64'), [1320,]), ), 1)
call_7046 = relay.TupleGetItem(func_505_call(relay.reshape(const_7044.astype('float64'), [3, 7, 5]), relay.reshape(var_7045.astype('int8'), [364,]), relay.reshape(call_7020.astype('float64'), [1320,]), ), 1)
const_7059 = relay.const([[7.833001,-0.408672,9.813693,-3.799391,6.871598,4.502728,-4.789254,5.108269,3.439191,-8.299549,-0.923624,0.601053,-6.036570,-5.827926,-4.972991,-1.831953,8.172907,7.882201,-9.270993,6.102192,-7.114472,-5.381686,-5.432796,1.963850,-3.720630,4.893140,6.983910,5.673045,0.353751,2.003176,7.481813,6.428288,-0.169366,-4.922448,8.769880,-9.591843,-1.008094,-3.196628,-2.417193,8.609984,-6.953398,-7.370899,4.244614,3.491227,7.989784,-4.048908,-3.411947,3.936354,-6.905320,-5.952184,-3.632486,3.856095,8.936610,4.419984,2.175716,-6.253798,-6.009309,-0.878367,7.530121,-7.983536,-9.094165,8.785363,-0.694956,8.286591,-4.522499,-8.785329,-8.863915,-1.014368,-5.571063,-6.023948,-3.436378,2.121682,1.022183,-3.007429,7.347121,2.503025,1.473655,3.549981,9.399281,-0.600447,-4.786817,-3.019295,-0.954864,-0.593914,2.420044,9.571464,5.041383,-4.228373,-4.193444,5.058611,3.190086,0.179323,-2.056298,-5.780511,2.734906,4.712035,-5.668110,-1.543843,-4.336888,6.573102,9.026917,8.422482,5.955925,0.677812,-8.964559],[6.416723,7.646472,-2.102666,9.802471,-6.717590,4.062331,-8.510849,7.449842,2.858291,6.537010,9.766674,9.934629,-6.099181,-0.175265,-0.631437,-9.497931,-6.001708,-6.634433,9.208230,-0.073356,-2.234551,-7.456498,7.326294,2.172201,1.279641,8.892327,-6.267109,-4.741742,4.089236,-8.597805,2.409736,2.611690,4.268846,8.567083,-6.291890,-4.286986,6.605392,8.076592,-7.057088,4.677423,-1.981608,2.983123,3.462951,0.445022,-8.790598,-0.408000,-5.057035,-2.316264,7.468067,1.255010,7.206421,-5.417974,-1.799388,1.061767,5.522096,-8.419183,0.340707,-4.358972,7.541259,6.801734,5.867736,-2.878306,8.646056,2.964628,-5.131550,-6.841074,-2.774736,-1.603607,9.228875,-8.776608,8.241189,-0.482425,-9.080996,9.539900,-2.686035,7.372543,3.473807,1.071195,-2.940362,2.583549,8.961649,-2.167711,5.541761,-4.219857,-4.204780,7.264846,-5.780049,-8.898847,-6.346520,-4.586418,-2.526202,-6.047260,6.171639,5.187027,3.520362,-8.673449,-1.065929,-6.884298,-1.894523,-5.702244,7.153218,-1.615018,3.916618,-0.123786,-8.218826],[-4.128347,2.104223,-7.438837,8.759762,-7.023311,2.635004,9.252056,-1.239316,9.970530,7.892472,9.229102,8.364875,-6.203656,3.453332,-9.857685,8.288340,-0.028577,3.721645,-7.860334,-2.028365,4.811841,6.764956,-1.722677,0.003577,-8.814852,4.991583,9.406688,3.763770,-1.467410,9.469549,5.031024,1.562630,9.256767,-6.435028,9.387589,-7.268876,-9.958468,-5.299597,5.928053,-2.344427,-0.487039,-1.116098,-0.111442,5.496433,-8.389333,0.655934,3.734332,2.964579,-4.246384,-9.794581,6.158116,-0.719938,8.498613,-1.338286,-2.870753,-8.669341,-7.952720,5.407435,3.550587,0.030234,3.205142,0.298865,-9.501053,8.712914,-8.896747,-8.185206,-2.009598,-8.960643,5.792835,8.005556,0.533133,-6.912557,-7.275982,1.609556,-0.893288,5.861839,3.286013,0.937116,8.897052,-0.780065,-1.117486,5.363643,-2.406285,-2.197959,-2.530607,2.323648,-3.680382,-8.823683,0.949276,-3.719215,-8.232553,2.237087,-1.896360,9.094962,6.103072,8.496289,7.463313,8.812102,-5.441876,1.867256,2.468818,5.759589,3.121400,-1.747978,3.359682],[-1.650270,-7.057814,4.765266,-3.988196,-7.852337,5.795625,-6.057754,7.531256,-4.546874,0.723659,-5.414518,-2.887588,-9.039277,2.773523,5.203867,8.163384,2.024166,3.509787,-1.434680,4.630182,-4.268229,4.017724,4.318790,-5.925758,-2.798232,-8.433986,-6.341204,-7.174012,-9.222565,3.035383,-4.040580,2.633963,-8.623189,5.724270,3.709629,6.026694,2.246289,-6.781985,1.984762,-2.744080,-0.650393,6.602767,4.878863,-0.589320,1.831178,3.872971,-0.700313,1.883555,-5.354796,-4.516287,-7.579042,1.013673,-6.713775,-1.135767,-9.921207,1.958808,2.863462,9.906592,7.525600,-9.682028,0.071499,-3.519158,4.177599,-2.742831,-8.853098,4.864801,-8.559711,-1.470496,-9.206568,4.069800,2.446445,1.281900,3.154518,-1.465653,-1.304346,6.262943,-6.234177,-5.492362,-6.085902,4.599352,3.160100,4.919112,5.734104,-1.636107,-5.140557,-0.882469,-2.450787,6.886087,-7.778996,-3.788979,-6.775923,-8.806627,-6.845536,-1.467493,5.027451,7.211451,-8.859133,5.611218,0.886645,6.795975,0.939519,7.745154,-3.269542,8.530543,-9.442390],[4.171357,2.495892,-7.419175,-6.768655,-9.447694,-2.486250,-5.362819,-3.010249,4.978793,6.443837,-1.955590,-6.846306,6.737461,-1.628177,-4.119803,-0.539132,2.597607,2.573765,9.959608,7.130558,-7.255574,-5.526514,-4.664502,-8.854681,-5.065552,9.677195,-7.478805,-8.563964,-9.051410,-6.519765,-6.030431,-1.025144,-0.963638,5.164868,-4.370315,-6.629818,-4.504149,2.911220,5.854887,-3.410925,-0.516805,-3.092562,-9.571658,-8.479432,6.282048,1.482273,5.236369,-5.233449,9.394944,-4.565833,-7.517055,-5.430095,1.694587,5.738768,9.328781,-8.099362,6.176892,-1.605900,2.286618,-3.477585,6.633608,-3.245648,-7.433517,9.957660,-9.496220,1.805290,-7.799626,-5.635359,1.269599,-4.909193,0.281000,-4.923012,-9.884241,-8.125343,0.872006,-9.092692,-4.265697,-5.284375,6.888630,3.653389,4.672470,-2.556617,-2.184885,6.981564,7.147049,6.970585,-7.968944,1.580902,-2.122144,-3.851675,2.067661,1.516644,-4.304182,-1.039561,7.230683,2.625556,-5.256523,-8.917944,-9.586144,-3.172704,3.022405,3.730873,-6.581176,-6.015018,-0.587476],[-0.434366,-6.566717,-6.019601,4.486267,-0.020704,-4.445997,0.900433,-3.350951,0.802179,4.543095,-2.054932,7.896405,-3.178470,-5.155971,1.885598,-9.341393,-8.528393,3.217072,9.909231,0.238607,8.859248,0.446408,-6.538056,-8.636808,1.069997,-6.551166,-4.148237,1.051450,6.609696,-7.953273,-2.791766,-6.613394,2.730808,1.569007,7.922671,-4.829576,-0.093591,8.129145,0.320430,9.248664,-7.516163,-9.456288,3.013387,0.630645,-8.488820,7.254675,-4.617809,3.466018,1.641134,-0.227814,-7.114897,8.311714,4.998514,3.173793,-3.638281,6.248478,-0.717683,-2.160524,9.846801,-4.503350,3.284681,-5.659034,-1.814196,3.873710,5.870527,-7.847005,-6.049660,-1.150029,-2.477750,9.060711,-5.086702,6.450722,-4.748310,4.880545,-4.360130,5.000416,4.491978,5.311898,-4.490535,-8.125977,4.138077,6.851468,-3.704585,4.416576,8.199930,-4.939035,0.222405,1.916571,6.500944,4.371552,-8.148515,6.945887,-9.139657,7.120039,3.992930,-5.733738,-2.338033,-6.860481,-2.903487,-5.973845,-1.599618,5.440075,-5.935810,-4.686648,0.524540],[9.310678,-1.669986,-7.433743,-2.866531,0.488618,9.009147,-9.727878,7.861440,-7.324904,-3.768031,-3.875422,6.901408,-1.402838,-0.716900,2.726857,-8.738701,4.304292,5.150173,7.088707,-6.216644,7.001378,9.205685,7.607305,7.988201,-0.246743,-2.872853,-5.504231,-9.488921,-4.526931,6.035211,2.044623,-5.979731,0.929414,-7.884524,8.435851,4.568756,-0.291138,-7.569191,-6.102932,2.253611,6.276339,1.631020,-5.841895,-6.538963,-8.870287,-3.447197,1.126723,-7.398770,7.028586,-1.451094,0.537994,0.495096,-4.761347,-7.316441,9.079236,5.092157,5.606615,8.338412,-9.374334,-3.668001,5.791586,-2.677316,-4.509751,2.868932,9.030755,-2.368686,-3.246156,-5.894551,-5.075321,7.076419,1.960564,-9.727164,5.763628,-4.903739,-0.025570,-6.262229,9.739276,-5.757924,2.243010,2.978498,4.625238,-7.498523,-1.386923,-0.361803,3.997446,-5.451990,-7.293587,6.578866,-4.304208,-2.069016,0.001372,5.205503,4.421991,-4.079282,9.050872,-0.687451,0.459256,-9.972755,5.445425,-2.280975,-5.081728,3.101440,-6.894188,-3.392932,-2.020287],[9.260372,1.697448,6.083537,-5.577205,-9.746305,7.259016,0.558830,7.804724,-5.842447,-6.968177,4.714200,-3.243867,-4.052454,6.726465,1.609159,7.085096,8.912485,9.114681,3.081468,-5.397463,-8.517947,-4.439648,4.694844,5.324714,8.081028,-5.705092,5.375470,3.110832,8.785875,-3.619168,0.398566,8.974789,0.800522,0.873119,8.596285,-5.586694,1.016915,6.157880,-8.274119,0.486990,-3.582444,-1.191324,-3.346823,0.335993,-6.222101,-5.962774,2.437894,2.856331,8.694116,-2.598594,-3.255293,-1.745323,5.084122,-7.463952,-9.747243,3.154631,-9.617959,-9.699745,-4.598996,-3.022734,-2.632012,-5.494849,3.408522,-0.109711,-4.755357,6.534959,0.916422,-6.834470,4.982639,-2.508877,-4.934602,-4.812490,5.188870,1.295002,1.275593,-0.975515,6.256309,1.642439,-5.699974,1.359271,-7.233200,-9.095374,-4.796837,3.681964,7.821091,8.736202,4.287488,-9.937961,8.902431,-5.338666,-0.727457,-5.788196,6.632585,-7.482257,1.678631,-9.775313,-2.623710,7.256664,-7.058409,-8.542275,-1.342039,7.637265,4.694975,-8.629093,-7.724777]], dtype = "float64")#candidate|7059|(8, 105)|const|float64
bop_7060 = relay.less(const_7044.astype('bool'), const_7059.astype('bool')) # shape=(8, 105)
func_2912_call = mod.get_global_var('func_2912')
func_2915_call = mutated_mod.get_global_var('func_2915')
var_7070 = relay.var("var_7070", dtype = "float32", shape = (1024,))#candidate|7070|(1024,)|var|float32
call_7069 = relay.TupleGetItem(func_2912_call(relay.reshape(var_7070.astype('float32'), [16, 16, 4])), 0)
call_7071 = relay.TupleGetItem(func_2915_call(relay.reshape(var_7070.astype('float32'), [16, 16, 4])), 0)
bop_7072 = relay.bitwise_or(call_7069.astype('int64'), relay.reshape(var_7070.astype('int64'), relay.shape_of(call_7069))) # shape=(16, 16, 4)
bop_7075 = relay.bitwise_or(call_7071.astype('int64'), relay.reshape(var_7070.astype('int64'), relay.shape_of(call_7071))) # shape=(16, 16, 4)
output = relay.Tuple([call_7020,call_7043,var_7045,bop_7060,bop_7072,])
output2 = relay.Tuple([call_7021,call_7046,var_7045,bop_7060,bop_7075,])
func_7079 = relay.Function([var_7045,var_7070,], output)
mod['func_7079'] = func_7079
mod = relay.transform.InferType()(mod)
mutated_mod['func_7079'] = func_7079
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7079_call = mutated_mod.get_global_var('func_7079')
var_7081 = relay.var("var_7081", dtype = "int8", shape = (182, 2))#candidate|7081|(182, 2)|var|int8
var_7082 = relay.var("var_7082", dtype = "float32", shape = (1024,))#candidate|7082|(1024,)|var|float32
call_7080 = func_7079_call(var_7081,var_7082,)
output = call_7080
func_7083 = relay.Function([var_7081,var_7082,], output)
mutated_mod['func_7083'] = func_7083
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5116_call = mod.get_global_var('func_5116')
func_5118_call = mutated_mod.get_global_var('func_5118')
call_7090 = relay.TupleGetItem(func_5116_call(), 2)
call_7091 = relay.TupleGetItem(func_5118_call(), 2)
uop_7147 = relay.sigmoid(call_7090.astype('float64')) # shape=(16, 1, 4)
uop_7149 = relay.sigmoid(call_7091.astype('float64')) # shape=(16, 1, 4)
var_7162 = relay.var("var_7162", dtype = "float64", shape = (16, 14, 4))#candidate|7162|(16, 14, 4)|var|float64
bop_7163 = relay.add(uop_7147.astype('uint64'), var_7162.astype('uint64')) # shape=(16, 14, 4)
bop_7166 = relay.add(uop_7149.astype('uint64'), var_7162.astype('uint64')) # shape=(16, 14, 4)
func_6416_call = mod.get_global_var('func_6416')
func_6417_call = mutated_mod.get_global_var('func_6417')
call_7175 = relay.TupleGetItem(func_6416_call(), 0)
call_7176 = relay.TupleGetItem(func_6417_call(), 0)
bop_7179 = relay.bitwise_and(bop_7163.astype('int16'), call_7090.astype('int16')) # shape=(16, 14, 4)
bop_7182 = relay.bitwise_and(bop_7166.astype('int16'), call_7091.astype('int16')) # shape=(16, 14, 4)
uop_7184 = relay.exp(bop_7179.astype('float32')) # shape=(16, 14, 4)
uop_7186 = relay.exp(bop_7182.astype('float32')) # shape=(16, 14, 4)
func_2840_call = mod.get_global_var('func_2840')
func_2842_call = mutated_mod.get_global_var('func_2842')
const_7189 = relay.const([[9,-1,6,-8,6,10,-7,-8,3,-5,-10,-7,8,8,7,4,-1,7,-6,2,-2,4,1,-6,-5,1,1,6,9,5,-1,-6,-4,2,9,-4,6,8,-1,-2,-9,-6,1,4,-3,10,6,6,8,-1,-2,9,4,7,-4,-4,10,-7,-1,2,8,7,7,-3,3,-5,-1,-7,2,2,1,-10,5,3,-8,9,-9,9,2,-5,8,-4,-4,5,2,-3,5,-5,3,-6,7,7,4,5,8,2,2,6,-6,-4,-8,3,-2,-4,10,-8,-7,-4,10,6,-1,-3,-4,-9,-10,9,9,3,-2,-8,9,9,10,-9,-3,8,3,7,10,8,-6,-10,-10,-6,-10,-5,2,-6,-7,3,-2,-6,-4,-4,8,6,10,-8,-9,-3,1,-1,-1,-7,4,10,3,-10,-8,1,6,-9,3,9,4,-2,-9,9,-2,8,-6,-9,-4,-4,-3,10,2,8,-9,-7,8,-7,4,6,-10,-1,3,-3,-9,1,4,3,-3,1,-5,-2,-10,9,4,-2,-10,-3,3,1,-5,-5,-6,-2,7,-10,4,7,-4,9,-2,4,-4,-4,-3,8,-1,-6,9,-7,-3,-3,2,2,4,4,2,7,-5,2,8,-5,-3,8,-2,10,-4,4,-1,-10,10,1,9,8,1,-1,10,-9]], dtype = "uint64")#candidate|7189|(1, 252)|const|uint64
call_7188 = relay.TupleGetItem(func_2840_call(relay.reshape(const_7189.astype('uint64'), [252,])), 3)
call_7190 = relay.TupleGetItem(func_2842_call(relay.reshape(const_7189.astype('uint64'), [252,])), 3)
bop_7205 = relay.minimum(bop_7163.astype('uint8'), relay.reshape(bop_7179.astype('uint8'), relay.shape_of(bop_7163))) # shape=(16, 14, 4)
bop_7208 = relay.minimum(bop_7166.astype('uint8'), relay.reshape(bop_7182.astype('uint8'), relay.shape_of(bop_7166))) # shape=(16, 14, 4)
func_5058_call = mod.get_global_var('func_5058')
func_5059_call = mutated_mod.get_global_var('func_5059')
call_7210 = relay.TupleGetItem(func_5058_call(), 0)
call_7211 = relay.TupleGetItem(func_5059_call(), 0)
uop_7213 = relay.tan(bop_7205.astype('float64')) # shape=(16, 14, 4)
uop_7215 = relay.tan(bop_7208.astype('float64')) # shape=(16, 14, 4)
output = relay.Tuple([call_7175,uop_7184,call_7188,const_7189,call_7210,uop_7213,])
output2 = relay.Tuple([call_7176,uop_7186,call_7190,const_7189,call_7211,uop_7215,])
func_7224 = relay.Function([var_7162,], output)
mod['func_7224'] = func_7224
mod = relay.transform.InferType()(mod)
var_7225 = relay.var("var_7225", dtype = "float64", shape = (16, 14, 4))#candidate|7225|(16, 14, 4)|var|float64
output = func_7224(var_7225)
func_7226 = relay.Function([var_7225], output)
mutated_mod['func_7226'] = func_7226
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1837_call = mod.get_global_var('func_1837')
func_1839_call = mutated_mod.get_global_var('func_1839')
call_7228 = func_1837_call()
call_7229 = func_1837_call()
var_7247 = relay.var("var_7247", dtype = "float32", shape = (16, 12, 4))#candidate|7247|(16, 12, 4)|var|float32
bop_7248 = relay.power(call_7228.astype('float64'), var_7247.astype('float64')) # shape=(16, 12, 4)
bop_7251 = relay.power(call_7229.astype('float64'), var_7247.astype('float64')) # shape=(16, 12, 4)
func_5533_call = mod.get_global_var('func_5533')
func_5539_call = mutated_mod.get_global_var('func_5539')
const_7278 = relay.const([-8.084440,6.383981,-5.320692,7.196342,-7.258343,6.987155,4.093374,-9.288081,4.642519,0.334474,2.401387,2.839876,-5.041593,-5.426943,3.564116,-8.273476,2.494523,5.753230,9.442611,-0.994579,3.812517,2.392609,7.440408,5.217148,-1.680295,-2.811417,-3.406794,-9.814968,-5.976738,-8.579190,-3.203244,7.776626,2.574772,5.153809,-9.874059,-5.525778,-0.674080,-7.292176,8.354838,-7.496338,9.543789,8.067950,-9.721945,-2.904623,-3.463665,7.425580,2.021101,8.087825,7.961469,0.871355,-0.128713,2.011948,2.672632,-5.126095,4.644479,-5.953969,9.885485,4.145195,-4.872356,1.981057,-1.197443,0.423159,8.986614,-8.088059,2.814028,-0.418668,-7.227761,-4.699427,-0.027708,-1.692155,-3.979594,-6.307288,5.825273,9.440715,4.571048,-2.168278,9.767144,-4.522928,-9.807123,5.048291,-5.264020,5.528878,6.100654,9.476355,1.000229,-6.752813,-5.846046,9.858489,-6.141969,6.495307,3.362150,9.565345,8.754074,-0.180132,3.334308,-6.530159,7.759515,-0.317344,7.186395,-3.756996,5.463127,-1.575172,8.468038,1.020319,5.493397,-3.028653,9.482330,5.253733,8.407431,-7.502747,-2.874827,-9.073493,9.360854,-4.165967,-6.930682,3.313686,0.157279,-7.438848,2.506373,-9.980787,-3.920152,-0.197999,7.208357,9.734820,7.349927,1.946320,-6.072948,6.966153,-2.740908,-2.896601,9.802452,-6.758575,-9.903129,2.516484,2.791249,-4.340169,-8.002662,1.953406,-2.217910,-6.299673,-4.817008,6.256820,-7.216071,-9.521295,9.169385,8.002844,-7.995970,0.011363,-3.325478,6.967817,7.574493,-0.407495,-2.133546,0.342950,-1.082317,-3.116656,3.684701,8.616101,-0.251438,-7.573314,-7.492564,-5.037748,4.154661,3.428004,8.203587,5.445793,-3.930040,-8.496949,5.570613,-0.917729,-6.446758,6.436651,-4.457034,0.053980,-5.357367,-0.835593,1.106640,-3.597192,7.270162,9.706776,-0.112865,5.446460,-2.822971,2.377453,9.068017,2.333125,-0.420740,2.109292,7.668695,2.828117,-4.760094,-7.481128,1.381458,-4.076466,6.911631,5.131060,5.302705,-4.844519,-9.057597,2.259835,2.382917,3.322994,5.818782,3.022653,6.289233,7.302071,-6.308886,-7.975623,-7.535416,-6.909570,-5.729678,6.170147,-2.674524,3.602421,9.370141,-7.080147,3.338412,-9.183236,-6.411324,4.539059,-3.901575,8.298601,-0.635455,-2.289754,8.313480,-5.426770,-2.737614,3.643469,-6.362265,-2.965105,3.199920,-2.900004,-7.718650,-2.201487,-9.956095,8.613702,-8.261978,-8.866139,-2.616817,0.371052,5.176761,6.038968,0.731750,7.464860,4.291769,5.100688,-7.087612,9.231505,-0.828449,-1.958541,5.954421,2.350632,-7.837706,-1.770059,0.036591,-8.927218,-6.588160,-9.487072,-4.313754,5.893445,9.992246,2.939631,-5.266463,1.222603,-1.020593,-9.860391,7.972370,5.900512,8.397034,-7.330115,5.066093,9.503268,-4.127446,0.248831,8.806362,-0.734256,3.783139,6.382284,-8.123504,-2.102805,-3.779299,-6.810115,-2.850084,0.703616,6.509785,-3.356781,9.342901,-3.445345,-2.836988,-9.096691,-9.795275,-2.029643,-8.689339,-0.514052,-3.002270,9.438717,3.163344,-4.551737,5.267323,3.690018,4.953830,2.090521,2.969728,-8.782478,6.416720,-1.060817,7.338611,8.686037,-3.140207,-2.989955,-1.864779,6.998301,9.001673,-5.001804,8.579241,-2.676356,7.953229,4.502193,4.335766,-7.044209,4.205536,7.571974,-1.517801,-1.749033,-5.332450,6.074943,7.130438,-5.371401,7.005982,6.538075,-3.146360,6.056095,-0.707308,-0.539957,8.952457,-2.749901,6.308761,6.131577,1.837886,-4.477692,8.764871,-0.283080,-3.032133,5.904972,8.493886,4.870297,-8.409484,-9.809505,4.409953,9.116963,9.140975,1.436983,7.198024,-4.008373,5.543596,-9.308721,5.598375,3.488182,8.099783,4.600167,6.718140,-3.563599,2.863615,-0.462809,8.401804,9.132721,-1.895569,-6.199902,-8.905175,-3.604025,1.527142,-4.501446,1.438780,0.715464,-2.818748,-7.329077,2.220470,-4.429315,6.397486,0.906841,-4.792149,4.396505,-5.614026,-5.149187,4.360226,-9.390208,7.424098,3.426224,-4.608611,2.913950,0.502855,-6.306783,-2.646227,3.116131,-2.400295,-3.222388,-5.242466,2.472298,4.315569,8.159553,-6.850329,-3.385661,-9.207250,-2.287337,-9.500139,4.926833,1.121488,-8.604375,-9.507136,8.144104,-8.809906,2.330466,-5.028514,1.273703,-7.241064,-6.724725,-1.496187,-9.413125,-7.934053,2.169236,-9.499548,-0.818110,4.236574,1.081599,-9.487965,-3.735319,1.167400,9.778484,-8.154408,0.451118,0.277109,1.917119,-1.408994,-0.618349,-4.473421,4.572955,2.523736,1.249329,-1.302746,-1.856796,5.586912,-9.012994,3.869406,-4.290266,-8.766122,-0.731432,4.696675,-0.328298,-9.307777,-8.455628,-4.176054,5.974899,0.548159,-1.937134,-0.904843,8.989609,2.246482,-1.650922,2.736057,-8.889056,-2.367436,-3.341293,-7.000896,-3.471794,5.054673,-4.836357,-8.890787,5.795518,-1.060976,-6.187383,3.041197,-7.840776,0.076053,7.394291,-3.979523,-9.833922,-1.755948,-5.022644,2.494629,9.126828,-4.456667,7.658569,-6.235621,-6.191125,-9.912316,4.057144,-5.903345,5.219222,-1.385755,5.064804,-3.645704,6.336137,-9.108418,-0.522921,-0.595319,-4.552538,9.527485,-4.398570,2.139940,-5.734777,2.893408,5.086772,0.483766,7.790606,9.754538,-2.072333,-4.861573,-3.335175,-6.690211,5.081394,8.184661,9.234131,7.950987,-7.880809,-7.553022,-3.602341,-3.306544,-4.447316,-4.436737,9.464327,-3.320806,-7.338796,0.138153,2.705312,3.294672,3.762013,-4.419925,2.792856,-7.629954,-3.663771,-7.521402,-6.555930,-3.600995,-3.093759,-5.427994,-1.777285,-8.894772,7.750244,-6.052010,2.999804,6.921360,-3.414527,2.158349,3.569419,5.008967,-2.193146,4.680502,-6.901543,2.775074,-8.373692,-7.856521,-8.975221,6.953720,-8.814501,-8.859256,6.038201,-7.088798,-7.908472,7.317086,7.597009,1.713250,-3.911496,-5.525216,9.615610,-4.911532,3.368325,-5.444815,6.001225,-1.450953,6.997721,5.445812,-9.209100,-5.554436,7.108038,5.915489,-8.835728,-5.943680,3.309108,2.884529,3.822064,-5.772924,-1.106984,-4.818754,1.538717,-2.053025,-9.694511,7.175930,4.782066,1.216992,-5.031849,-2.656804,5.149335,2.072967,8.881445,8.712650,-8.712568,-3.375312,9.321090,-6.722074,3.716540,9.080826,-2.263931,-9.104054,7.044732,-2.325921,-0.494785,-9.669294,-6.058149,-5.495176,3.881837,-6.973825,-5.847097,-2.610526,8.368568,-2.289080,8.173488,-4.731278,-1.253560,-6.405927,-7.344270,4.342252,9.029161,0.134589,-8.734835,3.280514,3.088277,0.835524,-3.928742,6.293058,2.259763,-1.159128,-4.675070,-1.814169,-2.276329,-9.666363,-3.563375,8.240832,8.945041,1.928917,5.311488,4.603822,-6.078233,-6.766439,1.389488,-8.902076,7.729828,8.273814,-0.347788,-6.519927,-9.126124,8.493903,0.973762,-8.716297,1.072026,-9.185708,4.479873,-5.162458,-9.261950,-6.263514,-3.682902,-3.520097,-9.634224,2.461089,-9.551439,4.565500,-4.126321,0.936645,4.258333,6.268934,6.284047,5.719135,5.730972,-6.947983,-1.093433,2.986726,6.387304,-0.847509,-8.455683,-1.208201,-8.206149,6.480250,9.180124,-0.319362,5.750948,0.651521,3.289459,4.779275,-8.332394,-0.310209,-3.008107,-5.917819,-0.603205,7.690611,-5.809562,3.937482,6.248110,-8.000705,7.166878,-1.526460,-0.465124,4.271275,-7.950798,-6.954052,-3.080028,-0.393166,1.205136,-3.100146,8.088372,-3.126518,-2.430888,-5.976637,-5.526488,-7.225070,0.663815,-6.691490,-1.648016,3.904365,-7.430122,-7.669543,5.911207,-3.154462,3.609738,-4.670419,-8.276486,-9.165226,-3.688812,1.565544,6.741350,-7.728189,-7.551695,-2.359156,-4.179960,2.143846,-4.795222,3.995525,-8.361530,-5.579457,-0.006824,6.821705,8.660628,7.961030,-0.904525,-0.692463,-1.298854,0.942925,-7.803365,-9.843256,1.707721,1.337269,5.330220,6.292000,-6.190923,8.453740,-8.865419,-2.687524,-2.173514,7.626205,-9.317470,8.418690,-6.789331,4.486408,-2.395411,7.534846,2.376812,1.209294,6.729070,0.878955,-7.431557,2.579548,5.779155], dtype = "float64")#candidate|7278|(770,)|const|float64
const_7279 = relay.const([-3.598571,1.689489,-9.292394,3.826867,-1.478772,5.613988,0.503838,-2.201296,1.854290,6.806930,-7.620197,0.967939,-1.737290,4.969778,0.793227,9.711298,3.211859,1.770445,6.888486,5.244783,9.177451,3.106142,7.465875,-4.960310,7.452282,7.639113,-3.509833,8.396840,-5.903701,-7.923264,2.888725,2.729587,-1.571583,-0.543039,6.771254,1.670928,-0.584790,-4.838012,-2.195115,5.393011,-7.095121,9.421379,8.242777,0.119811,-2.211153,5.330716,9.592215,-4.903891,7.200148,5.892881,-1.828697,-5.510434,6.778897,2.796569,2.584073,-7.942077,0.438880,-3.303219,-8.688149,-4.993400,2.466576,-6.798285,7.869499,1.920960,-9.519262,7.295698,5.839846,4.019824,-1.094829,5.874155,8.702481,6.303993,3.406638,2.797772,9.142455,-1.388582,-2.421417,3.824601,-9.922150,-5.840063,9.893344,6.368694,4.870134,-9.218949,7.680051,8.964623,3.932014,3.286687,-8.510139,-2.048554,5.108789,9.675542,-7.432829,8.200863,5.149290,4.624764,9.041448,0.788228,8.609090,9.864950,9.774032,-6.766998,8.771664,-0.719100,-0.673383,-8.915789,7.267877,8.088665,-4.624001,-3.369399,3.099271,4.398777,7.878467,7.504188,-8.260630,0.686322,-1.860984,-8.311437,-3.186605,8.396377,5.109447,-7.632460,9.655949,-0.761384,-6.413933,3.493668,-7.174012,-0.137053,-1.063067,2.496721,-0.193378,-4.471159,-0.359362,1.963399,5.655809,0.789681,-6.437315,-6.080104,-2.481017,2.625249,3.537451,-0.682634,7.113259,3.955963,-0.420435,-6.187710,-9.443426,0.286314,1.599210,6.198244,-4.238479,-8.359075,-3.741978,-7.588186,9.798250,8.609363,8.551289,4.547785,-2.460163,-3.486681,6.987873,-7.733816,3.854366,-0.129349,-1.274729,-4.158747,-0.536408,3.879727,0.234252,0.704236,6.878248,7.488243,-9.930764,-9.057846,-7.520093,-4.665793,3.324899,6.172002,-7.449677,-2.568263,3.447535,9.484012,9.503153,-7.222631,4.338274,8.268428,-5.302984,5.454824,0.070391,3.143844,-1.087296,8.938272,-1.987208,-3.036002,-9.033599,5.610137,2.115170,-0.834288,7.772360,7.090636,-8.886593,-2.948882,-0.166358,-6.963280,9.817336,9.241912,3.701651,3.192640,4.390485,-3.628169,-2.320594,9.479184,1.123844,-9.061819,-2.600400,8.192460,6.889754,0.751707,6.634027,7.335957,3.754472,-0.298282,-2.859496,9.469110,1.267558,3.485276,3.948443,-8.072833,-6.131201,-8.099854,-1.556634,-5.119768,7.045036,7.663586,3.532023,9.725428,4.963434,8.972983,7.706204,9.045067,-6.905172,6.375264,3.996363,-1.718286,-8.974902,-6.164683,-3.995118,-7.980996,-1.415792,-7.183977,8.723226,4.230099,8.709533,-3.330931,1.102525,-5.231091], dtype = "float32")#candidate|7279|(256,)|const|float32
var_7280 = relay.var("var_7280", dtype = "float32", shape = (512,))#candidate|7280|(512,)|var|float32
call_7277 = relay.TupleGetItem(func_5533_call(relay.reshape(const_7278.astype('float64'), [10, 7, 11]), relay.reshape(const_7278.astype('float64'), [10, 7, 11]), relay.reshape(const_7279.astype('float32'), [256,]), relay.reshape(var_7280.astype('float32'), [512,]), ), 6)
call_7281 = relay.TupleGetItem(func_5539_call(relay.reshape(const_7278.astype('float64'), [10, 7, 11]), relay.reshape(const_7278.astype('float64'), [10, 7, 11]), relay.reshape(const_7279.astype('float32'), [256,]), relay.reshape(var_7280.astype('float32'), [512,]), ), 6)
output = relay.Tuple([bop_7248,call_7277,const_7278,const_7279,var_7280,])
output2 = relay.Tuple([bop_7251,call_7281,const_7278,const_7279,var_7280,])
func_7290 = relay.Function([var_7247,var_7280,], output)
mod['func_7290'] = func_7290
mod = relay.transform.InferType()(mod)
mutated_mod['func_7290'] = func_7290
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7290_call = mutated_mod.get_global_var('func_7290')
var_7292 = relay.var("var_7292", dtype = "float32", shape = (16, 12, 4))#candidate|7292|(16, 12, 4)|var|float32
var_7293 = relay.var("var_7293", dtype = "float32", shape = (512,))#candidate|7293|(512,)|var|float32
call_7291 = func_7290_call(var_7292,var_7293,)
output = call_7291
func_7294 = relay.Function([var_7292,var_7293,], output)
mutated_mod['func_7294'] = func_7294
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7315 = relay.var("var_7315", dtype = "float32", shape = (8, 8, 3))#candidate|7315|(8, 8, 3)|var|float32
uop_7316 = relay.rsqrt(var_7315.astype('float32')) # shape=(8, 8, 3)
output = uop_7316
output2 = uop_7316
F = relay.Function([var_7315,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_7315,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_32 = relay.var("var_32", dtype = "uint8", shape = (8, 9, 5))#candidate|32|(8, 9, 5)|var|uint8
var_33 = relay.var("var_33", dtype = "uint8", shape = (8, 9, 5))#candidate|33|(8, 9, 5)|var|uint8
bop_34 = relay.multiply(var_32.astype('uint8'), relay.reshape(var_33.astype('uint8'), relay.shape_of(var_32))) # shape=(8, 9, 5)
output = bop_34
output2 = bop_34
func_48 = relay.Function([var_32,var_33,], output)
mod['func_48'] = func_48
mod = relay.transform.InferType()(mod)
var_49 = relay.var("var_49", dtype = "uint8", shape = (8, 9, 5))#candidate|49|(8, 9, 5)|var|uint8
var_50 = relay.var("var_50", dtype = "uint8", shape = (8, 9, 5))#candidate|50|(8, 9, 5)|var|uint8
output = func_48(var_49,var_50,)
func_51 = relay.Function([var_49,var_50,], output)
mutated_mod['func_51'] = func_51
mutated_mod = relay.transform.InferType()(mutated_mod)
var_151 = relay.var("var_151", dtype = "float32", shape = (15, 10, 12))#candidate|151|(15, 10, 12)|var|float32
uop_152 = relay.rsqrt(var_151.astype('float32')) # shape=(15, 10, 12)
uop_157 = relay.atanh(uop_152.astype('float64')) # shape=(15, 10, 12)
bop_159 = relay.bitwise_xor(uop_152.astype('uint8'), relay.reshape(uop_157.astype('uint8'), relay.shape_of(uop_152))) # shape=(15, 10, 12)
bop_164 = relay.maximum(uop_157.astype('uint16'), relay.reshape(bop_159.astype('uint16'), relay.shape_of(uop_157))) # shape=(15, 10, 12)
uop_167 = relay.acosh(uop_152.astype('float32')) # shape=(15, 10, 12)
bop_173 = relay.add(var_151.astype('int64'), relay.reshape(bop_159.astype('int64'), relay.shape_of(var_151))) # shape=(15, 10, 12)
output = relay.Tuple([bop_164,uop_167,bop_173,])
output2 = relay.Tuple([bop_164,uop_167,bop_173,])
func_176 = relay.Function([var_151,], output)
mod['func_176'] = func_176
mod = relay.transform.InferType()(mod)
mutated_mod['func_176'] = func_176
mutated_mod = relay.transform.InferType()(mutated_mod)
var_177 = relay.var("var_177", dtype = "float32", shape = (15, 10, 12))#candidate|177|(15, 10, 12)|var|float32
func_176_call = mutated_mod.get_global_var('func_176')
call_178 = func_176_call(var_177)
output = call_178
func_179 = relay.Function([var_177], output)
mutated_mod['func_179'] = func_179
mutated_mod = relay.transform.InferType()(mutated_mod)
var_305 = relay.var("var_305", dtype = "int64", shape = (9, 8, 14))#candidate|305|(9, 8, 14)|var|int64
const_306 = relay.const([[[6,7,-8,-4,-5,1,7,5,8,9,-3,-2,10,8],[5,-2,-9,-10,-3,-9,-5,4,2,8,-3,10,7,10],[6,-9,-5,1,1,-2,6,-3,-4,5,-10,-5,-1,-9],[-9,-4,-9,5,6,-10,9,-1,3,-8,-3,-2,5,4],[-4,-4,3,9,5,-10,2,-7,-1,-8,2,-9,8,-8],[1,-2,-6,-10,-6,-3,-5,-1,-2,-7,-7,-7,-2,2],[10,-4,-3,-7,-5,-7,8,-2,-4,9,1,9,3,-5],[-4,5,-8,-6,7,9,2,3,-8,2,-7,-8,-1,6]],[[-4,-10,-1,-2,-6,-1,2,7,6,4,6,-5,-1,3],[1,5,-2,4,2,4,4,2,-5,-2,10,4,1,1],[4,3,3,9,-5,-9,-10,-4,6,2,7,-2,-9,-5],[8,4,7,-5,7,6,-10,-8,7,5,-8,-7,-3,1],[7,-4,-1,-9,8,-1,-2,5,-3,2,-5,-5,6,-7],[3,2,-6,-7,7,-9,1,-9,8,-5,-9,3,4,6],[-10,-10,10,4,-2,-5,8,5,-4,4,-8,-5,4,10],[5,-9,-8,-9,2,-4,-6,-5,-3,-8,3,-10,-9,-10]],[[2,2,-6,6,9,-2,-1,-7,-5,3,-3,4,-3,8],[9,6,8,3,-10,-9,4,-1,-6,-2,-1,9,-8,-1],[-9,-2,9,-4,-7,-2,-5,7,2,6,6,-1,5,-2],[-4,3,-4,-4,4,-9,-4,-9,3,10,-1,1,6,-8],[-3,3,5,-3,-2,1,4,6,-2,8,-8,1,5,-1],[-6,-2,-1,-6,-3,-7,-5,-1,-10,-6,-2,10,-3,3],[4,10,5,7,-9,4,4,-6,-10,6,4,6,6,-9],[-8,-6,-6,-2,-8,-7,-4,6,-2,6,1,-6,4,2]],[[2,9,-4,2,-1,3,5,-4,-2,-8,-7,8,6,3],[-8,2,-6,9,5,-10,-8,-6,4,4,4,-8,-6,-7],[10,6,4,-7,-10,8,8,4,10,10,1,10,6,6],[-6,-6,-2,-4,10,-5,-8,8,1,-3,-1,7,-7,-7],[4,-6,-6,-7,-7,-3,4,9,-10,-9,6,-6,-7,9],[7,-8,9,1,10,-4,-1,-6,-4,9,2,9,-2,-7],[5,2,3,-4,7,8,5,4,8,5,5,-7,1,-6],[-10,-3,-8,8,-6,4,2,-1,-3,-5,5,2,-3,8]],[[7,-9,5,-2,7,-4,6,8,-1,5,2,-6,9,8],[9,5,7,2,8,-9,-8,9,3,10,-4,10,4,-2],[6,-4,-5,-2,5,-8,-2,7,10,-1,-1,8,5,-1],[6,1,-7,-8,4,-7,-5,-9,10,4,1,-4,6,8],[-2,8,6,9,-4,6,-6,-6,-5,-8,10,8,5,6],[6,3,-4,-7,2,-6,4,4,-4,-2,5,8,10,-9],[-10,8,-8,5,2,6,1,-10,-5,-6,7,2,8,1],[7,-6,-4,2,-5,-8,10,-3,-8,-7,-9,6,1,-10]],[[-7,8,1,-1,-8,1,-2,10,-4,5,8,-9,-5,5],[-10,-6,7,2,-7,5,8,9,-6,3,2,4,-2,-6],[-5,-4,5,-3,-3,10,-10,7,2,7,5,-8,8,6],[2,-8,5,5,1,2,-4,5,-9,9,8,-9,-6,9],[-8,5,-9,10,-4,-3,2,-8,-2,-10,5,4,7,-4],[2,-8,-10,-2,-7,-2,7,5,-3,-4,8,-7,5,-4],[-7,-3,6,9,6,7,-4,-4,6,-10,4,5,-8,-5],[-4,-3,-1,-9,-10,1,10,9,6,-4,-5,-3,-8,3]],[[1,-1,8,7,2,4,-2,10,-4,-5,2,-5,4,6],[-6,-10,-8,5,6,-5,8,2,6,-4,-9,-1,10,8],[3,8,6,8,10,9,-5,-4,-4,3,-6,-8,-5,8],[4,1,-3,-7,-8,2,-10,2,5,-8,-2,-9,-9,-5],[-6,10,-10,-7,10,9,-1,-6,2,-6,-5,6,-7,-8],[-9,-9,-6,7,1,-9,10,-1,-1,-3,8,-9,-4,-2],[7,-7,3,-5,6,6,-10,10,-7,2,-1,-10,-4,2],[4,-9,4,-1,-4,5,-10,9,10,-9,-2,2,6,10]],[[2,10,-6,1,6,4,-10,-8,-3,-10,8,-7,-2,4],[4,-8,6,4,-8,1,-7,-2,7,7,8,-3,7,-7],[-1,-7,-4,1,4,3,2,-5,-8,-8,-8,-5,2,-3],[7,10,-8,5,3,-2,-3,10,-9,-4,2,4,-7,-6],[-6,-10,8,3,6,-8,3,-7,-6,-2,1,-4,8,-3],[-4,5,-8,4,-4,4,2,10,-3,-2,3,-6,9,-7],[5,-3,-1,-2,3,6,1,-7,1,10,6,5,-5,-4],[-10,-3,-3,7,-3,2,4,-3,-8,-10,8,5,4,-3]],[[-2,5,-10,-10,-3,6,5,-1,-5,-6,5,-4,-7,-8],[10,10,-10,5,-3,4,1,1,-9,-6,7,9,-7,-6],[1,-7,-7,2,-4,-1,9,3,7,-7,8,-3,7,-8],[3,1,10,-5,-7,-6,2,-7,5,3,4,8,-7,-7],[-1,9,1,-9,9,9,9,-6,5,3,3,-1,10,-7],[8,-1,10,-4,3,-3,-7,10,-2,-10,10,-6,-1,-10],[-6,-10,-2,5,3,3,5,10,-10,2,7,-8,5,-9],[-3,-9,-5,-5,-2,-9,4,-2,-9,2,1,1,8,-4]]], dtype = "int64")#candidate|306|(9, 8, 14)|const|int64
bop_307 = relay.maximum(var_305.astype('int64'), relay.reshape(const_306.astype('int64'), relay.shape_of(var_305))) # shape=(9, 8, 14)
func_48_call = mod.get_global_var('func_48')
func_51_call = mutated_mod.get_global_var('func_51')
var_312 = relay.var("var_312", dtype = "uint8", shape = (360,))#candidate|312|(360,)|var|uint8
call_311 = func_48_call(relay.reshape(var_312.astype('uint8'), [8, 9, 5]), relay.reshape(var_312.astype('uint8'), [8, 9, 5]), )
call_313 = func_48_call(relay.reshape(var_312.astype('uint8'), [8, 9, 5]), relay.reshape(var_312.astype('uint8'), [8, 9, 5]), )
output = relay.Tuple([bop_307,call_311,var_312,])
output2 = relay.Tuple([bop_307,call_313,var_312,])
func_315 = relay.Function([var_305,var_312,], output)
mod['func_315'] = func_315
mod = relay.transform.InferType()(mod)
var_316 = relay.var("var_316", dtype = "int64", shape = (9, 8, 14))#candidate|316|(9, 8, 14)|var|int64
var_317 = relay.var("var_317", dtype = "uint8", shape = (360,))#candidate|317|(360,)|var|uint8
output = func_315(var_316,var_317,)
func_318 = relay.Function([var_316,var_317,], output)
mutated_mod['func_318'] = func_318
mutated_mod = relay.transform.InferType()(mutated_mod)
var_388 = relay.var("var_388", dtype = "float32", shape = (2, 15, 9))#candidate|388|(2, 15, 9)|var|float32
uop_389 = relay.log2(var_388.astype('float32')) # shape=(2, 15, 9)
func_315_call = mod.get_global_var('func_315')
func_318_call = mutated_mod.get_global_var('func_318')
const_392 = relay.const([[-9,-10,-5,-4],[-6,4,-8,-4],[5,-9,6,6],[10,-1,3,1],[-6,6,-5,8],[9,9,-8,8],[10,4,-5,-8],[-8,-3,4,-1],[-2,2,1,-1],[6,6,10,-1],[3,-8,8,3],[-7,-4,-10,-1],[-6,-2,-7,-5],[-2,6,7,4],[-3,-8,8,-4],[8,6,-5,-2],[4,-5,-8,1],[-3,2,6,-10],[6,-9,-7,-9],[-3,5,-6,8],[-1,-10,-5,-7],[-9,8,4,-4],[4,-5,8,-8],[-3,-10,9,8],[3,9,8,-8],[-6,4,-6,2],[-4,3,-3,3],[-5,4,1,6],[-9,-3,4,5],[10,1,8,6],[-10,-1,3,10],[9,3,-7,5],[7,-4,1,-2],[9,-9,-9,-6],[-5,4,5,7],[10,-3,1,5],[-7,-1,-8,-1],[8,-3,-4,-6],[10,-6,-5,-8],[-3,4,-10,-3],[5,5,-5,-2],[6,-10,4,9],[7,8,10,-9],[-8,8,9,5],[3,1,8,-3],[-9,-5,2,-9],[-3,2,-5,-6],[-3,3,6,-10],[-7,9,4,-10],[-6,6,-10,6],[1,5,-1,1],[9,-8,1,6],[-10,-3,-8,5],[-7,3,-5,-9],[8,-4,-8,5],[-8,-2,2,7],[2,4,3,5],[2,5,6,-4],[9,3,5,-3],[-2,4,-3,-6],[10,-5,1,3],[8,1,-2,-6],[4,-8,-9,4],[8,-3,-8,5],[1,1,2,5],[1,-1,2,-6],[1,5,-5,-9],[-4,3,3,10],[-10,6,-6,-1],[7,-2,1,5],[-9,2,-9,6],[-5,-7,-7,-4],[9,-8,-1,4],[10,8,3,3],[-6,-10,6,-8],[7,1,2,10],[3,8,8,5],[9,9,-7,-6],[7,-7,1,4],[-1,-1,-10,6],[-2,9,-6,8],[-8,-7,-1,-9],[8,3,-1,7],[-4,5,-1,9],[-5,1,-3,-9],[8,-7,9,-9],[-1,-8,9,-6],[-6,-9,2,-8],[6,-10,-10,1],[5,9,5,-2],[-10,1,-8,4],[-8,10,-9,-8],[-10,4,-7,10],[-5,7,6,-8],[-2,6,8,3],[-3,7,-1,-8],[5,-3,-9,6],[3,-3,5,-5],[-4,10,-1,7],[7,-7,-1,1],[9,8,-8,-1],[10,-10,-7,5],[-4,-3,-9,8],[-6,-2,1,1],[-7,5,5,-6],[2,-3,1,-2],[2,-1,-8,5],[-5,9,2,4],[-2,7,-7,-4],[1,9,5,8],[-7,-10,-1,8],[-4,1,-10,-9],[8,-10,1,3],[1,-7,-3,6],[7,4,-3,-3],[1,4,3,-2],[1,5,7,-7],[1,-7,-8,-4],[-10,-2,-3,9],[9,5,-7,2],[-10,2,-6,-6],[-1,-9,5,-6],[6,-8,-3,2],[10,-3,-4,-9],[-1,-10,7,1],[-8,-1,-8,7],[-6,-2,4,2],[-1,5,9,10],[2,-6,7,-1],[2,7,10,3],[-1,-5,-8,10],[-2,-5,-6,3],[-6,-1,8,5],[1,-9,7,6],[-6,-2,-8,4],[-7,2,-3,-5],[4,9,5,2],[-7,6,-5,-2],[3,-5,-6,2],[-5,1,9,-6],[-10,-5,-8,-3],[-9,9,-3,-3],[4,-9,7,6],[-8,-2,2,10],[-3,-9,3,6],[-10,4,-5,-10],[-6,-9,-2,7],[-1,9,-8,-5],[5,2,3,9],[-4,-7,-3,7],[-7,2,-3,-1],[1,8,-10,-8],[7,6,9,-5],[10,1,-10,3],[-7,9,6,-6],[2,6,-7,1],[-4,7,-2,-6],[6,-6,-8,-8],[-3,-6,-8,8],[6,-4,-10,-8],[9,8,8,4],[1,-4,8,-3],[8,-4,10,6],[7,1,-4,10],[4,7,-1,-10],[4,1,-4,4],[4,8,-9,-9],[6,-2,9,-8],[-1,9,-9,-4],[2,4,10,10],[6,-7,6,-1],[-8,-7,-8,-1],[1,1,-10,-4],[2,8,7,-5],[8,10,-10,8],[-8,4,-9,3],[7,-1,-10,-9],[2,4,7,-4],[1,-1,-7,-8],[6,-8,-9,7],[6,-4,3,-7],[-1,6,-10,5],[4,-4,-4,3],[6,-7,2,-4],[-1,5,2,-3],[-2,-10,-9,6],[10,-4,4,-6],[-9,-7,6,1],[10,5,5,6],[9,2,3,-3],[7,9,3,2],[-10,-4,10,6],[-9,-3,-1,6],[5,9,-5,10],[8,-5,-5,-4],[8,1,-5,-10],[-10,-1,-10,-2],[-6,-2,1,-4],[9,9,-10,1],[3,10,1,-2],[-2,1,-3,-8],[3,-9,10,-1],[-7,-7,5,7],[-9,8,4,8],[-7,10,3,-7],[8,9,1,10],[-2,3,2,7],[-6,1,7,7],[-10,1,7,-10],[-6,-2,10,-3],[9,-2,-7,-4],[6,-2,-5,-6],[-8,-8,7,-9],[-8,-9,4,-3],[-9,6,7,-8],[3,7,-1,-5],[-10,-5,3,-1],[4,1,10,-1],[-10,5,-6,10],[5,9,10,8],[-7,8,-4,2],[7,-7,7,7],[6,-5,-7,4],[-2,-9,-7,2],[-7,-3,-7,2],[-8,10,9,-3],[1,9,-10,-9],[6,-5,-4,-4],[-5,-5,-1,6],[-6,-5,6,-1],[-5,-7,3,-9],[6,9,-1,3],[1,-8,-5,-4],[-3,-7,8,-7],[8,7,-2,10],[2,-7,4,7],[-8,-8,1,3],[10,2,7,10],[-5,-9,-5,2],[8,-8,-9,-8],[4,-9,5,-9],[-9,-4,2,4],[-10,6,-1,3],[-10,-4,8,6],[-5,6,-7,8],[8,2,3,-1],[8,8,-6,1],[-2,4,6,-3],[-7,2,6,9],[9,7,-9,4],[-6,9,1,-7],[-6,2,-3,2]], dtype = "int64")#candidate|392|(252, 4)|const|int64
var_393 = relay.var("var_393", dtype = "uint8", shape = (360,))#candidate|393|(360,)|var|uint8
call_391 = relay.TupleGetItem(func_315_call(relay.reshape(const_392.astype('int64'), [9, 8, 14]), relay.reshape(var_393.astype('uint8'), [360,]), ), 1)
call_394 = relay.TupleGetItem(func_318_call(relay.reshape(const_392.astype('int64'), [9, 8, 14]), relay.reshape(var_393.astype('uint8'), [360,]), ), 1)
uop_411 = relay.sqrt(uop_389.astype('float64')) # shape=(2, 15, 9)
func_176_call = mod.get_global_var('func_176')
func_179_call = mutated_mod.get_global_var('func_179')
var_422 = relay.var("var_422", dtype = "float32", shape = (1800,))#candidate|422|(1800,)|var|float32
call_421 = relay.TupleGetItem(func_176_call(relay.reshape(var_422.astype('float32'), [15, 10, 12])), 0)
call_423 = relay.TupleGetItem(func_179_call(relay.reshape(var_422.astype('float32'), [15, 10, 12])), 0)
func_315_call = mod.get_global_var('func_315')
func_318_call = mutated_mod.get_global_var('func_318')
call_433 = relay.TupleGetItem(func_315_call(relay.reshape(const_392.astype('int64'), [9, 8, 14]), relay.reshape(call_391.astype('uint8'), [360,]), ), 1)
call_434 = relay.TupleGetItem(func_318_call(relay.reshape(const_392.astype('int64'), [9, 8, 14]), relay.reshape(call_391.astype('uint8'), [360,]), ), 1)
func_176_call = mod.get_global_var('func_176')
func_179_call = mutated_mod.get_global_var('func_179')
call_439 = relay.TupleGetItem(func_176_call(relay.reshape(call_421.astype('float32'), [15, 10, 12])), 0)
call_440 = relay.TupleGetItem(func_179_call(relay.reshape(call_421.astype('float32'), [15, 10, 12])), 0)
func_315_call = mod.get_global_var('func_315')
func_318_call = mutated_mod.get_global_var('func_318')
call_442 = relay.TupleGetItem(func_315_call(relay.reshape(const_392.astype('int64'), [9, 8, 14]), relay.reshape(var_393.astype('uint8'), [360,]), ), 2)
call_443 = relay.TupleGetItem(func_318_call(relay.reshape(const_392.astype('int64'), [9, 8, 14]), relay.reshape(var_393.astype('uint8'), [360,]), ), 2)
bop_448 = relay.mod(uop_411.astype('float32'), relay.reshape(uop_389.astype('float32'), relay.shape_of(uop_411))) # shape=(2, 15, 9)
uop_476 = relay.acos(uop_411.astype('float64')) # shape=(2, 15, 9)
func_176_call = mod.get_global_var('func_176')
func_179_call = mutated_mod.get_global_var('func_179')
call_482 = relay.TupleGetItem(func_176_call(relay.reshape(call_421.astype('float32'), [15, 10, 12])), 0)
call_483 = relay.TupleGetItem(func_179_call(relay.reshape(call_421.astype('float32'), [15, 10, 12])), 0)
func_315_call = mod.get_global_var('func_315')
func_318_call = mutated_mod.get_global_var('func_318')
call_485 = relay.TupleGetItem(func_315_call(relay.reshape(const_392.astype('int64'), [9, 8, 14]), relay.reshape(call_433.astype('uint8'), [360,]), ), 2)
call_486 = relay.TupleGetItem(func_318_call(relay.reshape(const_392.astype('int64'), [9, 8, 14]), relay.reshape(call_433.astype('uint8'), [360,]), ), 2)
func_315_call = mod.get_global_var('func_315')
func_318_call = mutated_mod.get_global_var('func_318')
call_490 = relay.TupleGetItem(func_315_call(relay.reshape(const_392.astype('int64'), [9, 8, 14]), relay.reshape(call_442.astype('uint8'), [360,]), ), 2)
call_491 = relay.TupleGetItem(func_318_call(relay.reshape(const_392.astype('int64'), [9, 8, 14]), relay.reshape(call_442.astype('uint8'), [360,]), ), 2)
output = relay.Tuple([call_391,const_392,var_393,call_421,var_422,call_433,call_439,call_442,bop_448,uop_476,call_482,call_485,call_490,])
output2 = relay.Tuple([call_394,const_392,var_393,call_423,var_422,call_434,call_440,call_443,bop_448,uop_476,call_483,call_486,call_491,])
func_496 = relay.Function([var_388,var_393,var_422,], output)
mod['func_496'] = func_496
mod = relay.transform.InferType()(mod)
var_497 = relay.var("var_497", dtype = "float32", shape = (2, 15, 9))#candidate|497|(2, 15, 9)|var|float32
var_498 = relay.var("var_498", dtype = "uint8", shape = (360,))#candidate|498|(360,)|var|uint8
var_499 = relay.var("var_499", dtype = "float32", shape = (1800,))#candidate|499|(1800,)|var|float32
output = func_496(var_497,var_498,var_499,)
func_500 = relay.Function([var_497,var_498,var_499,], output)
mutated_mod['func_500'] = func_500
mutated_mod = relay.transform.InferType()(mutated_mod)
const_659 = relay.const(-4, dtype = "int8")#candidate|659|()|const|int8
var_660 = relay.var("var_660", dtype = "int8", shape = (1, 10, 14))#candidate|660|(1, 10, 14)|var|int8
bop_661 = relay.multiply(const_659.astype('int8'), var_660.astype('int8')) # shape=(1, 10, 14)
output = relay.Tuple([bop_661,])
output2 = relay.Tuple([bop_661,])
func_668 = relay.Function([var_660,], output)
mod['func_668'] = func_668
mod = relay.transform.InferType()(mod)
var_669 = relay.var("var_669", dtype = "int8", shape = (1, 10, 14))#candidate|669|(1, 10, 14)|var|int8
output = func_668(var_669)
func_670 = relay.Function([var_669], output)
mutated_mod['func_670'] = func_670
mutated_mod = relay.transform.InferType()(mutated_mod)
var_785 = relay.var("var_785", dtype = "uint32", shape = (9, 4, 1))#candidate|785|(9, 4, 1)|var|uint32
var_786 = relay.var("var_786", dtype = "uint32", shape = (9, 4, 4))#candidate|786|(9, 4, 4)|var|uint32
bop_787 = relay.minimum(var_785.astype('uint32'), var_786.astype('uint32')) # shape=(9, 4, 4)
func_668_call = mod.get_global_var('func_668')
func_670_call = mutated_mod.get_global_var('func_670')
var_793 = relay.var("var_793", dtype = "int8", shape = (140,))#candidate|793|(140,)|var|int8
call_792 = relay.TupleGetItem(func_668_call(relay.reshape(var_793.astype('int8'), [1, 10, 14])), 0)
call_794 = relay.TupleGetItem(func_670_call(relay.reshape(var_793.astype('int8'), [1, 10, 14])), 0)
func_315_call = mod.get_global_var('func_315')
func_318_call = mutated_mod.get_global_var('func_318')
const_802 = relay.const([-10,2,-9,9,-5,-7,-6,3,8,1,-1,8,-10,-1,-3,-3,5,-8,-10,-10,1,-5,-4,4,-10,-8,8,4,4,-2,4,-9,-5,-3,1,-9,-1,-1,5,-9,-10,6,2,-7,7,-3,-7,10,-9,-4,-8,-5,7,6,-3,7,-1,-1,-4,9,-8,-2,3,4,5,-4,-10,2,7,1,2,-1,-10,-5,-1,-6,5,3,-10,-9,6,7,-2,-3,-6,9,2,-10,4,-9,-8,-5,4,10,-6,8,2,-6,-2,-5,5,6,-4,4,-10,3,9,-10,6,7,-8,-4,8,-7,10,1,-4,7,-3,-5,3,2,6,4,-1,5,-4,2,-8,-4,-10,8,-2,-3,-3,10,6,7,-4,-3,-2,6,7,7,8,-8,4,4,8,-1,-8,8,-2,6,-5,-5,-7,-2,1,-4,1,-7,5,-1,3,-5,-4,4,7,4,-9,9,-9,2,10,-7,7,6,-9,6,-10,2,-5,7,-4,-6,-9,-9,-5,6,-9,4,9,10,6,8,9,9,-6,-8,9,-3,8,-7,-7,6,-8,-3,-10,-4,1,6,4,7,-4,-8,8,1,5,7,-1,-9,-5,5,-5,6,1,-7,-7,-4,-9,4,-6,-3,5,3,5,6,-4,7,-9,7,-3,6,-1,1,-3,-9,-1,9,4,-1,-6,1,7,-1,-9,6,-7,3,3,9,-10,4,-1,-5,-7,-6,-3,-4,2,-7,-6,-4,7,2,-3,5,-1,3,2,-9,-6,1,-1,-2,-10,6,3,-10,9,-2,5,4,-6,10,-6,-6,-3,6,2,8,8,-10,6,-3,4,-7,-5,-6,9,1,-4,-10,6,2,-3,-9,-4,1,-9,-7,10,-3,-5,5,5,-7,-5,-6,2,-8,-8,-3,-6,-4,-1,-9,5,7,10,-1,-10,-6,7,5,-9,4,9,-2,4,-1,9,7,1,1,7,-8,2,1,5,-1,-8,6,2,2,5,2,-3,-7,4,8,2,6,2,-5,3,3,-9,-9,-6,1,-4,7,-4,4,4,7,9,-10,-3,8,-1,7,10,2,-7,-9,-6,10,1,-5,-7,-1,-8,-7,-7,8,6,7,3,3,-2,3,-1,7,-9,8,-9,-2,1,-9,-2,6,4,3,-5,-7,1,5,3,3,-8,-7,10,-3,9,-1,1,-1,3,2,2,-4,-9,4,-5,-3,-8,10,-2,-10,5,1,1,10,-6,3,-2,-1,-10,-3,2,5,-10,7,-8,-2,8,-10,5,-4,-4,1,6,7,8,8,-9,9,10,1,3,-4,5,4,5,3,5,-5,7,-6,3,-3,10,2,-8,-1,-4,-5,-8,1,7,3,7,6,2,-6,-7,-7,-3,-1,2,5,7,-7,1,10,-1,1,-3,-1,-10,-7,-10,-5,3,-5,8,-1,9,1,5,7,6,-5,6,3,-4,4,5,8,-7,-5,2,3,-3,3,-6,5,2,-1,5,-6,-4,-5,-2,-9,8,8,-1,3,-5,-1,1,-3,5,3,7,10,-2,2,-10,4,6,-9,-3,10,-1,1,6,-4,7,10,-7,-7,7,-2,2,-4,10,-5,6,-4,-6,-8,8,-3,1,1,2,-6,9,6,8,10,-5,-4,10,-9,-1,-9,1,6,-3,-2,6,6,8,5,-5,-5,-9,1,-6,-6,-7,8,6,2,10,6,1,-1,5,-6,-10,1,9,1,-2,2,1,-1,-3,-8,-6,9,8,8,-6,6,-5,-7,8,-10,4,-4,-2,-2,8,8,-4,-3,6,8,6,-8,-8,5,-3,-10,9,-2,7,-7,-5,8,1,4,1,-9,-5,-7,-4,-10,-9,3,-2,-10,2,3,2,9,-3,3,4,-2,-1,-1,-3,-3,1,2,-3,-4,10,2,-1,9,3,-9,-4,-5,9,-1,9,7,-9,5,3,-7,-9,9,10,-3,10,2,-10,-10,-3,3,4,-3,-1,7,8,-1,4,6,-5,-9,-8,10,9,8,2,5,-3,1,7,-10,-3,-1,-10,-3,3,-2,6,-8,2,7,7,-2,-10,-6,2,-1,6,5,8,-1,-1,-3,-4,2,-9,10,8,-6,-6,5,-8,-6,-8,-10,-9,9,-5,9,-3,5,-7,-8,8,5,-6,-3,-9,-1,-10,-3,-4,-10,-7,8,1,4,10,-7,5,4,4,-8,-8,8,-1,-6,-5,6,9,-4,9,8,-7,10,7,-7,-1,4,5,-7,4,1,-4,-3,-1,3,4,-1,-6,-7,5,4,1,7,-9,-2,10,6,2,-6,8,-5,1,-3,7,10,4,-9,-1,10,-1,-4,-10,6,2,7,3,2,9,1,-7,-9,-4,-7,3,6,2,6,2,3,5,-6,3,-4,-7,-10,7,-7,-6,-5,-2,4,3,-5,3,9,-8,-10,-2,3,1,-4,-5,-9,-7,-1,-7,4,-8,-3,7,-10,-6,5,-7,7,-4,-6,6,-9,10,-2,6,7,5,4,1,-6,-6,-6,7,-1,-6,9,2,5,-9,-1,4,-8,9,10,8,8,5,9,7,7,8,-5,6,-2,-6,-10,2,-9,10,10,5,1,2,-6,-1,2,8,8,7,9,-7,-2,-6,8,2,5,-8,9,-8,8,-7,7,-8,-1,8,-6,10,-2,1,-4,1,-10,8,6,-6,3,5,-1,6,-7,4,7,-3,10,-2,7,-6,10], dtype = "int64")#candidate|802|(1008,)|const|int64
var_803 = relay.var("var_803", dtype = "uint8", shape = (1, 360))#candidate|803|(1, 360)|var|uint8
call_801 = relay.TupleGetItem(func_315_call(relay.reshape(const_802.astype('int64'), [9, 8, 14]), relay.reshape(var_803.astype('uint8'), [360,]), ), 0)
call_804 = relay.TupleGetItem(func_318_call(relay.reshape(const_802.astype('int64'), [9, 8, 14]), relay.reshape(var_803.astype('uint8'), [360,]), ), 0)
uop_832 = relay.sin(call_801.astype('float64')) # shape=(9, 8, 14)
uop_834 = relay.sin(call_804.astype('float64')) # shape=(9, 8, 14)
output = relay.Tuple([bop_787,call_792,var_793,const_802,var_803,uop_832,])
output2 = relay.Tuple([bop_787,call_794,var_793,const_802,var_803,uop_834,])
func_837 = relay.Function([var_785,var_786,var_793,var_803,], output)
mod['func_837'] = func_837
mod = relay.transform.InferType()(mod)
var_838 = relay.var("var_838", dtype = "uint32", shape = (9, 4, 1))#candidate|838|(9, 4, 1)|var|uint32
var_839 = relay.var("var_839", dtype = "uint32", shape = (9, 4, 4))#candidate|839|(9, 4, 4)|var|uint32
var_840 = relay.var("var_840", dtype = "int8", shape = (140,))#candidate|840|(140,)|var|int8
var_841 = relay.var("var_841", dtype = "uint8", shape = (1, 360))#candidate|841|(1, 360)|var|uint8
output = func_837(var_838,var_839,var_840,var_841,)
func_842 = relay.Function([var_838,var_839,var_840,var_841,], output)
mutated_mod['func_842'] = func_842
mutated_mod = relay.transform.InferType()(mutated_mod)
var_976 = relay.var("var_976", dtype = "float32", shape = (2, 3, 8))#candidate|976|(2, 3, 8)|var|float32
uop_977 = relay.sqrt(var_976.astype('float32')) # shape=(2, 3, 8)
func_496_call = mod.get_global_var('func_496')
func_500_call = mutated_mod.get_global_var('func_500')
const_981 = relay.const([[3.459740,5.970504,-9.726959],[-8.480648,4.657082,-2.650095],[-5.434333,-1.519748,9.008941],[-1.653141,3.076174,4.813701],[9.578763,-8.668679,-8.667307],[0.458647,1.885434,-9.237794],[5.788285,-8.330692,3.424323],[-2.490516,6.511131,6.991632],[-4.617197,-2.709221,0.881269],[4.890840,-6.214399,-5.164781],[4.611082,2.190842,-1.497032],[-5.662629,-3.945095,-6.013968],[7.276270,-5.907052,2.250288],[0.095280,0.570068,-4.954573],[-1.593816,3.837318,8.566133],[2.644023,-6.571416,-3.025886],[-6.099351,-7.568682,0.147582],[7.055476,0.147197,7.981150],[3.683659,3.221228,7.732115],[8.716664,3.621876,-6.021021],[-9.219521,8.068222,-4.649845],[9.215744,-5.729207,-3.187427],[3.738111,-9.874207,3.813622],[0.640898,-7.855010,8.649493],[-7.454778,5.971251,2.179676],[7.889425,-3.816621,-1.116785],[-6.281717,0.152684,-7.239693],[-4.396105,4.167688,-3.521548],[0.902028,-8.002332,-6.794661],[4.607373,-1.580360,-9.237809],[-9.668422,-2.081142,-8.977054],[-9.633301,-5.212865,7.212885],[3.693342,-8.166924,-2.678297],[8.666409,5.083717,-8.633498],[4.542440,-7.487753,-2.372477],[0.432035,-8.767323,4.926845],[1.605812,3.230591,-7.626769],[-0.568447,3.425287,-2.756020],[9.871000,6.721689,2.987635],[7.624963,4.490334,9.311384],[-6.846357,-2.638965,-7.094546],[-5.138933,2.652320,9.697930],[-0.536501,7.223112,2.607562],[-0.531937,7.263104,4.497851],[3.692445,5.217186,-2.958404],[-2.696275,-3.427450,-9.842789],[2.185900,-3.625377,-2.124924],[-8.687998,8.245896,-8.082629],[8.187288,2.995527,-7.972442],[-9.023986,2.247881,-6.892375],[-9.119898,9.761874,-7.852121],[7.223068,-8.931079,-5.800899],[0.177941,1.758440,1.630526],[7.731852,-7.029903,2.738340],[4.782307,-9.850433,-2.200708],[9.271814,-4.942369,5.974859],[-7.682069,-4.812995,-7.272570],[4.294378,5.916822,-9.327136],[6.519929,7.304950,-9.927603],[-0.131694,-9.235985,2.858714],[-8.737333,2.991279,3.618177],[9.103064,0.146867,-3.297133],[-3.055058,-6.690764,-1.072200],[-4.165488,-6.315816,-9.094223],[9.251071,0.537985,9.445779],[-4.887964,1.395905,-3.419001],[-8.023139,-2.546694,0.910725],[7.853284,-0.119217,3.683729],[-1.426203,-7.346012,-7.611181],[5.350334,-7.172883,5.903470],[6.245927,0.750422,-1.761636],[8.029119,2.326721,-8.990966],[-2.491137,-5.654378,4.081014],[-2.641218,-1.025271,3.815315],[4.588962,-2.177160,6.184379],[3.500086,1.127006,2.452737],[2.844309,-3.891584,-9.819565],[2.873433,-5.782440,7.229164],[-7.018576,0.717273,0.160256],[3.879223,1.872329,-7.551362],[0.685689,-5.188840,-4.095967],[-9.677890,-0.594027,-5.853533],[-7.071022,-8.849518,9.832428],[-2.310999,6.616918,-5.807358],[-9.174658,3.817384,4.782889],[-3.491993,2.471999,2.490885],[-7.070317,5.641777,-2.262065],[9.533892,-5.663312,0.137041],[-7.286156,3.525124,6.651783],[-4.211834,5.212445,-9.923629]], dtype = "float32")#candidate|981|(90, 3)|const|float32
const_982 = relay.const([-5,-1,-1,1,7,9,3,-8,-10,6,2,6,-7,8,-3,4,-7,7,9,4,-2,-5,6,1,6,8,1,-4,8,2,9,1,10,-6,6,7,2,6,5,-8,3,9,-9,-4,-8,-10,2,-5,-7,-3,2,2,-2,-3,-4,-8,-6,-4,-3,-2,5,-8,-3,-9,-5,-5,2,10,-6,1,-4,10,7,5,-10,-10,10,2,-10,-6,-5,1,-2,3,4,9,-4,-7,1,-10,-8,-6,8,-2,10,5,-2,-5,7,-2,6,10,10,-1,-9,6,1,8,1,-8,-9,-8,-9,-5,5,-9,1,-10,-7,4,2,-3,-1,10,10,-2,-1,2,-5,8,6,-10,-7,8,1,-9,-1,8,3,3,-8,-4,7,-10,-3,-4,-8,-6,5,10,-5,1,-1,-7,6,10,6,2,-10,-8,1,-1,-6,-5,-8,-9,3,-8,-8,1,-4,-10,4,6,6,-6,5,5,2,-4,-2,5,4,10,-10,-6,3,-7,-9,1,-6,-2,4,-4,-7,9,5,7,-1,9,-9,6,-2,8,-7,-7,-6,3,4,8,-10,-3,5,2,8,-5,-10,-10,7,4,-7,-4,7,6,-9,-5,1,5,1,-10,-1,-7,-10,-3,-4,-1,-7,-7,4,-8,-6,-5,-4,-5,-10,-3,3,-3,-6,10,-5,-3,5,9,-1,-6,1,-8,-2,9,7,2,-9,-3,-1,-6,-3,9,7,1,4,-9,-9,-9,9,2,9,7,10,4,4,-8,-7,7,6,5,5,6,-10,-4,2,-4,1,10,1,3,-3,2,-9,-5,-9,4,4,-8,4,3,8,-8,9,10,-1,5,5,4,-8,-8,1,1,-1,-10,-10,2,8,-9,-9,7,4,-4,1,3,-10,6,-5,7,-5,3,-7,5,5,4,-3,-4,5,7,9,-5,3,10,-10,5,3,-3,3,10,2,-1,-7,3,6,-7], dtype = "uint8")#candidate|982|(360,)|const|uint8
var_983 = relay.var("var_983", dtype = "float32", shape = (1800, 1))#candidate|983|(1800, 1)|var|float32
call_980 = relay.TupleGetItem(func_496_call(relay.reshape(const_981.astype('float32'), [2, 15, 9]), relay.reshape(const_982.astype('uint8'), [360,]), relay.reshape(var_983.astype('float32'), [1800,]), ), 0)
call_984 = relay.TupleGetItem(func_500_call(relay.reshape(const_981.astype('float32'), [2, 15, 9]), relay.reshape(const_982.astype('uint8'), [360,]), relay.reshape(var_983.astype('float32'), [1800,]), ), 0)
uop_985 = relay.atan(uop_977.astype('float32')) # shape=(2, 3, 8)
bop_992 = relay.maximum(var_976.astype('int64'), relay.reshape(uop_977.astype('int64'), relay.shape_of(var_976))) # shape=(2, 3, 8)
func_315_call = mod.get_global_var('func_315')
func_318_call = mutated_mod.get_global_var('func_318')
const_999 = relay.const([-6,2,-1,-8,2,6,3,6,-10,-1,3,10,9,-6,-7,-2,4,-8,-10,3,8,-5,-3,-10,-2,-5,-6,-9,-4,-1,-10,5,8,2,-2,8,-6,-2,8,1,2,2,-2,4,6,8,6,-3,-9,-10,3,8,5,-10,1,-10,7,2,5,-5,9,10,-7,2,9,4,2,-3,3,7,-3,8,2,-1,-5,-7,-10,-4,9,2,7,-2,-1,5,8,-9,-2,-3,8,-9,-10,1,-5,-6,8,6,7,4,3,-1,5,2,-6,10,-8,-1,9,-8,-5,-1,-4,10,-5,7,-8,-8,8,-8,6,-10,-9,5,-3,2,-7,4,-2,-5,1,-4,2,-9,2,7,-7,4,-8,-6,2,-10,5,-2,-8,-1,-9,-7,-6,1,6,-6,5,-3,-7,-5,-8,-7,8,-9,8,-5,-4,-8,-1,-8,9,3,4,-8,-6,-1,9,-9,-9,5,-8,-4,5,5,-5,4,-7,-9,-5,-3,9,5,-1,-6,3,-8,4,-3,4,-6,1,2,-10,-10,-7,6,-4,-5,-7,5,-4,1,5,-6,4,-9,-3,4,3,8,6,7,7,4,4,-4,-4,-4,-10,7,6,10,6,-5,-7,-8,-7,4,-6,-7,-10,9,-7,3,5,1,6,3,5,-3,-10,-7,8,2,10,4,-2,3,6,-7,6,6,-9,-5,6,-9,9,-3,5,-10,-5,-4,9,-6,-3,-10,1,10,3,-6,-3,5,-1,10,-6,-1,-7,7,2,3,-6,-4,-6,-9,-10,-10,-2,-7,-5,-8,-9,1,-6,4,-2,3,9,-7,2,6,4,6,-2,8,-2,-8,7,-9,-8,3,1,9,3,-6,5,8,-9,5,9,-7,-4,-2,-4,6,-5,1,-2,7,-10,2,-7,5,7,5,7,-7,-9,-2,1,5,6,3,8,-5,4,-4,-2,-5,2,4,-4,-10,3,5,9,-1,6,5,7,2,9,-2,-6,-9,7,-10,8,5,2,-5,-10,8,-4,9,4,3,-9,4,2,-6,9,-3,5,-8,7,-10,4,4,4,1,9,1,9,-5,-1,1,6,6,-1,10,2,9,-1,-3,-8,-3,10,-5,9,1,1,-9,5,10,-4,6,-4,1,7,10,-10,-4,-5,9,-1,6,-2,10,-4,3,-3,-3,3,-2,-10,10,5,10,5,6,10,7,-8,-1,-9,10,5,-1,-9,-3,-5,-9,-6,-10,8,6,-9,2,-2,-2,9,-7,7,-7,10,5,2,8,3,-9,-6,-1,-10,4,7,-4,-10,-3,6,-5,-9,-6,4,-8,-3,-6,-2,6,1,1,-8,4,-6,4,8,-2,10,9,9,-9,-4,3,-3,5,9,-1,3,-4,4,-2,-7,-3,-10,1,10,4,-8,-8,-6,-6,-9,3,-2,-10,4,3,6,-10,-8,6,4,10,8,2,10,-10,-5,-10,9,7,4,7,-6,4,10,2,3,4,1,-5,6,-2,6,9,-4,1,6,7,4,6,3,-8,1,6,-9,-2,6,-7,-6,10,-5,-9,8,3,-5,-6,6,-5,-5,8,3,3,4,4,8,-1,4,6,-3,-3,-9,-9,2,-1,-6,-3,10,8,5,3,5,-8,3,-10,4,-7,2,-7,9,-1,8,-3,9,-10,3,-10,9,-9,4,1,5,-9,3,3,-4,6,-10,10,-2,6,6,-6,-5,-9,6,-7,9,2,-1,-3,-1,7,-10,1,-9,-7,-2,-2,-10,4,-3,9,-6,-2,-7,-4,-6,10,-9,-9,-7,-3,-1,-5,-6,-9,1,-10,10,-6,9,-3,-10,-2,-5,7,-9,-2,3,-3,8,7,1,-8,9,8,-5,-4,6,-4,-9,3,-1,-8,4,-3,-3,-4,10,-5,-8,-7,-4,8,9,10,-4,3,2,10,-5,8,5,-4,6,4,-2,8,1,7,1,7,-4,1,-4,-2,3,-6,-2,1,-10,5,-5,-2,-1,8,8,-7,6,8,8,8,10,10,-6,3,6,-2,10,-9,2,-5,5,-5,-10,2,3,-9,-5,6,-10,9,-6,8,4,-9,9,9,5,-6,6,-5,9,3,-5,-7,-7,-2,9,9,1,2,-1,3,-2,3,6,-7,3,9,9,4,6,9,10,-1,-7,9,3,-3,1,-4,-5,-2,-3,8,-8,-7,2,2,-5,1,7,9,-1,8,10,9,-5,6,1,-7,8,-5,-2,-2,-9,9,4,9,-2,-7,9,10,6,-9,9,6,-1,-10,8,-10,-5,-5,8,-4,1,7,-9,1,2,-2,7,2,9,-3,-4,-3,3,-9,2,-5,9,2,-8,5,4,-3,-3,8,-9,-8,3,3,7,-9,7,3,-4,6,-5,-4,-6,9,3,3,8,4,-1,9,9,1,10,6,7,7,-10,-3,9,-10,-9,4,-4,-3,5,7,10,4,1,5,9,-10,-5,9,-4,8,-4,5,1,7,9,-2,1,8,-5,10,7,4,4,7,4,3,6,-6,-7,-2,6,-5,9,10,6,-7,1,-4,7,-3,5,-9,-8,-9,-7,-1,-5,1,-10,8,-1,9,-8,-7,6,-8,-7,-3,3,10,-3,2,-7,-1,-5,3,6,8,-8,-9,-4,-5,-5,8,2,-7,-8,4,3,2,-6,4,8,-6,-8,1,5,4,8,-5,9,9,10,-3,-1,-10,2,9], dtype = "int64")#candidate|999|(1008,)|const|int64
call_998 = relay.TupleGetItem(func_315_call(relay.reshape(const_999.astype('int64'), [9, 8, 14]), relay.reshape(const_982.astype('uint8'), [360,]), ), 2)
call_1000 = relay.TupleGetItem(func_318_call(relay.reshape(const_999.astype('int64'), [9, 8, 14]), relay.reshape(const_982.astype('uint8'), [360,]), ), 2)
bop_1001 = relay.floor_divide(uop_977.astype('float32'), relay.reshape(bop_992.astype('float32'), relay.shape_of(uop_977))) # shape=(2, 3, 8)
func_315_call = mod.get_global_var('func_315')
func_318_call = mutated_mod.get_global_var('func_318')
call_1006 = relay.TupleGetItem(func_315_call(relay.reshape(const_999.astype('int64'), [9, 8, 14]), relay.reshape(const_982.astype('uint8'), [360,]), ), 2)
call_1007 = relay.TupleGetItem(func_318_call(relay.reshape(const_999.astype('int64'), [9, 8, 14]), relay.reshape(const_982.astype('uint8'), [360,]), ), 2)
output = relay.Tuple([call_980,const_981,const_982,var_983,uop_985,call_998,const_999,bop_1001,call_1006,])
output2 = relay.Tuple([call_984,const_981,const_982,var_983,uop_985,call_1000,const_999,bop_1001,call_1007,])
func_1021 = relay.Function([var_976,var_983,], output)
mod['func_1021'] = func_1021
mod = relay.transform.InferType()(mod)
mutated_mod['func_1021'] = func_1021
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1021_call = mutated_mod.get_global_var('func_1021')
var_1023 = relay.var("var_1023", dtype = "float32", shape = (2, 3, 8))#candidate|1023|(2, 3, 8)|var|float32
var_1024 = relay.var("var_1024", dtype = "float32", shape = (1800, 1))#candidate|1024|(1800, 1)|var|float32
call_1022 = func_1021_call(var_1023,var_1024,)
output = call_1022
func_1025 = relay.Function([var_1023,var_1024,], output)
mutated_mod['func_1025'] = func_1025
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1325 = relay.const(-8, dtype = "int32")#candidate|1325|()|const|int32
const_1326 = relay.const([[[6,10,-1,4,3,-9,8,-1,8,9,1,-7],[3,-1,-2,10,3,7,8,7,3,-10,-3,-7],[3,10,4,-6,5,-5,-6,-5,5,-4,3,4],[9,-8,-5,3,3,-3,3,3,9,-4,-4,-8],[1,2,5,-2,2,-7,7,6,-7,6,-10,-9],[8,4,2,-3,-3,-7,-2,3,10,-2,3,-6]],[[7,-2,4,6,5,-4,-3,10,-1,-6,-7,-9],[-2,6,9,8,6,4,3,2,1,7,-4,-4],[5,9,1,-10,9,10,8,5,-8,-5,-9,1],[6,6,4,-6,9,10,3,5,-6,3,3,-1],[7,1,5,-9,-9,-9,-6,9,-10,7,1,-9],[-7,2,-10,-2,-8,-6,7,2,-10,-9,7,4]],[[-9,3,5,4,4,-3,-8,3,7,7,-5,-10],[-3,1,-6,-7,8,-2,4,4,-3,-4,1,7],[7,2,4,-4,8,6,2,9,-5,-2,9,9],[-4,-3,10,-5,-3,-6,-8,1,-10,1,2,4],[1,8,-4,1,10,3,1,7,-4,10,-5,-9],[8,9,-10,-7,8,10,-4,10,-5,6,-2,10]],[[7,-9,3,-9,9,-10,10,-9,-5,-8,10,-5],[-2,2,3,9,4,-6,5,-7,-3,3,-6,-2],[1,-2,-8,7,7,4,-3,-3,1,3,5,2],[9,-1,-8,-10,3,-2,-8,-10,2,6,-7,4],[6,-3,9,7,1,-5,-1,9,-6,4,2,8],[8,-9,10,-10,-1,7,10,-10,-4,-9,-9,-6]],[[1,-8,3,-7,1,-5,-1,9,-10,4,2,3],[8,-10,2,1,-7,-6,-8,-3,-1,9,-5,-6],[7,-7,3,-5,-1,7,5,7,-10,4,6,-6],[-6,-8,5,6,-3,1,2,-6,-4,-8,-2,1],[-8,7,-2,2,10,-7,-4,-7,5,-5,-5,-9],[4,6,-2,8,-1,3,-10,9,5,-4,-10,-7]],[[8,-9,-3,-10,6,4,4,-6,-1,-8,4,-10],[7,7,5,-10,6,-6,10,7,-3,-3,-5,3],[10,8,3,4,-3,5,4,1,-7,-2,-2,-4],[-2,-3,8,4,9,3,-9,10,-7,-8,-2,-3],[-5,-5,-6,1,6,4,9,-3,7,8,10,-7],[-5,-9,5,6,-9,-6,-2,10,10,3,1,6]],[[9,-5,2,-7,1,3,-10,-6,10,3,-9,-1],[8,-6,7,8,-8,6,-6,-6,-2,3,-8,10],[-10,-1,7,-8,5,3,-6,7,-3,3,-9,-8],[-9,-3,-1,8,-8,-10,10,-8,-2,6,-2,-3],[9,8,-6,-9,9,-6,6,4,3,-7,-2,10],[5,-5,1,4,3,-8,-10,7,-8,10,5,8]],[[-7,-2,9,6,-10,-3,-8,-10,10,-1,-6,10],[9,10,5,3,2,-3,-1,-6,-10,3,7,9],[3,8,8,3,-7,3,-10,3,6,-10,-7,-8],[-7,-6,-6,4,5,-9,7,2,5,-5,4,5],[-6,-6,3,-1,-7,-7,-2,-2,-2,-1,3,4],[-9,-2,-8,2,4,-6,-2,-9,2,3,8,10]],[[-6,-10,4,-6,-4,-5,-3,-6,-3,-6,-9,-5],[3,-6,3,3,-7,-8,-9,-4,-1,5,4,-3],[-6,-5,5,8,9,-1,2,-2,8,-1,-4,-10],[-4,3,6,8,-6,-9,-2,-9,4,3,-3,-4],[5,-8,2,6,-2,-5,-4,2,-5,-10,-9,8],[-8,-9,8,-2,1,-3,-7,-9,9,-7,9,4]],[[-2,3,-1,5,3,-10,9,3,-1,1,7,-5],[5,9,1,10,-6,-5,5,8,-5,-9,10,4],[-8,9,6,2,-8,-9,-6,2,-3,1,-10,6],[-7,2,6,-9,3,-2,2,4,6,-8,-4,4],[-1,5,-4,-9,-7,8,-8,-2,5,-2,7,-6],[1,5,8,3,4,1,9,9,-2,3,-6,-3]],[[-6,-7,-2,8,-8,-9,2,-4,-7,6,-6,6],[-4,9,2,8,-6,-5,-7,-2,-5,1,-10,-6],[1,-7,-7,-8,1,-10,7,3,4,-2,2,-7],[-4,6,5,-4,-4,-5,3,-3,-9,9,2,1],[-1,-8,-10,10,3,-9,10,5,6,6,-3,6],[-1,-2,-9,8,10,1,-10,4,-8,2,-6,-9]],[[-6,4,3,3,-4,-6,10,1,7,7,-4,1],[-4,8,-1,-4,4,-8,7,1,-8,2,-1,9],[-8,7,9,-6,2,-5,-4,10,7,7,3,5],[6,-1,-4,-7,7,6,4,9,5,9,-4,-7],[8,5,1,5,9,4,-6,-6,7,-9,2,-4],[-1,-8,3,6,-1,-5,2,2,3,5,-9,2]],[[-2,4,10,-3,-5,8,8,1,6,4,3,-1],[1,8,6,-5,-5,-2,-1,6,8,3,-9,-5],[-8,4,4,10,1,7,-1,8,3,9,-7,-9],[-2,-2,5,-5,-8,-6,4,10,-5,-7,-9,-2],[-6,-8,9,-1,10,-9,1,-9,3,-3,-1,-4],[-10,-5,-5,5,8,-8,3,-8,-1,9,1,4]],[[5,-10,-2,5,5,-5,6,4,3,3,-1,10],[-7,5,9,1,7,-10,-6,-3,4,-3,-5,-6],[-9,8,-9,-2,-9,6,6,-10,9,-4,-7,-7],[-2,-3,5,9,10,4,4,-8,2,-1,-1,5],[-2,-6,5,-2,-2,-6,-4,-5,-2,6,6,1],[7,-8,4,10,-4,7,-10,8,3,2,-1,-4]]], dtype = "int32")#candidate|1326|(14, 6, 12)|const|int32
bop_1327 = relay.logical_xor(const_1325.astype('int32'), const_1326.astype('int32')) # shape=(14, 6, 12)
func_1021_call = mod.get_global_var('func_1021')
func_1025_call = mutated_mod.get_global_var('func_1025')
const_1331 = relay.const([5.779335,1.323589,3.608844,-6.683320,-8.849607,-2.504538,-6.224087,-6.105535,-5.382373,-1.612588,4.644795,-5.918641,-3.865357,-4.532599,2.593932,1.750989,-3.206755,-2.168422,-1.763540,9.928815,-5.131139,-1.365834,2.274619,0.829070,9.351600,7.817798,4.241331,4.635462,4.726315,0.477059,6.500185,6.995518,1.555270,1.018807,-8.578503,5.851791,-8.878976,-0.597946,-9.377776,-8.067051,1.343589,-2.508440,2.258173,-3.747776,8.854191,-4.839631,-6.650039,-4.785964], dtype = "float32")#candidate|1331|(48,)|const|float32
const_1332 = relay.const([-8.653198,-5.024727,-3.262128,-5.897994,-4.347546,5.676184,0.478182,-9.258674,3.527059,6.817390,-8.074175,-4.306824,0.244181,-0.189153,-4.301181,-4.860194,-5.392314,-9.516836,3.181590,2.943756,3.917876,9.699117,-5.156809,7.359635,-4.818598,-6.984124,-3.374780,-5.231391,2.484920,-4.654808,-3.206493,9.927953,0.693018,-2.267247,-9.323360,-1.329997,-3.781004,-8.693975,4.168749,-7.480858,-4.837411,-7.137859,2.700657,-5.198795,-9.613935,9.854591,-1.667996,6.065952,-3.813628,-8.032978,-6.427216,-0.233771,2.142361,6.526875,-6.105523,-8.656513,2.390991,-3.116978,4.398693,2.951788,9.952677,7.663803,6.273599,-3.127164,-5.364804,2.157264,1.504229,6.434841,-6.989303,-6.665024,-1.782270,-1.300515,0.286277,5.551142,2.770788,-9.355276,9.355461,-2.865344,3.561410,-2.590921,-4.562667,-6.489514,4.905825,-6.144734,-4.234293,-2.188638,4.780314,-4.938966,8.425142,-2.022430,6.115093,-9.797437,-4.994548,5.240789,0.693761,6.031201,5.911660,8.703957,6.341714,7.402033,-1.981748,-6.089416,-2.318039,9.467145,-4.002138,-8.215304,-4.116527,-7.375539,-0.873318,-8.396410,9.220770,7.560041,1.968056,6.855542,-0.956705,2.131948,6.008726,-5.513487,-6.312481,9.154963,6.147756,-9.628143,-2.931144,-8.863343,2.607070,-9.461419,-4.384837,7.789664,2.535477,-3.886112,3.362834,-3.791070,-8.125730,-1.503949,-2.338157,2.282597,-4.943795,-9.504537,1.663634,9.263277,9.102734,8.551517,3.273032,-0.114691,-9.898945,-6.619446,-6.500502,-2.769394,0.162685,6.759805,-9.613388,-5.861237,1.965940,-9.405878,5.923851,8.445850,6.130936,3.165336,9.933745,9.186028,-6.854946,-7.043616,1.988066,0.961431,2.167583,-2.631427,-2.092307,-1.658181,5.321740,-2.281365,-4.691879,-4.180214,-9.438388,-1.257656,0.457540,4.386646,3.864692,-9.908188,-6.440990,-7.316445,-5.939953,-5.270696,4.393623,-3.473471,2.183171,7.087047,-8.546353,2.841587,9.893095,2.056533,-0.571027,7.749949,-9.541903,-2.831511,9.823300,-6.970530,5.409679,-2.630637,-8.143584,-7.049414,1.797361,5.403242,1.911685,8.696405,8.990066,0.322091,7.108165,2.780004,-8.644451,7.727530,-8.956321,7.885705,-5.540493,-7.264980,7.764095,-5.639025,1.030153,-6.558394,-9.895320,7.299183,-0.030097,6.791003,0.775600,2.573639,-8.666289,-0.687183,0.830479,4.740722,6.086384,-0.549271,-8.095152,-9.653422,-3.566445,-5.987389,-5.114475,-1.417590,-7.530514,-1.135994,6.924511,2.766380,-4.571416,-0.941945,3.133654,4.290366,-0.737581,2.929548,-4.985913,-8.237357,2.295578,-7.876295,-9.362743,-1.409696,-6.690389,1.587176,9.207729,-5.036712,-2.190526,5.690804,-2.700732,-1.507705,-9.007457,4.211711,1.260368,3.315364,-7.579129,-3.270274,4.781193,1.153686,-2.195985,4.594333,4.351006,3.431149,-0.566796,2.807371,-5.591774,1.765394,-9.536447,3.237156,-5.381861,-2.997611,-4.455323,-9.680032,3.271540,-6.087335,-8.279201,5.027603,6.621407,3.844494,2.298946,-5.462982,-0.852712,-0.601317,-5.158141,3.346177,7.272398,8.662895,-6.998461,9.683381,4.134518,0.222536,8.575695,1.747073,-9.703718,-9.413520,3.367818,3.071345,1.486159,-4.134652,4.309692,-9.203147,9.712190,5.259406,1.760011,-5.169094,-5.155164,-5.340175,-8.287748,-7.340635,-1.816390,5.685592,1.607502,-9.180596,-6.775860,-2.385803,-8.985006,-3.176117,-3.484491,9.805043,-2.290401,-1.090630,-8.889136,-2.124823,-1.050685,9.444529,-4.059940,-3.495097,2.363131,-4.701464,-5.702391,9.105470,7.020243,-9.302104,6.709514,-5.876151,5.361272,-5.224684,9.124519,1.222440,2.725519,5.909508,1.769406,4.209962,-2.651390,-8.038553,-4.886714,3.888138,-5.245299,1.965825,5.944228,1.042230,-5.025509,-3.658310,7.879686,3.318265,-1.143641,-2.970131,4.049834,-2.381018,7.074572,-1.011666,4.737303,8.974947,2.477656,1.863880,-7.012190,-6.671510,1.628867,5.996335,-8.105733,0.370492,4.225332,-1.426303,-3.504092,-3.793135,8.456619,4.573734,-6.690558,-3.870945,-9.392240,-5.946026,7.856360,1.507244,-6.297150,1.976714,-3.720118,4.559694,-2.869483,-2.248129,7.934654,-6.911552,9.631184,4.885260,-6.839262,2.655246,6.912015,-7.050969,-8.359133,8.959957,-2.364783,3.558342,-4.175086,-1.575814,-4.331510,3.769623,0.396245,9.673115,5.708312,-4.008687,-5.413203,-1.769112,1.033044,-0.184619,7.329212,-8.488802,-8.847602,-3.724404,4.614242,6.853627,8.259870,3.080576,-2.063650,3.261681,0.046525,-5.270199,6.931089,7.487853,8.548930,6.827338,-3.830673,-4.834090,2.630892,3.992670,0.615032,5.911480,4.706714,7.638570,1.998475,4.660839,-4.628514,-4.160256,9.645583,-0.271203,-5.406473,0.136142,-5.190911,6.786807,-4.353092,-3.755739,-3.389483,-1.040378,-9.273335,6.210022,-6.734814,-4.569596,-7.886088,-5.922886,-3.417753,-7.396862,-4.590249,6.303490,3.656089,6.181677,2.499840,0.170974,2.771497,2.643588,0.744319,5.499368,-6.223230,-6.879830,-4.626088,-9.714326,-5.620372,8.654605,-8.876510,8.582729,-8.677008,7.152364,-0.505198,6.839560,-6.590041,0.853764,5.396507,6.307487,-8.986632,3.213163,-4.830563,6.927133,-1.526212,-1.083970,-1.826546,7.405852,-9.238284,-2.803918,7.993495,-2.985093,1.393572,-9.301899,-7.664844,-5.833404,8.040480,1.144996,8.337960,-6.257574,-4.169605,-9.079642,-3.584403,8.344386,-9.568438,4.994269,8.194713,7.879336,3.397876,3.051044,9.537876,-1.638414,6.777247,-1.538302,8.479984,5.821880,5.318964,-1.948318,2.705708,-8.857505,3.653275,0.536665,4.521205,6.109091,-7.460384,-0.910118,-7.353193,9.466030,6.210659,-6.858510,-7.416749,-2.520555,2.963098,-7.720718,-7.162764,-5.425186,-8.687104,-2.421447,-6.050993,4.895857,-4.932363,-2.155095,-6.992483,7.004376,-1.222614,-0.009720,9.113111,-0.836287,6.885948,7.956327,-1.809024,-7.610380,7.215313,-6.529226,-6.630800,8.141282,-7.845299,-2.767052,9.601969,-3.548820,7.510195,-7.641291,8.943147,-4.578107,1.334505,-1.837642,2.430109,4.796005,1.142823,6.363483,3.587389,-7.932148,-3.647876,-0.647032,-3.215143,8.835888,-3.283268,-2.531113,8.928766,-7.610170,-8.280855,-1.899335,7.872252,9.985059,1.934645,4.887997,6.064100,-2.659309,-1.314003,1.798563,6.275537,-7.769167,-4.328095,5.336502,8.314738,9.473353,-2.615737,-3.650857,5.587438,-2.568956,-6.602998,4.286445,-9.571366,1.212122,-2.751660,6.967868,-0.685601,8.477182,1.724527,-6.551797,5.036175,-3.181358,5.345647,1.127521,-9.312059,2.829930,8.955718,-2.856063,8.630831,-7.828745,-9.050731,2.247514,-7.984725,-2.937985,-7.443958,-4.579241,-7.010829,7.396714,8.000422,-8.045880,2.453134,-7.730039,-5.829712,-0.793271,5.801175,4.180701,-3.825309,-3.212297,-2.279709,-9.310901,2.813740,-6.759958,-4.459672,5.835088,-2.131776,1.778688,6.593489,8.328675,2.511026,1.308898,-0.478237,-7.765581,-0.153668,9.922556,1.722840,2.749933,6.366227,-3.865930,0.349931,7.131866,0.200569,8.486984,4.799786,-9.895792,-6.581535,2.399860,3.788007,-3.143931,-3.377360,-9.280610,6.481558,-8.713803,4.151260,-3.839857,-4.475347,-7.761612,3.322554,-2.109473,-0.868791,0.922149,2.086394,-4.999677,-1.294179,-0.414733,-3.067365,9.173611,-7.821379,-4.534224,-4.194705,-3.066320,1.371724,8.523084,2.686387,8.992103,-3.956173,-8.179464,1.886939,-7.882570,7.983953,-7.652903,5.068142,-1.441308,0.775003,0.782637,3.294357,-2.144622,4.212095,2.338937,9.949214,-5.365563,7.281906,3.603297,3.785883,9.206673,-7.560504,5.547767,4.353359,6.967579,-8.908162,-3.351120,3.575467,-4.576603,-8.549137,7.923663,-7.137468,-0.398167,-3.697373,-5.622277,4.127223,2.184882,1.340129,-4.770452,-1.174943,2.378411,-6.981080,-9.136827,-4.807065,-6.946745,1.534278,4.185815,-1.321745,1.823489,5.212572,-7.603291,5.557706,8.131161,-8.317463,4.071693,3.257118,-5.175336,9.169816,3.865864,8.204233,-2.644551,5.555591,0.981603,6.208532,9.769022,-7.104947,-6.746832,1.428534,2.952933,7.919306,-4.766890,7.232697,-3.929953,2.810828,1.983771,-3.596385,9.337792,5.618312,1.997425,-1.923512,5.539371,-9.000283,-3.329680,2.428967,-7.185966,4.075375,-6.736176,9.840840,9.274490,-8.305526,4.261690,-0.271413,0.105053,9.640823,7.610440,3.490916,7.792785,-7.914367,4.777412,8.278069,-4.921064,-3.532979,4.248940,7.536997,-8.518715,6.238322,-9.332681,7.178257,8.434043,-0.324913,-7.995405,-2.519418,-3.521842,4.165953,-3.535384,9.832883,5.412183,8.421257,5.369610,7.624289,7.354307,8.467011,5.892849,5.877585,-3.878741,7.252585,0.265313,-1.908786,-2.378647,0.336162,-1.082630,5.345735,-7.640394,-7.134164,1.241062,8.810882,3.656567,8.388589,8.488379,7.797198,-2.211538,-8.302131,-2.841513,7.340871,5.752500,-6.321879,6.963506,9.961664,-3.413038,4.591545,-3.082448,-4.191596,-3.197282,-9.986581,-0.858592,6.955302,-1.875820,-8.980554,-7.658718,0.579211,-6.460699,5.165949,0.838292,6.102324,-1.771250,6.172494,-2.875420,-2.846539,3.610366,-7.669580,5.606430,1.815808,-0.689624,-6.851050,9.624381,-2.977319,3.478351,-1.953638,-2.460617,9.301193,-2.527762,1.000612,-7.280190,0.345071,-5.963910,-8.714600,1.673106,4.853688,4.281754,-1.237983,5.511623,7.605459,-0.435923,5.461604,6.043888,-3.320853,-2.206962,-8.626710,2.269442,-1.984057,-5.287619,6.258914,-8.661467,4.014481,5.688110,4.195423,-6.458218,6.532805,-1.383098,5.540994,9.118304,4.541424,-2.632619,0.970039,-1.774560,9.901056,-9.129579,-9.957679,-6.232717,-9.350410,-4.164857,-7.950258,-1.051991,8.373425,9.237715,1.644665,-7.409668,-5.223804,-4.295874,9.720594,0.379169,2.018777,6.377122,7.542495,9.044788,9.448942,0.505890,-9.031507,-5.276915,-3.568601,1.067887,-1.663914,-9.104877,-2.836579,-7.710569,8.546182,-3.165245,0.376833,9.970423,4.347602,1.843386,-2.246278,5.999237,-5.341741,-5.325161,0.992076,-2.506908,-5.466131,-3.922373,-6.072726,-6.987016,-7.136374,-5.236887,-4.957634,-0.002238,1.749160,0.181758,-9.939717,-8.822257,-2.641556,9.339417,-0.400765,2.411587,4.291991,9.147374,6.475477,2.852054,5.778221,6.038006,6.992282,2.010111,2.889427,-4.232029,0.778013,4.219587,-2.130147,1.282617,-8.427515,7.404897,-0.786451,5.193587,-7.524077,-5.093726,1.583160,0.517907,6.099422,5.933721,0.998679,0.006009,-1.117656,-5.062038,5.389099,-1.437340,4.191219,8.310027,-2.996756,9.479841,-6.172637,-2.409950,9.591754,-8.087570,1.077924,-3.164860,-3.512830,5.837102,-9.602145,3.022989,-7.100012,2.608125,2.597640,7.906692,-8.931966,-0.906381,-8.473759,-4.831079,-6.671379,2.065192,-7.482440,5.908334,5.113723,0.320726,-2.855797,8.535008,-7.376493,-1.584757,-1.772256,-1.571739,-8.117792,7.149121,7.852531,7.422857,-3.199807,6.886610,-8.665842,5.238198,-5.550605,1.434622,3.218120,9.899563,3.263972,2.187789,8.335447,-7.758490,-4.820275,1.366503,5.339594,-8.059248,9.505397,-7.527443,-8.648735,2.500290,6.193785,7.678305,9.776264,-7.086925,2.553801,-5.934581,4.609903,-1.189147,-1.632618,-0.480921,-8.047040,-6.732328,-9.023440,2.911518,-2.747413,1.041386,4.982256,6.302265,0.270017,-9.979278,6.333998,-5.045607,3.340372,2.656783,-1.321931,-6.808100,-7.572691,-8.226356,1.680743,8.947270,-7.918659,6.666927,5.120600,-1.181441,9.638458,9.278620,-0.668976,6.862610,7.994224,0.690704,-2.508363,-0.344731,-4.341605,-0.780303,2.109291,-0.454095,-0.483510,6.468857,-2.706302,1.878125,-7.102946,-9.327407,-6.767300,7.893521,-8.374425,4.668691,-1.533680,9.296610,-3.505130,-7.783591,8.680241,1.606202,4.942562,-2.433868,-1.396358,2.049429,-3.515405,0.094006,7.909243,-9.299047,-1.136385,0.878388,-9.184425,6.206988,-3.573808,-3.462927,-2.256173,5.368385,-3.436701,7.136139,4.721669,-3.069542,4.182910,-6.301011,-8.985053,-2.774989,-1.685673,2.243816,2.709407,8.497539,-2.361923,1.395903,0.629111,-2.475113,-8.341263,1.182885,-7.986077,-6.116124,9.344255,0.305542,7.217139,-8.321635,2.295787,-6.087031,6.133418,-6.120091,0.055397,-1.966753,-5.257532,9.287543,1.490286,5.385054,-1.477490,3.713255,-8.882182,6.172633,-8.486144,-4.995026,1.203721,-1.764474,-1.534674,-3.613254,8.462187,9.131341,-1.418631,-9.022185,4.351532,6.473936,5.895099,7.509833,9.738145,-9.826542,1.988246,3.182995,9.611416,6.769871,-0.569941,-1.919491,-7.470315,-4.650211,-2.770052,-1.860607,-3.539658,7.715336,-2.426474,1.499370,1.496212,-4.780893,-1.428505,8.573543,2.670039,-2.340763,-0.225419,4.479510,-4.348147,4.914554,4.790674,-4.041270,-4.559186,7.777240,-4.844114,-1.533558,-7.745960,-0.200042,5.779757,1.622932,-8.206142,-4.461897,-8.709144,-5.188281,5.529794,0.371781,6.875013,-5.028259,2.208269,9.856640,5.972599,5.126562,-3.675682,-5.135451,5.589424,-3.326899,2.848265,-8.048306,4.593403,-1.316334,6.274354,2.600046,3.188524,-1.284099,1.079443,5.273306,8.165640,1.653977,-1.117157,0.298353,0.524212,-9.744064,3.250030,-3.645256,4.495331,6.802233,-3.939302,4.430305,4.791796,-0.708262,7.661900,8.089208,-6.662506,-1.338528,-8.473026,-9.916242,-1.234287,5.668143,2.427285,-5.198830,-8.003644,9.684262,-6.647360,6.987402,-4.337470,-7.274316,9.289566,6.627596,-5.713954,-3.000606,7.487770,-8.088096,0.427696,5.317098,1.342125,6.241534,-3.452101,-7.968399,-8.217655,-2.333902,8.117907,-0.561122,-4.286340,-2.717936,-8.507919,3.129417,1.731015,1.273535,0.103854,-2.571839,-9.896448,1.603327,-9.206843,3.994066,7.019042,-0.178315,-7.083733,0.537175,-8.890319,-8.449106,-3.895551,-9.775029,4.217846,5.604344,0.761837,-7.055905,5.146423,-6.666658,3.827125,-5.880437,3.676050,-9.581177,-4.308996,-6.996478,7.155705,9.085362,-4.254830,-8.269794,0.876692,1.371691,1.834123,-2.539889,9.930510,-4.670173,-2.126532,7.520727,7.220515,0.710822,0.006245,-9.771474,-2.984903,-2.026274,-0.409567,5.727994,-0.430983,-4.895301,-9.469890,1.866384,7.796195,-4.575704,-3.591422,1.410253,9.725016,9.516405,-0.460006,-3.424874,8.115875,7.538158,9.480661,8.188368,1.707255,0.870742,-4.864488,1.087025,-2.428048,9.070683,4.732649,7.746178,-7.991442,4.498801,-1.141778,5.856456,2.447340,7.457008,6.830264,-9.361785,-4.186405,-4.400000,-8.175514,-9.519729,-3.796055,-5.910408,-1.252161,-1.388016,-1.184686,8.267688,8.434679,8.791937,-6.945483,1.891027,9.439950,-1.274839,3.478606,1.689057,5.780457,0.879050,8.799326,0.963341,5.860279,-7.856479,-0.439454,-7.305656,6.162011,-6.609039,8.165584,2.775302,0.126899,-4.929915,2.422144,6.632890,-8.379623,-7.467346,-7.858464,9.085910,0.095191,4.573038,-0.907415,-7.843042,4.473764,7.751746,-6.683691,-6.429940,-1.147044,8.651370,-2.610254,-9.617013,7.946189,-1.253898,2.482690,7.599860,-7.874107,-7.924167,-8.603353,-4.947953,8.948015,-9.311248,-3.149058,4.360432,-1.399242,-5.320576,7.768288,2.292473,9.639959,-3.421978,6.706084,-8.083179,4.572908,-0.279809,4.831012,6.887888,-0.803639,-2.299241,-5.909353,-5.804837,-8.113736,2.597756,7.868357,-8.782649,1.294984,4.405856,-6.315746,-7.399104,-1.843743,-2.482476,2.604933,-7.079180,9.714153,-7.698704,5.033353,-8.064442,-8.266620,1.176670,-9.114335,-9.960907,8.439684,1.280302,3.149773,6.113089,-7.685965,2.403440,7.433167,-7.229034,9.893266,4.855285,9.504663,-3.093688,1.441516,6.624650,-8.249873,6.430305,-8.885073,7.711509,-7.461097,2.374119,-2.193194,-8.754148,5.589352,4.809857,-0.526248,5.016142,-8.124928,5.410294,7.169541,-5.083064,-1.784071,1.177263,-8.759774,6.977930,9.525508,2.733586,0.206393,-3.155988,-5.946027,7.310264,-8.616069,-0.503495,9.736848,-2.266126,1.572883,-3.962085,3.546807,-5.323546,-0.756103,-9.255799,-9.306124,-3.456254,-0.202168,-3.589292,-9.606834,9.424736,-7.321044,2.163121,2.326596,9.747062,-5.421449,-9.571902,3.878400,6.279429,-9.103678,-2.212052,-3.762482,6.768513,4.329879,8.687335,6.819423,-4.863946,1.695628,2.994010,6.539821,3.444592,-9.212984,4.200293,-8.173852,-4.895801,0.900866,6.277076,3.485570,-7.443440,7.003827,-9.373492,-8.054820,-6.191148,-2.142588,-6.393375,-0.038143,-4.253067,3.081056,6.253825,-2.952934,3.114928,-9.005054,7.231849,1.516914,-8.699459,-8.182211,2.799893,3.270413,-7.406979,-2.870461,6.543376,-9.077311,9.914949,-1.694404,9.274271,-2.623111,-5.632350,4.865767,-4.125122,6.153001,6.644004,2.428354,-9.458334,5.858328,0.308681,3.055131,-5.617857,-0.965901,3.543916,-7.482157,4.829018,2.963350,2.733967,-6.466343,7.155609,-9.624385,8.542564,-7.929457,-3.282833,-6.979425,5.970452,0.341952,8.514361,8.529806,-9.982376,3.250450,6.581649,3.650679,6.587342,-7.060400,7.449299,-8.451293,1.140209,-2.973802,-6.448251,0.133978,-6.020542,1.823007,-0.418937,-7.398946,5.261424,-1.911300,3.051658,7.442006,7.116421,3.850335,2.678119,2.657901,-2.622735,-1.350363,-0.119614,-1.596446,-7.370616,-3.161373,4.779310,7.899241,-1.543495,6.282455,6.010967,5.746626,-0.350925,7.372054,-0.552819,-6.483091,-1.613435,8.500236,-5.911105,8.187757,7.800393,8.037229,4.710291,0.084665,0.408831,1.826361,-2.684741,3.567770,4.677615,-9.099374,-5.132896,1.181283,9.985168,8.528444,-5.981615,9.415290,6.622669,-4.736671,8.675755,-8.209082,-2.565930,-4.579297,-9.744582,-8.694875,-6.718025,7.019111,0.606001,-5.829615,6.688903,4.329030,-5.763760,-2.345982,5.914561,-5.204929,-7.033990,5.173655,-6.469621,7.621638,-8.571428,6.470214,-6.340765,2.794352,7.267969,3.743641,6.663447,-5.948642,8.233834,0.363858,-6.354876,6.382634,2.820026,3.241060,-8.435025,-8.988018,-7.935081,-2.800814,2.636496,5.295240,7.027305,4.048392,4.824772,-5.038959,-7.387904,5.564055,-9.599122,-7.768340,-3.961296,2.563338,-8.446466,4.170326,2.491969,-3.359220,7.301970,4.255992,-2.564434,0.189851,8.173282,-6.554739,-5.276186,-0.137727,-7.977731,-6.328280,-3.928658,-3.388672,5.924065,-8.935581,3.834151,1.979687,-3.793659,1.233744,-1.658626,-7.452232,-6.806418,1.932635,-4.297969,7.300024,-1.481031,8.801279,-6.439975,-1.806217,8.447368,-8.980422,7.965382,0.351459,0.368986,-2.697486,-1.737694,2.871165,6.750679,4.253105,-7.965373,-0.966867,-4.067172,1.040690,8.414161,-2.177158,-7.383815,6.703744,5.305346,9.566722,0.562032,-4.987435,-8.007756,5.052186,-8.894368,-7.782891,9.421198,-9.775231,-6.647162], dtype = "float32")#candidate|1332|(1800,)|const|float32
call_1330 = relay.TupleGetItem(func_1021_call(relay.reshape(const_1331.astype('float32'), [2, 3, 8]), relay.reshape(const_1332.astype('float32'), [1800, 1]), ), 4)
call_1333 = relay.TupleGetItem(func_1025_call(relay.reshape(const_1331.astype('float32'), [2, 3, 8]), relay.reshape(const_1332.astype('float32'), [1800, 1]), ), 4)
var_1336 = relay.var("var_1336", dtype = "int32", shape = (14, 6, 12))#candidate|1336|(14, 6, 12)|var|int32
bop_1337 = relay.greater_equal(const_1326.astype('bool'), relay.reshape(var_1336.astype('bool'), relay.shape_of(const_1326))) # shape=(14, 6, 12)
output = relay.Tuple([bop_1327,call_1330,const_1331,const_1332,bop_1337,])
output2 = relay.Tuple([bop_1327,call_1333,const_1331,const_1332,bop_1337,])
func_1340 = relay.Function([var_1336,], output)
mod['func_1340'] = func_1340
mod = relay.transform.InferType()(mod)
mutated_mod['func_1340'] = func_1340
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1341 = relay.var("var_1341", dtype = "int32", shape = (14, 6, 12))#candidate|1341|(14, 6, 12)|var|int32
func_1340_call = mutated_mod.get_global_var('func_1340')
call_1342 = func_1340_call(var_1341)
output = call_1342
func_1343 = relay.Function([var_1341], output)
mutated_mod['func_1343'] = func_1343
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1520 = relay.var("var_1520", dtype = "float32", shape = (2, 4, 4))#candidate|1520|(2, 4, 4)|var|float32
uop_1521 = relay.sinh(var_1520.astype('float32')) # shape=(2, 4, 4)
output = uop_1521
output2 = uop_1521
func_1524 = relay.Function([var_1520,], output)
mod['func_1524'] = func_1524
mod = relay.transform.InferType()(mod)
mutated_mod['func_1524'] = func_1524
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1525 = relay.var("var_1525", dtype = "float32", shape = (2, 4, 4))#candidate|1525|(2, 4, 4)|var|float32
func_1524_call = mutated_mod.get_global_var('func_1524')
call_1526 = func_1524_call(var_1525)
output = call_1526
func_1527 = relay.Function([var_1525], output)
mutated_mod['func_1527'] = func_1527
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1529 = relay.var("var_1529", dtype = "float32", shape = (11, 8, 1))#candidate|1529|(11, 8, 1)|var|float32
uop_1530 = relay.atan(var_1529.astype('float32')) # shape=(11, 8, 1)
func_1021_call = mod.get_global_var('func_1021')
func_1025_call = mutated_mod.get_global_var('func_1025')
var_1543 = relay.var("var_1543", dtype = "float32", shape = (48,))#candidate|1543|(48,)|var|float32
const_1544 = relay.const([-6.881023,0.116267,8.371176,8.656141,6.605462,-9.950316,3.828989,-7.864704,9.001498,7.719180,-0.226263,6.894061,1.728230,8.323346,-9.943524,8.660141,-0.094256,2.798061,9.449211,-2.766355,-1.942950,-9.448655,6.636285,6.009538,-3.201493,-1.019521,3.489392,6.425551,-3.777256,0.181457,4.025165,9.485931,2.851187,-4.787927,9.258318,-9.691196,7.257450,3.528975,9.718443,2.833139,7.659457,-1.560092,3.930745,-4.955753,-4.812860,-1.658434,-9.974320,2.441015,8.071367,1.720205,-0.889609,-2.463671,-7.410129,-1.871702,-6.141078,0.250772,4.583842,7.591695,8.933274,-9.907124,0.463931,6.117136,-0.568963,-9.165844,-0.572019,-6.849416,7.628654,-2.365931,4.895513,1.503590,-6.154339,3.318605,-7.674800,-6.765788,-6.521765,6.438358,-6.584650,-9.478802,1.631797,-5.901049,-1.726620,-3.302973,8.522141,3.424708,-8.938639,-8.819978,4.294350,-3.020128,-0.121703,6.772176,-8.166046,4.465766,7.109356,6.533996,-9.225357,3.341828,9.168146,-7.413395,-6.055733,3.503800,-6.746446,-6.678125,5.449212,4.204542,3.853197,3.858358,1.682650,-5.905444,-8.341529,2.421694,7.534574,1.438901,-2.507501,2.566818,1.440235,2.999476,8.277647,9.411968,0.969681,-7.049083,6.849331,-5.231774,-1.946141,5.828847,-9.595975,9.132107,4.608927,-9.441436,-3.272709,0.083678,-1.719645,6.425913,-6.116466,8.333117,9.481165,-8.800296,9.926495,0.955670,-2.452248,-3.716528,2.858967,-9.912549,-2.951127,7.267346,8.056974,-8.628340,2.223530,3.730995,-9.729192,1.215748,-4.161751,-8.569807,-6.909802,-2.199308,-0.282063,-8.100554,-6.648579,0.950306,1.594365,-8.307177,4.455311,0.663211,-7.591371,-6.147104,9.375000,9.113167,9.970802,6.640379,4.064157,-6.768405,-9.357913,-9.968684,-1.699776,1.083221,-0.797427,-8.677094,-9.770300,-3.186897,-8.684393,0.415409,2.724009,7.584516,-1.367217,-2.516168,-7.764614,7.535223,3.332049,-3.464769,7.620949,-7.206758,8.707835,7.716838,-1.210740,-9.368219,-0.970156,-7.727474,-9.563945,8.772635,-4.096041,5.965892,-6.863853,4.975979,-2.770067,2.991617,0.638257,4.096395,-1.916078,-3.763964,-2.504717,4.660510,-9.211877,-4.346759,-3.436957,8.247627,-6.295653,2.090659,9.509091,-4.656015,-0.323351,-0.483206,2.752068,-3.721064,-2.588945,-1.703804,-3.206202,-3.813698,7.534773,4.687362,-7.198207,-9.488696,2.182834,9.802952,-2.178288,-5.743016,-2.227460,-3.053884,-5.642748,3.042442,0.852630,-3.291485,-4.755773,-8.686189,2.036790,3.918528,-8.954710,-9.087591,4.793990,1.994072,-0.798803,8.864901,-8.740108,-5.162546,-4.678273,0.683032,-7.685509,1.741828,-2.687394,-2.517339,-4.480691,4.150029,-0.975176,-7.472564,-2.472306,6.100929,-5.356884,6.985964,4.568475,1.965043,3.137980,8.190995,-2.947600,-6.502793,5.445283,4.283460,-1.163897,-3.472488,-5.600813,9.659075,-3.253598,0.828545,4.205395,4.572251,4.512441,-2.676443,-3.156040,-1.597753,3.635530,5.214319,8.745683,-5.363985,-9.371883,-8.895464,9.718662,1.637980,2.029123,-6.092283,2.305968,3.781795,7.622850,8.303307,9.635249,-7.320226,9.907921,0.112256,-6.708867,-8.091479,3.282851,-0.980484,-0.282881,-1.555977,-0.366868,-6.492302,7.283448,-0.586967,-8.196396,-7.151304,5.732506,-8.727569,-7.032910,-8.323061,6.345441,7.601337,6.389883,8.043376,3.294945,6.991915,9.761126,9.301887,9.616562,1.016701,-2.351843,-4.997935,-0.583815,-8.219896,-0.781866,-5.589087,5.559032,-6.452378,5.310255,2.147094,-3.216218,-1.484668,-2.661121,-0.914111,-6.365023,9.457122,3.965422,-0.258367,-5.822242,-4.398351,9.969473,-4.541757,4.485473,-9.198888,9.844485,8.328564,-9.003219,4.244046,-9.271406,6.922831,0.918248,6.105006,-7.755204,-9.597858,-3.777137,3.293699,7.340383,-9.791928,0.776986,6.038698,-9.113747,-4.452849,6.818979,-4.445263,4.177073,-0.499543,-8.391198,2.038810,9.698872,-5.511733,-1.929566,-7.136898,1.785850,-6.563864,7.753527,8.996540,2.722820,-4.822477,6.483725,-2.454322,-5.987565,9.429342,-0.689278,6.666460,3.181993,9.325218,-8.331959,4.940011,-0.223752,-3.412205,-6.633697,-9.920249,0.625828,-8.202580,4.310072,2.825576,9.310338,-3.937889,4.907114,6.195605,7.618996,-6.019724,-5.122840,-2.934139,-2.760794,-0.295559,-4.437184,-7.416066,-2.105515,3.656753,7.750698,6.640921,9.850658,-0.346121,-7.663300,5.934671,-1.672224,6.233151,-1.786000,0.512969,-6.308129,8.778002,-3.755818,-0.390099,-6.859961,-2.446610,-0.193994,-1.967109,-0.464746,-6.342840,-6.425596,-9.750916,1.024832,-5.040922,3.644366,-2.607275,8.456049,3.926785,7.471011,-3.482923,0.827137,5.756090,5.331929,6.201729,-1.274904,-8.239131,-0.690266,3.974500,-1.493514,9.749067,-6.474576,5.061088,0.532643,4.062717,-5.854416,-0.189776,7.821572,8.829182,3.908050,-2.503594,-9.254645,-3.838107,8.917178,-7.469451,9.734821,-5.066703,-4.243167,-3.108660,-4.196086,-4.546667,5.282003,-7.481916,4.087075,2.290469,-0.626226,-4.962245,-1.300408,4.804397,9.821674,2.509937,5.234987,-1.757018,3.056479,6.878746,-4.990395,-0.418609,-2.963299,-1.695515,-7.604175,-8.046583,9.485954,5.866513,-1.685008,-2.567800,1.818665,-8.611642,5.928692,-5.491485,6.492976,-8.610673,1.777940,-1.758422,6.330216,5.362284,-0.238770,-5.753995,4.070616,-7.925619,2.625970,9.932997,-3.532313,0.488193,-6.880087,1.598031,-6.342301,8.526521,-3.630963,6.480071,2.743001,-1.326271,9.883491,8.072311,-1.933377,-7.526255,-4.421150,-6.600535,6.168928,-8.736290,0.447621,-2.284754,1.565829,-8.348943,7.245690,8.977801,-2.911159,-7.323008,1.006265,-6.489424,8.836536,2.143086,-0.600550,9.794858,8.444756,8.621089,0.647314,-4.631919,-1.797700,-8.612763,4.764899,-0.370538,2.884567,7.188757,-0.827687,3.616446,-7.370801,-8.857532,-4.768975,-8.002511,9.523078,6.846677,8.601540,-6.893198,-9.171869,3.253820,-7.742868,6.569014,4.818946,-1.340732,6.999907,9.589734,-7.623099,-0.289776,4.304878,6.662779,4.357539,5.121830,-0.007449,-6.360664,3.885320,-1.212244,0.380948,6.128343,-5.719089,-3.243028,2.795728,5.595416,7.597440,9.829286,0.478522,-7.984984,2.492657,5.789579,8.034733,-2.975014,-4.783915,-6.804364,-2.290501,-3.842818,-6.707612,-7.416905,-7.323395,4.365463,-3.997772,8.322444,4.978208,-1.531782,7.462308,3.576555,8.791652,3.673769,-0.496246,8.385166,-7.746439,-3.292499,-8.841050,-4.818769,-6.891483,0.310208,-4.211587,-3.894420,-1.241825,-3.604497,4.261762,-2.233020,9.529061,-0.346438,8.385724,4.728197,3.458767,-3.019945,-5.675534,-8.247817,5.914644,4.057264,-2.719239,7.156171,-3.301667,0.351985,8.642979,-5.520431,6.163661,7.269536,-2.830292,-5.361352,-7.286161,-7.574048,-9.946290,7.755800,-9.405682,5.921386,3.052333,1.552097,9.453809,9.638836,-2.147274,9.773570,-5.821676,-4.309066,4.352954,-9.782503,-8.907178,6.965778,5.800451,-5.021658,2.761588,0.655839,-0.140399,2.826159,5.598063,1.623813,-6.925018,2.359174,9.771477,-7.389230,9.517404,-9.975961,8.118127,-4.664863,-1.738285,-3.349275,-5.303634,-5.875006,-9.516454,-4.220047,-2.957923,4.028328,9.978994,1.506524,-3.662735,5.385518,-5.622834,9.353232,0.319005,7.311658,-1.127951,-7.199457,5.092786,-8.199378,-6.684520,5.213530,-5.259501,3.212522,6.714248,-3.998268,-1.443722,5.016010,1.390191,-6.755280,-6.476570,-4.913526,2.360747,-2.931931,-5.117602,-7.108552,5.472395,1.457586,-7.034124,8.544388,-4.107247,-5.591699,-3.957391,6.171296,-1.031793,-9.587073,3.480548,-8.210623,8.358958,8.901689,7.398361,-8.595906,6.862616,-2.022044,5.627901,-6.092189,8.900970,-2.513197,-0.189775,6.108434,-1.985422,-7.471252,-3.238373,-5.874709,2.354089,7.845585,-0.693729,5.207774,-0.979456,4.244336,-9.119960,9.890000,-9.008587,7.948146,3.050672,-3.676210,-2.117496,-0.724659,2.870349,1.296035,-4.143248,4.618930,-4.530360,0.119848,-5.388825,-3.066253,-5.842387,-8.385829,-7.008505,6.243379,-2.042275,8.461131,-6.306899,9.868587,-4.925368,-8.738952,-6.601993,5.458493,2.262393,4.028907,-4.586172,-8.594100,3.138206,1.239268,-4.127360,9.595412,-7.183949,6.027263,-9.007551,-2.746439,0.160332,-8.456054,-8.356364,4.148628,-4.334595,3.692221,-9.293991,8.283245,-9.107696,7.349877,8.781630,9.629908,8.284819,3.343643,-3.956680,1.752977,-4.037106,7.897273,0.566017,-7.867985,0.602363,-2.976405,7.719303,5.110753,4.464431,-6.345069,5.823300,-0.648204,5.914059,6.950244,-9.534708,7.698047,-1.410392,2.305334,0.818361,4.884409,-7.673931,6.316053,8.561795,7.675741,7.476311,2.832074,-4.812671,-3.122119,1.227185,1.952387,-0.960324,4.664592,8.344292,-0.369261,-5.312015,8.768394,-5.303298,8.697700,3.534433,-0.275248,-5.555172,1.967895,4.958886,-4.145557,8.110278,-1.095281,7.725149,-0.760725,8.831630,3.178630,-0.817934,-1.329499,1.911469,-7.721449,-2.207604,-7.929338,3.741691,2.575969,9.978825,3.547711,4.250051,-1.639499,6.015798,2.996392,1.948391,1.123721,4.362057,-3.755381,3.235978,5.254638,0.389220,-3.646098,-2.889162,-9.308018,-1.306527,-8.640844,0.645535,-2.132566,-6.357955,3.571816,-2.323835,4.286513,-6.616239,1.612433,0.980310,-4.213041,-2.764046,4.763148,-2.488113,-1.298227,7.306521,2.531890,9.468900,-7.466370,8.135493,2.192058,-7.913973,-9.423556,2.233198,-7.226871,-6.509098,3.390023,9.600634,8.814931,-8.837615,-4.832639,8.927446,3.266986,7.690519,-6.048258,6.761892,4.956962,-4.460776,1.759900,9.018721,-2.498264,-7.919090,-9.936894,-6.818891,1.568943,2.315974,3.224484,8.039127,5.187218,-4.539419,-5.793557,1.960106,3.365942,6.157885,8.404101,-6.901166,-7.279258,-8.237480,-1.781174,2.851230,1.450675,-3.846726,5.789841,1.931168,-1.803718,-8.440568,-3.614686,-6.291190,0.051751,-5.464635,-1.772367,9.906647,5.982399,8.187133,-0.766596,2.482350,2.650785,-4.011722,-3.784403,2.673025,5.371793,1.239310,-4.945008,5.445784,6.714710,-6.700915,-1.697759,-5.833217,7.251111,-3.429637,-6.487525,-8.409038,7.868610,-9.773863,-1.181693,-3.433895,7.716796,6.313757,-9.682295,-3.720919,-8.646634,6.311743,-3.695697,-6.359540,-4.795227,9.918149,3.152412,-3.147454,3.027857,-7.145303,7.168284,4.137722,-8.975640,-9.275677,-1.949052,-4.345021,0.043858,4.162716,5.601638,-6.332005,-9.583755,1.577816,7.385132,-0.459136,-1.098547,-2.702551,-9.885325,0.866480,2.187324,5.117809,-7.720572,-4.954933,6.506688,6.230932,-0.273060,-9.124348,9.504236,-1.781958,-4.066719,0.902530,8.524698,-0.863817,-6.860484,-8.566290,7.856660,0.078260,4.488036,3.340546,2.492538,4.853979,-1.202979,7.181946,2.310336,-4.361846,-6.633984,2.370535,-6.169830,3.820038,6.912476,-8.404353,4.165188,-6.953451,8.125209,-3.094055,-5.195803,-7.778995,2.659868,-1.336370,0.895998,-1.378810,3.842940,0.413792,1.197258,-9.656495,-2.119362,0.806626,-9.821254,-2.266184,-8.337256,-6.017882,6.947718,7.540400,-7.394969,0.461205,6.321248,-0.389700,0.174062,-4.463585,-9.500249,0.973083,7.064528,7.290504,-5.211416,6.059022,-3.283386,0.014053,9.179501,-7.284978,8.505836,2.976242,-4.175244,0.059651,-5.536716,-0.304711,-4.967599,2.975733,0.426965,2.771914,5.293147,-7.154476,-2.320291,0.399344,-6.886353,-8.854598,5.274326,-3.244953,1.057726,-3.126860,0.840358,-8.219551,-9.823958,8.959467,-2.986089,-2.774379,-8.933435,3.325317,-3.161858,-4.308012,5.692607,-6.733663,-4.752199,-7.483044,-8.993000,5.868324,8.386187,8.084775,-3.029501,8.758267,3.755631,-2.195920,-4.537823,5.298949,-5.417085,-3.648757,-6.397457,-3.783061,8.021553,-6.988374,5.226979,-2.001259,2.948154,0.290278,-8.067163,8.587442,-2.710683,1.517949,1.633819,0.633908,-7.711578,8.708774,8.418318,-7.070186,-7.184081,-0.144433,-0.649002,2.698020,7.129204,7.431952,9.193353,8.793782,-5.651630,8.671591,4.736351,1.026248,-3.670736,-5.192041,5.276026,-8.961180,5.200297,1.334441,6.590144,-7.577267,4.635509,3.457246,-5.901992,-5.898347,6.873032,-9.904193,6.686638,7.580736,4.872150,4.464626,-1.413825,-0.634725,-9.843858,2.105203,-7.045803,-4.013001,-0.294033,4.531069,4.480206,6.513663,2.088303,8.889349,-8.198848,-1.921913,4.134656,-0.692973,4.205347,7.116513,-1.281135,-0.086723,-0.615251,8.491396,-1.359270,2.179471,-0.508440,-4.736164,8.087339,-7.390319,-2.679923,1.408380,-4.477171,1.643017,-8.261988,-0.217094,-7.695344,-4.351371,3.218246,4.190528,-6.323205,7.106903,3.632692,-7.861245,-2.000500,-5.824769,4.672677,-2.801971,2.427681,1.847314,-0.756100,4.781103,-9.800106,-0.707172,2.116967,9.154464,-5.413811,-5.947410,5.364309,-6.361987,-4.103317,-9.927984,-9.553412,8.595893,0.407208,-2.126291,-3.737344,-4.992146,6.003664,4.794976,-3.404317,-1.643802,5.104978,-9.094979,6.455416,-1.831900,-2.225771,8.098609,1.491049,-6.321564,3.141888,9.135832,-7.015183,2.335030,-0.415621,-2.649466,3.598026,8.896447,-7.240489,0.677454,5.053448,9.475540,3.972127,-4.704856,6.796621,5.555907,0.590549,9.996263,-9.874761,9.172817,2.786795,0.857893,-9.762593,8.245449,-9.678396,-4.639908,6.902410,6.390898,-6.662497,4.157451,6.665202,8.254386,6.897460,-1.433753,2.965856,-6.267283,-6.637750,7.147223,7.478718,1.426925,-2.070381,1.278802,1.484736,-0.426475,-5.956183,8.325585,-9.441489,4.119342,9.297619,9.994913,8.415547,5.033487,2.735811,6.761299,-6.207310,-8.456802,-4.161480,-8.602639,8.125808,-0.200772,-2.056786,6.973721,-1.336769,8.068602,-8.816670,-0.192782,-4.083152,4.134591,-0.842190,-8.955657,3.040824,9.586061,-3.347300,3.840615,-1.496924,-9.696302,-7.877546,4.111287,-6.114502,-8.952604,7.767648,-8.170996,2.965172,0.404806,-6.947850,-0.200019,1.757998,-9.309525,6.561901,0.552048,4.427212,-7.336104,9.384461,-3.789071,-8.815642,-2.887536,0.399485,-3.638057,5.576248,-7.469952,2.765125,4.343857,1.843285,3.554576,-6.314418,-7.717420,-4.128658,6.352163,2.070531,3.456008,-0.179772,8.562576,-2.532913,-7.158858,-9.734918,-1.501779,5.610460,-0.093837,5.669892,6.449467,-8.363842,2.046228,8.543358,-7.876725,-4.621451,-0.818727,8.432872,-1.435605,8.199955,1.416619,6.347213,-3.067363,-5.529856,8.391531,-5.503112,1.657092,6.761176,2.012735,2.581773,3.815957,3.493748,-8.397662,7.931510,-9.949929,-0.427695,-2.014116,6.153976,-2.431164,9.916829,6.677430,3.645051,-8.408912,4.510437,0.443782,2.761996,-5.250487,-3.152306,-2.095631,6.864148,3.025039,-1.266171,-2.662954,-6.357354,5.879709,-0.885884,0.680701,1.784337,-7.364846,3.612975,3.387648,-4.484817,7.484576,0.037775,6.397483,-5.252988,-3.829501,-6.220882,3.309901,9.947464,1.160912,8.078990,3.074204,-8.257320,-5.957412,4.092900,2.205106,1.238071,7.000415,-3.694572,-9.738351,0.924882,5.768757,4.161853,-1.899859,-6.437139,-5.801171,-5.175700,-9.334083,-3.916773,-5.688901,3.503104,6.659724,-0.080518,5.779691,7.042448,3.343787,-0.727117,5.846463,8.134040,-8.521687,1.460128,-6.313283,9.620471,-8.684126,2.729794,6.779039,-1.262448,2.580806,9.987660,5.206437,-6.442266,2.160920,-0.959526,-0.906238,-5.952651,7.224983,-4.465793,3.320763,-2.268650,2.969816,-9.753750,-2.455068,1.075190,7.952492,-9.019963,-0.270128,-3.974214,4.731955,-6.789128,-6.378413,2.979886,-2.229814,2.207677,3.631705,9.988876,5.818898,1.072045,1.851969,-5.251069,-2.208841,0.724223,4.860229,-8.737466,-9.510003,0.787253,-0.872762,-9.909086,-4.455683,-7.422413,-1.242054,-3.510322,-0.816830,9.771471,-7.593071,-3.481455,8.548192,3.624813,6.239875,5.623447,-3.914347,3.093092,4.401535,2.033189,9.905845,6.469950,-3.212617,-4.363263,-2.920353,-5.114806,6.451782,5.665071,-3.810805,9.118437,-7.585242,-9.121606,4.636377,8.205702,7.854802,-1.260499,5.945673,-9.521794,7.962856,-8.719858,4.667027,4.359755,2.171726,3.846080,9.904045,-0.952732,1.394037,7.002385,-7.033490,-4.401408,1.922982,-5.760292,-3.155500,-5.535687,9.342417,6.433100,9.164767,2.645476,2.567411,0.059541,-6.693348,9.982624,-5.097219,-5.144337,7.115331,-8.822640,-8.829724,2.031425,-1.175147,-0.641206,-1.984529,-6.065030,-4.066164,9.834011,-9.662459,1.118217,-5.322287,-0.705024,0.241295,4.588578,1.976008,5.189267,-8.847480,7.312878,7.534966,5.200884,9.904137,6.813650,8.477771,-3.579404,1.084139,-5.013737,-5.058285,-8.089072,-2.987629,-3.537805,-1.275129,1.928937,3.160727,4.498942,-4.058394,-9.002193,-1.971733,-2.826678,-7.148321,7.719407,-1.361334,0.089183,-0.062518,-4.989426,5.191549,5.180336,-9.153152,7.325644,0.394634,-0.331920,8.683682,3.711814,7.107755,6.725322,-4.135110,9.244010,3.745420,6.028638,8.181232,-6.574131,5.722196,-3.794320,-8.533783,1.865793,-9.142589,6.578414,-6.521355,6.516070,-1.000416,-8.600449,4.243800,9.456135,-5.661258,-9.002698,-6.318321,6.130959,-7.367089,-7.860714,8.365291,-9.753448,7.369779,2.168295,7.544072,3.139562,8.415900,-2.858711,-9.615973,5.806409,0.165871,-5.261861,-8.085211,7.948262,5.378546,1.592819,0.099288,-0.341703,-8.007401,-1.552179,-1.384124,7.971699,9.326441,-4.682810,-3.719929,7.742354,5.849845,3.974495,6.239454,0.751318,-8.898927,8.869265,-7.601770,5.840597,6.956490,-2.767390,2.527211,7.909361,-8.151797,-6.200771,-1.404539,-4.486458,0.099426,3.536007,-6.466633,2.359195,-1.477471,-9.751889,-0.493504,7.324183,0.049042,8.379541,4.077056,-5.842095,-7.585015,-3.462775,-6.064186,4.246064,7.025708,-5.042604,7.357977,-9.250685,-9.960707,-5.725066,-9.287114,-8.747673,-0.895054,0.465636,-9.427565,3.178087,-7.618872,5.756708,-4.451822,7.565787,-0.394117,7.778810,0.552576,3.083428,-2.853652,3.666800,5.022581,-5.776415,6.186411,7.117578,5.512638,5.249110,5.681857,-1.901613,0.162270,1.947080,8.709493,4.363394,-6.985132,-4.253210,-3.096996,-9.638414,5.070845,0.802692,-2.217781,0.439279,8.483598,1.215849,3.563409,-3.676666,1.990594,-2.528545,-7.514595,-6.911194,-0.734200,5.058395,-8.426552,-2.905554,3.877884,-8.615676,3.535381,1.657343,-5.550365,9.057749,8.875663,-5.588305,2.883819,7.451035,-1.379921,-6.412204,6.687735,-7.422848,2.110259,3.196824,-6.989323,-8.400686,9.633266,2.470905,3.665348,-2.911438,-9.734184,4.382627,7.225780,-1.758106,-4.213648,9.088363,-1.682212,9.428962,-3.020763,-0.636567], dtype = "float32")#candidate|1544|(1800,)|const|float32
call_1542 = relay.TupleGetItem(func_1021_call(relay.reshape(var_1543.astype('float32'), [2, 3, 8]), relay.reshape(const_1544.astype('float32'), [1800, 1]), ), 2)
call_1545 = relay.TupleGetItem(func_1025_call(relay.reshape(var_1543.astype('float32'), [2, 3, 8]), relay.reshape(const_1544.astype('float32'), [1800, 1]), ), 2)
var_1546 = relay.var("var_1546", dtype = "float32", shape = (11, 8, 15))#candidate|1546|(11, 8, 15)|var|float32
bop_1547 = relay.right_shift(uop_1530.astype('uint16'), var_1546.astype('uint16')) # shape=(11, 8, 15)
output = relay.Tuple([call_1542,var_1543,const_1544,bop_1547,])
output2 = relay.Tuple([call_1545,var_1543,const_1544,bop_1547,])
func_1551 = relay.Function([var_1529,var_1543,var_1546,], output)
mod['func_1551'] = func_1551
mod = relay.transform.InferType()(mod)
var_1552 = relay.var("var_1552", dtype = "float32", shape = (11, 8, 1))#candidate|1552|(11, 8, 1)|var|float32
var_1553 = relay.var("var_1553", dtype = "float32", shape = (48,))#candidate|1553|(48,)|var|float32
var_1554 = relay.var("var_1554", dtype = "float32", shape = (11, 8, 15))#candidate|1554|(11, 8, 15)|var|float32
output = func_1551(var_1552,var_1553,var_1554,)
func_1555 = relay.Function([var_1552,var_1553,var_1554,], output)
mutated_mod['func_1555'] = func_1555
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1648 = relay.var("var_1648", dtype = "float32", shape = (7, 1, 9))#candidate|1648|(7, 1, 9)|var|float32
var_1649 = relay.var("var_1649", dtype = "float32", shape = (7, 3, 9))#candidate|1649|(7, 3, 9)|var|float32
bop_1650 = relay.subtract(var_1648.astype('float32'), var_1649.astype('float32')) # shape=(7, 3, 9)
output = relay.Tuple([bop_1650,])
output2 = relay.Tuple([bop_1650,])
func_1664 = relay.Function([var_1648,var_1649,], output)
mod['func_1664'] = func_1664
mod = relay.transform.InferType()(mod)
var_1665 = relay.var("var_1665", dtype = "float32", shape = (7, 1, 9))#candidate|1665|(7, 1, 9)|var|float32
var_1666 = relay.var("var_1666", dtype = "float32", shape = (7, 3, 9))#candidate|1666|(7, 3, 9)|var|float32
output = func_1664(var_1665,var_1666,)
func_1667 = relay.Function([var_1665,var_1666,], output)
mutated_mod['func_1667'] = func_1667
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1672 = relay.var("var_1672", dtype = "float32", shape = (14, 2, 4))#candidate|1672|(14, 2, 4)|var|float32
uop_1673 = relay.asin(var_1672.astype('float32')) # shape=(14, 2, 4)
func_1340_call = mod.get_global_var('func_1340')
func_1343_call = mutated_mod.get_global_var('func_1343')
const_1678 = relay.const([[1,9,9,-6,8,-10,-7,6,9,-10,-1,-8,6,-7,-9,-1,2,6,9,6,3,6,9,7,10,-10,-6,5,-8,1,5,8,3,9,-5,9,-3,7,-9,-3,4,9,-4,3,9,9,-5,1,2,-10,-5,4,6,-3,8,5,9,-3,10,-5,10,-3,1,-5,-4,-10,1,-10,-7,-1,6,8,-10,6,-9,-9,5,5,7,-10,4,3,-4,-2,3,8,1,-5,-9,3,4,-8,-5,6,3,-5,6,2,-1,2,2,-3,6,-4,-1,-2,8,-5,-2,-6,-6,4,9,5,2,3,-7,-7,-6,-9,-7,-3,2,-9,-8,-1,-6,-8,1,-4,-1,7,3,5,4,-6,7,-9,5,7,-2,8,5,2,9,9,3,10,-9,-5,10,-5,9,10,-1,-9,-5,-3,-5,6,-3,6,10,-1,-4,3,8,-1,-1,2,7,-7,8,-3,-6,-9,-2,4,4,3,2,9,6,-8,2,1,1,2,-9,-4,-1,-2,9,-7,3,-10,9,-6,1,2,-4,-3,-2,-2,-9,5,-9,-3,5,3,3,5,-3,5,-5,-9,3,-1,8,-5,2,-7,9,1,-3,3,6,-7,9,4,10,-10,-7,7,6,2,-4,-1,10,-10,-6,8,1,2,-7,3,-10,-2,7,2,-5,-1,3,3,-4,6,-8,-2,8,-10,-10,6,-7,9,-10,-7,-7,-4,-2,6,2,6,4,8,3,1,-10,-5,5,-2,7,8,10,4,10,6,2,1,-1,2,-6,7,-9,-4,-6,-9,-8,9,-10,-9,-5,-4,8,-4,6,-1,8,10,-10,-4,-3,-3,10,10,-7,4,-8,8,4,5,8,4,-5,5,-9,4,-2,4,9,5,4,7,-6,8,-8,1,10,-4,-10,-10,10,10,3,5,7,-7,9,-1,-8,8,1,-4,5,-5,10,3,-3,3,6,-5,8,-3,5,-4,4,-9,-1,5,-2,2,-10,-2,-9,-9,3,-7,-6,-9,-4,-6,-5,3,-9,-2,1,-10,1,5,7,3,8,2,-10,-8,4,-3,8,-4,6,-5,4,-9,-9,4,-10,7,-9,-3,2,3,5,6,6,8,8,1,1,6,6,-8,-7,4,4,4,1,1,-5,-7,6,3,9,7,-3,9,-1,6,2,3,-9,3,4,4,-10,2,-6,-2,-8,6,2,-3,-4,10,-2,3,9,1,-9,-3,-8,7,-2,1,-9,-3,4,-3,-8,-4,5,-2,-3,-8,-10,1,7,-3,8,9,1,-6,2,3,2,10,5,4,7,-10,2,-6,-1,8,-3,7,-10,10,4,-2,1,6,6,-3,9,-1,-7,1,-5,7,9,1,9,-3,-7,9,-9,-3,2,-9,3,5,-6,-10,-7,-9,3,6,-3,4,4,-7,6,-9,10,-3,-7,-5,-3,3,1,6,4,-5,1,-7,3,-7,6,9,-3,8,-9,4,-7,-3,9,-4,1,9,9,6,-2,2,10,-5,-4,-4,8,-6,-5,3,10,8,-7,5,5,-9,-6,-6,-2,1,5,-10,3,8,-5,-5,-10,-8,4,-4,-7,-7,-6,1,-5,4,8,-3,-10,-3,3,1,3,-10,-5,5,7,-4,6,-3,-8,8,-2,10,-3,-8,1,8,1,10,-2,7,-8,4,-6,2,3,3,5,7,6,-2,5,2,8,1,10,9,8,-1,-8,2,7,7,1,-7,9,8,1,-1,4,9,1,2,-1,8,8,-3,5,4,-5,-5,-2,10,4,10,-5,-4,9,6,8,1,3,-8,5,-8,-5,-9,-5,8,-2,7,-1,4,6,-8,-5,10,-5,8,-2,-2,-9,-4,10,4,-4,1,-2,5,-6,-4,-4,-9,-5,-8,-3,-6,1,-9,-5,7,5,-7,1,-7,-5,-8,-5,5,-5,-7,-3,-1,4,-7,4,-8,-2,-6,-5,1,-3,-8,-5,-6,-7,-9,5,-5,1,-8,8,1,-1,4,-9,-9,-4,-9,-9,9,10,-6,-9,6,7,-6,1,6,6,1,4,8,-4,-7,5,-1,-6,-10,10,-7,-1,3,-10,-4,-10,4,5,-2,-10,-6,-4,10,5,-5,7,3,4,-9,-6,3,-10,-10,8,5,-8,4,9,-4,-5,9,-2,1,-10,-4,-7,-2,3,-3,-1,-10,-1,-5,-8,5,9,-7,-8,-8,-1,7,-9,-5,1,3,6,5,6,8,-8,-7,-6,-7,-5,5,7,-3,10,-9,6,5,3,-1,-7,-3,9,1,8,-10,-4,10,6,10,-3,-7,10,3,1,2,-5,2,-9,-1,-2,2,7,-7,-5,-9,5,9,7,9,-8,-5,-8,-8,1,-7,-2,8,1,2,-2,6,6,-1,9,-2,-10,1,5,8,9,-10,-4,-8,-2,3,-1,9,6,10,-1,6,9,-1,7,2,-5,-6,-9,-6,-7,6,9,5,7,-3,-8,-10,-6,-5,2,-8,-10,-8,1,3,-10,-5,-4,6,-6,2,10,4,4,-9,-7,-3,-1,9,4,9,-10,-5,-5,-8,2,6,1,-7,9,3,-5,4,-9,10,-4,-7,3,9,-3,-10,6,-8,-6,-5,-3,3,-5,3,-2,7,-4,-10,-8,-7,-5,-7,-3,-1,-10,-7,5,10,-9,-5,-8,8,-9,-10,-7,-10,-6,-7,-2,9,5,4,6,-9,8,7,-8,-9]], dtype = "int32")#candidate|1678|(1, 1008)|const|int32
call_1677 = relay.TupleGetItem(func_1340_call(relay.reshape(const_1678.astype('int32'), [14, 6, 12])), 0)
call_1679 = relay.TupleGetItem(func_1343_call(relay.reshape(const_1678.astype('int32'), [14, 6, 12])), 0)
output = relay.Tuple([uop_1673,call_1677,const_1678,])
output2 = relay.Tuple([uop_1673,call_1679,const_1678,])
func_1683 = relay.Function([var_1672,], output)
mod['func_1683'] = func_1683
mod = relay.transform.InferType()(mod)
var_1684 = relay.var("var_1684", dtype = "float32", shape = (14, 2, 4))#candidate|1684|(14, 2, 4)|var|float32
output = func_1683(var_1684)
func_1685 = relay.Function([var_1684], output)
mutated_mod['func_1685'] = func_1685
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1687 = relay.const([[[-6.201846,-7.480997,-3.090894,6.564787,-4.089441,2.590157,2.718376,4.453531,-2.343070,-9.305089,8.910707,-1.289455,5.534679,-1.494208,-3.935585],[-3.408263,1.527013,-7.912483,-1.045838,7.577703,6.909878,-3.931228,7.154615,8.463228,0.753295,-8.899191,-3.283012,1.501230,7.224553,-0.001661],[8.402575,4.087256,-1.838861,-0.973778,1.298562,0.658851,-2.002495,7.795044,5.995738,4.786072,-8.197135,4.416026,-0.832768,-1.065333,-3.971960],[-9.673795,-1.643232,-1.348550,7.006374,7.070831,3.493616,9.710434,-8.979897,0.507695,1.781509,-6.639455,-0.434074,2.631874,-7.467204,4.011978],[-7.798104,-7.976998,8.760623,4.328951,0.622582,6.401813,8.632816,9.027557,2.889974,9.753532,1.786534,-4.231935,6.095841,6.884004,-6.157769],[4.727395,-0.471230,3.068617,-9.047574,-4.792530,9.994010,-5.301614,-1.937006,-7.396181,-7.400207,8.044675,1.234646,-1.888231,8.764464,-4.306653],[-1.891631,-2.545628,0.449056,-4.897682,1.332872,0.121971,-9.719988,0.894168,4.389660,-4.249944,-9.447358,-1.648870,4.615186,-2.154821,-4.818034],[-8.563676,-7.493058,7.511102,-9.745956,-1.372219,-0.796547,-6.069797,7.682483,1.132918,5.002725,5.542316,2.166142,5.877519,-6.821167,0.553516]],[[-7.596433,7.736574,6.877401,-6.811346,-0.057379,4.868989,5.717918,5.558128,3.832700,1.328294,-4.929017,-2.902005,-9.209416,-7.434158,-1.095045],[1.993602,-4.359170,8.968820,0.854390,5.769506,-9.623727,-7.894998,4.947808,3.058489,7.148995,4.765937,4.008651,5.812338,-6.555502,-8.853858],[-6.481110,1.656746,-0.903974,-0.583307,5.520056,3.961832,-5.637335,8.006733,1.146141,-4.464361,7.611700,-9.552244,-4.228663,9.229993,4.399554],[9.090712,0.348106,-8.964225,6.593798,-6.447225,0.191766,8.837547,4.553007,8.858476,9.107985,1.378836,5.556646,9.427547,-9.454063,-8.589674],[-5.598541,8.859826,9.108197,1.151449,-8.444572,5.830163,3.178723,6.813190,7.312322,1.027997,-7.304012,1.961344,-0.349190,9.158666,7.466817],[-3.786816,2.310816,-9.469467,-6.618394,-3.987240,1.999804,-7.690701,-4.008129,6.183544,-8.818787,-3.108209,-4.936085,-2.071430,-3.735636,3.233601],[-7.062361,6.150288,6.534776,-8.798424,5.481544,-3.958238,-4.454916,9.020449,-4.011316,-4.163372,3.274324,2.217604,-5.818118,-4.368133,-2.210963],[6.187832,0.401244,-5.390271,-7.247012,-0.916197,8.434814,-4.194480,1.080178,-3.511787,-1.863520,-7.085258,3.817203,0.519533,-4.577027,-0.228975]],[[9.238598,2.537436,-3.604005,4.048767,-0.403721,-7.025477,-5.869585,6.009402,-4.991023,1.880417,-4.156913,-8.714933,-2.421945,2.802705,2.797767],[1.303091,5.891012,-7.146152,-6.366408,-1.511514,7.670010,9.614005,8.170963,-4.798828,-0.845195,6.142344,5.067816,8.742092,3.897879,-0.906231],[-6.761149,-1.378114,-9.660559,-2.730165,-0.512898,6.878030,1.707261,-7.224365,3.334470,5.626758,-3.834432,-4.643615,-8.369346,2.391792,9.116468],[6.710929,3.283222,2.968281,-3.773220,0.332141,6.570880,-1.399761,2.562282,6.630374,5.393594,-8.853277,2.591363,-4.517522,-2.543534,-0.594526],[6.146817,-2.799541,0.101425,9.519581,4.362224,-2.996747,0.210821,2.974211,1.228864,-7.768501,0.315019,9.115818,2.134675,6.812780,0.464958],[3.927422,3.855628,-1.059455,-8.026202,-2.462909,-2.561637,-9.333598,9.373993,-9.492382,-2.546148,-9.258960,3.672594,5.599920,0.455582,6.848938],[-4.524494,2.047780,-2.231318,-0.625801,0.715118,-1.080722,6.594802,-3.697958,-5.694960,-9.234689,4.889235,9.995026,-8.992834,7.802131,4.582445],[-4.787492,-3.620368,4.344311,9.302339,1.516884,-0.216648,-1.986929,-3.828108,-2.966464,9.999213,3.204168,6.568058,-7.893258,3.804462,8.565698]]], dtype = "float32")#candidate|1687|(3, 8, 15)|const|float32
var_1688 = relay.var("var_1688", dtype = "float32", shape = (3, 8, 15))#candidate|1688|(3, 8, 15)|var|float32
bop_1689 = relay.mod(const_1687.astype('float32'), relay.reshape(var_1688.astype('float32'), relay.shape_of(const_1687))) # shape=(3, 8, 15)
output = relay.Tuple([bop_1689,])
output2 = relay.Tuple([bop_1689,])
func_1695 = relay.Function([var_1688,], output)
mod['func_1695'] = func_1695
mod = relay.transform.InferType()(mod)
mutated_mod['func_1695'] = func_1695
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1696 = relay.var("var_1696", dtype = "float32", shape = (3, 8, 15))#candidate|1696|(3, 8, 15)|var|float32
func_1695_call = mutated_mod.get_global_var('func_1695')
call_1697 = func_1695_call(var_1696)
output = call_1697
func_1698 = relay.Function([var_1696], output)
mutated_mod['func_1698'] = func_1698
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2016 = relay.var("var_2016", dtype = "uint32", shape = (12, 8, 6))#candidate|2016|(12, 8, 6)|var|uint32
var_2017 = relay.var("var_2017", dtype = "uint32", shape = (12, 8, 6))#candidate|2017|(12, 8, 6)|var|uint32
bop_2018 = relay.equal(var_2016.astype('bool'), relay.reshape(var_2017.astype('bool'), relay.shape_of(var_2016))) # shape=(12, 8, 6)
uop_2023 = relay.tan(bop_2018.astype('float64')) # shape=(12, 8, 6)
output = uop_2023
output2 = uop_2023
func_2043 = relay.Function([var_2016,var_2017,], output)
mod['func_2043'] = func_2043
mod = relay.transform.InferType()(mod)
var_2044 = relay.var("var_2044", dtype = "uint32", shape = (12, 8, 6))#candidate|2044|(12, 8, 6)|var|uint32
var_2045 = relay.var("var_2045", dtype = "uint32", shape = (12, 8, 6))#candidate|2045|(12, 8, 6)|var|uint32
output = func_2043(var_2044,var_2045,)
func_2046 = relay.Function([var_2044,var_2045,], output)
mutated_mod['func_2046'] = func_2046
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2616 = relay.const([[-7.560281],[0.106702],[-3.442325],[-4.521861],[5.946416],[2.305378],[9.675643],[9.146452],[-0.927946],[-0.017354],[-1.117983],[-9.104553],[-9.964517],[8.586729]], dtype = "float32")#candidate|2616|(14, 1)|const|float32
uop_2617 = relay.rsqrt(const_2616.astype('float32')) # shape=(14, 1)
func_1021_call = mod.get_global_var('func_1021')
func_1025_call = mutated_mod.get_global_var('func_1025')
const_2628 = relay.const([-5.374709,6.256208,-0.207172,6.820844,8.086190,1.875091,5.010492,4.851600,9.987315,-5.550874,6.139159,3.324313,-4.181436,-4.667314,9.585641,0.955737,-5.759307,-5.800749,-6.914655,6.881736,-6.158078,5.145894,-1.535478,4.699619,-7.568854,-3.623678,0.705511,-2.799528,-3.182574,5.836769,3.906530,3.864835,9.082954,1.003448,-7.532906,0.405850,0.207175,-1.161962,4.887956,2.036040,5.113861,3.303137,-3.604475,-1.036066,-2.000009,-5.760941,7.114782,3.753567], dtype = "float32")#candidate|2628|(48,)|const|float32
const_2629 = relay.const([-5.190956,-7.987174,-0.651794,4.721342,-5.969952,1.016708,-4.396631,-7.146837,-0.917157,7.354760,-9.844184,-2.892092,8.915791,-0.935648,-3.201620,-4.263853,-1.832079,0.462765,-7.559065,-6.739687,8.193444,-1.003010,-6.000819,-5.895602,-0.886688,-5.937811,7.068763,-0.180187,-9.850147,-2.705671,0.180744,8.589666,6.965691,-4.752607,6.660507,5.725270,-9.183322,-6.116992,-4.523927,8.440434,-5.590865,-9.596425,-7.604123,3.737071,0.248288,-9.336311,-2.081833,1.674762,-9.038704,0.234208,-2.404340,-0.417293,0.736145,-3.581652,-7.810298,-2.517357,6.951037,-0.836888,1.906866,-5.093464,2.974353,6.550171,2.214864,-9.640381,-2.351664,8.848352,-5.386961,4.287276,6.669931,9.846748,9.344945,-2.330816,-2.630632,-8.402188,-6.707432,4.111219,8.440179,-1.675780,0.040600,-2.091299,-1.355212,-1.840395,-8.284836,-9.580574,2.023721,1.652630,0.749563,4.620452,-5.064231,8.475955,3.813203,3.964628,0.001857,0.917956,-5.337312,-1.379462,3.945135,6.717921,-9.914322,9.726757,0.462697,-0.084167,8.251586,7.942490,-7.434113,-9.642008,0.975990,-2.542148,1.280776,8.789537,-2.497061,0.487348,-0.650371,0.960809,-5.270499,7.832337,7.678246,4.825599,2.128357,-3.667229,9.755463,9.060146,-3.037389,-7.272069,9.730509,6.762437,3.313431,-1.984276,8.467033,4.250061,-9.215249,-2.549751,-5.894424,-3.744779,-5.997683,9.649259,-9.821839,-7.276262,5.493580,-0.175924,-5.989880,-3.630055,-2.365368,9.887971,-0.777111,-3.672004,5.020395,-5.419788,-0.002697,-5.247528,2.200267,-8.768632,-1.939746,1.637708,0.257792,9.090604,1.569561,-2.059516,-5.117902,-0.967454,-5.146788,9.813302,2.754442,4.395116,2.803619,-0.925488,-9.675254,-6.180677,7.673576,-0.568153,0.226568,-9.571437,6.355329,5.614536,-0.013747,-2.733316,-2.185210,0.582657,1.442048,2.276814,-4.289427,8.204607,-1.360210,6.658193,2.751064,0.015562,8.376075,-4.148445,-2.449036,-5.460607,7.609931,0.581500,1.328142,3.754964,7.615257,6.473800,-0.467435,-2.620653,-0.893479,-4.466548,9.242806,-5.943151,9.974320,6.675675,-6.061369,-3.202325,-9.034900,9.689370,-8.006526,-6.233841,4.107068,5.212987,9.987290,5.207274,-5.325253,9.218964,5.550861,-2.065585,-6.751571,-1.069918,-7.045971,-0.575572,-6.155753,-4.383028,-3.810361,-2.723784,-8.977436,2.978861,-6.476521,8.926081,-7.374679,-4.049657,-8.726987,-0.157785,9.519997,-5.809726,-5.231178,-6.878882,-2.611073,7.790618,-7.545625,4.975984,-1.871542,-1.629786,3.641592,4.691883,-3.337690,5.448869,-5.989695,-8.289106,-6.654504,0.623744,2.243975,2.460676,-3.565310,0.391191,-9.550746,1.527443,0.439013,2.466217,6.845810,8.302343,1.541656,7.448499,-0.586662,8.364970,-4.423525,2.769037,-1.468437,1.493349,-6.194128,3.649872,0.084017,2.135874,-0.946301,4.054190,8.024765,-4.829528,1.848356,-9.678768,0.204851,-2.079137,7.399303,2.938820,-0.847898,-5.576089,9.693442,-1.679887,4.660629,-3.309501,-8.236419,6.508149,-3.097263,-5.381008,2.230840,6.365514,-6.548378,-2.083101,-1.995850,-1.680138,3.949126,8.467927,-1.605711,6.932434,1.797552,-0.642021,-3.556837,5.871978,0.724995,-5.831256,-9.836885,2.082499,-2.972344,-6.373852,7.421023,7.545725,-8.922296,-3.593085,-5.388527,-8.786443,8.205098,-1.265401,-9.741516,-3.817570,4.149248,8.339416,-3.269898,4.342071,-3.182196,8.170818,-3.152470,-8.410397,2.067591,3.970221,6.798219,4.952717,-2.434908,-0.250131,5.344664,-7.802059,2.235894,4.339016,-2.675637,-8.969215,-4.245327,2.082730,3.547390,9.367000,-6.297161,-4.908337,-4.518211,-2.927766,4.296592,-3.430418,5.678249,-1.359886,-5.341529,-1.079262,-9.698328,0.558930,9.862191,5.397441,0.924891,5.837940,0.995908,2.693541,-2.619665,7.258378,-6.373214,-6.668272,-8.305321,-2.823014,-2.557038,-1.815774,-0.861713,-6.759851,-9.348575,-3.917713,-2.390843,2.530363,6.553074,-3.155575,-7.744531,-3.733891,5.960971,-1.112902,8.617150,-1.241886,1.223842,-5.061058,-8.787093,6.093000,-0.558001,-8.423684,-7.432173,-3.346224,-4.299078,8.138867,-3.180359,0.825860,-2.146197,-3.154649,6.731977,-0.362949,0.417477,-9.974254,8.249533,-8.326879,5.235039,-9.001289,-2.212556,4.060348,1.125713,2.667810,-5.266696,2.504605,-9.999885,-2.485683,-1.153110,-4.771642,6.982165,-9.964718,4.342319,-0.538477,9.127950,-6.825772,-3.334087,3.428932,-0.187921,5.297503,4.390900,4.138572,-8.762802,5.858310,-1.281694,-8.545299,-9.737506,-1.930736,1.566108,-1.383760,-9.641129,-2.313153,9.386878,-9.581460,-4.965007,-8.768196,1.872573,7.442732,-7.017137,-4.639574,9.770206,-1.153631,0.115641,0.484008,-1.712171,-8.189510,-9.394625,8.746039,-7.083847,9.652173,0.463889,-9.010143,1.583433,9.153830,2.851499,1.391455,-1.748682,-5.799646,-7.596880,9.390209,-3.105801,8.915524,-3.864385,-2.295338,8.582165,-0.420559,3.105133,1.873598,-2.698938,-4.672738,-5.725450,-7.261635,-4.654979,6.599385,-5.235718,7.154520,-9.311389,8.243786,1.597387,8.861712,7.610276,0.559293,-6.318204,-7.987188,4.799453,-7.750050,-5.017738,8.485329,-2.285839,5.453593,6.132523,8.935286,-9.701988,-3.078811,-0.388352,-7.895922,4.455894,-0.322038,-6.812414,4.237185,-0.327299,0.421879,-1.798144,2.174206,9.894630,-7.557710,6.027574,-3.840775,-2.945599,6.807357,-5.133736,9.733765,1.431743,-7.419254,-8.098815,-2.254992,2.293138,2.116203,-9.138432,-7.191503,7.580640,-6.492414,-6.479590,-6.176749,3.584902,4.472780,5.359351,-5.069156,4.745762,-9.365799,-6.299989,-7.793350,1.797034,8.573642,-0.549893,2.929554,-5.392458,-7.845971,7.007969,-7.372967,-3.140913,-6.742560,-8.240962,-5.613145,0.422200,1.746506,0.934564,-3.766938,4.137095,-5.099134,4.663371,6.216184,3.887326,5.856757,5.645669,-6.934970,0.568136,0.373457,0.132467,8.227344,0.985772,-8.652304,-6.715527,0.675748,-8.583697,1.415840,0.019776,-9.205984,-2.137119,8.045869,2.526310,7.220642,4.215413,-7.632856,7.021283,0.042189,-0.113837,1.908017,-9.776618,-6.177609,2.633428,6.608679,-6.943121,0.416961,4.362247,-2.009632,-7.297118,1.875989,3.298628,-2.537824,-4.556037,2.713014,3.713808,4.013968,2.653594,4.917068,-4.404802,0.020525,-1.537244,8.931329,-9.262873,-5.373144,-5.260022,-2.439080,1.143761,-8.689046,-5.248868,-1.885489,-5.065488,-9.112674,6.392521,-3.442467,-1.222119,-6.542384,0.981537,-6.779102,-2.973767,-7.815520,-1.965715,-3.656994,-9.008418,6.121752,-8.755947,-8.525126,-5.052834,-8.246711,-0.086774,5.174945,-5.901960,2.679963,7.362632,3.101406,-5.948369,-9.768134,-3.881157,-7.542236,4.130709,-0.778229,1.484422,8.850716,6.632735,2.505106,-7.922922,-5.904376,0.490359,-7.490581,0.932273,-9.370916,-2.836916,-5.187501,2.782799,8.716386,6.648020,-4.567463,-6.378081,-3.619995,5.737922,-3.585863,-1.375524,-2.342428,-6.993834,-1.761183,9.641841,-3.512951,-0.222732,-4.496629,0.728031,-7.739314,0.011270,-5.576313,-4.729308,9.268099,-2.465328,-8.127055,-7.867200,-2.357024,5.761951,-6.217851,3.228734,-6.786482,-7.552272,8.133671,-2.080851,-6.952808,-6.769780,-5.681574,3.820699,-7.070583,6.919536,-3.042248,-6.906004,-1.036002,9.528335,-6.147037,4.353773,-4.436190,4.097061,-8.032567,-7.275070,-1.841336,4.390405,3.075708,-2.283478,-6.266275,-5.267085,-8.287164,-1.022029,7.081843,6.905403,-7.475323,-0.608263,-0.817073,6.270688,-0.191797,1.437588,-7.274242,6.181768,9.284608,-9.772674,7.522800,-3.246390,9.225155,-6.147412,9.581587,-3.330790,3.368330,-1.354433,-8.165297,-3.807788,6.539656,8.748832,-6.643518,-2.315564,5.378185,3.515971,5.797780,-4.988908,-2.427670,3.361055,-9.833165,-7.874768,5.018037,-3.797941,-1.480003,-3.756314,-4.371809,7.848066,-8.598282,4.948077,-4.861637,-3.455042,-2.642909,-2.967234,8.781314,-1.022173,8.126973,6.260995,-6.594690,9.927637,-9.701613,-8.132756,2.246568,5.646645,4.954732,6.886825,-3.537179,-2.585846,-3.777014,5.400960,-7.264193,-8.011200,-3.533703,-0.632655,5.173896,8.934102,3.909847,-4.663818,-0.226536,-2.847228,-9.860142,4.517615,7.461016,-3.567688,8.721845,-4.467013,5.593934,9.058675,-8.950540,-2.085837,8.085735,-1.982346,-7.501532,-4.986549,-4.597838,-1.195706,-3.207580,5.419039,7.914668,-4.507909,-7.697305,2.999152,8.009576,2.918733,-6.305401,7.416176,-2.682080,4.371620,-2.980173,9.923510,-7.956669,-7.265231,3.148479,8.274558,9.292195,5.598847,-0.850519,5.229183,-3.535463,2.661280,1.531803,-9.854566,-2.905924,-4.420474,6.673324,-6.753990,7.008615,5.845032,-9.487042,-3.411527,-9.014293,9.776917,-6.996731,-8.652042,-5.038612,7.407172,-4.911440,0.998004,8.780244,2.304779,4.454565,3.364857,-5.919591,4.367389,4.396931,-7.303641,-9.695572,-6.230440,4.198627,0.844163,-2.348162,7.074353,-2.026542,-4.012482,-5.580254,2.098406,6.152697,-7.215918,5.059984,-4.952955,9.251523,-6.614455,6.656766,-1.482974,3.449240,-2.690625,6.178805,-5.669410,-7.683440,6.820154,-7.960668,-4.634049,4.175023,-7.694932,-4.243462,4.657971,0.643735,1.732267,-0.815728,9.725175,7.985698,-5.566130,0.958679,8.557433,7.405559,-1.388259,2.053237,2.302392,-6.402034,6.508291,-4.001352,-3.960484,-1.344754,-7.737788,-8.620190,-7.076622,5.594186,-2.244790,8.622257,-8.088362,-1.953687,-2.055161,6.153256,9.346200,0.430151,9.064985,7.197647,-5.756567,9.699315,7.598336,-8.036925,-4.331686,-1.315175,7.245064,-0.499050,-2.843935,-4.550143,-6.691386,-5.053282,7.980242,-8.503569,0.442559,8.841175,0.744261,7.650367,-4.080747,-0.533535,3.095274,6.646405,-3.059061,8.138007,-8.670111,8.203296,4.412467,-8.233877,-1.126550,3.347512,9.182830,4.986376,-2.125354,9.046448,-2.313131,4.898057,-1.102789,-8.205648,-1.948340,8.610884,-8.372966,8.458128,-4.156835,-3.617977,-8.009629,-2.573431,-0.152781,-9.141928,-8.209098,6.249503,3.691462,8.082137,4.731207,-3.734105,5.110557,0.718618,-2.366514,6.673615,-1.929823,8.299331,-5.680471,-2.311086,4.459518,7.148947,-8.444333,7.528239,9.527254,9.053246,-2.456190,-3.719012,0.115090,6.398541,-2.406341,-3.610048,5.097000,2.628103,-6.883107,-2.140881,-1.004323,8.437006,1.855459,-9.246052,4.024788,5.819991,2.751565,6.783605,8.761764,-8.376813,-9.240264,7.367465,1.768360,4.681559,-2.648599,7.667893,4.748911,-0.026782,0.894194,6.150997,-3.968560,6.422104,-5.000239,0.663062,0.752332,8.234389,-9.561199,0.385730,8.427798,1.081166,0.876649,-2.649567,-6.533494,3.900180,8.068992,-3.290210,8.429148,4.696109,0.865052,-9.068562,-8.781532,-2.863213,-2.503469,-0.286492,-5.902433,0.205477,6.396846,-6.977909,-3.882234,9.678982,-2.616512,-2.771898,1.950617,8.754836,-7.803202,-8.499207,3.185918,3.897542,-7.980163,2.247081,-9.317205,-9.813108,-6.696761,0.842948,-9.476659,-4.969773,-5.934602,1.546803,-0.432296,-3.647027,-7.836769,9.273927,1.627713,9.442393,1.489429,-5.308921,4.263075,7.286358,9.346634,5.091259,9.939548,-7.223481,-3.210221,-1.875532,-4.262708,0.499969,1.285229,-6.269549,1.606133,-1.499098,-7.041652,-0.809372,-0.221298,5.903516,-0.561539,5.435392,-8.958588,-2.397919,4.636809,4.795053,6.091101,-5.725581,-3.015954,-2.847939,-6.148942,-5.018556,6.708919,8.717690,-8.638834,-6.654969,5.411764,-4.706252,9.994111,-4.368813,1.357226,9.076705,-7.547693,6.797880,-0.635242,-0.466350,0.644961,-3.917597,-3.086229,-0.991941,-1.291699,2.913265,-3.970230,-8.772867,-4.468238,0.838911,-4.462447,4.972623,-9.811381,6.233158,-8.547021,-9.498607,-0.251499,-2.516015,-8.269834,4.626312,3.887203,-8.966768,0.910384,-9.965862,6.748617,6.407727,-2.321611,-7.755685,-3.924170,2.189994,9.253958,-9.442658,-2.050409,-3.000812,5.649715,-9.867660,2.601482,-2.399537,5.698442,-6.649915,-7.413883,-4.604929,-6.248645,-1.094976,9.954219,1.001181,7.941391,-6.854046,5.140064,-7.116903,2.492665,3.992616,4.308888,4.363929,-3.678033,0.868537,7.722360,0.894879,-4.235206,-2.307734,-8.995414,-5.412496,8.870894,6.027850,-1.611873,7.601953,-2.259261,-7.019060,0.055653,-5.750976,4.831947,-6.977869,-9.333592,7.355576,4.322777,-7.677591,0.223770,7.138115,3.658655,8.407639,-4.170552,3.040349,-3.409895,-1.933556,1.308397,9.618902,-0.288580,-4.673726,-7.395329,8.122009,3.039085,8.576014,0.381497,-9.829427,8.775780,-8.546531,-2.235535,5.536928,5.112457,-1.757976,-6.941162,7.170011,-0.810078,6.746400,8.880266,-1.605056,-4.056793,-8.605678,2.252899,1.839603,-1.729740,-1.522513,6.072975,6.367010,-3.084118,-3.452901,-2.520298,0.591021,0.790220,9.918031,-4.827668,7.937537,7.405545,-0.685585,-9.012607,5.678951,8.441400,-2.860384,4.726554,7.687113,7.607058,1.069823,9.896080,-5.743933,3.355379,-0.712351,-9.220586,6.976657,7.458503,-1.136990,4.071543,-2.480586,2.669465,6.000251,0.600150,-1.886170,-2.970562,-6.404000,5.738609,-5.483355,-4.888109,-2.111606,8.769193,-0.719175,4.874722,-9.179303,-0.173966,5.671315,1.055096,5.869413,6.689434,-3.182210,3.866627,3.449480,9.774148,2.576918,-3.168951,-9.583019,5.233533,-4.896990,0.321178,1.527223,-5.928037,-9.883406,-0.047022,-4.330412,6.747439,7.544205,8.352460,6.817685,4.778387,-7.690651,-8.985978,0.271782,5.469320,-4.576381,-0.092087,-8.428263,-5.231904,8.093743,-7.819502,-2.956921,-8.747872,-0.300541,3.393373,-8.917056,4.217268,-5.216510,-7.703470,4.362943,-2.597626,-9.710457,-0.945964,5.006515,3.957774,0.665919,-7.870185,-3.825315,6.897613,-6.334880,-8.054739,7.613967,9.465794,-0.143354,8.794117,8.747763,5.404640,1.994514,-6.559943,2.464364,6.109047,-8.517736,-1.386079,-4.014879,4.918527,-0.293692,0.802814,0.269206,-9.680861,-6.157539,-2.263880,4.484453,-2.304604,1.475498,2.685384,-2.182509,8.225595,-3.609542,2.627009,5.312713,8.500490,0.710172,-8.787142,7.317181,-2.599526,-3.026248,6.391156,-2.025597,-8.871021,-5.011947,-7.721983,-3.197281,9.337865,-1.894526,4.532457,-8.883485,7.693590,-4.812373,-9.278254,-2.254764,1.828254,6.586250,-0.264411,-1.776303,6.269861,-2.032968,-2.943968,4.853673,9.507366,-9.469180,-4.659348,3.395991,-6.611483,4.327591,0.175357,8.060642,-5.636164,6.187109,9.022378,-4.655260,9.688853,-5.003535,5.408959,3.307708,7.465992,-4.601665,-6.394385,-1.400353,8.761642,-4.784629,2.264361,0.945087,-9.632568,6.672233,4.673975,8.750982,-1.956498,-3.573340,9.470179,3.209147,4.948369,-4.169119,8.919215,5.967087,-4.476258,-0.911505,3.515094,-4.137140,-3.419555,4.662658,2.213190,-2.025779,0.955866,3.500491,4.923799,3.405338,-8.249522,-0.849218,-1.802705,-2.987196,0.111883,0.380260,3.534641,0.077337,6.339514,7.315941,7.252674,-9.599724,-3.009240,2.240628,-9.039557,-9.774432,6.485769,7.471756,-2.275112,-3.349589,-5.324588,1.951546,3.258022,0.747360,6.556516,3.484716,2.112472,5.988926,-7.386937,1.677125,-9.514715,6.756063,-8.219183,7.236288,8.096071,6.718998,7.830436,7.782048,7.898768,1.207677,0.541007,0.893502,9.242002,-0.626129,7.530236,-4.111601,8.820920,3.334689,-8.652401,3.098565,1.817464,5.947388,1.243196,1.272835,-2.302982,6.240657,-3.030588,-6.477884,-4.049115,2.193938,-6.761049,3.013740,5.466548,2.476368,0.935697,6.843547,4.856266,-1.963997,5.639797,0.412620,-4.648136,1.248478,0.373781,-7.579361,-9.411228,-5.067080,-4.446580,0.803024,-8.071900,1.889287,3.043081,-9.284661,-5.448602,0.304979,4.610387,5.199685,4.924482,-6.775467,-5.003225,-6.322317,-4.692661,8.069771,-2.606899,-6.872253,5.095551,6.166927,5.721661,-3.976621,-8.770191,8.845009,-4.254441,0.293917,-5.823055,0.302552,6.825149,9.319297,-9.754507,-3.499402,5.565119,3.380314,-4.139833,3.854459,9.021309,8.619467,2.337356,2.823070,6.416751,-4.766898,-8.243122,-2.655099,9.060796,8.519274,-9.773939,5.696306,-2.897410,3.789595,9.307642,-3.169250,-0.485812,-3.061238,0.633900,1.578735,-4.082431,-9.192365,9.919376,-0.205873,-4.685977,-5.282802,4.056268,3.206995,8.099077,9.048838,0.220115,0.298412,0.827804,-3.535284,6.847305,-1.824130,1.897793,-1.232368,3.874768,7.970262,-4.491717,3.457057,2.957536,7.386422,9.916149,2.182353,1.870080,-3.238304,-6.965229,6.917745,-1.394433,-9.861138,-7.735364,6.377809,0.040230,5.246175,-3.299523,-2.287677,2.052036,-1.514662,-4.797966,-9.375241,-8.494520,-6.910218,7.032116,-5.849226,6.429218,8.784337,6.763296,-6.156216,9.829101,-3.562328,-3.039267,-3.556976,4.947877,-5.694133,-1.568571,8.769325,3.081934,-9.637100,6.155564,-7.275879,2.335826,-3.155501,-1.127171,1.116486,-8.539662,-6.097762,-5.404211,7.783498,3.688376,8.998723,-3.789826,0.830668,5.725149,-1.744221,-8.628786,8.746443,-6.467454,7.642645,-4.186447,-0.481751,-4.780017,1.822749,7.257884,-0.498090,-4.805469,2.816371,-8.632769,-3.955222,-0.577584,-2.160129,-5.448205,-2.624761,2.388066,2.999591,-7.883610,7.396385,-4.998299,-0.715528,9.949601,3.777394,-5.148442,-4.639074,7.137059,-6.475241,5.852000,-7.212218,7.902513,-4.814468,-5.684134,-1.667633,2.867398,-6.966936,8.645502,-5.219521,1.905234,-0.135489,-3.568840,4.266747,-9.993290,1.248211,-2.434503,9.612302,-7.522583,2.281221,5.245793,2.574812,7.138584,2.995418,-1.418349,2.204535,0.472971,-6.204862,-9.037957,4.775864,5.422300,-7.731651,-3.337673,4.648794,9.830134,-8.875055,5.602256,2.466069,2.384136,2.527725,-6.261750,4.278431,-5.655082,8.268217,3.500424,4.802004,7.270261,0.078517,4.094435,-4.603385,9.757951,-1.012071,6.303820,6.447666,-8.292480,-4.450917,6.467205,-8.594309,6.053355,-8.452458,-3.318080,-4.935448,2.414368,6.019216,-7.279936,8.357717,-0.528778,-9.805647,5.728490,-3.643369,-6.064898,4.712482,2.323495,-0.026250,7.089086,8.338864,-6.574489,-2.881270,4.430469,6.849818,1.223530,5.349660,-8.164089,7.539817,9.881255,2.139114,8.462173,7.166858,-4.616632,6.707149,-0.345085,3.407812,-2.421666,-8.337127,6.299805,-8.246631,-8.904426,7.233970,1.528885,9.772864,-5.430876,1.839193,8.770018,-6.731628,-6.304278,2.579035,5.616755,7.409783,-3.500840,6.220791,9.339248,5.850596,-9.728374,-8.318327,7.667855,-0.818393,-0.223684,0.435283,7.434349,4.256328,-3.309107,-0.103469,3.878861,5.800377,-0.042617,-1.334870,-8.350795,1.738148,-8.944885,0.209839,0.950026,8.125203], dtype = "float32")#candidate|2629|(1800,)|const|float32
call_2627 = relay.TupleGetItem(func_1021_call(relay.reshape(const_2628.astype('float32'), [2, 3, 8]), relay.reshape(const_2629.astype('float32'), [1800, 1]), ), 8)
call_2630 = relay.TupleGetItem(func_1025_call(relay.reshape(const_2628.astype('float32'), [2, 3, 8]), relay.reshape(const_2629.astype('float32'), [1800, 1]), ), 8)
bop_2646 = relay.less_equal(uop_2617.astype('bool'), const_2629.astype('bool')) # shape=(14, 1800)
output = relay.Tuple([call_2627,const_2628,bop_2646,])
output2 = relay.Tuple([call_2630,const_2628,bop_2646,])
func_2660 = relay.Function([], output)
mod['func_2660'] = func_2660
mod = relay.transform.InferType()(mod)
mutated_mod['func_2660'] = func_2660
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2660_call = mutated_mod.get_global_var('func_2660')
call_2661 = func_2660_call()
output = call_2661
func_2662 = relay.Function([], output)
mutated_mod['func_2662'] = func_2662
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2663 = relay.const([[[-2.780392],[5.825242],[-3.130205],[0.309670],[9.500146],[6.699634],[-9.590663],[-1.386312],[3.911853],[-5.265704],[-3.858044],[3.495730],[4.261570],[5.230011],[-2.726648],[-8.312895]],[[7.439870],[-8.841920],[-1.229668],[4.945767],[-9.781446],[-0.082407],[-7.651959],[-7.998604],[-1.727899],[4.317886],[-0.862249],[-0.623862],[-2.298707],[-0.733526],[-4.003900],[6.511861]],[[-0.219356],[0.877080],[-2.784988],[-6.306321],[-1.270716],[0.786818],[-8.779500],[-9.234582],[-5.686804],[8.434848],[-4.740067],[1.651944],[7.754473],[-5.575534],[-9.831899],[-8.094781]]], dtype = "float32")#candidate|2663|(3, 16, 1)|const|float32
uop_2664 = relay.asin(const_2663.astype('float32')) # shape=(3, 16, 1)
uop_2671 = relay.sinh(const_2663.astype('float32')) # shape=(3, 16, 1)
func_1551_call = mod.get_global_var('func_1551')
func_1555_call = mutated_mod.get_global_var('func_1555')
var_2681 = relay.var("var_2681", dtype = "float32", shape = (88,))#candidate|2681|(88,)|var|float32
const_2682 = relay.const([6.034084,5.853446,-3.505388,-0.385622,0.359199,8.842849,-6.658020,-7.760249,2.938969,-7.617516,8.589007,-6.678101,3.633758,2.073896,-7.055887,-9.795404,2.251533,4.237891,3.959421,3.096804,-2.469054,-1.503684,9.700468,3.849073,-6.540271,4.663892,8.654658,-1.619516,-2.447078,6.873402,-7.511367,-4.616399,6.506539,6.905013,9.193746,8.979853,0.209202,4.203312,-9.466439,-9.410072,-9.582341,-2.409562,6.895529,-6.920178,-6.410130,-3.249330,2.166529,-9.013383,0.652868,6.402725,4.507482,-6.945256,6.329211,4.776043,-4.078863,-0.874742,-1.698489,-1.482719,-8.789365,7.815495,-4.109174,5.250472,3.371016,6.848634,-3.914616,3.993755,0.348134,-0.290458,2.144896,0.792521,2.781660,0.575397,-1.789797,-4.533782,-6.941128,-7.730566,4.615683,6.230136,0.621327,2.849365,2.041274,9.055552,-4.478781,8.014115,-9.112815,-3.726857,0.365455,8.008256,3.973234,-5.364503,9.888115,2.819208,-6.930648,7.561184,4.250007,0.898775,-4.108823,4.829196,0.188060,-2.254536,7.147296,9.800504,-7.599822,7.329634,-4.016193,-7.442413,-1.919607,3.302690,-0.980977,-3.603226,8.498542,-0.416638,9.464231,8.788922,3.423459,-4.099361,-6.714085,9.515209,-0.876556,-0.521760,-1.805268,-4.844257,-3.594904,4.910757,2.897691,-1.660717,-7.207708,-0.516210,7.696954,-8.503685,7.864572,1.545889,-5.957122,5.421996,5.598687,-1.767783,-3.243469,-0.233114,-2.995129,5.408361,-1.592536,-2.414739,-2.488551,-3.493572,-1.134960,-3.750254,8.730363,0.177901,-8.614282,-0.703915,1.324410,3.814050,5.981246,-2.970747,-5.772955,0.346803,-6.352468,6.090352,-3.782592,-1.348088,-9.894382,4.458965,-6.969223,0.735035,2.987220,3.201717,-7.472940,-4.988037,-1.081891,6.758155,-5.284508,5.896433,9.023966,9.123589,-3.553966,-3.321516,8.351943,-8.073080,2.083901,-3.004664,9.819981,3.456048,0.255144,-5.236287,-0.429868,-9.946941,-0.424352,8.078688,-0.006122,-1.369797,-7.822118,0.880578,-8.748112,-0.019741,1.446788,-3.042928,-2.673820,0.142438,7.884138,0.554221,8.300843,-1.965928,-7.847722,1.764218,-3.001675,0.322967,6.756202,-1.092311,7.241124,5.379461,-6.152679,5.619556,5.202780,-3.853299,-5.903242,-3.831867,2.803981,-4.919572,0.797068,-1.210573,0.670337,-8.570564,-6.203824,-0.356144,0.853715,-8.445739,4.553856,-8.695437,-9.890990,0.082101,8.833772,6.655061,-0.819731,-8.761402,0.169418,1.113031,-1.936316,7.766657,9.646982,-2.228121,1.746417,-7.774133,8.037516,8.704896,9.217214,-3.010410,2.447642,5.477084,4.094090,9.737572,-4.446610,6.305439,-4.877728,5.460035,-6.621137,9.548775,-1.709269,-3.959848,-7.116009,-1.431055,-5.566593,-4.248037,-7.219509,5.249932,3.600265,-9.535445,-3.757637,5.245728,8.130229,-3.849178,-2.313746,8.242948,1.219739,-3.021230,-7.618174,2.218572,-9.968891,-0.732725,7.249400,-9.068204,-8.092713,-5.920319,4.688212,7.280100,-2.961667,-0.479755,6.671643,6.199474,-1.002739,5.224934,-3.256360,3.212268,-7.342404,4.932073,-4.403008,0.954700,4.076050,3.801005,5.142259,1.963440,-0.869826,-6.206270,5.945444,-2.118873,-9.099786,-2.255827,-8.911306,8.863017,0.427719,-7.792948,-5.845025,-4.626663,9.197527,-7.936634,6.801656,-2.638622,-6.688803,2.097113,-4.590103,6.133912,8.457016,-0.741184,0.325753,2.439894,-1.424632,-7.933842,2.640228,-0.883166,-5.539412,8.581839,-9.645740,9.797029,-9.849145,2.862925,-5.779246,8.138115,-7.946981,3.280586,0.939808,9.430286,-2.409367,1.457896,-2.651893,-1.190638,-1.446381,-5.761721,8.437365,1.344129,5.114551,0.239832,8.970467,1.510464,-1.384966,-4.888593,6.435131,7.736465,6.052064,8.014720,8.764556,3.338319,5.157703,-0.109052,4.073464,9.020475,-5.136073,1.638384,2.861865,-2.072156,0.610916,-7.173168,-6.616993,6.366236,-3.321231,1.182065,-6.661408,4.580836,2.647592,5.064318,-5.117927,2.766678,7.927955,-9.207092,2.106605,-3.828428,8.095064,-7.117079,-8.223384,-2.177334,-6.020576,-9.305972,-2.202048,5.368718,-9.545908,-9.150656,3.702256,5.673937,-5.872105,9.870661,-1.414264,0.450115,-0.450784,2.266193,5.817054,4.303129,-6.731331,-7.381812,-6.975463,-0.358384,-5.690347,2.898340,-4.734756,-2.129535,-5.472838,-3.107120,0.994048,1.181031,0.196861,4.755807,-8.631346,3.101818,-4.150215,7.952839,1.173478,5.086892,-7.926509,7.473470,-0.416036,-0.841865,8.680570,8.847738,-4.094050,9.744313,-4.885595,-4.487105,6.617764,2.319337,1.410313,-3.273518,-4.238698,9.783260,-9.033268,7.949446,-1.054947,-8.221642,-9.368212,7.701803,-2.123614,1.824258,9.503786,6.045313,8.558245,-2.253485,5.808054,5.944099,3.803010,-7.772058,5.444900,-0.529523,7.498460,9.529745,-3.836377,-7.555455,8.091743,9.348077,3.067474,-2.426476,0.415714,-1.535485,8.581501,-4.100306,-2.354320,6.162726,-8.362400,7.487741,-1.561707,-0.325435,0.245475,3.279303,-8.849390,6.106831,4.936731,-4.009881,6.982196,0.023767,-7.103899,4.418065,-1.633563,-9.447830,-3.736108,4.673217,-6.055591,5.289324,-5.548086,8.072621,-3.860818,7.521335,-6.390305,-3.761239,-8.941479,-2.182491,-3.683583,2.813147,-7.272687,2.539236,1.520471,5.128948,-6.239999,-3.249719,3.404596,5.312320,-9.957461,4.808425,-5.006759,-7.960086,2.935949,0.263681,-4.844947,1.061727,-0.339315,3.450846,1.405004,-0.310520,-8.161186,-3.263784,-7.569907,6.286586,-5.080811,8.070435,-0.025669,8.467357,-9.915768,0.551283,9.459434,-0.847779,-7.667016,-7.220642,-5.250262,8.158353,6.591558,6.436731,-5.949782,-6.558372,1.702308,8.729156,-3.178406,-8.008543,-9.006489,0.055390,-2.260969,3.948678,-5.951270,-8.476575,-4.172477,4.486786,4.639532,3.560209,5.500091,0.546707,5.046325,-2.878766,7.000722,9.397372,8.652540,-8.576747,-3.218619,-0.230911,5.376017,7.066999,-9.063641,9.603246,3.969910,8.633059,-4.376819,-2.287920,-4.678385,0.530578,0.731645,9.002193,-5.548569,-9.992195,3.864985,9.476198,3.565010,4.537951,0.763582,0.347184,2.827553,5.575103,9.666474,-8.138694,-9.307784,-9.901286,-3.282136,-0.600496,8.269574,7.770972,6.829345,9.091582,5.146754,0.706233,0.158639,-2.268782,7.394171,-8.835125,3.929600,-2.478826,7.115931,6.622593,-2.450355,-7.282734,-6.858302,9.386823,-8.839794,-4.224425,6.527310,-5.381610,-8.741182,4.660366,-3.626367,9.557842,-1.261071,5.496562,-1.770445,8.738600,0.306649,-2.842123,6.204680,8.379000,-4.753072,-0.187680,0.300333,-4.964082,5.987382,-4.720913,8.666937,7.554694,1.550061,6.869410,9.934579,6.317291,-8.845775,-5.051883,5.482400,7.132132,7.627578,9.055067,-0.607276,-4.142136,0.626297,3.685572,-1.444838,6.729642,-1.481478,9.307549,3.312550,-8.162671,-5.122112,-0.106878,-5.311543,9.949476,3.446216,1.938303,-3.819624,7.457205,-5.379608,4.566616,4.369005,-7.892733,9.781929,7.353003,-5.378294,1.920672,-7.669438,-5.077660,3.300161,-1.530953,-1.747245,9.651056,2.556695,0.743476,2.023694,3.722512,7.836690,-5.961931,5.583083,5.071232,8.355449,4.131709,-1.936202,5.227669,3.250107,-8.029422,3.559633,9.057260,-5.846687,-5.107348,4.742579,-9.458726,4.174334,5.692191,-7.570048,2.013437,0.900923,4.878256,-3.919450,-5.653241,-3.993280,-4.487839,-3.509185,0.321923,-5.930813,-4.582421,0.093969,-0.568068,-7.471808,7.520105,-2.126584,-5.384475,4.699778,-3.462375,-2.687527,-2.822254,7.402601,-8.545604,-7.921371,6.655036,3.124230,-8.733900,-8.663293,-7.316901,-4.536502,-9.110036,-5.098685,7.718357,-2.861343,7.903900,-2.044215,-4.816796,-6.158070,2.120215,-1.034256,8.091029,-3.214044,-4.934067,-2.910858,9.150621,-9.143132,-0.908572,9.226255,0.314011,5.187818,-0.370018,-3.819790,8.986843,-3.006216,3.972095,2.968235,-8.175919,-5.963464,3.705050,8.309003,2.760451,-6.745476,-8.095301,2.914504,7.707004,0.301116,-3.905517,-4.903344,-4.974216,-5.153383,2.134498,9.926303,-6.578783,-3.993024,-0.493517,-9.323375,-4.480916,4.840369,-6.737009,-9.507595,2.304484,-1.046067,9.284542,-0.308939,6.098632,1.965295,-2.007607,-6.589806,-9.258718,-2.446858,6.491350,-0.927215,4.198301,-8.870279,0.430940,-6.248420,-3.344573,-5.463301,8.787907,-0.847547,-7.024695,-6.901991,-6.013420,3.307753,2.407237,3.473274,-1.216535,-1.516044,-5.635348,-3.845174,9.790799,-1.985987,1.135955,4.799765,0.717971,9.126708,4.343557,9.292627,-1.620599,-7.851978,-6.064509,-7.307725,-1.673962,0.542125,-2.598978,-9.316287,-9.802740,2.982674,8.074789,-8.286330,-6.850666,-6.571673,6.415255,7.954506,-4.802515,-6.506691,-2.613557,-8.160839,3.871836,4.201737,5.244036,-5.948733,-9.473646,3.794444,-0.074342,8.644282,8.591662,9.763883,0.089611,-5.355588,-1.939195,-3.470254,-3.041981,2.251971,-8.890349,3.687811,-1.192075,5.192045,8.879387,0.886217,4.542993,2.032088,-1.513809,1.589609,5.092737,-6.157941,-0.660880,-7.284986,7.653466,1.234732,-6.012585,6.366619,-1.171881,-7.166033,5.233124,3.863917,-0.798822,5.426375,7.910526,-9.336151,-5.655333,8.372508,1.712938,0.859135,4.104153,7.733125,1.716554,0.688879,6.553259,-1.038010,7.612366,0.631540,-3.262282,-9.084626,-7.877788,-4.814144,9.039843,7.068202,-3.198970,0.618253,0.461451,6.684917,8.804929,-6.390471,-3.659242,1.561533,0.637101,3.360137,0.495638,8.690368,-1.251969,9.126553,1.091261,1.429896,7.293134,-8.710950,7.808612,-0.773855,-2.182649,7.167006,3.731407,-3.930134,-6.012124,-4.264567,3.591112,1.029323,7.653687,-1.729123,7.696215,-0.410103,-4.919623,-7.686448,4.406606,4.832258,1.561646,-5.024091,2.779789,4.494854,2.942382,-5.572000,-6.401036,-4.749652,-5.941665,-9.053782,-4.059387,-8.996417,7.823312,-4.818111,6.372054,-5.237329,7.137228,3.751055,7.302759,-3.917747,-6.047535,-7.807303,-9.176464,3.041762,5.764983,-0.254262,-6.938551,-9.864139,4.387948,-1.185662,-8.730647,-9.239660,-8.484212,8.614324,-0.124573,-3.418213,-7.216212,3.125642,4.462048,4.439470,9.183982,2.239905,-6.075620,6.372564,-9.868703,0.260483,7.121697,-0.978413,9.593190,4.941886,1.235693,3.344193,-2.868112,-7.895011,0.701153,-2.192013,-6.395125,-2.940211,-2.491676,-9.156196,-0.929458,3.487377,0.020024,9.900608,1.043990,0.847611,-4.961372,-8.701278,8.128542,-4.634558,-8.218768,2.164771,-6.360670,-2.491114,-2.223119,-3.295926,-4.301013,-0.393990,3.676070,-1.347180,-6.379695,-3.624352,-1.577328,-4.958970,0.315696,-9.374065,7.455445,-9.352180,-3.053521,-3.486575,-6.272950,8.028328,9.950819,-0.586155,0.421797,5.906895,-4.794799,-4.067260,8.322584,1.144094,7.486312,-3.936654,8.731864,2.444238,2.485014,-6.518603,-9.144941,-1.119820,8.469242,-5.048849,-9.985286,7.625756,9.525135,0.516725,-9.855007,-3.734982,9.768076,-8.212251,9.642842,-7.479465,-8.593764,-6.300216,-0.285592,-3.500207,-9.641662,-7.067329,-4.885039,9.808220,4.000409,-0.739939,9.943518,0.646681,-2.531456,-7.711425,7.673545,-1.185768,1.500861,-7.243818,-2.709906,-5.043211,-6.022907,1.530460,-4.678962,-1.125619,1.501852,1.041830,0.938982,5.086439,-8.110787,-2.854313,-8.527707,0.391473,1.218101,5.818722,-4.008865,-8.033447,-9.609436,-0.823883,1.480947,-0.650877,0.470914,8.760870,1.656787,-2.944088,-8.691142,1.871052,-6.061819,8.066967,6.896834,6.330125,-8.886363,-6.876401,5.557690,0.451791,3.419775,4.044545,8.010639,-6.460155,-3.012145,-8.675268,3.537526,2.497734,1.631659,1.835858,-5.215029,-9.285046,1.367643,8.589842,0.621566,0.156500,5.389526,-6.386752,2.319908,1.346732,4.659383,2.881449,9.650028,-4.941074,6.251322,9.926522,-6.163328,-1.624571,-0.259701,-8.428188,-5.661226,9.077436,7.677226,-4.594954,-2.917431,-7.795214,2.648815,-9.135054,-1.385198,5.081874,-4.501086,1.792870,0.124800,-1.961156,-9.820451,9.703928,-7.498569,-3.951061,-3.186944,1.609757,-0.267681,8.971892,0.756723,-3.417739,-8.486583,6.410722,9.321891,-8.017771,-5.428904,-6.959865,0.866217,9.016156,-6.162697,7.556936,-8.734909,6.620961,-8.329199,-1.579585,-1.087024,-1.212221,4.570895,-0.438325,-6.460487,1.465562,4.708933,6.258066,2.560066,0.651292,-5.990299,5.462925,2.829863,9.491251,7.349936,6.846857,8.582089,-5.625898,7.678781,9.823153,2.102113,-4.853511,-0.364294,-0.593292,-1.899810,-1.967590,-7.015971,9.170611,-1.174948,-3.208218,-0.981518,-7.920806,6.541754,-5.896408,1.695009,-7.797042,-2.752759,9.040011,2.126356,3.762184,7.629576,-2.645917,3.114554,7.640293,1.008461,0.812607,8.030460,8.956237,-1.775624,9.400262,6.948096,9.007991,-2.514070,-5.883213,-2.970208,9.928723,3.530107,3.891451,3.837534,6.259207,-4.726319,7.936995,-1.765718,-0.485019,-4.819161,-8.428942,-0.024737,-4.333530,-9.866429,-2.075605,-0.610606,4.061173,7.451357,-8.542335,4.904725,6.229378,-2.121278,-6.521146,2.757848,6.312835,-2.065401,0.316865,8.830867,-4.780603,7.998111,-3.376897,-3.556963,8.428924,6.585862,2.636191,7.264739,-9.554622,3.913355,-8.667078,-5.337305,-2.127727,8.022051,7.902762,3.451535,9.015381,-5.872035,-7.601757,4.716735,-0.788356,9.147629,2.969847,2.436743,-7.828945,-5.049382,0.942293,2.404480,-7.155920,-6.292670,9.954338,1.922914,-0.016586,3.560388,-2.491911,-4.894256,9.921268,-1.609079,6.093158,-6.605499,-3.097436,-1.796839,2.808131,-5.581238,7.349439,9.343046,-6.037577,2.433055,-4.562349,-2.366466,8.150162,-5.329165,-1.313542,0.153930,-6.356918,-2.698356,1.468451,-2.269502,-7.270444,-4.833402], dtype = "float32")#candidate|2682|(1320,)|const|float32
call_2680 = relay.TupleGetItem(func_1551_call(relay.reshape(var_2681.astype('float32'), [11, 8, 1]), relay.reshape(const_2663.astype('float32'), [48,]), relay.reshape(const_2682.astype('float32'), [11, 8, 15]), ), 2)
call_2683 = relay.TupleGetItem(func_1555_call(relay.reshape(var_2681.astype('float32'), [11, 8, 1]), relay.reshape(const_2663.astype('float32'), [48,]), relay.reshape(const_2682.astype('float32'), [11, 8, 15]), ), 2)
uop_2688 = relay.sqrt(uop_2664.astype('float64')) # shape=(3, 16, 1)
output = relay.Tuple([uop_2671,call_2680,var_2681,const_2682,uop_2688,])
output2 = relay.Tuple([uop_2671,call_2683,var_2681,const_2682,uop_2688,])
func_2692 = relay.Function([var_2681,], output)
mod['func_2692'] = func_2692
mod = relay.transform.InferType()(mod)
var_2693 = relay.var("var_2693", dtype = "float32", shape = (88,))#candidate|2693|(88,)|var|float32
output = func_2692(var_2693)
func_2694 = relay.Function([var_2693], output)
mutated_mod['func_2694'] = func_2694
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2660_call = mod.get_global_var('func_2660')
func_2662_call = mutated_mod.get_global_var('func_2662')
call_2699 = relay.TupleGetItem(func_2660_call(), 0)
call_2700 = relay.TupleGetItem(func_2662_call(), 0)
func_1664_call = mod.get_global_var('func_1664')
func_1667_call = mutated_mod.get_global_var('func_1667')
var_2702 = relay.var("var_2702", dtype = "float32", shape = (63, 1))#candidate|2702|(63, 1)|var|float32
const_2703 = relay.const([9.300829,-0.849835,-8.076106,-9.819350,-2.130340,0.453977,1.166611,-3.479702,3.290374,1.344730,1.278856,7.316207,5.527006,8.233999,2.844735,0.802239,-2.945862,-8.529338,7.416703,-9.209621,-6.625159,7.671962,1.249743,8.523253,3.176026,5.442318,-1.097928,-1.676047,0.567257,-1.521710,-7.173581,3.316802,-8.932756,-5.091880,-5.570120,2.321566,-0.888882,6.049050,-2.002063,-6.843044,2.951791,2.229577,-0.556659,-1.171954,3.685796,7.777665,-4.957100,5.389068,-3.616645,-8.251806,-4.133260,7.301258,-7.040257,-0.489767,3.999737,5.702114,-3.458229,-3.238752,-0.430418,-0.233427,5.384768,-4.809458,-6.320212,-2.423916,4.288030,-8.069898,-5.460927,-1.543337,-5.826367,-6.564442,5.892929,-5.027883,-5.260465,9.836505,3.567356,-2.577762,2.698809,-4.074811,-6.099153,-1.348553,1.484995,8.409741,-5.504184,3.062557,-6.797769,-3.784360,0.167058,-8.692899,0.794083,-0.277833,6.584955,3.019368,5.499713,3.887388,4.664323,9.594952,-0.339211,-7.723601,-0.019301,7.745216,7.958025,6.223904,-7.466109,-3.659274,4.337540,8.040700,-0.099635,5.199833,-7.015492,1.463984,-3.926651,2.624726,-4.157485,6.976485,2.072562,2.934889,-1.413461,0.937133,-5.196023,-8.314568,-1.649681,9.603952,-1.761146,2.120794,2.233863,-6.602706,4.189821,-6.793380,-7.893416,3.768316,-7.753872,-3.968679,0.735596,1.371252,-2.553945,7.516509,9.533476,0.046264,2.110775,9.378640,8.799189,-7.404326,4.940628,-4.288579,-7.357023,3.312025,0.920163,4.203482,1.695991,-5.809658,-9.299705,-0.615579,-7.622229,9.140115,-9.067847,-1.410605,5.893215,7.940062,3.175896,-9.991580,0.024330,-0.986549,5.780124,3.991609,0.256928,-6.075098,1.041332,2.318517,-9.192437,6.585933,5.144964,4.397702,-7.304825,5.136537,-8.588943,0.846434,3.767301,-3.442296,5.518609,4.742334,-1.565498,-7.945967,0.879538,5.547057,-1.679878,-0.665463,2.975994,-9.681685,-7.380341], dtype = "float32")#candidate|2703|(189,)|const|float32
call_2701 = relay.TupleGetItem(func_1664_call(relay.reshape(var_2702.astype('float32'), [7, 1, 9]), relay.reshape(const_2703.astype('float32'), [7, 3, 9]), ), 0)
call_2704 = relay.TupleGetItem(func_1667_call(relay.reshape(var_2702.astype('float32'), [7, 1, 9]), relay.reshape(const_2703.astype('float32'), [7, 3, 9]), ), 0)
bop_2708 = relay.bitwise_xor(call_2699.astype('uint32'), var_2702.astype('uint32')) # shape=(63, 360)
bop_2711 = relay.bitwise_xor(call_2700.astype('uint32'), var_2702.astype('uint32')) # shape=(63, 360)
uop_2717 = relay.sigmoid(bop_2708.astype('float64')) # shape=(63, 360)
uop_2719 = relay.sigmoid(bop_2711.astype('float64')) # shape=(63, 360)
output = relay.Tuple([call_2701,const_2703,uop_2717,])
output2 = relay.Tuple([call_2704,const_2703,uop_2719,])
func_2722 = relay.Function([var_2702,], output)
mod['func_2722'] = func_2722
mod = relay.transform.InferType()(mod)
mutated_mod['func_2722'] = func_2722
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2723 = relay.var("var_2723", dtype = "float32", shape = (63, 1))#candidate|2723|(63, 1)|var|float32
func_2722_call = mutated_mod.get_global_var('func_2722')
call_2724 = func_2722_call(var_2723)
output = call_2724
func_2725 = relay.Function([var_2723], output)
mutated_mod['func_2725'] = func_2725
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2660_call = mod.get_global_var('func_2660')
func_2662_call = mutated_mod.get_global_var('func_2662')
call_2840 = relay.TupleGetItem(func_2660_call(), 1)
call_2841 = relay.TupleGetItem(func_2662_call(), 1)
output = relay.Tuple([call_2840,])
output2 = relay.Tuple([call_2841,])
func_2842 = relay.Function([], output)
mod['func_2842'] = func_2842
mod = relay.transform.InferType()(mod)
mutated_mod['func_2842'] = func_2842
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2842_call = mutated_mod.get_global_var('func_2842')
call_2843 = func_2842_call()
output = call_2843
func_2844 = relay.Function([], output)
mutated_mod['func_2844'] = func_2844
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2907 = relay.const([[[-1,-3,-2,-2,-1,6,-3,3,-3],[2,-5,-6,9,9,-8,-7,-1,-8],[5,5,-2,-2,-1,-8,3,6,-1],[10,10,-10,-2,-9,-7,-5,6,-8]],[[2,-5,4,9,3,9,10,4,9],[-10,10,3,6,-10,9,-1,8,5],[-9,-1,-4,6,2,-5,1,1,7],[-9,-3,5,8,2,-6,-8,-3,-9]],[[1,-10,5,-1,1,10,-7,10,9],[-9,-5,-3,-8,-6,-1,-8,10,5],[-1,2,10,9,10,-7,-7,5,9],[-3,-8,8,3,2,-3,-1,-7,8]],[[4,7,9,4,-10,7,9,-6,10],[6,1,-9,7,3,-2,1,2,-1],[-2,8,5,3,7,1,-7,-1,5],[5,7,-7,-2,-4,-6,5,1,4]],[[-9,2,-8,1,9,4,-9,9,-10],[6,5,-4,6,-1,-1,5,-3,3],[-1,7,-8,8,-1,-5,1,2,-1],[7,4,-6,-6,-6,-9,10,-5,2]]], dtype = "uint32")#candidate|2907|(5, 4, 9)|const|uint32
const_2908 = relay.const([[[9,-1,-7,7,4,2,-9,4,5],[4,-6,7,-3,10,-1,1,-6,-6],[-3,-3,-7,6,5,6,1,-7,-6],[3,-5,3,7,-7,-4,5,6,-6]],[[-2,-8,4,7,8,4,-8,-3,9],[8,-10,8,8,3,1,6,2,10],[-2,3,1,-1,-4,4,10,9,9],[-4,-3,2,6,9,3,-6,-8,-4]],[[6,-2,2,4,-1,4,2,-8,6],[-1,9,-2,3,9,9,-2,9,-5],[-3,-2,4,4,-5,3,2,6,5],[-4,-8,-10,6,-3,-10,-5,1,-5]],[[5,-3,2,2,1,5,-5,-4,2],[3,-8,3,9,8,5,-5,5,-1],[-5,2,10,-1,8,10,-7,-10,-1],[2,-8,8,-8,-4,-2,-1,-7,-4]],[[-4,-1,-8,4,8,-2,-4,-9,-7],[-10,1,-9,10,-3,-4,-3,9,1],[-9,-7,-9,-5,5,7,-10,-8,-2],[7,6,-8,-4,9,7,5,6,-2]]], dtype = "uint32")#candidate|2908|(5, 4, 9)|const|uint32
bop_2909 = relay.logical_xor(const_2907.astype('uint32'), relay.reshape(const_2908.astype('uint32'), relay.shape_of(const_2907))) # shape=(5, 4, 9)
bop_2915 = relay.bitwise_and(bop_2909.astype('int16'), relay.reshape(const_2908.astype('int16'), relay.shape_of(bop_2909))) # shape=(5, 4, 9)
output = relay.Tuple([bop_2915,])
output2 = relay.Tuple([bop_2915,])
func_2925 = relay.Function([], output)
mod['func_2925'] = func_2925
mod = relay.transform.InferType()(mod)
mutated_mod['func_2925'] = func_2925
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2925_call = mutated_mod.get_global_var('func_2925')
call_2926 = func_2925_call()
output = call_2926
func_2927 = relay.Function([], output)
mutated_mod['func_2927'] = func_2927
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2925_call = mod.get_global_var('func_2925')
func_2927_call = mutated_mod.get_global_var('func_2927')
call_2936 = relay.TupleGetItem(func_2925_call(), 0)
call_2937 = relay.TupleGetItem(func_2927_call(), 0)
output = relay.Tuple([call_2936,])
output2 = relay.Tuple([call_2937,])
func_2996 = relay.Function([], output)
mod['func_2996'] = func_2996
mod = relay.transform.InferType()(mod)
output = func_2996()
func_2997 = relay.Function([], output)
mutated_mod['func_2997'] = func_2997
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3001 = relay.var("var_3001", dtype = "bool", shape = (3, 4, 2))#candidate|3001|(3, 4, 2)|var|bool
const_3002 = relay.const([[[False,False],[True,False],[True,True],[True,True]],[[True,True],[True,False],[False,False],[True,True]],[[True,False],[False,False],[False,True],[True,True]]], dtype = "bool")#candidate|3002|(3, 4, 2)|const|bool
bop_3003 = relay.logical_or(var_3001.astype('bool'), relay.reshape(const_3002.astype('bool'), relay.shape_of(var_3001))) # shape=(3, 4, 2)
output = bop_3003
output2 = bop_3003
func_3006 = relay.Function([var_3001,], output)
mod['func_3006'] = func_3006
mod = relay.transform.InferType()(mod)
mutated_mod['func_3006'] = func_3006
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3007 = relay.var("var_3007", dtype = "bool", shape = (3, 4, 2))#candidate|3007|(3, 4, 2)|var|bool
func_3006_call = mutated_mod.get_global_var('func_3006')
call_3008 = func_3006_call(var_3007)
output = call_3008
func_3009 = relay.Function([var_3007], output)
mutated_mod['func_3009'] = func_3009
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2842_call = mod.get_global_var('func_2842')
func_2844_call = mutated_mod.get_global_var('func_2844')
call_3080 = relay.TupleGetItem(func_2842_call(), 0)
call_3081 = relay.TupleGetItem(func_2844_call(), 0)
output = call_3080
output2 = call_3081
func_3086 = relay.Function([], output)
mod['func_3086'] = func_3086
mod = relay.transform.InferType()(mod)
mutated_mod['func_3086'] = func_3086
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3086_call = mutated_mod.get_global_var('func_3086')
call_3087 = func_3086_call()
output = call_3087
func_3088 = relay.Function([], output)
mutated_mod['func_3088'] = func_3088
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3123 = relay.var("var_3123", dtype = "int32", shape = (5, 15, 3))#candidate|3123|(5, 15, 3)|var|int32
var_3124 = relay.var("var_3124", dtype = "int32", shape = (5, 15, 3))#candidate|3124|(5, 15, 3)|var|int32
bop_3125 = relay.minimum(var_3123.astype('int32'), relay.reshape(var_3124.astype('int32'), relay.shape_of(var_3123))) # shape=(5, 15, 3)
func_3086_call = mod.get_global_var('func_3086')
func_3088_call = mutated_mod.get_global_var('func_3088')
call_3140 = func_3086_call()
call_3141 = func_3086_call()
bop_3145 = relay.greater_equal(bop_3125.astype('bool'), relay.reshape(var_3123.astype('bool'), relay.shape_of(bop_3125))) # shape=(5, 15, 3)
output = relay.Tuple([call_3140,bop_3145,])
output2 = relay.Tuple([call_3141,bop_3145,])
func_3151 = relay.Function([var_3123,var_3124,], output)
mod['func_3151'] = func_3151
mod = relay.transform.InferType()(mod)
mutated_mod['func_3151'] = func_3151
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3151_call = mutated_mod.get_global_var('func_3151')
var_3153 = relay.var("var_3153", dtype = "int32", shape = (5, 15, 3))#candidate|3153|(5, 15, 3)|var|int32
var_3154 = relay.var("var_3154", dtype = "int32", shape = (5, 15, 3))#candidate|3154|(5, 15, 3)|var|int32
call_3152 = func_3151_call(var_3153,var_3154,)
output = call_3152
func_3155 = relay.Function([var_3153,var_3154,], output)
mutated_mod['func_3155'] = func_3155
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2660_call = mod.get_global_var('func_2660')
func_2662_call = mutated_mod.get_global_var('func_2662')
call_3163 = relay.TupleGetItem(func_2660_call(), 2)
call_3164 = relay.TupleGetItem(func_2662_call(), 2)
func_1524_call = mod.get_global_var('func_1524')
func_1527_call = mutated_mod.get_global_var('func_1527')
var_3166 = relay.var("var_3166", dtype = "float32", shape = (32,))#candidate|3166|(32,)|var|float32
call_3165 = func_1524_call(relay.reshape(var_3166.astype('float32'), [2, 4, 4]))
call_3167 = func_1524_call(relay.reshape(var_3166.astype('float32'), [2, 4, 4]))
var_3175 = relay.var("var_3175", dtype = "bool", shape = (14, 1800))#candidate|3175|(14, 1800)|var|bool
bop_3176 = relay.multiply(call_3163.astype('int32'), relay.reshape(var_3175.astype('int32'), relay.shape_of(call_3163))) # shape=(14, 1800)
bop_3179 = relay.multiply(call_3164.astype('int32'), relay.reshape(var_3175.astype('int32'), relay.shape_of(call_3164))) # shape=(14, 1800)
var_3188 = relay.var("var_3188", dtype = "bool", shape = (14, 1800))#candidate|3188|(14, 1800)|var|bool
bop_3189 = relay.power(var_3175.astype('float32'), relay.reshape(var_3188.astype('float32'), relay.shape_of(var_3175))) # shape=(14, 1800)
uop_3196 = relay.sin(var_3175.astype('float64')) # shape=(14, 1800)
uop_3215 = relay.asinh(bop_3189.astype('float32')) # shape=(14, 1800)
output = relay.Tuple([call_3165,var_3166,bop_3176,uop_3196,uop_3215,])
output2 = relay.Tuple([call_3167,var_3166,bop_3179,uop_3196,uop_3215,])
func_3221 = relay.Function([var_3166,var_3175,var_3188,], output)
mod['func_3221'] = func_3221
mod = relay.transform.InferType()(mod)
var_3222 = relay.var("var_3222", dtype = "float32", shape = (32,))#candidate|3222|(32,)|var|float32
var_3223 = relay.var("var_3223", dtype = "bool", shape = (14, 1800))#candidate|3223|(14, 1800)|var|bool
var_3224 = relay.var("var_3224", dtype = "bool", shape = (14, 1800))#candidate|3224|(14, 1800)|var|bool
output = func_3221(var_3222,var_3223,var_3224,)
func_3225 = relay.Function([var_3222,var_3223,var_3224,], output)
mutated_mod['func_3225'] = func_3225
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2842_call = mod.get_global_var('func_2842')
func_2844_call = mutated_mod.get_global_var('func_2844')
call_3264 = relay.TupleGetItem(func_2842_call(), 0)
call_3265 = relay.TupleGetItem(func_2844_call(), 0)
func_1340_call = mod.get_global_var('func_1340')
func_1343_call = mutated_mod.get_global_var('func_1343')
const_3270 = relay.const([[-8,3,5,-7,2,3,2,-7,-3,-9,-9,10,8,4,8,10,-9,9,6,6,1,-4,-9,5,3,8,-1,-4,2,9,-4,-7,6,8,2,-2,3,-4,-6,4,-7,3,-5,-4,-5,-9,6,1,-2,3,-2,6,10,-8,1,6,-6,-5,-6,-8,-4,9,2,1,8,9,9,-3,-5,5,-3,-3,2,10,5,-10,-4,8,-10,2,-2,-7,-6,2],[-3,5,-8,7,-4,-9,-4,9,-9,-5,-5,4,-10,2,3,-7,-9,-2,-1,-8,-5,-6,-7,8,4,-4,4,10,-10,2,-4,-8,1,3,-9,9,-9,5,-9,-3,-10,-4,6,-8,4,-10,9,3,-7,2,-7,-2,-5,6,9,9,-6,-4,4,-9,-4,-9,6,-2,8,1,-4,-4,9,5,9,7,-6,10,-5,-8,-7,-1,-9,-7,9,-4,10,-4],[-8,-7,2,4,7,7,2,-8,-4,-3,-3,2,8,-7,-4,7,3,-10,-10,-4,-6,-8,8,-9,-4,-7,-1,-1,7,-9,-10,-2,2,7,-6,-10,1,3,3,-4,-4,-4,-2,-6,-2,9,-1,4,-4,-7,3,5,7,-3,-1,7,-10,10,5,-2,-9,10,3,-5,-6,-9,2,-3,3,-9,-7,-8,7,-8,2,-3,10,-2,7,9,-2,4,-4,4],[5,10,10,-8,5,-1,-7,-9,8,-9,1,-10,-8,-8,1,10,3,-7,-7,2,-10,-1,7,-3,3,10,2,6,4,4,4,-1,-3,4,5,4,-6,2,4,8,1,-1,8,5,-9,-7,-3,4,9,8,1,-9,6,2,-1,7,-10,5,4,-8,-10,-10,5,1,-1,8,-2,10,-2,-7,-7,-5,3,-3,-1,-3,-7,-6,-6,-6,7,-10,-5,-4],[-5,10,-7,8,-6,-10,1,-9,-6,-1,-1,1,1,6,4,-2,3,10,10,2,9,4,5,8,-8,6,-6,-7,8,4,3,10,10,8,10,-6,3,-8,-3,8,5,-1,10,-9,-1,-10,-9,-2,2,10,3,-10,-8,-3,-7,2,-6,5,1,6,-7,8,-7,-8,2,3,-6,2,-1,4,-5,-10,-9,8,-10,-2,9,4,2,-6,-10,2,2,-7],[-8,-1,-7,-5,-7,-4,5,4,10,3,10,8,8,5,3,-5,2,5,6,-6,3,9,-8,4,-1,-9,6,-2,-9,-6,-8,5,-6,1,-10,-6,7,-3,-10,-4,-3,3,-2,6,9,-4,-5,-9,9,3,-7,4,-6,-2,3,-9,-2,-6,7,-6,5,5,10,1,6,-1,-4,-10,4,-9,1,-3,-2,5,-2,8,-2,-7,1,-2,-1,1,-1,-8],[-6,-2,-6,-7,-6,8,7,7,-10,-2,4,7,10,-3,-2,6,9,-4,2,1,-6,-10,-4,-2,1,3,-9,-3,10,-10,6,-8,-1,-9,-4,5,-9,4,-1,-8,-2,10,-1,8,8,4,3,10,-6,1,9,-1,10,-10,4,3,-8,7,3,-3,-5,-6,2,-2,-5,10,8,10,9,-7,9,8,3,9,1,9,-2,4,-1,2,-9,9,4,-5],[3,-5,-2,-10,-10,-10,-2,9,-4,-7,9,-2,-2,8,-2,8,-5,-10,9,1,-10,2,-10,5,4,-8,3,-5,-2,-10,4,-2,2,5,1,-3,-6,2,-6,9,-2,6,8,-8,-2,5,-8,-6,-10,-4,-6,-3,-3,-6,3,-10,-4,-8,-8,1,7,-10,6,7,-7,-6,-9,-3,3,1,7,-10,-8,3,9,7,-1,-2,1,2,10,10,8,-10],[-7,8,-2,6,1,7,-3,-7,-1,3,8,-1,7,10,7,8,-2,-7,-9,6,2,1,8,-2,-8,-1,2,9,-5,7,-10,3,5,6,-3,-5,6,10,7,10,-7,-6,-5,10,-3,-2,-4,-4,-7,3,5,-6,-6,-2,10,-8,7,8,8,-3,-5,-5,2,-7,2,-2,10,7,-6,-10,-4,-5,-4,-4,1,5,-4,6,-10,6,5,-8,-6,2],[5,-2,10,-10,10,-7,1,8,2,1,7,3,-3,-6,5,5,-7,9,-4,-4,-2,7,2,-9,1,6,5,-1,-10,1,4,7,3,-3,-4,-1,-7,-10,-4,-3,8,5,9,-6,-3,-4,3,10,-7,10,7,10,10,3,10,10,-5,3,-9,3,-6,-8,-8,2,9,-1,-5,-10,-2,10,-9,9,-7,8,-3,-7,7,7,-4,-3,3,1,4,5],[-4,-5,9,-9,-10,2,7,10,7,-1,6,-5,-7,-9,8,4,-2,7,7,-6,4,-8,-7,6,8,6,1,-5,8,9,9,-9,4,-10,3,-6,4,-7,4,5,-1,6,-2,2,6,-7,-7,-5,4,4,1,-2,5,6,-3,3,-1,7,1,-3,-3,1,-9,-2,10,-8,-7,-6,10,-4,-4,-6,-6,-8,2,-4,-6,-6,-1,-7,4,4,8,6],[3,-2,4,1,2,-9,-3,-1,7,-3,6,1,-5,-3,-4,-10,8,-1,-1,4,-4,-8,-7,-7,6,5,9,-4,-9,-7,6,10,-3,-8,-5,-6,7,-7,4,-9,3,-2,7,7,3,-9,-5,-4,-1,-3,-5,7,-4,6,-8,6,-6,2,-4,-1,6,5,10,10,-2,-10,-3,-8,-1,2,-9,9,-7,-9,3,-8,-2,10,2,3,-4,-10,-10,-3]], dtype = "int32")#candidate|3270|(12, 84)|const|int32
call_3269 = relay.TupleGetItem(func_1340_call(relay.reshape(const_3270.astype('int32'), [14, 6, 12])), 3)
call_3271 = relay.TupleGetItem(func_1343_call(relay.reshape(const_3270.astype('int32'), [14, 6, 12])), 3)
var_3272 = relay.var("var_3272", dtype = "float32", shape = (1800,))#candidate|3272|(1800,)|var|float32
bop_3273 = relay.left_shift(call_3269.astype('int64'), relay.reshape(var_3272.astype('int64'), relay.shape_of(call_3269))) # shape=(1800,)
bop_3276 = relay.left_shift(call_3271.astype('int64'), relay.reshape(var_3272.astype('int64'), relay.shape_of(call_3271))) # shape=(1800,)
output = relay.Tuple([call_3264,const_3270,bop_3273,])
output2 = relay.Tuple([call_3265,const_3270,bop_3276,])
func_3277 = relay.Function([var_3272,], output)
mod['func_3277'] = func_3277
mod = relay.transform.InferType()(mod)
mutated_mod['func_3277'] = func_3277
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3278 = relay.var("var_3278", dtype = "float32", shape = (1800,))#candidate|3278|(1800,)|var|float32
func_3277_call = mutated_mod.get_global_var('func_3277')
call_3279 = func_3277_call(var_3278)
output = call_3279
func_3280 = relay.Function([var_3278], output)
mutated_mod['func_3280'] = func_3280
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3342 = relay.var("var_3342", dtype = "float32", shape = (4, 4, 15))#candidate|3342|(4, 4, 15)|var|float32
const_3343 = relay.const([[[8.836795,-1.067232,5.570647,6.076839,1.214619,-8.732620,-4.475633,-7.893338,7.951747,3.192778,-8.425898,1.187469,-6.131380,-8.916399,-2.413336],[-5.121160,-5.285382,0.593313,-5.026758,7.982145,6.693936,-4.312043,0.407570,6.534834,2.641327,-5.432518,-9.661749,-9.014970,-6.874997,-0.466597],[7.213978,9.083818,5.393818,0.815777,1.887513,1.380166,-6.976261,0.994014,-7.890964,-6.096518,5.932483,4.063982,-3.520758,-0.093395,-4.156172],[-7.470589,5.055254,2.065128,-1.982393,-9.365636,2.208781,-2.177618,-2.907916,-9.442753,-5.401106,-8.894874,3.966089,-3.044541,-5.643314,1.431003]],[[1.706788,-1.816902,5.015898,1.085586,-7.816365,8.216102,7.050544,7.630477,7.000990,-5.196605,-4.399978,9.782431,-6.857528,8.928359,-0.762165],[2.642329,-8.116380,-2.264186,1.961110,7.359848,-7.131409,9.980015,-4.595994,2.416539,-1.268788,-2.951536,-3.917329,8.227778,2.593336,2.940434],[9.721200,0.641407,-0.608862,2.344550,9.705723,8.483699,2.429514,5.339348,7.409862,-9.473040,-2.545040,-8.571559,-3.166725,4.665748,8.270544],[-0.890791,1.092557,-5.119874,4.506955,7.190709,5.063868,-2.827185,3.344436,-1.721630,-6.806983,7.913228,2.712413,-3.182641,1.532616,9.471355]],[[-8.053468,4.460922,1.904758,-9.617410,2.254837,0.251251,-5.680226,4.992266,6.627997,3.905227,-0.177888,-7.550727,-4.948286,-9.330055,-4.773522],[-0.573827,4.768293,-6.782014,-3.527715,5.364189,-3.815503,-7.581908,2.175435,1.908211,4.387995,-3.589878,2.986719,-3.872647,0.696245,1.163438],[-4.670720,2.338030,8.293812,9.296116,-4.827508,1.695370,7.470175,6.575405,8.401337,-4.245442,2.485655,9.490628,9.665434,8.061075,-8.313578],[2.435124,-3.161984,-3.534302,-3.602589,2.814789,-6.851360,-8.016782,-3.857381,-7.210029,-2.267984,3.345242,-5.281044,-2.108162,-7.395738,-0.454096]],[[-1.876200,0.760868,-2.018359,-3.232148,2.391254,2.574033,-4.839400,-3.727917,-2.551726,-6.401816,0.469357,-1.393170,-9.240947,0.633157,-6.394334],[3.232629,8.603588,-1.046712,-2.505698,1.861806,-3.237045,-9.919190,-4.171748,-6.723738,7.974331,1.098958,-3.697204,-5.254954,-2.094347,9.730861],[-4.687665,4.546560,4.059564,0.858035,-6.991723,-1.683515,-7.162602,2.641097,1.664205,2.676168,-1.174296,0.795029,-2.322127,-4.695107,2.649336],[-1.541000,-8.442238,-1.063164,3.307497,-6.974885,-1.737101,-8.663305,8.509937,0.118977,4.004938,9.215062,0.118980,-8.491967,3.413000,-5.681873]]], dtype = "float32")#candidate|3343|(4, 4, 15)|const|float32
bop_3344 = relay.floor_divide(var_3342.astype('float32'), relay.reshape(const_3343.astype('float32'), relay.shape_of(var_3342))) # shape=(4, 4, 15)
output = bop_3344
output2 = bop_3344
func_3351 = relay.Function([var_3342,], output)
mod['func_3351'] = func_3351
mod = relay.transform.InferType()(mod)
var_3352 = relay.var("var_3352", dtype = "float32", shape = (4, 4, 15))#candidate|3352|(4, 4, 15)|var|float32
output = func_3351(var_3352)
func_3353 = relay.Function([var_3352], output)
mutated_mod['func_3353'] = func_3353
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3355 = relay.var("var_3355", dtype = "int8", shape = (16, 12))#candidate|3355|(16, 12)|var|int8
var_3356 = relay.var("var_3356", dtype = "int8", shape = (16, 12))#candidate|3356|(16, 12)|var|int8
bop_3357 = relay.logical_xor(var_3355.astype('int8'), relay.reshape(var_3356.astype('int8'), relay.shape_of(var_3355))) # shape=(16, 12)
func_3086_call = mod.get_global_var('func_3086')
func_3088_call = mutated_mod.get_global_var('func_3088')
call_3360 = func_3086_call()
call_3361 = func_3086_call()
func_315_call = mod.get_global_var('func_315')
func_318_call = mutated_mod.get_global_var('func_318')
var_3383 = relay.var("var_3383", dtype = "int64", shape = (252, 4))#candidate|3383|(252, 4)|var|int64
const_3384 = relay.const([-3,-2,-6,5,-6,5,4,1,-3,-4,-8,-3,10,-6,-10,-4,7,2,-1,-7,-1,-9,2,-9,-10,7,-9,-10,8,9,2,3,-1,5,1,1,6,1,3,-10,2,-2,10,9,-10,5,4,-1,4,-9,8,9,3,2,9,-10,1,-1,3,-8,8,5,3,9,2,10,-1,5,-8,-9,-1,7,10,-3,-10,6,-4,10,-6,5,-8,-9,-6,2,-1,1,1,-2,-8,3,-7,5,-1,9,5,-5,-10,1,-9,10,-5,2,8,6,10,-3,-10,8,-5,-9,10,-3,-10,-6,9,-1,-4,-10,-6,10,6,2,-4,-7,9,7,-4,10,9,5,2,4,-8,10,-9,-9,-6,2,3,-6,7,-2,8,-7,9,-6,-9,-7,-3,8,-1,-10,1,-6,-1,-9,-8,1,4,-4,1,4,-8,-4,1,-6,10,9,6,-8,-6,5,-9,-1,-4,5,-2,-3,3,-3,1,7,7,-5,-1,-2,-1,2,-5,2,-5,5,10,-10,-7,-9,6,10,-2,-6,9,10,7,1,-5,1,3,-9,-8,-6,-6,3,-1,-5,1,5,-9,1,7,8,-6,3,-7,-10,5,-9,-1,3,7,-6,-9,-8,6,-6,1,6,-3,5,-3,-4,-3,9,5,-7,-10,-1,-3,-7,10,3,-9,9,10,-1,-10,-3,-8,-8,-4,7,7,-3,1,-7,-5,-2,-1,-6,4,-6,-4,9,3,7,2,3,6,-10,-6,-5,9,-5,8,-1,-1,-1,10,-9,9,2,1,-3,-1,-3,-9,-10,-8,9,6,-2,-1,-2,-5,5,6,-5,3,6,-2,3,-1,-10,-7,7,-2,-2,4,-5,-6,2,10,-1,-7,8,-9,-1,-3,-9,3,-8,7,-10,-6,9,-5,-6,-10,7,7,7,6,4,10,-2,1,5,-1,-10,-10,-1,-2,2,-5,9,6,-7,3,-4,7,3], dtype = "uint8")#candidate|3384|(360,)|const|uint8
call_3382 = relay.TupleGetItem(func_315_call(relay.reshape(var_3383.astype('int64'), [9, 8, 14]), relay.reshape(const_3384.astype('uint8'), [360,]), ), 1)
call_3385 = relay.TupleGetItem(func_318_call(relay.reshape(var_3383.astype('int64'), [9, 8, 14]), relay.reshape(const_3384.astype('uint8'), [360,]), ), 1)
output = relay.Tuple([bop_3357,call_3360,call_3382,var_3383,const_3384,])
output2 = relay.Tuple([bop_3357,call_3361,call_3385,var_3383,const_3384,])
func_3390 = relay.Function([var_3355,var_3356,var_3383,], output)
mod['func_3390'] = func_3390
mod = relay.transform.InferType()(mod)
var_3391 = relay.var("var_3391", dtype = "int8", shape = (16, 12))#candidate|3391|(16, 12)|var|int8
var_3392 = relay.var("var_3392", dtype = "int8", shape = (16, 12))#candidate|3392|(16, 12)|var|int8
var_3393 = relay.var("var_3393", dtype = "int64", shape = (252, 4))#candidate|3393|(252, 4)|var|int64
output = func_3390(var_3391,var_3392,var_3393,)
func_3394 = relay.Function([var_3391,var_3392,var_3393,], output)
mutated_mod['func_3394'] = func_3394
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2925_call = mod.get_global_var('func_2925')
func_2927_call = mutated_mod.get_global_var('func_2927')
call_3423 = relay.TupleGetItem(func_2925_call(), 0)
call_3424 = relay.TupleGetItem(func_2927_call(), 0)
func_2692_call = mod.get_global_var('func_2692')
func_2694_call = mutated_mod.get_global_var('func_2694')
const_3426 = relay.const([6.445891,2.043157,-5.744272,7.539128,6.406672,2.355725,-7.311593,4.035232,4.257948,-1.722453,4.064572,0.104098,-9.632261,-1.614914,9.925777,5.234583,1.807446,-9.168353,-0.484794,-0.258413,0.672866,-1.673234,6.377981,-6.062557,6.277812,3.852395,2.364794,-0.065394,-2.213145,8.792903,-5.168865,-7.014939,-0.494461,2.231167,9.264770,-9.175649,0.833830,-4.226150,-3.517956,7.016787,-3.851739,-4.452529,-9.919704,3.825726,-5.031699,-5.939661,-0.820637,-3.216677,-3.533846,2.708229,-3.109603,-3.972198,-3.968813,-4.071332,6.524865,4.672875,-3.894661,-8.025834,-3.631569,7.472033,-7.038742,1.430101,1.384021,8.681721,9.710209,0.881077,9.701364,0.757041,-6.643111,-3.760649,9.514645,5.744056,-3.797572,-9.323822,-6.985986,6.487922,-3.566643,8.211152,-6.412713,0.021446,9.421624,5.340995,-3.805625,-4.886022,1.171105,8.982237,-9.945275,-2.189149], dtype = "float32")#candidate|3426|(88,)|const|float32
call_3425 = relay.TupleGetItem(func_2692_call(relay.reshape(const_3426.astype('float32'), [88,])), 2)
call_3427 = relay.TupleGetItem(func_2694_call(relay.reshape(const_3426.astype('float32'), [88,])), 2)
output = relay.Tuple([call_3423,call_3425,const_3426,])
output2 = relay.Tuple([call_3424,call_3427,const_3426,])
func_3439 = relay.Function([], output)
mod['func_3439'] = func_3439
mod = relay.transform.InferType()(mod)
output = func_3439()
func_3440 = relay.Function([], output)
mutated_mod['func_3440'] = func_3440
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2925_call = mod.get_global_var('func_2925')
func_2927_call = mutated_mod.get_global_var('func_2927')
call_3459 = relay.TupleGetItem(func_2925_call(), 0)
call_3460 = relay.TupleGetItem(func_2927_call(), 0)
func_48_call = mod.get_global_var('func_48')
func_51_call = mutated_mod.get_global_var('func_51')
var_3465 = relay.var("var_3465", dtype = "uint8", shape = (360,))#candidate|3465|(360,)|var|uint8
call_3464 = func_48_call(relay.reshape(var_3465.astype('uint8'), [8, 9, 5]), relay.reshape(var_3465.astype('uint8'), [8, 9, 5]), )
call_3466 = func_48_call(relay.reshape(var_3465.astype('uint8'), [8, 9, 5]), relay.reshape(var_3465.astype('uint8'), [8, 9, 5]), )
output = relay.Tuple([call_3459,call_3464,var_3465,])
output2 = relay.Tuple([call_3460,call_3466,var_3465,])
func_3468 = relay.Function([var_3465,], output)
mod['func_3468'] = func_3468
mod = relay.transform.InferType()(mod)
var_3469 = relay.var("var_3469", dtype = "uint8", shape = (360,))#candidate|3469|(360,)|var|uint8
output = func_3468(var_3469)
func_3470 = relay.Function([var_3469], output)
mutated_mod['func_3470'] = func_3470
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2842_call = mod.get_global_var('func_2842')
func_2844_call = mutated_mod.get_global_var('func_2844')
call_3496 = relay.TupleGetItem(func_2842_call(), 0)
call_3497 = relay.TupleGetItem(func_2844_call(), 0)
func_1695_call = mod.get_global_var('func_1695')
func_1698_call = mutated_mod.get_global_var('func_1698')
var_3506 = relay.var("var_3506", dtype = "float32", shape = (360,))#candidate|3506|(360,)|var|float32
call_3505 = relay.TupleGetItem(func_1695_call(relay.reshape(var_3506.astype('float32'), [3, 8, 15])), 0)
call_3507 = relay.TupleGetItem(func_1698_call(relay.reshape(var_3506.astype('float32'), [3, 8, 15])), 0)
func_668_call = mod.get_global_var('func_668')
func_670_call = mutated_mod.get_global_var('func_670')
const_3512 = relay.const([[-6,6,9,-7],[-4,3,-6,5],[7,-7,-8,-1],[6,-3,-3,2],[5,7,1,8],[-10,-1,-4,-4],[-2,1,-8,10],[6,7,-6,9],[6,-5,2,2],[6,10,-2,3],[7,-3,8,-9],[1,-4,-4,10],[8,8,-9,-6],[6,5,2,3],[1,4,-1,6],[10,9,-2,5],[4,-4,6,10],[-7,9,2,-9],[-7,-4,6,2],[-9,-10,-10,3],[-2,9,-8,-9],[3,-2,-9,-1],[6,9,-5,-7],[-2,7,6,7],[8,6,-6,-1],[-3,5,-6,10],[-2,-3,10,3],[-9,-7,10,-2],[2,6,-1,9],[2,7,10,9],[8,1,3,1],[2,-8,-2,3],[-8,-3,8,4],[4,9,9,-8],[-1,5,10,-6]], dtype = "int8")#candidate|3512|(35, 4)|const|int8
call_3511 = relay.TupleGetItem(func_668_call(relay.reshape(const_3512.astype('int8'), [1, 10, 14])), 0)
call_3513 = relay.TupleGetItem(func_670_call(relay.reshape(const_3512.astype('int8'), [1, 10, 14])), 0)
func_3151_call = mod.get_global_var('func_3151')
func_3155_call = mutated_mod.get_global_var('func_3155')
const_3518 = relay.const([5,-10,1,-6,1,-4,-8,-10,2,3,8,2,-5,3,-1,9,6,-6,1,7,-1,2,3,-2,-2,2,9,5,-4,9,7,-3,9,9,3,-2,4,-6,8,3,2,-9,-1,2,-5,3,1,4,-5,-2,6,5,-9,-8,-10,6,8,1,-2,-5,6,-8,3,-10,4,9,7,-1,-6,5,9,5,9,-7,3,-7,-9,7,-8,2,-1,1,4,6,2,-3,-5,10,-6,-4,-10,-9,7,-3,-5,6,-4,3,10,6,-3,2,-9,3,-9,8,7,8,-1,10,6,1,-4,5,-6,-7,-4,-8,-3,-2,-7,2,6,-9,-3,-5,6,6,-2,5,6,10,10,4,-8,-6,5,-8,-1,7,7,-2,10,4,-3,-2,2,-8,10,8,8,-3,-3,3,-10,-10,4,2,2,-6,7,-5,-1,-1,-6,-1,4,-5,-6,3,-9,-5,-6,7,-4,-4,-2,-10,-1,6,-2,10,-10,5,5,4,-10,9,5,-4,8,10,7,10,2,5,-2,2,-2,-10,2,3,4,-9,-7,-9,-3,2,10,-7,-8,8,7,-4,6,8,-9,-1,-4,-3,5,3,-3,-7,-8], dtype = "int32")#candidate|3518|(225,)|const|int32
call_3517 = relay.TupleGetItem(func_3151_call(relay.reshape(const_3518.astype('int32'), [5, 15, 3]), relay.reshape(const_3518.astype('int32'), [5, 15, 3]), ), 1)
call_3519 = relay.TupleGetItem(func_3155_call(relay.reshape(const_3518.astype('int32'), [5, 15, 3]), relay.reshape(const_3518.astype('int32'), [5, 15, 3]), ), 1)
func_3006_call = mod.get_global_var('func_3006')
func_3009_call = mutated_mod.get_global_var('func_3009')
const_3522 = relay.const([True,False,False,False,True,True,True,False,True,False,False,True,False,True,True,True,True,True,False,False,True,True,False,True], dtype = "bool")#candidate|3522|(24,)|const|bool
call_3521 = func_3006_call(relay.reshape(const_3522.astype('bool'), [3, 4, 2]))
call_3523 = func_3006_call(relay.reshape(const_3522.astype('bool'), [3, 4, 2]))
func_315_call = mod.get_global_var('func_315')
func_318_call = mutated_mod.get_global_var('func_318')
const_3526 = relay.const([-3,-8,8,8,-8,-2,5,5,-6,-10,-10,-9,-4,-6,-10,-8,4,5,-9,1,-3,6,-5,-8,7,-1,-5,-9,-3,10,8,8,6,-3,-6,10,9,9,-4,6,5,2,8,-10,8,4,-8,9,-6,6,-9,3,-2,-4,1,2,7,-7,7,6,5,-1,-2,6,-5,2,-9,-3,-9,-7,-9,8,3,3,-1,5,-8,-1,-9,10,9,7,9,7,9,2,-3,7,4,-3,-10,-4,-5,1,-2,-7,5,7,5,5,7,5,-6,3,-2,-8,5,1,5,-5,2,-7,7,2,5,-8,-3,-10,5,10,10,-8,-9,6,-8,2,2,-9,-1,-2,8,-1,-3,1,-6,5,-10,10,9,-5,4,1,5,4,-10,-6,-6,-1,-8,9,3,10,7,3,6,7,5,6,7,-8,8,-7,-1,-7,1,2,10,-7,10,4,-8,-5,-8,-3,-5,-6,-6,-9,-1,5,2,6,-7,-2,-3,-2,7,3,10,-4,10,-8,-3,3,-3,8,6,-1,6,-10,10,-9,-3,4,-10,-10,8,-7,7,7,-8,7,-8,7,-10,5,2,8,-8,-9,-1,-1,9,2,-7,5,-3,-9,3,-6,-2,-4,5,-8,-2,-1,7,6,9,-3,-6,-2,-3,1,-5,-8,10,-1,-3,7,-7,-10,2,2,3,-8,4,-9,10,-2,9,-2,-3,5,2,-1,2,-5,9,-8,3,-1,-7,-3,-2,-4,6,-9,8,4,8,9,1,6,1,2,1,2,-6,7,-1,-9,6,7,4,4,-9,1,8,9,1,-5,9,-2,-4,2,-9,-4,1,-7,-7,4,-5,-7,2,2,9,8,5,-2,-1,6,-7,5,4,-2,4,-8,-3,-1,8,10,1,5,2,-4,-4,-2,-3,-1,-10,7,-3,4,7,-2,-7,4,4,3,-9,-8,-9,3,9,8,-9,5,9,7,-5,5,-3,9,10,-3,2,3,-4,-5,10,-4,10,10,-9,7,8,-5,3,-8,7,-4,-3,-2,3,9,1,-6,-3,10,3,-5,1,2,3,9,-1,8,-9,-2,8,-10,5,9,2,9,9,6,3,6,-10,-7,-7,9,-5,-10,2,-1,-6,6,-2,-5,10,-2,1,-2,-10,-4,-4,-5,-3,2,-7,-6,-3,-2,9,7,9,6,-5,3,-5,-4,-1,8,4,-1,10,5,-10,-10,4,-8,-7,5,3,9,6,-7,-2,10,2,8,-7,-9,10,3,9,9,8,-9,-1,-10,-4,3,-9,-6,4,-5,7,-5,-5,2,-4,1,-4,-4,1,-3,1,4,1,-3,4,-6,-3,-9,-3,-2,2,10,6,-1,10,-3,-2,-10,-7,-9,-2,1,6,-4,2,6,1,-10,-2,3,6,2,3,4,7,-10,-6,6,10,1,-8,-6,2,8,-6,7,-9,4,1,3,-1,8,-1,-1,4,4,10,-3,-5,-8,5,5,-4,-7,8,4,-2,-9,9,-5,4,5,9,-8,-2,-5,2,3,2,-1,-2,10,-1,7,10,1,3,-10,7,-7,4,7,4,2,-2,6,1,-5,6,-10,-6,-4,10,-3,2,7,-2,4,4,1,10,-9,-3,3,10,8,4,-7,6,1,-8,5,-5,-7,6,7,3,-9,2,-8,5,8,-7,-6,-3,-2,7,4,-8,-1,8,4,-3,10,5,8,3,1,-1,5,-6,-6,6,-5,10,3,-3,9,-8,-1,-6,-4,5,9,4,9,-2,-3,6,5,3,5,-2,9,-5,6,-9,10,-8,9,4,-4,-2,7,6,-5,-9,-2,-7,5,-3,-3,1,-8,2,-3,-5,5,5,-9,-3,7,-5,6,-1,-1,-2,-9,-8,4,-4,8,-5,9,4,-8,-2,-10,-3,8,7,-8,-6,6,4,5,8,-7,6,-2,6,7,4,-7,-4,-2,-6,4,7,-5,-9,-9,2,1,-4,8,10,9,3,-2,3,-1,-4,1,4,-4,-4,1,9,-6,2,6,-1,7,-3,4,5,-4,-8,-2,-9,-7,-7,1,-10,-2,4,8,3,3,6,-1,-1,-10,10,-3,-8,3,9,-3,2,-5,1,6,-9,-1,4,-6,9,-8,-9,7,3,3,4,3,1,-6,9,8,9,-5,-1,2,8,-8,-2,2,-5,-7,3,8,-8,-6,-6,-7,4,-10,4,7,-3,-8,-10,-8,7,5,-5,-4,7,2,-6,8,2,7,1,7,-8,9,-7,-4,-6,6,2,-6,10,4,-6,8,-2,3,8,9,7,6,9,-10,-1,-6,-4,3,10,-4,2,4,6,9,-1,1,-8,-4,9,4,8,-2,-2,-8,4,9,-3,-8,-4,4,7,5,-4,-4,1,-10,8,3,9,-2,-5,-7,-6,7,3,-5,-7,-6,9,2,10,1,6,-9,7,-7,4,1,2,2,-9,6,7,-5,-3,-6,-2,10,1,4,3,-10,-9,7,-9,7,-5,-2,-8,-9,-7,-6,2,-7,-7,10,-4,5,9,5,2,-6,6,9,8,-4,3,-3,6,-9,-3,-1,9,-10,-9,-6,6,7,-1,-3,6,-3,-7,-5,6,-8,-3,8,6,-2,-1,-7,10,9,4,-10,9,-9,-10,1,-10,-9,-9,-7,-2,-3,7,2,-6,3,-10,10,6,8,-6,6,-2,-3,9,-6,-10,6,9,-7,6,6], dtype = "int64")#candidate|3526|(1008,)|const|int64
call_3525 = relay.TupleGetItem(func_315_call(relay.reshape(const_3526.astype('int64'), [9, 8, 14]), relay.reshape(call_3505.astype('uint8'), [360,]), ), 2)
call_3527 = relay.TupleGetItem(func_318_call(relay.reshape(const_3526.astype('int64'), [9, 8, 14]), relay.reshape(call_3505.astype('uint8'), [360,]), ), 2)
func_48_call = mod.get_global_var('func_48')
func_51_call = mutated_mod.get_global_var('func_51')
call_3533 = func_48_call(relay.reshape(var_3506.astype('uint8'), [8, 9, 5]), relay.reshape(var_3506.astype('uint8'), [8, 9, 5]), )
call_3534 = func_48_call(relay.reshape(var_3506.astype('uint8'), [8, 9, 5]), relay.reshape(var_3506.astype('uint8'), [8, 9, 5]), )
func_48_call = mod.get_global_var('func_48')
func_51_call = mutated_mod.get_global_var('func_51')
call_3540 = func_48_call(relay.reshape(call_3525.astype('uint8'), [8, 9, 5]), relay.reshape(var_3506.astype('uint8'), [8, 9, 5]), )
call_3541 = func_48_call(relay.reshape(call_3525.astype('uint8'), [8, 9, 5]), relay.reshape(var_3506.astype('uint8'), [8, 9, 5]), )
func_3221_call = mod.get_global_var('func_3221')
func_3225_call = mutated_mod.get_global_var('func_3225')
var_3547 = relay.var("var_3547", dtype = "float32", shape = (32,))#candidate|3547|(32,)|var|float32
var_3548 = relay.var("var_3548", dtype = "bool", shape = (25200,))#candidate|3548|(25200,)|var|bool
call_3546 = relay.TupleGetItem(func_3221_call(relay.reshape(var_3547.astype('float32'), [32,]), relay.reshape(var_3548.astype('bool'), [14, 1800]), relay.reshape(var_3548.astype('bool'), [14, 1800]), ), 0)
call_3549 = relay.TupleGetItem(func_3225_call(relay.reshape(var_3547.astype('float32'), [32,]), relay.reshape(var_3548.astype('bool'), [14, 1800]), relay.reshape(var_3548.astype('bool'), [14, 1800]), ), 0)
output = relay.Tuple([call_3496,call_3505,var_3506,call_3511,const_3512,call_3517,const_3518,call_3521,const_3522,call_3525,const_3526,call_3533,call_3540,call_3546,var_3547,var_3548,])
output2 = relay.Tuple([call_3497,call_3507,var_3506,call_3513,const_3512,call_3519,const_3518,call_3523,const_3522,call_3527,const_3526,call_3534,call_3541,call_3549,var_3547,var_3548,])
func_3551 = relay.Function([var_3506,var_3547,var_3548,], output)
mod['func_3551'] = func_3551
mod = relay.transform.InferType()(mod)
mutated_mod['func_3551'] = func_3551
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3551_call = mutated_mod.get_global_var('func_3551')
var_3553 = relay.var("var_3553", dtype = "float32", shape = (360,))#candidate|3553|(360,)|var|float32
var_3554 = relay.var("var_3554", dtype = "float32", shape = (32,))#candidate|3554|(32,)|var|float32
var_3555 = relay.var("var_3555", dtype = "bool", shape = (25200,))#candidate|3555|(25200,)|var|bool
call_3552 = func_3551_call(var_3553,var_3554,var_3555,)
output = call_3552
func_3556 = relay.Function([var_3553,var_3554,var_3555,], output)
mutated_mod['func_3556'] = func_3556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2660_call = mod.get_global_var('func_2660')
func_2662_call = mutated_mod.get_global_var('func_2662')
call_3620 = relay.TupleGetItem(func_2660_call(), 1)
call_3621 = relay.TupleGetItem(func_2662_call(), 1)
uop_3633 = relay.asinh(call_3620.astype('float64')) # shape=(48,)
uop_3635 = relay.asinh(call_3621.astype('float64')) # shape=(48,)
func_2722_call = mod.get_global_var('func_2722')
func_2725_call = mutated_mod.get_global_var('func_2725')
var_3668 = relay.var("var_3668", dtype = "float32", shape = (63,))#candidate|3668|(63,)|var|float32
call_3667 = relay.TupleGetItem(func_2722_call(relay.reshape(var_3668.astype('float32'), [63, 1])), 1)
call_3669 = relay.TupleGetItem(func_2725_call(relay.reshape(var_3668.astype('float32'), [63, 1])), 1)
func_1551_call = mod.get_global_var('func_1551')
func_1555_call = mutated_mod.get_global_var('func_1555')
const_3674 = relay.const([-8.688558,-6.522797,-1.164994,7.113389,6.233723,-3.214397,-3.565465,5.044190,-0.658015,4.417433,-1.852983,-7.691777,6.153267,4.564887,5.576504,-4.238640,8.793982,-3.954070,-0.180229,4.069347,5.058808,-3.043327,4.101731,7.213388,6.833829,-3.308265,-0.304849,-8.642726,-1.074828,-6.264776,-5.999872,-6.484856,5.613950,7.442603,-4.975964,-2.619787,6.425397,-3.416865,-1.809647,-9.592270,-6.394452,7.464457,-8.302909,-0.903141,-9.433405,-2.043752,0.977775,-7.015703,5.964973,0.785717,6.293002,8.391028,-1.386222,8.517773,4.759732,-3.702968,5.402161,-2.953734,3.318737,-5.326473,5.208559,3.299201,6.199025,-6.247052,2.315086,2.255205,7.210673,0.820933,-1.633822,-3.413049,1.175193,4.397487,8.442145,-6.033994,0.907077,-8.817522,8.966176,6.679487,3.680734,-2.149828,4.812109,0.924677,-9.319478,3.892768,-8.439590,9.153409,-7.481575,-1.355606], dtype = "float32")#candidate|3674|(88,)|const|float32
const_3675 = relay.const([4.764757,3.069873,-3.822607,-7.312417,6.477802,-2.908664,-4.724307,-7.099679,5.604626,1.287796,-6.110263,0.500625,4.837037,1.197325,9.264750,-6.999776,3.760250,-3.607682,2.894399,-7.478952,-8.002357,0.876836,-3.819416,-7.749908,-1.772352,-7.540215,-4.489626,2.919696,3.888759,-8.831306,-2.962261,6.967939,-3.299143,5.091377,-4.549583,-2.660374,-8.288274,9.071887,7.895110,-5.797231,-5.685258,-4.754752,-8.590260,-3.892242,-8.358230,1.441004,-5.428026,5.953934,-8.152869,-4.174967,-7.821301,8.938809,-2.796229,3.717276,4.620085,-8.349537,-9.175530,-7.247312,-0.598955,7.064833,2.738824,2.044401,0.066861,-0.026451,3.086284,9.936977,0.471964,-2.951193,4.897584,-3.888877,8.231469,-6.104830,5.560736,1.907494,-4.372847,7.898578,3.833666,2.023984,2.976487,-7.302097,-2.489215,-3.699993,-4.242212,2.796305,6.865932,-2.912687,-4.968750,-5.599738,5.118779,-7.852557,-5.418199,2.670529,-6.811356,2.661517,-4.342752,9.283964,7.755500,1.558371,-8.905401,4.805500,-2.236045,4.969245,3.051025,-3.192474,0.228004,-3.377113,-2.683452,7.434413,-3.464570,-0.063121,-8.227329,6.367126,-1.165727,8.524885,6.432620,-2.863046,4.782545,5.833941,3.475597,7.003089,-0.155229,4.975159,-2.326762,7.283869,8.961230,6.927440,2.299949,7.362668,2.255683,8.616773,5.514461,-9.096717,3.962272,0.803385,-2.074870,1.973999,-2.409274,9.673356,3.385924,2.239309,5.898442,-0.673524,7.241343,-5.031153,-6.582412,-0.732265,0.049204,-8.763952,-5.923340,8.586965,9.578286,0.741865,5.273336,-6.627046,4.717629,2.823404,-1.576199,-9.540098,0.814766,3.605490,-5.043770,-9.176404,-5.388149,-0.605096,-6.025134,5.010131,-7.743025,-8.409882,-1.031113,-3.256093,-5.936281,-9.765287,4.883030,9.937226,3.384622,-3.871532,-2.385387,7.589909,-4.621058,1.927199,0.656444,-2.786207,8.655108,-6.329401,6.437952,4.595896,-0.134006,-0.472669,-3.957048,2.782873,-4.111006,6.393799,-6.715608,-9.350151,-1.392580,1.173723,-8.275248,1.633665,-6.100996,0.887701,-0.973302,-4.239664,-4.828258,-9.587261,-0.474025,-7.267083,-1.031226,5.846026,-0.265490,2.254090,2.264281,2.712021,-0.807639,7.621583,-7.914344,-7.347142,7.158291,2.481697,3.798272,7.580217,6.863416,6.312391,0.593028,-4.916102,-3.108571,4.042863,9.371066,4.427191,9.351810,-1.557020,-0.518654,0.425687,5.567884,1.660288,-7.924823,-1.806120,5.888806,9.758761,-5.784128,-5.441991,1.717896,-5.918746,-7.726017,-3.417929,-1.913131,1.851052,9.935133,5.854473,-6.426095,-3.266767,3.778052,-1.975772,-3.487232,4.040042,-5.830212,6.659090,8.601373,-3.939774,9.379135,-2.709677,1.397341,-7.245740,-7.956771,-5.259699,2.706751,0.750489,3.545285,5.799015,-9.317069,8.345601,-2.980511,-0.907447,-5.912627,-5.041854,-7.107040,-3.111686,-0.412270,-6.240423,-0.943855,0.342690,9.089713,-2.646379,7.118517,-8.967167,-0.064446,-5.638712,-2.865309,4.840538,1.886244,4.583899,-4.600966,9.277341,-4.604134,0.679935,-9.667570,-5.956802,5.712270,7.569836,-1.900761,-4.333288,7.655526,-6.045980,-8.720448,-7.564078,8.392951,7.314001,7.490995,-7.704198,-5.171800,-5.020216,3.720367,9.833706,9.213349,3.572841,-5.337689,4.382264,-2.884542,-0.853583,4.025376,-1.060520,-2.745539,-8.030838,-5.922675,0.784244,-3.543719,-8.737491,8.752841,-7.081031,-3.263606,-5.661164,-0.964101,-4.821746,4.137740,1.060589,2.259590,3.412224,3.348724,-5.163050,7.222178,-1.069684,9.379116,3.906399,-9.871620,-7.573632,5.796068,-7.908956,-3.662701,-4.786428,4.873603,-7.704643,2.928788,-8.690774,1.190073,-1.740145,-6.415804,-3.824672,3.035143,-6.143223,7.867701,-8.065732,-1.810505,-3.616009,0.839193,-7.603795,-9.820932,-2.206193,9.453225,-5.214616,5.613720,5.854282,-2.244808,4.358061,0.192312,4.446028,-7.652816,0.458522,-9.640700,1.955735,-1.443082,-2.637804,-4.472600,-7.183853,3.238695,-8.772335,5.281303,1.026809,8.307945,-1.822617,-6.741285,-6.587019,8.926119,7.793392,0.023116,-2.800438,1.081311,8.484853,3.052525,9.164670,-2.062628,3.284515,6.276937,5.472904,0.487282,0.154044,-1.660808,5.303100,8.840668,8.860564,1.618576,-4.190285,3.838988,3.436964,7.658452,8.551761,-9.463363,3.336059,7.913807,2.319725,-1.078738,6.505610,-9.194586,0.300585,7.993733,-9.853553,-7.541238,5.495451,-7.891216,-9.311191,0.288302,-9.076131,-4.311155,6.040719,-4.315877,-2.403118,4.825021,9.338219,-8.677574,2.741002,-1.093936,1.442835,-2.030130,-9.037248,1.914826,-8.500904,-6.366320,-8.366748,7.880743,5.525817,-9.874688,-9.476794,2.543971,8.827926,-3.191140,6.076139,2.968363,3.748812,-6.065929,-6.861016,-8.054427,-6.516473,3.082259,0.153368,8.774014,4.021692,6.048019,5.768647,0.738696,-5.144120,-7.004653,-9.201169,-9.780478,9.091384,1.396551,-6.124944,8.353660,9.615245,-4.393398,2.863796,8.993571,6.538955,-5.728296,8.732002,-9.977898,-7.940666,5.955354,-9.888605,-4.295971,-1.524388,5.949401,-1.672819,-3.298493,-7.383391,-9.012761,-2.649058,-0.865128,-0.825068,-1.068029,-5.541775,-2.980830,7.859316,-0.565134,7.732391,-2.663112,-8.066006,1.801818,-6.946685,-7.996566,-2.771242,-2.994678,-8.211840,-6.405398,4.240721,-7.804962,6.916013,-1.207921,2.314850,-3.214844,-0.971439,-6.438080,5.494540,4.070406,6.120421,-2.149566,-1.113922,-8.957696,0.390430,-4.594123,-9.960246,-2.269287,4.488869,-8.571082,7.086669,9.855037,1.396413,0.526908,5.945102,-4.635543,-1.181488,-1.423346,5.281714,-1.623248,-5.852958,-5.762373,0.987070,-9.748076,4.898057,1.407020,-0.523887,-1.255648,8.650887,-7.526078,-6.067660,1.368186,2.761788,-0.833080,5.850973,7.501633,3.464938,-3.361484,-7.660074,3.556942,5.798671,3.829954,3.550240,-2.736058,4.064913,-0.190580,7.311560,-1.506213,2.609933,-8.068236,0.805102,-5.887923,4.906215,-0.162018,-6.330997,4.272393,-9.915849,1.825664,5.222685,-1.601442,-5.361973,-1.473167,9.958953,-9.219294,3.429087,3.473917,-7.670607,6.912008,-3.599515,0.688903,4.211140,-4.053459,0.654174,-3.863344,7.303800,2.026939,8.164324,-1.796532,1.862692,2.371438,2.420724,3.806834,5.839881,6.420916,-9.626867,-0.307734,6.060853,-7.080085,-0.338492,1.409150,8.034667,8.923882,9.701557,7.711376,-9.403850,9.338319,7.970526,8.832183,-7.021902,-5.967273,8.560454,-8.124936,-5.075193,-8.403066,2.657651,-2.664465,-1.906858,9.363232,3.171845,-6.952671,-1.657013,2.663053,6.114765,-8.012492,4.150634,-8.386262,9.902269,-2.761328,6.970455,-6.155526,-9.681328,-0.241409,-7.639822,-3.608665,-0.775700,9.050313,7.506654,3.367119,6.373252,-2.627250,-6.534482,5.932131,6.100875,7.690156,-7.311234,-0.622476,9.358646,-2.991477,-9.210104,3.956012,4.561652,3.332959,-7.618437,9.417569,-1.763320,-7.057987,5.238661,-8.816840,5.147785,1.629943,0.174790,1.940277,-6.001149,-5.540830,-1.680431,-5.845929,-8.235026,-0.187340,-0.531117,-8.038084,7.527321,4.649446,5.382797,-9.530522,-3.629207,-4.478737,7.354555,-1.852598,9.942955,-1.545141,-9.832506,-1.602601,4.739697,9.007999,-3.883198,-6.989445,3.528189,-0.092510,-6.888113,5.734496,6.096405,-5.523656,5.230074,-5.946858,-9.588547,5.847730,3.749693,4.411082,-5.842676,-5.978911,5.093630,9.638153,3.092078,1.540532,-3.980707,-3.177031,-1.144919,-6.483865,4.101306,0.303407,6.529757,-4.139265,-8.509403,4.504461,3.476528,5.205368,8.484295,6.629391,2.689057,-7.078469,4.282039,3.709434,8.296870,-4.298165,-4.150291,-5.061939,-4.469748,4.104662,4.051492,2.305377,-7.537357,4.493277,5.495452,-7.833765,5.569887,-6.784164,3.130477,-5.361505,4.884603,5.696942,-2.234477,-7.017471,6.090830,9.006777,-1.361783,6.387029,-7.669930,-9.922219,3.085880,-4.234461,4.491576,9.989216,-1.269884,-9.372204,-2.340605,7.460096,8.819707,8.588938,4.513134,8.004608,-7.515145,7.584011,5.533059,-5.968476,-6.207092,7.001580,-9.501049,8.988917,5.994582,-0.418942,7.324780,-7.518415,5.936311,2.756635,8.754869,2.214040,4.340820,-2.367721,-1.504857,2.372642,7.713501,2.033895,-8.535206,-6.531849,-1.632396,1.414802,-8.850646,-3.051792,-3.546675,1.950980,6.343442,4.788005,0.201333,2.266663,-9.129538,-6.856737,-3.744162,1.556551,-2.014173,-5.071378,3.408253,2.321737,5.339145,8.870157,2.332041,0.871281,5.205427,-1.299690,-6.642871,9.236016,-0.494045,-5.380297,5.120975,1.561745,9.220122,-0.538449,-7.099063,0.998245,5.175975,0.174993,6.350287,9.307109,1.733033,6.837237,-7.633387,-4.085299,-0.751744,9.551983,1.352823,-8.959984,-8.132373,6.343093,-1.624247,-5.709495,0.581198,-2.798456,5.881765,-7.431397,6.735209,-9.935237,-4.516346,8.429795,-7.230284,-6.766619,7.293638,-8.754327,8.973896,-4.534582,-2.022890,9.576716,-4.330272,-3.627583,-5.081347,-9.828022,-0.884436,6.608510,-2.681693,-9.401115,0.041428,-0.053105,5.566498,-8.109875,-8.172066,-5.727945,8.074801,-5.370813,9.850228,0.597388,0.779002,-3.444581,5.976778,-3.105600,-8.892474,-0.648707,1.785133,-9.360934,9.417412,6.658829,-5.062732,6.681452,-4.127768,1.052694,-3.179788,2.018403,5.983191,-3.000694,3.853421,-5.629642,2.400374,6.992835,5.948725,0.222403,-2.079796,-1.089182,-5.771297,-1.359994,5.194390,-1.872594,2.444618,-7.025136,2.316183,5.291686,5.937472,-1.380847,-1.980708,-1.626897,-5.061124,-2.605734,-4.386944,6.519594,-5.910551,6.428699,7.245972,-8.302533,6.780021,2.107989,7.316064,8.872898,-8.987723,3.434119,0.146919,-2.377799,7.666633,-9.049420,7.632121,-8.055169,-9.164050,-7.920853,5.347140,-0.134579,4.467596,-0.987760,-2.457260,0.222187,2.675629,5.640913,-3.725220,-1.997573,-2.479620,-9.438322,-1.250927,-5.766177,-6.926766,3.267596,3.177379,0.571163,1.036640,7.250318,4.379518,9.648728,3.514992,-2.286201,-1.898260,5.438093,2.312365,6.596406,-5.475181,-0.097576,-6.823007,-2.877564,1.318373,-3.111835,6.308927,-3.725924,-2.888540,-8.582381,-4.977385,-7.818055,8.962369,-6.667713,2.925856,8.595622,0.626275,-7.196704,2.880512,4.015060,-0.589033,0.438258,4.538026,6.718355,0.009764,4.585244,-7.551837,3.626625,5.130710,-2.933875,7.854802,-6.518556,-7.186865,-9.726167,1.044968,-6.903172,6.560348,-2.421609,-1.963965,-0.155078,8.955172,7.843979,0.058761,9.363333,-4.662708,6.831236,6.101328,-8.766063,2.301562,8.955708,-9.002953,-0.458592,-5.418061,-9.481774,-1.885091,-1.881895,-4.783322,9.447493,-7.430406,-8.868107,5.142653,-2.486901,5.787270,-3.514896,0.259054,-0.525684,7.827708,9.245249,4.269687,-7.336184,1.445643,9.799220,3.944897,5.687954,6.998705,-1.659443,-4.309542,-2.776444,-0.855495,-4.014959,-7.945585,8.675191,3.344929,3.617183,4.362106,4.362157,7.145268,-5.957303,0.561875,-7.312127,-6.994340,6.231945,-6.010733,-5.254118,-4.919185,-4.348653,0.660149,2.225411,5.062551,2.220095,-9.865305,4.543440,0.391336,-7.930527,8.290002,-7.623940,-2.286532,-3.140917,8.631850,3.587087,5.069939,-2.351328,4.549785,-1.028171,0.077681,0.215604,-2.828452,9.572512,1.334553,-9.639155,-7.016746,-0.695188,8.724722,9.397223,1.622473,-1.449719,9.354865,-0.399411,-1.916415,3.785287,-3.786587,-5.808734,8.066686,8.994503,7.115559,2.862327,-8.502459,-2.380322,3.745734,-2.626271,-9.800770,3.127251,5.837109,2.531799,-5.249768,0.096363,8.544884,2.288286,2.406395,2.154372,5.434758,1.959525,-6.424888,4.194813,2.265665,3.332404,-2.223725,9.013604,-0.319126,-9.445782,6.709310,8.026740,4.226951,6.755747,4.069154,6.017433,-5.567850,-6.937184,1.989524,-9.370670,0.105987,-1.127640,-6.003937,-0.328813,-2.358823,-2.126350,-6.766492,8.238658,-7.908922,0.441841,0.607838,-9.414691,3.953278,8.261018,-3.511703,1.215835,4.056006,-4.586971,-2.499135,-1.069333,0.353313,-1.652727,-4.655253,1.746738,4.412894,7.317346,8.485617,-2.375120,-1.848397,5.135885,1.589774,4.566460,5.200108,-5.383665,-6.358920,-5.245072,9.965902,5.756785,-9.434286,0.821318,8.246561,6.797180,-9.492837,3.880078,8.751845,-7.378808,-7.079073,0.270265,0.843711,9.138403,-7.986851,3.641764,-8.307823,6.102220,7.485240,-3.427175,3.928634,7.792341,4.589131,6.296589,-2.169728,1.686451,7.479369,-9.356163,3.792517,-7.187435,0.853343,5.223165,-4.881240,6.225057,6.380942,5.269035,8.758282,5.816061,3.249088,0.150498,-9.580152,-9.401460,9.772739,-9.096049,-1.702495,-1.972404,-2.866893,-8.221664,-2.199561,-6.328786,5.655118,3.757037,-1.797349,-7.970710,2.576312,6.072763,-1.661499,6.956824,-6.544197,-6.961500,-1.623125,9.586596,6.469276,6.302388,8.673028,6.997004,0.251796,9.739326,6.504144,-1.607604,2.759028,-2.934358,2.945994,0.917505,0.330613,3.774304,-8.978082,-5.706815,-5.215570,0.666456,1.240879,-8.242714,5.462697,0.767526,7.570479,4.459266,5.837650,0.321024,1.971729,6.720493,-7.475257,-9.893142,4.082139,-7.423227,1.549138,0.971777,7.821998,5.216195,8.224952,8.271800,-3.513885,9.409427,3.945232,1.034035,9.816224,5.003704,2.247243,-0.060423,4.256396,-7.643401,-8.481859,0.779718,8.412752,2.631543,7.584225,-0.264417,5.877771,-2.770562,-2.179717,-8.226419,-7.663470,5.566388,4.046963,-6.603903,6.229552,9.663600,-9.208163,4.521100,-7.786351,-3.952634,7.470647,5.281413,-3.192864,1.329022,0.491805,-0.977683,-5.666992,6.901539,7.255521,-2.588533,-4.947805,-1.855396,-0.106523,4.203125,-0.859497,7.425249,-3.203402], dtype = "float32")#candidate|3675|(1320,)|const|float32
call_3673 = relay.TupleGetItem(func_1551_call(relay.reshape(const_3674.astype('float32'), [11, 8, 1]), relay.reshape(uop_3633.astype('float32'), [48,]), relay.reshape(const_3675.astype('float32'), [11, 8, 15]), ), 0)
call_3676 = relay.TupleGetItem(func_1555_call(relay.reshape(const_3674.astype('float32'), [11, 8, 1]), relay.reshape(uop_3633.astype('float32'), [48,]), relay.reshape(const_3675.astype('float32'), [11, 8, 15]), ), 0)
func_3277_call = mod.get_global_var('func_3277')
func_3280_call = mutated_mod.get_global_var('func_3280')
var_3685 = relay.var("var_3685", dtype = "float32", shape = (1800,))#candidate|3685|(1800,)|var|float32
call_3684 = relay.TupleGetItem(func_3277_call(relay.reshape(var_3685.astype('float32'), [1800,])), 1)
call_3686 = relay.TupleGetItem(func_3280_call(relay.reshape(var_3685.astype('float32'), [1800,])), 1)
output = relay.Tuple([uop_3633,call_3667,var_3668,call_3673,const_3674,const_3675,call_3684,var_3685,])
output2 = relay.Tuple([uop_3635,call_3669,var_3668,call_3676,const_3674,const_3675,call_3686,var_3685,])
func_3690 = relay.Function([var_3668,var_3685,], output)
mod['func_3690'] = func_3690
mod = relay.transform.InferType()(mod)
var_3691 = relay.var("var_3691", dtype = "float32", shape = (63,))#candidate|3691|(63,)|var|float32
var_3692 = relay.var("var_3692", dtype = "float32", shape = (1800,))#candidate|3692|(1800,)|var|float32
output = func_3690(var_3691,var_3692,)
func_3693 = relay.Function([var_3691,var_3692,], output)
mutated_mod['func_3693'] = func_3693
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2660_call = mod.get_global_var('func_2660')
func_2662_call = mutated_mod.get_global_var('func_2662')
call_3719 = relay.TupleGetItem(func_2660_call(), 1)
call_3720 = relay.TupleGetItem(func_2662_call(), 1)
func_3390_call = mod.get_global_var('func_3390')
func_3394_call = mutated_mod.get_global_var('func_3394')
const_3722 = relay.const([-8,6,-1,-1,-5,7,3,-3,-3,2,7,6,3,10,3,-7,-10,-2,-3,-1,-3,-2,-6,-1,-3,5,-8,-3,10,10,-9,-6,-1,-10,-3,-3,-3,-5,3,8,-10,7,3,-10,-7,6,-9,-7,-3,7,9,-4,-6,-1,-6,6,-5,5,2,3,-6,-7,3,9,10,2,5,-4,-5,-1,-8,-7,9,1,7,-3,4,2,-4,3,-7,3,-1,5,4,6,-3,4,-7,5,8,-9,-8,10,-9,5,-8,-8,-7,-4,8,-4,-7,3,3,7,6,4,4,9,8,1,-4,6,1,4,-4,-10,-7,2,-1,-1,-5,-4,-10,-4,6,-6,-6,4,4,5,-8,-8,8,-3,1,7,-9,-6,-5,-9,8,1,-10,9,3,-4,1,-6,-4,-9,4,-10,8,-4,-6,3,-2,6,-9,8,1,3,-7,-2,-9,-5,-6,8,9,-8,-6,-9,-5,-2,1,4,-3,-5,-7,1,-7,-1,-9,8,2,3,7,8,-8,-4], dtype = "int8")#candidate|3722|(192,)|const|int8
var_3723 = relay.var("var_3723", dtype = "int64", shape = (1008,))#candidate|3723|(1008,)|var|int64
call_3721 = relay.TupleGetItem(func_3390_call(relay.reshape(const_3722.astype('int8'), [16, 12]), relay.reshape(const_3722.astype('int8'), [16, 12]), relay.reshape(var_3723.astype('int64'), [252, 4]), ), 4)
call_3724 = relay.TupleGetItem(func_3394_call(relay.reshape(const_3722.astype('int8'), [16, 12]), relay.reshape(const_3722.astype('int8'), [16, 12]), relay.reshape(var_3723.astype('int64'), [252, 4]), ), 4)
output = relay.Tuple([call_3719,call_3721,const_3722,var_3723,])
output2 = relay.Tuple([call_3720,call_3724,const_3722,var_3723,])
func_3727 = relay.Function([var_3723,], output)
mod['func_3727'] = func_3727
mod = relay.transform.InferType()(mod)
mutated_mod['func_3727'] = func_3727
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3728 = relay.var("var_3728", dtype = "int64", shape = (1008,))#candidate|3728|(1008,)|var|int64
func_3727_call = mutated_mod.get_global_var('func_3727')
call_3729 = func_3727_call(var_3728)
output = call_3729
func_3730 = relay.Function([var_3728], output)
mutated_mod['func_3730'] = func_3730
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2842_call = mod.get_global_var('func_2842')
func_2844_call = mutated_mod.get_global_var('func_2844')
call_3762 = relay.TupleGetItem(func_2842_call(), 0)
call_3763 = relay.TupleGetItem(func_2844_call(), 0)
func_3151_call = mod.get_global_var('func_3151')
func_3155_call = mutated_mod.get_global_var('func_3155')
const_3772 = relay.const([-6,9,3,3,4,3,3,10,4,-1,-4,6,-9,-10,-4,-8,9,10,-9,9,4,9,8,9,1,-1,-8,8,-4,6,7,-2,-1,-8,5,4,-1,-9,6,-1,8,1,8,3,-10,-4,3,5,8,6,3,3,7,-3,9,-2,-5,-3,4,7,-5,1,4,-3,9,6,-1,8,-10,-3,-6,-8,-9,3,8,-9,8,-10,6,-5,-5,9,-9,-8,-7,-1,-7,5,1,1,-8,2,-8,10,-8,-3,7,2,8,-8,8,-9,8,1,3,-7,-2,-9,-1,-6,-6,-3,10,3,-3,4,-8,-8,-6,4,-3,-10,-9,-5,8,1,-10,-8,-8,-8,-2,4,-5,8,1,3,-4,9,2,6,-5,7,-1,-10,8,10,10,9,6,9,1,3,4,1,-8,-7,3,-10,9,-5,-8,6,-1,-5,4,6,7,1,5,-9,-10,-6,10,-9,-8,7,-9,5,-10,9,-6,1,6,5,5,-4,2,-8,-8,5,-1,-3,7,-2,-10,-3,6,10,-8,-5,10,-8,9,-7,6,2,-4,10,3,-10,-3,-9,-9,-10,7,9,-7,2,-6,-5,-2,-10,4,-8,1], dtype = "int32")#candidate|3772|(225,)|const|int32
call_3771 = relay.TupleGetItem(func_3151_call(relay.reshape(const_3772.astype('int32'), [5, 15, 3]), relay.reshape(const_3772.astype('int32'), [5, 15, 3]), ), 0)
call_3773 = relay.TupleGetItem(func_3155_call(relay.reshape(const_3772.astype('int32'), [5, 15, 3]), relay.reshape(const_3772.astype('int32'), [5, 15, 3]), ), 0)
func_837_call = mod.get_global_var('func_837')
func_842_call = mutated_mod.get_global_var('func_842')
var_3784 = relay.var("var_3784", dtype = "uint32", shape = (9, 4))#candidate|3784|(9, 4)|var|uint32
const_3785 = relay.const([-5,1,-5,4,-10,7,-1,8,-8,-3,-5,-4,-9,-7,4,-1,8,-10,5,-3,10,9,-10,5,2,-10,4,-7,-4,-6,-4,-7,10,-5,3,8,-8,7,5,-8,9,5,-4,6,9,-6,10,-5,-1,3,-8,9,9,-4,5,-3,-1,-8,3,1,-6,2,10,-6,8,7,2,2,10,-6,-9,9,-9,5,3,-1,4,-6,-3,-7,2,8,8,5,-7,4,10,-8,-2,-9,8,3,5,8,2,10,-9,-7,-10,6,-3,-5,-4,2,-5,-3,2,7,-7,-7,2,2,8,10,-2,-5,-7,-8,3,-10,-10,1,9,1,-5,-5,-8,8,-8,3,-7,7,-9,8,6,8,1,9,-9,7,9,-3,-1,-4], dtype = "uint32")#candidate|3785|(144,)|const|uint32
const_3786 = relay.const([1,5,3,-4,6,9,5,5,-1,4,-2,-2,-3,-8,-1,4,-9,3,-7,-3,6,-6,3,7,-8,3,-6,-5,-7,-6,1,4,2,-10,-2,-9,6,-3,9,-4,-1,-6,-4,-5,-3,-1,2,-2,3,-3,-6,5,-2,-4,8,-9,-7,-5,-8,-3,-3,5,10,-4,-1,7,-1,-1,3,-5,5,8,-9,-4,5,-7,-2,8,10,-4,-10,8,5,6,7,7,-5,6,9,-10,7,-7,-8,10,8,8,-7,9,8,-10,-7,10,3,6,8,-10,-1,-4,3,-8,-10,-9,3,-8,5,9,-4,-4,5,-3,-5,-7,-10,-7,5,-4,-2,-9,-10,9,5,-7,-6,-10,-2,1,-5,-6,-9,8], dtype = "int8")#candidate|3786|(140,)|const|int8
var_3787 = relay.var("var_3787", dtype = "uint8", shape = (360,))#candidate|3787|(360,)|var|uint8
call_3783 = relay.TupleGetItem(func_837_call(relay.reshape(var_3784.astype('uint32'), [9, 4, 1]), relay.reshape(const_3785.astype('uint32'), [9, 4, 4]), relay.reshape(const_3786.astype('int8'), [140,]), relay.reshape(var_3787.astype('uint8'), [1, 360]), ), 4)
call_3788 = relay.TupleGetItem(func_842_call(relay.reshape(var_3784.astype('uint32'), [9, 4, 1]), relay.reshape(const_3785.astype('uint32'), [9, 4, 4]), relay.reshape(const_3786.astype('int8'), [140,]), relay.reshape(var_3787.astype('uint8'), [1, 360]), ), 4)
output = relay.Tuple([call_3762,call_3771,const_3772,call_3783,var_3784,const_3785,const_3786,var_3787,])
output2 = relay.Tuple([call_3763,call_3773,const_3772,call_3788,var_3784,const_3785,const_3786,var_3787,])
func_3803 = relay.Function([var_3784,var_3787,], output)
mod['func_3803'] = func_3803
mod = relay.transform.InferType()(mod)
mutated_mod['func_3803'] = func_3803
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3803_call = mutated_mod.get_global_var('func_3803')
var_3805 = relay.var("var_3805", dtype = "uint32", shape = (9, 4))#candidate|3805|(9, 4)|var|uint32
var_3806 = relay.var("var_3806", dtype = "uint8", shape = (360,))#candidate|3806|(360,)|var|uint8
call_3804 = func_3803_call(var_3805,var_3806,)
output = call_3804
func_3807 = relay.Function([var_3805,var_3806,], output)
mutated_mod['func_3807'] = func_3807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2842_call = mod.get_global_var('func_2842')
func_2844_call = mutated_mod.get_global_var('func_2844')
call_3838 = relay.TupleGetItem(func_2842_call(), 0)
call_3839 = relay.TupleGetItem(func_2844_call(), 0)
func_3390_call = mod.get_global_var('func_3390')
func_3394_call = mutated_mod.get_global_var('func_3394')
var_3844 = relay.var("var_3844", dtype = "int8", shape = (192,))#candidate|3844|(192,)|var|int8
var_3845 = relay.var("var_3845", dtype = "int64", shape = (1008,))#candidate|3845|(1008,)|var|int64
call_3843 = relay.TupleGetItem(func_3390_call(relay.reshape(var_3844.astype('int8'), [16, 12]), relay.reshape(var_3844.astype('int8'), [16, 12]), relay.reshape(var_3845.astype('int64'), [252, 4]), ), 3)
call_3846 = relay.TupleGetItem(func_3394_call(relay.reshape(var_3844.astype('int8'), [16, 12]), relay.reshape(var_3844.astype('int8'), [16, 12]), relay.reshape(var_3845.astype('int64'), [252, 4]), ), 3)
func_2043_call = mod.get_global_var('func_2043')
func_2046_call = mutated_mod.get_global_var('func_2046')
const_3860 = relay.const([[3,-2,4,-3,-1,7,2,-7,-2,2,1,10,-9,7,5,2,1,-6,5,5,10,5,10,4,-10,-4,6,4,8,-7,-5,3,-2,-1,10,2,-8,3,6,3,-2,8,-2,-5,4,-3,10,4],[-7,-6,1,-9,2,8,-9,-7,8,1,8,10,8,10,1,10,9,7,4,8,7,-8,-6,7,10,6,6,1,-9,-1,-5,8,-7,-3,-10,8,6,6,-1,-8,3,-1,9,-2,-3,9,-6,-3],[2,3,-8,1,-9,9,-2,-10,-2,5,-5,2,-1,-7,5,-9,9,-1,5,4,-1,-3,-10,7,6,-5,-10,-8,-5,-8,-4,-9,9,1,-4,-5,5,-5,2,9,5,-8,1,5,-8,8,8,-6],[-9,-8,-9,-5,2,1,5,10,4,-4,4,2,-10,6,10,-4,9,2,-8,4,9,4,5,-4,3,-5,7,9,-8,5,8,-4,5,5,-5,1,-4,9,-10,10,1,8,-3,-3,-3,8,2,-8],[-10,-8,2,8,-6,-5,10,-10,9,8,7,4,2,1,3,-8,-2,7,-8,10,-4,2,8,-4,2,-2,3,-10,5,-8,-1,-1,-5,-9,-5,-10,-3,10,6,10,-6,-8,-8,2,10,-4,-8,-7],[5,-9,2,7,4,7,-3,-8,1,8,4,5,-1,6,3,-6,9,9,5,-7,5,-8,2,9,-2,5,6,2,10,-9,-3,-1,10,-4,-6,-5,4,1,-1,-9,9,1,-5,-5,2,8,-10,-6],[9,-9,-10,9,-10,-7,-3,8,-2,7,1,-2,7,8,1,10,-5,-6,-3,-6,7,6,2,2,-2,-1,3,7,3,7,-1,-5,-6,-1,6,-4,3,-3,-5,-10,5,1,7,6,-5,-6,-10,3],[2,6,3,2,-1,2,-1,-2,-6,-2,5,4,3,-8,-1,-10,7,2,6,-6,1,3,-2,6,-2,-2,-8,-6,-6,-3,-7,1,-9,-2,7,3,7,9,3,-7,6,1,-8,3,3,-1,1,2],[5,6,-1,-1,5,8,-7,-2,-6,7,9,-8,-9,3,-10,-9,-7,10,-2,-6,1,6,1,-3,8,-1,-3,1,9,-10,-7,6,2,5,7,4,7,7,5,-5,1,3,-6,-4,6,-3,-2,10],[5,9,-9,1,2,-4,-10,-1,-6,7,-7,-6,-6,10,10,-2,-7,8,-6,2,6,5,6,9,8,-3,-6,10,9,-9,-1,-3,-4,4,9,9,1,-3,10,6,-9,-5,-1,-6,6,-7,-8,5],[1,-3,-5,-8,-6,1,5,4,-10,1,-3,-10,-4,-7,-9,-4,4,-3,-2,5,-3,2,8,4,-4,-7,-1,7,8,-6,10,9,9,-5,4,9,-10,5,-6,4,-3,-8,-2,10,10,-4,7,-4],[-7,9,3,-7,8,9,-3,5,-7,-10,5,6,-5,-6,6,-1,3,2,-8,6,-3,2,-1,-1,8,-5,1,-2,4,1,10,-2,-1,-8,3,7,-1,1,-7,-10,6,-2,1,-7,2,4,9,-4]], dtype = "uint32")#candidate|3860|(12, 48)|const|uint32
call_3859 = func_2043_call(relay.reshape(const_3860.astype('uint32'), [12, 8, 6]), relay.reshape(const_3860.astype('uint32'), [12, 8, 6]), )
call_3861 = func_2043_call(relay.reshape(const_3860.astype('uint32'), [12, 8, 6]), relay.reshape(const_3860.astype('uint32'), [12, 8, 6]), )
var_3865 = relay.var("var_3865", dtype = "uint32", shape = (12, 48))#candidate|3865|(12, 48)|var|uint32
bop_3866 = relay.left_shift(const_3860.astype('int64'), relay.reshape(var_3865.astype('int64'), relay.shape_of(const_3860))) # shape=(12, 48)
func_3006_call = mod.get_global_var('func_3006')
func_3009_call = mutated_mod.get_global_var('func_3009')
const_3870 = relay.const([False,True,True,True,False,True,True,False,True,False,True,False,True,False,True,True,False,True,True,True,False,True,True,False], dtype = "bool")#candidate|3870|(24,)|const|bool
call_3869 = func_3006_call(relay.reshape(const_3870.astype('bool'), [3, 4, 2]))
call_3871 = func_3006_call(relay.reshape(const_3870.astype('bool'), [3, 4, 2]))
func_1683_call = mod.get_global_var('func_1683')
func_1685_call = mutated_mod.get_global_var('func_1685')
var_3874 = relay.var("var_3874", dtype = "float32", shape = (112,))#candidate|3874|(112,)|var|float32
call_3873 = relay.TupleGetItem(func_1683_call(relay.reshape(var_3874.astype('float32'), [14, 2, 4])), 0)
call_3875 = relay.TupleGetItem(func_1685_call(relay.reshape(var_3874.astype('float32'), [14, 2, 4])), 0)
output = relay.Tuple([call_3838,call_3843,var_3844,var_3845,call_3859,bop_3866,call_3869,const_3870,call_3873,var_3874,])
output2 = relay.Tuple([call_3839,call_3846,var_3844,var_3845,call_3861,bop_3866,call_3871,const_3870,call_3875,var_3874,])
func_3876 = relay.Function([var_3844,var_3845,var_3865,var_3874,], output)
mod['func_3876'] = func_3876
mod = relay.transform.InferType()(mod)
mutated_mod['func_3876'] = func_3876
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3876_call = mutated_mod.get_global_var('func_3876')
var_3878 = relay.var("var_3878", dtype = "int8", shape = (192,))#candidate|3878|(192,)|var|int8
var_3879 = relay.var("var_3879", dtype = "int64", shape = (1008,))#candidate|3879|(1008,)|var|int64
var_3880 = relay.var("var_3880", dtype = "uint32", shape = (12, 48))#candidate|3880|(12, 48)|var|uint32
var_3881 = relay.var("var_3881", dtype = "float32", shape = (112,))#candidate|3881|(112,)|var|float32
call_3877 = func_3876_call(var_3878,var_3879,var_3880,var_3881,)
output = call_3877
func_3882 = relay.Function([var_3878,var_3879,var_3880,var_3881,], output)
mutated_mod['func_3882'] = func_3882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3439_call = mod.get_global_var('func_3439')
func_3440_call = mutated_mod.get_global_var('func_3440')
call_3896 = relay.TupleGetItem(func_3439_call(), 2)
call_3897 = relay.TupleGetItem(func_3440_call(), 2)
output = call_3896
output2 = call_3897
func_3900 = relay.Function([], output)
mod['func_3900'] = func_3900
mod = relay.transform.InferType()(mod)
mutated_mod['func_3900'] = func_3900
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3900_call = mutated_mod.get_global_var('func_3900')
call_3901 = func_3900_call()
output = call_3901
func_3902 = relay.Function([], output)
mutated_mod['func_3902'] = func_3902
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3903 = relay.var("var_3903", dtype = "float64", shape = (6, 3, 15))#candidate|3903|(6, 3, 15)|var|float64
uop_3904 = relay.acos(var_3903.astype('float64')) # shape=(6, 3, 15)
output = uop_3904
output2 = uop_3904
func_3915 = relay.Function([var_3903,], output)
mod['func_3915'] = func_3915
mod = relay.transform.InferType()(mod)
mutated_mod['func_3915'] = func_3915
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3916 = relay.var("var_3916", dtype = "float64", shape = (6, 3, 15))#candidate|3916|(6, 3, 15)|var|float64
func_3915_call = mutated_mod.get_global_var('func_3915')
call_3917 = func_3915_call(var_3916)
output = call_3917
func_3918 = relay.Function([var_3916], output)
mutated_mod['func_3918'] = func_3918
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2842_call = mod.get_global_var('func_2842')
func_2844_call = mutated_mod.get_global_var('func_2844')
call_3922 = relay.TupleGetItem(func_2842_call(), 0)
call_3923 = relay.TupleGetItem(func_2844_call(), 0)
output = relay.Tuple([call_3922,])
output2 = relay.Tuple([call_3923,])
func_3940 = relay.Function([], output)
mod['func_3940'] = func_3940
mod = relay.transform.InferType()(mod)
output = func_3940()
func_3941 = relay.Function([], output)
mutated_mod['func_3941'] = func_3941
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3086_call = mod.get_global_var('func_3086')
func_3088_call = mutated_mod.get_global_var('func_3088')
call_4057 = func_3086_call()
call_4058 = func_3086_call()
output = call_4057
output2 = call_4058
func_4064 = relay.Function([], output)
mod['func_4064'] = func_4064
mod = relay.transform.InferType()(mod)
mutated_mod['func_4064'] = func_4064
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4064_call = mutated_mod.get_global_var('func_4064')
call_4065 = func_4064_call()
output = call_4065
func_4066 = relay.Function([], output)
mutated_mod['func_4066'] = func_4066
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2842_call = mod.get_global_var('func_2842')
func_2844_call = mutated_mod.get_global_var('func_2844')
call_4095 = relay.TupleGetItem(func_2842_call(), 0)
call_4096 = relay.TupleGetItem(func_2844_call(), 0)
func_1524_call = mod.get_global_var('func_1524')
func_1527_call = mutated_mod.get_global_var('func_1527')
const_4100 = relay.const([-6.132573,6.123222,-9.618035,-9.972988,4.890878,-4.375667,6.300911,-1.404269,3.558320,-8.342754,5.589909,-4.196262,7.350099,9.795855,-9.400410,-7.824510,-4.554848,-5.107272,-8.607598,-6.981692,-7.374629,-4.405133,-3.555772,-8.184775,-1.432358,9.467217,-1.565248,-3.386426,0.207219,7.964079,9.016018,-3.786395], dtype = "float32")#candidate|4100|(32,)|const|float32
call_4099 = func_1524_call(relay.reshape(const_4100.astype('float32'), [2, 4, 4]))
call_4101 = func_1524_call(relay.reshape(const_4100.astype('float32'), [2, 4, 4]))
func_3727_call = mod.get_global_var('func_3727')
func_3730_call = mutated_mod.get_global_var('func_3730')
const_4103 = relay.const([-2,10,7,3,-3,-1,-10,2,9,9,-2,-4,8,-6,-10,6,4,-3,-4,-8,-9,-5,-7,-1,10,-10,4,-9,10,7,-8,4,-7,-4,-5,-9,3,-5,3,-9,-7,7,-3,-6,-6,4,7,8,5,6,-8,4,1,4,-5,-8,9,4,6,6,-4,-7,-8,-5,-9,-1,-8,-8,4,2,4,2,9,-7,7,-6,6,3,8,-5,1,-6,10,-7,-6,4,10,5,-9,4,-8,8,-6,7,9,5,-7,6,-4,4,1,-2,-3,2,-9,-9,-1,-10,5,2,-1,-3,-7,8,3,5,-9,7,-6,-3,9,2,8,-6,-1,-9,5,-3,-3,8,-2,-10,-2,4,-9,-2,10,6,-8,-2,-3,3,5,2,6,3,-3,-2,3,-2,2,1,-8,1,1,6,8,-2,9,2,6,-5,2,5,-1,8,-8,9,-7,-3,6,4,3,9,-2,5,-6,-10,-8,-4,9,-6,2,-5,8,1,7,9,1,-10,-7,-4,7,-1,-6,-6,6,4,-9,-9,6,10,5,-1,-5,3,8,-5,9,2,9,-2,1,-5,4,-7,5,-4,-7,9,8,6,-7,-2,6,-4,3,-2,-4,5,2,-10,9,7,1,-8,8,-6,4,3,-4,-5,-5,-1,3,-8,-8,-1,-10,-3,-6,9,-4,1,5,-7,3,7,-10,-8,4,9,-2,-9,1,-3,-4,3,9,7,7,6,8,9,-10,1,3,-8,-10,-7,-10,10,-7,3,4,-2,5,-3,1,-3,9,7,-5,6,3,-8,8,-8,-10,10,4,-7,2,-4,-1,4,-4,-3,7,6,-5,-4,4,-7,-4,10,-1,-8,6,7,-2,9,-1,3,-2,-9,-3,1,4,2,4,-7,9,-1,-9,2,7,-7,6,8,9,6,-10,-3,-4,4,7,5,1,2,-4,1,-8,2,10,-3,-9,5,5,-4,3,6,-1,7,-9,-2,-3,-4,3,6,-8,-4,-7,6,5,10,-8,-7,1,3,-2,3,-1,-8,-5,-10,1,-9,1,10,-7,-3,1,6,-3,-2,-5,2,-3,2,3,2,6,-4,-9,4,-9,1,-8,-1,-7,7,9,-9,8,-2,-3,-6,-6,-5,-5,10,-5,-3,1,3,-7,1,-8,10,-4,-6,5,-4,-2,-7,-8,-10,-10,-4,-7,9,7,-1,2,10,4,-1,-8,1,3,-7,-4,4,2,-5,4,4,-5,6,-8,3,2,10,-2,2,-8,-8,5,-8,-9,7,-8,7,-8,3,9,10,4,3,-1,-1,3,-3,1,-7,-6,-4,-7,-2,-3,-3,-4,6,-2,-4,-4,-4,-4,5,-2,-6,7,5,-2,-1,3,-9,-4,3,-4,1,-3,2,3,5,-10,-4,-4,2,-5,2,4,2,-8,6,-5,-9,1,8,-1,-9,-7,-9,-1,8,6,5,3,10,6,3,-4,-10,4,-8,2,-7,10,9,-8,1,-6,6,6,1,3,-3,-6,1,-2,6,-6,-2,-10,-2,-5,4,1,-1,5,1,7,6,-9,-3,6,7,-2,-10,10,-1,-7,8,-5,5,2,10,1,3,3,-5,7,10,-2,4,-4,-9,-1,9,8,8,1,9,3,6,-10,-6,-2,8,1,-6,-8,6,-3,-5,-10,-1,10,6,4,1,2,10,-6,-8,2,-1,-10,-10,-3,-4,-8,7,4,3,-5,3,6,9,-4,10,-2,8,10,-5,-5,-10,-3,-4,10,7,4,1,3,-3,-1,-5,-5,-5,5,2,6,-4,8,-5,7,-4,-2,-2,-8,-4,-9,-2,-3,9,-4,7,-2,-10,-1,1,-9,-9,-1,-7,-8,-8,9,-1,-6,10,1,1,-10,-6,-7,7,1,10,8,2,8,1,1,-2,2,8,-1,1,-1,-2,-3,6,-6,-7,-4,10,-3,1,-5,-3,-7,2,-10,-1,9,9,4,-5,2,5,-5,7,-8,-3,1,9,7,-8,-4,7,-2,-5,-2,7,4,-1,6,10,6,6,9,5,-5,-4,2,2,8,10,-8,5,8,-5,-1,10,-8,7,10,-5,7,-7,9,-4,-7,-6,-1,8,-6,-4,8,6,-10,3,-5,8,6,-2,5,3,-8,6,9,-9,-9,-3,8,-10,4,-10,-2,2,6,-6,-8,4,7,5,5,2,-6,-10,-8,-3,-6,1,5,-9,-5,-3,-3,9,6,7,-8,5,7,8,-8,6,-8,-3,10,6,-6,-8,-4,8,-3,-3,-5,4,-6,5,-7,-7,10,10,1,-7,2,3,-4,-8,-5,7,9,-9,-8,-10,-7,-2,6,-9,5,-3,3,5,-6,-4,3,-2,7,-9,8,-1,-6,-6,-4,-1,-10,8,-10,-1,-5,9,8,-10,5,-1,-1,-1,-3,1,-1,8,5,-7,6,-1,-4,-9,-4,-9,-2,-3,3,10,-9,5,5,3,7,7,9,6,-10,10,-8,4,-1,3,-9,10,-5,-9,-8,2,-4,1,-9,-9,-4,5,-9,-1,6,-2,6,4,-9,-4,7,4,-7,9,2,4,-8,-9,8,5,4,8,3,3,-4,9,-5,7,8,5,-5,-7,8,9,-7,-9,-6,-3,6,1,5,5,2,1,9,9,6,8,3,-1,4,3,6,8,-6,-6,-8,-10,-5,8,10,8,5,-2,-3,-3,5,-8,-4,5,-3,10,1,2,4,10], dtype = "int64")#candidate|4103|(1008,)|const|int64
call_4102 = relay.TupleGetItem(func_3727_call(relay.reshape(const_4103.astype('int64'), [1008,])), 3)
call_4104 = relay.TupleGetItem(func_3730_call(relay.reshape(const_4103.astype('int64'), [1008,])), 3)
output = relay.Tuple([call_4095,call_4099,const_4100,call_4102,const_4103,])
output2 = relay.Tuple([call_4096,call_4101,const_4100,call_4104,const_4103,])
func_4120 = relay.Function([], output)
mod['func_4120'] = func_4120
mod = relay.transform.InferType()(mod)
output = func_4120()
func_4121 = relay.Function([], output)
mutated_mod['func_4121'] = func_4121
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4136 = relay.const([[[4,6,1,-4,10],[7,-9,10,-3,2],[6,5,5,-5,5],[-10,7,1,-7,-1],[8,-9,-10,9,-10],[3,6,-5,9,-1],[-8,-5,9,5,10],[-7,3,-7,4,6],[6,9,-7,-7,6],[1,1,1,2,7],[9,2,9,6,-7],[7,-2,-7,1,-5],[4,-3,2,4,-7],[5,5,1,-9,7],[-9,-9,-1,2,-2]]], dtype = "int8")#candidate|4136|(1, 15, 5)|const|int8
var_4137 = relay.var("var_4137", dtype = "int8", shape = (14, 15, 5))#candidate|4137|(14, 15, 5)|var|int8
bop_4138 = relay.right_shift(const_4136.astype('int8'), var_4137.astype('int8')) # shape=(14, 15, 5)
output = relay.Tuple([bop_4138,])
output2 = relay.Tuple([bop_4138,])
func_4141 = relay.Function([var_4137,], output)
mod['func_4141'] = func_4141
mod = relay.transform.InferType()(mod)
var_4142 = relay.var("var_4142", dtype = "int8", shape = (14, 15, 5))#candidate|4142|(14, 15, 5)|var|int8
output = func_4141(var_4142)
func_4143 = relay.Function([var_4142], output)
mutated_mod['func_4143'] = func_4143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3439_call = mod.get_global_var('func_3439')
func_3440_call = mutated_mod.get_global_var('func_3440')
call_4172 = relay.TupleGetItem(func_3439_call(), 2)
call_4173 = relay.TupleGetItem(func_3440_call(), 2)
func_3351_call = mod.get_global_var('func_3351')
func_3353_call = mutated_mod.get_global_var('func_3353')
const_4186 = relay.const([-2.288530,9.146206,-4.425862,-8.145375,6.749688,3.995126,-1.803619,-8.482281,4.526181,3.384464,8.414852,-8.394916,-5.103277,4.571002,0.779630,-5.423597,1.006968,1.707609,-9.795956,-1.224410,7.339660,-2.954317,9.299505,2.750155,7.889814,-1.054107,-4.316367,1.720262,7.263425,-7.235053,0.120910,3.850266,3.154789,3.675673,-3.642113,7.248646,1.318095,4.987136,9.363436,1.281464,1.917939,4.096080,4.305287,-1.460743,-5.084621,0.654438,-2.405075,-9.798311,-0.691623,8.893519,-2.013848,-4.824723,-8.197034,-3.750417,-6.889448,-2.363424,-6.554813,-6.669961,-6.089688,-2.366067,3.686706,2.888174,-2.940117,9.087335,9.488702,2.589781,-1.225776,6.965206,1.592725,-9.250153,-4.918069,-0.946808,-7.578183,-8.125432,4.417383,2.294330,-1.647613,-2.893221,5.262201,2.706024,2.170260,-3.584053,-2.809485,-7.707240,6.341015,-4.894135,-4.496364,-1.760360,9.380533,9.332231,-4.304064,0.429062,0.749844,2.451032,-8.310080,8.802545,-0.685238,2.052046,-8.544970,-0.456423,-6.597685,3.758216,3.816635,7.576488,-5.002864,-0.804970,-7.006900,7.732986,6.650085,-0.927009,-5.759192,6.268041,9.951070,4.549155,2.599276,6.255829,-8.604742,-7.091687,3.878572,-4.163034,-7.952536,-0.326390,0.507271,7.787587,-0.786322,-7.441080,0.564126,6.329142,-7.026836,-9.232172,6.368259,1.638551,-3.130364,2.644183,4.269494,2.507874,-2.338248,-8.426807,-7.874227,2.704499,1.080981,4.061617,5.155729,8.028078,8.085881,2.632130,-6.458121,6.952270,-9.872530,-6.026076,-1.689868,-5.030088,1.230564,-1.483803,-6.750886,-9.476580,8.913798,-9.626026,0.074234,-0.628611,-9.040433,3.102063,-6.902080,5.214376,6.297590,9.805399,-1.021386,7.110189,-7.120805,6.778545,3.083038,2.483649,1.481086,1.064417,2.304637,5.547062,-2.337578,-9.553380,9.661724,0.059850,8.301230,2.562150,-9.817852,2.752004,-1.464396,9.676192,6.342800,9.091218,7.443682,1.026035,-1.723328,-4.333483,1.500051,-5.647844,-5.322076,5.258976,-2.108967,0.037388,3.551450,2.259669,5.319369,1.030214,4.465340,2.705866,-4.722185,-6.876181,-6.869730,8.739059,2.203985,-7.844053,5.532821,-1.182425,-3.382311,2.324300,-2.053990,-2.954085,6.162744,-2.178480,-4.215666,7.614831,-2.037532,6.203792,-4.971365,-1.753097,-8.503503,-8.260948,2.880997,2.293711,-8.411296,9.941870,-3.598110,1.615398,-6.084231,-0.837024,2.639831,4.456684,1.500548,-3.425417,1.911934,-7.063943], dtype = "float32")#candidate|4186|(240,)|const|float32
call_4185 = func_3351_call(relay.reshape(const_4186.astype('float32'), [4, 4, 15]))
call_4187 = func_3351_call(relay.reshape(const_4186.astype('float32'), [4, 4, 15]))
output = relay.Tuple([call_4172,call_4185,const_4186,])
output2 = relay.Tuple([call_4173,call_4187,const_4186,])
func_4193 = relay.Function([], output)
mod['func_4193'] = func_4193
mod = relay.transform.InferType()(mod)
output = func_4193()
func_4194 = relay.Function([], output)
mutated_mod['func_4194'] = func_4194
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4243 = relay.var("var_4243", dtype = "float64", shape = (10, 7, 12))#candidate|4243|(10, 7, 12)|var|float64
uop_4244 = relay.exp(var_4243.astype('float64')) # shape=(10, 7, 12)
func_1340_call = mod.get_global_var('func_1340')
func_1343_call = mutated_mod.get_global_var('func_1343')
const_4263 = relay.const([-5,-3,-10,5,7,5,2,4,-9,6,-1,8,-6,1,3,5,4,2,-10,-10,-8,6,8,-5,-7,4,4,10,-1,5,1,-1,-8,3,-2,7,-7,-2,-5,4,10,9,-10,-3,-10,-6,-8,7,1,-6,-2,-7,-9,2,5,-5,-3,-8,1,-5,-10,3,-7,-6,10,-3,8,-9,-8,1,8,10,-10,6,10,4,10,1,-8,8,-2,10,1,-9,2,-4,-5,4,3,-7,-9,6,-8,9,-6,6,9,8,-5,1,-6,-10,9,6,-3,-6,6,6,-9,-2,1,2,3,-2,-8,8,7,-5,-1,10,-2,8,8,-3,-8,-3,2,1,-7,6,5,9,1,2,-3,-7,9,-4,-9,6,-2,8,-4,1,-1,9,8,-2,2,-2,4,-3,-5,2,5,-1,6,-3,8,4,-1,-7,-2,10,3,-10,-1,2,1,-10,-1,-3,10,-9,-2,-10,-5,3,-8,-1,5,9,-4,2,6,-2,-2,-4,-3,-3,-6,-7,1,-10,3,1,-3,-5,-3,4,6,-4,1,3,1,-8,-8,-7,6,-8,-9,8,9,-10,-10,-2,10,-7,4,-4,3,-1,8,-9,-5,3,8,-7,5,-1,-2,1,9,-5,-7,9,1,-2,9,-3,-10,10,8,-5,5,-7,-9,10,-6,2,-4,-3,2,-5,-7,-7,5,-5,5,5,7,8,10,-5,-3,-8,-1,-1,6,-6,-4,-10,-2,-3,6,-8,10,1,4,-4,5,3,3,-1,-1,4,1,6,10,2,-9,-10,-6,9,-7,6,-7,9,4,10,8,3,-9,-3,-10,4,-5,8,-5,1,10,-5,-6,-6,4,-8,-2,-2,-9,10,9,-9,-8,6,-4,5,-4,-10,3,-3,-5,-1,-1,8,9,-1,1,3,-9,-3,7,6,6,-4,-5,10,-9,5,-6,-1,-10,-3,4,-10,-6,5,-9,-7,-8,-6,7,3,8,5,2,9,8,-2,-8,5,-5,9,3,1,-4,-6,-2,8,-8,4,-1,-9,2,3,-4,-6,-1,3,9,-9,10,8,4,-3,-1,2,9,2,5,-3,-4,-7,4,-10,5,-7,-5,-6,3,3,6,7,-9,7,2,2,-1,-2,-3,9,2,-1,-3,9,-8,-9,10,-2,-2,-10,10,-2,-2,-7,7,-3,4,-7,2,-10,-8,7,-2,4,7,-10,-7,10,-7,6,-3,-2,-2,-3,-2,-9,1,-8,-6,-8,-8,1,-1,7,-10,-9,-2,1,7,-2,-6,-1,6,1,-2,4,9,3,8,5,3,-10,-6,-10,-2,4,-5,6,-2,3,8,-2,-5,-7,7,1,-8,8,2,7,-2,4,3,9,1,-1,-3,5,2,-3,6,10,4,5,7,10,10,7,3,1,1,-4,7,-2,-3,-7,-6,-10,6,-4,7,4,-7,-3,8,6,-7,4,10,-2,-9,-10,5,-5,5,-4,5,-2,-1,-3,-10,-8,9,-3,-6,-2,4,-1,-3,-10,8,-1,-3,5,9,-3,-9,7,3,-9,-5,-7,2,-7,-4,3,2,7,8,-1,10,-5,-7,8,-2,-10,-5,-3,-6,-4,-7,4,-3,-7,1,-8,-2,-1,-7,8,4,-6,6,10,10,-2,-10,-8,-7,4,3,-10,-6,3,-8,3,-8,2,8,7,5,5,-6,-8,8,-3,-5,5,2,5,6,3,-6,-9,9,4,-5,-1,2,6,-5,-10,-9,-2,-10,2,-6,3,2,-8,-9,-8,1,-7,-3,4,3,-6,10,5,4,7,4,2,1,-10,-2,5,8,-8,-7,8,-8,-2,2,-8,7,-6,5,-9,-2,9,7,-7,7,7,10,6,10,4,-7,8,-10,-5,6,3,4,10,-5,-8,4,8,1,-2,4,-2,-2,5,5,-7,5,-7,-2,-10,-7,9,6,-7,-3,-7,-7,-6,-9,1,2,-7,7,-5,2,-4,-6,2,4,10,-8,-4,7,-6,-2,2,-4,-10,4,10,3,-5,-8,-4,6,-10,10,-1,-4,5,5,-10,6,-2,5,6,-5,-10,10,5,-7,-10,9,-8,-2,8,10,-8,8,-7,-9,3,-6,7,9,1,7,7,-7,-8,7,6,-4,4,-4,4,-7,-9,4,-10,8,-10,-7,2,1,-2,-9,-6,5,-6,-2,-4,9,-4,1,-5,5,5,-4,5,10,6,6,-2,-1,-1,9,3,-1,3,9,1,5,8,-5,-9,-10,6,-6,-8,9,9,5,7,9,7,8,-1,-6,-6,-2,7,7,-10,2,-9,7,8,-2,-9,-5,-6,-6,7,8,2,6,3,-3,-8,1,5,-7,-2,-9,7,-9,6,2,7,7,-1,9,10,-9,6,-6,-7,-5,10,-2,-6,10,6,7,3,3,9,-9,3,-7,-7,-9,6,5,-7,-4,8,7,7,7,8,-5,-3,3,-4,4,-5,-8,-6,8,-10,6,-8,1,-7,-5,-10,1,5,-9,6,2,6,-2,-5,-8,3,-2,-9,6,5,10,-2,-9,6,-7,9,4,9,10,6,-8,3,2,7,7,-9,-7,9,9,-4,-8,6,-2,7,1,-9,-6,3,4,6,-3,-2,6,-8,9,-1,-9,-8,-6,-1,2,-7,4,-6,1,-4,7,-7,-9,9,-7,4,9,-4,-1,-3,-9,-1,2,5,-9,10,-5,10,1,2,10,-5,8,-6,-8,-1], dtype = "int32")#candidate|4263|(1008,)|const|int32
call_4262 = relay.TupleGetItem(func_1340_call(relay.reshape(const_4263.astype('int32'), [14, 6, 12])), 2)
call_4264 = relay.TupleGetItem(func_1343_call(relay.reshape(const_4263.astype('int32'), [14, 6, 12])), 2)
uop_4268 = relay.sin(uop_4244.astype('float64')) # shape=(10, 7, 12)
func_1551_call = mod.get_global_var('func_1551')
func_1555_call = mutated_mod.get_global_var('func_1555')
const_4272 = relay.const([[-9.006394,-5.436270,9.533889,-6.027875,2.421728,-8.659335,0.565393,-2.495135,-9.825086,-7.425192,-0.206744,-5.474214,-3.648961,2.385423,1.980687,-4.066580,-9.412208,8.153239,3.005940,4.595027,9.364748,9.032298,-9.488229,-6.126832,2.343183,3.757641,-2.927782,3.915402,2.235660,1.655051,-3.377175,-8.863662,-4.599487,2.713030,7.863237,6.887509,-3.144663,-4.425788,-3.652817,7.303072,9.604852,2.684636,-3.330497,-6.333406,1.164308,-4.661086,9.084790,-5.242289,-8.259577,-5.752373,7.136168,-8.593685,-8.446457,-2.589572,-3.278858,-3.615507,-4.416193,8.792007,3.660421,-2.661821,4.346183,-3.541412,6.974518,2.027341,-4.133774,4.821958,2.991124,9.866874,-4.876583,-3.489083,3.336073,2.335294,9.838715,-0.166121,-6.129923,6.507522,3.340945,9.521456,4.770028,-7.662047,-6.092859,3.237137,-4.932213,7.306794,-6.525119,9.300761,-1.327171,1.208339]], dtype = "float32")#candidate|4272|(1, 88)|const|float32
var_4273 = relay.var("var_4273", dtype = "float32", shape = (1320,))#candidate|4273|(1320,)|var|float32
call_4271 = relay.TupleGetItem(func_1551_call(relay.reshape(const_4272.astype('float32'), [11, 8, 1]), relay.reshape(call_4262.astype('float32'), [48,]), relay.reshape(var_4273.astype('float32'), [11, 8, 15]), ), 2)
call_4274 = relay.TupleGetItem(func_1555_call(relay.reshape(const_4272.astype('float32'), [11, 8, 1]), relay.reshape(call_4262.astype('float32'), [48,]), relay.reshape(var_4273.astype('float32'), [11, 8, 15]), ), 2)
uop_4279 = relay.cosh(uop_4244.astype('float64')) # shape=(10, 7, 12)
uop_4283 = relay.sigmoid(uop_4279.astype('float64')) # shape=(10, 7, 12)
bop_4294 = relay.right_shift(uop_4283.astype('uint16'), relay.reshape(var_4243.astype('uint16'), relay.shape_of(uop_4283))) # shape=(10, 7, 12)
func_1551_call = mod.get_global_var('func_1551')
func_1555_call = mutated_mod.get_global_var('func_1555')
call_4302 = relay.TupleGetItem(func_1551_call(relay.reshape(const_4272.astype('float32'), [11, 8, 1]), relay.reshape(call_4262.astype('float32'), [48,]), relay.reshape(var_4273.astype('float32'), [11, 8, 15]), ), 3)
call_4303 = relay.TupleGetItem(func_1555_call(relay.reshape(const_4272.astype('float32'), [11, 8, 1]), relay.reshape(call_4262.astype('float32'), [48,]), relay.reshape(var_4273.astype('float32'), [11, 8, 15]), ), 3)
output = relay.Tuple([call_4262,const_4263,uop_4268,call_4271,const_4272,var_4273,bop_4294,call_4302,])
output2 = relay.Tuple([call_4264,const_4263,uop_4268,call_4274,const_4272,var_4273,bop_4294,call_4303,])
func_4307 = relay.Function([var_4243,var_4273,], output)
mod['func_4307'] = func_4307
mod = relay.transform.InferType()(mod)
var_4308 = relay.var("var_4308", dtype = "float64", shape = (10, 7, 12))#candidate|4308|(10, 7, 12)|var|float64
var_4309 = relay.var("var_4309", dtype = "float32", shape = (1320,))#candidate|4309|(1320,)|var|float32
output = func_4307(var_4308,var_4309,)
func_4310 = relay.Function([var_4308,var_4309,], output)
mutated_mod['func_4310'] = func_4310
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4120_call = mod.get_global_var('func_4120')
func_4121_call = mutated_mod.get_global_var('func_4121')
call_4332 = relay.TupleGetItem(func_4120_call(), 1)
call_4333 = relay.TupleGetItem(func_4121_call(), 1)
output = call_4332
output2 = call_4333
func_4337 = relay.Function([], output)
mod['func_4337'] = func_4337
mod = relay.transform.InferType()(mod)
output = func_4337()
func_4338 = relay.Function([], output)
mutated_mod['func_4338'] = func_4338
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4342 = relay.var("var_4342", dtype = "float64", shape = (13, 12, 14))#candidate|4342|(13, 12, 14)|var|float64
uop_4343 = relay.sin(var_4342.astype('float64')) # shape=(13, 12, 14)
const_4357 = relay.constdtype = "float64")#candidate|4357|(13, 12, 14)|const|float64
bop_4358 = relay.equal(uop_4343.astype('bool'), relay.reshape(const_4357.astype('bool'), relay.shape_of(uop_4343))) # shape=(13, 12, 14)
output = bop_4358
output2 = bop_4358
func_4373 = relay.Function([var_4342,], output)
mod['func_4373'] = func_4373
mod = relay.transform.InferType()(mod)
mutated_mod['func_4373'] = func_4373
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4374 = relay.var("var_4374", dtype = "float64", shape = (13, 12, 14))#candidate|4374|(13, 12, 14)|var|float64
func_4373_call = mutated_mod.get_global_var('func_4373')
call_4375 = func_4373_call(var_4374)
output = call_4375
func_4376 = relay.Function([var_4374], output)
mutated_mod['func_4376'] = func_4376
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4120_call = mod.get_global_var('func_4120')
func_4121_call = mutated_mod.get_global_var('func_4121')
call_4415 = relay.TupleGetItem(func_4120_call(), 2)
call_4416 = relay.TupleGetItem(func_4121_call(), 2)
output = relay.Tuple([call_4415,])
output2 = relay.Tuple([call_4416,])
func_4417 = relay.Function([], output)
mod['func_4417'] = func_4417
mod = relay.transform.InferType()(mod)
mutated_mod['func_4417'] = func_4417
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4417_call = mutated_mod.get_global_var('func_4417')
call_4418 = func_4417_call()
output = call_4418
func_4419 = relay.Function([], output)
mutated_mod['func_4419'] = func_4419
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3940_call = mod.get_global_var('func_3940')
func_3941_call = mutated_mod.get_global_var('func_3941')
call_4432 = relay.TupleGetItem(func_3940_call(), 0)
call_4433 = relay.TupleGetItem(func_3941_call(), 0)
output = call_4432
output2 = call_4433
func_4434 = relay.Function([], output)
mod['func_4434'] = func_4434
mod = relay.transform.InferType()(mod)
output = func_4434()
func_4435 = relay.Function([], output)
mutated_mod['func_4435'] = func_4435
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4417_call = mod.get_global_var('func_4417')
func_4419_call = mutated_mod.get_global_var('func_4419')
call_4439 = relay.TupleGetItem(func_4417_call(), 0)
call_4440 = relay.TupleGetItem(func_4419_call(), 0)
output = call_4439
output2 = call_4440
func_4456 = relay.Function([], output)
mod['func_4456'] = func_4456
mod = relay.transform.InferType()(mod)
mutated_mod['func_4456'] = func_4456
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4456_call = mutated_mod.get_global_var('func_4456')
call_4457 = func_4456_call()
output = call_4457
func_4458 = relay.Function([], output)
mutated_mod['func_4458'] = func_4458
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2842_call = mod.get_global_var('func_2842')
func_2844_call = mutated_mod.get_global_var('func_2844')
call_4464 = relay.TupleGetItem(func_2842_call(), 0)
call_4465 = relay.TupleGetItem(func_2844_call(), 0)
output = relay.Tuple([call_4464,])
output2 = relay.Tuple([call_4465,])
func_4504 = relay.Function([], output)
mod['func_4504'] = func_4504
mod = relay.transform.InferType()(mod)
output = func_4504()
func_4505 = relay.Function([], output)
mutated_mod['func_4505'] = func_4505
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4337_call = mod.get_global_var('func_4337')
func_4338_call = mutated_mod.get_global_var('func_4338')
call_4513 = func_4337_call()
call_4514 = func_4337_call()
var_4517 = relay.var("var_4517", dtype = "float32", shape = (2, 4, 4))#candidate|4517|(2, 4, 4)|var|float32
bop_4518 = relay.logical_xor(call_4513.astype('int32'), relay.reshape(var_4517.astype('int32'), relay.shape_of(call_4513))) # shape=(2, 4, 4)
bop_4521 = relay.logical_xor(call_4514.astype('int32'), relay.reshape(var_4517.astype('int32'), relay.shape_of(call_4514))) # shape=(2, 4, 4)
uop_4547 = relay.log2(call_4513.astype('float32')) # shape=(2, 4, 4)
uop_4549 = relay.log2(call_4514.astype('float32')) # shape=(2, 4, 4)
output = relay.Tuple([bop_4518,uop_4547,])
output2 = relay.Tuple([bop_4521,uop_4549,])
func_4550 = relay.Function([var_4517,], output)
mod['func_4550'] = func_4550
mod = relay.transform.InferType()(mod)
mutated_mod['func_4550'] = func_4550
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4551 = relay.var("var_4551", dtype = "float32", shape = (2, 4, 4))#candidate|4551|(2, 4, 4)|var|float32
func_4550_call = mutated_mod.get_global_var('func_4550')
call_4552 = func_4550_call(var_4551)
output = call_4552
func_4553 = relay.Function([var_4551], output)
mutated_mod['func_4553'] = func_4553
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4120_call = mod.get_global_var('func_4120')
func_4121_call = mutated_mod.get_global_var('func_4121')
call_4585 = relay.TupleGetItem(func_4120_call(), 2)
call_4586 = relay.TupleGetItem(func_4121_call(), 2)
func_3006_call = mod.get_global_var('func_3006')
func_3009_call = mutated_mod.get_global_var('func_3009')
const_4597 = relay.const([False,False,False,False,False,False,True,False,False,False,False,False,True,False,False,True,False,True,True,True,False,True,True,False], dtype = "bool")#candidate|4597|(24,)|const|bool
call_4596 = func_3006_call(relay.reshape(const_4597.astype('bool'), [3, 4, 2]))
call_4598 = func_3006_call(relay.reshape(const_4597.astype('bool'), [3, 4, 2]))
output = relay.Tuple([call_4585,call_4596,const_4597,])
output2 = relay.Tuple([call_4586,call_4598,const_4597,])
func_4600 = relay.Function([], output)
mod['func_4600'] = func_4600
mod = relay.transform.InferType()(mod)
mutated_mod['func_4600'] = func_4600
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4600_call = mutated_mod.get_global_var('func_4600')
call_4601 = func_4600_call()
output = call_4601
func_4602 = relay.Function([], output)
mutated_mod['func_4602'] = func_4602
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2660_call = mod.get_global_var('func_2660')
func_2662_call = mutated_mod.get_global_var('func_2662')
call_4608 = relay.TupleGetItem(func_2660_call(), 0)
call_4609 = relay.TupleGetItem(func_2662_call(), 0)
func_4550_call = mod.get_global_var('func_4550')
func_4553_call = mutated_mod.get_global_var('func_4553')
const_4618 = relay.const([[9.742082,-0.821856,-2.702876,-3.313352],[5.026133,-8.909343,-4.622240,-6.939281],[0.594103,6.660424,-2.263298,-8.716045],[-9.360594,-8.439728,-0.175101,-4.560372],[-3.338953,-3.268720,4.901356,-1.444235],[-7.582838,7.005846,-9.367795,-3.342219],[4.162250,-2.744769,-7.100446,-6.028738],[2.712328,3.493080,4.704134,7.706488]], dtype = "float32")#candidate|4618|(8, 4)|const|float32
call_4617 = relay.TupleGetItem(func_4550_call(relay.reshape(const_4618.astype('float32'), [2, 4, 4])), 1)
call_4619 = relay.TupleGetItem(func_4553_call(relay.reshape(const_4618.astype('float32'), [2, 4, 4])), 1)
uop_4634 = relay.rsqrt(call_4617.astype('float64')) # shape=(2, 4, 4)
uop_4636 = relay.rsqrt(call_4619.astype('float64')) # shape=(2, 4, 4)
bop_4642 = relay.divide(uop_4634.astype('float64'), relay.reshape(call_4617.astype('float64'), relay.shape_of(uop_4634))) # shape=(2, 4, 4)
bop_4645 = relay.divide(uop_4636.astype('float64'), relay.reshape(call_4619.astype('float64'), relay.shape_of(uop_4636))) # shape=(2, 4, 4)
func_4193_call = mod.get_global_var('func_4193')
func_4194_call = mutated_mod.get_global_var('func_4194')
call_4652 = relay.TupleGetItem(func_4193_call(), 1)
call_4653 = relay.TupleGetItem(func_4194_call(), 1)
output = relay.Tuple([call_4608,const_4618,bop_4642,call_4652,])
output2 = relay.Tuple([call_4609,const_4618,bop_4645,call_4653,])
func_4656 = relay.Function([], output)
mod['func_4656'] = func_4656
mod = relay.transform.InferType()(mod)
mutated_mod['func_4656'] = func_4656
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4656_call = mutated_mod.get_global_var('func_4656')
call_4657 = func_4656_call()
output = call_4657
func_4658 = relay.Function([], output)
mutated_mod['func_4658'] = func_4658
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4504_call = mod.get_global_var('func_4504')
func_4505_call = mutated_mod.get_global_var('func_4505')
call_4662 = relay.TupleGetItem(func_4504_call(), 0)
call_4663 = relay.TupleGetItem(func_4505_call(), 0)
output = call_4662
output2 = call_4663
func_4679 = relay.Function([], output)
mod['func_4679'] = func_4679
mod = relay.transform.InferType()(mod)
mutated_mod['func_4679'] = func_4679
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4679_call = mutated_mod.get_global_var('func_4679')
call_4680 = func_4679_call()
output = call_4680
func_4681 = relay.Function([], output)
mutated_mod['func_4681'] = func_4681
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4504_call = mod.get_global_var('func_4504')
func_4505_call = mutated_mod.get_global_var('func_4505')
call_4714 = relay.TupleGetItem(func_4504_call(), 0)
call_4715 = relay.TupleGetItem(func_4505_call(), 0)
func_3803_call = mod.get_global_var('func_3803')
func_3807_call = mutated_mod.get_global_var('func_3807')
const_4760 = relay.const([1,7,-2,6,-3,4,9,-4,6,-3,6,9,2,-10,-2,-6,-7,-3,-8,-8,-3,6,-10,8,-2,-2,7,-4,1,-2,9,8,-2,6,-1,4], dtype = "uint32")#candidate|4760|(36,)|const|uint32
const_4761 = relay.const([[8,-6,-4,7,4,7,1,6,-1,4],[10,-5,-5,6,8,9,-1,-10,-1,-9],[9,1,-9,-7,-4,8,-4,-4,3,-10],[-9,8,4,-7,7,10,-3,5,-7,-4],[-3,4,-7,-10,-10,3,1,-9,3,8],[1,7,-8,-10,7,6,6,9,8,-6],[-4,-10,-4,10,7,7,-7,-4,7,1],[-7,5,-7,-9,-6,5,-5,4,4,-7],[3,10,10,-6,9,-2,4,-10,-2,8],[-3,9,-10,7,9,6,10,4,10,-7],[-9,5,-6,8,5,7,1,-8,-9,6],[1,-3,-5,-10,-9,6,-8,5,6,-2],[-1,1,-5,4,5,3,9,-8,-3,3],[-7,-3,-8,9,-4,-6,-7,7,-5,-5],[1,8,-4,-6,5,2,-8,7,3,-1],[4,-2,-6,5,9,4,10,2,8,-2],[9,7,8,5,-9,-8,6,5,10,3],[-10,1,-1,-3,-1,2,-8,7,-2,-9],[9,-5,9,4,2,9,6,-3,1,6],[2,1,-8,7,-9,2,-2,-2,6,10],[-5,9,7,8,7,-1,3,-8,8,-10],[10,6,6,-4,-4,-2,3,10,-5,-9],[2,3,10,6,-7,-9,-8,-2,3,-9],[-2,5,2,7,-6,10,-6,5,4,-8],[-8,1,-9,10,-1,-8,10,8,1,-9],[-4,6,4,8,3,-1,10,-6,-7,3],[-7,-10,-6,-9,6,5,7,-9,-3,8],[-10,6,1,1,10,5,-4,-2,-5,-1],[-9,2,8,-8,6,-6,5,6,-3,5],[10,-1,-6,7,6,-4,-6,2,8,4],[5,10,-1,-7,5,10,-3,2,-5,-3],[-8,-5,-3,-8,-6,5,-4,3,-5,-4],[4,6,4,-9,6,10,-8,8,-2,2],[-3,-1,-4,-6,5,-9,-1,-8,-2,4],[8,-4,8,10,10,-10,-1,-4,5,5],[-8,-1,-1,6,8,3,-3,-6,9,-1]], dtype = "uint8")#candidate|4761|(36, 10)|const|uint8
call_4759 = relay.TupleGetItem(func_3803_call(relay.reshape(const_4760.astype('uint32'), [9, 4]), relay.reshape(const_4761.astype('uint8'), [360,]), ), 1)
call_4762 = relay.TupleGetItem(func_3807_call(relay.reshape(const_4760.astype('uint32'), [9, 4]), relay.reshape(const_4761.astype('uint8'), [360,]), ), 1)
output = relay.Tuple([call_4714,call_4759,const_4760,const_4761,])
output2 = relay.Tuple([call_4715,call_4762,const_4760,const_4761,])
func_4765 = relay.Function([], output)
mod['func_4765'] = func_4765
mod = relay.transform.InferType()(mod)
mutated_mod['func_4765'] = func_4765
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4765_call = mutated_mod.get_global_var('func_4765')
call_4766 = func_4765_call()
output = call_4766
func_4767 = relay.Function([], output)
mutated_mod['func_4767'] = func_4767
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4777 = relay.var("var_4777", dtype = "int16", shape = (12, 16, 13))#candidate|4777|(12, 16, 13)|var|int16
var_4778 = relay.var("var_4778", dtype = "int16", shape = (12, 16, 13))#candidate|4778|(12, 16, 13)|var|int16
bop_4779 = relay.logical_xor(var_4777.astype('int16'), relay.reshape(var_4778.astype('int16'), relay.shape_of(var_4777))) # shape=(12, 16, 13)
func_48_call = mod.get_global_var('func_48')
func_51_call = mutated_mod.get_global_var('func_51')
const_4789 = relay.const([-9,3,10,3,7,6,-9,-10,10,-1,6,-3,3,2,-8,5,9,5,-1,-7,-2,-4,7,3,1,-4,-4,-6,7,-10,3,4,3,-5,10,3,-3,4,10,-9,1,-8,2,-4,1,4,9,-8,-9,-9,3,2,-8,9,-4,-10,4,2,1,-5,-9,-8,8,5,7,8,-7,-9,5,-4,6,3,-2,-6,-10,5,1,-10,-7,8,-8,-7,5,9,-2,8,-6,8,8,9,6,-5,-7,-7,9,-2,2,-1,5,-8,2,-5,-8,4,-10,4,-9,2,-4,-2,-2,10,-4,-10,1,-6,-5,9,5,-9,-6,-10,2,1,-10,-10,7,-8,-3,10,10,8,6,-9,1,-5,-3,-4,-8,4,9,-4,-8,-7,-5,-6,2,8,-1,8,-9,3,-1,-8,3,9,-7,-8,7,7,-4,-5,-7,4,-4,-2,-7,-4,1,7,5,5,9,9,1,-8,-9,1,7,-7,-10,-1,-5,5,-8,-1,-10,-7,10,-5,-3,7,-5,9,-6,3,5,-4,1,-8,4,4,-6,3,10,-8,-2,-5,3,-10,-2,6,-9,10,2,10,7,-9,6,8,3,-9,9,3,9,1,-8,-3,-7,-8,-10,4,2,-10,-7,-6,-4,-5,-8,7,4,1,6,1,-6,2,-9,5,10,-2,4,7,-3,-5,3,-8,-9,-8,-2,8,-2,-4,-7,-4,4,5,-4,-10,-7,7,4,-4,4,-9,5,-6,6,-7,1,-9,7,-5,-8,-7,-9,-4,10,9,2,-2,-3,-5,8,-1,5,-4,-6,5,-5,9,-9,-8,-1,-4,-4,1,5,-6,9,-4,9,-7,10,-1,4,-10,2,-1,4,9,4,-5,7,-3,-1,1,8,7,1,2,9,-10,9,-8,-9,-3,7,1,9,10,-3,-10,-2,7,-6,-9,-1,9,-2,-3,2,-1,3,-2,-6,-2,5,9,2,1], dtype = "uint8")#candidate|4789|(360,)|const|uint8
call_4788 = func_48_call(relay.reshape(const_4789.astype('uint8'), [8, 9, 5]), relay.reshape(const_4789.astype('uint8'), [8, 9, 5]), )
call_4790 = func_48_call(relay.reshape(const_4789.astype('uint8'), [8, 9, 5]), relay.reshape(const_4789.astype('uint8'), [8, 9, 5]), )
func_4456_call = mod.get_global_var('func_4456')
func_4458_call = mutated_mod.get_global_var('func_4458')
call_4808 = func_4456_call()
call_4809 = func_4456_call()
bop_4813 = relay.logical_or(var_4778.astype('bool'), relay.reshape(bop_4779.astype('bool'), relay.shape_of(var_4778))) # shape=(12, 16, 13)
func_4765_call = mod.get_global_var('func_4765')
func_4767_call = mutated_mod.get_global_var('func_4767')
call_4824 = relay.TupleGetItem(func_4765_call(), 1)
call_4825 = relay.TupleGetItem(func_4767_call(), 1)
output = relay.Tuple([call_4788,const_4789,call_4808,bop_4813,call_4824,])
output2 = relay.Tuple([call_4790,const_4789,call_4809,bop_4813,call_4825,])
func_4838 = relay.Function([var_4777,var_4778,], output)
mod['func_4838'] = func_4838
mod = relay.transform.InferType()(mod)
mutated_mod['func_4838'] = func_4838
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4838_call = mutated_mod.get_global_var('func_4838')
var_4840 = relay.var("var_4840", dtype = "int16", shape = (12, 16, 13))#candidate|4840|(12, 16, 13)|var|int16
var_4841 = relay.var("var_4841", dtype = "int16", shape = (12, 16, 13))#candidate|4841|(12, 16, 13)|var|int16
call_4839 = func_4838_call(var_4840,var_4841,)
output = call_4839
func_4842 = relay.Function([var_4840,var_4841,], output)
mutated_mod['func_4842'] = func_4842
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4886 = relay.const(7.780121, dtype = "float64")#candidate|4886|()|const|float64
const_4887 = relay.const([[[7.145871],[9.760241],[-6.581516],[-0.588199],[-0.933163],[-9.339786]],[[4.435600],[1.021435],[4.250516],[2.938068],[0.780565],[0.328316]],[[6.701538],[-0.569778],[4.433286],[-0.596361],[-4.064440],[-5.794608]],[[-0.462984],[6.395851],[-1.414445],[5.794367],[5.399217],[-9.591587]],[[4.152501],[5.465501],[-8.554822],[-6.194756],[-8.995782],[-1.807913]],[[-1.087329],[1.737329],[-5.282482],[-2.932740],[-2.828541],[-8.542747]]], dtype = "float64")#candidate|4887|(6, 6, 1)|const|float64
bop_4888 = relay.less_equal(const_4886.astype('bool'), const_4887.astype('bool')) # shape=(6, 6, 1)
func_3151_call = mod.get_global_var('func_3151')
func_3155_call = mutated_mod.get_global_var('func_3155')
var_4893 = relay.var("var_4893", dtype = "int32", shape = (225,))#candidate|4893|(225,)|var|int32
call_4892 = relay.TupleGetItem(func_3151_call(relay.reshape(var_4893.astype('int32'), [5, 15, 3]), relay.reshape(var_4893.astype('int32'), [5, 15, 3]), ), 0)
call_4894 = relay.TupleGetItem(func_3155_call(relay.reshape(var_4893.astype('int32'), [5, 15, 3]), relay.reshape(var_4893.astype('int32'), [5, 15, 3]), ), 0)
func_4838_call = mod.get_global_var('func_4838')
func_4842_call = mutated_mod.get_global_var('func_4842')
const_4896 = relay.const([2,-9,-8,9,-7,-5,-1,5,7,1,2,5,-5,-2,-9,-9,9,-1,4,-8,7,9,-2,4,-6,9,7,10,4,7,4,-6,3,-1,7,1,5,-2,4,6,-2,-8,10,-1,1,-8,5,8,-1,-8,-10,-10,8,-2,9,4,7,-2,-1,9,-4,-9,-1,6,7,10,-2,-2,4,7,-6,-9,-5,7,-6,10,-5,9,-7,10,1,-9,10,-5,7,-2,-3,5,-3,-5,-9,9,5,2,4,-6,-9,8,-10,8,5,2,2,-7,8,-4,-9,2,10,8,5,-9,-2,-8,9,10,7,-5,7,-1,-4,-5,7,-8,3,-1,1,5,-6,-4,8,-3,5,-3,8,1,-9,6,6,-3,10,-9,3,-2,8,5,1,-10,-6,1,7,7,-8,9,6,3,5,5,-8,8,5,2,5,-2,-5,6,-5,-5,5,7,8,-7,5,-3,-9,9,-8,9,10,-4,-2,-4,-3,-10,-5,-2,-10,-7,1,8,-3,-5,5,-4,-3,2,9,4,7,2,4,4,-3,9,-3,5,3,8,-3,-4,3,4,2,-3,6,10,9,4,-6,-5,1,6,-1,-1,-1,3,-1,-7,6,1,-7,-2,4,8,10,-1,-5,-4,-5,1,1,9,10,6,-6,-10,5,-9,7,-1,3,9,-10,6,-9,9,-2,6,6,2,7,5,3,3,1,8,-7,-4,9,10,1,-1,-2,7,-7,8,-8,-7,6,2,5,5,-4,-9,-1,4,-10,4,-10,-8,9,-4,-10,9,-3,7,-8,10,-1,6,7,3,5,-7,-10,5,-2,6,9,2,-4,-10,9,-6,-6,-4,4,-10,7,-5,4,-6,-6,2,8,7,-1,4,-6,4,-5,-7,-8,-8,-6,-1,3,-9,-10,6,5,7,2,-7,4,-2,-10,5,-6,10,-6,-4,-10,7,4,-7,-9,-4,-8,9,2,10,-10,7,-10,10,10,4,-7,-2,-6,-1,-3,-6,-5,4,6,-9,-9,-4,3,-4,8,-5,-10,-7,5,-3,-2,-1,6,6,9,10,-2,-6,10,10,-9,4,-3,8,-10,4,2,1,-1,9,4,8,6,3,-6,-4,9,6,1,-7,7,-3,7,6,-4,-7,-4,6,-1,-4,1,3,7,9,-5,7,10,-10,5,-6,-1,-7,10,-5,-2,7,8,-3,-1,-1,1,-10,-9,7,-8,-2,5,-6,-5,-5,9,-10,4,-1,6,-5,3,5,8,5,4,-7,-1,6,-3,2,-5,-10,-4,5,-7,6,-6,2,-2,3,6,-8,4,-2,-7,10,7,-10,-5,2,7,-1,-6,8,10,7,-1,3,-9,2,-9,9,-4,-8,5,-8,5,-5,2,2,-3,8,-2,-1,5,-8,-8,2,-7,9,-10,2,10,-8,-1,6,9,-1,-6,3,-6,8,9,5,2,-8,5,-8,7,7,8,3,-7,8,7,-7,-4,8,-8,-9,-9,3,-7,8,6,-6,-1,2,5,3,9,4,8,-9,5,5,7,9,-8,9,-4,-10,4,-3,10,-1,-8,6,-9,2,-3,9,4,3,4,-10,9,-1,2,3,10,2,-1,3,3,5,2,-7,1,-10,4,-1,-10,9,8,3,-8,-5,-5,-8,-6,4,6,-6,-3,-1,-8,1,5,-9,2,1,9,8,6,2,-10,10,10,-2,-2,-10,-5,8,3,-5,9,6,3,2,1,-3,-10,6,9,-3,-10,1,5,7,7,4,7,-4,3,2,-1,6,8,-1,1,7,-8,9,10,-1,8,-2,7,-7,-3,-6,-6,6,-4,2,-3,-7,9,-4,1,-5,3,6,-3,-2,-4,1,-1,-5,-3,8,-5,-7,-10,3,-10,-10,6,-5,-1,-5,5,6,-2,1,-5,3,6,4,3,-9,8,6,-7,2,7,-2,3,8,-8,-1,10,3,-4,-3,-8,1,-2,-1,7,-7,-3,7,-7,-3,4,8,-8,9,9,2,-4,3,-8,-5,8,-1,8,-6,3,-10,5,-10,-8,-8,2,-4,1,-2,-2,5,-6,-10,4,-9,-7,-3,-8,5,3,5,-3,10,6,4,9,-5,-8,7,-1,7,9,10,3,5,1,1,-7,-8,5,1,1,-6,1,1,4,-1,7,2,7,8,-5,1,-4,-7,1,2,3,3,3,-7,-1,2,8,-10,9,-4,-10,8,-4,-10,4,8,-10,-1,-2,-2,7,-3,-7,-1,-2,1,-1,-4,8,9,8,7,-8,-4,9,5,9,-4,-10,3,1,4,4,5,5,-2,-3,2,-9,2,-2,7,-5,-8,-5,7,-4,8,-2,-10,8,2,2,3,-10,-1,-1,6,9,-1,2,10,2,3,-10,-2,6,-10,-8,10,-7,2,1,-6,-9,-5,-6,6,1,-3,-4,-9,-9,-7,-9,6,-1,-4,6,3,8,10,-2,-3,8,4,-10,-10,-2,-7,5,-7,-2,9,2,7,1,-3,4,6,1,-3,4,2,-2,7,2,4,-8,6,-4,-9,10,7,-7,7,-6,-10,6,6,-3,-5,-10,1,-3,-7,9,3,-9,5,-5,5,5,-2,9,6,5,-9,2,3,6,-2,8,-8,6,-3,8,-2,5,-3,-4,-8,-4,-3,6,2,8,1,-1,-10,-4,8,3,6,-4,2,-2,6,-9,2,5,-1,10,-8,3,-8,3,3,-5,-3,10,6,8,-5,1,4,1,-8,9,2,3,3,5,1,-4,1,-10,5,-1,6,-10,-7,-8,-4,2,-3,5,3,9,-1,8,9,1,7,6,3,6,9,-6,2,-8,-4,-10,-6,-1,-6,-1,7,6,-1,9,-8,-3,-8,-9,-8,7,1,-9,10,6,-8,-8,-6,-1,9,-10,-3,-4,-3,-3,-10,-4,-10,2,10,-4,2,3,8,-4,2,-4,10,-5,-8,5,-9,-3,-10,6,10,10,4,1,-7,-9,-10,5,-8,2,-9,8,-5,-6,5,-7,-6,8,-10,1,3,-8,2,4,4,-8,4,-2,6,-6,-1,-5,-9,4,3,9,-7,10,10,7,-1,-6,10,3,-5,-6,-1,-1,5,2,-5,5,-7,9,-10,-9,3,7,-3,-9,9,-5,8,3,-3,1,-5,10,-3,9,-7,-6,6,-4,-6,-7,8,-7,10,-2,-6,-3,-1,-5,3,-10,2,1,-9,-7,7,10,-8,4,9,-10,-10,6,-7,-6,4,-9,1,-4,-4,-5,-7,-10,4,-2,1,7,-7,1,-3,2,-2,-4,2,3,-1,9,-7,-4,5,3,-9,5,5,-2,4,8,7,-1,3,5,4,3,-4,-2,4,5,8,-1,-8,5,-7,8,-8,2,-4,-5,-4,-10,5,7,9,-3,2,4,-7,1,-4,7,-9,5,-10,2,9,2,5,-1,3,-3,-8,-6,8,8,-8,7,-5,-1,-1,9,-6,-3,-4,7,-10,4,-9,-4,8,10,6,3,10,-8,-8,10,-2,7,9,5,6,7,2,2,-3,7,-2,5,-6,-2,2,8,-6,1,-9,-3,8,10,-3,-1,9,-10,-8,-2,7,-9,-7,-4,4,-8,-4,9,3,3,4,-4,9,3,-8,4,-10,-6,-9,-1,8,7,-10,-5,6,1,-9,10,-1,-9,-9,-6,-3,-9,3,-7,-9,4,-1,-4,-4,-6,4,-4,10,-5,4,1,2,-4,-9,-9,-7,8,1,-6,9,-9,-9,-7,6,-1,1,-2,1,-1,6,9,-2,-1,8,-9,1,-9,3,-1,-6,-1,-4,2,-8,-6,-3,-6,-3,-10,-8,8,-7,10,-3,-10,3,5,-6,-3,-2,-7,-7,1,-3,10,8,-1,-5,6,3,-6,-9,4,-10,10,-7,8,-1,1,-10,7,9,4,10,3,-7,-8,9,-4,8,-2,2,-8,-1,-8,1,8,3,7,5,9,-8,10,10,8,-9,-4,4,-3,2,-3,-7,7,4,-5,4,3,-10,1,9,7,-2,9,2,1,1,1,7,-10,-3,-10,-9,-9,5,1,1,-2,-1,-9,2,9,5,3,-9,3,-10,-9,5,9,9,-6,10,-3,10,3,3,-7,-3,8,-3,-4,-3,3,-2,-10,2,1,-5,-2,6,6,9,-8,4,-6,5,2,-2,6,7,5,3,3,10,-2,1,6,3,-4,-9,8,10,-2,6,6,-7,5,7,-7,-5,3,-8,8,4,2,2,-5,-1,3,-8,-1,2,-2,-5,-7,-9,6,1,1,-6,7,5,10,-1,-3,4,4,3,-4,-7,9,-1,-3,1,-8,-9,6,-6,-9,-9,-8,10,10,9,2,-5,4,-7,10,3,6,-10,-7,9,5,-10,-3,-6,4,7,3,-6,-9,6,-1,-5,10,-9,4,-4,-6,-2,5,-3,7,-4,3,-9,-4,-2,-1,-2,-4,9,9,-7,-8,-5,8,5,-8,-6,-10,3,-8,-9,-2,4,-1,4,-6,6,-9,-10,-1,-2,3,-1,-5,-7,9,-3,-4,-9,-10,5,-3,2,4,-10,-5,3,2,-1,8,9,-3,-10,-1,-1,1,7,-1,-5,10,-9,8,3,7,7,3,5,-2,2,-6,-6,-3,1,1,6,-1,-8,-6,-1,6,-8,-5,4,10,3,-1,10,-2,-7,-9,6,-7,-1,5,7,9,2,-10,3,4,-3,5,-10,-6,-9,9,7,10,-2,7,8,-5,-1,-9,-5,10,-10,3,1,-9,6,-8,8,8,-4,-7,2,3,9,8,4,3,-3,8,-10,4,6,9,-9,2,-6,6,-3,3,-10,9,1,2,10,7,6,6,-5,-4,3,-10,6,-9,6,2,-5,1,-3,-1,2,3,-1,-10,5,3,-9,-9,8,4,9,9,7,1,5,-2,-10,-7,-3,9,8,-6,-4,1,-2,-7,1,7,8,-7,-10,1,2,-4,2,3,-7,8,5,-5,-4,-9,10,2,-6,2,6,7,-9,6,-4,3,9,3,1,-8,2,-8,5,-2,-9,-6,-8,-6,8,10,1,3,5,4,8,10,9,-4,-10,-5,1,-5,-8,5,2,-8,-9,5,-1,-1,-10,10,-9,-6,-9,7,4,-8,-2,10,8,-9,1,2,-10,2,4,-9,-6,-1,6,6,7,-6,-7,-4,-4,-4,4,10,1,-4,-4,7,8,7,-5,7,9,2,10,10,9,-3,-2,-7,-7,-7,5,-2,-3,10,4,-1,-3,-8,10,-8,-4,2,-6,-8,-1,5,-10,-9,-8,2,-8,-4,7,-3,9,-8,4,6,8,-6,-10,4,-8,4,4,7,-8,-1,10,-6,5,2,3,-3,4,9,-8,4,8,1,4,1,6,1,-6,-7,-10,-2,6,5,5,-4,8,1,9,-5,-10,7,8,4,-6,5,-7,-10,-10,-3,-10,8,-8,-2,-10,10,-5,6,6,7,8,-7,-9,-9,1,-4,2,8,2,7,-9,2,5,-9,-7,-2,-10,-1,5,8,2,6,7,-4,-4,-2,7,8,1,2,4,2,-2,-3,-3,-10,4,-8,7,-1,-2,-3,5,2,9,-6,9,-8,-1,5,-1,-8,10,7,6,10,9,9,-7,3,-5,8,7,3,7,3,-5,-5,6,4,-10,-10,-2,-6,-9,4,8,-8,-9,6,-10,-6,-9,-10,4,7,-2,6,5,2,1,-8,9,-7,-8,6,1,1,-4,-4,-8,-4,-7,4,-10,-8,4,1,3,-4,10,-8,-2,8,-1,4,-3,-2,7,-6,4,-2,-3,4,1,-8,-5,-2,3,-3,-4,6,3,2,5,1,-6,-10,3,5,-9,9,-7,-3,2,-9,-2,6,2,-7,7,-6,8,10,-9,9,9,-6,-8,-1,4,7,-4,1,-10,-4,-8,-10,8,2,-8,-7,-9,-3,1,-7,3,-1,4,4,-2,-3,-1,-9,-4,8,1,8,10,7,7,-6,-8,9,9,-8,-2,-3,5,-3,4,2,9,-7,5,-10,-10,5,3,9,-9,-5,9,5,-2,4,2,-3,-10,-1,6,9,8,-3,-10,-3,1,-10,-5,-4,-5,-5,8,9,-10,-7,4,4,2,4,-2,-2,4,5,9,10,-10,3,5,-10,-6,3,2,3,7,-7,6,-5,-3,2,10,8,-7,1,-6,-8,7,2,1,3,-3,-8,-2,-9,-3,-1,-5,4,1,-5,-6,9,4,-3,7,2,8,6,5,9,8,-9,-8,-6,-8,-7,-4,6,-8,-5,-4,-2,9,4,-7,9,2,8,-3,-10,5,-5,-4,9,9,6,2,-8,9,-2,7,-2,3,9,-6,7,6,2,-5,1,-6,-1,-6,9,3,2,5,10,-3,4,-8,3,-4,-6,-10,5,6,6,5,7,-7,9,-2,9,-8,7,5,1,-8,2,-6,4,3,3,-5,7,9,3,-2,9,9,-7,-9,-6,7,-3,-5,2,6,7,6,-3,-9,-8,-3,3,4,-8,10,8,-4,-8,-9,-8,-6,8,8,-8,-10,-9,3,6,-4,10,8,1,10,-2,4,6,4,3,-7,-10,7,-1,3,-6,2,1,4,4,5,-5,-6,8,-4,4,2,-10,3,-7,-9,-3,1,-4,8,-10,-4,2,7,9,-1,-5,-7,1,-6,-6,5,7,5,-10,-9,-8,7,-2,9,6,-4,-4,5,3,-8,-6,8,9,-3,8,1], dtype = "int16")#candidate|4896|(2496,)|const|int16
call_4895 = relay.TupleGetItem(func_4838_call(relay.reshape(const_4896.astype('int16'), [12, 16, 13]), relay.reshape(const_4896.astype('int16'), [12, 16, 13]), ), 4)
call_4897 = relay.TupleGetItem(func_4842_call(relay.reshape(const_4896.astype('int16'), [12, 16, 13]), relay.reshape(const_4896.astype('int16'), [12, 16, 13]), ), 4)
output = relay.Tuple([bop_4888,call_4892,var_4893,call_4895,const_4896,])
output2 = relay.Tuple([bop_4888,call_4894,var_4893,call_4897,const_4896,])
func_4904 = relay.Function([var_4893,], output)
mod['func_4904'] = func_4904
mod = relay.transform.InferType()(mod)
var_4905 = relay.var("var_4905", dtype = "int32", shape = (225,))#candidate|4905|(225,)|var|int32
output = func_4904(var_4905)
func_4906 = relay.Function([var_4905], output)
mutated_mod['func_4906'] = func_4906
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4064_call = mod.get_global_var('func_4064')
func_4066_call = mutated_mod.get_global_var('func_4066')
call_4913 = func_4064_call()
call_4914 = func_4064_call()
func_4307_call = mod.get_global_var('func_4307')
func_4310_call = mutated_mod.get_global_var('func_4310')
const_4937 = relay.const([3.339208,-7.161475,-9.804653,-5.691990,-8.189453,4.407517,-9.239698,5.630761,8.128673,-0.266502,2.183393,1.438050,-3.980049,-6.857542,-4.483490,0.247996,-6.999760,-9.082068,-4.914948,-9.681597,-6.011236,-1.716668,-4.936013,9.512920,5.593211,8.328851,-8.444818,-8.789721,-9.794479,-2.000728,2.376062,-1.268057,7.438845,-6.116802,2.718188,-0.721160,8.337320,1.749153,2.547252,9.664466,-4.411945,2.308557,2.009854,5.508443,-7.643286,-4.955505,7.530489,8.018938,7.449894,4.681422,-1.425090,4.143865,-8.105577,-4.682857,7.916625,-5.365805,-7.446448,-8.826062,-7.278019,7.080167,1.859020,-8.265638,7.149643,0.729310,1.110881,8.816809,3.010375,6.021904,3.859941,3.001848,5.970839,-4.368708,5.172847,1.455542,0.318267,-7.644112,5.527105,4.119047,7.737328,7.867241,9.911237,-1.891510,0.684241,-1.674418,4.173963,-1.360581,-9.819402,2.860764,7.307759,2.148456,9.445839,-2.935930,-5.817940,8.797144,-1.674439,-6.799637,-4.693721,-8.539683,5.630379,-8.804923,-1.185124,8.729718,-3.560424,-0.460118,-5.050049,-9.600116,-6.491941,-8.322854,-6.241650,-2.540030,-5.982247,7.511755,7.696091,1.864502,-9.408652,-0.581139,-0.755603,2.554750,-4.232574,-0.317301,6.997094,-6.066779,7.868737,-3.377679,4.820809,1.019336,-6.142597,-4.795504,-9.629665,-6.409620,9.517044,-5.555886,-2.117743,-6.796368,7.053195,0.417190,6.736496,-7.434290,-4.495524,1.031771,4.622795,-2.807262,2.396688,-1.909673,-1.026518,-3.406185,3.175045,8.987241,8.815289,-6.825349,-4.127274,3.932365,6.787740,8.017054,9.271451,6.159412,4.272832,-0.155638,-5.173628,-9.390905,4.926844,0.553587,4.306088,-2.174261,-3.665446,-7.089243,9.631118,7.909004,8.949146,-2.069070,5.213466,-2.012218,6.347887,5.789735,7.354038,-2.938215,-2.006659,7.109497,-5.210503,-4.538423,-1.527031,-1.715515,4.638510,-6.339779,-4.358200,4.632871,5.751333,-0.780024,-1.449674,-2.297129,8.164142,-6.596478,-4.834544,-8.512415,3.825941,-9.764234,1.622474,3.728508,-5.100443,9.601374,3.064001,-3.170575,-2.414674,2.380238,-8.037037,-6.751074,6.687356,2.819257,-8.822495,-3.700823,9.804392,1.572967,7.611017,5.267679,4.600029,-1.360052,1.940842,9.486245,0.750276,-0.892934,-7.057037,-9.394847,2.594231,-8.541650,8.100421,0.988955,3.597138,7.640435,-3.933977,-7.340851,0.968306,-3.884178,7.598414,6.626727,-8.785594,-5.549720,-0.419712,-3.282110,-9.146809,-1.318497,-3.118447,-0.559968,-3.964340,-6.565010,-1.563248,-8.389413,-3.324632,-4.254373,-2.343608,-5.709172,1.679527,-3.466616,6.316159,1.236963,8.539079,7.175888,-6.290288,6.200941,3.382888,1.788745,-4.112379,-2.878755,-4.267619,-3.179099,-7.923177,0.531278,9.294880,5.606756,8.034120,-6.593515,-6.405937,-3.070363,-4.186638,-7.446863,4.425862,2.491176,7.194574,-9.089582,6.564089,7.209382,-1.506930,7.602523,-4.822131,-5.686413,-2.545116,-0.896142,7.751078,5.084437,-7.216160,1.635238,0.630428,8.026498,-1.518819,-3.681813,-1.400886,9.005776,-2.227144,-7.967440,-8.366146,-1.750269,3.497014,0.723639,0.932118,-6.288346,-8.953956,-1.330617,5.462042,5.352630,5.830140,4.013130,0.541592,-8.814172,3.614480,-6.565701,-1.354115,-0.972885,1.987791,-3.333755,-0.459505,-9.900273,-7.174272,-2.154758,-9.068699,-8.960667,7.274983,7.218119,-6.337485,5.014638,-1.306530,3.187659,-7.015693,-0.617171,-7.736666,0.943437,-1.567658,9.936676,-2.795314,-4.353422,2.735697,-6.404472,-5.662678,9.936237,-8.998091,-1.150552,-2.000262,0.549114,-6.576586,-5.678330,-1.685184,2.091030,0.868285,3.846077,4.995468,-0.442800,-9.411574,0.958866,-5.937515,-9.267109,1.537506,0.348294,-5.026683,3.102458,3.498984,4.618790,7.492192,-4.320671,-7.655953,-5.690337,3.236442,-7.279936,4.080631,-1.226353,9.685295,-2.874462,6.750014,-4.838392,-1.138854,-1.484225,-0.764059,0.361405,0.968322,-3.916414,-8.701063,9.914308,-2.558383,4.625235,4.499190,2.266229,-9.528023,-7.211338,-6.865778,-6.383002,-2.893770,-9.110836,-0.058061,-3.316734,1.441707,6.201409,2.843236,6.645821,0.287863,4.459783,-6.899729,9.763772,2.116486,-8.132738,-0.719903,-1.262014,-6.889932,7.943307,9.407099,-8.913804,1.097933,-7.248480,-7.792228,-8.930221,-7.795076,-2.919128,-6.158643,-2.465306,4.672653,7.970075,4.155352,-8.979608,-6.487318,-6.870121,2.685609,-5.392891,0.349471,6.923047,-9.212857,0.922859,-7.984871,4.093700,2.076890,-4.455006,7.985678,-7.383062,5.336230,-1.211558,3.605306,5.275887,4.692390,3.619200,-7.253111,-0.809950,-3.168321,-9.611590,0.325086,5.545281,4.276762,-8.262831,-9.473820,4.150682,6.356277,6.552124,-3.950837,-7.501487,0.763557,-6.062031,-2.194700,-7.734655,-6.914517,8.965568,7.540255,-9.164216,-3.077971,3.432880,-3.238116,1.966617,-6.683672,-4.285497,7.781783,-8.730414,-7.441674,2.736096,6.950184,7.781624,-1.008171,2.371197,9.920721,-8.014327,-2.793838,-9.139196,-2.497723,8.049199,4.077731,4.087367,-4.052053,3.961323,4.949689,8.815666,-9.293367,-2.936178,-6.858743,-3.282794,-2.449361,4.552825,-7.003175,8.693105,7.146240,9.082847,-3.045933,-9.038238,-2.306499,3.527711,-7.198464,-8.947860,6.157447,2.849748,2.487492,7.951699,-1.114755,-6.582609,0.334595,8.951754,-9.395414,9.428489,0.893921,3.332304,4.803649,6.596389,-5.250171,-3.731174,7.303143,8.637845,-9.297908,-1.920842,2.750703,6.211921,-2.032736,-9.697246,-3.159315,9.241864,2.223324,6.856521,5.489612,-9.502386,4.414862,2.343952,-5.634106,8.092714,0.119883,2.819140,-3.968860,0.834807,4.451678,-7.960338,9.359565,2.290907,-7.409483,1.948650,-7.403614,7.193911,2.018184,-8.983288,6.248553,-1.898553,2.980334,-5.166240,-6.167670,-5.301498,5.633930,0.483007,-7.102231,5.898700,-8.001876,-7.702973,-7.615068,-4.043976,-7.452562,0.597672,-5.214828,-6.719195,3.696368,7.189852,5.768513,9.001486,-8.273030,4.072095,1.564568,-4.308873,-4.186108,-7.350206,-5.099628,-3.310332,8.917265,9.837574,3.562454,9.753370,-5.693358,-4.976308,-8.805108,-8.443123,6.085757,9.588942,-0.573776,-1.210595,-9.084235,2.572355,3.540324,3.869227,3.601534,-3.340914,3.763347,4.517913,-4.802492,0.588682,1.234061,-0.769225,9.368523,5.347527,7.414740,-5.178787,0.404585,-1.633066,0.141048,2.677466,-7.660935,0.562057,-3.186843,5.595313,2.688699,5.789832,-7.733206,9.726892,-4.202951,2.108084,-6.943441,9.302440,6.915724,-7.032682,-5.995905,6.589960,1.971931,-7.179245,5.197404,-5.331347,-8.522436,6.890280,2.728653,-5.266161,-1.373733,8.346614,-0.193583,-4.779471,7.167101,-5.366697,-3.255220,-0.089820,9.292268,1.511050,3.547234,9.961979,-0.270993,-5.395002,6.292091,8.882013,0.535432,-2.786665,0.642986,9.515822,3.891513,-7.483580,-1.412792,0.281974,9.649350,-0.342193,-5.946374,-7.804304,1.585356,9.952061,-8.957770,-9.256182,6.089510,9.447138,5.428616,4.770297,-7.120645,-5.934084,5.337881,-5.871551,2.481334,2.427077,-9.044655,-4.417253,-7.179797,-9.168745,-7.213378,-1.042854,8.604634,-6.998501,8.847622,9.771030,-0.006617,-4.613085,8.387454,-3.909643,5.464564,0.116354,-9.009203,2.942058,1.559819,8.097536,-9.761982,2.986701,1.939145,-7.372965,-0.481005,-9.216467,-7.879971,-9.774310,-6.198765,-2.378653,-9.118609,4.447577,1.004285,6.458765,5.258579,-7.584710,1.005773,7.708679,5.013073,7.708659,-6.174512,-8.959248,-4.714935,-3.373301,-3.232439,-0.840816,-6.812711,6.331813,0.697604,-2.251651,7.205913,-4.736428,3.301274,5.119352,-7.168478,-6.171359,-0.697675,2.996124,4.261886,0.445606,-9.622591,-7.239561,-4.789914,-3.818472,-5.861851,-9.239724,3.806219,-2.606033,-4.554373,4.195212,-9.819725,7.829854,7.425222,6.015299,3.802109,-8.321118,0.372381,-5.611898,-5.052936,0.067361,-9.000588,-2.660409,-7.865360,-4.294281,-0.596771,7.549245,1.052520,2.954435,9.998150,5.120505,-0.079668,-7.351815,-9.157568,8.221072,0.047612,1.226040,-9.953441,8.098797,7.101178,6.454783,-7.312701,-4.092364,-5.158856,-2.592181,0.224762,-6.896831,3.010779,7.586044,8.636871,-3.105928,3.326950,-6.894252,8.326908,-7.016867,9.694945,-9.128574,7.365461,8.525429,-2.391784,6.267161,8.574064,7.781598,8.901637,-0.355336,6.607718,8.803452,1.972717,-0.831247,-8.533659,5.800874,4.078685,1.637350,-9.569072,-6.502995,-5.368222,-3.652018,6.706883,-4.011425,-5.422535,4.577927,3.442256,-7.078695,2.679976,2.850396,-2.607750,4.326138,-0.493295,-3.295793,-9.717689,0.361740,-7.741641,-6.353521,-2.923918,-2.433706,-4.891575,-2.511490], dtype = "float64")#candidate|4937|(840,)|const|float64
const_4938 = relay.const([[-7.855622,-3.889599],[-1.901772,-2.970413],[1.771586,7.647075],[6.580108,6.437701],[5.259580,-5.168170],[-7.650424,7.312626],[-7.175763,-0.103408],[4.007555,-7.093433],[0.063423,-0.765008],[5.810839,-6.021757],[4.970179,0.695815],[2.248977,-8.258213],[-1.271825,7.081120],[2.454314,-2.408939],[8.154132,-3.590695],[7.702802,-6.808443],[2.616548,-0.913983],[8.928753,-8.025320],[-6.132922,1.799236],[-9.195686,-0.519263],[-3.083445,7.202712],[-9.758747,5.925929],[-4.693148,1.639618],[-6.108127,-0.180399],[-1.708680,-9.354895],[5.304759,-3.270873],[-9.063187,-2.303214],[8.163323,-9.676237],[-3.650812,-8.550926],[4.500908,-6.197600],[8.893249,4.362201],[0.785717,-5.003026],[-3.933063,3.221404],[7.687410,5.287151],[6.484575,-5.486079],[-5.153580,-7.527329],[-7.206076,0.719257],[-2.202204,-6.162461],[5.087887,0.620263],[7.138083,-6.653523],[-7.534533,-0.307884],[8.003430,4.084221],[4.543893,-5.964532],[-1.215748,-9.235658],[0.507810,-4.320225],[3.518055,6.342727],[-8.116754,8.124934],[-2.123499,1.050825],[4.601999,-2.738353],[6.238661,0.239205],[3.056177,-8.232863],[-6.735399,1.178779],[5.252293,9.616030],[-6.205755,8.722233],[4.296169,-2.130470],[9.825681,-9.961676],[9.411077,9.812125],[-2.115557,4.565352],[-3.228675,-3.390932],[-9.009976,-6.585136],[5.748056,-3.347149],[8.238462,3.677969],[-8.809369,-3.535769],[2.740038,-9.015666],[-5.555998,-3.100474],[-4.994785,-1.490404],[6.273937,3.325331],[-7.711709,7.676674],[9.814809,3.113269],[-7.281889,5.688040],[3.482532,-2.502160],[-1.426931,2.978180],[-6.785547,-6.521166],[-6.311530,-8.683457],[4.868568,1.461133],[4.471620,4.283317],[0.460862,2.536982],[1.149881,-7.985133],[4.870212,-0.464834],[-7.275615,-0.325420],[5.820514,1.266466],[4.562054,4.768230],[-4.133269,3.769292],[-4.455615,-0.479497],[7.467886,6.973040],[7.467404,1.797178],[-7.081837,-3.340588],[-8.038730,5.651336],[2.985500,3.862224],[-7.028417,3.205201],[7.231478,3.258977],[-2.197613,0.441992],[3.755455,-1.725823],[0.743122,3.628886],[1.064387,-9.353460],[-4.469973,8.044863],[-2.568783,6.966545],[-1.415010,5.765612],[1.823219,5.476036],[0.280283,0.169594],[8.018059,8.034141],[-7.960886,-7.083389],[-4.435675,2.441032],[-2.523244,0.573271],[9.114031,-7.463533],[3.598342,5.483162],[-1.311001,-9.890842],[-6.869384,-1.828741],[-2.480079,-9.215667],[5.404693,-9.493817],[5.519347,-9.155185],[4.902059,-4.908681],[-3.717340,-5.800233],[7.960560,-0.921895],[-2.268288,2.200729],[1.937445,-4.771648],[8.815836,-7.315381],[4.162334,-5.874149],[-4.193881,-9.715835],[-2.007576,-8.604060],[4.116809,1.063586],[-1.622031,-4.424197],[-9.299974,0.437218],[-7.443614,4.525578],[-1.331019,-3.956461],[7.098211,-0.614084],[8.720373,3.843412],[-2.744406,3.392461],[-1.623771,-0.383098],[-3.154061,3.154661],[-6.045307,-6.000128],[-0.340056,-4.809631],[7.521279,-7.172581],[7.368516,-3.495860],[8.788936,4.831958],[6.033143,-0.293541],[2.568185,8.115882],[5.369431,-3.808842],[0.158287,-2.808750],[1.362186,5.938281],[6.057710,7.564941],[-1.982389,-3.371043],[6.650235,1.075938],[-4.821109,-8.637668],[-0.335316,1.604133],[-6.713856,2.832302],[8.022345,5.391687],[-5.639661,8.869301],[-8.393297,0.711347],[3.658426,-2.034030],[8.729828,1.197923],[8.385034,1.056241],[2.016530,-2.182294],[-2.372238,-8.903270],[5.737375,-2.712024],[-6.258248,-0.269752],[-3.454984,1.594000],[9.027034,-8.731849],[-3.214792,-7.626276],[3.207848,9.519224],[-2.077008,-1.382320],[-2.858195,-3.815189],[-0.034252,0.446320],[1.619635,5.648272],[4.137922,6.211991],[9.879209,2.439362],[3.578672,5.400723],[5.077329,-2.299827],[-4.576131,9.125718],[4.583679,1.715901],[-5.123885,-7.252270],[-7.816353,-0.743587],[-1.667598,-7.729678],[3.138349,8.407268],[4.844797,-0.531954],[-4.195508,-1.618053],[1.025309,4.846301],[-8.680470,1.814203],[9.246385,-9.843978],[4.094395,-5.688380],[-1.400488,6.234439],[-7.858351,-8.402203],[-4.201297,9.040201],[6.939986,5.035595],[4.728745,5.319676],[2.754228,-5.531944],[-0.892669,-2.479196],[9.755070,-6.208356],[8.317387,-4.105543],[-3.717830,2.245909],[0.742378,6.719428],[5.300498,7.618181],[0.655930,-1.990425],[6.511242,-8.682824],[7.438692,-5.178696],[7.211973,-5.007475],[-8.964434,-1.900925],[2.071798,1.632983],[-6.287435,-4.765836],[-3.997354,-9.499368],[-5.905291,-5.003490],[-0.664368,-0.557808],[-4.696399,-9.869983],[8.755517,-8.608367],[6.729489,-9.921135],[1.297068,5.124293],[9.687247,5.575278],[-8.693884,6.923164],[-8.657994,-3.752106],[-5.710764,-1.664357],[6.655157,-3.688396],[7.582953,5.458548],[-8.180982,7.942862],[5.836561,2.617008],[-9.359609,-0.093422],[6.708335,-7.469287],[-7.457128,-5.709287],[5.694539,2.413426],[5.668857,3.047801],[-7.150883,-1.822057],[-0.334038,-5.195636],[-2.109871,-6.570477],[-1.405960,5.781790],[9.558794,5.587838],[5.667354,-2.395929],[-9.950864,5.212159],[-2.526530,-9.847560],[1.892354,7.793404],[0.643090,-0.431199],[9.146744,-0.296923],[9.368151,2.234558],[5.021350,-6.417694],[-6.406450,9.419036],[-5.220571,6.939716],[5.050429,-3.523584],[-9.889823,1.606018],[1.148371,0.156893],[-6.757636,6.212404],[-6.361431,-7.143893],[7.635486,-4.590473],[-3.809212,7.041292],[-6.399011,5.182277],[-4.545548,4.339971],[6.123378,-1.579730],[-9.383623,9.639362],[-0.084409,-9.799101],[-7.193697,-5.069942],[-6.065214,5.057683],[7.747788,7.615938],[4.490689,2.384913],[-8.616210,-4.093805],[8.035303,3.664419],[9.501155,3.027422],[9.413500,-7.835549],[-0.505551,9.256741],[5.663656,5.339969],[2.064022,-3.946588],[3.039249,9.962972],[-1.152613,5.799517],[-3.049677,9.380530],[-1.350572,6.670624],[4.185632,7.173374],[5.751669,-0.048561],[4.925972,2.711617],[-4.738555,-4.805886],[6.827283,-7.565288],[7.512167,-7.703536],[-7.116195,8.040410],[-9.280493,-3.526385],[-5.339868,2.696896],[-2.598106,-4.643505],[-9.818794,4.140583],[-3.381103,-3.697676],[0.355571,1.779542],[0.417574,-3.006917],[-4.578516,-9.050039],[5.158549,-2.031339],[-4.186075,4.410617],[0.739162,-9.390406],[7.056960,-0.523228],[5.035695,9.245788],[9.930859,-2.369628],[-6.245233,-6.659878],[-3.542283,5.664685],[2.460644,-4.172385],[-0.648435,2.305325],[3.508467,9.901453],[3.646788,-4.289021],[-4.115941,5.214431],[0.413777,-5.753992],[-0.381533,-6.161408],[3.575885,-6.687235],[2.951742,-2.147014],[-6.425196,3.421339],[-2.296326,-6.860343],[-7.741454,-0.463091],[9.957308,5.410352],[4.072790,-7.517356],[-8.678770,7.183818],[1.457811,3.981441],[-6.424508,-1.241186],[9.225127,-3.212393],[-7.184148,6.766465],[-5.448397,2.085753],[6.613495,-8.887018],[9.548139,-0.973404],[1.874466,4.837934],[-1.792863,1.507175],[7.453436,5.236353],[7.209653,-8.187578],[8.712713,-4.797148],[7.035610,1.439200],[-1.722723,-5.045250],[-3.730661,-8.725968],[-3.590613,-4.405648],[-8.134614,4.892428],[2.841860,-9.887185],[-8.889363,-6.591793],[-3.599228,9.142290],[0.236729,-1.975547],[-8.171118,1.583303],[7.572205,-2.722446],[9.442803,-8.850187],[-6.356684,4.884503],[1.342286,-3.962036],[-8.865135,3.157468],[-9.885257,4.387895],[4.062622,7.030161],[-5.285700,-8.606818],[-6.975707,4.795921],[-0.913689,9.564822],[0.274213,-2.859071],[-5.432208,-7.062952],[-5.543313,2.977761],[3.695205,-5.332992],[-2.993127,-7.571434],[-9.280862,1.806391],[-8.790991,-6.863890],[-4.113735,4.426256],[1.368763,-2.104450],[3.968192,-4.674015],[-6.158572,-2.655115],[-5.234589,-9.993284],[-4.698197,1.353660],[-0.795072,-8.923134],[2.581687,2.923996],[-9.181269,9.050973],[-9.242358,-0.412204],[6.042593,8.390242],[-6.302062,3.176752],[-8.828015,-3.111468],[-1.601757,7.042115],[-0.923983,9.187515],[4.028641,8.060049],[-6.432314,0.893488],[2.330608,-5.193602],[-2.184431,-9.325119],[9.026851,-5.949678],[-1.754838,-2.224968],[-7.667544,9.697257],[3.340124,3.049703],[0.875835,1.350854],[3.214491,-1.997851],[-0.437920,1.015493],[2.235097,6.191955],[8.881883,-6.547299],[-9.745014,5.767881],[4.499792,2.012844],[7.406603,3.547145],[-5.429705,-8.458605],[3.643610,-8.652077],[1.105611,-6.308999],[1.727065,1.369623],[5.166351,-2.007692],[1.914835,3.040078],[-3.732440,5.952142],[2.011818,-2.688561],[8.517092,6.255837],[-2.850305,-1.892377],[-4.683512,-2.052895],[6.424719,-0.271827],[1.601472,-8.988059],[-0.854893,2.703064],[7.662725,7.950437],[2.622517,-2.522684],[-9.798289,9.524535],[6.344533,2.597484],[7.848789,5.616036],[7.487490,6.571164],[5.647738,8.759908],[8.002003,-7.762200],[-1.838191,3.446717],[-0.654820,-6.795587],[-6.861184,3.060262],[-3.284325,0.955927],[-7.396475,-7.511162],[-7.469838,-9.924195],[0.839109,-2.538851],[8.222650,9.993454],[-0.649911,5.749723],[-7.295618,0.631890],[-4.584663,-2.137911],[2.083289,-9.248337],[3.095886,-3.935031],[-1.146982,1.233755],[-7.137906,9.893957],[-3.184523,1.368652],[1.283829,6.616845],[1.599824,-1.752587],[4.229975,-2.495965],[-5.925504,-2.987023],[5.015168,-3.788371],[-7.602469,9.952443],[0.325247,-5.395497],[-2.808598,-7.902465],[-8.199357,8.907795],[-8.165459,7.966750],[9.982446,2.259519],[-4.147188,4.243982],[-7.120834,-2.116223],[0.215466,7.347823],[-5.315128,-5.845166],[-4.669548,-5.614230],[5.013798,-4.101260],[-4.435230,0.220975],[4.977228,9.807867],[1.972238,3.630287],[-5.077380,-7.955356],[3.017539,-3.458201],[7.645508,-6.532805],[2.232111,-3.257097],[3.315457,5.352789],[0.023486,4.731730],[8.253671,-2.005370],[2.321334,-8.739180],[7.967115,3.106371],[-7.258184,-8.837712],[-9.474259,4.035751],[-3.101773,-4.893324],[-7.848158,7.370379],[8.351777,-6.156144],[8.692535,5.177646],[-8.653807,1.878813],[-6.846573,5.405903],[-9.534199,-9.050612],[-7.980509,9.017393],[8.026859,-7.007669],[7.330138,3.576980],[-0.295621,7.243836],[1.686344,-5.906992],[-9.749469,3.806462],[-6.472578,5.755560],[4.284361,-2.051457],[-3.034025,-4.253869],[5.182789,6.338268],[-1.171319,9.738721],[2.112480,-0.832971],[0.133779,-2.859539],[-2.117079,-3.696994],[-8.144015,-3.921335],[7.396063,-1.985591],[-7.223428,-0.593976],[6.515438,-9.211531],[-3.811673,8.989059],[-3.141363,-2.480644],[-5.300201,8.375974],[1.914688,-5.118456],[7.367172,5.070378],[8.848995,-3.138752],[-5.542320,5.007077],[9.376244,9.039122],[-0.911609,2.948217],[-8.723386,-4.275502],[-1.523743,-4.121059],[-4.957579,-0.815763],[4.857180,-4.507588],[1.423981,-4.484355],[2.379857,4.308813],[8.973946,5.921891],[3.048081,-0.917280],[-1.775199,5.544060],[-2.157794,-5.808076],[-1.920288,-3.950265],[-1.995816,-4.101312],[-7.211105,7.917940],[-1.871104,-4.362568],[5.501185,1.132476],[-6.055251,2.359162],[0.558062,7.148390],[-5.509928,-0.810980],[-3.310203,-2.281284],[0.260600,-3.505469],[4.263669,-7.115793],[2.432973,9.158141],[-6.291744,2.545543],[-1.653485,0.301442],[8.069788,3.312045],[3.594918,-2.479294],[-7.920603,-8.569141],[2.719709,0.441973],[2.863699,6.274190],[-4.037333,5.852378],[5.138304,4.660041],[1.172256,8.080622],[-9.465013,-2.431638],[-6.953530,4.951519],[3.668095,3.616154],[2.441784,1.542814],[-6.419823,2.878612],[2.670694,6.825211],[3.381823,-1.997521],[7.990008,-7.319030],[-2.911287,4.583408],[2.495951,-1.162540],[8.305983,-6.704544],[-3.977506,6.244394],[-8.221825,-0.363608],[3.553350,-7.771487],[-1.165721,-8.564032],[8.007795,3.307856],[8.076639,-4.517537],[-9.390064,-5.170625],[-9.741753,-6.653352],[-0.926918,1.021159],[-0.266178,6.480428],[9.097068,-1.403777],[-9.532425,-3.915871],[6.529745,-3.401552],[-4.011669,-6.654875],[2.215920,-7.848101],[9.949432,-2.163734],[-0.847189,-4.101430],[3.757008,3.418831],[8.357055,7.223977],[-1.059744,4.160604],[8.866733,-9.775884],[9.235026,-8.563174],[9.215070,-4.791060],[1.743810,5.414022],[0.003271,-9.898671],[4.860749,5.080279],[-2.362588,-7.653868],[-6.646711,-1.251260],[9.497493,-1.569533],[5.299977,6.088455],[7.652612,5.751743],[8.613025,9.474309],[-3.389964,4.193496],[8.202387,7.945343],[1.818871,-0.111440],[5.253806,-0.704713],[6.293855,8.995624],[9.636325,-3.919865],[7.703872,-4.246029],[-1.071677,7.047566],[3.667294,-8.516889],[3.862321,-8.566567],[3.742829,1.921034],[-7.315033,-8.707881],[-4.338494,-0.262399],[-7.088482,-9.402046],[0.853142,-8.100749],[-6.033698,-3.295633],[8.270418,-6.998592],[-1.971481,1.916697],[5.396669,7.985221],[-5.729617,-9.645563],[4.115219,6.718515],[2.843703,5.467006],[-1.919197,-4.527927],[8.266078,-0.039634],[0.485215,-7.919986],[-2.588562,5.445816],[-6.047288,3.518362],[-2.386916,2.006891],[-5.452310,-0.230778],[-8.941170,-9.415032],[6.019397,-1.620861],[-1.699851,2.413256],[1.211889,7.736493],[-4.200122,-6.526110],[1.002262,8.374237],[1.031596,-2.034332],[9.626317,8.686859],[-4.616590,-8.073227],[-4.002654,5.692783],[-8.907288,-5.528588],[-6.249265,4.271583],[-6.021573,2.254325],[7.920975,-7.187970],[6.516514,-2.000705],[3.727795,-5.749722],[-4.361693,2.324995],[3.040334,8.720469],[-9.988975,-9.091094],[7.917205,5.924123],[5.233046,-0.116941],[5.584799,6.750289],[5.408678,-9.955639],[3.629041,-9.141726],[7.254794,-1.038289],[-7.063221,-9.896054],[1.109702,0.381648],[-3.748015,-4.111064],[5.187140,-9.255521],[7.431490,6.497968],[-6.346725,2.766580],[8.830060,8.804231],[-9.537001,1.752028],[7.087255,3.839279],[-3.348666,3.610973],[4.804502,-0.172997],[-4.860253,7.323830],[-3.352880,-2.484595],[-3.000985,-6.897187],[-4.598634,6.117864],[2.432813,9.297446],[-6.035428,2.631757],[-6.051683,-4.794020],[2.305945,-5.166995],[9.276980,9.502274],[8.810705,-7.547237],[-2.748101,9.981036],[-4.994777,0.037456],[2.550088,-9.329507],[4.015163,1.386945],[4.391910,9.116799],[-0.316654,-2.985566],[1.094417,-7.289299],[-6.572712,6.503039],[8.685096,1.066498],[6.074975,-2.612704],[2.531240,-9.514439],[-4.836554,-3.515167],[1.557353,-6.668276],[-3.609602,-2.058809],[8.455109,-2.195138],[6.153665,-8.666847],[-4.640022,5.002035],[-7.642134,-1.220650],[-3.915370,-0.896137],[-5.570547,-7.296184],[-0.985657,-7.949514],[-1.933287,-6.549543],[9.098163,2.716645],[-8.313834,5.746118],[2.158094,-7.368974],[-3.974224,0.103163],[-1.981560,-3.583381],[2.275884,-4.527546],[1.639732,-3.156747],[3.244757,4.902683],[8.585950,-5.838548],[-3.685905,-7.303130],[-0.092310,6.173116],[1.786111,9.483652],[-4.172675,7.881442],[4.176836,7.662165],[-4.541154,-7.532248],[5.204107,-8.219107]], dtype = "float32")#candidate|4938|(660, 2)|const|float32
call_4936 = relay.TupleGetItem(func_4307_call(relay.reshape(const_4937.astype('float64'), [10, 7, 12]), relay.reshape(const_4938.astype('float32'), [1320,]), ), 4)
call_4939 = relay.TupleGetItem(func_4310_call(relay.reshape(const_4937.astype('float64'), [10, 7, 12]), relay.reshape(const_4938.astype('float32'), [1320,]), ), 4)
func_3277_call = mod.get_global_var('func_3277')
func_3280_call = mutated_mod.get_global_var('func_3280')
const_4942 = relay.const([-5.196182,-1.157036,9.527959,2.794838,4.601095,-2.666335,9.195166,-4.318991,5.584044,-4.773788,9.879473,-2.685445,6.970364,6.547026,8.650873,8.499943,6.526899,-8.389111,-7.425995,-3.557404,-1.325212,3.427202,5.009403,0.238026,-4.814350,-2.489661,-1.002573,8.034606,-7.758719,-2.570939,3.295866,8.339808,-6.122661,-6.426753,-2.904687,-4.491489,8.265396,-7.809408,5.941730,6.413392,-0.485147,1.133930,-9.784912,-0.784979,8.160633,1.839173,-8.663901,-8.712797,-7.694683,1.450939,5.170081,9.870213,9.706881,-8.931674,3.323150,-2.906544,2.334997,9.237256,4.266724,-0.600872,-5.261989,1.247777,8.562560,8.369203,-3.035617,-5.680908,-5.048567,-6.604809,3.512354,-8.913588,2.130648,-2.426771,-1.157807,-1.772605,9.840373,8.413342,-6.469753,-6.525420,-9.993333,6.326666,-4.788565,-0.266369,1.855196,-9.936093,4.014492,-2.941738,-9.845653,-9.931957,-6.124086,-2.408391,0.924702,4.367234,-1.611550,2.007704,-1.258686,-0.852237,-8.186161,9.955848,6.658434,9.423962,8.246855,0.971756,-3.376667,-7.492604,8.276750,1.593460,-5.520128,-5.924461,-1.641131,8.596320,5.824903,-2.340403,8.538865,8.873693,3.401740,8.681257,-9.879873,-7.471415,-1.112286,6.519495,4.682173,2.558558,-5.585023,4.987536,9.692801,5.533371,-6.457632,6.307102,3.098772,-1.144639,5.818529,7.156792,7.950304,-6.893341,0.772943,7.944983,-5.738393,-4.251046,-1.457813,-8.054434,2.686690,-8.839280,2.212118,9.310498,0.493415,0.815309,4.595753,-5.617013,0.496954,0.154969,4.954807,2.038426,1.744702,-9.432992,9.966596,4.768718,-9.863558,-5.162163,0.296633,-5.304181,-2.764189,4.293940,1.221793,-0.229562,6.203210,7.688495,-8.988286,-9.720424,-1.991691,3.066128,0.704198,-8.757735,4.176226,3.047141,-5.170696,0.321704,-8.683285,7.016565,-9.435458,-7.129658,1.915786,-7.792779,-1.921721,0.371823,2.919221,2.849944,9.973111,-1.929698,-3.499647,-4.916760,-7.982760,7.299612,-5.878193,-9.441356,-3.266668,-6.037817,-3.428674,2.984980,-1.404915,3.282510,-8.310438,-4.472488,6.725600,-8.593651,8.254420,-7.931877,-3.156886,-2.010366,-9.381202,1.036700,7.278192,-9.009906,7.024205,-8.554851,-7.534723,8.719687,-4.229881,2.927336,5.667885,-0.953541,-8.717691,-7.904018,-4.190866,7.868160,7.600667,-6.856968,8.020600,-9.527804,-0.250773,-6.062470,-3.106516,1.929057,6.538736,-4.958505,-3.479473,8.249406,-2.801532,6.502079,-9.643017,2.779300,-9.500414,-1.101381,5.745730,-5.327716,-9.588358,-9.159197,-8.118198,3.155664,-6.831279,-0.211184,-4.707647,4.050867,0.580712,-8.241813,-1.339946,1.918712,4.323135,-9.104565,-4.865321,-9.208546,7.652937,-5.821523,0.051138,6.614393,4.659577,-8.673839,-6.428614,-0.025223,6.803673,5.776842,8.509590,-3.910179,0.155244,3.181225,4.775888,-8.990917,-8.105081,-9.487610,-8.795064,-6.876132,-1.830152,-9.159098,-0.156589,-2.155429,1.149606,2.917924,1.096457,5.662353,-1.396125,-4.919875,-7.590257,-2.334330,3.654663,-5.092228,6.832526,-8.588684,-1.056756,-4.504924,6.970534,-8.023880,-2.464734,9.494532,2.935154,-0.698575,8.239455,2.128028,2.798264,7.312864,-2.796878,5.313017,-6.291895,9.261968,-4.038428,8.249014,3.910901,-6.941008,-4.927863,9.126109,-3.624260,6.505556,-7.733461,7.483114,1.527354,1.722864,2.190090,8.918655,-0.340452,-1.594066,-3.523168,-9.983011,4.770963,3.333379,7.761149,5.209188,5.930198,5.243905,2.780037,3.146336,9.422709,-1.394032,8.291873,-2.145362,1.298934,-0.517439,1.537166,2.046952,8.776313,-9.566006,7.932420,-2.298699,-0.820103,-4.668783,9.964254,-3.626451,-7.531746,3.964357,-1.727198,7.096872,-0.562148,8.874849,7.612553,-4.944882,-5.867428,0.660021,-8.332641,-9.648543,4.643951,-7.778413,-4.117453,-0.960261,6.237022,9.527558,6.284171,6.070592,-6.033629,7.315464,3.829173,6.894917,-6.730115,6.145330,-3.396083,-1.981330,5.163044,-0.268719,1.207215,-9.213918,-6.904916,4.520194,1.264648,1.714386,2.808642,0.673473,-0.688783,-5.460403,3.721520,9.936135,8.899287,4.796800,-2.459512,4.100038,-4.299068,9.863496,5.872485,3.686688,5.442104,-1.182948,3.366697,-1.692796,-5.889033,7.949704,-4.979868,-8.287913,-0.812023,-0.484938,2.533975,-7.940224,-5.709713,5.757973,-1.589085,-3.844067,1.147009,4.266426,-6.339504,0.783727,-3.013565,-1.888812,0.674993,9.422596,-7.498343,6.422030,6.796225,-1.919538,1.609676,7.035843,-8.011771,0.903117,-7.254525,-4.176021,-4.945358,-1.992972,-3.974457,-2.181390,8.229796,1.136360,0.513462,2.637913,6.348770,-1.067476,2.602616,-4.240659,8.819089,-4.461600,-8.178007,-0.901796,-4.470107,-1.471239,4.889826,-5.704630,-7.514792,5.193639,-7.825091,-8.565095,-3.955660,-1.029891,-0.657169,6.009736,1.973259,2.148883,-3.896664,-0.578375,-9.833053,-9.749602,7.836715,-3.007170,-5.481852,-1.046558,8.522840,-2.751635,0.382113,2.037446,-1.213115,-0.272746,-6.938003,2.829502,6.253837,8.148509,-7.463150,-8.734339,7.232444,3.141476,-4.839122,-0.995503,-2.787734,2.624726,-9.281634,5.007757,0.834303,-0.692499,-3.554803,-1.669915,5.922042,8.722693,9.833429,-2.563391,4.813789,5.580864,8.613310,3.831902,-2.591995,9.359104,9.569609,4.792583,-2.299033,2.101546,-2.132370,9.682557,7.337808,0.545129,-5.915541,5.431676,-7.943831,1.527657,4.568183,2.452543,3.337969,-7.946018,-7.693271,5.372347,3.979292,6.233601,-8.147448,9.907343,9.919877,5.314252,-9.930196,0.484990,5.196037,-2.818372,1.924079,-1.778322,0.113998,-1.304405,2.231585,-5.168396,-4.403836,-6.629790,-1.418415,-3.144147,-6.753357,5.688623,2.651965,2.439541,3.467326,5.990291,-7.430389,1.236213,-0.099356,8.155148,9.246279,-6.204048,9.489201,9.266185,-2.436359,5.975337,7.267017,-8.134457,-6.754160,6.423274,7.881234,-6.197635,-8.320770,6.368771,8.386690,-4.488467,9.344685,-7.188009,4.882989,-0.837191,-0.189541,2.262543,0.837449,-7.740158,9.418383,3.542506,-1.386768,-6.200045,-6.545322,5.263363,-3.462095,-9.024211,-3.337389,-4.914763,-8.666593,7.065437,5.208553,-4.188049,-1.165310,-5.138017,-0.045982,8.265734,2.798787,-3.887558,0.686527,-7.589978,4.438612,1.099339,4.241556,-7.954419,2.886136,-2.383408,-2.912458,8.514227,8.696513,-0.717444,2.208936,-0.117250,-6.191743,-8.430134,-9.787733,6.597620,-1.333227,4.347696,5.664873,7.456153,-4.603401,7.569931,9.519916,8.470211,-2.311399,-9.189786,7.763074,-3.001958,5.584545,-6.550865,9.744944,-5.103551,-8.567675,-4.079517,3.868738,-1.914924,2.523319,-1.879369,-1.138086,-9.481509,6.510337,4.744500,6.620388,-9.204350,-3.500577,7.554856,1.231480,0.178907,0.398508,8.461096,-5.292461,-4.746719,3.570358,-4.855363,9.719590,-0.354277,0.727390,0.523535,6.400311,-5.020876,-8.843592,-6.246494,4.751874,-8.303270,3.362746,6.533090,0.555963,2.649751,-4.204420,1.483968,-4.730295,-9.386292,7.994500,0.972971,-8.862914,-3.058016,4.072681,-1.248555,8.072526,9.785127,-4.832924,-5.028060,4.300305,-7.204759,5.009580,5.416569,0.369062,1.903680,8.831538,7.134963,-3.141255,3.767695,-2.566598,-6.767523,-0.941320,-8.075132,-9.444003,-2.604288,6.132660,1.003032,-9.788941,-2.543686,3.821565,-2.141303,-3.274117,-2.905952,-2.443689,-6.858329,8.978911,-6.236771,0.181430,-3.174266,0.440127,2.853422,6.312052,6.691988,3.407565,2.416640,5.027034,2.746772,3.317890,5.483134,0.922855,6.945053,-1.106244,-5.343915,-0.216673,-1.380736,-4.153202,-0.944402,-1.898038,7.381069,-7.274921,-2.700707,3.870130,4.896477,4.180893,-0.478035,9.765398,3.774636,7.117632,6.534527,-2.092969,8.725407,2.730387,-0.102195,6.209122,3.606737,-2.077624,8.374274,6.866067,0.505830,1.855236,-9.582850,7.233035,6.867580,4.734759,-2.423828,-6.800488,-1.832617,-2.684146,2.905625,4.493731,9.706683,3.995559,3.630512,4.875145,8.106437,-8.858615,2.591252,-0.394137,-8.614534,6.928916,7.417429,-6.110885,0.468302,3.199248,-0.616039,3.081779,-0.888227,-5.058117,-9.305104,-2.327531,7.703750,1.580138,-2.942731,6.966324,3.846952,-4.032955,-5.749245,2.451756,2.109071,-8.410197,2.758259,0.825159,-6.134747,8.100631,0.472111,6.008772,-2.786999,-7.693081,-3.819951,7.085603,-1.075962,-5.839847,-7.316854,3.569974,-9.291623,9.708806,2.048867,-9.353011,-3.937416,-4.046885,3.298990,-1.803913,-0.297722,3.650893,-0.364311,1.425668,-0.147198,4.532320,8.869819,-9.482869,0.869843,8.853526,-1.313834,-7.471667,9.659970,-3.681858,-9.531245,-8.212015,2.958984,6.217437,-1.150358,5.765537,2.025694,6.754875,9.152391,-5.734313,0.526246,0.122633,3.092793,-2.007673,6.389388,-5.721724,-2.121830,-8.709986,-9.541086,8.837348,-2.153203,2.061937,-9.753947,-3.103203,-3.412566,-9.805288,-9.893106,0.317706,3.486798,-0.696258,-8.272292,7.117650,9.843580,2.228289,9.508233,-9.737371,6.290200,2.953006,-2.392592,7.586639,8.754160,-2.755261,9.625109,6.383516,-6.783675,9.694401,-4.599658,0.975873,1.218377,1.169385,9.737659,-9.279745,6.114980,-8.464810,-6.774590,-2.356124,1.746472,6.548924,-6.180216,-7.856419,9.730709,-5.855524,-7.353686,3.382414,-8.976580,-0.598956,0.636065,-3.073710,6.491874,-3.722106,-4.181251,4.428955,-6.082592,-8.764221,9.658398,9.410210,1.985120,3.107934,9.114647,5.245734,0.751726,5.739051,-8.552130,-5.273871,3.063467,4.912339,6.333393,3.825225,-7.868088,3.351131,-9.018212,-4.799203,-4.011559,6.164128,-4.594899,5.012884,3.415108,-6.541154,-8.930594,1.901564,-0.909447,5.969423,3.611507,3.328159,-7.071266,7.421238,6.376018,-1.397157,4.056278,0.272709,-5.064010,-3.115642,6.777948,-8.821542,7.065310,1.615347,-4.699304,7.139818,-7.002419,4.828599,4.306048,2.494733,-2.752054,-4.981876,-5.618294,-5.611199,-3.629899,-6.630174,5.861828,2.043427,-6.206530,-7.451389,2.258437,-5.689455,-7.210352,5.940269,-4.459210,-9.141282,-8.528043,4.236065,-8.163967,-7.383675,-5.108671,6.277153,6.832889,-5.113196,2.354287,-2.566744,-4.474790,-3.222401,6.730837,8.617249,7.311251,-4.312556,-5.255959,-9.344627,7.632449,-5.596632,4.312684,-1.473952,-4.229232,-1.332462,6.045401,3.485682,2.755991,1.819340,0.692954,-7.406412,-6.039418,-7.968539,-7.995529,-9.566269,4.242718,2.117149,-4.572548,8.498626,-0.174873,-7.824581,9.955491,-0.322250,-2.543279,8.624747,-7.902611,-8.975394,-8.169881,8.331848,4.535832,3.614974,-6.033858,9.318502,-9.319942,-5.031234,-5.929860,-2.795831,-0.145226,-1.619280,-8.367101,-2.478647,1.203304,-8.820788,7.860698,9.561834,1.845992,-3.619705,6.811257,-4.926027,-1.222839,0.391694,4.662301,-8.077310,-1.670451,-5.922843,-1.950190,2.271216,4.871543,-9.886503,3.110701,8.815592,-9.584931,9.649007,5.952424,8.784910,-9.984619,-7.305535,-8.539142,1.619648,8.011890,-0.733358,-5.415599,-2.125352,1.380444,-1.559193,-7.444305,9.919875,3.659647,-2.485578,-6.900536,8.201007,-6.132968,-6.723952,-0.464346,2.299209,-2.242559,-5.475491,8.154854,-3.243406,6.879053,-8.744813,6.643041,-8.012479,-5.324026,0.886581,-4.538927,2.034097,0.269403,7.960295,5.265093,5.549429,-8.187252,-6.658515,-0.597006,-5.661435,7.381490,6.634506,-8.215015,-3.959949,1.747831,4.951930,-3.098337,-4.518368,6.372248,1.876914,2.531552,-6.249125,-8.528169,9.248663,2.512384,-0.695957,-8.320645,2.641037,8.054861,2.491580,-8.595720,-6.573643,2.433452,-1.432603,7.383655,3.053535,-9.346548,-6.833509,-9.179118,-1.033552,-9.243936,3.754162,-1.668346,0.786657,-4.743895,-8.448785,-8.242228,0.582045,-6.389328,-0.523628,1.853837,-4.938942,8.421987,2.589438,-0.856414,9.772395,-6.976849,-6.933730,-7.500219,0.616826,-9.132618,9.346946,-1.087637,4.350963,-4.518687,-6.542474,1.934643,5.561167,-0.441230,7.299529,-2.571403,4.299617,5.257847,-6.178223,5.282364,-5.315878,7.351644,-8.055894,-7.558080,-7.437055,9.194097,-1.486316,4.812141,1.279492,-6.678919,8.355008,-0.366522,-3.054707,-3.004851,3.452144,-6.570432,7.872098,8.712849,2.682124,2.900799,-3.180228,3.441340,-6.323540,-8.207576,-3.889499,-6.811804,-4.733880,-2.980053,-9.144931,2.671365,-5.521475,1.971071,6.866341,-3.974610,-5.494566,4.222692,-6.535199,6.933761,6.947135,1.622829,4.760728,6.940205,-6.244243,-4.285137,-0.996468,-2.775438,9.382432,0.641040,-7.586605,1.850780,3.177454,6.878377,3.545202,-9.986615,-0.046705,-2.889423,4.616518,4.004485,8.611158,-6.796569,2.874225,0.816951,-1.494460,-4.286949,-2.918880,9.055749,-7.222582,7.996849,-1.389779,-2.242132,4.393801,-3.426607,8.669532,-5.741668,4.266431,-6.477992,1.594240,2.654836,-9.987310,-9.626858,3.742296,4.910214,-7.415483,-5.255733,-2.635552,-2.449687,0.949329,5.294772,-5.296838,-8.273663,-5.111713,7.930124,-2.265793,-8.370246,-9.923249,9.876463,-3.949486,9.462821,3.701929,1.205664,-0.987741,-5.188113,-2.263977,-6.319999,9.201154,-4.635191,-3.326492,-2.077493,-4.443403,1.753404,8.642668,5.390019,9.073900,6.303801,-7.708559,4.883422,-3.580695,-6.163467,4.709250,4.887890,7.685767,-7.791477,3.340922,-4.606459,5.486525,-8.519708,-6.530579,8.530981,-4.035367,7.622782,5.762369,-6.198562,-2.084656,7.483628,8.963059,-8.054084,-5.017875,-9.801403,6.190216,-5.660063,4.071553,-6.625257,-3.268315,4.113433,-0.544517,3.789684,7.837003,0.117312,-0.745651,4.641721,3.561552,9.480565,6.930257,-1.956402,-6.567260,3.711198,3.538609,-3.315354,2.975264,7.934418,-0.898825,-2.144062,-0.675845,8.269323,-2.813258,-4.300837,-8.378230,7.197751,-6.258392,6.880166,-6.239426,-1.745537,-9.681931,1.452115,-1.500491,8.154170,6.302256,4.377448,4.857853,9.702694,5.134167,2.669028,7.370266,1.396272,-0.107317,-3.654363,-6.306651,2.372165,9.373742,-5.394770,0.664709,-7.200039,2.298459,-8.839796,-3.177933,-7.380933,2.683483,-4.776579,4.471256,-4.720307,-3.472748,-5.053708,9.925251,2.355355,5.648448,9.883274,7.886882,3.696558,8.014875,5.352255,3.605096,4.281887,4.307783,8.163914,-4.248864,4.186806,4.846828,7.406703,5.948477,4.202747,-0.696654,7.119857,8.471672,9.900150,-5.598206,-5.530139,-7.580675,-8.906764,7.759767,-2.841425,-4.467188,-7.841370,-7.370769,-2.401322,-2.794757,-1.330238,-7.966856,-3.185580,-5.978336,-7.031101,-0.603085,8.453500,5.604396,2.605779,7.333750,-0.138821,5.201286,2.603495,-2.764293,2.730870,-2.094026,2.722935,2.699235,-5.202575,1.813843,-1.221545,3.634965,7.837648,9.595063,-3.973523,-8.653576,-2.000178,6.214778,4.570188,-6.520926,2.297718,-8.039214,9.846984,-2.323438,-0.814532,8.475485,-3.859327,-0.541539,2.816960,-7.990742,-2.437676,-7.250391,-5.134770,7.213390,2.816958,-1.158921,-3.660568,2.234150,-5.594134,8.234876,-1.209546,7.646753,0.382836,-9.806844,4.392584,-2.995142,9.459047,8.282386,8.846436,-1.730290,-6.265199,3.799834,9.580945,-5.897346,-6.334547,-6.686604,-5.056150,8.826786,9.120185,-1.434323,-6.121027,7.928180,8.402076,5.739163,3.610500,8.743162,-4.884833,-2.399869,-1.872300,8.826927,-8.273199,0.715908,4.920358,-2.098819,-7.458345,-5.490122,-4.989434,-8.549865,-8.597629,-9.879095,7.789012,1.971461,-5.976806,-7.197601,-4.074302,5.948059,0.096231,-1.529026,-6.692846,-5.627645,4.744414,4.044404,-4.336783,-0.817963,-2.812470,-6.008892,-6.575825,7.664067,4.558294,8.514005,-5.305125,-6.642225,3.528950,-9.306050,0.451482,-9.747077,5.806630,-4.473343,-7.063961,-7.465880,1.724973,-9.617270,-8.105421,-0.354800,6.733900,-9.752943,4.115597,-2.071517,9.749677,-3.891105,7.910630,3.302283,-1.470039,-7.336489,-3.318228,7.421807,8.800265,-5.117718,-5.457589,1.722918,-5.766673,2.666746,-9.697799,2.145449,-5.573287,-7.180494,-7.941620,9.176178,-7.856834,9.325362,-0.492716,-3.375911,0.278595,-2.411148,-7.067489,5.714766,6.139371,-0.846202,-8.361224,6.819692,6.651205,-8.463658,6.434685,-1.994889,0.396890,1.157668,2.958481,9.421476,-8.885142,-9.249263,9.035600,9.525262,-0.914130,-5.436178,5.953539,5.602771,-2.292663,7.085324,0.585617,1.544931,0.236111,9.167494,-9.978735,2.780596,-5.248717,1.312893,-4.197870,-1.340273,-0.668870,4.114669,-2.445661,-4.471424,7.883479,-6.682736,-2.538821,3.412705,-5.323607,-8.533091,-9.355776,1.674703,6.879464,-8.670247,-2.532413,-9.455311,-9.854681,-1.880676,-4.029412,1.139894,-1.679796,5.133340,1.223161,0.001666,7.299136,-3.316134,7.101267,-6.832433,5.458357,-7.892259,6.368462,-9.782559,3.678817,-7.404746,-1.872908,5.903843,7.031894,1.962988,1.906797,1.794578,-0.565171,-4.059180,7.221183,-3.285057,-4.538084,-2.818541,4.238554,1.452810,-0.859540,-0.001579,2.889637,2.354554,-1.723285,4.880642,2.740693,-6.089872,-6.422903,-0.148872,3.678177,-4.171590,4.679105,9.525516,-1.273530,4.674275,-8.871352,3.814229,0.417287,7.008122,5.266282,-5.996977,1.357245,-7.579239,7.077483,3.583460,5.779747,-3.667424,7.164303,6.003532,-5.504009,-5.897468,-8.109064,-9.267377,-2.322166,-5.853577,-6.689541,9.035217,2.211680,-2.280364,-6.931159,-6.435075,9.117511,-1.906265,-8.555647,-5.156383,8.620094,-0.185912,-8.019401,9.340874,-8.823580,-1.384486,-7.723911,-7.922456,8.339043,9.440462,-2.525232,2.479511,-3.300792,-6.518056,7.156995,-4.792694,0.591374,6.845387,8.931690,3.383973,-1.470245,2.322567,1.826673,-4.494736,-1.348620,-5.972130,3.383328,-5.609786,8.231638,4.130569,-0.336536,8.541242,-1.778789,3.774087,-5.492289,2.552091,8.860395,4.925779,-7.896915,0.104527,5.873019,2.356835,-0.435253,3.007417,9.975187,-9.717955,-3.636957,3.787925,-2.385403,-1.586628,6.605321,9.620704,-8.326132,6.037007,9.882116,9.694497,-5.836291,2.149923,4.326011,7.033763,4.806346,-0.278062,5.439142,-0.148552,-6.152468,-7.295647,-5.906991,-8.625228,6.535436,4.546571,2.847433,3.917106,-0.643345,-0.304846,2.650242,-5.967244,1.670680,-2.493896,-6.576608,8.693123,-2.324471,3.800574,3.507025,5.922540,5.882857,1.202366,-7.276485,4.368000,-5.682251,-4.192182,1.969876,-9.180671,5.721701,9.723974,-6.778416,-5.902153,4.097491,0.355790,-5.956219,8.818473,-1.310962,-3.830746,2.294455,6.751178,8.969871,-7.424507,-0.661978,8.032792,6.859927,5.724045,8.262537,-6.957384,0.683474,-2.802863,0.992045,-4.574481,-1.543770,-1.386025,-0.745810,0.792608,6.597838,-6.323969,2.143123], dtype = "float32")#candidate|4942|(1800,)|const|float32
call_4941 = relay.TupleGetItem(func_3277_call(relay.reshape(const_4942.astype('float32'), [1800,])), 0)
call_4943 = relay.TupleGetItem(func_3280_call(relay.reshape(const_4942.astype('float32'), [1800,])), 0)
func_4417_call = mod.get_global_var('func_4417')
func_4419_call = mutated_mod.get_global_var('func_4419')
call_4951 = relay.TupleGetItem(func_4417_call(), 0)
call_4952 = relay.TupleGetItem(func_4419_call(), 0)
uop_4957 = relay.log(const_4942.astype('float32')) # shape=(1800,)
output = relay.Tuple([call_4913,call_4936,const_4937,const_4938,call_4941,call_4951,uop_4957,])
output2 = relay.Tuple([call_4914,call_4939,const_4937,const_4938,call_4943,call_4952,uop_4957,])
func_4975 = relay.Function([], output)
mod['func_4975'] = func_4975
mod = relay.transform.InferType()(mod)
mutated_mod['func_4975'] = func_4975
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4975_call = mutated_mod.get_global_var('func_4975')
call_4976 = func_4975_call()
output = call_4976
func_4977 = relay.Function([], output)
mutated_mod['func_4977'] = func_4977
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5001 = relay.var("var_5001", dtype = "int8", shape = (10, 16, 14))#candidate|5001|(10, 16, 14)|var|int8
const_5002 = relay.const([[[-2,9,4,10,2,8,-10,-10,-1,5,-3,3,-5,-8],[9,-4,-2,-1,-6,2,2,5,7,7,8,-7,1,9],[-1,8,9,-1,4,7,-2,-1,-1,8,-2,7,-9,2],[-6,-5,-8,-7,4,7,-9,-9,5,7,4,3,-2,-7],[5,-2,-2,8,-1,-8,2,-4,-2,-5,-3,-1,10,5],[4,-7,-5,10,8,-7,2,4,1,-6,-1,9,5,-10],[-6,9,1,1,-6,3,-8,3,-8,-5,-4,-3,3,-10],[-2,5,7,9,1,6,-10,9,9,-9,10,-7,8,1],[10,4,-2,-3,3,1,-2,9,-5,-2,-4,-1,-7,-9],[8,10,3,-1,1,6,-6,9,-3,9,-9,-2,2,-7],[4,5,8,-2,-9,8,9,-5,-2,-2,-3,2,-4,6],[2,6,-9,-9,-8,10,6,-7,-1,-9,-5,7,-3,-9],[-7,-10,8,6,9,-6,8,4,3,6,-2,-6,-5,-4],[-4,-5,7,2,3,5,-5,9,-9,7,4,8,10,2],[7,-4,-8,3,-6,5,3,1,2,-1,-5,-5,-4,5],[-6,-9,-3,-5,-4,10,-5,7,-4,-8,-10,-9,7,-2]],[[-6,-5,3,7,-9,-1,-5,2,4,8,8,6,4,3],[-9,4,-3,10,-3,6,-1,4,5,-6,5,-1,-1,-3],[2,8,-2,-9,-3,4,5,-9,-4,4,9,2,-5,1],[8,1,-1,-3,3,-9,-10,2,3,-6,6,-8,-10,-1],[1,-9,7,1,10,10,-6,8,3,3,-3,3,-9,-6],[-1,-3,8,-3,3,2,10,7,-2,3,-6,3,3,1],[-9,10,4,4,9,-9,-3,-6,-3,-10,7,-4,8,-4],[-3,5,-2,2,10,7,3,-2,7,9,10,-6,-1,-1],[6,-1,2,1,-3,-9,-8,4,4,-8,-5,-2,-6,-3],[-9,-7,-2,5,6,-10,-2,-6,9,4,6,-6,-10,-6],[-5,5,-5,-10,-3,-5,-5,-2,3,-7,-7,-8,2,-4],[10,-9,10,10,8,-4,-7,4,3,-6,3,1,-4,-1],[-10,-9,6,7,3,3,7,4,6,7,3,8,-9,-6],[-7,-1,3,-9,-9,-6,4,-6,7,-9,10,-4,9,1],[-2,-3,3,8,-4,-6,5,-5,-1,2,-3,-3,-4,9],[1,-3,6,-4,8,6,10,2,6,-4,2,-7,6,-9]],[[-8,-6,-8,-4,3,-3,1,-2,3,-8,-3,6,-2,-2],[2,9,-10,9,-5,2,4,-10,7,7,8,-9,-2,8],[-7,-2,-10,8,-7,-9,3,-10,-9,1,-2,5,8,1],[-10,-3,7,-5,8,10,4,8,1,2,10,-5,4,4],[-4,1,4,-1,1,2,3,5,-1,3,-4,-1,10,9],[-6,5,8,5,2,-4,6,-2,-8,-6,-1,3,6,10],[-10,2,-1,-9,5,-8,-2,1,10,6,-10,9,1,-7],[-5,-3,-7,2,-1,5,-5,-4,7,6,7,-7,4,10],[-9,-2,-5,1,9,-8,-4,-8,-7,-9,-8,-4,-7,-3],[1,4,-2,4,1,-9,-9,-3,-1,-6,-3,-3,-8,-7],[-9,5,4,10,8,-3,-7,1,9,-1,-5,9,1,-1],[10,-5,-8,1,-2,10,-4,8,3,-9,3,5,6,8],[-7,-6,6,-7,4,10,8,-3,-1,6,-10,10,-7,-1],[-8,-10,-7,1,-10,2,6,-9,10,-1,-4,-8,-3,10],[-1,1,-2,-4,1,-6,4,4,-10,8,-4,-4,5,-5],[-8,6,-7,-1,-2,-8,10,4,4,6,1,-5,-5,5]],[[8,-10,-4,10,-5,-8,5,10,4,1,-1,1,5,9],[2,1,4,10,8,-9,10,2,7,-3,7,6,-5,4],[-2,9,8,6,9,-10,-6,10,8,1,7,6,-10,-3],[-9,2,-9,7,-10,9,-1,-6,10,2,9,3,7,-9],[-4,-9,-9,-6,3,8,-6,-3,-6,3,5,5,-1,2],[-10,5,5,-6,-9,7,-6,5,9,-1,5,4,1,7],[-8,2,-2,-1,-4,-5,9,-5,4,9,6,-2,-5,-2],[-4,10,8,1,8,-8,8,5,3,2,-8,3,-10,4],[1,-2,4,10,-2,3,4,-2,5,10,7,-7,5,-8],[7,8,7,5,-2,5,-6,5,10,-2,5,4,6,-7],[-5,5,7,2,-7,-7,-9,-2,3,-7,-5,9,-1,-3],[8,1,5,5,-1,-5,-3,-7,9,9,9,8,-5,5],[1,6,-2,-3,2,8,-7,4,-9,4,2,-1,-1,4],[-5,-3,-9,-8,-5,7,-10,-3,-9,-9,-7,6,10,10],[-4,9,-3,8,1,-2,-6,6,-5,-7,5,3,-10,-1],[6,-2,-4,-2,3,-1,-5,-3,-4,-8,-7,5,10,-3]],[[-7,-3,-6,7,-7,-8,-10,-7,4,5,10,-8,10,-8],[-9,3,5,-1,10,-4,-9,-7,3,-4,-7,-4,-4,-3],[-4,-5,10,-1,3,-8,1,9,-4,7,-4,4,-9,8],[1,-10,-10,7,4,-7,-1,-9,6,-2,-8,-8,1,-4],[10,-6,1,5,-2,3,2,2,-6,-8,10,-3,-1,1],[-4,-4,4,3,-7,-9,1,-4,4,8,6,-2,-8,-5],[7,2,-10,6,-8,1,9,6,-2,5,-6,-5,1,-1],[4,9,-3,-5,-9,8,9,-7,-7,-10,-3,6,8,-6],[-9,-7,4,-6,-8,3,-1,-9,8,9,-8,6,-4,3],[-4,-2,-7,-7,8,1,4,5,4,-6,-7,10,5,-7],[10,4,10,-8,6,9,1,-10,-3,-2,9,9,-4,3],[7,-10,-3,-3,-2,-1,8,-4,9,4,1,9,4,7],[-7,9,10,4,-6,6,8,6,-7,-5,-4,-8,-6,4],[5,10,-2,7,-8,7,8,10,3,3,6,-8,-8,-7],[5,4,5,-1,3,-2,9,-3,-5,4,-8,-1,5,-9],[8,-7,9,1,7,4,-2,-9,6,-9,-4,2,-7,10]],[[-2,5,5,3,5,-2,7,-2,-2,1,4,10,2,2],[5,-3,1,9,2,-3,-5,1,3,-3,4,-5,-4,8],[9,7,-4,-2,-6,4,-2,-7,4,-1,9,1,9,-4],[1,1,4,5,-6,-2,10,2,-2,1,5,2,7,9],[-7,1,7,-9,7,8,1,-6,5,-2,-7,5,-4,-7],[-10,7,1,7,-9,10,10,-9,-7,1,5,1,6,-5],[4,-1,10,4,-7,1,7,10,-7,-6,6,-8,-1,-4],[-6,-9,-2,-7,-10,4,-1,-1,-6,4,2,8,9,8],[5,-9,2,3,8,-6,2,4,-7,-10,8,6,5,-7],[-2,-6,-8,1,-5,-3,6,-3,-1,2,4,1,-7,3],[3,-8,-8,3,3,5,10,-3,1,-5,-3,-10,-8,-8],[-10,-8,-2,9,3,5,7,6,-1,-4,-4,-5,-3,-5],[-6,5,-5,-10,-1,6,-10,-2,2,4,8,6,-6,-3],[5,-9,1,6,1,3,-4,8,2,3,-9,-9,-7,-2],[-5,-2,-1,1,9,9,5,1,-3,-5,8,-10,7,7],[6,6,4,-2,-1,8,4,1,9,1,1,-6,-4,-10]],[[-8,6,6,-5,-2,-7,4,6,-5,9,8,-6,6,10],[2,2,6,-2,-3,-3,6,9,-7,7,-1,6,6,8],[7,3,-7,9,-6,6,-10,4,10,5,8,1,-10,-9],[-2,10,9,9,10,-1,-9,-4,7,4,-1,7,2,-1],[7,-9,-8,-6,-2,-5,3,9,-3,10,2,9,4,5],[4,-8,-5,-7,6,2,-10,-2,-2,-4,7,7,1,-3],[10,1,-3,6,-6,4,8,-9,2,-1,4,1,1,-1],[4,7,3,9,-7,-5,-7,2,-5,-4,-4,-3,-10,8],[-4,6,-4,-1,1,2,-4,8,7,5,-10,-1,3,3],[-10,-7,-1,-10,3,9,-1,1,-9,7,8,-8,-2,-5],[4,-10,-10,-9,-7,-3,2,8,4,-1,8,-10,1,-7],[8,-9,9,-7,6,9,6,-6,5,-4,-3,3,-4,-8],[-3,-1,6,-1,9,5,3,9,-5,8,10,10,-6,5],[-7,6,-7,-9,6,9,8,-3,7,8,8,3,-7,-1],[5,4,8,-10,-8,-9,10,2,-3,9,-6,3,3,3],[-8,-3,-2,-5,-9,-9,-5,-1,-8,1,9,-1,-6,-10]],[[2,-1,2,3,10,-6,2,-6,-4,10,-2,-3,-2,8],[1,-9,3,-3,-3,-9,-6,-4,2,5,-10,10,-7,-5],[-9,9,2,5,7,2,-6,-4,8,3,9,10,3,1],[2,1,10,-3,7,8,6,3,-3,-6,-7,2,7,5],[-1,1,6,-7,1,9,-6,1,6,-7,1,1,4,-3],[-7,-10,7,-4,-5,-9,8,4,2,-9,-7,1,-2,5],[-6,-7,-5,1,-10,6,3,2,1,9,-9,-6,-5,-4],[7,-2,-6,-8,-8,6,4,-5,-5,-2,1,2,8,-6],[-2,1,-2,6,4,10,3,-3,-7,-5,3,9,-7,-6],[8,9,4,1,4,3,-9,1,-10,10,3,8,-3,2],[9,-6,-9,6,6,9,-5,8,-7,8,3,3,-3,2],[1,5,-1,6,5,-5,-9,1,-9,10,9,-1,7,-10],[6,-8,5,6,4,8,-4,-2,-7,9,-3,-10,-8,-7],[-9,-9,9,4,1,-4,2,8,-4,8,-5,-7,-5,-3],[10,-10,-6,-5,-6,-1,-9,-4,6,4,4,1,-7,10],[-5,-7,-10,5,-5,3,9,10,10,8,8,5,-4,-1]],[[-3,4,-1,-5,7,-9,10,6,5,-7,10,10,-7,-9],[-1,5,1,-4,-10,5,10,-2,7,2,-1,-8,4,10],[5,6,10,-10,1,-5,-4,8,8,4,7,-7,5,-3],[5,4,-3,-6,2,-5,-1,-3,3,-10,-1,-4,10,-9],[1,8,5,6,2,10,7,6,4,-6,9,7,10,-2],[-7,9,-5,3,-7,-8,10,-5,-1,-8,8,-3,-10,1],[-4,-2,4,-10,-8,-8,4,6,-2,-5,-1,2,-7,-6],[-7,-8,-10,3,-4,4,8,7,-8,5,3,4,3,3],[3,8,8,3,6,3,-1,-10,-9,-10,-1,6,7,9],[-10,-9,-4,2,-2,-2,-3,6,2,-4,4,-7,-8,-10],[6,4,-2,8,-1,7,-5,2,4,3,-6,6,-10,-5],[-9,-5,4,1,-4,1,-9,-1,-7,-4,2,6,4,-8],[-8,-3,7,2,-7,7,-3,-9,7,7,-4,5,-6,-4],[7,-3,4,-2,3,-2,8,-4,-8,-1,4,8,-9,-5],[-8,-5,2,9,-5,-9,-4,1,-2,3,9,-4,-4,-2],[-7,-9,-8,9,-4,8,-9,10,-9,7,7,3,6,8]],[[2,-4,-6,6,-5,6,3,-1,-2,-6,-5,4,3,-7],[-7,-8,4,1,-2,6,4,-9,7,-1,-4,-3,10,-10],[-7,1,-1,-6,-10,4,6,1,3,10,1,-2,8,3],[-3,8,-9,5,-7,-2,-7,-9,8,6,-10,-5,6,8],[-3,10,4,-7,9,3,-4,-3,3,6,9,-7,6,4],[1,6,2,1,7,1,1,-10,-8,6,4,-5,3,4],[3,-5,-9,-10,8,9,9,-9,-5,-3,-3,-4,-10,2],[10,5,5,10,1,-6,-9,-4,6,-9,6,4,1,-8],[7,-6,-7,2,3,5,2,-4,-6,-3,6,5,-4,-1],[7,7,9,-4,-6,-8,10,4,-5,-7,9,-5,-2,6],[9,10,-7,3,2,-4,-4,7,4,-8,-2,-1,-4,7],[-9,9,-10,-8,-8,5,-6,10,9,-6,1,-3,-8,5],[3,8,-4,-9,-10,1,8,9,5,6,7,9,7,-10],[-8,-8,8,10,5,-6,8,4,-5,10,2,-6,-9,6],[8,-10,2,5,6,-2,7,-5,-7,-1,-1,2,8,-10],[-2,-2,4,-7,1,-6,7,7,6,-9,2,5,2,7]]], dtype = "int8")#candidate|5002|(10, 16, 14)|const|int8
bop_5003 = relay.equal(var_5001.astype('bool'), relay.reshape(const_5002.astype('bool'), relay.shape_of(var_5001))) # shape=(10, 16, 14)
output = relay.Tuple([bop_5003,])
output2 = relay.Tuple([bop_5003,])
func_5006 = relay.Function([var_5001,], output)
mod['func_5006'] = func_5006
mod = relay.transform.InferType()(mod)
mutated_mod['func_5006'] = func_5006
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5007 = relay.var("var_5007", dtype = "int8", shape = (10, 16, 14))#candidate|5007|(10, 16, 14)|var|int8
func_5006_call = mutated_mod.get_global_var('func_5006')
call_5008 = func_5006_call(var_5007)
output = call_5008
func_5009 = relay.Function([var_5007], output)
mutated_mod['func_5009'] = func_5009
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4656_call = mod.get_global_var('func_4656')
func_4658_call = mutated_mod.get_global_var('func_4658')
call_5027 = relay.TupleGetItem(func_4656_call(), 3)
call_5028 = relay.TupleGetItem(func_4658_call(), 3)
func_3803_call = mod.get_global_var('func_3803')
func_3807_call = mutated_mod.get_global_var('func_3807')
var_5032 = relay.var("var_5032", dtype = "uint32", shape = (36,))#candidate|5032|(36,)|var|uint32
var_5033 = relay.var("var_5033", dtype = "uint8", shape = (360,))#candidate|5033|(360,)|var|uint8
call_5031 = relay.TupleGetItem(func_3803_call(relay.reshape(var_5032.astype('uint32'), [9, 4]), relay.reshape(var_5033.astype('uint8'), [360,]), ), 4)
call_5034 = relay.TupleGetItem(func_3807_call(relay.reshape(var_5032.astype('uint32'), [9, 4]), relay.reshape(var_5033.astype('uint8'), [360,]), ), 4)
func_3468_call = mod.get_global_var('func_3468')
func_3470_call = mutated_mod.get_global_var('func_3470')
call_5035 = relay.TupleGetItem(func_3468_call(relay.reshape(var_5033.astype('uint8'), [360,])), 0)
call_5036 = relay.TupleGetItem(func_3470_call(relay.reshape(var_5033.astype('uint8'), [360,])), 0)
func_48_call = mod.get_global_var('func_48')
func_51_call = mutated_mod.get_global_var('func_51')
call_5039 = func_48_call(relay.reshape(var_5033.astype('uint8'), [8, 9, 5]), relay.reshape(var_5033.astype('uint8'), [8, 9, 5]), )
call_5040 = func_48_call(relay.reshape(var_5033.astype('uint8'), [8, 9, 5]), relay.reshape(var_5033.astype('uint8'), [8, 9, 5]), )
func_3727_call = mod.get_global_var('func_3727')
func_3730_call = mutated_mod.get_global_var('func_3730')
const_5044 = relay.const([4,5,-1,5,-7,2,-6,9,-6,-1,1,-7,-5,-6,-2,-3,9,10,-5,8,4,7,5,-1,3,1,-4,-2,-3,-8,-3,5,10,-2,10,7,1,5,-2,-6,8,8,-8,-1,-3,7,-1,-8,10,6,-3,6,-8,10,7,4,-5,-7,7,3,-6,-7,-5,-8,6,-4,8,3,-1,8,10,3,-6,-8,8,-4,2,-1,-6,-1,-10,1,5,6,10,-5,-5,6,1,-4,-7,-3,-10,7,1,8,5,1,-7,7,10,8,2,-7,-1,-2,-1,-7,-9,-7,-2,-4,-8,6,-4,3,-7,-7,8,-2,5,5,-10,7,5,-2,10,-4,2,4,-3,10,-1,-8,3,7,-3,5,5,5,-7,6,2,8,10,-2,2,-2,2,-1,8,-2,10,-8,-9,-4,-9,-6,2,7,-7,-4,4,9,4,9,-7,6,-10,2,-5,-8,1,-7,7,5,-6,2,-5,-4,-10,-2,5,6,-10,7,-7,2,-8,-10,-5,-2,6,-9,-4,1,-7,2,-2,-9,7,2,2,3,-2,-6,10,8,-1,-8,-1,10,-3,-1,-1,1,-8,-5,6,-10,-10,7,-6,3,-1,2,-9,9,-5,1,3,-7,5,-1,7,-1,-10,7,3,-5,3,8,2,-6,-8,-4,-8,-1,-2,-4,-4,7,3,-9,-6,-3,-2,10,10,2,4,-8,8,7,-2,10,-6,-7,3,-9,2,7,-5,-9,-5,-3,-6,3,-2,3,-1,-9,2,-10,-6,5,1,2,-2,-10,-2,8,-6,10,-1,-6,-8,3,-3,-8,-2,-6,6,10,9,-5,-3,-8,5,-10,3,-1,1,4,1,-4,4,7,-8,-9,4,-9,-8,7,7,10,-3,2,8,-7,-7,-1,9,-2,-2,-7,7,-5,-2,-8,2,-10,10,-9,9,7,-5,8,4,-4,-3,5,6,4,-6,1,-2,-3,5,3,7,2,6,-7,-8,-1,3,-10,7,9,8,-1,10,-5,7,-1,-5,8,10,6,-8,10,2,-10,-6,4,10,-6,-3,-7,8,7,-10,-9,-10,-10,-1,-10,2,5,9,-2,7,1,-9,-10,-8,-10,-2,9,-3,10,1,8,8,-9,-5,7,-1,1,9,-6,-10,5,7,-4,3,6,-4,7,-10,-10,-9,6,-7,9,10,-3,4,-2,2,-1,2,8,4,9,-2,-8,7,-3,10,-2,-9,-1,-3,-4,-1,-9,-6,10,-2,3,-9,7,6,-2,-1,-9,3,3,-4,-10,-6,1,-8,10,-9,6,-6,4,2,-10,-4,3,-8,-3,3,-9,-4,1,-1,-2,5,-8,2,5,-2,6,2,1,-6,-2,8,10,-4,-4,3,5,5,-1,9,-10,8,5,7,-2,2,4,7,-2,6,-8,-1,8,-8,4,2,-6,-1,-2,9,-3,-8,-1,-2,8,8,-10,-8,-6,5,6,3,10,7,4,6,6,-4,-10,9,-8,-5,7,-5,2,4,-9,-3,3,-1,-3,4,-10,8,7,-10,-4,3,8,8,-10,-9,-1,6,-2,3,-1,-7,-5,2,2,-9,5,-10,10,5,10,6,8,-5,8,-6,-5,3,7,4,-5,8,4,7,7,1,9,9,1,10,4,-2,10,-10,9,8,6,-8,-5,-4,8,-10,-5,4,4,7,1,-8,-5,8,2,-9,-4,-9,-3,-1,-10,-8,1,5,6,-5,3,8,10,3,-3,-10,-1,-4,-4,5,-6,-1,5,-2,7,-7,-1,-8,10,2,-4,-8,3,-9,-9,-9,7,1,5,2,3,10,-4,-4,8,6,10,6,8,-10,-10,-1,10,-1,-7,5,-2,-3,-3,-1,-5,-4,-4,10,-6,8,-9,4,-3,2,-8,10,-4,-8,-10,-10,7,3,6,3,4,-7,2,-2,-8,5,-3,-8,5,-6,3,3,-1,1,-10,7,-8,4,-10,7,3,6,4,-3,-7,8,-4,-2,-7,-2,7,-8,-8,7,1,5,-5,-7,4,9,-8,1,-10,-9,-4,-2,10,8,-4,-7,-8,-6,5,1,3,9,1,-5,3,-5,-5,-9,-9,-5,5,-6,4,5,5,-7,10,-4,-5,1,5,4,5,4,-4,6,3,-2,6,-6,-5,-3,-10,7,6,-3,6,-10,5,-6,5,8,-8,4,-8,-6,3,10,-6,9,5,-2,3,3,-6,-7,-4,10,5,-7,2,8,3,-9,6,-1,-1,-3,7,-2,-8,-7,-8,-4,8,-8,5,8,-7,-6,-4,-6,-4,-9,9,-5,4,7,6,7,-5,6,2,-5,-10,1,-10,1,8,-4,-5,1,-10,1,4,-1,2,6,-1,4,5,-7,4,10,8,-8,4,2,10,9,-3,2,10,-1,10,-4,3,-10,9,-9,-6,2,6,2,-9,-9,-3,-10,-8,6,8,-5,-1,-8,-6,7,-1,10,5,3,-6,8,5,4,1,-3,8,-10,4,-9,-4,-2,7,4,7,6,2,-3,-4,-2,7,-5,-5,5,-4,2,1,5,-8,-8,6,6,-1,-5,-8,-1,-4,9,3,9,-8,-7,4,5,-9,-5,-10,-5,2,6,-6,-4,-3,-10,-8,-6,-9,-5,5,5,4,10,-2,3,-4,-5,-5,-3,-5,7,-1,2,-7,4,-7,-9,10,-7,4,-8,10,-1,4,5,4,-3,-6,6,1,9,-9,-3,8,1,9], dtype = "int64")#candidate|5044|(1008,)|const|int64
call_5043 = relay.TupleGetItem(func_3727_call(relay.reshape(const_5044.astype('int64'), [1008,])), 2)
call_5045 = relay.TupleGetItem(func_3730_call(relay.reshape(const_5044.astype('int64'), [1008,])), 2)
output = relay.Tuple([call_5027,call_5031,var_5032,var_5033,call_5035,call_5039,call_5043,const_5044,])
output2 = relay.Tuple([call_5028,call_5034,var_5032,var_5033,call_5036,call_5040,call_5045,const_5044,])
func_5048 = relay.Function([var_5032,var_5033,], output)
mod['func_5048'] = func_5048
mod = relay.transform.InferType()(mod)
var_5049 = relay.var("var_5049", dtype = "uint32", shape = (36,))#candidate|5049|(36,)|var|uint32
var_5050 = relay.var("var_5050", dtype = "uint8", shape = (360,))#candidate|5050|(360,)|var|uint8
output = func_5048(var_5049,var_5050,)
func_5051 = relay.Function([var_5049,var_5050,], output)
mutated_mod['func_5051'] = func_5051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4504_call = mod.get_global_var('func_4504')
func_4505_call = mutated_mod.get_global_var('func_4505')
call_5122 = relay.TupleGetItem(func_4504_call(), 0)
call_5123 = relay.TupleGetItem(func_4505_call(), 0)
output = relay.Tuple([call_5122,])
output2 = relay.Tuple([call_5123,])
func_5166 = relay.Function([], output)
mod['func_5166'] = func_5166
mod = relay.transform.InferType()(mod)
mutated_mod['func_5166'] = func_5166
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5166_call = mutated_mod.get_global_var('func_5166')
call_5167 = func_5166_call()
output = call_5167
func_5168 = relay.Function([], output)
mutated_mod['func_5168'] = func_5168
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4064_call = mod.get_global_var('func_4064')
func_4066_call = mutated_mod.get_global_var('func_4066')
call_5181 = func_4064_call()
call_5182 = func_4064_call()
func_4679_call = mod.get_global_var('func_4679')
func_4681_call = mutated_mod.get_global_var('func_4681')
call_5187 = func_4679_call()
call_5188 = func_4679_call()
func_4337_call = mod.get_global_var('func_4337')
func_4338_call = mutated_mod.get_global_var('func_4338')
call_5192 = func_4337_call()
call_5193 = func_4337_call()
func_4975_call = mod.get_global_var('func_4975')
func_4977_call = mutated_mod.get_global_var('func_4977')
call_5203 = relay.TupleGetItem(func_4975_call(), 4)
call_5204 = relay.TupleGetItem(func_4977_call(), 4)
output = relay.Tuple([call_5181,call_5187,call_5192,call_5203,])
output2 = relay.Tuple([call_5182,call_5188,call_5193,call_5204,])
func_5217 = relay.Function([], output)
mod['func_5217'] = func_5217
mod = relay.transform.InferType()(mod)
mutated_mod['func_5217'] = func_5217
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5217_call = mutated_mod.get_global_var('func_5217')
call_5218 = func_5217_call()
output = call_5218
func_5219 = relay.Function([], output)
mutated_mod['func_5219'] = func_5219
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3900_call = mod.get_global_var('func_3900')
func_3902_call = mutated_mod.get_global_var('func_3902')
call_5223 = func_3900_call()
call_5224 = func_3900_call()
func_5217_call = mod.get_global_var('func_5217')
func_5219_call = mutated_mod.get_global_var('func_5219')
call_5226 = relay.TupleGetItem(func_5217_call(), 1)
call_5227 = relay.TupleGetItem(func_5219_call(), 1)
uop_5238 = relay.cosh(call_5223.astype('float32')) # shape=(88,)
uop_5240 = relay.cosh(call_5224.astype('float32')) # shape=(88,)
func_1551_call = mod.get_global_var('func_1551')
func_1555_call = mutated_mod.get_global_var('func_1555')
var_5243 = relay.var("var_5243", dtype = "float32", shape = (1320,))#candidate|5243|(1320,)|var|float32
call_5242 = relay.TupleGetItem(func_1551_call(relay.reshape(call_5223.astype('float32'), [11, 8, 1]), relay.reshape(call_5226.astype('float32'), [48,]), relay.reshape(var_5243.astype('float32'), [11, 8, 15]), ), 0)
call_5244 = relay.TupleGetItem(func_1555_call(relay.reshape(call_5223.astype('float32'), [11, 8, 1]), relay.reshape(call_5226.astype('float32'), [48,]), relay.reshape(var_5243.astype('float32'), [11, 8, 15]), ), 0)
output = relay.Tuple([call_5226,uop_5238,call_5242,var_5243,])
output2 = relay.Tuple([call_5227,uop_5240,call_5244,var_5243,])
func_5249 = relay.Function([var_5243,], output)
mod['func_5249'] = func_5249
mod = relay.transform.InferType()(mod)
mutated_mod['func_5249'] = func_5249
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5250 = relay.var("var_5250", dtype = "float32", shape = (1320,))#candidate|5250|(1320,)|var|float32
func_5249_call = mutated_mod.get_global_var('func_5249')
call_5251 = func_5249_call(var_5250)
output = call_5251
func_5252 = relay.Function([var_5250], output)
mutated_mod['func_5252'] = func_5252
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4656_call = mod.get_global_var('func_4656')
func_4658_call = mutated_mod.get_global_var('func_4658')
call_5304 = relay.TupleGetItem(func_4656_call(), 1)
call_5305 = relay.TupleGetItem(func_4658_call(), 1)
output = relay.Tuple([call_5304,])
output2 = relay.Tuple([call_5305,])
func_5327 = relay.Function([], output)
mod['func_5327'] = func_5327
mod = relay.transform.InferType()(mod)
output = func_5327()
func_5328 = relay.Function([], output)
mutated_mod['func_5328'] = func_5328
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5338 = relay.var("var_5338", dtype = "float32", shape = (10, 11, 11))#candidate|5338|(10, 11, 11)|var|float32
uop_5339 = relay.asinh(var_5338.astype('float32')) # shape=(10, 11, 11)
output = uop_5339
output2 = uop_5339
func_5347 = relay.Function([var_5338,], output)
mod['func_5347'] = func_5347
mod = relay.transform.InferType()(mod)
mutated_mod['func_5347'] = func_5347
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5348 = relay.var("var_5348", dtype = "float32", shape = (10, 11, 11))#candidate|5348|(10, 11, 11)|var|float32
func_5347_call = mutated_mod.get_global_var('func_5347')
call_5349 = func_5347_call(var_5348)
output = call_5349
func_5350 = relay.Function([var_5348], output)
mutated_mod['func_5350'] = func_5350
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3900_call = mod.get_global_var('func_3900')
func_3902_call = mutated_mod.get_global_var('func_3902')
call_5394 = func_3900_call()
call_5395 = func_3900_call()
output = relay.Tuple([call_5394,])
output2 = relay.Tuple([call_5395,])
func_5405 = relay.Function([], output)
mod['func_5405'] = func_5405
mod = relay.transform.InferType()(mod)
output = func_5405()
func_5406 = relay.Function([], output)
mutated_mod['func_5406'] = func_5406
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3086_call = mod.get_global_var('func_3086')
func_3088_call = mutated_mod.get_global_var('func_3088')
call_5438 = func_3086_call()
call_5439 = func_3086_call()
func_4600_call = mod.get_global_var('func_4600')
func_4602_call = mutated_mod.get_global_var('func_4602')
call_5470 = relay.TupleGetItem(func_4600_call(), 0)
call_5471 = relay.TupleGetItem(func_4602_call(), 0)
func_1695_call = mod.get_global_var('func_1695')
func_1698_call = mutated_mod.get_global_var('func_1698')
var_5483 = relay.var("var_5483", dtype = "float32", shape = (360,))#candidate|5483|(360,)|var|float32
call_5482 = relay.TupleGetItem(func_1695_call(relay.reshape(var_5483.astype('float32'), [3, 8, 15])), 0)
call_5484 = relay.TupleGetItem(func_1698_call(relay.reshape(var_5483.astype('float32'), [3, 8, 15])), 0)
func_315_call = mod.get_global_var('func_315')
func_318_call = mutated_mod.get_global_var('func_318')
const_5536 = relay.const([-4,9,-8,-2,-9,2,5,-8,8,8,5,5,10,7,2,7,-4,9,-5,5,-9,-8,7,-7,9,-4,-3,6,-9,-9,9,-6,2,7,8,3,-2,-10,-9,5,4,10,8,-3,9,9,9,10,-3,-9,10,-6,5,1,-5,-1,6,8,-9,5,4,5,9,5,4,-1,-5,7,5,5,-6,8,-8,-10,-1,5,8,9,5,9,7,6,-7,4,-2,-1,-5,-2,9,-8,-4,-4,-2,10,-6,-9,-9,6,7,-7,9,7,8,5,-1,6,9,-10,4,10,-10,-2,1,4,-8,-9,10,-10,-7,-4,1,8,1,-1,-9,-4,10,-8,5,-1,5,-1,5,-3,-8,3,-8,-1,8,-3,-3,-7,-2,3,7,2,3,-8,5,-3,8,-6,6,7,-9,2,-7,4,4,-9,-3,-6,2,-7,3,2,7,-10,-3,-8,7,-6,-8,6,-10,-6,5,3,6,-4,1,2,4,-8,1,1,5,4,10,9,4,4,9,-7,-7,-4,9,-4,-10,-1,-10,2,-2,1,8,-1,-7,-4,-2,9,-3,8,1,-6,6,-5,-2,10,-3,7,10,6,4,-4,-2,-8,6,-9,-9,9,4,10,8,3,2,7,-9,9,-4,4,6,2,-9,10,-8,1,-10,2,-10,3,5,4,-2,9,-8,3,6,-5,-8,3,1,-10,5,-2,4,-9,-5,5,7,-5,-9,-6,-4,8,-5,10,4,-8,-1,-8,-6,-6,-9,10,6,-1,-4,8,10,-1,-8,3,-2,-3,-1,-10,7,10,8,3,5,-9,-5,-8,4,1,2,-5,5,7,-10,-5,-2,2,6,6,-1,2,-3,-2,2,10,-9,8,3,-2,-2,-10,3,-6,1,-10,-8,-10,-3,-5,-8,-10,-10,-1,-6,7,-1,4,-1,10,-6,-6,-3,3,-9,-2,5,-3,2,9,-8,-6,3,10,-4,-8,3,3,10,-3,-6,7,-8,-4,6,-8,10,-3,6,1,-6,-10,-4,-6,-1,-3,-5,-8,-1,-3,6,1,-7,-10,-10,5,-1,6,10,-10,-2,-9,5,1,-10,5,8,-5,-4,8,-8,-9,-7,-4,8,9,-9,8,8,4,-6,5,6,-8,6,4,8,3,-10,-2,1,10,-2,5,-8,7,7,7,-5,-6,1,-3,7,4,-2,-6,10,2,4,3,8,5,5,1,-5,8,-10,4,-6,-3,-5,-1,6,-8,-5,-2,2,-6,-9,6,5,1,7,-1,4,-3,-6,7,-10,-4,-7,-5,6,-7,-2,9,8,-5,7,-8,-1,-1,5,-2,-4,-1,-5,-1,2,3,10,-1,4,-1,-1,2,-2,-2,-5,-4,-1,10,-1,-6,-9,-7,5,-7,-4,-9,-9,-9,-8,-10,5,9,-8,3,-10,-4,-10,-5,-9,-1,3,9,3,-5,-1,1,6,4,-1,-5,6,7,10,-8,-8,-3,-10,-3,2,-3,2,1,-6,-3,-1,-7,10,2,9,1,10,-6,-10,-5,-8,5,4,7,-2,8,-9,-10,-10,10,-4,-7,-9,-7,4,1,-2,-10,-4,-10,-7,10,5,6,-2,-7,9,1,6,7,1,2,6,-2,8,9,-2,3,8,-5,8,-7,5,-7,5,3,-3,9,-6,4,-3,-1,-9,-2,-4,7,8,-10,-1,6,-2,2,-3,-9,-2,-2,3,9,8,10,8,-5,-3,-1,-6,2,5,5,5,-6,-4,-1,4,10,-9,5,10,-6,-8,9,4,-2,-7,9,-1,-6,-7,-4,7,4,-6,3,-10,-1,6,2,3,-10,-1,2,-8,-6,7,6,4,10,-9,-6,-4,9,8,1,-7,2,2,9,2,4,5,-1,-10,-9,-4,1,-3,-9,4,-4,10,9,10,1,3,-1,-5,-9,3,-7,-6,-8,-9,-2,4,-3,2,6,2,-1,-1,7,-7,3,6,-1,-8,-3,-4,1,-3,-2,-8,4,-4,-7,9,4,-2,-8,-9,-3,7,-6,-3,9,-1,10,7,-3,10,9,6,9,-10,-6,-5,-6,5,3,8,5,-3,3,8,3,6,9,-7,9,5,-8,4,-3,7,10,-10,-7,7,-2,-3,-3,1,4,10,7,1,-8,-9,-6,8,2,-9,10,-8,-3,1,2,9,10,-1,7,-2,5,-7,-10,6,-5,-10,3,1,-10,1,6,10,-1,5,-1,2,-8,8,6,-1,-1,7,-10,-1,1,-2,3,-3,1,2,-2,-7,-5,-10,10,-1,-2,-8,-7,3,-10,2,-7,8,2,-9,4,9,-4,8,10,-7,-10,-7,4,4,6,-7,-3,-10,-3,-1,6,6,-9,-6,-6,3,7,-10,1,5,9,10,-9,9,9,8,-2,-9,-9,-3,-7,-10,8,5,3,9,-4,-8,-9,-4,8,8,-8,-4,10,-1,-4,1,-10,-3,8,9,-1,4,3,-10,2,3,-5,-7,2,3,-7,-10,-1,-2,-5,1,-5,7,3,-10,-5,4,-10,6,7,10,4,-2,2,-5,4,-4,1,8,-7,8,1,-4,3,5,-9,-5,-4,7,-5,-3,-8,-10,6,-2,10,7,-2,-4,-10,6,-1,-10,9,1,10,5,-8,-7,-4,-9,9,-8,6,-5,-9,6,3,7,5,-8,-1,-5,7,-3,-10,-7,-8,-7,5,3,-4,-5,4,9,-1,6,-9,1,4,-6,8,-1,-8], dtype = "int64")#candidate|5536|(1008,)|const|int64
call_5535 = relay.TupleGetItem(func_315_call(relay.reshape(const_5536.astype('int64'), [9, 8, 14]), relay.reshape(var_5483.astype('uint8'), [360,]), ), 2)
call_5537 = relay.TupleGetItem(func_318_call(relay.reshape(const_5536.astype('int64'), [9, 8, 14]), relay.reshape(var_5483.astype('uint8'), [360,]), ), 2)
var_5542 = relay.var("var_5542", dtype = "float32", shape = (3, 8, 15))#candidate|5542|(3, 8, 15)|var|float32
bop_5543 = relay.add(call_5482.astype('int16'), relay.reshape(var_5542.astype('int16'), relay.shape_of(call_5482))) # shape=(3, 8, 15)
bop_5546 = relay.add(call_5484.astype('int16'), relay.reshape(var_5542.astype('int16'), relay.shape_of(call_5484))) # shape=(3, 8, 15)
output = relay.Tuple([call_5438,call_5470,var_5483,call_5535,const_5536,bop_5543,])
output2 = relay.Tuple([call_5439,call_5471,var_5483,call_5537,const_5536,bop_5546,])
func_5550 = relay.Function([var_5483,var_5542,], output)
mod['func_5550'] = func_5550
mod = relay.transform.InferType()(mod)
mutated_mod['func_5550'] = func_5550
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5550_call = mutated_mod.get_global_var('func_5550')
var_5552 = relay.var("var_5552", dtype = "float32", shape = (360,))#candidate|5552|(360,)|var|float32
var_5553 = relay.var("var_5553", dtype = "float32", shape = (3, 8, 15))#candidate|5553|(3, 8, 15)|var|float32
call_5551 = func_5550_call(var_5552,var_5553,)
output = call_5551
func_5554 = relay.Function([var_5552,var_5553,], output)
mutated_mod['func_5554'] = func_5554
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4434_call = mod.get_global_var('func_4434')
func_4435_call = mutated_mod.get_global_var('func_4435')
call_5604 = func_4434_call()
call_5605 = func_4434_call()
func_4141_call = mod.get_global_var('func_4141')
func_4143_call = mutated_mod.get_global_var('func_4143')
var_5624 = relay.var("var_5624", dtype = "int8", shape = (1050,))#candidate|5624|(1050,)|var|int8
call_5623 = relay.TupleGetItem(func_4141_call(relay.reshape(var_5624.astype('int8'), [14, 15, 5])), 0)
call_5625 = relay.TupleGetItem(func_4143_call(relay.reshape(var_5624.astype('int8'), [14, 15, 5])), 0)
uop_5628 = relay.log2(call_5623.astype('float64')) # shape=(14, 15, 5)
uop_5630 = relay.log2(call_5625.astype('float64')) # shape=(14, 15, 5)
bop_5631 = relay.logical_and(uop_5628.astype('bool'), relay.reshape(call_5623.astype('bool'), relay.shape_of(uop_5628))) # shape=(14, 15, 5)
bop_5634 = relay.logical_and(uop_5630.astype('bool'), relay.reshape(call_5625.astype('bool'), relay.shape_of(uop_5630))) # shape=(14, 15, 5)
func_4307_call = mod.get_global_var('func_4307')
func_4310_call = mutated_mod.get_global_var('func_4310')
var_5641 = relay.var("var_5641", dtype = "float64", shape = (840,))#candidate|5641|(840,)|var|float64
const_5642 = relay.const([9.661884,-9.940617,4.030655,4.944139,4.474803,6.609656,0.466375,3.848550,-8.419666,-9.686989,-5.372578,7.178692,-2.783309,-9.133720,8.295383,0.801954,-9.081705,9.642718,4.105801,1.496995,-4.802437,-7.096984,-4.142515,3.859310,-9.098552,-5.746657,9.293210,0.766041,-1.931528,4.510451,-8.747257,-3.890233,4.715648,-7.652329,2.717656,9.349180,1.223512,0.387477,-0.290858,-2.745637,-6.677162,8.021275,-5.328059,9.840393,6.187569,4.215251,9.845398,-4.811387,1.272234,-5.536682,-1.769599,-5.592889,5.788876,-9.409478,0.666182,-0.307310,2.536761,3.901587,0.289079,0.736857,4.750362,-5.249946,-2.642913,0.063635,1.519754,-7.600596,-2.540068,3.173799,8.430333,4.077094,-7.992277,-6.292413,8.954805,-8.686338,4.166650,6.093799,-4.729103,3.509026,7.779615,-8.913613,-9.796396,-1.391551,-9.634076,6.140075,4.168396,-0.859863,-0.332519,-2.785475,-6.346383,-0.329788,-8.227096,-4.422331,7.817936,1.456803,2.072750,-2.246947,6.441196,-3.430306,-0.119126,0.814283,-3.327066,-3.808218,-5.433960,-7.123515,1.694204,-8.514519,5.510568,-5.764419,4.525897,4.628329,0.074015,-5.759505,-7.036772,-8.092559,-3.686647,1.031842,7.836938,-4.673012,-3.944490,-6.182724,5.994230,0.759728,-0.225070,-1.177978,8.223465,-2.270269,8.609293,2.511726,8.302534,-0.924305,9.794403,-1.015873,3.608786,0.028593,7.303577,1.076428,-4.612979,1.140465,-9.034773,-3.542494,2.083788,8.836931,-9.809631,3.203623,-2.167722,0.814862,7.277672,9.003062,-0.403387,-6.667678,-7.287288,8.394069,-9.148635,9.549803,-4.667934,-8.486638,-7.983216,-4.622669,8.408215,-0.016658,9.950626,9.652973,8.349855,-5.433482,6.678258,-1.212579,-8.216786,3.696551,-9.053401,-3.255343,-4.625935,4.110915,-2.932437,6.954357,4.227044,3.766813,-8.475806,5.378172,9.925993,1.497732,-0.304763,1.192511,3.897297,0.502325,2.874797,-2.254072,-3.389155,7.827088,9.946151,-7.398412,-6.999878,-7.167591,1.057028,8.767332,5.598711,8.784010,-6.842658,-9.563802,6.100010,3.662501,3.635724,1.076424,0.065846,-2.486869,4.145504,3.913456,9.950744,-7.456362,5.268050,3.412017,4.750391,-5.707195,3.755474,2.880636,-3.546037,-3.110789,2.605621,-2.574368,-5.400908,5.063188,1.082895,0.100924,-8.037629,6.438442,3.860938,-9.006784,-7.476707,-3.382182,-5.868302,-8.725190,6.120268,-5.671905,-0.272492,7.003722,-9.535596,8.926226,-1.623900,-6.721788,-9.343537,-2.229760,-8.199380,-6.280820,-9.814062,2.875040,2.476543,0.108164,-3.209461,9.647364,-4.016167,7.312148,8.032711,6.062961,0.715044,2.507777,9.264470,-9.619996,-9.332420,-2.701120,4.025940,2.298803,-0.539385,7.120116,6.922840,7.436873,-9.053683,-1.836884,1.267771,8.368627,1.915266,0.590492,-2.078259,-3.216174,-3.985338,3.518245,-1.281590,-8.995873,-2.915972,0.172728,-1.841457,4.257565,4.405837,6.112231,2.297775,-7.062206,0.885340,-9.720867,3.565919,-2.570764,0.452032,5.535190,9.932672,-7.687108,-4.729409,6.902839,4.822191,1.229060,-9.559069,2.123384,7.458421,-6.525165,6.518980,-4.438792,4.573265,0.244290,7.871872,5.196438,-7.299698,-6.106863,2.082153,-5.458195,-1.842170,-0.411299,-3.859789,3.604296,6.815157,-4.542682,-2.801839,3.320226,3.115804,-2.862820,9.359015,6.925770,-2.066534,-0.759100,5.276271,-8.068380,-0.302651,-7.826898,-7.410822,-6.567622,9.494705,1.650657,-7.197905,-1.843921,1.939686,-1.227266,-0.842783,-4.142558,8.625167,-5.075724,8.001035,-3.647912,9.799736,-8.185911,-6.275600,0.579066,8.087438,9.906045,1.120547,-7.852788,1.374175,-6.077010,-2.510257,-0.167617,7.780174,9.318278,6.137485,6.587007,-6.966569,-6.116320,-4.908963,0.877444,-3.488763,0.548605,-5.386257,-7.722583,-3.352486,3.779925,-8.256303,-3.637066,-0.101286,-3.773687,-2.276910,4.730139,-0.955819,3.856923,3.318829,-5.963093,-3.183370,-1.245501,2.496273,-6.741366,1.764312,0.479812,0.765356,9.046601,8.956139,7.643723,3.707782,-9.109403,-2.542341,9.985554,-6.924230,-6.099836,7.305371,3.529434,9.103680,3.667623,1.891243,-5.495263,-3.866824,6.873030,-3.955723,9.959210,3.706604,3.142997,-2.949988,9.702266,-1.825067,5.126779,-9.173809,0.422750,-1.991327,-3.870192,6.896518,-7.218126,0.075412,5.669193,-0.495866,2.811964,-5.717146,2.786835,7.423810,-9.558754,-9.865643,-9.526624,-1.015361,3.875028,-8.791829,9.694220,-1.356729,1.423223,2.276907,6.236946,-4.298890,1.686871,0.125675,5.524308,9.186431,0.934069,0.592194,7.548764,8.826148,-7.594711,-9.845798,4.324011,6.767722,-7.091848,6.396928,-7.445877,9.204609,-0.124340,-7.225741,9.978818,7.228952,-2.082367,-8.573943,0.495362,-3.254541,2.862284,5.194494,7.377424,-0.103232,0.742326,-5.874121,2.869336,9.340110,-1.458073,3.983751,7.081167,-4.336379,9.203422,6.432932,-1.267978,-8.358769,0.731041,-1.985296,-2.921247,-4.883578,-4.703270,9.099346,-5.975743,-6.102064,-3.618698,8.279066,-9.377296,7.622481,-9.003050,-6.615023,-9.559705,6.571078,-1.242991,9.540846,-2.505319,-7.305828,-4.220868,-7.597109,-4.647881,8.948298,-7.949083,9.131092,1.455953,-1.867627,6.812700,-9.188021,3.359299,1.093111,-4.120321,-9.170923,1.419956,0.475678,-8.972162,-3.373808,-0.599355,1.971092,-8.021847,-8.276681,-4.741737,-9.126881,8.758372,4.088633,-7.114492,8.405620,5.198662,7.885714,-5.876373,-2.869140,-6.810315,-7.104368,1.515361,1.311319,-6.897755,0.925967,-3.175460,-8.912010,-2.340543,-1.740387,2.734235,6.120413,8.867290,8.866464,-6.977994,-2.146487,-6.716933,5.975012,-5.619422,-7.408127,-8.737550,3.934833,8.085191,4.623576,-8.625743,-3.807806,6.060535,-7.508312,-0.506144,-7.728686,-7.121454,2.082811,9.228773,-9.507642,6.627254,-8.200251,-4.500315,-2.290363,-2.135250,0.606922,2.646517,-3.881279,-5.061176,9.821343,-6.142870,1.961330,-5.261182,6.788136,8.558933,6.962495,-8.438820,1.611277,-7.968638,-0.967105,0.050076,2.053940,9.796230,5.329341,-7.560214,-4.569624,-0.678181,9.240065,-9.173740,2.224834,-8.256289,-7.922523,-2.300365,0.842790,9.615535,9.585357,-6.302111,5.420112,-1.317983,5.189932,1.067340,3.734328,8.950218,-0.407488,-4.864842,5.467707,6.927250,9.174909,2.702073,-9.475735,1.145928,5.612798,-7.155127,4.604550,5.248969,0.771961,2.973994,9.439754,-9.957265,-0.838788,2.867434,7.816372,-3.635847,-5.121221,-2.473152,-2.873184,5.315071,9.339569,2.099763,-3.335538,5.282503,8.912513,8.848874,2.131697,8.165946,-6.598938,3.688930,2.014977,-1.211996,-0.055571,-2.695013,-0.201860,-7.582375,2.364545,9.320431,7.880388,2.312330,8.609862,0.371830,-1.507820,-3.790567,9.613903,3.178199,3.296535,-1.891133,-3.154072,0.858387,-1.241348,-2.204228,8.598838,-6.139947,-2.719220,5.466051,-2.076779,-2.534320,9.136085,6.720864,-3.896796,6.396147,-5.285812,9.990012,-8.759170,-9.531557,0.510582,-3.177510,-1.763035,8.640689,2.465821,-5.908149,4.810703,-9.036933,5.694500,8.701709,-2.521515,-6.598122,-4.915185,3.270069,-1.731456,-4.051550,-1.574226,-1.990579,7.830370,6.306173,-7.361827,-1.238713,-6.194970,6.118060,-8.547184,-0.284582,1.868357,8.732070,-0.487210,2.511067,-5.497752,-0.638069,-7.349420,2.823635,-6.902419,-4.969971,-2.761887,-0.002824,-2.944959,3.559285,-0.844586,2.986004,-4.535354,-3.192520,-4.977781,8.313521,9.572557,7.974348,-8.469761,4.361580,-9.627114,6.586063,-6.004177,4.869155,7.287916,0.006075,-8.923961,-0.474582,5.519443,-3.978491,-1.922123,6.835700,0.104948,7.287130,2.381356,2.924080,9.450199,9.169022,-8.828485,-7.265399,4.159219,-8.132450,-2.669247,-6.029916,1.043134,8.964791,-1.238785,6.053057,-8.953594,4.774944,5.689647,7.136908,6.815030,-6.630729,7.950107,-8.380016,-0.527797,2.978940,4.083755,-8.571629,-2.994527,-5.786963,-5.739621,-1.966215,-3.219547,0.327298,-2.478869,-3.672894,9.285151,-8.258208,6.692738,2.678179,5.515077,8.349108,-6.802608,6.962111,8.485720,9.140812,6.660372,-2.580573,3.408273,5.638611,-3.180570,4.759458,-3.272748,0.377103,-5.738266,5.864618,9.748523,-0.555311,-6.149805,-0.520517,0.533221,-4.781643,8.393534,7.165017,-0.103777,8.377868,-3.594207,-0.708717,-4.806615,8.642962,-5.461869,-1.703951,6.465895,1.570526,-3.857165,8.050626,5.248532,-1.853845,3.381395,7.267333,-2.455598,-8.894463,0.122514,7.699502,-9.320136,5.143293,1.874706,-3.160489,-4.629457,-6.468607,2.215345,0.955764,1.251690,-8.036787,2.187676,-0.035789,-2.877534,-5.875417,5.196937,2.925604,-2.565264,-0.600072,-8.200935,-9.495166,-6.799231,4.182599,4.345021,-7.110193,-6.933298,6.944491,-0.749344,2.360564,-3.861941,1.155808,2.368622,-6.201201,1.605648,8.494086,9.414816,-9.042373,-5.031086,-8.282284,-5.255631,0.041150,0.629007,-8.811954,-3.454707,-3.933887,-3.417122,0.658661,-9.452962,2.746335,-2.673404,8.290110,9.288342,-3.077169,7.588011,8.189022,6.471255,-8.582553,8.001145,7.814395,-2.883950,-6.212103,5.342523,-2.319273,0.229365,5.612213,-4.622222,-2.870049,-4.924247,6.873214,6.447436,-3.027116,7.055335,8.907341,9.946766,5.788777,-0.676208,-9.940311,6.042337,7.877054,9.151501,-7.162194,5.492960,2.435092,2.404857,6.400007,1.966315,-1.798368,-1.781848,6.271419,-7.319649,1.133562,-1.121755,-7.134692,-3.218444,7.162014,-7.122038,6.571466,-9.737947,9.852028,9.674581,-9.285841,-4.938606,-7.692156,-3.828768,0.379865,-4.365756,4.611657,-7.727519,-9.531248,6.598645,-9.624863,0.700658,9.257809,-1.087660,-5.895958,6.618549,-0.848359,2.529178,-6.993583,-4.512357,-0.672563,-7.164859,-5.352715,3.338015,2.643857,-0.888943,-3.508353,5.583059,3.066035,-2.091151,7.450143,-9.335528,-6.123228,-4.724147,9.320411,-8.152144,3.951766,5.921207,1.567809,-0.900462,3.836948,5.089598,6.857490,7.975927,-3.606421,-5.740306,4.224890,-5.464872,-2.429273,-8.483972,9.162767,8.674993,7.522187,-2.357237,5.827191,4.431750,9.816221,-4.098942,6.415234,9.944668,0.724573,0.743323,-0.542413,-2.520025,8.005128,-1.938724,6.144906,4.952477,-4.169938,-1.137633,7.082069,-0.163682,-6.272247,8.693816,-8.834123,5.875361,-2.520214,-4.712344,-6.455993,0.126917,8.101318,3.391283,5.075215,3.791027,-1.256366,2.722808,3.493807,3.017604,-6.568822,9.900126,4.279609,-0.133367,-6.805388,4.402285,-9.183378,-7.651958,-6.269788,-8.230776,-4.232376,-4.390596,9.082644,-0.284114,3.892521,-6.872123,-7.913580,1.751267,2.730591,9.731253,-1.455650,-1.637977,8.067267,2.454859,-4.444312,8.607382,5.808897,-0.806559,7.541016,-4.174990,-0.292165,-8.282494,-1.292517,-9.460367,-3.195512,7.358026,-1.407417,7.610073,-3.429913,-2.119636,-8.331907,-2.522484,0.412050,3.859519,5.511425,0.053244,-9.290732,5.816351,8.164289,-0.415773,6.360231,7.098794,-3.718799,-5.641575,0.858909,0.826826,-2.110203,1.124683,-8.997076,3.633814,-3.870128,2.175355,-1.621822,-4.458417,9.585834,0.746092,-2.558114,-4.945654,0.068442,-0.196615,5.441549,4.150394,6.919895,0.913476,6.490839,6.666495,-1.928864,-6.011071,6.310243,-3.809341,-5.674430,-3.331358,-1.421409,1.727858,5.990953,-3.404170,0.521130,-0.737592,8.322546,6.735141,-6.016732,-8.813081,2.867628,-5.683348,5.930565,7.980969,-9.181037,5.236291,6.783968,2.258938,-1.398490,5.226712,6.517873,-8.519548,-7.509512,4.673739,-9.704252,5.454977,-9.747899,8.536163,-4.486693,2.194367,-3.399778,-7.156824,2.659385,-7.471371,2.511839,-2.892305,7.339704,8.698384,-9.539884,5.209810,8.714541,-6.876312,-3.368526,2.773997,5.768834,5.250543,8.514003,6.890579,9.443765,-0.860280,0.592896,2.624550,0.408353,-8.989377,3.570278,6.238201,-4.455245,5.650291,5.929477,-3.846919,1.576408,-3.855325,7.501164,-4.749916,3.580514,5.308047,1.922380,0.500995,-9.591902,-1.084515,1.257377,-0.102521,8.353651,-9.483204,-2.957853,6.275073,4.845407,3.765960,8.568978,7.749202,-5.843585,-2.209893,-8.457846,3.006642,0.223193,-4.128259,0.674740,8.961661,-8.091695,5.407842,-3.463796,0.469829,-3.324718,-1.765284,-8.734325,-5.679868,-4.439490,-6.687927,-6.138154,3.793181,5.856989,2.430129,-0.935798,6.626745,-9.136086,-4.309731,-4.108348,-8.095115,-5.983650,-8.666167,7.414929,5.424834,6.669110,-2.965908,7.164949,-9.073359,6.315386,1.499818,-8.313636,8.485689,6.741817,9.291406,7.905380,-7.530182,-7.424826,-7.822707,1.924711,5.553068,1.420835,1.266121,-3.103263,3.021333,2.257943,5.216025,1.190718,-7.611159,-5.855785,-8.077863,-1.570062,6.437440,-5.326021,-5.648319,-7.864244,-4.767066,6.551815,-2.248274,7.429826,2.580567,2.169322,-2.961469,0.973826,3.687913,-2.866447,2.007117,6.753629,9.204635,-3.232789,7.427287,-3.083240,-8.382601,5.831211,2.246320,-2.413299,5.418086,2.312134,6.241335,3.800568,6.791924,-2.656183,-1.413315,5.306520,6.017002,1.202389,-2.437823,9.246500,5.902324,-7.864061,8.492327,5.283133,-4.158524,9.260803,-0.460206,-5.795229,-1.350342,-0.274109,-0.014361,5.900354,-5.468504,5.667426,-4.125728,9.145962,4.764931,-4.243220,7.960532,-5.853000,-2.191073,9.968511,-8.098193,-7.276331,-1.619448,5.566713,7.159012,9.319978,0.057312,-8.073959,7.960522,9.032022,5.916611,4.545632,1.609117,-7.042898,1.797368,-4.508031,-7.452033,1.454679,-3.880140,3.805248,8.079673,9.998454,4.103703,-0.476098,1.028639,-3.215765,7.452878,3.856960,5.187356,-4.207148,8.677825,-7.023025,-8.675498,1.260200], dtype = "float32")#candidate|5642|(1320,)|const|float32
call_5640 = relay.TupleGetItem(func_4307_call(relay.reshape(var_5641.astype('float64'), [10, 7, 12]), relay.reshape(const_5642.astype('float32'), [1320,]), ), 3)
call_5643 = relay.TupleGetItem(func_4310_call(relay.reshape(var_5641.astype('float64'), [10, 7, 12]), relay.reshape(const_5642.astype('float32'), [1320,]), ), 3)
output = relay.Tuple([call_5604,var_5624,bop_5631,call_5640,var_5641,const_5642,])
output2 = relay.Tuple([call_5605,var_5624,bop_5634,call_5643,var_5641,const_5642,])
func_5644 = relay.Function([var_5624,var_5641,], output)
mod['func_5644'] = func_5644
mod = relay.transform.InferType()(mod)
var_5645 = relay.var("var_5645", dtype = "int8", shape = (1050,))#candidate|5645|(1050,)|var|int8
var_5646 = relay.var("var_5646", dtype = "float64", shape = (840,))#candidate|5646|(840,)|var|float64
output = func_5644(var_5645,var_5646,)
func_5647 = relay.Function([var_5645,var_5646,], output)
mutated_mod['func_5647'] = func_5647
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5327_call = mod.get_global_var('func_5327')
func_5328_call = mutated_mod.get_global_var('func_5328')
call_5698 = relay.TupleGetItem(func_5327_call(), 0)
call_5699 = relay.TupleGetItem(func_5328_call(), 0)
output = call_5698
output2 = call_5699
func_5712 = relay.Function([], output)
mod['func_5712'] = func_5712
mod = relay.transform.InferType()(mod)
output = func_5712()
func_5713 = relay.Function([], output)
mutated_mod['func_5713'] = func_5713
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5712_call = mod.get_global_var('func_5712')
func_5713_call = mutated_mod.get_global_var('func_5713')
call_5788 = func_5712_call()
call_5789 = func_5712_call()
output = relay.Tuple([call_5788,])
output2 = relay.Tuple([call_5789,])
func_5797 = relay.Function([], output)
mod['func_5797'] = func_5797
mod = relay.transform.InferType()(mod)
mutated_mod['func_5797'] = func_5797
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5797_call = mutated_mod.get_global_var('func_5797')
call_5798 = func_5797_call()
output = call_5798
func_5799 = relay.Function([], output)
mutated_mod['func_5799'] = func_5799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3086_call = mod.get_global_var('func_3086')
func_3088_call = mutated_mod.get_global_var('func_3088')
call_5826 = func_3086_call()
call_5827 = func_3086_call()
func_3727_call = mod.get_global_var('func_3727')
func_3730_call = mutated_mod.get_global_var('func_3730')
const_5838 = relay.const([[-8,4,3,8,-10,-6,-10,3,-3,8,-2,-7,-7,3,4,1,6,-7,-1,-7,-5,5,-5,9,7,-2,-4,-3,-3,-4,8,2,-9,6,-6,-4,5,6,10,-10,5,-6,-10,9,5,-4,-9,10,-7,-9,-9,-2,4,6,5,1,-9,8,5,-5,-9,5,7,-5,2,-7,-8,-5,9,8,-9,-4,7,-10,-9,7,5,-7,9,-9,7,10,-5,10,8,9,-9,8,7,2,-4,-6,-1,3,7,9,-6,-1,-5,6,-1,3,-10,-7,10,2,6,-2,1,7,7,-3,-6,-7,-7,6,-10,7,-3,-6,4,6,-6,-9,6,-6,-3,-10,-5,-3,10,8,2,9,-10,8,-2,5,7,-6,1,7,-3,6,2,8,-9,-1,4,6,-4,9,1,4,10,-2,-4,-7,-6,4,-10,-1,3,-10,3,-10,-2,-2,4,2,8,5,3,-10,4,-8,-10,-5,-2,-7,-3,-1,-9,8,1,-7,4,-2,5,5,-7,6,-1,-8,8,-9,6,7,-4,-9,5,-7,-10,-5,2,4,2,-7,-1,-7,4,-1,5,-6,-3,6,-2,8,-2,9,-4,3,3,10,-7,-4,-2,-1,-2,-7,-5,2,6,1,2,1,-3,1,-4,-1,-9,-2,-1,-7,-4,-8,7,-6,2,10,7,2,-6,7,6,-3,-4,-6,-9,-10,7,-10,9,-7,3,-7,-9,-10,1,-6,-5,10,3,-6,8,5,-3,-4,-3,5,10,-6,-8,3,4,-4,8,10,-1,4,-2,9,-4,-10,-3,4,-7,-2,9,-4,-5,-3,4,2,10,7,5,-7,-6,-7,-2,-2,-3,5,10,-4,10,9,3,-1,9,2,3,-4,-8,10,4,-10,8,9,-5,-6,2,-10,7,7,9,-2,1,-3,-7,-9,-7,-9,6,-5,-1,-5,4,-10,-7,9,-8,-10,6,-8,-4,-5,-7,6,-10,-4,1,8,7,10,-4,-3,9,1,-5,-10,7,-2,10,10,10,-5,-7,10,-10,9,-1,-8,6,-6,10,3,-1,-4,4,3,9,-7,-10,10,9,-3,4,1,-1,-2,-4,8,10,8,-5,-10,-8,9,-5,-7,-8,5,2,-3,-4,3,10,5,3,-7,-8,-1,5,-6,8,-5,4,10,7,-8,-8,10,2,9,-3,-2,-3,-7,4,9,7,-10,-5,6,4,6,6,-10,-3,4,7,-9,10,1,1,9,5,8,2,5,-7,5,-6,2,6,-7,3,-5,4,-8,-5,1,-6,1,3,3,-4,-5,-3,-10,-4,-10,-5,-9,-1,1,4,6,-3,10,-3,-5,-9,-7,-9,1,-6,-8,8,-1,4,4,6,-10,9,2,-10,8,9,-4,-4,2,8,2,-7,6,5,-9,-2,-7,-8,-4,7,-2,7,7,-2,3,8,7,-8,-9,3,-3,7,-7,-8,5,-2,4,-2,-3,9,-4,3,4,-4,-4,1,3,7,4,10,-3,-4,-4,-7,3,-4,6,-8,-9,-5,1,-10,3,2,-3,7,-5,-2,-9,7,-6,9,-8,-4,1,-2,5,-7,-9,8,-3,7,-7,-6,-7,-10,-4,9,-8,-1,-2,3,4,6,1,5,-8,-2,1,-3,1,-5,2,10,-7,-1,5,4,4,-5,3,-8,2,8,-8,-6,-2,-7,-5,4,-10,-8,-7,-4,-4,7,-9,-10,5,-6,9,-3,3,3,8,7,-2,-3,-9,1,8,-3,-5,9,1,2,-9,10,6,9,3,-2,-3,4,-3,-7,5,7,-3,9,-2,-5,-7,-3,10,-8,8,-10,6,2,10,-8,9,4,-2,9,3,4,-1,-6,-9,-6,6,-7,-9,-2,8,4,7,-3,-1,4,-8,-6,7,2,6,-2,-5,5,-8,2,8,5,-4,-6,-1,-8,1,8,4,6,9,4,-5,-7,-7,8,5,-1,-4,-3,-7,3,-3,-6,2,-8,-9,4,-3,-6,-10,-4,-10,3,1,-10,-6,-6,6,7,3,-1,-10,-8,-6,3,-1,-2,-1,-4,2,1,-8,7,9,2,-1,-6,-9,-6,-7,10,8,-8,6,3,7,-8,-9,9,-10,9,5,6,10,-9,-3,-6,3,-1,-7,9,-8,-10,-1,-4,3,4,-1,-4,-4,-9,-3,9,-8,-5,5,-2,10,-10,3,3,1,6,10,4,-2,-1,5,-1,10,-9,-1,-6,5,3,1,-5,-5,-2,-10,9,9,-7,9,9,-5,2,1,6,-3,-5,-4,5,-1,4,-5,-3,2,9,7,9,-8,7,-1,5,-3,8,-1,9,-2,-1,-6,3,4,9,2,5,-1,9,-7,-5,9,10,-6,1,-1,-7,9,-7,2,6,6,-3,-6,-10,-1,5,-8,-9,1,-4,-4,-1,1,-6,4,6,-5,-6,5,8,-10,-7,8,-3,-8,3,-8,-5,-10,1,-4,3,-7,-4,4,-10,5,-5,5,-3,-6,5,9,-2,-10,3,9,-7,5,-1,-3,7,10,2,9,6,-10,-7,10,9,2,6,-10,-8,-4,7,-9,7,4,5,-3,-9,2,1,7,2,4,1,-10,-10,-7,2,-9,7,8,-7,3,-3,3,-6,8,10,-5,7,-7,10,3,-1,-2,-8,-10,-3,-2,-7,2,5,-3,-1,3,6,4,5,-9,-2,7,-3,-4,2,-3,-10,4,7,10,8,6,3,-9,7,-9]], dtype = "int64")#candidate|5838|(1, 1008)|const|int64
call_5837 = relay.TupleGetItem(func_3727_call(relay.reshape(const_5838.astype('int64'), [1008,])), 3)
call_5839 = relay.TupleGetItem(func_3730_call(relay.reshape(const_5838.astype('int64'), [1008,])), 3)
var_5847 = relay.var("var_5847", dtype = "float32", shape = (48,))#candidate|5847|(48,)|var|float32
bop_5848 = relay.right_shift(call_5826.astype('int16'), relay.reshape(var_5847.astype('int16'), relay.shape_of(call_5826))) # shape=(48,)
bop_5851 = relay.right_shift(call_5827.astype('int16'), relay.reshape(var_5847.astype('int16'), relay.shape_of(call_5827))) # shape=(48,)
output = relay.Tuple([call_5837,const_5838,bop_5848,])
output2 = relay.Tuple([call_5839,const_5838,bop_5851,])
func_5859 = relay.Function([var_5847,], output)
mod['func_5859'] = func_5859
mod = relay.transform.InferType()(mod)
var_5860 = relay.var("var_5860", dtype = "float32", shape = (48,))#candidate|5860|(48,)|var|float32
output = func_5859(var_5860)
func_5861 = relay.Function([var_5860], output)
mutated_mod['func_5861'] = func_5861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3940_call = mod.get_global_var('func_3940')
func_3941_call = mutated_mod.get_global_var('func_3941')
call_5878 = relay.TupleGetItem(func_3940_call(), 0)
call_5879 = relay.TupleGetItem(func_3941_call(), 0)
func_4417_call = mod.get_global_var('func_4417')
func_4419_call = mutated_mod.get_global_var('func_4419')
call_5896 = relay.TupleGetItem(func_4417_call(), 0)
call_5897 = relay.TupleGetItem(func_4419_call(), 0)
func_176_call = mod.get_global_var('func_176')
func_179_call = mutated_mod.get_global_var('func_179')
const_5946 = relay.const([9.977168,6.894393,-8.332244,5.098389,4.356776,-1.607726,-7.569354,-3.214284,5.299010,-8.874717,-4.887707,5.420340,2.660491,1.414129,1.810432,6.755540,-1.034588,-8.465749,7.248693,6.632644,0.454743,-7.750180,6.081826,-1.638980,-8.814345,0.529840,4.573715,3.148780,0.015866,0.542347,3.406165,-6.067423,6.202437,3.395867,-7.920245,9.545157,-2.152584,-4.950202,4.663728,9.661357,2.053681,-9.812579,1.688157,8.236504,-6.955627,-7.102396,7.307942,2.721163,4.906442,5.999602,4.056983,3.616308,-2.700302,3.148928,-7.854049,9.764979,-8.320012,7.313095,-1.528573,-9.412768,2.803167,-8.586410,8.767058,-7.333138,-6.158685,1.949899,-6.638934,-9.061165,-7.959519,-4.625737,-5.682732,-2.910429,5.634932,-7.789650,4.494106,-1.718890,5.610625,6.497181,-5.926230,8.209556,-9.206425,-3.988495,6.008906,9.033651,9.823099,5.356113,-4.293169,-4.395626,9.830665,2.304637,1.271387,0.771379,-0.639436,-0.070775,-6.401235,-7.292745,-7.434946,-9.591527,7.550284,3.978267,5.123329,-3.030516,-5.798192,-0.453377,8.600967,-4.379679,8.047892,-9.729267,0.629133,4.956117,-5.405232,-6.041864,-0.645350,6.130392,-1.342000,-3.461259,2.828418,7.533107,7.985091,9.856518,6.952055,-0.738694,1.545893,5.801052,9.610794,0.002647,-6.044714,-8.285796,-7.740478,-6.190017,-5.386920,-7.927111,4.568126,6.478158,9.882694,5.132969,2.265582,-7.018317,-0.098881,4.352180,-5.297338,-3.685946,-8.472436,3.741135,-7.778281,8.469737,1.945483,-3.041572,-2.403241,0.490067,-3.786838,-9.874793,-8.663189,-5.349365,-1.906238,-4.516418,-7.168976,9.085641,0.123629,9.643983,-2.732526,-5.535042,3.006986,-0.443689,0.436387,1.532809,6.448079,8.663945,-4.798618,-8.414457,9.700733,1.572696,3.641215,-7.450338,-2.774870,-3.151770,-5.623237,-1.934255,3.321136,5.358678,-9.777561,-8.848423,8.238252,-2.508919,-0.835678,-2.139793,7.227289,9.382455,3.960596,-8.875217,-3.144944,-1.181484,5.155896,-4.611006,-6.662346,7.257471,-9.960707,-4.450191,2.616460,-4.787111,5.172914,9.320367,-8.158851,-3.099386,-1.669589,8.441440,0.485877,-5.545117,-0.506112,-7.566437,-9.883138,-5.784306,9.910648,-7.681639,5.535289,-3.547719,-1.047884,6.668086,5.277229,-5.878476,-3.284013,-2.181375,8.500690,8.387409,2.063038,-5.959671,0.338579,-7.724328,7.032165,-2.897147,8.382151,-3.296994,-7.190702,3.256765,6.148473,-3.756288,3.590739,8.741080,2.580004,9.069288,-2.123895,-0.470439,-0.992677,7.564499,-9.527829,-2.565543,-2.814992,6.995329,-1.067320,-0.904955,-5.827324,-6.599151,1.286232,-3.091532,-6.719877,6.147108,-1.628530,-9.549729,9.201167,-8.523035,9.623649,8.471127,3.086270,6.190068,7.283964,4.668073,-7.673741,-2.695673,-4.759473,-9.732005,-8.250582,5.757069,3.373030,8.406904,1.912957,-8.710805,-7.983225,2.964280,-6.062623,1.991253,-2.998750,6.803272,-2.370989,2.210550,9.489089,8.465237,2.095310,-2.722576,8.553438,6.374055,5.186539,7.780296,-5.156088,-4.721060,1.828840,-7.246974,-3.514182,-9.076901,9.493379,0.454887,3.761891,-5.294908,-3.047990,-2.715462,-1.772612,-7.444459,9.541458,2.315101,-3.616494,4.930743,-4.932397,-5.334273,7.425173,7.032942,-1.745507,7.921144,-1.510814,-0.089421,-4.151947,-7.008391,5.432215,7.579088,-7.815040,-5.636665,-6.020430,0.567687,8.598422,4.513033,-3.167471,-3.834511,-4.673282,5.342433,7.924216,9.988355,-7.042329,8.032315,-8.157346,-7.971964,8.979714,-2.062134,-9.817473,-9.084312,9.857750,3.033999,2.976658,-7.300351,3.765220,-3.226801,4.116735,8.933164,6.841389,7.915266,0.420380,-1.031147,-0.148854,-3.780082,-4.147804,0.496660,-7.048993,-9.535707,-6.267663,3.121362,-6.224271,-3.950108,0.431451,5.593021,-4.632086,8.925492,-8.374953,6.809578,-2.067949,-8.165832,-9.103597,-9.620751,-3.219271,-7.828985,1.635050,-8.286307,5.859922,5.641166,-7.866833,3.077906,-9.462637,-7.950973,8.415492,1.088655,6.212165,-2.853112,2.251696,3.064681,8.070490,-6.100236,4.813488,-2.885006,-5.815541,-1.688639,-2.445934,3.609366,-8.910926,-8.299141,3.730302,4.538308,0.755792,1.896669,-1.912861,-4.181512,-9.321578,-9.221658,5.010049,7.640615,-6.382041,2.077423,6.020117,1.700478,-7.144959,3.884969,-1.390240,9.040315,1.823248,-6.224008,9.648913,1.209702,-2.915388,1.788052,5.903976,3.181353,-8.563168,-3.010818,4.044399,0.009166,7.747619,-0.723486,2.174268,8.930169,-4.879723,-4.398609,-8.256555,7.360778,2.684435,2.427892,8.592624,1.045805,4.890779,-9.752149,9.233198,-9.134964,-8.664743,-0.175336,-9.388931,-1.862639,-8.412228,-6.215226,7.397639,9.889350,6.442964,4.353613,2.061471,-9.189699,-3.722283,3.263321,2.912848,3.493590,-5.923706,3.939829,5.463200,8.636011,0.614565,5.440980,-7.812109,2.764699,3.194667,-8.044080,4.429550,6.037891,2.733138,-8.007308,-1.084957,2.999754,3.660089,-5.993754,-1.317492,-9.771674,8.634031,-0.732629,-7.644754,3.437310,-7.453998,-9.273085,6.502887,-0.998971,0.937482,7.070876,-1.660651,-4.491959,3.339430,-5.459369,8.372196,4.255363,-5.286507,-9.562427,-7.436374,-0.218955,7.351285,-4.363979,-8.085867,-5.476347,6.057204,-6.398111,-7.734704,-4.473347,9.313178,8.311739,7.746738,0.349638,9.609674,6.778025,-2.562227,-8.871501,-2.865043,-1.250077,8.633772,-9.748957,-7.403534,-1.948540,-7.090754,-1.184135,-4.843206,-6.059851,1.922004,2.579394,5.419568,-3.659993,9.069194,4.014639,1.582158,-0.578865,-3.970880,-0.358707,3.587845,9.602596,1.233506,7.262474,-6.601501,3.042269,-8.572192,-0.691303,4.981352,1.782228,0.227387,1.542895,-6.407964,-5.356683,-2.215871,9.489167,5.434141,8.170188,-5.704273,-0.911737,-8.617268,-6.427160,0.059881,-2.307676,1.103840,3.637328,3.664552,-3.558326,-8.758355,-1.963695,4.862945,9.225942,0.543789,8.281923,4.952830,-2.156871,3.394669,-1.798127,1.693717,-6.128974,-8.160177,1.062255,-9.787300,1.005022,-3.302057,2.076343,7.001002,2.684076,-1.619751,8.458864,-2.194460,4.672284,-1.147483,-7.364953,7.131891,2.422840,-9.080216,8.078092,-5.747779,-1.602545,-8.131479,-8.741211,-5.439034,-9.908776,-9.322839,-8.357440,5.344392,-8.174549,-9.925862,6.757976,2.400005,2.004633,-3.725672,-3.361797,-3.213005,6.208961,8.109312,-1.713304,7.678776,-3.128163,-3.524102,9.565754,-9.753200,-2.983652,-6.405390,-1.433491,-9.136521,-2.058980,-9.568134,5.248070,3.258300,-5.407514,-9.471799,-3.388487,5.166560,7.491531,6.831879,-3.520654,-6.229741,-6.890592,-5.028220,2.239039,1.167573,0.038533,-2.386842,-9.560707,-0.986509,-9.905402,6.151183,-6.916414,4.615065,3.569627,-5.537249,2.322669,-5.544335,-4.357529,-9.232702,7.639924,5.355794,-9.664375,6.472787,6.295925,1.118758,-4.736433,-6.432870,0.972264,-7.194184,-0.566088,-5.375728,9.036506,-2.814149,-7.093307,4.984653,-9.678929,-9.541940,3.627957,4.175282,1.728982,-8.814370,5.066568,2.780383,2.009874,1.429975,-5.616134,0.897053,-4.424692,0.678414,-0.412144,-3.169141,3.041626,3.305325,-1.302980,5.458773,4.543641,9.261459,-9.226096,-2.346597,-8.572341,-8.764102,5.463984,4.325547,2.242837,-9.565007,3.585828,-6.195155,-7.755512,3.812801,-4.585686,-5.333906,7.399083,-7.846536,-5.686361,7.145318,1.109278,-8.679457,2.164132,-5.602318,-0.677356,-1.257733,-4.265365,8.661349,5.562368,3.234348,0.416296,9.603972,-1.875147,9.628252,-2.984463,2.509974,-8.016274,6.518710,5.268690,-9.679136,-7.535549,-1.204971,1.148696,8.649913,-6.139715,-3.295131,0.741774,-7.952901,9.455616,-6.635095,-4.854645,5.506098,1.629093,-1.962043,2.080432,1.281999,-3.650965,-0.655479,8.793567,-5.512013,-6.303020,5.799503,-0.001481,9.286916,3.391889,-9.919434,-8.336712,-1.619383,-5.320666,-1.604879,1.477989,5.123827,8.647469,4.812807,-2.007644,8.118729,-0.541065,-2.830936,-1.777885,6.083481,4.331228,-6.591388,6.502575,-6.064622,0.490995,0.920015,-6.449992,-4.683049,-0.951673,-4.072535,8.123103,-2.177608,-3.018805,3.919990,-1.731735,3.215168,-7.878672,2.347845,-8.624712,5.474866,9.151700,1.615806,2.211830,8.904913,0.778767,-7.923305,4.309373,5.375995,2.037292,9.063192,7.844749,-3.160706,-7.946555,8.264052,1.060188,-8.935308,-6.317383,-6.913551,-4.481560,0.284016,0.098936,-7.021344,-3.940242,-1.845742,-5.747795,-0.555886,-2.188419,0.600720,-6.826162,-9.232529,6.887818,-6.047331,-7.000384,-1.804882,9.455362,-5.553192,0.565816,0.976571,-3.585699,-5.002283,4.063004,-0.542675,0.205568,-9.952079,7.639557,2.494847,-6.031724,-6.235684,-1.627854,2.010279,-4.466388,-5.692954,-4.161073,-2.975630,8.142293,-7.828831,9.468793,9.815410,-9.879798,-7.833718,-1.138511,9.269311,-7.483378,0.310728,-6.283330,-7.079387,-9.775163,-7.898315,-6.366462,-6.742143,1.708842,0.450192,4.586927,8.603833,-8.361461,2.164693,4.553085,2.640819,-5.811298,-6.476790,2.725168,-7.869620,5.214825,0.489621,6.906140,-0.840057,-7.730845,6.427740,-5.327171,1.426008,-6.588103,8.493010,4.979562,3.691708,4.357853,-7.821305,-5.280175,-1.697886,-4.405059,-2.200244,8.944102,-8.339053,-9.522668,-3.206819,0.933565,6.852227,-9.118629,7.878477,-3.032576,-3.916959,5.479680,-8.662818,1.856909,9.725831,-4.184250,1.688514,-9.504531,8.783517,6.117212,3.323140,-7.172131,-0.789506,3.923779,-4.059819,5.290599,1.540861,-7.244004,-9.669781,2.602866,7.585578,3.070288,0.806483,-0.821678,-6.042201,-0.388789,-8.546016,4.726501,-8.410711,1.893154,-5.515264,3.063706,7.150717,0.592524,0.127972,3.165045,8.979955,4.441424,7.675937,4.190285,3.930688,2.100899,-2.996248,-9.964618,-6.717183,-3.979954,-2.254603,-4.354835,4.087784,-1.692582,-0.624137,6.993749,-5.502952,2.325839,-4.097776,-6.886783,-7.356388,-4.939023,-6.753112,5.991647,-1.741974,9.928638,1.237821,-7.828826,1.999332,4.343203,-8.328323,1.155892,7.284875,-8.656999,-9.335647,2.322317,8.804622,2.684595,7.164959,-5.051058,-8.969437,-5.406754,2.949868,-9.963390,4.013502,9.124379,-2.738529,9.704836,6.220637,-5.204035,-0.553713,-0.453145,1.846052,7.154365,4.080150,-2.859729,0.273160,6.395359,9.066837,3.971472,-7.367044,-3.192265,-9.180204,-8.001205,-9.482736,9.767768,0.760665,-9.155490,6.418634,5.805792,8.487770,5.394725,-8.909800,2.566368,-2.415255,6.516850,4.517470,-7.494027,7.205529,7.360828,7.653416,-8.068915,6.332340,9.647466,-9.145480,3.597746,-4.041771,-5.477925,7.837470,-8.364116,-4.605980,-4.651081,7.300781,7.539815,-4.981798,-9.281491,3.174921,-6.002225,5.263250,-6.805856,-2.101240,1.169625,-4.914132,8.535085,-6.322992,8.410913,1.128573,-4.550446,-2.695161,7.227239,7.627401,-6.610525,-6.264986,0.673690,-2.022387,3.901369,3.562508,2.656747,-1.445878,9.109181,-3.678033,-5.996881,6.992198,3.317944,-2.798090,-3.561896,-8.284881,3.434393,7.857505,5.280235,-4.356733,-2.268223,9.126359,3.499067,-1.109532,-2.869875,4.448915,7.293679,-1.500999,4.483369,6.455667,-0.189785,-6.980983,1.505050,-2.753067,-9.528591,4.761766,-0.029272,-3.258032,8.033426,-6.118671,-6.188014,-9.967620,-4.625307,-8.908863,3.080976,4.433602,5.373217,3.891302,4.727581,3.746109,-7.826333,-7.808303,-7.461997,-0.359598,-8.599429,3.134453,7.787078,-3.706584,-2.845095,3.776176,-3.880094,2.825418,-5.219646,-5.617087,-4.206945,2.475517,2.989973,2.712429,1.191306,5.210588,0.987557,-9.905940,-8.067157,-7.474061,5.757591,-5.121485,2.786403,3.494191,2.968615,2.295950,-8.479755,-1.768098,3.638923,1.239409,-5.879087,-7.291206,8.999496,-9.134100,5.231950,4.677068,-0.046059,-7.559142,7.588247,1.414315,-4.615363,7.794789,-6.591093,-5.762258,6.597913,-9.094700,-5.933751,7.479188,8.668572,2.281359,7.199975,3.151580,-5.435244,5.587947,6.219101,-1.747143,9.851567,-9.484253,-1.289109,6.668714,-9.998702,1.084376,-9.598554,4.556117,-3.340722,-5.943243,2.751084,6.239452,-8.045174,5.829641,1.237927,7.386772,7.059193,-1.554001,-5.122039,-9.426723,7.383668,1.797923,-6.494258,1.891372,3.910730,-0.820102,6.020917,-5.515778,-5.945479,-2.288510,-5.888950,6.814155,8.439689,3.634710,6.753388,9.683686,8.578924,7.619965,9.100169,-5.755625,-5.662392,0.827509,-3.975080,2.824544,2.623461,-5.373033,6.230788,-6.619809,-0.356864,-8.651276,3.005649,-0.847891,-9.239632,-7.426310,7.083563,-2.568174,-8.118747,9.015550,-5.149180,9.399396,-7.445832,1.937349,9.988601,4.987685,5.499922,-3.843635,8.343857,7.966248,-5.540386,1.128000,-8.728091,4.842036,2.991856,8.677187,-7.375224,8.144126,-6.871684,-7.409056,-4.554983,6.148965,-1.739880,-3.799821,6.364391,4.335789,-5.740449,9.815317,0.883293,5.940701,8.359045,-9.571234,4.930066,0.073931,-9.687708,-1.633438,0.252759,-0.132744,4.909783,9.109930,-5.868082,-4.084371,6.400008,6.451473,-4.124450,6.680978,9.158492,3.345734,0.599038,-4.246877,2.711146,0.394295,6.759972,-6.678069,-7.373456,6.933765,-7.828635,6.154266,5.176710,-2.893240,9.192207,9.738646,9.187585,-3.070525,1.877094,-9.009178,0.172277,0.639764,0.919540,7.227367,7.187188,-1.987034,-7.064995,9.836728,-0.611539,2.213433,6.530056,-0.102459,-5.423612,-9.468577,-4.613600,-2.775201,-4.532055,-5.988421,4.659301,2.680921,-9.133362,-9.172709,-6.748777,-6.926019,-8.430420,-1.070854,-1.401608,-7.524839,7.129636,1.358542,-7.203488,7.265357,5.219084,-9.812488,3.187195,-9.765210,-5.446114,-5.775792,-5.019761,5.481836,8.773541,1.699607,5.574686,-8.723398,-9.193114,-8.344157,2.476476,5.189381,6.514568,6.637220,1.772496,-4.313465,-0.963881,-1.897578,7.042681,0.164692,-7.302618,-5.356567,1.524380,-3.041877,-6.009127,-3.050837,7.391431,9.164723,7.353314,4.689494,-6.931870,-4.138849,4.604632,1.309451,2.061028,7.165275,6.794920,7.975619,-5.053736,-6.123101,-0.125021,-7.737848,-2.284734,-2.767495,-6.933993,2.078689,1.869723,5.283216,-4.717592,5.728926,-7.381202,0.313562,-4.432618,-3.698148,7.019673,-1.703113,6.437499,9.963414,-5.826907,9.631775,5.319607,7.928625,6.133325,6.327197,0.351775,2.365283,8.504943,-9.019395,3.507436,-4.294487,8.779662,-5.433901,2.385279,7.399600,9.672549,-9.571695,6.719055,5.534328,9.360774,-6.998442,3.041015,-0.500570,8.033299,-1.649552,1.377209,3.478080,0.281895,0.483884,5.417315,-7.809005,8.259807,3.872397,-1.880135,1.275810,-5.784218,8.544569,4.016998,-1.548914,-4.790193,3.319877,-7.949074,-7.163470,-1.690176,-2.023291,-4.550951,-3.346022,-5.972839,-3.932486,-2.600306,-8.250180,-0.644629,-6.663313,8.674854,-5.661681,-1.502860,0.527219,-8.507901,-9.999863,1.538613,-9.142222,-3.170466,5.019356,-7.290634,7.306287,-2.140317,6.326353,1.369610,-2.098831,1.431534,-7.871410,3.361071,-1.758455,-4.249474,-3.324041,7.753319,9.871894,-3.177039,-2.667413,7.608145,1.290907,4.114078,-5.288939,4.957382,1.268637,6.097137,-0.048985,4.772043,-4.692652,3.040974,7.297548,6.927702,-4.778650,-3.214358,-3.847637,9.058893,0.703589,7.593339,6.924123,-1.265747,8.421763,3.666195,-3.189703,-8.319168,-0.063316,-3.492575,-9.382179,-6.936640,8.012384,-8.659993,-0.510717,8.175455,-9.117429,6.821034,7.337408,9.785134,6.819932,-6.854673,2.358186,-6.503488,1.842496,-0.616942,-9.943508,-3.992254,3.227979,-8.906474,-2.225513,1.661480,-3.636630,5.470513,-9.799149,-8.643786,0.961633,-1.973728,2.021511,-3.982042,8.836295,-5.136446,3.902903,5.659290,2.511970,7.101810,9.385764,2.791106,1.066219,-1.924060,6.589534,-9.058876,7.779178,2.165574,6.664481,7.797268,-4.631387,6.739018,2.993005,-9.196914,-3.268031,-0.567329,-1.088688,8.141407,-9.419864,-8.772484,-9.148578,-9.860072,3.500336,-1.331914,5.108466,5.277933,9.993962,-1.189981,6.276804,-3.973127,-3.594224,6.109828,-3.058060,-9.301202,-3.088395,-8.746266,8.412721,3.436049,-0.960517,-2.668961,2.630628,-6.816701,-8.779413,5.229749,6.671573,1.171131,7.231053,4.398299,8.763533,-4.580902,-1.060313,-4.653263,-8.286966,-0.829948,9.799376,-3.315954,-4.763865,3.246550,4.527619,-9.789896,-0.298155,-3.441403,-8.274034,4.866457,-2.687496,-8.302521,-6.060136,-9.582868,-7.507383,-3.337532,2.210460,-3.672570,2.083387,-4.445722,1.566040,0.866193,-9.402890,3.123607,9.749920,-6.630921,-6.537952,-9.926163,8.876698,4.354427,4.145725,3.219389,9.818885,-3.624810,-4.723919,1.869876,2.282623,1.959994,8.603034,0.212596,-9.608019,-0.507151,-5.803564,3.321658,9.056470,9.510553,-2.095435,-8.010817,-3.272516,-6.577263,3.276176,-0.504085,2.015606,8.465928,-6.208248,6.288786,-9.688999,-3.995646,5.530276,1.909464,-5.675653,2.809565,8.480176,-8.348689,7.544568,-5.765015,3.271690,5.280472,9.304870,1.095781,3.996278,-4.013457,-4.745911,-6.962409,-4.266935,-0.526055,-7.766497,-3.584993,5.762240,-6.226866,0.651556,-4.839095,4.888427,9.718784,-0.454149,7.798704,-4.550043,5.137089,-5.318980,-7.852164,2.428068,6.068387,-0.029515,-3.520273,9.000601,-8.494335,8.202647,6.847040,2.425805,5.812818,5.989506,4.219994,-1.306722,-9.822011,1.789262,-8.942404,9.742151,-6.922809,5.182935,-6.200024,1.686946,0.661678,3.209560,-8.252246,-7.561626,-3.422600,-5.686075,0.658904,-8.458213,4.968415,-5.259558,6.590636,6.983394,3.550597,-9.134416,8.923773,9.517752,-1.336501,4.494378,1.571013,3.053196,6.941427,8.562273,-4.826139,-6.102666,7.912028,7.063681,6.913216,1.895300,8.757303,-5.740401,8.414128,-0.267513,-3.616096,-8.420060,8.910177,9.603978,9.015663,5.013494,-7.026099,8.372047,-7.563678,-4.357674,-2.216245,-8.075456,1.138941,-4.014841,-7.794864,5.781993,3.621616,-0.899279,8.712430,6.566323,2.320539,-0.992646,7.096419,5.482168,9.621784,3.595290,4.974097,1.925623,-3.356811,-9.520024,-6.693795,7.684535,1.624328,-9.486304,5.706860,-7.724523,-0.943167,-2.022546,-0.974946,0.060028,-9.436831,8.004833,8.043284,-7.375593,5.005593,-6.548511,-3.422465,6.102552,-4.593065,-2.356762,2.414730,-3.366253,-1.648312,0.688666,-8.967028,-0.494075,4.174260,6.368300,-7.784382,-3.484017,-9.683036,-5.821102,-5.072599,-9.010345,0.408295,-3.210193,7.134669,0.634521,-5.532005,8.065002,3.201218,7.475246,7.237363,0.276353,-9.623479,6.798282,2.646900,-4.294990,5.077404,-2.842581,1.705674,-2.873208,1.144699,-2.773852,-8.018902], dtype = "float32")#candidate|5946|(1800,)|const|float32
call_5945 = relay.TupleGetItem(func_176_call(relay.reshape(const_5946.astype('float32'), [15, 10, 12])), 1)
call_5947 = relay.TupleGetItem(func_179_call(relay.reshape(const_5946.astype('float32'), [15, 10, 12])), 1)
output = relay.Tuple([call_5878,call_5896,call_5945,const_5946,])
output2 = relay.Tuple([call_5879,call_5897,call_5947,const_5946,])
func_5960 = relay.Function([], output)
mod['func_5960'] = func_5960
mod = relay.transform.InferType()(mod)
output = func_5960()
func_5961 = relay.Function([], output)
mutated_mod['func_5961'] = func_5961
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2660_call = mod.get_global_var('func_2660')
func_2662_call = mutated_mod.get_global_var('func_2662')
call_5975 = relay.TupleGetItem(func_2660_call(), 2)
call_5976 = relay.TupleGetItem(func_2662_call(), 2)
var_5977 = relay.var("var_5977", dtype = "bool", shape = (14, 1800))#candidate|5977|(14, 1800)|var|bool
bop_5978 = relay.minimum(call_5975.astype('uint32'), relay.reshape(var_5977.astype('uint32'), relay.shape_of(call_5975))) # shape=(14, 1800)
bop_5981 = relay.minimum(call_5976.astype('uint32'), relay.reshape(var_5977.astype('uint32'), relay.shape_of(call_5976))) # shape=(14, 1800)
output = bop_5978
output2 = bop_5981
func_5984 = relay.Function([var_5977,], output)
mod['func_5984'] = func_5984
mod = relay.transform.InferType()(mod)
mutated_mod['func_5984'] = func_5984
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5985 = relay.var("var_5985", dtype = "bool", shape = (14, 1800))#candidate|5985|(14, 1800)|var|bool
func_5984_call = mutated_mod.get_global_var('func_5984')
call_5986 = func_5984_call(var_5985)
output = call_5986
func_5987 = relay.Function([var_5985], output)
mutated_mod['func_5987'] = func_5987
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6064 = relay.var("var_6064", dtype = "float32", shape = (6, 15, 3))#candidate|6064|(6, 15, 3)|var|float32
uop_6065 = relay.sin(var_6064.astype('float32')) # shape=(6, 15, 3)
func_3221_call = mod.get_global_var('func_3221')
func_3225_call = mutated_mod.get_global_var('func_3225')
var_6080 = relay.var("var_6080", dtype = "float32", shape = (2, 16))#candidate|6080|(2, 16)|var|float32
var_6081 = relay.var("var_6081", dtype = "bool", shape = (25200, 1))#candidate|6081|(25200, 1)|var|bool
call_6079 = relay.TupleGetItem(func_3221_call(relay.reshape(var_6080.astype('float32'), [32,]), relay.reshape(var_6081.astype('bool'), [14, 1800]), relay.reshape(var_6081.astype('bool'), [14, 1800]), ), 0)
call_6082 = relay.TupleGetItem(func_3225_call(relay.reshape(var_6080.astype('float32'), [32,]), relay.reshape(var_6081.astype('bool'), [14, 1800]), relay.reshape(var_6081.astype('bool'), [14, 1800]), ), 0)
func_3390_call = mod.get_global_var('func_3390')
func_3394_call = mutated_mod.get_global_var('func_3394')
const_6091 = relay.const([[-8,-5],[-3,-6],[10,7],[1,-9],[-7,6],[4,-1],[5,-4],[3,2],[-5,6],[5,4],[5,-3],[-9,-3],[-9,-2],[-10,-7],[5,5],[-1,9],[-3,-4],[8,6],[-1,-10],[-1,9],[-2,5],[4,-7],[5,-4],[9,2],[2,-10],[4,-4],[5,5],[6,8],[-5,-8],[-4,5],[-8,-6],[6,-9],[-4,7],[-7,2],[4,9],[-1,6],[7,4],[-10,1],[-10,7],[4,2],[-4,-5],[1,-2],[3,5],[-6,2],[6,7],[3,-5],[4,8],[-5,6],[-9,-8],[-6,-5],[2,7],[-10,5],[2,-1],[-9,-9],[6,1],[-6,-3],[-7,9],[-3,-6],[-4,-5],[9,10],[2,-8],[10,4],[-5,-9],[9,9],[-5,1],[3,-3],[8,3],[9,-1],[-7,-2],[8,-2],[8,-5],[-3,4],[3,6],[-3,-2],[8,-10],[-9,6],[4,10],[3,-7],[5,-1],[-8,-6],[2,-6],[-10,8],[6,-3],[-1,-10],[8,-6],[-3,-3],[7,-7],[-10,-6],[5,-9],[-4,3],[5,4],[6,10],[5,-6],[-1,9],[4,4],[10,-8]], dtype = "int8")#candidate|6091|(96, 2)|const|int8
const_6092 = relay.const([[-2,-8,8,2,6,-7,-8,-1,1,-8,5,8,-2,10,2,3,-2,3,-3,-3,7,-1,-2,-3,-4,7,10,7,-2,9,-9,-1,5,1,9,8,6,10,-4,3,3,-9,5,-7,3,4,8,2,-9,3,9,-3,-3,-2,-5,6,5,3,1,9,-3,3,8,5,8,-5,-1,1,3,-10,-10,-6,-2,-5,8,7,8,-5,7,4,-9,-4,9,-4,-1,-1,-3,-6,-8,7,6,9,4,-2,3,-6,-7,3,-6,-6,-1,7,-6,6,3,-9,-7,-7,-10,2,5,6,-8,7,5,-10,2,8,-10,1,-10,-6,-9,-8,10,-2,7,8,-8,9,10,-8,7,-10,2,4,-2,-9,-1,-9,8,-7,-3,10,2,7,-1,6,-2,-6,-10,6,-1,4,-1,-3,8,4,9,-5,5,4,-6,3,9,-2,-2,-2,3,-4,-10,-3,-1,10,-3,10,6,2,-4,-9,8,9,-10,-2,-8,-7,-5,7,-9,3,-3,-10,7,-10,-8,-2,-2,6,-4,5,5,10,-4,4,-7,5,-2,-8,6,-7,-9,-3,-2,1,7,9,9,2,8,7,4,5,9,-4,1,1,10,1,3,9,-9,4,8,1,5,-1,-2,-5,-10,-5,-10,-3,2,-4,9,9,-2,7,-10,-7,-8,3,5,-10,9,-9,6,1,7,5,1,-3,-6,2,-9,-8,-7,9,-1,8,6,8,9,-10,-5,2,8,10,6,-7,-10,3,7,3,1,-7,9,9,-3,6,-3,-7,-4,4,-8,6,-7,9,-1,2,-4,-8,-2,-2,-5,6,-9,-10,7,-4,4,-5,10,-5,-4,2,-7,10,-7,-6,-5,4,-5,-8,10,-9,3,-5,8,4,10,10,8,9,-4,-10,9,-2,8,-7,1,3,10,9,-2,7,-10,-9,9,-2,3,4,5,6,-8,-4,-9,-5,6,6,-6,10,-2,-2,7,5,-7,-5,7,-8,4,-3,8,3,-1,-2,2,1,-10,-4,-7,10,10,-8,7,-3,7,-8,-4,-1,-10,10,-4,5,-3,3,-9,-6,10,-7,10,-2,8,4,-10,6,7,-9,8,4,-4,5,-4,4,5,-3,-3,-5,-4,2,-3,2,-8,-10,-7,-2,-5,-4,-6,-3,10,-9,10,4,3,7,-6,-8,2,-1,-4,7,9,-8,-8,7,8,10,8,-3,-10,8,9,-10,-4,9,-5,-9,8,9,-8,-7,-2,6,3,-2,-10,-8,-4,2,-1,-8,-9,-3,2,-4,-8,-9,-8,-2,-4,3,-3,-3,-1,-7,-7,-3,1,3,7,6,-10,6,9,8,-2,-5,4,-4,-6,1,7,10,-7,-1,-10,-10,3,-8,-7,6,-9,-6,1,-10,-2,-10,5,9,1,-8,9,3,7,-4,10,-4,1,4,2,10,-6,-5,8,-3,-3,4,-1,6,10,2,2,-1,-6,6,10,3,6,-7,1,-7,-4,-6,10,5,-4,2,-5,-10,9,-10,-1,6,-9,2,-4,-4,-10,3,4,7,-5,5,-1,10,10,10,-2,-9,-7,3,-9,-2,-9,6,3,5,-4,9,-5,7,10,9,2,-5,8,-4,6,4,9,1,5,1,6,9,10,9,3,-1,5,-6,5,7,-4,-7,3,6,-3,9,8,1,4,-7,9,2,6,-4,-5,-2,-2,-3,-6,2,7,-7,1,-2,-9,10,9,-1,-7,5,3,-5,6,-9,9,10,-5,3,-8,-1,-6,-6,-2,-9,9,2,-3,9,5,2,3,9,2,4,-7,-6,5,-7,6,-5,-3,-10,-6,-6,9,4,-3,-2,3,2,2,-2,-7,-3,6,-1,-6,5,-10,-2,10,-2,7,7,-9,-9,-4,-7,9,-7,9,3,-9,-7,1,1,-5,4,7,3,10,-9,2,-7,-6,-7,-4,-10,1,5,9,3,9,6,-1,-3,1,-5,-8,8,-9,-8,-7,8,-8,-10,-9,10,10,-5,7,2,-10,2,1,1,-7,3,-9,-4,5,1,6,-1,9,7,-6,3,6,-5,7,7,6,2,2,-2,9,-1,7,1,-8,2,-9,-9,10,4,-1,-5,-2,4,-2,-10,-2,-8,-3,-4,9,-6,-1,-5,-10,-2,1,-7,4,-6,-8,9,-9,10,6,-4,2,-5,-4,7,1,-4,7,-5,5,-9,-10,-4,5,-9,-7,-8,-3,-3,-7,-3,-8,-3,8,-7,-9,-5,-7,8,-2,5,-1,8,7,-3,10,5,2,-4,-5,-5,-7,5,-1,6,-9,-3,-5,4,-2,6,-2,-9,-8,7,4,-8,-4,7,-4,-9,3,3,2,-9,4,-4,6,-5,8,8,3,5,8,5,4,-5,5,-4,-5,9,8,-10,-1,-9,-6,-1,2,8,-7,-2,-6,-7,-4,6,-3,1,-10,-6,-3,-10,-3,-9,6,-2,10,-5,10,-5,-2,-2,-8,6,3,9,-8,-6,-9,-3,2,-1,1,9,7,-6,7,-5,10,-2,-3,8,9,2,8,-6,-5,5,2,-7,-9,9,-10,8,-6,-4,3,-2,-7,4,-4,-8,-5,4,6,-8,4,-9,-4,6,-1,-10,-2,9,-9,-5,-1,-1,-3,-8,6,-5,3,-5,-3,6,-1,8,-1,3,10,-2,-8,-1,-7,3,3,4,-2,-3,-1,-8,-5,6,-5,-7,-6,8,-3,-6,-6,-4,6,6]], dtype = "int64")#candidate|6092|(1, 1008)|const|int64
call_6090 = relay.TupleGetItem(func_3390_call(relay.reshape(const_6091.astype('int8'), [16, 12]), relay.reshape(const_6091.astype('int8'), [16, 12]), relay.reshape(const_6092.astype('int64'), [252, 4]), ), 3)
call_6093 = relay.TupleGetItem(func_3394_call(relay.reshape(const_6091.astype('int8'), [16, 12]), relay.reshape(const_6091.astype('int8'), [16, 12]), relay.reshape(const_6092.astype('int64'), [252, 4]), ), 3)
func_5960_call = mod.get_global_var('func_5960')
func_5961_call = mutated_mod.get_global_var('func_5961')
call_6100 = relay.TupleGetItem(func_5960_call(), 1)
call_6101 = relay.TupleGetItem(func_5961_call(), 1)
func_2722_call = mod.get_global_var('func_2722')
func_2725_call = mutated_mod.get_global_var('func_2725')
var_6123 = relay.var("var_6123", dtype = "float32", shape = (63,))#candidate|6123|(63,)|var|float32
call_6122 = relay.TupleGetItem(func_2722_call(relay.reshape(var_6123.astype('float32'), [63, 1])), 2)
call_6124 = relay.TupleGetItem(func_2725_call(relay.reshape(var_6123.astype('float32'), [63, 1])), 2)
func_3551_call = mod.get_global_var('func_3551')
func_3556_call = mutated_mod.get_global_var('func_3556')
var_6126 = relay.var("var_6126", dtype = "float32", shape = (360,))#candidate|6126|(360,)|var|float32
call_6125 = relay.TupleGetItem(func_3551_call(relay.reshape(var_6126.astype('float32'), [360,]), relay.reshape(call_6100.astype('float32'), [32,]), relay.reshape(var_6081.astype('bool'), [25200,]), ), 7)
call_6127 = relay.TupleGetItem(func_3556_call(relay.reshape(var_6126.astype('float32'), [360,]), relay.reshape(call_6100.astype('float32'), [32,]), relay.reshape(var_6081.astype('bool'), [25200,]), ), 7)
func_5550_call = mod.get_global_var('func_5550')
func_5554_call = mutated_mod.get_global_var('func_5554')
call_6129 = relay.TupleGetItem(func_5550_call(relay.reshape(var_6126.astype('float32'), [360,]), relay.reshape(var_6126.astype('float32'), [3, 8, 15]), ), 0)
call_6130 = relay.TupleGetItem(func_5554_call(relay.reshape(var_6126.astype('float32'), [360,]), relay.reshape(var_6126.astype('float32'), [3, 8, 15]), ), 0)
bop_6132 = relay.maximum(uop_6065.astype('int32'), relay.reshape(var_6064.astype('int32'), relay.shape_of(uop_6065))) # shape=(6, 15, 3)
uop_6140 = relay.tan(const_6092.astype('float64')) # shape=(1, 1008)
output = relay.Tuple([call_6079,var_6080,var_6081,call_6090,const_6091,call_6100,call_6122,var_6123,call_6125,var_6126,call_6129,bop_6132,uop_6140,])
output2 = relay.Tuple([call_6082,var_6080,var_6081,call_6093,const_6091,call_6101,call_6124,var_6123,call_6127,var_6126,call_6130,bop_6132,uop_6140,])
func_6142 = relay.Function([var_6064,var_6080,var_6081,var_6123,var_6126,], output)
mod['func_6142'] = func_6142
mod = relay.transform.InferType()(mod)
mutated_mod['func_6142'] = func_6142
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6142_call = mutated_mod.get_global_var('func_6142')
var_6144 = relay.var("var_6144", dtype = "float32", shape = (6, 15, 3))#candidate|6144|(6, 15, 3)|var|float32
var_6145 = relay.var("var_6145", dtype = "float32", shape = (2, 16))#candidate|6145|(2, 16)|var|float32
var_6146 = relay.var("var_6146", dtype = "bool", shape = (25200, 1))#candidate|6146|(25200, 1)|var|bool
var_6147 = relay.var("var_6147", dtype = "float32", shape = (63,))#candidate|6147|(63,)|var|float32
var_6148 = relay.var("var_6148", dtype = "float32", shape = (360,))#candidate|6148|(360,)|var|float32
call_6143 = func_6142_call(var_6144,var_6145,var_6146,var_6147,var_6148,)
output = call_6143
func_6149 = relay.Function([var_6144,var_6145,var_6146,var_6147,var_6148,], output)
mutated_mod['func_6149'] = func_6149
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6177 = relay.var("var_6177", dtype = "float64", shape = ())#candidate|6177|()|var|float64
var_6178 = relay.var("var_6178", dtype = "float64", shape = (1, 8, 1))#candidate|6178|(1, 8, 1)|var|float64
bop_6179 = relay.floor_divide(var_6177.astype('float64'), var_6178.astype('float64')) # shape=(1, 8, 1)
output = relay.Tuple([bop_6179,])
output2 = relay.Tuple([bop_6179,])
func_6184 = relay.Function([var_6177,var_6178,], output)
mod['func_6184'] = func_6184
mod = relay.transform.InferType()(mod)
mutated_mod['func_6184'] = func_6184
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6184_call = mutated_mod.get_global_var('func_6184')
var_6186 = relay.var("var_6186", dtype = "float64", shape = ())#candidate|6186|()|var|float64
var_6187 = relay.var("var_6187", dtype = "float64", shape = (1, 8, 1))#candidate|6187|(1, 8, 1)|var|float64
call_6185 = func_6184_call(var_6186,var_6187,)
output = call_6185
func_6188 = relay.Function([var_6186,var_6187,], output)
mutated_mod['func_6188'] = func_6188
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4417_call = mod.get_global_var('func_4417')
func_4419_call = mutated_mod.get_global_var('func_4419')
call_6213 = relay.TupleGetItem(func_4417_call(), 0)
call_6214 = relay.TupleGetItem(func_4419_call(), 0)
output = call_6213
output2 = call_6214
func_6245 = relay.Function([], output)
mod['func_6245'] = func_6245
mod = relay.transform.InferType()(mod)
mutated_mod['func_6245'] = func_6245
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6245_call = mutated_mod.get_global_var('func_6245')
call_6246 = func_6245_call()
output = call_6246
func_6247 = relay.Function([], output)
mutated_mod['func_6247'] = func_6247
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2842_call = mod.get_global_var('func_2842')
func_2844_call = mutated_mod.get_global_var('func_2844')
call_6253 = relay.TupleGetItem(func_2842_call(), 0)
call_6254 = relay.TupleGetItem(func_2844_call(), 0)
output = relay.Tuple([call_6253,])
output2 = relay.Tuple([call_6254,])
func_6257 = relay.Function([], output)
mod['func_6257'] = func_6257
mod = relay.transform.InferType()(mod)
output = func_6257()
func_6258 = relay.Function([], output)
mutated_mod['func_6258'] = func_6258
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6284 = relay.var("var_6284", dtype = "uint64", shape = ())#candidate|6284|()|var|uint64
var_6285 = relay.var("var_6285", dtype = "uint64", shape = (14, 9, 10))#candidate|6285|(14, 9, 10)|var|uint64
bop_6286 = relay.less(var_6284.astype('bool'), var_6285.astype('bool')) # shape=(14, 9, 10)
func_5048_call = mod.get_global_var('func_5048')
func_5051_call = mutated_mod.get_global_var('func_5051')
var_6294 = relay.var("var_6294", dtype = "uint32", shape = (36,))#candidate|6294|(36,)|var|uint32
const_6295 = relay.const([-9,-2,5,-3,-9,-10,5,4,-2,-1,-7,-6,4,1,-9,-10,3,-7,-9,-9,-1,1,-1,-5,-9,-7,-1,-1,6,1,-10,4,-3,2,-3,10,-1,2,-5,-4,3,-3,4,-1,5,6,3,1,-2,7,1,1,-8,4,10,-10,-9,9,-6,-6,4,-8,-5,-2,9,2,7,-4,6,8,7,-1,10,2,2,-7,-3,3,4,-2,-5,5,-8,4,-8,-10,-2,-1,-10,-6,-2,-9,10,2,-5,8,-1,-1,5,-2,10,8,-2,-2,-6,3,5,-5,-3,-10,-1,8,3,-2,-5,-1,-6,-6,-10,9,1,3,5,3,-5,6,-1,-10,4,-3,6,-5,-3,-1,1,10,-3,10,-1,5,5,-3,-6,1,7,-8,-5,7,3,-2,9,10,5,1,-4,3,10,6,-9,5,-8,-8,7,3,-3,-6,-9,4,10,-1,4,4,7,9,4,1,8,-6,-5,4,-6,-10,-1,-10,-4,5,-2,-1,6,5,7,-3,7,9,-10,2,7,2,10,9,10,1,3,-1,3,9,3,-4,-3,4,10,-9,10,7,1,2,-1,3,5,3,1,-8,3,-7,-7,-10,-7,-3,10,4,5,-5,9,10,-4,-1,-4,1,1,6,1,2,-4,-6,3,6,-8,-6,-10,10,-9,3,10,-1,-4,-8,4,4,4,-2,1,-9,-10,-5,-1,-8,-8,2,-5,-10,3,-5,-7,-2,-10,-10,-2,-10,-3,-5,-2,3,-4,-7,-1,9,6,-8,2,5,-4,-2,5,-1,7,-3,10,8,-2,-6,-3,-6,8,1,3,3,1,6,-7,2,-4,2,10,2,4,-4,3,-5,3,-1,10,-6,9,-6,-10,10,-5,1,-10,-9,1,1,-5,-2,-2,7,-7,2,-4,2,-9,9,5,-9,-3,9,-4,-9,-9,-7,6,-3,-6,10,-3,5,7,8,-6,-4], dtype = "uint8")#candidate|6295|(360,)|const|uint8
call_6293 = relay.TupleGetItem(func_5048_call(relay.reshape(var_6294.astype('uint32'), [36,]), relay.reshape(const_6295.astype('uint8'), [360,]), ), 3)
call_6296 = relay.TupleGetItem(func_5051_call(relay.reshape(var_6294.astype('uint32'), [36,]), relay.reshape(const_6295.astype('uint8'), [360,]), ), 3)
uop_6299 = relay.asinh(bop_6286.astype('float64')) # shape=(14, 9, 10)
func_5405_call = mod.get_global_var('func_5405')
func_5406_call = mutated_mod.get_global_var('func_5406')
call_6342 = relay.TupleGetItem(func_5405_call(), 0)
call_6343 = relay.TupleGetItem(func_5406_call(), 0)
uop_6348 = relay.exp(uop_6299.astype('float32')) # shape=(14, 9, 10)
bop_6350 = relay.not_equal(uop_6299.astype('bool'), relay.reshape(uop_6348.astype('bool'), relay.shape_of(uop_6299))) # shape=(14, 9, 10)
func_5327_call = mod.get_global_var('func_5327')
func_5328_call = mutated_mod.get_global_var('func_5328')
call_6385 = relay.TupleGetItem(func_5327_call(), 0)
call_6386 = relay.TupleGetItem(func_5328_call(), 0)
func_5859_call = mod.get_global_var('func_5859')
func_5861_call = mutated_mod.get_global_var('func_5861')
const_6388 = relay.const([6.341749,-1.850597,0.011582,1.348327,6.548784,-4.158330,-5.537539,-9.065765,7.714029,-1.918489,0.623802,0.256608,4.556432,1.944621,-1.448919,7.968166,1.995613,-8.032834,-9.581176,9.080801,2.657844,8.774153,-9.609393,-1.594025,-7.790197,-5.949568,-7.549355,7.353519,-7.153801,-1.810580,6.644304,-2.213111,5.812700,7.630891,7.771127,0.281401,7.809674,-8.416951,-7.917442,6.498363,5.691669,2.647522,6.424433,3.466572,2.497788,-5.737491,-2.460983,9.058774], dtype = "float32")#candidate|6388|(48,)|const|float32
call_6387 = relay.TupleGetItem(func_5859_call(relay.reshape(const_6388.astype('float32'), [48,])), 1)
call_6389 = relay.TupleGetItem(func_5861_call(relay.reshape(const_6388.astype('float32'), [48,])), 1)
func_4193_call = mod.get_global_var('func_4193')
func_4194_call = mutated_mod.get_global_var('func_4194')
call_6390 = relay.TupleGetItem(func_4193_call(), 0)
call_6391 = relay.TupleGetItem(func_4194_call(), 0)
var_6405 = relay.var("var_6405", dtype = "float64", shape = (14, 9, 10))#candidate|6405|(14, 9, 10)|var|float64
bop_6406 = relay.bitwise_or(uop_6299.astype('int32'), relay.reshape(var_6405.astype('int32'), relay.shape_of(uop_6299))) # shape=(14, 9, 10)
func_5859_call = mod.get_global_var('func_5859')
func_5861_call = mutated_mod.get_global_var('func_5861')
call_6410 = relay.TupleGetItem(func_5859_call(relay.reshape(const_6388.astype('float32'), [48,])), 1)
call_6411 = relay.TupleGetItem(func_5861_call(relay.reshape(const_6388.astype('float32'), [48,])), 1)
func_3351_call = mod.get_global_var('func_3351')
func_3353_call = mutated_mod.get_global_var('func_3353')
const_6419 = relay.const([[2.749887,-8.336552,9.719031,3.478924,-3.475539,-1.970075,-5.266056,9.015024,8.798639,1.564529],[2.256887,-1.464721,8.228610,9.607641,-2.373175,9.845403,-5.590031,-7.185868,3.837874,1.112965],[9.341153,-1.868777,-8.944164,3.689411,-5.879598,-3.222659,-1.982809,1.878054,-7.443047,-7.520702],[-9.869025,7.535667,5.487517,-2.329724,4.047952,-7.603730,7.941778,-2.832945,6.759388,8.754673],[-7.964425,9.753486,-9.042158,-3.983677,8.543602,-3.752623,-4.106524,7.951244,9.874821,-0.621078],[9.593738,1.035785,-7.043015,-2.734591,0.237626,6.128613,-6.283742,0.589352,-1.021733,2.106668],[-1.071102,7.746228,3.880408,-8.302123,-2.198246,-4.451446,-0.923772,-9.526927,4.895120,-2.635207],[4.959600,6.216407,-6.853538,-5.595587,-5.461714,-6.583154,0.638540,-2.607398,-4.408241,9.432247],[9.590360,8.923375,8.626250,-9.207814,-8.717356,-7.056980,1.170057,8.969386,-2.324539,-0.872637],[-1.814543,0.253160,-6.769682,-0.885917,-9.356489,9.496158,1.213788,1.455996,-4.510843,-5.658790],[-0.784847,-0.911482,-0.994433,0.601406,-3.224592,6.792451,6.494626,-0.631976,-8.297137,-4.641448],[2.712199,6.046997,-9.918694,6.343139,-1.532067,-9.090829,-2.070489,-3.285355,-4.483214,0.022453],[8.583946,5.766338,9.207444,-6.172436,3.062452,9.130881,-4.240333,5.292833,1.272604,-0.800657],[-5.124143,2.708313,6.886034,1.040935,0.049668,-4.251320,-2.112915,7.850518,-7.279004,0.587951],[6.206255,-1.839489,8.254838,-5.819461,-6.856256,1.554367,3.072354,-7.152150,-1.612931,2.792696],[-2.745573,0.295484,9.862636,2.146154,-9.855103,1.044195,7.203754,-8.852793,-9.409449,8.970269],[5.145197,8.370594,2.064478,2.419013,-1.963662,-4.449635,5.007857,5.402583,-9.149743,-8.266875],[9.509467,-9.950185,4.170900,-8.100110,-7.173148,-5.305958,-2.697979,-9.739546,6.349889,1.870174],[-5.563167,8.305747,5.971791,2.301871,1.869092,0.229442,7.472673,8.456469,-1.376108,-5.909185],[9.209784,-5.026247,3.844383,-0.586111,-7.650490,-3.418961,6.385650,-5.697050,-2.979940,-9.656933],[7.208029,-3.679338,-4.624813,5.373345,7.216903,6.672670,8.107015,-1.359715,-0.084352,6.946041],[0.717827,-9.148849,6.996628,3.117937,-7.786960,0.569154,4.711290,-1.841865,3.790366,-9.468312],[-6.948040,-8.431850,3.535122,-2.067089,5.289362,8.068690,6.758463,6.789042,-2.710515,-8.999785],[-9.023750,0.624975,9.692937,9.069593,7.264986,-9.991101,2.262390,6.523181,4.037688,4.780771]], dtype = "float32")#candidate|6419|(24, 10)|const|float32
call_6418 = func_3351_call(relay.reshape(const_6419.astype('float32'), [4, 4, 15]))
call_6420 = func_3351_call(relay.reshape(const_6419.astype('float32'), [4, 4, 15]))
bop_6422 = relay.greater_equal(bop_6350.astype('bool'), var_6284.astype('bool')) # shape=(14, 9, 10)
output = relay.Tuple([call_6293,var_6294,const_6295,call_6342,call_6385,call_6387,const_6388,call_6390,bop_6406,call_6410,call_6418,const_6419,bop_6422,])
output2 = relay.Tuple([call_6296,var_6294,const_6295,call_6343,call_6386,call_6389,const_6388,call_6391,bop_6406,call_6411,call_6420,const_6419,bop_6422,])
func_6425 = relay.Function([var_6284,var_6285,var_6294,var_6405,], output)
mod['func_6425'] = func_6425
mod = relay.transform.InferType()(mod)
var_6426 = relay.var("var_6426", dtype = "uint64", shape = ())#candidate|6426|()|var|uint64
var_6427 = relay.var("var_6427", dtype = "uint64", shape = (14, 9, 10))#candidate|6427|(14, 9, 10)|var|uint64
var_6428 = relay.var("var_6428", dtype = "uint32", shape = (36,))#candidate|6428|(36,)|var|uint32
var_6429 = relay.var("var_6429", dtype = "float64", shape = (14, 9, 10))#candidate|6429|(14, 9, 10)|var|float64
output = func_6425(var_6426,var_6427,var_6428,var_6429,)
func_6430 = relay.Function([var_6426,var_6427,var_6428,var_6429,], output)
mutated_mod['func_6430'] = func_6430
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5327_call = mod.get_global_var('func_5327')
func_5328_call = mutated_mod.get_global_var('func_5328')
call_6438 = relay.TupleGetItem(func_5327_call(), 0)
call_6439 = relay.TupleGetItem(func_5328_call(), 0)
output = relay.Tuple([call_6438,])
output2 = relay.Tuple([call_6439,])
func_6450 = relay.Function([], output)
mod['func_6450'] = func_6450
mod = relay.transform.InferType()(mod)
mutated_mod['func_6450'] = func_6450
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6450_call = mutated_mod.get_global_var('func_6450')
call_6451 = func_6450_call()
output = call_6451
func_6452 = relay.Function([], output)
mutated_mod['func_6452'] = func_6452
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4193_call = mod.get_global_var('func_4193')
func_4194_call = mutated_mod.get_global_var('func_4194')
call_6456 = relay.TupleGetItem(func_4193_call(), 1)
call_6457 = relay.TupleGetItem(func_4194_call(), 1)
func_3690_call = mod.get_global_var('func_3690')
func_3693_call = mutated_mod.get_global_var('func_3693')
const_6476 = relay.const([3.864360,2.159225,-5.348046,1.766784,3.327174,-7.411823,1.509163,-0.748235,6.784638,2.583325,-2.453400,-6.969465,-0.159305,-9.120397,-8.111790,-2.894321,-6.506474,-0.341401,8.731733,-8.176812,2.992962,8.497154,4.213176,-5.274982,-6.697010,-0.053510,-8.266768,-6.231069,-7.791453,4.610036,-9.303199,3.957981,9.187716,1.277772,4.331681,0.385708,-5.100979,5.755345,-8.986843,4.934687,9.922571,-6.781191,-0.733793,6.160720,9.956450,8.139804,-2.428243,-4.150019,0.213388,-2.896733,4.991335,2.042490,-3.790868,3.072395,-8.890394,8.467874,-7.894919,-1.837716,-3.460506,-0.586442,-3.747592,4.619990,-1.632583], dtype = "float32")#candidate|6476|(63,)|const|float32
var_6477 = relay.var("var_6477", dtype = "float32", shape = (1800,))#candidate|6477|(1800,)|var|float32
call_6475 = relay.TupleGetItem(func_3690_call(relay.reshape(const_6476.astype('float32'), [63,]), relay.reshape(var_6477.astype('float32'), [1800,]), ), 2)
call_6478 = relay.TupleGetItem(func_3693_call(relay.reshape(const_6476.astype('float32'), [63,]), relay.reshape(var_6477.astype('float32'), [1800,]), ), 2)
func_2692_call = mod.get_global_var('func_2692')
func_2694_call = mutated_mod.get_global_var('func_2694')
const_6480 = relay.const([1.225594,6.165612,1.972785,-5.822831,6.997624,0.965763,4.214759,-7.984301,-6.285588,7.275171,8.391760,-7.399210,9.397315,-5.171055,-3.295321,9.643594,5.855608,-2.629376,-3.603520,-9.923422,0.163341,0.215793,3.603965,-9.382444,-6.279610,-7.492181,0.070599,5.529588,-7.573766,5.088872,-3.583269,3.431589,-8.878767,-4.321979,-0.854130,-1.624344,-4.444168,-5.873692,-2.953832,2.949026,-1.878313,-0.743905,-6.005724,5.704166,-8.438013,-1.845734,8.268391,-3.747434,1.670151,-4.494876,1.976200,5.243571,-5.857706,1.821368,-3.036227,7.825509,-6.112860,-3.328941,8.340318,-5.398528,1.922487,8.532970,-4.824457,-6.552421,-1.388007,5.267989,8.728606,-7.079066,2.502531,-0.208988,-1.674489,-1.490015,-5.830289,-6.498882,-6.881138,0.788874,4.334868,-6.787504,-0.147001,8.823612,2.549163,-9.448628,8.419260,-0.233767,4.963647,-1.888137,-4.301971,-9.520901], dtype = "float32")#candidate|6480|(88,)|const|float32
call_6479 = relay.TupleGetItem(func_2692_call(relay.reshape(const_6480.astype('float32'), [88,])), 2)
call_6481 = relay.TupleGetItem(func_2694_call(relay.reshape(const_6480.astype('float32'), [88,])), 2)
output = relay.Tuple([call_6456,call_6475,const_6476,var_6477,call_6479,const_6480,])
output2 = relay.Tuple([call_6457,call_6478,const_6476,var_6477,call_6481,const_6480,])
func_6484 = relay.Function([var_6477,], output)
mod['func_6484'] = func_6484
mod = relay.transform.InferType()(mod)
mutated_mod['func_6484'] = func_6484
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6485 = relay.var("var_6485", dtype = "float32", shape = (1800,))#candidate|6485|(1800,)|var|float32
func_6484_call = mutated_mod.get_global_var('func_6484')
call_6486 = func_6484_call(var_6485)
output = call_6486
func_6487 = relay.Function([var_6485], output)
mutated_mod['func_6487'] = func_6487
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3900_call = mod.get_global_var('func_3900')
func_3902_call = mutated_mod.get_global_var('func_3902')
call_6491 = func_3900_call()
call_6492 = func_3900_call()
output = call_6491
output2 = call_6492
func_6506 = relay.Function([], output)
mod['func_6506'] = func_6506
mod = relay.transform.InferType()(mod)
mutated_mod['func_6506'] = func_6506
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6506_call = mutated_mod.get_global_var('func_6506')
call_6507 = func_6506_call()
output = call_6507
func_6508 = relay.Function([], output)
mutated_mod['func_6508'] = func_6508
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6521 = relay.var("var_6521", dtype = "float32", shape = (15, 14, 6))#candidate|6521|(15, 14, 6)|var|float32
var_6522 = relay.var("var_6522", dtype = "float32", shape = (15, 14, 6))#candidate|6522|(15, 14, 6)|var|float32
bop_6523 = relay.power(var_6521.astype('float32'), relay.reshape(var_6522.astype('float32'), relay.shape_of(var_6521))) # shape=(15, 14, 6)
output = bop_6523
output2 = bop_6523
func_6537 = relay.Function([var_6521,var_6522,], output)
mod['func_6537'] = func_6537
mod = relay.transform.InferType()(mod)
mutated_mod['func_6537'] = func_6537
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6537_call = mutated_mod.get_global_var('func_6537')
var_6539 = relay.var("var_6539", dtype = "float32", shape = (15, 14, 6))#candidate|6539|(15, 14, 6)|var|float32
var_6540 = relay.var("var_6540", dtype = "float32", shape = (15, 14, 6))#candidate|6540|(15, 14, 6)|var|float32
call_6538 = func_6537_call(var_6539,var_6540,)
output = call_6538
func_6541 = relay.Function([var_6539,var_6540,], output)
mutated_mod['func_6541'] = func_6541
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4656_call = mod.get_global_var('func_4656')
func_4658_call = mutated_mod.get_global_var('func_4658')
call_6553 = relay.TupleGetItem(func_4656_call(), 0)
call_6554 = relay.TupleGetItem(func_4658_call(), 0)
func_6537_call = mod.get_global_var('func_6537')
func_6541_call = mutated_mod.get_global_var('func_6541')
const_6574 = relay.const([-9.562498,-1.732485,-8.476881,-2.130501,1.121078,-7.854233,1.447960,-3.247297,-0.096615,-2.290394,-3.967069,-9.313492,1.338649,5.785381,7.676928,-1.827667,-8.475609,-7.198760,-8.622578,5.954279,-7.385824,7.028282,-4.933541,-7.695626,8.616604,1.025840,-8.419999,-6.845184,2.181459,-7.415567,9.035653,-8.345194,-9.460976,5.326345,0.285216,-2.272655,-2.671342,-9.422984,-3.992959,0.581471,1.280909,0.380790,-8.285142,-9.285030,7.614133,3.540197,0.780168,-6.174884,-9.333720,-8.641484,-5.342839,9.764510,-4.994730,2.483101,-2.341966,-0.424630,6.914341,4.381182,-9.765480,1.758990,6.975192,-3.762277,-3.690993,-4.823363,-9.409744,4.039323,8.769863,5.413450,-9.692868,-2.510484,-1.899565,-5.534539,-8.986661,9.584633,9.383103,-9.111348,9.735441,-1.480704,4.519945,-9.760627,1.303429,-6.848195,1.500513,9.678891,-9.222675,-7.123849,-2.408316,0.139178,5.409959,6.325042,0.537421,2.696497,8.383021,1.244558,-9.683449,-8.118364,0.447366,-3.685914,3.287951,-6.961400,-6.737745,-8.018699,0.206476,5.056910,-4.807953,-9.930568,4.249920,2.958774,4.103446,9.273454,-3.341559,0.116562,3.407323,-6.117091,0.105379,-8.382176,-2.573025,2.391441,-2.085825,-0.125689,7.572503,4.297449,-8.467608,3.273748,4.050854,0.048539,5.064853,6.070964,-0.774269,4.556597,-6.798796,2.255888,-1.229258,-8.976590,-0.009334,0.485481,9.030232,-7.888160,1.306998,7.281702,-2.004721,1.530733,-0.347427,-0.048743,-4.930261,-7.441024,-7.471688,5.929830,-6.363214,7.255762,-4.304050,4.874247,9.638702,8.699746,1.153293,8.703042,0.988619,4.088721,0.757322,2.656558,9.847828,-3.668613,0.803716,-6.727558,-1.254962,-2.714836,6.928572,-9.345043,9.091595,2.872823,1.285224,3.920516,8.902981,-4.753746,-5.105614,4.316507,8.432908,6.353119,2.307627,4.166112,-9.229195,5.375124,3.014981,-2.037338,2.762956,2.289800,9.361391,-4.679566,-0.897012,3.969057,-2.737268,-7.112359,5.016710,-2.504979,-6.255342,-5.052588,-5.287227,-1.335742,3.147973,-4.742390,-9.409879,9.141939,-1.677407,4.822038,-6.955254,-9.900387,0.095209,4.766567,-4.795073,1.423341,9.128003,8.576607,4.033486,7.024775,0.362347,-9.750161,5.278705,6.919532,8.462719,-7.805156,0.643633,-4.226464,-8.815872,6.836294,1.068527,6.820956,-6.351259,-7.298354,-8.834856,4.715037,-5.445984,0.108187,0.576749,6.058053,7.397610,3.351694,-5.983091,6.476220,3.582878,-0.909217,-0.521200,7.322433,-5.769954,-0.529053,8.780774,-2.462974,2.155906,9.910970,-6.477087,9.079736,5.047349,5.988051,-2.288875,-0.291189,1.401347,0.751450,-6.133047,7.770521,-7.227816,1.915738,5.161099,6.386082,2.283383,6.841159,-1.197159,-6.083803,4.029239,9.461680,-5.596691,9.451672,-0.228192,0.736061,1.178583,-1.106958,1.404626,7.023300,6.193935,8.762358,-8.859351,3.276388,-5.668087,-3.861164,4.045859,6.971193,4.314585,5.200283,9.423374,-0.131989,7.519561,7.084128,-9.344776,3.451838,6.869722,-3.856589,-7.722433,-9.449637,6.544737,-1.416955,3.136995,9.577401,4.018750,-7.182080,3.986138,1.709676,5.610244,3.552388,-1.844777,-7.973976,-0.607762,4.891380,-3.234231,5.940575,-1.453898,-9.175602,6.241985,-3.226833,-5.486464,-2.826435,2.119826,4.441583,-8.913291,-5.422683,9.685576,-2.754222,9.201717,-0.535515,-4.927951,-4.626544,-5.978547,-6.924145,-7.803679,-3.170252,8.686948,-3.083895,-7.652534,-4.725371,3.493997,3.057773,5.247127,-2.287525,2.940917,-6.203926,-8.179645,-1.156673,4.963548,-7.478014,6.397305,-2.092933,1.599576,6.722492,-1.116999,-1.029445,-9.708539,6.234962,-8.170380,0.694048,-5.943480,4.524410,-0.717304,3.094541,-5.458548,1.215207,-8.400786,-3.733299,-4.533698,-3.337355,6.016674,-7.214895,-2.965248,4.759098,4.605456,7.318333,-9.253792,-7.958778,-4.715336,-1.685810,-5.331765,3.187910,-2.406354,-3.892415,9.045521,8.745703,-2.875839,3.096410,2.248034,3.426193,8.480890,5.575341,0.380407,-7.686444,3.843515,-5.581494,-7.007399,4.037886,1.185548,7.986375,-6.634515,-9.567132,3.505679,8.998185,-2.584255,3.706005,8.697128,-2.606006,8.506779,4.749024,6.489169,-5.681946,3.993497,-8.515057,4.323083,9.475995,1.966487,-1.805338,0.881438,5.814707,-8.165207,7.396083,8.291053,-6.593968,-3.879856,-6.668280,0.096235,7.575344,-0.763091,-7.011875,-2.405737,8.812427,2.899085,-7.979620,2.049312,-7.079734,-1.828499,-3.676110,6.996679,-7.591453,-7.181765,-5.788523,3.905838,-1.172499,9.699208,-9.365757,-7.679858,3.328021,7.213467,0.746749,-7.340952,8.098131,7.257300,-0.974880,-2.399592,7.320466,4.885718,9.897864,5.875078,-4.467202,-4.913759,-6.717209,-9.972634,-7.700308,7.569243,9.637019,3.164863,1.378150,-1.640547,-3.090355,-8.551328,4.455905,8.804157,5.475691,-6.619262,2.620487,-4.663756,3.469232,-6.034415,-5.232676,5.701253,3.832834,-8.187074,-6.304539,-1.879113,-9.140274,-5.468168,4.948663,-4.429594,-8.061335,-1.288821,7.893467,-0.594610,-3.108247,-1.984528,-4.204556,-4.836034,-0.501666,-1.928344,8.494014,4.988962,-2.002832,2.966956,2.012675,-6.861527,-3.285271,-8.653777,8.396477,-2.709032,3.444839,-9.115381,0.848791,8.723380,-2.681805,-9.243414,-7.846259,6.731141,5.600019,-5.683751,-3.655044,-5.148285,-3.870406,-9.721365,2.705648,3.577683,2.954319,6.230647,-6.604474,-1.418632,-1.675510,-5.633355,4.498251,5.522719,-0.677356,7.797443,-1.263917,5.170009,-0.322470,-2.461044,-9.642427,-4.542085,-5.595418,-7.000365,-1.223580,9.892731,7.197700,-3.461189,7.198669,6.875205,2.988901,-6.605838,8.496522,-1.041835,0.468829,1.629787,-1.134226,6.933521,8.888241,9.353249,-7.664288,7.403929,-8.608375,-1.974910,1.312505,5.684258,8.048748,9.192249,1.786193,-5.287131,-1.796825,5.238663,-1.799638,4.328538,-7.702140,5.350137,3.332547,1.419825,-9.473763,2.955393,7.991088,4.469887,-5.642446,4.507659,-5.372914,-1.176203,-2.046851,-3.791225,-5.962128,-7.958189,-1.911442,-9.601997,-4.459779,-0.224157,6.025624,5.535302,-6.401092,4.563795,3.354276,5.675063,0.549488,-4.372590,6.670284,-8.295752,9.428022,-2.333892,-1.129534,1.109144,-0.911664,-6.197630,-0.648672,9.271162,-8.331279,0.124937,6.319554,7.025862,6.038975,-8.955449,-2.330366,-3.877100,-8.103345,-3.163804,0.260691,3.575039,5.887086,-9.776212,9.549216,-0.467567,-2.962040,1.721702,-1.708148,-7.003002,2.382924,-3.873534,0.350584,9.640065,-5.541725,1.286940,9.535678,2.187947,-8.062570,-5.526975,0.298388,9.240567,0.401222,-3.292645,0.250387,8.081731,3.961294,0.925604,-0.386136,-1.853701,-6.696767,5.182003,9.516960,-3.083894,-4.727559,6.581890,0.112674,5.943030,-9.472447,3.962806,5.047997,-0.277615,-9.857851,5.756441,-2.731133,1.060410,6.348390,-6.205597,-5.503787,-0.180265,-3.641997,-5.459848,-6.398004,-7.177745,5.970701,0.658935,-3.607703,-8.780268,6.136386,6.400147,7.531155,-4.155557,9.775229,6.136414,3.875387,-9.958556,-7.227097,9.315337,8.294062,6.299724,9.551429,8.650115,-0.986764,1.726590,1.656271,2.930575,5.561242,-8.958015,-3.729703,-6.480551,3.986188,8.496913,-8.364302,4.317676,-6.130400,-5.946883,9.278464,6.505412,2.245348,5.718299,-1.625307,-6.221460,-0.660276,-8.068887,-3.671385,-4.325007,-5.550206,1.802420,-1.334897,-1.624194,2.981039,2.427323,-1.559320,-1.257785,3.883917,-0.971888,-5.926130,0.751190,4.479042,-9.236262,6.192749,-7.990775,-6.390976,-0.088712,-5.253649,-2.254109,3.616643,-6.408352,-8.841388,-4.661193,-4.358637,9.624653,3.162685,3.082036,7.383720,-0.833268,-9.275452,-3.712918,8.127566,8.708394,8.378261,3.041859,7.964017,-1.237834,0.879792,2.117011,4.193627,-0.149038,-3.592943,-1.531413,3.246431,-1.805140,8.164375,0.407042,8.720748,-2.093173,-5.807583,0.200268,7.228594,4.227304,-4.811263,-6.153166,-2.822815,-8.738330,-7.714686,-8.320496,-5.967193,1.700915,7.272109,-4.620608,3.735979,8.740599,-3.337218,-6.087580,-9.332764,-5.411062,-6.761564,-7.801947,-0.438187,6.582831,8.257999,-9.305893,-9.471334,4.527598,-3.563210,-9.377539,-7.884068,7.055876,6.554220,-8.967969,-2.588895,-7.046302,7.513381,0.146627,-0.839198,-9.151805,-0.528693,2.021390,-1.566286,-0.062731,-7.720286,1.284481,-0.865614,8.428919,-2.648169,3.512082,7.280504,0.169005,-2.853240,-3.523265,-9.200011,1.594190,7.905046,0.962364,5.777902,9.770100,0.071739,6.898587,7.861297,8.194651,-0.047582,-0.409724,-7.342890,4.557214,-9.820320,2.203590,-7.799409,9.611944,8.494112,-2.517560,-7.478785,-4.628014,-8.211767,2.135865,0.092690,1.837687,9.163430,6.373333,5.691315,8.966539,-7.211479,-3.711205,9.975438,-2.930037,7.785019,0.091792,-8.867812,4.136379,5.312834,4.779547,5.754832,0.618315,-6.472341,-0.196310,0.840704,-6.300575,2.036251,-5.711925,-9.598212,3.424455,2.588637,-2.559504,4.337332,-3.932789,-1.587239,6.962145,-7.549961,0.267583,0.184920,9.142662,5.546726,-2.779322,-5.620592,4.311485,2.969411,-3.041745,7.401199,0.178222,-2.607668,-2.668561,1.857716,-1.521708,-9.087795,-6.330309,-2.935028,-8.042039,2.822530,-7.208043,9.900666,2.581327,-3.484351,-3.728713,-3.116166,-8.463548,8.923232,5.427088,-0.250813,6.607579,9.141736,-9.099427,8.277321,0.255553,6.877128,-9.612598,1.565208,-3.631702,-8.686056,-2.041944,-7.451620,0.761542,0.655968,-2.524369,2.744450,-2.732281,7.610960,-4.343480,9.392382,-4.442967,5.905251,4.950762,-6.613823,-4.942809,-6.113179,9.695806,-7.325175,3.038640,4.223537,0.633975,8.421734,-0.795039,1.517622,6.537873,-7.304457,0.343601,-6.252323,7.120942,-7.456098,2.192762,-5.672420,6.500043,-7.290804,-9.107073,-7.602612,-1.894980,8.850789,2.060957,0.910787,2.071889,-6.617410,7.858505,4.807954,0.829274,-6.499378,5.396886,9.804762,5.569232,1.514349,1.705483,-4.752487,1.863223,-9.988353,-1.734201,0.146307,-0.074476,-4.396295,-2.520642,-8.756778,-9.767437,3.968900,7.180159,-3.249918,-4.766173,-1.325902,-1.848062,4.305678,-8.354392,-7.151993,7.357006,-8.725877,5.014305,5.831324,-2.897996,0.957809,-3.764103,-1.635646,0.522101,1.196105,-9.162680,3.335379,-9.674000,-6.539234,0.237281,2.606837,-3.710209,-2.312071,-1.953679,-0.101269,1.379969,6.730313,-0.132540,6.695873,8.305135,6.107001,-0.807875,-4.178132,4.969585,9.890833,8.336464,5.917042,-0.790874,0.220213,7.906568,3.769430,1.738558,-0.816151,1.715448,1.285786,-1.347632,-6.692391,9.375725,3.600682,-8.311254,0.325308,4.513808,9.205808,-7.820827,4.338583,-4.728054,-2.537712,7.768399,9.171667,-2.712508,2.780559,3.644539,6.642889,-2.156391,8.396867,0.373029,-5.837505,1.537342,-5.710656,-9.697826,5.617087,4.015865,-8.812130,9.515770,1.274580,-5.382980,-9.068174,-9.823425,4.275253,2.683452,5.800850,9.483393,4.919670,-2.153426,2.420249,3.381775,5.463870,-4.964829,-4.461586,-7.762802,-5.676987,-5.551964,-4.233921,-9.097455,-2.809993,5.468035,0.306133,0.642982,5.144646,-6.385458,1.016393,-9.461928,-2.266438,-6.144174,-5.131566,-2.004722,-9.411078,4.578869,-6.786573,-0.271408,0.292675,-0.717186,-8.011393,-9.529020,6.097614,-8.162870,-3.734709,-9.654517,-9.152383,0.898317,4.318260,4.027890,3.763354,-8.540250,-9.229839,-4.585291,-7.454568,-4.649883,-4.532119,9.725892,-6.853327,-3.409539,-3.542687,2.128121,-3.423930,6.084818,0.466808,8.999524,4.987582,-8.638399,-4.467992,-4.817954,2.900150,1.168918,9.119430,-1.090278,1.663194,-2.800420,3.374823,-0.273982,0.076139,9.083848,-3.315020,7.499082,-4.468057,0.277848,-5.073601,-3.978806,0.775211,3.728306,-3.683001,-1.276630,7.190851,4.859219,-3.685111,-2.157003,6.932745,-3.010011,-0.456206,8.697173,1.398401,9.221155,-3.691184,-4.251379,8.974648,-3.470334,7.288793,8.307968,-5.232709,7.101868,-3.663836,-6.300914,0.319948,5.634835,-9.074451,-4.349107,-7.621065,5.580602,5.753646,-9.124908,5.832777,-7.958409,0.559238,7.716099,-3.093860,-7.851711,-4.004911,-5.176806,-8.303002,9.166101,8.809149,-7.768675,8.166674,-0.066270,8.407304,-8.838377,-6.972414,6.937185,-8.887618,2.025896,2.893147,-0.933864,-7.325646,5.868971,-1.602883,6.567538,2.567642,6.800123,9.488673,9.502895,-4.853377,1.095263,6.360643,-4.623217,-5.401305,-5.502025,-6.790952,9.073860,-8.491099,1.993285,-7.562624,-2.004897,-5.350974,-9.000395,4.702625,3.854792,7.375729,-4.105094,1.751799,3.333996,-9.260456,-2.611827,-6.512484,1.197918,-4.954288,6.941841,7.389130,-8.669174,-6.213098,1.109598,9.870238,4.057348,-6.009680,0.471439,0.058819,7.220091,-2.087601,-3.978306,2.020773,6.458182,-3.325648,-4.663169,-5.991266,5.847319,-8.126700,0.687074,4.939393,-6.459343,-8.852296,-3.643066,-9.620760,-6.203773,0.433517,7.763638,-0.548824,-9.462890,-6.342643,8.873760,-7.809299,4.202680,6.633656], dtype = "float32")#candidate|6574|(1260,)|const|float32
call_6573 = func_6537_call(relay.reshape(const_6574.astype('float32'), [15, 14, 6]), relay.reshape(const_6574.astype('float32'), [15, 14, 6]), )
call_6575 = func_6537_call(relay.reshape(const_6574.astype('float32'), [15, 14, 6]), relay.reshape(const_6574.astype('float32'), [15, 14, 6]), )
func_5166_call = mod.get_global_var('func_5166')
func_5168_call = mutated_mod.get_global_var('func_5168')
call_6580 = relay.TupleGetItem(func_5166_call(), 0)
call_6581 = relay.TupleGetItem(func_5168_call(), 0)
func_4765_call = mod.get_global_var('func_4765')
func_4767_call = mutated_mod.get_global_var('func_4767')
call_6582 = relay.TupleGetItem(func_4765_call(), 2)
call_6583 = relay.TupleGetItem(func_4767_call(), 2)
uop_6587 = relay.sigmoid(call_6573.astype('float32')) # shape=(15, 14, 6)
uop_6589 = relay.sigmoid(call_6575.astype('float32')) # shape=(15, 14, 6)
func_1021_call = mod.get_global_var('func_1021')
func_1025_call = mutated_mod.get_global_var('func_1025')
const_6598 = relay.const([2.993865,-4.724104,-2.966844,-1.109510,6.561892,-0.677951,-6.768582,-0.569759,-5.219243,-9.759346,7.122937,2.149934,-0.293819,-0.937501,0.944503,-6.787352,1.156691,-6.295870,-5.901195,-0.847054,6.373098,-4.161269,2.006737,-4.080394,3.482856,5.370413,-1.777444,-1.831923,8.115668,-0.083647,2.136165,7.190877,0.320783,-0.127628,0.162847,2.746310,-0.996590,-3.817853,-2.336282,6.014975,3.997403,-8.518765,3.042876,-2.853205,-1.683285,9.999450,3.697488,-4.579935,8.178407,-1.503028,7.245973,0.225490,-5.782811,8.845555,-6.256918,-9.693939,-3.764985,2.869880,-5.961796,-6.308769,7.202419,-4.817569,-2.250906,4.531285,8.238379,-6.551967,-3.580077,-9.138074,-6.611148,5.693761,8.050931,-5.615799,1.271924,5.251935,-6.457128,-0.348247,-0.542502,-0.981518,8.245759,-4.726260,-3.627511,4.370259,-9.080765,9.087621,3.841719,-7.851872,-1.340936,-5.519156,-4.559588,8.480102,5.135384,-5.138655,-0.477504,1.456164,0.323930,6.231604,-8.045531,-9.115342,-8.280963,8.005658,-5.697787,-4.341653,2.540484,-3.963140,9.176817,-4.346546,1.682054,-0.735818,0.591347,7.312957,5.638674,-7.171459,8.688744,-8.438921,-4.650445,-9.150949,0.398977,-5.783681,2.238017,8.133862,-5.820400,-6.557914,-3.278967,-5.988555,-4.369435,-8.945613,-3.379573,3.138629,3.721644,7.669648,-8.841528,6.618148,3.541326,-8.602754,-9.247731,5.109022,3.919445,7.444841,-5.741617,3.640035,9.800476,-5.896511,8.725498,-9.461299,3.652617,-2.763029,2.474315,-3.990279,1.268039,7.247572,-2.420880,4.732207,-2.484528,8.409046,-2.968708,0.275631,1.596115,6.898724,-6.985577,2.148337,5.564160,0.501784,0.503726,0.638052,-6.315577,9.565139,7.325948,-4.477864,6.672396,-0.572562,-6.689624,5.504909,7.398882,-9.599921,-8.189558,-5.703862,-9.213997,-4.187924,5.647996,-4.096930,4.031008,-4.800338,-2.756164,-6.668474,-3.413600,0.363542,4.097394,-0.677319,9.521847,-8.951526,1.175261,-4.911259,-5.549131,1.929808,-1.376086,8.430159,3.839859,8.766967,-1.131674,2.533145,-9.607547,6.776270,-7.205936,0.962316,8.365353,4.809148,-4.261258,-9.778934,2.831919,-4.862970,4.192505,8.837210,0.218872,4.806798,-3.174988,-3.398496,4.299892,-7.258110,-3.393359,-3.436437,5.211478,-1.000848,1.065491,-8.793828,-5.783639,-3.106148,-4.140174,2.578406,-8.729162,9.748403,2.968480,-5.969829,-4.154799,-4.812249,-2.226029,-1.338142,5.548178,9.446926,0.458181,1.156462,-2.446977,1.237834,7.941386,-9.237322,1.681658,-4.730183,8.714476,-0.660940,-8.171177,-4.865030,8.496738,-5.345379,6.077496,1.150772,-1.153512,8.284104,-6.370030,7.450725,9.418369,-6.319147,-3.074403,4.707105,4.480286,4.562537,0.363669,-6.763591,-2.877896,9.768233,-2.535521,-7.455810,1.036500,8.690805,-0.603358,5.771830,-9.036075,0.752438,-2.389752,-2.598258,-6.860355,2.883020,-4.563504,-9.623723,3.076487,-2.486916,-7.886708,-8.373983,-0.289884,4.368671,-4.004485,-4.994687,-1.820558,6.153222,5.549965,-7.524416,0.119198,2.878646,4.070165,-8.759023,1.858507,-2.224411,0.058252,7.278577,-5.445991,3.010456,1.857025,6.959223,2.353166,-3.715885,5.264760,-4.526745,3.536649,-5.932020,2.679720,1.857942,2.568474,-6.018084,-2.933446,5.584157,-2.028831,9.790590,-5.632688,-6.635366,-0.106211,-7.688624,8.960628,-9.151443,-3.291267,-0.039307,-8.344577,-2.549086,6.682131,-7.573086,-6.769359,5.244130,-6.936819,-8.269837,6.865044,-0.217782,-8.872945,9.191321,3.362101,-8.704395,-3.333101,1.955415,-2.086046,1.317175,-5.985560,2.663545,9.880002,-3.813402,5.090863,-9.929210,0.719847,-0.362332,-4.387269,3.595080,-3.761969,5.173197,-7.940330,3.043736,1.119993,2.779834,-6.362649,-2.044961,0.814833,-8.733157,-7.006557,3.295760,5.361471,0.651601,-7.778201,-7.197163,-3.273799,0.810686,-5.587743,3.619863,4.153161,-9.278138,6.516605,8.190719,2.643605,3.606493,3.109340,7.142345,5.202552,-8.305885,0.448788,-3.636177,-9.674857,1.442524,-9.003669,-1.178534,6.128286,4.281995,-3.284679,2.320153,-8.045174,7.441063,2.832341,1.381024,0.254680,-4.881623,-9.170355,-6.656428,6.812389,7.157500,-2.258318,0.305513,-0.242555,-3.882773,-4.459077,-7.525136,-2.911241,-9.327547,-2.309884,-4.220167,3.811087,9.794201,6.352609,-1.387480,2.733893,-6.431666,-9.814599,8.971344,6.479658,5.305477,0.596866,-7.779547,3.103013,6.736918,-1.740223,8.648609,5.250611,9.255502,-0.391186,2.017838,-2.227157,7.303578,3.674933,3.995645,-7.231628,-1.400505,1.697958,3.362126,1.327637,-1.069973,8.858355,8.567534,-1.683487,5.139851,7.750646,-6.262592,3.435823,-6.766507,-2.132759,4.054163,-5.035094,-5.911715,-7.523794,-8.284494,8.049585,-1.000704,-7.752755,4.274493,-3.170345,8.203251,6.539424,8.449394,5.212752,1.902861,-2.879538,-0.562064,0.695338,-4.845681,-4.775558,9.412913,0.058044,-6.920688,-6.430380,4.003742,9.417816,-5.028825,-2.797116,9.847187,5.376978,-4.034736,9.650135,-7.706994,6.172795,-0.085115,4.746955,9.388845,8.188264,-8.819009,9.794389,6.357409,-9.944198,3.430820,4.014655,-5.746448,-0.470513,-4.661616,0.852642,-5.889905,4.442087,-7.762153,-3.497591,-5.537587,-3.394105,2.441069,-2.195073,-2.984312,-5.492578,7.399410,-8.100778,-7.839721,-7.964768,-9.461913,8.904577,4.300370,8.078293,5.118926,6.783868,-5.822513,-1.811750,-5.205986,-2.699398,6.994323,-9.373053,-0.234894,-9.954100,6.930361,-1.852976,-5.301389,-8.174118,-8.417615,-9.977527,-2.603849,8.732222,7.289325,-2.229310,-1.153908,-4.625465,-6.232006,9.282322,8.949877,2.480612,-6.169184,-4.986606,-1.591715,-5.363649,-2.035545,-5.573986,7.347160,7.248576,-7.988180,-1.058894,-5.143260,-1.599434,0.136547,-7.593516,-1.317830,-0.824031,7.998020,4.021982,3.457510,-6.219170,-2.240689,-9.097104,1.583188,-4.740611,-9.435626,-1.989475,5.833260,2.084716,-2.956275,8.068943,2.998214,-3.419490,-0.264711,-1.888866,8.061772,-3.954501,-2.580841,8.240671,-3.152607,4.554964,-0.695618,-7.122243,-1.621368,4.923505,3.656216,3.312816,-5.570183,7.782316,-3.400560,-5.471704,-3.924552,3.255533,-5.152651,-3.828413,6.572550,4.699373,-7.812701,7.204737,1.284064,8.724543,-4.834816,6.575206,-8.130356,4.227558,9.980663,1.941602,-2.308435,-2.832396,6.586259,-5.603950,-9.538516,0.355757,5.976878,8.893338,2.498637,2.089146,-1.946604,-2.803207,3.237179,3.796664,8.014994,-3.893821,8.862811,-5.909526,-0.677328,4.515902,-9.488653,0.625237,-5.246914,-8.800595,7.626246,6.898044,6.422754,9.793156,9.405206,7.067745,0.014230,2.482579,-5.700613,5.187079,-0.285638,7.205545,8.786604,-0.056046,3.624465,9.459139,-3.096596,-7.705948,-6.314618,-8.885193,-9.145233,3.416203,3.160617,2.668636,-0.715262,-6.347684,2.492598,-9.331537,-3.462213,-2.613704,6.016176,1.880369,-5.487679,0.092270,2.927448,3.387540,7.584611,1.385768,4.767360,-4.828942,5.344279,-7.532113,-9.662807,-5.568387,9.325508,7.795915,-9.506492,-1.200879,-3.559030,-0.026316,7.970815,-1.901357,-3.784632,2.574345,-0.526321,0.785434,4.770126,-6.523096,-2.379326,-6.165704,-3.455187,9.732237,-3.288972,1.994597,8.836934,-1.162938,3.175377,-6.115638,-9.931066,5.987334,0.509205,1.936301,-9.836951,7.130755,-1.431444,-6.139355,8.802528,6.304538,2.890639,-1.620615,-1.517516,9.969840,5.914027,1.869990,-2.452248,-3.462360,-3.530692,-0.593550,-5.416220,9.617924,7.198644,8.840752,2.016757,1.371046,9.196154,-7.233161,-1.402297,-5.839861,1.362850,-2.418107,-8.470571,5.346492,-6.924755,-7.023403,9.618816,0.931948,0.509550,1.909116,8.341417,-0.896294,5.543572,4.205406,-5.620606,7.083535,6.917532,6.308296,3.315434,-2.768680,-8.282419,-6.925668,9.195784,3.033957,-4.548733,1.184291,4.532346,-1.038740,-3.391060,-7.891579,0.512809,-1.400268,9.142815,6.874826,8.071918,-4.969817,-0.880133,2.565693,-5.021166,-6.873855,-6.995759,0.057433,8.728522,-8.842555,6.888850,5.310913,-3.849025,0.918013,5.498729,-7.817275,7.974484,7.175795,3.150815,8.182502,1.496305,-8.958860,9.684047,8.591888,-6.796604,2.933521,-5.488326,-9.374095,-1.749828,3.253438,-2.205806,-7.361760,-5.131797,4.555331,9.054103,-2.579133,8.209902,-2.372072,-8.751024,1.691809,3.890643,-3.329850,5.305909,-5.087845,-1.529501,-0.130964,-8.552250,-7.159882,-8.052987,-6.069146,-0.399842,-5.718905,-1.511637,6.116296,-4.077316,6.565223,1.243673,3.137027,-5.830709,-9.840148,8.109793,-7.693669,-0.301942,1.333804,-9.973502,-8.186671,-8.101092,-7.075794,0.347993,8.602927,3.108688,1.323417,-9.836560,6.009705,-3.164581,2.305263,-5.973110,2.995278,1.563729,7.919129,3.647056,-3.441600,-0.757558,-6.587623,-8.361666,0.396996,-1.429915,-5.051310,-2.875840,7.321506,-6.946698,-5.141779,-4.314453,4.060509,-2.459401,-5.579974,-3.052023,1.514929,7.991188,-4.034696,8.856509,2.167049,-4.570132,-0.061093,-0.699148,1.078752,2.782989,9.312542,-9.055405,9.266549,-1.734220,-3.347864,-3.966784,7.398724,2.620697,-4.108831,-2.260432,-6.449003,8.567179,6.606098,-1.287759,-2.703194,-5.839273,-6.481871,-3.798697,-0.538891,4.078671,4.842655,-6.887554,6.385491,-0.759999,9.024038,-8.031147,5.676525,-6.163496,5.360245,-5.730905,-6.524087,1.673138,7.771825,-8.089960,-2.878799,-7.978171,-9.616540,3.271097,-3.919668,0.625136,-9.011219,7.249677,6.480660,-8.402898,-6.542139,1.234180,5.915560,1.440242,-8.718396,-3.028023,6.643973,9.065631,-3.173047,-3.911457,-9.166633,-8.291932,2.852750,5.219374,1.878395,6.836850,-0.815982,2.260976,8.553287,-0.783311,-4.958710,1.845115,4.256816,6.544920,4.638772,-2.670078,6.367078,-9.942788,-2.217856,-2.409836,0.681555,7.455266,-9.907842,8.604936,-4.289165,9.943841,7.642698,-2.297490,4.351746,-1.504913,4.962286,9.325836,7.777139,4.235864,5.390636,7.665701,8.523538,-0.991632,6.879336,-2.273832,4.368902,6.943004,-6.979272,8.095033,3.158610,-7.831599,-6.622681,-8.643181,2.226475,8.956409,9.160685,7.945415,8.044723,-7.564068,2.679291,-1.042841,-2.949411,9.315693,-5.555749,5.620694,-0.546059,-8.154236,1.402000,-3.944227,5.907131,1.845896,4.944961,7.155143,-7.384718,8.931655,-5.286969,-5.917839,8.988109,5.571004,-4.304707,-5.793719,-5.782912,5.651975,3.927335,-1.625088,8.712321,6.870038,-9.726351,7.550167,-8.407167,8.619270,2.241811,3.752564,9.767541,-3.701929,1.785104,4.458894,0.612008,4.190690,-8.947690,8.133077,4.786509,-0.614891,-4.889567,-1.669657,8.319677,2.639280,3.717144,3.385533,-6.216231,-2.345278,-7.077202,3.640780,-6.107495,-0.656994,7.713414,-6.108098,-1.092422,-3.656293,7.005711,4.535582,-4.394232,9.042094,-4.401848,2.673540,-9.137845,-2.740509,7.886038,-9.349411,9.762205,-5.413981,1.228204,5.157717,-7.889027,-3.945703,1.918592,-1.115769,-9.473670,6.569683,-0.188115,7.316226,4.880004,-3.299881,-6.987057,-8.393008,3.130680,-4.276663,-7.235567,9.920790,5.164245,-4.306901,0.769067,9.733367,-4.720953,-1.758563,5.389874,5.435148,-8.323239,7.769056,-2.465478,-5.041641,-7.254445,-7.368174,-4.142293,1.892945,6.640215,-1.346345,-6.795407,7.264186,9.985340,-4.530232,3.880946,9.573629,2.565436,-7.726520,-3.581566,1.412295,7.524931,4.848113,9.659609,-7.855018,-2.877528,-4.384810,-2.018480,6.278867,5.604033,-6.332295,8.535204,-1.031350,-6.806009,5.581584,1.331020,7.240096,-4.295553,0.726419,-2.929015,4.698503,-9.992630,0.690087,1.393769,-3.279598,-7.838386,9.759024,-8.960620,-8.854883,4.821643,-4.434907,6.760439,7.185285,-9.756592,4.674890,-7.704975,-6.397962,-3.456392,2.536075,-6.030635,3.288693,-7.672183,1.523516,-3.229302,7.016050,0.385668,9.880052,-6.981728,-7.621823,4.218339,2.982188,-7.290508,-7.047647,9.380511,-7.402532,-1.956970,6.522973,8.865264,3.242850,-5.473316,3.703320,-5.758636,-8.293964,2.202419,-8.221777,6.982310,9.606096,3.488810,-2.092244,9.990365,-4.411806,-6.729812,6.104102,-9.341128,-3.384333,9.167148,-0.018968,-9.172986,-0.435494,-9.451533,-4.501898,-9.414880,4.172160,0.431716,9.575371,9.357506,-7.990326,0.201751,4.521448,6.800361,-2.543924,1.258128,-3.428513,-6.683950,8.650108,5.155951,-9.725701,7.533085,7.737129,7.180169,-6.002624,3.345728,7.183214,-7.191872,-1.035019,-0.527722,-0.798826,-2.375447,2.808807,-2.228570,5.804527,-5.832260,8.355711,0.608434,-2.026172,3.886398,7.246845,-5.924586,5.835019,1.378995,-1.467090,5.508052,4.643255,3.101711,-3.955316,-0.018420,-0.470601,5.263930,-1.700785,-4.925471,9.276216,2.543352,-5.487464,9.113160,-8.083077,-7.258378,-7.905553,-6.959587,8.341099,-9.004003,1.509808,9.799906,3.533018,3.037559,4.547767,1.520124,-4.225462,-6.205971,-2.889482,-1.529227,-9.160838,5.033180,-7.573673,9.843016,1.253487,1.243838,-7.356870,-8.242931,8.851870,0.660805,-1.858200,-9.043542,-5.672750,9.781940,-9.016753,0.393251,-9.754117,-0.733573,-0.080404,-1.465643,8.284379,-7.496724,-3.528218,-2.205560,6.826477,4.020893,-8.816597,-7.554391,-9.656868,1.626568,4.565115,4.431660,2.984973,4.510164,1.408792,4.497427,0.050481,-1.256782,3.049154,-0.248087,7.272129,-1.870580,5.577266,-1.463485,-6.150787,-4.427338,-5.088114,-2.223165,8.360325,-2.200837,3.665391,-2.173243,0.906246,9.784169,5.724916,9.886142,3.665979,-0.596780,-2.674269,-0.361191,-5.309288,5.849104,-9.980870,-0.877113,3.806985,8.651834,-0.554208,9.673986,-4.700775,-8.878263,-2.242732,-2.569283,7.840854,-9.413722,8.188482,6.933327,-0.787153,6.608060,-7.236826,-2.829813,-1.894355,-1.910963,0.028329,-0.755596,-6.861050,5.160120,7.353021,-5.103679,-3.245241,-6.496919,3.770880,7.811598,-2.337989,9.570580,-7.149663,-6.223244,4.745112,-8.474274,7.565634,-0.087692,2.070715,-5.036381,-8.386263,-4.974378,-0.637808,-5.962383,-2.396667,8.782018,-8.181978,8.205115,-0.472350,0.002889,-1.798465,0.611054,3.281047,-8.227713,2.645186,1.505731,4.704139,0.234903,-6.499412,-3.334473,6.538525,-3.941120,-9.790922,3.068540,4.875736,-5.311068,-0.511047,6.875528,3.966945,-7.497319,7.330637,-2.590725,2.319486,-5.749554,-5.714528,-6.334886,-8.801526,3.949932,-2.247209,8.792171,-7.515377,-4.634730,3.381047,-9.651661,1.404618,-1.784243,-8.566663,4.051549,-7.390339,2.391930,-5.956107,-6.638467,-9.660706,1.375987,-7.458996,2.797724,-1.608354,8.570705,7.992928,4.438750,2.158696,8.513329,-5.929767,5.985285,-8.211998,0.762058,7.621610,4.411608,-5.983155,-0.530043,-8.552580,6.385345,0.598611,-8.355320,-1.644316,8.207673,7.330243,0.746175,-6.040465,-5.419093,3.518087,6.787902,-8.076819,8.923673,-9.191457,4.040710,0.497763,5.027596,-6.877094,0.766380,0.527060,-6.128787,-5.792397,3.231967,-8.873933,6.446985,2.127223,-9.151281,-2.038735,-3.220582,-7.241112,5.131900,-6.398636,-2.700668,-6.155580,1.094916,4.386694,1.324679,8.604603,-2.469228,-1.897514,-7.862031,-7.788152,6.487447,-3.976162,7.953309,-8.663707,-1.698200,-2.859643,7.130692,-9.548726,-6.169391,-3.597805,5.291926,-3.461539,8.506125,-2.161830,9.861056,7.403668,0.046365,-2.480622,-9.137254,6.974989,-9.058600,4.089787,-1.489152,-6.414478,2.966605,-2.608385,7.294223,-2.543237,-1.327916,-6.640795,-4.807874,-1.765206,0.626777,-4.563637,7.310934,-5.652181,0.047214,6.360313,2.227988,8.539438,-8.302398,-5.732109,-3.186218,8.289674,5.274303,-7.155169,5.120623,1.455495,-5.271951,-0.982343,6.369997,4.385453,-4.335840,-4.240837,-9.210707,9.162317,-6.545384,-0.977476,-8.460542,4.578186,0.020238,0.490923,-8.111935,4.216732,7.365303,5.190090,-4.933014,1.223524,2.309740,4.249882,2.860560,4.999448,-8.448481,8.995127,4.736467,-0.330281,-6.527048,7.109132,-1.542633,8.294594,-2.481399,-1.028282,3.197881,7.067371,3.651388,3.700177,7.617559,-1.331785,-7.927568,0.415504,-5.623543,7.841571,1.573472,-4.968089,0.785833,3.182075,-2.675448,2.923130,-6.433737,-3.510063,2.636219,-6.977064,-3.449107,-2.959183,-9.383227,-6.150687,6.541853,-4.604329,-4.759607,-6.162886,-4.573007,2.373255,6.778975,1.703302,-7.626804,4.037185,5.171100,-8.045713,3.323668,-6.021955,-6.180593,-5.895913,-2.543831,3.440286,4.128016,8.840443,3.303357,-6.491942,3.981911,-1.778900,-7.578567,7.555085,-2.601464,6.865606,-0.197163,5.373689,1.617694,-2.003280,-4.795911,-2.315778,6.318822,-1.900899,7.322662,0.936465,-6.631097,-7.623151,1.730139,-2.872158,8.017366,3.973492,6.436350,7.497543,5.615269,0.867297,5.659275,9.994411,4.648530,1.025523,7.784119,0.430204,9.757820,-5.077180,5.711348,-8.853432,-2.789472,-4.652668,-6.658160,-7.291409,6.635729,-6.734807,-0.246594,7.803410,5.536009,-3.802035,9.890867,-0.937144,8.414880,7.246906,0.974610,3.170617,-2.140563,2.107136,0.234209,-6.476070,4.684444,2.319158,-4.478209,7.615967,-4.950066,-5.685435,1.051621,-3.660899,5.061208,2.277641,0.568398,8.748578,-1.318976,-2.868474,-2.163988,-4.101078,7.783425,7.808716,-1.664836,7.975305,-7.488228,-7.222475,-0.966957,-9.603961,5.032208,-1.104616,9.525293,-0.133838,1.843466,2.283001,1.234109,1.007594,-7.198707,-1.693539,-6.372222,0.150058,-9.287100,-1.676839,-7.111112,-2.770286,7.093573,-2.909820,-3.901643,-5.408967,3.922742,-5.957077,-8.583601,-3.663208,-6.514120,4.940846,-0.721028,-7.354186,3.283424,-7.983261,4.175277,3.203998,5.055073,9.995065,-0.629873,1.050683,-8.299849,-5.636857,-1.650888,5.614279,8.180931,9.683430,4.327844,-5.967522,-3.595548,-5.004071,-2.195367,-2.351341,7.758305,5.762538,-7.495256,7.759014,-3.927259,4.529219,-3.206204,-7.324141,6.304014,-8.951024,9.510053,5.510094,8.126724,4.776755,9.228614,2.258909,-8.533743,-3.076826,-9.878706,8.982483,8.197158,2.206500,5.688500,-9.580449,3.374395,1.547559,3.430448,-5.247634,-1.813851,-0.439223,-6.665814,-2.789196,1.937165,2.455495,-0.635679,-0.129077,2.643189,-8.963020,1.076737,1.795268,0.276641,3.301865,-9.089946,1.377783,-7.789231,-0.580942,6.203490,4.601348,-7.888452,-0.915444,9.150129,-7.522392,-7.736694,4.261247,1.246799,-5.622550,8.570916,-1.286786,-0.090238,-9.415928,2.499264,4.792247,0.881301,2.320033,5.332890,-2.121110,1.473006,5.760842,2.595346,0.426483,7.172633,7.893019,-7.092148,-5.598363,2.439403,4.432668,-9.702290,-7.526108], dtype = "float32")#candidate|6598|(1800,)|const|float32
call_6597 = relay.TupleGetItem(func_1021_call(relay.reshape(call_6580.astype('float32'), [2, 3, 8]), relay.reshape(const_6598.astype('float32'), [1800, 1]), ), 6)
call_6599 = relay.TupleGetItem(func_1025_call(relay.reshape(call_6580.astype('float32'), [2, 3, 8]), relay.reshape(const_6598.astype('float32'), [1800, 1]), ), 6)
output = relay.Tuple([call_6553,const_6574,call_6580,call_6582,uop_6587,call_6597,const_6598,])
output2 = relay.Tuple([call_6554,const_6574,call_6581,call_6583,uop_6589,call_6599,const_6598,])
func_6600 = relay.Function([], output)
mod['func_6600'] = func_6600
mod = relay.transform.InferType()(mod)
mutated_mod['func_6600'] = func_6600
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6600_call = mutated_mod.get_global_var('func_6600')
call_6601 = func_6600_call()
output = call_6601
func_6602 = relay.Function([], output)
mutated_mod['func_6602'] = func_6602
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5166_call = mod.get_global_var('func_5166')
func_5168_call = mutated_mod.get_global_var('func_5168')
call_6638 = relay.TupleGetItem(func_5166_call(), 0)
call_6639 = relay.TupleGetItem(func_5168_call(), 0)
output = relay.Tuple([call_6638,])
output2 = relay.Tuple([call_6639,])
func_6640 = relay.Function([], output)
mod['func_6640'] = func_6640
mod = relay.transform.InferType()(mod)
output = func_6640()
func_6641 = relay.Function([], output)
mutated_mod['func_6641'] = func_6641
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6645 = relay.var("var_6645", dtype = "float64", shape = (11, 6, 7))#candidate|6645|(11, 6, 7)|var|float64
uop_6646 = relay.sqrt(var_6645.astype('float64')) # shape=(11, 6, 7)
func_4064_call = mod.get_global_var('func_4064')
func_4066_call = mutated_mod.get_global_var('func_4066')
call_6648 = func_4064_call()
call_6649 = func_4064_call()
uop_6661 = relay.asinh(uop_6646.astype('float32')) # shape=(11, 6, 7)
bop_6667 = relay.left_shift(uop_6661.astype('int8'), relay.reshape(uop_6646.astype('int8'), relay.shape_of(uop_6661))) # shape=(11, 6, 7)
func_5217_call = mod.get_global_var('func_5217')
func_5219_call = mutated_mod.get_global_var('func_5219')
call_6675 = relay.TupleGetItem(func_5217_call(), 3)
call_6676 = relay.TupleGetItem(func_5219_call(), 3)
output = relay.Tuple([call_6648,bop_6667,call_6675,])
output2 = relay.Tuple([call_6649,bop_6667,call_6676,])
func_6680 = relay.Function([var_6645,], output)
mod['func_6680'] = func_6680
mod = relay.transform.InferType()(mod)
mutated_mod['func_6680'] = func_6680
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6681 = relay.var("var_6681", dtype = "float64", shape = (11, 6, 7))#candidate|6681|(11, 6, 7)|var|float64
func_6680_call = mutated_mod.get_global_var('func_6680')
call_6682 = func_6680_call(var_6681)
output = call_6682
func_6683 = relay.Function([var_6681], output)
mutated_mod['func_6683'] = func_6683
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6706 = relay.var("var_6706", dtype = "float64", shape = (4, 14, 6))#candidate|6706|(4, 14, 6)|var|float64
var_6707 = relay.var("var_6707", dtype = "float64", shape = (4, 14, 6))#candidate|6707|(4, 14, 6)|var|float64
bop_6708 = relay.mod(var_6706.astype('float64'), relay.reshape(var_6707.astype('float64'), relay.shape_of(var_6706))) # shape=(4, 14, 6)
func_5859_call = mod.get_global_var('func_5859')
func_5861_call = mutated_mod.get_global_var('func_5861')
const_6713 = relay.const([5.026795,7.161653,1.865684,1.217146,-1.728841,4.884501,5.728213,1.213816,-1.861131,-7.598360,4.945452,4.295432,-4.080708,4.398349,-8.752663,4.090128,8.264069,-9.801666,5.825464,-8.429785,4.146104,6.707328,1.516411,-4.799528,5.997578,-4.696044,4.886611,2.172135,4.964813,-8.425720,3.655860,-7.318245,-2.899224,4.146913,-6.185380,9.320208,9.603257,-4.941737,2.051271,-3.429739,5.907447,1.213815,-4.276526,-8.973883,-9.455714,7.516848,-2.548258,-1.720615], dtype = "float32")#candidate|6713|(48,)|const|float32
call_6712 = relay.TupleGetItem(func_5859_call(relay.reshape(const_6713.astype('float32'), [48,])), 1)
call_6714 = relay.TupleGetItem(func_5861_call(relay.reshape(const_6713.astype('float32'), [48,])), 1)
bop_6715 = relay.add(var_6707.astype('int16'), relay.reshape(var_6706.astype('int16'), relay.shape_of(var_6707))) # shape=(4, 14, 6)
output = relay.Tuple([bop_6708,call_6712,const_6713,bop_6715,])
output2 = relay.Tuple([bop_6708,call_6714,const_6713,bop_6715,])
func_6721 = relay.Function([var_6706,var_6707,], output)
mod['func_6721'] = func_6721
mod = relay.transform.InferType()(mod)
mutated_mod['func_6721'] = func_6721
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6721_call = mutated_mod.get_global_var('func_6721')
var_6723 = relay.var("var_6723", dtype = "float64", shape = (4, 14, 6))#candidate|6723|(4, 14, 6)|var|float64
var_6724 = relay.var("var_6724", dtype = "float64", shape = (4, 14, 6))#candidate|6724|(4, 14, 6)|var|float64
call_6722 = func_6721_call(var_6723,var_6724,)
output = call_6722
func_6725 = relay.Function([var_6723,var_6724,], output)
mutated_mod['func_6725'] = func_6725
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3900_call = mod.get_global_var('func_3900')
func_3902_call = mutated_mod.get_global_var('func_3902')
call_6756 = func_3900_call()
call_6757 = func_3900_call()
output = relay.Tuple([call_6756,])
output2 = relay.Tuple([call_6757,])
func_6761 = relay.Function([], output)
mod['func_6761'] = func_6761
mod = relay.transform.InferType()(mod)
mutated_mod['func_6761'] = func_6761
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6761_call = mutated_mod.get_global_var('func_6761')
call_6762 = func_6761_call()
output = call_6762
func_6763 = relay.Function([], output)
mutated_mod['func_6763'] = func_6763
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6793 = relay.var("var_6793", dtype = "float32", shape = (16, 9, 3))#candidate|6793|(16, 9, 3)|var|float32
var_6794 = relay.var("var_6794", dtype = "float32", shape = (16, 9, 3))#candidate|6794|(16, 9, 3)|var|float32
bop_6795 = relay.greater_equal(var_6793.astype('bool'), relay.reshape(var_6794.astype('bool'), relay.shape_of(var_6793))) # shape=(16, 9, 3)
output = bop_6795
output2 = bop_6795
func_6800 = relay.Function([var_6793,var_6794,], output)
mod['func_6800'] = func_6800
mod = relay.transform.InferType()(mod)
mutated_mod['func_6800'] = func_6800
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6800_call = mutated_mod.get_global_var('func_6800')
var_6802 = relay.var("var_6802", dtype = "float32", shape = (16, 9, 3))#candidate|6802|(16, 9, 3)|var|float32
var_6803 = relay.var("var_6803", dtype = "float32", shape = (16, 9, 3))#candidate|6803|(16, 9, 3)|var|float32
call_6801 = func_6800_call(var_6802,var_6803,)
output = call_6801
func_6804 = relay.Function([var_6802,var_6803,], output)
mutated_mod['func_6804'] = func_6804
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6600_call = mod.get_global_var('func_6600')
func_6602_call = mutated_mod.get_global_var('func_6602')
call_6828 = relay.TupleGetItem(func_6600_call(), 5)
call_6829 = relay.TupleGetItem(func_6602_call(), 5)
func_4064_call = mod.get_global_var('func_4064')
func_4066_call = mutated_mod.get_global_var('func_4066')
call_6832 = func_4064_call()
call_6833 = func_4064_call()
output = relay.Tuple([call_6828,call_6832,])
output2 = relay.Tuple([call_6829,call_6833,])
func_6851 = relay.Function([], output)
mod['func_6851'] = func_6851
mod = relay.transform.InferType()(mod)
mutated_mod['func_6851'] = func_6851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6851_call = mutated_mod.get_global_var('func_6851')
call_6852 = func_6851_call()
output = call_6852
func_6853 = relay.Function([], output)
mutated_mod['func_6853'] = func_6853
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5327_call = mod.get_global_var('func_5327')
func_5328_call = mutated_mod.get_global_var('func_5328')
call_6859 = relay.TupleGetItem(func_5327_call(), 0)
call_6860 = relay.TupleGetItem(func_5328_call(), 0)
output = call_6859
output2 = call_6860
func_6868 = relay.Function([], output)
mod['func_6868'] = func_6868
mod = relay.transform.InferType()(mod)
mutated_mod['func_6868'] = func_6868
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6868_call = mutated_mod.get_global_var('func_6868')
call_6869 = func_6868_call()
output = call_6869
func_6870 = relay.Function([], output)
mutated_mod['func_6870'] = func_6870
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2660_call = mod.get_global_var('func_2660')
func_2662_call = mutated_mod.get_global_var('func_2662')
call_6896 = relay.TupleGetItem(func_2660_call(), 2)
call_6897 = relay.TupleGetItem(func_2662_call(), 2)
var_6916 = relay.var("var_6916", dtype = "bool", shape = (14, 1800))#candidate|6916|(14, 1800)|var|bool
bop_6917 = relay.bitwise_and(call_6896.astype('uint32'), relay.reshape(var_6916.astype('uint32'), relay.shape_of(call_6896))) # shape=(14, 1800)
bop_6920 = relay.bitwise_and(call_6897.astype('uint32'), relay.reshape(var_6916.astype('uint32'), relay.shape_of(call_6897))) # shape=(14, 1800)
func_6761_call = mod.get_global_var('func_6761')
func_6763_call = mutated_mod.get_global_var('func_6763')
call_6928 = relay.TupleGetItem(func_6761_call(), 0)
call_6929 = relay.TupleGetItem(func_6763_call(), 0)
output = relay.Tuple([bop_6917,call_6928,])
output2 = relay.Tuple([bop_6920,call_6929,])
func_6931 = relay.Function([var_6916,], output)
mod['func_6931'] = func_6931
mod = relay.transform.InferType()(mod)
mutated_mod['func_6931'] = func_6931
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6932 = relay.var("var_6932", dtype = "bool", shape = (14, 1800))#candidate|6932|(14, 1800)|var|bool
func_6931_call = mutated_mod.get_global_var('func_6931')
call_6933 = func_6931_call(var_6932)
output = call_6933
func_6934 = relay.Function([var_6932], output)
mutated_mod['func_6934'] = func_6934
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5327_call = mod.get_global_var('func_5327')
func_5328_call = mutated_mod.get_global_var('func_5328')
call_7016 = relay.TupleGetItem(func_5327_call(), 0)
call_7017 = relay.TupleGetItem(func_5328_call(), 0)
output = call_7016
output2 = call_7017
func_7029 = relay.Function([], output)
mod['func_7029'] = func_7029
mod = relay.transform.InferType()(mod)
output = func_7029()
func_7030 = relay.Function([], output)
mutated_mod['func_7030'] = func_7030
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4120_call = mod.get_global_var('func_4120')
func_4121_call = mutated_mod.get_global_var('func_4121')
call_7074 = relay.TupleGetItem(func_4120_call(), 4)
call_7075 = relay.TupleGetItem(func_4121_call(), 4)
func_5048_call = mod.get_global_var('func_5048')
func_5051_call = mutated_mod.get_global_var('func_5051')
const_7099 = relay.const([9,-9,-8,-9,7,8,-8,4,-10,-9,-2,3,8,4,-1,-4,-6,-1,1,-3,-4,6,9,3,-10,4,1,-1,-7,4,6,8,1,6,-1,-10], dtype = "uint32")#candidate|7099|(36,)|const|uint32
const_7100 = relay.const([[-2,-3,-8,-5,6,3,-1,-8,-5,-9,8,5,2,10,5,-7,7,-9,-6,7,10,7,-1,10,-1,4,9,-1,-3,8,-1,9,2,4,-4,-1,3,4,2,9,4,-5,3,3,8,-7,6,-8,4,8,5,10,5,3,1,1,7,8,3,-7,-3,-10,10,9,2,-2,5,6,-10,-9,10,4,-7,9,-4,-9,-3,-7,-8,9,-4,-6,4,10,10,-5,-9,-10,-1,-6,-5,3,-5,1,7,-3,10,9,-3,10,-8,8,1,-6,6,9,-9,1,5,9,-1,-2,-6,-7,-1,4,9,9,-9,4,8,-9,10,-3,2,-8,6,6,-2,-3,-7,2,-1,7,5,7,9,-10,-8,5,-7,-4,4,9,10,-8,-10,-2,1,-5,3,10,10,10,-7,9,-5,-10,-1,-4,10,-8,4,3,1,4,2,5,-7,9,7,9,10,-2,6,-2,2,9,1,-3,-2,8,4,5,8,5,-3,-9,4,2,9,-8,-5,9,9,-10,-1,-4,-4,6,2,-1,-8,7,-4,-1,4,-6,-4,-5,-6,-5,-7,-10,7,-5,9,-5,-6,8,1,5,-7,-6,-5,-6,-8,-8,2,-6,-5,-8,-6,-1,5,-6,-7,4,3,6,1,-9,-7,-3,-4,-7,-1,1,-8,-2,10,-1,-9,2,3,10,-4,-2,-5,-7,6,-7,-9,-2,1,-1,-2,-1,-7,10,2,3,-8,-4,-2,1,-5,2,-7,10,-10,2,-5,-2,-5,-2,4,-3,-2,7,-8,-1,7,6,10,3,-10,4,9,8,2,-10,-9,1,2,5,-8,-2,10,10,-5,-9,-9,2,9,-1,2,-7,6,2,8,7,-4,9,-8,-1,4,-10,3,1,2,4,5,6,-9,-9,-6,3,7,3,2,10,5,9,2,1,3,-9,-7,10,-1,-5,5,-8,-9,-8,6,5,8,1]], dtype = "uint8")#candidate|7100|(1, 360)|const|uint8
call_7098 = relay.TupleGetItem(func_5048_call(relay.reshape(const_7099.astype('uint32'), [36,]), relay.reshape(const_7100.astype('uint8'), [360,]), ), 0)
call_7101 = relay.TupleGetItem(func_5051_call(relay.reshape(const_7099.astype('uint32'), [36,]), relay.reshape(const_7100.astype('uint8'), [360,]), ), 0)
func_3351_call = mod.get_global_var('func_3351')
func_3353_call = mutated_mod.get_global_var('func_3353')
call_7126 = func_3351_call(relay.reshape(call_7098.astype('float32'), [4, 4, 15]))
call_7127 = func_3351_call(relay.reshape(call_7098.astype('float32'), [4, 4, 15]))
func_1683_call = mod.get_global_var('func_1683')
func_1685_call = mutated_mod.get_global_var('func_1685')
const_7141 = relay.const([6.183216,-7.354316,-0.222061,5.145888,-6.608294,7.063597,3.033077,-6.731454,1.326052,8.347669,5.807468,-0.070026,1.879883,-0.387541,4.164176,8.469838,0.968127,6.846628,-5.495997,-9.020772,-5.505383,7.196849,7.231657,7.400612,0.839131,1.841769,3.663015,8.498109,5.417417,9.395853,4.117015,8.566021,1.892645,9.605819,0.707079,-8.331099,5.297182,-6.384741,-9.313033,8.191875,-2.019273,-1.553603,4.771136,-6.697566,5.242541,0.608978,6.311287,-6.425741,-6.312000,-8.112501,5.099569,2.320061,-1.216123,9.105919,8.904078,3.243439,8.847292,-6.610532,8.756676,-9.842793,-0.797198,5.627962,-3.976578,-9.581781,4.539374,1.213765,-2.409677,-5.988713,-9.691661,4.479160,-2.623975,6.526504,-8.683752,-0.874050,-3.112012,3.227107,3.915710,-6.169168,-6.047787,-6.824506,-5.545464,-1.248941,-2.046276,2.811121,-8.180365,4.059041,0.591340,-8.022430,-8.942152,5.991822,3.146851,1.469078,-0.055162,8.107339,3.920897,-2.678984,0.725771,-6.536900,2.559740,-5.469166,-7.087463,2.203525,-3.194479,4.054181,-8.801258,6.393223,8.721627,-0.623606,6.707380,-2.850769,8.379446,-8.256312], dtype = "float32")#candidate|7141|(112,)|const|float32
call_7140 = relay.TupleGetItem(func_1683_call(relay.reshape(const_7141.astype('float32'), [14, 2, 4])), 0)
call_7142 = relay.TupleGetItem(func_1685_call(relay.reshape(const_7141.astype('float32'), [14, 2, 4])), 0)
func_3086_call = mod.get_global_var('func_3086')
func_3088_call = mutated_mod.get_global_var('func_3088')
call_7151 = func_3086_call()
call_7152 = func_3086_call()
output = relay.Tuple([call_7074,call_7098,const_7099,const_7100,call_7126,call_7140,const_7141,call_7151,])
output2 = relay.Tuple([call_7075,call_7101,const_7099,const_7100,call_7127,call_7142,const_7141,call_7152,])
func_7172 = relay.Function([], output)
mod['func_7172'] = func_7172
mod = relay.transform.InferType()(mod)
output = func_7172()
func_7173 = relay.Function([], output)
mutated_mod['func_7173'] = func_7173
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5797_call = mod.get_global_var('func_5797')
func_5799_call = mutated_mod.get_global_var('func_5799')
call_7174 = relay.TupleGetItem(func_5797_call(), 0)
call_7175 = relay.TupleGetItem(func_5799_call(), 0)
func_5984_call = mod.get_global_var('func_5984')
func_5987_call = mutated_mod.get_global_var('func_5987')
var_7191 = relay.var("var_7191", dtype = "bool", shape = (25200,))#candidate|7191|(25200,)|var|bool
call_7190 = func_5984_call(relay.reshape(var_7191.astype('bool'), [14, 1800]))
call_7192 = func_5984_call(relay.reshape(var_7191.astype('bool'), [14, 1800]))
output = relay.Tuple([call_7174,call_7190,var_7191,])
output2 = relay.Tuple([call_7175,call_7192,var_7191,])
func_7200 = relay.Function([var_7191,], output)
mod['func_7200'] = func_7200
mod = relay.transform.InferType()(mod)
mutated_mod['func_7200'] = func_7200
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7201 = relay.var("var_7201", dtype = "bool", shape = (25200,))#candidate|7201|(25200,)|var|bool
func_7200_call = mutated_mod.get_global_var('func_7200')
call_7202 = func_7200_call(var_7201)
output = call_7202
func_7203 = relay.Function([var_7201], output)
mutated_mod['func_7203'] = func_7203
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3940_call = mod.get_global_var('func_3940')
func_3941_call = mutated_mod.get_global_var('func_3941')
call_7230 = relay.TupleGetItem(func_3940_call(), 0)
call_7231 = relay.TupleGetItem(func_3941_call(), 0)
output = relay.Tuple([call_7230,])
output2 = relay.Tuple([call_7231,])
func_7264 = relay.Function([], output)
mod['func_7264'] = func_7264
mod = relay.transform.InferType()(mod)
mutated_mod['func_7264'] = func_7264
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7264_call = mutated_mod.get_global_var('func_7264')
call_7265 = func_7264_call()
output = call_7265
func_7266 = relay.Function([], output)
mutated_mod['func_7266'] = func_7266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4193_call = mod.get_global_var('func_4193')
func_4194_call = mutated_mod.get_global_var('func_4194')
call_7297 = relay.TupleGetItem(func_4193_call(), 0)
call_7298 = relay.TupleGetItem(func_4194_call(), 0)
output = relay.Tuple([call_7297,])
output2 = relay.Tuple([call_7298,])
func_7300 = relay.Function([], output)
mod['func_7300'] = func_7300
mod = relay.transform.InferType()(mod)
mutated_mod['func_7300'] = func_7300
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7300_call = mutated_mod.get_global_var('func_7300')
call_7301 = func_7300_call()
output = call_7301
func_7302 = relay.Function([], output)
mutated_mod['func_7302'] = func_7302
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6506_call = mod.get_global_var('func_6506')
func_6508_call = mutated_mod.get_global_var('func_6508')
call_7311 = func_6506_call()
call_7312 = func_6506_call()
output = call_7311
output2 = call_7312
func_7317 = relay.Function([], output)
mod['func_7317'] = func_7317
mod = relay.transform.InferType()(mod)
output = func_7317()
func_7318 = relay.Function([], output)
mutated_mod['func_7318'] = func_7318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6868_call = mod.get_global_var('func_6868')
func_6870_call = mutated_mod.get_global_var('func_6870')
call_7330 = func_6868_call()
call_7331 = func_6868_call()
func_1524_call = mod.get_global_var('func_1524')
func_1527_call = mutated_mod.get_global_var('func_1527')
call_7353 = func_1524_call(relay.reshape(call_7330.astype('float32'), [2, 4, 4]))
call_7354 = func_1524_call(relay.reshape(call_7330.astype('float32'), [2, 4, 4]))
func_1664_call = mod.get_global_var('func_1664')
func_1667_call = mutated_mod.get_global_var('func_1667')
var_7364 = relay.var("var_7364", dtype = "float32", shape = (63,))#candidate|7364|(63,)|var|float32
const_7365 = relay.const([-7.810116,2.333786,2.954169,0.220478,7.248317,-0.172359,4.074739,-7.668064,-6.789577,5.896998,-8.840326,-9.797260,-0.212669,1.230857,3.586237,6.207423,-9.235311,4.337500,-9.761854,-6.977858,-8.079846,2.671106,1.791423,1.285082,-9.147868,-2.486490,-3.390864,8.252730,-6.375488,8.490247,-0.134672,-1.300626,0.121830,-7.505558,-8.359191,2.478558,6.387469,-0.789765,-5.269548,-0.951705,6.576040,-7.530250,1.668567,-4.843385,-8.649384,-0.422288,7.056908,4.187308,-3.347889,-6.001073,-7.032836,-8.134225,-9.750877,-5.998682,-8.447723,-2.417673,-0.040591,3.030517,-6.225517,7.525049,1.907979,0.801000,-6.570758,1.394226,-3.280633,-9.508822,7.429879,-2.442891,4.386320,7.996609,9.298660,2.393322,-8.792963,-9.143064,7.387743,3.536181,4.205567,5.220018,-4.309523,-0.074593,-9.988394,9.251213,0.039772,-8.310132,2.562080,-1.230443,1.369750,-1.138168,0.301339,-6.375162,-3.389272,7.325821,4.866069,-8.512407,-9.625213,-0.583824,8.001444,-6.369012,-0.476726,0.313797,-6.103388,-1.368430,-6.229793,6.912326,7.940794,-0.996564,-2.667077,6.000736,-4.608214,2.955391,8.527809,0.724388,4.218782,6.368975,-9.950797,5.991623,6.793370,-2.458651,-3.128669,2.096719,-4.662783,-8.571689,6.313140,-5.303087,9.334103,-2.575893,1.095408,9.938492,-9.920690,-1.223402,7.614645,8.943870,-1.611563,-5.725523,-0.635598,-6.696236,6.509798,4.842318,0.555341,-0.726828,2.765247,5.570582,7.368430,7.457798,2.796292,-5.950094,-1.557030,9.814971,-8.135872,5.851437,5.981107,7.279064,-5.577119,-4.926505,-6.144318,-8.052821,0.655366,-3.833363,-2.643243,-7.393485,-6.110646,1.056371,2.450003,7.740737,-1.293486,-8.974020,-9.381857,5.182441,-5.330173,-9.464303,-8.706957,-9.380542,-2.329793,-9.618102,-2.006439,2.327192,-0.990727,0.110157,3.828831,5.937709,-8.511798,-1.246601,3.995576,1.211972,4.373198,-0.489053,6.298091,3.620444,3.978562], dtype = "float32")#candidate|7365|(189,)|const|float32
call_7363 = relay.TupleGetItem(func_1664_call(relay.reshape(var_7364.astype('float32'), [7, 1, 9]), relay.reshape(const_7365.astype('float32'), [7, 3, 9]), ), 0)
call_7366 = relay.TupleGetItem(func_1667_call(relay.reshape(var_7364.astype('float32'), [7, 1, 9]), relay.reshape(const_7365.astype('float32'), [7, 3, 9]), ), 0)
output = relay.Tuple([call_7330,call_7353,call_7363,var_7364,const_7365,])
output2 = relay.Tuple([call_7331,call_7354,call_7366,var_7364,const_7365,])
func_7373 = relay.Function([var_7364,], output)
mod['func_7373'] = func_7373
mod = relay.transform.InferType()(mod)
var_7374 = relay.var("var_7374", dtype = "float32", shape = (63,))#candidate|7374|(63,)|var|float32
output = func_7373(var_7374)
func_7375 = relay.Function([var_7374], output)
mutated_mod['func_7375'] = func_7375
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2842_call = mod.get_global_var('func_2842')
func_2844_call = mutated_mod.get_global_var('func_2844')
call_7398 = relay.TupleGetItem(func_2842_call(), 0)
call_7399 = relay.TupleGetItem(func_2844_call(), 0)
output = relay.Tuple([call_7398,])
output2 = relay.Tuple([call_7399,])
func_7408 = relay.Function([], output)
mod['func_7408'] = func_7408
mod = relay.transform.InferType()(mod)
output = func_7408()
func_7409 = relay.Function([], output)
mutated_mod['func_7409'] = func_7409
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7264_call = mod.get_global_var('func_7264')
func_7266_call = mutated_mod.get_global_var('func_7266')
call_7436 = relay.TupleGetItem(func_7264_call(), 0)
call_7437 = relay.TupleGetItem(func_7266_call(), 0)
func_3439_call = mod.get_global_var('func_3439')
func_3440_call = mutated_mod.get_global_var('func_3440')
call_7438 = relay.TupleGetItem(func_3439_call(), 0)
call_7439 = relay.TupleGetItem(func_3440_call(), 0)
output = relay.Tuple([call_7436,call_7438,])
output2 = relay.Tuple([call_7437,call_7439,])
func_7448 = relay.Function([], output)
mod['func_7448'] = func_7448
mod = relay.transform.InferType()(mod)
mutated_mod['func_7448'] = func_7448
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7448_call = mutated_mod.get_global_var('func_7448')
call_7449 = func_7448_call()
output = call_7449
func_7450 = relay.Function([], output)
mutated_mod['func_7450'] = func_7450
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6851_call = mod.get_global_var('func_6851')
func_6853_call = mutated_mod.get_global_var('func_6853')
call_7451 = relay.TupleGetItem(func_6851_call(), 1)
call_7452 = relay.TupleGetItem(func_6853_call(), 1)
output = call_7451
output2 = call_7452
func_7461 = relay.Function([], output)
mod['func_7461'] = func_7461
mod = relay.transform.InferType()(mod)
mutated_mod['func_7461'] = func_7461
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7461_call = mutated_mod.get_global_var('func_7461')
call_7462 = func_7461_call()
output = call_7462
func_7463 = relay.Function([], output)
mutated_mod['func_7463'] = func_7463
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7317_call = mod.get_global_var('func_7317')
func_7318_call = mutated_mod.get_global_var('func_7318')
call_7616 = func_7317_call()
call_7617 = func_7317_call()
func_7461_call = mod.get_global_var('func_7461')
func_7463_call = mutated_mod.get_global_var('func_7463')
call_7623 = func_7461_call()
call_7624 = func_7461_call()
func_4193_call = mod.get_global_var('func_4193')
func_4194_call = mutated_mod.get_global_var('func_4194')
call_7657 = relay.TupleGetItem(func_4193_call(), 0)
call_7658 = relay.TupleGetItem(func_4194_call(), 0)
func_6537_call = mod.get_global_var('func_6537')
func_6541_call = mutated_mod.get_global_var('func_6541')
const_7677 = relay.const([5.761904,4.027225,-3.493867,-2.478070,9.022644,2.645467,6.843123,-0.009871,-9.751255,7.729720,9.691906,6.609980,-5.140042,0.583529,5.740148,-2.850203,1.712192,-4.920776,-4.130613,-4.618580,0.473157,1.366989,-5.044572,-8.270050,6.726390,0.799379,7.690878,1.481511,9.958464,9.471825,6.579825,6.870325,0.266835,-9.140762,-0.212261,-3.046360,-7.690009,-0.623475,8.318291,0.327822,-3.833869,-7.439594,9.138335,-1.183129,-0.998934,1.837047,3.529809,5.520642,6.833364,-9.682166,-4.180476,9.796677,-7.010308,8.350767,-4.274117,-7.596924,-7.015990,-5.890345,-4.963337,-0.757716,-9.540225,2.536400,-3.510721,0.467713,-0.146085,1.047766,-9.358417,-8.211022,-5.800751,-8.261715,-0.131252,2.748896,7.854076,5.560357,-6.650169,0.540030,2.947311,-2.743956,9.603299,0.217930,5.720330,-6.454627,5.189104,8.901001,-2.827483,6.539384,-3.995050,2.091604,-3.255274,-8.485329,-6.787380,-1.452970,-4.267681,5.095267,-8.392718,8.101353,2.974008,2.408091,-8.093902,-3.782384,-2.792298,-5.835270,2.859084,0.081317,-8.250765,-9.683054,2.026137,-2.662178,-4.719664,6.603363,4.739658,-1.949487,-7.828893,2.117323,-2.827810,8.479108,3.182501,-3.597449,-9.936478,8.535716,7.861911,0.156994,-3.664608,-3.664622,-5.658323,7.036540,-5.674702,-6.590034,2.408052,-2.757240,-4.257397,-4.008278,5.712534,-0.237804,-9.427119,-0.549109,8.923051,-3.797640,2.092809,-5.991140,-3.248690,7.753796,-8.287062,5.263550,-4.039513,7.251046,-0.504780,-2.751540,-7.530125,3.921553,-5.972434,-4.753615,3.931077,0.278847,8.682689,-7.232269,0.195881,8.627431,-5.398189,3.033712,-9.922843,8.495653,9.669341,-7.037035,-3.529749,-1.531253,6.569505,-8.001851,-4.739836,5.230021,-6.182448,6.491542,-8.476565,2.961193,-8.558940,0.283746,8.805248,7.587646,-6.542609,0.813121,1.626718,-7.170921,-9.494505,3.662408,-5.595563,8.287943,0.301704,7.577198,9.358982,-5.253424,7.215311,-7.182040,-3.711647,0.943101,0.329096,0.085205,9.103823,0.928543,-2.430300,-3.534934,7.325822,6.373008,-0.766649,-2.211479,4.939972,8.189401,-5.096785,-6.655585,4.204121,-8.205679,-0.232906,4.224582,6.531372,8.844362,-8.014518,-4.076613,7.815002,-0.485185,-1.555896,1.408645,6.827541,9.619962,-5.550819,-0.101849,7.898188,-0.629354,-6.041794,7.236127,-7.132627,1.797912,-8.350883,7.032522,-8.754980,-4.212583,-7.242514,-2.683202,-3.110507,-2.967189,7.971368,1.060182,8.562790,-3.777858,5.301925,2.987678,0.327370,-7.233042,-8.629659,3.372384,7.940590,-6.791833,-8.079328,1.966840,-0.847094,6.697308,-3.532905,-2.607862,2.236436,4.846181,7.667745,-3.510449,-4.914783,-2.536686,-7.900365,0.487302,6.233006,-6.875902,-9.824285,5.007154,3.740631,3.320326,4.717368,8.697018,-2.753960,0.993848,2.789701,-5.603185,8.202239,-9.790184,1.429063,8.158687,6.110766,-0.764992,-7.048352,-6.545455,-3.168702,0.777658,-3.219461,-3.321515,-4.975904,-6.388728,-6.435642,8.095000,7.271968,4.731923,6.579159,-6.405691,-4.824356,-7.879640,-1.917449,-1.417593,-8.859259,-8.069386,-9.260946,-1.571452,-2.162661,-6.449507,4.297765,-5.939588,-5.200307,7.110704,7.588082,-9.173751,-9.020932,-3.777922,-2.220690,-6.669570,-8.938209,1.223737,9.045607,1.219151,-0.961081,-7.766692,5.424420,-5.278432,9.081428,2.911163,6.611188,-7.432618,2.959442,-1.800141,-7.586198,-5.528014,7.555755,0.123207,4.303466,5.422933,2.962628,-8.563484,-8.288713,-5.124669,-4.886201,-0.889518,4.915555,-9.362240,0.339494,-7.192878,0.838207,6.555803,-7.388629,4.120824,6.752959,6.923924,6.207697,-9.777927,2.844516,4.035346,-6.369753,5.148356,-5.605095,-7.016556,6.767208,0.929191,-2.943258,5.121114,-8.600183,-0.796435,0.350266,-3.582839,8.994217,0.122029,2.105303,7.743038,-9.356274,2.330717,-6.368449,1.243184,0.349873,-3.105815,1.431580,-7.926169,-4.914744,8.521896,2.362331,-5.269980,-8.535381,8.601932,-9.123609,-1.862670,6.658362,-6.045768,1.576357,3.577410,-8.585508,-5.917654,-9.598860,1.128645,-4.694596,-4.634170,-5.697789,-3.629140,-3.692845,-1.604563,-7.661141,-0.503536,7.242665,2.237559,-0.303907,6.629276,-9.962019,-7.762552,-7.987208,-5.226398,-1.905404,-7.505827,1.662306,-3.988516,-7.890707,5.465858,6.079081,1.972791,-5.492050,0.775148,3.135337,1.537626,4.053357,-6.603509,-7.904603,-7.530596,-1.036913,0.724255,0.989553,0.519575,4.213526,0.707125,-5.685303,1.261034,6.898523,1.664685,5.085304,7.561834,-6.611359,-5.770547,-1.852075,-4.703477,-4.817510,-6.305151,2.830361,2.531763,-6.871854,0.373932,4.001905,2.959749,0.353224,-0.266537,-7.668596,3.992715,7.859351,7.494924,-0.521488,-5.135925,5.771653,1.882103,6.609718,3.222161,1.743288,-2.592010,5.205562,0.277272,6.302715,6.263530,1.807210,-5.494771,5.545018,-3.256675,0.522404,-2.641107,-6.831235,0.902808,-7.698579,3.196672,1.388512,1.855715,-8.012339,-8.354756,-5.639249,8.160806,-9.896910,-5.336523,4.773448,-5.418118,-7.824799,8.673957,-3.748487,-5.163230,-5.267863,-8.463612,8.882440,-1.841912,-7.252051,5.076632,1.040627,8.695849,0.143277,7.092890,-0.175950,5.772756,-0.360044,0.337748,-5.272865,7.942164,-0.049822,-0.388482,2.362636,0.819662,0.024171,-7.439113,1.276110,9.414094,-7.391557,9.011212,-4.243802,8.010552,4.506043,0.270162,-3.553255,-0.021987,-4.857837,-6.282968,-6.347695,5.798148,2.660576,-5.176543,4.466958,8.908333,-5.462702,8.162956,6.901962,7.726199,6.219925,-3.959690,4.278668,-3.141518,-0.793949,-2.379291,-8.549219,-6.159320,8.770863,-5.781087,-9.220904,-0.776975,-5.200956,1.141179,-0.226409,9.383163,4.857107,9.898858,-6.209696,-2.255957,5.970675,1.447984,3.633609,3.202101,-8.986714,1.723514,7.396581,3.884612,9.235919,0.609747,0.482110,-1.077500,3.080586,-4.795426,2.741570,-8.332982,0.992753,4.216468,4.706305,4.490112,-7.695015,4.040025,7.786057,-4.183674,7.547071,-0.771025,-2.662911,-4.822061,3.945166,1.536703,8.963348,5.123143,-4.786849,2.224772,9.183576,3.687148,-9.491434,9.397896,-4.459344,-8.593849,2.264250,-7.504800,2.675636,1.923715,7.855001,-6.868934,-5.986033,6.246242,-8.869149,7.419891,-2.761425,2.709590,5.563602,-3.054982,-3.803473,9.589161,3.177676,1.547945,-5.411293,4.756792,-5.056246,8.915645,9.962641,2.179278,9.461520,8.351854,3.177674,-1.907462,8.106065,-0.486836,-2.871165,-8.441532,-4.062088,-0.189307,-3.851106,-5.641093,8.606980,-5.670040,7.246320,-0.844307,-2.221279,-9.796508,2.349394,-0.768298,7.977047,-4.794864,-0.403083,5.561557,4.134433,-6.014929,-5.197291,-7.716025,-7.342475,-0.494420,-1.013965,-0.243811,7.402767,-6.470025,-7.924715,0.997240,-1.840574,5.213975,-3.358939,2.095041,-5.344495,-0.621412,-2.862314,7.620280,2.306178,-0.721241,-6.512931,-5.157358,9.395283,-6.611527,3.508178,3.712038,-6.726173,-9.281814,-4.198911,-6.432497,6.726373,6.188526,0.638261,-0.538847,-3.105447,-6.712364,-6.324616,-5.562031,6.997750,2.675461,1.299794,-2.373477,1.737398,-9.171134,-5.255164,-9.300315,1.812944,-2.595071,-3.472134,5.987813,9.449479,-8.740195,-6.783533,-7.305139,8.076491,-1.344189,-5.258471,-8.189917,-3.576857,4.000399,8.878374,-1.748670,3.240799,6.124139,-9.155332,3.378810,-8.736818,0.985140,-2.060855,6.770300,7.101410,-3.882802,-0.189439,3.200940,-7.943027,-1.029717,-1.819768,-0.672628,3.034175,-8.402253,6.824530,2.671162,8.720005,-1.009617,-7.015780,0.975848,-3.159841,-5.313429,1.817797,4.209551,-7.900158,0.937907,-7.175827,8.511825,-6.033356,1.251637,3.515663,8.017448,3.091365,-8.995737,2.501534,2.570381,-1.750815,1.306339,5.045085,2.953965,-7.934275,6.638124,-8.813884,-9.311861,-7.301240,-4.995665,-2.196636,-1.684449,-7.368782,-0.561285,-3.252044,4.788109,0.056227,-9.276551,9.463469,-5.720599,0.131845,-7.853213,-5.589774,-6.719145,7.265633,-7.643462,-8.194625,7.425910,-7.534891,8.417482,-6.622587,4.161993,7.606557,-9.678768,8.612587,-2.958931,-9.070926,-4.730721,9.886146,4.879752,-0.169697,-5.353558,-4.380741,7.707040,7.409216,-0.250640,9.779562,8.173882,9.533708,1.619974,7.370385,1.424715,-1.791651,-2.262268,-2.425146,-7.943911,-4.103014,-3.462535,3.292774,7.698373,-0.561738,-1.325391,4.256651,-4.352176,3.568520,5.621129,7.510179,3.047722,-0.943096,0.453564,3.363149,9.956876,-6.210621,7.017493,8.331522,7.018132,-2.725787,6.557237,1.590616,-8.097477,1.340044,8.075368,2.634935,9.158857,8.713242,-8.411132,-1.244034,-9.644248,2.445647,-6.590938,-2.020649,-0.080555,4.103882,-2.226807,2.606894,-5.305262,-8.356368,3.034480,-0.892517,6.530501,3.807272,-9.650954,-2.833999,0.642012,-4.421318,-9.266880,9.326305,2.898580,5.341637,6.854168,7.979785,1.261518,-8.776470,8.110088,6.144130,-8.242924,-2.386252,0.580948,7.978881,8.550577,-1.920494,-0.816583,-3.127081,1.093001,2.178739,0.915968,-0.972717,-7.371850,7.989063,9.840046,-4.274058,-7.300875,-5.550643,6.480078,-1.881249,-8.629190,3.726485,-1.310648,-3.228698,0.306839,-6.424228,-6.637505,3.801341,6.324281,-6.539376,-0.891634,-6.194845,-3.187118,-1.155902,-0.369695,-0.164465,5.172929,4.192091,4.116223,6.315754,9.209930,9.735323,-1.507723,-7.197889,-0.346998,-4.786688,-7.651038,2.427456,-4.168044,-4.765133,-3.667948,6.351046,-6.512221,8.108438,-3.210906,-3.797244,-9.640976,-8.789370,0.271446,7.026443,5.335180,-7.463096,-9.913666,-3.443877,5.102149,-0.069336,2.115360,0.591504,-5.737645,-4.121162,-4.501139,5.761481,-4.693988,2.376082,-0.707370,6.447380,7.155662,8.044828,2.374742,-4.419663,7.969834,-1.389371,-2.425856,-2.599245,-3.808602,9.664729,-8.705045,-7.754698,-2.437889,-6.828076,-7.746077,9.321124,3.717389,8.660490,-1.193689,5.985910,-4.641941,7.902157,8.850997,-6.869244,-2.157507,-4.429485,-1.029970,1.522682,9.350780,3.769980,-5.732059,4.264940,-4.010220,-2.192100,-3.749992,-8.445817,-4.060123,0.924218,1.901430,3.823951,9.631249,-5.882690,-6.809136,9.201950,1.759057,8.936367,9.671600,6.102097,-8.129149,-3.298384,2.233261,1.087313,-9.823824,-7.430907,-3.019307,6.683374,3.707051,7.862983,-4.685801,9.879880,-0.289753,3.065953,2.694333,6.235867,-4.352607,-6.019260,-5.664052,3.186196,-3.378027,-8.332986,-6.053497,5.141791,-9.385523,8.895863,5.687480,-2.452870,-3.272191,2.144461,3.144274,4.290188,-5.558538,3.494738,8.432894,-4.353610,-7.966892,5.618203,-2.472581,1.954504,4.234543,3.761180,0.194218,-8.130124,5.298379,-8.255734,-7.791865,3.769591,4.334239,4.926729,1.215624,4.821479,4.174549,-2.049309,3.209960,-3.553697,4.150587,7.623026,9.505461,-8.162625,1.740685,4.864446,-1.156859,-4.833889,-5.041103,-1.800386,6.555183,1.738379,-2.399239,7.281577,6.642980,6.068008,7.133498,-7.079290,-2.897145,-0.278432,2.754548,-5.023164,-0.502305,7.845441,-1.758497,-0.764022,0.468487,-7.434142,-0.511974,2.811457,5.270646,-7.120505,5.380960,-0.056288,9.466061,7.913196,-0.829422,-2.127263,6.482602,1.304544,4.572286,7.200392,-5.644993,5.174955,8.238921,-0.517316,5.643001,-8.685272,8.747668,-0.916544,4.100065,9.817092,5.725804,-2.021330,-6.475697,1.045617,2.104295,-1.585396,-8.822318,-6.432722,4.924441,0.396285,7.370262,1.627262,-3.247012,5.183619,-9.472844,2.816765,-5.073315,-9.607350,-2.617486,8.487378,-3.006310,3.042536,4.475171,9.159703,-1.830727,5.805171,-5.005780,2.725695,-8.099535,-3.363464,8.840492,0.129155,1.971767,-5.795084,1.026195,9.003513,-8.715436,-0.808236,9.970979,-3.878536,-6.711722,5.364368,-5.848219,3.207751,-7.328297,5.901637,-1.577508,8.918155,-7.501883,3.696686,9.503881,-7.299437,9.676793,7.036384,-4.755812,-3.789594,4.249563,3.348394,-8.225580,3.706323,-8.652634,9.467578,0.369096,-5.424745,-8.832750,4.405925,-3.241020,8.048648,-2.160950,-7.546764,-3.239225,-8.291488,4.171922,-2.120116,-7.063447,-7.531097,-2.625447,5.298098,-7.829701,-6.035142,3.304030,9.949422,9.803678,4.783020,3.282943,-9.381808,5.308471,-0.290240,-6.936834,-2.921822,-0.254253,6.962419,-2.946673,-7.393274,-8.314403,-4.157556,-6.793217,6.436787,-5.660831,1.914837,4.920071,-2.353811,-1.367352,0.318778,3.044017,-4.127977,-5.103587,-1.161767,-2.287070,4.403628,2.969412,0.986443,6.093569,0.106665,8.883378,-1.623395,-3.982791,7.245687,2.087414,3.743521,4.804566,-1.542369,1.782799,-3.117887,0.344614,-7.403137,0.900951,-9.246758,1.533058,8.173964,-5.700373,9.375524,-0.566698,-9.779667,1.753527,-3.436822,9.111424,-7.369133,6.936992,-2.680717,-6.000994,-0.708066,-8.845485,3.506790,-8.015151,8.279477,-5.263894,-2.356967,0.906212,-5.445261,-9.996405,2.573850,8.725890,5.141445,5.997259,0.524245,-8.704212,5.236922,-2.495478,-5.903576,9.288492,0.075674,-1.094953], dtype = "float32")#candidate|7677|(1260,)|const|float32
call_7676 = func_6537_call(relay.reshape(const_7677.astype('float32'), [15, 14, 6]), relay.reshape(const_7677.astype('float32'), [15, 14, 6]), )
call_7678 = func_6537_call(relay.reshape(const_7677.astype('float32'), [15, 14, 6]), relay.reshape(const_7677.astype('float32'), [15, 14, 6]), )
output = relay.Tuple([call_7616,call_7623,call_7657,call_7676,const_7677,])
output2 = relay.Tuple([call_7617,call_7624,call_7658,call_7678,const_7677,])
func_7683 = relay.Function([], output)
mod['func_7683'] = func_7683
mod = relay.transform.InferType()(mod)
output = func_7683()
func_7684 = relay.Function([], output)
mutated_mod['func_7684'] = func_7684
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6450_call = mod.get_global_var('func_6450')
func_6452_call = mutated_mod.get_global_var('func_6452')
call_7739 = relay.TupleGetItem(func_6450_call(), 0)
call_7740 = relay.TupleGetItem(func_6452_call(), 0)
output = relay.Tuple([call_7739,])
output2 = relay.Tuple([call_7740,])
func_7748 = relay.Function([], output)
mod['func_7748'] = func_7748
mod = relay.transform.InferType()(mod)
mutated_mod['func_7748'] = func_7748
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7748_call = mutated_mod.get_global_var('func_7748')
call_7749 = func_7748_call()
output = call_7749
func_7750 = relay.Function([], output)
mutated_mod['func_7750'] = func_7750
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7767 = relay.var("var_7767", dtype = "float64", shape = (10, 4, 15))#candidate|7767|(10, 4, 15)|var|float64
uop_7768 = relay.acos(var_7767.astype('float64')) # shape=(10, 4, 15)
uop_7771 = relay.log2(uop_7768.astype('float64')) # shape=(10, 4, 15)
uop_7778 = relay.rsqrt(uop_7771.astype('float32')) # shape=(10, 4, 15)
func_3551_call = mod.get_global_var('func_3551')
func_3556_call = mutated_mod.get_global_var('func_3556')
const_7784 = relay.const([5.433815,-8.882064,-4.972076,1.989235,1.850190,2.655751,7.835539,9.416427,-0.751931,-6.538138,-6.201793,7.183419,5.339421,5.624465,7.621673,-9.370534,7.433592,4.495564,0.560714,9.236137,4.063302,2.907612,-0.565717,-1.692177,5.545632,-4.086017,-7.942363,0.088814,6.817330,-4.325457,2.289400,3.859479,-2.873371,-1.291815,8.762693,-9.439789,8.847888,-3.809581,9.989966,-4.103707,9.170568,-9.208596,-9.374423,7.404915,-3.232919,-3.407657,-4.315843,-8.623105,-0.932838,-3.325727,0.349542,-5.187727,2.388964,-9.360632,-0.114736,7.658693,6.494110,7.326746,-8.347816,7.470206,-8.822575,-6.269029,8.127978,4.180040,6.661998,-0.794704,0.031585,8.226441,7.442516,7.623815,-3.776577,0.067484,-9.291457,5.956269,-2.885643,9.088201,-3.048409,9.122464,-9.779015,-4.184862,5.673093,-1.261771,7.227795,0.970588,7.218776,-8.340859,9.346424,7.415117,-3.216028,-9.989710,7.298890,-1.056070,2.445635,-7.197466,-3.955969,-6.890497,3.441719,-2.483953,-7.830563,8.582978,-8.571740,-1.736397,1.413356,4.115538,-2.650475,-6.783048,6.365761,-1.096136,0.987301,7.272598,9.941291,9.709810,-2.103117,4.031323,8.500107,2.921077,9.595292,3.195353,0.595173,-9.147957,5.073333,-1.683667,0.476574,9.906014,0.897859,3.079344,-6.635232,6.969906,-1.611330,-7.090241,4.330717,-4.777237,5.716143,1.454565,-6.906118,-1.415041,4.515463,9.798962,2.264634,7.584848,4.897596,8.470308,7.108672,-7.657870,-8.954356,0.545882,-4.251425,-8.321724,9.486021,0.291476,9.920140,9.654206,-5.978810,-1.793744,-2.569838,-5.442627,-1.197249,5.400358,-8.619001,5.197042,-5.319157,-2.204790,-6.622403,-7.905896,-6.770226,-9.400055,-9.073633,-3.465478,-2.485242,-5.432009,-3.635205,-5.084846,2.366381,-4.832901,6.565718,-4.120754,-4.141080,9.520988,9.770473,5.294357,5.364407,1.680287,6.802310,-1.544942,-8.627399,-9.050739,8.317590,4.851290,8.426050,-2.322539,-2.426401,-9.343729,6.429416,8.845364,-4.838458,-1.412918,-4.362723,3.462316,-2.794152,4.675006,-3.429845,0.326468,-1.208602,-4.126002,5.822690,5.727302,0.896873,-9.733870,1.124500,3.451224,-5.113707,4.588160,-6.450199,8.207732,-0.902720,4.131306,-6.396749,-0.295110,-3.175288,-4.888098,2.540441,9.514630,-8.672902,8.547976,7.771674,6.288329,-0.612600,9.060847,9.454022,6.591309,5.487484,-4.141274,-3.628032,9.596705,-6.839011,-3.534237,2.198917,-1.553577,7.479725,3.545523,6.446965,3.741022,6.987380,-5.569333,8.028500,-1.176460,-8.097521,-9.937746,4.714419,6.306477,-3.896216,8.155930,8.632979,2.125808,7.867848,-1.435976,4.833473,-6.514339,-7.989267,1.467746,0.792590,-3.561820,-4.593853,-1.548910,-7.390438,1.315762,6.916364,-3.213404,7.448219,1.658876,-9.421889,0.869778,6.109594,-4.276970,-3.614041,8.504129,2.115864,2.016098,1.988878,9.636754,-9.926334,-8.569630,6.085180,-3.350130,-7.522086,0.998297,0.205991,-2.609091,4.124254,-2.556845,-5.549357,7.380540,-8.542674,5.674837,-2.163367,6.637415,-6.474341,-2.863533,8.213724,-6.908156,-1.936008,-5.189531,-5.788855,3.674012,-4.331101,4.527041,4.980464,-4.745919,9.889491,1.560055,9.271599,-2.456984,-7.989748,2.274451,-2.619971,9.853208,-8.239446,-8.542586,-5.017263,-1.359588,-0.972730,3.094962,-0.436612,3.923721,-1.283473,9.547909,2.093010,2.406051,-3.918413,7.822033,-1.254038,4.388666,0.024891,3.947988,1.115058,-2.526176,1.016326,-1.608225,2.760977,4.033896,-7.428668,2.448243,5.190235,-3.081846,-1.915726,-7.042923,-8.642889,1.433739,0.114147,-7.004718,-8.560437,-0.361086,-7.327331,1.521974,-3.342494,6.464137,4.288106,2.623858,3.000693,-5.986853], dtype = "float32")#candidate|7784|(360,)|const|float32
const_7785 = relay.const([-8.117761,9.410086,-5.788177,5.336585,-8.833430,-3.387504,-6.069516,5.587080,4.550927,2.972064,6.111012,8.455011,-4.346527,-2.186874,-7.455152,-3.422608,-2.476390,-8.498168,4.419323,6.527585,-0.869271,-9.024167,3.832361,5.759829,1.454900,2.847879,6.134521,9.244080,-1.648395,-7.168232,5.934097,-5.017139], dtype = "float32")#candidate|7785|(32,)|const|float32
var_7786 = relay.var("var_7786", dtype = "bool", shape = (25200,))#candidate|7786|(25200,)|var|bool
call_7783 = relay.TupleGetItem(func_3551_call(relay.reshape(const_7784.astype('float32'), [360,]), relay.reshape(const_7785.astype('float32'), [32,]), relay.reshape(var_7786.astype('bool'), [25200,]), ), 1)
call_7787 = relay.TupleGetItem(func_3556_call(relay.reshape(const_7784.astype('float32'), [360,]), relay.reshape(const_7785.astype('float32'), [32,]), relay.reshape(var_7786.astype('bool'), [25200,]), ), 1)
func_4656_call = mod.get_global_var('func_4656')
func_4658_call = mutated_mod.get_global_var('func_4658')
call_7791 = relay.TupleGetItem(func_4656_call(), 3)
call_7792 = relay.TupleGetItem(func_4658_call(), 3)
uop_7793 = relay.atan(uop_7778.astype('float32')) # shape=(10, 4, 15)
bop_7795 = relay.floor_divide(uop_7771.astype('float64'), relay.reshape(uop_7768.astype('float64'), relay.shape_of(uop_7771))) # shape=(10, 4, 15)
output = relay.Tuple([call_7783,const_7784,const_7785,var_7786,call_7791,uop_7793,bop_7795,])
output2 = relay.Tuple([call_7787,const_7784,const_7785,var_7786,call_7792,uop_7793,bop_7795,])
func_7802 = relay.Function([var_7767,var_7786,], output)
mod['func_7802'] = func_7802
mod = relay.transform.InferType()(mod)
mutated_mod['func_7802'] = func_7802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7802_call = mutated_mod.get_global_var('func_7802')
var_7804 = relay.var("var_7804", dtype = "float64", shape = (10, 4, 15))#candidate|7804|(10, 4, 15)|var|float64
var_7805 = relay.var("var_7805", dtype = "bool", shape = (25200,))#candidate|7805|(25200,)|var|bool
call_7803 = func_7802_call(var_7804,var_7805,)
output = call_7803
func_7806 = relay.Function([var_7804,var_7805,], output)
mutated_mod['func_7806'] = func_7806
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2996_call = mod.get_global_var('func_2996')
func_2997_call = mutated_mod.get_global_var('func_2997')
call_7839 = relay.TupleGetItem(func_2996_call(), 0)
call_7840 = relay.TupleGetItem(func_2997_call(), 0)
func_6257_call = mod.get_global_var('func_6257')
func_6258_call = mutated_mod.get_global_var('func_6258')
call_7845 = relay.TupleGetItem(func_6257_call(), 0)
call_7846 = relay.TupleGetItem(func_6258_call(), 0)
func_4504_call = mod.get_global_var('func_4504')
func_4505_call = mutated_mod.get_global_var('func_4505')
call_7851 = relay.TupleGetItem(func_4504_call(), 0)
call_7852 = relay.TupleGetItem(func_4505_call(), 0)
output = relay.Tuple([call_7839,call_7845,call_7851,])
output2 = relay.Tuple([call_7840,call_7846,call_7852,])
func_7853 = relay.Function([], output)
mod['func_7853'] = func_7853
mod = relay.transform.InferType()(mod)
mutated_mod['func_7853'] = func_7853
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7853_call = mutated_mod.get_global_var('func_7853')
call_7854 = func_7853_call()
output = call_7854
func_7855 = relay.Function([], output)
mutated_mod['func_7855'] = func_7855
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7884 = relay.var("var_7884", dtype = "float32", shape = (7, 6, 14))#candidate|7884|(7, 6, 14)|var|float32
uop_7885 = relay.log(var_7884.astype('float32')) # shape=(7, 6, 14)
output = uop_7885
output2 = uop_7885
F = relay.Function([var_7884,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_7884,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

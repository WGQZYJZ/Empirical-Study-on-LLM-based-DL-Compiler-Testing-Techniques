==========mod==========
#[version = "0.0.5"]
def @func_394(%var_295: Tensor[(2, 13, 16), int64], %var_309: Tensor[(8, 2), int64], %var_374: Tensor[(2, 13, 16), int64]) -> (Tensor[(2, 13, 16), bool], Tensor[(8, 3, 7), bool], Tensor[(168), float32], Tensor[(2, 8, 3), int64], Tensor[(8, 2), int64], Tensor[(48), int64], Tensor[(8, 3, 7), bool], Tensor[(2, 8, 3), int64], Tensor[(8, 3, 7), bool], Tensor[(8, 3, 7), bool], Tensor[(2, 13, 16), bool]) {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(2, 13, 16), int64] */, dtype="bool") /* ty=Tensor[(2, 13, 16), bool] */;
  %1 = shape_of(%var_295, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_295, dtype="bool") /* ty=Tensor[(2, 13, 16), bool] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %4 = cast(meta[relay.Constant][1] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %5 = cast(meta[relay.Constant][1] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %6 = reshape(%4, newshape=[8, 3, 7]) /* ty=Tensor[(8, 3, 7), float32] */;
  %7 = reshape(%5, newshape=[8, 3, 7]) /* ty=Tensor[(8, 3, 7), float32] */;
  %8 = cast(%var_309, dtype="int64") /* ty=Tensor[(8, 2), int64] */;
  %9 = cast(meta[relay.Constant][2] /* ty=Tensor[(48), int64] */, dtype="int64") /* ty=Tensor[(48), int64] */;
  %10 = reshape(%8, newshape=[2, 8, 1]) /* ty=Tensor[(2, 8, 1), int64] */;
  %11 = reshape(%9, newshape=[2, 8, 3]) /* ty=Tensor[(2, 8, 3), int64] */;
  %12 = cast(meta[relay.Constant][1] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %13 = @func_26(%6, %7) /* ty=Tensor[(8, 3, 7), bool] */;
  %14 = cast(%13, dtype="float32") /* ty=Tensor[(8, 3, 7), float32] */;
  %15 = reshape(%12, newshape=[8, 3, 7]) /* ty=Tensor[(8, 3, 7), float32] */;
  %16 = reshape(%14, newshape=[8, 3, 7]) /* ty=Tensor[(8, 3, 7), float32] */;
  %17 = cast(%var_309, dtype="int64") /* ty=Tensor[(8, 2), int64] */;
  %18 = cast(meta[relay.Constant][2] /* ty=Tensor[(48), int64] */, dtype="int64") /* ty=Tensor[(48), int64] */;
  %19 = reshape(%17, newshape=[2, 8, 1]) /* ty=Tensor[(2, 8, 1), int64] */;
  %20 = reshape(%18, newshape=[2, 8, 3]) /* ty=Tensor[(2, 8, 3), int64] */;
  %21 = cast(meta[relay.Constant][1] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %22 = @func_26(%15, %16) /* ty=Tensor[(8, 3, 7), bool] */;
  %23 = cast(%22, dtype="float32") /* ty=Tensor[(8, 3, 7), float32] */;
  %24 = reshape(%21, newshape=[8, 3, 7]) /* ty=Tensor[(8, 3, 7), float32] */;
  %25 = reshape(%23, newshape=[8, 3, 7]) /* ty=Tensor[(8, 3, 7), float32] */;
  %26 = cast(%22, dtype="float32") /* ty=Tensor[(8, 3, 7), float32] */;
  %27 = @func_26(%24, %25) /* ty=Tensor[(8, 3, 7), bool] */;
  %28 = cast(%27, dtype="float32") /* ty=Tensor[(8, 3, 7), float32] */;
  %29 = reshape(%26, newshape=[8, 3, 7]) /* ty=Tensor[(8, 3, 7), float32] */;
  %30 = reshape(%28, newshape=[8, 3, 7]) /* ty=Tensor[(8, 3, 7), float32] */;
  %31 = cast(%var_374, dtype="bool") /* ty=Tensor[(2, 13, 16), bool] */;
  %32 = shape_of(%var_295, dtype="int32") /* ty=Tensor[(3), int32] */;
  %33 = cast(%var_295, dtype="bool") /* ty=Tensor[(2, 13, 16), bool] */;
  %34 = dyn.reshape(%31, %32, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %35 = greater(%2, %3) /* ty=Tensor[(2, 13, 16), bool] */;
  %36 = @func_188(%10, %11) /* ty=Tensor[(2, 8, 3), int64] */;
  %37 = @func_188(%19, %20) /* ty=Tensor[(2, 8, 3), int64] */;
  %38 = @func_26(%29, %30) /* ty=Tensor[(8, 3, 7), bool] */;
  %39 = not_equal(%33, %34) /* ty=Tensor[(2, 13, 16), bool] */;
  (%35, %13, meta[relay.Constant][1] /* ty=Tensor[(168), float32] */, %36, %var_309, meta[relay.Constant][2] /* ty=Tensor[(48), int64] */, %22, %37, %27, %38, %39)
}

def @func_9131() -> Tensor[(1, 15, 11), float64] {
  %40 = @func_6805() /* ty=(Tensor[(1, 15, 11), float64],) */;
  %40.0
}

def @func_3807(%var_3793: Tensor[(15, 9, 6), float32], %var_3804: Tensor[(2, 208), int64], %var_3805: Tensor[(16), int64]) -> (Tensor[(15, 9, 6), float32], Tensor[(8, 3, 7), bool], Tensor[(2, 208), int64], Tensor[(16), int64]) {
  %41 = cast(%var_3793, dtype="float32") /* ty=Tensor[(15, 9, 6), float32] */;
  %42 = cast(%var_3804, dtype="int64") /* ty=Tensor[(2, 208), int64] */;
  %43 = cast(%var_3805, dtype="int64") /* ty=Tensor[(16), int64] */;
  %44 = cast(%var_3804, dtype="int64") /* ty=Tensor[(2, 208), int64] */;
  %45 = reshape(%42, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), int64] */;
  %46 = reshape(%43, newshape=[8, 2]) /* ty=Tensor[(8, 2), int64] */;
  %47 = reshape(%44, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), int64] */;
  %48 = @func_394(%45, %46, %47) /* ty=(Tensor[(2, 13, 16), bool], Tensor[(8, 3, 7), bool], Tensor[(168), float32], Tensor[(2, 8, 3), int64], Tensor[(8, 2), int64], Tensor[(48), int64], Tensor[(8, 3, 7), bool], Tensor[(2, 8, 3), int64], Tensor[(8, 3, 7), bool], Tensor[(8, 3, 7), bool], Tensor[(2, 13, 16), bool]) */;
  %49 = erf(%41) /* ty=Tensor[(15, 9, 6), float32] */;
  %50 = %48.9;
  (%49, %50, %var_3804, %var_3805)
}

def @func_11406(%var_11349: Tensor[(16), int64]) -> (Tensor[(416), bool], Tensor[(16), int64], Tensor[(1456), int64], Tensor[(16), int64], Tensor[(416), bool], Tensor[(416), int64], Tensor[(416), int64]) {
  %51 = @func_8402() /* ty=(Tensor[(416), bool],) */;
  %52 = cast(meta[relay.Constant][3] /* ty=Tensor[(1456), int64] */, dtype="int64") /* ty=Tensor[(1456), int64] */;
  %53 = %51.0;
  %54 = cast(%53, dtype="int64") /* ty=Tensor[(416), int64] */;
  %55 = cast(%var_11349, dtype="int64") /* ty=Tensor[(16), int64] */;
  %56 = reshape(%52, newshape=[2, 728]) /* ty=Tensor[(2, 728), int64] */;
  %57 = reshape(%54, newshape=[416]) /* ty=Tensor[(416), int64] */;
  %58 = reshape(%55, newshape=[16]) /* ty=Tensor[(16), int64] */;
  %59 = @func_10913(%56, %57, %58) /* ty=(Tensor[(2, 728), float32], Tensor[(168), float32], Tensor[(416), int64], Tensor[(16), int64], Tensor[(2, 728), float64], Tensor[(2, 728), float32], Tensor[(6, 11, 8), bool], int64, Tensor[(528), int64], Tensor[(416), int64]) */;
  %60 = @func_8402() /* ty=(Tensor[(416), bool],) */;
  %61 = @func_5663() /* ty=(Tensor[(416), int64],) */;
  %62 = %59.3;
  %63 = %60.0;
  %64 = %61.0;
  %65 = @func_11298() /* ty=Tensor[(416), int64] */;
  (%53, %62, meta[relay.Constant][3] /* ty=Tensor[(1456), int64] */, %var_11349, %63, %64, %65)
}

def @func_9972() -> (Tensor[(1, 15, 11), float64],) {
  %66 = @func_8914() /* ty=(Tensor[(1, 15, 11), float64],) */;
  %67 = %66.0;
  (%67,)
}

def @func_9467() -> (Tensor[(1, 15, 11), float64], Tensor[(9, 15, 11), bool]) {
  %68 = @func_8914() /* ty=(Tensor[(1, 15, 11), float64],) */;
  %69 = @func_8119() /* ty=(Tensor[(9, 15, 11), bool], Tensor[(416), int64]) */;
  %70 = %68.0;
  %71 = %69.0;
  (%70, %71)
}

def @func_9925(%var_9898: Tensor[(156, 1), int8], %var_9901: Tensor[(110), float32], %var_9921: Tensor[(1008), float32]) -> (Tensor[(416), int64], Tensor[(3, 52), int8], int16, Tensor[(30), int16], Tensor[(156, 1), int8], Tensor[(110), float32], Tensor[(?, 15, 11), bool], Tensor[(11, 10, 48), int8], Tensor[(3, 4, 15), uint8], Tensor[(3, 60), uint8], Tensor[(1008), float32]) {
  %72 = @func_9340() /* ty=(Tensor[(416), int64],) */;
  %73 = cast(meta[relay.Constant][4] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %74 = cast(meta[relay.Constant][5] /* ty=Tensor[(30), int16] */, dtype="int16") /* ty=Tensor[(30), int16] */;
  %75 = cast(%var_9898, dtype="int8") /* ty=Tensor[(156, 1), int8] */;
  %76 = reshape(%73, newshape=[]) /* ty=int16 */;
  %77 = reshape(%74, newshape=[3, 10, 1]) /* ty=Tensor[(3, 10, 1), int16] */;
  %78 = reshape(%75, newshape=[3, 52]) /* ty=Tensor[(3, 52), int8] */;
  %79 = @func_5275(%76, %77, %78) /* ty=(Tensor[(3, 10, 1), bool], Tensor[(13, 2, 6), int8], Tensor[(3, 52), int8]) */;
  %80 = cast(%var_9901, dtype="float32") /* ty=Tensor[(110), float32] */;
  %81 = cast(meta[relay.Constant][6] /* ty=Tensor[(48), int64] */, dtype="int64") /* ty=Tensor[(48), int64] */;
  %82 = reshape(%80, newshape=[11, 10, 1]) /* ty=Tensor[(11, 10, 1), float32] */;
  %83 = reshape(%81, newshape=[4, 12]) /* ty=Tensor[(4, 12), int64] */;
  %84 = @func_7495(%82, %83) /* ty=(Tensor[(11, 10, 1), float32], Tensor[(2, 8, 3), int64], Tensor[(16), int64], Tensor[(4, 12), int64]) */;
  %85 = %84.0;
  %86 = cast(meta[relay.Constant][6] /* ty=Tensor[(48), int64] */, dtype="int8") /* ty=Tensor[(48), int8] */;
  %87 = cast(%85, dtype="int8") /* ty=Tensor[(11, 10, 1), int8] */;
  %88 = cast(meta[relay.Constant][7] /* ty=Tensor[(3, 60), uint8] */, dtype="uint8") /* ty=Tensor[(3, 60), uint8] */;
  %89 = cast(meta[relay.Constant][7] /* ty=Tensor[(3, 60), uint8] */, dtype="uint8") /* ty=Tensor[(3, 60), uint8] */;
  %90 = cast(%var_9921, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %91 = reshape(%88, newshape=[3, 4, 15]) /* ty=Tensor[(3, 4, 15), uint8] */;
  %92 = reshape(%89, newshape=[3, 4, 15]) /* ty=Tensor[(3, 4, 15), uint8] */;
  %93 = reshape(%90, newshape=[1008]) /* ty=Tensor[(1008), float32] */;
  %94 = @func_5080(%91, %92, %93) /* ty=(Tensor[(3, 4, 15), uint8], Tensor[(416), int64], Tensor[(16), int64], Tensor[(12, 7, 12), float32], Tensor[(1008), float32], Tensor[(2, 13, 16), float64]) */;
  %95 = %72.0;
  %96 = %79.2;
  %97 = @func_7107() /* ty=Tensor[(?, 15, 11), bool] */;
  %98 = left_shift(%86, %87) /* ty=Tensor[(11, 10, 48), int8] */;
  %99 = %94.0;
  (%95, %96, meta[relay.Constant][4] /* ty=int16 */, meta[relay.Constant][5] /* ty=Tensor[(30), int16] */, %var_9898, %var_9901, %97, %98, %99, meta[relay.Constant][7] /* ty=Tensor[(3, 60), uint8] */, %var_9921)
}

def @func_6356() -> Tensor[(416), int64] {
  %100 = @func_5663() /* ty=(Tensor[(416), int64],) */;
  %100.0
}

def @func_7149(%var_7122: Tensor[(5, 15, 11), bool]) -> (Tensor[(5, 15, 11), bool],) {
  %101 = @func_7107() /* ty=Tensor[(?, 15, 11), bool] */;
  %102 = cast(%101, dtype="bool") /* ty=Tensor[(?, 15, 11), bool] */;
  %103 = cast(%var_7122, dtype="bool") /* ty=Tensor[(5, 15, 11), bool] */;
  %104 = not_equal(%102, %103) /* ty=Tensor[(5, 15, 11), bool] */;
  %105 = cast(%var_7122, dtype="bool") /* ty=Tensor[(5, 15, 11), bool] */;
  %106 = shape_of(%104, dtype="int32") /* ty=Tensor[(3), int32] */;
  %107 = cast(%104, dtype="bool") /* ty=Tensor[(5, 15, 11), bool] */;
  %108 = dyn.reshape(%105, %106, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %109 = greater(%107, %108) /* ty=Tensor[(5, 15, 11), bool] */;
  (%109,)
}

def @func_5937(%var_5914: Tensor[(30), int16]) -> (Tensor[(416), int64], Tensor[(3, 52), int8], int16, Tensor[(30), int16], Tensor[(156), int8]) {
  %110 = @func_5663() /* ty=(Tensor[(416), int64],) */;
  %111 = cast(meta[relay.Constant][8] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %112 = cast(%var_5914, dtype="int16") /* ty=Tensor[(30), int16] */;
  %113 = cast(meta[relay.Constant][9] /* ty=Tensor[(156), int8] */, dtype="int8") /* ty=Tensor[(156), int8] */;
  %114 = reshape(%111, newshape=[]) /* ty=int16 */;
  %115 = reshape(%112, newshape=[3, 10, 1]) /* ty=Tensor[(3, 10, 1), int16] */;
  %116 = reshape(%113, newshape=[3, 52]) /* ty=Tensor[(3, 52), int8] */;
  %117 = @func_5275(%114, %115, %116) /* ty=(Tensor[(3, 10, 1), bool], Tensor[(13, 2, 6), int8], Tensor[(3, 52), int8]) */;
  %118 = %110.0;
  %119 = %117.2;
  (%118, %119, meta[relay.Constant][8] /* ty=int16 */, %var_5914, meta[relay.Constant][9] /* ty=Tensor[(156), int8] */)
}

def @func_10438() -> (Tensor[(416), int64],) {
  %120 = @func_5802() /* ty=(Tensor[(416), int64],) */;
  %121 = %120.0;
  (%121,)
}

def @func_8895() -> (Tensor[(416), int64],) {
  %122 = @func_8119() /* ty=(Tensor[(9, 15, 11), bool], Tensor[(416), int64]) */;
  %123 = %122.1;
  (%123,)
}

def @func_10456(%var_10441: Tensor[(13, 14, 5), float64]) -> Tensor[(13, 14, 5), float64] {
  %124 = cast(%var_10441, dtype="float64") /* ty=Tensor[(13, 14, 5), float64] */;
  sigmoid(%124) /* ty=Tensor[(13, 14, 5), float64] */
}

def @func_5954() -> Tensor[(416), int64] {
  @func_5837() /* ty=Tensor[(416), int64] */
}

def @func_6636() -> (Tensor[(416), int64],) {
  %125 = @func_6156() /* ty=(Tensor[(416), int64],) */;
  %126 = %125.0;
  (%126,)
}

def @func_5781() -> (Tensor[(416), int64],) {
  %127 = @func_5663() /* ty=(Tensor[(416), int64],) */;
  %128 = %127.0;
  (%128,)
}

def @func_5884(%var_5871: Tensor[(1, 7, 16), float32]) -> Tensor[(1, 7, 16), float32] {
  %129 = cast(%var_5871, dtype="float32") /* ty=Tensor[(1, 7, 16), float32] */;
  sigmoid(%129) /* ty=Tensor[(1, 7, 16), float32] */
}

def @func_1801(%var_1793: Tensor[(6, 12, 4), bool]) -> Tensor[(6, 12, 4), bool] {
  %130 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %131 = cast(%var_1793, dtype="bool") /* ty=Tensor[(6, 12, 4), bool] */;
  %132 = logical_and(%130, %131) /* ty=Tensor[(6, 12, 4), bool] */;
  %133 = cast(%132, dtype="bool") /* ty=Tensor[(6, 12, 4), bool] */;
  %134 = shape_of(%var_1793, dtype="int32") /* ty=Tensor[(3), int32] */;
  %135 = cast(%var_1793, dtype="bool") /* ty=Tensor[(6, 12, 4), bool] */;
  %136 = dyn.reshape(%133, %134, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%135, %136) /* ty=Tensor[(6, 12, 4), bool] */
}

def @func_5243(%var_5198: Tensor[(416), int64]) -> (Tensor[(16), int64], Tensor[(416), int64], Tensor[(16), int64], Tensor[(6, ?, 13), bool], Tensor[(12, 7, 12), float32], Tensor[(1008), float32], Tensor[(2, 13, 16), bool]) {
  %137 = cast(%var_5198, dtype="int64") /* ty=Tensor[(416), int64] */;
  %138 = cast(meta[relay.Constant][10] /* ty=Tensor[(16), int64] */, dtype="int64") /* ty=Tensor[(16), int64] */;
  %139 = reshape(%137, newshape=[416]) /* ty=Tensor[(416), int64] */;
  %140 = reshape(%138, newshape=[16]) /* ty=Tensor[(16), int64] */;
  %141 = @func_456(%139, %140) /* ty=(Tensor[(12, 3, 7), bool], Tensor[(2, 8, 3), int64], Tensor[(416), int64], Tensor[(16), int64], Tensor[(8, 3, 7), bool], Tensor[(168), float32], Tensor[(2, 8, 3), int64], Tensor[(2, 8, 3), int64]) */;
  %142 = cast(meta[relay.Constant][11] /* ty=Tensor[(6, 1, 13), float64] */, dtype="float64") /* ty=Tensor[(6, 1, 13), float64] */;
  %143 = rsqrt(%142) /* ty=Tensor[(6, 1, 13), float64] */;
  %144 = cast(meta[relay.Constant][11] /* ty=Tensor[(6, 1, 13), float64] */, dtype="bool") /* ty=Tensor[(6, 1, 13), bool] */;
  %145 = shape_of(%143, dtype="int32") /* ty=Tensor[(3), int32] */;
  %146 = cast(%143, dtype="bool") /* ty=Tensor[(6, 1, 13), bool] */;
  %147 = dyn.reshape(%144, %145, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %148 = cast(meta[relay.Constant][12] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %149 = reshape(%148, newshape=[12, 7, 12]) /* ty=Tensor[(12, 7, 12), float32] */;
  %150 = @func_3188(%149) /* ty=(Tensor[(12, 7, 12), float32],) */;
  %151 = cast(%var_5198, dtype="int64") /* ty=Tensor[(416), int64] */;
  %152 = %141.3;
  %153 = cast(%152, dtype="int64") /* ty=Tensor[(16), int64] */;
  %154 = cast(%var_5198, dtype="int64") /* ty=Tensor[(416), int64] */;
  %155 = reshape(%151, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), int64] */;
  %156 = reshape(%153, newshape=[8, 2]) /* ty=Tensor[(8, 2), int64] */;
  %157 = reshape(%154, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), int64] */;
  %158 = @func_394(%155, %156, %157) /* ty=(Tensor[(2, 13, 16), bool], Tensor[(8, 3, 7), bool], Tensor[(168), float32], Tensor[(2, 8, 3), int64], Tensor[(8, 2), int64], Tensor[(48), int64], Tensor[(8, 3, 7), bool], Tensor[(2, 8, 3), int64], Tensor[(8, 3, 7), bool], Tensor[(8, 3, 7), bool], Tensor[(2, 13, 16), bool]) */;
  %159 = less(%146, %147) /* ty=Tensor[(6, ?, 13), bool] */;
  %160 = %150.0;
  %161 = %158.0;
  (%152, %var_5198, meta[relay.Constant][10] /* ty=Tensor[(16), int64] */, %159, %160, meta[relay.Constant][12] /* ty=Tensor[(1008), float32] */, %161)
}

def @func_10637() -> Tensor[(1, 15, 11), float64] {
  %162 = @func_6805() /* ty=(Tensor[(1, 15, 11), float64],) */;
  %162.0
}

def @func_8039() -> Tensor[(416), int64] {
  %163 = @func_5802() /* ty=(Tensor[(416), int64],) */;
  %163.0
}

def @func_5696(%var_5683: Tensor[(6, 42), float32]) -> (Tensor[(416), int64], Tensor[(416), int64], Tensor[(2, 728), int64], Tensor[(9, 4, 7), float32], Tensor[(6, 42), float32]) {
  %164 = @func_5663() /* ty=(Tensor[(416), int64],) */;
  %165 = cast(meta[relay.Constant][13] /* ty=Tensor[(2, 728), int64] */, dtype="int64") /* ty=Tensor[(2, 728), int64] */;
  %166 = reshape(%165, newshape=[7, 13, 16]) /* ty=Tensor[(7, 13, 16), int64] */;
  %167 = @func_3300(%166) /* ty=(Tensor[(7, 13, 16), bool], Tensor[(4, 4), int64], Tensor[(315), float64], Tensor[(416), int64], Tensor[(2, 8, 3), int64], Tensor[(48), int64]) */;
  %168 = cast(%var_5683, dtype="float32") /* ty=Tensor[(6, 42), float32] */;
  %169 = reshape(%168, newshape=[9, 4, 7]) /* ty=Tensor[(9, 4, 7), float32] */;
  %170 = cast(%var_5683, dtype="float64") /* ty=Tensor[(6, 42), float64] */;
  %171 = atan(%170) /* ty=Tensor[(6, 42), float64] */;
  %172 = cast(%171, dtype="float32") /* ty=Tensor[(6, 42), float32] */;
  %173 = %164.0;
  %174 = %167.3;
  %175 = @func_1958(%169) /* ty=Tensor[(9, 4, 7), float32] */;
  %176 = log10(%172) /* ty=Tensor[(6, 42), float32] */;
  (%173, %174, meta[relay.Constant][13] /* ty=Tensor[(2, 728), int64] */, %175, %176)
}

def @func_7942(%var_7894: Tensor[(8, 2), int64], %var_7895: Tensor[(48), int64], %var_7930: Tensor[(1008), float32]) -> (Tensor[(416), int64], Tensor[(528), int64], Tensor[(528), int64], Tensor[(8, 2), int64], Tensor[(48), int64], Tensor[(8, 3, 7), bool], Tensor[(168), float32], Tensor[(12, 7, 12), float32], Tensor[(1008), float32]) {
  %177 = @func_5781() /* ty=(Tensor[(416), int64],) */;
  %178 = cast(meta[relay.Constant][14] /* ty=Tensor[(528), int64] */, dtype="int64") /* ty=Tensor[(528), int64] */;
  %179 = cast(%var_7894, dtype="int64") /* ty=Tensor[(8, 2), int64] */;
  %180 = cast(%var_7895, dtype="int64") /* ty=Tensor[(48), int64] */;
  %181 = reshape(%178, newshape=[528]) /* ty=Tensor[(528), int64] */;
  %182 = reshape(%179, newshape=[16]) /* ty=Tensor[(16), int64] */;
  %183 = reshape(%180, newshape=[48]) /* ty=Tensor[(48), int64] */;
  %184 = @func_5745(%181, %182, %183) /* ty=(Tensor[(416), int64], Tensor[(6, 11, 8), bool], int64, Tensor[(528), int64], Tensor[(2, 8, 3), int64], Tensor[(16), int64], Tensor[(48), int64], Tensor[(13, 2, 6), int8], Tensor[(156), int8]) */;
  %185 = cast(meta[relay.Constant][15] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %186 = cast(meta[relay.Constant][15] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %187 = reshape(%185, newshape=[8, 3, 7]) /* ty=Tensor[(8, 3, 7), float32] */;
  %188 = reshape(%186, newshape=[8, 3, 7]) /* ty=Tensor[(8, 3, 7), float32] */;
  %189 = cast(%var_7930, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %190 = reshape(%189, newshape=[12, 7, 12]) /* ty=Tensor[(12, 7, 12), float32] */;
  %191 = @func_3188(%190) /* ty=(Tensor[(12, 7, 12), float32],) */;
  %192 = %177.0;
  %193 = %184.3;
  %194 = @func_26(%187, %188) /* ty=Tensor[(8, 3, 7), bool] */;
  %195 = %191.0;
  (%192, %193, meta[relay.Constant][14] /* ty=Tensor[(528), int64] */, %var_7894, %var_7895, %194, meta[relay.Constant][15] /* ty=Tensor[(168), float32] */, %195, %var_7930)
}

def @func_11222() -> Tensor[(416), int64] {
  %196 = @func_5663() /* ty=(Tensor[(416), int64],) */;
  %196.0
}

def @func_10080(%var_10068: Tensor[(1, 528), int64], %var_10069: Tensor[(16), int64]) -> (Tensor[(9, 15, 11), uint64], Tensor[(6, 12, 4), int8], Tensor[(416), int64], Tensor[(1, 528), int64], Tensor[(16), int64], Tensor[(48), int64]) {
  %197 = @func_9956() /* ty=(Tensor[(?, 15, 11), bool], Tensor[(9, 15, 11), uint64], Tensor[(1485), bool]) */;
  %198 = cast(meta[relay.Constant][16] /* ty=Tensor[(288), bool] */, dtype="bool") /* ty=Tensor[(288), bool] */;
  %199 = reshape(%198, newshape=[6, 12, 4]) /* ty=Tensor[(6, 12, 4), bool] */;
  %200 = @func_1801(%199) /* ty=Tensor[(6, 12, 4), bool] */;
  %201 = cast(meta[relay.Constant][16] /* ty=Tensor[(288), bool] */, dtype="int8") /* ty=Tensor[(288), int8] */;
  %202 = shape_of(%200, dtype="int32") /* ty=Tensor[(3), int32] */;
  %203 = cast(%200, dtype="int8") /* ty=Tensor[(6, 12, 4), int8] */;
  %204 = dyn.reshape(%201, %202, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %205 = cast(%var_10068, dtype="int64") /* ty=Tensor[(1, 528), int64] */;
  %206 = cast(%var_10069, dtype="int64") /* ty=Tensor[(16), int64] */;
  %207 = cast(meta[relay.Constant][17] /* ty=Tensor[(48), int64] */, dtype="int64") /* ty=Tensor[(48), int64] */;
  %208 = reshape(%205, newshape=[528]) /* ty=Tensor[(528), int64] */;
  %209 = reshape(%206, newshape=[16]) /* ty=Tensor[(16), int64] */;
  %210 = reshape(%207, newshape=[12, 4]) /* ty=Tensor[(12, 4), int64] */;
  %211 = @func_9574(%208, %209, %210) /* ty=(Tensor[(416), int64], Tensor[(156), int8], Tensor[(528), int64], Tensor[(16), int64], Tensor[(12, 4), int64]) */;
  %212 = %197.1;
  %213 = left_shift(%203, %204) /* ty=Tensor[(6, 12, 4), int8] */;
  %214 = %211.0;
  (%212, %213, %214, %var_10068, %var_10069, meta[relay.Constant][17] /* ty=Tensor[(48), int64] */)
}

def @func_9629() -> Tensor[(416), int64] {
  %215 = @func_7282() /* ty=(Tensor[(416), int64],) */;
  %215.0
}

def @func_8704() -> Tensor[(416), float64] {
  %216 = @func_5781() /* ty=(Tensor[(416), int64],) */;
  %217 = %216.0;
  %218 = cast(%217, dtype="float64") /* ty=Tensor[(416), float64] */;
  log10(%218) /* ty=Tensor[(416), float64] */
}

def @func_1958(%var_1955: Tensor[(9, 4, 7), float32]) -> Tensor[(9, 4, 7), float32] {
  %219 = cast(%var_1955, dtype="float32") /* ty=Tensor[(9, 4, 7), float32] */;
  tan(%219) /* ty=Tensor[(9, 4, 7), float32] */
}

def @func_9596() -> Tensor[(416), int64] {
  @func_5837() /* ty=Tensor[(416), int64] */
}

def @func_9244() -> (Tensor[(416), int64], Tensor[(1, 15, 11), float64], Tensor[(1, 15, 11), float64], Tensor[(1, 15, 11), float32]) {
  %220 = @func_6294() /* ty=(Tensor[(416), int64],) */;
  %221 = @func_6871() /* ty=(Tensor[(416), bool], Tensor[(416), int64], Tensor[(1, 15, 11), float64]) */;
  %222 = @func_9131() /* ty=Tensor[(1, 15, 11), float64] */;
  %223 = cast(%222, dtype="float32") /* ty=Tensor[(1, 15, 11), float32] */;
  %224 = %220.0;
  %225 = %221.2;
  %226 = @func_9131() /* ty=Tensor[(1, 15, 11), float64] */;
  %227 = rsqrt(%223) /* ty=Tensor[(1, 15, 11), float32] */;
  (%224, %225, %226, %227)
}

def @func_8061() -> (Tensor[(1, 15, 11), float64],) {
  %228 = @func_5627() /* ty=(Tensor[(1, 15, 11), float64], Tensor[(416), int64], Tensor[(2, 728), int64]) */;
  %229 = %228.0;
  (%229,)
}

def @func_26(%var_0: Tensor[(8, 3, 7), float32], %var_1: Tensor[(8, 3, 7), float32]) -> Tensor[(8, 3, 7), bool] {
  %230 = cast(%var_1, dtype="float32") /* ty=Tensor[(8, 3, 7), float32] */;
  %231 = shape_of(%var_0, dtype="int32") /* ty=Tensor[(3), int32] */;
  %232 = cast(%var_0, dtype="float32") /* ty=Tensor[(8, 3, 7), float32] */;
  %233 = dyn.reshape(%230, %231, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %234 = mod(%232, %233) /* ty=Tensor[(8, 3, 7), float32] */;
  %235 = cast(%234, dtype="bool") /* ty=Tensor[(8, 3, 7), bool] */;
  %236 = shape_of(%var_0, dtype="int32") /* ty=Tensor[(3), int32] */;
  %237 = cast(%var_0, dtype="bool") /* ty=Tensor[(8, 3, 7), bool] */;
  %238 = dyn.reshape(%235, %236, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%237, %238) /* ty=Tensor[(8, 3, 7), bool] */
}

def @func_9048() -> Tensor[(416), int64] {
  %239 = @func_6294() /* ty=(Tensor[(416), int64],) */;
  %239.0
}

def @func_11269(%var_11266: Tensor[(8, 66), int64], %var_11267: Tensor[(16), int64]) -> (Tensor[(1, 15, 11), float64], Tensor[(48), int64], Tensor[(8, 66), int64], Tensor[(16), int64]) {
  %240 = @func_6805() /* ty=(Tensor[(1, 15, 11), float64],) */;
  %241 = cast(%var_11266, dtype="int64") /* ty=Tensor[(8, 66), int64] */;
  %242 = cast(%var_11267, dtype="int64") /* ty=Tensor[(16), int64] */;
  %243 = reshape(%241, newshape=[1, 528]) /* ty=Tensor[(1, 528), int64] */;
  %244 = reshape(%242, newshape=[16]) /* ty=Tensor[(16), int64] */;
  %245 = @func_10080(%243, %244) /* ty=(Tensor[(9, 15, 11), uint64], Tensor[(6, 12, 4), int8], Tensor[(416), int64], Tensor[(1, 528), int64], Tensor[(16), int64], Tensor[(48), int64]) */;
  %246 = %240.0;
  %247 = %245.5;
  (%246, %247, %var_11266, %var_11267)
}

def @func_10222(%var_10200: Tensor[(16, 10, 4), uint8], %var_10201: Tensor[(16, 10, 4), uint8], %var_10206: int16) -> (Tensor[(16, 10, 4), uint8], Tensor[(3, 10, 1), bool], int16, Tensor[(30), int16], Tensor[(156), int8]) {
  %248 = cast(%var_10201, dtype="uint8") /* ty=Tensor[(16, 10, 4), uint8] */;
  %249 = shape_of(%var_10200, dtype="int32") /* ty=Tensor[(3), int32] */;
  %250 = cast(%var_10200, dtype="uint8") /* ty=Tensor[(16, 10, 4), uint8] */;
  %251 = dyn.reshape(%248, %249, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %252 = cast(%var_10206, dtype="int16") /* ty=int16 */;
  %253 = cast(meta[relay.Constant][18] /* ty=Tensor[(30), int16] */, dtype="int16") /* ty=Tensor[(30), int16] */;
  %254 = cast(meta[relay.Constant][19] /* ty=Tensor[(156), int8] */, dtype="int8") /* ty=Tensor[(156), int8] */;
  %255 = reshape(%252, newshape=[]) /* ty=int16 */;
  %256 = reshape(%253, newshape=[3, 10, 1]) /* ty=Tensor[(3, 10, 1), int16] */;
  %257 = reshape(%254, newshape=[3, 52]) /* ty=Tensor[(3, 52), int8] */;
  %258 = @func_5275(%255, %256, %257) /* ty=(Tensor[(3, 10, 1), bool], Tensor[(13, 2, 6), int8], Tensor[(3, 52), int8]) */;
  %259 = bitwise_and(%250, %251) /* ty=Tensor[(16, 10, 4), uint8] */;
  %260 = %258.0;
  (%259, %260, %var_10206, meta[relay.Constant][18] /* ty=Tensor[(30), int16] */, meta[relay.Constant][19] /* ty=Tensor[(156), int8] */)
}

def @func_8402() -> (Tensor[(416), bool],) {
  %261 = @func_8278() /* ty=(Tensor[(416), int64], Tensor[(416), int64], Tensor[(416), bool]) */;
  %262 = %261.2;
  (%262,)
}

def @func_9294() -> (Tensor[(416), float64], Tensor[(416), int64], Tensor[(416), int16]) {
  %263 = @func_8704() /* ty=Tensor[(416), float64] */;
  %264 = cast(%263, dtype="bool") /* ty=Tensor[(416), bool] */;
  %265 = reshape(%264, newshape=[416]) /* ty=Tensor[(416), bool] */;
  %266 = @func_9048() /* ty=Tensor[(416), int64] */;
  %267 = @func_7015(%265) /* ty=Tensor[(416), int16] */;
  (%263, %266, %267)
}

def @func_6156() -> (Tensor[(416), int64],) {
  %268 = @func_5663() /* ty=(Tensor[(416), int64],) */;
  %269 = %268.0;
  (%269,)
}

def @func_4182(%var_4167: Tensor[(14, 12, 16), uint8], %var_4168: Tensor[(14, 12, 16), uint8]) -> (Tensor[(14, 12, 16), float32],) {
  %270 = cast(%var_4168, dtype="bool") /* ty=Tensor[(14, 12, 16), bool] */;
  %271 = shape_of(%var_4167, dtype="int32") /* ty=Tensor[(3), int32] */;
  %272 = cast(%var_4167, dtype="bool") /* ty=Tensor[(14, 12, 16), bool] */;
  %273 = dyn.reshape(%270, %271, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %274 = greater(%272, %273) /* ty=Tensor[(14, 12, 16), bool] */;
  %275 = cast(%274, dtype="float64") /* ty=Tensor[(14, 12, 16), float64] */;
  %276 = shape_of(%var_4167, dtype="int32") /* ty=Tensor[(3), int32] */;
  %277 = cast(%var_4167, dtype="float64") /* ty=Tensor[(14, 12, 16), float64] */;
  %278 = dyn.reshape(%275, %276, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %279 = floor_mod(%277, %278) /* ty=Tensor[(14, 12, 16), float64] */;
  %280 = cast(%279, dtype="float32") /* ty=Tensor[(14, 12, 16), float32] */;
  %281 = shape_of(%274, dtype="int32") /* ty=Tensor[(3), int32] */;
  %282 = cast(%274, dtype="float32") /* ty=Tensor[(14, 12, 16), float32] */;
  %283 = dyn.reshape(%280, %281, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %284 = power(%282, %283) /* ty=Tensor[(14, 12, 16), float32] */;
  (%284,)
}

def @func_6235(%var_6224: Tensor[(16, 1), int64], %var_6233: Tensor[(1008), float32]) -> (Tensor[(416), int64], Tensor[(2, 8, 3), int64], Tensor[(24, 22), int64], Tensor[(16, 1), int64], Tensor[(4, 12), int64], Tensor[(12, 7, 12), float32], Tensor[(1008), float32]) {
  %285 = @func_5802() /* ty=(Tensor[(416), int64],) */;
  %286 = cast(meta[relay.Constant][20] /* ty=Tensor[(24, 22), int64] */, dtype="int64") /* ty=Tensor[(24, 22), int64] */;
  %287 = cast(%var_6224, dtype="int64") /* ty=Tensor[(16, 1), int64] */;
  %288 = cast(meta[relay.Constant][21] /* ty=Tensor[(4, 12), int64] */, dtype="int64") /* ty=Tensor[(4, 12), int64] */;
  %289 = reshape(%286, newshape=[528]) /* ty=Tensor[(528), int64] */;
  %290 = reshape(%287, newshape=[16]) /* ty=Tensor[(16), int64] */;
  %291 = reshape(%288, newshape=[48]) /* ty=Tensor[(48), int64] */;
  %292 = @func_5745(%289, %290, %291) /* ty=(Tensor[(416), int64], Tensor[(6, 11, 8), bool], int64, Tensor[(528), int64], Tensor[(2, 8, 3), int64], Tensor[(16), int64], Tensor[(48), int64], Tensor[(13, 2, 6), int8], Tensor[(156), int8]) */;
  %293 = cast(%var_6233, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %294 = reshape(%293, newshape=[12, 7, 12]) /* ty=Tensor[(12, 7, 12), float32] */;
  %295 = @func_3188(%294) /* ty=(Tensor[(12, 7, 12), float32],) */;
  %296 = %285.0;
  %297 = %292.4;
  %298 = %295.0;
  (%296, %297, meta[relay.Constant][20] /* ty=Tensor[(24, 22), int64] */, %var_6224, meta[relay.Constant][21] /* ty=Tensor[(4, 12), int64] */, %298, %var_6233)
}

def @func_5837() -> Tensor[(416), int64] {
  %299 = @func_5663() /* ty=(Tensor[(416), int64],) */;
  %299.0
}

def @func_6529(%var_6478: Tensor[(4, 14, 16), uint32], %var_6519: Tensor[(4, 14, 16), uint32]) -> (Tensor[(416), int64], Tensor[(4, 14, 16), float64]) {
  %300 = cast(%var_6478, dtype="uint32") /* ty=Tensor[(4, 14, 16), uint32] */;
  %301 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(4, 14, 16), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %302 = cast(meta[relay.Constant][22] /* ty=Tensor[(4, 14, 16), uint32] */, dtype="uint32") /* ty=Tensor[(4, 14, 16), uint32] */;
  %303 = dyn.reshape(%300, %301, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %304 = maximum(%302, %303) /* ty=Tensor[(4, 14, 16), uint32] */;
  %305 = cast(%var_6519, dtype="float64") /* ty=Tensor[(4, 14, 16), float64] */;
  %306 = shape_of(%304, dtype="int32") /* ty=Tensor[(3), int32] */;
  %307 = cast(%304, dtype="float64") /* ty=Tensor[(4, 14, 16), float64] */;
  %308 = dyn.reshape(%305, %306, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %309 = @func_6426() /* ty=Tensor[(416), int64] */;
  %310 = divide(%307, %308) /* ty=Tensor[(4, 14, 16), float64] */;
  (%309, %310)
}

def @func_11083() -> (Tensor[(416), int64], Tensor[(416), int64]) {
  %311 = @func_10521() /* ty=(Tensor[(416), int64],) */;
  %312 = @func_9048() /* ty=Tensor[(416), int64] */;
  %313 = %311.0;
  (%312, %313)
}

def @func_5275(%var_5260: int16, %var_5261: Tensor[(3, 10, 1), int16], %var_5267: Tensor[(3, 52), int8]) -> (Tensor[(3, 10, 1), bool], Tensor[(13, 2, 6), int8], Tensor[(3, 52), int8]) {
  %314 = cast(%var_5260, dtype="bool") /* ty=bool */;
  %315 = cast(%var_5261, dtype="bool") /* ty=Tensor[(3, 10, 1), bool] */;
  %316 = cast(%var_5267, dtype="int8") /* ty=Tensor[(3, 52), int8] */;
  %317 = cast(%var_5267, dtype="int8") /* ty=Tensor[(3, 52), int8] */;
  %318 = reshape(%316, newshape=[13, 2, 6]) /* ty=Tensor[(13, 2, 6), int8] */;
  %319 = reshape(%317, newshape=[13, 2, 6]) /* ty=Tensor[(13, 2, 6), int8] */;
  %320 = less_equal(%314, %315) /* ty=Tensor[(3, 10, 1), bool] */;
  %321 = @func_3710(%318, %319) /* ty=Tensor[(13, 2, 6), int8] */;
  (%320, %321, %var_5267)
}

def @func_10106() -> Tensor[(416), bool] {
  %322 = @func_6740() /* ty=(Tensor[(416), bool],) */;
  %322.0
}

def @func_11506() -> Tensor[(416), bool] {
  %323 = @func_8278() /* ty=(Tensor[(416), int64], Tensor[(416), int64], Tensor[(416), bool]) */;
  %323.2
}

def @func_11298() -> Tensor[(416), int64] {
  @func_5954() /* ty=Tensor[(416), int64] */
}

def @func_5995(%var_5988: Tensor[(252), float32]) -> (Tensor[(416), int64], Tensor[(9, 4, 7), float32], Tensor[(252), float32]) {
  %324 = @func_5781() /* ty=(Tensor[(416), int64],) */;
  %325 = cast(%var_5988, dtype="float32") /* ty=Tensor[(252), float32] */;
  %326 = reshape(%325, newshape=[9, 4, 7]) /* ty=Tensor[(9, 4, 7), float32] */;
  %327 = %324.0;
  %328 = @func_1958(%326) /* ty=Tensor[(9, 4, 7), float32] */;
  (%327, %328, %var_5988)
}

def @func_2652(%var_2617: Tensor[(7, 3, 15), float64], %var_2636: Tensor[(416), int64]) -> (Tensor[(7, 3, 15), int16], Tensor[(16), int64], Tensor[(416), int64], Tensor[(4, 4), int64]) {
  %329 = cast(meta[relay.Constant][23] /* ty=Tensor[(7, 3, 15), float64] */, dtype="float64") /* ty=Tensor[(7, 3, 15), float64] */;
  %330 = shape_of(%var_2617, dtype="int32") /* ty=Tensor[(3), int32] */;
  %331 = cast(%var_2617, dtype="float64") /* ty=Tensor[(7, 3, 15), float64] */;
  %332 = dyn.reshape(%329, %330, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %333 = mod(%331, %332) /* ty=Tensor[(7, 3, 15), float64] */;
  %334 = cast(meta[relay.Constant][23] /* ty=Tensor[(7, 3, 15), float64] */, dtype="int16") /* ty=Tensor[(7, 3, 15), int16] */;
  %335 = shape_of(%333, dtype="int32") /* ty=Tensor[(3), int32] */;
  %336 = cast(%333, dtype="int16") /* ty=Tensor[(7, 3, 15), int16] */;
  %337 = dyn.reshape(%334, %335, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %338 = cast(%var_2636, dtype="int64") /* ty=Tensor[(416), int64] */;
  %339 = cast(meta[relay.Constant][24] /* ty=Tensor[(4, 4), int64] */, dtype="int64") /* ty=Tensor[(4, 4), int64] */;
  %340 = reshape(%338, newshape=[416]) /* ty=Tensor[(416), int64] */;
  %341 = reshape(%339, newshape=[16]) /* ty=Tensor[(16), int64] */;
  %342 = @func_456(%340, %341) /* ty=(Tensor[(12, 3, 7), bool], Tensor[(2, 8, 3), int64], Tensor[(416), int64], Tensor[(16), int64], Tensor[(8, 3, 7), bool], Tensor[(168), float32], Tensor[(2, 8, 3), int64], Tensor[(2, 8, 3), int64]) */;
  %343 = bitwise_or(%336, %337) /* ty=Tensor[(7, 3, 15), int16] */;
  %344 = %342.3;
  (%343, %344, %var_2636, meta[relay.Constant][24] /* ty=Tensor[(4, 4), int64] */)
}

def @func_7381(%var_7368: Tensor[(252), float32]) -> (Tensor[(416), int64], Tensor[(9, 4, 7), float32], Tensor[(252), float32], Tensor[(1, 15, 11), float64]) {
  %345 = cast(%var_7368, dtype="float32") /* ty=Tensor[(252), float32] */;
  %346 = reshape(%345, newshape=[9, 4, 7]) /* ty=Tensor[(9, 4, 7), float32] */;
  %347 = @func_6805() /* ty=(Tensor[(1, 15, 11), float64],) */;
  %348 = @func_5954() /* ty=Tensor[(416), int64] */;
  %349 = @func_1958(%346) /* ty=Tensor[(9, 4, 7), float32] */;
  %350 = %347.0;
  (%348, %349, %var_7368, %350)
}

def @func_4228(%var_4207: Tensor[(2, 3, 14), int64], %var_4208: Tensor[(2, 3, 14), int64]) -> Tensor[(2, 3, 14), int64] {
  %351 = cast(%var_4208, dtype="int64") /* ty=Tensor[(2, 3, 14), int64] */;
  %352 = shape_of(%var_4207, dtype="int32") /* ty=Tensor[(3), int32] */;
  %353 = cast(%var_4207, dtype="int64") /* ty=Tensor[(2, 3, 14), int64] */;
  %354 = dyn.reshape(%351, %352, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  logical_xor(%353, %354) /* ty=Tensor[(2, 3, 14), int64] */
}

def @func_5745(%var_5722: Tensor[(528), int64], %var_5727: Tensor[(16), int64], %var_5728: Tensor[(48), int64]) -> (Tensor[(416), int64], Tensor[(6, 11, 8), bool], int64, Tensor[(528), int64], Tensor[(2, 8, 3), int64], Tensor[(16), int64], Tensor[(48), int64], Tensor[(13, 2, 6), int8], Tensor[(156), int8]) {
  %355 = @func_5663() /* ty=(Tensor[(416), int64],) */;
  %356 = cast(1 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %357 = cast(%var_5722, dtype="int64") /* ty=Tensor[(528), int64] */;
  %358 = reshape(%356, newshape=[]) /* ty=int64 */;
  %359 = reshape(%357, newshape=[6, 11, 8]) /* ty=Tensor[(6, 11, 8), int64] */;
  %360 = cast(%var_5727, dtype="int64") /* ty=Tensor[(16), int64] */;
  %361 = cast(%var_5728, dtype="int64") /* ty=Tensor[(48), int64] */;
  %362 = reshape(%360, newshape=[2, 8, 1]) /* ty=Tensor[(2, 8, 1), int64] */;
  %363 = reshape(%361, newshape=[2, 8, 3]) /* ty=Tensor[(2, 8, 3), int64] */;
  %364 = cast(meta[relay.Constant][25] /* ty=Tensor[(156), int8] */, dtype="int8") /* ty=Tensor[(156), int8] */;
  %365 = cast(meta[relay.Constant][25] /* ty=Tensor[(156), int8] */, dtype="int8") /* ty=Tensor[(156), int8] */;
  %366 = reshape(%364, newshape=[13, 2, 6]) /* ty=Tensor[(13, 2, 6), int8] */;
  %367 = reshape(%365, newshape=[13, 2, 6]) /* ty=Tensor[(13, 2, 6), int8] */;
  %368 = %355.0;
  %369 = @func_2788(%358, %359) /* ty=Tensor[(6, 11, 8), bool] */;
  %370 = @func_188(%362, %363) /* ty=Tensor[(2, 8, 3), int64] */;
  %371 = @func_3710(%366, %367) /* ty=Tensor[(13, 2, 6), int8] */;
  (%368, %369, 1 /* ty=int64 */, %var_5722, %370, %var_5727, %var_5728, %371, meta[relay.Constant][25] /* ty=Tensor[(156), int8] */)
}

def @func_10971() -> (Tensor[(416), int64], Tensor[(1, 15, 11), float64]) {
  %372 = @func_9972() /* ty=(Tensor[(1, 15, 11), float64],) */;
  %373 = @func_5837() /* ty=Tensor[(416), int64] */;
  %374 = %372.0;
  (%373, %374)
}

def @func_8914() -> (Tensor[(1, 15, 11), float64],) {
  %375 = @func_6805() /* ty=(Tensor[(1, 15, 11), float64],) */;
  %376 = %375.0;
  (%376,)
}

def @func_5080(%var_5026: Tensor[(3, 4, 15), uint8], %var_5027: Tensor[(3, 4, 15), uint8], %var_5069: Tensor[(1008), float32]) -> (Tensor[(3, 4, 15), uint8], Tensor[(416), int64], Tensor[(16), int64], Tensor[(12, 7, 12), float32], Tensor[(1008), float32], Tensor[(2, 13, 16), float64]) {
  %377 = cast(%var_5027, dtype="uint8") /* ty=Tensor[(3, 4, 15), uint8] */;
  %378 = shape_of(%var_5026, dtype="int32") /* ty=Tensor[(3), int32] */;
  %379 = cast(%var_5026, dtype="uint8") /* ty=Tensor[(3, 4, 15), uint8] */;
  %380 = dyn.reshape(%377, %378, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %381 = cast(%var_5069, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %382 = reshape(%381, newshape=[12, 7, 12]) /* ty=Tensor[(12, 7, 12), float32] */;
  %383 = @func_3188(%382) /* ty=(Tensor[(12, 7, 12), float32],) */;
  %384 = cast(meta[relay.Constant][26] /* ty=Tensor[(416), int64] */, dtype="int64") /* ty=Tensor[(416), int64] */;
  %385 = cast(meta[relay.Constant][27] /* ty=Tensor[(16), int64] */, dtype="int64") /* ty=Tensor[(16), int64] */;
  %386 = cast(meta[relay.Constant][26] /* ty=Tensor[(416), int64] */, dtype="int64") /* ty=Tensor[(416), int64] */;
  %387 = reshape(%384, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), int64] */;
  %388 = reshape(%385, newshape=[8, 2]) /* ty=Tensor[(8, 2), int64] */;
  %389 = reshape(%386, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), int64] */;
  %390 = @func_394(%387, %388, %389) /* ty=(Tensor[(2, 13, 16), bool], Tensor[(8, 3, 7), bool], Tensor[(168), float32], Tensor[(2, 8, 3), int64], Tensor[(8, 2), int64], Tensor[(48), int64], Tensor[(8, 3, 7), bool], Tensor[(2, 8, 3), int64], Tensor[(8, 3, 7), bool], Tensor[(8, 3, 7), bool], Tensor[(2, 13, 16), bool]) */;
  %391 = %390.0;
  %392 = cast(%391, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
  %393 = maximum(%379, %380) /* ty=Tensor[(3, 4, 15), uint8] */;
  %394 = %383.0;
  %395 = erf(%392) /* ty=Tensor[(2, 13, 16), float64] */;
  (%393, meta[relay.Constant][26] /* ty=Tensor[(416), int64] */, meta[relay.Constant][27] /* ty=Tensor[(16), int64] */, %394, %var_5069, %395)
}

def @func_4316(%var_4283: Tensor[(14, 15, 13), uint32], %var_4284: Tensor[(14, 15, 13), uint32], %var_4289: Tensor[(14, 15, 13), bool]) -> (Tensor[(14, 15, 13), bool], Tensor[(14, 15, 13), float64]) {
  %396 = cast(%var_4284, dtype="bool") /* ty=Tensor[(14, 15, 13), bool] */;
  %397 = shape_of(%var_4283, dtype="int32") /* ty=Tensor[(3), int32] */;
  %398 = cast(%var_4283, dtype="bool") /* ty=Tensor[(14, 15, 13), bool] */;
  %399 = dyn.reshape(%396, %397, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %400 = greater_equal(%398, %399) /* ty=Tensor[(14, 15, 13), bool] */;
  %401 = cast(%var_4289, dtype="bool") /* ty=Tensor[(14, 15, 13), bool] */;
  %402 = shape_of(%400, dtype="int32") /* ty=Tensor[(3), int32] */;
  %403 = cast(%400, dtype="bool") /* ty=Tensor[(14, 15, 13), bool] */;
  %404 = dyn.reshape(%401, %402, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %405 = cast(%var_4284, dtype="float32") /* ty=Tensor[(14, 15, 13), float32] */;
  %406 = asin(%405) /* ty=Tensor[(14, 15, 13), float32] */;
  %407 = cast(%406, dtype="float64") /* ty=Tensor[(14, 15, 13), float64] */;
  %408 = less_equal(%403, %404) /* ty=Tensor[(14, 15, 13), bool] */;
  %409 = log2(%407) /* ty=Tensor[(14, 15, 13), float64] */;
  (%408, %409)
}

def @func_8278() -> (Tensor[(416), int64], Tensor[(416), int64], Tensor[(416), bool]) {
  %410 = @func_6740() /* ty=(Tensor[(416), bool],) */;
  %411 = @func_6426() /* ty=Tensor[(416), int64] */;
  %412 = @func_6426() /* ty=Tensor[(416), int64] */;
  %413 = %410.0;
  (%411, %412, %413)
}

def @func_8679() -> Tensor[(1, 15, 11), float64] {
  %414 = @func_8061() /* ty=(Tensor[(1, 15, 11), float64],) */;
  %414.0
}

def @func_8144() -> (Tensor[(416), int64],) {
  %415 = @func_6892() /* ty=(Tensor[(416), int64],) */;
  %416 = %415.0;
  (%416,)
}

def @func_10493(%var_10473: Tensor[(2730), uint32]) -> (Tensor[(1, 15, 11), float64], Tensor[(14, 15, 13), float64], Tensor[(2730), uint32]) {
  %417 = @func_9244() /* ty=(Tensor[(416), int64], Tensor[(1, 15, 11), float64], Tensor[(1, 15, 11), float64], Tensor[(1, 15, 11), float32]) */;
  %418 = cast(%var_10473, dtype="uint32") /* ty=Tensor[(2730), uint32] */;
  %419 = cast(%var_10473, dtype="uint32") /* ty=Tensor[(2730), uint32] */;
  %420 = cast(%var_10473, dtype="bool") /* ty=Tensor[(2730), bool] */;
  %421 = reshape(%418, newshape=[14, 15, 13]) /* ty=Tensor[(14, 15, 13), uint32] */;
  %422 = reshape(%419, newshape=[14, 15, 13]) /* ty=Tensor[(14, 15, 13), uint32] */;
  %423 = reshape(%420, newshape=[14, 15, 13]) /* ty=Tensor[(14, 15, 13), bool] */;
  %424 = @func_4316(%421, %422, %423) /* ty=(Tensor[(14, 15, 13), bool], Tensor[(14, 15, 13), float64]) */;
  %425 = %417.1;
  %426 = %424.1;
  (%425, %426, %var_10473)
}

def @func_4378(%var_4367: Tensor[(16, 12, 13), float64]) -> Tensor[(16, 12, 13), bool] {
  %427 = cast(%var_4367, dtype="float64") /* ty=Tensor[(16, 12, 13), float64] */;
  %428 = tan(%427) /* ty=Tensor[(16, 12, 13), float64] */;
  %429 = cast(%var_4367, dtype="bool") /* ty=Tensor[(16, 12, 13), bool] */;
  %430 = shape_of(%428, dtype="int32") /* ty=Tensor[(3), int32] */;
  %431 = cast(%428, dtype="bool") /* ty=Tensor[(16, 12, 13), bool] */;
  %432 = dyn.reshape(%429, %430, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%431, %432) /* ty=Tensor[(16, 12, 13), bool] */
}

def @func_10420() -> (Tensor[(416), int64], Tensor[(416), int64], Tensor[(416), int64], Tensor[(2, 8, 3), int64], Tensor[(16), int64], Tensor[(416), int64], Tensor[(12, 3, 7), bool]) {
  %433 = @func_8144() /* ty=(Tensor[(416), int64],) */;
  %434 = @func_6636() /* ty=(Tensor[(416), int64],) */;
  %435 = @func_7282() /* ty=(Tensor[(416), int64],) */;
  %436 = %434.0;
  %437 = cast(%436, dtype="int64") /* ty=Tensor[(416), int64] */;
  %438 = cast(meta[relay.Constant][28] /* ty=Tensor[(16), int64] */, dtype="int64") /* ty=Tensor[(16), int64] */;
  %439 = reshape(%437, newshape=[416]) /* ty=Tensor[(416), int64] */;
  %440 = reshape(%438, newshape=[16]) /* ty=Tensor[(16), int64] */;
  %441 = @func_456(%439, %440) /* ty=(Tensor[(12, 3, 7), bool], Tensor[(2, 8, 3), int64], Tensor[(416), int64], Tensor[(16), int64], Tensor[(8, 3, 7), bool], Tensor[(168), float32], Tensor[(2, 8, 3), int64], Tensor[(2, 8, 3), int64]) */;
  %442 = @func_5663() /* ty=(Tensor[(416), int64],) */;
  %443 = %433.0;
  %444 = cast(%443, dtype="int64") /* ty=Tensor[(416), int64] */;
  %445 = cast(meta[relay.Constant][28] /* ty=Tensor[(16), int64] */, dtype="int64") /* ty=Tensor[(16), int64] */;
  %446 = reshape(%444, newshape=[416]) /* ty=Tensor[(416), int64] */;
  %447 = reshape(%445, newshape=[16]) /* ty=Tensor[(16), int64] */;
  %448 = @func_456(%446, %447) /* ty=(Tensor[(12, 3, 7), bool], Tensor[(2, 8, 3), int64], Tensor[(416), int64], Tensor[(16), int64], Tensor[(8, 3, 7), bool], Tensor[(168), float32], Tensor[(2, 8, 3), int64], Tensor[(2, 8, 3), int64]) */;
  %449 = %435.0;
  %450 = %441.6;
  %451 = %442.0;
  %452 = %448.0;
  (%443, %436, %449, %450, meta[relay.Constant][28] /* ty=Tensor[(16), int64] */, %451, %452)
}

def @func_10264() -> (Tensor[(416), bool], Tensor[(416), int16]) {
  %453 = @func_9455() /* ty=Tensor[(416), bool] */;
  %454 = cast(%453, dtype="bool") /* ty=Tensor[(416), bool] */;
  %455 = reshape(%454, newshape=[416]) /* ty=Tensor[(416), bool] */;
  %456 = @func_7015(%455) /* ty=Tensor[(416), int16] */;
  (%453, %456)
}

def @func_7667(%var_7657: Tensor[(9, 15, 11), bool]) -> (Tensor[(9, 15, 11), uint64],) {
  %457 = @func_7107() /* ty=Tensor[(?, 15, 11), bool] */;
  %458 = cast(%457, dtype="uint64") /* ty=Tensor[(?, 15, 11), uint64] */;
  %459 = cast(%var_7657, dtype="uint64") /* ty=Tensor[(9, 15, 11), uint64] */;
  %460 = logical_xor(%458, %459) /* ty=Tensor[(9, 15, 11), uint64] */;
  (%460,)
}

def @func_2788(%var_2760: int64, %var_2761: Tensor[(6, 11, 8), int64]) -> Tensor[(6, 11, 8), bool] {
  %461 = cast(%var_2760, dtype="bool") /* ty=bool */;
  %462 = cast(%var_2761, dtype="bool") /* ty=Tensor[(6, 11, 8), bool] */;
  not_equal(%461, %462) /* ty=Tensor[(6, 11, 8), bool] */
}

def @func_6559() -> (Tensor[(416), int64], Tensor[(416), int64]) {
  %463 = @func_6447() /* ty=(Tensor[(416), int64],) */;
  %464 = @func_5954() /* ty=Tensor[(416), int64] */;
  %465 = %463.0;
  (%464, %465)
}

def @func_10521() -> (Tensor[(416), int64],) {
  %466 = @func_9319() /* ty=Tensor[(416), int64] */;
  (%466,)
}

def @func_9574(%var_9553: Tensor[(528), int64], %var_9554: Tensor[(16), int64], %var_9555: Tensor[(12, 4), int64]) -> (Tensor[(416), int64], Tensor[(156), int8], Tensor[(528), int64], Tensor[(16), int64], Tensor[(12, 4), int64]) {
  %467 = @func_6871() /* ty=(Tensor[(416), bool], Tensor[(416), int64], Tensor[(1, 15, 11), float64]) */;
  %468 = cast(%var_9553, dtype="int64") /* ty=Tensor[(528), int64] */;
  %469 = cast(%var_9554, dtype="int64") /* ty=Tensor[(16), int64] */;
  %470 = cast(%var_9555, dtype="int64") /* ty=Tensor[(12, 4), int64] */;
  %471 = reshape(%468, newshape=[528]) /* ty=Tensor[(528), int64] */;
  %472 = reshape(%469, newshape=[16]) /* ty=Tensor[(16), int64] */;
  %473 = reshape(%470, newshape=[48]) /* ty=Tensor[(48), int64] */;
  %474 = @func_5745(%471, %472, %473) /* ty=(Tensor[(416), int64], Tensor[(6, 11, 8), bool], int64, Tensor[(528), int64], Tensor[(2, 8, 3), int64], Tensor[(16), int64], Tensor[(48), int64], Tensor[(13, 2, 6), int8], Tensor[(156), int8]) */;
  %475 = %467.1;
  %476 = %474.8;
  (%475, %476, %var_9553, %var_9554, %var_9555)
}

def @func_10913(%var_10796: Tensor[(2, 728), int64], %var_10813: Tensor[(416), int64], %var_10814: Tensor[(16), int64]) -> (Tensor[(2, 728), float32], Tensor[(168), float32], Tensor[(416), int64], Tensor[(16), int64], Tensor[(2, 728), float64], Tensor[(2, 728), float32], Tensor[(6, 11, 8), bool], int64, Tensor[(528), int64], Tensor[(416), int64]) {
  %477 = @func_5627() /* ty=(Tensor[(1, 15, 11), float64], Tensor[(416), int64], Tensor[(2, 728), int64]) */;
  %478 = %477.2;
  %479 = cast(%var_10796, dtype="float32") /* ty=Tensor[(2, 728), float32] */;
  %480 = shape_of(%478, dtype="int32") /* ty=Tensor[(2), int32] */;
  %481 = cast(%478, dtype="float32") /* ty=Tensor[(2, 728), float32] */;
  %482 = dyn.reshape(%479, %480, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %483 = cast(%var_10813, dtype="int64") /* ty=Tensor[(416), int64] */;
  %484 = cast(%var_10814, dtype="int64") /* ty=Tensor[(16), int64] */;
  %485 = reshape(%483, newshape=[416]) /* ty=Tensor[(416), int64] */;
  %486 = reshape(%484, newshape=[16]) /* ty=Tensor[(16), int64] */;
  %487 = @func_456(%485, %486) /* ty=(Tensor[(12, 3, 7), bool], Tensor[(2, 8, 3), int64], Tensor[(416), int64], Tensor[(16), int64], Tensor[(8, 3, 7), bool], Tensor[(168), float32], Tensor[(2, 8, 3), int64], Tensor[(2, 8, 3), int64]) */;
  %488 = cast(%478, dtype="float64") /* ty=Tensor[(2, 728), float64] */;
  %489 = sin(%488) /* ty=Tensor[(2, 728), float64] */;
  %490 = cast(%489, dtype="float32") /* ty=Tensor[(2, 728), float32] */;
  %491 = tan(%490) /* ty=Tensor[(2, 728), float32] */;
  %492 = cast(%491, dtype="float64") /* ty=Tensor[(2, 728), float64] */;
  %493 = log(%492) /* ty=Tensor[(2, 728), float64] */;
  %494 = cast(%489, dtype="bool") /* ty=Tensor[(2, 728), bool] */;
  %495 = shape_of(%493, dtype="int32") /* ty=Tensor[(2), int32] */;
  %496 = cast(%493, dtype="bool") /* ty=Tensor[(2, 728), bool] */;
  %497 = dyn.reshape(%494, %495, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %498 = less_equal(%496, %497) /* ty=Tensor[(2, 728), bool] */;
  %499 = cast(%498, dtype="float64") /* ty=Tensor[(2, 728), float64] */;
  %500 = cast(%493, dtype="float64") /* ty=Tensor[(2, 728), float64] */;
  %501 = sqrt(%500) /* ty=Tensor[(2, 728), float64] */;
  %502 = cast(%501, dtype="float32") /* ty=Tensor[(2, 728), float32] */;
  %503 = exp(%502) /* ty=Tensor[(2, 728), float32] */;
  %504 = cast(%503, dtype="float64") /* ty=Tensor[(2, 728), float64] */;
  %505 = atan(%504) /* ty=Tensor[(2, 728), float64] */;
  %506 = cast(%505, dtype="float32") /* ty=Tensor[(2, 728), float32] */;
  %507 = cast(2 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %508 = cast(meta[relay.Constant][29] /* ty=Tensor[(528), int64] */, dtype="int64") /* ty=Tensor[(528), int64] */;
  %509 = reshape(%507, newshape=[]) /* ty=int64 */;
  %510 = reshape(%508, newshape=[6, 11, 8]) /* ty=Tensor[(6, 11, 8), int64] */;
  %511 = @func_8144() /* ty=(Tensor[(416), int64],) */;
  %512 = subtract(%481, %482) /* ty=Tensor[(2, 728), float32] */;
  %513 = %487.5;
  %514 = sigmoid(%499) /* ty=Tensor[(2, 728), float64] */;
  %515 = log2(%506) /* ty=Tensor[(2, 728), float32] */;
  %516 = @func_2788(%509, %510) /* ty=Tensor[(6, 11, 8), bool] */;
  %517 = %511.0;
  (%512, %513, %var_10813, %var_10814, %514, %515, %516, 2 /* ty=int64 */, meta[relay.Constant][29] /* ty=Tensor[(528), int64] */, %517)
}

def @func_9319() -> Tensor[(416), int64] {
  %518 = @func_9036() /* ty=(Tensor[(416), int64],) */;
  %518.0
}

def @func_6110(%var_6088: Tensor[(30), int16], %var_6104: Tensor[(180), uint8], %var_6105: Tensor[(504, 2), float32]) -> (Tensor[(416), int64], int16, Tensor[(30), int16], Tensor[(416), int64], Tensor[(2, 13, 16), float64], Tensor[(180), uint8], Tensor[(504, 2), float32]) {
  %519 = @func_5663() /* ty=(Tensor[(416), int64],) */;
  %520 = cast(%var_6088, dtype="int16") /* ty=Tensor[(30), int16] */;
  %521 = reshape(%520, newshape=[30]) /* ty=Tensor[(30), int16] */;
  %522 = @func_5937(%521) /* ty=(Tensor[(416), int64], Tensor[(3, 52), int8], int16, Tensor[(30), int16], Tensor[(156), int8]) */;
  %523 = @func_5663() /* ty=(Tensor[(416), int64],) */;
  %524 = cast(%var_6104, dtype="uint8") /* ty=Tensor[(180), uint8] */;
  %525 = cast(%var_6104, dtype="uint8") /* ty=Tensor[(180), uint8] */;
  %526 = cast(%var_6105, dtype="float32") /* ty=Tensor[(504, 2), float32] */;
  %527 = reshape(%524, newshape=[3, 4, 15]) /* ty=Tensor[(3, 4, 15), uint8] */;
  %528 = reshape(%525, newshape=[3, 4, 15]) /* ty=Tensor[(3, 4, 15), uint8] */;
  %529 = reshape(%526, newshape=[1008]) /* ty=Tensor[(1008), float32] */;
  %530 = @func_5080(%527, %528, %529) /* ty=(Tensor[(3, 4, 15), uint8], Tensor[(416), int64], Tensor[(16), int64], Tensor[(12, 7, 12), float32], Tensor[(1008), float32], Tensor[(2, 13, 16), float64]) */;
  %531 = %519.0;
  %532 = %522.2;
  %533 = %523.0;
  %534 = %530.5;
  (%531, %532, %var_6088, %533, %534, %var_6104, %var_6105)
}

def @func_11534() -> (Tensor[(1, 15, 11), float32],) {
  %535 = @func_5627() /* ty=(Tensor[(1, 15, 11), float64], Tensor[(416), int64], Tensor[(2, 728), int64]) */;
  %536 = %535.0;
  %537 = cast(%536, dtype="float32") /* ty=Tensor[(1, 15, 11), float32] */;
  %538 = log10(%537) /* ty=Tensor[(1, 15, 11), float32] */;
  (%538,)
}

def @func_11160() -> Tensor[(416), int64] {
  %539 = @func_9138() /* ty=(Tensor[(416), int64],) */;
  %539.0
}

def @func_8161() -> Tensor[(416), int64] {
  %540 = @func_8119() /* ty=(Tensor[(9, 15, 11), bool], Tensor[(416), int64]) */;
  %540.1
}

def @func_5627() -> (Tensor[(1, 15, 11), float64], Tensor[(416), int64], Tensor[(2, 728), int64]) {
  %541 = cast(meta[relay.Constant][30] /* ty=Tensor[(1, 15, 11), float64] */, dtype="float64") /* ty=Tensor[(1, 15, 11), float64] */;
  %542 = cast(meta[relay.Constant][31] /* ty=Tensor[(2, 728), int64] */, dtype="int64") /* ty=Tensor[(2, 728), int64] */;
  %543 = reshape(%542, newshape=[7, 13, 16]) /* ty=Tensor[(7, 13, 16), int64] */;
  %544 = @func_3300(%543) /* ty=(Tensor[(7, 13, 16), bool], Tensor[(4, 4), int64], Tensor[(315), float64], Tensor[(416), int64], Tensor[(2, 8, 3), int64], Tensor[(48), int64]) */;
  %545 = sqrt(%541) /* ty=Tensor[(1, 15, 11), float64] */;
  %546 = %544.3;
  (%545, %546, meta[relay.Constant][31] /* ty=Tensor[(2, 728), int64] */)
}

def @func_3710(%var_3689: Tensor[(13, 2, 6), int8], %var_3690: Tensor[(13, 2, 6), int8]) -> Tensor[(13, 2, 6), int8] {
  %547 = cast(%var_3690, dtype="int8") /* ty=Tensor[(13, 2, 6), int8] */;
  %548 = shape_of(%var_3689, dtype="int32") /* ty=Tensor[(3), int32] */;
  %549 = cast(%var_3689, dtype="int8") /* ty=Tensor[(13, 2, 6), int8] */;
  %550 = dyn.reshape(%547, %548, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  logical_xor(%549, %550) /* ty=Tensor[(13, 2, 6), int8] */
}

def @func_6668() -> Tensor[(416), int64] {
  %551 = @func_6636() /* ty=(Tensor[(416), int64],) */;
  %551.0
}

def @func_9036() -> (Tensor[(416), int64],) {
  %552 = @func_6356() /* ty=Tensor[(416), int64] */;
  (%552,)
}

def @func_7107() -> Tensor[(?, 15, 11), bool] {
  %553 = @func_6906() /* ty=(Tensor[(1, 15, 11), float64],) */;
  %554 = %553.0;
  %555 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 15, 11), float64] */, dtype="bool") /* ty=Tensor[(1, 15, 11), bool] */;
  %556 = shape_of(%554, dtype="int32") /* ty=Tensor[(3), int32] */;
  %557 = cast(%554, dtype="bool") /* ty=Tensor[(1, 15, 11), bool] */;
  %558 = dyn.reshape(%555, %556, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%557, %558) /* ty=Tensor[(?, 15, 11), bool] */
}

def @func_9956() -> (Tensor[(?, 15, 11), bool], Tensor[(9, 15, 11), uint64], Tensor[(1485), bool]) {
  %559 = cast(meta[relay.Constant][33] /* ty=Tensor[(1485), bool] */, dtype="bool") /* ty=Tensor[(1485), bool] */;
  %560 = reshape(%559, newshape=[9, 15, 11]) /* ty=Tensor[(9, 15, 11), bool] */;
  %561 = @func_7667(%560) /* ty=(Tensor[(9, 15, 11), uint64],) */;
  %562 = @func_9358() /* ty=Tensor[(?, 15, 11), bool] */;
  %563 = %561.0;
  (%562, %563, meta[relay.Constant][33] /* ty=Tensor[(1485), bool] */)
}

def @func_7250(%var_7193: Tensor[(30, 1), int16], %var_7200: Tensor[(112), float32]) -> (Tensor[(2, 13, 16), float64], Tensor[(180), uint8], Tensor[(1008), float32], Tensor[(416), int64], Tensor[(1, 7, 16), float32], Tensor[(112), float32], Tensor[(30, 416), bool], Tensor[(416), int64]) {
  %564 = cast(%var_7193, dtype="int16") /* ty=Tensor[(30, 1), int16] */;
  %565 = cast(meta[relay.Constant][34] /* ty=Tensor[(180), uint8] */, dtype="uint8") /* ty=Tensor[(180), uint8] */;
  %566 = cast(meta[relay.Constant][35] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %567 = reshape(%564, newshape=[30]) /* ty=Tensor[(30), int16] */;
  %568 = reshape(%565, newshape=[180]) /* ty=Tensor[(180), uint8] */;
  %569 = reshape(%566, newshape=[504, 2]) /* ty=Tensor[(504, 2), float32] */;
  %570 = @func_6110(%567, %568, %569) /* ty=(Tensor[(416), int64], int16, Tensor[(30), int16], Tensor[(416), int64], Tensor[(2, 13, 16), float64], Tensor[(180), uint8], Tensor[(504, 2), float32]) */;
  %571 = cast(%var_7200, dtype="float32") /* ty=Tensor[(112), float32] */;
  %572 = reshape(%571, newshape=[1, 7, 16]) /* ty=Tensor[(1, 7, 16), float32] */;
  %573 = @func_5663() /* ty=(Tensor[(416), int64],) */;
  %574 = %573.0;
  %575 = cast(%574, dtype="bool") /* ty=Tensor[(416), bool] */;
  %576 = cast(%var_7193, dtype="bool") /* ty=Tensor[(30, 1), bool] */;
  %577 = @func_6294() /* ty=(Tensor[(416), int64],) */;
  %578 = %570.4;
  %579 = @func_6356() /* ty=Tensor[(416), int64] */;
  %580 = @func_5884(%572) /* ty=Tensor[(1, 7, 16), float32] */;
  %581 = not_equal(%575, %576) /* ty=Tensor[(30, 416), bool] */;
  %582 = %577.0;
  (%578, meta[relay.Constant][34] /* ty=Tensor[(180), uint8] */, meta[relay.Constant][35] /* ty=Tensor[(1008), float32] */, %579, %580, %var_7200, %581, %582)
}

def @func_10006() -> (Tensor[(?, 15, 11), bool], Tensor[(1, 15, 11), float64]) {
  %583 = @func_9972() /* ty=(Tensor[(1, 15, 11), float64],) */;
  %584 = @func_9358() /* ty=Tensor[(?, 15, 11), bool] */;
  %585 = %583.0;
  (%584, %585)
}

def @func_6892() -> (Tensor[(416), int64],) {
  %586 = @func_6636() /* ty=(Tensor[(416), int64],) */;
  %587 = %586.0;
  (%587,)
}

def @func_8491() -> Tensor[(416), bool] {
  %588 = @func_8402() /* ty=(Tensor[(416), bool],) */;
  %588.0
}

def @func_5802() -> (Tensor[(416), int64],) {
  %589 = @func_5663() /* ty=(Tensor[(416), int64],) */;
  %590 = %589.0;
  (%590,)
}

def @func_6447() -> (Tensor[(416), int64],) {
  %591 = @func_5954() /* ty=Tensor[(416), int64] */;
  (%591,)
}

def @func_8251() -> (Tensor[(416), int64],) {
  %592 = @func_5802() /* ty=(Tensor[(416), int64],) */;
  %593 = %592.0;
  (%593,)
}

def @func_6962(%var_6958: Tensor[(147), int16], %var_6960: Tensor[(16), int64]) -> (Tensor[(416), int64], Tensor[(8, 52), float64], Tensor[(147), int16], Tensor[(810), float32], Tensor[(16), int64]) {
  %594 = @func_6156() /* ty=(Tensor[(416), int64],) */;
  %595 = cast(%var_6958, dtype="int16") /* ty=Tensor[(147), int16] */;
  %596 = cast(%var_6958, dtype="int16") /* ty=Tensor[(147), int16] */;
  %597 = cast(meta[relay.Constant][36] /* ty=Tensor[(810), float32] */, dtype="float32") /* ty=Tensor[(810), float32] */;
  %598 = %594.0;
  %599 = cast(%598, dtype="int64") /* ty=Tensor[(416), int64] */;
  %600 = cast(%var_6960, dtype="int64") /* ty=Tensor[(16), int64] */;
  %601 = reshape(%595, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), int16] */;
  %602 = reshape(%596, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), int16] */;
  %603 = reshape(%597, newshape=[810]) /* ty=Tensor[(810), float32] */;
  %604 = reshape(%599, newshape=[8, 52]) /* ty=Tensor[(8, 52), int64] */;
  %605 = reshape(%600, newshape=[16]) /* ty=Tensor[(16), int64] */;
  %606 = @func_3905(%601, %602, %603, %604, %605) /* ty=(Tensor[(3, 7, 7), int16], Tensor[(15, 9, 6), float32], Tensor[(810), float32], Tensor[(16), int64], Tensor[(8, 52), float64], Tensor[(6, 11, 8), bool], int64, Tensor[(528), int64]) */;
  %607 = %606.4;
  (%598, %607, %var_6958, meta[relay.Constant][36] /* ty=Tensor[(810), float32] */, %var_6960)
}

def @func_10569() -> Tensor[(416), int64] {
  %608 = @func_5802() /* ty=(Tensor[(416), int64],) */;
  %608.0
}

def @func_11540() -> Tensor[(416), bool] {
  %609 = @func_8402() /* ty=(Tensor[(416), bool],) */;
  %609.0
}

def @func_9138() -> (Tensor[(416), int64],) {
  %610 = @func_8895() /* ty=(Tensor[(416), int64],) */;
  %611 = %610.0;
  (%611,)
}

def @func_3612(%var_3601: Tensor[(15, 12, 1), uint64]) -> Tensor[(15, 12, 1), bool] {
  %612 = cast(meta[relay.Constant][37] /* ty=uint64 */, dtype="bool") /* ty=bool */;
  %613 = cast(%var_3601, dtype="bool") /* ty=Tensor[(15, 12, 1), bool] */;
  greater_equal(%612, %613) /* ty=Tensor[(15, 12, 1), bool] */
}

def @func_11455() -> Tensor[(416), float64] {
  %614 = @func_9261() /* ty=Tensor[(416), int64] */;
  %615 = cast(%614, dtype="float64") /* ty=Tensor[(416), float64] */;
  sin(%615) /* ty=Tensor[(416), float64] */
}

def @func_8827(%var_8824: Tensor[(180), uint8], %var_8825: Tensor[(1008), float32]) -> (Tensor[(416), int64], Tensor[(12, 7, 12), float32], Tensor[(180), uint8], Tensor[(1008), float32]) {
  %616 = cast(%var_8824, dtype="uint8") /* ty=Tensor[(180), uint8] */;
  %617 = cast(%var_8825, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %618 = reshape(%616, newshape=[180]) /* ty=Tensor[(180), uint8] */;
  %619 = reshape(%617, newshape=[1008]) /* ty=Tensor[(1008), float32] */;
  %620 = @func_8538(%618, %619) /* ty=(Tensor[(416), int64], Tensor[(12, 7, 12), float32], Tensor[(180), uint8], Tensor[(1008), float32]) */;
  %621 = @func_5954() /* ty=Tensor[(416), int64] */;
  %622 = %620.1;
  (%621, %622, %var_8824, %var_8825)
}

def @func_7015(%var_6995: Tensor[(416), bool]) -> Tensor[(416), int16] {
  %623 = @func_6740() /* ty=(Tensor[(416), bool],) */;
  %624 = %623.0;
  %625 = cast(%var_6995, dtype="int16") /* ty=Tensor[(416), int16] */;
  %626 = shape_of(%624, dtype="int32") /* ty=Tensor[(1), int32] */;
  %627 = cast(%624, dtype="int16") /* ty=Tensor[(416), int16] */;
  %628 = dyn.reshape(%625, %626, newshape=[]) /* ty=Tensor[(?), int16] */;
  bitwise_and(%627, %628) /* ty=Tensor[(416), int16] */
}

def @func_11645(%var_11634: Tensor[(13, 2, 4), float64], %var_11635: Tensor[(13, 2, 4), float64]) -> (Tensor[(13, 2, 4), float64], Tensor[(13, 2, 4), float32]) {
  %629 = cast(%var_11635, dtype="float64") /* ty=Tensor[(13, 2, 4), float64] */;
  %630 = shape_of(%var_11634, dtype="int32") /* ty=Tensor[(3), int32] */;
  %631 = cast(%var_11634, dtype="float64") /* ty=Tensor[(13, 2, 4), float64] */;
  %632 = dyn.reshape(%629, %630, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %633 = cast(%var_11634, dtype="float32") /* ty=Tensor[(13, 2, 4), float32] */;
  %634 = divide(%631, %632) /* ty=Tensor[(13, 2, 4), float64] */;
  %635 = cos(%633) /* ty=Tensor[(13, 2, 4), float32] */;
  (%634, %635)
}

def @func_5161(%var_5132: Tensor[(3, 14, 5), float64]) -> (Tensor[(3, 14, 5), float32], Tensor[(3, 14, 5), float32], Tensor[(3, 14, 5), uint64]) {
  %636 = cast(%var_5132, dtype="float64") /* ty=Tensor[(3, 14, 5), float64] */;
  %637 = log2(%636) /* ty=Tensor[(3, 14, 5), float64] */;
  %638 = cast(%var_5132, dtype="float32") /* ty=Tensor[(3, 14, 5), float32] */;
  %639 = shape_of(%637, dtype="int32") /* ty=Tensor[(3), int32] */;
  %640 = cast(%637, dtype="float32") /* ty=Tensor[(3, 14, 5), float32] */;
  %641 = dyn.reshape(%638, %639, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %642 = cast(%var_5132, dtype="float32") /* ty=Tensor[(3, 14, 5), float32] */;
  %643 = cast(%637, dtype="uint64") /* ty=Tensor[(3, 14, 5), uint64] */;
  %644 = shape_of(%var_5132, dtype="int32") /* ty=Tensor[(3), int32] */;
  %645 = cast(%var_5132, dtype="uint64") /* ty=Tensor[(3, 14, 5), uint64] */;
  %646 = dyn.reshape(%643, %644, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %647 = divide(%640, %641) /* ty=Tensor[(3, 14, 5), float32] */;
  %648 = sqrt(%642) /* ty=Tensor[(3, 14, 5), float32] */;
  %649 = left_shift(%645, %646) /* ty=Tensor[(3, 14, 5), uint64] */;
  (%647, %648, %649)
}

def @func_188(%var_179: Tensor[(2, 8, 1), int64], %var_180: Tensor[(2, 8, 3), int64]) -> Tensor[(2, 8, 3), int64] {
  %650 = cast(%var_179, dtype="int64") /* ty=Tensor[(2, 8, 1), int64] */;
  %651 = cast(%var_180, dtype="int64") /* ty=Tensor[(2, 8, 3), int64] */;
  left_shift(%650, %651) /* ty=Tensor[(2, 8, 3), int64] */
}

def @func_3188(%var_3181: Tensor[(12, 7, 12), float32]) -> (Tensor[(12, 7, 12), float32],) {
  %652 = cast(%var_3181, dtype="float32") /* ty=Tensor[(12, 7, 12), float32] */;
  %653 = acos(%652) /* ty=Tensor[(12, 7, 12), float32] */;
  (%653,)
}

def @func_8538(%var_8534: Tensor[(180), uint8], %var_8535: Tensor[(1008), float32]) -> (Tensor[(416), int64], Tensor[(12, 7, 12), float32], Tensor[(180), uint8], Tensor[(1008), float32]) {
  %654 = @func_6447() /* ty=(Tensor[(416), int64],) */;
  %655 = cast(%var_8534, dtype="uint8") /* ty=Tensor[(180), uint8] */;
  %656 = cast(%var_8534, dtype="uint8") /* ty=Tensor[(180), uint8] */;
  %657 = cast(%var_8535, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %658 = reshape(%655, newshape=[3, 4, 15]) /* ty=Tensor[(3, 4, 15), uint8] */;
  %659 = reshape(%656, newshape=[3, 4, 15]) /* ty=Tensor[(3, 4, 15), uint8] */;
  %660 = reshape(%657, newshape=[1008]) /* ty=Tensor[(1008), float32] */;
  %661 = @func_5080(%658, %659, %660) /* ty=(Tensor[(3, 4, 15), uint8], Tensor[(416), int64], Tensor[(16), int64], Tensor[(12, 7, 12), float32], Tensor[(1008), float32], Tensor[(2, 13, 16), float64]) */;
  %662 = %654.0;
  %663 = %661.3;
  (%662, %663, %var_8534, %var_8535)
}

def @func_3300(%var_3226: Tensor[(7, 13, 16), int64]) -> (Tensor[(7, 13, 16), bool], Tensor[(4, 4), int64], Tensor[(315), float64], Tensor[(416), int64], Tensor[(2, 8, 3), int64], Tensor[(48), int64]) {
  %664 = cast(meta[relay.Constant][38] /* ty=Tensor[(7, 13, 16), int64] */, dtype="bool") /* ty=Tensor[(7, 13, 16), bool] */;
  %665 = shape_of(%var_3226, dtype="int32") /* ty=Tensor[(3), int32] */;
  %666 = cast(%var_3226, dtype="bool") /* ty=Tensor[(7, 13, 16), bool] */;
  %667 = dyn.reshape(%664, %665, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %668 = cast(meta[relay.Constant][39] /* ty=Tensor[(315), float64] */, dtype="float64") /* ty=Tensor[(315), float64] */;
  %669 = cast(meta[relay.Constant][40] /* ty=Tensor[(416), int64] */, dtype="int64") /* ty=Tensor[(416), int64] */;
  %670 = reshape(%668, newshape=[7, 3, 15]) /* ty=Tensor[(7, 3, 15), float64] */;
  %671 = reshape(%669, newshape=[416]) /* ty=Tensor[(416), int64] */;
  %672 = @func_2652(%670, %671) /* ty=(Tensor[(7, 3, 15), int16], Tensor[(16), int64], Tensor[(416), int64], Tensor[(4, 4), int64]) */;
  %673 = %672.3;
  %674 = cast(%673, dtype="int64") /* ty=Tensor[(4, 4), int64] */;
  %675 = cast(meta[relay.Constant][41] /* ty=Tensor[(48), int64] */, dtype="int64") /* ty=Tensor[(48), int64] */;
  %676 = reshape(%674, newshape=[2, 8, 1]) /* ty=Tensor[(2, 8, 1), int64] */;
  %677 = reshape(%675, newshape=[2, 8, 3]) /* ty=Tensor[(2, 8, 3), int64] */;
  %678 = equal(%666, %667) /* ty=Tensor[(7, 13, 16), bool] */;
  %679 = @func_188(%676, %677) /* ty=Tensor[(2, 8, 3), int64] */;
  (%678, %673, meta[relay.Constant][39] /* ty=Tensor[(315), float64] */, meta[relay.Constant][40] /* ty=Tensor[(416), int64] */, %679, meta[relay.Constant][41] /* ty=Tensor[(48), int64] */)
}

def @func_9261() -> Tensor[(416), int64] {
  @func_8161() /* ty=Tensor[(416), int64] */
}

def @func_6700() -> (Tensor[(416), int64],) {
  %680 = @func_5954() /* ty=Tensor[(416), int64] */;
  (%680,)
}

def @func_6906() -> (Tensor[(1, 15, 11), float64],) {
  %681 = @func_6871() /* ty=(Tensor[(416), bool], Tensor[(416), int64], Tensor[(1, 15, 11), float64]) */;
  %682 = %681.2;
  (%682,)
}

def @func_9871(%var_9865: Tensor[(14, 16, 6), int8]) -> Tensor[(14, 16, 6), int8] {
  %683 = cast(meta[relay.Constant][42] /* ty=Tensor[(14, 16, 6), int8] */, dtype="int8") /* ty=Tensor[(14, 16, 6), int8] */;
  %684 = shape_of(%var_9865, dtype="int32") /* ty=Tensor[(3), int32] */;
  %685 = cast(%var_9865, dtype="int8") /* ty=Tensor[(14, 16, 6), int8] */;
  %686 = dyn.reshape(%683, %684, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  minimum(%685, %686) /* ty=Tensor[(14, 16, 6), int8] */
}

def @func_7282() -> (Tensor[(416), int64],) {
  %687 = @func_6356() /* ty=Tensor[(416), int64] */;
  (%687,)
}

def @func_8119() -> (Tensor[(9, 15, 11), bool], Tensor[(416), int64]) {
  %688 = @func_6906() /* ty=(Tensor[(1, 15, 11), float64],) */;
  %689 = %688.0;
  %690 = cast(%689, dtype="bool") /* ty=Tensor[(1, 15, 11), bool] */;
  %691 = cast(meta[relay.Constant][43] /* ty=Tensor[(9, 15, 11), float64] */, dtype="bool") /* ty=Tensor[(9, 15, 11), bool] */;
  %692 = @func_6636() /* ty=(Tensor[(416), int64],) */;
  %693 = equal(%690, %691) /* ty=Tensor[(9, 15, 11), bool] */;
  %694 = %692.0;
  (%693, %694)
}

def @func_7464() -> (Tensor[(1, 15, 11), float64], Tensor[(416), bool]) {
  %695 = @func_6805() /* ty=(Tensor[(1, 15, 11), float64],) */;
  %696 = @func_5781() /* ty=(Tensor[(416), int64],) */;
  %697 = %696.0;
  %698 = @func_6447() /* ty=(Tensor[(416), int64],) */;
  %699 = %698.0;
  %700 = cast(%699, dtype="bool") /* ty=Tensor[(416), bool] */;
  %701 = shape_of(%697, dtype="int32") /* ty=Tensor[(1), int32] */;
  %702 = cast(%697, dtype="bool") /* ty=Tensor[(416), bool] */;
  %703 = dyn.reshape(%700, %701, newshape=[]) /* ty=Tensor[(?), bool] */;
  %704 = %695.0;
  %705 = less(%702, %703) /* ty=Tensor[(416), bool] */;
  (%704, %705)
}

def @func_10314(%var_10303: Tensor[(180), uint64]) -> (Tensor[(416), int64], Tensor[(13, 2, 6), int8], Tensor[(180), uint64], Tensor[(156), int8]) {
  %706 = @func_7282() /* ty=(Tensor[(416), int64],) */;
  %707 = cast(%var_10303, dtype="uint64") /* ty=Tensor[(180), uint64] */;
  %708 = cast(meta[relay.Constant][44] /* ty=Tensor[(156), int8] */, dtype="int8") /* ty=Tensor[(156), int8] */;
  %709 = reshape(%707, newshape=[180]) /* ty=Tensor[(180), uint64] */;
  %710 = reshape(%708, newshape=[156]) /* ty=Tensor[(156), int8] */;
  %711 = @func_9729(%709, %710) /* ty=(Tensor[(416), float64], Tensor[(15, 12, 1), bool], Tensor[(180), uint64], Tensor[(13, 2, 6), int8], Tensor[(156), int8]) */;
  %712 = %706.0;
  %713 = %711.3;
  (%712, %713, %var_10303, meta[relay.Constant][44] /* ty=Tensor[(156), int8] */)
}

def @func_6426() -> Tensor[(416), int64] {
  @func_6356() /* ty=Tensor[(416), int64] */
}

def @func_11667(%var_11658: Tensor[(10, 6, 1), float64]) -> Tensor[(10, 6, ?), bool] {
  %714 = cast(%var_11658, dtype="float64") /* ty=Tensor[(10, 6, 1), float64] */;
  %715 = asinh(%714) /* ty=Tensor[(10, 6, 1), float64] */;
  %716 = cast(%var_11658, dtype="bool") /* ty=Tensor[(10, 6, 1), bool] */;
  %717 = shape_of(%715, dtype="int32") /* ty=Tensor[(3), int32] */;
  %718 = cast(%715, dtype="bool") /* ty=Tensor[(10, 6, 1), bool] */;
  %719 = dyn.reshape(%716, %717, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%718, %719) /* ty=Tensor[(10, 6, ?), bool] */
}

def @func_10781(%var_10771: Tensor[(156), int8], %var_10772: Tensor[(110), float32]) -> (Tensor[(416), int64], Tensor[(16, 12, 13), bool], Tensor[(416), int64], Tensor[(156, 16), float64], Tensor[(416), int64], Tensor[(156), int8], Tensor[(110), float32], Tensor[(12, 84), float32]) {
  %720 = cast(meta[relay.Constant][45] /* ty=Tensor[(156, 16), float64] */, dtype="float64") /* ty=Tensor[(156, 16), float64] */;
  %721 = reshape(%720, newshape=[16, 12, 13]) /* ty=Tensor[(16, 12, 13), float64] */;
  %722 = @func_9252() /* ty=(Tensor[(416), int64],) */;
  %723 = cast(meta[relay.Constant][45] /* ty=Tensor[(156, 16), float64] */, dtype="float64") /* ty=Tensor[(156, 16), float64] */;
  %724 = cast(%var_10771, dtype="int8") /* ty=Tensor[(156), int8] */;
  %725 = cast(%var_10772, dtype="float32") /* ty=Tensor[(110), float32] */;
  %726 = cast(meta[relay.Constant][46] /* ty=Tensor[(12, 84), float32] */, dtype="float32") /* ty=Tensor[(12, 84), float32] */;
  %727 = reshape(%724, newshape=[156, 1]) /* ty=Tensor[(156, 1), int8] */;
  %728 = reshape(%725, newshape=[110]) /* ty=Tensor[(110), float32] */;
  %729 = reshape(%726, newshape=[1008]) /* ty=Tensor[(1008), float32] */;
  %730 = @func_9925(%727, %728, %729) /* ty=(Tensor[(416), int64], Tensor[(3, 52), int8], int16, Tensor[(30), int16], Tensor[(156, 1), int8], Tensor[(110), float32], Tensor[(?, 15, 11), bool], Tensor[(11, 10, 48), int8], Tensor[(3, 4, 15), uint8], Tensor[(3, 60), uint8], Tensor[(1008), float32]) */;
  %731 = @func_8410() /* ty=Tensor[(416), int64] */;
  %732 = @func_4378(%721) /* ty=Tensor[(16, 12, 13), bool] */;
  %733 = %722.0;
  %734 = sin(%723) /* ty=Tensor[(156, 16), float64] */;
  %735 = %730.0;
  (%731, %732, %733, %734, %735, %var_10771, %var_10772, meta[relay.Constant][46] /* ty=Tensor[(12, 84), float32] */)
}

def @func_5663() -> (Tensor[(416), int64],) {
  %736 = @func_5627() /* ty=(Tensor[(1, 15, 11), float64], Tensor[(416), int64], Tensor[(2, 728), int64]) */;
  %737 = %736.1;
  (%737,)
}

def @func_9358() -> Tensor[(?, 15, 11), bool] {
  @func_7107() /* ty=Tensor[(?, 15, 11), bool] */
}

def @func_9340() -> (Tensor[(416), int64],) {
  %738 = @func_5802() /* ty=(Tensor[(416), int64],) */;
  %739 = %738.0;
  (%739,)
}

def @func_8373(%var_8329: Tensor[(7, 21), int16]) -> (Tensor[(3, 5, 6), float64], Tensor[(416), int64], Tensor[(16), int64], Tensor[(810), float32], Tensor[(7, 21), int16], Tensor[(810), float64], Tensor[(1, 15, 11), float64]) {
  %740 = @func_6170() /* ty=(Tensor[(3, 5, 6), float64],) */;
  %741 = cast(%var_8329, dtype="int16") /* ty=Tensor[(7, 21), int16] */;
  %742 = cast(meta[relay.Constant][48] /* ty=Tensor[(16), int64] */, dtype="int64") /* ty=Tensor[(16), int64] */;
  %743 = reshape(%741, newshape=[147]) /* ty=Tensor[(147), int16] */;
  %744 = reshape(%742, newshape=[16]) /* ty=Tensor[(16), int64] */;
  %745 = @func_6962(%743, %744) /* ty=(Tensor[(416), int64], Tensor[(8, 52), float64], Tensor[(147), int16], Tensor[(810), float32], Tensor[(16), int64]) */;
  %746 = cast(meta[relay.Constant][49] /* ty=Tensor[(810), float32] */, dtype="float32") /* ty=Tensor[(810), float32] */;
  %747 = sigmoid(%746) /* ty=Tensor[(810), float32] */;
  %748 = cast(meta[relay.Constant][49] /* ty=Tensor[(810), float32] */, dtype="float32") /* ty=Tensor[(810), float32] */;
  %749 = cast(meta[relay.Constant][47] /* ty=Tensor[(416), int64] */, dtype="int64") /* ty=Tensor[(416), int64] */;
  %750 = cast(meta[relay.Constant][48] /* ty=Tensor[(16), int64] */, dtype="int64") /* ty=Tensor[(16), int64] */;
  %751 = reshape(%748, newshape=[15, 9, 6]) /* ty=Tensor[(15, 9, 6), float32] */;
  %752 = reshape(%749, newshape=[2, 208]) /* ty=Tensor[(2, 208), int64] */;
  %753 = reshape(%750, newshape=[16]) /* ty=Tensor[(16), int64] */;
  %754 = @func_3807(%751, %752, %753) /* ty=(Tensor[(15, 9, 6), float32], Tensor[(8, 3, 7), bool], Tensor[(2, 208), int64], Tensor[(16), int64]) */;
  %755 = %754.0;
  %756 = cast(%755, dtype="bool") /* ty=Tensor[(15, 9, 6), bool] */;
  %757 = shape_of(%747, dtype="int32") /* ty=Tensor[(1), int32] */;
  %758 = cast(%747, dtype="bool") /* ty=Tensor[(810), bool] */;
  %759 = dyn.reshape(%756, %757, newshape=[]) /* ty=Tensor[(?), bool] */;
  %760 = less_equal(%758, %759) /* ty=Tensor[(810), bool] */;
  %761 = cast(%760, dtype="float64") /* ty=Tensor[(810), float64] */;
  %762 = @func_6805() /* ty=(Tensor[(1, 15, 11), float64],) */;
  %763 = %740.0;
  %764 = %745.3;
  %765 = cos(%761) /* ty=Tensor[(810), float64] */;
  %766 = %762.0;
  (%763, meta[relay.Constant][47] /* ty=Tensor[(416), int64] */, meta[relay.Constant][48] /* ty=Tensor[(16), int64] */, %764, %var_8329, %765, %766)
}

def @func_6170() -> (Tensor[(3, 5, 6), float64],) {
  %767 = cast(meta[relay.Constant][50] /* ty=Tensor[(3, 5, 6), float64] */, dtype="float64") /* ty=Tensor[(3, 5, 6), float64] */;
  %768 = cos(%767) /* ty=Tensor[(3, 5, 6), float64] */;
  (%768,)
}

def @func_8563() -> Tensor[(416), bool] {
  %769 = @func_7464() /* ty=(Tensor[(1, 15, 11), float64], Tensor[(416), bool]) */;
  %769.1
}

def @func_8977(%var_8959: Tensor[(13, 3, 12), float32]) -> (Tensor[(13, 3, 12), float32],) {
  %770 = cast(%var_8959, dtype="float32") /* ty=Tensor[(13, 3, 12), float32] */;
  %771 = cos(%770) /* ty=Tensor[(13, 3, 12), float32] */;
  (%771,)
}

def @func_9252() -> (Tensor[(416), int64],) {
  %772 = @func_9036() /* ty=(Tensor[(416), int64],) */;
  %773 = %772.0;
  (%773,)
}

def @func_11248() -> (Tensor[(416), bool], Tensor[(416), int64]) {
  %774 = @func_6700() /* ty=(Tensor[(416), int64],) */;
  %775 = %774.0;
  %776 = cast(meta[relay.Constant][51] /* ty=Tensor[(416), int64] */, dtype="bool") /* ty=Tensor[(416), bool] */;
  %777 = shape_of(%775, dtype="int32") /* ty=Tensor[(1), int32] */;
  %778 = cast(%775, dtype="bool") /* ty=Tensor[(416), bool] */;
  %779 = dyn.reshape(%776, %777, newshape=[]) /* ty=Tensor[(?), bool] */;
  %780 = @func_8895() /* ty=(Tensor[(416), int64],) */;
  %781 = not_equal(%778, %779) /* ty=Tensor[(416), bool] */;
  %782 = %780.0;
  (%781, %782)
}

def @func_8410() -> Tensor[(416), int64] {
  @func_8161() /* ty=Tensor[(416), int64] */
}

def @func_1674(%var_1642: Tensor[(11, 5, 15), float32], %var_1665: Tensor[(11, 5, 15), float32]) -> (Tensor[(11, 5, 15), float32], Tensor[(11, 5, 15), int8], Tensor[(11, 5, 15), float64]) {
  %783 = cast(%var_1642, dtype="float32") /* ty=Tensor[(11, 5, 15), float32] */;
  %784 = erf(%783) /* ty=Tensor[(11, 5, 15), float32] */;
  %785 = cast(%784, dtype="float32") /* ty=Tensor[(11, 5, 15), float32] */;
  %786 = cast(%var_1665, dtype="int8") /* ty=Tensor[(11, 5, 15), int8] */;
  %787 = shape_of(%var_1642, dtype="int32") /* ty=Tensor[(3), int32] */;
  %788 = cast(%var_1642, dtype="int8") /* ty=Tensor[(11, 5, 15), int8] */;
  %789 = dyn.reshape(%786, %787, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %790 = cast(%784, dtype="int32") /* ty=Tensor[(11, 5, 15), int32] */;
  %791 = shape_of(%var_1642, dtype="int32") /* ty=Tensor[(3), int32] */;
  %792 = cast(%var_1642, dtype="int32") /* ty=Tensor[(11, 5, 15), int32] */;
  %793 = dyn.reshape(%790, %791, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %794 = left_shift(%792, %793) /* ty=Tensor[(11, 5, 15), int32] */;
  %795 = cast(%794, dtype="float32") /* ty=Tensor[(11, 5, 15), float32] */;
  %796 = sinh(%795) /* ty=Tensor[(11, 5, 15), float32] */;
  %797 = cast(%796, dtype="float64") /* ty=Tensor[(11, 5, 15), float64] */;
  %798 = asin(%785) /* ty=Tensor[(11, 5, 15), float32] */;
  %799 = multiply(%788, %789) /* ty=Tensor[(11, 5, 15), int8] */;
  %800 = atan(%797) /* ty=Tensor[(11, 5, 15), float64] */;
  (%798, %799, %800)
}

def @func_11132(%var_11110: Tensor[(1, 15, 11), float64]) -> (Tensor[(?, 15, 11), uint64], Tensor[(416), bool], Tensor[(1, 15, 11), float64]) {
  %801 = @func_9972() /* ty=(Tensor[(1, 15, 11), float64],) */;
  %802 = %801.0;
  %803 = cast(%var_11110, dtype="uint64") /* ty=Tensor[(1, 15, 11), uint64] */;
  %804 = shape_of(%802, dtype="int32") /* ty=Tensor[(3), int32] */;
  %805 = cast(%802, dtype="uint64") /* ty=Tensor[(1, 15, 11), uint64] */;
  %806 = dyn.reshape(%803, %804, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %807 = @func_9244() /* ty=(Tensor[(416), int64], Tensor[(1, 15, 11), float64], Tensor[(1, 15, 11), float64], Tensor[(1, 15, 11), float32]) */;
  %808 = bitwise_or(%805, %806) /* ty=Tensor[(?, 15, 11), uint64] */;
  %809 = @func_9455() /* ty=Tensor[(416), bool] */;
  %810 = %807.1;
  (%808, %809, %810)
}

def @func_7495(%var_7477: Tensor[(11, 10, 1), float32], %var_7487: Tensor[(4, 12), int64]) -> (Tensor[(11, 10, 1), float32], Tensor[(2, 8, 3), int64], Tensor[(16), int64], Tensor[(4, 12), int64]) {
  %811 = cast(%var_7477, dtype="float32") /* ty=Tensor[(11, 10, 1), float32] */;
  %812 = cast(meta[relay.Constant][52] /* ty=Tensor[(16), int64] */, dtype="int64") /* ty=Tensor[(16), int64] */;
  %813 = cast(%var_7487, dtype="int64") /* ty=Tensor[(4, 12), int64] */;
  %814 = reshape(%812, newshape=[2, 8, 1]) /* ty=Tensor[(2, 8, 1), int64] */;
  %815 = reshape(%813, newshape=[2, 8, 3]) /* ty=Tensor[(2, 8, 3), int64] */;
  %816 = atanh(%811) /* ty=Tensor[(11, 10, 1), float32] */;
  %817 = @func_188(%814, %815) /* ty=Tensor[(2, 8, 3), int64] */;
  (%816, %817, meta[relay.Constant][52] /* ty=Tensor[(16), int64] */, %var_7487)
}

def @func_9729(%var_9724: Tensor[(180), uint64], %var_9727: Tensor[(156), int8]) -> (Tensor[(416), float64], Tensor[(15, 12, 1), bool], Tensor[(180), uint64], Tensor[(13, 2, 6), int8], Tensor[(156), int8]) {
  %818 = @func_8144() /* ty=(Tensor[(416), int64],) */;
  %819 = %818.0;
  %820 = cast(%819, dtype="float64") /* ty=Tensor[(416), float64] */;
  %821 = cast(%var_9724, dtype="uint64") /* ty=Tensor[(180), uint64] */;
  %822 = reshape(%821, newshape=[15, 12, 1]) /* ty=Tensor[(15, 12, 1), uint64] */;
  %823 = cast(%var_9727, dtype="int8") /* ty=Tensor[(156), int8] */;
  %824 = cast(%var_9727, dtype="int8") /* ty=Tensor[(156), int8] */;
  %825 = reshape(%823, newshape=[13, 2, 6]) /* ty=Tensor[(13, 2, 6), int8] */;
  %826 = reshape(%824, newshape=[13, 2, 6]) /* ty=Tensor[(13, 2, 6), int8] */;
  %827 = tan(%820) /* ty=Tensor[(416), float64] */;
  %828 = @func_3612(%822) /* ty=Tensor[(15, 12, 1), bool] */;
  %829 = @func_3710(%825, %826) /* ty=Tensor[(13, 2, 6), int8] */;
  (%827, %828, %var_9724, %829, %var_9727)
}

def @func_6294() -> (Tensor[(416), int64],) {
  %830 = @func_5954() /* ty=Tensor[(416), int64] */;
  (%830,)
}

def @func_6805() -> (Tensor[(1, 15, 11), float64],) {
  %831 = @func_5627() /* ty=(Tensor[(1, 15, 11), float64], Tensor[(416), int64], Tensor[(2, 728), int64]) */;
  %832 = %831.0;
  %833 = cast(%832, dtype="float64") /* ty=Tensor[(1, 15, 11), float64] */;
  %834 = log(%833) /* ty=Tensor[(1, 15, 11), float64] */;
  (%834,)
}

def @func_586(%var_580: Tensor[(13, 9, 11), int64], %var_581: Tensor[(13, 9, 11), int64]) -> Tensor[(13, 9, 11), int64] {
  %835 = cast(%var_581, dtype="int64") /* ty=Tensor[(13, 9, 11), int64] */;
  %836 = shape_of(%var_580, dtype="int32") /* ty=Tensor[(3), int32] */;
  %837 = cast(%var_580, dtype="int64") /* ty=Tensor[(13, 9, 11), int64] */;
  %838 = dyn.reshape(%835, %836, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  bitwise_xor(%837, %838) /* ty=Tensor[(13, 9, 11), int64] */
}

def @func_4094(%var_4065: Tensor[(13, 14, 8), float32], %var_4088: Tensor[(13, 14, 8), float32]) -> (Tensor[(13, 14, 8), float64], Tensor[(13, 14, 8), bool]) {
  %839 = cast(%var_4065, dtype="float32") /* ty=Tensor[(13, 14, 8), float32] */;
  %840 = rsqrt(%839) /* ty=Tensor[(13, 14, 8), float32] */;
  %841 = cast(%840, dtype="float64") /* ty=Tensor[(13, 14, 8), float64] */;
  %842 = shape_of(%var_4065, dtype="int32") /* ty=Tensor[(3), int32] */;
  %843 = cast(%var_4065, dtype="float64") /* ty=Tensor[(13, 14, 8), float64] */;
  %844 = dyn.reshape(%841, %842, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %845 = cast(%var_4088, dtype="bool") /* ty=Tensor[(13, 14, 8), bool] */;
  %846 = shape_of(%var_4065, dtype="int32") /* ty=Tensor[(3), int32] */;
  %847 = cast(%var_4065, dtype="bool") /* ty=Tensor[(13, 14, 8), bool] */;
  %848 = dyn.reshape(%845, %846, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %849 = subtract(%843, %844) /* ty=Tensor[(13, 14, 8), float64] */;
  %850 = logical_and(%847, %848) /* ty=Tensor[(13, 14, 8), bool] */;
  (%849, %850)
}

def @func_9112() -> (Tensor[(1, 15, 11), float64],) {
  %851 = @func_8061() /* ty=(Tensor[(1, 15, 11), float64],) */;
  %852 = %851.0;
  (%852,)
}

def @func_9455() -> Tensor[(416), bool] {
  %853 = @func_6740() /* ty=(Tensor[(416), bool],) */;
  %853.0
}

def @main(%var_11740: Tensor[(16, 10, 4), int16], %var_11741: Tensor[(16, 10, 4), int16]) -> Tensor[(16, 10, 4), int16] {
  %854 = cast(%var_11741, dtype="int16") /* ty=Tensor[(16, 10, 4), int16] */;
  %855 = shape_of(%var_11740, dtype="int32") /* ty=Tensor[(3), int32] */;
  %856 = cast(%var_11740, dtype="int16") /* ty=Tensor[(16, 10, 4), int16] */;
  %857 = dyn.reshape(%854, %855, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  logical_xor(%856, %857) /* ty=Tensor[(16, 10, 4), int16] */
}

def @func_456(%var_425: Tensor[(416), int64], %var_426: Tensor[(16), int64]) -> (Tensor[(12, 3, 7), bool], Tensor[(2, 8, 3), int64], Tensor[(416), int64], Tensor[(16), int64], Tensor[(8, 3, 7), bool], Tensor[(168), float32], Tensor[(2, 8, 3), int64], Tensor[(2, 8, 3), int64]) {
  %858 = cast(meta[relay.Constant][53] /* ty=Tensor[(12, 3, 7), float64] */, dtype="float64") /* ty=Tensor[(12, 3, 7), float64] */;
  %859 = cosh(%858) /* ty=Tensor[(12, 3, 7), float64] */;
  %860 = cast(%859, dtype="bool") /* ty=Tensor[(12, 3, 7), bool] */;
  %861 = shape_of(meta[relay.Constant][53] /* ty=Tensor[(12, 3, 7), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %862 = cast(meta[relay.Constant][53] /* ty=Tensor[(12, 3, 7), float64] */, dtype="bool") /* ty=Tensor[(12, 3, 7), bool] */;
  %863 = dyn.reshape(%860, %861, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %864 = cast(%var_425, dtype="int64") /* ty=Tensor[(416), int64] */;
  %865 = cast(%var_426, dtype="int64") /* ty=Tensor[(16), int64] */;
  %866 = cast(%var_425, dtype="int64") /* ty=Tensor[(416), int64] */;
  %867 = reshape(%864, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), int64] */;
  %868 = reshape(%865, newshape=[8, 2]) /* ty=Tensor[(8, 2), int64] */;
  %869 = reshape(%866, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), int64] */;
  %870 = @func_394(%867, %868, %869) /* ty=(Tensor[(2, 13, 16), bool], Tensor[(8, 3, 7), bool], Tensor[(168), float32], Tensor[(2, 8, 3), int64], Tensor[(8, 2), int64], Tensor[(48), int64], Tensor[(8, 3, 7), bool], Tensor[(2, 8, 3), int64], Tensor[(8, 3, 7), bool], Tensor[(8, 3, 7), bool], Tensor[(2, 13, 16), bool]) */;
  %871 = cast(meta[relay.Constant][54] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %872 = cast(meta[relay.Constant][54] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %873 = reshape(%871, newshape=[8, 3, 7]) /* ty=Tensor[(8, 3, 7), float32] */;
  %874 = reshape(%872, newshape=[8, 3, 7]) /* ty=Tensor[(8, 3, 7), float32] */;
  %875 = cast(%var_426, dtype="int64") /* ty=Tensor[(16), int64] */;
  %876 = %870.7;
  %877 = cast(%876, dtype="int64") /* ty=Tensor[(2, 8, 3), int64] */;
  %878 = reshape(%875, newshape=[2, 8, 1]) /* ty=Tensor[(2, 8, 1), int64] */;
  %879 = reshape(%877, newshape=[2, 8, 3]) /* ty=Tensor[(2, 8, 3), int64] */;
  %880 = cast(%var_426, dtype="int64") /* ty=Tensor[(16), int64] */;
  %881 = @func_188(%878, %879) /* ty=Tensor[(2, 8, 3), int64] */;
  %882 = cast(%881, dtype="int64") /* ty=Tensor[(2, 8, 3), int64] */;
  %883 = reshape(%880, newshape=[2, 8, 1]) /* ty=Tensor[(2, 8, 1), int64] */;
  %884 = reshape(%882, newshape=[2, 8, 3]) /* ty=Tensor[(2, 8, 3), int64] */;
  %885 = greater(%862, %863) /* ty=Tensor[(12, 3, 7), bool] */;
  %886 = @func_26(%873, %874) /* ty=Tensor[(8, 3, 7), bool] */;
  %887 = @func_188(%883, %884) /* ty=Tensor[(2, 8, 3), int64] */;
  (%885, %876, %var_425, %var_426, %886, meta[relay.Constant][54] /* ty=Tensor[(168), float32] */, %881, %887)
}

def @func_6871() -> (Tensor[(416), bool], Tensor[(416), int64], Tensor[(1, 15, 11), float64]) {
  %888 = @func_6740() /* ty=(Tensor[(416), bool],) */;
  %889 = @func_5781() /* ty=(Tensor[(416), int64],) */;
  %890 = @func_6805() /* ty=(Tensor[(1, 15, 11), float64],) */;
  %891 = %888.0;
  %892 = %889.0;
  %893 = %890.0;
  (%891, %892, %893)
}

def @func_7979(%var_7948: uint16, %var_7949: Tensor[(16, 1, 11), uint16]) -> Tensor[(16, 1, 11), uint16] {
  %894 = cast(%var_7948, dtype="uint16") /* ty=uint16 */;
  %895 = cast(%var_7949, dtype="uint16") /* ty=Tensor[(16, 1, 11), uint16] */;
  minimum(%894, %895) /* ty=Tensor[(16, 1, 11), uint16] */
}

def @func_3905(%var_3862: Tensor[(3, 7, 7), int16], %var_3863: Tensor[(3, 7, 7), int16], %var_3871: Tensor[(810), float32], %var_3872: Tensor[(8, 52), int64], %var_3873: Tensor[(16), int64]) -> (Tensor[(3, 7, 7), int16], Tensor[(15, 9, 6), float32], Tensor[(810), float32], Tensor[(16), int64], Tensor[(8, 52), float64], Tensor[(6, 11, 8), bool], int64, Tensor[(528), int64]) {
  %896 = cast(%var_3863, dtype="int16") /* ty=Tensor[(3, 7, 7), int16] */;
  %897 = shape_of(%var_3862, dtype="int32") /* ty=Tensor[(3), int32] */;
  %898 = cast(%var_3862, dtype="int16") /* ty=Tensor[(3, 7, 7), int16] */;
  %899 = dyn.reshape(%896, %897, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %900 = cast(%var_3871, dtype="float32") /* ty=Tensor[(810), float32] */;
  %901 = cast(%var_3872, dtype="int64") /* ty=Tensor[(8, 52), int64] */;
  %902 = cast(%var_3873, dtype="int64") /* ty=Tensor[(16), int64] */;
  %903 = reshape(%900, newshape=[15, 9, 6]) /* ty=Tensor[(15, 9, 6), float32] */;
  %904 = reshape(%901, newshape=[2, 208]) /* ty=Tensor[(2, 208), int64] */;
  %905 = reshape(%902, newshape=[16]) /* ty=Tensor[(16), int64] */;
  %906 = @func_3807(%903, %904, %905) /* ty=(Tensor[(15, 9, 6), float32], Tensor[(8, 3, 7), bool], Tensor[(2, 208), int64], Tensor[(16), int64]) */;
  %907 = cast(%var_3872, dtype="float64") /* ty=Tensor[(8, 52), float64] */;
  %908 = cast(-5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %909 = cast(meta[relay.Constant][55] /* ty=Tensor[(528), int64] */, dtype="int64") /* ty=Tensor[(528), int64] */;
  %910 = reshape(%908, newshape=[]) /* ty=int64 */;
  %911 = reshape(%909, newshape=[6, 11, 8]) /* ty=Tensor[(6, 11, 8), int64] */;
  %912 = logical_xor(%898, %899) /* ty=Tensor[(3, 7, 7), int16] */;
  %913 = %906.0;
  %914 = rsqrt(%907) /* ty=Tensor[(8, 52), float64] */;
  %915 = @func_2788(%910, %911) /* ty=Tensor[(6, 11, 8), bool] */;
  (%912, %913, %var_3871, %var_3873, %914, %915, -5 /* ty=int64 */, meta[relay.Constant][55] /* ty=Tensor[(528), int64] */)
}

def @func_8632(%var_8623: Tensor[(2496), float64]) -> (Tensor[(416), bool], Tensor[(16, 12, 13), bool], Tensor[(2496), float64]) {
  %916 = @func_8402() /* ty=(Tensor[(416), bool],) */;
  %917 = cast(%var_8623, dtype="float64") /* ty=Tensor[(2496), float64] */;
  %918 = reshape(%917, newshape=[16, 12, 13]) /* ty=Tensor[(16, 12, 13), float64] */;
  %919 = %916.0;
  %920 = @func_4378(%918) /* ty=Tensor[(16, 12, 13), bool] */;
  (%919, %920, %var_8623)
}

def @func_6740() -> (Tensor[(416), bool],) {
  %921 = @func_6426() /* ty=Tensor[(416), int64] */;
  %922 = @func_6559() /* ty=(Tensor[(416), int64], Tensor[(416), int64]) */;
  %923 = %922.1;
  %924 = cast(%923, dtype="bool") /* ty=Tensor[(416), bool] */;
  %925 = shape_of(%921, dtype="int32") /* ty=Tensor[(1), int32] */;
  %926 = cast(%921, dtype="bool") /* ty=Tensor[(416), bool] */;
  %927 = dyn.reshape(%924, %925, newshape=[]) /* ty=Tensor[(?), bool] */;
  %928 = equal(%926, %927) /* ty=Tensor[(416), bool] */;
  (%928,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_6428() -> Tensor[(416), int64] {
  @func_6426() /* ty=Tensor[(416), int64] */
}

def @func_8706() -> Tensor[(416), float64] {
  @func_8704() /* ty=Tensor[(416), float64] */
}

def @func_11408(%var_11407: Tensor[(16), int64]) -> (Tensor[(416), bool], Tensor[(16), int64], Tensor[(1456), int64], Tensor[(16), int64], Tensor[(416), bool], Tensor[(416), int64], Tensor[(416), int64]) {
  %15 = fn (%var_11349: Tensor[(16), int64]) -> (Tensor[(416), bool], Tensor[(16), int64], Tensor[(1456), int64], Tensor[(16), int64], Tensor[(416), bool], Tensor[(416), int64], Tensor[(416), int64]) {
    %0 = @func_8402() /* ty=(Tensor[(416), bool],) */;
    %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(1456), int64] */, dtype="int64") /* ty=Tensor[(1456), int64] */;
    %2 = %0.0;
    %3 = cast(%2, dtype="int64") /* ty=Tensor[(416), int64] */;
    %4 = cast(%var_11349, dtype="int64") /* ty=Tensor[(16), int64] */;
    %5 = reshape(%1, newshape=[2, 728]) /* ty=Tensor[(2, 728), int64] */;
    %6 = reshape(%3, newshape=[416]) /* ty=Tensor[(416), int64] */;
    %7 = reshape(%4, newshape=[16]) /* ty=Tensor[(16), int64] */;
    %8 = @func_10913(%5, %6, %7) /* ty=(Tensor[(2, 728), float32], Tensor[(168), float32], Tensor[(416), int64], Tensor[(16), int64], Tensor[(2, 728), float64], Tensor[(2, 728), float32], Tensor[(6, 11, 8), bool], int64, Tensor[(528), int64], Tensor[(416), int64]) */;
    %9 = @func_8402() /* ty=(Tensor[(416), bool],) */;
    %10 = @func_5663() /* ty=(Tensor[(416), int64],) */;
    %11 = %8.3;
    %12 = %9.0;
    %13 = %10.0;
    %14 = @func_11298() /* ty=Tensor[(416), int64] */;
    (%2, %11, meta[relay.Constant][0] /* ty=Tensor[(1456), int64] */, %var_11349, %12, %13, %14)
  };
  %15(%var_11407) /* ty=(Tensor[(416), bool], Tensor[(16), int64], Tensor[(1456), int64], Tensor[(16), int64], Tensor[(416), bool], Tensor[(416), int64], Tensor[(416), int64]) */
}

def @func_7667(%var_7657: Tensor[(9, 15, 11), bool]) -> (Tensor[(9, 15, 11), uint64],) {
  %16 = @func_7107() /* ty=Tensor[(?, 15, 11), bool] */;
  %17 = cast(%16, dtype="uint64") /* ty=Tensor[(?, 15, 11), uint64] */;
  %18 = cast(%var_7657, dtype="uint64") /* ty=Tensor[(9, 15, 11), uint64] */;
  %19 = logical_xor(%17, %18) /* ty=Tensor[(9, 15, 11), uint64] */;
  (%19,)
}

def @func_10523() -> (Tensor[(416), int64],) {
  @func_10521() /* ty=(Tensor[(416), int64],) */
}

def @func_10458(%var_10457: Tensor[(13, 14, 5), float64]) -> Tensor[(13, 14, 5), float64] {
  %21 = fn (%var_10441: Tensor[(13, 14, 5), float64]) -> Tensor[(13, 14, 5), float64] {
    %20 = cast(%var_10441, dtype="float64") /* ty=Tensor[(13, 14, 5), float64] */;
    sigmoid(%20) /* ty=Tensor[(13, 14, 5), float64] */
  };
  %21(%var_10457) /* ty=Tensor[(13, 14, 5), float64] */
}

def @func_9132() -> Tensor[(1, 15, 11), float64] {
  %23 = fn () -> Tensor[(1, 15, 11), float64] {
    %22 = @func_6805() /* ty=(Tensor[(1, 15, 11), float64],) */;
    %22.0
  };
  %23() /* ty=Tensor[(1, 15, 11), float64] */
}

def @func_6157() -> (Tensor[(416), int64],) {
  %26 = fn () -> (Tensor[(416), int64],) {
    %24 = @func_5663() /* ty=(Tensor[(416), int64],) */;
    %25 = %24.0;
    (%25,)
  };
  %26() /* ty=(Tensor[(416), int64],) */
}

def @func_11455() -> Tensor[(416), float64] {
  %27 = @func_9261() /* ty=Tensor[(416), int64] */;
  %28 = cast(%27, dtype="float64") /* ty=Tensor[(416), float64] */;
  sin(%28) /* ty=Tensor[(416), float64] */
}

def @func_8040() -> Tensor[(416), int64] {
  %30 = fn () -> Tensor[(416), int64] {
    %29 = @func_5802() /* ty=(Tensor[(416), int64],) */;
    %29.0
  };
  %30() /* ty=Tensor[(416), int64] */
}

def @func_11250() -> (Tensor[(416), bool], Tensor[(416), int64]) {
  @func_11248() /* ty=(Tensor[(416), bool], Tensor[(416), int64]) */
}

def @func_10440() -> (Tensor[(416), int64],) {
  @func_10438() /* ty=(Tensor[(416), int64],) */
}

def @func_4381(%var_4379: Tensor[(16, 12, 13), float64]) -> Tensor[(16, 12, 13), bool] {
  @func_4378(%var_4379) /* ty=Tensor[(16, 12, 13), bool] */
}

def @func_11542() -> Tensor[(416), bool] {
  @func_11540() /* ty=Tensor[(416), bool] */
}

def @func_8410() -> Tensor[(416), int64] {
  @func_8161() /* ty=Tensor[(416), int64] */
}

def @func_11135(%var_11133: Tensor[(1, 15, 11), float64]) -> (Tensor[(?, 15, 11), uint64], Tensor[(416), bool], Tensor[(1, 15, 11), float64]) {
  @func_11132(%var_11133) /* ty=(Tensor[(?, 15, 11), uint64], Tensor[(416), bool], Tensor[(1, 15, 11), float64]) */
}

def @func_5084(%var_5081: Tensor[(3, 4, 15), uint8], %var_5082: Tensor[(3, 4, 15), uint8], %var_5083: Tensor[(1008), float32]) -> (Tensor[(3, 4, 15), uint8], Tensor[(416), int64], Tensor[(16), int64], Tensor[(12, 7, 12), float32], Tensor[(1008), float32], Tensor[(2, 13, 16), float64]) {
  %50 = fn (%var_5026: Tensor[(3, 4, 15), uint8], %var_5027: Tensor[(3, 4, 15), uint8], %var_5069: Tensor[(1008), float32]) -> (Tensor[(3, 4, 15), uint8], Tensor[(416), int64], Tensor[(16), int64], Tensor[(12, 7, 12), float32], Tensor[(1008), float32], Tensor[(2, 13, 16), float64]) {
    %31 = cast(%var_5027, dtype="uint8") /* ty=Tensor[(3, 4, 15), uint8] */;
    %32 = shape_of(%var_5026, dtype="int32") /* ty=Tensor[(3), int32] */;
    %33 = cast(%var_5026, dtype="uint8") /* ty=Tensor[(3, 4, 15), uint8] */;
    %34 = dyn.reshape(%31, %32, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %35 = cast(%var_5069, dtype="float32") /* ty=Tensor[(1008), float32] */;
    %36 = reshape(%35, newshape=[12, 7, 12]) /* ty=Tensor[(12, 7, 12), float32] */;
    %37 = @func_3188(%36) /* ty=(Tensor[(12, 7, 12), float32],) */;
    %38 = cast(meta[relay.Constant][1] /* ty=Tensor[(416), int64] */, dtype="int64") /* ty=Tensor[(416), int64] */;
    %39 = cast(meta[relay.Constant][2] /* ty=Tensor[(16), int64] */, dtype="int64") /* ty=Tensor[(16), int64] */;
    %40 = cast(meta[relay.Constant][1] /* ty=Tensor[(416), int64] */, dtype="int64") /* ty=Tensor[(416), int64] */;
    %41 = reshape(%38, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), int64] */;
    %42 = reshape(%39, newshape=[8, 2]) /* ty=Tensor[(8, 2), int64] */;
    %43 = reshape(%40, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), int64] */;
    %44 = @func_394(%41, %42, %43) /* ty=(Tensor[(2, 13, 16), bool], Tensor[(8, 3, 7), bool], Tensor[(168), float32], Tensor[(2, 8, 3), int64], Tensor[(8, 2), int64], Tensor[(48), int64], Tensor[(8, 3, 7), bool], Tensor[(2, 8, 3), int64], Tensor[(8, 3, 7), bool], Tensor[(8, 3, 7), bool], Tensor[(2, 13, 16), bool]) */;
    %45 = %44.0;
    %46 = cast(%45, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
    %47 = maximum(%33, %34) /* ty=Tensor[(3, 4, 15), uint8] */;
    %48 = %37.0;
    %49 = erf(%46) /* ty=Tensor[(2, 13, 16), float64] */;
    (%47, meta[relay.Constant][1] /* ty=Tensor[(416), int64] */, meta[relay.Constant][2] /* ty=Tensor[(16), int64] */, %48, %var_5069, %49)
  };
  %50(%var_5081, %var_5082, %var_5083) /* ty=(Tensor[(3, 4, 15), uint8], Tensor[(416), int64], Tensor[(16), int64], Tensor[(12, 7, 12), float32], Tensor[(1008), float32], Tensor[(2, 13, 16), float64]) */
}

def @func_9957() -> (Tensor[(?, 15, 11), bool], Tensor[(9, 15, 11), uint64], Tensor[(1485), bool]) {
  %56 = fn () -> (Tensor[(?, 15, 11), bool], Tensor[(9, 15, 11), uint64], Tensor[(1485), bool]) {
    %51 = cast(meta[relay.Constant][3] /* ty=Tensor[(1485), bool] */, dtype="bool") /* ty=Tensor[(1485), bool] */;
    %52 = reshape(%51, newshape=[9, 15, 11]) /* ty=Tensor[(9, 15, 11), bool] */;
    %53 = @func_7667(%52) /* ty=(Tensor[(9, 15, 11), uint64],) */;
    %54 = @func_9358() /* ty=Tensor[(?, 15, 11), bool] */;
    %55 = %53.0;
    (%54, %55, meta[relay.Constant][3] /* ty=Tensor[(1485), bool] */)
  };
  %56() /* ty=(Tensor[(?, 15, 11), bool], Tensor[(9, 15, 11), uint64], Tensor[(1485), bool]) */
}

def @func_9972() -> (Tensor[(1, 15, 11), float64],) {
  %57 = @func_8914() /* ty=(Tensor[(1, 15, 11), float64],) */;
  %58 = %57.0;
  (%58,)
}

def @func_9114() -> (Tensor[(1, 15, 11), float64],) {
  @func_9112() /* ty=(Tensor[(1, 15, 11), float64],) */
}

def @func_7284() -> (Tensor[(416), int64],) {
  @func_7282() /* ty=(Tensor[(416), int64],) */
}

def @func_191(%var_189: Tensor[(2, 8, 1), int64], %var_190: Tensor[(2, 8, 3), int64]) -> Tensor[(2, 8, 3), int64] {
  %61 = fn (%var_179: Tensor[(2, 8, 1), int64], %var_180: Tensor[(2, 8, 3), int64]) -> Tensor[(2, 8, 3), int64] {
    %59 = cast(%var_179, dtype="int64") /* ty=Tensor[(2, 8, 1), int64] */;
    %60 = cast(%var_180, dtype="int64") /* ty=Tensor[(2, 8, 3), int64] */;
    left_shift(%59, %60) /* ty=Tensor[(2, 8, 3), int64] */
  };
  %61(%var_189, %var_190) /* ty=Tensor[(2, 8, 3), int64] */
}

def @func_5839() -> Tensor[(416), int64] {
  @func_5837() /* ty=Tensor[(416), int64] */
}

def @func_8704() -> Tensor[(416), float64] {
  %62 = @func_5781() /* ty=(Tensor[(416), int64],) */;
  %63 = %62.0;
  %64 = cast(%63, dtype="float64") /* ty=Tensor[(416), float64] */;
  log10(%64) /* ty=Tensor[(416), float64] */
}

def @func_8492() -> Tensor[(416), bool] {
  %66 = fn () -> Tensor[(416), bool] {
    %65 = @func_8402() /* ty=(Tensor[(416), bool],) */;
    %65.0
  };
  %66() /* ty=Tensor[(416), bool] */
}

def @func_9359() -> Tensor[(?, 15, 11), bool] {
  %67 = fn () -> Tensor[(?, 15, 11), bool] {
    @func_7107() /* ty=Tensor[(?, 15, 11), bool] */
  };
  %67() /* ty=Tensor[(?, 15, 11), bool] */
}

def @func_5163(%var_5162: Tensor[(3, 14, 5), float64]) -> (Tensor[(3, 14, 5), float32], Tensor[(3, 14, 5), float32], Tensor[(3, 14, 5), uint64]) {
  %82 = fn (%var_5132: Tensor[(3, 14, 5), float64]) -> (Tensor[(3, 14, 5), float32], Tensor[(3, 14, 5), float32], Tensor[(3, 14, 5), uint64]) {
    %68 = cast(%var_5132, dtype="float64") /* ty=Tensor[(3, 14, 5), float64] */;
    %69 = log2(%68) /* ty=Tensor[(3, 14, 5), float64] */;
    %70 = cast(%var_5132, dtype="float32") /* ty=Tensor[(3, 14, 5), float32] */;
    %71 = shape_of(%69, dtype="int32") /* ty=Tensor[(3), int32] */;
    %72 = cast(%69, dtype="float32") /* ty=Tensor[(3, 14, 5), float32] */;
    %73 = dyn.reshape(%70, %71, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %74 = cast(%var_5132, dtype="float32") /* ty=Tensor[(3, 14, 5), float32] */;
    %75 = cast(%69, dtype="uint64") /* ty=Tensor[(3, 14, 5), uint64] */;
    %76 = shape_of(%var_5132, dtype="int32") /* ty=Tensor[(3), int32] */;
    %77 = cast(%var_5132, dtype="uint64") /* ty=Tensor[(3, 14, 5), uint64] */;
    %78 = dyn.reshape(%75, %76, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %79 = divide(%72, %73) /* ty=Tensor[(3, 14, 5), float32] */;
    %80 = sqrt(%74) /* ty=Tensor[(3, 14, 5), float32] */;
    %81 = left_shift(%77, %78) /* ty=Tensor[(3, 14, 5), uint64] */;
    (%79, %80, %81)
  };
  %82(%var_5162) /* ty=(Tensor[(3, 14, 5), float32], Tensor[(3, 14, 5), float32], Tensor[(3, 14, 5), uint64]) */
}

def @func_9629() -> Tensor[(416), int64] {
  %83 = @func_7282() /* ty=(Tensor[(416), int64],) */;
  %83.0
}

def @func_5696(%var_5683: Tensor[(6, 42), float32]) -> (Tensor[(416), int64], Tensor[(416), int64], Tensor[(2, 728), int64], Tensor[(9, 4, 7), float32], Tensor[(6, 42), float32]) {
  %84 = @func_5663() /* ty=(Tensor[(416), int64],) */;
  %85 = cast(meta[relay.Constant][4] /* ty=Tensor[(2, 728), int64] */, dtype="int64") /* ty=Tensor[(2, 728), int64] */;
  %86 = reshape(%85, newshape=[7, 13, 16]) /* ty=Tensor[(7, 13, 16), int64] */;
  %87 = @func_3300(%86) /* ty=(Tensor[(7, 13, 16), bool], Tensor[(4, 4), int64], Tensor[(315), float64], Tensor[(416), int64], Tensor[(2, 8, 3), int64], Tensor[(48), int64]) */;
  %88 = cast(%var_5683, dtype="float32") /* ty=Tensor[(6, 42), float32] */;
  %89 = reshape(%88, newshape=[9, 4, 7]) /* ty=Tensor[(9, 4, 7), float32] */;
  %90 = cast(%var_5683, dtype="float64") /* ty=Tensor[(6, 42), float64] */;
  %91 = atan(%90) /* ty=Tensor[(6, 42), float64] */;
  %92 = cast(%91, dtype="float32") /* ty=Tensor[(6, 42), float32] */;
  %93 = %84.0;
  %94 = %87.3;
  %95 = @func_1958(%89) /* ty=Tensor[(9, 4, 7), float32] */;
  %96 = log10(%92) /* ty=Tensor[(6, 42), float32] */;
  (%93, %94, meta[relay.Constant][4] /* ty=Tensor[(2, 728), int64] */, %95, %96)
}

def @func_5937(%var_5914: Tensor[(30), int16]) -> (Tensor[(416), int64], Tensor[(3, 52), int8], int16, Tensor[(30), int16], Tensor[(156), int8]) {
  %97 = @func_5663() /* ty=(Tensor[(416), int64],) */;
  %98 = cast(meta[relay.Constant][5] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %99 = cast(%var_5914, dtype="int16") /* ty=Tensor[(30), int16] */;
  %100 = cast(meta[relay.Constant][6] /* ty=Tensor[(156), int8] */, dtype="int8") /* ty=Tensor[(156), int8] */;
  %101 = reshape(%98, newshape=[]) /* ty=int16 */;
  %102 = reshape(%99, newshape=[3, 10, 1]) /* ty=Tensor[(3, 10, 1), int16] */;
  %103 = reshape(%100, newshape=[3, 52]) /* ty=Tensor[(3, 52), int8] */;
  %104 = @func_5275(%101, %102, %103) /* ty=(Tensor[(3, 10, 1), bool], Tensor[(13, 2, 6), int8], Tensor[(3, 52), int8]) */;
  %105 = %97.0;
  %106 = %104.2;
  (%105, %106, meta[relay.Constant][5] /* ty=int16 */, %var_5914, meta[relay.Constant][6] /* ty=Tensor[(156), int8] */)
}

def @func_8144() -> (Tensor[(416), int64],) {
  %107 = @func_6892() /* ty=(Tensor[(416), int64],) */;
  %108 = %107.0;
  (%108,)
}

def @func_8564() -> Tensor[(416), bool] {
  %110 = fn () -> Tensor[(416), bool] {
    %109 = @func_7464() /* ty=(Tensor[(1, 15, 11), float64], Tensor[(416), bool]) */;
    %109.1
  };
  %110() /* ty=Tensor[(416), bool] */
}

def @main(%var_11740: Tensor[(16, 10, 4), int16], %var_11741: Tensor[(16, 10, 4), int16]) -> Tensor[(16, 10, 4), int16] {
  %111 = cast(%var_11741, dtype="int16") /* ty=Tensor[(16, 10, 4), int16] */;
  %112 = shape_of(%var_11740, dtype="int32") /* ty=Tensor[(3), int32] */;
  %113 = cast(%var_11740, dtype="int16") /* ty=Tensor[(16, 10, 4), int16] */;
  %114 = dyn.reshape(%111, %112, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  logical_xor(%113, %114) /* ty=Tensor[(16, 10, 4), int16] */
}

def @func_9261() -> Tensor[(416), int64] {
  @func_8161() /* ty=Tensor[(416), int64] */
}

def @func_459(%var_457: Tensor[(416), int64], %var_458: Tensor[(16), int64]) -> (Tensor[(12, 3, 7), bool], Tensor[(2, 8, 3), int64], Tensor[(416), int64], Tensor[(16), int64], Tensor[(8, 3, 7), bool], Tensor[(168), float32], Tensor[(2, 8, 3), int64], Tensor[(2, 8, 3), int64]) {
  %145 = fn (%var_425: Tensor[(416), int64], %var_426: Tensor[(16), int64]) -> (Tensor[(12, 3, 7), bool], Tensor[(2, 8, 3), int64], Tensor[(416), int64], Tensor[(16), int64], Tensor[(8, 3, 7), bool], Tensor[(168), float32], Tensor[(2, 8, 3), int64], Tensor[(2, 8, 3), int64]) {
    %115 = cast(meta[relay.Constant][7] /* ty=Tensor[(12, 3, 7), float64] */, dtype="float64") /* ty=Tensor[(12, 3, 7), float64] */;
    %116 = cosh(%115) /* ty=Tensor[(12, 3, 7), float64] */;
    %117 = cast(%116, dtype="bool") /* ty=Tensor[(12, 3, 7), bool] */;
    %118 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(12, 3, 7), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %119 = cast(meta[relay.Constant][7] /* ty=Tensor[(12, 3, 7), float64] */, dtype="bool") /* ty=Tensor[(12, 3, 7), bool] */;
    %120 = dyn.reshape(%117, %118, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %121 = cast(%var_425, dtype="int64") /* ty=Tensor[(416), int64] */;
    %122 = cast(%var_426, dtype="int64") /* ty=Tensor[(16), int64] */;
    %123 = cast(%var_425, dtype="int64") /* ty=Tensor[(416), int64] */;
    %124 = reshape(%121, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), int64] */;
    %125 = reshape(%122, newshape=[8, 2]) /* ty=Tensor[(8, 2), int64] */;
    %126 = reshape(%123, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), int64] */;
    %127 = @func_394(%124, %125, %126) /* ty=(Tensor[(2, 13, 16), bool], Tensor[(8, 3, 7), bool], Tensor[(168), float32], Tensor[(2, 8, 3), int64], Tensor[(8, 2), int64], Tensor[(48), int64], Tensor[(8, 3, 7), bool], Tensor[(2, 8, 3), int64], Tensor[(8, 3, 7), bool], Tensor[(8, 3, 7), bool], Tensor[(2, 13, 16), bool]) */;
    %128 = cast(meta[relay.Constant][8] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
    %129 = cast(meta[relay.Constant][8] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
    %130 = reshape(%128, newshape=[8, 3, 7]) /* ty=Tensor[(8, 3, 7), float32] */;
    %131 = reshape(%129, newshape=[8, 3, 7]) /* ty=Tensor[(8, 3, 7), float32] */;
    %132 = cast(%var_426, dtype="int64") /* ty=Tensor[(16), int64] */;
    %133 = %127.7;
    %134 = cast(%133, dtype="int64") /* ty=Tensor[(2, 8, 3), int64] */;
    %135 = reshape(%132, newshape=[2, 8, 1]) /* ty=Tensor[(2, 8, 1), int64] */;
    %136 = reshape(%134, newshape=[2, 8, 3]) /* ty=Tensor[(2, 8, 3), int64] */;
    %137 = cast(%var_426, dtype="int64") /* ty=Tensor[(16), int64] */;
    %138 = @func_188(%135, %136) /* ty=Tensor[(2, 8, 3), int64] */;
    %139 = cast(%138, dtype="int64") /* ty=Tensor[(2, 8, 3), int64] */;
    %140 = reshape(%137, newshape=[2, 8, 1]) /* ty=Tensor[(2, 8, 1), int64] */;
    %141 = reshape(%139, newshape=[2, 8, 3]) /* ty=Tensor[(2, 8, 3), int64] */;
    %142 = greater(%119, %120) /* ty=Tensor[(12, 3, 7), bool] */;
    %143 = @func_26(%130, %131) /* ty=Tensor[(8, 3, 7), bool] */;
    %144 = @func_188(%140, %141) /* ty=Tensor[(2, 8, 3), int64] */;
    (%142, %133, %var_425, %var_426, %143, meta[relay.Constant][8] /* ty=Tensor[(168), float32] */, %138, %144)
  };
  %145(%var_457, %var_458) /* ty=(Tensor[(12, 3, 7), bool], Tensor[(2, 8, 3), int64], Tensor[(416), int64], Tensor[(16), int64], Tensor[(8, 3, 7), bool], Tensor[(168), float32], Tensor[(2, 8, 3), int64], Tensor[(2, 8, 3), int64]) */
}

def @func_7152(%var_7150: Tensor[(5, 15, 11), bool]) -> (Tensor[(5, 15, 11), bool],) {
  @func_7149(%var_7150) /* ty=(Tensor[(5, 15, 11), bool],) */
}

def @func_9733(%var_9731: Tensor[(180), uint64], %var_9732: Tensor[(156), int8]) -> (Tensor[(416), float64], Tensor[(15, 12, 1), bool], Tensor[(180), uint64], Tensor[(13, 2, 6), int8], Tensor[(156), int8]) {
  @func_9729(%var_9731, %var_9732) /* ty=(Tensor[(416), float64], Tensor[(15, 12, 1), bool], Tensor[(180), uint64], Tensor[(13, 2, 6), int8], Tensor[(156), int8]) */
}

def @func_9874(%var_9872: Tensor[(14, 16, 6), int8]) -> Tensor[(14, 16, 6), int8] {
  @func_9871(%var_9872) /* ty=Tensor[(14, 16, 6), int8] */
}

def @func_6701() -> (Tensor[(416), int64],) {
  %147 = fn () -> (Tensor[(416), int64],) {
    %146 = @func_5954() /* ty=Tensor[(416), int64] */;
    (%146,)
  };
  %147() /* ty=(Tensor[(416), int64],) */
}

def @func_3811(%var_3808: Tensor[(15, 9, 6), float32], %var_3809: Tensor[(2, 208), int64], %var_3810: Tensor[(16), int64]) -> (Tensor[(15, 9, 6), float32], Tensor[(8, 3, 7), bool], Tensor[(2, 208), int64], Tensor[(16), int64]) {
  %158 = fn (%var_3793: Tensor[(15, 9, 6), float32], %var_3804: Tensor[(2, 208), int64], %var_3805: Tensor[(16), int64]) -> (Tensor[(15, 9, 6), float32], Tensor[(8, 3, 7), bool], Tensor[(2, 208), int64], Tensor[(16), int64]) {
    %148 = cast(%var_3793, dtype="float32") /* ty=Tensor[(15, 9, 6), float32] */;
    %149 = cast(%var_3804, dtype="int64") /* ty=Tensor[(2, 208), int64] */;
    %150 = cast(%var_3805, dtype="int64") /* ty=Tensor[(16), int64] */;
    %151 = cast(%var_3804, dtype="int64") /* ty=Tensor[(2, 208), int64] */;
    %152 = reshape(%149, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), int64] */;
    %153 = reshape(%150, newshape=[8, 2]) /* ty=Tensor[(8, 2), int64] */;
    %154 = reshape(%151, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), int64] */;
    %155 = @func_394(%152, %153, %154) /* ty=(Tensor[(2, 13, 16), bool], Tensor[(8, 3, 7), bool], Tensor[(168), float32], Tensor[(2, 8, 3), int64], Tensor[(8, 2), int64], Tensor[(48), int64], Tensor[(8, 3, 7), bool], Tensor[(2, 8, 3), int64], Tensor[(8, 3, 7), bool], Tensor[(8, 3, 7), bool], Tensor[(2, 13, 16), bool]) */;
    %156 = erf(%148) /* ty=Tensor[(15, 9, 6), float32] */;
    %157 = %155.9;
    (%156, %157, %var_3804, %var_3805)
  };
  %158(%var_3808, %var_3809, %var_3810) /* ty=(Tensor[(15, 9, 6), float32], Tensor[(8, 3, 7), bool], Tensor[(2, 208), int64], Tensor[(16), int64]) */
}

def @func_11299() -> Tensor[(416), int64] {
  %159 = fn () -> Tensor[(416), int64] {
    @func_5954() /* ty=Tensor[(416), int64] */
  };
  %159() /* ty=Tensor[(416), int64] */
}

def @func_9253() -> (Tensor[(416), int64],) {
  %162 = fn () -> (Tensor[(416), int64],) {
    %160 = @func_9036() /* ty=(Tensor[(416), int64],) */;
    %161 = %160.0;
    (%161,)
  };
  %162() /* ty=(Tensor[(416), int64],) */
}

def @func_1960(%var_1959: Tensor[(9, 4, 7), float32]) -> Tensor[(9, 4, 7), float32] {
  %164 = fn (%var_1955: Tensor[(9, 4, 7), float32]) -> Tensor[(9, 4, 7), float32] {
    %163 = cast(%var_1955, dtype="float32") /* ty=Tensor[(9, 4, 7), float32] */;
    tan(%163) /* ty=Tensor[(9, 4, 7), float32] */
  };
  %164(%var_1959) /* ty=Tensor[(9, 4, 7), float32] */
}

def @func_3714(%var_3712: Tensor[(13, 2, 6), int8], %var_3713: Tensor[(13, 2, 6), int8]) -> Tensor[(13, 2, 6), int8] {
  @func_3710(%var_3712, %var_3713) /* ty=Tensor[(13, 2, 6), int8] */
}

def @func_11161() -> Tensor[(416), int64] {
  %166 = fn () -> Tensor[(416), int64] {
    %165 = @func_9138() /* ty=(Tensor[(416), int64],) */;
    %165.0
  };
  %166() /* ty=Tensor[(416), int64] */
}

def @func_6965(%var_6963: Tensor[(147), int16], %var_6964: Tensor[(16), int64]) -> (Tensor[(416), int64], Tensor[(8, 52), float64], Tensor[(147), int16], Tensor[(810), float32], Tensor[(16), int64]) {
  %181 = fn (%var_6958: Tensor[(147), int16], %var_6960: Tensor[(16), int64]) -> (Tensor[(416), int64], Tensor[(8, 52), float64], Tensor[(147), int16], Tensor[(810), float32], Tensor[(16), int64]) {
    %167 = @func_6156() /* ty=(Tensor[(416), int64],) */;
    %168 = cast(%var_6958, dtype="int16") /* ty=Tensor[(147), int16] */;
    %169 = cast(%var_6958, dtype="int16") /* ty=Tensor[(147), int16] */;
    %170 = cast(meta[relay.Constant][9] /* ty=Tensor[(810), float32] */, dtype="float32") /* ty=Tensor[(810), float32] */;
    %171 = %167.0;
    %172 = cast(%171, dtype="int64") /* ty=Tensor[(416), int64] */;
    %173 = cast(%var_6960, dtype="int64") /* ty=Tensor[(16), int64] */;
    %174 = reshape(%168, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), int16] */;
    %175 = reshape(%169, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), int16] */;
    %176 = reshape(%170, newshape=[810]) /* ty=Tensor[(810), float32] */;
    %177 = reshape(%172, newshape=[8, 52]) /* ty=Tensor[(8, 52), int64] */;
    %178 = reshape(%173, newshape=[16]) /* ty=Tensor[(16), int64] */;
    %179 = @func_3905(%174, %175, %176, %177, %178) /* ty=(Tensor[(3, 7, 7), int16], Tensor[(15, 9, 6), float32], Tensor[(810), float32], Tensor[(16), int64], Tensor[(8, 52), float64], Tensor[(6, 11, 8), bool], int64, Tensor[(528), int64]) */;
    %180 = %179.4;
    (%171, %180, %var_6958, meta[relay.Constant][9] /* ty=Tensor[(810), float32] */, %var_6960)
  };
  %181(%var_6963, %var_6964) /* ty=(Tensor[(416), int64], Tensor[(8, 52), float64], Tensor[(147), int16], Tensor[(810), float32], Tensor[(16), int64]) */
}

def @func_10493(%var_10473: Tensor[(2730), uint32]) -> (Tensor[(1, 15, 11), float64], Tensor[(14, 15, 13), float64], Tensor[(2730), uint32]) {
  %182 = @func_9244() /* ty=(Tensor[(416), int64], Tensor[(1, 15, 11), float64], Tensor[(1, 15, 11), float64], Tensor[(1, 15, 11), float32]) */;
  %183 = cast(%var_10473, dtype="uint32") /* ty=Tensor[(2730), uint32] */;
  %184 = cast(%var_10473, dtype="uint32") /* ty=Tensor[(2730), uint32] */;
  %185 = cast(%var_10473, dtype="bool") /* ty=Tensor[(2730), bool] */;
  %186 = reshape(%183, newshape=[14, 15, 13]) /* ty=Tensor[(14, 15, 13), uint32] */;
  %187 = reshape(%184, newshape=[14, 15, 13]) /* ty=Tensor[(14, 15, 13), uint32] */;
  %188 = reshape(%185, newshape=[14, 15, 13]) /* ty=Tensor[(14, 15, 13), bool] */;
  %189 = @func_4316(%186, %187, %188) /* ty=(Tensor[(14, 15, 13), bool], Tensor[(14, 15, 13), float64]) */;
  %190 = %182.1;
  %191 = %189.1;
  (%190, %191, %var_10473)
}

def @func_5955() -> Tensor[(416), int64] {
  %192 = fn () -> Tensor[(416), int64] {
    @func_5837() /* ty=Tensor[(416), int64] */
  };
  %192() /* ty=Tensor[(416), int64] */
}

def @func_5837() -> Tensor[(416), int64] {
  %193 = @func_5663() /* ty=(Tensor[(416), int64],) */;
  %193.0
}

def @func_4097(%var_4095: Tensor[(13, 14, 8), float32], %var_4096: Tensor[(13, 14, 8), float32]) -> (Tensor[(13, 14, 8), float64], Tensor[(13, 14, 8), bool]) {
  %206 = fn (%var_4065: Tensor[(13, 14, 8), float32], %var_4088: Tensor[(13, 14, 8), float32]) -> (Tensor[(13, 14, 8), float64], Tensor[(13, 14, 8), bool]) {
    %194 = cast(%var_4065, dtype="float32") /* ty=Tensor[(13, 14, 8), float32] */;
    %195 = rsqrt(%194) /* ty=Tensor[(13, 14, 8), float32] */;
    %196 = cast(%195, dtype="float64") /* ty=Tensor[(13, 14, 8), float64] */;
    %197 = shape_of(%var_4065, dtype="int32") /* ty=Tensor[(3), int32] */;
    %198 = cast(%var_4065, dtype="float64") /* ty=Tensor[(13, 14, 8), float64] */;
    %199 = dyn.reshape(%196, %197, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %200 = cast(%var_4088, dtype="bool") /* ty=Tensor[(13, 14, 8), bool] */;
    %201 = shape_of(%var_4065, dtype="int32") /* ty=Tensor[(3), int32] */;
    %202 = cast(%var_4065, dtype="bool") /* ty=Tensor[(13, 14, 8), bool] */;
    %203 = dyn.reshape(%200, %201, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %204 = subtract(%198, %199) /* ty=Tensor[(13, 14, 8), float64] */;
    %205 = logical_and(%202, %203) /* ty=Tensor[(13, 14, 8), bool] */;
    (%204, %205)
  };
  %206(%var_4095, %var_4096) /* ty=(Tensor[(13, 14, 8), float64], Tensor[(13, 14, 8), bool]) */
}

def @func_9245() -> (Tensor[(416), int64], Tensor[(1, 15, 11), float64], Tensor[(1, 15, 11), float64], Tensor[(1, 15, 11), float32]) {
  %215 = fn () -> (Tensor[(416), int64], Tensor[(1, 15, 11), float64], Tensor[(1, 15, 11), float64], Tensor[(1, 15, 11), float32]) {
    %207 = @func_6294() /* ty=(Tensor[(416), int64],) */;
    %208 = @func_6871() /* ty=(Tensor[(416), bool], Tensor[(416), int64], Tensor[(1, 15, 11), float64]) */;
    %209 = @func_9131() /* ty=Tensor[(1, 15, 11), float64] */;
    %210 = cast(%209, dtype="float32") /* ty=Tensor[(1, 15, 11), float32] */;
    %211 = %207.0;
    %212 = %208.2;
    %213 = @func_9131() /* ty=Tensor[(1, 15, 11), float64] */;
    %214 = rsqrt(%210) /* ty=Tensor[(1, 15, 11), float32] */;
    (%211, %212, %213, %214)
  };
  %215() /* ty=(Tensor[(416), int64], Tensor[(1, 15, 11), float64], Tensor[(1, 15, 11), float64], Tensor[(1, 15, 11), float32]) */
}

def @func_8162() -> Tensor[(416), int64] {
  %217 = fn () -> Tensor[(416), int64] {
    %216 = @func_8119() /* ty=(Tensor[(9, 15, 11), bool], Tensor[(416), int64]) */;
    %216.1
  };
  %217() /* ty=Tensor[(416), int64] */
}

def @func_6448() -> (Tensor[(416), int64],) {
  %219 = fn () -> (Tensor[(416), int64],) {
    %218 = @func_5954() /* ty=Tensor[(416), int64] */;
    (%218,)
  };
  %219() /* ty=(Tensor[(416), int64],) */
}

def @func_10264() -> (Tensor[(416), bool], Tensor[(416), int16]) {
  %220 = @func_9455() /* ty=Tensor[(416), bool] */;
  %221 = cast(%220, dtype="bool") /* ty=Tensor[(416), bool] */;
  %222 = reshape(%221, newshape=[416]) /* ty=Tensor[(416), bool] */;
  %223 = @func_7015(%222) /* ty=Tensor[(416), int16] */;
  (%220, %223)
}

def @func_6110(%var_6088: Tensor[(30), int16], %var_6104: Tensor[(180), uint8], %var_6105: Tensor[(504, 2), float32]) -> (Tensor[(416), int64], int16, Tensor[(30), int16], Tensor[(416), int64], Tensor[(2, 13, 16), float64], Tensor[(180), uint8], Tensor[(504, 2), float32]) {
  %224 = @func_5663() /* ty=(Tensor[(416), int64],) */;
  %225 = cast(%var_6088, dtype="int16") /* ty=Tensor[(30), int16] */;
  %226 = reshape(%225, newshape=[30]) /* ty=Tensor[(30), int16] */;
  %227 = @func_5937(%226) /* ty=(Tensor[(416), int64], Tensor[(3, 52), int8], int16, Tensor[(30), int16], Tensor[(156), int8]) */;
  %228 = @func_5663() /* ty=(Tensor[(416), int64],) */;
  %229 = cast(%var_6104, dtype="uint8") /* ty=Tensor[(180), uint8] */;
  %230 = cast(%var_6104, dtype="uint8") /* ty=Tensor[(180), uint8] */;
  %231 = cast(%var_6105, dtype="float32") /* ty=Tensor[(504, 2), float32] */;
  %232 = reshape(%229, newshape=[3, 4, 15]) /* ty=Tensor[(3, 4, 15), uint8] */;
  %233 = reshape(%230, newshape=[3, 4, 15]) /* ty=Tensor[(3, 4, 15), uint8] */;
  %234 = reshape(%231, newshape=[1008]) /* ty=Tensor[(1008), float32] */;
  %235 = @func_5080(%232, %233, %234) /* ty=(Tensor[(3, 4, 15), uint8], Tensor[(416), int64], Tensor[(16), int64], Tensor[(12, 7, 12), float32], Tensor[(1008), float32], Tensor[(2, 13, 16), float64]) */;
  %236 = %224.0;
  %237 = %227.2;
  %238 = %228.0;
  %239 = %235.5;
  (%236, %237, %var_6088, %238, %239, %var_6104, %var_6105)
}

def @func_6295() -> (Tensor[(416), int64],) {
  %241 = fn () -> (Tensor[(416), int64],) {
    %240 = @func_5954() /* ty=Tensor[(416), int64] */;
    (%240,)
  };
  %241() /* ty=(Tensor[(416), int64],) */
}

def @func_6669() -> Tensor[(416), int64] {
  %243 = fn () -> Tensor[(416), int64] {
    %242 = @func_6636() /* ty=(Tensor[(416), int64],) */;
    %242.0
  };
  %243() /* ty=Tensor[(416), int64] */
}

def @func_8252() -> (Tensor[(416), int64],) {
  %246 = fn () -> (Tensor[(416), int64],) {
    %244 = @func_5802() /* ty=(Tensor[(416), int64],) */;
    %245 = %244.0;
    (%245,)
  };
  %246() /* ty=(Tensor[(416), int64],) */
}

def @func_9929(%var_9926: Tensor[(156, 1), int8], %var_9927: Tensor[(110), float32], %var_9928: Tensor[(1008), float32]) -> (Tensor[(416), int64], Tensor[(3, 52), int8], int16, Tensor[(30), int16], Tensor[(156, 1), int8], Tensor[(110), float32], Tensor[(?, 15, 11), bool], Tensor[(11, 10, 48), int8], Tensor[(3, 4, 15), uint8], Tensor[(3, 60), uint8], Tensor[(1008), float32]) {
  %275 = fn (%var_9898: Tensor[(156, 1), int8], %var_9901: Tensor[(110), float32], %var_9921: Tensor[(1008), float32]) -> (Tensor[(416), int64], Tensor[(3, 52), int8], int16, Tensor[(30), int16], Tensor[(156, 1), int8], Tensor[(110), float32], Tensor[(?, 15, 11), bool], Tensor[(11, 10, 48), int8], Tensor[(3, 4, 15), uint8], Tensor[(3, 60), uint8], Tensor[(1008), float32]) {
    %247 = @func_9340() /* ty=(Tensor[(416), int64],) */;
    %248 = cast(meta[relay.Constant][10] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %249 = cast(meta[relay.Constant][11] /* ty=Tensor[(30), int16] */, dtype="int16") /* ty=Tensor[(30), int16] */;
    %250 = cast(%var_9898, dtype="int8") /* ty=Tensor[(156, 1), int8] */;
    %251 = reshape(%248, newshape=[]) /* ty=int16 */;
    %252 = reshape(%249, newshape=[3, 10, 1]) /* ty=Tensor[(3, 10, 1), int16] */;
    %253 = reshape(%250, newshape=[3, 52]) /* ty=Tensor[(3, 52), int8] */;
    %254 = @func_5275(%251, %252, %253) /* ty=(Tensor[(3, 10, 1), bool], Tensor[(13, 2, 6), int8], Tensor[(3, 52), int8]) */;
    %255 = cast(%var_9901, dtype="float32") /* ty=Tensor[(110), float32] */;
    %256 = cast(meta[relay.Constant][12] /* ty=Tensor[(48), int64] */, dtype="int64") /* ty=Tensor[(48), int64] */;
    %257 = reshape(%255, newshape=[11, 10, 1]) /* ty=Tensor[(11, 10, 1), float32] */;
    %258 = reshape(%256, newshape=[4, 12]) /* ty=Tensor[(4, 12), int64] */;
    %259 = @func_7495(%257, %258) /* ty=(Tensor[(11, 10, 1), float32], Tensor[(2, 8, 3), int64], Tensor[(16), int64], Tensor[(4, 12), int64]) */;
    %260 = %259.0;
    %261 = cast(meta[relay.Constant][12] /* ty=Tensor[(48), int64] */, dtype="int8") /* ty=Tensor[(48), int8] */;
    %262 = cast(%260, dtype="int8") /* ty=Tensor[(11, 10, 1), int8] */;
    %263 = cast(meta[relay.Constant][13] /* ty=Tensor[(3, 60), uint8] */, dtype="uint8") /* ty=Tensor[(3, 60), uint8] */;
    %264 = cast(meta[relay.Constant][13] /* ty=Tensor[(3, 60), uint8] */, dtype="uint8") /* ty=Tensor[(3, 60), uint8] */;
    %265 = cast(%var_9921, dtype="float32") /* ty=Tensor[(1008), float32] */;
    %266 = reshape(%263, newshape=[3, 4, 15]) /* ty=Tensor[(3, 4, 15), uint8] */;
    %267 = reshape(%264, newshape=[3, 4, 15]) /* ty=Tensor[(3, 4, 15), uint8] */;
    %268 = reshape(%265, newshape=[1008]) /* ty=Tensor[(1008), float32] */;
    %269 = @func_5080(%266, %267, %268) /* ty=(Tensor[(3, 4, 15), uint8], Tensor[(416), int64], Tensor[(16), int64], Tensor[(12, 7, 12), float32], Tensor[(1008), float32], Tensor[(2, 13, 16), float64]) */;
    %270 = %247.0;
    %271 = %254.2;
    %272 = @func_7107() /* ty=Tensor[(?, 15, 11), bool] */;
    %273 = left_shift(%261, %262) /* ty=Tensor[(11, 10, 48), int8] */;
    %274 = %269.0;
    (%270, %271, meta[relay.Constant][10] /* ty=int16 */, meta[relay.Constant][11] /* ty=Tensor[(30), int16] */, %var_9898, %var_9901, %272, %273, %274, meta[relay.Constant][13] /* ty=Tensor[(3, 60), uint8] */, %var_9921)
  };
  %275(%var_9926, %var_9927, %var_9928) /* ty=(Tensor[(416), int64], Tensor[(3, 52), int8], int16, Tensor[(30), int16], Tensor[(156, 1), int8], Tensor[(110), float32], Tensor[(?, 15, 11), bool], Tensor[(11, 10, 48), int8], Tensor[(3, 4, 15), uint8], Tensor[(3, 60), uint8], Tensor[(1008), float32]) */
}

def @func_3710(%var_3689: Tensor[(13, 2, 6), int8], %var_3690: Tensor[(13, 2, 6), int8]) -> Tensor[(13, 2, 6), int8] {
  %276 = cast(%var_3690, dtype="int8") /* ty=Tensor[(13, 2, 6), int8] */;
  %277 = shape_of(%var_3689, dtype="int32") /* ty=Tensor[(3), int32] */;
  %278 = cast(%var_3689, dtype="int8") /* ty=Tensor[(13, 2, 6), int8] */;
  %279 = dyn.reshape(%276, %277, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  logical_xor(%278, %279) /* ty=Tensor[(13, 2, 6), int8] */
}

def @func_7282() -> (Tensor[(416), int64],) {
  %280 = @func_6356() /* ty=Tensor[(416), int64] */;
  (%280,)
}

def @func_8375(%var_8374: Tensor[(7, 21), int16]) -> (Tensor[(3, 5, 6), float64], Tensor[(416), int64], Tensor[(16), int64], Tensor[(810), float32], Tensor[(7, 21), int16], Tensor[(810), float64], Tensor[(1, 15, 11), float64]) {
  %308 = fn (%var_8329: Tensor[(7, 21), int16]) -> (Tensor[(3, 5, 6), float64], Tensor[(416), int64], Tensor[(16), int64], Tensor[(810), float32], Tensor[(7, 21), int16], Tensor[(810), float64], Tensor[(1, 15, 11), float64]) {
    %281 = @func_6170() /* ty=(Tensor[(3, 5, 6), float64],) */;
    %282 = cast(%var_8329, dtype="int16") /* ty=Tensor[(7, 21), int16] */;
    %283 = cast(meta[relay.Constant][15] /* ty=Tensor[(16), int64] */, dtype="int64") /* ty=Tensor[(16), int64] */;
    %284 = reshape(%282, newshape=[147]) /* ty=Tensor[(147), int16] */;
    %285 = reshape(%283, newshape=[16]) /* ty=Tensor[(16), int64] */;
    %286 = @func_6962(%284, %285) /* ty=(Tensor[(416), int64], Tensor[(8, 52), float64], Tensor[(147), int16], Tensor[(810), float32], Tensor[(16), int64]) */;
    %287 = cast(meta[relay.Constant][16] /* ty=Tensor[(810), float32] */, dtype="float32") /* ty=Tensor[(810), float32] */;
    %288 = sigmoid(%287) /* ty=Tensor[(810), float32] */;
    %289 = cast(meta[relay.Constant][16] /* ty=Tensor[(810), float32] */, dtype="float32") /* ty=Tensor[(810), float32] */;
    %290 = cast(meta[relay.Constant][14] /* ty=Tensor[(416), int64] */, dtype="int64") /* ty=Tensor[(416), int64] */;
    %291 = cast(meta[relay.Constant][15] /* ty=Tensor[(16), int64] */, dtype="int64") /* ty=Tensor[(16), int64] */;
    %292 = reshape(%289, newshape=[15, 9, 6]) /* ty=Tensor[(15, 9, 6), float32] */;
    %293 = reshape(%290, newshape=[2, 208]) /* ty=Tensor[(2, 208), int64] */;
    %294 = reshape(%291, newshape=[16]) /* ty=Tensor[(16), int64] */;
    %295 = @func_3807(%292, %293, %294) /* ty=(Tensor[(15, 9, 6), float32], Tensor[(8, 3, 7), bool], Tensor[(2, 208), int64], Tensor[(16), int64]) */;
    %296 = %295.0;
    %297 = cast(%296, dtype="bool") /* ty=Tensor[(15, 9, 6), bool] */;
    %298 = shape_of(%288, dtype="int32") /* ty=Tensor[(1), int32] */;
    %299 = cast(%288, dtype="bool") /* ty=Tensor[(810), bool] */;
    %300 = dyn.reshape(%297, %298, newshape=[]) /* ty=Tensor[(?), bool] */;
    %301 = less_equal(%299, %300) /* ty=Tensor[(810), bool] */;
    %302 = cast(%301, dtype="float64") /* ty=Tensor[(810), float64] */;
    %303 = @func_6805() /* ty=(Tensor[(1, 15, 11), float64],) */;
    %304 = %281.0;
    %305 = %286.3;
    %306 = cos(%302) /* ty=Tensor[(810), float64] */;
    %307 = %303.0;
    (%304, meta[relay.Constant][14] /* ty=Tensor[(416), int64] */, meta[relay.Constant][15] /* ty=Tensor[(16), int64] */, %305, %var_8329, %306, %307)
  };
  %308(%var_8374) /* ty=(Tensor[(3, 5, 6), float64], Tensor[(416), int64], Tensor[(16), int64], Tensor[(810), float32], Tensor[(7, 21), int16], Tensor[(810), float64], Tensor[(1, 15, 11), float64]) */
}

def @func_7254(%var_7252: Tensor[(30, 1), int16], %var_7253: Tensor[(112), float32]) -> (Tensor[(2, 13, 16), float64], Tensor[(180), uint8], Tensor[(1008), float32], Tensor[(416), int64], Tensor[(1, 7, 16), float32], Tensor[(112), float32], Tensor[(30, 416), bool], Tensor[(416), int64]) {
  @func_7250(%var_7252, %var_7253) /* ty=(Tensor[(2, 13, 16), float64], Tensor[(180), uint8], Tensor[(1008), float32], Tensor[(416), int64], Tensor[(1, 7, 16), float32], Tensor[(112), float32], Tensor[(30, 416), bool], Tensor[(416), int64]) */
}

def @func_4228(%var_4207: Tensor[(2, 3, 14), int64], %var_4208: Tensor[(2, 3, 14), int64]) -> Tensor[(2, 3, 14), int64] {
  %309 = cast(%var_4208, dtype="int64") /* ty=Tensor[(2, 3, 14), int64] */;
  %310 = shape_of(%var_4207, dtype="int32") /* ty=Tensor[(3), int32] */;
  %311 = cast(%var_4207, dtype="int64") /* ty=Tensor[(2, 3, 14), int64] */;
  %312 = dyn.reshape(%309, %310, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  logical_xor(%311, %312) /* ty=Tensor[(2, 3, 14), int64] */
}

def @func_10106() -> Tensor[(416), bool] {
  %313 = @func_6740() /* ty=(Tensor[(416), bool],) */;
  %313.0
}

def @func_9321() -> Tensor[(416), int64] {
  @func_9319() /* ty=Tensor[(416), int64] */
}

def @func_1677(%var_1675: Tensor[(11, 5, 15), float32], %var_1676: Tensor[(11, 5, 15), float32]) -> (Tensor[(11, 5, 15), float32], Tensor[(11, 5, 15), int8], Tensor[(11, 5, 15), float64]) {
  %332 = fn (%var_1642: Tensor[(11, 5, 15), float32], %var_1665: Tensor[(11, 5, 15), float32]) -> (Tensor[(11, 5, 15), float32], Tensor[(11, 5, 15), int8], Tensor[(11, 5, 15), float64]) {
    %314 = cast(%var_1642, dtype="float32") /* ty=Tensor[(11, 5, 15), float32] */;
    %315 = erf(%314) /* ty=Tensor[(11, 5, 15), float32] */;
    %316 = cast(%315, dtype="float32") /* ty=Tensor[(11, 5, 15), float32] */;
    %317 = cast(%var_1665, dtype="int8") /* ty=Tensor[(11, 5, 15), int8] */;
    %318 = shape_of(%var_1642, dtype="int32") /* ty=Tensor[(3), int32] */;
    %319 = cast(%var_1642, dtype="int8") /* ty=Tensor[(11, 5, 15), int8] */;
    %320 = dyn.reshape(%317, %318, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %321 = cast(%315, dtype="int32") /* ty=Tensor[(11, 5, 15), int32] */;
    %322 = shape_of(%var_1642, dtype="int32") /* ty=Tensor[(3), int32] */;
    %323 = cast(%var_1642, dtype="int32") /* ty=Tensor[(11, 5, 15), int32] */;
    %324 = dyn.reshape(%321, %322, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %325 = left_shift(%323, %324) /* ty=Tensor[(11, 5, 15), int32] */;
    %326 = cast(%325, dtype="float32") /* ty=Tensor[(11, 5, 15), float32] */;
    %327 = sinh(%326) /* ty=Tensor[(11, 5, 15), float32] */;
    %328 = cast(%327, dtype="float64") /* ty=Tensor[(11, 5, 15), float64] */;
    %329 = asin(%316) /* ty=Tensor[(11, 5, 15), float32] */;
    %330 = multiply(%319, %320) /* ty=Tensor[(11, 5, 15), int8] */;
    %331 = atan(%328) /* ty=Tensor[(11, 5, 15), float64] */;
    (%329, %330, %331)
  };
  %332(%var_1675, %var_1676) /* ty=(Tensor[(11, 5, 15), float32], Tensor[(11, 5, 15), int8], Tensor[(11, 5, 15), float64]) */
}

def @func_5275(%var_5260: int16, %var_5261: Tensor[(3, 10, 1), int16], %var_5267: Tensor[(3, 52), int8]) -> (Tensor[(3, 10, 1), bool], Tensor[(13, 2, 6), int8], Tensor[(3, 52), int8]) {
  %333 = cast(%var_5260, dtype="bool") /* ty=bool */;
  %334 = cast(%var_5261, dtype="bool") /* ty=Tensor[(3, 10, 1), bool] */;
  %335 = cast(%var_5267, dtype="int8") /* ty=Tensor[(3, 52), int8] */;
  %336 = cast(%var_5267, dtype="int8") /* ty=Tensor[(3, 52), int8] */;
  %337 = reshape(%335, newshape=[13, 2, 6]) /* ty=Tensor[(13, 2, 6), int8] */;
  %338 = reshape(%336, newshape=[13, 2, 6]) /* ty=Tensor[(13, 2, 6), int8] */;
  %339 = less_equal(%333, %334) /* ty=Tensor[(3, 10, 1), bool] */;
  %340 = @func_3710(%337, %338) /* ty=Tensor[(13, 2, 6), int8] */;
  (%339, %340, %var_5267)
}

def @func_4232(%var_4230: Tensor[(2, 3, 14), int64], %var_4231: Tensor[(2, 3, 14), int64]) -> Tensor[(2, 3, 14), int64] {
  @func_4228(%var_4230, %var_4231) /* ty=Tensor[(2, 3, 14), int64] */
}

def @func_3614(%var_3613: Tensor[(15, 12, 1), uint64]) -> Tensor[(15, 12, 1), bool] {
  %343 = fn (%var_3601: Tensor[(15, 12, 1), uint64]) -> Tensor[(15, 12, 1), bool] {
    %341 = cast(meta[relay.Constant][17] /* ty=uint64 */, dtype="bool") /* ty=bool */;
    %342 = cast(%var_3601, dtype="bool") /* ty=Tensor[(15, 12, 1), bool] */;
    greater_equal(%341, %342) /* ty=Tensor[(15, 12, 1), bool] */
  };
  %343(%var_3613) /* ty=Tensor[(15, 12, 1), bool] */
}

def @func_11670(%var_11668: Tensor[(10, 6, 1), float64]) -> Tensor[(10, 6, ?), bool] {
  @func_11667(%var_11668) /* ty=Tensor[(10, 6, ?), bool] */
}

def @func_29(%var_27: Tensor[(8, 3, 7), float32], %var_28: Tensor[(8, 3, 7), float32]) -> Tensor[(8, 3, 7), bool] {
  %353 = fn (%var_0: Tensor[(8, 3, 7), float32], %var_1: Tensor[(8, 3, 7), float32]) -> Tensor[(8, 3, 7), bool] {
    %344 = cast(%var_1, dtype="float32") /* ty=Tensor[(8, 3, 7), float32] */;
    %345 = shape_of(%var_0, dtype="int32") /* ty=Tensor[(3), int32] */;
    %346 = cast(%var_0, dtype="float32") /* ty=Tensor[(8, 3, 7), float32] */;
    %347 = dyn.reshape(%344, %345, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %348 = mod(%346, %347) /* ty=Tensor[(8, 3, 7), float32] */;
    %349 = cast(%348, dtype="bool") /* ty=Tensor[(8, 3, 7), bool] */;
    %350 = shape_of(%var_0, dtype="int32") /* ty=Tensor[(3), int32] */;
    %351 = cast(%var_0, dtype="bool") /* ty=Tensor[(8, 3, 7), bool] */;
    %352 = dyn.reshape(%349, %350, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater_equal(%351, %352) /* ty=Tensor[(8, 3, 7), bool] */
  };
  %353(%var_27, %var_28) /* ty=Tensor[(8, 3, 7), bool] */
}

def @func_1804(%var_1802: Tensor[(6, 12, 4), bool]) -> Tensor[(6, 12, 4), bool] {
  @func_1801(%var_1802) /* ty=Tensor[(6, 12, 4), bool] */
}

def @func_9037() -> (Tensor[(416), int64],) {
  %355 = fn () -> (Tensor[(416), int64],) {
    %354 = @func_6356() /* ty=Tensor[(416), int64] */;
    (%354,)
  };
  %355() /* ty=(Tensor[(416), int64],) */
}

def @func_6561() -> (Tensor[(416), int64], Tensor[(416), int64]) {
  @func_6559() /* ty=(Tensor[(416), int64], Tensor[(416), int64]) */
}

def @func_8980(%var_8978: Tensor[(13, 3, 12), float32]) -> (Tensor[(13, 3, 12), float32],) {
  @func_8977(%var_8978) /* ty=(Tensor[(13, 3, 12), float32],) */
}

def @func_10972() -> (Tensor[(416), int64], Tensor[(1, 15, 11), float64]) {
  %359 = fn () -> (Tensor[(416), int64], Tensor[(1, 15, 11), float64]) {
    %356 = @func_9972() /* ty=(Tensor[(1, 15, 11), float64],) */;
    %357 = @func_5837() /* ty=Tensor[(416), int64] */;
    %358 = %356.0;
    (%357, %358)
  };
  %359() /* ty=(Tensor[(416), int64], Tensor[(1, 15, 11), float64]) */
}

def @func_3190(%var_3189: Tensor[(12, 7, 12), float32]) -> (Tensor[(12, 7, 12), float32],) {
  %362 = fn (%var_3181: Tensor[(12, 7, 12), float32]) -> (Tensor[(12, 7, 12), float32],) {
    %360 = cast(%var_3181, dtype="float32") /* ty=Tensor[(12, 7, 12), float32] */;
    %361 = acos(%360) /* ty=Tensor[(12, 7, 12), float32] */;
    (%361,)
  };
  %362(%var_3189) /* ty=(Tensor[(12, 7, 12), float32],) */
}

def @func_5886(%var_5885: Tensor[(1, 7, 16), float32]) -> Tensor[(1, 7, 16), float32] {
  %364 = fn (%var_5871: Tensor[(1, 7, 16), float32]) -> Tensor[(1, 7, 16), float32] {
    %363 = cast(%var_5871, dtype="float32") /* ty=Tensor[(1, 7, 16), float32] */;
    sigmoid(%363) /* ty=Tensor[(1, 7, 16), float32] */
  };
  %364(%var_5885) /* ty=Tensor[(1, 7, 16), float32] */
}

def @func_9048() -> Tensor[(416), int64] {
  %365 = @func_6294() /* ty=(Tensor[(416), int64],) */;
  %365.0
}

def @func_6426() -> Tensor[(416), int64] {
  @func_6356() /* ty=Tensor[(416), int64] */
}

def @func_10438() -> (Tensor[(416), int64],) {
  %366 = @func_5802() /* ty=(Tensor[(416), int64],) */;
  %367 = %366.0;
  (%367,)
}

def @func_9596() -> Tensor[(416), int64] {
  @func_5837() /* ty=Tensor[(416), int64] */
}

def @func_10226(%var_10223: Tensor[(16, 10, 4), uint8], %var_10224: Tensor[(16, 10, 4), uint8], %var_10225: int16) -> (Tensor[(16, 10, 4), uint8], Tensor[(3, 10, 1), bool], int16, Tensor[(30), int16], Tensor[(156), int8]) {
  %381 = fn (%var_10200: Tensor[(16, 10, 4), uint8], %var_10201: Tensor[(16, 10, 4), uint8], %var_10206: int16) -> (Tensor[(16, 10, 4), uint8], Tensor[(3, 10, 1), bool], int16, Tensor[(30), int16], Tensor[(156), int8]) {
    %368 = cast(%var_10201, dtype="uint8") /* ty=Tensor[(16, 10, 4), uint8] */;
    %369 = shape_of(%var_10200, dtype="int32") /* ty=Tensor[(3), int32] */;
    %370 = cast(%var_10200, dtype="uint8") /* ty=Tensor[(16, 10, 4), uint8] */;
    %371 = dyn.reshape(%368, %369, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %372 = cast(%var_10206, dtype="int16") /* ty=int16 */;
    %373 = cast(meta[relay.Constant][18] /* ty=Tensor[(30), int16] */, dtype="int16") /* ty=Tensor[(30), int16] */;
    %374 = cast(meta[relay.Constant][19] /* ty=Tensor[(156), int8] */, dtype="int8") /* ty=Tensor[(156), int8] */;
    %375 = reshape(%372, newshape=[]) /* ty=int16 */;
    %376 = reshape(%373, newshape=[3, 10, 1]) /* ty=Tensor[(3, 10, 1), int16] */;
    %377 = reshape(%374, newshape=[3, 52]) /* ty=Tensor[(3, 52), int8] */;
    %378 = @func_5275(%375, %376, %377) /* ty=(Tensor[(3, 10, 1), bool], Tensor[(13, 2, 6), int8], Tensor[(3, 52), int8]) */;
    %379 = bitwise_and(%370, %371) /* ty=Tensor[(16, 10, 4), uint8] */;
    %380 = %378.0;
    (%379, %380, %var_10206, meta[relay.Constant][18] /* ty=Tensor[(30), int16] */, meta[relay.Constant][19] /* ty=Tensor[(156), int8] */)
  };
  %381(%var_10223, %var_10224, %var_10225) /* ty=(Tensor[(16, 10, 4), uint8], Tensor[(3, 10, 1), bool], int16, Tensor[(30), int16], Tensor[(156), int8]) */
}

def @func_11085() -> (Tensor[(416), int64], Tensor[(416), int64]) {
  @func_11083() /* ty=(Tensor[(416), int64], Tensor[(416), int64]) */
}

def @func_8412() -> Tensor[(416), int64] {
  @func_8410() /* ty=Tensor[(416), int64] */
}

def @func_10008() -> (Tensor[(?, 15, 11), bool], Tensor[(1, 15, 11), float64]) {
  @func_10006() /* ty=(Tensor[(?, 15, 11), bool], Tensor[(1, 15, 11), float64]) */
}

def @func_6741() -> (Tensor[(416), bool],) {
  %390 = fn () -> (Tensor[(416), bool],) {
    %382 = @func_6426() /* ty=Tensor[(416), int64] */;
    %383 = @func_6559() /* ty=(Tensor[(416), int64], Tensor[(416), int64]) */;
    %384 = %383.1;
    %385 = cast(%384, dtype="bool") /* ty=Tensor[(416), bool] */;
    %386 = shape_of(%382, dtype="int32") /* ty=Tensor[(1), int32] */;
    %387 = cast(%382, dtype="bool") /* ty=Tensor[(416), bool] */;
    %388 = dyn.reshape(%385, %386, newshape=[]) /* ty=Tensor[(?), bool] */;
    %389 = equal(%387, %388) /* ty=Tensor[(416), bool] */;
    (%389,)
  };
  %390() /* ty=(Tensor[(416), bool],) */
}

def @func_6638() -> (Tensor[(416), int64],) {
  @func_6636() /* ty=(Tensor[(416), int64],) */
}

def @func_5998(%var_5996: Tensor[(252), float32]) -> (Tensor[(416), int64], Tensor[(9, 4, 7), float32], Tensor[(252), float32]) {
  @func_5995(%var_5996) /* ty=(Tensor[(416), int64], Tensor[(9, 4, 7), float32], Tensor[(252), float32]) */
}

def @func_8541(%var_8539: Tensor[(180), uint8], %var_8540: Tensor[(1008), float32]) -> (Tensor[(416), int64], Tensor[(12, 7, 12), float32], Tensor[(180), uint8], Tensor[(1008), float32]) {
  %401 = fn (%var_8534: Tensor[(180), uint8], %var_8535: Tensor[(1008), float32]) -> (Tensor[(416), int64], Tensor[(12, 7, 12), float32], Tensor[(180), uint8], Tensor[(1008), float32]) {
    %391 = @func_6447() /* ty=(Tensor[(416), int64],) */;
    %392 = cast(%var_8534, dtype="uint8") /* ty=Tensor[(180), uint8] */;
    %393 = cast(%var_8534, dtype="uint8") /* ty=Tensor[(180), uint8] */;
    %394 = cast(%var_8535, dtype="float32") /* ty=Tensor[(1008), float32] */;
    %395 = reshape(%392, newshape=[3, 4, 15]) /* ty=Tensor[(3, 4, 15), uint8] */;
    %396 = reshape(%393, newshape=[3, 4, 15]) /* ty=Tensor[(3, 4, 15), uint8] */;
    %397 = reshape(%394, newshape=[1008]) /* ty=Tensor[(1008), float32] */;
    %398 = @func_5080(%395, %396, %397) /* ty=(Tensor[(3, 4, 15), uint8], Tensor[(416), int64], Tensor[(16), int64], Tensor[(12, 7, 12), float32], Tensor[(1008), float32], Tensor[(2, 13, 16), float64]) */;
    %399 = %391.0;
    %400 = %398.3;
    (%399, %400, %var_8534, %var_8535)
  };
  %401(%var_8539, %var_8540) /* ty=(Tensor[(416), int64], Tensor[(12, 7, 12), float32], Tensor[(180), uint8], Tensor[(1008), float32]) */
}

def @func_10084(%var_10082: Tensor[(1, 528), int64], %var_10083: Tensor[(16), int64]) -> (Tensor[(9, 15, 11), uint64], Tensor[(6, 12, 4), int8], Tensor[(416), int64], Tensor[(1, 528), int64], Tensor[(16), int64], Tensor[(48), int64]) {
  @func_10080(%var_10082, %var_10083) /* ty=(Tensor[(9, 15, 11), uint64], Tensor[(6, 12, 4), int8], Tensor[(416), int64], Tensor[(1, 528), int64], Tensor[(16), int64], Tensor[(48), int64]) */
}

def @func_10913(%var_10796: Tensor[(2, 728), int64], %var_10813: Tensor[(416), int64], %var_10814: Tensor[(16), int64]) -> (Tensor[(2, 728), float32], Tensor[(168), float32], Tensor[(416), int64], Tensor[(16), int64], Tensor[(2, 728), float64], Tensor[(2, 728), float32], Tensor[(6, 11, 8), bool], int64, Tensor[(528), int64], Tensor[(416), int64]) {
  %402 = @func_5627() /* ty=(Tensor[(1, 15, 11), float64], Tensor[(416), int64], Tensor[(2, 728), int64]) */;
  %403 = %402.2;
  %404 = cast(%var_10796, dtype="float32") /* ty=Tensor[(2, 728), float32] */;
  %405 = shape_of(%403, dtype="int32") /* ty=Tensor[(2), int32] */;
  %406 = cast(%403, dtype="float32") /* ty=Tensor[(2, 728), float32] */;
  %407 = dyn.reshape(%404, %405, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %408 = cast(%var_10813, dtype="int64") /* ty=Tensor[(416), int64] */;
  %409 = cast(%var_10814, dtype="int64") /* ty=Tensor[(16), int64] */;
  %410 = reshape(%408, newshape=[416]) /* ty=Tensor[(416), int64] */;
  %411 = reshape(%409, newshape=[16]) /* ty=Tensor[(16), int64] */;
  %412 = @func_456(%410, %411) /* ty=(Tensor[(12, 3, 7), bool], Tensor[(2, 8, 3), int64], Tensor[(416), int64], Tensor[(16), int64], Tensor[(8, 3, 7), bool], Tensor[(168), float32], Tensor[(2, 8, 3), int64], Tensor[(2, 8, 3), int64]) */;
  %413 = cast(%403, dtype="float64") /* ty=Tensor[(2, 728), float64] */;
  %414 = sin(%413) /* ty=Tensor[(2, 728), float64] */;
  %415 = cast(%414, dtype="float32") /* ty=Tensor[(2, 728), float32] */;
  %416 = tan(%415) /* ty=Tensor[(2, 728), float32] */;
  %417 = cast(%416, dtype="float64") /* ty=Tensor[(2, 728), float64] */;
  %418 = log(%417) /* ty=Tensor[(2, 728), float64] */;
  %419 = cast(%414, dtype="bool") /* ty=Tensor[(2, 728), bool] */;
  %420 = shape_of(%418, dtype="int32") /* ty=Tensor[(2), int32] */;
  %421 = cast(%418, dtype="bool") /* ty=Tensor[(2, 728), bool] */;
  %422 = dyn.reshape(%419, %420, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %423 = less_equal(%421, %422) /* ty=Tensor[(2, 728), bool] */;
  %424 = cast(%423, dtype="float64") /* ty=Tensor[(2, 728), float64] */;
  %425 = cast(%418, dtype="float64") /* ty=Tensor[(2, 728), float64] */;
  %426 = sqrt(%425) /* ty=Tensor[(2, 728), float64] */;
  %427 = cast(%426, dtype="float32") /* ty=Tensor[(2, 728), float32] */;
  %428 = exp(%427) /* ty=Tensor[(2, 728), float32] */;
  %429 = cast(%428, dtype="float64") /* ty=Tensor[(2, 728), float64] */;
  %430 = atan(%429) /* ty=Tensor[(2, 728), float64] */;
  %431 = cast(%430, dtype="float32") /* ty=Tensor[(2, 728), float32] */;
  %432 = cast(2 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %433 = cast(meta[relay.Constant][20] /* ty=Tensor[(528), int64] */, dtype="int64") /* ty=Tensor[(528), int64] */;
  %434 = reshape(%432, newshape=[]) /* ty=int64 */;
  %435 = reshape(%433, newshape=[6, 11, 8]) /* ty=Tensor[(6, 11, 8), int64] */;
  %436 = @func_8144() /* ty=(Tensor[(416), int64],) */;
  %437 = subtract(%406, %407) /* ty=Tensor[(2, 728), float32] */;
  %438 = %412.5;
  %439 = sigmoid(%424) /* ty=Tensor[(2, 728), float64] */;
  %440 = log2(%431) /* ty=Tensor[(2, 728), float32] */;
  %441 = @func_2788(%434, %435) /* ty=Tensor[(6, 11, 8), bool] */;
  %442 = %436.0;
  (%437, %438, %var_10813, %var_10814, %439, %440, %441, 2 /* ty=int64 */, meta[relay.Constant][20] /* ty=Tensor[(528), int64] */, %442)
}

def @func_2788(%var_2760: int64, %var_2761: Tensor[(6, 11, 8), int64]) -> Tensor[(6, 11, 8), bool] {
  %443 = cast(%var_2760, dtype="bool") /* ty=bool */;
  %444 = cast(%var_2761, dtype="bool") /* ty=Tensor[(6, 11, 8), bool] */;
  not_equal(%443, %444) /* ty=Tensor[(6, 11, 8), bool] */
}

def @func_6170() -> (Tensor[(3, 5, 6), float64],) {
  %445 = cast(meta[relay.Constant][21] /* ty=Tensor[(3, 5, 6), float64] */, dtype="float64") /* ty=Tensor[(3, 5, 6), float64] */;
  %446 = cos(%445) /* ty=Tensor[(3, 5, 6), float64] */;
  (%446,)
}

def @func_11540() -> Tensor[(416), bool] {
  %447 = @func_8402() /* ty=(Tensor[(416), bool],) */;
  %447.0
}

def @func_8977(%var_8959: Tensor[(13, 3, 12), float32]) -> (Tensor[(13, 3, 12), float32],) {
  %448 = cast(%var_8959, dtype="float32") /* ty=Tensor[(13, 3, 12), float32] */;
  %449 = cos(%448) /* ty=Tensor[(13, 3, 12), float32] */;
  (%449,)
}

def @func_9263() -> Tensor[(416), int64] {
  @func_9261() /* ty=Tensor[(416), int64] */
}

def @func_9341() -> (Tensor[(416), int64],) {
  %452 = fn () -> (Tensor[(416), int64],) {
    %450 = @func_5802() /* ty=(Tensor[(416), int64],) */;
    %451 = %450.0;
    (%451,)
  };
  %452() /* ty=(Tensor[(416), int64],) */
}

def @func_5280(%var_5277: int16, %var_5278: Tensor[(3, 10, 1), int16], %var_5279: Tensor[(3, 52), int8]) -> (Tensor[(3, 10, 1), bool], Tensor[(13, 2, 6), int8], Tensor[(3, 52), int8]) {
  @func_5275(%var_5277, %var_5278, %var_5279) /* ty=(Tensor[(3, 10, 1), bool], Tensor[(13, 2, 6), int8], Tensor[(3, 52), int8]) */
}

def @func_6872() -> (Tensor[(416), bool], Tensor[(416), int64], Tensor[(1, 15, 11), float64]) {
  %459 = fn () -> (Tensor[(416), bool], Tensor[(416), int64], Tensor[(1, 15, 11), float64]) {
    %453 = @func_6740() /* ty=(Tensor[(416), bool],) */;
    %454 = @func_5781() /* ty=(Tensor[(416), int64],) */;
    %455 = @func_6805() /* ty=(Tensor[(1, 15, 11), float64],) */;
    %456 = %453.0;
    %457 = %454.0;
    %458 = %455.0;
    (%456, %457, %458)
  };
  %459() /* ty=(Tensor[(416), bool], Tensor[(416), int64], Tensor[(1, 15, 11), float64]) */
}

def @func_398(%var_395: Tensor[(2, 13, 16), int64], %var_396: Tensor[(8, 2), int64], %var_397: Tensor[(2, 13, 16), int64]) -> (Tensor[(2, 13, 16), bool], Tensor[(8, 3, 7), bool], Tensor[(168), float32], Tensor[(2, 8, 3), int64], Tensor[(8, 2), int64], Tensor[(48), int64], Tensor[(8, 3, 7), bool], Tensor[(2, 8, 3), int64], Tensor[(8, 3, 7), bool], Tensor[(8, 3, 7), bool], Tensor[(2, 13, 16), bool]) {
  %500 = fn (%var_295: Tensor[(2, 13, 16), int64], %var_309: Tensor[(8, 2), int64], %var_374: Tensor[(2, 13, 16), int64]) -> (Tensor[(2, 13, 16), bool], Tensor[(8, 3, 7), bool], Tensor[(168), float32], Tensor[(2, 8, 3), int64], Tensor[(8, 2), int64], Tensor[(48), int64], Tensor[(8, 3, 7), bool], Tensor[(2, 8, 3), int64], Tensor[(8, 3, 7), bool], Tensor[(8, 3, 7), bool], Tensor[(2, 13, 16), bool]) {
    %460 = cast(meta[relay.Constant][22] /* ty=Tensor[(2, 13, 16), int64] */, dtype="bool") /* ty=Tensor[(2, 13, 16), bool] */;
    %461 = shape_of(%var_295, dtype="int32") /* ty=Tensor[(3), int32] */;
    %462 = cast(%var_295, dtype="bool") /* ty=Tensor[(2, 13, 16), bool] */;
    %463 = dyn.reshape(%460, %461, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %464 = cast(meta[relay.Constant][23] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
    %465 = cast(meta[relay.Constant][23] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
    %466 = reshape(%464, newshape=[8, 3, 7]) /* ty=Tensor[(8, 3, 7), float32] */;
    %467 = reshape(%465, newshape=[8, 3, 7]) /* ty=Tensor[(8, 3, 7), float32] */;
    %468 = cast(%var_309, dtype="int64") /* ty=Tensor[(8, 2), int64] */;
    %469 = cast(meta[relay.Constant][24] /* ty=Tensor[(48), int64] */, dtype="int64") /* ty=Tensor[(48), int64] */;
    %470 = reshape(%468, newshape=[2, 8, 1]) /* ty=Tensor[(2, 8, 1), int64] */;
    %471 = reshape(%469, newshape=[2, 8, 3]) /* ty=Tensor[(2, 8, 3), int64] */;
    %472 = cast(meta[relay.Constant][23] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
    %473 = @func_26(%466, %467) /* ty=Tensor[(8, 3, 7), bool] */;
    %474 = cast(%473, dtype="float32") /* ty=Tensor[(8, 3, 7), float32] */;
    %475 = reshape(%472, newshape=[8, 3, 7]) /* ty=Tensor[(8, 3, 7), float32] */;
    %476 = reshape(%474, newshape=[8, 3, 7]) /* ty=Tensor[(8, 3, 7), float32] */;
    %477 = cast(%var_309, dtype="int64") /* ty=Tensor[(8, 2), int64] */;
    %478 = cast(meta[relay.Constant][24] /* ty=Tensor[(48), int64] */, dtype="int64") /* ty=Tensor[(48), int64] */;
    %479 = reshape(%477, newshape=[2, 8, 1]) /* ty=Tensor[(2, 8, 1), int64] */;
    %480 = reshape(%478, newshape=[2, 8, 3]) /* ty=Tensor[(2, 8, 3), int64] */;
    %481 = cast(meta[relay.Constant][23] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
    %482 = @func_26(%475, %476) /* ty=Tensor[(8, 3, 7), bool] */;
    %483 = cast(%482, dtype="float32") /* ty=Tensor[(8, 3, 7), float32] */;
    %484 = reshape(%481, newshape=[8, 3, 7]) /* ty=Tensor[(8, 3, 7), float32] */;
    %485 = reshape(%483, newshape=[8, 3, 7]) /* ty=Tensor[(8, 3, 7), float32] */;
    %486 = cast(%482, dtype="float32") /* ty=Tensor[(8, 3, 7), float32] */;
    %487 = @func_26(%484, %485) /* ty=Tensor[(8, 3, 7), bool] */;
    %488 = cast(%487, dtype="float32") /* ty=Tensor[(8, 3, 7), float32] */;
    %489 = reshape(%486, newshape=[8, 3, 7]) /* ty=Tensor[(8, 3, 7), float32] */;
    %490 = reshape(%488, newshape=[8, 3, 7]) /* ty=Tensor[(8, 3, 7), float32] */;
    %491 = cast(%var_374, dtype="bool") /* ty=Tensor[(2, 13, 16), bool] */;
    %492 = shape_of(%var_295, dtype="int32") /* ty=Tensor[(3), int32] */;
    %493 = cast(%var_295, dtype="bool") /* ty=Tensor[(2, 13, 16), bool] */;
    %494 = dyn.reshape(%491, %492, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %495 = greater(%462, %463) /* ty=Tensor[(2, 13, 16), bool] */;
    %496 = @func_188(%470, %471) /* ty=Tensor[(2, 8, 3), int64] */;
    %497 = @func_188(%479, %480) /* ty=Tensor[(2, 8, 3), int64] */;
    %498 = @func_26(%489, %490) /* ty=Tensor[(8, 3, 7), bool] */;
    %499 = not_equal(%493, %494) /* ty=Tensor[(2, 13, 16), bool] */;
    (%495, %473, meta[relay.Constant][23] /* ty=Tensor[(168), float32] */, %496, %var_309, meta[relay.Constant][24] /* ty=Tensor[(48), int64] */, %482, %497, %487, %498, %499)
  };
  %500(%var_395, %var_396, %var_397) /* ty=(Tensor[(2, 13, 16), bool], Tensor[(8, 3, 7), bool], Tensor[(168), float32], Tensor[(2, 8, 3), int64], Tensor[(8, 2), int64], Tensor[(48), int64], Tensor[(8, 3, 7), bool], Tensor[(2, 8, 3), int64], Tensor[(8, 3, 7), bool], Tensor[(8, 3, 7), bool], Tensor[(2, 13, 16), bool]) */
}

def @func_2655(%var_2653: Tensor[(7, 3, 15), float64], %var_2654: Tensor[(416), int64]) -> (Tensor[(7, 3, 15), int16], Tensor[(16), int64], Tensor[(416), int64], Tensor[(4, 4), int64]) {
  %517 = fn (%var_2617: Tensor[(7, 3, 15), float64], %var_2636: Tensor[(416), int64]) -> (Tensor[(7, 3, 15), int16], Tensor[(16), int64], Tensor[(416), int64], Tensor[(4, 4), int64]) {
    %501 = cast(meta[relay.Constant][25] /* ty=Tensor[(7, 3, 15), float64] */, dtype="float64") /* ty=Tensor[(7, 3, 15), float64] */;
    %502 = shape_of(%var_2617, dtype="int32") /* ty=Tensor[(3), int32] */;
    %503 = cast(%var_2617, dtype="float64") /* ty=Tensor[(7, 3, 15), float64] */;
    %504 = dyn.reshape(%501, %502, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %505 = mod(%503, %504) /* ty=Tensor[(7, 3, 15), float64] */;
    %506 = cast(meta[relay.Constant][25] /* ty=Tensor[(7, 3, 15), float64] */, dtype="int16") /* ty=Tensor[(7, 3, 15), int16] */;
    %507 = shape_of(%505, dtype="int32") /* ty=Tensor[(3), int32] */;
    %508 = cast(%505, dtype="int16") /* ty=Tensor[(7, 3, 15), int16] */;
    %509 = dyn.reshape(%506, %507, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %510 = cast(%var_2636, dtype="int64") /* ty=Tensor[(416), int64] */;
    %511 = cast(meta[relay.Constant][26] /* ty=Tensor[(4, 4), int64] */, dtype="int64") /* ty=Tensor[(4, 4), int64] */;
    %512 = reshape(%510, newshape=[416]) /* ty=Tensor[(416), int64] */;
    %513 = reshape(%511, newshape=[16]) /* ty=Tensor[(16), int64] */;
    %514 = @func_456(%512, %513) /* ty=(Tensor[(12, 3, 7), bool], Tensor[(2, 8, 3), int64], Tensor[(416), int64], Tensor[(16), int64], Tensor[(8, 3, 7), bool], Tensor[(168), float32], Tensor[(2, 8, 3), int64], Tensor[(2, 8, 3), int64]) */;
    %515 = bitwise_or(%508, %509) /* ty=Tensor[(7, 3, 15), int16] */;
    %516 = %514.3;
    (%515, %516, %var_2636, meta[relay.Constant][26] /* ty=Tensor[(4, 4), int64] */)
  };
  %517(%var_2653, %var_2654) /* ty=(Tensor[(7, 3, 15), int16], Tensor[(16), int64], Tensor[(416), int64], Tensor[(4, 4), int64]) */
}

def @func_5699(%var_5697: Tensor[(6, 42), float32]) -> (Tensor[(416), int64], Tensor[(416), int64], Tensor[(2, 728), int64], Tensor[(9, 4, 7), float32], Tensor[(6, 42), float32]) {
  @func_5696(%var_5697) /* ty=(Tensor[(416), int64], Tensor[(416), int64], Tensor[(2, 728), int64], Tensor[(9, 4, 7), float32], Tensor[(6, 42), float32]) */
}

def @func_5803() -> (Tensor[(416), int64],) {
  %520 = fn () -> (Tensor[(416), int64],) {
    %518 = @func_5663() /* ty=(Tensor[(416), int64],) */;
    %519 = %518.0;
    (%519,)
  };
  %520() /* ty=(Tensor[(416), int64],) */
}

def @func_9295() -> (Tensor[(416), float64], Tensor[(416), int64], Tensor[(416), int16]) {
  %526 = fn () -> (Tensor[(416), float64], Tensor[(416), int64], Tensor[(416), int16]) {
    %521 = @func_8704() /* ty=Tensor[(416), float64] */;
    %522 = cast(%521, dtype="bool") /* ty=Tensor[(416), bool] */;
    %523 = reshape(%522, newshape=[416]) /* ty=Tensor[(416), bool] */;
    %524 = @func_9048() /* ty=Tensor[(416), int64] */;
    %525 = @func_7015(%523) /* ty=Tensor[(416), int16] */;
    (%521, %524, %525)
  };
  %526() /* ty=(Tensor[(416), float64], Tensor[(416), int64], Tensor[(416), int16]) */
}

def @func_10316(%var_10315: Tensor[(180), uint64]) -> (Tensor[(416), int64], Tensor[(13, 2, 6), int8], Tensor[(180), uint64], Tensor[(156), int8]) {
  %535 = fn (%var_10303: Tensor[(180), uint64]) -> (Tensor[(416), int64], Tensor[(13, 2, 6), int8], Tensor[(180), uint64], Tensor[(156), int8]) {
    %527 = @func_7282() /* ty=(Tensor[(416), int64],) */;
    %528 = cast(%var_10303, dtype="uint64") /* ty=Tensor[(180), uint64] */;
    %529 = cast(meta[relay.Constant][27] /* ty=Tensor[(156), int8] */, dtype="int8") /* ty=Tensor[(156), int8] */;
    %530 = reshape(%528, newshape=[180]) /* ty=Tensor[(180), uint64] */;
    %531 = reshape(%529, newshape=[156]) /* ty=Tensor[(156), int8] */;
    %532 = @func_9729(%530, %531) /* ty=(Tensor[(416), float64], Tensor[(15, 12, 1), bool], Tensor[(180), uint64], Tensor[(13, 2, 6), int8], Tensor[(156), int8]) */;
    %533 = %527.0;
    %534 = %532.3;
    (%533, %534, %var_10303, meta[relay.Constant][27] /* ty=Tensor[(156), int8] */)
  };
  %535(%var_10315) /* ty=(Tensor[(416), int64], Tensor[(13, 2, 6), int8], Tensor[(180), uint64], Tensor[(156), int8]) */
}

def @func_9468() -> (Tensor[(1, 15, 11), float64], Tensor[(9, 15, 11), bool]) {
  %540 = fn () -> (Tensor[(1, 15, 11), float64], Tensor[(9, 15, 11), bool]) {
    %536 = @func_8914() /* ty=(Tensor[(1, 15, 11), float64],) */;
    %537 = @func_8119() /* ty=(Tensor[(9, 15, 11), bool], Tensor[(416), int64]) */;
    %538 = %536.0;
    %539 = %537.0;
    (%538, %539)
  };
  %540() /* ty=(Tensor[(1, 15, 11), float64], Tensor[(9, 15, 11), bool]) */
}

def @func_2792(%var_2790: int64, %var_2791: Tensor[(6, 11, 8), int64]) -> Tensor[(6, 11, 8), bool] {
  @func_2788(%var_2790, %var_2791) /* ty=Tensor[(6, 11, 8), bool] */
}

def @func_8830(%var_8828: Tensor[(180), uint8], %var_8829: Tensor[(1008), float32]) -> (Tensor[(416), int64], Tensor[(12, 7, 12), float32], Tensor[(180), uint8], Tensor[(1008), float32]) {
  %548 = fn (%var_8824: Tensor[(180), uint8], %var_8825: Tensor[(1008), float32]) -> (Tensor[(416), int64], Tensor[(12, 7, 12), float32], Tensor[(180), uint8], Tensor[(1008), float32]) {
    %541 = cast(%var_8824, dtype="uint8") /* ty=Tensor[(180), uint8] */;
    %542 = cast(%var_8825, dtype="float32") /* ty=Tensor[(1008), float32] */;
    %543 = reshape(%541, newshape=[180]) /* ty=Tensor[(180), uint8] */;
    %544 = reshape(%542, newshape=[1008]) /* ty=Tensor[(1008), float32] */;
    %545 = @func_8538(%543, %544) /* ty=(Tensor[(416), int64], Tensor[(12, 7, 12), float32], Tensor[(180), uint8], Tensor[(1008), float32]) */;
    %546 = @func_5954() /* ty=Tensor[(416), int64] */;
    %547 = %545.1;
    (%546, %547, %var_8824, %var_8825)
  };
  %548(%var_8828, %var_8829) /* ty=(Tensor[(416), int64], Tensor[(12, 7, 12), float32], Tensor[(180), uint8], Tensor[(1008), float32]) */
}

def @func_8121() -> (Tensor[(9, 15, 11), bool], Tensor[(416), int64]) {
  @func_8119() /* ty=(Tensor[(9, 15, 11), bool], Tensor[(416), int64]) */
}

def @func_9729(%var_9724: Tensor[(180), uint64], %var_9727: Tensor[(156), int8]) -> (Tensor[(416), float64], Tensor[(15, 12, 1), bool], Tensor[(180), uint64], Tensor[(13, 2, 6), int8], Tensor[(156), int8]) {
  %549 = @func_8144() /* ty=(Tensor[(416), int64],) */;
  %550 = %549.0;
  %551 = cast(%550, dtype="float64") /* ty=Tensor[(416), float64] */;
  %552 = cast(%var_9724, dtype="uint64") /* ty=Tensor[(180), uint64] */;
  %553 = reshape(%552, newshape=[15, 12, 1]) /* ty=Tensor[(15, 12, 1), uint64] */;
  %554 = cast(%var_9727, dtype="int8") /* ty=Tensor[(156), int8] */;
  %555 = cast(%var_9727, dtype="int8") /* ty=Tensor[(156), int8] */;
  %556 = reshape(%554, newshape=[13, 2, 6]) /* ty=Tensor[(13, 2, 6), int8] */;
  %557 = reshape(%555, newshape=[13, 2, 6]) /* ty=Tensor[(13, 2, 6), int8] */;
  %558 = tan(%551) /* ty=Tensor[(416), float64] */;
  %559 = @func_3612(%553) /* ty=Tensor[(15, 12, 1), bool] */;
  %560 = @func_3710(%556, %557) /* ty=Tensor[(13, 2, 6), int8] */;
  (%558, %559, %var_9724, %560, %var_9727)
}

def @func_6115(%var_6112: Tensor[(30), int16], %var_6113: Tensor[(180), uint8], %var_6114: Tensor[(504, 2), float32]) -> (Tensor[(416), int64], int16, Tensor[(30), int16], Tensor[(416), int64], Tensor[(2, 13, 16), float64], Tensor[(180), uint8], Tensor[(504, 2), float32]) {
  @func_6110(%var_6112, %var_6113, %var_6114) /* ty=(Tensor[(416), int64], int16, Tensor[(30), int16], Tensor[(416), int64], Tensor[(2, 13, 16), float64], Tensor[(180), uint8], Tensor[(504, 2), float32]) */
}

def @func_7383(%var_7382: Tensor[(252), float32]) -> (Tensor[(416), int64], Tensor[(9, 4, 7), float32], Tensor[(252), float32], Tensor[(1, 15, 11), float64]) {
  %567 = fn (%var_7368: Tensor[(252), float32]) -> (Tensor[(416), int64], Tensor[(9, 4, 7), float32], Tensor[(252), float32], Tensor[(1, 15, 11), float64]) {
    %561 = cast(%var_7368, dtype="float32") /* ty=Tensor[(252), float32] */;
    %562 = reshape(%561, newshape=[9, 4, 7]) /* ty=Tensor[(9, 4, 7), float32] */;
    %563 = @func_6805() /* ty=(Tensor[(1, 15, 11), float64],) */;
    %564 = @func_5954() /* ty=Tensor[(416), int64] */;
    %565 = @func_1958(%562) /* ty=Tensor[(9, 4, 7), float32] */;
    %566 = %563.0;
    (%564, %565, %var_7368, %566)
  };
  %567(%var_7382) /* ty=(Tensor[(416), int64], Tensor[(9, 4, 7), float32], Tensor[(252), float32], Tensor[(1, 15, 11), float64]) */
}

def @func_6358() -> Tensor[(416), int64] {
  @func_6356() /* ty=Tensor[(416), int64] */
}

def @func_10108() -> Tensor[(416), bool] {
  @func_10106() /* ty=Tensor[(416), bool] */
}

def @func_11507() -> Tensor[(416), bool] {
  %569 = fn () -> Tensor[(416), bool] {
    %568 = @func_8278() /* ty=(Tensor[(416), int64], Tensor[(416), int64], Tensor[(416), bool]) */;
    %568.2
  };
  %569() /* ty=Tensor[(416), bool] */
}

def @func_9456() -> Tensor[(416), bool] {
  %571 = fn () -> Tensor[(416), bool] {
    %570 = @func_6740() /* ty=(Tensor[(416), bool],) */;
    %570.0
  };
  %571() /* ty=Tensor[(416), bool] */
}

def @func_11534() -> (Tensor[(1, 15, 11), float32],) {
  %572 = @func_5627() /* ty=(Tensor[(1, 15, 11), float64], Tensor[(416), int64], Tensor[(2, 728), int64]) */;
  %573 = %572.0;
  %574 = cast(%573, dtype="float32") /* ty=Tensor[(1, 15, 11), float32] */;
  %575 = log10(%574) /* ty=Tensor[(1, 15, 11), float32] */;
  (%575,)
}

def @func_11248() -> (Tensor[(416), bool], Tensor[(416), int64]) {
  %576 = @func_6700() /* ty=(Tensor[(416), int64],) */;
  %577 = %576.0;
  %578 = cast(meta[relay.Constant][28] /* ty=Tensor[(416), int64] */, dtype="bool") /* ty=Tensor[(416), bool] */;
  %579 = shape_of(%577, dtype="int32") /* ty=Tensor[(1), int32] */;
  %580 = cast(%577, dtype="bool") /* ty=Tensor[(416), bool] */;
  %581 = dyn.reshape(%578, %579, newshape=[]) /* ty=Tensor[(?), bool] */;
  %582 = @func_8895() /* ty=(Tensor[(416), int64],) */;
  %583 = not_equal(%580, %581) /* ty=Tensor[(416), bool] */;
  %584 = %582.0;
  (%583, %584)
}

def @func_7670(%var_7668: Tensor[(9, 15, 11), bool]) -> (Tensor[(9, 15, 11), uint64],) {
  @func_7667(%var_7668) /* ty=(Tensor[(9, 15, 11), uint64],) */
}

def @func_8119() -> (Tensor[(9, 15, 11), bool], Tensor[(416), int64]) {
  %585 = @func_6906() /* ty=(Tensor[(1, 15, 11), float64],) */;
  %586 = %585.0;
  %587 = cast(%586, dtype="bool") /* ty=Tensor[(1, 15, 11), bool] */;
  %588 = cast(meta[relay.Constant][29] /* ty=Tensor[(9, 15, 11), float64] */, dtype="bool") /* ty=Tensor[(9, 15, 11), bool] */;
  %589 = @func_6636() /* ty=(Tensor[(416), int64],) */;
  %590 = equal(%587, %588) /* ty=Tensor[(9, 15, 11), bool] */;
  %591 = %589.0;
  (%590, %591)
}

def @func_8897() -> (Tensor[(416), int64],) {
  @func_8895() /* ty=(Tensor[(416), int64],) */
}

def @func_3302(%var_3301: Tensor[(7, 13, 16), int64]) -> (Tensor[(7, 13, 16), bool], Tensor[(4, 4), int64], Tensor[(315), float64], Tensor[(416), int64], Tensor[(2, 8, 3), int64], Tensor[(48), int64]) {
  %608 = fn (%var_3226: Tensor[(7, 13, 16), int64]) -> (Tensor[(7, 13, 16), bool], Tensor[(4, 4), int64], Tensor[(315), float64], Tensor[(416), int64], Tensor[(2, 8, 3), int64], Tensor[(48), int64]) {
    %592 = cast(meta[relay.Constant][30] /* ty=Tensor[(7, 13, 16), int64] */, dtype="bool") /* ty=Tensor[(7, 13, 16), bool] */;
    %593 = shape_of(%var_3226, dtype="int32") /* ty=Tensor[(3), int32] */;
    %594 = cast(%var_3226, dtype="bool") /* ty=Tensor[(7, 13, 16), bool] */;
    %595 = dyn.reshape(%592, %593, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %596 = cast(meta[relay.Constant][31] /* ty=Tensor[(315), float64] */, dtype="float64") /* ty=Tensor[(315), float64] */;
    %597 = cast(meta[relay.Constant][32] /* ty=Tensor[(416), int64] */, dtype="int64") /* ty=Tensor[(416), int64] */;
    %598 = reshape(%596, newshape=[7, 3, 15]) /* ty=Tensor[(7, 3, 15), float64] */;
    %599 = reshape(%597, newshape=[416]) /* ty=Tensor[(416), int64] */;
    %600 = @func_2652(%598, %599) /* ty=(Tensor[(7, 3, 15), int16], Tensor[(16), int64], Tensor[(416), int64], Tensor[(4, 4), int64]) */;
    %601 = %600.3;
    %602 = cast(%601, dtype="int64") /* ty=Tensor[(4, 4), int64] */;
    %603 = cast(meta[relay.Constant][33] /* ty=Tensor[(48), int64] */, dtype="int64") /* ty=Tensor[(48), int64] */;
    %604 = reshape(%602, newshape=[2, 8, 1]) /* ty=Tensor[(2, 8, 1), int64] */;
    %605 = reshape(%603, newshape=[2, 8, 3]) /* ty=Tensor[(2, 8, 3), int64] */;
    %606 = equal(%594, %595) /* ty=Tensor[(7, 13, 16), bool] */;
    %607 = @func_188(%604, %605) /* ty=Tensor[(2, 8, 3), int64] */;
    (%606, %601, meta[relay.Constant][31] /* ty=Tensor[(315), float64] */, meta[relay.Constant][32] /* ty=Tensor[(416), int64] */, %607, meta[relay.Constant][33] /* ty=Tensor[(48), int64] */)
  };
  %608(%var_3301) /* ty=(Tensor[(7, 13, 16), bool], Tensor[(4, 4), int64], Tensor[(315), float64], Tensor[(416), int64], Tensor[(2, 8, 3), int64], Tensor[(48), int64]) */
}

def @func_9871(%var_9865: Tensor[(14, 16, 6), int8]) -> Tensor[(14, 16, 6), int8] {
  %609 = cast(meta[relay.Constant][34] /* ty=Tensor[(14, 16, 6), int8] */, dtype="int8") /* ty=Tensor[(14, 16, 6), int8] */;
  %610 = shape_of(%var_9865, dtype="int32") /* ty=Tensor[(3), int32] */;
  %611 = cast(%var_9865, dtype="int8") /* ty=Tensor[(14, 16, 6), int8] */;
  %612 = dyn.reshape(%609, %610, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  minimum(%611, %612) /* ty=Tensor[(14, 16, 6), int8] */
}

def @func_6893() -> (Tensor[(416), int64],) {
  %615 = fn () -> (Tensor[(416), int64],) {
    %613 = @func_6636() /* ty=(Tensor[(416), int64],) */;
    %614 = %613.0;
    (%614,)
  };
  %615() /* ty=(Tensor[(416), int64],) */
}

def @func_6806() -> (Tensor[(1, 15, 11), float64],) {
  %620 = fn () -> (Tensor[(1, 15, 11), float64],) {
    %616 = @func_5627() /* ty=(Tensor[(1, 15, 11), float64], Tensor[(416), int64], Tensor[(2, 728), int64]) */;
    %617 = %616.0;
    %618 = cast(%617, dtype="float64") /* ty=Tensor[(1, 15, 11), float64] */;
    %619 = log(%618) /* ty=Tensor[(1, 15, 11), float64] */;
    (%619,)
  };
  %620() /* ty=(Tensor[(1, 15, 11), float64],) */
}

def @func_7250(%var_7193: Tensor[(30, 1), int16], %var_7200: Tensor[(112), float32]) -> (Tensor[(2, 13, 16), float64], Tensor[(180), uint8], Tensor[(1008), float32], Tensor[(416), int64], Tensor[(1, 7, 16), float32], Tensor[(112), float32], Tensor[(30, 416), bool], Tensor[(416), int64]) {
  %621 = cast(%var_7193, dtype="int16") /* ty=Tensor[(30, 1), int16] */;
  %622 = cast(meta[relay.Constant][35] /* ty=Tensor[(180), uint8] */, dtype="uint8") /* ty=Tensor[(180), uint8] */;
  %623 = cast(meta[relay.Constant][36] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %624 = reshape(%621, newshape=[30]) /* ty=Tensor[(30), int16] */;
  %625 = reshape(%622, newshape=[180]) /* ty=Tensor[(180), uint8] */;
  %626 = reshape(%623, newshape=[504, 2]) /* ty=Tensor[(504, 2), float32] */;
  %627 = @func_6110(%624, %625, %626) /* ty=(Tensor[(416), int64], int16, Tensor[(30), int16], Tensor[(416), int64], Tensor[(2, 13, 16), float64], Tensor[(180), uint8], Tensor[(504, 2), float32]) */;
  %628 = cast(%var_7200, dtype="float32") /* ty=Tensor[(112), float32] */;
  %629 = reshape(%628, newshape=[1, 7, 16]) /* ty=Tensor[(1, 7, 16), float32] */;
  %630 = @func_5663() /* ty=(Tensor[(416), int64],) */;
  %631 = %630.0;
  %632 = cast(%631, dtype="bool") /* ty=Tensor[(416), bool] */;
  %633 = cast(%var_7193, dtype="bool") /* ty=Tensor[(30, 1), bool] */;
  %634 = @func_6294() /* ty=(Tensor[(416), int64],) */;
  %635 = %627.4;
  %636 = @func_6356() /* ty=Tensor[(416), int64] */;
  %637 = @func_5884(%629) /* ty=Tensor[(1, 7, 16), float32] */;
  %638 = not_equal(%632, %633) /* ty=Tensor[(30, 416), bool] */;
  %639 = %634.0;
  (%635, meta[relay.Constant][35] /* ty=Tensor[(180), uint8] */, meta[relay.Constant][36] /* ty=Tensor[(1008), float32] */, %636, %637, %var_7200, %638, %639)
}

def @func_4185(%var_4183: Tensor[(14, 12, 16), uint8], %var_4184: Tensor[(14, 12, 16), uint8]) -> (Tensor[(14, 12, 16), float32],) {
  %655 = fn (%var_4167: Tensor[(14, 12, 16), uint8], %var_4168: Tensor[(14, 12, 16), uint8]) -> (Tensor[(14, 12, 16), float32],) {
    %640 = cast(%var_4168, dtype="bool") /* ty=Tensor[(14, 12, 16), bool] */;
    %641 = shape_of(%var_4167, dtype="int32") /* ty=Tensor[(3), int32] */;
    %642 = cast(%var_4167, dtype="bool") /* ty=Tensor[(14, 12, 16), bool] */;
    %643 = dyn.reshape(%640, %641, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %644 = greater(%642, %643) /* ty=Tensor[(14, 12, 16), bool] */;
    %645 = cast(%644, dtype="float64") /* ty=Tensor[(14, 12, 16), float64] */;
    %646 = shape_of(%var_4167, dtype="int32") /* ty=Tensor[(3), int32] */;
    %647 = cast(%var_4167, dtype="float64") /* ty=Tensor[(14, 12, 16), float64] */;
    %648 = dyn.reshape(%645, %646, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %649 = floor_mod(%647, %648) /* ty=Tensor[(14, 12, 16), float64] */;
    %650 = cast(%649, dtype="float32") /* ty=Tensor[(14, 12, 16), float32] */;
    %651 = shape_of(%644, dtype="int32") /* ty=Tensor[(3), int32] */;
    %652 = cast(%644, dtype="float32") /* ty=Tensor[(14, 12, 16), float32] */;
    %653 = dyn.reshape(%650, %651, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %654 = power(%652, %653) /* ty=Tensor[(14, 12, 16), float32] */;
    (%654,)
  };
  %655(%var_4183, %var_4184) /* ty=(Tensor[(14, 12, 16), float32],) */
}

def @func_7149(%var_7122: Tensor[(5, 15, 11), bool]) -> (Tensor[(5, 15, 11), bool],) {
  %656 = @func_7107() /* ty=Tensor[(?, 15, 11), bool] */;
  %657 = cast(%656, dtype="bool") /* ty=Tensor[(?, 15, 11), bool] */;
  %658 = cast(%var_7122, dtype="bool") /* ty=Tensor[(5, 15, 11), bool] */;
  %659 = not_equal(%657, %658) /* ty=Tensor[(5, 15, 11), bool] */;
  %660 = cast(%var_7122, dtype="bool") /* ty=Tensor[(5, 15, 11), bool] */;
  %661 = shape_of(%659, dtype="int32") /* ty=Tensor[(3), int32] */;
  %662 = cast(%659, dtype="bool") /* ty=Tensor[(5, 15, 11), bool] */;
  %663 = dyn.reshape(%660, %661, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %664 = greater(%662, %663) /* ty=Tensor[(5, 15, 11), bool] */;
  (%664,)
}

def @func_5940(%var_5938: Tensor[(30), int16]) -> (Tensor[(416), int64], Tensor[(3, 52), int8], int16, Tensor[(30), int16], Tensor[(156), int8]) {
  @func_5937(%var_5938) /* ty=(Tensor[(416), int64], Tensor[(3, 52), int8], int16, Tensor[(30), int16], Tensor[(156), int8]) */
}

def @func_10422() -> (Tensor[(416), int64], Tensor[(416), int64], Tensor[(416), int64], Tensor[(2, 8, 3), int64], Tensor[(16), int64], Tensor[(416), int64], Tensor[(12, 3, 7), bool]) {
  @func_10420() /* ty=(Tensor[(416), int64], Tensor[(416), int64], Tensor[(416), int64], Tensor[(2, 8, 3), int64], Tensor[(16), int64], Tensor[(416), int64], Tensor[(12, 3, 7), bool]) */
}

def @func_10266() -> (Tensor[(416), bool], Tensor[(416), int16]) {
  @func_10264() /* ty=(Tensor[(416), bool], Tensor[(416), int16]) */
}

def @func_7108() -> Tensor[(?, 15, 11), bool] {
  %671 = fn () -> Tensor[(?, 15, 11), bool] {
    %665 = @func_6906() /* ty=(Tensor[(1, 15, 11), float64],) */;
    %666 = %665.0;
    %667 = cast(meta[relay.Constant][37] /* ty=Tensor[(1, 15, 11), float64] */, dtype="bool") /* ty=Tensor[(1, 15, 11), bool] */;
    %668 = shape_of(%666, dtype="int32") /* ty=Tensor[(3), int32] */;
    %669 = cast(%666, dtype="bool") /* ty=Tensor[(1, 15, 11), bool] */;
    %670 = dyn.reshape(%667, %668, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_or(%669, %670) /* ty=Tensor[(?, 15, 11), bool] */
  };
  %671() /* ty=Tensor[(?, 15, 11), bool] */
}

def @func_9631() -> Tensor[(416), int64] {
  @func_9629() /* ty=Tensor[(416), int64] */
}

def @func_7017(%var_7016: Tensor[(416), bool]) -> Tensor[(416), int16] {
  %678 = fn (%var_6995: Tensor[(416), bool]) -> Tensor[(416), int16] {
    %672 = @func_6740() /* ty=(Tensor[(416), bool],) */;
    %673 = %672.0;
    %674 = cast(%var_6995, dtype="int16") /* ty=Tensor[(416), int16] */;
    %675 = shape_of(%673, dtype="int32") /* ty=Tensor[(1), int32] */;
    %676 = cast(%673, dtype="int16") /* ty=Tensor[(416), int16] */;
    %677 = dyn.reshape(%674, %675, newshape=[]) /* ty=Tensor[(?), int16] */;
    bitwise_and(%676, %677) /* ty=Tensor[(416), int16] */
  };
  %678(%var_7016) /* ty=Tensor[(416), int16] */
}

def @func_6907() -> (Tensor[(1, 15, 11), float64],) {
  %681 = fn () -> (Tensor[(1, 15, 11), float64],) {
    %679 = @func_6871() /* ty=(Tensor[(416), bool], Tensor[(416), int64], Tensor[(1, 15, 11), float64]) */;
    %680 = %679.2;
    (%680,)
  };
  %681() /* ty=(Tensor[(1, 15, 11), float64],) */
}

def @func_8895() -> (Tensor[(416), int64],) {
  %682 = @func_8119() /* ty=(Tensor[(9, 15, 11), bool], Tensor[(416), int64]) */;
  %683 = %682.1;
  (%683,)
}

def @func_10496(%var_10494: Tensor[(2730), uint32]) -> (Tensor[(1, 15, 11), float64], Tensor[(14, 15, 13), float64], Tensor[(2730), uint32]) {
  @func_10493(%var_10494) /* ty=(Tensor[(1, 15, 11), float64], Tensor[(14, 15, 13), float64], Tensor[(2730), uint32]) */
}

def @func_8402() -> (Tensor[(416), bool],) {
  %684 = @func_8278() /* ty=(Tensor[(416), int64], Tensor[(416), int64], Tensor[(416), bool]) */;
  %685 = %684.2;
  (%685,)
}

def @func_10570() -> Tensor[(416), int64] {
  %687 = fn () -> Tensor[(416), int64] {
    %686 = @func_5802() /* ty=(Tensor[(416), int64],) */;
    %686.0
  };
  %687() /* ty=Tensor[(416), int64] */
}

def @func_10918(%var_10915: Tensor[(2, 728), int64], %var_10916: Tensor[(416), int64], %var_10917: Tensor[(16), int64]) -> (Tensor[(2, 728), float32], Tensor[(168), float32], Tensor[(416), int64], Tensor[(16), int64], Tensor[(2, 728), float64], Tensor[(2, 728), float32], Tensor[(6, 11, 8), bool], int64, Tensor[(528), int64], Tensor[(416), int64]) {
  @func_10913(%var_10915, %var_10916, %var_10917) /* ty=(Tensor[(2, 728), float32], Tensor[(168), float32], Tensor[(416), int64], Tensor[(16), int64], Tensor[(2, 728), float64], Tensor[(2, 728), float32], Tensor[(6, 11, 8), bool], int64, Tensor[(528), int64], Tensor[(416), int64]) */
}

def @func_11223() -> Tensor[(416), int64] {
  %689 = fn () -> Tensor[(416), int64] {
    %688 = @func_5663() /* ty=(Tensor[(416), int64],) */;
    %688.0
  };
  %689() /* ty=Tensor[(416), int64] */
}

def @func_10638() -> Tensor[(1, 15, 11), float64] {
  %691 = fn () -> Tensor[(1, 15, 11), float64] {
    %690 = @func_6805() /* ty=(Tensor[(1, 15, 11), float64],) */;
    %690.0
  };
  %691() /* ty=Tensor[(1, 15, 11), float64] */
}

def @func_11667(%var_11658: Tensor[(10, 6, 1), float64]) -> Tensor[(10, 6, ?), bool] {
  %692 = cast(%var_11658, dtype="float64") /* ty=Tensor[(10, 6, 1), float64] */;
  %693 = asinh(%692) /* ty=Tensor[(10, 6, 1), float64] */;
  %694 = cast(%var_11658, dtype="bool") /* ty=Tensor[(10, 6, 1), bool] */;
  %695 = shape_of(%693, dtype="int32") /* ty=Tensor[(3), int32] */;
  %696 = cast(%693, dtype="bool") /* ty=Tensor[(10, 6, 1), bool] */;
  %697 = dyn.reshape(%694, %695, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%696, %697) /* ty=Tensor[(10, 6, ?), bool] */
}

def @func_5749(%var_5746: Tensor[(528), int64], %var_5747: Tensor[(16), int64], %var_5748: Tensor[(48), int64]) -> (Tensor[(416), int64], Tensor[(6, 11, 8), bool], int64, Tensor[(528), int64], Tensor[(2, 8, 3), int64], Tensor[(16), int64], Tensor[(48), int64], Tensor[(13, 2, 6), int8], Tensor[(156), int8]) {
  %715 = fn (%var_5722: Tensor[(528), int64], %var_5727: Tensor[(16), int64], %var_5728: Tensor[(48), int64]) -> (Tensor[(416), int64], Tensor[(6, 11, 8), bool], int64, Tensor[(528), int64], Tensor[(2, 8, 3), int64], Tensor[(16), int64], Tensor[(48), int64], Tensor[(13, 2, 6), int8], Tensor[(156), int8]) {
    %698 = @func_5663() /* ty=(Tensor[(416), int64],) */;
    %699 = cast(1 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %700 = cast(%var_5722, dtype="int64") /* ty=Tensor[(528), int64] */;
    %701 = reshape(%699, newshape=[]) /* ty=int64 */;
    %702 = reshape(%700, newshape=[6, 11, 8]) /* ty=Tensor[(6, 11, 8), int64] */;
    %703 = cast(%var_5727, dtype="int64") /* ty=Tensor[(16), int64] */;
    %704 = cast(%var_5728, dtype="int64") /* ty=Tensor[(48), int64] */;
    %705 = reshape(%703, newshape=[2, 8, 1]) /* ty=Tensor[(2, 8, 1), int64] */;
    %706 = reshape(%704, newshape=[2, 8, 3]) /* ty=Tensor[(2, 8, 3), int64] */;
    %707 = cast(meta[relay.Constant][38] /* ty=Tensor[(156), int8] */, dtype="int8") /* ty=Tensor[(156), int8] */;
    %708 = cast(meta[relay.Constant][38] /* ty=Tensor[(156), int8] */, dtype="int8") /* ty=Tensor[(156), int8] */;
    %709 = reshape(%707, newshape=[13, 2, 6]) /* ty=Tensor[(13, 2, 6), int8] */;
    %710 = reshape(%708, newshape=[13, 2, 6]) /* ty=Tensor[(13, 2, 6), int8] */;
    %711 = %698.0;
    %712 = @func_2788(%701, %702) /* ty=Tensor[(6, 11, 8), bool] */;
    %713 = @func_188(%705, %706) /* ty=Tensor[(2, 8, 3), int64] */;
    %714 = @func_3710(%709, %710) /* ty=Tensor[(13, 2, 6), int8] */;
    (%711, %712, 1 /* ty=int64 */, %var_5722, %713, %var_5727, %var_5728, %714, meta[relay.Constant][38] /* ty=Tensor[(156), int8] */)
  };
  %715(%var_5746, %var_5747, %var_5748) /* ty=(Tensor[(416), int64], Tensor[(6, 11, 8), bool], int64, Tensor[(528), int64], Tensor[(2, 8, 3), int64], Tensor[(16), int64], Tensor[(48), int64], Tensor[(13, 2, 6), int8], Tensor[(156), int8]) */
}

def @func_8634(%var_8633: Tensor[(2496), float64]) -> (Tensor[(416), bool], Tensor[(16, 12, 13), bool], Tensor[(2496), float64]) {
  %721 = fn (%var_8623: Tensor[(2496), float64]) -> (Tensor[(416), bool], Tensor[(16, 12, 13), bool], Tensor[(2496), float64]) {
    %716 = @func_8402() /* ty=(Tensor[(416), bool],) */;
    %717 = cast(%var_8623, dtype="float64") /* ty=Tensor[(2496), float64] */;
    %718 = reshape(%717, newshape=[16, 12, 13]) /* ty=Tensor[(16, 12, 13), float64] */;
    %719 = %716.0;
    %720 = @func_4378(%718) /* ty=Tensor[(16, 12, 13), bool] */;
    (%719, %720, %var_8623)
  };
  %721(%var_8633) /* ty=(Tensor[(416), bool], Tensor[(16, 12, 13), bool], Tensor[(2496), float64]) */
}

def @func_11648(%var_11646: Tensor[(13, 2, 4), float64], %var_11647: Tensor[(13, 2, 4), float64]) -> (Tensor[(13, 2, 4), float64], Tensor[(13, 2, 4), float32]) {
  %729 = fn (%var_11634: Tensor[(13, 2, 4), float64], %var_11635: Tensor[(13, 2, 4), float64]) -> (Tensor[(13, 2, 4), float64], Tensor[(13, 2, 4), float32]) {
    %722 = cast(%var_11635, dtype="float64") /* ty=Tensor[(13, 2, 4), float64] */;
    %723 = shape_of(%var_11634, dtype="int32") /* ty=Tensor[(3), int32] */;
    %724 = cast(%var_11634, dtype="float64") /* ty=Tensor[(13, 2, 4), float64] */;
    %725 = dyn.reshape(%722, %723, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %726 = cast(%var_11634, dtype="float32") /* ty=Tensor[(13, 2, 4), float32] */;
    %727 = divide(%724, %725) /* ty=Tensor[(13, 2, 4), float64] */;
    %728 = cos(%726) /* ty=Tensor[(13, 2, 4), float32] */;
    (%727, %728)
  };
  %729(%var_11646, %var_11647) /* ty=(Tensor[(13, 2, 4), float64], Tensor[(13, 2, 4), float32]) */
}

def @func_6529(%var_6478: Tensor[(4, 14, 16), uint32], %var_6519: Tensor[(4, 14, 16), uint32]) -> (Tensor[(416), int64], Tensor[(4, 14, 16), float64]) {
  %730 = cast(%var_6478, dtype="uint32") /* ty=Tensor[(4, 14, 16), uint32] */;
  %731 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(4, 14, 16), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %732 = cast(meta[relay.Constant][39] /* ty=Tensor[(4, 14, 16), uint32] */, dtype="uint32") /* ty=Tensor[(4, 14, 16), uint32] */;
  %733 = dyn.reshape(%730, %731, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %734 = maximum(%732, %733) /* ty=Tensor[(4, 14, 16), uint32] */;
  %735 = cast(%var_6519, dtype="float64") /* ty=Tensor[(4, 14, 16), float64] */;
  %736 = shape_of(%734, dtype="int32") /* ty=Tensor[(3), int32] */;
  %737 = cast(%734, dtype="float64") /* ty=Tensor[(4, 14, 16), float64] */;
  %738 = dyn.reshape(%735, %736, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %739 = @func_6426() /* ty=Tensor[(416), int64] */;
  %740 = divide(%737, %738) /* ty=Tensor[(4, 14, 16), float64] */;
  (%739, %740)
}

def @func_7465() -> (Tensor[(1, 15, 11), float64], Tensor[(416), bool]) {
  %752 = fn () -> (Tensor[(1, 15, 11), float64], Tensor[(416), bool]) {
    %741 = @func_6805() /* ty=(Tensor[(1, 15, 11), float64],) */;
    %742 = @func_5781() /* ty=(Tensor[(416), int64],) */;
    %743 = %742.0;
    %744 = @func_6447() /* ty=(Tensor[(416), int64],) */;
    %745 = %744.0;
    %746 = cast(%745, dtype="bool") /* ty=Tensor[(416), bool] */;
    %747 = shape_of(%743, dtype="int32") /* ty=Tensor[(1), int32] */;
    %748 = cast(%743, dtype="bool") /* ty=Tensor[(416), bool] */;
    %749 = dyn.reshape(%746, %747, newshape=[]) /* ty=Tensor[(?), bool] */;
    %750 = %741.0;
    %751 = less(%748, %749) /* ty=Tensor[(416), bool] */;
    (%750, %751)
  };
  %752() /* ty=(Tensor[(1, 15, 11), float64], Tensor[(416), bool]) */
}

def @func_5628() -> (Tensor[(1, 15, 11), float64], Tensor[(416), int64], Tensor[(2, 728), int64]) {
  %759 = fn () -> (Tensor[(1, 15, 11), float64], Tensor[(416), int64], Tensor[(2, 728), int64]) {
    %753 = cast(meta[relay.Constant][40] /* ty=Tensor[(1, 15, 11), float64] */, dtype="float64") /* ty=Tensor[(1, 15, 11), float64] */;
    %754 = cast(meta[relay.Constant][41] /* ty=Tensor[(2, 728), int64] */, dtype="int64") /* ty=Tensor[(2, 728), int64] */;
    %755 = reshape(%754, newshape=[7, 13, 16]) /* ty=Tensor[(7, 13, 16), int64] */;
    %756 = @func_3300(%755) /* ty=(Tensor[(7, 13, 16), bool], Tensor[(4, 4), int64], Tensor[(315), float64], Tensor[(416), int64], Tensor[(2, 8, 3), int64], Tensor[(48), int64]) */;
    %757 = sqrt(%753) /* ty=Tensor[(1, 15, 11), float64] */;
    %758 = %756.3;
    (%757, %758, meta[relay.Constant][41] /* ty=Tensor[(2, 728), int64] */)
  };
  %759() /* ty=(Tensor[(1, 15, 11), float64], Tensor[(416), int64], Tensor[(2, 728), int64]) */
}

def @func_6559() -> (Tensor[(416), int64], Tensor[(416), int64]) {
  %760 = @func_6447() /* ty=(Tensor[(416), int64],) */;
  %761 = @func_5954() /* ty=Tensor[(416), int64] */;
  %762 = %760.0;
  (%761, %762)
}

def @func_11083() -> (Tensor[(416), int64], Tensor[(416), int64]) {
  %763 = @func_10521() /* ty=(Tensor[(416), int64],) */;
  %764 = @func_9048() /* ty=Tensor[(416), int64] */;
  %765 = %763.0;
  (%764, %765)
}

def @func_7982(%var_7980: uint16, %var_7981: Tensor[(16, 1, 11), uint16]) -> Tensor[(16, 1, 11), uint16] {
  %768 = fn (%var_7948: uint16, %var_7949: Tensor[(16, 1, 11), uint16]) -> Tensor[(16, 1, 11), uint16] {
    %766 = cast(%var_7948, dtype="uint16") /* ty=uint16 */;
    %767 = cast(%var_7949, dtype="uint16") /* ty=Tensor[(16, 1, 11), uint16] */;
    minimum(%766, %767) /* ty=Tensor[(16, 1, 11), uint16] */
  };
  %768(%var_7980, %var_7981) /* ty=Tensor[(16, 1, 11), uint16] */
}

def @func_11536() -> (Tensor[(1, 15, 11), float32],) {
  @func_11534() /* ty=(Tensor[(1, 15, 11), float32],) */
}

def @func_8061() -> (Tensor[(1, 15, 11), float64],) {
  %769 = @func_5627() /* ty=(Tensor[(1, 15, 11), float64], Tensor[(416), int64], Tensor[(2, 728), int64]) */;
  %770 = %769.0;
  (%770,)
}

def @func_8404() -> (Tensor[(416), bool],) {
  @func_8402() /* ty=(Tensor[(416), bool],) */
}

def @func_5245(%var_5244: Tensor[(416), int64]) -> (Tensor[(16), int64], Tensor[(416), int64], Tensor[(16), int64], Tensor[(6, ?, 13), bool], Tensor[(12, 7, 12), float32], Tensor[(1008), float32], Tensor[(2, 13, 16), bool]) {
  %796 = fn (%var_5198: Tensor[(416), int64]) -> (Tensor[(16), int64], Tensor[(416), int64], Tensor[(16), int64], Tensor[(6, ?, 13), bool], Tensor[(12, 7, 12), float32], Tensor[(1008), float32], Tensor[(2, 13, 16), bool]) {
    %771 = cast(%var_5198, dtype="int64") /* ty=Tensor[(416), int64] */;
    %772 = cast(meta[relay.Constant][42] /* ty=Tensor[(16), int64] */, dtype="int64") /* ty=Tensor[(16), int64] */;
    %773 = reshape(%771, newshape=[416]) /* ty=Tensor[(416), int64] */;
    %774 = reshape(%772, newshape=[16]) /* ty=Tensor[(16), int64] */;
    %775 = @func_456(%773, %774) /* ty=(Tensor[(12, 3, 7), bool], Tensor[(2, 8, 3), int64], Tensor[(416), int64], Tensor[(16), int64], Tensor[(8, 3, 7), bool], Tensor[(168), float32], Tensor[(2, 8, 3), int64], Tensor[(2, 8, 3), int64]) */;
    %776 = cast(meta[relay.Constant][43] /* ty=Tensor[(6, 1, 13), float64] */, dtype="float64") /* ty=Tensor[(6, 1, 13), float64] */;
    %777 = rsqrt(%776) /* ty=Tensor[(6, 1, 13), float64] */;
    %778 = cast(meta[relay.Constant][43] /* ty=Tensor[(6, 1, 13), float64] */, dtype="bool") /* ty=Tensor[(6, 1, 13), bool] */;
    %779 = shape_of(%777, dtype="int32") /* ty=Tensor[(3), int32] */;
    %780 = cast(%777, dtype="bool") /* ty=Tensor[(6, 1, 13), bool] */;
    %781 = dyn.reshape(%778, %779, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %782 = cast(meta[relay.Constant][44] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
    %783 = reshape(%782, newshape=[12, 7, 12]) /* ty=Tensor[(12, 7, 12), float32] */;
    %784 = @func_3188(%783) /* ty=(Tensor[(12, 7, 12), float32],) */;
    %785 = cast(%var_5198, dtype="int64") /* ty=Tensor[(416), int64] */;
    %786 = %775.3;
    %787 = cast(%786, dtype="int64") /* ty=Tensor[(16), int64] */;
    %788 = cast(%var_5198, dtype="int64") /* ty=Tensor[(416), int64] */;
    %789 = reshape(%785, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), int64] */;
    %790 = reshape(%787, newshape=[8, 2]) /* ty=Tensor[(8, 2), int64] */;
    %791 = reshape(%788, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), int64] */;
    %792 = @func_394(%789, %790, %791) /* ty=(Tensor[(2, 13, 16), bool], Tensor[(8, 3, 7), bool], Tensor[(168), float32], Tensor[(2, 8, 3), int64], Tensor[(8, 2), int64], Tensor[(48), int64], Tensor[(8, 3, 7), bool], Tensor[(2, 8, 3), int64], Tensor[(8, 3, 7), bool], Tensor[(8, 3, 7), bool], Tensor[(2, 13, 16), bool]) */;
    %793 = less(%780, %781) /* ty=Tensor[(6, ?, 13), bool] */;
    %794 = %784.0;
    %795 = %792.0;
    (%786, %var_5198, meta[relay.Constant][42] /* ty=Tensor[(16), int64] */, %793, %794, meta[relay.Constant][44] /* ty=Tensor[(1008), float32] */, %795)
  };
  %796(%var_5244) /* ty=(Tensor[(16), int64], Tensor[(416), int64], Tensor[(16), int64], Tensor[(6, ?, 13), bool], Tensor[(12, 7, 12), float32], Tensor[(1008), float32], Tensor[(2, 13, 16), bool]) */
}

def @func_3911(%var_3906: Tensor[(3, 7, 7), int16], %var_3907: Tensor[(3, 7, 7), int16], %var_3908: Tensor[(810), float32], %var_3909: Tensor[(8, 52), int64], %var_3910: Tensor[(16), int64]) -> (Tensor[(3, 7, 7), int16], Tensor[(15, 9, 6), float32], Tensor[(810), float32], Tensor[(16), int64], Tensor[(8, 52), float64], Tensor[(6, 11, 8), bool], int64, Tensor[(528), int64]) {
  %817 = fn (%var_3862: Tensor[(3, 7, 7), int16], %var_3863: Tensor[(3, 7, 7), int16], %var_3871: Tensor[(810), float32], %var_3872: Tensor[(8, 52), int64], %var_3873: Tensor[(16), int64]) -> (Tensor[(3, 7, 7), int16], Tensor[(15, 9, 6), float32], Tensor[(810), float32], Tensor[(16), int64], Tensor[(8, 52), float64], Tensor[(6, 11, 8), bool], int64, Tensor[(528), int64]) {
    %797 = cast(%var_3863, dtype="int16") /* ty=Tensor[(3, 7, 7), int16] */;
    %798 = shape_of(%var_3862, dtype="int32") /* ty=Tensor[(3), int32] */;
    %799 = cast(%var_3862, dtype="int16") /* ty=Tensor[(3, 7, 7), int16] */;
    %800 = dyn.reshape(%797, %798, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %801 = cast(%var_3871, dtype="float32") /* ty=Tensor[(810), float32] */;
    %802 = cast(%var_3872, dtype="int64") /* ty=Tensor[(8, 52), int64] */;
    %803 = cast(%var_3873, dtype="int64") /* ty=Tensor[(16), int64] */;
    %804 = reshape(%801, newshape=[15, 9, 6]) /* ty=Tensor[(15, 9, 6), float32] */;
    %805 = reshape(%802, newshape=[2, 208]) /* ty=Tensor[(2, 208), int64] */;
    %806 = reshape(%803, newshape=[16]) /* ty=Tensor[(16), int64] */;
    %807 = @func_3807(%804, %805, %806) /* ty=(Tensor[(15, 9, 6), float32], Tensor[(8, 3, 7), bool], Tensor[(2, 208), int64], Tensor[(16), int64]) */;
    %808 = cast(%var_3872, dtype="float64") /* ty=Tensor[(8, 52), float64] */;
    %809 = cast(-5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %810 = cast(meta[relay.Constant][45] /* ty=Tensor[(528), int64] */, dtype="int64") /* ty=Tensor[(528), int64] */;
    %811 = reshape(%809, newshape=[]) /* ty=int64 */;
    %812 = reshape(%810, newshape=[6, 11, 8]) /* ty=Tensor[(6, 11, 8), int64] */;
    %813 = logical_xor(%799, %800) /* ty=Tensor[(3, 7, 7), int16] */;
    %814 = %807.0;
    %815 = rsqrt(%808) /* ty=Tensor[(8, 52), float64] */;
    %816 = @func_2788(%811, %812) /* ty=Tensor[(6, 11, 8), bool] */;
    (%813, %814, %var_3871, %var_3873, %815, %816, -5 /* ty=int64 */, meta[relay.Constant][45] /* ty=Tensor[(528), int64] */)
  };
  %817(%var_3906, %var_3907, %var_3908, %var_3909, %var_3910) /* ty=(Tensor[(3, 7, 7), int16], Tensor[(15, 9, 6), float32], Tensor[(810), float32], Tensor[(16), int64], Tensor[(8, 52), float64], Tensor[(6, 11, 8), bool], int64, Tensor[(528), int64]) */
}

def @func_6238(%var_6236: Tensor[(16, 1), int64], %var_6237: Tensor[(1008), float32]) -> (Tensor[(416), int64], Tensor[(2, 8, 3), int64], Tensor[(24, 22), int64], Tensor[(16, 1), int64], Tensor[(4, 12), int64], Tensor[(12, 7, 12), float32], Tensor[(1008), float32]) {
  %832 = fn (%var_6224: Tensor[(16, 1), int64], %var_6233: Tensor[(1008), float32]) -> (Tensor[(416), int64], Tensor[(2, 8, 3), int64], Tensor[(24, 22), int64], Tensor[(16, 1), int64], Tensor[(4, 12), int64], Tensor[(12, 7, 12), float32], Tensor[(1008), float32]) {
    %818 = @func_5802() /* ty=(Tensor[(416), int64],) */;
    %819 = cast(meta[relay.Constant][46] /* ty=Tensor[(24, 22), int64] */, dtype="int64") /* ty=Tensor[(24, 22), int64] */;
    %820 = cast(%var_6224, dtype="int64") /* ty=Tensor[(16, 1), int64] */;
    %821 = cast(meta[relay.Constant][47] /* ty=Tensor[(4, 12), int64] */, dtype="int64") /* ty=Tensor[(4, 12), int64] */;
    %822 = reshape(%819, newshape=[528]) /* ty=Tensor[(528), int64] */;
    %823 = reshape(%820, newshape=[16]) /* ty=Tensor[(16), int64] */;
    %824 = reshape(%821, newshape=[48]) /* ty=Tensor[(48), int64] */;
    %825 = @func_5745(%822, %823, %824) /* ty=(Tensor[(416), int64], Tensor[(6, 11, 8), bool], int64, Tensor[(528), int64], Tensor[(2, 8, 3), int64], Tensor[(16), int64], Tensor[(48), int64], Tensor[(13, 2, 6), int8], Tensor[(156), int8]) */;
    %826 = cast(%var_6233, dtype="float32") /* ty=Tensor[(1008), float32] */;
    %827 = reshape(%826, newshape=[12, 7, 12]) /* ty=Tensor[(12, 7, 12), float32] */;
    %828 = @func_3188(%827) /* ty=(Tensor[(12, 7, 12), float32],) */;
    %829 = %818.0;
    %830 = %825.4;
    %831 = %828.0;
    (%829, %830, meta[relay.Constant][46] /* ty=Tensor[(24, 22), int64] */, %var_6224, meta[relay.Constant][47] /* ty=Tensor[(4, 12), int64] */, %831, %var_6233)
  };
  %832(%var_6236, %var_6237) /* ty=(Tensor[(416), int64], Tensor[(2, 8, 3), int64], Tensor[(24, 22), int64], Tensor[(16, 1), int64], Tensor[(4, 12), int64], Tensor[(12, 7, 12), float32], Tensor[(1008), float32]) */
}

def @func_6356() -> Tensor[(416), int64] {
  %833 = @func_5663() /* ty=(Tensor[(416), int64],) */;
  %833.0
}

def @func_6172() -> (Tensor[(3, 5, 6), float64],) {
  @func_6170() /* ty=(Tensor[(3, 5, 6), float64],) */
}

def @func_11269(%var_11266: Tensor[(8, 66), int64], %var_11267: Tensor[(16), int64]) -> (Tensor[(1, 15, 11), float64], Tensor[(48), int64], Tensor[(8, 66), int64], Tensor[(16), int64]) {
  %834 = @func_6805() /* ty=(Tensor[(1, 15, 11), float64],) */;
  %835 = cast(%var_11266, dtype="int64") /* ty=Tensor[(8, 66), int64] */;
  %836 = cast(%var_11267, dtype="int64") /* ty=Tensor[(16), int64] */;
  %837 = reshape(%835, newshape=[1, 528]) /* ty=Tensor[(1, 528), int64] */;
  %838 = reshape(%836, newshape=[16]) /* ty=Tensor[(16), int64] */;
  %839 = @func_10080(%837, %838) /* ty=(Tensor[(9, 15, 11), uint64], Tensor[(6, 12, 4), int8], Tensor[(416), int64], Tensor[(1, 528), int64], Tensor[(16), int64], Tensor[(48), int64]) */;
  %840 = %834.0;
  %841 = %839.5;
  (%840, %841, %var_11266, %var_11267)
}

def @func_10781(%var_10771: Tensor[(156), int8], %var_10772: Tensor[(110), float32]) -> (Tensor[(416), int64], Tensor[(16, 12, 13), bool], Tensor[(416), int64], Tensor[(156, 16), float64], Tensor[(416), int64], Tensor[(156), int8], Tensor[(110), float32], Tensor[(12, 84), float32]) {
  %842 = cast(meta[relay.Constant][48] /* ty=Tensor[(156, 16), float64] */, dtype="float64") /* ty=Tensor[(156, 16), float64] */;
  %843 = reshape(%842, newshape=[16, 12, 13]) /* ty=Tensor[(16, 12, 13), float64] */;
  %844 = @func_9252() /* ty=(Tensor[(416), int64],) */;
  %845 = cast(meta[relay.Constant][48] /* ty=Tensor[(156, 16), float64] */, dtype="float64") /* ty=Tensor[(156, 16), float64] */;
  %846 = cast(%var_10771, dtype="int8") /* ty=Tensor[(156), int8] */;
  %847 = cast(%var_10772, dtype="float32") /* ty=Tensor[(110), float32] */;
  %848 = cast(meta[relay.Constant][49] /* ty=Tensor[(12, 84), float32] */, dtype="float32") /* ty=Tensor[(12, 84), float32] */;
  %849 = reshape(%846, newshape=[156, 1]) /* ty=Tensor[(156, 1), int8] */;
  %850 = reshape(%847, newshape=[110]) /* ty=Tensor[(110), float32] */;
  %851 = reshape(%848, newshape=[1008]) /* ty=Tensor[(1008), float32] */;
  %852 = @func_9925(%849, %850, %851) /* ty=(Tensor[(416), int64], Tensor[(3, 52), int8], int16, Tensor[(30), int16], Tensor[(156, 1), int8], Tensor[(110), float32], Tensor[(?, 15, 11), bool], Tensor[(11, 10, 48), int8], Tensor[(3, 4, 15), uint8], Tensor[(3, 60), uint8], Tensor[(1008), float32]) */;
  %853 = @func_8410() /* ty=Tensor[(416), int64] */;
  %854 = @func_4378(%843) /* ty=Tensor[(16, 12, 13), bool] */;
  %855 = %844.0;
  %856 = sin(%845) /* ty=Tensor[(156, 16), float64] */;
  %857 = %852.0;
  (%853, %854, %855, %856, %857, %var_10771, %var_10772, meta[relay.Constant][49] /* ty=Tensor[(12, 84), float32] */)
}

def @func_9578(%var_9575: Tensor[(528), int64], %var_9576: Tensor[(16), int64], %var_9577: Tensor[(12, 4), int64]) -> (Tensor[(416), int64], Tensor[(156), int8], Tensor[(528), int64], Tensor[(16), int64], Tensor[(12, 4), int64]) {
  %868 = fn (%var_9553: Tensor[(528), int64], %var_9554: Tensor[(16), int64], %var_9555: Tensor[(12, 4), int64]) -> (Tensor[(416), int64], Tensor[(156), int8], Tensor[(528), int64], Tensor[(16), int64], Tensor[(12, 4), int64]) {
    %858 = @func_6871() /* ty=(Tensor[(416), bool], Tensor[(416), int64], Tensor[(1, 15, 11), float64]) */;
    %859 = cast(%var_9553, dtype="int64") /* ty=Tensor[(528), int64] */;
    %860 = cast(%var_9554, dtype="int64") /* ty=Tensor[(16), int64] */;
    %861 = cast(%var_9555, dtype="int64") /* ty=Tensor[(12, 4), int64] */;
    %862 = reshape(%859, newshape=[528]) /* ty=Tensor[(528), int64] */;
    %863 = reshape(%860, newshape=[16]) /* ty=Tensor[(16), int64] */;
    %864 = reshape(%861, newshape=[48]) /* ty=Tensor[(48), int64] */;
    %865 = @func_5745(%862, %863, %864) /* ty=(Tensor[(416), int64], Tensor[(6, 11, 8), bool], int64, Tensor[(528), int64], Tensor[(2, 8, 3), int64], Tensor[(16), int64], Tensor[(48), int64], Tensor[(13, 2, 6), int8], Tensor[(156), int8]) */;
    %866 = %858.1;
    %867 = %865.8;
    (%866, %867, %var_9553, %var_9554, %var_9555)
  };
  %868(%var_9575, %var_9576, %var_9577) /* ty=(Tensor[(416), int64], Tensor[(156), int8], Tensor[(528), int64], Tensor[(16), int64], Tensor[(12, 4), int64]) */
}

def @func_9598() -> Tensor[(416), int64] {
  @func_9596() /* ty=Tensor[(416), int64] */
}

def @func_6533(%var_6531: Tensor[(4, 14, 16), uint32], %var_6532: Tensor[(4, 14, 16), uint32]) -> (Tensor[(416), int64], Tensor[(4, 14, 16), float64]) {
  @func_6529(%var_6531, %var_6532) /* ty=(Tensor[(416), int64], Tensor[(4, 14, 16), float64]) */
}

def @func_5664() -> (Tensor[(416), int64],) {
  %871 = fn () -> (Tensor[(416), int64],) {
    %869 = @func_5627() /* ty=(Tensor[(1, 15, 11), float64], Tensor[(416), int64], Tensor[(2, 728), int64]) */;
    %870 = %869.1;
    (%870,)
  };
  %871() /* ty=(Tensor[(416), int64],) */
}

def @func_10521() -> (Tensor[(416), int64],) {
  %872 = @func_9319() /* ty=Tensor[(416), int64] */;
  (%872,)
}

def @func_10785(%var_10783: Tensor[(156), int8], %var_10784: Tensor[(110), float32]) -> (Tensor[(416), int64], Tensor[(16, 12, 13), bool], Tensor[(416), int64], Tensor[(156, 16), float64], Tensor[(416), int64], Tensor[(156), int8], Tensor[(110), float32], Tensor[(12, 84), float32]) {
  @func_10781(%var_10783, %var_10784) /* ty=(Tensor[(416), int64], Tensor[(16, 12, 13), bool], Tensor[(416), int64], Tensor[(156, 16), float64], Tensor[(416), int64], Tensor[(156), int8], Tensor[(110), float32], Tensor[(12, 84), float32]) */
}

def @func_4320(%var_4317: Tensor[(14, 15, 13), uint32], %var_4318: Tensor[(14, 15, 13), uint32], %var_4319: Tensor[(14, 15, 13), bool]) -> (Tensor[(14, 15, 13), bool], Tensor[(14, 15, 13), float64]) {
  %887 = fn (%var_4283: Tensor[(14, 15, 13), uint32], %var_4284: Tensor[(14, 15, 13), uint32], %var_4289: Tensor[(14, 15, 13), bool]) -> (Tensor[(14, 15, 13), bool], Tensor[(14, 15, 13), float64]) {
    %873 = cast(%var_4284, dtype="bool") /* ty=Tensor[(14, 15, 13), bool] */;
    %874 = shape_of(%var_4283, dtype="int32") /* ty=Tensor[(3), int32] */;
    %875 = cast(%var_4283, dtype="bool") /* ty=Tensor[(14, 15, 13), bool] */;
    %876 = dyn.reshape(%873, %874, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %877 = greater_equal(%875, %876) /* ty=Tensor[(14, 15, 13), bool] */;
    %878 = cast(%var_4289, dtype="bool") /* ty=Tensor[(14, 15, 13), bool] */;
    %879 = shape_of(%877, dtype="int32") /* ty=Tensor[(3), int32] */;
    %880 = cast(%877, dtype="bool") /* ty=Tensor[(14, 15, 13), bool] */;
    %881 = dyn.reshape(%878, %879, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %882 = cast(%var_4284, dtype="float32") /* ty=Tensor[(14, 15, 13), float32] */;
    %883 = asin(%882) /* ty=Tensor[(14, 15, 13), float32] */;
    %884 = cast(%883, dtype="float64") /* ty=Tensor[(14, 15, 13), float64] */;
    %885 = less_equal(%880, %881) /* ty=Tensor[(14, 15, 13), bool] */;
    %886 = log2(%884) /* ty=Tensor[(14, 15, 13), float64] */;
    (%885, %886)
  };
  %887(%var_4317, %var_4318, %var_4319) /* ty=(Tensor[(14, 15, 13), bool], Tensor[(14, 15, 13), float64]) */
}

def @func_586(%var_580: Tensor[(13, 9, 11), int64], %var_581: Tensor[(13, 9, 11), int64]) -> Tensor[(13, 9, 11), int64] {
  %888 = cast(%var_581, dtype="int64") /* ty=Tensor[(13, 9, 11), int64] */;
  %889 = shape_of(%var_580, dtype="int32") /* ty=Tensor[(3), int32] */;
  %890 = cast(%var_580, dtype="int64") /* ty=Tensor[(13, 9, 11), int64] */;
  %891 = dyn.reshape(%888, %889, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  bitwise_xor(%890, %891) /* ty=Tensor[(13, 9, 11), int64] */
}

def @func_5995(%var_5988: Tensor[(252), float32]) -> (Tensor[(416), int64], Tensor[(9, 4, 7), float32], Tensor[(252), float32]) {
  %892 = @func_5781() /* ty=(Tensor[(416), int64],) */;
  %893 = cast(%var_5988, dtype="float32") /* ty=Tensor[(252), float32] */;
  %894 = reshape(%893, newshape=[9, 4, 7]) /* ty=Tensor[(9, 4, 7), float32] */;
  %895 = %892.0;
  %896 = @func_1958(%894) /* ty=Tensor[(9, 4, 7), float32] */;
  (%895, %896, %var_5988)
}

def @func_8915() -> (Tensor[(1, 15, 11), float64],) {
  %899 = fn () -> (Tensor[(1, 15, 11), float64],) {
    %897 = @func_6805() /* ty=(Tensor[(1, 15, 11), float64],) */;
    %898 = %897.0;
    (%898,)
  };
  %899() /* ty=(Tensor[(1, 15, 11), float64],) */
}

def @func_6636() -> (Tensor[(416), int64],) {
  %900 = @func_6156() /* ty=(Tensor[(416), int64],) */;
  %901 = %900.0;
  (%901,)
}

def @func_8279() -> (Tensor[(416), int64], Tensor[(416), int64], Tensor[(416), bool]) {
  %906 = fn () -> (Tensor[(416), int64], Tensor[(416), int64], Tensor[(416), bool]) {
    %902 = @func_6740() /* ty=(Tensor[(416), bool],) */;
    %903 = @func_6426() /* ty=Tensor[(416), int64] */;
    %904 = @func_6426() /* ty=Tensor[(416), int64] */;
    %905 = %902.0;
    (%903, %904, %905)
  };
  %906() /* ty=(Tensor[(416), int64], Tensor[(416), int64], Tensor[(416), bool]) */
}

def @func_590(%var_588: Tensor[(13, 9, 11), int64], %var_589: Tensor[(13, 9, 11), int64]) -> Tensor[(13, 9, 11), int64] {
  @func_586(%var_588, %var_589) /* ty=Tensor[(13, 9, 11), int64] */
}

def @func_11273(%var_11271: Tensor[(8, 66), int64], %var_11272: Tensor[(16), int64]) -> (Tensor[(1, 15, 11), float64], Tensor[(48), int64], Tensor[(8, 66), int64], Tensor[(16), int64]) {
  @func_11269(%var_11271, %var_11272) /* ty=(Tensor[(1, 15, 11), float64], Tensor[(48), int64], Tensor[(8, 66), int64], Tensor[(16), int64]) */
}

def @func_11132(%var_11110: Tensor[(1, 15, 11), float64]) -> (Tensor[(?, 15, 11), uint64], Tensor[(416), bool], Tensor[(1, 15, 11), float64]) {
  %907 = @func_9972() /* ty=(Tensor[(1, 15, 11), float64],) */;
  %908 = %907.0;
  %909 = cast(%var_11110, dtype="uint64") /* ty=Tensor[(1, 15, 11), uint64] */;
  %910 = shape_of(%908, dtype="int32") /* ty=Tensor[(3), int32] */;
  %911 = cast(%908, dtype="uint64") /* ty=Tensor[(1, 15, 11), uint64] */;
  %912 = dyn.reshape(%909, %910, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %913 = @func_9244() /* ty=(Tensor[(416), int64], Tensor[(1, 15, 11), float64], Tensor[(1, 15, 11), float64], Tensor[(1, 15, 11), float32]) */;
  %914 = bitwise_or(%911, %912) /* ty=Tensor[(?, 15, 11), uint64] */;
  %915 = @func_9455() /* ty=Tensor[(416), bool] */;
  %916 = %913.1;
  (%914, %915, %916)
}

def @func_4378(%var_4367: Tensor[(16, 12, 13), float64]) -> Tensor[(16, 12, 13), bool] {
  %917 = cast(%var_4367, dtype="float64") /* ty=Tensor[(16, 12, 13), float64] */;
  %918 = tan(%917) /* ty=Tensor[(16, 12, 13), float64] */;
  %919 = cast(%var_4367, dtype="bool") /* ty=Tensor[(16, 12, 13), bool] */;
  %920 = shape_of(%918, dtype="int32") /* ty=Tensor[(3), int32] */;
  %921 = cast(%918, dtype="bool") /* ty=Tensor[(16, 12, 13), bool] */;
  %922 = dyn.reshape(%919, %920, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%921, %922) /* ty=Tensor[(16, 12, 13), bool] */
}

def @func_9139() -> (Tensor[(416), int64],) {
  %925 = fn () -> (Tensor[(416), int64],) {
    %923 = @func_8895() /* ty=(Tensor[(416), int64],) */;
    %924 = %923.0;
    (%924,)
  };
  %925() /* ty=(Tensor[(416), int64],) */
}

def @func_5782() -> (Tensor[(416), int64],) {
  %928 = fn () -> (Tensor[(416), int64],) {
    %926 = @func_5663() /* ty=(Tensor[(416), int64],) */;
    %927 = %926.0;
    (%927,)
  };
  %928() /* ty=(Tensor[(416), int64],) */
}

def @func_10080(%var_10068: Tensor[(1, 528), int64], %var_10069: Tensor[(16), int64]) -> (Tensor[(9, 15, 11), uint64], Tensor[(6, 12, 4), int8], Tensor[(416), int64], Tensor[(1, 528), int64], Tensor[(16), int64], Tensor[(48), int64]) {
  %929 = @func_9956() /* ty=(Tensor[(?, 15, 11), bool], Tensor[(9, 15, 11), uint64], Tensor[(1485), bool]) */;
  %930 = cast(meta[relay.Constant][50] /* ty=Tensor[(288), bool] */, dtype="bool") /* ty=Tensor[(288), bool] */;
  %931 = reshape(%930, newshape=[6, 12, 4]) /* ty=Tensor[(6, 12, 4), bool] */;
  %932 = @func_1801(%931) /* ty=Tensor[(6, 12, 4), bool] */;
  %933 = cast(meta[relay.Constant][50] /* ty=Tensor[(288), bool] */, dtype="int8") /* ty=Tensor[(288), int8] */;
  %934 = shape_of(%932, dtype="int32") /* ty=Tensor[(3), int32] */;
  %935 = cast(%932, dtype="int8") /* ty=Tensor[(6, 12, 4), int8] */;
  %936 = dyn.reshape(%933, %934, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %937 = cast(%var_10068, dtype="int64") /* ty=Tensor[(1, 528), int64] */;
  %938 = cast(%var_10069, dtype="int64") /* ty=Tensor[(16), int64] */;
  %939 = cast(meta[relay.Constant][51] /* ty=Tensor[(48), int64] */, dtype="int64") /* ty=Tensor[(48), int64] */;
  %940 = reshape(%937, newshape=[528]) /* ty=Tensor[(528), int64] */;
  %941 = reshape(%938, newshape=[16]) /* ty=Tensor[(16), int64] */;
  %942 = reshape(%939, newshape=[12, 4]) /* ty=Tensor[(12, 4), int64] */;
  %943 = @func_9574(%940, %941, %942) /* ty=(Tensor[(416), int64], Tensor[(156), int8], Tensor[(528), int64], Tensor[(16), int64], Tensor[(12, 4), int64]) */;
  %944 = %929.1;
  %945 = left_shift(%935, %936) /* ty=Tensor[(6, 12, 4), int8] */;
  %946 = %943.0;
  (%944, %945, %946, %var_10068, %var_10069, meta[relay.Constant][51] /* ty=Tensor[(48), int64] */)
}

def @func_10006() -> (Tensor[(?, 15, 11), bool], Tensor[(1, 15, 11), float64]) {
  %947 = @func_9972() /* ty=(Tensor[(1, 15, 11), float64],) */;
  %948 = @func_9358() /* ty=Tensor[(?, 15, 11), bool] */;
  %949 = %947.0;
  (%948, %949)
}

def @func_9112() -> (Tensor[(1, 15, 11), float64],) {
  %950 = @func_8061() /* ty=(Tensor[(1, 15, 11), float64],) */;
  %951 = %950.0;
  (%951,)
}

def @func_1801(%var_1793: Tensor[(6, 12, 4), bool]) -> Tensor[(6, 12, 4), bool] {
  %952 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %953 = cast(%var_1793, dtype="bool") /* ty=Tensor[(6, 12, 4), bool] */;
  %954 = logical_and(%952, %953) /* ty=Tensor[(6, 12, 4), bool] */;
  %955 = cast(%954, dtype="bool") /* ty=Tensor[(6, 12, 4), bool] */;
  %956 = shape_of(%var_1793, dtype="int32") /* ty=Tensor[(3), int32] */;
  %957 = cast(%var_1793, dtype="bool") /* ty=Tensor[(6, 12, 4), bool] */;
  %958 = dyn.reshape(%955, %956, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%957, %958) /* ty=Tensor[(6, 12, 4), bool] */
}

def @func_9050() -> Tensor[(416), int64] {
  @func_9048() /* ty=Tensor[(416), int64] */
}

def @func_8146() -> (Tensor[(416), int64],) {
  @func_8144() /* ty=(Tensor[(416), int64],) */
}

def @func_7946(%var_7943: Tensor[(8, 2), int64], %var_7944: Tensor[(48), int64], %var_7945: Tensor[(1008), float32]) -> (Tensor[(416), int64], Tensor[(528), int64], Tensor[(528), int64], Tensor[(8, 2), int64], Tensor[(48), int64], Tensor[(8, 3, 7), bool], Tensor[(168), float32], Tensor[(12, 7, 12), float32], Tensor[(1008), float32]) {
  %978 = fn (%var_7894: Tensor[(8, 2), int64], %var_7895: Tensor[(48), int64], %var_7930: Tensor[(1008), float32]) -> (Tensor[(416), int64], Tensor[(528), int64], Tensor[(528), int64], Tensor[(8, 2), int64], Tensor[(48), int64], Tensor[(8, 3, 7), bool], Tensor[(168), float32], Tensor[(12, 7, 12), float32], Tensor[(1008), float32]) {
    %959 = @func_5781() /* ty=(Tensor[(416), int64],) */;
    %960 = cast(meta[relay.Constant][52] /* ty=Tensor[(528), int64] */, dtype="int64") /* ty=Tensor[(528), int64] */;
    %961 = cast(%var_7894, dtype="int64") /* ty=Tensor[(8, 2), int64] */;
    %962 = cast(%var_7895, dtype="int64") /* ty=Tensor[(48), int64] */;
    %963 = reshape(%960, newshape=[528]) /* ty=Tensor[(528), int64] */;
    %964 = reshape(%961, newshape=[16]) /* ty=Tensor[(16), int64] */;
    %965 = reshape(%962, newshape=[48]) /* ty=Tensor[(48), int64] */;
    %966 = @func_5745(%963, %964, %965) /* ty=(Tensor[(416), int64], Tensor[(6, 11, 8), bool], int64, Tensor[(528), int64], Tensor[(2, 8, 3), int64], Tensor[(16), int64], Tensor[(48), int64], Tensor[(13, 2, 6), int8], Tensor[(156), int8]) */;
    %967 = cast(meta[relay.Constant][53] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
    %968 = cast(meta[relay.Constant][53] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
    %969 = reshape(%967, newshape=[8, 3, 7]) /* ty=Tensor[(8, 3, 7), float32] */;
    %970 = reshape(%968, newshape=[8, 3, 7]) /* ty=Tensor[(8, 3, 7), float32] */;
    %971 = cast(%var_7930, dtype="float32") /* ty=Tensor[(1008), float32] */;
    %972 = reshape(%971, newshape=[12, 7, 12]) /* ty=Tensor[(12, 7, 12), float32] */;
    %973 = @func_3188(%972) /* ty=(Tensor[(12, 7, 12), float32],) */;
    %974 = %959.0;
    %975 = %966.3;
    %976 = @func_26(%969, %970) /* ty=Tensor[(8, 3, 7), bool] */;
    %977 = %973.0;
    (%974, %975, meta[relay.Constant][52] /* ty=Tensor[(528), int64] */, %var_7894, %var_7895, %976, meta[relay.Constant][53] /* ty=Tensor[(168), float32] */, %977, %var_7930)
  };
  %978(%var_7943, %var_7944, %var_7945) /* ty=(Tensor[(416), int64], Tensor[(528), int64], Tensor[(528), int64], Tensor[(8, 2), int64], Tensor[(48), int64], Tensor[(8, 3, 7), bool], Tensor[(168), float32], Tensor[(12, 7, 12), float32], Tensor[(1008), float32]) */
}

def @func_7498(%var_7496: Tensor[(11, 10, 1), float32], %var_7497: Tensor[(4, 12), int64]) -> (Tensor[(11, 10, 1), float32], Tensor[(2, 8, 3), int64], Tensor[(16), int64], Tensor[(4, 12), int64]) {
  %986 = fn (%var_7477: Tensor[(11, 10, 1), float32], %var_7487: Tensor[(4, 12), int64]) -> (Tensor[(11, 10, 1), float32], Tensor[(2, 8, 3), int64], Tensor[(16), int64], Tensor[(4, 12), int64]) {
    %979 = cast(%var_7477, dtype="float32") /* ty=Tensor[(11, 10, 1), float32] */;
    %980 = cast(meta[relay.Constant][54] /* ty=Tensor[(16), int64] */, dtype="int64") /* ty=Tensor[(16), int64] */;
    %981 = cast(%var_7487, dtype="int64") /* ty=Tensor[(4, 12), int64] */;
    %982 = reshape(%980, newshape=[2, 8, 1]) /* ty=Tensor[(2, 8, 1), int64] */;
    %983 = reshape(%981, newshape=[2, 8, 3]) /* ty=Tensor[(2, 8, 3), int64] */;
    %984 = atanh(%979) /* ty=Tensor[(11, 10, 1), float32] */;
    %985 = @func_188(%982, %983) /* ty=Tensor[(2, 8, 3), int64] */;
    (%984, %985, meta[relay.Constant][54] /* ty=Tensor[(16), int64] */, %var_7487)
  };
  %986(%var_7496, %var_7497) /* ty=(Tensor[(11, 10, 1), float32], Tensor[(2, 8, 3), int64], Tensor[(16), int64], Tensor[(4, 12), int64]) */
}

def @func_11457() -> Tensor[(416), float64] {
  @func_11455() /* ty=Tensor[(416), float64] */
}

def @func_10420() -> (Tensor[(416), int64], Tensor[(416), int64], Tensor[(416), int64], Tensor[(2, 8, 3), int64], Tensor[(16), int64], Tensor[(416), int64], Tensor[(12, 3, 7), bool]) {
  %987 = @func_8144() /* ty=(Tensor[(416), int64],) */;
  %988 = @func_6636() /* ty=(Tensor[(416), int64],) */;
  %989 = @func_7282() /* ty=(Tensor[(416), int64],) */;
  %990 = %988.0;
  %991 = cast(%990, dtype="int64") /* ty=Tensor[(416), int64] */;
  %992 = cast(meta[relay.Constant][55] /* ty=Tensor[(16), int64] */, dtype="int64") /* ty=Tensor[(16), int64] */;
  %993 = reshape(%991, newshape=[416]) /* ty=Tensor[(416), int64] */;
  %994 = reshape(%992, newshape=[16]) /* ty=Tensor[(16), int64] */;
  %995 = @func_456(%993, %994) /* ty=(Tensor[(12, 3, 7), bool], Tensor[(2, 8, 3), int64], Tensor[(416), int64], Tensor[(16), int64], Tensor[(8, 3, 7), bool], Tensor[(168), float32], Tensor[(2, 8, 3), int64], Tensor[(2, 8, 3), int64]) */;
  %996 = @func_5663() /* ty=(Tensor[(416), int64],) */;
  %997 = %987.0;
  %998 = cast(%997, dtype="int64") /* ty=Tensor[(416), int64] */;
  %999 = cast(meta[relay.Constant][55] /* ty=Tensor[(16), int64] */, dtype="int64") /* ty=Tensor[(16), int64] */;
  %1000 = reshape(%998, newshape=[416]) /* ty=Tensor[(416), int64] */;
  %1001 = reshape(%999, newshape=[16]) /* ty=Tensor[(16), int64] */;
  %1002 = @func_456(%1000, %1001) /* ty=(Tensor[(12, 3, 7), bool], Tensor[(2, 8, 3), int64], Tensor[(416), int64], Tensor[(16), int64], Tensor[(8, 3, 7), bool], Tensor[(168), float32], Tensor[(2, 8, 3), int64], Tensor[(2, 8, 3), int64]) */;
  %1003 = %989.0;
  %1004 = %995.6;
  %1005 = %996.0;
  %1006 = %1002.0;
  (%997, %990, %1003, %1004, meta[relay.Constant][55] /* ty=Tensor[(16), int64] */, %1005, %1006)
}

def @func_8063() -> (Tensor[(1, 15, 11), float64],) {
  @func_8061() /* ty=(Tensor[(1, 15, 11), float64],) */
}

def @func_9319() -> Tensor[(416), int64] {
  %1007 = @func_9036() /* ty=(Tensor[(416), int64],) */;
  %1007.0
}

def @func_9974() -> (Tensor[(1, 15, 11), float64],) {
  @func_9972() /* ty=(Tensor[(1, 15, 11), float64],) */
}

def @func_8680() -> Tensor[(1, 15, 11), float64] {
  %1009 = fn () -> Tensor[(1, 15, 11), float64] {
    %1008 = @func_8061() /* ty=(Tensor[(1, 15, 11), float64],) */;
    %1008.0
  };
  %1009() /* ty=Tensor[(1, 15, 11), float64] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen567/build/output.py:2736: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen567/build/output.py", line 2741, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(640) tvmgen_default_fused_reshape_logical_xor_kernel0(short* __restrict__ T_logical_xor, short* __restrict__ placeholder, short* __restrict__ placeholder1) {
  T_logical_xor[(((int)threadIdx.x))] = (placeholder[(((int)threadIdx.x))] ^ placeholder1[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~

